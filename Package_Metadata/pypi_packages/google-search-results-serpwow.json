{"info": {"author": "SerpWow", "author_email": "hello@serpwow.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7"], "description": "# Google Search Results in Python\n\nThis Python package allows you to scrape and parse Google Search Results using [SerpWow](https://serpwow.com). In addition to [Search](https://serpwow.com/docs/search-api/overview) you can also use this package to access the SerpWow [Locations API](https://serpwow.com/docs/locations-api/overview), [Batches API](https://serpwow.com/docs/batches-api/overview) and [Account API](https://serpwow.com/docs/account-api).\n\n## Installation\nYou can install google-search-results-serpwow with:\n\n```shell\n$ pip install google-search-results-serpwow\n```\n\nand upgrade with:\n\n```shell\n$ pip install google-search-results-serpwow --upgrade\n```\n\n## Documentation\nWe have included examples here but full SerpWow API documentation is available at the [API Docs](https://serpwow.com/docs):\n- [Search API Docs](https://serpwow.com/docs/search-api/overview) \n- [Locations API Docs](https://serpwow.com/docs/locations-api/overview) \n- [Account API Docs](https://serpwow.com/docs/account-api)\n- [Batches API Docs](https://serpwow.com/docs/batches-api)\n\nYou can also use the [API Playground](https://app.serpwow.com/playground) to visually build Google search requests using SerpWow.\n\n## Examples\n- [Simple Example](#simple-example) \n- [Example Response](#example-response) \n- [Getting an API Key](#getting-an-api-key)\n- [Searching with a Location](#searching-with-a-location)\n- [Searching Google Places, Google Videos, Google Images, Google Shopping and Google News](#searching-google-places-google-videos-google-images-google-shopping-and-google-news)\n- [Returning results as JSON, HTML and CSV](#returning-results-as-json-html-and-csv)\n- [Requesting mobile and tablet results](#requesting-mobile-and-tablet-results)\n- [Parsing Results](#parsing-results)\n- [Paginating results, returning up to 100 results per page](#paginating-results-returning-up-to-100-results-per-page)\n- [Search example with all parameters](#search-example-with-all-parameters)\n- [Locations API Example](#locations-api-example)\n- [Account API Example](#account-api-example)\n- [Batches API](#batches-api)\n\n## Simple Example\nSimplest example for a standard query \"pizza\", returning the Google SERP (Search Engine Results Page) data as JSON:\n```python\nfrom serpwow.google_search_results import GoogleSearchResults\nimport json\n\n# create the serpwow object, passing in our API key\nserpwow = GoogleSearchResults(\"API_KEY\")\n\n# set up a dict for the search parameters\nparams = {\n  \"q\" : \"pizza\"\n}\n\n# retrieve the search results as JSON\nresult = serpwow.get_json(params)\n\n# pretty-print the result\nprint(json.dumps(result, indent=2, sort_keys=True))\n```\n\n## Example Response\nA snapshot (shortened for brevity) of the JSON response returned is shown below. For details of all of the fields from the Google search results page that are parsed please see the [docs](https://serpwow.com/docs/search-api/results/google/overview).\n```json\n{\n  \"request_info\": {\n    \"success\": true\n  },\n  \"search_metadata\": {\n    \"id\": \"20c8e44e9cacedabbdff2d9b7e854436056d4f33\",\n    \"engine_url\": \"https://www.google.com/search?q=pizza&oq=pizza&sourceid=chrome&ie=UTF-8\",\n    \"total_time_taken\": 0.14\n  },\n  \"search_parameters\": {\n    \"q\": \"pizza\"\n  },\n  \"search_information\": {\n    \"total_results\": 1480000000,\n    \"time_taken_displayed\": 0.45,\n    \"query_displayed\": \"pizza\",\n    \"detected_location\": \"Ireland\"\n  },\n  \"local_map\": {\n    \"link\": \"https://www.google.com/search?q=pizza&npsic=0&rflfq=1&rldoc=1&rlha=0&rllag=53350059,-6249133,1754&tbm=lcl&sa=X&ved=2ahUKEwiC3cLZ0JLgAhXHUxUIHQrsBC4QtgN6BAgBEAQ\",\n    \"gps_coordinates\": {\n      \"latitude\": 53.350059,\n      \"longitude\": -6.249133,\n      \"altitude\": 1754\n    },\n    \"local_results\": [{\n        \"position\": 1,\n        \"title\": \"Apache Pizza Temple Bar\",\n        \"extensions\": [\n          \"American-style pizza-delivery chain\"\n        ],\n        \"rating\": 3.6,\n        \"reviews\": 382,\n        \"type\": \"Pizza\",\n        \"block_position\": 1\n      }\n    ]\n  },\n  \"knowledge_graph\": {\n    \"title\": \"Pizza\",\n    \"type\": \"Dish\",\n    \"description\": \"Pizza is a savory dish of Italian origin, consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and various other ingredients baked at a high temperature, traditionally in a wood-fired oven.\",\n    \"source\": {\n      \"name\": \"Wikipedia\",\n      \"link\": \"https://en.wikipedia.org/wiki/Pizza\"\n    },\n    \"nutrition_facts\": {\n      \"total_fat\": [\n        \"10 g\",\n        \"15%\"\n      ],\n      \"sugar\": [\n        \"3.6 g\"\n      ]\n    }\n  },\n  \"related_searches\": [{\n      \"query\": \"apache pizza\",\n      \"link\": \"https://www.google.com/search?q=apache+pizza&sa=X&ved=2ahUKEwiC3cLZ0JLgAhXHUxUIHQrsBC4Q1QIoAHoECAUQAQ\"\n    }\n  ],\n  \"organic_results\": [{\n      \"position\": 1,\n      \"title\": \"10 Best Pizzas in Dublin - A slice of the city for every price point ...\",\n      \"link\": \"https://www.independent.ie/life/travel/ireland/10-best-pizzas-in-dublin-a-slice-of-the-city-for-every-price-point-37248689.html\",\n      \"domain\": \"www.independent.ie\",\n      \"displayed_link\": \"https://www.independent.ie/.../10-best-pizzas-in-dublin-a-slice-of-the-city-for-every-p...\",\n      \"snippet\": \"Oct 20, 2018 - Looking for the best pizza in Dublin? P\u00f3l \u00d3 Conghaile scours the city for top-notch pie... whatever your budget.\",\n      \"cached_page_link\": \"https://webcache.googleusercontent.com/search?q=cache:wezzRov42dkJ:https://www.independent.ie/life/travel/ireland/10-best-pizzas-in-dublin-a-slice-of-the-city-for-every-price-point-37248689.html+&cd=4&hl=en&ct=clnk&gl=ie\",\n      \"block_position\": 2\n    }\n  ],\n  \"related_places\": [{\n    \"theme\": \"Best dinners with kids\",\n    \"places\": \"Pinocchio Italian Restaurant - Temple Bar, Cafe Topolisand more\",\n    \"images\": [\n      \"https://lh5.googleusercontent.com/p/AF1QipNhGt40OpSS408waVJUHeItGrrGqImmEKzuVbBv=w152-h152-n-k-no\"\n    ]\n  }],\n  \"pagination\": {\n    \"current\": \"1\",\n    \"next\": \"https://www.google.com/search?q=pizza&ei=fRZQXMKqL8en1fAPitiT8AI&start=10&sa=N&ved=0ahUKEwiC3cLZ0JLgAhXHUxUIHQrsBC4Q8NMDCOkB\"\n  }\n}\n```\n\n## Getting an API Key\nTo get a free API Key head over to [app.serpwow.com/signup](https://app.serpwow.com/signup).\n\n## Searching with a location\nExample of a Google query geo-locating the query as if the user were located in New York. \n```python\nfrom serpwow.google_search_results import GoogleSearchResults\nimport json\n\n# create the serpwow object, passing in our API key\nserpwow = GoogleSearchResults(\"API_KEY\")\n\n# set up a dict for the query (q) and location parameters\n# note that the \"location\" parameter should be a value\n# returned from the Locations API\nparams = {\n  \"q\" : \"pizza\",\n  \"location\" : \"New York,New York,United States\"\n}\n\n# retrieve the search results as JSON\nresult = serpwow.get_json(params)\n\n# pretty-print the result\nprint(json.dumps(result, indent=2, sort_keys=True))\n```\n\n## Searching Google Places, Google Videos, Google Images, Google Shopping and Google News\nUse the ``search_type`` param to search Google Places, Videos, Images and News. See the [Search API Parameters Docs](https://serpwow.com/docs/search-api/searches) for full details of the additional params available for each search type.\n```python\nfrom serpwow.google_search_results import GoogleSearchResults\nimport json\n\n# create the serpwow object, passing in our API key\nserpwow = GoogleSearchResults(\"API_KEY\")\n\n# perform a search on Google News, just looking at blogs, ordered by date, in the last year, filtering out duplicates\nparams = {\n  \"q\" : \"football news\",\n  \"search_type\" : \"news\",\n  \"news_type\" : \"blogs\",\n  \"sort_by\": \"date\",\n  \"time_period\": \"last_year\",\n  \"show_duplicates\" : \"false\"\n}\nresult = serpwow.get_json(params)\nprint(json.dumps(result, indent=2, sort_keys=True))\n\n# perform a search on Google Places for \"plumber\" in London\nparams = {\n  \"search_type\" : \"places\",\n  \"q\" : \"plumber\",\n  \"location\" : \"London,England,United Kingdom\"\n}\nresult = serpwow.get_json(params)\nprint(json.dumps(result, indent=2, sort_keys=True))\n\n# perform an image search on Google Images for \"red flowers\"\nparams = {\n  \"q\" : \"red flowers\",\n  \"search_type\" : \"images\"\n}\nresult = serpwow.get_json(params)\nprint(json.dumps(result, indent=2, sort_keys=True))\n```\n\n## Returning results as JSON, HTML and CSV\nSerpWow can return data in JSON, HTML and CSV formats using the ``get_json``, ``get_html`` and ``get_csv`` methods. For CSV results use the ``csv_fields`` param ([docs](https://serpwow.com/docs/search-api/reference/csv-fields)) to request specific result fields.\n```python\nfrom serpwow.google_search_results import GoogleSearchResults\nimport json\n\n# create the serpwow object, passing in our API key\nserpwow = GoogleSearchResults(\"API_KEY\")\n\n# set up a dict for the query (q) and location parameters\n# note that the \"location\" parameter should be a value\n# returned from the Locations API\nparams = {\n  \"q\" : \"pizza\",\n  \"location\" : \"New York,New York,United States\"\n}\n\n# retrieve the Google search results as JSON\nresult_json = serpwow.get_json(params)\n\n# retrieve the Google search results as HTML\nresult_html = serpwow.get_html(params)\n\n# retrieve the Google search results as a CSV\nresult_csv = serpwow.get_csv(params)\n```\n\n## Requesting mobile and tablet results\nTo request that SerpWow renders the Google search results via a mobile or tablet browser use the ``device`` param:\n```python\nfrom serpwow.google_search_results import GoogleSearchResults\nimport json\n\nserpwow = GoogleSearchResults(\"API_KEY\")\n\n# set up the mobile params\nparams_mobile = {\n  \"q\" : \"pizza\",\n  \"device\" : \"mobile\"\n}\n\n# set up the tablet params\nparams_tablet = {\n  \"q\" : \"pizza\",\n  \"device\" : \"tablet\"\n}\n\n# set up the desktop params (note we omit the \"device\" param)\nparams_desktop = {\n  \"q\" : \"pizza\"\n}\n\n# retrieve the mobile search results\nresult_mobile_json = serpwow.get_json(params_mobile)\n\n# retrieve the tablet search results\nresult_tablet_json = serpwow.get_json(params_tablet)\n\n# retrieve the desktop search results\nresult_desktop_json = serpwow.get_json(params_desktop)\n```\n\n## Parsing results\nWhen making a request via the ``get_json`` method a standard Python ``dict`` is returned. You can inspect this dict to iterate, parse and store the results in your app.\n```python\nfrom serpwow.google_search_results import GoogleSearchResults\nimport json\n\n# make a simple query, returning JSON\nserpwow = GoogleSearchResults(\"API_KEY\")\nresult = serpwow.get_json({ \"q\" : \"pizza\" })\n\n# determine if the request was successful\nsuccess = result[\"request_info\"][\"success\"]\n\nif success:\n\n  # extract the time taken and number of organic results\n  time_taken = result[\"search_metadata\"][\"total_time_taken\"]\n  organic_result_count = len(result[\"organic_results\"])\n\n  # print\n  print str(organic_result_count) + \" organic results returned in \" + str(time_taken) + \"s\"\n```\n\n## Paginating results, returning up to 100 results per page\nUse the ``page`` and ``num`` parameters to paginate through Google search results. The maximum number of results returned per page (controlled by the ``num`` param) is 100 (a Google-imposed limitation) for all ``search_type``'s apart from Google Places, where the maximum is 20. Here's an example.\n```python\nfrom serpwow.google_search_results import GoogleSearchResults\nimport json\n\n# request the first 100 results\nserpwow = GoogleSearchResults(\"API_KEY\")\nparams = {\n  \"q\" : \"pizza\",\n  \"page\" : 1,\n  \"num\": 100\n}\nresult_page_1 = serpwow.get_json(params)\n\n# request the next 100 results\nparams[\"page\"] = 2\nresult_page_2 = serpwow.get_json(params)\n\n# pretty-print the result\nprint \"Page 1\"\nprint json.dumps(result_page_1, indent=2, sort_keys=True)\nprint \"Page 2\"\nprint json.dumps(result_page_2, indent=2, sort_keys=True)\n```\n\n## Search example with all parameters\n```python\nfrom serpwow.google_search_results import GoogleSearchResults\n\n# create the serpwow object, passing in our API key\nserpwow = GoogleSearchResults(\"API_KEY\")\n\n# set up a dict for the search parameters, retrieving results as CSV (note the csv_fields param)\nparams = {\n  \"q\" : \"pizza\",\n  \"gl\" : \"us\",\n  \"hl\" : \"en\",\n  \"location\" : \"New York,New York,United States\",\n  \"google_domain\" : \"google.com\",\n  \"time_period\" : \"custom\",\n  \"sort_by\" : \"date\",\n  \"time_period_min\" : \"02/01/2018\",\n  \"time_period_max\" : \"02/08/2019\",\n  \"device\" : \"mobile\",\n  \"csv_fields\" : \"search.q,organic_results.position,organic_results.domain\",\n  \"page\" : \"1\",\n  \"num\" : \"100\"\n}\n\n# retrieve the search results as CSV\nresult = serpwow.get_csv(params)\n\nprint result\n```\n\n\n## Locations API Example\nThe [Locations API](https://serpwow.com/docs/locations-api/overview) allows you to search for SerpWow supported Google search locations. You can supply the ``full_name`` returned by the Locations API as the ``location`` parameter in a Search API query (see [Searching with a location](https://github.com/serpwow/google-search-results-python#searching-with-a-location) example above) to retrieve search results geo-located to that location.\n```python\nfrom serpwow.google_search_results import GoogleSearchResults\nimport json\n\n# create the serpwow object, passing in our API key\nserpwow = GoogleSearchResults(\"API_KEY\")\n\n# set up a dict for the location query parameters\nparams = {\n  \"q\" : \"mumbai\"\n}\n\n# retrieve locations matching the query parameters as JSON\nresult = serpwow.get_locations(params)\n\n# pretty-print the result\nprint(json.dumps(result, indent=2, sort_keys=True))\n```\n\n## Account API Example\nThe [Account API](https://serpwow.com/docs/account-api) allows you to check your current SerpWow usage and billing information. \n```python\nfrom serpwow.google_search_results import GoogleSearchResults\nimport json\n\n# create the serpwow object, passing in our API key\nserpwow = GoogleSearchResults(\"API_KEY\")\n\n# get our account info\nresult = serpwow.get_account()\n\n# pretty-print the result\nprint(json.dumps(result, indent=2, sort_keys=True))\n```\n\n## Batches API\nThe [Batches API](https://serpwow.com/docs/batches-api) allows you to create, update and delete Batches on your SerpWow account (Batches allow you to save up to 15,000 Searches and have SerpWow run them on a schedule).\n\nFor more information and extensive code samples please see the [Batches API Docs](https://serpwow.com/docs/batches-api).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/serpwow/google-search-results-python", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "google-search-results-serpwow", "package_url": "https://pypi.org/project/google-search-results-serpwow/", "platform": "", "project_url": "https://pypi.org/project/google-search-results-serpwow/", "project_urls": {"Homepage": "https://github.com/serpwow/google-search-results-python"}, "release_url": "https://pypi.org/project/google-search-results-serpwow/1.1.11/", "requires_dist": ["requests"], "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "summary": "PIP package to scrape and parse Google, Bing, Yahoo, Yandex, Amazon, Ebay and Naver Search Results using SerpWow. Visit https://serpwow.com to get a free API key.", "version": "1.1.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Google Search Results in Python</h1>\n<p>This Python package allows you to scrape and parse Google Search Results using <a href=\"https://serpwow.com\" rel=\"nofollow\">SerpWow</a>. In addition to <a href=\"https://serpwow.com/docs/search-api/overview\" rel=\"nofollow\">Search</a> you can also use this package to access the SerpWow <a href=\"https://serpwow.com/docs/locations-api/overview\" rel=\"nofollow\">Locations API</a>, <a href=\"https://serpwow.com/docs/batches-api/overview\" rel=\"nofollow\">Batches API</a> and <a href=\"https://serpwow.com/docs/account-api\" rel=\"nofollow\">Account API</a>.</p>\n<h2>Installation</h2>\n<p>You can install google-search-results-serpwow with:</p>\n<pre>$ pip install google-search-results-serpwow\n</pre>\n<p>and upgrade with:</p>\n<pre>$ pip install google-search-results-serpwow --upgrade\n</pre>\n<h2>Documentation</h2>\n<p>We have included examples here but full SerpWow API documentation is available at the <a href=\"https://serpwow.com/docs\" rel=\"nofollow\">API Docs</a>:</p>\n<ul>\n<li><a href=\"https://serpwow.com/docs/search-api/overview\" rel=\"nofollow\">Search API Docs</a></li>\n<li><a href=\"https://serpwow.com/docs/locations-api/overview\" rel=\"nofollow\">Locations API Docs</a></li>\n<li><a href=\"https://serpwow.com/docs/account-api\" rel=\"nofollow\">Account API Docs</a></li>\n<li><a href=\"https://serpwow.com/docs/batches-api\" rel=\"nofollow\">Batches API Docs</a></li>\n</ul>\n<p>You can also use the <a href=\"https://app.serpwow.com/playground\" rel=\"nofollow\">API Playground</a> to visually build Google search requests using SerpWow.</p>\n<h2>Examples</h2>\n<ul>\n<li><a href=\"#simple-example\" rel=\"nofollow\">Simple Example</a></li>\n<li><a href=\"#example-response\" rel=\"nofollow\">Example Response</a></li>\n<li><a href=\"#getting-an-api-key\" rel=\"nofollow\">Getting an API Key</a></li>\n<li><a href=\"#searching-with-a-location\" rel=\"nofollow\">Searching with a Location</a></li>\n<li><a href=\"#searching-google-places-google-videos-google-images-google-shopping-and-google-news\" rel=\"nofollow\">Searching Google Places, Google Videos, Google Images, Google Shopping and Google News</a></li>\n<li><a href=\"#returning-results-as-json-html-and-csv\" rel=\"nofollow\">Returning results as JSON, HTML and CSV</a></li>\n<li><a href=\"#requesting-mobile-and-tablet-results\" rel=\"nofollow\">Requesting mobile and tablet results</a></li>\n<li><a href=\"#parsing-results\" rel=\"nofollow\">Parsing Results</a></li>\n<li><a href=\"#paginating-results-returning-up-to-100-results-per-page\" rel=\"nofollow\">Paginating results, returning up to 100 results per page</a></li>\n<li><a href=\"#search-example-with-all-parameters\" rel=\"nofollow\">Search example with all parameters</a></li>\n<li><a href=\"#locations-api-example\" rel=\"nofollow\">Locations API Example</a></li>\n<li><a href=\"#account-api-example\" rel=\"nofollow\">Account API Example</a></li>\n<li><a href=\"#batches-api\" rel=\"nofollow\">Batches API</a></li>\n</ul>\n<h2>Simple Example</h2>\n<p>Simplest example for a standard query \"pizza\", returning the Google SERP (Search Engine Results Page) data as JSON:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">serpwow.google_search_results</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleSearchResults</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"c1\"># create the serpwow object, passing in our API key</span>\n<span class=\"n\">serpwow</span> <span class=\"o\">=</span> <span class=\"n\">GoogleSearchResults</span><span class=\"p\">(</span><span class=\"s2\">\"API_KEY\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set up a dict for the search parameters</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"q\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"pizza\"</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># retrieve the search results as JSON</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># pretty-print the result</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">sort_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n</pre>\n<h2>Example Response</h2>\n<p>A snapshot (shortened for brevity) of the JSON response returned is shown below. For details of all of the fields from the Google search results page that are parsed please see the <a href=\"https://serpwow.com/docs/search-api/results/google/overview\" rel=\"nofollow\">docs</a>.</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"request_info\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"success\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"search_metadata\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"20c8e44e9cacedabbdff2d9b7e854436056d4f33\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"engine_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://www.google.com/search?q=pizza&amp;oq=pizza&amp;sourceid=chrome&amp;ie=UTF-8\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"total_time_taken\"</span><span class=\"p\">:</span> <span class=\"mf\">0.14</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"search_parameters\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"q\"</span><span class=\"p\">:</span> <span class=\"s2\">\"pizza\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"search_information\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"total_results\"</span><span class=\"p\">:</span> <span class=\"mi\">1480000000</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"time_taken_displayed\"</span><span class=\"p\">:</span> <span class=\"mf\">0.45</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"query_displayed\"</span><span class=\"p\">:</span> <span class=\"s2\">\"pizza\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"detected_location\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Ireland\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"local_map\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"link\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://www.google.com/search?q=pizza&amp;npsic=0&amp;rflfq=1&amp;rldoc=1&amp;rlha=0&amp;rllag=53350059,-6249133,1754&amp;tbm=lcl&amp;sa=X&amp;ved=2ahUKEwiC3cLZ0JLgAhXHUxUIHQrsBC4QtgN6BAgBEAQ\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"gps_coordinates\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"latitude\"</span><span class=\"p\">:</span> <span class=\"mf\">53.350059</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"longitude\"</span><span class=\"p\">:</span> <span class=\"mf\">-6.249133</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"altitude\"</span><span class=\"p\">:</span> <span class=\"mi\">1754</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"local_results\"</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n        <span class=\"nt\">\"position\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Apache Pizza Temple Bar\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"extensions\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"s2\">\"American-style pizza-delivery chain\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"nt\">\"rating\"</span><span class=\"p\">:</span> <span class=\"mf\">3.6</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"reviews\"</span><span class=\"p\">:</span> <span class=\"mi\">382</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Pizza\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"block_position\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"knowledge_graph\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Pizza\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Dish\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Pizza is a savory dish of Italian origin, consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and various other ingredients baked at a high temperature, traditionally in a wood-fired oven.\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"source\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Wikipedia\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"link\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://en.wikipedia.org/wiki/Pizza\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"nutrition_facts\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"total_fat\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"10 g\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"15%\"</span>\n      <span class=\"p\">],</span>\n      <span class=\"nt\">\"sugar\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"3.6 g\"</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"related_searches\"</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n      <span class=\"nt\">\"query\"</span><span class=\"p\">:</span> <span class=\"s2\">\"apache pizza\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"link\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://www.google.com/search?q=apache+pizza&amp;sa=X&amp;ved=2ahUKEwiC3cLZ0JLgAhXHUxUIHQrsBC4Q1QIoAHoECAUQAQ\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">\"organic_results\"</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n      <span class=\"nt\">\"position\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"10 Best Pizzas in Dublin - A slice of the city for every price point ...\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"link\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://www.independent.ie/life/travel/ireland/10-best-pizzas-in-dublin-a-slice-of-the-city-for-every-price-point-37248689.html\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"domain\"</span><span class=\"p\">:</span> <span class=\"s2\">\"www.independent.ie\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"displayed_link\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://www.independent.ie/.../10-best-pizzas-in-dublin-a-slice-of-the-city-for-every-p...\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"snippet\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Oct 20, 2018 - Looking for the best pizza in Dublin? P\u00f3l \u00d3 Conghaile scours the city for top-notch pie... whatever your budget.\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"cached_page_link\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://webcache.googleusercontent.com/search?q=cache:wezzRov42dkJ:https://www.independent.ie/life/travel/ireland/10-best-pizzas-in-dublin-a-slice-of-the-city-for-every-price-point-37248689.html+&amp;cd=4&amp;hl=en&amp;ct=clnk&amp;gl=ie\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"block_position\"</span><span class=\"p\">:</span> <span class=\"mi\">2</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">\"related_places\"</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n    <span class=\"nt\">\"theme\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Best dinners with kids\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"places\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Pinocchio Italian Restaurant - Temple Bar, Cafe Topolisand more\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"images\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"https://lh5.googleusercontent.com/p/AF1QipNhGt40OpSS408waVJUHeItGrrGqImmEKzuVbBv=w152-h152-n-k-no\"</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">}],</span>\n  <span class=\"nt\">\"pagination\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"current\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"next\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://www.google.com/search?q=pizza&amp;ei=fRZQXMKqL8en1fAPitiT8AI&amp;start=10&amp;sa=N&amp;ved=0ahUKEwiC3cLZ0JLgAhXHUxUIHQrsBC4Q8NMDCOkB\"</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Getting an API Key</h2>\n<p>To get a free API Key head over to <a href=\"https://app.serpwow.com/signup\" rel=\"nofollow\">app.serpwow.com/signup</a>.</p>\n<h2>Searching with a location</h2>\n<p>Example of a Google query geo-locating the query as if the user were located in New York.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">serpwow.google_search_results</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleSearchResults</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"c1\"># create the serpwow object, passing in our API key</span>\n<span class=\"n\">serpwow</span> <span class=\"o\">=</span> <span class=\"n\">GoogleSearchResults</span><span class=\"p\">(</span><span class=\"s2\">\"API_KEY\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set up a dict for the query (q) and location parameters</span>\n<span class=\"c1\"># note that the \"location\" parameter should be a value</span>\n<span class=\"c1\"># returned from the Locations API</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"q\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"pizza\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"location\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"New York,New York,United States\"</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># retrieve the search results as JSON</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># pretty-print the result</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">sort_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n</pre>\n<h2>Searching Google Places, Google Videos, Google Images, Google Shopping and Google News</h2>\n<p>Use the <code>search_type</code> param to search Google Places, Videos, Images and News. See the <a href=\"https://serpwow.com/docs/search-api/searches\" rel=\"nofollow\">Search API Parameters Docs</a> for full details of the additional params available for each search type.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">serpwow.google_search_results</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleSearchResults</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"c1\"># create the serpwow object, passing in our API key</span>\n<span class=\"n\">serpwow</span> <span class=\"o\">=</span> <span class=\"n\">GoogleSearchResults</span><span class=\"p\">(</span><span class=\"s2\">\"API_KEY\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># perform a search on Google News, just looking at blogs, ordered by date, in the last year, filtering out duplicates</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"q\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"football news\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"search_type\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"news\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"news_type\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"blogs\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"sort_by\"</span><span class=\"p\">:</span> <span class=\"s2\">\"date\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"time_period\"</span><span class=\"p\">:</span> <span class=\"s2\">\"last_year\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"show_duplicates\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"false\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">sort_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># perform a search on Google Places for \"plumber\" in London</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"search_type\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"places\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"q\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"plumber\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"location\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"London,England,United Kingdom\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">sort_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># perform an image search on Google Images for \"red flowers\"</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"q\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"red flowers\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"search_type\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"images\"</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">sort_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n</pre>\n<h2>Returning results as JSON, HTML and CSV</h2>\n<p>SerpWow can return data in JSON, HTML and CSV formats using the <code>get_json</code>, <code>get_html</code> and <code>get_csv</code> methods. For CSV results use the <code>csv_fields</code> param (<a href=\"https://serpwow.com/docs/search-api/reference/csv-fields\" rel=\"nofollow\">docs</a>) to request specific result fields.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">serpwow.google_search_results</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleSearchResults</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"c1\"># create the serpwow object, passing in our API key</span>\n<span class=\"n\">serpwow</span> <span class=\"o\">=</span> <span class=\"n\">GoogleSearchResults</span><span class=\"p\">(</span><span class=\"s2\">\"API_KEY\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set up a dict for the query (q) and location parameters</span>\n<span class=\"c1\"># note that the \"location\" parameter should be a value</span>\n<span class=\"c1\"># returned from the Locations API</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"q\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"pizza\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"location\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"New York,New York,United States\"</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># retrieve the Google search results as JSON</span>\n<span class=\"n\">result_json</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># retrieve the Google search results as HTML</span>\n<span class=\"n\">result_html</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_html</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># retrieve the Google search results as a CSV</span>\n<span class=\"n\">result_csv</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_csv</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n</pre>\n<h2>Requesting mobile and tablet results</h2>\n<p>To request that SerpWow renders the Google search results via a mobile or tablet browser use the <code>device</code> param:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">serpwow.google_search_results</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleSearchResults</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"n\">serpwow</span> <span class=\"o\">=</span> <span class=\"n\">GoogleSearchResults</span><span class=\"p\">(</span><span class=\"s2\">\"API_KEY\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set up the mobile params</span>\n<span class=\"n\">params_mobile</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"q\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"pizza\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"device\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"mobile\"</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># set up the tablet params</span>\n<span class=\"n\">params_tablet</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"q\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"pizza\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"device\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"tablet\"</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># set up the desktop params (note we omit the \"device\" param)</span>\n<span class=\"n\">params_desktop</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"q\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"pizza\"</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># retrieve the mobile search results</span>\n<span class=\"n\">result_mobile_json</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">(</span><span class=\"n\">params_mobile</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># retrieve the tablet search results</span>\n<span class=\"n\">result_tablet_json</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">(</span><span class=\"n\">params_tablet</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># retrieve the desktop search results</span>\n<span class=\"n\">result_desktop_json</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">(</span><span class=\"n\">params_desktop</span><span class=\"p\">)</span>\n</pre>\n<h2>Parsing results</h2>\n<p>When making a request via the <code>get_json</code> method a standard Python <code>dict</code> is returned. You can inspect this dict to iterate, parse and store the results in your app.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">serpwow.google_search_results</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleSearchResults</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"c1\"># make a simple query, returning JSON</span>\n<span class=\"n\">serpwow</span> <span class=\"o\">=</span> <span class=\"n\">GoogleSearchResults</span><span class=\"p\">(</span><span class=\"s2\">\"API_KEY\"</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">({</span> <span class=\"s2\">\"q\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"pizza\"</span> <span class=\"p\">})</span>\n\n<span class=\"c1\"># determine if the request was successful</span>\n<span class=\"n\">success</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s2\">\"request_info\"</span><span class=\"p\">][</span><span class=\"s2\">\"success\"</span><span class=\"p\">]</span>\n\n<span class=\"k\">if</span> <span class=\"n\">success</span><span class=\"p\">:</span>\n\n  <span class=\"c1\"># extract the time taken and number of organic results</span>\n  <span class=\"n\">time_taken</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s2\">\"search_metadata\"</span><span class=\"p\">][</span><span class=\"s2\">\"total_time_taken\"</span><span class=\"p\">]</span>\n  <span class=\"n\">organic_result_count</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s2\">\"organic_results\"</span><span class=\"p\">])</span>\n\n  <span class=\"c1\"># print</span>\n  <span class=\"nb\">print</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">organic_result_count</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">\" organic results returned in \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">time_taken</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">\"s\"</span>\n</pre>\n<h2>Paginating results, returning up to 100 results per page</h2>\n<p>Use the <code>page</code> and <code>num</code> parameters to paginate through Google search results. The maximum number of results returned per page (controlled by the <code>num</code> param) is 100 (a Google-imposed limitation) for all <code>search_type</code>'s apart from Google Places, where the maximum is 20. Here's an example.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">serpwow.google_search_results</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleSearchResults</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"c1\"># request the first 100 results</span>\n<span class=\"n\">serpwow</span> <span class=\"o\">=</span> <span class=\"n\">GoogleSearchResults</span><span class=\"p\">(</span><span class=\"s2\">\"API_KEY\"</span><span class=\"p\">)</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"q\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"pizza\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"page\"</span> <span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"num\"</span><span class=\"p\">:</span> <span class=\"mi\">100</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result_page_1</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># request the next 100 results</span>\n<span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s2\">\"page\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"n\">result_page_2</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># pretty-print the result</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"Page 1\"</span>\n<span class=\"nb\">print</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">result_page_1</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">sort_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"Page 2\"</span>\n<span class=\"nb\">print</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">result_page_2</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">sort_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h2>Search example with all parameters</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">serpwow.google_search_results</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleSearchResults</span>\n\n<span class=\"c1\"># create the serpwow object, passing in our API key</span>\n<span class=\"n\">serpwow</span> <span class=\"o\">=</span> <span class=\"n\">GoogleSearchResults</span><span class=\"p\">(</span><span class=\"s2\">\"API_KEY\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set up a dict for the search parameters, retrieving results as CSV (note the csv_fields param)</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"q\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"pizza\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"gl\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"us\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"hl\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"en\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"location\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"New York,New York,United States\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"google_domain\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"google.com\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"time_period\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"custom\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"sort_by\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"date\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"time_period_min\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"02/01/2018\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"time_period_max\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"02/08/2019\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"device\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"mobile\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"csv_fields\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"search.q,organic_results.position,organic_results.domain\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"page\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"1\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"num\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"100\"</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># retrieve the search results as CSV</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_csv</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span> <span class=\"n\">result</span>\n</pre>\n<h2>Locations API Example</h2>\n<p>The <a href=\"https://serpwow.com/docs/locations-api/overview\" rel=\"nofollow\">Locations API</a> allows you to search for SerpWow supported Google search locations. You can supply the <code>full_name</code> returned by the Locations API as the <code>location</code> parameter in a Search API query (see <a href=\"https://github.com/serpwow/google-search-results-python#searching-with-a-location\" rel=\"nofollow\">Searching with a location</a> example above) to retrieve search results geo-located to that location.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">serpwow.google_search_results</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleSearchResults</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"c1\"># create the serpwow object, passing in our API key</span>\n<span class=\"n\">serpwow</span> <span class=\"o\">=</span> <span class=\"n\">GoogleSearchResults</span><span class=\"p\">(</span><span class=\"s2\">\"API_KEY\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set up a dict for the location query parameters</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"q\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"mumbai\"</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># retrieve locations matching the query parameters as JSON</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_locations</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># pretty-print the result</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">sort_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n</pre>\n<h2>Account API Example</h2>\n<p>The <a href=\"https://serpwow.com/docs/account-api\" rel=\"nofollow\">Account API</a> allows you to check your current SerpWow usage and billing information.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">serpwow.google_search_results</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleSearchResults</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"c1\"># create the serpwow object, passing in our API key</span>\n<span class=\"n\">serpwow</span> <span class=\"o\">=</span> <span class=\"n\">GoogleSearchResults</span><span class=\"p\">(</span><span class=\"s2\">\"API_KEY\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get our account info</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">serpwow</span><span class=\"o\">.</span><span class=\"n\">get_account</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># pretty-print the result</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">sort_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n</pre>\n<h2>Batches API</h2>\n<p>The <a href=\"https://serpwow.com/docs/batches-api\" rel=\"nofollow\">Batches API</a> allows you to create, update and delete Batches on your SerpWow account (Batches allow you to save up to 15,000 Searches and have SerpWow run them on a schedule).</p>\n<p>For more information and extensive code samples please see the <a href=\"https://serpwow.com/docs/batches-api\" rel=\"nofollow\">Batches API Docs</a>.</p>\n\n          </div>"}, "last_serial": 7037990, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "ff4276d9a99acab3e80c73861fa74fb4", "sha256": "53156b583cbe0ec723d62ee47cb948459a58e9f805531b44af2a98feb6574431"}, "downloads": -1, "filename": "google_search_results_serpwow-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "ff4276d9a99acab3e80c73861fa74fb4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 1923, "upload_time": "2019-02-05T16:31:48", "upload_time_iso_8601": "2019-02-05T16:31:48.059071Z", "url": "https://files.pythonhosted.org/packages/e3/36/b36d610b5f79f768c94819895f0b93b3e00ba88156cad51136fa2e2d4ef7/google_search_results_serpwow-1.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "91a4c7a9bfb9d97fd3af1ede13a0b6c6", "sha256": "e333723eb5f5ef949eb6aed30733822bfbeeb6bc0171850e51a1abf556e9033c"}, "downloads": -1, "filename": "google-search-results-serpwow-1.0.1.tar.gz", "has_sig": false, "md5_digest": "91a4c7a9bfb9d97fd3af1ede13a0b6c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1673, "upload_time": "2019-02-05T16:31:50", "upload_time_iso_8601": "2019-02-05T16:31:50.291209Z", "url": "https://files.pythonhosted.org/packages/a9/cf/aae560907f350913f3fd26e356d49ae6d2352d51fcd6b4e46b2b9c35d7a3/google-search-results-serpwow-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "b6da8faa7bcb5e98b3b7daceb82ef18a", "sha256": "151631a163234035e5a0dbbafd6c631e83975f774fc7708ffbd773ca70e0dab9"}, "downloads": -1, "filename": "google_search_results_serpwow-1.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "b6da8faa7bcb5e98b3b7daceb82ef18a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 1925, "upload_time": "2019-02-05T16:46:55", "upload_time_iso_8601": "2019-02-05T16:46:55.513914Z", "url": "https://files.pythonhosted.org/packages/46/95/eb14887832f50dfbaf3b35a71ade44f478f1fa429463cb66a63f4ddaf7d3/google_search_results_serpwow-1.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0fab06f0ee9baf75b003bfa4ad01d32", "sha256": "67df6f1f5e8553b1d5f1d3762f9cc80e00b3381ae715ab14799dc36b8ae55b9f"}, "downloads": -1, "filename": "google-search-results-serpwow-1.0.2.tar.gz", "has_sig": false, "md5_digest": "e0fab06f0ee9baf75b003bfa4ad01d32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1695, "upload_time": "2019-02-05T16:46:56", "upload_time_iso_8601": "2019-02-05T16:46:56.729763Z", "url": "https://files.pythonhosted.org/packages/68/ec/03455013f81c7663b2259cbd712b4be43f30bcd10a3eccdb9bc5ea52aa61/google-search-results-serpwow-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "6286c46e12d799aa735315269275a343", "sha256": "78a7433d35123274a2df881ef0878d1279890b6245d0ddda9794d6aeac16fb9b"}, "downloads": -1, "filename": "google_search_results_serpwow-1.0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "6286c46e12d799aa735315269275a343", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 1924, "upload_time": "2019-02-05T16:52:18", "upload_time_iso_8601": "2019-02-05T16:52:18.419888Z", "url": "https://files.pythonhosted.org/packages/ba/90/69fb8bf58ecdd45db1302e4829ed84d992ebd3e1564ae4b79e11a2c4d045/google_search_results_serpwow-1.0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d67994dae545a9179ae7a2b386b62d2", "sha256": "8ca74bea993efbbf32bce3e9dcf01ad78c68c95ea7444e7e475c913a55e98178"}, "downloads": -1, "filename": "google-search-results-serpwow-1.0.3.tar.gz", "has_sig": false, "md5_digest": "9d67994dae545a9179ae7a2b386b62d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1687, "upload_time": "2019-02-05T16:52:19", "upload_time_iso_8601": "2019-02-05T16:52:19.716651Z", "url": "https://files.pythonhosted.org/packages/fb/2f/b343832d70fcd71e56e132a77716eb225da3dfc0e239f2195ab96b63f684/google-search-results-serpwow-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "8cf9e5ff415fdca38ca8a9cde044cad4", "sha256": "aa5608c6dfebc88a38db9803f3940ba05a7e865395b31d1bdf5743aeac733f93"}, "downloads": -1, "filename": "google_search_results_serpwow-1.0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "8cf9e5ff415fdca38ca8a9cde044cad4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 1952, "upload_time": "2019-02-05T16:56:38", "upload_time_iso_8601": "2019-02-05T16:56:38.074735Z", "url": "https://files.pythonhosted.org/packages/3b/3d/53ef4f7c80a8a36ecce0d335c5684671d9cbd1d0086c6f68b8a3c79e8b79/google_search_results_serpwow-1.0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab71efb2b4af41261cd3d78a870ac299", "sha256": "cab27d862afff39fe8479a9abd2621978ae9a6f22cb2669e00041dec14c71bb9"}, "downloads": -1, "filename": "google-search-results-serpwow-1.0.4.tar.gz", "has_sig": false, "md5_digest": "ab71efb2b4af41261cd3d78a870ac299", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1710, "upload_time": "2019-02-05T16:56:39", "upload_time_iso_8601": "2019-02-05T16:56:39.314834Z", "url": "https://files.pythonhosted.org/packages/5c/4c/b73f0caa6ed0aeb8eb183ff6eb51d552454bf8130196d4d72538ed18b509/google-search-results-serpwow-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "f90a73b3e38dae0cf8799448521dd6b4", "sha256": "88a83517af333bf8de5a300a92a30b776e2018e94de054314b04fc4c6b200224"}, "downloads": -1, "filename": "google_search_results_serpwow-1.0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "f90a73b3e38dae0cf8799448521dd6b4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 2017, "upload_time": "2019-02-05T17:08:33", "upload_time_iso_8601": "2019-02-05T17:08:33.361335Z", "url": "https://files.pythonhosted.org/packages/dd/76/608e2fc93cd1b42fd558a65ef23ae4bb2ec4e9b391f727f5355f14be0d8a/google_search_results_serpwow-1.0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5760c5e8a59b0176e2d577fcd8add8a", "sha256": "17cd4bbed52cde443f6827abd8945ab5846f20d8a4d99ed94911eafabdbb44b7"}, "downloads": -1, "filename": "google-search-results-serpwow-1.0.5.tar.gz", "has_sig": false, "md5_digest": "c5760c5e8a59b0176e2d577fcd8add8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1764, "upload_time": "2019-02-05T17:08:34", "upload_time_iso_8601": "2019-02-05T17:08:34.560248Z", "url": "https://files.pythonhosted.org/packages/de/de/800918de0d371a0fe275a159c2f0bf3d6d9ac3683db6b053bea01a891c53/google-search-results-serpwow-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "ef41d3ccb7e4f420d5a20d2f918f4b72", "sha256": "bddf2d8cb68e1900c073dfa8385efa76b19125533adfa2df7bc18a28130a9991"}, "downloads": -1, "filename": "google_search_results_serpwow-1.0.6-py2-none-any.whl", "has_sig": false, "md5_digest": "ef41d3ccb7e4f420d5a20d2f918f4b72", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 3713, "upload_time": "2019-02-05T18:02:08", "upload_time_iso_8601": "2019-02-05T18:02:08.421027Z", "url": "https://files.pythonhosted.org/packages/93/55/c7760727818536a8ca8014858eec63b811e46eb4071e6aa8f17a6e0a9055/google_search_results_serpwow-1.0.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b2c5169c687dbe228b2203f7d08d612", "sha256": "ea904df359e115b66ef809c86672c2779bc79860762dd68b6e8866134c09d59a"}, "downloads": -1, "filename": "google-search-results-serpwow-1.0.6.tar.gz", "has_sig": false, "md5_digest": "3b2c5169c687dbe228b2203f7d08d612", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3670, "upload_time": "2019-02-05T18:02:10", "upload_time_iso_8601": "2019-02-05T18:02:10.052197Z", "url": "https://files.pythonhosted.org/packages/8e/15/3db07f2a7a129b6a49f9a137463ebaf6bef37f040295aba09cbf1d123556/google-search-results-serpwow-1.0.6.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "3f294e9307607d29a1ea8cfb754dfbdb", "sha256": "35d4c4add29648dc08085da83174fbc5d035f23d1b17c55b9494bfd0a5c77539"}, "downloads": -1, "filename": "google_search_results_serpwow-1.0.8-py2-none-any.whl", "has_sig": false, "md5_digest": "3f294e9307607d29a1ea8cfb754dfbdb", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4653, "upload_time": "2019-02-06T07:35:34", "upload_time_iso_8601": "2019-02-06T07:35:34.561988Z", "url": "https://files.pythonhosted.org/packages/dc/7e/fef5a9e14a69cf4b6846ab19385968dbfb0d28a44a9a50886eaf9dbc8245/google_search_results_serpwow-1.0.8-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de4afd52917e3d7792a3017af7b5459f", "sha256": "19508c3f443d95801fb32b85ac0edab5076a242708bde7ab8db2807ba6a7a4e0"}, "downloads": -1, "filename": "google-search-results-serpwow-1.0.8.tar.gz", "has_sig": false, "md5_digest": "de4afd52917e3d7792a3017af7b5459f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4235, "upload_time": "2019-02-06T07:35:35", "upload_time_iso_8601": "2019-02-06T07:35:35.927648Z", "url": "https://files.pythonhosted.org/packages/e2/c1/16e4af406fc9598d3ca778f247aa3034e851e210aa1530fa4db66a258aa2/google-search-results-serpwow-1.0.8.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "29b2db50e45b35cce372f413635c4421", "sha256": "d7f43cb7c5a9235f61ce16fb58ade821548aee76093215c3ac10c95476ad46b5"}, "downloads": -1, "filename": "google_search_results_serpwow-1.0.9-py2-none-any.whl", "has_sig": false, "md5_digest": "29b2db50e45b35cce372f413635c4421", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4814, "upload_time": "2019-02-06T07:40:32", "upload_time_iso_8601": "2019-02-06T07:40:32.402240Z", "url": "https://files.pythonhosted.org/packages/5a/44/559fbc95ffcf9b579d16e75c6cd57be0c75f60aefd9826fd5ddc8db2d3a3/google_search_results_serpwow-1.0.9-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a4be166b7c4c32fd4240dea3f1a8078", "sha256": "a5476f17ce654574ac4cbf4a537818153b1800f8b6d5a1f5f6bbdedc72b7301e"}, "downloads": -1, "filename": "google-search-results-serpwow-1.0.9.tar.gz", "has_sig": false, "md5_digest": "5a4be166b7c4c32fd4240dea3f1a8078", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4315, "upload_time": "2019-02-06T07:40:34", "upload_time_iso_8601": "2019-02-06T07:40:34.013709Z", "url": "https://files.pythonhosted.org/packages/02/a1/77bbd84fed0a089735e9b46d5cc089df458b7703f147341e88121195f124/google-search-results-serpwow-1.0.9.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "c18784447a22c2bef911d3b147de7883", "sha256": "223556a705595b32fb7a5ddbccc46af6f974fe9ce2f8194bf37c7b15d932e412"}, "downloads": -1, "filename": "google_search_results_serpwow-1.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "c18784447a22c2bef911d3b147de7883", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6345, "upload_time": "2019-02-07T12:37:53", "upload_time_iso_8601": "2019-02-07T12:37:53.582960Z", "url": "https://files.pythonhosted.org/packages/e6/15/99210c0a1a92148fa96740abac4a1c397f0b2a8c175f5299530378509db6/google_search_results_serpwow-1.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d83b41bbee54f6b5cdb0cb54d08465c", "sha256": "51821a744bb15e4f31e5ae10390407768e75cecde1c992d99a83773ae1d3406a"}, "downloads": -1, "filename": "google-search-results-serpwow-1.1.0.tar.gz", "has_sig": false, "md5_digest": "7d83b41bbee54f6b5cdb0cb54d08465c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5868, "upload_time": "2019-02-07T12:37:55", "upload_time_iso_8601": "2019-02-07T12:37:55.725457Z", "url": "https://files.pythonhosted.org/packages/e6/1f/be494c36b6976cb8c3729ea2247ba14b96b6c89aa83fbecf6d45aa8d945a/google-search-results-serpwow-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "937d62d2ea1a3f7a40d162ce671393ef", "sha256": "64c12ce7334fecc902c57c38ffe366eccaad35faed85a53bad9a9e64cc08c277"}, "downloads": -1, "filename": "google_search_results_serpwow-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "937d62d2ea1a3f7a40d162ce671393ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 7241, "upload_time": "2019-02-07T12:56:24", "upload_time_iso_8601": "2019-02-07T12:56:24.375814Z", "url": "https://files.pythonhosted.org/packages/5e/fc/a296de108ee016bba4ffbb996b6f1caea159bb8f6119b8789bd24c04002a/google_search_results_serpwow-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e1a901d62d3dcabc9411072e051141f", "sha256": "01b8bde9360a2fdd3843783807bcc5379ffc2a5588b19075314bb4aaa98ed644"}, "downloads": -1, "filename": "google-search-results-serpwow-1.1.1.tar.gz", "has_sig": false, "md5_digest": "3e1a901d62d3dcabc9411072e051141f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 7997, "upload_time": "2019-02-07T12:56:25", "upload_time_iso_8601": "2019-02-07T12:56:25.851674Z", "url": "https://files.pythonhosted.org/packages/0c/c8/6066dc8d8696daf06b0ca292fdfd238df5a59893cf70b5a2fc8f4986b4d5/google-search-results-serpwow-1.1.1.tar.gz", "yanked": false}], "1.1.10": [{"comment_text": "", "digests": {"md5": "f2fa096a3ce66fb708a333d095b10434", "sha256": "20af40585efc69f1a649bf0349de237eb010ede1a46b5e4a8aa73b25b980ca1b"}, "downloads": -1, "filename": "google_search_results_serpwow-1.1.10-py3-none-any.whl", "has_sig": false, "md5_digest": "f2fa096a3ce66fb708a333d095b10434", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8529, "upload_time": "2020-04-17T06:09:03", "upload_time_iso_8601": "2020-04-17T06:09:03.214593Z", "url": "https://files.pythonhosted.org/packages/30/71/c5d84e4ad5c1d8e28163cc52559024b83334288661647f2c7bb05842a835/google_search_results_serpwow-1.1.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ae92885ecbe15c572496b0ce3c7679f", "sha256": "a4ad9643e2016069c6e61d78f39e1851e9231b3fb72045536977538379596f9a"}, "downloads": -1, "filename": "google-search-results-serpwow-1.1.10.tar.gz", "has_sig": false, "md5_digest": "4ae92885ecbe15c572496b0ce3c7679f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 9160, "upload_time": "2020-04-17T06:09:05", "upload_time_iso_8601": "2020-04-17T06:09:05.725086Z", "url": "https://files.pythonhosted.org/packages/f2/0e/5cc61a1dc9999aa8bbf41e200e9c31ba32b77a2dfe31046243a3495a7e25/google-search-results-serpwow-1.1.10.tar.gz", "yanked": false}], "1.1.11": [{"comment_text": "", "digests": {"md5": "0897042b4bef022cfa33a77dd81add25", "sha256": "1d4090d35587bb4e7a95f66db697448db459cc4d1c28eb5d6dba6fd75a4f7ee5"}, "downloads": -1, "filename": "google_search_results_serpwow-1.1.11-py3-none-any.whl", "has_sig": false, "md5_digest": "0897042b4bef022cfa33a77dd81add25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8522, "upload_time": "2020-04-17T06:39:51", "upload_time_iso_8601": "2020-04-17T06:39:51.808129Z", "url": "https://files.pythonhosted.org/packages/19/29/32e32e6a0bbf76f49029042ff31ceb78d8cb710894bd1e7b0120afe824cc/google_search_results_serpwow-1.1.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ec4cdf237083203504f90d9f78947a9", "sha256": "5e05364c1fa061f3fc37d0b1b90a04a6addcfed085479311a2c002d33016a225"}, "downloads": -1, "filename": "google-search-results-serpwow-1.1.11.tar.gz", "has_sig": false, "md5_digest": "3ec4cdf237083203504f90d9f78947a9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 9151, "upload_time": "2020-04-17T06:39:53", "upload_time_iso_8601": "2020-04-17T06:39:53.507794Z", "url": "https://files.pythonhosted.org/packages/b2/5f/0fd2cb0d625b33c5e7f50a1276d65624e16bdeeb39b32dc97350d1e4b996/google-search-results-serpwow-1.1.11.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "a0dc9529acebc1f9e2e918a267a20c47", "sha256": "f82f191a30ac6d0cc7ebff30281056edd39f7d7f579e9e4bf9e12988bf6cd150"}, "downloads": -1, "filename": "google_search_results_serpwow-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a0dc9529acebc1f9e2e918a267a20c47", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 7273, "upload_time": "2019-02-13T19:40:53", "upload_time_iso_8601": "2019-02-13T19:40:53.019683Z", "url": "https://files.pythonhosted.org/packages/5d/8f/86a773299b5bbfb56b616c30dc44b1ae2883fa5f98694db009d5f1d67fd2/google_search_results_serpwow-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12cfb6080fb844cf3f68d97a198003eb", "sha256": "29d4fe37d948c716a1d5f083c8ca60228c010c141a360e2cfa7c4013df2a5512"}, "downloads": -1, "filename": "google-search-results-serpwow-1.1.2.tar.gz", "has_sig": false, "md5_digest": "12cfb6080fb844cf3f68d97a198003eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8036, "upload_time": "2019-02-13T19:40:54", "upload_time_iso_8601": "2019-02-13T19:40:54.951360Z", "url": "https://files.pythonhosted.org/packages/d5/5d/d04891f52a59d912fc13604b81f691239f04b983a2cce167f4ac8fa994e2/google-search-results-serpwow-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "9ba0ca00d021d060654f96fd9530a192", "sha256": "9a7ebfae9e7d956378a92c7df901ab8f3311fda8ed621c681794fe1fcaa4e5df"}, "downloads": -1, "filename": "google_search_results_serpwow-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9ba0ca00d021d060654f96fd9530a192", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8138, "upload_time": "2019-02-20T06:58:10", "upload_time_iso_8601": "2019-02-20T06:58:10.376751Z", "url": "https://files.pythonhosted.org/packages/85/30/143cc3ca440c0b0d0ae571275de58b321e370ebdd9d7fc24bcc6fa7bbfdc/google_search_results_serpwow-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c39ff158c68988fb3dbfa565293af61", "sha256": "6ce4f2f05b3e6ce753c5bf5a910ce489e320ad4dbe9af2b01f5679d3ceafbfa9"}, "downloads": -1, "filename": "google-search-results-serpwow-1.1.3.tar.gz", "has_sig": false, "md5_digest": "9c39ff158c68988fb3dbfa565293af61", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8683, "upload_time": "2019-02-20T06:58:12", "upload_time_iso_8601": "2019-02-20T06:58:12.427093Z", "url": "https://files.pythonhosted.org/packages/39/74/086cca18e36555e7dfc3e14413924d32ee238f1875f8efd0cab2bb9ac1dc/google-search-results-serpwow-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "a024113832e6374514c38111c76be780", "sha256": "75361ac88e8dbdd312f0fb7b4d61d63f2bdefdce3049c107537ba2e68e8a9073"}, "downloads": -1, "filename": "google_search_results_serpwow-1.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a024113832e6374514c38111c76be780", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8144, "upload_time": "2019-02-20T06:59:53", "upload_time_iso_8601": "2019-02-20T06:59:53.930056Z", "url": "https://files.pythonhosted.org/packages/16/ea/6284156565240476e157ee6d95d5e06aa1b22d8736606502303cef0fbcc7/google_search_results_serpwow-1.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ba79f9f4ae833c1da6917857b6f4642", "sha256": "2eace4233d4afc449c966b771ed22607843416d490131ea44acdbd6a5cb03416"}, "downloads": -1, "filename": "google-search-results-serpwow-1.1.4.tar.gz", "has_sig": false, "md5_digest": "8ba79f9f4ae833c1da6917857b6f4642", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8695, "upload_time": "2019-02-20T06:59:55", "upload_time_iso_8601": "2019-02-20T06:59:55.386994Z", "url": "https://files.pythonhosted.org/packages/d4/67/ee8aeae83c33c3a7bdf72123572c168a19d2c3a002b43109bd98bd758dfd/google-search-results-serpwow-1.1.4.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "bcf92bd6e2699d47ecf0d2d09ba05945", "sha256": "32bae5a220e4a9080c2bc1bc88721d15c760b5ea6a0308d485bd28ae54e31598"}, "downloads": -1, "filename": "google_search_results_serpwow-1.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "bcf92bd6e2699d47ecf0d2d09ba05945", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8236, "upload_time": "2019-05-24T06:47:51", "upload_time_iso_8601": "2019-05-24T06:47:51.175787Z", "url": "https://files.pythonhosted.org/packages/c3/5b/a3a743426578d3dd19e19786d856bb9ad3a0b2a34342cd5aed9f39411ff8/google_search_results_serpwow-1.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95ff491b10887d81310d3b956f9aae63", "sha256": "1300514d4e3b7eaa2d4f66b0a8f72e58733a0494152957b86b3132c2ab3dbcac"}, "downloads": -1, "filename": "google-search-results-serpwow-1.1.5.tar.gz", "has_sig": false, "md5_digest": "95ff491b10887d81310d3b956f9aae63", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8767, "upload_time": "2019-05-24T06:47:53", "upload_time_iso_8601": "2019-05-24T06:47:53.535665Z", "url": "https://files.pythonhosted.org/packages/9e/f5/53ff52b2c3b22a3446055bc765c9677dae518f95a2b2c526eb903349e747/google-search-results-serpwow-1.1.5.tar.gz", "yanked": false}], "1.1.6": [{"comment_text": "", "digests": {"md5": "99653c1b1214937601108ce055643be7", "sha256": "fb8529543f0c682d46a97b0bcb3e2098c8539fa43efef9cba6422e59615215ae"}, "downloads": -1, "filename": "google_search_results_serpwow-1.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "99653c1b1214937601108ce055643be7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8472, "upload_time": "2019-06-25T10:55:01", "upload_time_iso_8601": "2019-06-25T10:55:01.967334Z", "url": "https://files.pythonhosted.org/packages/77/bf/45582418261bfc1dbf4f2a6f18a02a578ac25b4d4e394fb0cc46f240536b/google_search_results_serpwow-1.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d9c8999a0831b9a5b9c8bf839ddf8d3", "sha256": "6e7662896991e25030a2a11258cbf16a8f9ed65eb72fbc3d1b43d4251c503ce4"}, "downloads": -1, "filename": "google-search-results-serpwow-1.1.6.tar.gz", "has_sig": false, "md5_digest": "5d9c8999a0831b9a5b9c8bf839ddf8d3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 9055, "upload_time": "2019-06-25T10:55:04", "upload_time_iso_8601": "2019-06-25T10:55:04.242778Z", "url": "https://files.pythonhosted.org/packages/32/97/3f21a5398eb5d4d5cf065041cdb74a951d0950f7996709fb3e17877a6c05/google-search-results-serpwow-1.1.6.tar.gz", "yanked": false}], "1.1.7": [{"comment_text": "", "digests": {"md5": "0c255d6f9cf81d92f7ee78b241672f57", "sha256": "bf1af864d08177b3566d896c70d7fee8c7a8c05cc0c2a6865b6850a2043f11f7"}, "downloads": -1, "filename": "google_search_results_serpwow-1.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "0c255d6f9cf81d92f7ee78b241672f57", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8294, "upload_time": "2019-09-27T12:18:44", "upload_time_iso_8601": "2019-09-27T12:18:44.543029Z", "url": "https://files.pythonhosted.org/packages/38/0d/b7f749890aefc6669c49292c0043b7aba4de6b407d75fc191b1d633b909d/google_search_results_serpwow-1.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7a453f726bf9e9d6c5c00250129e82d", "sha256": "a47923ceb6d9e83ea4b8b56849e7754600101af6a3de591d2a948f2f1a979af8"}, "downloads": -1, "filename": "google-search-results-serpwow-1.1.7.tar.gz", "has_sig": false, "md5_digest": "a7a453f726bf9e9d6c5c00250129e82d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8812, "upload_time": "2019-09-27T12:18:46", "upload_time_iso_8601": "2019-09-27T12:18:46.788952Z", "url": "https://files.pythonhosted.org/packages/fe/6d/2bd9586329572630803aaa1a0f473364be049a5af1ef9de72cbbf6c52cb9/google-search-results-serpwow-1.1.7.tar.gz", "yanked": false}], "1.1.8": [{"comment_text": "", "digests": {"md5": "316804b021a9cf315bb1f55ee65b7f54", "sha256": "0b8f5484ad7efe6a159c049b385ae4bf02d6f0e914220aa92a21b799e0780086"}, "downloads": -1, "filename": "google_search_results_serpwow-1.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "316804b021a9cf315bb1f55ee65b7f54", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8304, "upload_time": "2020-02-15T09:53:35", "upload_time_iso_8601": "2020-02-15T09:53:35.392289Z", "url": "https://files.pythonhosted.org/packages/a2/46/8e3dfd12ece25bbed7691da8ae90f15659d54ef827a101d6d850af8e5806/google_search_results_serpwow-1.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c480d657da3675664de16168592003e", "sha256": "a83dd42662e142c5193447467c4bcb482e8cca27863607a02fddc919c1c26073"}, "downloads": -1, "filename": "google-search-results-serpwow-1.1.8.tar.gz", "has_sig": false, "md5_digest": "7c480d657da3675664de16168592003e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8821, "upload_time": "2020-02-15T09:53:37", "upload_time_iso_8601": "2020-02-15T09:53:37.243274Z", "url": "https://files.pythonhosted.org/packages/c1/20/f110b2bb6cce72e8576310241fcc5f57030b1e66503e58581b436a55d7f2/google-search-results-serpwow-1.1.8.tar.gz", "yanked": false}], "1.1.9": [{"comment_text": "", "digests": {"md5": "d73678a8ff88528d26a8b91318f1d8ba", "sha256": "e980c30853e402878687512921212149a2b25e3552c2cbebd969409090a97445"}, "downloads": -1, "filename": "google_search_results_serpwow-1.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "d73678a8ff88528d26a8b91318f1d8ba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8303, "upload_time": "2020-03-31T08:29:45", "upload_time_iso_8601": "2020-03-31T08:29:45.417544Z", "url": "https://files.pythonhosted.org/packages/ad/90/c3acc02eb6d47baf4974a7b807682edefb4eb840de028c12d69367c71365/google_search_results_serpwow-1.1.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6ce9bbdf0d5893466fdc168553d3fd7", "sha256": "54143a62afe22eab8bc30697f8e67a2208d2c4536f76e4c2829ac839c843421a"}, "downloads": -1, "filename": "google-search-results-serpwow-1.1.9.tar.gz", "has_sig": false, "md5_digest": "a6ce9bbdf0d5893466fdc168553d3fd7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8819, "upload_time": "2020-03-31T08:29:46", "upload_time_iso_8601": "2020-03-31T08:29:46.946898Z", "url": "https://files.pythonhosted.org/packages/60/c0/a5e813da527f5786d7dcbbb0e3fc9e47b7a522745921f5c2fe8587d5d669/google-search-results-serpwow-1.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0897042b4bef022cfa33a77dd81add25", "sha256": "1d4090d35587bb4e7a95f66db697448db459cc4d1c28eb5d6dba6fd75a4f7ee5"}, "downloads": -1, "filename": "google_search_results_serpwow-1.1.11-py3-none-any.whl", "has_sig": false, "md5_digest": "0897042b4bef022cfa33a77dd81add25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 8522, "upload_time": "2020-04-17T06:39:51", "upload_time_iso_8601": "2020-04-17T06:39:51.808129Z", "url": "https://files.pythonhosted.org/packages/19/29/32e32e6a0bbf76f49029042ff31ceb78d8cb710894bd1e7b0120afe824cc/google_search_results_serpwow-1.1.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ec4cdf237083203504f90d9f78947a9", "sha256": "5e05364c1fa061f3fc37d0b1b90a04a6addcfed085479311a2c002d33016a225"}, "downloads": -1, "filename": "google-search-results-serpwow-1.1.11.tar.gz", "has_sig": false, "md5_digest": "3ec4cdf237083203504f90d9f78947a9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 9151, "upload_time": "2020-04-17T06:39:53", "upload_time_iso_8601": "2020-04-17T06:39:53.507794Z", "url": "https://files.pythonhosted.org/packages/b2/5f/0fd2cb0d625b33c5e7f50a1276d65624e16bdeeb39b32dc97350d1e4b996/google-search-results-serpwow-1.1.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:33 2020"}