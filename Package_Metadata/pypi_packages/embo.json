{"info": {"author": "Eugenio Piasini", "author_email": "epiasini@sas.upenn.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Information Analysis"], "description": "# EMBO - Empirical Bottleneck\n[![License](https://img.shields.io/pypi/l/embo)](https://www.gnu.org/licenses/gpl-3.0.txt)\n[![PyPI version](https://img.shields.io/pypi/v/embo.svg)](https://pypi.python.org/pypi/embo/)\n[![Build status](https://img.shields.io/gitlab/pipeline/epiasini/embo)](https://gitlab.com/epiasini/embo/pipelines)\n\nA Python implementation of the Information Bottleneck analysis\nframework [[Tishby, Pereira, Bialek\n2001]](https://arxiv.org/abs/physics/0004057), especially geared\ntowards the analysis of concrete, finite-size data sets.\n\n## Requirements\n\n`embo` requires Python 3, `numpy` and `scipy`.\n\n## Installation\nTo install the latest release, run:\n``` bash\npip install embo\n```\n(depending on your system, you may need to use `pip3` instead of `pip`\nin the command above).\n\n### Testing\n(requires `setuptools`). If `embo` is already installed on your\nsystem, look for the copy of the `test_embo.py` script installed\nalongside the rest of the `embo` files and execute it. For example:\n\n``` bash\npython /usr/lib/python3.X/site-packages/embo/test_embo.py\n```\n\n**Alternatively**, if you have downloaded the source, from within the\nroot folder of the source distribution run:\n\n``` bash\npython setup.py test\n```\n\nThis should run through all tests specified in `embo/test`.\n\n## Usage\n\n### The Information Bottleneck\nWe refer to [[Tishby, Pereira, Bialek\n2001]](https://arxiv.org/abs/physics/0004057) for a general\nintroduction to the Information Bottleneck. Briefly, if X and Y\nare two random variables, we are interested in finding another random\nvariable M (called the \"bottleneck\" variable) that solves the\nfollowing optimisation problem:\n\nmin_{p(m|x)}I(M:X) - \u03b2 I(M:Y)\n\nfor any \u03b2>0, and where M is constrained to be independent on\nY conditional on X:\n\np(x,m,y) = p(x)p(m|x)p(y|x)\n\n\nIntuitively, we want to find the stochastic mapping p(M|X) that\nextracts from X as much information about Y as possible while\nforgetting all irrelevant information. \u03b2 is a free parameter\nthat sets the relative importance of forgetting irrelevant information\nversus remembering useful information. Usually, one is interested in\nthe curve described by I(M:X) and I(M:Y) at the solution of the\nbottleneck problem for a range of values of \u03b2. This curve\ngives the optimal tradeoff of compression and prediction, telling us\nwhat is the minimum amount of information one needs to know about X\nto be able to predict Y to a certain accuracy, or vice versa, what\nis the maximum accuracy one can have in predicting Y given a certain\namount of information about X.\n\n### Using `embo`\nIn embo, we assume that the true joint distribution of X and Y is not\navailable, and that we only have a set of joint empirical\nobservations. We also assume that X and Y both take on a finite number\nof discrete values. The main point of entry to the package is the\n`EmpiricalBottleneck` class. In its constructor, `EmpiricalBottleneck`\ntakes as arguments an array of observations for X and an (equally\nlong) array of observations for Y, together with other optional\nparameters (see the docstring for details). In the most basic use\ncase, users can call the `get_information_bottleneck` method of an\n`EmpiricalBottleneck` object, which will return a set of \u03b2 values and\nthe optimal values of I(M:X) and I(M:Y) corresponding to those \u03b2. The\noptimal tradeoff can then be visualised by plotting I(M:Y) vs I(M:Y).\n\nFor instance:\n\n``` python\nimport numpy as np\nfrom matplotlib import pyplot as plt\nfrom embo import EmpiricalBottleneck\n\n# data sequences\nx = np.array([0,0,0,1,0,1,0,1,0,1])\ny = np.array([0,1,0,1,0,1,0,1,0,1])\n\n# compute the IB bound from the data\nI_x,I_y,\u03b2 = EmpiricalBottleneck(x,y).get_empirical_bottleneck()\n\n# plot the optimal compression-prediction bound\nplt.plot(I_x,I_y)\n```\n\n### More examples\nA simple example of usage with synthetic data is located at\n[embo/examples/Basic-Example.ipynb](embo/examples/Basic-Example.ipynb).\nA more meaningful example is located at\n[embo/examples/Markov-Chains.ipynb](embo/examples/Markov-Chains.ipynb),\nwhere we compute the Information Bottleneck between the past and the\nfuture of time series generated from different Markov chains.\n\n### Further details\nFor more details, please consult the docstrings for\n`empirical_bottleneck` and `IB`.\n\n## Authors\n`embo` is maintained by Eugenio Piasini, Alexandre Filipowicz and\nJonathan Levine.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/epiasini/embo", "keywords": "", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "embo", "package_url": "https://pypi.org/project/embo/", "platform": "", "project_url": "https://pypi.org/project/embo/", "project_urls": {"Homepage": "https://gitlab.com/epiasini/embo"}, "release_url": "https://pypi.org/project/embo/1.0.2/", "requires_dist": null, "requires_python": ">=3", "summary": "Empirical Information Bottleneck", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>EMBO - Empirical Bottleneck</h1>\n<p><a href=\"https://www.gnu.org/licenses/gpl-3.0.txt\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/98ea1b07c66ea52875b1d26a62024b68bf62923e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f656d626f\"></a>\n<a href=\"https://pypi.python.org/pypi/embo/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b9aad84fda930cc910ef6c6d4c5d8170348b953/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f656d626f2e737667\"></a>\n<a href=\"https://gitlab.com/epiasini/embo/pipelines\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b14914628aff03eb59868719a6156fb6c12245d5/68747470733a2f2f696d672e736869656c64732e696f2f6769746c61622f706970656c696e652f6570696173696e692f656d626f\"></a></p>\n<p>A Python implementation of the Information Bottleneck analysis\nframework <a href=\"https://arxiv.org/abs/physics/0004057\" rel=\"nofollow\">[Tishby, Pereira, Bialek\n2001]</a>, especially geared\ntowards the analysis of concrete, finite-size data sets.</p>\n<h2>Requirements</h2>\n<p><code>embo</code> requires Python 3, <code>numpy</code> and <code>scipy</code>.</p>\n<h2>Installation</h2>\n<p>To install the latest release, run:</p>\n<pre>pip install embo\n</pre>\n<p>(depending on your system, you may need to use <code>pip3</code> instead of <code>pip</code>\nin the command above).</p>\n<h3>Testing</h3>\n<p>(requires <code>setuptools</code>). If <code>embo</code> is already installed on your\nsystem, look for the copy of the <code>test_embo.py</code> script installed\nalongside the rest of the <code>embo</code> files and execute it. For example:</p>\n<pre>python /usr/lib/python3.X/site-packages/embo/test_embo.py\n</pre>\n<p><strong>Alternatively</strong>, if you have downloaded the source, from within the\nroot folder of the source distribution run:</p>\n<pre>python setup.py <span class=\"nb\">test</span>\n</pre>\n<p>This should run through all tests specified in <code>embo/test</code>.</p>\n<h2>Usage</h2>\n<h3>The Information Bottleneck</h3>\n<p>We refer to <a href=\"https://arxiv.org/abs/physics/0004057\" rel=\"nofollow\">[Tishby, Pereira, Bialek\n2001]</a> for a general\nintroduction to the Information Bottleneck. Briefly, if X and Y\nare two random variables, we are interested in finding another random\nvariable M (called the \"bottleneck\" variable) that solves the\nfollowing optimisation problem:</p>\n<p>min_{p(m|x)}I(M:X) - \u03b2 I(M:Y)</p>\n<p>for any \u03b2&gt;0, and where M is constrained to be independent on\nY conditional on X:</p>\n<p>p(x,m,y) = p(x)p(m|x)p(y|x)</p>\n<p>Intuitively, we want to find the stochastic mapping p(M|X) that\nextracts from X as much information about Y as possible while\nforgetting all irrelevant information. \u03b2 is a free parameter\nthat sets the relative importance of forgetting irrelevant information\nversus remembering useful information. Usually, one is interested in\nthe curve described by I(M:X) and I(M:Y) at the solution of the\nbottleneck problem for a range of values of \u03b2. This curve\ngives the optimal tradeoff of compression and prediction, telling us\nwhat is the minimum amount of information one needs to know about X\nto be able to predict Y to a certain accuracy, or vice versa, what\nis the maximum accuracy one can have in predicting Y given a certain\namount of information about X.</p>\n<h3>Using <code>embo</code></h3>\n<p>In embo, we assume that the true joint distribution of X and Y is not\navailable, and that we only have a set of joint empirical\nobservations. We also assume that X and Y both take on a finite number\nof discrete values. The main point of entry to the package is the\n<code>EmpiricalBottleneck</code> class. In its constructor, <code>EmpiricalBottleneck</code>\ntakes as arguments an array of observations for X and an (equally\nlong) array of observations for Y, together with other optional\nparameters (see the docstring for details). In the most basic use\ncase, users can call the <code>get_information_bottleneck</code> method of an\n<code>EmpiricalBottleneck</code> object, which will return a set of \u03b2 values and\nthe optimal values of I(M:X) and I(M:Y) corresponding to those \u03b2. The\noptimal tradeoff can then be visualised by plotting I(M:Y) vs I(M:Y).</p>\n<p>For instance:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">matplotlib</span> <span class=\"kn\">import</span> <span class=\"n\">pyplot</span> <span class=\"k\">as</span> <span class=\"n\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">embo</span> <span class=\"kn\">import</span> <span class=\"n\">EmpiricalBottleneck</span>\n\n<span class=\"c1\"># data sequences</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># compute the IB bound from the data</span>\n<span class=\"n\">I_x</span><span class=\"p\">,</span><span class=\"n\">I_y</span><span class=\"p\">,</span><span class=\"n\">\u03b2</span> <span class=\"o\">=</span> <span class=\"n\">EmpiricalBottleneck</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_empirical_bottleneck</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># plot the optimal compression-prediction bound</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">I_x</span><span class=\"p\">,</span><span class=\"n\">I_y</span><span class=\"p\">)</span>\n</pre>\n<h3>More examples</h3>\n<p>A simple example of usage with synthetic data is located at\n<a href=\"embo/examples/Basic-Example.ipynb\" rel=\"nofollow\">embo/examples/Basic-Example.ipynb</a>.\nA more meaningful example is located at\n<a href=\"embo/examples/Markov-Chains.ipynb\" rel=\"nofollow\">embo/examples/Markov-Chains.ipynb</a>,\nwhere we compute the Information Bottleneck between the past and the\nfuture of time series generated from different Markov chains.</p>\n<h3>Further details</h3>\n<p>For more details, please consult the docstrings for\n<code>empirical_bottleneck</code> and <code>IB</code>.</p>\n<h2>Authors</h2>\n<p><code>embo</code> is maintained by Eugenio Piasini, Alexandre Filipowicz and\nJonathan Levine.</p>\n\n          </div>"}, "last_serial": 7184113, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "93e84fbcc5c3df94e05c271527c11dd5", "sha256": "0ed9ce74afaed41b66593c0d2be0bd64aff66b5ad03c1ccbc839dd0b56bf3056"}, "downloads": -1, "filename": "embo-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "93e84fbcc5c3df94e05c271527c11dd5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 19522, "upload_time": "2019-12-20T17:23:54", "upload_time_iso_8601": "2019-12-20T17:23:54.916309Z", "url": "https://files.pythonhosted.org/packages/f0/67/90ec9e6dce1bb56455523f9f87118e77ecde7e44c948c4ad7474ca067953/embo-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "853b5e88bc172cd02e5dc71159745f6c", "sha256": "1d05a17e46b780662749e2087396cafb77a500c03918973ef658b27a84c3d18f"}, "downloads": -1, "filename": "embo-0.3.0.tar.gz", "has_sig": false, "md5_digest": "853b5e88bc172cd02e5dc71159745f6c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 45245, "upload_time": "2019-12-20T17:23:57", "upload_time_iso_8601": "2019-12-20T17:23:57.755428Z", "url": "https://files.pythonhosted.org/packages/2d/68/06d94f4f1f168c287154a8a64ba584c1967bd6eb41d1c9dc1baf4e42c35c/embo-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "6d59919a8e77ffbdb540ad7aef2bb7b9", "sha256": "4d9ed8957ca6147667aabf6f679af7bc2c906a52a132c0e313be0d2df1db760a"}, "downloads": -1, "filename": "embo-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6d59919a8e77ffbdb540ad7aef2bb7b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 56346, "upload_time": "2020-01-21T18:14:38", "upload_time_iso_8601": "2020-01-21T18:14:38.984611Z", "url": "https://files.pythonhosted.org/packages/14/3a/ecb3ced3fe401d1535ad9081065a8cfde523d616c17af41a74d1aeaf8676/embo-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4abd60c6cd4a4b3bde35f8219c89dc31", "sha256": "9692d2bc73b756ab23731356700685e5601f7a0a88b9f410cac603de787f00c2"}, "downloads": -1, "filename": "embo-0.3.1.tar.gz", "has_sig": false, "md5_digest": "4abd60c6cd4a4b3bde35f8219c89dc31", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 57460, "upload_time": "2020-01-21T18:14:41", "upload_time_iso_8601": "2020-01-21T18:14:41.521862Z", "url": "https://files.pythonhosted.org/packages/8e/64/0f218825e69b9854949b67943b430a43445f84335a039acb7c221cb64ac2/embo-0.3.1.tar.gz", "yanked": false}], "0.3.1.dev0": [{"comment_text": "", "digests": {"md5": "478dd9e244814d583049cb87047d86ce", "sha256": "585bdf875eb379d36b335a572368aa93bc9bdd6556002d2c71fbcc7f7f32c8e2"}, "downloads": -1, "filename": "embo-0.3.1.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "478dd9e244814d583049cb87047d86ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 56996, "upload_time": "2020-01-21T18:05:35", "upload_time_iso_8601": "2020-01-21T18:05:35.219143Z", "url": "https://files.pythonhosted.org/packages/b5/97/57851cabae7b9e19d7845050fe0732b884d2a011b49a2610337173ed0d6e/embo-0.3.1.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2f257087f9edb8b2b2841b55d45bf3f", "sha256": "1a74494ad228c2a6bb623951684e6fb30329d96aab344b76df3c747f28d0c0a1"}, "downloads": -1, "filename": "embo-0.3.1.dev0.tar.gz", "has_sig": false, "md5_digest": "c2f257087f9edb8b2b2841b55d45bf3f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 57947, "upload_time": "2020-01-21T18:05:37", "upload_time_iso_8601": "2020-01-21T18:05:37.690043Z", "url": "https://files.pythonhosted.org/packages/44/fc/ee24529cf22e67474712a75af03f5953fd891e73dcf4d27efa7b76c0b680/embo-0.3.1.dev0.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "41b39326884f39bb47cf6c44fdad4b3e", "sha256": "27f60c15cbf6f73e82d7bd51a65bbe120a26a3593ec98142121a76e21344cb5f"}, "downloads": -1, "filename": "embo-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "41b39326884f39bb47cf6c44fdad4b3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 200343, "upload_time": "2020-01-23T13:46:42", "upload_time_iso_8601": "2020-01-23T13:46:42.834427Z", "url": "https://files.pythonhosted.org/packages/4f/ca/072b105af55b1ae108c0d22ae436d43ffdba2b3b40457fe263c782cc979a/embo-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d24882a52e4a9c522dccdfebf98cfea", "sha256": "b26f00bc378e51ff2a381b913e987d87efad5e6fdd130619597ddf3e5f9c1131"}, "downloads": -1, "filename": "embo-0.3.3.tar.gz", "has_sig": false, "md5_digest": "5d24882a52e4a9c522dccdfebf98cfea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 164693, "upload_time": "2020-01-23T13:46:45", "upload_time_iso_8601": "2020-01-23T13:46:45.840366Z", "url": "https://files.pythonhosted.org/packages/15/b0/774ac2dcb8f639eee215754496d82dd6d4a166cc962cd5fdfd688392932c/embo-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "eea9725b9d0b8d76a7b6a6968ceb5e6e", "sha256": "0f4c9a4a1ccf4fcd9181d2f9912909217cc984e8313b2784af181871f599f2d6"}, "downloads": -1, "filename": "embo-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eea9725b9d0b8d76a7b6a6968ceb5e6e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 218135, "upload_time": "2020-01-23T21:05:09", "upload_time_iso_8601": "2020-01-23T21:05:09.736437Z", "url": "https://files.pythonhosted.org/packages/26/5d/0ebe9da171e3be1bde56a91f3f5aa5a075fe17f94c54af1e8d71272d46c8/embo-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a739ccde38f9b0154b296adf33726eb6", "sha256": "a9a9189ab470e64aa8a21cd4d7f3a30225c3a4c7525e2fc289ce75c2d0763966"}, "downloads": -1, "filename": "embo-0.4.0.tar.gz", "has_sig": false, "md5_digest": "a739ccde38f9b0154b296adf33726eb6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 182937, "upload_time": "2020-01-23T21:05:12", "upload_time_iso_8601": "2020-01-23T21:05:12.666369Z", "url": "https://files.pythonhosted.org/packages/08/a0/d4f895e19340ae5b004cac5b743af7fdf338cbb7b6d910f5c54f8585ba4b/embo-0.4.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "8eb87fd3deb585ad726fd8ffb7c29198", "sha256": "196fe1c30d50801cc11392da5e5dc4ac6f57dbec22a7c120faf9dfd6d564587e"}, "downloads": -1, "filename": "embo-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8eb87fd3deb585ad726fd8ffb7c29198", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 257000, "upload_time": "2020-02-03T20:35:25", "upload_time_iso_8601": "2020-02-03T20:35:25.641502Z", "url": "https://files.pythonhosted.org/packages/9b/17/deee079a413238471e2dc539d71140ebb3deaba713a7a863c83e1b409b21/embo-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad7c92ae01501fd1b49c0ef01b036467", "sha256": "9924dea5e7e9f29b2e051e15a36f24d0efb69a0f2f0dcf70a7430a4fc5888f5e"}, "downloads": -1, "filename": "embo-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ad7c92ae01501fd1b49c0ef01b036467", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 258507, "upload_time": "2020-02-03T20:35:27", "upload_time_iso_8601": "2020-02-03T20:35:27.497226Z", "url": "https://files.pythonhosted.org/packages/a4/bd/6509eef9e9275afd8342e23fc693d3b6c5daac6d48197c411d272eddcdd0/embo-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "fa57fdbe448aaafcdfea7767dacbbc88", "sha256": "95bccdbbb2ba8178a61c1cfde52f2c5e4f240092d709bbf08df19dda8a123576"}, "downloads": -1, "filename": "embo-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fa57fdbe448aaafcdfea7767dacbbc88", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 257010, "upload_time": "2020-02-04T02:29:32", "upload_time_iso_8601": "2020-02-04T02:29:32.338086Z", "url": "https://files.pythonhosted.org/packages/0a/2e/149823c6f7fd998d89c3dbe06af33b45bb8cb9ba902909d4dffe14cd5f79/embo-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7c325fda5be53d52ab3f15e53dbc52f", "sha256": "6d9a5bdda2af1dad9d6d85e291298c8ca19082c586022a0af688c37d45c85656"}, "downloads": -1, "filename": "embo-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b7c325fda5be53d52ab3f15e53dbc52f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 258519, "upload_time": "2020-02-04T02:29:35", "upload_time_iso_8601": "2020-02-04T02:29:35.326840Z", "url": "https://files.pythonhosted.org/packages/f2/e2/6af4cc441139c454869592c23f0585a6a18a3cc91e40245e4f7977abfb6f/embo-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "bdb1c8ba2085668083b65665e210ede5", "sha256": "f6d7d81bc37f9135a2f0d7e3e310933358d6c5f4e3c2d731096cb9287ae69442"}, "downloads": -1, "filename": "embo-1.0.2.tar.gz", "has_sig": false, "md5_digest": "bdb1c8ba2085668083b65665e210ede5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 260837, "upload_time": "2020-05-06T23:00:34", "upload_time_iso_8601": "2020-05-06T23:00:34.596210Z", "url": "https://files.pythonhosted.org/packages/3a/2b/49a8835a68cc9a3ce7ce06903fcde7b0863f8a977a59202c608305badfd1/embo-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bdb1c8ba2085668083b65665e210ede5", "sha256": "f6d7d81bc37f9135a2f0d7e3e310933358d6c5f4e3c2d731096cb9287ae69442"}, "downloads": -1, "filename": "embo-1.0.2.tar.gz", "has_sig": false, "md5_digest": "bdb1c8ba2085668083b65665e210ede5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 260837, "upload_time": "2020-05-06T23:00:34", "upload_time_iso_8601": "2020-05-06T23:00:34.596210Z", "url": "https://files.pythonhosted.org/packages/3a/2b/49a8835a68cc9a3ce7ce06903fcde7b0863f8a977a59202c608305badfd1/embo-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:40 2020"}