{"info": {"author": "J\u00f4nathas Gouveia", "author_email": "jonathas_gouv@hotmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "#  Vectorial\n\nPT-BR\nO objetivo desse m\u00f3dulo \u00e9 criar um modo de lidar com vetores que seja o mais pr\u00f3ximo poss\u00edvel de fun\u00e7\u00e3o built-in, quase como se o vetor se torna-se um novo tipo de vari\u00e1vel dentro do Python. Eu busquei adicionar todas as opera\u00e7\u00f5es com vetores existentes, todas as propriedades poss\u00edveis. Caso eu tenha esquecido algo por favor me avise e eu tentarei implementar.\n\nOptei por n\u00e3o implementar a fun\u00e7\u00e3o de plot visto que \u00e9 poss\u00edvel plotar facilmente utilizando a biblioteca matplotlin, tendo os par\u00e2metros self.x e self.y como entrada. Caso voc\u00eas vejam utilidade e necessidade a fun\u00e7\u00e3o pode ser implementada em vers\u00f5es seguintes.\n\nObserve que todos os m\u00e9todos funcionam utilizando vetores representados com coordenadas, portanto se voc\u00ea tem um vetor representado como m\u00f3dulo e \u00e2ngulo utilize primeiro o m\u00e9todo est\u00e1tico Vector.decompose(), e s\u00f3 ent\u00e3o use o vetor resultante com as dema\u00e7\u00f5es fun\u00e7\u00f5es. \u00c9 poss\u00edvel retornar ao estado original utilizando o m\u00e9todo self.compose, que retornar\u00e1 uma lista contendo o m\u00f3dulo e o \u00e2ngulo original.\n\nEN-US\nThe purpose of this module is to create a way of dealing with vectors that is as close to the built-in function as possible, almost as if the vector becomes a new type of variable within Python. I've tried adding all operations with existing vectors, all possible properties. If I have forgotten something please let me know and I will try to implement.\n\nI chose not to implement the plot function since it is possible to easily plot using the matplotlin library, taking the parameters self.x and self.y as input. If you see utility and necessity the function can be implemented in subsequent versions.\n\nNote that all methods work by using vectors represented with coordinates, so if you have a vector\nrepresented as a module and angle, first use the static method Vector.decompose (), and then use the resultant vector with the functions. It is possible to return to the original state using the self.compose method, which will return a list containing the original module and angle.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jonathasgouv/pyvector", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "Vectorial", "package_url": "https://pypi.org/project/Vectorial/", "platform": "", "project_url": "https://pypi.org/project/Vectorial/", "project_urls": {"Homepage": "https://github.com/jonathasgouv/pyvector"}, "release_url": "https://pypi.org/project/Vectorial/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "A vector module", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Vectorial</h1>\n<p>PT-BR\nO objetivo desse m\u00f3dulo \u00e9 criar um modo de lidar com vetores que seja o mais pr\u00f3ximo poss\u00edvel de fun\u00e7\u00e3o built-in, quase como se o vetor se torna-se um novo tipo de vari\u00e1vel dentro do Python. Eu busquei adicionar todas as opera\u00e7\u00f5es com vetores existentes, todas as propriedades poss\u00edveis. Caso eu tenha esquecido algo por favor me avise e eu tentarei implementar.</p>\n<p>Optei por n\u00e3o implementar a fun\u00e7\u00e3o de plot visto que \u00e9 poss\u00edvel plotar facilmente utilizando a biblioteca matplotlin, tendo os par\u00e2metros self.x e self.y como entrada. Caso voc\u00eas vejam utilidade e necessidade a fun\u00e7\u00e3o pode ser implementada em vers\u00f5es seguintes.</p>\n<p>Observe que todos os m\u00e9todos funcionam utilizando vetores representados com coordenadas, portanto se voc\u00ea tem um vetor representado como m\u00f3dulo e \u00e2ngulo utilize primeiro o m\u00e9todo est\u00e1tico Vector.decompose(), e s\u00f3 ent\u00e3o use o vetor resultante com as dema\u00e7\u00f5es fun\u00e7\u00f5es. \u00c9 poss\u00edvel retornar ao estado original utilizando o m\u00e9todo self.compose, que retornar\u00e1 uma lista contendo o m\u00f3dulo e o \u00e2ngulo original.</p>\n<p>EN-US\nThe purpose of this module is to create a way of dealing with vectors that is as close to the built-in function as possible, almost as if the vector becomes a new type of variable within Python. I've tried adding all operations with existing vectors, all possible properties. If I have forgotten something please let me know and I will try to implement.</p>\n<p>I chose not to implement the plot function since it is possible to easily plot using the matplotlin library, taking the parameters self.x and self.y as input. If you see utility and necessity the function can be implemented in subsequent versions.</p>\n<p>Note that all methods work by using vectors represented with coordinates, so if you have a vector\nrepresented as a module and angle, first use the static method Vector.decompose (), and then use the resultant vector with the functions. It is possible to return to the original state using the self.compose method, which will return a list containing the original module and angle.</p>\n\n          </div>"}, "last_serial": 5359519, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d723f5f57ca5e09f3fd5f0b61a4f3375", "sha256": "313582512771cd8f44deb3a721676e351b99e5546e0ae6e7f7c9016d2199929d"}, "downloads": -1, "filename": "Vectorial-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d723f5f57ca5e09f3fd5f0b61a4f3375", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2956, "upload_time": "2019-06-04T19:10:00", "upload_time_iso_8601": "2019-06-04T19:10:00.153033Z", "url": "https://files.pythonhosted.org/packages/31/00/8993d4a518bf63bedad7d39d5016451f309b56d47904d9f2a468c8ce35a1/Vectorial-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e034ae475408968a5fad937e016c89a", "sha256": "99133d473d692221633104d8e3832b77ba8df687283ffc69851f849b3096c1d3"}, "downloads": -1, "filename": "Vectorial-0.0.1.tar.gz", "has_sig": false, "md5_digest": "0e034ae475408968a5fad937e016c89a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2025, "upload_time": "2019-06-04T19:10:02", "upload_time_iso_8601": "2019-06-04T19:10:02.633471Z", "url": "https://files.pythonhosted.org/packages/b0/e0/844cd417440dba7e0836f0c3eb152ff2fa72fe6b2318ec0259fe0aa774c9/Vectorial-0.0.1.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "10d99e0b07afb35c814e933c73bae41d", "sha256": "5b60aca9240563ca252f76bc6f1abbffecd645a9c484d05963525cec2ed2baf6"}, "downloads": -1, "filename": "Vectorial-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "10d99e0b07afb35c814e933c73bae41d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6280, "upload_time": "2019-06-04T19:46:58", "upload_time_iso_8601": "2019-06-04T19:46:58.528390Z", "url": "https://files.pythonhosted.org/packages/5d/42/9564805bd6987df593f111b2a6faf5c9241d1a57ba6c375185ada0929269/Vectorial-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f3dc99e55061d1f2ae8053e0efc463c", "sha256": "f327bee7722a971fc5e9dbb14867a04b47533fd0e1df3a9f0eb66032bff38fb9"}, "downloads": -1, "filename": "Vectorial-0.0.6.tar.gz", "has_sig": false, "md5_digest": "2f3dc99e55061d1f2ae8053e0efc463c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4330, "upload_time": "2019-06-04T19:46:59", "upload_time_iso_8601": "2019-06-04T19:46:59.725336Z", "url": "https://files.pythonhosted.org/packages/9a/df/f3850c4f6667b062a81b5fdb510dc14f803d5dc4f351681e17d36034affb/Vectorial-0.0.6.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "c565da38600c7ee633bc3cc26dd4ac31", "sha256": "09493c08e46dae02b5b251c0cb47ad9bfabac5734d079a5178a153b3d459c418"}, "downloads": -1, "filename": "Vectorial-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c565da38600c7ee633bc3cc26dd4ac31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6280, "upload_time": "2019-06-04T20:29:39", "upload_time_iso_8601": "2019-06-04T20:29:39.864441Z", "url": "https://files.pythonhosted.org/packages/65/70/664fb44c7264549b5633154c25e0571b5d99b3b7fdaffc8b19b56d1c1c97/Vectorial-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0bb2e5aa8260a2a5612d97ef00d5f82f", "sha256": "04c7101bd83cd362a168a109dc0c6046d6a011caca8bb448af1a4a31711a9b29"}, "downloads": -1, "filename": "Vectorial-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0bb2e5aa8260a2a5612d97ef00d5f82f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4330, "upload_time": "2019-06-04T20:29:41", "upload_time_iso_8601": "2019-06-04T20:29:41.101049Z", "url": "https://files.pythonhosted.org/packages/3c/74/009472128b943e74f01220e5aec564fae2af15e571a8f504abfc87423488/Vectorial-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c565da38600c7ee633bc3cc26dd4ac31", "sha256": "09493c08e46dae02b5b251c0cb47ad9bfabac5734d079a5178a153b3d459c418"}, "downloads": -1, "filename": "Vectorial-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c565da38600c7ee633bc3cc26dd4ac31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6280, "upload_time": "2019-06-04T20:29:39", "upload_time_iso_8601": "2019-06-04T20:29:39.864441Z", "url": "https://files.pythonhosted.org/packages/65/70/664fb44c7264549b5633154c25e0571b5d99b3b7fdaffc8b19b56d1c1c97/Vectorial-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0bb2e5aa8260a2a5612d97ef00d5f82f", "sha256": "04c7101bd83cd362a168a109dc0c6046d6a011caca8bb448af1a4a31711a9b29"}, "downloads": -1, "filename": "Vectorial-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0bb2e5aa8260a2a5612d97ef00d5f82f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4330, "upload_time": "2019-06-04T20:29:41", "upload_time_iso_8601": "2019-06-04T20:29:41.101049Z", "url": "https://files.pythonhosted.org/packages/3c/74/009472128b943e74f01220e5aec564fae2af15e571a8f504abfc87423488/Vectorial-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:12 2020"}