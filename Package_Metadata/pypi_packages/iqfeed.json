{"info": {"author": "Tibor Kiss", "author_email": "tibor.kiss@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Topic :: Office/Business :: Financial :: Investment"], "description": "IQFeed/DTN Downloader\n=====================\n\nThis project provides command line tool and Python library to access DTN\n/ IQFeed's historical data for equities. The provided command line tool\n('iqfeed') is capable downloading 1 minute historical data from IQFeed\nclient and store it in '.csv.gz' format.\n\nPrerequisites\n-------------\n\n-  Python 2.7 (`pypy <http://pypy.org>`__ is recommended), DocOpt, PyTZ,\n   backports.functools\\_lru\\_cache\n-  IQFeed account\n-  IQFeed client (e.g. `bratchenko's\n   'iqfeed-docker' <https://github.com/bratchenko/docker-iqfeed>`__)\n\nInstallation\n------------\n\n``$ pip install iqfeed``\n\nUsage from command line\n-----------------------\n\nThe provided ``iqfeed`` utility can be used to download CSV files from\nDTN / IQFeed.\n\nHelp screen:\n\n::\n\n    iqfeed: Data downloader for Iqfeed/DTN\n         Tibor Kiss <tibor.kiss@gmail.com> - Copyright (c) 2012-2016 All rights reserved\n\n    Usage:\n      iqfeed process-file <filename> <start_year> <end_year> [-d DIR] [-i CON] [-t TZ] [-D]\n      iqfeed download <instrument> <start_year> <end_year> [-d DIR] [-i CON] [-t TZ] [-D]\n      iqfeed -h | --help\n\n    Commands:\n      download            Download the specified instrument\n      get-from-file       Download instruments listed in the specified file\n\n    Options:\n      -d DIR --download-dir DIR   Directory where the files will be downloaded [default: .]\n      -i CON --iqfeed CON         IQFeed host & port [default: localhost:9100]\n      -t TZ --tz TZ               Time zone [default: US/Eastern]\n      -D                          Debug mode\n      -h                          Help screen\n\n    Note:\n    Date format for end_date and start_date: YYYYMMDD\n\nStart IQFeed client\n~~~~~~~~~~~~~~~~~~~\n\n``$ docker run -e LOGIN='<username>' -e PASSWORD='<password>' -p 5009:5010 -p 9100:9101 bratchenko/iqfeed``\n\nDownload single instrument (SPY) for the time period 2010-2016\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``$ iqfeed download SPY 2010 2016``\n\nDownload multiple instruments listed in a text file\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``$ iqfeed process-file russell-3000.lst 2016 2016``\n\nUsage from Python\n-----------------\n\nUse the following snippet to obtain list of Bar objects.\n\n.. code:: python\n\n    import pytz\n    from iqfeed import get_bars\n\n    instrument = 'GLD'\n    start_date = '20150101'\n    end_date = '20151231'\n    tz = pytz.timezone('US/Eastern')\n    seconds_per_bar = 60  # For 1M data\n    iqfeed_host = 'localhost'\n    iqfeed_port = 9100\n\n    bars = get_bars(instrument, start_date, end_date, tz, seconds_per_bar, iqfeed_host, iqfeed_port)\n\nThe Bar object is a named tuple which holds the Open, High, Low, Close\nand Volume values for the given time:\n\n.. code:: python\n\n    IQFeedBar(datetime=datetime.datetime(2015, 1, 2, 9, 30, tzinfo=<DstTzInfo 'US/Eastern' EST-1 day, 19:00:00 STD>), open=112.46, high=112.46, low=112.45, close=112.46, volume=192104)\n\nLicense\n-------\n\n`Apache License Version 2.0 <http://www.apache.org/licenses/>`__", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/tibkiss/iqfeed", "keywords": null, "license": "Apache License, Version 2.0", "maintainer": null, "maintainer_email": null, "name": "iqfeed", "package_url": "https://pypi.org/project/iqfeed/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/iqfeed/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/tibkiss/iqfeed"}, "release_url": "https://pypi.org/project/iqfeed/0.4.3/", "requires_dist": null, "requires_python": null, "summary": "IQFeed / DTN Data downloader", "version": "0.4.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This project provides command line tool and Python library to access DTN\n/ IQFeed\u2019s historical data for equities. The provided command line tool\n(\u2018iqfeed\u2019) is capable downloading 1 minute historical data from IQFeed\nclient and store it in \u2018.csv.gz\u2019 format.</p>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<ul>\n<li>Python 2.7 (<a href=\"http://pypy.org\" rel=\"nofollow\">pypy</a> is recommended), DocOpt, PyTZ,\nbackports.functools_lru_cache</li>\n<li>IQFeed account</li>\n<li>IQFeed client (e.g. <a href=\"https://github.com/bratchenko/docker-iqfeed\" rel=\"nofollow\">bratchenko\u2019s\n\u2018iqfeed-docker\u2019</a>)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>$ pip install iqfeed</tt></p>\n</div>\n<div id=\"usage-from-command-line\">\n<h2>Usage from command line</h2>\n<p>The provided <tt>iqfeed</tt> utility can be used to download CSV files from\nDTN / IQFeed.</p>\n<p>Help screen:</p>\n<pre>iqfeed: Data downloader for Iqfeed/DTN\n     Tibor Kiss &lt;tibor.kiss@gmail.com&gt; - Copyright (c) 2012-2016 All rights reserved\n\nUsage:\n  iqfeed process-file &lt;filename&gt; &lt;start_year&gt; &lt;end_year&gt; [-d DIR] [-i CON] [-t TZ] [-D]\n  iqfeed download &lt;instrument&gt; &lt;start_year&gt; &lt;end_year&gt; [-d DIR] [-i CON] [-t TZ] [-D]\n  iqfeed -h | --help\n\nCommands:\n  download            Download the specified instrument\n  get-from-file       Download instruments listed in the specified file\n\nOptions:\n  -d DIR --download-dir DIR   Directory where the files will be downloaded [default: .]\n  -i CON --iqfeed CON         IQFeed host &amp; port [default: localhost:9100]\n  -t TZ --tz TZ               Time zone [default: US/Eastern]\n  -D                          Debug mode\n  -h                          Help screen\n\nNote:\nDate format for end_date and start_date: YYYYMMDD\n</pre>\n<div id=\"start-iqfeed-client\">\n<h3>Start IQFeed client</h3>\n<p><tt>$ docker run <span class=\"pre\">-e</span> <span class=\"pre\">LOGIN='&lt;username&gt;'</span> <span class=\"pre\">-e</span> <span class=\"pre\">PASSWORD='&lt;password&gt;'</span> <span class=\"pre\">-p</span> 5009:5010 <span class=\"pre\">-p</span> 9100:9101 bratchenko/iqfeed</tt></p>\n</div>\n<div id=\"download-single-instrument-spy-for-the-time-period-2010-2016\">\n<h3>Download single instrument (SPY) for the time period 2010-2016</h3>\n<p><tt>$ iqfeed download SPY 2010 2016</tt></p>\n</div>\n<div id=\"download-multiple-instruments-listed-in-a-text-file\">\n<h3>Download multiple instruments listed in a text file</h3>\n<p><tt>$ iqfeed <span class=\"pre\">process-file</span> <span class=\"pre\">russell-3000.lst</span> 2016 2016</tt></p>\n</div>\n</div>\n<div id=\"usage-from-python\">\n<h2>Usage from Python</h2>\n<p>Use the following snippet to obtain list of Bar objects.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytz</span>\n<span class=\"kn\">from</span> <span class=\"nn\">iqfeed</span> <span class=\"kn\">import</span> <span class=\"n\">get_bars</span>\n\n<span class=\"n\">instrument</span> <span class=\"o\">=</span> <span class=\"s1\">'GLD'</span>\n<span class=\"n\">start_date</span> <span class=\"o\">=</span> <span class=\"s1\">'20150101'</span>\n<span class=\"n\">end_date</span> <span class=\"o\">=</span> <span class=\"s1\">'20151231'</span>\n<span class=\"n\">tz</span> <span class=\"o\">=</span> <span class=\"n\">pytz</span><span class=\"o\">.</span><span class=\"n\">timezone</span><span class=\"p\">(</span><span class=\"s1\">'US/Eastern'</span><span class=\"p\">)</span>\n<span class=\"n\">seconds_per_bar</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>  <span class=\"c1\"># For 1M data</span>\n<span class=\"n\">iqfeed_host</span> <span class=\"o\">=</span> <span class=\"s1\">'localhost'</span>\n<span class=\"n\">iqfeed_port</span> <span class=\"o\">=</span> <span class=\"mi\">9100</span>\n\n<span class=\"n\">bars</span> <span class=\"o\">=</span> <span class=\"n\">get_bars</span><span class=\"p\">(</span><span class=\"n\">instrument</span><span class=\"p\">,</span> <span class=\"n\">start_date</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"p\">,</span> <span class=\"n\">tz</span><span class=\"p\">,</span> <span class=\"n\">seconds_per_bar</span><span class=\"p\">,</span> <span class=\"n\">iqfeed_host</span><span class=\"p\">,</span> <span class=\"n\">iqfeed_port</span><span class=\"p\">)</span>\n</pre>\n<p>The Bar object is a named tuple which holds the Open, High, Low, Close\nand Volume values for the given time:</p>\n<pre><span class=\"n\">IQFeedBar</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=&lt;</span><span class=\"n\">DstTzInfo</span> <span class=\"s1\">'US/Eastern'</span> <span class=\"n\">EST</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"n\">day</span><span class=\"p\">,</span> <span class=\"mi\">19</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span> <span class=\"n\">STD</span><span class=\"o\">&gt;</span><span class=\"p\">),</span> <span class=\"nb\">open</span><span class=\"o\">=</span><span class=\"mf\">112.46</span><span class=\"p\">,</span> <span class=\"n\">high</span><span class=\"o\">=</span><span class=\"mf\">112.46</span><span class=\"p\">,</span> <span class=\"n\">low</span><span class=\"o\">=</span><span class=\"mf\">112.45</span><span class=\"p\">,</span> <span class=\"n\">close</span><span class=\"o\">=</span><span class=\"mf\">112.46</span><span class=\"p\">,</span> <span class=\"n\">volume</span><span class=\"o\">=</span><span class=\"mi\">192104</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><a href=\"http://www.apache.org/licenses/\" rel=\"nofollow\">Apache License Version 2.0</a></p>\n</div>\n\n          </div>"}, "last_serial": 2207251, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "22119fc099ee67e75d1548ee7ad2bd4b", "sha256": "c6d4f3cc1480e5a09027ac5c375a0665f3cad5ae4588bb872770ba8c60b9b970"}, "downloads": -1, "filename": "iqfeed-0.4.tar.gz", "has_sig": false, "md5_digest": "22119fc099ee67e75d1548ee7ad2bd4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5941, "upload_time": "2016-07-06T21:04:06", "upload_time_iso_8601": "2016-07-06T21:04:06.752989Z", "url": "https://files.pythonhosted.org/packages/8c/0a/f6857759ab5967f042430f7df656324563b909f2493f5e9b3c6e3d94b85b/iqfeed-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "0c78db39aef1aa082f59c943980300d5", "sha256": "721f3a84913c4a16a48dcc372ff50fe4bca41b4c667a6efe755b0330dcb71e45"}, "downloads": -1, "filename": "iqfeed-0.4.1.tar.gz", "has_sig": false, "md5_digest": "0c78db39aef1aa082f59c943980300d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5979, "upload_time": "2016-07-07T05:12:57", "upload_time_iso_8601": "2016-07-07T05:12:57.303073Z", "url": "https://files.pythonhosted.org/packages/8b/9b/f2f101cdf338aaf67e03c498f449830ddce1ef388986bb9774fd7e13b090/iqfeed-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "25a713a77fbdb922d536eb0e876607d7", "sha256": "f8c3c827f2c59baf09b72bf8ffe6cfc82d0db55dccaab2d0fa3027cb5d68693e"}, "downloads": -1, "filename": "iqfeed-0.4.2.tar.gz", "has_sig": false, "md5_digest": "25a713a77fbdb922d536eb0e876607d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5978, "upload_time": "2016-07-07T05:20:43", "upload_time_iso_8601": "2016-07-07T05:20:43.539421Z", "url": "https://files.pythonhosted.org/packages/cf/4f/d6124ece886258d0fc4c3bad68444d862dd6c4940c56f580ab764d07c0bf/iqfeed-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "acc42006778b63a9504e1cef7e04e6e8", "sha256": "d6dcf3e7b4a3ce227903f59364bd9f66ff7130a83a7f4e472bfdf4a12cd1e1fe"}, "downloads": -1, "filename": "iqfeed-0.4.3.tar.gz", "has_sig": false, "md5_digest": "acc42006778b63a9504e1cef7e04e6e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10187, "upload_time": "2016-07-07T05:31:40", "upload_time_iso_8601": "2016-07-07T05:31:40.495062Z", "url": "https://files.pythonhosted.org/packages/0a/4d/f14c597c0accde9583577933e3e62b5948b6c73b33866ad9b55aa6bda141/iqfeed-0.4.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "acc42006778b63a9504e1cef7e04e6e8", "sha256": "d6dcf3e7b4a3ce227903f59364bd9f66ff7130a83a7f4e472bfdf4a12cd1e1fe"}, "downloads": -1, "filename": "iqfeed-0.4.3.tar.gz", "has_sig": false, "md5_digest": "acc42006778b63a9504e1cef7e04e6e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10187, "upload_time": "2016-07-07T05:31:40", "upload_time_iso_8601": "2016-07-07T05:31:40.495062Z", "url": "https://files.pythonhosted.org/packages/0a/4d/f14c597c0accde9583577933e3e62b5948b6c73b33866ad9b55aa6bda141/iqfeed-0.4.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:22 2020"}