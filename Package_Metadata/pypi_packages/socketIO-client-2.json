{"info": {"author": "John Feusi", "author_email": "feus4177@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python"], "description": ".. image:: https://travis-ci.org/invisibleroads/socketIO-client.svg?branch=master\n    :target: https://travis-ci.org/invisibleroads/socketIO-client\n\n\nsocketIO-client-2\n=================\nHere is a `socket.io <http://socket.io>`_ client library for Python.  You can use it to write test code for your socket.io server.\n\nPlease note that this version implements `socket.io protocol 1.x <https://github.com/automattic/socket.io-protocol>`_, which is not backwards compatible.  If you want to communicate using `socket.io protocol 0.9 <https://github.com/learnboost/socket.io-spec>`_ (which is compatible with `gevent-socketio <https://github.com/abourget/gevent-socketio>`_), please use `socketIO-client 0.5.6 <https://pypi.python.org/pypi/socketIO-client/0.5.6>`_.\n\n\nInstallation\n------------\nInstall the package in an isolated environment. ::\n\n    mkvirtualenv your_env_name\n    pip install socketIO-client-2\n\n\nUsage\n-----\nActivate isolated environment. ::\n\n    workon your_env_name\n\nLaunch your socket.io server or this provided test server. ::\n\n    # Get package folder\n    PACKAGE_FOLDER=`python -c \"import os, socketIO_client;\\\n        print(os.path.dirname(socketIO_client.__file__))\"`\n    # Install the server dependencies\n    cd $PACKAGE_FOLDER/tests/\n    npm install\n    # Start socket.io server\n    DEBUG=* node $PACKAGE_FOLDER/tests/serve.js\n    # Start proxy server in a separate terminal on the same machine\n    DEBUG=* node $PACKAGE_FOLDER/tests/proxy.js\n    # To run the tests in a third terminal\n    cd $PACKAGE_FOLDER\n    nosetests --with-coverage --cover-package=socketIO_client tests/\n\nFor debugging information, run these commands first. ::\n\n    import logging\n    logging.getLogger('requests').setLevel(logging.WARNING)\n    logging.basicConfig(level=logging.DEBUG)\n\nEmit. ::\n\n    from socketIO_client import SocketIO, LoggingNamespace\n\n    with SocketIO('localhost', 8000, LoggingNamespace) as socketIO:\n        socketIO.emit('aaa')\n        socketIO.wait(seconds=1)\n\nEmit with callback. ::\n\n    from socketIO_client import SocketIO, LoggingNamespace\n\n    def on_bbb_response(*args):\n        print('on_bbb_response', args)\n\n    with SocketIO('localhost', 8000, LoggingNamespace) as socketIO:\n        socketIO.emit('bbb', {'xxx': 'yyy'}, on_bbb_response)\n        socketIO.wait_for_callbacks(seconds=1)\n\nDefine events. ::\n\n    from socketIO_client import SocketIO, LoggingNamespace\n\n    def on_aaa_response(*args):\n        print('on_aaa_response', args)\n\n    socketIO = SocketIO('localhost', 8000, LoggingNamespace)\n    socketIO.on('aaa_response', on_aaa_response)\n    socketIO.emit('aaa')\n    socketIO.wait(seconds=1)\n\nDefine events in a namespace. ::\n\n    from socketIO_client import SocketIO, BaseNamespace\n\n    class Namespace(BaseNamespace):\n\n        def on_aaa_response(self, *args):\n            print('on_aaa_response', args)\n            self.emit('bbb')\n\n    socketIO = SocketIO('localhost', 8000, Namespace)\n    socketIO.emit('aaa')\n    socketIO.wait(seconds=1)\n\nDefine standard events. ::\n\n    from socketIO_client import SocketIO, BaseNamespace\n\n    class Namespace(BaseNamespace):\n\n        def on_connect(self):\n            print('[Connected]')\n\n    socketIO = SocketIO('localhost', 8000, Namespace)\n    socketIO.wait(seconds=1)\n\nDefine different namespaces on a single socket. ::\n\n    from socketIO_client import SocketIO, BaseNamespace\n\n    class ChatNamespace(BaseNamespace):\n\n        def on_aaa_response(self, *args):\n            print('on_aaa_response', args)\n\n    class NewsNamespace(BaseNamespace):\n\n        def on_aaa_response(self, *args):\n            print('on_aaa_response', args)\n\n    socketIO = SocketIO('localhost', 8000)\n    chat_namespace = socketIO.define(ChatNamespace, '/chat')\n    news_namespace = socketIO.define(NewsNamespace, '/news')\n\n    chat_namespace.emit('aaa')\n    news_namespace.emit('aaa')\n    socketIO.wait(seconds=1)\n\nConnect via SSL. ::\n\n    from socketIO_client import SocketIO\n\n    SocketIO('https://localhost', verify=False)\n\nSpecify params, headers, cookies, proxies thanks to the `requests <http://python-requests.org>`_ library. ::\n\n    from socketIO_client import SocketIO\n    from base64 import b64encode\n\n    SocketIO(\n        localhost', 8000,\n        params={'q': 'qqq'},\n        headers={'Authorization': 'Basic ' + b64encode('username:password')},\n        cookies={'a': 'aaa'},\n        proxies={'https': 'https://proxy.example.com:8080'})\n\nWait forever. ::\n\n    from socketIO_client import SocketIO\n\n    socketIO = SocketIO('localhost', 8000)\n    socketIO.wait()\n\n\nContributing\n------------\nI am following the `git-flow <http://nvie.com/posts/a-successful-git-branching-model/>` model put forward by Vincent Driessen. Therefore I ask that you make pull requests to the develop branch. Also, I am supporting Python 2.6, 2.7, and 3.4 so please make sure that your changes are compatible with all three versions. Travis-CI is setup to automatically run the tests with all three Python versions on pull-requests so if you add tests to cover any changes you made then you should be able to see if they are compatible.\n\n\nLicense\n-------\nThis software is available under the MIT License.\n\n\nCredits\n-------\n- `Guillermo Rauch <https://github.com/rauchg>`_ wrote the `socket.io specification <https://github.com/automattic/socket.io-protocol>`_.\n- `Hiroki Ohtani <https://github.com/liris>`_ wrote `websocket-client <https://github.com/liris/websocket-client>`_.\n- `rod <http://stackoverflow.com/users/370115/rod>`_ wrote a `prototype for a Python client to a socket.io server <http://stackoverflow.com/questions/6692908/formatting-messages-to-send-to-socket-io-node-js-server-from-python-client>`_.\n- `Alexandre Bourget <https://github.com/abourget>`_ wrote `gevent-socketio <https://github.com/abourget/gevent-socketio>`_, which is a socket.io server written in Python.\n- `Paul Kienzle <https://github.com/pkienzle>`_, `Zac Lee <https://github.com/zratic>`_, `Josh VanderLinden <https://github.com/codekoala>`_, `Ian Fitzpatrick <https://github.com/ifitzpatrick>`_, `Lucas Klein <https://github.com/lukasklein>`_, `Rui Chicoria <https://github.com/rchicoria>`_, `Travis Odom <https://github.com/burstaholic>`_, `Patrick Huber <https://github.com/stackmagic>`_, `Brad Campbell <https://github.com/bradjc>`_, `Daniel <https://github.com/dabidan>`_, `Sean Arietta <https://github.com/sarietta>`_ submitted code to expand support of the socket.io protocol.\n- `Bernard Pratz <https://github.com/guyzmo>`_, `Francis Bull <https://github.com/franbull>`_ wrote prototypes to support xhr-polling and jsonp-polling.\n- `Eric Chen <https://github.com/taiyangc>`_, `Denis Zinevich <https://github.com/dzinevich>`_, `Thiago Hersan <https://github.com/thiagohersan>`_, `Nayef Copty <https://github.com/nayefc>`_, `J\u00f6rgen Karlsson <https://github.com/jorgen-k>`_, `Branden Ghena <https://github.com/brghena>`_, `Tim Landscheidt <https://github.com/scfc>`_, `Matt Porritt <https://github.com/mattporritt>`_ suggested ways to make the connection more robust.\n- `Merlijn van Deen <https://github.com/valhallasw>`_, `Frederic Sureau <https://github.com/fredericsureau>`_, `Marcus Cobden <https://github.com/leth>`_, `Drew Hutchison <https://github.com/drewhutchison>`_, `wuurrd <https://github.com/wuurrd>`_, `Adam Kecer <https://github.com/amfg>`_, `Alex Monk <https://github.com/Krenair>`_, `Vishal P R <https://github.com/vishalwy>`_, `John Vandenberg <https://github.com/jayvdb>`_, `Thomas Grainger <https://github.com/graingert>`_ proposed changes that make the library more friendly and practical for you!\n\n\n0.7.2\n-----\n- NamespaceLogging fix\n\n0.7.1\n-----\n- Updated instructions\n\n0.7.0\n-----\n- Forked package\n- Added binary support\n\n0.6.5\n-----\n- Updated wait loop to be more responsive under websocket transport\n\n0.6.4\n-----\n- Fixed support for Python 3\n- Fixed thread cleanup\n\n0.6.3\n-----\n- Upgraded to socket.io protocol 1.x for websocket transport\n- Added locks to fix concurrency issues with polling transport\n- Fixed SSL support\n\n0.6.1\n-----\n- Upgraded to socket.io protocol 1.x thanks to Sean Arietta and Joe Palmer\n\n0.5.6\n-----\n- Backported to support requests 0.8.2\n\n0.5.5\n-----\n- Fixed reconnection in the event of server restart\n- Fixed calling on_reconnect() so that it is actually called\n- Set default Namespace=None\n- Added support for Python 3.4\n\n0.5.3\n-----\n- Updated wait loop to exit if the client wants to disconnect\n- Fixed calling on_connect() so that it is called only once\n- Set heartbeat_interval to be half of the heartbeat_timeout\n\n0.5.2\n-----\n- Replaced secure=True with host='https://example.com'\n- Fixed sending heartbeats thanks to Travis Odom\n\n0.5.1\n-----\n- Added error handling in the event of websocket timeout\n- Fixed sending acknowledgments in custom namespaces thanks to Travis Odom\n\n0.5\n---\n- Rewrote library to use coroutines instead of threads to save memory\n- Improved connection resilience\n- Added support for xhr-polling thanks to Francis Bull\n- Added support for jsonp-polling thanks to Bernard Pratz\n- Added support for query params and cookies\n\n0.4\n---\n- Added support for custom headers and proxies thanks to Rui and Sajal\n- Added support for server-side callbacks thanks to Zac Lee\n- Added low-level _SocketIO to remove cyclic references\n- Merged Channel functionality into BaseNamespace thanks to Alexandre Bourget\n\n0.3\n---\n- Added support for secure connections\n- Added socketIO.wait()\n- Improved exception handling in _RhythmicThread and _ListenerThread\n\n0.2\n---\n- Added support for callbacks and channels thanks to Paul Kienzle\n- Incorporated suggestions from Josh VanderLinden and Ian Fitzpatrick\n\n0.1\n---\n- Wrapped `code from StackOverflow <http://stackoverflow.com/questions/6692908/formatting-messages-to-send-to-socket-io-node-js-server-from-python-client>`_\n- Added exception handling to destructor in case of connection failure", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/feus4177/socketIO-client-2", "keywords": "socket.io node.js", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "socketIO-client-2", "package_url": "https://pypi.org/project/socketIO-client-2/", "platform": "", "project_url": "https://pypi.org/project/socketIO-client-2/", "project_urls": {"Homepage": "https://github.com/feus4177/socketIO-client-2"}, "release_url": "https://pypi.org/project/socketIO-client-2/0.7.5/", "requires_dist": null, "requires_python": "", "summary": "A socket.io client library", "version": "0.7.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/invisibleroads/socketIO-client\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/invisibleroads/socketIO-client.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9fe8dc6abc0fbdd2ef8ca9d7475d9f0e3b28848e/68747470733a2f2f7472617669732d63692e6f72672f696e76697369626c65726f6164732f736f636b6574494f2d636c69656e742e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"socketio-client-2\">\n<h2>socketIO-client-2</h2>\n<p>Here is a <a href=\"http://socket.io\" rel=\"nofollow\">socket.io</a> client library for Python.  You can use it to write test code for your socket.io server.</p>\n<p>Please note that this version implements <a href=\"https://github.com/automattic/socket.io-protocol\" rel=\"nofollow\">socket.io protocol 1.x</a>, which is not backwards compatible.  If you want to communicate using <a href=\"https://github.com/learnboost/socket.io-spec\" rel=\"nofollow\">socket.io protocol 0.9</a> (which is compatible with <a href=\"https://github.com/abourget/gevent-socketio\" rel=\"nofollow\">gevent-socketio</a>), please use <a href=\"https://pypi.python.org/pypi/socketIO-client/0.5.6\" rel=\"nofollow\">socketIO-client 0.5.6</a>.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install the package in an isolated environment.</p>\n<pre>mkvirtualenv your_env_name\npip install socketIO-client-2\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Activate isolated environment.</p>\n<pre>workon your_env_name\n</pre>\n<p>Launch your socket.io server or this provided test server.</p>\n<pre># Get package folder\nPACKAGE_FOLDER=`python -c \"import os, socketIO_client;\\\n    print(os.path.dirname(socketIO_client.__file__))\"`\n# Install the server dependencies\ncd $PACKAGE_FOLDER/tests/\nnpm install\n# Start socket.io server\nDEBUG=* node $PACKAGE_FOLDER/tests/serve.js\n# Start proxy server in a separate terminal on the same machine\nDEBUG=* node $PACKAGE_FOLDER/tests/proxy.js\n# To run the tests in a third terminal\ncd $PACKAGE_FOLDER\nnosetests --with-coverage --cover-package=socketIO_client tests/\n</pre>\n<p>For debugging information, run these commands first.</p>\n<pre>import logging\nlogging.getLogger('requests').setLevel(logging.WARNING)\nlogging.basicConfig(level=logging.DEBUG)\n</pre>\n<p>Emit.</p>\n<pre>from socketIO_client import SocketIO, LoggingNamespace\n\nwith SocketIO('localhost', 8000, LoggingNamespace) as socketIO:\n    socketIO.emit('aaa')\n    socketIO.wait(seconds=1)\n</pre>\n<p>Emit with callback.</p>\n<pre>from socketIO_client import SocketIO, LoggingNamespace\n\ndef on_bbb_response(*args):\n    print('on_bbb_response', args)\n\nwith SocketIO('localhost', 8000, LoggingNamespace) as socketIO:\n    socketIO.emit('bbb', {'xxx': 'yyy'}, on_bbb_response)\n    socketIO.wait_for_callbacks(seconds=1)\n</pre>\n<p>Define events.</p>\n<pre>from socketIO_client import SocketIO, LoggingNamespace\n\ndef on_aaa_response(*args):\n    print('on_aaa_response', args)\n\nsocketIO = SocketIO('localhost', 8000, LoggingNamespace)\nsocketIO.on('aaa_response', on_aaa_response)\nsocketIO.emit('aaa')\nsocketIO.wait(seconds=1)\n</pre>\n<p>Define events in a namespace.</p>\n<pre>from socketIO_client import SocketIO, BaseNamespace\n\nclass Namespace(BaseNamespace):\n\n    def on_aaa_response(self, *args):\n        print('on_aaa_response', args)\n        self.emit('bbb')\n\nsocketIO = SocketIO('localhost', 8000, Namespace)\nsocketIO.emit('aaa')\nsocketIO.wait(seconds=1)\n</pre>\n<p>Define standard events.</p>\n<pre>from socketIO_client import SocketIO, BaseNamespace\n\nclass Namespace(BaseNamespace):\n\n    def on_connect(self):\n        print('[Connected]')\n\nsocketIO = SocketIO('localhost', 8000, Namespace)\nsocketIO.wait(seconds=1)\n</pre>\n<p>Define different namespaces on a single socket.</p>\n<pre>from socketIO_client import SocketIO, BaseNamespace\n\nclass ChatNamespace(BaseNamespace):\n\n    def on_aaa_response(self, *args):\n        print('on_aaa_response', args)\n\nclass NewsNamespace(BaseNamespace):\n\n    def on_aaa_response(self, *args):\n        print('on_aaa_response', args)\n\nsocketIO = SocketIO('localhost', 8000)\nchat_namespace = socketIO.define(ChatNamespace, '/chat')\nnews_namespace = socketIO.define(NewsNamespace, '/news')\n\nchat_namespace.emit('aaa')\nnews_namespace.emit('aaa')\nsocketIO.wait(seconds=1)\n</pre>\n<p>Connect via SSL.</p>\n<pre>from socketIO_client import SocketIO\n\nSocketIO('https://localhost', verify=False)\n</pre>\n<p>Specify params, headers, cookies, proxies thanks to the <a href=\"http://python-requests.org\" rel=\"nofollow\">requests</a> library.</p>\n<pre>from socketIO_client import SocketIO\nfrom base64 import b64encode\n\nSocketIO(\n    localhost', 8000,\n    params={'q': 'qqq'},\n    headers={'Authorization': 'Basic ' + b64encode('username:password')},\n    cookies={'a': 'aaa'},\n    proxies={'https': 'https://proxy.example.com:8080'})\n</pre>\n<p>Wait forever.</p>\n<pre>from socketIO_client import SocketIO\n\nsocketIO = SocketIO('localhost', 8000)\nsocketIO.wait()\n</pre>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<p>I am following the <cite>git-flow &lt;http://nvie.com/posts/a-successful-git-branching-model/&gt;</cite> model put forward by Vincent Driessen. Therefore I ask that you make pull requests to the develop branch. Also, I am supporting Python 2.6, 2.7, and 3.4 so please make sure that your changes are compatible with all three versions. Travis-CI is setup to automatically run the tests with all three Python versions on pull-requests so if you add tests to cover any changes you made then you should be able to see if they are compatible.</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>This software is available under the MIT License.</p>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<ul>\n<li><a href=\"https://github.com/rauchg\" rel=\"nofollow\">Guillermo Rauch</a> wrote the <a href=\"https://github.com/automattic/socket.io-protocol\" rel=\"nofollow\">socket.io specification</a>.</li>\n<li><a href=\"https://github.com/liris\" rel=\"nofollow\">Hiroki Ohtani</a> wrote <a href=\"https://github.com/liris/websocket-client\" rel=\"nofollow\">websocket-client</a>.</li>\n<li><a href=\"http://stackoverflow.com/users/370115/rod\" rel=\"nofollow\">rod</a> wrote a <a href=\"http://stackoverflow.com/questions/6692908/formatting-messages-to-send-to-socket-io-node-js-server-from-python-client\" rel=\"nofollow\">prototype for a Python client to a socket.io server</a>.</li>\n<li><a href=\"https://github.com/abourget\" rel=\"nofollow\">Alexandre Bourget</a> wrote <a href=\"https://github.com/abourget/gevent-socketio\" rel=\"nofollow\">gevent-socketio</a>, which is a socket.io server written in Python.</li>\n<li><a href=\"https://github.com/pkienzle\" rel=\"nofollow\">Paul Kienzle</a>, <a href=\"https://github.com/zratic\" rel=\"nofollow\">Zac Lee</a>, <a href=\"https://github.com/codekoala\" rel=\"nofollow\">Josh VanderLinden</a>, <a href=\"https://github.com/ifitzpatrick\" rel=\"nofollow\">Ian Fitzpatrick</a>, <a href=\"https://github.com/lukasklein\" rel=\"nofollow\">Lucas Klein</a>, <a href=\"https://github.com/rchicoria\" rel=\"nofollow\">Rui Chicoria</a>, <a href=\"https://github.com/burstaholic\" rel=\"nofollow\">Travis Odom</a>, <a href=\"https://github.com/stackmagic\" rel=\"nofollow\">Patrick Huber</a>, <a href=\"https://github.com/bradjc\" rel=\"nofollow\">Brad Campbell</a>, <a href=\"https://github.com/dabidan\" rel=\"nofollow\">Daniel</a>, <a href=\"https://github.com/sarietta\" rel=\"nofollow\">Sean Arietta</a> submitted code to expand support of the socket.io protocol.</li>\n<li><a href=\"https://github.com/guyzmo\" rel=\"nofollow\">Bernard Pratz</a>, <a href=\"https://github.com/franbull\" rel=\"nofollow\">Francis Bull</a> wrote prototypes to support xhr-polling and jsonp-polling.</li>\n<li><a href=\"https://github.com/taiyangc\" rel=\"nofollow\">Eric Chen</a>, <a href=\"https://github.com/dzinevich\" rel=\"nofollow\">Denis Zinevich</a>, <a href=\"https://github.com/thiagohersan\" rel=\"nofollow\">Thiago Hersan</a>, <a href=\"https://github.com/nayefc\" rel=\"nofollow\">Nayef Copty</a>, <a href=\"https://github.com/jorgen-k\" rel=\"nofollow\">J\u00f6rgen Karlsson</a>, <a href=\"https://github.com/brghena\" rel=\"nofollow\">Branden Ghena</a>, <a href=\"https://github.com/scfc\" rel=\"nofollow\">Tim Landscheidt</a>, <a href=\"https://github.com/mattporritt\" rel=\"nofollow\">Matt Porritt</a> suggested ways to make the connection more robust.</li>\n<li><a href=\"https://github.com/valhallasw\" rel=\"nofollow\">Merlijn van Deen</a>, <a href=\"https://github.com/fredericsureau\" rel=\"nofollow\">Frederic Sureau</a>, <a href=\"https://github.com/leth\" rel=\"nofollow\">Marcus Cobden</a>, <a href=\"https://github.com/drewhutchison\" rel=\"nofollow\">Drew Hutchison</a>, <a href=\"https://github.com/wuurrd\" rel=\"nofollow\">wuurrd</a>, <a href=\"https://github.com/amfg\" rel=\"nofollow\">Adam Kecer</a>, <a href=\"https://github.com/Krenair\" rel=\"nofollow\">Alex Monk</a>, <a href=\"https://github.com/vishalwy\" rel=\"nofollow\">Vishal P R</a>, <a href=\"https://github.com/jayvdb\" rel=\"nofollow\">John Vandenberg</a>, <a href=\"https://github.com/graingert\" rel=\"nofollow\">Thomas Grainger</a> proposed changes that make the library more friendly and practical for you!</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.7.2</h3>\n<ul>\n<li>NamespaceLogging fix</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.7.1</h3>\n<ul>\n<li>Updated instructions</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.7.0</h3>\n<ul>\n<li>Forked package</li>\n<li>Added binary support</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.6.5</h3>\n<ul>\n<li>Updated wait loop to be more responsive under websocket transport</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.6.4</h3>\n<ul>\n<li>Fixed support for Python 3</li>\n<li>Fixed thread cleanup</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.6.3</h3>\n<ul>\n<li>Upgraded to socket.io protocol 1.x for websocket transport</li>\n<li>Added locks to fix concurrency issues with polling transport</li>\n<li>Fixed SSL support</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.6.1</h3>\n<ul>\n<li>Upgraded to socket.io protocol 1.x thanks to Sean Arietta and Joe Palmer</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.5.6</h3>\n<ul>\n<li>Backported to support requests 0.8.2</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.5.5</h3>\n<ul>\n<li>Fixed reconnection in the event of server restart</li>\n<li>Fixed calling on_reconnect() so that it is actually called</li>\n<li>Set default Namespace=None</li>\n<li>Added support for Python 3.4</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.5.3</h3>\n<ul>\n<li>Updated wait loop to exit if the client wants to disconnect</li>\n<li>Fixed calling on_connect() so that it is called only once</li>\n<li>Set heartbeat_interval to be half of the heartbeat_timeout</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.5.2</h3>\n<ul>\n<li>Replaced secure=True with host=\u2019<a href=\"https://example.com\" rel=\"nofollow\">https://example.com</a>\u2019</li>\n<li>Fixed sending heartbeats thanks to Travis Odom</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.5.1</h3>\n<ul>\n<li>Added error handling in the event of websocket timeout</li>\n<li>Fixed sending acknowledgments in custom namespaces thanks to Travis Odom</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.5</h3>\n<ul>\n<li>Rewrote library to use coroutines instead of threads to save memory</li>\n<li>Improved connection resilience</li>\n<li>Added support for xhr-polling thanks to Francis Bull</li>\n<li>Added support for jsonp-polling thanks to Bernard Pratz</li>\n<li>Added support for query params and cookies</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.4</h3>\n<ul>\n<li>Added support for custom headers and proxies thanks to Rui and Sajal</li>\n<li>Added support for server-side callbacks thanks to Zac Lee</li>\n<li>Added low-level _SocketIO to remove cyclic references</li>\n<li>Merged Channel functionality into BaseNamespace thanks to Alexandre Bourget</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>0.3</h3>\n<ul>\n<li>Added support for secure connections</li>\n<li>Added socketIO.wait()</li>\n<li>Improved exception handling in _RhythmicThread and _ListenerThread</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>0.2</h3>\n<ul>\n<li>Added support for callbacks and channels thanks to Paul Kienzle</li>\n<li>Incorporated suggestions from Josh VanderLinden and Ian Fitzpatrick</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>0.1</h3>\n<ul>\n<li>Wrapped <a href=\"http://stackoverflow.com/questions/6692908/formatting-messages-to-send-to-socket-io-node-js-server-from-python-client\" rel=\"nofollow\">code from StackOverflow</a></li>\n<li>Added exception handling to destructor in case of connection failure</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3085560, "releases": {"0.7.0": [{"comment_text": "", "digests": {"md5": "b13431ac47c2589bd43a39f0f005c163", "sha256": "cb9b3b3a6acf0e2ca7208dabcae2c8cdef97ff2f3d3e923ddfd9573da0a130a9"}, "downloads": -1, "filename": "socketIO-client-2-0.7.0.tar.gz", "has_sig": false, "md5_digest": "b13431ac47c2589bd43a39f0f005c163", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22490, "upload_time": "2016-02-27T04:59:08", "upload_time_iso_8601": "2016-02-27T04:59:08.511885Z", "url": "https://files.pythonhosted.org/packages/30/7b/75213cc75b388a17919cbc46a184a10e53ee5c47c1ae25ed9b44ffc56203/socketIO-client-2-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "c32e6039cb7f97cf7441867795a1c8bf", "sha256": "d212c5822be0fad2c7d0f6608e837f267a1c669e18159b91276e306555689a0c"}, "downloads": -1, "filename": "socketIO-client-2-0.7.1.tar.gz", "has_sig": false, "md5_digest": "c32e6039cb7f97cf7441867795a1c8bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22325, "upload_time": "2016-02-27T05:12:51", "upload_time_iso_8601": "2016-02-27T05:12:51.748416Z", "url": "https://files.pythonhosted.org/packages/a4/e2/ffbc3a69c0a904cb13116880c5175d210e8ceeadcfe7605c5f532b7306a6/socketIO-client-2-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "7c6c87066ae83d3a2b3b4a7b6a41b4ee", "sha256": "d33ca561afae238d0c26a0db280d53aeaf5d9bac105783b89d058de8702bbe2b"}, "downloads": -1, "filename": "socketIO-client-2-0.7.2.tar.gz", "has_sig": false, "md5_digest": "7c6c87066ae83d3a2b3b4a7b6a41b4ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 600614, "upload_time": "2016-03-07T18:53:38", "upload_time_iso_8601": "2016-03-07T18:53:38.529960Z", "url": "https://files.pythonhosted.org/packages/07/85/da0df37f9f905375a64f804790f1a5b49bc24068354f676ee870f992ee8a/socketIO-client-2-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "448b1d8b895fa149d1053ca6e4647c19", "sha256": "0514e3ef63f36b50bee5b14eaa44547a1c630b4a2bf2134a4db957f7428fbfaa"}, "downloads": -1, "filename": "socketIO-client-2-0.7.3.tar.gz", "has_sig": false, "md5_digest": "448b1d8b895fa149d1053ca6e4647c19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 600739, "upload_time": "2017-01-14T21:46:31", "upload_time_iso_8601": "2017-01-14T21:46:31.395769Z", "url": "https://files.pythonhosted.org/packages/92/61/453376bbe04e7ba9b40edb3fc24a6555ad8c6189c6ca75c8f0c357f4baa4/socketIO-client-2-0.7.3.tar.gz", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "224288a89415c0304dca5d9f7dc6ed4b", "sha256": "d6be0f1101c2d655006f5b5d54ff4ba9611145325f55307ef42f21703eb4a790"}, "downloads": -1, "filename": "socketIO-client-2-0.7.4.tar.gz", "has_sig": false, "md5_digest": "224288a89415c0304dca5d9f7dc6ed4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 600873, "upload_time": "2017-01-14T21:46:56", "upload_time_iso_8601": "2017-01-14T21:46:56.566012Z", "url": "https://files.pythonhosted.org/packages/00/58/757e3b8f227a02fd36d3a00d3b32326d48a37efddba2248beae5cc0842e0/socketIO-client-2-0.7.4.tar.gz", "yanked": false}], "0.7.5": [{"comment_text": "", "digests": {"md5": "994c7eb842c8fed63660b831081d6295", "sha256": "6a493c46d830200774b72f4859fe5a0b85ba98c83fd650db31e082fb5bf6c933"}, "downloads": -1, "filename": "socketIO-client-2-0.7.5.tar.gz", "has_sig": false, "md5_digest": "994c7eb842c8fed63660b831081d6295", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 600986, "upload_time": "2017-08-10T01:54:49", "upload_time_iso_8601": "2017-08-10T01:54:49.054084Z", "url": "https://files.pythonhosted.org/packages/b3/89/90701efc6bc72d3445c8b5806b2277b74ec6c9de4f5ba19b0cbd4fe5ee8c/socketIO-client-2-0.7.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "994c7eb842c8fed63660b831081d6295", "sha256": "6a493c46d830200774b72f4859fe5a0b85ba98c83fd650db31e082fb5bf6c933"}, "downloads": -1, "filename": "socketIO-client-2-0.7.5.tar.gz", "has_sig": false, "md5_digest": "994c7eb842c8fed63660b831081d6295", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 600986, "upload_time": "2017-08-10T01:54:49", "upload_time_iso_8601": "2017-08-10T01:54:49.054084Z", "url": "https://files.pythonhosted.org/packages/b3/89/90701efc6bc72d3445c8b5806b2277b74ec6c9de4f5ba19b0cbd4fe5ee8c/socketIO-client-2-0.7.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:02 2020"}