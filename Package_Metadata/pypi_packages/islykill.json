{"info": {"author": "Overcast Software - S\u00e6var \u00d6fj\u00f6r\u00f0 Magn\u00fasson", "author_email": "saevar@overcast.io", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "A simple python client for the Icelandic government authentication service \u00cdslykill (www.islykill.is)\r\n        You must apply for access before using this library.\r\n        \r\n        Usage\r\n        =====\r\n        \r\n        Just remember to set the `username`, `password` and `service_id` as your own.\r\n        `service_id` is the ID you are given from the national registry of Iceland (www.skra.is), e.g. for \r\n        www.betraisland.is the id is `betraisland.is` and the \u00cdslykill authentication url is \r\n        `https://innskraning.island.is/?id=betraisland.is`\r\n        \r\n            >>> import islykill\r\n            >>> islykill.username = \"Your-username-here\"\r\n            >>> islykill.password = \"Your-password-here\"\r\n            >>> islykill.service_id = \"dev.roddfolksins.is\"\r\n            >>> token = 'Some-received-token' # the token received from island.is\r\n            >>> ip_address = '1.1.1.1' # remote user ip address\r\n            >>> result = islykill.generate_saml_from_token(token, ip_address)\r\n            >>> print result\r\n            {'ssn': '1234567890', 'ip_address': '1.1.1.1', 'name': u'Jon Jonsson'}\r\n        \r\n        If an error occurs, the result from `generate_saml_from_token` will return a dictionary with the \r\n        key \"error\" with the body of the error as value, e.g.\r\n        \r\n            >>> print result\r\n            {'error': 'HTTPError = 500'}\r\n        \r\n        500 usually mean that you can make the request again immediately, just a glitch in the\r\n        webservice.\r\n        \r\n            >>> print result\r\n            {'error': 'Unable to find SAML assertion from token.'}\r\n        \r\n        \"Unable to find SAML assertion from token\" means that the token is invalid or expired somehow, \r\n        which means the user has to authenticate again.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/overcastsoftware/py-islykill", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "islykill", "package_url": "https://pypi.org/project/islykill/", "platform": "any", "project_url": "https://pypi.org/project/islykill/", "project_urls": {"Homepage": "http://github.com/overcastsoftware/py-islykill"}, "release_url": "https://pypi.org/project/islykill/0.1/", "requires_dist": null, "requires_python": null, "summary": "A simple python client for the Icelandic government authentication service \u00cdslykill (www.islykill.is)", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            A simple python client for the Icelandic government authentication service \u00cdslykill (www.islykill.is)\n<br>        You must apply for access before using this library.\n<br>        \n<br>        Usage\n<br>        =====\n<br>        \n<br>        Just remember to set the `username`, `password` and `service_id` as your own.\n<br>        `service_id` is the ID you are given from the national registry of Iceland (www.skra.is), e.g. for \n<br>        www.betraisland.is the id is `betraisland.is` and the \u00cdslykill authentication url is \n<br>        `https://innskraning.island.is/?id=betraisland.is`\n<br>        \n<br>            &gt;&gt;&gt; import islykill\n<br>            &gt;&gt;&gt; islykill.username = \"Your-username-here\"\n<br>            &gt;&gt;&gt; islykill.password = \"Your-password-here\"\n<br>            &gt;&gt;&gt; islykill.service_id = \"dev.roddfolksins.is\"\n<br>            &gt;&gt;&gt; token = 'Some-received-token' # the token received from island.is\n<br>            &gt;&gt;&gt; ip_address = '1.1.1.1' # remote user ip address\n<br>            &gt;&gt;&gt; result = islykill.generate_saml_from_token(token, ip_address)\n<br>            &gt;&gt;&gt; print result\n<br>            {'ssn': '1234567890', 'ip_address': '1.1.1.1', 'name': u'Jon Jonsson'}\n<br>        \n<br>        If an error occurs, the result from `generate_saml_from_token` will return a dictionary with the \n<br>        key \"error\" with the body of the error as value, e.g.\n<br>        \n<br>            &gt;&gt;&gt; print result\n<br>            {'error': 'HTTPError = 500'}\n<br>        \n<br>        500 usually mean that you can make the request again immediately, just a glitch in the\n<br>        webservice.\n<br>        \n<br>            &gt;&gt;&gt; print result\n<br>            {'error': 'Unable to find SAML assertion from token.'}\n<br>        \n<br>        \"Unable to find SAML assertion from token\" means that the token is invalid or expired somehow, \n<br>        which means the user has to authenticate again.\n          </div>"}, "last_serial": 840661, "releases": {"0.1": []}, "urls": [], "timestamp": "Fri May  8 00:54:02 2020"}