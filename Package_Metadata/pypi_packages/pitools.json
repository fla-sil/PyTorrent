{"info": {"author": "Shujia Huang", "author_email": "huangshujia9@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "pitools: A phasing and imputation tools for NGS data.\n=====================================================\n\nIntroduction\n------------\n\n``pitools`` is a phasing and imputation tools for NGS data, which is the main\ncore of imputation server: https://imputation.cngb.org/. You can use pitools\nas your own imputation pipeline in your local Linux cluster.\n\nQuick start\n-----------\n\npitools use `eagle <https://data.broadinstitute.org/alkesgroup/Eagle/>`__ for phasing \nand `Minimac3 <https://genome.sph.umich.edu/wiki/Minimac3>`__ for imputation.\n\nInstallation\n~~~~~~~~~~~~\n\nInstall the released version by pip:\n\n.. code:: bash\n\n    pip install pitools\n\nOr you may instead want to install the development version from github,\nby running:\n\n.. code:: bash\n\n    pip install git+git://github.com/ShujiaHuang/pitools.git#egg=pitools\n\nThis command will install pitools in your system and you can use ``pitools`` in\nyour commandline.\n\nUsage\n~~~~~\n\nYou can find all the parameter for imputation process by running\n``pitools impute --help``:\n\n::\n\n    usage: pitools impute [-h] -C CONFIG [-M IMPUTE_METHOD] [-P PHASE_METHOD] -I IN_VCF\n                     -O OUT_PREFIX --refpanel-version REFPANEL --reference-build\n                     REFBUILD [--unprephase] [--regions chr:start-end]\n                     [--nCPU NCPU]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -C CONFIG, --conf CONFIG\n                            YAML configuration file specifying details information\n                            for imputation\n      -M IMPUTE_METHOD, --methods IMPUTE_METHOD\n                            Tool for imputation. [minimac]\n      -P PHASE_METHOD, --prephase-method PHASE_METHOD\n                            Tool for pre-phase before imputation. [eagle]\n      -I IN_VCF, --input IN_VCF\n                            Input one VCF file to analyze. Required\n      -O OUT_PREFIX, --outprefix OUT_PREFIX\n                            Prefix for output files. Required\n      --refpanel-version REFPANEL\n                            The version of haplotype data for reference panel.\n                            Required\n      --reference-build REFBUILD\n                            The build version of reference, e.g: GRCh37\n      --unprephase          Do not perform pre-phased before the imputation\n                            process.\n      --regions chr:start-end\n                            Skip positions which not in these regions. This\n                            parameter could be a list of comma deleimited genome\n                            regions(e.g.: chr:start-end,chr:start-end)\n      --nCPU NCPU           Number of threads. [1]\n\nConfiguration file\n~~~~~~~~~~~~~~~~~~\n\n``pitools`` needs a configuration file for setting the path of phasing\nprogram, imputation program, reference version and reference panel.\nHere's one of the examples for how to create a config- uration file:\n`config.yaml <./tests/config.yaml>`__.\n\nNow you can use ``pitools`` as your powerful imputation pipeline, once you\nhave finished the setting.\n\nExamples\n~~~~~~~~\n\nThis command would be enough for most of your jobs.\n\n.. code:: bash\n\n    pitools impute -C config.yaml \\\n        -I your.vcf.gz \\\n        -O test_outprefix \\\n        --refpanel-version 1000G_P3_GRCh37 \\\n        --reference-build GRCh37 \\\n        --nCPU 4\n\nWhat if you just want to preform the imputed process in some specific\nregions. Here is an example for running ``pitools`` in genome region:\n``21:38347375-38500731`` and ``22:17203103-17439826``.\n\n.. code:: bash\n\n    pitools impute -C config.yaml \\\n        -I your.vcf.gz \\\n        -O test_outprefix \\\n        --refpanel-version 1000G_P3_GRCh37 \\\n        --reference-build GRCh37 \\\n        --regions  21:38347375-38500731,22:17203103-17439826 \\\n        --nCPU 4\n\nPI will perform pre-phasing automatically before perform the imputation\nprocess. But sometimes your input VCF file has been phased already. And\nyou don't want to run it any more then you can set ``--unprephase``\nargument to skip that process.\n\n.. code:: bash\n\n    pitools impute -C config.yaml \\\n        -I your.vcf.gz \\\n        -O test_outprefix \\\n        --refpanel-version 1000G_P3_GRCh37 \\\n        --reference-build GRCh37 \\\n        --unprephase \\\n        --nCPU 4\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/ShujiaHuang/pitools", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ShujiaHuang/pitools", "keywords": "", "license": "BSD (3-clause)", "maintainer": "", "maintainer_email": "", "name": "pitools", "package_url": "https://pypi.org/project/pitools/", "platform": "", "project_url": "https://pypi.org/project/pitools/", "project_urls": {"Download": "https://github.com/ShujiaHuang/pitools", "Homepage": "https://github.com/ShujiaHuang/pitools"}, "release_url": "https://pypi.org/project/pitools/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "pitools: A python program for phasing and imputation NGS data.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p><tt>pitools</tt> is a phasing and imputation tools for NGS data, which is the main\ncore of imputation server: <a href=\"https://imputation.cngb.org/\" rel=\"nofollow\">https://imputation.cngb.org/</a>. You can use pitools\nas your own imputation pipeline in your local Linux cluster.</p>\n</div>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<p>pitools use <a href=\"https://data.broadinstitute.org/alkesgroup/Eagle/\" rel=\"nofollow\">eagle</a> for phasing\nand <a href=\"https://genome.sph.umich.edu/wiki/Minimac3\" rel=\"nofollow\">Minimac3</a> for imputation.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install the released version by pip:</p>\n<pre>pip install pitools\n</pre>\n<p>Or you may instead want to install the development version from github,\nby running:</p>\n<pre>pip install git+git://github.com/ShujiaHuang/pitools.git#egg<span class=\"o\">=</span>pitools\n</pre>\n<p>This command will install pitools in your system and you can use <tt>pitools</tt> in\nyour commandline.</p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>You can find all the parameter for imputation process by running\n<tt>pitools impute <span class=\"pre\">--help</span></tt>:</p>\n<pre>usage: pitools impute [-h] -C CONFIG [-M IMPUTE_METHOD] [-P PHASE_METHOD] -I IN_VCF\n                 -O OUT_PREFIX --refpanel-version REFPANEL --reference-build\n                 REFBUILD [--unprephase] [--regions chr:start-end]\n                 [--nCPU NCPU]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -C CONFIG, --conf CONFIG\n                        YAML configuration file specifying details information\n                        for imputation\n  -M IMPUTE_METHOD, --methods IMPUTE_METHOD\n                        Tool for imputation. [minimac]\n  -P PHASE_METHOD, --prephase-method PHASE_METHOD\n                        Tool for pre-phase before imputation. [eagle]\n  -I IN_VCF, --input IN_VCF\n                        Input one VCF file to analyze. Required\n  -O OUT_PREFIX, --outprefix OUT_PREFIX\n                        Prefix for output files. Required\n  --refpanel-version REFPANEL\n                        The version of haplotype data for reference panel.\n                        Required\n  --reference-build REFBUILD\n                        The build version of reference, e.g: GRCh37\n  --unprephase          Do not perform pre-phased before the imputation\n                        process.\n  --regions chr:start-end\n                        Skip positions which not in these regions. This\n                        parameter could be a list of comma deleimited genome\n                        regions(e.g.: chr:start-end,chr:start-end)\n  --nCPU NCPU           Number of threads. [1]\n</pre>\n</div>\n<div id=\"configuration-file\">\n<h3>Configuration file</h3>\n<p><tt>pitools</tt> needs a configuration file for setting the path of phasing\nprogram, imputation program, reference version and reference panel.\nHere\u2019s one of the examples for how to create a config- uration file:\n<a href=\"./tests/config.yaml\" rel=\"nofollow\">config.yaml</a>.</p>\n<p>Now you can use <tt>pitools</tt> as your powerful imputation pipeline, once you\nhave finished the setting.</p>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>This command would be enough for most of your jobs.</p>\n<pre>pitools impute -C config.yaml <span class=\"se\">\\\n</span>    -I your.vcf.gz <span class=\"se\">\\\n</span>    -O test_outprefix <span class=\"se\">\\\n</span>    --refpanel-version 1000G_P3_GRCh37 <span class=\"se\">\\\n</span>    --reference-build GRCh37 <span class=\"se\">\\\n</span>    --nCPU <span class=\"m\">4</span>\n</pre>\n<p>What if you just want to preform the imputed process in some specific\nregions. Here is an example for running <tt>pitools</tt> in genome region:\n<tt><span class=\"pre\">21:38347375-38500731</span></tt> and <tt><span class=\"pre\">22:17203103-17439826</span></tt>.</p>\n<pre>pitools impute -C config.yaml <span class=\"se\">\\\n</span>    -I your.vcf.gz <span class=\"se\">\\\n</span>    -O test_outprefix <span class=\"se\">\\\n</span>    --refpanel-version 1000G_P3_GRCh37 <span class=\"se\">\\\n</span>    --reference-build GRCh37 <span class=\"se\">\\\n</span>    --regions  <span class=\"m\">21</span>:38347375-38500731,22:17203103-17439826 <span class=\"se\">\\\n</span>    --nCPU <span class=\"m\">4</span>\n</pre>\n<p>PI will perform pre-phasing automatically before perform the imputation\nprocess. But sometimes your input VCF file has been phased already. And\nyou don\u2019t want to run it any more then you can set <tt><span class=\"pre\">--unprephase</span></tt>\nargument to skip that process.</p>\n<pre>pitools impute -C config.yaml <span class=\"se\">\\\n</span>    -I your.vcf.gz <span class=\"se\">\\\n</span>    -O test_outprefix <span class=\"se\">\\\n</span>    --refpanel-version 1000G_P3_GRCh37 <span class=\"se\">\\\n</span>    --reference-build GRCh37 <span class=\"se\">\\\n</span>    --unprephase <span class=\"se\">\\\n</span>    --nCPU <span class=\"m\">4</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5479664, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9543fe0db5a15554fab5471deb74292d", "sha256": "d6d3512783dee97cdc98eafcd39df52ce7a2487fffbc9d00b64b105361065f2c"}, "downloads": -1, "filename": "pitools-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9543fe0db5a15554fab5471deb74292d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13643, "upload_time": "2019-05-27T07:35:55", "upload_time_iso_8601": "2019-05-27T07:35:55.489954Z", "url": "https://files.pythonhosted.org/packages/80/97/d51aaec3e094a58d94c8c12b2aa0bebae78cc461081a7db7f20a82ed29fb/pitools-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "5f5fa4228eb9cf81b7b955f18766a25e", "sha256": "8a5e33b18f6f29efdc717f782e937dd83810007460c395ad2debbfd5d57dd4e5"}, "downloads": -1, "filename": "pitools-1.0.1.tar.gz", "has_sig": false, "md5_digest": "5f5fa4228eb9cf81b7b955f18766a25e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13722, "upload_time": "2019-07-03T05:47:03", "upload_time_iso_8601": "2019-07-03T05:47:03.059746Z", "url": "https://files.pythonhosted.org/packages/0b/85/00fe213d21b0c721307f3a87828371123de915def0f6e8fa16f23f5a58e5/pitools-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f5fa4228eb9cf81b7b955f18766a25e", "sha256": "8a5e33b18f6f29efdc717f782e937dd83810007460c395ad2debbfd5d57dd4e5"}, "downloads": -1, "filename": "pitools-1.0.1.tar.gz", "has_sig": false, "md5_digest": "5f5fa4228eb9cf81b7b955f18766a25e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13722, "upload_time": "2019-07-03T05:47:03", "upload_time_iso_8601": "2019-07-03T05:47:03.059746Z", "url": "https://files.pythonhosted.org/packages/0b/85/00fe213d21b0c721307f3a87828371123de915def0f6e8fa16f23f5a58e5/pitools-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:59 2020"}