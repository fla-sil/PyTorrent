{"info": {"author": "Rob Martin @version2beta", "author_email": "rob@version2beta.com", "bugtrack_url": null, "classifiers": [], "description": "syslogger\n=========\n\nA quick program to write to a specified log facility at a specified log level.\n\nI originally wrote this so I had a way to quickly and easily test my syslog-ng configuration. Of course there were probably already programs that would do this, but for whatever dumb reason, I couldn't find them. (`logger` came to mind much later - http://unixhelp.ed.ac.uk/CGI/man-cgi?logger+1.) On the bright side, it gave me the opportunity to mock the Python logging class for my unit test, using Gary Bernhardt's Dingus library. https://github.com/garybernhardt/dingus. I also used his Expecter library again. Big thanks to Gary. He's been my goto for Python + TDD.\n\nInstallation:\n-------------\n\nSyslogger is in pypi at http://pypi.python.org/pypi/Syslogger/. To install, simply use pip.\n\n```\npip install syslogger\n```\n\nor maybe\n\n```\nsudo pip install --upgrade syslogger\n```\n\nUse:\n----\n\n`syslogger` runs from the command line.\n\n```\nsyslogger FACILITY LEVEL [--address ADDRESS] MESSAGE\n```\n\nwhere FACILITY is one of:\n\n* AUTH\n* AUTHPRIV\n* CRON\n* DAEMON\n* FTP\n* KERN\n* LPR\n* MAIL\n* NEWS\n* SYSLOG\n* USER\n* UUCP\n* LOCAL0\n* LOCAL1\n* LOCAL2\n* LOCAL3\n* LOCAL4\n* LOCAL5\n* LOCAL6\n* LOCAL7\n\nand LEVEL is one of:\n\n* DEBUG\n* INFO\n* WARNING\n* ERROR\n* CRITICAL\n\nand ADDRESS is the address of the socket that your system logger is listening to (defaults to `/dev/log`),\n\nand MESSAGE is the message you'd like to log.\n\nAPI:\n----\n\nIf you think syslogger might make your Python logging easier, feel free to use it in your code too.\n\n```\nfrom syslogger.syslogger import Syslogger\nl = Syslogger(level=\"CRITICAL\", facility=\"AUTH\", address=\"/dev/log\")\nl.log(\"Hello world, love syslogger\")\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/syslogger/", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "Syslogger", "package_url": "https://pypi.org/project/Syslogger/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Syslogger/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/syslogger/"}, "release_url": "https://pypi.org/project/Syslogger/0.0.4/", "requires_dist": null, "requires_python": null, "summary": "Log messages by facility and level.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A quick program to write to a specified log facility at a specified log level.</p>\n<p>I originally wrote this so I had a way to quickly and easily test my syslog-ng configuration. Of course there were probably already programs that would do this, but for whatever dumb reason, I couldn\u2019t find them. (<cite>logger</cite> came to mind much later - <a href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?logger+1\" rel=\"nofollow\">http://unixhelp.ed.ac.uk/CGI/man-cgi?logger+1</a>.) On the bright side, it gave me the opportunity to mock the Python logging class for my unit test, using Gary Bernhardt\u2019s Dingus library. <a href=\"https://github.com/garybernhardt/dingus\" rel=\"nofollow\">https://github.com/garybernhardt/dingus</a>. I also used his Expecter library again. Big thanks to Gary. He\u2019s been my goto for Python + TDD.</p>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<p>Syslogger is in pypi at <a href=\"http://pypi.python.org/pypi/Syslogger/\" rel=\"nofollow\">http://pypi.python.org/pypi/Syslogger/</a>. To install, simply use pip.</p>\n<p><tt>`\npip install syslogger\n`</tt></p>\n<p>or maybe</p>\n<p><tt>`\nsudo pip install <span class=\"pre\">--upgrade</span> syslogger\n`</tt></p>\n</div>\n<div id=\"use\">\n<h2>Use:</h2>\n<p><cite>syslogger</cite> runs from the command line.</p>\n<p><tt>`\nsyslogger FACILITY LEVEL <span class=\"pre\">[--address</span> ADDRESS] MESSAGE\n`</tt></p>\n<p>where FACILITY is one of:</p>\n<ul>\n<li>AUTH</li>\n<li>AUTHPRIV</li>\n<li>CRON</li>\n<li>DAEMON</li>\n<li>FTP</li>\n<li>KERN</li>\n<li>LPR</li>\n<li>MAIL</li>\n<li>NEWS</li>\n<li>SYSLOG</li>\n<li>USER</li>\n<li>UUCP</li>\n<li>LOCAL0</li>\n<li>LOCAL1</li>\n<li>LOCAL2</li>\n<li>LOCAL3</li>\n<li>LOCAL4</li>\n<li>LOCAL5</li>\n<li>LOCAL6</li>\n<li>LOCAL7</li>\n</ul>\n<p>and LEVEL is one of:</p>\n<ul>\n<li>DEBUG</li>\n<li>INFO</li>\n<li>WARNING</li>\n<li>ERROR</li>\n<li>CRITICAL</li>\n</ul>\n<p>and ADDRESS is the address of the socket that your system logger is listening to (defaults to <cite>/dev/log</cite>),</p>\n<p>and MESSAGE is the message you\u2019d like to log.</p>\n</div>\n<div id=\"api\">\n<h2>API:</h2>\n<p>If you think syslogger might make your Python logging easier, feel free to use it in your code too.</p>\n<p><tt>`\nfrom syslogger.syslogger import Syslogger\nl = <span class=\"pre\">Syslogger(level=\"CRITICAL\",</span> <span class=\"pre\">facility=\"AUTH\",</span> <span class=\"pre\">address=\"/dev/log\")</span>\n<span class=\"pre\">l.log(\"Hello</span> world, love syslogger\")\n`</tt></p>\n</div>\n\n          </div>"}, "last_serial": 785752, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ebd37a96d43117058fd9581aa7d5c734", "sha256": "4d13b8711b5d71c97d0828d9994c98a1cc5e4eedfe16093d17631a5170c05006"}, "downloads": -1, "filename": "Syslogger-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ebd37a96d43117058fd9581aa7d5c734", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3543, "upload_time": "2013-01-31T15:04:40", "upload_time_iso_8601": "2013-01-31T15:04:40.663335Z", "url": "https://files.pythonhosted.org/packages/92/2f/d0b80c8ad7422c90f75bc2bc0ff75e2d76cda845a817872edb8bd0023e97/Syslogger-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d90c55f2ac7dab7d6951ffa338569196", "sha256": "20ecb43d855cd41c960454d443813250cade9b890207a0d897baf74aadf7fc30"}, "downloads": -1, "filename": "Syslogger-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d90c55f2ac7dab7d6951ffa338569196", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3546, "upload_time": "2013-01-31T15:05:49", "upload_time_iso_8601": "2013-01-31T15:05:49.579143Z", "url": "https://files.pythonhosted.org/packages/21/96/d212b02cb193cb295f8431a2f4d2e9f7981f7ab068a9cf1d33bfb089cad2/Syslogger-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "aa85c0bc2fecdf1416c0e86ba6489a13", "sha256": "35a81592717a5488e5afd6c0418c7597548851d253196bf158d435965d18a87d"}, "downloads": -1, "filename": "Syslogger-0.0.3.tar.gz", "has_sig": false, "md5_digest": "aa85c0bc2fecdf1416c0e86ba6489a13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3799, "upload_time": "2013-01-31T15:23:07", "upload_time_iso_8601": "2013-01-31T15:23:07.927161Z", "url": "https://files.pythonhosted.org/packages/37/ba/2ed368bd31728146d562e976c4a8a1d2643f3aeb904104c96ee011ba1f0c/Syslogger-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "da865319c6a48078d351213bb08dca92", "sha256": "e1df0d92f85255ae513e7ca4227767076e51da62f360c0699a3283930e37c35a"}, "downloads": -1, "filename": "Syslogger-0.0.4.tar.gz", "has_sig": false, "md5_digest": "da865319c6a48078d351213bb08dca92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3805, "upload_time": "2013-01-31T23:07:21", "upload_time_iso_8601": "2013-01-31T23:07:21.817917Z", "url": "https://files.pythonhosted.org/packages/8e/0c/25c74877e130a5ec788307ef8607027c400ab7b6f1d343ccc63a6d974773/Syslogger-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "da865319c6a48078d351213bb08dca92", "sha256": "e1df0d92f85255ae513e7ca4227767076e51da62f360c0699a3283930e37c35a"}, "downloads": -1, "filename": "Syslogger-0.0.4.tar.gz", "has_sig": false, "md5_digest": "da865319c6a48078d351213bb08dca92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3805, "upload_time": "2013-01-31T23:07:21", "upload_time_iso_8601": "2013-01-31T23:07:21.817917Z", "url": "https://files.pythonhosted.org/packages/8e/0c/25c74877e130a5ec788307ef8607027c400ab7b6f1d343ccc63a6d974773/Syslogger-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:53 2020"}