{"info": {"author": "Tom McKeesick", "author_email": "tmck01@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "# punsy\n\nA rhyming pun generator for Python\n\n## Initial POC\n\n> The POC takes in a sentence, picks out the last word, finds a random rhyming match and inserts it in place.\n> E.g. `\"Napoleon Dynamite\" -> \"Napoleon VEGEMITE\"`\n\nTo install, run:\n```\npip install punsy\n```\n\nYou can then run punsy with:\n```\npunsy --sentence 'napoleon dynamite'\n```\n\nAn example run:\n\n```\n 20:10:22 \u2502 \u262f ~ punsy --sentence 'napoleon dynamite'\n2019-08-09 00:55:24,851 punsy.punsy INFO Parsing & loading 125699 entries from CMU dictionary file\n125700it [00:02, 58591.59it/s]\n2019-08-09 00:55:27,005 punsy.punsy INFO Pronunciation of \"DYNAMITE\" is \"D-AY1-N-AH0-M-AY2-T\"\n2019-08-09 00:55:27,005 punsy.punsy INFO Fetching rhymes, applying offset=2: \"N-AH0-M-AY2-T\"\n2019-08-09 00:55:27,005 punsy.punsy INFO Rhymes for DYNAMITE: ['DYNAMITE']\n2019-08-09 00:55:27,005 punsy.punsy INFO Generated pun for napoleon dynamite: napoleon DYNAMITE (DYNAMITE -> DYNAMITE)\n2019-08-09 00:55:27,181 punsy.punsy INFO napoleon DYNAMITE\n```\n\n### Docker\n\nYou build the docker image and run the POC with\n\n```bash\nmake poc\n```\n\n#### Running interactively\n\n* Enter the docker container with\n\n```bash\nmake build shell\n```\n\nOption 1: \n\nYou can use the `punsy/cmu.py` command with the following format:\n\n```text\n./punsy/cmu.py <cmu_file_path> <sentence> <offset>\n```\n\nOption 2: ipython\n\nThen, launch the `ipython` command and use as follows (output omitted):\n\n```python\nIn [1]: from punsy import cmu\nIn [2]: poc = cmu.POC()\nIn [3]: poc.run('NAPOLEON DYNAMITE', offset=2)\n```\n\n### The Suffix trie\n\nYou can experiment with the suffix trie by running it directly with\n\n```bash\n./punsy/structs/suffix_trie.py\n```\n\nOR, the regular trie with\n\n```bash\n./punsy/structs/trie.py\n```\n\n### Hall of Fame\n\nAs time passes, this will hopefully fill with some legitimately funny examples! Until then, we have these :)\n\n| command | output |\n|---------|--------|\n| 'Adventure Time' | \"Adventure PART-TIME\" |\n| 'A Good Day To Die Hard' | \"A Good Day To Die AVANT-GARDE\" |\n| 'The Rolling Stones' | \"The Rolling CLONES\" |\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tmck-code/punsy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "punsy", "package_url": "https://pypi.org/project/punsy/", "platform": "", "project_url": "https://pypi.org/project/punsy/", "project_urls": {"Homepage": "https://github.com/tmck-code/punsy"}, "release_url": "https://pypi.org/project/punsy/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "A rhyming pun generator.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>punsy</h1>\n<p>A rhyming pun generator for Python</p>\n<h2>Initial POC</h2>\n<blockquote>\n<p>The POC takes in a sentence, picks out the last word, finds a random rhyming match and inserts it in place.\nE.g. <code>\"Napoleon Dynamite\" -&gt; \"Napoleon VEGEMITE\"</code></p>\n</blockquote>\n<p>To install, run:</p>\n<pre><code>pip install punsy\n</code></pre>\n<p>You can then run punsy with:</p>\n<pre><code>punsy --sentence 'napoleon dynamite'\n</code></pre>\n<p>An example run:</p>\n<pre><code> 20:10:22 \u2502 \u262f ~ punsy --sentence 'napoleon dynamite'\n2019-08-09 00:55:24,851 punsy.punsy INFO Parsing &amp; loading 125699 entries from CMU dictionary file\n125700it [00:02, 58591.59it/s]\n2019-08-09 00:55:27,005 punsy.punsy INFO Pronunciation of \"DYNAMITE\" is \"D-AY1-N-AH0-M-AY2-T\"\n2019-08-09 00:55:27,005 punsy.punsy INFO Fetching rhymes, applying offset=2: \"N-AH0-M-AY2-T\"\n2019-08-09 00:55:27,005 punsy.punsy INFO Rhymes for DYNAMITE: ['DYNAMITE']\n2019-08-09 00:55:27,005 punsy.punsy INFO Generated pun for napoleon dynamite: napoleon DYNAMITE (DYNAMITE -&gt; DYNAMITE)\n2019-08-09 00:55:27,181 punsy.punsy INFO napoleon DYNAMITE\n</code></pre>\n<h3>Docker</h3>\n<p>You build the docker image and run the POC with</p>\n<pre>make poc\n</pre>\n<h4>Running interactively</h4>\n<ul>\n<li>Enter the docker container with</li>\n</ul>\n<pre>make build shell\n</pre>\n<p>Option 1:</p>\n<p>You can use the <code>punsy/cmu.py</code> command with the following format:</p>\n<pre>./punsy/cmu.py &lt;cmu_file_path&gt; &lt;sentence&gt; &lt;offset&gt;\n</pre>\n<p>Option 2: ipython</p>\n<p>Then, launch the <code>ipython</code> command and use as follows (output omitted):</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">from</span> <span class=\"nn\">punsy</span> <span class=\"kn\">import</span> <span class=\"n\">cmu</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">poc</span> <span class=\"o\">=</span> <span class=\"n\">cmu</span><span class=\"o\">.</span><span class=\"n\">POC</span><span class=\"p\">()</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">poc</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'NAPOLEON DYNAMITE'</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre>\n<h3>The Suffix trie</h3>\n<p>You can experiment with the suffix trie by running it directly with</p>\n<pre>./punsy/structs/suffix_trie.py\n</pre>\n<p>OR, the regular trie with</p>\n<pre>./punsy/structs/trie.py\n</pre>\n<h3>Hall of Fame</h3>\n<p>As time passes, this will hopefully fill with some legitimately funny examples! Until then, we have these :)</p>\n<table>\n<thead>\n<tr>\n<th>command</th>\n<th>output</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>'Adventure Time'</td>\n<td>\"Adventure PART-TIME\"</td>\n</tr>\n<tr>\n<td>'A Good Day To Die Hard'</td>\n<td>\"A Good Day To Die AVANT-GARDE\"</td>\n</tr>\n<tr>\n<td>'The Rolling Stones'</td>\n<td>\"The Rolling CLONES\"</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 6949786, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "7a8c92f783b844908170f63224df05b5", "sha256": "5f0aa08169e6d180ffb0fa5bec205b6ebf845314ad94378a1add20cddeb9201c"}, "downloads": -1, "filename": "punsy-0.0.3.macosx-10.14-x86_64.tar.gz", "has_sig": false, "md5_digest": "7a8c92f783b844908170f63224df05b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11774, "upload_time": "2019-08-08T14:48:26", "upload_time_iso_8601": "2019-08-08T14:48:26.140254Z", "url": "https://files.pythonhosted.org/packages/d4/74/2c96c1d872e9316630d4ef69e0962a4ae203f4336759772dffc42f2ff5b1/punsy-0.0.3.macosx-10.14-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "969eaf7522b56d18a41302f856caa523", "sha256": "aae4220273a86b28e74b5bbe61df9d45cb89bed9e849ab177cc81e4ccd0e9d36"}, "downloads": -1, "filename": "punsy-0.0.3-py3.7.egg", "has_sig": false, "md5_digest": "969eaf7522b56d18a41302f856caa523", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 864984, "upload_time": "2019-08-08T14:48:23", "upload_time_iso_8601": "2019-08-08T14:48:23.928862Z", "url": "https://files.pythonhosted.org/packages/55/cb/3ccb6cc82e2d083c7a81f3381efdbd190c61205aa32c0927a1e8cacfbef1/punsy-0.0.3-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "dccb01aedb3e81ede328603c27c25747", "sha256": "fdeaa500a2b2207a7a7cb16bc12eceac3c550e224744cb3c0cbf680adc63b006"}, "downloads": -1, "filename": "punsy-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "dccb01aedb3e81ede328603c27c25747", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 856945, "upload_time": "2019-08-08T14:48:09", "upload_time_iso_8601": "2019-08-08T14:48:09.501439Z", "url": "https://files.pythonhosted.org/packages/38/8a/b20e1b6921cc0ddaa4e1bc6c1069234df97484d12ed11a6a0c433e685d95/punsy-0.0.3-py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "f7391a709fc33012526ca0a471a0f2f9", "sha256": "875de35d029311cfac96b75495a19a77d6a6eee30d31cd2b9f4b02a038023825"}, "downloads": -1, "filename": "punsy-0.0.4-py3.8.egg", "has_sig": false, "md5_digest": "f7391a709fc33012526ca0a471a0f2f9", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": null, "size": 906093, "upload_time": "2020-04-04T13:55:53", "upload_time_iso_8601": "2020-04-04T13:55:53.160404Z", "url": "https://files.pythonhosted.org/packages/48/6c/350e36d925ac063a891babac7d502554c68743427691161ca9da90dc78de/punsy-0.0.4-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "71393038a4e69179d42977352777c201", "sha256": "70d1102e4e5ea4893dc928881f146a0e42d1bae85fa5328e99e8072602db40b5"}, "downloads": -1, "filename": "punsy-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "71393038a4e69179d42977352777c201", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 898999, "upload_time": "2020-04-04T13:55:51", "upload_time_iso_8601": "2020-04-04T13:55:51.228168Z", "url": "https://files.pythonhosted.org/packages/a4/36/754fe33690a639ac3507136f7f189d76cebd87a94a986fb62d8e4e785366/punsy-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8123a5c829916c6c51b3c1ca6a27ead0", "sha256": "5c463cd798e1bab73cb67e0978485ffb73f6c5e6bf96f31d320d61eb72b210ca"}, "downloads": -1, "filename": "punsy-0.0.4.tar.gz", "has_sig": false, "md5_digest": "8123a5c829916c6c51b3c1ca6a27ead0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 895205, "upload_time": "2020-04-04T13:55:56", "upload_time_iso_8601": "2020-04-04T13:55:56.981900Z", "url": "https://files.pythonhosted.org/packages/c9/f3/27fb99051a02ef42d403e1c5bd2862cf1af71ffa65bb2b3becb6214d5b91/punsy-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f7391a709fc33012526ca0a471a0f2f9", "sha256": "875de35d029311cfac96b75495a19a77d6a6eee30d31cd2b9f4b02a038023825"}, "downloads": -1, "filename": "punsy-0.0.4-py3.8.egg", "has_sig": false, "md5_digest": "f7391a709fc33012526ca0a471a0f2f9", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": null, "size": 906093, "upload_time": "2020-04-04T13:55:53", "upload_time_iso_8601": "2020-04-04T13:55:53.160404Z", "url": "https://files.pythonhosted.org/packages/48/6c/350e36d925ac063a891babac7d502554c68743427691161ca9da90dc78de/punsy-0.0.4-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "71393038a4e69179d42977352777c201", "sha256": "70d1102e4e5ea4893dc928881f146a0e42d1bae85fa5328e99e8072602db40b5"}, "downloads": -1, "filename": "punsy-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "71393038a4e69179d42977352777c201", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 898999, "upload_time": "2020-04-04T13:55:51", "upload_time_iso_8601": "2020-04-04T13:55:51.228168Z", "url": "https://files.pythonhosted.org/packages/a4/36/754fe33690a639ac3507136f7f189d76cebd87a94a986fb62d8e4e785366/punsy-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8123a5c829916c6c51b3c1ca6a27ead0", "sha256": "5c463cd798e1bab73cb67e0978485ffb73f6c5e6bf96f31d320d61eb72b210ca"}, "downloads": -1, "filename": "punsy-0.0.4.tar.gz", "has_sig": false, "md5_digest": "8123a5c829916c6c51b3c1ca6a27ead0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 895205, "upload_time": "2020-04-04T13:55:56", "upload_time_iso_8601": "2020-04-04T13:55:56.981900Z", "url": "https://files.pythonhosted.org/packages/c9/f3/27fb99051a02ef42d403e1c5bd2862cf1af71ffa65bb2b3becb6214d5b91/punsy-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:33 2020"}