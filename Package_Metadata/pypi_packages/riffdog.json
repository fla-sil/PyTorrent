{"info": {"author": "James Taylor", "author_email": "jtaylor@cpicardgroup.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: System :: Installation/Setup", "Topic :: System :: Monitoring", "Topic :: System :: Systems Administration"], "description": "# riffdog\nRiffdog Terraform / Reality scanner - finding 'things' in the Real World which \nTerraform didn't put there.\n\nThis project works by firstly loading your terraform state files - *not* your\nterraform files, and building a memory object that represents what terraform \n*thinks* it has deployed. The second step is then to access your environment\nand actually look what *is* there, and it builds another memory object.\n\nThen it compares the two, and looks for:\n\n* Things that TF put there, but arn't there\n* Things that are there, that TF doesn't know about\n\nFor this to work, you *must* install a resouce pack, for instance `riffdog_aws`\n\n## Command line vs Library\n\nRiffdog is both a command line tool and a python library. The command line tool\nbasically creates a config object and calls the scan method.\n\nTo install (for example with the AWS resources)\n\n`$ pip install riffdog[aws]`\n\nTo run:\n\n`$ riffdog -b bucketname_containing_states` \n\nFor full command line reference, please see the docs #FIXME - link to docs!\n\n## Light vs Full Scan mode\n\nAWS and Terraform are very complex: for instance, a EC2 instance is a computer,\na collection of network cards, volumes, etc. In 'light' mode, we do a high level\nscan to see if all the main components are there - in 'full' mode, it inspects\nall elements (as far as RiffDog is aware of, see below) - i.e. checks that all\nnetwork cards, volumes, etc are mounted as intended.\n\n## Ignores\n\nIts important to realise that not all infrastructure is deployed via TF - for\ninstance auto scaling, or service discovery systems may be interacting with your\ninfrastructure, and this is OK, but you don't want RiffDog raising alerts on\nthose.\n\n## Caveats:\n\nThis is pretty much *always* a work under development, as AWS adds more features\nmodules etc. The system is designed to be modular, but we're only able to keep\nup with modules that we use - so if you use a feature of AWS that we don't scan\nplease feel free to add a module. If you need help, please contact us or file \na ticket.\n\n\n\n## Testing\n\nAutomated testing of this system is quite difficult. Ultimatly these are here to make sure that changes to internal data structures do not break other functions (e.g. some data objects such as network interfaces are used by multiple features: both EC2 instances and Lambdas). The real test is whether it works against the current Terraform and AWS API's, not a snapshot from previous years.\n\n* Tests go into the tests folder, \n* Tox is used to make sure compatibility with various versions of python & libraries", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/riffdog/riffdog", "keywords": "terraform aws coverage", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "riffdog", "package_url": "https://pypi.org/project/riffdog/", "platform": "", "project_url": "https://pypi.org/project/riffdog/", "project_urls": {"Homepage": "https://github.com/riffdog/riffdog"}, "release_url": "https://pypi.org/project/riffdog/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Terraform - Reality Scanner", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>riffdog</h1>\n<p>Riffdog Terraform / Reality scanner - finding 'things' in the Real World which\nTerraform didn't put there.</p>\n<p>This project works by firstly loading your terraform state files - <em>not</em> your\nterraform files, and building a memory object that represents what terraform\n<em>thinks</em> it has deployed. The second step is then to access your environment\nand actually look what <em>is</em> there, and it builds another memory object.</p>\n<p>Then it compares the two, and looks for:</p>\n<ul>\n<li>Things that TF put there, but arn't there</li>\n<li>Things that are there, that TF doesn't know about</li>\n</ul>\n<p>For this to work, you <em>must</em> install a resouce pack, for instance <code>riffdog_aws</code></p>\n<h2>Command line vs Library</h2>\n<p>Riffdog is both a command line tool and a python library. The command line tool\nbasically creates a config object and calls the scan method.</p>\n<p>To install (for example with the AWS resources)</p>\n<p><code>$ pip install riffdog[aws]</code></p>\n<p>To run:</p>\n<p><code>$ riffdog -b bucketname_containing_states</code></p>\n<p>For full command line reference, please see the docs #FIXME - link to docs!</p>\n<h2>Light vs Full Scan mode</h2>\n<p>AWS and Terraform are very complex: for instance, a EC2 instance is a computer,\na collection of network cards, volumes, etc. In 'light' mode, we do a high level\nscan to see if all the main components are there - in 'full' mode, it inspects\nall elements (as far as RiffDog is aware of, see below) - i.e. checks that all\nnetwork cards, volumes, etc are mounted as intended.</p>\n<h2>Ignores</h2>\n<p>Its important to realise that not all infrastructure is deployed via TF - for\ninstance auto scaling, or service discovery systems may be interacting with your\ninfrastructure, and this is OK, but you don't want RiffDog raising alerts on\nthose.</p>\n<h2>Caveats:</h2>\n<p>This is pretty much <em>always</em> a work under development, as AWS adds more features\nmodules etc. The system is designed to be modular, but we're only able to keep\nup with modules that we use - so if you use a feature of AWS that we don't scan\nplease feel free to add a module. If you need help, please contact us or file\na ticket.</p>\n<h2>Testing</h2>\n<p>Automated testing of this system is quite difficult. Ultimatly these are here to make sure that changes to internal data structures do not break other functions (e.g. some data objects such as network interfaces are used by multiple features: both EC2 instances and Lambdas). The real test is whether it works against the current Terraform and AWS API's, not a snapshot from previous years.</p>\n<ul>\n<li>Tests go into the tests folder,</li>\n<li>Tox is used to make sure compatibility with various versions of python &amp; libraries</li>\n</ul>\n\n          </div>"}, "last_serial": 6732577, "releases": {"0.0.0a1": [{"comment_text": "", "digests": {"md5": "d6a2768a080d6ab23854ab3dd1f865e0", "sha256": "fe4e5c8ae77d7890cbd0e3365e6a122f07a75ddc7b13866c23862f85ff418614"}, "downloads": -1, "filename": "riffdog-0.0.0a1.tar.gz", "has_sig": false, "md5_digest": "d6a2768a080d6ab23854ab3dd1f865e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7715, "upload_time": "2020-02-11T22:15:14", "upload_time_iso_8601": "2020-02-11T22:15:14.913473Z", "url": "https://files.pythonhosted.org/packages/47/6f/272eb0468cc8821113fed018755c1f283c70140cca40165697ef8e60eefb/riffdog-0.0.0a1.tar.gz", "yanked": false}], "0.0.0a2": [{"comment_text": "", "digests": {"md5": "7248e836440195f2cd80c834aae1aca1", "sha256": "545ca25ad7cdaf13ab19c6f9c20e84fa4492d4fbd9d775174e02dcaa0c848eec"}, "downloads": -1, "filename": "riffdog-0.0.0a2.tar.gz", "has_sig": false, "md5_digest": "7248e836440195f2cd80c834aae1aca1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9323, "upload_time": "2020-02-12T17:06:08", "upload_time_iso_8601": "2020-02-12T17:06:08.438468Z", "url": "https://files.pythonhosted.org/packages/43/dc/d8323d74b90f1223df83805622860c39dd71ba9b79f1807b5122534b8f11/riffdog-0.0.0a2.tar.gz", "yanked": false}], "0.0.0a3": [{"comment_text": "", "digests": {"md5": "7c9bf6a7e8eee61dcab1870e71cc1846", "sha256": "7c58bf4a62bac381daabfbad12d3ad115845b5a6b473e020726ea36f71fb8e70"}, "downloads": -1, "filename": "riffdog-0.0.0a3.tar.gz", "has_sig": false, "md5_digest": "7c9bf6a7e8eee61dcab1870e71cc1846", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11781, "upload_time": "2020-02-13T22:11:45", "upload_time_iso_8601": "2020-02-13T22:11:45.397686Z", "url": "https://files.pythonhosted.org/packages/55/26/eaa5c8291d4a261811b354e89448cb238d44bae75bc3ac58a0d9cf2c5ad3/riffdog-0.0.0a3.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "f7e8260da8cf8cee73cca3228e6ba1f8", "sha256": "e723ae8648462fcca9f4600cc3af60423c5ce9a7fc2ad79c2f26243944a05af8"}, "downloads": -1, "filename": "riffdog-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f7e8260da8cf8cee73cca3228e6ba1f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9514, "upload_time": "2020-02-14T21:17:43", "upload_time_iso_8601": "2020-02-14T21:17:43.179063Z", "url": "https://files.pythonhosted.org/packages/7d/38/111822f24793195aa722c4a7c61d3b58e662c3639183b3fb08a15f859463/riffdog-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "4955f3ea1e64658a7920f96c8432c5ac", "sha256": "fe142d166d2fe3da53038f16eb6d15567c0963c3b8b7db71d61f4a751f05e109"}, "downloads": -1, "filename": "riffdog-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4955f3ea1e64658a7920f96c8432c5ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12012, "upload_time": "2020-03-02T10:42:04", "upload_time_iso_8601": "2020-03-02T10:42:04.793197Z", "url": "https://files.pythonhosted.org/packages/86/52/aa1f5f2d3122ace21c88969f09b0d80129c205ba24d49400b765d99c7f05/riffdog-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4955f3ea1e64658a7920f96c8432c5ac", "sha256": "fe142d166d2fe3da53038f16eb6d15567c0963c3b8b7db71d61f4a751f05e109"}, "downloads": -1, "filename": "riffdog-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4955f3ea1e64658a7920f96c8432c5ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12012, "upload_time": "2020-03-02T10:42:04", "upload_time_iso_8601": "2020-03-02T10:42:04.793197Z", "url": "https://files.pythonhosted.org/packages/86/52/aa1f5f2d3122ace21c88969f09b0d80129c205ba24d49400b765d99c7f05/riffdog-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:42 2020"}