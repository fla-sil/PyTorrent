{"info": {"author": "Jonghwan Hyeon", "author_email": "hyeon0145@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only"], "description": "\n\n# python-ffmpeg\nA python interface for FFmpeg using asyncio\n\n## Requirements\n- Python 3.5+\n- pyee\n\n## Installation\n    pip install python-ffmpeg\n\n## Usage\n```python\nimport asyncio\nfrom ffmpeg import FFmpeg\n\nffmpeg = FFmpeg().option('y').input(\n    'rtsp://example.com/cam',\n    # Specify file options using kwargs\n    rtsp_transport='tcp',\n    rtsp_flags='prefer_tcp',\n).output(\n    'output.ts',\n    # Use a dictionary when an option name contains special characters\n    {'codec:v': 'copy'},\n    f='mpegts',\n)\n\n@ffmpeg.on('start')\ndef on_start(arguments):\n    print('Arguments:', arguments)\n\n@ffmpeg.on('stderr')\ndef on_stderr(line):\n    print('stderr:', line)\n\n@ffmpeg.on('progress')\ndef on_progress(progress):\n    print(progress)\n\n@ffmpeg.on('progress')\ndef time_to_terminate(progress):\n    # Gracefully terminate when more than 200 frames are processed\n    if progress.frame > 200:\n        ffmpeg.terminate()\n\n@ffmpeg.on('completed')\ndef on_completed():\n    print('Completed')\n\n@ffmpeg.on('terminated')\ndef on_terminated():\n    print('Terminated')\n\n@ffmpeg.on('error')\ndef on_error(code):\n    print('Error:', code)\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(ffmpeg.execute())\nloop.close()\n```\n## API\n### FFmpeg\n#### __init__(executable='ffmpeg')\n- `executable`: the path to the ffmpeg executable\n\nInitializes the `FFmpeg` instance.\n\n#### option(key, value=None)\n- `key`\n- `value`\n\nSpecifies a global option `-key` or `-key value`\n\n#### input(url, options=None, **kwargs)\n- `url`\n- `options`\n- `kwargs`\n\nSpecifies an input file. An arbitrary number of input files can be specified by calling this method multiple times.\n\n#### output(url, options=None, **kwargs)\n- `url`\n- `options`\n- `kwargs`\n\nSpecifies an output file. An arbitrary number of output files can be specified by calling this method multiple times.\n\n#### execute()\nExecutes FFmpeg using specified options and files.\n\n#### terminate()\nGracefully terminates the running FFmpeg process.\n\n#### on(event, listener=None)\n- `event`: the name of the event\n- `listener`: the callback function\n\nRegisters the `listener` to the `event`. This method can be used as a decorator.\n\n#### Event: 'start'\n- `arguments`: a sequence of arguments to execute FFmpeg\n\nThe `'start'` event is emitted just before FFmpeg is executed.\n\n#### Event: 'stderr'\n- `line`\n\nThe `'stderr'` event is emitted when FFmpeg writes a line to `stderr`.\n\n#### Event: 'progress'\n- `progress`: a namedtuple with `frame`, `fps`, `size`, `time`, `bitrate`, `speed` fields\n\nThe `'progress'` event is emitted when FFmpeg reports progress.\n\n#### Event: 'completed'\nThe `'completed'` event is emitted when FFmpeg is successfully exited.\n\n#### Event: 'terminated'\nThe `'terminated'` event is emitted when FFmpeg is terminated by calling `FFmpeg.terminate()`.\n\n#### Event: 'error'\n- `code`: a return code of the FFmpeg process\n\nThe `'error'` event is emitted when FFmpeg is exited with a non-zero return code\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jonghwanhyeon/python-ffmpeg", "keywords": "ffmpeg", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "python-ffmpeg", "package_url": "https://pypi.org/project/python-ffmpeg/", "platform": "", "project_url": "https://pypi.org/project/python-ffmpeg/", "project_urls": {"Homepage": "https://github.com/jonghwanhyeon/python-ffmpeg"}, "release_url": "https://pypi.org/project/python-ffmpeg/1.0.11/", "requires_dist": ["pyee"], "requires_python": "", "summary": "A python interface for FFmpeg", "version": "1.0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>python-ffmpeg</h1>\n<p>A python interface for FFmpeg using asyncio</p>\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.5+</li>\n<li>pyee</li>\n</ul>\n<h2>Installation</h2>\n<pre><code>pip install python-ffmpeg\n</code></pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ffmpeg</span> <span class=\"kn\">import</span> <span class=\"n\">FFmpeg</span>\n\n<span class=\"n\">ffmpeg</span> <span class=\"o\">=</span> <span class=\"n\">FFmpeg</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">option</span><span class=\"p\">(</span><span class=\"s1\">'y'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">input</span><span class=\"p\">(</span>\n    <span class=\"s1\">'rtsp://example.com/cam'</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Specify file options using kwargs</span>\n    <span class=\"n\">rtsp_transport</span><span class=\"o\">=</span><span class=\"s1\">'tcp'</span><span class=\"p\">,</span>\n    <span class=\"n\">rtsp_flags</span><span class=\"o\">=</span><span class=\"s1\">'prefer_tcp'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">(</span>\n    <span class=\"s1\">'output.ts'</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Use a dictionary when an option name contains special characters</span>\n    <span class=\"p\">{</span><span class=\"s1\">'codec:v'</span><span class=\"p\">:</span> <span class=\"s1\">'copy'</span><span class=\"p\">},</span>\n    <span class=\"n\">f</span><span class=\"o\">=</span><span class=\"s1\">'mpegts'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@ffmpeg</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s1\">'start'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_start</span><span class=\"p\">(</span><span class=\"n\">arguments</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Arguments:'</span><span class=\"p\">,</span> <span class=\"n\">arguments</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@ffmpeg</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s1\">'stderr'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_stderr</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'stderr:'</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@ffmpeg</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s1\">'progress'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_progress</span><span class=\"p\">(</span><span class=\"n\">progress</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">progress</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@ffmpeg</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s1\">'progress'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">time_to_terminate</span><span class=\"p\">(</span><span class=\"n\">progress</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Gracefully terminate when more than 200 frames are processed</span>\n    <span class=\"k\">if</span> <span class=\"n\">progress</span><span class=\"o\">.</span><span class=\"n\">frame</span> <span class=\"o\">&gt;</span> <span class=\"mi\">200</span><span class=\"p\">:</span>\n        <span class=\"n\">ffmpeg</span><span class=\"o\">.</span><span class=\"n\">terminate</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@ffmpeg</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s1\">'completed'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_completed</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Completed'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@ffmpeg</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s1\">'terminated'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_terminated</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Terminated'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@ffmpeg</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s1\">'error'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_error</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Error:'</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"p\">)</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">ffmpeg</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">())</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h2>API</h2>\n<h3>FFmpeg</h3>\n<h4><strong>init</strong>(executable='ffmpeg')</h4>\n<ul>\n<li><code>executable</code>: the path to the ffmpeg executable</li>\n</ul>\n<p>Initializes the <code>FFmpeg</code> instance.</p>\n<h4>option(key, value=None)</h4>\n<ul>\n<li><code>key</code></li>\n<li><code>value</code></li>\n</ul>\n<p>Specifies a global option <code>-key</code> or <code>-key value</code></p>\n<h4>input(url, options=None, **kwargs)</h4>\n<ul>\n<li><code>url</code></li>\n<li><code>options</code></li>\n<li><code>kwargs</code></li>\n</ul>\n<p>Specifies an input file. An arbitrary number of input files can be specified by calling this method multiple times.</p>\n<h4>output(url, options=None, **kwargs)</h4>\n<ul>\n<li><code>url</code></li>\n<li><code>options</code></li>\n<li><code>kwargs</code></li>\n</ul>\n<p>Specifies an output file. An arbitrary number of output files can be specified by calling this method multiple times.</p>\n<h4>execute()</h4>\n<p>Executes FFmpeg using specified options and files.</p>\n<h4>terminate()</h4>\n<p>Gracefully terminates the running FFmpeg process.</p>\n<h4>on(event, listener=None)</h4>\n<ul>\n<li><code>event</code>: the name of the event</li>\n<li><code>listener</code>: the callback function</li>\n</ul>\n<p>Registers the <code>listener</code> to the <code>event</code>. This method can be used as a decorator.</p>\n<h4>Event: 'start'</h4>\n<ul>\n<li><code>arguments</code>: a sequence of arguments to execute FFmpeg</li>\n</ul>\n<p>The <code>'start'</code> event is emitted just before FFmpeg is executed.</p>\n<h4>Event: 'stderr'</h4>\n<ul>\n<li><code>line</code></li>\n</ul>\n<p>The <code>'stderr'</code> event is emitted when FFmpeg writes a line to <code>stderr</code>.</p>\n<h4>Event: 'progress'</h4>\n<ul>\n<li><code>progress</code>: a namedtuple with <code>frame</code>, <code>fps</code>, <code>size</code>, <code>time</code>, <code>bitrate</code>, <code>speed</code> fields</li>\n</ul>\n<p>The <code>'progress'</code> event is emitted when FFmpeg reports progress.</p>\n<h4>Event: 'completed'</h4>\n<p>The <code>'completed'</code> event is emitted when FFmpeg is successfully exited.</p>\n<h4>Event: 'terminated'</h4>\n<p>The <code>'terminated'</code> event is emitted when FFmpeg is terminated by calling <code>FFmpeg.terminate()</code>.</p>\n<h4>Event: 'error'</h4>\n<ul>\n<li><code>code</code>: a return code of the FFmpeg process</li>\n</ul>\n<p>The <code>'error'</code> event is emitted when FFmpeg is exited with a non-zero return code</p>\n\n          </div>"}, "last_serial": 6800764, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f14dfb46642aa536dedf7171e07190ca", "sha256": "f5913c4e45ca3339aba21f204fa4070f862b0f78e328df91885d9c86f243c0df"}, "downloads": -1, "filename": "python_ffmpeg-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f14dfb46642aa536dedf7171e07190ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3084, "upload_time": "2018-06-03T21:23:38", "upload_time_iso_8601": "2018-06-03T21:23:38.854573Z", "url": "https://files.pythonhosted.org/packages/01/a2/bed1f52f0448bd36db3dee59edfec663b4027f8c28495cd631eca4154510/python_ffmpeg-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff5f3216f76fd77949118e75639a9949", "sha256": "cdf245bd80c27af001fc5020b9b4fce21c99fdc598e9efdc9326bdf4fdb93e96"}, "downloads": -1, "filename": "python-ffmpeg-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ff5f3216f76fd77949118e75639a9949", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2343, "upload_time": "2018-06-03T21:23:40", "upload_time_iso_8601": "2018-06-03T21:23:40.191778Z", "url": "https://files.pythonhosted.org/packages/c2/2e/e83af088ff192233a57aa449f5ba7048fe522f2b4e7f701f32dfd8d879ec/python-ffmpeg-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "20d9b571bb58610d015d67cb3bce4198", "sha256": "b9bf856ce9b005f171de51cd5e6f8383f6fc7c7300bef0071dcc65da51130d40"}, "downloads": -1, "filename": "python_ffmpeg-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "20d9b571bb58610d015d67cb3bce4198", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3108, "upload_time": "2018-06-04T01:36:50", "upload_time_iso_8601": "2018-06-04T01:36:50.236126Z", "url": "https://files.pythonhosted.org/packages/7f/fd/562eea88349f21b4186325775cbf51a1c473a05c17dd9bc571e29a725d18/python_ffmpeg-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15408d9c7402f1189f3907222d38b090", "sha256": "6e46582bb309eecb81023e41fe63f94dcc0df230f1b0981a27bbf6722b68bb07"}, "downloads": -1, "filename": "python-ffmpeg-1.0.1.tar.gz", "has_sig": false, "md5_digest": "15408d9c7402f1189f3907222d38b090", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2363, "upload_time": "2018-06-04T01:36:51", "upload_time_iso_8601": "2018-06-04T01:36:51.850430Z", "url": "https://files.pythonhosted.org/packages/6c/29/821a2e0288591f65497759b8f4aef7110da8f94a2b5f441f087321d63456/python-ffmpeg-1.0.1.tar.gz", "yanked": false}], "1.0.10": [{"comment_text": "", "digests": {"md5": "d338b28aadd82bfedcc0dde0c40310b9", "sha256": "98d40c16c41c1aa5d32fb8aa9e4bba9c84920de5685cf5d9423130af305d3947"}, "downloads": -1, "filename": "python_ffmpeg-1.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "d338b28aadd82bfedcc0dde0c40310b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4449, "upload_time": "2020-03-12T17:36:42", "upload_time_iso_8601": "2020-03-12T17:36:42.272927Z", "url": "https://files.pythonhosted.org/packages/40/a2/d00015edc8a95edffa45df35551aface3ffc9a88e94e90a8dc0914f78cf2/python_ffmpeg-1.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "610ad78446d70dfdd161db6a4cab415e", "sha256": "bdaf6d591fe525964711a6e643ad099bf779569422018c48d8ea51f2ca165592"}, "downloads": -1, "filename": "python-ffmpeg-1.0.10.tar.gz", "has_sig": false, "md5_digest": "610ad78446d70dfdd161db6a4cab415e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3805, "upload_time": "2020-03-12T17:36:43", "upload_time_iso_8601": "2020-03-12T17:36:43.715374Z", "url": "https://files.pythonhosted.org/packages/60/54/a6392efebf50066b939fe53eca3cef6f70cb3ff386d8a8363176c5eda018/python-ffmpeg-1.0.10.tar.gz", "yanked": false}], "1.0.11": [{"comment_text": "", "digests": {"md5": "8d37ee89cf64e1456e2c0c749f6dec6d", "sha256": "4eb946e7457ff5db9ce1cbe138ecdbe53e7bfe4a15a78b39051fba6b64919f36"}, "downloads": -1, "filename": "python_ffmpeg-1.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "8d37ee89cf64e1456e2c0c749f6dec6d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5544, "upload_time": "2020-03-12T17:42:49", "upload_time_iso_8601": "2020-03-12T17:42:49.777795Z", "url": "https://files.pythonhosted.org/packages/7e/94/fefef2b3aa3805cf36fe4ac3b7b9cf24f20e8d46df56385fdacb1fc69542/python_ffmpeg-1.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "903e6555e0918a8da323f1ff3205643d", "sha256": "bdf38ba5052f7128241a217a4411664e1047afa959416b30f133a3a349428e4c"}, "downloads": -1, "filename": "python-ffmpeg-1.0.11.tar.gz", "has_sig": false, "md5_digest": "903e6555e0918a8da323f1ff3205643d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4274, "upload_time": "2020-03-12T17:42:51", "upload_time_iso_8601": "2020-03-12T17:42:51.112931Z", "url": "https://files.pythonhosted.org/packages/26/9a/ff292f5e50eacc5c6110c02e65025671fb813a219bfe1f86b824bc5061bd/python-ffmpeg-1.0.11.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "b0690918dc0b3f2a2b3eb6356281d7b3", "sha256": "9a4b675b55c1764008c2823c1c0fb56f454a95d6b21d03768be2338740ecdb72"}, "downloads": -1, "filename": "python_ffmpeg-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b0690918dc0b3f2a2b3eb6356281d7b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3108, "upload_time": "2018-06-04T11:33:17", "upload_time_iso_8601": "2018-06-04T11:33:17.689170Z", "url": "https://files.pythonhosted.org/packages/cc/7f/800d22c25fb246eb96e962dc67759d2558034ce7ac1e46696c6bc947e8f8/python_ffmpeg-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b2280bf151f023197af127a5aa79202", "sha256": "bedc4703f4f5871a9018f6580451daa66330d07a9eb26648a193a15476d5475d"}, "downloads": -1, "filename": "python-ffmpeg-1.0.2.tar.gz", "has_sig": false, "md5_digest": "9b2280bf151f023197af127a5aa79202", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2363, "upload_time": "2018-06-04T11:33:19", "upload_time_iso_8601": "2018-06-04T11:33:19.213908Z", "url": "https://files.pythonhosted.org/packages/ff/ff/7e2853000baec7332fd833fb02c2c7c4acd1f3f75fd6fafe7472f3bf6eb3/python-ffmpeg-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "d3978ee756a6ffc0e751ddcbe56faf7d", "sha256": "5b175e82db0d7b6544309190715498745678c021a661ef6dc210c6eafac75798"}, "downloads": -1, "filename": "python_ffmpeg-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d3978ee756a6ffc0e751ddcbe56faf7d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3107, "upload_time": "2018-06-04T11:41:08", "upload_time_iso_8601": "2018-06-04T11:41:08.699184Z", "url": "https://files.pythonhosted.org/packages/a3/16/6a8f0c9f8b9b1a9721797d8ed558365eecbccc61e083af96ced87b707de3/python_ffmpeg-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67382d2fb40b07f5ecaf8e3afbfd735e", "sha256": "a38faed2fbf60253e52df822ba0a44ca0b1c854bb279eb9bbc2914634bdaa418"}, "downloads": -1, "filename": "python-ffmpeg-1.0.3.tar.gz", "has_sig": false, "md5_digest": "67382d2fb40b07f5ecaf8e3afbfd735e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2361, "upload_time": "2018-06-04T11:41:09", "upload_time_iso_8601": "2018-06-04T11:41:09.912549Z", "url": "https://files.pythonhosted.org/packages/d0/fb/4bc45332f285e9b6e716a97496b90255c19c28340a47e32bda42e05de319/python-ffmpeg-1.0.3.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "3c7bd5a07fa397965e65b10ac4b119e6", "sha256": "f6f3a060b6673de60a3b864a8d619c4b5c1972448ee122bbaa84512306716108"}, "downloads": -1, "filename": "python_ffmpeg-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "3c7bd5a07fa397965e65b10ac4b119e6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3389, "upload_time": "2018-06-05T15:51:55", "upload_time_iso_8601": "2018-06-05T15:51:55.343274Z", "url": "https://files.pythonhosted.org/packages/ef/80/eb29135af079bf4cd0218cf2423f9700b1d0d54b2713e4fa405d7330508b/python_ffmpeg-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9f4d94d4422fc0f504cb3b520c88063", "sha256": "1f34ebd540a3942939439852a54d0de47108c8501aacd8486e3f2410f545575d"}, "downloads": -1, "filename": "python-ffmpeg-1.0.5.tar.gz", "has_sig": false, "md5_digest": "b9f4d94d4422fc0f504cb3b520c88063", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2619, "upload_time": "2018-06-05T15:51:56", "upload_time_iso_8601": "2018-06-05T15:51:56.690517Z", "url": "https://files.pythonhosted.org/packages/08/25/49255ba8a4702aa2451d5ff457177ffede5f508a705bd1776d08b821677e/python-ffmpeg-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "d74c012deebf09a8aa49b39593093c82", "sha256": "b182190eb454d45efac118943626bac75ddff76e7a093ad0b607aea5d31e5a52"}, "downloads": -1, "filename": "python_ffmpeg-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d74c012deebf09a8aa49b39593093c82", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4290, "upload_time": "2019-02-04T11:15:07", "upload_time_iso_8601": "2019-02-04T11:15:07.421540Z", "url": "https://files.pythonhosted.org/packages/8a/c2/0a511c735f542e309555d64cab2c1c2b8989fc2dde5ecbd8cb919dd810c1/python_ffmpeg-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "175e9e1f69e8776c54b19ac8ed78c168", "sha256": "749ac62a53b29fe240e187c17d772b794e3833cdcb37c3f00018ff14a5cc360d"}, "downloads": -1, "filename": "python-ffmpeg-1.0.6.tar.gz", "has_sig": false, "md5_digest": "175e9e1f69e8776c54b19ac8ed78c168", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3710, "upload_time": "2019-02-04T11:14:38", "upload_time_iso_8601": "2019-02-04T11:14:38.831342Z", "url": "https://files.pythonhosted.org/packages/bb/63/c64d38eecb74ef2802df7b1761470913b8f394ea4974324b8169dac0de2e/python-ffmpeg-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "8e5447317ee99ec1e525f90bd97e1d0c", "sha256": "a127f8b1161545a3779f933694599308c25fa3b24dd015c706578e8eb61bfca0"}, "downloads": -1, "filename": "python_ffmpeg-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "8e5447317ee99ec1e525f90bd97e1d0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4299, "upload_time": "2019-02-04T18:12:13", "upload_time_iso_8601": "2019-02-04T18:12:13.590925Z", "url": "https://files.pythonhosted.org/packages/1c/aa/53b0e8ea426b05a9df82d491a7a3850fbbf0e3d9305f7b8e7c43b9676d9e/python_ffmpeg-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0d27162df8c1ad03d9d5accee8ba43a", "sha256": "9b7721c0fa703c9fe8bd65e67dd112bffb8dc14cfdce3983f9aad4c88dd3f8bd"}, "downloads": -1, "filename": "python-ffmpeg-1.0.7.tar.gz", "has_sig": false, "md5_digest": "b0d27162df8c1ad03d9d5accee8ba43a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3720, "upload_time": "2019-02-04T18:12:05", "upload_time_iso_8601": "2019-02-04T18:12:05.277738Z", "url": "https://files.pythonhosted.org/packages/56/c1/c0950c559da264194dac9354eb4cec73683a23e04dc40ed1434c34a9a919/python-ffmpeg-1.0.7.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "f66012dc493c5f335a371313e05a32d4", "sha256": "37f2011c59760e35230cd8b4e8870ee5a240bc432c32f7b5de7ce292a74f3919"}, "downloads": -1, "filename": "python_ffmpeg-1.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "f66012dc493c5f335a371313e05a32d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4336, "upload_time": "2020-02-28T07:48:55", "upload_time_iso_8601": "2020-02-28T07:48:55.048419Z", "url": "https://files.pythonhosted.org/packages/17/3a/afb0621cfa550d7bb6e156c9aca0e82f7f2bfd077ae4df9ee83c4362f829/python_ffmpeg-1.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9666c74c41453e1c8242e73553c99920", "sha256": "96973f133d4cde4680a4fbfc1845eca5b2c3ff363dbdf39b4baa418ee3ca409b"}, "downloads": -1, "filename": "python-ffmpeg-1.0.9.tar.gz", "has_sig": false, "md5_digest": "9666c74c41453e1c8242e73553c99920", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3732, "upload_time": "2020-02-28T07:48:56", "upload_time_iso_8601": "2020-02-28T07:48:56.328003Z", "url": "https://files.pythonhosted.org/packages/4f/bf/6e3cd40a539336c031c59ac1bb9735aa2e69f5d7ee5948b227ce86928a77/python-ffmpeg-1.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8d37ee89cf64e1456e2c0c749f6dec6d", "sha256": "4eb946e7457ff5db9ce1cbe138ecdbe53e7bfe4a15a78b39051fba6b64919f36"}, "downloads": -1, "filename": "python_ffmpeg-1.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "8d37ee89cf64e1456e2c0c749f6dec6d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5544, "upload_time": "2020-03-12T17:42:49", "upload_time_iso_8601": "2020-03-12T17:42:49.777795Z", "url": "https://files.pythonhosted.org/packages/7e/94/fefef2b3aa3805cf36fe4ac3b7b9cf24f20e8d46df56385fdacb1fc69542/python_ffmpeg-1.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "903e6555e0918a8da323f1ff3205643d", "sha256": "bdf38ba5052f7128241a217a4411664e1047afa959416b30f133a3a349428e4c"}, "downloads": -1, "filename": "python-ffmpeg-1.0.11.tar.gz", "has_sig": false, "md5_digest": "903e6555e0918a8da323f1ff3205643d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4274, "upload_time": "2020-03-12T17:42:51", "upload_time_iso_8601": "2020-03-12T17:42:51.112931Z", "url": "https://files.pythonhosted.org/packages/26/9a/ff292f5e50eacc5c6110c02e65025671fb813a219bfe1f86b824bc5061bd/python-ffmpeg-1.0.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:41 2020"}