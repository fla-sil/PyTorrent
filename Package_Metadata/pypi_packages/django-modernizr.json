{"info": {"author": "David Gouldin", "author_email": "david@gould.in", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "================\r\nDjango Modernizr\r\n================\r\n\r\n`Modernizr <http://modernizr.com/>`_ is a javascript utility that interrogates\r\na user's web browser to determine its capabilities.  Unfortunately, all this\r\ndelicious data is only available client-side.\r\n\r\ndjango-modernizr is a Django Middleware that includes the Modernizr javascript\r\nand stuffs Modernizr's output into a cookie or session on the first\r\npage request.\r\n\r\n\r\nInstallation\r\n============\r\n\r\n#. Add the `modernizr` directory to your Python path.\r\n\r\n#. Add the following middleware to your project's `settings.py` file:\r\n\r\n   ``'modernizr.middleware.ModenizrMiddleware',``\r\n\r\n   The order of MIDDLEWARE_CLASSES is important: the Modernizr Middleware middleware\r\n   must come after any other middleware that encodes the response's content\r\n   (such as GZipMiddleware).\r\n\r\n   Note: The modernizr code will only display itself if the mimetype of the\r\n   response is either `text/html` or `application/xhtml+xml` and contains a\r\n   closing `</body>` tag.\r\n\r\n   Note: Be aware of middleware ordering and other middleware that may\r\n   intercept requests and return responses.  Putting the modernizr\r\n   middleware *after* the Flatpage middleware, for example, means modernizr\r\n   will not show up on flatpages.\r\n\r\n#. Add `modernizr` to your `INSTALLED_APPS` setting so Django can find the\r\n   template files associated with the modernizr.\r\n\r\n   Alternatively, add the path to the modernizr templates\r\n   (``'path/to/modernizr/templates'`` to your ``TEMPLATE_DIRS`` setting.)\r\n\r\nConfiguration\r\n=============\r\n\r\nDjango Modernizr has a few settings that can be set in `settings.py`\r\n(all are optional):\r\n\r\n#. `MODERNIZR_STORAGE`: set to 'cookie' or 'session'\r\n\r\n#. Cookie settings (parity to ``django.contrib.sessions`` cookie settings):\r\n\r\n   * `MODERNIZR_COOKIE_NAME`: Name of the cookie. Default is 'modernizr'.\r\n   * `MODERNIZR_COOKIE_AGE`: Expire time of the cookie. Default is 2 weeks.\r\n   * `MODERNIZR_COOKIE_DOMAIN`: Domain name the cookie is issued on.\r\n     Default is None.\r\n   * `MODERNIZR_COOKIE_SECURE`: Whether or not to serve the cookie securely.\r\n     Default is False.\r\n   * `MODERNIZR_COOKIE_PATH`: Path the cookie is issued on. Default is '/'.\r\n\r\n#. Session settings:\r\n\r\n   * `MODERNIZR_SESSION_KEY`: Session key to use for storage. Default is\r\n     'modernizr'.\r\n\r\n#. Modernizr rendering options:\r\n\r\n   * `MODERNIZR_JS_URL`: URL to modernizr.js.\r\n     Default is http://cachedcommons.org/cache/modernizr/1.5.0/javascripts/modernizr-min.js .\r\n   * `MODERNIZR_SENTINEL_IMAGE_URL`: URL of sentinel image which includes\r\n     Modernizr data. Default is '/django-modernizr-endpoint.gif'.\r\n   * `MODERNIZR_INCLUDE_TAG`: A closing tag of this type will be located, and\r\n     the Modernizr template will be rendered and inserted just before it.\r\n     Default is 'body'.\r\n\r\nThanks\r\n======\r\n\r\nDjango Modernizr is a port of Marshall Yount's `rack-modernizr\r\n<https://github.com/marshally/rack-modernizr/>`_.\r\n\r\nPortions of code and documentation style were taken from Rob Hudson's\r\n`django-debug-toolbar\r\n<https://github.com/robhudson/django-debug-toolbar>`_.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/dgouldin/django-modernizr/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dgouldin/django-modernizr", "keywords": "django modernizr", "license": "", "maintainer": "David Gouldin", "maintainer_email": "david@gould.in", "name": "django-modernizr", "package_url": "https://pypi.org/project/django-modernizr/", "platform": "", "project_url": "https://pypi.org/project/django-modernizr/", "project_urls": {"Download": "https://github.com/dgouldin/django-modernizr/tarball/master", "Homepage": "https://github.com/dgouldin/django-modernizr"}, "release_url": "https://pypi.org/project/django-modernizr/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Django port of Marshall Yount's rack-modernizr (https://github.com/marshally/rack-modernizr/)", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"http://modernizr.com/\" rel=\"nofollow\">Modernizr</a> is a javascript utility that interrogates\na user\u2019s web browser to determine its capabilities.  Unfortunately, all this\ndelicious data is only available client-side.</p>\n<p>django-modernizr is a Django Middleware that includes the Modernizr javascript\nand stuffs Modernizr\u2019s output into a cookie or session on the first\npage request.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><p>Add the <cite>modernizr</cite> directory to your Python path.</p>\n</li>\n<li><p>Add the following middleware to your project\u2019s <cite>settings.py</cite> file:</p>\n<p><tt>'modernizr.middleware.ModenizrMiddleware',</tt></p>\n<p>The order of MIDDLEWARE_CLASSES is important: the Modernizr Middleware middleware\nmust come after any other middleware that encodes the response\u2019s content\n(such as GZipMiddleware).</p>\n<p>Note: The modernizr code will only display itself if the mimetype of the\nresponse is either <cite>text/html</cite> or <cite>application/xhtml+xml</cite> and contains a\nclosing <cite>&lt;/body&gt;</cite> tag.</p>\n<p>Note: Be aware of middleware ordering and other middleware that may\nintercept requests and return responses.  Putting the modernizr\nmiddleware <em>after</em> the Flatpage middleware, for example, means modernizr\nwill not show up on flatpages.</p>\n</li>\n<li><p>Add <cite>modernizr</cite> to your <cite>INSTALLED_APPS</cite> setting so Django can find the\ntemplate files associated with the modernizr.</p>\n<p>Alternatively, add the path to the modernizr templates\n(<tt>'path/to/modernizr/templates'</tt> to your <tt>TEMPLATE_DIRS</tt> setting.)</p>\n</li>\n</ol>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Django Modernizr has a few settings that can be set in <cite>settings.py</cite>\n(all are optional):</p>\n<ol>\n<li><cite>MODERNIZR_STORAGE</cite>: set to \u2018cookie\u2019 or \u2018session\u2019</li>\n<li>Cookie settings (parity to <tt>django.contrib.sessions</tt> cookie settings):<ul>\n<li><cite>MODERNIZR_COOKIE_NAME</cite>: Name of the cookie. Default is \u2018modernizr\u2019.</li>\n<li><cite>MODERNIZR_COOKIE_AGE</cite>: Expire time of the cookie. Default is 2 weeks.</li>\n<li><cite>MODERNIZR_COOKIE_DOMAIN</cite>: Domain name the cookie is issued on.\nDefault is None.</li>\n<li><cite>MODERNIZR_COOKIE_SECURE</cite>: Whether or not to serve the cookie securely.\nDefault is False.</li>\n<li><cite>MODERNIZR_COOKIE_PATH</cite>: Path the cookie is issued on. Default is \u2018/\u2019.</li>\n</ul>\n</li>\n<li>Session settings:<ul>\n<li><cite>MODERNIZR_SESSION_KEY</cite>: Session key to use for storage. Default is\n\u2018modernizr\u2019.</li>\n</ul>\n</li>\n<li>Modernizr rendering options:<ul>\n<li><cite>MODERNIZR_JS_URL</cite>: URL to modernizr.js.\nDefault is <a href=\"http://cachedcommons.org/cache/modernizr/1.5.0/javascripts/modernizr-min.js\" rel=\"nofollow\">http://cachedcommons.org/cache/modernizr/1.5.0/javascripts/modernizr-min.js</a> .</li>\n<li><cite>MODERNIZR_SENTINEL_IMAGE_URL</cite>: URL of sentinel image which includes\nModernizr data. Default is \u2018/django-modernizr-endpoint.gif\u2019.</li>\n<li><cite>MODERNIZR_INCLUDE_TAG</cite>: A closing tag of this type will be located, and\nthe Modernizr template will be rendered and inserted just before it.\nDefault is \u2018body\u2019.</li>\n</ul>\n</li>\n</ol>\n</div>\n<div id=\"thanks\">\n<h2>Thanks</h2>\n<p>Django Modernizr is a port of Marshall Yount\u2019s <a href=\"https://github.com/marshally/rack-modernizr/\" rel=\"nofollow\">rack-modernizr</a>.</p>\n<p>Portions of code and documentation style were taken from Rob Hudson\u2019s\n<a href=\"https://github.com/robhudson/django-debug-toolbar\" rel=\"nofollow\">django-debug-toolbar</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 224615, "releases": {"0.1.0": []}, "urls": [], "timestamp": "Fri May  8 00:34:59 2020"}