{"info": {"author": "Open Knowledge Foundation", "author_email": "info@okfn.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Utilities"], "description": "# datapackage-py\n\n[![Travis](https://travis-ci.org/frictionlessdata/datapackage-py.svg?branch=master)](https://travis-ci.org/frictionlessdata/datapackage-py)\n[![Coveralls](https://coveralls.io/repos/github/frictionlessdata/datapackage-py/badge.svg?branch=master)](https://coveralls.io/github/frictionlessdata/datapackage-py?branch=master)\n[![PyPi](https://img.shields.io/pypi/v/datapackage.svg)](https://pypi.python.org/pypi/datapackage)\n[![Github](https://img.shields.io/badge/github-master-brightgreen)](https://github.com/frictionlessdata/datapackage-py)\n[![Gitter](https://img.shields.io/gitter/room/frictionlessdata/chat.svg)](https://gitter.im/frictionlessdata/chat)\n\nA library for working with [Data Packages](http://specs.frictionlessdata.io/data-package/).\n\n## Features\n\n - `Package` class for working with data packages\n - `Resource` class for working with data resources\n - `Profile` class for working with profiles\n - `validate` function for validating data package descriptors\n - `infer` function for inferring data package descriptors\n\n## Contents\n\n<!--TOC-->\n\n  - [Getting Started](#getting-started)\n    - [Installation](#installation)\n  - [Documentation](#documentation)\n    - [Introduction](#introduction)\n    - [Working with Package](#working-with-package)\n    - [Working with Resource](#working-with-resource)\n    - [Working with Group](#working-with-group)\n    - [Working with Profile](#working-with-profile)\n    - [Working with Foreign Keys](#working-with-foreign-keys)\n    - [Working with validate/infer](#working-with-validateinfer)\n    - [Frequently Asked Questions](#frequently-asked-questions)\n  - [API Reference](#api-reference)\n    - [`cli`](#cli)\n    - [`Package`](#package)\n    - [`Resource`](#resource)\n    - [`Group`](#group)\n    - [`Profile`](#profile)\n    - [`validate`](#validate)\n    - [`infer`](#infer)\n    - [`DataPackageException`](#datapackageexception)\n    - [`TableSchemaException`](#tableschemaexception)\n    - [`LoadError`](#loaderror)\n    - [`CastError`](#casterror)\n    - [`IntegrityError`](#integrityerror)\n    - [`RelationError`](#relationerror)\n    - [`StorageError`](#storageerror)\n  - [Contributing](#contributing)\n  - [Changelog](#changelog)\n\n<!--TOC-->\n\n## Getting Started\n\n### Installation\n\nThe package use semantic versioning. It means that major versions  could include breaking changes. It's highly recommended to specify `datapackage` version range in your `setup/requirements` file e.g. `datapackage>=1.0,<2.0`.\n\n```bash\n$ pip install datapackage\n```\n\n#### OSX 10.14+\nIf you receive an error about the `cchardet` package when installing datapackage on Mac OSX 10.14 (Mojave) or higher, follow these steps:\n1. Make sure you have the latest x-code by running the following in terminal: `xcode-select --install`\n2. Then go to [https://developer.apple.com/download/more/](https://developer.apple.com/download/more/) and download the `command line tools`. Note, this requires an Apple ID.\n3. Then, in terminal, run `open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg`\nYou can read more about these steps in this [post.](https://stackoverflow.com/questions/52509602/cant-compile-c-program-on-a-mac-after-upgrade-to-mojave)\n\n## Documentation\n\n### Introduction\n\nLet's start with a simple example:\n\n```python\nfrom datapackage import Package\n\npackage = Package('datapackage.json')\npackage.get_resource('resource').read()\n```\n\n### Working with Package\n\nA class for working with data packages. It provides various capabilities like loading local or remote data package, inferring a data package descriptor, saving a data package descriptor and many more.\n\nConsider we have some local csv files in a `data` directory. Let's create a data package based on this data using a `Package` class:\n\n> data/cities.csv\n\n```csv\ncity,location\nlondon,\"51.50,-0.11\"\nparis,\"48.85,2.30\"\nrome,\"41.89,12.51\"\n```\n\n> data/population.csv\n\n```csv\ncity,year,population\nlondon,2017,8780000\nparis,2017,2240000\nrome,2017,2860000\n```\n\nFirst we create a blank data package:\n\n```python\npackage = Package()\n```\n\nNow we're ready to infer a data package descriptor based on data files we have. Because we have two csv files we use glob pattern `**/*.csv`:\n\n```python\npackage.infer('**/*.csv')\npackage.descriptor\n#{ profile: 'tabular-data-package',\n#  resources:\n#   [ { path: 'data/cities.csv',\n#       profile: 'tabular-data-resource',\n#       encoding: 'utf-8',\n#       name: 'cities',\n#       format: 'csv',\n#       mediatype: 'text/csv',\n#       schema: [Object] },\n#     { path: 'data/population.csv',\n#       profile: 'tabular-data-resource',\n#       encoding: 'utf-8',\n#       name: 'population',\n#       format: 'csv',\n#       mediatype: 'text/csv',\n#       schema: [Object] } ] }\n```\n\nAn `infer` method has found all our files and inspected it to extract useful metadata like profile, encoding, format, Table Schema etc. Let's tweak it a little bit:\n\n```python\npackage.descriptor['resources'][1]['schema']['fields'][1]['type'] = 'year'\npackage.commit()\npackage.valid # true\n```\n\nBecause our resources are tabular we could read it as a tabular data:\n\n```python\npackage.get_resource('population').read(keyed=True)\n#[ { city: 'london', year: 2017, population: 8780000 },\n#  { city: 'paris', year: 2017, population: 2240000 },\n#  { city: 'rome', year: 2017, population: 2860000 } ]\n```\n\nLet's save our descriptor on the disk as a zip-file:\n\n```python\npackage.save('datapackage.zip')\n```\n\nTo continue the work with the data package we just load it again but this time using local `datapackage.zip`:\n\n```python\npackage = Package('datapackage.zip')\n# Continue the work\n```\n\nIt was onle basic introduction to the `Package` class. To learn more let's take a look on `Package` class API reference.\n\n### Working with Resource\n\nA class for working with data resources. You can read or iterate tabular resources using the `iter/read` methods and all resource as bytes using `row_iter/row_read` methods.\n\nConsider we have some local csv file. It could be inline data or remote link - all supported by `Resource` class (except local files for in-brower usage of course). But say it's `data.csv` for now:\n\n```csv\ncity,location\nlondon,\"51.50,-0.11\"\nparis,\"48.85,2.30\"\nrome,N/A\n```\n\nLet's create and read a resource. Because resource is tabular we could use `resource.read` method with a `keyed` option to get an array of keyed rows:\n\n```python\nresource = Resource({path: 'data.csv'})\nresource.tabular # true\nresource.read(keyed=True)\n# [\n#   {city: 'london', location: '51.50,-0.11'},\n#   {city: 'paris', location: '48.85,2.30'},\n#   {city: 'rome', location: 'N/A'},\n# ]\nresource.headers\n# ['city', 'location']\n# (reading has to be started first)\n```\n\nAs we could see our locations are just a strings. But it should be geopoints. Also Rome's location is not available but it's also just a `N/A` string instead of Python `None`. First we have to infer resource metadata:\n\n```python\nresource.infer()\nresource.descriptor\n#{ path: 'data.csv',\n#  profile: 'tabular-data-resource',\n#  encoding: 'utf-8',\n#  name: 'data',\n#  format: 'csv',\n#  mediatype: 'text/csv',\n# schema: { fields: [ [Object], [Object] ], missingValues: [ '' ] } }\nresource.read(keyed=True)\n# Fails with a data validation error\n```\n\nLet's fix not available location. There is a `missingValues` property in Table Schema specification. As a first try we set `missingValues` to `N/A` in `resource.descriptor.schema`. Resource descriptor could be changed in-place but all changes should be commited by `resource.commit()`:\n\n```python\nresource.descriptor['schema']['missingValues'] = 'N/A'\nresource.commit()\nresource.valid # False\nresource.errors\n# [<ValidationError: \"'N/A' is not of type 'array'\">]\n```\n\nAs a good citiziens we've decided to check out recource descriptor validity. And it's not valid! We should use an array for `missingValues` property. Also don't forget to have an empty string as a missing value:\n\n```python\nresource.descriptor['schema']['missingValues'] = ['', 'N/A']\nresource.commit()\nresource.valid # true\n```\n\nAll good. It looks like we're ready to read our data again:\n\n```python\nresource.read(keyed=True)\n# [\n#   {city: 'london', location: [51.50,-0.11]},\n#   {city: 'paris', location: [48.85,2.30]},\n#   {city: 'rome', location: null},\n# ]\n```\n\nNow we see that:\n- locations are arrays with numeric lattide and longitude\n- Rome's location is a native JavaScript `null`\n\nAnd because there are no errors on data reading we could be sure that our data is valid againt our schema. Let's save our resource descriptor:\n\n```python\nresource.save('dataresource.json')\n```\n\nLet's check newly-crated `dataresource.json`. It contains path to our data file, inferred metadata and our `missingValues` tweak:\n\n```json\n{\n    \"path\": \"data.csv\",\n    \"profile\": \"tabular-data-resource\",\n    \"encoding\": \"utf-8\",\n    \"name\": \"data\",\n    \"format\": \"csv\",\n    \"mediatype\": \"text/csv\",\n    \"schema\": {\n        \"fields\": [\n            {\n                \"name\": \"city\",\n                \"type\": \"string\",\n                \"format\": \"default\"\n            },\n            {\n                \"name\": \"location\",\n                \"type\": \"geopoint\",\n                \"format\": \"default\"\n            }\n        ],\n        \"missingValues\": [\n            \"\",\n            \"N/A\"\n        ]\n    }\n}\n```\n\nIf we decide to improve it even more we could update the `dataresource.json` file and then open it again using local file name:\n\n```python\nresource = Resource('dataresource.json')\n# Continue the work\n```\n\nIt was onle basic introduction to the `Resource` class. To learn more let's take a look on `Resource` class API reference.\n\n### Working with Group\n\nA class representing a group of tabular resources. Groups can be used to read multiple resource as one or to export them, for example, to a database as one table. To define a group add the `group: <name>` field to corresponding resources. The group's metadata will be created from the \"leading\" resource's metadata (the first resource with the group name).\n\nConsider we have a data package with two tables partitioned by a year and a shared schema stored separately:\n\n>  cars-2017.csv\n\n```csv\nname,value\nbmw,2017\ntesla,2017\nnissan,2017\n```\n\n>  cars-2018.csv\n\n```csv\nname,value\nbmw,2018\ntesla,2018\nnissan,2018\n```\n\n> cars.schema.json\n\n```json\n{\n    \"fields\": [\n        {\n            \"name\": \"name\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"value\",\n            \"type\": \"integer\"\n        }\n    ]\n}\n```\n\n> datapackage.json\n\n```json\n{\n    \"name\": \"datapackage\",\n    \"resources\": [\n        {\n            \"group\": \"cars\",\n            \"name\": \"cars-2017\",\n            \"path\": \"cars-2017.csv\",\n            \"profile\": \"tabular-data-resource\",\n            \"schema\": \"cars.schema.json\"\n        },\n        {\n            \"group\": \"cars\",\n            \"name\": \"cars-2018\",\n            \"path\": \"cars-2018.csv\",\n            \"profile\": \"tabular-data-resource\",\n            \"schema\": \"cars.schema.json\"\n        }\n    ]\n}\n```\n\nLet's read the resources separately:\n\n```python\npackage = Package('datapackage.json')\npackage.get_resource('cars-2017').read(keyed=True) == [\n    {'name': 'bmw', 'value': 2017},\n    {'name': 'tesla', 'value': 2017},\n    {'name': 'nissan', 'value': 2017},\n]\npackage.get_resource('cars-2018').read(keyed=True) == [\n    {'name': 'bmw', 'value': 2018},\n    {'name': 'tesla', 'value': 2018},\n    {'name': 'nissan', 'value': 2018},\n]\n```\n\nOn the other hand, these resources defined with a `group: cars` field. It means we can treat them as a group:\n\n```python\npackage = Package('datapackage.json')\npackage.get_group('cars').read(keyed=True) == [\n    {'name': 'bmw', 'value': 2017},\n    {'name': 'tesla', 'value': 2017},\n    {'name': 'nissan', 'value': 2017},\n    {'name': 'bmw', 'value': 2018},\n    {'name': 'tesla', 'value': 2018},\n    {'name': 'nissan', 'value': 2018},\n]\n```\n\nWe can use this approach when we need to save the data package to a storage, for example, to a SQL database. There is the `merge_groups` flag to enable groupping behaviour:\n\n```python\npackage = Package('datapackage.json')\npackage.save(storage='sql', engine=engine)\n# SQL tables:\n# - cars-2017\n# - cars-2018\npackage.save(storage='sql', engine=engine, merge_groups=True)\n# SQL tables:\n# - cars\n```\n\n### Working with Profile\n\nA component to represent JSON Schema profile from [Profiles Registry]( https://specs.frictionlessdata.io/schemas/registry.json):\n\n```python\nprofile = Profile('data-package')\n\nprofile.name # data-package\nprofile.jsonschema # JSON Schema contents\n\ntry:\n   valid = profile.validate(descriptor)\nexcept exceptions.ValidationError as exception:\n   for error in exception.errors:\n       # handle individual error\n```\n\n### Working with Foreign Keys\n\nThe library supports foreign keys described in the [Table Schema](http://specs.frictionlessdata.io/table-schema/#foreign-keys) specification. It means if your data package descriptor use `resources[].schema.foreignKeys` property for some resources a data integrity will be checked on reading operations.\n\nConsider we have a data package:\n\n```python\nDESCRIPTOR = {\n  'resources': [\n    {\n      'name': 'teams',\n      'data': [\n        ['id', 'name', 'city'],\n        ['1', 'Arsenal', 'London'],\n        ['2', 'Real', 'Madrid'],\n        ['3', 'Bayern', 'Munich'],\n      ],\n      'schema': {\n        'fields': [\n          {'name': 'id', 'type': 'integer'},\n          {'name': 'name', 'type': 'string'},\n          {'name': 'city', 'type': 'string'},\n        ],\n        'foreignKeys': [\n          {\n            'fields': 'city',\n            'reference': {'resource': 'cities', 'fields': 'name'},\n          },\n        ],\n      },\n    }, {\n      'name': 'cities',\n      'data': [\n        ['name', 'country'],\n        ['London', 'England'],\n        ['Madrid', 'Spain'],\n      ],\n    },\n  ],\n}\n```\n\nLet's check relations for a `teams` resource:\n\n```python\nfrom datapackage import Package\n\npackage = Package(DESCRIPTOR)\nteams = package.get_resource('teams')\nteams.check_relations()\n# tableschema.exceptions.RelationError: Foreign key \"['city']\" violation in row \"4\"\n```\n\nAs we could see there is a foreign key violation. That's because our lookup table `cities` doesn't have a city of `Munich` but we have a team from there. We need to fix it in `cities` resource:\n\n```python\npackage.descriptor['resources'][1]['data'].append(['Munich', 'Germany'])\npackage.commit()\nteams = package.get_resource('teams')\nteams.check_relations()\n# True\n```\n\nFixed! But not only a check operation is available. We could use `relations` argument for `resource.iter/read` methods to dereference a resource relations:\n\n```python\nteams.read(keyed=True, relations=True)\n#[{'id': 1, 'name': 'Arsenal', 'city': {'name': 'London', 'country': 'England}},\n# {'id': 2, 'name': 'Real', 'city': {'name': 'Madrid', 'country': 'Spain}},\n# {'id': 3, 'name': 'Bayern', 'city': {'name': 'Munich', 'country': 'Germany}}]\n```\n\nInstead of plain city name we've got a dictionary containing a city data. These `resource.iter/read` methods will fail with the same as `resource.check_relations` error if there is an integrity issue. But only if `relations=True` flag is passed.\n\n### Working with validate/infer\n\nA standalone function to validate a data package descriptor:\n\n```python\nfrom datapackage import validate, exceptions\n\ntry:\n    valid = validate(descriptor)\nexcept exceptions.ValidationError as exception:\n   for error in exception.errors:\n       # handle individual error\n```\n\nA standalone function to infer a data package descriptor.\n\n```python\ndescriptor = infer('**/*.csv')\n#{ profile: 'tabular-data-resource',\n#  resources:\n#   [ { path: 'data/cities.csv',\n#       profile: 'tabular-data-resource',\n#       encoding: 'utf-8',\n#       name: 'cities',\n#       format: 'csv',\n#       mediatype: 'text/csv',\n#       schema: [Object] },\n#     { path: 'data/population.csv',\n#       profile: 'tabular-data-resource',\n#       encoding: 'utf-8',\n#       name: 'population',\n#       format: 'csv',\n#       mediatype: 'text/csv',\n#       schema: [Object] } ] }\n```\n\n### Frequently Asked Questions\n\n#### Accessing data behind a proxy server?\n\nBefore the `package = Package(\"https://xxx.json\")` call set these environment variables:\n\n```python\nimport os\n\nos.environ[\"HTTP_PROXY\"] = 'xxx'\nos.environ[\"HTTPS_PROXY\"] = 'xxx'\n```\n\n## API Reference\n\n### `cli`\n```python\ncli()\n```\nCommand-line interface\n\n```\nUsage: datapackage [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --version  Show the version and exit.\n  --help     Show this message and exit.\n\nCommands:\n  infer\n  validate\n```\n\n\n### `Package`\n```python\nPackage(self,\n        descriptor=None,\n        base_path=None,\n        strict=False,\n        unsafe=False,\n        storage=None,\n        schema=None,\n        default_base_path=None,\n        **options)\n```\nPackage representation\n\n__Arguments__\n- __descriptor (str/dict)__: data package descriptor as local path, url or object\n- __base_path (str)__: base path for all relative paths\n- __strict (bool)__: strict flag to alter validation behavior.\n        Setting it to `True` leads to throwing errors\n        on any operation with invalid descriptor\n- __unsafe (bool)__:\n        if `True` unsafe paths will be allowed. For more inforamtion\n        https://specs.frictionlessdata.io/data-resource/#data-location.\n        Default to `False`\n- __storage (str/tableschema.Storage)__: storage name like `sql` or storage instance\n- __options (dict)__: storage options to use for storage creation\n\n__Raises__\n- `DataPackageException`: raises error if something goes wrong\n\n\n\n#### `package.base_path`\nPackage's base path\n\n__Returns__\n\n`str/None`: returns the data package base path\n\n\n\n#### `package.descriptor`\nPackage's descriptor\n\n__Returns__\n\n`dict`: descriptor\n\n\n\n#### `package.errors`\nValidation errors\n\nAlways empty in strict mode.\n\n__Returns__\n\n`Exception[]`: validation errors\n\n\n\n#### `package.profile`\nPackage's profile\n\n__Returns__\n\n`Profile`: an instance of `Profile` class\n\n\n\n#### `package.resource_names`\nPackage's resource names\n\n__Returns__\n\n`str[]`: returns an array of resource names\n\n\n\n#### `package.resources`\nPackage's resources\n\n__Returns__\n\n`Resource[]`: returns an array of `Resource` instances\n\n\n\n#### `package.valid`\nValidation status\n\nAlways true in strict mode.\n\n__Returns__\n\n`bool`: validation status\n\n\n\n#### `package.get_resource`\n```python\npackage.get_resource(name)\n```\nGet data package resource by name.\n\n__Arguments__\n- __name (str)__: data resource name\n\n__Returns__\n\n`Resource/None`: returns `Resource` instances or null if not found\n\n\n\n#### `package.add_resource`\n```python\npackage.add_resource(descriptor)\n```\nAdd new resource to data package.\n\nThe data package descriptor will be validated with newly added resource descriptor.\n\n__Arguments__\n- __descriptor (dict)__: data resource descriptor\n\n__Raises__\n- `DataPackageException`: raises error if something goes wrong\n\n__Returns__\n\n`Resource/None`: returns added `Resource` instance or null if not added\n\n\n\n#### `package.remove_resource`\n```python\npackage.remove_resource(name)\n```\nRemove data package resource by name.\n\nThe data package descriptor will be validated after resource descriptor removal.\n\n__Arguments__\n- __name (str)__: data resource name\n\n__Raises__\n- `DataPackageException`: raises error if something goes wrong\n\n__Returns__\n\n`Resource/None`: returns removed `Resource` instances or null if not found\n\n\n\n#### `package.get_group`\n```python\npackage.get_group(name)\n```\nReturns a group of tabular resources by name.\n\nFor more information about groups see [Group](#group).\n\n__Arguments__\n- __name (str)__: name of a group of resources\n\n__Raises__\n- `DataPackageException`: raises error if something goes wrong\n\n__Returns__\n\n`Group/None`: returns a `Group` instance or null if not found\n\n\n\n#### `package.infer`\n```python\npackage.infer(pattern=False)\n```\nInfer a data package metadata.\n\n> Argument `pattern` works only for local files\n\nIf `pattern` is not provided only existent resources will be inferred\n(added metadata like encoding, profile etc). If `pattern` is provided\nnew resoures with file names mathing the pattern will be added and inferred.\nIt commits changes to data package instance.\n\n__Arguments__\n- __pattern (str)__: glob pattern for new resources\n\n__Returns__\n\n`dict`: returns data package descriptor\n\n\n\n#### `package.commit`\n```python\npackage.commit(strict=None)\n```\nUpdate data package instance if there are in-place changes in the descriptor.\n\n__Example__\n\n\n```python\npackage = Package({\n    'name': 'package',\n    'resources': [{'name': 'resource', 'data': ['data']}]\n})\n\npackage.name # package\npackage.descriptor['name'] = 'renamed-package'\npackage.name # package\npackage.commit()\npackage.name # renamed-package\n```\n\n__Arguments__\n- __strict (bool)__: alter `strict` mode for further work\n\n__Raises__\n- `DataPackageException`: raises error if something goes wrong\n\n__Returns__\n\n`bool`: returns true on success and false if not modified\n\n\n\n#### `package.save`\n```python\npackage.save(target=None,\n             storage=None,\n             merge_groups=False,\n             to_base_path=False,\n             **options)\n```\nSaves this data package\n\nIt saves it to storage if `storage` argument is passed or\nsaves this data package's descriptor to json file if `target` arguments\nends with `.json` or saves this data package to zip file otherwise.\n\n__Example__\n\n\nIt creates a zip file into ``file_or_path`` with the contents\nof this Data Package and its resources. Every resource which content\nlives in the local filesystem will be copied to the zip file.\nConsider the following Data Package descriptor:\n\n```json\n{\n    \"name\": \"gdp\",\n    \"resources\": [\n        {\"name\": \"local\", \"format\": \"CSV\", \"path\": \"data.csv\"},\n        {\"name\": \"inline\", \"data\": [4, 8, 15, 16, 23, 42]},\n        {\"name\": \"remote\", \"url\": \"http://someplace.com/data.csv\"}\n    ]\n}\n```\n\nThe final structure of the zip file will be:\n\n```\n./datapackage.json\n./data/local.csv\n```\n\nWith the contents of `datapackage.json` being the same as\nreturned `datapackage.descriptor`. The resources' file names are generated\nbased on their `name` and `format` fields if they exist.\nIf the resource has no `name`, it'll be used `resource-X`,\nwhere `X` is the index of the resource in the `resources` list (starting at zero).\nIf the resource has `format`, it'll be lowercased and appended to the `name`,\nbecoming \"`name.format`\".\n\n__Arguments__\n- __target (string/filelike)__:\n        the file path or a file-like object where\n        the contents of this Data Package will be saved into.\n- __storage (str/tableschema.Storage)__:\n        storage name like `sql` or storage instance\n- __merge_groups (bool)__:\n        save all the group's tabular resoruces into one bucket\n        if a storage is provided (for example into one SQL table).\n        Read more about [Group](#group).\n- __to_base_path (bool)__:\n        save the package to the package's base path\n        using the \"<base_path>/<target>\" route\n- __options (dict)__:\n        storage options to use for storage creation\n\n__Raises__\n- `DataPackageException`: raises if there was some error writing the package\n\n__Returns__\n\n`bool/Storage`: on success return true or a `Storage` instance\n\n### `Resource`\n```python\nResource(self,\n         descriptor={},\n         base_path=None,\n         strict=False,\n         unsafe=False,\n         storage=None,\n         package=None,\n         **options)\n```\nResource represenation\n\n__Arguments__\n- __descriptor (str/dict)__: data resource descriptor as local path, url or object\n- __base_path (str)__: base path for all relative paths\n- __strict (bool)__:\n        strict flag to alter validation behavior.  Setting it to `true`\n        leads to throwing errors on any operation with invalid descriptor\n- __unsafe (bool)__:\n        if `True` unsafe paths will be allowed. For more inforamtion\n        https://specs.frictionlessdata.io/data-resource/#data-location.\n        Default to `False`\n- __storage (str/tableschema.Storage)__: storage name like `sql` or storage instance\n- __options (dict)__: storage options to use for storage creation\n\n__Raises__\n- `DataPackageException`: raises error if something goes wrong\n\n\n\n#### `resource.data`\nReturn resource data\n\n\n#### `resource.descriptor`\nPackage's descriptor\n\n__Returns__\n\n`dict`: descriptor\n\n\n\n#### `resource.errors`\nValidation errors\n\nAlways empty in strict mode.\n\n__Returns__\n\n`Exception[]`: validation errors\n\n\n\n#### `resource.group`\nGroup name\n\n__Returns__\n\n`str`: group name\n\n\n\n#### `resource.headers`\nResource's headers\n\n> Only for tabular resources (reading has to be started first or it's `None`)\n\n__Returns__\n\n`str[]/None`: returns data source headers\n\n\n\n#### `resource.inline`\nWhether resource inline\n\n__Returns__\n\n`bool`: returns true if resource is inline\n\n\n\n#### `resource.local`\nWhether resource local\n\n__Returns__\n\n`bool`: returns true if resource is local\n\n\n\n#### `resource.multipart`\nWhether resource multipart\n\n__Returns__\n\n`bool`: returns true if resource is multipart\n\n\n\n#### `resource.name`\nResource name\n\n__Returns__\n\n`str`: name\n\n\n\n#### `resource.package`\nPackage instance if the resource belongs to some package\n\n__Returns__\n\n`Package/None`: a package instance if available\n\n\n\n#### `resource.profile`\nResource's profile\n\n__Returns__\n\n`Profile`: an instance of `Profile` class\n\n\n\n#### `resource.remote`\nWhether resource remote\n\n__Returns__\n\n`bool`: returns true if resource is remote\n\n\n\n#### `resource.schema`\nResource's schema\n\n> Only for tabular resources\n\nFor tabular resources it returns `Schema` instance to interact with data schema.\nRead API documentation - [tableschema.Schema](https://github.com/frictionlessdata/tableschema-py#schema).\n\n__Returns__\n\n`tableschema.Schema`: schema\n\n\n\n#### `resource.source`\nResource's source\n\nCombination of `resource.source` and `resource.inline/local/remote/multipart`\nprovides predictable interface to work with resource data.\n\n__Returns__\n\n`list/str`: returns `data` or `path` property\n\n\n\n#### `resource.table`\nReturn resource table\n\n\n#### `resource.tabular`\nWhether resource tabular\n\n__Returns__\n\n`bool`: returns true if resource is tabular\n\n\n\n#### `resource.valid`\nValidation status\n\nAlways true in strict mode.\n\n__Returns__\n\n`bool`: validation status\n\n\n\n#### `resource.iter`\n```python\nresource.iter(integrity=False, relations=False, **options)\n```\nIterates through the resource data and emits rows cast based on table schema.\n\n> Only for tabular resources\n\n__Arguments__\n\n\n    keyed (bool):\n        yield keyed rows in a form of `{header1: value1, header2: value2}`\n        (default is false; the form of rows is `[value1, value2]`)\n\n    extended (bool):\n        yield extended rows in a for of `[rowNumber, [header1, header2], [value1, value2]]`\n        (default is false; the form of rows is `[value1, value2]`)\n\n    cast (bool):\n        disable data casting if false\n        (default is true)\n\n    integrity (bool):\n        if true actual size in BYTES and SHA256 hash of the file\n        will be checked against `descriptor.bytes` and `descriptor.hash`\n        (other hashing algorithms are not supported and will be skipped silently)\n\n    relations (bool):\n        if true foreign key fields will be checked and resolved to its references\n\n    foreign_keys_values (dict):\n        three-level dictionary of foreign key references optimized\n        to speed up validation process in a form of\n        `{resource1: {(fk_field1, fk_field2): {(value1, value2): {one_keyedrow}, ... }}}`.\n        If not provided but relations is true, it will be created\n        before the validation process by *index_foreign_keys_values* method\n\n    exc_handler (func):\n        optional custom exception handler callable.\n        Can be used to defer raising errors (i.e. \"fail late\"), e.g.\n        for data validation purposes. Must support the signature below\n\n__Custom exception handler__\n\n\n```python\ndef exc_handler(exc, row_number=None, row_data=None, error_data=None):\n    '''Custom exception handler (example)\n\n    # Arguments:\n        exc(Exception):\n            Deferred exception instance\n        row_number(int):\n            Data row number that triggers exception exc\n        row_data(OrderedDict):\n            Invalid data row source data\n        error_data(OrderedDict):\n            Data row source data field subset responsible for the error, if\n            applicable (e.g. invalid primary or foreign key fields). May be\n            identical to row_data.\n    '''\n    # ...\n```\n\n__Raises__\n- `DataPackageException`: base class of any error\n- `CastError`: data cast error\n- `IntegrityError`: integrity checking error\n- `UniqueKeyError`: unique key constraint violation\n- `UnresolvedFKError`: unresolved foreign key reference error\n\n__Returns__\n\n`Iterator[list]`: yields rows\n\n\n\n#### `resource.read`\n```python\nresource.read(integrity=False,\n              relations=False,\n              foreign_keys_values=False,\n              **options)\n```\nRead the whole resource and return as array of rows\n\n> Only for tabular resources\n> It has the same API as `resource.iter` except for\n\n__Arguments__\n- __limit (int)__: limit count of rows to read and return\n\n__Returns__\n\n`list[]`: returns rows\n\n\n\n#### `resource.check_integrity`\n```python\nresource.check_integrity()\n```\nChecks resource integrity\n\n> Only for tabular resources\n\nIt checks size in BYTES and SHA256 hash of the file\nagainst `descriptor.bytes` and `descriptor.hash`\n(other hashing algorithms are not supported and will be skipped silently).\n\n__Raises__\n- `exceptions.IntegrityError`: raises if there are integrity issues\n\n__Returns__\n\n`bool`: returns True if no issues\n\n\n\n#### `resource.check_relations`\n```python\nresource.check_relations(foreign_keys_values=False)\n```\nCheck relations\n\n> Only for tabular resources\n\nIt checks foreign keys and raises an exception if there are integrity issues.\n\n__Raises__\n- `exceptions.RelationError`: raises if there are relation issues\n\n__Returns__\n\n`bool`: returns True if no issues\n\n\n\n#### `resource.drop_relations`\n```python\nresource.drop_relations()\n```\nDrop relations\n\n> Only for tabular resources\n\nRemove relations data from memory\n\n__Returns__\n\n`bool`: returns True\n\n\n\n#### `resource.raw_iter`\n```python\nresource.raw_iter(stream=False)\n```\nIterate over data chunks as bytes.\n\nIf `stream` is true File-like object will be returned.\n\n__Arguments__\n- __stream (bool)__: File-like object will be returned\n\n__Returns__\n\n`bytes[]/filelike`: returns bytes[]/filelike\n\n\n\n#### `resource.raw_read`\n```python\nresource.raw_read()\n```\nReturns resource data as bytes.\n\n__Returns__\n\n`bytes`: returns resource data in bytes\n\n\n\n#### `resource.infer`\n```python\nresource.infer(**options)\n```\nInfer resource metadata\n\nLike name, format, mediatype, encoding, schema and profile.\nIt commits this changes into resource instance.\n\n__Arguments__\n- __options__:\n        options will be passed to `tableschema.infer` call,\n        for more control on results (e.g. for setting `limit`, `confidence` etc.).\n\n__Returns__\n\n`dict`: returns resource descriptor\n\n\n\n#### `resource.commit`\n```python\nresource.commit(strict=None)\n```\nUpdate resource instance if there are in-place changes in the descriptor.\n\n__Arguments__\n- __strict (bool)__: alter `strict` mode for further work\n\n__Raises__\n- `DataPackageException`: raises error if something goes wrong\n\n__Returns__\n\n`bool`: returns true on success and false if not modified\n\n\n\n#### `resource.save`\n```python\nresource.save(target, storage=None, to_base_path=False, **options)\n```\nSaves this resource\n\nInto storage if `storage` argument is passed or\nsaves this resource's descriptor to json file otherwise.\n\n__Arguments__\n- __target (str)__:\n        path where to save a resource\n- __storage (str/tableschema.Storage)__:\n        storage name like `sql` or storage instance\n- __to_base_path (bool)__:\n        save the resource to the resource's base path\n        using the \"<base_path>/<target>\" route\n- __options (dict)__:\n        storage options to use for storage creation\n\n__Raises__\n- `DataPackageException`: raises error if something goes wrong\n\n__Returns__\n\n`bool`: returns true on success\nBuilding index...\nStarted generating documentation...\n\n### `Group`\n```python\nGroup(self, resources)\n```\nGroup representation\n\n__Arguments__\n- __Resource[]__: list of TABULAR resources\n\n\n\n#### `group.headers`\nGroup's headers\n\n__Returns__\n\n`str[]/None`: returns headers\n\n\n\n#### `group.name`\nGroup name\n\n__Returns__\n\n`str`: name\n\n\n\n#### `group.schema`\nResource's schema\n\n__Returns__\n\n`tableschema.Schema`: schema\n\n\n\n#### `group.iter`\n```python\ngroup.iter(**options)\n```\nIterates through the group data and emits rows cast based on table schema.\n\n> It concatenates all the resources and has the same API as `resource.iter`\n\n\n\n#### `group.read`\n```python\ngroup.read(limit=None, **options)\n```\nRead the whole group and return as array of rows\n\n> It concatenates all the resources and has the same API as `resource.read`\n\n\n\n#### `group.check_relations`\n```python\ngroup.check_relations()\n```\nCheck group's relations\n\nThe same as `resource.check_relations` but without the optional\nargument *foreign_keys_values*.  This method will test foreignKeys of the\nwhole group at once otpimizing the process by creating the foreign_key_values\nhashmap only once before testing the set of resources.\n\n\n### `Profile`\n```python\nProfile(self, profile)\n```\nProfile representation\n\n__Arguments__\n- __profile (str)__: profile name in registry or URL to JSON Schema\n\n__Raises__\n- `DataPackageException`: raises error if something goes wrong\n\n\n\n#### `profile.jsonschema`\nJSONSchema content\n\n__Returns__\n\n`dict`: returns profile's JSON Schema contents\n\n\n\n#### `profile.name`\nProfile name\n\n__Returns__\n\n`str/None`: name if available\n\n\n\n#### `profile.validate`\n```python\nprofile.validate(descriptor)\n```\nValidate a data package `descriptor` against the profile.\n\n__Arguments__\n- __descriptor (dict)__: retrieved and dereferenced data package descriptor\n\n__Raises__\n- `ValidationError`: raises if not valid\n__Returns__\n\n`bool`: returns True if valid\n\n\n### `validate`\n```python\nvalidate(descriptor)\n```\nValidate a data package descriptor.\n\n__Arguments__\n- __descriptor (str/dict)__: package descriptor (one of):\n      - local path\n      - remote url\n      - object\n\n__Raises__\n- `ValidationError`: raises on invalid\n\n__Returns__\n\n`bool`: returns true on valid\n\n\n### `infer`\n```python\ninfer(pattern, base_path=None)\n```\nInfer a data package descriptor.\n\n> Argument `pattern` works only for local files\n\n__Arguments__\n- __pattern (str)__: glob file pattern\n\n__Returns__\n\n`dict`: returns data package descriptor\n\n\n### `DataPackageException`\n```python\nDataPackageException(self, message, errors=[])\n```\nBase class for all DataPackage/TableSchema exceptions.\n\nIf there are multiple errors, they can be read from the exception object:\n\n```python\ntry:\n    # lib action\nexcept DataPackageException as exception:\n    if exception.multiple:\n        for error in exception.errors:\n            # handle error\n```\n\n\n\n#### `datapackageexception.errors`\nList of nested errors\n\n__Returns__\n\n`DataPackageException[]`: list of nested errors\n\n\n\n#### `datapackageexception.multiple`\nWhether it's a nested exception\n\n__Returns__\n\n`bool`: whether it's a nested exception\n\n\n\n### `TableSchemaException`\n```python\nTableSchemaException(self, message, errors=[])\n```\nBase class for all TableSchema exceptions.\n\n\n### `LoadError`\n```python\nLoadError(self, message, errors=[])\n```\nAll loading errors.\n\n\n### `CastError`\n```python\nCastError(self, message, errors=[])\n```\nAll value cast errors.\n\n\n### `IntegrityError`\n```python\nIntegrityError(self, message, errors=[])\n```\nAll integrity errors.\n\n\n### `RelationError`\n```python\nRelationError(self, message, errors=[])\n```\nAll relations errors.\n\n\n### `StorageError`\n```python\nStorageError(self, message, errors=[])\n```\nAll storage errors.\n\n\n## Contributing\n\n> The project follows the [Open Knowledge International coding standards](https://github.com/okfn/coding-standards).\n\nRecommended way to get started is to create and activate a project virtual environment.\nTo install package and development dependencies into active environment:\n\n```bash\n$ make install\n```\n\nTo run tests with linting and coverage:\n\n```bash\n$ make test\n```\n\n## Changelog\n\nHere described only breaking and the most important changes. The full changelog and documentation for all released versions could be found in nicely formatted [commit history](https://github.com/frictionlessdata/datapackage-py/commits/master).\n\n#### v1.13\n\n- Add `unsafe` option to Package and Resource (#262)\n\n#### v1.12\n\n- Use `chardet` for encoding deteciton by default. For `cchardet`: `pip install datapackage[cchardet]`\n\n#### v1.11\n\n- `resource/package.save` now accept a `to_base_path` argument (#254)\n- `package.save` now returns a `Storage` instance if available\n\n#### v1.10\n\n- Added an ability to check tabular resource's integrity\n\n#### v1.9\n\n- Added `resource.package` property\n\n#### v1.8\n\n- Added support for [groups of resources](#group)\n\n#### v1.7\n\n- Added support for [compression of resources](https://frictionlessdata.io/specs/patterns/#compression-of-resources)\n\n#### v1.6\n\n- Added support for custom request session\n\n#### v1.5\n\nUpdated behaviour:\n- Added support for Python 3.7\n\n#### v1.4\n\nNew API added:\n- added `skip_rows` support to the resource descriptor\n\n#### v1.3\n\nNew API added:\n- property `package.base_path` is now publicly available\n\n#### v1.2\n\nUpdated behaviour:\n- CLI command `$ datapackage infer` now outputs only a JSON-formatted data package descriptor.\n\n#### v1.1\n\nNew API added:\n- Added an integration between `Package/Resource` and the `tableschema.Storage` - https://github.com/frictionlessdata/tableschema-py#storage. It allows to load and save data package from/to different storages like SQL/BigQuery/etc.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/frictionlessdata/datapackage-py", "keywords": "frictionless data,open data,json schema,table schema,data package,tabular data package", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "datapackage", "package_url": "https://pypi.org/project/datapackage/", "platform": "", "project_url": "https://pypi.org/project/datapackage/", "project_urls": {"Homepage": "https://github.com/frictionlessdata/datapackage-py"}, "release_url": "https://pypi.org/project/datapackage/1.13.0/", "requires_dist": ["six (>=1.10)", "click (>=6.7)", "chardet (>=3.0)", "requests (>=2.8)", "jsonschema (>=2.5)", "unicodecsv (>=0.14)", "jsonpointer (>=1.10)", "tableschema (>=1.12.1)", "tabulator (>=1.29)", "cchardet (>=2.0) ; extra == 'cchardet'", "mock ; extra == 'develop'", "pylama ; extra == 'develop'", "pytest ; extra == 'develop'", "pytest-cov ; extra == 'develop'", "httpretty ; extra == 'develop'", "tableschema-sql ; extra == 'develop'", "tox ; extra == 'develop'"], "requires_python": "", "summary": "Utilities to work with Data Packages as defined on specs.frictionlessdata.io", "version": "1.13.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>datapackage-py</h1>\n<p><a href=\"https://travis-ci.org/frictionlessdata/datapackage-py\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e790e3df583746fd281509a1d970842c57a42eba/68747470733a2f2f7472617669732d63692e6f72672f6672696374696f6e6c657373646174612f646174617061636b6167652d70792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/frictionlessdata/datapackage-py?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/021a2f8a20b72caa1430ca02c464129fee7e1c65/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6672696374696f6e6c657373646174612f646174617061636b6167652d70792f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/datapackage\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f64b3d824f6713371c088a929bc018f741ffeee4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646174617061636b6167652e737667\"></a>\n<a href=\"https://github.com/frictionlessdata/datapackage-py\" rel=\"nofollow\"><img alt=\"Github\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe3b85e910b303fc497328fd9e064a0813699a67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746875622d6d61737465722d627269676874677265656e\"></a>\n<a href=\"https://gitter.im/frictionlessdata/chat\" rel=\"nofollow\"><img alt=\"Gitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb17f2481df87e64c9f854d8900ea6aaf373ea77/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f6672696374696f6e6c657373646174612f636861742e737667\"></a></p>\n<p>A library for working with <a href=\"http://specs.frictionlessdata.io/data-package/\" rel=\"nofollow\">Data Packages</a>.</p>\n<h2>Features</h2>\n<ul>\n<li><code>Package</code> class for working with data packages</li>\n<li><code>Resource</code> class for working with data resources</li>\n<li><code>Profile</code> class for working with profiles</li>\n<li><code>validate</code> function for validating data package descriptors</li>\n<li><code>infer</code> function for inferring data package descriptors</li>\n</ul>\n<h2>Contents</h2>\n\n<ul>\n<li><a href=\"#getting-started\" rel=\"nofollow\">Getting Started</a>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n</ul>\n</li>\n<li><a href=\"#documentation\" rel=\"nofollow\">Documentation</a>\n<ul>\n<li><a href=\"#introduction\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#working-with-package\" rel=\"nofollow\">Working with Package</a></li>\n<li><a href=\"#working-with-resource\" rel=\"nofollow\">Working with Resource</a></li>\n<li><a href=\"#working-with-group\" rel=\"nofollow\">Working with Group</a></li>\n<li><a href=\"#working-with-profile\" rel=\"nofollow\">Working with Profile</a></li>\n<li><a href=\"#working-with-foreign-keys\" rel=\"nofollow\">Working with Foreign Keys</a></li>\n<li><a href=\"#working-with-validateinfer\" rel=\"nofollow\">Working with validate/infer</a></li>\n<li><a href=\"#frequently-asked-questions\" rel=\"nofollow\">Frequently Asked Questions</a></li>\n</ul>\n</li>\n<li><a href=\"#api-reference\" rel=\"nofollow\">API Reference</a>\n<ul>\n<li><a href=\"#cli\" rel=\"nofollow\"><code>cli</code></a></li>\n<li><a href=\"#package\" rel=\"nofollow\"><code>Package</code></a></li>\n<li><a href=\"#resource\" rel=\"nofollow\"><code>Resource</code></a></li>\n<li><a href=\"#group\" rel=\"nofollow\"><code>Group</code></a></li>\n<li><a href=\"#profile\" rel=\"nofollow\"><code>Profile</code></a></li>\n<li><a href=\"#validate\" rel=\"nofollow\"><code>validate</code></a></li>\n<li><a href=\"#infer\" rel=\"nofollow\"><code>infer</code></a></li>\n<li><a href=\"#datapackageexception\" rel=\"nofollow\"><code>DataPackageException</code></a></li>\n<li><a href=\"#tableschemaexception\" rel=\"nofollow\"><code>TableSchemaException</code></a></li>\n<li><a href=\"#loaderror\" rel=\"nofollow\"><code>LoadError</code></a></li>\n<li><a href=\"#casterror\" rel=\"nofollow\"><code>CastError</code></a></li>\n<li><a href=\"#integrityerror\" rel=\"nofollow\"><code>IntegrityError</code></a></li>\n<li><a href=\"#relationerror\" rel=\"nofollow\"><code>RelationError</code></a></li>\n<li><a href=\"#storageerror\" rel=\"nofollow\"><code>StorageError</code></a></li>\n</ul>\n</li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#changelog\" rel=\"nofollow\">Changelog</a></li>\n</ul>\n\n<h2>Getting Started</h2>\n<h3>Installation</h3>\n<p>The package use semantic versioning. It means that major versions  could include breaking changes. It's highly recommended to specify <code>datapackage</code> version range in your <code>setup/requirements</code> file e.g. <code>datapackage&gt;=1.0,&lt;2.0</code>.</p>\n<pre>$ pip install datapackage\n</pre>\n<h4>OSX 10.14+</h4>\n<p>If you receive an error about the <code>cchardet</code> package when installing datapackage on Mac OSX 10.14 (Mojave) or higher, follow these steps:</p>\n<ol>\n<li>Make sure you have the latest x-code by running the following in terminal: <code>xcode-select --install</code></li>\n<li>Then go to <a href=\"https://developer.apple.com/download/more/\" rel=\"nofollow\">https://developer.apple.com/download/more/</a> and download the <code>command line tools</code>. Note, this requires an Apple ID.</li>\n<li>Then, in terminal, run <code>open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg</code>\nYou can read more about these steps in this <a href=\"https://stackoverflow.com/questions/52509602/cant-compile-c-program-on-a-mac-after-upgrade-to-mojave\" rel=\"nofollow\">post.</a></li>\n</ol>\n<h2>Documentation</h2>\n<h3>Introduction</h3>\n<p>Let's start with a simple example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datapackage</span> <span class=\"kn\">import</span> <span class=\"n\">Package</span>\n\n<span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"p\">(</span><span class=\"s1\">'datapackage.json'</span><span class=\"p\">)</span>\n<span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">get_resource</span><span class=\"p\">(</span><span class=\"s1\">'resource'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n</pre>\n<h3>Working with Package</h3>\n<p>A class for working with data packages. It provides various capabilities like loading local or remote data package, inferring a data package descriptor, saving a data package descriptor and many more.</p>\n<p>Consider we have some local csv files in a <code>data</code> directory. Let's create a data package based on this data using a <code>Package</code> class:</p>\n<blockquote>\n<p>data/cities.csv</p>\n</blockquote>\n<pre>city,location\nlondon,\"51.50,-0.11\"\nparis,\"48.85,2.30\"\nrome,\"41.89,12.51\"\n</pre>\n<blockquote>\n<p>data/population.csv</p>\n</blockquote>\n<pre>city,year,population\nlondon,2017,8780000\nparis,2017,2240000\nrome,2017,2860000\n</pre>\n<p>First we create a blank data package:</p>\n<pre><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"p\">()</span>\n</pre>\n<p>Now we're ready to infer a data package descriptor based on data files we have. Because we have two csv files we use glob pattern <code>**/*.csv</code>:</p>\n<pre><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"s1\">'**/*.csv'</span><span class=\"p\">)</span>\n<span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">descriptor</span>\n<span class=\"c1\">#{ profile: 'tabular-data-package',</span>\n<span class=\"c1\">#  resources:</span>\n<span class=\"c1\">#   [ { path: 'data/cities.csv',</span>\n<span class=\"c1\">#       profile: 'tabular-data-resource',</span>\n<span class=\"c1\">#       encoding: 'utf-8',</span>\n<span class=\"c1\">#       name: 'cities',</span>\n<span class=\"c1\">#       format: 'csv',</span>\n<span class=\"c1\">#       mediatype: 'text/csv',</span>\n<span class=\"c1\">#       schema: [Object] },</span>\n<span class=\"c1\">#     { path: 'data/population.csv',</span>\n<span class=\"c1\">#       profile: 'tabular-data-resource',</span>\n<span class=\"c1\">#       encoding: 'utf-8',</span>\n<span class=\"c1\">#       name: 'population',</span>\n<span class=\"c1\">#       format: 'csv',</span>\n<span class=\"c1\">#       mediatype: 'text/csv',</span>\n<span class=\"c1\">#       schema: [Object] } ] }</span>\n</pre>\n<p>An <code>infer</code> method has found all our files and inspected it to extract useful metadata like profile, encoding, format, Table Schema etc. Let's tweak it a little bit:</p>\n<pre><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">descriptor</span><span class=\"p\">[</span><span class=\"s1\">'resources'</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"s1\">'schema'</span><span class=\"p\">][</span><span class=\"s1\">'fields'</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"s1\">'type'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'year'</span>\n<span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n<span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">valid</span> <span class=\"c1\"># true</span>\n</pre>\n<p>Because our resources are tabular we could read it as a tabular data:</p>\n<pre><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">get_resource</span><span class=\"p\">(</span><span class=\"s1\">'population'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">keyed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\">#[ { city: 'london', year: 2017, population: 8780000 },</span>\n<span class=\"c1\">#  { city: 'paris', year: 2017, population: 2240000 },</span>\n<span class=\"c1\">#  { city: 'rome', year: 2017, population: 2860000 } ]</span>\n</pre>\n<p>Let's save our descriptor on the disk as a zip-file:</p>\n<pre><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'datapackage.zip'</span><span class=\"p\">)</span>\n</pre>\n<p>To continue the work with the data package we just load it again but this time using local <code>datapackage.zip</code>:</p>\n<pre><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"p\">(</span><span class=\"s1\">'datapackage.zip'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Continue the work</span>\n</pre>\n<p>It was onle basic introduction to the <code>Package</code> class. To learn more let's take a look on <code>Package</code> class API reference.</p>\n<h3>Working with Resource</h3>\n<p>A class for working with data resources. You can read or iterate tabular resources using the <code>iter/read</code> methods and all resource as bytes using <code>row_iter/row_read</code> methods.</p>\n<p>Consider we have some local csv file. It could be inline data or remote link - all supported by <code>Resource</code> class (except local files for in-brower usage of course). But say it's <code>data.csv</code> for now:</p>\n<pre>city,location\nlondon,\"51.50,-0.11\"\nparis,\"48.85,2.30\"\nrome,N/A\n</pre>\n<p>Let's create and read a resource. Because resource is tabular we could use <code>resource.read</code> method with a <code>keyed</code> option to get an array of keyed rows:</p>\n<pre><span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"n\">Resource</span><span class=\"p\">({</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"s1\">'data.csv'</span><span class=\"p\">})</span>\n<span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">tabular</span> <span class=\"c1\"># true</span>\n<span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">keyed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># [</span>\n<span class=\"c1\">#   {city: 'london', location: '51.50,-0.11'},</span>\n<span class=\"c1\">#   {city: 'paris', location: '48.85,2.30'},</span>\n<span class=\"c1\">#   {city: 'rome', location: 'N/A'},</span>\n<span class=\"c1\"># ]</span>\n<span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">headers</span>\n<span class=\"c1\"># ['city', 'location']</span>\n<span class=\"c1\"># (reading has to be started first)</span>\n</pre>\n<p>As we could see our locations are just a strings. But it should be geopoints. Also Rome's location is not available but it's also just a <code>N/A</code> string instead of Python <code>None</code>. First we have to infer resource metadata:</p>\n<pre><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">infer</span><span class=\"p\">()</span>\n<span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">descriptor</span>\n<span class=\"c1\">#{ path: 'data.csv',</span>\n<span class=\"c1\">#  profile: 'tabular-data-resource',</span>\n<span class=\"c1\">#  encoding: 'utf-8',</span>\n<span class=\"c1\">#  name: 'data',</span>\n<span class=\"c1\">#  format: 'csv',</span>\n<span class=\"c1\">#  mediatype: 'text/csv',</span>\n<span class=\"c1\"># schema: { fields: [ [Object], [Object] ], missingValues: [ '' ] } }</span>\n<span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">keyed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># Fails with a data validation error</span>\n</pre>\n<p>Let's fix not available location. There is a <code>missingValues</code> property in Table Schema specification. As a first try we set <code>missingValues</code> to <code>N/A</code> in <code>resource.descriptor.schema</code>. Resource descriptor could be changed in-place but all changes should be commited by <code>resource.commit()</code>:</p>\n<pre><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">descriptor</span><span class=\"p\">[</span><span class=\"s1\">'schema'</span><span class=\"p\">][</span><span class=\"s1\">'missingValues'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'N/A'</span>\n<span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n<span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">valid</span> <span class=\"c1\"># False</span>\n<span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">errors</span>\n<span class=\"c1\"># [&lt;ValidationError: \"'N/A' is not of type 'array'\"&gt;]</span>\n</pre>\n<p>As a good citiziens we've decided to check out recource descriptor validity. And it's not valid! We should use an array for <code>missingValues</code> property. Also don't forget to have an empty string as a missing value:</p>\n<pre><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">descriptor</span><span class=\"p\">[</span><span class=\"s1\">'schema'</span><span class=\"p\">][</span><span class=\"s1\">'missingValues'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'N/A'</span><span class=\"p\">]</span>\n<span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n<span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">valid</span> <span class=\"c1\"># true</span>\n</pre>\n<p>All good. It looks like we're ready to read our data again:</p>\n<pre><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">keyed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># [</span>\n<span class=\"c1\">#   {city: 'london', location: [51.50,-0.11]},</span>\n<span class=\"c1\">#   {city: 'paris', location: [48.85,2.30]},</span>\n<span class=\"c1\">#   {city: 'rome', location: null},</span>\n<span class=\"c1\"># ]</span>\n</pre>\n<p>Now we see that:</p>\n<ul>\n<li>locations are arrays with numeric lattide and longitude</li>\n<li>Rome's location is a native JavaScript <code>null</code></li>\n</ul>\n<p>And because there are no errors on data reading we could be sure that our data is valid againt our schema. Let's save our resource descriptor:</p>\n<pre><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'dataresource.json'</span><span class=\"p\">)</span>\n</pre>\n<p>Let's check newly-crated <code>dataresource.json</code>. It contains path to our data file, inferred metadata and our <code>missingValues</code> tweak:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"data.csv\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"profile\"</span><span class=\"p\">:</span> <span class=\"s2\">\"tabular-data-resource\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"encoding\"</span><span class=\"p\">:</span> <span class=\"s2\">\"utf-8\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"data\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"format\"</span><span class=\"p\">:</span> <span class=\"s2\">\"csv\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"mediatype\"</span><span class=\"p\">:</span> <span class=\"s2\">\"text/csv\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"schema\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"fields\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"city\"</span><span class=\"p\">,</span>\n                <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string\"</span><span class=\"p\">,</span>\n                <span class=\"nt\">\"format\"</span><span class=\"p\">:</span> <span class=\"s2\">\"default\"</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"location\"</span><span class=\"p\">,</span>\n                <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"geopoint\"</span><span class=\"p\">,</span>\n                <span class=\"nt\">\"format\"</span><span class=\"p\">:</span> <span class=\"s2\">\"default\"</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">],</span>\n        <span class=\"nt\">\"missingValues\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"N/A\"</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>If we decide to improve it even more we could update the <code>dataresource.json</code> file and then open it again using local file name:</p>\n<pre><span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"n\">Resource</span><span class=\"p\">(</span><span class=\"s1\">'dataresource.json'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Continue the work</span>\n</pre>\n<p>It was onle basic introduction to the <code>Resource</code> class. To learn more let's take a look on <code>Resource</code> class API reference.</p>\n<h3>Working with Group</h3>\n<p>A class representing a group of tabular resources. Groups can be used to read multiple resource as one or to export them, for example, to a database as one table. To define a group add the <code>group: &lt;name&gt;</code> field to corresponding resources. The group's metadata will be created from the \"leading\" resource's metadata (the first resource with the group name).</p>\n<p>Consider we have a data package with two tables partitioned by a year and a shared schema stored separately:</p>\n<blockquote>\n<p>cars-2017.csv</p>\n</blockquote>\n<pre>name,value\nbmw,2017\ntesla,2017\nnissan,2017\n</pre>\n<blockquote>\n<p>cars-2018.csv</p>\n</blockquote>\n<pre>name,value\nbmw,2018\ntesla,2018\nnissan,2018\n</pre>\n<blockquote>\n<p>cars.schema.json</p>\n</blockquote>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"fields\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"name\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"integer\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<blockquote>\n<p>datapackage.json</p>\n</blockquote>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"datapackage\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"resources\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"group\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cars\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cars-2017\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cars-2017.csv\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"profile\"</span><span class=\"p\">:</span> <span class=\"s2\">\"tabular-data-resource\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"schema\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cars.schema.json\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"group\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cars\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cars-2018\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cars-2018.csv\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"profile\"</span><span class=\"p\">:</span> <span class=\"s2\">\"tabular-data-resource\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"schema\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cars.schema.json\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Let's read the resources separately:</p>\n<pre><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"p\">(</span><span class=\"s1\">'datapackage.json'</span><span class=\"p\">)</span>\n<span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">get_resource</span><span class=\"p\">(</span><span class=\"s1\">'cars-2017'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">keyed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'bmw'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">2017</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'tesla'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">2017</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'nissan'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">2017</span><span class=\"p\">},</span>\n<span class=\"p\">]</span>\n<span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">get_resource</span><span class=\"p\">(</span><span class=\"s1\">'cars-2018'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">keyed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'bmw'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">2018</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'tesla'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">2018</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'nissan'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">2018</span><span class=\"p\">},</span>\n<span class=\"p\">]</span>\n</pre>\n<p>On the other hand, these resources defined with a <code>group: cars</code> field. It means we can treat them as a group:</p>\n<pre><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"p\">(</span><span class=\"s1\">'datapackage.json'</span><span class=\"p\">)</span>\n<span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">get_group</span><span class=\"p\">(</span><span class=\"s1\">'cars'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">keyed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'bmw'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">2017</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'tesla'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">2017</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'nissan'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">2017</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'bmw'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">2018</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'tesla'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">2018</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'nissan'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">2018</span><span class=\"p\">},</span>\n<span class=\"p\">]</span>\n</pre>\n<p>We can use this approach when we need to save the data package to a storage, for example, to a SQL database. There is the <code>merge_groups</code> flag to enable groupping behaviour:</p>\n<pre><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"p\">(</span><span class=\"s1\">'datapackage.json'</span><span class=\"p\">)</span>\n<span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">storage</span><span class=\"o\">=</span><span class=\"s1\">'sql'</span><span class=\"p\">,</span> <span class=\"n\">engine</span><span class=\"o\">=</span><span class=\"n\">engine</span><span class=\"p\">)</span>\n<span class=\"c1\"># SQL tables:</span>\n<span class=\"c1\"># - cars-2017</span>\n<span class=\"c1\"># - cars-2018</span>\n<span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">storage</span><span class=\"o\">=</span><span class=\"s1\">'sql'</span><span class=\"p\">,</span> <span class=\"n\">engine</span><span class=\"o\">=</span><span class=\"n\">engine</span><span class=\"p\">,</span> <span class=\"n\">merge_groups</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># SQL tables:</span>\n<span class=\"c1\"># - cars</span>\n</pre>\n<h3>Working with Profile</h3>\n<p>A component to represent JSON Schema profile from <a href=\"https://specs.frictionlessdata.io/schemas/registry.json\" rel=\"nofollow\">Profiles Registry</a>:</p>\n<pre><span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">Profile</span><span class=\"p\">(</span><span class=\"s1\">'data-package'</span><span class=\"p\">)</span>\n\n<span class=\"n\">profile</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"c1\"># data-package</span>\n<span class=\"n\">profile</span><span class=\"o\">.</span><span class=\"n\">jsonschema</span> <span class=\"c1\"># JSON Schema contents</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n   <span class=\"n\">valid</span> <span class=\"o\">=</span> <span class=\"n\">profile</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">descriptor</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">ValidationError</span> <span class=\"k\">as</span> <span class=\"n\">exception</span><span class=\"p\">:</span>\n   <span class=\"k\">for</span> <span class=\"n\">error</span> <span class=\"ow\">in</span> <span class=\"n\">exception</span><span class=\"o\">.</span><span class=\"n\">errors</span><span class=\"p\">:</span>\n       <span class=\"c1\"># handle individual error</span>\n</pre>\n<h3>Working with Foreign Keys</h3>\n<p>The library supports foreign keys described in the <a href=\"http://specs.frictionlessdata.io/table-schema/#foreign-keys\" rel=\"nofollow\">Table Schema</a> specification. It means if your data package descriptor use <code>resources[].schema.foreignKeys</code> property for some resources a data integrity will be checked on reading operations.</p>\n<p>Consider we have a data package:</p>\n<pre><span class=\"n\">DESCRIPTOR</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s1\">'resources'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'teams'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'city'</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"s1\">'Arsenal'</span><span class=\"p\">,</span> <span class=\"s1\">'London'</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"s1\">'2'</span><span class=\"p\">,</span> <span class=\"s1\">'Real'</span><span class=\"p\">,</span> <span class=\"s1\">'Madrid'</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"s1\">'3'</span><span class=\"p\">,</span> <span class=\"s1\">'Bayern'</span><span class=\"p\">,</span> <span class=\"s1\">'Munich'</span><span class=\"p\">],</span>\n      <span class=\"p\">],</span>\n      <span class=\"s1\">'schema'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'fields'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'integer'</span><span class=\"p\">},</span>\n          <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span><span class=\"p\">},</span>\n          <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'city'</span><span class=\"p\">,</span> <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span><span class=\"p\">},</span>\n        <span class=\"p\">],</span>\n        <span class=\"s1\">'foreignKeys'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"s1\">'fields'</span><span class=\"p\">:</span> <span class=\"s1\">'city'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'reference'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'resource'</span><span class=\"p\">:</span> <span class=\"s1\">'cities'</span><span class=\"p\">,</span> <span class=\"s1\">'fields'</span><span class=\"p\">:</span> <span class=\"s1\">'name'</span><span class=\"p\">},</span>\n          <span class=\"p\">},</span>\n        <span class=\"p\">],</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">},</span> <span class=\"p\">{</span>\n      <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'cities'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'country'</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"s1\">'London'</span><span class=\"p\">,</span> <span class=\"s1\">'England'</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"s1\">'Madrid'</span><span class=\"p\">,</span> <span class=\"s1\">'Spain'</span><span class=\"p\">],</span>\n      <span class=\"p\">],</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">],</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Let's check relations for a <code>teams</code> resource:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datapackage</span> <span class=\"kn\">import</span> <span class=\"n\">Package</span>\n\n<span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"p\">(</span><span class=\"n\">DESCRIPTOR</span><span class=\"p\">)</span>\n<span class=\"n\">teams</span> <span class=\"o\">=</span> <span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">get_resource</span><span class=\"p\">(</span><span class=\"s1\">'teams'</span><span class=\"p\">)</span>\n<span class=\"n\">teams</span><span class=\"o\">.</span><span class=\"n\">check_relations</span><span class=\"p\">()</span>\n<span class=\"c1\"># tableschema.exceptions.RelationError: Foreign key \"['city']\" violation in row \"4\"</span>\n</pre>\n<p>As we could see there is a foreign key violation. That's because our lookup table <code>cities</code> doesn't have a city of <code>Munich</code> but we have a team from there. We need to fix it in <code>cities</code> resource:</p>\n<pre><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">descriptor</span><span class=\"p\">[</span><span class=\"s1\">'resources'</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"s1\">'data'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"s1\">'Munich'</span><span class=\"p\">,</span> <span class=\"s1\">'Germany'</span><span class=\"p\">])</span>\n<span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n<span class=\"n\">teams</span> <span class=\"o\">=</span> <span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">get_resource</span><span class=\"p\">(</span><span class=\"s1\">'teams'</span><span class=\"p\">)</span>\n<span class=\"n\">teams</span><span class=\"o\">.</span><span class=\"n\">check_relations</span><span class=\"p\">()</span>\n<span class=\"c1\"># True</span>\n</pre>\n<p>Fixed! But not only a check operation is available. We could use <code>relations</code> argument for <code>resource.iter/read</code> methods to dereference a resource relations:</p>\n<pre><span class=\"n\">teams</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">keyed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">relations</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\">#[{'id': 1, 'name': 'Arsenal', 'city': {'name': 'London', 'country': 'England}},</span>\n<span class=\"c1\"># {'id': 2, 'name': 'Real', 'city': {'name': 'Madrid', 'country': 'Spain}},</span>\n<span class=\"c1\"># {'id': 3, 'name': 'Bayern', 'city': {'name': 'Munich', 'country': 'Germany}}]</span>\n</pre>\n<p>Instead of plain city name we've got a dictionary containing a city data. These <code>resource.iter/read</code> methods will fail with the same as <code>resource.check_relations</code> error if there is an integrity issue. But only if <code>relations=True</code> flag is passed.</p>\n<h3>Working with validate/infer</h3>\n<p>A standalone function to validate a data package descriptor:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datapackage</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span><span class=\"p\">,</span> <span class=\"n\">exceptions</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">valid</span> <span class=\"o\">=</span> <span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">descriptor</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">ValidationError</span> <span class=\"k\">as</span> <span class=\"n\">exception</span><span class=\"p\">:</span>\n   <span class=\"k\">for</span> <span class=\"n\">error</span> <span class=\"ow\">in</span> <span class=\"n\">exception</span><span class=\"o\">.</span><span class=\"n\">errors</span><span class=\"p\">:</span>\n       <span class=\"c1\"># handle individual error</span>\n</pre>\n<p>A standalone function to infer a data package descriptor.</p>\n<pre><span class=\"n\">descriptor</span> <span class=\"o\">=</span> <span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"s1\">'**/*.csv'</span><span class=\"p\">)</span>\n<span class=\"c1\">#{ profile: 'tabular-data-resource',</span>\n<span class=\"c1\">#  resources:</span>\n<span class=\"c1\">#   [ { path: 'data/cities.csv',</span>\n<span class=\"c1\">#       profile: 'tabular-data-resource',</span>\n<span class=\"c1\">#       encoding: 'utf-8',</span>\n<span class=\"c1\">#       name: 'cities',</span>\n<span class=\"c1\">#       format: 'csv',</span>\n<span class=\"c1\">#       mediatype: 'text/csv',</span>\n<span class=\"c1\">#       schema: [Object] },</span>\n<span class=\"c1\">#     { path: 'data/population.csv',</span>\n<span class=\"c1\">#       profile: 'tabular-data-resource',</span>\n<span class=\"c1\">#       encoding: 'utf-8',</span>\n<span class=\"c1\">#       name: 'population',</span>\n<span class=\"c1\">#       format: 'csv',</span>\n<span class=\"c1\">#       mediatype: 'text/csv',</span>\n<span class=\"c1\">#       schema: [Object] } ] }</span>\n</pre>\n<h3>Frequently Asked Questions</h3>\n<h4>Accessing data behind a proxy server?</h4>\n<p>Before the <code>package = Package(\"https://xxx.json\")</code> call set these environment variables:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"HTTP_PROXY\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'xxx'</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"HTTPS_PROXY\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'xxx'</span>\n</pre>\n<h2>API Reference</h2>\n<h3><code>cli</code></h3>\n<pre><span class=\"n\">cli</span><span class=\"p\">()</span>\n</pre>\n<p>Command-line interface</p>\n<pre><code>Usage: datapackage [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --version  Show the version and exit.\n  --help     Show this message and exit.\n\nCommands:\n  infer\n  validate\n</code></pre>\n<h3><code>Package</code></h3>\n<pre><span class=\"n\">Package</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">descriptor</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">base_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">unsafe</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">storage</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">default_base_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>Package representation</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>descriptor (str/dict)</strong>: data package descriptor as local path, url or object</li>\n<li><strong>base_path (str)</strong>: base path for all relative paths</li>\n<li><strong>strict (bool)</strong>: strict flag to alter validation behavior.\nSetting it to <code>True</code> leads to throwing errors\non any operation with invalid descriptor</li>\n<li><strong>unsafe (bool)</strong>:\nif <code>True</code> unsafe paths will be allowed. For more inforamtion\n<a href=\"https://specs.frictionlessdata.io/data-resource/#data-location\" rel=\"nofollow\">https://specs.frictionlessdata.io/data-resource/#data-location</a>.\nDefault to <code>False</code></li>\n<li><strong>storage (str/tableschema.Storage)</strong>: storage name like <code>sql</code> or storage instance</li>\n<li><strong>options (dict)</strong>: storage options to use for storage creation</li>\n</ul>\n<p><strong>Raises</strong></p>\n<ul>\n<li><code>DataPackageException</code>: raises error if something goes wrong</li>\n</ul>\n<h4><code>package.base_path</code></h4>\n<p>Package's base path</p>\n<p><strong>Returns</strong></p>\n<p><code>str/None</code>: returns the data package base path</p>\n<h4><code>package.descriptor</code></h4>\n<p>Package's descriptor</p>\n<p><strong>Returns</strong></p>\n<p><code>dict</code>: descriptor</p>\n<h4><code>package.errors</code></h4>\n<p>Validation errors</p>\n<p>Always empty in strict mode.</p>\n<p><strong>Returns</strong></p>\n<p><code>Exception[]</code>: validation errors</p>\n<h4><code>package.profile</code></h4>\n<p>Package's profile</p>\n<p><strong>Returns</strong></p>\n<p><code>Profile</code>: an instance of <code>Profile</code> class</p>\n<h4><code>package.resource_names</code></h4>\n<p>Package's resource names</p>\n<p><strong>Returns</strong></p>\n<p><code>str[]</code>: returns an array of resource names</p>\n<h4><code>package.resources</code></h4>\n<p>Package's resources</p>\n<p><strong>Returns</strong></p>\n<p><code>Resource[]</code>: returns an array of <code>Resource</code> instances</p>\n<h4><code>package.valid</code></h4>\n<p>Validation status</p>\n<p>Always true in strict mode.</p>\n<p><strong>Returns</strong></p>\n<p><code>bool</code>: validation status</p>\n<h4><code>package.get_resource</code></h4>\n<pre><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">get_resource</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre>\n<p>Get data package resource by name.</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>name (str)</strong>: data resource name</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Resource/None</code>: returns <code>Resource</code> instances or null if not found</p>\n<h4><code>package.add_resource</code></h4>\n<pre><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">add_resource</span><span class=\"p\">(</span><span class=\"n\">descriptor</span><span class=\"p\">)</span>\n</pre>\n<p>Add new resource to data package.</p>\n<p>The data package descriptor will be validated with newly added resource descriptor.</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>descriptor (dict)</strong>: data resource descriptor</li>\n</ul>\n<p><strong>Raises</strong></p>\n<ul>\n<li><code>DataPackageException</code>: raises error if something goes wrong</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Resource/None</code>: returns added <code>Resource</code> instance or null if not added</p>\n<h4><code>package.remove_resource</code></h4>\n<pre><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">remove_resource</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre>\n<p>Remove data package resource by name.</p>\n<p>The data package descriptor will be validated after resource descriptor removal.</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>name (str)</strong>: data resource name</li>\n</ul>\n<p><strong>Raises</strong></p>\n<ul>\n<li><code>DataPackageException</code>: raises error if something goes wrong</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Resource/None</code>: returns removed <code>Resource</code> instances or null if not found</p>\n<h4><code>package.get_group</code></h4>\n<pre><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">get_group</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre>\n<p>Returns a group of tabular resources by name.</p>\n<p>For more information about groups see <a href=\"#group\" rel=\"nofollow\">Group</a>.</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>name (str)</strong>: name of a group of resources</li>\n</ul>\n<p><strong>Raises</strong></p>\n<ul>\n<li><code>DataPackageException</code>: raises error if something goes wrong</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Group/None</code>: returns a <code>Group</code> instance or null if not found</p>\n<h4><code>package.infer</code></h4>\n<pre><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>Infer a data package metadata.</p>\n<blockquote>\n<p>Argument <code>pattern</code> works only for local files</p>\n</blockquote>\n<p>If <code>pattern</code> is not provided only existent resources will be inferred\n(added metadata like encoding, profile etc). If <code>pattern</code> is provided\nnew resoures with file names mathing the pattern will be added and inferred.\nIt commits changes to data package instance.</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>pattern (str)</strong>: glob pattern for new resources</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>dict</code>: returns data package descriptor</p>\n<h4><code>package.commit</code></h4>\n<pre><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">(</span><span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>Update data package instance if there are in-place changes in the descriptor.</p>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"p\">({</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'package'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'resources'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'resource'</span><span class=\"p\">,</span> <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]}]</span>\n<span class=\"p\">})</span>\n\n<span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"c1\"># package</span>\n<span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">descriptor</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'renamed-package'</span>\n<span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"c1\"># package</span>\n<span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n<span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"c1\"># renamed-package</span>\n</pre>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>strict (bool)</strong>: alter <code>strict</code> mode for further work</li>\n</ul>\n<p><strong>Raises</strong></p>\n<ul>\n<li><code>DataPackageException</code>: raises error if something goes wrong</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>bool</code>: returns true on success and false if not modified</p>\n<h4><code>package.save</code></h4>\n<pre><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n             <span class=\"n\">storage</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n             <span class=\"n\">merge_groups</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n             <span class=\"n\">to_base_path</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n             <span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>Saves this data package</p>\n<p>It saves it to storage if <code>storage</code> argument is passed or\nsaves this data package's descriptor to json file if <code>target</code> arguments\nends with <code>.json</code> or saves this data package to zip file otherwise.</p>\n<p><strong>Example</strong></p>\n<p>It creates a zip file into <code>file_or_path</code> with the contents\nof this Data Package and its resources. Every resource which content\nlives in the local filesystem will be copied to the zip file.\nConsider the following Data Package descriptor:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"gdp\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"resources\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"local\"</span><span class=\"p\">,</span> <span class=\"nt\">\"format\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CSV\"</span><span class=\"p\">,</span> <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"data.csv\"</span><span class=\"p\">},</span>\n        <span class=\"p\">{</span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"inline\"</span><span class=\"p\">,</span> <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">42</span><span class=\"p\">]},</span>\n        <span class=\"p\">{</span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"remote\"</span><span class=\"p\">,</span> <span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://someplace.com/data.csv\"</span><span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>The final structure of the zip file will be:</p>\n<pre><code>./datapackage.json\n./data/local.csv\n</code></pre>\n<p>With the contents of <code>datapackage.json</code> being the same as\nreturned <code>datapackage.descriptor</code>. The resources' file names are generated\nbased on their <code>name</code> and <code>format</code> fields if they exist.\nIf the resource has no <code>name</code>, it'll be used <code>resource-X</code>,\nwhere <code>X</code> is the index of the resource in the <code>resources</code> list (starting at zero).\nIf the resource has <code>format</code>, it'll be lowercased and appended to the <code>name</code>,\nbecoming \"<code>name.format</code>\".</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>target (string/filelike)</strong>:\nthe file path or a file-like object where\nthe contents of this Data Package will be saved into.</li>\n<li><strong>storage (str/tableschema.Storage)</strong>:\nstorage name like <code>sql</code> or storage instance</li>\n<li><strong>merge_groups (bool)</strong>:\nsave all the group's tabular resoruces into one bucket\nif a storage is provided (for example into one SQL table).\nRead more about <a href=\"#group\" rel=\"nofollow\">Group</a>.</li>\n<li><strong>to_base_path (bool)</strong>:\nsave the package to the package's base path\nusing the \"&lt;base_path&gt;/&lt;target&gt;\" route</li>\n<li><strong>options (dict)</strong>:\nstorage options to use for storage creation</li>\n</ul>\n<p><strong>Raises</strong></p>\n<ul>\n<li><code>DataPackageException</code>: raises if there was some error writing the package</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>bool/Storage</code>: on success return true or a <code>Storage</code> instance</p>\n<h3><code>Resource</code></h3>\n<pre><span class=\"n\">Resource</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\n         <span class=\"n\">descriptor</span><span class=\"o\">=</span><span class=\"p\">{},</span>\n         <span class=\"n\">base_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n         <span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n         <span class=\"n\">unsafe</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n         <span class=\"n\">storage</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n         <span class=\"n\">package</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n         <span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>Resource represenation</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>descriptor (str/dict)</strong>: data resource descriptor as local path, url or object</li>\n<li><strong>base_path (str)</strong>: base path for all relative paths</li>\n<li><strong>strict (bool)</strong>:\nstrict flag to alter validation behavior.  Setting it to <code>true</code>\nleads to throwing errors on any operation with invalid descriptor</li>\n<li><strong>unsafe (bool)</strong>:\nif <code>True</code> unsafe paths will be allowed. For more inforamtion\n<a href=\"https://specs.frictionlessdata.io/data-resource/#data-location\" rel=\"nofollow\">https://specs.frictionlessdata.io/data-resource/#data-location</a>.\nDefault to <code>False</code></li>\n<li><strong>storage (str/tableschema.Storage)</strong>: storage name like <code>sql</code> or storage instance</li>\n<li><strong>options (dict)</strong>: storage options to use for storage creation</li>\n</ul>\n<p><strong>Raises</strong></p>\n<ul>\n<li><code>DataPackageException</code>: raises error if something goes wrong</li>\n</ul>\n<h4><code>resource.data</code></h4>\n<p>Return resource data</p>\n<h4><code>resource.descriptor</code></h4>\n<p>Package's descriptor</p>\n<p><strong>Returns</strong></p>\n<p><code>dict</code>: descriptor</p>\n<h4><code>resource.errors</code></h4>\n<p>Validation errors</p>\n<p>Always empty in strict mode.</p>\n<p><strong>Returns</strong></p>\n<p><code>Exception[]</code>: validation errors</p>\n<h4><code>resource.group</code></h4>\n<p>Group name</p>\n<p><strong>Returns</strong></p>\n<p><code>str</code>: group name</p>\n<h4><code>resource.headers</code></h4>\n<p>Resource's headers</p>\n<blockquote>\n<p>Only for tabular resources (reading has to be started first or it's <code>None</code>)</p>\n</blockquote>\n<p><strong>Returns</strong></p>\n<p><code>str[]/None</code>: returns data source headers</p>\n<h4><code>resource.inline</code></h4>\n<p>Whether resource inline</p>\n<p><strong>Returns</strong></p>\n<p><code>bool</code>: returns true if resource is inline</p>\n<h4><code>resource.local</code></h4>\n<p>Whether resource local</p>\n<p><strong>Returns</strong></p>\n<p><code>bool</code>: returns true if resource is local</p>\n<h4><code>resource.multipart</code></h4>\n<p>Whether resource multipart</p>\n<p><strong>Returns</strong></p>\n<p><code>bool</code>: returns true if resource is multipart</p>\n<h4><code>resource.name</code></h4>\n<p>Resource name</p>\n<p><strong>Returns</strong></p>\n<p><code>str</code>: name</p>\n<h4><code>resource.package</code></h4>\n<p>Package instance if the resource belongs to some package</p>\n<p><strong>Returns</strong></p>\n<p><code>Package/None</code>: a package instance if available</p>\n<h4><code>resource.profile</code></h4>\n<p>Resource's profile</p>\n<p><strong>Returns</strong></p>\n<p><code>Profile</code>: an instance of <code>Profile</code> class</p>\n<h4><code>resource.remote</code></h4>\n<p>Whether resource remote</p>\n<p><strong>Returns</strong></p>\n<p><code>bool</code>: returns true if resource is remote</p>\n<h4><code>resource.schema</code></h4>\n<p>Resource's schema</p>\n<blockquote>\n<p>Only for tabular resources</p>\n</blockquote>\n<p>For tabular resources it returns <code>Schema</code> instance to interact with data schema.\nRead API documentation - <a href=\"https://github.com/frictionlessdata/tableschema-py#schema\" rel=\"nofollow\">tableschema.Schema</a>.</p>\n<p><strong>Returns</strong></p>\n<p><code>tableschema.Schema</code>: schema</p>\n<h4><code>resource.source</code></h4>\n<p>Resource's source</p>\n<p>Combination of <code>resource.source</code> and <code>resource.inline/local/remote/multipart</code>\nprovides predictable interface to work with resource data.</p>\n<p><strong>Returns</strong></p>\n<p><code>list/str</code>: returns <code>data</code> or <code>path</code> property</p>\n<h4><code>resource.table</code></h4>\n<p>Return resource table</p>\n<h4><code>resource.tabular</code></h4>\n<p>Whether resource tabular</p>\n<p><strong>Returns</strong></p>\n<p><code>bool</code>: returns true if resource is tabular</p>\n<h4><code>resource.valid</code></h4>\n<p>Validation status</p>\n<p>Always true in strict mode.</p>\n<p><strong>Returns</strong></p>\n<p><code>bool</code>: validation status</p>\n<h4><code>resource.iter</code></h4>\n<pre><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">iter</span><span class=\"p\">(</span><span class=\"n\">integrity</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">relations</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>Iterates through the resource data and emits rows cast based on table schema.</p>\n<blockquote>\n<p>Only for tabular resources</p>\n</blockquote>\n<p><strong>Arguments</strong></p>\n<pre><code>keyed (bool):\n    yield keyed rows in a form of `{header1: value1, header2: value2}`\n    (default is false; the form of rows is `[value1, value2]`)\n\nextended (bool):\n    yield extended rows in a for of `[rowNumber, [header1, header2], [value1, value2]]`\n    (default is false; the form of rows is `[value1, value2]`)\n\ncast (bool):\n    disable data casting if false\n    (default is true)\n\nintegrity (bool):\n    if true actual size in BYTES and SHA256 hash of the file\n    will be checked against `descriptor.bytes` and `descriptor.hash`\n    (other hashing algorithms are not supported and will be skipped silently)\n\nrelations (bool):\n    if true foreign key fields will be checked and resolved to its references\n\nforeign_keys_values (dict):\n    three-level dictionary of foreign key references optimized\n    to speed up validation process in a form of\n    `{resource1: {(fk_field1, fk_field2): {(value1, value2): {one_keyedrow}, ... }}}`.\n    If not provided but relations is true, it will be created\n    before the validation process by *index_foreign_keys_values* method\n\nexc_handler (func):\n    optional custom exception handler callable.\n    Can be used to defer raising errors (i.e. \"fail late\"), e.g.\n    for data validation purposes. Must support the signature below\n</code></pre>\n<p><strong>Custom exception handler</strong></p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">exc_handler</span><span class=\"p\">(</span><span class=\"n\">exc</span><span class=\"p\">,</span> <span class=\"n\">row_number</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">row_data</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">error_data</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">'''Custom exception handler (example)</span>\n\n<span class=\"sd\">    # Arguments:</span>\n<span class=\"sd\">        exc(Exception):</span>\n<span class=\"sd\">            Deferred exception instance</span>\n<span class=\"sd\">        row_number(int):</span>\n<span class=\"sd\">            Data row number that triggers exception exc</span>\n<span class=\"sd\">        row_data(OrderedDict):</span>\n<span class=\"sd\">            Invalid data row source data</span>\n<span class=\"sd\">        error_data(OrderedDict):</span>\n<span class=\"sd\">            Data row source data field subset responsible for the error, if</span>\n<span class=\"sd\">            applicable (e.g. invalid primary or foreign key fields). May be</span>\n<span class=\"sd\">            identical to row_data.</span>\n<span class=\"sd\">    '''</span>\n    <span class=\"c1\"># ...</span>\n</pre>\n<p><strong>Raises</strong></p>\n<ul>\n<li><code>DataPackageException</code>: base class of any error</li>\n<li><code>CastError</code>: data cast error</li>\n<li><code>IntegrityError</code>: integrity checking error</li>\n<li><code>UniqueKeyError</code>: unique key constraint violation</li>\n<li><code>UnresolvedFKError</code>: unresolved foreign key reference error</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Iterator[list]</code>: yields rows</p>\n<h4><code>resource.read</code></h4>\n<pre><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">integrity</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n              <span class=\"n\">relations</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n              <span class=\"n\">foreign_keys_values</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n              <span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>Read the whole resource and return as array of rows</p>\n<blockquote>\n<p>Only for tabular resources\nIt has the same API as <code>resource.iter</code> except for</p>\n</blockquote>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>limit (int)</strong>: limit count of rows to read and return</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>list[]</code>: returns rows</p>\n<h4><code>resource.check_integrity</code></h4>\n<pre><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">check_integrity</span><span class=\"p\">()</span>\n</pre>\n<p>Checks resource integrity</p>\n<blockquote>\n<p>Only for tabular resources</p>\n</blockquote>\n<p>It checks size in BYTES and SHA256 hash of the file\nagainst <code>descriptor.bytes</code> and <code>descriptor.hash</code>\n(other hashing algorithms are not supported and will be skipped silently).</p>\n<p><strong>Raises</strong></p>\n<ul>\n<li><code>exceptions.IntegrityError</code>: raises if there are integrity issues</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>bool</code>: returns True if no issues</p>\n<h4><code>resource.check_relations</code></h4>\n<pre><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">check_relations</span><span class=\"p\">(</span><span class=\"n\">foreign_keys_values</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>Check relations</p>\n<blockquote>\n<p>Only for tabular resources</p>\n</blockquote>\n<p>It checks foreign keys and raises an exception if there are integrity issues.</p>\n<p><strong>Raises</strong></p>\n<ul>\n<li><code>exceptions.RelationError</code>: raises if there are relation issues</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>bool</code>: returns True if no issues</p>\n<h4><code>resource.drop_relations</code></h4>\n<pre><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">drop_relations</span><span class=\"p\">()</span>\n</pre>\n<p>Drop relations</p>\n<blockquote>\n<p>Only for tabular resources</p>\n</blockquote>\n<p>Remove relations data from memory</p>\n<p><strong>Returns</strong></p>\n<p><code>bool</code>: returns True</p>\n<h4><code>resource.raw_iter</code></h4>\n<pre><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">raw_iter</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>Iterate over data chunks as bytes.</p>\n<p>If <code>stream</code> is true File-like object will be returned.</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>stream (bool)</strong>: File-like object will be returned</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>bytes[]/filelike</code>: returns bytes[]/filelike</p>\n<h4><code>resource.raw_read</code></h4>\n<pre><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">raw_read</span><span class=\"p\">()</span>\n</pre>\n<p>Returns resource data as bytes.</p>\n<p><strong>Returns</strong></p>\n<p><code>bytes</code>: returns resource data in bytes</p>\n<h4><code>resource.infer</code></h4>\n<pre><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>Infer resource metadata</p>\n<p>Like name, format, mediatype, encoding, schema and profile.\nIt commits this changes into resource instance.</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>options</strong>:\noptions will be passed to <code>tableschema.infer</code> call,\nfor more control on results (e.g. for setting <code>limit</code>, <code>confidence</code> etc.).</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>dict</code>: returns resource descriptor</p>\n<h4><code>resource.commit</code></h4>\n<pre><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">(</span><span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>Update resource instance if there are in-place changes in the descriptor.</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>strict (bool)</strong>: alter <code>strict</code> mode for further work</li>\n</ul>\n<p><strong>Raises</strong></p>\n<ul>\n<li><code>DataPackageException</code>: raises error if something goes wrong</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>bool</code>: returns true on success and false if not modified</p>\n<h4><code>resource.save</code></h4>\n<pre><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">storage</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">to_base_path</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>Saves this resource</p>\n<p>Into storage if <code>storage</code> argument is passed or\nsaves this resource's descriptor to json file otherwise.</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>target (str)</strong>:\npath where to save a resource</li>\n<li><strong>storage (str/tableschema.Storage)</strong>:\nstorage name like <code>sql</code> or storage instance</li>\n<li><strong>to_base_path (bool)</strong>:\nsave the resource to the resource's base path\nusing the \"&lt;base_path&gt;/&lt;target&gt;\" route</li>\n<li><strong>options (dict)</strong>:\nstorage options to use for storage creation</li>\n</ul>\n<p><strong>Raises</strong></p>\n<ul>\n<li><code>DataPackageException</code>: raises error if something goes wrong</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>bool</code>: returns true on success\nBuilding index...\nStarted generating documentation...</p>\n<h3><code>Group</code></h3>\n<pre><span class=\"n\">Group</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">resources</span><span class=\"p\">)</span>\n</pre>\n<p>Group representation</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>Resource[]</strong>: list of TABULAR resources</li>\n</ul>\n<h4><code>group.headers</code></h4>\n<p>Group's headers</p>\n<p><strong>Returns</strong></p>\n<p><code>str[]/None</code>: returns headers</p>\n<h4><code>group.name</code></h4>\n<p>Group name</p>\n<p><strong>Returns</strong></p>\n<p><code>str</code>: name</p>\n<h4><code>group.schema</code></h4>\n<p>Resource's schema</p>\n<p><strong>Returns</strong></p>\n<p><code>tableschema.Schema</code>: schema</p>\n<h4><code>group.iter</code></h4>\n<pre><span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">iter</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>Iterates through the group data and emits rows cast based on table schema.</p>\n<blockquote>\n<p>It concatenates all the resources and has the same API as <code>resource.iter</code></p>\n</blockquote>\n<h4><code>group.read</code></h4>\n<pre><span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>Read the whole group and return as array of rows</p>\n<blockquote>\n<p>It concatenates all the resources and has the same API as <code>resource.read</code></p>\n</blockquote>\n<h4><code>group.check_relations</code></h4>\n<pre><span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">check_relations</span><span class=\"p\">()</span>\n</pre>\n<p>Check group's relations</p>\n<p>The same as <code>resource.check_relations</code> but without the optional\nargument <em>foreign_keys_values</em>.  This method will test foreignKeys of the\nwhole group at once otpimizing the process by creating the foreign_key_values\nhashmap only once before testing the set of resources.</p>\n<h3><code>Profile</code></h3>\n<pre><span class=\"n\">Profile</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"p\">)</span>\n</pre>\n<p>Profile representation</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>profile (str)</strong>: profile name in registry or URL to JSON Schema</li>\n</ul>\n<p><strong>Raises</strong></p>\n<ul>\n<li><code>DataPackageException</code>: raises error if something goes wrong</li>\n</ul>\n<h4><code>profile.jsonschema</code></h4>\n<p>JSONSchema content</p>\n<p><strong>Returns</strong></p>\n<p><code>dict</code>: returns profile's JSON Schema contents</p>\n<h4><code>profile.name</code></h4>\n<p>Profile name</p>\n<p><strong>Returns</strong></p>\n<p><code>str/None</code>: name if available</p>\n<h4><code>profile.validate</code></h4>\n<pre><span class=\"n\">profile</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">descriptor</span><span class=\"p\">)</span>\n</pre>\n<p>Validate a data package <code>descriptor</code> against the profile.</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>descriptor (dict)</strong>: retrieved and dereferenced data package descriptor</li>\n</ul>\n<p><strong>Raises</strong></p>\n<ul>\n<li><code>ValidationError</code>: raises if not valid\n<strong>Returns</strong></li>\n</ul>\n<p><code>bool</code>: returns True if valid</p>\n<h3><code>validate</code></h3>\n<pre><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">descriptor</span><span class=\"p\">)</span>\n</pre>\n<p>Validate a data package descriptor.</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>descriptor (str/dict)</strong>: package descriptor (one of):\n- local path\n- remote url\n- object</li>\n</ul>\n<p><strong>Raises</strong></p>\n<ul>\n<li><code>ValidationError</code>: raises on invalid</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>bool</code>: returns true on valid</p>\n<h3><code>infer</code></h3>\n<pre><span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">,</span> <span class=\"n\">base_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>Infer a data package descriptor.</p>\n<blockquote>\n<p>Argument <code>pattern</code> works only for local files</p>\n</blockquote>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>pattern (str)</strong>: glob file pattern</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>dict</code>: returns data package descriptor</p>\n<h3><code>DataPackageException</code></h3>\n<pre><span class=\"n\">DataPackageException</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">errors</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n</pre>\n<p>Base class for all DataPackage/TableSchema exceptions.</p>\n<p>If there are multiple errors, they can be read from the exception object:</p>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"c1\"># lib action</span>\n<span class=\"k\">except</span> <span class=\"n\">DataPackageException</span> <span class=\"k\">as</span> <span class=\"n\">exception</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">exception</span><span class=\"o\">.</span><span class=\"n\">multiple</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">error</span> <span class=\"ow\">in</span> <span class=\"n\">exception</span><span class=\"o\">.</span><span class=\"n\">errors</span><span class=\"p\">:</span>\n            <span class=\"c1\"># handle error</span>\n</pre>\n<h4><code>datapackageexception.errors</code></h4>\n<p>List of nested errors</p>\n<p><strong>Returns</strong></p>\n<p><code>DataPackageException[]</code>: list of nested errors</p>\n<h4><code>datapackageexception.multiple</code></h4>\n<p>Whether it's a nested exception</p>\n<p><strong>Returns</strong></p>\n<p><code>bool</code>: whether it's a nested exception</p>\n<h3><code>TableSchemaException</code></h3>\n<pre><span class=\"n\">TableSchemaException</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">errors</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n</pre>\n<p>Base class for all TableSchema exceptions.</p>\n<h3><code>LoadError</code></h3>\n<pre><span class=\"n\">LoadError</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">errors</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n</pre>\n<p>All loading errors.</p>\n<h3><code>CastError</code></h3>\n<pre><span class=\"n\">CastError</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">errors</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n</pre>\n<p>All value cast errors.</p>\n<h3><code>IntegrityError</code></h3>\n<pre><span class=\"n\">IntegrityError</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">errors</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n</pre>\n<p>All integrity errors.</p>\n<h3><code>RelationError</code></h3>\n<pre><span class=\"n\">RelationError</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">errors</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n</pre>\n<p>All relations errors.</p>\n<h3><code>StorageError</code></h3>\n<pre><span class=\"n\">StorageError</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">errors</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n</pre>\n<p>All storage errors.</p>\n<h2>Contributing</h2>\n<blockquote>\n<p>The project follows the <a href=\"https://github.com/okfn/coding-standards\" rel=\"nofollow\">Open Knowledge International coding standards</a>.</p>\n</blockquote>\n<p>Recommended way to get started is to create and activate a project virtual environment.\nTo install package and development dependencies into active environment:</p>\n<pre>$ make install\n</pre>\n<p>To run tests with linting and coverage:</p>\n<pre>$ make <span class=\"nb\">test</span>\n</pre>\n<h2>Changelog</h2>\n<p>Here described only breaking and the most important changes. The full changelog and documentation for all released versions could be found in nicely formatted <a href=\"https://github.com/frictionlessdata/datapackage-py/commits/master\" rel=\"nofollow\">commit history</a>.</p>\n<h4>v1.13</h4>\n<ul>\n<li>Add <code>unsafe</code> option to Package and Resource (#262)</li>\n</ul>\n<h4>v1.12</h4>\n<ul>\n<li>Use <code>chardet</code> for encoding deteciton by default. For <code>cchardet</code>: <code>pip install datapackage[cchardet]</code></li>\n</ul>\n<h4>v1.11</h4>\n<ul>\n<li><code>resource/package.save</code> now accept a <code>to_base_path</code> argument (#254)</li>\n<li><code>package.save</code> now returns a <code>Storage</code> instance if available</li>\n</ul>\n<h4>v1.10</h4>\n<ul>\n<li>Added an ability to check tabular resource's integrity</li>\n</ul>\n<h4>v1.9</h4>\n<ul>\n<li>Added <code>resource.package</code> property</li>\n</ul>\n<h4>v1.8</h4>\n<ul>\n<li>Added support for <a href=\"#group\" rel=\"nofollow\">groups of resources</a></li>\n</ul>\n<h4>v1.7</h4>\n<ul>\n<li>Added support for <a href=\"https://frictionlessdata.io/specs/patterns/#compression-of-resources\" rel=\"nofollow\">compression of resources</a></li>\n</ul>\n<h4>v1.6</h4>\n<ul>\n<li>Added support for custom request session</li>\n</ul>\n<h4>v1.5</h4>\n<p>Updated behaviour:</p>\n<ul>\n<li>Added support for Python 3.7</li>\n</ul>\n<h4>v1.4</h4>\n<p>New API added:</p>\n<ul>\n<li>added <code>skip_rows</code> support to the resource descriptor</li>\n</ul>\n<h4>v1.3</h4>\n<p>New API added:</p>\n<ul>\n<li>property <code>package.base_path</code> is now publicly available</li>\n</ul>\n<h4>v1.2</h4>\n<p>Updated behaviour:</p>\n<ul>\n<li>CLI command <code>$ datapackage infer</code> now outputs only a JSON-formatted data package descriptor.</li>\n</ul>\n<h4>v1.1</h4>\n<p>New API added:</p>\n<ul>\n<li>Added an integration between <code>Package/Resource</code> and the <code>tableschema.Storage</code> - <a href=\"https://github.com/frictionlessdata/tableschema-py#storage\" rel=\"nofollow\">https://github.com/frictionlessdata/tableschema-py#storage</a>. It allows to load and save data package from/to different storages like SQL/BigQuery/etc.</li>\n</ul>\n\n          </div>"}, "last_serial": 6920437, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a498982cbe4eb90ea7e836b7e000936d", "sha256": "14904cf6f81c4f06615131c76e0526753c3784a96fb0c1d39aee15b002ca0ab2"}, "downloads": -1, "filename": "datapackage-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a498982cbe4eb90ea7e836b7e000936d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16548, "upload_time": "2013-06-06T09:37:28", "upload_time_iso_8601": "2013-06-06T09:37:28.978204Z", "url": "https://files.pythonhosted.org/packages/fd/e0/bfcfb2286902369e75e590958f87dbf3dd8231c78b203783c2af5aaad682/datapackage-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "867b23b12f3096727814c8cc509ea5ce", "sha256": "821c152c8ad02bc658e703b95e383a65473e1cd6ea104553c726e94d00868ea3"}, "downloads": -1, "filename": "datapackage-0.1.1.tar.gz", "has_sig": false, "md5_digest": "867b23b12f3096727814c8cc509ea5ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16604, "upload_time": "2013-06-24T11:48:58", "upload_time_iso_8601": "2013-06-24T11:48:58.374843Z", "url": "https://files.pythonhosted.org/packages/37/99/463bb5c609eec1d460c4d0606f73fcc70e529ba1182e371886306784e3f1/datapackage-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8e24c85f9f28a61c8a0d02ea949e1bb8", "sha256": "297cfa2dcd81f4be83684cd6d7e88d0e345800c1f70779e5bc2d0a6b10462e60"}, "downloads": -1, "filename": "datapackage-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8e24c85f9f28a61c8a0d02ea949e1bb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17630, "upload_time": "2013-06-28T21:04:03", "upload_time_iso_8601": "2013-06-28T21:04:03.907046Z", "url": "https://files.pythonhosted.org/packages/ef/bc/35c02fc3b61dff66924a8a7c54720fe5a03b416e53384dffa5781decb399/datapackage-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "a655ae53bbd618140e4a9ed0d10ce29d", "sha256": "3e6ad38878752bca6298e74800a7fa35a9f4ca7bde9a2e103e3488755030d351"}, "downloads": -1, "filename": "datapackage-0.1.3.tar.gz", "has_sig": false, "md5_digest": "a655ae53bbd618140e4a9ed0d10ce29d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17633, "upload_time": "2013-10-10T12:55:47", "upload_time_iso_8601": "2013-10-10T12:55:47.840551Z", "url": "https://files.pythonhosted.org/packages/85/d4/7cc617044425a6ef8c83ac13048d3fca23a7e0628dff96fa672c30760aec/datapackage-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "6400712858d1c55a0832f436fe6e4ebd", "sha256": "604ec33da6e6cc60bdea936cefafee9d7e68c392785f8031fd0f2686fb3c037e"}, "downloads": -1, "filename": "datapackage-0.2.0.tar.gz", "has_sig": false, "md5_digest": "6400712858d1c55a0832f436fe6e4ebd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17883, "upload_time": "2013-10-10T21:06:36", "upload_time_iso_8601": "2013-10-10T21:06:36.036218Z", "url": "https://files.pythonhosted.org/packages/c1/d4/5e034995cb4bc206a429d545fe2b779e13f73f6ea759e4b86ef0322029db/datapackage-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "f9df1445c5539de1b7b1a923a044981a", "sha256": "2a007db04998058bb3a98e15ce947c1cb7baf808ff9244ab9c9b041313c8e077"}, "downloads": -1, "filename": "datapackage-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f9df1445c5539de1b7b1a923a044981a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18030, "upload_time": "2013-10-11T21:05:48", "upload_time_iso_8601": "2013-10-11T21:05:48.836698Z", "url": "https://files.pythonhosted.org/packages/fb/71/27d2e0aa5a6fcd150f350a3d0c22d4fd2eb50daec7b4062b2f9aeac6a5fc/datapackage-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "43570207afb7ca6da617b012ef354734", "sha256": "6552074409c5636ace8f3efa6e0a6c1969f3a9bb46bf9ed426a003f28921e394"}, "downloads": -1, "filename": "datapackage-0.3.0.tar.gz", "has_sig": false, "md5_digest": "43570207afb7ca6da617b012ef354734", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18219, "upload_time": "2014-01-21T09:33:54", "upload_time_iso_8601": "2014-01-21T09:33:54.714524Z", "url": "https://files.pythonhosted.org/packages/66/95/c1374d01ca3a46e3eb3b8e38e5bd2fc990a75943793c76e9c0b2968ebfc9/datapackage-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "d59d570206a6837758df95213d281695", "sha256": "aa03c7fa3d535a84776fe2ceda6dec3a30ed1e1acee72eb0ba99c7ecb9b6f5c3"}, "downloads": -1, "filename": "datapackage-0.3.1.tar.gz", "has_sig": false, "md5_digest": "d59d570206a6837758df95213d281695", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18333, "upload_time": "2014-08-11T22:57:09", "upload_time_iso_8601": "2014-08-11T22:57:09.853509Z", "url": "https://files.pythonhosted.org/packages/2a/aa/e0949994665a6522830f8d520dd8bb4a3cdf95c13f8123ed95a9feb3868f/datapackage-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "99ac1e8161c2acd156ba42fbea672058", "sha256": "4b1f7c8151b6c91864e53c576c8b7949686cb56d7ee41cb4e4ae2cbdff317365"}, "downloads": -1, "filename": "datapackage-0.4.0.tar.gz", "has_sig": false, "md5_digest": "99ac1e8161c2acd156ba42fbea672058", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29988, "upload_time": "2014-10-01T09:19:35", "upload_time_iso_8601": "2014-10-01T09:19:35.210710Z", "url": "https://files.pythonhosted.org/packages/5a/dc/d56e751e812aea7f1d2ff3f910aaba6d99a57bff1a2aa85d24ade3f1960e/datapackage-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "ae561da8b581ad093d345398188620f2", "sha256": "86728201254dc73de55da22302e0518d7d5b316d41af5b69b228da35aed1e53f"}, "downloads": -1, "filename": "datapackage-0.4.1.tar.gz", "has_sig": false, "md5_digest": "ae561da8b581ad093d345398188620f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29898, "upload_time": "2014-10-01T11:13:28", "upload_time_iso_8601": "2014-10-01T11:13:28.354123Z", "url": "https://files.pythonhosted.org/packages/d5/a2/99d242765410640c4ebc49e07b078285a5fbc3c81bcdff055aeb2fb7de74/datapackage-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "d32d304927aa2ea497f336ffe45080a4", "sha256": "bb6338b2fcce8a8e6efa959b439e3e0dd0f180897196a99a15795066faf3a31c"}, "downloads": -1, "filename": "datapackage-0.4.2.tar.gz", "has_sig": false, "md5_digest": "d32d304927aa2ea497f336ffe45080a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29857, "upload_time": "2014-10-28T20:57:21", "upload_time_iso_8601": "2014-10-28T20:57:21.056480Z", "url": "https://files.pythonhosted.org/packages/8d/be/a7af5f37bccab5ddaabdb9f0e1fdd419a8d9cc75dbe4a1f234001bf3e969/datapackage-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "0e1d4071303abbe3463e2361600e3eac", "sha256": "30452d40536db96d8b82206a004be61ed050e2de6fd33bc0aae7dd7914c7476e"}, "downloads": -1, "filename": "datapackage-0.4.3.tar.gz", "has_sig": false, "md5_digest": "0e1d4071303abbe3463e2361600e3eac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29876, "upload_time": "2014-11-04T09:48:11", "upload_time_iso_8601": "2014-11-04T09:48:11.986771Z", "url": "https://files.pythonhosted.org/packages/ca/9d/f27a33ba98dc14115d8971cd92c5d171714c7c39d037e1bc64a32e9fe36a/datapackage-0.4.3.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "74c9733e1dbdc451e02ba9d2adea6a55", "sha256": "ba4641b7a2c791ae0cad911555e1d6e4c3c2edb02591f6a3a99f653a4119b04c"}, "downloads": -1, "filename": "datapackage-0.5.0.tar.gz", "has_sig": false, "md5_digest": "74c9733e1dbdc451e02ba9d2adea6a55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30839, "upload_time": "2015-04-09T00:56:00", "upload_time_iso_8601": "2015-04-09T00:56:00.915309Z", "url": "https://files.pythonhosted.org/packages/d9/7c/3e0b8a8962ae9db8ffd9b97062fe80c62c945cd231585812e79dfae21bf9/datapackage-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "5e8aa040c2714e27990ffa81d647d4d7", "sha256": "7a3874b20a94a881f08f2a35ede0cb870baf9baada1fdbfc0d6d2b70cd56fa26"}, "downloads": -1, "filename": "datapackage-0.5.1.tar.gz", "has_sig": false, "md5_digest": "5e8aa040c2714e27990ffa81d647d4d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30953, "upload_time": "2015-04-09T01:08:08", "upload_time_iso_8601": "2015-04-09T01:08:08.464238Z", "url": "https://files.pythonhosted.org/packages/a1/59/734c415efaecd6f9058e96c69f91d8037393878676c5dee88e7639989d51/datapackage-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "4bbb8c188491dd9ec42a1065730055c1", "sha256": "c2402e0163840ce95074bfc21394ab76b001d7921f7f8ca85292abcd535f9687"}, "downloads": -1, "filename": "datapackage-0.5.2.tar.gz", "has_sig": false, "md5_digest": "4bbb8c188491dd9ec42a1065730055c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30992, "upload_time": "2015-04-29T11:57:05", "upload_time_iso_8601": "2015-04-29T11:57:05.522627Z", "url": "https://files.pythonhosted.org/packages/d5/51/3cddfb5ec5b70cd85d4ba83959879cb96d53dc10c2e3a077b6efe2bbda20/datapackage-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "c44580e6674bc9635b192ccafa177807", "sha256": "8eed73983566bd18e14a9b006e58f29a8c2c9eb5d050cdf5336ffde70196b07e"}, "downloads": -1, "filename": "datapackage-0.5.3.tar.gz", "has_sig": false, "md5_digest": "c44580e6674bc9635b192ccafa177807", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31510, "upload_time": "2015-08-21T16:30:37", "upload_time_iso_8601": "2015-08-21T16:30:37.870246Z", "url": "https://files.pythonhosted.org/packages/f7/4e/8fc5a9a7e98d8cb4ac579faacfd1bf037684650ad0d6baac553eab9b26ff/datapackage-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "66dd01a89fa803c8360378672f88de55", "sha256": "0cee88425a1d4bd205d90b8f24558bc6ecc411f48755a6c42eb1cbf1b2cab064"}, "downloads": -1, "filename": "datapackage-0.5.4.tar.gz", "has_sig": false, "md5_digest": "66dd01a89fa803c8360378672f88de55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35213, "upload_time": "2015-09-10T23:03:10", "upload_time_iso_8601": "2015-09-10T23:03:10.449068Z", "url": "https://files.pythonhosted.org/packages/c9/b6/fb2c064ef598bac506e470ae4ae6a9d75584a1d68b3eb7bc5d7d7540688c/datapackage-0.5.4.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "35cb7f79544529a23864048ff4ad915b", "sha256": "16ab64499b44302ff9aecf9db9425b42702c164b633768c1a2e72a0b9610773b"}, "downloads": -1, "filename": "datapackage-0.6.0.tar.gz", "has_sig": false, "md5_digest": "35cb7f79544529a23864048ff4ad915b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21014, "upload_time": "2016-05-03T10:51:58", "upload_time_iso_8601": "2016-05-03T10:51:58.976978Z", "url": "https://files.pythonhosted.org/packages/5b/65/188966360bc65eb2d3e652bf9e3ac2b488973171ea01f7e69d31acbe6306/datapackage-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "4dea0587e68b93862e029fd0f1276af7", "sha256": "67fe2c8561da464583f1c0611a1e49585fbafdde9148ed2b17bde78d0ce89c9e"}, "downloads": -1, "filename": "datapackage-0.6.1.tar.gz", "has_sig": false, "md5_digest": "4dea0587e68b93862e029fd0f1276af7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20884, "upload_time": "2016-05-24T16:56:15", "upload_time_iso_8601": "2016-05-24T16:56:15.209528Z", "url": "https://files.pythonhosted.org/packages/57/4e/ee7e0516db319cbe59629d4ee35c68b215bef9bda4e67599725a3f4f664b/datapackage-0.6.1.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "8888181ac68f31786cac65eef8b5f3b2", "sha256": "4e8648e0245d0c4bb967140b82780a865a1d4c70662f2df56f6c09b4fb53d200"}, "downloads": -1, "filename": "datapackage-0.7.0.tar.gz", "has_sig": false, "md5_digest": "8888181ac68f31786cac65eef8b5f3b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20871, "upload_time": "2016-07-18T14:56:25", "upload_time_iso_8601": "2016-07-18T14:56:25.342415Z", "url": "https://files.pythonhosted.org/packages/4f/75/c81088897f8e021725872cdd080610e1c7ad3296648a9d4e2adc59fa75d1/datapackage-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "20f60963b5211ad5c6f8cace0d1c032d", "sha256": "0c28738cdf143119fb9b68153bc9ce5d4c69045a8d070fae9752e421c38b656e"}, "downloads": -1, "filename": "datapackage-0.8.0.tar.gz", "has_sig": false, "md5_digest": "20f60963b5211ad5c6f8cace0d1c032d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21009, "upload_time": "2016-07-18T15:42:18", "upload_time_iso_8601": "2016-07-18T15:42:18.906668Z", "url": "https://files.pythonhosted.org/packages/46/ad/55c63dac9c1ab89eb865698ee8cf618e1cd0ac745d9837901b61aff1014a/datapackage-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "c4c1a18f4ed27fc3d06105fb47d4570a", "sha256": "f97a92df4eec7a272f6f3c0f999acc5d9da84e162700196ed1c7b702dd75a61b"}, "downloads": -1, "filename": "datapackage-0.8.1.tar.gz", "has_sig": false, "md5_digest": "c4c1a18f4ed27fc3d06105fb47d4570a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20855, "upload_time": "2016-08-16T09:37:03", "upload_time_iso_8601": "2016-08-16T09:37:03.508778Z", "url": "https://files.pythonhosted.org/packages/ef/4e/67be75caf499cdcb66924838f6020372c95f7b1b3c5f9e10fd8f831fd7f9/datapackage-0.8.1.tar.gz", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "4b5e36316ab4b13f2581d3505986bba0", "sha256": "1228b2e556617f0a58e4f3a8059fd195bc467132e74759c1c970cb86c5fee90b"}, "downloads": -1, "filename": "datapackage-0.8.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4b5e36316ab4b13f2581d3505986bba0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28017, "upload_time": "2016-10-28T19:54:42", "upload_time_iso_8601": "2016-10-28T19:54:42.049818Z", "url": "https://files.pythonhosted.org/packages/6c/6c/9ff9469e3f104c6f8bf15cade0c3320d6187418891c39fbac4f19c6b1f18/datapackage-0.8.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d5efa351a514cd862fb7b02728e6d5a", "sha256": "2d80aeac97c27556b4a88842120517584917b3e88c9872d9b0ea8e498008c9fc"}, "downloads": -1, "filename": "datapackage-0.8.4.tar.gz", "has_sig": false, "md5_digest": "9d5efa351a514cd862fb7b02728e6d5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19012, "upload_time": "2016-10-28T19:54:44", "upload_time_iso_8601": "2016-10-28T19:54:44.207189Z", "url": "https://files.pythonhosted.org/packages/c4/9b/4314c12305a4267fcd525a17f218ef62bd8c61fe03e59c8a5076b12bdb20/datapackage-0.8.4.tar.gz", "yanked": false}], "0.8.5": [{"comment_text": "", "digests": {"md5": "ebec51e3282e4200b700f5bd4dec4c29", "sha256": "488dcc572be3ff9445b1f6d1c1198e7227427fc5f70cdda9e32d20520badd33d"}, "downloads": -1, "filename": "datapackage-0.8.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ebec51e3282e4200b700f5bd4dec4c29", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28084, "upload_time": "2016-12-13T17:13:46", "upload_time_iso_8601": "2016-12-13T17:13:46.289876Z", "url": "https://files.pythonhosted.org/packages/9b/15/a70aa6d22bdf9a5a41efecf6757269ca4f2aac167ef89393c112e33c9336/datapackage-0.8.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "099cff8cd45ff1472611053f6ade505e", "sha256": "ba26e1322fa01f9c3ccba263ca7fe9804c9ba1c24e4f5a02d01c24d41d348ee6"}, "downloads": -1, "filename": "datapackage-0.8.5.tar.gz", "has_sig": false, "md5_digest": "099cff8cd45ff1472611053f6ade505e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19082, "upload_time": "2016-12-13T17:13:47", "upload_time_iso_8601": "2016-12-13T17:13:47.571418Z", "url": "https://files.pythonhosted.org/packages/0e/a3/2c1a4b8c47c0e9a70d0f646c5bbb382a399e55337ff711377a1a38a18938/datapackage-0.8.5.tar.gz", "yanked": false}], "0.8.6": [{"comment_text": "", "digests": {"md5": "48bab71d7bbbb398ef822ff89374d655", "sha256": "76bc519b03f50190955d41b10398024ba6c9a126c362238aae69b8b2fc39050e"}, "downloads": -1, "filename": "datapackage-0.8.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "48bab71d7bbbb398ef822ff89374d655", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28222, "upload_time": "2017-02-07T08:39:45", "upload_time_iso_8601": "2017-02-07T08:39:45.429421Z", "url": "https://files.pythonhosted.org/packages/12/87/5518e37ea862398bbfc6b3af826a239c7dba8fb8e31cc581f8de2d85597d/datapackage-0.8.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b2375687f5446975e2a0384d16e1b2f", "sha256": "76daed2c52d4ea78e0b586dc8df4bda963c593ae51cb1c8704d4ac2656484e0c"}, "downloads": -1, "filename": "datapackage-0.8.6.tar.gz", "has_sig": false, "md5_digest": "0b2375687f5446975e2a0384d16e1b2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19207, "upload_time": "2017-02-07T08:39:47", "upload_time_iso_8601": "2017-02-07T08:39:47.125605Z", "url": "https://files.pythonhosted.org/packages/5d/d3/4e532d0a34288aa44c3caee3b349e193f7d76402cedf2a9d6d33f2f788f5/datapackage-0.8.6.tar.gz", "yanked": false}], "0.8.7": [{"comment_text": "", "digests": {"md5": "6cc8a35845a6b9290bcc02dfad00202e", "sha256": "0bc9b796e6f8dcccc9291ed7686c92d31edb2eb848f99d0c7ca232e12d7546a2"}, "downloads": -1, "filename": "datapackage-0.8.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6cc8a35845a6b9290bcc02dfad00202e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28223, "upload_time": "2017-03-02T10:26:43", "upload_time_iso_8601": "2017-03-02T10:26:43.319008Z", "url": "https://files.pythonhosted.org/packages/b5/58/d0047e4e36e88d7f4499df587318f5a1049555f8402de053a659e95add1d/datapackage-0.8.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9e4d2c247630e14684682c742539dd2", "sha256": "070b49d50c87b396abb0e0624970a13ddec735ec0fdb11cdf24fa887eafd71f4"}, "downloads": -1, "filename": "datapackage-0.8.7.tar.gz", "has_sig": false, "md5_digest": "a9e4d2c247630e14684682c742539dd2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19207, "upload_time": "2017-03-02T10:26:44", "upload_time_iso_8601": "2017-03-02T10:26:44.975707Z", "url": "https://files.pythonhosted.org/packages/81/19/f71ba0e7b55e61758f90d532d00da13a649c3cacebfeee92624816707ccf/datapackage-0.8.7.tar.gz", "yanked": false}], "0.8.8": [{"comment_text": "", "digests": {"md5": "3645b88e646a22783661338bea342d12", "sha256": "47903576dfc750dec02aef96a4b655512a0658573606c4754071f483837ac8af"}, "downloads": -1, "filename": "datapackage-0.8.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3645b88e646a22783661338bea342d12", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28264, "upload_time": "2017-03-31T20:22:26", "upload_time_iso_8601": "2017-03-31T20:22:26.760785Z", "url": "https://files.pythonhosted.org/packages/bf/a0/16e1793a61e6e62c098d2d9d02451ea163d8e6043c6fc04198436a4123e7/datapackage-0.8.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb4d023676b2112177b23ab9176d23c6", "sha256": "f03fd1a9ec8201cad57b227e697abfa857d9d31665d7ae7edfcf4887078a3346"}, "downloads": -1, "filename": "datapackage-0.8.8.tar.gz", "has_sig": false, "md5_digest": "eb4d023676b2112177b23ab9176d23c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19323, "upload_time": "2017-03-31T20:22:28", "upload_time_iso_8601": "2017-03-31T20:22:28.118381Z", "url": "https://files.pythonhosted.org/packages/55/1c/0493964338ff08081a9ca9eda5875017bc92d68d259970999ac8da006f25/datapackage-0.8.8.tar.gz", "yanked": false}], "0.8.9": [{"comment_text": "", "digests": {"md5": "e619a7fc5dc2a1d5e811e8c187f0a53d", "sha256": "b3805ba4091414b38d7b76ba2dfd1ed00b90446ec077dfd16f1d83e622eb52eb"}, "downloads": -1, "filename": "datapackage-0.8.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e619a7fc5dc2a1d5e811e8c187f0a53d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28269, "upload_time": "2017-05-25T09:26:16", "upload_time_iso_8601": "2017-05-25T09:26:16.915914Z", "url": "https://files.pythonhosted.org/packages/70/00/7768cbf7d46ba16eb8ffde9664c5a96e615aa2ee0a315e7054c9a5eda4a9/datapackage-0.8.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c346d9708fd4ed63fcd3cfd2d9397cc", "sha256": "bb6e5a2e3f991f27de06db57c940f85f3e2a762747a8b4165800e8ecc267f2c6"}, "downloads": -1, "filename": "datapackage-0.8.9.tar.gz", "has_sig": false, "md5_digest": "3c346d9708fd4ed63fcd3cfd2d9397cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19325, "upload_time": "2017-05-25T09:26:18", "upload_time_iso_8601": "2017-05-25T09:26:18.764727Z", "url": "https://files.pythonhosted.org/packages/36/44/08ab32e01b2eb340217fcf6313b1adf73c1332ab9a64da5aa55a536b842b/datapackage-0.8.9.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "05b40dee47ad3c687b297938c8288a2d", "sha256": "f0be54e3d0e0f9442a9bdb7fed6142dddb5b4d95a1acd4d783fbe27f78ab5a0a"}, "downloads": -1, "filename": "datapackage-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "05b40dee47ad3c687b297938c8288a2d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 80830, "upload_time": "2017-09-04T09:55:51", "upload_time_iso_8601": "2017-09-04T09:55:51.782187Z", "url": "https://files.pythonhosted.org/packages/43/17/f845c2b9db80c40a6e3a3dfab3602e8a8478c5aa5010cbcfd49486cb6422/datapackage-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77250abf35e66f47e5912e3f96d6b79f", "sha256": "b21a835c54af617e4c986c64a342987d20847daa539383383a2991db9ebc2ab2"}, "downloads": -1, "filename": "datapackage-1.0.0.tar.gz", "has_sig": false, "md5_digest": "77250abf35e66f47e5912e3f96d6b79f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76306, "upload_time": "2017-09-04T09:55:53", "upload_time_iso_8601": "2017-09-04T09:55:53.602758Z", "url": "https://files.pythonhosted.org/packages/e3/c0/23667060c721b31db84604ad2139f3b742321f4361cafccf1107887f0805/datapackage-1.0.0.tar.gz", "yanked": false}], "1.0.0a10": [{"comment_text": "", "digests": {"md5": "916b2fc8921b6b880f4ca9e985c15b7b", "sha256": "916db59fd02722e31dbc7bdc803384f397f92a392f2957c0a72f0309571331b3"}, "downloads": -1, "filename": "datapackage-1.0.0a10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "916b2fc8921b6b880f4ca9e985c15b7b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 78572, "upload_time": "2017-08-21T16:07:45", "upload_time_iso_8601": "2017-08-21T16:07:45.416690Z", "url": "https://files.pythonhosted.org/packages/8d/9f/b59ddd4c7b944ea42855547bc8b622537ddc2cac18409460cfa6f19c4f33/datapackage-1.0.0a10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2afe005d2aaa819cffadd2faf32743a9", "sha256": "5111e7f5bdd7091436fc36be5fc465a1a779b9d3c38b222d17c7cf3f325486d8"}, "downloads": -1, "filename": "datapackage-1.0.0a10.tar.gz", "has_sig": false, "md5_digest": "2afe005d2aaa819cffadd2faf32743a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72100, "upload_time": "2017-08-21T16:07:46", "upload_time_iso_8601": "2017-08-21T16:07:46.859515Z", "url": "https://files.pythonhosted.org/packages/58/4c/363eb3343578625b222a6017a6918155f40ff15c0a044a004254300ab20b/datapackage-1.0.0a10.tar.gz", "yanked": false}], "1.0.0a11": [{"comment_text": "", "digests": {"md5": "10450378bcf5a3bb0f0581c0f773aaf1", "sha256": "6cb3ff55d64b99fd71658d7db35ba363af2ad3500ceb01afa8b2e01a9ded57ae"}, "downloads": -1, "filename": "datapackage-1.0.0a11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "10450378bcf5a3bb0f0581c0f773aaf1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 78581, "upload_time": "2017-08-22T07:35:02", "upload_time_iso_8601": "2017-08-22T07:35:02.825061Z", "url": "https://files.pythonhosted.org/packages/56/80/14679325fca742f21d2b9446460a6b7f0fb77f5680d30272e010fd66ebcf/datapackage-1.0.0a11-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a2c11f92cc699fe80387f2578b50c61", "sha256": "4060c4aaff0aeae93992590efe399ee9937152439794e69a0163a29a4c0628f3"}, "downloads": -1, "filename": "datapackage-1.0.0a11.tar.gz", "has_sig": false, "md5_digest": "9a2c11f92cc699fe80387f2578b50c61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72117, "upload_time": "2017-08-22T07:35:04", "upload_time_iso_8601": "2017-08-22T07:35:04.270045Z", "url": "https://files.pythonhosted.org/packages/e2/93/4e6e725ebdde3f889bd4e786e762703ce921a57df1cd83c0f60ad359540d/datapackage-1.0.0a11.tar.gz", "yanked": false}], "1.0.0a12": [{"comment_text": "", "digests": {"md5": "4cecec20abae694ad5a5ee8a81fcfcbd", "sha256": "b6f3a6db2860c5a5f54930632e5c79bfe30df5675d992b4c6517d88d02a1beed"}, "downloads": -1, "filename": "datapackage-1.0.0a12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4cecec20abae694ad5a5ee8a81fcfcbd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 78766, "upload_time": "2017-08-29T13:48:58", "upload_time_iso_8601": "2017-08-29T13:48:58.383880Z", "url": "https://files.pythonhosted.org/packages/e3/64/81d7ed7054ff1f9fd6e98baa0f452527d6d5cd465d4cf4c6d697e4a9752e/datapackage-1.0.0a12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d22272d46f530125d640f69ed3a69a0e", "sha256": "e46896d7781f46829b4619bdb67d579454a92377455f6c920c3c766b918f668a"}, "downloads": -1, "filename": "datapackage-1.0.0a12.tar.gz", "has_sig": false, "md5_digest": "d22272d46f530125d640f69ed3a69a0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72373, "upload_time": "2017-08-29T13:49:00", "upload_time_iso_8601": "2017-08-29T13:49:00.015352Z", "url": "https://files.pythonhosted.org/packages/8d/f3/610181f6c06cd579f6ce4b9df1d62cd5a4d19674eab08959afe7cc45848a/datapackage-1.0.0a12.tar.gz", "yanked": false}], "1.0.0a13": [{"comment_text": "", "digests": {"md5": "c1bfdb5ba23debde6ed8757a57bed410", "sha256": "e51e8206ebc4f99f4d1b4965742b995f79f8ecb404535798dad8a2c156f87214"}, "downloads": -1, "filename": "datapackage-1.0.0a13-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c1bfdb5ba23debde6ed8757a57bed410", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 78908, "upload_time": "2017-08-30T11:16:27", "upload_time_iso_8601": "2017-08-30T11:16:27.605784Z", "url": "https://files.pythonhosted.org/packages/9e/ca/d83c8ed1d4f20c792cfddc34f5bfe76589cbea708c7f52b8c3c1012d8959/datapackage-1.0.0a13-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "205fee3d9dbfe39c6b69e5eb202dabaa", "sha256": "f06bc2f42c4195e62cf730c2d35414e92c8bb79dea9a5f4823e6091a174fe216"}, "downloads": -1, "filename": "datapackage-1.0.0a13.tar.gz", "has_sig": false, "md5_digest": "205fee3d9dbfe39c6b69e5eb202dabaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72554, "upload_time": "2017-08-30T11:16:30", "upload_time_iso_8601": "2017-08-30T11:16:30.167402Z", "url": "https://files.pythonhosted.org/packages/2b/a0/fc011e02aa4353df327c78a4a71522ade5165c8f9e4c0173b3f30d5fc2ed/datapackage-1.0.0a13.tar.gz", "yanked": false}], "1.0.0a14": [{"comment_text": "", "digests": {"md5": "852eb9fed13e7434694498134e58bb50", "sha256": "692ed7b3d0ee5405f66078e9ea2fd9be2631da1465b3e3c212bf98c663c17448"}, "downloads": -1, "filename": "datapackage-1.0.0a14-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "852eb9fed13e7434694498134e58bb50", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 80824, "upload_time": "2017-08-31T19:52:41", "upload_time_iso_8601": "2017-08-31T19:52:41.198104Z", "url": "https://files.pythonhosted.org/packages/d3/a7/965002ad3f1202824b5b425af2e6775105a71533bdb5393daeb21a356cb6/datapackage-1.0.0a14-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5c40057f4da43f00a5dfbf0930ec9b4", "sha256": "f00c4f2c37b64c8c526ea2d26a4456e91994b8c3ec23683c38361b1f72f71bda"}, "downloads": -1, "filename": "datapackage-1.0.0a14.tar.gz", "has_sig": false, "md5_digest": "d5c40057f4da43f00a5dfbf0930ec9b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76205, "upload_time": "2017-08-31T19:52:43", "upload_time_iso_8601": "2017-08-31T19:52:43.915936Z", "url": "https://files.pythonhosted.org/packages/19/36/c70b2aa95761c3f196b08cacc3112428861e131fee83c7d5f4d43271487e/datapackage-1.0.0a14.tar.gz", "yanked": false}], "1.0.0a2": [{"comment_text": "", "digests": {"md5": "5ffacdab00edf9207e90bb599af0ec84", "sha256": "486747d08e1758472dc114d8bbb08c736f4179bb926c839f0ae30aee5164c564"}, "downloads": -1, "filename": "datapackage-1.0.0a2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5ffacdab00edf9207e90bb599af0ec84", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19963, "upload_time": "2017-04-18T13:22:32", "upload_time_iso_8601": "2017-04-18T13:22:32.219171Z", "url": "https://files.pythonhosted.org/packages/f8/ee/696b48261228cbcdf32ed7f7306e41a08b52591cc2a26c6747fc6393a998/datapackage-1.0.0a2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ca27e56d8421bc981aee81637068db1", "sha256": "3a4d65939e469903f4a3f56057093a5a1425e42daad6981376729a32f8aad57a"}, "downloads": -1, "filename": "datapackage-1.0.0a2.tar.gz", "has_sig": false, "md5_digest": "1ca27e56d8421bc981aee81637068db1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14714, "upload_time": "2017-04-18T13:22:34", "upload_time_iso_8601": "2017-04-18T13:22:34.053435Z", "url": "https://files.pythonhosted.org/packages/45/bd/b8df377dc0638080867844e56a31b79403218dbbab5aad153e9700991f91/datapackage-1.0.0a2.tar.gz", "yanked": false}], "1.0.0a3": [{"comment_text": "", "digests": {"md5": "f28e2a9518f69a1ee2c1a58732a38b5d", "sha256": "38e90979523c549952b799c0511945bada26a35510b9fa2b34f6096edb6fa84f"}, "downloads": -1, "filename": "datapackage-1.0.0a3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f28e2a9518f69a1ee2c1a58732a38b5d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 55216, "upload_time": "2017-05-03T13:40:29", "upload_time_iso_8601": "2017-05-03T13:40:29.924382Z", "url": "https://files.pythonhosted.org/packages/e6/ca/a1481f60113bfbbb34e212833482dc5f288060b4531ed5dd392f134d42b9/datapackage-1.0.0a3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d361825b85d27f454390eedf5d61bb2", "sha256": "17986fd8cd50f4d05dc924546222832830bb092fa215c66c2df0421ec5e5c062"}, "downloads": -1, "filename": "datapackage-1.0.0a3.tar.gz", "has_sig": false, "md5_digest": "9d361825b85d27f454390eedf5d61bb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102459, "upload_time": "2017-05-03T13:40:31", "upload_time_iso_8601": "2017-05-03T13:40:31.631231Z", "url": "https://files.pythonhosted.org/packages/20/77/e8fe3644fde423668afd650ac2af690b0bf1dd20f8048f87798e1e3cd68d/datapackage-1.0.0a3.tar.gz", "yanked": false}], "1.0.0a4": [{"comment_text": "", "digests": {"md5": "68aaa8f64d34347cbcd65acb6b3b943b", "sha256": "d72d1b4f9a825fc67323bdcfb27ae9505550933c10213d84c11fcdc5258dfc60"}, "downloads": -1, "filename": "datapackage-1.0.0a4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "68aaa8f64d34347cbcd65acb6b3b943b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 55241, "upload_time": "2017-05-03T14:25:53", "upload_time_iso_8601": "2017-05-03T14:25:53.150984Z", "url": "https://files.pythonhosted.org/packages/23/b9/9d1bbfde9674701230663f0f90e8f5f3aab66f9d04c1dbaaa3cc1a579358/datapackage-1.0.0a4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "691460ec22df8a766c5de48775e9b3d5", "sha256": "39343200a52a8dcb145e3610eb77132698116750f145c137befec779303a7c82"}, "downloads": -1, "filename": "datapackage-1.0.0a4.tar.gz", "has_sig": false, "md5_digest": "691460ec22df8a766c5de48775e9b3d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102470, "upload_time": "2017-05-03T14:25:55", "upload_time_iso_8601": "2017-05-03T14:25:55.129509Z", "url": "https://files.pythonhosted.org/packages/14/fe/abd77353e5dde9099f11694f6bd7d2c13c70baf4d797a66de2c81f743f82/datapackage-1.0.0a4.tar.gz", "yanked": false}], "1.0.0a5": [{"comment_text": "", "digests": {"md5": "01f9d709468d3ad1c736827c81305cbd", "sha256": "6d104bc43dd5b8b0861ae1e4f793eac3cc8cc6fd0901c06f0ccbb5e511a3c662"}, "downloads": -1, "filename": "datapackage-1.0.0a5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "01f9d709468d3ad1c736827c81305cbd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 55246, "upload_time": "2017-05-13T10:43:17", "upload_time_iso_8601": "2017-05-13T10:43:17.000662Z", "url": "https://files.pythonhosted.org/packages/f9/74/0fb9e41590805a2bba7a7eb599ce225f20636e2e4d5cd9169f012b8a6b82/datapackage-1.0.0a5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e582d475cbd0f6842ce5d5b9dee0226e", "sha256": "dfd177d799de3374ace5dc2a2ab26cb6ffb00596bd8fa0f659072084793d35f6"}, "downloads": -1, "filename": "datapackage-1.0.0a5.tar.gz", "has_sig": false, "md5_digest": "e582d475cbd0f6842ce5d5b9dee0226e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102538, "upload_time": "2017-05-13T10:43:19", "upload_time_iso_8601": "2017-05-13T10:43:19.088657Z", "url": "https://files.pythonhosted.org/packages/f6/cf/8dd699d1bdc1cde270e642729553fe96190c7350908bc2916dde219a41a0/datapackage-1.0.0a5.tar.gz", "yanked": false}], "1.0.0a6": [{"comment_text": "", "digests": {"md5": "43263fef5b3b9c0f553655f74e700b59", "sha256": "e946c439220318d986277423e8f8a629d82d542ae66f8a9ab81f00005b4b18b8"}, "downloads": -1, "filename": "datapackage-1.0.0a6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "43263fef5b3b9c0f553655f74e700b59", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 55216, "upload_time": "2017-05-25T09:06:15", "upload_time_iso_8601": "2017-05-25T09:06:15.431825Z", "url": "https://files.pythonhosted.org/packages/50/31/2d12d8ed8abc9708d22bcae2a4fd7425b9e6129b26f83579edfb5a09ed05/datapackage-1.0.0a6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a25fe915c862f9bb798426ffa9a5099", "sha256": "e42a11ec69db27580bcf9b0787aee2e1187d297a238e53f8fb2aebff547047d5"}, "downloads": -1, "filename": "datapackage-1.0.0a6.tar.gz", "has_sig": false, "md5_digest": "2a25fe915c862f9bb798426ffa9a5099", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102288, "upload_time": "2017-05-25T09:06:17", "upload_time_iso_8601": "2017-05-25T09:06:17.077750Z", "url": "https://files.pythonhosted.org/packages/6b/a4/9e53f2ff4d9cf4d7bc171691ddc4b3a3fdd8e84d8c2019a9a7ff1a59189a/datapackage-1.0.0a6.tar.gz", "yanked": false}], "1.0.0a8": [{"comment_text": "", "digests": {"md5": "7a964dd471c5aa117512b5f189d34405", "sha256": "79066f8b107b18c9efd36b5901e68a591ce1965e6c44871eab09366d1bb23320"}, "downloads": -1, "filename": "datapackage-1.0.0a8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7a964dd471c5aa117512b5f189d34405", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 78479, "upload_time": "2017-08-21T09:18:26", "upload_time_iso_8601": "2017-08-21T09:18:26.605624Z", "url": "https://files.pythonhosted.org/packages/8a/e6/71db083b82820ebe993842143f8f64f2a60a5b65f02957089b4fb8c955fd/datapackage-1.0.0a8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bff2a5cdc63b498f60d631dbda6aa47c", "sha256": "158f6d6e201d693941be673adda5f1ba0fc8b8fda5b851759d937da6ca4caa3c"}, "downloads": -1, "filename": "datapackage-1.0.0a8.tar.gz", "has_sig": false, "md5_digest": "bff2a5cdc63b498f60d631dbda6aa47c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72071, "upload_time": "2017-08-21T09:18:28", "upload_time_iso_8601": "2017-08-21T09:18:28.594833Z", "url": "https://files.pythonhosted.org/packages/cc/14/6608bdeff3e8cd8ebce984f9dbf2aacdbddecd9a9652f2ce83278f02aca5/datapackage-1.0.0a8.tar.gz", "yanked": false}], "1.0.0a9": [{"comment_text": "", "digests": {"md5": "89ab7bba0d8396df993cd7008c123653", "sha256": "d25aa021a068a3487393fd9e40487480297b0531e5a9853efe4d40f672d8d436"}, "downloads": -1, "filename": "datapackage-1.0.0a9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "89ab7bba0d8396df993cd7008c123653", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 78443, "upload_time": "2017-08-21T14:47:43", "upload_time_iso_8601": "2017-08-21T14:47:43.446408Z", "url": "https://files.pythonhosted.org/packages/0a/cd/466dca75a5a4111cd36c066b881aaac2f1942b006715e2fa051094addcf3/datapackage-1.0.0a9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "753aaa98e097f24ca94f75e1712b2b62", "sha256": "5fc123b42707f0229ee83b609a5a931f77100aef42bdb0342cc4e48aa23e709b"}, "downloads": -1, "filename": "datapackage-1.0.0a9.tar.gz", "has_sig": false, "md5_digest": "753aaa98e097f24ca94f75e1712b2b62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71985, "upload_time": "2017-08-21T14:47:44", "upload_time_iso_8601": "2017-08-21T14:47:44.966430Z", "url": "https://files.pythonhosted.org/packages/f7/2b/4e6e60321445173b736772cc6a8f4b2af4b90956bec9e301c7a14d5be8aa/datapackage-1.0.0a9.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "d37861a51f24cb603c663f16d07c807e", "sha256": "bcb323b6559ad96fa4e43d39b0097045a7fb7cf1e6c051909139df090122d03f"}, "downloads": -1, "filename": "datapackage-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d37861a51f24cb603c663f16d07c807e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 80873, "upload_time": "2017-09-06T14:28:22", "upload_time_iso_8601": "2017-09-06T14:28:22.751879Z", "url": "https://files.pythonhosted.org/packages/66/ac/df3e164757d6754bff02078b03c907c8309bb50378e3f45e2946338cd46f/datapackage-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9371a215baaa819bb409706dada38acb", "sha256": "2547733b32578b66b0c7199b1eb84e5b5283fcfeb3818036bd3adf0fb8c88053"}, "downloads": -1, "filename": "datapackage-1.0.1.tar.gz", "has_sig": false, "md5_digest": "9371a215baaa819bb409706dada38acb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76362, "upload_time": "2017-09-06T14:28:24", "upload_time_iso_8601": "2017-09-06T14:28:24.842460Z", "url": "https://files.pythonhosted.org/packages/e7/5d/0aa11dcb58a599481291faeba5858e1434f2b649955611d962f7945c2ade/datapackage-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "65b29bd16688208d7b26ea45b9efbd56", "sha256": "3b2777711e76ab1aa81cc21dd276ca8fa59d29afb00fcb6a6923d523b9801b17"}, "downloads": -1, "filename": "datapackage-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "65b29bd16688208d7b26ea45b9efbd56", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 80892, "upload_time": "2017-09-11T10:06:47", "upload_time_iso_8601": "2017-09-11T10:06:47.442155Z", "url": "https://files.pythonhosted.org/packages/ff/1b/b8b8755e3789c0ff49e8eb6bb78d39442d0207492805e2e2f6d9c22c01ff/datapackage-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce175b9c5a474f917f7667de307be435", "sha256": "d60695df3f65b0a48e2dd081b8279729f3e536e4d28545c455dcda9fb78c1a31"}, "downloads": -1, "filename": "datapackage-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ce175b9c5a474f917f7667de307be435", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76720, "upload_time": "2017-09-11T10:06:49", "upload_time_iso_8601": "2017-09-11T10:06:49.332857Z", "url": "https://files.pythonhosted.org/packages/0d/28/d55b7bf5b66f936e9ace6cb31806b183ca67240531e6f81ad72f3ac2fc17/datapackage-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "f6ec31a49c19ba45cc03fc3cd5b7fe5d", "sha256": "4e8278bd7b5578581dd9caf2be04505e6bbee1c97fff8408d31007d001b0a142"}, "downloads": -1, "filename": "datapackage-1.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f6ec31a49c19ba45cc03fc3cd5b7fe5d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 80897, "upload_time": "2017-09-18T12:22:59", "upload_time_iso_8601": "2017-09-18T12:22:59.406204Z", "url": "https://files.pythonhosted.org/packages/15/e6/521333c932973a7f5323810415948a161c1c59cc7ce14c07fae490a12cfe/datapackage-1.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63df7d19573c9fb57357fe9a8e8cd01e", "sha256": "6d106e9b6d55351cc90a8657d9dd48f1c5337232f9bdd7e8cd19c3d40920326b"}, "downloads": -1, "filename": "datapackage-1.0.3.tar.gz", "has_sig": false, "md5_digest": "63df7d19573c9fb57357fe9a8e8cd01e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76720, "upload_time": "2017-09-18T12:23:00", "upload_time_iso_8601": "2017-09-18T12:23:00.723801Z", "url": "https://files.pythonhosted.org/packages/68/3a/bcd91acfceb8bcfa2ea49860e7b17d8aa566aa57eec4695cbd7dcbcb8cb3/datapackage-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "9ac5bec019caf033d878a2a7f2c890bc", "sha256": "390bf4f3b62ad36fcafd65b19b9655eaa33f786a604afe5bcc0aa549f64d45ef"}, "downloads": -1, "filename": "datapackage-1.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9ac5bec019caf033d878a2a7f2c890bc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 81042, "upload_time": "2017-09-20T16:20:09", "upload_time_iso_8601": "2017-09-20T16:20:09.539858Z", "url": "https://files.pythonhosted.org/packages/e0/18/b36b9a9735a7599d7dbf29bc77e62c72a0318b72d0211d281df88391c22b/datapackage-1.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2aadd93b9700608d31aeb1339b6caa8a", "sha256": "7893422c0d99d58dbd4617b4fc6ab3654ad138335f995035b5d0e1ed5738d9a2"}, "downloads": -1, "filename": "datapackage-1.0.4.tar.gz", "has_sig": false, "md5_digest": "2aadd93b9700608d31aeb1339b6caa8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76834, "upload_time": "2017-09-20T16:20:10", "upload_time_iso_8601": "2017-09-20T16:20:10.995988Z", "url": "https://files.pythonhosted.org/packages/96/bf/3a93d05621e77799a80dfc6e43b11db6808132639349b6d6eb397ffbcf0f/datapackage-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "8e1d01e4eadd0669465f51736e82f965", "sha256": "9b2a209f3ccaf649c6bf97b1b4364a7ec76eed3757c2435bf792f683ffbec015"}, "downloads": -1, "filename": "datapackage-1.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8e1d01e4eadd0669465f51736e82f965", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 81135, "upload_time": "2017-09-28T07:13:05", "upload_time_iso_8601": "2017-09-28T07:13:05.698877Z", "url": "https://files.pythonhosted.org/packages/91/fc/f7df2690aca16ea35740ae0d48d3e2d862597e62f2ef4cd5b23409c3497b/datapackage-1.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb30b2ab3b293517d3fce79f0837caf1", "sha256": "407cca045aba10add52d5b6d613ee3c8db8fa47857f8788698c4d583b76017ac"}, "downloads": -1, "filename": "datapackage-1.0.5.tar.gz", "has_sig": false, "md5_digest": "cb30b2ab3b293517d3fce79f0837caf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76919, "upload_time": "2017-09-28T07:13:07", "upload_time_iso_8601": "2017-09-28T07:13:07.622089Z", "url": "https://files.pythonhosted.org/packages/69/dc/3e5fc59f7062f91ec3363f6fe48606c7098cd5393f832a788bada6334816/datapackage-1.0.5.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "2089b855a7088d20c8e73720d34deab3", "sha256": "75bf9359347406f28d7630c4acac56fafae1df9a55fd5176e36195b862e9b352"}, "downloads": -1, "filename": "datapackage-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2089b855a7088d20c8e73720d34deab3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 82193, "upload_time": "2017-10-01T09:22:37", "upload_time_iso_8601": "2017-10-01T09:22:37.581901Z", "url": "https://files.pythonhosted.org/packages/cf/0d/0ada6ab4a74a4e622db066567a0e8976e8e0b242b04f8e7a850d2097a36a/datapackage-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "135a8515903922389efba0a00feba040", "sha256": "1c4f240c50ed507eea0b09d9c3c514468af464325f2a20024904c6a745e9d113"}, "downloads": -1, "filename": "datapackage-1.1.0.tar.gz", "has_sig": false, "md5_digest": "135a8515903922389efba0a00feba040", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77792, "upload_time": "2017-10-01T09:22:39", "upload_time_iso_8601": "2017-10-01T09:22:39.153612Z", "url": "https://files.pythonhosted.org/packages/bf/9f/271ee7995f9cdbd88ebbe56b8f2fc8a034986ec4a0cf88104ed40359192f/datapackage-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "c6d478a89727d68c51dc2ec2333518a4", "sha256": "982da6ebd1d695b669a15004fccfb34e077579980ed32cb7007bca707c366ebf"}, "downloads": -1, "filename": "datapackage-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c6d478a89727d68c51dc2ec2333518a4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 82273, "upload_time": "2017-10-02T15:07:29", "upload_time_iso_8601": "2017-10-02T15:07:29.396766Z", "url": "https://files.pythonhosted.org/packages/01/ba/699add9dbe1ea69fd3e0ad90f2307d537b8cc2f533af0307b7c2566a97cc/datapackage-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af5d9969320edd083e125e3876807036", "sha256": "17cd24a88a26bc448e83a8c1e94ebfb2e76dd6c5cedd2e7b34dc19e12be49047"}, "downloads": -1, "filename": "datapackage-1.1.1.tar.gz", "has_sig": false, "md5_digest": "af5d9969320edd083e125e3876807036", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77857, "upload_time": "2017-10-02T15:07:31", "upload_time_iso_8601": "2017-10-02T15:07:31.654143Z", "url": "https://files.pythonhosted.org/packages/48/8a/7dc0f76082cbb981eedce66eb7d4737d8a436b581a16e8ae2d65f8b66628/datapackage-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "fb0ab260d13fb4985115bdcb2e356d5e", "sha256": "e37076d9fcf9c41eaabceedd5e7941f2a609e11230894f0545578bed1b4a2fff"}, "downloads": -1, "filename": "datapackage-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb0ab260d13fb4985115bdcb2e356d5e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 82278, "upload_time": "2017-10-03T16:12:49", "upload_time_iso_8601": "2017-10-03T16:12:49.702493Z", "url": "https://files.pythonhosted.org/packages/d7/2f/28f42f02377d700e7962f431c0bb918c41ee4e47229573a1ca015cfe4934/datapackage-1.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c1a170f9565337a6c272ca0b3990c88", "sha256": "837f20bb816aa26244487a27ee5abcefecbef5765cae218347242db74e385e50"}, "downloads": -1, "filename": "datapackage-1.1.2.tar.gz", "has_sig": false, "md5_digest": "3c1a170f9565337a6c272ca0b3990c88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77864, "upload_time": "2017-10-03T16:12:52", "upload_time_iso_8601": "2017-10-03T16:12:52.479649Z", "url": "https://files.pythonhosted.org/packages/e8/39/4547af66c4f84e597c2739ffe045ec836f924670f8a8d345f50966986be1/datapackage-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "756729b502e81b00db85ace3d256555b", "sha256": "b05f879d0395a64a0645ce7441ddbcea152cc5e4cc86f52ebd29d9a86cebae29"}, "downloads": -1, "filename": "datapackage-1.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "756729b502e81b00db85ace3d256555b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 82281, "upload_time": "2017-10-11T13:45:27", "upload_time_iso_8601": "2017-10-11T13:45:27.187911Z", "url": "https://files.pythonhosted.org/packages/6e/e4/734e216143388dc0d3d35fee32a222f570a161a6b5bd16f6683edeac95ca/datapackage-1.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51d2348b06290804251fb3e208185fa1", "sha256": "8672158914e77647055e32d030d3041c5103251d5a1ccd8f1df38c0cca7fc42d"}, "downloads": -1, "filename": "datapackage-1.1.3.tar.gz", "has_sig": false, "md5_digest": "51d2348b06290804251fb3e208185fa1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77872, "upload_time": "2017-10-11T13:45:28", "upload_time_iso_8601": "2017-10-11T13:45:28.325950Z", "url": "https://files.pythonhosted.org/packages/b8/34/3ee4d0962815c0d63368f7230be99af811e826b5a291af16bc9d83bf95fa/datapackage-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "6d5ada8291e80267eb2f5ffe9878dd2f", "sha256": "a03689d8a56824650a1801c18922d0aa4d1bcce1650589ece49cdedfaed502f9"}, "downloads": -1, "filename": "datapackage-1.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6d5ada8291e80267eb2f5ffe9878dd2f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 82333, "upload_time": "2017-10-12T07:57:18", "upload_time_iso_8601": "2017-10-12T07:57:18.012277Z", "url": "https://files.pythonhosted.org/packages/ad/4c/ad64d1755dd4b9fb111bcdab433fafcfcaaccb6fe817c3f98cf60a51566f/datapackage-1.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ae15b0720f4def85872738bd6be7813", "sha256": "723785434b178dd44548d594598a6f1eb51c7d3d2bc93c50b66a379816a5a20d"}, "downloads": -1, "filename": "datapackage-1.1.4.tar.gz", "has_sig": false, "md5_digest": "1ae15b0720f4def85872738bd6be7813", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77905, "upload_time": "2017-10-12T07:57:20", "upload_time_iso_8601": "2017-10-12T07:57:20.018030Z", "url": "https://files.pythonhosted.org/packages/c2/9f/c07536d05883dabab1eb78c05589ba6be7492f4549f66579b4e7cc3e964d/datapackage-1.1.4.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "5e1151c1744cec2797bd8ecefa225b5e", "sha256": "5d114791d2cd4a9b6509827acaac2f16f377057402dd9cdbc0c79108a86ae026"}, "downloads": -1, "filename": "datapackage-1.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5e1151c1744cec2797bd8ecefa225b5e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 82292, "upload_time": "2017-12-20T13:35:05", "upload_time_iso_8601": "2017-12-20T13:35:05.490999Z", "url": "https://files.pythonhosted.org/packages/b3/cf/0260a666427fe3050bfe76246acb1199542fecb9162fe664981df1fc9442/datapackage-1.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "321da23ebb229241490628f1c3323faa", "sha256": "c72353a9b37f24cd4b09098f26449a390f08a7b347c1c89d52373eb4ff00a786"}, "downloads": -1, "filename": "datapackage-1.1.5.tar.gz", "has_sig": false, "md5_digest": "321da23ebb229241490628f1c3323faa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79303, "upload_time": "2017-12-20T13:35:06", "upload_time_iso_8601": "2017-12-20T13:35:06.776803Z", "url": "https://files.pythonhosted.org/packages/38/8d/b7607e6946a674449328fc257b74e04200b54713f1f95132119db9c29089/datapackage-1.1.5.tar.gz", "yanked": false}], "1.10.0": [{"comment_text": "", "digests": {"md5": "0d9c667e523fa23bb6c9d20b8be64a99", "sha256": "4e07635d91e2b362cc557cc3e15d515f7b44e8b234e434d6ff8cbf3bdff3fc80"}, "downloads": -1, "filename": "datapackage-1.10.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0d9c667e523fa23bb6c9d20b8be64a99", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 79016, "upload_time": "2019-10-31T13:06:43", "upload_time_iso_8601": "2019-10-31T13:06:43.177430Z", "url": "https://files.pythonhosted.org/packages/08/62/63f8a7109e23ad3ee092d372a9fbd3e8b45fbe32f03d7edb2c25ad382e29/datapackage-1.10.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "740533561b7c56434f0eae3b3f0b8727", "sha256": "e9f7e223b7986b9785895ea160629c3a33c6a72a7d1fb0c1860fd400ee694e25"}, "downloads": -1, "filename": "datapackage-1.10.0.tar.gz", "has_sig": false, "md5_digest": "740533561b7c56434f0eae3b3f0b8727", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90346, "upload_time": "2019-10-31T13:06:45", "upload_time_iso_8601": "2019-10-31T13:06:45.637843Z", "url": "https://files.pythonhosted.org/packages/fa/63/caeeecb37590198a50d6f79ab9378f66b20dbf0dc353df3617ba985ebdd2/datapackage-1.10.0.tar.gz", "yanked": false}], "1.10.1": [{"comment_text": "", "digests": {"md5": "d01dd358f38bddddd5b69d05f1581779", "sha256": "c683e428c0cc1b21f840ac1fdcfe11db79c865f2d6d8b84f44f560bec3527529"}, "downloads": -1, "filename": "datapackage-1.10.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d01dd358f38bddddd5b69d05f1581779", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 84640, "upload_time": "2019-12-15T19:11:11", "upload_time_iso_8601": "2019-12-15T19:11:11.988508Z", "url": "https://files.pythonhosted.org/packages/54/1c/cf4bcf0acab33b3cc4466a6cd28c1308f634590251be76a3147629c7173f/datapackage-1.10.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6bd136d5da6edc0f039d70aa24e76974", "sha256": "1d6cb743c680814b7b5d6dc4fba3be226c437c95284a5984d6311f56379e3237"}, "downloads": -1, "filename": "datapackage-1.10.1.tar.gz", "has_sig": false, "md5_digest": "6bd136d5da6edc0f039d70aa24e76974", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98133, "upload_time": "2019-12-15T19:11:14", "upload_time_iso_8601": "2019-12-15T19:11:14.695562Z", "url": "https://files.pythonhosted.org/packages/03/c6/e2002a9b9b08a90ba4648d8803c79273c5cce8f87ca830d7a3acadb2b233/datapackage-1.10.1.tar.gz", "yanked": false}], "1.10.2": [{"comment_text": "", "digests": {"md5": "63e4a1461c923e4f43f84b1455f44d58", "sha256": "92ec6cf6a336fa91a9a3aacfb75354d87cf869c8d8e6b61984c7a3fad0f2a99c"}, "downloads": -1, "filename": "datapackage-1.10.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "63e4a1461c923e4f43f84b1455f44d58", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 84637, "upload_time": "2019-12-17T13:38:43", "upload_time_iso_8601": "2019-12-17T13:38:43.410262Z", "url": "https://files.pythonhosted.org/packages/be/35/35c61efd3420739893741bea8204b878bb6512251eaf02c7b2a4b017b0a1/datapackage-1.10.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac0fc4db4f22231f2528946ee0a04863", "sha256": "ed52f6b735acece87f90ca70655e377210dad4a2fef243d6a4316f09ab5649a6"}, "downloads": -1, "filename": "datapackage-1.10.2.tar.gz", "has_sig": false, "md5_digest": "ac0fc4db4f22231f2528946ee0a04863", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98144, "upload_time": "2019-12-17T13:38:45", "upload_time_iso_8601": "2019-12-17T13:38:45.584085Z", "url": "https://files.pythonhosted.org/packages/d2/f5/a14f3772138a9aa6d2e2b5612de226088c9b70518712bbc23cdaf0b30676/datapackage-1.10.2.tar.gz", "yanked": false}], "1.11.0": [{"comment_text": "", "digests": {"md5": "e964e0bb33faf91867693dfcb551ea8c", "sha256": "64c0c60ab13ad3c922e56b3c99f721738f0759b293858716abc6f3a3957fd120"}, "downloads": -1, "filename": "datapackage-1.11.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e964e0bb33faf91867693dfcb551ea8c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 84692, "upload_time": "2019-12-17T17:09:19", "upload_time_iso_8601": "2019-12-17T17:09:19.006676Z", "url": "https://files.pythonhosted.org/packages/11/6f/685b1e6d5f308dfccba8956dfc37618543e74d2b80adf2fee6e45a717877/datapackage-1.11.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6e7f73b23d933b56eb29a485ca7b1fc", "sha256": "39209fcaf1ac6e41b2166a3c07bc738ca6ec7557ad73ee5b51e42283e988ff24"}, "downloads": -1, "filename": "datapackage-1.11.0.tar.gz", "has_sig": false, "md5_digest": "e6e7f73b23d933b56eb29a485ca7b1fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98239, "upload_time": "2019-12-17T17:09:21", "upload_time_iso_8601": "2019-12-17T17:09:21.302945Z", "url": "https://files.pythonhosted.org/packages/7b/66/674faed45b284a56712fcdbf88795295eb935525d3dd31f2936512670f5a/datapackage-1.11.0.tar.gz", "yanked": false}], "1.11.1": [{"comment_text": "", "digests": {"md5": "cc4804cdb31e6eafe6168933af7d85f7", "sha256": "f6f8b2b0c21a8229091ef41dc9ddde756b192418b919a90a35948a5dd639ff17"}, "downloads": -1, "filename": "datapackage-1.11.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cc4804cdb31e6eafe6168933af7d85f7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 84149, "upload_time": "2020-02-12T14:46:24", "upload_time_iso_8601": "2020-02-12T14:46:24.036192Z", "url": "https://files.pythonhosted.org/packages/b8/75/0a2e0853116d2fe3f6422f7844129eba9939e54c530706d6116545438401/datapackage-1.11.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71bb5e685b92744645f15d8e6dd9d1d0", "sha256": "c784ea1d84f03cf32501da6f676af528cd42eed32c99f172107766cb2135dbff"}, "downloads": -1, "filename": "datapackage-1.11.1.tar.gz", "has_sig": false, "md5_digest": "71bb5e685b92744645f15d8e6dd9d1d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96376, "upload_time": "2020-02-12T14:46:26", "upload_time_iso_8601": "2020-02-12T14:46:26.564880Z", "url": "https://files.pythonhosted.org/packages/54/25/742425e9f338ff7ec44a7d7d87f31c7ad833b8d6fd5e0c1a3d501f48a7c1/datapackage-1.11.1.tar.gz", "yanked": false}], "1.12.0": [{"comment_text": "", "digests": {"md5": "64bcf454db0f8efe7a30d1162ebe917f", "sha256": "c467b8d0e6ab4f1361d15f01c6107d0f43ff0f875e9126bdf271030d277363d2"}, "downloads": -1, "filename": "datapackage-1.12.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "64bcf454db0f8efe7a30d1162ebe917f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 84611, "upload_time": "2020-03-25T17:01:09", "upload_time_iso_8601": "2020-03-25T17:01:09.305940Z", "url": "https://files.pythonhosted.org/packages/cb/ea/4de92c634e95b801e6b98f24ef04b3c906a6b0ab835b6d771b5a8404aa40/datapackage-1.12.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6de96a4f6162f5aa9d400bc1b3c04a7d", "sha256": "b9355d97c13371cebccae1132c48425c65746d69385aa9e718fc7c2d8d21c296"}, "downloads": -1, "filename": "datapackage-1.12.0.tar.gz", "has_sig": false, "md5_digest": "6de96a4f6162f5aa9d400bc1b3c04a7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97146, "upload_time": "2020-03-25T17:01:11", "upload_time_iso_8601": "2020-03-25T17:01:11.252367Z", "url": "https://files.pythonhosted.org/packages/e3/eb/34ba44e10d44b350a963b32b71a0402d25df2b98779ef226d8cff3468aa6/datapackage-1.12.0.tar.gz", "yanked": false}], "1.12.1": [{"comment_text": "", "digests": {"md5": "9f944e007db9a241db488e94e5a4a385", "sha256": "a8cef3a9555b566881a71ba5808faced96eb6253f1fb9c1b6ca48b9eb7c801a0"}, "downloads": -1, "filename": "datapackage-1.12.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9f944e007db9a241db488e94e5a4a385", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 84591, "upload_time": "2020-03-27T16:04:50", "upload_time_iso_8601": "2020-03-27T16:04:50.655035Z", "url": "https://files.pythonhosted.org/packages/51/01/320987367e087fc131880155f628843723a18ba4d4fc6712ea1117bc958a/datapackage-1.12.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "afa87c6e3c91b2837d2bbedc1d336f73", "sha256": "e734b18329c8cfc8f5fc19198a574c7705735f1b7881585f2f5cc9a7fe44ffdc"}, "downloads": -1, "filename": "datapackage-1.12.1.tar.gz", "has_sig": false, "md5_digest": "afa87c6e3c91b2837d2bbedc1d336f73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97148, "upload_time": "2020-03-27T16:04:52", "upload_time_iso_8601": "2020-03-27T16:04:52.970121Z", "url": "https://files.pythonhosted.org/packages/30/0c/2fb46b2bfdb01c198ec1335c70129f74a0b392c316dadead95f417b2316e/datapackage-1.12.1.tar.gz", "yanked": false}], "1.12.2": [{"comment_text": "", "digests": {"md5": "62644eff23f4d74dc717f79bbdd282ee", "sha256": "5b96f12e4cca1a7f944ca1bcb0ba6de5f8f7753e698f51c93b880089424b7304"}, "downloads": -1, "filename": "datapackage-1.12.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "62644eff23f4d74dc717f79bbdd282ee", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 84606, "upload_time": "2020-03-27T16:26:06", "upload_time_iso_8601": "2020-03-27T16:26:06.850853Z", "url": "https://files.pythonhosted.org/packages/8d/81/de7716628742da56ba15e909fb9c4d5e50df7f744338e547675deb1a7553/datapackage-1.12.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "749a297fb47473290a6b1102fc015861", "sha256": "c7fdb76032f2f9b9576930b52b96f5b18ab114b6e80f82e33e1e8c3a3c268b1b"}, "downloads": -1, "filename": "datapackage-1.12.2.tar.gz", "has_sig": false, "md5_digest": "749a297fb47473290a6b1102fc015861", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97162, "upload_time": "2020-03-27T16:26:08", "upload_time_iso_8601": "2020-03-27T16:26:08.957616Z", "url": "https://files.pythonhosted.org/packages/98/30/a38c50c37567c41a29c3180d8cb267579483db06409a297833d7d7814a52/datapackage-1.12.2.tar.gz", "yanked": false}], "1.13.0": [{"comment_text": "", "digests": {"md5": "b1e3608114a5a9ef0e8adb05c8a659d7", "sha256": "610cb50e4c1a97eaf98b4e18f426fc806062cee7f017ecf0d5999ebbc914e40b"}, "downloads": -1, "filename": "datapackage-1.13.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b1e3608114a5a9ef0e8adb05c8a659d7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 84944, "upload_time": "2020-03-31T14:09:49", "upload_time_iso_8601": "2020-03-31T14:09:49.865128Z", "url": "https://files.pythonhosted.org/packages/08/ff/85c2e70640770c169f2ab4a53dfa8f86fa73bcbfe071a1d477f7c0be7a1d/datapackage-1.13.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7de738b9fe0a1278da56555a6e6947c", "sha256": "7f3a8c6f2b2bf694e26cd7fa5c26b40ea37b3b31911f9d29664629925d3ecace"}, "downloads": -1, "filename": "datapackage-1.13.0.tar.gz", "has_sig": false, "md5_digest": "e7de738b9fe0a1278da56555a6e6947c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97769, "upload_time": "2020-03-31T14:09:52", "upload_time_iso_8601": "2020-03-31T14:09:52.038092Z", "url": "https://files.pythonhosted.org/packages/1d/36/7f563b755454d054e8b0546b6cf3f4d0a804c444c681fb367eb6ab56efc1/datapackage-1.13.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "7edbda19dedade50c34ebca6869236ae", "sha256": "aad02e435ba6f0e5d84f102f05fa39b8a05a0bbe3b1dd902986c8ebedfa178f9"}, "downloads": -1, "filename": "datapackage-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7edbda19dedade50c34ebca6869236ae", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 82354, "upload_time": "2018-01-18T11:30:56", "upload_time_iso_8601": "2018-01-18T11:30:56.546543Z", "url": "https://files.pythonhosted.org/packages/5c/96/fb69219299cf2e13c87fe15605fd3ae2904d867c94b4b7e57c6cb8abb75d/datapackage-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ebc566be5eb7456748f23b36d4f99fb", "sha256": "95c0a2d68ee7f421b59968da3d64ec9135be8676ff6385dfbecb79bfdccb4759"}, "downloads": -1, "filename": "datapackage-1.2.0.tar.gz", "has_sig": false, "md5_digest": "6ebc566be5eb7456748f23b36d4f99fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79398, "upload_time": "2018-01-18T11:30:57", "upload_time_iso_8601": "2018-01-18T11:30:57.597542Z", "url": "https://files.pythonhosted.org/packages/bf/25/0fb6141e94a4e28f895083895a3a0f3c01f724ad609a3f61f6ab29ae292e/datapackage-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "b625542b8046002b97a1598ebb6f6703", "sha256": "0a5270c54686bd0cc720099744bc256facdfb351d548523a90e60e7d7f928270"}, "downloads": -1, "filename": "datapackage-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b625542b8046002b97a1598ebb6f6703", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 82363, "upload_time": "2018-02-12T07:54:20", "upload_time_iso_8601": "2018-02-12T07:54:20.631795Z", "url": "https://files.pythonhosted.org/packages/4a/fd/201b5fb03b3eed8c5ad5219e2976c9ed78251b44d475de8150dd83d10035/datapackage-1.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb0c36c5c97d3b9484eb9872f7c6717c", "sha256": "f888ce61517234f387b464b1c93242937277c9f6ccf3130bb1a550e59f0f76c0"}, "downloads": -1, "filename": "datapackage-1.2.1.tar.gz", "has_sig": false, "md5_digest": "fb0c36c5c97d3b9484eb9872f7c6717c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79427, "upload_time": "2018-02-12T07:54:21", "upload_time_iso_8601": "2018-02-12T07:54:21.892127Z", "url": "https://files.pythonhosted.org/packages/fe/09/ccfe10b04674678c3794b7ccce053f4f2369433c5a1d2889cb04d50b0a6f/datapackage-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "da782903112be1b68a9dc130fe5b786b", "sha256": "21037d7cfa9e971b44b50c76d6a6eb2571ea4518bd5d6b9934fe68febf60a846"}, "downloads": -1, "filename": "datapackage-1.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "da782903112be1b68a9dc130fe5b786b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 82403, "upload_time": "2018-03-06T09:51:57", "upload_time_iso_8601": "2018-03-06T09:51:57.192217Z", "url": "https://files.pythonhosted.org/packages/af/f7/daceb6bdc1ae9cd67fe721e53f51b4b4ecf1b6e33beab1df5a516c9da976/datapackage-1.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "483d67297118f32cac681d717fc668a2", "sha256": "21a15da2c91ddfc999c93919fbe5e3605f88c58c0943ccca1751153610409db1"}, "downloads": -1, "filename": "datapackage-1.2.2.tar.gz", "has_sig": false, "md5_digest": "483d67297118f32cac681d717fc668a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79468, "upload_time": "2018-03-06T09:51:58", "upload_time_iso_8601": "2018-03-06T09:51:58.793547Z", "url": "https://files.pythonhosted.org/packages/76/89/c989d2a1fdfa42f9ce5a843044f6ece39cc3bb49f02a1b891dd640a449d1/datapackage-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "8ca836d8b117a256a745cc6dec80b89e", "sha256": "0b2ee9c48bde38d7edfd6f0c7e0b8c7384714353baaafd0182ac48fb70a89a85"}, "downloads": -1, "filename": "datapackage-1.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8ca836d8b117a256a745cc6dec80b89e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 82800, "upload_time": "2018-03-22T17:24:07", "upload_time_iso_8601": "2018-03-22T17:24:07.092637Z", "url": "https://files.pythonhosted.org/packages/95/2d/f3f32ef35d75a0b405d715bf2b7bb221059d2d01bdd14201ab5a655b7d14/datapackage-1.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdfb5cfa42037586e6054cfa0337f73f", "sha256": "461359132a72cbe6ae40d6630aecd539aa1966bd6707b2b10ea43b0363ce9f79"}, "downloads": -1, "filename": "datapackage-1.2.3.tar.gz", "has_sig": false, "md5_digest": "fdfb5cfa42037586e6054cfa0337f73f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79737, "upload_time": "2018-03-22T17:24:09", "upload_time_iso_8601": "2018-03-22T17:24:09.736278Z", "url": "https://files.pythonhosted.org/packages/f9/0d/6b75ff60e2887dd12d46a51f8d6a7b3a93f2e6c680946eb4375942099a3c/datapackage-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "3df9cacfe63a2eaf783b6d0bf0ee9180", "sha256": "c80a928a1a3d8612e93d5c8a263aa406f8eeaa6883124a1eb4f464d70063a415"}, "downloads": -1, "filename": "datapackage-1.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3df9cacfe63a2eaf783b6d0bf0ee9180", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 74118, "upload_time": "2018-04-06T12:53:53", "upload_time_iso_8601": "2018-04-06T12:53:53.333041Z", "url": "https://files.pythonhosted.org/packages/d8/94/91458390a0d9d7cf829c5b445820ee0d6e8a345c313793107308f3fe6153/datapackage-1.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e67ad59bac60912a0d4ba67b30dbd83", "sha256": "22bea1a036576c653ac335e5b8c7d9645b30a419935cc34501366732c9059878"}, "downloads": -1, "filename": "datapackage-1.2.4.tar.gz", "has_sig": false, "md5_digest": "4e67ad59bac60912a0d4ba67b30dbd83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79731, "upload_time": "2018-04-06T12:53:54", "upload_time_iso_8601": "2018-04-06T12:53:54.535718Z", "url": "https://files.pythonhosted.org/packages/71/e4/2f9c869790073fdcb8de54428108ceea464bf28b12b98e40ac314dbe81a8/datapackage-1.2.4.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "8d109c98c415d81bcc9da363cba6734e", "sha256": "27930319055b072d0ece0afd03609559d2ee4867b727ef5fa434e0a9f7d9a9ea"}, "downloads": -1, "filename": "datapackage-1.2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8d109c98c415d81bcc9da363cba6734e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 74463, "upload_time": "2018-04-06T13:04:35", "upload_time_iso_8601": "2018-04-06T13:04:35.153591Z", "url": "https://files.pythonhosted.org/packages/7c/60/37b06e80fce5d2a2b6b24474d87b12679009dea95c035e43dc5d1632724c/datapackage-1.2.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acfa301b03b29c556f4b786a1a98940e", "sha256": "4eb58b11e9502a0e5d7c20a7b04bbc6681aa4902e73e6c9c6eeeefa3dece70fd"}, "downloads": -1, "filename": "datapackage-1.2.5.tar.gz", "has_sig": false, "md5_digest": "acfa301b03b29c556f4b786a1a98940e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79953, "upload_time": "2018-04-06T13:04:36", "upload_time_iso_8601": "2018-04-06T13:04:36.356041Z", "url": "https://files.pythonhosted.org/packages/a5/fe/9f6321b0e0f2cbc90882d6f34f723c0eb0b6c05994d9d05f3001a8a34b91/datapackage-1.2.5.tar.gz", "yanked": false}], "1.2.6": [{"comment_text": "", "digests": {"md5": "d1b223316965e5c22853be654d6ff40f", "sha256": "42e5279316ca1e1bb16a88035320c676f524034d239a348b2161f34abfc5d110"}, "downloads": -1, "filename": "datapackage-1.2.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d1b223316965e5c22853be654d6ff40f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 74490, "upload_time": "2018-04-06T13:25:43", "upload_time_iso_8601": "2018-04-06T13:25:43.416811Z", "url": "https://files.pythonhosted.org/packages/5c/4e/1e5ab76bd9d8f806b6346d608936d4b4e11d87a544ee0ed495b37c2302b4/datapackage-1.2.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "256b341a226955e970a7cc6db501490c", "sha256": "7e9192eacd0bca17a9b22750f5836f8903fc4d7b7e9dfc6d17f246272ef53561"}, "downloads": -1, "filename": "datapackage-1.2.6.tar.gz", "has_sig": false, "md5_digest": "256b341a226955e970a7cc6db501490c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79108, "upload_time": "2018-04-06T13:25:44", "upload_time_iso_8601": "2018-04-06T13:25:44.496006Z", "url": "https://files.pythonhosted.org/packages/1f/ef/fd8dd8c851e81c40a1384e9c9ec793fb0a23d24cee390561aa0a1a855e63/datapackage-1.2.6.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "02a312e4d281f3e8a8e75ae4ebf96519", "sha256": "6895a77bb54c39c3ce5b87778e66eb024fe2c1148579081973d560e6226e2382"}, "downloads": -1, "filename": "datapackage-1.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "02a312e4d281f3e8a8e75ae4ebf96519", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 74502, "upload_time": "2018-07-06T11:56:52", "upload_time_iso_8601": "2018-07-06T11:56:52.321561Z", "url": "https://files.pythonhosted.org/packages/d3/fa/40169436a57e4179ceb5fece5db9390a9ddf38d14a6a7a1a9e3ab39cf0ab/datapackage-1.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c6d8b940415197fdaceae46633e5c99", "sha256": "24117b6405f1cbd36c7830b5994faea43efcae580ff9569eee9fdf840a9409aa"}, "downloads": -1, "filename": "datapackage-1.3.1.tar.gz", "has_sig": false, "md5_digest": "3c6d8b940415197fdaceae46633e5c99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79201, "upload_time": "2018-07-06T11:56:53", "upload_time_iso_8601": "2018-07-06T11:56:53.593810Z", "url": "https://files.pythonhosted.org/packages/84/7f/8e0cc3d0527e30cc079e8674f9554007f0c7accdc2b511207063fc67c8e6/datapackage-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "36f5cee2934d4ee363b3338a6473cfcf", "sha256": "0967607d63b744ef99ccee3588d0376c37ecd0b6f947a9ed3f3ed42e8067597a"}, "downloads": -1, "filename": "datapackage-1.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "36f5cee2934d4ee363b3338a6473cfcf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 74563, "upload_time": "2018-07-12T16:37:49", "upload_time_iso_8601": "2018-07-12T16:37:49.750701Z", "url": "https://files.pythonhosted.org/packages/4e/e3/4dba16978b3986abb8c820f4a29d3c56f0778830eda5bea2cfab8184f70e/datapackage-1.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45f246fdb34bdb1125195f27f0605b6a", "sha256": "0947eecaf829e7c0e942c64d8c57f8b2bb49433d1fa0fb81e16be495603676e4"}, "downloads": -1, "filename": "datapackage-1.3.2.tar.gz", "has_sig": false, "md5_digest": "45f246fdb34bdb1125195f27f0605b6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79412, "upload_time": "2018-07-12T16:37:50", "upload_time_iso_8601": "2018-07-12T16:37:50.939830Z", "url": "https://files.pythonhosted.org/packages/7e/67/a93f2e9a4e77255588cc918db50f3e0e1589d72b34517b5f6cec82f15129/datapackage-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "e4844f63e76fd95fe7e65107a9b44b22", "sha256": "6d6b3a23281cd7eec0556cbea69c032c194a36c28f512c006ac4c120ab44a4ec"}, "downloads": -1, "filename": "datapackage-1.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e4844f63e76fd95fe7e65107a9b44b22", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 74727, "upload_time": "2018-09-03T08:47:13", "upload_time_iso_8601": "2018-09-03T08:47:13.749840Z", "url": "https://files.pythonhosted.org/packages/f9/d4/3dad3e366043f12da79a4657f5498b132a7b3fec23ad4f22c0b5e081c97c/datapackage-1.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0038f14e3aa21d8e82e5bd088a8ea5a5", "sha256": "9e17f46c20523dc9dee7cde55015c972d507dbf11ddc6ebce4638108728abcab"}, "downloads": -1, "filename": "datapackage-1.3.3.tar.gz", "has_sig": false, "md5_digest": "0038f14e3aa21d8e82e5bd088a8ea5a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79597, "upload_time": "2018-09-03T08:47:15", "upload_time_iso_8601": "2018-09-03T08:47:15.287466Z", "url": "https://files.pythonhosted.org/packages/93/5b/f559fc70e4705e0c63b9e8ddba6e4875b5defb1b973348256f59d2d4a45f/datapackage-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "000a601f7a5e1d76f2065b694dac27d1", "sha256": "c864ed880ff13830d7388be9a97fcee1d513f2152d47218a2646fa6ac5359d71"}, "downloads": -1, "filename": "datapackage-1.3.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "000a601f7a5e1d76f2065b694dac27d1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 74737, "upload_time": "2018-09-04T06:47:03", "upload_time_iso_8601": "2018-09-04T06:47:03.218427Z", "url": "https://files.pythonhosted.org/packages/26/6e/50166b1108fc3d3a6d34defc5b20799513d6368b4ea58a2bb77c7c0542cb/datapackage-1.3.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "031fc9fa58856484ce99eedc5ff1b56b", "sha256": "c9ec33345aa95f3caec33204dc8de1cb14f780aa0f4b3014146bb70ad14615f1"}, "downloads": -1, "filename": "datapackage-1.3.4.tar.gz", "has_sig": false, "md5_digest": "031fc9fa58856484ce99eedc5ff1b56b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79611, "upload_time": "2018-09-04T06:47:04", "upload_time_iso_8601": "2018-09-04T06:47:04.879468Z", "url": "https://files.pythonhosted.org/packages/d6/8d/8e551062d22b24db94f3431c2735947ccbf8e18a96d10cee846bd45df438/datapackage-1.3.4.tar.gz", "yanked": false}], "1.3.5": [{"comment_text": "", "digests": {"md5": "7e94b029335d51957042f0cf567dc18c", "sha256": "38efe95f458d9f17dc7cdfe8cad44ab7d7594d601de9a7131815d5c140936412"}, "downloads": -1, "filename": "datapackage-1.3.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7e94b029335d51957042f0cf567dc18c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 75569, "upload_time": "2018-10-08T07:29:38", "upload_time_iso_8601": "2018-10-08T07:29:38.880794Z", "url": "https://files.pythonhosted.org/packages/09/0b/e2b5450c4b27ea81e1623e38ddf6cde3f99ef27d031626968560688f6645/datapackage-1.3.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e6775e1567e2f5466dacb88e2475c91", "sha256": "e988341f0c9650fee605973216bbbc0124b28a87b2679f169da4145446d4fee6"}, "downloads": -1, "filename": "datapackage-1.3.5.tar.gz", "has_sig": false, "md5_digest": "6e6775e1567e2f5466dacb88e2475c91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79619, "upload_time": "2018-10-08T07:29:40", "upload_time_iso_8601": "2018-10-08T07:29:40.467842Z", "url": "https://files.pythonhosted.org/packages/05/f4/83b4c0bee6f880de5dbec33cd5d387a0f0234adace0388b67f044646f4e4/datapackage-1.3.5.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "f3b16578d04e58a728f014d2ed638acf", "sha256": "4597aef36fdf12cb0000e39dcdabb1671168594c28ab1f7731d53622dec854fc"}, "downloads": -1, "filename": "datapackage-1.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f3b16578d04e58a728f014d2ed638acf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 75606, "upload_time": "2018-10-12T08:46:39", "upload_time_iso_8601": "2018-10-12T08:46:39.434878Z", "url": "https://files.pythonhosted.org/packages/1c/c4/4f69efba95ce124771743acf8e545b257478c42c424db9d6f7140780a416/datapackage-1.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0bedf706a76dd87ce046e44504cbf6fa", "sha256": "08eeb2a3fbc2ea86c57dc6b95e72a5b9c4df5df33104d3ddcbb1911a97fcc979"}, "downloads": -1, "filename": "datapackage-1.4.0.tar.gz", "has_sig": false, "md5_digest": "0bedf706a76dd87ce046e44504cbf6fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79705, "upload_time": "2018-10-12T08:46:41", "upload_time_iso_8601": "2018-10-12T08:46:41.207649Z", "url": "https://files.pythonhosted.org/packages/65/15/4bb9ca72c6cf67220797c746dd0e7af587a644dec0499cc9863b3975f89e/datapackage-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "217206371073f6724416fb75dfc9f7fa", "sha256": "15ffe9c6c41268116400419fcf6b0fcf58c27be762be45a316d0ae19b64748a8"}, "downloads": -1, "filename": "datapackage-1.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "217206371073f6724416fb75dfc9f7fa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 75629, "upload_time": "2018-10-16T11:03:20", "upload_time_iso_8601": "2018-10-16T11:03:20.234135Z", "url": "https://files.pythonhosted.org/packages/f8/30/c501dc0e697f4787e68e8249ff60677f1b20fcdc6797568dd20f5f99bbbe/datapackage-1.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9594eb2dcf6bec5a2ace2c5245244de6", "sha256": "6bf0f1176d428e779ddb012cc7372147c868a4632935556c0f2d1905b2afbbed"}, "downloads": -1, "filename": "datapackage-1.5.0.tar.gz", "has_sig": false, "md5_digest": "9594eb2dcf6bec5a2ace2c5245244de6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79764, "upload_time": "2018-10-16T11:03:21", "upload_time_iso_8601": "2018-10-16T11:03:21.951721Z", "url": "https://files.pythonhosted.org/packages/a2/3c/b7e5221e060e21b6d78284135cbb33042cac6c839616d03071b4b0fca68f/datapackage-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "286b26fd02d3fc30cc50676c73c86502", "sha256": "8249d38852c3ae8af99c63a6ab90e7568215a78bee2ef7e9897d16c1945928ea"}, "downloads": -1, "filename": "datapackage-1.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "286b26fd02d3fc30cc50676c73c86502", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 75638, "upload_time": "2018-10-18T09:36:18", "upload_time_iso_8601": "2018-10-18T09:36:18.744865Z", "url": "https://files.pythonhosted.org/packages/ff/55/05a1335d3f2f8a3b11534845edd4c30933fd432b37a2ab61bebe8dcc33e3/datapackage-1.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6db83a966882663702b49e5f0d09c819", "sha256": "72af7738eb614068706a9a32b0814df9c77a99f5508df3bed6331196c05de9e4"}, "downloads": -1, "filename": "datapackage-1.5.1.tar.gz", "has_sig": false, "md5_digest": "6db83a966882663702b49e5f0d09c819", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79770, "upload_time": "2018-10-18T09:36:19", "upload_time_iso_8601": "2018-10-18T09:36:19.917699Z", "url": "https://files.pythonhosted.org/packages/01/62/6d898eee04e0eaa9d57c5823406a81ba6aae2dfaba89f95cf11c0b6d5444/datapackage-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "73e16cc831936dc6609a1841d1f46716", "sha256": "e0915f7fdfa0fa837e8073d4982d09102e78f1cdfb84212690592d265693419e"}, "downloads": -1, "filename": "datapackage-1.5.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "73e16cc831936dc6609a1841d1f46716", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 75626, "upload_time": "2019-04-11T12:27:46", "upload_time_iso_8601": "2019-04-11T12:27:46.488760Z", "url": "https://files.pythonhosted.org/packages/e4/f6/be6bd6ef5189234bf113dc8ddad222bca70387a3f75a6339d887acaceccd/datapackage-1.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79134eaf929b7a1a7af6d503739bbdfd", "sha256": "ad871fa126e8ae40f8a54e8336e68d4d54d56776ff7bdf90b6375b011a23e93c"}, "downloads": -1, "filename": "datapackage-1.5.2.tar.gz", "has_sig": false, "md5_digest": "79134eaf929b7a1a7af6d503739bbdfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78098, "upload_time": "2019-04-11T12:27:48", "upload_time_iso_8601": "2019-04-11T12:27:48.416744Z", "url": "https://files.pythonhosted.org/packages/d2/15/bad710fd0f661107a50a03a09391ee618b62ddba4f77630c22b99d755bd1/datapackage-1.5.2.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "aee59e07524a80f08b13bdd1516f7fe6", "sha256": "308d5231a45afe6b81a58452e7f001bb0e6959ade3a012cc66acc4ff9f4b162a"}, "downloads": -1, "filename": "datapackage-1.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aee59e07524a80f08b13bdd1516f7fe6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 75697, "upload_time": "2019-04-11T12:44:52", "upload_time_iso_8601": "2019-04-11T12:44:52.451088Z", "url": "https://files.pythonhosted.org/packages/1d/fd/227416e4fbf505ac50c968db502a83b8ed63c2bda54550fb0c433d8021cc/datapackage-1.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97ae96b43b037fde8a55e622760946ee", "sha256": "e9a87b9e7845b5141fbcb433f33cdec4a4d4ebb249053b9df2fa6465bd133f49"}, "downloads": -1, "filename": "datapackage-1.6.0.tar.gz", "has_sig": false, "md5_digest": "97ae96b43b037fde8a55e622760946ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78200, "upload_time": "2019-04-11T12:44:54", "upload_time_iso_8601": "2019-04-11T12:44:54.401957Z", "url": "https://files.pythonhosted.org/packages/91/fe/5ba0e306b2db12984454b020594ca5b6b32ac955f01e19135b2a574176f6/datapackage-1.6.0.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "44c43cb5d062a17b6ab7207001a2f8f6", "sha256": "d6438fa774c9718e50c7042344532e7ed2c9efcaf8b5d65cc553133e8c022d4e"}, "downloads": -1, "filename": "datapackage-1.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "44c43cb5d062a17b6ab7207001a2f8f6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 75734, "upload_time": "2019-06-07T06:11:41", "upload_time_iso_8601": "2019-06-07T06:11:41.402478Z", "url": "https://files.pythonhosted.org/packages/2d/76/b3e5142e73e79e0f7e4bb5aae5f0772fa919285b457f04df1312c60517ce/datapackage-1.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b12244f2f78f201c550992c0614fa7ef", "sha256": "d1c6577cc56af9d5ac0a1734290c59741f7b5c5d2312c50ed709ecc6b172c13a"}, "downloads": -1, "filename": "datapackage-1.6.1.tar.gz", "has_sig": false, "md5_digest": "b12244f2f78f201c550992c0614fa7ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80798, "upload_time": "2019-06-07T06:11:43", "upload_time_iso_8601": "2019-06-07T06:11:43.674535Z", "url": "https://files.pythonhosted.org/packages/1c/12/454322de2ea95e2e922f7b32148a39aa9e5add3b95024fef4d2d3eb3a154/datapackage-1.6.1.tar.gz", "yanked": false}], "1.6.2": [{"comment_text": "", "digests": {"md5": "4b47717dbd1bed11e6cf445af3ff0780", "sha256": "c58e9c4c44db6a0a445ace8a4b94724ff3385f3300bf1b0d93a53ffb9dd60aae"}, "downloads": -1, "filename": "datapackage-1.6.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4b47717dbd1bed11e6cf445af3ff0780", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 75733, "upload_time": "2019-06-07T06:16:37", "upload_time_iso_8601": "2019-06-07T06:16:37.342801Z", "url": "https://files.pythonhosted.org/packages/9d/83/46e4f7d7bdf3cc4fa76f0ab7e7db3a890ae1c98a88e143a7f0eae7d031be/datapackage-1.6.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "065b5980f63a42f30604f231b5d381e7", "sha256": "52bd673d3c5142a4ce14593ece485f999e19a6ec5a676d7e1763801968a3fa44"}, "downloads": -1, "filename": "datapackage-1.6.2.tar.gz", "has_sig": false, "md5_digest": "065b5980f63a42f30604f231b5d381e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80791, "upload_time": "2019-06-07T06:16:39", "upload_time_iso_8601": "2019-06-07T06:16:39.639992Z", "url": "https://files.pythonhosted.org/packages/50/2c/208d4144c48a2535e3ab7ce163cc242997fc1a3ee330cf6aaae6ace2361b/datapackage-1.6.2.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "cf4da75f96c0282902739491f6168558", "sha256": "d4691774ec41e3b643ed863d8f051b10737d3b3bf995dc9449983271418c1c41"}, "downloads": -1, "filename": "datapackage-1.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cf4da75f96c0282902739491f6168558", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 76041, "upload_time": "2019-08-16T11:36:51", "upload_time_iso_8601": "2019-08-16T11:36:51.019086Z", "url": "https://files.pythonhosted.org/packages/bc/6c/b4a144134cca131eb52c4c0f35f0b7c2176b925910f95ea924fda8dbcd5c/datapackage-1.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b84aa1fe3c2a6e2d5f2378e1b5c9bf7e", "sha256": "d08e9c21865c99a0bb3f469c36c5fd5c00c7abc391a484494475ecf8773f2405"}, "downloads": -1, "filename": "datapackage-1.7.0.tar.gz", "has_sig": false, "md5_digest": "b84aa1fe3c2a6e2d5f2378e1b5c9bf7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80431, "upload_time": "2019-08-16T11:36:53", "upload_time_iso_8601": "2019-08-16T11:36:53.309735Z", "url": "https://files.pythonhosted.org/packages/3b/fa/7d51d7843fc6990a0efd48f4da44875e965e206a7b6c97af53a29eede60b/datapackage-1.7.0.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "941781795d2d599733fa84dee97ef459", "sha256": "78bdec394811642d16bd4a973c7764d14158b56f2e1c7c87ff5f1acaa6770214"}, "downloads": -1, "filename": "datapackage-1.8.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "941781795d2d599733fa84dee97ef459", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 77997, "upload_time": "2019-08-27T07:40:04", "upload_time_iso_8601": "2019-08-27T07:40:04.056861Z", "url": "https://files.pythonhosted.org/packages/06/d4/54d4af3dcd88c553ca4462ca828dc394a6111be1960e85a18c51a7122586/datapackage-1.8.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "172b0be242895c7d0fbf10458357fb78", "sha256": "7afb4a22910a04eca5ed5aa69ae46b45650ab00cb2648007669f454cc1de7b30"}, "downloads": -1, "filename": "datapackage-1.8.0.tar.gz", "has_sig": false, "md5_digest": "172b0be242895c7d0fbf10458357fb78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86969, "upload_time": "2019-08-27T07:40:06", "upload_time_iso_8601": "2019-08-27T07:40:06.636741Z", "url": "https://files.pythonhosted.org/packages/25/f1/27d6e21dd88ee3c94bdb425eb9289813d11a441fe55de4f5af57c06b72f6/datapackage-1.8.0.tar.gz", "yanked": false}], "1.9.0": [{"comment_text": "", "digests": {"md5": "d055f2ccfcf6ee85c9e3d6a6e021f465", "sha256": "b78e02ec0976e8a965329ecb5b0ebafbde07ece901e2db37064a68a888970a88"}, "downloads": -1, "filename": "datapackage-1.9.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d055f2ccfcf6ee85c9e3d6a6e021f465", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 78045, "upload_time": "2019-09-03T07:47:37", "upload_time_iso_8601": "2019-09-03T07:47:37.630362Z", "url": "https://files.pythonhosted.org/packages/99/22/f0c44bbee4c3afcaabe0c664668917c8143aa5a6ac2eac35123f01ab573f/datapackage-1.9.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6c35e8d94f8305f00e2305b1518e9b3", "sha256": "0781ce8f203e962cdc0d9440f16940b36aafbce57b6a1c64bcb0f81ce48d87fb"}, "downloads": -1, "filename": "datapackage-1.9.0.tar.gz", "has_sig": false, "md5_digest": "d6c35e8d94f8305f00e2305b1518e9b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 87129, "upload_time": "2019-09-03T07:47:40", "upload_time_iso_8601": "2019-09-03T07:47:40.067586Z", "url": "https://files.pythonhosted.org/packages/d3/88/0466e0bbe7fd5dcb17cfefb7897a41a39429825bbd3bce6395ce791cfb1d/datapackage-1.9.0.tar.gz", "yanked": false}], "1.9.1": [{"comment_text": "", "digests": {"md5": "aaa0211bfc6dc7cd9b2916832d38c684", "sha256": "fe7eb911dfc95df0b3a47085b6f0fb8eece5846c752f04475bee74becd4a4759"}, "downloads": -1, "filename": "datapackage-1.9.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aaa0211bfc6dc7cd9b2916832d38c684", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 78092, "upload_time": "2019-09-18T06:05:42", "upload_time_iso_8601": "2019-09-18T06:05:42.875987Z", "url": "https://files.pythonhosted.org/packages/2e/f0/99a4f03f62bb0baeeb73b2f3c650b0cec821d79346af20fc72577ed3a01c/datapackage-1.9.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31ddefb50035df895010190ce2109903", "sha256": "6f16437b6d534cf28b302f72d713868a66801a0487f2cdeaf74e1cb100c39823"}, "downloads": -1, "filename": "datapackage-1.9.1.tar.gz", "has_sig": false, "md5_digest": "31ddefb50035df895010190ce2109903", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 87199, "upload_time": "2019-09-18T06:05:46", "upload_time_iso_8601": "2019-09-18T06:05:46.113126Z", "url": "https://files.pythonhosted.org/packages/ea/32/28d26be3e4149c369ad96fff791c12d23c05443ed684a1bdaedfd008db3f/datapackage-1.9.1.tar.gz", "yanked": false}], "1.9.2": [{"comment_text": "", "digests": {"md5": "05f9f59f82b80ba9c9e380adfe38de96", "sha256": "70f0eb5a4518012f7a26d312a4eb95d8df5c33caa9bb213eaed46a4985eff1dc"}, "downloads": -1, "filename": "datapackage-1.9.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "05f9f59f82b80ba9c9e380adfe38de96", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 78093, "upload_time": "2019-09-18T08:06:25", "upload_time_iso_8601": "2019-09-18T08:06:25.383043Z", "url": "https://files.pythonhosted.org/packages/f3/ca/9ee38d4523e3f8f10bdd6c7a82cd53d1e953b4b98237cafbc26dcc95c360/datapackage-1.9.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ffcb2a93247683e82d619ea46bb192b9", "sha256": "8690de7f65e1a1f5ef503bc706f492cc8ec8a866742834f8f267c85441d0847b"}, "downloads": -1, "filename": "datapackage-1.9.2.tar.gz", "has_sig": false, "md5_digest": "ffcb2a93247683e82d619ea46bb192b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 87191, "upload_time": "2019-09-18T08:06:27", "upload_time_iso_8601": "2019-09-18T08:06:27.757158Z", "url": "https://files.pythonhosted.org/packages/c8/47/ab8deba7b60f2c0b0960fa917d8a1e71559a6cd436dec46302cdf2b1e407/datapackage-1.9.2.tar.gz", "yanked": false}], "1.9.3": [{"comment_text": "", "digests": {"md5": "b87fd936fa720e8b1cca1d99639a4e0a", "sha256": "068ad3dd44599519a790e3b4c11063f51a32ef9fc5ff69defe5158ee86614fe7"}, "downloads": -1, "filename": "datapackage-1.9.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b87fd936fa720e8b1cca1d99639a4e0a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 78598, "upload_time": "2019-10-21T13:38:33", "upload_time_iso_8601": "2019-10-21T13:38:33.406208Z", "url": "https://files.pythonhosted.org/packages/9e/dc/0e994552697d69bdf00b73ff4036ab443f5e6b410ce0d5ca9c7956a2ca91/datapackage-1.9.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb3e633f1e321c85df906f8ecf9bf6fb", "sha256": "f233b6f40358d40d915229968f4e6ae4e0624cc2700306b2d894e05a89fd5878"}, "downloads": -1, "filename": "datapackage-1.9.3.tar.gz", "has_sig": false, "md5_digest": "fb3e633f1e321c85df906f8ecf9bf6fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88262, "upload_time": "2019-10-21T13:38:36", "upload_time_iso_8601": "2019-10-21T13:38:36.683270Z", "url": "https://files.pythonhosted.org/packages/06/e1/a70f6f0044f544b5c22223bed76516ca221992686cb43cc7b0c932e41a94/datapackage-1.9.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b1e3608114a5a9ef0e8adb05c8a659d7", "sha256": "610cb50e4c1a97eaf98b4e18f426fc806062cee7f017ecf0d5999ebbc914e40b"}, "downloads": -1, "filename": "datapackage-1.13.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b1e3608114a5a9ef0e8adb05c8a659d7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 84944, "upload_time": "2020-03-31T14:09:49", "upload_time_iso_8601": "2020-03-31T14:09:49.865128Z", "url": "https://files.pythonhosted.org/packages/08/ff/85c2e70640770c169f2ab4a53dfa8f86fa73bcbfe071a1d477f7c0be7a1d/datapackage-1.13.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7de738b9fe0a1278da56555a6e6947c", "sha256": "7f3a8c6f2b2bf694e26cd7fa5c26b40ea37b3b31911f9d29664629925d3ecace"}, "downloads": -1, "filename": "datapackage-1.13.0.tar.gz", "has_sig": false, "md5_digest": "e7de738b9fe0a1278da56555a6e6947c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97769, "upload_time": "2020-03-31T14:09:52", "upload_time_iso_8601": "2020-03-31T14:09:52.038092Z", "url": "https://files.pythonhosted.org/packages/1d/36/7f563b755454d054e8b0546b6cf3f4d0a804c444c681fb367eb6ab56efc1/datapackage-1.13.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:17 2020"}