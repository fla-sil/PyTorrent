{"info": {"author": "Truveris Inc.", "author_email": "dev@truveris.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "mdstat for python\n=================\n\nThis short library is used to convert your ``/proc/mdstat`` file into an object\nusable in Python.  It comes with a short ``mdjson`` script that dumps your file\nin a JSON format.\n\nRequirements\n------------\n - Linux (or at least get mdstat files from a Linux machine)\n - Python 2.6+ (or 3.2+)\n\nExample usage\n-------------\nFor most use cases, you can simple run ``mdstat.parse()`` to get nested\ndictionaries repesenting your local ``/proc/mdstat`` file.  If you fetch the\nfile remotely or need to run the parser on a stream, use ``parse_stream``.\n\n.. code-block:: javascript\n\n    $ mdjson\n    {\n        \"personalities\": [\n            \"raid10\"\n        ],\n        \"unused_devices\": [],\n        \"devices\": {\n            \"md127\": {\n                \"read_only\": true,\n                \"status\": {\n                    \"near_copies\": 2,\n                    \"blocks\": 34359475200,\n                    \"raid_disks\": 4,\n                    \"offset_copies\": 0,\n                    \"far_copies\": 1,\n                    \"synced\": [\n                        true,\n                        true,\n                        true,\n                        true\n                    ],\n                    \"chunks\": \"512K\",\n                    \"super\": \"1.2\",\n                    \"non_degraded_disks\": 4\n                },\n                \"bitmap\": null,\n                \"resync\": null,\n                \"active\": true,\n                \"disks\": {\n                    \"xvdf\": {\n                        \"spare\": true,\n                        \"faulty\": false,\n                        \"write_mostly\": false,\n                        \"number\": 4,\n                        \"replacement\": false\n                    },\n                    \"xvdd\": {\n                        \"spare\": false,\n                        \"faulty\": false,\n                        \"write_mostly\": false,\n                        \"number\": 2,\n                        \"replacement\": false\n                    },\n                    \"xvde\": {\n                        \"spare\": false,\n                        \"faulty\": false,\n                        \"write_mostly\": false,\n                        \"number\": 3,\n                        \"replacement\": false\n                    },\n                    \"xvdb\": {\n                        \"spare\": false,\n                        \"faulty\": false,\n                        \"write_mostly\": false,\n                        \"number\": 0,\n                        \"replacement\": false\n                    },\n                    \"xvdc\": {\n                        \"spare\": false,\n                        \"faulty\": false,\n                        \"write_mostly\": false,\n                        \"number\": 1,\n                        \"replacement\": false\n                    }\n                },\n                \"personality\": \"raid10\"\n            }\n        }\n    }\n\nYou can also use the python interface to generate a nested dictionary:\n\n.. code-block:: python\n\n    >>> import mdstat\n    >>> mdstat.parse()\n    {\n        \"personalities\": [\n            \"raid1\",\n            \"raid5\",\n            \"raid10\",\n        ],\n        \"devices\": {\n            \"md0\": {\n                \"active\": True,\n                [... snip ...]\n            }\n        }\n        \"unused_devices\": []\n    }\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/truveris/py-mdstat/", "keywords": "linux,mdstat,mdadm,mdjson,raid", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "mdstat", "package_url": "https://pypi.org/project/mdstat/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mdstat/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/truveris/py-mdstat/"}, "release_url": "https://pypi.org/project/mdstat/1.0.4/", "requires_dist": null, "requires_python": null, "summary": "mdstat parser", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This short library is used to convert your <tt>/proc/mdstat</tt> file into an object\nusable in Python.  It comes with a short <tt>mdjson</tt> script that dumps your file\nin a JSON format.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<blockquote>\n<ul>\n<li>Linux (or at least get mdstat files from a Linux machine)</li>\n<li>Python 2.6+ (or 3.2+)</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<p>For most use cases, you can simple run <tt>mdstat.parse()</tt> to get nested\ndictionaries repesenting your local <tt>/proc/mdstat</tt> file.  If you fetch the\nfile remotely or need to run the parser on a stream, use <tt>parse_stream</tt>.</p>\n<pre><span class=\"nx\">$</span> <span class=\"nx\">mdjson</span>\n<span class=\"p\">{</span>\n    <span class=\"s2\">\"personalities\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"raid10\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"unused_devices\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n    <span class=\"s2\">\"devices\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"md127\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"read_only\"</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"status\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"near_copies\"</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"blocks\"</span><span class=\"o\">:</span> <span class=\"mi\">34359475200</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"raid_disks\"</span><span class=\"o\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"offset_copies\"</span><span class=\"o\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"far_copies\"</span><span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"synced\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n                    <span class=\"kc\">true</span><span class=\"p\">,</span>\n                    <span class=\"kc\">true</span><span class=\"p\">,</span>\n                    <span class=\"kc\">true</span><span class=\"p\">,</span>\n                    <span class=\"kc\">true</span>\n                <span class=\"p\">],</span>\n                <span class=\"s2\">\"chunks\"</span><span class=\"o\">:</span> <span class=\"s2\">\"512K\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"super\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1.2\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"non_degraded_disks\"</span><span class=\"o\">:</span> <span class=\"mi\">4</span>\n            <span class=\"p\">},</span>\n            <span class=\"s2\">\"bitmap\"</span><span class=\"o\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"resync\"</span><span class=\"o\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"active\"</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"disks\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"xvdf\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">\"spare\"</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"faulty\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"write_mostly\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"number\"</span><span class=\"o\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"replacement\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span>\n                <span class=\"p\">},</span>\n                <span class=\"s2\">\"xvdd\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">\"spare\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"faulty\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"write_mostly\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"number\"</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"replacement\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span>\n                <span class=\"p\">},</span>\n                <span class=\"s2\">\"xvde\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">\"spare\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"faulty\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"write_mostly\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"number\"</span><span class=\"o\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"replacement\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span>\n                <span class=\"p\">},</span>\n                <span class=\"s2\">\"xvdb\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">\"spare\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"faulty\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"write_mostly\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"number\"</span><span class=\"o\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"replacement\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span>\n                <span class=\"p\">},</span>\n                <span class=\"s2\">\"xvdc\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">\"spare\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"faulty\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"write_mostly\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"number\"</span><span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"replacement\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">},</span>\n            <span class=\"s2\">\"personality\"</span><span class=\"o\">:</span> <span class=\"s2\">\"raid10\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>You can also use the python interface to generate a nested dictionary:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">mdstat</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mdstat</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n    <span class=\"s2\">\"personalities\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"raid1\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"raid5\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"raid10\"</span><span class=\"p\">,</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"devices\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"md0\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"active\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"o\">...</span> <span class=\"n\">snip</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"s2\">\"unused_devices\"</span><span class=\"p\">:</span> <span class=\"p\">[]</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2114315, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "5977746b7de272c3559119c43b820066", "sha256": "4969ae166ac35e2d71829c8be0935b65aaf3f6bc429863ad5f621c6bad4b235c"}, "downloads": -1, "filename": "mdstat-1.0.0.tar.gz", "has_sig": true, "md5_digest": "5977746b7de272c3559119c43b820066", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7048, "upload_time": "2015-07-11T23:02:00", "upload_time_iso_8601": "2015-07-11T23:02:00.505904Z", "url": "https://files.pythonhosted.org/packages/65/53/7908d2c11bafbf6bee9784c63c68bd4277dd6d3cc680eadc4a49cc9e30c2/mdstat-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "45d78dfbca01f60da5eefde65ac5718e", "sha256": "3e71ce3dbe5b03ea12b7fe3fa65577ba903cec398a1dfe95507b3b2a05fb31bf"}, "downloads": -1, "filename": "mdstat-1.0.1.tar.gz", "has_sig": true, "md5_digest": "45d78dfbca01f60da5eefde65ac5718e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7053, "upload_time": "2015-07-12T13:32:55", "upload_time_iso_8601": "2015-07-12T13:32:55.727736Z", "url": "https://files.pythonhosted.org/packages/61/41/00425f33b86792af5dd4676f90c66e44d38c56feaed039ecd76cc35a11eb/mdstat-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "433a891ab467dc92aa0d88a90643089f", "sha256": "d9b11821895bb37031567eceac309378103ea15271ff414f3aa676f4c2d33a4f"}, "downloads": -1, "filename": "mdstat-1.0.2.tar.gz", "has_sig": true, "md5_digest": "433a891ab467dc92aa0d88a90643089f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7051, "upload_time": "2015-09-23T12:02:21", "upload_time_iso_8601": "2015-09-23T12:02:21.136800Z", "url": "https://files.pythonhosted.org/packages/61/70/bf51323f9c6a6368a279ef639224f40c54e7bad0f669fb49d4b87acd7079/mdstat-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "0f1e9d1001df80fbaf3d033f69f9bed7", "sha256": "1780ae0a999b49f9b5a94804927bce03d643b811d0b967e8a863c811feb80ccb"}, "downloads": -1, "filename": "mdstat-1.0.3.tar.gz", "has_sig": true, "md5_digest": "0f1e9d1001df80fbaf3d033f69f9bed7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5558, "upload_time": "2016-02-22T16:03:04", "upload_time_iso_8601": "2016-02-22T16:03:04.122640Z", "url": "https://files.pythonhosted.org/packages/9e/38/b62e48ac21ec49f13c72404558d1b3c2fe252e2804f5cf062f7cc4a9fd06/mdstat-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "653aa6b1bdf1ea56d427c2bf6331bc10", "sha256": "f5587357f65f5f5ca016b125914bbdcb5ff23ed1f2649f47ee4736e5eaa7a2a9"}, "downloads": -1, "filename": "mdstat-1.0.4.tar.gz", "has_sig": true, "md5_digest": "653aa6b1bdf1ea56d427c2bf6331bc10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7332, "upload_time": "2016-05-13T15:43:32", "upload_time_iso_8601": "2016-05-13T15:43:32.978316Z", "url": "https://files.pythonhosted.org/packages/61/57/879865d489c7f56d1b1687866f4e9eaecbc7dce7072bcf5bb4877c66c492/mdstat-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "653aa6b1bdf1ea56d427c2bf6331bc10", "sha256": "f5587357f65f5f5ca016b125914bbdcb5ff23ed1f2649f47ee4736e5eaa7a2a9"}, "downloads": -1, "filename": "mdstat-1.0.4.tar.gz", "has_sig": true, "md5_digest": "653aa6b1bdf1ea56d427c2bf6331bc10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7332, "upload_time": "2016-05-13T15:43:32", "upload_time_iso_8601": "2016-05-13T15:43:32.978316Z", "url": "https://files.pythonhosted.org/packages/61/57/879865d489c7f56d1b1687866f4e9eaecbc7dce7072bcf5bb4877c66c492/mdstat-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:47 2020"}