{"info": {"author": "Harry Dolan", "author_email": "harry.dolan@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "qquery\n======\n\nThis package provides a simple interface for reading Quicken For Mac databases.  It inlcudes both a\npython module and a command line interface.\n\nLocating the Database\n---------------------\n\nQuicken For Mac keeps its user files in ``~/Library/Application Support/Quicken 2017``.\nIn that directory the database file is in ``Documents/Qdata.quicken2017/data`` (or thereabouts).\nFor safety, do not operate directly on this file.  Make a copy as, for example: ::\n\n   # cd '~/Library/Application Support/Quicken 2017'\n   # cd Documents/Qdata.quicken2017\n   # cp data /tmp/copyofqdata\n   # cd /tmp\n   # file copyofqdata \n   copyofqdata: SQLite 3.x database, last written using SQLite version 3019003\n\nThe output of the last command verifies that the file is an ``sqlite`` database.\n\nCommand Line Tool\n-----------------\n\nThe command line tool, also called ``qquery``, provides a simple, convenient interface to the database.\nIt offers many options, all of which are described with the --help switch: ::\n\n  # qquery --help\n\nHere are some examples.\n\nList all accounts: ::\n\n  # qquery --qdb=copyofqdata --list-accounts\n\nList all categories:  ::\n\n  # qquery --qdb=copyofqdata --list-categories\n\nList all transactions (this can create a lot of output):  ::\n\n  # qquery --qdb=copyofqdata --list-transactions\n\nList only transations from account \"First National\", category \"Charity\", posted during the year 2016: ::\n\n  # qquery --qdb=copyofqdata --list-transactions \\\n           --restrict-to-accounts=\"First National\" \\\n           --restrict-to-categories=\"Charity\" \\\n\t   --date-from=2016-01-01 --date-to=2016-12-31\n\nReport on the balances (including details of secuities) of all accounts as of December 31, 2016.\n(Accounts with zero balance will not be listed): ::\n\n  # qquery --qdb=copyofqdata --report-holdings --date-to=2016-12-31\n\nPython module\n-------------\n\nThe module may be included in python programs in the the usual way.  Help is also available.\nUse the following to get a list of all available functions: ::\n\n  >>> import qquery\n  >>> help (qquery)\n\nHere is how to list all accounts using the iterator provided by the function ``getAccounts()``.\nEach pass through the loop returns a dictionary for each account: ::\n\n  >>> import qquery as qq\n  >>> qq.open ('copyofqdata')\n  >>> for account in qq.getAccounts():\n  ...     print account\n  ... \n\nSimilarly, this is how to list all categories by using the iterator provided by the function\n``getCategories()``.\nEach pass through the loop returns a dictionary for each category: ::\n\n  >>> import qquery as qq\n  >>> qq.open ('copyofqdata')\n  >>> for category in qq.getCategories():\n  ...     print category\n  ... \n\nAnd for all transactions using ``getTransactions()``: ::\n\n  >>> import qquery as qq\n  >>> qq.open ('copyofqdata')\n  >>> for trans in qq.getTransactions():\n  ...     print trans\n  ... \n\nThere are many fields supplied with each ``trans`` dictionary, so the above will produce\na lot of output.  One may instead choose to examine only some of those fields as in ::\n\n  >>> import qquery as qq\n  >>> qq.open ('copyofqdata')\n  >>> for trans in qq.getTransactions():\n  ...     print trans['date'], trans['amount'], trans['payeeName']\n  ... \n\nThis can be further refined using the **setRestrictTo** functions, for example: ::\n\n  >>> import qquery as qq\n  >>> qq.open ('copyofqdata')\n  >>> qq.setRestrictToAccounts ('First National')\n  >>> qq.setRestrictToCategories ('Charity,Gifts')\n  >>> qq.setRestrictToDates (dateFrom='2016-01-01', dateTo='2016-12-31')\n  >>> for trans in qq.getTransactions():\n  ...     print trans['date'], trans['amount'], trans['payeeName']\n  ... \n\n\nNext Steps\n----------\n\nThis is a lot more information in the Quicken database than is exposed through this interface.\nRequests for feature enhancements are welcome.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/HarryDolan/qquery", "keywords": "", "license": "Unlicense", "maintainer": "", "maintainer_email": "", "name": "qquery", "package_url": "https://pypi.org/project/qquery/", "platform": "", "project_url": "https://pypi.org/project/qquery/", "project_urls": {"Homepage": "https://github.com/HarryDolan/qquery"}, "release_url": "https://pypi.org/project/qquery/0.5.8/", "requires_dist": null, "requires_python": "", "summary": "Interface to Quicken For Mac database", "version": "0.5.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package provides a simple interface for reading Quicken For Mac databases.  It inlcudes both a\npython module and a command line interface.</p>\n<div id=\"locating-the-database\">\n<h2>Locating the Database</h2>\n<p>Quicken For Mac keeps its user files in <tt>~/Library/Application Support/Quicken 2017</tt>.\nIn that directory the database file is in <tt>Documents/Qdata.quicken2017/data</tt> (or thereabouts).\nFor safety, do not operate directly on this file.  Make a copy as, for example:</p>\n<pre># cd '~/Library/Application Support/Quicken 2017'\n# cd Documents/Qdata.quicken2017\n# cp data /tmp/copyofqdata\n# cd /tmp\n# file copyofqdata\ncopyofqdata: SQLite 3.x database, last written using SQLite version 3019003\n</pre>\n<p>The output of the last command verifies that the file is an <tt>sqlite</tt> database.</p>\n</div>\n<div id=\"command-line-tool\">\n<h2>Command Line Tool</h2>\n<p>The command line tool, also called <tt>qquery</tt>, provides a simple, convenient interface to the database.\nIt offers many options, all of which are described with the \u2013help switch:</p>\n<pre># qquery --help\n</pre>\n<p>Here are some examples.</p>\n<p>List all accounts:</p>\n<pre># qquery --qdb=copyofqdata --list-accounts\n</pre>\n<p>List all categories:</p>\n<pre># qquery --qdb=copyofqdata --list-categories\n</pre>\n<p>List all transactions (this can create a lot of output):</p>\n<pre># qquery --qdb=copyofqdata --list-transactions\n</pre>\n<p>List only transations from account \u201cFirst National\u201d, category \u201cCharity\u201d, posted during the year 2016:</p>\n<pre># qquery --qdb=copyofqdata --list-transactions \\\n         --restrict-to-accounts=\"First National\" \\\n         --restrict-to-categories=\"Charity\" \\\n         --date-from=2016-01-01 --date-to=2016-12-31\n</pre>\n<p>Report on the balances (including details of secuities) of all accounts as of December 31, 2016.\n(Accounts with zero balance will not be listed):</p>\n<pre># qquery --qdb=copyofqdata --report-holdings --date-to=2016-12-31\n</pre>\n</div>\n<div id=\"python-module\">\n<h2>Python module</h2>\n<p>The module may be included in python programs in the the usual way.  Help is also available.\nUse the following to get a list of all available functions:</p>\n<pre>&gt;&gt;&gt; import qquery\n&gt;&gt;&gt; help (qquery)\n</pre>\n<p>Here is how to list all accounts using the iterator provided by the function <tt>getAccounts()</tt>.\nEach pass through the loop returns a dictionary for each account:</p>\n<pre>&gt;&gt;&gt; import qquery as qq\n&gt;&gt;&gt; qq.open ('copyofqdata')\n&gt;&gt;&gt; for account in qq.getAccounts():\n...     print account\n...\n</pre>\n<p>Similarly, this is how to list all categories by using the iterator provided by the function\n<tt>getCategories()</tt>.\nEach pass through the loop returns a dictionary for each category:</p>\n<pre>&gt;&gt;&gt; import qquery as qq\n&gt;&gt;&gt; qq.open ('copyofqdata')\n&gt;&gt;&gt; for category in qq.getCategories():\n...     print category\n...\n</pre>\n<p>And for all transactions using <tt>getTransactions()</tt>:</p>\n<pre>&gt;&gt;&gt; import qquery as qq\n&gt;&gt;&gt; qq.open ('copyofqdata')\n&gt;&gt;&gt; for trans in qq.getTransactions():\n...     print trans\n...\n</pre>\n<p>There are many fields supplied with each <tt>trans</tt> dictionary, so the above will produce\na lot of output.  One may instead choose to examine only some of those fields as in</p>\n<pre>&gt;&gt;&gt; import qquery as qq\n&gt;&gt;&gt; qq.open ('copyofqdata')\n&gt;&gt;&gt; for trans in qq.getTransactions():\n...     print trans['date'], trans['amount'], trans['payeeName']\n...\n</pre>\n<p>This can be further refined using the <strong>setRestrictTo</strong> functions, for example:</p>\n<pre>&gt;&gt;&gt; import qquery as qq\n&gt;&gt;&gt; qq.open ('copyofqdata')\n&gt;&gt;&gt; qq.setRestrictToAccounts ('First National')\n&gt;&gt;&gt; qq.setRestrictToCategories ('Charity,Gifts')\n&gt;&gt;&gt; qq.setRestrictToDates (dateFrom='2016-01-01', dateTo='2016-12-31')\n&gt;&gt;&gt; for trans in qq.getTransactions():\n...     print trans['date'], trans['amount'], trans['payeeName']\n...\n</pre>\n</div>\n<div id=\"next-steps\">\n<h2>Next Steps</h2>\n<p>This is a lot more information in the Quicken database than is exposed through this interface.\nRequests for feature enhancements are welcome.</p>\n</div>\n\n          </div>"}, "last_serial": 6305141, "releases": {"0.5.5": [{"comment_text": "", "digests": {"md5": "b3bff4718d7e5e7e12fc19a736b7785f", "sha256": "1c573d752dcd429228234395253dd0a74342822612f53dffe2bd5046ea4b4427"}, "downloads": -1, "filename": "qquery-0.5.5.tar.gz", "has_sig": false, "md5_digest": "b3bff4718d7e5e7e12fc19a736b7785f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12546, "upload_time": "2017-12-03T02:01:18", "upload_time_iso_8601": "2017-12-03T02:01:18.654352Z", "url": "https://files.pythonhosted.org/packages/3b/4b/6617ade4fc29fe3e902d337f33b21c743744a681568b9cd4ac44491904c1/qquery-0.5.5.tar.gz", "yanked": false}], "0.5.6": [{"comment_text": "", "digests": {"md5": "bc00022f683b8c16b6ef03be1fcaf22b", "sha256": "bb2cd99fa6d4f427fc65cbb1812252c2f49833f8819a69a9b6b91c8fa397b803"}, "downloads": -1, "filename": "qquery-0.5.6.tar.gz", "has_sig": false, "md5_digest": "bc00022f683b8c16b6ef03be1fcaf22b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12580, "upload_time": "2017-12-03T02:13:11", "upload_time_iso_8601": "2017-12-03T02:13:11.884137Z", "url": "https://files.pythonhosted.org/packages/d8/b6/2fd845d6fe9f75372ab052097f6f1f99e8242283b09a2051c6833bf893d6/qquery-0.5.6.tar.gz", "yanked": false}], "0.5.8": [{"comment_text": "", "digests": {"md5": "269a95c4a909f58d98722d3e55ed7bc7", "sha256": "41d99cf6a032d37474caebf0669b33240883c6a26d20b686a0aacffa7f0b8cdc"}, "downloads": -1, "filename": "qquery-0.5.8.tar.gz", "has_sig": false, "md5_digest": "269a95c4a909f58d98722d3e55ed7bc7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11726, "upload_time": "2019-12-15T00:55:15", "upload_time_iso_8601": "2019-12-15T00:55:15.496683Z", "url": "https://files.pythonhosted.org/packages/5d/e1/47ccd1dec36ae7fe1c8983f1bc84758b973de56be599dbcb06c4938a0e54/qquery-0.5.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "269a95c4a909f58d98722d3e55ed7bc7", "sha256": "41d99cf6a032d37474caebf0669b33240883c6a26d20b686a0aacffa7f0b8cdc"}, "downloads": -1, "filename": "qquery-0.5.8.tar.gz", "has_sig": false, "md5_digest": "269a95c4a909f58d98722d3e55ed7bc7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11726, "upload_time": "2019-12-15T00:55:15", "upload_time_iso_8601": "2019-12-15T00:55:15.496683Z", "url": "https://files.pythonhosted.org/packages/5d/e1/47ccd1dec36ae7fe1c8983f1bc84758b973de56be599dbcb06c4938a0e54/qquery-0.5.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:17 2020"}