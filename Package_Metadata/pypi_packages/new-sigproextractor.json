{"info": {"author": "S Mishu Ashiqul Islam", "author_email": "m0islam@ucsd.edu", "bugtrack_url": null, "classifiers": [], "description": "# SigProfilerExtractor\nSigProfilerExtractor allows de novo extraction of mutational signatures from data generated in a matrix format. \nThe tool identifies the number of operative mutational signatures, their activities in each sample, and the probability \nfor each signature to cause a specific mutation type in a cancer sample. The tool makes use of SigProfilerMatrixGenerator \nand SigProfilerPlotting. \n\n## INSTALLATION\nIn the commandline, please type the following line:\n```\n$pip install sigproextractor\n```\nInstall your desired reference genome from the command line/terminal as follows (available reference genomes are: GRCh37, GRCh38, mm9, and mm10):\n```\n$ python\n>> from SigProfilerMatrixGenerator import install as genInstall\n>> genInstall.install('GRCh37')\n```\nThis will install the human 37 assembly as a reference genome. You may install as many genomes as you wish.\n\nopen a python interpreter and import the SigProfilerExtractor module. Please see the examples of the functions. \n\n## FUNCTIONS\n\n### importdata \n\n\n    Imports the path of example data.\n\n    importdata(datatype=\"matobj\")\n\n    Example: \n    -------\n    >>> from sigproextractor import sigpro as sig\n    >>> data = sig.importdata(\"text\")\n    This \"data\" variable can be used as a parameter of the \"project\" argument of the sigProfilerExtractor function.\n\n    To get help on the parameters and outputs of the \"importdata\" function, please write down the following line:\n\n    >>> help(sig.importdata)\n\n\n### sigProfilerExtractor \n\n\n    Extracts mutational signatures from an array of samples.\n\n    sigProfilerExtractor(input_type, out_put, project, refgen=\"GRCh37\", startProcess=1, endProcess=10, totalIterations=8, \n    cpu=-1, hierarchy = False, mtype = [\"default\"],exome = False, indel_extended = False)\n\n\n\n    Examples\n    --------\n\n    >>> from sigproextractor import sigpro as sig\n    >>> data = sig.importdata(\"vcf\")\n    >>> sig.sigProfilerExtractor(\"vcf\", \"example_output\", data, startProcess=1, endProcess=3)\n\n    Wait untill the excecution is finished. The process may a couple of hours based on the size of the data.\n    Check the current working directory for the \"example_output\" folder.\n\n    To get help on the parameters and outputs of the \"sigProfilerExtractor\" function, please write down the following line:\n\n    >>> help(sig.sigProfilerExtractor)\n\n\n## COPYRIGHT\nThis software and its documentation are copyright 2018 as a part of the sigProfiler project. The SigProfilerExtractor framework is free software and is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\n## CONTACT INFORMATION\nPlease address any queries or bug reports to S M Ashiqul Islam (Mishu) at m0islam.ucsd.edu\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AlexandrovLab/SigProfilerExtractor.git", "keywords": "", "license": "UCSD", "maintainer": "", "maintainer_email": "", "name": "new-sigproextractor", "package_url": "https://pypi.org/project/new-sigproextractor/", "platform": "", "project_url": "https://pypi.org/project/new-sigproextractor/", "project_urls": {"Homepage": "https://github.com/AlexandrovLab/SigProfilerExtractor.git"}, "release_url": "https://pypi.org/project/new-sigproextractor/0.0.0.1/", "requires_dist": ["matplotlib (>=2.2.2)", "scipy (>=1.1.0)", "numpy (>=1.14.4)", "pandas (>=0.23.4)", "nimfa (>=1.1.0)", "SigProfilerMatrixGenerator (>=0.1.20)", "sigProfilerPlotting (>=0.1.17)", "pillow", "statsmodels (>=0.9.0)", "scikit-learn (>=0.20.2)"], "requires_python": "", "summary": "Extracts mutational signatures from mutational catalogues", "version": "0.0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SigProfilerExtractor</h1>\n<p>SigProfilerExtractor allows de novo extraction of mutational signatures from data generated in a matrix format.\nThe tool identifies the number of operative mutational signatures, their activities in each sample, and the probability\nfor each signature to cause a specific mutation type in a cancer sample. The tool makes use of SigProfilerMatrixGenerator\nand SigProfilerPlotting.</p>\n<h2>INSTALLATION</h2>\n<p>In the commandline, please type the following line:</p>\n<pre><code>$pip install sigproextractor\n</code></pre>\n<p>Install your desired reference genome from the command line/terminal as follows (available reference genomes are: GRCh37, GRCh38, mm9, and mm10):</p>\n<pre><code>$ python\n&gt;&gt; from SigProfilerMatrixGenerator import install as genInstall\n&gt;&gt; genInstall.install('GRCh37')\n</code></pre>\n<p>This will install the human 37 assembly as a reference genome. You may install as many genomes as you wish.</p>\n<p>open a python interpreter and import the SigProfilerExtractor module. Please see the examples of the functions.</p>\n<h2>FUNCTIONS</h2>\n<h3>importdata</h3>\n<pre><code>Imports the path of example data.\n\nimportdata(datatype=\"matobj\")\n\nExample: \n-------\n&gt;&gt;&gt; from sigproextractor import sigpro as sig\n&gt;&gt;&gt; data = sig.importdata(\"text\")\nThis \"data\" variable can be used as a parameter of the \"project\" argument of the sigProfilerExtractor function.\n\nTo get help on the parameters and outputs of the \"importdata\" function, please write down the following line:\n\n&gt;&gt;&gt; help(sig.importdata)\n</code></pre>\n<h3>sigProfilerExtractor</h3>\n<pre><code>Extracts mutational signatures from an array of samples.\n\nsigProfilerExtractor(input_type, out_put, project, refgen=\"GRCh37\", startProcess=1, endProcess=10, totalIterations=8, \ncpu=-1, hierarchy = False, mtype = [\"default\"],exome = False, indel_extended = False)\n\n\n\nExamples\n--------\n\n&gt;&gt;&gt; from sigproextractor import sigpro as sig\n&gt;&gt;&gt; data = sig.importdata(\"vcf\")\n&gt;&gt;&gt; sig.sigProfilerExtractor(\"vcf\", \"example_output\", data, startProcess=1, endProcess=3)\n\nWait untill the excecution is finished. The process may a couple of hours based on the size of the data.\nCheck the current working directory for the \"example_output\" folder.\n\nTo get help on the parameters and outputs of the \"sigProfilerExtractor\" function, please write down the following line:\n\n&gt;&gt;&gt; help(sig.sigProfilerExtractor)\n</code></pre>\n<h2>COPYRIGHT</h2>\n<p>This software and its documentation are copyright 2018 as a part of the sigProfiler project. The SigProfilerExtractor framework is free software and is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</p>\n<h2>CONTACT INFORMATION</h2>\n<p>Please address any queries or bug reports to S M Ashiqul Islam (Mishu) at m0islam.ucsd.edu</p>\n\n          </div>"}, "last_serial": 5463751, "releases": {"0.0.0.1": [{"comment_text": "", "digests": {"md5": "3d6464b58b41bcdea406bcfb5e4ab87f", "sha256": "3be0dd58205e4ac6a3aa1629b5e22df4e6f5d69ef55b3ea0e409b2f9ff56ccda"}, "downloads": -1, "filename": "new_sigproextractor-0.0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3d6464b58b41bcdea406bcfb5e4ab87f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33107949, "upload_time": "2019-06-28T22:26:08", "upload_time_iso_8601": "2019-06-28T22:26:08.273496Z", "url": "https://files.pythonhosted.org/packages/bd/26/92b03b7494f84da4f4c1872b0bf9a23e9c0d02849bcae815d88c9f5b2ac7/new_sigproextractor-0.0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dedbb16593aa74c0c64249046c89179b", "sha256": "5fc6e3b0f85552f1d4815cc2c32a57f816d18bf1793d08320867cad8afd9fdeb"}, "downloads": -1, "filename": "new_sigproextractor-0.0.0.1.tar.gz", "has_sig": false, "md5_digest": "dedbb16593aa74c0c64249046c89179b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27249, "upload_time": "2019-06-28T22:26:12", "upload_time_iso_8601": "2019-06-28T22:26:12.127669Z", "url": "https://files.pythonhosted.org/packages/06/24/15c5d5f82e2b01f2a1f57b7c772dc20d7360c60a8013ecde5e564ee01eb8/new_sigproextractor-0.0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d6464b58b41bcdea406bcfb5e4ab87f", "sha256": "3be0dd58205e4ac6a3aa1629b5e22df4e6f5d69ef55b3ea0e409b2f9ff56ccda"}, "downloads": -1, "filename": "new_sigproextractor-0.0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3d6464b58b41bcdea406bcfb5e4ab87f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33107949, "upload_time": "2019-06-28T22:26:08", "upload_time_iso_8601": "2019-06-28T22:26:08.273496Z", "url": "https://files.pythonhosted.org/packages/bd/26/92b03b7494f84da4f4c1872b0bf9a23e9c0d02849bcae815d88c9f5b2ac7/new_sigproextractor-0.0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dedbb16593aa74c0c64249046c89179b", "sha256": "5fc6e3b0f85552f1d4815cc2c32a57f816d18bf1793d08320867cad8afd9fdeb"}, "downloads": -1, "filename": "new_sigproextractor-0.0.0.1.tar.gz", "has_sig": false, "md5_digest": "dedbb16593aa74c0c64249046c89179b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27249, "upload_time": "2019-06-28T22:26:12", "upload_time_iso_8601": "2019-06-28T22:26:12.127669Z", "url": "https://files.pythonhosted.org/packages/06/24/15c5d5f82e2b01f2a1f57b7c772dc20d7360c60a8013ecde5e564ee01eb8/new_sigproextractor-0.0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:39 2020"}