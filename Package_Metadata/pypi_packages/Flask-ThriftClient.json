{"info": {"author": "Pierre Lamot", "author_email": "pierre.lamot@yahoo.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Flask", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 2 :: Only", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Flask ThriftClient\n##################\n\nIntroduction\n============\n\nThis extension provide a simple intergration with\n`Thrift <https://thrift.apache.org>`_ RPC server.\n\n.. code:: python\n\n    from flask import Flask\n    from flask_thriftclient import ThriftClient\n\n    from MyGeneratedThriftCode import MyService\n\n    app = Flask(__name__)\n    app.config[\"THRIFTCLIENT_TRANSPORT\"] = \"tcp://127.0.0.1:9090\"\n\n    thriftclient = ThriftClient(MyService.Client, app)\n\n    @app.route(\"/\")\n    def home():\n        data = thriftclient.client.mymethod()\n        return data\n\n\nTransport\n=========\n\nThrift endpoints are defined in the configuration variable\nTHRIFTCLIENT_TRANSPORT as an URL. The default transport is\ntcp://localhost:9090\n\nAvailable url schemes are:\n\ntcp: use TCP socket as transport, you have to define the server\naddress and port. If the port isn't defined, 9090 will be used\n\nExample:\n\n  * tcp://127.0.0.1\n\n  * tcp://localhost:1234/\n\n\nhttp: use HTTP protocol as transport. Examples:\n\n  * http://myservice.local/\n\nunix: use unix sockets as transport, as this scheme follow URI format,\nit *MUST* have either no or three \"/\" before the socket path\n\n  * unix:///tmp/mysocket #absolute path\n\n  * unix:/tmp/mysocket #absolute path\n\n  * unix:./mysocket #relative path\n\nSSL\n===\n\nYou may set SSL version of transport communications by using *'s'*\nversion of url scheme:\n\ntcp <=> tcps\nhttp <=> https\nunix <=> unixs\n\nexamples:\n\n  * https://myserver/\n\n  * unixs:/tmp/mysocket\n\n  * tcps://localhost:5533/\n\nTwo options are related to SSL transport:\n\nTHRIFTCLIENT_SSL_VALIDATE: True if the certificate has to be validated\n(default True)\n\nTHRIFTCLIENT_SSL_CA_CERTS: path to the SSL certificate (default None)\n\nNote that you *MUST* set one of theses options:\n\n.. code:: python\n\n    app.config[\"THRIFTCLIENT_SSL_VALIDATE\"] = False\n    app.config[\"THRIFTCLIENT_TRANSPORT\"] = \"https://127.0.0.1/\"\n\n    #or\n\n    app.config[\"THRIFTCLIENT_SSL_CA_CERTS\"] = \"./cacert.pem\"\n    app.config[\"THRIFTCLIENT_TRANSPORT\"] = \"https://127.0.0.1/\"\n\nProtocol\n========\n\nYou may define which procotol must be use by setting the parametter\n*THRIFTCLIENT_PROTOCOL*. The default protocol is Binary.\n\nAvailable parametters are:\n\nThriftClient.BINARY or \"BINARY\" : use the binary protocol\n\nThriftClient.COMPACT or \"COMPACT\" : use the compact protocol\n\nThriftClient.JSON or \"JSON\" : use the JSON protocol. note that this\nprotocol is only available for thrift >= 0.9.1\n\nConnection\n==========\n\nBy default the application will open then close the transport for each request\nThis can be overriden by setting *THRIFTCLIENT_ALWAYS_CONNECT* to False\n\nwhen THRIFTCLIENT_ALWAYS_CONNECT is set to False there is 3 ways to handle your\nconnections:\n\n- you can call transport.close and transport.open manually\n- you can use the autoconnect decorator\n- you can use the connect \"with\" context\n\n.. code:: python\n\n    app = Flask(__name__)\n    app.config[\"THRIFTCLIENT_TRANSPORT\"] = \"tcp://127.0.0.1:9090\"\n    app.config[\"THRIFTCLIENT_ALWAYS_CONNECT\"] = False\n\n    thriftclient = ThriftClient(MyService.Client, app)\n\n    @app.route(\"/with_autoconnect\")\n    @thriftclient.autoconnect\n    def with_autoconnect():\n        data = thriftclient.client.mymethod()\n        return data\n\n    @app.route(\"/with_context\")\n    def with_context():\n        with thriftclient.connect():\n            data = thriftclient.client.mymethod()\n            return data\n\n    @app.route(\"/with_manual_connection\")\n    def with_manual_connection():\n        thriftclient.transport.open()\n        data = thriftclient.client.mymethod()\n        thriftclient.transport.close()\n        return data\n\nOptions\n=======\n\nOther options are:\n\nTHRIFTCLIENT_BUFFERED: use buffered transport (default False)\n\nTHRIFTCLIENT_ZLIB: use zlib compressed transport (default False)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/chub/flask-thriftclient", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "Flask-ThriftClient", "package_url": "https://pypi.org/project/Flask-ThriftClient/", "platform": "any", "project_url": "https://pypi.org/project/Flask-ThriftClient/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/chub/flask-thriftclient"}, "release_url": "https://pypi.org/project/Flask-ThriftClient/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Adds thrift client support to your Flask application", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This extension provide a simple intergration with\n<a href=\"https://thrift.apache.org\" rel=\"nofollow\">Thrift</a> RPC server.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_thriftclient</span> <span class=\"kn\">import</span> <span class=\"n\">ThriftClient</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">MyGeneratedThriftCode</span> <span class=\"kn\">import</span> <span class=\"n\">MyService</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"THRIFTCLIENT_TRANSPORT\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"tcp://127.0.0.1:9090\"</span>\n\n<span class=\"n\">thriftclient</span> <span class=\"o\">=</span> <span class=\"n\">ThriftClient</span><span class=\"p\">(</span><span class=\"n\">MyService</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">home</span><span class=\"p\">():</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">thriftclient</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mymethod</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">data</span>\n</pre>\n</div>\n<div id=\"transport\">\n<h2>Transport</h2>\n<p>Thrift endpoints are defined in the configuration variable\nTHRIFTCLIENT_TRANSPORT as an URL. The default transport is\n<a>tcp://localhost:9090</a></p>\n<p>Available url schemes are:</p>\n<p>tcp: use TCP socket as transport, you have to define the server\naddress and port. If the port isn\u2019t defined, 9090 will be used</p>\n<p>Example:</p>\n<blockquote>\n<ul>\n<li><a>tcp://127.0.0.1</a></li>\n<li><a>tcp://localhost:1234/</a></li>\n</ul>\n</blockquote>\n<p>http: use HTTP protocol as transport. Examples:</p>\n<blockquote>\n<ul>\n<li><a href=\"http://myservice.local/\" rel=\"nofollow\">http://myservice.local/</a></li>\n</ul>\n</blockquote>\n<p>unix: use unix sockets as transport, as this scheme follow URI format,\nit <em>MUST</em> have either no or three \u201c/\u201d before the socket path</p>\n<blockquote>\n<ul>\n<li>unix:///tmp/mysocket #absolute path</li>\n<li>unix:/tmp/mysocket #absolute path</li>\n<li>unix:./mysocket #relative path</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"ssl\">\n<h2>SSL</h2>\n<p>You may set SSL version of transport communications by using <em>\u2018s\u2019</em>\nversion of url scheme:</p>\n<p>tcp &lt;=&gt; tcps\nhttp &lt;=&gt; https\nunix &lt;=&gt; unixs</p>\n<p>examples:</p>\n<blockquote>\n<ul>\n<li><a href=\"https://myserver/\" rel=\"nofollow\">https://myserver/</a></li>\n<li>unixs:/tmp/mysocket</li>\n<li>tcps://localhost:5533/</li>\n</ul>\n</blockquote>\n<p>Two options are related to SSL transport:</p>\n<p>THRIFTCLIENT_SSL_VALIDATE: True if the certificate has to be validated\n(default True)</p>\n<p>THRIFTCLIENT_SSL_CA_CERTS: path to the SSL certificate (default None)</p>\n<p>Note that you <em>MUST</em> set one of theses options:</p>\n<pre><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"THRIFTCLIENT_SSL_VALIDATE\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"THRIFTCLIENT_TRANSPORT\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://127.0.0.1/\"</span>\n\n<span class=\"c1\">#or</span>\n\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"THRIFTCLIENT_SSL_CA_CERTS\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"./cacert.pem\"</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"THRIFTCLIENT_TRANSPORT\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://127.0.0.1/\"</span>\n</pre>\n</div>\n<div id=\"protocol\">\n<h2>Protocol</h2>\n<p>You may define which procotol must be use by setting the parametter\n<em>THRIFTCLIENT_PROTOCOL</em>. The default protocol is Binary.</p>\n<p>Available parametters are:</p>\n<p>ThriftClient.BINARY or \u201cBINARY\u201d : use the binary protocol</p>\n<p>ThriftClient.COMPACT or \u201cCOMPACT\u201d : use the compact protocol</p>\n<p>ThriftClient.JSON or \u201cJSON\u201d : use the JSON protocol. note that this\nprotocol is only available for thrift &gt;= 0.9.1</p>\n</div>\n<div id=\"connection\">\n<h2>Connection</h2>\n<p>By default the application will open then close the transport for each request\nThis can be overriden by setting <em>THRIFTCLIENT_ALWAYS_CONNECT</em> to False</p>\n<p>when THRIFTCLIENT_ALWAYS_CONNECT is set to False there is 3 ways to handle your\nconnections:</p>\n<ul>\n<li>you can call transport.close and transport.open manually</li>\n<li>you can use the autoconnect decorator</li>\n<li>you can use the connect \u201cwith\u201d context</li>\n</ul>\n<pre><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"THRIFTCLIENT_TRANSPORT\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"tcp://127.0.0.1:9090\"</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"THRIFTCLIENT_ALWAYS_CONNECT\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n<span class=\"n\">thriftclient</span> <span class=\"o\">=</span> <span class=\"n\">ThriftClient</span><span class=\"p\">(</span><span class=\"n\">MyService</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/with_autoconnect\"</span><span class=\"p\">)</span>\n<span class=\"nd\">@thriftclient</span><span class=\"o\">.</span><span class=\"n\">autoconnect</span>\n<span class=\"k\">def</span> <span class=\"nf\">with_autoconnect</span><span class=\"p\">():</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">thriftclient</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mymethod</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">data</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/with_context\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">with_context</span><span class=\"p\">():</span>\n    <span class=\"k\">with</span> <span class=\"n\">thriftclient</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">():</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">thriftclient</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mymethod</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">data</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/with_manual_connection\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">with_manual_connection</span><span class=\"p\">():</span>\n    <span class=\"n\">thriftclient</span><span class=\"o\">.</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">()</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">thriftclient</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mymethod</span><span class=\"p\">()</span>\n    <span class=\"n\">thriftclient</span><span class=\"o\">.</span><span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">data</span>\n</pre>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n<p>Other options are:</p>\n<p>THRIFTCLIENT_BUFFERED: use buffered transport (default False)</p>\n<p>THRIFTCLIENT_ZLIB: use zlib compressed transport (default False)</p>\n</div>\n\n          </div>"}, "last_serial": 1445983, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fcb2391bf58b7e31728b34df5e556cc7", "sha256": "a6abdf78d89245f8d371137c6cc367df7e962fdb8a03c343fe0403d9f548b92b"}, "downloads": -1, "filename": "Flask-ThriftClient-0.1.tar.gz", "has_sig": false, "md5_digest": "fcb2391bf58b7e31728b34df5e556cc7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4716, "upload_time": "2014-02-28T09:35:27", "upload_time_iso_8601": "2014-02-28T09:35:27.050679Z", "url": "https://files.pythonhosted.org/packages/86/eb/d7e3c0d14dc64caed3d87189a636a4f046698a1ab6816ca409cc7f83a54c/Flask-ThriftClient-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "27adfbe571d10d8a8e52b3b78d693697", "sha256": "bb35fab3ee02b0e9273d19562e7be948097d06e1f528127852acbc8b939f6d11"}, "downloads": -1, "filename": "Flask-ThriftClient-0.1.1.tar.gz", "has_sig": false, "md5_digest": "27adfbe571d10d8a8e52b3b78d693697", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4775, "upload_time": "2014-04-22T13:27:29", "upload_time_iso_8601": "2014-04-22T13:27:29.294311Z", "url": "https://files.pythonhosted.org/packages/7a/68/ef9a3f54a321f420d2dd0a5e29aad4f414f6acfa1a03e1486329875ab373/Flask-ThriftClient-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2afbecf6463633de8cedf803948746cd", "sha256": "be0a1fee3c31a4579eebbefab6ac4bcd64f44090aa8e3bacd6c9d8735bbefa33"}, "downloads": -1, "filename": "Flask-ThriftClient-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2afbecf6463633de8cedf803948746cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5733, "upload_time": "2015-03-03T12:30:43", "upload_time_iso_8601": "2015-03-03T12:30:43.029729Z", "url": "https://files.pythonhosted.org/packages/43/b7/b79ddf369c47711f1fa92445b23a73d96bfbf7c328dca519585b4e927bd5/Flask-ThriftClient-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2afbecf6463633de8cedf803948746cd", "sha256": "be0a1fee3c31a4579eebbefab6ac4bcd64f44090aa8e3bacd6c9d8735bbefa33"}, "downloads": -1, "filename": "Flask-ThriftClient-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2afbecf6463633de8cedf803948746cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5733, "upload_time": "2015-03-03T12:30:43", "upload_time_iso_8601": "2015-03-03T12:30:43.029729Z", "url": "https://files.pythonhosted.org/packages/43/b7/b79ddf369c47711f1fa92445b23a73d96bfbf7c328dca519585b4e927bd5/Flask-ThriftClient-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:12 2020"}