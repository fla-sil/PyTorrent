{"info": {"author": "TU Wien", "author_email": "remote.sensing@geo.tuwien.ac.at", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Version Control :: Git"], "description": "<img align=\"right\" src=\"https://github.com/TUW-GEO/yeoda/raw/master/docs/imgs/yeoda_logo.png\" height=\"300\" width=\"435\">\n\n# yeoda\n[![Build Status](https://travis-ci.com/TUW-GEO/yeoda.svg?branch=master)](https://travis-ci.org/TUW-GEO/yeoda)\n[![Coverage Status](https://coveralls.io/repos/github/TUW-GEO/yeoda/badge.svg?branch=master)](https://coveralls.io/github/TUW-GEO/yeoda?branch=master)\n[![PyPi Package](https://badge.fury.io/py/yeoda.svg)](https://badge.fury.io/py/yeoda)\n[![RTD](https://readthedocs.org/projects/yeoda/badge/?version=latest)](https://yeoda.readthedocs.io/en/latest/?badge=latest)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n*Earth Observation (EO) data, I must read.*\n\n## Description\n*yeoda* stands for **y**our **e**arth **o**bservation **d**ata **a**ccess and provides lower and higher-level data cube \nclasses to work with well-defined and structured earth observation data. These data cubes allow to filter, split and load data independently from the way the data is structured on the hard disk. Once the data structure is known to *yeoda*, it offers a user-friendly interface to access the data with the aforementioned operations.\nInternally, the package relies on functionalities provided by [*geopathfinder*](https://github.com/TUW-GEO/geopathfinder) \n(filepath/filename and folder structure handling library), [*veranda*](https://github.com/TUW-GEO/veranda) (IO classes and higher-level data structure classes for vector and raster data)\nand [*geospade*](https://github.com/TUW-GEO/geospade) (raster and vector geometry definitions and operations).\nMoreover, another very important part of *yeoda* is work with pre-defined grids like the [*Equi7Grid*](https://github.com/TUW-GEO/Equi7Grid) or the [*LatLonGrid*](https://github.com/TUW-GEO/latlongrid).\nThese grid packages can simplify and speed up spatial operations to identify tiles/files of interest (e.g, bounding box request by a user).\n\n## Limitations and Outlook\nAt the moment the functionality of *yeoda* is limited in terms of flexibility with different file types, bands and \ntiles, e.g. you can only load data from one tile and one band. This will change in the future by allowing to load data also independently from tile boundaries, bands and file types.\nMost changes will take place in *veranda* and *geospade*, so the actual interface to the data given by *yeoda* should stay approximately the same.\n\n## Installation\nThe package can be either installed via pip or if you solely want to work with *yeoda* or contribute, we recommend to \ninstall it as a conda environment. If you work already with your own environment, please have look at ``requirements.txt``.\n\n### pip\nTo install *yeoda* via pip in your own environment, use:\n```\npip install yeoda\n```\n\n### conda\nThe packages also comes along with two conda environments, one for Linux (``conda_env_linux.yml``) and one for Windows (``conda_env_windows.yml``). \nThis is especially recommended if you want to contribute to the project.\nThe following script will install miniconda and setup the environment on a UNIX\nlike system. Miniconda will be installed into ``$HOME/miniconda``.\n```\nwget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh\nbash miniconda.sh -b -p $HOME/miniconda\nexport PATH=\"$HOME/miniconda/bin:$PATH\"\nconda env create -f conda_env_linux.yml\nsource activate yeoda\n```\nThis script adds ``$HOME/miniconda/bin`` temporarily to the ``PATH`` to do this\npermanently add ``export PATH=\"$HOME/miniconda/bin:$PATH\"`` to your ``.bashrc``\nor ``.zshrc``.\n\nFor Windows, use the following setup:\n  * Download the latest [miniconda 3 installer](https://docs.conda.io/en/latest/miniconda.html) for Windows\n  * Click on ``.exe`` file and complete the installation.\n  * Add the folder ``condabin`` folder to your environment variable ``PATH``. \n    You can find the ``condabin`` folder usually under: ``C:\\Users\\username\\AppData\\Local\\Continuum\\miniconda3\\condabin``\n  * Finally, you can set up the conda environment via:\n    ```\n    conda env create -f conda_env_windows.yml\n    source activate yeoda\n    ```\n    \nAfter that you should be able to run \n```\npython setup.py test\n```\nto run the test suite.\n\n## Contribution\nWe are happy if you want to contribute. Please raise an issue explaining what\nis missing or if you find a bug. We will also gladly accept pull requests\nagainst our master branch for new features or bug fixes.\nIf you want to contribute please follow these steps:\n\n  * Fork the *yeoda* repository to your account\n  * Clone the *yeoda* repository\n  * Make a new feature branch from the *yeoda* master branch\n  * Add your feature\n  * Please include tests for your contributions in one of the test directories.\n    We use *py.test* so a simple function called ``test_my_feature`` is enough\n  * Submit a pull request to our master branch\n  \n## Citation\n\n[![DOI](https://zenodo.org/badge/186986862.svg)](https://zenodo.org/badge/latestdoi/186986862)\n\nIf you use this software in a publication then please cite it using the Zenodo DOI.\nBe aware that this badge links to the latest package version.\n\nPlease select your specific version at <https://doi.org/10.5281/zenodo.3540693> (link to first release) to get the DOI of that version.\nYou should normally always use the DOI for the specific version of your record in citations.\nThis is to ensure that other researchers can access the exact research artefact you used for reproducibility.\n\nYou can find additional information regarding DOI versioning at <http://help.zenodo.org/#versioning>.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/TUW-GEO/yeoda/archive/v0.1.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TUW-GEO/yeoda", "keywords": "Earth Observation,Remote Sensing,Data Reader,Data Cube", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "yeoda", "package_url": "https://pypi.org/project/yeoda/", "platform": "any", "project_url": "https://pypi.org/project/yeoda/", "project_urls": {"Download": "https://github.com/TUW-GEO/yeoda/archive/v0.1.0.tar.gz", "Homepage": "https://github.com/TUW-GEO/yeoda"}, "release_url": "https://pypi.org/project/yeoda/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "yeoda provides lower and higher-level data cube classes to work with well-defined and well-structured earth observation data.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img align=\"right\" height=\"300\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2d8db7535a4ba8dbb20af3ceca51f7030c573e3/68747470733a2f2f6769746875622e636f6d2f5455572d47454f2f79656f64612f7261772f6d61737465722f646f63732f696d67732f79656f64615f6c6f676f2e706e67\" width=\"435\">\n<h1>yeoda</h1>\n<p><a href=\"https://travis-ci.org/TUW-GEO/yeoda\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/11d1dfbaf1d1f3046baf0bd632fad057d9514769/68747470733a2f2f7472617669732d63692e636f6d2f5455572d47454f2f79656f64612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/TUW-GEO/yeoda?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3b1c6bbe07e4d9938eaec71dfadb141177a26aaa/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f5455572d47454f2f79656f64612f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/yeoda\" rel=\"nofollow\"><img alt=\"PyPi Package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9932b0c5ec8be89e9eddca6de16a868d0c756d66/68747470733a2f2f62616467652e667572792e696f2f70792f79656f64612e737667\"></a>\n<a href=\"https://yeoda.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"RTD\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2eb40a647fbe759c9828a2e76537bed5b5c32eaf/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f79656f64612f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a></p>\n<p><em>Earth Observation (EO) data, I must read.</em></p>\n<h2>Description</h2>\n<p><em>yeoda</em> stands for <strong>y</strong>our <strong>e</strong>arth <strong>o</strong>bservation <strong>d</strong>ata <strong>a</strong>ccess and provides lower and higher-level data cube\nclasses to work with well-defined and structured earth observation data. These data cubes allow to filter, split and load data independently from the way the data is structured on the hard disk. Once the data structure is known to <em>yeoda</em>, it offers a user-friendly interface to access the data with the aforementioned operations.\nInternally, the package relies on functionalities provided by <a href=\"https://github.com/TUW-GEO/geopathfinder\" rel=\"nofollow\"><em>geopathfinder</em></a>\n(filepath/filename and folder structure handling library), <a href=\"https://github.com/TUW-GEO/veranda\" rel=\"nofollow\"><em>veranda</em></a> (IO classes and higher-level data structure classes for vector and raster data)\nand <a href=\"https://github.com/TUW-GEO/geospade\" rel=\"nofollow\"><em>geospade</em></a> (raster and vector geometry definitions and operations).\nMoreover, another very important part of <em>yeoda</em> is work with pre-defined grids like the <a href=\"https://github.com/TUW-GEO/Equi7Grid\" rel=\"nofollow\"><em>Equi7Grid</em></a> or the <a href=\"https://github.com/TUW-GEO/latlongrid\" rel=\"nofollow\"><em>LatLonGrid</em></a>.\nThese grid packages can simplify and speed up spatial operations to identify tiles/files of interest (e.g, bounding box request by a user).</p>\n<h2>Limitations and Outlook</h2>\n<p>At the moment the functionality of <em>yeoda</em> is limited in terms of flexibility with different file types, bands and\ntiles, e.g. you can only load data from one tile and one band. This will change in the future by allowing to load data also independently from tile boundaries, bands and file types.\nMost changes will take place in <em>veranda</em> and <em>geospade</em>, so the actual interface to the data given by <em>yeoda</em> should stay approximately the same.</p>\n<h2>Installation</h2>\n<p>The package can be either installed via pip or if you solely want to work with <em>yeoda</em> or contribute, we recommend to\ninstall it as a conda environment. If you work already with your own environment, please have look at <code>requirements.txt</code>.</p>\n<h3>pip</h3>\n<p>To install <em>yeoda</em> via pip in your own environment, use:</p>\n<pre><code>pip install yeoda\n</code></pre>\n<h3>conda</h3>\n<p>The packages also comes along with two conda environments, one for Linux (<code>conda_env_linux.yml</code>) and one for Windows (<code>conda_env_windows.yml</code>).\nThis is especially recommended if you want to contribute to the project.\nThe following script will install miniconda and setup the environment on a UNIX\nlike system. Miniconda will be installed into <code>$HOME/miniconda</code>.</p>\n<pre><code>wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh\nbash miniconda.sh -b -p $HOME/miniconda\nexport PATH=\"$HOME/miniconda/bin:$PATH\"\nconda env create -f conda_env_linux.yml\nsource activate yeoda\n</code></pre>\n<p>This script adds <code>$HOME/miniconda/bin</code> temporarily to the <code>PATH</code> to do this\npermanently add <code>export PATH=\"$HOME/miniconda/bin:$PATH\"</code> to your <code>.bashrc</code>\nor <code>.zshrc</code>.</p>\n<p>For Windows, use the following setup:</p>\n<ul>\n<li>Download the latest <a href=\"https://docs.conda.io/en/latest/miniconda.html\" rel=\"nofollow\">miniconda 3 installer</a> for Windows</li>\n<li>Click on <code>.exe</code> file and complete the installation.</li>\n<li>Add the folder <code>condabin</code> folder to your environment variable <code>PATH</code>.\nYou can find the <code>condabin</code> folder usually under: <code>C:\\Users\\username\\AppData\\Local\\Continuum\\miniconda3\\condabin</code></li>\n<li>Finally, you can set up the conda environment via:\n<pre><code>conda env create -f conda_env_windows.yml\nsource activate yeoda\n</code></pre>\n</li>\n</ul>\n<p>After that you should be able to run</p>\n<pre><code>python setup.py test\n</code></pre>\n<p>to run the test suite.</p>\n<h2>Contribution</h2>\n<p>We are happy if you want to contribute. Please raise an issue explaining what\nis missing or if you find a bug. We will also gladly accept pull requests\nagainst our master branch for new features or bug fixes.\nIf you want to contribute please follow these steps:</p>\n<ul>\n<li>Fork the <em>yeoda</em> repository to your account</li>\n<li>Clone the <em>yeoda</em> repository</li>\n<li>Make a new feature branch from the <em>yeoda</em> master branch</li>\n<li>Add your feature</li>\n<li>Please include tests for your contributions in one of the test directories.\nWe use <em>py.test</em> so a simple function called <code>test_my_feature</code> is enough</li>\n<li>Submit a pull request to our master branch</li>\n</ul>\n<h2>Citation</h2>\n<p><a href=\"https://zenodo.org/badge/latestdoi/186986862\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08f49e37195d4aadca61a5510f9fe3b7e74320c3/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3138363938363836322e737667\"></a></p>\n<p>If you use this software in a publication then please cite it using the Zenodo DOI.\nBe aware that this badge links to the latest package version.</p>\n<p>Please select your specific version at <a href=\"https://doi.org/10.5281/zenodo.3540693\" rel=\"nofollow\">https://doi.org/10.5281/zenodo.3540693</a> (link to first release) to get the DOI of that version.\nYou should normally always use the DOI for the specific version of your record in citations.\nThis is to ensure that other researchers can access the exact research artefact you used for reproducibility.</p>\n<p>You can find additional information regarding DOI versioning at <a href=\"http://help.zenodo.org/#versioning\" rel=\"nofollow\">http://help.zenodo.org/#versioning</a>.</p>\n\n          </div>"}, "last_serial": 6499942, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "2909ec6d90f09e9f261223f34424e6a2", "sha256": "8c2f20de245ae934bab64b5446cc1a41f89bc44d5c21e8767cd6132c847f0e8a"}, "downloads": -1, "filename": "yeoda-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2909ec6d90f09e9f261223f34424e6a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 265396, "upload_time": "2019-11-12T16:10:10", "upload_time_iso_8601": "2019-11-12T16:10:10.716672Z", "url": "https://files.pythonhosted.org/packages/28/44/569eb0ef2892938586d0da5789ebc00d630930bbd823018c7b33e6d7c5c1/yeoda-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "aca86e4651c1ff6bb625e5e165d342d4", "sha256": "c43ef9ff9bddf63e1670d6aa2166d2a9c5de9e43eaba3ee40aa1f449c251ca8b"}, "downloads": -1, "filename": "yeoda-0.1.2.tar.gz", "has_sig": false, "md5_digest": "aca86e4651c1ff6bb625e5e165d342d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 265575, "upload_time": "2019-11-13T12:40:46", "upload_time_iso_8601": "2019-11-13T12:40:46.278156Z", "url": "https://files.pythonhosted.org/packages/b6/e8/d012ae4a121efb92c0125dc7d25ee1edd84f55bfbb9ff6ac7322d2ae6011/yeoda-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "9e3d8586d48e24069e1db2d6c40fede1", "sha256": "5ad706941fe93f0924a573a51ba315af94f3360ff4cccd1dc9bf281fc94d716f"}, "downloads": -1, "filename": "yeoda-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9e3d8586d48e24069e1db2d6c40fede1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 268000, "upload_time": "2019-12-05T16:31:33", "upload_time_iso_8601": "2019-12-05T16:31:33.386643Z", "url": "https://files.pythonhosted.org/packages/f5/af/78e21fbf9564a4d7d399ff5bb4310375f0990d72b4975def1b6328551fd4/yeoda-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "c4d04c4330b5e7c2bc64d6420d373108", "sha256": "e95eb1267362337d470606c614965ade7289b966abb3b84738af46048d90e54a"}, "downloads": -1, "filename": "yeoda-0.1.4.tar.gz", "has_sig": false, "md5_digest": "c4d04c4330b5e7c2bc64d6420d373108", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 268439, "upload_time": "2020-01-22T12:16:30", "upload_time_iso_8601": "2020-01-22T12:16:30.973243Z", "url": "https://files.pythonhosted.org/packages/ec/ac/a98ba7bc41bd584328674b0e773364b137eac5554a89cc4cfb233ea04e15/yeoda-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c4d04c4330b5e7c2bc64d6420d373108", "sha256": "e95eb1267362337d470606c614965ade7289b966abb3b84738af46048d90e54a"}, "downloads": -1, "filename": "yeoda-0.1.4.tar.gz", "has_sig": false, "md5_digest": "c4d04c4330b5e7c2bc64d6420d373108", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 268439, "upload_time": "2020-01-22T12:16:30", "upload_time_iso_8601": "2020-01-22T12:16:30.973243Z", "url": "https://files.pythonhosted.org/packages/ec/ac/a98ba7bc41bd584328674b0e773364b137eac5554a89cc4cfb233ea04e15/yeoda-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:22:24 2020"}