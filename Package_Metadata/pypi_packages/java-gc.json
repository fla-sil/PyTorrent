{"info": {"author": "Michael Morris", "author_email": "mmmorris1975@netscape.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "=======\nJAVA GC\n=======\n\nA command to trigger a full java garbage collection via the `jcmd` tool.  On systems which use the systemd init system,\nyou can specify the service name as the program argument.  The `-r` option can also be used on systemd based systems to\nallow have this utility attempt to automatically restart the service if the jcmd garbage collection fails.\n\nRequirements\n============\n\n- Tested on python 2.7 and python 3\n- No 3rd party libraries required\n\nInstallation\n============\n\nUsing `pip` is the preferred method to install this tool, and will install the package from pypi.  `pip install java-gc`\n\nIt can also be installed via `pip` from a local copy of the source repo, `pip install .` from the repo directory should do the trick.\nRunning `make install` should also work as well.\n\nUsage\n=====\n\n| usage: java-gc [-h] [-u USER] [-t T] [-r]\n|                [-l {debug,info,warning,error,critical}] [-v]\n|                proc\n|\n| Trigger a full GC on a java process\n|\n| positional arguments:\n|   proc                  The service name, or pid, to trigger the GC on\n|\n| optional arguments:\n|   -h, --help            show this help message and exit\n|   -u USER, --user USER  User owning the process (default to current user)\n|   -t T, --timeout T     seconds to wait for GC before raising error\n|   -r, --restart         restart the service if timeout occurred, else exit\n|                         with error\n|   -l {debug,info,warning,error,critical}, --loglevel {debug,info,warning,error,critical}\n|                         set log level\n|   -v, --version         print program version and exit\n\nContributing\n============\n\nThe usual github model for forking the repo and creating a pull request is the preferred way to\ncontribute to this tool.  Bug fixes, enhancements, doc updates, translations are always welcomed.\n\nBuilding from source\n--------------------\n\nA `Makefile` has been included in the repository to handle the steps of creating the package and\nuploading it to pypi.  If you don't have the `make` utility installed, the contents of the Makefile\nshould be instructive (and simple) enough to execute manually.\n\nThe following targets are available in the Makefile:\n\n* `package` - the default target, calls the setup.py script to create the package to upload to pypi.\n* `upload` - depends on the `package` target, and uploads the generated package archive to pypi.\n* `install` - use `pip` to install the package locally\n* `clean` - clean up the artifacts left by the `package` step.\n* `distclean` - depends on the `clean` target, and additionally cleans up misc. files.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mmmorris1975/java-gc", "keywords": "java gc jcmd", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "java-gc", "package_url": "https://pypi.org/project/java-gc/", "platform": "", "project_url": "https://pypi.org/project/java-gc/", "project_urls": {"Homepage": "https://github.com/mmmorris1975/java-gc"}, "release_url": "https://pypi.org/project/java-gc/0.2.0/", "requires_dist": null, "requires_python": ">=2.7, <4", "summary": "Trigger a full Java garbage collection", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A command to trigger a full java garbage collection via the <cite>jcmd</cite> tool.  On systems which use the systemd init system,\nyou can specify the service name as the program argument.  The <cite>-r</cite> option can also be used on systemd based systems to\nallow have this utility attempt to automatically restart the service if the jcmd garbage collection fails.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Tested on python 2.7 and python 3</li>\n<li>No 3rd party libraries required</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Using <cite>pip</cite> is the preferred method to install this tool, and will install the package from pypi.  <cite>pip install java-gc</cite></p>\n<p>It can also be installed via <cite>pip</cite> from a local copy of the source repo, <cite>pip install .</cite> from the repo directory should do the trick.\nRunning <cite>make install</cite> should also work as well.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div>\n<div>usage: java-gc [-h] [-u USER] [-t T] [-r]</div>\n<div>\n<div>[-l {debug,info,warning,error,critical}] [-v]</div>\n<div>proc</div>\n<div><br></div>\n</div>\n<div>Trigger a full GC on a java process</div>\n<div><br></div>\n<div>positional arguments:</div>\n<div>\n<div>proc                  The service name, or pid, to trigger the GC on</div>\n<div><br></div>\n</div>\n<div>optional arguments:</div>\n<div>\n<div>-h, \u2013help            show this help message and exit</div>\n<div>-u USER, \u2013user USER  User owning the process (default to current user)</div>\n<div>-t T, \u2013timeout T     seconds to wait for GC before raising error</div>\n<div>-r, \u2013restart         restart the service if timeout occurred, else exit</div>\n<div>\n<div>with error</div>\n</div>\n<div>-l {debug,info,warning,error,critical}, \u2013loglevel {debug,info,warning,error,critical}</div>\n<div>\n<div>set log level</div>\n</div>\n<div>-v, \u2013version         print program version and exit</div>\n</div>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>The usual github model for forking the repo and creating a pull request is the preferred way to\ncontribute to this tool.  Bug fixes, enhancements, doc updates, translations are always welcomed.</p>\n<div id=\"building-from-source\">\n<h3>Building from source</h3>\n<p>A <cite>Makefile</cite> has been included in the repository to handle the steps of creating the package and\nuploading it to pypi.  If you don\u2019t have the <cite>make</cite> utility installed, the contents of the Makefile\nshould be instructive (and simple) enough to execute manually.</p>\n<p>The following targets are available in the Makefile:</p>\n<ul>\n<li><cite>package</cite> - the default target, calls the setup.py script to create the package to upload to pypi.</li>\n<li><cite>upload</cite> - depends on the <cite>package</cite> target, and uploads the generated package archive to pypi.</li>\n<li><cite>install</cite> - use <cite>pip</cite> to install the package locally</li>\n<li><cite>clean</cite> - clean up the artifacts left by the <cite>package</cite> step.</li>\n<li><cite>distclean</cite> - depends on the <cite>clean</cite> target, and additionally cleans up misc. files.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3097170, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7cd1eec501ede07c7bfd2c14bdc10232", "sha256": "9ca92ba957593da5624305df62db1b06004c0197b0c34a44a9af84508b0fccf2"}, "downloads": -1, "filename": "java_gc-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7cd1eec501ede07c7bfd2c14bdc10232", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, <4", "size": 6397, "upload_time": "2017-08-15T03:59:41", "upload_time_iso_8601": "2017-08-15T03:59:41.678681Z", "url": "https://files.pythonhosted.org/packages/48/7e/33b5cc5a8349acafd3045b599a530d17abe720fc58beb28960641cc9f2e3/java_gc-0.0.1-py2.py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "35bade148bc39dddbac64c202dcbe72e", "sha256": "0b4791b2dfeaf4c809bc89fbd3f640aeb1ec09c6cf8beef8e680591dcbcef790"}, "downloads": -1, "filename": "java_gc-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "35bade148bc39dddbac64c202dcbe72e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, <4", "size": 6400, "upload_time": "2017-08-15T04:05:51", "upload_time_iso_8601": "2017-08-15T04:05:51.641377Z", "url": "https://files.pythonhosted.org/packages/1c/2b/6223f1f187e6b4fb2a15a578bb4d1ab1b9d7a7af116c6eb9ed28eb1c411d/java_gc-0.0.2-py2.py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "cf55f11a9353ecc0f1f8c6658d12e46e", "sha256": "0c663e5e3f342ada5d84e66ed0339bf5cc8254f1e7fe6b211d5ac8f3877622b2"}, "downloads": -1, "filename": "java_gc-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cf55f11a9353ecc0f1f8c6658d12e46e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, <4", "size": 6401, "upload_time": "2017-08-15T04:11:44", "upload_time_iso_8601": "2017-08-15T04:11:44.488540Z", "url": "https://files.pythonhosted.org/packages/30/d9/c957094d4c375e1259f99ca832fcc12ff9ebd4086f8b1ccd972faffe5da3/java_gc-0.0.3-py2.py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "77e24b52ccf5d7b0e2ae850129b756bf", "sha256": "77ddea2c8b2ddc623a831f147763007473c336c3aef09e4fa51ba8047abb238d"}, "downloads": -1, "filename": "java_gc-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "77e24b52ccf5d7b0e2ae850129b756bf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, <4", "size": 6400, "upload_time": "2017-08-15T04:17:03", "upload_time_iso_8601": "2017-08-15T04:17:03.735045Z", "url": "https://files.pythonhosted.org/packages/43/27/fa76680363b6980938346e3a2c57b5e2205f83b8495931d2b03e7eb00659/java_gc-0.0.4-py2.py3-none-any.whl", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "e5c16819f0344455bae0af6d047a2916", "sha256": "aa645150c746e754bc537388e825fa80e5f0f6d8161a47176cfd16edcde9a977"}, "downloads": -1, "filename": "java_gc-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e5c16819f0344455bae0af6d047a2916", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, <4", "size": 6401, "upload_time": "2017-08-15T04:17:35", "upload_time_iso_8601": "2017-08-15T04:17:35.444684Z", "url": "https://files.pythonhosted.org/packages/cd/06/39bece573bcdc5036a2db7e84167bf711c0877cf50a0e0064f4594c54ed9/java_gc-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6cd2e4116f5e2bb7cd77425446e584bf", "sha256": "33d908ae37289ddebb1d05d1a1824e2dce136931849ed48993e4df15ff550b77"}, "downloads": -1, "filename": "java_gc-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6cd2e4116f5e2bb7cd77425446e584bf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, <4", "size": 6403, "upload_time": "2017-08-15T04:30:42", "upload_time_iso_8601": "2017-08-15T04:30:42.548859Z", "url": "https://files.pythonhosted.org/packages/da/f1/e37102cfd77c7b571c33d7a044e3fa0c4508fb7e5fe7e6a2b869ad13bf63/java_gc-0.1.1-py2.py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "16978a07a08b2efd3a7b74cc8f33ba94", "sha256": "72ccb09b39412453ac7aa45ade4ffdb064010c38b1238ee38418c9e6f71687dc"}, "downloads": -1, "filename": "java_gc-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "16978a07a08b2efd3a7b74cc8f33ba94", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, <4", "size": 6396, "upload_time": "2017-08-15T04:31:36", "upload_time_iso_8601": "2017-08-15T04:31:36.488178Z", "url": "https://files.pythonhosted.org/packages/0b/61/c3f657515881eedf528178247c29a4a39f7b8d3e786370a990df79858bac/java_gc-0.2.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "16978a07a08b2efd3a7b74cc8f33ba94", "sha256": "72ccb09b39412453ac7aa45ade4ffdb064010c38b1238ee38418c9e6f71687dc"}, "downloads": -1, "filename": "java_gc-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "16978a07a08b2efd3a7b74cc8f33ba94", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, <4", "size": 6396, "upload_time": "2017-08-15T04:31:36", "upload_time_iso_8601": "2017-08-15T04:31:36.488178Z", "url": "https://files.pythonhosted.org/packages/0b/61/c3f657515881eedf528178247c29a4a39f7b8d3e786370a990df79858bac/java_gc-0.2.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:53:04 2020"}