{"info": {"author": "Encolpe DEGOUTE", "author_email": "encolpe.degoute@free.fr", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 4.3", "Framework :: Plone :: 5.0", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7"], "description": "==============================================================================\ncollective.sgvizler\n==============================================================================\n\nSGVizler is a library that can directly question SPARQL endpoint to visualize opendat in your site.\nThis intregration of version 0.6 use dexterity type to be flexible with parameters.\n\nDue to time limitation for the exercise this package is not done in the Plone 5 way.\n\nEnjoy.\n\nFeatures\n--------\n\n- SGVizler 0.6\n- Dexterity type to make the rendering\n\nSee the SGVizler documentation and screenshot below to see examples.\n\n\nExamples\n--------\n\nThis add-on can be seen in action at the following sites:\n\n- http://dev.data2000.no/sgvizler/wiki/Sgvizler#Screenshots\n- http://doc.data2000.no/sgvizler/0.6/classes/sgvizler.html\n\n\nDocumentation\n-------------\n\nTODO\n#Full documentation for end users can be found in the \"docs\" folder, and is also available online at http://docs.plone.org/foo/bar\n\nLocal Setup\n===========\n\nAs SPARQL works with prefix in its query, a good thing can be to overload the\n*sgvizler-setup.js* file.\n\nProxy Configuration\n===================\n\nSGVizler does AJAX request between domains. You need to configure your front\nproxy to accept data from domains where are SPARQL endpoints, id est you need\nto add *connect-src* and *script-src* provider in the *Content-Security-Policy*\nHTTP header.\n\nExample with NGinx:\n\n.. code:: nginx\n\n    add_header X-Frame-Options \"SAMEORIGIN\";\n    add_header Strict-Transport-Security \"max-age=15768000; includeSubDomains\";\n    add_header X-XSS-Protection \"1; mode=block\";\n    add_header X-Content-Type-Options \"nosniff\";\n    add_header Content-Security-Policy \"default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline' http://endpoint.example.com http://sws.ifi.uio.no https://www.google.com; style-src 'self' 'unsafe-inline'; img-src 'self' 'unsafe-inline' http://mediaserver.example.com; media-src 'self' http://mediaserver.example.com http://videoserver.example.com; font-src 'self' 'unsafe-inline'; object-src 'self' http://endpoint.example.com http://sws.ifi.uio.no; connect-src 'self' http://endpoint.example.com http://sws.ifi.uio.no\";\n\nNotice that you need to open your server to google.com JS api (https://www.google.com/jsapi)\nuntil a better implementation of requirements in this project.\n\n\nTranslations\n------------\n\nThis product has been translated into\n\n- French (TODO)\n\n\nInstallation\n------------\n\nInstall collective.sgvizler by adding it to your buildout::\n\n    [buildout]\n\n    ...\n\n    eggs =\n        collective.sgvizler\n\n\nand then running ``bin/buildout``\n\n\nContribute\n----------\n\n- Issue Tracker: https://github.com/collective/collective.sgvizler/issues\n- Source Code: https://github.com/collective/collective.sgvizler\n- Documentation: http://dev.data2000.no/sgvizler/wiki/Sgvizler/0.6/Using\n\n\nSupport\n-------\n\nIf you are having issues, please let us know.\nYou can contact the owner (don't abuse please): Gerard.Vidal@ens-lyon.fr\n\n\nLicense\n-------\n\nThis work was planned and done with the courtesy of the IF\u00c9 - \u00c9cole Normale\nSup\u00e9rieure de Lyon.\n\nThe project is licensed under the BSD.\n\nContributors\n============\n\n- Encolpe DEGOUTE, encolpe.degoute@free.fr\n- G\u00e9rard VIDAL, Gerard.Vidal@ens-lyon.fr\n\nChangelog\n=========\n\n1.0.1 (2015-12-17)\n------------------\n\n- Fix double compression problem on minified javascript library\n  [encolpe]\n\n1.0   2015-12-16\n----------------\n\n- Initial release.\n  [encolpe]\n\n- Integrate SGVizler 0.6\n  [encolpe]\n\n- Add a Dexterity type to customize SGVizler rendering\n  [encolpe]", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi/collective.sgvizler", "keywords": "Python Plone", "license": "GPL version 2", "maintainer": "", "maintainer_email": "", "name": "collective.sgvizler", "package_url": "https://pypi.org/project/collective.sgvizler/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.sgvizler/", "project_urls": {"Homepage": "https://pypi.python.org/pypi/collective.sgvizler"}, "release_url": "https://pypi.org/project/collective.sgvizler/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "SGVizler integration for Plone 4", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>SGVizler is a library that can directly question SPARQL endpoint to visualize opendat in your site.\nThis intregration of version 0.6 use dexterity type to be flexible with parameters.</p>\n<p>Due to time limitation for the exercise this package is not done in the Plone 5 way.</p>\n<p>Enjoy.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>SGVizler 0.6</li>\n<li>Dexterity type to make the rendering</li>\n</ul>\n<p>See the SGVizler documentation and screenshot below to see examples.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>This add-on can be seen in action at the following sites:</p>\n<ul>\n<li><a href=\"http://dev.data2000.no/sgvizler/wiki/Sgvizler#Screenshots\" rel=\"nofollow\">http://dev.data2000.no/sgvizler/wiki/Sgvizler#Screenshots</a></li>\n<li><a href=\"http://doc.data2000.no/sgvizler/0.6/classes/sgvizler.html\" rel=\"nofollow\">http://doc.data2000.no/sgvizler/0.6/classes/sgvizler.html</a></li>\n</ul>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>TODO\n#Full documentation for end users can be found in the \u201cdocs\u201d folder, and is also available online at <a href=\"http://docs.plone.org/foo/bar\" rel=\"nofollow\">http://docs.plone.org/foo/bar</a></p>\n<div id=\"local-setup\">\n<h3>Local Setup</h3>\n<p>As SPARQL works with prefix in its query, a good thing can be to overload the\n<em>sgvizler-setup.js</em> file.</p>\n</div>\n<div id=\"proxy-configuration\">\n<h3>Proxy Configuration</h3>\n<p>SGVizler does AJAX request between domains. You need to configure your front\nproxy to accept data from domains where are SPARQL endpoints, id est you need\nto add <em>connect-src</em> and <em>script-src</em> provider in the <em>Content-Security-Policy</em>\nHTTP header.</p>\n<p>Example with NGinx:</p>\n<pre><span class=\"k\">add_header</span> <span class=\"s\">X-Frame-Options</span> <span class=\"s\">\"SAMEORIGIN\"</span><span class=\"p\">;</span>\n<span class=\"k\">add_header</span> <span class=\"s\">Strict-Transport-Security</span> <span class=\"s\">\"max-age=15768000</span><span class=\"p\">;</span> <span class=\"k\">includeSubDomains\"</span><span class=\"p\">;</span>\n<span class=\"k\">add_header</span> <span class=\"s\">X-XSS-Protection</span> <span class=\"s\">\"1</span><span class=\"p\">;</span> <span class=\"k\">mode=block\"</span><span class=\"p\">;</span>\n<span class=\"k\">add_header</span> <span class=\"s\">X-Content-Type-Options</span> <span class=\"s\">\"nosniff\"</span><span class=\"p\">;</span>\n<span class=\"k\">add_header</span> <span class=\"s\">Content-Security-Policy</span> <span class=\"s\">\"default-src</span> <span class=\"s\">'self'</span><span class=\"p\">;</span> <span class=\"k\">script-src</span> <span class=\"s\">'self'</span> <span class=\"s\">'unsafe-eval'</span> <span class=\"s\">'unsafe-inline'</span> <span class=\"s\">http://endpoint.example.com</span> <span class=\"s\">http://sws.ifi.uio.no</span> <span class=\"s\">https://www.google.com</span><span class=\"p\">;</span> <span class=\"k\">style-src</span> <span class=\"s\">'self'</span> <span class=\"s\">'unsafe-inline'</span><span class=\"p\">;</span> <span class=\"k\">img-src</span> <span class=\"s\">'self'</span> <span class=\"s\">'unsafe-inline'</span> <span class=\"s\">http://mediaserver.example.com</span><span class=\"p\">;</span> <span class=\"k\">media-src</span> <span class=\"s\">'self'</span> <span class=\"s\">http://mediaserver.example.com</span> <span class=\"s\">http://videoserver.example.com</span><span class=\"p\">;</span> <span class=\"k\">font-src</span> <span class=\"s\">'self'</span> <span class=\"s\">'unsafe-inline'</span><span class=\"p\">;</span> <span class=\"k\">object-src</span> <span class=\"s\">'self'</span> <span class=\"s\">http://endpoint.example.com</span> <span class=\"s\">http://sws.ifi.uio.no</span><span class=\"p\">;</span> <span class=\"k\">connect-src</span> <span class=\"s\">'self'</span> <span class=\"s\">http://endpoint.example.com</span> <span class=\"s\">http://sws.ifi.uio.no\"</span><span class=\"p\">;</span>\n</pre>\n<p>Notice that you need to open your server to google.com JS api (<a href=\"https://www.google.com/jsapi\" rel=\"nofollow\">https://www.google.com/jsapi</a>)\nuntil a better implementation of requirements in this project.</p>\n</div>\n</div>\n<div id=\"translations\">\n<h2>Translations</h2>\n<p>This product has been translated into</p>\n<ul>\n<li>French (TODO)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install collective.sgvizler by adding it to your buildout:</p>\n<pre>[buildout]\n\n...\n\neggs =\n    collective.sgvizler\n</pre>\n<p>and then running <tt>bin/buildout</tt></p>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<ul>\n<li>Issue Tracker: <a href=\"https://github.com/collective/collective.sgvizler/issues\" rel=\"nofollow\">https://github.com/collective/collective.sgvizler/issues</a></li>\n<li>Source Code: <a href=\"https://github.com/collective/collective.sgvizler\" rel=\"nofollow\">https://github.com/collective/collective.sgvizler</a></li>\n<li>Documentation: <a href=\"http://dev.data2000.no/sgvizler/wiki/Sgvizler/0.6/Using\" rel=\"nofollow\">http://dev.data2000.no/sgvizler/wiki/Sgvizler/0.6/Using</a></li>\n</ul>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>If you are having issues, please let us know.\nYou can contact the owner (don\u2019t abuse please): <a href=\"mailto:Gerard.Vidal%40ens-lyon.fr\">Gerard<span>.</span>Vidal<span>@</span>ens-lyon<span>.</span>fr</a></p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This work was planned and done with the courtesy of the IF\u00c9 - \u00c9cole Normale\nSup\u00e9rieure de Lyon.</p>\n<p>The project is licensed under the BSD.</p>\n<div id=\"contributors\">\n<h3>Contributors</h3>\n<ul>\n<li>Encolpe DEGOUTE, <a href=\"mailto:encolpe.degoute%40free.fr\">encolpe<span>.</span>degoute<span>@</span>free<span>.</span>fr</a></li>\n<li>G\u00e9rard VIDAL, <a href=\"mailto:Gerard.Vidal%40ens-lyon.fr\">Gerard<span>.</span>Vidal<span>@</span>ens-lyon<span>.</span>fr</a></li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n</div>\n</div>\n<div id=\"id1\">\n<h2>1.0.1 (2015-12-17)</h2>\n<ul>\n<li>Fix double compression problem on minified javascript library\n[encolpe]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>1.0   2015-12-16</h2>\n<ul>\n<li>Initial release.\n[encolpe]</li>\n<li>Integrate SGVizler 0.6\n[encolpe]</li>\n<li>Add a Dexterity type to customize SGVizler rendering\n[encolpe]</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1866528, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "25c561d6ae5bd283bd44aa208c809321", "sha256": "7da7c2d9f30e079064e1dd589a71ea078cd7462f9a59360119341ff6cf3fb58b"}, "downloads": -1, "filename": "collective.sgvizler-1.0.tar.gz", "has_sig": false, "md5_digest": "25c561d6ae5bd283bd44aa208c809321", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 169891, "upload_time": "2015-12-16T13:56:57", "upload_time_iso_8601": "2015-12-16T13:56:57.496490Z", "url": "https://files.pythonhosted.org/packages/f3/43/901c85dae899b1f64ee01ad4941f1f56a182c77c1dae47935822d09e3016/collective.sgvizler-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4b75b5154893a72b907589d779e725b0", "sha256": "d3546049cbc2a11aff74a707062ad78408fef7f0704e0d3cc14a339e312def88"}, "downloads": -1, "filename": "collective.sgvizler-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4b75b5154893a72b907589d779e725b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 167832, "upload_time": "2015-12-17T10:02:18", "upload_time_iso_8601": "2015-12-17T10:02:18.115023Z", "url": "https://files.pythonhosted.org/packages/d7/f1/b0556327e745ca7034ef957ea26af9a754a7bb031c0a47d20e7fc6e62b9b/collective.sgvizler-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4b75b5154893a72b907589d779e725b0", "sha256": "d3546049cbc2a11aff74a707062ad78408fef7f0704e0d3cc14a339e312def88"}, "downloads": -1, "filename": "collective.sgvizler-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4b75b5154893a72b907589d779e725b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 167832, "upload_time": "2015-12-17T10:02:18", "upload_time_iso_8601": "2015-12-17T10:02:18.115023Z", "url": "https://files.pythonhosted.org/packages/d7/f1/b0556327e745ca7034ef957ea26af9a754a7bb031c0a47d20e7fc6e62b9b/collective.sgvizler-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:50 2020"}