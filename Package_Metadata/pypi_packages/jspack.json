{"info": {"author": "Pablo Caro", "author_email": "pcaro@yaco.es", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: JavaScript", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Code Generators"], "description": "jspack\n======\n\n``jspack`` is a simple and small tool to aggegate javascript files with optional miminization.\n\nThe tool allows also:\n\n  * Create initial configuration files from html files\n  * Reemplace in html script tags by minimized ones.\n\nThe project is open source.\n\nA similar tool is `jstools`_ which do recursive search for the javascript files and also support dependencies.\n\nRequirements\n-------------\nPython 2.6\n\nFor javascript minimization you can use:\n\n  * `jsmin`_ or `slimit`_  (you must install the egg first)\n  * Any program which reads the code from stdin and writes to stdout like `yui compressor`_\n    or `UglifyJS`_\n\n\n\n\nInstall\n-------\n\nYou can install ``jspack`` like a simple python egg:\n\n  * Using easy_install: ``easy_install jstools``\n  * Using pip: ``pip install jstools``\n  * If you use buildout, add it to the ``eggs`` list in your ``buildout.cfg``,\n    or as a dependency of one of your own packages in ``setup.py``.\n\nThe code is available in the `jspack repo`_\n\nUsage\n-----\n\nIf you have a config file (test.cfg) like::\n\n    [DEFAULT]\n    minimizer = jsmin\n\n    [concatenated.js]\n    # yui compressor\n    minimizer = inout: java -jar compressor.jar --type js\n    # Can be used to replace the js tags\n    html = test.html\n    files = file/relative/to/root.js\n            /absolute/file.js\n\n    [compressed.js]\n    minimizer = slimit\n    files = file/relative/to/root.js\n            js/two.js\n\n    [css/all.css]\n    root = css\n    minimizer = none\n    files = one.css\n            two.css\n\n\nAnd generates concatenated.js, compressed.js and css/all.css\n\nIf root option is not specified, the relative files are considered relative to the config parent directory (test.cfg).\n\nYou can use the help::\n\n    $ bin/jspack  --help\n    Usage:\n    jspack [options] file_or_directory\n\n    Typical Usage:\n\n    1. First create cfg files:\n       $ jspack -w htmlfile_or_directory\n    2. Now we can edit the jspack.cfg files and customize\n    3. Then generate minimized:\n       $ jspack cfgfile_or_directory\n    4. Last, replace script tags:\n       $ jspack -rn cfgfile_or_directory\n\n    Note: 3 and 4 can be summarized which: $ jspack -r cfgfile_or_directory\n\n\n    Options:\n      -h, --help            show this help message and exit\n      -w, --write-config    For each FILE.html file write a FILE.jspack.cfg file\n                            which later can be used to produce FILE-minimized.js\n      -o, --ovewrite-config\n                            Overwrite a jspack.cfg file if exists. Use which -w\n                            option\n      -i INCLUDE, --include-only=INCLUDE\n                            When parsing html (to generate a .jspack.cfg file) ,\n                            include only javascript files which match this regular\n                            expression. Default (?!http), Use  for no restriction\n      -s, --allow-strict-mode\n                            When concatenate js files, dont't drop 'use strict'\n                            lines. Default is remove strip mode\n      -n, --no-pack         no packing when using the jspack.cfg. Only usefull\n                            with -r option for only replace\n      -r, --replace-script-tags\n                            Replace the script tags in html files\n      -q, --quiet           Supress non error output\n      -v, --verbose         Vebose output (debug mode)\n\n\n\n\nRoadmap\n-------\n- CSS links replacement in html files\n- Better documentation\n- Tests\n\nCredits\n-------\n- `Yaco Sistemas`_\n- `Distribute`_\n- `Buildout`_\n- `modern-package-template`_\n- `zest.releaser`_\n\n.. _jspack repo: http://bitbucket.org/pcaro/jspack\n.. _jstools: http://pypi.python.org/pypi/JSTools/\n.. _jsmin: http://pypi.python.org/pypi/jsmin\n.. _slimit: http://pypi.python.org/pypi/slimit\n.. _yui compressor: http://developer.yahoo.com/yui/compressor/\n.. _UglifyJS: http://github.com/mishoo/UglifyJS\n.. _Yaco Sistemas: http://www.yaco.es\n.. _Buildout: http://www.buildout.org/\n.. _Distribute: http://pypi.python.org/pypi/distribute\n.. _`modern-package-template`: http://pypi.python.org/pypi/modern-package-template\n.. _zest.releaser: http://pypi.python.org/pypi/zest.releaser\n\n\n.. This is your project CHANGES.txt file which will contain the release notes.\n.. The content of this file, along with README.rst, will appear in your\n.. project's PyPI page.\n\nChangelog\n=========\n\n\n0.4 (2011-06-06)\n----------------\n\n- The project is hosted in bitbucked now. I had issues with hg-git plugin.\n- Css link replace feature.\n\n\n0.3 (2011-06-03)\n----------------\n\n- Support for several tools (yui compressor) using inout in minimizer\n- Verbose mode\n- Updated documentation: new link to github project\n\n\n0.2 (2011-06-02)\n----------------\n\n- Replace command\n- Multiple mimimizers\n\n\n0.1 (2011-06-02)\n----------------\n\n- Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/jspack", "keywords": "javascript tools", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "jspack", "package_url": "https://pypi.org/project/jspack/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/jspack/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/jspack"}, "release_url": "https://pypi.org/project/jspack/0.4/", "requires_dist": null, "requires_python": null, "summary": "A simple tool for javascript packging using config files", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"jspack\">\n<h2>jspack</h2>\n<p><tt>jspack</tt> is a simple and small tool to aggegate javascript files with optional miminization.</p>\n<p>The tool allows also:</p>\n<blockquote>\n<ul>\n<li>Create initial configuration files from html files</li>\n<li>Reemplace in html script tags by minimized ones.</li>\n</ul>\n</blockquote>\n<p>The project is open source.</p>\n<p>A similar tool is <a href=\"http://pypi.python.org/pypi/JSTools/\" rel=\"nofollow\">jstools</a> which do recursive search for the javascript files and also support dependencies.</p>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>Python 2.6</p>\n<p>For javascript minimization you can use:</p>\n<blockquote>\n<ul>\n<li><a href=\"http://pypi.python.org/pypi/jsmin\" rel=\"nofollow\">jsmin</a> or <a href=\"http://pypi.python.org/pypi/slimit\" rel=\"nofollow\">slimit</a>  (you must install the egg first)</li>\n<li>Any program which reads the code from stdin and writes to stdout like <a href=\"http://developer.yahoo.com/yui/compressor/\" rel=\"nofollow\">yui compressor</a>\nor <a href=\"http://github.com/mishoo/UglifyJS\" rel=\"nofollow\">UglifyJS</a></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"install\">\n<h3>Install</h3>\n<p>You can install <tt>jspack</tt> like a simple python egg:</p>\n<blockquote>\n<ul>\n<li>Using easy_install: <tt>easy_install jstools</tt></li>\n<li>Using pip: <tt>pip install jstools</tt></li>\n<li>If you use buildout, add it to the <tt>eggs</tt> list in your <tt>buildout.cfg</tt>,\nor as a dependency of one of your own packages in <tt>setup.py</tt>.</li>\n</ul>\n</blockquote>\n<p>The code is available in the <a href=\"http://bitbucket.org/pcaro/jspack\" rel=\"nofollow\">jspack repo</a></p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>If you have a config file (test.cfg) like:</p>\n<pre>[DEFAULT]\nminimizer = jsmin\n\n[concatenated.js]\n# yui compressor\nminimizer = inout: java -jar compressor.jar --type js\n# Can be used to replace the js tags\nhtml = test.html\nfiles = file/relative/to/root.js\n        /absolute/file.js\n\n[compressed.js]\nminimizer = slimit\nfiles = file/relative/to/root.js\n        js/two.js\n\n[css/all.css]\nroot = css\nminimizer = none\nfiles = one.css\n        two.css\n</pre>\n<p>And generates concatenated.js, compressed.js and css/all.css</p>\n<p>If root option is not specified, the relative files are considered relative to the config parent directory (test.cfg).</p>\n<p>You can use the help:</p>\n<pre>$ bin/jspack  --help\nUsage:\njspack [options] file_or_directory\n\nTypical Usage:\n\n1. First create cfg files:\n   $ jspack -w htmlfile_or_directory\n2. Now we can edit the jspack.cfg files and customize\n3. Then generate minimized:\n   $ jspack cfgfile_or_directory\n4. Last, replace script tags:\n   $ jspack -rn cfgfile_or_directory\n\nNote: 3 and 4 can be summarized which: $ jspack -r cfgfile_or_directory\n\n\nOptions:\n  -h, --help            show this help message and exit\n  -w, --write-config    For each FILE.html file write a FILE.jspack.cfg file\n                        which later can be used to produce FILE-minimized.js\n  -o, --ovewrite-config\n                        Overwrite a jspack.cfg file if exists. Use which -w\n                        option\n  -i INCLUDE, --include-only=INCLUDE\n                        When parsing html (to generate a .jspack.cfg file) ,\n                        include only javascript files which match this regular\n                        expression. Default (?!http), Use  for no restriction\n  -s, --allow-strict-mode\n                        When concatenate js files, dont't drop 'use strict'\n                        lines. Default is remove strip mode\n  -n, --no-pack         no packing when using the jspack.cfg. Only usefull\n                        with -r option for only replace\n  -r, --replace-script-tags\n                        Replace the script tags in html files\n  -q, --quiet           Supress non error output\n  -v, --verbose         Vebose output (debug mode)\n</pre>\n</div>\n<div id=\"roadmap\">\n<h3>Roadmap</h3>\n<ul>\n<li>CSS links replacement in html files</li>\n<li>Better documentation</li>\n<li>Tests</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<ul>\n<li><a href=\"http://www.yaco.es\" rel=\"nofollow\">Yaco Sistemas</a></li>\n<li><a href=\"http://pypi.python.org/pypi/distribute\" rel=\"nofollow\">Distribute</a></li>\n<li><a href=\"http://www.buildout.org/\" rel=\"nofollow\">Buildout</a></li>\n<li><a href=\"http://pypi.python.org/pypi/modern-package-template\" rel=\"nofollow\">modern-package-template</a></li>\n<li><a href=\"http://pypi.python.org/pypi/zest.releaser\" rel=\"nofollow\">zest.releaser</a></li>\n</ul>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.4 (2011-06-06)</h3>\n<ul>\n<li>The project is hosted in bitbucked now. I had issues with hg-git plugin.</li>\n<li>Css link replace feature.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3 (2011-06-03)</h3>\n<ul>\n<li>Support for several tools (yui compressor) using inout in minimizer</li>\n<li>Verbose mode</li>\n<li>Updated documentation: new link to github project</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2 (2011-06-02)</h3>\n<ul>\n<li>Replace command</li>\n<li>Multiple mimimizers</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1 (2011-06-02)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 793841, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "e283fc93460664e1f35d5a6b81dfd4f8", "sha256": "a26c7d458f28ac72f51aeae8d7ab9e2b5f970baa67515ca46e434f8ad5f244d7"}, "downloads": -1, "filename": "jspack-0.2.tar.gz", "has_sig": false, "md5_digest": "e283fc93460664e1f35d5a6b81dfd4f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5380, "upload_time": "2011-06-02T16:33:01", "upload_time_iso_8601": "2011-06-02T16:33:01.508567Z", "url": "https://files.pythonhosted.org/packages/27/30/31b25502b5ac369062545f9ff5f3ceb82477bfbf2ac29f629c1e41c7aad1/jspack-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "019b41ab631d95c9932734222d0ad432", "sha256": "198943fdba85efe5a1d47432d52905dce25e0bf6e6e6c44ee03823b14922818b"}, "downloads": -1, "filename": "jspack-0.3.tar.gz", "has_sig": false, "md5_digest": "019b41ab631d95c9932734222d0ad432", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6326, "upload_time": "2011-06-03T14:21:16", "upload_time_iso_8601": "2011-06-03T14:21:16.218765Z", "url": "https://files.pythonhosted.org/packages/c8/81/45eecf17bd003b115c5bf80d8db4131a1bd6cf4094b37371b410ab2661d5/jspack-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "c235919aad9ee631b75b3642a531173b", "sha256": "49ee2e28e4e3aaf0cdfcc8fa9db8342337ac4bc33d73b9f00c5631d01a93ce4c"}, "downloads": -1, "filename": "jspack-0.4.tar.gz", "has_sig": false, "md5_digest": "c235919aad9ee631b75b3642a531173b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6621, "upload_time": "2011-06-06T11:16:45", "upload_time_iso_8601": "2011-06-06T11:16:45.548268Z", "url": "https://files.pythonhosted.org/packages/ac/0e/b79b83e986695e49d35551d4bcaf1ef9fa20135e5cb54f85085a841b3ca4/jspack-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c235919aad9ee631b75b3642a531173b", "sha256": "49ee2e28e4e3aaf0cdfcc8fa9db8342337ac4bc33d73b9f00c5631d01a93ce4c"}, "downloads": -1, "filename": "jspack-0.4.tar.gz", "has_sig": false, "md5_digest": "c235919aad9ee631b75b3642a531173b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6621, "upload_time": "2011-06-06T11:16:45", "upload_time_iso_8601": "2011-06-06T11:16:45.548268Z", "url": "https://files.pythonhosted.org/packages/ac/0e/b79b83e986695e49d35551d4bcaf1ef9fa20135e5cb54f85085a841b3ca4/jspack-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:33 2020"}