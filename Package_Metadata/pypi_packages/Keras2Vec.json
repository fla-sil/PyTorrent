{"info": {"author": "Joel Klein", "author_email": "jdk51405@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "# Keras2Vec\nA Keras implementation, enabling gpu support, of Doc2Vec\n\n## Installing Keras2Vec\nThis package can be installed via pip:\n\n        pip install keras2vec\n\nDocumentation for Keras2Vec can be found on [readthedocs](https://keras2vec.readthedocs.io/en/latest/).\n\n## Example Usage\n```python\nimport numpy as np\n\nfrom keras2vec.keras2vec import Keras2Vec\nfrom keras2vec.document import Document\n\nfrom sklearn.metrics.pairwise import euclidean_distances, cosine_similarity\n\ndef doc_similarity(embeddings, id_1, id_2):\n    doc1 = embeddings[id_1].reshape(1, -1)\n    doc2 = embeddings[id_2].reshape(1, -1)\n    return cosine_similarity(doc1, doc2)[0][0] # , euclidean_distances(doc1, doc2)\n\n\nif __name__ == \"__main__\":\n\n    color_docs = [\"red yellow green blue orange violet green blue orange violet\",\n                   \"blue orange green gray black teal tan blue violet gray black teal\",\n                   \"blue violet gray black teal yellow orange tan white brown\",\n                   \"black blue yellow orange tan white brown white green teal pink blue\",\n                   \"orange pink blue white yellow black black teal tan\",\n                   \"white green teal gray black pink blue blue violet gray black teal yellow\",\n                   ]\n\n    animal_docs = [\"cat dog rat gerbil hamster goat lamb goat cow rat dog pig\",\n                   \"lamb goat cow rat dog pig dog chicken goat cat cow pig\",\n                   \"pig lamb goat rat gerbil dog cat dog rat gerbil hamster goat\",\n                   \"dog chicken goat cat cow pig gerbil goat cow pig gerbil lamb\",\n                   \"rat hamster pig dog chicken cat lamb goat cow rat dog pig dog\",\n                   \"gerbil goat cow pig gerbil lamb rat hamster pig dog chicken cat\"\n                   ]\n    shape_docs = [\"square triangle hexagon circle octagon cube\",\n                  \"pyramid circle cube pentagon cylinder trapezoid\",\n                  \"diamond octagon quadrilateral cylinder rectangle square\",\n                  \"trapezoid cube hexagon diamond triangle circle cylinder\",\n                  \"square rectangle quadrilateral octagon pentagon square\"]\n\n    animal_color_docs = ['goat green rat gerbil yellow dog cat blue white',\n                         'gerbil black pink blue lamb rat hamster gray pig dog',\n                         'orange pink cat cow pig black teal gerbil tan',\n                         'hamster pig orange violet dog chicken orange tan']\n\n    inference_doc = \"red yellow green blue orange violet green blue orange violet\"\n\n    doc_count = 0\n    keras_docs = []\n\n    keras_docs.extend([Document(doc_count+ix, text, ['color']) for ix, text in enumerate(color_docs)])\n    doc_count = len(keras_docs)\n    keras_docs.extend([Document(doc_count+ix, text, ['animal']) for ix, text in enumerate(animal_docs)])\n    doc_count = len(keras_docs)\n    keras_docs.extend([Document(doc_count + ix, text, ['shape']) for ix, text in enumerate(shape_docs)])\n    doc_count = len(keras_docs)\n    keras_docs.extend([Document(doc_count + ix, text, ['animal', 'color']) for ix, text in enumerate(animal_color_docs)])\n\n    # TODO: Add ability to auto-select embedding and seq_size based on data\n    doc2vec = Keras2Vec(keras_docs, embedding_size=24, seq_size=1)\n    doc2vec.build_model()\n    # If the number of epochs is to low, the check at the bottom may fail!\n    print(\"Training Model:\")\n    doc2vec.fit(150)\n    print(\"\\ttraining complete!\")\n\n    embeddings = doc2vec.get_doc_embeddings()\n\n    print(\"Beginning Evaluation:\")\n    \"\"\"Docs 0-5 are colors while 6-11 are animals. The cosine distances for\n    docs from the same topic (colors/animals) should approach 1, while\n    disimilar docs, coming from different topics, should approach -1\"\"\"\n    if doc_similarity(embeddings, 2, 4) > doc_similarity(embeddings, 1, 10):\n        print(\"\\t- Like topics are more similar!\")\n    else:\n        print(\"\\t- Something went wrong during training.\")\n\n    \"\"\"Using the trained model we can now infer document vectors by training\n    against a model where only the inference layer is trainable\"\"\"\n\n    doc2vec.infer_vector(Document(0, inference_doc, []), lr=.1, epochs=5)\n    infer_vec = doc2vec.get_infer_embedding()\n    infer_dist = cosine_similarity(infer_vec.reshape(1, -1), embeddings[0].reshape(1, -1))[0][0]\n    infer_dist = \"{0:0.2f}\".format(infer_dist)\n    print(f'\\t- Document 0 has a cosine similarity of {infer_dist} between train and inferred vectors')\n\n\n    \"\"\"Label analysis: shape should be farther away than animal and color\"\"\"\n    label_embeddings = doc2vec.get_label_embeddings()\n    shape_vector = doc2vec.get_label_embedding('shape').reshape(1, -1)\n    animal_vector = doc2vec.get_label_embedding('animal').reshape(1, -1)\n    color_vector = doc2vec.get_label_embedding('color').reshape(1, -1)\n    animal_color_dist = cosine_similarity(animal_vector, color_vector)[0][0]\n    shape_color_dist = cosine_similarity(shape_vector, color_vector)[0][0]\n    if animal_color_dist > shape_color_dist:\n        print(\"\\t- Label distances look good!\")\n    else:\n        print(\"\\t- Something went wrong with the labels.\")\n```\n\n## Changelog\n**Version 0.1.1:**\n - Bug fixes\n\n**Version 0.1.0:**\n - Added **get_label_embeddings()**, **get_label_embedding(label)**\n   - *Note: Labels will no longer be ignored when generating **Document()** objects*\n - Initial impelementation of label embeddings in the PV-DM model\n - Updated demo.py file to provide use cases for labels\n\n**Version 0.0.3:**\n - Added **infer_vector(doc)**, **get_infer_embedding()**\n - Implemented document inferencing. This enables the ability to infer a document vector from a pre-trained keras2vec model\n - Modified layer naming for *infer_model* and *train_model* to support sharing weights between the models\n\n**Version 0.0.2:**\n - Added **get_doc_embeddings()**, **get_doc_embedding(doc)**, **get_word_embeddings()**, and **get_word_embedding(word)** so embeddings can be grabbed directly\n - Incorporated Neg-Sampling into Doc2Vec implementation\n   - *Note: Neg-Sampling is now a parameter when instantiatng a Keras2Vec object*\n - Updated Doc2Vec model\n   - Concatenating document embedding to the document's context, rather than averaging\n   - Added a dense layer between concatenated layer and sigmoid output in attempt to improve performance\n   - Updated optimizer to leverage Adamax rather than SGD in attempt to improve performance\n\n**Version 0.0.1:**\n - Initial Release\n - Keras implementation of Doc2Vec\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jdk514/keras2vec", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "Keras2Vec", "package_url": "https://pypi.org/project/Keras2Vec/", "platform": "", "project_url": "https://pypi.org/project/Keras2Vec/", "project_urls": {"Documentation": "https://keras2vec.readthedocs.io/en/latest/index.html", "Homepage": "https://github.com/jdk514/keras2vec"}, "release_url": "https://pypi.org/project/Keras2Vec/0.1.1/", "requires_dist": ["tensorflow (>=1.14.0)", "keras (>=2.2.4)", "numpy (>=1.16.4)"], "requires_python": ">=3.6", "summary": "Keras implementation of Doc2Vec", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Keras2Vec</h1>\n<p>A Keras implementation, enabling gpu support, of Doc2Vec</p>\n<h2>Installing Keras2Vec</h2>\n<p>This package can be installed via pip:</p>\n<pre><code>    pip install keras2vec\n</code></pre>\n<p>Documentation for Keras2Vec can be found on <a href=\"https://keras2vec.readthedocs.io/en/latest/\" rel=\"nofollow\">readthedocs</a>.</p>\n<h2>Example Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">keras2vec.keras2vec</span> <span class=\"kn\">import</span> <span class=\"n\">Keras2Vec</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras2vec.document</span> <span class=\"kn\">import</span> <span class=\"n\">Document</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.metrics.pairwise</span> <span class=\"kn\">import</span> <span class=\"n\">euclidean_distances</span><span class=\"p\">,</span> <span class=\"n\">cosine_similarity</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">doc_similarity</span><span class=\"p\">(</span><span class=\"n\">embeddings</span><span class=\"p\">,</span> <span class=\"n\">id_1</span><span class=\"p\">,</span> <span class=\"n\">id_2</span><span class=\"p\">):</span>\n    <span class=\"n\">doc1</span> <span class=\"o\">=</span> <span class=\"n\">embeddings</span><span class=\"p\">[</span><span class=\"n\">id_1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">doc2</span> <span class=\"o\">=</span> <span class=\"n\">embeddings</span><span class=\"p\">[</span><span class=\"n\">id_2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">cosine_similarity</span><span class=\"p\">(</span><span class=\"n\">doc1</span><span class=\"p\">,</span> <span class=\"n\">doc2</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"c1\"># , euclidean_distances(doc1, doc2)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n\n    <span class=\"n\">color_docs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"red yellow green blue orange violet green blue orange violet\"</span><span class=\"p\">,</span>\n                   <span class=\"s2\">\"blue orange green gray black teal tan blue violet gray black teal\"</span><span class=\"p\">,</span>\n                   <span class=\"s2\">\"blue violet gray black teal yellow orange tan white brown\"</span><span class=\"p\">,</span>\n                   <span class=\"s2\">\"black blue yellow orange tan white brown white green teal pink blue\"</span><span class=\"p\">,</span>\n                   <span class=\"s2\">\"orange pink blue white yellow black black teal tan\"</span><span class=\"p\">,</span>\n                   <span class=\"s2\">\"white green teal gray black pink blue blue violet gray black teal yellow\"</span><span class=\"p\">,</span>\n                   <span class=\"p\">]</span>\n\n    <span class=\"n\">animal_docs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"cat dog rat gerbil hamster goat lamb goat cow rat dog pig\"</span><span class=\"p\">,</span>\n                   <span class=\"s2\">\"lamb goat cow rat dog pig dog chicken goat cat cow pig\"</span><span class=\"p\">,</span>\n                   <span class=\"s2\">\"pig lamb goat rat gerbil dog cat dog rat gerbil hamster goat\"</span><span class=\"p\">,</span>\n                   <span class=\"s2\">\"dog chicken goat cat cow pig gerbil goat cow pig gerbil lamb\"</span><span class=\"p\">,</span>\n                   <span class=\"s2\">\"rat hamster pig dog chicken cat lamb goat cow rat dog pig dog\"</span><span class=\"p\">,</span>\n                   <span class=\"s2\">\"gerbil goat cow pig gerbil lamb rat hamster pig dog chicken cat\"</span>\n                   <span class=\"p\">]</span>\n    <span class=\"n\">shape_docs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"square triangle hexagon circle octagon cube\"</span><span class=\"p\">,</span>\n                  <span class=\"s2\">\"pyramid circle cube pentagon cylinder trapezoid\"</span><span class=\"p\">,</span>\n                  <span class=\"s2\">\"diamond octagon quadrilateral cylinder rectangle square\"</span><span class=\"p\">,</span>\n                  <span class=\"s2\">\"trapezoid cube hexagon diamond triangle circle cylinder\"</span><span class=\"p\">,</span>\n                  <span class=\"s2\">\"square rectangle quadrilateral octagon pentagon square\"</span><span class=\"p\">]</span>\n\n    <span class=\"n\">animal_color_docs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'goat green rat gerbil yellow dog cat blue white'</span><span class=\"p\">,</span>\n                         <span class=\"s1\">'gerbil black pink blue lamb rat hamster gray pig dog'</span><span class=\"p\">,</span>\n                         <span class=\"s1\">'orange pink cat cow pig black teal gerbil tan'</span><span class=\"p\">,</span>\n                         <span class=\"s1\">'hamster pig orange violet dog chicken orange tan'</span><span class=\"p\">]</span>\n\n    <span class=\"n\">inference_doc</span> <span class=\"o\">=</span> <span class=\"s2\">\"red yellow green blue orange violet green blue orange violet\"</span>\n\n    <span class=\"n\">doc_count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">keras_docs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"n\">keras_docs</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"n\">doc_count</span><span class=\"o\">+</span><span class=\"n\">ix</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'color'</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">ix</span><span class=\"p\">,</span> <span class=\"n\">text</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">color_docs</span><span class=\"p\">)])</span>\n    <span class=\"n\">doc_count</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">keras_docs</span><span class=\"p\">)</span>\n    <span class=\"n\">keras_docs</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"n\">doc_count</span><span class=\"o\">+</span><span class=\"n\">ix</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'animal'</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">ix</span><span class=\"p\">,</span> <span class=\"n\">text</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">animal_docs</span><span class=\"p\">)])</span>\n    <span class=\"n\">doc_count</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">keras_docs</span><span class=\"p\">)</span>\n    <span class=\"n\">keras_docs</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"n\">doc_count</span> <span class=\"o\">+</span> <span class=\"n\">ix</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'shape'</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">ix</span><span class=\"p\">,</span> <span class=\"n\">text</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">shape_docs</span><span class=\"p\">)])</span>\n    <span class=\"n\">doc_count</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">keras_docs</span><span class=\"p\">)</span>\n    <span class=\"n\">keras_docs</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"n\">doc_count</span> <span class=\"o\">+</span> <span class=\"n\">ix</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'animal'</span><span class=\"p\">,</span> <span class=\"s1\">'color'</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">ix</span><span class=\"p\">,</span> <span class=\"n\">text</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">animal_color_docs</span><span class=\"p\">)])</span>\n\n    <span class=\"c1\"># TODO: Add ability to auto-select embedding and seq_size based on data</span>\n    <span class=\"n\">doc2vec</span> <span class=\"o\">=</span> <span class=\"n\">Keras2Vec</span><span class=\"p\">(</span><span class=\"n\">keras_docs</span><span class=\"p\">,</span> <span class=\"n\">embedding_size</span><span class=\"o\">=</span><span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"n\">seq_size</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">doc2vec</span><span class=\"o\">.</span><span class=\"n\">build_model</span><span class=\"p\">()</span>\n    <span class=\"c1\"># If the number of epochs is to low, the check at the bottom may fail!</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Training Model:\"</span><span class=\"p\">)</span>\n    <span class=\"n\">doc2vec</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"mi\">150</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">training complete!\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">embeddings</span> <span class=\"o\">=</span> <span class=\"n\">doc2vec</span><span class=\"o\">.</span><span class=\"n\">get_doc_embeddings</span><span class=\"p\">()</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Beginning Evaluation:\"</span><span class=\"p\">)</span>\n    <span class=\"sd\">\"\"\"Docs 0-5 are colors while 6-11 are animals. The cosine distances for</span>\n<span class=\"sd\">    docs from the same topic (colors/animals) should approach 1, while</span>\n<span class=\"sd\">    disimilar docs, coming from different topics, should approach -1\"\"\"</span>\n    <span class=\"k\">if</span> <span class=\"n\">doc_similarity</span><span class=\"p\">(</span><span class=\"n\">embeddings</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">doc_similarity</span><span class=\"p\">(</span><span class=\"n\">embeddings</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">- Like topics are more similar!\"</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">- Something went wrong during training.\"</span><span class=\"p\">)</span>\n\n    <span class=\"sd\">\"\"\"Using the trained model we can now infer document vectors by training</span>\n<span class=\"sd\">    against a model where only the inference layer is trainable\"\"\"</span>\n\n    <span class=\"n\">doc2vec</span><span class=\"o\">.</span><span class=\"n\">infer_vector</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">inference_doc</span><span class=\"p\">,</span> <span class=\"p\">[]),</span> <span class=\"n\">lr</span><span class=\"o\">=.</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"n\">infer_vec</span> <span class=\"o\">=</span> <span class=\"n\">doc2vec</span><span class=\"o\">.</span><span class=\"n\">get_infer_embedding</span><span class=\"p\">()</span>\n    <span class=\"n\">infer_dist</span> <span class=\"o\">=</span> <span class=\"n\">cosine_similarity</span><span class=\"p\">(</span><span class=\"n\">infer_vec</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">embeddings</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">))[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">infer_dist</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"si\">{0:0.2f}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">infer_dist</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"se\">\\t</span><span class=\"s1\">- Document 0 has a cosine similarity of </span><span class=\"si\">{</span><span class=\"n\">infer_dist</span><span class=\"si\">}</span><span class=\"s1\"> between train and inferred vectors'</span><span class=\"p\">)</span>\n\n\n    <span class=\"sd\">\"\"\"Label analysis: shape should be farther away than animal and color\"\"\"</span>\n    <span class=\"n\">label_embeddings</span> <span class=\"o\">=</span> <span class=\"n\">doc2vec</span><span class=\"o\">.</span><span class=\"n\">get_label_embeddings</span><span class=\"p\">()</span>\n    <span class=\"n\">shape_vector</span> <span class=\"o\">=</span> <span class=\"n\">doc2vec</span><span class=\"o\">.</span><span class=\"n\">get_label_embedding</span><span class=\"p\">(</span><span class=\"s1\">'shape'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">animal_vector</span> <span class=\"o\">=</span> <span class=\"n\">doc2vec</span><span class=\"o\">.</span><span class=\"n\">get_label_embedding</span><span class=\"p\">(</span><span class=\"s1\">'animal'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">color_vector</span> <span class=\"o\">=</span> <span class=\"n\">doc2vec</span><span class=\"o\">.</span><span class=\"n\">get_label_embedding</span><span class=\"p\">(</span><span class=\"s1\">'color'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">animal_color_dist</span> <span class=\"o\">=</span> <span class=\"n\">cosine_similarity</span><span class=\"p\">(</span><span class=\"n\">animal_vector</span><span class=\"p\">,</span> <span class=\"n\">color_vector</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">shape_color_dist</span> <span class=\"o\">=</span> <span class=\"n\">cosine_similarity</span><span class=\"p\">(</span><span class=\"n\">shape_vector</span><span class=\"p\">,</span> <span class=\"n\">color_vector</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"n\">animal_color_dist</span> <span class=\"o\">&gt;</span> <span class=\"n\">shape_color_dist</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">- Label distances look good!\"</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">- Something went wrong with the labels.\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Changelog</h2>\n<p><strong>Version 0.1.1:</strong></p>\n<ul>\n<li>Bug fixes</li>\n</ul>\n<p><strong>Version 0.1.0:</strong></p>\n<ul>\n<li>Added <strong>get_label_embeddings()</strong>, <strong>get_label_embedding(label)</strong>\n<ul>\n<li><em>Note: Labels will no longer be ignored when generating <strong>Document()</strong> objects</em></li>\n</ul>\n</li>\n<li>Initial impelementation of label embeddings in the PV-DM model</li>\n<li>Updated demo.py file to provide use cases for labels</li>\n</ul>\n<p><strong>Version 0.0.3:</strong></p>\n<ul>\n<li>Added <strong>infer_vector(doc)</strong>, <strong>get_infer_embedding()</strong></li>\n<li>Implemented document inferencing. This enables the ability to infer a document vector from a pre-trained keras2vec model</li>\n<li>Modified layer naming for <em>infer_model</em> and <em>train_model</em> to support sharing weights between the models</li>\n</ul>\n<p><strong>Version 0.0.2:</strong></p>\n<ul>\n<li>Added <strong>get_doc_embeddings()</strong>, <strong>get_doc_embedding(doc)</strong>, <strong>get_word_embeddings()</strong>, and <strong>get_word_embedding(word)</strong> so embeddings can be grabbed directly</li>\n<li>Incorporated Neg-Sampling into Doc2Vec implementation\n<ul>\n<li><em>Note: Neg-Sampling is now a parameter when instantiatng a Keras2Vec object</em></li>\n</ul>\n</li>\n<li>Updated Doc2Vec model\n<ul>\n<li>Concatenating document embedding to the document's context, rather than averaging</li>\n<li>Added a dense layer between concatenated layer and sigmoid output in attempt to improve performance</li>\n<li>Updated optimizer to leverage Adamax rather than SGD in attempt to improve performance</li>\n</ul>\n</li>\n</ul>\n<p><strong>Version 0.0.1:</strong></p>\n<ul>\n<li>Initial Release</li>\n<li>Keras implementation of Doc2Vec</li>\n</ul>\n\n          </div>"}, "last_serial": 5926400, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e3f58183aa8d9ea0e9b53fe71bb07c4f", "sha256": "2f0c9435256c522f1a658a2f4a8d20aef333d9f5d1dd1b58a766841df08711c7"}, "downloads": -1, "filename": "Keras2Vec-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e3f58183aa8d9ea0e9b53fe71bb07c4f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7104, "upload_time": "2019-09-07T04:09:39", "upload_time_iso_8601": "2019-09-07T04:09:39.092264Z", "url": "https://files.pythonhosted.org/packages/bc/c8/a7c048ea4e58f87d737727307337ca6ea582110384fb300e458f7456a31b/Keras2Vec-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b2a35f5cdf9de078306f1c9b669d669", "sha256": "3fb7272ac479b0fe895a6bc801786e671006e09722ea1d4dc2a01551282598a8"}, "downloads": -1, "filename": "Keras2Vec-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2b2a35f5cdf9de078306f1c9b669d669", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4986, "upload_time": "2019-09-07T04:09:40", "upload_time_iso_8601": "2019-09-07T04:09:40.511755Z", "url": "https://files.pythonhosted.org/packages/03/ce/1f9ad5c4dca831da232746e9c24f97184c176493e888caeea7c4e24d3f71/Keras2Vec-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "33fc61a3566241883d5c00a53e048fc7", "sha256": "c2e13bab64206c927801b542bd557cf145b92223e54e22da87ec4d92dbd6d553"}, "downloads": -1, "filename": "Keras2Vec-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "33fc61a3566241883d5c00a53e048fc7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15282, "upload_time": "2019-09-13T03:13:02", "upload_time_iso_8601": "2019-09-13T03:13:02.836102Z", "url": "https://files.pythonhosted.org/packages/d0/f5/a0a6d12280b805cc799bfe7325826098175354a53e443933bab21adce9e1/Keras2Vec-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8de8398442a47c7f5a12b876481789d7", "sha256": "be06befdd640108bcea2e732492b91489b28ce6814a7599d7400f06bcb23445d"}, "downloads": -1, "filename": "Keras2Vec-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8de8398442a47c7f5a12b876481789d7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6980, "upload_time": "2019-09-13T03:13:04", "upload_time_iso_8601": "2019-09-13T03:13:04.585169Z", "url": "https://files.pythonhosted.org/packages/b8/51/7235cc4c44b6209a78df5ee43592c3657bd2e99efd06eec6745771760fb9/Keras2Vec-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "dc463a73486623ab8e377b83ba51eb5d", "sha256": "d5c9e95a436775ca739000d2875825225d64156ce65d54da3f80b8fcdc3276e0"}, "downloads": -1, "filename": "Keras2Vec-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "dc463a73486623ab8e377b83ba51eb5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9649, "upload_time": "2019-09-19T04:40:14", "upload_time_iso_8601": "2019-09-19T04:40:14.242031Z", "url": "https://files.pythonhosted.org/packages/48/28/e8914c13c7c691c3ec038ef7adcff92b2ab5490995b739f76f45632d44c3/Keras2Vec-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7a50159dd68123e5bbac7fdc2c5061a", "sha256": "4138da6ac7f8be0a6a7688c440042e83cec05b7e01b91a9274d907f20b9740cd"}, "downloads": -1, "filename": "Keras2Vec-0.0.3.tar.gz", "has_sig": false, "md5_digest": "b7a50159dd68123e5bbac7fdc2c5061a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7579, "upload_time": "2019-09-19T04:40:15", "upload_time_iso_8601": "2019-09-19T04:40:15.458539Z", "url": "https://files.pythonhosted.org/packages/62/9c/c191148a85532de88c438838077e2fd5a3d3adad1abb28cf9aaeff12d40f/Keras2Vec-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "92fd49c5185a28d147f6a436f10df517", "sha256": "2714fe5c72d19d093c98ab3963ce6f50213afc0491bc8c9dcd2d2df991ef3aab"}, "downloads": -1, "filename": "Keras2Vec-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "92fd49c5185a28d147f6a436f10df517", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13655, "upload_time": "2019-09-29T17:55:44", "upload_time_iso_8601": "2019-09-29T17:55:44.120398Z", "url": "https://files.pythonhosted.org/packages/64/83/0035afac3ce462c67caf1b17538d170602389d93e52188cbb2c191549784/Keras2Vec-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2567446bb1a71d25e7180c6fb852f330", "sha256": "9638bc1ced56d25dc50d650b8cc59bd43735e1384f5389be4457d3ed5f559f1f"}, "downloads": -1, "filename": "Keras2Vec-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2567446bb1a71d25e7180c6fb852f330", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8967, "upload_time": "2019-09-29T17:55:46", "upload_time_iso_8601": "2019-09-29T17:55:46.594834Z", "url": "https://files.pythonhosted.org/packages/e8/4d/1cbde0ec9856f358a9f9594eef79080c5728b20ce31a0c838fb5d2a584ac/Keras2Vec-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9d31e560cc5d275038f2a22c0db9ee8c", "sha256": "0bb834692e71d8c01bdb234738321511807b97fbb08987871a331cc2c298eb9d"}, "downloads": -1, "filename": "Keras2Vec-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9d31e560cc5d275038f2a22c0db9ee8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11060, "upload_time": "2019-10-04T03:40:48", "upload_time_iso_8601": "2019-10-04T03:40:48.246581Z", "url": "https://files.pythonhosted.org/packages/e5/37/31bc4eac95bf586e10911a2aa94dadb439295c5ff8bebd70828c1bfa7b7b/Keras2Vec-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5c529e3f0997d80bf7a50b5d11b8f87", "sha256": "cccee4d125913b62401b95c27fd1a534abf4172826cf26cd5885db446fea015a"}, "downloads": -1, "filename": "Keras2Vec-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c5c529e3f0997d80bf7a50b5d11b8f87", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9126, "upload_time": "2019-10-04T03:40:49", "upload_time_iso_8601": "2019-10-04T03:40:49.902789Z", "url": "https://files.pythonhosted.org/packages/cb/78/feeeca2dad292743122c68032c976300caad667fcf2d4900607688e53247/Keras2Vec-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9d31e560cc5d275038f2a22c0db9ee8c", "sha256": "0bb834692e71d8c01bdb234738321511807b97fbb08987871a331cc2c298eb9d"}, "downloads": -1, "filename": "Keras2Vec-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9d31e560cc5d275038f2a22c0db9ee8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11060, "upload_time": "2019-10-04T03:40:48", "upload_time_iso_8601": "2019-10-04T03:40:48.246581Z", "url": "https://files.pythonhosted.org/packages/e5/37/31bc4eac95bf586e10911a2aa94dadb439295c5ff8bebd70828c1bfa7b7b/Keras2Vec-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5c529e3f0997d80bf7a50b5d11b8f87", "sha256": "cccee4d125913b62401b95c27fd1a534abf4172826cf26cd5885db446fea015a"}, "downloads": -1, "filename": "Keras2Vec-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c5c529e3f0997d80bf7a50b5d11b8f87", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9126, "upload_time": "2019-10-04T03:40:49", "upload_time_iso_8601": "2019-10-04T03:40:49.902789Z", "url": "https://files.pythonhosted.org/packages/cb/78/feeeca2dad292743122c68032c976300caad667fcf2d4900607688e53247/Keras2Vec-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:14 2020"}