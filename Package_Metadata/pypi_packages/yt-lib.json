{"info": {"author": "hairygeek", "author_email": "hairygeek@yandex.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7"], "description": "yt_lib: Young YouTube library\n==========================\nyt_lib is the unofficial library for YouTube, which supports operations with likes, subscriptions, comments.\n```\n>>> from yt_lib import states\n>>> from yt_lib import YoutubeClient\n>>> client = YoutubeClient(cookies=cookies)\n>>> client.init_session()\n>>> client.subscribe('UCtinbF-Q-fVthA0qrFQTgXQ', states.SubscribeAction.SUBSCRIBE)\n<ActResult.SUCCESS: 1>\n```\nFeature Support\n---------------\nThe library begins to take its first steps, so the list is small.\n- Rates (like, dislikes and take back)\n- Subscriptions (and unsubscribes)\n- Writing comments\n\nInstallation\n================================\nTo install yt_lib, simply run this simple command in your terminal of choice:\n\n    $ pip install yt_lib\n\n\nyt_lib is actively developed on GitHub, where the code is [always available](https://github.com/hairygeek/yt_lib).\n\nYou can either clone the public repository:\n\n    $ git clone https://github.com/hairygeek/yt_lib.git\n\nQuickstart\n================================\n\nFirst make sure thar yt_lib is installed.\n\nLet's get started with some simple examples.\n\nSubscribes\n----------\nBegin by importing the ``yt_lib`` and ``yt_lib.states`` modules:\n\n```\n>>> import yt_lib\n>>> from yt_lib import states\n```\n\nNow let's create YouTubeClient, this requires youtube cookies. Cookies required to work: apisid,\nconsent, hsid, login_info, pref, sapisid, sid, sidcc, ssid, visitor_info1_live. Imagine that we already have them:\n\n```\n>>> client = YoutubeClient(cookies=cookies)\n```\n\nNow let's initialize the session. Nothing will work without it:\n\n```\n>>> client.init_session()\n```\n\nNow we can subscribe to the channel. for this we need a type of subscription (unsubscribe / subscription), we will take it from the module ``states``:\n\n```\n>>> client.subscribe('UCtinbF-Q-fVthA0qrFQTgXQ', states.SubscribeAction.SUBSCRIBE)\n    <ActResult.SUCCESS: 1>\n```\n\nWe got an response. In our case, this is SUCCESS, which means that the subscription was successful.\n\nRates\n--------------------\nIn the same way we can like:\n\n```\n>>> client.rate('V6Y-ahQFQDA', states.LikeAction.LIKE)\n    <ActResult.SUCCESS: 1>\n```\n\nor dislike:\n\n```\n>>> client.rate('V6Y-ahQFQDA', states.LikeAction.DISLIKE)\n    <ActResult.SUCCESS: 1>\n```\n\nor take action back:\n\n```\n>>> client.rate('V6Y-ahQFQDA', states.LikeAction.TAKE_BACK)\n    <ActResult.SUCCESS: 1>\n```\n\nThat's not all, but l'm too lazy to describe the rest. See the description of methods.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hairygeek/yt_lib", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "yt-lib", "package_url": "https://pypi.org/project/yt-lib/", "platform": "", "project_url": "https://pypi.org/project/yt-lib/", "project_urls": {"Homepage": "https://github.com/hairygeek/yt_lib"}, "release_url": "https://pypi.org/project/yt-lib/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Young YouTube library", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>yt_lib: Young YouTube library</h1>\n<p>yt_lib is the unofficial library for YouTube, which supports operations with likes, subscriptions, comments.</p>\n<pre><code>&gt;&gt;&gt; from yt_lib import states\n&gt;&gt;&gt; from yt_lib import YoutubeClient\n&gt;&gt;&gt; client = YoutubeClient(cookies=cookies)\n&gt;&gt;&gt; client.init_session()\n&gt;&gt;&gt; client.subscribe('UCtinbF-Q-fVthA0qrFQTgXQ', states.SubscribeAction.SUBSCRIBE)\n&lt;ActResult.SUCCESS: 1&gt;\n</code></pre>\n<h2>Feature Support</h2>\n<p>The library begins to take its first steps, so the list is small.</p>\n<ul>\n<li>Rates (like, dislikes and take back)</li>\n<li>Subscriptions (and unsubscribes)</li>\n<li>Writing comments</li>\n</ul>\n<h1>Installation</h1>\n<p>To install yt_lib, simply run this simple command in your terminal of choice:</p>\n<pre><code>$ pip install yt_lib\n</code></pre>\n<p>yt_lib is actively developed on GitHub, where the code is <a href=\"https://github.com/hairygeek/yt_lib\" rel=\"nofollow\">always available</a>.</p>\n<p>You can either clone the public repository:</p>\n<pre><code>$ git clone https://github.com/hairygeek/yt_lib.git\n</code></pre>\n<h1>Quickstart</h1>\n<p>First make sure thar yt_lib is installed.</p>\n<p>Let's get started with some simple examples.</p>\n<h2>Subscribes</h2>\n<p>Begin by importing the <code>yt_lib</code> and <code>yt_lib.states</code> modules:</p>\n<pre><code>&gt;&gt;&gt; import yt_lib\n&gt;&gt;&gt; from yt_lib import states\n</code></pre>\n<p>Now let's create YouTubeClient, this requires youtube cookies. Cookies required to work: apisid,\nconsent, hsid, login_info, pref, sapisid, sid, sidcc, ssid, visitor_info1_live. Imagine that we already have them:</p>\n<pre><code>&gt;&gt;&gt; client = YoutubeClient(cookies=cookies)\n</code></pre>\n<p>Now let's initialize the session. Nothing will work without it:</p>\n<pre><code>&gt;&gt;&gt; client.init_session()\n</code></pre>\n<p>Now we can subscribe to the channel. for this we need a type of subscription (unsubscribe / subscription), we will take it from the module <code>states</code>:</p>\n<pre><code>&gt;&gt;&gt; client.subscribe('UCtinbF-Q-fVthA0qrFQTgXQ', states.SubscribeAction.SUBSCRIBE)\n    &lt;ActResult.SUCCESS: 1&gt;\n</code></pre>\n<p>We got an response. In our case, this is SUCCESS, which means that the subscription was successful.</p>\n<h2>Rates</h2>\n<p>In the same way we can like:</p>\n<pre><code>&gt;&gt;&gt; client.rate('V6Y-ahQFQDA', states.LikeAction.LIKE)\n    &lt;ActResult.SUCCESS: 1&gt;\n</code></pre>\n<p>or dislike:</p>\n<pre><code>&gt;&gt;&gt; client.rate('V6Y-ahQFQDA', states.LikeAction.DISLIKE)\n    &lt;ActResult.SUCCESS: 1&gt;\n</code></pre>\n<p>or take action back:</p>\n<pre><code>&gt;&gt;&gt; client.rate('V6Y-ahQFQDA', states.LikeAction.TAKE_BACK)\n    &lt;ActResult.SUCCESS: 1&gt;\n</code></pre>\n<p>That's not all, but l'm too lazy to describe the rest. See the description of methods.</p>\n\n          </div>"}, "last_serial": 5671122, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a156f0e8be3318ae89a5e84ad34b83d1", "sha256": "b651d3e7a2b6c2555560e70a1798baeef6a3b84d38a2b1046fb06c914b398182"}, "downloads": -1, "filename": "yt_lib-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a156f0e8be3318ae89a5e84ad34b83d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5668, "upload_time": "2019-08-13T10:14:12", "upload_time_iso_8601": "2019-08-13T10:14:12.885923Z", "url": "https://files.pythonhosted.org/packages/92/ae/297ac23b6ebcf683b22524aeec1050657d8c8014e29502f12ae371246351/yt_lib-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a156f0e8be3318ae89a5e84ad34b83d1", "sha256": "b651d3e7a2b6c2555560e70a1798baeef6a3b84d38a2b1046fb06c914b398182"}, "downloads": -1, "filename": "yt_lib-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a156f0e8be3318ae89a5e84ad34b83d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5668, "upload_time": "2019-08-13T10:14:12", "upload_time_iso_8601": "2019-08-13T10:14:12.885923Z", "url": "https://files.pythonhosted.org/packages/92/ae/297ac23b6ebcf683b22524aeec1050657d8c8014e29502f12ae371246351/yt_lib-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:21:31 2020"}