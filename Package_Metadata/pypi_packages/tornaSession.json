{"info": {"author": "MitchellChu", "author_email": "zxdjsj@126.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP :: Session"], "description": "Torndsession Session\r\n====================\r\n\r\n\r\n`Torndsession <https://github.com/MitchellChu/torndsession>`_ is a session extension for `Tornado <https://github.com/tornadoweb/tornado>`__ web framework.\r\nTorndsession support application memory, file, redis or memcached to save session data for request, and it's easy to extend for developer.\r\n\r\nQuick links\r\n===========\r\n\r\n* `Documentation <http://blog.useasp.net/category/30.aspx>`_\r\n\r\n* `Source (github) <https://github.com/MitchellChu/torndsession>`_\r\n\r\n* `Torndsession License <https://raw.githubusercontent.com/MitchellChu/torndsession/master/LICENSE>`_\r\n\r\n* `Examples <https://github.com/MitchellChu/torndsession/tree/master/demos>`_\r\n\r\n\r\nHello, Session\r\n==============\r\n\r\nHere is a simple \"Hello, Session\" example web app for Tornado with Torndsession.::\r\n\r\n\r\n    import tornado.web\r\n    import tornado.httpserver\r\n    import tornado.ioloop\r\n    import torndsession\r\n\r\n\r\n    class Application(tornado.web.Application):\r\n        def __init__(self):\r\n            handlers = [\r\n                (r\"/\", MainHandler),\r\n            ]\r\n            settings = dict(\r\n                debug=True,\r\n            )\r\n            # sid_name, lifetime added in 1.1.5.0\r\n            # sid_name: the name of session id in cookies.\r\n            # lifetime: session default expires seconds.\r\n            session_settings = dict(\r\n                driver='memory',\r\n                driver_settings={'host': self},\r\n                force_persistence=True,\r\n                sid_name='torndsessionID',\r\n                session_lifetime=1800\r\n            ),\r\n            settings.update(session=session_settings)\r\n            tornado.web.Application.__init__(self, handlers, **settings)\r\n\r\n\r\n    class MainHandler(torndsession.sessionhandler.SessionBaseHandler):\r\n        def get(self):\r\n            self.write(\"Hello, Session.<br/>\")\r\n            if 'data' in self.session:\r\n                data = self.session['data']\r\n            else:\r\n                data = 0\r\n            self.write('data=%s' % data)\r\n            self.session[\"data\"] = data + 1\r\n\r\n\r\n    def main():\r\n        http_server = tornado.httpserver.HTTPServer(Application())\r\n        http_server.listen(8000)\r\n        tornado.ioloop.IOLoop.instance().start()\r\n\r\n\r\n    if __name__ == \"__main__\":\r\n        main()\r\n\r\n\r\nIn this example, Request handler obtain memory session feature, it just inherit from SessionBaseHandler. more session example see `torndsession demos <https://github.com/MitchellChu/torndsession/tree/master/demos>`_.\r\n\r\n\r\nInstallation\r\n============\r\n\r\n**Automatic installation**:\r\n\r\n::\r\n\r\n    pip install torndsession\r\n\r\nTorndsession is listed in `PyPI <https://pypi.python.org/pypi/torndsession>`__ and can be installed with `pip` or `easy_install`. Note that this installation can not install demos applicatinos which be included in source code.\r\n\r\nThe another way is use `git+` install torndsession from github.\r\n\r\n::\r\n\r\n    pip install git+https://github.com/mitchellchu/torndsession\r\n\r\n\r\n\r\n**Manual installation**:\r\n\r\nIn this way, you need download the source from `PyPI <https://pypi.python.org/pypi/torndsession>`__.::\r\n\r\n    tar xvzf torndsession.tar.gz\r\n    cd torndsession\r\n    python setup.py build\r\n    sudo python setup.py install\r\n\r\n\r\nThe Torndsession source code is hosted on `GitHub <https://github.com/MitchellChu/torndsession>`_.\r\n\r\n\r\nUpdated\r\n=======\r\n\r\nTorndsession 1.1.5:\r\n\r\n- fixed bug in 1.1.4\r\n- default session id value generator changed. see `#ISSUE 12# <https://github.com/MitchellChu/torndsession/issues/12>`_.\r\n- added two custom key in settings.\r\n\r\n  - sid_name: session's cookie name.\r\n  - session_lifetime: default expired seconds for session.\r\n\r\nTorndsession 1.1.4:\r\n\r\n- fixed bug\r\n\r\nTorndsession 1.1.3 fixed some bug and supported python 3.x.\r\n\r\n\r\nRequires\r\n========\r\n\r\n\r\n+ `Tornado <https://github.com/tornadoweb/tornado>`__\r\n+ `Redis (Optional) <http://redis.io/>`_\r\n+ `Memcached (Optional) <http://memcached.org/>`_\r\n\r\n\r\n\r\nLICENSE\r\n=======\r\nTorndsession is licensed under MIT.\r\n\r\n\r\n\r\n\r\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/HQ1363/torndsession", "keywords": "torndsession tornado session redis memcached memory file python", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tornaSession", "package_url": "https://pypi.org/project/tornaSession/", "platform": "", "project_url": "https://pypi.org/project/tornaSession/", "project_urls": {"Homepage": "https://github.com/HQ1363/torndsession"}, "release_url": "https://pypi.org/project/tornaSession/1.1.5.2/", "requires_dist": ["tornado"], "requires_python": "", "summary": "Session extensions for Tornado", "version": "1.1.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"torndsession-session\">\n<h2>Torndsession Session</h2>\n<p><a href=\"https://github.com/MitchellChu/torndsession\" rel=\"nofollow\">Torndsession</a> is a session extension for <a href=\"https://github.com/tornadoweb/tornado\" rel=\"nofollow\">Tornado</a> web framework.\nTorndsession support application memory, file, redis or memcached to save session data for request, and it\u2019s easy to extend for developer.</p>\n</div>\n<div id=\"quick-links\">\n<h2>Quick links</h2>\n<ul>\n<li><a href=\"http://blog.useasp.net/category/30.aspx\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"https://github.com/MitchellChu/torndsession\" rel=\"nofollow\">Source (github)</a></li>\n<li><a href=\"https://raw.githubusercontent.com/MitchellChu/torndsession/master/LICENSE\" rel=\"nofollow\">Torndsession License</a></li>\n<li><a href=\"https://github.com/MitchellChu/torndsession/tree/master/demos\" rel=\"nofollow\">Examples</a></li>\n</ul>\n</div>\n<div id=\"hello-session\">\n<h2>Hello, Session</h2>\n<p>Here is a simple \u201cHello, Session\u201d example web app for Tornado with Torndsession.:</p>\n<pre>import tornado.web\nimport tornado.httpserver\nimport tornado.ioloop\nimport torndsession\n\n\nclass Application(tornado.web.Application):\n    def __init__(self):\n        handlers = [\n            (r\"/\", MainHandler),\n        ]\n        settings = dict(\n            debug=True,\n        )\n        # sid_name, lifetime added in 1.1.5.0\n        # sid_name: the name of session id in cookies.\n        # lifetime: session default expires seconds.\n        session_settings = dict(\n            driver='memory',\n            driver_settings={'host': self},\n            force_persistence=True,\n            sid_name='torndsessionID',\n            session_lifetime=1800\n        ),\n        settings.update(session=session_settings)\n        tornado.web.Application.__init__(self, handlers, **settings)\n\n\nclass MainHandler(torndsession.sessionhandler.SessionBaseHandler):\n    def get(self):\n        self.write(\"Hello, Session.&lt;br/&gt;\")\n        if 'data' in self.session:\n            data = self.session['data']\n        else:\n            data = 0\n        self.write('data=%s' % data)\n        self.session[\"data\"] = data + 1\n\n\ndef main():\n    http_server = tornado.httpserver.HTTPServer(Application())\n    http_server.listen(8000)\n    tornado.ioloop.IOLoop.instance().start()\n\n\nif __name__ == \"__main__\":\n    main()\n</pre>\n<p>In this example, Request handler obtain memory session feature, it just inherit from SessionBaseHandler. more session example see <a href=\"https://github.com/MitchellChu/torndsession/tree/master/demos\" rel=\"nofollow\">torndsession demos</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><strong>Automatic installation</strong>:</p>\n<pre>pip install torndsession\n</pre>\n<p>Torndsession is listed in <a href=\"https://pypi.python.org/pypi/torndsession\" rel=\"nofollow\">PyPI</a> and can be installed with <cite>pip</cite> or <cite>easy_install</cite>. Note that this installation can not install demos applicatinos which be included in source code.</p>\n<p>The another way is use <cite>git+</cite> install torndsession from github.</p>\n<pre>pip install git+https://github.com/mitchellchu/torndsession\n</pre>\n<p><strong>Manual installation</strong>:</p>\n<p>In this way, you need download the source from <a href=\"https://pypi.python.org/pypi/torndsession\" rel=\"nofollow\">PyPI</a>.:</p>\n<pre>tar xvzf torndsession.tar.gz\ncd torndsession\npython setup.py build\nsudo python setup.py install\n</pre>\n<p>The Torndsession source code is hosted on <a href=\"https://github.com/MitchellChu/torndsession\" rel=\"nofollow\">GitHub</a>.</p>\n</div>\n<div id=\"updated\">\n<h2>Updated</h2>\n<p>Torndsession 1.1.5:</p>\n<ul>\n<li>fixed bug in 1.1.4</li>\n<li>default session id value generator changed. see <a href=\"https://github.com/MitchellChu/torndsession/issues/12\" rel=\"nofollow\">#ISSUE 12#</a>.</li>\n<li>added two custom key in settings.<ul>\n<li>sid_name: session\u2019s cookie name.</li>\n<li>session_lifetime: default expired seconds for session.</li>\n</ul>\n</li>\n</ul>\n<p>Torndsession 1.1.4:</p>\n<ul>\n<li>fixed bug</li>\n</ul>\n<p>Torndsession 1.1.3 fixed some bug and supported python 3.x.</p>\n</div>\n<div id=\"requires\">\n<h2>Requires</h2>\n<ul>\n<li><a href=\"https://github.com/tornadoweb/tornado\" rel=\"nofollow\">Tornado</a></li>\n<li><a href=\"http://redis.io/\" rel=\"nofollow\">Redis (Optional)</a></li>\n<li><a href=\"http://memcached.org/\" rel=\"nofollow\">Memcached (Optional)</a></li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>LICENSE</h2>\n<p>Torndsession is licensed under MIT.</p>\n</div>\n\n          </div>"}, "last_serial": 5611780, "releases": {"1.1.5.2": [{"comment_text": "", "digests": {"md5": "9dbbe7cd106d1512ad29e2effe69edaf", "sha256": "fdb0240cd7ca6426fae64a45c8250b6c8be02ab00bb156e1f4030844d8234201"}, "downloads": -1, "filename": "tornaSession-1.1.5.2-py2-none-any.whl", "has_sig": false, "md5_digest": "9dbbe7cd106d1512ad29e2effe69edaf", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 13115, "upload_time": "2019-07-31T06:34:12", "upload_time_iso_8601": "2019-07-31T06:34:12.111756Z", "url": "https://files.pythonhosted.org/packages/75/42/b9a0423aa7e6b3e9680612ccbd7aec6cffab0aa8b9e07f0117629dc55d81/tornaSession-1.1.5.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cffab4ee427c01b37c1b12807ebcd85", "sha256": "4c70e70891ba77de30dff6beb43fcd74341c09063a77fd616aef3c96e7dbf508"}, "downloads": -1, "filename": "tornaSession-1.1.5.2.tar.gz", "has_sig": false, "md5_digest": "0cffab4ee427c01b37c1b12807ebcd85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8554, "upload_time": "2019-07-31T06:34:14", "upload_time_iso_8601": "2019-07-31T06:34:14.646371Z", "url": "https://files.pythonhosted.org/packages/e9/87/2f9f891ecc8b8658e074d7b59e5cb5cccc4be2208f6b354cfb76748df357/tornaSession-1.1.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9dbbe7cd106d1512ad29e2effe69edaf", "sha256": "fdb0240cd7ca6426fae64a45c8250b6c8be02ab00bb156e1f4030844d8234201"}, "downloads": -1, "filename": "tornaSession-1.1.5.2-py2-none-any.whl", "has_sig": false, "md5_digest": "9dbbe7cd106d1512ad29e2effe69edaf", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 13115, "upload_time": "2019-07-31T06:34:12", "upload_time_iso_8601": "2019-07-31T06:34:12.111756Z", "url": "https://files.pythonhosted.org/packages/75/42/b9a0423aa7e6b3e9680612ccbd7aec6cffab0aa8b9e07f0117629dc55d81/tornaSession-1.1.5.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cffab4ee427c01b37c1b12807ebcd85", "sha256": "4c70e70891ba77de30dff6beb43fcd74341c09063a77fd616aef3c96e7dbf508"}, "downloads": -1, "filename": "tornaSession-1.1.5.2.tar.gz", "has_sig": false, "md5_digest": "0cffab4ee427c01b37c1b12807ebcd85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8554, "upload_time": "2019-07-31T06:34:14", "upload_time_iso_8601": "2019-07-31T06:34:14.646371Z", "url": "https://files.pythonhosted.org/packages/e9/87/2f9f891ecc8b8658e074d7b59e5cb5cccc4be2208f6b354cfb76748df357/tornaSession-1.1.5.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:49:45 2020"}