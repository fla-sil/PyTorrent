{"info": {"author": "wanderxjtu", "author_email": "wanderhuang@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "# anthunder(a.k.a. sofa-bolt-python)\n\nanthunder(ant thunder) is a sofa-bolt library written in python. \nIt supports RPC calling via 'sofa-bolt + protobuf' protocol.\n\n## requirements\n\n- python3 >= 3.5 (aio classes needs asyncio support)\n- python2.7 (limited support, needs extra 3rd party libraries)\n- mosn >= 1.3 (to use with version >= 0.6)\n- mosn < 1.3 (to use with version < 0.6)\n\n## roadmap\n\n- [x] bolt client(protobuf serialization)\n- [x] service discover via mosn (sofa servicemesh sidecar)\n- [x] bolt server(protobuf serialization)\n- [ ] hessian2 serialization support\n\n## Tutorial\n\n### As client (caller)\n0. Acquire `.proto` file\n1. Execute `protoc --python_out=. *.proto` to compile protobuf file, and get `_pb2.py` file.\n2. Import protobuf classes (postfixed with `_pb2`)\n\n```python\nfrom SampleServicePbResult_pb2 import SampleServicePbResult\nfrom SampleServicePbRequest_pb2 import SampleServicePbRequest\n\nfrom anthunder import AioClient\n\n\nspanctx = SpanContext()         # generate a new context, an object of mytracer.SpanContext, stores rpc_trace_context.\n# spanctx = ctx                 # or transfered from upstream rpc\nclient = AioClient(my_app_name) # my_app_name will be send to sidecar as caller name.\n                                # will create a thread, and send heartbeat to mesh every 30s\n\ninterface = 'com.alipay.rpc.common.service.facade.pb.SampleServicePb:1.0'\n\n# Subscribe interface\nclient.subscribe(interface)\n\n# Call synchronously\ncontent = client.invoke_sync(interface, \"hello\",\n                             SampleServicePbRequest(name=some_name).SerializeToString(),\n                             timeout_ms=500, spanctx=spanctx)\nresult = SampleServicePbResult()\nresult.ParseFromString(content)\n\n# Call asynchronously\n\ndef client_callback(resp):\n    # callback function, accepts bytes as the only argument,\n    # then do deserialize and further processes\n    result = SampleServicePbResult()\n    result.ParseFromString(content)\n    # do something\n\nfuture = client.invoke_async(interface, \"hello\", \n                             SampleServicePbRequest(name=some_name).SerializeToString(),\n                             spanctx=spanctx, callback=client_callback)\n)\n\n```\n\nSee project's unittest for runnable demo\n\n### As server\n\n```python\nfrom anthunder.listener import aio_listener\n\nclass SampleService(object):\n    def __init__(self, ctx):\n        # service must accept one param as spanctx for rpc tracing support\n        self.ctx = ctx\n\n    def hello(self, bs: bytes):\n        obj = SampleServicePbRequest()\n        obj.ParseFromString(bs)\n        print(\"Processing Request\", obj)\n        return SampleServicePbResult(result=obj.name).SerializeToString()\n\n\nlistener = aio_listener.AioListener(('127.0.0.1', 12200), \"test_app\")\n# register interface and its function, plus its protobuf definition class\nlistener.handler.register_interface(\"com.alipay.rpc.common.service.facade.pb.SampleServicePb:1.0\",\n                                    SampleService)\n# start server in a standalone thread\nlistener.run_threading()\n# or start in current thread\nlistener.run_forever()\n\n# publish interfaces to service mesh\nlistener.publish()\n\n# shutdown the server\nlistener.shutdown()\n\n```\n\n## License\n\nCopyright (c) 2018-present, Ant Financial Service Group\n\nApache License 2.0\n\nSee LICENSE file.\n\n## Thirdparty\n\nPart of the mysockpool package uses codes from [urllib3](https://github.com/urllib3/urllib3) project \nunder the term of MIT License. See origin-license.txt under the mysockpool package.\n\n\n\n# Release History\n## 0.5.6 (2019-03-15)\n### Bugfixes\n - fix a infinite loop bug when parsing protocol\n\n## 0.5.4 (2018-11-09)\n### Bugfixes\n - fix server errors under python2.7\n\n## 0.5.3 (2018-08-27)\n### Feature\n - support antsharecloud parameters.\n\n## 0.5.2 (2018-09-03)\n### Bugfixes\n - fix various errors under python2.7\n\n## 0.5.1 (2018-08-31)\n### Bugfixes\n - sofa trace rpc id may contains str.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alipay/sofa-bolt-python", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "anthunder", "package_url": "https://pypi.org/project/anthunder/", "platform": "", "project_url": "https://pypi.org/project/anthunder/", "project_urls": {"Homepage": "https://github.com/alipay/sofa-bolt-python"}, "release_url": "https://pypi.org/project/anthunder/0.7/", "requires_dist": ["opentracing (==1.3.0)", "requests (>=2.13.0)", "attrs (>=18.1.0)", "six"], "requires_python": "", "summary": "an(t)thunder is a sofa-bolt protocol lib.", "version": "0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>anthunder(a.k.a. sofa-bolt-python)</h1>\n<p>anthunder(ant thunder) is a sofa-bolt library written in python.\nIt supports RPC calling via 'sofa-bolt + protobuf' protocol.</p>\n<h2>requirements</h2>\n<ul>\n<li>python3 &gt;= 3.5 (aio classes needs asyncio support)</li>\n<li>python2.7 (limited support, needs extra 3rd party libraries)</li>\n<li>mosn &gt;= 1.3 (to use with version &gt;= 0.6)</li>\n<li>mosn &lt; 1.3 (to use with version &lt; 0.6)</li>\n</ul>\n<h2>roadmap</h2>\n<ul>\n<li>[x] bolt client(protobuf serialization)</li>\n<li>[x] service discover via mosn (sofa servicemesh sidecar)</li>\n<li>[x] bolt server(protobuf serialization)</li>\n<li>[ ] hessian2 serialization support</li>\n</ul>\n<h2>Tutorial</h2>\n<h3>As client (caller)</h3>\n<ol>\n<li>Acquire <code>.proto</code> file</li>\n<li>Execute <code>protoc --python_out=. *.proto</code> to compile protobuf file, and get <code>_pb2.py</code> file.</li>\n<li>Import protobuf classes (postfixed with <code>_pb2</code>)</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">SampleServicePbResult_pb2</span> <span class=\"kn\">import</span> <span class=\"n\">SampleServicePbResult</span>\n<span class=\"kn\">from</span> <span class=\"nn\">SampleServicePbRequest_pb2</span> <span class=\"kn\">import</span> <span class=\"n\">SampleServicePbRequest</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">anthunder</span> <span class=\"kn\">import</span> <span class=\"n\">AioClient</span>\n\n\n<span class=\"n\">spanctx</span> <span class=\"o\">=</span> <span class=\"n\">SpanContext</span><span class=\"p\">()</span>         <span class=\"c1\"># generate a new context, an object of mytracer.SpanContext, stores rpc_trace_context.</span>\n<span class=\"c1\"># spanctx = ctx                 # or transfered from upstream rpc</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">AioClient</span><span class=\"p\">(</span><span class=\"n\">my_app_name</span><span class=\"p\">)</span> <span class=\"c1\"># my_app_name will be send to sidecar as caller name.</span>\n                                <span class=\"c1\"># will create a thread, and send heartbeat to mesh every 30s</span>\n\n<span class=\"n\">interface</span> <span class=\"o\">=</span> <span class=\"s1\">'com.alipay.rpc.common.service.facade.pb.SampleServicePb:1.0'</span>\n\n<span class=\"c1\"># Subscribe interface</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"n\">interface</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Call synchronously</span>\n<span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">invoke_sync</span><span class=\"p\">(</span><span class=\"n\">interface</span><span class=\"p\">,</span> <span class=\"s2\">\"hello\"</span><span class=\"p\">,</span>\n                             <span class=\"n\">SampleServicePbRequest</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">some_name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">SerializeToString</span><span class=\"p\">(),</span>\n                             <span class=\"n\">timeout_ms</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"n\">spanctx</span><span class=\"o\">=</span><span class=\"n\">spanctx</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">SampleServicePbResult</span><span class=\"p\">()</span>\n<span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">ParseFromString</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Call asynchronously</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">client_callback</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">):</span>\n    <span class=\"c1\"># callback function, accepts bytes as the only argument,</span>\n    <span class=\"c1\"># then do deserialize and further processes</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">SampleServicePbResult</span><span class=\"p\">()</span>\n    <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">ParseFromString</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">)</span>\n    <span class=\"c1\"># do something</span>\n\n<span class=\"n\">future</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">invoke_async</span><span class=\"p\">(</span><span class=\"n\">interface</span><span class=\"p\">,</span> <span class=\"s2\">\"hello\"</span><span class=\"p\">,</span> \n                             <span class=\"n\">SampleServicePbRequest</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">some_name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">SerializeToString</span><span class=\"p\">(),</span>\n                             <span class=\"n\">spanctx</span><span class=\"o\">=</span><span class=\"n\">spanctx</span><span class=\"p\">,</span> <span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"n\">client_callback</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n<p>See project's unittest for runnable demo</p>\n<h3>As server</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">anthunder.listener</span> <span class=\"kn\">import</span> <span class=\"n\">aio_listener</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">SampleService</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">):</span>\n        <span class=\"c1\"># service must accept one param as spanctx for rpc tracing support</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"n\">ctx</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">bs</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span><span class=\"p\">):</span>\n        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">SampleServicePbRequest</span><span class=\"p\">()</span>\n        <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">ParseFromString</span><span class=\"p\">(</span><span class=\"n\">bs</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Processing Request\"</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">SampleServicePbResult</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">SerializeToString</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">listener</span> <span class=\"o\">=</span> <span class=\"n\">aio_listener</span><span class=\"o\">.</span><span class=\"n\">AioListener</span><span class=\"p\">((</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"mi\">12200</span><span class=\"p\">),</span> <span class=\"s2\">\"test_app\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># register interface and its function, plus its protobuf definition class</span>\n<span class=\"n\">listener</span><span class=\"o\">.</span><span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">register_interface</span><span class=\"p\">(</span><span class=\"s2\">\"com.alipay.rpc.common.service.facade.pb.SampleServicePb:1.0\"</span><span class=\"p\">,</span>\n                                    <span class=\"n\">SampleService</span><span class=\"p\">)</span>\n<span class=\"c1\"># start server in a standalone thread</span>\n<span class=\"n\">listener</span><span class=\"o\">.</span><span class=\"n\">run_threading</span><span class=\"p\">()</span>\n<span class=\"c1\"># or start in current thread</span>\n<span class=\"n\">listener</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># publish interfaces to service mesh</span>\n<span class=\"n\">listener</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># shutdown the server</span>\n<span class=\"n\">listener</span><span class=\"o\">.</span><span class=\"n\">shutdown</span><span class=\"p\">()</span>\n</pre>\n<h2>License</h2>\n<p>Copyright (c) 2018-present, Ant Financial Service Group</p>\n<p>Apache License 2.0</p>\n<p>See LICENSE file.</p>\n<h2>Thirdparty</h2>\n<p>Part of the mysockpool package uses codes from <a href=\"https://github.com/urllib3/urllib3\" rel=\"nofollow\">urllib3</a> project\nunder the term of MIT License. See origin-license.txt under the mysockpool package.</p>\n<h1>Release History</h1>\n<h2>0.5.6 (2019-03-15)</h2>\n<h3>Bugfixes</h3>\n<ul>\n<li>fix a infinite loop bug when parsing protocol</li>\n</ul>\n<h2>0.5.4 (2018-11-09)</h2>\n<h3>Bugfixes</h3>\n<ul>\n<li>fix server errors under python2.7</li>\n</ul>\n<h2>0.5.3 (2018-08-27)</h2>\n<h3>Feature</h3>\n<ul>\n<li>support antsharecloud parameters.</li>\n</ul>\n<h2>0.5.2 (2018-09-03)</h2>\n<h3>Bugfixes</h3>\n<ul>\n<li>fix various errors under python2.7</li>\n</ul>\n<h2>0.5.1 (2018-08-31)</h2>\n<h3>Bugfixes</h3>\n<ul>\n<li>sofa trace rpc id may contains str.</li>\n</ul>\n\n          </div>"}, "last_serial": 6992132, "releases": {"0.5.1": [{"comment_text": "", "digests": {"md5": "28612802c8d3cb5acdb0052b3699c086", "sha256": "82d3be6614f01c6ece6d35813a6d1773fce32c49e29f65d0e1fabf95231051fc"}, "downloads": -1, "filename": "anthunder-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "28612802c8d3cb5acdb0052b3699c086", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 60257, "upload_time": "2018-08-31T04:45:26", "upload_time_iso_8601": "2018-08-31T04:45:26.601672Z", "url": "https://files.pythonhosted.org/packages/64/15/0cea8945d5701fa15046e5992b3f22c57cfded2edf811ffc2238f3d9d19b/anthunder-0.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6a6ba9f897e82b6a2ec5a10a30e4b26", "sha256": "caf2d4b5e1bd572dc66da69ba6dc3b3a2b5149750a8e0a83d7fe666e39f616f1"}, "downloads": -1, "filename": "anthunder-0.5.1.tar.gz", "has_sig": false, "md5_digest": "b6a6ba9f897e82b6a2ec5a10a30e4b26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30873, "upload_time": "2018-08-31T04:45:38", "upload_time_iso_8601": "2018-08-31T04:45:38.589745Z", "url": "https://files.pythonhosted.org/packages/fa/bf/a9df8f9cc231f131bc9542f3f71724a1477c6c0af987f4160ae40e3711a5/anthunder-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "5a0ddd63bf5445936ddadfab5ade0d7a", "sha256": "0313d6c0cb1fc3ab40c8332e1fd5b202012fd2fccb518ae6d0241395190fc443"}, "downloads": -1, "filename": "anthunder-0.5.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5a0ddd63bf5445936ddadfab5ade0d7a", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 60191, "upload_time": "2018-09-03T09:14:03", "upload_time_iso_8601": "2018-09-03T09:14:03.505485Z", "url": "https://files.pythonhosted.org/packages/85/e4/341bb1d35b785d2d73423db262efdee2b4fb33dc49371cb4978c97dfafff/anthunder-0.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4bdcc0ae60995b52bb8deae7f4ebdeb", "sha256": "c534231a5668db20eb052904fffc14396f05408fbd21e8f107a8f7599c7a2136"}, "downloads": -1, "filename": "anthunder-0.5.2.tar.gz", "has_sig": false, "md5_digest": "b4bdcc0ae60995b52bb8deae7f4ebdeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31397, "upload_time": "2018-09-03T09:13:46", "upload_time_iso_8601": "2018-09-03T09:13:46.947104Z", "url": "https://files.pythonhosted.org/packages/21/51/d822da4ccb2e0bb12051be3687a8c2c71a5039cb9e11279cc03feff5564a/anthunder-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "0dfa9b2a8c51f216a1c7e731dc1e4560", "sha256": "9fd66f925779d9e299e40cb96853e0583876dfbf181591e7a4aa3fa905d3d731"}, "downloads": -1, "filename": "anthunder-0.5.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0dfa9b2a8c51f216a1c7e731dc1e4560", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 60927, "upload_time": "2018-09-18T05:43:32", "upload_time_iso_8601": "2018-09-18T05:43:32.497270Z", "url": "https://files.pythonhosted.org/packages/e1/ec/4e9a5c69e02b2b7e9dedaf3065b1b47b50ed7604844b5f7640adee860597/anthunder-0.5.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69a4da364664cb730cbd2c29304cc51b", "sha256": "5600fc2f315f6d313b6b1503b2b10fdf40e74c6f2b561a813c76f0c6b5baaae8"}, "downloads": -1, "filename": "anthunder-0.5.3.tar.gz", "has_sig": false, "md5_digest": "69a4da364664cb730cbd2c29304cc51b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32116, "upload_time": "2018-09-18T05:45:46", "upload_time_iso_8601": "2018-09-18T05:45:46.466487Z", "url": "https://files.pythonhosted.org/packages/c0/0c/5d03f3d3b3d1416a075160cd6b5d3f1c1b759fa039879adbf886348bc254/anthunder-0.5.3.tar.gz", "yanked": false}], "0.5.3.1": [{"comment_text": "", "digests": {"md5": "1d3a6d2fc77580a7f46b942e8d51d601", "sha256": "239374c2287b07a4d3db79a7b7d3c21b0de0702f2e34fab89ed0fe931e811126"}, "downloads": -1, "filename": "anthunder-0.5.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1d3a6d2fc77580a7f46b942e8d51d601", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 60815, "upload_time": "2018-10-16T06:08:07", "upload_time_iso_8601": "2018-10-16T06:08:07.186562Z", "url": "https://files.pythonhosted.org/packages/08/05/5e3314b565f86a1645cee08ab80f48066abc3c634639e3ceeefbc267971f/anthunder-0.5.3.1-py2.py3-none-any.whl", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "75f4f531ecf609ecf64ad6487a230797", "sha256": "1bfccdeec79f8b16f1c5785d20c6634562fc144d501e7caf6e731dee64376a71"}, "downloads": -1, "filename": "anthunder-0.5.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "75f4f531ecf609ecf64ad6487a230797", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 60894, "upload_time": "2018-11-09T05:38:18", "upload_time_iso_8601": "2018-11-09T05:38:18.909342Z", "url": "https://files.pythonhosted.org/packages/48/cd/403b07f848f184e4c3c9e8b59f7891758d0cdc77d831ce7bcbe76b076ba8/anthunder-0.5.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d254f013513afbec766856a83de2e63", "sha256": "b6f023ae1558c1cbb07c6ece8696fbf534d088ed562480fd5dd8046b452f055a"}, "downloads": -1, "filename": "anthunder-0.5.4.tar.gz", "has_sig": false, "md5_digest": "7d254f013513afbec766856a83de2e63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32902, "upload_time": "2018-11-09T06:19:49", "upload_time_iso_8601": "2018-11-09T06:19:49.337385Z", "url": "https://files.pythonhosted.org/packages/c9/f4/52d55b1aa9e264c2bce9a0d7f9732396fc7167df4762fee515eef68acb5c/anthunder-0.5.4.tar.gz", "yanked": false}], "0.5.4.post1": [{"comment_text": "", "digests": {"md5": "d2fe7d570ebc11cb1ad564b35ae19ef7", "sha256": "5d6af9d02a2b585569935d60a68a89f399be32916e2526f2736df2cdde69780b"}, "downloads": -1, "filename": "anthunder-0.5.4.post1.tar.gz", "has_sig": false, "md5_digest": "d2fe7d570ebc11cb1ad564b35ae19ef7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32971, "upload_time": "2018-12-14T13:05:19", "upload_time_iso_8601": "2018-12-14T13:05:19.965160Z", "url": "https://files.pythonhosted.org/packages/f9/e7/4d34853bcc3600e9aa06a664f5143a0df32ccbfa5310ed3e5c7dc0e02e95/anthunder-0.5.4.post1.tar.gz", "yanked": false}], "0.5.4.post2": [{"comment_text": "", "digests": {"md5": "00ed96c3cf77db1c865098f3489c1f5b", "sha256": "a84da8e24fcbb77953e201d4a12328cf285b625160ef88a0dbfd93028fd0cb84"}, "downloads": -1, "filename": "anthunder-0.5.4.post2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "00ed96c3cf77db1c865098f3489c1f5b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 60988, "upload_time": "2019-02-19T07:45:45", "upload_time_iso_8601": "2019-02-19T07:45:45.744664Z", "url": "https://files.pythonhosted.org/packages/fe/2a/fb1a47b3483cbf38d2250ddd1a78f7a4cb5f89acc54b0b8a0559b9efed52/anthunder-0.5.4.post2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d532c6cb55192c4bcaecda6f102d5d3", "sha256": "176c8222e7eac98889165db0aab9946ede1b100c98d355a5147e592200ff005a"}, "downloads": -1, "filename": "anthunder-0.5.4.post2.tar.gz", "has_sig": false, "md5_digest": "6d532c6cb55192c4bcaecda6f102d5d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32415, "upload_time": "2019-02-19T07:45:47", "upload_time_iso_8601": "2019-02-19T07:45:47.753498Z", "url": "https://files.pythonhosted.org/packages/bc/64/1207731b01e8bc6edaaa2ae5af0f187a868a58faf28b4215ae8e77a84f32/anthunder-0.5.4.post2.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "871415ae79b72624c18cb251e3fb432a", "sha256": "402bec7b5ce57eb661c51398088d042e24b2fc7dd9fb41048f3f75800a7758d7"}, "downloads": -1, "filename": "anthunder-0.5.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "871415ae79b72624c18cb251e3fb432a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 60993, "upload_time": "2019-03-14T11:31:20", "upload_time_iso_8601": "2019-03-14T11:31:20.272483Z", "url": "https://files.pythonhosted.org/packages/3d/b0/1ef2aab2fec1182fcd3a6ecd03cedaeb5467b936864addfacd8658b06760/anthunder-0.5.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "727a2a27f711bbdd79a04405c092a72d", "sha256": "29ee11b69871d5682b4b8e832c8d01daf720d2fbe797e3f334c2642beb03463b"}, "downloads": -1, "filename": "anthunder-0.5.5.tar.gz", "has_sig": false, "md5_digest": "727a2a27f711bbdd79a04405c092a72d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32510, "upload_time": "2019-03-14T11:31:54", "upload_time_iso_8601": "2019-03-14T11:31:54.248258Z", "url": "https://files.pythonhosted.org/packages/df/28/3c684d44f0ead03e3e5bca9b5c7161355d5c06b7500e666ae79ebf6f96f4/anthunder-0.5.5.tar.gz", "yanked": false}], "0.5.6": [{"comment_text": "", "digests": {"md5": "ddd0a94c3bcca6028707a332fbea719c", "sha256": "270026693f94e9b937500d012e0da488153dd038b930683eb4820ef9f632459e"}, "downloads": -1, "filename": "anthunder-0.5.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ddd0a94c3bcca6028707a332fbea719c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 61094, "upload_time": "2019-03-15T09:26:01", "upload_time_iso_8601": "2019-03-15T09:26:01.476466Z", "url": "https://files.pythonhosted.org/packages/cb/7f/f7264946daa339db6931e772415f6ea1ce5a2d0e1b090075c448498d8432/anthunder-0.5.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e9ac1487c5d895ea45e8cd9754a6c79", "sha256": "54179e4887d82abdfa00adecc9f7b910e7960ac7cf0b33e3798be980633407e7"}, "downloads": -1, "filename": "anthunder-0.5.6.tar.gz", "has_sig": false, "md5_digest": "3e9ac1487c5d895ea45e8cd9754a6c79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32647, "upload_time": "2019-03-15T09:35:56", "upload_time_iso_8601": "2019-03-15T09:35:56.646711Z", "url": "https://files.pythonhosted.org/packages/a8/0d/106da64f601f99658a9ce8df0895e3d87b3368a6b34b4a87bad6245ffa74/anthunder-0.5.6.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "38b93ccce9a97cbc76e276bfc155a149", "sha256": "6cd34b498344e941d8a04703d45a2278bec4aa0d5922953855ffc0674add454a"}, "downloads": -1, "filename": "anthunder-0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "38b93ccce9a97cbc76e276bfc155a149", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 61131, "upload_time": "2019-05-31T13:18:42", "upload_time_iso_8601": "2019-05-31T13:18:42.645912Z", "url": "https://files.pythonhosted.org/packages/61/e3/3dc5588e75f5297f533941fd100b8bded0b3f7722ed0a749235657292856/anthunder-0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8cf940016f42da6eaf9060ec49786b31", "sha256": "bddc8c585cf98adfcf2e5826f842717a30607baf87597208bd019346edb4dafd"}, "downloads": -1, "filename": "anthunder-0.6.tar.gz", "has_sig": false, "md5_digest": "8cf940016f42da6eaf9060ec49786b31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32792, "upload_time": "2019-05-31T13:18:44", "upload_time_iso_8601": "2019-05-31T13:18:44.819853Z", "url": "https://files.pythonhosted.org/packages/fb/63/de3034e7885c87968f54c4202618b4e34e94b97d0172c5e4225837aa8768/anthunder-0.6.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "22b1d8c04a92aeacfef787435b33c19c", "sha256": "1a41dab95acc59220735d227995d9109d3d4a95dda8d09df96478c806c49628a"}, "downloads": -1, "filename": "anthunder-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "22b1d8c04a92aeacfef787435b33c19c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 61371, "upload_time": "2019-06-05T10:53:53", "upload_time_iso_8601": "2019-06-05T10:53:53.092013Z", "url": "https://files.pythonhosted.org/packages/b1/97/328128c85f830f66640fa317bda5029231de3ade428e8789d73bcb39a16c/anthunder-0.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d74130792fc9de0da448c34a1c49a5f1", "sha256": "e615050d2789a08256bb076c493a9a2b4434bf2bdcb8acb2d77c8381fd336ae7"}, "downloads": -1, "filename": "anthunder-0.6.1.tar.gz", "has_sig": false, "md5_digest": "d74130792fc9de0da448c34a1c49a5f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33011, "upload_time": "2019-06-05T10:53:55", "upload_time_iso_8601": "2019-06-05T10:53:55.283229Z", "url": "https://files.pythonhosted.org/packages/02/36/bd6fc730aad9ebbff04071b2c8def9922126c6ec63f594e8f42a7a65851c/anthunder-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "05f717282210e153fef6a1cc7c7a6abb", "sha256": "e414ddb6d95593a49685174698d4b96b40303377bf2f4147ea3ae0fca74e01a5"}, "downloads": -1, "filename": "anthunder-0.6.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "05f717282210e153fef6a1cc7c7a6abb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 61820, "upload_time": "2019-06-13T07:58:10", "upload_time_iso_8601": "2019-06-13T07:58:10.819295Z", "url": "https://files.pythonhosted.org/packages/8d/57/625dfc7cfd10d15027fc55535590fdbece96ac375d63698888fd936c5e06/anthunder-0.6.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d759c595cd2824ae98b22ecb1acab00d", "sha256": "383b921eaa0aa92b5bcd27f99d4d808497695b68e8537f7e07a95ca3cd241b9e"}, "downloads": -1, "filename": "anthunder-0.6.2.tar.gz", "has_sig": false, "md5_digest": "d759c595cd2824ae98b22ecb1acab00d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33418, "upload_time": "2019-06-13T07:57:56", "upload_time_iso_8601": "2019-06-13T07:57:56.572604Z", "url": "https://files.pythonhosted.org/packages/62/49/0cdf14037f7b302e2835ff7867f442fe1141c811ecf78730400a2950c4fb/anthunder-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "140a1f01492c6c28616682ed0c9ed4e9", "sha256": "414fa3f60a3e943b96dfd4c636d86a7afd0337e8883eed25a9c67e2acaa2cc61"}, "downloads": -1, "filename": "anthunder-0.6.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "140a1f01492c6c28616682ed0c9ed4e9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 62157, "upload_time": "2019-12-10T04:16:17", "upload_time_iso_8601": "2019-12-10T04:16:17.336593Z", "url": "https://files.pythonhosted.org/packages/fe/22/cafaf1b94d5b736019f2be031aef337c129799a3271d94172fe7c2221e65/anthunder-0.6.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cd41055062c07538f9ab6ff35aa729c", "sha256": "464b14940c50f002ea18bae751edc7ec0cf1878f0437c2942eeeb0f0c8093266"}, "downloads": -1, "filename": "anthunder-0.6.3.tar.gz", "has_sig": false, "md5_digest": "5cd41055062c07538f9ab6ff35aa729c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33693, "upload_time": "2019-12-10T04:16:21", "upload_time_iso_8601": "2019-12-10T04:16:21.129856Z", "url": "https://files.pythonhosted.org/packages/c9/8d/336ec1efc82d01dbcd06b02eb05b33af16e11ce381379223c30191b0600a/anthunder-0.6.3.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "b9da663acbada344f9041cc62d93a55f", "sha256": "20a7cec43c45f165537be149bf4d46499ffcb697339a2efbb99eb30910d77407"}, "downloads": -1, "filename": "anthunder-0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b9da663acbada344f9041cc62d93a55f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 62192, "upload_time": "2020-04-10T09:47:56", "upload_time_iso_8601": "2020-04-10T09:47:56.174707Z", "url": "https://files.pythonhosted.org/packages/e8/14/b2da8f55c7450ada4d7540542c9937d3c681a1e432773ba5af84ca8ca7d2/anthunder-0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "728d7a877c54501c68c60180f148b103", "sha256": "599a4bf4ee03c0d19a224fb2d6cee09ab363a5d694ebe333beccc669c38b787f"}, "downloads": -1, "filename": "anthunder-0.7.tar.gz", "has_sig": false, "md5_digest": "728d7a877c54501c68c60180f148b103", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34675, "upload_time": "2020-04-10T09:47:57", "upload_time_iso_8601": "2020-04-10T09:47:57.731883Z", "url": "https://files.pythonhosted.org/packages/a4/54/bbf74d309ecda17188f51a6d48879eb84de8ec8acdb66f9f27def8d54060/anthunder-0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b9da663acbada344f9041cc62d93a55f", "sha256": "20a7cec43c45f165537be149bf4d46499ffcb697339a2efbb99eb30910d77407"}, "downloads": -1, "filename": "anthunder-0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b9da663acbada344f9041cc62d93a55f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 62192, "upload_time": "2020-04-10T09:47:56", "upload_time_iso_8601": "2020-04-10T09:47:56.174707Z", "url": "https://files.pythonhosted.org/packages/e8/14/b2da8f55c7450ada4d7540542c9937d3c681a1e432773ba5af84ca8ca7d2/anthunder-0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "728d7a877c54501c68c60180f148b103", "sha256": "599a4bf4ee03c0d19a224fb2d6cee09ab363a5d694ebe333beccc669c38b787f"}, "downloads": -1, "filename": "anthunder-0.7.tar.gz", "has_sig": false, "md5_digest": "728d7a877c54501c68c60180f148b103", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34675, "upload_time": "2020-04-10T09:47:57", "upload_time_iso_8601": "2020-04-10T09:47:57.731883Z", "url": "https://files.pythonhosted.org/packages/a4/54/bbf74d309ecda17188f51a6d48879eb84de8ec8acdb66f9f27def8d54060/anthunder-0.7.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:01 2020"}