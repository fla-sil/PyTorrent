{"info": {"author": "Max Linke", "author_email": "max.linke88@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "==============================================\n  PMDA - Parallel Molecular Dynamics Analysis\n==============================================\n\n|build| |cov| |PRwelcome| |zenodo| |conda|\n\nReady to use analysis and buildings blocks to write parallel analysis algorithms\nusing MDAnalysis_ with dask_.\n\n.. warning::\n   This project is **alpha software** and not API stable. It will and\n   should rapidly evolve to test different approaches to implementing\n   parallel analysis in a seamless and intuitive fashion.\n\n\nFor example, run a rmsd analysis on all available cores:\n\n.. code:: python\n\n   import MDAnalysis as mda\n   from pmda import rms\n\n   u = mda.Universe(top, traj)\n   ref = mda.Universe(top, traj)\n\n   rmsd_ana = rms.RMSD(u.atoms, ref.atoms).run(n_jobs=-1)\n\n   print(rmsd_ana.rmsd)\n\n\nBy default PMDA use the multiprocessing scheduler of dask_. This is sufficient\nif you want to run your simulation on a single machine. If your analysis takes\na very long time (>30 min) you can also spread it to several nodes using the\ndistributed_ scheduler. To do this you can pass a ``scheduler`` keyword\nargument to the ``run`` method.\n\nTo write your own parallel algorithms you can subclass the\n``pmda.parallel.ParallelAnalysisBase`` class.\n\n\nLicense and source code\n=======================\n\nPMDA is released under the `GNU General Public License, version 2`_ (see the\nfiles AUTHORS and LICENSE for details).\n\nSource code is available in the public GitHub repository\nhttps://github.com/MDAnalysis/pmda/.\n\n\nInstallation\n============\n\nInstall a release with ``pip``\n------------------------------\n\nThe latest release is available from https://pypi.org/project/pmda/\nand can be installed with pip_\n\n.. code-block:: sh\n\n   pip install --upgrade pmda\n\n\n\nDevelopment version from source\n-------------------------------\n\nTo install the latest development version from source, run\n\n.. code-block:: sh\n\n  git clone git@github.com:MDAnalysis/pmda.git\n  cd pmda\n  python setup.py install\n\n\nGetting help\n============\n\n*Help* is also available through the *MDAnalysis mailing list*\n\n     https://groups.google.com/group/mdnalysis-discussion\n\nPlease report *bugs and feature requests* for PMDA through the `Issue\nTracker`_.\n\n\n\nContributing\n============\n\nPMDA welcomes new contributions. Please drop by the `MDAnalysis developer\nmailing list`_ to discuss and ask questions.\n\nTo contribute code, submit a *pull request* against the master branch in the\n`PMDA repository`_.\n\n\nCitation\n========\n\nIf you use PMDA in published work please cite [Fan2019]_.\n\n.. [Fan2019] Shujie Fan, Max Linke, Ioannis Paraskevakos, Richard J. Gowers,\n\t     Michael Gecht, and Oliver Beckstein. PMDA --- Parallel Molecular Dynamics\n\t     Analysis. In Chris Calloway, David Lippa, Dillon Niederhut, and David Shupe,\n\t     editors, Proceedings of the 18th Python in Science Conference,\n\t     pages 134-142, Austin, TX, 2019.\n\t     doi: `10.25080/Majora-7ddc1dd1-013`_\t     \n\n.. _MDAnalysis: https://www.mdanalysis.org\n.. _dask: https://dask.pydata.org/en/latest/\n.. _distributed: https://distributed.readthedocs.io/\n.. _`Issue tracker`: https://github.com/MDAnalysis/pmda/issues\n.. _`PMDA repository`: https://github.com/MDAnalysis/pmda/\n.. _pip: https://pip.pypa.io/en/stable/\n.. _`GNU General Public License, version 2`:\n   https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html\n.. _`MDAnalysis developer mailing list`:\n   https://groups.google.com/group/mdnalysis-devel\n.. _`10.25080/Majora-7ddc1dd1-013`:\n   https://doi.org/10.25080/Majora-7ddc1dd1-013\n\n.. |build| image:: https://travis-ci.org/MDAnalysis/pmda.svg?branch=master\n    :alt: Build Status\n    :target: https://travis-ci.org/MDAnalysis/pmda\n\n.. |cov| image:: https://codecov.io/gh/MDAnalysis/pmda/branch/master/graph/badge.svg\n   :alt: Coverage\n   :target: https://codecov.io/gh/MDAnalysis/pmda\n\n.. |zenodo| image:: https://zenodo.org/badge/106346721.svg\n   :alt: DOI\n   :target: https://zenodo.org/badge/latestdoi/106346721\n\n.. |conda| image:: https://anaconda.org/conda-forge/pmda/badges/version.svg\n   :alt: conda release\n   :target: https://anaconda.org/conda-forge/pmda\n\n.. |PRwelcome| image:: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n   :alt: PRs welcome\n   :target: http://makeapullrequest.com\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://github.com/MDAnalysis/pmda/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MDAnalysis/pmda/", "keywords": "science parallel", "license": "GPLv2", "maintainer": "", "maintainer_email": "", "name": "pmda", "package_url": "https://pypi.org/project/pmda/", "platform": "", "project_url": "https://pypi.org/project/pmda/", "project_urls": {"Documentation": "https://www.mdanalysis.org/pmda/", "Download": "https://github.com/MDAnalysis/pmda/releases", "Homepage": "https://github.com/MDAnalysis/pmda/", "Issue Tracker": "https://github.com/MDAnalysis/pmda/issues/", "Mailing list": "https://groups.google.com/group/mdnalysis-discussion", "Source": "https://github.com/MDAnalysis/pmda/"}, "release_url": "https://pypi.org/project/pmda/0.3.0/", "requires_dist": ["MDAnalysis (>=0.19.0)", "dask (>=0.18)", "distributed", "six", "joblib", "networkx", "scipy"], "requires_python": "", "summary": "Parallel Molecular Dynamics Analysis tools", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/MDAnalysis/pmda\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/130e04888a6b9d00631811e486cf23a44318cd6f/68747470733a2f2f7472617669732d63692e6f72672f4d44416e616c797369732f706d64612e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/MDAnalysis/pmda\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/039ebb47baae36ce3d3b1622f4257d4eab7af1f2/68747470733a2f2f636f6465636f762e696f2f67682f4d44416e616c797369732f706d64612f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a> <a href=\"http://makeapullrequest.com\" rel=\"nofollow\"><img alt=\"PRs welcome\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8897c5f5e8a5eacb8ddf983bb640b73cc10464c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://zenodo.org/badge/latestdoi/106346721\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cf98c94a47d26bbf1685d948c4dfb99c749ece56/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3130363334363732312e737667\"></a> <a href=\"https://anaconda.org/conda-forge/pmda\" rel=\"nofollow\"><img alt=\"conda release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05473e3813efa5f6db9f02db1b95cd9752b05b31/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f706d64612f6261646765732f76657273696f6e2e737667\"></a></p>\n<p>Ready to use analysis and buildings blocks to write parallel analysis algorithms\nusing <a href=\"https://www.mdanalysis.org\" rel=\"nofollow\">MDAnalysis</a> with <a href=\"https://dask.pydata.org/en/latest/\" rel=\"nofollow\">dask</a>.</p>\n<div>\n<p>Warning</p>\n<p>This project is <strong>alpha software</strong> and not API stable. It will and\nshould rapidly evolve to test different approaches to implementing\nparallel analysis in a seamless and intuitive fashion.</p>\n</div>\n<p>For example, run a rmsd analysis on all available cores:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">MDAnalysis</span> <span class=\"k\">as</span> <span class=\"nn\">mda</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pmda</span> <span class=\"kn\">import</span> <span class=\"n\">rms</span>\n\n<span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">mda</span><span class=\"o\">.</span><span class=\"n\">Universe</span><span class=\"p\">(</span><span class=\"n\">top</span><span class=\"p\">,</span> <span class=\"n\">traj</span><span class=\"p\">)</span>\n<span class=\"n\">ref</span> <span class=\"o\">=</span> <span class=\"n\">mda</span><span class=\"o\">.</span><span class=\"n\">Universe</span><span class=\"p\">(</span><span class=\"n\">top</span><span class=\"p\">,</span> <span class=\"n\">traj</span><span class=\"p\">)</span>\n\n<span class=\"n\">rmsd_ana</span> <span class=\"o\">=</span> <span class=\"n\">rms</span><span class=\"o\">.</span><span class=\"n\">RMSD</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"p\">,</span> <span class=\"n\">ref</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">n_jobs</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">rmsd_ana</span><span class=\"o\">.</span><span class=\"n\">rmsd</span><span class=\"p\">)</span>\n</pre>\n<p>By default PMDA use the multiprocessing scheduler of <a href=\"https://dask.pydata.org/en/latest/\" rel=\"nofollow\">dask</a>. This is sufficient\nif you want to run your simulation on a single machine. If your analysis takes\na very long time (&gt;30 min) you can also spread it to several nodes using the\n<a href=\"https://distributed.readthedocs.io/\" rel=\"nofollow\">distributed</a> scheduler. To do this you can pass a <tt>scheduler</tt> keyword\nargument to the <tt>run</tt> method.</p>\n<p>To write your own parallel algorithms you can subclass the\n<tt>pmda.parallel.ParallelAnalysisBase</tt> class.</p>\n<div id=\"license-and-source-code\">\n<h2>License and source code</h2>\n<p>PMDA is released under the <a href=\"https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html\" rel=\"nofollow\">GNU General Public License, version 2</a> (see the\nfiles AUTHORS and LICENSE for details).</p>\n<p>Source code is available in the public GitHub repository\n<a href=\"https://github.com/MDAnalysis/pmda/\" rel=\"nofollow\">https://github.com/MDAnalysis/pmda/</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"install-a-release-with-pip\">\n<h3>Install a release with <tt>pip</tt></h3>\n<p>The latest release is available from <a href=\"https://pypi.org/project/pmda/\" rel=\"nofollow\">https://pypi.org/project/pmda/</a>\nand can be installed with <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a></p>\n<pre>pip install --upgrade pmda\n</pre>\n</div>\n<div id=\"development-version-from-source\">\n<h3>Development version from source</h3>\n<p>To install the latest development version from source, run</p>\n<pre>git clone git@github.com:MDAnalysis/pmda.git\n<span class=\"nb\">cd</span> pmda\npython setup.py install\n</pre>\n</div>\n</div>\n<div id=\"getting-help\">\n<h2>Getting help</h2>\n<p><em>Help</em> is also available through the <em>MDAnalysis mailing list</em></p>\n<blockquote>\n<a href=\"https://groups.google.com/group/mdnalysis-discussion\" rel=\"nofollow\">https://groups.google.com/group/mdnalysis-discussion</a></blockquote>\n<p>Please report <em>bugs and feature requests</em> for PMDA through the <a href=\"https://github.com/MDAnalysis/pmda/issues\" rel=\"nofollow\">Issue\nTracker</a>.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>PMDA welcomes new contributions. Please drop by the <a href=\"https://groups.google.com/group/mdnalysis-devel\" rel=\"nofollow\">MDAnalysis developer\nmailing list</a> to discuss and ask questions.</p>\n<p>To contribute code, submit a <em>pull request</em> against the master branch in the\n<a href=\"https://github.com/MDAnalysis/pmda/\" rel=\"nofollow\">PMDA repository</a>.</p>\n</div>\n<div id=\"citation\">\n<h2>Citation</h2>\n<p>If you use PMDA in published work please cite <a href=\"#fan2019\" id=\"id1\" rel=\"nofollow\">[Fan2019]</a>.</p>\n<table id=\"fan2019\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[Fan2019]</a></td><td>Shujie Fan, Max Linke, Ioannis Paraskevakos, Richard J. Gowers,\nMichael Gecht, and Oliver Beckstein. PMDA \u2014 Parallel Molecular Dynamics\nAnalysis. In Chris Calloway, David Lippa, Dillon Niederhut, and David Shupe,\neditors, Proceedings of the 18th Python in Science Conference,\npages 134-142, Austin, TX, 2019.\ndoi: <a href=\"https://doi.org/10.25080/Majora-7ddc1dd1-013\" rel=\"nofollow\">10.25080/Majora-7ddc1dd1-013</a></td></tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 5973151, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "faf5e1efe3192b3b3444a45e691cf8c5", "sha256": "65c42fe650906c9cc0eb8675e727e9f675b7b9d39be754e6e9c79f116eb29c75"}, "downloads": -1, "filename": "pmda-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "faf5e1efe3192b3b3444a45e691cf8c5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2945, "upload_time": "2018-05-11T18:26:37", "upload_time_iso_8601": "2018-05-11T18:26:37.775854Z", "url": "https://files.pythonhosted.org/packages/81/ef/379ea5203c449f5edb022685b0c539f4dcdef51b079dff9f4f6cff121590/pmda-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1fb88a8d3aeadbcd62fcd00ddb750a2d", "sha256": "5e259e072b15aa8fd9935030309054a7ca5eb837e13012243b7744ad0eb18962"}, "downloads": -1, "filename": "pmda-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1fb88a8d3aeadbcd62fcd00ddb750a2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19775, "upload_time": "2018-05-11T18:26:39", "upload_time_iso_8601": "2018-05-11T18:26:39.641586Z", "url": "https://files.pythonhosted.org/packages/e5/05/120a9fa3c994077752ae057aa35181abea6cba7a2714e9fe4e2a9b325a34/pmda-0.1.0.tar.gz", "yanked": false}], "0.1.0rc1": [{"comment_text": "", "digests": {"md5": "6efb736ba6b74be623b81eb527cd30b9", "sha256": "b23c0631341832dd05d033db5abe055a32d60dd857342d14f6f90c8879270b67"}, "downloads": -1, "filename": "pmda-0.1.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "6efb736ba6b74be623b81eb527cd30b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2180, "upload_time": "2018-05-10T22:49:41", "upload_time_iso_8601": "2018-05-10T22:49:41.424559Z", "url": "https://files.pythonhosted.org/packages/66/e6/f95a6d68ee146a678167c072415ac48ab3275a7bd20d7d8eb383cada309d/pmda-0.1.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c571f9aef9301baa91a8ccd62156db43", "sha256": "15d62f107834e1ee9164a776eb1e0f62a71a05b4351c3a6af6cd4815da1a4f76"}, "downloads": -1, "filename": "pmda-0.1.0rc1.tar.gz", "has_sig": false, "md5_digest": "c571f9aef9301baa91a8ccd62156db43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18668, "upload_time": "2018-05-10T22:49:42", "upload_time_iso_8601": "2018-05-10T22:49:42.882056Z", "url": "https://files.pythonhosted.org/packages/5c/77/0fa810cd3d336d865082e1ac6edd626aac5bb786a36f77da5a4c5ad8cc0e/pmda-0.1.0rc1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "918a2deebff411fd0570f8571ade2ae6", "sha256": "c240eefbbff0ba35c5fd04e0ba4e2528bee52c8942735de6986fad035bcdc3b1"}, "downloads": -1, "filename": "pmda-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "918a2deebff411fd0570f8571ade2ae6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15659, "upload_time": "2018-06-07T19:54:59", "upload_time_iso_8601": "2018-06-07T19:54:59.029225Z", "url": "https://files.pythonhosted.org/packages/f2/aa/c519219385e7d2f4ed1fe42ceebd8926729e8cc38de6f189b584139dd776/pmda-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce59a8c35dc1256b13dfa518f5c0271e", "sha256": "90ffbfa4e4ac6617e7811cd57ada57687daa654fbb176b835aec0f8b3d38f85c"}, "downloads": -1, "filename": "pmda-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ce59a8c35dc1256b13dfa518f5c0271e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30197, "upload_time": "2018-06-07T19:55:00", "upload_time_iso_8601": "2018-06-07T19:55:00.610011Z", "url": "https://files.pythonhosted.org/packages/eb/fa/5b2e085c9e9d3aab283b9cc5e9b140d7445ec8322b92ba66d574ab3cf215/pmda-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "26a9e9f6267ecbb3e485dfba4d486a26", "sha256": "0d30d1023cf7750209ba49007d8a7c791b0917048c97d7efd9536a56d243f355"}, "downloads": -1, "filename": "pmda-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "26a9e9f6267ecbb3e485dfba4d486a26", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26381, "upload_time": "2018-11-02T08:50:40", "upload_time_iso_8601": "2018-11-02T08:50:40.065232Z", "url": "https://files.pythonhosted.org/packages/39/1b/46fb77a01d497ec029c857935fa876daec2ccec74eb86f517eca095ce2e7/pmda-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82d900ac05a5ae0462159cb791a4d9af", "sha256": "b7996860bd5add62d0bcc28361cf073517d905f31f442ef06fa7961ee92c5fbe"}, "downloads": -1, "filename": "pmda-0.2.0.tar.gz", "has_sig": false, "md5_digest": "82d900ac05a5ae0462159cb791a4d9af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37980, "upload_time": "2018-11-02T08:50:41", "upload_time_iso_8601": "2018-11-02T08:50:41.524917Z", "url": "https://files.pythonhosted.org/packages/60/96/2f982e746559d7f10e020a932aad82436eddbe96933564b96a7eda552cb5/pmda-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "d5a7f6a554884399e878c453771c2af3", "sha256": "c524625f99b2915d54ed54f1d155c6fe7fb7ac0d3da0ad593d63161d1e29510e"}, "downloads": -1, "filename": "pmda-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d5a7f6a554884399e878c453771c2af3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 34094, "upload_time": "2019-05-23T22:19:57", "upload_time_iso_8601": "2019-05-23T22:19:57.563020Z", "url": "https://files.pythonhosted.org/packages/d8/fc/edd4028bb646bfd88ad21eee19cbfd3236345008dd103ff26e166dc0bb42/pmda-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d93143d9241507e1feee0ba350bd06f5", "sha256": "09230b15c2efdf10ca7402d28e387e4cde5e1c2fa471dbd537b47c26944359fb"}, "downloads": -1, "filename": "pmda-0.2.1.tar.gz", "has_sig": false, "md5_digest": "d93143d9241507e1feee0ba350bd06f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38254, "upload_time": "2019-05-23T22:19:59", "upload_time_iso_8601": "2019-05-23T22:19:59.300062Z", "url": "https://files.pythonhosted.org/packages/25/45/8a9ef188ac5dc8fe611495ef0083673fbd05eb7d8828b19d3566d6715a91/pmda-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "361a1e155676bbf4653bbc3327cfcd76", "sha256": "29dd2254284f3ccfcfb05bf91f29430163bc9115bbffc463d8bca5586c25907d"}, "downloads": -1, "filename": "pmda-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "361a1e155676bbf4653bbc3327cfcd76", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 47666, "upload_time": "2019-10-14T19:48:50", "upload_time_iso_8601": "2019-10-14T19:48:50.026123Z", "url": "https://files.pythonhosted.org/packages/03/01/bd075d3285be8947c6df38b547bcbc8f6929de14088b2553bf83694b0b19/pmda-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2595e7279ec690265763739dbf8f81e", "sha256": "a5c33f43184aa26d0a46d15a6c8be3f08aa0274c5ce8b478eb372169846f972c"}, "downloads": -1, "filename": "pmda-0.3.0.tar.gz", "has_sig": false, "md5_digest": "f2595e7279ec690265763739dbf8f81e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48156, "upload_time": "2019-10-14T19:48:51", "upload_time_iso_8601": "2019-10-14T19:48:51.594787Z", "url": "https://files.pythonhosted.org/packages/42/9f/ccae15044472677b413fa35514e53914af0a8d6c256710bc98a198f2435b/pmda-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "361a1e155676bbf4653bbc3327cfcd76", "sha256": "29dd2254284f3ccfcfb05bf91f29430163bc9115bbffc463d8bca5586c25907d"}, "downloads": -1, "filename": "pmda-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "361a1e155676bbf4653bbc3327cfcd76", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 47666, "upload_time": "2019-10-14T19:48:50", "upload_time_iso_8601": "2019-10-14T19:48:50.026123Z", "url": "https://files.pythonhosted.org/packages/03/01/bd075d3285be8947c6df38b547bcbc8f6929de14088b2553bf83694b0b19/pmda-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2595e7279ec690265763739dbf8f81e", "sha256": "a5c33f43184aa26d0a46d15a6c8be3f08aa0274c5ce8b478eb372169846f972c"}, "downloads": -1, "filename": "pmda-0.3.0.tar.gz", "has_sig": false, "md5_digest": "f2595e7279ec690265763739dbf8f81e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48156, "upload_time": "2019-10-14T19:48:51", "upload_time_iso_8601": "2019-10-14T19:48:51.594787Z", "url": "https://files.pythonhosted.org/packages/42/9f/ccae15044472677b413fa35514e53914af0a8d6c256710bc98a198f2435b/pmda-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:52:19 2020"}