{"info": {"author": "Christian Stigen Larsen", "author_email": "csl@csl.name", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "vimp\n====\n\nVimp is a simple plugin manager for vim that downloads and installs\nplugins and dependencies, updating helptags along the way. In short, by\ntyping\n\n::\n\n    $ vimp get undotree@ctrl-u\n\nvimp will download undotree, install it in vim and map it to CTRL-u\n(``<C-u>``). If you decide you don't want undotree anymore (or just want\nto disable the keyboard mapping), type\n\n::\n\n    $ vimp disable undotree@ctrl-u\n\nIf you specify several plugins, it will download all of them, including\ndependencies, them all, *in parallel*::\n\n    $ vimp get molokai powerline ctrlp signify nerdtree@ctrl-d \\\n      undotree@ctrl-u snipmate\n\nTo see what you have installed, simply type ``vimp ls``.\n\nInstalling\n----------\n\nThe latest stable release is on PyPI::\n\n    $ pip install vimp\n\nYou can also clone the repository and install that::\n\n    $ git clone https://github.com/cslarsen/vimp.git\n    $ cd vimp\n    $ python setup.py install\n\nWarning\n-------\n\nWhile vimp currently works fine, it should be considered pre-release\nalpha grade quality. Meaning that I actively experiment with it, and may\nbreak stuff without notice at the current phase.\n\nAlso, you may want to backup your entire ``~/.vim`` directory and\n``~/.vimrc`` file before experimenting. Using vimp should be quite safe\nat this time, but just in case you really don't want to mess with your\nsetup, please backup.\n\nFinally, vimp does not recognize your existing plugins. It *does* work\nfine side-by-side with existing plugins, but I haven't done much testing\nin this situation (a future version of vimp may be able to annex\nexisting plugins, we'll see).\n\nMore examples\n-------------\n\nAnyway, you can also specify several plugins to install. On a fresh or\nexisting vim installation, you can install a lot of stuff by typing:\n\n::\n\n    $ vimp get molokai powerline ctrlp signify nerdtree@ctrl-d \\\n      undotree@ctrl-u snipmate\n\nThis will download all the plugins above and their dependencies, and\nwill do so *in parallel*. It will also map NerdTree to CTRL-d and UndoTree to\nCTRL-u.\n\nIf you do this on a fresh vim install, it will install Pathogen also (note: it\ndoes *not* enable vim plugins for you, but this is something it probably should\nin a future version).\n\nIn the above example, it will also change the current color scheme to\nMolokai. To switch from Molokai to the grb256 color scheme, just type:\n\n::\n\n    $ vimp switch molokai grb256\n\nTo disable a package, e.g. NERDTree, type\n\n::\n\n    $ vimp disable nerdtree@ctrl-d\n\nand to actually remove it from disk, use the ``remove`` command. To list\ninstalled packages, type ``vimp ls`` and to list all available type\n``vimp ls -a``.\n\nVimp is in early stages of development, so expect bugs and lots of\nchanges. I made it for myself, so I don't care about any of the other\nmanagers.\n\nBy the way, it does depend on Pathogen and will install it by default.\nThis is strictly not necessary, but I like Pathogen, so that's that for\nthe moment.\n\nIf you like vimp, let me know. The way to put forward suggestions is to\nprovide patches. If something is broken, let me know.\n\nHow it works\n------------\n\nIt downloads vim packages to ``~/.vimp/cache/``, extracts files to a\nstaging area ``~/.vimp/installed`` and creates symlinks pointing to it\nfrom ``~/.vim/bundle``.\n\nTo enable stuff like Pathogen and colorschemes, it adds vimrc entries in\n``.vimp/vimrc``. This is read by adding a few lines to your\n``~/.vimrc``. (I know, touching ``.vimrc`` is not cool, but I'll change\nthat later on).\n\nFlags to vimp\n-------------\n\n-  ``vimp -h`` or ``vimp --help`` to print help.\n-  ``vimp -V`` or ``vimp --version`` to print version.\n-  ``vimp -v <command> [argument(s)]`` to print all actions performed,\n   e.g. ``vimp -v install fuzzyfind``.\n\nCommands\n--------\n\n-  ``vimp help`` to print help.\n-  ``vimp help list`` to print help on the command ``list``.\n-  ``vimp install <package(s)>`` to install packages.\n-  ``vimp list`` to list installed packages\n-  ``vimp list -a`` to list all available packages\\`\n-  ``vimp list <package(s)>`` to list package details.\n-  ``vimp disable <package(s)>`` to disable packages, but leave on disk.\n-  ``vimp remove <package(s)>`` to disable and delete packages.\n-  ``vimp version`` to print version.\n\nAliases\n-------\n\nI haven't decided on the exact command names yet, so I have several\naliases so I can see which ones I like:\n\n-  ``vimp ls`` is an alias for ``vimp list``\n-  ``vimp get`` is an alias for ``vimp install``\n-  ``vimp add`` is another alias for ``vimp install``\n-  ``vimp find`` is an alias for ``vimp search``\n-  ``vimp rm`` is an alias for ``vimp remove``\n-  ``vimp uninstall`` is an alias for ``vimp disable``\n\nUnimplemented commands\n----------------------\n\n-  ``vimp update`` to update the list of available packages.\n-  ``vimp upgrade`` to actually upgrade packages with newer versions.\n\nRequirements\n------------\n\nYou need Python and vim, of course. It relies on Pathogen, but will\ninstall this by default if it can't find it.\n\nAdding new plugins / installations scripts to vimp\n--------------------------------------------------\n\nYou can add new scripts to vimp by modifying ``scripts.py``. I won't\nexplain in detail how to now, but just look at what's there already.\n\nIf you *do* add new scripts that work, please send a patch to me.\n\nTo do\n-----\n\nThere is a lot of stuff missing, and many corner cases that I don't\nhandle. However, I don't consider it dangerous to use vimp. In fact, I\nfeel it's rather quite safe.\n\nAnyway, how much I will work on vimp depends on how many people can help\nme with patches. Currently, it works pretty well for me.\n\nMost glaringly, I don't have support for updating whatsoever.\n\nList of various todos:\n\n-  Add support for updating, upgrading\n-  Do not leave behind dependencies when uninstalling\n-  etc.\n\nBugs\n----\n\nThere are many bugs. Please help me fix them!\n\nIn particular, globbing for extracting files doesn't work well.\n\nLicense\n-------\n\nCopyright (C) 2014 Christian Stigen Larsen\n\nDistributed under the LGPL v2.1, LGPL 3.0, GPL 2.0 or GPL 3.0.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/cslarsen/vimp/tarball/0.1.4", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cslarsen/vimp", "keywords": "vim", "license": "https://www.gnu.org/licenses/lgpl-2.1.html", "maintainer": "", "maintainer_email": "", "name": "vimp", "package_url": "https://pypi.org/project/vimp/", "platform": "unix", "project_url": "https://pypi.org/project/vimp/", "project_urls": {"Download": "https://github.com/cslarsen/vimp/tarball/0.1.4", "Homepage": "https://github.com/cslarsen/vimp"}, "release_url": "https://pypi.org/project/vimp/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "Command line package manager for the vim editor.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Vimp is a simple plugin manager for vim that downloads and installs\nplugins and dependencies, updating helptags along the way. In short, by\ntyping</p>\n<pre>$ vimp get undotree@ctrl-u\n</pre>\n<p>vimp will download undotree, install it in vim and map it to CTRL-u\n(<tt><span class=\"pre\">&lt;C-u&gt;</span></tt>). If you decide you don\u2019t want undotree anymore (or just want\nto disable the keyboard mapping), type</p>\n<pre>$ vimp disable undotree@ctrl-u\n</pre>\n<p>If you specify several plugins, it will download all of them, including\ndependencies, them all, <em>in parallel</em>:</p>\n<pre>$ vimp get molokai powerline ctrlp signify nerdtree@ctrl-d \\\n  undotree@ctrl-u snipmate\n</pre>\n<p>To see what you have installed, simply type <tt>vimp ls</tt>.</p>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>The latest stable release is on PyPI:</p>\n<pre>$ pip install vimp\n</pre>\n<p>You can also clone the repository and install that:</p>\n<pre>$ git clone https://github.com/cslarsen/vimp.git\n$ cd vimp\n$ python setup.py install\n</pre>\n</div>\n<div id=\"warning\">\n<h2>Warning</h2>\n<p>While vimp currently works fine, it should be considered pre-release\nalpha grade quality. Meaning that I actively experiment with it, and may\nbreak stuff without notice at the current phase.</p>\n<p>Also, you may want to backup your entire <tt><span class=\"pre\">~/.vim</span></tt> directory and\n<tt><span class=\"pre\">~/.vimrc</span></tt> file before experimenting. Using vimp should be quite safe\nat this time, but just in case you really don\u2019t want to mess with your\nsetup, please backup.</p>\n<p>Finally, vimp does not recognize your existing plugins. It <em>does</em> work\nfine side-by-side with existing plugins, but I haven\u2019t done much testing\nin this situation (a future version of vimp may be able to annex\nexisting plugins, we\u2019ll see).</p>\n</div>\n<div id=\"more-examples\">\n<h2>More examples</h2>\n<p>Anyway, you can also specify several plugins to install. On a fresh or\nexisting vim installation, you can install a lot of stuff by typing:</p>\n<pre>$ vimp get molokai powerline ctrlp signify nerdtree@ctrl-d \\\n  undotree@ctrl-u snipmate\n</pre>\n<p>This will download all the plugins above and their dependencies, and\nwill do so <em>in parallel</em>. It will also map NerdTree to CTRL-d and UndoTree to\nCTRL-u.</p>\n<p>If you do this on a fresh vim install, it will install Pathogen also (note: it\ndoes <em>not</em> enable vim plugins for you, but this is something it probably should\nin a future version).</p>\n<p>In the above example, it will also change the current color scheme to\nMolokai. To switch from Molokai to the grb256 color scheme, just type:</p>\n<pre>$ vimp switch molokai grb256\n</pre>\n<p>To disable a package, e.g. NERDTree, type</p>\n<pre>$ vimp disable nerdtree@ctrl-d\n</pre>\n<p>and to actually remove it from disk, use the <tt>remove</tt> command. To list\ninstalled packages, type <tt>vimp ls</tt> and to list all available type\n<tt>vimp ls <span class=\"pre\">-a</span></tt>.</p>\n<p>Vimp is in early stages of development, so expect bugs and lots of\nchanges. I made it for myself, so I don\u2019t care about any of the other\nmanagers.</p>\n<p>By the way, it does depend on Pathogen and will install it by default.\nThis is strictly not necessary, but I like Pathogen, so that\u2019s that for\nthe moment.</p>\n<p>If you like vimp, let me know. The way to put forward suggestions is to\nprovide patches. If something is broken, let me know.</p>\n</div>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>It downloads vim packages to <tt><span class=\"pre\">~/.vimp/cache/</span></tt>, extracts files to a\nstaging area <tt><span class=\"pre\">~/.vimp/installed</span></tt> and creates symlinks pointing to it\nfrom <tt><span class=\"pre\">~/.vim/bundle</span></tt>.</p>\n<p>To enable stuff like Pathogen and colorschemes, it adds vimrc entries in\n<tt>.vimp/vimrc</tt>. This is read by adding a few lines to your\n<tt><span class=\"pre\">~/.vimrc</span></tt>. (I know, touching <tt>.vimrc</tt> is not cool, but I\u2019ll change\nthat later on).</p>\n</div>\n<div id=\"flags-to-vimp\">\n<h2>Flags to vimp</h2>\n<ul>\n<li><tt>vimp <span class=\"pre\">-h</span></tt> or <tt>vimp <span class=\"pre\">--help</span></tt> to print help.</li>\n<li><tt>vimp <span class=\"pre\">-V</span></tt> or <tt>vimp <span class=\"pre\">--version</span></tt> to print version.</li>\n<li><tt>vimp <span class=\"pre\">-v</span> &lt;command&gt; [argument(s)]</tt> to print all actions performed,\ne.g. <tt>vimp <span class=\"pre\">-v</span> install fuzzyfind</tt>.</li>\n</ul>\n</div>\n<div id=\"commands\">\n<h2>Commands</h2>\n<ul>\n<li><tt>vimp help</tt> to print help.</li>\n<li><tt>vimp help list</tt> to print help on the command <tt>list</tt>.</li>\n<li><tt>vimp install &lt;package(s)&gt;</tt> to install packages.</li>\n<li><tt>vimp list</tt> to list installed packages</li>\n<li><tt>vimp list <span class=\"pre\">-a</span></tt> to list all available packages`</li>\n<li><tt>vimp list &lt;package(s)&gt;</tt> to list package details.</li>\n<li><tt>vimp disable &lt;package(s)&gt;</tt> to disable packages, but leave on disk.</li>\n<li><tt>vimp remove &lt;package(s)&gt;</tt> to disable and delete packages.</li>\n<li><tt>vimp version</tt> to print version.</li>\n</ul>\n</div>\n<div id=\"aliases\">\n<h2>Aliases</h2>\n<p>I haven\u2019t decided on the exact command names yet, so I have several\naliases so I can see which ones I like:</p>\n<ul>\n<li><tt>vimp ls</tt> is an alias for <tt>vimp list</tt></li>\n<li><tt>vimp get</tt> is an alias for <tt>vimp install</tt></li>\n<li><tt>vimp add</tt> is another alias for <tt>vimp install</tt></li>\n<li><tt>vimp find</tt> is an alias for <tt>vimp search</tt></li>\n<li><tt>vimp rm</tt> is an alias for <tt>vimp remove</tt></li>\n<li><tt>vimp uninstall</tt> is an alias for <tt>vimp disable</tt></li>\n</ul>\n</div>\n<div id=\"unimplemented-commands\">\n<h2>Unimplemented commands</h2>\n<ul>\n<li><tt>vimp update</tt> to update the list of available packages.</li>\n<li><tt>vimp upgrade</tt> to actually upgrade packages with newer versions.</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>You need Python and vim, of course. It relies on Pathogen, but will\ninstall this by default if it can\u2019t find it.</p>\n</div>\n<div id=\"adding-new-plugins-installations-scripts-to-vimp\">\n<h2>Adding new plugins / installations scripts to vimp</h2>\n<p>You can add new scripts to vimp by modifying <tt>scripts.py</tt>. I won\u2019t\nexplain in detail how to now, but just look at what\u2019s there already.</p>\n<p>If you <em>do</em> add new scripts that work, please send a patch to me.</p>\n</div>\n<div id=\"to-do\">\n<h2>To do</h2>\n<p>There is a lot of stuff missing, and many corner cases that I don\u2019t\nhandle. However, I don\u2019t consider it dangerous to use vimp. In fact, I\nfeel it\u2019s rather quite safe.</p>\n<p>Anyway, how much I will work on vimp depends on how many people can help\nme with patches. Currently, it works pretty well for me.</p>\n<p>Most glaringly, I don\u2019t have support for updating whatsoever.</p>\n<p>List of various todos:</p>\n<ul>\n<li>Add support for updating, upgrading</li>\n<li>Do not leave behind dependencies when uninstalling</li>\n<li>etc.</li>\n</ul>\n</div>\n<div id=\"bugs\">\n<h2>Bugs</h2>\n<p>There are many bugs. Please help me fix them!</p>\n<p>In particular, globbing for extracting files doesn\u2019t work well.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (C) 2014 Christian Stigen Larsen</p>\n<p>Distributed under the LGPL v2.1, LGPL 3.0, GPL 2.0 or GPL 3.0.</p>\n</div>\n\n          </div>"}, "last_serial": 4285983, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "21b5624dcc4e1034c4a3a5d33affbd18", "sha256": "b02499c8854f21a62531b94547429e29149e091da026a8b50f63f4eca484f42a"}, "downloads": -1, "filename": "vimp-0.1.0.tar.gz", "has_sig": true, "md5_digest": "21b5624dcc4e1034c4a3a5d33affbd18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32083, "upload_time": "2015-03-06T18:23:15", "upload_time_iso_8601": "2015-03-06T18:23:15.495806Z", "url": "https://files.pythonhosted.org/packages/6c/5e/139b5e51631079716dcedeb9aa337ea749ea37341ca3bef18ddbfee2b710/vimp-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "008248aedc8a7154453fffd3ada5bb4d", "sha256": "e7a3846cefb831b964f880c0446c28f71f14786b3562c1a3dedd30a5c2997f22"}, "downloads": -1, "filename": "vimp-0.1.1.tar.gz", "has_sig": true, "md5_digest": "008248aedc8a7154453fffd3ada5bb4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32015, "upload_time": "2015-03-06T18:35:37", "upload_time_iso_8601": "2015-03-06T18:35:37.604543Z", "url": "https://files.pythonhosted.org/packages/0e/ef/275e8df3033dc8a93140cf3541c1befaaf1b842a4143768c180f762df2fe/vimp-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "db297e7d5bdfb0e9f26c5e5a0c5cf783", "sha256": "ce702a4c4c20247c93d90b599ecb8640dd0d27c9abf6a06b19749e593c335cdf"}, "downloads": -1, "filename": "vimp-0.1.2-py2-none-any.whl", "has_sig": true, "md5_digest": "db297e7d5bdfb0e9f26c5e5a0c5cf783", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25416, "upload_time": "2015-03-07T12:57:09", "upload_time_iso_8601": "2015-03-07T12:57:09.650417Z", "url": "https://files.pythonhosted.org/packages/74/1b/69b93d6204e1ac5353ebcde90d1e07947e3f226617cec5c9eff80efd6f23/vimp-0.1.2-py2-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e8fe2f82c895ef97cb23770bc2e2972b", "sha256": "6fdfc1b7e2a92f5582d68bfb143bab993b334f2be825aa50a84f1611fb20e830"}, "downloads": -1, "filename": "vimp-0.1.3-py2-none-any.whl", "has_sig": true, "md5_digest": "e8fe2f82c895ef97cb23770bc2e2972b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25615, "upload_time": "2018-09-01T19:45:54", "upload_time_iso_8601": "2018-09-01T19:45:54.933188Z", "url": "https://files.pythonhosted.org/packages/19/5b/f0aa00b6d6dba3aedad28a24de2a6336518645ed638f2b1c1600fdb2d1e8/vimp-0.1.3-py2-none-any.whl", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "c361c9ff81f371dcdb6f0cb5fc49adc9", "sha256": "09312ad156baa9cf362474f1546e7a50041fa062f5d870e1d4efe1aa218aa29e"}, "downloads": -1, "filename": "vimp-0.1.4-py2-none-any.whl", "has_sig": true, "md5_digest": "c361c9ff81f371dcdb6f0cb5fc49adc9", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25889, "upload_time": "2018-09-18T21:20:06", "upload_time_iso_8601": "2018-09-18T21:20:06.533816Z", "url": "https://files.pythonhosted.org/packages/7e/95/425f274359856801216d4f669206e0e7527da9581b82a82f02bb30c45010/vimp-0.1.4-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c361c9ff81f371dcdb6f0cb5fc49adc9", "sha256": "09312ad156baa9cf362474f1546e7a50041fa062f5d870e1d4efe1aa218aa29e"}, "downloads": -1, "filename": "vimp-0.1.4-py2-none-any.whl", "has_sig": true, "md5_digest": "c361c9ff81f371dcdb6f0cb5fc49adc9", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25889, "upload_time": "2018-09-18T21:20:06", "upload_time_iso_8601": "2018-09-18T21:20:06.533816Z", "url": "https://files.pythonhosted.org/packages/7e/95/425f274359856801216d4f669206e0e7527da9581b82a82f02bb30c45010/vimp-0.1.4-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:36:00 2020"}