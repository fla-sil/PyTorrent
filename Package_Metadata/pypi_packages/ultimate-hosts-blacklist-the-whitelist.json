{"info": {"author": "funilrys", "author_email": "contact@funilrys.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Internet"], "description": "The Ultimate Hosts Blacklist whitelist script\n=============================================\n\nThis is the branch which contain the script which we use to whitelist domains or IP into our infrastructure.\n\nInstallation\n------------\n\n::\n\n    $ pip3 install --user ultimate-hosts-blacklist-the-whitelist\n\n\n\nComplementary whitelist\n-----------------------\n\nOur script allow us to link one or more file(s) to the system which will be used in complementary of our whitelist list.\n\nSpecial markers\n---------------\n\nIf you already used a whitelist list you already know that we generaly only list all domains we want to whitelist one by one.\n\nIt's also possible to do that with our whitelisting system but we can do more.\n\n:code:`ALL`\n^^^^^^^^^^^\n\nThe :code:`ALL` marker will tell the system to escape and regex check againt what follows.\n\nINVALID characters\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n* :code:`$`\n\n    * As we automatically append :code:`$` to the end, you should not use this character.\n\n* :code:`\\\\`\n\n    * As we automatically escape the given expression, you should not explicitly escape your regular expression when declaring an :code:`ALL` marker.\n\n:code:`REG`\n\"\"\"\"\"\"\"\"\"\"\"\n\nThe :code:`REG` marker will tell the system to explicitly check for the given regex which follows the marker.\n\n:code:`RZD`\n\"\"\"\"\"\"\"\"\"\"\"\n\nThe :code:`RZD` marker will tell the system to explicitly check for the given string plus all possible TDL.\n\n\nUnderstanding what we actually do\n---------------------------------\n\nIf we have the following secondary whitelist list:\n\n::\n\n    facebook.com\n    ALL .gov\n    REG face\n    RZD ebay\n\nour system will actually :\n\n* Remove every line which match :code:`facebook.com` and :code:`www.facebook.com`\n* Remove everyline which match :code:`ebay.*`\n* In complementary convert all lines with :code:`ALL ` or :code:`REG` to the right format.\n* Check every line again the regular expression.\n* Print or save on screen the results.\n\nThe genereated regular expression will be in this example:\n\n::\n\n    \\.gov$|face|ebay(.*)\n\n\n**NOTE: The ebay group is much longer as we construct the list of TDL based on the Root Zone Database of the IANA and the Public Suffix List project.**\n\nWhich actually means that we whitelist:\n\n* all elements/lines which ends with `.gov`\n* all elements/lines which contain the word `face`\n\nUsage of the script\n-------------------\n\n::\n\n    usage: uhb_whitelist [-h] [-f FILE] [-w WHITELIST [WHITELIST ...]] [-wc]\n                     [-o OUTPUT] [-v]\n\n    The tool to clean a list or a hosts file with the Ultimate Hosts Blacklist\n    whitelist list or your own.\n\n    optional arguments:\n        -h, --help            show this help message and exit\n        -f FILE, --file FILE  Read the given file and remove all element to\n                                whitelist.\n        -w WHITELIST [WHITELIST ...], --whitelist WHITELIST [WHITELIST ...]\n                                Read the given file and append its data to the our\n                                whitelist list.\n        -wc, --without-core   Disable the usage of the Ultimate Hosts Blacklist\n                                whitelist list.\n        -o OUTPUT, --output OUTPUT\n                                Save the result to the given filename or path.\n        -v, --version         Show the version end exist.\n\n    Crafted with \u2665 by Nissar Chababy (Funilrys)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Ultimate-Hosts-Blacklist/whitelist/tree/script", "keywords": "Python,hosts,hosts file,whitelist", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ultimate-hosts-blacklist-the-whitelist", "package_url": "https://pypi.org/project/ultimate-hosts-blacklist-the-whitelist/", "platform": "any", "project_url": "https://pypi.org/project/ultimate-hosts-blacklist-the-whitelist/", "project_urls": {"Homepage": "https://github.com/Ultimate-Hosts-Blacklist/whitelist/tree/script"}, "release_url": "https://pypi.org/project/ultimate-hosts-blacklist-the-whitelist/1.0.2/", "requires_dist": ["requests (>=2.21.0)", "domain2idna (>=1.6.1)", "colorama (>=0.4.1)"], "requires_python": "", "summary": "The whitelisting tool of the Ultimate Hosts Blacklist project.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is the branch which contain the script which we use to whitelist domains or IP into our infrastructure.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip3 install --user ultimate-hosts-blacklist-the-whitelist\n</pre>\n</div>\n<div id=\"complementary-whitelist\">\n<h2>Complementary whitelist</h2>\n<p>Our script allow us to link one or more file(s) to the system which will be used in complementary of our whitelist list.</p>\n</div>\n<div id=\"special-markers\">\n<h2>Special markers</h2>\n<p>If you already used a whitelist list you already know that we generaly only list all domains we want to whitelist one by one.</p>\n<p>It\u2019s also possible to do that with our whitelisting system but we can do more.</p>\n<div id=\"all\">\n<h3><code>ALL</code></h3>\n<p>The <code>ALL</code> marker will tell the system to escape and regex check againt what follows.</p>\n<div id=\"invalid-characters\">\n<h4>INVALID characters</h4>\n<ul>\n<li><p><code>$</code></p>\n<blockquote>\n<ul>\n<li>As we automatically append <code>$</code> to the end, you should not use this character.</li>\n</ul>\n</blockquote>\n</li>\n<li><p><code>\\\\</code></p>\n<blockquote>\n<ul>\n<li>As we automatically escape the given expression, you should not explicitly escape your regular expression when declaring an <code>ALL</code> marker.</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"reg\">\n<h4><code>REG</code></h4>\n<p>The <code>REG</code> marker will tell the system to explicitly check for the given regex which follows the marker.</p>\n</div>\n<div id=\"rzd\">\n<h4><code>RZD</code></h4>\n<p>The <code>RZD</code> marker will tell the system to explicitly check for the given string plus all possible TDL.</p>\n</div>\n</div>\n</div>\n<div id=\"understanding-what-we-actually-do\">\n<h2>Understanding what we actually do</h2>\n<p>If we have the following secondary whitelist list:</p>\n<pre>facebook.com\nALL .gov\nREG face\nRZD ebay\n</pre>\n<p>our system will actually :</p>\n<ul>\n<li>Remove every line which match <code>facebook.com</code> and <code>www.facebook.com</code></li>\n<li>Remove everyline which match <code>ebay.*</code></li>\n<li>In complementary convert all lines with <code>ALL ` or :code:`REG</code> to the right format.</li>\n<li>Check every line again the regular expression.</li>\n<li>Print or save on screen the results.</li>\n</ul>\n<p>The genereated regular expression will be in this example:</p>\n<pre>\\.gov$|face|ebay(.*)\n</pre>\n<p><strong>NOTE: The ebay group is much longer as we construct the list of TDL based on the Root Zone Database of the IANA and the Public Suffix List project.</strong></p>\n<p>Which actually means that we whitelist:</p>\n<ul>\n<li>all elements/lines which ends with <cite>.gov</cite></li>\n<li>all elements/lines which contain the word <cite>face</cite></li>\n</ul>\n</div>\n<div id=\"usage-of-the-script\">\n<h2>Usage of the script</h2>\n<pre>usage: uhb_whitelist [-h] [-f FILE] [-w WHITELIST [WHITELIST ...]] [-wc]\n                 [-o OUTPUT] [-v]\n\nThe tool to clean a list or a hosts file with the Ultimate Hosts Blacklist\nwhitelist list or your own.\n\noptional arguments:\n    -h, --help            show this help message and exit\n    -f FILE, --file FILE  Read the given file and remove all element to\n                            whitelist.\n    -w WHITELIST [WHITELIST ...], --whitelist WHITELIST [WHITELIST ...]\n                            Read the given file and append its data to the our\n                            whitelist list.\n    -wc, --without-core   Disable the usage of the Ultimate Hosts Blacklist\n                            whitelist list.\n    -o OUTPUT, --output OUTPUT\n                            Save the result to the given filename or path.\n    -v, --version         Show the version end exist.\n\nCrafted with \u2665 by Nissar Chababy (Funilrys)\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4950049, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "cd04a7eaa9823cc451fc754039a7b81b", "sha256": "289e1f185f6cc765dd2b6d0db554858ade09229fc5129235297d2864491af617"}, "downloads": -1, "filename": "ultimate_hosts_blacklist_the_whitelist-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cd04a7eaa9823cc451fc754039a7b81b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10803, "upload_time": "2019-02-14T13:20:00", "upload_time_iso_8601": "2019-02-14T13:20:00.855486Z", "url": "https://files.pythonhosted.org/packages/6a/4c/ea91099a6885b40c2ebd511b0ab225bac5f445984711fb48e322e104fab9/ultimate_hosts_blacklist_the_whitelist-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db598dbcb2850103fb358380cb0047f9", "sha256": "ebc89aa31bb1af5a222693e6a2d496a81fece94fbe5f36644d79fb8a36e369dc"}, "downloads": -1, "filename": "ultimate_hosts_blacklist_the_whitelist-1.0.1.tar.gz", "has_sig": false, "md5_digest": "db598dbcb2850103fb358380cb0047f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7830, "upload_time": "2019-02-14T13:20:02", "upload_time_iso_8601": "2019-02-14T13:20:02.481783Z", "url": "https://files.pythonhosted.org/packages/32/0c/e58085caf1c80065f89c6988987581dac69049d7daa4b048ae32a533db0d/ultimate_hosts_blacklist_the_whitelist-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "123233c9f3c590d36f822890ad12ca78", "sha256": "5821ca821dacdb74eaa9373d888552a545778ce4e6d3d53b6c915fcaa7f52b07"}, "downloads": -1, "filename": "ultimate_hosts_blacklist_the_whitelist-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "123233c9f3c590d36f822890ad12ca78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11954, "upload_time": "2019-02-14T17:29:54", "upload_time_iso_8601": "2019-02-14T17:29:54.202183Z", "url": "https://files.pythonhosted.org/packages/41/bb/01c88e2d9f511ffabc63f1d67cc6d12789ef9cfae409a99d68ebd5f3e7e2/ultimate_hosts_blacklist_the_whitelist-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "adb82ee38a2fbabb8ec6d5494ba5e243", "sha256": "2abe7f0ee3f325a600e54cabb16abf71a323c49b315aed9592eff13128fbea59"}, "downloads": -1, "filename": "ultimate_hosts_blacklist_the_whitelist-1.0.2.tar.gz", "has_sig": false, "md5_digest": "adb82ee38a2fbabb8ec6d5494ba5e243", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10225, "upload_time": "2019-02-14T17:29:56", "upload_time_iso_8601": "2019-02-14T17:29:56.134659Z", "url": "https://files.pythonhosted.org/packages/c3/72/410e043a5af3239f90811438751743736a46ffbd8f362f34f961585ffbec/ultimate_hosts_blacklist_the_whitelist-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "123233c9f3c590d36f822890ad12ca78", "sha256": "5821ca821dacdb74eaa9373d888552a545778ce4e6d3d53b6c915fcaa7f52b07"}, "downloads": -1, "filename": "ultimate_hosts_blacklist_the_whitelist-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "123233c9f3c590d36f822890ad12ca78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11954, "upload_time": "2019-02-14T17:29:54", "upload_time_iso_8601": "2019-02-14T17:29:54.202183Z", "url": "https://files.pythonhosted.org/packages/41/bb/01c88e2d9f511ffabc63f1d67cc6d12789ef9cfae409a99d68ebd5f3e7e2/ultimate_hosts_blacklist_the_whitelist-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "adb82ee38a2fbabb8ec6d5494ba5e243", "sha256": "2abe7f0ee3f325a600e54cabb16abf71a323c49b315aed9592eff13128fbea59"}, "downloads": -1, "filename": "ultimate_hosts_blacklist_the_whitelist-1.0.2.tar.gz", "has_sig": false, "md5_digest": "adb82ee38a2fbabb8ec6d5494ba5e243", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10225, "upload_time": "2019-02-14T17:29:56", "upload_time_iso_8601": "2019-02-14T17:29:56.134659Z", "url": "https://files.pythonhosted.org/packages/c3/72/410e043a5af3239f90811438751743736a46ffbd8f362f34f961585ffbec/ultimate_hosts_blacklist_the_whitelist-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:41:09 2020"}