{"info": {"author": "Cicean Wang", "author_email": "nlp@mykidx.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries"], "description": "# Kidx NLU\n[![Join the forum at https://forum.rasa.com](https://img.shields.io/badge/forum-join%20discussions-brightgreen.svg)](https://forum.rasa.com/?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![PyPI version](https://badge.fury.io/py/rasa-nlu.svg)](https://badge.fury.io/py/rasa-nlu)\n[![Supported Python Versions](https://img.shields.io/pypi/pyversions/rasa_nlu.svg)](https://pypi.python.org/pypi/rasa_nlu)\n[![Build Status](https://travis-ci.com/RasaHQ/rasa_nlu.svg?branch=master)](https://travis-ci.com/RasaHQ/rasa_nlu)\n[![Coverage Status](https://coveralls.io/repos/github/RasaHQ/rasa_nlu/badge.svg?branch=master)](https://coveralls.io/github/RasaHQ/rasa_nlu?branch=master)\n[![Documentation Status](https://img.shields.io/badge/docs-stable-brightgreen.svg)](https://rasa.com/docs/nlu/)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2FRasaHQ%2Frasa_nlu.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2FRasaHQ%2Frasa_nlu?ref=badge_shield)\n\n<img align=\"right\" height=\"244\" src=\"https://www.rasa.com/assets/img/sara/sara-open-source-lg.png\">\n\nKidx NLU (Natural Language Understanding) is a tool for understanding what is being said in short pieces of text.\nFor example, taking a short message like:\n\n> *\"I'm looking for a Mexican restaurant in the center of town\"*\n\nAnd returning structured data like:\n\n```\n  intent: search_restaurant\n  entities: \n    - cuisine : Mexican\n    - location : center\n```\n\nKidx NLU is primarily used to build chatbots and voice apps, where this is called intent classification and entity extraction.\nTo use Rasa, *you have to provide some training data*.\nThat is, a set of messages which you've already labelled with their intents and entities.\nRasa then uses machine learning to pick up patterns and generalise to unseen sentences. \n\nYou can think of Rasa NLU as a set of high level APIs for building your own language parser using existing NLP and ML libraries.\n\nIf you are new to Rasa NLU and want to create a bot, you should start with the [**tutorial**](https://rasa.com/docs/nlu/quickstart/).\n\n- **What does Rasa NLU do? \ud83e\udd14** [Read About the Kidx Stack](http://kidx.ai/products/kidx-stack/)\n\n- **I'd like to read the detailed docs \ud83e\udd13** [Read The Docs](https://rasa.com/docs/nlu/)\n\n- **I'm ready to install Rasa NLU! \ud83d\ude80** [Installation](https://rasa.com/docs/nlu/installation/)\n\n- **I have a question \u2753** [Rasa Community Forum](https://forum.rasa.com)\n\n- **I would like to contribute \ud83e\udd17** [How to contribute](# how-to-contribute)\n\n### Important Note\n\nCurrent github master version does NOT support python 2.7 anymore (neither\nwill the next major release). If you want to use Kidx NLU with python \n2.7, please install the most recent version from pypi (0.14).\n\n\n# Quick Install\n\nFor the full installation instructions, please head over to the documentation: [Installation](https://rasa.com/docs/nlu/installation/)\n\n**Via Docker Image**\nFrom docker hub:\n```\n```\n(for more docker installation options see [Advanced Docker Installation](#advanced-docker))\n\nFor developer\n```\ndocker build -f docker/{test_dockerfile} . -t {YOUR_VERSION_TAG}\n```\n\nStart nlu service\n```\ndocker run --name {YOUR_DOCKER_NAME} -p 5000:5000 -itd {YOUR_VERSION_TAG}\n```\n\n**Via Python Library**\nFrom pypi:\n```\npip install kidx_nlu\npython -m kidx_nlu.server &\n```\n(for more python installation options see [Advanced Python Installation](#advanced-python))\n\n### Basic test\nThe below command can be executed for either method used above.\n```\ncurl 'http://localhost:5000/parse?q=hello'\n```\n\n# Example use\n\n### Get the Server Status\n```\ncurl 'http://localhost:5000/status'\n```\n\n### Check the Server Version\n```\ncurl 'http://localhost:5000/version'\n```\n\n### Training New Models\n[Examples](http://git.mykidx.com/nlp/kidx_nlu/tree/master/data/examples/kidx)\nand [Documentation](https://rasa.com/docs/nlu/dataformat/) of the training data\nformat are provided. But as a quick start execute the below command to train\na new model\n\n#### Json format\n```\ncurl 'http://git.mykidx.com/nlp/kidx_nlu/raw/master/sample_configs/config_train_server_json.yml' | \\\ncurl --request POST --header 'content-type: application/x-yml' --data-binary @- --url 'localhost:5000/train?project=test_model'\n```\n\nThis will train a simple keyword based models (not usable for anything but this demo). For better\npipelines consult the documentation.\n\n#### Markdown format\n```\nwget 'http://git.mykidx.com/nlp/kidx_nlu/raw/master/sample_configs/config_train_server_md.yml'\ncurl --request POST --header 'content-type: application/x-yml' --data-binary @config_train_server_md.yml --url 'localhost:5000/train?project=test_model'\n```\n\nThe above command does the following:\n1. It Fetches some of the example data in the repo\n2. It `POSTS` that data to the `/train` endpoint and names the model `project=test_model`\n\n### Parsing New Requests\nMake sure the above command has finished before executing the below. You can check with the `/status` command above.\n```\ncurl 'http://localhost:5000/parse?q=hello&project=test_model'\n```\n\n# FAQ\n\n### Who is it for?\nThe intended audience is mainly __people developing bots__, starting from scratch or looking to find a a drop-in replacement for [wit](https://wit.ai), [LUIS](https://www.luis.ai), or [Dialogflow](https://dialogflow.com). The setup process is designed to be as simple as possible. Kidx NLU is written in Python, but you can use it from any language through a [HTTP API](https://rasa.com/docs/nlu/http/). If your project is written in Python you can [simply import the relevant classes](https://rasa.com/docs/nlu/python/). If you're currently using wit/LUIS/Dialogflow, you just:\n\n1. Download your app data from wit, LUIS, or Dialogflow and feed it into Kidx NLU\n2. Run Kidx NLU on your machine and switch the URL of your wit/LUIS api calls to `localhost:5000/parse`.\n\n### Why should I use Kidx NLU?\n* You don't have to hand over your data to FB/MSFT/GOOG\n* You don't have to make a `https` call to parse every message.\n* You can tune models to work well on your particular use case.\n\nThese points are laid out in more detail in a \n[blog post](https://blog.rasa.com/put-on-your-robot-costume-and-be-the-minimum-viable-bot-yourself/). \nRasa is a set of tools for building more advanced bots, developed by \nthe company [KidxAI](https://kidx.ai). Kidx NLU is the natural language \nunderstanding module, and the first component to be open-sourced. \n\n### What languages does it support?\nThe `supervised_embeddings` pipeline works in any language.\nIf you want to use pre-trained word embeddings, there are models available for\nmany languages. See details [here](https://rasa.com/docs/nlu/languages/)\n\n### How to contribute\nWe are very happy to receive and merge your contributions. There is some more information about the style of the code and docs in the [documentation](https://rasa.com/docs/contributing/).\n\nIn general the process is rather simple:\n1. create an issue describing the feature you want to work on (or have a look at issues with the label [help wanted](https://github.com/RasaHQ/kidx_nlu/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22))\n2. write your code, tests and documentation\n3. create a pull request describing your changes\n\nYou pull request will be reviewed by a maintainer, who might get back to you about any necessary changes or questions. You will also be asked to sign the [Contributor License Agreement](https://cla-assistant.io/RasaHQ/rasa_nlu)\n\n# Advanced installation\n### Advanced Python\nFrom github:\n```\ngit clone git@git.mykidx.com:nlp/kidx_nlu.git\ncd kidx_nlu\npip install -r requirements.txt\npip install -e .\n```\n\nFor local development make sure you install the development requirements:\n```\npip install -r alt_requirements/requirements_dev.txt\npip install -e .\n```\n\nTo test the installation use (this will run a very stupid default model. you need to [train your own model](https://rasa.com/docs/nlu/quickstart/) to do something useful!):\n\n### Advanced Docker\nBefore you start, ensure you have the latest version of docker engine on your machine. You can check if you have docker installed by typing ```docker -v``` in your terminal.\n\nTo see all available builds go to the [Rasa docker hub](https://hub.docker.com/r/rasa/rasa_nlu/), but to get up and going the quickest just run:\n```\ndocker run -p 5000:5000 rasa/kidx_nlu:latest-full\n```\n\nThere are also three volumes, which you may want to map: `/app/projects`, `/app/logs`, and `/app/data`. It is also possible to override the config file used by the server by mapping a new config file to the volume `/app/config.json`. For complete docker usage instructions go to the official [docker hub readme](https://hub.docker.com/r/rasa/rasa_nlu/).\n\nTo test run the below command after the container has started. For more info on using the HTTP API see [here](https://rasa.com/docs/nlu/http/#endpoints)\n```\ncurl 'http://localhost:5000/parse?q=hello'\n```\n\n### Docker Cloud\nWarning! setting up Docker Cloud is quite involved - this method isn't recommended unless you've already configured Docker Cloud Nodes (or swarms)\n\n[![Deploy to Docker Cloud](https://files.cloud.docker.com/images/deploy-to-dockercloud.svg)](https://cloud.docker.com/stack/deploy/?repo=https://github.com/RasaHQ/rasa_nlu/tree/master/docker)\n\n### Install Pretrained Models for Spacy & Mitie\nIn order to use the Spacy or Mitie backends make sure you have one of their pretrained models installed.\n```\npython -m spacy download en\n```\n\nTo download the Mitie model run and place it in a location that you can \nreference in your configuration during model training:\n```\nwget https://github.com/mit-nlp/MITIE/releases/download/v0.4/MITIE-models-v0.2.tar.bz2\ntar jxf MITIE-models-v0.2.tar.bz2\n```\n\nIf you want to run the tests, you need to copy the model into the Rasa folder:\n\n```\ncp MITIE-models/english/total_word_feature_extractor.dat KIDX_NLU_ROOT/data/\n``` \n\nWhere `KIDX_NLU_ROOT` points to your Rasa installation directory.\n\n# Development Internals\n\n### Steps to release a new version\nReleasing a new version is quite simple, as the packages are build and distributed by travis. The following things need to be done to release a new version\n1. update [kidx_nlu/version.py](http://git.mykidx.com:8888/nlp/kidx_nlu/blob/master/rasa_nlu/version.py) to reflect the correct version number\n2. edit the [CHANGELOG.rst](http://git.mykidx.com:8888/nlp/kidx_nlu/blob/master/CHANGELOG.rst), create a new section for the release (eg by moving the items from the collected master section) and create a new master logging section\n3. edit the [migration guide](http://git.mykidx.com:8888/nlp/kidx_nlu/blob/master/docs/migrations.rst) to provide assistance for users updating to the new version \n4. commit all the above changes and tag a new release, e.g. using \n    ```\n    git tag -f 0.7.0 -m \"Some helpful line describing the release\"\n    git push origin 0.7.0\n    ```\n    travis will build this tag and push a package to [pypi](https://pypi.python.org/pypi/kidx_nlu)\n5. only if it is a **major release**, a new branch should be created pointing to the same commit as the tag to allow for future minor patches, e.g.\n    ```\n    git checkout -b 0.7.x\n    git push origin 0.7.x\n    ```\n\n### Running and changing the unit test\nTo build & edit the docs, first install all necessary dependencies:\n\n```\ndocker build -f docker/Dockerfile_dev . -t kidx_nlu_test\n\ndocker run --name kidx_nlu_test -v \"$PWD\":/app -it kidx_nlu_test:0.0.1a2 bash\n```\n\nAfter the docker container start run command in docker\n```\npip install -e . --no-cache-dir -i https://mirrors.aliyun.com/pypi/simple//\nmake lint\nmake test\n```\n\nLook the coverage should be no failure and pass 100%\n\n\n## License\nLicensed under the Apache License, Version 2.0. Copyright 2019 \nRasa Technologies GmbH. [Copy of the license](LICENSE.txt).\n\nA list of the Licenses of the dependencies of the project can be found at\nthe bottom of the\n[Libraries Summary](https://libraries.io/github/RasaHQ/rasa_nlu).\n", "description_content_type": "", "docs_url": null, "download_url": "http://git.mykidx.com/nlp/kidx_nlu/-/archive/0.0.1a7/kidx_nlu-0.0.1a7-test.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://mykidx.com", "keywords": "nlp machine-learning machine-learning-library bot bots botkit kidx conversational-agents conversational-ai chatbotchatbot-framework bot-framework", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "kidx-nlu", "package_url": "https://pypi.org/project/kidx-nlu/", "platform": "", "project_url": "https://pypi.org/project/kidx-nlu/", "project_urls": {"Download": "http://git.mykidx.com/nlp/kidx_nlu/-/archive/0.0.1a7/kidx_nlu-0.0.1a7-test.tar.gz", "Homepage": "https://mykidx.com"}, "release_url": "https://pypi.org/project/kidx-nlu/0.0.1a7/", "requires_dist": null, "requires_python": "", "summary": "Kidx NLU a natural language parser for bots", "version": "0.0.1a7", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Kidx NLU<br>[![Join the forum at https://forum.rasa.com](https://img.shields.io/badge/forum-join%20discussions-brightgreen.svg)](https://forum.rasa.com/?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge)<br>[![PyPI version](https://badge.fury.io/py/rasa-nlu.svg)](https://badge.fury.io/py/rasa-nlu)<br>[![Supported Python Versions](https://img.shields.io/pypi/pyversions/rasa_nlu.svg)](https://pypi.python.org/pypi/rasa_nlu)<br>[![Build Status](https://travis-ci.com/RasaHQ/rasa_nlu.svg?branch=master)](https://travis-ci.com/RasaHQ/rasa_nlu)<br>[![Coverage Status](https://coveralls.io/repos/github/RasaHQ/rasa_nlu/badge.svg?branch=master)](https://coveralls.io/github/RasaHQ/rasa_nlu?branch=master)<br>[![Documentation Status](https://img.shields.io/badge/docs-stable-brightgreen.svg)](https://rasa.com/docs/nlu/)<br>[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2FRasaHQ%2Frasa_nlu.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2FRasaHQ%2Frasa_nlu?ref=badge_shield)<br><br>&lt;img align=\"right\" height=\"244\" src=\"https://www.rasa.com/assets/img/sara/sara-open-source-lg.png\"&gt;<br><br>Kidx NLU (Natural Language Understanding) is a tool for understanding what is being said in short pieces of text.<br>For example, taking a short message like:<br><br>&gt; *\"I'm looking for a Mexican restaurant in the center of town\"*<br><br>And returning structured data like:<br><br>```<br>  intent: search_restaurant<br>  entities: <br>    - cuisine : Mexican<br>    - location : center<br>```<br><br>Kidx NLU is primarily used to build chatbots and voice apps, where this is called intent classification and entity extraction.<br>To use Rasa, *you have to provide some training data*.<br>That is, a set of messages which you've already labelled with their intents and entities.<br>Rasa then uses machine learning to pick up patterns and generalise to unseen sentences. <br><br>You can think of Rasa NLU as a set of high level APIs for building your own language parser using existing NLP and ML libraries.<br><br>If you are new to Rasa NLU and want to create a bot, you should start with the [**tutorial**](https://rasa.com/docs/nlu/quickstart/).<br><br>- **What does Rasa NLU do? \ud83e\udd14** [Read About the Kidx Stack](http://kidx.ai/products/kidx-stack/)<br><br>- **I'd like to read the detailed docs \ud83e\udd13** [Read The Docs](https://rasa.com/docs/nlu/)<br><br>- **I'm ready to install Rasa NLU! \ud83d\ude80** [Installation](https://rasa.com/docs/nlu/installation/)<br><br>- **I have a question \u2753** [Rasa Community Forum](https://forum.rasa.com)<br><br>- **I would like to contribute \ud83e\udd17** [How to contribute](# how-to-contribute)<br><br>### Important Note<br><br>Current github master version does NOT support python 2.7 anymore (neither<br>will the next major release). If you want to use Kidx NLU with python <br>2.7, please install the most recent version from pypi (0.14).<br><br><br># Quick Install<br><br>For the full installation instructions, please head over to the documentation: [Installation](https://rasa.com/docs/nlu/installation/)<br><br>**Via Docker Image**<br>From docker hub:<br>```<br>```<br>(for more docker installation options see [Advanced Docker Installation](#advanced-docker))<br><br>For developer<br>```<br>docker build -f docker/{test_dockerfile} . -t {YOUR_VERSION_TAG}<br>```<br><br>Start nlu service<br>```<br>docker run --name {YOUR_DOCKER_NAME} -p 5000:5000 -itd {YOUR_VERSION_TAG}<br>```<br><br>**Via Python Library**<br>From pypi:<br>```<br>pip install kidx_nlu<br>python -m kidx_nlu.server &amp;<br>```<br>(for more python installation options see [Advanced Python Installation](#advanced-python))<br><br>### Basic test<br>The below command can be executed for either method used above.<br>```<br>curl 'http://localhost:5000/parse?q=hello'<br>```<br><br># Example use<br><br>### Get the Server Status<br>```<br>curl 'http://localhost:5000/status'<br>```<br><br>### Check the Server Version<br>```<br>curl 'http://localhost:5000/version'<br>```<br><br>### Training New Models<br>[Examples](http://git.mykidx.com/nlp/kidx_nlu/tree/master/data/examples/kidx)<br>and [Documentation](https://rasa.com/docs/nlu/dataformat/) of the training data<br>format are provided. But as a quick start execute the below command to train<br>a new model<br><br>#### Json format<br>```<br>curl 'http://git.mykidx.com/nlp/kidx_nlu/raw/master/sample_configs/config_train_server_json.yml' | \\<br>curl --request POST --header 'content-type: application/x-yml' --data-binary @- --url 'localhost:5000/train?project=test_model'<br>```<br><br>This will train a simple keyword based models (not usable for anything but this demo). For better<br>pipelines consult the documentation.<br><br>#### Markdown format<br>```<br>wget 'http://git.mykidx.com/nlp/kidx_nlu/raw/master/sample_configs/config_train_server_md.yml'<br>curl --request POST --header 'content-type: application/x-yml' --data-binary @config_train_server_md.yml --url 'localhost:5000/train?project=test_model'<br>```<br><br>The above command does the following:<br>1. It Fetches some of the example data in the repo<br>2. It `POSTS` that data to the `/train` endpoint and names the model `project=test_model`<br><br>### Parsing New Requests<br>Make sure the above command has finished before executing the below. You can check with the `/status` command above.<br>```<br>curl 'http://localhost:5000/parse?q=hello&amp;project=test_model'<br>```<br><br># FAQ<br><br>### Who is it for?<br>The intended audience is mainly __people developing bots__, starting from scratch or looking to find a a drop-in replacement for [wit](https://wit.ai), [LUIS](https://www.luis.ai), or [Dialogflow](https://dialogflow.com). The setup process is designed to be as simple as possible. Kidx NLU is written in Python, but you can use it from any language through a [HTTP API](https://rasa.com/docs/nlu/http/). If your project is written in Python you can [simply import the relevant classes](https://rasa.com/docs/nlu/python/). If you're currently using wit/LUIS/Dialogflow, you just:<br><br>1. Download your app data from wit, LUIS, or Dialogflow and feed it into Kidx NLU<br>2. Run Kidx NLU on your machine and switch the URL of your wit/LUIS api calls to `localhost:5000/parse`.<br><br>### Why should I use Kidx NLU?<br>* You don't have to hand over your data to FB/MSFT/GOOG<br>* You don't have to make a `https` call to parse every message.<br>* You can tune models to work well on your particular use case.<br><br>These points are laid out in more detail in a <br>[blog post](https://blog.rasa.com/put-on-your-robot-costume-and-be-the-minimum-viable-bot-yourself/). <br>Rasa is a set of tools for building more advanced bots, developed by <br>the company [KidxAI](https://kidx.ai). Kidx NLU is the natural language <br>understanding module, and the first component to be open-sourced. <br><br>### What languages does it support?<br>The `supervised_embeddings` pipeline works in any language.<br>If you want to use pre-trained word embeddings, there are models available for<br>many languages. See details [here](https://rasa.com/docs/nlu/languages/)<br><br>### How to contribute<br>We are very happy to receive and merge your contributions. There is some more information about the style of the code and docs in the [documentation](https://rasa.com/docs/contributing/).<br><br>In general the process is rather simple:<br>1. create an issue describing the feature you want to work on (or have a look at issues with the label [help wanted](https://github.com/RasaHQ/kidx_nlu/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22))<br>2. write your code, tests and documentation<br>3. create a pull request describing your changes<br><br>You pull request will be reviewed by a maintainer, who might get back to you about any necessary changes or questions. You will also be asked to sign the [Contributor License Agreement](https://cla-assistant.io/RasaHQ/rasa_nlu)<br><br># Advanced installation<br>### Advanced Python<br>From github:<br>```<br>git clone git@git.mykidx.com:nlp/kidx_nlu.git<br>cd kidx_nlu<br>pip install -r requirements.txt<br>pip install -e .<br>```<br><br>For local development make sure you install the development requirements:<br>```<br>pip install -r alt_requirements/requirements_dev.txt<br>pip install -e .<br>```<br><br>To test the installation use (this will run a very stupid default model. you need to [train your own model](https://rasa.com/docs/nlu/quickstart/) to do something useful!):<br><br>### Advanced Docker<br>Before you start, ensure you have the latest version of docker engine on your machine. You can check if you have docker installed by typing ```docker -v``` in your terminal.<br><br>To see all available builds go to the [Rasa docker hub](https://hub.docker.com/r/rasa/rasa_nlu/), but to get up and going the quickest just run:<br>```<br>docker run -p 5000:5000 rasa/kidx_nlu:latest-full<br>```<br><br>There are also three volumes, which you may want to map: `/app/projects`, `/app/logs`, and `/app/data`. It is also possible to override the config file used by the server by mapping a new config file to the volume `/app/config.json`. For complete docker usage instructions go to the official [docker hub readme](https://hub.docker.com/r/rasa/rasa_nlu/).<br><br>To test run the below command after the container has started. For more info on using the HTTP API see [here](https://rasa.com/docs/nlu/http/#endpoints)<br>```<br>curl 'http://localhost:5000/parse?q=hello'<br>```<br><br>### Docker Cloud<br>Warning! setting up Docker Cloud is quite involved - this method isn't recommended unless you've already configured Docker Cloud Nodes (or swarms)<br><br>[![Deploy to Docker Cloud](https://files.cloud.docker.com/images/deploy-to-dockercloud.svg)](https://cloud.docker.com/stack/deploy/?repo=https://github.com/RasaHQ/rasa_nlu/tree/master/docker)<br><br>### Install Pretrained Models for Spacy &amp; Mitie<br>In order to use the Spacy or Mitie backends make sure you have one of their pretrained models installed.<br>```<br>python -m spacy download en<br>```<br><br>To download the Mitie model run and place it in a location that you can <br>reference in your configuration during model training:<br>```<br>wget https://github.com/mit-nlp/MITIE/releases/download/v0.4/MITIE-models-v0.2.tar.bz2<br>tar jxf MITIE-models-v0.2.tar.bz2<br>```<br><br>If you want to run the tests, you need to copy the model into the Rasa folder:<br><br>```<br>cp MITIE-models/english/total_word_feature_extractor.dat KIDX_NLU_ROOT/data/<br>``` <br><br>Where `KIDX_NLU_ROOT` points to your Rasa installation directory.<br><br># Development Internals<br><br>### Steps to release a new version<br>Releasing a new version is quite simple, as the packages are build and distributed by travis. The following things need to be done to release a new version<br>1. update [kidx_nlu/version.py](http://git.mykidx.com:8888/nlp/kidx_nlu/blob/master/rasa_nlu/version.py) to reflect the correct version number<br>2. edit the [CHANGELOG.rst](http://git.mykidx.com:8888/nlp/kidx_nlu/blob/master/CHANGELOG.rst), create a new section for the release (eg by moving the items from the collected master section) and create a new master logging section<br>3. edit the [migration guide](http://git.mykidx.com:8888/nlp/kidx_nlu/blob/master/docs/migrations.rst) to provide assistance for users updating to the new version <br>4. commit all the above changes and tag a new release, e.g. using <br>    ```<br>    git tag -f 0.7.0 -m \"Some helpful line describing the release\"<br>    git push origin 0.7.0<br>    ```<br>    travis will build this tag and push a package to [pypi](https://pypi.python.org/pypi/kidx_nlu)<br>5. only if it is a **major release**, a new branch should be created pointing to the same commit as the tag to allow for future minor patches, e.g.<br>    ```<br>    git checkout -b 0.7.x<br>    git push origin 0.7.x<br>    ```<br><br>### Running and changing the unit test<br>To build &amp; edit the docs, first install all necessary dependencies:<br><br>```<br>docker build -f docker/Dockerfile_dev . -t kidx_nlu_test<br><br>docker run --name kidx_nlu_test -v \"$PWD\":/app -it kidx_nlu_test:0.0.1a2 bash<br>```<br><br>After the docker container start run command in docker<br>```<br>pip install -e . --no-cache-dir -i https://mirrors.aliyun.com/pypi/simple//<br>make lint<br>make test<br>```<br><br>Look the coverage should be no failure and pass 100%<br><br><br>## License<br>Licensed under the Apache License, Version 2.0. Copyright 2019 <br>Rasa Technologies GmbH. [Copy of the license](LICENSE.txt).<br><br>A list of the Licenses of the dependencies of the project can be found at<br>the bottom of the<br>[Libraries Summary](https://libraries.io/github/RasaHQ/rasa_nlu).<br>\n          </div>"}, "last_serial": 5250971, "releases": {"0.0.1a1": [{"comment_text": "", "digests": {"md5": "381bd37a9232a54c7efe0d6eb7f8293d", "sha256": "fc9818c4c80d8a44fc457b48f520817dd968917e274855cc7cadc87601658daa"}, "downloads": -1, "filename": "kidx_nlu-0.0.1a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "381bd37a9232a54c7efe0d6eb7f8293d", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 150006, "upload_time": "2019-04-03T12:44:44", "upload_time_iso_8601": "2019-04-03T12:44:44.926057Z", "url": "https://files.pythonhosted.org/packages/82/4f/bfdd14fb241e41258c0c8c24feff903f7a5abc6d3f706ac3e82ebd87c286/kidx_nlu-0.0.1a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48dcdd1ebac067295749dbcbb445fcec", "sha256": "bb012a4d953bac0a4188f79f3236135a832a542a135d619a35ec7b071c7a1005"}, "downloads": -1, "filename": "kidx-nlu-0.0.1a1.tar.gz", "has_sig": false, "md5_digest": "48dcdd1ebac067295749dbcbb445fcec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 116086, "upload_time": "2019-04-03T12:44:18", "upload_time_iso_8601": "2019-04-03T12:44:18.169935Z", "url": "https://files.pythonhosted.org/packages/46/5a/95ec55e47621f58fc10854a9998329352faeef77b22b00ac1842e98cf7c1/kidx-nlu-0.0.1a1.tar.gz", "yanked": false}], "0.0.1a2": [{"comment_text": "", "digests": {"md5": "6f8197029abb65ec537e3905a5d6da0e", "sha256": "6adcdc751b32d6fef3d97fa5521c03cfb61b814715d533ee2b1ac0ad1c1d5d7c"}, "downloads": -1, "filename": "kidx_nlu-0.0.1a2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6f8197029abb65ec537e3905a5d6da0e", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 170657, "upload_time": "2019-04-17T13:57:10", "upload_time_iso_8601": "2019-04-17T13:57:10.497294Z", "url": "https://files.pythonhosted.org/packages/a6/d6/5fa5a075cc23f1db748d5c745cc3a48be11fab7480357963ce6dece41083/kidx_nlu-0.0.1a2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "850744962e487167d7a0cb7c0447beb8", "sha256": "39a64172ad14f628b6a4fb8df21e5ad76e86dd76637fd05df94e1b6b6df38b46"}, "downloads": -1, "filename": "kidx-nlu-0.0.1a2.tar.gz", "has_sig": false, "md5_digest": "850744962e487167d7a0cb7c0447beb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131962, "upload_time": "2019-04-17T13:57:04", "upload_time_iso_8601": "2019-04-17T13:57:04.533657Z", "url": "https://files.pythonhosted.org/packages/c8/71/f0f7c18626570bbdf010e10085b0571eb00ae2bfa4210ab2ec5e6668f3ca/kidx-nlu-0.0.1a2.tar.gz", "yanked": false}], "0.0.1a3": [{"comment_text": "", "digests": {"md5": "21f6751c810aef5fedb156633a33f36e", "sha256": "11bf617017448b0337eb00fb68639e88db1022c9cc2c011a104ed8551373b5f9"}, "downloads": -1, "filename": "kidx_nlu-0.0.1a3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "21f6751c810aef5fedb156633a33f36e", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 171872, "upload_time": "2019-04-18T09:06:20", "upload_time_iso_8601": "2019-04-18T09:06:20.319398Z", "url": "https://files.pythonhosted.org/packages/58/34/57e68605f69dc32af645f3351b76b502c452c281e4e2ca2ce37f12617b70/kidx_nlu-0.0.1a3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3907fc5840b00d4db92452ec2e3d640", "sha256": "94820113442e34be2738201d4d2efcdc610fc79d7d177b4aa85590c82ecfd6dd"}, "downloads": -1, "filename": "kidx-nlu-0.0.1a3.tar.gz", "has_sig": false, "md5_digest": "a3907fc5840b00d4db92452ec2e3d640", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 128041, "upload_time": "2019-04-18T08:42:54", "upload_time_iso_8601": "2019-04-18T08:42:54.284280Z", "url": "https://files.pythonhosted.org/packages/7e/30/bbac7bbe56a43374e9049aa9793709a9dcb3180e655e7da8777c4efd3502/kidx-nlu-0.0.1a3.tar.gz", "yanked": false}], "0.0.1a4": [{"comment_text": "", "digests": {"md5": "055ffb9e70685e4f6377748185da05bc", "sha256": "1d3327dd1b6a32d35e40164e71f9a2026fa3e47de6ea653c5c17ded2e5e74fa6"}, "downloads": -1, "filename": "kidx_nlu-0.0.1a4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "055ffb9e70685e4f6377748185da05bc", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 171973, "upload_time": "2019-04-30T01:37:15", "upload_time_iso_8601": "2019-04-30T01:37:15.698459Z", "url": "https://files.pythonhosted.org/packages/f4/b8/47f6be63dd1aa2fbb934bbf801125c5453d5df8426139a2156116c4f84cc/kidx_nlu-0.0.1a4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f1089fc4fba836494396b2bb383472d", "sha256": "aa30b960f7caf79dcaf2eef70f99cf80911ec963a5365017b7a36ed5bfb5f17d"}, "downloads": -1, "filename": "kidx-nlu-0.0.1a4.tar.gz", "has_sig": false, "md5_digest": "0f1089fc4fba836494396b2bb383472d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 136561, "upload_time": "2019-04-30T01:43:51", "upload_time_iso_8601": "2019-04-30T01:43:51.750798Z", "url": "https://files.pythonhosted.org/packages/f7/c5/a8072839e0aa1a6b1c7f58956197044e45408cea660a57d46641cf09c272/kidx-nlu-0.0.1a4.tar.gz", "yanked": false}], "0.0.1a5": [{"comment_text": "", "digests": {"md5": "4372e2d95368fafe7862af4ffb931690", "sha256": "e0c0e382d25480e8b4441c6e087388f5bd9903576bc598b7bf296a3d8fe34aae"}, "downloads": -1, "filename": "kidx_nlu-0.0.1a5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4372e2d95368fafe7862af4ffb931690", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 173558, "upload_time": "2019-05-06T11:25:27", "upload_time_iso_8601": "2019-05-06T11:25:27.990596Z", "url": "https://files.pythonhosted.org/packages/35/27/321305d141a30deba5e03c41ba22ca8bc0521b452524f135150671d3a9a2/kidx_nlu-0.0.1a5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "824a51d0f837aad5ccf418fc4d4dc13c", "sha256": "6167c90d82dd504cb20b473efbcd7aefcfeeb3b6960de21ab84cd5c478cced75"}, "downloads": -1, "filename": "kidx-nlu-0.0.1a5.tar.gz", "has_sig": false, "md5_digest": "824a51d0f837aad5ccf418fc4d4dc13c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138032, "upload_time": "2019-05-06T11:25:03", "upload_time_iso_8601": "2019-05-06T11:25:03.882661Z", "url": "https://files.pythonhosted.org/packages/4e/94/6b5f849edcdb95a50201a1655b5ecd455e6f1adf47444b49154a92fe24ed/kidx-nlu-0.0.1a5.tar.gz", "yanked": false}], "0.0.1a6": [{"comment_text": "", "digests": {"md5": "f1d02abcfab4937223d5ec8b5832e569", "sha256": "011988294842b7b4c1f2418207bb2ee90c59873a3a7871f4dee70bd5540e524c"}, "downloads": -1, "filename": "kidx_nlu-0.0.1a6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f1d02abcfab4937223d5ec8b5832e569", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 173502, "upload_time": "2019-05-07T10:38:39", "upload_time_iso_8601": "2019-05-07T10:38:39.741932Z", "url": "https://files.pythonhosted.org/packages/35/ee/9aa45cd3a2ec387d04409ed7504d61d4e6ad6340f787ce9f92b8bbc5679a/kidx_nlu-0.0.1a6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c5a09c6d789ea8d739bdfcbc97f0521", "sha256": "ea674350b744760cdc0f820cd95d2fe6bfb82cd52242b773786d917ef295b733"}, "downloads": -1, "filename": "kidx-nlu-0.0.1a6.tar.gz", "has_sig": false, "md5_digest": "4c5a09c6d789ea8d739bdfcbc97f0521", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138058, "upload_time": "2019-05-07T10:38:34", "upload_time_iso_8601": "2019-05-07T10:38:34.502440Z", "url": "https://files.pythonhosted.org/packages/36/24/644ea779ebe5e16cee765ff6017355e71bd5aa7d28ed7c5e48c3a71f2e58/kidx-nlu-0.0.1a6.tar.gz", "yanked": false}], "0.0.1a7": [{"comment_text": "", "digests": {"md5": "67d215ec24b5b3a45b638b02f880b5b9", "sha256": "f750ed7a98427dd42623f1fefed091bd1394ea16c5930016f9ce96f613a8d694"}, "downloads": -1, "filename": "kidx_nlu-0.0.1a7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67d215ec24b5b3a45b638b02f880b5b9", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 173887, "upload_time": "2019-05-10T07:17:52", "upload_time_iso_8601": "2019-05-10T07:17:52.792655Z", "url": "https://files.pythonhosted.org/packages/6a/c0/429e1797e5429de3168acdb3d3f27464b3d16f24365dfc4eb6cd084db672/kidx_nlu-0.0.1a7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a09fa3ac58409853da9d0c3f51e42e16", "sha256": "512845a83ac2fe9c7e57c80ba30262e75670a3d043eef7fa777adfa7c7235672"}, "downloads": -1, "filename": "kidx-nlu-0.0.1a7.tar.gz", "has_sig": false, "md5_digest": "a09fa3ac58409853da9d0c3f51e42e16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138554, "upload_time": "2019-05-10T07:17:47", "upload_time_iso_8601": "2019-05-10T07:17:47.405904Z", "url": "https://files.pythonhosted.org/packages/46/4f/4efc807178c1df56c5ae15f58aee3693599cdff83a1deb781d50045d453d/kidx-nlu-0.0.1a7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "67d215ec24b5b3a45b638b02f880b5b9", "sha256": "f750ed7a98427dd42623f1fefed091bd1394ea16c5930016f9ce96f613a8d694"}, "downloads": -1, "filename": "kidx_nlu-0.0.1a7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67d215ec24b5b3a45b638b02f880b5b9", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 173887, "upload_time": "2019-05-10T07:17:52", "upload_time_iso_8601": "2019-05-10T07:17:52.792655Z", "url": "https://files.pythonhosted.org/packages/6a/c0/429e1797e5429de3168acdb3d3f27464b3d16f24365dfc4eb6cd084db672/kidx_nlu-0.0.1a7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a09fa3ac58409853da9d0c3f51e42e16", "sha256": "512845a83ac2fe9c7e57c80ba30262e75670a3d043eef7fa777adfa7c7235672"}, "downloads": -1, "filename": "kidx-nlu-0.0.1a7.tar.gz", "has_sig": false, "md5_digest": "a09fa3ac58409853da9d0c3f51e42e16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138554, "upload_time": "2019-05-10T07:17:47", "upload_time_iso_8601": "2019-05-10T07:17:47.405904Z", "url": "https://files.pythonhosted.org/packages/46/4f/4efc807178c1df56c5ae15f58aee3693599cdff83a1deb781d50045d453d/kidx-nlu-0.0.1a7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:46 2020"}