{"info": {"author": "Linas Ju\u00c5\u00a1kevi\u00c4\u008dius", "author_email": "linas.juskevicius@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "BeakerHelpers\n=============\n\nBeakerHelpers is a Beaker_ extension that can show the active sessions and clean\nthe old ones. Currently it only works with beaker.ext.database storage backend.\n\nBeakerHelpers is also a namespace package so new plugins can be created under\nthis namespace_.\n\nYou can find the Git repository at github.com_\n\nInstallation\n------------\n\neasy_install_::\n\n    $ <env>/bin/easy_install BeakerHelpers\n\npip_::\n\n    $ <env>/bin/pip install BeakerHelpers\n\nGet / Show Sessions Usage\n-------------------------\n\nYou can call ``get_sessions`` to get a list of active sessions (dicts)::\n\n    >>> import sqlalchemy\n    >>> from beakerhelpers.sessions import get_sessions\n    >>> sessions_table = sqlalchemy.Table('beaker_cache',\n    ...     sqlalchemy.MetaData('sqlite:///my.db'), autoload=True)\n    >>> get_sessions(sessions_table, timeout=3600)  # timeout in seconds\n    [{\n        '_accessed_time': datetime.datetime(2010, 1, 1, 10, 10, 10),\n        '_creation_time': datetime.datetime(2010, 1, 1, 08, 40, 00),\n        'user_name': u'john@doe.com',\n    }]\n\nThe above form is suitable for Python access. If you want to provide this data\nto the user you could use ``show_sessions`` with the same parameters instead::\n\n    >>> print show_sessions(sessions_table, timeout=3600)\n    --------------------------------------------------------\n         _accessed_time |      _creation_time |    user_name\n    --------------------------------------------------------\n    2010-01-01 10:10:10 | 2010-01-01 08:40:00 | john@doe.com\n\nHowever you can use ``paster beakersessions`` to call the ``show_sessions`` from\nthe console::\n\n    $ <env>/bin/paster beakersessions cfg/prod.ini\n    --------------------------------------------------------\n         _accessed_time |      _creation_time |    user_name\n    --------------------------------------------------------\n    2010-01-01 10:10:10 | 2010-01-01 08:40:00 | john@doe.com\n\nIn this case the `cfg/prod.ini` file should be a `paste.deploy` loadable\nconfiguration file. BeakerHelpers expects to find these keys in the `[app:main]`\nsection of `cfg/prod.ini`:\n\n    - ``beaker.session.type`` = `ext:database` - the only supported backend (yet)\n    - ``beaker.session.url`` - an `SQLAlchemy engine URL`_\n    - ``beaker.session.timeout`` - session timeout in seconds\n    - ``beaker.session.table_name`` - (optional) session storage table.\n      According to beaker.ext.database_, defaults to `beaker_cache`.\n\n``paster beakersessions`` command also takes two optional arguments:\n\n    - ``--prefix, -p`` - beaker key prefix in the config file, defaults to\n      `beaker.session`\n    - ``--timeout, -t`` - do not show sessions older than the timeout. Timeout\n      examples:\n\n      - `3s` - 3 seconds\n      - `14m` - 14 minutes\n      - `36h` - 36 hours\n      - `2d` - 2 days\n      - `0` - show all sessions (ignore timeout even in the config file)\n\n      If not provided the timeout will be taken from the config file,\n      `<prefix>.timeout` (seconds).\n\nSession Cleanup Usage\n---------------------\n\nYou can use ``cleanup_sessions`` from your Python scripts to remove old\nsessions::\n\n    >>> import sqlalchemy\n    >>> from beakerhelpers.sessions import cleanup_sessions\n    >>> sessions_table = sqlalchemy.Table('beaker_cache',\n    ...     sqlalchemy.MetaData('sqlite:///my.db'), autoload=True)\n    >>> cleanup_sessions(sessions_table, timeout=3600)  # timeout in seconds\n\nThe sessions older than 1 hour would get cleaned. However, session cleanup is\nparticularly convenient to be called as a paste script::\n\n    $ <env>/bin/paster beakercleanup cfg/prod.ini\n\nIt expects the same config file structure and takes the same optional arguments\nas beakersessions. However, in this case sessions *older* than ``--timeout``\nwill be removed.\n\nAttention - BeakerShowSessions and BeakerCleanup users\n------------------------------------------------------\n\nDue to namespace issues BeakerShowSessions and BeakerCleanup can not be\ninstalled with pip and/or easy_install. Their functionality got merged into this\npackage and access became simpler. We strongly encourage to use BeakerHelpers\ninstead.\n\n.. _Beaker: http://beaker.groovie.org\n.. _beaker.ext.database: http://www.bitbucket.org/bbangert/beaker/src/554a46f4a946/beaker/ext/database.py#cl-35 \n.. _SQLAlchemy engine URL: http://www.sqlalchemy.org/docs/05/dbengine.html#create-engine-url-arguments\n.. _github.com: http://github.com/kaukas/BeakerHelpers\n.. _namespace: http://peak.telecommunity.com/DevCenter/setuptools#namespace-packages\n.. _easy_install: http://peak.telecommunity.com/DevCenter/EasyInstall \n.. _pip: http://pip.openplans.org/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "paste beaker session database active", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "BeakerHelpers", "package_url": "https://pypi.org/project/BeakerHelpers/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/BeakerHelpers/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/BeakerHelpers/0.1/", "requires_dist": null, "requires_python": null, "summary": "An extendable Beaker helpers package to manage Beaker sessions", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>BeakerHelpers is a <a href=\"http://beaker.groovie.org\" rel=\"nofollow\">Beaker</a> extension that can show the active sessions and clean\nthe old ones. Currently it only works with beaker.ext.database storage backend.</p>\n<p>BeakerHelpers is also a namespace package so new plugins can be created under\nthis <a href=\"http://peak.telecommunity.com/DevCenter/setuptools#namespace-packages\" rel=\"nofollow\">namespace</a>.</p>\n<p>You can find the Git repository at <a href=\"http://github.com/kaukas/BeakerHelpers\" rel=\"nofollow\">github.com</a></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><a href=\"http://peak.telecommunity.com/DevCenter/EasyInstall\" rel=\"nofollow\">easy_install</a>:</p>\n<pre>$ &lt;env&gt;/bin/easy_install BeakerHelpers\n</pre>\n<p><a href=\"http://pip.openplans.org/\" rel=\"nofollow\">pip</a>:</p>\n<pre>$ &lt;env&gt;/bin/pip install BeakerHelpers\n</pre>\n</div>\n<div id=\"get-show-sessions-usage\">\n<h2>Get / Show Sessions Usage</h2>\n<p>You can call <tt>get_sessions</tt> to get a list of active sessions (dicts):</p>\n<pre>&gt;&gt;&gt; import sqlalchemy\n&gt;&gt;&gt; from beakerhelpers.sessions import get_sessions\n&gt;&gt;&gt; sessions_table = sqlalchemy.Table('beaker_cache',\n...     sqlalchemy.MetaData('sqlite:///my.db'), autoload=True)\n&gt;&gt;&gt; get_sessions(sessions_table, timeout=3600)  # timeout in seconds\n[{\n    '_accessed_time': datetime.datetime(2010, 1, 1, 10, 10, 10),\n    '_creation_time': datetime.datetime(2010, 1, 1, 08, 40, 00),\n    'user_name': u'john@doe.com',\n}]\n</pre>\n<p>The above form is suitable for Python access. If you want to provide this data\nto the user you could use <tt>show_sessions</tt> with the same parameters instead:</p>\n<pre>&gt;&gt;&gt; print show_sessions(sessions_table, timeout=3600)\n--------------------------------------------------------\n     _accessed_time |      _creation_time |    user_name\n--------------------------------------------------------\n2010-01-01 10:10:10 | 2010-01-01 08:40:00 | john@doe.com\n</pre>\n<p>However you can use <tt>paster beakersessions</tt> to call the <tt>show_sessions</tt> from\nthe console:</p>\n<pre>$ &lt;env&gt;/bin/paster beakersessions cfg/prod.ini\n--------------------------------------------------------\n     _accessed_time |      _creation_time |    user_name\n--------------------------------------------------------\n2010-01-01 10:10:10 | 2010-01-01 08:40:00 | john@doe.com\n</pre>\n<p>In this case the <cite>cfg/prod.ini</cite> file should be a <cite>paste.deploy</cite> loadable\nconfiguration file. BeakerHelpers expects to find these keys in the <cite>[app:main]</cite>\nsection of <cite>cfg/prod.ini</cite>:</p>\n<blockquote>\n<ul>\n<li><tt>beaker.session.type</tt> = <cite>ext:database</cite> - the only supported backend (yet)</li>\n<li><tt>beaker.session.url</tt> - an <a href=\"http://www.sqlalchemy.org/docs/05/dbengine.html#create-engine-url-arguments\" rel=\"nofollow\">SQLAlchemy engine URL</a></li>\n<li><tt>beaker.session.timeout</tt> - session timeout in seconds</li>\n<li><tt>beaker.session.table_name</tt> - (optional) session storage table.\nAccording to <a href=\"http://www.bitbucket.org/bbangert/beaker/src/554a46f4a946/beaker/ext/database.py#cl-35\" rel=\"nofollow\">beaker.ext.database</a>, defaults to <cite>beaker_cache</cite>.</li>\n</ul>\n</blockquote>\n<p><tt>paster beakersessions</tt> command also takes two optional arguments:</p>\n<blockquote>\n<ul>\n<li><p><tt><span class=\"pre\">--prefix,</span> <span class=\"pre\">-p</span></tt> - beaker key prefix in the config file, defaults to\n<cite>beaker.session</cite></p>\n</li>\n<li><p><tt><span class=\"pre\">--timeout,</span> <span class=\"pre\">-t</span></tt> - do not show sessions older than the timeout. Timeout\nexamples:</p>\n<ul>\n<li><cite>3s</cite> - 3 seconds</li>\n<li><cite>14m</cite> - 14 minutes</li>\n<li><cite>36h</cite> - 36 hours</li>\n<li><cite>2d</cite> - 2 days</li>\n<li><cite>0</cite> - show all sessions (ignore timeout even in the config file)</li>\n</ul>\n<p>If not provided the timeout will be taken from the config file,\n<cite>&lt;prefix&gt;.timeout</cite> (seconds).</p>\n</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"session-cleanup-usage\">\n<h2>Session Cleanup Usage</h2>\n<p>You can use <tt>cleanup_sessions</tt> from your Python scripts to remove old\nsessions:</p>\n<pre>&gt;&gt;&gt; import sqlalchemy\n&gt;&gt;&gt; from beakerhelpers.sessions import cleanup_sessions\n&gt;&gt;&gt; sessions_table = sqlalchemy.Table('beaker_cache',\n...     sqlalchemy.MetaData('sqlite:///my.db'), autoload=True)\n&gt;&gt;&gt; cleanup_sessions(sessions_table, timeout=3600)  # timeout in seconds\n</pre>\n<p>The sessions older than 1 hour would get cleaned. However, session cleanup is\nparticularly convenient to be called as a paste script:</p>\n<pre>$ &lt;env&gt;/bin/paster beakercleanup cfg/prod.ini\n</pre>\n<p>It expects the same config file structure and takes the same optional arguments\nas beakersessions. However, in this case sessions <em>older</em> than <tt><span class=\"pre\">--timeout</span></tt>\nwill be removed.</p>\n</div>\n<div id=\"attention-beakershowsessions-and-beakercleanup-users\">\n<h2>Attention - BeakerShowSessions and BeakerCleanup users</h2>\n<p>Due to namespace issues BeakerShowSessions and BeakerCleanup can not be\ninstalled with pip and/or easy_install. Their functionality got merged into this\npackage and access became simpler. We strongly encourage to use BeakerHelpers\ninstead.</p>\n</div>\n\n          </div>"}, "last_serial": 783836, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d2a36d02153d934e9cb948ba5cc36508", "sha256": "ef43b66b7c707aa43ec4482ea753c5859431d3e5dea60cb079e2124aec16063a"}, "downloads": -1, "filename": "BeakerHelpers-0.1.tar.gz", "has_sig": false, "md5_digest": "d2a36d02153d934e9cb948ba5cc36508", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5429, "upload_time": "2010-06-14T10:49:34", "upload_time_iso_8601": "2010-06-14T10:49:34.931282Z", "url": "https://files.pythonhosted.org/packages/44/b6/ba157a2ec7c6842949a5900c7114c4d66a269e9346ba498b14216861ab67/BeakerHelpers-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d2a36d02153d934e9cb948ba5cc36508", "sha256": "ef43b66b7c707aa43ec4482ea753c5859431d3e5dea60cb079e2124aec16063a"}, "downloads": -1, "filename": "BeakerHelpers-0.1.tar.gz", "has_sig": false, "md5_digest": "d2a36d02153d934e9cb948ba5cc36508", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5429, "upload_time": "2010-06-14T10:49:34", "upload_time_iso_8601": "2010-06-14T10:49:34.931282Z", "url": "https://files.pythonhosted.org/packages/44/b6/ba157a2ec7c6842949a5900c7114c4d66a269e9346ba498b14216861ab67/BeakerHelpers-0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:57 2020"}