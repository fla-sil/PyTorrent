{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Zabbix sender for EPICS-CA\n\nThis package allows to send metrics to a Zabbix server from EPICS records via Channel Access.\n\nSee [docmentation](https://sasaki77.github.io/zabbix-epics-py/)\n\n## Installing\n\nSimple install is below.\n\n```bash\npip install zabbix-epics-py\n```\n\nOr clone this package and install it.\n\n```bash\n# clone the repository\ngit clone https://github.com/sasaki77/zabbix-epics-py\ncd zabbix-epics-py\n# install zabbix-epics-py\npip install -e .\n```\n\n## Usage\n\nBefore using this program, you should create hosts and items in Zabbix.\nType of the items must be set to Zabbix trapper.\n\nBelow is a simple example usage.\nValues of `TEST:PV` are sent to a Zabbix server at 30 sec intervals and metrics are stored to `zabbix-epics-py-test.item` key of `dummyHost`.\n\n```python\n>>> from zbxepics import ZabbixSenderCA\n>>> server_ip = '127.0.0.1'\n>>> port = 10051\n>>> config = False\n>>> items = [dict(host='dummyHost', pv='TEST:PV', interval=30, item_key='zabbix-epics-py-test.item', func='last')]\n>>> sender = ZabbixSenderCA(server_ip, port, config, items)\n>>> sender.run()\n```\n\n`interval` is an interval in seconds between sending metrics to Zabbix. If `interval` is set to `monitor`, metrics are sent every monitor update.\n\n`func` determines a function to be applied to a monitored value buffer.\n\nAvalilable funcs are below.\n\n- last\n- min\n- max\n- avg\n\nFor example, a monitored pv is processed 3 times and its value changed to 1, 2 and 3. Then the value sent to Zabbix is 2 if `func` is set to avg.\n\n## Test\n\nSome part of tests run HTTP server on 30051 port to emulate a Zabbix server.\n\nYou should concern localhost http access to test correctly.\n(e.g. HTTP proxy settings)\n\nRun without coverage:\n```bash\npip install pytest\npytest\n```\n\nRun with coverage:\n```bash\npip install pytest pytest-cov\npytest --cov zbxepics\ncoverage report -m\n```\n\n## Build Documentation\n```\npip install sphinx m2r sphinx_rtd_theme\ncd doc/_build/html\nmake html\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sasaki77/zabbix-epics-py", "keywords": "", "license": "", "maintainer": "Shinya Sasaki", "maintainer_email": "", "name": "zabbix-epics-py", "package_url": "https://pypi.org/project/zabbix-epics-py/", "platform": "", "project_url": "https://pypi.org/project/zabbix-epics-py/", "project_urls": {"Homepage": "https://github.com/sasaki77/zabbix-epics-py"}, "release_url": "https://pypi.org/project/zabbix-epics-py/0.1.1/", "requires_dist": ["future", "py-zabbix (>=1.1.2)", "pyepics", "pytest ; extra == 'develop'", "pytest-cov ; extra == 'develop'", "pycodestyle ; extra == 'develop'"], "requires_python": "", "summary": "Zabbix-EPICS for Python", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Zabbix sender for EPICS-CA</h1>\n<p>This package allows to send metrics to a Zabbix server from EPICS records via Channel Access.</p>\n<p>See <a href=\"https://sasaki77.github.io/zabbix-epics-py/\" rel=\"nofollow\">docmentation</a></p>\n<h2>Installing</h2>\n<p>Simple install is below.</p>\n<pre>pip install zabbix-epics-py\n</pre>\n<p>Or clone this package and install it.</p>\n<pre><span class=\"c1\"># clone the repository</span>\ngit clone https://github.com/sasaki77/zabbix-epics-py\n<span class=\"nb\">cd</span> zabbix-epics-py\n<span class=\"c1\"># install zabbix-epics-py</span>\npip install -e .\n</pre>\n<h2>Usage</h2>\n<p>Before using this program, you should create hosts and items in Zabbix.\nType of the items must be set to Zabbix trapper.</p>\n<p>Below is a simple example usage.\nValues of <code>TEST:PV</code> are sent to a Zabbix server at 30 sec intervals and metrics are stored to <code>zabbix-epics-py-test.item</code> key of <code>dummyHost</code>.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zbxepics</span> <span class=\"kn\">import</span> <span class=\"n\">ZabbixSenderCA</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">server_ip</span> <span class=\"o\">=</span> <span class=\"s1\">'127.0.0.1'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"mi\">10051</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'dummyHost'</span><span class=\"p\">,</span> <span class=\"n\">pv</span><span class=\"o\">=</span><span class=\"s1\">'TEST:PV'</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"n\">item_key</span><span class=\"o\">=</span><span class=\"s1\">'zabbix-epics-py-test.item'</span><span class=\"p\">,</span> <span class=\"n\">func</span><span class=\"o\">=</span><span class=\"s1\">'last'</span><span class=\"p\">)]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sender</span> <span class=\"o\">=</span> <span class=\"n\">ZabbixSenderCA</span><span class=\"p\">(</span><span class=\"n\">server_ip</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">items</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sender</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p><code>interval</code> is an interval in seconds between sending metrics to Zabbix. If <code>interval</code> is set to <code>monitor</code>, metrics are sent every monitor update.</p>\n<p><code>func</code> determines a function to be applied to a monitored value buffer.</p>\n<p>Avalilable funcs are below.</p>\n<ul>\n<li>last</li>\n<li>min</li>\n<li>max</li>\n<li>avg</li>\n</ul>\n<p>For example, a monitored pv is processed 3 times and its value changed to 1, 2 and 3. Then the value sent to Zabbix is 2 if <code>func</code> is set to avg.</p>\n<h2>Test</h2>\n<p>Some part of tests run HTTP server on 30051 port to emulate a Zabbix server.</p>\n<p>You should concern localhost http access to test correctly.\n(e.g. HTTP proxy settings)</p>\n<p>Run without coverage:</p>\n<pre>pip install pytest\npytest\n</pre>\n<p>Run with coverage:</p>\n<pre>pip install pytest pytest-cov\npytest --cov zbxepics\ncoverage report -m\n</pre>\n<h2>Build Documentation</h2>\n<pre><code>pip install sphinx m2r sphinx_rtd_theme\ncd doc/_build/html\nmake html\n</code></pre>\n\n          </div>"}, "last_serial": 5988321, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "0bb125f0889e5efeaa4dbebb7a01c4dc", "sha256": "2e87113c8363b13dcdc9b08a0ef8162acd7032065fdd006051b26886bbd40a30"}, "downloads": -1, "filename": "zabbix_epics_py-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0bb125f0889e5efeaa4dbebb7a01c4dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21260, "upload_time": "2019-10-17T08:13:34", "upload_time_iso_8601": "2019-10-17T08:13:34.126684Z", "url": "https://files.pythonhosted.org/packages/00/0a/8cc9aa3d977c324db1b9498753aea34b5367a808a32031aa7c8aca181413/zabbix_epics_py-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b514a3324f1c0b69d80591835ed0300b", "sha256": "a46ea22368a872db7726a785ac1d10600c72a770a2801920083ce3e35f98e094"}, "downloads": -1, "filename": "zabbix-epics-py-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b514a3324f1c0b69d80591835ed0300b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12401, "upload_time": "2019-10-17T08:13:36", "upload_time_iso_8601": "2019-10-17T08:13:36.157726Z", "url": "https://files.pythonhosted.org/packages/47/b6/b33c320a1e0e982fe5fc383d004d5fce4b7c573032ca517fe4525d0d8ba9/zabbix-epics-py-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0bb125f0889e5efeaa4dbebb7a01c4dc", "sha256": "2e87113c8363b13dcdc9b08a0ef8162acd7032065fdd006051b26886bbd40a30"}, "downloads": -1, "filename": "zabbix_epics_py-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0bb125f0889e5efeaa4dbebb7a01c4dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21260, "upload_time": "2019-10-17T08:13:34", "upload_time_iso_8601": "2019-10-17T08:13:34.126684Z", "url": "https://files.pythonhosted.org/packages/00/0a/8cc9aa3d977c324db1b9498753aea34b5367a808a32031aa7c8aca181413/zabbix_epics_py-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b514a3324f1c0b69d80591835ed0300b", "sha256": "a46ea22368a872db7726a785ac1d10600c72a770a2801920083ce3e35f98e094"}, "downloads": -1, "filename": "zabbix-epics-py-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b514a3324f1c0b69d80591835ed0300b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12401, "upload_time": "2019-10-17T08:13:36", "upload_time_iso_8601": "2019-10-17T08:13:36.157726Z", "url": "https://files.pythonhosted.org/packages/47/b6/b33c320a1e0e982fe5fc383d004d5fce4b7c573032ca517fe4525d0d8ba9/zabbix-epics-py-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:20:10 2020"}