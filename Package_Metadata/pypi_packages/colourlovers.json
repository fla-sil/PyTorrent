{"info": {"author": "Juan Gallostra", "author_email": "juangallostra@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "Colourlovers-API-wrapper\n========================\n\n.. image:: https://img.shields.io/pypi/v/colourlovers.svg\n    :target: https://pypi.org/project/colourlovers/\n\n.. image:: https://img.shields.io/github/issues-pr/juangallostra/Colourlovers-API-wrapper.svg?style=flat-square\n    :target: https://github.com/juangallostra/Colourlovers-API-wrapper/pulls\n\n.. image:: https://img.shields.io/github/issues/juangallostra/Colourlovers-API-wrapper.svg?style=flat-square\n    :target: https://github.com/juangallostra/Colourlovers-API-wrapper/issues\n\n.. image:: https://img.shields.io/github/contributors/juangallostra/Colourlovers-API-wrapper.svg?style=flat-square\n    :target: https://github.com/juangallostra/Colourlovers-API-wrapper\n\n\n\n\nPython wrapper for the `API <https://www.colourlovers.com/api>`__\nprovided by www.colourlovers.com\n\n\nRequirements\n------------\n\n-  Python 3 (Check `elbaschid's\n   wrapper <https://github.com/elbaschid/python-colourlovers>`__ if\n   using Python 2)\n-  Pillow\n\n\nHow to use it\n-------------\n\nImport the wrapper\n~~~~~~~~~~~~~~~~~~\n\n1. Download the wrapper via ``pip``:\n   ``pip install colourlovers``\n   Alternatively, clone the repository by typing in a terminal:\n   ``git clone https://github.com/juangallostra/Colourlovers-API-wrapper.git``\n2. Start a Python terminal session in the directory where you cloned the\n   repository\n3. Import the wrapper by:\n\n   .. code:: python\n\n           >>> from colourlovers import clapi\n           >>> cl = clapi.ColourLovers()\n\n\nQueries\n~~~~~~~\n\nOnce we have created the API wrapper object (``cl`` in the present\ncase) we are ready to query the API. Note that a query, even if it\nis for a single object, always returns a list. The ColourLovers API\nqueries are structured in three levels:\n\n1. Object of the query. The possible query objects are: Color/s,\n   Pattern/s, Palette/s, Lover/s or stats. Note that most of the objects\n   can be queried in plural or in singular. The wrapper offers a\n   different method for each object, all of them being:\n\n   .. code:: python\n\n           >>> cl.search_palette()  # Query for a single palette\n           >>> cl.search_pattern()  # Query for a single pattern\n           >>> cl.search_color()  # Query for a single color\n           >>> cl.search_lover()  # Query for a single user\n           >>> cl.search_palettes()  # Query for multiple palettes\n           >>> cl.search_patterns()  # Query for multiple patterns\n           >>> cl.search_colors()  # Query for multiple colors\n           >>> cl.search_lovers()  # Query for multiple users\n           >>> cl.search_stats()  # Query for a single pattern\n\n   Each of these methods only accepts keyword arguments. Optionally, a\n   first boolean positional argument can be passed specifying whether\n   the response of the query should be returned as raw data or as a\n   Python object. By default the response of a query will be returned as\n   a Python object. Hence, the general form of a query to the API is:\n\n   .. code:: python\n\n           >>> cl.search_patterns(True, kwargs)  # Response will be returned as raw data\n           >>> cl.search_patterns(kwargs)  # Response will be returned as a Python object\n\n   We will get back to this later.\n\n2. Type of the query. These are general, normally non-object dependent types.\n   However, not all the types are supported by all the objects. The possible\n   query types and the keyword used to specify them for each type of object are:\n\n   +------------+-------------+----------------------------------------------------+\n   | Object     |   Keyword   |               Value                                |\n   +============+=============+====================================================+\n   | Palettes   | ``request`` |  ``new``, ``top``, ``random``                      |\n   +------------+-------------+----------------------------------------------------+\n   | Patterns   | ``request`` |  ``new``, ``top``, ``random``                      |\n   +------------+-------------+----------------------------------------------------+\n   | Colors     | ``request`` |  ``new``, ``top``, ``random``                      |\n   +------------+-------------+----------------------------------------------------+\n   | Lovers     | ``request`` |  ``new``, ``top``                                  |\n   +------------+-------------+----------------------------------------------------+\n   | Palette    | ``id``      | valid id as ``int`` or ``str``                     |\n   +------------+-------------+----------------------------------------------------+\n   | Pattern    | ``id``      | valid id as ``int`` or ``str``                     |\n   +------------+-------------+----------------------------------------------------+\n   | Color      | ``hexvalue``| valid hex color value as ``str``                   |\n   +------------+-------------+----------------------------------------------------+\n   | Lover      | ``username``| valid username ``str``                             |\n   +------------+-------------+----------------------------------------------------+\n   | Stats      | ``request`` | ``colors``, ``palettes``, ``patterns``, ``lovers`` |\n   +------------+-------------+----------------------------------------------------+\n\n   The ``random`` query type is exclusive. When using it, no other\n   parameters can be specified. Some examples of valid queries are:\n\n   .. code:: python\n\n           >>> cl.search_patterns(request='new')\n           >>> cl.search_colors(request='top')\n           >>> cl.search_stats(request='patterns')\n           >>> cl.search_palettes(request='random')\n           >>> cl.search_pattern(id=1145)\n           >>> cl.search_lover(username='whatever')\n           >>> cl.search_color(hexvalue='C6C5AC')\n\n3. Object specific query parameters. These depend on the object of the\n   query and are also specified as keyword arguments. To see which are\n   the parameters supported by each object follow the links to the\n   official API page in the following table. Note the differences in the\n   available parameters when querying for multiple objects or for a\n   single object.\n\n   +-------------+-------------------------------------------------------------+\n   | Object      | Supported Types                                             |\n   +=============+=============================================================+\n   | Palette/s   | `Parameters <https://www.colourlovers.com/api#palettes>`__  |\n   +-------------+-------------------------------------------------------------+\n   | Pattern/s   | `Parameters <https://www.colourlovers.com/api#patterns>`__  |\n   +-------------+-------------------------------------------------------------+\n   | Color/s     | `Parameters <https://www.colourlovers.com/api#colors>`__    |\n   +-------------+-------------------------------------------------------------+\n   | Lover/s     | `Parameters <https://www.colourlovers.com/api#lovers>`__    |\n   +-------------+-------------------------------------------------------------+\n   | Stats       | `Parameters <https://www.colourlovers.com/api#stats>`__     |\n   +-------------+-------------------------------------------------------------+\n\n   Examples of valid queries are:\n\n   .. code:: python\n\n           >>> cl.search_palettes(request='top', keywords='river', numResults=15)\n           >>> cl.search_lovers(request='new', orderCol='numVotes')\n\n   Note that the parameters are case-sensitive and that some of them\n   expect predefined values. This edge cases are all listed at the\n   `official API documentation <https://www.colourlovers.com/api>`__.\n\n\nResponse data\n~~~~~~~~~~~~~\n\nThe data from a query can be returned in three different formats: XML, JSON or as\na Python object.\n\nTo get the data in XML format a first positional argument (``raw_data``) has to be\nset to ``True``. This is so because the default raw data response format is XML.\n\n   .. code:: python\n\n           >>> resp = cl.search_palette(True, id=2323)\n           >>> resp\n           '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\n<palettes numResults=\"1\" totalResults=\"4567661\">\\n\\t<palette>\\n\\t\\t<id>2323</id>\\n\\t\\t<title><![CDATA[On the lake]]></title>\\n\\t\\t<userName><![CDATA[viatora]]></userName>\\n\\t\\t<numViews>529</numViews>\\n\\t\\t<numVotes>12</numVotes>\\n\\t\\t<numComments>3</numComments>\\n\\t\\t<numHearts>0</numHearts>\\n\\t\\t<rank>0</rank>\\n\\t\\t<dateCreated>2005-08-24 10:44:11</dateCreated>\\n\\t\\t<colors>\\n\\t\\t\\t<hex>E6F0F7</hex>\\n\\t\\t\\t<hex>97A4B2</hex>\\n\\t\\t\\t<hex>5F0609</hex>\\n\\t\\t\\t<hex>766F59</hex>\\n\\t\\t\\t<hex>989383</hex>\\n\\t\\t</colors>\\n\\t\\t<description><![CDATA[I-MOO\\r\\n<div style=\"width: 300px; text-align: center;\"><a href=\"http://www.colourlovers.com/contests/moo/minicard/2291466\" target=\"_blank\" style=\"display: block; margin-bottom: 5px; width: 300px; height: 120px; -moz-box-shadow: 0 1px 4px #d1d1d1; -webkit-box-shadow: 0 1px 4px #d1d1d1; box-shadow: 0 1px 4px #d1d1d1; filter: progid:DXImageTransform.Microsoft.Shadow(Strength=1, Direction=180, Color=]]></description>\\n\\t\\t<url><![CDATA[http://www.colourlovers.com/palette/2323/On_the_lake]]></url>\\n\\t\\t<imageUrl><![CDATA[http://www.colourlovers.com/paletteImg/E6F0F7/97A4B2/5F0609/766F59/989383/On_the_lake.png]]></imageUrl>\\n\\t\\t<badgeUrl><![CDATA[http://www.colourlovers.com/images/badges/p/2/2323_On_the_lake.png]]></badgeUrl>\\n\\t\\t<apiUrl>http://www.colourlovers.com/api/palette/2323</apiUrl>\\n\\t</palette>\\n</palettes>'\n\nTo get the data in JSON format, a part from specifying that the response should be returned\nas raw data by setting the first positional argument to ``True``, it is necessary to include\nanother keyword parameter in the query specifying that the format of the response should be\nJSON (``format='json'``).\n\n   .. code:: python\n\n           >>> resp = cl.search_palette(True, id=2323, format='json')\n           >>> resp\n           '[\n             {\n              \"id\":2323,\n              \"title\":\"On the lake\",\n              \"userName\":\"viatora\",\n              \"numViews\":529,\n              \"numVotes\":12,\n              \"numComments\":3,\n              \"numHearts\":0,\n              \"rank\":0,\n              \"dateCreated\":\"2005-08-24 10:44:11\",\n              \"colors\":[\"E6F0F7\",\"97A4B2\",\"5F0609\",\"766F59\",\"989383\"],\n              \"description\":\"I-MOO\\\\r\\\\n<div style=\\\\\"width: 300px; text-align: center;\\\\\"><a href=\\\\\"http:\\\\/\\\\/www.colourlovers.com\\\\/contests\\\\/moo\\\\/minicard\\\\/2291466\\\\\" target=\\\\\"_blank\\\\\" style=\\\\\"display: block; margin-bottom: 5px; width: 300px; height: 120px; -moz-box-shadow: 0 1px 4px #d1d1d1; -webkit-box-shadow: 0 1px 4px #d1d1d1; box-shadow: 0 1px 4px #d1d1d1; filter: progid:DXImageTransform.Microsoft.Shadow(Strength=1, Direction=180, Color=\",\n              \"url\":\"http:\\\\/\\\\/www.colourlovers.com\\\\/palette\\\\/2323\\\\/On_the_lake\",\n              \"imageUrl\":\"http:\\\\/\\\\/www.colourlovers.com\\\\/paletteImg\\\\/E6F0F7\\\\/97A4B2\\\\/5F0609\\\\/766F59\\\\/989383\\\\/On_the_lake.png\",\n              \"badgeUrl\":\"http:\\\\/\\\\/www.colourlovers.com\\\\/images\\\\/badges\\\\/p\\\\/2\\\\/2323_On_the_lake.png\",\n              \"apiUrl\":\"http:\\\\/\\\\/www.colourlovers.com\\\\/api\\\\/palette\\\\/2323\"\n             }\n            ]'\n\nFinally, if the parameter raw data is not set or set to ``False`` then the data will be obtained\nas a Python object (which is the recommended way). If the response of a query contains more than\none object - for example, when querying for palettes - then each object in the response will be\nmapped to a Python object. Finally, when the response data is obtained as Python objects it will\nalways come inside of a list for consistency reasons among methods, even if the response contains\na single object.\n\n   .. code:: python\n\n           >>> resp = cl.search_palette(id=2323)\n           >>> resp\n           [<colourlovers.data_containers.Palette object at 0x7fc64a87f0f0>]\n           >>> resp =  cl.search_palettes(request='top', keywords='river')\n           >>> resp\n           [<colourlovers.data_containers.Palette object at 0x7fc64a569ef0>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a569f28>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a569f60>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a569f98>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a569fd0>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a562048>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a562080>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a5620b8>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a5620f0>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a562128>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a562160>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a562198>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a5621d0>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a562208>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a562240>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a562278>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a5622b0>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a5622e8>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a562320>,\n            <colourlovers.data_containers.Palette object at 0x7fc64a562358>]\n\n\nEach of this objects (Lover, Palette, Pattern, Color, Stats) provides an attribute - named following PEP8\nstyle guidelines - for each of the fields present in the response. Refer to the `official API documentation <https://www.colourlovers.com/api>`__\nto see which fields (Example Result sections) are present for each object. As an example:\n\n   .. code:: python\n\n           >>> p = cl.search_pattern(id=2323)\n           >>> p\n           [<colourlovers.data_containers.Pattern object at 0x7fcf64ae4a20>]\n           >>> vars(p[0])\n           {\n               'id': 2323,\n               'title': 'inspiration',\n               'username': 'daisyjean911',\n               'num_views': 328,\n               'num_votes': 0,\n               'num_comments': 0,\n               'num_hearts': 0,\n               'rank': 0,\n               'date_created': '2007-12-10 12:19:14',\n               'description': '<a href=\"http://www.colourlovers.com/palette/2285499/Nestled\" target=\"_blank\"><img src=\"http://www.colourlovers.com/images/badges/pw/2285/2285499_Nestled.png\" style=\"width: 240px; height: 120px; border: 0 none;\" alt=\"Nestled\" /></a>\\r\\n<div style=\"width: 300px; text-align: center;\"><a href=\"http://www.colourlovers.com/contests/moo/minicard/2285499\" target=\"_blank\" style=\"display: block; margin-bottom: 5px; width: 300px; height: 120px; -moz-box-shadow: 0 1px 4px #d1d1d1; -webkit-box-shadow: 0 1px 4px #d1d1d1; box-shadow: 0 1px 4px #d1d1d1; filter: progid:DXImageTransform.Microsoft.Shadow(Strength=1, Direction=180, Color=',\n               'url': 'http://www.colourlovers.com/pattern/2323/inspiration',\n               'image_url': 'http://colourlovers.com.s3.amazonaws.com/images/patterns/2/2323.png',\n               'badge_url': 'http://www.colourlovers.com/images/badges/n/2/2323_inspiration.png',\n               'api_url': 'http://www.colourlovers.com/api/pattern/2323',\n               'colors': ['97BEC9', 'AB2B91', '76A379', 'ABD66B'],\n               'rgb_colors': [(151, 190, 201), (171, 43, 145), (118, 163, 121), (171, 214, 107)],\n               'num_colors': 4\n           }\n           >>> pattern = p[0]\n           >>> pattern.username\n           'daisyjean911'\n           >>> pattern.colors\n           ['97BEC9', 'AB2B91', '76A379', 'ABD66B']\n           >>> pattern.num_views\n           328\n           >>> pattern.id\n           2323\n\n\nOther possible sources for color palettes\n-----------------------------------------\n\n1. https://www.colr.org/api.html - (https://www.colr.org/)\n2. https://www.pictaculous.com/api/ - (https://www.pictaculous.com/)\n3. It is also worth mentioning\n   https://github.com/elbaschid/python-colourlovers\n\n\nColourLovers API wrapper CHANGELOG\n==================================\n\n\nAlpha version (unreleased)\n--------------------------\n\n\n**Added**\n\n- #13 Issue and Pull Request templates\n- #22 Documentation: Wrapper usage in README\n- #22 Support search by id when searching for one palette or pattern\n- #22 Support search by username one searching for one user (Lover)\n- #22 Support search by hexvalue when searching for one color\n- #24 Improve usage explanation in the README\n\n**Deleted**\n\n\n**Changed**\n\n- #15 Reduce amount of duplicated code amongst data-holder classes\n- #19 Change names of files and folders\n\n**Fixed**\n\n- #14 When making a query the type of raw-data is checked. In case it is not a boolean value an exception is raised\n- #23 Fix data loss when creating Python container objects\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/juangallostra/Colourlovers-API-wrapper/archive/0.1.9.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/juangallostra/Colourlovers-API-wrapper", "keywords": "color,colour,palette,api,colourlovers,wrapper", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "colourlovers", "package_url": "https://pypi.org/project/colourlovers/", "platform": "", "project_url": "https://pypi.org/project/colourlovers/", "project_urls": {"Download": "https://github.com/juangallostra/Colourlovers-API-wrapper/archive/0.1.9.tar.gz", "Homepage": "https://github.com/juangallostra/Colourlovers-API-wrapper"}, "release_url": "https://pypi.org/project/colourlovers/0.1.9/", "requires_dist": ["Pillow"], "requires_python": "", "summary": "A python wrapper for ColourLovers API", "version": "0.1.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"colourlovers-api-wrapper\">\n<h2>Colourlovers-API-wrapper</h2>\n<a href=\"https://pypi.org/project/colourlovers/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/colourlovers.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c804c516970bffcb6b92f229c74c4c9468af0ce3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f6c6f75726c6f766572732e737667\"></a>\n<a href=\"https://github.com/juangallostra/Colourlovers-API-wrapper/pulls\" rel=\"nofollow\"><img alt=\"https://img.shields.io/github/issues-pr/juangallostra/Colourlovers-API-wrapper.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8b853414cf3bc9ed645a886d3ad80902dfabd81/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f6a75616e67616c6c6f737472612f436f6c6f75726c6f766572732d4150492d777261707065722e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://github.com/juangallostra/Colourlovers-API-wrapper/issues\" rel=\"nofollow\"><img alt=\"https://img.shields.io/github/issues/juangallostra/Colourlovers-API-wrapper.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7e9d9cdb882f416006ad7890734972f120cb7d98/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6a75616e67616c6c6f737472612f436f6c6f75726c6f766572732d4150492d777261707065722e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://github.com/juangallostra/Colourlovers-API-wrapper\" rel=\"nofollow\"><img alt=\"https://img.shields.io/github/contributors/juangallostra/Colourlovers-API-wrapper.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/caabf6b81a2e7aee43bc6cfb279a7cd5dc4330d2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6a75616e67616c6c6f737472612f436f6c6f75726c6f766572732d4150492d777261707065722e7376673f7374796c653d666c61742d737175617265\"></a>\n<p>Python wrapper for the <a href=\"https://www.colourlovers.com/api\" rel=\"nofollow\">API</a>\nprovided by www.colourlovers.com</p>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li>Python 3 (Check <a href=\"https://github.com/elbaschid/python-colourlovers\" rel=\"nofollow\">elbaschid\u2019s\nwrapper</a> if\nusing Python 2)</li>\n<li>Pillow</li>\n</ul>\n</div>\n<div id=\"how-to-use-it\">\n<h3>How to use it</h3>\n<div id=\"import-the-wrapper\">\n<h4>Import the wrapper</h4>\n<ol>\n<li><p>Download the wrapper via <tt>pip</tt>:\n<tt>pip install colourlovers</tt>\nAlternatively, clone the repository by typing in a terminal:\n<tt>git clone <span class=\"pre\">https://github.com/juangallostra/Colourlovers-API-wrapper.git</span></tt></p>\n</li>\n<li><p>Start a Python terminal session in the directory where you cloned the\nrepository</p>\n</li>\n<li><p>Import the wrapper by:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">colourlovers</span> <span class=\"kn\">import</span> <span class=\"n\">clapi</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span> <span class=\"o\">=</span> <span class=\"n\">clapi</span><span class=\"o\">.</span><span class=\"n\">ColourLovers</span><span class=\"p\">()</span>\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"queries\">\n<h4>Queries</h4>\n<p>Once we have created the API wrapper object (<tt>cl</tt> in the present\ncase) we are ready to query the API. Note that a query, even if it\nis for a single object, always returns a list. The ColourLovers API\nqueries are structured in three levels:</p>\n<ol>\n<li><p>Object of the query. The possible query objects are: Color/s,\nPattern/s, Palette/s, Lover/s or stats. Note that most of the objects\ncan be queried in plural or in singular. The wrapper offers a\ndifferent method for each object, all of them being:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_palette</span><span class=\"p\">()</span>  <span class=\"c1\"># Query for a single palette</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_pattern</span><span class=\"p\">()</span>  <span class=\"c1\"># Query for a single pattern</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_color</span><span class=\"p\">()</span>  <span class=\"c1\"># Query for a single color</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_lover</span><span class=\"p\">()</span>  <span class=\"c1\"># Query for a single user</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_palettes</span><span class=\"p\">()</span>  <span class=\"c1\"># Query for multiple palettes</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_patterns</span><span class=\"p\">()</span>  <span class=\"c1\"># Query for multiple patterns</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_colors</span><span class=\"p\">()</span>  <span class=\"c1\"># Query for multiple colors</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_lovers</span><span class=\"p\">()</span>  <span class=\"c1\"># Query for multiple users</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_stats</span><span class=\"p\">()</span>  <span class=\"c1\"># Query for a single pattern</span>\n</pre>\n<p>Each of these methods only accepts keyword arguments. Optionally, a\nfirst boolean positional argument can be passed specifying whether\nthe response of the query should be returned as raw data or as a\nPython object. By default the response of a query will be returned as\na Python object. Hence, the general form of a query to the API is:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_patterns</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"p\">)</span>  <span class=\"c1\"># Response will be returned as raw data</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_patterns</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>  <span class=\"c1\"># Response will be returned as a Python object</span>\n</pre>\n<p>We will get back to this later.</p>\n</li>\n<li><p>Type of the query. These are general, normally non-object dependent types.\nHowever, not all the types are supported by all the objects. The possible\nquery types and the keyword used to specify them for each type of object are:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Object</th>\n<th>Keyword</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Palettes</td>\n<td><tt>request</tt></td>\n<td><tt>new</tt>, <tt>top</tt>, <tt>random</tt></td>\n</tr>\n<tr><td>Patterns</td>\n<td><tt>request</tt></td>\n<td><tt>new</tt>, <tt>top</tt>, <tt>random</tt></td>\n</tr>\n<tr><td>Colors</td>\n<td><tt>request</tt></td>\n<td><tt>new</tt>, <tt>top</tt>, <tt>random</tt></td>\n</tr>\n<tr><td>Lovers</td>\n<td><tt>request</tt></td>\n<td><tt>new</tt>, <tt>top</tt></td>\n</tr>\n<tr><td>Palette</td>\n<td><tt>id</tt></td>\n<td>valid id as <tt>int</tt> or <tt>str</tt></td>\n</tr>\n<tr><td>Pattern</td>\n<td><tt>id</tt></td>\n<td>valid id as <tt>int</tt> or <tt>str</tt></td>\n</tr>\n<tr><td>Color</td>\n<td><tt>hexvalue</tt></td>\n<td>valid hex color value as <tt>str</tt></td>\n</tr>\n<tr><td>Lover</td>\n<td><tt>username</tt></td>\n<td>valid username <tt>str</tt></td>\n</tr>\n<tr><td>Stats</td>\n<td><tt>request</tt></td>\n<td><tt>colors</tt>, <tt>palettes</tt>, <tt>patterns</tt>, <tt>lovers</tt></td>\n</tr>\n</tbody>\n</table>\n<p>The <tt>random</tt> query type is exclusive. When using it, no other\nparameters can be specified. Some examples of valid queries are:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_patterns</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">=</span><span class=\"s1\">'new'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_colors</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">=</span><span class=\"s1\">'top'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_stats</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">=</span><span class=\"s1\">'patterns'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_palettes</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">=</span><span class=\"s1\">'random'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_pattern</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1145</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_lover</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'whatever'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_color</span><span class=\"p\">(</span><span class=\"n\">hexvalue</span><span class=\"o\">=</span><span class=\"s1\">'C6C5AC'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>Object specific query parameters. These depend on the object of the\nquery and are also specified as keyword arguments. To see which are\nthe parameters supported by each object follow the links to the\nofficial API page in the following table. Note the differences in the\navailable parameters when querying for multiple objects or for a\nsingle object.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Object</th>\n<th>Supported Types</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Palette/s</td>\n<td><a href=\"https://www.colourlovers.com/api#palettes\" rel=\"nofollow\">Parameters</a></td>\n</tr>\n<tr><td>Pattern/s</td>\n<td><a href=\"https://www.colourlovers.com/api#patterns\" rel=\"nofollow\">Parameters</a></td>\n</tr>\n<tr><td>Color/s</td>\n<td><a href=\"https://www.colourlovers.com/api#colors\" rel=\"nofollow\">Parameters</a></td>\n</tr>\n<tr><td>Lover/s</td>\n<td><a href=\"https://www.colourlovers.com/api#lovers\" rel=\"nofollow\">Parameters</a></td>\n</tr>\n<tr><td>Stats</td>\n<td><a href=\"https://www.colourlovers.com/api#stats\" rel=\"nofollow\">Parameters</a></td>\n</tr>\n</tbody>\n</table>\n<p>Examples of valid queries are:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_palettes</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">=</span><span class=\"s1\">'top'</span><span class=\"p\">,</span> <span class=\"n\">keywords</span><span class=\"o\">=</span><span class=\"s1\">'river'</span><span class=\"p\">,</span> <span class=\"n\">numResults</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_lovers</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">=</span><span class=\"s1\">'new'</span><span class=\"p\">,</span> <span class=\"n\">orderCol</span><span class=\"o\">=</span><span class=\"s1\">'numVotes'</span><span class=\"p\">)</span>\n</pre>\n<p>Note that the parameters are case-sensitive and that some of them\nexpect predefined values. This edge cases are all listed at the\n<a href=\"https://www.colourlovers.com/api\" rel=\"nofollow\">official API documentation</a>.</p>\n</li>\n</ol>\n</div>\n<div id=\"response-data\">\n<h4>Response data</h4>\n<p>The data from a query can be returned in three different formats: XML, JSON or as\na Python object.</p>\n<p>To get the data in XML format a first positional argument (<tt>raw_data</tt>) has to be\nset to <tt>True</tt>. This is so because the default raw data response format is XML.</p>\n<blockquote>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_palette</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">2323</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">resp</span>\n<span class=\"s1\">'&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?&gt;</span><span class=\"se\">\\n</span><span class=\"s1\">&lt;palettes numResults=\"1\" totalResults=\"4567661\"&gt;</span><span class=\"se\">\\n\\t</span><span class=\"s1\">&lt;palette&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;id&gt;2323&lt;/id&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;title&gt;&lt;![CDATA[On the lake]]&gt;&lt;/title&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;userName&gt;&lt;![CDATA[viatora]]&gt;&lt;/userName&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;numViews&gt;529&lt;/numViews&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;numVotes&gt;12&lt;/numVotes&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;numComments&gt;3&lt;/numComments&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;numHearts&gt;0&lt;/numHearts&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;rank&gt;0&lt;/rank&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;dateCreated&gt;2005-08-24 10:44:11&lt;/dateCreated&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;colors&gt;</span><span class=\"se\">\\n\\t\\t\\t</span><span class=\"s1\">&lt;hex&gt;E6F0F7&lt;/hex&gt;</span><span class=\"se\">\\n\\t\\t\\t</span><span class=\"s1\">&lt;hex&gt;97A4B2&lt;/hex&gt;</span><span class=\"se\">\\n\\t\\t\\t</span><span class=\"s1\">&lt;hex&gt;5F0609&lt;/hex&gt;</span><span class=\"se\">\\n\\t\\t\\t</span><span class=\"s1\">&lt;hex&gt;766F59&lt;/hex&gt;</span><span class=\"se\">\\n\\t\\t\\t</span><span class=\"s1\">&lt;hex&gt;989383&lt;/hex&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;/colors&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;description&gt;&lt;![CDATA[I-MOO</span><span class=\"se\">\\r\\n</span><span class=\"s1\">&lt;div style=\"width: 300px; text-align: center;\"&gt;&lt;a href=\"http://www.colourlovers.com/contests/moo/minicard/2291466\" target=\"_blank\" style=\"display: block; margin-bottom: 5px; width: 300px; height: 120px; -moz-box-shadow: 0 1px 4px #d1d1d1; -webkit-box-shadow: 0 1px 4px #d1d1d1; box-shadow: 0 1px 4px #d1d1d1; filter: progid:DXImageTransform.Microsoft.Shadow(Strength=1, Direction=180, Color=]]&gt;&lt;/description&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;url&gt;&lt;![CDATA[http://www.colourlovers.com/palette/2323/On_the_lake]]&gt;&lt;/url&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;imageUrl&gt;&lt;![CDATA[http://www.colourlovers.com/paletteImg/E6F0F7/97A4B2/5F0609/766F59/989383/On_the_lake.png]]&gt;&lt;/imageUrl&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;badgeUrl&gt;&lt;![CDATA[http://www.colourlovers.com/images/badges/p/2/2323_On_the_lake.png]]&gt;&lt;/badgeUrl&gt;</span><span class=\"se\">\\n\\t\\t</span><span class=\"s1\">&lt;apiUrl&gt;http://www.colourlovers.com/api/palette/2323&lt;/apiUrl&gt;</span><span class=\"se\">\\n\\t</span><span class=\"s1\">&lt;/palette&gt;</span><span class=\"se\">\\n</span><span class=\"s1\">&lt;/palettes&gt;'</span>\n</pre>\n</blockquote>\n<p>To get the data in JSON format, a part from specifying that the response should be returned\nas raw data by setting the first positional argument to <tt>True</tt>, it is necessary to include\nanother keyword parameter in the query specifying that the format of the response should be\nJSON (<tt><span class=\"pre\">format='json'</span></tt>).</p>\n<blockquote>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_palette</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">2323</span><span class=\"p\">,</span> <span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">'json'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">resp</span>\n<span class=\"s1\">'[</span>\n  <span class=\"p\">{</span>\n   <span class=\"s2\">\"id\"</span><span class=\"p\">:</span><span class=\"mi\">2323</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"title\"</span><span class=\"p\">:</span><span class=\"s2\">\"On the lake\"</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"userName\"</span><span class=\"p\">:</span><span class=\"s2\">\"viatora\"</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"numViews\"</span><span class=\"p\">:</span><span class=\"mi\">529</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"numVotes\"</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"numComments\"</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"numHearts\"</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"rank\"</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"dateCreated\"</span><span class=\"p\">:</span><span class=\"s2\">\"2005-08-24 10:44:11\"</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"colors\"</span><span class=\"p\">:[</span><span class=\"s2\">\"E6F0F7\"</span><span class=\"p\">,</span><span class=\"s2\">\"97A4B2\"</span><span class=\"p\">,</span><span class=\"s2\">\"5F0609\"</span><span class=\"p\">,</span><span class=\"s2\">\"766F59\"</span><span class=\"p\">,</span><span class=\"s2\">\"989383\"</span><span class=\"p\">],</span>\n   <span class=\"s2\">\"description\"</span><span class=\"p\">:</span><span class=\"s2\">\"I-MOO</span><span class=\"se\">\\\\</span><span class=\"s2\">r</span><span class=\"se\">\\\\</span><span class=\"s2\">n&lt;div style=</span><span class=\"se\">\\\\</span><span class=\"s2\">\"</span><span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"mi\">300</span><span class=\"n\">px</span><span class=\"p\">;</span> <span class=\"n\">text</span><span class=\"o\">-</span><span class=\"n\">align</span><span class=\"p\">:</span> <span class=\"n\">center</span><span class=\"p\">;</span>\\\\<span class=\"s2\">\"&gt;&lt;a href=</span><span class=\"se\">\\\\</span><span class=\"s2\">\"</span><span class=\"n\">http</span><span class=\"p\">:</span>\\\\<span class=\"o\">/</span>\\\\<span class=\"o\">/</span><span class=\"n\">www</span><span class=\"o\">.</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">com</span>\\\\<span class=\"o\">/</span><span class=\"n\">contests</span>\\\\<span class=\"o\">/</span><span class=\"n\">moo</span>\\\\<span class=\"o\">/</span><span class=\"n\">minicard</span>\\\\<span class=\"o\">/</span><span class=\"mi\">2291466</span>\\\\<span class=\"s2\">\" target=</span><span class=\"se\">\\\\</span><span class=\"s2\">\"</span><span class=\"n\">_blank</span>\\\\<span class=\"s2\">\" style=</span><span class=\"se\">\\\\</span><span class=\"s2\">\"</span><span class=\"n\">display</span><span class=\"p\">:</span> <span class=\"n\">block</span><span class=\"p\">;</span> <span class=\"n\">margin</span><span class=\"o\">-</span><span class=\"n\">bottom</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"n\">px</span><span class=\"p\">;</span> <span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"mi\">300</span><span class=\"n\">px</span><span class=\"p\">;</span> <span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"mi\">120</span><span class=\"n\">px</span><span class=\"p\">;</span> <span class=\"o\">-</span><span class=\"n\">moz</span><span class=\"o\">-</span><span class=\"n\">box</span><span class=\"o\">-</span><span class=\"n\">shadow</span><span class=\"p\">:</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span><span class=\"n\">px</span> <span class=\"mi\">4</span><span class=\"n\">px</span> <span class=\"c1\">#d1d1d1; -webkit-box-shadow: 0 1px 4px #d1d1d1; box-shadow: 0 1px 4px #d1d1d1; filter: progid:DXImageTransform.Microsoft.Shadow(Strength=1, Direction=180, Color=\",</span>\n   <span class=\"s2\">\"url\"</span><span class=\"p\">:</span><span class=\"s2\">\"http:</span><span class=\"se\">\\\\</span><span class=\"s2\">/</span><span class=\"se\">\\\\</span><span class=\"s2\">/www.colourlovers.com</span><span class=\"se\">\\\\</span><span class=\"s2\">/palette</span><span class=\"se\">\\\\</span><span class=\"s2\">/2323</span><span class=\"se\">\\\\</span><span class=\"s2\">/On_the_lake\"</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"imageUrl\"</span><span class=\"p\">:</span><span class=\"s2\">\"http:</span><span class=\"se\">\\\\</span><span class=\"s2\">/</span><span class=\"se\">\\\\</span><span class=\"s2\">/www.colourlovers.com</span><span class=\"se\">\\\\</span><span class=\"s2\">/paletteImg</span><span class=\"se\">\\\\</span><span class=\"s2\">/E6F0F7</span><span class=\"se\">\\\\</span><span class=\"s2\">/97A4B2</span><span class=\"se\">\\\\</span><span class=\"s2\">/5F0609</span><span class=\"se\">\\\\</span><span class=\"s2\">/766F59</span><span class=\"se\">\\\\</span><span class=\"s2\">/989383</span><span class=\"se\">\\\\</span><span class=\"s2\">/On_the_lake.png\"</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"badgeUrl\"</span><span class=\"p\">:</span><span class=\"s2\">\"http:</span><span class=\"se\">\\\\</span><span class=\"s2\">/</span><span class=\"se\">\\\\</span><span class=\"s2\">/www.colourlovers.com</span><span class=\"se\">\\\\</span><span class=\"s2\">/images</span><span class=\"se\">\\\\</span><span class=\"s2\">/badges</span><span class=\"se\">\\\\</span><span class=\"s2\">/p</span><span class=\"se\">\\\\</span><span class=\"s2\">/2</span><span class=\"se\">\\\\</span><span class=\"s2\">/2323_On_the_lake.png\"</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"apiUrl\"</span><span class=\"p\">:</span><span class=\"s2\">\"http:</span><span class=\"se\">\\\\</span><span class=\"s2\">/</span><span class=\"se\">\\\\</span><span class=\"s2\">/www.colourlovers.com</span><span class=\"se\">\\\\</span><span class=\"s2\">/api</span><span class=\"se\">\\\\</span><span class=\"s2\">/palette</span><span class=\"se\">\\\\</span><span class=\"s2\">/2323\"</span>\n  <span class=\"p\">}</span>\n <span class=\"p\">]</span><span class=\"s1\">'</span>\n</pre>\n</blockquote>\n<p>Finally, if the parameter raw data is not set or set to <tt>False</tt> then the data will be obtained\nas a Python object (which is the recommended way). If the response of a query contains more than\none object - for example, when querying for palettes - then each object in the response will be\nmapped to a Python object. Finally, when the response data is obtained as Python objects it will\nalways come inside of a list for consistency reasons among methods, even if the response contains\na single object.</p>\n<blockquote>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_palette</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">2323</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">resp</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a87f0f0</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">resp</span> <span class=\"o\">=</span>  <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_palettes</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">=</span><span class=\"s1\">'top'</span><span class=\"p\">,</span> <span class=\"n\">keywords</span><span class=\"o\">=</span><span class=\"s1\">'river'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">resp</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a569ef0</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a569f28</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a569f60</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a569f98</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a569fd0</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a562048</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a562080</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a5620b8</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a5620f0</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a562128</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a562160</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a562198</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a5621d0</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a562208</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a562240</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a562278</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a5622b0</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a5622e8</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a562320</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Palette</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fc64a562358</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n</pre>\n</blockquote>\n<p>Each of this objects (Lover, Palette, Pattern, Color, Stats) provides an attribute - named following PEP8\nstyle guidelines - for each of the fields present in the response. Refer to the <a href=\"https://www.colourlovers.com/api\" rel=\"nofollow\">official API documentation</a>\nto see which fields (Example Result sections) are present for each object. As an example:</p>\n<blockquote>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">search_pattern</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">2323</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">colourlovers</span><span class=\"o\">.</span><span class=\"n\">data_containers</span><span class=\"o\">.</span><span class=\"n\">Pattern</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fcf64ae4a20</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">vars</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"p\">{</span>\n    <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">2323</span><span class=\"p\">,</span>\n    <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'inspiration'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'username'</span><span class=\"p\">:</span> <span class=\"s1\">'daisyjean911'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'num_views'</span><span class=\"p\">:</span> <span class=\"mi\">328</span><span class=\"p\">,</span>\n    <span class=\"s1\">'num_votes'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s1\">'num_comments'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s1\">'num_hearts'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s1\">'rank'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s1\">'date_created'</span><span class=\"p\">:</span> <span class=\"s1\">'2007-12-10 12:19:14'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'&lt;a href=\"http://www.colourlovers.com/palette/2285499/Nestled\" target=\"_blank\"&gt;&lt;img src=\"http://www.colourlovers.com/images/badges/pw/2285/2285499_Nestled.png\" style=\"width: 240px; height: 120px; border: 0 none;\" alt=\"Nestled\" /&gt;&lt;/a&gt;</span><span class=\"se\">\\r\\n</span><span class=\"s1\">&lt;div style=\"width: 300px; text-align: center;\"&gt;&lt;a href=\"http://www.colourlovers.com/contests/moo/minicard/2285499\" target=\"_blank\" style=\"display: block; margin-bottom: 5px; width: 300px; height: 120px; -moz-box-shadow: 0 1px 4px #d1d1d1; -webkit-box-shadow: 0 1px 4px #d1d1d1; box-shadow: 0 1px 4px #d1d1d1; filter: progid:DXImageTransform.Microsoft.Shadow(Strength=1, Direction=180, Color='</span><span class=\"p\">,</span>\n    <span class=\"s1\">'url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://www.colourlovers.com/pattern/2323/inspiration'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'image_url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://colourlovers.com.s3.amazonaws.com/images/patterns/2/2323.png'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'badge_url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://www.colourlovers.com/images/badges/n/2/2323_inspiration.png'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'api_url'</span><span class=\"p\">:</span> <span class=\"s1\">'http://www.colourlovers.com/api/pattern/2323'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'colors'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'97BEC9'</span><span class=\"p\">,</span> <span class=\"s1\">'AB2B91'</span><span class=\"p\">,</span> <span class=\"s1\">'76A379'</span><span class=\"p\">,</span> <span class=\"s1\">'ABD66B'</span><span class=\"p\">],</span>\n    <span class=\"s1\">'rgb_colors'</span><span class=\"p\">:</span> <span class=\"p\">[(</span><span class=\"mi\">151</span><span class=\"p\">,</span> <span class=\"mi\">190</span><span class=\"p\">,</span> <span class=\"mi\">201</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">171</span><span class=\"p\">,</span> <span class=\"mi\">43</span><span class=\"p\">,</span> <span class=\"mi\">145</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">118</span><span class=\"p\">,</span> <span class=\"mi\">163</span><span class=\"p\">,</span> <span class=\"mi\">121</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">171</span><span class=\"p\">,</span> <span class=\"mi\">214</span><span class=\"p\">,</span> <span class=\"mi\">107</span><span class=\"p\">)],</span>\n    <span class=\"s1\">'num_colors'</span><span class=\"p\">:</span> <span class=\"mi\">4</span>\n<span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pattern</span><span class=\"o\">.</span><span class=\"n\">username</span>\n<span class=\"s1\">'daisyjean911'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pattern</span><span class=\"o\">.</span><span class=\"n\">colors</span>\n<span class=\"p\">[</span><span class=\"s1\">'97BEC9'</span><span class=\"p\">,</span> <span class=\"s1\">'AB2B91'</span><span class=\"p\">,</span> <span class=\"s1\">'76A379'</span><span class=\"p\">,</span> <span class=\"s1\">'ABD66B'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pattern</span><span class=\"o\">.</span><span class=\"n\">num_views</span>\n<span class=\"mi\">328</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pattern</span><span class=\"o\">.</span><span class=\"n\">id</span>\n<span class=\"mi\">2323</span>\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"other-possible-sources-for-color-palettes\">\n<h3>Other possible sources for color palettes</h3>\n<ol>\n<li><a href=\"https://www.colr.org/api.html\" rel=\"nofollow\">https://www.colr.org/api.html</a> - (<a href=\"https://www.colr.org/\" rel=\"nofollow\">https://www.colr.org/</a>)</li>\n<li><a href=\"https://www.pictaculous.com/api/\" rel=\"nofollow\">https://www.pictaculous.com/api/</a> - (<a href=\"https://www.pictaculous.com/\" rel=\"nofollow\">https://www.pictaculous.com/</a>)</li>\n<li>It is also worth mentioning\n<a href=\"https://github.com/elbaschid/python-colourlovers\" rel=\"nofollow\">https://github.com/elbaschid/python-colourlovers</a></li>\n</ol>\n</div>\n</div>\n<div id=\"colourlovers-api-wrapper-changelog\">\n<h2>ColourLovers API wrapper CHANGELOG</h2>\n<h2 id=\"alpha-version-unreleased\"><span class=\"section-subtitle\">Alpha version (unreleased)</span></h2>\n<p><strong>Added</strong></p>\n<ul>\n<li>#13 Issue and Pull Request templates</li>\n<li>#22 Documentation: Wrapper usage in README</li>\n<li>#22 Support search by id when searching for one palette or pattern</li>\n<li>#22 Support search by username one searching for one user (Lover)</li>\n<li>#22 Support search by hexvalue when searching for one color</li>\n<li>#24 Improve usage explanation in the README</li>\n</ul>\n<p><strong>Deleted</strong></p>\n<p><strong>Changed</strong></p>\n<ul>\n<li>#15 Reduce amount of duplicated code amongst data-holder classes</li>\n<li>#19 Change names of files and folders</li>\n</ul>\n<p><strong>Fixed</strong></p>\n<ul>\n<li>#14 When making a query the type of raw-data is checked. In case it is not a boolean value an exception is raised</li>\n<li>#23 Fix data loss when creating Python container objects</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3789152, "releases": {"0.1.7": [{"comment_text": "", "digests": {"md5": "aab5bf5bdb2672e99ef364d2e7e1ee6e", "sha256": "c21f2e10769153f2b3b106cceb0ee9d3dbbda9e45aae16f1f3d310370956a0cf"}, "downloads": -1, "filename": "colourlovers-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "aab5bf5bdb2672e99ef364d2e7e1ee6e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8651, "upload_time": "2018-04-19T18:14:23", "upload_time_iso_8601": "2018-04-19T18:14:23.248267Z", "url": "https://files.pythonhosted.org/packages/bc/2a/e24a5038f17fa62132a6f67dfb7a49d4d98d7fb8306122685af512f68c73/colourlovers-0.1.7-py3-none-any.whl", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "abb384f4688e5726336412f3969bd95c", "sha256": "e54145583c7d251a9c096d2896d892848afedc1e1542e0e7672173ccbdce7097"}, "downloads": -1, "filename": "colourlovers-0.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "abb384f4688e5726336412f3969bd95c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10929, "upload_time": "2018-04-22T15:33:52", "upload_time_iso_8601": "2018-04-22T15:33:52.048579Z", "url": "https://files.pythonhosted.org/packages/ed/8a/b48e599db17df2f22254ffdc6f6b919f5a0cb4da7a7dd49459aae587ef1e/colourlovers-0.1.9-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "abb384f4688e5726336412f3969bd95c", "sha256": "e54145583c7d251a9c096d2896d892848afedc1e1542e0e7672173ccbdce7097"}, "downloads": -1, "filename": "colourlovers-0.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "abb384f4688e5726336412f3969bd95c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10929, "upload_time": "2018-04-22T15:33:52", "upload_time_iso_8601": "2018-04-22T15:33:52.048579Z", "url": "https://files.pythonhosted.org/packages/ed/8a/b48e599db17df2f22254ffdc6f6b919f5a0cb4da7a7dd49459aae587ef1e/colourlovers-0.1.9-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:44:32 2020"}