{"info": {"author": "gr0und-s3ct0r", "author_email": "contact@groundsector.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "======\nCerber\n======\n\n.. image:: https://travis-ci.org/gr0und-s3ct0r/cerber.svg?branch=devel\n       :target: https://travis-ci.org/gr0und-s3ct0r/cerber\n.. image:: https://badge.fury.io/py/cerber.svg\n       :target: https://badge.fury.io/py/cerber\n\nA straightforward command line tool for generate seccomp json profile\n\nOverview\n========\nSeccomp (short for secure computing mode) is a computer security \nfacility in the Linux kernel.\nSeccomp allows a process to make a one-way transition into a \"secure\"\nstate where it cannot make any system calls except exit(),\nsigreturn(), read() and write() to already-open file descriptors.\nShould it attempt any other system calls, the kernel will terminate\nthe process with SIGKILL or SIGSYS.\nIn this sense, it does not virtualize the system's resources but isolates \nthe process from them entirely.\n\nSeccomp profile is used with by a lot of applications like:\n\n- docker\n- firefox\n- systemd\n- openssh\n- chrome\n- and more...\n\nCerber help you to generate seccomp profile that you can\nuse with docker per example.\n\nPrerequisites\n=============\n\n- Linux\n- Python3.5+\n- Strace\n\nInstall\n=======\n.. code:: shell\n\n    $ pip install cerber\n\nUsage\n=====\n\nGenerate a seccomp_profile.json in your current directory:\n\n.. code:: shell\n\n    $ cerber docker run hello-world\n    $ ls\n    seccomp_profile.json\n    $ cat seccomp_profile.json\n    {\n        \"defaultAction\": \"SCMP_ACT_ERRNO\", \n        \"architecture\": [\n            \"SCMP_ARCH_X86_64\", \n            \"SCMP_ARCH_X86\", \n            \"SCMP_ARCH_X32\"\n        ], \n        \"syscalls\": [\n            {\n                \"action\": \"SCMP_ACT_ALLOW\", \n                \"args\": [], \n                \"name\": \"read\"\n            }, \n            ...\n            {\n                \"action\": \"SCMP_ACT_ALLOW\", \n                \"args\": [], \n                \"name\": \"execve\"\n            }, \n            {\n                \"action\": \"SCMP_ACT_ALLOW\", \n                \"args\": [], \n                \"name\": \"arch_prctl\"\n            }\n        ]\n    }\n\nNow you can assign this seccomp profile to your container at run:\n\n.. code:: shell\n\n    $ docker run \\\n    --rm \\\n    --security-opt=\"no-new-privileges\" \\\n    --security-opt seccomp=seccomp_profile.json \\\n    hello-world # you can get the following output for docker hello world\n\n    Hello from Docker!\n    This message shows that your installation appears to be working correctly.\n\n    To generate this message, Docker took the following steps:\n    1. The Docker client contacted the Docker daemon.\n    ...\n    For more examples and ideas, visit:\n     https://docs.docker.com/engine/userguide/\n\nBecareful to generate seccomp profile with cerber on the same cpu architecture\nthat your production environment (where you want run your container).\n\nFeatures\n========\n\n- detect syscalls\n- generate seccomp profile from detected syscalls\n\nContribute\n==========\n\n.. code:: shell\n\n    $ git clone https://github.com/gr0und-s3ct0r/cerber\n    $ cd cerber\n    $ pipenv install pbr\n    $ pipenv shell # generate a virtual environment\n    $ python setup.py develop # install cerber in development mode\n    $ pip install -e .[test] # install testing dependencies\n    $ # make your changes\n    $ tox\n\nFurther readings\n================\n- `docker security seccomp documentation <https://docs.docker.com/engine/security/seccomp/#pass-a-profile-for-a-container>`_\n- `docker seccomp json format <https://antitree.com/2017/09/docker-seccomp-json-format/>`_\n- `docker no new privileges security flag <https://www.projectatomic.io/blog/2016/03/no-new-privs-docker/>`_\n\nOriginal Authors\n================\n- `S\u00e9bastien Boyron (dj4ngo) <https://github.com/dj4ngo>`_\n- `Herv\u00e9 Beraud (4383) <https://github.com/4383>`_\n\nCHANGES\n=======\n\n0.2.0\n-----\n\n* install from pypi\n* fix license classifier\n* update changelog\n\n0.1.0\n-----\n\n* adding build badge\n* fix pep8 errors\n* ignore pyc\n* fix pep8 errors\n* adding overview about seccomp\n* adding further readings\n* example on how to use security profil\n* fix filename output on documentation\n* fix install\n* fix contribute guide\n* update usage with seccomp.json file generated\n* use restructuredText for readme instead of markdown\n* packaging + TU + CI\n* introduce CI\n* keep strace statistics\n* add gitignore\n* rename tmpfile and create seccomp profile in a file\n* do not touch stdout and stderr to be transparent on execution\n* further reading and contributors\n* update doc with command\n* pass command to execute to bouncer\n* improve usage\n* rename tool\n* initialize repository\n\nHerv\u00e9 Beraud <herveberaud.pro@gmail.com>\nSebastien Boyron <sebastien@boyron.eu>\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gr0und-s3ct0r/cerber/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cerber", "package_url": "https://pypi.org/project/cerber/", "platform": "", "project_url": "https://pypi.org/project/cerber/", "project_urls": {"Homepage": "https://github.com/gr0und-s3ct0r/cerber/"}, "release_url": "https://pypi.org/project/cerber/0.3.0/", "requires_dist": ["fixtures; extra == 'test'", "tox; extra == 'test'"], "requires_python": "", "summary": "Command line tool to generate secure computing mode", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/gr0und-s3ct0r/cerber\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/gr0und-s3ct0r/cerber.svg?branch=devel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d01d7ab27f13fa204d230e37150a035deef0817/68747470733a2f2f7472617669732d63692e6f72672f677230756e642d7333637430722f6365726265722e7376673f6272616e63683d646576656c\"></a>\n<a href=\"https://badge.fury.io/py/cerber\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/cerber.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be6e817091dfc01c7119f0a79448793bd21e0d49/68747470733a2f2f62616467652e667572792e696f2f70792f6365726265722e737667\"></a>\n<p>A straightforward command line tool for generate seccomp json profile</p>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>Seccomp (short for secure computing mode) is a computer security\nfacility in the Linux kernel.\nSeccomp allows a process to make a one-way transition into a \u201csecure\u201d\nstate where it cannot make any system calls except exit(),\nsigreturn(), read() and write() to already-open file descriptors.\nShould it attempt any other system calls, the kernel will terminate\nthe process with SIGKILL or SIGSYS.\nIn this sense, it does not virtualize the system\u2019s resources but isolates\nthe process from them entirely.</p>\n<p>Seccomp profile is used with by a lot of applications like:</p>\n<ul>\n<li>docker</li>\n<li>firefox</li>\n<li>systemd</li>\n<li>openssh</li>\n<li>chrome</li>\n<li>and more\u2026</li>\n</ul>\n<p>Cerber help you to generate seccomp profile that you can\nuse with docker per example.</p>\n</div>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<ul>\n<li>Linux</li>\n<li>Python3.5+</li>\n<li>Strace</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>$ pip install cerber\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Generate a seccomp_profile.json in your current directory:</p>\n<pre>$ cerber docker run hello-world\n$ ls\nseccomp_profile.json\n$ cat seccomp_profile.json\n<span class=\"o\">{</span>\n    <span class=\"s2\">\"defaultAction\"</span>: <span class=\"s2\">\"SCMP_ACT_ERRNO\"</span>,\n    <span class=\"s2\">\"architecture\"</span>: <span class=\"o\">[</span>\n        <span class=\"s2\">\"SCMP_ARCH_X86_64\"</span>,\n        <span class=\"s2\">\"SCMP_ARCH_X86\"</span>,\n        <span class=\"s2\">\"SCMP_ARCH_X32\"</span>\n    <span class=\"o\">]</span>,\n    <span class=\"s2\">\"syscalls\"</span>: <span class=\"o\">[</span>\n        <span class=\"o\">{</span>\n            <span class=\"s2\">\"action\"</span>: <span class=\"s2\">\"SCMP_ACT_ALLOW\"</span>,\n            <span class=\"s2\">\"args\"</span>: <span class=\"o\">[]</span>,\n            <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"read\"</span>\n        <span class=\"o\">}</span>,\n        ...\n        <span class=\"o\">{</span>\n            <span class=\"s2\">\"action\"</span>: <span class=\"s2\">\"SCMP_ACT_ALLOW\"</span>,\n            <span class=\"s2\">\"args\"</span>: <span class=\"o\">[]</span>,\n            <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"execve\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"o\">{</span>\n            <span class=\"s2\">\"action\"</span>: <span class=\"s2\">\"SCMP_ACT_ALLOW\"</span>,\n            <span class=\"s2\">\"args\"</span>: <span class=\"o\">[]</span>,\n            <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"arch_prctl\"</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">]</span>\n<span class=\"o\">}</span>\n</pre>\n<p>Now you can assign this seccomp profile to your container at run:</p>\n<pre>$ docker run <span class=\"se\">\\\n</span>--rm <span class=\"se\">\\\n</span>--security-opt<span class=\"o\">=</span><span class=\"s2\">\"no-new-privileges\"</span> <span class=\"se\">\\\n</span>--security-opt <span class=\"nv\">seccomp</span><span class=\"o\">=</span>seccomp_profile.json <span class=\"se\">\\\n</span>hello-world <span class=\"c1\"># you can get the following output for docker hello world\n</span>\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n\nTo generate this message, Docker took the following steps:\n<span class=\"m\">1</span>. The Docker client contacted the Docker daemon.\n...\nFor more examples and ideas, visit:\n https://docs.docker.com/engine/userguide/\n</pre>\n<p>Becareful to generate seccomp profile with cerber on the same cpu architecture\nthat your production environment (where you want run your container).</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>detect syscalls</li>\n<li>generate seccomp profile from detected syscalls</li>\n</ul>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<pre>$ git clone https://github.com/gr0und-s3ct0r/cerber\n$ <span class=\"nb\">cd</span> cerber\n$ pipenv install pbr\n$ pipenv shell <span class=\"c1\"># generate a virtual environment\n</span>$ python setup.py develop <span class=\"c1\"># install cerber in development mode\n</span>$ pip install -e .<span class=\"o\">[</span>test<span class=\"o\">]</span> <span class=\"c1\"># install testing dependencies\n</span>$ <span class=\"c1\"># make your changes\n</span>$ tox\n</pre>\n</div>\n<div id=\"further-readings\">\n<h2>Further readings</h2>\n<ul>\n<li><a href=\"https://docs.docker.com/engine/security/seccomp/#pass-a-profile-for-a-container\" rel=\"nofollow\">docker security seccomp documentation</a></li>\n<li><a href=\"https://antitree.com/2017/09/docker-seccomp-json-format/\" rel=\"nofollow\">docker seccomp json format</a></li>\n<li><a href=\"https://www.projectatomic.io/blog/2016/03/no-new-privs-docker/\" rel=\"nofollow\">docker no new privileges security flag</a></li>\n</ul>\n</div>\n<div id=\"original-authors\">\n<h2>Original Authors</h2>\n<ul>\n<li><a href=\"https://github.com/dj4ngo\" rel=\"nofollow\">S\u00e9bastien Boyron (dj4ngo)</a></li>\n<li><a href=\"https://github.com/4383\" rel=\"nofollow\">Herv\u00e9 Beraud (4383)</a></li>\n</ul>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>0.2.0</h3>\n<ul>\n<li>install from pypi</li>\n<li>fix license classifier</li>\n<li>update changelog</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.0</h3>\n<ul>\n<li>adding build badge</li>\n<li>fix pep8 errors</li>\n<li>ignore pyc</li>\n<li>fix pep8 errors</li>\n<li>adding overview about seccomp</li>\n<li>adding further readings</li>\n<li>example on how to use security profil</li>\n<li>fix filename output on documentation</li>\n<li>fix install</li>\n<li>fix contribute guide</li>\n<li>update usage with seccomp.json file generated</li>\n<li>use restructuredText for readme instead of markdown</li>\n<li>packaging + TU + CI</li>\n<li>introduce CI</li>\n<li>keep strace statistics</li>\n<li>add gitignore</li>\n<li>rename tmpfile and create seccomp profile in a file</li>\n<li>do not touch stdout and stderr to be transparent on execution</li>\n<li>further reading and contributors</li>\n<li>update doc with command</li>\n<li>pass command to execute to bouncer</li>\n<li>improve usage</li>\n<li>rename tool</li>\n<li>initialize repository</li>\n</ul>\n<p>Herv\u00e9 Beraud &lt;<a href=\"mailto:herveberaud.pro%40gmail.com\">herveberaud<span>.</span>pro<span>@</span>gmail<span>.</span>com</a>&gt;\nSebastien Boyron &lt;<a href=\"mailto:sebastien%40boyron.eu\">sebastien<span>@</span>boyron<span>.</span>eu</a>&gt;</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3356549, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "638398f44282b0bb2e0e8ce61f873488", "sha256": "e180b80ed5ac62131f5a84bf53017c65874284e991cbb889b9a929e1f6ef03f5"}, "downloads": -1, "filename": "cerber-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "638398f44282b0bb2e0e8ce61f873488", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7169, "upload_time": "2017-11-20T22:24:56", "upload_time_iso_8601": "2017-11-20T22:24:56.265792Z", "url": "https://files.pythonhosted.org/packages/90/03/ff0c39d2e0f5bda8e7042b293f37a213d216586fbd37434b52265ad6bbcb/cerber-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b4f3e1e687bb7c159100113f478703c", "sha256": "cb713b66d60d65701371786cb7ff27f1258a0e95e608f15d7daa89192c8fc71e"}, "downloads": -1, "filename": "cerber-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8b4f3e1e687bb7c159100113f478703c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5884, "upload_time": "2017-11-20T22:24:57", "upload_time_iso_8601": "2017-11-20T22:24:57.690937Z", "url": "https://files.pythonhosted.org/packages/85/a1/6dda947de55009e3341b02919b71c01a7a3a79e8bdce757c7a11316f4f39/cerber-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5c17e445dd597a59a69d0241f20302e0", "sha256": "3647118ed8f75df4c3e5bea8ca93bcd0e7a33e75e023dac0fcc3f5874195c823"}, "downloads": -1, "filename": "cerber-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5c17e445dd597a59a69d0241f20302e0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7163, "upload_time": "2017-11-20T22:36:29", "upload_time_iso_8601": "2017-11-20T22:36:29.061669Z", "url": "https://files.pythonhosted.org/packages/21/48/b7fc373f7f6657b5c4533dfdfecc1766edd817eb8e7edb69a53b651a4ee8/cerber-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c578ed7ef2a06634bbf73cf0cf37e3ff", "sha256": "6a3ead698dac1ed13604e406435901b873c7bf2088391ae64283780b4361f2d3"}, "downloads": -1, "filename": "cerber-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c578ed7ef2a06634bbf73cf0cf37e3ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5916, "upload_time": "2017-11-20T22:36:30", "upload_time_iso_8601": "2017-11-20T22:36:30.579187Z", "url": "https://files.pythonhosted.org/packages/fe/5c/7516476839910c6e9f7428af33841524424cc67e3e227f5c399e2ac99e01/cerber-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "e3076b539df4d100d0cf8f7046b1048d", "sha256": "33e8648fd82254b98a01ac3fe47894318d078cee4a7d7dd2c164e9c4ec4ac9a9"}, "downloads": -1, "filename": "cerber-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e3076b539df4d100d0cf8f7046b1048d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8321, "upload_time": "2017-11-22T22:34:16", "upload_time_iso_8601": "2017-11-22T22:34:16.442041Z", "url": "https://files.pythonhosted.org/packages/a5/97/39225ba8bee90b190e4ba92bf8a5fada7d7e87c986466a4cd9e28a1a79e8/cerber-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae5ec8e8d0e03c75c7d139e7466c5ab4", "sha256": "0fb764047dc72f6a5a7d5ab1d6b1b01e9ba6719bdd9c0b084183ebf7f5709754"}, "downloads": -1, "filename": "cerber-0.3.0.tar.gz", "has_sig": false, "md5_digest": "ae5ec8e8d0e03c75c7d139e7466c5ab4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6445, "upload_time": "2017-11-22T22:34:18", "upload_time_iso_8601": "2017-11-22T22:34:18.822066Z", "url": "https://files.pythonhosted.org/packages/c4/ff/70c14d92ae8652bff21a238fb7079f98b7fb698abdda91d698c646cb21b3/cerber-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e3076b539df4d100d0cf8f7046b1048d", "sha256": "33e8648fd82254b98a01ac3fe47894318d078cee4a7d7dd2c164e9c4ec4ac9a9"}, "downloads": -1, "filename": "cerber-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e3076b539df4d100d0cf8f7046b1048d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8321, "upload_time": "2017-11-22T22:34:16", "upload_time_iso_8601": "2017-11-22T22:34:16.442041Z", "url": "https://files.pythonhosted.org/packages/a5/97/39225ba8bee90b190e4ba92bf8a5fada7d7e87c986466a4cd9e28a1a79e8/cerber-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae5ec8e8d0e03c75c7d139e7466c5ab4", "sha256": "0fb764047dc72f6a5a7d5ab1d6b1b01e9ba6719bdd9c0b084183ebf7f5709754"}, "downloads": -1, "filename": "cerber-0.3.0.tar.gz", "has_sig": false, "md5_digest": "ae5ec8e8d0e03c75c7d139e7466c5ab4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6445, "upload_time": "2017-11-22T22:34:18", "upload_time_iso_8601": "2017-11-22T22:34:18.822066Z", "url": "https://files.pythonhosted.org/packages/c4/ff/70c14d92ae8652bff21a238fb7079f98b7fb698abdda91d698c646cb21b3/cerber-0.3.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:47 2020"}