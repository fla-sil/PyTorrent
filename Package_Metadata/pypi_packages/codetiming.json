{"info": {"author": "Real Python", "author_email": "info@realpython.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Education", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Monitoring", "Typing :: Typed"], "description": "[![Python Timer Functions: Three Ways to Monitor Your Code](https://files.realpython.com/media/Three-Ways-to-Time-Your-Code_Watermarked.8d561fcc7a35.jpg)](https://realpython.com/python-timer)\n\n# `codetiming` - A flexible, customizable timer for your Python code\n\n[![Latest version](https://img.shields.io/pypi/v/codetiming.svg)](https://pypi.org/project/codetiming/)\n[![Python versions](https://img.shields.io/pypi/pyversions/codetiming.svg)](https://pypi.org/project/codetiming/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)\n[![CircleCI](https://circleci.com/gh/realpython/codetiming.svg?style=shield)](https://circleci.com/gh/realpython/codetiming)\n\nInstall `codetiming` from PyPI:\n\n```\n$ python -m pip install codetiming\n```\n\nThe source code is [available at GitHub](https://github.com/realpython/codetiming).\n\nFor a complete tutorial on how `codetiming` works, see [Python Timer Functions: Three Ways to Monitor Your Code](https://realpython.com/python-timer) on [Real Python](https://realpython.com/).\n\n## Basic Usage\n\nYou can use `codetiming.Timer` in several different ways:\n\n1. As a **class**:\n\n    ```python\n    t = Timer(name=\"class\")\n    t.start()\n    # Do something\n    t.stop()\n    ```\n\n2. As a **context manager**:\n\n    ```python\n    with Timer(name=\"context manager\"):\n        # Do something\n    ```\n\n3. As a **decorator**:\n\n    ```python\n    @Timer(name=\"decorator\")\n    def stuff():\n        # Do something\n    ```\n\n\n## Arguments\n\n`Timer` accepts the following arguments when it's created, all are optional:\n\n- **`name`:** An optional name for your timer\n- **`text`:** The text shown when your timer ends. It should contain a `{}` placeholder that will be filled by the elapsed time in seconds (default: `\"Elapsed time: {:.4f} seconds\"`)\n- **`logger`:** A function/callable that takes a string argument, and will report the elapsed time when the logger is stopped (default: `print()`)\n\nYou can turn off explicit reporting of the elapsed time by setting `logger=None`.\n\nIn the template text, you can also use explicit attributes to refer to the `name` of the timer, or log the elapsed time in `milliseconds`, `seconds` (the default), or `minutes`. For example:\n\n```python\nt1 = Timer(name=\"NamedTimer\", text=\"{name}: {minutes:.1f} minutes\")\nt2 = Timer(text=\"Elapsed time: {milliseconds:.0f} ms\")\n```\n\nNote that the strings used by `text` are **not** f-strings. Instead they are used as templates that will be populated using `.format()` behind the scenes. If you want to combine the `text` template with an f-string, you need to use double braces for the template values:\n\n```python\nt = Timer(text=f\"{__file__}: {{:.4f}}\")\n```\n\n\n## Capturing the Elapsed Time\n\nWhen using `Timer` as a class, you can capture the elapsed time when calling `.stop()`:\n\n```python\nelapsed_time = t.stop()\n```\n\nYou can also find the last measured elapsed time in the `.last` attribute. The following code will have the same effect as the previous example:\n\n```python\nt.stop()\nelapsed_time = t.last\n```\n\n\n## Named Timers\n\nNamed timers are made available in the class dictionary `Timer.timers`. The elapsed time will accumulate if the same name or same timer is used several times. Consider the following example:\n\n```python\n>>> import logging\n>>> from codetiming import Timer\n\n>>> t = Timer(\"example\", text=\"Time spent: {:.2f}\", logger=logging.warning)\n\n>>> t.start()\n>>> t.stop()\nWARNING:root:Time spent: 3.58\n3.5836678670002584\n\n>>> with t:\n...     _ = list(range(100000000))\n... \nWARNING:root:Time spent: 1.73\n\n>>> Timer.timers\n{'example': 5.312697440000193}\n```\n\nThe example shows how you can redirect the timer output to the logging module. Note that the elapsed time spent in the two different uses of `t` has been accumulated in `Timer.timers`.\n\nYou can also get simple statistics about your named timers. Continuing from the example above:\n\n```python\n>>> Timer.timers.max(\"example\")\n3.5836678670002584\n\n>>> Timer.timers.mean(\"example\")\n2.6563487200000964\n\n>>> Timer.timers.stdev(\"example\")\n1.311427314335879\n```\n\n`timers` support `.count()`, `.total()`, `.min()`, `.max()`, `.mean()`, `.median()`, and `.stdev()`.\n\n\n## Acknowledgements\n\n`codetiming` is based on a similar module originally developed for the [Midgard Geodesy library](https://kartverket.github.io/midgard/) at the [Norwegian Mapping Authority](https://www.kartverket.no/en/).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://realpython.com/python-timer", "keywords": "timer class contextmanager decorator", "license": "", "maintainer": "", "maintainer_email": "", "name": "codetiming", "package_url": "https://pypi.org/project/codetiming/", "platform": "", "project_url": "https://pypi.org/project/codetiming/", "project_urls": {"Homepage": "https://realpython.com/python-timer", "Source Code": "https://github.com/realpython/codetiming", "Tutorial": "https://realpython.com/python-timer"}, "release_url": "https://pypi.org/project/codetiming/1.2.0/", "requires_dist": ["dataclasses; python_version < '3.7'", "black; extra == \"dev\"", "bump2version; extra == \"dev\"", "flake8; extra == \"dev\"", "flit; extra == \"dev\"", "isort; extra == \"dev\"", "mypy; extra == \"dev\"", "pytest; extra == \"test\"", "pytest-cov; extra == \"test\"", "tox; extra == \"test\""], "requires_python": ">=3.6", "summary": "A flexible, customizable timer for your Python code", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://realpython.com/python-timer\" rel=\"nofollow\"><img alt=\"Python Timer Functions: Three Ways to Monitor Your Code\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ecd4655cdd2ab0e60471794068c9b10fad69c3a/68747470733a2f2f66696c65732e7265616c707974686f6e2e636f6d2f6d656469612f54687265652d576179732d746f2d54696d652d596f75722d436f64655f57617465726d61726b65642e3864353631666363376133352e6a7067\"></a></p>\n<h1><code>codetiming</code> - A flexible, customizable timer for your Python code</h1>\n<p><a href=\"https://pypi.org/project/codetiming/\" rel=\"nofollow\"><img alt=\"Latest version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/57827d026da585abb826edd39f3153b378e8a04c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f646574696d696e672e737667\"></a>\n<a href=\"https://pypi.org/project/codetiming/\" rel=\"nofollow\"><img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea1419446421c2fd1b19efbac6719e61fe3b4ff1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f636f646574696d696e672e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"http://mypy-lang.org/\" rel=\"nofollow\"><img alt=\"Checked with mypy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0db8f5dcbf5f340f278004d5db3d16b4cdf33ba/687474703a2f2f7777772e6d7970792d6c616e672e6f72672f7374617469632f6d7970795f62616467652e737667\"></a>\n<a href=\"https://circleci.com/gh/realpython/codetiming\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/da5f1135df7865c21b93228307972c1c57dba1b4/68747470733a2f2f636972636c6563692e636f6d2f67682f7265616c707974686f6e2f636f646574696d696e672e7376673f7374796c653d736869656c64\"></a></p>\n<p>Install <code>codetiming</code> from PyPI:</p>\n<pre><code>$ python -m pip install codetiming\n</code></pre>\n<p>The source code is <a href=\"https://github.com/realpython/codetiming\" rel=\"nofollow\">available at GitHub</a>.</p>\n<p>For a complete tutorial on how <code>codetiming</code> works, see <a href=\"https://realpython.com/python-timer\" rel=\"nofollow\">Python Timer Functions: Three Ways to Monitor Your Code</a> on <a href=\"https://realpython.com/\" rel=\"nofollow\">Real Python</a>.</p>\n<h2>Basic Usage</h2>\n<p>You can use <code>codetiming.Timer</code> in several different ways:</p>\n<ol>\n<li>\n<p>As a <strong>class</strong>:</p>\n<pre><span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"class\"</span><span class=\"p\">)</span>\n<span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"c1\"># Do something</span>\n<span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>As a <strong>context manager</strong>:</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"context manager\"</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Do something</span>\n</pre>\n</li>\n<li>\n<p>As a <strong>decorator</strong>:</p>\n<pre><span class=\"nd\">@Timer</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"decorator\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">stuff</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Do something</span>\n</pre>\n</li>\n</ol>\n<h2>Arguments</h2>\n<p><code>Timer</code> accepts the following arguments when it's created, all are optional:</p>\n<ul>\n<li><strong><code>name</code>:</strong> An optional name for your timer</li>\n<li><strong><code>text</code>:</strong> The text shown when your timer ends. It should contain a <code>{}</code> placeholder that will be filled by the elapsed time in seconds (default: <code>\"Elapsed time: {:.4f} seconds\"</code>)</li>\n<li><strong><code>logger</code>:</strong> A function/callable that takes a string argument, and will report the elapsed time when the logger is stopped (default: <code>print()</code>)</li>\n</ul>\n<p>You can turn off explicit reporting of the elapsed time by setting <code>logger=None</code>.</p>\n<p>In the template text, you can also use explicit attributes to refer to the <code>name</code> of the timer, or log the elapsed time in <code>milliseconds</code>, <code>seconds</code> (the default), or <code>minutes</code>. For example:</p>\n<pre><span class=\"n\">t1</span> <span class=\"o\">=</span> <span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"NamedTimer\"</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">{name}</span><span class=\"s2\">: </span><span class=\"si\">{minutes:.1f}</span><span class=\"s2\"> minutes\"</span><span class=\"p\">)</span>\n<span class=\"n\">t2</span> <span class=\"o\">=</span> <span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"Elapsed time: </span><span class=\"si\">{milliseconds:.0f}</span><span class=\"s2\"> ms\"</span><span class=\"p\">)</span>\n</pre>\n<p>Note that the strings used by <code>text</code> are <strong>not</strong> f-strings. Instead they are used as templates that will be populated using <code>.format()</code> behind the scenes. If you want to combine the <code>text</code> template with an f-string, you need to use double braces for the template values:</p>\n<pre><span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"vm\">__file__</span><span class=\"si\">}</span><span class=\"s2\">: </span><span class=\"se\">{{</span><span class=\"s2\">:.4f</span><span class=\"se\">}}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Capturing the Elapsed Time</h2>\n<p>When using <code>Timer</code> as a class, you can capture the elapsed time when calling <code>.stop()</code>:</p>\n<pre><span class=\"n\">elapsed_time</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<p>You can also find the last measured elapsed time in the <code>.last</code> attribute. The following code will have the same effect as the previous example:</p>\n<pre><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n<span class=\"n\">elapsed_time</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">last</span>\n</pre>\n<h2>Named Timers</h2>\n<p>Named timers are made available in the class dictionary <code>Timer.timers</code>. The elapsed time will accumulate if the same name or same timer is used several times. Consider the following example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">codetiming</span> <span class=\"kn\">import</span> <span class=\"n\">Timer</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"s2\">\"example\"</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"Time spent: </span><span class=\"si\">{:.2f}</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">logger</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"n\">root</span><span class=\"p\">:</span><span class=\"n\">Time</span> <span class=\"n\">spent</span><span class=\"p\">:</span> <span class=\"mf\">3.58</span>\n<span class=\"mf\">3.5836678670002584</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"n\">t</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100000000</span><span class=\"p\">))</span>\n<span class=\"o\">...</span> \n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"n\">root</span><span class=\"p\">:</span><span class=\"n\">Time</span> <span class=\"n\">spent</span><span class=\"p\">:</span> <span class=\"mf\">1.73</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Timer</span><span class=\"o\">.</span><span class=\"n\">timers</span>\n<span class=\"p\">{</span><span class=\"s1\">'example'</span><span class=\"p\">:</span> <span class=\"mf\">5.312697440000193</span><span class=\"p\">}</span>\n</pre>\n<p>The example shows how you can redirect the timer output to the logging module. Note that the elapsed time spent in the two different uses of <code>t</code> has been accumulated in <code>Timer.timers</code>.</p>\n<p>You can also get simple statistics about your named timers. Continuing from the example above:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Timer</span><span class=\"o\">.</span><span class=\"n\">timers</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"s2\">\"example\"</span><span class=\"p\">)</span>\n<span class=\"mf\">3.5836678670002584</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Timer</span><span class=\"o\">.</span><span class=\"n\">timers</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"s2\">\"example\"</span><span class=\"p\">)</span>\n<span class=\"mf\">2.6563487200000964</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Timer</span><span class=\"o\">.</span><span class=\"n\">timers</span><span class=\"o\">.</span><span class=\"n\">stdev</span><span class=\"p\">(</span><span class=\"s2\">\"example\"</span><span class=\"p\">)</span>\n<span class=\"mf\">1.311427314335879</span>\n</pre>\n<p><code>timers</code> support <code>.count()</code>, <code>.total()</code>, <code>.min()</code>, <code>.max()</code>, <code>.mean()</code>, <code>.median()</code>, and <code>.stdev()</code>.</p>\n<h2>Acknowledgements</h2>\n<p><code>codetiming</code> is based on a similar module originally developed for the <a href=\"https://kartverket.github.io/midgard/\" rel=\"nofollow\">Midgard Geodesy library</a> at the <a href=\"https://www.kartverket.no/en/\" rel=\"nofollow\">Norwegian Mapping Authority</a>.</p>\n\n          </div>"}, "last_serial": 6743944, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "51049918cf6e583076b02c3ca9d75576", "sha256": "99be55f9b6dfa94721cd80e1efae0c84542312304323fbb2545a949f5ec1d791"}, "downloads": -1, "filename": "codetiming-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "51049918cf6e583076b02c3ca9d75576", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5826, "upload_time": "2019-07-29T20:46:05", "upload_time_iso_8601": "2019-07-29T20:46:05.674806Z", "url": "https://files.pythonhosted.org/packages/3f/af/1dc7400ff3f31f98ae4094e28336452294d5d4b0e1fe0e78523152e91a62/codetiming-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72d7ff671cc6405a3e1a044459d145ce", "sha256": "2b6bbb58d27bbab23683784d2be491e2177d48914f297451712af64d8eafda5f"}, "downloads": -1, "filename": "codetiming-0.1.0.tar.gz", "has_sig": false, "md5_digest": "72d7ff671cc6405a3e1a044459d145ce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5373, "upload_time": "2019-07-29T20:46:08", "upload_time_iso_8601": "2019-07-29T20:46:08.598812Z", "url": "https://files.pythonhosted.org/packages/56/f5/262a5092e27563f3ccdc89cf4253a4d7f32bc80abe5bc748f47a8fbd6ade/codetiming-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8cc890dfca610880548861b3a117788e", "sha256": "bdb740dd0dd0f83c407d6fcbab5c42fbc83667203a62563ac1119ef261f139b3"}, "downloads": -1, "filename": "codetiming-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8cc890dfca610880548861b3a117788e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5981, "upload_time": "2019-07-30T10:30:08", "upload_time_iso_8601": "2019-07-30T10:30:08.903068Z", "url": "https://files.pythonhosted.org/packages/b2/5c/9984218d7a8a95cfaca2eccc27195b88db6816c4197c3662ab1533ef9584/codetiming-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49ae9eed3eab72e5e03adda77595bb40", "sha256": "a0321d85cdca5ba294ce9d96bfb36344fe53aab786edc7946a2a5ee0e0525aa3"}, "downloads": -1, "filename": "codetiming-0.1.1.tar.gz", "has_sig": false, "md5_digest": "49ae9eed3eab72e5e03adda77595bb40", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5506, "upload_time": "2019-07-30T10:30:11", "upload_time_iso_8601": "2019-07-30T10:30:11.112790Z", "url": "https://files.pythonhosted.org/packages/29/67/12b747cfd752a7a3af2f9f45781662e312efe9159e838a02994a07bf562f/codetiming-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8af6ae85c08ff52775f7088f4a18b6f2", "sha256": "093c6be8a786b47ce52bbdbcc917faa666bd868cb19c52655dbd3b644b0ae3ba"}, "downloads": -1, "filename": "codetiming-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8af6ae85c08ff52775f7088f4a18b6f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6554, "upload_time": "2019-08-01T22:59:43", "upload_time_iso_8601": "2019-08-01T22:59:43.660219Z", "url": "https://files.pythonhosted.org/packages/88/f0/0717a8b370955934f6204ab9ab4a5c3bc0b870870be50dc647fc66ace887/codetiming-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f4024b3ad44d8a3fb0938bb43693552", "sha256": "2bec6b70613dabde539bb62427e5115289984e6924a41ecec12a6ce6e8d17a17"}, "downloads": -1, "filename": "codetiming-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7f4024b3ad44d8a3fb0938bb43693552", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6148, "upload_time": "2019-08-01T22:59:45", "upload_time_iso_8601": "2019-08-01T22:59:45.875173Z", "url": "https://files.pythonhosted.org/packages/4f/3b/cee7d80554282928c83e887c694c36562596812985fe663cfa725486b5d8/codetiming-0.1.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "844e7249a70bf6ed4de3295f99e0b89b", "sha256": "55bd84cbcce4e10e6397f9c873fb5c792709ce2b23ca24aa76c788559b7c254c"}, "downloads": -1, "filename": "codetiming-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "844e7249a70bf6ed4de3295f99e0b89b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6705, "upload_time": "2019-12-31T09:21:43", "upload_time_iso_8601": "2019-12-31T09:21:43.332409Z", "url": "https://files.pythonhosted.org/packages/94/0a/da1374237f705816f7c4fea061453966e997ea01a276b78e01acadb1a5ce/codetiming-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74362ecce71b006222c2fa2734892cbc", "sha256": "db5a7d18609c33bdd9e39752e2d55cad031a534d49325459d7dc4d1a62bde372"}, "downloads": -1, "filename": "codetiming-1.0.0.tar.gz", "has_sig": false, "md5_digest": "74362ecce71b006222c2fa2734892cbc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6270, "upload_time": "2019-12-31T09:21:45", "upload_time_iso_8601": "2019-12-31T09:21:45.935355Z", "url": "https://files.pythonhosted.org/packages/ac/df/aad1b6effce4a314ea3331723ee968a3e22617bb100cac639c5f1d8c58ef/codetiming-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "ef0ec1a8c1765178701073873a28ae23", "sha256": "4b7ca083f5a678b973ffaf8d3ec2c1544da758f7b9313d27498496f5e4b9ec8f"}, "downloads": -1, "filename": "codetiming-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ef0ec1a8c1765178701073873a28ae23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6765, "upload_time": "2020-01-14T23:00:12", "upload_time_iso_8601": "2020-01-14T23:00:12.697280Z", "url": "https://files.pythonhosted.org/packages/62/ec/f12520f540ba6d5c9c4ed1c5db8d0c1206d7dc8dc540666aa34749c6392a/codetiming-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fd9637c1f8d928bba1592ac75316eca", "sha256": "8355334d12db30d5f4d3d13a966f98d00eaab24bcfdfb6bf176e2e4e3c04d5ff"}, "downloads": -1, "filename": "codetiming-1.1.0.tar.gz", "has_sig": false, "md5_digest": "8fd9637c1f8d928bba1592ac75316eca", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8219, "upload_time": "2020-01-14T23:00:14", "upload_time_iso_8601": "2020-01-14T23:00:14.720150Z", "url": "https://files.pythonhosted.org/packages/04/0d/a13850e96cdffc63274421a6f4355bcb0d533264c3c9fb63dd234b94d0ef/codetiming-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "8af340ad0712d98b077a8fa3d2e95ea2", "sha256": "9be79be7b109fbf85991ddd937208b011911dff8925e6259097a4f0f79f6a4ce"}, "downloads": -1, "filename": "codetiming-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8af340ad0712d98b077a8fa3d2e95ea2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10117, "upload_time": "2020-03-03T22:43:27", "upload_time_iso_8601": "2020-03-03T22:43:27.483084Z", "url": "https://files.pythonhosted.org/packages/14/87/721c01bcfe079e88dd39318e24b1fe069aa7449e232d99722fd7a488ad45/codetiming-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e11a79b248db96e01ef8af038fb35ef", "sha256": "bc0d19fedfc66c8f8ffd2245d2bd5ae88005ecff5f740a67c9cc776083db4a8e"}, "downloads": -1, "filename": "codetiming-1.2.0.tar.gz", "has_sig": false, "md5_digest": "8e11a79b248db96e01ef8af038fb35ef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10287, "upload_time": "2020-03-03T22:43:29", "upload_time_iso_8601": "2020-03-03T22:43:29.742665Z", "url": "https://files.pythonhosted.org/packages/92/a5/990e22c3f67e26db8e7dbbf58dc503748b7dca58ab2fda876fa69d30b04c/codetiming-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8af340ad0712d98b077a8fa3d2e95ea2", "sha256": "9be79be7b109fbf85991ddd937208b011911dff8925e6259097a4f0f79f6a4ce"}, "downloads": -1, "filename": "codetiming-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8af340ad0712d98b077a8fa3d2e95ea2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10117, "upload_time": "2020-03-03T22:43:27", "upload_time_iso_8601": "2020-03-03T22:43:27.483084Z", "url": "https://files.pythonhosted.org/packages/14/87/721c01bcfe079e88dd39318e24b1fe069aa7449e232d99722fd7a488ad45/codetiming-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e11a79b248db96e01ef8af038fb35ef", "sha256": "bc0d19fedfc66c8f8ffd2245d2bd5ae88005ecff5f740a67c9cc776083db4a8e"}, "downloads": -1, "filename": "codetiming-1.2.0.tar.gz", "has_sig": false, "md5_digest": "8e11a79b248db96e01ef8af038fb35ef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10287, "upload_time": "2020-03-03T22:43:29", "upload_time_iso_8601": "2020-03-03T22:43:29.742665Z", "url": "https://files.pythonhosted.org/packages/92/a5/990e22c3f67e26db8e7dbbf58dc503748b7dca58ab2fda876fa69d30b04c/codetiming-1.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:13 2020"}