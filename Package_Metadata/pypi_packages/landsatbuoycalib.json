{"info": {"author": "Nathan Dileas", "author_email": "nid4986@rit.edu", "bugtrack_url": null, "classifiers": [], "description": "Calculates and compares the radiance of a thermal LANSAT scene to the \"ground truth\"\nradiance as measured by a NOAA buoy. Based on work by Frank Padula and Monica Cook.\n\nIf you want to use this code, you should have a basic knowledge of python and/or basic coding.\nNo warranty. Use it on armstrong or related servers for best results. Developed on Fedora x64 by Nathan Dileas. \nCopyright RIT 2015-2016\n\nOVERVIEW:\n    This code essentially has two funtions: calculating the radiance from the landsat image \n    provided, and calculating the corresponding ground truth radiance from outside data,\n    atmospheric (NARR or MERRA-2), NOAA buoy data, and MODTRAN. Use the file controller.py as\n    a convinient command line interface or the underying class itself, in bin/BuoyCalib.py.\n\n    Sources:\n        http://scholarworks.rit.edu/theses/2961/ - Padula 08 Thesis\n        http://scholarworks.rit.edu/theses/8513/ - Cook 14 Thesis\n\n    NARR: \n        This is the primary atmospheric data source for the project. Height, Temperature, \n        Humidity as a funtion of Pressure. NCEP Reanalysis data provided by the NOAA/OAR/ESRL\n        PSD, Boulder, Colorado, USA, from their Web site at http://www.esrl.noaa.gov/psd/\n\n        Website: http://www.esrl.noaa.gov/psd/data/gridded/data.narr.html\n        FTP: ftp://ftp.cdc.noaa.gov/Datasets/NARR/pressure/\n    MERRA-2:\n        This is the secondary atmospheric data source for the project. Height, Temperature, \n        Humidity as a funtion of Pressure. It was instituted as a result of the NARR dataset \n        not being up to date. Until late 2016, the NARR archive only reaches to late 2014.\n\n        Website: http://gmao.gsfc.nasa.gov/reanalysis/MERRA-2/\n        FTP: ftp://goldsmr5.sci.gsfc.nasa.gov/data/s4pa/MERRA2/M2I3NPASM.5.12.4/\n    NOAA:\n        This is the only source of water temperature information for the project.\n\n        Website: http://www.ndbc.noaa.gov/\n        Data: http://www.ndbc.noaa.gov/data/stations/station_table.txt\n            http://www.ndbc.noaa.gov/data/stdmet/\n            http://www.ndbc.noaa.gov/data/historical/stdmet/\n\nUSAGE: \n    ./buoy-calib, in this directory. Use the -h option for more information \n    on flags and options that are available.\n\n    ./buoy-calib [options] <Landsat_ID>\n\n    Examples:\n        ./buoy-calib -i LC80130332013145LGN00 : Output an image with the location \n                                                 of the buoy and narr points drawn on it\n        ./buoy-calib -m LE70160382012268EDC00 : Use MERRA data instaed of NARR\n        ./buoy-calib -b 44009 LT50410372011048PAC01 : use a specific NOAA buoy\n        ./buoy-calib -imvr LC80130332013145LGN00 : Output an image, verbose, reprocesss, with MERRA data\n        ./buoy-calib LE70160382012268EDC00 LC80130332013145LGN00 : process more than one scene\n\n\n    The Landsat ID can be any valid ID from landsat 5 or 8 with a level 1 product available.\n    If there is an error, check earth explorer first. It is frequently down for maitenance.\n    In future, there may be a tool included with this package to check if the ID is valid before \n    trying to download. Stay tuned.\n\nTOOLS:\n    tools/to_csv.py: used to compile results quickly and easily.\n    tools/generate_atmo_figure.py : generate a figure using information from a already processed scene.\n    test/functional/run_all_scenes.bash: run a batch of scenes. Move it to this directory before use.\n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ndileas/Landsat-Buoy-Calibration", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "landsatbuoycalib", "package_url": "https://pypi.org/project/landsatbuoycalib/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/landsatbuoycalib/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ndileas/Landsat-Buoy-Calibration"}, "release_url": "https://pypi.org/project/landsatbuoycalib/0.1/", "requires_dist": null, "requires_python": null, "summary": "Calculates and compares the radiance of a thermal LANSAT scene to the \"ground truthradiance as measured by a NOAA buoy.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Calculates and compares the radiance of a thermal LANSAT scene to the \"ground truth\"<br>radiance as measured by a NOAA buoy. Based on work by Frank Padula and Monica Cook.<br><br>If you want to use this code, you should have a basic knowledge of python and/or basic coding.<br>No warranty. Use it on armstrong or related servers for best results. Developed on Fedora x64 by Nathan Dileas. <br>Copyright RIT 2015-2016<br><br>OVERVIEW:<br>    This code essentially has two funtions: calculating the radiance from the landsat image <br>    provided, and calculating the corresponding ground truth radiance from outside data,<br>    atmospheric (NARR or MERRA-2), NOAA buoy data, and MODTRAN. Use the file controller.py as<br>    a convinient command line interface or the underying class itself, in bin/BuoyCalib.py.<br><br>    Sources:<br>        http://scholarworks.rit.edu/theses/2961/ - Padula 08 Thesis<br>        http://scholarworks.rit.edu/theses/8513/ - Cook 14 Thesis<br><br>    NARR: <br>        This is the primary atmospheric data source for the project. Height, Temperature, <br>        Humidity as a funtion of Pressure. NCEP Reanalysis data provided by the NOAA/OAR/ESRL<br>        PSD, Boulder, Colorado, USA, from their Web site at http://www.esrl.noaa.gov/psd/<br><br>        Website: http://www.esrl.noaa.gov/psd/data/gridded/data.narr.html<br>        FTP: ftp://ftp.cdc.noaa.gov/Datasets/NARR/pressure/<br>    MERRA-2:<br>        This is the secondary atmospheric data source for the project. Height, Temperature, <br>        Humidity as a funtion of Pressure. It was instituted as a result of the NARR dataset <br>        not being up to date. Until late 2016, the NARR archive only reaches to late 2014.<br><br>        Website: http://gmao.gsfc.nasa.gov/reanalysis/MERRA-2/<br>        FTP: ftp://goldsmr5.sci.gsfc.nasa.gov/data/s4pa/MERRA2/M2I3NPASM.5.12.4/<br>    NOAA:<br>        This is the only source of water temperature information for the project.<br><br>        Website: http://www.ndbc.noaa.gov/<br>        Data: http://www.ndbc.noaa.gov/data/stations/station_table.txt<br>            http://www.ndbc.noaa.gov/data/stdmet/<br>            http://www.ndbc.noaa.gov/data/historical/stdmet/<br><br>USAGE: <br>    ./buoy-calib, in this directory. Use the -h option for more information <br>    on flags and options that are available.<br><br>    ./buoy-calib [options] &lt;Landsat_ID&gt;<br><br>    Examples:<br>        ./buoy-calib -i LC80130332013145LGN00 : Output an image with the location <br>                                                 of the buoy and narr points drawn on it<br>        ./buoy-calib -m LE70160382012268EDC00 : Use MERRA data instaed of NARR<br>        ./buoy-calib -b 44009 LT50410372011048PAC01 : use a specific NOAA buoy<br>        ./buoy-calib -imvr LC80130332013145LGN00 : Output an image, verbose, reprocesss, with MERRA data<br>        ./buoy-calib LE70160382012268EDC00 LC80130332013145LGN00 : process more than one scene<br><br><br>    The Landsat ID can be any valid ID from landsat 5 or 8 with a level 1 product available.<br>    If there is an error, check earth explorer first. It is frequently down for maitenance.<br>    In future, there may be a tool included with this package to check if the ID is valid before <br>    trying to download. Stay tuned.<br><br>TOOLS:<br>    tools/to_csv.py: used to compile results quickly and easily.<br>    tools/generate_atmo_figure.py : generate a figure using information from a already processed scene.<br>    test/functional/run_all_scenes.bash: run a batch of scenes. Move it to this directory before use.<br><br>\n          </div>"}, "last_serial": 2192316, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "30afd83a6603a6f695323833f000e39a", "sha256": "e56c47058c79edfd2d770dca93df478e0372d5ea41a116235726806fadc3706d"}, "downloads": -1, "filename": "landsatbuoycalib-0.1.tar.gz", "has_sig": false, "md5_digest": "30afd83a6603a6f695323833f000e39a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20289, "upload_time": "2016-06-28T20:22:53", "upload_time_iso_8601": "2016-06-28T20:22:53.850889Z", "url": "https://files.pythonhosted.org/packages/6f/03/a10c81f03c1cee1184634fc3c894480526b5a20194573781384cdd391a50/landsatbuoycalib-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "30afd83a6603a6f695323833f000e39a", "sha256": "e56c47058c79edfd2d770dca93df478e0372d5ea41a116235726806fadc3706d"}, "downloads": -1, "filename": "landsatbuoycalib-0.1.tar.gz", "has_sig": false, "md5_digest": "30afd83a6603a6f695323833f000e39a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20289, "upload_time": "2016-06-28T20:22:53", "upload_time_iso_8601": "2016-06-28T20:22:53.850889Z", "url": "https://files.pythonhosted.org/packages/6f/03/a10c81f03c1cee1184634fc3c894480526b5a20194573781384cdd391a50/landsatbuoycalib-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:58 2020"}