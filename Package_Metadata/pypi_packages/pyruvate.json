{"info": {"author": "tschorr", "author_email": "t_schorr@gmx.de", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Pyruvate WSGI server\n====================\n\n.. image:: https://gitlab.com/tschorr/pyruvate/badges/master/pipeline.svg\n   :target: https://gitlab.com/tschorr/pyruvate\n\n.. image:: https://codecov.io/gl/tschorr/pyruvate/branch/master/graph/badge.svg\n   :target: https://codecov.io/gl/tschorr/pyruvate\n\n.. image:: http://img.shields.io/pypi/v/pyruvate.svg\n   :target: https://pypi.org/project/pyruvate\n\nPyruvate is a `WSGI <https://www.python.org/dev/peps/pep-3333>`_ server written in `Rust <https://www.rust-lang.org/>`__.\nIt's not yet ready for production so use with caution.\n\nFeatures\n--------\n\n* Asynchronous event loop using `mio <https://github.com/tokio-rs/mio>`_\n* Request parsing using `httparse <https://github.com/seanmonstar/httparse>`_\n* `PyO3 <https://github.com/PyO3/pyo3>`_ based Python interface\n* Worker pool based on `threadpool <https://github.com/rust-threadpool/rust-threadpool>`_\n* `PasteDeploy <https://pastedeploy.readthedocs.io/en/latest/>`_ entry point\n\nDevelopment Installation\n------------------------\n\n* Install `Rust <https://doc.rust-lang.org/book/ch01-01-installation.html>`__\n* Install and activate `Rust nightly <https://doc.rust-lang.org/book/appendix-07-nightly-rust.html#rustup-and-the-role-of-rust-nightly>`_ (needed by `PyO3 <https://github.com/PyO3/pyo3>`_)\n* Install and activate a Python 3 (> 3.5) `virtualenv <https://docs.python.org/3/tutorial/venv.html>`_\n* Install `setuptools_rust <https://github.com/PyO3/setuptools-rust>`_ using pip:\n\n    $ pip install setuptools_rust\n\n* Install pyruvate, e.g. using pip:\n\n    $ pip install -e git+https://gitlab.com/tschorr/pyruvate.git#egg=pyruvate[test]\n\nUsing Pyruvate in your WSGI application\n---------------------------------------\n\nFrom Python\n+++++++++++\n\nA hello world WSGI application using pyruvate listening on 127.0.0.1:7878 and using 2 worker threads looks like this::\n\n    import pyruvate\n\n    def application(environ, start_response):\n        \"\"\"Simplest possible application object\"\"\"\n        status = '200 OK'\n        response_headers = [('Content-type', 'text/plain')]\n        start_response(status, response_headers, None)\n        return [b\"Hello world!\\n\"]\n\n    pyruvate.serve(application, \"127.0.0.1:7878\", 2)\n\nUsing PasteDeploy\n+++++++++++++++++\n\nAgain listening on 127.0.0.1:7878 and using 2 worker threads::\n\n    [server:main]\n    use = egg:pyruvate#main\n    socket = 127.0.0.1:7878\n    workers = 2\n\nExample Configurations\n----------------------\n\nDjango 2\n++++++++\n\nAfter installing Pyruvate in your Django virtualenv, create or modify your `wsgi.py` file (1 worker listening on 127.0.0.1:8000)::\n\n    import os\n    import pyruvate\n\n    from django.core.wsgi import get_wsgi_application\n\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"your_django_application.settings\")\n\n    application = get_wsgi_application()\n\n    pyruvate.serve(application, \"127.0.0.1:8000\", 1)\n\nYou can now start Django + Pyruvate with::\n\n    $ python wsgi.py\n\nOverride settings by using the `DJANGO_SETTINGS_MODULE` environment variable when appropriate.\nTested with `Django 2.2.x <https://www.djangoproject.com/>`_.\n\nMapproxy\n++++++++\n\nCreate or modify `config.py` (2 workers listening on 127.0.0.1:8005)::\n\n    from logging.config import fileConfig\n    import os.path\n    import pyruvate\n    fileConfig(r'/path/to/mapproxy/log.ini', {'here': os.path.dirname(__file__)})\n\n    from mapproxy.wsgiapp import make_wsgi_app\n    application = make_wsgi_app(r'/path/to/mapproxy/mapproxy.yml')\n\n    pyruvate.serve(application, \"127.0.0.1:8005\", 2)\n\nStart from your virtualenv::\n\n    $ python config.py\n\nTested with `Mapproxy 1.12.x <https://mapproxy.org/>`_.\n\nPlone 5.2\n+++++++++\n\nUsing `zc.buildout <https://pypi.org/project/zc.buildout/>`_ and `plone.recipe.zope2instance <https://pypi.org/project/plone.recipe.zope2instance>`_ you can define an instance part using Pyruvate's `PasteDeploy <https://pastedeploy.readthedocs.io/en/latest/>` _entry point::\n\n    [instance]\n    recipe = plone.recipe.zope2instance\n    http-address = 127.0.0.1:8080\n    eggs =\n        Plone\n        pyruvate\n    wsgi-ini-template = ${buildout:directory}/templates/pyruvate.ini.in\n\nThe `server` section of the template provided with the `wsgi-ini-template <https://pypi.org/project/plone.recipe.zope2instance/#advanced-options>`_ option should look like this (3 workers listening on `http-address` as specified in the buildout `[instance]` part)::\n\n    [server:main]\n    use = egg:pyruvate#main\n    socket = %(http_address)s\n    workers = 3\n\nTested with `Plone 5.2.x <https://plone.org/>`_.\n\nNginx settings\n++++++++++++++\n\nHTTP connection handling is still work in progress in Pyruvate, therefore you will see issues when using it behind a reverse proxy server.\nIn any case if you want to try it with Nginx you might want to configure HTTP 1.1, e.g.::\n\n    ....\n    location / {\n        proxy_pass http://localhost:7878;\n        proxy_http_version 1.1;\n        proxy_set_header   Connection \"\";\n        ...\n    }\n    ...\n\n\n0.2.0 (2020-03-10)\n==================\n\n* Added some Python tests (using py.test and tox)\n* Improve handling of HTTP headers\n* respect content length header when using sendfile\n\n0.1.0 (2020-02-10)\n==================\n\n* Initial release\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/tschorr/pyruvate", "keywords": "WSGI", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyruvate", "package_url": "https://pypi.org/project/pyruvate/", "platform": "", "project_url": "https://pypi.org/project/pyruvate/", "project_urls": {"Homepage": "https://gitlab.com/tschorr/pyruvate"}, "release_url": "https://pypi.org/project/pyruvate/0.2.0/", "requires_dist": ["Paste", "pytest ; extra == 'test'", "requests ; extra == 'test'"], "requires_python": "", "summary": "WSGI server written in Rust.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pyruvate-wsgi-server\">\n<h2>Pyruvate WSGI server</h2>\n<a href=\"https://gitlab.com/tschorr/pyruvate\" rel=\"nofollow\"><img alt=\"https://gitlab.com/tschorr/pyruvate/badges/master/pipeline.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0b09a00f8bad9bf958cae9a094b90b0aa34cf0b9/68747470733a2f2f6769746c61622e636f6d2f747363686f72722f70797275766174652f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<a href=\"https://codecov.io/gl/tschorr/pyruvate\" rel=\"nofollow\"><img alt=\"https://codecov.io/gl/tschorr/pyruvate/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2092a89ae3d21991de3529fe0bbbbe93328e9e86/68747470733a2f2f636f6465636f762e696f2f676c2f747363686f72722f70797275766174652f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/pyruvate\" rel=\"nofollow\"><img alt=\"http://img.shields.io/pypi/v/pyruvate.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c4de9c95aba7df8592e65d7c7a4f6b99cbe799cb/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f70797275766174652e737667\"></a>\n<p>Pyruvate is a <a href=\"https://www.python.org/dev/peps/pep-3333\" rel=\"nofollow\">WSGI</a> server written in <a href=\"https://www.rust-lang.org/\" rel=\"nofollow\">Rust</a>.\nIt\u2019s not yet ready for production so use with caution.</p>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Asynchronous event loop using <a href=\"https://github.com/tokio-rs/mio\" rel=\"nofollow\">mio</a></li>\n<li>Request parsing using <a href=\"https://github.com/seanmonstar/httparse\" rel=\"nofollow\">httparse</a></li>\n<li><a href=\"https://github.com/PyO3/pyo3\" rel=\"nofollow\">PyO3</a> based Python interface</li>\n<li>Worker pool based on <a href=\"https://github.com/rust-threadpool/rust-threadpool\" rel=\"nofollow\">threadpool</a></li>\n<li><a href=\"https://pastedeploy.readthedocs.io/en/latest/\" rel=\"nofollow\">PasteDeploy</a> entry point</li>\n</ul>\n</div>\n<div id=\"development-installation\">\n<h3>Development Installation</h3>\n<ul>\n<li><p>Install <a href=\"https://doc.rust-lang.org/book/ch01-01-installation.html\" rel=\"nofollow\">Rust</a></p>\n</li>\n<li><p>Install and activate <a href=\"https://doc.rust-lang.org/book/appendix-07-nightly-rust.html#rustup-and-the-role-of-rust-nightly\" rel=\"nofollow\">Rust nightly</a> (needed by <a href=\"https://github.com/PyO3/pyo3\" rel=\"nofollow\">PyO3</a>)</p>\n</li>\n<li><p>Install and activate a Python 3 (&gt; 3.5) <a href=\"https://docs.python.org/3/tutorial/venv.html\" rel=\"nofollow\">virtualenv</a></p>\n</li>\n<li><p>Install <a href=\"https://github.com/PyO3/setuptools-rust\" rel=\"nofollow\">setuptools_rust</a> using pip:</p>\n<blockquote>\n<p>$ pip install setuptools_rust</p>\n</blockquote>\n</li>\n<li><p>Install pyruvate, e.g. using pip:</p>\n<blockquote>\n<p>$ pip install -e git+https://gitlab.com/tschorr/pyruvate.git#egg=pyruvate[test]</p>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"using-pyruvate-in-your-wsgi-application\">\n<h3>Using Pyruvate in your WSGI application</h3>\n<div id=\"from-python\">\n<h4>From Python</h4>\n<p>A hello world WSGI application using pyruvate listening on 127.0.0.1:7878 and using 2 worker threads looks like this:</p>\n<pre>import pyruvate\n\ndef application(environ, start_response):\n    \"\"\"Simplest possible application object\"\"\"\n    status = '200 OK'\n    response_headers = [('Content-type', 'text/plain')]\n    start_response(status, response_headers, None)\n    return [b\"Hello world!\\n\"]\n\npyruvate.serve(application, \"127.0.0.1:7878\", 2)\n</pre>\n</div>\n<div id=\"using-pastedeploy\">\n<h4>Using PasteDeploy</h4>\n<p>Again listening on 127.0.0.1:7878 and using 2 worker threads:</p>\n<pre>[server:main]\nuse = egg:pyruvate#main\nsocket = 127.0.0.1:7878\nworkers = 2\n</pre>\n</div>\n</div>\n<div id=\"example-configurations\">\n<h3>Example Configurations</h3>\n<div id=\"django-2\">\n<h4>Django 2</h4>\n<p>After installing Pyruvate in your Django virtualenv, create or modify your <cite>wsgi.py</cite> file (1 worker listening on 127.0.0.1:8000):</p>\n<pre>import os\nimport pyruvate\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"your_django_application.settings\")\n\napplication = get_wsgi_application()\n\npyruvate.serve(application, \"127.0.0.1:8000\", 1)\n</pre>\n<p>You can now start Django + Pyruvate with:</p>\n<pre>$ python wsgi.py\n</pre>\n<p>Override settings by using the <cite>DJANGO_SETTINGS_MODULE</cite> environment variable when appropriate.\nTested with <a href=\"https://www.djangoproject.com/\" rel=\"nofollow\">Django 2.2.x</a>.</p>\n</div>\n<div id=\"mapproxy\">\n<h4>Mapproxy</h4>\n<p>Create or modify <cite>config.py</cite> (2 workers listening on 127.0.0.1:8005):</p>\n<pre>from logging.config import fileConfig\nimport os.path\nimport pyruvate\nfileConfig(r'/path/to/mapproxy/log.ini', {'here': os.path.dirname(__file__)})\n\nfrom mapproxy.wsgiapp import make_wsgi_app\napplication = make_wsgi_app(r'/path/to/mapproxy/mapproxy.yml')\n\npyruvate.serve(application, \"127.0.0.1:8005\", 2)\n</pre>\n<p>Start from your virtualenv:</p>\n<pre>$ python config.py\n</pre>\n<p>Tested with <a href=\"https://mapproxy.org/\" rel=\"nofollow\">Mapproxy 1.12.x</a>.</p>\n</div>\n<div id=\"plone-5-2\">\n<h4>Plone 5.2</h4>\n<p>Using <a href=\"https://pypi.org/project/zc.buildout/\" rel=\"nofollow\">zc.buildout</a> and <a href=\"https://pypi.org/project/plone.recipe.zope2instance\" rel=\"nofollow\">plone.recipe.zope2instance</a> you can define an instance part using Pyruvate\u2019s <cite>PasteDeploy &lt;https://pastedeploy.readthedocs.io/en/latest/&gt;</cite> _entry point:</p>\n<pre>[instance]\nrecipe = plone.recipe.zope2instance\nhttp-address = 127.0.0.1:8080\neggs =\n    Plone\n    pyruvate\nwsgi-ini-template = ${buildout:directory}/templates/pyruvate.ini.in\n</pre>\n<p>The <cite>server</cite> section of the template provided with the <a href=\"https://pypi.org/project/plone.recipe.zope2instance/#advanced-options\" rel=\"nofollow\">wsgi-ini-template</a> option should look like this (3 workers listening on <cite>http-address</cite> as specified in the buildout <cite>[instance]</cite> part):</p>\n<pre>[server:main]\nuse = egg:pyruvate#main\nsocket = %(http_address)s\nworkers = 3\n</pre>\n<p>Tested with <a href=\"https://plone.org/\" rel=\"nofollow\">Plone 5.2.x</a>.</p>\n</div>\n<div id=\"nginx-settings\">\n<h4>Nginx settings</h4>\n<p>HTTP connection handling is still work in progress in Pyruvate, therefore you will see issues when using it behind a reverse proxy server.\nIn any case if you want to try it with Nginx you might want to configure HTTP 1.1, e.g.:</p>\n<pre>....\nlocation / {\n    proxy_pass http://localhost:7878;\n    proxy_http_version 1.1;\n    proxy_set_header   Connection \"\";\n    ...\n}\n...\n</pre>\n</div>\n</div>\n</div>\n<div id=\"id2\">\n<h2>0.2.0 (2020-03-10)</h2>\n<ul>\n<li>Added some Python tests (using py.test and tox)</li>\n<li>Improve handling of HTTP headers</li>\n<li>respect content length header when using sendfile</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>0.1.0 (2020-02-10)</h2>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6784379, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fc7aa21b0f789fc28b5fdd2758e325f4", "sha256": "6d12294c0accb6c564727a9d1bb2042a09e35524a54322516af3bd54a40661ca"}, "downloads": -1, "filename": "pyruvate-0.1.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "fc7aa21b0f789fc28b5fdd2758e325f4", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 2927408, "upload_time": "2020-02-10T15:38:55", "upload_time_iso_8601": "2020-02-10T15:38:55.790777Z", "url": "https://files.pythonhosted.org/packages/76/77/68f0295551b0fcb7c4f13141a62e1c73de67338b2600e9047f1c3881d9ad/pyruvate-0.1.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d390f8cb182301a74f88a2a2bef229a0", "sha256": "e9f80a2992aece5d21a3e78dbe7287bfa06714899058cadc8409b556c5aee8ce"}, "downloads": -1, "filename": "pyruvate-0.1.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "d390f8cb182301a74f88a2a2bef229a0", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1468601, "upload_time": "2020-02-10T15:39:00", "upload_time_iso_8601": "2020-02-10T15:39:00.161477Z", "url": "https://files.pythonhosted.org/packages/49/fb/0b32ca0aa1bab09c5c01a4336eceedab4756416d9b1142a000a576099682/pyruvate-0.1.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9412b3c516b6915b7a6cd1188d87d0b6", "sha256": "e7cddcfd25d6d80599ec7775dba9883b94144de4d803f7ab8370db5c7665bf25"}, "downloads": -1, "filename": "pyruvate-0.1.0-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "9412b3c516b6915b7a6cd1188d87d0b6", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 4385763, "upload_time": "2020-02-10T15:39:05", "upload_time_iso_8601": "2020-02-10T15:39:05.892094Z", "url": "https://files.pythonhosted.org/packages/56/78/00815ffe99d9b47bd9da7afa2d6b7a47c8b6edbc4c35c5129ca6643fc767/pyruvate-0.1.0-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09b1dac0d32c20304d757e7a82ac7d23", "sha256": "8b791bcef4e004f6dc8c3dac3ade8809bd058ced77392d1c246883dec90a21a2"}, "downloads": -1, "filename": "pyruvate-0.1.0.tar.gz", "has_sig": false, "md5_digest": "09b1dac0d32c20304d757e7a82ac7d23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20004, "upload_time": "2020-02-10T15:39:07", "upload_time_iso_8601": "2020-02-10T15:39:07.554663Z", "url": "https://files.pythonhosted.org/packages/71/58/56409f9709d646e2a8716355d7cc77f32f6e98ef311a73ccbd3756ddb34a/pyruvate-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "61ec821f046e3444e5019c306d7c5c94", "sha256": "e40b1cf0d55d4d1550c95119e544249fdb03376c4e454664240b4ba2fb040ca7"}, "downloads": -1, "filename": "pyruvate-0.2.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "61ec821f046e3444e5019c306d7c5c94", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 2940917, "upload_time": "2020-03-10T11:19:47", "upload_time_iso_8601": "2020-03-10T11:19:47.036034Z", "url": "https://files.pythonhosted.org/packages/8c/2f/e0871fbda159ef345c877291ddae56c1cb9b08338432a40dd6ecbf573b0d/pyruvate-0.2.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e69626527e177c2ac9b4035165eec457", "sha256": "17356d498e1f62195f19a1ad2118bc51fba0d1d3bf1733cfd41951442ab40227"}, "downloads": -1, "filename": "pyruvate-0.2.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e69626527e177c2ac9b4035165eec457", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1476022, "upload_time": "2020-03-10T11:19:50", "upload_time_iso_8601": "2020-03-10T11:19:50.370613Z", "url": "https://files.pythonhosted.org/packages/34/75/5262e37448a583b3e50ce214e5de4b4d7816b9e715c21c567e4ae1b55d96/pyruvate-0.2.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f97ca229eb3bba68a8658f7701f2324", "sha256": "7d96c1a37f5d7fa37f0e98af6479def11267affdc67b14de8279c1a1139bd92f"}, "downloads": -1, "filename": "pyruvate-0.2.0-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "7f97ca229eb3bba68a8658f7701f2324", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 4405588, "upload_time": "2020-03-10T11:19:54", "upload_time_iso_8601": "2020-03-10T11:19:54.259518Z", "url": "https://files.pythonhosted.org/packages/66/31/eae6286f997c0e6055d94068acdf3b85c2ae58014e2d86193df74e49e1e1/pyruvate-0.2.0-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4c131735f231924b964481361ae2478", "sha256": "45ae77ca01c02d2dae6b4b9c4881f9dad7f73b43a574a5198ab23b61322d6b1f"}, "downloads": -1, "filename": "pyruvate-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f4c131735f231924b964481361ae2478", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24427, "upload_time": "2020-03-10T11:20:27", "upload_time_iso_8601": "2020-03-10T11:20:27.816508Z", "url": "https://files.pythonhosted.org/packages/49/99/687eaae8bfd5ec1ca902523fb82ab3526bf8cd852cd37097409059c26914/pyruvate-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "61ec821f046e3444e5019c306d7c5c94", "sha256": "e40b1cf0d55d4d1550c95119e544249fdb03376c4e454664240b4ba2fb040ca7"}, "downloads": -1, "filename": "pyruvate-0.2.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "61ec821f046e3444e5019c306d7c5c94", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 2940917, "upload_time": "2020-03-10T11:19:47", "upload_time_iso_8601": "2020-03-10T11:19:47.036034Z", "url": "https://files.pythonhosted.org/packages/8c/2f/e0871fbda159ef345c877291ddae56c1cb9b08338432a40dd6ecbf573b0d/pyruvate-0.2.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e69626527e177c2ac9b4035165eec457", "sha256": "17356d498e1f62195f19a1ad2118bc51fba0d1d3bf1733cfd41951442ab40227"}, "downloads": -1, "filename": "pyruvate-0.2.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e69626527e177c2ac9b4035165eec457", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1476022, "upload_time": "2020-03-10T11:19:50", "upload_time_iso_8601": "2020-03-10T11:19:50.370613Z", "url": "https://files.pythonhosted.org/packages/34/75/5262e37448a583b3e50ce214e5de4b4d7816b9e715c21c567e4ae1b55d96/pyruvate-0.2.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f97ca229eb3bba68a8658f7701f2324", "sha256": "7d96c1a37f5d7fa37f0e98af6479def11267affdc67b14de8279c1a1139bd92f"}, "downloads": -1, "filename": "pyruvate-0.2.0-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "7f97ca229eb3bba68a8658f7701f2324", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 4405588, "upload_time": "2020-03-10T11:19:54", "upload_time_iso_8601": "2020-03-10T11:19:54.259518Z", "url": "https://files.pythonhosted.org/packages/66/31/eae6286f997c0e6055d94068acdf3b85c2ae58014e2d86193df74e49e1e1/pyruvate-0.2.0-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4c131735f231924b964481361ae2478", "sha256": "45ae77ca01c02d2dae6b4b9c4881f9dad7f73b43a574a5198ab23b61322d6b1f"}, "downloads": -1, "filename": "pyruvate-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f4c131735f231924b964481361ae2478", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24427, "upload_time": "2020-03-10T11:20:27", "upload_time_iso_8601": "2020-03-10T11:20:27.816508Z", "url": "https://files.pythonhosted.org/packages/49/99/687eaae8bfd5ec1ca902523fb82ab3526bf8cd852cd37097409059c26914/pyruvate-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:29 2020"}