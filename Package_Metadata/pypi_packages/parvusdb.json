{"info": {"author": "Alberto Cetoli", "author_email": "alberto@nlulite.com", "bugtrack_url": null, "classifiers": [], "description": "# ParvusDB a simple, in-memory graph database\n\n## Requirements \n* python-igraph\n* hy\n* python 3.5\n\n## Installation\npip3 install parvusdb\n\n\n## What is ParvusDB\n\nParvusDB is a small python3 library for handling graph operations. It acts as an in-memory \ngraph database. It is meant to be used for small graphs (a few hundred nodes)\n\n## Graph format\nGraphs are written as a collection of _edges_ and _vertices_. A vertex is written as\n```\n{}(a)\n```\n\nwhere `a` is the name of the vertex. This name is used for the operations on the vertex iself.\nA vertex can have properties written inside the brackets\n```\n{'tag': 'PERSON', 'text': 'john'}(a)\n```\n\nThe text inside the brackets is in the JSON format. \nEach of these properties is associated to the node and stored inside the graph\n\nThe edges are written as\n```\n{}(a,b)\n```\n\nwhere `a` is the _source_ node name and `b` is the _target_ node name. \nAs for the vertex, properties can be added inside the brackets\n```\n{'relation': 'LIVES_AT'}(a,b)\n```\n\nA vertex can have a name too, though it must be given as a property\n ```\n{'relation': 'LIVES_AT', 'name': 'r1'}(a,b)\n```\n\n\nA triplet can therefore be written in the form.\n ```\n{'tag': 'PERSON', 'text': 'john'}(a), {'relation': 'LIVES_AT'}(a,b), {'tag': 'PLACE', 'text': 'London'}(b)\n```\n\n## Keywords of the graph database\nThere are 6 commands (they must be typed in upper case)\n* CREATE\n* DELETE\n* MATCH\n* RETURN\n* SET\n* WHERE\n\n### The keyword CREATE\nThis command creates the graph on the right hand side\n```\nCREATE {'tag': 'PERSON', 'text': 'john'}(a), {'relation': 'LIVES_AT'}(a,b), {'tag': 'PLACE', 'text': 'London'}(b);\n```\n\n### The keyword MATCH\nThis command matches a graph with the topology and properties specified in the right hand side\n```\nMATCH {'tag': 'PERSON'}(a), {'relation': 'LIVES_AT', 'name': 'r1'}(a,b), {'tag': 'PLACE'}(b);\n```\n\n### The keyword DELETE\nThis keyword deletes the vertex or edge with the names on the right hand side\n```\nDELETE a, b, r1\n```\n\n### The keyword WHERE\nThis keyword let the user specify a LISP code as a condition for the match. \nFor example, if we want the \"text\" parameter of the node `a` to be in a list of names\n```\nMATCH {'tag': 'PERSON'}(a), {'relation': 'LIVES_AT', 'name': 'r1'}(a,b), {'tag': 'PLACE'}(b)\n  WHERE (in (get a \"text\") [\"john\" \"joseph\" \"joachim\"]);\n```\n\n### The keyword SET\nThis command let us modify the content of a graph.\nFor example, if we want to change the text of the node `a`   \n```\nMATCH {'tag': 'PERSON'}(a), {'relation': 'LIVES_AT', 'name': 'r1'}(a,b), {'tag': 'PLACE'}(b)\nSET (assoc a \"text\" \"not john anymore\");\n```\n\n### The keyword RETURN\nThis command let returns the properties of a specific node or edge\n```\nMATCH {'tag': 'PERSON'}(a), {'relation': 'LIVES_AT', 'name': 'r1'}(a,b), {'tag': 'PLACE'}(b)\nRETURN a, r1;\n```\n\nThe return value would be a list of the form\n```\n[{'a': {'tag': 'PERSON', 'text': 'john'}, 'r1': {'relation': 'LIVES_AT'}}]\n```\n\nIf no vertex or edge name is specified, the system return the whole graph (in the 'parvusdb format' ).\n\n## Python3 code examples\n\nLet's add a triplet to a graph\n```python\nfrom igraph import Graph\nfrom parvusdb import GraphDatabase\n\n\nif __name__ == '__main__':\n    g = Graph(directed=True)\n    db = GraphDatabase(g)\n\n    creation_string = \"\"\"\n    CREATE {'tag': 'PERSON', 'text': 'john'}(a), {'relation': 'LIVES_AT'}(a,b), \n           {'tag': 'PLACE', 'text': 'London'}(b) \n    RETURN;\n    \"\"\"\n    lst = db.query(creation_string)\n    print(lst)\n```\n\nwhich brings the output\n```bash\n[{'GRAPH': \"{'tag': 'PERSON', 'text': 'john'}(a), {'tag': 'PLACE', 'text': 'London'}(b), {'relation': 'LIVES_AT'}(a,b)\"}]\n```\n\nThen we can try to match elements of the triplet\n```python\nfrom igraph import Graph, plot\nfrom parvusdb import GraphDatabase\n\n\nif __name__ == '__main__':\n    g = Graph(directed=True)\n    db = GraphDatabase(g)\n\n    creation_string = \"\"\"\n    CREATE {'tag': 'PERSON', 'text': 'john'}(a), {'relation': 'LIVES_AT'}(a,b),\n           {'tag': 'PLACE', 'text': 'London'}(b);\n    \"\"\"\n\n    match_string = \"\"\"\n    MATCH {}(a), {'relation': 'LIVES_AT'}(a,b), {}(b) \n    RETURN a,b;\n    \"\"\"\n\n    lst = db.query(creation_string)\n    lst = db.query(match_string)\n    print(lst)\n```\n\nwith output\n```bash\n[{'a': {'name': 'a', 'tag': 'PERSON', 'text': 'john'}, 'b': {'name': 'b', 'tag': 'PLACE', 'text': 'London'}}]\n```\n\nWe can limit the matching process by using WHERE\n\n```python\nfrom igraph import Graph, plot\nfrom parvusdb import GraphDatabase\n\n\nif __name__ == '__main__':\n    g = Graph(directed=True)\n    db = GraphDatabase(g)\n\n\n    creation_string = \"\"\"\n    CREATE {'tag': 'PERSON', 'text': 'john'}(a), {'relation': 'LIVES_AT'}(a,b),\n           {'tag': 'PLACE', 'text': 'London'}(b)\n    CREATE {'tag': 'PERSON', 'text': 'joseph'}(v1), {'relation': 'LIVES_AT'}(v1,v2),\n           {'tag': 'PLACE', 'text': 'London'}(v2)\n    \"\"\"\n\n    match_string = \"\"\"\n    MATCH {}(_a), {'relation': 'LIVES_AT'}(_a,_b), {}(_b)\n      WHERE (= (get _a \"text\") \"joseph\")\n    RETURN _a,_b;\n    \"\"\"\n\n    lst = db.query(creation_string)\n    lst = db.query(match_string)\n    print(lst)\n```\n\nwith output\n```python\n[{'_b': {'text': 'London', 'tag': 'PLACE', 'name': 'v2'}, '_a': {'text': 'joseph', 'tag': 'PERSON', 'name': 'v1'}}]\n```\n\n## TODO\n* Handling of errors in GraphDatabase.query_lines()\n* Ability to add LISP code outside WHERE and SET statements\n* Create a stand-alone command line for the database\n* Ability to match multiple items\n\n## Known issues\n* The igraph library does not like multiple edges on the same nodes, \n  therefore the MATCH function would not work correctly in those cases\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/fractalego/parvusdb", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "parvusdb", "package_url": "https://pypi.org/project/parvusdb/", "platform": "", "project_url": "https://pypi.org/project/parvusdb/", "project_urls": {"Homepage": "http://github.com/fractalego/parvusdb"}, "release_url": "https://pypi.org/project/parvusdb/0.0.27/", "requires_dist": ["python-igraph (==0.7.1.post6)", "hy (==0.13.0)"], "requires_python": "", "summary": "A lightweight in-memory graph database", "version": "0.0.27", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ParvusDB a simple, in-memory graph database</h1>\n<h2>Requirements</h2>\n<ul>\n<li>python-igraph</li>\n<li>hy</li>\n<li>python 3.5</li>\n</ul>\n<h2>Installation</h2>\n<p>pip3 install parvusdb</p>\n<h2>What is ParvusDB</h2>\n<p>ParvusDB is a small python3 library for handling graph operations. It acts as an in-memory\ngraph database. It is meant to be used for small graphs (a few hundred nodes)</p>\n<h2>Graph format</h2>\n<p>Graphs are written as a collection of <em>edges</em> and <em>vertices</em>. A vertex is written as</p>\n<pre><code>{}(a)\n</code></pre>\n<p>where <code>a</code> is the name of the vertex. This name is used for the operations on the vertex iself.\nA vertex can have properties written inside the brackets</p>\n<pre><code>{'tag': 'PERSON', 'text': 'john'}(a)\n</code></pre>\n<p>The text inside the brackets is in the JSON format.\nEach of these properties is associated to the node and stored inside the graph</p>\n<p>The edges are written as</p>\n<pre><code>{}(a,b)\n</code></pre>\n<p>where <code>a</code> is the <em>source</em> node name and <code>b</code> is the <em>target</em> node name.\nAs for the vertex, properties can be added inside the brackets</p>\n<pre><code>{'relation': 'LIVES_AT'}(a,b)\n</code></pre>\n<p>A vertex can have a name too, though it must be given as a property</p>\n<pre><code>{'relation': 'LIVES_AT', 'name': 'r1'}(a,b)\n</code></pre>\n<p>A triplet can therefore be written in the form.</p>\n<pre><code>{'tag': 'PERSON', 'text': 'john'}(a), {'relation': 'LIVES_AT'}(a,b), {'tag': 'PLACE', 'text': 'London'}(b)\n</code></pre>\n<h2>Keywords of the graph database</h2>\n<p>There are 6 commands (they must be typed in upper case)</p>\n<ul>\n<li>CREATE</li>\n<li>DELETE</li>\n<li>MATCH</li>\n<li>RETURN</li>\n<li>SET</li>\n<li>WHERE</li>\n</ul>\n<h3>The keyword CREATE</h3>\n<p>This command creates the graph on the right hand side</p>\n<pre><code>CREATE {'tag': 'PERSON', 'text': 'john'}(a), {'relation': 'LIVES_AT'}(a,b), {'tag': 'PLACE', 'text': 'London'}(b);\n</code></pre>\n<h3>The keyword MATCH</h3>\n<p>This command matches a graph with the topology and properties specified in the right hand side</p>\n<pre><code>MATCH {'tag': 'PERSON'}(a), {'relation': 'LIVES_AT', 'name': 'r1'}(a,b), {'tag': 'PLACE'}(b);\n</code></pre>\n<h3>The keyword DELETE</h3>\n<p>This keyword deletes the vertex or edge with the names on the right hand side</p>\n<pre><code>DELETE a, b, r1\n</code></pre>\n<h3>The keyword WHERE</h3>\n<p>This keyword let the user specify a LISP code as a condition for the match.\nFor example, if we want the \"text\" parameter of the node <code>a</code> to be in a list of names</p>\n<pre><code>MATCH {'tag': 'PERSON'}(a), {'relation': 'LIVES_AT', 'name': 'r1'}(a,b), {'tag': 'PLACE'}(b)\n  WHERE (in (get a \"text\") [\"john\" \"joseph\" \"joachim\"]);\n</code></pre>\n<h3>The keyword SET</h3>\n<p>This command let us modify the content of a graph.\nFor example, if we want to change the text of the node <code>a</code></p>\n<pre><code>MATCH {'tag': 'PERSON'}(a), {'relation': 'LIVES_AT', 'name': 'r1'}(a,b), {'tag': 'PLACE'}(b)\nSET (assoc a \"text\" \"not john anymore\");\n</code></pre>\n<h3>The keyword RETURN</h3>\n<p>This command let returns the properties of a specific node or edge</p>\n<pre><code>MATCH {'tag': 'PERSON'}(a), {'relation': 'LIVES_AT', 'name': 'r1'}(a,b), {'tag': 'PLACE'}(b)\nRETURN a, r1;\n</code></pre>\n<p>The return value would be a list of the form</p>\n<pre><code>[{'a': {'tag': 'PERSON', 'text': 'john'}, 'r1': {'relation': 'LIVES_AT'}}]\n</code></pre>\n<p>If no vertex or edge name is specified, the system return the whole graph (in the 'parvusdb format' ).</p>\n<h2>Python3 code examples</h2>\n<p>Let's add a triplet to a graph</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">igraph</span> <span class=\"kn\">import</span> <span class=\"n\">Graph</span>\n<span class=\"kn\">from</span> <span class=\"nn\">parvusdb</span> <span class=\"kn\">import</span> <span class=\"n\">GraphDatabase</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">Graph</span><span class=\"p\">(</span><span class=\"n\">directed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">GraphDatabase</span><span class=\"p\">(</span><span class=\"n\">g</span><span class=\"p\">)</span>\n\n    <span class=\"n\">creation_string</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">    CREATE {'tag': 'PERSON', 'text': 'john'}(a), {'relation': 'LIVES_AT'}(a,b), </span>\n<span class=\"s2\">           {'tag': 'PLACE', 'text': 'London'}(b) </span>\n<span class=\"s2\">    RETURN;</span>\n<span class=\"s2\">    \"\"\"</span>\n    <span class=\"n\">lst</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">creation_string</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lst</span><span class=\"p\">)</span>\n</pre>\n<p>which brings the output</p>\n<pre><span class=\"o\">[{</span><span class=\"s1\">'GRAPH'</span>: <span class=\"s2\">\"{'tag': 'PERSON', 'text': 'john'}(a), {'tag': 'PLACE', 'text': 'London'}(b), {'relation': 'LIVES_AT'}(a,b)\"</span><span class=\"o\">}]</span>\n</pre>\n<p>Then we can try to match elements of the triplet</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">igraph</span> <span class=\"kn\">import</span> <span class=\"n\">Graph</span><span class=\"p\">,</span> <span class=\"n\">plot</span>\n<span class=\"kn\">from</span> <span class=\"nn\">parvusdb</span> <span class=\"kn\">import</span> <span class=\"n\">GraphDatabase</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">Graph</span><span class=\"p\">(</span><span class=\"n\">directed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">GraphDatabase</span><span class=\"p\">(</span><span class=\"n\">g</span><span class=\"p\">)</span>\n\n    <span class=\"n\">creation_string</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">    CREATE {'tag': 'PERSON', 'text': 'john'}(a), {'relation': 'LIVES_AT'}(a,b),</span>\n<span class=\"s2\">           {'tag': 'PLACE', 'text': 'London'}(b);</span>\n<span class=\"s2\">    \"\"\"</span>\n\n    <span class=\"n\">match_string</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">    MATCH </span><span class=\"si\">{}</span><span class=\"s2\">(a), {'relation': 'LIVES_AT'}(a,b), </span><span class=\"si\">{}</span><span class=\"s2\">(b) </span>\n<span class=\"s2\">    RETURN a,b;</span>\n<span class=\"s2\">    \"\"\"</span>\n\n    <span class=\"n\">lst</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">creation_string</span><span class=\"p\">)</span>\n    <span class=\"n\">lst</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">match_string</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lst</span><span class=\"p\">)</span>\n</pre>\n<p>with output</p>\n<pre><span class=\"o\">[{</span><span class=\"s1\">'a'</span>: <span class=\"o\">{</span><span class=\"s1\">'name'</span>: <span class=\"s1\">'a'</span>, <span class=\"s1\">'tag'</span>: <span class=\"s1\">'PERSON'</span>, <span class=\"s1\">'text'</span>: <span class=\"s1\">'john'</span><span class=\"o\">}</span>, <span class=\"s1\">'b'</span>: <span class=\"o\">{</span><span class=\"s1\">'name'</span>: <span class=\"s1\">'b'</span>, <span class=\"s1\">'tag'</span>: <span class=\"s1\">'PLACE'</span>, <span class=\"s1\">'text'</span>: <span class=\"s1\">'London'</span><span class=\"o\">}}]</span>\n</pre>\n<p>We can limit the matching process by using WHERE</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">igraph</span> <span class=\"kn\">import</span> <span class=\"n\">Graph</span><span class=\"p\">,</span> <span class=\"n\">plot</span>\n<span class=\"kn\">from</span> <span class=\"nn\">parvusdb</span> <span class=\"kn\">import</span> <span class=\"n\">GraphDatabase</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">Graph</span><span class=\"p\">(</span><span class=\"n\">directed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">GraphDatabase</span><span class=\"p\">(</span><span class=\"n\">g</span><span class=\"p\">)</span>\n\n\n    <span class=\"n\">creation_string</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">    CREATE {'tag': 'PERSON', 'text': 'john'}(a), {'relation': 'LIVES_AT'}(a,b),</span>\n<span class=\"s2\">           {'tag': 'PLACE', 'text': 'London'}(b)</span>\n<span class=\"s2\">    CREATE {'tag': 'PERSON', 'text': 'joseph'}(v1), {'relation': 'LIVES_AT'}(v1,v2),</span>\n<span class=\"s2\">           {'tag': 'PLACE', 'text': 'London'}(v2)</span>\n<span class=\"s2\">    \"\"\"</span>\n\n    <span class=\"n\">match_string</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">    MATCH </span><span class=\"si\">{}</span><span class=\"s2\">(_a), {'relation': 'LIVES_AT'}(_a,_b), </span><span class=\"si\">{}</span><span class=\"s2\">(_b)</span>\n<span class=\"s2\">      WHERE (= (get _a \"text\") \"joseph\")</span>\n<span class=\"s2\">    RETURN _a,_b;</span>\n<span class=\"s2\">    \"\"\"</span>\n\n    <span class=\"n\">lst</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">creation_string</span><span class=\"p\">)</span>\n    <span class=\"n\">lst</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">match_string</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lst</span><span class=\"p\">)</span>\n</pre>\n<p>with output</p>\n<pre><span class=\"p\">[{</span><span class=\"s1\">'_b'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'London'</span><span class=\"p\">,</span> <span class=\"s1\">'tag'</span><span class=\"p\">:</span> <span class=\"s1\">'PLACE'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'v2'</span><span class=\"p\">},</span> <span class=\"s1\">'_a'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'joseph'</span><span class=\"p\">,</span> <span class=\"s1\">'tag'</span><span class=\"p\">:</span> <span class=\"s1\">'PERSON'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'v1'</span><span class=\"p\">}}]</span>\n</pre>\n<h2>TODO</h2>\n<ul>\n<li>Handling of errors in GraphDatabase.query_lines()</li>\n<li>Ability to add LISP code outside WHERE and SET statements</li>\n<li>Create a stand-alone command line for the database</li>\n<li>Ability to match multiple items</li>\n</ul>\n<h2>Known issues</h2>\n<ul>\n<li>The igraph library does not like multiple edges on the same nodes,\ntherefore the MATCH function would not work correctly in those cases</li>\n</ul>\n\n          </div>"}, "last_serial": 5494537, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "02bd8ea83e53879fa090dbe1a2e81be2", "sha256": "d11cf84fccec16a0edcd4a887cb1ae91760b37ec2d9f8aa2407b9e97d6e08a89"}, "downloads": -1, "filename": "parvusdb-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "02bd8ea83e53879fa090dbe1a2e81be2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9636, "upload_time": "2017-07-28T10:54:17", "upload_time_iso_8601": "2017-07-28T10:54:17.047153Z", "url": "https://files.pythonhosted.org/packages/af/05/d515fb5af7626592c9ea416565524c728fef5938cb24f1cd5849cc68c7fa/parvusdb-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbd7630b8ce3639ad5073c4cf8a39324", "sha256": "085bf6664fd2c74b0c70595246de9d9b0cad1064da9786dd088f7a176d86745d"}, "downloads": -1, "filename": "parvusdb-0.0.10.tar.gz", "has_sig": false, "md5_digest": "dbd7630b8ce3639ad5073c4cf8a39324", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6191, "upload_time": "2017-07-28T10:54:18", "upload_time_iso_8601": "2017-07-28T10:54:18.752012Z", "url": "https://files.pythonhosted.org/packages/4e/0d/3d308cfb0fbec5e71383a949af63a5b5c2e0bb53cb0ccbba557ccdee37e8/parvusdb-0.0.10.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "c83793e6f530b5ec888e6cefacfbee1c", "sha256": "892c16d1722ce7a8a4cb64442c2169195b39755347f98ad248e37fb2a5773f4e"}, "downloads": -1, "filename": "parvusdb-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "c83793e6f530b5ec888e6cefacfbee1c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9478, "upload_time": "2017-09-09T10:48:24", "upload_time_iso_8601": "2017-09-09T10:48:24.827442Z", "url": "https://files.pythonhosted.org/packages/97/ec/c34681bc45d976bd173f58fa94f2cc1f478b5b1db25282214f636defb101/parvusdb-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2353fbab0d6a36992c81b55f8440848", "sha256": "bc1b6c99fb75ee36835611a1db0249306fad790d4168f766457e768246ede4cb"}, "downloads": -1, "filename": "parvusdb-0.0.12.tar.gz", "has_sig": false, "md5_digest": "e2353fbab0d6a36992c81b55f8440848", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7716, "upload_time": "2017-09-09T10:48:27", "upload_time_iso_8601": "2017-09-09T10:48:27.094356Z", "url": "https://files.pythonhosted.org/packages/82/5f/287f7b2154eb43f0b7625bf5ef566b8e54f8d24809cd435093eba4e1ea7b/parvusdb-0.0.12.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "fe1f8835d82e82c5b1981bd3a1c6badb", "sha256": "01169647dd8dec1946c436e63bfd62ce19945235977766e2a8554d46775b192a"}, "downloads": -1, "filename": "parvusdb-0.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "fe1f8835d82e82c5b1981bd3a1c6badb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9969, "upload_time": "2017-10-21T17:35:21", "upload_time_iso_8601": "2017-10-21T17:35:21.754995Z", "url": "https://files.pythonhosted.org/packages/64/44/3aee40cab8481cf567078834862bf510bc51c80e69850a988dda6bd9840f/parvusdb-0.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d88cc4527a24fb0d8256f8c2faf247f6", "sha256": "2108d1a50fb0f81b85270551d7a422d995fe5f8a2680d785e4f260f0b2afdcc0"}, "downloads": -1, "filename": "parvusdb-0.0.14.tar.gz", "has_sig": false, "md5_digest": "d88cc4527a24fb0d8256f8c2faf247f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8257, "upload_time": "2017-10-21T17:35:24", "upload_time_iso_8601": "2017-10-21T17:35:24.121083Z", "url": "https://files.pythonhosted.org/packages/1c/77/9bc6d88fb054c5e5544642fde9e712246c2250106da62b5676a9b66bd25f/parvusdb-0.0.14.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "6ccc0387f220051b7bd84bd2fd34126c", "sha256": "760c20e3351ea012af4433422056c30cc1f7fb8e4911b197940b82048d79bf41"}, "downloads": -1, "filename": "parvusdb-0.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "6ccc0387f220051b7bd84bd2fd34126c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10401, "upload_time": "2017-10-25T10:14:31", "upload_time_iso_8601": "2017-10-25T10:14:31.192225Z", "url": "https://files.pythonhosted.org/packages/8c/24/6feae8cf417adf843df7979c703d959f4e0c493288c61371d0ab26c8b2e3/parvusdb-0.0.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f65c07c2163b1478cc134c3a54ce8f6", "sha256": "f661e506dd031194ecfdea6bf0aba1b9d57525bf4b43e0ad1faa4f376a1b08ab"}, "downloads": -1, "filename": "parvusdb-0.0.16.tar.gz", "has_sig": false, "md5_digest": "8f65c07c2163b1478cc134c3a54ce8f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 218951, "upload_time": "2017-10-25T10:14:33", "upload_time_iso_8601": "2017-10-25T10:14:33.044626Z", "url": "https://files.pythonhosted.org/packages/d0/6f/df6826970361644dbee39b74c210a14d246f719b0960756b8bc40e15c7e7/parvusdb-0.0.16.tar.gz", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "7f280252da322e9126a4cad5340120f0", "sha256": "b2a6a17f09b33b45c912caae675e08bb15b50e882e4a6405db8bf1cda196d028"}, "downloads": -1, "filename": "parvusdb-0.0.18-py3-none-any.whl", "has_sig": false, "md5_digest": "7f280252da322e9126a4cad5340120f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10400, "upload_time": "2017-10-30T11:38:41", "upload_time_iso_8601": "2017-10-30T11:38:41.751471Z", "url": "https://files.pythonhosted.org/packages/4b/08/6ae1bbd5f1955ac042359d96b3f757f807f51483f41b0ef19ca375c3cff3/parvusdb-0.0.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9300bb7f31e9fe70f6766b80165df90", "sha256": "cc3fb69cf3befed803d6026de4513c6437dcb4c799c37d132a2421133f971fc9"}, "downloads": -1, "filename": "parvusdb-0.0.18.tar.gz", "has_sig": false, "md5_digest": "c9300bb7f31e9fe70f6766b80165df90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 232119, "upload_time": "2017-10-30T11:38:43", "upload_time_iso_8601": "2017-10-30T11:38:43.857826Z", "url": "https://files.pythonhosted.org/packages/96/32/568a6c1389452d512f800f55407eb2c7da673b9867214e5eead886f8594b/parvusdb-0.0.18.tar.gz", "yanked": false}], "0.0.20": [{"comment_text": "", "digests": {"md5": "34657f226e02935ab4d50435b24babe3", "sha256": "9fe04ce16a28cb04a2aa791f4075876d2b966337c932ec1acf88661886f54a0a"}, "downloads": -1, "filename": "parvusdb-0.0.20-py3-none-any.whl", "has_sig": false, "md5_digest": "34657f226e02935ab4d50435b24babe3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10344, "upload_time": "2017-11-09T15:19:41", "upload_time_iso_8601": "2017-11-09T15:19:41.839323Z", "url": "https://files.pythonhosted.org/packages/66/a2/fbe49dd4af6d00122603c49d05efcd370e52f0c436428aada879417be282/parvusdb-0.0.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "149f330414052d98802efd4bc8d0b13d", "sha256": "3767adb5f0473a5716916c1fb9137ad17513647f3272b788c181595de0cac0e5"}, "downloads": -1, "filename": "parvusdb-0.0.20.tar.gz", "has_sig": false, "md5_digest": "149f330414052d98802efd4bc8d0b13d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 232085, "upload_time": "2017-11-09T15:19:43", "upload_time_iso_8601": "2017-11-09T15:19:43.151814Z", "url": "https://files.pythonhosted.org/packages/0b/e9/260012eab57127e189f05c311123f56c17e48a254d1cb7c98bc28e3526cd/parvusdb-0.0.20.tar.gz", "yanked": false}], "0.0.22": [{"comment_text": "", "digests": {"md5": "18df4eaaba97da2528041500a7a45d17", "sha256": "2daa2c512a77ee9babfa5c088c3950b6c400a013e1726f67a9fdd6813a8b0b31"}, "downloads": -1, "filename": "parvusdb-0.0.22-py3-none-any.whl", "has_sig": false, "md5_digest": "18df4eaaba97da2528041500a7a45d17", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10358, "upload_time": "2018-01-09T18:55:54", "upload_time_iso_8601": "2018-01-09T18:55:54.568855Z", "url": "https://files.pythonhosted.org/packages/81/3a/39b9a69c7bd4a7223e5872ac39b36895a4093e49ba364214791ed0421070/parvusdb-0.0.22-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bf264e43ff4289d761badb3dd3e281f", "sha256": "4fa0f173e468aa48771c09317d969139cba1fb3b96c1a5ed73b7b1711bdfb2ff"}, "downloads": -1, "filename": "parvusdb-0.0.22.tar.gz", "has_sig": false, "md5_digest": "8bf264e43ff4289d761badb3dd3e281f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 232094, "upload_time": "2018-01-09T18:55:56", "upload_time_iso_8601": "2018-01-09T18:55:56.297084Z", "url": "https://files.pythonhosted.org/packages/6f/39/955c63b446808d8cdc15097ed57a05cddc4068c680df87d9091afe4987f5/parvusdb-0.0.22.tar.gz", "yanked": false}], "0.0.23": [{"comment_text": "", "digests": {"md5": "0c0069d33f4580aa8c363fffbd50c608", "sha256": "4257dcc588773c4b131bcfb9c50f3c863172e5263af0265de762127498eae55c"}, "downloads": -1, "filename": "parvusdb-0.0.23-py3-none-any.whl", "has_sig": false, "md5_digest": "0c0069d33f4580aa8c363fffbd50c608", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9978, "upload_time": "2019-04-19T21:23:46", "upload_time_iso_8601": "2019-04-19T21:23:46.059786Z", "url": "https://files.pythonhosted.org/packages/b8/46/6fb5461451a8bf375e6714a5ff25245e9063277290d79db97cf13e571add/parvusdb-0.0.23-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da317fa97c626acddbe0d41cbcd0c98a", "sha256": "88817873678c50c5405655557b4f30cdcf3e9e1500e8bc093d8f937ff19eb1b4"}, "downloads": -1, "filename": "parvusdb-0.0.23.tar.gz", "has_sig": false, "md5_digest": "da317fa97c626acddbe0d41cbcd0c98a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8396, "upload_time": "2019-04-19T21:23:47", "upload_time_iso_8601": "2019-04-19T21:23:47.684277Z", "url": "https://files.pythonhosted.org/packages/40/e9/085852d427dd0a05e92f033f117677fdaab2dcbadd487c939bc0c7f7edf8/parvusdb-0.0.23.tar.gz", "yanked": false}], "0.0.24": [{"comment_text": "", "digests": {"md5": "c35ffb4266c503919c64130800c99fb1", "sha256": "55791a5319e11b818a97b2f044d059ad42ae5a08571f14578771f66b6c8a64da"}, "downloads": -1, "filename": "parvusdb-0.0.24-py3-none-any.whl", "has_sig": false, "md5_digest": "c35ffb4266c503919c64130800c99fb1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10284, "upload_time": "2019-05-17T20:45:18", "upload_time_iso_8601": "2019-05-17T20:45:18.100153Z", "url": "https://files.pythonhosted.org/packages/7a/a2/3e70174cf7aaad206bf747186db1edc1227a6e8dae1047055d901ab2d943/parvusdb-0.0.24-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a8ea78143eb5c4c739f1b33dc28b265", "sha256": "dfb28fec543712494d025836165b95aa9cc99cbc8535f7c34f0694805f96f941"}, "downloads": -1, "filename": "parvusdb-0.0.24.tar.gz", "has_sig": false, "md5_digest": "8a8ea78143eb5c4c739f1b33dc28b265", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8539, "upload_time": "2019-05-17T20:45:19", "upload_time_iso_8601": "2019-05-17T20:45:19.639543Z", "url": "https://files.pythonhosted.org/packages/22/e6/fe8f135d7ac732b4f36ff8a6f3a7b86c3051032cf8b38c27b96b40cf7668/parvusdb-0.0.24.tar.gz", "yanked": false}], "0.0.25": [{"comment_text": "", "digests": {"md5": "e6980fa34087994b251b0a93c2d13f6e", "sha256": "fc0d94831f53a63a324d79fa3d0650e6e3964dcb6467e53c39e21e7bcab00317"}, "downloads": -1, "filename": "parvusdb-0.0.25-py3-none-any.whl", "has_sig": false, "md5_digest": "e6980fa34087994b251b0a93c2d13f6e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10296, "upload_time": "2019-05-17T20:56:47", "upload_time_iso_8601": "2019-05-17T20:56:47.643628Z", "url": "https://files.pythonhosted.org/packages/da/4a/fdefc70747bc4652a8c8791d0d67d2d6f63e4bf962ca1568a9d60edca01f/parvusdb-0.0.25-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2328358c6c4249594b63a16e2492101f", "sha256": "a35aa8b4c6cd89c9df4032ccb8f8bca9c4eab373527a075fa6ff9bb82a0d374c"}, "downloads": -1, "filename": "parvusdb-0.0.25.tar.gz", "has_sig": false, "md5_digest": "2328358c6c4249594b63a16e2492101f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8537, "upload_time": "2019-05-17T20:56:49", "upload_time_iso_8601": "2019-05-17T20:56:49.354906Z", "url": "https://files.pythonhosted.org/packages/6c/1b/f7e3c780cfcf585560fc8f0d1c60166c985cb2959bb5faa1c7f4abad216a/parvusdb-0.0.25.tar.gz", "yanked": false}], "0.0.26": [{"comment_text": "", "digests": {"md5": "b328988fb030fe309f278dd3a4288128", "sha256": "d736862e308e5b8bac99ee01b6d3223126be5c23cb93dd372b4182271629ceda"}, "downloads": -1, "filename": "parvusdb-0.0.26-py3-none-any.whl", "has_sig": false, "md5_digest": "b328988fb030fe309f278dd3a4288128", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9471, "upload_time": "2019-06-01T13:06:29", "upload_time_iso_8601": "2019-06-01T13:06:29.940630Z", "url": "https://files.pythonhosted.org/packages/b7/07/e84d47fc210bf86b92aeb89fe62ea892705674bdab24a7727c7d7b21b1a4/parvusdb-0.0.26-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93b4f447a2ef86b4c58c6f632af1ab97", "sha256": "1dd90c8104c2b0ebd88a3059f169d8890fbc6540a63060b2cd238ecc2d69052c"}, "downloads": -1, "filename": "parvusdb-0.0.26.tar.gz", "has_sig": false, "md5_digest": "93b4f447a2ef86b4c58c6f632af1ab97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8473, "upload_time": "2019-06-01T13:06:31", "upload_time_iso_8601": "2019-06-01T13:06:31.630428Z", "url": "https://files.pythonhosted.org/packages/35/12/6cab8a1e40add0f3c1fb78ea419d52c4b1ad17a251e7f022d82f19377536/parvusdb-0.0.26.tar.gz", "yanked": false}], "0.0.27": [{"comment_text": "", "digests": {"md5": "b48cd518949e17c5ff2ce5412fc6ce7b", "sha256": "92ffe3d7ba5648461c33f71837909e9063991137f6aede559fa841ce49074689"}, "downloads": -1, "filename": "parvusdb-0.0.27-py3-none-any.whl", "has_sig": false, "md5_digest": "b48cd518949e17c5ff2ce5412fc6ce7b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11122, "upload_time": "2019-07-06T10:36:25", "upload_time_iso_8601": "2019-07-06T10:36:25.927455Z", "url": "https://files.pythonhosted.org/packages/8a/73/ea82267bbe294ce65ce38f960a711d17d0ec3dc2f382fd119508ffe49a2b/parvusdb-0.0.27-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c99d17a798c80527bba0b408f1ba7364", "sha256": "6038c3274f5d079cdf90f7f39d74a94a3921be431f1b2331ae0e71e0980afa90"}, "downloads": -1, "filename": "parvusdb-0.0.27.tar.gz", "has_sig": false, "md5_digest": "c99d17a798c80527bba0b408f1ba7364", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9114, "upload_time": "2019-07-06T10:36:28", "upload_time_iso_8601": "2019-07-06T10:36:28.528693Z", "url": "https://files.pythonhosted.org/packages/83/36/a3a2e5501c65dae1de339a692c6f41699af68c95ab32a11bc72c069039e6/parvusdb-0.0.27.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "a634f027d6ee5aba707338be5810da68", "sha256": "dbe670b95621d3e8a85200b7f276f189263a5e449b89fc83e1eae52adb355ea6"}, "downloads": -1, "filename": "parvusdb-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a634f027d6ee5aba707338be5810da68", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8072, "upload_time": "2017-07-11T16:38:39", "upload_time_iso_8601": "2017-07-11T16:38:39.579443Z", "url": "https://files.pythonhosted.org/packages/84/a5/30c722a72081a3eb41c14061c6f40706f737995ae00af26a041f72b8e113/parvusdb-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69c083e8b3b78076bc89f7bc466ba16b", "sha256": "f0a2d01acc7af367b67bacdf702f2386e43a39eff592ca4995279b081ea7e3a1"}, "downloads": -1, "filename": "parvusdb-0.0.4.tar.gz", "has_sig": false, "md5_digest": "69c083e8b3b78076bc89f7bc466ba16b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5118, "upload_time": "2017-07-11T16:38:41", "upload_time_iso_8601": "2017-07-11T16:38:41.027414Z", "url": "https://files.pythonhosted.org/packages/04/44/8501561ff623cec5f9d161c31aa3f13058e675b120bac350ff9fd1fb39e5/parvusdb-0.0.4.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "3e8a29a125bcb76c247fe7f625497f47", "sha256": "aa3b8033750b43d92cb161eaacd547f3b9daa16ff4add7070c74b4a304d058b4"}, "downloads": -1, "filename": "parvusdb-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "3e8a29a125bcb76c247fe7f625497f47", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8520, "upload_time": "2017-07-14T13:30:59", "upload_time_iso_8601": "2017-07-14T13:30:59.910769Z", "url": "https://files.pythonhosted.org/packages/96/63/e7b0422260e9878ac43d40c3f707dc6d303574d5ddd424e556c30ecf7505/parvusdb-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0886f10d44235211da63267274b8f905", "sha256": "56fac962b404800dfd4efb2d151fb4c040890787035693e8ca487b52031c0a91"}, "downloads": -1, "filename": "parvusdb-0.0.6.tar.gz", "has_sig": false, "md5_digest": "0886f10d44235211da63267274b8f905", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5541, "upload_time": "2017-07-14T13:31:00", "upload_time_iso_8601": "2017-07-14T13:31:00.864101Z", "url": "https://files.pythonhosted.org/packages/b8/09/1b737b94ce4fac896b03be7b1e8b0d60c7c16a33a10e00517b3daab7dc6c/parvusdb-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b48cd518949e17c5ff2ce5412fc6ce7b", "sha256": "92ffe3d7ba5648461c33f71837909e9063991137f6aede559fa841ce49074689"}, "downloads": -1, "filename": "parvusdb-0.0.27-py3-none-any.whl", "has_sig": false, "md5_digest": "b48cd518949e17c5ff2ce5412fc6ce7b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11122, "upload_time": "2019-07-06T10:36:25", "upload_time_iso_8601": "2019-07-06T10:36:25.927455Z", "url": "https://files.pythonhosted.org/packages/8a/73/ea82267bbe294ce65ce38f960a711d17d0ec3dc2f382fd119508ffe49a2b/parvusdb-0.0.27-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c99d17a798c80527bba0b408f1ba7364", "sha256": "6038c3274f5d079cdf90f7f39d74a94a3921be431f1b2331ae0e71e0980afa90"}, "downloads": -1, "filename": "parvusdb-0.0.27.tar.gz", "has_sig": false, "md5_digest": "c99d17a798c80527bba0b408f1ba7364", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9114, "upload_time": "2019-07-06T10:36:28", "upload_time_iso_8601": "2019-07-06T10:36:28.528693Z", "url": "https://files.pythonhosted.org/packages/83/36/a3a2e5501c65dae1de339a692c6f41699af68c95ab32a11bc72c069039e6/parvusdb-0.0.27.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:10 2020"}