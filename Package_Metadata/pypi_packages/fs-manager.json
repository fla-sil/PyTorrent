{"info": {"author": "Daniil Trishkin", "author_email": "asteroid566@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4"], "description": "|language| |license| |coverage|\n\nDescription\n~~~~~~~~~~~\n\nThis module is designed to relief and simplify interaction of your\npython modules with the file system.\n\nInstallation\n~~~~~~~~~~~~\n\n``python setup.py install``\n\nor\n\n``pip install -e .``\n\nor\n\n``pip install fs-manager``\n\nHow to use\n~~~~~~~~~~\n\nFor example, you can inherit your class from ``FSManager`` class\n\n::\n\n    from fs_manager import FSManager\n\n    class Foo(FSManager, ...):\n      FSManager.__init__(self, base_path=\"/some/base\", mode=0o744, temporary=True)\n        ...\n\nOr you can just use it as an object\n\n::\n\n    from fs_manager import FSManager\n\n    with FSManager(base_path=\"/tmp/base\", mode=0o744, temporary=True) as fsm:\n      fsm.mkdir(alias=\"tom\", path=\"tom_dir\", mode=0o744, temporary=True)\n      fsm.cd(\"tom\")\n      fsm.mkdir(\"tom_dir\")\n      fsm.mkfile(\"jerry\", \"jerry_file\", 0o644, True)\n      fsm.ls()\n      fsm.up()\n      fsm.ls()\n      fsm.rm(\"tom\")\n\nSave what you did\n\n::\n\n    from fs_manager import FSManager\n\n    with FSManager(base_path=\"/tmp/base\", mode=0o744, temporary=True) as fsm:\n      fsm.mkdir(alias=\"tom\", path=\"tom_dir\", mode=0o744, temporary=True)\n      fsm.cd(\"tom\")\n      fsm.mkdir(\"tom_dir\")\n      fsm.mkfile(\"jerry\", \"jerry_file\", 0o644, True)\n      fsm.ls()\n      fsm.save_all()\n\n    ...\n    shutil.copy(\"/tmp/base/.fs-structure-full.json\", \"/tmp/another_base/.fs-structure-full.json\")\n    ...\n    \n    with FSManager(base_path=\"/tmp/another_base\", mode=0o744, temporary=True) as fsm:\n      fsm.load_all()\n\nStructure will be saved at root to \".fs-structure-full.json\". But structure\nsaves automatically when ``temporary=False``. So if you initialize\nfrom the same directory, structure loads anyway.\n\nInitialize you fs-manager from the directory on your disk\n\n::\n\n    from fs_manager import FSManager\n\n    with FSManager(base_path=\"/tmp/base\", mode=0o744, temporary=False) as fsm:\n      fsm.snappy(root_binded=True)\n      fsm.cd(\"some/path\")\n\nThus, if ``root_binded=True`` your structure will be initialized from one root.\nIn other words, you'll be able to ``cd`` right from the root fs-manager object.\n\nAlso you can verify hashsum of files under any prefix like that\n\n::\n\n    from fs_manager import FSManager\n\n    with FSManager(base_path=\"/tmp/base\", mode=0o744, temporary=False) as fsm:\n      fsm.snappy(root_binded=True)\n      fsm.cd(\"some/path\")\n      fsm.save_hashsums(\"sha1\")\n      ...\n      mismatches = fsm.check_hashsums(type=\"sha1\", log_warnings=False)\n\nThere is much more inside :)\n\n.. |language| image:: https://img.shields.io/badge/language-python-blue.svg\n.. |license| image:: https://img.shields.io/badge/license-Apache%202-blue.svg\n.. |coverage| image:: https://img.shields.io/codecov/c/github/codecov/example-python.svg?maxAge=2592000", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FromZeus/fs-manager", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "fs-manager", "package_url": "https://pypi.org/project/fs-manager/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fs-manager/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/FromZeus/fs-manager"}, "release_url": "https://pypi.org/project/fs-manager/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "This module is designed to relief and simplify interaction of your python modules with the file system.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"language\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cfd33f6c30bc3131f849b2c51d4313ca1a87c786/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e67756167652d707974686f6e2d626c75652e737667\"> <img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f3fc97f8a56b0816bf00a50c634ed430032cfa2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322d626c75652e737667\"> <img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9899f1403225ea2769cb8a798e57ebf8f29f3ad/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f636f6465636f762f6578616d706c652d707974686f6e2e7376673f6d61784167653d32353932303030\"></p>\n<div id=\"description\">\n<h2>Description</h2>\n<p>This module is designed to relief and simplify interaction of your\npython modules with the file system.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>python setup.py install</tt></p>\n<p>or</p>\n<p><tt>pip install <span class=\"pre\">-e</span> .</tt></p>\n<p>or</p>\n<p><tt>pip install <span class=\"pre\">fs-manager</span></tt></p>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<p>For example, you can inherit your class from <tt>FSManager</tt> class</p>\n<pre>from fs_manager import FSManager\n\nclass Foo(FSManager, ...):\n  FSManager.__init__(self, base_path=\"/some/base\", mode=0o744, temporary=True)\n    ...\n</pre>\n<p>Or you can just use it as an object</p>\n<pre>from fs_manager import FSManager\n\nwith FSManager(base_path=\"/tmp/base\", mode=0o744, temporary=True) as fsm:\n  fsm.mkdir(alias=\"tom\", path=\"tom_dir\", mode=0o744, temporary=True)\n  fsm.cd(\"tom\")\n  fsm.mkdir(\"tom_dir\")\n  fsm.mkfile(\"jerry\", \"jerry_file\", 0o644, True)\n  fsm.ls()\n  fsm.up()\n  fsm.ls()\n  fsm.rm(\"tom\")\n</pre>\n<p>Save what you did</p>\n<pre>from fs_manager import FSManager\n\nwith FSManager(base_path=\"/tmp/base\", mode=0o744, temporary=True) as fsm:\n  fsm.mkdir(alias=\"tom\", path=\"tom_dir\", mode=0o744, temporary=True)\n  fsm.cd(\"tom\")\n  fsm.mkdir(\"tom_dir\")\n  fsm.mkfile(\"jerry\", \"jerry_file\", 0o644, True)\n  fsm.ls()\n  fsm.save_all()\n\n...\nshutil.copy(\"/tmp/base/.fs-structure-full.json\", \"/tmp/another_base/.fs-structure-full.json\")\n...\n\nwith FSManager(base_path=\"/tmp/another_base\", mode=0o744, temporary=True) as fsm:\n  fsm.load_all()\n</pre>\n<p>Structure will be saved at root to \u201c.fs-structure-full.json\u201d. But structure\nsaves automatically when <tt>temporary=False</tt>. So if you initialize\nfrom the same directory, structure loads anyway.</p>\n<p>Initialize you fs-manager from the directory on your disk</p>\n<pre>from fs_manager import FSManager\n\nwith FSManager(base_path=\"/tmp/base\", mode=0o744, temporary=False) as fsm:\n  fsm.snappy(root_binded=True)\n  fsm.cd(\"some/path\")\n</pre>\n<p>Thus, if <tt>root_binded=True</tt> your structure will be initialized from one root.\nIn other words, you\u2019ll be able to <tt>cd</tt> right from the root fs-manager object.</p>\n<p>Also you can verify hashsum of files under any prefix like that</p>\n<pre>from fs_manager import FSManager\n\nwith FSManager(base_path=\"/tmp/base\", mode=0o744, temporary=False) as fsm:\n  fsm.snappy(root_binded=True)\n  fsm.cd(\"some/path\")\n  fsm.save_hashsums(\"sha1\")\n  ...\n  mismatches = fsm.check_hashsums(type=\"sha1\", log_warnings=False)\n</pre>\n<p>There is much more inside :)</p>\n</div>\n\n          </div>"}, "last_serial": 2353520, "releases": {"0.0.1": [], "0.0.2": [{"comment_text": "", "digests": {"md5": "905a66fbaa88a8c0d5acecc0d82a1f45", "sha256": "f9e87601c4d0e802be6850dafbdd5a924ea20d77286be77b7589200f0c40ce09"}, "downloads": -1, "filename": "fs-manager-0.0.2.tar.gz", "has_sig": false, "md5_digest": "905a66fbaa88a8c0d5acecc0d82a1f45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13207, "upload_time": "2016-06-23T08:31:48", "upload_time_iso_8601": "2016-06-23T08:31:48.939326Z", "url": "https://files.pythonhosted.org/packages/75/3a/62169f3925fcf3ae2ec6d74787f5517694ac368846fe4c38d4fff308d35f/fs-manager-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "d54a53a676c2e55af82081d10041cf8b", "sha256": "be52a26332b6bb9e91218e2dc595aec11abba07a489cb02db6ed4ba48e3d0875"}, "downloads": -1, "filename": "fs-manager-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d54a53a676c2e55af82081d10041cf8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15744, "upload_time": "2016-06-27T20:48:59", "upload_time_iso_8601": "2016-06-27T20:48:59.415052Z", "url": "https://files.pythonhosted.org/packages/da/ea/54015280c4f17075d63b2a7e38b2ed623118a47c1359f7d0184bdb4065e5/fs-manager-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "6f37e059514c32084f081a5f4ed1d5df", "sha256": "4500799df48e7b9822e440b12d985ce09184a453a6c57d4ac63f1fa4397c7827"}, "downloads": -1, "filename": "fs-manager-0.2.0.tar.gz", "has_sig": false, "md5_digest": "6f37e059514c32084f081a5f4ed1d5df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15514, "upload_time": "2016-06-29T10:33:35", "upload_time_iso_8601": "2016-06-29T10:33:35.018738Z", "url": "https://files.pythonhosted.org/packages/c5/69/ca060956d332b92fcd6d4ccd48673e6a7801ce71a6928c5a272166d9a7b0/fs-manager-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "263666dba4a4a4b73c1d8a3f66fe8f25", "sha256": "663a577cbb9807717b37b9ff877fcd6fe159846e62d145a91408d8c16d6f6e85"}, "downloads": -1, "filename": "fs-manager-0.2.1.tar.gz", "has_sig": false, "md5_digest": "263666dba4a4a4b73c1d8a3f66fe8f25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15884, "upload_time": "2016-06-30T10:34:39", "upload_time_iso_8601": "2016-06-30T10:34:39.688397Z", "url": "https://files.pythonhosted.org/packages/7a/78/7bd066f65a5f1315907bc25b1061f11e1f757bc8865c9619e552ed39a819/fs-manager-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "9c71a13ddf51c95f208ec679c95043ea", "sha256": "763349c99617c4acdca6cb00b015bb619af447dfaca928a0b415f0ff31294e81"}, "downloads": -1, "filename": "fs-manager-0.2.2.tar.gz", "has_sig": false, "md5_digest": "9c71a13ddf51c95f208ec679c95043ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15921, "upload_time": "2016-07-07T09:36:03", "upload_time_iso_8601": "2016-07-07T09:36:03.399829Z", "url": "https://files.pythonhosted.org/packages/31/4c/58e40d6eed74beadd8b0688d74804e0dc4d1f85cb3f42035500bdbdf4510/fs-manager-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "bbb43ee7fc8e815152680ac4dc068906", "sha256": "95220c3ddf1a1769513830d58b907681cf7bdb8509b9355a2edf19679088e937"}, "downloads": -1, "filename": "fs-manager-0.3.0.zip", "has_sig": false, "md5_digest": "bbb43ee7fc8e815152680ac4dc068906", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21814, "upload_time": "2016-09-20T18:38:56", "upload_time_iso_8601": "2016-09-20T18:38:56.763830Z", "url": "https://files.pythonhosted.org/packages/9e/79/e94e3975b539a244708dc8d73d3dd2a60046bc79f14681591e33f10e20d6/fs-manager-0.3.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bbb43ee7fc8e815152680ac4dc068906", "sha256": "95220c3ddf1a1769513830d58b907681cf7bdb8509b9355a2edf19679088e937"}, "downloads": -1, "filename": "fs-manager-0.3.0.zip", "has_sig": false, "md5_digest": "bbb43ee7fc8e815152680ac4dc068906", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21814, "upload_time": "2016-09-20T18:38:56", "upload_time_iso_8601": "2016-09-20T18:38:56.763830Z", "url": "https://files.pythonhosted.org/packages/9e/79/e94e3975b539a244708dc8d73d3dd2a60046bc79f14681591e33f10e20d6/fs-manager-0.3.0.zip", "yanked": false}], "timestamp": "Fri May  8 01:00:04 2020"}