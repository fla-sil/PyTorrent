{"info": {"author": "edX", "author_email": "oscm@edx.org", "bugtrack_url": null, "classifiers": ["Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython"], "description": "xblock-utils: Various utilities for XBlocks\n===========================================\n\nThese are a collection of useful utility functions,\ntest base classes and documentation shared by many XBlocks.\n(Especially those of `edx-solutions`_.)\n\n.. _edx-solutions: https://github.com/edx-solutions\n\n\nTo test the utilities, run::\n\n    make test\n\nTo get a coverage report, use::\n\n    tox -- --cover-html\n\n\nStudioEditableXBlockMixin\n-------------------------\n\n.. code:: python\n\n    from xblockutils.studio_editable import StudioEditableXBlockMixin\n\nThis mixin will automatically generate a working ``studio_view`` form\nthat allows content authors to edit the fields of your XBlock. To use,\nsimply add the class to your base class list, and add a new class field\ncalled ``editable_fields``, set to a tuple of the names of the fields\nyou want your user to be able to edit.\n\n.. code:: python\n\n    @XBlock.needs(\"i18n\")\n    class ExampleBlock(StudioEditableXBlockMixin, XBlock):\n        ...\n        mode = String(\n            display_name=\"Mode\",\n            help=\"Determines the behaviour of this component. Standard is recommended.\",\n            default='standard',\n            scope=Scope.content,\n            values=('standard', 'crazy')\n        )\n        editable_fields = ('mode', 'display_name')\n\nThat's all you need to do. The mixin will read the optional\n``display_name``, ``help``, ``default``, and ``values`` settings from\nthe fields you mention and build the editor form as well as an AJAX save\nhandler.\n\nIf you want to validate the data, you can override\n``validate_field_data(self, validation, data)`` and/or\n``clean_studio_edits(self, data)`` - see the source code for details.\n\nSupported field types:\n\n* Boolean:\n  ``field_name = Boolean(display_name=\"Field Name\")``\n* Float:\n  ``field_name = Float(display_name=\"Field Name\")`` \n* Integer:\n  ``field_name = Integer(display_name=\"Field Name\")`` \n* String:\n  ``field_name = String(display_name=\"Field Name\")`` \n* String (multiline):\n  ``field_name = String(multiline_editor=True, resettable_editor=False)``\n* String (html):\n  ``field_name = String(multiline_editor='html', resettable_editor=False)``\n\nAny of the above will use a dropdown menu if they have a pre-defined\nlist of possible values.\n\n* List of unordered unique values (i.e. sets) drawn from a small set of\n  possible values:\n  ``field_name = List(list_style='set', list_values_provider=some_method)``\n\n  - The ``List`` declaration must include the property ``list_style='set'`` to\n    indicate that the ``List`` field is being used with set semantics.\n  - The ``List`` declaration must also define a ``list_values_provider`` method\n    which will be called with the block as its only parameter and which must\n    return a list of possible values.\n* Rudimentary support for Dict, ordered List, and any other JSONField-derived field types\n\n  - ``list_field = List(display_name=\"Ordered List\", default=[])``\n  - ``dict_field = Dict(display_name=\"Normal Dict\", default={})``\n\nSupported field options (all field types):\n\n* ``values`` can define a list of possible options, changing the UI element\n  to a select box. Values can be set to any of the formats `defined in the\n  XBlock source code <https://github.com/edx/XBlock/blob/master/xblock/fields.py>`__:\n\n  - A finite set of elements: ``[1, 2, 3]``\n  - A finite set of elements where the display names differ from the values::\n\n        [\n            {\"display_name\": \"Always\", \"value\": \"always\"},\n            {\"display_name\": \"Past Due\", \"value\": \"past_due\"},\n        ]\n  - A range for floating point numbers with specific increments:\n    ``{\"min\": 0 , \"max\": 10, \"step\": .1}``\n  - A callable that returns one of the above. (Note: the callable does\n    *not* get passed the XBlock instance or runtime, so it cannot be a\n    normal member function)\n* ``values_provider`` can define a callable that accepts the XBlock\n  instance as an argument, and returns a list of possible values in one\n  of the formats listed above.\n* ``resettable_editor`` - defaults to ``True``. Set ``False`` to hide the\n  \"Reset\" button used to return a field to its default value by removing\n  the field's value from the XBlock instance.\n\nBasic screenshot: |Screenshot 1|\n\nStudioContainerXBlockMixin\n--------------------------\n\n.. code:: python\n\n    from xblockutils.studio_editable import StudioContainerXBlockMixin\n\nThis mixin helps to create XBlocks that allow content authors to add,\nremove, or reorder child blocks. By removing any existing\n``author_view`` and adding this mixin, you'll get editable,\nre-orderable, and deletable child support in Studio. To enable authors to\nadd arbitrary blocks as children, simply override ``author_edit_view`` \nand set ``can_add=True`` when calling ``render_children`` - see the \nsource code. To restrict authors so they can add only specific types of\nchild blocks or a limited number of children requires custom HTML.\n\nAn example is the mentoring XBlock: |Screenshot 2|\n\nSeleniumXBlockTest\n------------------\n\n.. code:: python\n\n    from xblockutils.base_test import SeleniumXBlockTest\n\nThis is a base class that you can use for writing Selenium integration\ntests that are hosted in the XBlock SDK (Workbench).\n\nHere is an example:\n\n.. code:: python\n\n    class TestStudentView(SeleniumXBlockTest):\n        \"\"\"\n        Test the Student View of MyCoolXBlock\n        \"\"\"\n        def setUp(self):\n            super(TestStudentView, self).setUp()\n            self.set_scenario_xml('<mycoolblock display_name=\"Test Demo Block\" field2=\"hello\" />')\n            self.element = self.go_to_view(\"student_view\")\n\n        def test_shows_field_2(self):\n            \"\"\"\n            The xblock should display the text value of field2.\n            \"\"\"\n            self.assertIn(\"hello\", self.element.text)\n\nStudioEditableBaseTest\n----------------------\n\n.. code:: python\n\n    from xblockutils.studio_editable_test import StudioEditableBaseTest\n\nThis is a subclass of ``SeleniumXBlockTest`` that adds a few helper\nmethods useful for testing the ``studio_view`` of any XBlock using\n``StudioEditableXBlockMixin``.\n\nchild\\_isinstance\n-----------------\n\n.. code:: python\n\n    from xblockutils.helpers import child_isinstance\n\nIf your XBlock needs to find children/descendants of a particular\nclass/mixin, you should use\n\n.. code:: python\n\n    child_isinstance(self, child_usage_id, SomeXBlockClassOrMixin)\n\nrather than calling\n\n.. code:: python\n\n    ``isinstance(self.runtime.get_block(child_usage_id), SomeXBlockClassOrMixin)``.\n\nOn runtimes such as those in edx-platform, ``child_isinstance`` is\norders of magnitude faster.\n\n.. |Screenshot 1| image:: https://cloud.githubusercontent.com/assets/945577/6341782/7d237966-bb83-11e4-9344-faa647056999.png\n.. |Screenshot 2| image:: https://cloud.githubusercontent.com/assets/945577/6341803/d0195ec4-bb83-11e4-82f6-8052c9f70690.png\n\nXBlockWithSettingsMixin\n-----------------------\n\nThis mixin provides access to instance-wide XBlock-specific configuration settings.\nSee [wiki page](https://github.com/edx/xblock-utils/wiki/Settings-and-theme-support#accessing-xblock-specific-settings) for details\n\nThemableXBlockMixin\n-------------------\n\nThis mixin provides XBlock theming capabilities built on top of XBlock-specific settings.\nSee [wiki page](https://github.com/edx/xblock-utils/wiki/Settings-and-theme-support#theming-support) for details\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/edx/xblock-utils", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "xblock-utils", "package_url": "https://pypi.org/project/xblock-utils/", "platform": "", "project_url": "https://pypi.org/project/xblock-utils/", "project_urls": {"Homepage": "https://github.com/edx/xblock-utils"}, "release_url": "https://pypi.org/project/xblock-utils/2.0.0/", "requires_dist": ["Xblock", "simplejson", "web-fragments", "mako"], "requires_python": "", "summary": "Various utilities for XBlocks", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>These are a collection of useful utility functions,\ntest base classes and documentation shared by many XBlocks.\n(Especially those of <a href=\"https://github.com/edx-solutions\" rel=\"nofollow\">edx-solutions</a>.)</p>\n<p>To test the utilities, run:</p>\n<pre>make test\n</pre>\n<p>To get a coverage report, use:</p>\n<pre>tox -- --cover-html\n</pre>\n<div id=\"studioeditablexblockmixin\">\n<h2>StudioEditableXBlockMixin</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">xblockutils.studio_editable</span> <span class=\"kn\">import</span> <span class=\"n\">StudioEditableXBlockMixin</span>\n</pre>\n<p>This mixin will automatically generate a working <tt>studio_view</tt> form\nthat allows content authors to edit the fields of your XBlock. To use,\nsimply add the class to your base class list, and add a new class field\ncalled <tt>editable_fields</tt>, set to a tuple of the names of the fields\nyou want your user to be able to edit.</p>\n<pre><span class=\"nd\">@XBlock</span><span class=\"o\">.</span><span class=\"n\">needs</span><span class=\"p\">(</span><span class=\"s2\">\"i18n\"</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExampleBlock</span><span class=\"p\">(</span><span class=\"n\">StudioEditableXBlockMixin</span><span class=\"p\">,</span> <span class=\"n\">XBlock</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">mode</span> <span class=\"o\">=</span> <span class=\"n\">String</span><span class=\"p\">(</span>\n        <span class=\"n\">display_name</span><span class=\"o\">=</span><span class=\"s2\">\"Mode\"</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">\"Determines the behaviour of this component. Standard is recommended.\"</span><span class=\"p\">,</span>\n        <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'standard'</span><span class=\"p\">,</span>\n        <span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"n\">Scope</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"p\">,</span>\n        <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'standard'</span><span class=\"p\">,</span> <span class=\"s1\">'crazy'</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">editable_fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'mode'</span><span class=\"p\">,</span> <span class=\"s1\">'display_name'</span><span class=\"p\">)</span>\n</pre>\n<p>That\u2019s all you need to do. The mixin will read the optional\n<tt>display_name</tt>, <tt>help</tt>, <tt>default</tt>, and <tt>values</tt> settings from\nthe fields you mention and build the editor form as well as an AJAX save\nhandler.</p>\n<p>If you want to validate the data, you can override\n<tt>validate_field_data(self, validation, data)</tt> and/or\n<tt>clean_studio_edits(self, data)</tt> - see the source code for details.</p>\n<p>Supported field types:</p>\n<ul>\n<li>Boolean:\n<tt>field_name = <span class=\"pre\">Boolean(display_name=\"Field</span> Name\")</tt></li>\n<li>Float:\n<tt>field_name = <span class=\"pre\">Float(display_name=\"Field</span> Name\")</tt></li>\n<li>Integer:\n<tt>field_name = <span class=\"pre\">Integer(display_name=\"Field</span> Name\")</tt></li>\n<li>String:\n<tt>field_name = <span class=\"pre\">String(display_name=\"Field</span> Name\")</tt></li>\n<li>String (multiline):\n<tt>field_name = String(multiline_editor=True, resettable_editor=False)</tt></li>\n<li>String (html):\n<tt>field_name = <span class=\"pre\">String(multiline_editor='html',</span> resettable_editor=False)</tt></li>\n</ul>\n<p>Any of the above will use a dropdown menu if they have a pre-defined\nlist of possible values.</p>\n<ul>\n<li>List of unordered unique values (i.e. sets) drawn from a small set of\npossible values:\n<tt>field_name = <span class=\"pre\">List(list_style='set',</span> list_values_provider=some_method)</tt><ul>\n<li>The <tt>List</tt> declaration must include the property <tt><span class=\"pre\">list_style='set'</span></tt> to\nindicate that the <tt>List</tt> field is being used with set semantics.</li>\n<li>The <tt>List</tt> declaration must also define a <tt>list_values_provider</tt> method\nwhich will be called with the block as its only parameter and which must\nreturn a list of possible values.</li>\n</ul>\n</li>\n<li>Rudimentary support for Dict, ordered List, and any other JSONField-derived field types<ul>\n<li><tt>list_field = <span class=\"pre\">List(display_name=\"Ordered</span> List\", <span class=\"pre\">default=[])</span></tt></li>\n<li><tt>dict_field = <span class=\"pre\">Dict(display_name=\"Normal</span> Dict\", <span class=\"pre\">default={})</span></tt></li>\n</ul>\n</li>\n</ul>\n<p>Supported field options (all field types):</p>\n<ul>\n<li><p><tt>values</tt> can define a list of possible options, changing the UI element\nto a select box. Values can be set to any of the formats <a href=\"https://github.com/edx/XBlock/blob/master/xblock/fields.py\" rel=\"nofollow\">defined in the\nXBlock source code</a>:</p>\n<ul>\n<li><p>A finite set of elements: <tt>[1, 2, 3]</tt></p>\n</li>\n<li><p>A finite set of elements where the display names differ from the values:</p>\n<pre>[\n    {\"display_name\": \"Always\", \"value\": \"always\"},\n    {\"display_name\": \"Past Due\", \"value\": \"past_due\"},\n]\n</pre>\n</li>\n<li><p>A range for floating point numbers with specific increments:\n<tt>{\"min\": 0 , \"max\": 10, \"step\": .1}</tt></p>\n</li>\n<li><p>A callable that returns one of the above. (Note: the callable does\n<em>not</em> get passed the XBlock instance or runtime, so it cannot be a\nnormal member function)</p>\n</li>\n</ul>\n</li>\n<li><p><tt>values_provider</tt> can define a callable that accepts the XBlock\ninstance as an argument, and returns a list of possible values in one\nof the formats listed above.</p>\n</li>\n<li><p><tt>resettable_editor</tt> - defaults to <tt>True</tt>. Set <tt>False</tt> to hide the\n\u201cReset\u201d button used to return a field to its default value by removing\nthe field\u2019s value from the XBlock instance.</p>\n</li>\n</ul>\n<p>Basic screenshot: <img alt=\"Screenshot 1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/96ae1b1bd8e541809f12e111775b685eeed1d24e/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f3934353537372f363334313738322f37643233373936362d626238332d313165342d393334342d6661613634373035363939392e706e67\"></p>\n</div>\n<div id=\"studiocontainerxblockmixin\">\n<h2>StudioContainerXBlockMixin</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">xblockutils.studio_editable</span> <span class=\"kn\">import</span> <span class=\"n\">StudioContainerXBlockMixin</span>\n</pre>\n<p>This mixin helps to create XBlocks that allow content authors to add,\nremove, or reorder child blocks. By removing any existing\n<tt>author_view</tt> and adding this mixin, you\u2019ll get editable,\nre-orderable, and deletable child support in Studio. To enable authors to\nadd arbitrary blocks as children, simply override <tt>author_edit_view</tt>\nand set <tt>can_add=True</tt> when calling <tt>render_children</tt> - see the\nsource code. To restrict authors so they can add only specific types of\nchild blocks or a limited number of children requires custom HTML.</p>\n<p>An example is the mentoring XBlock: <img alt=\"Screenshot 2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7b8e492acb759c6217f464f029ed2d3877e52eda/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f3934353537372f363334313830332f64303139356563342d626238332d313165342d383266362d3830353263396637303639302e706e67\"></p>\n</div>\n<div id=\"seleniumxblocktest\">\n<h2>SeleniumXBlockTest</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">xblockutils.base_test</span> <span class=\"kn\">import</span> <span class=\"n\">SeleniumXBlockTest</span>\n</pre>\n<p>This is a base class that you can use for writing Selenium integration\ntests that are hosted in the XBlock SDK (Workbench).</p>\n<p>Here is an example:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">TestStudentView</span><span class=\"p\">(</span><span class=\"n\">SeleniumXBlockTest</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"\n    Test the Student View of MyCoolXBlock\n    \"\"\"</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setUp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">TestStudentView</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">setUp</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_scenario_xml</span><span class=\"p\">(</span><span class=\"s1\">'&lt;mycoolblock display_name=\"Test Demo Block\" field2=\"hello\" /&gt;'</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">element</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">go_to_view</span><span class=\"p\">(</span><span class=\"s2\">\"student_view\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">test_shows_field_2</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"\n        The xblock should display the text value of field2.\n        \"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertIn</span><span class=\"p\">(</span><span class=\"s2\">\"hello\"</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"studioeditablebasetest\">\n<h2>StudioEditableBaseTest</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">xblockutils.studio_editable_test</span> <span class=\"kn\">import</span> <span class=\"n\">StudioEditableBaseTest</span>\n</pre>\n<p>This is a subclass of <tt>SeleniumXBlockTest</tt> that adds a few helper\nmethods useful for testing the <tt>studio_view</tt> of any XBlock using\n<tt>StudioEditableXBlockMixin</tt>.</p>\n</div>\n<div id=\"child-isinstance\">\n<h2>child_isinstance</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">xblockutils.helpers</span> <span class=\"kn\">import</span> <span class=\"n\">child_isinstance</span>\n</pre>\n<p>If your XBlock needs to find children/descendants of a particular\nclass/mixin, you should use</p>\n<pre><span class=\"n\">child_isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">child_usage_id</span><span class=\"p\">,</span> <span class=\"n\">SomeXBlockClassOrMixin</span><span class=\"p\">)</span>\n</pre>\n<p>rather than calling</p>\n<pre><span class=\"err\">``</span><span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">get_block</span><span class=\"p\">(</span><span class=\"n\">child_usage_id</span><span class=\"p\">),</span> <span class=\"n\">SomeXBlockClassOrMixin</span><span class=\"p\">)</span><span class=\"err\">``</span><span class=\"o\">.</span>\n</pre>\n<p>On runtimes such as those in edx-platform, <tt>child_isinstance</tt> is\norders of magnitude faster.</p>\n</div>\n<div id=\"xblockwithsettingsmixin\">\n<h2>XBlockWithSettingsMixin</h2>\n<p>This mixin provides access to instance-wide XBlock-specific configuration settings.\nSee [wiki page](<a href=\"https://github.com/edx/xblock-utils/wiki/Settings-and-theme-support#accessing-xblock-specific-settings\" rel=\"nofollow\">https://github.com/edx/xblock-utils/wiki/Settings-and-theme-support#accessing-xblock-specific-settings</a>) for details</p>\n</div>\n<div id=\"themablexblockmixin\">\n<h2>ThemableXBlockMixin</h2>\n<p>This mixin provides XBlock theming capabilities built on top of XBlock-specific settings.\nSee [wiki page](<a href=\"https://github.com/edx/xblock-utils/wiki/Settings-and-theme-support#theming-support\" rel=\"nofollow\">https://github.com/edx/xblock-utils/wiki/Settings-and-theme-support#theming-support</a>) for details</p>\n</div>\n\n          </div>"}, "last_serial": 6836886, "releases": {"1.2.0": [{"comment_text": "", "digests": {"md5": "2ddb2e856378ea10bac187a305d686c2", "sha256": "fd42effb227a4d2f2f385e2ea6e2880a2342d631e58f35d990d8a603ca32606e"}, "downloads": -1, "filename": "xblock_utils-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2ddb2e856378ea10bac187a305d686c2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32171, "upload_time": "2018-07-27T19:29:22", "upload_time_iso_8601": "2018-07-27T19:29:22.059478Z", "url": "https://files.pythonhosted.org/packages/89/84/4f92626ef1e0df13b43b7e73d03d9e3a5e6e62001775331f922e7ef09531/xblock_utils-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7c1428d03a814c314987ae8b6534cdb", "sha256": "c006282cd3fcde9ac175b8659568832dfa32f1537e60223c633c0c2cfe9e41b2"}, "downloads": -1, "filename": "xblock-utils-1.2.0.tar.gz", "has_sig": false, "md5_digest": "a7c1428d03a814c314987ae8b6534cdb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27052, "upload_time": "2018-07-27T19:29:23", "upload_time_iso_8601": "2018-07-27T19:29:23.360623Z", "url": "https://files.pythonhosted.org/packages/71/60/8618c9b6a9e537ea7eaabf6be095d295da45e7bd9c2b91eb493ecc5a6bdf/xblock-utils-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "5873be9709f4aaf1092d1e7a783279f5", "sha256": "80782a2239b898601b5a9f1d0a9796898b5d0c505b04ea9e341df6c70ce97555"}, "downloads": -1, "filename": "xblock_utils-1.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "5873be9709f4aaf1092d1e7a783279f5", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 39370, "upload_time": "2019-04-03T19:30:58", "upload_time_iso_8601": "2019-04-03T19:30:58.716335Z", "url": "https://files.pythonhosted.org/packages/8d/84/55a5ce0b2addf4ae67314c6a6fb24751be4389b4c4f8b542b68cf23498ab/xblock_utils-1.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f91bc679d78ca2f093131197d308e68e", "sha256": "2c56100e8b312f5bdb8e4bbcb58ffd27911b9f89f0507cf39d3b94713b10823c"}, "downloads": -1, "filename": "xblock_utils-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f91bc679d78ca2f093131197d308e68e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39368, "upload_time": "2019-04-03T19:31:18", "upload_time_iso_8601": "2019-04-03T19:31:18.871878Z", "url": "https://files.pythonhosted.org/packages/7f/5f/a5b9e7d4a63c99119c5813eaef5cc1e2274d18577323943702b169c0e8e9/xblock_utils-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3234c1bee04efb94349aa376d6d1b97", "sha256": "3bc9c853dc3e5a8a5c63f7d09f889db7f89fbf9d6234ba84a068503760390fa1"}, "downloads": -1, "filename": "xblock-utils-1.2.1.tar.gz", "has_sig": false, "md5_digest": "a3234c1bee04efb94349aa376d6d1b97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22883, "upload_time": "2019-04-03T19:31:00", "upload_time_iso_8601": "2019-04-03T19:31:00.313884Z", "url": "https://files.pythonhosted.org/packages/e1/55/4e0c4a6a46dc56a1b54105533d2a6a6704bdd57e061605443c844e6c9c2f/xblock-utils-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "9aff12b770c09dae37ce9064f0be22a1", "sha256": "721ea8294432fccae5024c12cd1b19854c99fc54925e11c5975f2cb43a616f46"}, "downloads": -1, "filename": "xblock_utils-1.2.2-py2-none-any.whl", "has_sig": false, "md5_digest": "9aff12b770c09dae37ce9064f0be22a1", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 39400, "upload_time": "2019-08-06T16:53:04", "upload_time_iso_8601": "2019-08-06T16:53:04.293407Z", "url": "https://files.pythonhosted.org/packages/44/98/c020c8d17aabb18de8091ffd34b5993ec517741efc6f7d7fd1d811eca62a/xblock_utils-1.2.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5134f6697dddaf230703c09a21515f1f", "sha256": "570d1f519772ccf06d438a446b19193f271de16267b345eafd15ea93ef947a54"}, "downloads": -1, "filename": "xblock_utils-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5134f6697dddaf230703c09a21515f1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39401, "upload_time": "2019-08-06T16:53:16", "upload_time_iso_8601": "2019-08-06T16:53:16.377872Z", "url": "https://files.pythonhosted.org/packages/54/0a/5e16e8698e69a014b4743887e12118da38cd93947ee0037a6fdac3d8fc89/xblock_utils-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2acc5771c73a3f6937b25bb532c37f1", "sha256": "accbacbb73c919fb473992c4cebe40b3468e73679487830a79770b8b0b744236"}, "downloads": -1, "filename": "xblock-utils-1.2.2.tar.gz", "has_sig": false, "md5_digest": "b2acc5771c73a3f6937b25bb532c37f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22903, "upload_time": "2019-08-06T16:53:06", "upload_time_iso_8601": "2019-08-06T16:53:06.044410Z", "url": "https://files.pythonhosted.org/packages/88/69/2f131861ba0986efec3616e87849705aa538d124e012eee802bf944fe91c/xblock-utils-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "b4da4faa73607b101abe5108f1b78008", "sha256": "97516a24dff201ccb248cb5f8a200bea1148d1495004b8a9a9bb1dff7c391116"}, "downloads": -1, "filename": "xblock_utils-1.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b4da4faa73607b101abe5108f1b78008", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39163, "upload_time": "2019-12-10T07:31:32", "upload_time_iso_8601": "2019-12-10T07:31:32.298340Z", "url": "https://files.pythonhosted.org/packages/34/0b/c3067effd7ca26703842743cd1deb73a7b1a78ed5e314270a7e7b2e7fd92/xblock_utils-1.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53ba69a28338a02962f474c80f68b2c5", "sha256": "db422e78092d673bbf3ff52b91d7616a03bd25f4d43388365911a30fd9d8c49a"}, "downloads": -1, "filename": "xblock-utils-1.2.3.tar.gz", "has_sig": false, "md5_digest": "53ba69a28338a02962f474c80f68b2c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22961, "upload_time": "2019-12-10T07:31:33", "upload_time_iso_8601": "2019-12-10T07:31:33.724327Z", "url": "https://files.pythonhosted.org/packages/cc/7f/812fc76fcc59dd29890a7e587b97c651f737e7e6eba439e5f79546fae000/xblock-utils-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "108a8ffd76d358b988881e66f5560a34", "sha256": "4a764f75329c1986697449ff8750f8320d1178ff06217c4af393f699c9d7c375"}, "downloads": -1, "filename": "xblock_utils-1.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "108a8ffd76d358b988881e66f5560a34", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39186, "upload_time": "2019-12-27T11:10:01", "upload_time_iso_8601": "2019-12-27T11:10:01.608126Z", "url": "https://files.pythonhosted.org/packages/42/0b/6961a7db19a80c7ea9e13cc02f464b9d1162a44e614ca96b5ef8ef75d738/xblock_utils-1.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e136d35a7f4d268531395a2cdd0a4f34", "sha256": "399a9971864a72494eba1bc490e83032b2d280496e46c7fca16122386c62f217"}, "downloads": -1, "filename": "xblock-utils-1.2.4.tar.gz", "has_sig": false, "md5_digest": "e136d35a7f4d268531395a2cdd0a4f34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23113, "upload_time": "2019-12-27T11:10:03", "upload_time_iso_8601": "2019-12-27T11:10:03.325538Z", "url": "https://files.pythonhosted.org/packages/ff/9e/fdb6265d3826ef46aaca4c8ebc7ca4ba4ed059e3bb868c6d02581b5a5518/xblock-utils-1.2.4.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "e1c88535b201ef19d5b452dd21fe1679", "sha256": "acf8c7b051e6c0fed09e0f97cfb6c8a3dae73c20f7b1bbb4c96b9384664b2f43"}, "downloads": -1, "filename": "xblock_utils-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e1c88535b201ef19d5b452dd21fe1679", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39183, "upload_time": "2020-03-18T15:25:37", "upload_time_iso_8601": "2020-03-18T15:25:37.865523Z", "url": "https://files.pythonhosted.org/packages/62/6f/97674e2b1c60f1b4465efa72243c08a1838c445619e422b1bfc5304356b3/xblock_utils-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9de846701a54e33846b69118d78871b3", "sha256": "d770ee42d1f4f8e8d838d5df4805a1bf3a45585e90047ab9ce6253f6a03c23e5"}, "downloads": -1, "filename": "xblock-utils-2.0.0.tar.gz", "has_sig": false, "md5_digest": "9de846701a54e33846b69118d78871b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23068, "upload_time": "2020-03-18T15:25:39", "upload_time_iso_8601": "2020-03-18T15:25:39.440548Z", "url": "https://files.pythonhosted.org/packages/d2/23/5dc0af0e1619bb8b28d73cab8bcd3c2065bb4a3fbfd3d26c595df736f440/xblock-utils-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e1c88535b201ef19d5b452dd21fe1679", "sha256": "acf8c7b051e6c0fed09e0f97cfb6c8a3dae73c20f7b1bbb4c96b9384664b2f43"}, "downloads": -1, "filename": "xblock_utils-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e1c88535b201ef19d5b452dd21fe1679", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39183, "upload_time": "2020-03-18T15:25:37", "upload_time_iso_8601": "2020-03-18T15:25:37.865523Z", "url": "https://files.pythonhosted.org/packages/62/6f/97674e2b1c60f1b4465efa72243c08a1838c445619e422b1bfc5304356b3/xblock_utils-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9de846701a54e33846b69118d78871b3", "sha256": "d770ee42d1f4f8e8d838d5df4805a1bf3a45585e90047ab9ce6253f6a03c23e5"}, "downloads": -1, "filename": "xblock-utils-2.0.0.tar.gz", "has_sig": false, "md5_digest": "9de846701a54e33846b69118d78871b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23068, "upload_time": "2020-03-18T15:25:39", "upload_time_iso_8601": "2020-03-18T15:25:39.440548Z", "url": "https://files.pythonhosted.org/packages/d2/23/5dc0af0e1619bb8b28d73cab8bcd3c2065bb4a3fbfd3d26c595df736f440/xblock-utils-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:26:15 2020"}