{"info": {"author": "Enrico Bacis", "author_email": "enrico.bacis@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Description\n-----------\n\nOn April 1st 2005, IEEE released the `RFC4042`_ \u201c*UTF-9 and UTF-18\nEfficient Transformation Formats of Unicode*\u201d :\n\n    The current representation formats for Unicode (UTF-7, UTF-8,\n    UTF-16) are not storage and computation efficient on platforms that\n    utilize the 9 bit nonet as a natural storage unit instead of the 8\n    bit octet.\n\nSince there are not so many architecture that use *9 bit nonets as\nnatural storage units* and the release date was on April Fools\u2019 Day, the\n*beautiful* UTF-9 was forgotten and no python implementation is\navailable.\n\nThis python module is here to fill this gap! ;)\n\nUsage\n-----\n\nThere are only two functions:\n\n-  ``utf9encode(string)``: takes a string and returns a utf9-encoded\n   version.\n-  ``utf9decode(data)``: takes utf9-encoded data and returns the\n   corresponding string.\n\nExample\n-------\n\n    >>> import utf9\n    >>> encoded = utf9.utf9encode(u'\u10b9\u0404L\u14aao, \ud83c\udf0d\u01c3')\n    >>> print repr(encoded)\n    'p\\xe0\\xb7-\\x0c!1\\xc3\\x92\\xd5\\x1b\\xc5\\x82\\x07n\\x83x\\xed\\xdecX\\xf80'\n    >>> print utf9.utf9decode(encoded)\n    \u10b9\u0404L\u14aao, \ud83c\udf0d\u01c3\n\n.. _RFC4042: https://www.ietf.org/rfc/rfc4042.txt", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/enricobacis/utf9", "keywords": "utf9 encode decode rfc4042", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "utf9", "package_url": "https://pypi.org/project/utf9/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/utf9/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/enricobacis/utf9"}, "release_url": "https://pypi.org/project/utf9/0.3.1/", "requires_dist": null, "requires_python": null, "summary": "Encode and decode text using UTF-9.", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"description\">\n<h2>Description</h2>\n<p>On April 1st 2005, IEEE released the <a href=\"https://www.ietf.org/rfc/rfc4042.txt\" rel=\"nofollow\">RFC4042</a> \u201c<em>UTF-9 and UTF-18\nEfficient Transformation Formats of Unicode</em>\u201d :</p>\n<blockquote>\nThe current representation formats for Unicode (UTF-7, UTF-8,\nUTF-16) are not storage and computation efficient on platforms that\nutilize the 9 bit nonet as a natural storage unit instead of the 8\nbit octet.</blockquote>\n<p>Since there are not so many architecture that use <em>9 bit nonets as\nnatural storage units</em> and the release date was on April Fools\u2019 Day, the\n<em>beautiful</em> UTF-9 was forgotten and no python implementation is\navailable.</p>\n<p>This python module is here to fill this gap! ;)</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>There are only two functions:</p>\n<ul>\n<li><tt>utf9encode(string)</tt>: takes a string and returns a utf9-encoded\nversion.</li>\n<li><tt>utf9decode(data)</tt>: takes utf9-encoded data and returns the\ncorresponding string.</li>\n</ul>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<blockquote>\n<pre>&gt;&gt;&gt; import utf9\n&gt;&gt;&gt; encoded = utf9.utf9encode(u'\u10b9\u0404L\u14aao, \ud83c\udf0d\u01c3')\n&gt;&gt;&gt; print repr(encoded)\n'p\\xe0\\xb7-\\x0c!1\\xc3\\x92\\xd5\\x1b\\xc5\\x82\\x07n\\x83x\\xed\\xdecX\\xf80'\n&gt;&gt;&gt; print utf9.utf9decode(encoded)\n\u10b9\u0404L\u14aao, \ud83c\udf0d\u01c3\n</pre>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 1909846, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "133ed7219034d26044b926a8c02cf665", "sha256": "1a4be786e92e1f127b85a6b22446b5edc3620e6ee49e9499d3e56765c7b5b17d"}, "downloads": -1, "filename": "utf9-0.2.tar.gz", "has_sig": false, "md5_digest": "133ed7219034d26044b926a8c02cf665", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1685, "upload_time": "2015-12-06T19:17:20", "upload_time_iso_8601": "2015-12-06T19:17:20.910801Z", "url": "https://files.pythonhosted.org/packages/67/c8/e1028e0bf96729f6d6598696cd8fd4a4acfdab42218475b2a518a00c45dc/utf9-0.2.tar.gz", "yanked": false}], "0.3": [], "0.3.1": [{"comment_text": "", "digests": {"md5": "d285475d70b7279cf42a18eabd7baa4d", "sha256": "222c012513649dacb9c531523636c8ee26bf1445c80fb238d4e76ae1ed7e0eea"}, "downloads": -1, "filename": "utf9-0.3.1.tar.gz", "has_sig": false, "md5_digest": "d285475d70b7279cf42a18eabd7baa4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2136, "upload_time": "2015-12-06T19:57:08", "upload_time_iso_8601": "2015-12-06T19:57:08.342859Z", "url": "https://files.pythonhosted.org/packages/ab/96/8daca49a5a0f1f3d71dee8e70776e5ab41124a8481e3f54ab47e12b71538/utf9-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d285475d70b7279cf42a18eabd7baa4d", "sha256": "222c012513649dacb9c531523636c8ee26bf1445c80fb238d4e76ae1ed7e0eea"}, "downloads": -1, "filename": "utf9-0.3.1.tar.gz", "has_sig": false, "md5_digest": "d285475d70b7279cf42a18eabd7baa4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2136, "upload_time": "2015-12-06T19:57:08", "upload_time_iso_8601": "2015-12-06T19:57:08.342859Z", "url": "https://files.pythonhosted.org/packages/ab/96/8daca49a5a0f1f3d71dee8e70776e5ab41124a8481e3f54ab47e12b71538/utf9-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:38:52 2020"}