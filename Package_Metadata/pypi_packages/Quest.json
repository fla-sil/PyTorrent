{"info": {"author": "UNKNOWN", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": [], "description": "===========\nQuest\n===========\n---------------------------------\nQuery Engine for Selecting Tables\n---------------------------------\n\nInstallation\n------------\nEasy enough::\n  easy_install quest\nor::\n  pip install quest\n\nIntro\n-----\nQuest implements a simple DSL (domain-specific language) on top of MySQL.\nIt can connect to any MySQL database. It can be used at the command line,\nwhich provides a simple REPL, or through an HTML GUI.\nFor a guide, type \"help\" at the prompt or in the GUI.\n\nConfiguration\n-------------\nQuest must have access to a username and password of a MySQL account in\norder to connect to the MySQL database. You should set these in your script\nby doing (e.g.)::\n  import quest.config\n  quest.config.db_host = localhost # default\n  quest.config.db_user = root # default\n  quest.config.db_password = puppies\n  # Quest only connects to 1 table\n  quest.config.table_name = employees\n  quest.config.db_name = company\n\nTo create a hierarchy for ROLLUP (which goes up the hierarchy) and DRILLDOWN\n(which goes down the hierarchy), use quest.config.create_hierarchy::\n  # Parents come before children.\n  quest.config.create_hierarchy(['ceo', 'manager', 'employee'])\n  quest.config.create_hierarchy(['python', 'cpp', 'c'])\n\nUsage\n-----\nTypical usage of the command-line REPL::\n    #!/usr/bin/env python\n\n    import quest\n    import quest.config\n    from quest.prompt import Prompt\n\n    quest.config.db_host = localhost # default\n    quest.config.db_user = root # default\n    quest.config.db_password = puppies\n    # Quest only connects to 1 table\n    quest.config.table_name = employees\n    quest.config.db_name = company\n\n    p = Prompt()\n    p.interact()\n\nTypical usage of the HTML GUI::\n    #!/usr/bin/env python\n\n    import quest\n    import quest.config\n    from quest.web import quest_app\n\n    quest.config.db_host = localhost # default\n    quest.config.db_user = root # default\n    quest.config.db_password = puppies\n    # Quest only connects to 1 table\n    quest.config.table_name = employees\n    quest.config.db_name = company\n\n    quest_app.run()\n    # Now navigate to http://localhost:8080", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "Creative Commons Attribution-Noncommercial-Share Alike license", "maintainer": null, "maintainer_email": null, "name": "Quest", "package_url": "https://pypi.org/project/Quest/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Quest/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/Quest/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            ===========<br>Quest<br>===========<br>---------------------------------<br>Query Engine for Selecting Tables<br>---------------------------------<br><br>Installation<br>------------<br>Easy enough::<br>  easy_install quest<br>or::<br>  pip install quest<br><br>Intro<br>-----<br>Quest implements a simple DSL (domain-specific language) on top of MySQL.<br>It can connect to any MySQL database. It can be used at the command line,<br>which provides a simple REPL, or through an HTML GUI.<br>For a guide, type \"help\" at the prompt or in the GUI.<br><br>Configuration<br>-------------<br>Quest must have access to a username and password of a MySQL account in<br>order to connect to the MySQL database. You should set these in your script<br>by doing (e.g.)::<br>  import quest.config<br>  quest.config.db_host = localhost # default<br>  quest.config.db_user = root # default<br>  quest.config.db_password = puppies<br>  # Quest only connects to 1 table<br>  quest.config.table_name = employees<br>  quest.config.db_name = company<br><br>To create a hierarchy for ROLLUP (which goes up the hierarchy) and DRILLDOWN<br>(which goes down the hierarchy), use quest.config.create_hierarchy::<br>  # Parents come before children.<br>  quest.config.create_hierarchy(['ceo', 'manager', 'employee'])<br>  quest.config.create_hierarchy(['python', 'cpp', 'c'])<br><br>Usage<br>-----<br>Typical usage of the command-line REPL::<br>    #!/usr/bin/env python<br><br>    import quest<br>    import quest.config<br>    from quest.prompt import Prompt<br><br>    quest.config.db_host = localhost # default<br>    quest.config.db_user = root # default<br>    quest.config.db_password = puppies<br>    # Quest only connects to 1 table<br>    quest.config.table_name = employees<br>    quest.config.db_name = company<br><br>    p = Prompt()<br>    p.interact()<br><br>Typical usage of the HTML GUI::<br>    #!/usr/bin/env python<br><br>    import quest<br>    import quest.config<br>    from quest.web import quest_app<br><br>    quest.config.db_host = localhost # default<br>    quest.config.db_user = root # default<br>    quest.config.db_password = puppies<br>    # Quest only connects to 1 table<br>    quest.config.table_name = employees<br>    quest.config.db_name = company<br><br>    quest_app.run()<br>    # Now navigate to http://localhost:8080\n          </div>"}, "last_serial": 785473, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9a7fafcf5adacb2759908986a4002041", "sha256": "1353ffd11491b42de647f39ce5c560988d3a90ef7e3fdf12494bd8fb23e6d63f"}, "downloads": -1, "filename": "Quest-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9a7fafcf5adacb2759908986a4002041", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47718, "upload_time": "2010-12-06T22:01:26", "upload_time_iso_8601": "2010-12-06T22:01:26.099768Z", "url": "https://files.pythonhosted.org/packages/40/09/bef93e835fc510d0a3d74c468f9d3dc0ff401f0a107219f136918105d3f7/Quest-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e5d469056455d4aef7a1d945883aa484", "sha256": "0f5a6998416629ff5fdc3cb24151b0035e401050c39e5a005ba20396fa9dc79f"}, "downloads": -1, "filename": "Quest-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e5d469056455d4aef7a1d945883aa484", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19516, "upload_time": "2010-12-22T07:11:24", "upload_time_iso_8601": "2010-12-22T07:11:24.073363Z", "url": "https://files.pythonhosted.org/packages/8a/d8/02daba04cc65c486eda56b9fb16c6cf9c867df332c1cddda939d5b8370ed/Quest-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e5d469056455d4aef7a1d945883aa484", "sha256": "0f5a6998416629ff5fdc3cb24151b0035e401050c39e5a005ba20396fa9dc79f"}, "downloads": -1, "filename": "Quest-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e5d469056455d4aef7a1d945883aa484", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19516, "upload_time": "2010-12-22T07:11:24", "upload_time_iso_8601": "2010-12-22T07:11:24.073363Z", "url": "https://files.pythonhosted.org/packages/8a/d8/02daba04cc65c486eda56b9fb16c6cf9c867df332c1cddda939d5b8370ed/Quest-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:36 2020"}