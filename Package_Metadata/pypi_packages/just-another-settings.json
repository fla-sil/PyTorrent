{"info": {"author": "Andrey Rusanov", "author_email": "andrey@rusanov.me", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "just another settings\n~~~~~~~~~~~~~~~~~~~~~\n\nJust a code I use in a few Bottle/Flask-based and a few other projects.\n\n.. code:: python\n\n    from just_another_settings import EnvSelector, EnvField\n\n    class BaseSettings(object):\n        DEBUG = True\n        # EnvField looks for the variable and fetches it, otherwise use value from default parameter\n        MONGOLAB_URL = EnvField('MONGO_URL')\n        HOST = EnvField('HOST', default='localhost')\n\n\n    class ProdSettings(BaseSettings):\n        DEBUG = False\n        HOST = 'example.com'\n\n\n    class DevSettings(BaseSettings):\n        pass\n\n\n    # env selector - selects settings base on env values\n    env_selector = EnvSelector('APP_MODE', 'dev', dev=DevSettings(), prod=ProdSettings())\n\n    # value selector - selects settings base on passed(to the `choose` method) value\n    by_value_selector = ValueSelector(dev=DevSettings(), prod=ProdSettings())\n\n    # somewhere in main file:\n    # env\n    application.config.from_object(env_selector.choose())\n    # by value\n    application.config.from_object(by_value_selector.choose('dev'))", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/andreyrusanov/just-another-settings", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "just-another-settings", "package_url": "https://pypi.org/project/just-another-settings/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/just-another-settings/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/andreyrusanov/just-another-settings"}, "release_url": "https://pypi.org/project/just-another-settings/1.0/", "requires_dist": null, "requires_python": null, "summary": "Small lib to manage settings as object for Flask/Bottle/custom apps", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Just a code I use in a few Bottle/Flask-based and a few other projects.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">just_another_settings</span> <span class=\"kn\">import</span> <span class=\"n\">EnvSelector</span><span class=\"p\">,</span> <span class=\"n\">EnvField</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">BaseSettings</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"c1\"># EnvField looks for the variable and fetches it, otherwise use value from default parameter</span>\n    <span class=\"n\">MONGOLAB_URL</span> <span class=\"o\">=</span> <span class=\"n\">EnvField</span><span class=\"p\">(</span><span class=\"s1\">'MONGO_URL'</span><span class=\"p\">)</span>\n    <span class=\"n\">HOST</span> <span class=\"o\">=</span> <span class=\"n\">EnvField</span><span class=\"p\">(</span><span class=\"s1\">'HOST'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'localhost'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ProdSettings</span><span class=\"p\">(</span><span class=\"n\">BaseSettings</span><span class=\"p\">):</span>\n    <span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"n\">HOST</span> <span class=\"o\">=</span> <span class=\"s1\">'example.com'</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">DevSettings</span><span class=\"p\">(</span><span class=\"n\">BaseSettings</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"c1\"># env selector - selects settings base on env values</span>\n<span class=\"n\">env_selector</span> <span class=\"o\">=</span> <span class=\"n\">EnvSelector</span><span class=\"p\">(</span><span class=\"s1\">'APP_MODE'</span><span class=\"p\">,</span> <span class=\"s1\">'dev'</span><span class=\"p\">,</span> <span class=\"n\">dev</span><span class=\"o\">=</span><span class=\"n\">DevSettings</span><span class=\"p\">(),</span> <span class=\"n\">prod</span><span class=\"o\">=</span><span class=\"n\">ProdSettings</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># value selector - selects settings base on passed(to the `choose` method) value</span>\n<span class=\"n\">by_value_selector</span> <span class=\"o\">=</span> <span class=\"n\">ValueSelector</span><span class=\"p\">(</span><span class=\"n\">dev</span><span class=\"o\">=</span><span class=\"n\">DevSettings</span><span class=\"p\">(),</span> <span class=\"n\">prod</span><span class=\"o\">=</span><span class=\"n\">ProdSettings</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># somewhere in main file:</span>\n<span class=\"c1\"># env</span>\n<span class=\"n\">application</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_object</span><span class=\"p\">(</span><span class=\"n\">env_selector</span><span class=\"o\">.</span><span class=\"n\">choose</span><span class=\"p\">())</span>\n<span class=\"c1\"># by value</span>\n<span class=\"n\">application</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_object</span><span class=\"p\">(</span><span class=\"n\">by_value_selector</span><span class=\"o\">.</span><span class=\"n\">choose</span><span class=\"p\">(</span><span class=\"s1\">'dev'</span><span class=\"p\">))</span>\n</pre>\n\n          </div>"}, "last_serial": 1996028, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "4ef879653ce0a446367f3216f2f43cec", "sha256": "f60572f43f2130a53e93e1eda4da03f5fd528407502ac77ef4e352c6bf4d4af2"}, "downloads": -1, "filename": "just-another-settings-1.0.tar.gz", "has_sig": false, "md5_digest": "4ef879653ce0a446367f3216f2f43cec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2166, "upload_time": "2016-03-08T18:19:25", "upload_time_iso_8601": "2016-03-08T18:19:25.707975Z", "url": "https://files.pythonhosted.org/packages/59/cc/e6ac48a5612de702c65b60b03e447d689f1fa729b75e0ad0c22eb78a38a4/just-another-settings-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ef879653ce0a446367f3216f2f43cec", "sha256": "f60572f43f2130a53e93e1eda4da03f5fd528407502ac77ef4e352c6bf4d4af2"}, "downloads": -1, "filename": "just-another-settings-1.0.tar.gz", "has_sig": false, "md5_digest": "4ef879653ce0a446367f3216f2f43cec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2166, "upload_time": "2016-03-08T18:19:25", "upload_time_iso_8601": "2016-03-08T18:19:25.707975Z", "url": "https://files.pythonhosted.org/packages/59/cc/e6ac48a5612de702c65b60b03e447d689f1fa729b75e0ad0c22eb78a38a4/just-another-settings-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:04 2020"}