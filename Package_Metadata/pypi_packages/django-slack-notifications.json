{"info": {"author": "johnnykim", "author_email": "kidskorea7@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "django-slack-notifications\n==========================\n\n**Extremely simple and easy slack integration with django.**\n\nOverview\n========\n\nRequirements\n============\n\n-  Python (3.3+)\n-  Django (1.7, 1.8, 1.9)\n-  Slack Webhook Url: https://api.slack.com/custom-integrations\n\nInstallation\n============\n\nInstall using ``pip``\n\n::\n\n    pip install django-slack-notifications\n\nAdd ``django-slack-notifications`` to your ``INSTALLED_APPS`` setting.\n\n::\n\n    INSTALLED_APPS = (\n        ...\n        'django-slack-notifications',\n    )\n\nAdd ``SLACK_NOTIFICATIONS`` to your ``settings.py``\n\n::\n\n    SLACK_NOTIFICATIONS = {\n        'WEBHOOK_URL': '{your slack webhook url}'\n        'CHANNEL': '{default slack channel that you want to send message.}',\n        'USERNAME': '{default message sender name}',\n        'ICON_EMOJI': '{default sender emoticon}',\n    }\n\n``WEBHOOK URL`` is required. You can get your webhook url from slack.\nSee https://api.slack.com/custom-integrations\n\n``CHANNEL``, ``USERNAME``, ``ICON_EMOJI`` is optional parameters. If\ndefault value is set, you don't need to pass parameter to your\n``send_message`` method. See below.\n\nUsage\n=====\n\nIn your python code,\n\n::\n\n    from django-slack-notifications.utils import send_message\n\n    send_message(channel='#general', username='test', text=\"Hi, I'm a test message.\")\n\n``send_message`` returns default slack response. If succeed, it returns\n200.\n\nIf you set default values ``CHANNEL``, ``USERNAME``, you can call\n``send_message`` like...\n\n::\n\n    from django-slack-notifications.utils import send_message\n\n    send_message(text=\"Hi, I'm a test message.\")\n\n``channel`` and ``username`` is set default value that you defined in\n``settings.py``\n\nif ``ICON_EMOJI`` is not set, it uses default slack webhook integrations\nsettings that you've defined at\nhttps://prnd.slack.com/apps/manage/custom-integrations", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/johnnykim/django-slack-notifications", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-slack-notifications", "package_url": "https://pypi.org/project/django-slack-notifications/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-slack-notifications/", "project_urls": {"Homepage": "https://github.com/johnnykim/django-slack-notifications"}, "release_url": "https://pypi.org/project/django-slack-notifications/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "A simple Django app to send notifications to slack.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-slack-notifications\">\n<h2>django-slack-notifications</h2>\n<p><strong>Extremely simple and easy slack integration with django.</strong></p>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python (3.3+)</li>\n<li>Django (1.7, 1.8, 1.9)</li>\n<li>Slack Webhook Url: <a href=\"https://api.slack.com/custom-integrations\" rel=\"nofollow\">https://api.slack.com/custom-integrations</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using <tt>pip</tt></p>\n<pre>pip install django-slack-notifications\n</pre>\n<p>Add <tt><span class=\"pre\">django-slack-notifications</span></tt> to your <tt>INSTALLED_APPS</tt> setting.</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'django-slack-notifications',\n)\n</pre>\n<p>Add <tt>SLACK_NOTIFICATIONS</tt> to your <tt>settings.py</tt></p>\n<pre>SLACK_NOTIFICATIONS = {\n    'WEBHOOK_URL': '{your slack webhook url}'\n    'CHANNEL': '{default slack channel that you want to send message.}',\n    'USERNAME': '{default message sender name}',\n    'ICON_EMOJI': '{default sender emoticon}',\n}\n</pre>\n<p><tt>WEBHOOK URL</tt> is required. You can get your webhook url from slack.\nSee <a href=\"https://api.slack.com/custom-integrations\" rel=\"nofollow\">https://api.slack.com/custom-integrations</a></p>\n<p><tt>CHANNEL</tt>, <tt>USERNAME</tt>, <tt>ICON_EMOJI</tt> is optional parameters. If\ndefault value is set, you don\u2019t need to pass parameter to your\n<tt>send_message</tt> method. See below.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>In your python code,</p>\n<pre>from django-slack-notifications.utils import send_message\n\nsend_message(channel='#general', username='test', text=\"Hi, I'm a test message.\")\n</pre>\n<p><tt>send_message</tt> returns default slack response. If succeed, it returns\n200.</p>\n<p>If you set default values <tt>CHANNEL</tt>, <tt>USERNAME</tt>, you can call\n<tt>send_message</tt> like\u2026</p>\n<pre>from django-slack-notifications.utils import send_message\n\nsend_message(text=\"Hi, I'm a test message.\")\n</pre>\n<p><tt>channel</tt> and <tt>username</tt> is set default value that you defined in\n<tt>settings.py</tt></p>\n<p>if <tt>ICON_EMOJI</tt> is not set, it uses default slack webhook integrations\nsettings that you\u2019ve defined at\n<a href=\"https://prnd.slack.com/apps/manage/custom-integrations\" rel=\"nofollow\">https://prnd.slack.com/apps/manage/custom-integrations</a></p>\n</div>\n\n          </div>"}, "last_serial": 1975835, "releases": {"1.0.0": []}, "urls": [], "timestamp": "Fri May  8 00:53:14 2020"}