{"info": {"author": "davincif", "author_email": "davincif@davincif.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: zlib/libpng License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development", "Topic :: Software Development :: Build Tools"], "description": "<!--\nto installl a package from a local path\npip install -e PATH\nhttps://pythonhosted.org/an_example_pypi_project/sphinx.html\n\nHow to Upload to Pypi:\npython setup.py sdist bdist_wheel\ntwine check dist/*\ntwine upload --repository-url https://test.pypi.org/legacy/ dist/*\ntwine upload dist/*\n-->\n\n# Dependency Manager\n[![current](https://img.shields.io/badge/version-1.0.1rc1-brightgreen.svg)](https://pypi.org/project/simplestRPC/) :green_heart:\n[![license](https://img.shields.io/badge/license-zlib-brightgreen.svg)](https://www.zlib.net/zlib_license.html)\n[![python](https://img.shields.io/badge/python-3.6+-brightgreen.svg)](https://python.org)\n\nDependency Manager comes to resolve the lack of a **good development/production dependency management** in python pip daily use.\n\nWith this tool you're gonna be able to add development and production dependencies to your project in separeted. Once the package can exports all requirements to a file in particular **without losing any compatibility** with who only use pip. Also it differentiates packages which your project is directly dependent on, from its dependency tree.\n\n### Getting Started\n```shell\n# you can install it globaly\nsudo pip install dependencymanager\n## this way you're gonna have dependencymanager globaly to use in all your projects\n\n# or\n\n# localy, but remembet to add it as development dependency ;)\npip install virtualenv\nvirtualenv --python=python3 .virenv\nsource .virenv/bin/activate\n\npip install dependencymanager\npython -m dependecymanager init\npython -m dependecymanager move --name=dependencymanager\npython -m dependecymanager export\n## this way dependency manager will be contained in a specify project,\n## and will be installed only in development environment.\n## if you want it not to stay in production, just do execute the 'move' command.\n```\n\n### Comands:\n##### List\n| Command       | Description                                                                                                                                                  |\n| ------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| init          | create DM environment tree from existente installed                                                                                                          |\n| i - install   | Install the project or an specific dependecy                                                                                                                 |\n| u - uninstall | Uninstall required package and its dependency. Maintaining possible cross dependencies with other packages, moving them if necessary, and updating the tree. |\n| f - info      | Get info about the requested pack.                                                                                                                           |\n| m - move      | Move package between environments, production for developer and vice versa.                                                                                  |\n| mh - makehead | Make the given package head. That is, the project is now directly dependent on this package.                                                                 |\n| ex - export   | Export requirements files.                                                                                                                                   |\n\n##### Flags\n| Command   | Flag         | Description                                                                        |\n| --------- | ------------ | ---------------------------------------------------------------------------------- |\n| install   | with no flag | install the dev or prod tree: *according to --dev flag*.                           |\n| install   | -n --name    | name of the package to install.                                                    |\n| install   | -v --version | version to install. leave empty for latest.                                        |\n| install   | -d --dev     | Install as dev dependency? **Default is False**.                                   |\n| uninstall | -n --name    | name of the package to uninstall.                                                  |\n| info      | -n --name    | name of the package to get info.                                                   |\n| info      | -e --extra   | Brings all information available about the package, including disponible versions. |\n| move      | -n --name    | name of the package to move.                                                       |\n| makehead  | -n --name    | name of the package to make head.                                                  |\n| makehead  | -rm --remove | \"Undead\" the given pack, removing the 'head' status from it. **Default is False**. |\n\n### WARNING:\nAs the package is still not fully released there are two things you might want to consider:\n\n- Dependency Manager **still does not supports locally installed packages**. It's a rare but possible case of use for pip. So if you, for any reason, need to deal with this kind of approach in your project, Dependency Manager is still not the tool for you. Although adding such support is fairly easy from the point we are, and **this will be present in a future full release version**.\n- The package **craetes 3 files** in you'r current directory: **dmtree.json, requirements.txt and dev_requirements.txt**. **There's still not how to custom these names**, Although adding such feature is fairly easy too, and **will be present in a future full release**.\n\n\n##### See also\n- [Varenv](https://github.com/davincif/varenv) project: A simple way to mock your environment variables during development.\n- [SimplestRPC](https://github.com/davincif/simplestRPC) project: A simple RPC for python - *study project*.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/davincif/dependency_manager", "keywords": "package management manager pypi version development", "license": "", "maintainer": "", "maintainer_email": "", "name": "dependencymanager", "package_url": "https://pypi.org/project/dependencymanager/", "platform": "", "project_url": "https://pypi.org/project/dependencymanager/", "project_urls": {"Bug Reports": "https://github.com/davincif/dependency_manager/issues", "Homepage": "https://github.com/davincif/dependency_manager", "Source": "https://github.com/davincif/dependency_manager/"}, "release_url": "https://pypi.org/project/dependencymanager/1.0.1rc1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "An easy way to manage development and procution dependecies.", "version": "1.0.1rc1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Dependency Manager</h1>\n<p><a href=\"https://pypi.org/project/simplestRPC/\" rel=\"nofollow\"><img alt=\"current\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1171e70d24b6e30aab1d3e357b92195a1d8e9178/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d312e302e317263312d627269676874677265656e2e737667\"></a> :green_heart:\n<a href=\"https://www.zlib.net/zlib_license.html\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a818a800a6bd00e22aa7b461143e7dbd39478e8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d7a6c69622d627269676874677265656e2e737667\"></a>\n<a href=\"https://python.org\" rel=\"nofollow\"><img alt=\"python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9eb544d6acc6b8ed04079b7380ffed226fece5e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362b2d627269676874677265656e2e737667\"></a></p>\n<p>Dependency Manager comes to resolve the lack of a <strong>good development/production dependency management</strong> in python pip daily use.</p>\n<p>With this tool you're gonna be able to add development and production dependencies to your project in separeted. Once the package can exports all requirements to a file in particular <strong>without losing any compatibility</strong> with who only use pip. Also it differentiates packages which your project is directly dependent on, from its dependency tree.</p>\n<h3>Getting Started</h3>\n<pre><span class=\"c1\"># you can install it globaly</span>\nsudo pip install dependencymanager\n<span class=\"c1\">## this way you're gonna have dependencymanager globaly to use in all your projects</span>\n\n<span class=\"c1\"># or</span>\n\n<span class=\"c1\"># localy, but remembet to add it as development dependency ;)</span>\npip install virtualenv\nvirtualenv --python<span class=\"o\">=</span>python3 .virenv\n<span class=\"nb\">source</span> .virenv/bin/activate\n\npip install dependencymanager\npython -m dependecymanager init\npython -m dependecymanager move --name<span class=\"o\">=</span>dependencymanager\npython -m dependecymanager <span class=\"nb\">export</span>\n<span class=\"c1\">## this way dependency manager will be contained in a specify project,</span>\n<span class=\"c1\">## and will be installed only in development environment.</span>\n<span class=\"c1\">## if you want it not to stay in production, just do execute the 'move' command.</span>\n</pre>\n<h3>Comands:</h3>\n<h5>List</h5>\n<table>\n<thead>\n<tr>\n<th>Command</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>init</td>\n<td>create DM environment tree from existente installed</td>\n</tr>\n<tr>\n<td>i - install</td>\n<td>Install the project or an specific dependecy</td>\n</tr>\n<tr>\n<td>u - uninstall</td>\n<td>Uninstall required package and its dependency. Maintaining possible cross dependencies with other packages, moving them if necessary, and updating the tree.</td>\n</tr>\n<tr>\n<td>f - info</td>\n<td>Get info about the requested pack.</td>\n</tr>\n<tr>\n<td>m - move</td>\n<td>Move package between environments, production for developer and vice versa.</td>\n</tr>\n<tr>\n<td>mh - makehead</td>\n<td>Make the given package head. That is, the project is now directly dependent on this package.</td>\n</tr>\n<tr>\n<td>ex - export</td>\n<td>Export requirements files.</td>\n</tr></tbody></table>\n<h5>Flags</h5>\n<table>\n<thead>\n<tr>\n<th>Command</th>\n<th>Flag</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>install</td>\n<td>with no flag</td>\n<td>install the dev or prod tree: <em>according to --dev flag</em>.</td>\n</tr>\n<tr>\n<td>install</td>\n<td>-n --name</td>\n<td>name of the package to install.</td>\n</tr>\n<tr>\n<td>install</td>\n<td>-v --version</td>\n<td>version to install. leave empty for latest.</td>\n</tr>\n<tr>\n<td>install</td>\n<td>-d --dev</td>\n<td>Install as dev dependency? <strong>Default is False</strong>.</td>\n</tr>\n<tr>\n<td>uninstall</td>\n<td>-n --name</td>\n<td>name of the package to uninstall.</td>\n</tr>\n<tr>\n<td>info</td>\n<td>-n --name</td>\n<td>name of the package to get info.</td>\n</tr>\n<tr>\n<td>info</td>\n<td>-e --extra</td>\n<td>Brings all information available about the package, including disponible versions.</td>\n</tr>\n<tr>\n<td>move</td>\n<td>-n --name</td>\n<td>name of the package to move.</td>\n</tr>\n<tr>\n<td>makehead</td>\n<td>-n --name</td>\n<td>name of the package to make head.</td>\n</tr>\n<tr>\n<td>makehead</td>\n<td>-rm --remove</td>\n<td>\"Undead\" the given pack, removing the 'head' status from it. <strong>Default is False</strong>.</td>\n</tr></tbody></table>\n<h3>WARNING:</h3>\n<p>As the package is still not fully released there are two things you might want to consider:</p>\n<ul>\n<li>Dependency Manager <strong>still does not supports locally installed packages</strong>. It's a rare but possible case of use for pip. So if you, for any reason, need to deal with this kind of approach in your project, Dependency Manager is still not the tool for you. Although adding such support is fairly easy from the point we are, and <strong>this will be present in a future full release version</strong>.</li>\n<li>The package <strong>craetes 3 files</strong> in you'r current directory: <strong>dmtree.json, requirements.txt and dev_requirements.txt</strong>. <strong>There's still not how to custom these names</strong>, Although adding such feature is fairly easy too, and <strong>will be present in a future full release</strong>.</li>\n</ul>\n<h5>See also</h5>\n<ul>\n<li><a href=\"https://github.com/davincif/varenv\" rel=\"nofollow\">Varenv</a> project: A simple way to mock your environment variables during development.</li>\n<li><a href=\"https://github.com/davincif/simplestRPC\" rel=\"nofollow\">SimplestRPC</a> project: A simple RPC for python - <em>study project</em>.</li>\n</ul>\n\n          </div>"}, "last_serial": 7190882, "releases": {"1.0.0rc0": [{"comment_text": "", "digests": {"md5": "7dbf6c0ac5be7e7887358185533a9acf", "sha256": "3f7afc8980b89344273c608235ffbaeb296671a896edf6ea761e6c06e2a57de3"}, "downloads": -1, "filename": "dependencymanager-1.0.0rc0-py3-none-any.whl", "has_sig": false, "md5_digest": "7dbf6c0ac5be7e7887358185533a9acf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12019, "upload_time": "2020-05-05T15:29:19", "upload_time_iso_8601": "2020-05-05T15:29:19.445991Z", "url": "https://files.pythonhosted.org/packages/7a/44/6c9ff8b0bd45c3244c978a50f770ec48390238e94b1436827f2114947a30/dependencymanager-1.0.0rc0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acc2e8398018fbce835571e65248031e", "sha256": "094829c405e8faef479bf27229458eb5a67d361fd3fb4581239b2120468480fb"}, "downloads": -1, "filename": "dependencymanager-1.0.0rc0.tar.gz", "has_sig": false, "md5_digest": "acc2e8398018fbce835571e65248031e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15022, "upload_time": "2020-05-05T15:29:21", "upload_time_iso_8601": "2020-05-05T15:29:21.705758Z", "url": "https://files.pythonhosted.org/packages/ca/3d/7ef93e899a420dea04fc01b70e12757b20050308cdd911212238c22b1118/dependencymanager-1.0.0rc0.tar.gz", "yanked": false}], "1.0.1rc0": [{"comment_text": "", "digests": {"md5": "6deb86304ccae87de43163f741fe610f", "sha256": "4b06ff21537df71fb76c8c449c86cf51cea6328acab9f35062f6a7b146129b94"}, "downloads": -1, "filename": "dependencymanager-1.0.1rc0-py2-none-any.whl", "has_sig": false, "md5_digest": "6deb86304ccae87de43163f741fe610f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.6", "size": 12304, "upload_time": "2020-05-07T17:35:14", "upload_time_iso_8601": "2020-05-07T17:35:14.320433Z", "url": "https://files.pythonhosted.org/packages/7a/e2/99d59722fa36510554634ae4fa026108d28532488d7e0e8764c958555ba4/dependencymanager-1.0.1rc0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba87a319eb952d42f1daa42803c0da85", "sha256": "d8d273e240be613d3cd899207e7e9abf2b1d15f30497816c1a4dec499d910e80"}, "downloads": -1, "filename": "dependencymanager-1.0.1rc0.tar.gz", "has_sig": false, "md5_digest": "ba87a319eb952d42f1daa42803c0da85", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14830, "upload_time": "2020-05-07T17:35:15", "upload_time_iso_8601": "2020-05-07T17:35:15.623902Z", "url": "https://files.pythonhosted.org/packages/0f/c9/d1e674da4e9d449e4cf1ddef5536a42c899c95184aa5cd55eb98ccec5605/dependencymanager-1.0.1rc0.tar.gz", "yanked": false}], "1.0.1rc1": [{"comment_text": "", "digests": {"md5": "5779129e92a82198dd3c02d370b5ef08", "sha256": "20a64a9784c4d00aa5d26e85c7816bbc4d431bfc76e6fcce17749cd2a1f02efd"}, "downloads": -1, "filename": "dependencymanager-1.0.1rc1-py2-none-any.whl", "has_sig": false, "md5_digest": "5779129e92a82198dd3c02d370b5ef08", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.6", "size": 12490, "upload_time": "2020-05-07T18:32:36", "upload_time_iso_8601": "2020-05-07T18:32:36.147663Z", "url": "https://files.pythonhosted.org/packages/b1/a0/db64b83fea9bb2e984f87b54c4d4dc1bc94576fb4410f4c2f35abdd7e6d8/dependencymanager-1.0.1rc1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49dec4a5d75d7fc11f1c8b8009191a6c", "sha256": "896bbbcff2292eef638a132c7116ceb2a2a5489ce5af67c08092ffd6d8923140"}, "downloads": -1, "filename": "dependencymanager-1.0.1rc1.tar.gz", "has_sig": false, "md5_digest": "49dec4a5d75d7fc11f1c8b8009191a6c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15027, "upload_time": "2020-05-07T18:32:37", "upload_time_iso_8601": "2020-05-07T18:32:37.248308Z", "url": "https://files.pythonhosted.org/packages/69/06/5b670e4e59d25021fe56a662ea9fa4b6650f2b02efc7bede42800f71cb96/dependencymanager-1.0.1rc1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5779129e92a82198dd3c02d370b5ef08", "sha256": "20a64a9784c4d00aa5d26e85c7816bbc4d431bfc76e6fcce17749cd2a1f02efd"}, "downloads": -1, "filename": "dependencymanager-1.0.1rc1-py2-none-any.whl", "has_sig": false, "md5_digest": "5779129e92a82198dd3c02d370b5ef08", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.6", "size": 12490, "upload_time": "2020-05-07T18:32:36", "upload_time_iso_8601": "2020-05-07T18:32:36.147663Z", "url": "https://files.pythonhosted.org/packages/b1/a0/db64b83fea9bb2e984f87b54c4d4dc1bc94576fb4410f4c2f35abdd7e6d8/dependencymanager-1.0.1rc1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49dec4a5d75d7fc11f1c8b8009191a6c", "sha256": "896bbbcff2292eef638a132c7116ceb2a2a5489ce5af67c08092ffd6d8923140"}, "downloads": -1, "filename": "dependencymanager-1.0.1rc1.tar.gz", "has_sig": false, "md5_digest": "49dec4a5d75d7fc11f1c8b8009191a6c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15027, "upload_time": "2020-05-07T18:32:37", "upload_time_iso_8601": "2020-05-07T18:32:37.248308Z", "url": "https://files.pythonhosted.org/packages/69/06/5b670e4e59d25021fe56a662ea9fa4b6650f2b02efc7bede42800f71cb96/dependencymanager-1.0.1rc1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:05 2020"}