{"info": {"author": "Marc Kirchner", "author_email": "mail@marc-kirchner.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Build Tools"], "description": "# Pockyll\n\nPockyll is a python tool to create [Jekyll][j] linkposts from your\n[pocket][pocket] collections because automated linkpost updates are like death\nsticks.\n\n> \"You wanna buy some death sticks?\"<br>\n> \"You don't want to sell me death sticks.\"<br>\n> \"I don't wanna sell you death sticks.\"<br>\n> \"You want to go home an rethink your life.\"<br>\n> \"I want to  go home and rethink my life.\"<br>\n> -- Elan Sleazebaggano & Obi-Wan Kenobi\n\n## Features\n\n* Pocket item/bookmark syncing that converts your saved & tagged pocket items\n  into linkposts that merge seamlessly with standard Jekyll posts\n* Linkpost management fully compatible with tools like e.g.\n  [octopress][octopress]\n* Incremental update support\n* Tag-specific syncing\n* Pocket OAuth authentication\n\n## Installation \n\n### Concept\nUsing pockyll to manage [pocket][pocket] bookmarks requires two pieces: the\n`pockyll` executable (which pulls your pocket bookmarks into your Jekyll site)\nand changes to your site setup (in order to enable Jekyll to deal with\nlinkposts properly).\n\n### Installing pockyll\n\nEither get the package from PyPi\n\n```bash\n$ pip install pockyll\n```\n\nor clone the repo and install manually\n\n```bash\n$ git clone https://github.com/mkirchner/pockyll.git\n$ cd pockyll\n$ python setup.py install\n```\n\n### Pockyll setup\n\n1. Login into [pocket][pocket_login], [create a new\n  application][pocket_newapp] that has *retrieve* permissions.\n2. Switch into your Jekyll site directory\n3. Generate a a dummy config file `_pockyll.yml`. This can be accomplished\nusing\n\n        $ pockyll init\n\n4. In `_pockyll.yml` enter the `pocket_consumer_key` created in step 1. \n   Edit other fields as required.\n5. Authenticate the pockyll app against the pocket API\n\n        $ pockyll auth \n\n   This will open a browser window and ask for pocket authentication.\n\n### Site setup\n\nBy default, pockyll will define a variable `type` with the value `reference`\nin every linkpost. It will also and include the target link in the `ref`\nvariable inside the YAML post header:\n\n\t---\n\ttitle: \"Clojure, The Good Parts\"\n\tdate: 2016-04-19T23:05:26\n\ttype: \"reference\"\n\tref: https://rasterize.io/blog/clojure-the-good-parts.html\n\t---\n\nWriting code that differentiates between normal and linkposts is\ntherefore straightforward. You can simply use the post type as an indicator.\nHere is an example for a root directory `index.html` file that inserts the\nlink to the post for every normal post and the link to the reference for every\nlinkpost:\n\n```html\n<div id=\"home\">\n  <ul id=\"blog-posts\" class=\"posts fa-ul\">\n    {% for post in site.posts %}\n      {% if post.type == \"reference\" %}\n      <li><i class=\"fa-li fa fa-bookmark-o\"></i>\n          <a href=\"{{ post.ref }}\">{{ post.title }}</a> <!-- HERE -->\n          <span>{{ post.date | date_to_string }}</span></li>\n      {% else %}\n      <li><i class=\"fa-li fa fa-pencil-square\"></i>\n          <a href=\"{{ post.url }}\">{{ post.title }}</a> <!-- HERE -->\n          <span>{{ post.date | date_to_string }}</span></li>\n      {% endif %}\n    {% endfor %}\n  </ul>\n</div>\n```\n\nFor normal posts, the link points to `post.url`. If the post\nis a linkpost, the link points to `post.ref`, thus enabling direct external\nlinking.\n\n## Syncing Jekyll linkposts with Pocket\n\nOnce you have your site configured, it is time to sync your pocket bookmarks.\n\n1. `pockyll sync` (one-way sync of all new posts tagged with any \n   of `pocket_sync_tags`)\n2. `jekyll build`\n3. Optional: `jekyll serve` and marvel at the linkposts on your local server at\n   <http://localhost:4000>.\n\n## Examples\n\n```\nmk@kowalski:~/src/mysite$ pockyll sync\nRequesting new items from Pocket API...\nSyncing 164 items.\nFIXME: ['FIXME', u'http://insighthealthdata.com/blog/HealthyBeats/index.html', u'1227075798']\nFIXME: ['FIXME', u'http://ahmetalpbalkan.com/blog/8-months-microsoft/', u'374320379']\nFIXME: ['FIXME', None, u'0']\nSkipping: ['FIXME', None, u'0']\nFIXME: ['FIXME', u'https://www.linkedin.com/pulse/agile-dead-matthew-kern', u'1264106151']\nFIXME: ['FIXME', u'http://pjreddie.com/darknet/', u'1152066420']\nFIXME: ['FIXME', u'https://www.chrisstucchio.com/blog/2013/bayesian_bandit.html', u'393364879']\nDone (skipped 1).\nmk@kowalski:~/src/mysite$\n```\n\nThis is an example of an initial sync of a jekyll site against pocket (hence\nthe number of items).  Pockyll automatically 'fixes' missing titles but skips\nitems that lack a URI or an ID. I would now change into the `linkpost_dir`,\ngrep all files for the `title: \"FIXME\"` string and start editing, e.g.:\n\n        vim `grep -l 'title: \"FIXME\"' *`\n\n\n## Customization\n\nPockyll is configured using a `_pockyll.yml` configuration file located in\nyour Jekyll base directory. After successful OAuth authentication, the file\ncontains your secret Pocket access token. Hence, please make sure to\n*include the pockyll configuration into your `.gitignore` file!*\n\n### Configuration file\n\nThe overall configuration file structure looks like this:\n\n```yaml\npocket_consumer_key: ***secret***\npocket_access_token: ***secret***\npocket_redirect_uri: 'https://getpocket.com/a/'\npocket_sync_tags: ['blog']\npocket_since: 12326342\nlinkpost_dir: '_posts/linkposts'\n```\n\n### Options\n\n- `pocket_consumer_key`: this is the consumer key you obtain from the\n  pocket developer API.\n- `pocket_access_token`: the access token. Pockyll automatically stores \n  the token in the configuration file after the first successful OAuth\n  authentication event.\n- `pocket_redirect_uri`: the location to which your are redirected\n  after successful authentication (this can be anything).\n- `pocket_sync_tags`: a list of pocket tags that should be synced to\n  Jekyll.\n- `pocket_since`: pocket timestamp that marks the last sync.\n  Automatically updated by pockyll.\n- `linkpost_dir`: the directory where linkposts should be synced\n  to. Change this to e.g. `_drafts/linkposts` if you want to review changes\n  before publication. In that case use \n\n## License\n\nVanilla [MIT](https://github.com/mkirchner/pockyll/blob/master/LICENSE).\n\n## Contact\nFeel free to open issues if you run into trouble or have suggestions. Pull\nRequests always welcome.\n\n[j]: http://jekyllrb.com/\n[octopress]: http://octopress.org/\n[pocket]: https://getpocket.com/\n[pocket_login]: https://getpocket.com/login\n[pocket_newapp]: https://getpocket.com/developer/apps/new", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mkirchner/pockyll/", "keywords": "jekyll pocket blog linkpost", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pockyll", "package_url": "https://pypi.org/project/pockyll/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pockyll/", "project_urls": {"Homepage": "https://github.com/mkirchner/pockyll/"}, "release_url": "https://pypi.org/project/pockyll/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "sync your pocket bookmarks to Jekyll linkposts", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Pockyll<br><br>Pockyll is a python tool to create [Jekyll][j] linkposts from your<br>[pocket][pocket] collections because automated linkpost updates are like death<br>sticks.<br><br>&gt; \"You wanna buy some death sticks?\"&lt;br&gt;<br>&gt; \"You don't want to sell me death sticks.\"&lt;br&gt;<br>&gt; \"I don't wanna sell you death sticks.\"&lt;br&gt;<br>&gt; \"You want to go home an rethink your life.\"&lt;br&gt;<br>&gt; \"I want to  go home and rethink my life.\"&lt;br&gt;<br>&gt; -- Elan Sleazebaggano &amp; Obi-Wan Kenobi<br><br>## Features<br><br>* Pocket item/bookmark syncing that converts your saved &amp; tagged pocket items<br>  into linkposts that merge seamlessly with standard Jekyll posts<br>* Linkpost management fully compatible with tools like e.g.<br>  [octopress][octopress]<br>* Incremental update support<br>* Tag-specific syncing<br>* Pocket OAuth authentication<br><br>## Installation <br><br>### Concept<br>Using pockyll to manage [pocket][pocket] bookmarks requires two pieces: the<br>`pockyll` executable (which pulls your pocket bookmarks into your Jekyll site)<br>and changes to your site setup (in order to enable Jekyll to deal with<br>linkposts properly).<br><br>### Installing pockyll<br><br>Either get the package from PyPi<br><br>```bash<br>$ pip install pockyll<br>```<br><br>or clone the repo and install manually<br><br>```bash<br>$ git clone https://github.com/mkirchner/pockyll.git<br>$ cd pockyll<br>$ python setup.py install<br>```<br><br>### Pockyll setup<br><br>1. Login into [pocket][pocket_login], [create a new<br>  application][pocket_newapp] that has *retrieve* permissions.<br>2. Switch into your Jekyll site directory<br>3. Generate a a dummy config file `_pockyll.yml`. This can be accomplished<br>using<br><br>        $ pockyll init<br><br>4. In `_pockyll.yml` enter the `pocket_consumer_key` created in step 1. <br>   Edit other fields as required.<br>5. Authenticate the pockyll app against the pocket API<br><br>        $ pockyll auth <br><br>   This will open a browser window and ask for pocket authentication.<br><br>### Site setup<br><br>By default, pockyll will define a variable `type` with the value `reference`<br>in every linkpost. It will also and include the target link in the `ref`<br>variable inside the YAML post header:<br><br>\t---<br>\ttitle: \"Clojure, The Good Parts\"<br>\tdate: 2016-04-19T23:05:26<br>\ttype: \"reference\"<br>\tref: https://rasterize.io/blog/clojure-the-good-parts.html<br>\t---<br><br>Writing code that differentiates between normal and linkposts is<br>therefore straightforward. You can simply use the post type as an indicator.<br>Here is an example for a root directory `index.html` file that inserts the<br>link to the post for every normal post and the link to the reference for every<br>linkpost:<br><br>```html<br>&lt;div id=\"home\"&gt;<br>  &lt;ul id=\"blog-posts\" class=\"posts fa-ul\"&gt;<br>    {% for post in site.posts %}<br>      {% if post.type == \"reference\" %}<br>      &lt;li&gt;&lt;i class=\"fa-li fa fa-bookmark-o\"&gt;&lt;/i&gt;<br>          &lt;a href=\"{{ post.ref }}\"&gt;{{ post.title }}&lt;/a&gt; &lt;!-- HERE --&gt;<br>          &lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt;&lt;/li&gt;<br>      {% else %}<br>      &lt;li&gt;&lt;i class=\"fa-li fa fa-pencil-square\"&gt;&lt;/i&gt;<br>          &lt;a href=\"{{ post.url }}\"&gt;{{ post.title }}&lt;/a&gt; &lt;!-- HERE --&gt;<br>          &lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt;&lt;/li&gt;<br>      {% endif %}<br>    {% endfor %}<br>  &lt;/ul&gt;<br>&lt;/div&gt;<br>```<br><br>For normal posts, the link points to `post.url`. If the post<br>is a linkpost, the link points to `post.ref`, thus enabling direct external<br>linking.<br><br>## Syncing Jekyll linkposts with Pocket<br><br>Once you have your site configured, it is time to sync your pocket bookmarks.<br><br>1. `pockyll sync` (one-way sync of all new posts tagged with any <br>   of `pocket_sync_tags`)<br>2. `jekyll build`<br>3. Optional: `jekyll serve` and marvel at the linkposts on your local server at<br>   &lt;http://localhost:4000&gt;.<br><br>## Examples<br><br>```<br>mk@kowalski:~/src/mysite$ pockyll sync<br>Requesting new items from Pocket API...<br>Syncing 164 items.<br>FIXME: ['FIXME', u'http://insighthealthdata.com/blog/HealthyBeats/index.html', u'1227075798']<br>FIXME: ['FIXME', u'http://ahmetalpbalkan.com/blog/8-months-microsoft/', u'374320379']<br>FIXME: ['FIXME', None, u'0']<br>Skipping: ['FIXME', None, u'0']<br>FIXME: ['FIXME', u'https://www.linkedin.com/pulse/agile-dead-matthew-kern', u'1264106151']<br>FIXME: ['FIXME', u'http://pjreddie.com/darknet/', u'1152066420']<br>FIXME: ['FIXME', u'https://www.chrisstucchio.com/blog/2013/bayesian_bandit.html', u'393364879']<br>Done (skipped 1).<br>mk@kowalski:~/src/mysite$<br>```<br><br>This is an example of an initial sync of a jekyll site against pocket (hence<br>the number of items).  Pockyll automatically 'fixes' missing titles but skips<br>items that lack a URI or an ID. I would now change into the `linkpost_dir`,<br>grep all files for the `title: \"FIXME\"` string and start editing, e.g.:<br><br>        vim `grep -l 'title: \"FIXME\"' *`<br><br><br>## Customization<br><br>Pockyll is configured using a `_pockyll.yml` configuration file located in<br>your Jekyll base directory. After successful OAuth authentication, the file<br>contains your secret Pocket access token. Hence, please make sure to<br>*include the pockyll configuration into your `.gitignore` file!*<br><br>### Configuration file<br><br>The overall configuration file structure looks like this:<br><br>```yaml<br>pocket_consumer_key: ***secret***<br>pocket_access_token: ***secret***<br>pocket_redirect_uri: 'https://getpocket.com/a/'<br>pocket_sync_tags: ['blog']<br>pocket_since: 12326342<br>linkpost_dir: '_posts/linkposts'<br>```<br><br>### Options<br><br>- `pocket_consumer_key`: this is the consumer key you obtain from the<br>  pocket developer API.<br>- `pocket_access_token`: the access token. Pockyll automatically stores <br>  the token in the configuration file after the first successful OAuth<br>  authentication event.<br>- `pocket_redirect_uri`: the location to which your are redirected<br>  after successful authentication (this can be anything).<br>- `pocket_sync_tags`: a list of pocket tags that should be synced to<br>  Jekyll.<br>- `pocket_since`: pocket timestamp that marks the last sync.<br>  Automatically updated by pockyll.<br>- `linkpost_dir`: the directory where linkposts should be synced<br>  to. Change this to e.g. `_drafts/linkposts` if you want to review changes<br>  before publication. In that case use <br><br>## License<br><br>Vanilla [MIT](https://github.com/mkirchner/pockyll/blob/master/LICENSE).<br><br>## Contact<br>Feel free to open issues if you run into trouble or have suggestions. Pull<br>Requests always welcome.<br><br>[j]: http://jekyllrb.com/<br>[octopress]: http://octopress.org/<br>[pocket]: https://getpocket.com/<br>[pocket_login]: https://getpocket.com/login<br>[pocket_newapp]: https://getpocket.com/developer/apps/new\n          </div>"}, "last_serial": 2113954, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "0abfa1141705cf41b6554d9b8af1d981", "sha256": "8a24b89f28a5670e82024acea2cc631f95cba97ad2ee56676797614535815bcf"}, "downloads": -1, "filename": "pockyll-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0abfa1141705cf41b6554d9b8af1d981", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6584, "upload_time": "2016-05-13T10:17:00", "upload_time_iso_8601": "2016-05-13T10:17:00.512434Z", "url": "https://files.pythonhosted.org/packages/7b/3d/8458149c3a0235150824d68c8182fca2fe114a24bece069f5be70ae20748/pockyll-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0abfa1141705cf41b6554d9b8af1d981", "sha256": "8a24b89f28a5670e82024acea2cc631f95cba97ad2ee56676797614535815bcf"}, "downloads": -1, "filename": "pockyll-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0abfa1141705cf41b6554d9b8af1d981", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6584, "upload_time": "2016-05-13T10:17:00", "upload_time_iso_8601": "2016-05-13T10:17:00.512434Z", "url": "https://files.pythonhosted.org/packages/7b/3d/8458149c3a0235150824d68c8182fca2fe114a24bece069f5be70ae20748/pockyll-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:52:09 2020"}