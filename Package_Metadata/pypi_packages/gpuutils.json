{"info": {"author": "Sefik Ilkin Serengil", "author_email": "serengil@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# GpuUtils\n\nWorking on a shared environment with multiple GPUs might be problematic. Advanced frameworks apply greedy approach and they tend to allocate all GPUs and all memory of your system. GpuUtils helps you to find the best GPU on your system to allocate. It also provides a gpu related information in a structure format.\n\n## Installation\n\nThe easiest way to install GpuUtils is to install it via [PyPI](https://pypi.org/project/gpuutils).\n\n```\npip install gpuutils\n```\n\n## Analyzing system\n\nRunning **nvidia-smi** command in the command prompt allows users to monitor GPU related information such as memory and utilization. Herein, system analysis function loads GPU related information into a pandas data frame or json array.\n\n```python\nfrom gpuutils import GpuUtils\ndf = GpuUtils.analyzeSystem() #this will return a pandas data frame\n#dict = GpuUtils.analyzeSystem(pandas_format = False) #this will return a json array\n```\n\nDefault configuration of system analysis returns a Pandas data frame.\n\n| gpu_index | total_memories_in_mb | available_memories_in_mb | memory_usage_percentage | utilizations | power_usages_in_watts | power_capacities_in_watts |\n| ---       | ---                  | ---                      | ---                     | ---          | ---                   | ---                       |\n| 1         | 32480                | 32469                    | 0.0339                  | 0            | 43                    | 300                       |\n| 2         | 32480                | 32469                    | 0.0339                  | 0            | 43                    | 300                       |\n| 3         | 32480                | 32469                    | 0.0339                  | 0            | 44                    | 300                       |\n| 4         | 32480                | 32469                    | 0.0339                  | 0            | 43                    | 300                       |\n| 5         | 32480                | 32469                    | 0.0339                  | 0            | 43                    | 300                       |\n| 6         | 32480                | 32469                    | 0.0339                  | 0            | 43                    | 300                       |\n| 7         | 32480                | 32469                    | 0.0339                  | 0            | 43                    | 300                       |\n| 0         | 32480                | 31031                    | 4.4612                  | 7            | 56                    | 300                       |\n\n## Allocation\n\nGpuUtils can allocate GPUs as well. Calling allocation function directly finds the available GPUs and allocate based on your demand.\n\n```python\nfrom gpuutils import GpuUtils\nGpuUtils.allocate() #this tries to allocate a GPU having 1GB memory\n#GpuUtils.allocate(required_memory = 10000)\n#GpuUtils.allocate(required_memory = 10000, gpu_count=1)\n```\n\n# To avoid greedy approach\n\nAdvanced frameworks such as TensorFlow tend to allocate all memory. You can avoid this approach if you pass the framework argument in allocate function. In this way, the framework will use the gpu memory as much as needed. Currently, keras and tensorflow frameworks are supported in allocate function.\n\n```python\nGpuUtils.allocate(framework = 'keras')\n```\n\n# Support\n\nThere are many ways to support a project - starring\u2b50\ufe0f the GitHub repos is just one.\n\n# Licence\n\nGpuUtils is licensed under the MIT License - see [`LICENSE`](https://github.com/serengil/gpuutils/blob/master/LICENSE) for more details.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/serengil/gpuutils", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "gpuutils", "package_url": "https://pypi.org/project/gpuutils/", "platform": "", "project_url": "https://pypi.org/project/gpuutils/", "project_urls": {"Homepage": "https://github.com/serengil/gpuutils"}, "release_url": "https://pypi.org/project/gpuutils/0.0.2/", "requires_dist": ["pandas (>=0.23.4)"], "requires_python": ">=3.5.5", "summary": "Gpu Utils: Simple Tool for GPU Analysis and Allocation", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>GpuUtils</h1>\n<p>Working on a shared environment with multiple GPUs might be problematic. Advanced frameworks apply greedy approach and they tend to allocate all GPUs and all memory of your system. GpuUtils helps you to find the best GPU on your system to allocate. It also provides a gpu related information in a structure format.</p>\n<h2>Installation</h2>\n<p>The easiest way to install GpuUtils is to install it via <a href=\"https://pypi.org/project/gpuutils\" rel=\"nofollow\">PyPI</a>.</p>\n<pre><code>pip install gpuutils\n</code></pre>\n<h2>Analyzing system</h2>\n<p>Running <strong>nvidia-smi</strong> command in the command prompt allows users to monitor GPU related information such as memory and utilization. Herein, system analysis function loads GPU related information into a pandas data frame or json array.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gpuutils</span> <span class=\"kn\">import</span> <span class=\"n\">GpuUtils</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">GpuUtils</span><span class=\"o\">.</span><span class=\"n\">analyzeSystem</span><span class=\"p\">()</span> <span class=\"c1\">#this will return a pandas data frame</span>\n<span class=\"c1\">#dict = GpuUtils.analyzeSystem(pandas_format = False) #this will return a json array</span>\n</pre>\n<p>Default configuration of system analysis returns a Pandas data frame.</p>\n<table>\n<thead>\n<tr>\n<th>gpu_index</th>\n<th>total_memories_in_mb</th>\n<th>available_memories_in_mb</th>\n<th>memory_usage_percentage</th>\n<th>utilizations</th>\n<th>power_usages_in_watts</th>\n<th>power_capacities_in_watts</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>32480</td>\n<td>32469</td>\n<td>0.0339</td>\n<td>0</td>\n<td>43</td>\n<td>300</td>\n</tr>\n<tr>\n<td>2</td>\n<td>32480</td>\n<td>32469</td>\n<td>0.0339</td>\n<td>0</td>\n<td>43</td>\n<td>300</td>\n</tr>\n<tr>\n<td>3</td>\n<td>32480</td>\n<td>32469</td>\n<td>0.0339</td>\n<td>0</td>\n<td>44</td>\n<td>300</td>\n</tr>\n<tr>\n<td>4</td>\n<td>32480</td>\n<td>32469</td>\n<td>0.0339</td>\n<td>0</td>\n<td>43</td>\n<td>300</td>\n</tr>\n<tr>\n<td>5</td>\n<td>32480</td>\n<td>32469</td>\n<td>0.0339</td>\n<td>0</td>\n<td>43</td>\n<td>300</td>\n</tr>\n<tr>\n<td>6</td>\n<td>32480</td>\n<td>32469</td>\n<td>0.0339</td>\n<td>0</td>\n<td>43</td>\n<td>300</td>\n</tr>\n<tr>\n<td>7</td>\n<td>32480</td>\n<td>32469</td>\n<td>0.0339</td>\n<td>0</td>\n<td>43</td>\n<td>300</td>\n</tr>\n<tr>\n<td>0</td>\n<td>32480</td>\n<td>31031</td>\n<td>4.4612</td>\n<td>7</td>\n<td>56</td>\n<td>300</td>\n</tr></tbody></table>\n<h2>Allocation</h2>\n<p>GpuUtils can allocate GPUs as well. Calling allocation function directly finds the available GPUs and allocate based on your demand.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gpuutils</span> <span class=\"kn\">import</span> <span class=\"n\">GpuUtils</span>\n<span class=\"n\">GpuUtils</span><span class=\"o\">.</span><span class=\"n\">allocate</span><span class=\"p\">()</span> <span class=\"c1\">#this tries to allocate a GPU having 1GB memory</span>\n<span class=\"c1\">#GpuUtils.allocate(required_memory = 10000)</span>\n<span class=\"c1\">#GpuUtils.allocate(required_memory = 10000, gpu_count=1)</span>\n</pre>\n<h1>To avoid greedy approach</h1>\n<p>Advanced frameworks such as TensorFlow tend to allocate all memory. You can avoid this approach if you pass the framework argument in allocate function. In this way, the framework will use the gpu memory as much as needed. Currently, keras and tensorflow frameworks are supported in allocate function.</p>\n<pre><span class=\"n\">GpuUtils</span><span class=\"o\">.</span><span class=\"n\">allocate</span><span class=\"p\">(</span><span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"s1\">'keras'</span><span class=\"p\">)</span>\n</pre>\n<h1>Support</h1>\n<p>There are many ways to support a project - starring\u2b50\ufe0f the GitHub repos is just one.</p>\n<h1>Licence</h1>\n<p>GpuUtils is licensed under the MIT License - see <a href=\"https://github.com/serengil/gpuutils/blob/master/LICENSE\" rel=\"nofollow\"><code>LICENSE</code></a> for more details.</p>\n\n          </div>"}, "last_serial": 7076772, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "40ae5a144970146f999ab31a3f1827ff", "sha256": "02486dd7d73924096cb8b31efb23a15e15dc7f5d7b87866a48d8207e0f3b4499"}, "downloads": -1, "filename": "gpuutils-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "40ae5a144970146f999ab31a3f1827ff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 4543, "upload_time": "2020-04-22T08:58:48", "upload_time_iso_8601": "2020-04-22T08:58:48.471682Z", "url": "https://files.pythonhosted.org/packages/bd/e3/ebd6e705990bbc88ddac5c5e1ee2fa85c45aa51a9510cead2b789c968763/gpuutils-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1298b29eb790a3be8329317cf4633932", "sha256": "c35268f1dd89fe42aa4618ca4fd768d38951e2577bce308b001ba4005160acb4"}, "downloads": -1, "filename": "gpuutils-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1298b29eb790a3be8329317cf4633932", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 3383, "upload_time": "2020-04-22T08:58:50", "upload_time_iso_8601": "2020-04-22T08:58:50.821850Z", "url": "https://files.pythonhosted.org/packages/d3/fe/afb374c810c833373765fd00374e6b3b55c3ea759fdd80d91e141ff150bc/gpuutils-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "a1dff8416752bcc54c7e121f019b8029", "sha256": "0c59202fc5cbf72511b80997db70b4592442b83dad94d65d621ff76ad0efbff3"}, "downloads": -1, "filename": "gpuutils-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a1dff8416752bcc54c7e121f019b8029", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 4914, "upload_time": "2020-04-22T14:01:40", "upload_time_iso_8601": "2020-04-22T14:01:40.210230Z", "url": "https://files.pythonhosted.org/packages/04/60/75edaa3b46eae48f5f16c2226f52a1afd0e17231fb4fc34508cebdf0baea/gpuutils-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56573704251bba30321cc711259e0c5b", "sha256": "a7703eed72e144355d275ce098b31f1b39da490f3d4724b2bf48a83a6e6b7ce6"}, "downloads": -1, "filename": "gpuutils-0.0.2.tar.gz", "has_sig": false, "md5_digest": "56573704251bba30321cc711259e0c5b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 3753, "upload_time": "2020-04-22T14:01:41", "upload_time_iso_8601": "2020-04-22T14:01:41.336538Z", "url": "https://files.pythonhosted.org/packages/63/86/78702fc7c03725b56bfdff3e7a97ee78054a26782918da38413c97d8e11e/gpuutils-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a1dff8416752bcc54c7e121f019b8029", "sha256": "0c59202fc5cbf72511b80997db70b4592442b83dad94d65d621ff76ad0efbff3"}, "downloads": -1, "filename": "gpuutils-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a1dff8416752bcc54c7e121f019b8029", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.5", "size": 4914, "upload_time": "2020-04-22T14:01:40", "upload_time_iso_8601": "2020-04-22T14:01:40.210230Z", "url": "https://files.pythonhosted.org/packages/04/60/75edaa3b46eae48f5f16c2226f52a1afd0e17231fb4fc34508cebdf0baea/gpuutils-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56573704251bba30321cc711259e0c5b", "sha256": "a7703eed72e144355d275ce098b31f1b39da490f3d4724b2bf48a83a6e6b7ce6"}, "downloads": -1, "filename": "gpuutils-0.0.2.tar.gz", "has_sig": false, "md5_digest": "56573704251bba30321cc711259e0c5b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.5", "size": 3753, "upload_time": "2020-04-22T14:01:41", "upload_time_iso_8601": "2020-04-22T14:01:41.336538Z", "url": "https://files.pythonhosted.org/packages/63/86/78702fc7c03725b56bfdff3e7a97ee78054a26782918da38413c97d8e11e/gpuutils-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:07 2020"}