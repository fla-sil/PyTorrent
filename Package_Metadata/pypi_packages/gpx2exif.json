{"info": {"author": "Guilhem Vellut", "author_email": "g@vellut.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Other Audience", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "# gpx2exif\n\nSimple command-line tool to add GPS info from a GPX file to EXIF tags in images\n\n# Motivation\n\nI use Geopaparazzi on my Android phone to log GPS positions during a walk or hike. The app can export into GPX format, which gives the itinerary, as well as the times for my positions at a relatively high temporal resolution. This is useful for making maps or writing a guide after the fact. I also wanted to make it easier to know the location of the photos taken during the walk and have them show up on the Flickr map. Since my camera doesn't have any GPS logging equipment, I made this tool in order to add the GPS information to the photo EXIF tags based on the GPX tracking points.\n\n# Install\n\nThe tool requires Python 3.6+.\n\nTo install, launch :\n\n```console\npip install gpx2exif\n```\n\nThe command above will install the `gpx2exif` Python library and its dependencies. The library includes a command-line script, also named `gpx2exif`, whose functionality is described below.\n\n# Time in images\n\n## Time tag\n\nThe time used for the images is taken from the Date Time Original EXIF tag in the image. In Adobe Bridge, it can be shifted as needed in the UI if needed.\n\nIf needed, this time is shifted using the value for the `--delta` switch. It is then used to extract a Lat / Lon position in the GPX file (which is essentially a mapping time => position).\n\n## Time zone\n\nThere is no standard time zone tag in EXIF. Some cameras will set the Offset Time Original tag to a time shift (something like \"+02:00\"), which, by default, is read by the tool in order to set a zone. If this tag is not present, the zone of the times in the images is assumed to be UTC. In that case, if the times in the images are actually in local time, the `--delta` switch must be used to compensate. The `--ignore-offset` switch can also be used to make the tool ignore the Offset Time Original tag even if present (for instance, if it is wrong).\n\nFor example, if the local time is in the \"Europe/Paris\" time zone aka GMT+1 during winter, it is equivalent to an Offset Time Original of \"+01:00\". This means that, if the time in the image is 11:15am in local time, it is 10:15am in UTC. If the Offset Time Original is not present (or is ignored), then the `--delta` switch must be set to `-1h` to compensate: The 11:15am found in the EXIF tag is considered to be in UTC but, actually, in UTC, it should be 10:15am so the delta must be *minus* 1 hour.\n\n# Options\n\nTo get some help about the arguments to the command, just launch with the --help option:\n\n```\nUsage: gpx2exif [OPTIONS] GPX_FILE IMAGE_FILE_OR_DIR\n\nOptions:\n  -d, --delta TEXT      Time shift to apply to the photo Date Time Original\n                        EXIF tag to match the date in GPX (see documentation\n                        for format). Use if there is a drift in the camera\n                        compared to the GPS recorder or if an offset is not\n                        present in the EXIF.\n\n  -t, --tolerance TEXT  Tolerance if time of photo is not inside the time\n                        range of the GPX track (default: 10s).\n\n  -o, --ignore-offset   Flag to indicate that the OffsetTimeOriginal should\n                        not be used (time of images is assumed UTC). Use\n                        --delta to compensate for both timezone and drift.\n\n  -d, --head            Flag to indicate if the tool should just output the\n                        times of the first 10 track points in the GPX and the\n                        DateTimeOriginal tag of the first 10 images (useful\n                        for setting the --delta).\n\n  --help                Show this message and exit.\n```\n\n# Examples\n\n### Basic usage\n\nThe following command will synch the location data found in the GPX file with a single image, moving forward the time in the image by 2 minutes and 25 seconds:\n\n```console\ngpx2exif geopaparazzi_20200315_183754.gpx dsc004239.jpg --delta 2m25s\n```\n\nAfter running this command, the photo will be updated with the location of the closest GPX track point.\n\n### Folder\n\nInstead of a single file, it is possible to pass a folder:\n\n```console\ngpx2exif geopaparazzi_20200315_183754.gpx photos --delta 2m25s\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gvellut/gpx2exif", "keywords": "gpx gps exif tag", "license": "", "maintainer": "", "maintainer_email": "", "name": "gpx2exif", "package_url": "https://pypi.org/project/gpx2exif/", "platform": "", "project_url": "https://pypi.org/project/gpx2exif/", "project_urls": {"Bug Reports": "https://github.com/gvellut/gpx2exif/issues", "Homepage": "https://github.com/gvellut/gpx2exif", "Source": "https://github.com/gvellut/gpx2exif"}, "release_url": "https://pypi.org/project/gpx2exif/0.3/", "requires_dist": ["click (==7.1.*)", "colorama (==0.4.3)", "termcolor (==1.1.0)", "piexif (==1.1.*)", "gpxpy (==1.4.*)", "pandas (==1.0.*)", "black ; extra == 'dev'", "flake8 ; extra == 'dev'", "twine ; extra == 'dev'", "pytest (==5.4.*) ; extra == 'dev'"], "requires_python": "", "summary": "Simple command-line tool to add GPS info from a GPX file to EXIF tags in images", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>gpx2exif</h1>\n<p>Simple command-line tool to add GPS info from a GPX file to EXIF tags in images</p>\n<h1>Motivation</h1>\n<p>I use Geopaparazzi on my Android phone to log GPS positions during a walk or hike. The app can export into GPX format, which gives the itinerary, as well as the times for my positions at a relatively high temporal resolution. This is useful for making maps or writing a guide after the fact. I also wanted to make it easier to know the location of the photos taken during the walk and have them show up on the Flickr map. Since my camera doesn't have any GPS logging equipment, I made this tool in order to add the GPS information to the photo EXIF tags based on the GPX tracking points.</p>\n<h1>Install</h1>\n<p>The tool requires Python 3.6+.</p>\n<p>To install, launch :</p>\n<pre><span class=\"go\">pip install gpx2exif</span>\n</pre>\n<p>The command above will install the <code>gpx2exif</code> Python library and its dependencies. The library includes a command-line script, also named <code>gpx2exif</code>, whose functionality is described below.</p>\n<h1>Time in images</h1>\n<h2>Time tag</h2>\n<p>The time used for the images is taken from the Date Time Original EXIF tag in the image. In Adobe Bridge, it can be shifted as needed in the UI if needed.</p>\n<p>If needed, this time is shifted using the value for the <code>--delta</code> switch. It is then used to extract a Lat / Lon position in the GPX file (which is essentially a mapping time =&gt; position).</p>\n<h2>Time zone</h2>\n<p>There is no standard time zone tag in EXIF. Some cameras will set the Offset Time Original tag to a time shift (something like \"+02:00\"), which, by default, is read by the tool in order to set a zone. If this tag is not present, the zone of the times in the images is assumed to be UTC. In that case, if the times in the images are actually in local time, the <code>--delta</code> switch must be used to compensate. The <code>--ignore-offset</code> switch can also be used to make the tool ignore the Offset Time Original tag even if present (for instance, if it is wrong).</p>\n<p>For example, if the local time is in the \"Europe/Paris\" time zone aka GMT+1 during winter, it is equivalent to an Offset Time Original of \"+01:00\". This means that, if the time in the image is 11:15am in local time, it is 10:15am in UTC. If the Offset Time Original is not present (or is ignored), then the <code>--delta</code> switch must be set to <code>-1h</code> to compensate: The 11:15am found in the EXIF tag is considered to be in UTC but, actually, in UTC, it should be 10:15am so the delta must be <em>minus</em> 1 hour.</p>\n<h1>Options</h1>\n<p>To get some help about the arguments to the command, just launch with the --help option:</p>\n<pre><code>Usage: gpx2exif [OPTIONS] GPX_FILE IMAGE_FILE_OR_DIR\n\nOptions:\n  -d, --delta TEXT      Time shift to apply to the photo Date Time Original\n                        EXIF tag to match the date in GPX (see documentation\n                        for format). Use if there is a drift in the camera\n                        compared to the GPS recorder or if an offset is not\n                        present in the EXIF.\n\n  -t, --tolerance TEXT  Tolerance if time of photo is not inside the time\n                        range of the GPX track (default: 10s).\n\n  -o, --ignore-offset   Flag to indicate that the OffsetTimeOriginal should\n                        not be used (time of images is assumed UTC). Use\n                        --delta to compensate for both timezone and drift.\n\n  -d, --head            Flag to indicate if the tool should just output the\n                        times of the first 10 track points in the GPX and the\n                        DateTimeOriginal tag of the first 10 images (useful\n                        for setting the --delta).\n\n  --help                Show this message and exit.\n</code></pre>\n<h1>Examples</h1>\n<h3>Basic usage</h3>\n<p>The following command will synch the location data found in the GPX file with a single image, moving forward the time in the image by 2 minutes and 25 seconds:</p>\n<pre><span class=\"go\">gpx2exif geopaparazzi_20200315_183754.gpx dsc004239.jpg --delta 2m25s</span>\n</pre>\n<p>After running this command, the photo will be updated with the location of the closest GPX track point.</p>\n<h3>Folder</h3>\n<p>Instead of a single file, it is possible to pass a folder:</p>\n<pre><span class=\"go\">gpx2exif geopaparazzi_20200315_183754.gpx photos --delta 2m25s</span>\n</pre>\n\n          </div>"}, "last_serial": 6828545, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4c8687926b0d9d63f81bf193b9e74748", "sha256": "45a31557b298188a213744a1160ac3c20b6f2e4a1cce0c863a05804ef1bf27c0"}, "downloads": -1, "filename": "gpx2exif-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4c8687926b0d9d63f81bf193b9e74748", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20073, "upload_time": "2020-03-17T13:12:37", "upload_time_iso_8601": "2020-03-17T13:12:37.040884Z", "url": "https://files.pythonhosted.org/packages/5c/57/79084d99564ca5b841171535128479ecd6bde02177d4f1c073838afecea4/gpx2exif-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e2551af1238e7acc4339f3032dd326e", "sha256": "c4d940fc82f8a79df71fb45e7e211602bf254776e9e849eb2c05f176ee1be052"}, "downloads": -1, "filename": "gpx2exif-0.1.tar.gz", "has_sig": false, "md5_digest": "7e2551af1238e7acc4339f3032dd326e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8393, "upload_time": "2020-03-17T13:12:39", "upload_time_iso_8601": "2020-03-17T13:12:39.434076Z", "url": "https://files.pythonhosted.org/packages/7d/89/86d5dd23bca9f38579ce18378bc26fefd42487a9b1945d96e1a5f90439c0/gpx2exif-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "3036334a5349afede2241997cfcfa82f", "sha256": "222ff05c9f0800ddd1774036e65e42a4fcbab6b15b441d14f2ff45dee4d29a23"}, "downloads": -1, "filename": "gpx2exif-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3036334a5349afede2241997cfcfa82f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20077, "upload_time": "2020-03-17T13:18:30", "upload_time_iso_8601": "2020-03-17T13:18:30.198725Z", "url": "https://files.pythonhosted.org/packages/33/96/a1d959b0df2046da40588da2dba7b2c62565caee0313edc48d01f3885862/gpx2exif-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e353c362dff0599060cb95c8b0679be", "sha256": "986b40912d093a578a68c6bd4b61b8f4b1417def020628bddaaf5f87b6521d88"}, "downloads": -1, "filename": "gpx2exif-0.2.tar.gz", "has_sig": false, "md5_digest": "3e353c362dff0599060cb95c8b0679be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8403, "upload_time": "2020-03-17T13:18:31", "upload_time_iso_8601": "2020-03-17T13:18:31.391480Z", "url": "https://files.pythonhosted.org/packages/6b/f0/e7cc8fca7364271e2edfd9436087eb47ca79db9171170a08829f84efd88e/gpx2exif-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "5de556070305fdaa39789cf440359246", "sha256": "66b92f1568cb29f37df010583434c1623c1820c3e283787860f3e8f44b238af4"}, "downloads": -1, "filename": "gpx2exif-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5de556070305fdaa39789cf440359246", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20153, "upload_time": "2020-03-17T13:20:33", "upload_time_iso_8601": "2020-03-17T13:20:33.391914Z", "url": "https://files.pythonhosted.org/packages/62/a1/e664c5792468306b81e148fe5d61509cfaaaf51aaf2f6ec1f87d7be02a9b/gpx2exif-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "361ce94f21d909a0bace9f49aa4152b3", "sha256": "33925028f89959c714ea4aa5d03d1f01b50a8d7421d119dd879b06d0adcb9514"}, "downloads": -1, "filename": "gpx2exif-0.3.tar.gz", "has_sig": false, "md5_digest": "361ce94f21d909a0bace9f49aa4152b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8464, "upload_time": "2020-03-17T13:20:34", "upload_time_iso_8601": "2020-03-17T13:20:34.870785Z", "url": "https://files.pythonhosted.org/packages/c8/98/026f6d22e0807aec32bc67704c1b946e57de774c0b40b526551bcdb9a909/gpx2exif-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5de556070305fdaa39789cf440359246", "sha256": "66b92f1568cb29f37df010583434c1623c1820c3e283787860f3e8f44b238af4"}, "downloads": -1, "filename": "gpx2exif-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5de556070305fdaa39789cf440359246", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20153, "upload_time": "2020-03-17T13:20:33", "upload_time_iso_8601": "2020-03-17T13:20:33.391914Z", "url": "https://files.pythonhosted.org/packages/62/a1/e664c5792468306b81e148fe5d61509cfaaaf51aaf2f6ec1f87d7be02a9b/gpx2exif-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "361ce94f21d909a0bace9f49aa4152b3", "sha256": "33925028f89959c714ea4aa5d03d1f01b50a8d7421d119dd879b06d0adcb9514"}, "downloads": -1, "filename": "gpx2exif-0.3.tar.gz", "has_sig": false, "md5_digest": "361ce94f21d909a0bace9f49aa4152b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8464, "upload_time": "2020-03-17T13:20:34", "upload_time_iso_8601": "2020-03-17T13:20:34.870785Z", "url": "https://files.pythonhosted.org/packages/c8/98/026f6d22e0807aec32bc67704c1b946e57de774c0b40b526551bcdb9a909/gpx2exif-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:06 2020"}