{"info": {"author": "Kole Cralley", "author_email": "jkolecr@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3"], "description": "#Description\nTLTK is a tool for computing Metric Temporal logic robustness. This is done by specifing \npredicates in the form Ax <= b and using those in MTL formulas. \n\n# Getting Started\n\n## Building TLTk\n\nTLTK can be built from source or run through a Docker container. Running through a Docker container is straighforward since the environment and the dependencies are automatically installed. \n\nIn the following, we provide instructions for both alternatives.\n\n### Running through Docker (Windows or Linux)\n\nInstructions to run the tool using Docker. \n\n* Install Docker https://docs.docker.com/get-docker/ .\n* In terminal or command proment, enter the following command to pull the TLTk docker image\n``` Bash\ndocker pull bardhh/tltk\n```\n* Once the docker image is pulled, a container may be intialized, in interactive mode, with the command:\n``` Bash\ndocker run -it --name tltk_cont bardhh/tltk bash \n```\n* Alternatively, to execute a script without entering the container:\n``` Bash\ndocker exec -it tltk_cont bash -c 'cd demos && python phi_1.py' \n```\n\n*Other useful commands*\n\n* To copy a file to the container: \n``` Bash\ndocker cp source_file tltk_cont:/usr/src/tltk/destination_file\n```\n\nIf you have completed these steps, continue to the next section. \n### Pip install (Linux Only)\n\nTo install tltk with pip3 the command below can be ran in Bash\n```Bash\npip3 install --user tltk_mtl\n```\n\nIf pip3 is not installed the command below will install it on Ubuntu\n```Bash\nsudo apt install python3-pip\n``` \n\n### Building from Source (Linux Only)\n\n\n#### Downloading TLTk\n\nTLTk is currenlty hosted on bitbucket and is downloaded with the git clone command \n\n```Bash\ngit clone ~~~~~~~~~~~~~~~~~~~~~~~~~\n```\n#### Dependencies for robustness calculation\nThe following section describes how to install TLTk manually. There is a script that will do it automatically; skip to the bottom of the section for instructions on how to use the script\n##### Operating System\nTLTk is tested on Ubuntu linux. It can be installed on any linux distribution, but it is untested. This guide will be focused installing on the Ubuntu distribution of linux. \n\n##### Installing Git\nGit is needed to download TLTk source. If you do not have git, it can be downloaded with the command:\n```Bash\nsudo apt install git \n```\n\n##### CPU Compiler\n\nTLTk has been tested with the gcc compiler. If gcc is not on your system, it can be installed with:\n```Bash\nsudo apt install gcc\n```\n\n##### Installing python3\n```Bash\nsudo apt install python3\n```\n##### GPU Compiler\n\n!!! warning \n    Not required unless you are using a GPU\n    \n    \nTo compile the gpu code you need the NVCC compiler. This compiler can be found:\n[Here](https://developer.nvidia.com/cuda-downloads)\n\n\n##### Installing python packages\nWe need to install the needed python repositories. To do this we will use pip3, which we installed in the previous step.\nThe libraries that TLTk need are numpy, scipy, and cython. \nTo install these, you can run the following command:\n```Bash\npip3 install --user numpy scipy cython\n```\n\n##### Installing MATLAB for SimuLink model simulations\n\n!!! warning\n    Only needed if planing on using TLTk with simulink\n    \nDetailed steps can be found [here](https://www.scivision.dev/matlab-engine-callable-from-python-how-to-install-and-setup/)\n\nThe following two commands need to be executed (depending on the MATLAB version and directory structure) for Linux using python3:\n```Bash\ncd /usr/local/matlab/extern/engines/python/ \npython3 setup.py build --build-base=$(mktemp -d) install\n```\n\n##### Install script\nThere is a script that installs all the needed packages. At the start of the script it runs an apt update and upgrade.\nThe script can be found at\n```Bash\ntltk/robustness/install.sh\n```\n\n#### Compiling TLTk\nOnce all the dependencies are installed, TLTk needs to be compiled. To do this, there is a Make file in \n```Bash\ntltk/robustness/make\n```\nThis make file uses GNU make, which can be installed with\n```Bash\nsudo apt install make\n```\nTo make the gpu code, the make file can be ran like this\n```Bash\nmake gpu\n```\n\n\n## Running Your First Script\n### Docker\n\n### Source\n#### Adding TLTk to path\nIf you built TLTk by source, python needs to know where to look to find TLTk. One method is to add the directory to path at run time by using the python sys libary. For example\n```Python\nimport sys\nsys.path.insert(1,\u2019(path from working directory)/pytaliro/robustness\u2019)\nimport MTL\n```\nIt can also be added to the python path at the startup of a bash instance by adding the following line to your .bashrc and restarting the bash instance.\n\n```Bash\nexport PYTHONPATH=(path from root)/tltk/robustness:$PYTHONPATH\n```\n\nBelow is a simple test script to check your setup of TLTk\n\n```Python\n#import sys #uncomment if not using export statment for bash\n#sys.path.insert(1, 'robustness') #uncomment if not using export for bash\n#import MTL as MTL #Uncomment if .bashrc was eddited\nimport tltk_mtl as MTL #This is used if pip3 install was used\nimport numpy as np\n#predicate definition\npredicate = MTL.Predicate('example data',1,1)\n\n#signal and time stamps\nsignal = {'example data':np.array([95,96,97,96,95],dtype=np.float32)}\ntime_stamps = np.array([0,.5,.7,.8,1],dtype=np.float32)\n\n#calculate predicate and print results \nprint(predicate.eval_interval(signal,time_stamps))\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tltk-mtl", "package_url": "https://pypi.org/project/tltk-mtl/", "platform": "", "project_url": "https://pypi.org/project/tltk-mtl/", "project_urls": null, "release_url": "https://pypi.org/project/tltk-mtl/0.0.4/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A libary for effecient Metric temporal logic calculation", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>#Description\nTLTK is a tool for computing Metric Temporal logic robustness. This is done by specifing\npredicates in the form Ax &lt;= b and using those in MTL formulas.</p>\n<h1>Getting Started</h1>\n<h2>Building TLTk</h2>\n<p>TLTK can be built from source or run through a Docker container. Running through a Docker container is straighforward since the environment and the dependencies are automatically installed.</p>\n<p>In the following, we provide instructions for both alternatives.</p>\n<h3>Running through Docker (Windows or Linux)</h3>\n<p>Instructions to run the tool using Docker.</p>\n<ul>\n<li>Install Docker <a href=\"https://docs.docker.com/get-docker/\" rel=\"nofollow\">https://docs.docker.com/get-docker/</a> .</li>\n<li>In terminal or command proment, enter the following command to pull the TLTk docker image</li>\n</ul>\n<pre>docker pull bardhh/tltk\n</pre>\n<ul>\n<li>Once the docker image is pulled, a container may be intialized, in interactive mode, with the command:</li>\n</ul>\n<pre>docker run -it --name tltk_cont bardhh/tltk bash \n</pre>\n<ul>\n<li>Alternatively, to execute a script without entering the container:</li>\n</ul>\n<pre>docker <span class=\"nb\">exec</span> -it tltk_cont bash -c <span class=\"s1\">'cd demos &amp;&amp; python phi_1.py'</span> \n</pre>\n<p><em>Other useful commands</em></p>\n<ul>\n<li>To copy a file to the container:</li>\n</ul>\n<pre>docker cp source_file tltk_cont:/usr/src/tltk/destination_file\n</pre>\n<p>If you have completed these steps, continue to the next section.</p>\n<h3>Pip install (Linux Only)</h3>\n<p>To install tltk with pip3 the command below can be ran in Bash</p>\n<pre>pip3 install --user tltk_mtl\n</pre>\n<p>If pip3 is not installed the command below will install it on Ubuntu</p>\n<pre>sudo apt install python3-pip\n</pre>\n<h3>Building from Source (Linux Only)</h3>\n<h4>Downloading TLTk</h4>\n<p>TLTk is currenlty hosted on bitbucket and is downloaded with the git clone command</p>\n<pre>git clone ~~~~~~~~~~~~~~~~~~~~~~~~~\n</pre>\n<h4>Dependencies for robustness calculation</h4>\n<p>The following section describes how to install TLTk manually. There is a script that will do it automatically; skip to the bottom of the section for instructions on how to use the script</p>\n<h5>Operating System</h5>\n<p>TLTk is tested on Ubuntu linux. It can be installed on any linux distribution, but it is untested. This guide will be focused installing on the Ubuntu distribution of linux.</p>\n<h5>Installing Git</h5>\n<p>Git is needed to download TLTk source. If you do not have git, it can be downloaded with the command:</p>\n<pre>sudo apt install git \n</pre>\n<h5>CPU Compiler</h5>\n<p>TLTk has been tested with the gcc compiler. If gcc is not on your system, it can be installed with:</p>\n<pre>sudo apt install gcc\n</pre>\n<h5>Installing python3</h5>\n<pre>sudo apt install python3\n</pre>\n<h5>GPU Compiler</h5>\n<p>!!! warning\nNot required unless you are using a GPU</p>\n<p>To compile the gpu code you need the NVCC compiler. This compiler can be found:\n<a href=\"https://developer.nvidia.com/cuda-downloads\" rel=\"nofollow\">Here</a></p>\n<h5>Installing python packages</h5>\n<p>We need to install the needed python repositories. To do this we will use pip3, which we installed in the previous step.\nThe libraries that TLTk need are numpy, scipy, and cython.\nTo install these, you can run the following command:</p>\n<pre>pip3 install --user numpy scipy cython\n</pre>\n<h5>Installing MATLAB for SimuLink model simulations</h5>\n<p>!!! warning\nOnly needed if planing on using TLTk with simulink</p>\n<p>Detailed steps can be found <a href=\"https://www.scivision.dev/matlab-engine-callable-from-python-how-to-install-and-setup/\" rel=\"nofollow\">here</a></p>\n<p>The following two commands need to be executed (depending on the MATLAB version and directory structure) for Linux using python3:</p>\n<pre><span class=\"nb\">cd</span> /usr/local/matlab/extern/engines/python/ \npython3 setup.py build --build-base<span class=\"o\">=</span><span class=\"k\">$(</span>mktemp -d<span class=\"k\">)</span> install\n</pre>\n<h5>Install script</h5>\n<p>There is a script that installs all the needed packages. At the start of the script it runs an apt update and upgrade.\nThe script can be found at</p>\n<pre>tltk/robustness/install.sh\n</pre>\n<h4>Compiling TLTk</h4>\n<p>Once all the dependencies are installed, TLTk needs to be compiled. To do this, there is a Make file in</p>\n<pre>tltk/robustness/make\n</pre>\n<p>This make file uses GNU make, which can be installed with</p>\n<pre>sudo apt install make\n</pre>\n<p>To make the gpu code, the make file can be ran like this</p>\n<pre>make gpu\n</pre>\n<h2>Running Your First Script</h2>\n<h3>Docker</h3>\n<h3>Source</h3>\n<h4>Adding TLTk to path</h4>\n<p>If you built TLTk by source, python needs to know where to look to find TLTk. One method is to add the directory to path at run time by using the python sys libary. For example</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"err\">\u2019</span><span class=\"p\">(</span><span class=\"n\">path</span> <span class=\"kn\">from</span> <span class=\"nn\">working</span> <span class=\"n\">directory</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"n\">pytaliro</span><span class=\"o\">/</span><span class=\"n\">robustness</span><span class=\"err\">\u2019</span><span class=\"p\">)</span>\n<span class=\"kn\">import</span> <span class=\"nn\">MTL</span>\n</pre>\n<p>It can also be added to the python path at the startup of a bash instance by adding the following line to your .bashrc and restarting the bash instance.</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">PYTHONPATH</span><span class=\"o\">=(</span>path from root<span class=\"o\">)</span>/tltk/robustness:<span class=\"nv\">$PYTHONPATH</span>\n</pre>\n<p>Below is a simple test script to check your setup of TLTk</p>\n<pre><span class=\"c1\">#import sys #uncomment if not using export statment for bash</span>\n<span class=\"c1\">#sys.path.insert(1, 'robustness') #uncomment if not using export for bash</span>\n<span class=\"c1\">#import MTL as MTL #Uncomment if .bashrc was eddited</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tltk_mtl</span> <span class=\"k\">as</span> <span class=\"nn\">MTL</span> <span class=\"c1\">#This is used if pip3 install was used</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"c1\">#predicate definition</span>\n<span class=\"n\">predicate</span> <span class=\"o\">=</span> <span class=\"n\">MTL</span><span class=\"o\">.</span><span class=\"n\">Predicate</span><span class=\"p\">(</span><span class=\"s1\">'example data'</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#signal and time stamps</span>\n<span class=\"n\">signal</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'example data'</span><span class=\"p\">:</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">95</span><span class=\"p\">,</span><span class=\"mi\">96</span><span class=\"p\">,</span><span class=\"mi\">97</span><span class=\"p\">,</span><span class=\"mi\">96</span><span class=\"p\">,</span><span class=\"mi\">95</span><span class=\"p\">],</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)}</span>\n<span class=\"n\">time_stamps</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"o\">.</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"o\">.</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#calculate predicate and print results </span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">predicate</span><span class=\"o\">.</span><span class=\"n\">eval_interval</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"p\">,</span><span class=\"n\">time_stamps</span><span class=\"p\">))</span>\n</pre>\n\n          </div>"}, "last_serial": 7148407, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "73921f4b39cdfa204ed78ed9ac34773f", "sha256": "a5548007dd3e3b3f047c4fc5f493d4a20a18130be3d0226d8090272b5483f95f"}, "downloads": -1, "filename": "tltk_mtl-0.0.1.tar.gz", "has_sig": false, "md5_digest": "73921f4b39cdfa204ed78ed9ac34773f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 186791, "upload_time": "2020-04-30T00:17:32", "upload_time_iso_8601": "2020-04-30T00:17:32.440530Z", "url": "https://files.pythonhosted.org/packages/f4/99/1aed3ac6aeaf3bf19f46be1e045c9df5f11a160e58122b9409a1bd461fe1/tltk_mtl-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2553224edef0f2b4801db450357cf850", "sha256": "ad528f5142f9d8f4982212fff52576808428cc463a68c7547634092dae2dd43a"}, "downloads": -1, "filename": "tltk_mtl-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2553224edef0f2b4801db450357cf850", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 187853, "upload_time": "2020-04-30T02:57:39", "upload_time_iso_8601": "2020-04-30T02:57:39.086613Z", "url": "https://files.pythonhosted.org/packages/da/c7/d2e2e2563521805815e446a0d6fe475b3b3e7c6c47e0a43fa9aed72a4b9c/tltk_mtl-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e8596c4ac344d3cf5f3442114171ad21", "sha256": "a86524d972cc75f6fc7f184a4afe60837aef25b25cecf5ee32644fab20dbfb53"}, "downloads": -1, "filename": "tltk_mtl-0.0.3.tar.gz", "has_sig": false, "md5_digest": "e8596c4ac344d3cf5f3442114171ad21", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 188639, "upload_time": "2020-04-30T03:32:09", "upload_time_iso_8601": "2020-04-30T03:32:09.801704Z", "url": "https://files.pythonhosted.org/packages/6e/8a/753ef30a1733c8cf2e31cf1077875a90df649f50fded658339c3d26ff8f0/tltk_mtl-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "07cdc9bbba780a56f47eb473e178b422", "sha256": "4b6c707de48bac263fb4eed195e89bfe4e3f4fcc4b98329bb9285cc4eb38bfb9"}, "downloads": -1, "filename": "tltk_mtl-0.0.4.tar.gz", "has_sig": false, "md5_digest": "07cdc9bbba780a56f47eb473e178b422", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 193183, "upload_time": "2020-05-01T21:38:56", "upload_time_iso_8601": "2020-05-01T21:38:56.215669Z", "url": "https://files.pythonhosted.org/packages/10/8f/622321d04604732d9f087f2a4f54ee54d9f94c74c4f4abc36e3f6c9d608a/tltk_mtl-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "07cdc9bbba780a56f47eb473e178b422", "sha256": "4b6c707de48bac263fb4eed195e89bfe4e3f4fcc4b98329bb9285cc4eb38bfb9"}, "downloads": -1, "filename": "tltk_mtl-0.0.4.tar.gz", "has_sig": false, "md5_digest": "07cdc9bbba780a56f47eb473e178b422", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 193183, "upload_time": "2020-05-01T21:38:56", "upload_time_iso_8601": "2020-05-01T21:38:56.215669Z", "url": "https://files.pythonhosted.org/packages/10/8f/622321d04604732d9f087f2a4f54ee54d9f94c74c4f4abc36e3f6c9d608a/tltk_mtl-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:52:16 2020"}