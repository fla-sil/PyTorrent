{"info": {"author": "Benjamin M. Gyori", "author_email": "benjamin_gyori@hms.harvard.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "PyKQML\n======\n\nPyKQML is an implementation of KQML messaging in Python.\n\nInstallation\n============\n\nPyKQML can be installed as\n\n::\n\n    pip install pykqml\n\nNote that releases of PyKQML up to 0.5 work in Python 2 only, whereas\nreleases above and including 1.0 work in Python 3 only.\n\nTo install for Python 2, use:\n\n::\n\n    pip install pykqml==0.5\n\nTo install for Python 3 (or force an upgrade to a compatible version),\nuse\n\n::\n\n    pip install \"pykqml>0.5\"\n\nUsage\n=====\n\nPyKQML implements the following KQML classes, which allow constructing\nand manipulating KQML messages programmatically:\n\n::\n\n    KQMLToken\n    KQMLString\n    KQMLQuotation\n    KQMLList\n    KQMLPerformative\n    KQMLReader\n    KQMLDispatcher\n    KQMLModule\n\nYou can import KQML classes as, for instance,\n\n.. code:: python\n\n    from kqml import KQMLList\n\nYou can create a new KQML messaging agent in the context of the TRIPS\nsystem as\n\n.. code:: python\n\n    from kqml import KQMLModule\n\n    class MyAgent(KQMLModule):\n        name = \"MyAgent\" # This is the name of the agent to register with\n\n        def __init__(self, **kwargs):\n            # Call the parent class' constructor which sends a registration\n            # message, setting the agent's name to be recognized by the\n            # Facilitator.\n            super(MyAgent, self).__init__(name=self.name, **kwargs)\n\n            # Subscribe to REQUESTs of interest. The list will change\n            # depending on the role of the agent\n            for req in ('what-next', 'commit', 'evaluate'):\n                self.subscribe_request(req)\n\n            # Subscribe to TELLs of interest if needed. This list will change\n            # depending on the role of the agent\n            for tell in ('log-speechact', ):\n                self.subscribe_tell(tell)\n\n            # Now signal that the agent is ready to receive messages\n            self.ready()\n\n            # Finally, start the listener for incoming messages\n            self.start()\n\n\n        def receive_request(self, msg, content):\n            # First, figure out what kind of request this is\n            task = content.head().upper()\n            # Here you typically decide what to do based on the\n            # type of request.\n\n            # Construct reply message's content\n            reply_content = KQMLList()\n            # Set whatever needs to be set in the reply content\n\n            # Finally, wrap the content in a message and reply\n            reply_msg = KQMLPerformative('reply')\n            reply_msg.set('content', reply_content)\n            self.reply(msg, reply_msg)\n\nTesting\n=======\n\nYou can run all tests by running `nosetests` in the top level folder.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/bgyori/pykqml", "keywords": "kqml,agent,nlp,communication,dialogue", "license": "", "maintainer": "", "maintainer_email": "", "name": "pykqml", "package_url": "https://pypi.org/project/pykqml/", "platform": "", "project_url": "https://pypi.org/project/pykqml/", "project_urls": {"Homepage": "http://github.com/bgyori/pykqml"}, "release_url": "https://pypi.org/project/pykqml/1.2/", "requires_dist": null, "requires_python": "", "summary": "KQML messaging classes in Python.", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pykqml\">\n<h2>PyKQML</h2>\n<p>PyKQML is an implementation of KQML messaging in Python.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>PyKQML can be installed as</p>\n<pre>pip install pykqml\n</pre>\n<p>Note that releases of PyKQML up to 0.5 work in Python 2 only, whereas\nreleases above and including 1.0 work in Python 3 only.</p>\n<p>To install for Python 2, use:</p>\n<pre>pip install pykqml==0.5\n</pre>\n<p>To install for Python 3 (or force an upgrade to a compatible version),\nuse</p>\n<pre>pip install \"pykqml&gt;0.5\"\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>PyKQML implements the following KQML classes, which allow constructing\nand manipulating KQML messages programmatically:</p>\n<pre>KQMLToken\nKQMLString\nKQMLQuotation\nKQMLList\nKQMLPerformative\nKQMLReader\nKQMLDispatcher\nKQMLModule\n</pre>\n<p>You can import KQML classes as, for instance,</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">kqml</span> <span class=\"kn\">import</span> <span class=\"n\">KQMLList</span>\n</pre>\n<p>You can create a new KQML messaging agent in the context of the TRIPS\nsystem as</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">kqml</span> <span class=\"kn\">import</span> <span class=\"n\">KQMLModule</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAgent</span><span class=\"p\">(</span><span class=\"n\">KQMLModule</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"MyAgent\"</span> <span class=\"c1\"># This is the name of the agent to register with</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Call the parent class' constructor which sends a registration</span>\n        <span class=\"c1\"># message, setting the agent's name to be recognized by the</span>\n        <span class=\"c1\"># Facilitator.</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">MyAgent</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Subscribe to REQUESTs of interest. The list will change</span>\n        <span class=\"c1\"># depending on the role of the agent</span>\n        <span class=\"k\">for</span> <span class=\"n\">req</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s1\">'what-next'</span><span class=\"p\">,</span> <span class=\"s1\">'commit'</span><span class=\"p\">,</span> <span class=\"s1\">'evaluate'</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">subscribe_request</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Subscribe to TELLs of interest if needed. This list will change</span>\n        <span class=\"c1\"># depending on the role of the agent</span>\n        <span class=\"k\">for</span> <span class=\"n\">tell</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s1\">'log-speechact'</span><span class=\"p\">,</span> <span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">subscribe_tell</span><span class=\"p\">(</span><span class=\"n\">tell</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Now signal that the agent is ready to receive messages</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ready</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># Finally, start the listener for incoming messages</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">receive_request</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"p\">):</span>\n        <span class=\"c1\"># First, figure out what kind of request this is</span>\n        <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n        <span class=\"c1\"># Here you typically decide what to do based on the</span>\n        <span class=\"c1\"># type of request.</span>\n\n        <span class=\"c1\"># Construct reply message's content</span>\n        <span class=\"n\">reply_content</span> <span class=\"o\">=</span> <span class=\"n\">KQMLList</span><span class=\"p\">()</span>\n        <span class=\"c1\"># Set whatever needs to be set in the reply content</span>\n\n        <span class=\"c1\"># Finally, wrap the content in a message and reply</span>\n        <span class=\"n\">reply_msg</span> <span class=\"o\">=</span> <span class=\"n\">KQMLPerformative</span><span class=\"p\">(</span><span class=\"s1\">'reply'</span><span class=\"p\">)</span>\n        <span class=\"n\">reply_msg</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'content'</span><span class=\"p\">,</span> <span class=\"n\">reply_content</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reply</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">reply_msg</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>You can run all tests by running <cite>nosetests</cite> in the top level folder.</p>\n</div>\n\n          </div>"}, "last_serial": 6514714, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "77977fa9c9d153875b41e2393079c4f6", "sha256": "83a30b2b794cc9734832d71c8207faf9f5d02c8f992c6fe363355799cfc5523b"}, "downloads": -1, "filename": "pykqml-0.1.tar.gz", "has_sig": false, "md5_digest": "77977fa9c9d153875b41e2393079c4f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7289, "upload_time": "2016-12-07T22:41:14", "upload_time_iso_8601": "2016-12-07T22:41:14.276661Z", "url": "https://files.pythonhosted.org/packages/05/23/5e72bab74116d7f03efc4cc48efc6baf9cc5385efc0c5f3d04dbf12aa396/pykqml-0.1.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "0a2482e75460759a1fe62dfc50dd90b8", "sha256": "d0f7774daccb8710d91355ac483a4f9ae22783b764b3bb1d5b92a7216ac283ce"}, "downloads": -1, "filename": "pykqml-0.4.tar.gz", "has_sig": false, "md5_digest": "0a2482e75460759a1fe62dfc50dd90b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8980, "upload_time": "2017-09-17T06:16:45", "upload_time_iso_8601": "2017-09-17T06:16:45.352548Z", "url": "https://files.pythonhosted.org/packages/46/8a/6821dda8d1f73f37f556b815d59253b52c3daeb30384e3d85eae06d4a4c5/pykqml-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "1f41a561a91bcc05d4d54d3debbdbbef", "sha256": "8153024518c8cb38153eeccfbcb3c300b4096c34fe9316e890dfa440ae8c8eff"}, "downloads": -1, "filename": "pykqml-0.5.tar.gz", "has_sig": false, "md5_digest": "1f41a561a91bcc05d4d54d3debbdbbef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9431, "upload_time": "2018-02-13T15:13:18", "upload_time_iso_8601": "2018-02-13T15:13:18.706639Z", "url": "https://files.pythonhosted.org/packages/6b/b3/513119a9c40911132cd6f517975a69b54e23ebe1274298fc561384c3cb77/pykqml-0.5.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "d0fa5a169b1569df788a181e7ce90ddb", "sha256": "e25625163446b866e5ffa4e16aa6368b964b8aa501f8b2548e14649206e00069"}, "downloads": -1, "filename": "pykqml-1.0.tar.gz", "has_sig": false, "md5_digest": "d0fa5a169b1569df788a181e7ce90ddb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10088, "upload_time": "2018-02-21T04:24:15", "upload_time_iso_8601": "2018-02-21T04:24:15.741493Z", "url": "https://files.pythonhosted.org/packages/4f/f8/b4f1d83dc270de58272c554dda92e515c152195e27ce924689278ec82f15/pykqml-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "b4403481a67ec7f1b6741b374950b605", "sha256": "6f7c1b241fd36d249c3a7d5ddbe0f2c0e54f1769ae9ff55892e7800ecf69a5c6"}, "downloads": -1, "filename": "pykqml-1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b4403481a67ec7f1b6741b374950b605", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15071, "upload_time": "2019-03-20T06:09:09", "upload_time_iso_8601": "2019-03-20T06:09:09.764403Z", "url": "https://files.pythonhosted.org/packages/b2/bd/6e1788cf8043ef921d6be7fbcc1db4f867fcfb0dcb020e47a02522623d58/pykqml-1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64222abf974fe3f336e9c05c3c064412", "sha256": "3df542f3ee6e43c261a5161d3016d1aef3367f98d5e6031e26591c841bd379d3"}, "downloads": -1, "filename": "pykqml-1.1.tar.gz", "has_sig": false, "md5_digest": "64222abf974fe3f336e9c05c3c064412", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12337, "upload_time": "2019-03-20T06:09:11", "upload_time_iso_8601": "2019-03-20T06:09:11.391807Z", "url": "https://files.pythonhosted.org/packages/c1/77/e17d52182b5208f33d9538217733779bea81b23436d5965f1aba9b0e2481/pykqml-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "2a203926411924616942352bbb23f9de", "sha256": "b0779f9bdf73e8e21291cbd66eab3d15ce62796c8b40cc54b8ea8ffff9850db5"}, "downloads": -1, "filename": "pykqml-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2a203926411924616942352bbb23f9de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15478, "upload_time": "2020-01-24T16:41:06", "upload_time_iso_8601": "2020-01-24T16:41:06.815276Z", "url": "https://files.pythonhosted.org/packages/fa/c7/64a4751e2f3520c5ce29ddd0965aff7e761f427a3e143d379ec30a1d5a9c/pykqml-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "670f7b6f4a4133d567224a632f1e4e10", "sha256": "1e80e36d80b51f5e7dfe7baa4cce8c7d98dbf9a91d3595a02e4ca7b28d95c4e5"}, "downloads": -1, "filename": "pykqml-1.2.tar.gz", "has_sig": false, "md5_digest": "670f7b6f4a4133d567224a632f1e4e10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15297, "upload_time": "2020-01-24T16:41:08", "upload_time_iso_8601": "2020-01-24T16:41:08.058167Z", "url": "https://files.pythonhosted.org/packages/82/84/5b500c127cac76a5729851e7bdc24335a1ba199eeb560f688baabf18a602/pykqml-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2a203926411924616942352bbb23f9de", "sha256": "b0779f9bdf73e8e21291cbd66eab3d15ce62796c8b40cc54b8ea8ffff9850db5"}, "downloads": -1, "filename": "pykqml-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2a203926411924616942352bbb23f9de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15478, "upload_time": "2020-01-24T16:41:06", "upload_time_iso_8601": "2020-01-24T16:41:06.815276Z", "url": "https://files.pythonhosted.org/packages/fa/c7/64a4751e2f3520c5ce29ddd0965aff7e761f427a3e143d379ec30a1d5a9c/pykqml-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "670f7b6f4a4133d567224a632f1e4e10", "sha256": "1e80e36d80b51f5e7dfe7baa4cce8c7d98dbf9a91d3595a02e4ca7b28d95c4e5"}, "downloads": -1, "filename": "pykqml-1.2.tar.gz", "has_sig": false, "md5_digest": "670f7b6f4a4133d567224a632f1e4e10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15297, "upload_time": "2020-01-24T16:41:08", "upload_time_iso_8601": "2020-01-24T16:41:08.058167Z", "url": "https://files.pythonhosted.org/packages/82/84/5b500c127cac76a5729851e7bdc24335a1ba199eeb560f688baabf18a602/pykqml-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:28 2020"}