{"info": {"author": "Brian Rotich", "author_email": "opensource@brianrotich.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries"], "description": "## Summary\n- allows for the logging of the exception happening in the flask-graphql framework.\n- this hooks into the graphql error handler and logs the original error, along with its stacktrace\n\n- this allows one to see the data for an error like\n```graphql\n{\n  \"errors\": [\n    {\n      \"message\": \"sdsd\",\n      \"locations\": [\n        {\n          \"line\": 2,\n          \"column\": 3\n        }\n      ],\n      \"path\": [\n        \"users\"\n      ]\n    }\n  ],\n  \"data\": {\n    \"users\": null\n  }\n}\n```\n\nas\n```pythontb\n2020-04-06 00:02:43,217 - LIA-logger:30 - ERROR - error in resolvers\nTraceback (most recent call last):\n  File \"/Users/brianrotich/.pyenv/versions/3.6.10/envs/test-app/lib/python3.6/site-packages/graphql/execution/executor.py\", line 452, in resolve_or_error\n    return executor.execute(resolve_fn, source, info, **args)\n  File \"/Users/brianrotich/.pyenv/versions/3.6.10/envs/test-app/lib/python3.6/site-packages/graphql/execution/executors/sync.py\", line 16, in execute\n    return fn(*args, **kwargs)\n  File \"/Users/brianrotich/.pyenv/versions/3.6.10/envs/test-app/lib/python3.6/site-packages/graphene/relay/connection.py\", line 161, in connection_resolver\n    resolved = resolver(root, info, **args)\n  File \"/Users/brianrotich/codes/app/test-app/__init__.py\", line 187, in resolve_users\n    raise ValueError('sdsd')\nValueError: sdsd\n```\n\n## Usage\na. using an existing logger in the `app.py`\n```python\nimport logging\n\nimport graphql_error_logger\n\ndef create_app():\n    # logger initialization and configuration\n    logger= logging.getLogger(__name__)\n    graphql_error_logger.init_logger(logger)\n```\n\nb. if no logger is provided, the library creates a logger called `graphql-error-logger` automatically\n\n```python\n\nimport graphql_error_logger\n\ndef create_app():\n    graphql_error_logger.init_logger()\n```\n\n- this logger is configured to use the `ERROR` log level to log the exception stacktrace\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brotich/graphql_error_logger", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "graphql-error-logger", "package_url": "https://pypi.org/project/graphql-error-logger/", "platform": "", "project_url": "https://pypi.org/project/graphql-error-logger/", "project_urls": {"Homepage": "https://github.com/brotich/graphql_error_logger"}, "release_url": "https://pypi.org/project/graphql-error-logger/0.0.3/", "requires_dist": ["flask-graphql (>=2.0.0)"], "requires_python": ">=3.6", "summary": "Log expection from the GraphQL python server", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Summary</h2>\n<ul>\n<li>\n<p>allows for the logging of the exception happening in the flask-graphql framework.</p>\n</li>\n<li>\n<p>this hooks into the graphql error handler and logs the original error, along with its stacktrace</p>\n</li>\n<li>\n<p>this allows one to see the data for an error like</p>\n</li>\n</ul>\n<pre>{\n  \"errors\": [\n    {\n      \"message\": \"sdsd\",\n      \"locations\": [\n        {\n          \"line\": 2,\n          \"column\": 3\n        }\n      ],\n      \"path\": [\n        \"users\"\n      ]\n    }\n  ],\n  \"data\": {\n    \"users\": null\n  }\n}\n</pre>\n<p>as</p>\n<pre>2020-04-06 00:02:43,217 - LIA-logger:30 - ERROR - error in resolvers\nTraceback (most recent call last):\n  File \"/Users/brianrotich/.pyenv/versions/3.6.10/envs/test-app/lib/python3.6/site-packages/graphql/execution/executor.py\", line 452, in resolve_or_error\n    return executor.execute(resolve_fn, source, info, **args)\n  File \"/Users/brianrotich/.pyenv/versions/3.6.10/envs/test-app/lib/python3.6/site-packages/graphql/execution/executors/sync.py\", line 16, in execute\n    return fn(*args, **kwargs)\n  File \"/Users/brianrotich/.pyenv/versions/3.6.10/envs/test-app/lib/python3.6/site-packages/graphene/relay/connection.py\", line 161, in connection_resolver\n    resolved = resolver(root, info, **args)\n  File \"/Users/brianrotich/codes/app/test-app/__init__.py\", line 187, in resolve_users\n    raise ValueError('sdsd')\nValueError: sdsd\n</pre>\n<h2>Usage</h2>\n<p>a. using an existing logger in the <code>app.py</code></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">graphql_error_logger</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_app</span><span class=\"p\">():</span>\n    <span class=\"c1\"># logger initialization and configuration</span>\n    <span class=\"n\">logger</span><span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n    <span class=\"n\">graphql_error_logger</span><span class=\"o\">.</span><span class=\"n\">init_logger</span><span class=\"p\">(</span><span class=\"n\">logger</span><span class=\"p\">)</span>\n</pre>\n<p>b. if no logger is provided, the library creates a logger called <code>graphql-error-logger</code> automatically</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">graphql_error_logger</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_app</span><span class=\"p\">():</span>\n    <span class=\"n\">graphql_error_logger</span><span class=\"o\">.</span><span class=\"n\">init_logger</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>this logger is configured to use the <code>ERROR</code> log level to log the exception stacktrace</li>\n</ul>\n\n          </div>"}, "last_serial": 6957835, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e2b5738bbeb73a2a657fa57bcc225756", "sha256": "324c0a20ad6ff3ae37509649ff9856a3f1eb7d61bd58b5e20f077abc1c3455b9"}, "downloads": -1, "filename": "graphql_error_logger-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e2b5738bbeb73a2a657fa57bcc225756", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2701, "upload_time": "2020-04-05T20:56:50", "upload_time_iso_8601": "2020-04-05T20:56:50.890653Z", "url": "https://files.pythonhosted.org/packages/88/11/8d6627e428be57a809e5746e24b18817144bc9cca477c892db3ff42cab34/graphql_error_logger-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6308edc6e25236d80d10eb1faae68bcf", "sha256": "229210ace324fde1fa85f474573db4bf1e3e70f3d95de3d43610f17856991b4d"}, "downloads": -1, "filename": "graphql_error_logger-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6308edc6e25236d80d10eb1faae68bcf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1285, "upload_time": "2020-04-05T20:56:53", "upload_time_iso_8601": "2020-04-05T20:56:53.073080Z", "url": "https://files.pythonhosted.org/packages/28/05/50b217430cbe136e4c38a63d4e2bd21bac8bc6e9b16d081a19737737eb50/graphql_error_logger-0.0.1.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "d990174e45bac8abe2b55962ac87a952", "sha256": "20b6d58c58add5703a20b45c90dd8e7b76f15d1354e36bae45058667c94bceae"}, "downloads": -1, "filename": "graphql_error_logger-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d990174e45bac8abe2b55962ac87a952", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3808, "upload_time": "2020-04-05T21:32:14", "upload_time_iso_8601": "2020-04-05T21:32:14.972856Z", "url": "https://files.pythonhosted.org/packages/76/5f/c8d6a9bf20701d8f86cc4622377cf64d3d1d8f961965a991d889730bcea3/graphql_error_logger-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f86279573a9a1f6ad447eafbc6c178b", "sha256": "ea21eb704800271ad800ff0b001f395b1e7b8897bf7119d07b889b0cfdf0dcd6"}, "downloads": -1, "filename": "graphql_error_logger-0.0.3.tar.gz", "has_sig": false, "md5_digest": "7f86279573a9a1f6ad447eafbc6c178b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2655, "upload_time": "2020-04-05T21:32:17", "upload_time_iso_8601": "2020-04-05T21:32:17.399034Z", "url": "https://files.pythonhosted.org/packages/f4/f1/2a89a4d2f9b6319a5e1875bd92c776cd10f5992183a25fee62266ed7f9ec/graphql_error_logger-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d990174e45bac8abe2b55962ac87a952", "sha256": "20b6d58c58add5703a20b45c90dd8e7b76f15d1354e36bae45058667c94bceae"}, "downloads": -1, "filename": "graphql_error_logger-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d990174e45bac8abe2b55962ac87a952", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3808, "upload_time": "2020-04-05T21:32:14", "upload_time_iso_8601": "2020-04-05T21:32:14.972856Z", "url": "https://files.pythonhosted.org/packages/76/5f/c8d6a9bf20701d8f86cc4622377cf64d3d1d8f961965a991d889730bcea3/graphql_error_logger-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f86279573a9a1f6ad447eafbc6c178b", "sha256": "ea21eb704800271ad800ff0b001f395b1e7b8897bf7119d07b889b0cfdf0dcd6"}, "downloads": -1, "filename": "graphql_error_logger-0.0.3.tar.gz", "has_sig": false, "md5_digest": "7f86279573a9a1f6ad447eafbc6c178b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2655, "upload_time": "2020-04-05T21:32:17", "upload_time_iso_8601": "2020-04-05T21:32:17.399034Z", "url": "https://files.pythonhosted.org/packages/f4/f1/2a89a4d2f9b6319a5e1875bd92c776cd10f5992183a25fee62266ed7f9ec/graphql_error_logger-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:33 2020"}