{"info": {"author": "Sergio La Rosa", "author_email": "sergio.larosa89@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "pydevrant\n=========\n\nUnofficial Python wrapper for the public\n`devRant <https://www.devrant.io>`__ API.\n\nBased on the unofficial wrapper made by \"danillouz\"\n(`here <https://github.com/danillouz/devrant>`__) and API docs from\n\"abhn\" (`here <https://github.com/abhn/devRant-Unofficial-API-Doc>`__).\n\n**From the official site**: *devRant is a fun community for developers\nto share and bond over their successes and frustrations with code, tech,\nand life as a programmer. devRant is built by just one developer\n(devRant: [@dfox](https://www.devrant.io/users/dfox) Twitter:\n[@dfoxinator](https://twitter.com/DFoxinator)) and one designer\n(devRant: [@trogus](https://www.devrant.io/users/trogus) Twitter:\n[@tim\\_rogus](https://twitter.com/tim\\_rogus)) working on this project\nnights and weekends.*\n\nInstallation\n------------\n\nInstall using `pip <https://pip.pypa.io/en/stable/quickstart/>`__\n\n``pip install pydevrant``\n\nList of features\n----------------\n\nCurrently, you can:\n\n-  Get user ID\n-  Get rants\n-  Get a rant with comments\n-  Search rants\n-  Get user profile\n-  Login with username/password\n-  Post a rant\n-  Vote a rant\n-  Vote a comment\n\n(Note: search results are JSON-formatted data)\n\nExample\n-------\n\n**Post a rant**\n\n.. code:: python\n\n    from pydevrant import *\n\n    client = Auth()\n    user = client.login(\"USERNAME\", \"PASSWORD\")\n\n    #first argument is body (string)\n    #second argument is tags (string, make sure comma seperated)\n    #third argument is type (int, 1 for rant, 5 for collab)\n\n    client.post(\"this is my rant, do you like it?\", \"swift, react, js\", 1)\n\n**Vote a rant/comment**\n\n.. code:: python\n\n    #first argument is type (rant/comment)\n    #second argument is RANT_ID\n    #third argument is value. (+1 for upvote, -1 for downvote)\n    #(can only be +1 or -1. server rejects requests if any other data)\n\n    client.vote(\"rant\", 1292812, +1)    #for voting on a rant\n    client.vote(\"comment\", 1372121, +1)    #for voting on a comment\n\n**Find the top rants but limit the results to just one**\n\n.. code:: python\n\n    from pydevrant import *\n    from pprint import pprint #just for nice output on terminal\n\n    elem = RantParser()\n    result = elem.get_rants(sort=\"top\",limit=1)\n\n    pprint(result)\n\nThe output will be something like this (some parts removed for brevity):\n\n::\n\n    {'news': {'action': 'grouprant',\n              'body': 'Bad data loss story?',\n              'footer': \"Add tag 'wk98' to your rant\",\n              'headline': 'Weekly Group Rant',\n              'height': 100,\n              'id': 132,\n              'type': 'intlink'},\n     'rants': [{'attached_image': '',\n                'created_time': 1474486614,\n                'edited': True,\n                'id': 194632,\n                'num_comments': 155,\n                'rc': 1,\n                'rt': 1,\n                'score': 2672,\n                'tags': [],\n                'text': 'It appears his main client had gone nuts with him because '\n                        'they wanted him to make an internet toolbar (think '\n                        \"Ask.com) and he politely informed them toolbars doesn't \"\n                        \"really exist anymore and it wouldn't work on things like \"\n                        'modern browsers or mobile devices.\\n'\n                        ....\n                        ',\n                'user_avatar': {'b': 'f99a66',\n                                'i': 'v-18_c-3_b-3_g-m_9-1_1-2_16-13_3-5_8-2_7-2_5-2_12-2_6-11_10-9_2-42_15-11_11-4_4-2.jpg'},\n                'user_avatar_lg': {'b': 'f99a66',\n                                   'i': 'v-18_c-1_b-3_g-m_9-1_1-2_16-13_3-5_8-2_7-2_5-2_12-2_6-11_10-9_2-42_15-11_11-4_4-2.png'},\n                'user_id': 103918,\n                'user_score': 4909,\n                'user_username': 'peaam',\n                'vote_state': 0}],\n     'set': '5ac3b0a97b094',\n     'settings': [],\n     'success': True,\n     'wrw': 98}", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SergioLaRosa/pydevrant", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pydevrant", "package_url": "https://pypi.org/project/pydevrant/", "platform": "", "project_url": "https://pypi.org/project/pydevrant/", "project_urls": {"Homepage": "https://github.com/SergioLaRosa/pydevrant"}, "release_url": "https://pypi.org/project/pydevrant/0.21/", "requires_dist": null, "requires_python": "", "summary": "Unofficial Python wrapper for the public devRant API", "version": "0.21", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Unofficial Python wrapper for the public\n<a href=\"https://www.devrant.io\" rel=\"nofollow\">devRant</a> API.</p>\n<p>Based on the unofficial wrapper made by \u201cdanillouz\u201d\n(<a href=\"https://github.com/danillouz/devrant\" rel=\"nofollow\">here</a>) and API docs from\n\u201cabhn\u201d (<a href=\"https://github.com/abhn/devRant-Unofficial-API-Doc\" rel=\"nofollow\">here</a>).</p>\n<p><strong>From the official site</strong>: <em>devRant is a fun community for developers\nto share and bond over their successes and frustrations with code, tech,\nand life as a programmer. devRant is built by just one developer\n(devRant: [@dfox](https://www.devrant.io/users/dfox) Twitter:\n[@dfoxinator](https://twitter.com/DFoxinator)) and one designer\n(devRant: [@trogus](https://www.devrant.io/users/trogus) Twitter:\n[@tim_rogus](https://twitter.com/tim_rogus)) working on this project\nnights and weekends.</em></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using <a href=\"https://pip.pypa.io/en/stable/quickstart/\" rel=\"nofollow\">pip</a></p>\n<p><tt>pip install pydevrant</tt></p>\n</div>\n<div id=\"list-of-features\">\n<h2>List of features</h2>\n<p>Currently, you can:</p>\n<ul>\n<li>Get user ID</li>\n<li>Get rants</li>\n<li>Get a rant with comments</li>\n<li>Search rants</li>\n<li>Get user profile</li>\n<li>Login with username/password</li>\n<li>Post a rant</li>\n<li>Vote a rant</li>\n<li>Vote a comment</li>\n</ul>\n<p>(Note: search results are JSON-formatted data)</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p><strong>Post a rant</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pydevrant</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Auth</span><span class=\"p\">()</span>\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"s2\">\"USERNAME\"</span><span class=\"p\">,</span> <span class=\"s2\">\"PASSWORD\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#first argument is body (string)</span>\n<span class=\"c1\">#second argument is tags (string, make sure comma seperated)</span>\n<span class=\"c1\">#third argument is type (int, 1 for rant, 5 for collab)</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">\"this is my rant, do you like it?\"</span><span class=\"p\">,</span> <span class=\"s2\">\"swift, react, js\"</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Vote a rant/comment</strong></p>\n<pre><span class=\"c1\">#first argument is type (rant/comment)</span>\n<span class=\"c1\">#second argument is RANT_ID</span>\n<span class=\"c1\">#third argument is value. (+1 for upvote, -1 for downvote)</span>\n<span class=\"c1\">#(can only be +1 or -1. server rejects requests if any other data)</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">vote</span><span class=\"p\">(</span><span class=\"s2\">\"rant\"</span><span class=\"p\">,</span> <span class=\"mi\">1292812</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span>    <span class=\"c1\">#for voting on a rant</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">vote</span><span class=\"p\">(</span><span class=\"s2\">\"comment\"</span><span class=\"p\">,</span> <span class=\"mi\">1372121</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span>    <span class=\"c1\">#for voting on a comment</span>\n</pre>\n<p><strong>Find the top rants but limit the results to just one</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pydevrant</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span> <span class=\"c1\">#just for nice output on terminal</span>\n\n<span class=\"n\">elem</span> <span class=\"o\">=</span> <span class=\"n\">RantParser</span><span class=\"p\">()</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">elem</span><span class=\"o\">.</span><span class=\"n\">get_rants</span><span class=\"p\">(</span><span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"s2\">\"top\"</span><span class=\"p\">,</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<p>The output will be something like this (some parts removed for brevity):</p>\n<pre>{'news': {'action': 'grouprant',\n          'body': 'Bad data loss story?',\n          'footer': \"Add tag 'wk98' to your rant\",\n          'headline': 'Weekly Group Rant',\n          'height': 100,\n          'id': 132,\n          'type': 'intlink'},\n 'rants': [{'attached_image': '',\n            'created_time': 1474486614,\n            'edited': True,\n            'id': 194632,\n            'num_comments': 155,\n            'rc': 1,\n            'rt': 1,\n            'score': 2672,\n            'tags': [],\n            'text': 'It appears his main client had gone nuts with him because '\n                    'they wanted him to make an internet toolbar (think '\n                    \"Ask.com) and he politely informed them toolbars doesn't \"\n                    \"really exist anymore and it wouldn't work on things like \"\n                    'modern browsers or mobile devices.\\n'\n                    ....\n                    ',\n            'user_avatar': {'b': 'f99a66',\n                            'i': 'v-18_c-3_b-3_g-m_9-1_1-2_16-13_3-5_8-2_7-2_5-2_12-2_6-11_10-9_2-42_15-11_11-4_4-2.jpg'},\n            'user_avatar_lg': {'b': 'f99a66',\n                               'i': 'v-18_c-1_b-3_g-m_9-1_1-2_16-13_3-5_8-2_7-2_5-2_12-2_6-11_10-9_2-42_15-11_11-4_4-2.png'},\n            'user_id': 103918,\n            'user_score': 4909,\n            'user_username': 'peaam',\n            'vote_state': 0}],\n 'set': '5ac3b0a97b094',\n 'settings': [],\n 'success': True,\n 'wrw': 98}\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3743274, "releases": {"0.11": [{"comment_text": "", "digests": {"md5": "c223122e9b32dd614935628ce027343f", "sha256": "edc44351b773fb0e21444314554610d6d3083b8b127591d08553cfa5ccc7a712"}, "downloads": -1, "filename": "pydevrant-0.11.tar.gz", "has_sig": false, "md5_digest": "c223122e9b32dd614935628ce027343f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1474, "upload_time": "2018-04-03T16:41:51", "upload_time_iso_8601": "2018-04-03T16:41:51.682233Z", "url": "https://files.pythonhosted.org/packages/d7/b5/c535be3a7c4130f62e740928188027043561478de28cc044b3b9b7500677/pydevrant-0.11.tar.gz", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "1e72ec4ac5bb14d51a13873e67ed412c", "sha256": "2b43a8ca41801f9e439e840c0cc6d8f22d4c4cf1c3c62cb9d7f3ebed9225738a"}, "downloads": -1, "filename": "pydevrant-0.12.tar.gz", "has_sig": false, "md5_digest": "1e72ec4ac5bb14d51a13873e67ed412c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3243, "upload_time": "2018-04-03T17:05:47", "upload_time_iso_8601": "2018-04-03T17:05:47.832880Z", "url": "https://files.pythonhosted.org/packages/05/5b/44f219f0ad43b50bf62b8e9aa5c817649c4bd7e84ef43aa25ee18f83df80/pydevrant-0.12.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "a64614e0c4ed80f75b793415dc0a0884", "sha256": "da4d624467b7b7886ecc6f80bfc47808828945484ce7626df5112970973c9c4a"}, "downloads": -1, "filename": "pydevrant-0.2.tar.gz", "has_sig": false, "md5_digest": "a64614e0c4ed80f75b793415dc0a0884", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4265, "upload_time": "2018-04-07T09:05:21", "upload_time_iso_8601": "2018-04-07T09:05:21.055729Z", "url": "https://files.pythonhosted.org/packages/80/e9/f46f5fab431441aac05f4e9ef997e90de678a2636a845f555484db0f8ca4/pydevrant-0.2.tar.gz", "yanked": false}], "0.21": [{"comment_text": "", "digests": {"md5": "b9b36c7b34891aba98779dcb1d2f0c69", "sha256": "13be7cf21091aa59209a6b2419fd73dc00162bd4aeb403c09292cf442a28b4c7"}, "downloads": -1, "filename": "pydevrant-0.21.tar.gz", "has_sig": false, "md5_digest": "b9b36c7b34891aba98779dcb1d2f0c69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4273, "upload_time": "2018-04-07T09:13:39", "upload_time_iso_8601": "2018-04-07T09:13:39.903877Z", "url": "https://files.pythonhosted.org/packages/83/63/600aba441ecd17183224eecdc60f6eb7caebf075f1aad15ff93f4fcf650c/pydevrant-0.21.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b9b36c7b34891aba98779dcb1d2f0c69", "sha256": "13be7cf21091aa59209a6b2419fd73dc00162bd4aeb403c09292cf442a28b4c7"}, "downloads": -1, "filename": "pydevrant-0.21.tar.gz", "has_sig": false, "md5_digest": "b9b36c7b34891aba98779dcb1d2f0c69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4273, "upload_time": "2018-04-07T09:13:39", "upload_time_iso_8601": "2018-04-07T09:13:39.903877Z", "url": "https://files.pythonhosted.org/packages/83/63/600aba441ecd17183224eecdc60f6eb7caebf075f1aad15ff93f4fcf650c/pydevrant-0.21.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:06 2020"}