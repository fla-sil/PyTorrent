{"info": {"author": "Rafael Oliveira", "author_email": "rafaelbco@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "rbco.recipe.pyeclipse\n=====================\n\n.. contents::\n\nOverview\n--------\n\nThis recipe creates a Pydev_ project for Eclipse. The goal is to automate\nthe following strategy:\n\n1. *Create a Pydev project.* The project directory is separated from the\n   source code directories. In other words, the source code will not reside\n   inside the project directory.\n2. *Create links to the source code directories.* This is done by right-clicking \n   the project in the Pydev Package Explorer and selection New->Folder. Then\n   click Advanced and choose \"Link to folder in the filesystem.\"\n3. *Add the linked directories to the PYTHONPATH of the project.*\n\nThis approach works very well when working with Zope/Plone, specially if\ncombined with `collective.recipe.omelette`_, as pointed in `this article`__\nby Martin Aspeli.\n\n__ `Eclipse, PyDev and Buildout`_\n\nHowever it should be flexible enough to allow other strategies.\n\nAfter the recipe is run import the project into Eclipse going to: \nFile -> Import... -> Existing projects into workspace.\n\n\nSupported options\n-----------------\n\nThe recipe supports the following options:\n\nproject-name\n    The project name.\n\npython-version\n    The Python version for syntatical analysis, such as 2.4 or 2.5.\n    \npython-interpreter\n    Optional. The path to the Python interpreter. Defaults to the default\n    interpreter configured in Eclipse.\n    \nproject-directory\n    The directory where the project configuration files will be stored.\n    \nsource-resources\n    A set of paths separated by space or newline. These will be added as\n    linked directories (or files) and will be in the PYTHONPATH.\n    \nextra-linked-resources\n    A set of paths separated by space or newline. These will be added as\n    linked directories (or files) only.\n                \nextra-pythonpath-resources\n    A set of paths separated by space or newline. These will be added only\n    to the PYTHONPATH.\n\n.. TODO: write about replace policy.\n\nExample usage\n-------------\n\nSetup::\n\n    >>> from os.path import join\n    >>> egg_zip_filename = 'some.egg.zip'\n    >>> src_dirname = 'my.python.package'       \n    >>>\n    >>> test_dir = tmpdir('testdir')\n    >>>      \n    >>> mkdir(test_dir, src_dirname)  \n    >>> src_dir = join(test_dir, src_dirname)\n    >>>\n    >>> write(test_dir, egg_zip_filename, 'foo')    \n    >>> egg_zip_file = join(test_dir, egg_zip_filename)\n\nWe'll start by creating a typical buildout that uses the recipe::\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = eclipse_project\n    ...\n    ... [eclipse_project]\n    ... recipe = rbco.recipe.pyeclipse\n    ... project-name = TestProject\n    ... python-version = 2.4\n    ... project-directory = ${buildout:directory}/testproject \n    ... source-resources = \n    ...     %(src_dir)s\n    ...     %(egg_zip_file)s\n    ... \"\"\" % locals())\n    \n    >>> #cat('buildout.cfg')\n    \nNote that we added two source resources: a directory and a zipped egg.    \n    \nRunning the buildout gives us::\n\n    >>> print 'start', system(buildout)    \n    start...\n    Installing eclipse_project.\n    <BLANKLINE>\n\nThe project directory is created if it does not exist and so happens to the\n.project and .pydevproject files. The .project file will look like this::\n\n    >>> cat(join(sample_buildout, 'testproject', '.project'))\n    <?xml version='1.0' encoding='utf-8'?>\n    <projectDescription>\n     <name>TestProject</name>\n     ...\n     <buildspec>\n      <buildcommand>\n       <name>org.python.pydev.PyDevBuilder</name>\n       ...\n      </buildcommand>\n     </buildspec>\n     <natures>\n      <nature>org.python.pydev.pythonNature</nature>\n     </natures>\n     <linkedResources>\n     ...\n     </linkedResources>     \n    </projectDescription>\n\nLet's look into the ``<linkedResources>`` tag. The paths listed in the \n``source-resources`` section must be listed there::\n\n    >>> cat(join(sample_buildout, 'testproject', '.project'))\n    <?xml...\n    <linkedResources>...\n      <link>\n        <name>my.python.package</name>\n        ...testdir/my.python.package</location>\n        <type>2</type>\n      </link>...      \n    </linkedResources>...\n    \nThe egg zip file is present too::\n\n    >>> cat(join(sample_buildout, 'testproject', '.project'))\n    <?xml...\n    <linkedResources>...\n      <link>\n        <name>some.egg.zip</name>\n        ...testdir/some.egg.zip</location>      \n        <type>1</type>\n      </link>...      \n    </linkedResources>...       \n    \nKnown bugs, caveats ant tips\n----------------------------\n\n- If you get an error message saying, in the details, that \n  **Files cannot be linked to folders** then try to rebuild your buildout \n  running: ``bin/buildout -Nov``. \n  \n  This is happening probably because the pyeclipse recipe ran before a directory \n  referred in the recipe's configuration was created. This often happens when\n  using omelettes.\n  \n  Then you'll probably need to rebuild your project in Eclipse. See the next\n  items.\n  \n- If Pydev stopped analyzing or doing auto-complete on your code:\n\n    - Try to fix any syntax errors on your project. It seems Pydev stops\n      processing your files when any syntax error is found.\n      \n    - Check if all directories in the PYTHONPATH have a ``__init__.py``\n      file inside, including the root directory.\n    \n    - Check if the Python version is set up correctly. Check inside Project ->\n      Properties -> \"Pydev - project type\" -> \"Grammar Version\". \n      \n      The Python version can be configured using the ``python-version`` option \n      of the recipe.\n      \n- After fixing the errors above, if Pydev is still not working correctly then\n  try to rebuild your project. Do the following:\n  \n    - Check if \"Project -> Build Automatically\" is on. Then go to \n      \"Project -> Clean\" and clean your project. The project will be rebuilt.\n  \n    - Go to \"Project -> Properties -> Pydev - PYTHONPATH\" and click on\n      \"Force restore internal info\".  \n  \n    \nReferences\n----------\n\n.. _Pydev: http://pydev.sourceforge.net/\n.. _Eclipse, PyDev and Buildout: http://www.martinaspeli.net/articles/eclipse-pydev-and-buildout\n.. _collective.recipe.omelette: http://pypi.python.org/pypi/collective.recipe.omelette\n\n.. target-notes:: \n\nChangelog\n=========\n\n0.0.5 (29-may-2009)\n-------------------\n\n- Made version requirements on BeautifulSoup less strict in order to use the\n  recipe in a project involving scrapy.\n\n0.0.4 (12-may-2009)\n-------------------\t\n\n- Improved section \"Known bugs, caveats ant tips\" of README.txt.\n\n0.0.3 (04-may-2009)\n-------------------\t\n\n- Corrected XML formatting again, fixing the Python Version Bug.\n- Improved documentation.\n\n0.0.2 (04-may-2009)\n-------------------\t\n\n- Corrected XML formatting.\n\n0.0.1 (04-may-2009)\n-------------------\n\n- First release.\n\nTODO\n====\n\n- Write more tests, including the optional options.\n\nContributors\n============\n\n- Rafael Oliveira, Author", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://rbco-recipe-pyeclipse.googlecode.com/", "keywords": "eclipse pydev", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "rbco.recipe.pyeclipse", "package_url": "https://pypi.org/project/rbco.recipe.pyeclipse/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/rbco.recipe.pyeclipse/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://rbco-recipe-pyeclipse.googlecode.com/"}, "release_url": "https://pypi.org/project/rbco.recipe.pyeclipse/0.0.5/", "requires_dist": null, "requires_python": null, "summary": "Creates a Pydev project for Eclipse.", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"rbco-recipe-pyeclipse\">\n<h2><a href=\"#id12\" rel=\"nofollow\">rbco.recipe.pyeclipse</a></h2>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#rbco-recipe-pyeclipse\" id=\"id12\" rel=\"nofollow\">rbco.recipe.pyeclipse</a><ul>\n<li><a href=\"#overview\" id=\"id13\" rel=\"nofollow\">Overview</a></li>\n<li><a href=\"#supported-options\" id=\"id14\" rel=\"nofollow\">Supported options</a></li>\n<li><a href=\"#example-usage\" id=\"id15\" rel=\"nofollow\">Example usage</a></li>\n<li><a href=\"#known-bugs-caveats-ant-tips\" id=\"id16\" rel=\"nofollow\">Known bugs, caveats ant tips</a></li>\n<li><a href=\"#references\" id=\"id17\" rel=\"nofollow\">References</a></li>\n</ul>\n</li>\n<li><a href=\"#changelog\" id=\"id18\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#may-2009\" id=\"id19\" rel=\"nofollow\">0.0.5 (29-may-2009)</a></li>\n<li><a href=\"#id2\" id=\"id20\" rel=\"nofollow\">0.0.4 (12-may-2009)</a></li>\n<li><a href=\"#id3\" id=\"id21\" rel=\"nofollow\">0.0.3 (04-may-2009)</a></li>\n<li><a href=\"#id4\" id=\"id22\" rel=\"nofollow\">0.0.2 (04-may-2009)</a></li>\n<li><a href=\"#id5\" id=\"id23\" rel=\"nofollow\">0.0.1 (04-may-2009)</a></li>\n</ul>\n</li>\n<li><a href=\"#todo\" id=\"id24\" rel=\"nofollow\">TODO</a></li>\n<li><a href=\"#contributors\" id=\"id25\" rel=\"nofollow\">Contributors</a></li>\n</ul>\n</div>\n<div id=\"overview\">\n<h3><a href=\"#id13\" rel=\"nofollow\">Overview</a></h3>\n<p>This recipe creates a <a href=\"http://pydev.sourceforge.net/\" rel=\"nofollow\">Pydev</a> <a href=\"#id6\" id=\"id7\" rel=\"nofollow\">[1]</a> project for Eclipse. The goal is to automate\nthe following strategy:</p>\n<ol>\n<li><em>Create a Pydev project.</em> The project directory is separated from the\nsource code directories. In other words, the source code will not reside\ninside the project directory.</li>\n<li><em>Create links to the source code directories.</em> This is done by right-clicking\nthe project in the Pydev Package Explorer and selection New-&gt;Folder. Then\nclick Advanced and choose \u201cLink to folder in the filesystem.\u201d</li>\n<li><em>Add the linked directories to the PYTHONPATH of the project.</em></li>\n</ol>\n<p>This approach works very well when working with Zope/Plone, specially if\ncombined with <a href=\"http://pypi.python.org/pypi/collective.recipe.omelette\" rel=\"nofollow\">collective.recipe.omelette</a> <a href=\"#id8\" id=\"id9\" rel=\"nofollow\">[2]</a>, as pointed in <a href=\"http://www.martinaspeli.net/articles/eclipse-pydev-and-buildout\" rel=\"nofollow\">this article</a> <a href=\"#id10\" id=\"id11\" rel=\"nofollow\">[3]</a>\nby Martin Aspeli.</p>\n<p>However it should be flexible enough to allow other strategies.</p>\n<p>After the recipe is run import the project into Eclipse going to:\nFile -&gt; Import\u2026 -&gt; Existing projects into workspace.</p>\n</div>\n<div id=\"supported-options\">\n<h3><a href=\"#id14\" rel=\"nofollow\">Supported options</a></h3>\n<p>The recipe supports the following options:</p>\n<dl>\n<dt>project-name</dt>\n<dd>The project name.</dd>\n<dt>python-version</dt>\n<dd>The Python version for syntatical analysis, such as 2.4 or 2.5.</dd>\n<dt>python-interpreter</dt>\n<dd>Optional. The path to the Python interpreter. Defaults to the default\ninterpreter configured in Eclipse.</dd>\n<dt>project-directory</dt>\n<dd>The directory where the project configuration files will be stored.</dd>\n<dt>source-resources</dt>\n<dd>A set of paths separated by space or newline. These will be added as\nlinked directories (or files) and will be in the PYTHONPATH.</dd>\n<dt>extra-linked-resources</dt>\n<dd>A set of paths separated by space or newline. These will be added as\nlinked directories (or files) only.</dd>\n<dt>extra-pythonpath-resources</dt>\n<dd>A set of paths separated by space or newline. These will be added only\nto the PYTHONPATH.</dd>\n</dl>\n</div>\n<div id=\"example-usage\">\n<h3><a href=\"#id15\" rel=\"nofollow\">Example usage</a></h3>\n<p>Setup:</p>\n<pre>&gt;&gt;&gt; from os.path import join\n&gt;&gt;&gt; egg_zip_filename = 'some.egg.zip'\n&gt;&gt;&gt; src_dirname = 'my.python.package'\n&gt;&gt;&gt;\n&gt;&gt;&gt; test_dir = tmpdir('testdir')\n&gt;&gt;&gt;\n&gt;&gt;&gt; mkdir(test_dir, src_dirname)\n&gt;&gt;&gt; src_dir = join(test_dir, src_dirname)\n&gt;&gt;&gt;\n&gt;&gt;&gt; write(test_dir, egg_zip_filename, 'foo')\n&gt;&gt;&gt; egg_zip_file = join(test_dir, egg_zip_filename)\n</pre>\n<p>We\u2019ll start by creating a typical buildout that uses the recipe:</p>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = eclipse_project\n...\n... [eclipse_project]\n... recipe = rbco.recipe.pyeclipse\n... project-name = TestProject\n... python-version = 2.4\n... project-directory = ${buildout:directory}/testproject\n... source-resources =\n...     %(src_dir)s\n...     %(egg_zip_file)s\n... \"\"\" % locals())\n\n&gt;&gt;&gt; #cat('buildout.cfg')\n</pre>\n<p>Note that we added two source resources: a directory and a zipped egg.</p>\n<p>Running the buildout gives us:</p>\n<pre>&gt;&gt;&gt; print 'start', system(buildout)\nstart...\nInstalling eclipse_project.\n&lt;BLANKLINE&gt;\n</pre>\n<p>The project directory is created if it does not exist and so happens to the\n.project and .pydevproject files. The .project file will look like this:</p>\n<pre>&gt;&gt;&gt; cat(join(sample_buildout, 'testproject', '.project'))\n&lt;?xml version='1.0' encoding='utf-8'?&gt;\n&lt;projectDescription&gt;\n &lt;name&gt;TestProject&lt;/name&gt;\n ...\n &lt;buildspec&gt;\n  &lt;buildcommand&gt;\n   &lt;name&gt;org.python.pydev.PyDevBuilder&lt;/name&gt;\n   ...\n  &lt;/buildcommand&gt;\n &lt;/buildspec&gt;\n &lt;natures&gt;\n  &lt;nature&gt;org.python.pydev.pythonNature&lt;/nature&gt;\n &lt;/natures&gt;\n &lt;linkedResources&gt;\n ...\n &lt;/linkedResources&gt;\n&lt;/projectDescription&gt;\n</pre>\n<p>Let\u2019s look into the <tt>&lt;linkedResources&gt;</tt> tag. The paths listed in the\n<tt><span class=\"pre\">source-resources</span></tt> section must be listed there:</p>\n<pre>&gt;&gt;&gt; cat(join(sample_buildout, 'testproject', '.project'))\n&lt;?xml...\n&lt;linkedResources&gt;...\n  &lt;link&gt;\n    &lt;name&gt;my.python.package&lt;/name&gt;\n    ...testdir/my.python.package&lt;/location&gt;\n    &lt;type&gt;2&lt;/type&gt;\n  &lt;/link&gt;...\n&lt;/linkedResources&gt;...\n</pre>\n<p>The egg zip file is present too:</p>\n<pre>&gt;&gt;&gt; cat(join(sample_buildout, 'testproject', '.project'))\n&lt;?xml...\n&lt;linkedResources&gt;...\n  &lt;link&gt;\n    &lt;name&gt;some.egg.zip&lt;/name&gt;\n    ...testdir/some.egg.zip&lt;/location&gt;\n    &lt;type&gt;1&lt;/type&gt;\n  &lt;/link&gt;...\n&lt;/linkedResources&gt;...\n</pre>\n</div>\n<div id=\"known-bugs-caveats-ant-tips\">\n<h3><a href=\"#id16\" rel=\"nofollow\">Known bugs, caveats ant tips</a></h3>\n<ul>\n<li><p>If you get an error message saying, in the details, that\n<strong>Files cannot be linked to folders</strong> then try to rebuild your buildout\nrunning: <tt>bin/buildout <span class=\"pre\">-Nov</span></tt>.</p>\n<p>This is happening probably because the pyeclipse recipe ran before a directory\nreferred in the recipe\u2019s configuration was created. This often happens when\nusing omelettes.</p>\n<p>Then you\u2019ll probably need to rebuild your project in Eclipse. See the next\nitems.</p>\n</li>\n<li><p>If Pydev stopped analyzing or doing auto-complete on your code:</p>\n<blockquote>\n<ul>\n<li><p>Try to fix any syntax errors on your project. It seems Pydev stops\nprocessing your files when any syntax error is found.</p>\n</li>\n<li><p>Check if all directories in the PYTHONPATH have a <tt>__init__.py</tt>\nfile inside, including the root directory.</p>\n</li>\n<li><p>Check if the Python version is set up correctly. Check inside Project -&gt;\nProperties -&gt; \u201cPydev - project type\u201d -&gt; \u201cGrammar Version\u201d.</p>\n<p>The Python version can be configured using the <tt><span class=\"pre\">python-version</span></tt> option\nof the recipe.</p>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>After fixing the errors above, if Pydev is still not working correctly then\ntry to rebuild your project. Do the following:</p>\n<blockquote>\n<ul>\n<li>Check if \u201cProject -&gt; Build Automatically\u201d is on. Then go to\n\u201cProject -&gt; Clean\u201d and clean your project. The project will be rebuilt.</li>\n<li>Go to \u201cProject -&gt; Properties -&gt; Pydev - PYTHONPATH\u201d and click on\n\u201cForce restore internal info\u201d.</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"references\">\n<h3><a href=\"#id17\" rel=\"nofollow\">References</a></h3>\n<table id=\"id6\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id7\" rel=\"nofollow\">[1]</a></td><td><a href=\"http://pydev.sourceforge.net/\" rel=\"nofollow\">http://pydev.sourceforge.net/</a></td></tr>\n</tbody>\n</table>\n<table id=\"id8\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id9\" rel=\"nofollow\">[2]</a></td><td><a href=\"http://pypi.python.org/pypi/collective.recipe.omelette\" rel=\"nofollow\">http://pypi.python.org/pypi/collective.recipe.omelette</a></td></tr>\n</tbody>\n</table>\n<table id=\"id10\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id11\" rel=\"nofollow\">[3]</a></td><td><a href=\"http://www.martinaspeli.net/articles/eclipse-pydev-and-buildout\" rel=\"nofollow\">http://www.martinaspeli.net/articles/eclipse-pydev-and-buildout</a></td></tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id18\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"may-2009\">\n<h3><a href=\"#id19\" rel=\"nofollow\">0.0.5 (29-may-2009)</a></h3>\n<ul>\n<li>Made version requirements on BeautifulSoup less strict in order to use the\nrecipe in a project involving scrapy.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id20\" rel=\"nofollow\">0.0.4 (12-may-2009)</a></h3>\n<ul>\n<li>Improved section \u201cKnown bugs, caveats ant tips\u201d of README.txt.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id21\" rel=\"nofollow\">0.0.3 (04-may-2009)</a></h3>\n<ul>\n<li>Corrected XML formatting again, fixing the Python Version Bug.</li>\n<li>Improved documentation.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id22\" rel=\"nofollow\">0.0.2 (04-may-2009)</a></h3>\n<ul>\n<li>Corrected XML formatting.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id23\" rel=\"nofollow\">0.0.1 (04-may-2009)</a></h3>\n<ul>\n<li>First release.</li>\n</ul>\n</div>\n</div>\n<div id=\"todo\">\n<h2><a href=\"#id24\" rel=\"nofollow\">TODO</a></h2>\n<ul>\n<li>Write more tests, including the optional options.</li>\n</ul>\n</div>\n<div id=\"contributors\">\n<h2><a href=\"#id25\" rel=\"nofollow\">Contributors</a></h2>\n<ul>\n<li>Rafael Oliveira, Author</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 798574, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "dc086124759089ab0853d5a6fdc1ec2d", "sha256": "d28f809fee06ad397181bed36e3440684e77f57df44cba1bb7db53d3cb83fdd5"}, "downloads": -1, "filename": "rbco.recipe.pyeclipse-0.0.1.zip", "has_sig": false, "md5_digest": "dc086124759089ab0853d5a6fdc1ec2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17656, "upload_time": "2009-05-04T13:45:20", "upload_time_iso_8601": "2009-05-04T13:45:20.753821Z", "url": "https://files.pythonhosted.org/packages/90/f0/cb020ca1d1820ef5ca0c657c08187eec0fbdab11fa9ed89caa743ebc761f/rbco.recipe.pyeclipse-0.0.1.zip", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d74ee7ac5a5944813e6945f3913eed81", "sha256": "6294953270e95b05c65c16cf25ec3904096f8897eaf6fea880680b0ec421f8bd"}, "downloads": -1, "filename": "rbco.recipe.pyeclipse-0.0.2.zip", "has_sig": false, "md5_digest": "d74ee7ac5a5944813e6945f3913eed81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17842, "upload_time": "2009-05-04T15:58:11", "upload_time_iso_8601": "2009-05-04T15:58:11.946602Z", "url": "https://files.pythonhosted.org/packages/02/64/9e6f0152b290b4b2abb6e30a74101058f2349f2502ddc97a38919b64d4da/rbco.recipe.pyeclipse-0.0.2.zip", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "98102d9ec66afacf23374bd38504bcea", "sha256": "54a6d11f9eff3a28a816a7d72136e7844291a3f66d86be5d3bde90e786f6f789"}, "downloads": -1, "filename": "rbco.recipe.pyeclipse-0.0.3.zip", "has_sig": false, "md5_digest": "98102d9ec66afacf23374bd38504bcea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22133, "upload_time": "2009-05-04T19:04:31", "upload_time_iso_8601": "2009-05-04T19:04:31.158647Z", "url": "https://files.pythonhosted.org/packages/a4/e6/0486811d6dfb25d093ee52627ecb07ab2b472f3759b8c296244aa1e4ec4e/rbco.recipe.pyeclipse-0.0.3.zip", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "2c3811c2d95809707a74763c16390820", "sha256": "09ba660ebdf7a1c598f97358f6576173736f56f98ec9575dcc7bfbc765d2cd6e"}, "downloads": -1, "filename": "rbco.recipe.pyeclipse-0.0.4.zip", "has_sig": false, "md5_digest": "2c3811c2d95809707a74763c16390820", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23091, "upload_time": "2009-05-12T16:14:41", "upload_time_iso_8601": "2009-05-12T16:14:41.160905Z", "url": "https://files.pythonhosted.org/packages/0e/1a/b24cc0808e9140ef0b8a11faaa7099e833889ae4d377da396be24a08a16a/rbco.recipe.pyeclipse-0.0.4.zip", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "707d8d54de6b4fabcbfc59a981747d1a", "sha256": "0b6b54a29fde35cbc5f96f1b701fbb2e1b9da1167b33ac34d7fe58de665d7f7e"}, "downloads": -1, "filename": "rbco.recipe.pyeclipse-0.0.5.zip", "has_sig": false, "md5_digest": "707d8d54de6b4fabcbfc59a981747d1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23305, "upload_time": "2009-05-29T14:18:32", "upload_time_iso_8601": "2009-05-29T14:18:32.501924Z", "url": "https://files.pythonhosted.org/packages/ac/c4/cda17510cf5690abe0b64afe85297f45da57e9621111a054c0e175610cbb/rbco.recipe.pyeclipse-0.0.5.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "707d8d54de6b4fabcbfc59a981747d1a", "sha256": "0b6b54a29fde35cbc5f96f1b701fbb2e1b9da1167b33ac34d7fe58de665d7f7e"}, "downloads": -1, "filename": "rbco.recipe.pyeclipse-0.0.5.zip", "has_sig": false, "md5_digest": "707d8d54de6b4fabcbfc59a981747d1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23305, "upload_time": "2009-05-29T14:18:32", "upload_time_iso_8601": "2009-05-29T14:18:32.501924Z", "url": "https://files.pythonhosted.org/packages/ac/c4/cda17510cf5690abe0b64afe85297f45da57e9621111a054c0e175610cbb/rbco.recipe.pyeclipse-0.0.5.zip", "yanked": false}], "timestamp": "Fri May  8 03:06:52 2020"}