{"info": {"author": "Keryn Knight", "author_email": "django-templateselector@kerynknight.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.11", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5"], "description": "django-templateselector\n=======================\n\n:author: Keryn Knight\n:version: 0.2.5\n\n.. |travis_stable| image:: https://travis-ci.org/kezabelle/django-template-selector.svg?branch=0.2.5\n  :target: https://travis-ci.org/kezabelle/django-template-selector\n\n.. |travis_master| image:: https://travis-ci.org/kezabelle/django-template-selector.svg?branch=master\n  :target: https://travis-ci.org/kezabelle/django-template-selector\n\n==============  ======\nRelease         Status\n==============  ======\nstable (0.2.5)  |travis_stable|\nmaster          |travis_master|\n==============  ======\n\n\n.. contents:: Sections\n   :depth: 2\n\nWhat it does\n------------\n\nProvides a new model field, ``fields.TemplateField`` which allows for selection\nof a specific `Django`_ template using a nice form field (``fields.TemplateChoiceField``)\nand a nicer widget (``widgets.TemplateSelector``) than the standard ``<select>`` dropdown.\n\nExample\n^^^^^^^\n\nBelow is a screenshot of the admin widget, without any thumbnails set up for\neach template, because I'm too lazy for that.\n\n.. image:: https://raw.github.com/kezabelle/django-template-selector/master/screenshot.png\n    :alt: Example\n\nUse case\n--------\n\nImagine you have a ``Page`` model, and you want to allow admins or page authors\nto choose from a range of templates for the page to use, you could do this::\n\n  from django.db import models\n  from templateselector.fields import TemplateField\n\n  class MyPage(models.Model):\n    title = models.CharField(max_length=100)\n    # ...\n    template = TemplateField(match='^myapp/mypage/layouts/.+\\.html$')\n\nwhich would allow them to select any HTML file Django could find in the\nappropriate directory.\n\n\nAvailable functionality\n-----------------------\n\nThese fields are really the only public API. There's obviously other stuff, if you\ncare to rummage around.\n\n``TemplateField``\n^^^^^^^^^^^^^^^^^\n\nExtends CharField, and requires a ``match`` argument which ought to be a\nstring version of a regular expression. The ``match`` will be used to filter\nthe possible choices. Optionally also takes a ``display_name`` argument, which\nis a callable (or ``dotted.string.path.to.one``) that takes a given\nstring (the selected template path) and returns a nice name for it. The\nnice name is available as ``get_<fieldname>_display``, `for consistency with Django`_\n\nThe default form field for ``TemplateField`` is ...\n\n``TemplateChoiceField``\n^^^^^^^^^^^^^^^^^^^^^^^\n\nHas the same arguments as ``TemplateField``, and can be used independently\nin all forms if you want to not use the model field.\nThe form field, when rendered with the ``TemplateSelector`` widget, will try\nand show a preview image for each template, by attempting to load a ``100W x 120H``\nimage from your staticfiles.\nGiven a template name of\n``path/to/template.htm`` it will try and load ``path/to/template.htm.png`` prefixed\nby whatever your ``STATIC_URL`` is. If no file exists, a placeholder image is\nshown as a fallback.\n\nBoth this and the ``TemplateField`` make use of...\n\n``nice_display_name``\n^^^^^^^^^^^^^^^^^^^^^\n\nThis function is the default callable for the ``display_name`` arguments on\nthe ``TemplateField`` and ``TemplateChoiceField``, it tries to provide some\nflexibility and sensisble defaults; specifically:\n\n* If your project defines a ``TEMPLATESELECTOR_DISPLAY_NAMES`` setting which\n  is a dictionary like ``{'path/to/template.html': \"my awesome template\"}`` then\n  the name ``\"my awesome template\"`` will be shown by preference.\n* If not set, or no key match is found, the function will take the *file name*\n  (not the path!) without *any extension* and will attempt to make a pretty, readable\n  name of it by replacing most non-alphabet characters with spaces, so\n  the template ``test/app/hello_world.html`` would become ``Hello world``\n\nSupported Django versions\n-------------------------\n\nThe tests are run against Django 1.11 on Python 2.7, and 3.5.\nThe widget uses the Django 1.11 template-based-rendering, so won't work on\nprevious versions. Possibly it'll just default back to a normal radiobox? I dunno.\n\n\nInstallation and usage\n----------------------\n\nInstallation\n^^^^^^^^^^^^\n\nYou can use `pip`_ to install the ``0.2.5`` version from `PyPI`_::\n\n    pip install django-templateselector==0.2.5\n\nOr you can grab it from  `GitHub`_  like this::\n\n  pip install -e git+https://github.com/kezabelle/django-template-selector.git#egg=django-template-selector\n\nConfiguration\n^^^^^^^^^^^^^\n\nTo get the ``TemplateSelector`` widget to display correctly, you *will* need to\nadd ``templateselector`` to your project's ``INSTALLED_APPS``.\n\nYou may also wish to configure ``TEMPLATESELECTOR_DISPLAY_NAMES = {}`` to provide\nnice names (see `nice_display_name`_)\n\nUsage\n^^^^^\n\nFor using the  `TemplateField`_, try something like this::\n\n  from django.db.models import Model\n  from templateselector.fields import TemplateField\n\n  class MyPage(models.Model):\n    template = TemplateField(match='^myapp/mypage/layouts/.+\\.html$')\n\nFor using the `TemplateChoiceField`_ without using the Model field, you'd\ndo something like::\n\n    from django.forms import Form\n    from templateselector.fields import TemplateChoiceField\n\n    class MyForm(Form):\n        field = TemplateChoiceField(match=\"^myapp/[0-9]+.html$\")\n\nTo get the widget's CSS, don't forget to use ``{{ form.media }}`` in your template!\n\nAltering the widget choice size\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIf you'd like to modify the dimensions used for each option in the widget (eg:\nyou have landscape template thumbnails instead of portrait) you'll need to\noverride the following CSS classes::\n\n    .templateselector-list-item {\n        width: ???;\n    }\n    .templateselector-label input {\n        top: ???;\n    }\n    .templateselector-thumb {\n        width: ???;\n        height: ???;\n    }\n\nYou can probably use the ``#id_FIELDNAME`` for a given field to provide the\nnecessary specificity.\n\nYou may need to provide a wrapper element if you re-use the same model/form\nattribute name (eg: ``{{ myform.selected_file }}``) for multiple things with\ndifferent dimensions::\n\n    <!-- target with\n    .myform-wrapper #id_selected_file .templateselector-list-item\n    etc -->\n    <div class=\"myform-wrapper\">{{ myform.selected_file }}</div>\n\n    <!-- target with\n    .myapp-wrapper #id_selected_file .templateselector-thumb\n     etc -->\n    <div class=\"myapp-wrapper\">{{ mymodelform.selected_file }}</div>\n\nRunning the tests\n^^^^^^^^^^^^^^^^^\n\nIf you have a cloned copy, you can do::\n\n  python setup.py test\n\nIf you have tox, you can just do::\n\n  tox\n\nRunning the demo\n^^^^^^^^^^^^^^^^\n\nA barebones demo is provided. It assumes you're using something like `virtualenv`_ and\n`virtualenvwrapper`_ but you can probably figure it out otherwise::\n\n    mktmpenv --python=`which python3`\n    pip install -e git+https://github.com/kezabelle/django-template-selector.git#egg=django-templateselector\n\nThen probably::\n\n    cd src/django-templateselector\n    python demo_project.py runserver\n\nThe index page ``/`` will show you a normal version of the selection widget,\nwhile ``/admin/tests/mymodel/add/`` will show the slightly customised version\nfor the standard `Django`_ admin.\n\nThe license\n-----------\n\nIt's the `FreeBSD`_. There's should be a ``LICENSE`` file in the root of the repository, and in any archives.\n\n.. _Django: https://www.djangoproject.com/\n.. _GitHub: https://github.com/\n.. _FreeBSD: http://en.wikipedia.org/wiki/BSD_licenses#2-clause_license_.28.22Simplified_BSD_License.22_or_.22FreeBSD_License.22.29\n.. _virtualenvwrapper: https://virtualenvwrapper.readthedocs.io/en/latest/\n.. _virtualenv: https://virtualenv.pypa.io/en/stable/\n.. _pip: https://pip.pypa.io/en/stable/\n.. _PyPI: https://pypi.python.org/pypi\n.. _for consistency with Django: https://docs.djangoproject.com/en/stable/ref/models/instances/#django.db.models.Model.get_FOO_display\n\n\n----\n\nCopyright (c) 2017, Keryn Knight\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n----\n\nChange history for django-templateselector\n------------------------------------------\n\n0.2.5\n^^^^^^\n* |FIX| Added ``:focus`` visual styles so that keyboard navigation through a form\n  including the widget may now indicate when selecting items.\n\n0.2.4\n^^^^^^\n* |NEW| Added a `system check`_ to ensure that the templates and styles are\n  able to be loaded.\n\n\n0.2.3\n^^^^^^\n* |FIX| Change the model level field validation (``TemplateField(match=...)`` to\n  forcibly check the given value matches the regex, in addition to checking\n  whether the given value exists in one of the template loaders.\n* |META| Still trying to master automatic deployment from Travis. One day I'll\n  get sdist working again!\n\n0.2.2\n^^^^^^\n* |META| Still trying to master automatic deployment from Travis. No\n  functionality change since ``0.2.0``\n\n\n0.2.1\n^^^^^^\n* |META| Automatic deployment of new releases from Travis mostly worked, but the\n  ``sdist`` is in poor shape (see commit ``44ad2a1542f2f61a73de84e0f7213bccfdb6f265``)\n  so I've disabled that for now. Wheels are better anyway, right? No\n  functionality change since ``0.2.0``\n\n\n0.2.0\n^^^^^^\n\n* |FIX| prevent the \"same\" template showing up more than once in the\n  widget, which wouldn't be possible when using ``get_template`` (`#1`_)\n* |NEW| If the form field (``TemplateChoiceField``) has only **one** valid template\n  option, and the form is unbound (ie: its an **add** form or whatever) then\n  pre-select the valid choice. Only happens if the field has ``required=True``\n* |NEW| using the ``get_<fieldname>_display`` as a value in a ```ModelAdmin.list_display``\n  will now allow for sorting by the underlying value in the database. (`#2`_)\n* |NEW| if the ``<fieldname>`` is used as part of a ``ModelAdmin.list_filter`` it will\n  show the nice display names of any used templates, rather than their internal\n  path representation. (`#3`_)\n\n0.1.1\n^^^^^^\n* |META| First release on PyPI.\n\n0.1.0\n^^^^^\n* |META| Initial development.\n\n\n.. |FIX| replace:: **BUGFIX:**\n.. |NEW| replace:: **FEATURE:**\n.. |META| replace:: **MISC:**\n.. _#1: https://github.com/kezabelle/django-template-selector/issues/1\n.. _#2: https://github.com/kezabelle/django-template-selector/issues/2\n.. _#3: https://github.com/kezabelle/django-template-selector/issues/3\n.. _system check: https://docs.djangoproject.com/en/stable/topics/checks/\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kezabelle/django-template-selector", "keywords": "django templateselector widget model form field", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django-templateselector", "package_url": "https://pypi.org/project/django-templateselector/", "platform": "", "project_url": "https://pypi.org/project/django-templateselector/", "project_urls": {"Homepage": "https://github.com/kezabelle/django-template-selector"}, "release_url": "https://pypi.org/project/django-templateselector/0.2.5/", "requires_dist": ["Django (>=1.8)", "scandir (>=1.5); python_version<'3'"], "requires_python": "", "summary": "Provides a model field and form field for allowing users to select a template file", "version": "0.2.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th>\n<td>Keryn Knight</td></tr>\n<tr><th>Version:</th>\n<td>0.2.5</td></tr>\n</tbody>\n</table>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Release</th>\n<th>Status</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>stable (0.2.5)</td>\n<td><a href=\"https://travis-ci.org/kezabelle/django-template-selector\" rel=\"nofollow\"><img alt=\"travis_stable\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1bc455bfc574f9543e1fe9ee28321c3edf4dd690/68747470733a2f2f7472617669732d63692e6f72672f6b657a6162656c6c652f646a616e676f2d74656d706c6174652d73656c6563746f722e7376673f6272616e63683d302e322e35\"></a></td>\n</tr>\n<tr><td>master</td>\n<td><a href=\"https://travis-ci.org/kezabelle/django-template-selector\" rel=\"nofollow\"><img alt=\"travis_master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/89f15ee41aaccf3b088f4afc4fe7322dc0845c7e/68747470733a2f2f7472617669732d63692e6f72672f6b657a6162656c6c652f646a616e676f2d74656d706c6174652d73656c6563746f722e7376673f6272616e63683d6d6173746572\"></a></td>\n</tr>\n</tbody>\n</table>\n<div id=\"sections\">\n<p>Sections</p>\n<ul>\n<li><a href=\"#what-it-does\" id=\"id12\" rel=\"nofollow\">What it does</a><ul>\n<li><a href=\"#example\" id=\"id13\" rel=\"nofollow\">Example</a></li>\n</ul>\n</li>\n<li><a href=\"#use-case\" id=\"id14\" rel=\"nofollow\">Use case</a></li>\n<li><a href=\"#available-functionality\" id=\"id15\" rel=\"nofollow\">Available functionality</a><ul>\n<li><a href=\"#templatefield\" id=\"id16\" rel=\"nofollow\"><tt>TemplateField</tt></a></li>\n<li><a href=\"#templatechoicefield\" id=\"id17\" rel=\"nofollow\"><tt>TemplateChoiceField</tt></a></li>\n<li><a href=\"#nice-display-name\" id=\"id18\" rel=\"nofollow\"><tt>nice_display_name</tt></a></li>\n</ul>\n</li>\n<li><a href=\"#supported-django-versions\" id=\"id19\" rel=\"nofollow\">Supported Django versions</a></li>\n<li><a href=\"#installation-and-usage\" id=\"id20\" rel=\"nofollow\">Installation and usage</a><ul>\n<li><a href=\"#installation\" id=\"id21\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#configuration\" id=\"id22\" rel=\"nofollow\">Configuration</a></li>\n<li><a href=\"#usage\" id=\"id23\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#altering-the-widget-choice-size\" id=\"id24\" rel=\"nofollow\">Altering the widget choice size</a></li>\n<li><a href=\"#running-the-tests\" id=\"id25\" rel=\"nofollow\">Running the tests</a></li>\n<li><a href=\"#running-the-demo\" id=\"id26\" rel=\"nofollow\">Running the demo</a></li>\n</ul>\n</li>\n<li><a href=\"#the-license\" id=\"id27\" rel=\"nofollow\">The license</a></li>\n<li><a href=\"#change-history-for-django-templateselector\" id=\"id28\" rel=\"nofollow\">Change history for django-templateselector</a><ul>\n<li><a href=\"#id1\" id=\"id29\" rel=\"nofollow\">0.2.5</a></li>\n<li><a href=\"#id2\" id=\"id30\" rel=\"nofollow\">0.2.4</a></li>\n<li><a href=\"#id3\" id=\"id31\" rel=\"nofollow\">0.2.3</a></li>\n<li><a href=\"#id4\" id=\"id32\" rel=\"nofollow\">0.2.2</a></li>\n<li><a href=\"#id5\" id=\"id33\" rel=\"nofollow\">0.2.1</a></li>\n<li><a href=\"#id6\" id=\"id34\" rel=\"nofollow\">0.2.0</a></li>\n<li><a href=\"#id7\" id=\"id35\" rel=\"nofollow\">0.1.1</a></li>\n<li><a href=\"#id8\" id=\"id36\" rel=\"nofollow\">0.1.0</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"what-it-does\">\n<h2><a href=\"#id12\" rel=\"nofollow\">What it does</a></h2>\n<p>Provides a new model field, <tt>fields.TemplateField</tt> which allows for selection\nof a specific <a href=\"https://www.djangoproject.com/\" rel=\"nofollow\">Django</a> template using a nice form field (<tt>fields.TemplateChoiceField</tt>)\nand a nicer widget (<tt>widgets.TemplateSelector</tt>) than the standard <tt>&lt;select&gt;</tt> dropdown.</p>\n<div id=\"example\">\n<h3><a href=\"#id13\" rel=\"nofollow\">Example</a></h3>\n<p>Below is a screenshot of the admin widget, without any thumbnails set up for\neach template, because I\u2019m too lazy for that.</p>\n<img alt=\"Example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/19db5a3d7bd2863cea2a982222e46f776b06de2c/68747470733a2f2f7261772e6769746875622e636f6d2f6b657a6162656c6c652f646a616e676f2d74656d706c6174652d73656c6563746f722f6d61737465722f73637265656e73686f742e706e67\">\n</div>\n</div>\n<div id=\"use-case\">\n<h2><a href=\"#id14\" rel=\"nofollow\">Use case</a></h2>\n<p>Imagine you have a <tt>Page</tt> model, and you want to allow admins or page authors\nto choose from a range of templates for the page to use, you could do this:</p>\n<pre>from django.db import models\nfrom templateselector.fields import TemplateField\n\nclass MyPage(models.Model):\n  title = models.CharField(max_length=100)\n  # ...\n  template = TemplateField(match='^myapp/mypage/layouts/.+\\.html$')\n</pre>\n<p>which would allow them to select any HTML file Django could find in the\nappropriate directory.</p>\n</div>\n<div id=\"available-functionality\">\n<h2><a href=\"#id15\" rel=\"nofollow\">Available functionality</a></h2>\n<p>These fields are really the only public API. There\u2019s obviously other stuff, if you\ncare to rummage around.</p>\n<div id=\"templatefield\">\n<h3><a href=\"#id16\" rel=\"nofollow\"><tt>TemplateField</tt></a></h3>\n<p>Extends CharField, and requires a <tt>match</tt> argument which ought to be a\nstring version of a regular expression. The <tt>match</tt> will be used to filter\nthe possible choices. Optionally also takes a <tt>display_name</tt> argument, which\nis a callable (or <tt>dotted.string.path.to.one</tt>) that takes a given\nstring (the selected template path) and returns a nice name for it. The\nnice name is available as <tt>get_&lt;fieldname&gt;_display</tt>, <a href=\"https://docs.djangoproject.com/en/stable/ref/models/instances/#django.db.models.Model.get_FOO_display\" rel=\"nofollow\">for consistency with Django</a></p>\n<p>The default form field for <tt>TemplateField</tt> is \u2026</p>\n</div>\n<div id=\"templatechoicefield\">\n<h3><a href=\"#id17\" rel=\"nofollow\"><tt>TemplateChoiceField</tt></a></h3>\n<p>Has the same arguments as <tt>TemplateField</tt>, and can be used independently\nin all forms if you want to not use the model field.\nThe form field, when rendered with the <tt>TemplateSelector</tt> widget, will try\nand show a preview image for each template, by attempting to load a <tt>100W x 120H</tt>\nimage from your staticfiles.\nGiven a template name of\n<tt>path/to/template.htm</tt> it will try and load <tt>path/to/template.htm.png</tt> prefixed\nby whatever your <tt>STATIC_URL</tt> is. If no file exists, a placeholder image is\nshown as a fallback.</p>\n<p>Both this and the <tt>TemplateField</tt> make use of\u2026</p>\n</div>\n<div id=\"nice-display-name\">\n<h3><a href=\"#id18\" rel=\"nofollow\"><tt>nice_display_name</tt></a></h3>\n<p>This function is the default callable for the <tt>display_name</tt> arguments on\nthe <tt>TemplateField</tt> and <tt>TemplateChoiceField</tt>, it tries to provide some\nflexibility and sensisble defaults; specifically:</p>\n<ul>\n<li>If your project defines a <tt>TEMPLATESELECTOR_DISPLAY_NAMES</tt> setting which\nis a dictionary like <tt>{'path/to/template.html': \"my awesome template\"}</tt> then\nthe name <tt>\"my awesome template\"</tt> will be shown by preference.</li>\n<li>If not set, or no key match is found, the function will take the <em>file name</em>\n(not the path!) without <em>any extension</em> and will attempt to make a pretty, readable\nname of it by replacing most non-alphabet characters with spaces, so\nthe template <tt>test/app/hello_world.html</tt> would become <tt>Hello world</tt></li>\n</ul>\n</div>\n</div>\n<div id=\"supported-django-versions\">\n<h2><a href=\"#id19\" rel=\"nofollow\">Supported Django versions</a></h2>\n<p>The tests are run against Django 1.11 on Python 2.7, and 3.5.\nThe widget uses the Django 1.11 template-based-rendering, so won\u2019t work on\nprevious versions. Possibly it\u2019ll just default back to a normal radiobox? I dunno.</p>\n</div>\n<div id=\"installation-and-usage\">\n<h2><a href=\"#id20\" rel=\"nofollow\">Installation and usage</a></h2>\n<div id=\"installation\">\n<h3><a href=\"#id21\" rel=\"nofollow\">Installation</a></h3>\n<p>You can use <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> to install the <tt>0.2.5</tt> version from <a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>pip install django-templateselector==0.2.5\n</pre>\n<p>Or you can grab it from  <a href=\"https://github.com/\" rel=\"nofollow\">GitHub</a>  like this:</p>\n<pre>pip install -e git+https://github.com/kezabelle/django-template-selector.git#egg=django-template-selector\n</pre>\n</div>\n<div id=\"configuration\">\n<h3><a href=\"#id22\" rel=\"nofollow\">Configuration</a></h3>\n<p>To get the <tt>TemplateSelector</tt> widget to display correctly, you <em>will</em> need to\nadd <tt>templateselector</tt> to your project\u2019s <tt>INSTALLED_APPS</tt>.</p>\n<p>You may also wish to configure <tt>TEMPLATESELECTOR_DISPLAY_NAMES = {}</tt> to provide\nnice names (see <a href=\"#nice-display-name\" rel=\"nofollow\">nice_display_name</a>)</p>\n</div>\n<div id=\"usage\">\n<h3><a href=\"#id23\" rel=\"nofollow\">Usage</a></h3>\n<p>For using the  <a href=\"#templatefield\" rel=\"nofollow\">TemplateField</a>, try something like this:</p>\n<pre>from django.db.models import Model\nfrom templateselector.fields import TemplateField\n\nclass MyPage(models.Model):\n  template = TemplateField(match='^myapp/mypage/layouts/.+\\.html$')\n</pre>\n<p>For using the <a href=\"#templatechoicefield\" rel=\"nofollow\">TemplateChoiceField</a> without using the Model field, you\u2019d\ndo something like:</p>\n<pre>from django.forms import Form\nfrom templateselector.fields import TemplateChoiceField\n\nclass MyForm(Form):\n    field = TemplateChoiceField(match=\"^myapp/[0-9]+.html$\")\n</pre>\n<p>To get the widget\u2019s CSS, don\u2019t forget to use <tt>{{ form.media }}</tt> in your template!</p>\n</div>\n<div id=\"altering-the-widget-choice-size\">\n<h3><a href=\"#id24\" rel=\"nofollow\">Altering the widget choice size</a></h3>\n<p>If you\u2019d like to modify the dimensions used for each option in the widget (eg:\nyou have landscape template thumbnails instead of portrait) you\u2019ll need to\noverride the following CSS classes:</p>\n<pre>.templateselector-list-item {\n    width: ???;\n}\n.templateselector-label input {\n    top: ???;\n}\n.templateselector-thumb {\n    width: ???;\n    height: ???;\n}\n</pre>\n<p>You can probably use the <tt>#id_FIELDNAME</tt> for a given field to provide the\nnecessary specificity.</p>\n<p>You may need to provide a wrapper element if you re-use the same model/form\nattribute name (eg: <tt>{{ myform.selected_file }}</tt>) for multiple things with\ndifferent dimensions:</p>\n<pre>&lt;!-- target with\n.myform-wrapper #id_selected_file .templateselector-list-item\netc --&gt;\n&lt;div class=\"myform-wrapper\"&gt;{{ myform.selected_file }}&lt;/div&gt;\n\n&lt;!-- target with\n.myapp-wrapper #id_selected_file .templateselector-thumb\n etc --&gt;\n&lt;div class=\"myapp-wrapper\"&gt;{{ mymodelform.selected_file }}&lt;/div&gt;\n</pre>\n</div>\n<div id=\"running-the-tests\">\n<h3><a href=\"#id25\" rel=\"nofollow\">Running the tests</a></h3>\n<p>If you have a cloned copy, you can do:</p>\n<pre>python setup.py test\n</pre>\n<p>If you have tox, you can just do:</p>\n<pre>tox\n</pre>\n</div>\n<div id=\"running-the-demo\">\n<h3><a href=\"#id26\" rel=\"nofollow\">Running the demo</a></h3>\n<p>A barebones demo is provided. It assumes you\u2019re using something like <a href=\"https://virtualenv.pypa.io/en/stable/\" rel=\"nofollow\">virtualenv</a> and\n<a href=\"https://virtualenvwrapper.readthedocs.io/en/latest/\" rel=\"nofollow\">virtualenvwrapper</a> but you can probably figure it out otherwise:</p>\n<pre>mktmpenv --python=`which python3`\npip install -e git+https://github.com/kezabelle/django-template-selector.git#egg=django-templateselector\n</pre>\n<p>Then probably:</p>\n<pre>cd src/django-templateselector\npython demo_project.py runserver\n</pre>\n<p>The index page <tt>/</tt> will show you a normal version of the selection widget,\nwhile <tt>/admin/tests/mymodel/add/</tt> will show the slightly customised version\nfor the standard <a href=\"https://www.djangoproject.com/\" rel=\"nofollow\">Django</a> admin.</p>\n</div>\n</div>\n<div id=\"the-license\">\n<h2><a href=\"#id27\" rel=\"nofollow\">The license</a></h2>\n<p>It\u2019s the <a href=\"http://en.wikipedia.org/wiki/BSD_licenses#2-clause_license_.28.22Simplified_BSD_License.22_or_.22FreeBSD_License.22.29\" rel=\"nofollow\">FreeBSD</a>. There\u2019s should be a <tt>LICENSE</tt> file in the root of the repository, and in any archives.</p>\n<hr class=\"docutils\">\n<p>Copyright (c) 2017, Keryn Knight\nAll rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p>\n<ol>\n<li>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</li>\n<li>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</li>\n</ol>\n<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \u201cAS IS\u201d AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div>\n<hr class=\"docutils\">\n<div id=\"change-history-for-django-templateselector\">\n<h2><a href=\"#id28\" rel=\"nofollow\">Change history for django-templateselector</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id29\" rel=\"nofollow\">0.2.5</a></h3>\n<ul>\n<li><strong>BUGFIX:</strong> Added <tt>:focus</tt> visual styles so that keyboard navigation through a form\nincluding the widget may now indicate when selecting items.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id30\" rel=\"nofollow\">0.2.4</a></h3>\n<ul>\n<li><strong>FEATURE:</strong> Added a <a href=\"https://docs.djangoproject.com/en/stable/topics/checks/\" rel=\"nofollow\">system check</a> to ensure that the templates and styles are\nable to be loaded.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id31\" rel=\"nofollow\">0.2.3</a></h3>\n<ul>\n<li><strong>BUGFIX:</strong> Change the model level field validation (<tt><span class=\"pre\">TemplateField(match=...)</span></tt> to\nforcibly check the given value matches the regex, in addition to checking\nwhether the given value exists in one of the template loaders.</li>\n<li><strong>MISC:</strong> Still trying to master automatic deployment from Travis. One day I\u2019ll\nget sdist working again!</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id32\" rel=\"nofollow\">0.2.2</a></h3>\n<ul>\n<li><strong>MISC:</strong> Still trying to master automatic deployment from Travis. No\nfunctionality change since <tt>0.2.0</tt></li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id33\" rel=\"nofollow\">0.2.1</a></h3>\n<ul>\n<li><strong>MISC:</strong> Automatic deployment of new releases from Travis mostly worked, but the\n<tt>sdist</tt> is in poor shape (see commit <tt>44ad2a1542f2f61a73de84e0f7213bccfdb6f265</tt>)\nso I\u2019ve disabled that for now. Wheels are better anyway, right? No\nfunctionality change since <tt>0.2.0</tt></li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id34\" rel=\"nofollow\">0.2.0</a></h3>\n<ul>\n<li><strong>BUGFIX:</strong> prevent the \u201csame\u201d template showing up more than once in the\nwidget, which wouldn\u2019t be possible when using <tt>get_template</tt> (<a href=\"https://github.com/kezabelle/django-template-selector/issues/1\" rel=\"nofollow\">#1</a>)</li>\n<li><strong>FEATURE:</strong> If the form field (<tt>TemplateChoiceField</tt>) has only <strong>one</strong> valid template\noption, and the form is unbound (ie: its an <strong>add</strong> form or whatever) then\npre-select the valid choice. Only happens if the field has <tt>required=True</tt></li>\n<li><strong>FEATURE:</strong> using the <tt>get_&lt;fieldname&gt;_display</tt> as a value in a <tt>`ModelAdmin.list_display</tt>\nwill now allow for sorting by the underlying value in the database. (<a href=\"https://github.com/kezabelle/django-template-selector/issues/2\" rel=\"nofollow\">#2</a>)</li>\n<li><strong>FEATURE:</strong> if the <tt>&lt;fieldname&gt;</tt> is used as part of a <tt>ModelAdmin.list_filter</tt> it will\nshow the nice display names of any used templates, rather than their internal\npath representation. (<a href=\"https://github.com/kezabelle/django-template-selector/issues/3\" rel=\"nofollow\">#3</a>)</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id35\" rel=\"nofollow\">0.1.1</a></h3>\n<ul>\n<li><strong>MISC:</strong> First release on PyPI.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id36\" rel=\"nofollow\">0.1.0</a></h3>\n<ul>\n<li><strong>MISC:</strong> Initial development.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3152982, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "f9d48490c286f64b1e020d91db295403", "sha256": "abf1b5281b8b87ac67708a71321342446dbc5378da4b64b5df5bc4b91284cdf5"}, "downloads": -1, "filename": "django_templateselector-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f9d48490c286f64b1e020d91db295403", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21060, "upload_time": "2017-07-19T19:39:59", "upload_time_iso_8601": "2017-07-19T19:39:59.185570Z", "url": "https://files.pythonhosted.org/packages/60/b2/7f441d9e860e3a1d4d8ecc3e3d48372c50a5fbbedb7decb6b817bb9451d5/django_templateselector-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9a322da707d0851ec4bf270ee963298", "sha256": "26f890cf4a60e5b5717c205d8e6612d5ac050377445a68ca2fa39e435759f127"}, "downloads": -1, "filename": "django-templateselector-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a9a322da707d0851ec4bf270ee963298", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27697, "upload_time": "2017-07-19T19:40:02", "upload_time_iso_8601": "2017-07-19T19:40:02.469472Z", "url": "https://files.pythonhosted.org/packages/24/f2/056af91171a67f97900930d6b0192fef232d9ecbe0b3760ab0fc1d93f649/django-templateselector-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d9c43beb9b12631ee785487c70b384b5", "sha256": "3a73f0b870ef9a46f24f85b0f8018fe7fbbb3a5f45f319d2857e15188181317a"}, "downloads": -1, "filename": "django_templateselector-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d9c43beb9b12631ee785487c70b384b5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25097, "upload_time": "2017-08-23T10:55:44", "upload_time_iso_8601": "2017-08-23T10:55:44.686786Z", "url": "https://files.pythonhosted.org/packages/e0/9b/4d202a0e2485e922baa8239dadd6f91209bd45dc27e6496c1d489ddc3ada/django_templateselector-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e30a5d9f958c14c412eb2655956c2300", "sha256": "0b104c3dd5bee5c4c63d2a60b48d1792988d006f8096785bcc113c8a9240d78d"}, "downloads": -1, "filename": "django-templateselector-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e30a5d9f958c14c412eb2655956c2300", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2878941, "upload_time": "2017-08-23T10:55:47", "upload_time_iso_8601": "2017-08-23T10:55:47.432344Z", "url": "https://files.pythonhosted.org/packages/15/1c/2747dece29afa6a6dd085c3b3fc8eef593e0e4a87038d321cfb7e4fe8940/django-templateselector-0.2.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "18a225b3f6e96e818b776ca36235afba", "sha256": "dc50bb1d6c3e9abc8aad6cd8d6916f885d353256ebcbf45cc7951cd0ee59e9a0"}, "downloads": -1, "filename": "django_templateselector-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "18a225b3f6e96e818b776ca36235afba", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25496, "upload_time": "2017-08-23T12:56:12", "upload_time_iso_8601": "2017-08-23T12:56:12.426455Z", "url": "https://files.pythonhosted.org/packages/cf/22/de5a981feb8d6d405a961b60543fa2e21a42652f55f77f046450638decf1/django_templateselector-0.2.2-py2.py3-none-any.whl", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "37131268013c298e18fc4213b9a38421", "sha256": "e1243c663258fddcd89e26378bb4ff820a2f8439684dbaf6424be2d60400efcc"}, "downloads": -1, "filename": "django_templateselector-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "37131268013c298e18fc4213b9a38421", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26870, "upload_time": "2017-08-30T20:14:13", "upload_time_iso_8601": "2017-08-30T20:14:13.597364Z", "url": "https://files.pythonhosted.org/packages/13/1d/db22556323c2adaa0c0af0c826bfceb46db7c4205f0f8e70df2801d4a680/django_templateselector-0.2.4-py2.py3-none-any.whl", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "f764c14455318b7719d8cfe82ec23ec6", "sha256": "c5a406aa3cd5d130d074e58ef618e940914a19622d44747b52911552b2f37f0f"}, "downloads": -1, "filename": "django_templateselector-0.2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f764c14455318b7719d8cfe82ec23ec6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27090, "upload_time": "2017-09-06T09:58:01", "upload_time_iso_8601": "2017-09-06T09:58:01.392884Z", "url": "https://files.pythonhosted.org/packages/6a/c7/2e9c1697ee7dbd908862c74060e3acb20a7ad93f5fd00e1a281cea174b6e/django_templateselector-0.2.5-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f764c14455318b7719d8cfe82ec23ec6", "sha256": "c5a406aa3cd5d130d074e58ef618e940914a19622d44747b52911552b2f37f0f"}, "downloads": -1, "filename": "django_templateselector-0.2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f764c14455318b7719d8cfe82ec23ec6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27090, "upload_time": "2017-09-06T09:58:01", "upload_time_iso_8601": "2017-09-06T09:58:01.392884Z", "url": "https://files.pythonhosted.org/packages/6a/c7/2e9c1697ee7dbd908862c74060e3acb20a7ad93f5fd00e1a281cea174b6e/django_templateselector-0.2.5-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:52:37 2020"}