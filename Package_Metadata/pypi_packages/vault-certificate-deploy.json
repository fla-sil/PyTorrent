{"info": {"author": "Robert Vojcik", "author_email": "robert@vojcik.net", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.8", "Topic :: Database", "Topic :: Security", "Topic :: Security :: Cryptography", "Topic :: System :: Systems Administration"], "description": "# vault-cert-deploy\n\n![pipeline](https://gitlab.com/rvojcik/vault-certificate-deploy/badges/master/pipeline.svg)\n\nDeploy SSL certificates from HashiCorp's Vault secret server\nScript is able to deploy certificates from KV store of Vault\nor when you use issue version of script it use PKI secret storage.\n\nAs auth method is used [Approle](https://www.vaultproject.io/docs/auth/approle.html \"Vault Approle Doc\"), you need role and secret id\ndeployed to server from different systems/locations. More\nabout this in usecase section.\n\nOn the first look, it may be little bit strange combination of \nconfig file and cli options. You can combine them in different \nways to support various types of deployments to meet the basic\nsecurity concepts.\n\n## Why do I need Vault Server ?\n\nWe are using Let's Encrypt for almost all of our SSL/TLS certificates.\nWe also have complex infrastructure so we have to retrieve \ncertificates in central place and then we distribute them into \ndatacenters, clouds or any other applications.\n\n## How deploy work ?\n\nIt deploy certificates to specified directory and create\ntwo directories `certs` and `private`.\n\n* certs has mode 0644\n* private keys has mode 0640\n* it deploys all secret content from vault, keys as files with suitable extension <secretname>.<secretKey>\n\n## Installation\n\n### Python PyPI\n```\npip install vault-cert-deploy\n```\n\n### Manual\nManual installation\n\n```\ngit clone https://github.com/rvojcik/vault-certificate-deploy\ncd vault-certificate-deploy\nsudo python ./setup.py install \n```\n\nIn the end \n```\nvault-cert-deploy --help\n```\n\n## Example configuration\nCan be found in `config.example`. \n\nRole and Secret id can be passed from script arguments.\nYou could combine `-n` and `--cert-list` parameters.\n\nIn `vault` section of configuration it is possible to \nset `mount_point` of secret in Vault. \nBy default it is `cert`.\nYou could also change this option in arguments\n\n# Vault Configuration\n\nScript uses [Approle](https://www.vaultproject.io/docs/auth/approle.html \"Vault Approle Doc\") auth.\n\nFirst enable AppRole auth if it's not\n```\nvault auth enable approle\n```\n\nYou have to create your policy first.\nUse Vault [documentation](https://www.vaultproject.io/docs/concepts/policies.html) around policies and then continue here.\n\nExample policy with basic medium security can be\n```\n# Cert Deploy Policy\n# Give ability to\n# - read all certificates\n# - don't permit list certificates\n#\npath \"/certs/*\" {\n  capabilities = [\"read\"]\n}\n\n```\n\nConfigure your role\n```\nvault write auth/approle/role/my-role \\\nsecret_id_ttl=0 \\\ntoken_num_uses=0 \\\ntoken_ttl=20m \\\ntoken_max_ttl=30m \\\npolicies=\"my-policy,default\"\n```\n\nRetrieve your approle ID\n```\nvault read auth/approle/role/my-role/role-id\n```\n\nGet secret ID (onetime operation)\n```\nvault write -f auth/approle/role/my-role/secret-id\n```\n\n# Use Cases\nIt is important to don't have role-id and secret-id together\nin one repository or configuration management.\n\n## Puppet\nI deploy my servers with installer which create file `/etc/vault_role_id`\nwhich contain `role-id` of the approle.\n\nThen I have Puppet Configuration management which deploy this system with \nall files and `secret-id` in configuration file (`/etc/vault-deploy/config.conf`). \n\nPuppet create also file with certs/secret names `/etc/ssl-deploy-certs.conf`\n\nthen you can run deploy like this:\n```\nvault-certificate-deploy.py -c /etc/vault-deploy/config.conf \\\n  --cert-list /etc/ssl-deploy-certs.conf \\\n  --role-id $(cat /etc/vault_role_id)\n```\n\n### Why  ?\nI store Puppet configuration in Git, and therefore I have not \nrole-id and secret-id together in my repository.\nI choose to deploy `secret-id` with puppet because when need to \nrotate secret-id it is automaticly deployed by puppet to infrastructure.\n\n## What is issue version of the script ?\nIssue version of the command or script uses different Secret Storage\nEngine. It uses [PKI](https://www.vaultproject.io/api/secret/pki/index.html) which gives you ability to create\nyour own CA or Intermediate CA. Vault handle both certs generation and issuing. \n\nYou have to specify PKI mount point with `--vault-pki` option.\nThis pki mount_point is used as subdirectory of storage path in your\nconfig file. In this subdirectory we create same structure `certs` and `private`\nlike in other version of the script.\n\n### What is difference in function ?\nIssue command check if certificates you define exists, and it check their expiration time\ndefined by `--cert-min-ttl` option. \n\nIt basicaly means it generates and issue certificates for you, if they not exist, or if they are \nclose to expire. It is great automation capability in combination with Configuration\nManagement systems. You don't have to take care of the certificates anymore.\n\nIf certificates you define exists and are valid script just do nothing.\n\n### Examples\nCreate certificate server1.domin.intra on PKI mounted in pki mount point of vault.\nIf you want to issue new certificate, you have to issue it against some role. In \nour case this role is `test`.\n\nMore information about [PKI roles in documentation](https://www.vaultproject.io/docs/secrets/pki/index.html).\n```\nvault-certificate-issue-deploy --vault-pki pki -n server1.domain.intra --cert-role test\n```\n\nIf we need some subject alternative name you can define it as `--cert-extra-options`\n```\nvault-certificate-issue-deploy --vault-pki pki -n server1.domain.intra --cert-role test --cert-extra-options \"alt_names=console.domain.intra,console1.domain.intra,admin.domain.intra\"\n```\nResult of this can be something like this\n```\n X509v3 Subject Alternative Name: \n     DNS:console.domain.intra, DNS:console1.domain.intra, DNS:admin.domain.intra\n```\n\n# Security Best Practices\n* Never store your role-id and secret-id in your repository together\n* Deploy secret-id in way it's quick and easy for you to rotate/change\n* In production always use `verify_tls=yes`\n* when deploy secret-id and role-id in files/config, always set correct permissions (eg. `0400`, `0600`)\n* in vault set policy to your approle only for `read` capability, it's enough\n* for highest security set individual approle for every server and set individual policy for every server and certificate\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rvojcik/vault-certificate-deploy", "keywords": "vault_certificate_deploy,vault_cert_deploy,certificate,vault-certificate-deploy,vault-cert-deploy,hashicorp,certificates", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "vault-certificate-deploy", "package_url": "https://pypi.org/project/vault-certificate-deploy/", "platform": "", "project_url": "https://pypi.org/project/vault-certificate-deploy/", "project_urls": {"Homepage": "https://github.com/rvojcik/vault-certificate-deploy"}, "release_url": "https://pypi.org/project/vault-certificate-deploy/1.1.2/", "requires_dist": ["urllib3", "hvac (<0.10.1,>=0.9.2)", "requests (>=2.1)", "configparser", "pyOpenSSL (>=17.0)"], "requires_python": "", "summary": "System for deploying certificates from Hashicorp Vault server", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>vault-cert-deploy</h1>\n<p><img alt=\"pipeline\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27bb19f60d80bf0fe5a6ce5961645ef60bd66cb8/68747470733a2f2f6769746c61622e636f6d2f72766f6a63696b2f7661756c742d63657274696669636174652d6465706c6f792f6261646765732f6d61737465722f706970656c696e652e737667\"></p>\n<p>Deploy SSL certificates from HashiCorp's Vault secret server\nScript is able to deploy certificates from KV store of Vault\nor when you use issue version of script it use PKI secret storage.</p>\n<p>As auth method is used <a href=\"https://www.vaultproject.io/docs/auth/approle.html\" rel=\"nofollow\" title=\"Vault Approle Doc\">Approle</a>, you need role and secret id\ndeployed to server from different systems/locations. More\nabout this in usecase section.</p>\n<p>On the first look, it may be little bit strange combination of\nconfig file and cli options. You can combine them in different\nways to support various types of deployments to meet the basic\nsecurity concepts.</p>\n<h2>Why do I need Vault Server ?</h2>\n<p>We are using Let's Encrypt for almost all of our SSL/TLS certificates.\nWe also have complex infrastructure so we have to retrieve\ncertificates in central place and then we distribute them into\ndatacenters, clouds or any other applications.</p>\n<h2>How deploy work ?</h2>\n<p>It deploy certificates to specified directory and create\ntwo directories <code>certs</code> and <code>private</code>.</p>\n<ul>\n<li>certs has mode 0644</li>\n<li>private keys has mode 0640</li>\n<li>it deploys all secret content from vault, keys as files with suitable extension &lt;secretname&gt;.&lt;secretKey&gt;</li>\n</ul>\n<h2>Installation</h2>\n<h3>Python PyPI</h3>\n<pre><code>pip install vault-cert-deploy\n</code></pre>\n<h3>Manual</h3>\n<p>Manual installation</p>\n<pre><code>git clone https://github.com/rvojcik/vault-certificate-deploy\ncd vault-certificate-deploy\nsudo python ./setup.py install \n</code></pre>\n<p>In the end</p>\n<pre><code>vault-cert-deploy --help\n</code></pre>\n<h2>Example configuration</h2>\n<p>Can be found in <code>config.example</code>.</p>\n<p>Role and Secret id can be passed from script arguments.\nYou could combine <code>-n</code> and <code>--cert-list</code> parameters.</p>\n<p>In <code>vault</code> section of configuration it is possible to\nset <code>mount_point</code> of secret in Vault.\nBy default it is <code>cert</code>.\nYou could also change this option in arguments</p>\n<h1>Vault Configuration</h1>\n<p>Script uses <a href=\"https://www.vaultproject.io/docs/auth/approle.html\" rel=\"nofollow\" title=\"Vault Approle Doc\">Approle</a> auth.</p>\n<p>First enable AppRole auth if it's not</p>\n<pre><code>vault auth enable approle\n</code></pre>\n<p>You have to create your policy first.\nUse Vault <a href=\"https://www.vaultproject.io/docs/concepts/policies.html\" rel=\"nofollow\">documentation</a> around policies and then continue here.</p>\n<p>Example policy with basic medium security can be</p>\n<pre><code># Cert Deploy Policy\n# Give ability to\n# - read all certificates\n# - don't permit list certificates\n#\npath \"/certs/*\" {\n  capabilities = [\"read\"]\n}\n\n</code></pre>\n<p>Configure your role</p>\n<pre><code>vault write auth/approle/role/my-role \\\nsecret_id_ttl=0 \\\ntoken_num_uses=0 \\\ntoken_ttl=20m \\\ntoken_max_ttl=30m \\\npolicies=\"my-policy,default\"\n</code></pre>\n<p>Retrieve your approle ID</p>\n<pre><code>vault read auth/approle/role/my-role/role-id\n</code></pre>\n<p>Get secret ID (onetime operation)</p>\n<pre><code>vault write -f auth/approle/role/my-role/secret-id\n</code></pre>\n<h1>Use Cases</h1>\n<p>It is important to don't have role-id and secret-id together\nin one repository or configuration management.</p>\n<h2>Puppet</h2>\n<p>I deploy my servers with installer which create file <code>/etc/vault_role_id</code>\nwhich contain <code>role-id</code> of the approle.</p>\n<p>Then I have Puppet Configuration management which deploy this system with\nall files and <code>secret-id</code> in configuration file (<code>/etc/vault-deploy/config.conf</code>).</p>\n<p>Puppet create also file with certs/secret names <code>/etc/ssl-deploy-certs.conf</code></p>\n<p>then you can run deploy like this:</p>\n<pre><code>vault-certificate-deploy.py -c /etc/vault-deploy/config.conf \\\n  --cert-list /etc/ssl-deploy-certs.conf \\\n  --role-id $(cat /etc/vault_role_id)\n</code></pre>\n<h3>Why  ?</h3>\n<p>I store Puppet configuration in Git, and therefore I have not\nrole-id and secret-id together in my repository.\nI choose to deploy <code>secret-id</code> with puppet because when need to\nrotate secret-id it is automaticly deployed by puppet to infrastructure.</p>\n<h2>What is issue version of the script ?</h2>\n<p>Issue version of the command or script uses different Secret Storage\nEngine. It uses <a href=\"https://www.vaultproject.io/api/secret/pki/index.html\" rel=\"nofollow\">PKI</a> which gives you ability to create\nyour own CA or Intermediate CA. Vault handle both certs generation and issuing.</p>\n<p>You have to specify PKI mount point with <code>--vault-pki</code> option.\nThis pki mount_point is used as subdirectory of storage path in your\nconfig file. In this subdirectory we create same structure <code>certs</code> and <code>private</code>\nlike in other version of the script.</p>\n<h3>What is difference in function ?</h3>\n<p>Issue command check if certificates you define exists, and it check their expiration time\ndefined by <code>--cert-min-ttl</code> option.</p>\n<p>It basicaly means it generates and issue certificates for you, if they not exist, or if they are\nclose to expire. It is great automation capability in combination with Configuration\nManagement systems. You don't have to take care of the certificates anymore.</p>\n<p>If certificates you define exists and are valid script just do nothing.</p>\n<h3>Examples</h3>\n<p>Create certificate server1.domin.intra on PKI mounted in pki mount point of vault.\nIf you want to issue new certificate, you have to issue it against some role. In\nour case this role is <code>test</code>.</p>\n<p>More information about <a href=\"https://www.vaultproject.io/docs/secrets/pki/index.html\" rel=\"nofollow\">PKI roles in documentation</a>.</p>\n<pre><code>vault-certificate-issue-deploy --vault-pki pki -n server1.domain.intra --cert-role test\n</code></pre>\n<p>If we need some subject alternative name you can define it as <code>--cert-extra-options</code></p>\n<pre><code>vault-certificate-issue-deploy --vault-pki pki -n server1.domain.intra --cert-role test --cert-extra-options \"alt_names=console.domain.intra,console1.domain.intra,admin.domain.intra\"\n</code></pre>\n<p>Result of this can be something like this</p>\n<pre><code> X509v3 Subject Alternative Name: \n     DNS:console.domain.intra, DNS:console1.domain.intra, DNS:admin.domain.intra\n</code></pre>\n<h1>Security Best Practices</h1>\n<ul>\n<li>Never store your role-id and secret-id in your repository together</li>\n<li>Deploy secret-id in way it's quick and easy for you to rotate/change</li>\n<li>In production always use <code>verify_tls=yes</code></li>\n<li>when deploy secret-id and role-id in files/config, always set correct permissions (eg. <code>0400</code>, <code>0600</code>)</li>\n<li>in vault set policy to your approle only for <code>read</code> capability, it's enough</li>\n<li>for highest security set individual approle for every server and set individual policy for every server and certificate</li>\n</ul>\n\n          </div>"}, "last_serial": 7189450, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "bd62d015d5e63e5ea42504629ab3628b", "sha256": "ff1c80a41db954eaa186c50ab6af4463a4db81eeb05320940eb82d26b194ff14"}, "downloads": -1, "filename": "vault_certificate_deploy-1.0.0-py2.7.egg", "has_sig": false, "md5_digest": "bd62d015d5e63e5ea42504629ab3628b", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 7252, "upload_time": "2019-06-28T11:50:23", "upload_time_iso_8601": "2019-06-28T11:50:23.246281Z", "url": "https://files.pythonhosted.org/packages/4e/79/abefa906cd6d2eac7c1b727082fce20205b029f4d71198dd0aae96057f51/vault_certificate_deploy-1.0.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "06b4df60f2bdad97975b02b0ea8313cd", "sha256": "b5863b1b1cdb57d78fbfeb4e94d32af4df793c6161ab181d16ca927889e1f1c3"}, "downloads": -1, "filename": "vault_certificate_deploy-1.0.0-py3.6.egg", "has_sig": false, "md5_digest": "06b4df60f2bdad97975b02b0ea8313cd", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 7290, "upload_time": "2019-06-28T11:50:24", "upload_time_iso_8601": "2019-06-28T11:50:24.464856Z", "url": "https://files.pythonhosted.org/packages/3e/8a/48c6ca4f614773c82fddb4597c0025306c58376a3c97b05546cc68f65729/vault_certificate_deploy-1.0.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "170a8e1a5e929732d3a3a052095ebca6", "sha256": "a07134ae87896332f1fb48eb60532a2c9d4fac6355afe1f6b8a9a9b23654e753"}, "downloads": -1, "filename": "vault_certificate_deploy-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "170a8e1a5e929732d3a3a052095ebca6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19534, "upload_time": "2019-06-28T11:50:21", "upload_time_iso_8601": "2019-06-28T11:50:21.165076Z", "url": "https://files.pythonhosted.org/packages/ad/57/a269e703a0434b3b56e61c495e86c44658dfd99c204067123bacbaa891df/vault_certificate_deploy-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27dc6416520fca0888f3d881ee8261e6", "sha256": "5cadeec6f47dbfe90a293e40044237fbb99732597a1fcf05b3cd6678f44133e6"}, "downloads": -1, "filename": "vault-certificate-deploy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "27dc6416520fca0888f3d881ee8261e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6912, "upload_time": "2019-06-28T11:50:25", "upload_time_iso_8601": "2019-06-28T11:50:25.994332Z", "url": "https://files.pythonhosted.org/packages/36/82/4547c625e1a00ca97e7bce755110e8c1ccd146c4701daf69c9c9b7779be9/vault-certificate-deploy-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "1da6e07e03e97979ab20e48f94dddf63", "sha256": "4fbb586513ccc15400e279edf2840f223073bbc90ffe48dc809ff72b0098c636"}, "downloads": -1, "filename": "vault_certificate_deploy-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "1da6e07e03e97979ab20e48f94dddf63", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 9311, "upload_time": "2019-06-28T13:49:20", "upload_time_iso_8601": "2019-06-28T13:49:20.731161Z", "url": "https://files.pythonhosted.org/packages/d0/00/58d570635e2a9856910896e58db1cb041eac322b031bf98d2cc3bf0735ff/vault_certificate_deploy-1.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8edf96e73096717027b8e6e6ef83f96", "sha256": "f60f2b3a9c36e88737e52b7cba319b840f9a541832d18b2855223183915d65f4"}, "downloads": -1, "filename": "vault_certificate_deploy-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d8edf96e73096717027b8e6e6ef83f96", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21629, "upload_time": "2019-06-28T13:28:54", "upload_time_iso_8601": "2019-06-28T13:28:54.435695Z", "url": "https://files.pythonhosted.org/packages/eb/af/c5d2e0f5f65fb575c54ea1eae2646954f6296cae2319b2f9e864a2f3a393/vault_certificate_deploy-1.0.1-py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "8a2571a0b12e1fcb8d1189352265952b", "sha256": "1b13f18a64bac097bd5c6e921b6c3d84f259493624453fe2dcf668acd6da1b69"}, "downloads": -1, "filename": "vault_certificate_deploy-1.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "8a2571a0b12e1fcb8d1189352265952b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 9312, "upload_time": "2019-06-28T14:05:59", "upload_time_iso_8601": "2019-06-28T14:05:59.520912Z", "url": "https://files.pythonhosted.org/packages/76/96/3fd38671807c3495e5c898ccd30fc40b07ca75f94d3103ac2cf868b79eb2/vault_certificate_deploy-1.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "554fb3732b989a1279d3357cd4bc86a9", "sha256": "e976a3eb5cd1d7558a9f943867f83f4846b964e150c37d86f8bd2219fc061b4e"}, "downloads": -1, "filename": "vault_certificate_deploy-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "554fb3732b989a1279d3357cd4bc86a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21631, "upload_time": "2019-06-28T14:06:01", "upload_time_iso_8601": "2019-06-28T14:06:01.033119Z", "url": "https://files.pythonhosted.org/packages/a2/63/88def7fc166d215257265f5ae0192eb0995a156a3d9d993be519ab72057c/vault_certificate_deploy-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a07a876d9930b2bf5555d65fb17cbfb3", "sha256": "4f37f4a0c37cfc141a0c4f032a04ede6303188d3f1e7a0f0e3551f137897f93d"}, "downloads": -1, "filename": "vault-certificate-deploy-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a07a876d9930b2bf5555d65fb17cbfb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8752, "upload_time": "2019-06-28T14:06:02", "upload_time_iso_8601": "2019-06-28T14:06:02.702632Z", "url": "https://files.pythonhosted.org/packages/21/54/ca3851d92aca12dd9a0806aa8530d5df50970c0971be3dbc6cc263e6e64e/vault-certificate-deploy-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "a9b63d8eeeb22618f94f6e06982a4243", "sha256": "ff741365a99a99dd678b760d028f3f53701de23149fa97a00122d61874f245ba"}, "downloads": -1, "filename": "vault_certificate_deploy-1.0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "a9b63d8eeeb22618f94f6e06982a4243", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 9329, "upload_time": "2019-06-28T15:18:33", "upload_time_iso_8601": "2019-06-28T15:18:33.046406Z", "url": "https://files.pythonhosted.org/packages/f1/08/625a467493aafec5ed2d2154ce07e938ca644bdd06908fd33191762f67c4/vault_certificate_deploy-1.0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85eaa8b9003ea769b5954dffb6e3a6c9", "sha256": "b61330b10bee178b0d5dcdab82c97d05e29a8dc2444d99d604fe6f569875247c"}, "downloads": -1, "filename": "vault_certificate_deploy-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "85eaa8b9003ea769b5954dffb6e3a6c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21652, "upload_time": "2019-06-28T15:18:34", "upload_time_iso_8601": "2019-06-28T15:18:34.918847Z", "url": "https://files.pythonhosted.org/packages/b6/c7/09bb649a21ec5356b7dd00c9c9d9ca95dd444b1050cfdb280d4372c1ae80/vault_certificate_deploy-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acc526aa14b3cb20e15a6249ec268e39", "sha256": "61be020cce06dcc2a75f8d0c8ed128f31a245999cd41dd22b2f5f9e8f3a0a671"}, "downloads": -1, "filename": "vault-certificate-deploy-1.0.3.tar.gz", "has_sig": false, "md5_digest": "acc526aa14b3cb20e15a6249ec268e39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8766, "upload_time": "2019-06-28T15:18:36", "upload_time_iso_8601": "2019-06-28T15:18:36.554690Z", "url": "https://files.pythonhosted.org/packages/e4/a5/0d450df06bbcac3fbc9f8896d934d1b6d930ebd5ac2694f63be27bc65b12/vault-certificate-deploy-1.0.3.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "782895b22bfdc4d18c5443afa08cc1b8", "sha256": "f051c944ff4b50d3a047bbdfc0b07a098464bd039e317d36d94d3a901797d4ed"}, "downloads": -1, "filename": "vault_certificate_deploy-1.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "782895b22bfdc4d18c5443afa08cc1b8", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 27733, "upload_time": "2019-11-12T08:13:10", "upload_time_iso_8601": "2019-11-12T08:13:10.877404Z", "url": "https://files.pythonhosted.org/packages/e9/67/b6140408c4f55256f17cda58daaa6d7b558f43cd4bdebfa2f491212f205e/vault_certificate_deploy-1.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d34abccdfab1f14f9d64ef3f253f6967", "sha256": "0fe060a7d8ebf5af7499af79fd2597536c2a5a26547f1865a456507aeb133ef5"}, "downloads": -1, "filename": "vault_certificate_deploy-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d34abccdfab1f14f9d64ef3f253f6967", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27733, "upload_time": "2019-11-12T08:13:12", "upload_time_iso_8601": "2019-11-12T08:13:12.389296Z", "url": "https://files.pythonhosted.org/packages/c0/67/390868d09bfe3bd318b89dda12601b75355020bd7521be6391046963728b/vault_certificate_deploy-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b1313d6fa55e528afc2c8d5a87861cd", "sha256": "c11374d6d47f2f2a1ed35efe6a1afb7ca1f3bdfe7560499cbc5ada6d79b04037"}, "downloads": -1, "filename": "vault-certificate-deploy-1.1.1.tar.gz", "has_sig": false, "md5_digest": "1b1313d6fa55e528afc2c8d5a87861cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11569, "upload_time": "2019-11-12T08:13:13", "upload_time_iso_8601": "2019-11-12T08:13:13.909783Z", "url": "https://files.pythonhosted.org/packages/f1/05/87206c243ced5e57885342c747bc77757e051a70ac2bcf7428a839a8cf86/vault-certificate-deploy-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "a19504f593f3bc3de77ee701eab7ff26", "sha256": "fe4400c5fc5dce8cee8ed27def5e1b17be5884a6602a1e56803af294e2140b3e"}, "downloads": -1, "filename": "vault_certificate_deploy-1.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "a19504f593f3bc3de77ee701eab7ff26", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 27743, "upload_time": "2020-05-07T15:25:25", "upload_time_iso_8601": "2020-05-07T15:25:25.157364Z", "url": "https://files.pythonhosted.org/packages/fc/57/463354b83e8d89bf720c31a6f12bb45d282ec71cbb00b6f6826067c06f54/vault_certificate_deploy-1.1.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd91e6a0dd0c6ea992b5e25a2470d1e4", "sha256": "c3b33b6826cf82397173742b695fd168aeed7d167cb2e687ab76d7b277834935"}, "downloads": -1, "filename": "vault_certificate_deploy-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "dd91e6a0dd0c6ea992b5e25a2470d1e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27742, "upload_time": "2020-05-07T15:25:26", "upload_time_iso_8601": "2020-05-07T15:25:26.153968Z", "url": "https://files.pythonhosted.org/packages/45/c7/d608937e2c229f018ab7e0681252816d6eef2f2950350539bc836b91fced/vault_certificate_deploy-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "559ea6bada333662e82c933092fc7b94", "sha256": "79a8fe0a7a21418ca699980f1a580991813176f8b5a7ff9018708624e5788b9a"}, "downloads": -1, "filename": "vault-certificate-deploy-1.1.2.tar.gz", "has_sig": false, "md5_digest": "559ea6bada333662e82c933092fc7b94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14277, "upload_time": "2020-05-07T15:25:27", "upload_time_iso_8601": "2020-05-07T15:25:27.014138Z", "url": "https://files.pythonhosted.org/packages/f2/20/595dea0f02064995d23de2ac4c1d253e8309098dbba91993c41a6a7c4fda/vault-certificate-deploy-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a19504f593f3bc3de77ee701eab7ff26", "sha256": "fe4400c5fc5dce8cee8ed27def5e1b17be5884a6602a1e56803af294e2140b3e"}, "downloads": -1, "filename": "vault_certificate_deploy-1.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "a19504f593f3bc3de77ee701eab7ff26", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 27743, "upload_time": "2020-05-07T15:25:25", "upload_time_iso_8601": "2020-05-07T15:25:25.157364Z", "url": "https://files.pythonhosted.org/packages/fc/57/463354b83e8d89bf720c31a6f12bb45d282ec71cbb00b6f6826067c06f54/vault_certificate_deploy-1.1.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd91e6a0dd0c6ea992b5e25a2470d1e4", "sha256": "c3b33b6826cf82397173742b695fd168aeed7d167cb2e687ab76d7b277834935"}, "downloads": -1, "filename": "vault_certificate_deploy-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "dd91e6a0dd0c6ea992b5e25a2470d1e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27742, "upload_time": "2020-05-07T15:25:26", "upload_time_iso_8601": "2020-05-07T15:25:26.153968Z", "url": "https://files.pythonhosted.org/packages/45/c7/d608937e2c229f018ab7e0681252816d6eef2f2950350539bc836b91fced/vault_certificate_deploy-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "559ea6bada333662e82c933092fc7b94", "sha256": "79a8fe0a7a21418ca699980f1a580991813176f8b5a7ff9018708624e5788b9a"}, "downloads": -1, "filename": "vault-certificate-deploy-1.1.2.tar.gz", "has_sig": false, "md5_digest": "559ea6bada333662e82c933092fc7b94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14277, "upload_time": "2020-05-07T15:25:27", "upload_time_iso_8601": "2020-05-07T15:25:27.014138Z", "url": "https://files.pythonhosted.org/packages/f2/20/595dea0f02064995d23de2ac4c1d253e8309098dbba91993c41a6a7c4fda/vault-certificate-deploy-1.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:40 2020"}