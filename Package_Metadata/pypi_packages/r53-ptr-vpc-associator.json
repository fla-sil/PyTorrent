{"info": {"author": "Will Rubel", "author_email": "willrubel@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# r53_ptr_vpc_associator\n\nThis is a program to association reverse zones to vpcs.  It is associated with https://github.com/aws-samples/aws-lambda-ddns-function\n\nPrerequisites\n=============\n\nIt is highly recommended you run this package within a python virtual environment, so\nyou do not affect your desktop/laptop.  To setup a python virtual environment, you should make \nsure you have python3 installed, and do the following.\n\nNOTE:  Why am I doing this.  With a python virtual environment, you can create as\nmany virtual environmentsa as you would like, and with different python versions.  These\nvirtual environments are isolated in a directory, and will not affect anything else on\nyour computer.  This way, you can test and ensure things will work.\n\nFirst, figure out the path to the python version installed on your machine.\n\n    which python3\n    /usr/local/bin/python3\n\nNext, you should pip install the virtualenv package\n\n    pip install virtualenv\n\nNext, you should create a directory, where you are going to keep the virtual environments,\nand create a new virtualenv by using the path to the python version you found above.\n\n    mkdir ~/virtual_environments\n    cd virtual_environments\n    virtualenv -p /usr/local/bin/python3 my_python3_virtualenv\n\nTo activate the virtual environment\n\n    source ~/virtual_environments/my_python3_virutalenv/bin/activate\n\nNOTE:  To deactivate the virtual environment\n\n    deactivate\n\nInstallation\n============\n\nFor general usage:\n\n    pip install r53_ptr_vpc_associator\n\nFor local development:\n\n    git clone https://github.com/rubelw/r53_ptr_vpc_associator\n    cd r53_ptr_vpc_associator\n    pip install --editable .  # Install the local dir as a package, including the 'dev' extras\n\nExample\n=======\n\nGetting help\n\n    $ associator --help\n    Usage: associator [OPTIONS] COMMAND [ARGS]...\n\n    Options:\n      --version  Show the version and exit.\n      --help     Show this message and exit.\n\n    Commands:\n      associate  Associated hosted zones to vpc\n      zone-list  List vpcs for hosted zones\n\nListing current zone/vpc associations\n\n    $ associator zone-list --profile-name default\n    {\n            '/hostedzone/Z1H1CDD4PZKKPB': [\n            {\n                'VPCRegion': 'us-east-1',\n                'VPCId': 'vpc-99999999'\n            },\n            {\n                'VPCRegion': 'us-east-2',\n                'VPCId': 'vpc-99999999'\n            }\n        ]\n\t}\n\nAssociating zones\n\n    $ associator associate --profile-name default --vpc-id vpc-99999999  --vpc-region us-east-2\n    [\n        'Successfully associated zone: /hostedzone/A3G1CDD4PZKKPB with vpc: vpc-99999999',\n        'Successfully associated zone: /hostedzone/HR2F2BVHDW5UD with vpc: vpc-99999999',\n        'Successfully associated zone: /hostedzone/V6B06KVZ0ZL9U5 with vpc: vpc-99999999',\n        'Successfully associated zone: /hostedzone/D7JTQ7EDFFYOWN with vpc: vpc-99999999'\n    ]\n\n\n### To run as a lambda\n\nRun the make_lambda-zip command.  This will utilize the /tmp directory to\ncreate the package.\n\n    associator make-lambda-zip\n\n    ################################################################################\n    Zip package located at: /tmp/r53_ptr_vpc_associator/LambdaDeploymentPackage.zip\n    ################################################################################\n\nDeploy the lambda and you would any other lambda package, but ensure the following\nenvironmental variables are set.\n\n    PROFILE_NAME = lambda\n    VPC_ID       = vpc-xxxxxxx\n    VPC_REGION   = us-east-1\n\n\nOnce deployed, you can test the lambda by creating any test in the console.\nThe lambda does not use the event message, so any event message will work to\ntrigger the lambda.\n\n\n### Testing\n\nBefore commiting changes, be sure to run the test suite:\n\n    tox\n\n### Python 3 Compatibility\n\nThis tool is compatible with **python 3.5+**.\n\nThe [tox](http://tox.readthedocs.io/en/latest/index.html) library is used to run tests with multiple python versions. To run these tests, first ensure that all supported python versions are installed locally. Then, simply run:\n\n    tox\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rubelw/r53_ptr_vpc_associator", "keywords": "aws,route53,vpc", "license": "", "maintainer": "", "maintainer_email": "", "name": "r53-ptr-vpc-associator", "package_url": "https://pypi.org/project/r53-ptr-vpc-associator/", "platform": "any", "project_url": "https://pypi.org/project/r53-ptr-vpc-associator/", "project_urls": {"Homepage": "https://github.com/rubelw/r53_ptr_vpc_associator"}, "release_url": "https://pypi.org/project/r53-ptr-vpc-associator/0.1.2/", "requires_dist": ["boto3 (>=1.4.3)", "requests (>=2.18)", "Click (>=6.7)", "configparser (>=3.5.0)", "future (>=0.16.0)", "six (>=1.11.0)", "coverage (==4.0.3)", "pip"], "requires_python": "", "summary": "Associates route53 PTR records to particular vpc.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>r53_ptr_vpc_associator</h1>\n<p>This is a program to association reverse zones to vpcs.  It is associated with <a href=\"https://github.com/aws-samples/aws-lambda-ddns-function\" rel=\"nofollow\">https://github.com/aws-samples/aws-lambda-ddns-function</a></p>\n<h1>Prerequisites</h1>\n<p>It is highly recommended you run this package within a python virtual environment, so\nyou do not affect your desktop/laptop.  To setup a python virtual environment, you should make\nsure you have python3 installed, and do the following.</p>\n<p>NOTE:  Why am I doing this.  With a python virtual environment, you can create as\nmany virtual environmentsa as you would like, and with different python versions.  These\nvirtual environments are isolated in a directory, and will not affect anything else on\nyour computer.  This way, you can test and ensure things will work.</p>\n<p>First, figure out the path to the python version installed on your machine.</p>\n<pre><code>which python3\n/usr/local/bin/python3\n</code></pre>\n<p>Next, you should pip install the virtualenv package</p>\n<pre><code>pip install virtualenv\n</code></pre>\n<p>Next, you should create a directory, where you are going to keep the virtual environments,\nand create a new virtualenv by using the path to the python version you found above.</p>\n<pre><code>mkdir ~/virtual_environments\ncd virtual_environments\nvirtualenv -p /usr/local/bin/python3 my_python3_virtualenv\n</code></pre>\n<p>To activate the virtual environment</p>\n<pre><code>source ~/virtual_environments/my_python3_virutalenv/bin/activate\n</code></pre>\n<p>NOTE:  To deactivate the virtual environment</p>\n<pre><code>deactivate\n</code></pre>\n<h1>Installation</h1>\n<p>For general usage:</p>\n<pre><code>pip install r53_ptr_vpc_associator\n</code></pre>\n<p>For local development:</p>\n<pre><code>git clone https://github.com/rubelw/r53_ptr_vpc_associator\ncd r53_ptr_vpc_associator\npip install --editable .  # Install the local dir as a package, including the 'dev' extras\n</code></pre>\n<h1>Example</h1>\n<p>Getting help</p>\n<pre><code>$ associator --help\nUsage: associator [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --version  Show the version and exit.\n  --help     Show this message and exit.\n\nCommands:\n  associate  Associated hosted zones to vpc\n  zone-list  List vpcs for hosted zones\n</code></pre>\n<p>Listing current zone/vpc associations</p>\n<pre><code>$ associator zone-list --profile-name default\n{\n        '/hostedzone/Z1H1CDD4PZKKPB': [\n        {\n            'VPCRegion': 'us-east-1',\n            'VPCId': 'vpc-99999999'\n        },\n        {\n            'VPCRegion': 'us-east-2',\n            'VPCId': 'vpc-99999999'\n        }\n    ]\n}\n</code></pre>\n<p>Associating zones</p>\n<pre><code>$ associator associate --profile-name default --vpc-id vpc-99999999  --vpc-region us-east-2\n[\n    'Successfully associated zone: /hostedzone/A3G1CDD4PZKKPB with vpc: vpc-99999999',\n    'Successfully associated zone: /hostedzone/HR2F2BVHDW5UD with vpc: vpc-99999999',\n    'Successfully associated zone: /hostedzone/V6B06KVZ0ZL9U5 with vpc: vpc-99999999',\n    'Successfully associated zone: /hostedzone/D7JTQ7EDFFYOWN with vpc: vpc-99999999'\n]\n</code></pre>\n<h3>To run as a lambda</h3>\n<p>Run the make_lambda-zip command.  This will utilize the /tmp directory to\ncreate the package.</p>\n<pre><code>associator make-lambda-zip\n\n################################################################################\nZip package located at: /tmp/r53_ptr_vpc_associator/LambdaDeploymentPackage.zip\n################################################################################\n</code></pre>\n<p>Deploy the lambda and you would any other lambda package, but ensure the following\nenvironmental variables are set.</p>\n<pre><code>PROFILE_NAME = lambda\nVPC_ID       = vpc-xxxxxxx\nVPC_REGION   = us-east-1\n</code></pre>\n<p>Once deployed, you can test the lambda by creating any test in the console.\nThe lambda does not use the event message, so any event message will work to\ntrigger the lambda.</p>\n<h3>Testing</h3>\n<p>Before commiting changes, be sure to run the test suite:</p>\n<pre><code>tox\n</code></pre>\n<h3>Python 3 Compatibility</h3>\n<p>This tool is compatible with <strong>python 3.5+</strong>.</p>\n<p>The <a href=\"http://tox.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">tox</a> library is used to run tests with multiple python versions. To run these tests, first ensure that all supported python versions are installed locally. Then, simply run:</p>\n<pre><code>tox\n</code></pre>\n\n          </div>"}, "last_serial": 5237889, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "4483b032c38f43ad6fefc67d2362e7d6", "sha256": "7ed00c1387222a21d71b2966f2ac099d88e5daf93c3fec489bdf5ebf99b66264"}, "downloads": -1, "filename": "r53_ptr_vpc_associator-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4483b032c38f43ad6fefc67d2362e7d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8607, "upload_time": "2019-05-07T12:07:50", "upload_time_iso_8601": "2019-05-07T12:07:50.667497Z", "url": "https://files.pythonhosted.org/packages/1a/5a/e8756ac9f56402b68c993c53d8f379d3592c1e2d2f0bf892c6f0f9ace797/r53_ptr_vpc_associator-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fbcbd70686d84bdc15127b9dd83d03dd", "sha256": "3b48514c133ebfbf0f9a636f4970d99cc2e77a5bf04e2cf0fa2602213bcd9e92"}, "downloads": -1, "filename": "r53_ptr_vpc_associator-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fbcbd70686d84bdc15127b9dd83d03dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8350, "upload_time": "2019-05-07T12:07:52", "upload_time_iso_8601": "2019-05-07T12:07:52.030577Z", "url": "https://files.pythonhosted.org/packages/cc/a8/9a6c674f3fd0563a5dfbcb3e8e739dcf9d8fb2ed87b73a5c749bba7d336c/r53_ptr_vpc_associator-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4483b032c38f43ad6fefc67d2362e7d6", "sha256": "7ed00c1387222a21d71b2966f2ac099d88e5daf93c3fec489bdf5ebf99b66264"}, "downloads": -1, "filename": "r53_ptr_vpc_associator-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4483b032c38f43ad6fefc67d2362e7d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8607, "upload_time": "2019-05-07T12:07:50", "upload_time_iso_8601": "2019-05-07T12:07:50.667497Z", "url": "https://files.pythonhosted.org/packages/1a/5a/e8756ac9f56402b68c993c53d8f379d3592c1e2d2f0bf892c6f0f9ace797/r53_ptr_vpc_associator-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fbcbd70686d84bdc15127b9dd83d03dd", "sha256": "3b48514c133ebfbf0f9a636f4970d99cc2e77a5bf04e2cf0fa2602213bcd9e92"}, "downloads": -1, "filename": "r53_ptr_vpc_associator-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fbcbd70686d84bdc15127b9dd83d03dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8350, "upload_time": "2019-05-07T12:07:52", "upload_time_iso_8601": "2019-05-07T12:07:52.030577Z", "url": "https://files.pythonhosted.org/packages/cc/a8/9a6c674f3fd0563a5dfbcb3e8e739dcf9d8fb2ed87b73a5c749bba7d336c/r53_ptr_vpc_associator-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:10 2020"}