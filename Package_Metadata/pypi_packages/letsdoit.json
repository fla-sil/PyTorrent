{"info": {"author": "Thomas Kluyver", "author_email": "thomas@kluyver.me.uk", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Topic :: Software Development :: Build Tools"], "description": "Letsdoit\n========\n\nLets doit_ read tasks defined using classes, decorated functions or function\ncalls.\n\nA sample dodo.py file::\n\n    from letsdoit import TaskBase, task\n\n    # Define a task using a decorator.\n    @task(file_dep=['dodo.py'])\n    def simple():\n        print \"hi\"\n\n    # By calling a function.\n    compile = task(actions=['cc -c main.c'],\n                   file_dep=[\"main.c\", \"defs.h\"],\n                   targets=['main.o'],\n                  )\n\n    # A class with a run() method\n    class hello(TaskBase):\n        \"\"\"Hello from Python.\"\"\"\n        targets = ['hello.txt']\n\n        def run(self):\n            with open(self.targets[0], \"a\") as output:\n                output.write(\"Hello world.\")\n\n    # A class with a list of actions.\n    class checker(TaskBase):\n        \"\"\"Run pyflakes.\"\"\"\n        actions = ['pyflakes letsdoit.py']\n        file_dep = ['letsdoit.py']\n\n\n.. _doit: http://pydoit.org/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/takluyver/letsdoit", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "letsdoit", "package_url": "https://pypi.org/project/letsdoit/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/letsdoit/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/takluyver/letsdoit"}, "release_url": "https://pypi.org/project/letsdoit/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Lets doit read tasks defined using classes, decorated functions or function calls.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Lets <a href=\"http://pydoit.org/\" rel=\"nofollow\">doit</a> read tasks defined using classes, decorated functions or function\ncalls.</p>\n<p>A sample dodo.py file:</p>\n<pre>from letsdoit import TaskBase, task\n\n# Define a task using a decorator.\n@task(file_dep=['dodo.py'])\ndef simple():\n    print \"hi\"\n\n# By calling a function.\ncompile = task(actions=['cc -c main.c'],\n               file_dep=[\"main.c\", \"defs.h\"],\n               targets=['main.o'],\n              )\n\n# A class with a run() method\nclass hello(TaskBase):\n    \"\"\"Hello from Python.\"\"\"\n    targets = ['hello.txt']\n\n    def run(self):\n        with open(self.targets[0], \"a\") as output:\n            output.write(\"Hello world.\")\n\n# A class with a list of actions.\nclass checker(TaskBase):\n    \"\"\"Run pyflakes.\"\"\"\n    actions = ['pyflakes letsdoit.py']\n    file_dep = ['letsdoit.py']\n</pre>\n\n          </div>"}, "last_serial": 1026489, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7ba71e2b64fc4d070923c1a186700d49", "sha256": "0ca44e6b7e99e99d5fd9c2880eaccedb0a7c359695b6045bdc046ce341d51623"}, "downloads": -1, "filename": "letsdoit-0.1.tar.gz", "has_sig": true, "md5_digest": "7ba71e2b64fc4d070923c1a186700d49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1601, "upload_time": "2013-02-26T13:28:14", "upload_time_iso_8601": "2013-02-26T13:28:14.411895Z", "url": "https://files.pythonhosted.org/packages/5d/74/2df69b846eb09bfaf91e1d7355dc9dcc9b68274cd3e3600964c890ae2ba2/letsdoit-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "cff8bb14e7d2e8d5c6137668df0aa045", "sha256": "5d4a103933c17bbb334fda60cdbecd8d359022c08f5ec303d6359288cc5f5132"}, "downloads": -1, "filename": "letsdoit-0.1.1.tar.gz", "has_sig": true, "md5_digest": "cff8bb14e7d2e8d5c6137668df0aa045", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1713, "upload_time": "2014-03-11T23:28:07", "upload_time_iso_8601": "2014-03-11T23:28:07.017304Z", "url": "https://files.pythonhosted.org/packages/e5/47/20ecd61ea0952628b1308a426eedacbfe7a9bc3ffa15863d0ab9d8fd5313/letsdoit-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cff8bb14e7d2e8d5c6137668df0aa045", "sha256": "5d4a103933c17bbb334fda60cdbecd8d359022c08f5ec303d6359288cc5f5132"}, "downloads": -1, "filename": "letsdoit-0.1.1.tar.gz", "has_sig": true, "md5_digest": "cff8bb14e7d2e8d5c6137668df0aa045", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1713, "upload_time": "2014-03-11T23:28:07", "upload_time_iso_8601": "2014-03-11T23:28:07.017304Z", "url": "https://files.pythonhosted.org/packages/e5/47/20ecd61ea0952628b1308a426eedacbfe7a9bc3ffa15863d0ab9d8fd5313/letsdoit-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:54 2020"}