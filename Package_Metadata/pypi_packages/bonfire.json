{"info": {"author": "Malte Harder", "author_email": "malte.harder@blue-yonder.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Programming Language :: Python", "Topic :: Utilities"], "description": "=======\nbonfire\n=======\n\nBonfire is a command line interface to query Graylog searches via the REST API. It tries to emulate the feeling of using tail on a local file.\n\nUsage\n=====\n\nExamples::\n\n    > bonfire -h logserver -u jdoe -@ \"10 minutes ago\" \"*\"\n    ...\n\n    > bonfire -h logserver -u jdoe -f \"source:localhost AND level:2\"\n    ...\n\nBonfire usage::\n\n    Usage: bonfire [OPTIONS] [QUERY]\n\n      Bonfire - An interactive graylog cli client\n\n    Options:\n      --node TEXT                     Label of a preconfigured graylog node\n      -h, --host TEXT                 Your graylog node's host\n      -s, --tls                       Use HTTPS\n      --port INTEGER                  Your graylog port (default: 12900)\n      --endpoint TEXT                 Your graylog API endpoint e.g /api (default:\n                                      /)\n      -u, --username TEXT             Your graylog username\n      -p, --password TEXT             Your graylog password (default: prompt)\n      -k, --keyring / -nk, --no-keyring\n                                      Use keyring to store/retrieve password\n      -@, --search-from TEXT          Query range from\n      -#, --search-to TEXT            Query range to (default: now)\n      -t, --tail                      Show the last n lines for the query\n                                      (default)\n      -d, --dump                      Print the query result as a csv\n      -o, --output TEXT               Output logs to file (only tail/dump mode)\n      -f, --follow                    Poll the logging server for new logs\n                                      matching the query (sets search from to now,\n                                      limit to None)\n      -l, --interval INTEGER          Polling interval in ms (default: 1000)\n      -n, --limit INTEGER             Limit the number of results (default: 10)\n      -a, --latency INTEGER           Latency of polling queries (default: 2)\n      -r, --stream TEXT               Stream ID of the stream to query (default:\n                                      no stream filter)\n      -e, --field TEXT                Fields to include in the query result\n      -x, --template-option TEXT      Template options for the stored query\n      -s, --sort TEXT                 Field used for sorting (default: timestamp)\n      --asc / --desc                  Sort ascending / descending\n      --help                          Show this message and exit.\n\nConfiguration\n=============\n\nBonfire can be configured. It will look for a ``~/.bonfire.cfg`` or a ``bonfire.cfg`` (in the current directory). The\nconfiguration file can specify API nodes. If no host is specified a node with the name ``default`` will be used. You can\nalso configure queries which can be referenced by starting your query with a colon::\n\n    [node:default]\n    host=1.2.3.4\n    port=12900\n    endpoint=/\n    username=jdoe\n\n    [node:dev]\n    host=4.3.2.1\n    port=9000\n    endpoint=/api\n    username=jdoe\n\n    [query:example]\n    query=facility:*foo* AND source:*bar*\n    from=2015-03-01 15:00:00\n    limit=100\n    fields=message,name,facility,source\n\nNow you can run queries via such as::\n\n    > bonfire --node=dev :example\n    ... runs the example query on the node dev\n\n    > bonfire :example\n    ... runs the example query on the default node\n\nQuery Templates\n---------------\n\nOptions\n=======\n\nQueries\n=======\n\nKnown Bugs\n==========\n\n* bonfire expects graylog's timezone to be UTC.\n\nRelease Notes\n=============\n\n* v0.0.7: Issues fixes, TLS and Proxy support\n    * Adds support for proxies\n    * Adds support for https urls\n    * Add timestamps to the dump format\n* v0.0.6: Documentation fix\n    * Change of README.rst\n* v0.0.5: Clean up\n    * Removed terminal UI ideas\n    * Added first tests\n    * Fixed date and time handling with timezones\n    * Added python3 compatibility\n* v0.0.4: Extended documentation & stream access\n    * Use the first stream the user has access to if no stream is specified and the user has no global search rights\n* v0.0.3: Small fixes\n    * Use accept header in GET requests.\n    * Fix bug when querying specific fields\n* v0.0.1: Initial release\n    * Limited feature set.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://...", "keywords": "", "license": "new BSD", "maintainer": "", "maintainer_email": "", "name": "bonfire", "package_url": "https://pypi.org/project/bonfire/", "platform": "", "project_url": "https://pypi.org/project/bonfire/", "project_urls": {"Homepage": "http://..."}, "release_url": "https://pypi.org/project/bonfire/0.0.8/", "requires_dist": ["click (<7,>=3.3)", "keyring (<21,>=9)", "parsedatetime (<3,>=1.4)", "python-dateutil (<3,>=2.4.1)", "requests (<3.0,>=2.4.3)", "arrow (<0.16,>=0.13.0)", "termcolor (==1.1.0)", "six (>=1.9.0)"], "requires_python": "", "summary": "Add a small description here!", "version": "0.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Bonfire is a command line interface to query Graylog searches via the REST API. It tries to emulate the feeling of using tail on a local file.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Examples:</p>\n<pre>&gt; bonfire -h logserver -u jdoe -@ \"10 minutes ago\" \"*\"\n...\n\n&gt; bonfire -h logserver -u jdoe -f \"source:localhost AND level:2\"\n...\n</pre>\n<p>Bonfire usage:</p>\n<pre>Usage: bonfire [OPTIONS] [QUERY]\n\n  Bonfire - An interactive graylog cli client\n\nOptions:\n  --node TEXT                     Label of a preconfigured graylog node\n  -h, --host TEXT                 Your graylog node's host\n  -s, --tls                       Use HTTPS\n  --port INTEGER                  Your graylog port (default: 12900)\n  --endpoint TEXT                 Your graylog API endpoint e.g /api (default:\n                                  /)\n  -u, --username TEXT             Your graylog username\n  -p, --password TEXT             Your graylog password (default: prompt)\n  -k, --keyring / -nk, --no-keyring\n                                  Use keyring to store/retrieve password\n  -@, --search-from TEXT          Query range from\n  -#, --search-to TEXT            Query range to (default: now)\n  -t, --tail                      Show the last n lines for the query\n                                  (default)\n  -d, --dump                      Print the query result as a csv\n  -o, --output TEXT               Output logs to file (only tail/dump mode)\n  -f, --follow                    Poll the logging server for new logs\n                                  matching the query (sets search from to now,\n                                  limit to None)\n  -l, --interval INTEGER          Polling interval in ms (default: 1000)\n  -n, --limit INTEGER             Limit the number of results (default: 10)\n  -a, --latency INTEGER           Latency of polling queries (default: 2)\n  -r, --stream TEXT               Stream ID of the stream to query (default:\n                                  no stream filter)\n  -e, --field TEXT                Fields to include in the query result\n  -x, --template-option TEXT      Template options for the stored query\n  -s, --sort TEXT                 Field used for sorting (default: timestamp)\n  --asc / --desc                  Sort ascending / descending\n  --help                          Show this message and exit.\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Bonfire can be configured. It will look for a <tt><span class=\"pre\">~/.bonfire.cfg</span></tt> or a <tt>bonfire.cfg</tt> (in the current directory). The\nconfiguration file can specify API nodes. If no host is specified a node with the name <tt>default</tt> will be used. You can\nalso configure queries which can be referenced by starting your query with a colon:</p>\n<pre>[node:default]\nhost=1.2.3.4\nport=12900\nendpoint=/\nusername=jdoe\n\n[node:dev]\nhost=4.3.2.1\nport=9000\nendpoint=/api\nusername=jdoe\n\n[query:example]\nquery=facility:*foo* AND source:*bar*\nfrom=2015-03-01 15:00:00\nlimit=100\nfields=message,name,facility,source\n</pre>\n<p>Now you can run queries via such as:</p>\n<pre>&gt; bonfire --node=dev :example\n... runs the example query on the node dev\n\n&gt; bonfire :example\n... runs the example query on the default node\n</pre>\n<div id=\"query-templates\">\n<h3>Query Templates</h3>\n</div>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n</div>\n<div id=\"queries\">\n<h2>Queries</h2>\n</div>\n<div id=\"known-bugs\">\n<h2>Known Bugs</h2>\n<ul>\n<li>bonfire expects graylog\u2019s timezone to be UTC.</li>\n</ul>\n</div>\n<div id=\"release-notes\">\n<h2>Release Notes</h2>\n<ul>\n<li><dl>\n<dt>v0.0.7: Issues fixes, TLS and Proxy support</dt>\n<dd><ul>\n<li>Adds support for proxies</li>\n<li>Adds support for https urls</li>\n<li>Add timestamps to the dump format</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v0.0.6: Documentation fix</dt>\n<dd><ul>\n<li>Change of README.rst</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v0.0.5: Clean up</dt>\n<dd><ul>\n<li>Removed terminal UI ideas</li>\n<li>Added first tests</li>\n<li>Fixed date and time handling with timezones</li>\n<li>Added python3 compatibility</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v0.0.4: Extended documentation &amp; stream access</dt>\n<dd><ul>\n<li>Use the first stream the user has access to if no stream is specified and the user has no global search rights</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v0.0.3: Small fixes</dt>\n<dd><ul>\n<li>Use accept header in GET requests.</li>\n<li>Fix bug when querying specific fields</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v0.0.1: Initial release</dt>\n<dd><ul>\n<li>Limited feature set.</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6558444, "releases": {"0.0.5": [{"comment_text": "", "digests": {"md5": "5e8fb8afcc18dcce3991f13a55cda939", "sha256": "4aef6567a951c0d4bab4383598c9069cf60b3253c9c77d27993a65ccd74c67f5"}, "downloads": -1, "filename": "bonfire-0.0.5.tar.gz", "has_sig": false, "md5_digest": "5e8fb8afcc18dcce3991f13a55cda939", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14762, "upload_time": "2015-04-22T16:13:22", "upload_time_iso_8601": "2015-04-22T16:13:22.677113Z", "url": "https://files.pythonhosted.org/packages/de/53/50d119ad8bcf06fb21e5fcf77124ae7b90d68c95bd5a85bcbdf33ead675a/bonfire-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "ca7a42c350b42c6825c96e79009aaba9", "sha256": "1b5073d94df26965be963aa8341c34141df2133e9b5f08d72b5bd08d31dde6a6"}, "downloads": -1, "filename": "bonfire-0.0.6.tar.gz", "has_sig": false, "md5_digest": "ca7a42c350b42c6825c96e79009aaba9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14811, "upload_time": "2015-04-23T12:24:15", "upload_time_iso_8601": "2015-04-23T12:24:15.521968Z", "url": "https://files.pythonhosted.org/packages/79/b4/4ec8a74ac4bef0036ba094653b31f5939ce85d55de1700b2b5ec23bd0e9f/bonfire-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "9fb34f7003c05f7f4da64026479b88b7", "sha256": "c86ae11d716d899bcb2335dd6035f585e7e9126f43ec43a69d086c426eab369c"}, "downloads": -1, "filename": "bonfire-0.0.7.tar.gz", "has_sig": false, "md5_digest": "9fb34f7003c05f7f4da64026479b88b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15051, "upload_time": "2016-09-13T15:41:12", "upload_time_iso_8601": "2016-09-13T15:41:12.209143Z", "url": "https://files.pythonhosted.org/packages/d1/c1/7e48534f05dda345796088276a6a163bc21f0a0b11489b833fc0432a8c66/bonfire-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "55f9d591dad09fd5165a1147839df527", "sha256": "490b31dc92a803691414242f1becf353cb566d80934b50932f9dea25af1cf5cf"}, "downloads": -1, "filename": "bonfire-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "55f9d591dad09fd5165a1147839df527", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16371, "upload_time": "2020-02-02T15:21:21", "upload_time_iso_8601": "2020-02-02T15:21:21.187799Z", "url": "https://files.pythonhosted.org/packages/8f/e9/83a05260acdd3d778b194d8c2fcd0078fe04add43e99681568317a4bfc61/bonfire-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0bdd8e3d1485b4d6e50df5b5093148b", "sha256": "a2931515fe632c32a4cfbbb7d0b3ae159b84025c1c7dab7089ee9406cda588e6"}, "downloads": -1, "filename": "bonfire-0.0.8.tar.gz", "has_sig": false, "md5_digest": "e0bdd8e3d1485b4d6e50df5b5093148b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14974, "upload_time": "2020-02-02T15:21:24", "upload_time_iso_8601": "2020-02-02T15:21:24.014633Z", "url": "https://files.pythonhosted.org/packages/ec/f0/70f29be40113055ada0429d750df3e0cdaad42e5944a83b5b1851328c3a9/bonfire-0.0.8.tar.gz", "yanked": false}], "0.0.8b1": [{"comment_text": "", "digests": {"md5": "3d9598b6010c0c5fe46325572b45bac8", "sha256": "9105c0682b1ec025dea9f0e6ceadc9f8381c58e7f30b0a479203968aaf811b1c"}, "downloads": -1, "filename": "bonfire-0.0.8b1-py3-none-any.whl", "has_sig": false, "md5_digest": "3d9598b6010c0c5fe46325572b45bac8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16721, "upload_time": "2020-02-02T15:17:42", "upload_time_iso_8601": "2020-02-02T15:17:42.202650Z", "url": "https://files.pythonhosted.org/packages/4a/4b/6ccabddfbd1549e9b55609d23a0be548845922bbffa5e02baf12bb3698bc/bonfire-0.0.8b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85f085a6f4cea123904597647d150058", "sha256": "f8ff6d87fb4a98840286696859c8dafade10249b271c0a4d91519b477dea9c00"}, "downloads": -1, "filename": "bonfire-0.0.8b1.tar.gz", "has_sig": false, "md5_digest": "85f085a6f4cea123904597647d150058", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15170, "upload_time": "2020-02-02T15:17:44", "upload_time_iso_8601": "2020-02-02T15:17:44.148019Z", "url": "https://files.pythonhosted.org/packages/2f/05/bcb67261ea4fcb76e37bf64dc45aa54e9c61343ba008accaf1f9220c71b4/bonfire-0.0.8b1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "55f9d591dad09fd5165a1147839df527", "sha256": "490b31dc92a803691414242f1becf353cb566d80934b50932f9dea25af1cf5cf"}, "downloads": -1, "filename": "bonfire-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "55f9d591dad09fd5165a1147839df527", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16371, "upload_time": "2020-02-02T15:21:21", "upload_time_iso_8601": "2020-02-02T15:21:21.187799Z", "url": "https://files.pythonhosted.org/packages/8f/e9/83a05260acdd3d778b194d8c2fcd0078fe04add43e99681568317a4bfc61/bonfire-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0bdd8e3d1485b4d6e50df5b5093148b", "sha256": "a2931515fe632c32a4cfbbb7d0b3ae159b84025c1c7dab7089ee9406cda588e6"}, "downloads": -1, "filename": "bonfire-0.0.8.tar.gz", "has_sig": false, "md5_digest": "e0bdd8e3d1485b4d6e50df5b5093148b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14974, "upload_time": "2020-02-02T15:21:24", "upload_time_iso_8601": "2020-02-02T15:21:24.014633Z", "url": "https://files.pythonhosted.org/packages/ec/f0/70f29be40113055ada0429d750df3e0cdaad42e5944a83b5b1851328c3a9/bonfire-0.0.8.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:46 2020"}