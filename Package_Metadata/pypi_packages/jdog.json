{"info": {"author": "Petr Nymsa", "author_email": "nymsa.petr@outlook.cz", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries"], "description": ".. image:: https://github.com/petrnymsa/jdog/workflows/build-test/badge.svg\n\n.. image:: https://readthedocs.org/projects/jdog/badge/?version=latest\n\n*********************************************\nJust another Data Offline Generator (JDOG) \ud83d\udc36\n*********************************************\n\n\n\ud83d\uddce `Full documentation <https://jdog.readthedocs.io/en/latest/>`_.\n==================================================================\n\n\n.. start-inclusion-marker-do-not-remove\n\n- JDOG is a Python library which helps generate a sample data for your projects.\n- JDOG can also be run as CLI tool.\n- For generating a sample data, the data scheme is provided.\n\nScheme\n======\n\n- The *scheme* is provided in JSON format with special placeholders.\n- In the output, the placeholders are replaced with some generated data.\n\nAny valid JSON is **valid** scheme.\n\nHow to use it?\n==============\n\nInstall it\n\n.. code-block::\n\n    python -m pip install jdog\n\nPrepare a scheme\n\n.. code-block::\n\n    {\n      \"{{range(people,4)}}\": {\n        \"name\": \"{{name}}\",\n        \"age\": \"{{age}}\",\n        \"address\": {\n          \"city\": \"{{city}}\"\n        },\n        \"car\": \"{{option(mustang,{{empty}})}}\"\n      }\n    }\n\nUse it\n\n.. code-block::\n\n    from jdog import Jdog\n\n    def main():\n        jdog = Jdog()\n        scheme = ... # your loaded scheme\n\n        # parse scheme\n        jdog.parse_scheme(scheme)\n\n        # generate instance\n        result = jdog.generate()\n\n        print(result) # result is JSON\n\nAnd the example result:\n\n.. code-block::\n\n    {\n        \"people\": [\n            {\n                \"name\": \"Brandi Young\",\n                \"age\": 39,\n                \"address\": {\n                    \"city\": \"Jamietown\"\n                },\n                \"car\": \"mustang\"\n            },\n            {\n                \"name\": \"Michelle Best\",\n                \"age\": 70,\n                \"address\": {\n                    \"city\": \"Port Dustin\"\n                },\n                \"car\": \"\"\n            },\n            {\n                \"name\": \"Donald Hernandez\",\n                \"age\": 79,\n                \"address\": {\n                    \"city\": \"East Julieshire\"\n                },\n                \"car\": \"mustang\"\n            },\n            {\n                \"name\": \"Kaitlyn Cook\",\n                \"age\": 3,\n                \"address\": {\n                    \"city\": \"Rachelton\"\n                },\n                \"car\": \"mustang\"\n            }\n        ]\n    }\n\nCLI\n****\nPackage can be used as cli tool.\n\n.. code-block::\n\n    Usage: jdog [OPTIONS] SCHEME\n\n    Accepts SCHEME and generates new data to stdin or to specified OUTPUT\n\n    Options:\n      -p, --pretty           Output as pretty JSON.\n      -s, --strict           Raise error when no matching placeholder is found.\n      -l, --lang TEXT        Language to use.\n      --lang-help            Displays available language codes and exit.\n      -o, --output FILENAME  Output file where result is written.\n      --help                 Show this message and exit.\n\n\nBy default, CLI tool does not save output to file, just print results to standard output.\n\n.. end-inclusion-marker-do-not-remove\n\n\ud83d\udc4d JDOG is using awesome package `Faker <https://faker.readthedocs.io>`_ which is used to generate random data.\n\n`CONTRIBUTING <https://github.com/petrnymsa/jdog/blob/master/CONTRIBUTING.md>`_\n===============================================================================\n\n`LICENSE <https://github.com/petrnymsa/jdog/blob/master/LICENSE>`_\n===============================================================================", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/petrnymsa/jdog", "keywords": "data generator,data generation,json scheme,scheme based,cli tool", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "jdog", "package_url": "https://pypi.org/project/jdog/", "platform": "", "project_url": "https://pypi.org/project/jdog/", "project_urls": {"Homepage": "https://github.com/petrnymsa/jdog"}, "release_url": "https://pypi.org/project/jdog/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Just another Data Offline Generator", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://github.com/petrnymsa/jdog/workflows/build-test/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cfbe6545792c283c33601f9c748191ea2308e285/68747470733a2f2f6769746875622e636f6d2f706574726e796d73612f6a646f672f776f726b666c6f77732f6275696c642d746573742f62616467652e737667\">\n<img alt=\"https://readthedocs.org/projects/jdog/badge/?version=latest\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/541b9e2e8bac7ea8124ce464177b124313441399/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6a646f672f62616467652f3f76657273696f6e3d6c6174657374\">\n<div id=\"just-another-data-offline-generator-jdog\">\n<h2>Just another Data Offline Generator (JDOG) \ud83d\udc36</h2>\n<div id=\"id1\">\n<h3>\ud83d\uddce <a href=\"https://jdog.readthedocs.io/en/latest/\" rel=\"nofollow\">Full documentation</a>.</h3>\n<ul>\n<li>JDOG is a Python library which helps generate a sample data for your projects.</li>\n<li>JDOG can also be run as CLI tool.</li>\n<li>For generating a sample data, the data scheme is provided.</li>\n</ul>\n</div>\n<div id=\"scheme\">\n<h3>Scheme</h3>\n<ul>\n<li>The <em>scheme</em> is provided in JSON format with special placeholders.</li>\n<li>In the output, the placeholders are replaced with some generated data.</li>\n</ul>\n<p>Any valid JSON is <strong>valid</strong> scheme.</p>\n</div>\n<div id=\"how-to-use-it\">\n<h3>How to use it?</h3>\n<p>Install it</p>\n<pre>python -m pip install jdog\n</pre>\n<p>Prepare a scheme</p>\n<pre>{\n  \"{{range(people,4)}}\": {\n    \"name\": \"{{name}}\",\n    \"age\": \"{{age}}\",\n    \"address\": {\n      \"city\": \"{{city}}\"\n    },\n    \"car\": \"{{option(mustang,{{empty}})}}\"\n  }\n}\n</pre>\n<p>Use it</p>\n<pre>from jdog import Jdog\n\ndef main():\n    jdog = Jdog()\n    scheme = ... # your loaded scheme\n\n    # parse scheme\n    jdog.parse_scheme(scheme)\n\n    # generate instance\n    result = jdog.generate()\n\n    print(result) # result is JSON\n</pre>\n<p>And the example result:</p>\n<pre>{\n    \"people\": [\n        {\n            \"name\": \"Brandi Young\",\n            \"age\": 39,\n            \"address\": {\n                \"city\": \"Jamietown\"\n            },\n            \"car\": \"mustang\"\n        },\n        {\n            \"name\": \"Michelle Best\",\n            \"age\": 70,\n            \"address\": {\n                \"city\": \"Port Dustin\"\n            },\n            \"car\": \"\"\n        },\n        {\n            \"name\": \"Donald Hernandez\",\n            \"age\": 79,\n            \"address\": {\n                \"city\": \"East Julieshire\"\n            },\n            \"car\": \"mustang\"\n        },\n        {\n            \"name\": \"Kaitlyn Cook\",\n            \"age\": 3,\n            \"address\": {\n                \"city\": \"Rachelton\"\n            },\n            \"car\": \"mustang\"\n        }\n    ]\n}\n</pre>\n<div id=\"cli\">\n<h4>CLI</h4>\n<p>Package can be used as cli tool.</p>\n<pre>Usage: jdog [OPTIONS] SCHEME\n\nAccepts SCHEME and generates new data to stdin or to specified OUTPUT\n\nOptions:\n  -p, --pretty           Output as pretty JSON.\n  -s, --strict           Raise error when no matching placeholder is found.\n  -l, --lang TEXT        Language to use.\n  --lang-help            Displays available language codes and exit.\n  -o, --output FILENAME  Output file where result is written.\n  --help                 Show this message and exit.\n</pre>\n<p>By default, CLI tool does not save output to file, just print results to standard output.</p>\n<p>\ud83d\udc4d JDOG is using awesome package <a href=\"https://faker.readthedocs.io\" rel=\"nofollow\">Faker</a> which is used to generate random data.</p>\n</div>\n</div>\n<div id=\"id2\">\n<h3><a href=\"https://github.com/petrnymsa/jdog/blob/master/CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING</a></h3>\n</div>\n<div id=\"id3\">\n<h3><a href=\"https://github.com/petrnymsa/jdog/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a></h3>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6435783, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "215ee762d6a100ff1214c791a7638593", "sha256": "c0bd2f5757600b3b6563b72f49aaa4911099707beace1310da610d22c76f42cb"}, "downloads": -1, "filename": "jdog-0.1.0.tar.gz", "has_sig": false, "md5_digest": "215ee762d6a100ff1214c791a7638593", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9770, "upload_time": "2020-01-08T22:31:51", "upload_time_iso_8601": "2020-01-08T22:31:51.929766Z", "url": "https://files.pythonhosted.org/packages/0a/63/f879768de79deba15e31c21eb1d120252f503b66c539fe1310fd856fd7ca/jdog-0.1.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "ef4e7dc70aee5e71b7a8eea1cd95d89a", "sha256": "53171f4a8f36c876c9afcce4e46bdbccd1ba452bd78c84ea11fae0ac76b7d2a0"}, "downloads": -1, "filename": "jdog-0.2.2.tar.gz", "has_sig": false, "md5_digest": "ef4e7dc70aee5e71b7a8eea1cd95d89a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10616, "upload_time": "2020-01-09T23:24:10", "upload_time_iso_8601": "2020-01-09T23:24:10.066698Z", "url": "https://files.pythonhosted.org/packages/eb/d1/ab33b2e397b79b9ad47408907c79a01be1691ccf7915eb3b9dee8b481fe3/jdog-0.2.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "11310cd670de34cc39b40a4ce9b25d86", "sha256": "e2a0c6c5b00a934831230ede731f1b0a9968c82065e8296641637b955a4b4f4c"}, "downloads": -1, "filename": "jdog-1.0.0.tar.gz", "has_sig": false, "md5_digest": "11310cd670de34cc39b40a4ce9b25d86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10705, "upload_time": "2020-01-11T11:39:00", "upload_time_iso_8601": "2020-01-11T11:39:00.521928Z", "url": "https://files.pythonhosted.org/packages/1e/dd/eabe378c6994ad1806f8b28f180e2a76253ccb5c56988f3766408ec53cbc/jdog-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "11310cd670de34cc39b40a4ce9b25d86", "sha256": "e2a0c6c5b00a934831230ede731f1b0a9968c82065e8296641637b955a4b4f4c"}, "downloads": -1, "filename": "jdog-1.0.0.tar.gz", "has_sig": false, "md5_digest": "11310cd670de34cc39b40a4ce9b25d86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10705, "upload_time": "2020-01-11T11:39:00", "upload_time_iso_8601": "2020-01-11T11:39:00.521928Z", "url": "https://files.pythonhosted.org/packages/1e/dd/eabe378c6994ad1806f8b28f180e2a76253ccb5c56988f3766408ec53cbc/jdog-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:56 2020"}