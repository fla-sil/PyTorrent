{"info": {"author": "BJS Engineering Team", "author_email": "anish@bjshomedelivery.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Dnsmeapi Python client\nsimplify dnsmadeeasy api calls :- https://api-docs.dnsmadeeasy.com/?version=latest#6a7eef29-27fb-4f37-af89-e3ec4a3dcf66\n**Python 3.7**\n\n# Tests  \nFrom the project root directory  \n```\nexport PYTHONPATH=$(pwd)\npytest .\n```\n# Dnsmeapi Class\n```\nclass Dnsmeapi:\n    hmac = None\n    request_date = None\n    api_key = \"\"\n    api_secret_key = \"\"\n\n    def __init__(self, api_key, api_secret_key):\n        self.api_key = api_key\n        self.api_secret_key = api_secret_key\n\n    def make_request(self, method_type, url, payload):\n        self.request_date = formatdate(timeval=None, localtime=False, usegmt=True)\n        try:\n            self.hmac = hmac.new(\n                bytes(self.api_secret_key, \"UTF-8\"),\n                bytes(self.request_date, \"UTF-8\"),\n                hashlib.sha1,\n            ).hexdigest()\n        except Exception as e:\n            raise e\n\n        headers = {\n            \"Content-Type\": \"application/json\",\n            \"x-dnsme-hmac\": self.hmac,\n            \"x-dnsme-apiKey\": self.api_key,\n            \"x-dnsme-requestDate\": self.request_date,\n        }\n\n        try:\n            response = requests.request(method_type, url, headers=headers, data=payload)\n            return response.text.encode('utf-8')\n        except Exception as e:\n            raise e\n```\n# Import \nfrom dnsmeapi import Dnsmeapi\n\n# Initalise class\ndnsmeapi = Dnsmeapi(\n    \"api_key\", \"api_secret_key\"\n)\n\n# Send Request\ndnsmeapi.make_request(\n        \"GET\", \"URL\", {}\n    )", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/engineering-bjs/dnsmeapi/blob/master/archive/dnsmeapi-0.0.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/engineering-bjs/dnsmeapi", "keywords": "dnsmadeeasy,sha1,python3,requests,hmac", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dnsmeapi", "package_url": "https://pypi.org/project/dnsmeapi/", "platform": "", "project_url": "https://pypi.org/project/dnsmeapi/", "project_urls": {"Download": "https://github.com/engineering-bjs/dnsmeapi/blob/master/archive/dnsmeapi-0.0.1.tar.gz", "Homepage": "https://github.com/engineering-bjs/dnsmeapi"}, "release_url": "https://pypi.org/project/dnsmeapi/0.0.2/", "requires_dist": null, "requires_python": ">=3.7", "summary": "make simple dnsmadeeasy api calls", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Dnsmeapi Python client</h1>\n<p>simplify dnsmadeeasy api calls :- <a href=\"https://api-docs.dnsmadeeasy.com/?version=latest#6a7eef29-27fb-4f37-af89-e3ec4a3dcf66\" rel=\"nofollow\">https://api-docs.dnsmadeeasy.com/?version=latest#6a7eef29-27fb-4f37-af89-e3ec4a3dcf66</a>\n<strong>Python 3.7</strong></p>\n<h1>Tests</h1>\n<p>From the project root directory</p>\n<pre><code>export PYTHONPATH=$(pwd)\npytest .\n</code></pre>\n<h1>Dnsmeapi Class</h1>\n<pre><code>class Dnsmeapi:\n    hmac = None\n    request_date = None\n    api_key = \"\"\n    api_secret_key = \"\"\n\n    def __init__(self, api_key, api_secret_key):\n        self.api_key = api_key\n        self.api_secret_key = api_secret_key\n\n    def make_request(self, method_type, url, payload):\n        self.request_date = formatdate(timeval=None, localtime=False, usegmt=True)\n        try:\n            self.hmac = hmac.new(\n                bytes(self.api_secret_key, \"UTF-8\"),\n                bytes(self.request_date, \"UTF-8\"),\n                hashlib.sha1,\n            ).hexdigest()\n        except Exception as e:\n            raise e\n\n        headers = {\n            \"Content-Type\": \"application/json\",\n            \"x-dnsme-hmac\": self.hmac,\n            \"x-dnsme-apiKey\": self.api_key,\n            \"x-dnsme-requestDate\": self.request_date,\n        }\n\n        try:\n            response = requests.request(method_type, url, headers=headers, data=payload)\n            return response.text.encode('utf-8')\n        except Exception as e:\n            raise e\n</code></pre>\n<h1>Import</h1>\n<p>from dnsmeapi import Dnsmeapi</p>\n<h1>Initalise class</h1>\n<p>dnsmeapi = Dnsmeapi(\n\"api_key\", \"api_secret_key\"\n)</p>\n<h1>Send Request</h1>\n<p>dnsmeapi.make_request(\n\"GET\", \"URL\", {}\n)</p>\n\n          </div>"}, "last_serial": 6783675, "releases": {"0.0.1": [], "0.0.2": [{"comment_text": "", "digests": {"md5": "3b127847c607f0b545defd3177113539", "sha256": "907c2f7c499df943614fdb566a4c9afb8f72c85c3039c955154bfa41687da6fb"}, "downloads": -1, "filename": "dnsmeapi-0.0.2.tar.gz", "has_sig": false, "md5_digest": "3b127847c607f0b545defd3177113539", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2249, "upload_time": "2020-03-10T08:43:48", "upload_time_iso_8601": "2020-03-10T08:43:48.263089Z", "url": "https://files.pythonhosted.org/packages/0a/ac/12729547754538d00a24e8af14d09a24d74f6a9c4903523aad904b2ecdd2/dnsmeapi-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3b127847c607f0b545defd3177113539", "sha256": "907c2f7c499df943614fdb566a4c9afb8f72c85c3039c955154bfa41687da6fb"}, "downloads": -1, "filename": "dnsmeapi-0.0.2.tar.gz", "has_sig": false, "md5_digest": "3b127847c607f0b545defd3177113539", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2249, "upload_time": "2020-03-10T08:43:48", "upload_time_iso_8601": "2020-03-10T08:43:48.263089Z", "url": "https://files.pythonhosted.org/packages/0a/ac/12729547754538d00a24e8af14d09a24d74f6a9c4903523aad904b2ecdd2/dnsmeapi-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:05 2020"}