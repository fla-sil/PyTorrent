{"info": {"author": "Dingfeng Wu", "author_email": "dfw_bioinfo@126.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# PisNRs\n\nPisNRs is a Python module for potential inhibitor and scaffold prediction \nof nuclear receptors, which constructed on top of RDKit, scikit-learn \nunder the MIT license.\n\n\n## Installation\n\nCurrently, PisNRs requires the following dependencies:\n\n- Python (>= 3.6)\n- rdkit (>= 2018.03.2.0)\n- scikit-learn (>= 0.19.1)\n- pandas (>= 0.23.1)\n\nAncaconda is recommended for package management and environment configures.\n\n### 1. Anaconda introduction\n\nThe user can download and install Anaconda at [Anaconda Python distribution](https://conda.io/docs/user-guide/install/index.html).\nAlso, Miniconda is acceptable in here. The conda source code repository is avaliable at\n [github](https://github.com/conda) and project [website](https://conda.io/docs/).\n\n### 2. Install RDKit with Anaconda\n\nCreating a new conda environment with the RDKit installation with the following command:\n\n~~~~~~~~~~~~~~~\n  $ conda create -c rdkit rdkit\n~~~~~~~~~~~~~~~\n\n### 3. Install scikit-learn\n\nUser can install scikit-learn by using ``pip`` :\n\n~~~~~~~~~~~~~~~\n    pip install -U scikit-learn\n~~~~~~~~~~~~~~~\n\nor ``conda`` :\n\n~~~~~~~~~~~~~~~\n    conda install scikit-learn\n~~~~~~~~~~~~~~~\n\n### 4. Install PisNRs\n\nAfter installation of RDKit and scikit-learn, PisNRs can be installed by using ``pip`` :\n\n~~~~~~~~~~~~~~~\n    pip install --upgrade pisnrs\n~~~~~~~~~~~~~~~\n\n## Example\n\n### 1. import PisNRs and load model\n\n~~~~~~~~~~~~~~~\n    import pisnrs\n    model = pisnrs.pisnrs()\n    print(model.getNRs()) #print NR proteins in model\n    print(model.getLigandDescriptors()) # print Ligand descriptors in model\n~~~~~~~~~~~~~~~\n\n### 2. Predict the activity and scaffold of query ligand\n\n~~~~~~~~~~~~~~~\n    ### moltype includes : smiles, mol, block, sdf\n    ### You can find the example .mol and .sdf file in the 'example/' folder\n    ### Example: https://github.com/ddhmed/pisnrs/tree/master/example\n    # 1. smiles input\n    smiles = 'CC1OC(C2=CC=CC=C2)=NC=1CN(CC1=CC(=C(C(=C1)C)OC(C(O)=O)(C)C)C)CC1OC=CC=1'\n    protein = 'NR1C1'\n    des = model.calPCMDecriptorFromMolText(smiles, protein, moltype='smiles') # create descriptors\n    print(model.preProba(des)) # predict\n\n    # 2. .mol file input\n    molfile = 'example/2.2_MolFile.mol'\n    protein = 'NR1C1'\n    des = model.calPCMDecriptorFromMolText(molfile, protein, moltype='mol')\n    print(model.preProba(des))\n\n    # 3. mol block input\n    block = '''\n     RDKit          2D\n\n 36 39  0  0  0  0  0  0  0  0999 V2000\n    4.9515   -5.4554    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    4.4879   -6.8820    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    5.3696   -8.0956    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    4.4879   -9.3091    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    4.9515  -10.7357    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    6.4187  -11.0475    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    6.8822  -12.4741    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    5.8785  -13.5888    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    4.4113  -13.2770    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    3.9478  -11.8504    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    3.0613   -8.8456    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    3.0613   -7.3456    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.8478   -6.4639    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.4775   -7.0740    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    0.3207   -8.5658    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.0496   -9.1759    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.2631   -8.2942    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.6335   -8.9043    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.7902  -10.3961    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.5767  -11.2778    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.2064  -10.6676    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.7335  -12.7695    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -5.1606  -11.0062    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -5.3174  -12.4980    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -5.4741  -13.9897    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -6.8445  -14.5999    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -4.2606  -14.8714    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -6.8091  -12.3412    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.8256  -12.6548    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -4.8470   -8.0226    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.7360   -6.1923    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.5792   -4.7005    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.6939   -3.6968    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.0838   -2.3265    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.4079   -2.4833    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.7198   -3.9505    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n  1  2  1  0\n  2  3  1  0\n  3  4  1  0\n  4  5  1  0\n  5  6  2  0\n  6  7  1  0\n  7  8  2  0\n  8  9  1  0\n  9 10  2  0\n  4 11  2  0\n 11 12  1  0\n 12 13  1  0\n 13 14  1  0\n 14 15  1  0\n 15 16  1  0\n 16 17  2  0\n 17 18  1  0\n 18 19  2  0\n 19 20  1  0\n 20 21  2  0\n 20 22  1  0\n 19 23  1  0\n 23 24  1  0\n 24 25  1  0\n 25 26  1  0\n 25 27  2  0\n 24 28  1  0\n 24 29  1  0\n 18 30  1  0\n 14 31  1  0\n 31 32  1  0\n 32 33  1  0\n 33 34  1  0\n 34 35  2  0\n 35 36  1  0\n 12  2  2  0\n 21 16  1  0\n 36 32  2  0\n 10  5  1  0\nM  END\n    '''\n    des = model.calPCMDecriptorFromMolText(block, protein, moltype='block')\n    print(model.preProba(des))\n\n    # 4. .sdf file input\n    sdffile = 'example/2.4_SDFFile.sdf'\n    protein = 'NR1C1'\n    des = model.calPCMDecriptorFromMolText(sdffile, protein, moltype='sdf')\n    print(model.preProba(des))\n~~~~~~~~~~~~~~~\n\n### 3. Derive molecule scaffold of query ligand\n\n~~~~~~~~~~~~~~~\n    smiles = 'CC1OC(C2=CC=CC=C2)=NC=1CN(CC1=CC(=C(C(=C1)C)OC(C(O)=O)(C)C)C)CC1OC=CC=1'\n    scaffold = model.calScaffoldFromSmiles(smiles)\n    print(scaffold)\n~~~~~~~~~~~~~~~\n\n### 4. Create molucule image of query ligand\n\n~~~~~~~~~~~~~~~\n    smiles = 'CC1OC(C2=CC=CC=C2)=NC=1CN(CC1=CC(=C(C(=C1)C)OC(C(O)=O)(C)C)C)CC1OC=CC=1'\n    model.image_from_smiles(smiles, name='4_OutputImage.png', dir='example/') # output image of smiles to 'example/' folder\n~~~~~~~~~~~~~~~\n\n### 5. Batch mode uploading\n\n~~~~~~~~~~~~~~~\n    smiles_list = ['CC1OC(C2=CC=CC=C2)=NC=1CN(CC1=CC(=C(C(=C1)C)OC(C(O)=O)(C)C)C)CC1OC=CC=1', 'C1=CC=CC=C1']\n    protein_list = ['NR1C1', 'NR1C2']\n    print(model.preBatch(smiles_list, protein_list)) # predict activity of every ligands and proteins in list \n    print(model.preBatch(smiles_list)) # predict activity of every ligands in list and all proteins in model\n    ### load smiles list from file\n    smiles_file = 'example/5_SmilesList.smiles'\n    smiles_list = [i.strip() for i in open(smiles_file, 'r').readlines()]\n    print(model.preBatch(smiles_list))\n~~~~~~~~~~~~~~~\n\n## Related links\n\n- Official source code repo: https://github.com/ddhmed/pisnrs\n- Download releases: https://pypi.org/project/pisnrs/\n- web server : http://pisnrs.com/predict\n\n## Source code\n\nThe latest sources can be checked by using the following command:\n\n    git clone https://github.com/ddhmed/pisnrs.git\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pypa/pisnrs", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pisnrs", "package_url": "https://pypi.org/project/pisnrs/", "platform": "", "project_url": "https://pypi.org/project/pisnrs/", "project_urls": {"Homepage": "https://github.com/pypa/pisnrs"}, "release_url": "https://pypi.org/project/pisnrs/0.0.6/", "requires_dist": ["scikit-learn (>=0.19.1)", "pandas (>=0.23.1)"], "requires_python": "", "summary": "A computational server for potential inhibitor and scaffold prediction of nuclear receptors", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PisNRs</h1>\n<p>PisNRs is a Python module for potential inhibitor and scaffold prediction\nof nuclear receptors, which constructed on top of RDKit, scikit-learn\nunder the MIT license.</p>\n<h2>Installation</h2>\n<p>Currently, PisNRs requires the following dependencies:</p>\n<ul>\n<li>Python (&gt;= 3.6)</li>\n<li>rdkit (&gt;= 2018.03.2.0)</li>\n<li>scikit-learn (&gt;= 0.19.1)</li>\n<li>pandas (&gt;= 0.23.1)</li>\n</ul>\n<p>Ancaconda is recommended for package management and environment configures.</p>\n<h3>1. Anaconda introduction</h3>\n<p>The user can download and install Anaconda at <a href=\"https://conda.io/docs/user-guide/install/index.html\" rel=\"nofollow\">Anaconda Python distribution</a>.\nAlso, Miniconda is acceptable in here. The conda source code repository is avaliable at\n<a href=\"https://github.com/conda\" rel=\"nofollow\">github</a> and project <a href=\"https://conda.io/docs/\" rel=\"nofollow\">website</a>.</p>\n<h3>2. Install RDKit with Anaconda</h3>\n<p>Creating a new conda environment with the RDKit installation with the following command:</p>\n<pre><code>  $ conda create -c rdkit rdkit\n</code></pre>\n<h3>3. Install scikit-learn</h3>\n<p>User can install scikit-learn by using <code>pip</code> :</p>\n<pre><code>    pip install -U scikit-learn\n</code></pre>\n<p>or <code>conda</code> :</p>\n<pre><code>    conda install scikit-learn\n</code></pre>\n<h3>4. Install PisNRs</h3>\n<p>After installation of RDKit and scikit-learn, PisNRs can be installed by using <code>pip</code> :</p>\n<pre><code>    pip install --upgrade pisnrs\n</code></pre>\n<h2>Example</h2>\n<h3>1. import PisNRs and load model</h3>\n<pre><code>    import pisnrs\n    model = pisnrs.pisnrs()\n    print(model.getNRs()) #print NR proteins in model\n    print(model.getLigandDescriptors()) # print Ligand descriptors in model\n</code></pre>\n<h3>2. Predict the activity and scaffold of query ligand</h3>\n<pre><code>    ### moltype includes : smiles, mol, block, sdf\n    ### You can find the example .mol and .sdf file in the 'example/' folder\n    ### Example: https://github.com/ddhmed/pisnrs/tree/master/example\n    # 1. smiles input\n    smiles = 'CC1OC(C2=CC=CC=C2)=NC=1CN(CC1=CC(=C(C(=C1)C)OC(C(O)=O)(C)C)C)CC1OC=CC=1'\n    protein = 'NR1C1'\n    des = model.calPCMDecriptorFromMolText(smiles, protein, moltype='smiles') # create descriptors\n    print(model.preProba(des)) # predict\n\n    # 2. .mol file input\n    molfile = 'example/2.2_MolFile.mol'\n    protein = 'NR1C1'\n    des = model.calPCMDecriptorFromMolText(molfile, protein, moltype='mol')\n    print(model.preProba(des))\n\n    # 3. mol block input\n    block = '''\n     RDKit          2D\n\n 36 39  0  0  0  0  0  0  0  0999 V2000\n    4.9515   -5.4554    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    4.4879   -6.8820    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    5.3696   -8.0956    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    4.4879   -9.3091    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    4.9515  -10.7357    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    6.4187  -11.0475    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    6.8822  -12.4741    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    5.8785  -13.5888    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    4.4113  -13.2770    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    3.9478  -11.8504    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    3.0613   -8.8456    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    3.0613   -7.3456    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.8478   -6.4639    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.4775   -7.0740    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    0.3207   -8.5658    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.0496   -9.1759    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.2631   -8.2942    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.6335   -8.9043    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.7902  -10.3961    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.5767  -11.2778    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.2064  -10.6676    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.7335  -12.7695    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -5.1606  -11.0062    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -5.3174  -12.4980    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -5.4741  -13.9897    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -6.8445  -14.5999    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -4.2606  -14.8714    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -6.8091  -12.3412    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.8256  -12.6548    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -4.8470   -8.0226    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.7360   -6.1923    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.5792   -4.7005    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.6939   -3.6968    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.0838   -2.3265    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.4079   -2.4833    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.7198   -3.9505    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n  1  2  1  0\n  2  3  1  0\n  3  4  1  0\n  4  5  1  0\n  5  6  2  0\n  6  7  1  0\n  7  8  2  0\n  8  9  1  0\n  9 10  2  0\n  4 11  2  0\n 11 12  1  0\n 12 13  1  0\n 13 14  1  0\n 14 15  1  0\n 15 16  1  0\n 16 17  2  0\n 17 18  1  0\n 18 19  2  0\n 19 20  1  0\n 20 21  2  0\n 20 22  1  0\n 19 23  1  0\n 23 24  1  0\n 24 25  1  0\n 25 26  1  0\n 25 27  2  0\n 24 28  1  0\n 24 29  1  0\n 18 30  1  0\n 14 31  1  0\n 31 32  1  0\n 32 33  1  0\n 33 34  1  0\n 34 35  2  0\n 35 36  1  0\n 12  2  2  0\n 21 16  1  0\n 36 32  2  0\n 10  5  1  0\nM  END\n    '''\n    des = model.calPCMDecriptorFromMolText(block, protein, moltype='block')\n    print(model.preProba(des))\n\n    # 4. .sdf file input\n    sdffile = 'example/2.4_SDFFile.sdf'\n    protein = 'NR1C1'\n    des = model.calPCMDecriptorFromMolText(sdffile, protein, moltype='sdf')\n    print(model.preProba(des))\n</code></pre>\n<h3>3. Derive molecule scaffold of query ligand</h3>\n<pre><code>    smiles = 'CC1OC(C2=CC=CC=C2)=NC=1CN(CC1=CC(=C(C(=C1)C)OC(C(O)=O)(C)C)C)CC1OC=CC=1'\n    scaffold = model.calScaffoldFromSmiles(smiles)\n    print(scaffold)\n</code></pre>\n<h3>4. Create molucule image of query ligand</h3>\n<pre><code>    smiles = 'CC1OC(C2=CC=CC=C2)=NC=1CN(CC1=CC(=C(C(=C1)C)OC(C(O)=O)(C)C)C)CC1OC=CC=1'\n    model.image_from_smiles(smiles, name='4_OutputImage.png', dir='example/') # output image of smiles to 'example/' folder\n</code></pre>\n<h3>5. Batch mode uploading</h3>\n<pre><code>    smiles_list = ['CC1OC(C2=CC=CC=C2)=NC=1CN(CC1=CC(=C(C(=C1)C)OC(C(O)=O)(C)C)C)CC1OC=CC=1', 'C1=CC=CC=C1']\n    protein_list = ['NR1C1', 'NR1C2']\n    print(model.preBatch(smiles_list, protein_list)) # predict activity of every ligands and proteins in list \n    print(model.preBatch(smiles_list)) # predict activity of every ligands in list and all proteins in model\n    ### load smiles list from file\n    smiles_file = 'example/5_SmilesList.smiles'\n    smiles_list = [i.strip() for i in open(smiles_file, 'r').readlines()]\n    print(model.preBatch(smiles_list))\n</code></pre>\n<h2>Related links</h2>\n<ul>\n<li>Official source code repo: <a href=\"https://github.com/ddhmed/pisnrs\" rel=\"nofollow\">https://github.com/ddhmed/pisnrs</a></li>\n<li>Download releases: <a href=\"https://pypi.org/project/pisnrs/\" rel=\"nofollow\">https://pypi.org/project/pisnrs/</a></li>\n<li>web server : <a href=\"http://pisnrs.com/predict\" rel=\"nofollow\">http://pisnrs.com/predict</a></li>\n</ul>\n<h2>Source code</h2>\n<p>The latest sources can be checked by using the following command:</p>\n<pre><code>git clone https://github.com/ddhmed/pisnrs.git\n</code></pre>\n\n          </div>"}, "last_serial": 4084275, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "9777a4abbc15b4cba7e4e5a8b67d5dcd", "sha256": "06162f3903bf73f91da543c675fa9706ce33ee2ba794bc4eeb4ece125b402099"}, "downloads": -1, "filename": "pisnrs-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9777a4abbc15b4cba7e4e5a8b67d5dcd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1645381, "upload_time": "2018-07-04T07:17:22", "upload_time_iso_8601": "2018-07-04T07:17:22.252662Z", "url": "https://files.pythonhosted.org/packages/8d/55/fa9f4e34b3cb23e37c3e82bc20054743de9c50e028f67cba412c5a464b16/pisnrs-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3c8be90f57aaabc2a0d741f0d436947", "sha256": "c900f9bc6ed04fa7bb1289b39de48565eede91776239a383082d34e48f8fe613"}, "downloads": -1, "filename": "pisnrs-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e3c8be90f57aaabc2a0d741f0d436947", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1571642, "upload_time": "2018-07-04T07:17:33", "upload_time_iso_8601": "2018-07-04T07:17:33.979755Z", "url": "https://files.pythonhosted.org/packages/99/2e/1a83c24e68aab8017139c515dc5a8620b79ddc4318d020984aa08c6cb22a/pisnrs-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ed0f7cad42bc7b7d70334b9bedcbe17e", "sha256": "032f2a5c656b8167736a1875cbba2bf039c10abb2c9716f6100594543058086e"}, "downloads": -1, "filename": "pisnrs-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ed0f7cad42bc7b7d70334b9bedcbe17e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1646802, "upload_time": "2018-07-11T04:51:21", "upload_time_iso_8601": "2018-07-11T04:51:21.740657Z", "url": "https://files.pythonhosted.org/packages/34/9b/8e0e2ebfd4219046454e18968af0e5bb9841caf7169da223d46ddc824791/pisnrs-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01a73e2189bbd60202eda0c5f723eb4d", "sha256": "93dccd02e75c430730749200a60ca92644f8b399e8ad596b719ed8ed4042051b"}, "downloads": -1, "filename": "pisnrs-0.0.3.tar.gz", "has_sig": false, "md5_digest": "01a73e2189bbd60202eda0c5f723eb4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1578228, "upload_time": "2018-07-11T04:51:28", "upload_time_iso_8601": "2018-07-11T04:51:28.539214Z", "url": "https://files.pythonhosted.org/packages/91/d8/4f96d0986b464571b1e9e383dc36ee79c7dd2d53ce3a727be5c5f1fb59d5/pisnrs-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "44b028a1883366d05bcac99bce43c8eb", "sha256": "f04f825e9686df4b2688c6f5304ec9edd58cb2e9eb884a8f19e9202641a7bd8b"}, "downloads": -1, "filename": "pisnrs-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "44b028a1883366d05bcac99bce43c8eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1647019, "upload_time": "2018-07-12T05:48:01", "upload_time_iso_8601": "2018-07-12T05:48:01.474184Z", "url": "https://files.pythonhosted.org/packages/31/73/25b5a6a09171a61baaee477f1d94bee146025a09fbc71c56ae28281596ce/pisnrs-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2194f9312a260b2221ecc7fa75abd463", "sha256": "bf6566eb64899d99d157cee18436a9646239083175a1dbd9994e93a0182712be"}, "downloads": -1, "filename": "pisnrs-0.0.4.tar.gz", "has_sig": false, "md5_digest": "2194f9312a260b2221ecc7fa75abd463", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1578440, "upload_time": "2018-07-12T05:48:09", "upload_time_iso_8601": "2018-07-12T05:48:09.531302Z", "url": "https://files.pythonhosted.org/packages/48/d1/7e5a5e9c55f8455e03da24d32662e0e7fd5964a26c9d47ae3a82b07ee1f0/pisnrs-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "599d8c4d78ec5c32746a0ad27602d0f7", "sha256": "fcbe46f9003407bfa4d9d6cc138bb5695bc3aa0be6b1c2117a5fff33f5009e7e"}, "downloads": -1, "filename": "pisnrs-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "599d8c4d78ec5c32746a0ad27602d0f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1647024, "upload_time": "2018-07-12T05:56:47", "upload_time_iso_8601": "2018-07-12T05:56:47.113129Z", "url": "https://files.pythonhosted.org/packages/f5/42/c3f2fd1dd29dd72353dfbfadf24b2d1b48bb48981261c53e84248d25fead/pisnrs-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07f548ae3f93efe6b56a8e816693d780", "sha256": "3afbfb9356c8d196c0832ba43bb3711c9cb25824aa76c5973bc3ddbc65af0b18"}, "downloads": -1, "filename": "pisnrs-0.0.5.tar.gz", "has_sig": false, "md5_digest": "07f548ae3f93efe6b56a8e816693d780", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1578450, "upload_time": "2018-07-12T05:56:53", "upload_time_iso_8601": "2018-07-12T05:56:53.947354Z", "url": "https://files.pythonhosted.org/packages/11/8f/e917700e846116ff176077d2a27b77f390a5f7e2c69dd3ea18d94c5eed74/pisnrs-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "f070b53a4be4245ec7f716790ca52471", "sha256": "a6548c8470b678a933048bef3e770ce15ba29758a9a9126eb4141eef9ee81b76"}, "downloads": -1, "filename": "pisnrs-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "f070b53a4be4245ec7f716790ca52471", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1646872, "upload_time": "2018-07-20T01:47:35", "upload_time_iso_8601": "2018-07-20T01:47:35.660499Z", "url": "https://files.pythonhosted.org/packages/08/57/b2aedb3e641054610a5740d4e680016d3d5ea68641ae0ae2fcd451e25791/pisnrs-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "962dac08cf900584aeec09d995fe11e3", "sha256": "25613f70549f49a059fd481bf211f4794bd3263806ca50feb1c8890c026887f6"}, "downloads": -1, "filename": "pisnrs-0.0.6.tar.gz", "has_sig": false, "md5_digest": "962dac08cf900584aeec09d995fe11e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1578175, "upload_time": "2018-07-20T01:47:41", "upload_time_iso_8601": "2018-07-20T01:47:41.341053Z", "url": "https://files.pythonhosted.org/packages/aa/b9/be9cb4d8f9636cd4d1e057b1fdfa16e1e8f3e99d2c21e7886b796a36517f/pisnrs-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f070b53a4be4245ec7f716790ca52471", "sha256": "a6548c8470b678a933048bef3e770ce15ba29758a9a9126eb4141eef9ee81b76"}, "downloads": -1, "filename": "pisnrs-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "f070b53a4be4245ec7f716790ca52471", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1646872, "upload_time": "2018-07-20T01:47:35", "upload_time_iso_8601": "2018-07-20T01:47:35.660499Z", "url": "https://files.pythonhosted.org/packages/08/57/b2aedb3e641054610a5740d4e680016d3d5ea68641ae0ae2fcd451e25791/pisnrs-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "962dac08cf900584aeec09d995fe11e3", "sha256": "25613f70549f49a059fd481bf211f4794bd3263806ca50feb1c8890c026887f6"}, "downloads": -1, "filename": "pisnrs-0.0.6.tar.gz", "has_sig": false, "md5_digest": "962dac08cf900584aeec09d995fe11e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1578175, "upload_time": "2018-07-20T01:47:41", "upload_time_iso_8601": "2018-07-20T01:47:41.341053Z", "url": "https://files.pythonhosted.org/packages/aa/b9/be9cb4d8f9636cd4d1e057b1fdfa16e1e8f3e99d2c21e7886b796a36517f/pisnrs-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:00 2020"}