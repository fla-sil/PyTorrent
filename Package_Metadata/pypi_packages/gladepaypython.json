{"info": {"author": "Chinaka I. Light", "author_email": "light@yottabitconsulting.com", "bugtrack_url": null, "classifiers": [], "description": "# Gladepay Python\n\n![Build Status](https://gitlab.com/gladepay-apis/gladepay-python/badges/develop/build.svg)\n\nGladePay is the leading digital payments provider with focus across African countries, dedicated to creating simple payments solution for African businesses. We are focused on building trust between buyers and sellers by providing simple solutions using the payment options (online or offline) preferred with complete security and efficiency.\n\nA PYTHON Package Or library that simplifies payment with Gladepay APIs\n\nTo Learn more, visit www.gladepay.com.\n\n## Installation\n\nInstall it yourself as:\n\n    $ pip install gladepaypython\n\n## Usage\n\n```python\n\tfrom gladepaypython import Gladepay\n\n\tinitialize_vals = {\n            'action': 'initiate',\n            'paymentType': 'card',\n            'user': {\n              'firstname': 'Chinaka',\n              'lastname': 'Light',\n              'email': 'test@gmail.com',\n              'ip': '192.168.33.10',\n              'fingerprint': 'cccvxbxbxb'\n            },\n            'card': {\n              'card_no': '5438898014560229',\n              'expiry_month': '09',\n              'expiry_year': '19',\n              'ccv': '789',\n              'pin': '3310'\n            },\n            'amount': '10000',\n            'country': 'NG',\n            'currency': 'NGN'\n          }\n\n\tmerchant_id = \"GP0000001\" #Test Data\n\tmerchant_key = \"123456789\" \n\tlive = true #for live server, default false for test server\n\n\t# Demp or Test Server Instance\n\tgladepay = Gladepay(merchant_id, merchant_key) # Or\n\n\t# gladepay = Gladepay(merchant_id, merchant_key, false) # Or\n\n\t#LIVE SERVER Instance\n\t# gladepay = Gladepay(merchant_id, merchant_key, true) # Or\n\n\t#Get Response\n\tgladepay.card_payment(self.initialize_vals['amount'], self.initialize_vals['country'], self.initialize_vals['currency'], self.initialize_vals['user'], self.initialize_vals['card'])\n\n  # If OTP is required \n\tresponse = gladepay.validate_otp(response['txnRef'], '12345')\n\n\t#Verify Transaction\t\t\n\tresponse = gladepay.verify_transaction(response['txnRef'])\n\n  print response[\"message\"] #Transaction Successful\n\n  #Other methods\n  #Get list of all Banks:\n\n  all_banks_response = gladepay.all_banks()\n\n\t#Get list of banks that support account payments:\n\tsupported_banks_response = gladepay.supported_banks_account_payment\n\n\t#Get Details of a card:\n\tcard_details_response = gladepay.card_details(card_number)\n\n\t#Get the charges applicable to a card: (first six digit of the card no)\n\tcard_charges_response = gladepay.card_charges(amount, card_no)\n\n\t#Get the charges applicable to an account\n\taccount_charges_response = gladepay.account_charges(amount)\n\n\t#charge with token\n\tresponse = gladepay.charge_with_token(\n      user,\n      token,\n      amount\n    )\n\n\t#Perform Money transfer:\n\tmoney_transfer_response = gladepay.money_transfer(amount, bankcode, account_number, 'Mark Silas', 'Narration')\n\n\t#Verify status of Money transfer:\n\tverify_money_transfer_response = gladepay.verify_money_transfer(txnRef)\n\n\t#Verify Account Name:\n\taccount_name_verification_response = gladepay.verify_account_name(bankcode, account_number)\n\n\t#Return Values\n\tAll methods return an array.\n\n```\n\n\n## Development\n\nAfter checking out the repo, run \npip install -e . \n\n## Contributing\n\nBug reports and pull requests are welcome on GitHub at https://gitlab.com/gladepay-apis/gladepay-python. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the [Contributor Covenant](http://contributor-covenant.org) code of conduct.\n\n## License\n\nThe gem is available as open source under the terms of the [MIT License](http://opensource.org/licenses/MIT).\n\n## Code of Conduct\n\nEveryone interacting in the Gladepay project\u2019s codebases, issue trackers, chat rooms and mailing lists is expected to follow the [code of conduct](https://gitlab.com/gladepay-apis/gladepay-python/blob/master/CODE_OF_CONDUCT.md).\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/gladepay-apis/gladepay-python", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gladepaypython", "package_url": "https://pypi.org/project/gladepaypython/", "platform": "", "project_url": "https://pypi.org/project/gladepaypython/", "project_urls": {"Homepage": "https://gitlab.com/gladepay-apis/gladepay-python"}, "release_url": "https://pypi.org/project/gladepaypython/0.1.4/", "requires_dist": ["requests", "nose2"], "requires_python": "", "summary": "Python wrapper for Gladepay API", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Gladepay Python<br><br>![Build Status](https://gitlab.com/gladepay-apis/gladepay-python/badges/develop/build.svg)<br><br>GladePay is the leading digital payments provider with focus across African countries, dedicated to creating simple payments solution for African businesses. We are focused on building trust between buyers and sellers by providing simple solutions using the payment options (online or offline) preferred with complete security and efficiency.<br><br>A PYTHON Package Or library that simplifies payment with Gladepay APIs<br><br>To Learn more, visit www.gladepay.com.<br><br>## Installation<br><br>Install it yourself as:<br><br>    $ pip install gladepaypython<br><br>## Usage<br><br>```python<br>\tfrom gladepaypython import Gladepay<br><br>\tinitialize_vals = {<br>            'action': 'initiate',<br>            'paymentType': 'card',<br>            'user': {<br>              'firstname': 'Chinaka',<br>              'lastname': 'Light',<br>              'email': 'test@gmail.com',<br>              'ip': '192.168.33.10',<br>              'fingerprint': 'cccvxbxbxb'<br>            },<br>            'card': {<br>              'card_no': '5438898014560229',<br>              'expiry_month': '09',<br>              'expiry_year': '19',<br>              'ccv': '789',<br>              'pin': '3310'<br>            },<br>            'amount': '10000',<br>            'country': 'NG',<br>            'currency': 'NGN'<br>          }<br><br>\tmerchant_id = \"GP0000001\" #Test Data<br>\tmerchant_key = \"123456789\" <br>\tlive = true #for live server, default false for test server<br><br>\t# Demp or Test Server Instance<br>\tgladepay = Gladepay(merchant_id, merchant_key) # Or<br><br>\t# gladepay = Gladepay(merchant_id, merchant_key, false) # Or<br><br>\t#LIVE SERVER Instance<br>\t# gladepay = Gladepay(merchant_id, merchant_key, true) # Or<br><br>\t#Get Response<br>\tgladepay.card_payment(self.initialize_vals['amount'], self.initialize_vals['country'], self.initialize_vals['currency'], self.initialize_vals['user'], self.initialize_vals['card'])<br><br>  # If OTP is required <br>\tresponse = gladepay.validate_otp(response['txnRef'], '12345')<br><br>\t#Verify Transaction\t\t<br>\tresponse = gladepay.verify_transaction(response['txnRef'])<br><br>  print response[\"message\"] #Transaction Successful<br><br>  #Other methods<br>  #Get list of all Banks:<br><br>  all_banks_response = gladepay.all_banks()<br><br>\t#Get list of banks that support account payments:<br>\tsupported_banks_response = gladepay.supported_banks_account_payment<br><br>\t#Get Details of a card:<br>\tcard_details_response = gladepay.card_details(card_number)<br><br>\t#Get the charges applicable to a card: (first six digit of the card no)<br>\tcard_charges_response = gladepay.card_charges(amount, card_no)<br><br>\t#Get the charges applicable to an account<br>\taccount_charges_response = gladepay.account_charges(amount)<br><br>\t#charge with token<br>\tresponse = gladepay.charge_with_token(<br>      user,<br>      token,<br>      amount<br>    )<br><br>\t#Perform Money transfer:<br>\tmoney_transfer_response = gladepay.money_transfer(amount, bankcode, account_number, 'Mark Silas', 'Narration')<br><br>\t#Verify status of Money transfer:<br>\tverify_money_transfer_response = gladepay.verify_money_transfer(txnRef)<br><br>\t#Verify Account Name:<br>\taccount_name_verification_response = gladepay.verify_account_name(bankcode, account_number)<br><br>\t#Return Values<br>\tAll methods return an array.<br><br>```<br><br><br>## Development<br><br>After checking out the repo, run <br>pip install -e . <br><br>## Contributing<br><br>Bug reports and pull requests are welcome on GitHub at https://gitlab.com/gladepay-apis/gladepay-python. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the [Contributor Covenant](http://contributor-covenant.org) code of conduct.<br><br>## License<br><br>The gem is available as open source under the terms of the [MIT License](http://opensource.org/licenses/MIT).<br><br>## Code of Conduct<br><br>Everyone interacting in the Gladepay project\u2019s codebases, issue trackers, chat rooms and mailing lists is expected to follow the [code of conduct](https://gitlab.com/gladepay-apis/gladepay-python/blob/master/CODE_OF_CONDUCT.md).<br><br><br>\n          </div>"}, "last_serial": 4430745, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f981fda86385c1ce4cd4f2ee48b2f5b3", "sha256": "7e3e1a0d1f9aa525bfcc925727b0bc773b0d0fc4484006d8bd782fa577ef4aa1"}, "downloads": -1, "filename": "gladepaypython-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f981fda86385c1ce4cd4f2ee48b2f5b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6889, "upload_time": "2018-09-11T15:45:33", "upload_time_iso_8601": "2018-09-11T15:45:33.210952Z", "url": "https://files.pythonhosted.org/packages/3f/8b/b9f0575652ab6ec08a1e9c61ba41e32756ddfda06c80b024b7c7cccb52d8/gladepaypython-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40a5340d84de0fa9842dca9eee333a64", "sha256": "46f0b4257415285facbe284483139744174cf6a3d1e4a0dbee49ff04e37704eb"}, "downloads": -1, "filename": "gladepaypython-0.1.tar.gz", "has_sig": false, "md5_digest": "40a5340d84de0fa9842dca9eee333a64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5739, "upload_time": "2018-09-11T15:45:34", "upload_time_iso_8601": "2018-09-11T15:45:34.959530Z", "url": "https://files.pythonhosted.org/packages/17/a0/49314a1e7bf165352ce0273765f2d72f8261fecf348614d1fa790502c667/gladepaypython-0.1.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "4ad56b5442fd03e56ba4cfdfeb6b446e", "sha256": "2d9a335d6efa14125f913d3e67233b2d709f5ce73c4b0b3f6bdf9299da37ac77"}, "downloads": -1, "filename": "gladepaypython-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4ad56b5442fd03e56ba4cfdfeb6b446e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7750, "upload_time": "2018-10-30T09:11:39", "upload_time_iso_8601": "2018-10-30T09:11:39.560700Z", "url": "https://files.pythonhosted.org/packages/4a/18/63322679fb6a111e969a8279b78126dac76d56c8cefce70da2080aca1323/gladepaypython-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a92f1e9a32bb93b1dee737cb4cbaab6", "sha256": "fcfbcb79476587edca7fe2a926d8521e595838a6c5f8b62f263cdb7c3c908d98"}, "downloads": -1, "filename": "gladepaypython-0.1.4.tar.gz", "has_sig": false, "md5_digest": "8a92f1e9a32bb93b1dee737cb4cbaab6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5747, "upload_time": "2018-10-30T09:11:41", "upload_time_iso_8601": "2018-10-30T09:11:41.134816Z", "url": "https://files.pythonhosted.org/packages/b4/b9/08458bf24faa3874584dfcaf10fa97aa4c1209487c2ab4a6e3f111454ff4/gladepaypython-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ad56b5442fd03e56ba4cfdfeb6b446e", "sha256": "2d9a335d6efa14125f913d3e67233b2d709f5ce73c4b0b3f6bdf9299da37ac77"}, "downloads": -1, "filename": "gladepaypython-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4ad56b5442fd03e56ba4cfdfeb6b446e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7750, "upload_time": "2018-10-30T09:11:39", "upload_time_iso_8601": "2018-10-30T09:11:39.560700Z", "url": "https://files.pythonhosted.org/packages/4a/18/63322679fb6a111e969a8279b78126dac76d56c8cefce70da2080aca1323/gladepaypython-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a92f1e9a32bb93b1dee737cb4cbaab6", "sha256": "fcfbcb79476587edca7fe2a926d8521e595838a6c5f8b62f263cdb7c3c908d98"}, "downloads": -1, "filename": "gladepaypython-0.1.4.tar.gz", "has_sig": false, "md5_digest": "8a92f1e9a32bb93b1dee737cb4cbaab6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5747, "upload_time": "2018-10-30T09:11:41", "upload_time_iso_8601": "2018-10-30T09:11:41.134816Z", "url": "https://files.pythonhosted.org/packages/b4/b9/08458bf24faa3874584dfcaf10fa97aa4c1209487c2ab4a6e3f111454ff4/gladepaypython-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:41 2020"}