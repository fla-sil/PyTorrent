{"info": {"author": "David Michael Brown", "author_email": "davidmichaelbrown1@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta"], "description": "========================\r\nSonnet J(SON + Net)workX\r\n========================\r\n\r\nSonnet wraps a NetworkX graph and produces detailed JSON output for use with JavaScript to produce detailed graph visualizations in the browser.\r\n\r\nGetting Started\r\n===============\r\n\r\nInstall Sonnet::\r\n\r\n\tpip install sonnet\r\n\r\nBuild a NetworkX graph::\r\n\t\r\n\timport networkx as nx\r\n\r\n\tg = nx.gnp_random_graph(20, 0.5)\r\n\r\nWrap it with Sonnet:: \r\n\r\n\timport sonnet as sn\r\n\r\n\ts = sn.Sonnet(g, name='An Awesome Graph')\r\n\r\nBuild stats directly into node directory using modified NetworkX algorithms. Currently available: degree, degree_centrality, in_degree_centrality, out_degree_centrality, closeness_centrality, betweenness_centrality, eigenvector_centrality::\r\n\r\n\ts.betweenness_centrality()\r\n\r\nFind communities and assign nodes to group based on community::\r\n\r\n\ts.find_communities()\r\n\r\nRank node size by nodes by attribute::\r\n\r\n\ts.rank_nodes(rank_by='betweenness_centrality')\r\n\r\nNow we have a nodes with lots of relevant data::\r\n\r\nProduce JSON data (example data reduced for readability)::\r\n\r\n\ts.jsonify()\r\n\r\n\t'{\r\n\t    \"directed\": false,\r\n\t    \"name\": \"An Awesome Graph\",\r\n\t    \"links\": [\r\n\t        {\r\n\t            \"source\": 4,\r\n\t            \"target\": 8\r\n\t        },\r\n\t        {\r\n\t            \"source\": 5,\r\n\t            \"target\": 7\r\n\t        },\r\n\t        {\r\n\t            \"source\": 6,\r\n\t            \"target\": 8\r\n\t        },\r\n\t    ],\r\n\t    \"multigraph\": false,\r\n\t    \"graph\": [\r\n\t        [\r\n\t            \"name\",\r\n\t            \"gnp_random_graph(10,0.5)\"\r\n\t        ]\r\n\t    ],\r\n\t    \"nodes\": [\r\n\t        {\r\n\t            \"betweenness_centrality_ranking\": 2.7258064516129035,\r\n\t            \"community\": 2,\r\n\t            \"id\": 0,\r\n\t            \"betweenness_centrality\": 0.04953703703703703\r\n\t        },\r\n\t        {\r\n\t            \"betweenness_centrality_ranking\": 1,\r\n\t            \"community\": 1,\r\n\t            \"id\": 1,\r\n\t            \"betweenness_centrality\": 0.0\r\n\t        },\r\n\t        {\r\n\t            \"betweenness_centrality_ranking\": 4.580645161290322,\r\n\t            \"community\": 1,\r\n\t            \"id\": 2,\r\n\t            \"betweenness_centrality\": 0.10277777777777775\r\n\t        },\r\n\t        {\r\n\t            \"betweenness_centrality_ranking\": 6.0,\r\n\t            \"community\": 2,\r\n\t            \"id\": 3,\r\n\t            \"betweenness_centrality\": 0.1435185185185185\r\n\t        },\r\n\t    ]\r\n\t}'\r\n\r\n\r\nD3Graph\r\n=======\r\n\r\nD3Graph is designed to produce JSON output for D3.js graphs. It works just like Sonnet, but it has extra attributes set at during init.\r\n\r\nCompare::\r\n\r\n\ts = sn.Sonnet(g)\r\n\r\n\tvars(s)\r\n\r\n\t{'color_by': 'community',\r\n\t 'graph': <networkx.classes.graph.Graph at 0x1726210>,\r\n\t 'max_node_size': 6,\r\n\t 'min_node_size': 1,\r\n\t 'name': None,\r\n\t 'rank_by': 'degree_centrality'}\r\n\r\n\td = ns.D3Graph()\r\n\r\n\tvars(d)\r\n\r\n\t{'charge': -150,\r\n\t 'color_by': 'community',\r\n\t 'graph': <networkx.classes.graph.Graph at 0x1726210>,\r\n\t 'gravity': 0.06,\r\n\t 'height': 800,\r\n\t 'link_distance': 40,\r\n\t 'max_node_size': 6,\r\n\t 'min_node_size': 1,\r\n\t 'name': None,\r\n\t 'rank_by': 'degree_centrality',\r\n\t 'width': 1280}", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "myurl", "keywords": "networkx json graph javascript D3", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sonnet", "package_url": "https://pypi.org/project/sonnet/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/sonnet/", "project_urls": {"Download": "UNKNOWN", "Homepage": "myurl"}, "release_url": "https://pypi.org/project/sonnet/0.1.6/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            ========================\n<br>Sonnet J(SON + Net)workX\n<br>========================\n<br>\n<br>Sonnet wraps a NetworkX graph and produces detailed JSON output for use with JavaScript to produce detailed graph visualizations in the browser.\n<br>\n<br>Getting Started\n<br>===============\n<br>\n<br>Install Sonnet::\n<br>\n<br>\tpip install sonnet\n<br>\n<br>Build a NetworkX graph::\n<br>\t\n<br>\timport networkx as nx\n<br>\n<br>\tg = nx.gnp_random_graph(20, 0.5)\n<br>\n<br>Wrap it with Sonnet:: \n<br>\n<br>\timport sonnet as sn\n<br>\n<br>\ts = sn.Sonnet(g, name='An Awesome Graph')\n<br>\n<br>Build stats directly into node directory using modified NetworkX algorithms. Currently available: degree, degree_centrality, in_degree_centrality, out_degree_centrality, closeness_centrality, betweenness_centrality, eigenvector_centrality::\n<br>\n<br>\ts.betweenness_centrality()\n<br>\n<br>Find communities and assign nodes to group based on community::\n<br>\n<br>\ts.find_communities()\n<br>\n<br>Rank node size by nodes by attribute::\n<br>\n<br>\ts.rank_nodes(rank_by='betweenness_centrality')\n<br>\n<br>Now we have a nodes with lots of relevant data::\n<br>\n<br>Produce JSON data (example data reduced for readability)::\n<br>\n<br>\ts.jsonify()\n<br>\n<br>\t'{\n<br>\t    \"directed\": false,\n<br>\t    \"name\": \"An Awesome Graph\",\n<br>\t    \"links\": [\n<br>\t        {\n<br>\t            \"source\": 4,\n<br>\t            \"target\": 8\n<br>\t        },\n<br>\t        {\n<br>\t            \"source\": 5,\n<br>\t            \"target\": 7\n<br>\t        },\n<br>\t        {\n<br>\t            \"source\": 6,\n<br>\t            \"target\": 8\n<br>\t        },\n<br>\t    ],\n<br>\t    \"multigraph\": false,\n<br>\t    \"graph\": [\n<br>\t        [\n<br>\t            \"name\",\n<br>\t            \"gnp_random_graph(10,0.5)\"\n<br>\t        ]\n<br>\t    ],\n<br>\t    \"nodes\": [\n<br>\t        {\n<br>\t            \"betweenness_centrality_ranking\": 2.7258064516129035,\n<br>\t            \"community\": 2,\n<br>\t            \"id\": 0,\n<br>\t            \"betweenness_centrality\": 0.04953703703703703\n<br>\t        },\n<br>\t        {\n<br>\t            \"betweenness_centrality_ranking\": 1,\n<br>\t            \"community\": 1,\n<br>\t            \"id\": 1,\n<br>\t            \"betweenness_centrality\": 0.0\n<br>\t        },\n<br>\t        {\n<br>\t            \"betweenness_centrality_ranking\": 4.580645161290322,\n<br>\t            \"community\": 1,\n<br>\t            \"id\": 2,\n<br>\t            \"betweenness_centrality\": 0.10277777777777775\n<br>\t        },\n<br>\t        {\n<br>\t            \"betweenness_centrality_ranking\": 6.0,\n<br>\t            \"community\": 2,\n<br>\t            \"id\": 3,\n<br>\t            \"betweenness_centrality\": 0.1435185185185185\n<br>\t        },\n<br>\t    ]\n<br>\t}'\n<br>\n<br>\n<br>D3Graph\n<br>=======\n<br>\n<br>D3Graph is designed to produce JSON output for D3.js graphs. It works just like Sonnet, but it has extra attributes set at during init.\n<br>\n<br>Compare::\n<br>\n<br>\ts = sn.Sonnet(g)\n<br>\n<br>\tvars(s)\n<br>\n<br>\t{'color_by': 'community',\n<br>\t 'graph': &lt;networkx.classes.graph.Graph at 0x1726210&gt;,\n<br>\t 'max_node_size': 6,\n<br>\t 'min_node_size': 1,\n<br>\t 'name': None,\n<br>\t 'rank_by': 'degree_centrality'}\n<br>\n<br>\td = ns.D3Graph()\n<br>\n<br>\tvars(d)\n<br>\n<br>\t{'charge': -150,\n<br>\t 'color_by': 'community',\n<br>\t 'graph': &lt;networkx.classes.graph.Graph at 0x1726210&gt;,\n<br>\t 'gravity': 0.06,\n<br>\t 'height': 800,\n<br>\t 'link_distance': 40,\n<br>\t 'max_node_size': 6,\n<br>\t 'min_node_size': 1,\n<br>\t 'name': None,\n<br>\t 'rank_by': 'degree_centrality',\n<br>\t 'width': 1280}\n          </div>"}, "last_serial": 895936, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "676d6ac9f0103745419b2892d8a77934", "sha256": "942a0fcf1f199edd09aeda5a93461f779a1858105b95a0df663aafa3361577a1"}, "downloads": -1, "filename": "sonnet-0.1.0.tar.gz", "has_sig": false, "md5_digest": "676d6ac9f0103745419b2892d8a77934", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7263, "upload_time": "2013-10-02T00:39:29", "upload_time_iso_8601": "2013-10-02T00:39:29.815405Z", "url": "https://files.pythonhosted.org/packages/17/c3/eed5f3bf17bba10128c0500239e543c8c63ea3efe360b1b3feded50abe07/sonnet-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d177bc690d1864f566997dceb89d29e6", "sha256": "440fce250f2a68013bd262bc277797b038004e6da26c4321837ec0c40fc3cc8b"}, "downloads": -1, "filename": "sonnet-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d177bc690d1864f566997dceb89d29e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7142, "upload_time": "2013-10-02T17:02:55", "upload_time_iso_8601": "2013-10-02T17:02:55.485199Z", "url": "https://files.pythonhosted.org/packages/f6/79/39a95de69cbc093452f0703d17ff8bc0b8b146d3398dffb3e7934ae34674/sonnet-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "0cca6d8e3b17ef063264aeffe7550a88", "sha256": "c49be065aa9c7a7677065739f02e0241d33b88ae212bc8a2e2b2f0cb32f099a8"}, "downloads": -1, "filename": "sonnet-0.1.2.tar.gz", "has_sig": false, "md5_digest": "0cca6d8e3b17ef063264aeffe7550a88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7905, "upload_time": "2013-10-02T22:28:02", "upload_time_iso_8601": "2013-10-02T22:28:02.881718Z", "url": "https://files.pythonhosted.org/packages/1e/ca/efaaedb2157d86d8cb3207289d6ba6d13322a69fa92b4e4878fab36b6adf/sonnet-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "b12861f44460549b38d7cdf7c53a6ae3", "sha256": "e7acdf1363a14d9373ad84085b48860ed705bc667489011db383165c125622ae"}, "downloads": -1, "filename": "sonnet-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b12861f44460549b38d7cdf7c53a6ae3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10941, "upload_time": "2013-10-16T01:39:47", "upload_time_iso_8601": "2013-10-16T01:39:47.885086Z", "url": "https://files.pythonhosted.org/packages/19/7d/968cc3b62568f1e00a8b6777052ebb2e31b72c57dc01ddf97d400d2be022/sonnet-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "e16b1bd528d860e18ce4434299910a02", "sha256": "d901a462d3db805e09e9f1c1b3d48c83d441003e0b2c5d3016755b3d21c30492"}, "downloads": -1, "filename": "sonnet-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e16b1bd528d860e18ce4434299910a02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10945, "upload_time": "2013-10-16T01:52:43", "upload_time_iso_8601": "2013-10-16T01:52:43.894210Z", "url": "https://files.pythonhosted.org/packages/16/21/9f1118121e53b35010988ac507ce8ea83c12f9d5db3ce89d56bbba4e08c1/sonnet-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "90c11270952ead2c767493d5a130b7be", "sha256": "bd3fd459d4218c1c9b0cad7321b31bcc44b5fc7b66208930363c1510c9bc9039"}, "downloads": -1, "filename": "sonnet-0.1.5.tar.gz", "has_sig": false, "md5_digest": "90c11270952ead2c767493d5a130b7be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10965, "upload_time": "2013-10-16T02:59:52", "upload_time_iso_8601": "2013-10-16T02:59:52.022501Z", "url": "https://files.pythonhosted.org/packages/e8/0d/d6781a753e0fd951f772ff9bfba166058f7740c5a9f2238825d6f7e03f78/sonnet-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "1c95dbd4a285f6bffdb91ad66c2939f3", "sha256": "57de398cff621a66f9d0658a9efe52059cd6ff38dc2e87969d6f365f5fc1ebdf"}, "downloads": -1, "filename": "sonnet-0.1.6.tar.gz", "has_sig": false, "md5_digest": "1c95dbd4a285f6bffdb91ad66c2939f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10971, "upload_time": "2013-10-16T03:57:19", "upload_time_iso_8601": "2013-10-16T03:57:19.814103Z", "url": "https://files.pythonhosted.org/packages/01/aa/641d5113d301cc67e2efd802bfd566ab5390676ea1117b2b8954ea6d60c1/sonnet-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1c95dbd4a285f6bffdb91ad66c2939f3", "sha256": "57de398cff621a66f9d0658a9efe52059cd6ff38dc2e87969d6f365f5fc1ebdf"}, "downloads": -1, "filename": "sonnet-0.1.6.tar.gz", "has_sig": false, "md5_digest": "1c95dbd4a285f6bffdb91ad66c2939f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10971, "upload_time": "2013-10-16T03:57:19", "upload_time_iso_8601": "2013-10-16T03:57:19.814103Z", "url": "https://files.pythonhosted.org/packages/01/aa/641d5113d301cc67e2efd802bfd566ab5390676ea1117b2b8954ea6d60c1/sonnet-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:36 2020"}