{"info": {"author": "Edward Huang", "author_email": "e.huang@gns.cri.nz", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Sphinx :: Extension", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Text Processing"], "description": "\nM2RR\n====\n\n\n.. image:: https://img.shields.io/pypi/v/m2rr.svg\n   :target: https://pypi.python.org/pypi/m2rr\n   :alt: PyPI\n\n\n.. image:: https://img.shields.io/pypi/pyversions/m2rr.svg\n   :target: https://pypi.python.org/pypi/m2rr\n   :alt: PyPI version\n\n\n.. image:: https://img.shields.io/badge/docs-latest-brightgreen.svg\n   :target: https://qhua948.github.io/m2rr\n   :alt: Documentation\n\n\n.. image:: https://travis-ci.org/qhua948/m2rr.svg?branch=master\n   :target: https://travis-ci.org/qhua948/m2rr\n   :alt: Build Status\n\n\n.. image:: https://codecov.io/gh/qhua948/m2rr/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/qhua948/m2rr\n   :alt: codecov\n\n\n----\n\nM2RR (R for Reborn) converts a markdown file including reStructuredText (rst) markups to a valid\nrst format.\n\nWhy another converter?\n----------------------\n\nI wanted to write sphinx document in markdown, since it's widely used now and\neasy to write code blocks and lists. However, converters using pandoc or\nrecommonmark do not support many rst markups and sphinx extensions. For\nexample, rst's reference link like ``see `ref`_`` (this is very convenient in\nlong document in which same link appears multiple times) will be converted to\na code block in HTML like ``see <code>ref</code>_``\\ , which is not expected.\n\nWhy fork\n--------\n\nThe original author seems to be no longer maintain the repository actively.\n`Original Repo <https://github.com/miyakogi/m2r/>`_.\n\nFeatures\n--------\n\n\n* Basic markdown and some extensions (see below)\n\n  * inline/block-level raw html\n  * fenced-code block\n  * tables\n  * footnotes (\\ ``[^1]``\\ )\n\n* Inline- and Block-level rst markups\n\n  * single- and multi-line directives (\\ ``.. directive::``\\ )\n  * inline-roles (\\ ``:code:`print(1)` ...``\\ )\n  * ref-link (\\ ``see `ref`_``\\ )\n  * footnotes (\\ ``[#fn]_``\\ )\n  * math extension inspired by `recommonmark <https://recommonmark.readthedocs.io/en/latest/index.html>`_\n\n* Sphinx extension\n\n  * add markdown support for sphinx\n  * ``mdinclude`` directive to include markdown from md or rst files\n  * option to parse relative links into ref and doc directives (\\ ``m2rr_parse_relative_links``\\ )\n\n* Pure python implementation\n\n  * pandoc is not required\n\nInstallation\n------------\n\nPython 2.7 or Python 3.4+ is required.\n\n.. code-block:: text\n\n   pip install m2rr\n\nOr,\n\n.. code-block:: text\n\n   python3 -m pip install m2rr\n\nUsage\n-----\n\nCommand Line\n^^^^^^^^^^^^\n\n``m2rr`` command converts markdown file to rst format.\n\n.. code-block:: text\n\n   m2rr your_document.md [your_document2.md ...]\n\nThen you will find ``your_document.rst`` in the same directory.\n\nProgrammatic Use\n^^^^^^^^^^^^^^^^\n\nImport ``m2rr.convert`` function and call it with markdown text.\nThen it will return converted text.\n\n.. code-block:: python\n\n   from m2rr import convert\n   rst = convert('# Title\\n\\nSentence.')\n   print(rst)\n   # Title\n   # =====\n   #\n   # Sentence.\n\nOr, use ``parse_from_file`` function to load markdown file and obtain converted\ntext.\n\n.. code-block:: python\n\n   from m2rr import parse_from_file\n   output = parse_from_file('markdown_file.md')\n\nThis is an example of setup.py to write README in markdown, and publish it to\nPyPI as rst format.\n\n.. code-block:: python\n\n   readme_file = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'README.md')\n   try:\n       from m2rr import parse_from_file\n       readme = parse_from_file(readme_file)\n   except ImportError:\n       # m2rr may not be installed in user environment\n       with open(readme_file) as f:\n           readme = f.read()\n   setup(\n       ...,\n       long_description=readme,\n       ...,\n   )\n\nSphinx Integration\n^^^^^^^^^^^^^^^^^^\n\nIn your conf.py, add the following lines.\n\n.. code-block:: python\n\n   extensions = [\n       ...,\n       'm2rr',\n   ]\n\n   # source_suffix = '.rst'\n   source_suffix = ['.rst', '.md']\n\nWrite index.md and run ``make html``.\n\nWhen ``m2rr`` extension is enabled on sphinx and ``.md`` file is loaded, m2rr\nconverts to rst and pass to sphinx, not making new ``.rst`` file.\n\nmdinclude directive\n~~~~~~~~~~~~~~~~~~~\n\nLike ``.. include:: file`` directive, ``.. mdinclude:: file`` directive inserts\nmarkdown file at the line.\n\nNote: do not use ``.. include:: file`` directive to include markdown file even if\nin the markdown file, please use ``.. mdinclude:: file`` instead.\n\nRestrictions\n------------\n\n\n* In the rst's directives, markdown is not available. Please write in rst.\n* Column alignment of tables is not supported. (rst does not support this feature)\n* Heading with overline-and-underline is not supported.\n\n  * Heading with underline is OK\n\n* Rst heading marks are currently hard-coded and unchangeable.\n\n  * H1: ``=``\\ , H2: ``-``\\ , H3: ``^``\\ , H4: ``~``\\ , H5: ``\"``\\ , H6: ``#``\n\nIf you find any bug or unexpected behaviour, please report it to\n`Issues <https://github.com/qhua948/m2rr/issues>`_.\n\nExample\n-------\n\nSee `example document <https://qhua948.github.io/m2rr/example.html>`_ and `its\nsource code <https://github.com/qhua948/m2rr/blob/master/docs/example.md>`_.\n\nI'm using m2rr for writing user guide of `WDOM <https://github.com/miyakogi/wdom>`_.\nSo you can see it as another example. Its `HTML is\nhere <http://wdom-py.readthedocs.io/en/latest/guide/index.html>`_\\ , and `its\nsource code is here <https://github.com/miyakogi/wdom/tree/dev/docs/guide>`_.\n\nDemo editor\n^^^^^^^^^^^\n\nDemo editor of m2rr is available.\nIf you are interested in m2rr, please try it.\n\n`https://github.com/miyakogi/m2rdemo <https://github.com/miyakogi/m2rdemo>`_\n\nAcknowledgement\n---------------\n\nm2rr is written as an extension of\n`mistune <http://mistune.readthedocs.io/en/latest/>`_\\ , which is highly extensible\npure-python markdown parser.\nWithout the mistune, I couldn't write this. Thank you!\n\nLicence\n-------\n\n`MIT <https://github.com/miyakogi/m2rr/blob/master/LICENSE>`_\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/qhua948/m2rr", "keywords": "Markdown reStructuredText sphinx-extension", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "m2rr", "package_url": "https://pypi.org/project/m2rr/", "platform": "", "project_url": "https://pypi.org/project/m2rr/", "project_urls": {"Homepage": "https://github.com/qhua948/m2rr"}, "release_url": "https://pypi.org/project/m2rr/0.2.3/", "requires_dist": ["mistune", "docutils"], "requires_python": "", "summary": "Convert Markdown to reStructuredText, m2rr.", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/m2rr\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9d8b3c4f6a04b8a7d5a4ea264f938e72802ed7c7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d3272722e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/m2rr\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0158a2f9f3e6483e6a18aee8f2a274a8912c4496/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6d3272722e737667\"></a>\n<a href=\"https://qhua948.github.io/m2rr\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f2379b41b2809fb0ad4959e1f0113f57abc80a64/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d627269676874677265656e2e737667\"></a>\n<a href=\"https://travis-ci.org/qhua948/m2rr\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8dfd4e43896cb95614baf32ddae54938d00677aa/68747470733a2f2f7472617669732d63692e6f72672f716875613934382f6d3272722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/qhua948/m2rr\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd79977f8e6871c064bac25938511b90473ac66b/68747470733a2f2f636f6465636f762e696f2f67682f716875613934382f6d3272722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<hr class=\"docutils\">\n<p>M2RR (R for Reborn) converts a markdown file including reStructuredText (rst) markups to a valid\nrst format.</p>\n<div id=\"why-another-converter\">\n<h2>Why another converter?</h2>\n<p>I wanted to write sphinx document in markdown, since it\u2019s widely used now and\neasy to write code blocks and lists. However, converters using pandoc or\nrecommonmark do not support many rst markups and sphinx extensions. For\nexample, rst\u2019s reference link like <tt>see `ref`_</tt> (this is very convenient in\nlong document in which same link appears multiple times) will be converted to\na code block in HTML like <tt>see <span class=\"pre\">&lt;code&gt;ref&lt;/code&gt;_</span></tt>, which is not expected.</p>\n</div>\n<div id=\"why-fork\">\n<h2>Why fork</h2>\n<p>The original author seems to be no longer maintain the repository actively.\n<a href=\"https://github.com/miyakogi/m2r/\" rel=\"nofollow\">Original Repo</a>.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Basic markdown and some extensions (see below)<ul>\n<li>inline/block-level raw html</li>\n<li>fenced-code block</li>\n<li>tables</li>\n<li>footnotes (<tt>[^1]</tt>)</li>\n</ul>\n</li>\n<li>Inline- and Block-level rst markups<ul>\n<li>single- and multi-line directives (<tt>.. directive::</tt>)</li>\n<li>inline-roles (<tt><span class=\"pre\">:code:`print(1)`</span> ...</tt>)</li>\n<li>ref-link (<tt>see `ref`_</tt>)</li>\n<li>footnotes (<tt>[#fn]_</tt>)</li>\n<li>math extension inspired by <a href=\"https://recommonmark.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">recommonmark</a></li>\n</ul>\n</li>\n<li>Sphinx extension<ul>\n<li>add markdown support for sphinx</li>\n<li><tt>mdinclude</tt> directive to include markdown from md or rst files</li>\n<li>option to parse relative links into ref and doc directives (<tt>m2rr_parse_relative_links</tt>)</li>\n</ul>\n</li>\n<li>Pure python implementation<ul>\n<li>pandoc is not required</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Python 2.7 or Python 3.4+ is required.</p>\n<pre>pip install m2rr\n</pre>\n<p>Or,</p>\n<pre>python3 -m pip install m2rr\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"command-line\">\n<h3>Command Line</h3>\n<p><tt>m2rr</tt> command converts markdown file to rst format.</p>\n<pre>m2rr your_document.md [your_document2.md ...]\n</pre>\n<p>Then you will find <tt>your_document.rst</tt> in the same directory.</p>\n</div>\n<div id=\"programmatic-use\">\n<h3>Programmatic Use</h3>\n<p>Import <tt>m2rr.convert</tt> function and call it with markdown text.\nThen it will return converted text.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">m2rr</span> <span class=\"kn\">import</span> <span class=\"n\">convert</span>\n<span class=\"n\">rst</span> <span class=\"o\">=</span> <span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"s1\">'# Title</span><span class=\"se\">\\n\\n</span><span class=\"s1\">Sentence.'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">rst</span><span class=\"p\">)</span>\n<span class=\"c1\"># Title</span>\n<span class=\"c1\"># =====</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Sentence.</span>\n</pre>\n<p>Or, use <tt>parse_from_file</tt> function to load markdown file and obtain converted\ntext.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">m2rr</span> <span class=\"kn\">import</span> <span class=\"n\">parse_from_file</span>\n<span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">parse_from_file</span><span class=\"p\">(</span><span class=\"s1\">'markdown_file.md'</span><span class=\"p\">)</span>\n</pre>\n<p>This is an example of setup.py to write README in markdown, and publish it to\nPyPI as rst format.</p>\n<pre><span class=\"n\">readme_file</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)),</span> <span class=\"s1\">'README.md'</span><span class=\"p\">)</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">m2rr</span> <span class=\"kn\">import</span> <span class=\"n\">parse_from_file</span>\n    <span class=\"n\">readme</span> <span class=\"o\">=</span> <span class=\"n\">parse_from_file</span><span class=\"p\">(</span><span class=\"n\">readme_file</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n    <span class=\"c1\"># m2rr may not be installed in user environment</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">readme_file</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n        <span class=\"n\">readme</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"n\">setup</span><span class=\"p\">(</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"n\">long_description</span><span class=\"o\">=</span><span class=\"n\">readme</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"sphinx-integration\">\n<h3>Sphinx Integration</h3>\n<p>In your conf.py, add the following lines.</p>\n<pre><span class=\"n\">extensions</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'m2rr'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n\n<span class=\"c1\"># source_suffix = '.rst'</span>\n<span class=\"n\">source_suffix</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'.rst'</span><span class=\"p\">,</span> <span class=\"s1\">'.md'</span><span class=\"p\">]</span>\n</pre>\n<p>Write index.md and run <tt>make html</tt>.</p>\n<p>When <tt>m2rr</tt> extension is enabled on sphinx and <tt>.md</tt> file is loaded, m2rr\nconverts to rst and pass to sphinx, not making new <tt>.rst</tt> file.</p>\n<div id=\"mdinclude-directive\">\n<h4>mdinclude directive</h4>\n<p>Like <tt>.. include:: file</tt> directive, <tt>.. mdinclude:: file</tt> directive inserts\nmarkdown file at the line.</p>\n<p>Note: do not use <tt>.. include:: file</tt> directive to include markdown file even if\nin the markdown file, please use <tt>.. mdinclude:: file</tt> instead.</p>\n</div>\n</div>\n</div>\n<div id=\"restrictions\">\n<h2>Restrictions</h2>\n<ul>\n<li>In the rst\u2019s directives, markdown is not available. Please write in rst.</li>\n<li>Column alignment of tables is not supported. (rst does not support this feature)</li>\n<li>Heading with overline-and-underline is not supported.<ul>\n<li>Heading with underline is OK</li>\n</ul>\n</li>\n<li>Rst heading marks are currently hard-coded and unchangeable.<ul>\n<li>H1: <tt>=</tt>, H2: <tt>-</tt>, H3: <tt>^</tt>, H4: <tt>~</tt>, H5: <tt>\"</tt>, H6: <tt>#</tt></li>\n</ul>\n</li>\n</ul>\n<p>If you find any bug or unexpected behaviour, please report it to\n<a href=\"https://github.com/qhua948/m2rr/issues\" rel=\"nofollow\">Issues</a>.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>See <a href=\"https://qhua948.github.io/m2rr/example.html\" rel=\"nofollow\">example document</a> and <a href=\"https://github.com/qhua948/m2rr/blob/master/docs/example.md\" rel=\"nofollow\">its\nsource code</a>.</p>\n<p>I\u2019m using m2rr for writing user guide of <a href=\"https://github.com/miyakogi/wdom\" rel=\"nofollow\">WDOM</a>.\nSo you can see it as another example. Its <a href=\"http://wdom-py.readthedocs.io/en/latest/guide/index.html\" rel=\"nofollow\">HTML is\nhere</a>, and <a href=\"https://github.com/miyakogi/wdom/tree/dev/docs/guide\" rel=\"nofollow\">its\nsource code is here</a>.</p>\n<div id=\"demo-editor\">\n<h3>Demo editor</h3>\n<p>Demo editor of m2rr is available.\nIf you are interested in m2rr, please try it.</p>\n<p><a href=\"https://github.com/miyakogi/m2rdemo\" rel=\"nofollow\">https://github.com/miyakogi/m2rdemo</a></p>\n</div>\n</div>\n<div id=\"acknowledgement\">\n<h2>Acknowledgement</h2>\n<p>m2rr is written as an extension of\n<a href=\"http://mistune.readthedocs.io/en/latest/\" rel=\"nofollow\">mistune</a>, which is highly extensible\npure-python markdown parser.\nWithout the mistune, I couldn\u2019t write this. Thank you!</p>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p><a href=\"https://github.com/miyakogi/m2rr/blob/master/LICENSE\" rel=\"nofollow\">MIT</a></p>\n</div>\n\n          </div>"}, "last_serial": 6470263, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "782aba9a00deff14cd5c22c1b1622fe7", "sha256": "1b8b14dbc40d458167cc6176f3ab2c2ee321e1eb000eaeda26a31274d39ddd39"}, "downloads": -1, "filename": "m2rr-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "782aba9a00deff14cd5c22c1b1622fe7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10624, "upload_time": "2020-01-16T02:23:11", "upload_time_iso_8601": "2020-01-16T02:23:11.475892Z", "url": "https://files.pythonhosted.org/packages/6a/49/cdc3653b96bf03998b666e5c549f10e9d82fe1fea4a2b232b84a507a5c58/m2rr-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d5595ce6c815d002e3d9f3d8b188f21", "sha256": "baa289affc04b435d8ee22ca5301282319647486a752e9c2b8b0bb58d8fbe537"}, "downloads": -1, "filename": "m2rr-0.2.2.tar.gz", "has_sig": false, "md5_digest": "0d5595ce6c815d002e3d9f3d8b188f21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16172, "upload_time": "2020-01-16T02:23:14", "upload_time_iso_8601": "2020-01-16T02:23:14.471996Z", "url": "https://files.pythonhosted.org/packages/c0/73/9a6c2f9015e4d05f87d4b7308883510397f20466ff5565ab91807dbf9834/m2rr-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "8973bd6640118bc5935da7d881f266c3", "sha256": "316fab11b551affec9ab1c66887ba2a7f6bf848fbb55dd70efed55a580bb81e0"}, "downloads": -1, "filename": "m2rr-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8973bd6640118bc5935da7d881f266c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10757, "upload_time": "2020-01-17T02:34:58", "upload_time_iso_8601": "2020-01-17T02:34:58.180675Z", "url": "https://files.pythonhosted.org/packages/8c/80/b4734d2fd3aad482c8a4a3422e92a57ebc0f54021f1014016729c4f5c0b3/m2rr-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e200ffd15d0d8fea2f8e99904e655e08", "sha256": "0471e0aa689cccb930bef9271a9d3a01da3fdbfea2827612ecaf15237348e01e"}, "downloads": -1, "filename": "m2rr-0.2.3.tar.gz", "has_sig": false, "md5_digest": "e200ffd15d0d8fea2f8e99904e655e08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16418, "upload_time": "2020-01-17T02:35:00", "upload_time_iso_8601": "2020-01-17T02:35:00.421955Z", "url": "https://files.pythonhosted.org/packages/59/91/5782966b17c5d0e6fb58f100424b0d9138bf1460c1e212a41f6e54f8198f/m2rr-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8973bd6640118bc5935da7d881f266c3", "sha256": "316fab11b551affec9ab1c66887ba2a7f6bf848fbb55dd70efed55a580bb81e0"}, "downloads": -1, "filename": "m2rr-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8973bd6640118bc5935da7d881f266c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10757, "upload_time": "2020-01-17T02:34:58", "upload_time_iso_8601": "2020-01-17T02:34:58.180675Z", "url": "https://files.pythonhosted.org/packages/8c/80/b4734d2fd3aad482c8a4a3422e92a57ebc0f54021f1014016729c4f5c0b3/m2rr-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e200ffd15d0d8fea2f8e99904e655e08", "sha256": "0471e0aa689cccb930bef9271a9d3a01da3fdbfea2827612ecaf15237348e01e"}, "downloads": -1, "filename": "m2rr-0.2.3.tar.gz", "has_sig": false, "md5_digest": "e200ffd15d0d8fea2f8e99904e655e08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16418, "upload_time": "2020-01-17T02:35:00", "upload_time_iso_8601": "2020-01-17T02:35:00.421955Z", "url": "https://files.pythonhosted.org/packages/59/91/5782966b17c5d0e6fb58f100424b0d9138bf1460c1e212a41f6e54f8198f/m2rr-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:34 2020"}