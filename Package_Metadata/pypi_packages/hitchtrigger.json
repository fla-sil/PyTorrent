{"info": {"author": "Colm O'Connor", "author_email": "colm.oconnor.github@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: Text Processing :: Markup"], "description": "HitchTrigger\n============\n\nHitchTrigger is a self contained build tool designed to trigger blocks of build commands when a condition is met\nthat necessitates a rebuild.\n\nThe conditions can be one or more combined of any of the following:\n\n* A file or files (e.g. source files) have changed.\n* A specified (build) directory did not exist.\n* A period of time has elapsed.\n* A 'watched' variable has changed its value.\n* An exception occurred the previous time the commands were run (always by default).\n\nTo install from pypi::\n\n  $ hitch install hitchtrigger\n\n\nUse\n---\n\n.. code-block:: python\n\n    import hitchtrigger\n\n    monitor = hitchtrigger.Monitor(\n        \"/path/to/project.watch\"\n        #override=[\"virtualenv\", ],\n    )\n\n    # Will run in the following cases:\n    #\n    ## The command block has never been run before.\n    ## An exception was triggered within the context manager on the previous run.\n    ## venv directory is non-existent.\n    ## A period of 7 days has elapsed\n    ## A previous block named 'previousblock' was run.\n    ## Either requirements.txt or dev_requirements.txt have been modified (file modification dates are monitored).\n    ## Var \"v=1\" is changed (e.g. to \"v=2\").\n    ## The line 'override=[\"virtualenv\", ]' is uncommented.\n\n    with monitor.block(\n        \"virtualenv\",\n        monitor.nonexistent(\"venv\") | monitor.not_run_since(days=7) | monitor.was_run(\"previousblock\")\n        monitor.modified([\"requirements.txt\", \"dev_requirements.txt\"]) | monitor.var(v=1)\n    ).context() as trigger:\n        if trigger:\n            print(trigger.why)  # Prints out reason for running\n\n            Path(\"venv\").rmtree(ignore_errors=True)\n            virtualenv(\"venv\").run()\n            pip(\"install\", \"-r\", \"requirements.txt\").run()\n            pip(\"freeze\").stdout(Path(\"freeze.txt\")).run()\n            pip(\"install\", \"dev_requirements.txt\").run()\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hitchtest/hitchtrigger", "keywords": "test build", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "hitchtrigger", "package_url": "https://pypi.org/project/hitchtrigger/", "platform": "", "project_url": "https://pypi.org/project/hitchtrigger/", "project_urls": {"Homepage": "https://github.com/hitchtest/hitchtrigger"}, "release_url": "https://pypi.org/project/hitchtrigger/0.2/", "requires_dist": null, "requires_python": "", "summary": "Build tool to selectively run blocks of build commands under specified conditions", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>HitchTrigger is a self contained build tool designed to trigger blocks of build commands when a condition is met\nthat necessitates a rebuild.</p>\n<p>The conditions can be one or more combined of any of the following:</p>\n<ul>\n<li>A file or files (e.g. source files) have changed.</li>\n<li>A specified (build) directory did not exist.</li>\n<li>A period of time has elapsed.</li>\n<li>A \u2018watched\u2019 variable has changed its value.</li>\n<li>An exception occurred the previous time the commands were run (always by default).</li>\n</ul>\n<p>To install from pypi:</p>\n<pre>$ hitch install hitchtrigger\n</pre>\n<div id=\"use\">\n<h2>Use</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">hitchtrigger</span>\n\n<span class=\"n\">monitor</span> <span class=\"o\">=</span> <span class=\"n\">hitchtrigger</span><span class=\"o\">.</span><span class=\"n\">Monitor</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"/path/to/project.watch\"</span>\n    <span class=\"c1\">#override=[\"virtualenv\", ],</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Will run in the following cases:</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">## The command block has never been run before.</span>\n<span class=\"c1\">## An exception was triggered within the context manager on the previous run.</span>\n<span class=\"c1\">## venv directory is non-existent.</span>\n<span class=\"c1\">## A period of 7 days has elapsed</span>\n<span class=\"c1\">## A previous block named 'previousblock' was run.</span>\n<span class=\"c1\">## Either requirements.txt or dev_requirements.txt have been modified (file modification dates are monitored).</span>\n<span class=\"c1\">## Var \"v=1\" is changed (e.g. to \"v=2\").</span>\n<span class=\"c1\">## The line 'override=[\"virtualenv\", ]' is uncommented.</span>\n\n<span class=\"k\">with</span> <span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">block</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"virtualenv\"</span><span class=\"p\">,</span>\n    <span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">nonexistent</span><span class=\"p\">(</span><span class=\"s2\">\"venv\"</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">not_run_since</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">was_run</span><span class=\"p\">(</span><span class=\"s2\">\"previousblock\"</span><span class=\"p\">)</span>\n    <span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">modified</span><span class=\"p\">([</span><span class=\"s2\">\"requirements.txt\"</span><span class=\"p\">,</span> <span class=\"s2\">\"dev_requirements.txt\"</span><span class=\"p\">])</span> <span class=\"o\">|</span> <span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">var</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">trigger</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">trigger</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">trigger</span><span class=\"o\">.</span><span class=\"n\">why</span><span class=\"p\">)</span>  <span class=\"c1\"># Prints out reason for running</span>\n\n        <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s2\">\"venv\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">rmtree</span><span class=\"p\">(</span><span class=\"n\">ignore_errors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">virtualenv</span><span class=\"p\">(</span><span class=\"s2\">\"venv\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n        <span class=\"n\">pip</span><span class=\"p\">(</span><span class=\"s2\">\"install\"</span><span class=\"p\">,</span> <span class=\"s2\">\"-r\"</span><span class=\"p\">,</span> <span class=\"s2\">\"requirements.txt\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n        <span class=\"n\">pip</span><span class=\"p\">(</span><span class=\"s2\">\"freeze\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">(</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s2\">\"freeze.txt\"</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n        <span class=\"n\">pip</span><span class=\"p\">(</span><span class=\"s2\">\"install\"</span><span class=\"p\">,</span> <span class=\"s2\">\"dev_requirements.txt\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2474635, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "618b225901ffb1f531e3e00a94e1e471", "sha256": "413c5da2b11dc7d46df0ae94a3961879aef3a6cb10a6682611cad9868060b9e3"}, "downloads": -1, "filename": "hitchtrigger-0.2.tar.gz", "has_sig": false, "md5_digest": "618b225901ffb1f531e3e00a94e1e471", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5675, "upload_time": "2016-11-21T19:39:24", "upload_time_iso_8601": "2016-11-21T19:39:24.890830Z", "url": "https://files.pythonhosted.org/packages/1f/c6/3338cdd98afa5307a750e95e3e96a6ac0caae7826addd8775afa41e49e1e/hitchtrigger-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "618b225901ffb1f531e3e00a94e1e471", "sha256": "413c5da2b11dc7d46df0ae94a3961879aef3a6cb10a6682611cad9868060b9e3"}, "downloads": -1, "filename": "hitchtrigger-0.2.tar.gz", "has_sig": false, "md5_digest": "618b225901ffb1f531e3e00a94e1e471", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5675, "upload_time": "2016-11-21T19:39:24", "upload_time_iso_8601": "2016-11-21T19:39:24.890830Z", "url": "https://files.pythonhosted.org/packages/1f/c6/3338cdd98afa5307a750e95e3e96a6ac0caae7826addd8775afa41e49e1e/hitchtrigger-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:02 2020"}