{"info": {"author": "Mario Werner", "author_email": "mario.werner@iaik.tugraz.at", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Build Tools", "Topic :: Utilities"], "description": "Tooling package for the computer architecture course (aka Rechnerorganisation) at\n`Graz University of Technology <https://www.tugraz.at>`_.\n\nThis package provides utilities and tooling for working with textual and binary assembly variants.\nIn more detail, we provide comparable simple implementations of standard tools (e.g., assemblers,\ninstruction set simulators) that are required for experimenting with self-written processors.\nGiven that the tools are used for teaching, the focus of the package is correctness and\nextensibility. As instruction set architecture, Princeton's\n`TOY <https://introcs.cs.princeton.edu/java/62toy/>`_, incl. various extensions, and a subset of the\n`RISC-V RV32I <https://riscv.org/specifications/>`_ are currently supported.\n\nQuick and Dirty Usage of the Tools\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor fast experimentation, executable entry points for the most important tools like ``toyasm-ng.py``\nand ``toysim-ng.py`` are provided next to this README. Subsequently, it is possible to directly\nuse these applications like in one of the following examples:\n\n.. code-block:: bash\n\n    $ python3 ./relative/pkg_path/toyasm-ng.py some_input_file.asm\n    $ python3 /absolute/pkg_path/toyasm-ng.py some_input_file.asm\n\nGiven that the entry points are marked as executable (i.e., ``chmod +x ...``) and have a proper\n`shebang <https://en.wikipedia.org/wiki/Shebang_(Unix)>`_, on unix-like systems, also direct\nexecution is possible:\n\n.. code-block:: bash\n\n    $ ./relative/pkg_path/toyasm-ng.py some_input_file.asm\n    $ /absolute/pkg_path/toyasm-ng.py some_input_file.asm\n\nFinally, when the root directory of this package is part of the ``PATH``\n(e.g., ``export PATH=/absolute/pkg_path:$PATH``) environment variable, execution of the tools\nsimply by name is working too.\n\n.. code-block:: bash\n\n    $ toyasm-ng.py some_input_file.asm\n\nProper Installation and Usage of the Package\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*asmlib* is a proper python package and can also be installed via the standard package manager\n(e.g., ``pip3 install --user /absolute/pkg_path``). Note that, when development on to the package is\nplanned, installing the package as editable by adding the ``-e`` command line flag is recommended.\nAdditionally, `virtual environments <https://docs.python.org/3.6/library/venv.html>`_\n(e.g., ``python3 -m venv _venv && source_venv/bin/activate``) can be used too.\n\nEither way, this automatically installs the entry points into the correct directories and the tools\ncan directly be used on the command line (i.e., ``toyasm-ng.py some_input_file.asm``).\n\nBuilding the Sphinx Documentation\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhen Sphinx is installed (i.e., ``pip3 install sphinx sphinx-autodoc-typehints``), the HTML API\ndocumentation for this package can be built via the following ``sphinx-build`` invocation:\n\n.. code-block:: bash\n\n    $ sphinx-build doc doc/_build/html\n\nAlternatively, the ``sphinx`` command on the setup.py file can be used.\n\n.. code-block:: bash\n\n    $ python3 ./setup.py sphinx\n\nEither way, the API documentation gets automatically generated by executing ``sphinx-apidoc`` first.\nThe resulting HTML output can be found in the ``doc/_build/html`` directory.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://extgit.iaik.tugraz.at/con/asmlib", "keywords": "TOY assembler simulator computer architecture teaching", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "asmlib", "package_url": "https://pypi.org/project/asmlib/", "platform": "", "project_url": "https://pypi.org/project/asmlib/", "project_urls": {"Homepage": "https://extgit.iaik.tugraz.at/con/asmlib"}, "release_url": "https://pypi.org/project/asmlib/2.0.0/", "requires_dist": ["sphinx; extra == 'documentation'", "sphinx-autodoc-typehints; extra == 'documentation'"], "requires_python": "", "summary": "Tooling package for the computer architecture course at Graz University of Technology.", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Tooling package for the computer architecture course (aka Rechnerorganisation) at\n<a href=\"https://www.tugraz.at\" rel=\"nofollow\">Graz University of Technology</a>.</p>\n<p>This package provides utilities and tooling for working with textual and binary assembly variants.\nIn more detail, we provide comparable simple implementations of standard tools (e.g., assemblers,\ninstruction set simulators) that are required for experimenting with self-written processors.\nGiven that the tools are used for teaching, the focus of the package is correctness and\nextensibility. As instruction set architecture, Princeton\u2019s\n<a href=\"https://introcs.cs.princeton.edu/java/62toy/\" rel=\"nofollow\">TOY</a>, incl. various extensions, and a subset of the\n<a href=\"https://riscv.org/specifications/\" rel=\"nofollow\">RISC-V RV32I</a> are currently supported.</p>\n<div id=\"quick-and-dirty-usage-of-the-tools\">\n<h2>Quick and Dirty Usage of the Tools</h2>\n<p>For fast experimentation, executable entry points for the most important tools like <tt><span class=\"pre\">toyasm-ng.py</span></tt>\nand <tt><span class=\"pre\">toysim-ng.py</span></tt> are provided next to this README. Subsequently, it is possible to directly\nuse these applications like in one of the following examples:</p>\n<pre>$ python3 ./relative/pkg_path/toyasm-ng.py some_input_file.asm\n$ python3 /absolute/pkg_path/toyasm-ng.py some_input_file.asm\n</pre>\n<p>Given that the entry points are marked as executable (i.e., <tt>chmod +x ...</tt>) and have a proper\n<a href=\"https://en.wikipedia.org/wiki/Shebang_(Unix)\" rel=\"nofollow\">shebang</a>, on unix-like systems, also direct\nexecution is possible:</p>\n<pre>$ ./relative/pkg_path/toyasm-ng.py some_input_file.asm\n$ /absolute/pkg_path/toyasm-ng.py some_input_file.asm\n</pre>\n<p>Finally, when the root directory of this package is part of the <tt>PATH</tt>\n(e.g., <tt>export <span class=\"pre\">PATH=/absolute/pkg_path:$PATH</span></tt>) environment variable, execution of the tools\nsimply by name is working too.</p>\n<pre>$ toyasm-ng.py some_input_file.asm\n</pre>\n</div>\n<div id=\"proper-installation-and-usage-of-the-package\">\n<h2>Proper Installation and Usage of the Package</h2>\n<p><em>asmlib</em> is a proper python package and can also be installed via the standard package manager\n(e.g., <tt>pip3 install <span class=\"pre\">--user</span> /absolute/pkg_path</tt>). Note that, when development on to the package is\nplanned, installing the package as editable by adding the <tt><span class=\"pre\">-e</span></tt> command line flag is recommended.\nAdditionally, <a href=\"https://docs.python.org/3.6/library/venv.html\" rel=\"nofollow\">virtual environments</a>\n(e.g., <tt>python3 <span class=\"pre\">-m</span> venv _venv &amp;&amp; source_venv/bin/activate</tt>) can be used too.</p>\n<p>Either way, this automatically installs the entry points into the correct directories and the tools\ncan directly be used on the command line (i.e., <tt><span class=\"pre\">toyasm-ng.py</span> some_input_file.asm</tt>).</p>\n</div>\n<div id=\"building-the-sphinx-documentation\">\n<h2>Building the Sphinx Documentation</h2>\n<p>When Sphinx is installed (i.e., <tt>pip3 install sphinx <span class=\"pre\">sphinx-autodoc-typehints</span></tt>), the HTML API\ndocumentation for this package can be built via the following <tt><span class=\"pre\">sphinx-build</span></tt> invocation:</p>\n<pre>$ sphinx-build doc doc/_build/html\n</pre>\n<p>Alternatively, the <tt>sphinx</tt> command on the setup.py file can be used.</p>\n<pre>$ python3 ./setup.py sphinx\n</pre>\n<p>Either way, the API documentation gets automatically generated by executing <tt><span class=\"pre\">sphinx-apidoc</span></tt> first.\nThe resulting HTML output can be found in the <tt>doc/_build/html</tt> directory.</p>\n</div>\n\n          </div>"}, "last_serial": 5916976, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f952a96725124be327579959432f0674", "sha256": "2f5126923e50527b0aca9ad86d89b12ab071237a14ae400b1a404ca97cecaa32"}, "downloads": -1, "filename": "asmlib-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f952a96725124be327579959432f0674", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39224, "upload_time": "2019-03-05T16:39:34", "upload_time_iso_8601": "2019-03-05T16:39:34.323002Z", "url": "https://files.pythonhosted.org/packages/84/2e/9497586a31a42ee6d9b847f470aafd1ef917eb6227b9617428de2fb38e7f/asmlib-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6ad142544fcea198edf9e1d3a7e9f88", "sha256": "11c3d53f8e7066fd1ea2caf19f2abe70b793ac30d661be60ffa7442da2bc9bd6"}, "downloads": -1, "filename": "asmlib-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c6ad142544fcea198edf9e1d3a7e9f88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32209, "upload_time": "2019-03-05T16:39:36", "upload_time_iso_8601": "2019-03-05T16:39:36.339946Z", "url": "https://files.pythonhosted.org/packages/45/bd/92143955fd94e345cb8fec0baaf4e93664411d9e2a7366e996616fa4b9bc/asmlib-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "c77e7e463613d4c521c22bb5fc206ada", "sha256": "38c591168bb06e9b61d08d0c989bb4fce484f51ecdc5985496a944f4e5b649ea"}, "downloads": -1, "filename": "asmlib-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c77e7e463613d4c521c22bb5fc206ada", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52149, "upload_time": "2019-10-02T09:47:50", "upload_time_iso_8601": "2019-10-02T09:47:50.045058Z", "url": "https://files.pythonhosted.org/packages/04/7c/8a6fb776f91273f825b743cdde5fe815e2dcccef4ef84af08ad1c6ff799b/asmlib-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1efe2abe765eed1188b722441430dc3", "sha256": "c0374d0e8d102ff81c6ef33dd0c70c55633342c8452edadb118f971eae7a60a2"}, "downloads": -1, "filename": "asmlib-2.0.0.tar.gz", "has_sig": false, "md5_digest": "c1efe2abe765eed1188b722441430dc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39265, "upload_time": "2019-10-02T09:47:51", "upload_time_iso_8601": "2019-10-02T09:47:51.687887Z", "url": "https://files.pythonhosted.org/packages/ae/30/d61a0eed8839a2690c715fbf531617b3d55b188aaed413b2b3f90c04579f/asmlib-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c77e7e463613d4c521c22bb5fc206ada", "sha256": "38c591168bb06e9b61d08d0c989bb4fce484f51ecdc5985496a944f4e5b649ea"}, "downloads": -1, "filename": "asmlib-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c77e7e463613d4c521c22bb5fc206ada", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52149, "upload_time": "2019-10-02T09:47:50", "upload_time_iso_8601": "2019-10-02T09:47:50.045058Z", "url": "https://files.pythonhosted.org/packages/04/7c/8a6fb776f91273f825b743cdde5fe815e2dcccef4ef84af08ad1c6ff799b/asmlib-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1efe2abe765eed1188b722441430dc3", "sha256": "c0374d0e8d102ff81c6ef33dd0c70c55633342c8452edadb118f971eae7a60a2"}, "downloads": -1, "filename": "asmlib-2.0.0.tar.gz", "has_sig": false, "md5_digest": "c1efe2abe765eed1188b722441430dc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39265, "upload_time": "2019-10-02T09:47:51", "upload_time_iso_8601": "2019-10-02T09:47:51.687887Z", "url": "https://files.pythonhosted.org/packages/ae/30/d61a0eed8839a2690c715fbf531617b3d55b188aaed413b2b3f90c04579f/asmlib-2.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:58 2020"}