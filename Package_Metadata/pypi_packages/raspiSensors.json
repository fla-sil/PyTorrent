{"info": {"author": "Johann Hofstaetter", "author_email": "hanshof@mailbox.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator"], "description": "# Raspberry Pi Sensors\n\nThis is a Python 3 package that enables Raspberry Pi to read various sensors .It has been tested on Python 3.5/Raspbian (stretch).\nSupported devices include:\n\n* HCSR04 ultrasonic sensor\n* PCA9685 Adafruit 16-channel 12 Bit PWM Driver\n* BMP280 Barometer\n* Triple Axis Magnetometer QMC5883L \n* AS3935 lightning sensor MOD-1016 embedded adventures\n\n\n### REQUIREMENTS\n\n\n1. adafruit-circuitpython-servokit\n\n### Installation\n\n1. From source  (incl. examples, fritzing and ebooks)\n   \n ```sh\n\n       git clone https://github.com/hanshof/rpiSensors.git\n       cd rpiSensors\n       python install setup.py\n ```\n       \n2. PIP\n\n ```sh\n\n     pip install raspiSensors\n     \n ```\n\n\n\n\n\n\n### HCSR04 ultrasonic sensor\n\n\n\n> This is the HC-SR04 ultrasonic distance sensor. \n> This economical sensor provides 2cm to 400cm \n> of non-contact measurement functionality with a ranging accuracy \n> that can reach up to 3mm. \n> Each HC-SR04 module includes an ultrasonic transmitter\n>, a receiver and a control circuit.\n\n> There are only four pins that you need to worry about on the HC-SR04: \n> VCC (Power), Trig (Trigger), Echo (Receive), and GND (Ground). \n> You will find this sensor very easy to set up and use for your next range-finding project!\n\nExample:\n\n  ```python\n\n    from raspiSensors import hcsr04 as HCSR04\n    ultrasonic = HCSR04(trigger_pin = 21, echo_pin = 20)\n    print(ultrasonic.distance())\n\n    returns distance in cm\n    \n  ```\n    \n### PCA9685 Adafruit 16-channel 12 Bit PWM Driver\n\n\n> Using only two pins, control 16 free-running PWM outputs! \n> You can even chain up 62 breakouts to control up to 992 PWM outputs (which we would really like to see since it would be glorious)\n> It's an i2c-controlled PWM driver with a built in clock. That means that, unlike the TLC5940 family, you do not need to continuously send it signal tying up your microcontroller, its completely free running!\n> It is 5V compliant, which means you can control it from a 3.3V microcontroller and still safely drive up to 6V outputs (this is good for when you want to control white or blue LEDs with 3.4+ forward voltages)\n> 6 address select pins so you can wire up to 62 of these on a single i2c bus, a total of 992 outputs - that's a lot of servos or LEDs\n> Adjustable frequency PWM up to about 1.6 KHz\n> 12-bit resolution for each output - for servos, that means about 4us resolution at 60Hz update rate\n> Configurable push-pull or open-drain output\n> Output enable pin to quickly disable all the outputs\n\nExample:\n\n  ```python\n  \n      from raspiSensors import pca9685 as PCA9685\n      servos = PCA9685(channels=16)\n      \n      servos.kit.servo[0].angle = 90\n  ```\n      \n      \n      \n### BMP280 Barometer\n\n  \n> This is a Barometer Pressure Sensor module\n> It could measure the pressure and temperature.\n> This program depend on BMP280.py writted by Adafruit. \n\n* #### [Example](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/examples/bmp280_test.py)\n* #### [Datasheet](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/datasheet/BST-BMP280-DS001-11.pdf)\n* #### [Ebook](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/ebooks/BMP280.pdf)  \n* #### [Fritzing](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/fritzing/Barometer_BMP280_Steckplatine.png)\n\n\n### Triple Axis Magnetometer QMC5883L \n\n\n> Magnetometer QMC5883L is used for measuring the direction and magnitude of the Earth\u2019s magnetic field. It is used for low cost compassing and magnetometry.\n> It measures the Earth\u2019s magnetic field value along the X, Y and Z axes from milli-gauss to 8 gauss.\n> It can be used to find the direction of heading of the device.\n> It uses I2C protocol for communication with microcontroller.\n\n* #### [Example](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/examples/qmc5883l_test.py)\n\n\n### AS3935 lightning sensor MOD-1016 embedded adventures\n\n> The MOD1016 is a lightning sensor based on the AMS3935. It allows you to detect \n> storms up to 40km away.\n\n* #### [Example](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/examples/as3935_test.py)\n* #### [Datasheet MOD-1016](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/datasheet/MOD-1016_hw_v8_doc_v4.pdf)\n* #### [Datasheet AS3935](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/datasheet/AS3935_datasheet.pdf)\n* #### [Ebook](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/ebooks/MOD1016.pdf)\n* #### [Fritzing](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/fritzing/MOD1016-AS3935.png)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/hanshof/raspiSensors/archive/2019.3.26.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hanshof/raspiSensors", "keywords": "Raspberry PI,Sensor,Robots", "license": "MIT", "maintainer": "Johann Hofstaetter", "maintainer_email": "hanshof@mailbox.org", "name": "raspiSensors", "package_url": "https://pypi.org/project/raspiSensors/", "platform": "", "project_url": "https://pypi.org/project/raspiSensors/", "project_urls": {"Download": "https://github.com/hanshof/raspiSensors/archive/2019.3.26.tar.gz", "Homepage": "https://github.com/hanshof/raspiSensors"}, "release_url": "https://pypi.org/project/raspiSensors/2019.3.26/", "requires_dist": null, "requires_python": "", "summary": "A series of convenience functions for Raspbery PI sensors", "version": "2019.3.26", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Raspberry Pi Sensors</h1>\n<p>This is a Python 3 package that enables Raspberry Pi to read various sensors .It has been tested on Python 3.5/Raspbian (stretch).\nSupported devices include:</p>\n<ul>\n<li>HCSR04 ultrasonic sensor</li>\n<li>PCA9685 Adafruit 16-channel 12 Bit PWM Driver</li>\n<li>BMP280 Barometer</li>\n<li>Triple Axis Magnetometer QMC5883L</li>\n<li>AS3935 lightning sensor MOD-1016 embedded adventures</li>\n</ul>\n<h3>REQUIREMENTS</h3>\n<ol>\n<li>adafruit-circuitpython-servokit</li>\n</ol>\n<h3>Installation</h3>\n<ol>\n<li>From source  (incl. examples, fritzing and ebooks)</li>\n</ol>\n<pre>      git clone https://github.com/hanshof/rpiSensors.git\n      <span class=\"nb\">cd</span> rpiSensors\n      python install setup.py\n</pre>\n<ol>\n<li>PIP</li>\n</ol>\n<pre>    pip install raspiSensors\n    \n</pre>\n<h3>HCSR04 ultrasonic sensor</h3>\n<blockquote>\n<p>This is the HC-SR04 ultrasonic distance sensor.\nThis economical sensor provides 2cm to 400cm\nof non-contact measurement functionality with a ranging accuracy\nthat can reach up to 3mm.\nEach HC-SR04 module includes an ultrasonic transmitter\n, a receiver and a control circuit.</p>\n</blockquote>\n<blockquote>\n<p>There are only four pins that you need to worry about on the HC-SR04:\nVCC (Power), Trig (Trigger), Echo (Receive), and GND (Ground).\nYou will find this sensor very easy to set up and use for your next range-finding project!</p>\n</blockquote>\n<p>Example:</p>\n<pre>  <span class=\"kn\">from</span> <span class=\"nn\">raspiSensors</span> <span class=\"kn\">import</span> <span class=\"n\">hcsr04</span> <span class=\"k\">as</span> <span class=\"n\">HCSR04</span>\n  <span class=\"n\">ultrasonic</span> <span class=\"o\">=</span> <span class=\"n\">HCSR04</span><span class=\"p\">(</span><span class=\"n\">trigger_pin</span> <span class=\"o\">=</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"n\">echo_pin</span> <span class=\"o\">=</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ultrasonic</span><span class=\"o\">.</span><span class=\"n\">distance</span><span class=\"p\">())</span>\n\n  <span class=\"n\">returns</span> <span class=\"n\">distance</span> <span class=\"ow\">in</span> <span class=\"n\">cm</span>\n  \n</pre>\n<h3>PCA9685 Adafruit 16-channel 12 Bit PWM Driver</h3>\n<blockquote>\n<p>Using only two pins, control 16 free-running PWM outputs!\nYou can even chain up 62 breakouts to control up to 992 PWM outputs (which we would really like to see since it would be glorious)\nIt's an i2c-controlled PWM driver with a built in clock. That means that, unlike the TLC5940 family, you do not need to continuously send it signal tying up your microcontroller, its completely free running!\nIt is 5V compliant, which means you can control it from a 3.3V microcontroller and still safely drive up to 6V outputs (this is good for when you want to control white or blue LEDs with 3.4+ forward voltages)\n6 address select pins so you can wire up to 62 of these on a single i2c bus, a total of 992 outputs - that's a lot of servos or LEDs\nAdjustable frequency PWM up to about 1.6 KHz\n12-bit resolution for each output - for servos, that means about 4us resolution at 60Hz update rate\nConfigurable push-pull or open-drain output\nOutput enable pin to quickly disable all the outputs</p>\n</blockquote>\n<p>Example:</p>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">raspiSensors</span> <span class=\"kn\">import</span> <span class=\"n\">pca9685</span> <span class=\"k\">as</span> <span class=\"n\">PCA9685</span>\n    <span class=\"n\">servos</span> <span class=\"o\">=</span> <span class=\"n\">PCA9685</span><span class=\"p\">(</span><span class=\"n\">channels</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">)</span>\n    \n    <span class=\"n\">servos</span><span class=\"o\">.</span><span class=\"n\">kit</span><span class=\"o\">.</span><span class=\"n\">servo</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"mi\">90</span>\n</pre>\n<h3>BMP280 Barometer</h3>\n<blockquote>\n<p>This is a Barometer Pressure Sensor module\nIt could measure the pressure and temperature.\nThis program depend on BMP280.py writted by Adafruit.</p>\n</blockquote>\n<ul>\n<li>\n<h4><a href=\"https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/examples/bmp280_test.py\" rel=\"nofollow\">Example</a></h4>\n</li>\n<li>\n<h4><a href=\"https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/datasheet/BST-BMP280-DS001-11.pdf\" rel=\"nofollow\">Datasheet</a></h4>\n</li>\n<li>\n<h4><a href=\"https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/ebooks/BMP280.pdf\" rel=\"nofollow\">Ebook</a></h4>\n</li>\n<li>\n<h4><a href=\"https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/fritzing/Barometer_BMP280_Steckplatine.png\" rel=\"nofollow\">Fritzing</a></h4>\n</li>\n</ul>\n<h3>Triple Axis Magnetometer QMC5883L</h3>\n<blockquote>\n<p>Magnetometer QMC5883L is used for measuring the direction and magnitude of the Earth\u2019s magnetic field. It is used for low cost compassing and magnetometry.\nIt measures the Earth\u2019s magnetic field value along the X, Y and Z axes from milli-gauss to 8 gauss.\nIt can be used to find the direction of heading of the device.\nIt uses I2C protocol for communication with microcontroller.</p>\n</blockquote>\n<ul>\n<li>\n<h4><a href=\"https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/examples/qmc5883l_test.py\" rel=\"nofollow\">Example</a></h4>\n</li>\n</ul>\n<h3>AS3935 lightning sensor MOD-1016 embedded adventures</h3>\n<blockquote>\n<p>The MOD1016 is a lightning sensor based on the AMS3935. It allows you to detect\nstorms up to 40km away.</p>\n</blockquote>\n<ul>\n<li>\n<h4><a href=\"https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/examples/as3935_test.py\" rel=\"nofollow\">Example</a></h4>\n</li>\n<li>\n<h4><a href=\"https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/datasheet/MOD-1016_hw_v8_doc_v4.pdf\" rel=\"nofollow\">Datasheet MOD-1016</a></h4>\n</li>\n<li>\n<h4><a href=\"https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/datasheet/AS3935_datasheet.pdf\" rel=\"nofollow\">Datasheet AS3935</a></h4>\n</li>\n<li>\n<h4><a href=\"https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/ebooks/MOD1016.pdf\" rel=\"nofollow\">Ebook</a></h4>\n</li>\n<li>\n<h4><a href=\"https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/fritzing/MOD1016-AS3935.png\" rel=\"nofollow\">Fritzing</a></h4>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 4989133, "releases": {"2019.3.24.4": [{"comment_text": "", "digests": {"md5": "cdd152810f771c9e707165392ea907e0", "sha256": "09a0e5c2bca372d02085032d6e27d8c65939ddf510b3de5981f895556f32694d"}, "downloads": -1, "filename": "raspiSensors-2019.3.24.4.tar.gz", "has_sig": false, "md5_digest": "cdd152810f771c9e707165392ea907e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10896, "upload_time": "2019-03-25T00:24:17", "upload_time_iso_8601": "2019-03-25T00:24:17.591334Z", "url": "https://files.pythonhosted.org/packages/32/f3/2bdd1a52b2b593d43cf21a1bae97950d0fc3fee75e282372fb7bba2dd5d7/raspiSensors-2019.3.24.4.tar.gz", "yanked": false}], "2019.3.26": [{"comment_text": "", "digests": {"md5": "a583b34513cbdc62ec0068a303f786ae", "sha256": "63946ff9ace1186cd40687c598409a7803f20ff04e22e9f3f420a06818ffaf6f"}, "downloads": -1, "filename": "raspiSensors-2019.3.26.tar.gz", "has_sig": false, "md5_digest": "a583b34513cbdc62ec0068a303f786ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14046, "upload_time": "2019-03-26T19:13:03", "upload_time_iso_8601": "2019-03-26T19:13:03.067653Z", "url": "https://files.pythonhosted.org/packages/86/09/f9b7672d9d6e802429708cbcd428a16c7e8bd01f4cd85e383d294c3f754c/raspiSensors-2019.3.26.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a583b34513cbdc62ec0068a303f786ae", "sha256": "63946ff9ace1186cd40687c598409a7803f20ff04e22e9f3f420a06818ffaf6f"}, "downloads": -1, "filename": "raspiSensors-2019.3.26.tar.gz", "has_sig": false, "md5_digest": "a583b34513cbdc62ec0068a303f786ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14046, "upload_time": "2019-03-26T19:13:03", "upload_time_iso_8601": "2019-03-26T19:13:03.067653Z", "url": "https://files.pythonhosted.org/packages/86/09/f9b7672d9d6e802429708cbcd428a16c7e8bd01f4cd85e383d294c3f754c/raspiSensors-2019.3.26.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:12 2020"}