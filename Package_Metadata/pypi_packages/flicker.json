{"info": {"author": "Ankur Gupta", "author_email": "ankur@perfectlyrandom.org", "bugtrack_url": null, "classifiers": [], "description": "# \ud83d\udd6f\ufe0f flicker\n[![PyPI Latest Release](https://img.shields.io/pypi/v/flicker.svg)](https://pypi.org/project/flicker/)\n![build](https://github.com/ankur-gupta/flicker/workflows/build/badge.svg)\n[![codecov](https://codecov.io/gh/ankur-gupta/flicker/branch/master/graph/badge.svg)](https://codecov.io/gh/ankur-gupta/flicker)\n\nThis python package provides a `FlickerDataFrame` object. `FlickerDataFrame` \nis a thin wrapper over `pyspark.sql.DataFrame`. The aim of `FlickerDataFrame` is to \nprovide a more Pandas-like dataframe API. Flicker is like [Koalas](https://github.com/databricks/koalas) \nin that Flicker attempts to provide a pandas-like API. But there are strong differences in design. We will release\na Design Principles guide for `flicker` soon. \n\nOne way to understand `flicker`'s position is via the following analogy: \n\n> _**keras** is to **CNTK** as **flicker** is to **pyspark**_\n\n`flicker` aims to provides a more intuitive, pythonic API over a `pyspark` backend. `flicker` relies completely \non `pyspark` for all distributed computing work. \n\n\n# Getting Started\n## Install\n`flicker` is intended to be run with Python 3. You can install `flicker` from [PyPI](https://pypi.org/project/flicker/):\n```bash\npip install --user flicker\n```\n\n`flicker` does not use Python 3 features just yet. This means that `flicker` may work with Python 2 (though it has not been tested and is highly discouraged). For use with Python 2, try installing `flicker` with `pip2` or build from source. Please note that `flicker` would _very soon_ become incompatible with Python 2 as we start using Python 3 features.\n\nAs of now, `flicker` is compatible with `pyspark 2.x`. Compatibility with `pyspark 3.x` is not supported just yet. \n\n## Quick Example\n`flicker` aims to simplify some of the common and tedious aspects of a PySpark dataframe without compromising performance. \nThe following example shows some of the features of `flicker`. \n\n ```python\nfrom pyspark.sql import SparkSession\nfrom flicker import FlickerDataFrame\n\n# Get a spark session, if needed. \nspark = SparkSession.builder.appName('PySparkShell').getOrCreate()\n\n# Create a dummy Flicker DataFrame using normally distributed random data of shape (100, 3)\ndf = FlickerDataFrame.from_shape(spark, nrows=100, ncols=3, columns=['a', 'b', 'c'], fill='randn')\n\n# Print the object to see the column names and types\ndf\n# FlickerDataFrame[a: double, b: double, c: double]\n\n# You can get pandas-like API to inspect a FlickerDataFrame\ndf.shape\n# (100, 3)\n\ndf.columns\n# ['a', 'b', 'c']\n\ndf.dtypes\n# [('a', 'double'), ('b', 'double'), ('c', 'double')]\n\n# One of the main features of flicker is the following handy shortcut to view the data.\n# Calling a FlickerDataFrame object, returns the first 5 rows as a pandas DataFrame.\n# See ?df for more examples on how you can use this to quickly and interactively perform analysis.\ndf()\n#           a         b         c\n# 0 -0.488747 -0.378013  0.350972\n# 1  0.224332  0.322416 -0.943630\n# 2  0.249755 -0.738754 -0.060325\n# 3  1.108189  1.657239 -0.114664\n# 4  1.768242 -2.422804 -1.012876\n\n# Another cool feature of flicker is pandas-like assignment API. Instead of having to \n# use .withColumn(), you can simply assign. For example, if we wanted to create a new \n# column that indicates if df['a'] is positive or not, we can do it like this:\ndf['is_a_positive'] = df['a'] > 0\n\ndf\n# FlickerDataFrame[a: double, b: double, c: double, is_a_positive: boolean]\n\n# We can now 'call' df to view the first 5 rows.\ndf()\n#           a         b         c  is_a_positive\n# 0 -0.488747 -0.378013  0.350972          False\n# 1  0.224332  0.322416 -0.943630           True\n# 2  0.249755 -0.738754 -0.060325           True\n# 3  1.108189  1.657239 -0.114664           True\n# 4  1.768242 -2.422804 -1.012876           True\n\n# These features can intermixed in nearly every imaginable way. Here are some quick examples.\n# Example 1: show the first 5 rows of the dataframe that has only 'a' and 'c' columns selected.\ndf[['a', 'c']]()\n\n# Example 2: Filter the data to select only the rows that have a positive value in column 'a' and\n# show the first 3 rows of the filtered dataframe.\ndf[df['is_a_positive']](3)\n#           a         b         c  is_a_positive\n# 0  0.224332  0.322416 -0.943630           True\n# 1  0.249755 -0.738754 -0.060325           True\n# 2  1.108189  1.657239 -0.114664           True\n\n# Example 3: Show first 2 rows that have a positive product of 'a' and 'b'\ndf[(df['a'] * df['b']) > 0][['a', 'b']](2)\n#           a         b\n# 0 -0.488747 -0.378013\n# 1  0.224332  0.322416\n ```\n\n ## Additional functions\n `flicker` aims to provide commonly used recipes as general-purpose functions that you can immediatelty use out-of-the-box. \n These are a few quick examples.\n ```python\nfrom pyspark.sql import SparkSession\nfrom flicker import FlickerDataFrame\nfrom flicker.udf import len_udf, type_udf\n\n# Get a spark session, if needed. \nspark = SparkSession.builder.appName('PySparkShell').getOrCreate()\n\n# Create a more complicated dataframe using one of the factory constructor\ndata = [(1, 'spark', 2.4, {}), (2, 'flicker', np.nan, {'key': 1})]\ncolumn_names = ['a', 'b', 'c', 'd']\ndf = FlickerDataFrame.from_rows(spark, rows=data, columns=column_names)\ndf\n# FlickerDataFrame[a: bigint, b: string, c: double, d: map<string,bigint>]\n\ndf()\n#    a        b    c           d\n# 0  1    spark  2.4          {}\n# 1  2  flicker  NaN  {'key': 1}\n\n# Get the type of column 'd' and store it in a new column 'd_type'\ndf['d_type'] = type_udf(df['d'])\n\n# The new column 'd_type' gets added without you having to worry about making a udf.\ndf\n# FlickerDataFrame[a: bigint, b: string, c: double, d: map<string,bigint>, d_type: string]\n\n# Show the first 5 rows of the dataframe\ndf()\n#    a        b    c           d d_type\n# 0  1    spark  2.4          {}   dict\n# 1  2  flicker  NaN  {'key': 1}   dict\n\n# Get the lengths of columns 'a' and 'd'\ndf['a_len'] = len_udf(df['a'])\ndf['d_len'] = len_udf(df['d'])\ndf\n# FlickerDataFrame[a: bigint, b: string, c: double, d: map<string,bigint>, d_type: string, d_len: int, a_len: int]\n\ndf()\n#    a        b    c           d d_type  d_len  a_len\n# 0  1    spark  2.4          {}   dict      0      1\n# 1  2  flicker  NaN  {'key': 1}   dict      1      1\n\n# Filter out rows that have an empty dict in column 'd'\ndf[df['d_len'] > 0]()\n#    a        b   c           d d_type  d_len  a_len\n# 0  2  flicker NaN  {'key': 1}   dict      1      1\n\n# Finally, you can always perform an operation on a dataframe and store it as a new dataframe\nnew_df = df[df['d_len'] > 0]\n```\n\n## Use the underlying PySpark DataFrame\nIf `flicker` isn't enough, you can always use the underlying PySpark DataFrame. Here are a few examples.\n```python\n# Continued from the above example.\n\n# `._df` contains the underlying PySpark DataFrame\ntype(df._df)\n# pyspark.sql.dataframe.DataFrame\n\n# Use PySpark functions to compute the frequency table based on type of column 'd'\ndf._df.groupBy(['d_type']).count().show()\n# +------+-----+\n# |d_type|count|\n# +------+-----+\n# |  dict|    2|\n# +------+-----+\n\n# You can always convert a PySpark DataFrame into a FlickerDataFrame\n# after you've performed the native PySpark operations. This way, you can \n# continue to enjoy the benefits of FlickerDataFrame. Converting a\n# PySpark DataFrame into a FlickerDataFrame is always fast irrespective of \n# dataframe size. \ndf_freq_table = FlickerDataFrame(df._df.groupBy(['d_type']).count())\ndf_freq_table()\n#   d_type  count\n# 0   dict      2\n```\n\n # Status\n `flicker` is actively being developed. While `flicker` is immediately useful for data analysis, it may not be ready for production use just yet. It is very likely that you will need a function that has not yet written in `flicker`. In such cases, you can always use the underlying PySpark DataFrame to do every operation that PySpark supports. Please consider filing an issue for missing functions, bugs, or unintuitive API. Happy sparking!\n\n# License\n[Apache License 2.0](https://github.com/ankur-gupta/flicker/blob/master/LICENSE)\n\n`flicker` depends on other python packages listed in \n[requirements.txt](https://github.com/ankur-gupta/flicker/blob/master/requirements.txt)\nwhich have their own licenses. `flicker` releases do not bundle any code from \nthe dependencies directly. \n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ankur-gupta/flicker", "keywords": "pyspark,pandas", "license": "", "maintainer": "", "maintainer_email": "", "name": "flicker", "package_url": "https://pypi.org/project/flicker/", "platform": "", "project_url": "https://pypi.org/project/flicker/", "project_urls": {"Homepage": "https://github.com/ankur-gupta/flicker"}, "release_url": "https://pypi.org/project/flicker/0.0.12/", "requires_dist": ["six", "pandas", "numpy", "pyspark"], "requires_python": "", "summary": "Provides FlickerDataFrame, a wrapper over Pyspark DataFrame to provide a pandas-like API", "version": "0.0.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\ud83d\udd6f\ufe0f flicker</h1>\n<p><a href=\"https://pypi.org/project/flicker/\" rel=\"nofollow\"><img alt=\"PyPI Latest Release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f0771226d951ffc21adbd2ba61938f7cc7ab457/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666c69636b65722e737667\"></a>\n<img alt=\"build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3964b8028228600c501dfde0d8f42d08efb561a1/68747470733a2f2f6769746875622e636f6d2f616e6b75722d67757074612f666c69636b65722f776f726b666c6f77732f6275696c642f62616467652e737667\">\n<a href=\"https://codecov.io/gh/ankur-gupta/flicker\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/670e91f3c2546ecda7809f6732d60c66618b1a79/68747470733a2f2f636f6465636f762e696f2f67682f616e6b75722d67757074612f666c69636b65722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p>This python package provides a <code>FlickerDataFrame</code> object. <code>FlickerDataFrame</code>\nis a thin wrapper over <code>pyspark.sql.DataFrame</code>. The aim of <code>FlickerDataFrame</code> is to\nprovide a more Pandas-like dataframe API. Flicker is like <a href=\"https://github.com/databricks/koalas\" rel=\"nofollow\">Koalas</a>\nin that Flicker attempts to provide a pandas-like API. But there are strong differences in design. We will release\na Design Principles guide for <code>flicker</code> soon.</p>\n<p>One way to understand <code>flicker</code>'s position is via the following analogy:</p>\n<blockquote>\n<p><em><strong>keras</strong> is to <strong>CNTK</strong> as <strong>flicker</strong> is to <strong>pyspark</strong></em></p>\n</blockquote>\n<p><code>flicker</code> aims to provides a more intuitive, pythonic API over a <code>pyspark</code> backend. <code>flicker</code> relies completely\non <code>pyspark</code> for all distributed computing work.</p>\n<h1>Getting Started</h1>\n<h2>Install</h2>\n<p><code>flicker</code> is intended to be run with Python 3. You can install <code>flicker</code> from <a href=\"https://pypi.org/project/flicker/\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>pip install --user flicker\n</pre>\n<p><code>flicker</code> does not use Python 3 features just yet. This means that <code>flicker</code> may work with Python 2 (though it has not been tested and is highly discouraged). For use with Python 2, try installing <code>flicker</code> with <code>pip2</code> or build from source. Please note that <code>flicker</code> would <em>very soon</em> become incompatible with Python 2 as we start using Python 3 features.</p>\n<p>As of now, <code>flicker</code> is compatible with <code>pyspark 2.x</code>. Compatibility with <code>pyspark 3.x</code> is not supported just yet.</p>\n<h2>Quick Example</h2>\n<p><code>flicker</code> aims to simplify some of the common and tedious aspects of a PySpark dataframe without compromising performance.\nThe following example shows some of the features of <code>flicker</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyspark.sql</span> <span class=\"kn\">import</span> <span class=\"n\">SparkSession</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flicker</span> <span class=\"kn\">import</span> <span class=\"n\">FlickerDataFrame</span>\n\n<span class=\"c1\"># Get a spark session, if needed. </span>\n<span class=\"n\">spark</span> <span class=\"o\">=</span> <span class=\"n\">SparkSession</span><span class=\"o\">.</span><span class=\"n\">builder</span><span class=\"o\">.</span><span class=\"n\">appName</span><span class=\"p\">(</span><span class=\"s1\">'PySparkShell'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">getOrCreate</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Create a dummy Flicker DataFrame using normally distributed random data of shape (100, 3)</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">FlickerDataFrame</span><span class=\"o\">.</span><span class=\"n\">from_shape</span><span class=\"p\">(</span><span class=\"n\">spark</span><span class=\"p\">,</span> <span class=\"n\">nrows</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">ncols</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"s1\">'c'</span><span class=\"p\">],</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s1\">'randn'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Print the object to see the column names and types</span>\n<span class=\"n\">df</span>\n<span class=\"c1\"># FlickerDataFrame[a: double, b: double, c: double]</span>\n\n<span class=\"c1\"># You can get pandas-like API to inspect a FlickerDataFrame</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"c1\"># (100, 3)</span>\n\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">columns</span>\n<span class=\"c1\"># ['a', 'b', 'c']</span>\n\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">dtypes</span>\n<span class=\"c1\"># [('a', 'double'), ('b', 'double'), ('c', 'double')]</span>\n\n<span class=\"c1\"># One of the main features of flicker is the following handy shortcut to view the data.</span>\n<span class=\"c1\"># Calling a FlickerDataFrame object, returns the first 5 rows as a pandas DataFrame.</span>\n<span class=\"c1\"># See ?df for more examples on how you can use this to quickly and interactively perform analysis.</span>\n<span class=\"n\">df</span><span class=\"p\">()</span>\n<span class=\"c1\">#           a         b         c</span>\n<span class=\"c1\"># 0 -0.488747 -0.378013  0.350972</span>\n<span class=\"c1\"># 1  0.224332  0.322416 -0.943630</span>\n<span class=\"c1\"># 2  0.249755 -0.738754 -0.060325</span>\n<span class=\"c1\"># 3  1.108189  1.657239 -0.114664</span>\n<span class=\"c1\"># 4  1.768242 -2.422804 -1.012876</span>\n\n<span class=\"c1\"># Another cool feature of flicker is pandas-like assignment API. Instead of having to </span>\n<span class=\"c1\"># use .withColumn(), you can simply assign. For example, if we wanted to create a new </span>\n<span class=\"c1\"># column that indicates if df['a'] is positive or not, we can do it like this:</span>\n<span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'is_a_positive'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">df</span>\n<span class=\"c1\"># FlickerDataFrame[a: double, b: double, c: double, is_a_positive: boolean]</span>\n\n<span class=\"c1\"># We can now 'call' df to view the first 5 rows.</span>\n<span class=\"n\">df</span><span class=\"p\">()</span>\n<span class=\"c1\">#           a         b         c  is_a_positive</span>\n<span class=\"c1\"># 0 -0.488747 -0.378013  0.350972          False</span>\n<span class=\"c1\"># 1  0.224332  0.322416 -0.943630           True</span>\n<span class=\"c1\"># 2  0.249755 -0.738754 -0.060325           True</span>\n<span class=\"c1\"># 3  1.108189  1.657239 -0.114664           True</span>\n<span class=\"c1\"># 4  1.768242 -2.422804 -1.012876           True</span>\n\n<span class=\"c1\"># These features can intermixed in nearly every imaginable way. Here are some quick examples.</span>\n<span class=\"c1\"># Example 1: show the first 5 rows of the dataframe that has only 'a' and 'c' columns selected.</span>\n<span class=\"n\">df</span><span class=\"p\">[[</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'c'</span><span class=\"p\">]]()</span>\n\n<span class=\"c1\"># Example 2: Filter the data to select only the rows that have a positive value in column 'a' and</span>\n<span class=\"c1\"># show the first 3 rows of the filtered dataframe.</span>\n<span class=\"n\">df</span><span class=\"p\">[</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'is_a_positive'</span><span class=\"p\">]](</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"c1\">#           a         b         c  is_a_positive</span>\n<span class=\"c1\"># 0  0.224332  0.322416 -0.943630           True</span>\n<span class=\"c1\"># 1  0.249755 -0.738754 -0.060325           True</span>\n<span class=\"c1\"># 2  1.108189  1.657239 -0.114664           True</span>\n\n<span class=\"c1\"># Example 3: Show first 2 rows that have a positive product of 'a' and 'b'</span>\n<span class=\"n\">df</span><span class=\"p\">[(</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'b'</span><span class=\"p\">])</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">][[</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">]](</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"c1\">#           a         b</span>\n<span class=\"c1\"># 0 -0.488747 -0.378013</span>\n<span class=\"c1\"># 1  0.224332  0.322416</span>\n</pre>\n<h2>Additional functions</h2>\n<p><code>flicker</code> aims to provide commonly used recipes as general-purpose functions that you can immediatelty use out-of-the-box.\nThese are a few quick examples.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyspark.sql</span> <span class=\"kn\">import</span> <span class=\"n\">SparkSession</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flicker</span> <span class=\"kn\">import</span> <span class=\"n\">FlickerDataFrame</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flicker.udf</span> <span class=\"kn\">import</span> <span class=\"n\">len_udf</span><span class=\"p\">,</span> <span class=\"n\">type_udf</span>\n\n<span class=\"c1\"># Get a spark session, if needed. </span>\n<span class=\"n\">spark</span> <span class=\"o\">=</span> <span class=\"n\">SparkSession</span><span class=\"o\">.</span><span class=\"n\">builder</span><span class=\"o\">.</span><span class=\"n\">appName</span><span class=\"p\">(</span><span class=\"s1\">'PySparkShell'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">getOrCreate</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Create a more complicated dataframe using one of the factory constructor</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'spark'</span><span class=\"p\">,</span> <span class=\"mf\">2.4</span><span class=\"p\">,</span> <span class=\"p\">{}),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'flicker'</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nan</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">})]</span>\n<span class=\"n\">column_names</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"s1\">'d'</span><span class=\"p\">]</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">FlickerDataFrame</span><span class=\"o\">.</span><span class=\"n\">from_rows</span><span class=\"p\">(</span><span class=\"n\">spark</span><span class=\"p\">,</span> <span class=\"n\">rows</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"n\">column_names</span><span class=\"p\">)</span>\n<span class=\"n\">df</span>\n<span class=\"c1\"># FlickerDataFrame[a: bigint, b: string, c: double, d: map&lt;string,bigint&gt;]</span>\n\n<span class=\"n\">df</span><span class=\"p\">()</span>\n<span class=\"c1\">#    a        b    c           d</span>\n<span class=\"c1\"># 0  1    spark  2.4          {}</span>\n<span class=\"c1\"># 1  2  flicker  NaN  {'key': 1}</span>\n\n<span class=\"c1\"># Get the type of column 'd' and store it in a new column 'd_type'</span>\n<span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'d_type'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">type_udf</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'d'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># The new column 'd_type' gets added without you having to worry about making a udf.</span>\n<span class=\"n\">df</span>\n<span class=\"c1\"># FlickerDataFrame[a: bigint, b: string, c: double, d: map&lt;string,bigint&gt;, d_type: string]</span>\n\n<span class=\"c1\"># Show the first 5 rows of the dataframe</span>\n<span class=\"n\">df</span><span class=\"p\">()</span>\n<span class=\"c1\">#    a        b    c           d d_type</span>\n<span class=\"c1\"># 0  1    spark  2.4          {}   dict</span>\n<span class=\"c1\"># 1  2  flicker  NaN  {'key': 1}   dict</span>\n\n<span class=\"c1\"># Get the lengths of columns 'a' and 'd'</span>\n<span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'a_len'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">len_udf</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">])</span>\n<span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'d_len'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">len_udf</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'d'</span><span class=\"p\">])</span>\n<span class=\"n\">df</span>\n<span class=\"c1\"># FlickerDataFrame[a: bigint, b: string, c: double, d: map&lt;string,bigint&gt;, d_type: string, d_len: int, a_len: int]</span>\n\n<span class=\"n\">df</span><span class=\"p\">()</span>\n<span class=\"c1\">#    a        b    c           d d_type  d_len  a_len</span>\n<span class=\"c1\"># 0  1    spark  2.4          {}   dict      0      1</span>\n<span class=\"c1\"># 1  2  flicker  NaN  {'key': 1}   dict      1      1</span>\n\n<span class=\"c1\"># Filter out rows that have an empty dict in column 'd'</span>\n<span class=\"n\">df</span><span class=\"p\">[</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'d_len'</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">]()</span>\n<span class=\"c1\">#    a        b   c           d d_type  d_len  a_len</span>\n<span class=\"c1\"># 0  2  flicker NaN  {'key': 1}   dict      1      1</span>\n\n<span class=\"c1\"># Finally, you can always perform an operation on a dataframe and store it as a new dataframe</span>\n<span class=\"n\">new_df</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'d_len'</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n<h2>Use the underlying PySpark DataFrame</h2>\n<p>If <code>flicker</code> isn't enough, you can always use the underlying PySpark DataFrame. Here are a few examples.</p>\n<pre><span class=\"c1\"># Continued from the above example.</span>\n\n<span class=\"c1\"># `._df` contains the underlying PySpark DataFrame</span>\n<span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">_df</span><span class=\"p\">)</span>\n<span class=\"c1\"># pyspark.sql.dataframe.DataFrame</span>\n\n<span class=\"c1\"># Use PySpark functions to compute the frequency table based on type of column 'd'</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">_df</span><span class=\"o\">.</span><span class=\"n\">groupBy</span><span class=\"p\">([</span><span class=\"s1\">'d_type'</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n<span class=\"c1\"># +------+-----+</span>\n<span class=\"c1\"># |d_type|count|</span>\n<span class=\"c1\"># +------+-----+</span>\n<span class=\"c1\"># |  dict|    2|</span>\n<span class=\"c1\"># +------+-----+</span>\n\n<span class=\"c1\"># You can always convert a PySpark DataFrame into a FlickerDataFrame</span>\n<span class=\"c1\"># after you've performed the native PySpark operations. This way, you can </span>\n<span class=\"c1\"># continue to enjoy the benefits of FlickerDataFrame. Converting a</span>\n<span class=\"c1\"># PySpark DataFrame into a FlickerDataFrame is always fast irrespective of </span>\n<span class=\"c1\"># dataframe size. </span>\n<span class=\"n\">df_freq_table</span> <span class=\"o\">=</span> <span class=\"n\">FlickerDataFrame</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">_df</span><span class=\"o\">.</span><span class=\"n\">groupBy</span><span class=\"p\">([</span><span class=\"s1\">'d_type'</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">())</span>\n<span class=\"n\">df_freq_table</span><span class=\"p\">()</span>\n<span class=\"c1\">#   d_type  count</span>\n<span class=\"c1\"># 0   dict      2</span>\n</pre>\n<h1>Status</h1>\n<p><code>flicker</code> is actively being developed. While <code>flicker</code> is immediately useful for data analysis, it may not be ready for production use just yet. It is very likely that you will need a function that has not yet written in <code>flicker</code>. In such cases, you can always use the underlying PySpark DataFrame to do every operation that PySpark supports. Please consider filing an issue for missing functions, bugs, or unintuitive API. Happy sparking!</p>\n<h1>License</h1>\n<p><a href=\"https://github.com/ankur-gupta/flicker/blob/master/LICENSE\" rel=\"nofollow\">Apache License 2.0</a></p>\n<p><code>flicker</code> depends on other python packages listed in\n<a href=\"https://github.com/ankur-gupta/flicker/blob/master/requirements.txt\" rel=\"nofollow\">requirements.txt</a>\nwhich have their own licenses. <code>flicker</code> releases do not bundle any code from\nthe dependencies directly.</p>\n\n          </div>"}, "last_serial": 6853828, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "498dceffb56f1aa2abad35e30ce556e1", "sha256": "c99f608692a8324113226f8a48bcf1aa7ee661e480ecd5f469e974edcc6f0c75"}, "downloads": -1, "filename": "flicker-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "498dceffb56f1aa2abad35e30ce556e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2050, "upload_time": "2019-12-26T06:00:05", "upload_time_iso_8601": "2019-12-26T06:00:05.380154Z", "url": "https://files.pythonhosted.org/packages/1a/92/930698bb8bef8913523a14c44457336b8d3203d3d5fd84a47dcae2317501/flicker-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f47612a013f8656897b69af05a37b264", "sha256": "df510ce63ae5efe41a690d57e9a703f52dec3bec5b7846cf92af0ebc47953958"}, "downloads": -1, "filename": "flicker-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f47612a013f8656897b69af05a37b264", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1470, "upload_time": "2019-12-26T06:00:07", "upload_time_iso_8601": "2019-12-26T06:00:07.801701Z", "url": "https://files.pythonhosted.org/packages/8d/14/2f210c5fb3b06a02bc44bd12b87e79d73101332d57be29a17b58f50e775a/flicker-0.0.1.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "2ddf1b5f248f87809916e8e196f8a770", "sha256": "447068d5f623f9b9b8cfc3bf2a5cf2bc64474ff990867d483f79500ed097a463"}, "downloads": -1, "filename": "flicker-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "2ddf1b5f248f87809916e8e196f8a770", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28424, "upload_time": "2020-03-21T02:25:05", "upload_time_iso_8601": "2020-03-21T02:25:05.535627Z", "url": "https://files.pythonhosted.org/packages/98/41/a8ebbf20585b63c76018acb5a790ca00d93e992b16f7b54025a451276e00/flicker-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "819f33b8a03ca019544e03f1f586c614", "sha256": "9c3bd20401c27169141d5d39e58a97f3039dadd2342757a53b50741d9ddec335"}, "downloads": -1, "filename": "flicker-0.0.11.tar.gz", "has_sig": false, "md5_digest": "819f33b8a03ca019544e03f1f586c614", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26807, "upload_time": "2020-03-21T02:25:06", "upload_time_iso_8601": "2020-03-21T02:25:06.820126Z", "url": "https://files.pythonhosted.org/packages/d0/68/196b7263f590b7bf4a6fc6963cca4575401709e33363b90fd7e2b5bef2fd/flicker-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "438ef6132056bd59b9642030bc654770", "sha256": "6b0759a1f8033b7e71d9dd5d24c17278cd9961cd8d144531cb536554b62c79b8"}, "downloads": -1, "filename": "flicker-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "438ef6132056bd59b9642030bc654770", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33421, "upload_time": "2020-03-21T03:15:13", "upload_time_iso_8601": "2020-03-21T03:15:13.323354Z", "url": "https://files.pythonhosted.org/packages/d8/91/a7739ead797c8286bf85e6221244478e440913e479bf54f45a92fde6132c/flicker-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7cf8ede92c23151b4b87ce95ce2fba6b", "sha256": "89e6cd9405fbbdaacb52416fc48c133b67d7045ed906c7ebe2742bfc24057e8c"}, "downloads": -1, "filename": "flicker-0.0.12.tar.gz", "has_sig": false, "md5_digest": "7cf8ede92c23151b4b87ce95ce2fba6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28006, "upload_time": "2020-03-21T03:15:14", "upload_time_iso_8601": "2020-03-21T03:15:14.591360Z", "url": "https://files.pythonhosted.org/packages/6f/ef/795ee8a94ba510940c27e28a290aa576c3d3f60c825b6c1c34dc82e9ddbf/flicker-0.0.12.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f34e65da0a76636006a6bd867ed53845", "sha256": "5648ef9460805868c3fac7b5134bcba9f212cbba9a60c969451a245e6fe71ac9"}, "downloads": -1, "filename": "flicker-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f34e65da0a76636006a6bd867ed53845", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4889, "upload_time": "2019-12-26T08:20:00", "upload_time_iso_8601": "2019-12-26T08:20:00.407831Z", "url": "https://files.pythonhosted.org/packages/01/b6/0978d5e68694ecb1ab76ec941fa66b7b773c601f8ca78cbc4c08e6bdef30/flicker-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50eca93bd3ebcce5d8c2975f30f5f572", "sha256": "f75323e0a60beba45207cce4901cdcac201acad8641694e90313375539fedb45"}, "downloads": -1, "filename": "flicker-0.0.2.tar.gz", "has_sig": false, "md5_digest": "50eca93bd3ebcce5d8c2975f30f5f572", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4087, "upload_time": "2019-12-26T08:20:02", "upload_time_iso_8601": "2019-12-26T08:20:02.108870Z", "url": "https://files.pythonhosted.org/packages/09/87/8c7fb0bfacd099c9d425bd5f4c6fbce9e6ccb80a2cbcc0ea51815bc522ab/flicker-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "c1648bc662c422356f321dc68d017470", "sha256": "d4d84de95efa54366779ae8f4740d884a9fd6d4d2e3deccadbca73173da4f7d3"}, "downloads": -1, "filename": "flicker-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c1648bc662c422356f321dc68d017470", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5390, "upload_time": "2019-12-26T23:25:52", "upload_time_iso_8601": "2019-12-26T23:25:52.401877Z", "url": "https://files.pythonhosted.org/packages/45/00/0d65b092747a712ef57ee432c2c9ea841dd3dbd317db86bcfddbe97c758c/flicker-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f230879bcc1bd03bed751af1bc8f524e", "sha256": "276afba8fb18429e45eebeefc135f3f22bb113192a54d61fb3c8093cbad69720"}, "downloads": -1, "filename": "flicker-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f230879bcc1bd03bed751af1bc8f524e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4620, "upload_time": "2019-12-26T23:25:53", "upload_time_iso_8601": "2019-12-26T23:25:53.999319Z", "url": "https://files.pythonhosted.org/packages/62/d7/f6917ccaeb315ec7a9b02c030acf21f2eb7bb6e3f9387c304d66619b5478/flicker-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "d6d7df852ee522b013ec047de8286323", "sha256": "6055f2b2376e16e17d5b24fc1228eb5c15642833eb9b5f0e0f0b5849c22354fb"}, "downloads": -1, "filename": "flicker-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d6d7df852ee522b013ec047de8286323", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6028, "upload_time": "2020-02-04T05:49:48", "upload_time_iso_8601": "2020-02-04T05:49:48.949105Z", "url": "https://files.pythonhosted.org/packages/1b/1c/b6dff3cce37c7aa64dc5a3a9ca34bd592b74a95eb4bd5e632d29ba141fa3/flicker-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97689b13dbfaacce757e238ac7046b72", "sha256": "f774875983aec7d1ec20513785d546ad60f5f4a248ac100d7ce2846e1c1ccf35"}, "downloads": -1, "filename": "flicker-0.0.4.tar.gz", "has_sig": false, "md5_digest": "97689b13dbfaacce757e238ac7046b72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5102, "upload_time": "2020-02-04T05:49:50", "upload_time_iso_8601": "2020-02-04T05:49:50.413854Z", "url": "https://files.pythonhosted.org/packages/8c/32/eacc29457fe79a8008fddcd0be8dc4aacbde0a3d6134bed3a8af708f040c/flicker-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "f532a19c938285b52d85d51126cb4a4f", "sha256": "ced3efacdc4bf7276bd7fbec9b188be3698b49440e71018de4f822355c21a922"}, "downloads": -1, "filename": "flicker-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f532a19c938285b52d85d51126cb4a4f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8115, "upload_time": "2020-02-06T04:11:41", "upload_time_iso_8601": "2020-02-06T04:11:41.133318Z", "url": "https://files.pythonhosted.org/packages/88/c6/1eb0bb3739aa4afa489cf57ceb0a2e42abdc4ddddb7d8af34e77cf809beb/flicker-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "004ab37507ae2a5ed0823a9042ad19e2", "sha256": "e62c6bcba152549610707b7e5e8013ccbf3b91f49d61c9b6a143539a40fa8aa5"}, "downloads": -1, "filename": "flicker-0.0.5.tar.gz", "has_sig": false, "md5_digest": "004ab37507ae2a5ed0823a9042ad19e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7576, "upload_time": "2020-02-06T04:11:42", "upload_time_iso_8601": "2020-02-06T04:11:42.533194Z", "url": "https://files.pythonhosted.org/packages/d2/a1/26c8246387f7c40d875648db45830bb64a05e60dabf51385fc329520f627/flicker-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "bb81ef0eaf590c0b37f61d59245755b9", "sha256": "69a2fcb60ac687bab1502614f074bd680f8bc15807d57cd133ff077e7c7312ea"}, "downloads": -1, "filename": "flicker-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "bb81ef0eaf590c0b37f61d59245755b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9986, "upload_time": "2020-02-06T08:14:00", "upload_time_iso_8601": "2020-02-06T08:14:00.364465Z", "url": "https://files.pythonhosted.org/packages/52/ba/097c8773058479952eefafd1d8c6619ad926cfe56fa517ca6b914c6f4c5a/flicker-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49fa4da54e793d7acc68f8ca2f45b15e", "sha256": "81f2f587c8a9db428c2c1d4428df969b5b566689646023940e38e358efd21b28"}, "downloads": -1, "filename": "flicker-0.0.6.tar.gz", "has_sig": false, "md5_digest": "49fa4da54e793d7acc68f8ca2f45b15e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9900, "upload_time": "2020-02-06T08:14:01", "upload_time_iso_8601": "2020-02-06T08:14:01.407598Z", "url": "https://files.pythonhosted.org/packages/e6/01/417068ffb54e403f132fb92b6c83492722c761ec69efd98a41e63bda4bc2/flicker-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "317ab6c968afe3c6fbfff78f27aa6af2", "sha256": "c8f697e0bb07622aa29f787eaf56bf9e46f9aaae9ac25b24e45ea863a2adc4d2"}, "downloads": -1, "filename": "flicker-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "317ab6c968afe3c6fbfff78f27aa6af2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14627, "upload_time": "2020-02-07T06:25:04", "upload_time_iso_8601": "2020-02-07T06:25:04.090349Z", "url": "https://files.pythonhosted.org/packages/8b/69/ee7b2dab6465b595f7de791831d055126f741e7d9021cb23054e4e7c4d5f/flicker-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f428d7190a59e13c2495024b7bd3ec3", "sha256": "cbd6b033603673f01829a356061a9b127738c19c04c26009d014267d20f3adac"}, "downloads": -1, "filename": "flicker-0.0.7.tar.gz", "has_sig": false, "md5_digest": "4f428d7190a59e13c2495024b7bd3ec3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16603, "upload_time": "2020-02-07T06:25:05", "upload_time_iso_8601": "2020-02-07T06:25:05.898331Z", "url": "https://files.pythonhosted.org/packages/2c/10/3e35d6806c0c0d9a9d4f91e8f1ff70851f6b0cedb7ef9b1310a06f049260/flicker-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "5f07626463b75c642204bc80936580eb", "sha256": "40f31898aeedad4d76de15eb2c9f5e438e07a2f9a2ff39e53bb9790bb97ca13b"}, "downloads": -1, "filename": "flicker-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "5f07626463b75c642204bc80936580eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26143, "upload_time": "2020-03-15T19:16:03", "upload_time_iso_8601": "2020-03-15T19:16:03.950387Z", "url": "https://files.pythonhosted.org/packages/c4/09/5f19611765954a6d4347401f0feb4acab08b2e5d119c010d30b37b8759a9/flicker-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "445af31d00932523b43d801f2479a356", "sha256": "13bf44040e57c0c964fd139ef8b5fa991f2df32828f39d0e1e1ce59510c7ee11"}, "downloads": -1, "filename": "flicker-0.0.8.tar.gz", "has_sig": false, "md5_digest": "445af31d00932523b43d801f2479a356", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22178, "upload_time": "2020-03-15T19:16:05", "upload_time_iso_8601": "2020-03-15T19:16:05.411352Z", "url": "https://files.pythonhosted.org/packages/30/2c/192d59bf04354c7a68f36f985b535b48dc288ffab77f82631daa56683f5e/flicker-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "144f1426f33459121ae1654a81ac0dfb", "sha256": "527f64cea60d5f7bca314d625fc8e5d6e3937882da91c882a67f7a5d0ba8248f"}, "downloads": -1, "filename": "flicker-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "144f1426f33459121ae1654a81ac0dfb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28212, "upload_time": "2020-03-15T19:33:30", "upload_time_iso_8601": "2020-03-15T19:33:30.972502Z", "url": "https://files.pythonhosted.org/packages/29/91/cfa12a8c949335929a630482ce1759d400e541548f0b0f287371f97a430b/flicker-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f9faa7cf40cca7d64b77770318d0fe8", "sha256": "1ae19b26fcd0b4a8a47bd66c9ef9f7be22c07bb0d5be5685eb85869502390807"}, "downloads": -1, "filename": "flicker-0.0.9.tar.gz", "has_sig": false, "md5_digest": "7f9faa7cf40cca7d64b77770318d0fe8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26622, "upload_time": "2020-03-15T19:33:32", "upload_time_iso_8601": "2020-03-15T19:33:32.194937Z", "url": "https://files.pythonhosted.org/packages/aa/b9/bf8ceea5b08f76e897b9d4e0e82180683ef6cda0b2e3f8fa516928923424/flicker-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "438ef6132056bd59b9642030bc654770", "sha256": "6b0759a1f8033b7e71d9dd5d24c17278cd9961cd8d144531cb536554b62c79b8"}, "downloads": -1, "filename": "flicker-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "438ef6132056bd59b9642030bc654770", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33421, "upload_time": "2020-03-21T03:15:13", "upload_time_iso_8601": "2020-03-21T03:15:13.323354Z", "url": "https://files.pythonhosted.org/packages/d8/91/a7739ead797c8286bf85e6221244478e440913e479bf54f45a92fde6132c/flicker-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7cf8ede92c23151b4b87ce95ce2fba6b", "sha256": "89e6cd9405fbbdaacb52416fc48c133b67d7045ed906c7ebe2742bfc24057e8c"}, "downloads": -1, "filename": "flicker-0.0.12.tar.gz", "has_sig": false, "md5_digest": "7cf8ede92c23151b4b87ce95ce2fba6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28006, "upload_time": "2020-03-21T03:15:14", "upload_time_iso_8601": "2020-03-21T03:15:14.591360Z", "url": "https://files.pythonhosted.org/packages/6f/ef/795ee8a94ba510940c27e28a290aa576c3d3f60c825b6c1c34dc82e9ddbf/flicker-0.0.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:01:53 2020"}