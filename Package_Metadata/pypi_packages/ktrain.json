{"info": {"author": "Arun S. Maiya", "author_email": "arun@maiya.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "[![PyPI Status](https://badge.fury.io/py/ktrain.svg)](https://badge.fury.io/py/ktrain) [![ktrain python compatibility](https://img.shields.io/pypi/pyversions/ktrain.svg)](https://pypi.python.org/pypi/ktrain) [![license](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/amaiya/ktrain/blob/master/LICENSE) [![Downloads](https://pepy.tech/badge/ktrain)](https://pepy.tech/project/ktrain) [![Downloads](https://pepy.tech/badge/ktrain/month)](https://pepy.tech/project/ktrain/month)\n\n\n# ktrain\n\n\n\n### News and Announcements\n- **2020-04-15:**  \n  - ***ktrain*** **v0.14.x is released** and now includes support for **open-domain question-answering**.  See the [example QA notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/question_answering_with_bert.ipynb)\n- **2020-04-09:**  \n  - ***ktrain*** **v0.13.x is released** and includes support for:\n    - **link prediction** using graph neural networks - [see example link prediction notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/graphs/cora_link_prediction-GraphSAGE.ipynb) on citation prediction\n    - **text summarization** with pretrained BART - [see example summarization notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/text_summarization_with_bart.ipynb) <sub><sup>(Summarization included in v0.13.1, but not v0.13.0.)</sup></sub>\n```python\n# text summarization with BART\nfrom ktrain import text\nts = text.TransformerSummarizer()\nts.summarize(some_long_document)\n```\n\n- **2020-03-31:**  \n  - ***ktrain*** **v0.12.x is released** and now includes BERT embeddings (i.e., BERT, DistilBert, and Albert) that can be used for downstream tasks like building sequence-taggers (i.e., NER) \n      for any language such as English, Chinese, Russian, Arabic, Dutch, etc.  See [this English NER example notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/CoNLL2003-BiLSTM.ipynb) or the [Dutch NER notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/CoNLL2002_Dutch-BiLSTM.ipynb) for examples on how to use this feature.\n\t  *ktrain* also supports NER with domain-specific embeddings from [community-uploaded Hugging Face models](https://huggingface.co/models) such as [BioBERT](https://arxiv.org/abs/1901.08746) for the biomedical domain:\n```python\n# NER with BioBERT embeddings\nimport ktrain\nfrom ktrain import text as txt\nx_train= [['IL-2', 'responsiveness', 'requires', 'three', 'distinct', 'elements', 'within', 'the', 'enhancer', '.'], ...]\ny_train=[['B-protein', 'O', 'O', 'O', 'O', 'B-DNA', 'O', 'O', 'B-DNA', 'O'], ...]\n(trn, val, preproc) = txt.entities_from_array(x_train, y_train)\nmodel = txt.sequence_tagger('bilstm-bert', preproc, bert_model='monologg/biobert_v1.1_pubmed')\nlearner = ktrain.get_learner(model, train_data=trn, val_data=val, batch_size=128)\nlearner.fit(0.01, 1, cycle_len=5)\n```\n----\n\n### Overview\n\n*ktrain* is a lightweight wrapper for the deep learning library [TensorFlow Keras](https://www.tensorflow.org/guide/keras/overview) (and other libraries) to help build, train, and deploy neural networks and other machine learning models.  It is designed to make deep learning and AI more accessible and easier to apply for both newcomers and experienced practitioners. With only a few lines of code, ktrain allows you to easily and quickly:\n\n- employ fast, accurate, and easy-to-use pre-canned models for  `text`, `vision`, and `graph` data:\n  - `text` data:\n     - **Text Classification**: [BERT](https://arxiv.org/abs/1810.04805), [DistilBERT](https://arxiv.org/abs/1910.01108), [NBSVM](https://www.aclweb.org/anthology/P12-2018), [fastText](https://arxiv.org/abs/1607.01759), and other models <sub><sup>[[example notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/IMDb-BERT.ipynb)]</sup></sub>\n     - **Text Regression**: [BERT](https://arxiv.org/abs/1810.04805), [DistilBERT](https://arxiv.org/abs/1910.01108), Embedding-based linear text regression, [fastText](https://arxiv.org/abs/1607.01759), and other models <sub><sup>[[example notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/text_regression_example.ipynb)]</sup></sub>\n     - **Sequence Labeling (NER)**:  Bidirectional LSTM with optional [CRF layer](https://arxiv.org/abs/1603.01360) and various embedding schemes such as pretrained [BERT](https://huggingface.co/transformers/pretrained_models.html) and [fasttext](https://fasttext.cc/docs/en/crawl-vectors.html) word embeddings and character embeddings <sub><sup>[[example notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/CoNLL2002_Dutch-BiLSTM.ipynb)]</sup></sub>\n     - **Ready-to-Use NER models for English, Chinese, and Russian** with no training required <sub><sup>[[example notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/shallownlp-examples.ipynb)]</sup></sub>\n     - **Unsupervised Topic Modeling** with [LDA](http://www.jmlr.org/papers/volume3/blei03a/blei03a.pdf)  <sub><sup>[[example notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/20newsgroups-topic_modeling.ipynb)]</sup></sub>\n     - **Document Similarity with One-Class Learning**:  given some documents of interest, find and score new documents that are semantically similar to them using [One-Class Text Classification](https://en.wikipedia.org/wiki/One-class_classification) <sub><sup>[[example notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/20newsgroups-document_similarity_scorer.ipynb)]</sup></sub>\n     - **Document Recommendation Engine**:  given text from a sample document, recommend documents that are thematically-related to it from a larger corpus  <sub><sup>[[example notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/20newsgroups-recommendation_engine.ipynb)]</sup></sub>\n     - **Text Summarization**:  summarize long documents with a pretrained BART model - no training required <sub><sup>[[example notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/text_summarization_with_bart.ipynb)]</sup></sub>\n     - **Open-Domain Question-Answering**:  ask a large text corpus questions and receive exact answers <sub><sup>[[example notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/question_answering_with_bert.ipynb)]</sup></sub>\n  - `vision` data:\n    - **image classification** (e.g., [ResNet](https://arxiv.org/abs/1512.03385), [Wide ResNet](https://arxiv.org/abs/1605.07146), [Inception](https://www.cs.unc.edu/~wliu/papers/GoogLeNet.pdf)) <sub><sup>[[example notebook](https://colab.research.google.com/drive/1WipQJUPL7zqyvLT10yekxf_HNMXDDtyR)]</sup></sub>\n  - `graph` data:\n    - **node classification** with graph neural networks ([GraphSAGE](https://cs.stanford.edu/people/jure/pubs/graphsage-nips17.pdf)) <sub><sup>[[example notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/graphs/pubmed_node_classification-GraphSAGE.ipynb)]</sup></sub>\n    - **link prediction** with graph neural networks ([GraphSAGE](https://cs.stanford.edu/people/jure/pubs/graphsage-nips17.pdf)) <sub><sup>[[example notebook](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/graphs/cora_link_prediction-GraphSAGE.ipynb)]</sup></sub>\n- estimate an optimal learning rate for your model given your data using a Learning Rate Finder\n- utilize learning rate schedules such as the [triangular policy](https://arxiv.org/abs/1506.01186), the [1cycle policy](https://arxiv.org/abs/1803.09820), and [SGDR](https://arxiv.org/abs/1608.03983) to effectively minimize loss and improve generalization\n- build text classifiers for any language (e.g., [Chinese Sentiment Analysis with BERT](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/ChineseHotelReviews-BERT.ipynb), [Arabic Sentiment Analysis with NBSVM](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/ArabicHotelReviews-nbsvm.ipynb))\n- easily train NER models for any language (e.g., [Dutch NER](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/CoNLL2002_Dutch-BiLSTM.ipynb) )\n- load and preprocess text and image data from a variety of formats \n- inspect data points that were misclassified and [provide explanations](https://eli5.readthedocs.io/en/latest/) to help improve your model\n- leverage a simple prediction API for saving and deploying both models and data-preprocessing steps to make predictions on new raw data\n\n\n### Tutorials\nPlease see the following tutorial notebooks for a guide on how to use *ktrain* on your projects:\n* Tutorial 1:  [Introduction](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-01-introduction.ipynb)\n* Tutorial 2:  [Tuning Learning Rates](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-02-tuning-learning-rates.ipynb)\n* Tutorial 3: [Image Classification](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-03-image-classification.ipynb)\n* Tutorial 4: [Text Classification](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-04-text-classification.ipynb)\n* Tutorial 5: [Learning from Unlabeled Text Data](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-05-learning_from_unlabeled_text_data.ipynb)\n* Tutorial 6: [Text Sequence Tagging](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-06-sequence-tagging.ipynb) for Named Entity Recognition\n* Tutorial 7: [Graph Node Classification](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-07-graph-node_classification.ipynb) with Graph Neural Networks\n* Tutorial A1: [Additional tricks](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-A1-additional-tricks.ipynb), which covers topics such as previewing data augmentation schemes, inspecting intermediate output of Keras models for debugging, setting global weight decay, and use of built-in and custom callbacks.\n* Tutorial A2: [Explaining Predictions and Misclassifications](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-A2-explaining-predictions.ipynb)\n* Tutorial A3: [Text Classification with Hugging Face Transformers](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-A3-hugging_face_transformers.ipynb)\n* Tutorial A4: [Using Custom Data Formats and Models: Text Regression with Extra Regressors](https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-A4-customdata-text_regression_with_extra_regressors.ipynb)\n\n\nSome blog tutorials about *ktrain* are shown below:\n\n> [**ktrain: A Lightweight Wrapper for Keras to Help Train Neural Networks**](https://towardsdatascience.com/ktrain-a-lightweight-wrapper-for-keras-to-help-train-neural-networks-82851ba889c) \n\n\n> [**BERT Text Classification in 3 Lines of Code**](https://towardsdatascience.com/bert-text-classification-in-3-lines-of-code-using-keras-264db7e7a358)  \n\n> [**Text Classification with Hugging Face Transformers in  TensorFlow 2 (Without Tears)**](https://medium.com/@asmaiya/text-classification-with-hugging-face-transformers-in-tensorflow-2-without-tears-ee50e4f3e7ed)\n\n> [**Build an Open-Domain Question-Answering System With BERT in 3 Lines of Code**](https://towardsdatascience.com/build-an-open-domain-question-answering-system-with-bert-in-3-lines-of-code-da0131bc516b)\n\n\n\n\n\n\n\n\n\n### Examples\n\nTasks such as text classification and image classification can be accomplished easily with \nonly a few lines of code.\n\n#### Example: Text Classification of [IMDb Movie Reviews](https://ai.stanford.edu/~amaas/data/sentiment/) Using [BERT](https://arxiv.org/pdf/1810.04805.pdf)\n```python\nimport ktrain\nfrom ktrain import text as txt\n\n# load data\n(x_train, y_train), (x_test, y_test), preproc = txt.texts_from_folder('data/aclImdb', maxlen=500, \n                                                                     preprocess_mode='bert',\n                                                                     train_test_names=['train', 'test'],\n                                                                     classes=['pos', 'neg'])\n\n# load model\nmodel = txt.text_classifier('bert', (x_train, y_train), preproc=preproc)\n\n# wrap model and data in ktrain.Learner object\nlearner = ktrain.get_learner(model, \n                             train_data=(x_train, y_train), \n                             val_data=(x_test, y_test), \n                             batch_size=6)\n\n# find good learning rate\nlearner.lr_find()             # briefly simulate training to find good learning rate\nlearner.lr_plot()             # visually identify best learning rate\n\n# train using 1cycle learning rate schedule for 3 epochs\nlearner.fit_onecycle(2e-5, 3) \n```\n\n\n#### Example: Classifying Images of [Dogs and Cats](https://www.kaggle.com/c/dogs-vs-cats) Using a Pretrained [ResNet50](https://arxiv.org/abs/1512.03385) model\n```python\nimport ktrain\nfrom ktrain import vision as vis\n\n# load data\n(train_data, val_data, preproc) = vis.images_from_folder(\n                                              datadir='data/dogscats',\n                                              data_aug = vis.get_data_aug(horizontal_flip=True),\n                                              train_test_names=['train', 'valid'], \n                                              target_size=(224,224), color_mode='rgb')\n\n# load model\nmodel = vis.image_classifier('pretrained_resnet50', train_data, val_data, freeze_layers=80)\n\n# wrap model and data in ktrain.Learner object\nlearner = ktrain.get_learner(model=model, train_data=train_data, val_data=val_data, \n                             workers=8, use_multiprocessing=False, batch_size=64)\n\n# find good learning rate\nlearner.lr_find()             # briefly simulate training to find good learning rate\nlearner.lr_plot()             # visually identify best learning rate\n\n# train using triangular policy with ModelCheckpoint and implicit ReduceLROnPlateau and EarlyStopping\nlearner.autofit(1e-4, checkpoint_folder='/tmp/saved_weights') \n```\n\n#### Example: Sequence Labeling for [Named Entity Recognition](https://www.kaggle.com/abhinavwalia95/entity-annotated-corpus/version/2) using a randomly initialized [Bidirectional LSTM CRF](https://arxiv.org/abs/1603.01360) model\n```python\nimport ktrain\nfrom ktrain import text as txt\n\n# load data\n(trn, val, preproc) = txt.entities_from_txt('data/ner_dataset.csv',\n                                            sentence_column='Sentence #',\n                                            word_column='Word',\n                                            tag_column='Tag', \n                                            data_format='gmb',\n                                            use_char=True) # enable character embeddings\n\n# load model\nmodel = txt.sequence_tagger('bilstm-crf', preproc)\n\n# wrap model and data in ktrain.Learner object\nlearner = ktrain.get_learner(model, train_data=trn, val_data=val)\n\n\n# conventional training for 1 epoch using a learning rate of 0.001 (Keras default for Adam optmizer)\nlearner.fit(1e-3, 1) \n```\n\n\n#### Example: Node Classification on [Cora Citation Graph](https://linqs-data.soe.ucsc.edu/public/lbc/cora.tgz) using a [GraphSAGE](https://arxiv.org/abs/1706.02216) model\n```python\nimport ktrain\nfrom ktrain import graph as gr\n\n# load data with supervision ratio of 10%\n(trn, val, preproc)  = gr.graph_nodes_from_csv(\n                                               'cora.content', # node attributes/labels\n                                               'cora.cites',   # edge list\n                                               sample_size=20, \n                                               holdout_pct=None, \n                                               holdout_for_inductive=False,\n                                              train_pct=0.1, sep='\\t')\n\n# load model\nmodel=gr.graph_node_classifier('graphsage', trn)\n\n# wrap model and data in ktrain.Learner object\nlearner = ktrain.get_learner(model, train_data=trn, val_data=val, batch_size=64)\n\n\n# find good learning rate\nlearner.lr_find(max_epochs=100) # briefly simulate training to find good learning rate\nlearner.lr_plot()               # visually identify best learning rate\n\n# train using triangular policy with ModelCheckpoint and implicit ReduceLROnPlateau and EarlyStopping\nlearner.autofit(0.01, checkpoint_folder='/tmp/saved_weights')\n```\n\n\n#### Example: Text Classification with [Hugging Face Transformers](https://github.com/huggingface/transformers) on [20 Newsgroups Dataset](https://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html) Using [DistilBERT](https://arxiv.org/abs/1910.01108)\n```python\n# load text data\ncategories = ['alt.atheism', 'soc.religion.christian','comp.graphics', 'sci.med']\nfrom sklearn.datasets import fetch_20newsgroups\ntrain_b = fetch_20newsgroups(subset='train', categories=categories, shuffle=True)\ntest_b = fetch_20newsgroups(subset='test',categories=categories, shuffle=True)\n(x_train, y_train) = (train_b.data, train_b.target)\n(x_test, y_test) = (test_b.data, test_b.target)\n\n# build, train, and validate model (Transformer is wrapper around transformers library)\nimport ktrain\nfrom ktrain import text\nMODEL_NAME = 'distilbert-base-uncased'\nt = text.Transformer(MODEL_NAME, maxlen=500, class_names=train_b.target_names)\ntrn = t.preprocess_train(x_train, y_train)\nval = t.preprocess_test(x_test, y_test)\nmodel = t.get_classifier()\nlearner = ktrain.get_learner(model, train_data=trn, val_data=val, batch_size=6)\nlearner.fit_onecycle(5e-5, 4)\nlearner.validate(class_names=t.get_classes()) # class_names must be string values\n\n# Output from learner.validate()\n#                        precision    recall  f1-score   support\n#\n#           alt.atheism       0.92      0.93      0.93       319\n#         comp.graphics       0.97      0.97      0.97       389\n#               sci.med       0.97      0.95      0.96       396\n#soc.religion.christian       0.96      0.96      0.96       398\n#\n#              accuracy                           0.96      1502\n#             macro avg       0.95      0.96      0.95      1502\n#          weighted avg       0.96      0.96      0.96      1502\n```\n\n\nUsing *ktrain* on **Google Colab**?  See these Colab examples:\n-  [a simple demo of Multiclass Text Classification with BERT](https://colab.research.google.com/drive/1AH3fkKiEqBpVpO5ua00scp7zcHs5IDLK)\n-  [a simple demo of Multiclass Text Classification with Hugging Face Transformers](https://colab.research.google.com/drive/1YxcceZxsNlvK35pRURgbwvkgejXwFxUt)\n-  [image classification with Cats vs. Dogs](https://colab.research.google.com/drive/1WipQJUPL7zqyvLT10yekxf_HNMXDDtyR)\n\n**Additional examples can be found [here](https://github.com/amaiya/ktrain/tree/master/examples).**\n\n\n\n### Installation\n\n*ktrain* currently uses [TensorFlow 2.1.0](https://www.tensorflow.org/install/pip?lang=python3), which will be installed automatically when installing *ktrain*. \nWhile *ktrain* will probably work with other versions of TensorFlow 2.x, v2.1.0 is the current recommended and tested version.\n\n1.  Make sure pip is up-to-date with: `pip3 install -U pip`\n\n2. Install *ktrain*: `pip3 install ktrain`\n\n**Some things to note:**\n- Since some *ktrain* dependencies have not yet been migrated to `tf.keras` in TensorFlow 2 (or may have other issues), \n  *ktrain* is temporarily using forked versions of some libraries. Specifically, *ktrain* uses forked versions of the `eli5` and `stellargraph` libraries.  If not installed, *ktrain* will complain  when a method or function needing \n  either of these libraries is invoked.\n  To install these forked versions, you can do the following:\n```\npip3 install git+https://github.com/amaiya/eli5@tfkeras_0_10_1\npip3 install git+https://github.com/amaiya/stellargraph@no_tf_dep_082\n```\n\nThis code was tested on Ubuntu 18.04 LTS using TensorFlow 2.1.0\n\n\n### How to Cite\n\nPlease cite the [following paper](https://arxiv.org/abs/2004.10703) when using **ktrain**:\n```\n@misc{maiya2020ktrain,\n    title={ktrain: A Low-Code Library for Augmented Machine Learning},\n    author={Arun S. Maiya},\n    year={2020},\n    eprint={2004.10703},\n    archivePrefix={arXiv},\n    primaryClass={cs.LG}\n}\n```\n\n\n<!--\n### Requirements\n\nThe following software/libraries should be installed:\n\n- [Python 3.6+](https://www.python.org/) (tested on 3.6.7)\n- [Keras](https://keras.io/)  (tested on 2.2.4)\n- [TensorFlow](https://www.tensorflow.org/)  (tested on 1.10.1)\n- [scikit-learn](https://scikit-learn.org/stable/) (tested on 0.20.0)\n- [matplotlib](https://matplotlib.org/) (tested on 3.0.0)\n- [pandas](https://pandas.pydata.org/) (tested on 0.24.2)\n- [keras_bert](https://github.com/CyberZHG/keras-bert/tree/master/keras_bert) \n- [fastprogress](https://github.com/fastai/fastprogress) \n-->\n\n\n\n----\n**Creator:  [Arun S. Maiya](http://arun.maiya.net)**\n\n**Email:** arun [at] maiya [dot] net", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/amaiya/ktrain", "keywords": "tensorflow,keras,deep learning,machine learning", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "ktrain", "package_url": "https://pypi.org/project/ktrain/", "platform": "", "project_url": "https://pypi.org/project/ktrain/", "project_urls": {"Homepage": "https://github.com/amaiya/ktrain"}, "release_url": "https://pypi.org/project/ktrain/0.14.6/", "requires_dist": null, "requires_python": "", "summary": "ktrain is a wrapper for TensorFlow Keras that makes deep learning and AI more accessible and easier to apply", "version": "0.14.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://badge.fury.io/py/ktrain\" rel=\"nofollow\"><img alt=\"PyPI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b0cfd2c41cbe555aad6e6a5fc130848807f2ec35/68747470733a2f2f62616467652e667572792e696f2f70792f6b747261696e2e737667\"></a> <a href=\"https://pypi.python.org/pypi/ktrain\" rel=\"nofollow\"><img alt=\"ktrain python compatibility\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2636c19efb5f3161ae2f95cce63782ef99d2f76/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6b747261696e2e737667\"></a> <a href=\"https://github.com/amaiya/ktrain/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b97ca76cf5d8fd16c7bc4731270e0bbe53df7aa1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667\"></a> <a href=\"https://pepy.tech/project/ktrain\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6bbad6bca84f2f98c50d31e1886179485b2cf08/68747470733a2f2f706570792e746563682f62616467652f6b747261696e\"></a> <a href=\"https://pepy.tech/project/ktrain/month\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e3316069d55485628e32d17ea60fd0b8aeae887/68747470733a2f2f706570792e746563682f62616467652f6b747261696e2f6d6f6e7468\"></a></p>\n<h1>ktrain</h1>\n<h3>News and Announcements</h3>\n<ul>\n<li><strong>2020-04-15:</strong>\n<ul>\n<li><em><strong>ktrain</strong></em> <strong>v0.14.x is released</strong> and now includes support for <strong>open-domain question-answering</strong>.  See the <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/question_answering_with_bert.ipynb\" rel=\"nofollow\">example QA notebook</a></li>\n</ul>\n</li>\n<li><strong>2020-04-09:</strong>\n<ul>\n<li><em><strong>ktrain</strong></em> <strong>v0.13.x is released</strong> and includes support for:\n<ul>\n<li><strong>link prediction</strong> using graph neural networks - <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/graphs/cora_link_prediction-GraphSAGE.ipynb\" rel=\"nofollow\">see example link prediction notebook</a> on citation prediction</li>\n<li><strong>text summarization</strong> with pretrained BART - <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/text_summarization_with_bart.ipynb\" rel=\"nofollow\">see example summarization notebook</a> <sub><sup>(Summarization included in v0.13.1, but not v0.13.0.)</sup></sub></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<pre><span class=\"c1\"># text summarization with BART</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ktrain</span> <span class=\"kn\">import</span> <span class=\"n\">text</span>\n<span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">TransformerSummarizer</span><span class=\"p\">()</span>\n<span class=\"n\">ts</span><span class=\"o\">.</span><span class=\"n\">summarize</span><span class=\"p\">(</span><span class=\"n\">some_long_document</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><strong>2020-03-31:</strong>\n<ul>\n<li><em><strong>ktrain</strong></em> <strong>v0.12.x is released</strong> and now includes BERT embeddings (i.e., BERT, DistilBert, and Albert) that can be used for downstream tasks like building sequence-taggers (i.e., NER)\nfor any language such as English, Chinese, Russian, Arabic, Dutch, etc.  See <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/CoNLL2003-BiLSTM.ipynb\" rel=\"nofollow\">this English NER example notebook</a> or the <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/CoNLL2002_Dutch-BiLSTM.ipynb\" rel=\"nofollow\">Dutch NER notebook</a> for examples on how to use this feature.\n<em>ktrain</em> also supports NER with domain-specific embeddings from <a href=\"https://huggingface.co/models\" rel=\"nofollow\">community-uploaded Hugging Face models</a> such as <a href=\"https://arxiv.org/abs/1901.08746\" rel=\"nofollow\">BioBERT</a> for the biomedical domain:</li>\n</ul>\n</li>\n</ul>\n<pre><span class=\"c1\"># NER with BioBERT embeddings</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ktrain</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ktrain</span> <span class=\"kn\">import</span> <span class=\"n\">text</span> <span class=\"k\">as</span> <span class=\"n\">txt</span>\n<span class=\"n\">x_train</span><span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"s1\">'IL-2'</span><span class=\"p\">,</span> <span class=\"s1\">'responsiveness'</span><span class=\"p\">,</span> <span class=\"s1\">'requires'</span><span class=\"p\">,</span> <span class=\"s1\">'three'</span><span class=\"p\">,</span> <span class=\"s1\">'distinct'</span><span class=\"p\">,</span> <span class=\"s1\">'elements'</span><span class=\"p\">,</span> <span class=\"s1\">'within'</span><span class=\"p\">,</span> <span class=\"s1\">'the'</span><span class=\"p\">,</span> <span class=\"s1\">'enhancer'</span><span class=\"p\">,</span> <span class=\"s1\">'.'</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"n\">y_train</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"s1\">'B-protein'</span><span class=\"p\">,</span> <span class=\"s1\">'O'</span><span class=\"p\">,</span> <span class=\"s1\">'O'</span><span class=\"p\">,</span> <span class=\"s1\">'O'</span><span class=\"p\">,</span> <span class=\"s1\">'O'</span><span class=\"p\">,</span> <span class=\"s1\">'B-DNA'</span><span class=\"p\">,</span> <span class=\"s1\">'O'</span><span class=\"p\">,</span> <span class=\"s1\">'O'</span><span class=\"p\">,</span> <span class=\"s1\">'B-DNA'</span><span class=\"p\">,</span> <span class=\"s1\">'O'</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">(</span><span class=\"n\">trn</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">preproc</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">entities_from_array</span><span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">sequence_tagger</span><span class=\"p\">(</span><span class=\"s1\">'bilstm-bert'</span><span class=\"p\">,</span> <span class=\"n\">preproc</span><span class=\"p\">,</span> <span class=\"n\">bert_model</span><span class=\"o\">=</span><span class=\"s1\">'monologg/biobert_v1.1_pubmed'</span><span class=\"p\">)</span>\n<span class=\"n\">learner</span> <span class=\"o\">=</span> <span class=\"n\">ktrain</span><span class=\"o\">.</span><span class=\"n\">get_learner</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">train_data</span><span class=\"o\">=</span><span class=\"n\">trn</span><span class=\"p\">,</span> <span class=\"n\">val_data</span><span class=\"o\">=</span><span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">)</span>\n<span class=\"n\">learner</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">cycle_len</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<hr>\n<h3>Overview</h3>\n<p><em>ktrain</em> is a lightweight wrapper for the deep learning library <a href=\"https://www.tensorflow.org/guide/keras/overview\" rel=\"nofollow\">TensorFlow Keras</a> (and other libraries) to help build, train, and deploy neural networks and other machine learning models.  It is designed to make deep learning and AI more accessible and easier to apply for both newcomers and experienced practitioners. With only a few lines of code, ktrain allows you to easily and quickly:</p>\n<ul>\n<li>employ fast, accurate, and easy-to-use pre-canned models for  <code>text</code>, <code>vision</code>, and <code>graph</code> data:\n<ul>\n<li><code>text</code> data:\n<ul>\n<li><strong>Text Classification</strong>: <a href=\"https://arxiv.org/abs/1810.04805\" rel=\"nofollow\">BERT</a>, <a href=\"https://arxiv.org/abs/1910.01108\" rel=\"nofollow\">DistilBERT</a>, <a href=\"https://www.aclweb.org/anthology/P12-2018\" rel=\"nofollow\">NBSVM</a>, <a href=\"https://arxiv.org/abs/1607.01759\" rel=\"nofollow\">fastText</a>, and other models <sub><sup>[<a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/IMDb-BERT.ipynb\" rel=\"nofollow\">example notebook</a>]</sup></sub></li>\n<li><strong>Text Regression</strong>: <a href=\"https://arxiv.org/abs/1810.04805\" rel=\"nofollow\">BERT</a>, <a href=\"https://arxiv.org/abs/1910.01108\" rel=\"nofollow\">DistilBERT</a>, Embedding-based linear text regression, <a href=\"https://arxiv.org/abs/1607.01759\" rel=\"nofollow\">fastText</a>, and other models <sub><sup>[<a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/text_regression_example.ipynb\" rel=\"nofollow\">example notebook</a>]</sup></sub></li>\n<li><strong>Sequence Labeling (NER)</strong>:  Bidirectional LSTM with optional <a href=\"https://arxiv.org/abs/1603.01360\" rel=\"nofollow\">CRF layer</a> and various embedding schemes such as pretrained <a href=\"https://huggingface.co/transformers/pretrained_models.html\" rel=\"nofollow\">BERT</a> and <a href=\"https://fasttext.cc/docs/en/crawl-vectors.html\" rel=\"nofollow\">fasttext</a> word embeddings and character embeddings <sub><sup>[<a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/CoNLL2002_Dutch-BiLSTM.ipynb\" rel=\"nofollow\">example notebook</a>]</sup></sub></li>\n<li><strong>Ready-to-Use NER models for English, Chinese, and Russian</strong> with no training required <sub><sup>[<a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/shallownlp-examples.ipynb\" rel=\"nofollow\">example notebook</a>]</sup></sub></li>\n<li><strong>Unsupervised Topic Modeling</strong> with <a href=\"http://www.jmlr.org/papers/volume3/blei03a/blei03a.pdf\" rel=\"nofollow\">LDA</a>  <sub><sup>[<a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/20newsgroups-topic_modeling.ipynb\" rel=\"nofollow\">example notebook</a>]</sup></sub></li>\n<li><strong>Document Similarity with One-Class Learning</strong>:  given some documents of interest, find and score new documents that are semantically similar to them using <a href=\"https://en.wikipedia.org/wiki/One-class_classification\" rel=\"nofollow\">One-Class Text Classification</a> <sub><sup>[<a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/20newsgroups-document_similarity_scorer.ipynb\" rel=\"nofollow\">example notebook</a>]</sup></sub></li>\n<li><strong>Document Recommendation Engine</strong>:  given text from a sample document, recommend documents that are thematically-related to it from a larger corpus  <sub><sup>[<a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/20newsgroups-recommendation_engine.ipynb\" rel=\"nofollow\">example notebook</a>]</sup></sub></li>\n<li><strong>Text Summarization</strong>:  summarize long documents with a pretrained BART model - no training required <sub><sup>[<a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/text_summarization_with_bart.ipynb\" rel=\"nofollow\">example notebook</a>]</sup></sub></li>\n<li><strong>Open-Domain Question-Answering</strong>:  ask a large text corpus questions and receive exact answers <sub><sup>[<a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/question_answering_with_bert.ipynb\" rel=\"nofollow\">example notebook</a>]</sup></sub></li>\n</ul>\n</li>\n<li><code>vision</code> data:\n<ul>\n<li><strong>image classification</strong> (e.g., <a href=\"https://arxiv.org/abs/1512.03385\" rel=\"nofollow\">ResNet</a>, <a href=\"https://arxiv.org/abs/1605.07146\" rel=\"nofollow\">Wide ResNet</a>, <a href=\"https://www.cs.unc.edu/%7Ewliu/papers/GoogLeNet.pdf\" rel=\"nofollow\">Inception</a>) <sub><sup>[<a href=\"https://colab.research.google.com/drive/1WipQJUPL7zqyvLT10yekxf_HNMXDDtyR\" rel=\"nofollow\">example notebook</a>]</sup></sub></li>\n</ul>\n</li>\n<li><code>graph</code> data:\n<ul>\n<li><strong>node classification</strong> with graph neural networks (<a href=\"https://cs.stanford.edu/people/jure/pubs/graphsage-nips17.pdf\" rel=\"nofollow\">GraphSAGE</a>) <sub><sup>[<a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/graphs/pubmed_node_classification-GraphSAGE.ipynb\" rel=\"nofollow\">example notebook</a>]</sup></sub></li>\n<li><strong>link prediction</strong> with graph neural networks (<a href=\"https://cs.stanford.edu/people/jure/pubs/graphsage-nips17.pdf\" rel=\"nofollow\">GraphSAGE</a>) <sub><sup>[<a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/graphs/cora_link_prediction-GraphSAGE.ipynb\" rel=\"nofollow\">example notebook</a>]</sup></sub></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>estimate an optimal learning rate for your model given your data using a Learning Rate Finder</li>\n<li>utilize learning rate schedules such as the <a href=\"https://arxiv.org/abs/1506.01186\" rel=\"nofollow\">triangular policy</a>, the <a href=\"https://arxiv.org/abs/1803.09820\" rel=\"nofollow\">1cycle policy</a>, and <a href=\"https://arxiv.org/abs/1608.03983\" rel=\"nofollow\">SGDR</a> to effectively minimize loss and improve generalization</li>\n<li>build text classifiers for any language (e.g., <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/ChineseHotelReviews-BERT.ipynb\" rel=\"nofollow\">Chinese Sentiment Analysis with BERT</a>, <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/ArabicHotelReviews-nbsvm.ipynb\" rel=\"nofollow\">Arabic Sentiment Analysis with NBSVM</a>)</li>\n<li>easily train NER models for any language (e.g., <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/examples/text/CoNLL2002_Dutch-BiLSTM.ipynb\" rel=\"nofollow\">Dutch NER</a> )</li>\n<li>load and preprocess text and image data from a variety of formats</li>\n<li>inspect data points that were misclassified and <a href=\"https://eli5.readthedocs.io/en/latest/\" rel=\"nofollow\">provide explanations</a> to help improve your model</li>\n<li>leverage a simple prediction API for saving and deploying both models and data-preprocessing steps to make predictions on new raw data</li>\n</ul>\n<h3>Tutorials</h3>\n<p>Please see the following tutorial notebooks for a guide on how to use <em>ktrain</em> on your projects:</p>\n<ul>\n<li>Tutorial 1:  <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-01-introduction.ipynb\" rel=\"nofollow\">Introduction</a></li>\n<li>Tutorial 2:  <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-02-tuning-learning-rates.ipynb\" rel=\"nofollow\">Tuning Learning Rates</a></li>\n<li>Tutorial 3: <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-03-image-classification.ipynb\" rel=\"nofollow\">Image Classification</a></li>\n<li>Tutorial 4: <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-04-text-classification.ipynb\" rel=\"nofollow\">Text Classification</a></li>\n<li>Tutorial 5: <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-05-learning_from_unlabeled_text_data.ipynb\" rel=\"nofollow\">Learning from Unlabeled Text Data</a></li>\n<li>Tutorial 6: <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-06-sequence-tagging.ipynb\" rel=\"nofollow\">Text Sequence Tagging</a> for Named Entity Recognition</li>\n<li>Tutorial 7: <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-07-graph-node_classification.ipynb\" rel=\"nofollow\">Graph Node Classification</a> with Graph Neural Networks</li>\n<li>Tutorial A1: <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-A1-additional-tricks.ipynb\" rel=\"nofollow\">Additional tricks</a>, which covers topics such as previewing data augmentation schemes, inspecting intermediate output of Keras models for debugging, setting global weight decay, and use of built-in and custom callbacks.</li>\n<li>Tutorial A2: <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-A2-explaining-predictions.ipynb\" rel=\"nofollow\">Explaining Predictions and Misclassifications</a></li>\n<li>Tutorial A3: <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-A3-hugging_face_transformers.ipynb\" rel=\"nofollow\">Text Classification with Hugging Face Transformers</a></li>\n<li>Tutorial A4: <a href=\"https://nbviewer.jupyter.org/github/amaiya/ktrain/blob/master/tutorials/tutorial-A4-customdata-text_regression_with_extra_regressors.ipynb\" rel=\"nofollow\">Using Custom Data Formats and Models: Text Regression with Extra Regressors</a></li>\n</ul>\n<p>Some blog tutorials about <em>ktrain</em> are shown below:</p>\n<blockquote>\n<p><a href=\"https://towardsdatascience.com/ktrain-a-lightweight-wrapper-for-keras-to-help-train-neural-networks-82851ba889c\" rel=\"nofollow\"><strong>ktrain: A Lightweight Wrapper for Keras to Help Train Neural Networks</strong></a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://towardsdatascience.com/bert-text-classification-in-3-lines-of-code-using-keras-264db7e7a358\" rel=\"nofollow\"><strong>BERT Text Classification in 3 Lines of Code</strong></a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://medium.com/@asmaiya/text-classification-with-hugging-face-transformers-in-tensorflow-2-without-tears-ee50e4f3e7ed\" rel=\"nofollow\"><strong>Text Classification with Hugging Face Transformers in  TensorFlow 2 (Without Tears)</strong></a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://towardsdatascience.com/build-an-open-domain-question-answering-system-with-bert-in-3-lines-of-code-da0131bc516b\" rel=\"nofollow\"><strong>Build an Open-Domain Question-Answering System With BERT in 3 Lines of Code</strong></a></p>\n</blockquote>\n<h3>Examples</h3>\n<p>Tasks such as text classification and image classification can be accomplished easily with\nonly a few lines of code.</p>\n<h4>Example: Text Classification of <a href=\"https://ai.stanford.edu/%7Eamaas/data/sentiment/\" rel=\"nofollow\">IMDb Movie Reviews</a> Using <a href=\"https://arxiv.org/pdf/1810.04805.pdf\" rel=\"nofollow\">BERT</a></h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ktrain</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ktrain</span> <span class=\"kn\">import</span> <span class=\"n\">text</span> <span class=\"k\">as</span> <span class=\"n\">txt</span>\n\n<span class=\"c1\"># load data</span>\n<span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">x_test</span><span class=\"p\">,</span> <span class=\"n\">y_test</span><span class=\"p\">),</span> <span class=\"n\">preproc</span> <span class=\"o\">=</span> <span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">texts_from_folder</span><span class=\"p\">(</span><span class=\"s1\">'data/aclImdb'</span><span class=\"p\">,</span> <span class=\"n\">maxlen</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span> \n                                                                     <span class=\"n\">preprocess_mode</span><span class=\"o\">=</span><span class=\"s1\">'bert'</span><span class=\"p\">,</span>\n                                                                     <span class=\"n\">train_test_names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'train'</span><span class=\"p\">,</span> <span class=\"s1\">'test'</span><span class=\"p\">],</span>\n                                                                     <span class=\"n\">classes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'pos'</span><span class=\"p\">,</span> <span class=\"s1\">'neg'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># load model</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">text_classifier</span><span class=\"p\">(</span><span class=\"s1\">'bert'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">),</span> <span class=\"n\">preproc</span><span class=\"o\">=</span><span class=\"n\">preproc</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># wrap model and data in ktrain.Learner object</span>\n<span class=\"n\">learner</span> <span class=\"o\">=</span> <span class=\"n\">ktrain</span><span class=\"o\">.</span><span class=\"n\">get_learner</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> \n                             <span class=\"n\">train_data</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">),</span> \n                             <span class=\"n\">val_data</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">x_test</span><span class=\"p\">,</span> <span class=\"n\">y_test</span><span class=\"p\">),</span> \n                             <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># find good learning rate</span>\n<span class=\"n\">learner</span><span class=\"o\">.</span><span class=\"n\">lr_find</span><span class=\"p\">()</span>             <span class=\"c1\"># briefly simulate training to find good learning rate</span>\n<span class=\"n\">learner</span><span class=\"o\">.</span><span class=\"n\">lr_plot</span><span class=\"p\">()</span>             <span class=\"c1\"># visually identify best learning rate</span>\n\n<span class=\"c1\"># train using 1cycle learning rate schedule for 3 epochs</span>\n<span class=\"n\">learner</span><span class=\"o\">.</span><span class=\"n\">fit_onecycle</span><span class=\"p\">(</span><span class=\"mf\">2e-5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span> \n</pre>\n<h4>Example: Classifying Images of <a href=\"https://www.kaggle.com/c/dogs-vs-cats\" rel=\"nofollow\">Dogs and Cats</a> Using a Pretrained <a href=\"https://arxiv.org/abs/1512.03385\" rel=\"nofollow\">ResNet50</a> model</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ktrain</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ktrain</span> <span class=\"kn\">import</span> <span class=\"n\">vision</span> <span class=\"k\">as</span> <span class=\"n\">vis</span>\n\n<span class=\"c1\"># load data</span>\n<span class=\"p\">(</span><span class=\"n\">train_data</span><span class=\"p\">,</span> <span class=\"n\">val_data</span><span class=\"p\">,</span> <span class=\"n\">preproc</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">vis</span><span class=\"o\">.</span><span class=\"n\">images_from_folder</span><span class=\"p\">(</span>\n                                              <span class=\"n\">datadir</span><span class=\"o\">=</span><span class=\"s1\">'data/dogscats'</span><span class=\"p\">,</span>\n                                              <span class=\"n\">data_aug</span> <span class=\"o\">=</span> <span class=\"n\">vis</span><span class=\"o\">.</span><span class=\"n\">get_data_aug</span><span class=\"p\">(</span><span class=\"n\">horizontal_flip</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n                                              <span class=\"n\">train_test_names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'train'</span><span class=\"p\">,</span> <span class=\"s1\">'valid'</span><span class=\"p\">],</span> \n                                              <span class=\"n\">target_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">224</span><span class=\"p\">,</span><span class=\"mi\">224</span><span class=\"p\">),</span> <span class=\"n\">color_mode</span><span class=\"o\">=</span><span class=\"s1\">'rgb'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># load model</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">vis</span><span class=\"o\">.</span><span class=\"n\">image_classifier</span><span class=\"p\">(</span><span class=\"s1\">'pretrained_resnet50'</span><span class=\"p\">,</span> <span class=\"n\">train_data</span><span class=\"p\">,</span> <span class=\"n\">val_data</span><span class=\"p\">,</span> <span class=\"n\">freeze_layers</span><span class=\"o\">=</span><span class=\"mi\">80</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># wrap model and data in ktrain.Learner object</span>\n<span class=\"n\">learner</span> <span class=\"o\">=</span> <span class=\"n\">ktrain</span><span class=\"o\">.</span><span class=\"n\">get_learner</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">train_data</span><span class=\"o\">=</span><span class=\"n\">train_data</span><span class=\"p\">,</span> <span class=\"n\">val_data</span><span class=\"o\">=</span><span class=\"n\">val_data</span><span class=\"p\">,</span> \n                             <span class=\"n\">workers</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"n\">use_multiprocessing</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># find good learning rate</span>\n<span class=\"n\">learner</span><span class=\"o\">.</span><span class=\"n\">lr_find</span><span class=\"p\">()</span>             <span class=\"c1\"># briefly simulate training to find good learning rate</span>\n<span class=\"n\">learner</span><span class=\"o\">.</span><span class=\"n\">lr_plot</span><span class=\"p\">()</span>             <span class=\"c1\"># visually identify best learning rate</span>\n\n<span class=\"c1\"># train using triangular policy with ModelCheckpoint and implicit ReduceLROnPlateau and EarlyStopping</span>\n<span class=\"n\">learner</span><span class=\"o\">.</span><span class=\"n\">autofit</span><span class=\"p\">(</span><span class=\"mf\">1e-4</span><span class=\"p\">,</span> <span class=\"n\">checkpoint_folder</span><span class=\"o\">=</span><span class=\"s1\">'/tmp/saved_weights'</span><span class=\"p\">)</span> \n</pre>\n<h4>Example: Sequence Labeling for <a href=\"https://www.kaggle.com/abhinavwalia95/entity-annotated-corpus/version/2\" rel=\"nofollow\">Named Entity Recognition</a> using a randomly initialized <a href=\"https://arxiv.org/abs/1603.01360\" rel=\"nofollow\">Bidirectional LSTM CRF</a> model</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ktrain</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ktrain</span> <span class=\"kn\">import</span> <span class=\"n\">text</span> <span class=\"k\">as</span> <span class=\"n\">txt</span>\n\n<span class=\"c1\"># load data</span>\n<span class=\"p\">(</span><span class=\"n\">trn</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">preproc</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">entities_from_txt</span><span class=\"p\">(</span><span class=\"s1\">'data/ner_dataset.csv'</span><span class=\"p\">,</span>\n                                            <span class=\"n\">sentence_column</span><span class=\"o\">=</span><span class=\"s1\">'Sentence #'</span><span class=\"p\">,</span>\n                                            <span class=\"n\">word_column</span><span class=\"o\">=</span><span class=\"s1\">'Word'</span><span class=\"p\">,</span>\n                                            <span class=\"n\">tag_column</span><span class=\"o\">=</span><span class=\"s1\">'Tag'</span><span class=\"p\">,</span> \n                                            <span class=\"n\">data_format</span><span class=\"o\">=</span><span class=\"s1\">'gmb'</span><span class=\"p\">,</span>\n                                            <span class=\"n\">use_char</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"c1\"># enable character embeddings</span>\n\n<span class=\"c1\"># load model</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">sequence_tagger</span><span class=\"p\">(</span><span class=\"s1\">'bilstm-crf'</span><span class=\"p\">,</span> <span class=\"n\">preproc</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># wrap model and data in ktrain.Learner object</span>\n<span class=\"n\">learner</span> <span class=\"o\">=</span> <span class=\"n\">ktrain</span><span class=\"o\">.</span><span class=\"n\">get_learner</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">train_data</span><span class=\"o\">=</span><span class=\"n\">trn</span><span class=\"p\">,</span> <span class=\"n\">val_data</span><span class=\"o\">=</span><span class=\"n\">val</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># conventional training for 1 epoch using a learning rate of 0.001 (Keras default for Adam optmizer)</span>\n<span class=\"n\">learner</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"mf\">1e-3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> \n</pre>\n<h4>Example: Node Classification on <a href=\"https://linqs-data.soe.ucsc.edu/public/lbc/cora.tgz\" rel=\"nofollow\">Cora Citation Graph</a> using a <a href=\"https://arxiv.org/abs/1706.02216\" rel=\"nofollow\">GraphSAGE</a> model</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ktrain</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ktrain</span> <span class=\"kn\">import</span> <span class=\"n\">graph</span> <span class=\"k\">as</span> <span class=\"n\">gr</span>\n\n<span class=\"c1\"># load data with supervision ratio of 10%</span>\n<span class=\"p\">(</span><span class=\"n\">trn</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">preproc</span><span class=\"p\">)</span>  <span class=\"o\">=</span> <span class=\"n\">gr</span><span class=\"o\">.</span><span class=\"n\">graph_nodes_from_csv</span><span class=\"p\">(</span>\n                                               <span class=\"s1\">'cora.content'</span><span class=\"p\">,</span> <span class=\"c1\"># node attributes/labels</span>\n                                               <span class=\"s1\">'cora.cites'</span><span class=\"p\">,</span>   <span class=\"c1\"># edge list</span>\n                                               <span class=\"n\">sample_size</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> \n                                               <span class=\"n\">holdout_pct</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> \n                                               <span class=\"n\">holdout_for_inductive</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                                              <span class=\"n\">train_pct</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\t</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># load model</span>\n<span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">gr</span><span class=\"o\">.</span><span class=\"n\">graph_node_classifier</span><span class=\"p\">(</span><span class=\"s1\">'graphsage'</span><span class=\"p\">,</span> <span class=\"n\">trn</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># wrap model and data in ktrain.Learner object</span>\n<span class=\"n\">learner</span> <span class=\"o\">=</span> <span class=\"n\">ktrain</span><span class=\"o\">.</span><span class=\"n\">get_learner</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">train_data</span><span class=\"o\">=</span><span class=\"n\">trn</span><span class=\"p\">,</span> <span class=\"n\">val_data</span><span class=\"o\">=</span><span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># find good learning rate</span>\n<span class=\"n\">learner</span><span class=\"o\">.</span><span class=\"n\">lr_find</span><span class=\"p\">(</span><span class=\"n\">max_epochs</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"c1\"># briefly simulate training to find good learning rate</span>\n<span class=\"n\">learner</span><span class=\"o\">.</span><span class=\"n\">lr_plot</span><span class=\"p\">()</span>               <span class=\"c1\"># visually identify best learning rate</span>\n\n<span class=\"c1\"># train using triangular policy with ModelCheckpoint and implicit ReduceLROnPlateau and EarlyStopping</span>\n<span class=\"n\">learner</span><span class=\"o\">.</span><span class=\"n\">autofit</span><span class=\"p\">(</span><span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"n\">checkpoint_folder</span><span class=\"o\">=</span><span class=\"s1\">'/tmp/saved_weights'</span><span class=\"p\">)</span>\n</pre>\n<h4>Example: Text Classification with <a href=\"https://github.com/huggingface/transformers\" rel=\"nofollow\">Hugging Face Transformers</a> on <a href=\"https://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html\" rel=\"nofollow\">20 Newsgroups Dataset</a> Using <a href=\"https://arxiv.org/abs/1910.01108\" rel=\"nofollow\">DistilBERT</a></h4>\n<pre><span class=\"c1\"># load text data</span>\n<span class=\"n\">categories</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'alt.atheism'</span><span class=\"p\">,</span> <span class=\"s1\">'soc.religion.christian'</span><span class=\"p\">,</span><span class=\"s1\">'comp.graphics'</span><span class=\"p\">,</span> <span class=\"s1\">'sci.med'</span><span class=\"p\">]</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">fetch_20newsgroups</span>\n<span class=\"n\">train_b</span> <span class=\"o\">=</span> <span class=\"n\">fetch_20newsgroups</span><span class=\"p\">(</span><span class=\"n\">subset</span><span class=\"o\">=</span><span class=\"s1\">'train'</span><span class=\"p\">,</span> <span class=\"n\">categories</span><span class=\"o\">=</span><span class=\"n\">categories</span><span class=\"p\">,</span> <span class=\"n\">shuffle</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">test_b</span> <span class=\"o\">=</span> <span class=\"n\">fetch_20newsgroups</span><span class=\"p\">(</span><span class=\"n\">subset</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">,</span><span class=\"n\">categories</span><span class=\"o\">=</span><span class=\"n\">categories</span><span class=\"p\">,</span> <span class=\"n\">shuffle</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">train_b</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">train_b</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"n\">x_test</span><span class=\"p\">,</span> <span class=\"n\">y_test</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">test_b</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">test_b</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># build, train, and validate model (Transformer is wrapper around transformers library)</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ktrain</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ktrain</span> <span class=\"kn\">import</span> <span class=\"n\">text</span>\n<span class=\"n\">MODEL_NAME</span> <span class=\"o\">=</span> <span class=\"s1\">'distilbert-base-uncased'</span>\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">Transformer</span><span class=\"p\">(</span><span class=\"n\">MODEL_NAME</span><span class=\"p\">,</span> <span class=\"n\">maxlen</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"n\">class_names</span><span class=\"o\">=</span><span class=\"n\">train_b</span><span class=\"o\">.</span><span class=\"n\">target_names</span><span class=\"p\">)</span>\n<span class=\"n\">trn</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">preprocess_train</span><span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">preprocess_test</span><span class=\"p\">(</span><span class=\"n\">x_test</span><span class=\"p\">,</span> <span class=\"n\">y_test</span><span class=\"p\">)</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">get_classifier</span><span class=\"p\">()</span>\n<span class=\"n\">learner</span> <span class=\"o\">=</span> <span class=\"n\">ktrain</span><span class=\"o\">.</span><span class=\"n\">get_learner</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">train_data</span><span class=\"o\">=</span><span class=\"n\">trn</span><span class=\"p\">,</span> <span class=\"n\">val_data</span><span class=\"o\">=</span><span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"n\">learner</span><span class=\"o\">.</span><span class=\"n\">fit_onecycle</span><span class=\"p\">(</span><span class=\"mf\">5e-5</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">learner</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">class_names</span><span class=\"o\">=</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">get_classes</span><span class=\"p\">())</span> <span class=\"c1\"># class_names must be string values</span>\n\n<span class=\"c1\"># Output from learner.validate()</span>\n<span class=\"c1\">#                        precision    recall  f1-score   support</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#           alt.atheism       0.92      0.93      0.93       319</span>\n<span class=\"c1\">#         comp.graphics       0.97      0.97      0.97       389</span>\n<span class=\"c1\">#               sci.med       0.97      0.95      0.96       396</span>\n<span class=\"c1\">#soc.religion.christian       0.96      0.96      0.96       398</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#              accuracy                           0.96      1502</span>\n<span class=\"c1\">#             macro avg       0.95      0.96      0.95      1502</span>\n<span class=\"c1\">#          weighted avg       0.96      0.96      0.96      1502</span>\n</pre>\n<p>Using <em>ktrain</em> on <strong>Google Colab</strong>?  See these Colab examples:</p>\n<ul>\n<li><a href=\"https://colab.research.google.com/drive/1AH3fkKiEqBpVpO5ua00scp7zcHs5IDLK\" rel=\"nofollow\">a simple demo of Multiclass Text Classification with BERT</a></li>\n<li><a href=\"https://colab.research.google.com/drive/1YxcceZxsNlvK35pRURgbwvkgejXwFxUt\" rel=\"nofollow\">a simple demo of Multiclass Text Classification with Hugging Face Transformers</a></li>\n<li><a href=\"https://colab.research.google.com/drive/1WipQJUPL7zqyvLT10yekxf_HNMXDDtyR\" rel=\"nofollow\">image classification with Cats vs. Dogs</a></li>\n</ul>\n<p><strong>Additional examples can be found <a href=\"https://github.com/amaiya/ktrain/tree/master/examples\" rel=\"nofollow\">here</a>.</strong></p>\n<h3>Installation</h3>\n<p><em>ktrain</em> currently uses <a href=\"https://www.tensorflow.org/install/pip?lang=python3\" rel=\"nofollow\">TensorFlow 2.1.0</a>, which will be installed automatically when installing <em>ktrain</em>.\nWhile <em>ktrain</em> will probably work with other versions of TensorFlow 2.x, v2.1.0 is the current recommended and tested version.</p>\n<ol>\n<li>\n<p>Make sure pip is up-to-date with: <code>pip3 install -U pip</code></p>\n</li>\n<li>\n<p>Install <em>ktrain</em>: <code>pip3 install ktrain</code></p>\n</li>\n</ol>\n<p><strong>Some things to note:</strong></p>\n<ul>\n<li>Since some <em>ktrain</em> dependencies have not yet been migrated to <code>tf.keras</code> in TensorFlow 2 (or may have other issues),\n<em>ktrain</em> is temporarily using forked versions of some libraries. Specifically, <em>ktrain</em> uses forked versions of the <code>eli5</code> and <code>stellargraph</code> libraries.  If not installed, <em>ktrain</em> will complain  when a method or function needing\neither of these libraries is invoked.\nTo install these forked versions, you can do the following:</li>\n</ul>\n<pre><code>pip3 install git+https://github.com/amaiya/eli5@tfkeras_0_10_1\npip3 install git+https://github.com/amaiya/stellargraph@no_tf_dep_082\n</code></pre>\n<p>This code was tested on Ubuntu 18.04 LTS using TensorFlow 2.1.0</p>\n<h3>How to Cite</h3>\n<p>Please cite the <a href=\"https://arxiv.org/abs/2004.10703\" rel=\"nofollow\">following paper</a> when using <strong>ktrain</strong>:</p>\n<pre><code>@misc{maiya2020ktrain,\n    title={ktrain: A Low-Code Library for Augmented Machine Learning},\n    author={Arun S. Maiya},\n    year={2020},\n    eprint={2004.10703},\n    archivePrefix={arXiv},\n    primaryClass={cs.LG}\n}\n</code></pre>\n\n<hr>\n<p><strong>Creator:  <a href=\"http://arun.maiya.net\" rel=\"nofollow\">Arun S. Maiya</a></strong></p>\n<p><strong>Email:</strong> arun [at] maiya [dot] net</p>\n\n          </div>"}, "last_serial": 7182515, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "fff7008e0f075444eef9ff2327e84bdc", "sha256": "f5ef347c79c7fd37ae537e4ef8dd9cf3a279e10d8472fcc12306fa387b13fc41"}, "downloads": -1, "filename": "ktrain-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fff7008e0f075444eef9ff2327e84bdc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36771, "upload_time": "2019-04-10T17:49:59", "upload_time_iso_8601": "2019-04-10T17:49:59.578848Z", "url": "https://files.pythonhosted.org/packages/52/77/692be43c750bf0cd1cc783666a571e52d44bf755abf6c7e4a39f9cd0f0fa/ktrain-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "935ee6ed27d1131a3444f67d519b6c56", "sha256": "92778e82cce4c2519c1c2f5e3c36b39091e6e2fb5c319b44d71e19d8e693acbc"}, "downloads": -1, "filename": "ktrain-0.1.10.tar.gz", "has_sig": false, "md5_digest": "935ee6ed27d1131a3444f67d519b6c56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39007, "upload_time": "2019-08-02T20:58:53", "upload_time_iso_8601": "2019-08-02T20:58:53.715659Z", "url": "https://files.pythonhosted.org/packages/1d/65/676504c29ab332d1b9cc64154dd4bd6edd8dbf85b69544effb0420646ffc/ktrain-0.1.10.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "13298ccb1558a7bdc5ad05be672212dc", "sha256": "c6fde9586964e63c7e31a93396a4b3a948d0ead46691e818ed5a64afff03751a"}, "downloads": -1, "filename": "ktrain-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "13298ccb1558a7bdc5ad05be672212dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47202, "upload_time": "2019-04-10T19:26:45", "upload_time_iso_8601": "2019-04-10T19:26:45.142777Z", "url": "https://files.pythonhosted.org/packages/1c/36/aa1f76377b87ca55d847f8287ee0c38f7060ffa6637533372562e783ba9e/ktrain-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fdcf5e59347bf06c70765fba68a398b", "sha256": "cee4f5b7dab535c5c62e9c3ed59698cf907eae000fc00379f83df86f32194ea8"}, "downloads": -1, "filename": "ktrain-0.1.2.tar.gz", "has_sig": false, "md5_digest": "4fdcf5e59347bf06c70765fba68a398b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37021, "upload_time": "2019-04-10T19:26:46", "upload_time_iso_8601": "2019-04-10T19:26:46.730502Z", "url": "https://files.pythonhosted.org/packages/4c/90/28cf5d0f2aad2cebd63e74d292be22b5a16ff9f915671bf3a38b8998eabf/ktrain-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "9c03d7a0ed6d35695850cf685d7bed27", "sha256": "861719c2436a87fe0843e25b13589261305d7a81663f39eaf6ef39675f0b35d5"}, "downloads": -1, "filename": "ktrain-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9c03d7a0ed6d35695850cf685d7bed27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37026, "upload_time": "2019-04-10T19:34:18", "upload_time_iso_8601": "2019-04-10T19:34:18.684765Z", "url": "https://files.pythonhosted.org/packages/a9/24/95e9dbe3da7e0ec0c3d6f789eee6ae9af89c9077e3137120283feea024bf/ktrain-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "ad0d4cada5cd2bb33964d3440c106982", "sha256": "421ce479dc850846d6cbe239f4387306b77e4a0bc4d01e6017d18015018e8a22"}, "downloads": -1, "filename": "ktrain-0.1.4.tar.gz", "has_sig": false, "md5_digest": "ad0d4cada5cd2bb33964d3440c106982", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36984, "upload_time": "2019-04-11T01:33:00", "upload_time_iso_8601": "2019-04-11T01:33:00.525873Z", "url": "https://files.pythonhosted.org/packages/96/19/63dfddf307069f597abdd6b9c2db464c2bcd461516cd05b6330f1318f5e2/ktrain-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "5fd7454b22b3b290863d029a9bbe3e39", "sha256": "edc9ff1d1dac5fd0181580a989069848f66911c559c47934def515dd14623422"}, "downloads": -1, "filename": "ktrain-0.1.5.tar.gz", "has_sig": false, "md5_digest": "5fd7454b22b3b290863d029a9bbe3e39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38482, "upload_time": "2019-05-01T20:34:50", "upload_time_iso_8601": "2019-05-01T20:34:50.142165Z", "url": "https://files.pythonhosted.org/packages/3f/84/b91f62a23b53771f5e88142f42791de92d737de2f4cf4e7035079b774620/ktrain-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "c728fd7fa87e625c204c777c607247c6", "sha256": "f04b55c44781f1e9ff095129899fddf1670876b91f734118c4262d8c10d9bead"}, "downloads": -1, "filename": "ktrain-0.1.6.tar.gz", "has_sig": false, "md5_digest": "c728fd7fa87e625c204c777c607247c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38589, "upload_time": "2019-05-03T20:23:30", "upload_time_iso_8601": "2019-05-03T20:23:30.816042Z", "url": "https://files.pythonhosted.org/packages/8e/20/f34c45b3156f4b9c9d61d7b6a4527fc40400fb8a3977cb3eba7f1b7a7cdc/ktrain-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "5b4818c2b2756e127e87a4d3b11e6b4f", "sha256": "2ab92ab44454499fa1f34d92cc56598e77368c9c405bd426683ae217b4445421"}, "downloads": -1, "filename": "ktrain-0.1.7.tar.gz", "has_sig": false, "md5_digest": "5b4818c2b2756e127e87a4d3b11e6b4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38964, "upload_time": "2019-05-24T20:22:06", "upload_time_iso_8601": "2019-05-24T20:22:06.520603Z", "url": "https://files.pythonhosted.org/packages/7b/4e/a16a15732580c2c84710ae6ce5aeed620addee870cb95aae55678c0fdb62/ktrain-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "cb167b0082a551a8988a44742cf8dd7f", "sha256": "e8c0056295fc0bde1e721e3c73a4120e63a0bc9583b5a23e150284f8d1bd6474"}, "downloads": -1, "filename": "ktrain-0.1.8.tar.gz", "has_sig": false, "md5_digest": "cb167b0082a551a8988a44742cf8dd7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39019, "upload_time": "2019-06-05T02:22:43", "upload_time_iso_8601": "2019-06-05T02:22:43.951198Z", "url": "https://files.pythonhosted.org/packages/59/64/645252e81cec1743f86c65f81636213af107a96e30c338ad8d9fde38e4fd/ktrain-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "9cd618db36241379ee9c2787526fcc12", "sha256": "8c69f4ebc5ef8ed9299fd089c2700ad15a7ba5e678eae8e15611d166bcfc9879"}, "downloads": -1, "filename": "ktrain-0.1.9.tar.gz", "has_sig": false, "md5_digest": "9cd618db36241379ee9c2787526fcc12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39046, "upload_time": "2019-08-01T21:15:23", "upload_time_iso_8601": "2019-08-01T21:15:23.453023Z", "url": "https://files.pythonhosted.org/packages/9f/bc/620b00ee130ea564528e413815ef9c6be4741444feadec597d66569fc322/ktrain-0.1.9.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "e684832a23a74010c4bece201af40000", "sha256": "e487343e5edb8bb09f0bd37197561ad3a75997c7b5c2d21c7cfb9609c7b2bf23"}, "downloads": -1, "filename": "ktrain-0.10.0.tar.gz", "has_sig": false, "md5_digest": "e684832a23a74010c4bece201af40000", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25180431, "upload_time": "2020-03-03T21:46:13", "upload_time_iso_8601": "2020-03-03T21:46:13.897579Z", "url": "https://files.pythonhosted.org/packages/b0/ff/ec5b83cb99c350e55c6feb6760d6dcf4590c4a377d483e99a4fe47837ab6/ktrain-0.10.0.tar.gz", "yanked": false}], "0.10.0b0": [{"comment_text": "", "digests": {"md5": "34dce67a464e8ba87eee1f46740fb081", "sha256": "2a9c52a7d06efd4602c78faabcc6276cb0110a1e825e9f4d763bb3d5ecf69d37"}, "downloads": -1, "filename": "ktrain-0.10.0b0.tar.gz", "has_sig": false, "md5_digest": "34dce67a464e8ba87eee1f46740fb081", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 109458, "upload_time": "2020-03-02T23:17:21", "upload_time_iso_8601": "2020-03-02T23:17:21.408075Z", "url": "https://files.pythonhosted.org/packages/24/8e/b64202f84760ea0ca15ff17a1017f767571f0583b3ea2048fc0c52531ea3/ktrain-0.10.0b0.tar.gz", "yanked": false}], "0.10.0b1": [{"comment_text": "", "digests": {"md5": "7a02ca37a21262493e41cda56ed5dda8", "sha256": "8e0f15c81be3ad0cc32a21217aaffca37f4a189b8cd8c95979473667d5be85a9"}, "downloads": -1, "filename": "ktrain-0.10.0b1.tar.gz", "has_sig": false, "md5_digest": "7a02ca37a21262493e41cda56ed5dda8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25180296, "upload_time": "2020-03-02T23:27:36", "upload_time_iso_8601": "2020-03-02T23:27:36.682399Z", "url": "https://files.pythonhosted.org/packages/dc/eb/6199ee781b6302345df01c74d161dc2f8864f67ae1b211db67c3f6bf4720/ktrain-0.10.0b1.tar.gz", "yanked": false}], "0.10.0b2": [{"comment_text": "", "digests": {"md5": "11358172e21f1b876bf608e6850285c7", "sha256": "ce82770e42206e09f82a22e2834e98c89d16c3c3067f7704f2e4762e96734d34"}, "downloads": -1, "filename": "ktrain-0.10.0b2.tar.gz", "has_sig": false, "md5_digest": "11358172e21f1b876bf608e6850285c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25180324, "upload_time": "2020-03-03T03:06:59", "upload_time_iso_8601": "2020-03-03T03:06:59.405856Z", "url": "https://files.pythonhosted.org/packages/53/84/a41668ebf13c95ea140ca3dc245e099cb8eb6bbfde244faa102612357938/ktrain-0.10.0b2.tar.gz", "yanked": false}], "0.10.1": [{"comment_text": "", "digests": {"md5": "62101486fa6ba94c1dc659b0988a503a", "sha256": "156e19f95a4edc31cb05687b019c68f7631d584aeabb0cbdca09a38fb917d60b"}, "downloads": -1, "filename": "ktrain-0.10.1.tar.gz", "has_sig": false, "md5_digest": "62101486fa6ba94c1dc659b0988a503a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25180634, "upload_time": "2020-03-04T23:12:14", "upload_time_iso_8601": "2020-03-04T23:12:14.989701Z", "url": "https://files.pythonhosted.org/packages/b2/ba/ad440774c3377d24c33a87df26cfa5e0572e49a626062c5243306a5ecaaf/ktrain-0.10.1.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "e2fac277aa584e67c72ee6aeec10cc89", "sha256": "978a2fbb3e935646a9e2fa19231e8f25f0cde7a085b1fbde7ac0d1d6343bea92"}, "downloads": -1, "filename": "ktrain-0.11.0.tar.gz", "has_sig": false, "md5_digest": "e2fac277aa584e67c72ee6aeec10cc89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25185060, "upload_time": "2020-03-18T12:23:53", "upload_time_iso_8601": "2020-03-18T12:23:53.829939Z", "url": "https://files.pythonhosted.org/packages/87/ab/3237d2c6f5be7b5771e46816dec72d699d6e6ed1fdd3e45742362c2a0413/ktrain-0.11.0.tar.gz", "yanked": false}], "0.11.1": [{"comment_text": "", "digests": {"md5": "7700931bd765e6b03478ff5bc2925c16", "sha256": "77e169fbfa2aab4f14e9b5296857739d051803f4103207c0a977845477805277"}, "downloads": -1, "filename": "ktrain-0.11.1.tar.gz", "has_sig": false, "md5_digest": "7700931bd765e6b03478ff5bc2925c16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25185272, "upload_time": "2020-03-18T20:44:53", "upload_time_iso_8601": "2020-03-18T20:44:53.948115Z", "url": "https://files.pythonhosted.org/packages/1d/6a/0cd6b3342efce2db58315c91c0b3f19f182922cb0a73cce8dbd25a76bd6f/ktrain-0.11.1.tar.gz", "yanked": false}], "0.11.2": [{"comment_text": "", "digests": {"md5": "72f4a3d33964ea84283c6e02d5303628", "sha256": "da2525dcf8e01826b452bac265c73ddb567ed50b66fea10ac5da0bc521af9100"}, "downloads": -1, "filename": "ktrain-0.11.2.tar.gz", "has_sig": false, "md5_digest": "72f4a3d33964ea84283c6e02d5303628", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25185267, "upload_time": "2020-03-18T20:55:30", "upload_time_iso_8601": "2020-03-18T20:55:30.699473Z", "url": "https://files.pythonhosted.org/packages/b9/0d/e826d83aec631026672a689bec933abd6852e1e82e002af44e3549133ff7/ktrain-0.11.2.tar.gz", "yanked": false}], "0.11.3": [{"comment_text": "", "digests": {"md5": "6683830420148b02a62a90b952f8df42", "sha256": "8acccc75f337940fa292665a93efa7a0cc38d221ebb09dd2e4b9154ef95e5502"}, "downloads": -1, "filename": "ktrain-0.11.3.tar.gz", "has_sig": false, "md5_digest": "6683830420148b02a62a90b952f8df42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25185283, "upload_time": "2020-03-18T21:46:51", "upload_time_iso_8601": "2020-03-18T21:46:51.533031Z", "url": "https://files.pythonhosted.org/packages/19/6e/14ea6c89105cc175e28c9283b84f8e2f1f11e0745e1f1f4904e733b06239/ktrain-0.11.3.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "c105a8ce0b8ca9c7563cc90a3b7099ef", "sha256": "a4374b07aebd9e0e6042edf5f54bf83f1f8eb97de014bb7426e1605805ad924e"}, "downloads": -1, "filename": "ktrain-0.12.0.tar.gz", "has_sig": false, "md5_digest": "c105a8ce0b8ca9c7563cc90a3b7099ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25198722, "upload_time": "2020-03-30T19:06:49", "upload_time_iso_8601": "2020-03-30T19:06:49.869937Z", "url": "https://files.pythonhosted.org/packages/72/16/8987e78b04198aea7a881a39d2adafa04ea92561172c9eceda94a5c3a0fb/ktrain-0.12.0.tar.gz", "yanked": false}], "0.12.1": [{"comment_text": "", "digests": {"md5": "5d7c937d1b4633f7193fe8667291dc17", "sha256": "bebd6d378be821e3e7808058629500f526c0801c5eb1a0e2be3d4b537b34b9c0"}, "downloads": -1, "filename": "ktrain-0.12.1.tar.gz", "has_sig": false, "md5_digest": "5d7c937d1b4633f7193fe8667291dc17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25207804, "upload_time": "2020-04-01T13:27:43", "upload_time_iso_8601": "2020-04-01T13:27:43.743016Z", "url": "https://files.pythonhosted.org/packages/23/5d/2a28a7e1f75764e62fbfc2f5edec2e327da28644e32bb3ea48dd788297a1/ktrain-0.12.1.tar.gz", "yanked": false}], "0.12.2": [{"comment_text": "", "digests": {"md5": "cf3ad2f63edcfec421e87c163d425117", "sha256": "2bca65efbaa42049daeb4ccc97e9b2da3e08c88fd7415ff5b7530024b5d1f6a1"}, "downloads": -1, "filename": "ktrain-0.12.2.tar.gz", "has_sig": false, "md5_digest": "cf3ad2f63edcfec421e87c163d425117", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25207785, "upload_time": "2020-04-01T21:05:05", "upload_time_iso_8601": "2020-04-01T21:05:05.276488Z", "url": "https://files.pythonhosted.org/packages/b0/f9/14d97b59f061176756ddd9a7027b57b4caf0e2b5ecb197957d166e17abef/ktrain-0.12.2.tar.gz", "yanked": false}], "0.12.3": [{"comment_text": "", "digests": {"md5": "2a85dcd7debdd58e5a1d1cdca46821aa", "sha256": "d7b48b15629bd9573c05692fb83159d1befa555da9aa41530f204f1d5be95fbd"}, "downloads": -1, "filename": "ktrain-0.12.3.tar.gz", "has_sig": false, "md5_digest": "2a85dcd7debdd58e5a1d1cdca46821aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25208030, "upload_time": "2020-04-02T17:42:45", "upload_time_iso_8601": "2020-04-02T17:42:45.525886Z", "url": "https://files.pythonhosted.org/packages/6b/75/66f06ddf8b4589fd5d480a0274fd6c228923cd4d9feda9da6667656af00e/ktrain-0.12.3.tar.gz", "yanked": false}], "0.13.0": [{"comment_text": "", "digests": {"md5": "eb6c2d86bf85fbdebecbc877057884e4", "sha256": "30d24a1816ea2d911a260ec91329743aa43ea43b95a4d9c1fb98585927b5c233"}, "downloads": -1, "filename": "ktrain-0.13.0.tar.gz", "has_sig": false, "md5_digest": "eb6c2d86bf85fbdebecbc877057884e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25215773, "upload_time": "2020-04-09T12:06:06", "upload_time_iso_8601": "2020-04-09T12:06:06.180157Z", "url": "https://files.pythonhosted.org/packages/2d/3a/bd62c884ce318e060d82bf9641c66bdfdee1f6455774d915dd5552ee0cb3/ktrain-0.13.0.tar.gz", "yanked": false}], "0.13.1": [{"comment_text": "", "digests": {"md5": "b2d69383b7a21959f3967cd877d18cea", "sha256": "65bebe3b3a2a20e3c2cc93b7c652f25dd819a31438a445ef859cfbb25c0c5626"}, "downloads": -1, "filename": "ktrain-0.13.1.tar.gz", "has_sig": false, "md5_digest": "b2d69383b7a21959f3967cd877d18cea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25216667, "upload_time": "2020-04-09T15:06:52", "upload_time_iso_8601": "2020-04-09T15:06:52.300653Z", "url": "https://files.pythonhosted.org/packages/aa/60/aa5ef79942faf52578968eb8f6d02beeee3164db03c3491368429aeedaec/ktrain-0.13.1.tar.gz", "yanked": false}], "0.13.2": [{"comment_text": "", "digests": {"md5": "e20112ff3e52db074901f4297db75184", "sha256": "3f15ba4d0db04755c21f07e7d94bec401f0cde915c9e7cce88d974fbfa5a9ff6"}, "downloads": -1, "filename": "ktrain-0.13.2.tar.gz", "has_sig": false, "md5_digest": "e20112ff3e52db074901f4297db75184", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25216739, "upload_time": "2020-04-09T20:24:46", "upload_time_iso_8601": "2020-04-09T20:24:46.593244Z", "url": "https://files.pythonhosted.org/packages/99/26/b66d9a4e27ca2854ee7f2c66084f90b7bf7e27e46b7611be52f2fe9ae5dc/ktrain-0.13.2.tar.gz", "yanked": false}], "0.14.0": [{"comment_text": "", "digests": {"md5": "b756de7e3ffd065cbcf9a303c33f9d57", "sha256": "80d668af4a3548d7799fcef74ea97a77b538693a769d0950f6886d462c0bc7cb"}, "downloads": -1, "filename": "ktrain-0.14.0.tar.gz", "has_sig": false, "md5_digest": "b756de7e3ffd065cbcf9a303c33f9d57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25220690, "upload_time": "2020-04-15T17:48:11", "upload_time_iso_8601": "2020-04-15T17:48:11.912948Z", "url": "https://files.pythonhosted.org/packages/08/a3/8f77e2893067b6ca972237a8d2524a15085b77344253379962f497ad9753/ktrain-0.14.0.tar.gz", "yanked": false}], "0.14.1": [{"comment_text": "", "digests": {"md5": "3992437392d0939ae17582d89b628d6d", "sha256": "63c5dff4f7af46dc4a6abf35d972a8151a5d017bdc14e060a03ff24180e5504e"}, "downloads": -1, "filename": "ktrain-0.14.1.tar.gz", "has_sig": false, "md5_digest": "3992437392d0939ae17582d89b628d6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25220707, "upload_time": "2020-04-17T18:09:13", "upload_time_iso_8601": "2020-04-17T18:09:13.249973Z", "url": "https://files.pythonhosted.org/packages/64/b2/2af56c8344c8fd896ae06e07ebc647743a11a57f117058d0b9a2f1b66065/ktrain-0.14.1.tar.gz", "yanked": false}], "0.14.2": [{"comment_text": "", "digests": {"md5": "c0b21102270c6e7400a5ee43799e5803", "sha256": "1045ece2e690b40795c36a9f7c5de2957296385ed044290436a3c77a0ca8cd7e"}, "downloads": -1, "filename": "ktrain-0.14.2.tar.gz", "has_sig": false, "md5_digest": "c0b21102270c6e7400a5ee43799e5803", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25221106, "upload_time": "2020-04-21T22:32:09", "upload_time_iso_8601": "2020-04-21T22:32:09.038516Z", "url": "https://files.pythonhosted.org/packages/00/29/e36d22c6adb04ae6ce68e743755f8c67e1d5e4588eded16910e3518f9b3d/ktrain-0.14.2.tar.gz", "yanked": false}], "0.14.3": [{"comment_text": "", "digests": {"md5": "975f91f61bb9fa472d5e5ee72523a22a", "sha256": "c98a111d86da91724ebc21b7b458a428bc590c68bc094279d75a9b13a790b2e3"}, "downloads": -1, "filename": "ktrain-0.14.3.tar.gz", "has_sig": false, "md5_digest": "975f91f61bb9fa472d5e5ee72523a22a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25221528, "upload_time": "2020-04-27T13:11:30", "upload_time_iso_8601": "2020-04-27T13:11:30.847714Z", "url": "https://files.pythonhosted.org/packages/2c/95/f1189dae6461323e043cbe5a3a873208c6f91cde6c7faaf7735f0c0e2b03/ktrain-0.14.3.tar.gz", "yanked": false}], "0.14.4": [{"comment_text": "", "digests": {"md5": "2cbe56c85c74464c291d0c7f8a8f2349", "sha256": "309843a6bac875d6bf156d95b507e97eb781a43e0921485c48098888ecbb2581"}, "downloads": -1, "filename": "ktrain-0.14.4.tar.gz", "has_sig": false, "md5_digest": "2cbe56c85c74464c291d0c7f8a8f2349", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25217766, "upload_time": "2020-04-30T21:32:48", "upload_time_iso_8601": "2020-04-30T21:32:48.159199Z", "url": "https://files.pythonhosted.org/packages/b2/ed/111386d1577cc4c239c9733dd6894a5093a9f257faf51f6ae0ec54eb4570/ktrain-0.14.4.tar.gz", "yanked": false}], "0.14.5": [{"comment_text": "", "digests": {"md5": "57f642f4e6d4a175cc9e015524c72341", "sha256": "9590f26391937941a369a91ad6c4b53b3deb84465ecd2616593a5ee738f28051"}, "downloads": -1, "filename": "ktrain-0.14.5.tar.gz", "has_sig": false, "md5_digest": "57f642f4e6d4a175cc9e015524c72341", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25217771, "upload_time": "2020-05-03T15:12:29", "upload_time_iso_8601": "2020-05-03T15:12:29.264272Z", "url": "https://files.pythonhosted.org/packages/aa/1a/b3d08d0981db20120351839b1d3f7a5fd2737294c8f0bc96edfbbc48f409/ktrain-0.14.5.tar.gz", "yanked": false}], "0.14.6": [{"comment_text": "", "digests": {"md5": "f5d2f4b1732b81720de9ed300f48ad77", "sha256": "161810689238e6c41a65c34efa6a30fdddd0b913d2b123df23e49db103259220"}, "downloads": -1, "filename": "ktrain-0.14.6.tar.gz", "has_sig": false, "md5_digest": "f5d2f4b1732b81720de9ed300f48ad77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25218175, "upload_time": "2020-05-06T19:17:30", "upload_time_iso_8601": "2020-05-06T19:17:30.419097Z", "url": "https://files.pythonhosted.org/packages/8c/2e/132382bbc3f1f1539b40975cd7b6d56c057de47d58f3fae597d0f9114678/ktrain-0.14.6.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d54c6c9ec37056bddfc31c3af07fa85d", "sha256": "98e5902d5aabe422c888e855c3397aca743d9a47dcfe5e48577132b90050e612"}, "downloads": -1, "filename": "ktrain-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d54c6c9ec37056bddfc31c3af07fa85d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42938, "upload_time": "2019-08-13T21:04:25", "upload_time_iso_8601": "2019-08-13T21:04:25.113574Z", "url": "https://files.pythonhosted.org/packages/4e/a1/ac9bf2fbe4d098df77143d36f672b7de23c57349fa90ef5e58b313a92130/ktrain-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "1964947a739bf37db2719a9253c89ef9", "sha256": "9e30a34c6e52f816571f2ae24621e0238cf3d1e28a00258068859d59ba8acc52"}, "downloads": -1, "filename": "ktrain-0.2.1.tar.gz", "has_sig": false, "md5_digest": "1964947a739bf37db2719a9253c89ef9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42988, "upload_time": "2019-08-15T20:00:09", "upload_time_iso_8601": "2019-08-15T20:00:09.957106Z", "url": "https://files.pythonhosted.org/packages/69/a8/3f263578d44b7899760bacb7b38fd031363e3f3407fd46b0123896ca5300/ktrain-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "9ac5eb0fe64cc89e2694a8138f84a189", "sha256": "e78a10574faee4822b72fccc9285f533cbc72e5dfcabb51576111f34be477ff3"}, "downloads": -1, "filename": "ktrain-0.2.2.tar.gz", "has_sig": false, "md5_digest": "9ac5eb0fe64cc89e2694a8138f84a189", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43030, "upload_time": "2019-08-16T14:32:41", "upload_time_iso_8601": "2019-08-16T14:32:41.786387Z", "url": "https://files.pythonhosted.org/packages/83/ce/f8dd172bec1486c02f20cc5099055fb2e8850fc414eb7bc922f29e4e13ec/ktrain-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "fbff4378f5614001f31c164ec7933229", "sha256": "9dc4d0ca77ec610d551e404bb4fa3f8ac3445ed032434ca1f37a122a524a59bf"}, "downloads": -1, "filename": "ktrain-0.2.3.tar.gz", "has_sig": false, "md5_digest": "fbff4378f5614001f31c164ec7933229", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43142, "upload_time": "2019-08-19T02:43:04", "upload_time_iso_8601": "2019-08-19T02:43:04.463174Z", "url": "https://files.pythonhosted.org/packages/7b/52/2dc508adb37613ede877e6daa636bb512bcd42830d62bfacc16401b2ef78/ktrain-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "af5eb2a4ac310066e4fc19829f9b9825", "sha256": "9fb34a2dc77d2bc2b2a85a0bbc37c47ca2832f29ec1e7db18f18b48e7c700c20"}, "downloads": -1, "filename": "ktrain-0.2.4.tar.gz", "has_sig": false, "md5_digest": "af5eb2a4ac310066e4fc19829f9b9825", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43258, "upload_time": "2019-08-20T20:06:11", "upload_time_iso_8601": "2019-08-20T20:06:11.384675Z", "url": "https://files.pythonhosted.org/packages/a7/9e/ce908a5ca38207176ea97093fa22b9416382750da5b6a0b613a0f7e7e5cc/ktrain-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "91fda7f9d3c5e34beb9b5fe3dbedebc5", "sha256": "79c1e14f64127766e04ad5b4a53e3f61c20cfd2b59779e8341aa46ea4e534599"}, "downloads": -1, "filename": "ktrain-0.2.5.tar.gz", "has_sig": false, "md5_digest": "91fda7f9d3c5e34beb9b5fe3dbedebc5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44515, "upload_time": "2019-08-27T18:58:44", "upload_time_iso_8601": "2019-08-27T18:58:44.828740Z", "url": "https://files.pythonhosted.org/packages/7e/d4/da5dbc568c1d938e4de5305f47ed621f72c0dda7caae511ca03abf9a03f5/ktrain-0.2.5.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "1c36a98f12d46dee2bb279aae2680f4d", "sha256": "0bccd6179e5293e10e6558c399a0368b2c1811cbdb5ce780acfd838834361b68"}, "downloads": -1, "filename": "ktrain-0.3.0.tar.gz", "has_sig": false, "md5_digest": "1c36a98f12d46dee2bb279aae2680f4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65873, "upload_time": "2019-09-18T00:06:01", "upload_time_iso_8601": "2019-09-18T00:06:01.755875Z", "url": "https://files.pythonhosted.org/packages/bc/c5/e3b4db6afbfcda4d516631bb2501815e8e60aedca45fec4dd8d489343315/ktrain-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "422c0bbcbc7b332d169eb77699751b36", "sha256": "d0953c64d284eff7e1a94d85bd303e55ab234d21e0bdbf96bf174ccce6a1ec8b"}, "downloads": -1, "filename": "ktrain-0.3.1.tar.gz", "has_sig": false, "md5_digest": "422c0bbcbc7b332d169eb77699751b36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75709, "upload_time": "2019-09-19T20:29:05", "upload_time_iso_8601": "2019-09-19T20:29:05.947209Z", "url": "https://files.pythonhosted.org/packages/10/a1/fd460d428228e311f5c4cc173c04761c06cb2ce6c83949737275a39756fa/ktrain-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "c4c3801dcfbc87513c5581883ce9b928", "sha256": "3d1fae9d8d3f101ed8d1c36c8123c906a24f2757ec6e494f7774e609a7814519"}, "downloads": -1, "filename": "ktrain-0.4.0.tar.gz", "has_sig": false, "md5_digest": "c4c3801dcfbc87513c5581883ce9b928", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74062, "upload_time": "2019-09-30T21:23:59", "upload_time_iso_8601": "2019-09-30T21:23:59.818958Z", "url": "https://files.pythonhosted.org/packages/bf/1d/8e1f39faa36bfa1da72926517548da2c6a0592744b3903365b76e53381e7/ktrain-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "f9fc194d46d28e73a6264fd663e8706f", "sha256": "63fb071fcf65132483fcef794548cf25447f57c3ba20536205ca8a023f12dde6"}, "downloads": -1, "filename": "ktrain-0.4.1.tar.gz", "has_sig": false, "md5_digest": "f9fc194d46d28e73a6264fd663e8706f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74166, "upload_time": "2019-10-01T15:26:14", "upload_time_iso_8601": "2019-10-01T15:26:14.702882Z", "url": "https://files.pythonhosted.org/packages/a3/b3/f8c6f7bef55f21c07b869096ad6a936a9df8bb6414c8c45f39b4b6e115bf/ktrain-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "b58c84bdc73f32f19b29e73982452716", "sha256": "0dccf2fb206280982f713a7c31f5fddf0c18f5a182298318cbcd34406608e7b2"}, "downloads": -1, "filename": "ktrain-0.4.2.tar.gz", "has_sig": false, "md5_digest": "b58c84bdc73f32f19b29e73982452716", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74383, "upload_time": "2019-10-01T20:06:57", "upload_time_iso_8601": "2019-10-01T20:06:57.912102Z", "url": "https://files.pythonhosted.org/packages/e3/a0/c93436b41e825a614c2a04fcbf73189d60e0a08962249b21e91928dab5b5/ktrain-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "ac523c9434485470d138e0d08a6b8bc7", "sha256": "920f5e48c3b5f1b4a5f3858efe8db1a114020496a78079faa648276005fd7ca9"}, "downloads": -1, "filename": "ktrain-0.4.3.tar.gz", "has_sig": false, "md5_digest": "ac523c9434485470d138e0d08a6b8bc7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77227, "upload_time": "2019-10-15T01:41:06", "upload_time_iso_8601": "2019-10-15T01:41:06.582320Z", "url": "https://files.pythonhosted.org/packages/8e/4d/bd0c2832d3913e823b7dd6cb2ed2512e409499fd7e916a199949fe4627ad/ktrain-0.4.3.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "c959f834723cbe2fc3a5592175f9f8a0", "sha256": "4130abd3513227de799c07905fabcde1cbd4374830c298750220f1fe7aae926b"}, "downloads": -1, "filename": "ktrain-0.5.0.tar.gz", "has_sig": false, "md5_digest": "c959f834723cbe2fc3a5592175f9f8a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78068, "upload_time": "2019-10-16T17:31:30", "upload_time_iso_8601": "2019-10-16T17:31:30.395121Z", "url": "https://files.pythonhosted.org/packages/74/20/d88cc655ca9ad2c280abf33e1513d6137eec38c12a803e73f9d1de6a58ef/ktrain-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "d9f94dd9d4e3836436c3be63744f4376", "sha256": "cb4aec329286aafe75a5a56d95068692b641a89d3ed8c1f728c24e5c9cb82052"}, "downloads": -1, "filename": "ktrain-0.5.1.tar.gz", "has_sig": false, "md5_digest": "d9f94dd9d4e3836436c3be63744f4376", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 163992, "upload_time": "2019-10-17T23:18:31", "upload_time_iso_8601": "2019-10-17T23:18:31.492914Z", "url": "https://files.pythonhosted.org/packages/90/32/0e9617edffdb631ad6b7ac142b0d4feb8157a8fce8f326c4aa7660a1ac89/ktrain-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "15bef1f07fb6bea97e2b8ecb0caea9fd", "sha256": "1e6f5a8e29e80897b56383ec10a4fea515e06bf2e5c6e33331c0dc15c50b189c"}, "downloads": -1, "filename": "ktrain-0.5.2.tar.gz", "has_sig": false, "md5_digest": "15bef1f07fb6bea97e2b8ecb0caea9fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 164013, "upload_time": "2019-10-20T17:32:11", "upload_time_iso_8601": "2019-10-20T17:32:11.365105Z", "url": "https://files.pythonhosted.org/packages/bc/48/e489b362ea2f66694cadb52475d9f9422c4262f8516f3fdcd3eeaa1ab3ef/ktrain-0.5.2.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "388b62185a013122b554e6cc2f47fd0d", "sha256": "3e88b1e058771b8015d7326925cc876c24e41e9319c737ce832bb82a42ffb107"}, "downloads": -1, "filename": "ktrain-0.6.0.tar.gz", "has_sig": false, "md5_digest": "388b62185a013122b554e6cc2f47fd0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 173236, "upload_time": "2019-11-12T20:31:32", "upload_time_iso_8601": "2019-11-12T20:31:32.995250Z", "url": "https://files.pythonhosted.org/packages/08/dd/74108dc5359663524bb340f9ff7b10f18ab3d6f932fc0456e9291aff1e74/ktrain-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "4c6ef014cde2269bb59442fa369f1328", "sha256": "2f81be54c190f629a2cdb97f2776a6b8e47ccc8a01355be5562a9d37e3198384"}, "downloads": -1, "filename": "ktrain-0.6.1.tar.gz", "has_sig": false, "md5_digest": "4c6ef014cde2269bb59442fa369f1328", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 173288, "upload_time": "2019-11-16T22:57:14", "upload_time_iso_8601": "2019-11-16T22:57:14.228587Z", "url": "https://files.pythonhosted.org/packages/e1/dc/240c8fe1f52d265a577bd15822f8644087a59079b75f8fe15a601314003d/ktrain-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "467fd81b1b0f6d7d7c97c3aace70a697", "sha256": "7f3db0d42d2bca820e0121303ea160983e43de254132daa88bfaf130567bfecf"}, "downloads": -1, "filename": "ktrain-0.6.2.tar.gz", "has_sig": false, "md5_digest": "467fd81b1b0f6d7d7c97c3aace70a697", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 173448, "upload_time": "2019-12-02T18:54:41", "upload_time_iso_8601": "2019-12-02T18:54:41.091383Z", "url": "https://files.pythonhosted.org/packages/1c/0c/21c698b7986257248d2595d4e0b5368ac9cc1026cb88d8965b62cc551c2b/ktrain-0.6.2.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "0655ddab92b0e671a6dc56be7c4d1cfb", "sha256": "2f9f53d189c28b63f6bf8896b360bca1a0ac246967e1dbb705831c24c6b2fbda"}, "downloads": -1, "filename": "ktrain-0.7.0.tar.gz", "has_sig": false, "md5_digest": "0655ddab92b0e671a6dc56be7c4d1cfb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88243, "upload_time": "2019-12-10T21:57:12", "upload_time_iso_8601": "2019-12-10T21:57:12.429817Z", "url": "https://files.pythonhosted.org/packages/af/99/5d8598c5c105312821993572d9712a355f344b1898b75aad9b6891ee08a9/ktrain-0.7.0.tar.gz", "yanked": false}], "0.7.0b0": [{"comment_text": "", "digests": {"md5": "199564651078eb7daf9fbad0fe72cb09", "sha256": "57b99c184918a3a2ec5cced95c86906960f35794974200ecfbceb0742ee2ef09"}, "downloads": -1, "filename": "ktrain-0.7.0b0.tar.gz", "has_sig": false, "md5_digest": "199564651078eb7daf9fbad0fe72cb09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 174380, "upload_time": "2019-12-09T22:01:47", "upload_time_iso_8601": "2019-12-09T22:01:47.352250Z", "url": "https://files.pythonhosted.org/packages/31/e3/0040aa93274c15dfe2298cf3f18028172687defc4300ed1f78a6896f5ed1/ktrain-0.7.0b0.tar.gz", "yanked": false}], "0.7.0b1": [{"comment_text": "", "digests": {"md5": "e217c6914d549249f9322cda994e546d", "sha256": "43c12512e605f28051f570755f92db2adbadc2301771e70b72ae415d11c4b3c3"}, "downloads": -1, "filename": "ktrain-0.7.0b1.tar.gz", "has_sig": false, "md5_digest": "e217c6914d549249f9322cda994e546d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 178122, "upload_time": "2019-12-09T22:23:10", "upload_time_iso_8601": "2019-12-09T22:23:10.946330Z", "url": "https://files.pythonhosted.org/packages/0e/26/eabea0f0ca1c48bf2e1cdd3e0e8b1badbc28ff560dea6b020e313dc13818/ktrain-0.7.0b1.tar.gz", "yanked": false}], "0.7.0b10": [{"comment_text": "", "digests": {"md5": "aab899e026b34ff15d0366c5a5b8729c", "sha256": "57a6d3717fedfb32ea91a03a80487431164a627b9f478a66e0671bb90fc09d21"}, "downloads": -1, "filename": "ktrain-0.7.0b10.tar.gz", "has_sig": false, "md5_digest": "aab899e026b34ff15d0366c5a5b8729c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 174610, "upload_time": "2019-12-10T19:45:55", "upload_time_iso_8601": "2019-12-10T19:45:55.992554Z", "url": "https://files.pythonhosted.org/packages/e8/4c/54cb63c3820901a2142b19aa930930dc804cfd9b11db37287da76fac903b/ktrain-0.7.0b10.tar.gz", "yanked": false}], "0.7.0b11": [{"comment_text": "", "digests": {"md5": "daf9b6bc7db8d2444ad295149216d0aa", "sha256": "0c332e2244bdf0ba9f2f4d4966dce5cd94a85e233c2e6a95653596bdef64a64f"}, "downloads": -1, "filename": "ktrain-0.7.0b11.tar.gz", "has_sig": false, "md5_digest": "daf9b6bc7db8d2444ad295149216d0aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 174681, "upload_time": "2019-12-10T20:19:58", "upload_time_iso_8601": "2019-12-10T20:19:58.244470Z", "url": "https://files.pythonhosted.org/packages/2d/c7/83b7a790c95d7e10a5073b3014d28be83eb87c73151c776ce82d8c2d39f2/ktrain-0.7.0b11.tar.gz", "yanked": false}], "0.7.0b2": [{"comment_text": "", "digests": {"md5": "0b11681478081d86cb1d8f3719504cb0", "sha256": "1fdbe5c81ab5543408b6a65b8a0badba15926fd789c2a83eb46fa37caf6f84fc"}, "downloads": -1, "filename": "ktrain-0.7.0b2.tar.gz", "has_sig": false, "md5_digest": "0b11681478081d86cb1d8f3719504cb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 174457, "upload_time": "2019-12-09T22:40:12", "upload_time_iso_8601": "2019-12-09T22:40:12.976160Z", "url": "https://files.pythonhosted.org/packages/0f/a8/ca98459da26a4808064843eec302a1379e7fb5febc2302c51725b38c5deb/ktrain-0.7.0b2.tar.gz", "yanked": false}], "0.7.0b3": [{"comment_text": "", "digests": {"md5": "2ad58e6269ff611b0a21915abc33f026", "sha256": "64558b75d9ebf79ef0421ecd5df03edff932ada9dfe16cd1993e5ac9b2a19bcf"}, "downloads": -1, "filename": "ktrain-0.7.0b3.tar.gz", "has_sig": false, "md5_digest": "2ad58e6269ff611b0a21915abc33f026", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 174454, "upload_time": "2019-12-09T22:55:02", "upload_time_iso_8601": "2019-12-09T22:55:02.498984Z", "url": "https://files.pythonhosted.org/packages/49/24/58e01e01f857b46f9073b6fa9b9529098d7ab75623cdb03b3385c76b0126/ktrain-0.7.0b3.tar.gz", "yanked": false}], "0.7.0b4": [{"comment_text": "", "digests": {"md5": "3b4f6f09e14f225fc92d0c2b10b51334", "sha256": "e779aec3c9eb000bf68ee74db696a977ca15b2c6efbd647abce2d0271fffaced"}, "downloads": -1, "filename": "ktrain-0.7.0b4.tar.gz", "has_sig": false, "md5_digest": "3b4f6f09e14f225fc92d0c2b10b51334", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 174424, "upload_time": "2019-12-09T22:58:50", "upload_time_iso_8601": "2019-12-09T22:58:50.397224Z", "url": "https://files.pythonhosted.org/packages/94/b7/b0fc942922fb5b218a81ae03d515758330f19b52eeff7cc721863e88bdd6/ktrain-0.7.0b4.tar.gz", "yanked": false}], "0.7.0b5": [{"comment_text": "", "digests": {"md5": "d8206885d0faccb42967edf8b0542f66", "sha256": "83ee3dadc3e33d0b0598f5d729882367573ad46f25ea7fb9d1d3fcb080f75f43"}, "downloads": -1, "filename": "ktrain-0.7.0b5.tar.gz", "has_sig": false, "md5_digest": "d8206885d0faccb42967edf8b0542f66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 178252, "upload_time": "2019-12-10T16:13:33", "upload_time_iso_8601": "2019-12-10T16:13:33.154500Z", "url": "https://files.pythonhosted.org/packages/c6/dc/8350dd0630d70ced3d48ce5914fcd0b48e7366abfe364f815e4ba027fbc2/ktrain-0.7.0b5.tar.gz", "yanked": false}], "0.7.0b6": [{"comment_text": "", "digests": {"md5": "3094f3d014be27d0f6bda713a3d890a9", "sha256": "df2b1a6c6f808dddec398d71963a9a32d604f6974dea7ffd70a4d53de677ad72"}, "downloads": -1, "filename": "ktrain-0.7.0b6.tar.gz", "has_sig": false, "md5_digest": "3094f3d014be27d0f6bda713a3d890a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 178244, "upload_time": "2019-12-10T16:21:58", "upload_time_iso_8601": "2019-12-10T16:21:58.119822Z", "url": "https://files.pythonhosted.org/packages/78/e6/6ebad38f483a030d1f709f4dda0a77f93b195a8fd4430fd9dfb68bd4d53c/ktrain-0.7.0b6.tar.gz", "yanked": false}], "0.7.0b7": [{"comment_text": "", "digests": {"md5": "b2e5d16b37ab21242d29f7e0488cd5df", "sha256": "e0ef20609558d84015f34c1e2d0213e2f91b5712cd0a31919de25b2d58db44e2"}, "downloads": -1, "filename": "ktrain-0.7.0b7.tar.gz", "has_sig": false, "md5_digest": "b2e5d16b37ab21242d29f7e0488cd5df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 178244, "upload_time": "2019-12-10T16:35:46", "upload_time_iso_8601": "2019-12-10T16:35:46.794934Z", "url": "https://files.pythonhosted.org/packages/d3/34/dc28bd9dea7b18f6f2e77448064680249af43673e5a30cf76bc0680213e3/ktrain-0.7.0b7.tar.gz", "yanked": false}], "0.7.0b8": [{"comment_text": "", "digests": {"md5": "fb980dfa2105296d45a188cd5fb53436", "sha256": "fe72444b12ea5778d9531e609df629143be3a15cd6286e2fcfd673d5665f83c1"}, "downloads": -1, "filename": "ktrain-0.7.0b8.tar.gz", "has_sig": false, "md5_digest": "fb980dfa2105296d45a188cd5fb53436", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 178254, "upload_time": "2019-12-10T17:12:06", "upload_time_iso_8601": "2019-12-10T17:12:06.968920Z", "url": "https://files.pythonhosted.org/packages/a1/b5/d97e4b4b223e2310b7e8fb0d038ef7a9e15476f557c1606c7a1d1eb42ce4/ktrain-0.7.0b8.tar.gz", "yanked": false}], "0.7.0b9": [{"comment_text": "", "digests": {"md5": "5e2ddc434ce027a1e3cc0a8b907ed808", "sha256": "d36dc34551827a46e8cc855725b629fe9339941e01ce17683e4bf9c28486adff"}, "downloads": -1, "filename": "ktrain-0.7.0b9.tar.gz", "has_sig": false, "md5_digest": "5e2ddc434ce027a1e3cc0a8b907ed808", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 174608, "upload_time": "2019-12-10T19:26:37", "upload_time_iso_8601": "2019-12-10T19:26:37.421074Z", "url": "https://files.pythonhosted.org/packages/a1/52/eadf96be90e2bbb421c11843f58e958f2e41633f69627eafb2c5906730ef/ktrain-0.7.0b9.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "76adedc862f6c0d91fc229e3c66d0b8c", "sha256": "2b2fcdd830d51a2317eb9a46db256f2ee681783146bcf509df5871984c576e9e"}, "downloads": -1, "filename": "ktrain-0.7.1.tar.gz", "has_sig": false, "md5_digest": "76adedc862f6c0d91fc229e3c66d0b8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88813, "upload_time": "2019-12-11T21:59:52", "upload_time_iso_8601": "2019-12-11T21:59:52.932350Z", "url": "https://files.pythonhosted.org/packages/c6/5f/97c4fbf556fd7e8988037aedd4f4983115372fd509833ee8cfce1c240bd9/ktrain-0.7.1.tar.gz", "yanked": false}], "0.7.1b0": [{"comment_text": "", "digests": {"md5": "da2b2fb86ccf3e30932fba62de6b0b62", "sha256": "1006b6b3009df3a21b9756d6b17d5b09c86f80984983858f9320dbdc3ce1861b"}, "downloads": -1, "filename": "ktrain-0.7.1b0.tar.gz", "has_sig": false, "md5_digest": "da2b2fb86ccf3e30932fba62de6b0b62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88501, "upload_time": "2019-12-11T18:01:39", "upload_time_iso_8601": "2019-12-11T18:01:39.498399Z", "url": "https://files.pythonhosted.org/packages/a0/eb/467f3e7132589d3db0ae74b7a9fce7e41365a3c92ca6e4372f994bea35d5/ktrain-0.7.1b0.tar.gz", "yanked": false}], "0.7.1b1": [{"comment_text": "", "digests": {"md5": "6b57950725db8e70d579288c19e02fd1", "sha256": "6a8675bc88209add93ef1592ecfda2b221930a0caaba77168a06f71c4deb52a1"}, "downloads": -1, "filename": "ktrain-0.7.1b1.tar.gz", "has_sig": false, "md5_digest": "6b57950725db8e70d579288c19e02fd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88247, "upload_time": "2019-12-11T18:13:46", "upload_time_iso_8601": "2019-12-11T18:13:46.097818Z", "url": "https://files.pythonhosted.org/packages/64/44/191e87c8b4cd28e7824af490c9b751236ff7b327e84f0bdadfa4545b92e4/ktrain-0.7.1b1.tar.gz", "yanked": false}], "0.7.1b2": [{"comment_text": "", "digests": {"md5": "ca9983523d17855a13be1786653db68d", "sha256": "d94f3cbbd1f9eb39fa4a24980f95e2dff8dd78c00489544214016658d5461432"}, "downloads": -1, "filename": "ktrain-0.7.1b2.tar.gz", "has_sig": false, "md5_digest": "ca9983523d17855a13be1786653db68d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88443, "upload_time": "2019-12-11T18:47:31", "upload_time_iso_8601": "2019-12-11T18:47:31.496054Z", "url": "https://files.pythonhosted.org/packages/b7/d4/7ca588f8de04114af62de450bf0ac78ec1fc4d635ef02ceab5cae51769e2/ktrain-0.7.1b2.tar.gz", "yanked": false}], "0.7.1b3": [{"comment_text": "", "digests": {"md5": "36f415ff7856566949384af0cf55efa6", "sha256": "8677bc6803ad72a232bf734d02940966b192e1d565ee38445263363e5d3410fc"}, "downloads": -1, "filename": "ktrain-0.7.1b3.tar.gz", "has_sig": false, "md5_digest": "36f415ff7856566949384af0cf55efa6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88694, "upload_time": "2019-12-11T20:55:18", "upload_time_iso_8601": "2019-12-11T20:55:18.450144Z", "url": "https://files.pythonhosted.org/packages/a6/f5/1bf295b74d81e306020bee1209b95f8bacdbb4384e74a8ae899a2cbea323/ktrain-0.7.1b3.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "0646ed36de2e87b577732a36c21f9c59", "sha256": "25bc51b1ab498b5d4e562358b15e1c1730645021692f8f7185c9f0c238f5e32b"}, "downloads": -1, "filename": "ktrain-0.7.2.tar.gz", "has_sig": false, "md5_digest": "0646ed36de2e87b577732a36c21f9c59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88838, "upload_time": "2019-12-11T22:09:24", "upload_time_iso_8601": "2019-12-11T22:09:24.796260Z", "url": "https://files.pythonhosted.org/packages/17/40/bb9a34bfd0e8e6f6f763fb3f97b61734b1a868fce66ef7e8ab65a71120de/ktrain-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "d78c926a8eeb022f7049f9ba3963184a", "sha256": "d90641b85cfe8f80141d63ad305397fb1f4ad98172aefb69fe519127ce00a5bf"}, "downloads": -1, "filename": "ktrain-0.7.3.tar.gz", "has_sig": false, "md5_digest": "d78c926a8eeb022f7049f9ba3963184a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89126, "upload_time": "2019-12-31T22:12:11", "upload_time_iso_8601": "2019-12-31T22:12:11.285208Z", "url": "https://files.pythonhosted.org/packages/ce/2e/11a72b91bfd73bbb5ac215870cc8899a1f6df622559e532d7af437f5bc35/ktrain-0.7.3.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "7610e865e42ebd9441b3db8d3a3fc3d6", "sha256": "61e0c0d2fac784d37c0741725f9aadea4d49d8b7f3fecf34d58350dae27d5c52"}, "downloads": -1, "filename": "ktrain-0.8.0.tar.gz", "has_sig": false, "md5_digest": "7610e865e42ebd9441b3db8d3a3fc3d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95596, "upload_time": "2020-01-14T19:56:13", "upload_time_iso_8601": "2020-01-14T19:56:13.848449Z", "url": "https://files.pythonhosted.org/packages/c2/72/65056f76993b48c335f20f0dd7fb1583d14a8b6c07acaa85f940b23878b4/ktrain-0.8.0.tar.gz", "yanked": false}], "0.8.0b0": [{"comment_text": "", "digests": {"md5": "307fab9c1ef509ce0002cb1ed03eb694", "sha256": "42fa264da060964c5ef563013f64bf008785ee3b2b6ab89762eb2bedc937936d"}, "downloads": -1, "filename": "ktrain-0.8.0b0.tar.gz", "has_sig": false, "md5_digest": "307fab9c1ef509ce0002cb1ed03eb694", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95576, "upload_time": "2020-01-13T21:37:23", "upload_time_iso_8601": "2020-01-13T21:37:23.290822Z", "url": "https://files.pythonhosted.org/packages/53/e7/2581ce72eb38a8f58de3bc1785c4b65ce57e12cf938b7a86cc261733ce20/ktrain-0.8.0b0.tar.gz", "yanked": false}], "0.8.0b1": [{"comment_text": "", "digests": {"md5": "a104f5f07ea03559359da12e6eef50ba", "sha256": "c9119d1fc9dea805008ff32cf72188e7c7607ade1ce515f140e713eab90c0a61"}, "downloads": -1, "filename": "ktrain-0.8.0b1.tar.gz", "has_sig": false, "md5_digest": "a104f5f07ea03559359da12e6eef50ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95582, "upload_time": "2020-01-13T21:42:16", "upload_time_iso_8601": "2020-01-13T21:42:16.841627Z", "url": "https://files.pythonhosted.org/packages/06/f7/f182e03e88c74324e979462332cb44d946d22d3adde9ece0c7488a114cb1/ktrain-0.8.0b1.tar.gz", "yanked": false}], "0.8.0b2": [{"comment_text": "", "digests": {"md5": "d888db9f0ad373d5a89f29c0d718fc00", "sha256": "1c174b387095262918ee9574d41270543c0991793ba72d038ac9cb431936128a"}, "downloads": -1, "filename": "ktrain-0.8.0b2.tar.gz", "has_sig": false, "md5_digest": "d888db9f0ad373d5a89f29c0d718fc00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95624, "upload_time": "2020-01-13T22:19:55", "upload_time_iso_8601": "2020-01-13T22:19:55.117633Z", "url": "https://files.pythonhosted.org/packages/7a/5d/4df54ba3f2395c965427a4a44d584c1a07ed7137438f3000acc7b1b3e781/ktrain-0.8.0b2.tar.gz", "yanked": false}], "0.8.0b3": [{"comment_text": "", "digests": {"md5": "d67fff7de0085666cdda894f2e352547", "sha256": "422f964b1760bdf51d8188c50d4c2bb46f87b532a25b15a3c5a8831d7acc329c"}, "downloads": -1, "filename": "ktrain-0.8.0b3.tar.gz", "has_sig": false, "md5_digest": "d67fff7de0085666cdda894f2e352547", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95622, "upload_time": "2020-01-14T16:38:45", "upload_time_iso_8601": "2020-01-14T16:38:45.294225Z", "url": "https://files.pythonhosted.org/packages/5b/bd/1e2bf8f1afd944db3d9382efaac1fb8ee8f3ccdb9a5b053ca8b5503953a8/ktrain-0.8.0b3.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "1254d983df3c39cd2f325c8e287a98be", "sha256": "343a86e0e75de9386e0be3b689973b6527292776d0498784b269eba3074ce3fc"}, "downloads": -1, "filename": "ktrain-0.8.1.tar.gz", "has_sig": false, "md5_digest": "1254d983df3c39cd2f325c8e287a98be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95751, "upload_time": "2020-01-15T19:53:39", "upload_time_iso_8601": "2020-01-15T19:53:39.323200Z", "url": "https://files.pythonhosted.org/packages/65/23/94956f569f5c67334d6683f2d2e7f2ba22941c97c598bf40d435a0c164d4/ktrain-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "3c3e21f989b4c803bf843aac060842f8", "sha256": "4c99a5b8de86f662a4992cb81df48d3ea6ca33188b6ed23c5023476a1d15bd3a"}, "downloads": -1, "filename": "ktrain-0.8.2.tar.gz", "has_sig": false, "md5_digest": "3c3e21f989b4c803bf843aac060842f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96401, "upload_time": "2020-01-20T04:12:34", "upload_time_iso_8601": "2020-01-20T04:12:34.434255Z", "url": "https://files.pythonhosted.org/packages/1e/69/cd24e2ab73e41d13ae9bf73add9b7e98d6bc26c9d129df40f6dfc1a8ad5d/ktrain-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "4e84a0a491b663932b89080c618e9ec6", "sha256": "f5ee191ca1d4857553eca7ad002e99240d5afd024fa8874767dde6aa0228a860"}, "downloads": -1, "filename": "ktrain-0.8.3.tar.gz", "has_sig": false, "md5_digest": "4e84a0a491b663932b89080c618e9ec6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96689, "upload_time": "2020-01-22T21:08:30", "upload_time_iso_8601": "2020-01-22T21:08:30.223444Z", "url": "https://files.pythonhosted.org/packages/46/3d/82a24d1b2ae3f963471ed2113b07faab7a240db1ce2e702d2f2b3beb2268/ktrain-0.8.3.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "f4ecbf9d9c62ce063aaff58d71372b95", "sha256": "554e9af903580f0e40fa8c35982ad605c87ee14e1ad20ccdd68911348278b510"}, "downloads": -1, "filename": "ktrain-0.9.0.tar.gz", "has_sig": false, "md5_digest": "f4ecbf9d9c62ce063aaff58d71372b95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98673, "upload_time": "2020-01-30T17:28:05", "upload_time_iso_8601": "2020-01-30T17:28:05.751704Z", "url": "https://files.pythonhosted.org/packages/3c/9b/b31393497bcc6d66d2c47485b4e935d1e33dbeb83f83080a6134e0b0f631/ktrain-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "5071a6fa310b8cd8a10fa417c76c1002", "sha256": "ffa242f88c55ee6a51e42b3ba881b82f29034dc326647c804898db2e1501e8be"}, "downloads": -1, "filename": "ktrain-0.9.1.tar.gz", "has_sig": false, "md5_digest": "5071a6fa310b8cd8a10fa417c76c1002", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98753, "upload_time": "2020-02-01T16:40:46", "upload_time_iso_8601": "2020-02-01T16:40:46.996117Z", "url": "https://files.pythonhosted.org/packages/75/92/cf5bde348981fa95b24ff7bea515de90602a70f0c0a51e1e4bdc86b58878/ktrain-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "20a5fc4de444291571efb70ee581fa95", "sha256": "715294d640e1cd8e336349912ef8210ab3f542a1b7bc394b477b13bc77c1de89"}, "downloads": -1, "filename": "ktrain-0.9.2.tar.gz", "has_sig": false, "md5_digest": "20a5fc4de444291571efb70ee581fa95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98787, "upload_time": "2020-02-04T19:18:57", "upload_time_iso_8601": "2020-02-04T19:18:57.938472Z", "url": "https://files.pythonhosted.org/packages/19/e1/0ed4b3b20dd0062d51f2cd53b1378a83b7a31d4b20a5c984342055bf3f05/ktrain-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "fa89177c870c36f7882510351a2ac491", "sha256": "b1fa310cd1787078ec30b757ba186606999782b29cb6b3f7c5a10841c2798cf8"}, "downloads": -1, "filename": "ktrain-0.9.3.tar.gz", "has_sig": false, "md5_digest": "fa89177c870c36f7882510351a2ac491", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 99151, "upload_time": "2020-02-11T20:31:55", "upload_time_iso_8601": "2020-02-11T20:31:55.712581Z", "url": "https://files.pythonhosted.org/packages/4c/eb/f7c8eecbaa0e06d80dbf78e1ae6b293b944d89a1f294331324c0b5262ad4/ktrain-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "def671188f8442248ac41fe09a3db1bc", "sha256": "df31daf2d2fd58e27d03ae11ab08442bd35f7a76585440317fbf857ce88ef2d9"}, "downloads": -1, "filename": "ktrain-0.9.4.tar.gz", "has_sig": false, "md5_digest": "def671188f8442248ac41fe09a3db1bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 99157, "upload_time": "2020-02-13T21:39:22", "upload_time_iso_8601": "2020-02-13T21:39:22.081525Z", "url": "https://files.pythonhosted.org/packages/73/d5/77df174a24b752d0c7bb5a140591e2c909781b0ab6d9d73451d484a6ede2/ktrain-0.9.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f5d2f4b1732b81720de9ed300f48ad77", "sha256": "161810689238e6c41a65c34efa6a30fdddd0b913d2b123df23e49db103259220"}, "downloads": -1, "filename": "ktrain-0.14.6.tar.gz", "has_sig": false, "md5_digest": "f5d2f4b1732b81720de9ed300f48ad77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25218175, "upload_time": "2020-05-06T19:17:30", "upload_time_iso_8601": "2020-05-06T19:17:30.419097Z", "url": "https://files.pythonhosted.org/packages/8c/2e/132382bbc3f1f1539b40975cd7b6d56c057de47d58f3fae597d0f9114678/ktrain-0.14.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:40 2020"}