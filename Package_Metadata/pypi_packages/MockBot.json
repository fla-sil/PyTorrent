{"info": {"author": "dgisolfi", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# MockBot [![MockBot version](https://img.shields.io/pypi/v/MockBot.svg)](https://pypi.org/project/MockBot)\n\nA Bot that responds with the \"spongemock\" version of a message when sent by a particular user.\n\n### Author\n\n**Daniel Gisolfi** - *All current work* - [dgisolfi](https://github.com/dgisolfi)\n\n## Groupme Bot\n\n A GroupMe bot can be created [here](https://dev.groupme.com/bots) and using the Groupme API can send messages to its assigned group. This particular bot uses a callback URL to be notified of new messages. Once notified the message will be parsed and a response will be created if the `USER_ID` of the sender matches that of the `USER_ID` environment variable.\n\n## Usage\n\nOnce a bot is registered with Groupme the following requirements must be specified in the form of environment variables:\n\n* **USER_ID** - The ID of the user that should be mocked in the group chat.\n\n  Example: `USER_ID=29384`    \n  \n* **BOT_ID** - The assigned bot ID by GroupMe.\n\n  Example: `BOT_ID=a6a7a7a7a7a7a7a7a77a7a7`    \n\n* **GROUP_ID** - The ID of the Groupme Chat where the bot resides\n\n  Example: `GROUP_ID=0987890987`    \n* **API_TOKEN** - The api token for the authorized Groupme account\n\n  Example: `API_TOKEN=983u4ritgo0v98ujkorf`\n\nAfter the environment variables have been set run the Flask server, `python -m MockBot`\n\n## Customization/Additions\n\nFeature Additions/Suggestions are welcome, for any particular functionality that may need to be added for a particular use case, simple parse the incoming messages looking for specified input in the `server.py` file and add methods in the bot class to perform the desired function.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dgisolfi/MockBot", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "MockBot", "package_url": "https://pypi.org/project/MockBot/", "platform": "", "project_url": "https://pypi.org/project/MockBot/", "project_urls": {"Homepage": "https://github.com/dgisolfi/MockBot"}, "release_url": "https://pypi.org/project/MockBot/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "A Groupme Bot that Mocks a specified user.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># MockBot [![MockBot version](<a href=\"https://img.shields.io/pypi/v/MockBot.svg)%5D(https://pypi.org/project/MockBot\" rel=\"nofollow\">https://img.shields.io/pypi/v/MockBot.svg)](https://pypi.org/project/MockBot</a>)</p>\n<p>A Bot that responds with the \u201cspongemock\u201d version of a message when sent by a particular user.</p>\n<p>### Author</p>\n<p><strong>Daniel Gisolfi</strong> - <em>All current work</em> - [dgisolfi](<a href=\"https://github.com/dgisolfi\" rel=\"nofollow\">https://github.com/dgisolfi</a>)</p>\n<p>## Groupme Bot</p>\n<blockquote>\nA GroupMe bot can be created [here](<a href=\"https://dev.groupme.com/bots\" rel=\"nofollow\">https://dev.groupme.com/bots</a>) and using the Groupme API can send messages to its assigned group. This particular bot uses a callback URL to be notified of new messages. Once notified the message will be parsed and a response will be created if the <cite>USER_ID</cite> of the sender matches that of the <cite>USER_ID</cite> environment variable.</blockquote>\n<p>## Usage</p>\n<p>Once a bot is registered with Groupme the following requirements must be specified in the form of environment variables:</p>\n<ul>\n<li><p><strong>USER_ID</strong> - The ID of the user that should be mocked in the group chat.</p>\n<p>Example: <cite>USER_ID=29384</cite></p>\n</li>\n<li><p><strong>BOT_ID</strong> - The assigned bot ID by GroupMe.</p>\n<p>Example: <cite>BOT_ID=a6a7a7a7a7a7a7a7a77a7a7</cite></p>\n</li>\n<li><p><strong>GROUP_ID</strong> - The ID of the Groupme Chat where the bot resides</p>\n<p>Example: <cite>GROUP_ID=0987890987</cite></p>\n</li>\n<li><p><strong>API_TOKEN</strong> - The api token for the authorized Groupme account</p>\n<p>Example: <cite>API_TOKEN=983u4ritgo0v98ujkorf</cite></p>\n</li>\n</ul>\n<p>After the environment variables have been set run the Flask server, <cite>python -m MockBot</cite></p>\n<p>## Customization/Additions</p>\n<p>Feature Additions/Suggestions are welcome, for any particular functionality that may need to be added for a particular use case, simple parse the incoming messages looking for specified input in the <cite>server.py</cite> file and add methods in the bot class to perform the desired function.</p>\n\n          </div>"}, "last_serial": 5502762, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "282ada553798f4ecc9a5c90e650e44a9", "sha256": "313b7ed4d66d2f194d1ba913da47da9989b7a7bea23b1963a8d5081993be6615"}, "downloads": -1, "filename": "MockBot-1.0.0.tar.gz", "has_sig": false, "md5_digest": "282ada553798f4ecc9a5c90e650e44a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3225, "upload_time": "2019-07-08T19:29:33", "upload_time_iso_8601": "2019-07-08T19:29:33.323918Z", "url": "https://files.pythonhosted.org/packages/86/61/b1fe01f179f635c9eb10f5f32648bf84ce1c4bdffb6c4c4e50667bad7128/MockBot-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "282ada553798f4ecc9a5c90e650e44a9", "sha256": "313b7ed4d66d2f194d1ba913da47da9989b7a7bea23b1963a8d5081993be6615"}, "downloads": -1, "filename": "MockBot-1.0.0.tar.gz", "has_sig": false, "md5_digest": "282ada553798f4ecc9a5c90e650e44a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3225, "upload_time": "2019-07-08T19:29:33", "upload_time_iso_8601": "2019-07-08T19:29:33.323918Z", "url": "https://files.pythonhosted.org/packages/86/61/b1fe01f179f635c9eb10f5f32648bf84ce1c4bdffb6c4c4e50667bad7128/MockBot-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:04 2020"}