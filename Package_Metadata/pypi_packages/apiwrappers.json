{"info": {"author": "Aleksei Maslakov", "author_email": "lesha.maslakov@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Typing :: Typed"], "description": "========\nOverview\n========\n\n.. start-badges\n\n.. image:: https://github.com/unmade/apiwrappers/workflows/lint%20and%20test/badge.svg?branch=master\n    :alt: Build Status\n    :target: https://github.com/unmade/apiwrappers/blob/master/.github/workflows/lint-and-test.yml\n\n.. image:: https://readthedocs.org/projects/apiwrappers/badge/?version=latest\n    :alt: Documentation Status\n    :target: https://apiwrappers.readthedocs.io/en/latest/?badge=latest\n\n.. image:: https://codecov.io/gh/unmade/apiwrappers/branch/master/graph/badge.svg\n    :alt: Coverage Status\n    :target: https://codecov.io/gh/unmade/apiwrappers\n\n.. image:: http://www.mypy-lang.org/static/mypy_badge.svg\n    :alt: Checked with mypy\n    :target: http://mypy-lang.org/\n\n.. image:: https://img.shields.io/pypi/v/apiwrappers.svg\n    :alt: PyPI Package latest release\n    :target: https://pypi.org/project/apiwrappers\n\n.. image:: https://img.shields.io/pypi/pyversions/apiwrappers.svg\n    :alt: Supported versions\n    :target: https://pypi.org/project/apiwrappers\n\n.. image:: https://img.shields.io/badge/License-MIT-purple.svg\n    :alt: MIT License\n    :target: https://github.com/unmade/apiwrappers/blob/master/LICENSE\n\n.. end-badges\n\n----------\n\n*apiwrappers* is a library for building API clients\nthat work both with regular and async code.\n\nFeatures\n========\n\n- **DRY** - support both regular and async code with one implementation\n- **Flexible** - middleware mechanism to customize request/response\n- **Typed** - library is fully typed and it's relatively easy\n  to get fully typed wrappers\n- **Modern** - decode JSON with no effort using dataclasses and type annotations\n- **Unified interface** - work with different python HTTP client libraries\n  in the same way. Currently supported:\n\n    - `requests <https://requests.readthedocs.io/en/master/>`_\n    - `aiohttp <https://docs.aiohttp.org/en/stable/client.html>`_\n\nInstallation\n============\n\n.. code-block:: bash\n\n    pip install 'apiwrappers[aiohttp,requests]'\n\n*Note: extras are mainly needed for the final user of your API client*\n\nQuickStart\n==========\n\nMaking request is rather straightforward:\n\n.. code-block:: python\n\n    from dataclasses import dataclass\n    from typing import List\n\n    from apiwrappers import Request, fetch, make_driver\n\n    @dataclass\n    class Repo:\n        name: str\n\n    url = \"https://api.github.com/users/unmade/repos\"\n    request = Request(\"GET\", url)\n\n    driver = make_driver(\"requests\")\n    fetch(driver, request)  # Response(..., status_code=200, ...)\n    fetch(driver, request, model=List[Repo])  # [Repo(name='am-date-picker'), ...]\n\n    driver = make_driver(\"aiohttp\")\n    await fetch(driver, request)  # Response(..., status_code=200, ...)\n    await fetch(driver, request, model=List[Repo])  # [Repo(name='am-date-picker'), ...]\n\nWriting a Simple API Client\n---------------------------\n\nWith *apiwrappers* you can bootstrap clients for different API\npretty fast and easily.\n\nHere is how a typical API client would look like:\n\n.. code-block:: python\n\n    from __future__ import annotations\n\n    from dataclasses import dataclass\n    from typing import Awaitable, Generic, List, TypeVar, overload\n\n    from apiwrappers import AsyncDriver, Driver, Request, Url, fetch\n\n    T = TypeVar(\"T\", Driver, AsyncDriver)\n\n\n    @dataclass\n    class Repo:\n        id: int\n        name: str\n\n\n    class GitHub(Generic[T]):\n        def __init__(self, host: str, driver: T):\n            self.url = Url(host)\n            self.driver: T = driver\n\n        @overload\n        def get_repos(self: Github[Driver], username: str) -> List[Repo]:\n            ...\n\n        @overload\n        def get_repos(self: Github[AsyncDriver], username: str) -> Awaitable[List[Repo]]:\n            ...\n\n        def get_repos(self, username: str):\n            url = self.url(\"/users/{username}/repos\", username=username)\n            request = Request(\"GET\", url)\n            return fetch(self.driver, request, model=List[Repo])\n\nThis is small, but fully typed, API client for one of the\n`api.github.com <https://api.github.com>`_ endpoints to get all user repos\nby username:\n\nHere we defined ``Repo`` dataclass that describes what we want\nto get from response and pass it to the ``fetch`` function.\n``fetch`` will then make a request and will cast response to that type.\n\nNote how we create URL:\n\n.. code-block:: python\n\n    url = self.url(\"/users/{username}/repos\", username=username)\n\nSometimes, it's useful to have an URL template, for example, for logging\nor for aggregating metrics, so instead of formatting immediately, we\nprovide a template and replacement fields.\n\nUsing the API Client\n--------------------\n\nHere how we can use it:\n\n.. code-block:: python\n\n    >>> from apiwrappers import make_driver\n    >>> driver = make_driver(\"requests\")\n    >>> github = GitHub(\"https://api.github.com\", driver=driver)\n    >>> github.get_repos(\"unmade\")\n    [Repo(id=47463599, name='am-date-picker'),\n     Repo(id=231653904, name='apiwrappers'),\n     Repo(id=144204778, name='conway'),\n     ...\n    ]\n\nTo use it with asyncio all we need to do is provide a proper driver\nand don't forget to ``await`` method call:\n\n*Use IPython or Python 3.8+ with python -m asyncio\nto try this code interactively*\n\n.. code-block:: python\n\n    >>> from apiwrappers import make_driver\n    >>> driver = make_driver(\"aiohttp\")\n    >>> github = GitHub(\"https://api.github.com\", driver=driver)\n    >>> await github.get_repos(\"unmade\")\n    [Repo(id=47463599, name='am-date-picker'),\n     Repo(id=231653904, name='apiwrappers'),\n     Repo(id=144204778, name='conway'),\n     ...\n    ]\n\nDocumentation\n=============\n\nDocumentation for *apiwrappers* can be found at\n`Read The Docs <https://apiwrappers.readthedocs.io/>`_.\n\nCheck out `Extended Client Example <example/README.md>`_.\n\nContributing\n============\n\nContributions are welcome, and they are greatly appreciated! Every\nlittle bit helps, and credit will always be given.\n\nSee `contributing guide <CONTRIBUTING.rst>`_ to learn more.\n\nCurrently the code and the issues are hosted on GitHub.\n\nThe project is licensed under MIT.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "api,wrapper,http,client", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "apiwrappers", "package_url": "https://pypi.org/project/apiwrappers/", "platform": "", "project_url": "https://pypi.org/project/apiwrappers/", "project_urls": {"Documentation": "https://apiwrappers.readthedocs.io/"}, "release_url": "https://pypi.org/project/apiwrappers/0.4.0/", "requires_dist": ["aiohttp (>=3.6.2,<4.0.0); extra == \"aiohttp\"", "certifi (>=2017.4.17); extra == \"aiohttp\"", "requests (>=2.22.0,<3.0.0); extra == \"requests\"", "typing-extensions (>=3.7.4,<4.0.0); python_version >= \"3.7\" and python_version < \"3.8\""], "requires_python": ">=3.7,<4.0", "summary": "apiwrappers is a library for building API clients that work both with regular and async code", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://github.com/unmade/apiwrappers/blob/master/.github/workflows/lint-and-test.yml\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b832ba14c424945f3fd2bbe5dbad89cbd3fe1463/68747470733a2f2f6769746875622e636f6d2f756e6d6164652f61706977726170706572732f776f726b666c6f77732f6c696e74253230616e64253230746573742f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://apiwrappers.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c1effb94f7aa00da6c832ee52edf088f40895f84/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61706977726170706572732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh/unmade/apiwrappers\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12b62e367e3521b242a1582168a51c36eb0a76b5/68747470733a2f2f636f6465636f762e696f2f67682f756e6d6164652f61706977726170706572732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"http://mypy-lang.org/\" rel=\"nofollow\"><img alt=\"Checked with mypy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0db8f5dcbf5f340f278004d5db3d16b4cdf33ba/687474703a2f2f7777772e6d7970792d6c616e672e6f72672f7374617469632f6d7970795f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/apiwrappers\" rel=\"nofollow\"><img alt=\"PyPI Package latest release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b302446bc99b04ec7723aa8d2164fffd83885990/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61706977726170706572732e737667\"></a>\n<a href=\"https://pypi.org/project/apiwrappers\" rel=\"nofollow\"><img alt=\"Supported versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e293ca9402e586af81f124bd234ef603bd88f8b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f61706977726170706572732e737667\"></a>\n<a href=\"https://github.com/unmade/apiwrappers/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"MIT License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a49f461fc8c1f6b9d30d1ab91e98210f92db2e6f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d707572706c652e737667\"></a>\n<hr class=\"docutils\">\n<p><em>apiwrappers</em> is a library for building API clients\nthat work both with regular and async code.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li><p><strong>DRY</strong> - support both regular and async code with one implementation</p>\n</li>\n<li><p><strong>Flexible</strong> - middleware mechanism to customize request/response</p>\n</li>\n<li><p><strong>Typed</strong> - library is fully typed and it\u2019s relatively easy\nto get fully typed wrappers</p>\n</li>\n<li><p><strong>Modern</strong> - decode JSON with no effort using dataclasses and type annotations</p>\n</li>\n<li><p><strong>Unified interface</strong> - work with different python HTTP client libraries\nin the same way. Currently supported:</p>\n<blockquote>\n<ul>\n<li><a href=\"https://requests.readthedocs.io/en/master/\" rel=\"nofollow\">requests</a></li>\n<li><a href=\"https://docs.aiohttp.org/en/stable/client.html\" rel=\"nofollow\">aiohttp</a></li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install <span class=\"s1\">'apiwrappers[aiohttp,requests]'</span>\n</pre>\n<p><em>Note: extras are mainly needed for the final user of your API client</em></p>\n</div>\n<div id=\"quickstart\">\n<h2>QuickStart</h2>\n<p>Making request is rather straightforward:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">List</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">apiwrappers</span> <span class=\"kn\">import</span> <span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">fetch</span><span class=\"p\">,</span> <span class=\"n\">make_driver</span>\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Repo</span><span class=\"p\">:</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://api.github.com/users/unmade/repos\"</span>\n<span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"s2\">\"GET\"</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">)</span>\n\n<span class=\"n\">driver</span> <span class=\"o\">=</span> <span class=\"n\">make_driver</span><span class=\"p\">(</span><span class=\"s2\">\"requests\"</span><span class=\"p\">)</span>\n<span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span>  <span class=\"c1\"># Response(..., status_code=200, ...)</span>\n<span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Repo</span><span class=\"p\">])</span>  <span class=\"c1\"># [Repo(name='am-date-picker'), ...]</span>\n\n<span class=\"n\">driver</span> <span class=\"o\">=</span> <span class=\"n\">make_driver</span><span class=\"p\">(</span><span class=\"s2\">\"aiohttp\"</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span>  <span class=\"c1\"># Response(..., status_code=200, ...)</span>\n<span class=\"k\">await</span> <span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Repo</span><span class=\"p\">])</span>  <span class=\"c1\"># [Repo(name='am-date-picker'), ...]</span>\n</pre>\n<div id=\"writing-a-simple-api-client\">\n<h3>Writing a Simple API Client</h3>\n<p>With <em>apiwrappers</em> you can bootstrap clients for different API\npretty fast and easily.</p>\n<p>Here is how a typical API client would look like:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">annotations</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Awaitable</span><span class=\"p\">,</span> <span class=\"n\">Generic</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">TypeVar</span><span class=\"p\">,</span> <span class=\"n\">overload</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">apiwrappers</span> <span class=\"kn\">import</span> <span class=\"n\">AsyncDriver</span><span class=\"p\">,</span> <span class=\"n\">Driver</span><span class=\"p\">,</span> <span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">Url</span><span class=\"p\">,</span> <span class=\"n\">fetch</span>\n\n<span class=\"n\">T</span> <span class=\"o\">=</span> <span class=\"n\">TypeVar</span><span class=\"p\">(</span><span class=\"s2\">\"T\"</span><span class=\"p\">,</span> <span class=\"n\">Driver</span><span class=\"p\">,</span> <span class=\"n\">AsyncDriver</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Repo</span><span class=\"p\">:</span>\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">GitHub</span><span class=\"p\">(</span><span class=\"n\">Generic</span><span class=\"p\">[</span><span class=\"n\">T</span><span class=\"p\">]):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">driver</span><span class=\"p\">:</span> <span class=\"n\">T</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">Url</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"p\">:</span> <span class=\"n\">T</span> <span class=\"o\">=</span> <span class=\"n\">driver</span>\n\n    <span class=\"nd\">@overload</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_repos</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">:</span> <span class=\"n\">Github</span><span class=\"p\">[</span><span class=\"n\">Driver</span><span class=\"p\">],</span> <span class=\"n\">username</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Repo</span><span class=\"p\">]:</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@overload</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_repos</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">:</span> <span class=\"n\">Github</span><span class=\"p\">[</span><span class=\"n\">AsyncDriver</span><span class=\"p\">],</span> <span class=\"n\">username</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Repo</span><span class=\"p\">]]:</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_repos</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"s2\">\"/users/</span><span class=\"si\">{username}</span><span class=\"s2\">/repos\"</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">username</span><span class=\"p\">)</span>\n        <span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"s2\">\"GET\"</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Repo</span><span class=\"p\">])</span>\n</pre>\n<p>This is small, but fully typed, API client for one of the\n<a href=\"https://api.github.com\" rel=\"nofollow\">api.github.com</a> endpoints to get all user repos\nby username:</p>\n<p>Here we defined <tt>Repo</tt> dataclass that describes what we want\nto get from response and pass it to the <tt>fetch</tt> function.\n<tt>fetch</tt> will then make a request and will cast response to that type.</p>\n<p>Note how we create URL:</p>\n<pre><span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"s2\">\"/users/</span><span class=\"si\">{username}</span><span class=\"s2\">/repos\"</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">username</span><span class=\"p\">)</span>\n</pre>\n<p>Sometimes, it\u2019s useful to have an URL template, for example, for logging\nor for aggregating metrics, so instead of formatting immediately, we\nprovide a template and replacement fields.</p>\n</div>\n<div id=\"using-the-api-client\">\n<h3>Using the API Client</h3>\n<p>Here how we can use it:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">apiwrappers</span> <span class=\"kn\">import</span> <span class=\"n\">make_driver</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">driver</span> <span class=\"o\">=</span> <span class=\"n\">make_driver</span><span class=\"p\">(</span><span class=\"s2\">\"requests\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">github</span> <span class=\"o\">=</span> <span class=\"n\">GitHub</span><span class=\"p\">(</span><span class=\"s2\">\"https://api.github.com\"</span><span class=\"p\">,</span> <span class=\"n\">driver</span><span class=\"o\">=</span><span class=\"n\">driver</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">get_repos</span><span class=\"p\">(</span><span class=\"s2\">\"unmade\"</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">Repo</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">47463599</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'am-date-picker'</span><span class=\"p\">),</span>\n <span class=\"n\">Repo</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">231653904</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'apiwrappers'</span><span class=\"p\">),</span>\n <span class=\"n\">Repo</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">144204778</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'conway'</span><span class=\"p\">),</span>\n <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>To use it with asyncio all we need to do is provide a proper driver\nand don\u2019t forget to <tt>await</tt> method call:</p>\n<p><em>Use IPython or Python 3.8+ with python -m asyncio\nto try this code interactively</em></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">apiwrappers</span> <span class=\"kn\">import</span> <span class=\"n\">make_driver</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">driver</span> <span class=\"o\">=</span> <span class=\"n\">make_driver</span><span class=\"p\">(</span><span class=\"s2\">\"aiohttp\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">github</span> <span class=\"o\">=</span> <span class=\"n\">GitHub</span><span class=\"p\">(</span><span class=\"s2\">\"https://api.github.com\"</span><span class=\"p\">,</span> <span class=\"n\">driver</span><span class=\"o\">=</span><span class=\"n\">driver</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">await</span> <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">get_repos</span><span class=\"p\">(</span><span class=\"s2\">\"unmade\"</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">Repo</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">47463599</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'am-date-picker'</span><span class=\"p\">),</span>\n <span class=\"n\">Repo</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">231653904</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'apiwrappers'</span><span class=\"p\">),</span>\n <span class=\"n\">Repo</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">144204778</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'conway'</span><span class=\"p\">),</span>\n <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n</div>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Documentation for <em>apiwrappers</em> can be found at\n<a href=\"https://apiwrappers.readthedocs.io/\" rel=\"nofollow\">Read The Docs</a>.</p>\n<p>Check out <a href=\"example/README.md\" rel=\"nofollow\">Extended Client Example</a>.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions are welcome, and they are greatly appreciated! Every\nlittle bit helps, and credit will always be given.</p>\n<p>See <a href=\"CONTRIBUTING.rst\" rel=\"nofollow\">contributing guide</a> to learn more.</p>\n<p>Currently the code and the issues are hosted on GitHub.</p>\n<p>The project is licensed under MIT.</p>\n</div>\n\n          </div>"}, "last_serial": 6829655, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2cc6bc5e7258d9113137f2f86e9a337e", "sha256": "58ef9a8da64b97e60a705bd9733e37e2742121e13bb68efbd008d567cc55bbf7"}, "downloads": -1, "filename": "apiwrappers-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2cc6bc5e7258d9113137f2f86e9a337e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 21605, "upload_time": "2020-03-07T20:16:05", "upload_time_iso_8601": "2020-03-07T20:16:05.814780Z", "url": "https://files.pythonhosted.org/packages/b6/10/8ed891c7f618b1bbcd4b1d7fd4b76f0e3f486572014f1b96b3f0ff7662c1/apiwrappers-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d91abf05bc1c7db2e99f0b5f31150df", "sha256": "90bf4615918c306fad1960c041d7e94b4bfaff309abf7a8fbd9940780dc87681"}, "downloads": -1, "filename": "apiwrappers-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0d91abf05bc1c7db2e99f0b5f31150df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 17261, "upload_time": "2020-03-07T20:16:07", "upload_time_iso_8601": "2020-03-07T20:16:07.200351Z", "url": "https://files.pythonhosted.org/packages/5e/15/9bd12d12903e2a585be7ce32c1c9d6207d19ad2b6201e07ed1649f493fd1/apiwrappers-0.1.0.tar.gz", "yanked": false}], "0.1.0a0": [{"comment_text": "", "digests": {"md5": "9e2e53e05e628cd20131769f7542a57b", "sha256": "1b7c234eb420d5069bddb9bd544304d0d2e0103cd0c3980a4da1c663665884da"}, "downloads": -1, "filename": "apiwrappers-0.1.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "9e2e53e05e628cd20131769f7542a57b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 13003, "upload_time": "2020-01-16T21:40:39", "upload_time_iso_8601": "2020-01-16T21:40:39.451699Z", "url": "https://files.pythonhosted.org/packages/a3/ea/0f0953ebc04a5537103822992f6da70e9581832bb1c9e65c682772738202/apiwrappers-0.1.0a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80170c194e10d8197c74be4e804a13fc", "sha256": "812dbab35cfb9dd4db59d4040c04b4cac7c6481edc4672e7b486c89cd006f246"}, "downloads": -1, "filename": "apiwrappers-0.1.0a0.tar.gz", "has_sig": false, "md5_digest": "80170c194e10d8197c74be4e804a13fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 11860, "upload_time": "2020-01-16T21:40:42", "upload_time_iso_8601": "2020-01-16T21:40:42.066780Z", "url": "https://files.pythonhosted.org/packages/55/c8/ca52e29c05e26ba87ba934e319f92c7da695ede8af6d5d38d869172f5214/apiwrappers-0.1.0a0.tar.gz", "yanked": false}], "0.1.0b0": [{"comment_text": "", "digests": {"md5": "e12787536d122e645dfa9ff88edbc528", "sha256": "d0d71bcb31717c2ebcf64d992260c4ac7ca751c0b043be1f4fe372174c297381"}, "downloads": -1, "filename": "apiwrappers-0.1.0b0-py3-none-any.whl", "has_sig": false, "md5_digest": "e12787536d122e645dfa9ff88edbc528", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 13976, "upload_time": "2020-01-28T19:03:55", "upload_time_iso_8601": "2020-01-28T19:03:55.456219Z", "url": "https://files.pythonhosted.org/packages/79/2c/7a2a22ad8546341ffd7f0cb3fe1a03e6b49dff5ea4cfda261ca8dadd8caf/apiwrappers-0.1.0b0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebfedd9eee23a527bda151496a1cbc7a", "sha256": "929e29b14ff32f8af498b05c8162534521c80222b724d3ca33cbefefd7c7438a"}, "downloads": -1, "filename": "apiwrappers-0.1.0b0.tar.gz", "has_sig": false, "md5_digest": "ebfedd9eee23a527bda151496a1cbc7a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 11647, "upload_time": "2020-01-28T19:03:57", "upload_time_iso_8601": "2020-01-28T19:03:57.206780Z", "url": "https://files.pythonhosted.org/packages/db/64/170d9fb4e3f0f3e8351ae5aad931496bf603c3a2000e8e0b847b144459e7/apiwrappers-0.1.0b0.tar.gz", "yanked": false}], "0.1.0b1": [{"comment_text": "", "digests": {"md5": "d27648b5204453f36d04a4408b66e8c3", "sha256": "c325a58abe5a0bcdb7e55b3cf90181d746491dace650cd200e755b1ac29855f9"}, "downloads": -1, "filename": "apiwrappers-0.1.0b1-py3-none-any.whl", "has_sig": false, "md5_digest": "d27648b5204453f36d04a4408b66e8c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 19585, "upload_time": "2020-02-19T17:22:37", "upload_time_iso_8601": "2020-02-19T17:22:37.502258Z", "url": "https://files.pythonhosted.org/packages/b5/6a/0e971ccb3e798c05507076d3d0aafc2aba339b53128dd870e789e2609fd9/apiwrappers-0.1.0b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39946d8a41a53c00097d9f88e9de1d34", "sha256": "1b4a9fa66ff935bde204528c6232990d50e3e9eaa90e49d40dd65c6f28460fb6"}, "downloads": -1, "filename": "apiwrappers-0.1.0b1.tar.gz", "has_sig": false, "md5_digest": "39946d8a41a53c00097d9f88e9de1d34", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 15196, "upload_time": "2020-02-19T17:22:39", "upload_time_iso_8601": "2020-02-19T17:22:39.148877Z", "url": "https://files.pythonhosted.org/packages/df/60/d846303761fcccfa9ab08811a1811ce07c101f7c6e3f18a2a6f3305cb7a1/apiwrappers-0.1.0b1.tar.gz", "yanked": false}], "0.1.0b2": [{"comment_text": "", "digests": {"md5": "b970e99ac2237aa15de1cd9d1716cba4", "sha256": "c9010f69aec9ee6851ab60e88df3a8196153f8dd59f76c2546560ea63f9bbe68"}, "downloads": -1, "filename": "apiwrappers-0.1.0b2-py3-none-any.whl", "has_sig": false, "md5_digest": "b970e99ac2237aa15de1cd9d1716cba4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 20470, "upload_time": "2020-03-04T16:52:04", "upload_time_iso_8601": "2020-03-04T16:52:04.770849Z", "url": "https://files.pythonhosted.org/packages/33/1d/6560a7f65d397a97dd4c91ff1d942f9d35f8c599c0b094f3b6bf2b609355/apiwrappers-0.1.0b2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11969d310e36eeed9e5c383ee8cc7664", "sha256": "ed317ef62c04246040e041a1b952f2b79f071e465c73fac2bab0ac5634028600"}, "downloads": -1, "filename": "apiwrappers-0.1.0b2.tar.gz", "has_sig": false, "md5_digest": "11969d310e36eeed9e5c383ee8cc7664", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 15958, "upload_time": "2020-03-04T16:52:06", "upload_time_iso_8601": "2020-03-04T16:52:06.067413Z", "url": "https://files.pythonhosted.org/packages/8e/d4/d3c941643f4e09377cf07066ff2adc750b9e29fe71f55656656898cc4e81/apiwrappers-0.1.0b2.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a640e7b2557b1c76930f9ec66679830f", "sha256": "7749ef33d2349e83e3f2f25659f5095072bc976ee5f5a17a3dd7b81692833451"}, "downloads": -1, "filename": "apiwrappers-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a640e7b2557b1c76930f9ec66679830f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 21630, "upload_time": "2020-03-09T12:07:08", "upload_time_iso_8601": "2020-03-09T12:07:08.894203Z", "url": "https://files.pythonhosted.org/packages/9a/b0/38e3681d4a98be589119306fb7247a58c1028f4f29b96e735a9c4f373bd4/apiwrappers-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ff8919ebe6ab7a380d8fa0f3306cccd", "sha256": "d99b99e0ddb6482c39d119240cc3af5d5f1e50d1f7c048157ce0a528d7ea047b"}, "downloads": -1, "filename": "apiwrappers-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1ff8919ebe6ab7a380d8fa0f3306cccd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 17242, "upload_time": "2020-03-09T12:07:10", "upload_time_iso_8601": "2020-03-09T12:07:10.396429Z", "url": "https://files.pythonhosted.org/packages/fe/51/e2739d2ea0da22fda9da155b1bdaf9c27fd7025a87777374e2a7fa0f36de/apiwrappers-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a0c89160b6666ce3012e008d35ad8a9a", "sha256": "f230c8ad10aed3219870726b72543e8434a173783adf9dbb33cd44cfaa3bcf6e"}, "downloads": -1, "filename": "apiwrappers-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a0c89160b6666ce3012e008d35ad8a9a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 21645, "upload_time": "2020-03-10T07:47:48", "upload_time_iso_8601": "2020-03-10T07:47:48.470915Z", "url": "https://files.pythonhosted.org/packages/39/47/2df8c37551a59841b74dab53f0db175a1b5741fbeb8f50a4bff09d500b8d/apiwrappers-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8dd6130bf79a437c25e52408458588a0", "sha256": "791d6bd6a8150aeb1f5dc14c1f71076fb06c13b433a1366f54c33f082a73c1e4"}, "downloads": -1, "filename": "apiwrappers-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8dd6130bf79a437c25e52408458588a0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 17315, "upload_time": "2020-03-10T07:47:50", "upload_time_iso_8601": "2020-03-10T07:47:50.218783Z", "url": "https://files.pythonhosted.org/packages/be/1a/61f17f7e0262f035bd8da3ec30452c2f2c06a807e4df3d96744b0d54bd93/apiwrappers-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "50977ad1c5234789dedae3bcdd67f73e", "sha256": "e711dff1d78f2a6920f0abc42428ef79d7c37da4d9e79d77f4374a889b9f9913"}, "downloads": -1, "filename": "apiwrappers-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "50977ad1c5234789dedae3bcdd67f73e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 21663, "upload_time": "2020-03-10T09:27:21", "upload_time_iso_8601": "2020-03-10T09:27:21.492532Z", "url": "https://files.pythonhosted.org/packages/a0/07/1c76d8a606bd858d5be3e596e1f0cafda09af7021adc473764405d66c1b8/apiwrappers-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35f931a6994845d405152aab35ccafad", "sha256": "6e36412530c12d7355b6581999094d2f8f0d4a1ab01c1cf9f2ba5787315ebb33"}, "downloads": -1, "filename": "apiwrappers-0.3.0.tar.gz", "has_sig": false, "md5_digest": "35f931a6994845d405152aab35ccafad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 17364, "upload_time": "2020-03-10T09:27:23", "upload_time_iso_8601": "2020-03-10T09:27:23.051636Z", "url": "https://files.pythonhosted.org/packages/78/71/ddfa36b9edd0b264fa86a387acf8c9d4763981bd4853e0fe15c716af30d5/apiwrappers-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "0519325fd42b272573372c014cba790d", "sha256": "130e93c2669e91be10fb8f1c2c253b4e099422b59f6c25ac254848dfae5bae7b"}, "downloads": -1, "filename": "apiwrappers-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0519325fd42b272573372c014cba790d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 21697, "upload_time": "2020-03-17T16:15:32", "upload_time_iso_8601": "2020-03-17T16:15:32.390890Z", "url": "https://files.pythonhosted.org/packages/e9/d6/4c6529e49b3f11d3bf61a923723d8e6d8f878e0efa7ba391eca807056c17/apiwrappers-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e206d5c9578146a5e959e9d378e5b1b", "sha256": "9f4cde22914d83b83654fe3c9273216292b7b59fa57b92f01e76faf06a4fa97b"}, "downloads": -1, "filename": "apiwrappers-0.4.0.tar.gz", "has_sig": false, "md5_digest": "8e206d5c9578146a5e959e9d378e5b1b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 17436, "upload_time": "2020-03-17T16:15:33", "upload_time_iso_8601": "2020-03-17T16:15:33.655735Z", "url": "https://files.pythonhosted.org/packages/c9/3d/b52c01dbc73c675a4b67365b129e71d43b8d6c9751472cfa2fff1cf4c516/apiwrappers-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0519325fd42b272573372c014cba790d", "sha256": "130e93c2669e91be10fb8f1c2c253b4e099422b59f6c25ac254848dfae5bae7b"}, "downloads": -1, "filename": "apiwrappers-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0519325fd42b272573372c014cba790d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 21697, "upload_time": "2020-03-17T16:15:32", "upload_time_iso_8601": "2020-03-17T16:15:32.390890Z", "url": "https://files.pythonhosted.org/packages/e9/d6/4c6529e49b3f11d3bf61a923723d8e6d8f878e0efa7ba391eca807056c17/apiwrappers-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e206d5c9578146a5e959e9d378e5b1b", "sha256": "9f4cde22914d83b83654fe3c9273216292b7b59fa57b92f01e76faf06a4fa97b"}, "downloads": -1, "filename": "apiwrappers-0.4.0.tar.gz", "has_sig": false, "md5_digest": "8e206d5c9578146a5e959e9d378e5b1b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 17436, "upload_time": "2020-03-17T16:15:33", "upload_time_iso_8601": "2020-03-17T16:15:33.655735Z", "url": "https://files.pythonhosted.org/packages/c9/3d/b52c01dbc73c675a4b67365b129e71d43b8d6c9751472cfa2fff1cf4c516/apiwrappers-0.4.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:44 2020"}