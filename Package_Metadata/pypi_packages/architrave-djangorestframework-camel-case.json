{"info": {"author": "Jeremy Mayeres", "author_email": "jeremy@jerr.dev", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "====================================\nDjango REST Framework JSON CamelCase\n====================================\n\n.. image:: https://travis-ci.org/vbabiy/djangorestframework-camel-case.png?branch=master\n        :target: https://travis-ci.org/vbabiy/djangorestframework-camel-case\n\n.. image:: https://badge.fury.io/py/djangorestframework-camel-case.svg\n    :target: https://badge.fury.io/py/djangorestframework-camel-case\n\nCamel case JSON support for Django REST framework.\n\n============\nInstallation\n============\n\nAt the command line::\n\n    $ pip install djangorestframework-camel-case\n\nAdd the render and parser to your django settings file.\n\n.. code-block:: python\n\n    # ...\n    REST_FRAMEWORK = {\n\n        'DEFAULT_RENDERER_CLASSES': (\n            'djangorestframework_camel_case.render.CamelCaseJSONRenderer',\n            'djangorestframework_camel_case.render.CamelCaseBrowsableAPIRenderer',\n            # Any other renders\n        ),\n\n        'DEFAULT_PARSER_CLASSES': (\n            # If you use MultiPartFormParser or FormParser, we also have a camel case version\n            'djangorestframework_camel_case.parser.CamelCaseFormParser',\n            'djangorestframework_camel_case.parser.CamelCaseMultiPartParser',\n            'djangorestframework_camel_case.parser.CamelCaseJSONParser',\n            # Any other parsers\n        ),\n    }\n    # ...\n\n=================\nSwapping Renderer\n=================\n\nBy default the package uses `rest_framework.renderers.JSONRenderer`. If you want\nto use another renderer (the only possible alternative is\n`rest_framework.renderers.UnicodeJSONRenderer`, only available in DRF < 3.0), you must specify it in your django\nsettings file.\n\n.. code-block:: python\n\n    # ...\n    JSON_CAMEL_CASE = {\n        'RENDERER_CLASS': 'rest_framework.renderers.UnicodeJSONRenderer'\n    }\n    # ...\n\n=====================\nUnderscoreize Options\n=====================\n\n###########################\nNo Underscore Before Number\n###########################\n\nAs raised in https://github.com/krasa/StringManipulation/issues/8#issuecomment-121203018\nthere are two conventions of snake case.\n\n.. code-block:: text\n\n    # Case 1 (Package default)\n    v2Counter -> v_2_counter\n    fooBar2 -> foo_bar_2\n\n    # Case 2\n    v2Counter -> v2_counter\n    fooBar2 -> foo_bar2\n\n\nBy default, the package uses the first case. To use the second case, specify it in your django settings file.\n\n.. code-block:: python\n\n    REST_FRAMEWORK = {\n        # ...\n        'JSON_UNDERSCOREIZE': {\n            'no_underscore_before_number': True,\n        },\n        # ...\n    }\n\nAlternatively, you can change this behavior on a class level by setting `json_underscoreize`:\n\n.. code-block:: python\n\n    from djangorestframework_camel_case.parser import CamelCaseJSONParser\n    from rest_framework.generics import CreateAPIView\n\n    class NoUnderscoreBeforeNumberCamelCaseJSONParser(CamelCaseJSONParser):\n        json_underscoreize = {'no_underscore_before_number': True}\n\n    class MyView(CreateAPIView):\n        queryset = MyModel.objects.all()\n        serializer_class = MySerializer\n        parser_classes = (NoUnderscoreBeforeNumberCamelCaseJSONParser,)\n\n#############\nIgnore Fields\n#############\n\nYou can also specify fields which should not have their data changed.\nThe specified field(s) would still have their name change, but there would be no recursion.\nFor example:\n\n.. code-block:: python\n\n    data = {\"my_key\": {\"do_not_change\": 1}}\n\nWould become:\n\n.. code-block:: python\n\n    {\"myKey\": {\"doNotChange\": 1}}\n\nHowever, if you set in your settings:\n\n.. code-block:: python\n\n    REST_FRAMEWORK = {\n        # ...\n        \"JSON_UNDERSCOREIZE\": {\n            # ...\n            \"ignore_fields\": (\"my_key\",),\n            # ...\n        },\n        # ...\n    }\n\nThe `my_key` field would not have its data changed:\n\n.. code-block:: python\n\n    {\"myKey\": {\"do_not_change\": 1}}\n\n=============\nRunning Tests\n=============\n\nTo run the current test suite, execute the following from the root of he project::\n\n    $ python -m unittest discover\n\n\n=======\nLicense\n=======\n\n* Free software: BSD license\n\n\n\n\n=======\nHistory\n=======\n\n##################\n1.1.3 (2020-03-04)\n##################\n\n- Add ignore_fields option\n\n##################\n1.1.2 (2019-10-22)\n##################\n\n- Merge pull request #63\n- Merge pull request #70\n- Merge pull request #71\n\n##################\n1.1.1 (2019-09-09)\n##################\n\n- Add json_underscoreize as CamelCaseJSONParser class attribute #44\n\n##################\n1.1.0 (2019-09-09)\n##################\n\nLong awaited stable release:\n\nChanges can be viewed:\nhttps://github.com/vbabiy/djangorestframework-camel-case/compare/e6db468...39ae6bb\n\n##################\n0.1.0 (2013-12-20)\n##################\n\n* First release on PyPI.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/architrave-de/djangorestframework-camel-case", "keywords": "djangorestframework_camel_case", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "architrave-djangorestframework-camel-case", "package_url": "https://pypi.org/project/architrave-djangorestframework-camel-case/", "platform": "", "project_url": "https://pypi.org/project/architrave-djangorestframework-camel-case/", "project_urls": {"Homepage": "https://github.com/architrave-de/djangorestframework-camel-case"}, "release_url": "https://pypi.org/project/architrave-djangorestframework-camel-case/1.1.4/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Camel case JSON support for Django REST framework.", "version": "1.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-rest-framework-json-camelcase\">\n<h2>Django REST Framework JSON CamelCase</h2>\n<a href=\"https://travis-ci.org/vbabiy/djangorestframework-camel-case\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/vbabiy/djangorestframework-camel-case.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e8074321e95ebda0ff89f0cd3fa74fdf641bd8ab/68747470733a2f2f7472617669732d63692e6f72672f7662616269792f646a616e676f726573746672616d65776f726b2d63616d656c2d636173652e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/djangorestframework-camel-case\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/djangorestframework-camel-case.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24c7c98b9deeab6212004fc299d48b16fb2d245d/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f726573746672616d65776f726b2d63616d656c2d636173652e737667\"></a>\n<p>Camel case JSON support for Django REST framework.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>At the command line:</p>\n<pre>$ pip install djangorestframework-camel-case\n</pre>\n<p>Add the render and parser to your django settings file.</p>\n<pre><span class=\"c1\"># ...</span>\n<span class=\"n\">REST_FRAMEWORK</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\n    <span class=\"s1\">'DEFAULT_RENDERER_CLASSES'</span><span class=\"p\">:</span> <span class=\"p\">(</span>\n        <span class=\"s1\">'djangorestframework_camel_case.render.CamelCaseJSONRenderer'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'djangorestframework_camel_case.render.CamelCaseBrowsableAPIRenderer'</span><span class=\"p\">,</span>\n        <span class=\"c1\"># Any other renders</span>\n    <span class=\"p\">),</span>\n\n    <span class=\"s1\">'DEFAULT_PARSER_CLASSES'</span><span class=\"p\">:</span> <span class=\"p\">(</span>\n        <span class=\"c1\"># If you use MultiPartFormParser or FormParser, we also have a camel case version</span>\n        <span class=\"s1\">'djangorestframework_camel_case.parser.CamelCaseFormParser'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'djangorestframework_camel_case.parser.CamelCaseMultiPartParser'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'djangorestframework_camel_case.parser.CamelCaseJSONParser'</span><span class=\"p\">,</span>\n        <span class=\"c1\"># Any other parsers</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">}</span>\n<span class=\"c1\"># ...</span>\n</pre>\n</div>\n<div id=\"swapping-renderer\">\n<h2>Swapping Renderer</h2>\n<p>By default the package uses <cite>rest_framework.renderers.JSONRenderer</cite>. If you want\nto use another renderer (the only possible alternative is\n<cite>rest_framework.renderers.UnicodeJSONRenderer</cite>, only available in DRF &lt; 3.0), you must specify it in your django\nsettings file.</p>\n<pre><span class=\"c1\"># ...</span>\n<span class=\"n\">JSON_CAMEL_CASE</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'RENDERER_CLASS'</span><span class=\"p\">:</span> <span class=\"s1\">'rest_framework.renderers.UnicodeJSONRenderer'</span>\n<span class=\"p\">}</span>\n<span class=\"c1\"># ...</span>\n</pre>\n</div>\n<div id=\"underscoreize-options\">\n<h2>Underscoreize Options</h2>\n<div id=\"no-underscore-before-number\">\n<h3>No Underscore Before Number</h3>\n<p>As raised in <a href=\"https://github.com/krasa/StringManipulation/issues/8#issuecomment-121203018\" rel=\"nofollow\">https://github.com/krasa/StringManipulation/issues/8#issuecomment-121203018</a>\nthere are two conventions of snake case.</p>\n<pre># Case 1 (Package default)\nv2Counter -&gt; v_2_counter\nfooBar2 -&gt; foo_bar_2\n\n# Case 2\nv2Counter -&gt; v2_counter\nfooBar2 -&gt; foo_bar2\n</pre>\n<p>By default, the package uses the first case. To use the second case, specify it in your django settings file.</p>\n<pre><span class=\"n\">REST_FRAMEWORK</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s1\">'JSON_UNDERSCOREIZE'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'no_underscore_before_number'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Alternatively, you can change this behavior on a class level by setting <cite>json_underscoreize</cite>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">djangorestframework_camel_case.parser</span> <span class=\"kn\">import</span> <span class=\"n\">CamelCaseJSONParser</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rest_framework.generics</span> <span class=\"kn\">import</span> <span class=\"n\">CreateAPIView</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">NoUnderscoreBeforeNumberCamelCaseJSONParser</span><span class=\"p\">(</span><span class=\"n\">CamelCaseJSONParser</span><span class=\"p\">):</span>\n    <span class=\"n\">json_underscoreize</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'no_underscore_before_number'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyView</span><span class=\"p\">(</span><span class=\"n\">CreateAPIView</span><span class=\"p\">):</span>\n    <span class=\"n\">queryset</span> <span class=\"o\">=</span> <span class=\"n\">MyModel</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n    <span class=\"n\">serializer_class</span> <span class=\"o\">=</span> <span class=\"n\">MySerializer</span>\n    <span class=\"n\">parser_classes</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">NoUnderscoreBeforeNumberCamelCaseJSONParser</span><span class=\"p\">,)</span>\n</pre>\n</div>\n<div id=\"ignore-fields\">\n<h3>Ignore Fields</h3>\n<p>You can also specify fields which should not have their data changed.\nThe specified field(s) would still have their name change, but there would be no recursion.\nFor example:</p>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"my_key\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"do_not_change\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}}</span>\n</pre>\n<p>Would become:</p>\n<pre><span class=\"p\">{</span><span class=\"s2\">\"myKey\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"doNotChange\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}}</span>\n</pre>\n<p>However, if you set in your settings:</p>\n<pre><span class=\"n\">REST_FRAMEWORK</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s2\">\"JSON_UNDERSCOREIZE\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"c1\"># ...</span>\n        <span class=\"s2\">\"ignore_fields\"</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s2\">\"my_key\"</span><span class=\"p\">,),</span>\n        <span class=\"c1\"># ...</span>\n    <span class=\"p\">},</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">}</span>\n</pre>\n<p>The <cite>my_key</cite> field would not have its data changed:</p>\n<pre><span class=\"p\">{</span><span class=\"s2\">\"myKey\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"do_not_change\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}}</span>\n</pre>\n</div>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>To run the current test suite, execute the following from the root of he project:</p>\n<pre>$ python -m unittest discover\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<ul>\n<li>Free software: BSD license</li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>1.1.3 (2020-03-04)</h3>\n<ul>\n<li>Add ignore_fields option</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.1.2 (2019-10-22)</h3>\n<ul>\n<li>Merge pull request #63</li>\n<li>Merge pull request #70</li>\n<li>Merge pull request #71</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.1.1 (2019-09-09)</h3>\n<ul>\n<li>Add json_underscoreize as CamelCaseJSONParser class attribute #44</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.1.0 (2019-09-09)</h3>\n<p>Long awaited stable release:</p>\n<p>Changes can be viewed:\n<a href=\"https://github.com/vbabiy/djangorestframework-camel-case/compare/e6db468...39ae6bb\" rel=\"nofollow\">https://github.com/vbabiy/djangorestframework-camel-case/compare/e6db468\u202639ae6bb</a></p>\n</div>\n<div id=\"id5\">\n<h3>0.1.0 (2013-12-20)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6746871, "releases": {"1.1.4": [{"comment_text": "", "digests": {"md5": "0c1a5094368c8be9b55cf2862d565df3", "sha256": "3c3f7744e374b51e1e9ab923e101f28f8dac9de8d707c3303172887aa141cbd6"}, "downloads": -1, "filename": "architrave-djangorestframework-camel-case-1.1.4.tar.gz", "has_sig": false, "md5_digest": "0c1a5094368c8be9b55cf2862d565df3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7851, "upload_time": "2020-03-04T10:36:27", "upload_time_iso_8601": "2020-03-04T10:36:27.042344Z", "url": "https://files.pythonhosted.org/packages/b6/9f/3d4a84e1f68ef535ebd5f3eb427e9397af60df048ebcba426be64c0b2ff9/architrave-djangorestframework-camel-case-1.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0c1a5094368c8be9b55cf2862d565df3", "sha256": "3c3f7744e374b51e1e9ab923e101f28f8dac9de8d707c3303172887aa141cbd6"}, "downloads": -1, "filename": "architrave-djangorestframework-camel-case-1.1.4.tar.gz", "has_sig": false, "md5_digest": "0c1a5094368c8be9b55cf2862d565df3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7851, "upload_time": "2020-03-04T10:36:27", "upload_time_iso_8601": "2020-03-04T10:36:27.042344Z", "url": "https://files.pythonhosted.org/packages/b6/9f/3d4a84e1f68ef535ebd5f3eb427e9397af60df048ebcba426be64c0b2ff9/architrave-djangorestframework-camel-case-1.1.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:23 2020"}