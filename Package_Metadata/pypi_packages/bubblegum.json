{"info": {"author": "azuline", "author_email": "azuline@riseup.net", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# bubblegum\n\n[![Build Status](https://travis-ci.org/azuline/bubblegum.svg?branch=master)](https://travis-ci.org/azuline/bubblegum)\n[![Pypi](https://img.shields.io/pypi/v/bubblegum.svg)](https://pypi.python.org/pypi/bubblegum)\n[![Pyversions](https://img.shields.io/pypi/pyversions/bubblegum.svg)](https://pypi.python.org/pypi/bubblegum)\n\nbubblegum is a script to make and manage uploads to image hosts. Several image\nhosts are supported, to which one can directly upload images or rehost images\nby URL.\n\n## Usage\n\nBasic image uploading can be done via the `bubblegum upload` command. To upload\na local image file, run `bubblegum upload /path/to/image.png`. To rehost a URL,\nrun `bubblegum upload https://this.url.serves.an/image.png`.\n\nThe default image host is https://vgy.me, as it does not require client\nauthorization. The image host that will be used can be changed with the\n`--host` flag in the upload command, e.g. `bubblegum upload --host=imgur.com\n/path/to/image.png`. The default image host can also be changed in the config\nfile. Host options can be viewed with the `bubblegum upload --help` command.\n\nUploading/rehosting multiple images simultaneously is also supported, via\nmultiple arguments to the `upload` command. `bubblegum upload a.jpg b.png` will\nupload both images simultaneously. By default, 4 workers are spawned for image\nuploading. The number of workers can be increased or decreased in the config.\n\nA history of uploaded images can be viewed with `bubblegum history`. The\noutputted list can be manipulated with the `--sort`, `--limit` and `--offset`\noptions.\n\n### Config\n\nThe configuration can be edited with the `bubblegum config` command. A default\nconfiguration file is created when the script first runs.\n\n#### Image Host Profiles\n\nbubblegum includes loaded profiles for the following two hosts by default:\n\n- `imgur.com` (https://imgur.com)\n- `vgy.me` (https://vgy.me)\n\nOther image host profiles can be found in the `extra_profiles/` directory.\n\nImage host profiles can be created/added to the application by adding a profile\ndictionary to the list of `profiles` in your config file. Each profile must\ncontain 8 key/value pairs:\n\n- `image_host_name` - The name of the image host, for use with the `--host=`\n  option.\n- `image_host_url` - The URL of the host's image uploading endpoint.\n- `request_headers` - Extra headers to include in the upload request.\n- `upload_form_file_argument` - The name of the key for the image file in the\n  form.\n- `upload_form_data_argument` - A dictionary sent as the form data in a file\n  upload.\n- `rehost_form_url_argument` - If the host supports URL rehosting, the name of\n  the key for the URL in the form. Otherwise, set it to `null`.\n- `rehost_form_data_argument` - A dictionary sent as the form data in a URL\n  rehost.\n- `json_response` - A boolean indicating whether or not the returned data is\n  JSON or not. If True, the `data response` variable will be the deserialized\n  JSON. If False, the `data` request response variable will be the response\n  text.\n- `image_url_template` - A string of an f-string (yeah, sounds confusing) for\n  the image URL. Can access the request response via the `data` variable.\n- `deletion_url_template` - A string of an f-string for the deletion URL. Can\n  access the request response via the `data` variable.\n\n### Imgur\n\nTo upload to imgur, a Client ID must be created and supplied. Details on\ncreating a Client ID can be found at\nhttps://apidocs.imgur.com/#authorization-and-oauth. Once created, the Client ID\ncan be added to the config, as the `imgur_client_id`.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/azuline/bubblegum", "keywords": "image-uploader", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "bubblegum", "package_url": "https://pypi.org/project/bubblegum/", "platform": "", "project_url": "https://pypi.org/project/bubblegum/", "project_urls": {"Homepage": "https://github.com/azuline/bubblegum", "Repository": "https://github.com/azuline/bubblegum"}, "release_url": "https://pypi.org/project/bubblegum/1.0.0/", "requires_dist": ["click (>=7.0,<8.0)", "requests (>=2.0,<3.0)", "pyperclip (>=1.7,<2.0)", "appdirs (>=1.4,<2.0)"], "requires_python": ">=3.6,<4.0", "summary": "A script to make and manage uploads to image hosts.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>bubblegum</h1>\n<p><a href=\"https://travis-ci.org/azuline/bubblegum\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c95297a2dfef844b8d8c848171ae33b4c81863e9/68747470733a2f2f7472617669732d63692e6f72672f617a756c696e652f627562626c6567756d2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/bubblegum\" rel=\"nofollow\"><img alt=\"Pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ec6ca8b19069142fd82fd69beaa32e2b0e38fa5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f627562626c6567756d2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/bubblegum\" rel=\"nofollow\"><img alt=\"Pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aff8189327d09e4d29277ab747172a5d26611f29/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f627562626c6567756d2e737667\"></a></p>\n<p>bubblegum is a script to make and manage uploads to image hosts. Several image\nhosts are supported, to which one can directly upload images or rehost images\nby URL.</p>\n<h2>Usage</h2>\n<p>Basic image uploading can be done via the <code>bubblegum upload</code> command. To upload\na local image file, run <code>bubblegum upload /path/to/image.png</code>. To rehost a URL,\nrun <code>bubblegum upload https://this.url.serves.an/image.png</code>.</p>\n<p>The default image host is <a href=\"https://vgy.me\" rel=\"nofollow\">https://vgy.me</a>, as it does not require client\nauthorization. The image host that will be used can be changed with the\n<code>--host</code> flag in the upload command, e.g. <code>bubblegum upload --host=imgur.com /path/to/image.png</code>. The default image host can also be changed in the config\nfile. Host options can be viewed with the <code>bubblegum upload --help</code> command.</p>\n<p>Uploading/rehosting multiple images simultaneously is also supported, via\nmultiple arguments to the <code>upload</code> command. <code>bubblegum upload a.jpg b.png</code> will\nupload both images simultaneously. By default, 4 workers are spawned for image\nuploading. The number of workers can be increased or decreased in the config.</p>\n<p>A history of uploaded images can be viewed with <code>bubblegum history</code>. The\noutputted list can be manipulated with the <code>--sort</code>, <code>--limit</code> and <code>--offset</code>\noptions.</p>\n<h3>Config</h3>\n<p>The configuration can be edited with the <code>bubblegum config</code> command. A default\nconfiguration file is created when the script first runs.</p>\n<h4>Image Host Profiles</h4>\n<p>bubblegum includes loaded profiles for the following two hosts by default:</p>\n<ul>\n<li><code>imgur.com</code> (<a href=\"https://imgur.com\" rel=\"nofollow\">https://imgur.com</a>)</li>\n<li><code>vgy.me</code> (<a href=\"https://vgy.me\" rel=\"nofollow\">https://vgy.me</a>)</li>\n</ul>\n<p>Other image host profiles can be found in the <code>extra_profiles/</code> directory.</p>\n<p>Image host profiles can be created/added to the application by adding a profile\ndictionary to the list of <code>profiles</code> in your config file. Each profile must\ncontain 8 key/value pairs:</p>\n<ul>\n<li><code>image_host_name</code> - The name of the image host, for use with the <code>--host=</code>\noption.</li>\n<li><code>image_host_url</code> - The URL of the host's image uploading endpoint.</li>\n<li><code>request_headers</code> - Extra headers to include in the upload request.</li>\n<li><code>upload_form_file_argument</code> - The name of the key for the image file in the\nform.</li>\n<li><code>upload_form_data_argument</code> - A dictionary sent as the form data in a file\nupload.</li>\n<li><code>rehost_form_url_argument</code> - If the host supports URL rehosting, the name of\nthe key for the URL in the form. Otherwise, set it to <code>null</code>.</li>\n<li><code>rehost_form_data_argument</code> - A dictionary sent as the form data in a URL\nrehost.</li>\n<li><code>json_response</code> - A boolean indicating whether or not the returned data is\nJSON or not. If True, the <code>data response</code> variable will be the deserialized\nJSON. If False, the <code>data</code> request response variable will be the response\ntext.</li>\n<li><code>image_url_template</code> - A string of an f-string (yeah, sounds confusing) for\nthe image URL. Can access the request response via the <code>data</code> variable.</li>\n<li><code>deletion_url_template</code> - A string of an f-string for the deletion URL. Can\naccess the request response via the <code>data</code> variable.</li>\n</ul>\n<h3>Imgur</h3>\n<p>To upload to imgur, a Client ID must be created and supplied. Details on\ncreating a Client ID can be found at\n<a href=\"https://apidocs.imgur.com/#authorization-and-oauth\" rel=\"nofollow\">https://apidocs.imgur.com/#authorization-and-oauth</a>. Once created, the Client ID\ncan be added to the config, as the <code>imgur_client_id</code>.</p>\n\n          </div>"}, "last_serial": 6637589, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "8b5f1660276360aba10fdb2351a9902d", "sha256": "68ac4d74d46217bf74ee1b8ac879a898da015ed971f185cf65d42422d9f99f26"}, "downloads": -1, "filename": "bubblegum-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8b5f1660276360aba10fdb2351a9902d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 12777, "upload_time": "2020-02-15T20:25:37", "upload_time_iso_8601": "2020-02-15T20:25:37.460610Z", "url": "https://files.pythonhosted.org/packages/d5/ce/f348d8e69cc9de87b0155f72d1b0a00bec131ff2992f38f79c2bc340a1ad/bubblegum-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "588e66a0c9fdba06c27a1d20393ff516", "sha256": "2349afe7191cb25d7f17406315f90dcd4d87c240507418d79d71ab762176e171"}, "downloads": -1, "filename": "bubblegum-1.0.0.tar.gz", "has_sig": false, "md5_digest": "588e66a0c9fdba06c27a1d20393ff516", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 12301, "upload_time": "2020-02-15T20:25:38", "upload_time_iso_8601": "2020-02-15T20:25:38.466645Z", "url": "https://files.pythonhosted.org/packages/30/35/c349c7f812ff41324874a62ef8d99d1f699c0443fcaad5a958c3b23668e9/bubblegum-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8b5f1660276360aba10fdb2351a9902d", "sha256": "68ac4d74d46217bf74ee1b8ac879a898da015ed971f185cf65d42422d9f99f26"}, "downloads": -1, "filename": "bubblegum-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8b5f1660276360aba10fdb2351a9902d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 12777, "upload_time": "2020-02-15T20:25:37", "upload_time_iso_8601": "2020-02-15T20:25:37.460610Z", "url": "https://files.pythonhosted.org/packages/d5/ce/f348d8e69cc9de87b0155f72d1b0a00bec131ff2992f38f79c2bc340a1ad/bubblegum-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "588e66a0c9fdba06c27a1d20393ff516", "sha256": "2349afe7191cb25d7f17406315f90dcd4d87c240507418d79d71ab762176e171"}, "downloads": -1, "filename": "bubblegum-1.0.0.tar.gz", "has_sig": false, "md5_digest": "588e66a0c9fdba06c27a1d20393ff516", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 12301, "upload_time": "2020-02-15T20:25:38", "upload_time_iso_8601": "2020-02-15T20:25:38.466645Z", "url": "https://files.pythonhosted.org/packages/30/35/c349c7f812ff41324874a62ef8d99d1f699c0443fcaad5a958c3b23668e9/bubblegum-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:08 2020"}