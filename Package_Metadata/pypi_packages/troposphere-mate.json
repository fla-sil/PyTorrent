{"info": {"author": "Sanhe Hu", "author_email": "husanhe@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": ".. image:: https://readthedocs.org/projects/troposphere_mate/badge/?version=latest\n    :target: https://troposphere_mate.readthedocs.io/index.html\n    :alt: Documentation Status\n\n.. image:: https://travis-ci.org/MacHu-GWU/troposphere_mate-project.svg?branch=master\n    :target: https://travis-ci.org/MacHu-GWU/troposphere_mate-project?branch=master\n\n.. image:: https://codecov.io/gh/MacHu-GWU/troposphere_mate-project/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/MacHu-GWU/troposphere_mate-project\n\n.. image:: https://img.shields.io/pypi/v/troposphere_mate.svg\n    :target: https://pypi.python.org/pypi/troposphere_mate\n\n.. image:: https://img.shields.io/pypi/l/troposphere_mate.svg\n    :target: https://pypi.python.org/pypi/troposphere_mate\n\n.. image:: https://img.shields.io/pypi/pyversions/troposphere_mate.svg\n    :target: https://pypi.python.org/pypi/troposphere_mate\n\n.. image:: https://img.shields.io/badge/STAR_Me_on_GitHub!--None.svg?style=social\n    :target: https://github.com/MacHu-GWU/troposphere_mate-project\n\n------\n\n\n.. image:: https://img.shields.io/badge/Link-Document-blue.svg\n      :target: https://troposphere_mate.readthedocs.io/index.html\n\n.. image:: https://img.shields.io/badge/Link-API-blue.svg\n      :target: https://troposphere_mate.readthedocs.io/py-modindex.html\n\n.. image:: https://img.shields.io/badge/Link-Source_Code-blue.svg\n      :target: https://troposphere_mate.readthedocs.io/py-modindex.html\n\n.. image:: https://img.shields.io/badge/Link-Install-blue.svg\n      :target: `install`_\n\n.. image:: https://img.shields.io/badge/Link-GitHub-blue.svg\n      :target: https://github.com/MacHu-GWU/troposphere_mate-project\n\n.. image:: https://img.shields.io/badge/Link-Submit_Issue-blue.svg\n      :target: https://github.com/MacHu-GWU/troposphere_mate-project/issues\n\n.. image:: https://img.shields.io/badge/Link-Request_Feature-blue.svg\n      :target: https://github.com/MacHu-GWU/troposphere_mate-project/issues\n\n.. image:: https://img.shields.io/badge/Link-Download-blue.svg\n      :target: https://pypi.org/pypi/troposphere_mate#files\n\n\nWelcome to ``troposphere_mate`` Documentation\n==============================================================================\n\n``troposphere_mate`` is **a productive Pythonic CloudFormation Orchestration Tool. It gives you possibility that makes Cloudformation way more powerful than before, easier to maintain big template, or even bring any custom feature to CloudFormation**.\n\n.. contents::\n    :depth: 1\n    :local:\n\n`troposphere <https://github.com/cloudtools/troposphere>`_ is a great Python library allow you to define AWS CloudFormation Resource in Python Class. **But due to its implementation, IDLE can't use attribute auto hint, and Type hint doesn't work as well**. \n\n``troposphere_mate`` provides **API exactly same as** ``troposphere``, and comes with **Properties auto hint** and **type hint**. ``troposphere_mate`` is just a thin wrapper layer on top of ``troposphere``. Any ``troposphere_mate.AWSObject`` is just subclass of ``troposphere.AWSObject``.\n\nMy goal is 100% API compatible to ``troposphere``. Basically, you just need to replace ``from troposphere import Template, Ref, Tags, GetAtt`` to ``from troposphere_mate import Template, Ref, Tags, GetAtt``.\n\n**Here's how it looks like in IDLE**:\n\n.. image:: https://user-images.githubusercontent.com/6800411/60903484-686b1b80-a23f-11e9-8d20-22c989339cd0.png\n    :width: 600 px\n\n.. image:: https://user-images.githubusercontent.com/6800411/60776028-e40d8100-a0f6-11e9-9cae-98af25cbd9b7.png\n    :width: 600 px\n\n.. image:: https://user-images.githubusercontent.com/6800411/60776079-3484de80-a0f7-11e9-81b8-c4b2f1c4b45e.png\n    :width: 600 px\n\nOf course you can do:\n\n.. code-block:: python\n\n    ec2 = ec2.Instance(\n        title=\"MyEc2Instance),\n        InstanceType=\"t2.micro\",\n        Tags=Tags(\n            Creator=\"MyName\",\n            Name=\"PlayGround\",\n        ),\n        ...\n    )\n\nHow ``troposphere`` implements:\n\n.. code-block:: python\n\n    # content of troposphere.ec2.py\n    class Instance(AWSObject):\n        resource_type = \"AWS::EC2::Instance\"\n\n        props = {\n            'InstanceType': (basestring, False),\n            'SubnetId': (basestring, False),\n            'KeyName': (basestring, False),\n            ...\n        }\n\nHow ``troposphere_mate`` implements:\n\n.. code-block:: python\n\n    # content of troposphere_mate.ec2.py\n    class Instance(troposphere.ec2.Instance, Mixin):\n        def __init__(self,\n                     title, # type: str\n                     template=None, # type: Template\n                     validation=True, # type: bool\n                     InstanceType=NOTHING, # type: str\n                     SubnetId=NOTHING, # type: Union[str, AWSHelperFn]\n                     KeyName=NOTHING, # type: Union[str, AWSHelperFn]\n                     ...\n                     **kwargs):\n            ...\n\n\nAdditional Powerful Features\n------------------------------------------------------------------------------\n\n.. contents::\n    :depth: 1\n    :local:\n\n\nBatch Tagging\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSometimes you want to **apply a set of common tags to all AWS Resource** defined in a Template. ``trpoosphere_mate`` allows you to:\n\n- apply common tags to specified list of AWS Resource or all of Resources in a Template.\n- custom tag creation logic function, let's say based on the Resource Type.\n- allow you to choose the merge ``existing tag`` into ``common tag`` or reversely.\n\nExample:\n\n.. code-block:: python\n\n    from troposphere_mate import Template, ec2, Tags,\n    from functools import partial\n\n    tpl = Template()\n\n    my_vpc = ec2.VPC(\n        \"MyVPC\",\n        template=tpl,\n        CidrBlock=\"10.0.0.0/16\",\n        Tags=Tags(\n            Creator=\"Alice\"\n        )\n    )\n    my_sg = ec2.SecurityGroup(\n        \"MySG\",\n        template=tpl,\n        GroupDescription=\"My\",\n        GroupName=\"MySG\",\n        VpcId=Ref(my_vpc),\n    )\n    my_subnet = ec2.Subnet(\n        \"MySubnet\",\n        template=tpl,\n        CidrBlock=\"10.0.1.0/24\",\n        VpcId=Ref(my_vpc),\n    )\n\n    # custom logic to create tag if it is a SecurityGroup\n    def get_name(resource, project):\n        if resource.resource_type == \"AWS::EC2::SecurityGroup\":\n            return \"{}/sg/{}\".format(project, resource.GroupName)\n\n    common_tags = dict(\n        Project=\"my-project\",\n        Name=functools.partial(get_name, project=\"my-project\"),\n        Creator=\"Bob\",\n    )\n\n    # apply common tags to all aws resource\n    tpl.update_tags(common_tags, overwrite=False)\n\n    assert tags_list_to_dct(tpl.to_dict()[\"Resources\"][\"MyVPC\"][\"Properties\"][\"Tags\"]) == dict(\n        Project=\"my-project\",\n        Creator=\"Alice\",\n    )\n    assert tags_list_to_dct(tpl.to_dict()[\"Resources\"][\"MySG\"][\"Properties\"][\"Tags\"]) == dict(\n        Project=\"my-project\",\n        Name=\"my-project/sg/MySG\",\n        Creator=\"Bob\",\n    )\n\nAny AWS Resource object and Template object has a utility method ``.update_tags()``\n\n.. code-block:: python\n\n    # by default overwrite = False, so common tags doesn't overwrite existing tags\n    # update single resource\n    my_ec2.update_tags({\"Project\": \"my-project\"})\n    # update entire template\n    tpl.update_taggs({\"Project\": \"my-project\"})\n\n\nAuto Reference\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSometimes, you just know you need to associate one AWS Resource to another, but you have to lookup the Document to find out which Property and what is the Syntax to do that.\n\nFor example, **if you want to associate an IAM Role, VPC Subnet, Security Group to a Lambda Function, how do you know whether it is REF or GetAtt ARN can get you the resource arn?**.\n\n**With troposphere_mate, it's just one line of code**:\n\n.. code-block:: python\n\n    from troposphere_mate import iam, awslambda, associate\n\n    iam_role = iam.Role(\"IamRole\")\n    lbd_func = awslambda.Function(\"LbdFunc\")\n    associate(iam_role, lbd_func)\n\n\nLet's take a look at a full example. Suppose you already have:\n\n.. code-block:: python\n\n    from troposphere_mate import ec2, awslambda, iam\n\n    tpl = Template()\n\n    iam_role = iam.Role(\n        title=\"MyIamRole\",\n        template=tpl,\n        RoleName=\"lambda-basic-execution\",\n        AssumeRolePolicyDocument={},\n    )\n\n    vpc = ec2.VPC(\n        title=\"MyVPC\",\n        template=tpl,\n        CidrBlock=\"10.53.0.0/16\"\n    )\n\n    public_subnet1 = ec2.Subnet(\n        title=\"PublicSubnet1\",\n        template=tpl,\n        CidrBlock=\"10.53.0.0/16\",\n        VpcId=Ref(vpc)\n    )\n    public_subnet2 = ec2.Subnet(\n        title=\"PublicSubnet2\",\n        template=tpl,\n        CidrBlock=\"10.53.2.0/16\",\n        VpcId=Ref(vpc)\n    )\n\n    sg = ec2.SecurityGroup(\n        title=\"LambdaSG\",\n        template=tpl,\n        GroupDescription=\"Just a SG\"\n    )\n\n    lbd_func = awslambda.Function(\n        title=\"MyFunc\",\n        template=tpl,\n        Code=awslambda.Code(\n            S3Bucket=\"my-bucket\",\n            S3Key=\"0.0.1.zip\",\n        ),\n        Handler=\"my_func.handler\",\n        Role=\"arn:aws:iam::111122223333:role/todo\",\n        Runtime=\"python3.6\"\n    )\n\n\nWith ``troposphere_mate``, you just need to do this:\n\n.. code-block:: python\n\n    from troposphere_mate import associate\n\n    associate(lbd_func, iam_role) # order doesn't matter, associate(iam_role, lbd_func)\n    associate(lbd_func, sg)\n    associate(lbd_func, public_subnet1)\n    associate(lbd_func, public_subnet2)\n\nIn other word, **you don't need to remember the properties and the syntax**.\n\n.. code-block:: python\n\n    from troposphere import Ref\n    from troposphere import awslambda\n\n    lbd_func.Role = Ref(iam_role)\n    lbd_func.VpcConfig = awslambda.VPCConfig(\n        SecurityGroupIds=[\n            Ref(sg)\n        ],\n        SubnetIds=[\n            Ref(public_subnet1),\n            Ref(public_subnet2),\n        ]\n    )\n\nIf you want to contribute your auto-associate logic to ``troposphere_mate``, please submit `issue <https://github.com/MacHu-GWU/troposphere_mate-project/issues>`_ or help me to improve. Here's an `example <https://github.com/MacHu-GWU/troposphere_mate-project/blob/master/troposphere_mate/core/associate.py>`_.\n\n\nReturn Values Hint\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe Cloudformation return values API is NOT consistent! Sometimes you have no idea which syntax, ``Ref`` or ``GetAtt Arn`` gives you the real Arn. Sometimes the Ref, sometimes the GetAtt.\n\n``troposphere_mate`` **provides tons of property method allows you to quickly access the value in form of intrinsic function when you need to reference it**.\n\n.. image:: https://user-images.githubusercontent.com/6800411/74405874-308f0c80-4dfc-11ea-9c93-98ae366e4b71.png\n    :width: 600 px\n\n\nRemove Resource and auto-remove dependent resource and Output\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you declared ``DependsOn`` in AWS Resource or AWS Output (**YES, ``troposphere_mate`` supports ``Output.DependsOn`` too!**), when you remove a resource, it also removes all other resources and outputs depends on this one, because it no longer be able to correctly created.\n\n**You will never leave a 'cracked' template**.\n\nIn this example, you will see that, since Z depends on Y, Y depends on X. If you removed X, then X, Y, Z and their outputs are all gone!\n\n.. code-block:: python\n\n    from troposphere_mate import Template, apigateway, Output, Ref\n\n    tpl = Template()\n\n    rest_api_x = apigateway.RestApi(\n        \"RestApiX\",\n        template=tpl,\n        Name=\"MyRestApiX\",\n    )\n    rest_api_y = apigateway.RestApi(\n        \"RestApiY\",\n        template=tpl,\n        Name=\"MyRestApiY\",\n        DependsOn=rest_api_x,\n    )\n    rest_api_z = apigateway.RestApi(\n        \"RestApiZ\",\n        template=tpl,\n        Name=\"MyRestApiZ\",\n        DependsOn=rest_api_y\n    )\n\n    output_rest_api_x_id = Output(\n        \"RestApiXId\",\n        Value=Ref(rest_api_x),\n        DependsOnself.rest_api_x,\n    )\n    tpl.add_output(output_rest_api_x_id)\n\n    output_rest_api_y_id = Output(\n        \"RestApiYId\",\n        Value=Ref(rest_api_y),\n        DependsOn=rest_api_y,\n    )\n    tpl.add_output(output_rest_api_y_id)\n\n    output_rest_api_z_id = Output(\n        \"RestApiZId\",\n        Value=Ref(rest_api_z),\n        DependsOn=rest_api_z,\n    )\n    tpl.add_output(output_rest_api_z_id)\n\n    tpl.remove_resource(rest_api_x)\n\n\nPartial Deployment\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAt most of the times, eventually your cloudformation template becomes very big. There are some common use case in development and deployment:\n\n1. **You want to reuse the AWS Resource from an Big Architect Design, only deploy selected AWS Resource, without editing the template.**\n2. **You want to gradually deploy AWS Resource instead of deploy everything in one command, while you are doing development or debugging, without editing the template.**\n\n`troposphere_mate <https://github.com/MacHu-GWU/troposphere_mate-project>`_ **allows you to define labels for your AWS Resource** in ``Metadata`` field, then you can use ``Template.remove_resource_by_label(label=\"a label\", label_field_in_metadata=\"labels\")`` method to **remove group of AWS Resource from your template (mostly for the same tier)**.\n\nMore importantly, `troposphere_mate <https://github.com/MacHu-GWU/troposphere_mate-project>`_ **allows you to explicitly defines dependent AWS Resource for Output object, so when you remove the resource, related output will automatically removed**, which is NOT supported by native CloudFormation or ``troposphere``.\n\nExample:\n\n.. code-block:: python\n\n    from troposphere_mate import ec2, rds\n\n    class Labels:\n        tier1_vpc = \"tier1_vpc\"\n        vpc = \"vpc\"\n        sg = \"security_group\"\n        tier2_rds = \"tier2_rds\"\n        db_subnet_group = \"db_subnet_group\"\n        db_instance = \"db_instance\"\n\n    tpl = Template()\n\n    vpc = ec2.VPC(\n        \"VPC\",\n        template=tpl,\n        Metadata={\"labels\": [Labels.tier1_vpc, Labels.vpc]},\n        ...\n    )\n\n    sg_ssh = ec2.SecurityGroup(\n        \"SecurityGroupSSH\",\n        template=tpl,\n        Metadata={\"labels\": [Labels.tier1_vpc, Labels.sg]},\n        ...\n    )\n\n    rds_db_subnet_group = rds.DBSubnetGroup(\n        \"DBInstance\",\n        template=tpl,\n        Metadata={\"labels\": [Labels.tier2_rds, Labels.db_subnet_group]}\n    )\n\n    rds_instance = rds.DBInstance(\n        \"DBInstance\",\n        template=tpl,\n        Metadata={\"labels\": [Labels.tier2_rds, Labels.db_instance]}\n    )\n\n    tpl.add_output(\n        Output(\n            \"VPC\",\n            Description=\"VPC ID\",\n            Value=Ref(vpc),\n            Export=Export(\"vpc-id\")),\n            DependsOn=[vpc,], # specify the dependent AWS Resource, so when you remove the resource, related output will automatically removed\n        ),\n    )\n\n    assert len(tpl.resources) == 4\n    assert len(tpl.outputs) == 1\n\n    tpl.remove_resource_by_label(Labels.db_instance)\n    assert len(tpl.resources) == 3\n\n    tpl.remove_resource_by_label(Labels.tier2_rds)\n    assert len(tpl.resources) == 2\n\n    tpl.remove_resource_by_label(Labels.tier1_vpc)\n    assert len(tpl.resources) == 0\n    assert len(tpl.outputs) == 0\n\n\nDeploy from Python\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe boto3 api doesn't come with ``aws cloudformation package`` api. But troposphere_mate supports ``package`` and Nested Stack!\n\n.. code-block:: python\n\n    import boto3\n    from troposphere_mate import Template, StackManager\n\n    boto_ses = boto3.Session(profile_name=\"my-profile\")\n    bucket_name = \"my-cloudformation-upload-bucket\"\n\n    stack_manager = StackManager(\n        boto_ses=boto_ses,\n        cft_bucket=bucket_name,\n    )\n\n    template = Template()\n    ... write your cloudformation template in troposphere_mate\n\n    stack_manager.deploy(\n        template,\n        stack_name=\"my-stack-dev\",\n    )\n\nnested stack docs todo ...\n\n\n.. _install:\n\nInstall\n------------------------------------------------------------------------------\n\n``troposphere_mate`` is released on PyPI, so all you need is:\n\n.. code-block:: console\n\n    $ pip install troposphere_mate\n\nTo upgrade to latest version:\n\n.. code-block:: console\n\n    $ pip install --upgrade troposphere_mate\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://pypi.python.org/pypi/troposphere_mate/0.0.14#downloads", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MacHu-GWU/", "keywords": "", "license": "MIT", "maintainer": "Unknown", "maintainer_email": "", "name": "troposphere-mate", "package_url": "https://pypi.org/project/troposphere-mate/", "platform": "Windows", "project_url": "https://pypi.org/project/troposphere-mate/", "project_urls": {"Download": "https://pypi.python.org/pypi/troposphere_mate/0.0.14#downloads", "Homepage": "https://github.com/MacHu-GWU/"}, "release_url": "https://pypi.org/project/troposphere-mate/0.0.14/", "requires_dist": ["troposphere (==2.5.3)", "typing", "picage", "pathlib-mate", "superjson", "configirl", "typing ; python_version == \"2.7\"", "sphinx (==1.8.1) ; extra == 'docs'", "sphinx-rtd-theme ; extra == 'docs'", "sphinx-jinja ; extra == 'docs'", "sphinx-copybutton ; extra == 'docs'", "docfly (>=0.0.17) ; extra == 'docs'", "rstobj (>=0.0.5) ; extra == 'docs'", "pygments ; extra == 'docs'", "pytest (==3.2.3) ; extra == 'tests'", "pytest-cov (==2.5.1) ; extra == 'tests'", "pathlib-mate ; extra == 'tests'", "picage ; extra == 'tests'", "jinja2 ; extra == 'tests'"], "requires_python": "", "summary": "Orchestrate AWS Resource in Pythonic Way.", "version": "0.0.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://troposphere_mate.readthedocs.io/index.html\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6eddf3cda10a18579e02b8d86633859c48a1b631/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f74726f706f7370686572655f6d6174652f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.org/MacHu-GWU/troposphere_mate-project?branch=master\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/MacHu-GWU/troposphere_mate-project.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/09543e584b77305f52cfa3d84b6d3f6c39e769cf/68747470733a2f2f7472617669732d63692e6f72672f4d616348752d4757552f74726f706f7370686572655f6d6174652d70726f6a6563742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/MacHu-GWU/troposphere_mate-project\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/MacHu-GWU/troposphere_mate-project/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/46cd923bb91d47846c6a01c08c11cb3499b98c29/68747470733a2f2f636f6465636f762e696f2f67682f4d616348752d4757552f74726f706f7370686572655f6d6174652d70726f6a6563742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/troposphere_mate\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/troposphere_mate.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f75c246103ff867559d10e14855695a5c978c9f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f74726f706f7370686572655f6d6174652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/troposphere_mate\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/troposphere_mate.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e017fac3b4594be1908918d18dd27a64e114de2a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f74726f706f7370686572655f6d6174652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/troposphere_mate\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/troposphere_mate.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f486977996e8fff5aeb4c96786fe419e23edb5b3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f74726f706f7370686572655f6d6174652e737667\"></a>\n<a href=\"https://github.com/MacHu-GWU/troposphere_mate-project\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/STAR_Me_on_GitHub!--None.svg?style=social\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88cea09b708639318e023fda9ac4a3d3dbd4913e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f535441525f4d655f6f6e5f476974487562212d2d4e6f6e652e7376673f7374796c653d736f6369616c\"></a>\n<hr class=\"docutils\">\n<a href=\"https://troposphere_mate.readthedocs.io/index.html\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Document-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72169197d626e9423d781eb78da036701b9d9a98/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d446f63756d656e742d626c75652e737667\"></a>\n<a href=\"https://troposphere_mate.readthedocs.io/py-modindex.html\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-API-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b5c039f4ebca0e2653e6f930d982271fae9b6c62/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d4150492d626c75652e737667\"></a>\n<a href=\"https://troposphere_mate.readthedocs.io/py-modindex.html\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Source_Code-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0d422b71b3e2a98ca914c3f9b07a6fd0ccbf6f5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d536f757263655f436f64652d626c75652e737667\"></a>\n<a href=\"#install\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Install-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7bf0296a17baff5c64335b1557b8c99de518863/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d496e7374616c6c2d626c75652e737667\"></a>\n<a href=\"https://github.com/MacHu-GWU/troposphere_mate-project\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-GitHub-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40760fc6f9c2f034b2f44fb3441622fd43d33f71/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d4769744875622d626c75652e737667\"></a>\n<a href=\"https://github.com/MacHu-GWU/troposphere_mate-project/issues\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Submit_Issue-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aaf85195ff7754d210475d1a26ab797376626e70/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d5375626d69745f49737375652d626c75652e737667\"></a>\n<a href=\"https://github.com/MacHu-GWU/troposphere_mate-project/issues\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Request_Feature-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/028fe51c7aa4c503e85a901affc8519722c888fd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d526571756573745f466561747572652d626c75652e737667\"></a>\n<a href=\"https://pypi.org/pypi/troposphere_mate#files\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Download-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01616d53c2f6efee987f922046ed988550b12ff9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d446f776e6c6f61642d626c75652e737667\"></a>\n<div id=\"welcome-to-troposphere-mate-documentation\">\n<h2>Welcome to <tt>troposphere_mate</tt> Documentation</h2>\n<p><tt>troposphere_mate</tt> is <strong>a productive Pythonic CloudFormation Orchestration Tool. It gives you possibility that makes Cloudformation way more powerful than before, easier to maintain big template, or even bring any custom feature to CloudFormation</strong>.</p>\n<div id=\"contents\">\n<ul>\n<li><a href=\"#additional-powerful-features\" id=\"id4\" rel=\"nofollow\">Additional Powerful Features</a></li>\n<li><a href=\"#id3\" id=\"id5\" rel=\"nofollow\">Install</a></li>\n</ul>\n</div>\n<p><a href=\"https://github.com/cloudtools/troposphere\" rel=\"nofollow\">troposphere</a> is a great Python library allow you to define AWS CloudFormation Resource in Python Class. <strong>But due to its implementation, IDLE can\u2019t use attribute auto hint, and Type hint doesn\u2019t work as well</strong>.</p>\n<p><tt>troposphere_mate</tt> provides <strong>API exactly same as</strong> <tt>troposphere</tt>, and comes with <strong>Properties auto hint</strong> and <strong>type hint</strong>. <tt>troposphere_mate</tt> is just a thin wrapper layer on top of <tt>troposphere</tt>. Any <tt>troposphere_mate.AWSObject</tt> is just subclass of <tt>troposphere.AWSObject</tt>.</p>\n<p>My goal is 100% API compatible to <tt>troposphere</tt>. Basically, you just need to replace <tt>from troposphere import Template, Ref, Tags, GetAtt</tt> to <tt>from troposphere_mate import Template, Ref, Tags, GetAtt</tt>.</p>\n<p><strong>Here\u2019s how it looks like in IDLE</strong>:</p>\n<img alt=\"https://user-images.githubusercontent.com/6800411/60903484-686b1b80-a23f-11e9-8d20-22c989339cd0.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/67f4e573a588a7a853e778e6a0108fa143ae5b5c/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f363830303431312f36303930333438342d36383662316238302d613233662d313165392d386432302d3232633938393333396364302e706e67\" width=\"600px\">\n<img alt=\"https://user-images.githubusercontent.com/6800411/60776028-e40d8100-a0f6-11e9-9cae-98af25cbd9b7.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b36333ec06adabb764e31e7bc6d10a650eb7f4e/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f363830303431312f36303737363032382d65343064383130302d613066362d313165392d396361652d3938616632356362643962372e706e67\" width=\"600px\">\n<img alt=\"https://user-images.githubusercontent.com/6800411/60776079-3484de80-a0f7-11e9-81b8-c4b2f1c4b45e.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a50008de421dcdc7a2304f2a3ce3bd6b1f72194/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f363830303431312f36303737363037392d33343834646538302d613066372d313165392d383162382d6334623266316334623435652e706e67\" width=\"600px\">\n<p>Of course you can do:</p>\n<pre><span class=\"n\">ec2</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Instance</span><span class=\"p\">(</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"MyEc2Instance),</span>\n    <span class=\"n\">InstanceType</span><span class=\"o\">=</span><span class=\"s2\">\"t2.micro\"</span><span class=\"p\">,</span>\n    <span class=\"n\">Tags</span><span class=\"o\">=</span><span class=\"n\">Tags</span><span class=\"p\">(</span>\n        <span class=\"n\">Creator</span><span class=\"o\">=</span><span class=\"s2\">\"MyName\"</span><span class=\"p\">,</span>\n        <span class=\"n\">Name</span><span class=\"o\">=</span><span class=\"s2\">\"PlayGround\"</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n<p>How <tt>troposphere</tt> implements:</p>\n<pre><span class=\"c1\"># content of troposphere.ec2.py</span>\n<span class=\"k\">class</span> <span class=\"nc\">Instance</span><span class=\"p\">(</span><span class=\"n\">AWSObject</span><span class=\"p\">):</span>\n    <span class=\"n\">resource_type</span> <span class=\"o\">=</span> <span class=\"s2\">\"AWS::EC2::Instance\"</span>\n\n    <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'InstanceType'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">basestring</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">),</span>\n        <span class=\"s1\">'SubnetId'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">basestring</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">),</span>\n        <span class=\"s1\">'KeyName'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">basestring</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">),</span>\n        <span class=\"o\">...</span>\n    <span class=\"p\">}</span>\n</pre>\n<p>How <tt>troposphere_mate</tt> implements:</p>\n<pre><span class=\"c1\"># content of troposphere_mate.ec2.py</span>\n<span class=\"k\">class</span> <span class=\"nc\">Instance</span><span class=\"p\">(</span><span class=\"n\">troposphere</span><span class=\"o\">.</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Instance</span><span class=\"p\">,</span> <span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\n                 <span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"c1\"># type: str</span>\n                 <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"c1\"># type: Template</span>\n                 <span class=\"n\">validation</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"c1\"># type: bool</span>\n                 <span class=\"n\">InstanceType</span><span class=\"o\">=</span><span class=\"n\">NOTHING</span><span class=\"p\">,</span> <span class=\"c1\"># type: str</span>\n                 <span class=\"n\">SubnetId</span><span class=\"o\">=</span><span class=\"n\">NOTHING</span><span class=\"p\">,</span> <span class=\"c1\"># type: Union[str, AWSHelperFn]</span>\n                 <span class=\"n\">KeyName</span><span class=\"o\">=</span><span class=\"n\">NOTHING</span><span class=\"p\">,</span> <span class=\"c1\"># type: Union[str, AWSHelperFn]</span>\n                 <span class=\"o\">...</span>\n                 <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n</pre>\n<div id=\"additional-powerful-features\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Additional Powerful Features</a></h3>\n<div id=\"id1\">\n<ul>\n<li><a href=\"#batch-tagging\" id=\"id6\" rel=\"nofollow\">Batch Tagging</a></li>\n<li><a href=\"#auto-reference\" id=\"id7\" rel=\"nofollow\">Auto Reference</a></li>\n<li><a href=\"#return-values-hint\" id=\"id8\" rel=\"nofollow\">Return Values Hint</a></li>\n<li><a href=\"#remove-resource-and-auto-remove-dependent-resource-and-output\" id=\"id9\" rel=\"nofollow\">Remove Resource and auto-remove dependent resource and Output</a></li>\n<li><a href=\"#partial-deployment\" id=\"id10\" rel=\"nofollow\">Partial Deployment</a></li>\n<li><a href=\"#deploy-from-python\" id=\"id11\" rel=\"nofollow\">Deploy from Python</a></li>\n</ul>\n</div>\n<div id=\"batch-tagging\">\n<h4><a href=\"#id6\" rel=\"nofollow\">Batch Tagging</a></h4>\n<p>Sometimes you want to <strong>apply a set of common tags to all AWS Resource</strong> defined in a Template. <tt>trpoosphere_mate</tt> allows you to:</p>\n<ul>\n<li>apply common tags to specified list of AWS Resource or all of Resources in a Template.</li>\n<li>custom tag creation logic function, let\u2019s say based on the Resource Type.</li>\n<li>allow you to choose the merge <tt>existing tag</tt> into <tt>common tag</tt> or reversely.</li>\n</ul>\n<p>Example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">troposphere_mate</span> <span class=\"kn\">import</span> <span class=\"n\">Template</span><span class=\"p\">,</span> <span class=\"n\">ec2</span><span class=\"p\">,</span> <span class=\"n\">Tags</span><span class=\"p\">,</span>\n<span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"n\">partial</span>\n\n<span class=\"n\">tpl</span> <span class=\"o\">=</span> <span class=\"n\">Template</span><span class=\"p\">()</span>\n\n<span class=\"n\">my_vpc</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">VPC</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"MyVPC\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">CidrBlock</span><span class=\"o\">=</span><span class=\"s2\">\"10.0.0.0/16\"</span><span class=\"p\">,</span>\n    <span class=\"n\">Tags</span><span class=\"o\">=</span><span class=\"n\">Tags</span><span class=\"p\">(</span>\n        <span class=\"n\">Creator</span><span class=\"o\">=</span><span class=\"s2\">\"Alice\"</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">my_sg</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">SecurityGroup</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"MySG\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">GroupDescription</span><span class=\"o\">=</span><span class=\"s2\">\"My\"</span><span class=\"p\">,</span>\n    <span class=\"n\">GroupName</span><span class=\"o\">=</span><span class=\"s2\">\"MySG\"</span><span class=\"p\">,</span>\n    <span class=\"n\">VpcId</span><span class=\"o\">=</span><span class=\"n\">Ref</span><span class=\"p\">(</span><span class=\"n\">my_vpc</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n<span class=\"n\">my_subnet</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Subnet</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"MySubnet\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">CidrBlock</span><span class=\"o\">=</span><span class=\"s2\">\"10.0.1.0/24\"</span><span class=\"p\">,</span>\n    <span class=\"n\">VpcId</span><span class=\"o\">=</span><span class=\"n\">Ref</span><span class=\"p\">(</span><span class=\"n\">my_vpc</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># custom logic to create tag if it is a SecurityGroup</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_name</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">,</span> <span class=\"n\">project</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">resource_type</span> <span class=\"o\">==</span> <span class=\"s2\">\"AWS::EC2::SecurityGroup\"</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\">/sg/</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">project</span><span class=\"p\">,</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">GroupName</span><span class=\"p\">)</span>\n\n<span class=\"n\">common_tags</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n    <span class=\"n\">Project</span><span class=\"o\">=</span><span class=\"s2\">\"my-project\"</span><span class=\"p\">,</span>\n    <span class=\"n\">Name</span><span class=\"o\">=</span><span class=\"n\">functools</span><span class=\"o\">.</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">get_name</span><span class=\"p\">,</span> <span class=\"n\">project</span><span class=\"o\">=</span><span class=\"s2\">\"my-project\"</span><span class=\"p\">),</span>\n    <span class=\"n\">Creator</span><span class=\"o\">=</span><span class=\"s2\">\"Bob\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># apply common tags to all aws resource</span>\n<span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">update_tags</span><span class=\"p\">(</span><span class=\"n\">common_tags</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">tags_list_to_dct</span><span class=\"p\">(</span><span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">()[</span><span class=\"s2\">\"Resources\"</span><span class=\"p\">][</span><span class=\"s2\">\"MyVPC\"</span><span class=\"p\">][</span><span class=\"s2\">\"Properties\"</span><span class=\"p\">][</span><span class=\"s2\">\"Tags\"</span><span class=\"p\">])</span> <span class=\"o\">==</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n    <span class=\"n\">Project</span><span class=\"o\">=</span><span class=\"s2\">\"my-project\"</span><span class=\"p\">,</span>\n    <span class=\"n\">Creator</span><span class=\"o\">=</span><span class=\"s2\">\"Alice\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">tags_list_to_dct</span><span class=\"p\">(</span><span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">()[</span><span class=\"s2\">\"Resources\"</span><span class=\"p\">][</span><span class=\"s2\">\"MySG\"</span><span class=\"p\">][</span><span class=\"s2\">\"Properties\"</span><span class=\"p\">][</span><span class=\"s2\">\"Tags\"</span><span class=\"p\">])</span> <span class=\"o\">==</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n    <span class=\"n\">Project</span><span class=\"o\">=</span><span class=\"s2\">\"my-project\"</span><span class=\"p\">,</span>\n    <span class=\"n\">Name</span><span class=\"o\">=</span><span class=\"s2\">\"my-project/sg/MySG\"</span><span class=\"p\">,</span>\n    <span class=\"n\">Creator</span><span class=\"o\">=</span><span class=\"s2\">\"Bob\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Any AWS Resource object and Template object has a utility method <tt>.update_tags()</tt></p>\n<pre><span class=\"c1\"># by default overwrite = False, so common tags doesn't overwrite existing tags</span>\n<span class=\"c1\"># update single resource</span>\n<span class=\"n\">my_ec2</span><span class=\"o\">.</span><span class=\"n\">update_tags</span><span class=\"p\">({</span><span class=\"s2\">\"Project\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my-project\"</span><span class=\"p\">})</span>\n<span class=\"c1\"># update entire template</span>\n<span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">update_taggs</span><span class=\"p\">({</span><span class=\"s2\">\"Project\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my-project\"</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"auto-reference\">\n<h4><a href=\"#id7\" rel=\"nofollow\">Auto Reference</a></h4>\n<p>Sometimes, you just know you need to associate one AWS Resource to another, but you have to lookup the Document to find out which Property and what is the Syntax to do that.</p>\n<p>For example, <strong>if you want to associate an IAM Role, VPC Subnet, Security Group to a Lambda Function, how do you know whether it is REF or GetAtt ARN can get you the resource arn?</strong>.</p>\n<p><strong>With troposphere_mate, it\u2019s just one line of code</strong>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">troposphere_mate</span> <span class=\"kn\">import</span> <span class=\"n\">iam</span><span class=\"p\">,</span> <span class=\"n\">awslambda</span><span class=\"p\">,</span> <span class=\"n\">associate</span>\n\n<span class=\"n\">iam_role</span> <span class=\"o\">=</span> <span class=\"n\">iam</span><span class=\"o\">.</span><span class=\"n\">Role</span><span class=\"p\">(</span><span class=\"s2\">\"IamRole\"</span><span class=\"p\">)</span>\n<span class=\"n\">lbd_func</span> <span class=\"o\">=</span> <span class=\"n\">awslambda</span><span class=\"o\">.</span><span class=\"n\">Function</span><span class=\"p\">(</span><span class=\"s2\">\"LbdFunc\"</span><span class=\"p\">)</span>\n<span class=\"n\">associate</span><span class=\"p\">(</span><span class=\"n\">iam_role</span><span class=\"p\">,</span> <span class=\"n\">lbd_func</span><span class=\"p\">)</span>\n</pre>\n<p>Let\u2019s take a look at a full example. Suppose you already have:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">troposphere_mate</span> <span class=\"kn\">import</span> <span class=\"n\">ec2</span><span class=\"p\">,</span> <span class=\"n\">awslambda</span><span class=\"p\">,</span> <span class=\"n\">iam</span>\n\n<span class=\"n\">tpl</span> <span class=\"o\">=</span> <span class=\"n\">Template</span><span class=\"p\">()</span>\n\n<span class=\"n\">iam_role</span> <span class=\"o\">=</span> <span class=\"n\">iam</span><span class=\"o\">.</span><span class=\"n\">Role</span><span class=\"p\">(</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"MyIamRole\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">RoleName</span><span class=\"o\">=</span><span class=\"s2\">\"lambda-basic-execution\"</span><span class=\"p\">,</span>\n    <span class=\"n\">AssumeRolePolicyDocument</span><span class=\"o\">=</span><span class=\"p\">{},</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">VPC</span><span class=\"p\">(</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"MyVPC\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">CidrBlock</span><span class=\"o\">=</span><span class=\"s2\">\"10.53.0.0/16\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">public_subnet1</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Subnet</span><span class=\"p\">(</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"PublicSubnet1\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">CidrBlock</span><span class=\"o\">=</span><span class=\"s2\">\"10.53.0.0/16\"</span><span class=\"p\">,</span>\n    <span class=\"n\">VpcId</span><span class=\"o\">=</span><span class=\"n\">Ref</span><span class=\"p\">(</span><span class=\"n\">vpc</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">public_subnet2</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Subnet</span><span class=\"p\">(</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"PublicSubnet2\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">CidrBlock</span><span class=\"o\">=</span><span class=\"s2\">\"10.53.2.0/16\"</span><span class=\"p\">,</span>\n    <span class=\"n\">VpcId</span><span class=\"o\">=</span><span class=\"n\">Ref</span><span class=\"p\">(</span><span class=\"n\">vpc</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">sg</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">SecurityGroup</span><span class=\"p\">(</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"LambdaSG\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">GroupDescription</span><span class=\"o\">=</span><span class=\"s2\">\"Just a SG\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">lbd_func</span> <span class=\"o\">=</span> <span class=\"n\">awslambda</span><span class=\"o\">.</span><span class=\"n\">Function</span><span class=\"p\">(</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"MyFunc\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">Code</span><span class=\"o\">=</span><span class=\"n\">awslambda</span><span class=\"o\">.</span><span class=\"n\">Code</span><span class=\"p\">(</span>\n        <span class=\"n\">S3Bucket</span><span class=\"o\">=</span><span class=\"s2\">\"my-bucket\"</span><span class=\"p\">,</span>\n        <span class=\"n\">S3Key</span><span class=\"o\">=</span><span class=\"s2\">\"0.0.1.zip\"</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">Handler</span><span class=\"o\">=</span><span class=\"s2\">\"my_func.handler\"</span><span class=\"p\">,</span>\n    <span class=\"n\">Role</span><span class=\"o\">=</span><span class=\"s2\">\"arn:aws:iam::111122223333:role/todo\"</span><span class=\"p\">,</span>\n    <span class=\"n\">Runtime</span><span class=\"o\">=</span><span class=\"s2\">\"python3.6\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>With <tt>troposphere_mate</tt>, you just need to do this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">troposphere_mate</span> <span class=\"kn\">import</span> <span class=\"n\">associate</span>\n\n<span class=\"n\">associate</span><span class=\"p\">(</span><span class=\"n\">lbd_func</span><span class=\"p\">,</span> <span class=\"n\">iam_role</span><span class=\"p\">)</span> <span class=\"c1\"># order doesn't matter, associate(iam_role, lbd_func)</span>\n<span class=\"n\">associate</span><span class=\"p\">(</span><span class=\"n\">lbd_func</span><span class=\"p\">,</span> <span class=\"n\">sg</span><span class=\"p\">)</span>\n<span class=\"n\">associate</span><span class=\"p\">(</span><span class=\"n\">lbd_func</span><span class=\"p\">,</span> <span class=\"n\">public_subnet1</span><span class=\"p\">)</span>\n<span class=\"n\">associate</span><span class=\"p\">(</span><span class=\"n\">lbd_func</span><span class=\"p\">,</span> <span class=\"n\">public_subnet2</span><span class=\"p\">)</span>\n</pre>\n<p>In other word, <strong>you don\u2019t need to remember the properties and the syntax</strong>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">troposphere</span> <span class=\"kn\">import</span> <span class=\"n\">Ref</span>\n<span class=\"kn\">from</span> <span class=\"nn\">troposphere</span> <span class=\"kn\">import</span> <span class=\"n\">awslambda</span>\n\n<span class=\"n\">lbd_func</span><span class=\"o\">.</span><span class=\"n\">Role</span> <span class=\"o\">=</span> <span class=\"n\">Ref</span><span class=\"p\">(</span><span class=\"n\">iam_role</span><span class=\"p\">)</span>\n<span class=\"n\">lbd_func</span><span class=\"o\">.</span><span class=\"n\">VpcConfig</span> <span class=\"o\">=</span> <span class=\"n\">awslambda</span><span class=\"o\">.</span><span class=\"n\">VPCConfig</span><span class=\"p\">(</span>\n    <span class=\"n\">SecurityGroupIds</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">Ref</span><span class=\"p\">(</span><span class=\"n\">sg</span><span class=\"p\">)</span>\n    <span class=\"p\">],</span>\n    <span class=\"n\">SubnetIds</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">Ref</span><span class=\"p\">(</span><span class=\"n\">public_subnet1</span><span class=\"p\">),</span>\n        <span class=\"n\">Ref</span><span class=\"p\">(</span><span class=\"n\">public_subnet2</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</pre>\n<p>If you want to contribute your auto-associate logic to <tt>troposphere_mate</tt>, please submit <a href=\"https://github.com/MacHu-GWU/troposphere_mate-project/issues\" rel=\"nofollow\">issue</a> or help me to improve. Here\u2019s an <a href=\"https://github.com/MacHu-GWU/troposphere_mate-project/blob/master/troposphere_mate/core/associate.py\" rel=\"nofollow\">example</a>.</p>\n</div>\n<div id=\"return-values-hint\">\n<h4><a href=\"#id8\" rel=\"nofollow\">Return Values Hint</a></h4>\n<p>The Cloudformation return values API is NOT consistent! Sometimes you have no idea which syntax, <tt>Ref</tt> or <tt>GetAtt Arn</tt> gives you the real Arn. Sometimes the Ref, sometimes the GetAtt.</p>\n<p><tt>troposphere_mate</tt> <strong>provides tons of property method allows you to quickly access the value in form of intrinsic function when you need to reference it</strong>.</p>\n<img alt=\"https://user-images.githubusercontent.com/6800411/74405874-308f0c80-4dfc-11ea-9c93-98ae366e4b71.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5c69f38953c1efaff0947de2ec6b83d79b5ac71c/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f363830303431312f37343430353837342d33303866306338302d346466632d313165612d396339332d3938616533363665346237312e706e67\" width=\"600px\">\n</div>\n<div id=\"remove-resource-and-auto-remove-dependent-resource-and-output\">\n<h4><a href=\"#id9\" rel=\"nofollow\">Remove Resource and auto-remove dependent resource and Output</a></h4>\n<p>If you declared <tt>DependsOn</tt> in AWS Resource or AWS Output (<strong>YES, ``troposphere_mate`` supports ``Output.DependsOn`` too!</strong>), when you remove a resource, it also removes all other resources and outputs depends on this one, because it no longer be able to correctly created.</p>\n<p><strong>You will never leave a \u2018cracked\u2019 template</strong>.</p>\n<p>In this example, you will see that, since Z depends on Y, Y depends on X. If you removed X, then X, Y, Z and their outputs are all gone!</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">troposphere_mate</span> <span class=\"kn\">import</span> <span class=\"n\">Template</span><span class=\"p\">,</span> <span class=\"n\">apigateway</span><span class=\"p\">,</span> <span class=\"n\">Output</span><span class=\"p\">,</span> <span class=\"n\">Ref</span>\n\n<span class=\"n\">tpl</span> <span class=\"o\">=</span> <span class=\"n\">Template</span><span class=\"p\">()</span>\n\n<span class=\"n\">rest_api_x</span> <span class=\"o\">=</span> <span class=\"n\">apigateway</span><span class=\"o\">.</span><span class=\"n\">RestApi</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"RestApiX\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">Name</span><span class=\"o\">=</span><span class=\"s2\">\"MyRestApiX\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">rest_api_y</span> <span class=\"o\">=</span> <span class=\"n\">apigateway</span><span class=\"o\">.</span><span class=\"n\">RestApi</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"RestApiY\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">Name</span><span class=\"o\">=</span><span class=\"s2\">\"MyRestApiY\"</span><span class=\"p\">,</span>\n    <span class=\"n\">DependsOn</span><span class=\"o\">=</span><span class=\"n\">rest_api_x</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">rest_api_z</span> <span class=\"o\">=</span> <span class=\"n\">apigateway</span><span class=\"o\">.</span><span class=\"n\">RestApi</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"RestApiZ\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">Name</span><span class=\"o\">=</span><span class=\"s2\">\"MyRestApiZ\"</span><span class=\"p\">,</span>\n    <span class=\"n\">DependsOn</span><span class=\"o\">=</span><span class=\"n\">rest_api_y</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">output_rest_api_x_id</span> <span class=\"o\">=</span> <span class=\"n\">Output</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"RestApiXId\"</span><span class=\"p\">,</span>\n    <span class=\"n\">Value</span><span class=\"o\">=</span><span class=\"n\">Ref</span><span class=\"p\">(</span><span class=\"n\">rest_api_x</span><span class=\"p\">),</span>\n    <span class=\"n\">DependsOnself</span><span class=\"o\">.</span><span class=\"n\">rest_api_x</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">add_output</span><span class=\"p\">(</span><span class=\"n\">output_rest_api_x_id</span><span class=\"p\">)</span>\n\n<span class=\"n\">output_rest_api_y_id</span> <span class=\"o\">=</span> <span class=\"n\">Output</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"RestApiYId\"</span><span class=\"p\">,</span>\n    <span class=\"n\">Value</span><span class=\"o\">=</span><span class=\"n\">Ref</span><span class=\"p\">(</span><span class=\"n\">rest_api_y</span><span class=\"p\">),</span>\n    <span class=\"n\">DependsOn</span><span class=\"o\">=</span><span class=\"n\">rest_api_y</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">add_output</span><span class=\"p\">(</span><span class=\"n\">output_rest_api_y_id</span><span class=\"p\">)</span>\n\n<span class=\"n\">output_rest_api_z_id</span> <span class=\"o\">=</span> <span class=\"n\">Output</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"RestApiZId\"</span><span class=\"p\">,</span>\n    <span class=\"n\">Value</span><span class=\"o\">=</span><span class=\"n\">Ref</span><span class=\"p\">(</span><span class=\"n\">rest_api_z</span><span class=\"p\">),</span>\n    <span class=\"n\">DependsOn</span><span class=\"o\">=</span><span class=\"n\">rest_api_z</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">add_output</span><span class=\"p\">(</span><span class=\"n\">output_rest_api_z_id</span><span class=\"p\">)</span>\n\n<span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">remove_resource</span><span class=\"p\">(</span><span class=\"n\">rest_api_x</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"partial-deployment\">\n<h4><a href=\"#id10\" rel=\"nofollow\">Partial Deployment</a></h4>\n<p>At most of the times, eventually your cloudformation template becomes very big. There are some common use case in development and deployment:</p>\n<ol>\n<li><strong>You want to reuse the AWS Resource from an Big Architect Design, only deploy selected AWS Resource, without editing the template.</strong></li>\n<li><strong>You want to gradually deploy AWS Resource instead of deploy everything in one command, while you are doing development or debugging, without editing the template.</strong></li>\n</ol>\n<p><a href=\"https://github.com/MacHu-GWU/troposphere_mate-project\" rel=\"nofollow\">troposphere_mate</a> <strong>allows you to define labels for your AWS Resource</strong> in <tt>Metadata</tt> field, then you can use <tt><span class=\"pre\">Template.remove_resource_by_label(label=\"a</span> label\", <span class=\"pre\">label_field_in_metadata=\"labels\")</span></tt> method to <strong>remove group of AWS Resource from your template (mostly for the same tier)</strong>.</p>\n<p>More importantly, <a href=\"https://github.com/MacHu-GWU/troposphere_mate-project\" rel=\"nofollow\">troposphere_mate</a> <strong>allows you to explicitly defines dependent AWS Resource for Output object, so when you remove the resource, related output will automatically removed</strong>, which is NOT supported by native CloudFormation or <tt>troposphere</tt>.</p>\n<p>Example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">troposphere_mate</span> <span class=\"kn\">import</span> <span class=\"n\">ec2</span><span class=\"p\">,</span> <span class=\"n\">rds</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Labels</span><span class=\"p\">:</span>\n    <span class=\"n\">tier1_vpc</span> <span class=\"o\">=</span> <span class=\"s2\">\"tier1_vpc\"</span>\n    <span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"s2\">\"vpc\"</span>\n    <span class=\"n\">sg</span> <span class=\"o\">=</span> <span class=\"s2\">\"security_group\"</span>\n    <span class=\"n\">tier2_rds</span> <span class=\"o\">=</span> <span class=\"s2\">\"tier2_rds\"</span>\n    <span class=\"n\">db_subnet_group</span> <span class=\"o\">=</span> <span class=\"s2\">\"db_subnet_group\"</span>\n    <span class=\"n\">db_instance</span> <span class=\"o\">=</span> <span class=\"s2\">\"db_instance\"</span>\n\n<span class=\"n\">tpl</span> <span class=\"o\">=</span> <span class=\"n\">Template</span><span class=\"p\">()</span>\n\n<span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">VPC</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"VPC\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">Metadata</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"labels\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Labels</span><span class=\"o\">.</span><span class=\"n\">tier1_vpc</span><span class=\"p\">,</span> <span class=\"n\">Labels</span><span class=\"o\">.</span><span class=\"n\">vpc</span><span class=\"p\">]},</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">sg_ssh</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">SecurityGroup</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"SecurityGroupSSH\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">Metadata</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"labels\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Labels</span><span class=\"o\">.</span><span class=\"n\">tier1_vpc</span><span class=\"p\">,</span> <span class=\"n\">Labels</span><span class=\"o\">.</span><span class=\"n\">sg</span><span class=\"p\">]},</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">rds_db_subnet_group</span> <span class=\"o\">=</span> <span class=\"n\">rds</span><span class=\"o\">.</span><span class=\"n\">DBSubnetGroup</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"DBInstance\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">Metadata</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"labels\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Labels</span><span class=\"o\">.</span><span class=\"n\">tier2_rds</span><span class=\"p\">,</span> <span class=\"n\">Labels</span><span class=\"o\">.</span><span class=\"n\">db_subnet_group</span><span class=\"p\">]}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">rds_instance</span> <span class=\"o\">=</span> <span class=\"n\">rds</span><span class=\"o\">.</span><span class=\"n\">DBInstance</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"DBInstance\"</span><span class=\"p\">,</span>\n    <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">tpl</span><span class=\"p\">,</span>\n    <span class=\"n\">Metadata</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"labels\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Labels</span><span class=\"o\">.</span><span class=\"n\">tier2_rds</span><span class=\"p\">,</span> <span class=\"n\">Labels</span><span class=\"o\">.</span><span class=\"n\">db_instance</span><span class=\"p\">]}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">add_output</span><span class=\"p\">(</span>\n    <span class=\"n\">Output</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"VPC\"</span><span class=\"p\">,</span>\n        <span class=\"n\">Description</span><span class=\"o\">=</span><span class=\"s2\">\"VPC ID\"</span><span class=\"p\">,</span>\n        <span class=\"n\">Value</span><span class=\"o\">=</span><span class=\"n\">Ref</span><span class=\"p\">(</span><span class=\"n\">vpc</span><span class=\"p\">),</span>\n        <span class=\"n\">Export</span><span class=\"o\">=</span><span class=\"n\">Export</span><span class=\"p\">(</span><span class=\"s2\">\"vpc-id\"</span><span class=\"p\">)),</span>\n        <span class=\"n\">DependsOn</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">vpc</span><span class=\"p\">,],</span> <span class=\"c1\"># specify the dependent AWS Resource, so when you remove the resource, related output will automatically removed</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">4</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">outputs</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">remove_resource_by_label</span><span class=\"p\">(</span><span class=\"n\">Labels</span><span class=\"o\">.</span><span class=\"n\">db_instance</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n\n<span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">remove_resource_by_label</span><span class=\"p\">(</span><span class=\"n\">Labels</span><span class=\"o\">.</span><span class=\"n\">tier2_rds</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n\n<span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">remove_resource_by_label</span><span class=\"p\">(</span><span class=\"n\">Labels</span><span class=\"o\">.</span><span class=\"n\">tier1_vpc</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">outputs</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n</pre>\n</div>\n<div id=\"deploy-from-python\">\n<h4><a href=\"#id11\" rel=\"nofollow\">Deploy from Python</a></h4>\n<p>The boto3 api doesn\u2019t come with <tt>aws cloudformation package</tt> api. But troposphere_mate supports <tt>package</tt> and Nested Stack!</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">boto3</span>\n<span class=\"kn\">from</span> <span class=\"nn\">troposphere_mate</span> <span class=\"kn\">import</span> <span class=\"n\">Template</span><span class=\"p\">,</span> <span class=\"n\">StackManager</span>\n\n<span class=\"n\">boto_ses</span> <span class=\"o\">=</span> <span class=\"n\">boto3</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">(</span><span class=\"n\">profile_name</span><span class=\"o\">=</span><span class=\"s2\">\"my-profile\"</span><span class=\"p\">)</span>\n<span class=\"n\">bucket_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"my-cloudformation-upload-bucket\"</span>\n\n<span class=\"n\">stack_manager</span> <span class=\"o\">=</span> <span class=\"n\">StackManager</span><span class=\"p\">(</span>\n    <span class=\"n\">boto_ses</span><span class=\"o\">=</span><span class=\"n\">boto_ses</span><span class=\"p\">,</span>\n    <span class=\"n\">cft_bucket</span><span class=\"o\">=</span><span class=\"n\">bucket_name</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"n\">Template</span><span class=\"p\">()</span>\n<span class=\"o\">...</span> <span class=\"n\">write</span> <span class=\"n\">your</span> <span class=\"n\">cloudformation</span> <span class=\"n\">template</span> <span class=\"ow\">in</span> <span class=\"n\">troposphere_mate</span>\n\n<span class=\"n\">stack_manager</span><span class=\"o\">.</span><span class=\"n\">deploy</span><span class=\"p\">(</span>\n    <span class=\"n\">template</span><span class=\"p\">,</span>\n    <span class=\"n\">stack_name</span><span class=\"o\">=</span><span class=\"s2\">\"my-stack-dev\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>nested stack docs todo \u2026</p>\n</div>\n</div>\n<div id=\"id3\">\n<span id=\"install\"></span><h3><a href=\"#id5\" rel=\"nofollow\">Install</a></h3>\n<p><tt>troposphere_mate</tt> is released on PyPI, so all you need is:</p>\n<pre><span class=\"gp\">$</span> pip install troposphere_mate\n</pre>\n<p>To upgrade to latest version:</p>\n<pre><span class=\"gp\">$</span> pip install --upgrade troposphere_mate\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6810124, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5709d49f45727cfae376ff47876c7ea5", "sha256": "b727391343180ec437bf0deccdb2517ea2a93c1d2a6391f71190890bb58e67ea"}, "downloads": -1, "filename": "troposphere_mate-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5709d49f45727cfae376ff47876c7ea5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 226303, "upload_time": "2019-07-08T01:35:16", "upload_time_iso_8601": "2019-07-08T01:35:16.899982Z", "url": "https://files.pythonhosted.org/packages/ca/44/af40014f18004d6f20bd38a7aeff11df0cc27eb8863cdb9126af16674c31/troposphere_mate-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8629e1f0e59b154e542a69c8f4b123f", "sha256": "7dc05a81f89950ebafff5744c15a80bf6f59c5ba8177f9eafb439dcee821191a"}, "downloads": -1, "filename": "troposphere_mate-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c8629e1f0e59b154e542a69c8f4b123f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138706, "upload_time": "2019-07-08T01:35:19", "upload_time_iso_8601": "2019-07-08T01:35:19.889267Z", "url": "https://files.pythonhosted.org/packages/82/c3/6c9a43f8f1b5ea6a919b174ebad9ff58f308525f2c7e3c62c624d7edb5ba/troposphere_mate-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "2900f7b2f4d0e9a12f7eafdb4a78b5f5", "sha256": "f3acd0ecfd7b2a4ec5984611fda199d00667fa476a974066846c0d0b3fbd8ecb"}, "downloads": -1, "filename": "troposphere_mate-0.0.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2900f7b2f4d0e9a12f7eafdb4a78b5f5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 555395, "upload_time": "2019-10-09T04:49:31", "upload_time_iso_8601": "2019-10-09T04:49:31.831553Z", "url": "https://files.pythonhosted.org/packages/2d/4b/0637a8dc03dc0bc797586b59acae78afdf9ccf3365d3267ac7f6dff7f46d/troposphere_mate-0.0.10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "391ff4c3c6ad13b661a888db81742ec3", "sha256": "74db3b705776ca84202786ee06e0b1ede46c471acefcc9db3dfac20aebf6449d"}, "downloads": -1, "filename": "troposphere_mate-0.0.10.tar.gz", "has_sig": false, "md5_digest": "391ff4c3c6ad13b661a888db81742ec3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 348321, "upload_time": "2019-10-09T04:49:34", "upload_time_iso_8601": "2019-10-09T04:49:34.119709Z", "url": "https://files.pythonhosted.org/packages/16/25/0d2050222e4e90c6c3f33e359f65a234e96af22b99a3c88f5e0f2e9420e1/troposphere_mate-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "ac70fe6b3229ced8bba3af9a343bda57", "sha256": "288b90b53c41e6b5d364b4a1519e084f720b6f8221612c65264835f523d5fd45"}, "downloads": -1, "filename": "troposphere_mate-0.0.11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ac70fe6b3229ced8bba3af9a343bda57", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 564617, "upload_time": "2019-11-19T20:31:08", "upload_time_iso_8601": "2019-11-19T20:31:08.631331Z", "url": "https://files.pythonhosted.org/packages/3e/c0/3bc3e0dc4397c24a515a785ba049340561a3949dcf220a78551ec0aca95d/troposphere_mate-0.0.11-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64ed6a958e9e5d5b71cdb1946e478b0c", "sha256": "51f6049a09a3f6c112a8bef768bd83e39553eb43d388e1b3f22218c53068145e"}, "downloads": -1, "filename": "troposphere_mate-0.0.11.tar.gz", "has_sig": false, "md5_digest": "64ed6a958e9e5d5b71cdb1946e478b0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 354730, "upload_time": "2019-11-19T20:31:11", "upload_time_iso_8601": "2019-11-19T20:31:11.231599Z", "url": "https://files.pythonhosted.org/packages/a0/72/965c78d8a9fe7d1806d87ab2ce1546a75fec3cd478925d94a7d8b4a140cf/troposphere_mate-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "46133b00d2044e297fc68c2ae5910fe3", "sha256": "e662ed9d66057e063aa2d62c7ef1a1f015669b798392575a3f920a9f530f6e99"}, "downloads": -1, "filename": "troposphere_mate-0.0.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "46133b00d2044e297fc68c2ae5910fe3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 645832, "upload_time": "2020-02-13T06:01:54", "upload_time_iso_8601": "2020-02-13T06:01:54.145663Z", "url": "https://files.pythonhosted.org/packages/c0/83/a27992723d4a45b21472f6f2145988d12fbe8d5baaa3ddb69781b6703010/troposphere_mate-0.0.12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d2656cd97bdfcc6512d902d604327ec", "sha256": "1a8c84e8ddd1f886a47a99bad8ead4807c64334ee0e16fbdc54dea92a758c951"}, "downloads": -1, "filename": "troposphere_mate-0.0.12.tar.gz", "has_sig": false, "md5_digest": "2d2656cd97bdfcc6512d902d604327ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 412157, "upload_time": "2020-02-13T06:01:56", "upload_time_iso_8601": "2020-02-13T06:01:56.466441Z", "url": "https://files.pythonhosted.org/packages/e9/ca/69231cc2568da7e10388e12c6446452935edddbc69a8c212fb488a79116a/troposphere_mate-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "27747e21e0db1d0bb7fe329676ea8a93", "sha256": "09b0a7c59bcf588a793840dc678fb0cbe0b00b6fadde0acb55b0ec1ea2873c4d"}, "downloads": -1, "filename": "troposphere_mate-0.0.13-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "27747e21e0db1d0bb7fe329676ea8a93", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 670835, "upload_time": "2020-02-16T01:50:40", "upload_time_iso_8601": "2020-02-16T01:50:40.798736Z", "url": "https://files.pythonhosted.org/packages/cc/11/6b8104a2148f5bed167c543549890f401c1b47cc0137d2643b3ad4ed91d4/troposphere_mate-0.0.13-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6e51295eb16184109d5c67998a43f55", "sha256": "1ba0715ea92619199f29b587d048a79f04636d4fe02f67b60b15445dff43d1e9"}, "downloads": -1, "filename": "troposphere_mate-0.0.13.tar.gz", "has_sig": false, "md5_digest": "b6e51295eb16184109d5c67998a43f55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 422119, "upload_time": "2020-02-16T01:50:51", "upload_time_iso_8601": "2020-02-16T01:50:51.748583Z", "url": "https://files.pythonhosted.org/packages/a5/df/7f58cbcecf96040b921625681274156b4f47426e8c514f37196d3838d6a6/troposphere_mate-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "8e7bc7c3e0c8ed2f11d49d17c6fefc6d", "sha256": "17e8b14abd97da602bd9a667efe2696a039336488f4b136b4def89cc90d00600"}, "downloads": -1, "filename": "troposphere_mate-0.0.14-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8e7bc7c3e0c8ed2f11d49d17c6fefc6d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 675911, "upload_time": "2020-03-14T04:13:46", "upload_time_iso_8601": "2020-03-14T04:13:46.023734Z", "url": "https://files.pythonhosted.org/packages/99/3f/f7176ac5a7bc673c3612c14605282a9d3bea0996d15a284682dc8b0dbeea/troposphere_mate-0.0.14-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "838c0d34acf748485dd6f235fa1531e6", "sha256": "d209476bbd78196ecf1ff3183e21bf2e818467a6a9a7aa97aa2ac266cb5b23ce"}, "downloads": -1, "filename": "troposphere_mate-0.0.14.tar.gz", "has_sig": false, "md5_digest": "838c0d34acf748485dd6f235fa1531e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 426256, "upload_time": "2020-03-14T04:13:48", "upload_time_iso_8601": "2020-03-14T04:13:48.242787Z", "url": "https://files.pythonhosted.org/packages/0e/35/66bee8c46d5baf6a9084fe1bd6c5c7c5502ad5b9229b4fb9890ba475b341/troposphere_mate-0.0.14.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "5e8f3935b0db3f845bf20f26890c87ba", "sha256": "cf747a8edef47e3b815a19f3e6edafdfa7095c282dc67381124a53b8ad931191"}, "downloads": -1, "filename": "troposphere_mate-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5e8f3935b0db3f845bf20f26890c87ba", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1134838, "upload_time": "2019-07-09T16:21:49", "upload_time_iso_8601": "2019-07-09T16:21:49.643470Z", "url": "https://files.pythonhosted.org/packages/fc/98/6f547e517d2cb79b0c89a6a4071b2d17c015401037ba67722b764d8bb7a7/troposphere_mate-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f53a11075ecf3538ff419bcd98ff09c", "sha256": "38e12fa6d723f9306ca60c5f0bf9c13b624425517b771c28a22d6d73eab5c407"}, "downloads": -1, "filename": "troposphere_mate-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6f53a11075ecf3538ff419bcd98ff09c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 675851, "upload_time": "2019-07-09T16:21:52", "upload_time_iso_8601": "2019-07-09T16:21:52.786489Z", "url": "https://files.pythonhosted.org/packages/07/a6/42c513567c66a1d1067d6fa6ac943c415829f7975b8b5950623dd637bb5b/troposphere_mate-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "37ba9a11d1bf507a1faf144f6647420c", "sha256": "676412871c22f00187f46fa9cd0145f5bd289ef5434d48548edce28719e51377"}, "downloads": -1, "filename": "troposphere_mate-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "37ba9a11d1bf507a1faf144f6647420c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1219327, "upload_time": "2019-07-24T22:12:13", "upload_time_iso_8601": "2019-07-24T22:12:13.943604Z", "url": "https://files.pythonhosted.org/packages/f9/eb/1603256ef8057b0af2625d0b86b1719531c954a06e268d987450355a80bc/troposphere_mate-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a0b5bec756b186553f7664a5a0b644b", "sha256": "06458bd8c1abe15fec377ddcb70dd0ea935ece5b2ec1bfe80753650801bce6c2"}, "downloads": -1, "filename": "troposphere_mate-0.0.3.tar.gz", "has_sig": false, "md5_digest": "9a0b5bec756b186553f7664a5a0b644b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 740539, "upload_time": "2019-07-24T22:12:17", "upload_time_iso_8601": "2019-07-24T22:12:17.211201Z", "url": "https://files.pythonhosted.org/packages/1c/90/732e8e8633195e0772dbd97aefc195d20818d253be7108b9b73200c9cae9/troposphere_mate-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "29d37567c7c3c334835d7844ccd2d637", "sha256": "b3307dca870831e800785f6f46c0b51071571ab5ba0746a5e3f0721ed8ec7fd5"}, "downloads": -1, "filename": "troposphere_mate-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "29d37567c7c3c334835d7844ccd2d637", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1223903, "upload_time": "2019-07-29T19:08:20", "upload_time_iso_8601": "2019-07-29T19:08:20.124446Z", "url": "https://files.pythonhosted.org/packages/63/bc/f6c33a2976d9983d166258a52f75f36c89d082999c78db826731fef6eb76/troposphere_mate-0.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "406becd286e941538a07325daba5f970", "sha256": "1b5b510d63e05b5da393c103db3c944dd5b3f750b189a71a683c288077f4f8e5"}, "downloads": -1, "filename": "troposphere_mate-0.0.4.tar.gz", "has_sig": false, "md5_digest": "406becd286e941538a07325daba5f970", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 743370, "upload_time": "2019-07-29T19:08:22", "upload_time_iso_8601": "2019-07-29T19:08:22.581025Z", "url": "https://files.pythonhosted.org/packages/b0/02/07a059f5b86d2226910cc679f748e39433138a14fca48ff5fb59d6d7388d/troposphere_mate-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "3963c131171873745195cfc7ed5c3c7d", "sha256": "95f342be5a79a70238342c1c6ece5d83916ac93965248f4fcc78b57737b5ce34"}, "downloads": -1, "filename": "troposphere_mate-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3963c131171873745195cfc7ed5c3c7d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1226228, "upload_time": "2019-08-07T18:35:13", "upload_time_iso_8601": "2019-08-07T18:35:13.148065Z", "url": "https://files.pythonhosted.org/packages/08/2c/150441e0de4977cc2fcea2de22a91b074a44f682439f8f1b461928eb003a/troposphere_mate-0.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41f7be000342940af6171b737f7e6fe3", "sha256": "65673e4855e5ec8b3566cc88bfe0ec549ae183dc3bb129d5914f53171ffd175a"}, "downloads": -1, "filename": "troposphere_mate-0.0.5.tar.gz", "has_sig": false, "md5_digest": "41f7be000342940af6171b737f7e6fe3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 746423, "upload_time": "2019-08-07T18:35:15", "upload_time_iso_8601": "2019-08-07T18:35:15.542785Z", "url": "https://files.pythonhosted.org/packages/7b/05/40d11560796f6302ee21aad67f284c5a02216ebea125d08bdce5d3ec53e2/troposphere_mate-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "440c61aea5b05e5ac27a4547d779f562", "sha256": "a94bb1f66e1394afe43043760aa0a0dab798fedf3d2d6e8fbbae6b34495e6bbd"}, "downloads": -1, "filename": "troposphere_mate-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "440c61aea5b05e5ac27a4547d779f562", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 530986, "upload_time": "2019-08-08T20:23:34", "upload_time_iso_8601": "2019-08-08T20:23:34.302156Z", "url": "https://files.pythonhosted.org/packages/4c/a5/24a3d396042ba039a35fb58012580aba41c06ba81c17a84226b54378e2e3/troposphere_mate-0.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9eab2ac94d8f091780b3166da97280eb", "sha256": "d00f626be67d515c506027246b6371fdf8e818b2b9d41b2a819d7d231fff9c73"}, "downloads": -1, "filename": "troposphere_mate-0.0.6.tar.gz", "has_sig": false, "md5_digest": "9eab2ac94d8f091780b3166da97280eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 330160, "upload_time": "2019-08-08T20:23:37", "upload_time_iso_8601": "2019-08-08T20:23:37.276735Z", "url": "https://files.pythonhosted.org/packages/34/e5/5bb5b608571019db83a2d7cb475587c21e99e9f6e933bb36610bd4146401/troposphere_mate-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "cf504a5d1753cce20369568ca6fb01a5", "sha256": "22136c330502cf66f5deff6d721be2cac02b1abd00b4075457930b447f26ffbd"}, "downloads": -1, "filename": "troposphere_mate-0.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cf504a5d1753cce20369568ca6fb01a5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 531424, "upload_time": "2019-09-09T20:44:12", "upload_time_iso_8601": "2019-09-09T20:44:12.501071Z", "url": "https://files.pythonhosted.org/packages/be/ed/dacd49b1a95f641c4b02dba74d115d075f9acbac21a20826b26fc06b31a8/troposphere_mate-0.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a06338272199e775048c9f15d986b9c0", "sha256": "221377f3288cdcc5d88122c452ca7bcda2509032ef3bfdc39bc44fd831c6e623"}, "downloads": -1, "filename": "troposphere_mate-0.0.7.tar.gz", "has_sig": false, "md5_digest": "a06338272199e775048c9f15d986b9c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 330626, "upload_time": "2019-09-09T20:44:14", "upload_time_iso_8601": "2019-09-09T20:44:14.709305Z", "url": "https://files.pythonhosted.org/packages/8f/c1/66cf753c9ee1abf0393f83ed1887c89b708f63dafa3e8f7a92f9191140b3/troposphere_mate-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "3e41ba3e34bb5c951b7d9960511d566d", "sha256": "0c6147956aedb66b3f4ed7185707b98afa2eb527e2a3f4f4742b544936fb5662"}, "downloads": -1, "filename": "troposphere_mate-0.0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3e41ba3e34bb5c951b7d9960511d566d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 544722, "upload_time": "2019-09-30T23:15:11", "upload_time_iso_8601": "2019-09-30T23:15:11.733349Z", "url": "https://files.pythonhosted.org/packages/86/dc/6436f3a630afd1803e24f7448156e9038d20f4f731dd3b7f19722a754084/troposphere_mate-0.0.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7491a2d7bca93d4178d201c796a1c4c2", "sha256": "9c5bd62d8b315d4ba2b5355ac8937b84d5544216f0cebc4d604c46b7d456d9d8"}, "downloads": -1, "filename": "troposphere_mate-0.0.8.tar.gz", "has_sig": false, "md5_digest": "7491a2d7bca93d4178d201c796a1c4c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 338937, "upload_time": "2019-09-30T23:15:14", "upload_time_iso_8601": "2019-09-30T23:15:14.151531Z", "url": "https://files.pythonhosted.org/packages/3b/d2/0df47d17ddc0efa36bcadd195fd073a7a36ed1b908bcc3a06a31f5eb9fe3/troposphere_mate-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "26efd4a601224d872672e30b7ba44231", "sha256": "85278c5663bef38644b67ed10cd6653cdc565077f582a133de447b03d4b62352"}, "downloads": -1, "filename": "troposphere_mate-0.0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "26efd4a601224d872672e30b7ba44231", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 548751, "upload_time": "2019-10-08T04:25:47", "upload_time_iso_8601": "2019-10-08T04:25:47.430798Z", "url": "https://files.pythonhosted.org/packages/14/95/583f4a21e8c4fd02cb03841903613de407414bc46656e8ae6e864aa906e7/troposphere_mate-0.0.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef42e679629c36d1510ba8be57772adf", "sha256": "87dce5a8027251b6b237b675122bc1cf7ddea1a325a03b16a02714755f5e421c"}, "downloads": -1, "filename": "troposphere_mate-0.0.9.tar.gz", "has_sig": false, "md5_digest": "ef42e679629c36d1510ba8be57772adf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 342926, "upload_time": "2019-10-08T04:25:49", "upload_time_iso_8601": "2019-10-08T04:25:49.864620Z", "url": "https://files.pythonhosted.org/packages/5e/5a/0468600ac094afcaf6e6c69ce37238bd7d6e146edda8d58ddbb4fa94fe74/troposphere_mate-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8e7bc7c3e0c8ed2f11d49d17c6fefc6d", "sha256": "17e8b14abd97da602bd9a667efe2696a039336488f4b136b4def89cc90d00600"}, "downloads": -1, "filename": "troposphere_mate-0.0.14-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8e7bc7c3e0c8ed2f11d49d17c6fefc6d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 675911, "upload_time": "2020-03-14T04:13:46", "upload_time_iso_8601": "2020-03-14T04:13:46.023734Z", "url": "https://files.pythonhosted.org/packages/99/3f/f7176ac5a7bc673c3612c14605282a9d3bea0996d15a284682dc8b0dbeea/troposphere_mate-0.0.14-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "838c0d34acf748485dd6f235fa1531e6", "sha256": "d209476bbd78196ecf1ff3183e21bf2e818467a6a9a7aa97aa2ac266cb5b23ce"}, "downloads": -1, "filename": "troposphere_mate-0.0.14.tar.gz", "has_sig": false, "md5_digest": "838c0d34acf748485dd6f235fa1531e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 426256, "upload_time": "2020-03-14T04:13:48", "upload_time_iso_8601": "2020-03-14T04:13:48.242787Z", "url": "https://files.pythonhosted.org/packages/0e/35/66bee8c46d5baf6a9084fe1bd6c5c7c5502ad5b9229b4fb9890ba475b341/troposphere_mate-0.0.14.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:46:41 2020"}