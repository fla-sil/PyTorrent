{"info": {"author": "Will McGinnis", "author_email": "will@pedalwrencher.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python :: 3"], "description": "twitter-pandas\n==============\n\nversion number: 0.0.1\nauthor: Will McGinnis\n\nOverview\n--------\n\nA library for getting and interacting with twitter data via pandas.  Currently very in-flux, based heavily on my other\nlibrary of this type: [git-pandas](https://github.com/wdm0006/git-pandas).\n\n### Current State\n\nThe library itself is based heavily on [tweepy](http://docs.tweepy.org/en/v3.5.0/), and as such the development and API \nto twitter-pandas will follow it's API pretty closely.  To start with I've implemented the:\n\n * user methods\n * timeline methods\n * favorite methods\n * account methods\n * trends methods\n * list methods\n * saved search methods\n * status methods\n * direct message methods\n * friendship methods\n  \nAs well as some helper properties:\n\n * api_id\n * api_screen_name\n \nWhich help access data tied to the API key's account quickly.\n\n### Roadmap\n\nGoing forward, we will work our way through [tweepy's api](http://docs.tweepy.org/en/v3.5.0/api.html), providing \npandas-based interfaces to the methods in each of these groupings that return datasets (for now we are trying to stay \nread-only where practical, with a data analysis focus).\n\n * block methods\n * help methods\n * geo methods\n \nThe general idea is to:\n\n * Use sensible defaults to make interfaces sensible, intuitive, and safe\n * Provide raw datasets as pandas dataframes for all common api endpoints that return data\n * Provide some processed datasets for common analysis tasks:\n    * people who I follow who don't follow me (and vice versa)\n    * top users of a hashtag\n    * top followers of mine\n    * follower growth charts\n    * etc.\n    \nAny feedback on analysis tasks that you commonly do and could be made simpler with this library would be extremely \nvaluable, so please open up an issue with suggestions.\n \nInstallation / Usage\n--------------------\n\nTo install use pip:\n\n    $ pip install git+https://github.com/wdm0006/twitter-pandas.git\n\n\nOr clone the repo:\n\n    $ git clone https://github.com/wdm0006/twitter-pandas.git\n    $ python setup.py install\n    \nThen let 'er rip:\n\n    from twitterpandas import TwitterPandas\n    \n    # create a twitter pandas client object\n    tp = TwitterPandas(\n        TWITTER_OAUTH_TOKEN,\n        TWITTER_OAUTH_SECRET,\n        TWITTER_CONSUMER_KEY,\n        TWITTER_CONSUMER_SECRET\n    )\n    \n    # create a dataframe with 10 of my own followers\n    df = tp.followers(limit=10)\n    print(df.head())\n    \n    # create a dataframe with my own information\n    df = tp.me()\n    print(df)\n    \n    # get a dataframe with the information of user willmcginnis\n    df = tp.get_user(screen_name='willmcginnis')\n    print(df)\n    \n    # get back 10 users who match the query willmcginnis\n    df = tp.search_users(query='willmcginnis', limit=10)\n    print(df)\n    \nContributing\n------------\n\nWe are looking for contributors, so if you are interested, please review our contributor guidelines in CONTRIBUTING.md,\nwhich includes some proposed starter issues, or if you have an idea of your own, send us a pull request.\n\nExamples\n--------\n\nThere are some examples in the examples directory, to run them, you need API credentials.  Add a keys.py file (and make\nsure it's gitignored) with the format:\n\n    TWITTER_OAUTH_TOKEN = 'foo'\n    TWITTER_OAUTH_SECRET = 'bar'\n    TWITTER_CONSUMER_KEY = 'baz'\n    TWITTER_CONSUMER_SECRET = 'bat'\n    \nAnd the examples should work for you. If you run into any issues, feel free to open an issue and I'll try to help you out.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/wdm0006/twitterpandas/tarball/0.0.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wdm0006/twitterpandas", "keywords": "", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "twitterpandas", "package_url": "https://pypi.org/project/twitterpandas/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/twitterpandas/", "project_urls": {"Download": "https://github.com/wdm0006/twitterpandas/tarball/0.0.1", "Homepage": "https://github.com/wdm0006/twitterpandas"}, "release_url": "https://pypi.org/project/twitterpandas/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "A library for getting and interacting with twitter data via pandas", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            twitter-pandas<br>==============<br><br>version number: 0.0.1<br>author: Will McGinnis<br><br>Overview<br>--------<br><br>A library for getting and interacting with twitter data via pandas.  Currently very in-flux, based heavily on my other<br>library of this type: [git-pandas](https://github.com/wdm0006/git-pandas).<br><br>### Current State<br><br>The library itself is based heavily on [tweepy](http://docs.tweepy.org/en/v3.5.0/), and as such the development and API <br>to twitter-pandas will follow it's API pretty closely.  To start with I've implemented the:<br><br> * user methods<br> * timeline methods<br> * favorite methods<br> * account methods<br> * trends methods<br> * list methods<br> * saved search methods<br> * status methods<br> * direct message methods<br> * friendship methods<br>  <br>As well as some helper properties:<br><br> * api_id<br> * api_screen_name<br> <br>Which help access data tied to the API key's account quickly.<br><br>### Roadmap<br><br>Going forward, we will work our way through [tweepy's api](http://docs.tweepy.org/en/v3.5.0/api.html), providing <br>pandas-based interfaces to the methods in each of these groupings that return datasets (for now we are trying to stay <br>read-only where practical, with a data analysis focus).<br><br> * block methods<br> * help methods<br> * geo methods<br> <br>The general idea is to:<br><br> * Use sensible defaults to make interfaces sensible, intuitive, and safe<br> * Provide raw datasets as pandas dataframes for all common api endpoints that return data<br> * Provide some processed datasets for common analysis tasks:<br>    * people who I follow who don't follow me (and vice versa)<br>    * top users of a hashtag<br>    * top followers of mine<br>    * follower growth charts<br>    * etc.<br>    <br>Any feedback on analysis tasks that you commonly do and could be made simpler with this library would be extremely <br>valuable, so please open up an issue with suggestions.<br> <br>Installation / Usage<br>--------------------<br><br>To install use pip:<br><br>    $ pip install git+https://github.com/wdm0006/twitter-pandas.git<br><br><br>Or clone the repo:<br><br>    $ git clone https://github.com/wdm0006/twitter-pandas.git<br>    $ python setup.py install<br>    <br>Then let 'er rip:<br><br>    from twitterpandas import TwitterPandas<br>    <br>    # create a twitter pandas client object<br>    tp = TwitterPandas(<br>        TWITTER_OAUTH_TOKEN,<br>        TWITTER_OAUTH_SECRET,<br>        TWITTER_CONSUMER_KEY,<br>        TWITTER_CONSUMER_SECRET<br>    )<br>    <br>    # create a dataframe with 10 of my own followers<br>    df = tp.followers(limit=10)<br>    print(df.head())<br>    <br>    # create a dataframe with my own information<br>    df = tp.me()<br>    print(df)<br>    <br>    # get a dataframe with the information of user willmcginnis<br>    df = tp.get_user(screen_name='willmcginnis')<br>    print(df)<br>    <br>    # get back 10 users who match the query willmcginnis<br>    df = tp.search_users(query='willmcginnis', limit=10)<br>    print(df)<br>    <br>Contributing<br>------------<br><br>We are looking for contributors, so if you are interested, please review our contributor guidelines in CONTRIBUTING.md,<br>which includes some proposed starter issues, or if you have an idea of your own, send us a pull request.<br><br>Examples<br>--------<br><br>There are some examples in the examples directory, to run them, you need API credentials.  Add a keys.py file (and make<br>sure it's gitignored) with the format:<br><br>    TWITTER_OAUTH_TOKEN = 'foo'<br>    TWITTER_OAUTH_SECRET = 'bar'<br>    TWITTER_CONSUMER_KEY = 'baz'<br>    TWITTER_CONSUMER_SECRET = 'bat'<br>    <br>And the examples should work for you. If you run into any issues, feel free to open an issue and I'll try to help you out.\n          </div>"}, "last_serial": 2199908, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "553ccdae176bcf40f8d1445a650b8190", "sha256": "c32d6947e8123a6bc5f2c1abc721d233129b7384576a9a1c52f19ed51d679cde"}, "downloads": -1, "filename": "twitterpandas-0.0.1.tar.gz", "has_sig": false, "md5_digest": "553ccdae176bcf40f8d1445a650b8190", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12146, "upload_time": "2016-07-02T21:43:35", "upload_time_iso_8601": "2016-07-02T21:43:35.581799Z", "url": "https://files.pythonhosted.org/packages/bf/cf/697c368b456fa2b87aa4526570a61dc72b52c7f6620c467fbe1a766095ba/twitterpandas-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "553ccdae176bcf40f8d1445a650b8190", "sha256": "c32d6947e8123a6bc5f2c1abc721d233129b7384576a9a1c52f19ed51d679cde"}, "downloads": -1, "filename": "twitterpandas-0.0.1.tar.gz", "has_sig": false, "md5_digest": "553ccdae176bcf40f8d1445a650b8190", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12146, "upload_time": "2016-07-02T21:43:35", "upload_time_iso_8601": "2016-07-02T21:43:35.581799Z", "url": "https://files.pythonhosted.org/packages/bf/cf/697c368b456fa2b87aa4526570a61dc72b52c7f6620c467fbe1a766095ba/twitterpandas-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:35 2020"}