{"info": {"author": "Christian Bianciotto", "author_email": "info@ci8.it", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Build Tools"], "description": "# telegram-bot-deploy\n\n[![build](https://travis-ci.org/ciotto/telegram-bot-deploy.svg?branch=master)](https://travis-ci.org/ciotto/telegram-bot-deploy)\n[![coverage](https://img.shields.io/codecov/c/gh/ciotto/telegram-bot-deploy)](https://codecov.io/gh/ciotto/telegram-bot-deploy)\n[![Py Versions](https://img.shields.io/pypi/pyversions/telegram-bot-deploy)](https://pypi.python.org/pypi/telegram-bot-deploy/)\n[![license](https://img.shields.io/github/license/ciotto/telegram-bot-deploy)](https://pypi.python.org/pypi/telegram-bot-deploy/)\n[![status](https://img.shields.io/pypi/status/telegram-bot-deploy)](https://pypi.python.org/pypi/input-mocker/)\n[![PEP8](https://img.shields.io/badge/code%20style-pep8-orange)](https://www.python.org/dev/peps/pep-0008/)\n\n**telegram-bot-deploy** is *simple* and *easy-to-use* script that perform continuous deployment for the **Telegram bots**.\n\n## Installation\n\nYou can install **telegram-bot-deploy** from *PyPi*:\n\n`pip install telegram-bot-deploy`\n\nor from GitHub:\n\n`pip install https://github.com/ciotto/telegram-bot-deploy/archive/master.zip`\n\n## How to use\n\nYou can use **telegram-bot-deploy** with the command `tbd -u git@github.com:your/repo.git`.\n\nThere are many configurable parameters. You can see all configuration using command `tbd -h`.\n\nIs also possible to use environments variables or a `.env` file in order to set basic configuration.\n\nThe available variables are:\n\n  - `REPO_URL`: The URL of the repo to be used\n  - `REPO_PATH`: The local path of the repo\n  - `BRANCH`: The branch used for deploy\n\n  - `SSH_KEY`: The SSH key to be used to authenticate to the repo\n\n  - `CHAT_ID`: The chat ID used for bot communication\n  - `BOT_TOKEN`: The bot token used for bot communication\n\n  - `MSG_CREATE_VIRTUALENV_FAIL`: Message that will be send when create virtualenv fail\n  - `MSG_INSTALL_REQUIREMENTS_FAIL`: Message that will be send when install requirements fail\n  - `MSG_RUN_TESTS_FAIL`: Message that will be send when run tests fail\n  - `MSG_COVERAGE_FAIL`: Message that will be send when get coverage fail\n  - `MSG_COVERAGE_LOW`: Message that will be send when coverage is too low\n  - `MSG_RESTART_FAIL`: Message that will be send when bot restart fail\n  - `MSG_NEW_VERSION`: Message that will be send when new version was deployed\n\n  - `PID_FILE_PATH`: The path to the PID file\n\n  - `PYTHON_EXECUTABLE`: The Python executable\n  - `VIRTUALENV_PATH`: The path to the Python virtualenv\n  - `CREATE_VIRTUALENV`: The command used in order to create the Python virtualenv\n\n  - `REQUIREMENTS_PATH`: The path to the requirements file\n  - `INSTALL_REQUIREMENTS`: The command used in order to install the requirements\n\n  - `RUN_TESTS`: The command used in order to run the tests\n  - `MIN_COVERAGE`: The minimal coverage required in order to deploy\n  - `GET_COVERAGE_PERCENTAGE`: The command used in order to get the coverage percentage value\n\n  - `RUN_BOT`: The command used in order to run the bot\n\n  - `LOGGING_FORMAT`: The format for Python logging\n  - `LOGGING_LEVEL`: The level for Python logging\n  - `LOGGING_FILENAME`: The filename for Python logging \n\n## How to contribute\n\nThis is not a big library but if you want to contribute is very easy!\n\n 1. clone the repository `git clone https://github.com/ciotto/telegram-bot-deploy.git`\n 1. install all requirements `make init`\n 1. do your fixes or add new awesome features (with tests)\n 1. run the tests `make test`\n 1. commit in new branch and make a pull request\n\nYou chan use **telegram-bot-deploy** development version with the command `python -m bot_ci`.\n\n---\n\n\n## License\n\nReleased under [MIT License](https://github.com/ciotto/telegram-bot-deploy/blob/master/LICENSE).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/ciotto/telegram-bot-deploy/archive/v0.2.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ciotto/telegram-bot-deploy", "keywords": "telegram,bot,CI,CD,release", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "telegram-bot-deploy", "package_url": "https://pypi.org/project/telegram-bot-deploy/", "platform": "", "project_url": "https://pypi.org/project/telegram-bot-deploy/", "project_urls": {"Download": "https://github.com/ciotto/telegram-bot-deploy/archive/v0.2.0.tar.gz", "Homepage": "https://github.com/ciotto/telegram-bot-deploy"}, "release_url": "https://pypi.org/project/telegram-bot-deploy/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "telegram-bot-deploy is a simple script that perform continuous deployment for a Telegram bot.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>telegram-bot-deploy</h1>\n<p><a href=\"https://travis-ci.org/ciotto/telegram-bot-deploy\" rel=\"nofollow\"><img alt=\"build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec6b3ecb85e59706bbe2a21556c27f2905da53b2/68747470733a2f2f7472617669732d63692e6f72672f63696f74746f2f74656c656772616d2d626f742d6465706c6f792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/ciotto/telegram-bot-deploy\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/18528cf0f0e93f3c3627213f588fe76b130061ee/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f67682f63696f74746f2f74656c656772616d2d626f742d6465706c6f79\"></a>\n<a href=\"https://pypi.python.org/pypi/telegram-bot-deploy/\" rel=\"nofollow\"><img alt=\"Py Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cda0987a4536e7c3686a65441fa4166c61828f00/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f74656c656772616d2d626f742d6465706c6f79\"></a>\n<a href=\"https://pypi.python.org/pypi/telegram-bot-deploy/\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be66cc88c4e6a1c4be67c4bb774c20b99245db72/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f63696f74746f2f74656c656772616d2d626f742d6465706c6f79\"></a>\n<a href=\"https://pypi.python.org/pypi/input-mocker/\" rel=\"nofollow\"><img alt=\"status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/26661d29e4864aa0b90a3d54dc5692ea7761c5d5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f74656c656772616d2d626f742d6465706c6f79\"></a>\n<a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\"><img alt=\"PEP8\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c81ad3f1e58951c03801c7a4aec8ecd6f4cce810/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d706570382d6f72616e6765\"></a></p>\n<p><strong>telegram-bot-deploy</strong> is <em>simple</em> and <em>easy-to-use</em> script that perform continuous deployment for the <strong>Telegram bots</strong>.</p>\n<h2>Installation</h2>\n<p>You can install <strong>telegram-bot-deploy</strong> from <em>PyPi</em>:</p>\n<p><code>pip install telegram-bot-deploy</code></p>\n<p>or from GitHub:</p>\n<p><code>pip install https://github.com/ciotto/telegram-bot-deploy/archive/master.zip</code></p>\n<h2>How to use</h2>\n<p>You can use <strong>telegram-bot-deploy</strong> with the command <code>tbd -u git@github.com:your/repo.git</code>.</p>\n<p>There are many configurable parameters. You can see all configuration using command <code>tbd -h</code>.</p>\n<p>Is also possible to use environments variables or a <code>.env</code> file in order to set basic configuration.</p>\n<p>The available variables are:</p>\n<ul>\n<li>\n<p><code>REPO_URL</code>: The URL of the repo to be used</p>\n</li>\n<li>\n<p><code>REPO_PATH</code>: The local path of the repo</p>\n</li>\n<li>\n<p><code>BRANCH</code>: The branch used for deploy</p>\n</li>\n<li>\n<p><code>SSH_KEY</code>: The SSH key to be used to authenticate to the repo</p>\n</li>\n<li>\n<p><code>CHAT_ID</code>: The chat ID used for bot communication</p>\n</li>\n<li>\n<p><code>BOT_TOKEN</code>: The bot token used for bot communication</p>\n</li>\n<li>\n<p><code>MSG_CREATE_VIRTUALENV_FAIL</code>: Message that will be send when create virtualenv fail</p>\n</li>\n<li>\n<p><code>MSG_INSTALL_REQUIREMENTS_FAIL</code>: Message that will be send when install requirements fail</p>\n</li>\n<li>\n<p><code>MSG_RUN_TESTS_FAIL</code>: Message that will be send when run tests fail</p>\n</li>\n<li>\n<p><code>MSG_COVERAGE_FAIL</code>: Message that will be send when get coverage fail</p>\n</li>\n<li>\n<p><code>MSG_COVERAGE_LOW</code>: Message that will be send when coverage is too low</p>\n</li>\n<li>\n<p><code>MSG_RESTART_FAIL</code>: Message that will be send when bot restart fail</p>\n</li>\n<li>\n<p><code>MSG_NEW_VERSION</code>: Message that will be send when new version was deployed</p>\n</li>\n<li>\n<p><code>PID_FILE_PATH</code>: The path to the PID file</p>\n</li>\n<li>\n<p><code>PYTHON_EXECUTABLE</code>: The Python executable</p>\n</li>\n<li>\n<p><code>VIRTUALENV_PATH</code>: The path to the Python virtualenv</p>\n</li>\n<li>\n<p><code>CREATE_VIRTUALENV</code>: The command used in order to create the Python virtualenv</p>\n</li>\n<li>\n<p><code>REQUIREMENTS_PATH</code>: The path to the requirements file</p>\n</li>\n<li>\n<p><code>INSTALL_REQUIREMENTS</code>: The command used in order to install the requirements</p>\n</li>\n<li>\n<p><code>RUN_TESTS</code>: The command used in order to run the tests</p>\n</li>\n<li>\n<p><code>MIN_COVERAGE</code>: The minimal coverage required in order to deploy</p>\n</li>\n<li>\n<p><code>GET_COVERAGE_PERCENTAGE</code>: The command used in order to get the coverage percentage value</p>\n</li>\n<li>\n<p><code>RUN_BOT</code>: The command used in order to run the bot</p>\n</li>\n<li>\n<p><code>LOGGING_FORMAT</code>: The format for Python logging</p>\n</li>\n<li>\n<p><code>LOGGING_LEVEL</code>: The level for Python logging</p>\n</li>\n<li>\n<p><code>LOGGING_FILENAME</code>: The filename for Python logging</p>\n</li>\n</ul>\n<h2>How to contribute</h2>\n<p>This is not a big library but if you want to contribute is very easy!</p>\n<ol>\n<li>clone the repository <code>git clone https://github.com/ciotto/telegram-bot-deploy.git</code></li>\n<li>install all requirements <code>make init</code></li>\n<li>do your fixes or add new awesome features (with tests)</li>\n<li>run the tests <code>make test</code></li>\n<li>commit in new branch and make a pull request</li>\n</ol>\n<p>You chan use <strong>telegram-bot-deploy</strong> development version with the command <code>python -m bot_ci</code>.</p>\n<hr>\n<h2>License</h2>\n<p>Released under <a href=\"https://github.com/ciotto/telegram-bot-deploy/blob/master/LICENSE\" rel=\"nofollow\">MIT License</a>.</p>\n\n          </div>"}, "last_serial": 6907210, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6d97b0a7eb4d7f328b4f70053149eff8", "sha256": "bc935c532bff6df6d32aae46a0b7657b20724c8fe340e6228aefadb040c0c5b3"}, "downloads": -1, "filename": "telegram-bot-deploy-0.1.0-3.tar.gz", "has_sig": false, "md5_digest": "6d97b0a7eb4d7f328b4f70053149eff8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6876, "upload_time": "2020-03-27T18:56:44", "upload_time_iso_8601": "2020-03-27T18:56:44.861200Z", "url": "https://files.pythonhosted.org/packages/b9/8f/fe11751758d3e6d82742fe0aa21a0c560ae4384b2c536424c04d5b444aa7/telegram-bot-deploy-0.1.0-3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e795c07b5cab748456fb28bc777daa73", "sha256": "4026d4298aa24fd2494b60eaf5b329c29c13995992c9d2698f8e2230ea5392a2"}, "downloads": -1, "filename": "telegram-bot-deploy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e795c07b5cab748456fb28bc777daa73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9331, "upload_time": "2020-03-29T15:43:29", "upload_time_iso_8601": "2020-03-29T15:43:29.525879Z", "url": "https://files.pythonhosted.org/packages/62/2c/81cc02de46875ae93b9681f5456ac15e61a3d38b14aef606337b4355d53e/telegram-bot-deploy-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e795c07b5cab748456fb28bc777daa73", "sha256": "4026d4298aa24fd2494b60eaf5b329c29c13995992c9d2698f8e2230ea5392a2"}, "downloads": -1, "filename": "telegram-bot-deploy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e795c07b5cab748456fb28bc777daa73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9331, "upload_time": "2020-03-29T15:43:29", "upload_time_iso_8601": "2020-03-29T15:43:29.525879Z", "url": "https://files.pythonhosted.org/packages/62/2c/81cc02de46875ae93b9681f5456ac15e61a3d38b14aef606337b4355d53e/telegram-bot-deploy-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:56 2020"}