{"info": {"author": "PhiBo (DinoTools)", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3"], "description": "ArduRPC Python\n==============\n\nPython library to control microcontroller based boards by using the ArduRPC protocol.\n\nYou can find more information in the `documentation`_.\n\n\nInstall\n-------\n\n**Requirements:**\n\n* Python 2.7 or Python >= 3.2\n\n**Requirements (optional):**\n\n* `pyserial`_ >= 2.7\n\n**Install:**\n\nInstall the basic ArduRPC library.\n\n.. code-block:: console\n\n    $ pip install ardurpc\n\n\nExample\n-------\n\nThe `pyserial`_ library is required to run the following example.\n\n.. code-block:: python\n\n    import ardurpc\n    from ardurpc.connector import Serial, UDP\n\n    # Connect to the serial port\n    con = Serial(\"/dev/ttyACM0\", 9600)\n\n    # More examples:\n    # con = Serial(\"/dev/ttyUSB0\", 9600)\n    # con = UDP(host=\"192.168.1.1\", port=1234)\n\n    # New instance\n    rpc = ardurpc.ArduRPC(connector=con)\n\n    print(\"Version(Protocol): {0}\".format(rpc.getProtocolVersion()))\n    print(\n        \"Version(Library): {0}\".format(\n            \".\".join([str(i) for i in rpc.getLibraryVersion()])\n        )\n    )\n    print(\n        \"Available handlers: {0}\".format(\n            \", \".join(rpc.get_handler_names())\n        )\n    )\n\n\nLicense\n-------\n\nPublished under the LGPLv3+ (see LICENSE for more information)\n\n.. _`documentation`: http://ardurpc-python.readthedocs.org/\n.. _`pyserial`: https://pypi.python.org/pypi/pyserial", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DinoTools/ArduRPC-python", "keywords": null, "license": "LGPLv3+", "maintainer": null, "maintainer_email": null, "name": "ardurpc", "package_url": "https://pypi.org/project/ardurpc/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ardurpc/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/DinoTools/ArduRPC-python"}, "release_url": "https://pypi.org/project/ardurpc/0.3/", "requires_dist": null, "requires_python": null, "summary": "An extensible library to control microcontroller boards like Arduino using Python and the ArduRPC protocol", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python library to control microcontroller based boards by using the ArduRPC protocol.</p>\n<p>You can find more information in the <a href=\"http://ardurpc-python.readthedocs.org/\" rel=\"nofollow\">documentation</a>.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<p><strong>Requirements:</strong></p>\n<ul>\n<li>Python 2.7 or Python &gt;= 3.2</li>\n</ul>\n<p><strong>Requirements (optional):</strong></p>\n<ul>\n<li><a href=\"https://pypi.python.org/pypi/pyserial\" rel=\"nofollow\">pyserial</a> &gt;= 2.7</li>\n</ul>\n<p><strong>Install:</strong></p>\n<p>Install the basic ArduRPC library.</p>\n<pre><span class=\"gp\">$</span> pip install ardurpc\n</pre>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>The <a href=\"https://pypi.python.org/pypi/pyserial\" rel=\"nofollow\">pyserial</a> library is required to run the following example.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ardurpc</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ardurpc.connector</span> <span class=\"kn\">import</span> <span class=\"n\">Serial</span><span class=\"p\">,</span> <span class=\"n\">UDP</span>\n\n<span class=\"c1\"># Connect to the serial port</span>\n<span class=\"n\">con</span> <span class=\"o\">=</span> <span class=\"n\">Serial</span><span class=\"p\">(</span><span class=\"s2\">\"/dev/ttyACM0\"</span><span class=\"p\">,</span> <span class=\"mi\">9600</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># More examples:</span>\n<span class=\"c1\"># con = Serial(\"/dev/ttyUSB0\", 9600)</span>\n<span class=\"c1\"># con = UDP(host=\"192.168.1.1\", port=1234)</span>\n\n<span class=\"c1\"># New instance</span>\n<span class=\"n\">rpc</span> <span class=\"o\">=</span> <span class=\"n\">ardurpc</span><span class=\"o\">.</span><span class=\"n\">ArduRPC</span><span class=\"p\">(</span><span class=\"n\">connector</span><span class=\"o\">=</span><span class=\"n\">con</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Version(Protocol): </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">getProtocolVersion</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"Version(Library): </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n        <span class=\"s2\">\".\"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">getLibraryVersion</span><span class=\"p\">()])</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"Available handlers: </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n        <span class=\"s2\">\", \"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">get_handler_names</span><span class=\"p\">())</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Published under the LGPLv3+ (see LICENSE for more information)</p>\n</div>\n\n          </div>"}, "last_serial": 1177826, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "be0c460af4a3b20dfd0b99833d86fd64", "sha256": "80291f0fe6405a0d6823779c7e8de8c78755173bab9fe7a38bf357050fe037d3"}, "downloads": -1, "filename": "ardurpc-0.3.tar.gz", "has_sig": false, "md5_digest": "be0c460af4a3b20dfd0b99833d86fd64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9145, "upload_time": "2014-08-02T21:48:52", "upload_time_iso_8601": "2014-08-02T21:48:52.005722Z", "url": "https://files.pythonhosted.org/packages/05/bb/77be4929b463c53ffb135f34b7c48b87b4bf41ab2c92cfad3a3412e42246/ardurpc-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be0c460af4a3b20dfd0b99833d86fd64", "sha256": "80291f0fe6405a0d6823779c7e8de8c78755173bab9fe7a38bf357050fe037d3"}, "downloads": -1, "filename": "ardurpc-0.3.tar.gz", "has_sig": false, "md5_digest": "be0c460af4a3b20dfd0b99833d86fd64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9145, "upload_time": "2014-08-02T21:48:52", "upload_time_iso_8601": "2014-08-02T21:48:52.005722Z", "url": "https://files.pythonhosted.org/packages/05/bb/77be4929b463c53ffb135f34b7c48b87b4bf41ab2c92cfad3a3412e42246/ardurpc-0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:20 2020"}