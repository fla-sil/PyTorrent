{"info": {"author": "Donggun LEE", "author_email": "gnyotnu39@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License"], "description": "# Deep Geo\n- Easy Deep Learning\n- Copyright (c) 2019 [InfoLab](http://infolab.kunsan.ac.kr) ([Donggun LEE](http://duration.digimoon.net))\n- PIP : https://pypi.org/project/deepgeo/\n- Demo\n  - [deepGeo.io](http://deepGeo.io)\n  - [DeepGeo.io](http://duration.digimoon.net/dev/deepGeo/test/)\n- How to install\n  ```bash\n  pip install deepgeo\n  ```\n- other version\n  ```basha\n  # 0.0.1\n  pip install deepgeo==0.0.1\n\n  # 0.0.13\n  pip install deepgeo==0.0.13\n\n  # 0.1.0 : Support Yolo (Requirement OpenCV, Only Detect)\n  pip install deepgeo==0.1.0\n\n  # 0.2.0 : Support Extendsion Library\n  pip install deepgeo==0.2.0\n\n  # 0.2.1 : Support Font Management\n  pip install deepgeo==0.2.1\n  ```\n- requirement\n  - Python 3.6\n    ```bash\n    pip install exifread piexif pillow matplotlib scikit-image\n    ```\n- How to use\n  - font Management\n    ```python\n    from deepgeo import Font\n    # register\n    Font.register(\"D:/User/Downloads/font.ttf\",\"font\")\n\n    # delete\n    Font.delete(\"font\")\n    ```\n  - detect\n    ```python\n    from deepgeo import Image, Engine\n    path = \"D:\"\n\n    engine = Engine()\n    engine.add_model('maskrcnn_mscoco','maskrcnn', path+'/default_config.json')\n\n    image = Image(\"image.jpg\",path)\n    image = engine.detect('maskrcnn_mscoco', image)[0]\n    image.draw_annotations(image.get_annotation())\n    image.save(path+\"/\",\"test\",\"PNG\")\n    ```\n  - train\n    ```python\n    import sys,os,json\n    from deepgeo import Engine, Image\n\n    def init_loading_bar(max):\n    max_ = str(max)\n    sys.stdout.write(\"%s/0\" % max_)\n    sys.stdout.flush()\n    sys.stdout.write(\"\\b\")\n\n    def update_loading_bar(num):\n    sys.stdout.write(\"%s\" % str(num))\n    sys.stdout.flush()\n    sys.stdout.write(\"\\b\" * len(str(num)))\n\n    def final_loading_bar():\n    sys.stdout.write(\"\\n\")\n\n    def fjson_to_imgs(engine, dataset_name, path, image_path):\n    file_list = os.listdir(path)\n    file_list.sort()\n    init_loading_bar(len(file_list))\n    count = 0\n    for item in file_list:\n    count+=1\n    update_loading_bar(count)\n    if item.find('.json') is not -1:\n    data=None\n    with open(path+item) as data_file:    \n      data = json.load(data_file)\n    engine.add_data('mscoco',dataset_name,Image(data['uri'],image_path,data['annotations']))\n    del data\n    final_loading_bar()\n    del count\n    del file_list\n\n\n    engine = Engine()\n    engine.add_model('mscoco', 'maskrcnn', 'D:/test/config.json')\n    engine.add_dataset('mscoco','train','maskrcnn')\n    engine.add_dataset('mscoco','val','maskrcnn')\n    fjson_to_imgs(engine, 'train','D:/test/val2017/json/','D:/test/val2017/images/')\n    fjson_to_imgs(engine, 'val','D:/test/val2017/json/','D:/test/val2017/images/')\n\n    ## Training...\n    print(\" > STEP3 : Fine tune all layers\")\n    engine.set_config('mscoco',{\"EPOCHS\":160, \"LAYERS\":'all',\"LEARNING_RATE\":engine.get_config('mscoco',\"LEARNING_RATE\")/10})\n    engine.train('mscoco',\"train\",\"val\",None)\n\n    ... etc ...\n    ```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Sotaneum/DeepGeo", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "deepgeo", "package_url": "https://pypi.org/project/deepgeo/", "platform": "", "project_url": "https://pypi.org/project/deepgeo/", "project_urls": {"Homepage": "https://github.com/Sotaneum/DeepGeo"}, "release_url": "https://pypi.org/project/deepgeo/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Easy Deep Learning", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Deep Geo</h1>\n<ul>\n<li>Easy Deep Learning</li>\n<li>Copyright (c) 2019 <a href=\"http://infolab.kunsan.ac.kr\" rel=\"nofollow\">InfoLab</a> (<a href=\"http://duration.digimoon.net\" rel=\"nofollow\">Donggun LEE</a>)</li>\n<li>PIP : <a href=\"https://pypi.org/project/deepgeo/\" rel=\"nofollow\">https://pypi.org/project/deepgeo/</a></li>\n<li>Demo\n<ul>\n<li><a href=\"http://deepGeo.io\" rel=\"nofollow\">deepGeo.io</a></li>\n<li><a href=\"http://duration.digimoon.net/dev/deepGeo/test/\" rel=\"nofollow\">DeepGeo.io</a></li>\n</ul>\n</li>\n<li>How to install\n<pre>pip install deepgeo\n</pre>\n</li>\n<li>other version\n<pre># 0.0.1\npip install deepgeo==0.0.1\n\n# 0.0.13\npip install deepgeo==0.0.13\n\n# 0.1.0 : Support Yolo (Requirement OpenCV, Only Detect)\npip install deepgeo==0.1.0\n\n# 0.2.0 : Support Extendsion Library\npip install deepgeo==0.2.0\n\n# 0.2.1 : Support Font Management\npip install deepgeo==0.2.1\n</pre>\n</li>\n<li>requirement\n<ul>\n<li>Python 3.6\n<pre>pip install exifread piexif pillow matplotlib scikit-image\n</pre>\n</li>\n</ul>\n</li>\n<li>How to use\n<ul>\n<li>font Management\n<pre><span class=\"kn\">from</span> <span class=\"nn\">deepgeo</span> <span class=\"kn\">import</span> <span class=\"n\">Font</span>\n<span class=\"c1\"># register</span>\n<span class=\"n\">Font</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"s2\">\"D:/User/Downloads/font.ttf\"</span><span class=\"p\">,</span><span class=\"s2\">\"font\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># delete</span>\n<span class=\"n\">Font</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s2\">\"font\"</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>detect\n<pre><span class=\"kn\">from</span> <span class=\"nn\">deepgeo</span> <span class=\"kn\">import</span> <span class=\"n\">Image</span><span class=\"p\">,</span> <span class=\"n\">Engine</span>\n<span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"s2\">\"D:\"</span>\n\n<span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">Engine</span><span class=\"p\">()</span>\n<span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">add_model</span><span class=\"p\">(</span><span class=\"s1\">'maskrcnn_mscoco'</span><span class=\"p\">,</span><span class=\"s1\">'maskrcnn'</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">+</span><span class=\"s1\">'/default_config.json'</span><span class=\"p\">)</span>\n\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"s2\">\"image.jpg\"</span><span class=\"p\">,</span><span class=\"n\">path</span><span class=\"p\">)</span>\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">detect</span><span class=\"p\">(</span><span class=\"s1\">'maskrcnn_mscoco'</span><span class=\"p\">,</span> <span class=\"n\">image</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">draw_annotations</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">get_annotation</span><span class=\"p\">())</span>\n<span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">+</span><span class=\"s2\">\"/\"</span><span class=\"p\">,</span><span class=\"s2\">\"test\"</span><span class=\"p\">,</span><span class=\"s2\">\"PNG\"</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>train\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span><span class=\"o\">,</span><span class=\"nn\">os</span><span class=\"o\">,</span><span class=\"nn\">json</span>\n<span class=\"kn\">from</span> <span class=\"nn\">deepgeo</span> <span class=\"kn\">import</span> <span class=\"n\">Engine</span><span class=\"p\">,</span> <span class=\"n\">Image</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">init_loading_bar</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">):</span>\n<span class=\"n\">max_</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">)</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">%s</span><span class=\"s2\">/0\"</span> <span class=\"o\">%</span> <span class=\"n\">max_</span><span class=\"p\">)</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">flush</span><span class=\"p\">()</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">update_loading_bar</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">))</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">flush</span><span class=\"p\">()</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)))</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">final_loading_bar</span><span class=\"p\">():</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">fjson_to_imgs</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">,</span> <span class=\"n\">dataset_name</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">image_path</span><span class=\"p\">):</span>\n<span class=\"n\">file_list</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">listdir</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n<span class=\"n\">file_list</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">()</span>\n<span class=\"n\">init_loading_bar</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">file_list</span><span class=\"p\">))</span>\n<span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">file_list</span><span class=\"p\">:</span>\n<span class=\"n\">count</span><span class=\"o\">+=</span><span class=\"mi\">1</span>\n<span class=\"n\">update_loading_bar</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s1\">'.json'</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n<span class=\"n\">data</span><span class=\"o\">=</span><span class=\"kc\">None</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">+</span><span class=\"n\">item</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">data_file</span><span class=\"p\">:</span>    \n  <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">data_file</span><span class=\"p\">)</span>\n<span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">add_data</span><span class=\"p\">(</span><span class=\"s1\">'mscoco'</span><span class=\"p\">,</span><span class=\"n\">dataset_name</span><span class=\"p\">,</span><span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'uri'</span><span class=\"p\">],</span><span class=\"n\">image_path</span><span class=\"p\">,</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'annotations'</span><span class=\"p\">]))</span>\n<span class=\"k\">del</span> <span class=\"n\">data</span>\n<span class=\"n\">final_loading_bar</span><span class=\"p\">()</span>\n<span class=\"k\">del</span> <span class=\"n\">count</span>\n<span class=\"k\">del</span> <span class=\"n\">file_list</span>\n\n\n<span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">Engine</span><span class=\"p\">()</span>\n<span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">add_model</span><span class=\"p\">(</span><span class=\"s1\">'mscoco'</span><span class=\"p\">,</span> <span class=\"s1\">'maskrcnn'</span><span class=\"p\">,</span> <span class=\"s1\">'D:/test/config.json'</span><span class=\"p\">)</span>\n<span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">add_dataset</span><span class=\"p\">(</span><span class=\"s1\">'mscoco'</span><span class=\"p\">,</span><span class=\"s1\">'train'</span><span class=\"p\">,</span><span class=\"s1\">'maskrcnn'</span><span class=\"p\">)</span>\n<span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">add_dataset</span><span class=\"p\">(</span><span class=\"s1\">'mscoco'</span><span class=\"p\">,</span><span class=\"s1\">'val'</span><span class=\"p\">,</span><span class=\"s1\">'maskrcnn'</span><span class=\"p\">)</span>\n<span class=\"n\">fjson_to_imgs</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">,</span> <span class=\"s1\">'train'</span><span class=\"p\">,</span><span class=\"s1\">'D:/test/val2017/json/'</span><span class=\"p\">,</span><span class=\"s1\">'D:/test/val2017/images/'</span><span class=\"p\">)</span>\n<span class=\"n\">fjson_to_imgs</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">,</span> <span class=\"s1\">'val'</span><span class=\"p\">,</span><span class=\"s1\">'D:/test/val2017/json/'</span><span class=\"p\">,</span><span class=\"s1\">'D:/test/val2017/images/'</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## Training...</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" &gt; STEP3 : Fine tune all layers\"</span><span class=\"p\">)</span>\n<span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">set_config</span><span class=\"p\">(</span><span class=\"s1\">'mscoco'</span><span class=\"p\">,{</span><span class=\"s2\">\"EPOCHS\"</span><span class=\"p\">:</span><span class=\"mi\">160</span><span class=\"p\">,</span> <span class=\"s2\">\"LAYERS\"</span><span class=\"p\">:</span><span class=\"s1\">'all'</span><span class=\"p\">,</span><span class=\"s2\">\"LEARNING_RATE\"</span><span class=\"p\">:</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">get_config</span><span class=\"p\">(</span><span class=\"s1\">'mscoco'</span><span class=\"p\">,</span><span class=\"s2\">\"LEARNING_RATE\"</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">10</span><span class=\"p\">})</span>\n<span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span><span class=\"s1\">'mscoco'</span><span class=\"p\">,</span><span class=\"s2\">\"train\"</span><span class=\"p\">,</span><span class=\"s2\">\"val\"</span><span class=\"p\">,</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"o\">...</span> <span class=\"n\">etc</span> <span class=\"o\">...</span>\n</pre>\n</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 5869644, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "12c4207be3e2ea0e2858e7f9923e9b93", "sha256": "bbfabb4b0da5f20c6503c97b79a7fa398754420abf9f4a0e6f764e2657ef8b28"}, "downloads": -1, "filename": "deepgeo-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "12c4207be3e2ea0e2858e7f9923e9b93", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 67220, "upload_time": "2019-06-01T12:35:23", "upload_time_iso_8601": "2019-06-01T12:35:23.918135Z", "url": "https://files.pythonhosted.org/packages/67/e9/ba78e86e7791dab0501f442f627d3ff8f6e8d0c18fa112a3891a918aaaf7/deepgeo-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "6e302816050f99f8435e6df0a551129c", "sha256": "2aa637f8368b17994073067c46649a7ec4a1615070f79a30c61e5b78257b93da"}, "downloads": -1, "filename": "deepgeo-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "6e302816050f99f8435e6df0a551129c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 67427, "upload_time": "2019-06-27T02:53:27", "upload_time_iso_8601": "2019-06-27T02:53:27.006886Z", "url": "https://files.pythonhosted.org/packages/86/9b/a9e379d7043848195b0e15eaf78e6f51a6f1de6e0c4291e970e4d4894695/deepgeo-0.0.10-py3-none-any.whl", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "6cd3f2e072ae86dd3f3d5ae526360b23", "sha256": "e693b530eb35e21c2f6c623c99aefdc542f5a2197ebd5aaff14159768e76630f"}, "downloads": -1, "filename": "deepgeo-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "6cd3f2e072ae86dd3f3d5ae526360b23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 67429, "upload_time": "2019-06-27T03:08:49", "upload_time_iso_8601": "2019-06-27T03:08:49.723691Z", "url": "https://files.pythonhosted.org/packages/ed/d4/d98b5495b38845950d2bc614bf49273a58606cc08104699736686390ec5a/deepgeo-0.0.11-py3-none-any.whl", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "7b03a8078b905d03a9a7aeb7b18cf7bf", "sha256": "ee441c18a0dbe263ae71015aaef4f273e86d8d370dc7b10b93855d90bb5abc87"}, "downloads": -1, "filename": "deepgeo-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "7b03a8078b905d03a9a7aeb7b18cf7bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 67455, "upload_time": "2019-06-30T13:33:57", "upload_time_iso_8601": "2019-06-30T13:33:57.454408Z", "url": "https://files.pythonhosted.org/packages/6d/a0/39aaaefb222e77d5f4bf6f68075400e1768710dc465f3391f820db5c6bdd/deepgeo-0.0.12-py3-none-any.whl", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "faf28eca1cd1efa142b1255a4c206282", "sha256": "60025617ce850c1e8dada4e33ab7041350bf6483983aa5dc2f2edd719abb4229"}, "downloads": -1, "filename": "deepgeo-0.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "faf28eca1cd1efa142b1255a4c206282", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 67477, "upload_time": "2019-06-30T13:41:23", "upload_time_iso_8601": "2019-06-30T13:41:23.052965Z", "url": "https://files.pythonhosted.org/packages/f6/3e/5a10be819e17241e25ace941a413f05f1f917a60f695c32b796ac452a9a4/deepgeo-0.0.13-py3-none-any.whl", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "2dde472ee54c1cccca3cc2599dd73587", "sha256": "382d74320d18869e2f23ed24aeda7e03dbdc79f5507478f399315ba89aa956fa"}, "downloads": -1, "filename": "deepgeo-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "2dde472ee54c1cccca3cc2599dd73587", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 67386, "upload_time": "2019-06-18T02:37:28", "upload_time_iso_8601": "2019-06-18T02:37:28.152692Z", "url": "https://files.pythonhosted.org/packages/ae/b7/c092f1605cc56b08e4f36e50a5d744da205e3a04959c920c95607b48ffab/deepgeo-0.0.9-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d9f4468b4d3a313c512e64cd6fb31d41", "sha256": "3565ca0a29835900b0e3f711f61346d22407787bd55cc804c51409f92c0c0998"}, "downloads": -1, "filename": "deepgeo-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d9f4468b4d3a313c512e64cd6fb31d41", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15649, "upload_time": "2019-07-25T12:43:19", "upload_time_iso_8601": "2019-07-25T12:43:19.900888Z", "url": "https://files.pythonhosted.org/packages/84/d3/742b6a8577898e0e3badf2aa7f02fa6f7f703c07bb4af49e9fcc41af89ed/deepgeo-0.2.0-py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "f57b3bdd34a6be7d405809981f095654", "sha256": "52f8cb69c7ec8525cd6f5effa6bd5109ae1cf5154e74100a733facab1d54defb"}, "downloads": -1, "filename": "deepgeo-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f57b3bdd34a6be7d405809981f095654", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16326, "upload_time": "2019-07-30T07:49:10", "upload_time_iso_8601": "2019-07-30T07:49:10.295013Z", "url": "https://files.pythonhosted.org/packages/46/16/602203ecc12f9b5367f20a0bfcb22ccb550454fc618f9478b556f75100f3/deepgeo-0.2.1-py3-none-any.whl", "yanked": false}], "0.3.0a0": [{"comment_text": "", "digests": {"md5": "cb612536c97e1d24d91dd29e31ccaf51", "sha256": "e2d9c752b3d7deadea399bc0c16cad07c03613654481785287071aabe4be31a6"}, "downloads": -1, "filename": "deepgeo-0.3.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "cb612536c97e1d24d91dd29e31ccaf51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 77464, "upload_time": "2019-08-25T15:32:23", "upload_time_iso_8601": "2019-08-25T15:32:23.835750Z", "url": "https://files.pythonhosted.org/packages/98/26/40ac4ebdbde43035d7eb9ae63f66dc0b059ebb89d608374ecfe6b1513ef0/deepgeo-0.3.0a0-py3-none-any.whl", "yanked": false}], "0.3.1.1909230148a0": [{"comment_text": "", "digests": {"md5": "95115edb9ac845949e1700ff2bf936c5", "sha256": "d28a3f00f7557c449d0868e6c970002930792e50f484623ee7d2b53e2a10fcfa"}, "downloads": -1, "filename": "deepgeo-0.3.1.1909230148a0-py3-none-any.whl", "has_sig": false, "md5_digest": "95115edb9ac845949e1700ff2bf936c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 78335, "upload_time": "2019-09-22T16:51:13", "upload_time_iso_8601": "2019-09-22T16:51:13.848841Z", "url": "https://files.pythonhosted.org/packages/15/a2/8eac06fb416869141975297a4da391807284116de687d02620b2b7846104/deepgeo-0.3.1.1909230148a0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f57b3bdd34a6be7d405809981f095654", "sha256": "52f8cb69c7ec8525cd6f5effa6bd5109ae1cf5154e74100a733facab1d54defb"}, "downloads": -1, "filename": "deepgeo-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f57b3bdd34a6be7d405809981f095654", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16326, "upload_time": "2019-07-30T07:49:10", "upload_time_iso_8601": "2019-07-30T07:49:10.295013Z", "url": "https://files.pythonhosted.org/packages/46/16/602203ecc12f9b5367f20a0bfcb22ccb550454fc618f9478b556f75100f3/deepgeo-0.2.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:39:24 2020"}