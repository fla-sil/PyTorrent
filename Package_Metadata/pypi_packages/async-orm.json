{"info": {"author": "kerol", "author_email": "ikerol@163.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "### async-orm\nAsync orm for async web framework, you should use Django to manage your database(ddl etc).\n```\npip install -U async-orm\n```\n\n### Usage\n```\nfrom django.db import models\nfrom async_orm import BaseModel, transation, Q\n\n\nclass FooBar(BaseModel):\n    \"\"\" foo bar \"\"\"\n\n    game = models.CharField(verbose_name='game', max_length=30, blank=False, null=False, db_index=True)\n    title = models.CharField(verbose_name='title', max_length=100, blank=False, null=False)\n    weight = models.IntegerField(verbose_name='weight', blank=False, null=False, default=0)\n\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n\n    class Meta:\n        app_label = 'test'\n        verbose_name = \"foo_bar\"\n        verbose_name_plural = \"foo_bar\"\n        ordering = ['key', '-title']\n\n\nasync def test_foo_bar():\n    game = 'game1'\n    title = 'title2'\n    # select\n    await FooBar.select(where=Q(game=game, title=title) | Q(game='game2'), limit=2, offset=5)\n    await FooBar.select(fields=['id', 'title'], order_by=['-title'])\n    await FooBar.select(where=Q(weight__gt=0), limit=1)\n    await FooBar.select(count=['game'], distinct=True, where=Q(id__gte=2))\n\n    ret = await FooBar.select(where=Q(game='game2'), limit=1)\n    if not ret:\n        # insert\n        ret = FooBar(game='game2', title='title22', weight=0)\n        num = await ret.save()\n        print(ret.id)\n        print(num)\n        # result = FooBar.create(game='game2', title='title22', weight=0)\n    else:\n        # update\n        ret.title = 'new title' + str(datetime.datetime.now())\n        num = await ret.save()\n        print(ret.id)\n        print(num)\n\n        # delete\n        # num = await ret.delete()\n        # print(num)\n\n    # transaction\n    if ret is not None:\n        async with transaction() as ts:\n            await FooBar.create(game='game2', title='ttitle1', weight=0, ts=ts)\n            await FooBar.create(game='game2', title='ttitle2', weight=0, ts=ts)\n            await FooBar.create(game='game2', title='ttitle3', weight=0, ts=ts)\n            await ts.conn.rollback()\n            await FooBar.create(game='game2', title='ttitle4', weight=0, ts=ts)\n            await ts.conn.commit()\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kerol/async-orm", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "async-orm", "package_url": "https://pypi.org/project/async-orm/", "platform": "", "project_url": "https://pypi.org/project/async-orm/", "project_urls": {"Homepage": "https://github.com/kerol/async-orm"}, "release_url": "https://pypi.org/project/async-orm/1.0.0/", "requires_dist": ["django"], "requires_python": "", "summary": "async orm for async web framework", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h3>async-orm</h3>\n<p>Async orm for async web framework, you should use Django to manage your database(ddl etc).</p>\n<pre><code>pip install -U async-orm\n</code></pre>\n<h3>Usage</h3>\n<pre><code>from django.db import models\nfrom async_orm import BaseModel, transation, Q\n\n\nclass FooBar(BaseModel):\n    \"\"\" foo bar \"\"\"\n\n    game = models.CharField(verbose_name='game', max_length=30, blank=False, null=False, db_index=True)\n    title = models.CharField(verbose_name='title', max_length=100, blank=False, null=False)\n    weight = models.IntegerField(verbose_name='weight', blank=False, null=False, default=0)\n\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n\n    class Meta:\n        app_label = 'test'\n        verbose_name = \"foo_bar\"\n        verbose_name_plural = \"foo_bar\"\n        ordering = ['key', '-title']\n\n\nasync def test_foo_bar():\n    game = 'game1'\n    title = 'title2'\n    # select\n    await FooBar.select(where=Q(game=game, title=title) | Q(game='game2'), limit=2, offset=5)\n    await FooBar.select(fields=['id', 'title'], order_by=['-title'])\n    await FooBar.select(where=Q(weight__gt=0), limit=1)\n    await FooBar.select(count=['game'], distinct=True, where=Q(id__gte=2))\n\n    ret = await FooBar.select(where=Q(game='game2'), limit=1)\n    if not ret:\n        # insert\n        ret = FooBar(game='game2', title='title22', weight=0)\n        num = await ret.save()\n        print(ret.id)\n        print(num)\n        # result = FooBar.create(game='game2', title='title22', weight=0)\n    else:\n        # update\n        ret.title = 'new title' + str(datetime.datetime.now())\n        num = await ret.save()\n        print(ret.id)\n        print(num)\n\n        # delete\n        # num = await ret.delete()\n        # print(num)\n\n    # transaction\n    if ret is not None:\n        async with transaction() as ts:\n            await FooBar.create(game='game2', title='ttitle1', weight=0, ts=ts)\n            await FooBar.create(game='game2', title='ttitle2', weight=0, ts=ts)\n            await FooBar.create(game='game2', title='ttitle3', weight=0, ts=ts)\n            await ts.conn.rollback()\n            await FooBar.create(game='game2', title='ttitle4', weight=0, ts=ts)\n            await ts.conn.commit()\n\n</code></pre>\n\n          </div>"}, "last_serial": 4823763, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "5b1e8e556fd49bc5ddb66341874ab166", "sha256": "bcd2fee4e1e26963979f7ad6e779d5546efe6c38371de1e4a72cd821dbb534e4"}, "downloads": -1, "filename": "async_orm-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5b1e8e556fd49bc5ddb66341874ab166", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5545, "upload_time": "2019-02-15T09:02:16", "upload_time_iso_8601": "2019-02-15T09:02:16.887430Z", "url": "https://files.pythonhosted.org/packages/40/9a/34d2be0b7c6518e495a36d6bd0df8d873fef3748fee41df4dce06305f65d/async_orm-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff0954aad4234cca8e0a1e79a360d071", "sha256": "cc142155931d937f1d4e708619ecc3535fc3b81325b1435a4ae3d3b7fcd84763"}, "downloads": -1, "filename": "async-orm-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ff0954aad4234cca8e0a1e79a360d071", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4524, "upload_time": "2019-02-15T09:02:19", "upload_time_iso_8601": "2019-02-15T09:02:19.988410Z", "url": "https://files.pythonhosted.org/packages/c7/bb/551b59d866563736aa94bc94fe507818cd71aad72ac3f606650bebb6f6b4/async-orm-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b1e8e556fd49bc5ddb66341874ab166", "sha256": "bcd2fee4e1e26963979f7ad6e779d5546efe6c38371de1e4a72cd821dbb534e4"}, "downloads": -1, "filename": "async_orm-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5b1e8e556fd49bc5ddb66341874ab166", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5545, "upload_time": "2019-02-15T09:02:16", "upload_time_iso_8601": "2019-02-15T09:02:16.887430Z", "url": "https://files.pythonhosted.org/packages/40/9a/34d2be0b7c6518e495a36d6bd0df8d873fef3748fee41df4dce06305f65d/async_orm-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff0954aad4234cca8e0a1e79a360d071", "sha256": "cc142155931d937f1d4e708619ecc3535fc3b81325b1435a4ae3d3b7fcd84763"}, "downloads": -1, "filename": "async-orm-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ff0954aad4234cca8e0a1e79a360d071", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4524, "upload_time": "2019-02-15T09:02:19", "upload_time_iso_8601": "2019-02-15T09:02:19.988410Z", "url": "https://files.pythonhosted.org/packages/c7/bb/551b59d866563736aa94bc94fe507818cd71aad72ac3f606650bebb6f6b4/async-orm-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:42 2020"}