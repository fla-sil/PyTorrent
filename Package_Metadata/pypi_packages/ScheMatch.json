{"info": {"author": "Sumit Mukhija", "author_email": "sumukhija@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "#### What?\nBasic Python based tool to check schema of two dictionaries\n\n#### Does it check values?\nNope.\n\n#### Does it work if one of the keys is a dictionary itself?\nIt checks for nested dictionaries. So, yes.\n\n#### What Python version is it based on?\nPython 3.7\n\n#### Dependencies?\nNone.\n\n#### How to use?\n\n1. Import\n   ``` from schematch import match ```\n\n2. Prepare input\n\n     ```dicOne = {\"name\":\"Sumit\", \"likes\": \"sleeping\"}```\n    ```dicTwo = {\"name\":\"Shekhar\", \"likes\": \"guys\"}```\n\n3. Invoke method\n    ```are_schemas_same = match.are_keys_same_in_dictionary(dicOne, dicTwo)```\n\n4. Output\n    ```(True, '')```\n\nThe output is a tuple with a boolean and a string. The boolean determines if the schemas match and the string is the error message (if any)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sumitmukhija/ScheMatch", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ScheMatch", "package_url": "https://pypi.org/project/ScheMatch/", "platform": "", "project_url": "https://pypi.org/project/ScheMatch/", "project_urls": {"Homepage": "https://github.com/sumitmukhija/ScheMatch"}, "release_url": "https://pypi.org/project/ScheMatch/0.22/", "requires_dist": null, "requires_python": "", "summary": "Basic dictionary schema checker", "version": "0.22", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h4>What?</h4>\n<p>Basic Python based tool to check schema of two dictionaries</p>\n<h4>Does it check values?</h4>\n<p>Nope.</p>\n<h4>Does it work if one of the keys is a dictionary itself?</h4>\n<p>It checks for nested dictionaries. So, yes.</p>\n<h4>What Python version is it based on?</h4>\n<p>Python 3.7</p>\n<h4>Dependencies?</h4>\n<p>None.</p>\n<h4>How to use?</h4>\n<ol>\n<li>\n<p>Import\n<code>from schematch import match</code></p>\n</li>\n<li>\n<p>Prepare input</p>\n<p><code>dicOne = {\"name\":\"Sumit\", \"likes\": \"sleeping\"}</code>\n<code>dicTwo = {\"name\":\"Shekhar\", \"likes\": \"guys\"}</code></p>\n</li>\n<li>\n<p>Invoke method\n<code>are_schemas_same = match.are_keys_same_in_dictionary(dicOne, dicTwo)</code></p>\n</li>\n<li>\n<p>Output\n<code>(True, '')</code></p>\n</li>\n</ol>\n<p>The output is a tuple with a boolean and a string. The boolean determines if the schemas match and the string is the error message (if any)</p>\n\n          </div>"}, "last_serial": 6139047, "releases": {"0.22": [{"comment_text": "", "digests": {"md5": "3c0409bfbd01a2958da540144a06f5e5", "sha256": "d938f0ca120767ce0762194015b2ad7a75486ea2d423f116f757911db5fbc37a"}, "downloads": -1, "filename": "ScheMatch-0.22-py3-none-any.whl", "has_sig": false, "md5_digest": "3c0409bfbd01a2958da540144a06f5e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2356, "upload_time": "2019-11-14T21:40:28", "upload_time_iso_8601": "2019-11-14T21:40:28.661153Z", "url": "https://files.pythonhosted.org/packages/52/48/21ad207adc1e4bbb044bd75886719e160fafb7060f5b648f31cf389b8bee/ScheMatch-0.22-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3c0409bfbd01a2958da540144a06f5e5", "sha256": "d938f0ca120767ce0762194015b2ad7a75486ea2d423f116f757911db5fbc37a"}, "downloads": -1, "filename": "ScheMatch-0.22-py3-none-any.whl", "has_sig": false, "md5_digest": "3c0409bfbd01a2958da540144a06f5e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2356, "upload_time": "2019-11-14T21:40:28", "upload_time_iso_8601": "2019-11-14T21:40:28.661153Z", "url": "https://files.pythonhosted.org/packages/52/48/21ad207adc1e4bbb044bd75886719e160fafb7060f5b648f31cf389b8bee/ScheMatch-0.22-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:57:48 2020"}