{"info": {"author": "Jonas Melian", "author_email": "devel@jonasmelian.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Database", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Security"], "description": "============================\nThe repoze.what Redis plugin\n============================\n\nThis is an adapters plugin for `repoze.what <http://what.repoze.org/docs/1.x/>`_\n\nThe Redis plugin makes *repoze.what* support sources defined in Redis key-value\ndatabases by providing one group adapter and one permission adapter.\n\nRedis\n=====\n\n  `Redis <http://code.google.com/p/redis/>`_ is a key-value database. It is\n  similar to memcached but the dataset is not volatile, and values can be strings,\n  exactly like in memcached, but also lists and sets with atomic operations\n  to push/pop elements.\n\n  In order to be very fast but at the same time persistent the whole dataset\n  is taken in memory and from time to time and/or when a number of changes\n  to the dataset are performed it is written asynchronously on disk.\n\nThe database name is numeric; the default database is **0**.\n\n*repoze.what.plugin.redis* uses database **1** for the group adapter and\ndatabase **2** for the permission adapter.\n\nThe database **0** could be used for any table related to users as the sessions.\n\nBuilding\n--------\n\nTo compile the trunk version::\n\n  $ git clone git://github.com/antirez/redis.git\n  $ cd redis\n  $ make\n\nTo update::\n\n  $ git pull && make clean && make\n\nTo run the server::\n\n  $ ./redis-server\n\nThe Python library is in *./client-libraries/python/*\n\n*Note*: The client-libraries directory inside the Redis distribution is\nonly a temp thing.\n\nLittle issues\n-------------\n\n* If the client is disconnected after of some time of inactivity --it's\n  configured to 300 seconds by default--, and it's called any command then\n  it raises a *ConnectionError*. It should be rather managed from the Python driver:\n\n  http://groups.google.com/group/redis-db/browse_thread/thread/2581396a6722d3f9\n\n* The data are synchronously saved. It could be modified the *_save* function\n  (in the Redis adapter) for that it been asynchronously saved, or for that\n  it been saved only when a number of changes to the dataset are performed.\n\nUse\n===\n\nTypical usage:\n\n>>> import redis\n>>> from repoze.what.plugins.redis import adapters\n\n>>> group = adapters.RedisGroupAdapter(redis.Redis())\n>>> permission = adapters.RedisPermissionAdapter(redis.Redis())", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/ares/repozewhatpluginsredis/", "keywords": "web application server wsgi authorization redis repoze", "license": "Apache License, Version 2.0", "maintainer": null, "maintainer_email": null, "name": "repoze.what.plugins.redis", "package_url": "https://pypi.org/project/repoze.what.plugins.redis/", "platform": "any", "project_url": "https://pypi.org/project/repoze.what.plugins.redis/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://bitbucket.org/ares/repozewhatpluginsredis/"}, "release_url": "https://pypi.org/project/repoze.what.plugins.redis/1.0rc1/", "requires_dist": null, "requires_python": null, "summary": "The repoze.what Redis plugin", "version": "1.0rc1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is an adapters plugin for <a href=\"http://what.repoze.org/docs/1.x/\" rel=\"nofollow\">repoze.what</a></p>\n<p>The Redis plugin makes <em>repoze.what</em> support sources defined in Redis key-value\ndatabases by providing one group adapter and one permission adapter.</p>\n<div id=\"redis\">\n<h2>Redis</h2>\n<blockquote>\n<p><a href=\"http://code.google.com/p/redis/\" rel=\"nofollow\">Redis</a> is a key-value database. It is\nsimilar to memcached but the dataset is not volatile, and values can be strings,\nexactly like in memcached, but also lists and sets with atomic operations\nto push/pop elements.</p>\n<p>In order to be very fast but at the same time persistent the whole dataset\nis taken in memory and from time to time and/or when a number of changes\nto the dataset are performed it is written asynchronously on disk.</p>\n</blockquote>\n<p>The database name is numeric; the default database is <strong>0</strong>.</p>\n<p><em>repoze.what.plugin.redis</em> uses database <strong>1</strong> for the group adapter and\ndatabase <strong>2</strong> for the permission adapter.</p>\n<p>The database <strong>0</strong> could be used for any table related to users as the sessions.</p>\n<div id=\"building\">\n<h3>Building</h3>\n<p>To compile the trunk version:</p>\n<pre>$ git clone git://github.com/antirez/redis.git\n$ cd redis\n$ make\n</pre>\n<p>To update:</p>\n<pre>$ git pull &amp;&amp; make clean &amp;&amp; make\n</pre>\n<p>To run the server:</p>\n<pre>$ ./redis-server\n</pre>\n<p>The Python library is in <em>./client-libraries/python/</em></p>\n<p><em>Note</em>: The client-libraries directory inside the Redis distribution is\nonly a temp thing.</p>\n</div>\n<div id=\"little-issues\">\n<h3>Little issues</h3>\n<ul>\n<li><p>If the client is disconnected after of some time of inactivity \u2013it\u2019s\nconfigured to 300 seconds by default\u2013, and it\u2019s called any command then\nit raises a <em>ConnectionError</em>. It should be rather managed from the Python driver:</p>\n<p><a href=\"http://groups.google.com/group/redis-db/browse_thread/thread/2581396a6722d3f9\" rel=\"nofollow\">http://groups.google.com/group/redis-db/browse_thread/thread/2581396a6722d3f9</a></p>\n</li>\n<li><p>The data are synchronously saved. It could be modified the <em>_save</em> function\n(in the Redis adapter) for that it been asynchronously saved, or for that\nit been saved only when a number of changes to the dataset are performed.</p>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"use\">\n<h2>Use</h2>\n<p>Typical usage:</p>\n<pre>&gt;&gt;&gt; import redis\n&gt;&gt;&gt; from repoze.what.plugins.redis import adapters\n</pre>\n<pre>&gt;&gt;&gt; group = adapters.RedisGroupAdapter(redis.Redis())\n&gt;&gt;&gt; permission = adapters.RedisPermissionAdapter(redis.Redis())\n</pre>\n</div>\n\n          </div>"}, "last_serial": 798842, "releases": {"1.0rc1": [{"comment_text": "", "digests": {"md5": "e5e81601ac9652d4bce2d3deb97ba6bb", "sha256": "dac393eb4ea5123317ce16fa3c124f4d14ac879bc11af367f790395dc88d627b"}, "downloads": -1, "filename": "repoze.what.plugins.redis-1.0rc1.tar.gz", "has_sig": false, "md5_digest": "e5e81601ac9652d4bce2d3deb97ba6bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10226, "upload_time": "2009-05-24T11:27:06", "upload_time_iso_8601": "2009-05-24T11:27:06.455709Z", "url": "https://files.pythonhosted.org/packages/4c/7a/c7fa54d16c79eb3e2ff287f92200b6ac011069a0f7f2390c163058620d42/repoze.what.plugins.redis-1.0rc1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e5e81601ac9652d4bce2d3deb97ba6bb", "sha256": "dac393eb4ea5123317ce16fa3c124f4d14ac879bc11af367f790395dc88d627b"}, "downloads": -1, "filename": "repoze.what.plugins.redis-1.0rc1.tar.gz", "has_sig": false, "md5_digest": "e5e81601ac9652d4bce2d3deb97ba6bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10226, "upload_time": "2009-05-24T11:27:06", "upload_time_iso_8601": "2009-05-24T11:27:06.455709Z", "url": "https://files.pythonhosted.org/packages/4c/7a/c7fa54d16c79eb3e2ff287f92200b6ac011069a0f7f2390c163058620d42/repoze.what.plugins.redis-1.0rc1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:23 2020"}