{"info": {"author": "Alexander Robert Baker", "author_email": "alexander.baker@uqconnect.edu.au", "bugtrack_url": null, "classifiers": [], "description": "Keggm - a small suite of tools I use to analyses microbial genomes\r\n\r\nThis is currently a very barebones package. Only two functions are fully operational.\r\n\r\nenrichm looks for metabolic blocks which are enriched in your genomes compared to some background.\r\nThis is good to try and get a quick idea on how your genomes are different to the background set in terms of certain metabolic functions.\r\nYou can specify you own blocks and use custom protein names which make it quite extensible.\r\n\r\ncompletm is a small tool to aid exploring what functions your genome can perform.\r\nIt creates a \"completeness\" matrix which gives you an idea if your genome shows the potential to perform that metabolic block.\r\nIt also create a matrix with the protein names which contributed to that completeness which can help you check if your metabolic block was\r\ncomplete due to proteins which are normally poorly annotated and, if there are complementary proteins, which ones were present.\r\nThis will be expanded to provide a list of \"complete\" modules for each organism based on some user threshold.\r\n\r\n\r\n*In the works*\r\n\r\nplots aims to create some small visualisations to better parse the completeness results. It consists of heatmaps, to quickly scan across genomes, \r\nand will later included arrows diagrams of each metabolic block where each arrow represents a protein. \r\nThe arrows will be coloured based on the organisms which had the relevant proteins.\r\n\r\noverlap tries to identify is organisms have the potential to supplement each other. \r\nIt does this by looking for metabolic blocks which are complete in one organisms but the rests of the metabolic block can be found in another organism.\r\n\r\nTODO:\r\n\r\n1. Make a better test suite\r\n\t\r\n2. Make it usable on the command line (for convenience)\r\n\r\n3. Implement auxilliary non-enrichment features into main software\r\n\ta. Plots with options to compare completeness\r\n\tb. Visualisation of overlap within module across multiple genomes similar to Symbiodinium+coral paper\r\n\tc. Some kind of colourisation of KEGG pathways to give you a broad idea of what's present within a pathway.\r\n\r\n4. Eventually, if I can, make the network stuff robust enough for the potential automated discovery of novel metabolism\r\n\r\n5. Add more customisability - Make it that any user can essentially create there own extra kegg data for use in this software\r\n\ta. requires a few auxilliary tools to augment permanent databases\r\n\r\n6. Unify Database scraping and production to be a single command\r\n\r\n-----------------------------------------------------------------------------------------------------------------------------\r\n\r\nOther todo:\r\n\r\n1. Make it multithreaded/multiprocessor at the comparison stage (current scale of comparisons poses no speed issue)\r\n\tImplement in terms of producure consumer model of multithreading\r\n\r\n2. Investigate optimised Booschloo's test and if it has reasonable runtime (unlikely)\r\n\r\n3. Implement a logging system for better debugging - will make my life easier.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/AlexRBaker/", "keywords": "kegg", "license": "GNU GPL3+", "maintainer": null, "maintainer_email": null, "name": "keggm", "package_url": "https://pypi.org/project/keggm/", "platform": "any", "project_url": "https://pypi.org/project/keggm/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/AlexRBaker/"}, "release_url": "https://pypi.org/project/keggm/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "A tool for doing enrichment tests of functional groupings of genes across genomes and lineages.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Keggm - a small suite of tools I use to analyses microbial genomes</p>\n<p>This is currently a very barebones package. Only two functions are fully operational.</p>\n<p>enrichm looks for metabolic blocks which are enriched in your genomes compared to some background.\nThis is good to try and get a quick idea on how your genomes are different to the background set in terms of certain metabolic functions.\nYou can specify you own blocks and use custom protein names which make it quite extensible.</p>\n<p>completm is a small tool to aid exploring what functions your genome can perform.\nIt creates a \u201ccompleteness\u201d matrix which gives you an idea if your genome shows the potential to perform that metabolic block.\nIt also create a matrix with the protein names which contributed to that completeness which can help you check if your metabolic block was\ncomplete due to proteins which are normally poorly annotated and, if there are complementary proteins, which ones were present.\nThis will be expanded to provide a list of \u201ccomplete\u201d modules for each organism based on some user threshold.</p>\n<p><em>In the works</em></p>\n<p>plots aims to create some small visualisations to better parse the completeness results. It consists of heatmaps, to quickly scan across genomes,\nand will later included arrows diagrams of each metabolic block where each arrow represents a protein.\nThe arrows will be coloured based on the organisms which had the relevant proteins.</p>\n<p>overlap tries to identify is organisms have the potential to supplement each other.\nIt does this by looking for metabolic blocks which are complete in one organisms but the rests of the metabolic block can be found in another organism.</p>\n<p>TODO:</p>\n<ol>\n<li>Make a better test suite</li>\n<li>Make it usable on the command line (for convenience)</li>\n<li><dl>\n<dt>Implement auxilliary non-enrichment features into main software</dt>\n<dd><ol>\n<li>Plots with options to compare completeness</li>\n<li>Visualisation of overlap within module across multiple genomes similar to Symbiodinium+coral paper</li>\n<li>Some kind of colourisation of KEGG pathways to give you a broad idea of what\u2019s present within a pathway.</li>\n</ol>\n</dd>\n</dl>\n</li>\n<li>Eventually, if I can, make the network stuff robust enough for the potential automated discovery of novel metabolism</li>\n<li><dl>\n<dt>Add more customisability - Make it that any user can essentially create there own extra kegg data for use in this software</dt>\n<dd><ol>\n<li>requires a few auxilliary tools to augment permanent databases</li>\n</ol>\n</dd>\n</dl>\n</li>\n<li>Unify Database scraping and production to be a single command</li>\n</ol>\n<hr class=\"docutils\">\n<p>Other todo:</p>\n<ol>\n<li><dl>\n<dt>Make it multithreaded/multiprocessor at the comparison stage (current scale of comparisons poses no speed issue)</dt>\n<dd>Implement in terms of producure consumer model of multithreading</dd>\n</dl>\n</li>\n<li>Investigate optimised Booschloo\u2019s test and if it has reasonable runtime (unlikely)</li>\n<li>Implement a logging system for better debugging - will make my life easier.</li>\n</ol>\n\n          </div>"}, "last_serial": 2532446, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b1588fe5c0b8cea8bf14ca01ae23e347", "sha256": "c0ab873424388839fb13732d970e307011be33b853ad59dbdf9d64fc73ee7395"}, "downloads": -1, "filename": "keggm-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b1588fe5c0b8cea8bf14ca01ae23e347", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 43959, "upload_time": "2016-12-21T11:56:48", "upload_time_iso_8601": "2016-12-21T11:56:48.658435Z", "url": "https://files.pythonhosted.org/packages/73/3f/7a3c235b16c69e63a75382bca12ed5a7f96e11a5dc1d13ff6bf072c004af/keggm-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f50124641b6e2584cd138170b8a587e", "sha256": "0994ba442b4b741f24faa3b1e7cf160f23a9c2f138de989d7ea926ffdcbec039"}, "downloads": -1, "filename": "keggm-0.0.1.zip", "has_sig": false, "md5_digest": "8f50124641b6e2584cd138170b8a587e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35219, "upload_time": "2016-12-21T11:56:53", "upload_time_iso_8601": "2016-12-21T11:56:53.230016Z", "url": "https://files.pythonhosted.org/packages/d9/ba/240ce889185407d6780e30560e902d67d594be1d831293a2facf221389f3/keggm-0.0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b1588fe5c0b8cea8bf14ca01ae23e347", "sha256": "c0ab873424388839fb13732d970e307011be33b853ad59dbdf9d64fc73ee7395"}, "downloads": -1, "filename": "keggm-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b1588fe5c0b8cea8bf14ca01ae23e347", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 43959, "upload_time": "2016-12-21T11:56:48", "upload_time_iso_8601": "2016-12-21T11:56:48.658435Z", "url": "https://files.pythonhosted.org/packages/73/3f/7a3c235b16c69e63a75382bca12ed5a7f96e11a5dc1d13ff6bf072c004af/keggm-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f50124641b6e2584cd138170b8a587e", "sha256": "0994ba442b4b741f24faa3b1e7cf160f23a9c2f138de989d7ea926ffdcbec039"}, "downloads": -1, "filename": "keggm-0.0.1.zip", "has_sig": false, "md5_digest": "8f50124641b6e2584cd138170b8a587e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35219, "upload_time": "2016-12-21T11:56:53", "upload_time_iso_8601": "2016-12-21T11:56:53.230016Z", "url": "https://files.pythonhosted.org/packages/d9/ba/240ce889185407d6780e30560e902d67d594be1d831293a2facf221389f3/keggm-0.0.1.zip", "yanked": false}], "timestamp": "Fri May  8 00:50:18 2020"}