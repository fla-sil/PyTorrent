{"info": {"author": "Edmond Chuc", "author_email": "edmond.chuc@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "# Ontogram\n\nOntogram is an OWL ontology diagram generator.\n\nCurrently it supports `owl:class`, `rdfs:subClassOf`, `owl:equivalentClass`, datatype properties and domain and range relationships. I am planning to add support for `owl:subClassOf` restrictions soon. \n\n\n## Example output\n\nThe output of [examples/tern-org.ttl](examples/tern-org.ttl).\n\n![generated ontology diagram](examples/tern-org.ttl.txt.png)\n\n\n## Installation\n\nInstall via PyPI for Python 3.\n\n```\npip3 install ontogram\n```\n\n\n## Usage\n\n### Web service\n\n*Coming soon.*\n\n\n### Command line application\n\n```\n$ ontogram --help\n\nUsage: ontogram [OPTIONS] ONTOLOGY_FILEPATH\n\n  Ontogram CLI is a tool to generate a diagram from an OWL ontology file.\n\nOptions:\n  --format ['turtle', 'xml', 'nt', 'n3']\n                                  RDF serialization of input file. Default is\n                                  turtle.\n  --help                          Show this message and exit.\n```\n\nUse Ontogram's CLI to generate diagrams of an OWL ontology.\n```\nontogram ontology.ttl\n```\n\nOutput will be 3 files, `ontology.ttl.txt`, `ontology.ttl.png`, `ontology.ttl.svg`.\n\nUse the --format option to specify the RDF serialization of the ontology if it is not Turtle.\n\n\n### Python library\n\nOntogram is a Python library and can be easily integrated with any existing Python application.\n\n```python\nfrom ontogram import Ontogram\n\n# First parameter accepts a file path to the OWL ontology. \n# Second parameter tells Ontogram what RDF format the OWL ontology is in.\nontogram = Ontogram('ontology.ttl', format='turtle')\n\n# Generate a PNG diagram from the OWl ontology and write to disk as 'ontology.ttl.txt'.\nontogram.png_file('ontology.ttl.txt')\n\n# Same as above, but as an SVG diagram. \nontogram.svg_file('ontology.ttl.svg')\n```\n\nSee the [examples](examples) directory for example outputs.\n\n\n## Docker image for diagram generation within pyLODE\n\nA Docker image has been created to automatically embed the generated diagram into a pyLODE document. See https://github.com/edmondchuc/docker-pylode\n\nSee the pyLODE output with the generated ontology diagram: https://w3id.org/tern/ontologies/org\n\nA more formal integration with pyLODE will be coming soon.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/edmondchuc/ontogram", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ontogram", "package_url": "https://pypi.org/project/ontogram/", "platform": "", "project_url": "https://pypi.org/project/ontogram/", "project_urls": {"Homepage": "https://github.com/edmondchuc/ontogram"}, "release_url": "https://pypi.org/project/ontogram/0.1.0.post1/", "requires_dist": ["rdflib", "click", "plantuml"], "requires_python": ">=3.6", "summary": "Ontogram is an OWL ontology diagram generator.", "version": "0.1.0.post1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Ontogram</h1>\n<p>Ontogram is an OWL ontology diagram generator.</p>\n<p>Currently it supports <code>owl:class</code>, <code>rdfs:subClassOf</code>, <code>owl:equivalentClass</code>, datatype properties and domain and range relationships. I am planning to add support for <code>owl:subClassOf</code> restrictions soon.</p>\n<h2>Example output</h2>\n<p>The output of <a href=\"examples/tern-org.ttl\" rel=\"nofollow\">examples/tern-org.ttl</a>.</p>\n<p><img alt=\"generated ontology diagram\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/75019ab9da761f01c1244ae4074ec6d1a0a45a9e/6578616d706c65732f7465726e2d6f72672e74746c2e7478742e706e67\"></p>\n<h2>Installation</h2>\n<p>Install via PyPI for Python 3.</p>\n<pre><code>pip3 install ontogram\n</code></pre>\n<h2>Usage</h2>\n<h3>Web service</h3>\n<p><em>Coming soon.</em></p>\n<h3>Command line application</h3>\n<pre><code>$ ontogram --help\n\nUsage: ontogram [OPTIONS] ONTOLOGY_FILEPATH\n\n  Ontogram CLI is a tool to generate a diagram from an OWL ontology file.\n\nOptions:\n  --format ['turtle', 'xml', 'nt', 'n3']\n                                  RDF serialization of input file. Default is\n                                  turtle.\n  --help                          Show this message and exit.\n</code></pre>\n<p>Use Ontogram's CLI to generate diagrams of an OWL ontology.</p>\n<pre><code>ontogram ontology.ttl\n</code></pre>\n<p>Output will be 3 files, <code>ontology.ttl.txt</code>, <code>ontology.ttl.png</code>, <code>ontology.ttl.svg</code>.</p>\n<p>Use the --format option to specify the RDF serialization of the ontology if it is not Turtle.</p>\n<h3>Python library</h3>\n<p>Ontogram is a Python library and can be easily integrated with any existing Python application.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ontogram</span> <span class=\"kn\">import</span> <span class=\"n\">Ontogram</span>\n\n<span class=\"c1\"># First parameter accepts a file path to the OWL ontology. </span>\n<span class=\"c1\"># Second parameter tells Ontogram what RDF format the OWL ontology is in.</span>\n<span class=\"n\">ontogram</span> <span class=\"o\">=</span> <span class=\"n\">Ontogram</span><span class=\"p\">(</span><span class=\"s1\">'ontology.ttl'</span><span class=\"p\">,</span> <span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">'turtle'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Generate a PNG diagram from the OWl ontology and write to disk as 'ontology.ttl.txt'.</span>\n<span class=\"n\">ontogram</span><span class=\"o\">.</span><span class=\"n\">png_file</span><span class=\"p\">(</span><span class=\"s1\">'ontology.ttl.txt'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Same as above, but as an SVG diagram. </span>\n<span class=\"n\">ontogram</span><span class=\"o\">.</span><span class=\"n\">svg_file</span><span class=\"p\">(</span><span class=\"s1\">'ontology.ttl.svg'</span><span class=\"p\">)</span>\n</pre>\n<p>See the <a href=\"examples\" rel=\"nofollow\">examples</a> directory for example outputs.</p>\n<h2>Docker image for diagram generation within pyLODE</h2>\n<p>A Docker image has been created to automatically embed the generated diagram into a pyLODE document. See <a href=\"https://github.com/edmondchuc/docker-pylode\" rel=\"nofollow\">https://github.com/edmondchuc/docker-pylode</a></p>\n<p>See the pyLODE output with the generated ontology diagram: <a href=\"https://w3id.org/tern/ontologies/org\" rel=\"nofollow\">https://w3id.org/tern/ontologies/org</a></p>\n<p>A more formal integration with pyLODE will be coming soon.</p>\n\n          </div>"}, "last_serial": 6223972, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "bb49454e3deded1eb5b9f2a3a661476f", "sha256": "8b1b66a5e5c210e3cd92d5f63065cd8b006f973f149c878ffc60971d33612b17"}, "downloads": -1, "filename": "ontogram-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bb49454e3deded1eb5b9f2a3a661476f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 46817, "upload_time": "2019-12-01T10:07:19", "upload_time_iso_8601": "2019-12-01T10:07:19.330127Z", "url": "https://files.pythonhosted.org/packages/e4/03/1e6da3204b1c7cca4c8e641a0c7645b8853158376f389bd07b850c0b8961/ontogram-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db37550ecdd4ba9913697e60f293ab8c", "sha256": "98d00e39cb6488e24198ae9485cc36247d9519881f6920e0f9692ed3dc38fdf4"}, "downloads": -1, "filename": "ontogram-0.1.0.tar.gz", "has_sig": false, "md5_digest": "db37550ecdd4ba9913697e60f293ab8c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33295, "upload_time": "2019-12-01T10:07:21", "upload_time_iso_8601": "2019-12-01T10:07:21.568585Z", "url": "https://files.pythonhosted.org/packages/96/cd/6fb8d5993d05b56674f98f1cdf7da87eccab7a08c8678d85c4d871f4bb1b/ontogram-0.1.0.tar.gz", "yanked": false}], "0.1.0.post1": [{"comment_text": "", "digests": {"md5": "b0bdb65205904eebbe45360604797fea", "sha256": "6af7ce406cfe609b28c1c477febd2a5eed23811f0dbfff10bc97561b57a1cfef"}, "downloads": -1, "filename": "ontogram-0.1.0.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "b0bdb65205904eebbe45360604797fea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 47422, "upload_time": "2019-12-01T10:22:41", "upload_time_iso_8601": "2019-12-01T10:22:41.615802Z", "url": "https://files.pythonhosted.org/packages/e6/2c/28694247b98e6613dca6795a6354a4fd1af246c08a8f9b49e58fd3ae9c31/ontogram-0.1.0.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00c9f3018f11cfadd54330c2492c4e77", "sha256": "9374e41559a4a8097474bb168c1db1289186e63b8d2df98e49895d248c8fac1f"}, "downloads": -1, "filename": "ontogram-0.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "00c9f3018f11cfadd54330c2492c4e77", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33866, "upload_time": "2019-12-01T10:22:43", "upload_time_iso_8601": "2019-12-01T10:22:43.336249Z", "url": "https://files.pythonhosted.org/packages/42/54/1084222979c4f038df0054490ec7447ddc876409e5de74352fc2f4645ef9/ontogram-0.1.0.post1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b0bdb65205904eebbe45360604797fea", "sha256": "6af7ce406cfe609b28c1c477febd2a5eed23811f0dbfff10bc97561b57a1cfef"}, "downloads": -1, "filename": "ontogram-0.1.0.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "b0bdb65205904eebbe45360604797fea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 47422, "upload_time": "2019-12-01T10:22:41", "upload_time_iso_8601": "2019-12-01T10:22:41.615802Z", "url": "https://files.pythonhosted.org/packages/e6/2c/28694247b98e6613dca6795a6354a4fd1af246c08a8f9b49e58fd3ae9c31/ontogram-0.1.0.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00c9f3018f11cfadd54330c2492c4e77", "sha256": "9374e41559a4a8097474bb168c1db1289186e63b8d2df98e49895d248c8fac1f"}, "downloads": -1, "filename": "ontogram-0.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "00c9f3018f11cfadd54330c2492c4e77", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33866, "upload_time": "2019-12-01T10:22:43", "upload_time_iso_8601": "2019-12-01T10:22:43.336249Z", "url": "https://files.pythonhosted.org/packages/42/54/1084222979c4f038df0054490ec7447ddc876409e5de74352fc2f4645ef9/ontogram-0.1.0.post1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:46 2020"}