{"info": {"author": "Justin Bois", "author_email": "bois@caltech.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# DataCamp Statistical Thinking utilities\n\n[![version](https://img.shields.io/pypi/v/dc_stat_think.svg)](https://pypi.python.org/pypi/dc_stat_think) [![build status](https://img.shields.io/travis/justinbois/dc_stat_think.svg)](https://travis-ci.org/justinbois/dc_stat_think) \n\nUtility functions used in the DataCamp Statistical Thinking courses.\n- [Statistical Thinking in Python Part I](https://www.datacamp.com/courses/statistical-thinking-in-python-part-1/)\n- [Statistical Thinking in Python Part II](https://www.datacamp.com/courses/statistical-thinking-in-python-part-2/)\n- [Case Studies in Statistical Thinking](https://www.datacamp.com/courses/case-studies-in-statistical-thinking/)\n\n\n## Installation\ndc_stat_think may be installed by running the following command.\n```\npip install dc_stat_think\n```\n\n## Usage\nUpon importing the module, functions from the DataCamp Statistical Thinking courses are available. For example, you can compute a 95% confidence interval of the mean of some data using the `draw_bs_reps()` function.\n\n```python\n>>> import numpy as np\n>>> import dc_stat_think as dcst\n>>> data = np.array([1.2, 3.3, 2.7, 2.4, 5.6, \n                     3.4, 1.3, 3.9, 2.9, 2.1, 2.7])\n>>> bs_reps = dcst.draw_bs_reps(data, np.mean, size=10000)\n>>> conf_int = np.percentile(bs_reps, [2.5, 97.5])\n>>> print(conf_int)\n[ 2.21818182  3.60909091]\n```\n\n## Implementation\nThe functions include in dc_stat_think are not *exactly* like those students wrote in the DataCamp Statistical Thinking courses. Notable differences are listed below.\n\n+ The doc strings in dc_stat_think are much more complete.\n+ The dc_stat_think module has error checking of inputs.\n+ In most cases, especially those involving bootstrapping or other uses of the `np.random` module, dc_stat_think functions are more optimized for speed, in particular using [Numba](http://numba.pydata.org). Note, though, that dc_stat_think does not take advantage of any parallel computing.\n\nIf you do want to use functions *exactly* as written in the Statistical Thinking courses, you can use the `dc_stat_think.original` submodule.\n\n```python\n>>> import numpy as np\n>>> import dc_stat_think.original\n>>> data = np.array([1.2, 3.3, 2.7, 2.4, 5.6, 3.4, 1.3, 3.9, 2.9, 2.1, 2.7])\n>>> bs_reps = dc_stat_think.original.draw_bs_reps(data, np.mean, size=10000)\n>>> conf_int = np.percentile(bs_reps, [2.5, 97.5])\n>>> print(conf_int)\n[ 2.20909091  3.59090909]\n```\n\n## Credits\nThis package was created with [Cookiecutter](https://github.com/audreyr/cookiecutter) and the [audreyr/cookiecutter-pypackage](https://github.com/audreyr/cookiecutter-pypackage) project template and then modified.\n\n\n=======\nHistory\n=======\n\n0.1.0 (2017-07-20)\n0.1.1 (2017-07-20)\n0.1.2 (2017-07-24)\n0.1.4 (2017-07-26)\n0.1.5 (2017-08-17)\n1.0.0 (2017-08-28)\n------------------\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/justinbois/dc_stat_think", "keywords": "dc_stat_think", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "dc-stat-think", "package_url": "https://pypi.org/project/dc-stat-think/", "platform": "", "project_url": "https://pypi.org/project/dc-stat-think/", "project_urls": {"Homepage": "https://github.com/justinbois/dc_stat_think"}, "release_url": "https://pypi.org/project/dc-stat-think/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Utility functions used in the DataCamp Statistical Thinking courses.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # DataCamp Statistical Thinking utilities<br><br>[![version](https://img.shields.io/pypi/v/dc_stat_think.svg)](https://pypi.python.org/pypi/dc_stat_think) [![build status](https://img.shields.io/travis/justinbois/dc_stat_think.svg)](https://travis-ci.org/justinbois/dc_stat_think) <br><br>Utility functions used in the DataCamp Statistical Thinking courses.<br>- [Statistical Thinking in Python Part I](https://www.datacamp.com/courses/statistical-thinking-in-python-part-1/)<br>- [Statistical Thinking in Python Part II](https://www.datacamp.com/courses/statistical-thinking-in-python-part-2/)<br>- [Case Studies in Statistical Thinking](https://www.datacamp.com/courses/case-studies-in-statistical-thinking/)<br><br><br>## Installation<br>dc_stat_think may be installed by running the following command.<br>```<br>pip install dc_stat_think<br>```<br><br>## Usage<br>Upon importing the module, functions from the DataCamp Statistical Thinking courses are available. For example, you can compute a 95% confidence interval of the mean of some data using the `draw_bs_reps()` function.<br><br>```python<br>&gt;&gt;&gt; import numpy as np<br>&gt;&gt;&gt; import dc_stat_think as dcst<br>&gt;&gt;&gt; data = np.array([1.2, 3.3, 2.7, 2.4, 5.6, <br>                     3.4, 1.3, 3.9, 2.9, 2.1, 2.7])<br>&gt;&gt;&gt; bs_reps = dcst.draw_bs_reps(data, np.mean, size=10000)<br>&gt;&gt;&gt; conf_int = np.percentile(bs_reps, [2.5, 97.5])<br>&gt;&gt;&gt; print(conf_int)<br>[ 2.21818182  3.60909091]<br>```<br><br>## Implementation<br>The functions include in dc_stat_think are not *exactly* like those students wrote in the DataCamp Statistical Thinking courses. Notable differences are listed below.<br><br>+ The doc strings in dc_stat_think are much more complete.<br>+ The dc_stat_think module has error checking of inputs.<br>+ In most cases, especially those involving bootstrapping or other uses of the `np.random` module, dc_stat_think functions are more optimized for speed, in particular using [Numba](http://numba.pydata.org). Note, though, that dc_stat_think does not take advantage of any parallel computing.<br><br>If you do want to use functions *exactly* as written in the Statistical Thinking courses, you can use the `dc_stat_think.original` submodule.<br><br>```python<br>&gt;&gt;&gt; import numpy as np<br>&gt;&gt;&gt; import dc_stat_think.original<br>&gt;&gt;&gt; data = np.array([1.2, 3.3, 2.7, 2.4, 5.6, 3.4, 1.3, 3.9, 2.9, 2.1, 2.7])<br>&gt;&gt;&gt; bs_reps = dc_stat_think.original.draw_bs_reps(data, np.mean, size=10000)<br>&gt;&gt;&gt; conf_int = np.percentile(bs_reps, [2.5, 97.5])<br>&gt;&gt;&gt; print(conf_int)<br>[ 2.20909091  3.59090909]<br>```<br><br>## Credits<br>This package was created with [Cookiecutter](https://github.com/audreyr/cookiecutter) and the [audreyr/cookiecutter-pypackage](https://github.com/audreyr/cookiecutter-pypackage) project template and then modified.<br><br><br>=======<br>History<br>=======<br><br>0.1.0 (2017-07-20)<br>0.1.1 (2017-07-20)<br>0.1.2 (2017-07-24)<br>0.1.4 (2017-07-26)<br>0.1.5 (2017-08-17)<br>1.0.0 (2017-08-28)<br>------------------<br><br><br>\n          </div>"}, "last_serial": 4846723, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "7216b1089fc49dbbea690d7da7caf315", "sha256": "9d91f4f26871e575cbbb5fc3f534ab713350dd837461d9253806c6bcfd96363b"}, "downloads": -1, "filename": "dc_stat_think-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7216b1089fc49dbbea690d7da7caf315", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3865, "upload_time": "2017-07-20T18:57:56", "upload_time_iso_8601": "2017-07-20T18:57:56.189581Z", "url": "https://files.pythonhosted.org/packages/29/37/fd3cd2ff20330c9290fd6c5bd318e05e6ad0f7b87bd1b94a05e4e43151ab/dc_stat_think-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "1162c394d02eb411955d814bad87004e", "sha256": "65fde9035eb01bd4accef89159e5e285bd200e2e030160ec2d7a4a98bb367b36"}, "downloads": -1, "filename": "dc_stat_think-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1162c394d02eb411955d814bad87004e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3924, "upload_time": "2017-07-24T23:52:35", "upload_time_iso_8601": "2017-07-24T23:52:35.879503Z", "url": "https://files.pythonhosted.org/packages/9d/6a/961ce5bd7657bc847440b6847dbc772b381a0908583a0abbb7967df586a2/dc_stat_think-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "42aed3d898869771d546f2cf69fe6de3", "sha256": "7986ef0e1c602adc7fbfa101327395b99c043c54efdf598002ae5f5130abc0fd"}, "downloads": -1, "filename": "dc_stat_think-0.1.3.tar.gz", "has_sig": false, "md5_digest": "42aed3d898869771d546f2cf69fe6de3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5073, "upload_time": "2017-07-26T07:33:07", "upload_time_iso_8601": "2017-07-26T07:33:07.878161Z", "url": "https://files.pythonhosted.org/packages/8d/2d/6af27e0831f2af2f9fb64185e93d95216d54f59a2bc63d7b2d54845d34a7/dc_stat_think-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "3891c23be8c9ea980fb54d9cdf948e0b", "sha256": "db9518f30a684e0979b06747df35af0a566919b2846ac4d476186c6926ffe2e2"}, "downloads": -1, "filename": "dc_stat_think-0.1.4.tar.gz", "has_sig": false, "md5_digest": "3891c23be8c9ea980fb54d9cdf948e0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5051, "upload_time": "2017-07-26T19:21:56", "upload_time_iso_8601": "2017-07-26T19:21:56.181631Z", "url": "https://files.pythonhosted.org/packages/2c/c1/f3c5272c0fbc5bca9af5d4a2ac885458f90e7941e8d774a6add7d2f3dc3a/dc_stat_think-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "c2ded946794de04f8d2fa2f040889073", "sha256": "7cc5021b795ab296ab0675693078791d19def442418affc8589a153e597a41e7"}, "downloads": -1, "filename": "dc_stat_think-0.1.5.tar.gz", "has_sig": false, "md5_digest": "c2ded946794de04f8d2fa2f040889073", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15535, "upload_time": "2017-08-18T07:26:19", "upload_time_iso_8601": "2017-08-18T07:26:19.774428Z", "url": "https://files.pythonhosted.org/packages/8c/f2/06568541ce7cf6421060ded4475f0acabda189040553446157680bc4cfe9/dc_stat_think-0.1.5.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "8fc7cba27a68f3ef9d974a6d0a23573f", "sha256": "f2d5fe7ac06c77e6753180a4c707b7cd2538e2f8bec1d6e9f40f574040f2eb9e"}, "downloads": -1, "filename": "dc_stat_think-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8fc7cba27a68f3ef9d974a6d0a23573f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21641, "upload_time": "2017-08-28T23:56:24", "upload_time_iso_8601": "2017-08-28T23:56:24.633995Z", "url": "https://files.pythonhosted.org/packages/07/3e/470206aa04b042ec60b13ac9811fa27e59c163578a5ec76c68860869abd0/dc_stat_think-1.0.0.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "36505065777f5a7aff873577eebc13cd", "sha256": "89e8f7a1e6c2a66a4a605ef15bdfd264be805e5922564b881c80d132c44cd261"}, "downloads": -1, "filename": "dc_stat_think-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "36505065777f5a7aff873577eebc13cd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21276, "upload_time": "2019-02-20T17:36:27", "upload_time_iso_8601": "2019-02-20T17:36:27.220508Z", "url": "https://files.pythonhosted.org/packages/94/ec/cb861d06dea11a0fcdaf4720cccf0590c6ada568e1d8fcb7207f22f3b4c1/dc_stat_think-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0a9db4f887521f5e5045c9d3a876501", "sha256": "dbbef87d0062be4455b3bde80f636d00323172cfd81248e7421ef1dfd32c7b6f"}, "downloads": -1, "filename": "dc_stat_think-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a0a9db4f887521f5e5045c9d3a876501", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23108, "upload_time": "2019-02-20T17:36:29", "upload_time_iso_8601": "2019-02-20T17:36:29.080422Z", "url": "https://files.pythonhosted.org/packages/e9/32/1a47b6f7ed07e9e60948f22855bf788e767206d4d0625de0933670133f73/dc_stat_think-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "36505065777f5a7aff873577eebc13cd", "sha256": "89e8f7a1e6c2a66a4a605ef15bdfd264be805e5922564b881c80d132c44cd261"}, "downloads": -1, "filename": "dc_stat_think-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "36505065777f5a7aff873577eebc13cd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21276, "upload_time": "2019-02-20T17:36:27", "upload_time_iso_8601": "2019-02-20T17:36:27.220508Z", "url": "https://files.pythonhosted.org/packages/94/ec/cb861d06dea11a0fcdaf4720cccf0590c6ada568e1d8fcb7207f22f3b4c1/dc_stat_think-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0a9db4f887521f5e5045c9d3a876501", "sha256": "dbbef87d0062be4455b3bde80f636d00323172cfd81248e7421ef1dfd32c7b6f"}, "downloads": -1, "filename": "dc_stat_think-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a0a9db4f887521f5e5045c9d3a876501", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23108, "upload_time": "2019-02-20T17:36:29", "upload_time_iso_8601": "2019-02-20T17:36:29.080422Z", "url": "https://files.pythonhosted.org/packages/e9/32/1a47b6f7ed07e9e60948f22855bf788e767206d4d0625de0933670133f73/dc_stat_think-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:45 2020"}