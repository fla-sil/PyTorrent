{"info": {"author": "Matthew Wilkes", "author_email": "matthew@matthewwilkes.co.uk", "bugtrack_url": null, "classifiers": ["Framework :: ZODB", "Framework :: Zope2", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)", "Topic :: Software Development :: Version Control"], "description": "Okay, I'm sorry.  But yes.  This is real.\n\nDo you have a TTW developed Zope site? Do you really wish you didn't? mr.tennant exposes a git remote that you can pull from and get a git repository that represents your TTW code as well as its transaction history.  \n\nThen change it.\n\nThen push it.\n\nYeah.\n\nFor now it's just utlity functions, but try::\n\n\tfrom AccessControl.SecurityManagement import newSecurityManager\n\tfrom AccessControl.SecurityManager import setSecurityPolicy\n\tfrom Testing.makerequest import makerequest\n\tfrom Products.CMFCore.tests.base.security import PermissiveSecurityPolicy, OmnipotentUser\n\timport tempfile\n\tfrom mr.tennant.git import dump_objects, serialise_directory, serialise_commit\n\n\t_policy=PermissiveSecurityPolicy()\n\t_oldpolicy=setSecurityPolicy(_policy)\n\tnewSecurityManager(None, OmnipotentUser().__of__(app.acl_users))\n\tapp=makerequest(app)\n\tfrom mr.tennant.git import get_commits_for_history\n\n\trepo = tempfile.mkdtemp()\n\tobjects, HEAD = get_commits_for_history(app.repository)\n\tdump_objects(repo, objects, HEAD=HEAD)\n\tprint repo\n\nWhen you go to the tempfolder it points you to and run 'git reset --hard' you'll get a working repo with a history, containing the contents of app.repository", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/mr.tennant", "keywords": "git zope crazy", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "mr.tennant", "package_url": "https://pypi.org/project/mr.tennant/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mr.tennant/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/collective/mr.tennant"}, "release_url": "https://pypi.org/project/mr.tennant/1.0a1/", "requires_dist": null, "requires_python": null, "summary": "A git remote ZServer type. Yeah. Seriously. It lets you pull TTW code.", "version": "1.0a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Okay, I\u2019m sorry.  But yes.  This is real.</p>\n<p>Do you have a TTW developed Zope site? Do you really wish you didn\u2019t? mr.tennant exposes a git remote that you can pull from and get a git repository that represents your TTW code as well as its transaction history.</p>\n<p>Then change it.</p>\n<p>Then push it.</p>\n<p>Yeah.</p>\n<p>For now it\u2019s just utlity functions, but try:</p>\n<pre>from AccessControl.SecurityManagement import newSecurityManager\nfrom AccessControl.SecurityManager import setSecurityPolicy\nfrom Testing.makerequest import makerequest\nfrom Products.CMFCore.tests.base.security import PermissiveSecurityPolicy, OmnipotentUser\nimport tempfile\nfrom mr.tennant.git import dump_objects, serialise_directory, serialise_commit\n\n_policy=PermissiveSecurityPolicy()\n_oldpolicy=setSecurityPolicy(_policy)\nnewSecurityManager(None, OmnipotentUser().__of__(app.acl_users))\napp=makerequest(app)\nfrom mr.tennant.git import get_commits_for_history\n\nrepo = tempfile.mkdtemp()\nobjects, HEAD = get_commits_for_history(app.repository)\ndump_objects(repo, objects, HEAD=HEAD)\nprint repo\n</pre>\n<p>When you go to the tempfolder it points you to and run \u2018git reset \u2013hard\u2019 you\u2019ll get a working repo with a history, containing the contents of app.repository</p>\n\n          </div>"}, "last_serial": 404097, "releases": {"1.0a1": []}, "urls": [], "timestamp": "Fri May  8 00:50:57 2020"}