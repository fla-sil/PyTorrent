{"info": {"author": "CyberZHG", "author_email": "CyberZHG@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6"], "description": "# Keras Ordered Neurons LSTM\n\n[![Travis](https://travis-ci.org/CyberZHG/keras-ordered-neurons.svg)](https://travis-ci.org/CyberZHG/keras-ordered-neurons)\n[![Coverage](https://coveralls.io/repos/github/CyberZHG/keras-ordered-neurons/badge.svg?branch=master)](https://coveralls.io/github/CyberZHG/keras-ordered-neurons)\n[![Version](https://img.shields.io/pypi/v/keras-ordered-neurons.svg)](https://pypi.org/project/keras-ordered-neurons/)\n![Downloads](https://img.shields.io/pypi/dm/keras-ordered-neurons.svg)\n[![996.ICU](https://img.shields.io/badge/license-Anti%20996-blue.svg)](https://996.icu) \n\n![](https://img.shields.io/badge/keras-tensorflow-blue.svg)\n![](https://img.shields.io/badge/keras-theano-blue.svg)\n![](https://img.shields.io/badge/keras-cntk-blue.svg)\n![](https://img.shields.io/badge/keras-tf.keras-blue.svg)\n![](https://img.shields.io/badge/keras-tf.keras/eager-blue.svg)\n\n\\[[\u4e2d\u6587](https://github.com/CyberZHG/keras-ordered-neurons/blob/master/README.zh-CN.md)|[English](https://github.com/CyberZHG/keras-ordered-neurons/blob/master/README.md)\\]\n\nUnofficial implementation of [ON-LSTM](https://openreview.net/pdf?id=B1l6qiR5F7).\n\n## Install\n\n```bash\npip install keras-ordered-neurons\n```\n\n## Usage\n\n### Basic\n\nSame as `LSTM` except that an extra argument `chunk_size` should be given:\n\n```python\nfrom keras.models import Sequential\nfrom keras.layers import Embedding, Bidirectional, Dense\nfrom keras_ordered_neurons import ONLSTM\n\nmodel = Sequential()\nmodel.add(Embedding(input_shape=(None,), input_dim=10, output_dim=100))\nmodel.add(Bidirectional(ONLSTM(units=50, chunk_size=5)))\nmodel.add(Dense(units=2, activation='softmax'))\nmodel.compile(optimizer='adam', loss='sparse_categorical_crossentropy')\nmodel.summary()\n```\n\n### DropConnect\n\nSet `recurrent_dropconnect` to a non-zero value to enable drop-connect for recurrent weights:\n\n```python\nfrom keras_ordered_neurons import ONLSTM\n\nONLSTM(units=50, chunk_size=5, recurrent_dropconnect=0.2)\n```\n\n### Expected Split Points\n\nSet `return_splits` to `True` if you want to know the expected split points of master forget gate and master input gate.\n\n```python\nfrom keras.models import Model\nfrom keras.layers import Input, Embedding\nfrom keras_ordered_neurons import ONLSTM\n\ninputs = Input(shape=(None,))\nembed = Embedding(input_dim=10, output_dim=100)(inputs)\noutputs, splits = ONLSTM(units=50, chunk_size=5, return_sequences=True, return_splits=True)(embed)\nmodel = Model(inputs=inputs, outputs=splits)\nmodel.compile(optimizer='adam', loss='mse')\nmodel.summary(line_length=120)\n```\n\n### `tf.keras`\n\nAdd `TF_KERAS=1` to environment variables if you are using `tensorflow.python.keras`.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CyberZHG/keras-ordered-neurons", "keywords": "", "license": "Anti 996", "maintainer": "", "maintainer_email": "", "name": "keras-on-lstm", "package_url": "https://pypi.org/project/keras-on-lstm/", "platform": "", "project_url": "https://pypi.org/project/keras-on-lstm/", "project_urls": {"Homepage": "https://github.com/CyberZHG/keras-ordered-neurons"}, "release_url": "https://pypi.org/project/keras-on-lstm/0.8.0/", "requires_dist": null, "requires_python": "", "summary": "Unofficial implementation of ON-LSTM", "version": "0.8.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Keras Ordered Neurons LSTM</h1>\n<p><a href=\"https://travis-ci.org/CyberZHG/keras-ordered-neurons\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ed471eb9edd4cf16595d70455035f1eda23e914/68747470733a2f2f7472617669732d63692e6f72672f43796265725a48472f6b657261732d6f7264657265642d6e6575726f6e732e737667\"></a>\n<a href=\"https://coveralls.io/github/CyberZHG/keras-ordered-neurons\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e3f83b3a3b877015dc3c2817501f7ef483b2ed78/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f43796265725a48472f6b657261732d6f7264657265642d6e6575726f6e732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/keras-ordered-neurons/\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5dfa386a298ed513715e35bbb90be7565a279cb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6b657261732d6f7264657265642d6e6575726f6e732e737667\"></a>\n<img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f57c63ce5d521d5c1cb6a55d45c148a54edbc90/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6b657261732d6f7264657265642d6e6575726f6e732e737667\">\n<a href=\"https://996.icu\" rel=\"nofollow\"><img alt=\"996.ICU\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/497459f5647e21d9f1011ef127da39a0f90d936f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d416e74692532303939362d626c75652e737667\"></a></p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e393eea6bde0401d67d8c1037f20197db5f67415/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6b657261732d74656e736f72666c6f772d626c75652e737667\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/553767f8d3d1f4aa59428df89810f4c129e3d9b2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6b657261732d746865616e6f2d626c75652e737667\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a7677d0d8b6d279e8188d5b03823b6653af2804/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6b657261732d636e746b2d626c75652e737667\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/10bcc5d5c79439ea8a8eed66fab216ba966761df/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6b657261732d74662e6b657261732d626c75652e737667\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/512a2743e8eb70e905cd9c53156b1207e6478fb0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6b657261732d74662e6b657261732f65616765722d626c75652e737667\"></p>\n<p>[<a href=\"https://github.com/CyberZHG/keras-ordered-neurons/blob/master/README.zh-CN.md\" rel=\"nofollow\">\u4e2d\u6587</a>|<a href=\"https://github.com/CyberZHG/keras-ordered-neurons/blob/master/README.md\" rel=\"nofollow\">English</a>]</p>\n<p>Unofficial implementation of <a href=\"https://openreview.net/pdf?id=B1l6qiR5F7\" rel=\"nofollow\">ON-LSTM</a>.</p>\n<h2>Install</h2>\n<pre>pip install keras-ordered-neurons\n</pre>\n<h2>Usage</h2>\n<h3>Basic</h3>\n<p>Same as <code>LSTM</code> except that an extra argument <code>chunk_size</code> should be given:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">keras.models</span> <span class=\"kn\">import</span> <span class=\"n\">Sequential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras.layers</span> <span class=\"kn\">import</span> <span class=\"n\">Embedding</span><span class=\"p\">,</span> <span class=\"n\">Bidirectional</span><span class=\"p\">,</span> <span class=\"n\">Dense</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras_ordered_neurons</span> <span class=\"kn\">import</span> <span class=\"n\">ONLSTM</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Sequential</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Embedding</span><span class=\"p\">(</span><span class=\"n\">input_shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,),</span> <span class=\"n\">input_dim</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">output_dim</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Bidirectional</span><span class=\"p\">(</span><span class=\"n\">ONLSTM</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">chunk_size</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Dense</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">activation</span><span class=\"o\">=</span><span class=\"s1\">'softmax'</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"s1\">'adam'</span><span class=\"p\">,</span> <span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"s1\">'sparse_categorical_crossentropy'</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">()</span>\n</pre>\n<h3>DropConnect</h3>\n<p>Set <code>recurrent_dropconnect</code> to a non-zero value to enable drop-connect for recurrent weights:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">keras_ordered_neurons</span> <span class=\"kn\">import</span> <span class=\"n\">ONLSTM</span>\n\n<span class=\"n\">ONLSTM</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">chunk_size</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">recurrent_dropconnect</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">)</span>\n</pre>\n<h3>Expected Split Points</h3>\n<p>Set <code>return_splits</code> to <code>True</code> if you want to know the expected split points of master forget gate and master input gate.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">keras.models</span> <span class=\"kn\">import</span> <span class=\"n\">Model</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras.layers</span> <span class=\"kn\">import</span> <span class=\"n\">Input</span><span class=\"p\">,</span> <span class=\"n\">Embedding</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras_ordered_neurons</span> <span class=\"kn\">import</span> <span class=\"n\">ONLSTM</span>\n\n<span class=\"n\">inputs</span> <span class=\"o\">=</span> <span class=\"n\">Input</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,))</span>\n<span class=\"n\">embed</span> <span class=\"o\">=</span> <span class=\"n\">Embedding</span><span class=\"p\">(</span><span class=\"n\">input_dim</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">output_dim</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)(</span><span class=\"n\">inputs</span><span class=\"p\">)</span>\n<span class=\"n\">outputs</span><span class=\"p\">,</span> <span class=\"n\">splits</span> <span class=\"o\">=</span> <span class=\"n\">ONLSTM</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">chunk_size</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">return_sequences</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">return_splits</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)(</span><span class=\"n\">embed</span><span class=\"p\">)</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"o\">=</span><span class=\"n\">inputs</span><span class=\"p\">,</span> <span class=\"n\">outputs</span><span class=\"o\">=</span><span class=\"n\">splits</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"s1\">'adam'</span><span class=\"p\">,</span> <span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"s1\">'mse'</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">(</span><span class=\"n\">line_length</span><span class=\"o\">=</span><span class=\"mi\">120</span><span class=\"p\">)</span>\n</pre>\n<h3><code>tf.keras</code></h3>\n<p>Add <code>TF_KERAS=1</code> to environment variables if you are using <code>tensorflow.python.keras</code>.</p>\n\n          </div>"}, "last_serial": 5336670, "releases": {"0.8.0": [{"comment_text": "", "digests": {"md5": "2aec39346fe3c89a5f1587c42215e2db", "sha256": "b42eac9836765e8a96c5e3f8a939fc7552ec4f6125efb438df273e0abe61eda5"}, "downloads": -1, "filename": "keras-on-lstm-0.8.0.tar.gz", "has_sig": false, "md5_digest": "2aec39346fe3c89a5f1587c42215e2db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9752, "upload_time": "2019-05-30T10:23:00", "upload_time_iso_8601": "2019-05-30T10:23:00.311228Z", "url": "https://files.pythonhosted.org/packages/8c/26/166451b98706b778d47146c46fe51ee5be3a3982663cb4bf44adeea95204/keras-on-lstm-0.8.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2aec39346fe3c89a5f1587c42215e2db", "sha256": "b42eac9836765e8a96c5e3f8a939fc7552ec4f6125efb438df273e0abe61eda5"}, "downloads": -1, "filename": "keras-on-lstm-0.8.0.tar.gz", "has_sig": false, "md5_digest": "2aec39346fe3c89a5f1587c42215e2db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9752, "upload_time": "2019-05-30T10:23:00", "upload_time_iso_8601": "2019-05-30T10:23:00.311228Z", "url": "https://files.pythonhosted.org/packages/8c/26/166451b98706b778d47146c46fe51ee5be3a3982663cb4bf44adeea95204/keras-on-lstm-0.8.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:10 2020"}