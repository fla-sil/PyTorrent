{"info": {"author": "Adam Leskis", "author_email": "leskis@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "# Awlify\n\n[![made-with-python](https://img.shields.io/badge/Made%20with-Python3.6-1f425f.svg)](https://www.python.org/)\n[![GitHub license](https://img.shields.io/github/license/Naereen/StrapDown.js.svg)](https://github.com/lpmi-13/awlify-python/blob/master/LICENSE)\n\n\nA very basic tool that takes in a sentence of text and outputs\nthe same text, annotated with information about whether any of\nits words are in the [Academic Word List](https://www.victoria.ac.nz/lals/resources/academicwordlist/information).\n\n## installing\n`pip install awlify`\n\nand if you haven't used spacy on your system before, you'll need\nto install the model we're using here with the command below:\n\n`python -m spacy download en_core_web_sm`\n\n## tests\n`python -m unittest`\n\n## usage inside a file\n```\nfrom awlify import awlify\n\nresult = awlify('please inform me of the academic words in this sentence')\n\nprint(result)\n{\"data\": {\"sentence\": \"please inform me of the academic words in this sentence\", \"awl_words\": [{\"index\": 5, \"word\": \"academic\", \"meta\": {\"head\": \"academy\", \"sublist\": 5}}]}}\n```\n\n## usage from the command line\n`python -m awlify 'this is a sentence to check'`\n\n`{\"data\": {\"sentence\": \"this is a sentence to check\", \"awl_words\": []}}`\n\n## expected input / output\nformat for output:\n```\n{\n  \"data\": {\n    \"sentence\": \"THIS IS THE ORIGINAL SENTENCE\",\n    \"awl_words\": [\n      {\n        \"index\": INDEX_OF_AWL_WORD_FOUND,\n        \"word\": \"AWL_WORD_FOUND\",\n        \"meta\": {\n          \"head\": \"THE_HEADWORD_FROM_THE_AWL\",\n          \"sublist\": THE_AWL_SUBLIST_OF_THE_WORD\n        }\n      }\n    ]\n  }\n}\n```\n\nexample input for a simple sentence (no AWL words):\n```\nsimple_sentence = awlify('this is a sentence')\n```\n\n\nexample output for a simple sentence (no AWL words):\n```\n{\n  \"data\": {\n    \"sentence\": \"this is a sentence\",\n    \"awl_words\": []\n  }\n}\n```\n\nexample input for a complex sentence (a few AWL words):\n```\ncomplex_sentence = awlify('the economic recovery is ongoing and potentially problematic')\n```\n\nexample output for a complex sentence (a few AWL words):\n```\n{\n  \"data\": {\n    \"sentence\": \"the economic recovery is ongoing and potentially problematic\",\n    \"awl_words\": [\n      {\n        \"index\": 1,\n        \"word\": \"economic\",\n        \"meta\": {\n          \"head\": \"economy\",\n          \"sublist\": 1\n        }\n      },\n      {\n        \"index\": 2,\n        \"word\": \"recovery\",\n        \"meta\": {\n          \"head\": \"recover\",\n          \"sublist\": 6\n        }\n      },\n      {\n        \"index\": 6,\n        \"word\": \"potentially\",\n        \"meta\": {\n          \"head\": \"potential\",\n          \"sublist\": 2\n        }\n      }\n    ]\n  }\n}\n```\n\n## NOTES\n\nThe current implementation of the sentence tokenization uses spacy,\nand so it's a bit heavier than absolutely necessary, since we're\nnot taking advantage of any of the more advanced characteristics\nof the package.\n\nIn theory, it could probably perform 98% as well with just a simple\nregex, so I might add the option to do that in the future if there\naren't any real use cases for needing the full weight of spacy.\n\n## REFERENCES\nCoxhead, Averil (2000) A New Academic Word List. TESOL Quarterly, 34(2): 213-238.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lpmi-13/awlify-python", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "awlify", "package_url": "https://pypi.org/project/awlify/", "platform": "", "project_url": "https://pypi.org/project/awlify/", "project_urls": {"Homepage": "https://github.com/lpmi-13/awlify-python"}, "release_url": "https://pypi.org/project/awlify/1.1.2/", "requires_dist": ["spacy (>=2.0.16)"], "requires_python": "", "summary": "a simple utility to take in a sentence and output information about the AWL words in it", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Awlify</h1>\n<p><a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"made-with-python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e27bc4c263a4f3c06a161f9f678fbffa2a9e53a1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d616465253230776974682d507974686f6e332e362d3166343235662e737667\"></a>\n<a href=\"https://github.com/lpmi-13/awlify-python/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5430f2fec42899073d5720f6a3dbe4f7297713b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4e61657265656e2f5374726170446f776e2e6a732e737667\"></a></p>\n<p>A very basic tool that takes in a sentence of text and outputs\nthe same text, annotated with information about whether any of\nits words are in the <a href=\"https://www.victoria.ac.nz/lals/resources/academicwordlist/information\" rel=\"nofollow\">Academic Word List</a>.</p>\n<h2>installing</h2>\n<p><code>pip install awlify</code></p>\n<p>and if you haven't used spacy on your system before, you'll need\nto install the model we're using here with the command below:</p>\n<p><code>python -m spacy download en_core_web_sm</code></p>\n<h2>tests</h2>\n<p><code>python -m unittest</code></p>\n<h2>usage inside a file</h2>\n<pre><code>from awlify import awlify\n\nresult = awlify('please inform me of the academic words in this sentence')\n\nprint(result)\n{\"data\": {\"sentence\": \"please inform me of the academic words in this sentence\", \"awl_words\": [{\"index\": 5, \"word\": \"academic\", \"meta\": {\"head\": \"academy\", \"sublist\": 5}}]}}\n</code></pre>\n<h2>usage from the command line</h2>\n<p><code>python -m awlify 'this is a sentence to check'</code></p>\n<p><code>{\"data\": {\"sentence\": \"this is a sentence to check\", \"awl_words\": []}}</code></p>\n<h2>expected input / output</h2>\n<p>format for output:</p>\n<pre><code>{\n  \"data\": {\n    \"sentence\": \"THIS IS THE ORIGINAL SENTENCE\",\n    \"awl_words\": [\n      {\n        \"index\": INDEX_OF_AWL_WORD_FOUND,\n        \"word\": \"AWL_WORD_FOUND\",\n        \"meta\": {\n          \"head\": \"THE_HEADWORD_FROM_THE_AWL\",\n          \"sublist\": THE_AWL_SUBLIST_OF_THE_WORD\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n<p>example input for a simple sentence (no AWL words):</p>\n<pre><code>simple_sentence = awlify('this is a sentence')\n</code></pre>\n<p>example output for a simple sentence (no AWL words):</p>\n<pre><code>{\n  \"data\": {\n    \"sentence\": \"this is a sentence\",\n    \"awl_words\": []\n  }\n}\n</code></pre>\n<p>example input for a complex sentence (a few AWL words):</p>\n<pre><code>complex_sentence = awlify('the economic recovery is ongoing and potentially problematic')\n</code></pre>\n<p>example output for a complex sentence (a few AWL words):</p>\n<pre><code>{\n  \"data\": {\n    \"sentence\": \"the economic recovery is ongoing and potentially problematic\",\n    \"awl_words\": [\n      {\n        \"index\": 1,\n        \"word\": \"economic\",\n        \"meta\": {\n          \"head\": \"economy\",\n          \"sublist\": 1\n        }\n      },\n      {\n        \"index\": 2,\n        \"word\": \"recovery\",\n        \"meta\": {\n          \"head\": \"recover\",\n          \"sublist\": 6\n        }\n      },\n      {\n        \"index\": 6,\n        \"word\": \"potentially\",\n        \"meta\": {\n          \"head\": \"potential\",\n          \"sublist\": 2\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n<h2>NOTES</h2>\n<p>The current implementation of the sentence tokenization uses spacy,\nand so it's a bit heavier than absolutely necessary, since we're\nnot taking advantage of any of the more advanced characteristics\nof the package.</p>\n<p>In theory, it could probably perform 98% as well with just a simple\nregex, so I might add the option to do that in the future if there\naren't any real use cases for needing the full weight of spacy.</p>\n<h2>REFERENCES</h2>\n<p>Coxhead, Averil (2000) A New Academic Word List. TESOL Quarterly, 34(2): 213-238.</p>\n\n          </div>"}, "last_serial": 4828850, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "dd4ace08177079e31183d7592b1bbe5a", "sha256": "1924b6db1d4512971414df86741d956b2e727a39fdaffb9dade8044caaa2f6d4"}, "downloads": -1, "filename": "awlify-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dd4ace08177079e31183d7592b1bbe5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16853, "upload_time": "2019-02-08T07:47:39", "upload_time_iso_8601": "2019-02-08T07:47:39.800908Z", "url": "https://files.pythonhosted.org/packages/fc/79/077239e2870b587d0ba00496f9035584eb768f6843f853140a750f40325c/awlify-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29b8d6560ae9ba9e8a62a2400b53c95e", "sha256": "85dd7643ba528673a29f70924b50297a0c4ad6017e45b7b3784a36b7241a2081"}, "downloads": -1, "filename": "awlify-1.0.0.tar.gz", "has_sig": false, "md5_digest": "29b8d6560ae9ba9e8a62a2400b53c95e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17352, "upload_time": "2019-02-08T07:47:41", "upload_time_iso_8601": "2019-02-08T07:47:41.810468Z", "url": "https://files.pythonhosted.org/packages/6d/e0/346105f183070308ac0982528cfc0dba2011ceaa8c78aa3e30eebf826eca/awlify-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "ac6775bffaec70e056843ed9057d235b", "sha256": "3efce6193038889ce34154cd9a69ef15842d8a216ebce5fc4d982a4789fbd96b"}, "downloads": -1, "filename": "awlify-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ac6775bffaec70e056843ed9057d235b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18604, "upload_time": "2019-02-08T19:00:40", "upload_time_iso_8601": "2019-02-08T19:00:40.270100Z", "url": "https://files.pythonhosted.org/packages/9d/bf/051652ce3a317d027f3d70681ef6cb2cdaa0ecd064b0574c1b923ab2d9eb/awlify-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6979f3980f9cdb6ee604e31a49f433e6", "sha256": "cd87337b2cea082f8f42c94e8125858b38673ec89950f6241b6af2db331b2538"}, "downloads": -1, "filename": "awlify-1.1.0.tar.gz", "has_sig": false, "md5_digest": "6979f3980f9cdb6ee604e31a49f433e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19134, "upload_time": "2019-02-08T19:00:43", "upload_time_iso_8601": "2019-02-08T19:00:43.165869Z", "url": "https://files.pythonhosted.org/packages/91/c5/eb6f351f31f46d1969b5738cd2862b3a0211f390a6248e0da6d38179344a/awlify-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "60bbc4dde2b2e8580e6cabf63da204d9", "sha256": "10fc9c0933b9da82427ee4222c5b97d09efd44a09b13d9edcfb844f5d779a2e0"}, "downloads": -1, "filename": "awlify-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "60bbc4dde2b2e8580e6cabf63da204d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18605, "upload_time": "2019-02-12T16:12:44", "upload_time_iso_8601": "2019-02-12T16:12:44.944287Z", "url": "https://files.pythonhosted.org/packages/80/2e/e5a40011f57ba1bf8cf767fed0a16ebb93673fc678d10eb3d7adabd4aa9b/awlify-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5aca0175ad8c8220c4bc93eaf988bee7", "sha256": "f6f384c43f87031b685db6796e6bebc886cb648b25b1d882fa915f1c7e4f6df6"}, "downloads": -1, "filename": "awlify-1.1.1.tar.gz", "has_sig": false, "md5_digest": "5aca0175ad8c8220c4bc93eaf988bee7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19136, "upload_time": "2019-02-12T16:12:46", "upload_time_iso_8601": "2019-02-12T16:12:46.642127Z", "url": "https://files.pythonhosted.org/packages/37/33/0aa8c0d2325b2b994a71aba62b3f6f52754ea412a18727a2dc50e6560cb5/awlify-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "ba93879ae5a0273618438f283be053eb", "sha256": "4e5b51cefeef52189fa383ce1c8df8d570c6d7e266cd2de0f9dafdd2526ba0cd"}, "downloads": -1, "filename": "awlify-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ba93879ae5a0273618438f283be053eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18999, "upload_time": "2019-02-16T14:09:33", "upload_time_iso_8601": "2019-02-16T14:09:33.466563Z", "url": "https://files.pythonhosted.org/packages/4b/2f/077051d052d673086a372afe368bc03f2478666fb8bcc29866f4ed36ce03/awlify-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f750a24caf96b42659770f0b2461ea4a", "sha256": "7e9881c19331da26d57e760923e2340ca096e9e4862546a568c9e545cbc772d9"}, "downloads": -1, "filename": "awlify-1.1.2.tar.gz", "has_sig": false, "md5_digest": "f750a24caf96b42659770f0b2461ea4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19392, "upload_time": "2019-02-16T14:09:35", "upload_time_iso_8601": "2019-02-16T14:09:35.376908Z", "url": "https://files.pythonhosted.org/packages/5b/cf/148ee90c5282c32f71e0a3dc3b2530998dae20fb826d98e5248f9d47ceb9/awlify-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba93879ae5a0273618438f283be053eb", "sha256": "4e5b51cefeef52189fa383ce1c8df8d570c6d7e266cd2de0f9dafdd2526ba0cd"}, "downloads": -1, "filename": "awlify-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ba93879ae5a0273618438f283be053eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18999, "upload_time": "2019-02-16T14:09:33", "upload_time_iso_8601": "2019-02-16T14:09:33.466563Z", "url": "https://files.pythonhosted.org/packages/4b/2f/077051d052d673086a372afe368bc03f2478666fb8bcc29866f4ed36ce03/awlify-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f750a24caf96b42659770f0b2461ea4a", "sha256": "7e9881c19331da26d57e760923e2340ca096e9e4862546a568c9e545cbc772d9"}, "downloads": -1, "filename": "awlify-1.1.2.tar.gz", "has_sig": false, "md5_digest": "f750a24caf96b42659770f0b2461ea4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19392, "upload_time": "2019-02-16T14:09:35", "upload_time_iso_8601": "2019-02-16T14:09:35.376908Z", "url": "https://files.pythonhosted.org/packages/5b/cf/148ee90c5282c32f71e0a3dc3b2530998dae20fb826d98e5248f9d47ceb9/awlify-1.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:59 2020"}