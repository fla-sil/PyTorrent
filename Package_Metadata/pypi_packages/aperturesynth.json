{"info": {"author": "Sam Hames", "author_email": "sam@hames.id.au", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Artistic Software", "Topic :: Multimedia :: Graphics"], "description": "ApertureSynth is a command line tool for registering and combining\nmultiple photographs to form a single photograph with better properties.\nIt can be used to:\n\n1. Reduce noise by averaging, even in handheld photos.\n2. Simulate a longer exposure than would otherwise be possible using a\n   handheld camera.\n3. Control the location of the focal plane, including tilt shift effects\n   (though further optimisation is needed to handle this nicely.)\n\nNote that aperturesynth is currently experimental and is definitely to\nbe used at your own risk.\n\nUsage\n=====\n\n1. Take a series of photos in burst mode.\n\n2. If shooting in raw format, convert the raw files into a format\n   handled by PIL, such as png, tiff or jpeg. Note that it's best to\n   avoid noise reduction and sharpening at this point. You might have a\n   series of photos 1.png, 2.png, 3.png.\n\n3. Run the command line application on the series of photographs\n\n   ::\n\n       aperturesynth combine --out fused.tiff 1.png 2.png 3.png\n\n   This will fuse the three png images and save the result to\n   fused.tiff. The file 1.png will be the baseline image used to\n   register 2.png and 3.png.\n\n4. The baseline image (1.png) will appear in a window. Indicate the in\n   focus regions by selecting the top left and bottom right of each\n   rectangular focal patch. Consecutive pairs of points define each\n   rectangular window, the last point of an odd number of points will be\n   ignored. You can right click to undo a selection.\n\n5. Press enter when done to begin the fusion process.\n\nFor additional help and to see all the options run:\n\n::\n\n    aperturesynth --help\n\nInstallation\n============\n\nThis software is written in Python, and currently requires a working\nPython implementation to run. If you have a working Python installation\nyou should be able to install aperturesynth by running:\n\n::\n\n    pip install aperturesynth\n\nAlternatively you can install from source. First clone the project from\nthe website using fossil\n` <https://hames.id.au/software/aperturesynth>`__, then run the setup.py\nin the root directory to install the file.\n\n::\n\n    fossil clone https://hames.id.au/software/aperturesynth aperturesynth.fossil\n    mkdir aperturesynth; cd aperturesynth\n    fossil open ../aperturesynth.fossil\n    python setup.py install\n\nEither of these options should result in the installation of a\ncommandline tool called aperturesynth.\n\nChanges\n=======\n\n0.0.2\n-----\n\n-  The type of transform is now chosen based on the number of focal\n   regions specified. This allows registration of only one or two\n   points, instead of always requiring three or more.\n-  The commandline syntax has changed to allow multiple subcommands,\n   including a new way of saving and loading the focal region locations\n   to/from a file.\n\n0.0.1\n-----\n\n-  Initial proof of concept.\n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://hames.id.au/software/aperturesynth", "keywords": "photography processing synthesis", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "aperturesynth", "package_url": "https://pypi.org/project/aperturesynth/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/aperturesynth/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://hames.id.au/software/aperturesynth"}, "release_url": "https://pypi.org/project/aperturesynth/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "A tool for registering and combining series of handheld photographs", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>ApertureSynth is a command line tool for registering and combining\nmultiple photographs to form a single photograph with better properties.\nIt can be used to:</p>\n<ol>\n<li>Reduce noise by averaging, even in handheld photos.</li>\n<li>Simulate a longer exposure than would otherwise be possible using a\nhandheld camera.</li>\n<li>Control the location of the focal plane, including tilt shift effects\n(though further optimisation is needed to handle this nicely.)</li>\n</ol>\n<p>Note that aperturesynth is currently experimental and is definitely to\nbe used at your own risk.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ol>\n<li><p>Take a series of photos in burst mode.</p>\n</li>\n<li><p>If shooting in raw format, convert the raw files into a format\nhandled by PIL, such as png, tiff or jpeg. Note that it\u2019s best to\navoid noise reduction and sharpening at this point. You might have a\nseries of photos 1.png, 2.png, 3.png.</p>\n</li>\n<li><p>Run the command line application on the series of photographs</p>\n<pre>aperturesynth combine --out fused.tiff 1.png 2.png 3.png\n</pre>\n<p>This will fuse the three png images and save the result to\nfused.tiff. The file 1.png will be the baseline image used to\nregister 2.png and 3.png.</p>\n</li>\n<li><p>The baseline image (1.png) will appear in a window. Indicate the in\nfocus regions by selecting the top left and bottom right of each\nrectangular focal patch. Consecutive pairs of points define each\nrectangular window, the last point of an odd number of points will be\nignored. You can right click to undo a selection.</p>\n</li>\n<li><p>Press enter when done to begin the fusion process.</p>\n</li>\n</ol>\n<p>For additional help and to see all the options run:</p>\n<pre>aperturesynth --help\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>This software is written in Python, and currently requires a working\nPython implementation to run. If you have a working Python installation\nyou should be able to install aperturesynth by running:</p>\n<pre>pip install aperturesynth\n</pre>\n<p>Alternatively you can install from source. First clone the project from\nthe website using fossil\n` &lt;<a href=\"https://hames.id.au/software/aperturesynth\" rel=\"nofollow\">https://hames.id.au/software/aperturesynth</a>&gt;`__, then run the setup.py\nin the root directory to install the file.</p>\n<pre>fossil clone https://hames.id.au/software/aperturesynth aperturesynth.fossil\nmkdir aperturesynth; cd aperturesynth\nfossil open ../aperturesynth.fossil\npython setup.py install\n</pre>\n<p>Either of these options should result in the installation of a\ncommandline tool called aperturesynth.</p>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"id1\">\n<h3>0.0.2</h3>\n<ul>\n<li>The type of transform is now chosen based on the number of focal\nregions specified. This allows registration of only one or two\npoints, instead of always requiring three or more.</li>\n<li>The commandline syntax has changed to allow multiple subcommands,\nincluding a new way of saving and loading the focal region locations\nto/from a file.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.0.1</h3>\n<ul>\n<li>Initial proof of concept.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1562783, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "39d15dccb0e023c93af978b38d45e8ad", "sha256": "9653b91302591a70894724a03a1311ec334bacb71138de5ad7095d12bedbb868"}, "downloads": -1, "filename": "aperturesynth-0.0.1.tar.gz", "has_sig": false, "md5_digest": "39d15dccb0e023c93af978b38d45e8ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5974, "upload_time": "2014-11-23T12:41:47", "upload_time_iso_8601": "2014-11-23T12:41:47.528083Z", "url": "https://files.pythonhosted.org/packages/2c/9f/ad8302fbcd02d651675fcd463aabf1d7ee17f332bf7b6b472d66e8894f71/aperturesynth-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2e8e578d593927d6e9d0be1f55a7bb3c", "sha256": "4dd63a3ff38ed30c1b0bd6d5e76645ef12ee0c5221d01144f4ec623eb90be66b"}, "downloads": -1, "filename": "aperturesynth-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2e8e578d593927d6e9d0be1f55a7bb3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6669, "upload_time": "2015-05-26T11:52:45", "upload_time_iso_8601": "2015-05-26T11:52:45.111501Z", "url": "https://files.pythonhosted.org/packages/c6/37/16503737594cb5a1f7a7b8e4e879e24d72049dba5b6dd5b849b652511dce/aperturesynth-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2e8e578d593927d6e9d0be1f55a7bb3c", "sha256": "4dd63a3ff38ed30c1b0bd6d5e76645ef12ee0c5221d01144f4ec623eb90be66b"}, "downloads": -1, "filename": "aperturesynth-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2e8e578d593927d6e9d0be1f55a7bb3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6669, "upload_time": "2015-05-26T11:52:45", "upload_time_iso_8601": "2015-05-26T11:52:45.111501Z", "url": "https://files.pythonhosted.org/packages/c6/37/16503737594cb5a1f7a7b8e4e879e24d72049dba5b6dd5b849b652511dce/aperturesynth-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:51 2020"}