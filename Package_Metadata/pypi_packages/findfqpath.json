{"info": {"author": "KevinSource", "author_email": "kdoglio@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# findfqpath Package\n\nReturns a fully qualified file name\n\nFinds the current the most current version of a file. Once it's found, it will be stored in a shelf file. Future calls pull from the shelf file first, then search if the file is older than requested or missing Handy for executables that move as they are updated (such as opera.exe). At least Python uses a fully qualified name, so by using this function, the code won't need to change as the exeutable is installed in new folders\n\nThis will run slow the FIRST time a new file is requested as it is searching the entire drive. Subsequent usage for the same file will be sub-second.\n\nUsage:\\\nfrom findfqpath import find_fq_path\\\nfq_path = find_fq_path(\"opera.exe\",1)\n\nOptional:\\\nScope=\"Local\" - Will write shelf data to the folder where the script is located (So the FIRST execution of a new script will be slow)\\\nScope=\"Shared\" - Will write shelf data to the common documents folder and be used across python scripts \n\nSample Application:\\\noptions = webdriver.ChromeOptions()\\\noptions.binary_location = find_fq_path(find_file='opera.exe', num_days_valid=1)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/KevinSource/FindFQPath", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "findfqpath", "package_url": "https://pypi.org/project/findfqpath/", "platform": "", "project_url": "https://pypi.org/project/findfqpath/", "project_urls": {"Homepage": "https://github.com/KevinSource/FindFQPath"}, "release_url": "https://pypi.org/project/findfqpath/1.0.5/", "requires_dist": null, "requires_python": "", "summary": "Package for findfqpath", "version": "1.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>findfqpath Package</h1>\n<p>Returns a fully qualified file name</p>\n<p>Finds the current the most current version of a file. Once it's found, it will be stored in a shelf file. Future calls pull from the shelf file first, then search if the file is older than requested or missing Handy for executables that move as they are updated (such as opera.exe). At least Python uses a fully qualified name, so by using this function, the code won't need to change as the exeutable is installed in new folders</p>\n<p>This will run slow the FIRST time a new file is requested as it is searching the entire drive. Subsequent usage for the same file will be sub-second.</p>\n<p>Usage:<br>\nfrom findfqpath import find_fq_path<br>\nfq_path = find_fq_path(\"opera.exe\",1)</p>\n<p>Optional:<br>\nScope=\"Local\" - Will write shelf data to the folder where the script is located (So the FIRST execution of a new script will be slow)<br>\nScope=\"Shared\" - Will write shelf data to the common documents folder and be used across python scripts</p>\n<p>Sample Application:<br>\noptions = webdriver.ChromeOptions()<br>\noptions.binary_location = find_fq_path(find_file='opera.exe', num_days_valid=1)</p>\n\n          </div>"}, "last_serial": 4250445, "releases": {"1.0.5": [{"comment_text": "", "digests": {"md5": "7439d5457ec1de1e824fd29734d510ec", "sha256": "bdbff4f89317252d1982ca8a8481a7855c34cefc9dd1a6608283e92aa1987991"}, "downloads": -1, "filename": "findfqpath-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "7439d5457ec1de1e824fd29734d510ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4087, "upload_time": "2018-09-07T23:02:47", "upload_time_iso_8601": "2018-09-07T23:02:47.704430Z", "url": "https://files.pythonhosted.org/packages/1f/16/44335999d4063fcfdc839dd6c7b16f75db554e7a0a27da122dec2b0d9b1c/findfqpath-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3fc9800417c13d6ff69252b2a0b73941", "sha256": "5593ba3b23990e40693d2b12655e8160d960979b58b4ee23e4bf07bdc4072857"}, "downloads": -1, "filename": "findfqpath-1.0.5.tar.gz", "has_sig": false, "md5_digest": "3fc9800417c13d6ff69252b2a0b73941", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3579, "upload_time": "2018-09-07T23:02:49", "upload_time_iso_8601": "2018-09-07T23:02:49.976108Z", "url": "https://files.pythonhosted.org/packages/1a/89/bbdfd4b18443c8eab65b2d73d5d1c49f989bb5c46e4aea1b4abf81512b31/findfqpath-1.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7439d5457ec1de1e824fd29734d510ec", "sha256": "bdbff4f89317252d1982ca8a8481a7855c34cefc9dd1a6608283e92aa1987991"}, "downloads": -1, "filename": "findfqpath-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "7439d5457ec1de1e824fd29734d510ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4087, "upload_time": "2018-09-07T23:02:47", "upload_time_iso_8601": "2018-09-07T23:02:47.704430Z", "url": "https://files.pythonhosted.org/packages/1f/16/44335999d4063fcfdc839dd6c7b16f75db554e7a0a27da122dec2b0d9b1c/findfqpath-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3fc9800417c13d6ff69252b2a0b73941", "sha256": "5593ba3b23990e40693d2b12655e8160d960979b58b4ee23e4bf07bdc4072857"}, "downloads": -1, "filename": "findfqpath-1.0.5.tar.gz", "has_sig": false, "md5_digest": "3fc9800417c13d6ff69252b2a0b73941", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3579, "upload_time": "2018-09-07T23:02:49", "upload_time_iso_8601": "2018-09-07T23:02:49.976108Z", "url": "https://files.pythonhosted.org/packages/1a/89/bbdfd4b18443c8eab65b2d73d5d1c49f989bb5c46e4aea1b4abf81512b31/findfqpath-1.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:24 2020"}