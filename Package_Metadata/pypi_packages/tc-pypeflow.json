{"info": {"author": "Tom Christiaens", "author_email": "tom.chr@proximus.be", "bugtrack_url": null, "classifiers": [], "description": "PypeFlow\n--------\nPython package for designing and analyzing piping networks.\n\nDesigning a piping network involves finding a solution for two kinds of problems:\n1. The design flow rates in the pipe sections composing the network are known. Also known are the available \nfriction losses due to fluid flow in the pipe sections. The problem remains to find appropriate diameters\nfor the pipe sections, so that the known flow rates do not generate friction losses that exceed the \navailable values.\n2. The design flow rates in the pipe sections composing the network are known. Also known are the diameters\nof the pipe sections and the fittings/valves present in each pipe section of the network. \nThe problem consists of finding the pressure drops across the pipe sections when design flow rates are flowing.\n\nOnce a piping network is designed, PypeFlow can search for all possible flow paths between the start\nand the end node of the network. This allows for flow balancing the different branches in the network. One\ncan add balancing valves in certain pipe sections to accomplish this. PypeFlow will then calculate the Kvr setting\nof each balancing valve in the network, so that all flow paths retrieve the same pressure drop when the\ndesign flow rates are flowing in the pipe sections. Without flow balancing it is uncertain whether the desired flow rate\nwill flow in each of the pipe sections.\n\nAnalyzing a piping network involves finding the steady flow rate and pressure distribution in a known piping network.\nFor this, PypeFlow uses the Hardy Cross method. One can also add pumps to the network and make use of so called pseudo\nsections for networks that are open (eg. drinking water installations).\n\nInput data for letting PypeFlow design or analyze a piping network comes from a network configuration file.\nThis is just a csv-file that can be made with any spreadsheet program. The network configuration is entered by the user \nin a table in which each row represents a pipe section of the network.\n\nPypeFlow is (at this moment) only an API, which means that one should interact with PypeFlow through Python scripts. \nJupyter Notebook is also an excellent tool for doing the design and analysis of a piping network using PypeFlow. \nExamples can be found in the accompanying [Github repository](https://github.com/TomLXXVI/pypeflow).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TomLXXVI/pypeflow", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "tc-pypeflow", "package_url": "https://pypi.org/project/tc-pypeflow/", "platform": "", "project_url": "https://pypi.org/project/tc-pypeflow/", "project_urls": {"Homepage": "https://github.com/TomLXXVI/pypeflow"}, "release_url": "https://pypi.org/project/tc-pypeflow/2020.2/", "requires_dist": ["numpy (>=1.17.1)", "matplotlib (>=3.1.1)", "CoolProp (>=6.3.0)", "pandas (>=0.25.1)", "ipython (>=7.8.0)", "setuptools (>=46.1.3)"], "requires_python": "", "summary": "piping network design and analysis", "version": "2020.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>PypeFlow</h2>\n<p>Python package for designing and analyzing piping networks.</p>\n<p>Designing a piping network involves finding a solution for two kinds of problems:</p>\n<ol>\n<li>The design flow rates in the pipe sections composing the network are known. Also known are the available\nfriction losses due to fluid flow in the pipe sections. The problem remains to find appropriate diameters\nfor the pipe sections, so that the known flow rates do not generate friction losses that exceed the\navailable values.</li>\n<li>The design flow rates in the pipe sections composing the network are known. Also known are the diameters\nof the pipe sections and the fittings/valves present in each pipe section of the network.\nThe problem consists of finding the pressure drops across the pipe sections when design flow rates are flowing.</li>\n</ol>\n<p>Once a piping network is designed, PypeFlow can search for all possible flow paths between the start\nand the end node of the network. This allows for flow balancing the different branches in the network. One\ncan add balancing valves in certain pipe sections to accomplish this. PypeFlow will then calculate the Kvr setting\nof each balancing valve in the network, so that all flow paths retrieve the same pressure drop when the\ndesign flow rates are flowing in the pipe sections. Without flow balancing it is uncertain whether the desired flow rate\nwill flow in each of the pipe sections.</p>\n<p>Analyzing a piping network involves finding the steady flow rate and pressure distribution in a known piping network.\nFor this, PypeFlow uses the Hardy Cross method. One can also add pumps to the network and make use of so called pseudo\nsections for networks that are open (eg. drinking water installations).</p>\n<p>Input data for letting PypeFlow design or analyze a piping network comes from a network configuration file.\nThis is just a csv-file that can be made with any spreadsheet program. The network configuration is entered by the user\nin a table in which each row represents a pipe section of the network.</p>\n<p>PypeFlow is (at this moment) only an API, which means that one should interact with PypeFlow through Python scripts.\nJupyter Notebook is also an excellent tool for doing the design and analysis of a piping network using PypeFlow.\nExamples can be found in the accompanying <a href=\"https://github.com/TomLXXVI/pypeflow\" rel=\"nofollow\">Github repository</a>.</p>\n\n          </div>"}, "last_serial": 7010570, "releases": {"2020.0": [{"comment_text": "", "digests": {"md5": "4aeb0d121f281b8fc72c1c28de8562b9", "sha256": "488af52a5f14e222f76aa6894f9eafca08e9f76aa301d298367914f926d792a2"}, "downloads": -1, "filename": "tc_pypeflow-2020.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4aeb0d121f281b8fc72c1c28de8562b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 64224, "upload_time": "2020-04-10T10:56:09", "upload_time_iso_8601": "2020-04-10T10:56:09.623238Z", "url": "https://files.pythonhosted.org/packages/ce/54/0b0a0f2295d0393f81a78a521efd35d616f1f1ad06a859112401f85d7d3c/tc_pypeflow-2020.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d5fd07729abb79f126f9d295e5fa4ea", "sha256": "e9af244c20a3ebb808627a3fbe3fcb57669ff0cdc9b1466e99ac2e52ff7af818"}, "downloads": -1, "filename": "tc_pypeflow-2020.0.tar.gz", "has_sig": false, "md5_digest": "7d5fd07729abb79f126f9d295e5fa4ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49368, "upload_time": "2020-04-10T10:56:11", "upload_time_iso_8601": "2020-04-10T10:56:11.970913Z", "url": "https://files.pythonhosted.org/packages/21/e1/b8723f9ff8d954923c44c39179caa51baac8814404f01775ca1e48ce2727/tc_pypeflow-2020.0.tar.gz", "yanked": false}], "2020.1": [{"comment_text": "", "digests": {"md5": "08fd41dc5d839beaad3d927b10396af3", "sha256": "8ad57b9f02c40c760826d72bbf457f148888fd9f17719a1a2aaa57cee7ac63a5"}, "downloads": -1, "filename": "tc_pypeflow-2020.1-py3-none-any.whl", "has_sig": false, "md5_digest": "08fd41dc5d839beaad3d927b10396af3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 64355, "upload_time": "2020-04-13T12:17:54", "upload_time_iso_8601": "2020-04-13T12:17:54.994774Z", "url": "https://files.pythonhosted.org/packages/97/3f/ed93a47c9dd6e8ceebcaaab85fe309042f94d55313c574abc2c53602dd57/tc_pypeflow-2020.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe2c091ed682ae7ca09208363f40bc62", "sha256": "4814b6b26a75361c8f4350585dc66050105503fd7749b7b9a974e5d7fc3cc02c"}, "downloads": -1, "filename": "tc_pypeflow-2020.1.tar.gz", "has_sig": false, "md5_digest": "fe2c091ed682ae7ca09208363f40bc62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49495, "upload_time": "2020-04-13T12:17:56", "upload_time_iso_8601": "2020-04-13T12:17:56.057454Z", "url": "https://files.pythonhosted.org/packages/4d/e1/b51388dfabe47af86fff54fcb113f692d379b0add257d4bc8d54982aa23e/tc_pypeflow-2020.1.tar.gz", "yanked": false}], "2020.2": [{"comment_text": "", "digests": {"md5": "f147d72cee8ccfd92e2198821016b5c6", "sha256": "759392afa675cc0aa316a2e457d3ed5850cd1fd9457017c20bdf08126e640937"}, "downloads": -1, "filename": "tc_pypeflow-2020.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f147d72cee8ccfd92e2198821016b5c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 64641, "upload_time": "2020-04-13T15:20:15", "upload_time_iso_8601": "2020-04-13T15:20:15.513874Z", "url": "https://files.pythonhosted.org/packages/1e/28/393b9f1d371c3a48dc207063b8f38230af67c2b3b17445db53a34659d531/tc_pypeflow-2020.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dd819a51d6e72d6c6977c9a49ae557a", "sha256": "9e5eaff6b2c3c7507dbba3e2e0a19b518bb6ed630eda579f937a66ca5dfaa4b3"}, "downloads": -1, "filename": "tc_pypeflow-2020.2.tar.gz", "has_sig": false, "md5_digest": "6dd819a51d6e72d6c6977c9a49ae557a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49737, "upload_time": "2020-04-13T15:20:16", "upload_time_iso_8601": "2020-04-13T15:20:16.744717Z", "url": "https://files.pythonhosted.org/packages/92/4e/7e27b8b4eea26cfef7d9df756fd30c10a1e0154733fa384d5b471c66a38f/tc_pypeflow-2020.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f147d72cee8ccfd92e2198821016b5c6", "sha256": "759392afa675cc0aa316a2e457d3ed5850cd1fd9457017c20bdf08126e640937"}, "downloads": -1, "filename": "tc_pypeflow-2020.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f147d72cee8ccfd92e2198821016b5c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 64641, "upload_time": "2020-04-13T15:20:15", "upload_time_iso_8601": "2020-04-13T15:20:15.513874Z", "url": "https://files.pythonhosted.org/packages/1e/28/393b9f1d371c3a48dc207063b8f38230af67c2b3b17445db53a34659d531/tc_pypeflow-2020.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dd819a51d6e72d6c6977c9a49ae557a", "sha256": "9e5eaff6b2c3c7507dbba3e2e0a19b518bb6ed630eda579f937a66ca5dfaa4b3"}, "downloads": -1, "filename": "tc_pypeflow-2020.2.tar.gz", "has_sig": false, "md5_digest": "6dd819a51d6e72d6c6977c9a49ae557a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49737, "upload_time": "2020-04-13T15:20:16", "upload_time_iso_8601": "2020-04-13T15:20:16.744717Z", "url": "https://files.pythonhosted.org/packages/92/4e/7e27b8b4eea26cfef7d9df756fd30c10a1e0154733fa384d5b471c66a38f/tc_pypeflow-2020.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:17 2020"}