{"info": {"author": "Katie Porter", "author_email": "kaporter@bu.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: POSIX", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "cluspro_api\n===========\n\nPython library and associated scripts for submiting jobs and\ndownloading results from ClusPro.\n\nInstallation\n------------\n\nEnsure you have ``pip``, then run:\n\n.. code-block:: bash\n\n    pip install --user cluspro_api\n\nor\n\n.. code-block:: bash\n\n   [sudo] pip install cluspro_api\n\n``sudo`` is only needed if you are installing globally. If ``--user`` option is used, binaries\nwill be in ``$HOME/.local/bin``. We recommend use of Anaconda (https://www.continuum.io). \n\nUsage\n-----\n\nSubmitting Jobs\n~~~~~~~~~~~~~~~\n\nTo submit a docking job to ClusPro:\n\n.. code-block:: bash\n\n    cluspro_submit --receptor <path to receptor pdb file> --ligand <path to ligand pdb file>\n\nThis will prompt you for your username and API secret, which can be found on the API tab\nafter logging into ClusPro. These will be stored in a ``.clusprorc`` file in your home\ndirectory.\n\nOptions: \n\n.. code-block:: bash\n\n    $ cluspro_submit --help\n\n    Usage: cluspro_submit [OPTIONS]\n\n     Jobs are expected to be in one of four \"modes\": docking with a provided\n     ligand PDB ID or PDB file, docking in multimer mode (using --multimer), or\n     peptide docking (using --pepmot and --pepseq). If using multimer mode add\n     --multimer and specify dimer or trimer (ex. --multimer dimer or --multimer\n     trimer). If using peptide mode supply both the peptide motif and sequence\n     (ex. --pepmot KXRRL --pepseq KGRRL). If using dimer classification mode add\n     --dcmode and provide the chain(s) that define the potential dimer interface\n     (ex. --rec-chains and --lig-chains). Mixing options from these four modes\n     is not supported and will result in an error message.\n\n    Options:\n      --username TEXT\n      --secret TEXT\n      --coeffs PATH               Coefficients file [Advanced]\n      --rotations PATH            Rotations file [Advanced]\n      -j, --jobname TEXT          Will default to job number\n      -a, --antibodymode          Use Antibody mode [Advanced]\n      -o, --othersmode            Use Others mode [Advanced]\n      --receptor PATH             Upload a PDB file\n      --ligand PATH               Upload a PDB file\n      --recpdb TEXT               4-letter PDB code\n      --ligpdb TEXT               4-letter PDB code\n      --pepmot TEXT               Peptide motif\n      --pepseq TEXT               Peptide sequence\n      --pepexclusion TEXT         List of PDB ids to exclude from motif\n                                  search\n      --rec-chains TEXT           Chains to use, for example \"A B\" (in double\n                                  quotes)\n      --lig-chains TEXT           Chains to use, for example \"A B\" (in double\n                                  quotes)\n      --rec-mask PATH             Receptor mask [Advanced]\n      --lig-mask PATH             Ligand mask [Advanced]\n      --rec-attraction PATH       Receptor attraction [Advanced]\n      --lig-attraction PATH       Ligand attraction [Advanced]\n      --rec-dssp                  Remove unstructured terminal residues in\n                                  receptor [Advanced]\n      --lig-dssp                  Remove unstructured terminal residues in ligand [Advanced]\n      --restraints PATH           Upload restraints file [Advanced]\n      --saxs-file PATH            Upload SAXS profile [Advanced]\n      --masknoncdr                Automatically mask non-CDR region, Antibody mode only [Advanced]\n      --multimers [dimer|trimer]  Multimer mode [Advanced]\n      --dcmode                    Use Dimer Classification mode\n      --help                      Show this message and exit\n\nIf you write a script which submits the jobs in a loop, please submit no more than 50 jobs\nper batch (and then wait until these jobs finish before submitting more). Please pause for\n5-10 seconds between job submissions within each batch. \n\nRunning ``cluspro_submit`` will print out the cluspro job id, which you should record and use\nlater to download your job results. \n\nDownloading Results\n~~~~~~~~~~~~~~~~~~~\n\nTo download results from a finished job:\n\n.. code-block:: bash\n\n    cluspro_download <jobid>\n\nYou can download multiple jobs at once:\n\n.. code-block:: bash\n\n    cluspro_download <jobid1> <jobid2> <jobid3> ...\n\nThe results will be saved in the directory from which you ran the command.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/bu-structure/cluspro_api", "keywords": "cluspro protein", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cluspro-api", "package_url": "https://pypi.org/project/cluspro-api/", "platform": "", "project_url": "https://pypi.org/project/cluspro-api/", "project_urls": {"Homepage": "https://bitbucket.org/bu-structure/cluspro_api"}, "release_url": "https://pypi.org/project/cluspro-api/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Library for submitting and downloading job data from ClusPro.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python library and associated scripts for submiting jobs and\ndownloading results from ClusPro.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Ensure you have <tt>pip</tt>, then run:</p>\n<pre>pip install --user cluspro_api\n</pre>\n<p>or</p>\n<pre><span class=\"o\">[</span>sudo<span class=\"o\">]</span> pip install cluspro_api\n</pre>\n<p><tt>sudo</tt> is only needed if you are installing globally. If <tt><span class=\"pre\">--user</span></tt> option is used, binaries\nwill be in <tt><span class=\"pre\">$HOME/.local/bin</span></tt>. We recommend use of Anaconda (<a href=\"https://www.continuum.io\" rel=\"nofollow\">https://www.continuum.io</a>).</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"submitting-jobs\">\n<h3>Submitting Jobs</h3>\n<p>To submit a docking job to ClusPro:</p>\n<pre>cluspro_submit --receptor &lt;path to receptor pdb file&gt; --ligand &lt;path to ligand pdb file&gt;\n</pre>\n<p>This will prompt you for your username and API secret, which can be found on the API tab\nafter logging into ClusPro. These will be stored in a <tt>.clusprorc</tt> file in your home\ndirectory.</p>\n<p>Options:</p>\n<pre>$ cluspro_submit --help\n\nUsage: cluspro_submit <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n\n Jobs are expected to be in one of four <span class=\"s2\">\"modes\"</span>: docking with a provided\n ligand PDB ID or PDB file, docking in multimer mode <span class=\"o\">(</span>using --multimer<span class=\"o\">)</span>, or\n peptide docking <span class=\"o\">(</span>using --pepmot and --pepseq<span class=\"o\">)</span>. If using multimer mode add\n --multimer and specify dimer or trimer <span class=\"o\">(</span>ex. --multimer dimer or --multimer\n trimer<span class=\"o\">)</span>. If using peptide mode supply both the peptide motif and sequence\n <span class=\"o\">(</span>ex. --pepmot KXRRL --pepseq KGRRL<span class=\"o\">)</span>. If using dimer classification mode add\n --dcmode and provide the chain<span class=\"o\">(</span>s<span class=\"o\">)</span> that define the potential dimer interface\n <span class=\"o\">(</span>ex. --rec-chains and --lig-chains<span class=\"o\">)</span>. Mixing options from these four modes\n is not supported and will result in an error message.\n\nOptions:\n  --username TEXT\n  --secret TEXT\n  --coeffs PATH               Coefficients file <span class=\"o\">[</span>Advanced<span class=\"o\">]</span>\n  --rotations PATH            Rotations file <span class=\"o\">[</span>Advanced<span class=\"o\">]</span>\n  -j, --jobname TEXT          Will default to job number\n  -a, --antibodymode          Use Antibody mode <span class=\"o\">[</span>Advanced<span class=\"o\">]</span>\n  -o, --othersmode            Use Others mode <span class=\"o\">[</span>Advanced<span class=\"o\">]</span>\n  --receptor PATH             Upload a PDB file\n  --ligand PATH               Upload a PDB file\n  --recpdb TEXT               <span class=\"m\">4</span>-letter PDB code\n  --ligpdb TEXT               <span class=\"m\">4</span>-letter PDB code\n  --pepmot TEXT               Peptide motif\n  --pepseq TEXT               Peptide sequence\n  --pepexclusion TEXT         List of PDB ids to exclude from motif\n                              search\n  --rec-chains TEXT           Chains to use, <span class=\"k\">for</span> example <span class=\"s2\">\"A B\"</span> <span class=\"o\">(</span>in double\n                              quotes<span class=\"o\">)</span>\n  --lig-chains TEXT           Chains to use, <span class=\"k\">for</span> example <span class=\"s2\">\"A B\"</span> <span class=\"o\">(</span>in double\n                              quotes<span class=\"o\">)</span>\n  --rec-mask PATH             Receptor mask <span class=\"o\">[</span>Advanced<span class=\"o\">]</span>\n  --lig-mask PATH             Ligand mask <span class=\"o\">[</span>Advanced<span class=\"o\">]</span>\n  --rec-attraction PATH       Receptor attraction <span class=\"o\">[</span>Advanced<span class=\"o\">]</span>\n  --lig-attraction PATH       Ligand attraction <span class=\"o\">[</span>Advanced<span class=\"o\">]</span>\n  --rec-dssp                  Remove unstructured terminal residues in\n                              receptor <span class=\"o\">[</span>Advanced<span class=\"o\">]</span>\n  --lig-dssp                  Remove unstructured terminal residues in ligand <span class=\"o\">[</span>Advanced<span class=\"o\">]</span>\n  --restraints PATH           Upload restraints file <span class=\"o\">[</span>Advanced<span class=\"o\">]</span>\n  --saxs-file PATH            Upload SAXS profile <span class=\"o\">[</span>Advanced<span class=\"o\">]</span>\n  --masknoncdr                Automatically mask non-CDR region, Antibody mode only <span class=\"o\">[</span>Advanced<span class=\"o\">]</span>\n  --multimers <span class=\"o\">[</span>dimer<span class=\"p\">|</span>trimer<span class=\"o\">]</span>  Multimer mode <span class=\"o\">[</span>Advanced<span class=\"o\">]</span>\n  --dcmode                    Use Dimer Classification mode\n  --help                      Show this message and <span class=\"nb\">exit</span>\n</pre>\n<p>If you write a script which submits the jobs in a loop, please submit no more than 50 jobs\nper batch (and then wait until these jobs finish before submitting more). Please pause for\n5-10 seconds between job submissions within each batch.</p>\n<p>Running <tt>cluspro_submit</tt> will print out the cluspro job id, which you should record and use\nlater to download your job results.</p>\n</div>\n<div id=\"downloading-results\">\n<h3>Downloading Results</h3>\n<p>To download results from a finished job:</p>\n<pre>cluspro_download &lt;jobid&gt;\n</pre>\n<p>You can download multiple jobs at once:</p>\n<pre>cluspro_download &lt;jobid1&gt; &lt;jobid2&gt; &lt;jobid3&gt; ...\n</pre>\n<p>The results will be saved in the directory from which you ran the command.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4912310, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "44eed5a57efb77ebb8261cb6748e6367", "sha256": "dd23afd6eb57a5144b9d6fa95bce161888d693d10ab273be0ff62b4fcebd4602"}, "downloads": -1, "filename": "cluspro_api-1.0.0.tar.gz", "has_sig": false, "md5_digest": "44eed5a57efb77ebb8261cb6748e6367", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8607, "upload_time": "2018-02-05T23:41:21", "upload_time_iso_8601": "2018-02-05T23:41:21.691407Z", "url": "https://files.pythonhosted.org/packages/cb/36/cd752f872dc030624a038ab0000aafc2e71bc6733f60b0ee3a9479247818/cluspro_api-1.0.0.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "8c2b32c2d23b13f8cf0573536ca119fd", "sha256": "3886bfdcd49e431c8fffad04a740ea6a5325cef883521be04200c6937ba398bb"}, "downloads": -1, "filename": "cluspro_api-1.0.3.tar.gz", "has_sig": false, "md5_digest": "8c2b32c2d23b13f8cf0573536ca119fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8773, "upload_time": "2018-02-07T20:31:54", "upload_time_iso_8601": "2018-02-07T20:31:54.825716Z", "url": "https://files.pythonhosted.org/packages/3b/4a/178d37c576e9a36c1e4b080027b0b40c021a0f123456dc4a872bfd9369d9/cluspro_api-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "df82442cc6b394f4d251a9a249550f6e", "sha256": "fdf2d3508f9b8a3c253cc413df29fbe2ccb8f1f04d145ca0615ce7b6f0f44bef"}, "downloads": -1, "filename": "cluspro_api-1.0.4.tar.gz", "has_sig": false, "md5_digest": "df82442cc6b394f4d251a9a249550f6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8782, "upload_time": "2018-02-07T21:58:14", "upload_time_iso_8601": "2018-02-07T21:58:14.737080Z", "url": "https://files.pythonhosted.org/packages/05/f0/358d43c6e8568750f31878b362230e97fff8459069fd7b53af2e7b43934a/cluspro_api-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "b9e07571a1f92545bf6ad73bc60f627a", "sha256": "eab9b6ddf13ccc4247869fb88dfb2bc002cda38c58ee49728ef4196f562435ed"}, "downloads": -1, "filename": "cluspro_api-1.0.5.tar.gz", "has_sig": false, "md5_digest": "b9e07571a1f92545bf6ad73bc60f627a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8733, "upload_time": "2019-02-01T22:49:29", "upload_time_iso_8601": "2019-02-01T22:49:29.408989Z", "url": "https://files.pythonhosted.org/packages/f6/73/4fc2cb135cc6f1802109c9350e472e9673ebfb362faeb76a3a45e3441b6b/cluspro_api-1.0.5.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "4075d01a6cb4c17b82280727eceade8f", "sha256": "793cc9f553707b728c104c11a95bedc1f1c8805de84cd23e04b872dec556372f"}, "downloads": -1, "filename": "cluspro_api-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4075d01a6cb4c17b82280727eceade8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8988, "upload_time": "2019-03-07T20:26:42", "upload_time_iso_8601": "2019-03-07T20:26:42.672693Z", "url": "https://files.pythonhosted.org/packages/c3/8d/4265da3620354d356995d3479538814c474ffa67593492b83fa3af404659/cluspro_api-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4075d01a6cb4c17b82280727eceade8f", "sha256": "793cc9f553707b728c104c11a95bedc1f1c8805de84cd23e04b872dec556372f"}, "downloads": -1, "filename": "cluspro_api-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4075d01a6cb4c17b82280727eceade8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8988, "upload_time": "2019-03-07T20:26:42", "upload_time_iso_8601": "2019-03-07T20:26:42.672693Z", "url": "https://files.pythonhosted.org/packages/c3/8d/4265da3620354d356995d3479538814c474ffa67593492b83fa3af404659/cluspro_api-1.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:40 2020"}