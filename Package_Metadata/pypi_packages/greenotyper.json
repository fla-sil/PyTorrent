{"info": {"author": "Marni Tausen", "author_email": "Marni16ox@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "Greenotyper (v0.6.0)\n================\n[![Build Status](https://api.travis-ci.com/MarniTausen/Greenotyper.svg?branch=master)](https://travis-ci.com/MarniTausen/Greenotyper)[![codecov](https://codecov.io/gh/MarniTausen/Greenotyper/branch/master/graph/badge.svg)](https://codecov.io/gh/MarniTausen/Greenotyper)[![PyPI version](https://badge.fury.io/py/greenotyper.svg)](https://badge.fury.io/py/greenotyper)\n\n-   [Installation](#installation)\n-   [General workflow guide](#general-workflow-guide)\n-   [GUI interface guide](#gui-interface-guide)\n-   [Command line interface guide](#command-line-interface-guide)\n-   [Pipeline setup guide](#pipeline-setup-guide)\n-   [Neural net training](#neural-net-training)\n\nGreenotyper is a image analysis tool for large scale plant phenotyping experiments.\n\nIt uses google's object detection api ([github link](https://github.com/tensorflow/models/tree/master/research/object_detection)) to find the plants and thresholding to measure the size of the plants.\n\nRequirements\n------------\n\n- python version 3.6 or 3.7\n- tensorflow v2.0.0 or higher\n- PyQt5 v5.9.2 or higher\n- numpy v1.15.2 or higher\n- pillow v5.2.0 or higher\n- scikit-image v0.14.0 or higher\n\nInstallation\n------------\n\nThere are precompiled graphical versions in the releases folder.\n\n**Currently there is only a Mac OS X version.** **There is no guarantee that the version works on versions less than 10.14.6**\n\nIt is recommended to install the tool in a virtualenv or in an environment in conda. Example:\n```bash\nconda create -n greenotyper_env python=3.7\n\nconda activate greenotyper_env\n\npip install greenotyper\n```\nInstall the latest version of greenotyper through pip:\n```bash\npip install greenotyper\n```\nIf there are problems with pip you can try calling pip3 instead:\n```bash\npip3 install greenotyper\n```\n\nInstall greenotyper through conda:\n```\nnot available yet\n```\n\n\nGeneral workflow guide\n----------------------\n\nStarting a new workflow requires setting up and testing the pipeline. It starts by opening the pipeline planner. Either you open the Greenotyper app, or opening the GUI through the commandline interface:\n```bash\ngreenotyper --GUI\n```\n\nTo open the pipeline planner, click the Pipeline planner button.\n\nTesting the plant area detection, the network and pipeline settings are all done through the pipeline planner. For information on how use the interface go to the next section, and for general information on Pipeline setups click [here](#pipeline-setup-guide).\n\nRunning the pipeline is done either through the commandline or through the GUI. The commandline is more efficient and can more easily be deployed on computing clusters.\n\nThe pipeline can be run on individual images or directories of images. The results are a single \"database\" file, which uses filelocking. (If your file system has blocked filelocking, then there is no guarantee the results will be correctly written when run using multi processing.)\n\nTo organise the results into a table you can use the commandline option:\n```bash\ngreenotyper -p mypipeline.pipeline -o input_file.csv output_file.csv\n```\n\nGUI interface guide\n-------------------\n\nOpen the app, or run the GUI from the terminal:\nhttps://github.com/MarniTausen/Greenotyper\n\n### Pipeline Planner\n\n#### Basics\nFirst open the pipeline planner from the initial window.\n![](README_images/open_pipeline_planner.gif)\n\nOpen your image.\n\n![](README_images/open_image.gif)\n\nOpening a trained network.\n\n![](README_images/open_network.gif)\n\nAfter both an image and the network have been opened, you can run find plants feature. Clicking on Find plants will draw bounding boxes around the detected plants.\n\n![](README_images/find_plants.gif)\n\nTo test the detection of the plant area you can use apply mask function.\n\n![](README_images/apply_mask.gif)\n\n#### Adjust mask settings\n\n#### Adjust pipeline settings\n\n### Pipeline Runner (Initial window)\n\n\n\nCommand line interface guide\n----------------------------\n\nCommand usage help message:\n```\n=========== GREENOTYPER (v0.6.0) ===========\ngreenotyper -i image/directory -p settings.pipeline [options]\n\nOptions:\n  -h, --help            show this help message and exit\n  -i IMAGE, --in=IMAGE  Input image or directory of images for inference\n                        (required)\n  -n NETWORK, --network=NETWORK\n                        Input neural network directory (required, if not\n                        provided with pipeline file).\n  -p PIPELINE, --pipeline=PIPELINE\n                        Pipeline file containing all settings\n  -t THREADS, --threads=THREADS\n                        Number of threads available. Only used to run on\n                        multiple images at a time. Default: 1. Settings less\n                        than 0 use all available cores.\n  -s SIZEDIRECTORY, --size_output=SIZEDIRECTORY\n                        Output directory for the size measurements. Default is\n                        no output.\n  -g GREENNESSDIRECTORY, --greenness_output=GREENNESSDIRECTORY\n                        Output directory for the greenness measurements.\n                        Default is no output.\n  -m MASKDIRECTORY, --mask_output=MASKDIRECTORY\n                        Output directory for the produced masks. Default is no\n                        output.\n  -c CROPDIRECTORY, --crop_output=CROPDIRECTORY\n                        Output directory for the cropped images. Default is no\n                        output.\n  --by_day              Subdividing the outputs based on per day. Recommended\n                        to avoid file system overflow.\n  --by_individual       Subdividing the outputs based on per day. Recommended\n                        to avoid file system overflow.\n  --GUI                 Open up the GREENOTYPER GUI.\n  -o ORGANIZEOUTPUT, --organize=ORGANIZEOUTPUT\n                        Organize and clean the output. Usage:\n                        --organize=input_file output_file.   If included only\n                        this action will be performed.\n```\n\nPipeline setup guide\n--------------------\n\nNeural net training\n-------------------\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MarniTausen/Greenotyper", "keywords": "phenotyping detection", "license": "", "maintainer": "", "maintainer_email": "", "name": "greenotyper", "package_url": "https://pypi.org/project/greenotyper/", "platform": "", "project_url": "https://pypi.org/project/greenotyper/", "project_urls": {"Homepage": "https://github.com/MarniTausen/Greenotyper"}, "release_url": "https://pypi.org/project/greenotyper/0.6.0.1/", "requires_dist": ["tensorflow (>=2)", "PyQt5 (>=5.9)", "numpy (>=1.15)", "scikit-image (>=0.14)", "pillow (>=5.2)"], "requires_python": "~=3.6", "summary": "Plant image-based phenotyping pipeline", "version": "0.6.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Greenotyper (v0.6.0)</h1>\n<p><a href=\"https://travis-ci.com/MarniTausen/Greenotyper\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0cee6ad2d18cb11b9e58cfbc6bd3ec2aca7b133/68747470733a2f2f6170692e7472617669732d63692e636f6d2f4d61726e6954617573656e2f477265656e6f74797065722e7376673f6272616e63683d6d6173746572\"></a><a href=\"https://codecov.io/gh/MarniTausen/Greenotyper\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b37d2c68b6edae05620eee8bdc1f7517e6df5972/68747470733a2f2f636f6465636f762e696f2f67682f4d61726e6954617573656e2f477265656e6f74797065722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a><a href=\"https://badge.fury.io/py/greenotyper\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4de19a98e92758bd13a1f5d70c236f681685c4a/68747470733a2f2f62616467652e667572792e696f2f70792f677265656e6f74797065722e737667\"></a></p>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#general-workflow-guide\" rel=\"nofollow\">General workflow guide</a></li>\n<li><a href=\"#gui-interface-guide\" rel=\"nofollow\">GUI interface guide</a></li>\n<li><a href=\"#command-line-interface-guide\" rel=\"nofollow\">Command line interface guide</a></li>\n<li><a href=\"#pipeline-setup-guide\" rel=\"nofollow\">Pipeline setup guide</a></li>\n<li><a href=\"#neural-net-training\" rel=\"nofollow\">Neural net training</a></li>\n</ul>\n<p>Greenotyper is a image analysis tool for large scale plant phenotyping experiments.</p>\n<p>It uses google's object detection api (<a href=\"https://github.com/tensorflow/models/tree/master/research/object_detection\" rel=\"nofollow\">github link</a>) to find the plants and thresholding to measure the size of the plants.</p>\n<h2>Requirements</h2>\n<ul>\n<li>python version 3.6 or 3.7</li>\n<li>tensorflow v2.0.0 or higher</li>\n<li>PyQt5 v5.9.2 or higher</li>\n<li>numpy v1.15.2 or higher</li>\n<li>pillow v5.2.0 or higher</li>\n<li>scikit-image v0.14.0 or higher</li>\n</ul>\n<h2>Installation</h2>\n<p>There are precompiled graphical versions in the releases folder.</p>\n<p><strong>Currently there is only a Mac OS X version.</strong> <strong>There is no guarantee that the version works on versions less than 10.14.6</strong></p>\n<p>It is recommended to install the tool in a virtualenv or in an environment in conda. Example:</p>\n<pre>conda create -n greenotyper_env <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.7\n\nconda activate greenotyper_env\n\npip install greenotyper\n</pre>\n<p>Install the latest version of greenotyper through pip:</p>\n<pre>pip install greenotyper\n</pre>\n<p>If there are problems with pip you can try calling pip3 instead:</p>\n<pre>pip3 install greenotyper\n</pre>\n<p>Install greenotyper through conda:</p>\n<pre><code>not available yet\n</code></pre>\n<h2>General workflow guide</h2>\n<p>Starting a new workflow requires setting up and testing the pipeline. It starts by opening the pipeline planner. Either you open the Greenotyper app, or opening the GUI through the commandline interface:</p>\n<pre>greenotyper --GUI\n</pre>\n<p>To open the pipeline planner, click the Pipeline planner button.</p>\n<p>Testing the plant area detection, the network and pipeline settings are all done through the pipeline planner. For information on how use the interface go to the next section, and for general information on Pipeline setups click <a href=\"#pipeline-setup-guide\" rel=\"nofollow\">here</a>.</p>\n<p>Running the pipeline is done either through the commandline or through the GUI. The commandline is more efficient and can more easily be deployed on computing clusters.</p>\n<p>The pipeline can be run on individual images or directories of images. The results are a single \"database\" file, which uses filelocking. (If your file system has blocked filelocking, then there is no guarantee the results will be correctly written when run using multi processing.)</p>\n<p>To organise the results into a table you can use the commandline option:</p>\n<pre>greenotyper -p mypipeline.pipeline -o input_file.csv output_file.csv\n</pre>\n<h2>GUI interface guide</h2>\n<p>Open the app, or run the GUI from the terminal:\n<a href=\"https://github.com/MarniTausen/Greenotyper\" rel=\"nofollow\">https://github.com/MarniTausen/Greenotyper</a></p>\n<h3>Pipeline Planner</h3>\n<h4>Basics</h4>\n<p>First open the pipeline planner from the initial window.\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88155666c6589763e760054c64087ee20a8c506a/524541444d455f696d616765732f6f70656e5f706970656c696e655f706c616e6e65722e676966\"></p>\n<p>Open your image.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dfe3568c7bd822b8d5567e592e495858c2f8f043/524541444d455f696d616765732f6f70656e5f696d6167652e676966\"></p>\n<p>Opening a trained network.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb30e57164f1de9aa402b9627e4ae807265ff21a/524541444d455f696d616765732f6f70656e5f6e6574776f726b2e676966\"></p>\n<p>After both an image and the network have been opened, you can run find plants feature. Clicking on Find plants will draw bounding boxes around the detected plants.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/259da727a17a0c912b80b20f2d1cc922effd75c4/524541444d455f696d616765732f66696e645f706c616e74732e676966\"></p>\n<p>To test the detection of the plant area you can use apply mask function.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a95786c467c827c00e628c241a0faea6bd98cfb9/524541444d455f696d616765732f6170706c795f6d61736b2e676966\"></p>\n<h4>Adjust mask settings</h4>\n<h4>Adjust pipeline settings</h4>\n<h3>Pipeline Runner (Initial window)</h3>\n<h2>Command line interface guide</h2>\n<p>Command usage help message:</p>\n<pre><code>=========== GREENOTYPER (v0.6.0) ===========\ngreenotyper -i image/directory -p settings.pipeline [options]\n\nOptions:\n  -h, --help            show this help message and exit\n  -i IMAGE, --in=IMAGE  Input image or directory of images for inference\n                        (required)\n  -n NETWORK, --network=NETWORK\n                        Input neural network directory (required, if not\n                        provided with pipeline file).\n  -p PIPELINE, --pipeline=PIPELINE\n                        Pipeline file containing all settings\n  -t THREADS, --threads=THREADS\n                        Number of threads available. Only used to run on\n                        multiple images at a time. Default: 1. Settings less\n                        than 0 use all available cores.\n  -s SIZEDIRECTORY, --size_output=SIZEDIRECTORY\n                        Output directory for the size measurements. Default is\n                        no output.\n  -g GREENNESSDIRECTORY, --greenness_output=GREENNESSDIRECTORY\n                        Output directory for the greenness measurements.\n                        Default is no output.\n  -m MASKDIRECTORY, --mask_output=MASKDIRECTORY\n                        Output directory for the produced masks. Default is no\n                        output.\n  -c CROPDIRECTORY, --crop_output=CROPDIRECTORY\n                        Output directory for the cropped images. Default is no\n                        output.\n  --by_day              Subdividing the outputs based on per day. Recommended\n                        to avoid file system overflow.\n  --by_individual       Subdividing the outputs based on per day. Recommended\n                        to avoid file system overflow.\n  --GUI                 Open up the GREENOTYPER GUI.\n  -o ORGANIZEOUTPUT, --organize=ORGANIZEOUTPUT\n                        Organize and clean the output. Usage:\n                        --organize=input_file output_file.   If included only\n                        this action will be performed.\n</code></pre>\n<h2>Pipeline setup guide</h2>\n<h2>Neural net training</h2>\n\n          </div>"}, "last_serial": 6513190, "releases": {"0.6.0.1": [{"comment_text": "", "digests": {"md5": "98992ff939243f9f22b8d185cf0b45cb", "sha256": "a0938d83c80e0971c8a0cf04852378e750be11a037b8dfcef1f8ab9405b6e8f9"}, "downloads": -1, "filename": "greenotyper-0.6.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "98992ff939243f9f22b8d185cf0b45cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 631988, "upload_time": "2020-01-24T11:46:21", "upload_time_iso_8601": "2020-01-24T11:46:21.431859Z", "url": "https://files.pythonhosted.org/packages/90/f1/d0a511fb384bb0bbd28f86c2cb823e3e408c1d614ed870079e1cab593021/greenotyper-0.6.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53a21d59fcd5932399f2061994483296", "sha256": "9f8e59711741f6f5e9c481acd9b0e0e982ba35f584b8d05958e815ecfbacb989"}, "downloads": -1, "filename": "greenotyper-0.6.0.1.tar.gz", "has_sig": false, "md5_digest": "53a21d59fcd5932399f2061994483296", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 617936, "upload_time": "2020-01-24T11:46:25", "upload_time_iso_8601": "2020-01-24T11:46:25.729317Z", "url": "https://files.pythonhosted.org/packages/cf/99/349c47748402ef9fedcbca9ab0bfc0ef4a9c096aef4ff67d79cc4afbd713/greenotyper-0.6.0.1.tar.gz", "yanked": false}], "0.6.0rc1": [{"comment_text": "", "digests": {"md5": "e36d29cda084f68af260e6b40e8eb2a9", "sha256": "4197184ddb2b00e83059deefdfd03209e3d60b1300cdd3b46cab9850ae97eb53"}, "downloads": -1, "filename": "greenotyper-0.6.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "e36d29cda084f68af260e6b40e8eb2a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 619317, "upload_time": "2019-12-18T12:58:30", "upload_time_iso_8601": "2019-12-18T12:58:30.257195Z", "url": "https://files.pythonhosted.org/packages/db/35/0ef4bf5e4c5c318d3d2fe88a3b57addbc72a244d96bfb98c131ccf793959/greenotyper-0.6.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d2addf537079fa4afb3393798feea5b", "sha256": "cca1e0a1a430e751e8a4a8358e7009809015475f1741a68b0a31ffadeb699d30"}, "downloads": -1, "filename": "greenotyper-0.6.0rc1.tar.gz", "has_sig": false, "md5_digest": "0d2addf537079fa4afb3393798feea5b", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 617392, "upload_time": "2019-12-18T12:58:33", "upload_time_iso_8601": "2019-12-18T12:58:33.380090Z", "url": "https://files.pythonhosted.org/packages/bf/cc/b7a73bbbf45de2ab8942ea81e7e8b0a150b88768fe44bb8775e787b46f8d/greenotyper-0.6.0rc1.tar.gz", "yanked": false}], "0.6.0rc2": [{"comment_text": "", "digests": {"md5": "0e4d249fcebcf1e9230dba39f7a378c9", "sha256": "fab22c8bc60aa65c8921284301948a36d97dd21e9b086dd5cb4ec26790cd3aa4"}, "downloads": -1, "filename": "greenotyper-0.6.0rc2-py3-none-any.whl", "has_sig": false, "md5_digest": "0e4d249fcebcf1e9230dba39f7a378c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 632040, "upload_time": "2020-01-17T13:59:16", "upload_time_iso_8601": "2020-01-17T13:59:16.446779Z", "url": "https://files.pythonhosted.org/packages/bf/6e/09c9e45247f49be36593e0b7f28258df45a3425e74bfba1fd65e235524da/greenotyper-0.6.0rc2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea3f4a814ca875dd1b150be9538ad955", "sha256": "0f0f1ad6956a4071ef12060e32ae7873ce249e169c4a6d6f4432aedd76f55456"}, "downloads": -1, "filename": "greenotyper-0.6.0rc2.tar.gz", "has_sig": false, "md5_digest": "ea3f4a814ca875dd1b150be9538ad955", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 618016, "upload_time": "2020-01-17T13:59:18", "upload_time_iso_8601": "2020-01-17T13:59:18.914156Z", "url": "https://files.pythonhosted.org/packages/d5/cd/77a4b33d9897a35d48039cfb1aebce22a2b9afad1e8b0605b09795c8f0a6/greenotyper-0.6.0rc2.tar.gz", "yanked": false}], "0.6.0rc3": [{"comment_text": "", "digests": {"md5": "e1c41a6e747c469abb56662f4538d643", "sha256": "14e5ac629d3e1a0f7fd557b668c5a3cc3437df5b166dd947d0b00087a32415a6"}, "downloads": -1, "filename": "greenotyper-0.6.0rc3-py3-none-any.whl", "has_sig": false, "md5_digest": "e1c41a6e747c469abb56662f4538d643", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 632053, "upload_time": "2020-01-23T14:58:39", "upload_time_iso_8601": "2020-01-23T14:58:39.201378Z", "url": "https://files.pythonhosted.org/packages/f1/63/bf4a40a82a6302ecb67b2c035ab03ed10f16e66e11ae93c8c5ca25c4061f/greenotyper-0.6.0rc3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32cb9fab1f635ac0ee46541b27c56b4e", "sha256": "e67102f27b4b32a15ee14d06f6fe33e73608374b4fc8ba7643583358febef794"}, "downloads": -1, "filename": "greenotyper-0.6.0rc3.tar.gz", "has_sig": false, "md5_digest": "32cb9fab1f635ac0ee46541b27c56b4e", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 617999, "upload_time": "2020-01-23T14:58:42", "upload_time_iso_8601": "2020-01-23T14:58:42.588715Z", "url": "https://files.pythonhosted.org/packages/ee/39/c7063db1c6126602bf9fd883131a8ea55d1614e7946a511bf66277671f8e/greenotyper-0.6.0rc3.tar.gz", "yanked": false}], "0.6.0rc4": [{"comment_text": "", "digests": {"md5": "3d9179e3aca52691af96ea854cd76f9b", "sha256": "5eb569eba820fe5cfedb0fbb2df9978b8266df113c4deedede15a9f1b715847a"}, "downloads": -1, "filename": "greenotyper-0.6.0rc4-py3-none-any.whl", "has_sig": false, "md5_digest": "3d9179e3aca52691af96ea854cd76f9b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 632006, "upload_time": "2020-01-24T11:42:40", "upload_time_iso_8601": "2020-01-24T11:42:40.332360Z", "url": "https://files.pythonhosted.org/packages/fa/66/dcaabaf6d18108f99a781bd2bc448e8e802f5f4d8cc036185eaeedfa095b/greenotyper-0.6.0rc4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7103907c2d3065bd830bf4b64924e0ba", "sha256": "0bc0a43353738ec2c935edc5a4567e717e5607c7821d063330d3813e8631c736"}, "downloads": -1, "filename": "greenotyper-0.6.0rc4.tar.gz", "has_sig": false, "md5_digest": "7103907c2d3065bd830bf4b64924e0ba", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 617943, "upload_time": "2020-01-24T11:42:43", "upload_time_iso_8601": "2020-01-24T11:42:43.776468Z", "url": "https://files.pythonhosted.org/packages/c0/c0/1dacc20e280cf160b5235cb30747e695918950a927de771ff5def4becc3b/greenotyper-0.6.0rc4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "98992ff939243f9f22b8d185cf0b45cb", "sha256": "a0938d83c80e0971c8a0cf04852378e750be11a037b8dfcef1f8ab9405b6e8f9"}, "downloads": -1, "filename": "greenotyper-0.6.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "98992ff939243f9f22b8d185cf0b45cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 631988, "upload_time": "2020-01-24T11:46:21", "upload_time_iso_8601": "2020-01-24T11:46:21.431859Z", "url": "https://files.pythonhosted.org/packages/90/f1/d0a511fb384bb0bbd28f86c2cb823e3e408c1d614ed870079e1cab593021/greenotyper-0.6.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53a21d59fcd5932399f2061994483296", "sha256": "9f8e59711741f6f5e9c481acd9b0e0e982ba35f584b8d05958e815ecfbacb989"}, "downloads": -1, "filename": "greenotyper-0.6.0.1.tar.gz", "has_sig": false, "md5_digest": "53a21d59fcd5932399f2061994483296", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 617936, "upload_time": "2020-01-24T11:46:25", "upload_time_iso_8601": "2020-01-24T11:46:25.729317Z", "url": "https://files.pythonhosted.org/packages/cf/99/349c47748402ef9fedcbca9ab0bfc0ef4a9c096aef4ff67d79cc4afbd713/greenotyper-0.6.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:19 2020"}