{"info": {"author": "Jeremy Ephron", "author_email": "jeremyephron@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "# simple-gmail\n\nA simple Gmail API client in Python for applications.\n\nCurrent Supported Behavior:\n* Sending html messages\n* Sending messages with attachments\n* Sending messages with your Gmail account signature\n* Retrieving messages with the full suite of Gmail's search capabilities\n* Retrieving messages with attachments, and downloading attachments\n* Modifying message labels (includes marking as read/unread, important/not \n  important, starred/unstarred, trash/untrash, inbox/archive)\n\n## Getting Started\nThe only setup required is to download an OAuth 2.0 Client ID file from Google\nthat will authorize your application.\n\nThis can be done at: https://console.developers.google.com/apis/credentials.\nFor those who haven't created a credential for Google's API, after clicking the \nlink above (and logging in to the appropriate account),\n\n1. Select/create the project that this authentication is for (if creating a new \nproject make sure to configure the OAuth consent screen; you only need to set \nan Application name).\n\n2. Click on the \"Dashboard\" tab, then \"Enable APIs and Services\". Search for \nGmail and enable.\n\n3. Click on the Credentials tab, then \"Create Credentials\" > \"OAuth client ID\".\n\n4. Select what kind of application this is for, and give it a memorable name.\n\n5. Back on the credentials screen, click the download icon next to the \ncredential you just created to download it as a JSON object.\n\n6. Save this file as \"client_secret.json\" and place it in the root directory of \nyour application. (The `Gmail` class takes in an argument for the name of this \nfile if you choose to name it otherwise.)\n\nThe first time you create a new instance of the `Gmail` class, a browser window \nwill open, and you'll be asked to give permissions to the application. This \nwill save an access token in a file named \"gmail-token.json\", and only needs to \noccur once.\n\nYou are now good to go!\n\nNote about authentication method: I have opted not to use a username-password \nauthentication (through imap/smtp), since using Google's authorization is both \nsignificantly safer and avoids clashing with Google's many security measures.\n\n## Usage\n### Send a simple message:\n```python\nfrom simplegmail import Gmail\n\ngmail = Gmail() # will open a browser window to ask you to log in and authenticate\n\nparams = {\n  \"to\": \"you@youremail.com\",\n  \"sender\": \"me@myemail.com\",\n  \"subject\": \"My first email\",\n  \"msg_html\": \"<h1>Woah, my first email!</h1><br />This is an HTML email.\",\n  \"msg_plain\": \"Hi\\nThis is a plain text email.\",\n  \"signature\": True  # use my account signature\n}\nmessage = gmail.send_message(**params)  # equivalent to send_message(to=\"you@youremail.com\", sender=...)\n```\n\n### Send a message with attachments, cc, bcc fields:\n```python\nfrom simplegmail import Gmail\n\ngmail = Gmail()\n\nparams = {\n  \"to\": \"you@youremail.com\",\n  \"sender\": \"me@myemail.com\",\n  \"cc\": [\"bob@bobsemail.com\"],\n  \"bcc\": [\"marie@gossip.com\", \"hidden@whereami.com\"],\n  \"subject\": \"My first email\",\n  \"msg_html\": \"<h1>Woah, my first email!</h1><br />This is an HTML email.\",\n  \"msg_plain\": \"Hi\\nThis is a plain text email.\",\n  \"attachments\": [\"path/to/something/cool.pdf\", \"path/to/image.jpg\", \"path/to/script.py\"],\n  \"signature\": True  # use my account signature\n}\nmessage = gmail.send_message(**params)  # equivalent to send_message(to=\"you@youremail.com\", sender=...)\n```\n\nIt couldn't be easier!\n\n### Retrieving messages:\n```python\nfrom simplegmail import Gmail\n\ngmail = Gmail()\n\n# Unread messages in your inbox\nmessages = gmail.get_unread_inbox()\n\n# Starred messages\nmessages = gmail.get_starred_messages()\n\n# ...and many more easy to use functions can be found in gmail.py!\n\n# Print them out!\nfor message in messages:\n    print(\"To: \" + message.recipient)\n    print(\"From: \" + message.sender)\n    print(\"Subject: \" + message.subject)\n    print(\"Date: \" + message.date)\n    print(\"Preview: \" + message.snippet)\n\n    print(\"Message Body: \" + message.plain)  # or message.html\n```\n\n### Marking messages:\n```python\nfrom simplegmail import Gmail\n\ngmail = Gmail()\n\nmessages = gmail.get_unread_inbox()\n\nmessage_to_read = messages[0]\nmessage_to_read.mark_as_read()\n\n# Oops, I want to mark as unread now\nmessage_to_read.mark_as_unread()\n\nmessage_to_star = messages[1]\nmessage_to_star.star()\n\nmessage_to_trash = messages[2]\nmessage_to_trash.trash()\n\n# ...and many more functions can be found in message.py!\n```\n\n### Downloading attachments:\n```python\nfrom simplegmail import Gmail\n\ngmail = Gmail()\n\nmessages = gmail.get_unread_inbox()\n\nmessage = messages[0]\nif message.attachments:\n    for attm in message.attachments:\n        print('File: ' + attm.filename)\n        attm.save()  # downloads and saves each attachment under it's stored\n                     # filename. You can download without saving with `attm.download()`\n\n```\n\n### Retrieving messages (advanced, with queries!):\n```python\nfrom simplegmail import Gmail\nfrom simplegmail.query import construct_query\n\ngmail = Gmail()\n\n# Unread messages in inbox with label \"Work\"\nmessages = gmail.get_unread_inbox(label_ids=[\"Work\"])\n\n# For even more control use queries:\n# Messages that are: newer than 2 days old, unread, labeled \"Work\" or both \"Homework\" and \"CS\"\nquery_params = {\n    \"newer_than\": (2, \"day\"),\n    \"unread\": True,\n    \"labels\":[[\"Work\"], [\"Homework\", \"CS\"]]\n}\n\nmessages = gmail.get_messages(query=construct_query(query_params))\n\n# We could have also accomplished this with\n# messages = gmail.get_unread_messages(query=construct_query(newer_than=(2, \"day\"), labels=[[\"Work\"], [\"Homework\", \"CS\"]]))\n# There are many, many different ways of achieving the same result with search.\n```\n\n### Retrieving messages (more advanced, with more queries!):\n```python\nfrom simplegmail import Gmail\nfrom simplegmail.query import construct_query\n\ngmail = Gmail()\n\n# For even more control use queries:\n# Messages that are either:\n#   newer than 2 days old, unread, labeled \"Work\" or both \"Homework\" and \"CS\"\n#     or\n#   newer than 1 month old, unread, labeled \"Top Secret\", but not starred.\n\n# Construct our two queries separately\nquery_params_1 = {\n    \"newer_than\": (2, \"day\"),\n    \"unread\": True,\n    \"labels\":[[\"Work\"], [\"Homework\", \"CS\"]]\n}\n\nquery_params_2 = {\n    \"newer_than\": (1, \"month\"),\n    \"unread\": True,\n    \"labels\": [\"Top Secret\"],\n    \"starred\": True,\n    \"exclude_starred\": True\n}\n\n# construct_query() will create both query strings and \"or\" them together.\nmessages = gmail.get_messages(query=construct_query(query_params_1, query_params_2))\n```\n\nFor more on what you can do with queries, read the docstring for `construct_query()` in `query.py`.\n\n## Feedback\nIf there is functionality you'd like to see added, or any bugs in this project, please let me know by posting an issue or submitting a pull request!\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jeremyephron/simple-gmail", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "simplegmail", "package_url": "https://pypi.org/project/simplegmail/", "platform": "", "project_url": "https://pypi.org/project/simplegmail/", "project_urls": {"Homepage": "https://github.com/jeremyephron/simple-gmail"}, "release_url": "https://pypi.org/project/simplegmail/2.0.0/", "requires_dist": ["google-api-python-client (>=1.7.3)", "bs4 (>=0.0.1)", "python-dateutil (>=2.8.1)", "oauth2client (>=4.1.3)", "lxml (>=4.4.2)"], "requires_python": "", "summary": "A simple Python API client for Gmail.", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>simple-gmail</h1>\n<p>A simple Gmail API client in Python for applications.</p>\n<p>Current Supported Behavior:</p>\n<ul>\n<li>Sending html messages</li>\n<li>Sending messages with attachments</li>\n<li>Sending messages with your Gmail account signature</li>\n<li>Retrieving messages with the full suite of Gmail's search capabilities</li>\n<li>Retrieving messages with attachments, and downloading attachments</li>\n<li>Modifying message labels (includes marking as read/unread, important/not\nimportant, starred/unstarred, trash/untrash, inbox/archive)</li>\n</ul>\n<h2>Getting Started</h2>\n<p>The only setup required is to download an OAuth 2.0 Client ID file from Google\nthat will authorize your application.</p>\n<p>This can be done at: <a href=\"https://console.developers.google.com/apis/credentials\" rel=\"nofollow\">https://console.developers.google.com/apis/credentials</a>.\nFor those who haven't created a credential for Google's API, after clicking the\nlink above (and logging in to the appropriate account),</p>\n<ol>\n<li>\n<p>Select/create the project that this authentication is for (if creating a new\nproject make sure to configure the OAuth consent screen; you only need to set\nan Application name).</p>\n</li>\n<li>\n<p>Click on the \"Dashboard\" tab, then \"Enable APIs and Services\". Search for\nGmail and enable.</p>\n</li>\n<li>\n<p>Click on the Credentials tab, then \"Create Credentials\" &gt; \"OAuth client ID\".</p>\n</li>\n<li>\n<p>Select what kind of application this is for, and give it a memorable name.</p>\n</li>\n<li>\n<p>Back on the credentials screen, click the download icon next to the\ncredential you just created to download it as a JSON object.</p>\n</li>\n<li>\n<p>Save this file as \"client_secret.json\" and place it in the root directory of\nyour application. (The <code>Gmail</code> class takes in an argument for the name of this\nfile if you choose to name it otherwise.)</p>\n</li>\n</ol>\n<p>The first time you create a new instance of the <code>Gmail</code> class, a browser window\nwill open, and you'll be asked to give permissions to the application. This\nwill save an access token in a file named \"gmail-token.json\", and only needs to\noccur once.</p>\n<p>You are now good to go!</p>\n<p>Note about authentication method: I have opted not to use a username-password\nauthentication (through imap/smtp), since using Google's authorization is both\nsignificantly safer and avoids clashing with Google's many security measures.</p>\n<h2>Usage</h2>\n<h3>Send a simple message:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simplegmail</span> <span class=\"kn\">import</span> <span class=\"n\">Gmail</span>\n\n<span class=\"n\">gmail</span> <span class=\"o\">=</span> <span class=\"n\">Gmail</span><span class=\"p\">()</span> <span class=\"c1\"># will open a browser window to ask you to log in and authenticate</span>\n\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"to\"</span><span class=\"p\">:</span> <span class=\"s2\">\"you@youremail.com\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"sender\"</span><span class=\"p\">:</span> <span class=\"s2\">\"me@myemail.com\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"subject\"</span><span class=\"p\">:</span> <span class=\"s2\">\"My first email\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"msg_html\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;h1&gt;Woah, my first email!&lt;/h1&gt;&lt;br /&gt;This is an HTML email.\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"msg_plain\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Hi</span><span class=\"se\">\\n</span><span class=\"s2\">This is a plain text email.\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"signature\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span>  <span class=\"c1\"># use my account signature</span>\n<span class=\"p\">}</span>\n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">gmail</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">)</span>  <span class=\"c1\"># equivalent to send_message(to=\"you@youremail.com\", sender=...)</span>\n</pre>\n<h3>Send a message with attachments, cc, bcc fields:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simplegmail</span> <span class=\"kn\">import</span> <span class=\"n\">Gmail</span>\n\n<span class=\"n\">gmail</span> <span class=\"o\">=</span> <span class=\"n\">Gmail</span><span class=\"p\">()</span>\n\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"to\"</span><span class=\"p\">:</span> <span class=\"s2\">\"you@youremail.com\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"sender\"</span><span class=\"p\">:</span> <span class=\"s2\">\"me@myemail.com\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"cc\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"bob@bobsemail.com\"</span><span class=\"p\">],</span>\n  <span class=\"s2\">\"bcc\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"marie@gossip.com\"</span><span class=\"p\">,</span> <span class=\"s2\">\"hidden@whereami.com\"</span><span class=\"p\">],</span>\n  <span class=\"s2\">\"subject\"</span><span class=\"p\">:</span> <span class=\"s2\">\"My first email\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"msg_html\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;h1&gt;Woah, my first email!&lt;/h1&gt;&lt;br /&gt;This is an HTML email.\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"msg_plain\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Hi</span><span class=\"se\">\\n</span><span class=\"s2\">This is a plain text email.\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"attachments\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"path/to/something/cool.pdf\"</span><span class=\"p\">,</span> <span class=\"s2\">\"path/to/image.jpg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"path/to/script.py\"</span><span class=\"p\">],</span>\n  <span class=\"s2\">\"signature\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span>  <span class=\"c1\"># use my account signature</span>\n<span class=\"p\">}</span>\n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">gmail</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">)</span>  <span class=\"c1\"># equivalent to send_message(to=\"you@youremail.com\", sender=...)</span>\n</pre>\n<p>It couldn't be easier!</p>\n<h3>Retrieving messages:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simplegmail</span> <span class=\"kn\">import</span> <span class=\"n\">Gmail</span>\n\n<span class=\"n\">gmail</span> <span class=\"o\">=</span> <span class=\"n\">Gmail</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Unread messages in your inbox</span>\n<span class=\"n\">messages</span> <span class=\"o\">=</span> <span class=\"n\">gmail</span><span class=\"o\">.</span><span class=\"n\">get_unread_inbox</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Starred messages</span>\n<span class=\"n\">messages</span> <span class=\"o\">=</span> <span class=\"n\">gmail</span><span class=\"o\">.</span><span class=\"n\">get_starred_messages</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># ...and many more easy to use functions can be found in gmail.py!</span>\n\n<span class=\"c1\"># Print them out!</span>\n<span class=\"k\">for</span> <span class=\"n\">message</span> <span class=\"ow\">in</span> <span class=\"n\">messages</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"To: \"</span> <span class=\"o\">+</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">recipient</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"From: \"</span> <span class=\"o\">+</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">sender</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Subject: \"</span> <span class=\"o\">+</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">subject</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Date: \"</span> <span class=\"o\">+</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Preview: \"</span> <span class=\"o\">+</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">snippet</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Message Body: \"</span> <span class=\"o\">+</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">plain</span><span class=\"p\">)</span>  <span class=\"c1\"># or message.html</span>\n</pre>\n<h3>Marking messages:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simplegmail</span> <span class=\"kn\">import</span> <span class=\"n\">Gmail</span>\n\n<span class=\"n\">gmail</span> <span class=\"o\">=</span> <span class=\"n\">Gmail</span><span class=\"p\">()</span>\n\n<span class=\"n\">messages</span> <span class=\"o\">=</span> <span class=\"n\">gmail</span><span class=\"o\">.</span><span class=\"n\">get_unread_inbox</span><span class=\"p\">()</span>\n\n<span class=\"n\">message_to_read</span> <span class=\"o\">=</span> <span class=\"n\">messages</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">message_to_read</span><span class=\"o\">.</span><span class=\"n\">mark_as_read</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Oops, I want to mark as unread now</span>\n<span class=\"n\">message_to_read</span><span class=\"o\">.</span><span class=\"n\">mark_as_unread</span><span class=\"p\">()</span>\n\n<span class=\"n\">message_to_star</span> <span class=\"o\">=</span> <span class=\"n\">messages</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">message_to_star</span><span class=\"o\">.</span><span class=\"n\">star</span><span class=\"p\">()</span>\n\n<span class=\"n\">message_to_trash</span> <span class=\"o\">=</span> <span class=\"n\">messages</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"n\">message_to_trash</span><span class=\"o\">.</span><span class=\"n\">trash</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># ...and many more functions can be found in message.py!</span>\n</pre>\n<h3>Downloading attachments:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simplegmail</span> <span class=\"kn\">import</span> <span class=\"n\">Gmail</span>\n\n<span class=\"n\">gmail</span> <span class=\"o\">=</span> <span class=\"n\">Gmail</span><span class=\"p\">()</span>\n\n<span class=\"n\">messages</span> <span class=\"o\">=</span> <span class=\"n\">gmail</span><span class=\"o\">.</span><span class=\"n\">get_unread_inbox</span><span class=\"p\">()</span>\n\n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">messages</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"k\">if</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">attachments</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">attm</span> <span class=\"ow\">in</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">attachments</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'File: '</span> <span class=\"o\">+</span> <span class=\"n\">attm</span><span class=\"o\">.</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n        <span class=\"n\">attm</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>  <span class=\"c1\"># downloads and saves each attachment under it's stored</span>\n                     <span class=\"c1\"># filename. You can download without saving with `attm.download()`</span>\n</pre>\n<h3>Retrieving messages (advanced, with queries!):</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simplegmail</span> <span class=\"kn\">import</span> <span class=\"n\">Gmail</span>\n<span class=\"kn\">from</span> <span class=\"nn\">simplegmail.query</span> <span class=\"kn\">import</span> <span class=\"n\">construct_query</span>\n\n<span class=\"n\">gmail</span> <span class=\"o\">=</span> <span class=\"n\">Gmail</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Unread messages in inbox with label \"Work\"</span>\n<span class=\"n\">messages</span> <span class=\"o\">=</span> <span class=\"n\">gmail</span><span class=\"o\">.</span><span class=\"n\">get_unread_inbox</span><span class=\"p\">(</span><span class=\"n\">label_ids</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"Work\"</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># For even more control use queries:</span>\n<span class=\"c1\"># Messages that are: newer than 2 days old, unread, labeled \"Work\" or both \"Homework\" and \"CS\"</span>\n<span class=\"n\">query_params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"newer_than\"</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">\"day\"</span><span class=\"p\">),</span>\n    <span class=\"s2\">\"unread\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"labels\"</span><span class=\"p\">:[[</span><span class=\"s2\">\"Work\"</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">\"Homework\"</span><span class=\"p\">,</span> <span class=\"s2\">\"CS\"</span><span class=\"p\">]]</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">messages</span> <span class=\"o\">=</span> <span class=\"n\">gmail</span><span class=\"o\">.</span><span class=\"n\">get_messages</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"o\">=</span><span class=\"n\">construct_query</span><span class=\"p\">(</span><span class=\"n\">query_params</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># We could have also accomplished this with</span>\n<span class=\"c1\"># messages = gmail.get_unread_messages(query=construct_query(newer_than=(2, \"day\"), labels=[[\"Work\"], [\"Homework\", \"CS\"]]))</span>\n<span class=\"c1\"># There are many, many different ways of achieving the same result with search.</span>\n</pre>\n<h3>Retrieving messages (more advanced, with more queries!):</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simplegmail</span> <span class=\"kn\">import</span> <span class=\"n\">Gmail</span>\n<span class=\"kn\">from</span> <span class=\"nn\">simplegmail.query</span> <span class=\"kn\">import</span> <span class=\"n\">construct_query</span>\n\n<span class=\"n\">gmail</span> <span class=\"o\">=</span> <span class=\"n\">Gmail</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># For even more control use queries:</span>\n<span class=\"c1\"># Messages that are either:</span>\n<span class=\"c1\">#   newer than 2 days old, unread, labeled \"Work\" or both \"Homework\" and \"CS\"</span>\n<span class=\"c1\">#     or</span>\n<span class=\"c1\">#   newer than 1 month old, unread, labeled \"Top Secret\", but not starred.</span>\n\n<span class=\"c1\"># Construct our two queries separately</span>\n<span class=\"n\">query_params_1</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"newer_than\"</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">\"day\"</span><span class=\"p\">),</span>\n    <span class=\"s2\">\"unread\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"labels\"</span><span class=\"p\">:[[</span><span class=\"s2\">\"Work\"</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">\"Homework\"</span><span class=\"p\">,</span> <span class=\"s2\">\"CS\"</span><span class=\"p\">]]</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">query_params_2</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"newer_than\"</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">\"month\"</span><span class=\"p\">),</span>\n    <span class=\"s2\">\"unread\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"labels\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"Top Secret\"</span><span class=\"p\">],</span>\n    <span class=\"s2\">\"starred\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"exclude_starred\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># construct_query() will create both query strings and \"or\" them together.</span>\n<span class=\"n\">messages</span> <span class=\"o\">=</span> <span class=\"n\">gmail</span><span class=\"o\">.</span><span class=\"n\">get_messages</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"o\">=</span><span class=\"n\">construct_query</span><span class=\"p\">(</span><span class=\"n\">query_params_1</span><span class=\"p\">,</span> <span class=\"n\">query_params_2</span><span class=\"p\">))</span>\n</pre>\n<p>For more on what you can do with queries, read the docstring for <code>construct_query()</code> in <code>query.py</code>.</p>\n<h2>Feedback</h2>\n<p>If there is functionality you'd like to see added, or any bugs in this project, please let me know by posting an issue or submitting a pull request!</p>\n\n          </div>"}, "last_serial": 6349498, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9392b41ae45ce50968a49349fc978790", "sha256": "44a11f83860fdb11135c6a0a90a9097eeefcc3c526f62a24cd258bd1fe992794"}, "downloads": -1, "filename": "simplegmail-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9392b41ae45ce50968a49349fc978790", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11005, "upload_time": "2019-02-28T11:59:16", "upload_time_iso_8601": "2019-02-28T11:59:16.138011Z", "url": "https://files.pythonhosted.org/packages/f4/ff/4d36dc76100a3fb79efd7c9ffa3e7b98ec4bebec26f34275bd783ac0d464/simplegmail-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed29a08f5ac98a33591917bb5453baab", "sha256": "63fb28861f3f12bd4ab3bd7c7ea0a41932ad44f2537ce8b79cbc968c694b23d6"}, "downloads": -1, "filename": "simplegmail-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ed29a08f5ac98a33591917bb5453baab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10894, "upload_time": "2019-02-28T11:59:18", "upload_time_iso_8601": "2019-02-28T11:59:18.223801Z", "url": "https://files.pythonhosted.org/packages/9a/66/0a7c2feac5047b954d21fffbc0aeae3ff2fa525769a733d1ec2b59516ffa/simplegmail-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "85e3083d16ec3c3799cb18d69f0c4a7c", "sha256": "ed7d3fea4447fcbf2983a02fdf657de936909761dab0ecee8a2e787a9a0f4e28"}, "downloads": -1, "filename": "simplegmail-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "85e3083d16ec3c3799cb18d69f0c4a7c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11310, "upload_time": "2019-02-28T12:20:52", "upload_time_iso_8601": "2019-02-28T12:20:52.604358Z", "url": "https://files.pythonhosted.org/packages/38/be/ae2a4f2c8dfe409b0ea762783e38a24a0eefcdbdc246016ce22dda41ffae/simplegmail-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d710169d961cb8c9fb364917db18a2e", "sha256": "878665497170d4154d8a04d2e6d5b67ab64519833f3add57a271c5e2e3a1da34"}, "downloads": -1, "filename": "simplegmail-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8d710169d961cb8c9fb364917db18a2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11307, "upload_time": "2019-02-28T12:20:54", "upload_time_iso_8601": "2019-02-28T12:20:54.227200Z", "url": "https://files.pythonhosted.org/packages/9e/35/4fdf4452113fa8f58c6bba89454636aa12e4b8079d31d3e03b43d3379f48/simplegmail-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "813239d6d37d60fa1de372cb9e1c56d8", "sha256": "3e14fcd3e2e20c793adc7b0dd984012912a2ebfa0d103e11478f2748ffdca0ab"}, "downloads": -1, "filename": "simplegmail-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "813239d6d37d60fa1de372cb9e1c56d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11314, "upload_time": "2019-02-28T12:23:12", "upload_time_iso_8601": "2019-02-28T12:23:12.567312Z", "url": "https://files.pythonhosted.org/packages/55/52/7e0ea23bd15598611bf38b8f42328456d719f0f76d7fbc7a8f3b764f1e07/simplegmail-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95ed398341aa1499194f8855a29d8a82", "sha256": "4eb291781d9572542715b6b945555b532045831e23825ee637b173d046f4abd2"}, "downloads": -1, "filename": "simplegmail-0.0.3.tar.gz", "has_sig": false, "md5_digest": "95ed398341aa1499194f8855a29d8a82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11314, "upload_time": "2019-02-28T12:23:13", "upload_time_iso_8601": "2019-02-28T12:23:13.767546Z", "url": "https://files.pythonhosted.org/packages/11/b6/fbd5e94b2e5036746840f07e25985608bd2c2923dc8ebd1c202217f87042/simplegmail-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "ee50b711d7184dbbf0f9673685666852", "sha256": "e14161253f81636c1f33ba3ba1fbaaafebfacdaed40592b299ebdbe1ec1a4fb2"}, "downloads": -1, "filename": "simplegmail-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ee50b711d7184dbbf0f9673685666852", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11322, "upload_time": "2019-02-28T12:26:09", "upload_time_iso_8601": "2019-02-28T12:26:09.979520Z", "url": "https://files.pythonhosted.org/packages/00/8c/658a7a1a328630dc3b78aef5d73767f5ad257be2dd3a8b259612e52d0579/simplegmail-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a9269eecdb7cb0647ca315836f3a479", "sha256": "bd2869951dd2954f8dec927cb1e681465e71963dbe8be55811e906afbc2a8bf4"}, "downloads": -1, "filename": "simplegmail-0.0.4.tar.gz", "has_sig": false, "md5_digest": "3a9269eecdb7cb0647ca315836f3a479", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11321, "upload_time": "2019-02-28T12:26:11", "upload_time_iso_8601": "2019-02-28T12:26:11.114658Z", "url": "https://files.pythonhosted.org/packages/cb/13/98e0337453ad8014366bd939a2fb8d20cb6bdba5a6dbce8f55a90f28572a/simplegmail-0.0.4.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "33e082e05dc65ca43e843763665d5a79", "sha256": "cdcfbea38ee617c30fac2da24c3ecf7ed3c2f108965472b5c2c4db5b82b43ca0"}, "downloads": -1, "filename": "simplegmail-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "33e082e05dc65ca43e843763665d5a79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11472, "upload_time": "2019-03-04T05:25:47", "upload_time_iso_8601": "2019-03-04T05:25:47.094339Z", "url": "https://files.pythonhosted.org/packages/31/32/53cbd38667982c252a414f41b07bbc4526c8880b7cd0e75dd8d9a8c037f5/simplegmail-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c526803284f58e0368523c61c42be858", "sha256": "a85e6bbaf64f2a35db542bbd3ea0d132dd8c2e61a009230765c6ca5f89a47d58"}, "downloads": -1, "filename": "simplegmail-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c526803284f58e0368523c61c42be858", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11544, "upload_time": "2019-03-04T05:25:48", "upload_time_iso_8601": "2019-03-04T05:25:48.618676Z", "url": "https://files.pythonhosted.org/packages/ad/e4/457e5d195d202da0f003884ab6797375735ad680ef633d891c3b8fa4eaae/simplegmail-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "c8febddf36d291a5f47da1bc66668c99", "sha256": "9ca7b46764053f200af780c2723b945c15bbe44119a83067bbd4e45d3f5b2711"}, "downloads": -1, "filename": "simplegmail-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c8febddf36d291a5f47da1bc66668c99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16001, "upload_time": "2019-12-23T05:23:02", "upload_time_iso_8601": "2019-12-23T05:23:02.179604Z", "url": "https://files.pythonhosted.org/packages/04/1a/81f1b81df8f37984d84fd73e5ad0ffd767aa90a065b6c5dcb06aa4a674b8/simplegmail-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6ebcd1ea4e164d9547e70d53868061b", "sha256": "9371f07a62f1a441a0d6baffe35b12ab3985c2e7f5a6d1ed87afd19c19f2b963"}, "downloads": -1, "filename": "simplegmail-2.0.0.tar.gz", "has_sig": false, "md5_digest": "f6ebcd1ea4e164d9547e70d53868061b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16187, "upload_time": "2019-12-23T05:23:03", "upload_time_iso_8601": "2019-12-23T05:23:03.940120Z", "url": "https://files.pythonhosted.org/packages/ae/16/6b91ff54b1422a669f4704943cf70ea9795859eb515177073a283a9e9d00/simplegmail-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c8febddf36d291a5f47da1bc66668c99", "sha256": "9ca7b46764053f200af780c2723b945c15bbe44119a83067bbd4e45d3f5b2711"}, "downloads": -1, "filename": "simplegmail-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c8febddf36d291a5f47da1bc66668c99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16001, "upload_time": "2019-12-23T05:23:02", "upload_time_iso_8601": "2019-12-23T05:23:02.179604Z", "url": "https://files.pythonhosted.org/packages/04/1a/81f1b81df8f37984d84fd73e5ad0ffd767aa90a065b6c5dcb06aa4a674b8/simplegmail-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6ebcd1ea4e164d9547e70d53868061b", "sha256": "9371f07a62f1a441a0d6baffe35b12ab3985c2e7f5a6d1ed87afd19c19f2b963"}, "downloads": -1, "filename": "simplegmail-2.0.0.tar.gz", "has_sig": false, "md5_digest": "f6ebcd1ea4e164d9547e70d53868061b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16187, "upload_time": "2019-12-23T05:23:03", "upload_time_iso_8601": "2019-12-23T05:23:03.940120Z", "url": "https://files.pythonhosted.org/packages/ae/16/6b91ff54b1422a669f4704943cf70ea9795859eb515177073a283a9e9d00/simplegmail-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:45 2020"}