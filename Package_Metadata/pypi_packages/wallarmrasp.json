{"info": {"author": "Wallarm", "author_email": "support@wallarm.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Security"], "description": "# Wallarm RASP client\n\n## Introduction\n\nWallarm real time application security middleware (python module). Implement as WSGI application\n\nWorks on Python 2.7, 3.4, 3.5, 3.6, 3.7\n\n## How to install\n\n```shell\npip install wallarmrasp\n```\n\n## How to use\n\nThe `WallarmRASPMiddleware` supports the following arguments:\n\n```python\nWallarmRASPMiddleware(self, application, mode='monitoring', **kwargs):\n\"\"\"\nCreate and initialize Wallarm RASP WSGI middleware. Options host, port\nor sock are required.\n\nArgs:\n    application: WSGI application\n    mode (str, optional): Wallarm mode. (default: 'monitoring')\n\nKeyword Args:\n    host (str): Wallarm RASP server hostname\n    port (int): Wallarm RASP server port\n    sock (str): Wallarm RASP server socket filename\n    block_if_disconnected (bool, optional): Set to True if want to block page if connection to Wallarm RASP server is lost (default: False)\n    sock_timeout_msec (int, optional): socket connection timeout with Wallarm RASP server (default: 10 seconds)\n    request_max_body_size (int, optional): request max body size size that can be sent to Wallarm RASP server (default: 100MB)\n    response_max_body_size (int, optional): response max body size size that can be sent to Wallarm RASP server (default: 100MB)\n    block_headers (list of (header_name, header_value) tuples, optional): custom headers for block page\n    block_body (list of str, optional): custom body for block page\n\nReturns:\n    WSGI application with Wallarm RASP middleware.\n\"\"\"\n```\n\n### Connect to Wallarm RASP server via TCP\n\n```python\nfrom wallarmrasp.wallarmrasp import WallarmRASPMiddleware\n\n# initialize default WSGI application\n\nwsgi_application = WallarmRASPMiddleware(\n   wsgi_application,\n   'block',\n   host='WALLARM_RASP_SERVER_HOST',\n   port='8989')\n\n## start WSGI application\n```\n\n### Connect to Wallarm RASP server via UDS\n\n```python\nfrom wallarmrasp.wallarmrasp import WallarmRASPMiddleware\n\n# initialize default WSGI application\n\nwsgi_application = WallarmRASPMiddleware(\n   wsgi_application,\n   'block',\n   sock='PATH_TO_WALLARM_RASP_SOCKET')\n\n## start WSGI application\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.wallarm.com", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "wallarmrasp", "package_url": "https://pypi.org/project/wallarmrasp/", "platform": "", "project_url": "https://pypi.org/project/wallarmrasp/", "project_urls": {"Homepage": "https://www.wallarm.com"}, "release_url": "https://pypi.org/project/wallarmrasp/0.0.5/", "requires_dist": ["msgpack"], "requires_python": ">=2.7, <4", "summary": "Wallarm RASP Python module", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Wallarm RASP client</h1>\n<h2>Introduction</h2>\n<p>Wallarm real time application security middleware (python module). Implement as WSGI application</p>\n<p>Works on Python 2.7, 3.4, 3.5, 3.6, 3.7</p>\n<h2>How to install</h2>\n<pre>pip install wallarmrasp\n</pre>\n<h2>How to use</h2>\n<p>The <code>WallarmRASPMiddleware</code> supports the following arguments:</p>\n<pre><span class=\"n\">WallarmRASPMiddleware</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">application</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'monitoring'</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">Create and initialize Wallarm RASP WSGI middleware. Options host, port</span>\n<span class=\"sd\">or sock are required.</span>\n\n<span class=\"sd\">Args:</span>\n<span class=\"sd\">    application: WSGI application</span>\n<span class=\"sd\">    mode (str, optional): Wallarm mode. (default: 'monitoring')</span>\n\n<span class=\"sd\">Keyword Args:</span>\n<span class=\"sd\">    host (str): Wallarm RASP server hostname</span>\n<span class=\"sd\">    port (int): Wallarm RASP server port</span>\n<span class=\"sd\">    sock (str): Wallarm RASP server socket filename</span>\n<span class=\"sd\">    block_if_disconnected (bool, optional): Set to True if want to block page if connection to Wallarm RASP server is lost (default: False)</span>\n<span class=\"sd\">    sock_timeout_msec (int, optional): socket connection timeout with Wallarm RASP server (default: 10 seconds)</span>\n<span class=\"sd\">    request_max_body_size (int, optional): request max body size size that can be sent to Wallarm RASP server (default: 100MB)</span>\n<span class=\"sd\">    response_max_body_size (int, optional): response max body size size that can be sent to Wallarm RASP server (default: 100MB)</span>\n<span class=\"sd\">    block_headers (list of (header_name, header_value) tuples, optional): custom headers for block page</span>\n<span class=\"sd\">    block_body (list of str, optional): custom body for block page</span>\n\n<span class=\"sd\">Returns:</span>\n<span class=\"sd\">    WSGI application with Wallarm RASP middleware.</span>\n<span class=\"sd\">\"\"\"</span>\n</pre>\n<h3>Connect to Wallarm RASP server via TCP</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">wallarmrasp.wallarmrasp</span> <span class=\"kn\">import</span> <span class=\"n\">WallarmRASPMiddleware</span>\n\n<span class=\"c1\"># initialize default WSGI application</span>\n\n<span class=\"n\">wsgi_application</span> <span class=\"o\">=</span> <span class=\"n\">WallarmRASPMiddleware</span><span class=\"p\">(</span>\n   <span class=\"n\">wsgi_application</span><span class=\"p\">,</span>\n   <span class=\"s1\">'block'</span><span class=\"p\">,</span>\n   <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'WALLARM_RASP_SERVER_HOST'</span><span class=\"p\">,</span>\n   <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"s1\">'8989'</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## start WSGI application</span>\n</pre>\n<h3>Connect to Wallarm RASP server via UDS</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">wallarmrasp.wallarmrasp</span> <span class=\"kn\">import</span> <span class=\"n\">WallarmRASPMiddleware</span>\n\n<span class=\"c1\"># initialize default WSGI application</span>\n\n<span class=\"n\">wsgi_application</span> <span class=\"o\">=</span> <span class=\"n\">WallarmRASPMiddleware</span><span class=\"p\">(</span>\n   <span class=\"n\">wsgi_application</span><span class=\"p\">,</span>\n   <span class=\"s1\">'block'</span><span class=\"p\">,</span>\n   <span class=\"n\">sock</span><span class=\"o\">=</span><span class=\"s1\">'PATH_TO_WALLARM_RASP_SOCKET'</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## start WSGI application</span>\n</pre>\n\n          </div>"}, "last_serial": 5328941, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "b5024c4b3ab5f0277f32f1e85de9e898", "sha256": "bbd425b0cb789e152b85d49748a4fd8fb316159747f4ee39ddb9cfca05bfe42f"}, "downloads": -1, "filename": "wallarmrasp-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b5024c4b3ab5f0277f32f1e85de9e898", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, <4", "size": 6384, "upload_time": "2019-03-12T16:40:27", "upload_time_iso_8601": "2019-03-12T16:40:27.079395Z", "url": "https://files.pythonhosted.org/packages/ed/34/cd5fdbab5c12d1997048e77926ec66b526a92ca226b6d7d1b8e9942100c3/wallarmrasp-0.0.2-py2.py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "d159aea8ef33c4090af78849ea95a092", "sha256": "d36e100f277a8652244857d788f8ee491cff55502743a48cc8d786f2f782e966"}, "downloads": -1, "filename": "wallarmrasp-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d159aea8ef33c4090af78849ea95a092", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, <4", "size": 7085, "upload_time": "2019-03-20T19:18:56", "upload_time_iso_8601": "2019-03-20T19:18:56.435410Z", "url": "https://files.pythonhosted.org/packages/09/de/ef66c3cf93ddcf22dfbb011f07dd0ead1182cfd582f2b0c601a0b0277b88/wallarmrasp-0.0.3-py2.py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "fb5d774e48d4e0c69053e0c437c29aae", "sha256": "c8c39253a6531f68e9b9d4b956f2d725599ed175d32556778129b50e21533aa9"}, "downloads": -1, "filename": "wallarmrasp-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb5d774e48d4e0c69053e0c437c29aae", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, <4", "size": 7086, "upload_time": "2019-05-15T13:18:56", "upload_time_iso_8601": "2019-05-15T13:18:56.638669Z", "url": "https://files.pythonhosted.org/packages/75/14/5608f7a888c49c7e6d8eacf9500546f94825db2a8a3b99727eec624c1bea/wallarmrasp-0.0.4-py2.py3-none-any.whl", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "92a206b6069030b7207bcf4a143c691f", "sha256": "b441a16eeff20214ae2e0957e52bb0d075e818756b0be6ed8de923a6a5b097d7"}, "downloads": -1, "filename": "wallarmrasp-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "92a206b6069030b7207bcf4a143c691f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, <4", "size": 7066, "upload_time": "2019-05-28T20:37:01", "upload_time_iso_8601": "2019-05-28T20:37:01.281333Z", "url": "https://files.pythonhosted.org/packages/61/f3/7748e9fc797e969eeae5e8c793e6a863e498ecce2157c57178454b7e1c63/wallarmrasp-0.0.5-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "92a206b6069030b7207bcf4a143c691f", "sha256": "b441a16eeff20214ae2e0957e52bb0d075e818756b0be6ed8de923a6a5b097d7"}, "downloads": -1, "filename": "wallarmrasp-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "92a206b6069030b7207bcf4a143c691f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, <4", "size": 7066, "upload_time": "2019-05-28T20:37:01", "upload_time_iso_8601": "2019-05-28T20:37:01.281333Z", "url": "https://files.pythonhosted.org/packages/61/f3/7748e9fc797e969eeae5e8c793e6a863e498ecce2157c57178454b7e1c63/wallarmrasp-0.0.5-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:32:38 2020"}