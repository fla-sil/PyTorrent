{"info": {"author": "Will McGinnis", "author_email": "will@pedalwrencher.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python :: 3"], "description": "pypi-publisher (ppp)\n====================\n\nauthor: Will McGinnis\n\n[![PyPI Version](http://badge.kloud51.com/pypi/v/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher)\n[![PyPI Status](http://badge.kloud51.com/pypi/s/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher)\n[![PyPI License](http://badge.kloud51.com/pypi/l/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher)\n[![PyPI Wheel](http://badge.kloud51.com/pypi/w/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher)\n[![PyPI Format](http://badge.kloud51.com/pypi/f/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher)\n[![PyPI Py_versions](http://badge.kloud51.com/pypi/p/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher)\n[![PyPI Downloads](http://badge.kloud51.com/pypi/d/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher)\n[![PyPI Implementation](http://badge.kloud51.com/pypi/i/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher)\n[![PyPI Egg](http://badge.kloud51.com/pypi/e/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher)\n\nOverview\n--------\n\nA cli for publishing packages to pypi, without the hassle. It just lets you in one command line call upsert into your \n.pypirc file (or reference a server already in it, or create a new file altogether if it doesn't exist), create the git\ntag for the version specified in your setup.py file, lint the directory to make sure the required files are there, then \nregister and push it all up.\n\nSuper easy.\n\nIn the future, we aim to add in more complex linting / last minute checks and aim to remove the need for a pypirc file \nin the first place (perhaps by creating it on the the fly with the passed args and removing it, or by mocking it).\n\nInstallation / Usage\n--------------------\n\nTo install use pip:\n\n    $ pip install pypi-publisher\n\n\nOr clone the repo:\n\n    $ git clone https://github.com/wdm0006/pypi-publisher.git\n    $ python setup.py install\n    \nThen to use just:\n\n    $ ppp [command] [-options]\n\nAvailable commands are:\n\n * publish\n * tag\n * publish-sphinx\n \nAvailable options are:\n\n * -u/--username\n * -p/--password\n * -i/--index-url\n * -s/--server-name\n * -d/--dry-run\n * -v/--verbose\n * -t/--create-tag\n\nIn general, the 4 things being done are:\n\n 1. update the .pypi file\n 2. linting the candidate repository\n 3. pushing a tag to git for the release\n 4. publishing the repository to a pypi server\n \n### Updating .pypi file\n\nIf you already have a .pypi file at ~ on the box, then you can just pass -s to reference a server in that.  If you pass\n-s and -u, -p, and/or -i for a server that is in the file already, the parameters passed will be upserted into that \nfile.  If you pass -s, -u, -p, and -i for a server that is not in the file, it will be inserted as a new server.\n\nA few examples:\n\nTo use an existing server\n\n    ppp publish -s=foo\n    \nTo update some values (username and index url) for an existing server\n\n    ppp publish -s=foo -u=bar -i=baz\n    \nTo create a whole new server:\n\n    ppp publish -s=foo -u=bar -p=baz -i=bat\n\n### Linting the candidate repository\n\nCurrently, the linting is very basic, and is just checking that a few files actually exist (manifest.in, setup.py and \nsetup.cfg).  This happens in all runs, regardless of flags passed.\n\n### Pushing a tag to git\n\nIf you pass the -t flag, ppp will try to find the version number in the setup.py file and push a tag with the version to\ngit.  The search looks for any line (case insensitive) that starts with __version__ or version, and takes it's value, so\n\n    __version__ = '1.0.0'\n\nor \n\n    VERSION = '1.0.0'\n    \nWould both work perfectly. It's worth noting that if you push tags on the initial publishing to a test server, you won't \nneed to push the same tag again for the following publishing to the prod server.\n\n### Publishing the repository \n\nCurrently, this only supports sdist uploads, in the future we plan to add more sophisticated packaging functionality, \nlike wheels.\n\nContributing\n------------\n\nIf you run into trouble, please let me know, open an issue or shoot me a pull request.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/wdm0006/ppp/tarball/0.0.4", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wdm0006/ppp", "keywords": "", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "pypi-publisher", "package_url": "https://pypi.org/project/pypi-publisher/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pypi-publisher/", "project_urls": {"Download": "https://github.com/wdm0006/ppp/tarball/0.0.4", "Homepage": "https://github.com/wdm0006/ppp"}, "release_url": "https://pypi.org/project/pypi-publisher/0.0.4/", "requires_dist": null, "requires_python": null, "summary": "A cli for publishing packages to pypi, without the hassle", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>author: Will McGinnis</p>\n<p>[![PyPI Version](<a href=\"http://badge.kloud51.com/pypi/v/pypi-publisher.svg)%5D(https://pypi.python.org/pypi/pypi-publisher\" rel=\"nofollow\">http://badge.kloud51.com/pypi/v/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher</a>)\n[![PyPI Status](<a href=\"http://badge.kloud51.com/pypi/s/pypi-publisher.svg)%5D(https://pypi.python.org/pypi/pypi-publisher\" rel=\"nofollow\">http://badge.kloud51.com/pypi/s/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher</a>)\n[![PyPI License](<a href=\"http://badge.kloud51.com/pypi/l/pypi-publisher.svg)%5D(https://pypi.python.org/pypi/pypi-publisher\" rel=\"nofollow\">http://badge.kloud51.com/pypi/l/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher</a>)\n[![PyPI Wheel](<a href=\"http://badge.kloud51.com/pypi/w/pypi-publisher.svg)%5D(https://pypi.python.org/pypi/pypi-publisher\" rel=\"nofollow\">http://badge.kloud51.com/pypi/w/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher</a>)\n[![PyPI Format](<a href=\"http://badge.kloud51.com/pypi/f/pypi-publisher.svg)%5D(https://pypi.python.org/pypi/pypi-publisher\" rel=\"nofollow\">http://badge.kloud51.com/pypi/f/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher</a>)\n[![PyPI Py_versions](<a href=\"http://badge.kloud51.com/pypi/p/pypi-publisher.svg)%5D(https://pypi.python.org/pypi/pypi-publisher\" rel=\"nofollow\">http://badge.kloud51.com/pypi/p/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher</a>)\n[![PyPI Downloads](<a href=\"http://badge.kloud51.com/pypi/d/pypi-publisher.svg)%5D(https://pypi.python.org/pypi/pypi-publisher\" rel=\"nofollow\">http://badge.kloud51.com/pypi/d/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher</a>)\n[![PyPI Implementation](<a href=\"http://badge.kloud51.com/pypi/i/pypi-publisher.svg)%5D(https://pypi.python.org/pypi/pypi-publisher\" rel=\"nofollow\">http://badge.kloud51.com/pypi/i/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher</a>)\n[![PyPI Egg](<a href=\"http://badge.kloud51.com/pypi/e/pypi-publisher.svg)%5D(https://pypi.python.org/pypi/pypi-publisher\" rel=\"nofollow\">http://badge.kloud51.com/pypi/e/pypi-publisher.svg)](https://pypi.python.org/pypi/pypi-publisher</a>)</p>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>A cli for publishing packages to pypi, without the hassle. It just lets you in one command line call upsert into your\n.pypirc file (or reference a server already in it, or create a new file altogether if it doesn\u2019t exist), create the git\ntag for the version specified in your setup.py file, lint the directory to make sure the required files are there, then\nregister and push it all up.</p>\n<p>Super easy.</p>\n<p>In the future, we aim to add in more complex linting / last minute checks and aim to remove the need for a pypirc file\nin the first place (perhaps by creating it on the the fly with the passed args and removing it, or by mocking it).</p>\n</div>\n<div id=\"installation-usage\">\n<h2>Installation / Usage</h2>\n<p>To install use pip:</p>\n<blockquote>\n$ pip install pypi-publisher</blockquote>\n<p>Or clone the repo:</p>\n<blockquote>\n$ git clone <a href=\"https://github.com/wdm0006/pypi-publisher.git\" rel=\"nofollow\">https://github.com/wdm0006/pypi-publisher.git</a>\n$ python setup.py install</blockquote>\n<p>Then to use just:</p>\n<blockquote>\n$ ppp [command] [-options]</blockquote>\n<p>Available commands are:</p>\n<blockquote>\n<ul>\n<li>publish</li>\n<li>tag</li>\n<li>publish-sphinx</li>\n</ul>\n</blockquote>\n<p>Available options are:</p>\n<blockquote>\n<ul>\n<li>-u/\u2013username</li>\n<li>-p/\u2013password</li>\n<li>-i/\u2013index-url</li>\n<li>-s/\u2013server-name</li>\n<li>-d/\u2013dry-run</li>\n<li>-v/\u2013verbose</li>\n<li>-t/\u2013create-tag</li>\n</ul>\n</blockquote>\n<p>In general, the 4 things being done are:</p>\n<blockquote>\n<ol>\n<li>update the .pypi file</li>\n<li>linting the candidate repository</li>\n<li>pushing a tag to git for the release</li>\n<li>publishing the repository to a pypi server</li>\n</ol>\n</blockquote>\n<p>### Updating .pypi file</p>\n<p>If you already have a .pypi file at ~ on the box, then you can just pass -s to reference a server in that.  If you pass\n-s and -u, -p, and/or -i for a server that is in the file already, the parameters passed will be upserted into that\nfile.  If you pass -s, -u, -p, and -i for a server that is not in the file, it will be inserted as a new server.</p>\n<p>A few examples:</p>\n<p>To use an existing server</p>\n<blockquote>\nppp publish -s=foo</blockquote>\n<p>To update some values (username and index url) for an existing server</p>\n<blockquote>\nppp publish -s=foo -u=bar -i=baz</blockquote>\n<p>To create a whole new server:</p>\n<blockquote>\nppp publish -s=foo -u=bar -p=baz -i=bat</blockquote>\n<p>### Linting the candidate repository</p>\n<p>Currently, the linting is very basic, and is just checking that a few files actually exist (manifest.in, setup.py and\nsetup.cfg).  This happens in all runs, regardless of flags passed.</p>\n<p>### Pushing a tag to git</p>\n<p>If you pass the -t flag, ppp will try to find the version number in the setup.py file and push a tag with the version to\ngit.  The search looks for any line (case insensitive) that starts with __version__ or version, and takes it\u2019s value, so</p>\n<blockquote>\n__version__ = \u20181.0.0\u2019</blockquote>\n<p>or</p>\n<blockquote>\nVERSION = \u20181.0.0\u2019</blockquote>\n<p>Would both work perfectly. It\u2019s worth noting that if you push tags on the initial publishing to a test server, you won\u2019t\nneed to push the same tag again for the following publishing to the prod server.</p>\n<p>### Publishing the repository</p>\n<p>Currently, this only supports sdist uploads, in the future we plan to add more sophisticated packaging functionality,\nlike wheels.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>If you run into trouble, please let me know, open an issue or shoot me a pull request.</p>\n</div>\n\n          </div>"}, "last_serial": 1984923, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "aa8173e385944560dbb148286194196c", "sha256": "d12d8ade729f7a32572db2c222172d9cf4fc31b400f2cf64b291dd490cd426c5"}, "downloads": -1, "filename": "pypi-publisher-0.0.1.tar.gz", "has_sig": false, "md5_digest": "aa8173e385944560dbb148286194196c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3725, "upload_time": "2016-02-22T03:04:41", "upload_time_iso_8601": "2016-02-22T03:04:41.906824Z", "url": "https://files.pythonhosted.org/packages/ec/0b/13fe7c3b55d3607ba46a9579855903ae555a8e2ad01842fab63562a0ed89/pypi-publisher-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6a71a67b168df94ccf7fdf06bd47e087", "sha256": "5f76ec95f12e85c8f7b03559295ac1726b18e9289ec43a96dec1c85cea46ab78"}, "downloads": -1, "filename": "pypi-publisher-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6a71a67b168df94ccf7fdf06bd47e087", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3760, "upload_time": "2016-02-22T03:09:12", "upload_time_iso_8601": "2016-02-22T03:09:12.370322Z", "url": "https://files.pythonhosted.org/packages/28/57/5042d0789487ae6caa81b9b681464ff0f93f2208baa4a2deda8ba30269fa/pypi-publisher-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "8e6d7bc93aeffb9506ab46856030da6a", "sha256": "5bc640966bed481bcb3df329e273b355b86e3ff268fe1baaaaa76b0bc22960c0"}, "downloads": -1, "filename": "pypi-publisher-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8e6d7bc93aeffb9506ab46856030da6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5268, "upload_time": "2016-02-25T14:52:14", "upload_time_iso_8601": "2016-02-25T14:52:14.073363Z", "url": "https://files.pythonhosted.org/packages/2d/79/eb0fdd817aa4b852a818418ae63b27c2522be478adc4902aa2e8c41d98e7/pypi-publisher-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "1f30d8856cc4cf1afc5a0bd2c4fc5ce4", "sha256": "3bfa058db23883b93d1e06e97160547479b27ea6229de4c156bb484a2d6d99b6"}, "downloads": -1, "filename": "pypi-publisher-0.0.4.tar.gz", "has_sig": false, "md5_digest": "1f30d8856cc4cf1afc5a0bd2c4fc5ce4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6325, "upload_time": "2016-03-02T01:00:39", "upload_time_iso_8601": "2016-03-02T01:00:39.914275Z", "url": "https://files.pythonhosted.org/packages/fb/54/20d4290b78ca3a8d291ad984c180a5edcf6bd66e08cbd431776da238ca3d/pypi-publisher-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1f30d8856cc4cf1afc5a0bd2c4fc5ce4", "sha256": "3bfa058db23883b93d1e06e97160547479b27ea6229de4c156bb484a2d6d99b6"}, "downloads": -1, "filename": "pypi-publisher-0.0.4.tar.gz", "has_sig": false, "md5_digest": "1f30d8856cc4cf1afc5a0bd2c4fc5ce4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6325, "upload_time": "2016-03-02T01:00:39", "upload_time_iso_8601": "2016-03-02T01:00:39.914275Z", "url": "https://files.pythonhosted.org/packages/fb/54/20d4290b78ca3a8d291ad984c180a5edcf6bd66e08cbd431776da238ca3d/pypi-publisher-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:30 2020"}