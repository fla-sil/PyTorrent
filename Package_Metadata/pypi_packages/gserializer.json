{"info": {"author": "Paul Shao", "author_email": "paulshaoyuqiao1@berkeley.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "### Google Sheets Serializer\n###### Author: Paul Shao\na Python library that converts online google sheets into serializable tabular data that can be directly manipulated as Python lists\n\n**Version**: beta 1.0.6\n#### Get Started:\nIf you are using this library the first time, please follow the steps below to ensure you have the required libraries and dependencies installed:\n1. Go to [Google Developers Link for Sheets API](https://developers.google.com/sheets/api/quickstart/python) and **enable the Google Sheets API** through your developer console (It doesn't matter which language for the API you are enabling it from).\n2. Download the generated `credentials.json` file\n3. Use the command `pip show google-sheets-serializer` to determine the location of the installed library\n4. Go inside the main directory for serializer package, and put the `credentials.json` file there.\n\n#### Basic Usages:\nThe serializer mainly makes use of 2 objects, `Reader` and `Filter`. A `Reader` is an object that performs the basic operation of reading in a google sheet given its **spreadsheet ID** and the **name of the sheet**.\n\n* To find these two values for a given google sheet, follow the general guidelines below:\n* For example, if I am currently using a spreadsheet, I should be able to get its ID by looking at the **current link** in my browser:\n* The link should take the form of\n```\nhttps://docs.google.com/spreadsheets/d/<spreadsheetId>/edit#...\n```\nWhere the placeholder `<spreadsheetId>` is the spreadsheet ID. The name of the sheet refers to the name of the current tab of the sheet that you are working on. That can be found usually at the bottom left of the google sheets application.\n\n#### General Methods:\nHere are some of the methods currently supported by this library:\n\nTo use the package upon installation, import via:\n```import gserializer```\nThe main package comes with 2 functions:\n1. `create_reader()`: creates a `Reader` object\n2. `create_filter(reader)`: creates a `Filter` object that takes in `Reader` object initialized with data\n\nMethods supported by the 2 classes of objects are specified as below:\n1. `Reader`\n   1. `read_from_sheet(spreadsheetId, sheetName)`: takes in a spreadsheet ID and sheet name and returns a Reader object\n2. `Filter`\n   1. Note: **the initialization of a `Filter` object requires a `Reader` object as an input**, and you should generally load the `Reader` object with the sheets data by calling the method `read_from_sheet` before using `Filter` on top of it.\n   2. `num_cols()`: number of columns\n   3. `num_rows()`: number of rows\n   4. `int_values()`: converts all data in the google sheet to be integers if possible\n   5. `float_values()`: converts all data in the google sheet to be floating point numbers if possible\n   6. `col_names()`: a list of all the column names\n   7. `values()`: the data of the google sheet (without the column header)\n   8. `print_formatted()`: prints out all the data in a row-major and aligned order\n   9. `map(f)`: applies the function `f` to all of the data section of the sheet\n   10. `filter(major_order, f, numerical)`: filter the google sheet by the predicate function `f`. Eliminating any row or column that contains **at least 1 value** that doesn't obey the predicate. Here are some more detailed specifications for each of the parameters:\n       1.  `major_order`: can take on values 0 or 1, 0 for row-major, and 1 for column-major\n       2.  `f`: the predicate function, should always return a boolean; by default `f` is set to always return `True` if not specified\n       3.  `numerical`: indicates whether the data needs to be pre-formatted. 0 for leaving it as it is; 1 for converting all data to integers; 2 for converting all data to floating point numbers\n   11. `reduce(major_order, f, numerical)`: reduce the google sheet by accumulating and combining cells using the function `f`. Here are the specifications for each of the parameters:\n       1.  `major_order`: can take on values 0 or 1, 0 for row-major, and 1 for column-major\n       2.  `f`: the combiner function, should take in 2 arguments (representing the values in 2 adjacent cells, either row-major or column-major)\n       3.  `numerical`: indicates whether the data needs to be pre-formatted. 0 for leaving it as it is; 1 for converting all data to integers; 2 for converting all data to floating point numbers\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/paulshaoyuqiao/google-sheets-serializer", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gserializer", "package_url": "https://pypi.org/project/gserializer/", "platform": "", "project_url": "https://pypi.org/project/gserializer/", "project_urls": {"Homepage": "https://github.com/paulshaoyuqiao/google-sheets-serializer"}, "release_url": "https://pypi.org/project/gserializer/1.0.6/", "requires_dist": ["google-api-python-client", "google-auth-httplib2"], "requires_python": "", "summary": "Retrieve and serialize a google sheet into tabular data object for easier list and array manipulations", "version": "1.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h3>Google Sheets Serializer</h3>\n<h6>Author: Paul Shao</h6>\n<p>a Python library that converts online google sheets into serializable tabular data that can be directly manipulated as Python lists</p>\n<p><strong>Version</strong>: beta 1.0.6</p>\n<h4>Get Started:</h4>\n<p>If you are using this library the first time, please follow the steps below to ensure you have the required libraries and dependencies installed:</p>\n<ol>\n<li>Go to <a href=\"https://developers.google.com/sheets/api/quickstart/python\" rel=\"nofollow\">Google Developers Link for Sheets API</a> and <strong>enable the Google Sheets API</strong> through your developer console (It doesn't matter which language for the API you are enabling it from).</li>\n<li>Download the generated <code>credentials.json</code> file</li>\n<li>Use the command <code>pip show google-sheets-serializer</code> to determine the location of the installed library</li>\n<li>Go inside the main directory for serializer package, and put the <code>credentials.json</code> file there.</li>\n</ol>\n<h4>Basic Usages:</h4>\n<p>The serializer mainly makes use of 2 objects, <code>Reader</code> and <code>Filter</code>. A <code>Reader</code> is an object that performs the basic operation of reading in a google sheet given its <strong>spreadsheet ID</strong> and the <strong>name of the sheet</strong>.</p>\n<ul>\n<li>To find these two values for a given google sheet, follow the general guidelines below:</li>\n<li>For example, if I am currently using a spreadsheet, I should be able to get its ID by looking at the <strong>current link</strong> in my browser:</li>\n<li>The link should take the form of</li>\n</ul>\n<pre><code>https://docs.google.com/spreadsheets/d/&lt;spreadsheetId&gt;/edit#...\n</code></pre>\n<p>Where the placeholder <code>&lt;spreadsheetId&gt;</code> is the spreadsheet ID. The name of the sheet refers to the name of the current tab of the sheet that you are working on. That can be found usually at the bottom left of the google sheets application.</p>\n<h4>General Methods:</h4>\n<p>Here are some of the methods currently supported by this library:</p>\n<p>To use the package upon installation, import via:\n<code>import gserializer</code>\nThe main package comes with 2 functions:</p>\n<ol>\n<li><code>create_reader()</code>: creates a <code>Reader</code> object</li>\n<li><code>create_filter(reader)</code>: creates a <code>Filter</code> object that takes in <code>Reader</code> object initialized with data</li>\n</ol>\n<p>Methods supported by the 2 classes of objects are specified as below:</p>\n<ol>\n<li><code>Reader</code>\n<ol>\n<li><code>read_from_sheet(spreadsheetId, sheetName)</code>: takes in a spreadsheet ID and sheet name and returns a Reader object</li>\n</ol>\n</li>\n<li><code>Filter</code>\n<ol>\n<li>Note: <strong>the initialization of a <code>Filter</code> object requires a <code>Reader</code> object as an input</strong>, and you should generally load the <code>Reader</code> object with the sheets data by calling the method <code>read_from_sheet</code> before using <code>Filter</code> on top of it.</li>\n<li><code>num_cols()</code>: number of columns</li>\n<li><code>num_rows()</code>: number of rows</li>\n<li><code>int_values()</code>: converts all data in the google sheet to be integers if possible</li>\n<li><code>float_values()</code>: converts all data in the google sheet to be floating point numbers if possible</li>\n<li><code>col_names()</code>: a list of all the column names</li>\n<li><code>values()</code>: the data of the google sheet (without the column header)</li>\n<li><code>print_formatted()</code>: prints out all the data in a row-major and aligned order</li>\n<li><code>map(f)</code>: applies the function <code>f</code> to all of the data section of the sheet</li>\n<li><code>filter(major_order, f, numerical)</code>: filter the google sheet by the predicate function <code>f</code>. Eliminating any row or column that contains <strong>at least 1 value</strong> that doesn't obey the predicate. Here are some more detailed specifications for each of the parameters:\n<ol>\n<li><code>major_order</code>: can take on values 0 or 1, 0 for row-major, and 1 for column-major</li>\n<li><code>f</code>: the predicate function, should always return a boolean; by default <code>f</code> is set to always return <code>True</code> if not specified</li>\n<li><code>numerical</code>: indicates whether the data needs to be pre-formatted. 0 for leaving it as it is; 1 for converting all data to integers; 2 for converting all data to floating point numbers</li>\n</ol>\n</li>\n<li><code>reduce(major_order, f, numerical)</code>: reduce the google sheet by accumulating and combining cells using the function <code>f</code>. Here are the specifications for each of the parameters:\n<ol>\n<li><code>major_order</code>: can take on values 0 or 1, 0 for row-major, and 1 for column-major</li>\n<li><code>f</code>: the combiner function, should take in 2 arguments (representing the values in 2 adjacent cells, either row-major or column-major)</li>\n<li><code>numerical</code>: indicates whether the data needs to be pre-formatted. 0 for leaving it as it is; 1 for converting all data to integers; 2 for converting all data to floating point numbers</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n\n          </div>"}, "last_serial": 5528686, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "47be2aec0f21a110c4d3e2c6c9df672b", "sha256": "d2ae6a6513383734b6f34450e97b94502aa40b0a6ee16caf2f382c565200407e"}, "downloads": -1, "filename": "gserializer-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "47be2aec0f21a110c4d3e2c6c9df672b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6783, "upload_time": "2019-07-14T01:19:19", "upload_time_iso_8601": "2019-07-14T01:19:19.373909Z", "url": "https://files.pythonhosted.org/packages/39/54/a8c4223b3aa2cb7b91a646240c15abafbb7657e2d4f4aaf89d055004e6bb/gserializer-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d267380a6518e55ef5b4d6f1403f5173", "sha256": "d8f2d1034ebb2e7160c602fcf01edf55d46185be918c44bb3fbf05aa14141a42"}, "downloads": -1, "filename": "gserializer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d267380a6518e55ef5b4d6f1403f5173", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5370, "upload_time": "2019-07-14T01:19:24", "upload_time_iso_8601": "2019-07-14T01:19:24.520400Z", "url": "https://files.pythonhosted.org/packages/34/a0/c55bcc2434319ff4b94f9bb375f43f0dd4d7921ea847171544e85bd68ca0/gserializer-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "bdbfa3f932bdf36c9184e76809373ee7", "sha256": "2fed22065528300f55f043f5d0afb8607027fb92f0f6b0bb9ddd4fd2cb522ac1"}, "downloads": -1, "filename": "gserializer-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bdbfa3f932bdf36c9184e76809373ee7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6676, "upload_time": "2019-07-14T01:19:21", "upload_time_iso_8601": "2019-07-14T01:19:21.550846Z", "url": "https://files.pythonhosted.org/packages/67/14/9c644750423fced1b7b28470824f602a2683f387b69d14415cc10963a21e/gserializer-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c116f042686805608c511c69829e6c4", "sha256": "c4f712e79041a5e7eeb7c8c970532a311b215f45666a715fd8708801952f0e18"}, "downloads": -1, "filename": "gserializer-1.0.2.tar.gz", "has_sig": false, "md5_digest": "6c116f042686805608c511c69829e6c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5339, "upload_time": "2019-07-14T01:19:25", "upload_time_iso_8601": "2019-07-14T01:19:25.904718Z", "url": "https://files.pythonhosted.org/packages/dc/2f/1358ca9e3d0f98e7be56b7537d5e2e2a2c2d7ce98ff9d7919aff64a4c2c7/gserializer-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "c80ab0214b64a32089dc087c23417153", "sha256": "2be8cf91f59a8f836cf8aa296e75405848db3e173b9de7b7e57c61f82c1de33c"}, "downloads": -1, "filename": "gserializer-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c80ab0214b64a32089dc087c23417153", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6730, "upload_time": "2019-07-14T01:19:22", "upload_time_iso_8601": "2019-07-14T01:19:22.939322Z", "url": "https://files.pythonhosted.org/packages/7f/55/033ac122b74ed6bd2a2592292411def7a8212b70768e8290f4d6286d6bb8/gserializer-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e39ab551b6f197293846ced4a35bd83f", "sha256": "f8886b3829901a0a5417def8eda9e2781ba00f6f0279ffa17e708346a25b0da9"}, "downloads": -1, "filename": "gserializer-1.0.3.tar.gz", "has_sig": false, "md5_digest": "e39ab551b6f197293846ced4a35bd83f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5371, "upload_time": "2019-07-14T01:19:27", "upload_time_iso_8601": "2019-07-14T01:19:27.370894Z", "url": "https://files.pythonhosted.org/packages/cb/5f/0a5e7de7c827363c292d243af147e225daf250b8f522b4f5e8d1904fcb5d/gserializer-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "775782ecc059b352aebd32388268349f", "sha256": "dbf43d35c5e6122342be11b5304d1164273c0ddebc8ba5c8c81ad4cbe7426afd"}, "downloads": -1, "filename": "gserializer-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "775782ecc059b352aebd32388268349f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6730, "upload_time": "2019-07-14T01:20:31", "upload_time_iso_8601": "2019-07-14T01:20:31.280695Z", "url": "https://files.pythonhosted.org/packages/5e/96/5ef843746e7f88dc84cbf902c89ef9a7accbd2497d87848318b25a256792/gserializer-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00f183c806f58a212ffc2eb6fa9534c1", "sha256": "29df08148143762e0587b0ff71e920eb2784463f3da9de83fce15c81848e2899"}, "downloads": -1, "filename": "gserializer-1.0.4.tar.gz", "has_sig": false, "md5_digest": "00f183c806f58a212ffc2eb6fa9534c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5366, "upload_time": "2019-07-14T01:20:35", "upload_time_iso_8601": "2019-07-14T01:20:35.590958Z", "url": "https://files.pythonhosted.org/packages/49/2f/142e5319e89479cf4c87c5545549b98adae26a006bb9eb412f258c88e524/gserializer-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "1874152a975254b0b0cd65ed30edd059", "sha256": "45a394494ecf1ad69a7921b5f040cedbfba6a9c010ab7f7ad7625334d65038c0"}, "downloads": -1, "filename": "gserializer-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "1874152a975254b0b0cd65ed30edd059", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6825, "upload_time": "2019-07-14T01:25:24", "upload_time_iso_8601": "2019-07-14T01:25:24.568619Z", "url": "https://files.pythonhosted.org/packages/c1/ae/ac587b533a29e46b099eae9be6aa7427c7ceef455f0ed654e0317e675ae9/gserializer-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83b2170c272dcb3243cb86190c2197e2", "sha256": "5016e28128cc717450a0bc4649f2951911d066e01795417faceeb436059f2a66"}, "downloads": -1, "filename": "gserializer-1.0.5.tar.gz", "has_sig": false, "md5_digest": "83b2170c272dcb3243cb86190c2197e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5501, "upload_time": "2019-07-14T01:25:28", "upload_time_iso_8601": "2019-07-14T01:25:28.759736Z", "url": "https://files.pythonhosted.org/packages/85/b6/6e3d98e01cebc17de73844dc47481105bbbfc2834ee1c8297894326a99bb/gserializer-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "5f4eb08f0b0c7dd855f1443c29094025", "sha256": "ddc6768ab580c0d412c5fa98d9b052a13c609b6447f8f6738317b2954fff2422"}, "downloads": -1, "filename": "gserializer-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "5f4eb08f0b0c7dd855f1443c29094025", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6814, "upload_time": "2019-07-14T01:27:34", "upload_time_iso_8601": "2019-07-14T01:27:34.825005Z", "url": "https://files.pythonhosted.org/packages/f1/48/90f0ec6c124284656bf984aea56f1cd6a8b3932bb92cb77c49cb987d1103/gserializer-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "540e8e1a4d33010bef10aec455911e83", "sha256": "3953e19b744b5cba420da1af8f221d923d9bd4a3eea19a0a0edc6c50c7106992"}, "downloads": -1, "filename": "gserializer-1.0.6.tar.gz", "has_sig": false, "md5_digest": "540e8e1a4d33010bef10aec455911e83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5486, "upload_time": "2019-07-14T01:27:40", "upload_time_iso_8601": "2019-07-14T01:27:40.394780Z", "url": "https://files.pythonhosted.org/packages/aa/1b/cf66ecdc46a14f8d8080281fadde771ebd1ff9597dda2293672e5a92c0ad/gserializer-1.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f4eb08f0b0c7dd855f1443c29094025", "sha256": "ddc6768ab580c0d412c5fa98d9b052a13c609b6447f8f6738317b2954fff2422"}, "downloads": -1, "filename": "gserializer-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "5f4eb08f0b0c7dd855f1443c29094025", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6814, "upload_time": "2019-07-14T01:27:34", "upload_time_iso_8601": "2019-07-14T01:27:34.825005Z", "url": "https://files.pythonhosted.org/packages/f1/48/90f0ec6c124284656bf984aea56f1cd6a8b3932bb92cb77c49cb987d1103/gserializer-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "540e8e1a4d33010bef10aec455911e83", "sha256": "3953e19b744b5cba420da1af8f221d923d9bd4a3eea19a0a0edc6c50c7106992"}, "downloads": -1, "filename": "gserializer-1.0.6.tar.gz", "has_sig": false, "md5_digest": "540e8e1a4d33010bef10aec455911e83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5486, "upload_time": "2019-07-14T01:27:40", "upload_time_iso_8601": "2019-07-14T01:27:40.394780Z", "url": "https://files.pythonhosted.org/packages/aa/1b/cf66ecdc46a14f8d8080281fadde771ebd1ff9597dda2293672e5a92c0ad/gserializer-1.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:41 2020"}