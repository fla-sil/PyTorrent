{"info": {"author": "0b11001111", "author_email": "", "bugtrack_url": null, "classifiers": ["Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "\n.. _auto-grade:\n\n=========\nAUTOGRADE\n=========\n\n*autograde* is a tool that lets you run tests on *Jupyter notebooks* in an isolated environment and creates both, human and machine readable reports.\n\n\nsetup\n-----\n\nBefore installing *autograde*, ensure `docker <https://www.docker.com/>`_ or `podman <https://podman.io/>`_ is installed on your system.\n\nNow, in order to install *autograde*, run :code:`pip install jupyter-autograde`. Alternatively, you can install *autograde* from source by cloning this repository and runing :code:`pip install -e .` within it (if your're developing *autograde*, run :code:`pip install -e .[develop]` instead).\n\nEventually build the respective container image: :code:`python -m autograde build`\n\n.. NOTE::\n    When installing *autograde* via *PyPI*, *docker* support is not yet implemented. If you want to use docker, clone the directory and install the package from source.\n\n\nusage\n-----\n\napply tests\n```````````\n\n*autograde* comes with some example files located in the :code:`demo/` subdirectory that we will use for now to illustrate the workflow. Run:\n\n::\n\n    python -m autograde test demo/test.py demo/notebook.ipynb --target /tmp --context demo/context\n\nWhat happened? Let's first have a look at the arguments of *autograde*:\n\n* :code:`demo/test.py` contains the a script with test cases we want apply\n* :code:`demo/notebook.ipynb` is the a notebook to be tested (here you may also specify a directory to be recursively searched for notebooks)\n* The optional flag :code:`--target` tells *autograde* where to store results, :code:`/tmp` in our case and the current working directory by default.\n* The optional flag :code:`--context` specifies a directory that is mounted into the sandbox and may arbitrary files or subdirectories. This is useful when the notebook expects some external files to be present.\n\nThe output is a compressed archive that is named something like :code:`results_[Lastname1,Lastname2,...]_XXXXXXXX.tar.xz` and which has the following contents:\n\n* :code:`artifacts.tar.xz`: all files that where created by or visible to the tested notebook\n* :code:`code.py`: code extracted from the notebook including :code:`stdout`/:code:`stderr` as comments\n* :code:`notebook.ipynb`: an identical copy of the tested notebook\n* :code:`test_results.csv`: test results\n* :code:`test_restults.json`: test results, enriched with participant credentials and a summary\n* :code:`report.rst`: human readable report\n\nsummarize results\n`````````````````\n\nIn a typical scenario, test cases are not just applied to one notebook but many at a time. Therefore, *autograde* comes with a summary feature, that aggregates results, shows you a score distribution and has some very basic fraud detection. To create a summary, simply run:\n\n::\n\n    python -m autograde summary path/to/results\n\nThree new files will appear in the result directory:\n\n* :code:`summary.csv`: aggregated results\n* :code:`score_distribution.pdf`: a score distribution (without duplicates)\n* :code:`similarities.pdf`: similarity heatmap of all notebooks\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cssh-rwth/autograde", "keywords": "jupyter,teaching,unit test", "license": "MIT", "maintainer": "Chair for Computational Social Sciences and Humanities at RWTH Aachen University", "maintainer_email": "admin@cssh.rwth-aachen.de", "name": "jupyter-autograde", "package_url": "https://pypi.org/project/jupyter-autograde/", "platform": "", "project_url": "https://pypi.org/project/jupyter-autograde/", "project_urls": {"Homepage": "https://github.com/cssh-rwth/autograde"}, "release_url": "https://pypi.org/project/jupyter-autograde/0.1.4/", "requires_dist": ["ipykernel", "jupyter", "matplotlib", "seaborn", "numpy", "pandas", "tabulate", "nose ; extra == 'develop'", "setuptools ; extra == 'develop'", "wheel ; extra == 'develop'", "twine ; extra == 'develop'"], "requires_python": ">=3.7", "summary": "automatic grading of jupyter notebooks", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><em>autograde</em> is a tool that lets you run tests on <em>Jupyter notebooks</em> in an isolated environment and creates both, human and machine readable reports.</p>\n<div id=\"setup\">\n<h2>setup</h2>\n<p>Before installing <em>autograde</em>, ensure <a href=\"https://www.docker.com/\" rel=\"nofollow\">docker</a> or <a href=\"https://podman.io/\" rel=\"nofollow\">podman</a> is installed on your system.</p>\n<p>Now, in order to install <em>autograde</em>, run <code>pip install jupyter-autograde</code>. Alternatively, you can install <em>autograde</em> from source by cloning this repository and runing <code>pip install -e .</code> within it (if your\u2019re developing <em>autograde</em>, run <code>pip install -e .[develop]</code> instead).</p>\n<p>Eventually build the respective container image: <code>python -m autograde build</code></p>\n<div>\n<p>Note</p>\n<p>When installing <em>autograde</em> via <em>PyPI</em>, <em>docker</em> support is not yet implemented. If you want to use docker, clone the directory and install the package from source.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>usage</h2>\n<div id=\"apply-tests\">\n<h3>apply tests</h3>\n<p><em>autograde</em> comes with some example files located in the <code>demo/</code> subdirectory that we will use for now to illustrate the workflow. Run:</p>\n<pre>python -m autograde test demo/test.py demo/notebook.ipynb --target /tmp --context demo/context\n</pre>\n<p>What happened? Let\u2019s first have a look at the arguments of <em>autograde</em>:</p>\n<ul>\n<li><code>demo/test.py</code> contains the a script with test cases we want apply</li>\n<li><code>demo/notebook.ipynb</code> is the a notebook to be tested (here you may also specify a directory to be recursively searched for notebooks)</li>\n<li>The optional flag <code>--target</code> tells <em>autograde</em> where to store results, <code>/tmp</code> in our case and the current working directory by default.</li>\n<li>The optional flag <code>--context</code> specifies a directory that is mounted into the sandbox and may arbitrary files or subdirectories. This is useful when the notebook expects some external files to be present.</li>\n</ul>\n<p>The output is a compressed archive that is named something like <code>results_[Lastname1,Lastname2,...]_XXXXXXXX.tar.xz</code> and which has the following contents:</p>\n<ul>\n<li><code>artifacts.tar.xz</code>: all files that where created by or visible to the tested notebook</li>\n<li><code>code.py</code>: code extracted from the notebook including <code>stdout</code>/<code>stderr</code> as comments</li>\n<li><code>notebook.ipynb</code>: an identical copy of the tested notebook</li>\n<li><code>test_results.csv</code>: test results</li>\n<li><code>test_restults.json</code>: test results, enriched with participant credentials and a summary</li>\n<li><code>report.rst</code>: human readable report</li>\n</ul>\n</div>\n<div id=\"summarize-results\">\n<h3>summarize results</h3>\n<p>In a typical scenario, test cases are not just applied to one notebook but many at a time. Therefore, <em>autograde</em> comes with a summary feature, that aggregates results, shows you a score distribution and has some very basic fraud detection. To create a summary, simply run:</p>\n<pre>python -m autograde summary path/to/results\n</pre>\n<p>Three new files will appear in the result directory:</p>\n<ul>\n<li><code>summary.csv</code>: aggregated results</li>\n<li><code>score_distribution.pdf</code>: a score distribution (without duplicates)</li>\n<li><code>similarities.pdf</code>: similarity heatmap of all notebooks</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6734305, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "8fb715d1ccd22e728cda5b6b1e0d37e1", "sha256": "25025191999292c492ee72bc92265a5f5f8204465fef5f7e9f09b2d9e423a808"}, "downloads": -1, "filename": "jupyter_autograde-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8fb715d1ccd22e728cda5b6b1e0d37e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12920, "upload_time": "2020-03-02T11:43:01", "upload_time_iso_8601": "2020-03-02T11:43:01.745398Z", "url": "https://files.pythonhosted.org/packages/fe/02/0c9a7b8e1cc4749235276c5d45c5b8d0a9081655404ce225f96f0bfa21df/jupyter_autograde-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0cff41d44f4d90ce0d5f85037f7917f", "sha256": "69eb40aff3785211c132072c3821ec237bd9c1943f151cd13cb880a11a9af3ef"}, "downloads": -1, "filename": "jupyter-autograde-0.0.0.tar.gz", "has_sig": false, "md5_digest": "f0cff41d44f4d90ce0d5f85037f7917f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13410, "upload_time": "2020-03-02T11:43:04", "upload_time_iso_8601": "2020-03-02T11:43:04.782650Z", "url": "https://files.pythonhosted.org/packages/bd/de/2473de3f122e54c9cb1f968ca1cb41dc5e507c3ec6465990ab06273562e6/jupyter-autograde-0.0.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "891331a08547e3f41ad787a69edb6ab8", "sha256": "60b8e6043343894b45cd963563b0b911dc91dd9a56fabfb87740290f07a8f90b"}, "downloads": -1, "filename": "jupyter_autograde-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "891331a08547e3f41ad787a69edb6ab8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12942, "upload_time": "2020-03-02T14:25:33", "upload_time_iso_8601": "2020-03-02T14:25:33.552205Z", "url": "https://files.pythonhosted.org/packages/b1/62/a25c1adce199a2df14c783c345ed1d3e7b5b31eeb9f55866b0dae93ed545/jupyter_autograde-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfaa9a7ecb6d00f20b2b5c43bdb589b2", "sha256": "cabc32a5316481d986e9f60aae6203878f264d800cd679a451b8ed0e3a2f7cff"}, "downloads": -1, "filename": "jupyter-autograde-0.1.1.tar.gz", "has_sig": false, "md5_digest": "bfaa9a7ecb6d00f20b2b5c43bdb589b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16398, "upload_time": "2020-03-02T14:25:35", "upload_time_iso_8601": "2020-03-02T14:25:35.154636Z", "url": "https://files.pythonhosted.org/packages/d3/d7/e73218739ab31996d1f027c3839d46e6a1a5268287216aefc7c4c5560004/jupyter-autograde-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "612576acfa67e8b7e269629e9249b4c1", "sha256": "f31546c5bf1c0779575d8948d47c2e732e0e2c3ebfefa1b1af8e2679a437aede"}, "downloads": -1, "filename": "jupyter_autograde-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "612576acfa67e8b7e269629e9249b4c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13276, "upload_time": "2020-03-02T14:29:49", "upload_time_iso_8601": "2020-03-02T14:29:49.986934Z", "url": "https://files.pythonhosted.org/packages/98/d9/fa71b006686ab97d06145337c402e64e0d4e7f1fe96b2628465d0b91a246/jupyter_autograde-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1319974c78bc51086b5df3ee5bc6298", "sha256": "58577cda597c3a49c5d159e3444d838d0bab19399c6b938ba51facb26b60bcb6"}, "downloads": -1, "filename": "jupyter-autograde-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e1319974c78bc51086b5df3ee5bc6298", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16505, "upload_time": "2020-03-02T14:29:51", "upload_time_iso_8601": "2020-03-02T14:29:51.878739Z", "url": "https://files.pythonhosted.org/packages/83/c9/94ced4a30c0bcca56b5417216b7898ed01389d20ba04a21f0679873f1015/jupyter-autograde-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "4e140cc30307380a8d131f98c79a307d", "sha256": "abaafeaec9b01ec430ab9c7310e944ede8680c312641ec80f73e598d1288cb87"}, "downloads": -1, "filename": "jupyter_autograde-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4e140cc30307380a8d131f98c79a307d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13362, "upload_time": "2020-03-02T15:39:56", "upload_time_iso_8601": "2020-03-02T15:39:56.230284Z", "url": "https://files.pythonhosted.org/packages/59/64/c1dcaebe67c15c93e3f307720872651ca8449cdde93c844624748050f12e/jupyter_autograde-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a13c07d569091e52fd9e45fe67e8551", "sha256": "ffd8c1b95d2e858171d84466029be58d5768b5adc234260456262eee50c140d0"}, "downloads": -1, "filename": "jupyter-autograde-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1a13c07d569091e52fd9e45fe67e8551", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16691, "upload_time": "2020-03-02T15:39:58", "upload_time_iso_8601": "2020-03-02T15:39:58.331799Z", "url": "https://files.pythonhosted.org/packages/2f/e6/7cdf2ef8483de71c5569a688378a7f812925950b4ccb6a80c4ca51fa0b8f/jupyter-autograde-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "4450699ac1a1b55f73eeac9b39a775a2", "sha256": "388f6029cc9c85f6db624b944d3947704052727c57595f413cdafd05f0f2070e"}, "downloads": -1, "filename": "jupyter_autograde-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4450699ac1a1b55f73eeac9b39a775a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 13374, "upload_time": "2020-03-02T15:46:23", "upload_time_iso_8601": "2020-03-02T15:46:23.527556Z", "url": "https://files.pythonhosted.org/packages/da/94/7a9674805d47233f076a6b7612039ecc90d38a45ace47adc34634e1558c8/jupyter_autograde-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16f23ba662d0be66cb07553e614de5aa", "sha256": "93e21cea663c92de76f655908d8efbf64e90745c1d1630275f9445d9247fbf72"}, "downloads": -1, "filename": "jupyter-autograde-0.1.4.tar.gz", "has_sig": false, "md5_digest": "16f23ba662d0be66cb07553e614de5aa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 16723, "upload_time": "2020-03-02T15:46:25", "upload_time_iso_8601": "2020-03-02T15:46:25.634960Z", "url": "https://files.pythonhosted.org/packages/fa/02/4a9e2359d5b4d28e5337db2c9ad828e9b81ab87230e90e40dad2111680f1/jupyter-autograde-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4450699ac1a1b55f73eeac9b39a775a2", "sha256": "388f6029cc9c85f6db624b944d3947704052727c57595f413cdafd05f0f2070e"}, "downloads": -1, "filename": "jupyter_autograde-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4450699ac1a1b55f73eeac9b39a775a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 13374, "upload_time": "2020-03-02T15:46:23", "upload_time_iso_8601": "2020-03-02T15:46:23.527556Z", "url": "https://files.pythonhosted.org/packages/da/94/7a9674805d47233f076a6b7612039ecc90d38a45ace47adc34634e1558c8/jupyter_autograde-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16f23ba662d0be66cb07553e614de5aa", "sha256": "93e21cea663c92de76f655908d8efbf64e90745c1d1630275f9445d9247fbf72"}, "downloads": -1, "filename": "jupyter-autograde-0.1.4.tar.gz", "has_sig": false, "md5_digest": "16f23ba662d0be66cb07553e614de5aa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 16723, "upload_time": "2020-03-02T15:46:25", "upload_time_iso_8601": "2020-03-02T15:46:25.634960Z", "url": "https://files.pythonhosted.org/packages/fa/02/4a9e2359d5b4d28e5337db2c9ad828e9b81ab87230e90e40dad2111680f1/jupyter-autograde-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:20 2020"}