{"info": {"author": "Body Labs", "author_email": "github@paulmelnikow.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "baiji\n=====\n\n|pip install| |version| |python versions| |build status| |last commit|\n|open pull requests|\n\nThis is an active fork of `baiji <https://github.com/bodylabs/baiji>`__,\na high-level Python abstraction layer for Amazon S3:\n\n1. An\n   ```open`` <https://docs.python.org/2/library/functions.html#open>`__-like\n   context handler which allows using S3 keys and local files\n   interchangeably.\n\n   -  When reading S3, contents are first written to a temporary local\n      file.\n   -  When writing S3, contents are written to a temporary local file,\n      and uploaded on close.\n\n2. An ``s3`` CLI for listing, copying, syncing, and other common\n   activities.\n\nThe fork\u2019s goals are modest:\n\n-  Keep the library working in current versions of Python and other\n   tools.\n-  Make bug fixes.\n-  Provide API stability and backward compatibility with the upstream\n   version.\n-  Respond to community contributions.\n\nIt\u2019s used by related forks such as\n`lace <https://github.com/metabolize/lace>`__.\n\nFeatures\n--------\n\n-  Works without an S3 connection (with local files).\n-  Supports multiprocess parallelism for copying lots of files.\n-  Supports Python 2.7 and uses boto2.\n-  Supports OS X, Linux, and Windows.\n-  Tested and production-hardened.\n\nExamples\n--------\n\n.. code:: py\n\n   with s3.open('s3://example/info.txt', 'w') as f:\n       f.write('hello')\n\n   with s3.open('file:///home/me/info.txt', 'w') as f:\n       f.write('hello')\n\n   with s3.open('s3://example/info.txt', 'r') as f:\n       contents = f.readlines()\n\n   with s3.open('file:///home/me/info.txt', 'r') as f:\n       contents = f.readlines()\n\n.. code:: sh\n\n   s3 cp foo.txt s3://example/bar.txt\n   s3 cp s3://example/bar.txt s3://another-example/bazinga.txt\n   s3 rm s3://example/bar.txt\n\nDevelopment\n-----------\n\n.. code:: sh\n\n   pip install -r requirements_dev.txt\n   rake test\n   rake lint\n\nTODO\n----\n\n1. Migrate credentials to ``~/.aws/credentials`` or env, and deprecate\n   AWS credential support in ``~/.bodylabs``.\n2. Move ``baiji.util.parallel`` into a separate library.\n3. Upgrade to boto3.\n\nContribute\n----------\n\n-  Issue Tracker: github.com/bodylabs/baiji/issues\n-  Source Code: github.com/bodylabs/baiji\n\nPull requests welcome!\n\nSupport\n-------\n\nIf you are having issues, please let us know.\n\nLicense\n-------\n\nThe project is licensed under the Apache license, version 2.0.\n\n.. |pip install| image:: https://img.shields.io/badge/pip%20install-metabaiji-f441b8?style=flat-square\n   :target: https://pypi.org/project/metabaiji/\n.. |version| image:: https://img.shields.io/pypi/v/metabaiji?style=flat-square\n   :target: https://pypi.org/project/metabaiji/\n.. |python versions| image:: https://img.shields.io/pypi/pyversions/metabaiji?style=flat-square\n   :target: https://pypi.org/project/metabaiji/\n.. |build status| image:: https://img.shields.io/circleci/project/github/metabolize/baiji/master.svg?style=flat-square\n   :target: https://circleci.com/gh/metabolize/baiji\n.. |last commit| image:: https://img.shields.io/github/last-commit/metabolize/baiji?style=flat-square\n   :target: https://github.com/metabolize/baiji/commits/master\n.. |open pull requests| image:: https://img.shields.io/github/issues-pr/metabolize/baiji?style=flat-square\n   :target: https://github.com/metabolize/baiji/pulls", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/metabolize/baiji", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "metabaiji", "package_url": "https://pypi.org/project/metabaiji/", "platform": "", "project_url": "https://pypi.org/project/metabaiji/", "project_urls": {"Homepage": "https://github.com/metabolize/baiji"}, "release_url": "https://pypi.org/project/metabaiji/2.12.0/", "requires_dist": null, "requires_python": "", "summary": "High-level Python abstraction layer for Amazon S3", "version": "2.12.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/metabaiji/\" rel=\"nofollow\"><img alt=\"pip install\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5a2966014f16cfefbd1d71d67b745602609d7a47/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706970253230696e7374616c6c2d6d6574616261696a692d6634343162383f7374796c653d666c61742d737175617265\"></a> <a href=\"https://pypi.org/project/metabaiji/\" rel=\"nofollow\"><img alt=\"version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/273da1125801ecfbbc281086c678dc2ed03cc62a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d6574616261696a693f7374796c653d666c61742d737175617265\"></a> <a href=\"https://pypi.org/project/metabaiji/\" rel=\"nofollow\"><img alt=\"python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3df7d827ccfc8e9208ffc1c805ff22bad65de6db/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6d6574616261696a693f7374796c653d666c61742d737175617265\"></a> <a href=\"https://circleci.com/gh/metabolize/baiji\" rel=\"nofollow\"><img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/54e0b2eb36534a00c9d7654614717bca6aaca3d8/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f6d657461626f6c697a652f6261696a692f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://github.com/metabolize/baiji/commits/master\" rel=\"nofollow\"><img alt=\"last commit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04eb67c19eb56c77460f135a6937f6e4ebe45e10/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6d657461626f6c697a652f6261696a693f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://github.com/metabolize/baiji/pulls\" rel=\"nofollow\"><img alt=\"open pull requests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a72aa4dd4511ad9d9c346f9c23d9862bffa75c8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f6d657461626f6c697a652f6261696a693f7374796c653d666c61742d737175617265\"></a></p>\n<p>This is an active fork of <a href=\"https://github.com/bodylabs/baiji\" rel=\"nofollow\">baiji</a>,\na high-level Python abstraction layer for Amazon S3:</p>\n<ol>\n<li>An\n<tt>`open</tt> &lt;<a href=\"https://docs.python.org/2/library/functions.html#open\" rel=\"nofollow\">https://docs.python.org/2/library/functions.html#open</a>&gt;`__-like\ncontext handler which allows using S3 keys and local files\ninterchangeably.<ul>\n<li>When reading S3, contents are first written to a temporary local\nfile.</li>\n<li>When writing S3, contents are written to a temporary local file,\nand uploaded on close.</li>\n</ul>\n</li>\n<li>An <tt>s3</tt> CLI for listing, copying, syncing, and other common\nactivities.</li>\n</ol>\n<p>The fork\u2019s goals are modest:</p>\n<ul>\n<li>Keep the library working in current versions of Python and other\ntools.</li>\n<li>Make bug fixes.</li>\n<li>Provide API stability and backward compatibility with the upstream\nversion.</li>\n<li>Respond to community contributions.</li>\n</ul>\n<p>It\u2019s used by related forks such as\n<a href=\"https://github.com/metabolize/lace\" rel=\"nofollow\">lace</a>.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Works without an S3 connection (with local files).</li>\n<li>Supports multiprocess parallelism for copying lots of files.</li>\n<li>Supports Python 2.7 and uses boto2.</li>\n<li>Supports OS X, Linux, and Windows.</li>\n<li>Tested and production-hardened.</li>\n</ul>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre><span class=\"k\">with</span> <span class=\"n\">s3</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'s3://example/info.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'hello'</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">s3</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'file:///home/me/info.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'hello'</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">s3</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'s3://example/info.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">contents</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">()</span>\n\n<span class=\"k\">with</span> <span class=\"n\">s3</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'file:///home/me/info.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">contents</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">()</span>\n</pre>\n<pre>s3 cp foo.txt s3://example/bar.txt\ns3 cp s3://example/bar.txt s3://another-example/bazinga.txt\ns3 rm s3://example/bar.txt\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<pre>pip install -r requirements_dev.txt\nrake <span class=\"nb\">test</span>\nrake lint\n</pre>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ol>\n<li>Migrate credentials to <tt><span class=\"pre\">~/.aws/credentials</span></tt> or env, and deprecate\nAWS credential support in <tt><span class=\"pre\">~/.bodylabs</span></tt>.</li>\n<li>Move <tt>baiji.util.parallel</tt> into a separate library.</li>\n<li>Upgrade to boto3.</li>\n</ol>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<ul>\n<li>Issue Tracker: github.com/bodylabs/baiji/issues</li>\n<li>Source Code: github.com/bodylabs/baiji</li>\n</ul>\n<p>Pull requests welcome!</p>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>If you are having issues, please let us know.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The project is licensed under the Apache license, version 2.0.</p>\n</div>\n\n          </div>"}, "last_serial": 5743229, "releases": {"2.11.0": [{"comment_text": "", "digests": {"md5": "915b674e8bd0b3ad5a720d2e489db6b6", "sha256": "724c17fd16e418c12a19e3396c1e5b86791a9e2647815db2f4f6b8e0cf31cd92"}, "downloads": -1, "filename": "metabaiji-2.11.0.tar.gz", "has_sig": false, "md5_digest": "915b674e8bd0b3ad5a720d2e489db6b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41892, "upload_time": "2019-08-27T17:48:25", "upload_time_iso_8601": "2019-08-27T17:48:25.834029Z", "url": "https://files.pythonhosted.org/packages/dd/6b/539c3b67d76fa03fb24159823908f02b2d758a667be37bd35994007e0631/metabaiji-2.11.0.tar.gz", "yanked": false}], "2.12.0": [{"comment_text": "", "digests": {"md5": "3137e8adbddbfc5bfd4c8d53f5085572", "sha256": "06ad4cc103c18d60a8c0199a2184479bed536fa1ea75b0565bd479f806155d11"}, "downloads": -1, "filename": "metabaiji-2.12.0.tar.gz", "has_sig": false, "md5_digest": "3137e8adbddbfc5bfd4c8d53f5085572", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42596, "upload_time": "2019-08-28T15:09:13", "upload_time_iso_8601": "2019-08-28T15:09:13.380413Z", "url": "https://files.pythonhosted.org/packages/19/91/e49333f6c17753f5a3c0e629f7e707f3a6fefc34b2dae4da3a2c0b02d49b/metabaiji-2.12.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3137e8adbddbfc5bfd4c8d53f5085572", "sha256": "06ad4cc103c18d60a8c0199a2184479bed536fa1ea75b0565bd479f806155d11"}, "downloads": -1, "filename": "metabaiji-2.12.0.tar.gz", "has_sig": false, "md5_digest": "3137e8adbddbfc5bfd4c8d53f5085572", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42596, "upload_time": "2019-08-28T15:09:13", "upload_time_iso_8601": "2019-08-28T15:09:13.380413Z", "url": "https://files.pythonhosted.org/packages/19/91/e49333f6c17753f5a3c0e629f7e707f3a6fefc34b2dae4da3a2c0b02d49b/metabaiji-2.12.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:00 2020"}