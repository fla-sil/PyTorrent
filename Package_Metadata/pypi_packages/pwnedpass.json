{"info": {"author": "io mintz", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Topic :: Utilities"], "description": "# pwnedpasswords tool\n\nThis code enables efficient querying of the [Pwned Passwords](https://haveibeenpwned.com/Passwords) database,\n*without* connecting to an external web service. This is primarily a python port of [pwnedpass](https://github.com/tylerchr/pwnedpass).\nThis version uses the full 32 bit integer for each pwned count, and the searching code is written in python instead\nof Go since I need to use it in a Flask web application.\n\n## Binary file conversion tool\n\n*If you'd rather not go to the hassle of running this, you can download a copy of the .bin file\n[off my site](https://watch.lambda.dance/~lambda/pwned-passwords-v5.bin).*\n\nFirst download the latest Pwned Passwords SHA-1 file from here: <https://haveibeenpwned.com/Passwords>.\nPick the one that's ordered by hash.\n\n```\n$ 7z e -so pwned-passwords-sha1-ordered-by-hash-v5.7z pwned-passwords-sha1-ordered-by-hash-v5.txt | ./rewrite.py - pwned-passwords-v5.bin\nReserving space for the index segment...\nWriting data segment...\nWriting index segment...\nOK\n```\n\nThe SHA-256 hash of the outputted file should be **e49b811e38a3e64d0c79aac3d6a46e0eaa0011f47603b91e131fa6aac61ea43a**.\n\n## Testing the binary file\n\nAssuming you did use v5 of the pwned passwords file, you can test the output file was generated correctly by\nrunning `./test.py <path to the binary file>`.\n\n## Python search tool\n\nIncluded is a python module, `pwnedpass.py` that can be used as a CLI script or a library. You can install both using\npip:\n\n```\npip install pwnedpass\n```\n\n### CLI\n\n```\n$ pwnedpass pwned-passwords-v5.bin 9e7c97801cb4cce87b6c02f98291a6420e6400ad\n6753\n$ echo $?\n2\n$ pwnedpass pwned-passwords-v5.bin 4e0ff63499ff9931ec2980c6a71d63cab4f94f99\n$ echo $?\n0\n$ pwnedpass pwned-passwords-v5.bin\nPassword: \n6753\n```\n\nWhere `pwned-passwords-v5.bin` is the output of the rewrite tool.\n\n* For compromised password hashes, output the number of times the password was compromised, and return an unsuccessful error code != 1.\n* For non-compromised password hashes, output nothing successfully.\n\n### As a library\n\n```\nimport hashlib\nimport pwnedpass\n\nuser_password = read_password_from_web_form()\n\nwith open('pwned-passwords-v5.bin', 'rb') as f:\n\tif count := pwnedpass.search(f, hashlib.sha1(user_password.encode()).digest()):\n\t\treturn f'Please use a different password. This one has been compromised {count} times.'\n\telse:\n\t\t# DO NOT USE the sha1 digest in your user database. SHA1 should *only* be used for checking if it's compromised.\n\t\thash = salt_and_hash_password(user_password)\n\t\tsave_to_database(hash)\n```\n\n## License\n\nBSD 3-clause, per the original. See LICENSE for details.\n\n\n", "description_content_type": "text/markdown; variant=GFM", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://git.csdisaster.club/io/pwnedpass", "keywords": "", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "pwnedpass", "package_url": "https://pypi.org/project/pwnedpass/", "platform": "", "project_url": "https://pypi.org/project/pwnedpass/", "project_urls": {"Homepage": "https://git.csdisaster.club/io/pwnedpass"}, "release_url": "https://pypi.org/project/pwnedpass/0.0.2/", "requires_dist": null, "requires_python": ">=3.6.0", "summary": "Queries a local instance of Troy Hunt's Pwned Passwords database. (Port of https://github.com/tylerchr/pwnedpass)", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pwnedpasswords tool</h1>\n<p>This code enables efficient querying of the <a href=\"https://haveibeenpwned.com/Passwords\" rel=\"nofollow\">Pwned Passwords</a> database,\n<em>without</em> connecting to an external web service. This is primarily a python port of <a href=\"https://github.com/tylerchr/pwnedpass\" rel=\"nofollow\">pwnedpass</a>.\nThis version uses the full 32 bit integer for each pwned count, and the searching code is written in python instead\nof Go since I need to use it in a Flask web application.</p>\n<h2>Binary file conversion tool</h2>\n<p><em>If you'd rather not go to the hassle of running this, you can download a copy of the .bin file\n<a href=\"https://watch.lambda.dance/%7Elambda/pwned-passwords-v5.bin\" rel=\"nofollow\">off my site</a>.</em></p>\n<p>First download the latest Pwned Passwords SHA-1 file from here: <a href=\"https://haveibeenpwned.com/Passwords\" rel=\"nofollow\">https://haveibeenpwned.com/Passwords</a>.\nPick the one that's ordered by hash.</p>\n<pre><code>$ 7z e -so pwned-passwords-sha1-ordered-by-hash-v5.7z pwned-passwords-sha1-ordered-by-hash-v5.txt | ./rewrite.py - pwned-passwords-v5.bin\nReserving space for the index segment...\nWriting data segment...\nWriting index segment...\nOK\n</code></pre>\n<p>The SHA-256 hash of the outputted file should be <strong>e49b811e38a3e64d0c79aac3d6a46e0eaa0011f47603b91e131fa6aac61ea43a</strong>.</p>\n<h2>Testing the binary file</h2>\n<p>Assuming you did use v5 of the pwned passwords file, you can test the output file was generated correctly by\nrunning <code>./test.py &lt;path to the binary file&gt;</code>.</p>\n<h2>Python search tool</h2>\n<p>Included is a python module, <code>pwnedpass.py</code> that can be used as a CLI script or a library. You can install both using\npip:</p>\n<pre><code>pip install pwnedpass\n</code></pre>\n<h3>CLI</h3>\n<pre><code>$ pwnedpass pwned-passwords-v5.bin 9e7c97801cb4cce87b6c02f98291a6420e6400ad\n6753\n$ echo $?\n2\n$ pwnedpass pwned-passwords-v5.bin 4e0ff63499ff9931ec2980c6a71d63cab4f94f99\n$ echo $?\n0\n$ pwnedpass pwned-passwords-v5.bin\nPassword: \n6753\n</code></pre>\n<p>Where <code>pwned-passwords-v5.bin</code> is the output of the rewrite tool.</p>\n<ul>\n<li>For compromised password hashes, output the number of times the password was compromised, and return an unsuccessful error code != 1.</li>\n<li>For non-compromised password hashes, output nothing successfully.</li>\n</ul>\n<h3>As a library</h3>\n<pre><code>import hashlib\nimport pwnedpass\n\nuser_password = read_password_from_web_form()\n\nwith open('pwned-passwords-v5.bin', 'rb') as f:\n\tif count := pwnedpass.search(f, hashlib.sha1(user_password.encode()).digest()):\n\t\treturn f'Please use a different password. This one has been compromised {count} times.'\n\telse:\n\t\t# DO NOT USE the sha1 digest in your user database. SHA1 should *only* be used for checking if it's compromised.\n\t\thash = salt_and_hash_password(user_password)\n\t\tsave_to_database(hash)\n</code></pre>\n<h2>License</h2>\n<p>BSD 3-clause, per the original. See LICENSE for details.</p>\n\n          </div>"}, "last_serial": 6899746, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "169aeb48ed4be75c7e024fca681af8db", "sha256": "692b4f9ec2c9ed64b35e445a794569381b1954237f23fd9ad85dfd8e4b13721a"}, "downloads": -1, "filename": "pwnedpass-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "169aeb48ed4be75c7e024fca681af8db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 4959, "upload_time": "2020-03-08T21:12:16", "upload_time_iso_8601": "2020-03-08T21:12:16.181110Z", "url": "https://files.pythonhosted.org/packages/6a/fe/223f4a14ccd0d28981203b2071df7c8d06e674a33c98b48f57bdac3c11fe/pwnedpass-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85fc884625f14f6ec35155ee1a9b4d70", "sha256": "22602156af8107efa6e916ed681fbe5d4f8a517e30f661c2a6afd3239e51ae93"}, "downloads": -1, "filename": "pwnedpass-0.0.1.tar.gz", "has_sig": false, "md5_digest": "85fc884625f14f6ec35155ee1a9b4d70", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 3956, "upload_time": "2020-03-08T21:12:18", "upload_time_iso_8601": "2020-03-08T21:12:18.254809Z", "url": "https://files.pythonhosted.org/packages/85/84/3dceb27feedc6aba79a602af97714745de761014496d9d2988b6813ab42e/pwnedpass-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0fb2a246e05ee7f8f47807b46e5c9331", "sha256": "74989f636bf6824f34aba12df15903cf20c799f7c204258ce76e852c706ece3f"}, "downloads": -1, "filename": "pwnedpass-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0fb2a246e05ee7f8f47807b46e5c9331", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 4944, "upload_time": "2020-03-28T00:15:45", "upload_time_iso_8601": "2020-03-28T00:15:45.084443Z", "url": "https://files.pythonhosted.org/packages/87/14/98c11b27da279db648a92b0ddb8428c0841fbd1194a9475b56805d31b4ed/pwnedpass-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54820b87f93f23fb12dac0222a66064c", "sha256": "4b54531b7f5179fc7c785045592afa289b9b9b19bc28993e9c8a6c892bceee21"}, "downloads": -1, "filename": "pwnedpass-0.0.2.tar.gz", "has_sig": false, "md5_digest": "54820b87f93f23fb12dac0222a66064c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 3870, "upload_time": "2020-03-28T00:15:46", "upload_time_iso_8601": "2020-03-28T00:15:46.476708Z", "url": "https://files.pythonhosted.org/packages/c6/4b/8138daae6db934a2e28dd773e2d79d3b40d441cc81cdfd83aea494efcdd7/pwnedpass-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0fb2a246e05ee7f8f47807b46e5c9331", "sha256": "74989f636bf6824f34aba12df15903cf20c799f7c204258ce76e852c706ece3f"}, "downloads": -1, "filename": "pwnedpass-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0fb2a246e05ee7f8f47807b46e5c9331", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 4944, "upload_time": "2020-03-28T00:15:45", "upload_time_iso_8601": "2020-03-28T00:15:45.084443Z", "url": "https://files.pythonhosted.org/packages/87/14/98c11b27da279db648a92b0ddb8428c0841fbd1194a9475b56805d31b4ed/pwnedpass-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54820b87f93f23fb12dac0222a66064c", "sha256": "4b54531b7f5179fc7c785045592afa289b9b9b19bc28993e9c8a6c892bceee21"}, "downloads": -1, "filename": "pwnedpass-0.0.2.tar.gz", "has_sig": false, "md5_digest": "54820b87f93f23fb12dac0222a66064c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 3870, "upload_time": "2020-03-28T00:15:46", "upload_time_iso_8601": "2020-03-28T00:15:46.476708Z", "url": "https://files.pythonhosted.org/packages/c6/4b/8138daae6db934a2e28dd773e2d79d3b40d441cc81cdfd83aea494efcdd7/pwnedpass-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:44 2020"}