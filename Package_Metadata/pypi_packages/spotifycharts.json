{"info": {"author": "Arthur Meltonyan", "author_email": "arthur.meltonyan@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "spotifycharts\n*************\n\n``spotifycharts`` module provides data scientists and music enthusiasts with the simple yet effective out-of-box solution to the problem of obtaining `spotifycharts.com <https://github.com/niltonvolpato/python-progressbar>`__ data.\n\n\nInstallation\n############\n\nThe recommended way to install ``spotifycharts`` module is to simply use pip:\n\n.. code:: sh\n\n    pip3 install spotifycharts\n\nIt installs all the dependencies as well:\n\n- pendulum\n- pandas\n- requests\n- lxml\n- tqdm\n\n``spotifycharts`` officially supports only Python 3.\n\n\nUsage\n#####\n\n``download`` method downloads ``name`` charts of ``region_names`` from ``begin_date`` to ``end_date`` on a ``periodicity`` basis using ``cpu_count`` of cores and save them into the ``file_path``:\n\n.. code:: python\n\n    from spotifycharts import downloader\n    sc_downloader = downloader.Downloader(name='viral',\n                                          periodicity='weekly',\n                                          region_names=['united states'],\n                                          begin_date='30-12-2019',\n                                          end_date='05-01-2020',\n                                          cpu_count=2,\n                                          file_path='data.csv')\n    sc_downloader.download()\n\n``get_all_regions`` method lists all available regions of ``name`` charts on a ``periodicity`` basis:\n\n.. code:: python\n\n    downloader.Downloader.get_all_regions(name='viral',\n                                          periodicity='weekly')\n\n``get_all_dates`` method lists all available dates of ``name`` charts in ``region_name`` on a ``periodicity`` basis:\n\n.. code:: python\n\n    downloader.Downloader.get_all_dates(name='regional',\n                                        periodicity='daily',\n                                        region_name='france')\n\n``Downloader`` constructor also grants the access to ``name``, ``periodicity``, ``region_names``, ``begin_date``, ``end_date``, ``file_path`` and ``data`` attributes:\n\n.. code:: python\n\n      name = sc_downloader.name\n      periodicity = sc_downloader.periodicity\n      region_names = sc_downloader.region_names\n      begin_date = sc_downloader.begin_date\n      end_date = sc_downloader.end_date\n      file_path = sc_downloader.file_path\n      data = sc_downloader.data\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/arthurmeltonyan/spotifycharts", "keywords": "download,spotify,charts,music", "license": "", "maintainer": "Arthur Meltonyan", "maintainer_email": "arthur.meltonyan@gmail.com", "name": "spotifycharts", "package_url": "https://pypi.org/project/spotifycharts/", "platform": "", "project_url": "https://pypi.org/project/spotifycharts/", "project_urls": {"Homepage": "https://github.com/arthurmeltonyan/spotifycharts", "Repository": "https://github.com/arthurmeltonyan/spotifycharts"}, "release_url": "https://pypi.org/project/spotifycharts/2020.5.1/", "requires_dist": ["pendulum (>=2.1.0,<3.0.0)", "pandas (>=1.0.3,<2.0.0)", "requests (>=2.23.0,<3.0.0)", "lxml (>=4.5.0,<5.0.0)", "tqdm (>=4.46.0,<5.0.0)"], "requires_python": ">=3.7,<4.0", "summary": "The easy-to-use package for downloading Spotify charts with Python.", "version": "2020.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>spotifycharts</tt> module provides data scientists and music enthusiasts with the simple yet effective out-of-box solution to the problem of obtaining <a href=\"https://github.com/niltonvolpato/python-progressbar\" rel=\"nofollow\">spotifycharts.com</a> data.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The recommended way to install <tt>spotifycharts</tt> module is to simply use pip:</p>\n<pre>pip3 install spotifycharts\n</pre>\n<p>It installs all the dependencies as well:</p>\n<ul>\n<li>pendulum</li>\n<li>pandas</li>\n<li>requests</li>\n<li>lxml</li>\n<li>tqdm</li>\n</ul>\n<p><tt>spotifycharts</tt> officially supports only Python 3.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><tt>download</tt> method downloads <tt>name</tt> charts of <tt>region_names</tt> from <tt>begin_date</tt> to <tt>end_date</tt> on a <tt>periodicity</tt> basis using <tt>cpu_count</tt> of cores and save them into the <tt>file_path</tt>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">spotifycharts</span> <span class=\"kn\">import</span> <span class=\"n\">downloader</span>\n<span class=\"n\">sc_downloader</span> <span class=\"o\">=</span> <span class=\"n\">downloader</span><span class=\"o\">.</span><span class=\"n\">Downloader</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'viral'</span><span class=\"p\">,</span>\n                                      <span class=\"n\">periodicity</span><span class=\"o\">=</span><span class=\"s1\">'weekly'</span><span class=\"p\">,</span>\n                                      <span class=\"n\">region_names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'united states'</span><span class=\"p\">],</span>\n                                      <span class=\"n\">begin_date</span><span class=\"o\">=</span><span class=\"s1\">'30-12-2019'</span><span class=\"p\">,</span>\n                                      <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"s1\">'05-01-2020'</span><span class=\"p\">,</span>\n                                      <span class=\"n\">cpu_count</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n                                      <span class=\"n\">file_path</span><span class=\"o\">=</span><span class=\"s1\">'data.csv'</span><span class=\"p\">)</span>\n<span class=\"n\">sc_downloader</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">()</span>\n</pre>\n<p><tt>get_all_regions</tt> method lists all available regions of <tt>name</tt> charts on a <tt>periodicity</tt> basis:</p>\n<pre><span class=\"n\">downloader</span><span class=\"o\">.</span><span class=\"n\">Downloader</span><span class=\"o\">.</span><span class=\"n\">get_all_regions</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'viral'</span><span class=\"p\">,</span>\n                                      <span class=\"n\">periodicity</span><span class=\"o\">=</span><span class=\"s1\">'weekly'</span><span class=\"p\">)</span>\n</pre>\n<p><tt>get_all_dates</tt> method lists all available dates of <tt>name</tt> charts in <tt>region_name</tt> on a <tt>periodicity</tt> basis:</p>\n<pre><span class=\"n\">downloader</span><span class=\"o\">.</span><span class=\"n\">Downloader</span><span class=\"o\">.</span><span class=\"n\">get_all_dates</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'regional'</span><span class=\"p\">,</span>\n                                    <span class=\"n\">periodicity</span><span class=\"o\">=</span><span class=\"s1\">'daily'</span><span class=\"p\">,</span>\n                                    <span class=\"n\">region_name</span><span class=\"o\">=</span><span class=\"s1\">'france'</span><span class=\"p\">)</span>\n</pre>\n<p><tt>Downloader</tt> constructor also grants the access to <tt>name</tt>, <tt>periodicity</tt>, <tt>region_names</tt>, <tt>begin_date</tt>, <tt>end_date</tt>, <tt>file_path</tt> and <tt>data</tt> attributes:</p>\n<pre><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">sc_downloader</span><span class=\"o\">.</span><span class=\"n\">name</span>\n<span class=\"n\">periodicity</span> <span class=\"o\">=</span> <span class=\"n\">sc_downloader</span><span class=\"o\">.</span><span class=\"n\">periodicity</span>\n<span class=\"n\">region_names</span> <span class=\"o\">=</span> <span class=\"n\">sc_downloader</span><span class=\"o\">.</span><span class=\"n\">region_names</span>\n<span class=\"n\">begin_date</span> <span class=\"o\">=</span> <span class=\"n\">sc_downloader</span><span class=\"o\">.</span><span class=\"n\">begin_date</span>\n<span class=\"n\">end_date</span> <span class=\"o\">=</span> <span class=\"n\">sc_downloader</span><span class=\"o\">.</span><span class=\"n\">end_date</span>\n<span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">sc_downloader</span><span class=\"o\">.</span><span class=\"n\">file_path</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">sc_downloader</span><span class=\"o\">.</span><span class=\"n\">data</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7166043, "releases": {"2020.5.1": [{"comment_text": "", "digests": {"md5": "2f90cd44706975d43c1ceb4ab70eae2e", "sha256": "e14a7dc0cd9f4de470d82f298b7679b6775039d0e8a2cd7ea2c128ae103a9381"}, "downloads": -1, "filename": "spotifycharts-2020.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2f90cd44706975d43c1ceb4ab70eae2e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7405, "upload_time": "2020-05-04T17:23:26", "upload_time_iso_8601": "2020-05-04T17:23:26.189961Z", "url": "https://files.pythonhosted.org/packages/65/8f/0f487254a5b0ed0e1c4e76f49fbf03362221bb2451e80096b8bb7b6680f3/spotifycharts-2020.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2412313e7652aae9ac98b106900922a", "sha256": "1696c91a59d8f1f94be8fee3a208a08ce6bec7da6cebcbe659a874ac2c771a4b"}, "downloads": -1, "filename": "spotifycharts-2020.5.1.tar.gz", "has_sig": false, "md5_digest": "b2412313e7652aae9ac98b106900922a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 6861, "upload_time": "2020-05-04T17:23:28", "upload_time_iso_8601": "2020-05-04T17:23:28.640237Z", "url": "https://files.pythonhosted.org/packages/2d/ce/ba6bb2dfa252c153f991a43ec29b77d8e12bb35e647ecc48467c7303c750/spotifycharts-2020.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2f90cd44706975d43c1ceb4ab70eae2e", "sha256": "e14a7dc0cd9f4de470d82f298b7679b6775039d0e8a2cd7ea2c128ae103a9381"}, "downloads": -1, "filename": "spotifycharts-2020.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2f90cd44706975d43c1ceb4ab70eae2e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7405, "upload_time": "2020-05-04T17:23:26", "upload_time_iso_8601": "2020-05-04T17:23:26.189961Z", "url": "https://files.pythonhosted.org/packages/65/8f/0f487254a5b0ed0e1c4e76f49fbf03362221bb2451e80096b8bb7b6680f3/spotifycharts-2020.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2412313e7652aae9ac98b106900922a", "sha256": "1696c91a59d8f1f94be8fee3a208a08ce6bec7da6cebcbe659a874ac2c771a4b"}, "downloads": -1, "filename": "spotifycharts-2020.5.1.tar.gz", "has_sig": false, "md5_digest": "b2412313e7652aae9ac98b106900922a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 6861, "upload_time": "2020-05-04T17:23:28", "upload_time_iso_8601": "2020-05-04T17:23:28.640237Z", "url": "https://files.pythonhosted.org/packages/2d/ce/ba6bb2dfa252c153f991a43ec29b77d8e12bb35e647ecc48467c7303c750/spotifycharts-2020.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:32 2020"}