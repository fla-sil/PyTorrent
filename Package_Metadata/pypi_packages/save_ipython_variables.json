{"info": {"author": "Sergei Orlov", "author_email": "pypi@sergeiorlov.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: Python"], "description": "Save IPython Variables\n======================\n\nYou use IPython.  It's pretty great.  But things happen!  Your computer\ncrashes, your IPython shell crashes (in theory), your computer runs out of\nmemory and the process becomes unreachable.  You can lose your whole session,\nand potentially hours of work.\n\nSure, you can work out of a file, using `%edit` to keep your code on disk, but\nthe variables that can take hours to build up -- whether it's through querying\ndatabases, scraping the web, or executing long-running algorithms -- can just\nvanish.\n\nThis is where this module comes into play: `save-ipython-variables` lets you do\njust that -- save your global IPython variables to disk easily, and load them\nback into the global namespace when you need them again, even in a whole new\nIPython session.\n\nExample Usage\n-------------\n```python\nIn [1]: from save_ipython_variables import load_all_variables, save_variable\n\nIn [2]: data = build_data_dictionary_from_db()\n\nIn [3]: save_variable('data', data)\n\nIn [4]: save_variable('number', 5)\n\nIn [5]: exit()\n```\nAnd now, in a new session:\n```python\nIn [1]: from save_ipython_variables import load_all_variables, save_variable\n\nIn [2]: load_all_variables()\nLoaded the following variables: ['data', 'number']\n\nIn [3]: if data:\n   ...:     print 'Loaded Successfully!'\nLoaded Successfully!\n```\nYou can also choose to load select variables:\n```python\nIn [1]: from save_ipython_variables import load_all_variables, save_variable\n\nIn [2]: load_all_variables(['number'])\nLoaded the following variables: ['number']\n\nIn [3]: number\nOut[3]: 5\n\nIn [3]: data\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n<ipython-input-8-2cd6ee2c70b0> in <module>()\n----> 1 data\n\nNameError: name 'data' is not defined\n```\nAs you can see, `number` was successfully loaded, but `data` was ignored.\n\nDetails\n-------\nEach variable is saved to disk in the current directory as\n`<variable_name>.pkl`.  Variable names are also added to the set\n`saved_var_names`, which is saved to disk like all other variables.\n\nVariables are loaded into scope by adding them to the `__builtins__`\ndictionary.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sergeio/save_ipython_variables", "keywords": "", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "save_ipython_variables", "package_url": "https://pypi.org/project/save_ipython_variables/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/save_ipython_variables/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/sergeio/save_ipython_variables"}, "release_url": "https://pypi.org/project/save_ipython_variables/0.0.4/", "requires_dist": null, "requires_python": null, "summary": "A tool for saving your IPython variables to disk.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            Save IPython Variables<br>======================<br><br>You use IPython.  It's pretty great.  But things happen!  Your computer<br>crashes, your IPython shell crashes (in theory), your computer runs out of<br>memory and the process becomes unreachable.  You can lose your whole session,<br>and potentially hours of work.<br><br>Sure, you can work out of a file, using `%edit` to keep your code on disk, but<br>the variables that can take hours to build up -- whether it's through querying<br>databases, scraping the web, or executing long-running algorithms -- can just<br>vanish.<br><br>This is where this module comes into play: `save-ipython-variables` lets you do<br>just that -- save your global IPython variables to disk easily, and load them<br>back into the global namespace when you need them again, even in a whole new<br>IPython session.<br><br>Example Usage<br>-------------<br>```python<br>In [1]: from save_ipython_variables import load_all_variables, save_variable<br><br>In [2]: data = build_data_dictionary_from_db()<br><br>In [3]: save_variable('data', data)<br><br>In [4]: save_variable('number', 5)<br><br>In [5]: exit()<br>```<br>And now, in a new session:<br>```python<br>In [1]: from save_ipython_variables import load_all_variables, save_variable<br><br>In [2]: load_all_variables()<br>Loaded the following variables: ['data', 'number']<br><br>In [3]: if data:<br>   ...:     print 'Loaded Successfully!'<br>Loaded Successfully!<br>```<br>You can also choose to load select variables:<br>```python<br>In [1]: from save_ipython_variables import load_all_variables, save_variable<br><br>In [2]: load_all_variables(['number'])<br>Loaded the following variables: ['number']<br><br>In [3]: number<br>Out[3]: 5<br><br>In [3]: data<br>---------------------------------------------------------------------------<br>NameError                                 Traceback (most recent call last)<br>&lt;ipython-input-8-2cd6ee2c70b0&gt; in &lt;module&gt;()<br>----&gt; 1 data<br><br>NameError: name 'data' is not defined<br>```<br>As you can see, `number` was successfully loaded, but `data` was ignored.<br><br>Details<br>-------<br>Each variable is saved to disk in the current directory as<br>`&lt;variable_name&gt;.pkl`.  Variable names are also added to the set<br>`saved_var_names`, which is saved to disk like all other variables.<br><br>Variables are loaded into scope by adding them to the `__builtins__`<br>dictionary.\n          </div>"}, "last_serial": 799228, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d83b3b34f7917a8d5b4b243b57f07727", "sha256": "f23e209cac6f38c67d8e49a1ac68ee6dd06d88f457f80a21aeecf3294184bf85"}, "downloads": -1, "filename": "save_ipython_variables-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d83b3b34f7917a8d5b4b243b57f07727", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2529, "upload_time": "2012-10-13T18:08:39", "upload_time_iso_8601": "2012-10-13T18:08:39.483842Z", "url": "https://files.pythonhosted.org/packages/cc/c8/9c63ca1040d48d13a5b2fdf99d8b8e15d14541b3c62c302adf3d57013d0b/save_ipython_variables-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "b9333e79d88bc932aa40e5b8e5e9de80", "sha256": "f1c886e7b91ca05db7f18b1e24b11d2cb4d0ada98ecace5ee38b26ee25fa0f9b"}, "downloads": -1, "filename": "save_ipython_variables-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b9333e79d88bc932aa40e5b8e5e9de80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2786, "upload_time": "2012-10-13T18:12:21", "upload_time_iso_8601": "2012-10-13T18:12:21.853420Z", "url": "https://files.pythonhosted.org/packages/c2/e7/d70366e5d16b39a72cee5f2f6453d40bbf6e7e42914ac91f7d28eaf492c6/save_ipython_variables-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "b8dd3ccb4bb07494842d5b54d5c1e42d", "sha256": "9750891016ccccd84aa95c6b2e612d5ce5d5fc42f30ae9adb799bab995a04ba9"}, "downloads": -1, "filename": "save_ipython_variables-0.0.3.tar.gz", "has_sig": false, "md5_digest": "b8dd3ccb4bb07494842d5b54d5c1e42d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2797, "upload_time": "2012-10-13T18:23:43", "upload_time_iso_8601": "2012-10-13T18:23:43.479901Z", "url": "https://files.pythonhosted.org/packages/68/de/286f5f4a6a89d670bbeff9a497d7b6cc948301028e51cf354824115cd023/save_ipython_variables-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "fd2cffbd9d9ebf1a8160f587c6d87a5c", "sha256": "2765f2277a9476316ddd7393adca5a1a376b163fff6a4361194ee9cbaeb598ae"}, "downloads": -1, "filename": "save_ipython_variables-0.0.4.tar.gz", "has_sig": false, "md5_digest": "fd2cffbd9d9ebf1a8160f587c6d87a5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3058, "upload_time": "2012-12-19T23:33:43", "upload_time_iso_8601": "2012-12-19T23:33:43.514193Z", "url": "https://files.pythonhosted.org/packages/36/df/ae6ec885db122e5a6da486817e7c315959d9b903ee69cbd7156db62cddf3/save_ipython_variables-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fd2cffbd9d9ebf1a8160f587c6d87a5c", "sha256": "2765f2277a9476316ddd7393adca5a1a376b163fff6a4361194ee9cbaeb598ae"}, "downloads": -1, "filename": "save_ipython_variables-0.0.4.tar.gz", "has_sig": false, "md5_digest": "fd2cffbd9d9ebf1a8160f587c6d87a5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3058, "upload_time": "2012-12-19T23:33:43", "upload_time_iso_8601": "2012-12-19T23:33:43.514193Z", "url": "https://files.pythonhosted.org/packages/36/df/ae6ec885db122e5a6da486817e7c315959d9b903ee69cbd7156db62cddf3/save_ipython_variables-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:23 2020"}