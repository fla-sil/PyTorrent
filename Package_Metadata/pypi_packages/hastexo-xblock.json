{"info": {"author": "hastexo", "author_email": "pypi@hastexo.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: OpenStack", "Framework :: Django", "Intended Audience :: Education", "License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: POSIX :: Linux", "Topic :: Education", "Topic :: Education :: Computer Aided Instruction (CAI)"], "description": "[![PyPI version](https://badge.fury.io/py/hastexo-xblock.svg)](https://pypi.python.org/pypi/hastexo-xblock)\n[![Build Status](https://travis-ci.org/hastexo/hastexo-xblock.svg?branch=master)](https://travis-ci.org/hastexo/hastexo-xblock) [![codecov](https://codecov.io/gh/hastexo/hastexo-xblock/branch/master/graph/badge.svg)](https://codecov.io/gh/hastexo/hastexo-xblock)\n\n# hastexo XBlock\n\nThe hastexo [XBlock](https://xblock.readthedocs.org/en/latest/) is an\n[Open edX](https://open.edx.org/) API that integrates realistic lab\nenvironments into distributed computing courses. The hastexo XBlock allows\nstudents to access an OpenStack environment within an edX course.\n\nIt leverages [Apache Guacamole](https://guacamole.incubator.apache.org/) as a\nbrowser-based connection mechanism, which includes the ability to connect to\ngraphical user environments (via VNC and RDP), in addition to terminals (via\nSSH).\n\n> If you are looking for the legacy GateOne functionality, please check out\n> the documentation in\n> [the `stable-0.5` branch](https://github.com/hastexo/hastexo-xblock/tree/stable-0.5).\n\n\n## Purpose\n\nThe hastexo XBlock orchestrates a virtual environment (a \"stack\") that runs on\na private or public cloud (currently [OpenStack](https://www.openstack.org) or\n[Gcloud](https://cloud.google.com/)) using its orchestration engine. It\nprovides a Secure Shell session directly within the courseware.\n\nStack creation is idempotent, so a fresh stack will be spun up only if it does\nnot already exist. An idle stack will auto-suspend after a configurable time\nperiod, which is two minutes by default. The stack will resume automatically\nwhen the student returns to the lab environment.\n\nSince public cloud environments typically charge by the minute to *run*\nvirtual machines, the hastexo XBlock makes lab environments cost effective to\ndeploy. The hastexo XBlock can run a fully distributed virtual lab environment\nfor a course in [Ceph](http://ceph.com), OpenStack,\n[Open vSwitch](http://openvswitch.org/) or\n[fleet](https://coreos.com/using-coreos/clustering/) for approximately $25 per\nmonth on a public cloud (assuming students use the environment for 1 hour per\nday).\n\nCourse authors can fully define and customize the lab environment. It is only\nlimited by the feature set of the cloud's deployment features.\n\n\n## Deployment\n\nThe easiest way for platform administrators to deploy the hastexo XBlock and\nits dependencies to an Open edX installation is to pip install it to the `edxapp`\nvirtualenv, and then to use the `hastexo_xblock` role included in the\n[hastexo\\_xblock branch](https://github.com/hastexo/edx-configuration/tree/hastexo/ginkgo/hastexo_xblock)\nof `edx/configuration`.\n\nTo deploy the hastexo XBlock:\n\n1. Install it via pip:\n\n    ```\n    $ sudo /edx/bin/pip.edxapp install hastexo-xblock\n    ```\n\n    > Do **not** run `pip install` with `--upgrade`, however, as this will\n    > break edx-platform's own dependencies.\n\n2. Collect static assets:\n\n    ```\n    $ sudo /edx/bin/edxapp-update-assets\n    ```\n\n3. Add it to the `ADDL_INSTALLED_APPS` of your LMS environment, by editing\n   `/edx/app/edxapp/lms.env.json` and adding:\n\n    ```\n    \"ADDL_INSTALLED_APPS\": [\n        \"hastexo\"\n    ],\n    ```\n\n4. If you're going to use it in a content library, also add it to the\n   `ADVANCED_PROBLEM_TYPES` of your Studio environment, by editing\n   `/edx/app/edxapp/cms.env.json` and adding:\n\n    ```\n    \"ADVANCED_PROBLEM_TYPES\": [\n        {\n            \"boilerplate_name\": null,\n            \"component\": \"hastexo\"\n        }\n    ],\n    ```\n\n5. This xblock uses a Django model to synchronize stack information across\n   instances.  Migrate the `edxapp` database so the `hastexo_stack` table is\n   created:\n\n   ```\n   $ sudo /edx/bin/edxapp-migrate-lms\n   ```\n\n6. Add configuration to `XBLOCK_SETTINGS` on `/edx/app/edxapp/lms.env.json`:\n\n    ```\n    \"XBLOCK_SETTINGS\": {\n        \"hastexo\": {\n            \"terminal_url\": \"/hastexo-xblock/\",\n            \"launch_timeout\": 900,\n            \"remote_exec_timeout\": 300,\n            \"suspend_timeout\": 120,\n            \"suspend_interval\": 60,\n            \"suspend_concurrency\": 4,\n            \"suspend_task_timeout\": 900,\n            \"check_timeout\": 120,\n            \"delete_interval\": 86400,\n            \"delete_age\": 14,\n            \"delete_attempts\": 3,\n            \"delete_task_timeout\": 900,\n            \"sleep_timeout\": 10,\n            \"js_timeouts\": {\n                \"status\": 15000,\n                \"keepalive\": 30000,\n                \"idle\": 3600000,\n                \"check\": 5000\n            },\n            \"providers\": {\n                \"default\": {\n                    \"type\": \"openstack\",\n                    \"os_auth_url\": \"\",\n                    \"os_auth_token\": \"\",\n                    \"os_username\": \"\",\n                    \"os_password\": \"\",\n                    \"os_user_id\": \"\",\n                    \"os_user_domain_id\": \"\",\n                    \"os_user_domain_name\": \"\",\n                    \"os_project_id\": \"\",\n                    \"os_project_name\": \"\",\n                    \"os_project_domain_id\": \"\",\n                    \"os_project_domain_name\": \"\",\n                    \"os_region_name\": \"\"\n                },\n                \"provider2\": {\n                    \"type\": \"gcloud\",\n                    \"gc_type\": \"service_account\",\n                    \"gc_project_id\": \"\",\n                    \"gc_private_key_id\": \"\",\n                    \"gc_private_key\": \"\",\n                    \"gc_client_email\": \"\",\n                    \"gc_client_id\": \"\",\n                    \"gc_auth_uri\": \"\",\n                    \"gc_token_uri\": \"\",\n                    \"gc_auth_provider_x509_cert_url\": \"\",\n                    \"gc_client_x509_cert_url\": \"\",\n                    \"gc_region_id\": \"\"\n                },\n            }\n        }\n    }\n    ```\n\n7. Now install the Guacamole web app and stack supervisor scripts by cloning\n   the `hastexo_xblock` fork of edx/configuration and assigning that role to\n   the machine:\n\n    ```\n    $ git clone -b hastexo/ginkgo/hastexo_xblock https://github.com/hastexo/edx-configuration.git\n    $ cd edx-configuration/playbooks\n    $ ansible-playbook -c local -i \"localhost,\" run_role.yml -e role=hastexo_xblock\n    ```\n\n8. At this point restart edxapp, its workers, and make sure the stack jobs are\n   running:\n\n    ```\n    sudo /edx/bin/supervisorctl restart edxapp:\n    sudo /edx/bin/supervisorctl restart edxapp_worker:\n    sudo /edx/bin/supervisorctl start suspender:\n    sudo /edx/bin/supervisorctl start reaper:\n    ```\n\n9. Finally, in your course, go to the advanced settings and add the hastexo\n   module to the \"Advanced Module List\" like so:\n\n   ```\n   [\n    \"annotatable\",\n    \"openassessment\",\n    \"hastexo\"\n   ]\n   ```\n\n\n## XBlock settings\n\nThe hastexo XBlock must be configured via `XBLOCK_SETTINGS` in\n`lms.env.json`, under the `hastexo` key.  At the very minimum, you must\nconfigure a single \"default\" provider with the credentials specific to the\ncloud you will be using.  All other variables can be left at their defaults.\n\nThis is a brief explanation of each:\n\n* `terminal_url`: URL to the Guacamole web app.  If it is defined with a fully\n  qualified domain, it must include the protocol (`http://` or `https://`).  If\n  not, it is assumed to be an absolute path based on the current\n  `window.location`.  (It is possible to define it with a \":\"-prefixed port,\n  such as \":8080/hastexo-xblock/\", for use in devstacks). (Default:\n  `/hastexo-xblock/`)\n\n* `launch_timeout`: How long to wait for a stack to be launched, in seconds.\n  (Default: `900`)\n\n* `remote_exec_timeout`: How long to wait for a command to be executed remotely\n  over SSH, in seconds.  (Default: `300`)\n\n* `suspend_timeout`: How long to wait before suspending a stack, after the last\n  keepalive was received from the browser, in seconds.  (Default: `120`)\n\n* `suspend_interval`: The period between suspend job launches. (Default: `60`)\n\n* `suspend_concurrency`: How many stacks to suspend on each job run. (Default:\n  `4`)\n\n* `suspend_task_timeout`: How long to wait for a stack to be suspended, in\n  seconds.  (Default: `900`)\n\n* `check_timeout`: How long to wait before a check progress task fails.\n  (Default: `120`)\n\n* `delete_age`: Delete stacks that haven't been resumed in this many days.  Set\n  to 0 to disable. (Default: 14)\n\n* `delete_interval`: The period between reaper job launches. (Default:\n  `3600`)\n\n* `delete_attempts`: How many times to insist on deletion after a failure.\n  (Default: `3`)\n\n* `delete_task_timeout`: How long to wait for a stack to be deleted, in\n  seconds.  (Default: `900`)\n\n* `js_timeouts`:\n\n    * `status`: In the browser, when launching a stack, how long to wait\n      between polling attempts until it is complete, in milliseconds (Default:\n      `15000`)\n\n    * `keepalive`: In the browser, after the stack is ready, how long to wait\n      between keepalives to the server, in milliseconds. (Default: `30000`)\n\n    * `idle`: In the browser, how long to wait until the user is considered\n      idle, when no input is registered in the terminal, in milliseconds.\n      (Default: `3600000`)\n\n    * `check`: In the browser, after clicking \"Check Progress\", how long to\n      wait between polling attempts, in milliseconds. (Default: `5000`)\n\n* `providers`: A dictionary of OpenStack providers that course authors can pick\n  from.  Each entry is itself a dictionary containing provider configuration\n  parameters.  You must configure at least one, named \"default\".  The following\n  is a list of supported parameters:\n\n    * `type`: The provider type.  Currently \"openstack\" or \"gcloud\".  Defaults\n      to \"openstack\" if not provided, for backwards-compatibility.\n\n    The following apply to OpenStack only:\n\n    * `os_auth_url`: OpenStack auth URL.\n\n    * `os_auth_token`: OpenStack auth token.\n\n    * `os_username`: OpenStack user name.\n\n    * `os_password`: OpenStack password.\n\n    * `os_user_id`: OpenStack user id.\n\n    * `os_user_domain_id`: OpenStack domain id.\n\n    * `os_user_domain_name`: OpenStack domain name.\n\n    * `os_project_id`: OpenStack project id.\n\n    * `os_project_name`: OpenStack project name.\n\n    * `os_project_domain_id`: OpenStack project domain id.\n\n    * `os_project_domain_name`: OpenStack project domain name.\n\n    * `os_region_name`: OpenStack region name.\n\n    The following apply to Gcloud only.  All values aside from region can be\n    obtained by creating a [service\n    account](https://console.developers.google.com/iam-admin/serviceaccounts)\n    and downloading the JSON-format key:\n\n    * `gc_deploymentmanager_api_version`: The deployment service api version.\n      (Default: \"v2\")\n\n    * `gc_compute_api_version`: The compute service api version. (Default: \"v1\")\n\n    * `gc_type`: The type of account, currently only `service_account`.\n\n    * `gc_project_id`: Gcloud project ID.\n\n    * `gc_private_key_id`: Gcloud private key ID.\n\n    * `gc_private_key`: Gcloud private key, in its entirety.\n\n    * `gc_client_email`: Gcloud client email.\n\n    * `gc_client_id`: Gcloud cliend ID.\n\n    * `gc_auth_uri`: Gcloud auth URI.\n\n    * `gc_token_uri`: Gcloud token URI.\n\n    * `gc_auth_provider_x509_cert_url`: Gcloud auth provider cert URL.\n\n    * `gc_client_x509_cert_url`: Gcloud client cert URL.\n\n    * `gc_region_id`: Gcloud region where labs will be launched.\n\n\n## Creating an orchestration template for your course\n\nTo use the hastexo XBlock, start by creating an orchestration template and\nuploading it to the content store.  The XBlock imposes some constraints on the\ntemplate (detailed below), but you are otherwise free to customize your\ntraining environment as needed.\n\nTo ensure your template has the required configuration:\n\n1. Configure the template to accept a \"run\" parameter, which will contain\n   information about the course run where the XBlock is instanced.  This is\n   intended to give course authors a way to, for example, tie this to a\n   specific virtual image when launching VMs.\n\n2. If your orchestration engine allows it, configure the template to generate\n   an SSH key pair dynamically and save the private key.\n\n3. In addition, if using RDP or VNC you must generate a random password and\n   assign it to the stack user.\n\n4. Configure the template to have at least one instance that is publicly\n   accessible via an IPv4 address.\n\n5. Provide the following outputs with these exact names:\n\n    * `public_ip`: The publically accessible instance.\n\n    * `private_key`: The generated passphrase-less SSH private key.\n\n    * `password`: The generated password. (OPTIONAL)\n\n    * `reboot_on_resume`: A list of servers to be rebooted upon resume.  This\n      is meant primarily as a workaround to resurrect servers that use nested\n      KVM, as the latter does not support a managed save and subsequent\n      restart. (OPTIONAL, DEPRECATED)\n\n6. Upload the template to the content store and make a note of its static asset\n   file name.\n\n### Heat examples\n\nA sample Heat template is provided under `samples/hot/sample-template.yaml`.\n\nAccepting the run parameter:\n\n    ```\n    run:\n      type: string\n      description: Stack run\n    ```\n\nGenerating an SSH key pair:\n\n    ```\n    training_key:\n      type: OS::Nova::KeyPair\n      properties:\n        name: { get_param: 'OS::stack_name' }\n        save_private_key: true\n    ```\n\nGenerating a random password and setting it:\n\n    ```\n    stack_password:\n      type: OS::Heat::RandomString\n      properties:\n        length: 32\n\n    cloud_config:\n      type: OS::Heat::CloudConfig\n      properties:\n        cloud_config:\n          chpasswd:\n            list:\n              str_replace:\n                template: \"user:{password}\"\n                params:\n                  \"{password}\": { get_resource: stack_password }\n    ```\n\nDefining the outputs:\n\n    ```\n    outputs:\n      public_ip:\n        description: Floating IP address of deploy in public network\n        value: { get_attr: [ deploy_floating_ip, floating_ip_address ] }\n      private_key:\n        description: Training private key\n        value: { get_attr: [ training_key, private_key ] }\n      password:\n        description: Stack password\n        value: { get_resource: stack_password }\n      reboot_on_resume:\n        description: Servers to be rebooted after resume\n        value:\n          - { get_resource: server1 }\n          - { get_resource: server2 }\n    ```\n\n### Gcloud examples\n\nA sample Gcloud template is provided under `samples/gcloud/sample-template.yaml.jinja`.\n\nThe Gcloud deployment manager cannot generate an SSH key or random password\nitself, so the XBlock will do it for you.  There's no need to generate them or\nprovide outputs manually.  However, you do need to make use of the ones\nprovided as properties:\n\n    ```\n    resources:\n      - name: {{ env[\"deployment\"] }}-server\n        type: compute.v1.instance\n        properties:\n          metadata:\n           items:\n           - key: user-data\n             value: |\n               #cloud-config\n               users:\n                 - default\n                 - name: training\n                   gecos: Training User\n                   groups: users,adm\n                   ssh-authorized-keys:\n                     - ssh-rsa {{ properties[\"public_key\"] }}\n                   lock-passwd: false\n                   shell: /bin/false\n                   sudo: ALL=(ALL) NOPASSWD:ALL\n               chpasswd:\n                 list: |\n                   training:{{ properties[\"password\"] }}\n           runcmd:\n             - echo \"exec /usr/bin/screen -xRR\" >> /home/training/.profile\n             - echo {{ properties[\"private_key\"] }} | base64 -d > /home/training/.ssh/id_rsa\n    ```\n\nNote that due to the fact that the deployment manager does not accept property\nvalues with multiple lines, the private key is base64-encoded.\n\nAs for outputs, in a Gcloud template one needs only one:\n\n    ```\n    outputs:\n    - name: public_ip\n      value: $(ref.{{ env[\"deployment\"] }}-server.networkInterfaces[0].accessConfigs[0].natIP)\n    ```\n\n\n## Using the hastexo XBlock in a course\n\nTo create a stack for a student and display a terminal window where invoked,\nyou need to define the `hastexo` tag in your course content.   It must be\nconfigured with the following attributes:\n\n* `stack_user_name`: The name of the user that the Xblock will use to connect\n  to the environment, as specified in the orchestration template.\n\n* `protocol`: One of 'ssh', 'rdp', or 'vnc'.  This defines the protocol that\n  will be used to connect to the environment.  The default is 'ssh'.\n\nThe following are optional:\n\n* `stack_template_path`: The static asset path to the orchestration template,\n  if not specified per provider below.\n\n* `launch_timeout`: How long to wait for a stack to be launched, in seconds.\n  If unset, the global timeout will be used.\n\nYou can also use the following nested XML options:\n\n* `providers`: A list of references to providers configured in the platform.\n  Each `name` attribute must match one of the providers in the XBlock\n  configuration. `capacity` specifies how many environments should be launched\n  in that provider at maximum (where \"-1\" means keep launching environments\n  until encountering a launch failure, and \"0\" disables the provider).\n  `template` is the content store path to the orchestration template (if not\n  given, `stack_template_path` will be used).  `environment` specifies a\n  content store path to a either a Heat environment file, or, if using Gcloud,\n  a YAML list of properties.  If no providers are specified, the platform\n  default will be used.\n\n* `ports`: A list of ports the user can manually choose to connect to.  This is\n  intended as a means of providing a way to connect directly to multiple VMs in\n  a lab environment, via port forwarding or proxying at the VM with the public\n  IP address.  Each `name` attribute will be visible to the user.  The `number`\n  attribute specifies the corresponding port.\n\n* `tests`: A list of test scripts.  The contents of each element will be run\n  verbatim a a script in the user's lab environment, when they click the \"Check\n  Progress\" button.  As such, each script should define an interpreter via the\n  \"shebang\" convention.  If any scripts fail with a retval greater than 0, the\n  learner gets a partial score for this instance of the XBlock.  In this case,\n  the `stderr` of failed scripts will be displayed to the learner as a list of\n  hints on how to proceed.\n\nFor example, in XML:\n\n```\n<vertical url_name=\"lab_introduction\">\n  <hastexo xmlns:option=\"http://code.edx.org/xblock/option\"\n    url_name=\"lab_introduction\"\n    stack_user_name=\"training\"\n    protocol=\"rdp\">\n    <option:providers>\n      - name: provider1\n        capacity: 20\n        template: hot_lab1_template.yaml\n        environment: hot_lab1_env.yaml\n      - name: provider2\n        capacity: 30\n        template: gcloud_lab1_template.yaml\n        environment: gcloud_lab1_config.yaml\n    </option:providers>\n    <option:ports>\n      - name: server1\n        number: 3389\n      - name: server2\n        number: 3390\n    </option:ports>\n    <option:tests><![CDATA[\n      - |\n        #!/bin/bash\n        # Check for login on vm1\n        logins=$(ssh vm1 last root | grep root | wc -l)\n        if [ $logins -lt 1 ]; then\n          # Output a hint to stderr\n          echo \"You haven't logged in to vm1, yet.\" >&2\n          exit 1\n        fi\n        exit 0\n      - |\n        #!/bin/bash\n        # Check for file\n        file=foobar\n        if [ ! -e ${file} ]; then\n          # Output a hint to stderr\n          echo \"File \\\"${file}\\\" doesn't exist.\" >&2\n          exit 1\n        fi\n        exit 0\n    ]]></option:tests>\n  </hastexo>\n</vertical>\n```\n\n**Important**: Do this only *once per section*. Defining it more than once\nper section is not supported.\n\nNote on tests: as seen in the above example, it is recommended to wrap them all\nin `<![CDATA[..]]>` tags.  This avoids XML parsing errors when special\ncharacters are encountered, such as the `>&2` used to output to stderr in bash.\n\nIn order to add the hastexo Xblock through Studio, open the unit where you want\nit to go.  Add a new component, select `Advanced`, then select the `Lab`\ncomponent.  This adds the XBlock.  Edit the Settings as explained above.\n\n### Using the hastexo XBlock in a content library\n\nThis XBlock is usable in [content libraries](https://edx.readthedocs.io/projects/open-edx-building-and-running-a-course/en/latest/course_components/libraries.html).\nIt supports adding lab instructions as child blocks, so that when the block is\nrandomized, the instructions are bundled together with it.\n\nTo add the XBlock to the library via Studio, make sure it is configured as one\nof the `ADVANCED_PROBLEM_TYPES` in `cms.env.json`, then select it as such when\nadding content to your library.  (Note: as of Open edX Ironwood, the ability to\ndo so requires running a [patched version](https://github.com/hastexo/edx-platform/tree/hastexo/ironwood/free_the_library)\nof `edx-platform`.)\n\nThe following child block types are currently supported:\n\n    * html\n    * video\n    * [pdf](https://github.com/MarCnu/pdfXBlock)\n\nIf using OLX, html blocks can be defined separately in the `html` subdirectory\nas usual, with the child element referring to it by URL name:\n\n```\n<vertical url_name=\"lab_introduction\">\n  <hastexo ...>\n    <html url_name=\"lab_instructions\">\n  </hastexo>\n</vertical>\n```\n\nChild blocks will always be rendered _above_ the terminal.\n\n## Student experience\n\nWhen students navigate to a unit with a hastexo XBlock in it, a new Heat\nstack will be created (or resumed) for them. The Heat stack will be as defined\nin the uploaded Heat template. It is unique per student and per course run. If\nthe same tag appears on a different course, or different run of the same\ncourse, the student will get a different stack.\n\nThe stack will suspend if the student does not navigate to the `hastexo` unit\nin that section within the default two minutes (configurable via settings, as\nexplained above). When the student gets to the `hastexo` unit, the stack will\nbe resumed and they will be connected automatically and securely. They will not\nneed a username, password, or host prompts to their personal lab environment.\nThis happens transparently in the browser.\n\nThe student can work at their own pace in their environment. However, when\na student closes the browser where the `hastexo` unit is displayed, or if they\nput their computer to sleep, a countdown is started. If the student does not\nreopen the environment within two minutes their stack will be suspended. When\na student comes back to the lab environment to finish the exercise, their\nstack is resumed automatically.  They are connected to the same training\nenvironment they were working with before, in the *same state* they left it in.\n(The process of suspension works just like in a home computer.)\n\n\n## Django admin page\n\nTo facilitate management of stack states without direct access to the database,\na Django admin page is provided as a frontend for the `hastexo_stack` table.\nTo access it, go to the following as a superuser:\n\nhttps://lms.example.com/admin/hastexo/stack\n\nThe following features are currently implemented:\n\n* Searching: Search for a stack's name, course ID, status, and provider.\n\n* Filtering: On the filter tab to the right, it is possible to select from a\n  preset list of three filters: `course_id`, `status`, and `provider`.  The\n  preset values are generated on the fly from existing records.\n\n* On-list editing: modify multiple stack's states or providers directly from\n  the main list.\n\n* Marking stacks as deleted in bulk: to quickly change multiple stack states to\n  `DELETE_COMPLETE`, and to reset their providers to \"\", select multiple stacks\n  and use the \"Mark selected stacks as DELETE_COMPLETE\" action from the action\n  dropdown.\n\n* Displaying owner's email: when opening a stack's edit form (by clicking on\n  its name), the owner's email is displayed.\n\nWhen changing providers, only the ones enabled by the author for the course in\nquestion are displayed.  If none are present, then the list is expanded with\nthe full set of providers configured in the platform.\n\nThe list of states is similarly limited to a known set of possibilities, but no\nfurther validation is made.\n\nFurthermore, the following are not currently possible:\n\n* Displaying the owner's email on the main list\n\n* Searching for a stack owner's email\n\n* Adding a stack record\n\nNote that making changes to the `hastexo_stack` table does not affect the\nstacks themselves.  In other words, deleting an existing stack here will merely\ndelete its database record: not only will the stack itself continue to exist,\nbut the XBlock will cease to handle it automatically (such as suspending or\ndeleting it) until such time as the learner relaunches it.  The admin page is\nonly offered as a convenient way to manually synchronize the database with\nactual stack states in case of failure.  It should not be necessary to do so in\nday-to-day usage of the XBlock.\n\n\n## Usage in devstack\n\nIt is possible to use this XBlock in devstack.  To do so, however, requires\ntweaking a few settings.\n\nFirst, devstacks don't install nginx.  Therefore, the Guacamole app is only\nreachable directly at its configured port.  This means that `terminal_url` in\nthe XBlock settings must be set to that port (by default, 8080):\n\n    ```\n    \"XBLOCK_SETTINGS\": {\n        \"hastexo\": {\n            \"terminal_url\": \":8080/hastexo-xblock/\"\n        }\n    }\n    ```\n\nNext, open three terminal windows, and run each of the following concurrently:\n\n    ```\n    paver devstack lms --settings=devstack_with_worker\n    ./manage.py lms celery worker --settings=devstack_with_worker -l DEBUG\n    ./manage.py lms --settings=devstack_with_worker suspender\n    ./manage.py lms --settings=devstack_with_worker reaper\n    ```\n\n\n## Running tests\n\nThe testing framework is built on\n[tox](https://tox.readthedocs.io/). After installing tox, you can\nsimply run `tox` from your Git checkout of this repository.\n\nIn addition, you can run `tox -r` to throw away and rebuild the\ntesting virtualenv, or `tox -e flake8` to run only PEP-8 checks, as\nopposed to the full test suite.\n\n\n## License\n\nThis XBlock is licensed under the Affero GPL; see [`LICENSE`](LICENSE)\nfor details.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hastexo/hastexo-xblock", "keywords": "", "license": "AGPL-3.0", "maintainer": "", "maintainer_email": "", "name": "hastexo-xblock", "package_url": "https://pypi.org/project/hastexo-xblock/", "platform": "", "project_url": "https://pypi.org/project/hastexo-xblock/", "project_urls": {"Homepage": "https://github.com/hastexo/hastexo-xblock"}, "release_url": "https://pypi.org/project/hastexo-xblock/3.6.2/", "requires_dist": null, "requires_python": "", "summary": "hastexo XBlock: Makes arbitrarily complex lab environments available on an Open edX LMS", "version": "3.6.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/hastexo-xblock\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c71bf5e9c4355d6aefa32a577d4670bba8e448b6/68747470733a2f2f62616467652e667572792e696f2f70792f6861737465786f2d78626c6f636b2e737667\"></a>\n<a href=\"https://travis-ci.org/hastexo/hastexo-xblock\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ad08da07cd9e77c8e832feacb2d7a480fcb456aa/68747470733a2f2f7472617669732d63692e6f72672f6861737465786f2f6861737465786f2d78626c6f636b2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/hastexo/hastexo-xblock\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d630f435a503e47b9b78edaa9b149b24c0c297cc/68747470733a2f2f636f6465636f762e696f2f67682f6861737465786f2f6861737465786f2d78626c6f636b2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<h1>hastexo XBlock</h1>\n<p>The hastexo <a href=\"https://xblock.readthedocs.org/en/latest/\" rel=\"nofollow\">XBlock</a> is an\n<a href=\"https://open.edx.org/\" rel=\"nofollow\">Open edX</a> API that integrates realistic lab\nenvironments into distributed computing courses. The hastexo XBlock allows\nstudents to access an OpenStack environment within an edX course.</p>\n<p>It leverages <a href=\"https://guacamole.incubator.apache.org/\" rel=\"nofollow\">Apache Guacamole</a> as a\nbrowser-based connection mechanism, which includes the ability to connect to\ngraphical user environments (via VNC and RDP), in addition to terminals (via\nSSH).</p>\n<blockquote>\n<p>If you are looking for the legacy GateOne functionality, please check out\nthe documentation in\n<a href=\"https://github.com/hastexo/hastexo-xblock/tree/stable-0.5\" rel=\"nofollow\">the <code>stable-0.5</code> branch</a>.</p>\n</blockquote>\n<h2>Purpose</h2>\n<p>The hastexo XBlock orchestrates a virtual environment (a \"stack\") that runs on\na private or public cloud (currently <a href=\"https://www.openstack.org\" rel=\"nofollow\">OpenStack</a> or\n<a href=\"https://cloud.google.com/\" rel=\"nofollow\">Gcloud</a>) using its orchestration engine. It\nprovides a Secure Shell session directly within the courseware.</p>\n<p>Stack creation is idempotent, so a fresh stack will be spun up only if it does\nnot already exist. An idle stack will auto-suspend after a configurable time\nperiod, which is two minutes by default. The stack will resume automatically\nwhen the student returns to the lab environment.</p>\n<p>Since public cloud environments typically charge by the minute to <em>run</em>\nvirtual machines, the hastexo XBlock makes lab environments cost effective to\ndeploy. The hastexo XBlock can run a fully distributed virtual lab environment\nfor a course in <a href=\"http://ceph.com\" rel=\"nofollow\">Ceph</a>, OpenStack,\n<a href=\"http://openvswitch.org/\" rel=\"nofollow\">Open vSwitch</a> or\n<a href=\"https://coreos.com/using-coreos/clustering/\" rel=\"nofollow\">fleet</a> for approximately $25 per\nmonth on a public cloud (assuming students use the environment for 1 hour per\nday).</p>\n<p>Course authors can fully define and customize the lab environment. It is only\nlimited by the feature set of the cloud's deployment features.</p>\n<h2>Deployment</h2>\n<p>The easiest way for platform administrators to deploy the hastexo XBlock and\nits dependencies to an Open edX installation is to pip install it to the <code>edxapp</code>\nvirtualenv, and then to use the <code>hastexo_xblock</code> role included in the\n<a href=\"https://github.com/hastexo/edx-configuration/tree/hastexo/ginkgo/hastexo_xblock\" rel=\"nofollow\">hastexo_xblock branch</a>\nof <code>edx/configuration</code>.</p>\n<p>To deploy the hastexo XBlock:</p>\n<ol>\n<li>\n<p>Install it via pip:</p>\n<pre><code>$ sudo /edx/bin/pip.edxapp install hastexo-xblock\n</code></pre>\n<blockquote>\n<p>Do <strong>not</strong> run <code>pip install</code> with <code>--upgrade</code>, however, as this will\nbreak edx-platform's own dependencies.</p>\n</blockquote>\n</li>\n<li>\n<p>Collect static assets:</p>\n<pre><code>$ sudo /edx/bin/edxapp-update-assets\n</code></pre>\n</li>\n<li>\n<p>Add it to the <code>ADDL_INSTALLED_APPS</code> of your LMS environment, by editing\n<code>/edx/app/edxapp/lms.env.json</code> and adding:</p>\n<pre><code>\"ADDL_INSTALLED_APPS\": [\n    \"hastexo\"\n],\n</code></pre>\n</li>\n<li>\n<p>If you're going to use it in a content library, also add it to the\n<code>ADVANCED_PROBLEM_TYPES</code> of your Studio environment, by editing\n<code>/edx/app/edxapp/cms.env.json</code> and adding:</p>\n<pre><code>\"ADVANCED_PROBLEM_TYPES\": [\n    {\n        \"boilerplate_name\": null,\n        \"component\": \"hastexo\"\n    }\n],\n</code></pre>\n</li>\n<li>\n<p>This xblock uses a Django model to synchronize stack information across\ninstances.  Migrate the <code>edxapp</code> database so the <code>hastexo_stack</code> table is\ncreated:</p>\n<pre><code>$ sudo /edx/bin/edxapp-migrate-lms\n</code></pre>\n</li>\n<li>\n<p>Add configuration to <code>XBLOCK_SETTINGS</code> on <code>/edx/app/edxapp/lms.env.json</code>:</p>\n<pre><code>\"XBLOCK_SETTINGS\": {\n    \"hastexo\": {\n        \"terminal_url\": \"/hastexo-xblock/\",\n        \"launch_timeout\": 900,\n        \"remote_exec_timeout\": 300,\n        \"suspend_timeout\": 120,\n        \"suspend_interval\": 60,\n        \"suspend_concurrency\": 4,\n        \"suspend_task_timeout\": 900,\n        \"check_timeout\": 120,\n        \"delete_interval\": 86400,\n        \"delete_age\": 14,\n        \"delete_attempts\": 3,\n        \"delete_task_timeout\": 900,\n        \"sleep_timeout\": 10,\n        \"js_timeouts\": {\n            \"status\": 15000,\n            \"keepalive\": 30000,\n            \"idle\": 3600000,\n            \"check\": 5000\n        },\n        \"providers\": {\n            \"default\": {\n                \"type\": \"openstack\",\n                \"os_auth_url\": \"\",\n                \"os_auth_token\": \"\",\n                \"os_username\": \"\",\n                \"os_password\": \"\",\n                \"os_user_id\": \"\",\n                \"os_user_domain_id\": \"\",\n                \"os_user_domain_name\": \"\",\n                \"os_project_id\": \"\",\n                \"os_project_name\": \"\",\n                \"os_project_domain_id\": \"\",\n                \"os_project_domain_name\": \"\",\n                \"os_region_name\": \"\"\n            },\n            \"provider2\": {\n                \"type\": \"gcloud\",\n                \"gc_type\": \"service_account\",\n                \"gc_project_id\": \"\",\n                \"gc_private_key_id\": \"\",\n                \"gc_private_key\": \"\",\n                \"gc_client_email\": \"\",\n                \"gc_client_id\": \"\",\n                \"gc_auth_uri\": \"\",\n                \"gc_token_uri\": \"\",\n                \"gc_auth_provider_x509_cert_url\": \"\",\n                \"gc_client_x509_cert_url\": \"\",\n                \"gc_region_id\": \"\"\n            },\n        }\n    }\n}\n</code></pre>\n</li>\n<li>\n<p>Now install the Guacamole web app and stack supervisor scripts by cloning\nthe <code>hastexo_xblock</code> fork of edx/configuration and assigning that role to\nthe machine:</p>\n<pre><code>$ git clone -b hastexo/ginkgo/hastexo_xblock https://github.com/hastexo/edx-configuration.git\n$ cd edx-configuration/playbooks\n$ ansible-playbook -c local -i \"localhost,\" run_role.yml -e role=hastexo_xblock\n</code></pre>\n</li>\n<li>\n<p>At this point restart edxapp, its workers, and make sure the stack jobs are\nrunning:</p>\n<pre><code>sudo /edx/bin/supervisorctl restart edxapp:\nsudo /edx/bin/supervisorctl restart edxapp_worker:\nsudo /edx/bin/supervisorctl start suspender:\nsudo /edx/bin/supervisorctl start reaper:\n</code></pre>\n</li>\n<li>\n<p>Finally, in your course, go to the advanced settings and add the hastexo\nmodule to the \"Advanced Module List\" like so:</p>\n<pre><code>[\n \"annotatable\",\n \"openassessment\",\n \"hastexo\"\n]\n</code></pre>\n</li>\n</ol>\n<h2>XBlock settings</h2>\n<p>The hastexo XBlock must be configured via <code>XBLOCK_SETTINGS</code> in\n<code>lms.env.json</code>, under the <code>hastexo</code> key.  At the very minimum, you must\nconfigure a single \"default\" provider with the credentials specific to the\ncloud you will be using.  All other variables can be left at their defaults.</p>\n<p>This is a brief explanation of each:</p>\n<ul>\n<li>\n<p><code>terminal_url</code>: URL to the Guacamole web app.  If it is defined with a fully\nqualified domain, it must include the protocol (<code>http://</code> or <code>https://</code>).  If\nnot, it is assumed to be an absolute path based on the current\n<code>window.location</code>.  (It is possible to define it with a \":\"-prefixed port,\nsuch as \":8080/hastexo-xblock/\", for use in devstacks). (Default:\n<code>/hastexo-xblock/</code>)</p>\n</li>\n<li>\n<p><code>launch_timeout</code>: How long to wait for a stack to be launched, in seconds.\n(Default: <code>900</code>)</p>\n</li>\n<li>\n<p><code>remote_exec_timeout</code>: How long to wait for a command to be executed remotely\nover SSH, in seconds.  (Default: <code>300</code>)</p>\n</li>\n<li>\n<p><code>suspend_timeout</code>: How long to wait before suspending a stack, after the last\nkeepalive was received from the browser, in seconds.  (Default: <code>120</code>)</p>\n</li>\n<li>\n<p><code>suspend_interval</code>: The period between suspend job launches. (Default: <code>60</code>)</p>\n</li>\n<li>\n<p><code>suspend_concurrency</code>: How many stacks to suspend on each job run. (Default:\n<code>4</code>)</p>\n</li>\n<li>\n<p><code>suspend_task_timeout</code>: How long to wait for a stack to be suspended, in\nseconds.  (Default: <code>900</code>)</p>\n</li>\n<li>\n<p><code>check_timeout</code>: How long to wait before a check progress task fails.\n(Default: <code>120</code>)</p>\n</li>\n<li>\n<p><code>delete_age</code>: Delete stacks that haven't been resumed in this many days.  Set\nto 0 to disable. (Default: 14)</p>\n</li>\n<li>\n<p><code>delete_interval</code>: The period between reaper job launches. (Default:\n<code>3600</code>)</p>\n</li>\n<li>\n<p><code>delete_attempts</code>: How many times to insist on deletion after a failure.\n(Default: <code>3</code>)</p>\n</li>\n<li>\n<p><code>delete_task_timeout</code>: How long to wait for a stack to be deleted, in\nseconds.  (Default: <code>900</code>)</p>\n</li>\n<li>\n<p><code>js_timeouts</code>:</p>\n<ul>\n<li>\n<p><code>status</code>: In the browser, when launching a stack, how long to wait\nbetween polling attempts until it is complete, in milliseconds (Default:\n<code>15000</code>)</p>\n</li>\n<li>\n<p><code>keepalive</code>: In the browser, after the stack is ready, how long to wait\nbetween keepalives to the server, in milliseconds. (Default: <code>30000</code>)</p>\n</li>\n<li>\n<p><code>idle</code>: In the browser, how long to wait until the user is considered\nidle, when no input is registered in the terminal, in milliseconds.\n(Default: <code>3600000</code>)</p>\n</li>\n<li>\n<p><code>check</code>: In the browser, after clicking \"Check Progress\", how long to\nwait between polling attempts, in milliseconds. (Default: <code>5000</code>)</p>\n</li>\n</ul>\n</li>\n<li>\n<p><code>providers</code>: A dictionary of OpenStack providers that course authors can pick\nfrom.  Each entry is itself a dictionary containing provider configuration\nparameters.  You must configure at least one, named \"default\".  The following\nis a list of supported parameters:</p>\n<ul>\n<li><code>type</code>: The provider type.  Currently \"openstack\" or \"gcloud\".  Defaults\nto \"openstack\" if not provided, for backwards-compatibility.</li>\n</ul>\n<p>The following apply to OpenStack only:</p>\n<ul>\n<li>\n<p><code>os_auth_url</code>: OpenStack auth URL.</p>\n</li>\n<li>\n<p><code>os_auth_token</code>: OpenStack auth token.</p>\n</li>\n<li>\n<p><code>os_username</code>: OpenStack user name.</p>\n</li>\n<li>\n<p><code>os_password</code>: OpenStack password.</p>\n</li>\n<li>\n<p><code>os_user_id</code>: OpenStack user id.</p>\n</li>\n<li>\n<p><code>os_user_domain_id</code>: OpenStack domain id.</p>\n</li>\n<li>\n<p><code>os_user_domain_name</code>: OpenStack domain name.</p>\n</li>\n<li>\n<p><code>os_project_id</code>: OpenStack project id.</p>\n</li>\n<li>\n<p><code>os_project_name</code>: OpenStack project name.</p>\n</li>\n<li>\n<p><code>os_project_domain_id</code>: OpenStack project domain id.</p>\n</li>\n<li>\n<p><code>os_project_domain_name</code>: OpenStack project domain name.</p>\n</li>\n<li>\n<p><code>os_region_name</code>: OpenStack region name.</p>\n</li>\n</ul>\n<p>The following apply to Gcloud only.  All values aside from region can be\nobtained by creating a <a href=\"https://console.developers.google.com/iam-admin/serviceaccounts\" rel=\"nofollow\">service\naccount</a>\nand downloading the JSON-format key:</p>\n<ul>\n<li>\n<p><code>gc_deploymentmanager_api_version</code>: The deployment service api version.\n(Default: \"v2\")</p>\n</li>\n<li>\n<p><code>gc_compute_api_version</code>: The compute service api version. (Default: \"v1\")</p>\n</li>\n<li>\n<p><code>gc_type</code>: The type of account, currently only <code>service_account</code>.</p>\n</li>\n<li>\n<p><code>gc_project_id</code>: Gcloud project ID.</p>\n</li>\n<li>\n<p><code>gc_private_key_id</code>: Gcloud private key ID.</p>\n</li>\n<li>\n<p><code>gc_private_key</code>: Gcloud private key, in its entirety.</p>\n</li>\n<li>\n<p><code>gc_client_email</code>: Gcloud client email.</p>\n</li>\n<li>\n<p><code>gc_client_id</code>: Gcloud cliend ID.</p>\n</li>\n<li>\n<p><code>gc_auth_uri</code>: Gcloud auth URI.</p>\n</li>\n<li>\n<p><code>gc_token_uri</code>: Gcloud token URI.</p>\n</li>\n<li>\n<p><code>gc_auth_provider_x509_cert_url</code>: Gcloud auth provider cert URL.</p>\n</li>\n<li>\n<p><code>gc_client_x509_cert_url</code>: Gcloud client cert URL.</p>\n</li>\n<li>\n<p><code>gc_region_id</code>: Gcloud region where labs will be launched.</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Creating an orchestration template for your course</h2>\n<p>To use the hastexo XBlock, start by creating an orchestration template and\nuploading it to the content store.  The XBlock imposes some constraints on the\ntemplate (detailed below), but you are otherwise free to customize your\ntraining environment as needed.</p>\n<p>To ensure your template has the required configuration:</p>\n<ol>\n<li>\n<p>Configure the template to accept a \"run\" parameter, which will contain\ninformation about the course run where the XBlock is instanced.  This is\nintended to give course authors a way to, for example, tie this to a\nspecific virtual image when launching VMs.</p>\n</li>\n<li>\n<p>If your orchestration engine allows it, configure the template to generate\nan SSH key pair dynamically and save the private key.</p>\n</li>\n<li>\n<p>In addition, if using RDP or VNC you must generate a random password and\nassign it to the stack user.</p>\n</li>\n<li>\n<p>Configure the template to have at least one instance that is publicly\naccessible via an IPv4 address.</p>\n</li>\n<li>\n<p>Provide the following outputs with these exact names:</p>\n<ul>\n<li>\n<p><code>public_ip</code>: The publically accessible instance.</p>\n</li>\n<li>\n<p><code>private_key</code>: The generated passphrase-less SSH private key.</p>\n</li>\n<li>\n<p><code>password</code>: The generated password. (OPTIONAL)</p>\n</li>\n<li>\n<p><code>reboot_on_resume</code>: A list of servers to be rebooted upon resume.  This\nis meant primarily as a workaround to resurrect servers that use nested\nKVM, as the latter does not support a managed save and subsequent\nrestart. (OPTIONAL, DEPRECATED)</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Upload the template to the content store and make a note of its static asset\nfile name.</p>\n</li>\n</ol>\n<h3>Heat examples</h3>\n<p>A sample Heat template is provided under <code>samples/hot/sample-template.yaml</code>.</p>\n<p>Accepting the run parameter:</p>\n<pre><code>```\nrun:\n  type: string\n  description: Stack run\n```\n</code></pre>\n<p>Generating an SSH key pair:</p>\n<pre><code>```\ntraining_key:\n  type: OS::Nova::KeyPair\n  properties:\n    name: { get_param: 'OS::stack_name' }\n    save_private_key: true\n```\n</code></pre>\n<p>Generating a random password and setting it:</p>\n<pre><code>```\nstack_password:\n  type: OS::Heat::RandomString\n  properties:\n    length: 32\n\ncloud_config:\n  type: OS::Heat::CloudConfig\n  properties:\n    cloud_config:\n      chpasswd:\n        list:\n          str_replace:\n            template: \"user:{password}\"\n            params:\n              \"{password}\": { get_resource: stack_password }\n```\n</code></pre>\n<p>Defining the outputs:</p>\n<pre><code>```\noutputs:\n  public_ip:\n    description: Floating IP address of deploy in public network\n    value: { get_attr: [ deploy_floating_ip, floating_ip_address ] }\n  private_key:\n    description: Training private key\n    value: { get_attr: [ training_key, private_key ] }\n  password:\n    description: Stack password\n    value: { get_resource: stack_password }\n  reboot_on_resume:\n    description: Servers to be rebooted after resume\n    value:\n      - { get_resource: server1 }\n      - { get_resource: server2 }\n```\n</code></pre>\n<h3>Gcloud examples</h3>\n<p>A sample Gcloud template is provided under <code>samples/gcloud/sample-template.yaml.jinja</code>.</p>\n<p>The Gcloud deployment manager cannot generate an SSH key or random password\nitself, so the XBlock will do it for you.  There's no need to generate them or\nprovide outputs manually.  However, you do need to make use of the ones\nprovided as properties:</p>\n<pre><code>```\nresources:\n  - name: {{ env[\"deployment\"] }}-server\n    type: compute.v1.instance\n    properties:\n      metadata:\n       items:\n       - key: user-data\n         value: |\n           #cloud-config\n           users:\n             - default\n             - name: training\n               gecos: Training User\n               groups: users,adm\n               ssh-authorized-keys:\n                 - ssh-rsa {{ properties[\"public_key\"] }}\n               lock-passwd: false\n               shell: /bin/false\n               sudo: ALL=(ALL) NOPASSWD:ALL\n           chpasswd:\n             list: |\n               training:{{ properties[\"password\"] }}\n       runcmd:\n         - echo \"exec /usr/bin/screen -xRR\" &gt;&gt; /home/training/.profile\n         - echo {{ properties[\"private_key\"] }} | base64 -d &gt; /home/training/.ssh/id_rsa\n```\n</code></pre>\n<p>Note that due to the fact that the deployment manager does not accept property\nvalues with multiple lines, the private key is base64-encoded.</p>\n<p>As for outputs, in a Gcloud template one needs only one:</p>\n<pre><code>```\noutputs:\n- name: public_ip\n  value: $(ref.{{ env[\"deployment\"] }}-server.networkInterfaces[0].accessConfigs[0].natIP)\n```\n</code></pre>\n<h2>Using the hastexo XBlock in a course</h2>\n<p>To create a stack for a student and display a terminal window where invoked,\nyou need to define the <code>hastexo</code> tag in your course content.   It must be\nconfigured with the following attributes:</p>\n<ul>\n<li>\n<p><code>stack_user_name</code>: The name of the user that the Xblock will use to connect\nto the environment, as specified in the orchestration template.</p>\n</li>\n<li>\n<p><code>protocol</code>: One of 'ssh', 'rdp', or 'vnc'.  This defines the protocol that\nwill be used to connect to the environment.  The default is 'ssh'.</p>\n</li>\n</ul>\n<p>The following are optional:</p>\n<ul>\n<li>\n<p><code>stack_template_path</code>: The static asset path to the orchestration template,\nif not specified per provider below.</p>\n</li>\n<li>\n<p><code>launch_timeout</code>: How long to wait for a stack to be launched, in seconds.\nIf unset, the global timeout will be used.</p>\n</li>\n</ul>\n<p>You can also use the following nested XML options:</p>\n<ul>\n<li>\n<p><code>providers</code>: A list of references to providers configured in the platform.\nEach <code>name</code> attribute must match one of the providers in the XBlock\nconfiguration. <code>capacity</code> specifies how many environments should be launched\nin that provider at maximum (where \"-1\" means keep launching environments\nuntil encountering a launch failure, and \"0\" disables the provider).\n<code>template</code> is the content store path to the orchestration template (if not\ngiven, <code>stack_template_path</code> will be used).  <code>environment</code> specifies a\ncontent store path to a either a Heat environment file, or, if using Gcloud,\na YAML list of properties.  If no providers are specified, the platform\ndefault will be used.</p>\n</li>\n<li>\n<p><code>ports</code>: A list of ports the user can manually choose to connect to.  This is\nintended as a means of providing a way to connect directly to multiple VMs in\na lab environment, via port forwarding or proxying at the VM with the public\nIP address.  Each <code>name</code> attribute will be visible to the user.  The <code>number</code>\nattribute specifies the corresponding port.</p>\n</li>\n<li>\n<p><code>tests</code>: A list of test scripts.  The contents of each element will be run\nverbatim a a script in the user's lab environment, when they click the \"Check\nProgress\" button.  As such, each script should define an interpreter via the\n\"shebang\" convention.  If any scripts fail with a retval greater than 0, the\nlearner gets a partial score for this instance of the XBlock.  In this case,\nthe <code>stderr</code> of failed scripts will be displayed to the learner as a list of\nhints on how to proceed.</p>\n</li>\n</ul>\n<p>For example, in XML:</p>\n<pre><code>&lt;vertical url_name=\"lab_introduction\"&gt;\n  &lt;hastexo xmlns:option=\"http://code.edx.org/xblock/option\"\n    url_name=\"lab_introduction\"\n    stack_user_name=\"training\"\n    protocol=\"rdp\"&gt;\n    &lt;option:providers&gt;\n      - name: provider1\n        capacity: 20\n        template: hot_lab1_template.yaml\n        environment: hot_lab1_env.yaml\n      - name: provider2\n        capacity: 30\n        template: gcloud_lab1_template.yaml\n        environment: gcloud_lab1_config.yaml\n    &lt;/option:providers&gt;\n    &lt;option:ports&gt;\n      - name: server1\n        number: 3389\n      - name: server2\n        number: 3390\n    &lt;/option:ports&gt;\n    &lt;option:tests&gt;&lt;![CDATA[\n      - |\n        #!/bin/bash\n        # Check for login on vm1\n        logins=$(ssh vm1 last root | grep root | wc -l)\n        if [ $logins -lt 1 ]; then\n          # Output a hint to stderr\n          echo \"You haven't logged in to vm1, yet.\" &gt;&amp;2\n          exit 1\n        fi\n        exit 0\n      - |\n        #!/bin/bash\n        # Check for file\n        file=foobar\n        if [ ! -e ${file} ]; then\n          # Output a hint to stderr\n          echo \"File \\\"${file}\\\" doesn't exist.\" &gt;&amp;2\n          exit 1\n        fi\n        exit 0\n    ]]&gt;&lt;/option:tests&gt;\n  &lt;/hastexo&gt;\n&lt;/vertical&gt;\n</code></pre>\n<p><strong>Important</strong>: Do this only <em>once per section</em>. Defining it more than once\nper section is not supported.</p>\n<p>Note on tests: as seen in the above example, it is recommended to wrap them all\nin <code>&lt;![CDATA[..]]&gt;</code> tags.  This avoids XML parsing errors when special\ncharacters are encountered, such as the <code>&gt;&amp;2</code> used to output to stderr in bash.</p>\n<p>In order to add the hastexo Xblock through Studio, open the unit where you want\nit to go.  Add a new component, select <code>Advanced</code>, then select the <code>Lab</code>\ncomponent.  This adds the XBlock.  Edit the Settings as explained above.</p>\n<h3>Using the hastexo XBlock in a content library</h3>\n<p>This XBlock is usable in <a href=\"https://edx.readthedocs.io/projects/open-edx-building-and-running-a-course/en/latest/course_components/libraries.html\" rel=\"nofollow\">content libraries</a>.\nIt supports adding lab instructions as child blocks, so that when the block is\nrandomized, the instructions are bundled together with it.</p>\n<p>To add the XBlock to the library via Studio, make sure it is configured as one\nof the <code>ADVANCED_PROBLEM_TYPES</code> in <code>cms.env.json</code>, then select it as such when\nadding content to your library.  (Note: as of Open edX Ironwood, the ability to\ndo so requires running a <a href=\"https://github.com/hastexo/edx-platform/tree/hastexo/ironwood/free_the_library\" rel=\"nofollow\">patched version</a>\nof <code>edx-platform</code>.)</p>\n<p>The following child block types are currently supported:</p>\n<pre><code>* html\n* video\n* [pdf](https://github.com/MarCnu/pdfXBlock)\n</code></pre>\n<p>If using OLX, html blocks can be defined separately in the <code>html</code> subdirectory\nas usual, with the child element referring to it by URL name:</p>\n<pre><code>&lt;vertical url_name=\"lab_introduction\"&gt;\n  &lt;hastexo ...&gt;\n    &lt;html url_name=\"lab_instructions\"&gt;\n  &lt;/hastexo&gt;\n&lt;/vertical&gt;\n</code></pre>\n<p>Child blocks will always be rendered <em>above</em> the terminal.</p>\n<h2>Student experience</h2>\n<p>When students navigate to a unit with a hastexo XBlock in it, a new Heat\nstack will be created (or resumed) for them. The Heat stack will be as defined\nin the uploaded Heat template. It is unique per student and per course run. If\nthe same tag appears on a different course, or different run of the same\ncourse, the student will get a different stack.</p>\n<p>The stack will suspend if the student does not navigate to the <code>hastexo</code> unit\nin that section within the default two minutes (configurable via settings, as\nexplained above). When the student gets to the <code>hastexo</code> unit, the stack will\nbe resumed and they will be connected automatically and securely. They will not\nneed a username, password, or host prompts to their personal lab environment.\nThis happens transparently in the browser.</p>\n<p>The student can work at their own pace in their environment. However, when\na student closes the browser where the <code>hastexo</code> unit is displayed, or if they\nput their computer to sleep, a countdown is started. If the student does not\nreopen the environment within two minutes their stack will be suspended. When\na student comes back to the lab environment to finish the exercise, their\nstack is resumed automatically.  They are connected to the same training\nenvironment they were working with before, in the <em>same state</em> they left it in.\n(The process of suspension works just like in a home computer.)</p>\n<h2>Django admin page</h2>\n<p>To facilitate management of stack states without direct access to the database,\na Django admin page is provided as a frontend for the <code>hastexo_stack</code> table.\nTo access it, go to the following as a superuser:</p>\n<p><a href=\"https://lms.example.com/admin/hastexo/stack\" rel=\"nofollow\">https://lms.example.com/admin/hastexo/stack</a></p>\n<p>The following features are currently implemented:</p>\n<ul>\n<li>\n<p>Searching: Search for a stack's name, course ID, status, and provider.</p>\n</li>\n<li>\n<p>Filtering: On the filter tab to the right, it is possible to select from a\npreset list of three filters: <code>course_id</code>, <code>status</code>, and <code>provider</code>.  The\npreset values are generated on the fly from existing records.</p>\n</li>\n<li>\n<p>On-list editing: modify multiple stack's states or providers directly from\nthe main list.</p>\n</li>\n<li>\n<p>Marking stacks as deleted in bulk: to quickly change multiple stack states to\n<code>DELETE_COMPLETE</code>, and to reset their providers to \"\", select multiple stacks\nand use the \"Mark selected stacks as DELETE_COMPLETE\" action from the action\ndropdown.</p>\n</li>\n<li>\n<p>Displaying owner's email: when opening a stack's edit form (by clicking on\nits name), the owner's email is displayed.</p>\n</li>\n</ul>\n<p>When changing providers, only the ones enabled by the author for the course in\nquestion are displayed.  If none are present, then the list is expanded with\nthe full set of providers configured in the platform.</p>\n<p>The list of states is similarly limited to a known set of possibilities, but no\nfurther validation is made.</p>\n<p>Furthermore, the following are not currently possible:</p>\n<ul>\n<li>\n<p>Displaying the owner's email on the main list</p>\n</li>\n<li>\n<p>Searching for a stack owner's email</p>\n</li>\n<li>\n<p>Adding a stack record</p>\n</li>\n</ul>\n<p>Note that making changes to the <code>hastexo_stack</code> table does not affect the\nstacks themselves.  In other words, deleting an existing stack here will merely\ndelete its database record: not only will the stack itself continue to exist,\nbut the XBlock will cease to handle it automatically (such as suspending or\ndeleting it) until such time as the learner relaunches it.  The admin page is\nonly offered as a convenient way to manually synchronize the database with\nactual stack states in case of failure.  It should not be necessary to do so in\nday-to-day usage of the XBlock.</p>\n<h2>Usage in devstack</h2>\n<p>It is possible to use this XBlock in devstack.  To do so, however, requires\ntweaking a few settings.</p>\n<p>First, devstacks don't install nginx.  Therefore, the Guacamole app is only\nreachable directly at its configured port.  This means that <code>terminal_url</code> in\nthe XBlock settings must be set to that port (by default, 8080):</p>\n<pre><code>```\n\"XBLOCK_SETTINGS\": {\n    \"hastexo\": {\n        \"terminal_url\": \":8080/hastexo-xblock/\"\n    }\n}\n```\n</code></pre>\n<p>Next, open three terminal windows, and run each of the following concurrently:</p>\n<pre><code>```\npaver devstack lms --settings=devstack_with_worker\n./manage.py lms celery worker --settings=devstack_with_worker -l DEBUG\n./manage.py lms --settings=devstack_with_worker suspender\n./manage.py lms --settings=devstack_with_worker reaper\n```\n</code></pre>\n<h2>Running tests</h2>\n<p>The testing framework is built on\n<a href=\"https://tox.readthedocs.io/\" rel=\"nofollow\">tox</a>. After installing tox, you can\nsimply run <code>tox</code> from your Git checkout of this repository.</p>\n<p>In addition, you can run <code>tox -r</code> to throw away and rebuild the\ntesting virtualenv, or <code>tox -e flake8</code> to run only PEP-8 checks, as\nopposed to the full test suite.</p>\n<h2>License</h2>\n<p>This XBlock is licensed under the Affero GPL; see <a href=\"LICENSE\" rel=\"nofollow\"><code>LICENSE</code></a>\nfor details.</p>\n\n          </div>"}, "last_serial": 7171436, "releases": {"0.4.2": [{"comment_text": "", "digests": {"md5": "1273b8cc1b632069fdf281bf2d75cec1", "sha256": "f9b2e373d93653d4ec93211958b88030b395d57d43df1b32f222976e1e533ce7"}, "downloads": -1, "filename": "hastexo-xblock-0.4.2.tar.gz", "has_sig": true, "md5_digest": "1273b8cc1b632069fdf281bf2d75cec1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23058, "upload_time": "2017-01-10T22:05:58", "upload_time_iso_8601": "2017-01-10T22:05:58.247238Z", "url": "https://files.pythonhosted.org/packages/21/5f/827ee9bd5db46ff233e79da9dd0fc1848a2dd6c6c61084b6427db95dd6e4/hastexo-xblock-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "d6e944ec1d0351b1b010dbdda709f0a1", "sha256": "88e837a7e2b16c8e2b8083edfff1efe96b1d2e863a6a1376da8884cd448dfdbd"}, "downloads": -1, "filename": "hastexo-xblock-0.4.3.tar.gz", "has_sig": true, "md5_digest": "d6e944ec1d0351b1b010dbdda709f0a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23155, "upload_time": "2017-01-17T16:39:31", "upload_time_iso_8601": "2017-01-17T16:39:31.408722Z", "url": "https://files.pythonhosted.org/packages/06/fb/eccba6bddb569d9096f4b9a396a3931672ca16068575905c63d7fc199dbe/hastexo-xblock-0.4.3.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "c5b9032669a5f23ec0069845be1b4778", "sha256": "a7a332a05a4ef4638a6601be096ec3b5bbc909992f859c515fdda10ac810d8d4"}, "downloads": -1, "filename": "hastexo-xblock-0.5.0.tar.gz", "has_sig": true, "md5_digest": "c5b9032669a5f23ec0069845be1b4778", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22321, "upload_time": "2017-03-15T15:05:24", "upload_time_iso_8601": "2017-03-15T15:05:24.919320Z", "url": "https://files.pythonhosted.org/packages/2c/49/ddf0f83f5b030b2320880b34a8dd74954ad2f61ad58bd6b75c28e352cfba/hastexo-xblock-0.5.0.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "c4192f320bf88ed2d21b7b600a3a01d8", "sha256": "7c77fc000372a02d83f9ebd6fb1951b35465b2cd06abe1cbd24894c12c622d27"}, "downloads": -1, "filename": "hastexo-xblock-0.5.3.tar.gz", "has_sig": true, "md5_digest": "c4192f320bf88ed2d21b7b600a3a01d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23047, "upload_time": "2017-05-16T14:32:56", "upload_time_iso_8601": "2017-05-16T14:32:56.642028Z", "url": "https://files.pythonhosted.org/packages/70/92/81747a40e70451bcb73c002094869eb19c8438ff9827af97b70008b74f56/hastexo-xblock-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "451a1fa718ad3b5d00fd1f278b55d495", "sha256": "1c1aedffa2ad879bfa242bccd2c18a87def4922ab107d0872ba0a6f48b0a166b"}, "downloads": -1, "filename": "hastexo-xblock-0.5.4.tar.gz", "has_sig": true, "md5_digest": "451a1fa718ad3b5d00fd1f278b55d495", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23051, "upload_time": "2017-06-27T15:31:26", "upload_time_iso_8601": "2017-06-27T15:31:26.895887Z", "url": "https://files.pythonhosted.org/packages/e5/9f/4b06ea453665f523e4e493b753446eae054a10b6ce2b13d5a0241dcd61e4/hastexo-xblock-0.5.4.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "e6ba4d6656275b26421b589164dd5ddf", "sha256": "44481c49b35b4fb40e3531044f18becaa56cabc978512ae06c4db15073d1c8d4"}, "downloads": -1, "filename": "hastexo-xblock-2.0.0.tar.gz", "has_sig": true, "md5_digest": "e6ba4d6656275b26421b589164dd5ddf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24495, "upload_time": "2018-02-28T19:45:31", "upload_time_iso_8601": "2018-02-28T19:45:31.563695Z", "url": "https://files.pythonhosted.org/packages/b3/40/edcde09723d06bdff51b230abae3e5d55705bf218d1c0b28aa75e2300097/hastexo-xblock-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "0d165afc53d9673c7be3f2a25888ec08", "sha256": "ce55b5b3ab4be33187846fd5f8599f00d232db27e73cb4e700865ebe891ece9e"}, "downloads": -1, "filename": "hastexo-xblock-2.0.1.tar.gz", "has_sig": true, "md5_digest": "0d165afc53d9673c7be3f2a25888ec08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24488, "upload_time": "2018-03-02T15:17:22", "upload_time_iso_8601": "2018-03-02T15:17:22.363613Z", "url": "https://files.pythonhosted.org/packages/fa/65/60b3ad32b964b4263e8a0bc5a36d87e3b3d494f927829dc999889b18fe95/hastexo-xblock-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "9dc76747a485eaf14fdc526d63828e3d", "sha256": "41c6ffd3d112ffe156416a1a005db0348511b372eeec5b1b329a0c3e37d87ad3"}, "downloads": -1, "filename": "hastexo-xblock-2.0.2.tar.gz", "has_sig": true, "md5_digest": "9dc76747a485eaf14fdc526d63828e3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30484, "upload_time": "2018-03-13T12:36:38", "upload_time_iso_8601": "2018-03-13T12:36:38.706364Z", "url": "https://files.pythonhosted.org/packages/45/0d/34c562b1d5d61a06e74be922a3d0fd9b4ac530b6223a9ac2c60a35b20685/hastexo-xblock-2.0.2.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "3a0eae3491ef5ca687a9e62d7e3f21b2", "sha256": "8d099f3c3a1222951815316fbe28f23bd47f892212609a96c8e7902e3136fcd6"}, "downloads": -1, "filename": "hastexo-xblock-2.1.0.tar.gz", "has_sig": true, "md5_digest": "3a0eae3491ef5ca687a9e62d7e3f21b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27245, "upload_time": "2018-04-04T16:23:24", "upload_time_iso_8601": "2018-04-04T16:23:24.093770Z", "url": "https://files.pythonhosted.org/packages/55/60/ae929b57d77787771c3b1cbd78796becb1418fbf96a053e6bf8e920d1398/hastexo-xblock-2.1.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "bb65eaacf159bda2f7faaa310452a06f", "sha256": "b9e802663c2749246e19c380eaa6be7561e518009eb7717c35a87e695b844319"}, "downloads": -1, "filename": "hastexo-xblock-2.2.0.tar.gz", "has_sig": true, "md5_digest": "bb65eaacf159bda2f7faaa310452a06f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30189, "upload_time": "2018-04-24T18:23:29", "upload_time_iso_8601": "2018-04-24T18:23:29.200426Z", "url": "https://files.pythonhosted.org/packages/a0/a3/feefa70d86dab17b5de24b0223310bc7f30763a8681433327c5a5c21cd07/hastexo-xblock-2.2.0.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "9a619b295873ac3922d2185a94d81921", "sha256": "79f667cd19276135c16ebfaa25eb2650fa191c40591295955d7e05536ebff51f"}, "downloads": -1, "filename": "hastexo-xblock-2.3.0.tar.gz", "has_sig": true, "md5_digest": "9a619b295873ac3922d2185a94d81921", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28953, "upload_time": "2018-05-22T14:06:44", "upload_time_iso_8601": "2018-05-22T14:06:44.788224Z", "url": "https://files.pythonhosted.org/packages/5f/49/c8b89c2e88d139a433e2c82866c5232d4c886fca9fb35ca13cc6cce8fc35/hastexo-xblock-2.3.0.tar.gz", "yanked": false}], "2.3.1": [{"comment_text": "", "digests": {"md5": "f66458fa208e7862a4e3b084db84ee26", "sha256": "1650a56ad1cae23c83758f81fb95f943d443e214d6077f89ed19d4c6fe73d4d4"}, "downloads": -1, "filename": "hastexo-xblock-2.3.1.tar.gz", "has_sig": true, "md5_digest": "f66458fa208e7862a4e3b084db84ee26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28964, "upload_time": "2018-06-07T15:21:42", "upload_time_iso_8601": "2018-06-07T15:21:42.782738Z", "url": "https://files.pythonhosted.org/packages/f9/95/8e4a0dce97c349257b338902ca78370e66f3b9edda19d22f019987a48f54/hastexo-xblock-2.3.1.tar.gz", "yanked": false}], "2.3.2": [{"comment_text": "", "digests": {"md5": "6236da8afa9e12920f7d30d5f9049095", "sha256": "9537918f924e5b3e9b898c4190c55289cb846f04191d5cec5486b6dd47b811cf"}, "downloads": -1, "filename": "hastexo-xblock-2.3.2.tar.gz", "has_sig": true, "md5_digest": "6236da8afa9e12920f7d30d5f9049095", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29227, "upload_time": "2018-07-03T19:55:15", "upload_time_iso_8601": "2018-07-03T19:55:15.087665Z", "url": "https://files.pythonhosted.org/packages/5a/a6/4a04d2d13d392b4b36adfd40ca01f49e0fdcb020ec07cad7e6414c31e1f5/hastexo-xblock-2.3.2.tar.gz", "yanked": false}], "2.3.3": [{"comment_text": "", "digests": {"md5": "4682755b3116f612921041bad18fa12b", "sha256": "596d99ebeec9105e5bf0333d920a8c1edae87c4775ccd9565d292747eb76b2b3"}, "downloads": -1, "filename": "hastexo-xblock-2.3.3.tar.gz", "has_sig": true, "md5_digest": "4682755b3116f612921041bad18fa12b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29231, "upload_time": "2018-08-01T17:47:54", "upload_time_iso_8601": "2018-08-01T17:47:54.663380Z", "url": "https://files.pythonhosted.org/packages/c1/26/b89bdfd70d966c51c8568d1f92d1ffba43f0c797a8c8a23790b1e47c2912/hastexo-xblock-2.3.3.tar.gz", "yanked": false}], "2.3.4": [{"comment_text": "", "digests": {"md5": "cbce0e9c986453199db265b227f3d4d5", "sha256": "512a815b059f93bcdd2db4d5377eb98c78ffcca7865b80affb6d5a2022e27c7c"}, "downloads": -1, "filename": "hastexo-xblock-2.3.4.tar.gz", "has_sig": true, "md5_digest": "cbce0e9c986453199db265b227f3d4d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29731, "upload_time": "2018-10-15T12:38:02", "upload_time_iso_8601": "2018-10-15T12:38:02.374010Z", "url": "https://files.pythonhosted.org/packages/db/c7/2085d0e1ff109c655ce6b530106c487d91caf069737c8b92aaeaa0a2d708/hastexo-xblock-2.3.4.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "6831b9627637fbf3673a4c9e6478c125", "sha256": "1bbaa76f68533caf8083fa61f7c7cf64f8fc3721bdf06eed6ae09079e31b2137"}, "downloads": -1, "filename": "hastexo-xblock-2.4.0.tar.gz", "has_sig": true, "md5_digest": "6831b9627637fbf3673a4c9e6478c125", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29178, "upload_time": "2018-09-02T17:07:45", "upload_time_iso_8601": "2018-09-02T17:07:45.463557Z", "url": "https://files.pythonhosted.org/packages/20/ef/e5c80927dfccbd274aa1628d2f8723fd023c169992146837e9993ffe9874/hastexo-xblock-2.4.0.tar.gz", "yanked": false}], "2.4.1": [{"comment_text": "", "digests": {"md5": "b846b2d03f681afb949d32aa81df6a93", "sha256": "91e658c9676114972750dd3822f00962a305a9b0c19cbc4426ea47194a176916"}, "downloads": -1, "filename": "hastexo-xblock-2.4.1.tar.gz", "has_sig": true, "md5_digest": "b846b2d03f681afb949d32aa81df6a93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29696, "upload_time": "2018-10-14T20:22:22", "upload_time_iso_8601": "2018-10-14T20:22:22.331606Z", "url": "https://files.pythonhosted.org/packages/17/fe/ff58545142c8139dc36d6856b30e3509cbdf762ef872856d8b6187def124/hastexo-xblock-2.4.1.tar.gz", "yanked": false}], "2.5.0": [{"comment_text": "", "digests": {"md5": "3d73062b1bdfa3cbbbd329e7cdbcb607", "sha256": "d4f8e5c0cebe2cbd13fd76b48f7025b3559a438e08cc4c052e6af963587214d1"}, "downloads": -1, "filename": "hastexo-xblock-2.5.0.tar.gz", "has_sig": true, "md5_digest": "3d73062b1bdfa3cbbbd329e7cdbcb607", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28702, "upload_time": "2018-10-31T21:16:35", "upload_time_iso_8601": "2018-10-31T21:16:35.638170Z", "url": "https://files.pythonhosted.org/packages/31/64/357854b631296927f2837e9860826c00f13451d22109d8866e2983f63e64/hastexo-xblock-2.5.0.tar.gz", "yanked": false}], "2.5.1": [{"comment_text": "", "digests": {"md5": "9731082cec31c0a505b3e4be2fdf051e", "sha256": "91bf1c721f87a3c9ef05a2cad48fe76f8687b37a1532afeefda04e9ed85d178b"}, "downloads": -1, "filename": "hastexo-xblock-2.5.1.tar.gz", "has_sig": true, "md5_digest": "9731082cec31c0a505b3e4be2fdf051e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34377, "upload_time": "2018-11-07T20:50:50", "upload_time_iso_8601": "2018-11-07T20:50:50.868686Z", "url": "https://files.pythonhosted.org/packages/0a/6c/d8692043c54331b8aa47cff99109a1957d00437747fe41b3226b939eccf6/hastexo-xblock-2.5.1.tar.gz", "yanked": false}], "2.5.2": [{"comment_text": "", "digests": {"md5": "690d2043168594ed96bc860444f183e8", "sha256": "041f424ab5e702dddeaec2c8a6b80a28f58c8349454657e7498261ebfbdc5dff"}, "downloads": -1, "filename": "hastexo-xblock-2.5.2.tar.gz", "has_sig": true, "md5_digest": "690d2043168594ed96bc860444f183e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34463, "upload_time": "2018-11-09T23:36:18", "upload_time_iso_8601": "2018-11-09T23:36:18.835515Z", "url": "https://files.pythonhosted.org/packages/eb/27/680451bf191e31841ca51f5e5d8f9f5003266f39ecd2cc5814d5262d4331/hastexo-xblock-2.5.2.tar.gz", "yanked": false}], "2.5.3": [{"comment_text": "", "digests": {"md5": "f484b674da0cca674bdaf9feeb3c12e5", "sha256": "ff82f417800c61a55135f4db1e8727f05c2be8bdcba0e8ac4db51b9adee03e17"}, "downloads": -1, "filename": "hastexo-xblock-2.5.3.tar.gz", "has_sig": true, "md5_digest": "f484b674da0cca674bdaf9feeb3c12e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31386, "upload_time": "2018-12-03T14:24:40", "upload_time_iso_8601": "2018-12-03T14:24:40.084126Z", "url": "https://files.pythonhosted.org/packages/10/07/1ede0e592e9182b914b51d8cbe58b87660ae2921c60c9a002b8dd2fe4854/hastexo-xblock-2.5.3.tar.gz", "yanked": false}], "2.5.4": [{"comment_text": "", "digests": {"md5": "22f129f50063e4cc8512b09488d59f86", "sha256": "28917853c4989742650c86aaf57e6a31334b5ba613a2e0880ce29528fa618b7a"}, "downloads": -1, "filename": "hastexo-xblock-2.5.4.tar.gz", "has_sig": true, "md5_digest": "22f129f50063e4cc8512b09488d59f86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31479, "upload_time": "2018-12-19T09:46:18", "upload_time_iso_8601": "2018-12-19T09:46:18.525631Z", "url": "https://files.pythonhosted.org/packages/28/bf/0ec2bb3cce46b8e265da72fce232d0024abb7c8c42611b1e00e92fce2de2/hastexo-xblock-2.5.4.tar.gz", "yanked": false}], "2.5.6": [{"comment_text": "", "digests": {"md5": "e419b3787597726a12cc675d57723b8d", "sha256": "0033f848acfa497ad44f934fa06d0395aa029f4fe8a5a0160d073db8809e27ed"}, "downloads": -1, "filename": "hastexo-xblock-2.5.6.tar.gz", "has_sig": true, "md5_digest": "e419b3787597726a12cc675d57723b8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31558, "upload_time": "2019-02-07T11:38:10", "upload_time_iso_8601": "2019-02-07T11:38:10.701880Z", "url": "https://files.pythonhosted.org/packages/8a/43/df2cc29c9dc742d6b24a506cfa6397e2969077bf5cea6cd6136b907e5161/hastexo-xblock-2.5.6.tar.gz", "yanked": false}], "2.6.0": [{"comment_text": "", "digests": {"md5": "d67ad324b83fdde1498bfe6ba8baf69c", "sha256": "f36a071cbb5a8604dff12c1fba77a361e249e76b1234aea733ba461318d2b6b5"}, "downloads": -1, "filename": "hastexo-xblock-2.6.0.tar.gz", "has_sig": true, "md5_digest": "d67ad324b83fdde1498bfe6ba8baf69c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66949, "upload_time": "2019-03-06T19:44:45", "upload_time_iso_8601": "2019-03-06T19:44:45.510314Z", "url": "https://files.pythonhosted.org/packages/55/e7/d2a7e363cb345bdc64cbe85cd713ab994f8182b6cc123ec4cd9908e0a3e4/hastexo-xblock-2.6.0.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "8cce7934c7a0dfd026e20c1d5fe9b632", "sha256": "219f50b56ae945980c283f1a3c08a5c65617b7cd5a47311bdfe69301ad00524d"}, "downloads": -1, "filename": "hastexo-xblock-3.0.0.tar.gz", "has_sig": true, "md5_digest": "8cce7934c7a0dfd026e20c1d5fe9b632", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79726, "upload_time": "2019-07-18T20:42:55", "upload_time_iso_8601": "2019-07-18T20:42:55.476220Z", "url": "https://files.pythonhosted.org/packages/29/8b/ae0ee7ef7bc1e3831d1af9d10c21b4b7297f882ddf59598150fddf68b9d6/hastexo-xblock-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "c25f638d5e05f0fc7e651e689099ca03", "sha256": "30eab0d030a4423a223ef194818699d2a089eec7fa1c2c39991a8f7124ae309c"}, "downloads": -1, "filename": "hastexo-xblock-3.0.1.tar.gz", "has_sig": true, "md5_digest": "c25f638d5e05f0fc7e651e689099ca03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80025, "upload_time": "2019-07-23T11:44:04", "upload_time_iso_8601": "2019-07-23T11:44:04.314292Z", "url": "https://files.pythonhosted.org/packages/76/14/a81aeb17e6907370f0a536a01fa6c09280342a79c989af8f08fd31b3d74a/hastexo-xblock-3.0.1.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "6416d5736ab68b39475fbef4c4be8156", "sha256": "699fc3bca8c252415df90c79ba970c6c754ec45f2ad8cd22835736a5c46efd46"}, "downloads": -1, "filename": "hastexo-xblock-3.1.0.tar.gz", "has_sig": true, "md5_digest": "6416d5736ab68b39475fbef4c4be8156", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78338, "upload_time": "2019-07-26T10:27:27", "upload_time_iso_8601": "2019-07-26T10:27:27.002709Z", "url": "https://files.pythonhosted.org/packages/c1/73/4e9566bb9c1d1a58e05cd518a29d43305bdbfced292a253c5d7a3d5ca7f1/hastexo-xblock-3.1.0.tar.gz", "yanked": false}], "3.1.1": [{"comment_text": "", "digests": {"md5": "39438ce80176ab4a284a3c245c1ca62f", "sha256": "99e17c39736887fb89b7843de501c385bb04c1e35b09bf0d63b394adc90719e2"}, "downloads": -1, "filename": "hastexo-xblock-3.1.1.tar.gz", "has_sig": true, "md5_digest": "39438ce80176ab4a284a3c245c1ca62f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78414, "upload_time": "2019-08-02T14:53:25", "upload_time_iso_8601": "2019-08-02T14:53:25.752147Z", "url": "https://files.pythonhosted.org/packages/d8/31/a459af370dfa7123cf7d8a38c055d52084a24818f5e4a2777e9c8ed7d8e7/hastexo-xblock-3.1.1.tar.gz", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "981c9a1b4d020378544620a9edfdc7e7", "sha256": "ddd0b6f4763f198ef290be34edea46eb50b1d7ab8026d6d6cda19f0bd43972ec"}, "downloads": -1, "filename": "hastexo-xblock-3.2.0.tar.gz", "has_sig": true, "md5_digest": "981c9a1b4d020378544620a9edfdc7e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80989, "upload_time": "2019-08-13T22:13:34", "upload_time_iso_8601": "2019-08-13T22:13:34.566066Z", "url": "https://files.pythonhosted.org/packages/f1/f5/880a3f8f3e95fc34a0cd7c2c186262231ae505d8288fc2de7705e4909030/hastexo-xblock-3.2.0.tar.gz", "yanked": false}], "3.2.1": [{"comment_text": "", "digests": {"md5": "2892da016f5b8783c6665d241e4e626a", "sha256": "84ad04842b898383bd9b3b6179821ebd99fc10ba507858db31439f760ea5d1e4"}, "downloads": -1, "filename": "hastexo-xblock-3.2.1.tar.gz", "has_sig": true, "md5_digest": "2892da016f5b8783c6665d241e4e626a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81885, "upload_time": "2019-08-14T12:37:03", "upload_time_iso_8601": "2019-08-14T12:37:03.110347Z", "url": "https://files.pythonhosted.org/packages/e7/df/cc650ca9010c86683ffdb528b14b74f4b252796e55b47dc19983915fd4fa/hastexo-xblock-3.2.1.tar.gz", "yanked": false}], "3.3.0": [{"comment_text": "", "digests": {"md5": "18dff8d5d101de9328d1f9bebd2dad08", "sha256": "111f0b776081990e02deb92fe127e1de114bb77215c0d243c4e4986709dbbf8a"}, "downloads": -1, "filename": "hastexo-xblock-3.3.0.tar.gz", "has_sig": true, "md5_digest": "18dff8d5d101de9328d1f9bebd2dad08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 85352, "upload_time": "2019-12-19T20:32:15", "upload_time_iso_8601": "2019-12-19T20:32:15.860227Z", "url": "https://files.pythonhosted.org/packages/ad/9c/f173afe2193f51a307049d279dde78c1ca15c32924d2e56d7973786ec512/hastexo-xblock-3.3.0.tar.gz", "yanked": false}], "3.4.0": [{"comment_text": "", "digests": {"md5": "2ef2302dd3aefe4265ce92383c5b36ca", "sha256": "0bcc8e578f073d4e5a0d85d0a1bebafc6936a6ac00c250e93036bc1c96372e1a"}, "downloads": -1, "filename": "hastexo-xblock-3.4.0.tar.gz", "has_sig": true, "md5_digest": "2ef2302dd3aefe4265ce92383c5b36ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88797, "upload_time": "2019-12-19T20:33:02", "upload_time_iso_8601": "2019-12-19T20:33:02.480236Z", "url": "https://files.pythonhosted.org/packages/ff/b4/b34f649771bf87da04ad2a410f099021c127bf682d0bd45948155ade3091/hastexo-xblock-3.4.0.tar.gz", "yanked": false}], "3.4.1": [{"comment_text": "", "digests": {"md5": "04233a50cc1d6fdcab0319064ddebfae", "sha256": "9f0ada67985b1e937cb28a2d4c913db6cef1055a844e0cab7931ffcce35898bc"}, "downloads": -1, "filename": "hastexo-xblock-3.4.1.tar.gz", "has_sig": true, "md5_digest": "04233a50cc1d6fdcab0319064ddebfae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89809, "upload_time": "2020-01-23T23:52:09", "upload_time_iso_8601": "2020-01-23T23:52:09.918812Z", "url": "https://files.pythonhosted.org/packages/98/9d/d8c0865481e93bd7b258d4f5866339437c8567258070d9be992d51654b5a/hastexo-xblock-3.4.1.tar.gz", "yanked": false}], "3.4.2": [{"comment_text": "", "digests": {"md5": "787f41d4b37371f5e38385566d698e6f", "sha256": "deeab4f7bebc0412adcd95a407450f1873540a2f6063e047db4f6f6d9e0e1c9f"}, "downloads": -1, "filename": "hastexo-xblock-3.4.2.tar.gz", "has_sig": true, "md5_digest": "787f41d4b37371f5e38385566d698e6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89912, "upload_time": "2020-01-23T23:58:16", "upload_time_iso_8601": "2020-01-23T23:58:16.889646Z", "url": "https://files.pythonhosted.org/packages/47/0f/122202871f5cbc746a275fa890d26484ef2198a702a71eb23401a7cdd375/hastexo-xblock-3.4.2.tar.gz", "yanked": false}], "3.5.0": [{"comment_text": "", "digests": {"md5": "55e28bfeddf70588ac3a10dfb47744f9", "sha256": "098ee2087fb78b69aa4f8bf457e2d129cf56af6324f4dc08cfc6f438c4564515"}, "downloads": -1, "filename": "hastexo-xblock-3.5.0.tar.gz", "has_sig": false, "md5_digest": "55e28bfeddf70588ac3a10dfb47744f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93691, "upload_time": "2020-03-19T19:31:28", "upload_time_iso_8601": "2020-03-19T19:31:28.583938Z", "url": "https://files.pythonhosted.org/packages/75/42/7ff6da018a4950f4b5c7d24b8f30374f0075ac7bbc822487ea36f4305e7d/hastexo-xblock-3.5.0.tar.gz", "yanked": false}], "3.5.1": [{"comment_text": "", "digests": {"md5": "66c7f125162a65b77c6bc810fa5d7220", "sha256": "a4e48076228e0365fe0a1989114d6050286c1315d8d52cca74d8558cb3f8052c"}, "downloads": -1, "filename": "hastexo-xblock-3.5.1.tar.gz", "has_sig": false, "md5_digest": "66c7f125162a65b77c6bc810fa5d7220", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93794, "upload_time": "2020-03-25T14:57:27", "upload_time_iso_8601": "2020-03-25T14:57:27.072794Z", "url": "https://files.pythonhosted.org/packages/71/f4/f10fa6402ec6a3177c18b751f38c2da64229c642c84a2e3b6e96ce768e21/hastexo-xblock-3.5.1.tar.gz", "yanked": false}], "3.6.1": [{"comment_text": "", "digests": {"md5": "e8ec81f7e7132d4498f30c5ed556a741", "sha256": "976be91c7f43dc37af3b65cefdb3b758d09bb71c4abc0373098036dc0021c547"}, "downloads": -1, "filename": "hastexo-xblock-3.6.1.tar.gz", "has_sig": false, "md5_digest": "e8ec81f7e7132d4498f30c5ed556a741", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94916, "upload_time": "2020-04-16T08:39:31", "upload_time_iso_8601": "2020-04-16T08:39:31.181596Z", "url": "https://files.pythonhosted.org/packages/5c/4f/2ffd46884b8e127e4acd5b402fe1b164e959e2028ce2b4ff5761066ee852/hastexo-xblock-3.6.1.tar.gz", "yanked": false}], "3.6.2": [{"comment_text": "", "digests": {"md5": "981cc08f83a62308d7f499a61ffc93fb", "sha256": "f4ab0f2bafd4114e471d4406774960e744e80dc8075d3e5c8e0be9f274703988"}, "downloads": -1, "filename": "hastexo-xblock-3.6.2.tar.gz", "has_sig": true, "md5_digest": "981cc08f83a62308d7f499a61ffc93fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113440, "upload_time": "2020-05-05T11:49:13", "upload_time_iso_8601": "2020-05-05T11:49:13.852045Z", "url": "https://files.pythonhosted.org/packages/de/12/433ec620159cab979857c03b73fb0f1b701e15592fbf0f36804a6275f4e0/hastexo-xblock-3.6.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "981cc08f83a62308d7f499a61ffc93fb", "sha256": "f4ab0f2bafd4114e471d4406774960e744e80dc8075d3e5c8e0be9f274703988"}, "downloads": -1, "filename": "hastexo-xblock-3.6.2.tar.gz", "has_sig": true, "md5_digest": "981cc08f83a62308d7f499a61ffc93fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113440, "upload_time": "2020-05-05T11:49:13", "upload_time_iso_8601": "2020-05-05T11:49:13.852045Z", "url": "https://files.pythonhosted.org/packages/de/12/433ec620159cab979857c03b73fb0f1b701e15592fbf0f36804a6275f4e0/hastexo-xblock-3.6.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:18 2020"}