{"info": {"author": "Fatih Cagatay Akyon", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![PyPI version](https://badge.fury.io/py/psenet-text-detector.svg)](https://badge.fury.io/py/psenet-text-detector)\n![CI](https://github.com/fcakyon/psenet-text-detector/workflows/CI/badge.svg)\n\n## PSENet: Shape Robust Text Detection with Progressive Scale Expansion Network\nPackaged Version of the Pytorch implementation of PSENet text detector\n\n### Overview\nPSENet is designed as a segmentation-based detector with multiple predictions for each text instance. These predictions correspond to different `kernels' produced by shrinking the original text instance into various scales. Consequently, the final detection can be conducted through our progressive scale expansion algorithm which gradually expands the kernels with minimal scales to the text instances with maximal and complete shapes.\n\n<img width=\"1000\" alt=\"teaser\" src=\"./figures/psenet_demo.png\">\n\n## Getting started\n### Installation\n- Install using conda for Linux, Mac and Windows (preferred):\n```console\nconda install -c fcakyon psenet-text-detector\n```\n- Install using pip for Linux and Mac:\n```console\npip install psenet-text-detector\n```\n\n### Basic Usage\n```python\n# import package\nimport psenet_text_detector as psenet\n\n# set image path and export folder directory\nimage_path = 'figures/idcard.png'\noutput_dir = 'outputs/'\n\n# apply craft text detection and export detected regions to output directory\nprediction_result = psenet.detect_text(image_path, output_dir, cuda=False)\n```\n\n### Advanced Usage\n```python\n# import package\nimport psenet_text_detector as psenet\n\n# set image path and export folder directory\nimage_path = 'figures/idcard.png'\noutput_dir = 'outputs/'\n\n# read image\nimage = psenet.read_image(image_path)\n\n# load model\npsenet_model = psenet.load_psenet_model()\n\n# perform prediction\nprediction_result = psenet.get_prediction(image=image,\n                               \t\t  model=psenet_model,\n                                       \t  binary_th=1.0,\n                                       \t  kernel_num=3,\n                                       \t  upsample_scale=1,\n                                       \t  long_size=1280,\n                                       \t  min_kernel_area=10.0,\n                                       \t  min_area=300.0,\n                                       \t  min_score=0.93,\n                                       \t  cuda=True)\n\n# export detected text regions\nexported_file_paths = psenet.export_detected_regions(image_path,\n                                              \t    image,\n                                              \t    boxes=prediction_result[\"boxes\"],\n                                              \t    output_dir=output_dir)\n\n# export box visualization\n_ = psenet.visualize_detection(image_path,\n            \t\t       image=image,\n        \t\t       quads=prediction_result[\"boxes\"],\n                    \t       output_dir=output_dir)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fcakyon/psenet_text_detector", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "psenet-text-detector", "package_url": "https://pypi.org/project/psenet-text-detector/", "platform": "", "project_url": "https://pypi.org/project/psenet-text-detector/", "project_urls": {"Homepage": "https://github.com/fcakyon/psenet_text_detector"}, "release_url": "https://pypi.org/project/psenet-text-detector/0.1.1/", "requires_dist": ["torch (>=1.0.1)", "torchvision (>=0.2.1)", "opencv-python (==3.4.8.29)", "gdown (>=3.10.1)"], "requires_python": ">=3.5", "summary": "Fast and accurate text detection library built on PSENet implementation", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://badge.fury.io/py/psenet-text-detector\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5cb2209fc4de37b8fd884a40f2526e973bba2ac/68747470733a2f2f62616467652e667572792e696f2f70792f7073656e65742d746578742d6465746563746f722e737667\"></a>\n<img alt=\"CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/501ca083c2365c4c631dd785fd55f273f9a9b222/68747470733a2f2f6769746875622e636f6d2f6663616b796f6e2f7073656e65742d746578742d6465746563746f722f776f726b666c6f77732f43492f62616467652e737667\"></p>\n<h2>PSENet: Shape Robust Text Detection with Progressive Scale Expansion Network</h2>\n<p>Packaged Version of the Pytorch implementation of PSENet text detector</p>\n<h3>Overview</h3>\n<p>PSENet is designed as a segmentation-based detector with multiple predictions for each text instance. These predictions correspond to different `kernels' produced by shrinking the original text instance into various scales. Consequently, the final detection can be conducted through our progressive scale expansion algorithm which gradually expands the kernels with minimal scales to the text instances with maximal and complete shapes.</p>\n<img alt=\"teaser\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3eb432ae8514bc15a11a97c7d35b86a913be8d95/2e2f666967757265732f7073656e65745f64656d6f2e706e67\" width=\"1000\">\n<h2>Getting started</h2>\n<h3>Installation</h3>\n<ul>\n<li>Install using conda for Linux, Mac and Windows (preferred):</li>\n</ul>\n<pre><span class=\"go\">conda install -c fcakyon psenet-text-detector</span>\n</pre>\n<ul>\n<li>Install using pip for Linux and Mac:</li>\n</ul>\n<pre><span class=\"go\">pip install psenet-text-detector</span>\n</pre>\n<h3>Basic Usage</h3>\n<pre><span class=\"c1\"># import package</span>\n<span class=\"kn\">import</span> <span class=\"nn\">psenet_text_detector</span> <span class=\"k\">as</span> <span class=\"nn\">psenet</span>\n\n<span class=\"c1\"># set image path and export folder directory</span>\n<span class=\"n\">image_path</span> <span class=\"o\">=</span> <span class=\"s1\">'figures/idcard.png'</span>\n<span class=\"n\">output_dir</span> <span class=\"o\">=</span> <span class=\"s1\">'outputs/'</span>\n\n<span class=\"c1\"># apply craft text detection and export detected regions to output directory</span>\n<span class=\"n\">prediction_result</span> <span class=\"o\">=</span> <span class=\"n\">psenet</span><span class=\"o\">.</span><span class=\"n\">detect_text</span><span class=\"p\">(</span><span class=\"n\">image_path</span><span class=\"p\">,</span> <span class=\"n\">output_dir</span><span class=\"p\">,</span> <span class=\"n\">cuda</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<h3>Advanced Usage</h3>\n<pre><span class=\"c1\"># import package</span>\n<span class=\"kn\">import</span> <span class=\"nn\">psenet_text_detector</span> <span class=\"k\">as</span> <span class=\"nn\">psenet</span>\n\n<span class=\"c1\"># set image path and export folder directory</span>\n<span class=\"n\">image_path</span> <span class=\"o\">=</span> <span class=\"s1\">'figures/idcard.png'</span>\n<span class=\"n\">output_dir</span> <span class=\"o\">=</span> <span class=\"s1\">'outputs/'</span>\n\n<span class=\"c1\"># read image</span>\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">psenet</span><span class=\"o\">.</span><span class=\"n\">read_image</span><span class=\"p\">(</span><span class=\"n\">image_path</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># load model</span>\n<span class=\"n\">psenet_model</span> <span class=\"o\">=</span> <span class=\"n\">psenet</span><span class=\"o\">.</span><span class=\"n\">load_psenet_model</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># perform prediction</span>\n<span class=\"n\">prediction_result</span> <span class=\"o\">=</span> <span class=\"n\">psenet</span><span class=\"o\">.</span><span class=\"n\">get_prediction</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"o\">=</span><span class=\"n\">image</span><span class=\"p\">,</span>\n                               \t\t  <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">psenet_model</span><span class=\"p\">,</span>\n                                       \t  <span class=\"n\">binary_th</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span>\n                                       \t  <span class=\"n\">kernel_num</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n                                       \t  <span class=\"n\">upsample_scale</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n                                       \t  <span class=\"n\">long_size</span><span class=\"o\">=</span><span class=\"mi\">1280</span><span class=\"p\">,</span>\n                                       \t  <span class=\"n\">min_kernel_area</span><span class=\"o\">=</span><span class=\"mf\">10.0</span><span class=\"p\">,</span>\n                                       \t  <span class=\"n\">min_area</span><span class=\"o\">=</span><span class=\"mf\">300.0</span><span class=\"p\">,</span>\n                                       \t  <span class=\"n\">min_score</span><span class=\"o\">=</span><span class=\"mf\">0.93</span><span class=\"p\">,</span>\n                                       \t  <span class=\"n\">cuda</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># export detected text regions</span>\n<span class=\"n\">exported_file_paths</span> <span class=\"o\">=</span> <span class=\"n\">psenet</span><span class=\"o\">.</span><span class=\"n\">export_detected_regions</span><span class=\"p\">(</span><span class=\"n\">image_path</span><span class=\"p\">,</span>\n                                              \t    <span class=\"n\">image</span><span class=\"p\">,</span>\n                                              \t    <span class=\"n\">boxes</span><span class=\"o\">=</span><span class=\"n\">prediction_result</span><span class=\"p\">[</span><span class=\"s2\">\"boxes\"</span><span class=\"p\">],</span>\n                                              \t    <span class=\"n\">output_dir</span><span class=\"o\">=</span><span class=\"n\">output_dir</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># export box visualization</span>\n<span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">psenet</span><span class=\"o\">.</span><span class=\"n\">visualize_detection</span><span class=\"p\">(</span><span class=\"n\">image_path</span><span class=\"p\">,</span>\n            \t\t       <span class=\"n\">image</span><span class=\"o\">=</span><span class=\"n\">image</span><span class=\"p\">,</span>\n        \t\t       <span class=\"n\">quads</span><span class=\"o\">=</span><span class=\"n\">prediction_result</span><span class=\"p\">[</span><span class=\"s2\">\"boxes\"</span><span class=\"p\">],</span>\n                    \t       <span class=\"n\">output_dir</span><span class=\"o\">=</span><span class=\"n\">output_dir</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6969310, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "3bec9aaf7cb355e6bcfcf33014077d76", "sha256": "1e1d7a4cd7e129822ac64b4479435c9cf0d7ce062648d3c5c209e5302cbd9502"}, "downloads": -1, "filename": "psenet_text_detector-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3bec9aaf7cb355e6bcfcf33014077d76", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 14919, "upload_time": "2020-04-05T19:38:38", "upload_time_iso_8601": "2020-04-05T19:38:38.800157Z", "url": "https://files.pythonhosted.org/packages/69/c8/34d17eb93a202ee03e9d3506c58cfd875132e505091fe02f3a5fd176266b/psenet_text_detector-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b21e072625924a563445c7cd14f6f62", "sha256": "fb60b4a470cef1e70a7605aaee2dd18ee9bf4666d5ee4c7ebeddc8db2f823e69"}, "downloads": -1, "filename": "psenet-text-detector-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3b21e072625924a563445c7cd14f6f62", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10790, "upload_time": "2020-04-05T19:38:40", "upload_time_iso_8601": "2020-04-05T19:38:40.144828Z", "url": "https://files.pythonhosted.org/packages/6d/d0/b98ac60cdda6333536cee41fd07b4adb0e7206ef0bc8c54087587e3ad04c/psenet-text-detector-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3bec9aaf7cb355e6bcfcf33014077d76", "sha256": "1e1d7a4cd7e129822ac64b4479435c9cf0d7ce062648d3c5c209e5302cbd9502"}, "downloads": -1, "filename": "psenet_text_detector-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3bec9aaf7cb355e6bcfcf33014077d76", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 14919, "upload_time": "2020-04-05T19:38:38", "upload_time_iso_8601": "2020-04-05T19:38:38.800157Z", "url": "https://files.pythonhosted.org/packages/69/c8/34d17eb93a202ee03e9d3506c58cfd875132e505091fe02f3a5fd176266b/psenet_text_detector-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b21e072625924a563445c7cd14f6f62", "sha256": "fb60b4a470cef1e70a7605aaee2dd18ee9bf4666d5ee4c7ebeddc8db2f823e69"}, "downloads": -1, "filename": "psenet-text-detector-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3b21e072625924a563445c7cd14f6f62", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10790, "upload_time": "2020-04-05T19:38:40", "upload_time_iso_8601": "2020-04-05T19:38:40.144828Z", "url": "https://files.pythonhosted.org/packages/6d/d0/b98ac60cdda6333536cee41fd07b4adb0e7206ef0bc8c54087587e3ad04c/psenet-text-detector-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:00 2020"}