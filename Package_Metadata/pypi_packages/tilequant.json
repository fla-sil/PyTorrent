{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Multimedia :: Graphics"], "description": "tilequant\n=========\n\n|build| |pypi-version| |pypi-downloads| |pypi-license| |pypi-pyversions|\n\n.. |build| image:: https://jenkins.riptide.parakoopa.de/buildStatus/icon?job=tilequant%2Fmaster\n    :target: https://jenkins.riptide.parakoopa.de/blue/organizations/jenkins/tilequant/activity\n    :alt: Build Status\n\n.. |pypi-version| image:: https://img.shields.io/pypi/v/tilequant\n    :target: https://pypi.org/project/tilequant/\n    :alt: Version\n\n.. |pypi-downloads| image:: https://img.shields.io/pypi/dm/tilequant\n    :target: https://pypi.org/project/tilequant/\n    :alt: Downloads\n\n.. |pypi-license| image:: https://img.shields.io/pypi/l/tilequant\n    :alt: License (MIT)\n\n.. |pypi-pyversions| image:: https://img.shields.io/pypi/pyversions/tilequant\n    :alt: Supported Python versions\n\nTilequant is a utility to reduce the colors in an image (quantizing).\n\nIt does so, while limiting each tile (by default an area of 8x8 pixels) of the image\nto a subset of colors (a palette). The whole image has one big palette that consists of\nthose smaller palettes.\n\nThis tool is a standalone part of SkyTemple, the ROM editor for\nPok\u00e9mon Mystery Dungeon Explorers of Sky.\nBy default it produces images that can be used by SkyTemple.\nHowever the images are probably also useful\nfor use with other games that have similar restrictions for backgrounds.\n\nMake sure the input image is a RGB image without an alpha channel. The image library used\nhas some problems with converting other image types to RGB in some cases.\n\nThe output is an image with a palettes as shown in the example.\n\n.. image:: https://github.com/SkyTemple/tilequant/raw/master/examples/export_example2.png\n\nThis tool is not affiliated with Nintendo, Spike Chunsoft or any of the parties involved in\ncreating Pok\u00e9mon Mystery Dungeon Explorers of Sky. This is a fan-project.\n\nInstallation\n------------\nPython 3 is required.\n\nVia pip3::\n\n    pip3 install -U tilequant\n\nUsage\n-----\n\n.. code::\n\n    Usage: tilequant [OPTIONS] INPUT_IMAGE OUTPUT_IMAGE\n\n      Converts any image into a indexed image containing a number of smaller\n      sub-palettes (--num-palettes), each with a fixed color length (--colors-\n      per-palette). The conversion will assign each tile in the image one of\n      these sub-palettes to use (single-palette-per-tile constraint). To meet\n      this constraint the converter will continue to reduce the overall image\n      colors using color quantization until each tile can be assigned a palette.\n\n      INPUT_IMAGE is the path of the image to convert and OUTPUT_IMAGE is where\n      to save the converted image. All image types supported by PIL (the Python\n      image library) can be used. :return:\n\n    Options:\n      -w, --tile-width INTEGER        [Default: 8] The width of each tile in the\n                                      image, it must be divisible by this.\n      -h, --tile-height INTEGER       [Default: 8] The height of each tile in the\n                                      image, it must be divisible by this.\n      -n, --num-palettes INTEGER      [Default: 16] Number of palettes in the\n                                      output.\n      -c, --colors-per-palette INTEGER\n                                      [Default: 16] Number of colors per palette.\n                                      If transparency is enabled, the first color\n                                      in each palette is reserved for it.\n      -C, --max-colors INTEGER        [Default: (-c)*(-n)] Highest overall amount\n                                      of colors to test.\n      -s, --color-steps INTEGER       [Default: 4] By how much to reduce the\n                                      number of colors in the image, until a valid\n                                      image is found.\n      -d, --direction [DOWN|UP]       [Default: UP] Either start with the lowest\n                                      amount of colors and go up to max-colors\n                                      (UP), orthe other way around (DOWN). See\n                                      README for more info.\n      -D, --dither [NONE|FLOYDSTEINBERG]\n                                      [Default: NONE] Which dither to use.\n      -l, --color-limit-per-tile INTEGER\n                                      [Default: 15] Limit the tiles to a specific\n                                      amount of colors they should use before\n                                      starting. Setting this lower than --colors-\n                                      per-palette may help increase the number of\n                                      total colors in the image.\n      -M, --mosaic-limiting / -m, --no-mosaic-limiting\n                                      [Default: Enabled] Toggle mosaic limiting,\n                                      enabling it will limit increasingly bigger\n                                      sections of the image to a limited amount of\n                                      colors, based on --color-limit-per-tile. See\n                                      README.\n      -t, --transparent-color TEXT    A single color value (hex style, eg. 12ab56)\n                                      that should be treated as transparent, when\n                                      doingthe conversion with transparency\n                                      enabled.\n      -A, --transparency / -a, --no-transparency\n                                      [Default: Enabled] Toggle transparency. If\n                                      on, reserve the first color of each palette\n                                      for transparencyand import pixels with the\n                                      color code specified by transparent-color as\n                                      transparency (if given).\n      -v, --loglevel [DEBUG|INFO|WARNING|ERROR|FATAL|CRITICAL]\n                                      [Default: INFO] Log level.\n      --help                          Show this message and exit.\n\n\nExamples\n--------\nThe examples directory contains more examples. Most of the example images are taken from\nhttps://github.com/haroldo-ok/RgbQuant-SMS.js.\n\nPlease note, that for the examples, the ``--transparency`` flag was enabled, so\nthe actual maximum of unique colors is 240 for those, since 16 colors are reserved\nfor transparency.\n\nYou can see, that in some cases there are still weird glitches (most notably the\n``smb3`` example).\n\n\n\"Direction\" of the algorithm\n----------------------------\nThe algorithm tries to find any amount of total colors, that can be\narranged to produce a valid image with the tile based palette restrictions.\n\nIt does this (by default) by starting with a very low amount of colors and working\nup to ``--max-colors`` until it is no longer possible to produce a valid image (``--direction UP``).\n\nIf ``--direction DOWN`` it will instead start with the highest amount of colors and work down,\nuntil a valid image was found. This will take a significant amount of time longer to process\nbut has a higher chance of finding images with a high amount of colors (since it's possible\nsome numbers of colors in between 0 and the maximum might not be usable simply for reasons\nrelated to how colors are changed in the quantizing process).\n\nIt's recommended to leave this to the default settings to get images in a sane amount of time.\nShould you however work with images that already or almost follow the tile restrictions,\nset this to ``DOWN`` for better results.\n\nColor limit per tile\n--------------------\nBefore starting the process, tilequant will quantize each tile separately to ``color-limit-per-tile``\ncolors, to reduce the amount of overall color noise per tile. Lowering this value may increase\nthe overall amount of colors possible.\n\nMosaic limiting\n---------------\nIf enabled, the process described in \"Color limit per tile\" is repeated for each bigger\nsection of the image with an increasing amount of colors.\n\nExample::\n\n    [Always]:\n        All 8x8 blocks   are limited to color_limit_per_tile      colors\n    [If mosaic_limiting]:\n        All 16x16 blocks are limited to color_limit_per_tile * 2  colors\n        All 32x32 blocks are limited to color_limit_per_tile * 4  colors\n        ... until the block size is the entire image\n\nThis may increase the total number of colors possible even more, but may lead to blocky\nlooking images.\n\nTransparency\n------------\nIf transparency is enabled, the actual amount of colors per palette is one lower than specified\nand a \"transparency color\" is added at index 0 of all palettes. If ``transparent-color`` is\nspecified, the image is scanned for pixels with this color first and in the end, those pixels\nwill be assigned their local \"transparent color\" index.\n\nSpecial Thanks\n--------------\n\n- Nerketur\n- AntyMew\n- psy_commando\n\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SkyTemple/tilequant/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tilequant", "package_url": "https://pypi.org/project/tilequant/", "platform": "", "project_url": "https://pypi.org/project/tilequant/", "project_urls": {"Homepage": "https://github.com/SkyTemple/tilequant/"}, "release_url": "https://pypi.org/project/tilequant/0.0.1/", "requires_dist": ["Pillow-SIMD (>=6.0.0)", "ordered-set (>=3.1.0)", "sortedcollections (>=1.1.0)", "click (>=7.0)"], "requires_python": "", "summary": "Tool for quantizing image colors using tile-based palette restrictions", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://jenkins.riptide.parakoopa.de/blue/organizations/jenkins/tilequant/activity\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f5eeca14a6ba5fc02fc997da0d5cdde06676bde/68747470733a2f2f6a656e6b696e732e726970746964652e706172616b6f6f70612e64652f6275696c645374617475732f69636f6e3f6a6f623d74696c657175616e742532466d6173746572\"></a> <a href=\"https://pypi.org/project/tilequant/\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5bbf7ed8eb0835b0e7ff654d7a2679590f50748f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f74696c657175616e74\"></a> <a href=\"https://pypi.org/project/tilequant/\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d658dc0936d60191f36e3626913daadcbfc921b8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f74696c657175616e74\"></a> <img alt=\"License (MIT)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/95ffceb5b61a2b83bf7bff8eecfefdb28f669405/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f74696c657175616e74\"> <img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e6de061dd3345d7e6e73259ee0fdcbe91f933266/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f74696c657175616e74\"></p>\n<p>Tilequant is a utility to reduce the colors in an image (quantizing).</p>\n<p>It does so, while limiting each tile (by default an area of 8x8 pixels) of the image\nto a subset of colors (a palette). The whole image has one big palette that consists of\nthose smaller palettes.</p>\n<p>This tool is a standalone part of SkyTemple, the ROM editor for\nPok\u00e9mon Mystery Dungeon Explorers of Sky.\nBy default it produces images that can be used by SkyTemple.\nHowever the images are probably also useful\nfor use with other games that have similar restrictions for backgrounds.</p>\n<p>Make sure the input image is a RGB image without an alpha channel. The image library used\nhas some problems with converting other image types to RGB in some cases.</p>\n<p>The output is an image with a palettes as shown in the example.</p>\n<img alt=\"https://github.com/SkyTemple/tilequant/raw/master/examples/export_example2.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05e402bc93932acc59577dc7c71c671c3cf09512/68747470733a2f2f6769746875622e636f6d2f536b7954656d706c652f74696c657175616e742f7261772f6d61737465722f6578616d706c65732f6578706f72745f6578616d706c65322e706e67\">\n<p>This tool is not affiliated with Nintendo, Spike Chunsoft or any of the parties involved in\ncreating Pok\u00e9mon Mystery Dungeon Explorers of Sky. This is a fan-project.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Python 3 is required.</p>\n<p>Via pip3:</p>\n<pre>pip3 install -U tilequant\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>Usage: tilequant [OPTIONS] INPUT_IMAGE OUTPUT_IMAGE\n\n  Converts any image into a indexed image containing a number of smaller\n  sub-palettes (--num-palettes), each with a fixed color length (--colors-\n  per-palette). The conversion will assign each tile in the image one of\n  these sub-palettes to use (single-palette-per-tile constraint). To meet\n  this constraint the converter will continue to reduce the overall image\n  colors using color quantization until each tile can be assigned a palette.\n\n  INPUT_IMAGE is the path of the image to convert and OUTPUT_IMAGE is where\n  to save the converted image. All image types supported by PIL (the Python\n  image library) can be used. :return:\n\nOptions:\n  -w, --tile-width INTEGER        [Default: 8] The width of each tile in the\n                                  image, it must be divisible by this.\n  -h, --tile-height INTEGER       [Default: 8] The height of each tile in the\n                                  image, it must be divisible by this.\n  -n, --num-palettes INTEGER      [Default: 16] Number of palettes in the\n                                  output.\n  -c, --colors-per-palette INTEGER\n                                  [Default: 16] Number of colors per palette.\n                                  If transparency is enabled, the first color\n                                  in each palette is reserved for it.\n  -C, --max-colors INTEGER        [Default: (-c)*(-n)] Highest overall amount\n                                  of colors to test.\n  -s, --color-steps INTEGER       [Default: 4] By how much to reduce the\n                                  number of colors in the image, until a valid\n                                  image is found.\n  -d, --direction [DOWN|UP]       [Default: UP] Either start with the lowest\n                                  amount of colors and go up to max-colors\n                                  (UP), orthe other way around (DOWN). See\n                                  README for more info.\n  -D, --dither [NONE|FLOYDSTEINBERG]\n                                  [Default: NONE] Which dither to use.\n  -l, --color-limit-per-tile INTEGER\n                                  [Default: 15] Limit the tiles to a specific\n                                  amount of colors they should use before\n                                  starting. Setting this lower than --colors-\n                                  per-palette may help increase the number of\n                                  total colors in the image.\n  -M, --mosaic-limiting / -m, --no-mosaic-limiting\n                                  [Default: Enabled] Toggle mosaic limiting,\n                                  enabling it will limit increasingly bigger\n                                  sections of the image to a limited amount of\n                                  colors, based on --color-limit-per-tile. See\n                                  README.\n  -t, --transparent-color TEXT    A single color value (hex style, eg. 12ab56)\n                                  that should be treated as transparent, when\n                                  doingthe conversion with transparency\n                                  enabled.\n  -A, --transparency / -a, --no-transparency\n                                  [Default: Enabled] Toggle transparency. If\n                                  on, reserve the first color of each palette\n                                  for transparencyand import pixels with the\n                                  color code specified by transparent-color as\n                                  transparency (if given).\n  -v, --loglevel [DEBUG|INFO|WARNING|ERROR|FATAL|CRITICAL]\n                                  [Default: INFO] Log level.\n  --help                          Show this message and exit.\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>The examples directory contains more examples. Most of the example images are taken from\n<a href=\"https://github.com/haroldo-ok/RgbQuant-SMS.js\" rel=\"nofollow\">https://github.com/haroldo-ok/RgbQuant-SMS.js</a>.</p>\n<p>Please note, that for the examples, the <tt><span class=\"pre\">--transparency</span></tt> flag was enabled, so\nthe actual maximum of unique colors is 240 for those, since 16 colors are reserved\nfor transparency.</p>\n<p>You can see, that in some cases there are still weird glitches (most notably the\n<tt>smb3</tt> example).</p>\n</div>\n<div id=\"direction-of-the-algorithm\">\n<h2>\u201cDirection\u201d of the algorithm</h2>\n<p>The algorithm tries to find any amount of total colors, that can be\narranged to produce a valid image with the tile based palette restrictions.</p>\n<p>It does this (by default) by starting with a very low amount of colors and working\nup to <tt><span class=\"pre\">--max-colors</span></tt> until it is no longer possible to produce a valid image (<tt><span class=\"pre\">--direction</span> UP</tt>).</p>\n<p>If <tt><span class=\"pre\">--direction</span> DOWN</tt> it will instead start with the highest amount of colors and work down,\nuntil a valid image was found. This will take a significant amount of time longer to process\nbut has a higher chance of finding images with a high amount of colors (since it\u2019s possible\nsome numbers of colors in between 0 and the maximum might not be usable simply for reasons\nrelated to how colors are changed in the quantizing process).</p>\n<p>It\u2019s recommended to leave this to the default settings to get images in a sane amount of time.\nShould you however work with images that already or almost follow the tile restrictions,\nset this to <tt>DOWN</tt> for better results.</p>\n</div>\n<div id=\"color-limit-per-tile\">\n<h2>Color limit per tile</h2>\n<p>Before starting the process, tilequant will quantize each tile separately to <tt><span class=\"pre\">color-limit-per-tile</span></tt>\ncolors, to reduce the amount of overall color noise per tile. Lowering this value may increase\nthe overall amount of colors possible.</p>\n</div>\n<div id=\"mosaic-limiting\">\n<h2>Mosaic limiting</h2>\n<p>If enabled, the process described in \u201cColor limit per tile\u201d is repeated for each bigger\nsection of the image with an increasing amount of colors.</p>\n<p>Example:</p>\n<pre>[Always]:\n    All 8x8 blocks   are limited to color_limit_per_tile      colors\n[If mosaic_limiting]:\n    All 16x16 blocks are limited to color_limit_per_tile * 2  colors\n    All 32x32 blocks are limited to color_limit_per_tile * 4  colors\n    ... until the block size is the entire image\n</pre>\n<p>This may increase the total number of colors possible even more, but may lead to blocky\nlooking images.</p>\n</div>\n<div id=\"transparency\">\n<h2>Transparency</h2>\n<p>If transparency is enabled, the actual amount of colors per palette is one lower than specified\nand a \u201ctransparency color\u201d is added at index 0 of all palettes. If <tt><span class=\"pre\">transparent-color</span></tt> is\nspecified, the image is scanned for pixels with this color first and in the end, those pixels\nwill be assigned their local \u201ctransparent color\u201d index.</p>\n</div>\n<div id=\"special-thanks\">\n<h2>Special Thanks</h2>\n<ul>\n<li>Nerketur</li>\n<li>AntyMew</li>\n<li>psy_commando</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6683923, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c751ab895a4edb524bbe3b37fd3c2cc4", "sha256": "f9faf258c8ff8bd8ac8889fa755efbdb055db96eeebee22c5be396d90e6ba955"}, "downloads": -1, "filename": "tilequant-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c751ab895a4edb524bbe3b37fd3c2cc4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32479, "upload_time": "2020-02-23T13:36:25", "upload_time_iso_8601": "2020-02-23T13:36:25.369949Z", "url": "https://files.pythonhosted.org/packages/fc/28/09483ec778fbc97c035f4ddd0dd601fa520f263d2477212056e0aac7b4ea/tilequant-0.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c751ab895a4edb524bbe3b37fd3c2cc4", "sha256": "f9faf258c8ff8bd8ac8889fa755efbdb055db96eeebee22c5be396d90e6ba955"}, "downloads": -1, "filename": "tilequant-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c751ab895a4edb524bbe3b37fd3c2cc4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32479, "upload_time": "2020-02-23T13:36:25", "upload_time_iso_8601": "2020-02-23T13:36:25.369949Z", "url": "https://files.pythonhosted.org/packages/fc/28/09483ec778fbc97c035f4ddd0dd601fa520f263d2477212056e0aac7b4ea/tilequant-0.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:53:41 2020"}