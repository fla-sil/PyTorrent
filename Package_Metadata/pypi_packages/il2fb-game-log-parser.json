{"info": {"author": "Alexander Oblovatniy", "author_email": "oblovatniy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Natural Language :: English", "Operating System :: Microsoft :: Windows", "Operating System :: Unix", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries"], "description": "IL-2 FB Game Log Parser\n=======================\n\n|pypi_package| |python_versions| |license|\n\n|unix_build| |windows_build| |coverage_status|\n\n|codacy| |quality| |health| |requirements|\n\n\n**Table of contents**\n\n.. contents::\n    :local:\n    :depth: 1\n    :backlinks: none\n\n\nSynopsis\n--------\n\nThis is a Python library which parses events from game log produced by\ndedicated server of \u00abIL-2 Forgotten Battles\u00bb flight simulator. Resulting\ninformation about events is stored in special data structures.\n\n\nDemo\n----\n\nYou may see this library in action even if you do not understand its purpose.\n\nAll you need is just to `visit project's demo page`_.\n\nThat page allows you to test parser's ability to process strings. If you\ndo not know what to enter into a text area, you may click ``Insert test data``\nand parse it.\n\nIf something goes wrong, you will be prompted to confirm automatic creation of\nbug report which will be\n`listed on this page <https://github.com/IL2HorusTeam/il2fb-game-log-parser/issues>`_.\n\n\nKnown events\n------------\n\nThis library supports all known events produced by dedicated server\n(129 unique events).\n\nTo see their list, go to the `demo page`_ and click\n``See the list of supported events`` link.\n\n\nInstallation\n------------\n\nGet Python package from PyPI:\n\n.. code-block:: bash\n\n  pip install il2fb-game-log-parser\n\n\nUsage\n-----\n\nIf you need to be able to parse all events this library knows about, use\n``GameLogEventParser.parse_string()``:\n\nImport ``GameLogEventParser`` and create its instance:\n\n.. code-block:: python\n\n    from il2fb.parsers.game_log import GameLogEventParser\n\n    parser = GameLogEventParser()\n\n\nParse a string to get an instance of event:\n\n.. code-block:: python\n\n    event = parser.parse(\"[8:33:05 PM] User0 has connected\")\n\n\nExplore event's internal structure:\n\n.. code-block:: python\n\n    print(event)\n    # <Event: HumanHasConnected>\n\n    print(event.time)\n    # datetime.time(20, 33, 5)\n\n    print(event.actor)\n    # <Human 'User0'>\n\n    print(event.actor.callsign)\n    # User0\n\n\nConvert event into a dictionary:\n\n.. code-block:: python\n\n    import pprint\n\n    pprint.pprint(event.to_primitive())\n    # {'actor': {'callsign': 'User0'},\n    #  'name': 'HumanHasConnected',\n    #  'time': '20:33:05',\n    #  'verbose_name': 'Human has connected'}\n\n\nExceptions\n----------\n\nIf you try to parse unknown event, ``EventParsingException`` will be raised:\n\n.. code-block:: python\n\n    parser.parse(\"foo bar\")\n    # Traceback (most recent call last):\n    # \u2026\n    # EventParsingException: No event was found for string \"foo bar\"\n\nCurrent list of supported events is rather full, but ``EventParsingException``\nis quite possible, because server's events are undocumented and this library\nmay do not know about all of them.\n\nIn case you need to catch this error, its full name is\n``il2fb.commons.events.EventParsingException``.\n\n\nSafe usage\n----------\n\nYou can set flag ``ignore_errors=True`` if you don't care about any exceptions:\n\n.. code-block:: python\n\n    from il2fb.parsers.game_log import GameLogEventParser\n\n    parser = GameLogEventParser()\n    event = parser.parse(\"foo bar\", ignore_errors=True)\n    print(event is None)\n    # True\n\nAny error (except ``SystemExit`` and ``KeyboardInterrupt``) will be muted and\n``None`` will be returned.\n\n\n.. |unix_build| image:: https://travis-ci.org/IL2HorusTeam/il2fb-game-log-parser.svg?branch=master\n   :target: https://travis-ci.org/IL2HorusTeam/il2fb-game-log-parser\n\n.. |windows_build| image:: https://ci.appveyor.com/api/projects/status/a47k677tr59bd5wg/branch/master?svg=true\n    :target: https://ci.appveyor.com/project/oblalex/il2fb-events-parser\n    :alt: Build status of the master branch on Windows\n\n.. |coverage_status| image:: http://codecov.io/github/IL2HorusTeam/il2fb-game-log-parser/coverage.svg?branch=master\n    :target: http://codecov.io/github/IL2HorusTeam/il2fb-game-log-parser?branch=master\n    :alt: Test coverage\n\n.. |codacy| image:: https://api.codacy.com/project/badge/c0385f01ffa545dea3a52a51cfc53221\n    :target: https://www.codacy.com/app/oblalex/il2fb-game-log-parser\n    :alt: Codacy Code Review\n\n.. |quality| image:: https://scrutinizer-ci.com/g/IL2HorusTeam/il2fb-game-log-parser/badges/quality-score.png?b=master\n   :target: https://scrutinizer-ci.com/g/IL2HorusTeam/il2fb-game-log-parser/?branch=master\n   :alt: Scrutinizer Code Quality\n\n.. |health| image:: https://landscape.io/github/IL2HorusTeam/il2fb-game-log-parser/master/landscape.svg?style=flat\n   :target: https://landscape.io/github/IL2HorusTeam/il2fb-game-log-parser/master\n   :alt: Code Health\n\n.. |pypi_package| image:: http://img.shields.io/pypi/v/il2fb-game-log-parser.svg?style=flat\n   :target: http://badge.fury.io/py/il2fb-game-log-parser/\n\n.. |python_versions| image:: https://img.shields.io/badge/Python-2.7,3.4,3.5,3.6-brightgreen.svg?style=flat\n   :alt: Supported versions of Python\n\n.. |license| image:: https://img.shields.io/badge/license-LGPLv3-blue.svg?style=flat\n   :target: https://github.com/IL2HorusTeam/il2fb-game-log-parser/blob/master/LICENSE\n\n.. |requirements| image:: https://requires.io/github/IL2HorusTeam/il2fb-game-log-parser/requirements.svg?branch=master\n   :target: https://requires.io/github/IL2HorusTeam/il2fb-game-log-parser/requirements/?branch=master\n   :alt: Requirements Status\n\n\n.. _demo page: http://il2horusteam.github.io/il2fb-game-log-parser/\n.. _visit project's demo page: `demo page`_", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/IL2HorusTeam/il2fb-game-log-parser", "keywords": "il2,il-2,fb,forgotten battles,parser,events,server,game,log", "license": "LGPLv3", "maintainer": "", "maintainer_email": "", "name": "il2fb-game-log-parser", "package_url": "https://pypi.org/project/il2fb-game-log-parser/", "platform": "", "project_url": "https://pypi.org/project/il2fb-game-log-parser/", "project_urls": {"Homepage": "https://github.com/IL2HorusTeam/il2fb-game-log-parser"}, "release_url": "https://pypi.org/project/il2fb-game-log-parser/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "Parse events from game log produced by dedicated server of \u00abIL-2 Forgotten Battles\u00bb flight simulator", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"http://badge.fury.io/py/il2fb-game-log-parser/\" rel=\"nofollow\"><img alt=\"pypi_package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9003987cb2b02a65f6c96997ac9dae29ec59f2dc/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f696c3266622d67616d652d6c6f672d7061727365722e7376673f7374796c653d666c6174\"></a> <img alt=\"Supported versions of Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c01667c65b7cd7eb0bd72ab20736ed3eec5c3280/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d322e372c332e342c332e352c332e362d627269676874677265656e2e7376673f7374796c653d666c6174\"> <a href=\"https://github.com/IL2HorusTeam/il2fb-game-log-parser/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1f4a5ff984e4af0726458ef6c6de7d71493c849c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4c47504c76332d626c75652e7376673f7374796c653d666c6174\"></a></p>\n<p><a href=\"https://travis-ci.org/IL2HorusTeam/il2fb-game-log-parser\" rel=\"nofollow\"><img alt=\"unix_build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/76b1650caf2e9ecd5f179a2d57e087795f136c09/68747470733a2f2f7472617669732d63692e6f72672f494c32486f7275735465616d2f696c3266622d67616d652d6c6f672d7061727365722e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://ci.appveyor.com/project/oblalex/il2fb-events-parser\" rel=\"nofollow\"><img alt=\"Build status of the master branch on Windows\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd8a7b0263050c691ec5050d86c903b7e1491626/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6134376b3637377472353962643577672f6272616e63682f6d61737465723f7376673d74727565\"></a> <a href=\"http://codecov.io/github/IL2HorusTeam/il2fb-game-log-parser?branch=master\" rel=\"nofollow\"><img alt=\"Test coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a20fad0c797f76d9fc521f71698e22b798b2593a/687474703a2f2f636f6465636f762e696f2f6769746875622f494c32486f7275735465616d2f696c3266622d67616d652d6c6f672d7061727365722f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p><a href=\"https://www.codacy.com/app/oblalex/il2fb-game-log-parser\" rel=\"nofollow\"><img alt=\"Codacy Code Review\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e30453d911e23d52d7fd6039ad0db1d5258a69d/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f6330333835663031666661353435646561336135326135316366633533323231\"></a> <a href=\"https://scrutinizer-ci.com/g/IL2HorusTeam/il2fb-game-log-parser/?branch=master\" rel=\"nofollow\"><img alt=\"Scrutinizer Code Quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e42d24d62588c06b462045c0851020b8d4c0963/68747470733a2f2f7363727574696e697a65722d63692e636f6d2f672f494c32486f7275735465616d2f696c3266622d67616d652d6c6f672d7061727365722f6261646765732f7175616c6974792d73636f72652e706e673f623d6d6173746572\"></a> <a href=\"https://landscape.io/github/IL2HorusTeam/il2fb-game-log-parser/master\" rel=\"nofollow\"><img alt=\"Code Health\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f4839c7777223bbe98da2707adec0d4fa12c7b2a/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f494c32486f7275735465616d2f696c3266622d67616d652d6c6f672d7061727365722f6d61737465722f6c616e6473636170652e7376673f7374796c653d666c6174\"></a> <a href=\"https://requires.io/github/IL2HorusTeam/il2fb-game-log-parser/requirements/?branch=master\" rel=\"nofollow\"><img alt=\"Requirements Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35d7a53d9cdaaaff6ce7aac415d496250f7a0d34/68747470733a2f2f72657175697265732e696f2f6769746875622f494c32486f7275735465616d2f696c3266622d67616d652d6c6f672d7061727365722f726571756972656d656e74732e7376673f6272616e63683d6d6173746572\"></a></p>\n<p><strong>Table of contents</strong></p>\n<div id=\"contents\">\n<ul>\n<li><a href=\"#synopsis\" id=\"id1\" rel=\"nofollow\">Synopsis</a></li>\n<li><a href=\"#demo\" id=\"id2\" rel=\"nofollow\">Demo</a></li>\n<li><a href=\"#known-events\" id=\"id3\" rel=\"nofollow\">Known events</a></li>\n<li><a href=\"#installation\" id=\"id4\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" id=\"id5\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#exceptions\" id=\"id6\" rel=\"nofollow\">Exceptions</a></li>\n<li><a href=\"#safe-usage\" id=\"id7\" rel=\"nofollow\">Safe usage</a></li>\n</ul>\n</div>\n<div id=\"synopsis\">\n<h2>Synopsis</h2>\n<p>This is a Python library which parses events from game log produced by\ndedicated server of \u00abIL-2 Forgotten Battles\u00bb flight simulator. Resulting\ninformation about events is stored in special data structures.</p>\n</div>\n<div id=\"demo\">\n<h2>Demo</h2>\n<p>You may see this library in action even if you do not understand its purpose.</p>\n<p>All you need is just to <a href=\"http://il2horusteam.github.io/il2fb-game-log-parser/\" rel=\"nofollow\">visit project\u2019s demo page</a>.</p>\n<p>That page allows you to test parser\u2019s ability to process strings. If you\ndo not know what to enter into a text area, you may click <tt>Insert test data</tt>\nand parse it.</p>\n<p>If something goes wrong, you will be prompted to confirm automatic creation of\nbug report which will be\n<a href=\"https://github.com/IL2HorusTeam/il2fb-game-log-parser/issues\" rel=\"nofollow\">listed on this page</a>.</p>\n</div>\n<div id=\"known-events\">\n<h2>Known events</h2>\n<p>This library supports all known events produced by dedicated server\n(129 unique events).</p>\n<p>To see their list, go to the <a href=\"http://il2horusteam.github.io/il2fb-game-log-parser/\" rel=\"nofollow\">demo page</a> and click\n<tt>See the list of supported events</tt> link.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Get Python package from PyPI:</p>\n<pre>pip install il2fb-game-log-parser\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>If you need to be able to parse all events this library knows about, use\n<tt>GameLogEventParser.parse_string()</tt>:</p>\n<p>Import <tt>GameLogEventParser</tt> and create its instance:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">il2fb.parsers.game_log</span> <span class=\"kn\">import</span> <span class=\"n\">GameLogEventParser</span>\n\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">GameLogEventParser</span><span class=\"p\">()</span>\n</pre>\n<p>Parse a string to get an instance of event:</p>\n<pre><span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"[8:33:05 PM] User0 has connected\"</span><span class=\"p\">)</span>\n</pre>\n<p>Explore event\u2019s internal structure:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">)</span>\n<span class=\"c1\"># &lt;Event: HumanHasConnected&gt;</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">)</span>\n<span class=\"c1\"># datetime.time(20, 33, 5)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">actor</span><span class=\"p\">)</span>\n<span class=\"c1\"># &lt;Human 'User0'&gt;</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">callsign</span><span class=\"p\">)</span>\n<span class=\"c1\"># User0</span>\n</pre>\n<p>Convert event into a dictionary:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pprint</span>\n\n<span class=\"n\">pprint</span><span class=\"o\">.</span><span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">to_primitive</span><span class=\"p\">())</span>\n<span class=\"c1\"># {'actor': {'callsign': 'User0'},</span>\n<span class=\"c1\">#  'name': 'HumanHasConnected',</span>\n<span class=\"c1\">#  'time': '20:33:05',</span>\n<span class=\"c1\">#  'verbose_name': 'Human has connected'}</span>\n</pre>\n</div>\n<div id=\"exceptions\">\n<h2>Exceptions</h2>\n<p>If you try to parse unknown event, <tt>EventParsingException</tt> will be raised:</p>\n<pre><span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"foo bar\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Traceback (most recent call last):</span>\n<span class=\"c1\"># \u2026</span>\n<span class=\"c1\"># EventParsingException: No event was found for string \"foo bar\"</span>\n</pre>\n<p>Current list of supported events is rather full, but <tt>EventParsingException</tt>\nis quite possible, because server\u2019s events are undocumented and this library\nmay do not know about all of them.</p>\n<p>In case you need to catch this error, its full name is\n<tt>il2fb.commons.events.EventParsingException</tt>.</p>\n</div>\n<div id=\"safe-usage\">\n<h2>Safe usage</h2>\n<p>You can set flag <tt>ignore_errors=True</tt> if you don\u2019t care about any exceptions:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">il2fb.parsers.game_log</span> <span class=\"kn\">import</span> <span class=\"n\">GameLogEventParser</span>\n\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">GameLogEventParser</span><span class=\"p\">()</span>\n<span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"foo bar\"</span><span class=\"p\">,</span> <span class=\"n\">ignore_errors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"c1\"># True</span>\n</pre>\n<p>Any error (except <tt>SystemExit</tt> and <tt>KeyboardInterrupt</tt>) will be muted and\n<tt>None</tt> will be returned.</p>\n</div>\n\n          </div>"}, "last_serial": 3390678, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "844eccc2817799212ffc8d5c0f028821", "sha256": "e343bdb53d0da714cd09e94165357db767828cf898d5d2849bcd07e33b18e0f6"}, "downloads": -1, "filename": "il2fb-game-log-parser-1.0.2.tar.gz", "has_sig": false, "md5_digest": "844eccc2817799212ffc8d5c0f028821", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22610, "upload_time": "2017-10-16T17:57:10", "upload_time_iso_8601": "2017-10-16T17:57:10.365790Z", "url": "https://files.pythonhosted.org/packages/0a/86/36ca5878e2e3176c37c3b2aa835d36135d2179686c9d2f1070e131c2b572/il2fb-game-log-parser-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "d56d7c174ab799c5302e03af55dbcf85", "sha256": "be88be7c2f1277994e5c3ec7fc146932c50734b8ff78dfd73974e06af60cde32"}, "downloads": -1, "filename": "il2fb-game-log-parser-1.0.3.tar.gz", "has_sig": false, "md5_digest": "d56d7c174ab799c5302e03af55dbcf85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22591, "upload_time": "2017-12-05T14:07:41", "upload_time_iso_8601": "2017-12-05T14:07:41.247752Z", "url": "https://files.pythonhosted.org/packages/60/5b/9d3bd971c9644b7011dbbe9f9541b808c246ee50af5d9317308a66829356/il2fb-game-log-parser-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d56d7c174ab799c5302e03af55dbcf85", "sha256": "be88be7c2f1277994e5c3ec7fc146932c50734b8ff78dfd73974e06af60cde32"}, "downloads": -1, "filename": "il2fb-game-log-parser-1.0.3.tar.gz", "has_sig": false, "md5_digest": "d56d7c174ab799c5302e03af55dbcf85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22591, "upload_time": "2017-12-05T14:07:41", "upload_time_iso_8601": "2017-12-05T14:07:41.247752Z", "url": "https://files.pythonhosted.org/packages/60/5b/9d3bd971c9644b7011dbbe9f9541b808c246ee50af5d9317308a66829356/il2fb-game-log-parser-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:59 2020"}