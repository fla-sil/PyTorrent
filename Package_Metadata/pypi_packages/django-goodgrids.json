{"info": {"author": "Evertabs LLC", "author_email": "support@goodgrids.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Office/Business", "Topic :: Office/Business :: Financial :: Spreadsheet", "Topic :: Office/Business :: Office Suites", "Topic :: Utilities"], "description": "# django-goodgrids\nDjango API for creating Excel files from CSV using the [web-based GoodGrids API](https://goodgrids.com).\n\n# About GoodGrids\n\n[GoodGrids](https://goodgrids.com) is a service for creating Excel files from CSV files programmatically. You upload an example Excel file to serve as a template. You can then use the GoodGrids API to create Excel files from CSV files based on this template. You can style cells, include formulas, and avoid all the issues that plague CSV files.\n\n# Using GoodGrids with class-based views\n\nLet's assume your Django application already has a class-based view `DownloadDataCSVView` that returns a CSV file for your users to download. To create a view that let's your users download Excel files, use the following snippet:\n\n```python\nfrom django_goodgrids.views import DownloadDataAsExcelView\n\nclass DownloadDataAsExcelView(GoodGridsExcelExportViewMixin, DownloadDataCSVView):\n    goodgrids_api_url = 'https://goodgrids.com/create-excel-file/3a6c0d9ac7c74d'\n    excel_file_name = 'data.xlsx'\n```\n\nMake sure to set `goodgrids_api_url` to your actual API URL.\n\nYou can then include this in your `urls.py`:\n\n```python\nurl(r'^download-data-as-excel-file/?$',\n    views.DownloadDataAsExcelView.as_view(),\n    name='download_data_as_excel_file'),\n```\n\n# Using Goodgrids with function-based views\n\nLet's assume your Django application already has a function-based view named `download_data_as_csv_view` that returns a CSV file for your users to download. To create a view that let's your users download Excel files, use the following snippet:\n\n```python\nfrom django_goodgrids.views import create_goodgrids_excel_export_view\n\ndownload_data_as_excel_view = create_goodgrids_excel_export_view(\n    csv_export_view=download_data_as_csv_view,\n    goodgrids_api_url='https://goodgrids.com/create-excel-file/3a6c0d9ac7c74d',\n    excel_file_name='data.xlsx',\n)\n```\n\nMake sure to set `goodgrids_api_url` to your actual API URL.\n\nYou can then include this in your `urls.py`:\n\n```python\nurl(r'^download-data-as-excel-file/?$',\n    views.download_data_as_excel_view,\n    name='download_data_as_excel_file'),\n```\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/goodgrids/django-goodgrids", "keywords": "csv excel spreadsheet conversion", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-goodgrids", "package_url": "https://pypi.org/project/django-goodgrids/", "platform": "", "project_url": "https://pypi.org/project/django-goodgrids/", "project_urls": {"GoodGrids": "https://goodgrids.com", "Homepage": "https://github.com/goodgrids/django-goodgrids", "PyPi": "https://pypi.org/project/django-goodgrids", "Source": "https://github.com/goodgrids/django-goodgrids", "Tracker": "https://github.com/goodgrids/django-goodgrids/issues"}, "release_url": "https://pypi.org/project/django-goodgrids/0.1.3/", "requires_dist": ["Django (>=1.11)", "requests (>=2)"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "summary": "Create Excel files from CSVs using the GoodGrids API, based on an example Excel file template.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-goodgrids</h1>\n<p>Django API for creating Excel files from CSV using the <a href=\"https://goodgrids.com\" rel=\"nofollow\">web-based GoodGrids API</a>.</p>\n<h1>About GoodGrids</h1>\n<p><a href=\"https://goodgrids.com\" rel=\"nofollow\">GoodGrids</a> is a service for creating Excel files from CSV files programmatically. You upload an example Excel file to serve as a template. You can then use the GoodGrids API to create Excel files from CSV files based on this template. You can style cells, include formulas, and avoid all the issues that plague CSV files.</p>\n<h1>Using GoodGrids with class-based views</h1>\n<p>Let's assume your Django application already has a class-based view <code>DownloadDataCSVView</code> that returns a CSV file for your users to download. To create a view that let's your users download Excel files, use the following snippet:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_goodgrids.views</span> <span class=\"kn\">import</span> <span class=\"n\">DownloadDataAsExcelView</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">DownloadDataAsExcelView</span><span class=\"p\">(</span><span class=\"n\">GoodGridsExcelExportViewMixin</span><span class=\"p\">,</span> <span class=\"n\">DownloadDataCSVView</span><span class=\"p\">):</span>\n    <span class=\"n\">goodgrids_api_url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://goodgrids.com/create-excel-file/3a6c0d9ac7c74d'</span>\n    <span class=\"n\">excel_file_name</span> <span class=\"o\">=</span> <span class=\"s1\">'data.xlsx'</span>\n</pre>\n<p>Make sure to set <code>goodgrids_api_url</code> to your actual API URL.</p>\n<p>You can then include this in your <code>urls.py</code>:</p>\n<pre><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^download-data-as-excel-file/?$'</span><span class=\"p\">,</span>\n    <span class=\"n\">views</span><span class=\"o\">.</span><span class=\"n\">DownloadDataAsExcelView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'download_data_as_excel_file'</span><span class=\"p\">),</span>\n</pre>\n<h1>Using Goodgrids with function-based views</h1>\n<p>Let's assume your Django application already has a function-based view named <code>download_data_as_csv_view</code> that returns a CSV file for your users to download. To create a view that let's your users download Excel files, use the following snippet:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_goodgrids.views</span> <span class=\"kn\">import</span> <span class=\"n\">create_goodgrids_excel_export_view</span>\n\n<span class=\"n\">download_data_as_excel_view</span> <span class=\"o\">=</span> <span class=\"n\">create_goodgrids_excel_export_view</span><span class=\"p\">(</span>\n    <span class=\"n\">csv_export_view</span><span class=\"o\">=</span><span class=\"n\">download_data_as_csv_view</span><span class=\"p\">,</span>\n    <span class=\"n\">goodgrids_api_url</span><span class=\"o\">=</span><span class=\"s1\">'https://goodgrids.com/create-excel-file/3a6c0d9ac7c74d'</span><span class=\"p\">,</span>\n    <span class=\"n\">excel_file_name</span><span class=\"o\">=</span><span class=\"s1\">'data.xlsx'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Make sure to set <code>goodgrids_api_url</code> to your actual API URL.</p>\n<p>You can then include this in your <code>urls.py</code>:</p>\n<pre><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^download-data-as-excel-file/?$'</span><span class=\"p\">,</span>\n    <span class=\"n\">views</span><span class=\"o\">.</span><span class=\"n\">download_data_as_excel_view</span><span class=\"p\">,</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'download_data_as_excel_file'</span><span class=\"p\">),</span>\n</pre>\n\n          </div>"}, "last_serial": 3834733, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "77ddc3f599358e03963f58f7c0e7c11b", "sha256": "1b771d82ffffe9fa95b42b616057287fbc89011a8935a525124000a431c3435a"}, "downloads": -1, "filename": "django_goodgrids-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "77ddc3f599358e03963f58f7c0e7c11b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 4775, "upload_time": "2018-04-26T14:10:12", "upload_time_iso_8601": "2018-04-26T14:10:12.290812Z", "url": "https://files.pythonhosted.org/packages/d5/39/03e4970b054536bdb677a3b10b42ae87480642215652ae4254e93748e1e9/django_goodgrids-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76db4dbff661d9087c4539cdcc19c4cd", "sha256": "c2e633d09f115f4431e4587ae33e6b6e03ec23dc6c6aac09428f49cca4e3c6d0"}, "downloads": -1, "filename": "django-goodgrids-0.1.2.tar.gz", "has_sig": false, "md5_digest": "76db4dbff661d9087c4539cdcc19c4cd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 4554, "upload_time": "2018-04-26T14:10:14", "upload_time_iso_8601": "2018-04-26T14:10:14.016279Z", "url": "https://files.pythonhosted.org/packages/6c/98/165afee6402ac2487389ad1f8fbc30298874a14ee4e4ca44d10e5057ff0a/django-goodgrids-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "08a40b4d4c7c9d1b9fdb6b93e15f3f23", "sha256": "b0a22482e1503e64678d9a27897bb8cc04e5a43c779115cf2840cdc931374d31"}, "downloads": -1, "filename": "django_goodgrids-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "08a40b4d4c7c9d1b9fdb6b93e15f3f23", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 4774, "upload_time": "2018-05-04T15:09:50", "upload_time_iso_8601": "2018-05-04T15:09:50.304063Z", "url": "https://files.pythonhosted.org/packages/a6/66/3328eae35e6abfc93a34a202597514a7821ec50bd3ba0ccf8febe047c3bb/django_goodgrids-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d75b541d7935dca712a5d80ab767155", "sha256": "6c80e33b3b9c3cdefe4df927620d800d6cd0e47e3329b7b51a4390ada1f1abff"}, "downloads": -1, "filename": "django-goodgrids-0.1.3.tar.gz", "has_sig": false, "md5_digest": "2d75b541d7935dca712a5d80ab767155", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 4548, "upload_time": "2018-05-04T15:09:51", "upload_time_iso_8601": "2018-05-04T15:09:51.674517Z", "url": "https://files.pythonhosted.org/packages/4f/03/e0fe6ce2e96ebd0c48c3739242f36dc6e99908763a420ef643c344c27673/django-goodgrids-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "08a40b4d4c7c9d1b9fdb6b93e15f3f23", "sha256": "b0a22482e1503e64678d9a27897bb8cc04e5a43c779115cf2840cdc931374d31"}, "downloads": -1, "filename": "django_goodgrids-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "08a40b4d4c7c9d1b9fdb6b93e15f3f23", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 4774, "upload_time": "2018-05-04T15:09:50", "upload_time_iso_8601": "2018-05-04T15:09:50.304063Z", "url": "https://files.pythonhosted.org/packages/a6/66/3328eae35e6abfc93a34a202597514a7821ec50bd3ba0ccf8febe047c3bb/django_goodgrids-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d75b541d7935dca712a5d80ab767155", "sha256": "6c80e33b3b9c3cdefe4df927620d800d6cd0e47e3329b7b51a4390ada1f1abff"}, "downloads": -1, "filename": "django-goodgrids-0.1.3.tar.gz", "has_sig": false, "md5_digest": "2d75b541d7935dca712a5d80ab767155", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 4548, "upload_time": "2018-05-04T15:09:51", "upload_time_iso_8601": "2018-05-04T15:09:51.674517Z", "url": "https://files.pythonhosted.org/packages/4f/03/e0fe6ce2e96ebd0c48c3739242f36dc6e99908763a420ef643c344c27673/django-goodgrids-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:50 2020"}