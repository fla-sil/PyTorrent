{"info": {"author": "Julien LEICHER", "author_email": "julien@leicher.me", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "pytlas-broker |travis| |cover| |pypi| |license|\n===============================================\n\n.. |travis| image:: https://travis-ci.org/atlassistant/pytlas-broker.svg?branch=master\n    :target: https://travis-ci.org/atlassistant/pytlas-broker\n\n.. |cover| image:: https://codecov.io/gh/atlassistant/pytlas-broker/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/atlassistant/pytlas-broker\n\n.. |pypi| image:: https://badge.fury.io/py/pytlas-broker.svg\n    :target: https://badge.fury.io/py/pytlas-broker\n\n.. |license| image:: https://img.shields.io/badge/License-GPL%20v3-blue.svg\n    :target: https://www.gnu.org/licenses/gpl-3.0\n\nLibrary and Command Line Utilities to communicate with the\n`pytlas open-source assistant <https://github.com/atlassistant/pytlas>`_ using\nchannels (such as GSM or MQTT).\n\nPurpose\n-------\n\nIt wraps the **pytlas** library in a tiny **server** accessible from multiple\n**channels** to make it easy to create clients in the language of your choice\nto trigger user agents.\n\nInstallation\n------------\n\n.. code-block:: bash\n\n  $ pip install pytlas_broker # Gets the latest release from pypi\n  $ git clone https://github.com/atlassistant/pytlas-broker && cd pytlas-broker && pip install -e . # or directly from source\n\nGetting started\n---------------\n\nFor now, both the server and the client CLI communicates with an MQTT server. If\nyou wish to provider host, port and credentials, just sets pytlas settings in the\n**mqtt** section:\n\n.. code-block:: ini\n\n  [pytlas]\n  skills_dir=skills/\n\n  [mqtt]\n  host=localhost\n  port=1883\n  username=\n  password=\n\nServer\n~~~~~~\n\nAt the moment, the CLI will serve agents loaded from a configuration folder using\nMQTT.\n\nIt assumes the following directory structure:\n\n- your_data_folder/\n  \n  - default/ # Represents the default directory if the user does not have one\n  \n    - skills/ # Referenced via the below pytlas.ini file\n    - cache/ # Cache folder for pytlas interpreter\n    - pytlas.ini # This file will be loaded at startup by the CLI for initial configuration\n  \n  - john/\n    \n    - cache/ # Cache folder specific for that user\n    - pytlas.ini # May override settings for this user only\n\nWhen the server receive a message from an opened channel, it will create an agent\nfor the user (if it doesn't exist yet) and answer on the last available channel\nfor that user.\n\nTo start the broker, use the following command:\n\n.. code-block:: bash\n\n  $ pytlas-broker serve your_data_folder/\n\nAnd if you have already cloned the **pytlas** repository in the previous folder,\nyou can serve the examples right away using:\n\n.. code-block:: bash\n\n  $ pytlas-broker serve ../pytlas/ --default example\n\nClient\n~~~~~~\n\nOnce your server is running, you can start a tiny REPL client with the command:\n\n.. code-block:: bash\n\n  $ pytlas-broker repl\n\nTesting\n-------\n\n.. code-block:: bash\n\n  $ pip install -e .[test]\n  $ python -m nose --with-doctest -v --with-coverage --cover-package=pytlas_broker\n\nLinting\n-------\n\n.. code-block:: bash\n\n  $ pylint --rcfile .pylintrc pytlas_broker setup.py # in the root directory", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/atlassistant/pytlas-broker", "keywords": "", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "pytlas-broker", "package_url": "https://pypi.org/project/pytlas-broker/", "platform": "", "project_url": "https://pypi.org/project/pytlas-broker/", "project_urls": {"Documentation": "https://pytlas-broker.readthedocs.io/", "Homepage": "https://github.com/atlassistant/pytlas-broker", "Source": "https://github.com/atlassistant/pytlas-broker", "Tracker": "https://github.com/atlassistant/pytlas-broker/issues"}, "release_url": "https://pypi.org/project/pytlas-broker/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Wrap the pytlas library across multiple channels", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Library and Command Line Utilities to communicate with the\n<a href=\"https://github.com/atlassistant/pytlas\" rel=\"nofollow\">pytlas open-source assistant</a> using\nchannels (such as GSM or MQTT).</p>\n<div id=\"purpose\">\n<h2>Purpose</h2>\n<p>It wraps the <strong>pytlas</strong> library in a tiny <strong>server</strong> accessible from multiple\n<strong>channels</strong> to make it easy to create clients in the language of your choice\nto trigger user agents.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install pytlas_broker <span class=\"c1\"># Gets the latest release from pypi\n</span>$ git clone https://github.com/atlassistant/pytlas-broker <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> pytlas-broker <span class=\"o\">&amp;&amp;</span> pip install -e . <span class=\"c1\"># or directly from source</span>\n</pre>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<p>For now, both the server and the client CLI communicates with an MQTT server. If\nyou wish to provider host, port and credentials, just sets pytlas settings in the\n<strong>mqtt</strong> section:</p>\n<pre><span class=\"k\">[pytlas]</span>\n<span class=\"na\">skills_dir</span><span class=\"o\">=</span><span class=\"s\">skills/</span>\n\n<span class=\"k\">[mqtt]</span>\n<span class=\"na\">host</span><span class=\"o\">=</span><span class=\"s\">localhost</span>\n<span class=\"na\">port</span><span class=\"o\">=</span><span class=\"s\">1883</span>\n<span class=\"na\">username</span><span class=\"o\">=</span>\n<span class=\"na\">password</span><span class=\"o\">=</span>\n</pre>\n<div id=\"server\">\n<h3>Server</h3>\n<p>At the moment, the CLI will serve agents loaded from a configuration folder using\nMQTT.</p>\n<p>It assumes the following directory structure:</p>\n<ul>\n<li>your_data_folder/<ul>\n<li>default/ # Represents the default directory if the user does not have one<ul>\n<li>skills/ # Referenced via the below pytlas.ini file</li>\n<li>cache/ # Cache folder for pytlas interpreter</li>\n<li>pytlas.ini # This file will be loaded at startup by the CLI for initial configuration</li>\n</ul>\n</li>\n<li>john/<ul>\n<li>cache/ # Cache folder specific for that user</li>\n<li>pytlas.ini # May override settings for this user only</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>When the server receive a message from an opened channel, it will create an agent\nfor the user (if it doesn\u2019t exist yet) and answer on the last available channel\nfor that user.</p>\n<p>To start the broker, use the following command:</p>\n<pre>$ pytlas-broker serve your_data_folder/\n</pre>\n<p>And if you have already cloned the <strong>pytlas</strong> repository in the previous folder,\nyou can serve the examples right away using:</p>\n<pre>$ pytlas-broker serve ../pytlas/ --default example\n</pre>\n</div>\n<div id=\"client\">\n<h3>Client</h3>\n<p>Once your server is running, you can start a tiny REPL client with the command:</p>\n<pre>$ pytlas-broker repl\n</pre>\n</div>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<pre>$ pip install -e .<span class=\"o\">[</span>test<span class=\"o\">]</span>\n$ python -m nose --with-doctest -v --with-coverage --cover-package<span class=\"o\">=</span>pytlas_broker\n</pre>\n</div>\n<div id=\"linting\">\n<h2>Linting</h2>\n<pre>$ pylint --rcfile .pylintrc pytlas_broker setup.py <span class=\"c1\"># in the root directory</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5950386, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c7b6132d0b9e8bc9b556aabe1a9986b5", "sha256": "73bd69dba645698c5402e5da44ca20dce673656ecc3978455b95cb39d5745ce4"}, "downloads": -1, "filename": "pytlas_broker-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c7b6132d0b9e8bc9b556aabe1a9986b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15336, "upload_time": "2019-10-09T15:06:27", "upload_time_iso_8601": "2019-10-09T15:06:27.822780Z", "url": "https://files.pythonhosted.org/packages/77/aa/30ec7583607e29047078a4b0112619631abf6a8635451171eaad00702170/pytlas_broker-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c7b6132d0b9e8bc9b556aabe1a9986b5", "sha256": "73bd69dba645698c5402e5da44ca20dce673656ecc3978455b95cb39d5745ce4"}, "downloads": -1, "filename": "pytlas_broker-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c7b6132d0b9e8bc9b556aabe1a9986b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15336, "upload_time": "2019-10-09T15:06:27", "upload_time_iso_8601": "2019-10-09T15:06:27.822780Z", "url": "https://files.pythonhosted.org/packages/77/aa/30ec7583607e29047078a4b0112619631abf6a8635451171eaad00702170/pytlas_broker-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:12 2020"}