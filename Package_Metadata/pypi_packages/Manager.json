{"info": {"author": "Thomas Mansencal", "author_email": "thomas.mansencal@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Topic :: Utilities"], "description": "Manager\n=======\n\n..  image:: https://secure.travis-ci.org/KelSolaar/Manager.png?branch=master\n..  image:: https://gemnasium.com/KelSolaar/Manager.png  \n\nIntroduction\n------------\n\n**Manager** is the Components Manager package of `Umbra <https://github.com/KelSolaar/Umbra>`_, `sIBL_GUI <https://github.com/KelSolaar/sIBL_GUI>`_ and `sIBL_Reporter <https://github.com/KelSolaar/sIBL_Reporter>`_. Components are simple python packages extending capabilities of their host application.\n\nInstallation\n------------\n\nThe following dependencies are needed:\n\n-  **Python 2.6.7** or **Python 2.7.3**: http://www.python.org/\n-  **PyQt**: http://www.riverbankcomputing.co.uk/\n\nTo install **Manager** from the `Python Package Index <http://pypi.python.org/pypi/Manager>`_ you can issue this command in a shell::\n\n\tpip install Manager\n\nor this alternative command::\n\n\teasy_install Manager\n\nYou can also directly install from `Github <http://github.com/KelSolaar/Manager>`_ source repository::\n\n\tgit clone git://github.com/KelSolaar/Manager.git\n\tcd Manager\n\tpython setup.py install\n\nIf you want to build the documentation you will also need:\n\n-  **Tidy** http://tidy.sourceforge.net/\n\nUsage\n-----\n\nPlease refer to `Manager - Api <http://thomasmansencal.com/Sharing/Manager/Support/Documentation/Api/index.html>`_ for precise usage examples.\n\nA Component package contains at least a resource **.rc** description file and a main module::\n\n\ttestsComponentA\n\t\u251c\u2500\u2500 __init__.py\n\t\u251c\u2500\u2500 testsComponentA.py\n\t\u2514\u2500\u2500 testsComponentA.rc\n\nThe description file is a configuration style file with a structure similar to what you would find in Microsoft Windows INI files::\n\n\t[Component]\n\tName = core.testsComponentA\n\tTitle = Tests Component A\n\tModule = testsComponentA\n\tObject = TestsComponentA\n\tVersion = 1.0\n\n\t[Informations]\n\tAuthor = Thomas Mansencal\n\tEmail = thomas.mansencal@gmail.com\n\tUrl = http://www.hdrlabs.com/\n\tDescription = Core tests Component A.\n\nGiven the following directories structure::\n\n\tcore\n\t\u251c\u2500\u2500 __init__.py\n\t\u251c\u2500\u2500 testsComponentA\n\t\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\t\u2502\u00a0\u00a0 \u251c\u2500\u2500 testsComponentA.py\n\t\u2502\u00a0\u00a0 \u2514\u2500\u2500 testsComponentA.rc\n\t\u2514\u2500\u2500 testsComponentB\n\t\t\u251c\u2500\u2500 __init__.py\n\t\t\u251c\u2500\u2500 testsComponentB.py\n\t\t\u2514\u2500\u2500 testsComponentB.rc\n\nInstantiating the Components Manager is done the following way::\n\n\n\t>>> manager = Manager((\"./manager/tests/testsManager/resources/components/core\",))\n\t>>> manager.registerComponents()\n\tTrue\n\t>>> manager.listComponents()\n\t['core.testsComponentA', 'core.testsComponentB']\n\t>>> manager.instantiateComponents()\n\tTrue\n\t>>> manager.getInterface(\"core.testsComponentA\")\n\t<testsComponentA.TestsComponentA object at 0x11dd990>\n\n**manager.componentsManager.Manager.getInterface(name)** method returns the interface of given Component, in the previous example it's the object declared in the description file by this statement: **Object = TestsComponentA**.\n\nThree base Components are provided by default:\n\n-  **manager.component.Component**\n-  **manager.qobjectComponent.QObjectComponent**\n-  **manager.qwidgetComponent.QWidgetComponent**\n\nWhen inheriting from those Components, one have to reimplement the following methods for all the Components types:\n\n-  **activate**\n-  **deactivate**\n\n**activated** attribute has to be set accordingly in the methods implementation.\n\nWhen implementing a **manager.qwidgetComponent.Component** or **manager.qobjectComponent.QObjectComponent**, the following methods are also needed:\n\n-  **initialize**\n-  **uninitialize**\n\n**initialized** attribute has to be set accordingly in the methods implementation.\n\nOr alternatively, those methods when implementing a **manager.qwidgetComponent.QWidgetComponent**:\n\n-  **initializeUi**\n-  **uninitializeUi**\n\n**initializedUi** attribute has to be set accordingly in the methods implementation.\n\nReference Component implementation example class::\n\n\n\tclass TestsComponentA(Component):\n\n\t\tdef __init__(self, name=None):\n\t\t\tComponent.__init__(self, name=name)\n\t\t\t\n\t\t\tself.deactivatable = True\n\n\t\tdef activate(self):\n\t\t\tprint(\"> Activating '{0}' Component.\".format(self.__class__.__name__))\n\n\t\t\tself.activated = True\n\t\t\treturn True\n\n\t\tdef deactivate(self):\n\t\t\tprint(\"> Deactivating '{0}' Component.\".format(self.__class__.__name__))\n\n\t\t\tself.activated = False\n\t\t\treturn True\n\n\t\tdef initialize(self):\n\t\t\tprint(\"> Initializing '{0}' Component.\".format(self.__class__.__name__))\n\n\t\t\tself.initialized = True\n\t\t\treturn True\n\n\t\tdef uninitialize(self):\n\t\t\tprint(\"> Uninitializing '{0}' Component.\".format(self.__class__.__name__))\n\n\t\t\tself.initialized = False\n\t\t\treturn True\n\nAbout\n-----\n\n| **Manager** by Thomas Mansencal \u2013 2008 - 2014\n| Copyright \u00a9 2008 - 2014 \u2013 Thomas Mansencal \u2013 `thomas.mansencal@gmail.com <mailto:thomas.mansencal@gmail.com>`_\n| This software is released under terms of GNU GPL V3 license: http://www.gnu.org/licenses/\n| `http://www.thomasmansencal.com/ <http://www.thomasmansencal.com/>`_", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/KelSolaar/Manager", "keywords": null, "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "Manager", "package_url": "https://pypi.org/project/Manager/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Manager/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/KelSolaar/Manager"}, "release_url": "https://pypi.org/project/Manager/2.0.5/", "requires_dist": null, "requires_python": null, "summary": "Manager is the Components Manager package of Umbra, sIBL_GUI and sIBL_Reporter.", "version": "2.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://secure.travis-ci.org/KelSolaar/Manager.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/59ca0f4be19d416a98acaf737be7f37bd266c9ba/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f4b656c536f6c6161722f4d616e616765722e706e673f6272616e63683d6d6173746572\">\n<img alt=\"https://gemnasium.com/KelSolaar/Manager.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b773b1d7d97356b2f5ae05aa765ff9944dac8f4/68747470733a2f2f67656d6e617369756d2e636f6d2f4b656c536f6c6161722f4d616e616765722e706e67\">\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p><strong>Manager</strong> is the Components Manager package of <a href=\"https://github.com/KelSolaar/Umbra\" rel=\"nofollow\">Umbra</a>, <a href=\"https://github.com/KelSolaar/sIBL_GUI\" rel=\"nofollow\">sIBL_GUI</a> and <a href=\"https://github.com/KelSolaar/sIBL_Reporter\" rel=\"nofollow\">sIBL_Reporter</a>. Components are simple python packages extending capabilities of their host application.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The following dependencies are needed:</p>\n<ul>\n<li><strong>Python 2.6.7</strong> or <strong>Python 2.7.3</strong>: <a href=\"http://www.python.org/\" rel=\"nofollow\">http://www.python.org/</a></li>\n<li><strong>PyQt</strong>: <a href=\"http://www.riverbankcomputing.co.uk/\" rel=\"nofollow\">http://www.riverbankcomputing.co.uk/</a></li>\n</ul>\n<p>To install <strong>Manager</strong> from the <a href=\"http://pypi.python.org/pypi/Manager\" rel=\"nofollow\">Python Package Index</a> you can issue this command in a shell:</p>\n<pre>pip install Manager\n</pre>\n<p>or this alternative command:</p>\n<pre>easy_install Manager\n</pre>\n<p>You can also directly install from <a href=\"http://github.com/KelSolaar/Manager\" rel=\"nofollow\">Github</a> source repository:</p>\n<pre>git clone git://github.com/KelSolaar/Manager.git\ncd Manager\npython setup.py install\n</pre>\n<p>If you want to build the documentation you will also need:</p>\n<ul>\n<li><strong>Tidy</strong> <a href=\"http://tidy.sourceforge.net/\" rel=\"nofollow\">http://tidy.sourceforge.net/</a></li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Please refer to <a href=\"http://thomasmansencal.com/Sharing/Manager/Support/Documentation/Api/index.html\" rel=\"nofollow\">Manager - Api</a> for precise usage examples.</p>\n<p>A Component package contains at least a resource <strong>.rc</strong> description file and a main module:</p>\n<pre>testsComponentA\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 testsComponentA.py\n\u2514\u2500\u2500 testsComponentA.rc\n</pre>\n<p>The description file is a configuration style file with a structure similar to what you would find in Microsoft Windows INI files:</p>\n<pre>[Component]\nName = core.testsComponentA\nTitle = Tests Component A\nModule = testsComponentA\nObject = TestsComponentA\nVersion = 1.0\n\n[Informations]\nAuthor = Thomas Mansencal\nEmail = thomas.mansencal@gmail.com\nUrl = http://www.hdrlabs.com/\nDescription = Core tests Component A.\n</pre>\n<p>Given the following directories structure:</p>\n<pre>core\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 testsComponentA\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 testsComponentA.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 testsComponentA.rc\n\u2514\u2500\u2500 testsComponentB\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 testsComponentB.py\n        \u2514\u2500\u2500 testsComponentB.rc\n</pre>\n<p>Instantiating the Components Manager is done the following way:</p>\n<pre>&gt;&gt;&gt; manager = Manager((\"./manager/tests/testsManager/resources/components/core\",))\n&gt;&gt;&gt; manager.registerComponents()\nTrue\n&gt;&gt;&gt; manager.listComponents()\n['core.testsComponentA', 'core.testsComponentB']\n&gt;&gt;&gt; manager.instantiateComponents()\nTrue\n&gt;&gt;&gt; manager.getInterface(\"core.testsComponentA\")\n&lt;testsComponentA.TestsComponentA object at 0x11dd990&gt;\n</pre>\n<p><strong>manager.componentsManager.Manager.getInterface(name)</strong> method returns the interface of given Component, in the previous example it\u2019s the object declared in the description file by this statement: <strong>Object = TestsComponentA</strong>.</p>\n<p>Three base Components are provided by default:</p>\n<ul>\n<li><strong>manager.component.Component</strong></li>\n<li><strong>manager.qobjectComponent.QObjectComponent</strong></li>\n<li><strong>manager.qwidgetComponent.QWidgetComponent</strong></li>\n</ul>\n<p>When inheriting from those Components, one have to reimplement the following methods for all the Components types:</p>\n<ul>\n<li><strong>activate</strong></li>\n<li><strong>deactivate</strong></li>\n</ul>\n<p><strong>activated</strong> attribute has to be set accordingly in the methods implementation.</p>\n<p>When implementing a <strong>manager.qwidgetComponent.Component</strong> or <strong>manager.qobjectComponent.QObjectComponent</strong>, the following methods are also needed:</p>\n<ul>\n<li><strong>initialize</strong></li>\n<li><strong>uninitialize</strong></li>\n</ul>\n<p><strong>initialized</strong> attribute has to be set accordingly in the methods implementation.</p>\n<p>Or alternatively, those methods when implementing a <strong>manager.qwidgetComponent.QWidgetComponent</strong>:</p>\n<ul>\n<li><strong>initializeUi</strong></li>\n<li><strong>uninitializeUi</strong></li>\n</ul>\n<p><strong>initializedUi</strong> attribute has to be set accordingly in the methods implementation.</p>\n<p>Reference Component implementation example class:</p>\n<pre>class TestsComponentA(Component):\n\n        def __init__(self, name=None):\n                Component.__init__(self, name=name)\n\n                self.deactivatable = True\n\n        def activate(self):\n                print(\"&gt; Activating '{0}' Component.\".format(self.__class__.__name__))\n\n                self.activated = True\n                return True\n\n        def deactivate(self):\n                print(\"&gt; Deactivating '{0}' Component.\".format(self.__class__.__name__))\n\n                self.activated = False\n                return True\n\n        def initialize(self):\n                print(\"&gt; Initializing '{0}' Component.\".format(self.__class__.__name__))\n\n                self.initialized = True\n                return True\n\n        def uninitialize(self):\n                print(\"&gt; Uninitializing '{0}' Component.\".format(self.__class__.__name__))\n\n                self.initialized = False\n                return True\n</pre>\n</div>\n<div id=\"about\">\n<h2>About</h2>\n<div>\n<div><strong>Manager</strong> by Thomas Mansencal \u2013 2008 - 2014</div>\n<div>Copyright \u00a9 2008 - 2014 \u2013 Thomas Mansencal \u2013 <a href=\"mailto:thomas.mansencal%40gmail.com\">thomas<span>.</span>mansencal<span>@</span>gmail<span>.</span>com</a></div>\n<div>This software is released under terms of GNU GPL V3 license: <a href=\"http://www.gnu.org/licenses/\" rel=\"nofollow\">http://www.gnu.org/licenses/</a></div>\n<div><a href=\"http://www.thomasmansencal.com/\" rel=\"nofollow\">http://www.thomasmansencal.com/</a></div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1050802, "releases": {"2.0.1": [{"comment_text": "", "digests": {"md5": "cde7ea4d0319f989fcc71a52bf5a8f5f", "sha256": "955495f7eaa7d0f747d1b25f73d200e862d4e64b2cb249862ba582fcb531db5f"}, "downloads": -1, "filename": "Manager-2.0.1.tar.gz", "has_sig": false, "md5_digest": "cde7ea4d0319f989fcc71a52bf5a8f5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 519582, "upload_time": "2012-09-16T14:28:37", "upload_time_iso_8601": "2012-09-16T14:28:37.430237Z", "url": "https://files.pythonhosted.org/packages/35/f1/a0b78c61cb606f5a6be4fd6db0f72ce273e9c8388e839e0b5dbd90d191ea/Manager-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "e8e4ad299861f87030740086500e07e8", "sha256": "f0a90f296031d9b5de90c80278e1d3e891eaca93428c9860aed49b64ecd739ce"}, "downloads": -1, "filename": "Manager-2.0.2.tar.gz", "has_sig": false, "md5_digest": "e8e4ad299861f87030740086500e07e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 520171, "upload_time": "2012-09-17T20:46:00", "upload_time_iso_8601": "2012-09-17T20:46:00.164525Z", "url": "https://files.pythonhosted.org/packages/3a/6f/7819aa230673f0e121485f8f843d2bfcacd0aba360f3459efce8178b8e2d/Manager-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "62b6a49a9979851af215a2afee7a9435", "sha256": "74b668f3e0ff4e337f2b40e7558837a9718c6a2667292804a36862c8a94efffe"}, "downloads": -1, "filename": "Manager-2.0.3.tar.gz", "has_sig": false, "md5_digest": "62b6a49a9979851af215a2afee7a9435", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 537006, "upload_time": "2012-11-26T14:54:56", "upload_time_iso_8601": "2012-11-26T14:54:56.337529Z", "url": "https://files.pythonhosted.org/packages/fd/7e/1823c951999dc63fc4e7a1e7daf9e41911a74d5362b32c94d29fe3fc993a/Manager-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "408b687232ffec83f3a68c8e5b689931", "sha256": "a49d12aedc40d5f7ab0cd8e717caef3be0766ea85005c497403f83ed2bbfa46c"}, "downloads": -1, "filename": "Manager-2.0.4.tar.gz", "has_sig": false, "md5_digest": "408b687232ffec83f3a68c8e5b689931", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 539588, "upload_time": "2013-04-21T06:59:01", "upload_time_iso_8601": "2013-04-21T06:59:01.721478Z", "url": "https://files.pythonhosted.org/packages/f2/42/579c00cb1c6ae6f25a9b3138e565c1b5c052dc1be22f2f3b233ebc5069d9/Manager-2.0.4.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "61bc2f8d2d027de8899859cd9310ecaa", "sha256": "89d16c3835d66f2b95352ee4449f8ece0f983b0c5171ce0774128a129a879091"}, "downloads": -1, "filename": "Manager-2.0.5.tar.gz", "has_sig": false, "md5_digest": "61bc2f8d2d027de8899859cd9310ecaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 751828, "upload_time": "2014-04-03T22:06:51", "upload_time_iso_8601": "2014-04-03T22:06:51.929992Z", "url": "https://files.pythonhosted.org/packages/61/8d/3b9bce5400950d1029131dfcbb8b4487ca932abbe735bda412fdae149e7b/Manager-2.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "61bc2f8d2d027de8899859cd9310ecaa", "sha256": "89d16c3835d66f2b95352ee4449f8ece0f983b0c5171ce0774128a129a879091"}, "downloads": -1, "filename": "Manager-2.0.5.tar.gz", "has_sig": false, "md5_digest": "61bc2f8d2d027de8899859cd9310ecaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 751828, "upload_time": "2014-04-03T22:06:51", "upload_time_iso_8601": "2014-04-03T22:06:51.929992Z", "url": "https://files.pythonhosted.org/packages/61/8d/3b9bce5400950d1029131dfcbb8b4487ca932abbe735bda412fdae149e7b/Manager-2.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:37 2020"}