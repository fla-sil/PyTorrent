{"info": {"author": "Norbert Logiewa", "author_email": "norbertlogiewa96@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Topic :: Database :: Front-Ends"], "description": "# SQLite REPL written in Python3\n\n## Good completion\n\n![](https://raw.githubusercontent.com/nl253/SQLiteREPL/master/screens/6.png)\n\n![](https://raw.githubusercontent.com/nl253/SQLiteREPL/master/screens/1.png)\n\n![](https://raw.githubusercontent.com/nl253/SQLiteREPL/master/screens/2.png)\n\n![](https://raw.githubusercontent.com/nl253/SQLiteREPL/master/screens/3.png)\n\n![](https://raw.githubusercontent.com/nl253/SQLiteREPL/master/screens/7.png)\n\n![](https://raw.githubusercontent.com/nl253/SQLiteREPL/master/screens/8.png)\n\n![](https://raw.githubusercontent.com/nl253/SQLiteREPL/master/screens/9.png)\n\n![](https://raw.githubusercontent.com/nl253/SQLiteREPL/master/screens/10.png)\n\n```\nusage: SQLiteREPL [-h] [-H [PATH]] [-e [FILE]] [-m] [-v] [-M]\n                  [--no-history-search] [--no-complete-while-typing]\n                  [--no-infobar] [--no-editor] [-t STYLE] [-s STYLE]\n                  [-p STRING]\n                  [database]\n\nA dead simple REPL for SQLite\n\npositional arguments:\n  database              path to database\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -H [PATH], --history [PATH]\n                        path to history file\n  -e [FILE], --eval [FILE]\n                        eval SQL script before running the REPL\n  -m, --multiline       enable multiline mode (useful for creating tables)\n  -v, --verbose         enable verbose logging\n  -M, --memory          in memory database\n  --no-history-search   disable history search\n  --no-complete-while-typing\n                        disable completion while typing\n  --no-infobar          disable info bar at the bottom of the screen\n  --no-editor           disable opening in $EDITOR\n  -t STYLE, --table_style STYLE\n                        set table style to <STYLE>, (see\n                        https://pypi.org/project/tabulate/) (hint: try\n                        \"simple\", \"orgtbl\", \"pipe\", \"html\" or \"latex\")\n  -s STYLE, --style STYLE\n                        pygments style (see\n                        http://pygments.org/docs/styles/#builtin-styles)\n  -p STRING, --prompt STRING\n                        prompt string\n```\n\n## Modify REPL whilst it's running  \n\nThe following `.meta` commands are supported:\n\n```\n   .dump [FILE]            Stringify database into SQL commands or STDOUT if FILE is not provided.\n  .exit                   Exit the REPL.\n  .help [PATTERN]         Display meta commands matching PATTERN or ALL if PATTERN is not provided.\n  .mode [STYLE]           Change table style to STYLE or display current style if STYLE is not provided.\n  .open [DATABASE]        Close this database and open DATABASE or show current database if DATABASE is not provided.\n.output [FILE]            Redirect output of commands to FILE (or to STDOUT if FILE == \"stdout\"), shows current output stream if FILE is not provided.\n .print [STRING, ...]     Display given STRING in the terminal.\n.prompt [STRING]          Change prompt to STRING.\n  .quit                   Exit the REPL.\n  .read [FILE]            Eval SQL from FILE.\n  .save <FILE>            Save in-memory database to FILE.\n.schema [PATTERN]         Show schemas for tables in the database matching PATTERN.\n .shell <CMD> [ARG, ...]  Run an OS command CMD.\n  .show [PATTERN]         Display info about the REPL starting with PATTERN or all info if PATTERN is not provided.\n .style [STYLE]           Change style to STYLE or show current style if STYLE is not provided.\n.system <CMD> [ARG, ...]  Run an OS command CMD with ARGS.\n.tables [PATTERN]         Show tables in the database matching PATTERN or show all tables if PATTERN is not provided.\n```\n\n**NOTE**:\n\nThese are actually a subset of what the official sqlite3 REPL supports. The syntax is kept similar.\n\n**NOTE**:\n\nunless you specify the database location with database, it will be\nloaded in memory.\n\n## Customisation\n\n- check out pygments for all the possible styles\n- check out tabulate for all the table types\n- use aliases for \"semi-permanent\" config e.g.: `alias sqlite='sqliterepl --multiline'`\n\n## Compatibility\n\nIt should work on Win10 and Linux.\n\n## Installation\n\n```sh\n$ pip install --user sqliterepl\n```\n\n**NOTE** <br>\nmake sure your `~/.local/bin` (GNU/Linux) or `~\\AppData\\Roaming\\Python\\Python<VERSION>\\Scripts` (Win10) dir is in `$PATH`.\n\n## Running\n\n```sh\n$ sqliterepl\n```\n\n## Limitations\n\n-   not context sensitive\n-   doesn't complete table names\n-   no table headings\n\n## Dependencies\n\n- [prompt-toolkit](https://github.com/jonathanslenders/python-prompt-toolkit)\n- [tabulate](https://pypi.org/project/tabulate/)\n- Python >= 3.7\n\n**Note**:\n\nSQLiteREPL has been updated to use `prompt_toolkit 2`.\n\n## Related\n\n-   <https://github.com/dbcli/mycli>\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nl253/SQLiteREPL", "keywords": "database sqlite3 sqlite sqliterepl REPL SQLite prompt-toolkit prompt_toolkit", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sqliterepl", "package_url": "https://pypi.org/project/sqliterepl/", "platform": "", "project_url": "https://pypi.org/project/sqliterepl/", "project_urls": {"Bug Tracker": "https://github.com/nl253/SQLiteREPL/issues", "Homepage": "https://github.com/nl253/SQLiteREPL", "Source Code": "https://github.com/nl253/SQLiteREPL"}, "release_url": "https://pypi.org/project/sqliterepl/2.0.0/", "requires_dist": ["prompt-toolkit (>=2.0)", "tabulate (>=0.8.1)", "pygments (>=2.2.0)"], "requires_python": ">=3.6", "summary": "SQLite REPL written in python3", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SQLite REPL written in Python3</h1>\n<h2>Good completion</h2>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e25bb7c8287fbde3b2b3aa6e0b649d87ab32e3e/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e6c3235332f53514c6974655245504c2f6d61737465722f73637265656e732f362e706e67\"></p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/983be7ef0ce5b5cb679c6bda59e3e9e0052bb1ef/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e6c3235332f53514c6974655245504c2f6d61737465722f73637265656e732f312e706e67\"></p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/947124b34433bb09aa150570dab1855236ea1cdb/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e6c3235332f53514c6974655245504c2f6d61737465722f73637265656e732f322e706e67\"></p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/605287be4b04cadee93f7b4aece7922f2dcd1cb9/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e6c3235332f53514c6974655245504c2f6d61737465722f73637265656e732f332e706e67\"></p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9fb068d9c7360812569d67ff5044d7294647de27/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e6c3235332f53514c6974655245504c2f6d61737465722f73637265656e732f372e706e67\"></p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dc9bb93cc0b5ee4ff3d681eb38127b1b846228de/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e6c3235332f53514c6974655245504c2f6d61737465722f73637265656e732f382e706e67\"></p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/244361a74566effba0632007b6f2f08636ab4f25/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e6c3235332f53514c6974655245504c2f6d61737465722f73637265656e732f392e706e67\"></p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a2fcde4986ce8698e11fc3d3bed0de0f3e5c701/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e6c3235332f53514c6974655245504c2f6d61737465722f73637265656e732f31302e706e67\"></p>\n<pre><code>usage: SQLiteREPL [-h] [-H [PATH]] [-e [FILE]] [-m] [-v] [-M]\n                  [--no-history-search] [--no-complete-while-typing]\n                  [--no-infobar] [--no-editor] [-t STYLE] [-s STYLE]\n                  [-p STRING]\n                  [database]\n\nA dead simple REPL for SQLite\n\npositional arguments:\n  database              path to database\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -H [PATH], --history [PATH]\n                        path to history file\n  -e [FILE], --eval [FILE]\n                        eval SQL script before running the REPL\n  -m, --multiline       enable multiline mode (useful for creating tables)\n  -v, --verbose         enable verbose logging\n  -M, --memory          in memory database\n  --no-history-search   disable history search\n  --no-complete-while-typing\n                        disable completion while typing\n  --no-infobar          disable info bar at the bottom of the screen\n  --no-editor           disable opening in $EDITOR\n  -t STYLE, --table_style STYLE\n                        set table style to &lt;STYLE&gt;, (see\n                        https://pypi.org/project/tabulate/) (hint: try\n                        \"simple\", \"orgtbl\", \"pipe\", \"html\" or \"latex\")\n  -s STYLE, --style STYLE\n                        pygments style (see\n                        http://pygments.org/docs/styles/#builtin-styles)\n  -p STRING, --prompt STRING\n                        prompt string\n</code></pre>\n<h2>Modify REPL whilst it's running</h2>\n<p>The following <code>.meta</code> commands are supported:</p>\n<pre><code>   .dump [FILE]            Stringify database into SQL commands or STDOUT if FILE is not provided.\n  .exit                   Exit the REPL.\n  .help [PATTERN]         Display meta commands matching PATTERN or ALL if PATTERN is not provided.\n  .mode [STYLE]           Change table style to STYLE or display current style if STYLE is not provided.\n  .open [DATABASE]        Close this database and open DATABASE or show current database if DATABASE is not provided.\n.output [FILE]            Redirect output of commands to FILE (or to STDOUT if FILE == \"stdout\"), shows current output stream if FILE is not provided.\n .print [STRING, ...]     Display given STRING in the terminal.\n.prompt [STRING]          Change prompt to STRING.\n  .quit                   Exit the REPL.\n  .read [FILE]            Eval SQL from FILE.\n  .save &lt;FILE&gt;            Save in-memory database to FILE.\n.schema [PATTERN]         Show schemas for tables in the database matching PATTERN.\n .shell &lt;CMD&gt; [ARG, ...]  Run an OS command CMD.\n  .show [PATTERN]         Display info about the REPL starting with PATTERN or all info if PATTERN is not provided.\n .style [STYLE]           Change style to STYLE or show current style if STYLE is not provided.\n.system &lt;CMD&gt; [ARG, ...]  Run an OS command CMD with ARGS.\n.tables [PATTERN]         Show tables in the database matching PATTERN or show all tables if PATTERN is not provided.\n</code></pre>\n<p><strong>NOTE</strong>:</p>\n<p>These are actually a subset of what the official sqlite3 REPL supports. The syntax is kept similar.</p>\n<p><strong>NOTE</strong>:</p>\n<p>unless you specify the database location with database, it will be\nloaded in memory.</p>\n<h2>Customisation</h2>\n<ul>\n<li>check out pygments for all the possible styles</li>\n<li>check out tabulate for all the table types</li>\n<li>use aliases for \"semi-permanent\" config e.g.: <code>alias sqlite='sqliterepl --multiline'</code></li>\n</ul>\n<h2>Compatibility</h2>\n<p>It should work on Win10 and Linux.</p>\n<h2>Installation</h2>\n<pre>$ pip install --user sqliterepl\n</pre>\n<p><strong>NOTE</strong> <br>\nmake sure your <code>~/.local/bin</code> (GNU/Linux) or <code>~\\AppData\\Roaming\\Python\\Python&lt;VERSION&gt;\\Scripts</code> (Win10) dir is in <code>$PATH</code>.</p>\n<h2>Running</h2>\n<pre>$ sqliterepl\n</pre>\n<h2>Limitations</h2>\n<ul>\n<li>not context sensitive</li>\n<li>doesn't complete table names</li>\n<li>no table headings</li>\n</ul>\n<h2>Dependencies</h2>\n<ul>\n<li><a href=\"https://github.com/jonathanslenders/python-prompt-toolkit\" rel=\"nofollow\">prompt-toolkit</a></li>\n<li><a href=\"https://pypi.org/project/tabulate/\" rel=\"nofollow\">tabulate</a></li>\n<li>Python &gt;= 3.7</li>\n</ul>\n<p><strong>Note</strong>:</p>\n<p>SQLiteREPL has been updated to use <code>prompt_toolkit 2</code>.</p>\n<h2>Related</h2>\n<ul>\n<li><a href=\"https://github.com/dbcli/mycli\" rel=\"nofollow\">https://github.com/dbcli/mycli</a></li>\n</ul>\n\n          </div>"}, "last_serial": 4669133, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "d67d203593276f2793f6ca82dc9dd720", "sha256": "c05be0cc59624b80c1a5cd1ea71b44fcca362d7d4d815a3dcbc09d34d731bba1"}, "downloads": -1, "filename": "sqliterepl-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d67d203593276f2793f6ca82dc9dd720", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17058, "upload_time": "2019-01-07T15:49:23", "upload_time_iso_8601": "2019-01-07T15:49:23.443618Z", "url": "https://files.pythonhosted.org/packages/52/0f/0182961237f72d7e50b98e42fcf35e97867f850b2c6a976fa9e6b114e055/sqliterepl-2.0.0-py3-none-any.whl", "yanked": false}], "2.0.0a1": [{"comment_text": "", "digests": {"md5": "6edf204a18562d5261f12c5a74d56cb0", "sha256": "c6bf8ce70663a018289d1e19c2e7140699848215ab195e5ba1ae9b04573c9d26"}, "downloads": -1, "filename": "sqliterepl-2.0.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "6edf204a18562d5261f12c5a74d56cb0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16966, "upload_time": "2019-01-07T15:39:03", "upload_time_iso_8601": "2019-01-07T15:39:03.354787Z", "url": "https://files.pythonhosted.org/packages/6d/4e/7f123f9f21de03adacb30accf8eb38f5f828aa577e37e6f34b654636e6d7/sqliterepl-2.0.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f47f013fb9a9875d008c529051ecadf", "sha256": "2ee613f1772f04421bab5572b3a29526959f7f61a539c10ba8eeac53d29290df"}, "downloads": -1, "filename": "sqliterepl-2.0.0a1.tar.gz", "has_sig": false, "md5_digest": "1f47f013fb9a9875d008c529051ecadf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16663, "upload_time": "2019-01-07T15:39:05", "upload_time_iso_8601": "2019-01-07T15:39:05.452850Z", "url": "https://files.pythonhosted.org/packages/fb/98/16080b668b1dc7a3690dadad26e45ea5597c14dbe7ef5c7b6d3bbb3879e3/sqliterepl-2.0.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d67d203593276f2793f6ca82dc9dd720", "sha256": "c05be0cc59624b80c1a5cd1ea71b44fcca362d7d4d815a3dcbc09d34d731bba1"}, "downloads": -1, "filename": "sqliterepl-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d67d203593276f2793f6ca82dc9dd720", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17058, "upload_time": "2019-01-07T15:49:23", "upload_time_iso_8601": "2019-01-07T15:49:23.443618Z", "url": "https://files.pythonhosted.org/packages/52/0f/0182961237f72d7e50b98e42fcf35e97867f850b2c6a976fa9e6b114e055/sqliterepl-2.0.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:03:41 2020"}