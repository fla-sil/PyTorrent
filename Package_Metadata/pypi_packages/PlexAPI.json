{"info": {"author": "Michael Shepanski", "author_email": "michael.shepanski@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Python-PlexAPI\n==============\n.. image:: https://readthedocs.org/projects/python-plexapi/badge/?version=latest\n    :target: http://python-plexapi.readthedocs.io/en/latest/?badge=latest\n.. image:: https://travis-ci.org/pkkid/python-plexapi.svg?branch=master\n    :target: https://travis-ci.org/pkkid/python-plexapi\n.. image:: https://coveralls.io/repos/github/pkkid/python-plexapi/badge.svg?branch=master\n    :target: https://coveralls.io/github/pkkid/python-plexapi?branch=master\n\n\nOverview\n--------\nUnofficial Python bindings for the Plex API. Our goal is to match all capabilities of the official\nPlex Web Client. A few of the many features we currently support are:\n\n* Navigate local or remote shared libraries.\n* Perform library actions such as scan, analyze, empty trash.\n* Remote control and play media on connected clients.\n* Listen in on all Plex Server notifications.\n \n\nInstallation & Documentation\n----------------------------\n\n.. code-block:: python\n\n    pip install plexapi\n\nDocumentation_ can be found at Read the Docs.\n\n.. _Documentation: http://python-plexapi.readthedocs.io/en/latest/\n\n\nGetting a PlexServer Instance\n-----------------------------\n\nThere are two types of authentication. If you are running on a separate network\nor using Plex Users you can log into MyPlex to get a PlexServer instance. An\nexample of this is below. NOTE: Servername below is the name of the server (not\nthe hostname and port).  If logged into Plex Web you can see the server name in\nthe top left above your available libraries.\n\n.. code-block:: python\n\n    from plexapi.myplex import MyPlexAccount\n    account = MyPlexAccount('<USERNAME>', '<PASSWORD>')\n    plex = account.resource('<SERVERNAME>').connect()  # returns a PlexServer instance\n\nIf you want to avoid logging into MyPlex and you already know your auth token\nstring, you can use the PlexServer object directly as above, but passing in\nthe baseurl and auth token directly.\n\n.. code-block:: python\n\n    from plexapi.server import PlexServer\n    baseurl = 'http://plexserver:32400'\n    token = '2ffLuB84dqLswk9skLos'\n    plex = PlexServer(baseurl, token)\n\n\nUsage Examples\n--------------\n\n.. code-block:: python\n\n    # Example 1: List all unwatched movies.\n    movies = plex.library.section('Movies')\n    for video in movies.search(unwatched=True):\n        print(video.title)\n\n\n.. code-block:: python\n\n    # Example 2: Mark all Game of Thrones episodes watched.\n    plex.library.section('TV Shows').get('Game of Thrones').markWatched()\n\n\n.. code-block:: python\n\n    # Example 3: List all clients connected to the Server.\n    for client in plex.clients():\n        print(client.title)\n\n\n.. code-block:: python\n\n    # Example 4: Play the movie Cars on another client.\n    # Note: Client must be on same network as server.\n    cars = plex.library.section('Movies').get('Cars')\n    client = plex.client(\"Michael's iPhone\")\n    client.playMedia(cars)\n\n\n.. code-block:: python\n\n    # Example 5: List all content with the word 'Game' in the title.\n    for video in plex.search('Game'):\n        print('%s (%s)' % (video.title, video.TYPE))\n\n\n.. code-block:: python\n\n    # Example 6: List all movies directed by the same person as Elephants Dream.\n    movies = plex.library.section('Movies')\n    die_hard = movies.get('Elephants Dream')\n    director = die_hard.directors[0]\n    for movie in movies.search(None, director=director):\n        print(movie.title)\n\n\n.. code-block:: python\n\n    # Example 7: List files for the latest episode of The 100.\n    last_episode = plex.library.section('TV Shows').get('The 100').episodes()[-1]\n    for part in last_episode.iterParts():\n        print(part.file)\n\n\n.. code-block:: python\n\n    # Example 8: Get audio/video/all playlists\n    for playlist in plex.playlists():\n        print(playlist.title)\n\n\n.. code-block:: python\n\n    # Example 9: Rate the 100 four stars.\n    plex.library.section('TV Shows').get('The 100').rate(8.0)\n\n\nRunning tests over PlexAPI\n--------------------------\n\nIn order to test the PlexAPI library you have to prepare a Plex Server instance with following libraries:\n\n1. Movies section (agent `com.plexapp.agents.imdb`) containing both movies:\n    * Sintel - https://durian.blender.org/\n    * Elephants Dream - https://orange.blender.org/\n    * Sita Sings the Blues - http://www.sitasingstheblues.com/\n    * Big Buck Bunny - https://peach.blender.org/\n2. TV Show section (agent `com.plexapp.agents.thetvdb`) containing the shows:\n    * Game of Thrones (Season 1 and 2)\n    * The 100 (Seasons 1 and 2)\n    * (or symlink the above movies with proper names)\n3. Music section (agent `com.plexapp.agents.lastfm`) containing the albums:\n    * Infinite State - Unmastered Impulses - https://github.com/kennethreitz/unmastered-impulses\n    * Broke For Free - Layers - http://freemusicarchive.org/music/broke_for_free/Layers/\n4. A Photos section (any agent) containing the photoalbums (photoalbum is just a folder on your disk):\n    * `Cats`\n    * Within `Cats` album you need to place 3 photos (cute cat photos, of course)\n    * Within `Cats` album you should place 3 more photoalbums (one of them should be named `Cats in bed`,\n      names of others doesn't matter)\n    * Within `Cats in bed` you need to place 7 photos\n    * Within other 2 albums you should place 1 photo in each\n\nInstead of manual creation of the library you could use a script `tools/plex-boostraptest.py` with appropriate\narguments and add this new server to a shared user which username is defined in environment veriable `SHARED_USERNAME`.\nIt uses `official docker image`_ to create a proper instance.\n\nAlso in order to run most of the tests you have to provide some environment variables:\n\n* `PLEXAPI_AUTH_SERVER_BASEURL` containing an URL to your Plex instance, e.g. `http://127.0.0.1:32400` (without trailing\n  slash)\n* `PLEXAPI_AUTH_MYPLEX_USERNAME` and `PLEXAPI_AUTH_MYPLEX_PASSWORD` with your MyPlex username and password accordingly\n\nAfter this step you can run tests with following command:\n\n.. code-block:: bash\n\n    py.test tests -rxXs --ignore=tests/test_sync.py\n\nSome of the tests in main test-suite require a shared user in your account (e.g. `test_myplex_users`,\n`test_myplex_updateFriend`, etc.), you need to provide a valid shared user's username to get them running you need to\nprovide the username of the shared user as an environment variable `SHARED_USERNAME`. You can enable a Guest account and\nsimply pass `Guest` as `SHARED_USERNAME` (or just create a user like `plexapitest` and play with it).\n\nTo be able to run tests over Mobile Sync api you have to some some more environment variables, to following values\nexactly:\n\n* PLEXAPI_HEADER_PROVIDES='controller,sync-target'\n* PLEXAPI_HEADER_PLATFORM=iOS\n* PLEXAPI_HEADER_PLATFORM_VERSION=11.4.1\n* PLEXAPI_HEADER_DEVICE=iPhone\n\nAnd finally run the sync-related tests:\n\n.. code-block:: bash\n\n    py.test tests/test_sync.py -rxXs\n\n.. _official docker image: https://hub.docker.com/r/plexinc/pms-docker/\n\nCommon Questions\n----------------\n\n**Why are you using camelCase and not following PEP8 guidelines?**\n\nThis API reads XML documents provided by MyPlex and the Plex Server.\nWe decided to conform to their style so that the API variable names directly\nmatch with the provided XML documents.\n\n\n**Why don't you offer feature XYZ?**\n\nThis library is meant to be a wrapper around the XML pages the Plex\nserver provides. If we are not providing an API that is offerered in the\nXML pages, please let us know! -- Adding additional features beyond that\nshould be done outside the scope of this library.\n\n\n**What are some helpful links if trying to understand the raw Plex API?**\n\n* https://github.com/plexinc/plex-media-player/wiki/Remote-control-API\n* https://forums.plex.tv/discussion/104353/pms-web-api-documentation\n* https://github.com/Arcanemagus/plex-api/wiki", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pkkid/python-plexapi", "keywords": "plex,api", "license": "", "maintainer": "", "maintainer_email": "", "name": "PlexAPI", "package_url": "https://pypi.org/project/PlexAPI/", "platform": "", "project_url": "https://pypi.org/project/PlexAPI/", "project_urls": {"Homepage": "https://github.com/pkkid/python-plexapi"}, "release_url": "https://pypi.org/project/PlexAPI/3.4.0/", "requires_dist": null, "requires_python": "", "summary": "Python bindings for the Plex API.", "version": "3.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://python-plexapi.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/python-plexapi/badge/?version=latest\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b78eb346d28268a9cf53eab587f18702a3fd0fcc/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707974686f6e2d706c65786170692f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.org/pkkid/python-plexapi\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/pkkid/python-plexapi.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/77db21a2190febdfeccf496a7d64a5da323a15d7/68747470733a2f2f7472617669732d63692e6f72672f706b6b69642f707974686f6e2d706c65786170692e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/pkkid/python-plexapi?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/pkkid/python-plexapi/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2964d8a6f27a83e112a38a48eaba644267617366/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f706b6b69642f707974686f6e2d706c65786170692f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>Unofficial Python bindings for the Plex API. Our goal is to match all capabilities of the official\nPlex Web Client. A few of the many features we currently support are:</p>\n<ul>\n<li>Navigate local or remote shared libraries.</li>\n<li>Perform library actions such as scan, analyze, empty trash.</li>\n<li>Remote control and play media on connected clients.</li>\n<li>Listen in on all Plex Server notifications.</li>\n</ul>\n</div>\n<div id=\"installation-documentation\">\n<h2>Installation &amp; Documentation</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">plexapi</span>\n</pre>\n<p><a href=\"http://python-plexapi.readthedocs.io/en/latest/\" rel=\"nofollow\">Documentation</a> can be found at Read the Docs.</p>\n</div>\n<div id=\"getting-a-plexserver-instance\">\n<h2>Getting a PlexServer Instance</h2>\n<p>There are two types of authentication. If you are running on a separate network\nor using Plex Users you can log into MyPlex to get a PlexServer instance. An\nexample of this is below. NOTE: Servername below is the name of the server (not\nthe hostname and port).  If logged into Plex Web you can see the server name in\nthe top left above your available libraries.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">plexapi.myplex</span> <span class=\"kn\">import</span> <span class=\"n\">MyPlexAccount</span>\n<span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">MyPlexAccount</span><span class=\"p\">(</span><span class=\"s1\">'&lt;USERNAME&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;PASSWORD&gt;'</span><span class=\"p\">)</span>\n<span class=\"n\">plex</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">resource</span><span class=\"p\">(</span><span class=\"s1\">'&lt;SERVERNAME&gt;'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>  <span class=\"c1\"># returns a PlexServer instance</span>\n</pre>\n<p>If you want to avoid logging into MyPlex and you already know your auth token\nstring, you can use the PlexServer object directly as above, but passing in\nthe baseurl and auth token directly.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">plexapi.server</span> <span class=\"kn\">import</span> <span class=\"n\">PlexServer</span>\n<span class=\"n\">baseurl</span> <span class=\"o\">=</span> <span class=\"s1\">'http://plexserver:32400'</span>\n<span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"s1\">'2ffLuB84dqLswk9skLos'</span>\n<span class=\"n\">plex</span> <span class=\"o\">=</span> <span class=\"n\">PlexServer</span><span class=\"p\">(</span><span class=\"n\">baseurl</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"usage-examples\">\n<h2>Usage Examples</h2>\n<pre><span class=\"c1\"># Example 1: List all unwatched movies.</span>\n<span class=\"n\">movies</span> <span class=\"o\">=</span> <span class=\"n\">plex</span><span class=\"o\">.</span><span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">section</span><span class=\"p\">(</span><span class=\"s1\">'Movies'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">video</span> <span class=\"ow\">in</span> <span class=\"n\">movies</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">unwatched</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Example 2: Mark all Game of Thrones episodes watched.</span>\n<span class=\"n\">plex</span><span class=\"o\">.</span><span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">section</span><span class=\"p\">(</span><span class=\"s1\">'TV Shows'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'Game of Thrones'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">markWatched</span><span class=\"p\">()</span>\n</pre>\n<pre><span class=\"c1\"># Example 3: List all clients connected to the Server.</span>\n<span class=\"k\">for</span> <span class=\"n\">client</span> <span class=\"ow\">in</span> <span class=\"n\">plex</span><span class=\"o\">.</span><span class=\"n\">clients</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Example 4: Play the movie Cars on another client.</span>\n<span class=\"c1\"># Note: Client must be on same network as server.</span>\n<span class=\"n\">cars</span> <span class=\"o\">=</span> <span class=\"n\">plex</span><span class=\"o\">.</span><span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">section</span><span class=\"p\">(</span><span class=\"s1\">'Movies'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'Cars'</span><span class=\"p\">)</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">plex</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">(</span><span class=\"s2\">\"Michael's iPhone\"</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">playMedia</span><span class=\"p\">(</span><span class=\"n\">cars</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Example 5: List all content with the word 'Game' in the title.</span>\n<span class=\"k\">for</span> <span class=\"n\">video</span> <span class=\"ow\">in</span> <span class=\"n\">plex</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s1\">'Game'</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">%s</span><span class=\"s1\"> (</span><span class=\"si\">%s</span><span class=\"s1\">)'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">TYPE</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"c1\"># Example 6: List all movies directed by the same person as Elephants Dream.</span>\n<span class=\"n\">movies</span> <span class=\"o\">=</span> <span class=\"n\">plex</span><span class=\"o\">.</span><span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">section</span><span class=\"p\">(</span><span class=\"s1\">'Movies'</span><span class=\"p\">)</span>\n<span class=\"n\">die_hard</span> <span class=\"o\">=</span> <span class=\"n\">movies</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'Elephants Dream'</span><span class=\"p\">)</span>\n<span class=\"n\">director</span> <span class=\"o\">=</span> <span class=\"n\">die_hard</span><span class=\"o\">.</span><span class=\"n\">directors</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"k\">for</span> <span class=\"n\">movie</span> <span class=\"ow\">in</span> <span class=\"n\">movies</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">director</span><span class=\"o\">=</span><span class=\"n\">director</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">movie</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Example 7: List files for the latest episode of The 100.</span>\n<span class=\"n\">last_episode</span> <span class=\"o\">=</span> <span class=\"n\">plex</span><span class=\"o\">.</span><span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">section</span><span class=\"p\">(</span><span class=\"s1\">'TV Shows'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'The 100'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">episodes</span><span class=\"p\">()[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"k\">for</span> <span class=\"n\">part</span> <span class=\"ow\">in</span> <span class=\"n\">last_episode</span><span class=\"o\">.</span><span class=\"n\">iterParts</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">part</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Example 8: Get audio/video/all playlists</span>\n<span class=\"k\">for</span> <span class=\"n\">playlist</span> <span class=\"ow\">in</span> <span class=\"n\">plex</span><span class=\"o\">.</span><span class=\"n\">playlists</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Example 9: Rate the 100 four stars.</span>\n<span class=\"n\">plex</span><span class=\"o\">.</span><span class=\"n\">library</span><span class=\"o\">.</span><span class=\"n\">section</span><span class=\"p\">(</span><span class=\"s1\">'TV Shows'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'The 100'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">rate</span><span class=\"p\">(</span><span class=\"mf\">8.0</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"running-tests-over-plexapi\">\n<h2>Running tests over PlexAPI</h2>\n<p>In order to test the PlexAPI library you have to prepare a Plex Server instance with following libraries:</p>\n<ol>\n<li><dl>\n<dt>Movies section (agent <cite>com.plexapp.agents.imdb</cite>) containing both movies:</dt>\n<dd><ul>\n<li>Sintel - <a href=\"https://durian.blender.org/\" rel=\"nofollow\">https://durian.blender.org/</a></li>\n<li>Elephants Dream - <a href=\"https://orange.blender.org/\" rel=\"nofollow\">https://orange.blender.org/</a></li>\n<li>Sita Sings the Blues - <a href=\"http://www.sitasingstheblues.com/\" rel=\"nofollow\">http://www.sitasingstheblues.com/</a></li>\n<li>Big Buck Bunny - <a href=\"https://peach.blender.org/\" rel=\"nofollow\">https://peach.blender.org/</a></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>TV Show section (agent <cite>com.plexapp.agents.thetvdb</cite>) containing the shows:</dt>\n<dd><ul>\n<li>Game of Thrones (Season 1 and 2)</li>\n<li>The 100 (Seasons 1 and 2)</li>\n<li>(or symlink the above movies with proper names)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Music section (agent <cite>com.plexapp.agents.lastfm</cite>) containing the albums:</dt>\n<dd><ul>\n<li>Infinite State - Unmastered Impulses - <a href=\"https://github.com/kennethreitz/unmastered-impulses\" rel=\"nofollow\">https://github.com/kennethreitz/unmastered-impulses</a></li>\n<li>Broke For Free - Layers - <a href=\"http://freemusicarchive.org/music/broke_for_free/Layers/\" rel=\"nofollow\">http://freemusicarchive.org/music/broke_for_free/Layers/</a></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>A Photos section (any agent) containing the photoalbums (photoalbum is just a folder on your disk):</dt>\n<dd><ul>\n<li><cite>Cats</cite></li>\n<li>Within <cite>Cats</cite> album you need to place 3 photos (cute cat photos, of course)</li>\n<li>Within <cite>Cats</cite> album you should place 3 more photoalbums (one of them should be named <cite>Cats in bed</cite>,\nnames of others doesn\u2019t matter)</li>\n<li>Within <cite>Cats in bed</cite> you need to place 7 photos</li>\n<li>Within other 2 albums you should place 1 photo in each</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ol>\n<p>Instead of manual creation of the library you could use a script <cite>tools/plex-boostraptest.py</cite> with appropriate\narguments and add this new server to a shared user which username is defined in environment veriable <cite>SHARED_USERNAME</cite>.\nIt uses <a href=\"https://hub.docker.com/r/plexinc/pms-docker/\" rel=\"nofollow\">official docker image</a> to create a proper instance.</p>\n<p>Also in order to run most of the tests you have to provide some environment variables:</p>\n<ul>\n<li><cite>PLEXAPI_AUTH_SERVER_BASEURL</cite> containing an URL to your Plex instance, e.g. <cite>http://127.0.0.1:32400</cite> (without trailing\nslash)</li>\n<li><cite>PLEXAPI_AUTH_MYPLEX_USERNAME</cite> and <cite>PLEXAPI_AUTH_MYPLEX_PASSWORD</cite> with your MyPlex username and password accordingly</li>\n</ul>\n<p>After this step you can run tests with following command:</p>\n<pre>py.test tests -rxXs --ignore<span class=\"o\">=</span>tests/test_sync.py\n</pre>\n<p>Some of the tests in main test-suite require a shared user in your account (e.g. <cite>test_myplex_users</cite>,\n<cite>test_myplex_updateFriend</cite>, etc.), you need to provide a valid shared user\u2019s username to get them running you need to\nprovide the username of the shared user as an environment variable <cite>SHARED_USERNAME</cite>. You can enable a Guest account and\nsimply pass <cite>Guest</cite> as <cite>SHARED_USERNAME</cite> (or just create a user like <cite>plexapitest</cite> and play with it).</p>\n<p>To be able to run tests over Mobile Sync api you have to some some more environment variables, to following values\nexactly:</p>\n<ul>\n<li>PLEXAPI_HEADER_PROVIDES=\u2019controller,sync-target\u2019</li>\n<li>PLEXAPI_HEADER_PLATFORM=iOS</li>\n<li>PLEXAPI_HEADER_PLATFORM_VERSION=11.4.1</li>\n<li>PLEXAPI_HEADER_DEVICE=iPhone</li>\n</ul>\n<p>And finally run the sync-related tests:</p>\n<pre>py.test tests/test_sync.py -rxXs\n</pre>\n</div>\n<div id=\"common-questions\">\n<h2>Common Questions</h2>\n<p><strong>Why are you using camelCase and not following PEP8 guidelines?</strong></p>\n<p>This API reads XML documents provided by MyPlex and the Plex Server.\nWe decided to conform to their style so that the API variable names directly\nmatch with the provided XML documents.</p>\n<p><strong>Why don\u2019t you offer feature XYZ?</strong></p>\n<p>This library is meant to be a wrapper around the XML pages the Plex\nserver provides. If we are not providing an API that is offerered in the\nXML pages, please let us know! \u2013 Adding additional features beyond that\nshould be done outside the scope of this library.</p>\n<p><strong>What are some helpful links if trying to understand the raw Plex API?</strong></p>\n<ul>\n<li><a href=\"https://github.com/plexinc/plex-media-player/wiki/Remote-control-API\" rel=\"nofollow\">https://github.com/plexinc/plex-media-player/wiki/Remote-control-API</a></li>\n<li><a href=\"https://forums.plex.tv/discussion/104353/pms-web-api-documentation\" rel=\"nofollow\">https://forums.plex.tv/discussion/104353/pms-web-api-documentation</a></li>\n<li><a href=\"https://github.com/Arcanemagus/plex-api/wiki\" rel=\"nofollow\">https://github.com/Arcanemagus/plex-api/wiki</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7049883, "releases": {"0.1-": [], "0.2": [{"comment_text": "", "digests": {"md5": "96f5513802c24a2bc69817ffa976bf18", "sha256": "4d822342df19ffec51faf881e97349bebec0863f09f69f2d9e6ceda200e548d1"}, "downloads": -1, "filename": "PlexAPI-0.2.tar.gz", "has_sig": false, "md5_digest": "96f5513802c24a2bc69817ffa976bf18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7544, "upload_time": "2014-11-02T21:21:32", "upload_time_iso_8601": "2014-11-02T21:21:32.168492Z", "url": "https://files.pythonhosted.org/packages/01/8e/eca1d9abe0432fef7f6a4c86af558c61631390f35b705a35628ae2bd7f84/PlexAPI-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "2661674d6ee7ef568b4ab53bc24a409d", "sha256": "fc47f7f6ce9540c555aac89535e312e12a78ff2b5d6889b95c8f072f4241be52"}, "downloads": -1, "filename": "PlexAPI-0.2.1.tar.gz", "has_sig": false, "md5_digest": "2661674d6ee7ef568b4ab53bc24a409d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7495, "upload_time": "2014-11-02T21:26:14", "upload_time_iso_8601": "2014-11-02T21:26:14.647433Z", "url": "https://files.pythonhosted.org/packages/4a/98/6b48bfe331ab61c5ccb2d98dcdde09cbdbe5a9a97bc1b662ccd36352a0b3/PlexAPI-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "a0807ef7c53cea582d9203606b5fefab", "sha256": "7cd0b428199bce1598ffc22a72a40858db232340f8768cb78f80be1c0f777ccc"}, "downloads": -1, "filename": "PlexAPI-0.2.2.tar.gz", "has_sig": false, "md5_digest": "a0807ef7c53cea582d9203606b5fefab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7548, "upload_time": "2014-11-02T21:29:11", "upload_time_iso_8601": "2014-11-02T21:29:11.397031Z", "url": "https://files.pythonhosted.org/packages/c2/95/fd31295206450678bd55103d05cacf523134f87f151ec979f098d0a345d6/PlexAPI-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "37a9855e49b345978787dd2c57de807b", "sha256": "6d9f36be816ddf965944b4eebcb7f85d81c15adc1484178f14be614ba61d59f9"}, "downloads": -1, "filename": "PlexAPI-0.2.3.tar.gz", "has_sig": false, "md5_digest": "37a9855e49b345978787dd2c57de807b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7681, "upload_time": "2014-11-02T21:36:48", "upload_time_iso_8601": "2014-11-02T21:36:48.662544Z", "url": "https://files.pythonhosted.org/packages/0b/92/2c57d5e2d758d0f5f76ed72f7db0f0dad747831009a54c79991491077fa7/PlexAPI-0.2.3.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "44bc040d3b64a897796695fb296a7801", "sha256": "6599d22bcfef376a08ba9e95900b14bc79d3125a3cc3752d1031eba4a617d86a"}, "downloads": -1, "filename": "PlexAPI-0.9.0.tar.gz", "has_sig": false, "md5_digest": "44bc040d3b64a897796695fb296a7801", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8950, "upload_time": "2014-11-03T03:15:09", "upload_time_iso_8601": "2014-11-03T03:15:09.708886Z", "url": "https://files.pythonhosted.org/packages/db/7a/60e8942d5c75b05ccb39cfb8e57f450e8e90e484b651234902e82b0350cc/PlexAPI-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "f8093e9ac642e18de6588e4b9fa6eda4", "sha256": "a28c805a1615071b0b220f43393f10f2acaffc59d36547158a6558cd0a91f5dc"}, "downloads": -1, "filename": "PlexAPI-0.9.1.tar.gz", "has_sig": false, "md5_digest": "f8093e9ac642e18de6588e4b9fa6eda4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8941, "upload_time": "2014-11-04T02:57:43", "upload_time_iso_8601": "2014-11-04T02:57:43.995689Z", "url": "https://files.pythonhosted.org/packages/06/31/0ce446d6717469c8f1cec0c40feacfb587a31d97fb4cc3c79b5a9d4de8e4/PlexAPI-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "aa1bf14e2ef35b92e55e3ff4c6f3dd66", "sha256": "fb1341593ff32aa9cd3bec91910e6f2eb8c759e94f1220e56f0fff539a7543f7"}, "downloads": -1, "filename": "PlexAPI-0.9.2.tar.gz", "has_sig": false, "md5_digest": "aa1bf14e2ef35b92e55e3ff4c6f3dd66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10088, "upload_time": "2014-11-04T05:55:18", "upload_time_iso_8601": "2014-11-04T05:55:18.579299Z", "url": "https://files.pythonhosted.org/packages/9e/93/9b700c5cb93b0a6c4ae6f27b9f900e79c2ef0d8dbb6cca4343e1aac17182/PlexAPI-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "020bed6427b6c5e37bed78b4fd00f3ef", "sha256": "702a7b8ad38059f786d61fe61746a6df490c23f82bca987d8f05ef406f2a7289"}, "downloads": -1, "filename": "PlexAPI-0.9.3.tar.gz", "has_sig": false, "md5_digest": "020bed6427b6c5e37bed78b4fd00f3ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15014, "upload_time": "2014-12-11T17:41:58", "upload_time_iso_8601": "2014-12-11T17:41:58.477218Z", "url": "https://files.pythonhosted.org/packages/0f/f7/e78b6d8c7292fd64832093631125f0fe21ef9f8e72cd4745a3caa168a95d/PlexAPI-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "8b450b6db481f1174ddc8735d8c0c768", "sha256": "77f9603803af5f6c674f16a00401ace0121828c89ebcc43f5cdfd302f7e7e0a4"}, "downloads": -1, "filename": "PlexAPI-0.9.4.tar.gz", "has_sig": false, "md5_digest": "8b450b6db481f1174ddc8735d8c0c768", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17266, "upload_time": "2015-03-09T04:18:53", "upload_time_iso_8601": "2015-03-09T04:18:53.980460Z", "url": "https://files.pythonhosted.org/packages/3a/d0/1a4bd779aa942b0b922981a1a72dcec7728b185cba86b4f6f0c43445f3fd/PlexAPI-0.9.4.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "9feaecf1abb6836def2d090c647f9424", "sha256": "053ee156cabf3d9a38950e76e748613a29e7b721dfa79f8a8e9770578b63a58f"}, "downloads": -1, "filename": "PlexAPI-0.9.6.tar.gz", "has_sig": false, "md5_digest": "9feaecf1abb6836def2d090c647f9424", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18391, "upload_time": "2015-06-04T04:05:57", "upload_time_iso_8601": "2015-06-04T04:05:57.112482Z", "url": "https://files.pythonhosted.org/packages/bc/1a/23318d7ccd1871080e4812cb9ba5b5d2726853a4ae347fc29fb42bc8568b/PlexAPI-0.9.6.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "8e2c115b0c5732c9f5f1bd061a92a265", "sha256": "1fd91fa05c5337580cbc728df65ebea86b0aa0606b6a46686db0a3a86df6bd81"}, "downloads": -1, "filename": "PlexAPI-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8e2c115b0c5732c9f5f1bd061a92a265", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18948, "upload_time": "2015-06-15T02:46:13", "upload_time_iso_8601": "2015-06-15T02:46:13.602950Z", "url": "https://files.pythonhosted.org/packages/c8/dc/6184288312afb6722c39b953338088c842a788348015a56f46b4aaad617c/PlexAPI-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "d04b5bd6781de6afb9e4394d94c12840", "sha256": "074c0aaa877344c5d5264afdaeeb85138d3f6a2bf69d6ff2ebf6ba8a8fbce5f9"}, "downloads": -1, "filename": "PlexAPI-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d04b5bd6781de6afb9e4394d94c12840", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18976, "upload_time": "2015-06-16T00:54:54", "upload_time_iso_8601": "2015-06-16T00:54:54.910475Z", "url": "https://files.pythonhosted.org/packages/c8/5d/6c2bcd44e462a27cfe28bf09aa75236091d92009072327592e4b5eb63288/PlexAPI-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "9113ba80477ca9576d3557668c7ffbc9", "sha256": "7d7cc5c619f39622c4cac405a427d725b75be38e48a258e932c6dcaddd3f08b9"}, "downloads": -1, "filename": "PlexAPI-1.0.2.tar.gz", "has_sig": false, "md5_digest": "9113ba80477ca9576d3557668c7ffbc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18945, "upload_time": "2015-08-31T01:00:56", "upload_time_iso_8601": "2015-08-31T01:00:56.697580Z", "url": "https://files.pythonhosted.org/packages/45/93/5c3165d8e326ef1788f941d979c46c9267be8f7e42235ab58e8c93e1e602/PlexAPI-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "c310e0a3ec58b61aaeee0578b5921c25", "sha256": "0f149b05e4136570c6e4c333b8d9424d4a7e646dd8e1fcd3e82c5685d9251a7c"}, "downloads": -1, "filename": "PlexAPI-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c310e0a3ec58b61aaeee0578b5921c25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17545, "upload_time": "2015-10-02T13:26:27", "upload_time_iso_8601": "2015-10-02T13:26:27.689596Z", "url": "https://files.pythonhosted.org/packages/1d/c9/ef7b641a7359cee899573c21df85028e2fc417ebef2cb96a91646e865e59/PlexAPI-1.1.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "14fef6d5a78c4e5b04491e3c65ce2ffd", "sha256": "54fa05bb77f04645117fa963dcd1e943b9f8e209aee8a6dee6559b5b3f0382eb"}, "downloads": -1, "filename": "PlexAPI-2.0.1.tar.gz", "has_sig": false, "md5_digest": "14fef6d5a78c4e5b04491e3c65ce2ffd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34760, "upload_time": "2016-05-24T02:12:29", "upload_time_iso_8601": "2016-05-24T02:12:29.125761Z", "url": "https://files.pythonhosted.org/packages/e2/11/a09ae8cfb4b999b414468740492a8e033e0c4485ad229f4697fbe58f944f/PlexAPI-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "ad898641c7303757d5166df63e9bc872", "sha256": "292449f71cbee268a1c9184e4d734239bb01cf48d56e24720e38e5f60bb8bae5"}, "downloads": -1, "filename": "PlexAPI-2.0.2.tar.gz", "has_sig": false, "md5_digest": "ad898641c7303757d5166df63e9bc872", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34975, "upload_time": "2016-07-08T03:40:00", "upload_time_iso_8601": "2016-07-08T03:40:00.757385Z", "url": "https://files.pythonhosted.org/packages/0e/6e/56de724747eefe467c42aea34a370afa88a7e90c456eb56aa5ca785fc1ba/PlexAPI-2.0.2.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "9cfaa83a4dd9875d12e02ee386511e1d", "sha256": "3c9abc1c7c2481bbe9283c1c55ff3ccfc7e77e5c03cec6ae81c0b364d1158f3c"}, "downloads": -1, "filename": "PlexAPI-3.0.0.tar.gz", "has_sig": false, "md5_digest": "9cfaa83a4dd9875d12e02ee386511e1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55391, "upload_time": "2017-08-11T22:33:45", "upload_time_iso_8601": "2017-08-11T22:33:45.123515Z", "url": "https://files.pythonhosted.org/packages/fd/d9/029b0e728b401ca5c52e4a714df8e118cc6aa5d35d2e7de5df74efc6b41f/PlexAPI-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "ff800472367047b1b77859a362c12eba", "sha256": "e74a5163afbdf9c997fc899d7d7060310a75e94369805870151349808c1cc71e"}, "downloads": -1, "filename": "PlexAPI-3.0.1.tar.gz", "has_sig": false, "md5_digest": "ff800472367047b1b77859a362c12eba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55725, "upload_time": "2017-08-13T06:13:32", "upload_time_iso_8601": "2017-08-13T06:13:32.529969Z", "url": "https://files.pythonhosted.org/packages/5d/30/9c915b3c4c53d68628ed455d8a09839ed4d75aa7d4f05e71b563274fb33c/PlexAPI-3.0.1.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "8686b1ca17a2016b0f67c5aebb7bc392", "sha256": "ee62ac9c7268398fdfb79c115467f18acf43de2de92ec4533e2ed43d81105830"}, "downloads": -1, "filename": "PlexAPI-3.0.2.tar.gz", "has_sig": false, "md5_digest": "8686b1ca17a2016b0f67c5aebb7bc392", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55719, "upload_time": "2017-08-14T00:47:09", "upload_time_iso_8601": "2017-08-14T00:47:09.904364Z", "url": "https://files.pythonhosted.org/packages/b1/48/2954418f229e9850ca4bbd764f51fef177091e1786f24693bb6ef71881cb/PlexAPI-3.0.2.tar.gz", "yanked": false}], "3.0.3": [{"comment_text": "", "digests": {"md5": "425057c6e218c522189340ed9a0b236b", "sha256": "18f213b3bce823cf99b44b909dd506e93f376f143c8532b45c3ad4b09840cc39"}, "downloads": -1, "filename": "PlexAPI-3.0.3.tar.gz", "has_sig": false, "md5_digest": "425057c6e218c522189340ed9a0b236b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56133, "upload_time": "2017-08-14T01:17:38", "upload_time_iso_8601": "2017-08-14T01:17:38.846305Z", "url": "https://files.pythonhosted.org/packages/91/3e/67fc280b561ec90315378a7e437978d11dffe43ba22f8057e0fd1322bffe/PlexAPI-3.0.3.tar.gz", "yanked": false}], "3.0.4": [{"comment_text": "", "digests": {"md5": "19af50ddd938343f30508d238c90e179", "sha256": "48fdb6a08a64767518374a42862cab7a8be39c9016cb7fc9ae93c86f817562ea"}, "downloads": -1, "filename": "PlexAPI-3.0.4.tar.gz", "has_sig": false, "md5_digest": "19af50ddd938343f30508d238c90e179", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57918, "upload_time": "2017-11-01T23:36:37", "upload_time_iso_8601": "2017-11-01T23:36:37.978803Z", "url": "https://files.pythonhosted.org/packages/a0/30/b6053e1121e300c4468a5a59e37fcf682424a8622326f4351177ba905fa5/PlexAPI-3.0.4.tar.gz", "yanked": false}], "3.0.5": [{"comment_text": "", "digests": {"md5": "d1d5926502e355c62795806e114ce8a6", "sha256": "db3a9d715c2785f91b8774441a9996d1f2f29c62f8997bd09c89f8abe608a392"}, "downloads": -1, "filename": "PlexAPI-3.0.5.tar.gz", "has_sig": false, "md5_digest": "d1d5926502e355c62795806e114ce8a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58191, "upload_time": "2018-01-02T04:17:19", "upload_time_iso_8601": "2018-01-02T04:17:19.612284Z", "url": "https://files.pythonhosted.org/packages/81/32/d896ea41873304f3b2745144f21548dfd9f573c437d10320d01c1c66b939/PlexAPI-3.0.5.tar.gz", "yanked": false}], "3.0.6": [{"comment_text": "", "digests": {"md5": "238c3e52a6515184a67e554d5dc23d4c", "sha256": "f55f76b6519eb7aa31507148ad7b399515cc44b26951212f7d552780dd478d5e"}, "downloads": -1, "filename": "PlexAPI-3.0.6.tar.gz", "has_sig": false, "md5_digest": "238c3e52a6515184a67e554d5dc23d4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58636, "upload_time": "2018-03-02T15:19:14", "upload_time_iso_8601": "2018-03-02T15:19:14.496223Z", "url": "https://files.pythonhosted.org/packages/27/48/66013fd93e92c4c6a3cd2c92997bffa1bc3be1d4f74263edcca713c801d3/PlexAPI-3.0.6.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "ad91b5c4b3fc9bb743244f1c0eeb8657", "sha256": "4044876f354b6b93737f704e41910c5a5537e000ad9d4dc79b4ded7bc9e9ce4d"}, "downloads": -1, "filename": "PlexAPI-3.1.0.tar.gz", "has_sig": false, "md5_digest": "ad91b5c4b3fc9bb743244f1c0eeb8657", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70414, "upload_time": "2018-10-05T12:30:13", "upload_time_iso_8601": "2018-10-05T12:30:13.488049Z", "url": "https://files.pythonhosted.org/packages/f5/41/134162e767252aa3b27be33263e57fc6fedf0c6516ad550a7b509b38e16e/PlexAPI-3.1.0.tar.gz", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "f529138f5f2b70ddbbb483ae98f906a7", "sha256": "d3007194594d4d347d67b4aa9337e211cab9c1f123d889f067a28e7266260be1"}, "downloads": -1, "filename": "PlexAPI-3.2.0.tar.gz", "has_sig": false, "md5_digest": "f529138f5f2b70ddbbb483ae98f906a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73498, "upload_time": "2019-10-03T02:49:42", "upload_time_iso_8601": "2019-10-03T02:49:42.453004Z", "url": "https://files.pythonhosted.org/packages/87/e2/93f4102634abda495e6b47e2e30c19a91ad61938f83b46edc8c20891b41d/PlexAPI-3.2.0.tar.gz", "yanked": false}], "3.3.0": [{"comment_text": "", "digests": {"md5": "b395157d4339da8719226c300366b01e", "sha256": "e89feb6966e846a5dee63f4b8600470020807b9dd9c1147a90c7269625a32ea2"}, "downloads": -1, "filename": "PlexAPI-3.3.0.tar.gz", "has_sig": false, "md5_digest": "b395157d4339da8719226c300366b01e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73777, "upload_time": "2019-11-12T01:22:14", "upload_time_iso_8601": "2019-11-12T01:22:14.346105Z", "url": "https://files.pythonhosted.org/packages/16/85/54fa59b0b6dc42a3d0b7280adbfe4b452df57e4755a50b092be2c9885c3c/PlexAPI-3.3.0.tar.gz", "yanked": false}], "3.4.0": [{"comment_text": "", "digests": {"md5": "16a7c5b797103ee38cfd57d7d00e3870", "sha256": "daf435dc5f6c22447f6a8f92dce5d7da5cfd4511f06f506185faccb2dca28684"}, "downloads": -1, "filename": "PlexAPI-3.4.0.tar.gz", "has_sig": false, "md5_digest": "16a7c5b797103ee38cfd57d7d00e3870", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83671, "upload_time": "2020-04-18T20:01:54", "upload_time_iso_8601": "2020-04-18T20:01:54.630798Z", "url": "https://files.pythonhosted.org/packages/3c/2e/53ab13f6a41564581cda3fc2417b8340652d22b6f19b4b9cf7e5b98f6bdb/PlexAPI-3.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "16a7c5b797103ee38cfd57d7d00e3870", "sha256": "daf435dc5f6c22447f6a8f92dce5d7da5cfd4511f06f506185faccb2dca28684"}, "downloads": -1, "filename": "PlexAPI-3.4.0.tar.gz", "has_sig": false, "md5_digest": "16a7c5b797103ee38cfd57d7d00e3870", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83671, "upload_time": "2020-04-18T20:01:54", "upload_time_iso_8601": "2020-04-18T20:01:54.630798Z", "url": "https://files.pythonhosted.org/packages/3c/2e/53ab13f6a41564581cda3fc2417b8340652d22b6f19b4b9cf7e5b98f6bdb/PlexAPI-3.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:29 2020"}