{"info": {"author": "Jelle Smet", "author_email": "development@smetj.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: PyPy"], "description": "::\n\n              __       __    __\n    .--.--.--|__.-----|  |--|  |--.-----.-----.-----.\n    |  |  |  |  |__ --|     |  _  |  _  |     |  -__|\n    |________|__|_____|__|__|_____|_____|__|__|_____|\n                                       version 2.1.2\n\n    Build composable event pipeline servers with minimal effort.\n\n\n    ===================\n    wishbone.output.sse\n    ===================\n\n    Version: 1.0.0\n\n    Serve event data as server sent events.\n    ---------------------------------------\n\n\n        Serve event data as server sent events.\n\n        When the event header contains:\n\n        If nobody is consuming events then they're lost.\n        If <show_last> is set to True, then the last known value\n        can be consumed by the client.\n\n        Parameters:\n\n            - selection(str)(\"@data\")\n               |  The part of the event to submit externally.\n               |  Use an empty string to refer to the complete event.\n\n            - bind(string)(\"0.0.0.0\")\n               |  The address to bind to.\n\n            - port(int)(19283)\n               |  The port to bind to.\n\n            - show_last(bool)(False)\n               |  If true submits the last known value to\n               |  a new connection.\n\n            - keepalive(bool)(False)\n               |  If true sends a keepalive message at\n               |  <keepalive_interval> seconds.\n\n            - keepalive_interval(int)(False)\n               |  The time in seconds to send keep-alive\n               |  messages to the client.\n\n            - destination(str)(\"\")*\n               |  The endpoint from which the event can be consumed.\n\n\n        Queues:\n\n            - inbox\n               |  Incoming events submitted to the outside.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/smetj/wishbone-output-sse/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smetj/wishbone-output-sse", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "wishbone_output_sse", "package_url": "https://pypi.org/project/wishbone_output_sse/", "platform": "Linux", "project_url": "https://pypi.org/project/wishbone_output_sse/", "project_urls": {"Download": "https://github.com/smetj/wishbone-output-sse/tarball/master", "Homepage": "https://github.com/smetj/wishbone-output-sse"}, "release_url": "https://pypi.org/project/wishbone_output_sse/1.1.0/", "requires_dist": null, "requires_python": null, "summary": "A Wishbone output module to serve event data as server sent events.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <pre>          __       __    __\n.--.--.--|__.-----|  |--|  |--.-----.-----.-----.\n|  |  |  |  |__ --|     |  _  |  _  |     |  -__|\n|________|__|_____|__|__|_____|_____|__|__|_____|\n                                   version 2.1.2\n\nBuild composable event pipeline servers with minimal effort.\n\n\n===================\nwishbone.output.sse\n===================\n\nVersion: 1.0.0\n\nServe event data as server sent events.\n---------------------------------------\n\n\n    Serve event data as server sent events.\n\n    When the event header contains:\n\n    If nobody is consuming events then they're lost.\n    If &lt;show_last&gt; is set to True, then the last known value\n    can be consumed by the client.\n\n    Parameters:\n\n        - selection(str)(\"@data\")\n           |  The part of the event to submit externally.\n           |  Use an empty string to refer to the complete event.\n\n        - bind(string)(\"0.0.0.0\")\n           |  The address to bind to.\n\n        - port(int)(19283)\n           |  The port to bind to.\n\n        - show_last(bool)(False)\n           |  If true submits the last known value to\n           |  a new connection.\n\n        - keepalive(bool)(False)\n           |  If true sends a keepalive message at\n           |  &lt;keepalive_interval&gt; seconds.\n\n        - keepalive_interval(int)(False)\n           |  The time in seconds to send keep-alive\n           |  messages to the client.\n\n        - destination(str)(\"\")*\n           |  The endpoint from which the event can be consumed.\n\n\n    Queues:\n\n        - inbox\n           |  Incoming events submitted to the outside.\n</pre>\n\n          </div>"}, "last_serial": 2093854, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0fa5230391f465e9b07c0d82ab59298c", "sha256": "4446d3084ac6c5990711cf0090bc0bd2bff17bd8ef2d47e7262f9a45ee1d0677"}, "downloads": -1, "filename": "wishbone_output_sse-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0fa5230391f465e9b07c0d82ab59298c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4194, "upload_time": "2016-03-28T14:03:17", "upload_time_iso_8601": "2016-03-28T14:03:17.002268Z", "url": "https://files.pythonhosted.org/packages/ac/d3/a9575841b4a3538e766d429c29af14426a16ebe743131970442e72db85d3/wishbone_output_sse-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "5a73eb90fed9c8b394491764ec6e2a88", "sha256": "0b7bedf3099f8bc89c8f3e65b3f7100ff5efdc707fbe85490ea038300fe68cef"}, "downloads": -1, "filename": "wishbone_output_sse-1.1.0.tar.gz", "has_sig": false, "md5_digest": "5a73eb90fed9c8b394491764ec6e2a88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4191, "upload_time": "2016-05-01T20:34:57", "upload_time_iso_8601": "2016-05-01T20:34:57.058253Z", "url": "https://files.pythonhosted.org/packages/73/13/973dd1fcb346190316f393abc068aff6663c70a9975f3082c357fd4f8650/wishbone_output_sse-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5a73eb90fed9c8b394491764ec6e2a88", "sha256": "0b7bedf3099f8bc89c8f3e65b3f7100ff5efdc707fbe85490ea038300fe68cef"}, "downloads": -1, "filename": "wishbone_output_sse-1.1.0.tar.gz", "has_sig": false, "md5_digest": "5a73eb90fed9c8b394491764ec6e2a88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4191, "upload_time": "2016-05-01T20:34:57", "upload_time_iso_8601": "2016-05-01T20:34:57.058253Z", "url": "https://files.pythonhosted.org/packages/73/13/973dd1fcb346190316f393abc068aff6663c70a9975f3082c357fd4f8650/wishbone_output_sse-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:36 2020"}