{"info": {"author": "Eliott Dumeix", "author_email": "eliott.dumeix@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "py-lua-style\n===============================================================================\n\n.. image:: https://travis-ci.org/boolangery/py-lua-style.svg?branch=master\n    :target: https://travis-ci.org/boolangery/py-lua-style\n.. image:: https://img.shields.io/pypi/v/luastyle.svg\n    :target: https://pypi.python.org/pypi/luastyle/\n.. image:: https://img.shields.io/pypi/pyversions/luastyle.svg\n    :target: https://pypi.python.org/pypi/luastyle/\n\nA Lua code formatter written in Python.\n\n\nInstallation:\n------------------------------------------------------------------------------\n\nThe package can be installed through `pip`:\n\n.. code-block::\n\n    $ python3.6 -m pip install luastyle\n\nIt will install the shell command 'luastyle'.\n\n\nOptions\n------------------------------------------------------------------------------\n\nThese are the command-line flags:\n\nUsage: luastyle [options] file_or_dir1 file_or_dir2 ...\n\n.. code-block::\n\n  CLI Options:\n    --version                       Show program's version number and exit\n    -h, --help                      Show this help message and exit\n    -i, --in-place                  Write output in-place, replacing input\n    --config=F                      Path to config file\n    --config-generate               Generate a default config file\n    --type=EXT                      File extension to indent (can be repeated) [lua]\n    -d, --debug                     Enable debugging messages\n    -j N, --jobs=N                  Number of parallel jobs in recursive mode\n    -C, --check-bytecode            Check lua bytecode with luac, $LUAC can also be set to\n                                    use a specific compiler\n\n\n  Beautifier Options:\n    -a, --space-around-assign       Ensure one space before and after assign op \"=\"\n    -c S, --indent-char=S           Indentation character [\" \"]\n    -f, --check-field-list          Format field-list (table)\n    -l N, --indent-level=N          Initial indentation level [0]\n    -p, --check-param-list          Format var-list, name-list and expr-list\n    -s N, --indent-size=N           Indentation size [2]\n    -t, --indent-with-tabs          Indent with tabs, overrides -s and -c\n    --close-on-lowest-level         If several closing tokens, indent on lowest token level\n    -F N, --func-cont-level=N       Continuation lines level in function arguments [2]\n    -I N, --if-cont-level=N         If statement continuation line level [2]\n    -M, --check-line-comment-text   Ensure that line comments text is started by at least N char\n    -N N, --com-txt-space-size=N    If --check-line-comment-text is enabled, configure the number of spaces [1]\n    -S, --skip-sem-colon            Skip all semi-colon after statements\n    --break-if                      Break mono-line if statement\n    --break-while                   In while and repeat statement, ensure newline after\n                                    \"do\" or \"repeat\" and before \"end\" or \"until\" keyword\n    --break-all                     Enable --break-if --break-for and --break-while and\n                                    before \"end\" or \"until\" keyword\n    --force-call-spaces             Force spaces before opening parenthesis in function\n                                    call [0]\n    --call-spaces-size=N            If --force-call-spaces is enabled, configure the\n                                    number of spaces\n    --strict                        Enable all features\n\n\nLoading settings from environment or .luastylerc\n------------------------------------------------------------------------------\n\nIn addition to CLI arguments, you may pass a config file via:\n\n- the LUASTYLE_CONF environment variables pointing to a config file\n- a .luastylerc file located in your user directory\n\n\nOptions examples\n------------------------------------------------------------------------------\n\n\nContinuation lines level in function arguments (-F)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block::\n\n    -F N, --func-cont-level=N   Continuation lines level in function arguments [2]\n\nGiven:\n\n.. code-block:: lua\n\n    local function process(param_1, param_2, param_3,\n      param_4, param_5, param_6)\n      return do_something()\n    end\n\n.. code-block:: console\n\n    $ luastyle -c \".\" -F 2 source.lua\n\n.. code-block:: lua\n\n    local function process(param_1, param_2, param_3,\n    ....param_4, param_5, param_6)\n    ..return do_something()\n    end\n\n\nComments formatting options (-M, -N)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAvailable options are:\n\n.. code-block::\n\n    -M, --check-line-comment-text Ensure that line comments text is started by at least N char\n    -N N, --com-txt-space-size=N  If --check-line-comment-text is enabled, configure the number of spaces [1]\n\nGiven:\n\n.. code-block:: lua\n\n    --Lorem ipsum dolor sit amet\n    local foo --In sodales elit id orci mollis varius\n\n\n.. code-block:: console\n\n    $ luastyle -M -N 1 source.lua\n\n\n.. code-block:: lua\n\n    -- Lorem ipsum dolor sit amet\n    local foo -- In sodales elit id orci mollis varius\n\n\nBreak If statement option (--break-if)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nGiven:\n\n.. code-block:: lua\n\n    if condition then return success() else return failure() end\n\n\n.. code-block:: console\n\n    $ luastyle --break-if source.lua\n\n\n.. code-block:: lua\n\n    if condition then\n      return success()\n    else\n      return failure()\n    end\n\n\nFormat table field-list (-f)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis option ensure that:\n  * field separator in table (',' or ';') are trailing\n  * comma is preceded by one space and followed by two spaces\n\nThe keyword '@luastyle.disable' placed in a comment just after the opening brace\nwill disable this feature in the concerned table.\n\nGiven:\n\n.. code-block:: lua\n\n    local days = {\n      monday = 1,\n      tuesday = 2\n    , wednesday = 3\n    }\n\n    local n = {1  , 2,3}\n\n    local t = {\n      -- @luastyle.disable\n      1,    2,    4,\n      8,    16,   32\n    }\n\n\n.. code-block:: console\n\n    $ luastyle -f source.lua\n\n\n.. code-block:: lua\n\n    local days = {\n      monday = 1,\n      tuesday = 2,\n      wednesday = 3\n    }\n\n    local n = {1, 2, 3}\n\n    local t = {\n      -- @luastyle.disable\n      1,    2,    4,\n      8,    16,   32\n    }\n\n\n\nIndent closing token (--close-on-lowest-level )\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nGiven:\n\n.. code-block:: lua\n\n    describe('must indent', function()\n      done()\n    end)\n\n\n.. code-block:: console\n\n    $ luastyle --close-on-lowest-level source.lua\n\n\n.. code-block:: lua\n\n    describe('must indent', function()\n        done()\n      end)\n\n\n.. code-block:: console\n\n    $ luastyle source.lua\n\n\n.. code-block:: lua\n\n    describe('must indent', function()\n        done()\n    end)\n\nFunction call formatting options (--force-call-spaces, --call-spaces-size)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nGiven:\n\n.. code-block:: lua\n\n    build (foo)\n\n\n.. code-block:: console\n\n    $ luastyle --force-call-spaces source.lua\n\n\n.. code-block:: lua\n\n    build(foo)\n\n.. code-block:: console\n\n    $ luastyle --force-call-spaces --call-spaces-size=1 source.lua\n\n\n.. code-block:: lua\n\n    build (foo)\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/boolangery/py-lua-style/archive/1.3.5.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/boolangery/py-lua-style", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "luastyle", "package_url": "https://pypi.org/project/luastyle/", "platform": "", "project_url": "https://pypi.org/project/luastyle/", "project_urls": {"Download": "https://github.com/boolangery/py-lua-style/archive/1.3.5.tar.gz", "Homepage": "https://github.com/boolangery/py-lua-style"}, "release_url": "https://pypi.org/project/luastyle/1.3.5/", "requires_dist": null, "requires_python": "", "summary": "A lua code formatter in Python !", "version": "1.3.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/boolangery/py-lua-style\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/boolangery/py-lua-style.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/414b2319cd0e8c4f8a5b9411677e28f9bdd6d3fa/68747470733a2f2f7472617669732d63692e6f72672f626f6f6c616e676572792f70792d6c75612d7374796c652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/luastyle/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/luastyle.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ec4324c20ff84d11f16a9942e9e2cfb46972877/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c75617374796c652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/luastyle/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/luastyle.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a431f64cd58da239fa8da6eb9e08eda99bb0373/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6c75617374796c652e737667\"></a>\n<p>A Lua code formatter written in Python.</p>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<p>The package can be installed through <cite>pip</cite>:</p>\n<pre>$ python3.6 -m pip install luastyle\n</pre>\n<p>It will install the shell command \u2018luastyle\u2019.</p>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n<p>These are the command-line flags:</p>\n<p>Usage: luastyle [options] file_or_dir1 file_or_dir2 \u2026</p>\n<pre>CLI Options:\n  --version                       Show program's version number and exit\n  -h, --help                      Show this help message and exit\n  -i, --in-place                  Write output in-place, replacing input\n  --config=F                      Path to config file\n  --config-generate               Generate a default config file\n  --type=EXT                      File extension to indent (can be repeated) [lua]\n  -d, --debug                     Enable debugging messages\n  -j N, --jobs=N                  Number of parallel jobs in recursive mode\n  -C, --check-bytecode            Check lua bytecode with luac, $LUAC can also be set to\n                                  use a specific compiler\n\n\nBeautifier Options:\n  -a, --space-around-assign       Ensure one space before and after assign op \"=\"\n  -c S, --indent-char=S           Indentation character [\" \"]\n  -f, --check-field-list          Format field-list (table)\n  -l N, --indent-level=N          Initial indentation level [0]\n  -p, --check-param-list          Format var-list, name-list and expr-list\n  -s N, --indent-size=N           Indentation size [2]\n  -t, --indent-with-tabs          Indent with tabs, overrides -s and -c\n  --close-on-lowest-level         If several closing tokens, indent on lowest token level\n  -F N, --func-cont-level=N       Continuation lines level in function arguments [2]\n  -I N, --if-cont-level=N         If statement continuation line level [2]\n  -M, --check-line-comment-text   Ensure that line comments text is started by at least N char\n  -N N, --com-txt-space-size=N    If --check-line-comment-text is enabled, configure the number of spaces [1]\n  -S, --skip-sem-colon            Skip all semi-colon after statements\n  --break-if                      Break mono-line if statement\n  --break-while                   In while and repeat statement, ensure newline after\n                                  \"do\" or \"repeat\" and before \"end\" or \"until\" keyword\n  --break-all                     Enable --break-if --break-for and --break-while and\n                                  before \"end\" or \"until\" keyword\n  --force-call-spaces             Force spaces before opening parenthesis in function\n                                  call [0]\n  --call-spaces-size=N            If --force-call-spaces is enabled, configure the\n                                  number of spaces\n  --strict                        Enable all features\n</pre>\n</div>\n<div id=\"loading-settings-from-environment-or-luastylerc\">\n<h2>Loading settings from environment or .luastylerc</h2>\n<p>In addition to CLI arguments, you may pass a config file via:</p>\n<ul>\n<li>the LUASTYLE_CONF environment variables pointing to a config file</li>\n<li>a .luastylerc file located in your user directory</li>\n</ul>\n</div>\n<div id=\"options-examples\">\n<h2>Options examples</h2>\n<div id=\"continuation-lines-level-in-function-arguments-f\">\n<h3>Continuation lines level in function arguments (-F)</h3>\n<pre>-F N, --func-cont-level=N   Continuation lines level in function arguments [2]\n</pre>\n<p>Given:</p>\n<pre><span class=\"kd\">local</span> <span class=\"kr\">function</span> <span class=\"nf\">process</span><span class=\"p\">(</span><span class=\"n\">param_1</span><span class=\"p\">,</span> <span class=\"n\">param_2</span><span class=\"p\">,</span> <span class=\"n\">param_3</span><span class=\"p\">,</span>\n  <span class=\"n\">param_4</span><span class=\"p\">,</span> <span class=\"n\">param_5</span><span class=\"p\">,</span> <span class=\"n\">param_6</span><span class=\"p\">)</span>\n  <span class=\"kr\">return</span> <span class=\"n\">do_something</span><span class=\"p\">()</span>\n<span class=\"kr\">end</span>\n</pre>\n<pre><span class=\"gp\">$</span> luastyle -c <span class=\"s2\">\".\"</span> -F <span class=\"m\">2</span> source.lua\n</pre>\n<pre><span class=\"kd\">local</span> <span class=\"kr\">function</span> <span class=\"nf\">process</span><span class=\"p\">(</span><span class=\"n\">param_1</span><span class=\"p\">,</span> <span class=\"n\">param_2</span><span class=\"p\">,</span> <span class=\"n\">param_3</span><span class=\"p\">,</span>\n<span class=\"p\">....</span><span class=\"n\">param_4</span><span class=\"p\">,</span> <span class=\"n\">param_5</span><span class=\"p\">,</span> <span class=\"n\">param_6</span><span class=\"p\">)</span>\n<span class=\"o\">..</span><span class=\"kr\">return</span> <span class=\"n\">do_something</span><span class=\"p\">()</span>\n<span class=\"kr\">end</span>\n</pre>\n</div>\n<div id=\"comments-formatting-options-m-n\">\n<h3>Comments formatting options (-M, -N)</h3>\n<p>Available options are:</p>\n<pre>-M, --check-line-comment-text Ensure that line comments text is started by at least N char\n-N N, --com-txt-space-size=N  If --check-line-comment-text is enabled, configure the number of spaces [1]\n</pre>\n<p>Given:</p>\n<pre><span class=\"c1\">--Lorem ipsum dolor sit amet</span>\n<span class=\"kd\">local</span> <span class=\"n\">foo</span> <span class=\"c1\">--In sodales elit id orci mollis varius</span>\n</pre>\n<pre><span class=\"gp\">$</span> luastyle -M -N <span class=\"m\">1</span> source.lua\n</pre>\n<pre><span class=\"c1\">-- Lorem ipsum dolor sit amet</span>\n<span class=\"kd\">local</span> <span class=\"n\">foo</span> <span class=\"c1\">-- In sodales elit id orci mollis varius</span>\n</pre>\n</div>\n<div id=\"break-if-statement-option-break-if\">\n<h3>Break If statement option (\u2013break-if)</h3>\n<p>Given:</p>\n<pre><span class=\"kr\">if</span> <span class=\"n\">condition</span> <span class=\"kr\">then</span> <span class=\"kr\">return</span> <span class=\"n\">success</span><span class=\"p\">()</span> <span class=\"kr\">else</span> <span class=\"kr\">return</span> <span class=\"n\">failure</span><span class=\"p\">()</span> <span class=\"kr\">end</span>\n</pre>\n<pre><span class=\"gp\">$</span> luastyle --break-if source.lua\n</pre>\n<pre><span class=\"kr\">if</span> <span class=\"n\">condition</span> <span class=\"kr\">then</span>\n  <span class=\"kr\">return</span> <span class=\"n\">success</span><span class=\"p\">()</span>\n<span class=\"kr\">else</span>\n  <span class=\"kr\">return</span> <span class=\"n\">failure</span><span class=\"p\">()</span>\n<span class=\"kr\">end</span>\n</pre>\n</div>\n<div id=\"format-table-field-list-f\">\n<h3>Format table field-list (-f)</h3>\n<dl>\n<dt>This option ensure that:</dt>\n<dd><ul>\n<li>field separator in table (\u2018,\u2019 or \u2018;\u2019) are trailing</li>\n<li>comma is preceded by one space and followed by two spaces</li>\n</ul>\n</dd>\n</dl>\n<p>The keyword <a href=\"mailto:'%40luastyle.disable\">\u2018<span>@</span>luastyle<span>.</span>disable</a>\u2019 placed in a comment just after the opening brace\nwill disable this feature in the concerned table.</p>\n<p>Given:</p>\n<pre><span class=\"kd\">local</span> <span class=\"n\">days</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"n\">monday</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n  <span class=\"n\">tuesday</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"p\">,</span> <span class=\"n\">wednesday</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">local</span> <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span>  <span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">}</span>\n\n<span class=\"kd\">local</span> <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"c1\">-- @luastyle.disable</span>\n  <span class=\"mi\">1</span><span class=\"p\">,</span>    <span class=\"mi\">2</span><span class=\"p\">,</span>    <span class=\"mi\">4</span><span class=\"p\">,</span>\n  <span class=\"mi\">8</span><span class=\"p\">,</span>    <span class=\"mi\">16</span><span class=\"p\">,</span>   <span class=\"mi\">32</span>\n<span class=\"p\">}</span>\n</pre>\n<pre><span class=\"gp\">$</span> luastyle -f source.lua\n</pre>\n<pre><span class=\"kd\">local</span> <span class=\"n\">days</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"n\">monday</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n  <span class=\"n\">tuesday</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n  <span class=\"n\">wednesday</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">local</span> <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">}</span>\n\n<span class=\"kd\">local</span> <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"c1\">-- @luastyle.disable</span>\n  <span class=\"mi\">1</span><span class=\"p\">,</span>    <span class=\"mi\">2</span><span class=\"p\">,</span>    <span class=\"mi\">4</span><span class=\"p\">,</span>\n  <span class=\"mi\">8</span><span class=\"p\">,</span>    <span class=\"mi\">16</span><span class=\"p\">,</span>   <span class=\"mi\">32</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"indent-closing-token-close-on-lowest-level\">\n<h3>Indent closing token (\u2013close-on-lowest-level )</h3>\n<p>Given:</p>\n<pre><span class=\"n\">describe</span><span class=\"p\">(</span><span class=\"s1\">'must indent'</span><span class=\"p\">,</span> <span class=\"kr\">function</span><span class=\"p\">()</span>\n  <span class=\"n\">done</span><span class=\"p\">()</span>\n<span class=\"kr\">end</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"gp\">$</span> luastyle --close-on-lowest-level source.lua\n</pre>\n<pre><span class=\"n\">describe</span><span class=\"p\">(</span><span class=\"s1\">'must indent'</span><span class=\"p\">,</span> <span class=\"kr\">function</span><span class=\"p\">()</span>\n    <span class=\"n\">done</span><span class=\"p\">()</span>\n  <span class=\"kr\">end</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"gp\">$</span> luastyle source.lua\n</pre>\n<pre><span class=\"n\">describe</span><span class=\"p\">(</span><span class=\"s1\">'must indent'</span><span class=\"p\">,</span> <span class=\"kr\">function</span><span class=\"p\">()</span>\n    <span class=\"n\">done</span><span class=\"p\">()</span>\n<span class=\"kr\">end</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"function-call-formatting-options-force-call-spaces-call-spaces-size\">\n<h3>Function call formatting options (\u2013force-call-spaces, \u2013call-spaces-size)</h3>\n<p>Given:</p>\n<pre><span class=\"n\">build</span> <span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"gp\">$</span> luastyle --force-call-spaces source.lua\n</pre>\n<pre><span class=\"n\">build</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"gp\">$</span> luastyle --force-call-spaces --call-spaces-size<span class=\"o\">=</span><span class=\"m\">1</span> source.lua\n</pre>\n<pre><span class=\"n\">build</span> <span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4043493, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "4982475a935b20fecff5331f18f4bb8e", "sha256": "d9b66cf7cfc3c69ae0adb79238968d466868f792597d4079ea72dedfbb636d1e"}, "downloads": -1, "filename": "luastyle-1.0.tar.gz", "has_sig": false, "md5_digest": "4982475a935b20fecff5331f18f4bb8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6265, "upload_time": "2018-02-06T21:24:53", "upload_time_iso_8601": "2018-02-06T21:24:53.338936Z", "url": "https://files.pythonhosted.org/packages/70/35/3766ec3d89ed7ba3edbedcd67147ccfee6acf0d5ab16fc8de3893143e373/luastyle-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "16bbc5ac286d1a9f41b3d675e96dcfed", "sha256": "0e9f4104da976d80771099619b3e93c329d46db909088014fcd4153221dcd7a4"}, "downloads": -1, "filename": "luastyle-1.1.tar.gz", "has_sig": false, "md5_digest": "16bbc5ac286d1a9f41b3d675e96dcfed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6368, "upload_time": "2018-02-07T21:06:40", "upload_time_iso_8601": "2018-02-07T21:06:40.148156Z", "url": "https://files.pythonhosted.org/packages/7a/16/72fab4efe6b4a4df7b248f393e41f6e494c0831892ab0cedbc582dd090dc/luastyle-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "a696671c9e842284585d2785c80776a5", "sha256": "1c49ebb79cdaa0b24b4663daa93377a0a4e4f4f131bce4a8ab34b69e0f16bc40"}, "downloads": -1, "filename": "luastyle-1.2.tar.gz", "has_sig": false, "md5_digest": "a696671c9e842284585d2785c80776a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6410, "upload_time": "2018-02-11T20:37:06", "upload_time_iso_8601": "2018-02-11T20:37:06.689509Z", "url": "https://files.pythonhosted.org/packages/f0/0e/a681dcb0e8b2fb937e4cbb83e0ee2800badd184bc04fad6642d3cf16190b/luastyle-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "cf43c2b647a50175af22b6f777033b5d", "sha256": "5c9ead243497daa147df757f4877bb98ae3ef10f6c85ab1b101cbebca257b3f3"}, "downloads": -1, "filename": "luastyle-1.2.1.tar.gz", "has_sig": false, "md5_digest": "cf43c2b647a50175af22b6f777033b5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7933, "upload_time": "2018-02-25T16:48:03", "upload_time_iso_8601": "2018-02-25T16:48:03.341587Z", "url": "https://files.pythonhosted.org/packages/39/66/04d9ea19b0d608ebdb2da1647ac56e1bdb4190dc00e1de99f906111a812f/luastyle-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "633880af1f0fb8a3a6783e3afce32ff6", "sha256": "fcf762c76f8031fbcf59a289d6150e803a3d36b3e3232c677b4e322d7d8ed804"}, "downloads": -1, "filename": "luastyle-1.2.2.tar.gz", "has_sig": false, "md5_digest": "633880af1f0fb8a3a6783e3afce32ff6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8007, "upload_time": "2018-02-28T20:21:58", "upload_time_iso_8601": "2018-02-28T20:21:58.010586Z", "url": "https://files.pythonhosted.org/packages/ce/8b/1de4904e4f04b8c8ef1a540a36167086be93122d869dd6bbd944ef5b364c/luastyle-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "18f67843f8f06328c49a670abfe48875", "sha256": "c9d150127f72fb1edfeec44fc1d58c38cbc7b0fadd77e47898a48808809d64ba"}, "downloads": -1, "filename": "luastyle-1.2.3.tar.gz", "has_sig": false, "md5_digest": "18f67843f8f06328c49a670abfe48875", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9769, "upload_time": "2018-03-06T08:03:27", "upload_time_iso_8601": "2018-03-06T08:03:27.599909Z", "url": "https://files.pythonhosted.org/packages/14/4b/d84e99b03b142190bbf4e1767764a5bf71c5f08447c18a2e47aea8738e82/luastyle-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "b3efd33d98bad9c045930eb79d1d9a16", "sha256": "67964760d6da102a7b90d561e243aa4e272841d6a744aaed7ac20f189bc3f0c9"}, "downloads": -1, "filename": "luastyle-1.2.4.tar.gz", "has_sig": false, "md5_digest": "b3efd33d98bad9c045930eb79d1d9a16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10038, "upload_time": "2018-03-13T10:45:54", "upload_time_iso_8601": "2018-03-13T10:45:54.121583Z", "url": "https://files.pythonhosted.org/packages/bb/b8/13dab6b55006ab9942ad26cb7a32bc34f21c3598db3c0bbf954340a1b041/luastyle-1.2.4.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "15b56194ef03ee7e4e3515f58573f57a", "sha256": "c4321af41d18a9f1bfa34ebe26edb6cb93257c74790227f8f782611c25b74976"}, "downloads": -1, "filename": "luastyle-1.3.0.tar.gz", "has_sig": false, "md5_digest": "15b56194ef03ee7e4e3515f58573f57a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 103566, "upload_time": "2018-04-05T21:08:33", "upload_time_iso_8601": "2018-04-05T21:08:33.220395Z", "url": "https://files.pythonhosted.org/packages/f3/7e/f0f94b06c47b0c30f403658dadeae2226d63de56518d26c08375e7d9a78b/luastyle-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "3f43c540b9176d9683249eae1d191094", "sha256": "b1f078441c9dcd915ca13e845fe823d5ff8770759b601e23987593c2dd4ab37d"}, "downloads": -1, "filename": "luastyle-1.3.1.tar.gz", "has_sig": false, "md5_digest": "3f43c540b9176d9683249eae1d191094", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 114380, "upload_time": "2018-06-12T08:34:54", "upload_time_iso_8601": "2018-06-12T08:34:54.916706Z", "url": "https://files.pythonhosted.org/packages/c9/9c/85fbe00f9aff85bbfe8b54d75b5f08be6d770bc4dc238e4a855054f9b4dd/luastyle-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "88817d449f92aaa28790369c19882e9a", "sha256": "b4e6a6704f3e0c835644f3b6adeaf2695137f04657ed1e7cc5c64cf5e7627209"}, "downloads": -1, "filename": "luastyle-1.3.2.tar.gz", "has_sig": false, "md5_digest": "88817d449f92aaa28790369c19882e9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115793, "upload_time": "2018-06-12T11:45:38", "upload_time_iso_8601": "2018-06-12T11:45:38.512301Z", "url": "https://files.pythonhosted.org/packages/90/55/cae464410208bf3d1eec500bb750a5f2db625c92fe1f8dd4a4073fb1135a/luastyle-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "f54e924d2e8c9ccb488a29c56f377433", "sha256": "e714dd7f029295c1144e61fa21b956a14a1ce720e69226f4e436d1571f464390"}, "downloads": -1, "filename": "luastyle-1.3.3.tar.gz", "has_sig": false, "md5_digest": "f54e924d2e8c9ccb488a29c56f377433", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 118925, "upload_time": "2018-06-15T06:57:05", "upload_time_iso_8601": "2018-06-15T06:57:05.709158Z", "url": "https://files.pythonhosted.org/packages/3a/b3/f133f80a12eaa776c30db7baa2df18bcfbe95475c885413544f0d07eb5a9/luastyle-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "abfb2a09f249c1b098359e3b3eb826e2", "sha256": "2e0f7452633e1807d4229a526ce72186ef44aee14eae119d10ea92be10cf7d74"}, "downloads": -1, "filename": "luastyle-1.3.4.tar.gz", "has_sig": false, "md5_digest": "abfb2a09f249c1b098359e3b3eb826e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119059, "upload_time": "2018-06-29T08:17:40", "upload_time_iso_8601": "2018-06-29T08:17:40.650619Z", "url": "https://files.pythonhosted.org/packages/0b/b7/5db3fc3c9ff5627564ebeaaacc49188b435cb4dc5b7aafc4360f2add493a/luastyle-1.3.4.tar.gz", "yanked": false}], "1.3.5": [{"comment_text": "", "digests": {"md5": "0fda01005040087c0c1ab55aa10f30d5", "sha256": "2c96c15facfa4f2546c53b40a5c31680809e2a3e62c88783d9a5d3bd1fa8370b"}, "downloads": -1, "filename": "luastyle-1.3.5.tar.gz", "has_sig": false, "md5_digest": "0fda01005040087c0c1ab55aa10f30d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119067, "upload_time": "2018-07-09T12:34:44", "upload_time_iso_8601": "2018-07-09T12:34:44.281474Z", "url": "https://files.pythonhosted.org/packages/05/45/351af7f604126ffe01bf85b7a705428debaa12022368db7ac66cb5ca5016/luastyle-1.3.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0fda01005040087c0c1ab55aa10f30d5", "sha256": "2c96c15facfa4f2546c53b40a5c31680809e2a3e62c88783d9a5d3bd1fa8370b"}, "downloads": -1, "filename": "luastyle-1.3.5.tar.gz", "has_sig": false, "md5_digest": "0fda01005040087c0c1ab55aa10f30d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119067, "upload_time": "2018-07-09T12:34:44", "upload_time_iso_8601": "2018-07-09T12:34:44.281474Z", "url": "https://files.pythonhosted.org/packages/05/45/351af7f604126ffe01bf85b7a705428debaa12022368db7ac66cb5ca5016/luastyle-1.3.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:19 2020"}