{"info": {"author": "Omar Masmoudi", "author_email": "", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.5"], "description": "Welcome to Jupyter-Runner's documentation\n=========================================\n\nJupyter runners allows to run **multiple notebooks** over **multiple sets of parameters**.\n\nNotebook execution can happen in parallel with a fixed number of workers.\n\nInstallation\n============\n\n.. code-block:: console\n\n    pip install jupyter-runner\n\nUsage\n=====\n\n::\n\n    jupyter-runner [options] <notebook>...\n\n        --parameter-file=<PARAMETER_FILE>**    Optional parameters files containing one parameter instance by line, setting the environment.\n        Example with 2 sets of 3 parameters:\n            VAR1=VAL1 VAR2=VAL2 VAR3=VAL3\n            VAR1=VAL5 VAR2=VAL18 VAR3=VAL42\n        --workers=<workers>                    Maximum number of parallel execution [Default: 1]\n        --output-directory=<OUTPUT_DIRECTORY>  Output directory [Default: .]\n        --overwrite                            Overwrite output files if they already exist.\n        --format=<FORMAT>                      Output format: html, notebook... [Default: html]\n        --debug                                Enable debug logs\n        --help                                 Display this help\n        --version                              Display version\n        --timeout=<TIMEOUT>                    Cell execution timeout in seconds.  [Default: -1]\n        --allow-errors                         Allow errors during notebook execution.\n\n\nTutorial\n========\n\nRun a simple notebook\n---------------------\n\n.. code-block:: console\n\n    jupyter-runner notebook.ipynb\n\nBy default, the process creates output file `notebook.html` in current directory.\n\nRun multiple notebooks\n----------------------\n\n.. code-block:: console\n\n    jupyter-runner notebookA.ipynb notebookB.ipynb\n\nBy default, the process creates output files `notebookA.html` and `notebookB.html` in current directory.\n\n\nRun notebook with parameters\n----------------------------\nUse environment variables on command-line.\n\n.. code-block:: console\n\n    ENV_VAR=xxx jupyter-runner notebook.ipynb\n\nIn python notebook, variables can be retrieved using ``os.environ``:\n\n.. code-block:: python\n\n    import os\n    env_var = os.environ.get('ENV_VAR', 'a_default_value')\n    # usage of env_var in your code\n\nBy default, the process creates output file `notebook.html` in current directory.\nThe notebook variables passed by the user can impact the rendering of the output.\n\nRun notebook with multiple sets of parameters\n---------------------------------------------\nCreate a file with multiple set of parameters, one set of parameters per line.\n\nExample file containing 2 sets of 3 parameters:\n::\n\n    VAR1=VAL1 VAR2=VAL2 VAR3=VAL3\n    VAR1=VAL5 VAR2=VAL18 VAR3='VAL42 with space'\n\nThen run jupyter-runner specifying the path to ``my_parameter_file`` just created:\n\n.. code-block:: console\n\n    jupyter-runner --parameter-file=my_parameter_file notebook.ipynb\n\nBy default, the process creates output files `notebook_1.html` and `notebook_2.html` in current directory.\n\nRun multiple notebooks with multiple sets of parameters\n-------------------------------------------------------\njupyter-runner can combine multiple set of parameters on multiple notebooks.\nWhen there are ``N`` sets of parameters running on ``M`` notebooks, there will be ``NxM`` distinct output files.\n\n.. code-block:: console\n\n    jupyter-runner --parameter-file=my_parameter_file notebookA.ipynb notebookB.ipynb\n\nBy default, the process creates output files `notebookA_1.html`, `notebookA_2.html`, `notebookB_1.html`, `notebookB_2.html` in current directory.\n\nChange output directory\n-----------------------\n\n.. code-block:: console\n\n    jupyter-runner --output-directory results notebook.ipynb\n\nThe process create output file ``results/notebook.html`.\n``results`` directory is created if it does not pre-exist.\n\nUse S3 inputs/outputs\n---------------------\n\n.. code-block:: console\n\n    jupyter-runner --output-directory=s3://bucket/results/ s3://bucket/notebooks/notebook.ipynb\n\nThe process create output file ``s3://bucket/results/notebook.html`` based on a notebook stored from S3.\n\nFiles are downloaded to a local temporary only available to the current user and removed at the end or in case of exceptions.\n\nOverwrite existing outputs\n--------------------------\nBy default, jupyter-runner skip the run when output file(s) already exists.\nTo overwrite the files, use the ``--overwrite`` option:\n\n.. code-block:: console\n\n    jupyter-runner --overwrite notebook.ipynb\n\nUse multiple workers\n--------------------\nBy default, only 1 notebook will be executed at the same time.\nUse ``--workers`` option to specify the number of notebooks to run in parallel.\n\n.. code-block:: console\n\n    jupyter-runner --workers 3 --parameter-file=my_parameter_file notebookA.ipynb notebookB.ipynb\n\nThe above command will start to run 3 notebook output over the 4 requested. When the first execution finishes, the 4th notebook is launched and so on.\n\nChange output type\n------------------\nList of possible output types are available here:\nhttps://nbconvert.readthedocs.io/en/latest/usage.html#default-output-format-html\n\n.. code-block:: console\n\n    jupyter-runner --format notebook --output-directory results notebook.ipynb\n\n\nReport mode (hide input)\n------------------------\n\n.. code-block:: console\n\n    jupyter-runner --hide-input notebook.ipynb\n\nThe process create output file ``notebook.html`` without any input cells.\nMarkdown and output cells are kept, but input code cells do not show.\nThis feature is handy to create user-friendly reports.\n\n\nChange output file suffix\n-------------------------\nWhen multiple notebooks are run with a list of parameters, output filenames are suffixed by ``_1``, ``_2``, ...\nThis default can be overriden by setting parameter JUPYTER_OUTPUT_SUFFIX in parameter set.\n\nExample ``my_parameter_file``:\n::\n\n    VAR1=VAL1 VAR2=VAL2 VAR3=VAL3 JUPYTER_OUTPUT_SUFFIX=AAA\n    VAR1=VAL5 VAR2=VAL18 VAR3='VAL42 with space' JUPYTER_OUTPUT_SUFFIX=BBB\n\n.. code-block:: console\n\n    jupyter-runner --parameter-file=my_parameter_file notebook.ipynb\n\nThis run will generate two files: ``notebook_AAA.html`` and ``notebook_BBB.html``\n\nChange cell execution timeout\n-----------------------------\nBy default, timeout is set to -1, meaning infinite.\nIt is possible to set the cell execution timeout (in seconds) with ``--timeout``\n\n.. code-block:: console\n\n    jupyter-runner --timeout 60 notebook.ipynb\n\nAllow error in notebook execution\n---------------------------------\nBy default, errors in notebook execution stops its execution and return an error code.\nSetting ``--allow-errors`` option allows to ignore the error and continue the execution, returning a valid code.\n\n.. code-block:: console\n\n    jupyter-runner --allow-errors notebook.ipynb\n\n\nSend e-mail containing output\n-----------------------------\nYou can send an e-mail containing attachments using ``--mail-to`` option.\nOther mail options available (subject, from, cc, bcc...) as well as attaching\neach output in separate file or regrouped together within a LZMA compressed\nzip (default).\n\n.. code-block:: console\n\n    jupyter-runner notebook.ipynb --mail-to=me@example.com", "description_content_type": "", "docs_url": "https://pythonhosted.org/jupyter-runner/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "jupyter-runner", "package_url": "https://pypi.org/project/jupyter-runner/", "platform": "", "project_url": "https://pypi.org/project/jupyter-runner/", "project_urls": null, "release_url": "https://pypi.org/project/jupyter-runner/0.6.0/", "requires_dist": null, "requires_python": "", "summary": "Jupyter notebook runner.", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"welcome-to-jupyter-runner-s-documentation\">\n<h2>Welcome to Jupyter-Runner\u2019s documentation</h2>\n<p>Jupyter runners allows to run <strong>multiple notebooks</strong> over <strong>multiple sets of parameters</strong>.</p>\n<p>Notebook execution can happen in parallel with a fixed number of workers.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre><span class=\"go\">pip install jupyter-runner</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>jupyter-runner [options] &lt;notebook&gt;...\n\n    --parameter-file=&lt;PARAMETER_FILE&gt;**    Optional parameters files containing one parameter instance by line, setting the environment.\n    Example with 2 sets of 3 parameters:\n        VAR1=VAL1 VAR2=VAL2 VAR3=VAL3\n        VAR1=VAL5 VAR2=VAL18 VAR3=VAL42\n    --workers=&lt;workers&gt;                    Maximum number of parallel execution [Default: 1]\n    --output-directory=&lt;OUTPUT_DIRECTORY&gt;  Output directory [Default: .]\n    --overwrite                            Overwrite output files if they already exist.\n    --format=&lt;FORMAT&gt;                      Output format: html, notebook... [Default: html]\n    --debug                                Enable debug logs\n    --help                                 Display this help\n    --version                              Display version\n    --timeout=&lt;TIMEOUT&gt;                    Cell execution timeout in seconds.  [Default: -1]\n    --allow-errors                         Allow errors during notebook execution.\n</pre>\n</div>\n<div id=\"tutorial\">\n<h2>Tutorial</h2>\n<div id=\"run-a-simple-notebook\">\n<h3>Run a simple notebook</h3>\n<pre><span class=\"go\">jupyter-runner notebook.ipynb</span>\n</pre>\n<p>By default, the process creates output file <cite>notebook.html</cite> in current directory.</p>\n</div>\n<div id=\"run-multiple-notebooks\">\n<h3>Run multiple notebooks</h3>\n<pre><span class=\"go\">jupyter-runner notebookA.ipynb notebookB.ipynb</span>\n</pre>\n<p>By default, the process creates output files <cite>notebookA.html</cite> and <cite>notebookB.html</cite> in current directory.</p>\n</div>\n<div id=\"run-notebook-with-parameters\">\n<h3>Run notebook with parameters</h3>\n<p>Use environment variables on command-line.</p>\n<pre><span class=\"go\">ENV_VAR=xxx jupyter-runner notebook.ipynb</span>\n</pre>\n<p>In python notebook, variables can be retrieved using <tt>os.environ</tt>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"n\">env_var</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'ENV_VAR'</span><span class=\"p\">,</span> <span class=\"s1\">'a_default_value'</span><span class=\"p\">)</span>\n<span class=\"c1\"># usage of env_var in your code</span>\n</pre>\n<p>By default, the process creates output file <cite>notebook.html</cite> in current directory.\nThe notebook variables passed by the user can impact the rendering of the output.</p>\n</div>\n<div id=\"run-notebook-with-multiple-sets-of-parameters\">\n<h3>Run notebook with multiple sets of parameters</h3>\n<p>Create a file with multiple set of parameters, one set of parameters per line.</p>\n<p>Example file containing 2 sets of 3 parameters:</p>\n<pre>VAR1=VAL1 VAR2=VAL2 VAR3=VAL3\nVAR1=VAL5 VAR2=VAL18 VAR3='VAL42 with space'\n</pre>\n<p>Then run jupyter-runner specifying the path to <tt>my_parameter_file</tt> just created:</p>\n<pre><span class=\"go\">jupyter-runner --parameter-file=my_parameter_file notebook.ipynb</span>\n</pre>\n<p>By default, the process creates output files <cite>notebook_1.html</cite> and <cite>notebook_2.html</cite> in current directory.</p>\n</div>\n<div id=\"run-multiple-notebooks-with-multiple-sets-of-parameters\">\n<h3>Run multiple notebooks with multiple sets of parameters</h3>\n<p>jupyter-runner can combine multiple set of parameters on multiple notebooks.\nWhen there are <tt>N</tt> sets of parameters running on <tt>M</tt> notebooks, there will be <tt>NxM</tt> distinct output files.</p>\n<pre><span class=\"go\">jupyter-runner --parameter-file=my_parameter_file notebookA.ipynb notebookB.ipynb</span>\n</pre>\n<p>By default, the process creates output files <cite>notebookA_1.html</cite>, <cite>notebookA_2.html</cite>, <cite>notebookB_1.html</cite>, <cite>notebookB_2.html</cite> in current directory.</p>\n</div>\n<div id=\"change-output-directory\">\n<h3>Change output directory</h3>\n<pre><span class=\"go\">jupyter-runner --output-directory results notebook.ipynb</span>\n</pre>\n<p>The process create output file <tt>results/notebook.html`.\n``results</tt> directory is created if it does not pre-exist.</p>\n</div>\n<div id=\"use-s3-inputs-outputs\">\n<h3>Use S3 inputs/outputs</h3>\n<pre><span class=\"go\">jupyter-runner --output-directory=s3://bucket/results/ s3://bucket/notebooks/notebook.ipynb</span>\n</pre>\n<p>The process create output file <tt><span class=\"pre\">s3://bucket/results/notebook.html</span></tt> based on a notebook stored from S3.</p>\n<p>Files are downloaded to a local temporary only available to the current user and removed at the end or in case of exceptions.</p>\n</div>\n<div id=\"overwrite-existing-outputs\">\n<h3>Overwrite existing outputs</h3>\n<p>By default, jupyter-runner skip the run when output file(s) already exists.\nTo overwrite the files, use the <tt><span class=\"pre\">--overwrite</span></tt> option:</p>\n<pre><span class=\"go\">jupyter-runner --overwrite notebook.ipynb</span>\n</pre>\n</div>\n<div id=\"use-multiple-workers\">\n<h3>Use multiple workers</h3>\n<p>By default, only 1 notebook will be executed at the same time.\nUse <tt><span class=\"pre\">--workers</span></tt> option to specify the number of notebooks to run in parallel.</p>\n<pre><span class=\"go\">jupyter-runner --workers 3 --parameter-file=my_parameter_file notebookA.ipynb notebookB.ipynb</span>\n</pre>\n<p>The above command will start to run 3 notebook output over the 4 requested. When the first execution finishes, the 4th notebook is launched and so on.</p>\n</div>\n<div id=\"change-output-type\">\n<h3>Change output type</h3>\n<p>List of possible output types are available here:\n<a href=\"https://nbconvert.readthedocs.io/en/latest/usage.html#default-output-format-html\" rel=\"nofollow\">https://nbconvert.readthedocs.io/en/latest/usage.html#default-output-format-html</a></p>\n<pre><span class=\"go\">jupyter-runner --format notebook --output-directory results notebook.ipynb</span>\n</pre>\n</div>\n<div id=\"report-mode-hide-input\">\n<h3>Report mode (hide input)</h3>\n<pre><span class=\"go\">jupyter-runner --hide-input notebook.ipynb</span>\n</pre>\n<p>The process create output file <tt>notebook.html</tt> without any input cells.\nMarkdown and output cells are kept, but input code cells do not show.\nThis feature is handy to create user-friendly reports.</p>\n</div>\n<div id=\"change-output-file-suffix\">\n<h3>Change output file suffix</h3>\n<p>When multiple notebooks are run with a list of parameters, output filenames are suffixed by <tt>_1</tt>, <tt>_2</tt>, \u2026\nThis default can be overriden by setting parameter JUPYTER_OUTPUT_SUFFIX in parameter set.</p>\n<p>Example <tt>my_parameter_file</tt>:</p>\n<pre>VAR1=VAL1 VAR2=VAL2 VAR3=VAL3 JUPYTER_OUTPUT_SUFFIX=AAA\nVAR1=VAL5 VAR2=VAL18 VAR3='VAL42 with space' JUPYTER_OUTPUT_SUFFIX=BBB\n</pre>\n<pre><span class=\"go\">jupyter-runner --parameter-file=my_parameter_file notebook.ipynb</span>\n</pre>\n<p>This run will generate two files: <tt>notebook_AAA.html</tt> and <tt>notebook_BBB.html</tt></p>\n</div>\n<div id=\"change-cell-execution-timeout\">\n<h3>Change cell execution timeout</h3>\n<p>By default, timeout is set to -1, meaning infinite.\nIt is possible to set the cell execution timeout (in seconds) with <tt><span class=\"pre\">--timeout</span></tt></p>\n<pre><span class=\"go\">jupyter-runner --timeout 60 notebook.ipynb</span>\n</pre>\n</div>\n<div id=\"allow-error-in-notebook-execution\">\n<h3>Allow error in notebook execution</h3>\n<p>By default, errors in notebook execution stops its execution and return an error code.\nSetting <tt><span class=\"pre\">--allow-errors</span></tt> option allows to ignore the error and continue the execution, returning a valid code.</p>\n<pre><span class=\"go\">jupyter-runner --allow-errors notebook.ipynb</span>\n</pre>\n</div>\n<div id=\"send-e-mail-containing-output\">\n<h3>Send e-mail containing output</h3>\n<p>You can send an e-mail containing attachments using <tt><span class=\"pre\">--mail-to</span></tt> option.\nOther mail options available (subject, from, cc, bcc\u2026) as well as attaching\neach output in separate file or regrouped together within a LZMA compressed\nzip (default).</p>\n<pre><span class=\"go\">jupyter-runner notebook.ipynb --mail-to=me@example.com</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5927352, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5e0ceea4a689da609896a5a35aca59ba", "sha256": "3b6917bbf52606dfd01f273e25f16d791019d112896afcd4a7674a663f18d360"}, "downloads": -1, "filename": "jupyter_runner-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5e0ceea4a689da609896a5a35aca59ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4774, "upload_time": "2016-11-24T14:32:18", "upload_time_iso_8601": "2016-11-24T14:32:18.317847Z", "url": "https://files.pythonhosted.org/packages/20/e2/8c4e896c2c9992ef8d487a1d18f4d8e398f500df0a695804ac2aabaf0af5/jupyter_runner-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "0a7d7b67d2c3252fef3c3173b98c5d1e", "sha256": "c269ce32bd93b74000ed6b4fb285dd40bca7f08d8d3db3f3937aaffcb426f822"}, "downloads": -1, "filename": "jupyter_runner-0.2.0.tar.gz", "has_sig": false, "md5_digest": "0a7d7b67d2c3252fef3c3173b98c5d1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5421, "upload_time": "2016-11-24T17:46:22", "upload_time_iso_8601": "2016-11-24T17:46:22.322690Z", "url": "https://files.pythonhosted.org/packages/0c/8e/e0c1420e500a29295db35ce788364275449b22138de7e0ff79be3a2e1ddf/jupyter_runner-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "c41439f4cdda603b99568a6c8160c7fd", "sha256": "1fd678fe231ca967dbbc81f4c4f70e32bfc3568d62daa250bda9308722c7ad5e"}, "downloads": -1, "filename": "jupyter_runner-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c41439f4cdda603b99568a6c8160c7fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5420, "upload_time": "2016-11-28T15:37:05", "upload_time_iso_8601": "2016-11-28T15:37:05.909426Z", "url": "https://files.pythonhosted.org/packages/1f/55/071d2f53d3e9662a74b3fe0c8b0052a16d4c83bfd07d5da5799c6b712888/jupyter_runner-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "2d185e3b1870e970d053c6889a9a0cc0", "sha256": "c0357b56fc568249062326c4489dee69ca1aeb05f4414d80a0aeb9f265e9ed88"}, "downloads": -1, "filename": "jupyter_runner-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2d185e3b1870e970d053c6889a9a0cc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5415, "upload_time": "2017-03-21T11:29:25", "upload_time_iso_8601": "2017-03-21T11:29:25.482804Z", "url": "https://files.pythonhosted.org/packages/ba/04/2d2c77714fedd6938d9b072f217fc9354c025ed9c0993e303c83e04be0d2/jupyter_runner-0.3.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "35d7ed6bc54757c71bc171648de7dc7a", "sha256": "44520bcbcbf5c095dcb6e945a17595d6fc5cbe36baa4e6870073f7792b09495f"}, "downloads": -1, "filename": "jupyter-runner-0.5.0.tar.gz", "has_sig": false, "md5_digest": "35d7ed6bc54757c71bc171648de7dc7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10999, "upload_time": "2019-03-06T12:59:25", "upload_time_iso_8601": "2019-03-06T12:59:25.900790Z", "url": "https://files.pythonhosted.org/packages/18/e0/d80fe566ffab168cda2ba71e23d91f3f17235ddceae9dc5d9d339cd25cb1/jupyter-runner-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "3f5fde32ff3e97316ee57ab3b2a38c66", "sha256": "ebf249f40755f7c4478a76d73ed3732e840dfe2615cea26c5e1f9e80d248c253"}, "downloads": -1, "filename": "jupyter-runner-0.5.1.tar.gz", "has_sig": false, "md5_digest": "3f5fde32ff3e97316ee57ab3b2a38c66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11008, "upload_time": "2019-03-06T13:35:28", "upload_time_iso_8601": "2019-03-06T13:35:28.837372Z", "url": "https://files.pythonhosted.org/packages/1b/f4/6d3a8f94da65bf31747b5350fdb317a9b379bf20a65a96ae6b22a0c1f47b/jupyter-runner-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "52af2171b70ce6fe3a2dd0d6824b7292", "sha256": "c38377a13ae9b1d277cc6e5fcce533e62e6e6eb9c8bdab6bcd4810dc7eeb7fb6"}, "downloads": -1, "filename": "jupyter-runner-0.6.0.tar.gz", "has_sig": false, "md5_digest": "52af2171b70ce6fe3a2dd0d6824b7292", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11275, "upload_time": "2019-10-04T08:53:29", "upload_time_iso_8601": "2019-10-04T08:53:29.968642Z", "url": "https://files.pythonhosted.org/packages/f2/e2/8126345978943c7f5c0d26e9a9655fdfe2e6555947985aecde270c96963d/jupyter-runner-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "52af2171b70ce6fe3a2dd0d6824b7292", "sha256": "c38377a13ae9b1d277cc6e5fcce533e62e6e6eb9c8bdab6bcd4810dc7eeb7fb6"}, "downloads": -1, "filename": "jupyter-runner-0.6.0.tar.gz", "has_sig": false, "md5_digest": "52af2171b70ce6fe3a2dd0d6824b7292", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11275, "upload_time": "2019-10-04T08:53:29", "upload_time_iso_8601": "2019-10-04T08:53:29.968642Z", "url": "https://files.pythonhosted.org/packages/f2/e2/8126345978943c7f5c0d26e9a9655fdfe2e6555947985aecde270c96963d/jupyter-runner-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:08 2020"}