{"info": {"author": "Jocelyn Delalande", "author_email": "jdelalande@oasiswork.fr", "bugtrack_url": null, "classifiers": [], "description": "ZimSOAP : a programmatic python interface to zimbra\n===================================================\n\n[![Build Status](https://travis-ci.org/oasiswork/zimsoap.svg?branch=master)](https://travis-ci.org/oasiswork/zimsoap)\n\nZimSOAP allows to access the [SOAP Zimbra API] through a programmatic,\ndata-type-aware  interface high-level. It also handle  authentification,\nsessions, pre-authentication and delegated authentication.\n\nNot all methods are covered, but you're welcome to wrap the ones you need and\npull-request !\n\nIf you are looking at a lower-level lib, you better look to [python-zimbra]\n\nAllows accessing zimbraAdmin and zimbraAccount SOAP APIs\n\n - handle authentification\n - handle pre-authentification admin->admin and admin->Account\n - presents the request results as nice Python objects\n - all requests are tested with 8.0.4 and 8.0.5\n\n[SOAP Zimbra API]:\nhttp://files.zimbra.com/docs/soap_api/8.0.4/soap-docs-804/api-reference/index.html\n[python-zimbra]:https://github.com/Zimbra-Community/python-zimbra/\n\nInstalling\n----------\n\nSimple:\n\n    pip install zimsoap\n\nOr if you fetch it from git:\n\n    ./setup.py install\n\nAPI\n---\n\nAPI is accessible through the ZimbraAdminClient() method. Example :\n\n    zc = ZimbraAdminClient('myserver.example.tld')\n    zc.login('username@domain.tld', 'mypassword')\n\n    print(\"Domains on that zimbra instance :\")\n    for domain in zc.get_all_domains():\n        # Each domain is a zobject.Domain instance\n        print('  - %s' % domain.name)\n\nYou can also access raw SOAP methods:\n\n    zc = ZimbraAdminClient()\n    zc.login('username@domain.tld', 'mypassword')\n    xml_response = self.zc.GetAllDomainsRequest()\n\n\nIf you want up-to-date code example, look at unit tests...\n\n\nTesting\n-------\n\nMost of tests are integration tests, they require a live zimbra server to be\nrunning.\n\nThe tests will assume some base data (provisioning scsripts included),\ncreate/update some, and cleanup after themselves. They may leave garbage data in\ncase they crash.\n\n----\n\n**DO NOT USE A PRODUCTION SERVER TO RUN TESTS.**\n\nUse a dedicated test server, unable to send emails over network and consider\nall Zimbra accounts/domains/settings are disposable for automated tests\npurposes.\n\n----\n\n\n### Setting your environment for tests ###\n\nMost of tests are Integration tests are to be run either :\n\n- against a pre-configured VM, using vagrant\n- using any zimbra server you provide, after reading the above warning.\n\n\n#### Using the vagrant VM ####\n\nThere is a VM ready for you with vagrant, just make sure you have vagrant installed and then :\n\n    $ vagrant up 8.0.5\n    $ vagrant provision 8.0.5\n\nYou have several zimbra versions available as VMs for testing (see vagrant\nstatus).\n\n*Warning*: the test VM requires 2GB RAM to function properly and may put heavy\n load on your machine.\n\n#### Using your own zimbra server ####\n\nBe sure to have a server:\n- running zimbra 8.x,\n- ports 7071 and 443 reachables\n- with an unix user having password-less sudo rights\n\nFirst delete all accounts/domains/calendar resources from your test server and run :\n\n    cat tests/provision-01-test-data.zmprov | ssh user@mytestserver -- sudo su - zimbra -c | zmprov\n\n(considering *mytestserver* is your server hostname and *user* is a unix user with admin sudo rights)\n\nIt will provision an admin account, but disabled. You have to set a password and enable the account\n\n    ssh user@mytestserver -- sudo su - zimbra -c 'zmprov sp admin@zimbratest.example.com mypassword'\n    ssh user@mytestserver -- sudo su - zimbra -c 'zmprov ma admin@zimbratest.example.com zimbraAccountStatus active'\n\nThen create a *test_config.ini* in tests/ directory. Example content:\n\n    [zimbra_server]\n    host = mytestserver\n    server_name = zimbratest.example.com\n    admin_port = 7071\n    admin_login = admin@zimbratest.example.com\n    admin_password = mypassword\n\n*note: server_name is the internal server name from your zimbra server list (generally matches the hostname)*\n\nIf you damaged the data with failed tests, you can just delete everything except\nthe admin account and then run :\n\n    cat tests/provision-01-test-data.zmprov | ssh user@mytestserver -- sudo su - zimbra -c | zmprov\n\n### Testing ###\n\nAfter you are all set, you can run tests\n[the standard python way](https://docs.python.org/2/library/unittest.html)\n\n    $ python -m unittest discover\n\n\u2026 Or using [py.test](http://pytest.org/).\n\n    $ py.test\n\nFor contributing code, you may also want to run the *flake8* linter:\n\n    $ pip install -r test-requirements.txt\n    $ make lint", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/oasiswork/zimsoap/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "zimsoap", "package_url": "https://pypi.org/project/zimsoap/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/zimsoap/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/oasiswork/zimsoap/"}, "release_url": "https://pypi.org/project/zimsoap/0.4.2/", "requires_dist": null, "requires_python": null, "summary": "A high-level library to access programaticaly Zimbra                    SOAP API features", "version": "0.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            ZimSOAP : a programmatic python interface to zimbra<br>===================================================<br><br>[![Build Status](https://travis-ci.org/oasiswork/zimsoap.svg?branch=master)](https://travis-ci.org/oasiswork/zimsoap)<br><br>ZimSOAP allows to access the [SOAP Zimbra API] through a programmatic,<br>data-type-aware  interface high-level. It also handle  authentification,<br>sessions, pre-authentication and delegated authentication.<br><br>Not all methods are covered, but you're welcome to wrap the ones you need and<br>pull-request !<br><br>If you are looking at a lower-level lib, you better look to [python-zimbra]<br><br>Allows accessing zimbraAdmin and zimbraAccount SOAP APIs<br><br> - handle authentification<br> - handle pre-authentification admin-&gt;admin and admin-&gt;Account<br> - presents the request results as nice Python objects<br> - all requests are tested with 8.0.4 and 8.0.5<br><br>[SOAP Zimbra API]:<br>http://files.zimbra.com/docs/soap_api/8.0.4/soap-docs-804/api-reference/index.html<br>[python-zimbra]:https://github.com/Zimbra-Community/python-zimbra/<br><br>Installing<br>----------<br><br>Simple:<br><br>    pip install zimsoap<br><br>Or if you fetch it from git:<br><br>    ./setup.py install<br><br>API<br>---<br><br>API is accessible through the ZimbraAdminClient() method. Example :<br><br>    zc = ZimbraAdminClient('myserver.example.tld')<br>    zc.login('username@domain.tld', 'mypassword')<br><br>    print(\"Domains on that zimbra instance :\")<br>    for domain in zc.get_all_domains():<br>        # Each domain is a zobject.Domain instance<br>        print('  - %s' % domain.name)<br><br>You can also access raw SOAP methods:<br><br>    zc = ZimbraAdminClient()<br>    zc.login('username@domain.tld', 'mypassword')<br>    xml_response = self.zc.GetAllDomainsRequest()<br><br><br>If you want up-to-date code example, look at unit tests...<br><br><br>Testing<br>-------<br><br>Most of tests are integration tests, they require a live zimbra server to be<br>running.<br><br>The tests will assume some base data (provisioning scsripts included),<br>create/update some, and cleanup after themselves. They may leave garbage data in<br>case they crash.<br><br>----<br><br>**DO NOT USE A PRODUCTION SERVER TO RUN TESTS.**<br><br>Use a dedicated test server, unable to send emails over network and consider<br>all Zimbra accounts/domains/settings are disposable for automated tests<br>purposes.<br><br>----<br><br><br>### Setting your environment for tests ###<br><br>Most of tests are Integration tests are to be run either :<br><br>- against a pre-configured VM, using vagrant<br>- using any zimbra server you provide, after reading the above warning.<br><br><br>#### Using the vagrant VM ####<br><br>There is a VM ready for you with vagrant, just make sure you have vagrant installed and then :<br><br>    $ vagrant up 8.0.5<br>    $ vagrant provision 8.0.5<br><br>You have several zimbra versions available as VMs for testing (see vagrant<br>status).<br><br>*Warning*: the test VM requires 2GB RAM to function properly and may put heavy<br> load on your machine.<br><br>#### Using your own zimbra server ####<br><br>Be sure to have a server:<br>- running zimbra 8.x,<br>- ports 7071 and 443 reachables<br>- with an unix user having password-less sudo rights<br><br>First delete all accounts/domains/calendar resources from your test server and run :<br><br>    cat tests/provision-01-test-data.zmprov | ssh user@mytestserver -- sudo su - zimbra -c | zmprov<br><br>(considering *mytestserver* is your server hostname and *user* is a unix user with admin sudo rights)<br><br>It will provision an admin account, but disabled. You have to set a password and enable the account<br><br>    ssh user@mytestserver -- sudo su - zimbra -c 'zmprov sp admin@zimbratest.example.com mypassword'<br>    ssh user@mytestserver -- sudo su - zimbra -c 'zmprov ma admin@zimbratest.example.com zimbraAccountStatus active'<br><br>Then create a *test_config.ini* in tests/ directory. Example content:<br><br>    [zimbra_server]<br>    host = mytestserver<br>    server_name = zimbratest.example.com<br>    admin_port = 7071<br>    admin_login = admin@zimbratest.example.com<br>    admin_password = mypassword<br><br>*note: server_name is the internal server name from your zimbra server list (generally matches the hostname)*<br><br>If you damaged the data with failed tests, you can just delete everything except<br>the admin account and then run :<br><br>    cat tests/provision-01-test-data.zmprov | ssh user@mytestserver -- sudo su - zimbra -c | zmprov<br><br>### Testing ###<br><br>After you are all set, you can run tests<br>[the standard python way](https://docs.python.org/2/library/unittest.html)<br><br>    $ python -m unittest discover<br><br>\u2026 Or using [py.test](http://pytest.org/).<br><br>    $ py.test<br><br>For contributing code, you may also want to run the *flake8* linter:<br><br>    $ pip install -r test-requirements.txt<br>    $ make lint\n          </div>"}, "last_serial": 1964923, "releases": {"0.2.2-git-d246b5d": [{"comment_text": "", "digests": {"md5": "f6b4d7d2925edf3f9b1938cddfbb37e8", "sha256": "9ab9b6104d4b8b6d19156ca1714edf0ee75a4ad16ca505ba4b528fac4456ceb9"}, "downloads": -1, "filename": "zimsoap-0.2.2-git-d246b5d.tar.gz", "has_sig": false, "md5_digest": "f6b4d7d2925edf3f9b1938cddfbb37e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12783, "upload_time": "2014-09-23T09:45:24", "upload_time_iso_8601": "2014-09-23T09:45:24.905801Z", "url": "https://files.pythonhosted.org/packages/c5/81/4bb58919b89945a2f236c7a84ef804ef8a7e2f6aeff3256fadab3d718735/zimsoap-0.2.2-git-d246b5d.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "db6225959e8d74f0b703b75d0dfaa056", "sha256": "4bc169a1d2dff180784d0aec59478dffdaf46739da5b66c70e22b3c1fd9eb13e"}, "downloads": -1, "filename": "zimsoap-0.2.3.tar.gz", "has_sig": false, "md5_digest": "db6225959e8d74f0b703b75d0dfaa056", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12840, "upload_time": "2014-10-15T14:57:41", "upload_time_iso_8601": "2014-10-15T14:57:41.041970Z", "url": "https://files.pythonhosted.org/packages/50/3c/7559b9a89dfe9979ce0916acd423d9e86bb4cb7f5cd8731ce2395829964e/zimsoap-0.2.3.tar.gz", "yanked": false}], "0.2.3-git-e7c7e1e": [{"comment_text": "", "digests": {"md5": "f4ee412ba00f13ac149b18feb6ab8227", "sha256": "9054741fa0410cae1994c57c54d1d8fcc93cdae0e2e626d46d95d33026b4e931"}, "downloads": -1, "filename": "zimsoap-0.2.3-git-e7c7e1e.tar.gz", "has_sig": false, "md5_digest": "f4ee412ba00f13ac149b18feb6ab8227", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13005, "upload_time": "2014-10-15T14:42:34", "upload_time_iso_8601": "2014-10-15T14:42:34.009200Z", "url": "https://files.pythonhosted.org/packages/b9/b0/cfc9b6cb30f0bc90840173c93022348475b53d05c7da0ea3c4fc2d8c39d2/zimsoap-0.2.3-git-e7c7e1e.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "20508c5df083f859bf20bc1445dc4afb", "sha256": "5002d6762c2d076347bf513e20687ad00a8ee0e768231f9f1c47a1b4f34c47e6"}, "downloads": -1, "filename": "zimsoap-0.2.4.tar.gz", "has_sig": false, "md5_digest": "20508c5df083f859bf20bc1445dc4afb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13004, "upload_time": "2014-10-22T10:19:01", "upload_time_iso_8601": "2014-10-22T10:19:01.422397Z", "url": "https://files.pythonhosted.org/packages/99/a2/b4638142da4c0169e0a02b40052bb0738e1bbb3031a1b80ac20c133f7258/zimsoap-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "02a8a2b82761a633a3d4d66f2803c457", "sha256": "72f21699a5cb9a078b182b01b001fe8e3fe7a2710141b42a7a604b716626145c"}, "downloads": -1, "filename": "zimsoap-0.2.5.tar.gz", "has_sig": false, "md5_digest": "02a8a2b82761a633a3d4d66f2803c457", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13421, "upload_time": "2014-10-24T10:01:28", "upload_time_iso_8601": "2014-10-24T10:01:28.941053Z", "url": "https://files.pythonhosted.org/packages/15/93/8da1bfd9bc42e1db3b898d394540c36ff66d527e2688f1c25da500b619ee/zimsoap-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "db8f9e983b297b338e0ae38b2903e783", "sha256": "26c0da32a2a76feabf5815d94459d1ef2e08d4b4a6aed40c5107ccab55c0ec1d"}, "downloads": -1, "filename": "zimsoap-0.2.6.tar.gz", "has_sig": false, "md5_digest": "db8f9e983b297b338e0ae38b2903e783", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13384, "upload_time": "2014-11-21T17:25:26", "upload_time_iso_8601": "2014-11-21T17:25:26.801657Z", "url": "https://files.pythonhosted.org/packages/bb/db/28da85ecd56c5eb1064a46e5648cf3166a57619c6db41957738e3b8f30f4/zimsoap-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "4340a90347ad620c217187ed4decc182", "sha256": "7aedc5d57e101718f6d0da9131893c1ea7f303d061a0b5e8be99c3b4ce0e0687"}, "downloads": -1, "filename": "zimsoap-0.2.7.tar.gz", "has_sig": false, "md5_digest": "4340a90347ad620c217187ed4decc182", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13593, "upload_time": "2015-01-08T14:35:22", "upload_time_iso_8601": "2015-01-08T14:35:22.516131Z", "url": "https://files.pythonhosted.org/packages/59/f9/53bd8a9c94151c3f5777681149bea02cf688357b74bef94127c40bb1385e/zimsoap-0.2.7.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "524b61ff37d27c07b94dfb1e002017b6", "sha256": "0473836ce43434f3f293566a2e6502be9f66711a12e0655361442b53b37e0194"}, "downloads": -1, "filename": "zimsoap-0.3.tar.gz", "has_sig": false, "md5_digest": "524b61ff37d27c07b94dfb1e002017b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13835, "upload_time": "2015-01-14T15:43:21", "upload_time_iso_8601": "2015-01-14T15:43:21.155069Z", "url": "https://files.pythonhosted.org/packages/5c/15/6c897a9980c1ca9c336d7efb59d33c4f0bb3bc3a9fc64a1cce5fe8f2314e/zimsoap-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "261734c6b7db6fa70b7cb1c487fea651", "sha256": "43d8834e312d4a75412cff591a7181709778d01e2fa3f45e67079bb562e6314c"}, "downloads": -1, "filename": "zimsoap-0.3.1.tar.gz", "has_sig": false, "md5_digest": "261734c6b7db6fa70b7cb1c487fea651", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13917, "upload_time": "2015-01-27T16:20:41", "upload_time_iso_8601": "2015-01-27T16:20:41.686183Z", "url": "https://files.pythonhosted.org/packages/98/a0/ba213b797b6a6d4c427eecbdabf986cbf4e350b8d310b8b1a7e20116f03b/zimsoap-0.3.1.tar.gz", "yanked": false}], "0.3.2": [], "0.3.3": [{"comment_text": "", "digests": {"md5": "28521e5b9e1be47100f63c19f2dff6e1", "sha256": "28fd600dc6b67f6638e884232de2b82b351526c981e08e0a03f93917f969c1d3"}, "downloads": -1, "filename": "zimsoap-0.3.3.tar.gz", "has_sig": false, "md5_digest": "28521e5b9e1be47100f63c19f2dff6e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13919, "upload_time": "2015-01-27T17:34:14", "upload_time_iso_8601": "2015-01-27T17:34:14.975586Z", "url": "https://files.pythonhosted.org/packages/b9/c3/73d173be727d756ff86b0019b6b0096a658e3c47b6fe52ea644472c5de64/zimsoap-0.3.3.tar.gz", "yanked": false}], "0.4": [], "0.4.1": [{"comment_text": "", "digests": {"md5": "e716ce5ce3d5e0e81fe948462f37b1a7", "sha256": "dc769cbf2f637695f7ff1870ba0bd51f2a7fa70b206d7dacde8c0e16928234b6"}, "downloads": -1, "filename": "zimsoap-0.4.1.tar.gz", "has_sig": false, "md5_digest": "e716ce5ce3d5e0e81fe948462f37b1a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15145, "upload_time": "2015-05-22T10:43:16", "upload_time_iso_8601": "2015-05-22T10:43:16.466892Z", "url": "https://files.pythonhosted.org/packages/67/1f/849de3ae44aefdc9b63770e4c854d0a778401ae53ef30a3edc1edfcd2a11/zimsoap-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "9555cd3f122f53a335a871d810f2cc47", "sha256": "7568cbe24786a3b03c66ba6af511390b6e51ffd71bc0223fcbfc6b173bea7e82"}, "downloads": -1, "filename": "zimsoap-0.4.2.tar.gz", "has_sig": false, "md5_digest": "9555cd3f122f53a335a871d810f2cc47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19761, "upload_time": "2016-02-19T09:11:47", "upload_time_iso_8601": "2016-02-19T09:11:47.204326Z", "url": "https://files.pythonhosted.org/packages/7c/23/510610217edf6b27fe17197835779cdca258b805571f78b91c6273a799fb/zimsoap-0.4.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9555cd3f122f53a335a871d810f2cc47", "sha256": "7568cbe24786a3b03c66ba6af511390b6e51ffd71bc0223fcbfc6b173bea7e82"}, "downloads": -1, "filename": "zimsoap-0.4.2.tar.gz", "has_sig": false, "md5_digest": "9555cd3f122f53a335a871d810f2cc47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19761, "upload_time": "2016-02-19T09:11:47", "upload_time_iso_8601": "2016-02-19T09:11:47.204326Z", "url": "https://files.pythonhosted.org/packages/7c/23/510610217edf6b27fe17197835779cdca258b805571f78b91c6273a799fb/zimsoap-0.4.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:13 2020"}