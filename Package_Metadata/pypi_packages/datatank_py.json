{"info": {"author": "Adam R. Maxwell", "author_email": "amaxwell@mac.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft", "Operating System :: POSIX", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=============\nWHAT IS THIS?\n=============\n\n**NOTE:** this Python module is for scientific visualization and analysis, \nand is not related to `The DataTank <http://github.com/tdt/>`_ in any way.\n\nThis is a Python module that allows you to read and write DataTank data files using\nPython. `DataTank <http://visualdatatools.com/DataTank/>`_ is a visualization and \nanalysis tool for Mac OS X. Although DataTank itself is proprietary (now free of\ncharge for students and postdocs), it includes open-source C++ libraries for most\nof the internal data structures, so you can easily create data files to be loaded\ninto it.\n\n--------------------\nWhen would I use it?\n--------------------\n\n* You're using DataTank for analysis, and need a quickie module (external program) \n  to transform some data. You could use the excellent C++ libraries, but sometimes \n  Xcode is more trouble than it's worth, especially since Apple turned it into iTunes for code.\n* You're already running numerical experiments in Python using numpy/scipy, and \n  want to easily view the results in DataTank.\n* Sometimes data isn't wrapped up nicely in a netCDF file, or you want to \n  create a smaller subset of a large dataset to analyze in DataTank.\n* You have an HDF-5 file, and need to use PyTables to extract the relevant parts.\n* You have some gruesome ASCII data format that a colleague invented while drunk, \n  and you need to parse it with Python because it has better string APIs than \n  certain popular commercial analysis packages.\n\nI use it to incorporate GIS data with 3D hydrodynamic model output for coastal flow\nand transport simulations. Being able to reproject images to/from Lat/Lon or Cartesian\ncoordinates using GDAL is a great asset. See the examples for ideas on how to do\nsome of this.\n\n-------------------------\nWhen should I not use it?\n-------------------------\n\n* Not all DataTank objects are fully supported in `datatank_py`, unlike the \n  C++ DTSource libraries (but they are usually easy to add).\n* The C++ libraries are highly optimized, and can be significantly \n  faster than using Python.\n* You need to use other libraries (C/C++/FORTRAN/etc), and equivalent \n  functions are not available in Python.\n\n=======\nINSTALL\n=======\n\nThe module can be installed using as usual, using::\n\n  sudo pip install datatank_py\n\nor::\n    \n  sudo easy_install datatank_py\n    \nin a terminal. \n\nIf you're modifying `datatank_py` and want Python to see the development\ncopy, you can use::\n\n  python setup.py develop\n    \nin your source directory to set up the path appropriately.\n\nSome of the test scripts assume that various symlinks exist in datatank_py/examples.\nThis is mainly so I can test on multiple systems without hardcoding absolute paths.\n\n============\nREQUIREMENTS\n============\n\n----------------\nOperating System\n----------------\n\nDTDataFile has been tested with Python 2.5, 2.6, and 2.7 on Mac OS X 10.5-10.9, and\nPython 2.5 on Red Hat Enterprise Linux 5 (64 bit).  Some of the examples may\nrequire Python 2.6 at minimum, or inclusion of::\n\n  from __future__ import with_statement\n\nbefore any other import statements for Python 2.5. It should still work with PowerPC,\nbut that hasn't been tested in years, and you're on your own.\n\n-----\nNumPy\n-----\n\nNumPy is a requirement, and I have no interest in working with Numeric or Numarray.\nYou can download `NumPy <http://numpy.scipy.org/>`_ or make do with Apple's lobotomized\nand ancient version as shipped with OS X.  If you do compile your own, I've found it\nnecessary to get rid of the OS-installed version, particularly since SciPy won't\ncompile with it installed.  To do this, I use the following Terminal commands on\nMac OS X 10.6. For later versions, you may not need to do this::\n\n  cd /System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python\n  sudo tar -czf numpy.apple.tgz numpy\n  rm -r numpy\n\nThis leaves you a backup of the system-installed NumPy, in case you ever want it.\nYou can also do this by adjusting paths in /Library/Python, which is probably a\nbetter way.\n\n----\nGDAL\n----\n\nSome of the examples require `GDAL <http://www.gdal.org/>`_ with Python bindings. \nI find this invaluable for getting geospatial data into DataTank, even though \nthe SWIG bindings seem like writing C++ using Python syntax.\n\nPIL\n---\n\nSome of the examples require `PIL <http://www.pythonware.com/products/pil/>`_, \nthe Python Imaging Library. If you don't have PIL installed, you should.\n\n=============\nDOCUMENTATION\n=============\n\nOnline help and examples: `<http://amaxwell.github.io/datatank_py/>`_\n\nDTDataFile is extensively documented in the source, so `help(DTDataFile)` in an\ninterpreter should get you started.  There are a bunch of private methods and\nfunctions that won't show up in pydoc, but they are documented so I don't forget\nwhat they're supposed to do.\n\n====\nBUGS\n====\n\nPlease email me at amaxwell AT mac DOT com with suggestions for improvement,\nor use the tracker at GitHub. For bug fixes, feel free to send a pull request,\nand I'll try and figure out how to use git enough to merge it in.\n\n=======\nLICENSE\n=======\n\nDTDataFile.py and associated scripts are released under the BSD license as follows:\n\nThis software is Copyright (c) 2010-2014\nAdam Maxwell. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n- Redistributions of source code must retain the above \n  copyright notice, this list of conditions and the following disclaimer.\n\n- Redistributions in binary form must reproduce the above copyright \n  notice, this list of conditions and the following disclaimer in \n  the documentation and/or other materials provided with the distribution.\n\n- Neither the name of Adam Maxwell nor the names of any contributors \n  may be used to endorse or promote products derived from this \n  software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", "description_content_type": null, "docs_url": null, "download_url": "http://github.com/amaxwell/datatank_py/tarball/0.71", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/amaxwell/datatank_py", "keywords": null, "license": "BSD New", "maintainer": null, "maintainer_email": null, "name": "datatank_py", "package_url": "https://pypi.org/project/datatank_py/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/datatank_py/", "project_urls": {"Download": "http://github.com/amaxwell/datatank_py/tarball/0.71", "Homepage": "http://github.com/amaxwell/datatank_py"}, "release_url": "https://pypi.org/project/datatank_py/0.71/", "requires_dist": null, "requires_python": null, "summary": "Module for reading and writing DataTank files", "version": "0.71", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-is-this\">\n<h2>WHAT IS THIS?</h2>\n<p><strong>NOTE:</strong> this Python module is for scientific visualization and analysis,\nand is not related to <a href=\"http://github.com/tdt/\" rel=\"nofollow\">The DataTank</a> in any way.</p>\n<p>This is a Python module that allows you to read and write DataTank data files using\nPython. <a href=\"http://visualdatatools.com/DataTank/\" rel=\"nofollow\">DataTank</a> is a visualization and\nanalysis tool for Mac OS X. Although DataTank itself is proprietary (now free of\ncharge for students and postdocs), it includes open-source C++ libraries for most\nof the internal data structures, so you can easily create data files to be loaded\ninto it.</p>\n<div id=\"when-would-i-use-it\">\n<h3>When would I use it?</h3>\n<ul>\n<li>You\u2019re using DataTank for analysis, and need a quickie module (external program)\nto transform some data. You could use the excellent C++ libraries, but sometimes\nXcode is more trouble than it\u2019s worth, especially since Apple turned it into iTunes for code.</li>\n<li>You\u2019re already running numerical experiments in Python using numpy/scipy, and\nwant to easily view the results in DataTank.</li>\n<li>Sometimes data isn\u2019t wrapped up nicely in a netCDF file, or you want to\ncreate a smaller subset of a large dataset to analyze in DataTank.</li>\n<li>You have an HDF-5 file, and need to use PyTables to extract the relevant parts.</li>\n<li>You have some gruesome ASCII data format that a colleague invented while drunk,\nand you need to parse it with Python because it has better string APIs than\ncertain popular commercial analysis packages.</li>\n</ul>\n<p>I use it to incorporate GIS data with 3D hydrodynamic model output for coastal flow\nand transport simulations. Being able to reproject images to/from Lat/Lon or Cartesian\ncoordinates using GDAL is a great asset. See the examples for ideas on how to do\nsome of this.</p>\n</div>\n<div id=\"when-should-i-not-use-it\">\n<h3>When should I not use it?</h3>\n<ul>\n<li>Not all DataTank objects are fully supported in <cite>datatank_py</cite>, unlike the\nC++ DTSource libraries (but they are usually easy to add).</li>\n<li>The C++ libraries are highly optimized, and can be significantly\nfaster than using Python.</li>\n<li>You need to use other libraries (C/C++/FORTRAN/etc), and equivalent\nfunctions are not available in Python.</li>\n</ul>\n</div>\n</div>\n<div id=\"install\">\n<h2>INSTALL</h2>\n<p>The module can be installed using as usual, using:</p>\n<pre>sudo pip install datatank_py\n</pre>\n<p>or:</p>\n<pre>sudo easy_install datatank_py\n</pre>\n<p>in a terminal.</p>\n<p>If you\u2019re modifying <cite>datatank_py</cite> and want Python to see the development\ncopy, you can use:</p>\n<pre>python setup.py develop\n</pre>\n<p>in your source directory to set up the path appropriately.</p>\n<p>Some of the test scripts assume that various symlinks exist in datatank_py/examples.\nThis is mainly so I can test on multiple systems without hardcoding absolute paths.</p>\n</div>\n<div id=\"requirements\">\n<h2>REQUIREMENTS</h2>\n<div id=\"operating-system\">\n<h3>Operating System</h3>\n<p>DTDataFile has been tested with Python 2.5, 2.6, and 2.7 on Mac OS X 10.5-10.9, and\nPython 2.5 on Red Hat Enterprise Linux 5 (64 bit).  Some of the examples may\nrequire Python 2.6 at minimum, or inclusion of:</p>\n<pre>from __future__ import with_statement\n</pre>\n<p>before any other import statements for Python 2.5. It should still work with PowerPC,\nbut that hasn\u2019t been tested in years, and you\u2019re on your own.</p>\n</div>\n<div id=\"numpy\">\n<h3>NumPy</h3>\n<p>NumPy is a requirement, and I have no interest in working with Numeric or Numarray.\nYou can download <a href=\"http://numpy.scipy.org/\" rel=\"nofollow\">NumPy</a> or make do with Apple\u2019s lobotomized\nand ancient version as shipped with OS X.  If you do compile your own, I\u2019ve found it\nnecessary to get rid of the OS-installed version, particularly since SciPy won\u2019t\ncompile with it installed.  To do this, I use the following Terminal commands on\nMac OS X 10.6. For later versions, you may not need to do this:</p>\n<pre>cd /System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python\nsudo tar -czf numpy.apple.tgz numpy\nrm -r numpy\n</pre>\n<p>This leaves you a backup of the system-installed NumPy, in case you ever want it.\nYou can also do this by adjusting paths in /Library/Python, which is probably a\nbetter way.</p>\n</div>\n<div id=\"gdal\">\n<h3>GDAL</h3>\n<p>Some of the examples require <a href=\"http://www.gdal.org/\" rel=\"nofollow\">GDAL</a> with Python bindings.\nI find this invaluable for getting geospatial data into DataTank, even though\nthe SWIG bindings seem like writing C++ using Python syntax.</p>\n<div id=\"pil\">\n<h4>PIL</h4>\n<p>Some of the examples require <a href=\"http://www.pythonware.com/products/pil/\" rel=\"nofollow\">PIL</a>,\nthe Python Imaging Library. If you don\u2019t have PIL installed, you should.</p>\n</div>\n</div>\n</div>\n<div id=\"documentation\">\n<h2>DOCUMENTATION</h2>\n<p>Online help and examples: <a href=\"http://amaxwell.github.io/datatank_py/\" rel=\"nofollow\">http://amaxwell.github.io/datatank_py/</a></p>\n<p>DTDataFile is extensively documented in the source, so <cite>help(DTDataFile)</cite> in an\ninterpreter should get you started.  There are a bunch of private methods and\nfunctions that won\u2019t show up in pydoc, but they are documented so I don\u2019t forget\nwhat they\u2019re supposed to do.</p>\n</div>\n<div id=\"bugs\">\n<h2>BUGS</h2>\n<p>Please email me at amaxwell AT mac DOT com with suggestions for improvement,\nor use the tracker at GitHub. For bug fixes, feel free to send a pull request,\nand I\u2019ll try and figure out how to use git enough to merge it in.</p>\n</div>\n<div id=\"license\">\n<h2>LICENSE</h2>\n<p>DTDataFile.py and associated scripts are released under the BSD license as follows:</p>\n<p>This software is Copyright (c) 2010-2014\nAdam Maxwell. All rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:</p>\n<ul>\n<li>Redistributions of source code must retain the above\ncopyright notice, this list of conditions and the following disclaimer.</li>\n<li>Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in\nthe documentation and/or other materials provided with the distribution.</li>\n<li>Neither the name of Adam Maxwell nor the names of any contributors\nmay be used to endorse or promote products derived from this\nsoftware without specific prior written permission.</li>\n</ul>\n<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\u201cAS IS\u201d AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div>\n\n          </div>"}, "last_serial": 1160183, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "15051a6fed87653130f6ff5b3b70988d", "sha256": "f5125e331949a02f4df0d32816874804b680578a506a17bbba9ca98581a0ba38"}, "downloads": -1, "filename": "datatank_py-0.4.tar.gz", "has_sig": false, "md5_digest": "15051a6fed87653130f6ff5b3b70988d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38920, "upload_time": "2014-03-12T05:13:50", "upload_time_iso_8601": "2014-03-12T05:13:50.981575Z", "url": "https://files.pythonhosted.org/packages/d9/7a/c469b59eed68cda9ad53aab6d9b8ca433adbbfa9b2e9c769d15ac5f25fd5/datatank_py-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "80ea76b70bcf310d07e981a4c2a2b598", "sha256": "37db62d040422f22af9d3b7a6f2459d4706f695c5c2c10d106876712cc745452"}, "downloads": -1, "filename": "datatank_py-0.5.tar.gz", "has_sig": false, "md5_digest": "80ea76b70bcf310d07e981a4c2a2b598", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41832, "upload_time": "2014-03-18T06:34:18", "upload_time_iso_8601": "2014-03-18T06:34:18.485590Z", "url": "https://files.pythonhosted.org/packages/29/c0/479ddee1980912eb54f156d9a652c90397da3c97ae7f5ef432ca914a4758/datatank_py-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "298216aa6cf0920dcca1684c210fdc1b", "sha256": "dc533ee813bbcc6580e6dd4830f3fe4b19ee4ce94740129eef66c0d28db45756"}, "downloads": -1, "filename": "datatank_py-0.6.tar.gz", "has_sig": false, "md5_digest": "298216aa6cf0920dcca1684c210fdc1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45513, "upload_time": "2014-03-18T16:04:44", "upload_time_iso_8601": "2014-03-18T16:04:44.754547Z", "url": "https://files.pythonhosted.org/packages/3b/1c/f31129125df18b2116898057298f95d08c0c91be6582c182bf3845fa1d9f/datatank_py-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "17507c25517bfc9a34c68e2bdddf7191", "sha256": "65d530cb04098a655572df31f339271d5d66128f0afde1f1e8b3f65e1c0adbe0"}, "downloads": -1, "filename": "datatank_py-0.7.tar.gz", "has_sig": false, "md5_digest": "17507c25517bfc9a34c68e2bdddf7191", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47927, "upload_time": "2014-07-12T02:52:09", "upload_time_iso_8601": "2014-07-12T02:52:09.883405Z", "url": "https://files.pythonhosted.org/packages/4a/bc/8fabbf98a094786be919b18d634aea38a74abfa31bf89fca7b7acb449e84/datatank_py-0.7.tar.gz", "yanked": false}], "0.71": [{"comment_text": "", "digests": {"md5": "26ad40e8d6519ce24f7978f4cfb049c2", "sha256": "6161580ca7e1fc137109ecc6f5acbcde3f5afc586e23b5c5727efffc538f2db4"}, "downloads": -1, "filename": "datatank_py-0.71.tar.gz", "has_sig": false, "md5_digest": "26ad40e8d6519ce24f7978f4cfb049c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48469, "upload_time": "2014-07-16T22:19:15", "upload_time_iso_8601": "2014-07-16T22:19:15.857603Z", "url": "https://files.pythonhosted.org/packages/4d/f6/81302306e69561b98d95d6ac974bda86c974168356851e3f39603709b2ad/datatank_py-0.71.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "26ad40e8d6519ce24f7978f4cfb049c2", "sha256": "6161580ca7e1fc137109ecc6f5acbcde3f5afc586e23b5c5727efffc538f2db4"}, "downloads": -1, "filename": "datatank_py-0.71.tar.gz", "has_sig": false, "md5_digest": "26ad40e8d6519ce24f7978f4cfb049c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48469, "upload_time": "2014-07-16T22:19:15", "upload_time_iso_8601": "2014-07-16T22:19:15.857603Z", "url": "https://files.pythonhosted.org/packages/4d/f6/81302306e69561b98d95d6ac974bda86c974168356851e3f39603709b2ad/datatank_py-0.71.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:08 2020"}