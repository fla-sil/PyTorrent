{"info": {"author": "Shreyansh Khajanchi", "author_email": "hello@shreyanshja.in", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Flask-Firehose\n==============\n\nHTTP/2 Server Push for your Flask apps.\n\n\nInstallation\n------------\n\n.. code-block:: python\n\n    pip install flask-firehose\n\n\nUsage\n-----\nInitialization\n~~~~~~~~~~~~~~\n\nDirect initialization:\n\n.. code-block:: python\n\n    app = Flask(__name__)\n    Firehose(app)\n\nWith application factories:\n\n.. code-block:: python\n\n    firehose = Firehose()\n\n    def create_app():\n        app = Flask(__name__)\n        firehose.init_app(app)\n        return app\n\n\nPushing resources\n~~~~~~~~~~~~~~~~~\n\nLet the HTML template writer decide what to push:\n\n.. code-block:: jinja\n\n    {% extends 'base.html' %}\n    {% block body %}\n        <link rel=\"stylesheet\" href=\"{{ push('/static/css/main.css', as='style', rel='preload') }}\">\n        This is some document.\n    {% endblock %}\n\n\nLet the backend developer decide what to push:\n\n.. code-block:: python\n\n    from flask_firehose import push\n\n    @app.route('/someroute')\n    def render_someroute():\n        push('/static/css/main.css', **{'as': 'style', 'rel': 'preload'})\n        return render_template('some_template')\n\n\nTracking pushed resources\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIdeally, resources already pushed during a session shouldn't be pushed again. So, Flask-Firehose includes a simple utility class to track pushed resources using session variable 'h2-pushed'.\nAdditionally, Flask-Firehose can also work with external code to track pushed resources in case the provided implementation is unsuitable.\n\n.. code-block:: python\n\n    class Custom_connector():\n\n        def get_pushed(self):\n            \"\"\"Returns a set of items that have been already pushed to client.\n\n            Returns\n            -------\n            set\n                Set of items that are pushed.\n\n            \"\"\"\n            # your code here\n\n        def set_pushed(self, inset):\n            \"\"\"Update client state after pushing more items at the end of request.\n\n            Parameters\n            ----------\n            inset : set\n                A set of URLs of pushed items.\n            \"\"\"\n            # your code here\n\n\nUsing custom connector with Firehose\n\n.. code-block:: python\n\n    firehose = Firehose(connector=Custom_connector())\n    firehose.init_app(app)\n\n\nConfigure NGINX\n---------------\n\n.. code-block:: nginx\n\n    location = /myapp {\n        proxy_pass http://upstream;\n        http2_push_preload on;\n    }\n\n\nRead more at: https://www.nginx.com/blog/nginx-1-13-9-http2-server-push/\n\n\nTesting\n-------\n\nTo initialize a development environment in ./venv:\n\n.. code-block:: bash\n\n    make devenv\n\nTo run unit tests:\n\n.. code-block:: bash\n\n    make test\n\nTo run integration testing with NGINX with docker:\n\n.. code-block:: bash\n\n    make dockertest\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shreyanshk/flask-firehose", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Flask-Firehose", "package_url": "https://pypi.org/project/Flask-Firehose/", "platform": "any", "project_url": "https://pypi.org/project/Flask-Firehose/", "project_urls": {"Homepage": "https://github.com/shreyanshk/flask-firehose"}, "release_url": "https://pypi.org/project/Flask-Firehose/0.2.3/", "requires_dist": ["Flask (>=0.10)"], "requires_python": "", "summary": "HTTP/2 Server Push for your Flask apps.", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>HTTP/2 Server Push for your Flask apps.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">flask</span><span class=\"o\">-</span><span class=\"n\">firehose</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"initialization\">\n<h3>Initialization</h3>\n<p>Direct initialization:</p>\n<pre><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">Firehose</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n<p>With application factories:</p>\n<pre><span class=\"n\">firehose</span> <span class=\"o\">=</span> <span class=\"n\">Firehose</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_app</span><span class=\"p\">():</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n    <span class=\"n\">firehose</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">app</span>\n</pre>\n</div>\n<div id=\"pushing-resources\">\n<h3>Pushing resources</h3>\n<p>Let the HTML template writer decide what to push:</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">extends</span> <span class=\"s1\">'base.html'</span> <span class=\"cp\">%}</span><span class=\"x\">\n</span><span class=\"cp\">{%</span> <span class=\"k\">block</span> <span class=\"nv\">body</span> <span class=\"cp\">%}</span><span class=\"x\">\n    &lt;link rel=\"stylesheet\" href=\"</span><span class=\"cp\">{{</span> <span class=\"nv\">push</span><span class=\"o\">(</span><span class=\"s1\">'/static/css/main.css'</span><span class=\"o\">,</span> <span class=\"k\">as</span><span class=\"o\">=</span><span class=\"s1\">'style'</span><span class=\"o\">,</span> <span class=\"nv\">rel</span><span class=\"o\">=</span><span class=\"s1\">'preload'</span><span class=\"o\">)</span> <span class=\"cp\">}}</span><span class=\"x\">\"&gt;\n    This is some document.\n</span><span class=\"cp\">{%</span> <span class=\"k\">endblock</span> <span class=\"cp\">%}</span>\n</pre>\n<p>Let the backend developer decide what to push:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask_firehose</span> <span class=\"kn\">import</span> <span class=\"n\">push</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/someroute'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">render_someroute</span><span class=\"p\">():</span>\n    <span class=\"n\">push</span><span class=\"p\">(</span><span class=\"s1\">'/static/css/main.css'</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"p\">{</span><span class=\"s1\">'as'</span><span class=\"p\">:</span> <span class=\"s1\">'style'</span><span class=\"p\">,</span> <span class=\"s1\">'rel'</span><span class=\"p\">:</span> <span class=\"s1\">'preload'</span><span class=\"p\">})</span>\n    <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s1\">'some_template'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"tracking-pushed-resources\">\n<h3>Tracking pushed resources</h3>\n<p>Ideally, resources already pushed during a session shouldn\u2019t be pushed again. So, Flask-Firehose includes a simple utility class to track pushed resources using session variable \u2018h2-pushed\u2019.\nAdditionally, Flask-Firehose can also work with external code to track pushed resources in case the provided implementation is unsuitable.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Custom_connector</span><span class=\"p\">():</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_pushed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Returns a set of items that have been already pushed to client.\n\n        Returns\n        -------\n        set\n            Set of items that are pushed.\n\n        \"\"\"</span>\n        <span class=\"c1\"># your code here</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">set_pushed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inset</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Update client state after pushing more items at the end of request.\n\n        Parameters\n        ----------\n        inset : set\n            A set of URLs of pushed items.\n        \"\"\"</span>\n        <span class=\"c1\"># your code here</span>\n</pre>\n<p>Using custom connector with Firehose</p>\n<pre><span class=\"n\">firehose</span> <span class=\"o\">=</span> <span class=\"n\">Firehose</span><span class=\"p\">(</span><span class=\"n\">connector</span><span class=\"o\">=</span><span class=\"n\">Custom_connector</span><span class=\"p\">())</span>\n<span class=\"n\">firehose</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"configure-nginx\">\n<h2>Configure NGINX</h2>\n<pre><span class=\"k\">location</span> <span class=\"p\">=</span> <span class=\"s\">/myapp</span> <span class=\"p\">{</span>\n    <span class=\"kn\">proxy_pass</span> <span class=\"s\">http://upstream</span><span class=\"p\">;</span>\n    <span class=\"kn\">http2_push_preload</span> <span class=\"no\">on</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Read more at: <a href=\"https://www.nginx.com/blog/nginx-1-13-9-http2-server-push/\" rel=\"nofollow\">https://www.nginx.com/blog/nginx-1-13-9-http2-server-push/</a></p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>To initialize a development environment in ./venv:</p>\n<pre>make devenv\n</pre>\n<p>To run unit tests:</p>\n<pre>make <span class=\"nb\">test</span>\n</pre>\n<p>To run integration testing with NGINX with docker:</p>\n<pre>make dockertest\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7001060, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "e8c0c812eebc50ce53815843882267db", "sha256": "8d05bf80e7d4fe2eed806823072ac6d5f8ea61722c6e9ad9d3ede7c93c88b2bd"}, "downloads": -1, "filename": "Flask_Firehose-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e8c0c812eebc50ce53815843882267db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3367, "upload_time": "2018-03-08T17:09:47", "upload_time_iso_8601": "2018-03-08T17:09:47.432054Z", "url": "https://files.pythonhosted.org/packages/52/37/89c4b21c1005a9bff10d9f79cb6be5a3268890a439e1084fa6efa50db4a3/Flask_Firehose-0.2.1-py3-none-any.whl", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "08efebc134b4e418c62b96f61f4f3b6a", "sha256": "09c1d3870962212c4f8228242cac8ce3b6237e2aaf1e61331ad753f2cb049c5f"}, "downloads": -1, "filename": "Flask_Firehose-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "08efebc134b4e418c62b96f61f4f3b6a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4144, "upload_time": "2019-01-31T18:23:39", "upload_time_iso_8601": "2019-01-31T18:23:39.577653Z", "url": "https://files.pythonhosted.org/packages/ee/05/e74b5020e25c19e6cbe8c04f7e910977d953172c6e8fe2f608b6b2eeb062/Flask_Firehose-0.2.2-py2.py3-none-any.whl", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "eeaadd4c518ff6d893be910c416e5787", "sha256": "78303033ca873753b4fdb4920d0c16a9f396f2d4a905aefebe34bfe19c35cde2"}, "downloads": -1, "filename": "Flask_Firehose-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "eeaadd4c518ff6d893be910c416e5787", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4160, "upload_time": "2020-04-11T18:36:03", "upload_time_iso_8601": "2020-04-11T18:36:03.263829Z", "url": "https://files.pythonhosted.org/packages/80/06/f8f540998ef7bc85b0645732ce2b4eca155d3bbe02a80e8c1386e6731530/Flask_Firehose-0.2.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eeaadd4c518ff6d893be910c416e5787", "sha256": "78303033ca873753b4fdb4920d0c16a9f396f2d4a905aefebe34bfe19c35cde2"}, "downloads": -1, "filename": "Flask_Firehose-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "eeaadd4c518ff6d893be910c416e5787", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4160, "upload_time": "2020-04-11T18:36:03", "upload_time_iso_8601": "2020-04-11T18:36:03.263829Z", "url": "https://files.pythonhosted.org/packages/80/06/f8f540998ef7bc85b0645732ce2b4eca155d3bbe02a80e8c1386e6731530/Flask_Firehose-0.2.3-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 01:02:51 2020"}