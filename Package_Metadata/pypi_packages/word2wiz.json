{"info": {"author": "Jose Ramon Cano", "author_email": "jose.cano@theconsultancyfirm.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Utilities"], "description": "# Word2Wiz\n\nCommand line tool and web application to convert Word documents to Document\nWizard configurations.\n\n### Requirements\n\nFor the command line tool:\n\n- python3\n- pip\n- spell\n\nTo create a server:\n\n- vagrant\n\nTo use the converter from the command line you can install the necessary\ndependencies with pip:\n\n```\npip install -r requirements.txt\n```\n\nTo create a server you can run a virtual machine with vagrant (vagrant and\nvirtualbox are needed):\n\n```\nvagrant up\nvagrant provision\n```\n\nThis will download the OS and install dependencies inside that virtual machine.\n\nIf you don't want to create a virtual machine, you can also just use the _very\nlimited_ flask server, runing\n\n```\npython3 server.py\n```\n\n### How to run it\n\nTo run the converter form the \n\n### How it works\n\nThis tool parses an input docx document, looking for text between the marks `\u00ab`\nand `\u00bb`. Then, it generates a Spell file, generating questions based on those\nmatches. Finally, the spell file is compiled ang an XML is generated with the\nWizard Configuration.\n\nIn the case of the web interface, the output will be a zip file containing the\nwizard configuration XML, the intermediate Spell and a TXT with the link\nbetween the questions and the metadatas.\n\n### TODO:\n\n- [ ] Remove the zip files after the session is closed.\n- [ ] Handle colisions in the uploaded files. Two files can have the same name.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/joserc87/word2wiz", "keywords": "word2wiz document-wizard docwiz spell", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "word2wiz", "package_url": "https://pypi.org/project/word2wiz/", "platform": "", "project_url": "https://pypi.org/project/word2wiz/", "project_urls": {"Homepage": "http://github.com/joserc87/word2wiz"}, "release_url": "https://pypi.org/project/word2wiz/0.3.1/", "requires_dist": ["Flask", "Jinja2", "python-docx", "behave; extra == 'test'"], "requires_python": "", "summary": "A tool to create wizard configurations from MS word documents", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Word2Wiz<br><br>Command line tool and web application to convert Word documents to Document<br>Wizard configurations.<br><br>### Requirements<br><br>For the command line tool:<br><br>- python3<br>- pip<br>- spell<br><br>To create a server:<br><br>- vagrant<br><br>To use the converter from the command line you can install the necessary<br>dependencies with pip:<br><br>```<br>pip install -r requirements.txt<br>```<br><br>To create a server you can run a virtual machine with vagrant (vagrant and<br>virtualbox are needed):<br><br>```<br>vagrant up<br>vagrant provision<br>```<br><br>This will download the OS and install dependencies inside that virtual machine.<br><br>If you don't want to create a virtual machine, you can also just use the _very<br>limited_ flask server, runing<br><br>```<br>python3 server.py<br>```<br><br>### How to run it<br><br>To run the converter form the <br><br>### How it works<br><br>This tool parses an input docx document, looking for text between the marks `\u00ab`<br>and `\u00bb`. Then, it generates a Spell file, generating questions based on those<br>matches. Finally, the spell file is compiled ang an XML is generated with the<br>Wizard Configuration.<br><br>In the case of the web interface, the output will be a zip file containing the<br>wizard configuration XML, the intermediate Spell and a TXT with the link<br>between the questions and the metadatas.<br><br>### TODO:<br><br>- [ ] Remove the zip files after the session is closed.<br>- [ ] Handle colisions in the uploaded files. Two files can have the same name.<br><br><br>\n          </div>"}, "last_serial": 2847028, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "4e8921517ebee64b6db1d33a3c1762ab", "sha256": "8760868833c40d81c812f364ab71d045e188098b618e48830de9de1bed8b8cb8"}, "downloads": -1, "filename": "word2wiz-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4e8921517ebee64b6db1d33a3c1762ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13604, "upload_time": "2017-05-02T11:03:18", "upload_time_iso_8601": "2017-05-02T11:03:18.293612Z", "url": "https://files.pythonhosted.org/packages/04/73/9565ca767dfc85bb818c1c5cb82390e746e870b3af612c8615c01ff32149/word2wiz-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "572a1c73624bc53622a3cdcc926cb1db", "sha256": "4c53d147fc62d1788efe6f2b5908262b4a1ed87fbdfc76f6be92080598643368"}, "downloads": -1, "filename": "word2wiz-0.3.0.tar.gz", "has_sig": false, "md5_digest": "572a1c73624bc53622a3cdcc926cb1db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9759, "upload_time": "2017-05-02T11:03:34", "upload_time_iso_8601": "2017-05-02T11:03:34.386146Z", "url": "https://files.pythonhosted.org/packages/dc/2b/4a3c8d4e313df4828918793d60db41c250f9f35d6cebd90b8bb4c980bc1e/word2wiz-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "df40d20332bf50104fb7d244934e6c4d", "sha256": "c975056c6bff8f111e48a406ddda2ca5b034d1f5fd585b6d48dca314e4fdcc69"}, "downloads": -1, "filename": "word2wiz-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "df40d20332bf50104fb7d244934e6c4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13809, "upload_time": "2017-05-02T17:26:14", "upload_time_iso_8601": "2017-05-02T17:26:14.739607Z", "url": "https://files.pythonhosted.org/packages/de/ee/d5d7b359d55d37f3cba9f9044dcc45754453dce5df9c5db702bf6df58572/word2wiz-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83695cc44e3025edae2caea800ea5155", "sha256": "b59f25367db767cb58b8d9a895be1c46135db0a63d91e257c81ebdd3386d5f21"}, "downloads": -1, "filename": "word2wiz-0.3.1.tar.gz", "has_sig": false, "md5_digest": "83695cc44e3025edae2caea800ea5155", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9865, "upload_time": "2017-05-02T17:26:15", "upload_time_iso_8601": "2017-05-02T17:26:15.981224Z", "url": "https://files.pythonhosted.org/packages/21/42/77be16554347d7f3ffe8b8d3daf807a1eab5dd4af8c9236555b041a2ed30/word2wiz-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "df40d20332bf50104fb7d244934e6c4d", "sha256": "c975056c6bff8f111e48a406ddda2ca5b034d1f5fd585b6d48dca314e4fdcc69"}, "downloads": -1, "filename": "word2wiz-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "df40d20332bf50104fb7d244934e6c4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13809, "upload_time": "2017-05-02T17:26:14", "upload_time_iso_8601": "2017-05-02T17:26:14.739607Z", "url": "https://files.pythonhosted.org/packages/de/ee/d5d7b359d55d37f3cba9f9044dcc45754453dce5df9c5db702bf6df58572/word2wiz-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83695cc44e3025edae2caea800ea5155", "sha256": "b59f25367db767cb58b8d9a895be1c46135db0a63d91e257c81ebdd3386d5f21"}, "downloads": -1, "filename": "word2wiz-0.3.1.tar.gz", "has_sig": false, "md5_digest": "83695cc44e3025edae2caea800ea5155", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9865, "upload_time": "2017-05-02T17:26:15", "upload_time_iso_8601": "2017-05-02T17:26:15.981224Z", "url": "https://files.pythonhosted.org/packages/21/42/77be16554347d7f3ffe8b8d3daf807a1eab5dd4af8c9236555b041a2ed30/word2wiz-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:06 2020"}