{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Multimedia :: Sound/Audio"], "description": "# Lyon's auditory model for Python\nPython port of Lyon's model calculation from Auditory Toolbox.\nOriginal version of Auditory Toolbox is written in C and MATLAB by Malcolm Slaney.\n\n## Package contents\n* Modified `soscascade.c`, `agc.c` and `sosfilters.c` (removed MEX-related part).\n* `ctypes` wrapper for `soscascade()`, `agc()` and `sosfilters()` calls.\n* Translation from MATLAB to Python for files necessary for successfull call to `LyonPassiveEar()`.\n\n## Dependecies\nIf you plan to build manually and run tests, you'll need `libcheck` installed.\nOn Ubuntu 18.10 run:\n\n``` bash\nsudo apt-get install check\n```\n\n## Installation\n### Manual\nBuild a library:\n\n``` bash\nmake lib\n```\n\nThis would result in `liblyon.so` shared library. Verify that library is properly built by running a test suite:\n\n``` bash\nmake test\n```\n\n## Usage\nThe following code computes cochleogram for a sample sound:\n\n``` python\nfrom lyon import LyonCalc\n\ncalc = LyonCalc()\nwaveform, sample_rate = load('audio/file/path.wav')\ndecimation_factor = 64\ncoch = calc.lyon_passive_ear(waveform, sample_rate, decimation_factor)\nprint(coch.shape)\n```\n\nThe code above should output shape of resulting auditory nerve response: `[<number of samples / decimation_factor>, 86]`.\n\nSee `lyon_examples.py` for examples on running other functions.\n\n## Links\n* [AuditoryToolbox page](https://engineering.purdue.edu/~malcolm/interval/1998-010/)\n* [Report describing function in toolbox](https://engineering.purdue.edu/~malcolm/interval/1998-010/AuditoryToolboxTechReport.pdf)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sciforce/lyon", "keywords": "", "license": "Apache License 2.0", "maintainer": "Dmytro Tkanov", "maintainer_email": "dtkanov@sciforce.solutions", "name": "lyon", "package_url": "https://pypi.org/project/lyon/", "platform": "", "project_url": "https://pypi.org/project/lyon/", "project_urls": {"Homepage": "https://github.com/sciforce/lyon"}, "release_url": "https://pypi.org/project/lyon/1.0.0/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Python port of Lyon's model from AuditoryToolbox", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Lyon's auditory model for Python</h1>\n<p>Python port of Lyon's model calculation from Auditory Toolbox.\nOriginal version of Auditory Toolbox is written in C and MATLAB by Malcolm Slaney.</p>\n<h2>Package contents</h2>\n<ul>\n<li>Modified <code>soscascade.c</code>, <code>agc.c</code> and <code>sosfilters.c</code> (removed MEX-related part).</li>\n<li><code>ctypes</code> wrapper for <code>soscascade()</code>, <code>agc()</code> and <code>sosfilters()</code> calls.</li>\n<li>Translation from MATLAB to Python for files necessary for successfull call to <code>LyonPassiveEar()</code>.</li>\n</ul>\n<h2>Dependecies</h2>\n<p>If you plan to build manually and run tests, you'll need <code>libcheck</code> installed.\nOn Ubuntu 18.10 run:</p>\n<pre>sudo apt-get install check\n</pre>\n<h2>Installation</h2>\n<h3>Manual</h3>\n<p>Build a library:</p>\n<pre>make lib\n</pre>\n<p>This would result in <code>liblyon.so</code> shared library. Verify that library is properly built by running a test suite:</p>\n<pre>make <span class=\"nb\">test</span>\n</pre>\n<h2>Usage</h2>\n<p>The following code computes cochleogram for a sample sound:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lyon</span> <span class=\"kn\">import</span> <span class=\"n\">LyonCalc</span>\n\n<span class=\"n\">calc</span> <span class=\"o\">=</span> <span class=\"n\">LyonCalc</span><span class=\"p\">()</span>\n<span class=\"n\">waveform</span><span class=\"p\">,</span> <span class=\"n\">sample_rate</span> <span class=\"o\">=</span> <span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'audio/file/path.wav'</span><span class=\"p\">)</span>\n<span class=\"n\">decimation_factor</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>\n<span class=\"n\">coch</span> <span class=\"o\">=</span> <span class=\"n\">calc</span><span class=\"o\">.</span><span class=\"n\">lyon_passive_ear</span><span class=\"p\">(</span><span class=\"n\">waveform</span><span class=\"p\">,</span> <span class=\"n\">sample_rate</span><span class=\"p\">,</span> <span class=\"n\">decimation_factor</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">coch</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n</pre>\n<p>The code above should output shape of resulting auditory nerve response: <code>[&lt;number of samples / decimation_factor&gt;, 86]</code>.</p>\n<p>See <code>lyon_examples.py</code> for examples on running other functions.</p>\n<h2>Links</h2>\n<ul>\n<li><a href=\"https://engineering.purdue.edu/%7Emalcolm/interval/1998-010/\" rel=\"nofollow\">AuditoryToolbox page</a></li>\n<li><a href=\"https://engineering.purdue.edu/%7Emalcolm/interval/1998-010/AuditoryToolboxTechReport.pdf\" rel=\"nofollow\">Report describing function in toolbox</a></li>\n</ul>\n\n          </div>"}, "last_serial": 4806268, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0a7a9f4b9581a176976588d83c67dac6", "sha256": "6333a2c53fb4c4053b7d95003f60fe1fa7667c9a34a823a7194682fc5bd504f4"}, "downloads": -1, "filename": "lyon-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0a7a9f4b9581a176976588d83c67dac6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12868, "upload_time": "2019-02-11T14:17:48", "upload_time_iso_8601": "2019-02-11T14:17:48.687329Z", "url": "https://files.pythonhosted.org/packages/fb/35/5874a84caaf5aa76a948040e3750aa01f85a7f292df415d0b8d1e3913adb/lyon-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "61b7af58f36d12a5082cd0123fe97ae5", "sha256": "eb5cfcd9f1c55d816446101efccb0195c2c5afb97ffb3f2b88c8a4962d4f483f"}, "downloads": -1, "filename": "lyon-1.0.0.tar.gz", "has_sig": false, "md5_digest": "61b7af58f36d12a5082cd0123fe97ae5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9282, "upload_time": "2019-02-11T14:17:51", "upload_time_iso_8601": "2019-02-11T14:17:51.111334Z", "url": "https://files.pythonhosted.org/packages/3d/a4/91e2a3e1faf44c9abbcd56b55e9888e5db33d138edc763e1ac6f1b04523a/lyon-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a7a9f4b9581a176976588d83c67dac6", "sha256": "6333a2c53fb4c4053b7d95003f60fe1fa7667c9a34a823a7194682fc5bd504f4"}, "downloads": -1, "filename": "lyon-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0a7a9f4b9581a176976588d83c67dac6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12868, "upload_time": "2019-02-11T14:17:48", "upload_time_iso_8601": "2019-02-11T14:17:48.687329Z", "url": "https://files.pythonhosted.org/packages/fb/35/5874a84caaf5aa76a948040e3750aa01f85a7f292df415d0b8d1e3913adb/lyon-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "61b7af58f36d12a5082cd0123fe97ae5", "sha256": "eb5cfcd9f1c55d816446101efccb0195c2c5afb97ffb3f2b88c8a4962d4f483f"}, "downloads": -1, "filename": "lyon-1.0.0.tar.gz", "has_sig": false, "md5_digest": "61b7af58f36d12a5082cd0123fe97ae5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9282, "upload_time": "2019-02-11T14:17:51", "upload_time_iso_8601": "2019-02-11T14:17:51.111334Z", "url": "https://files.pythonhosted.org/packages/3d/a4/91e2a3e1faf44c9abbcd56b55e9888e5db33d138edc763e1ac6f1b04523a/lyon-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:44 2020"}