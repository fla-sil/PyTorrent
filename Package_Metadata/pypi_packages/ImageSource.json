{"info": {"author": "Mat\u011bj \u0160m\u00edd", "author_email": "m@matejsmid.cz", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Image Recognition"], "description": "Image Sequence Abstraction for Python\n=====================================\n\nVideo data can appear in different forms: bunch of files, a video file,\na network stream etc. We provide an abstraction for ordered image\nsources that serve as an isolation from a specific source type.\n\nThe interface is simple:\n\n.. code:: python\n\n    import imagesource\n\n    images = imagesource.VideoSource('tests/data/MOV02522.MPG')\n    img100 = images.get_image(100)\n    img101 = images.get_next_image()\n    images.rewind()\n    img000 = images.get_next_image()\n    images.write_images('out/%03d.png', 100)\n\n    images2 = imagesource.FilesSource('tests/data/frames/%03d.jpg')\n    # same interface as above ...\n\nThe basic sources are ``VideoSource`` and ``FilesSource`` for video\nfiles and sequences of image files respectively. The\n``TimedVideoSource`` extracts frame timestamps from video files. The\n``SynchronizedSource`` translates frame numbers using a table. This can\nbe used for creating a synchronized set of sources.\n\nFor more examples see ``tests/test.py``\n\nInstallation\n------------\n\nInstall OpenCV 3.x with Python bindings and Numpy using a system package\nmanager.\n\n``$ pip install imagesource``\n\nThe ``TimedVideoSource`` requires ``ffprobe`` command from the\n``ffmpeg`` suite.\n\nTesting\n-------\n\n::\n\n    $ pip install nose\n    $ nosetests\n\nWriting Extensions\n------------------\n\nIt is simple to write transparent image source wrappers that\npost-process image data from an underlying image source (e.g. background\nsubtraction, radial distortion removal, ...).\n\nAn example background subtracted image source:\n\n.. code:: python\n\n    class BackgroundSubtractedSource(imagesource.ImageSource):\n        def __init__(self, source):\n            self.source = source\n            self.bgs = cv2.createBackgroundSubtractorMOG2(...)\n\n            def get_image(self, frame):\n                img = self.source.get_image(frame)\n                return self.bgs.apply(img)\n\n            def get_next_image(self):\n                img = self.source.get_next_image()\n                return self.bgs.apply(img)\n\n            def rewind(self):\n                self.source.rewind()\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smidm/imagesource", "keywords": "image sequence video", "license": "The MIT License", "maintainer": "", "maintainer_email": "", "name": "ImageSource", "package_url": "https://pypi.org/project/ImageSource/", "platform": "", "project_url": "https://pypi.org/project/ImageSource/", "project_urls": {"Homepage": "https://github.com/smidm/imagesource"}, "release_url": "https://pypi.org/project/ImageSource/1.0b2/", "requires_dist": ["joblib", "numpy"], "requires_python": "", "summary": "Image sequence abstraction for OpenCV.", "version": "1.0b2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Video data can appear in different forms: bunch of files, a video file,\na network stream etc. We provide an abstraction for ordered image\nsources that serve as an isolation from a specific source type.</p>\n<p>The interface is simple:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">imagesource</span>\n\n<span class=\"n\">images</span> <span class=\"o\">=</span> <span class=\"n\">imagesource</span><span class=\"o\">.</span><span class=\"n\">VideoSource</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/MOV02522.MPG'</span><span class=\"p\">)</span>\n<span class=\"n\">img100</span> <span class=\"o\">=</span> <span class=\"n\">images</span><span class=\"o\">.</span><span class=\"n\">get_image</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">img101</span> <span class=\"o\">=</span> <span class=\"n\">images</span><span class=\"o\">.</span><span class=\"n\">get_next_image</span><span class=\"p\">()</span>\n<span class=\"n\">images</span><span class=\"o\">.</span><span class=\"n\">rewind</span><span class=\"p\">()</span>\n<span class=\"n\">img000</span> <span class=\"o\">=</span> <span class=\"n\">images</span><span class=\"o\">.</span><span class=\"n\">get_next_image</span><span class=\"p\">()</span>\n<span class=\"n\">images</span><span class=\"o\">.</span><span class=\"n\">write_images</span><span class=\"p\">(</span><span class=\"s1\">'out/</span><span class=\"si\">%03d</span><span class=\"s1\">.png'</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n\n<span class=\"n\">images2</span> <span class=\"o\">=</span> <span class=\"n\">imagesource</span><span class=\"o\">.</span><span class=\"n\">FilesSource</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/frames/</span><span class=\"si\">%03d</span><span class=\"s1\">.jpg'</span><span class=\"p\">)</span>\n<span class=\"c1\"># same interface as above ...</span>\n</pre>\n<p>The basic sources are <tt>VideoSource</tt> and <tt>FilesSource</tt> for video\nfiles and sequences of image files respectively. The\n<tt>TimedVideoSource</tt> extracts frame timestamps from video files. The\n<tt>SynchronizedSource</tt> translates frame numbers using a table. This can\nbe used for creating a synchronized set of sources.</p>\n<p>For more examples see <tt>tests/test.py</tt></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install OpenCV 3.x with Python bindings and Numpy using a system package\nmanager.</p>\n<p><tt>$ pip install imagesource</tt></p>\n<p>The <tt>TimedVideoSource</tt> requires <tt>ffprobe</tt> command from the\n<tt>ffmpeg</tt> suite.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<pre>$ pip install nose\n$ nosetests\n</pre>\n</div>\n<div id=\"writing-extensions\">\n<h2>Writing Extensions</h2>\n<p>It is simple to write transparent image source wrappers that\npost-process image data from an underlying image source (e.g. background\nsubtraction, radial distortion removal, \u2026).</p>\n<p>An example background subtracted image source:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">BackgroundSubtractedSource</span><span class=\"p\">(</span><span class=\"n\">imagesource</span><span class=\"o\">.</span><span class=\"n\">ImageSource</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">source</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bgs</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">createBackgroundSubtractorMOG2</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">get_image</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">frame</span><span class=\"p\">):</span>\n            <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">get_image</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bgs</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">get_next_image</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n            <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">get_next_image</span><span class=\"p\">()</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bgs</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">rewind</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">rewind</span><span class=\"p\">()</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2553707, "releases": {"1.0b1": [{"comment_text": "", "digests": {"md5": "0fc40aaeecc381e28cd8c263d583b0a3", "sha256": "0c159cebef32d6a7eea36df0d0c3674e2c60497554f88b16678b3d7c3e4c6de1"}, "downloads": -1, "filename": "ImageSource-1.0b1-py2-none-any.whl", "has_sig": false, "md5_digest": "0fc40aaeecc381e28cd8c263d583b0a3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 8137, "upload_time": "2016-12-20T14:54:20", "upload_time_iso_8601": "2016-12-20T14:54:20.958762Z", "url": "https://files.pythonhosted.org/packages/d8/2e/d56ebb7f2e6ed39eb52e955e19decfd7d69aad45bdfd0898612a84c56e6c/ImageSource-1.0b1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc23156fbb89b13d0177ffbabca70a54", "sha256": "5a6bc1d2447c15c7800e75f5218588b3fdc40fd8d42f7d00b22077b08c3f3516"}, "downloads": -1, "filename": "ImageSource-1.0b1.tar.gz", "has_sig": false, "md5_digest": "bc23156fbb89b13d0177ffbabca70a54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4742, "upload_time": "2016-12-20T14:54:00", "upload_time_iso_8601": "2016-12-20T14:54:00.994774Z", "url": "https://files.pythonhosted.org/packages/61/32/11b638fd05b124fbe240ff2acdfeed9ff3e393d84fc2a7a28db6b92f7a41/ImageSource-1.0b1.tar.gz", "yanked": false}], "1.0b2": [{"comment_text": "", "digests": {"md5": "acdb6578dc9c72f61f775c37c71b91d8", "sha256": "0acac55ecdd3a1d08987bd59e665507a3053f6c960783aee2d2344013c42bcfb"}, "downloads": -1, "filename": "ImageSource-1.0b2-py2-none-any.whl", "has_sig": false, "md5_digest": "acdb6578dc9c72f61f775c37c71b91d8", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 8721, "upload_time": "2017-01-04T14:32:48", "upload_time_iso_8601": "2017-01-04T14:32:48.256823Z", "url": "https://files.pythonhosted.org/packages/8a/8a/124acd2cec4c0caf600ea6bfe945ec4ac9fc3cb8853792b3868c2a74091e/ImageSource-1.0b2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc70011df25cf9b4d5dc1e2cdf2e9c5e", "sha256": "8f076d9627a245550f4d6f2c005fedac6e79819229bcf7c93cc90a9cfbd38c24"}, "downloads": -1, "filename": "ImageSource-1.0b2.tar.gz", "has_sig": false, "md5_digest": "fc70011df25cf9b4d5dc1e2cdf2e9c5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4993, "upload_time": "2017-01-04T14:32:51", "upload_time_iso_8601": "2017-01-04T14:32:51.231178Z", "url": "https://files.pythonhosted.org/packages/bb/22/b8f5a88776c9b030b34c09987a22dce4f277acc1103e25d79e5c44228e78/ImageSource-1.0b2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "acdb6578dc9c72f61f775c37c71b91d8", "sha256": "0acac55ecdd3a1d08987bd59e665507a3053f6c960783aee2d2344013c42bcfb"}, "downloads": -1, "filename": "ImageSource-1.0b2-py2-none-any.whl", "has_sig": false, "md5_digest": "acdb6578dc9c72f61f775c37c71b91d8", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 8721, "upload_time": "2017-01-04T14:32:48", "upload_time_iso_8601": "2017-01-04T14:32:48.256823Z", "url": "https://files.pythonhosted.org/packages/8a/8a/124acd2cec4c0caf600ea6bfe945ec4ac9fc3cb8853792b3868c2a74091e/ImageSource-1.0b2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc70011df25cf9b4d5dc1e2cdf2e9c5e", "sha256": "8f076d9627a245550f4d6f2c005fedac6e79819229bcf7c93cc90a9cfbd38c24"}, "downloads": -1, "filename": "ImageSource-1.0b2.tar.gz", "has_sig": false, "md5_digest": "fc70011df25cf9b4d5dc1e2cdf2e9c5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4993, "upload_time": "2017-01-04T14:32:51", "upload_time_iso_8601": "2017-01-04T14:32:51.231178Z", "url": "https://files.pythonhosted.org/packages/bb/22/b8f5a88776c9b030b34c09987a22dce4f277acc1103e25d79e5c44228e78/ImageSource-1.0b2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:49 2020"}