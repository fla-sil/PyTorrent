{"info": {"author": "Daniel Molina", "author_email": "dmolina@decsai.ugr.es", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)"], "description": "Introduction\n============\nThis is a Python wrapping using the C++ Implementation of the test suite for the Special Session on Large Scale Global Optimization at 2013 IEEE Congress on Evolutionary Computation.\n\n\nNote\n----\nIf you are to use any part of this code, please cite the following publications:\nX. Li, K. Tang, M. Omidvar, Z. Yang and K. Qin, \"Benchmark Functions for the CEC'2013 Special Session and Competition on Large Scale Global Optimization,\" Technical Report, Evolutionary Computation and Machine Learning Group, RMIT University, Australia, 2013. \nhttp://goanna.cs.rmit.edu.au/~xiaodong/cec13-lsgo/competition/\n\nRequirements\n------------\n- GNU Make\n- GNU G++\n- Python\n- Cython\n\nTesting Environment\n-------------------\n- Debian GNU/Linux jessie/sid\n- GNU Make 3.81\n- g++ (Debian 4.7.3-4) 4.7.3\n- Python 2.7 and Python 3.2\n- numpy 1.8.1\n- cython 0.20.1\n\nResults with Travis-CI\n~~~~~~~~~~~~~~~~~~~~~~\n.. image:: https://api.travis-ci.org/dmolina/cec2013lsgo.svg?branch=master\n\nInstalation\n-----------\n\nVery easy, *pip install cec2013lsgo* ;-). \n\nYou can also download from https://github.com/dmolina/cec2013lsgo, and do *python setup.py install [--user]*.\n(the option *--user* is for installing the package locally, as a normal user (interesting when you want to \nrun the experiments in a cluster/server without administration permissions).\n\nTo compile the source code in C++\n----------------------------------\n\nThe source code in C++ is also available. If you want to compile only the C++\nversion type in 'make' in the root directory of source code. \n\nThere are two equivalents demo executables: demo and demo2. \n\n**REMEMBER: To run the C++ version the directory cdatafiles must be available in the working directory**. \nIn the python version, these files are included in the packages, so it is not needed. \n\nTests\n-----\n\nThe source code has tests to check the information about each function, and the results obtained\nwith the C version using the solution np.zeros(1000) (a solution of zeros).\n\nQuickstart\n----------\n\nThe package is very simple to use. There is a class Benchmark with two functions:\n\n- Give information for each function: their optimum, their dimensionality, the domain search, and the\n  expected threshold to achieve the optima.\n\n- Give a fitness function to evaluate solutions. It expect that these solutions are numpy arrays\n  (vectors) but it can also work with normal arrays.\n\nThese two functionalities are done with two methods in Benchmark class:\n\n- **get_num_functions()**\n\n  Return the number of functions in the benchmarks (15)\n\n- **get_info(function_id)**\n\n  Return an array with the following information, where /function_id/ is the identifier of the function, a int value between 1 and 15.\n\n    - lower, upper\n        *lower* and *upper* boundaries of the domain search. \n\n    - best\n        Optimum to achieve, it is always zero, thus it can be ignored.\n\n    - threshold\n        Threshold to obtain, it is always zero, thus it can also be ignored.\n\n    - dimension\n        Dimension for the function, it is always 1000.\n\n    It can be noticed that several data are the same for all functions. It is made for maintaining the \n    same interface to other cec20xx competitions.\n\n- **get_function(function_id)**\n\n  *function_id* is the same parameter than in **get_info**, an integer value between 1 and 15.\n  \n  It returns the fitness function to evaluate the solutions.\n\nExamples of use\n---------------\n\nObtain information about one function\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n>>> from cec2013lsgo.cec2013 import Benchmark\n>>> bench = Benchmark()\n>>> bench.get_info(1)\n{'best': 0.0,\n 'dimension': 1000,\n 'lower': -100.0,\n 'threshold': 0,\n 'upper': 100.0}\n\nCreate random solution for the search\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n>>> from numpy.random import rand\n>>> info = bench.get_info(1)\n>>> dim = info['dimension']\n>>> sol = info['lower']+rand(dim)*(info['upper']-info['lower'])\n\nEvaluate a solution\n~~~~~~~~~~~~~~~~~~~\n>>> fun_fitness = bench.get_function(1)\n>>> fun_fitness(sol)\n464006824710.75995\n\nContact\n-------\nPython package and C++ version\n  Daniel Molina @ Computer Science Deparment, University of Granada\n  Please feel free to contact me at <dmolina@decsai.ugr.es> for any enquiries or suggestions.\n\nLast Updated: \n\n- C++ version\n  <2018-12-10>\n\n- Python wrapping\n  <2018-01-08>", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dmolina/cec2013lsgo", "keywords": "", "license": "GPL V3", "maintainer": "", "maintainer_email": "", "name": "cec2013lsgo", "package_url": "https://pypi.org/project/cec2013lsgo/", "platform": "", "project_url": "https://pypi.org/project/cec2013lsgo/", "project_urls": {"Homepage": "https://github.com/dmolina/cec2013lsgo"}, "release_url": "https://pypi.org/project/cec2013lsgo/2.2/", "requires_dist": null, "requires_python": "", "summary": "Package for benchmark for the Real     Large Scale Global Optimization session on IEEE     Congress on Evolutionary Computation CEC'2013", "version": "2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a Python wrapping using the C++ Implementation of the test suite for the Special Session on Large Scale Global Optimization at 2013 IEEE Congress on Evolutionary Computation.</p>\n<div id=\"note\">\n<h2>Note</h2>\n<p>If you are to use any part of this code, please cite the following publications:\nX. Li, K. Tang, M. Omidvar, Z. Yang and K. Qin, \u201cBenchmark Functions for the CEC\u20192013 Special Session and Competition on Large Scale Global Optimization,\u201d Technical Report, Evolutionary Computation and Machine Learning Group, RMIT University, Australia, 2013.\n<a href=\"http://goanna.cs.rmit.edu.au/~xiaodong/cec13-lsgo/competition/\" rel=\"nofollow\">http://goanna.cs.rmit.edu.au/~xiaodong/cec13-lsgo/competition/</a></p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>GNU Make</li>\n<li>GNU G++</li>\n<li>Python</li>\n<li>Cython</li>\n</ul>\n</div>\n<div id=\"testing-environment\">\n<h2>Testing Environment</h2>\n<ul>\n<li>Debian GNU/Linux jessie/sid</li>\n<li>GNU Make 3.81</li>\n<li>g++ (Debian 4.7.3-4) 4.7.3</li>\n<li>Python 2.7 and Python 3.2</li>\n<li>numpy 1.8.1</li>\n<li>cython 0.20.1</li>\n</ul>\n<div id=\"results-with-travis-ci\">\n<h3>Results with Travis-CI</h3>\n<img alt=\"https://api.travis-ci.org/dmolina/cec2013lsgo.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c918f72ff5d1b487a658bb2982e03ec31014abe2/68747470733a2f2f6170692e7472617669732d63692e6f72672f646d6f6c696e612f636563323031336c73676f2e7376673f6272616e63683d6d6173746572\">\n</div>\n</div>\n<div id=\"instalation\">\n<h2>Instalation</h2>\n<p>Very easy, <em>pip install cec2013lsgo</em> ;-).</p>\n<p>You can also download from <a href=\"https://github.com/dmolina/cec2013lsgo\" rel=\"nofollow\">https://github.com/dmolina/cec2013lsgo</a>, and do <em>python setup.py install [\u2013user]</em>.\n(the option <em>\u2013user</em> is for installing the package locally, as a normal user (interesting when you want to\nrun the experiments in a cluster/server without administration permissions).</p>\n</div>\n<div id=\"to-compile-the-source-code-in-c\">\n<h2>To compile the source code in C++</h2>\n<p>The source code in C++ is also available. If you want to compile only the C++\nversion type in \u2018make\u2019 in the root directory of source code.</p>\n<p>There are two equivalents demo executables: demo and demo2.</p>\n<p><strong>REMEMBER: To run the C++ version the directory cdatafiles must be available in the working directory</strong>.\nIn the python version, these files are included in the packages, so it is not needed.</p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>The source code has tests to check the information about each function, and the results obtained\nwith the C version using the solution np.zeros(1000) (a solution of zeros).</p>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>The package is very simple to use. There is a class Benchmark with two functions:</p>\n<ul>\n<li>Give information for each function: their optimum, their dimensionality, the domain search, and the\nexpected threshold to achieve the optima.</li>\n<li>Give a fitness function to evaluate solutions. It expect that these solutions are numpy arrays\n(vectors) but it can also work with normal arrays.</li>\n</ul>\n<p>These two functionalities are done with two methods in Benchmark class:</p>\n<ul>\n<li><p><strong>get_num_functions()</strong></p>\n<p>Return the number of functions in the benchmarks (15)</p>\n</li>\n<li><p><strong>get_info(function_id)</strong></p>\n<p>Return an array with the following information, where /function_id/ is the identifier of the function, a int value between 1 and 15.</p>\n<blockquote>\n<ul>\n<li><dl>\n<dt>lower, upper</dt>\n<dd><em>lower</em> and <em>upper</em> boundaries of the domain search.</dd>\n</dl>\n</li>\n<li><dl>\n<dt>best</dt>\n<dd>Optimum to achieve, it is always zero, thus it can be ignored.</dd>\n</dl>\n</li>\n<li><dl>\n<dt>threshold</dt>\n<dd>Threshold to obtain, it is always zero, thus it can also be ignored.</dd>\n</dl>\n</li>\n<li><dl>\n<dt>dimension</dt>\n<dd>Dimension for the function, it is always 1000.</dd>\n</dl>\n</li>\n</ul>\n<p>It can be noticed that several data are the same for all functions. It is made for maintaining the\nsame interface to other cec20xx competitions.</p>\n</blockquote>\n</li>\n<li><p><strong>get_function(function_id)</strong></p>\n<p><em>function_id</em> is the same parameter than in <strong>get_info</strong>, an integer value between 1 and 15.</p>\n<p>It returns the fitness function to evaluate the solutions.</p>\n</li>\n</ul>\n</div>\n<div id=\"examples-of-use\">\n<h2>Examples of use</h2>\n<div id=\"obtain-information-about-one-function\">\n<h3>Obtain information about one function</h3>\n<pre>&gt;&gt;&gt; from cec2013lsgo.cec2013 import Benchmark\n&gt;&gt;&gt; bench = Benchmark()\n&gt;&gt;&gt; bench.get_info(1)\n{'best': 0.0,\n 'dimension': 1000,\n 'lower': -100.0,\n 'threshold': 0,\n 'upper': 100.0}\n</pre>\n</div>\n<div id=\"create-random-solution-for-the-search\">\n<h3>Create random solution for the search</h3>\n<pre>&gt;&gt;&gt; from numpy.random import rand\n&gt;&gt;&gt; info = bench.get_info(1)\n&gt;&gt;&gt; dim = info['dimension']\n&gt;&gt;&gt; sol = info['lower']+rand(dim)*(info['upper']-info['lower'])\n</pre>\n</div>\n<div id=\"evaluate-a-solution\">\n<h3>Evaluate a solution</h3>\n<pre>&gt;&gt;&gt; fun_fitness = bench.get_function(1)\n&gt;&gt;&gt; fun_fitness(sol)\n464006824710.75995\n</pre>\n</div>\n</div>\n<div id=\"contact\">\n<h2>Contact</h2>\n<dl>\n<dt>Python package and C++ version</dt>\n<dd>Daniel Molina @ Computer Science Deparment, University of Granada\nPlease feel free to contact me at &lt;<a href=\"mailto:dmolina%40decsai.ugr.es\">dmolina<span>@</span>decsai<span>.</span>ugr<span>.</span>es</a>&gt; for any enquiries or suggestions.</dd>\n</dl>\n<p>Last Updated:</p>\n<ul>\n<li>C++ version\n&lt;2018-12-10&gt;</li>\n<li>Python wrapping\n&lt;2018-01-08&gt;</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4100083, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4c6d857ad122e940e559b26214250baf", "sha256": "e798e6722f4929fd79effe2faca765b6bd10ba4eba6803f75cfdbffdb37418a9"}, "downloads": -1, "filename": "cec2013lsgo-0.1.tar.gz", "has_sig": false, "md5_digest": "4c6d857ad122e940e559b26214250baf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1441802, "upload_time": "2014-12-26T22:23:48", "upload_time_iso_8601": "2014-12-26T22:23:48.842390Z", "url": "https://files.pythonhosted.org/packages/be/ce/05cc0ada7257150ddda450c7b27e27bcb443e1033f95532afc466680f126/cec2013lsgo-0.1.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "82289dc61f6171b8775bee4b37edb97e", "sha256": "132a7313be4724758ce5e29dcf0e68b9b9128cf3c566cef3975ac959e66c9758"}, "downloads": -1, "filename": "cec2013lsgo-2.0.tar.gz", "has_sig": false, "md5_digest": "82289dc61f6171b8775bee4b37edb97e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1451400, "upload_time": "2017-12-11T21:50:31", "upload_time_iso_8601": "2017-12-11T21:50:31.395347Z", "url": "https://files.pythonhosted.org/packages/db/b4/b792917e7f7ea1ec004c094c0f1f0fd1d87b2c39b5e1a377bc870a044bf2/cec2013lsgo-2.0.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "cc492456faed517944056738a889ac28", "sha256": "6a8880692747edeace2741f46c28b8bc17ee7722deffe6432f005de8f4101daa"}, "downloads": -1, "filename": "cec2013lsgo-2.1.tar.gz", "has_sig": false, "md5_digest": "cc492456faed517944056738a889ac28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1464584, "upload_time": "2018-01-08T19:44:26", "upload_time_iso_8601": "2018-01-08T19:44:26.379657Z", "url": "https://files.pythonhosted.org/packages/ce/72/a54aecb935aa8787e4b1b50b847e00829841eb7f7da4fb93230b38a426ae/cec2013lsgo-2.1.tar.gz", "yanked": false}], "2.2": [{"comment_text": "", "digests": {"md5": "3691afcf7a1042da01d5c0a2f1e54a5a", "sha256": "e1f46e3fa5b576b7e4d19078867f345a7fdb5269549d12113bd8cba7982d03d5"}, "downloads": -1, "filename": "cec2013lsgo-2.2.tar.gz", "has_sig": false, "md5_digest": "3691afcf7a1042da01d5c0a2f1e54a5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1464592, "upload_time": "2018-07-25T10:32:28", "upload_time_iso_8601": "2018-07-25T10:32:28.042867Z", "url": "https://files.pythonhosted.org/packages/e4/42/52bb52657b006fd48f53e1f1460560c3a9846de67db94f560bfd5c464aaf/cec2013lsgo-2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3691afcf7a1042da01d5c0a2f1e54a5a", "sha256": "e1f46e3fa5b576b7e4d19078867f345a7fdb5269549d12113bd8cba7982d03d5"}, "downloads": -1, "filename": "cec2013lsgo-2.2.tar.gz", "has_sig": false, "md5_digest": "3691afcf7a1042da01d5c0a2f1e54a5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1464592, "upload_time": "2018-07-25T10:32:28", "upload_time_iso_8601": "2018-07-25T10:32:28.042867Z", "url": "https://files.pythonhosted.org/packages/e4/42/52bb52657b006fd48f53e1f1460560c3a9846de67db94f560bfd5c464aaf/cec2013lsgo-2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:54 2020"}