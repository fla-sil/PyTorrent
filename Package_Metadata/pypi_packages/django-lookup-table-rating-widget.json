{"info": {"author": "zencore", "author_email": "dobetter@zencore.cn", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# django-lookup-table-rating-widget\n\nA django rating widget with a lookup-table for score-making rules.\n\n## Install\n\n```shell\npip install django-lookup-table-rating-widget\n```\n\n## Usage\n\n**pro/settings.py**\n\n**Note:**\n\n- We used jquery staic file, so we NEED add django_static_jquery3 in INSTALLED_APPS.\n- We used template of django-lookup-table-rating-widget, so we NEED add django_lookup_table_rating_widget in INSTALLED_APPS.\n\n```python\nINSTALLED_APPS = [\n    ...\n    'django_static_jquery3',\n    'django_lookup_table_rating_widget',\n    ...\n]\n```\n\n**app/admin.py**\n\n```python\n\nfrom django.contrib import admin\nfrom django.utils.lorem_ipsum import sentence\nfrom django_lookup_table_rating_widget.widgets import DjangoLookupTableRatingWidget\nfrom django import forms\nfrom .models import Book\n\ns1_scores = [\n    {\n        \"scores\": [1, 2],\n        \"rule\": \"<b>Bad</b>. \" + sentence(),\n    },{\n        \"scores\": [3, 4],\n        \"rule\": \"<b>Not bad</b>. \" + sentence(),\n    },{\n        \"scores\": [5, 6],\n        \"rule\": \"<b>Good</b>. \" + sentence(),\n    },{\n        \"scores\": [7, 8],\n        \"rule\": \"<b>Very Good</b>.\" + sentence(),\n    },{\n        \"scores\": [9, 10],\n        \"rule\": \"<b>Excellent</b>.\" + sentence(),\n    }\n]\n\nclass BookForm(forms.ModelForm):\n    class Meta:\n        model = Book\n        exclude = []\n        widgets = {\n            \"s1\": DjangoLookupTableRatingWidget(s1_scores, field_label_in_table=False, weight=15),\n            \"s2\": DjangoLookupTableRatingWidget(s1_scores, allow_input=True),\n            \"s3\": DjangoLookupTableRatingWidget(s1_scores),\n            \"s4\": DjangoLookupTableRatingWidget(s1_scores),\n        }\n\nclass BookAdmin(admin.ModelAdmin):\n    form = BookForm\n    list_display = [\"title\"]\n\n    fieldsets = [\n        (None, {\n            \"fields\": [\"title\"]\n        }),\n        (\"Score 1 & 2\", {\n            \"fields\": [\"s1\", \"s2\"],\n        }),\n        (\"Score 3 & 4\", {\n            \"fields\": [\"s3\", \"s4\"],\n        })\n    ]\n\nadmin.site.register(Book, BookAdmin)\n\n```\n\n## Widget Init Parameters\n\n- `scores`: required.\n    - It's a list of map. The map always contains `scores` and `rule` item. `scores` is a list of rating buttons, and the `rule` is a string of rule description. HTML `rule` is accepted.\n- `allow_input`: optional, default to False.\n    - If allow_input=True, the final score input is allowed to input.\n    - If allow_input=False, the final score input is readonly.\n- `field_label_in_table`: optional, default True.\n    - If field_label_in_table=True, we use jquery to move field's label and help into the table.\n    - If field_label_in_table=False, we keep the field's label and help at thire original position.\n- `weight`: optional, default None.\n    - weight means the field weight in full rating form.\n    - If not provides, we will remove the weight column.\n- `field_label`: optional, default to _(\"Item\").\n- `final_score_label`: optional, default to _(\"Score\").\n- `scores_label`: optional, default to _(\"Rating Buttons\").\n- `rules_label`: optional, default to _(\"Rule\").\n- `weight_label`: _(\"Weight\").\n    - All lables are used to render the rating table header.\n\n## Releases\n\n### v0.1.0 2020/03/18\n\n- First release.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "django admin extentions,django lookup table rating widget", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-lookup-table-rating-widget", "package_url": "https://pypi.org/project/django-lookup-table-rating-widget/", "platform": "", "project_url": "https://pypi.org/project/django-lookup-table-rating-widget/", "project_urls": null, "release_url": "https://pypi.org/project/django-lookup-table-rating-widget/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "A django rating widget with a lookup-table for score-making rules.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-lookup-table-rating-widget</h1>\n<p>A django rating widget with a lookup-table for score-making rules.</p>\n<h2>Install</h2>\n<pre>pip install django-lookup-table-rating-widget\n</pre>\n<h2>Usage</h2>\n<p><strong>pro/settings.py</strong></p>\n<p><strong>Note:</strong></p>\n<ul>\n<li>We used jquery staic file, so we NEED add django_static_jquery3 in INSTALLED_APPS.</li>\n<li>We used template of django-lookup-table-rating-widget, so we NEED add django_lookup_table_rating_widget in INSTALLED_APPS.</li>\n</ul>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django_static_jquery3'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django_lookup_table_rating_widget'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p><strong>app/admin.py</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.lorem_ipsum</span> <span class=\"kn\">import</span> <span class=\"n\">sentence</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_lookup_table_rating_widget.widgets</span> <span class=\"kn\">import</span> <span class=\"n\">DjangoLookupTableRatingWidget</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Book</span>\n\n<span class=\"n\">s1_scores</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">\"scores\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"rule\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;b&gt;Bad&lt;/b&gt;. \"</span> <span class=\"o\">+</span> <span class=\"n\">sentence</span><span class=\"p\">(),</span>\n    <span class=\"p\">},{</span>\n        <span class=\"s2\">\"scores\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"rule\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;b&gt;Not bad&lt;/b&gt;. \"</span> <span class=\"o\">+</span> <span class=\"n\">sentence</span><span class=\"p\">(),</span>\n    <span class=\"p\">},{</span>\n        <span class=\"s2\">\"scores\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"rule\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;b&gt;Good&lt;/b&gt;. \"</span> <span class=\"o\">+</span> <span class=\"n\">sentence</span><span class=\"p\">(),</span>\n    <span class=\"p\">},{</span>\n        <span class=\"s2\">\"scores\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"rule\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;b&gt;Very Good&lt;/b&gt;.\"</span> <span class=\"o\">+</span> <span class=\"n\">sentence</span><span class=\"p\">(),</span>\n    <span class=\"p\">},{</span>\n        <span class=\"s2\">\"scores\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"rule\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;b&gt;Excellent&lt;/b&gt;.\"</span> <span class=\"o\">+</span> <span class=\"n\">sentence</span><span class=\"p\">(),</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">BookForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ModelForm</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Book</span>\n        <span class=\"n\">exclude</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">widgets</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"s1\"</span><span class=\"p\">:</span> <span class=\"n\">DjangoLookupTableRatingWidget</span><span class=\"p\">(</span><span class=\"n\">s1_scores</span><span class=\"p\">,</span> <span class=\"n\">field_label_in_table</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">weight</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">),</span>\n            <span class=\"s2\">\"s2\"</span><span class=\"p\">:</span> <span class=\"n\">DjangoLookupTableRatingWidget</span><span class=\"p\">(</span><span class=\"n\">s1_scores</span><span class=\"p\">,</span> <span class=\"n\">allow_input</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n            <span class=\"s2\">\"s3\"</span><span class=\"p\">:</span> <span class=\"n\">DjangoLookupTableRatingWidget</span><span class=\"p\">(</span><span class=\"n\">s1_scores</span><span class=\"p\">),</span>\n            <span class=\"s2\">\"s4\"</span><span class=\"p\">:</span> <span class=\"n\">DjangoLookupTableRatingWidget</span><span class=\"p\">(</span><span class=\"n\">s1_scores</span><span class=\"p\">),</span>\n        <span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">BookAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">BookForm</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"title\"</span><span class=\"p\">]</span>\n\n    <span class=\"n\">fieldsets</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"fields\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"title\"</span><span class=\"p\">]</span>\n        <span class=\"p\">}),</span>\n        <span class=\"p\">(</span><span class=\"s2\">\"Score 1 &amp; 2\"</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"fields\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"s1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"s2\"</span><span class=\"p\">],</span>\n        <span class=\"p\">}),</span>\n        <span class=\"p\">(</span><span class=\"s2\">\"Score 3 &amp; 4\"</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"fields\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"s3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"s4\"</span><span class=\"p\">],</span>\n        <span class=\"p\">})</span>\n    <span class=\"p\">]</span>\n\n<span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Book</span><span class=\"p\">,</span> <span class=\"n\">BookAdmin</span><span class=\"p\">)</span>\n</pre>\n<h2>Widget Init Parameters</h2>\n<ul>\n<li><code>scores</code>: required.\n<ul>\n<li>It's a list of map. The map always contains <code>scores</code> and <code>rule</code> item. <code>scores</code> is a list of rating buttons, and the <code>rule</code> is a string of rule description. HTML <code>rule</code> is accepted.</li>\n</ul>\n</li>\n<li><code>allow_input</code>: optional, default to False.\n<ul>\n<li>If allow_input=True, the final score input is allowed to input.</li>\n<li>If allow_input=False, the final score input is readonly.</li>\n</ul>\n</li>\n<li><code>field_label_in_table</code>: optional, default True.\n<ul>\n<li>If field_label_in_table=True, we use jquery to move field's label and help into the table.</li>\n<li>If field_label_in_table=False, we keep the field's label and help at thire original position.</li>\n</ul>\n</li>\n<li><code>weight</code>: optional, default None.\n<ul>\n<li>weight means the field weight in full rating form.</li>\n<li>If not provides, we will remove the weight column.</li>\n</ul>\n</li>\n<li><code>field_label</code>: optional, default to _(\"Item\").</li>\n<li><code>final_score_label</code>: optional, default to _(\"Score\").</li>\n<li><code>scores_label</code>: optional, default to _(\"Rating Buttons\").</li>\n<li><code>rules_label</code>: optional, default to _(\"Rule\").</li>\n<li><code>weight_label</code>: _(\"Weight\").\n<ul>\n<li>All lables are used to render the rating table header.</li>\n</ul>\n</li>\n</ul>\n<h2>Releases</h2>\n<h3>v0.1.0 2020/03/18</h3>\n<ul>\n<li>First release.</li>\n</ul>\n\n          </div>"}, "last_serial": 6836448, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9fa977e34a2810ac2c2b50813b7e4850", "sha256": "20164d3491df71f6c76f5ede98a03a8b406bed87f0ab6fd87f27bef88dd4bf38"}, "downloads": -1, "filename": "django-lookup-table-rating-widget-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9fa977e34a2810ac2c2b50813b7e4850", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8471, "upload_time": "2020-03-18T14:09:34", "upload_time_iso_8601": "2020-03-18T14:09:34.009675Z", "url": "https://files.pythonhosted.org/packages/88/68/eed599a48c7e376a5c156218a33f9e4edc250e12aaad0bc613dd7cf53aaf/django-lookup-table-rating-widget-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9fa977e34a2810ac2c2b50813b7e4850", "sha256": "20164d3491df71f6c76f5ede98a03a8b406bed87f0ab6fd87f27bef88dd4bf38"}, "downloads": -1, "filename": "django-lookup-table-rating-widget-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9fa977e34a2810ac2c2b50813b7e4850", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8471, "upload_time": "2020-03-18T14:09:34", "upload_time_iso_8601": "2020-03-18T14:09:34.009675Z", "url": "https://files.pythonhosted.org/packages/88/68/eed599a48c7e376a5c156218a33f9e4edc250e12aaad0bc613dd7cf53aaf/django-lookup-table-rating-widget-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:15 2020"}