{"info": {"author": "Marc Abramowitz", "author_email": "marc@marc-abramowitz.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Topic :: Software Development :: Testing"], "description": "python_unittest_parameterized_test_case\n=======================================\n\n.. image:: https://secure.travis-ci.org/msabramo/python_unittest_parameterized_test_case.png?branch=master\n   :target: http://travis-ci.org/msabramo/python_unittest_parameterized_test_case\n\nParameterized tests for Python's unittest module\n\nThis was inspired by the `parameterized tests\nfeature <http://pytest.org/latest/example/parametrize.html>`_ in\n`py.test <http://pytest.org/>`_. I had been using py.test for the\nparticular test that motivated this, but my colleague had some\nreservations about using py.test and all I really needed was the\nparameterized tests so I whipped this up with a bit of metaclass\nhackery.\n\n\nExample usage\n-------------\n\n.. code-block:: python\n\n    from parameterizedtestcase import ParameterizedTestCase\n\n    class MyTests(ParameterizedTestCase):\n        @ParameterizedTestCase.parameterize(\n            (\"input\", \"expected_output\"),\n            [\n                (\"2+4\", 6),\n                (\"3+5\", 8),\n                (\"6*9\", 54),\n            ]\n        )\n        def test_eval(self, input, expected_output):\n            self.assertEqual(eval(input), expected_output)\n\nResult of running this::\n\n    ~/dev/git-repos/python_unittest_parameterized_test_case$ python -m unittest -v tests\n    test_eval_input_2+4_expected_output_6 (tests.MyTests) ... ok\n    test_eval_input_3+5_expected_output_8 (tests.MyTests) ... ok\n    test_eval_input_6*9_expected_output_54 (tests.MyTests) ... ok\n\n    ----------------------------------------------------------------------\n    Ran 3 tests in 0.001s\n\n    OK\n\n\nSupported Python versions\n-------------------------\n\n- Python 2.5\n- Python 2.6\n- Python 2.7\n- Python 3.1\n- Python 3.2\n- Python 3.3\n- PyPy 1.9\n- Jython 2.5\n\nor says `tox <http://tox.testrun.org/>`_::\n\n    ~/dev/git-repos/python_unittest_parameterized_test_case$ tox\n    ...\n      py25: commands succeeded\n      py26: commands succeeded\n      py27: commands succeeded\n      py31: commands succeeded\n      py32: commands succeeded\n      py33: commands succeeded\n      jython: commands succeeded\n      pypy: commands succeeded\n      congratulations :)\n\nYou also can check the `latest Travis CI results\n<http://travis-ci.org/msabramo/python_unittest_parameterized_test_case>`_, but\nTravis doesn't build all of the above platforms.\n\n\nIssues\n------\n\nSend your bug reports and feature requests to https://github.com/msabramo/python_unittest_parameterized_test_case/issues", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/msabramo/python_unittest_parameterized_test_case", "keywords": "unittest", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "parameterizedtestcase", "package_url": "https://pypi.org/project/parameterizedtestcase/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/parameterizedtestcase/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/msabramo/python_unittest_parameterized_test_case"}, "release_url": "https://pypi.org/project/parameterizedtestcase/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Parameterized tests for Python's unittest module", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/msabramo/python_unittest_parameterized_test_case\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/msabramo/python_unittest_parameterized_test_case.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/96b633d0e43a985954ddc050448b2783a0cb0df3/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f6d73616272616d6f2f707974686f6e5f756e6974746573745f706172616d65746572697a65645f746573745f636173652e706e673f6272616e63683d6d6173746572\"></a>\n<p>Parameterized tests for Python\u2019s unittest module</p>\n<p>This was inspired by the <a href=\"http://pytest.org/latest/example/parametrize.html\" rel=\"nofollow\">parameterized tests\nfeature</a> in\n<a href=\"http://pytest.org/\" rel=\"nofollow\">py.test</a>. I had been using py.test for the\nparticular test that motivated this, but my colleague had some\nreservations about using py.test and all I really needed was the\nparameterized tests so I whipped this up with a bit of metaclass\nhackery.</p>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">parameterizedtestcase</span> <span class=\"kn\">import</span> <span class=\"n\">ParameterizedTestCase</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyTests</span><span class=\"p\">(</span><span class=\"n\">ParameterizedTestCase</span><span class=\"p\">):</span>\n    <span class=\"nd\">@ParameterizedTestCase</span><span class=\"o\">.</span><span class=\"n\">parameterize</span><span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s2\">\"input\"</span><span class=\"p\">,</span> <span class=\"s2\">\"expected_output\"</span><span class=\"p\">),</span>\n        <span class=\"p\">[</span>\n            <span class=\"p\">(</span><span class=\"s2\">\"2+4\"</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">\"3+5\"</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">\"6*9\"</span><span class=\"p\">,</span> <span class=\"mi\">54</span><span class=\"p\">),</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_eval</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">input</span><span class=\"p\">,</span> <span class=\"n\">expected_output</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span><span class=\"nb\">eval</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">),</span> <span class=\"n\">expected_output</span><span class=\"p\">)</span>\n</pre>\n<p>Result of running this:</p>\n<pre>~/dev/git-repos/python_unittest_parameterized_test_case$ python -m unittest -v tests\ntest_eval_input_2+4_expected_output_6 (tests.MyTests) ... ok\ntest_eval_input_3+5_expected_output_8 (tests.MyTests) ... ok\ntest_eval_input_6*9_expected_output_54 (tests.MyTests) ... ok\n\n----------------------------------------------------------------------\nRan 3 tests in 0.001s\n\nOK\n</pre>\n</div>\n<div id=\"supported-python-versions\">\n<h2>Supported Python versions</h2>\n<ul>\n<li>Python 2.5</li>\n<li>Python 2.6</li>\n<li>Python 2.7</li>\n<li>Python 3.1</li>\n<li>Python 3.2</li>\n<li>Python 3.3</li>\n<li>PyPy 1.9</li>\n<li>Jython 2.5</li>\n</ul>\n<p>or says <a href=\"http://tox.testrun.org/\" rel=\"nofollow\">tox</a>:</p>\n<pre>~/dev/git-repos/python_unittest_parameterized_test_case$ tox\n...\n  py25: commands succeeded\n  py26: commands succeeded\n  py27: commands succeeded\n  py31: commands succeeded\n  py32: commands succeeded\n  py33: commands succeeded\n  jython: commands succeeded\n  pypy: commands succeeded\n  congratulations :)\n</pre>\n<p>You also can check the <a href=\"http://travis-ci.org/msabramo/python_unittest_parameterized_test_case\" rel=\"nofollow\">latest Travis CI results</a>, but\nTravis doesn\u2019t build all of the above platforms.</p>\n</div>\n<div id=\"issues\">\n<h2>Issues</h2>\n<p>Send your bug reports and feature requests to <a href=\"https://github.com/msabramo/python_unittest_parameterized_test_case/issues\" rel=\"nofollow\">https://github.com/msabramo/python_unittest_parameterized_test_case/issues</a></p>\n</div>\n\n          </div>"}, "last_serial": 987598, "releases": {"0.0.0": [], "0.0.1": [{"comment_text": "", "digests": {"md5": "183e21d9075003eb940877f7d305e87a", "sha256": "7e1fae51fba6b96dedd39c34e041152b7fdaa3978c58f10c91a3f730ba2a0525"}, "downloads": -1, "filename": "parameterizedtestcase-0.0.1.tar.gz", "has_sig": false, "md5_digest": "183e21d9075003eb940877f7d305e87a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3176, "upload_time": "2012-08-24T20:01:53", "upload_time_iso_8601": "2012-08-24T20:01:53.096507Z", "url": "https://files.pythonhosted.org/packages/4d/54/e4dbb9614b382ff33e49b4a0322024015e37beaf23602a9652b9b06f22ca/parameterizedtestcase-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d848dd9778346e51cfa491775011e8bf", "sha256": "0e467b91135ce2babc1d3ae7c77e1357dabc7031d541e2396afc25ce87f70c35"}, "downloads": -1, "filename": "parameterizedtestcase-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d848dd9778346e51cfa491775011e8bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3167, "upload_time": "2012-08-24T20:16:46", "upload_time_iso_8601": "2012-08-24T20:16:46.077288Z", "url": "https://files.pythonhosted.org/packages/98/83/10d3942706be2eba2b9963dfb0eb5a137667d3342dca7577b7b913d73d81/parameterizedtestcase-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "0fd17d76fe218019274bc1f8aba5d4d9", "sha256": "aa0ed60d3b607fb45b2eeae64c84407be300a54624628486e210397e99ab4ce3"}, "downloads": -1, "filename": "parameterizedtestcase-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0fd17d76fe218019274bc1f8aba5d4d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3769, "upload_time": "2013-07-07T16:29:46", "upload_time_iso_8601": "2013-07-07T16:29:46.891218Z", "url": "https://files.pythonhosted.org/packages/fb/80/1dacc8c62d5fc2051a8711b414032a4a09121893ffa7a1f4fd2dea48b490/parameterizedtestcase-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "9c627d9e85e1632e74bbe67ed8057416", "sha256": "4ccc1d15d7e7ef153619a6a9cd45b170268cf82c67fdd336794c75139aae127e"}, "downloads": -1, "filename": "parameterizedtestcase-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9c627d9e85e1632e74bbe67ed8057416", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4885, "upload_time": "2014-01-31T21:25:53", "upload_time_iso_8601": "2014-01-31T21:25:53.727181Z", "url": "https://files.pythonhosted.org/packages/99/14/4b82711b0c6a377c1e63f44641d3f4c63ec1f3acc6cc5e2d37109fd711ca/parameterizedtestcase-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c627d9e85e1632e74bbe67ed8057416", "sha256": "4ccc1d15d7e7ef153619a6a9cd45b170268cf82c67fdd336794c75139aae127e"}, "downloads": -1, "filename": "parameterizedtestcase-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9c627d9e85e1632e74bbe67ed8057416", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4885, "upload_time": "2014-01-31T21:25:53", "upload_time_iso_8601": "2014-01-31T21:25:53.727181Z", "url": "https://files.pythonhosted.org/packages/99/14/4b82711b0c6a377c1e63f44641d3f4c63ec1f3acc6cc5e2d37109fd711ca/parameterizedtestcase-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:35 2020"}