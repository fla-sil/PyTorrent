{"info": {"author": "trollodel", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Documentation :: Sphinx", "Topic :: System :: Systems Administration", "Topic :: Text Processing", "Topic :: Utilities"], "description": "=========\nPrettyEtc\n=========\n\nSee your configuration files using a pretty and universal GUI interface.\n\nPrettyetc shows your configs in a multitabbed window,\neach one being displayed as a foldable tree.\n\nThe tree has no ugly brackets,\nquoting or something else which might be language specific.\nFor example you can read a JSON and INI file using the same view and structure.\n\n.. It has a settings view, but at the moment is useless.\n\nEven though you can edit,\nit does nothing since the writing feature is not ready.\n\nThe official GUI is powered by the Qt framework,\nusing the official Python bindings.\n\n============\nInstallation\n============\n\n**NOTE**:\nIf you have both Python 2 and 3 installed in your system,\nyou should use python3 instead of python and\npip3 instead of pip.\n\nFull installation with the UI: :code:`pip install prettyetc-qt` .\n\nOr from sources:\n\n.. code-block:: bash\n\n    python setup_core.py bdist_wheel\n    python setup_core.py clean --all\n    python setup_qt.py bdist_wheel`\n    python setup_qt.py clean --all\n    pip install --user dist/*.whl.\n\nIf you want only the core: :code:`pip install prettyetc-core`.\n\nOr from sources:\n\n.. code-block:: bash\n\n    python setup_core.py bdist_wheel\n    python setup_core.py clean --all\n    pip install --user dist/*.whl.\n\n------------\nRequirements\n------------\nPython 3.4+\n\n\nUi\n--\n- PySide2\n- homebase\n\n\nCore\n----\nNo requirements for the core, just Python stdlib.\n\n\nPlugins\n-------\nNo requirement for plugins at the moment.\n\n-------------------\nSupported languages\n-------------------\n\n  - JSON\n  - INI\n  - A self-defined language called etc, see `below <#an-explanation-of-the-etc-language>`_\n\n-------------\nCore features\n-------------\n\nFor a detailed explanation of core features,\nwe suggest to go to the official API documentation of prettyetc components.\n\nDocumentation: `<https://prettyetc.gitlab.io/prettyetc-core>`_\n\nThe documentation also contains instruction to create your custom plugin\nand how to deploy it.\n\n----------------------------------\nAn explanation of the etc language\n----------------------------------\n\nThe etc configuration language is a collection of microlanguages,\nall of them are structured similar to INI files (without sections).\n\nThe origin of this name is the \\*nix /etc folder that contain the system\nor default configuration for lots of programs and also kernel settings.\n\nExcept for INI or JSON files, the files in this folder has an undefined and\na simple syntax;\nmade by spaces, the \":\" character or the \"=\" character (somewhere)\nand the \"#\" character as comment start, that remembers the sh/bash syntax.\n\nExamples of these files are :code:`/etc/resolv.conf /etc/sysctl.conf /etc/modules`.\n\nOur parser aim to handle most of it, representing it using fields\nin a universal view.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/prettyetc/prettyetc-core", "keywords": "configurations json ini etc qt", "license": "", "maintainer": "", "maintainer_email": "", "name": "prettyetc-qt", "package_url": "https://pypi.org/project/prettyetc-qt/", "platform": "", "project_url": "https://pypi.org/project/prettyetc-qt/", "project_urls": {"Bug Reports": "https://gitlab.com/prettyetc/prettyetc-core/issues", "Documentation": "https://prettyetc.gitlab.io/prettyetc-core/", "Homepage": "https://gitlab.com/prettyetc/prettyetc-core", "Source": "https://gitlab.com/prettyetc/prettyetc-core"}, "release_url": "https://pypi.org/project/prettyetc-qt/0.3.1/", "requires_dist": ["PySide2", "homebase", "prettyetc-core (>=0.3.1)"], "requires_python": ">=3.4, <4", "summary": "See your configuration files using a pretty and universal interface.", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"prettyetc\">\n<h2>PrettyEtc</h2>\n<p>See your configuration files using a pretty and universal GUI interface.</p>\n<p>Prettyetc shows your configs in a multitabbed window,\neach one being displayed as a foldable tree.</p>\n<p>The tree has no ugly brackets,\nquoting or something else which might be language specific.\nFor example you can read a JSON and INI file using the same view and structure.</p>\n<p>Even though you can edit,\nit does nothing since the writing feature is not ready.</p>\n<p>The official GUI is powered by the Qt framework,\nusing the official Python bindings.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><strong>NOTE</strong>:\nIf you have both Python 2 and 3 installed in your system,\nyou should use python3 instead of python and\npip3 instead of pip.</p>\n<p>Full installation with the UI: <code>pip install prettyetc-qt</code> .</p>\n<p>Or from sources:</p>\n<pre>python setup_core.py bdist_wheel\npython setup_core.py clean --all\npython setup_qt.py bdist_wheel<span class=\"sb\">`</span>\npython setup_qt.py clean --all\npip install --user dist/*.whl.\n</pre>\n<p>If you want only the core: <code>pip install prettyetc-core</code>.</p>\n<p>Or from sources:</p>\n<pre>python setup_core.py bdist_wheel\npython setup_core.py clean --all\npip install --user dist/*.whl.\n</pre>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>Python 3.4+</p>\n<div id=\"ui\">\n<h4>Ui</h4>\n<ul>\n<li>PySide2</li>\n<li>homebase</li>\n</ul>\n</div>\n<div id=\"core\">\n<h4>Core</h4>\n<p>No requirements for the core, just Python stdlib.</p>\n</div>\n<div id=\"plugins\">\n<h4>Plugins</h4>\n<p>No requirement for plugins at the moment.</p>\n</div>\n</div>\n<div id=\"supported-languages\">\n<h3>Supported languages</h3>\n<blockquote>\n<ul>\n<li>JSON</li>\n<li>INI</li>\n<li>A self-defined language called etc, see <a href=\"#an-explanation-of-the-etc-language\" rel=\"nofollow\">below</a></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"core-features\">\n<h3>Core features</h3>\n<p>For a detailed explanation of core features,\nwe suggest to go to the official API documentation of prettyetc components.</p>\n<p>Documentation: <a href=\"https://prettyetc.gitlab.io/prettyetc-core\" rel=\"nofollow\">https://prettyetc.gitlab.io/prettyetc-core</a></p>\n<p>The documentation also contains instruction to create your custom plugin\nand how to deploy it.</p>\n</div>\n<div id=\"an-explanation-of-the-etc-language\">\n<h3>An explanation of the etc language</h3>\n<p>The etc configuration language is a collection of microlanguages,\nall of them are structured similar to INI files (without sections).</p>\n<p>The origin of this name is the *nix /etc folder that contain the system\nor default configuration for lots of programs and also kernel settings.</p>\n<p>Except for INI or JSON files, the files in this folder has an undefined and\na simple syntax;\nmade by spaces, the \u201c:\u201d character or the \u201c=\u201d character (somewhere)\nand the \u201c#\u201d character as comment start, that remembers the sh/bash syntax.</p>\n<p>Examples of these files are <code>/etc/resolv.conf /etc/sysctl.conf /etc/modules</code>.</p>\n<p>Our parser aim to handle most of it, representing it using fields\nin a universal view.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6439348, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "51b6f475192004e563b962188d74bbb9", "sha256": "acf5964c725715025159b26bc133370e72b7557a70dc2045bcdd27f630c217fe"}, "downloads": -1, "filename": "prettyetc_qt-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "51b6f475192004e563b962188d74bbb9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 30023, "upload_time": "2019-08-16T12:47:33", "upload_time_iso_8601": "2019-08-16T12:47:33.120307Z", "url": "https://files.pythonhosted.org/packages/2a/00/026ccc99aac998fa093ea76acc16ddb4113b7b03907c9f9832aef1f9a63f/prettyetc_qt-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f7150bee4cec47bbc28d5bbd17eba6bd", "sha256": "f840414395b2357ddee1c45893fc17a40927a4581a82c929e5ef9bc52130c595"}, "downloads": -1, "filename": "prettyetc_qt-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f7150bee4cec47bbc28d5bbd17eba6bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 30191, "upload_time": "2019-08-16T13:17:26", "upload_time_iso_8601": "2019-08-16T13:17:26.613932Z", "url": "https://files.pythonhosted.org/packages/4b/6b/0094c329a11884cc1c1c2e7899cefedde9b4a3eacb41866332eafa678840/prettyetc_qt-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "cd6b72555ffaf412b9cade4660a2fcc5", "sha256": "6a618976deaf58e5a801bff8a9910acdb0e07a1d955e86df19f5e76c74d6f4f9"}, "downloads": -1, "filename": "prettyetc_qt-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cd6b72555ffaf412b9cade4660a2fcc5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 30329, "upload_time": "2019-08-16T16:49:42", "upload_time_iso_8601": "2019-08-16T16:49:42.706546Z", "url": "https://files.pythonhosted.org/packages/bc/a9/8fbb5c19e5a129b94cef6384885524b74ed8cbe7f8a1f9a21f478589deee/prettyetc_qt-0.1.2-py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e61958205698fbebfc1cd678f77571fc", "sha256": "97e8e340985a04e13a46b59b6a771f840845ad0324098d6779ac2199d18d0c7c"}, "downloads": -1, "filename": "prettyetc_qt-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e61958205698fbebfc1cd678f77571fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 30327, "upload_time": "2019-08-16T17:39:55", "upload_time_iso_8601": "2019-08-16T17:39:55.691685Z", "url": "https://files.pythonhosted.org/packages/9e/e1/1695eed43cf760a43a8f2c2a50b838b26f4ca0851834020cda607432f962/prettyetc_qt-0.1.3-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d7ceb20a4aa7e2cbcfc0cd82f906e0f9", "sha256": "ab445f811cd84ba035a43380f6035053a327d6d8a6382cea9d0ef7e5e19f7e21"}, "downloads": -1, "filename": "prettyetc_qt-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d7ceb20a4aa7e2cbcfc0cd82f906e0f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 30649, "upload_time": "2019-09-03T10:42:55", "upload_time_iso_8601": "2019-09-03T10:42:55.701524Z", "url": "https://files.pythonhosted.org/packages/ba/e5/ec074aced2fcc94e1c1d46c40443d15ae1163e24c25728869f35c98a7252/prettyetc_qt-0.2.0-py3-none-any.whl", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "e379d4657b8ff7a9addd21c3eae1aac2", "sha256": "4c83fba13e8932bee74405390187217a2fe96248ab164592142248b41458f17b"}, "downloads": -1, "filename": "prettyetc_qt-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e379d4657b8ff7a9addd21c3eae1aac2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 169830, "upload_time": "2019-11-19T20:07:06", "upload_time_iso_8601": "2019-11-19T20:07:06.962780Z", "url": "https://files.pythonhosted.org/packages/e4/ec/94b95ca8a97859f9233548ac6a6a5098b0476a7288a11dd774702e50ea16/prettyetc_qt-0.3.0-py3-none-any.whl", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "7d0ff2eb81c8313dccc326886f8b2388", "sha256": "2bf010ca3676ec789476b3ebc6b8ed95e7d177f520fe6d68fe078b1e7c588a40"}, "downloads": -1, "filename": "prettyetc_qt-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7d0ff2eb81c8313dccc326886f8b2388", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 184400, "upload_time": "2020-01-12T11:05:42", "upload_time_iso_8601": "2020-01-12T11:05:42.952462Z", "url": "https://files.pythonhosted.org/packages/fd/d0/9540d53e9da5147a7f6e1fca82b37841177872dea553570ea8ab05a1b04e/prettyetc_qt-0.3.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7d0ff2eb81c8313dccc326886f8b2388", "sha256": "2bf010ca3676ec789476b3ebc6b8ed95e7d177f520fe6d68fe078b1e7c588a40"}, "downloads": -1, "filename": "prettyetc_qt-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7d0ff2eb81c8313dccc326886f8b2388", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 184400, "upload_time": "2020-01-12T11:05:42", "upload_time_iso_8601": "2020-01-12T11:05:42.952462Z", "url": "https://files.pythonhosted.org/packages/fd/d0/9540d53e9da5147a7f6e1fca82b37841177872dea553570ea8ab05a1b04e/prettyetc_qt-0.3.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:19:37 2020"}