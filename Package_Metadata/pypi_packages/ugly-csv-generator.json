{"info": {"author": "LucaCappelletti94", "author_email": "cappelletti.luca94@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "ugly_csv_generator\n=========================================================================================\n|travis| |sonar_quality| |sonar_maintainability| |codacy|\n|code_climate_maintainability| |pip| |downloads|\n\nPython package to automatically uglify CSVs. Why?\nTo improve the testing capabilities of pipelines that\nmust be able to support strongly malformed input data.\n\nAll the malformation automated here are non-destructive,\nmeaning they introduce confusion in the data but do not\nany information.\n\n**The inspiration for the automated malformation are\nall from real-life CSVs (sigh)**\n\nHumans will always surprise us with the ever-new\nmalformed input data, but hey, we can try to best\nruining the test CSVs!\n\nHow do I install this package?\n----------------------------------------------\nAs usual, just download it using pip:\n\n.. code:: shell\n\n    pip install ugly_csv_generator\n\nTests Coverage\n----------------------------------------------\nSince some software handling coverages sometime\nget slightly different results, here's three of them:\n\n|coveralls| |sonar_coverage| |code_climate_coverage|\n\nPython package to generate ugly real-looking csvs.\n\nUsage example\n-----------------------------------\nTo ruin a CSV you can use the following snippet.\nIn the following example we use a tool to generate\na random sanitized csv.\n\n.. code:: Python\n\n    from random_csv_generator import random_csv\n    from ugly_csv_generator import uglify\n\n    csv = random_csv(5) # CSV with 5 lines\n    csv = csv[csv.columns[:3]] # We will use only the first 3 columns for this example\n    ugly = uglify(csv)\n\nThe initial CSV will look something like:\n\n+----------------+---------------+-----------+\n| region         | province      | surname   |\n+================+===============+===========+\n| Puglia         | Lecce         | Righetti  |\n+----------------+---------------+-----------+\n| Campania       | Napoli        | Govoni    |\n+----------------+---------------+-----------+\n| Emilia Romagna | Reggio Emilia | Vichi     |\n+----------------+---------------+-----------+\n| Lombardia      | Lecco         | Costa     |\n+----------------+---------------+-----------+\n| Umbria         | Perugia       | Fabbro    |\n+----------------+---------------+-----------+\n\nThe result uglified CSV will look something like this:\n\n+----------+----------------+----------+---------------+----------+-----+\n| 0        | 1              | 2        | 3             | 4        |   5 |\n+==========+================+==========+===============+==========+=====+\n| nan      | nan            | nan      | nan           | nan      | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| region-1 | region         | region 0 | province      | surname  | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | nan            | nan      | nan           | nan      | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | nan            | nan      | nan           | nan      | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | nan            | nan      | nan           | nan      | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | region         | nan      | province      | surname  | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | region         | nan      | province      | surname  | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | Puglia         | nan      | Lecce         | Righetti | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | Campania       | nan      | Napoli        | Govoni   | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | Emilia Romagna | nan      | Reggio Emilia | Vichi    | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | Lombardia      | nan      | Lecco         | Costa    | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | Umbria         | nan      | Perugia       | Fabbro   | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | nan            | nan      | nan           | nan      | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | nan            | nan      | nan           | nan      | nan |\n+----------+----------------+----------+---------------+----------+-----+\n\nThe uglify method offers numerous keyword parameters,\nsince the library is currently in quick evolution\nif you are interested in them just check out the\ncode documentation.\n\n\n.. |travis| image:: https://travis-ci.org/LucaCappelletti94/ugly_csv_generator.png\n   :target: https://travis-ci.org/LucaCappelletti94/ugly_csv_generator\n   :alt: Travis CI build\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_ugly_csv_generator&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_ugly_csv_generator\n    :alt: SonarCloud Quality\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_ugly_csv_generator&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_ugly_csv_generator\n    :alt: SonarCloud Maintainability\n\n.. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_ugly_csv_generator&metric=coverage\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_ugly_csv_generator\n    :alt: SonarCloud Coverage\n\n.. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/ugly_csv_generator/badge.svg?branch=master\n    :target: https://coveralls.io/github/LucaCappelletti94/ugly_csv_generator?branch=master\n    :alt: Coveralls Coverage\n\n.. |pip| image:: https://badge.fury.io/py/ugly-csv-generator.svg\n    :target: https://badge.fury.io/py/ugly-csv-generator\n    :alt: Pypi project\n\n.. |downloads| image:: https://pepy.tech/badge/ugly-csv-generator\n    :target: https://pepy.tech/badge/ugly-csv-generator\n    :alt: Pypi total project downloads\n\n.. |codacy| image:: https://api.codacy.com/project/badge/Grade/8fc44d07742a47c1b77123b532f6f264\n    :target: https://www.codacy.com/manual/LucaCappelletti94/ugly_csv_generator?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LucaCappelletti94/ugly_csv_generator&amp;utm_campaign=Badge_Grade\n    :alt: Codacy Maintainability\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/43f6565c8e36fd609252/maintainability\n    :target: https://codeclimate.com/github/LucaCappelletti94/ugly_csv_generator/maintainability\n    :alt: Maintainability\n\n.. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/43f6565c8e36fd609252/test_coverage\n    :target: https://codeclimate.com/github/LucaCappelletti94/ugly_csv_generator/test_coverage\n    :alt: Code Climate Coverate", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LucaCappelletti94/ugly_csv_generator", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ugly-csv-generator", "package_url": "https://pypi.org/project/ugly-csv-generator/", "platform": "", "project_url": "https://pypi.org/project/ugly-csv-generator/", "project_urls": {"Homepage": "https://github.com/LucaCappelletti94/ugly_csv_generator"}, "release_url": "https://pypi.org/project/ugly-csv-generator/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Python package to generate ugly real-looking csvs.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/LucaCappelletti94/ugly_csv_generator\" rel=\"nofollow\"><img alt=\"Travis CI build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/725de670a2ca5200cf494fd5667c45ecaf975b86/68747470733a2f2f7472617669732d63692e6f72672f4c75636143617070656c6c6574746939342f75676c795f6373765f67656e657261746f722e706e67\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_ugly_csv_generator\" rel=\"nofollow\"><img alt=\"SonarCloud Quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/42ab3da149cc253d7354a79dbe86354234d6053a/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f75676c795f6373765f67656e657261746f72266d65747269633d616c6572745f737461747573\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_ugly_csv_generator\" rel=\"nofollow\"><img alt=\"SonarCloud Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88bba923abbbffd33c22202e7f814a22199b9ddd/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f75676c795f6373765f67656e657261746f72266d65747269633d7371616c655f726174696e67\"></a> <a href=\"https://www.codacy.com/manual/LucaCappelletti94/ugly_csv_generator?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=LucaCappelletti94/ugly_csv_generator&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0c0a9a9dc0d5a98c94980fc0f81bef89a3ab9b47/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3866633434643037373432613437633162373731323362353332663666323634\"></a>\n<a href=\"https://codeclimate.com/github/LucaCappelletti94/ugly_csv_generator/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a544dd24092591311771e89f8ecdbe28fb8aa5e9/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f34336636353635633865333666643630393235322f6d61696e7461696e6162696c697479\"></a> <a href=\"https://badge.fury.io/py/ugly-csv-generator\" rel=\"nofollow\"><img alt=\"Pypi project\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12ed6bc4653d6342ab9393ab5f043255b7e3c766/68747470733a2f2f62616467652e667572792e696f2f70792f75676c792d6373762d67656e657261746f722e737667\"></a> <a href=\"https://pepy.tech/badge/ugly-csv-generator\" rel=\"nofollow\"><img alt=\"Pypi total project downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5088ea149045bef1d5e820a4e726b7ea63993c5f/68747470733a2f2f706570792e746563682f62616467652f75676c792d6373762d67656e657261746f72\"></a></p>\n<p>Python package to automatically uglify CSVs. Why?\nTo improve the testing capabilities of pipelines that\nmust be able to support strongly malformed input data.</p>\n<p>All the malformation automated here are non-destructive,\nmeaning they introduce confusion in the data but do not\nany information.</p>\n<p><strong>The inspiration for the automated malformation are\nall from real-life CSVs (sigh)</strong></p>\n<p>Humans will always surprise us with the ever-new\nmalformed input data, but hey, we can try to best\nruining the test CSVs!</p>\n<div id=\"how-do-i-install-this-package\">\n<h2>How do I install this package?</h2>\n<p>As usual, just download it using pip:</p>\n<pre>pip install ugly_csv_generator\n</pre>\n</div>\n<div id=\"tests-coverage\">\n<h2>Tests Coverage</h2>\n<p>Since some software handling coverages sometime\nget slightly different results, here\u2019s three of them:</p>\n<p><a href=\"https://coveralls.io/github/LucaCappelletti94/ugly_csv_generator?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f3f5c1c90b76f66fccc0c683657bca23b9a22ea/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4c75636143617070656c6c6574746939342f75676c795f6373765f67656e657261746f722f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_ugly_csv_generator\" rel=\"nofollow\"><img alt=\"SonarCloud Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72d56f210feb5b6863a900109d6981fc2b1cad5d/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f75676c795f6373765f67656e657261746f72266d65747269633d636f766572616765\"></a> <a href=\"https://codeclimate.com/github/LucaCappelletti94/ugly_csv_generator/test_coverage\" rel=\"nofollow\"><img alt=\"Code Climate Coverate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5f557299e92d3d1b0ddae56e70e129420f8286a/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f34336636353635633865333666643630393235322f746573745f636f766572616765\"></a></p>\n<p>Python package to generate ugly real-looking csvs.</p>\n</div>\n<div id=\"usage-example\">\n<h2>Usage example</h2>\n<p>To ruin a CSV you can use the following snippet.\nIn the following example we use a tool to generate\na random sanitized csv.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">random_csv_generator</span> <span class=\"kn\">import</span> <span class=\"n\">random_csv</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ugly_csv_generator</span> <span class=\"kn\">import</span> <span class=\"n\">uglify</span>\n\n<span class=\"n\">csv</span> <span class=\"o\">=</span> <span class=\"n\">random_csv</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span> <span class=\"c1\"># CSV with 5 lines</span>\n<span class=\"n\">csv</span> <span class=\"o\">=</span> <span class=\"n\">csv</span><span class=\"p\">[</span><span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">[:</span><span class=\"mi\">3</span><span class=\"p\">]]</span> <span class=\"c1\"># We will use only the first 3 columns for this example</span>\n<span class=\"n\">ugly</span> <span class=\"o\">=</span> <span class=\"n\">uglify</span><span class=\"p\">(</span><span class=\"n\">csv</span><span class=\"p\">)</span>\n</pre>\n<p>The initial CSV will look something like:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>region</th>\n<th>province</th>\n<th>surname</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Puglia</td>\n<td>Lecce</td>\n<td>Righetti</td>\n</tr>\n<tr><td>Campania</td>\n<td>Napoli</td>\n<td>Govoni</td>\n</tr>\n<tr><td>Emilia Romagna</td>\n<td>Reggio Emilia</td>\n<td>Vichi</td>\n</tr>\n<tr><td>Lombardia</td>\n<td>Lecco</td>\n<td>Costa</td>\n</tr>\n<tr><td>Umbria</td>\n<td>Perugia</td>\n<td>Fabbro</td>\n</tr>\n</tbody>\n</table>\n<p>The result uglified CSV will look something like this:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n</tr>\n<tr><td>region-1</td>\n<td>region</td>\n<td>region 0</td>\n<td>province</td>\n<td>surname</td>\n<td>nan</td>\n</tr>\n<tr><td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n</tr>\n<tr><td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n</tr>\n<tr><td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n</tr>\n<tr><td>nan</td>\n<td>region</td>\n<td>nan</td>\n<td>province</td>\n<td>surname</td>\n<td>nan</td>\n</tr>\n<tr><td>nan</td>\n<td>region</td>\n<td>nan</td>\n<td>province</td>\n<td>surname</td>\n<td>nan</td>\n</tr>\n<tr><td>nan</td>\n<td>Puglia</td>\n<td>nan</td>\n<td>Lecce</td>\n<td>Righetti</td>\n<td>nan</td>\n</tr>\n<tr><td>nan</td>\n<td>Campania</td>\n<td>nan</td>\n<td>Napoli</td>\n<td>Govoni</td>\n<td>nan</td>\n</tr>\n<tr><td>nan</td>\n<td>Emilia Romagna</td>\n<td>nan</td>\n<td>Reggio Emilia</td>\n<td>Vichi</td>\n<td>nan</td>\n</tr>\n<tr><td>nan</td>\n<td>Lombardia</td>\n<td>nan</td>\n<td>Lecco</td>\n<td>Costa</td>\n<td>nan</td>\n</tr>\n<tr><td>nan</td>\n<td>Umbria</td>\n<td>nan</td>\n<td>Perugia</td>\n<td>Fabbro</td>\n<td>nan</td>\n</tr>\n<tr><td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n</tr>\n<tr><td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n<td>nan</td>\n</tr>\n</tbody>\n</table>\n<p>The uglify method offers numerous keyword parameters,\nsince the library is currently in quick evolution\nif you are interested in them just check out the\ncode documentation.</p>\n</div>\n\n          </div>"}, "last_serial": 6706298, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9f0aa7dc14d223aaf747dfd00584b42f", "sha256": "07b9c91d0f05a0c22cde99b9f7909bc0fec97f39009697e0acc4d70c03908f8a"}, "downloads": -1, "filename": "ugly_csv_generator-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9f0aa7dc14d223aaf747dfd00584b42f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6149, "upload_time": "2020-02-26T16:07:49", "upload_time_iso_8601": "2020-02-26T16:07:49.696218Z", "url": "https://files.pythonhosted.org/packages/2d/f1/c48f935844daeecb0be9b9f822f6cf1eeb4d34bbd3be3f5016c2b2866fe1/ugly_csv_generator-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "cad2a70f02c7abc52ee177c9427de730", "sha256": "2ed32ee16165b384b929425e5a19d6c4092ec8dc3ab86988ebe1c7e3b7a6edcc"}, "downloads": -1, "filename": "ugly_csv_generator-1.0.1.tar.gz", "has_sig": false, "md5_digest": "cad2a70f02c7abc52ee177c9427de730", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8233, "upload_time": "2020-02-26T21:23:18", "upload_time_iso_8601": "2020-02-26T21:23:18.608267Z", "url": "https://files.pythonhosted.org/packages/b1/9d/1597ef2b9600225a673f6eac1e5e0cdf61caba59689347db4568bb89bc2c/ugly_csv_generator-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "f2d5764e9b95d16511c26df4ae4f6828", "sha256": "207a5067dc32774f998b3b643c9ccb6e5f2a74e9ed9a3852b63531b09a7baf7d"}, "downloads": -1, "filename": "ugly_csv_generator-1.0.2.tar.gz", "has_sig": false, "md5_digest": "f2d5764e9b95d16511c26df4ae4f6828", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8315, "upload_time": "2020-02-26T21:50:29", "upload_time_iso_8601": "2020-02-26T21:50:29.329846Z", "url": "https://files.pythonhosted.org/packages/cc/1a/138358fd8207e8af142063717effde7d8df7ce209d8e5e2afb2df5301fcc/ugly_csv_generator-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f2d5764e9b95d16511c26df4ae4f6828", "sha256": "207a5067dc32774f998b3b643c9ccb6e5f2a74e9ed9a3852b63531b09a7baf7d"}, "downloads": -1, "filename": "ugly_csv_generator-1.0.2.tar.gz", "has_sig": false, "md5_digest": "f2d5764e9b95d16511c26df4ae4f6828", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8315, "upload_time": "2020-02-26T21:50:29", "upload_time_iso_8601": "2020-02-26T21:50:29.329846Z", "url": "https://files.pythonhosted.org/packages/cc/1a/138358fd8207e8af142063717effde7d8df7ce209d8e5e2afb2df5301fcc/ugly_csv_generator-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:41:31 2020"}