{"info": {"author": "Victor Kovtun", "author_email": "hellysmile@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: AsyncIO", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "aiocassandra\n============\n\n:info: Simple threaded cassandra wrapper for asyncio\n\n.. image:: https://travis-ci.org/aio-libs/aiocassandra.svg?branch=master\n    :target: https://travis-ci.org/aio-libs/aiocassandra\n\n.. image:: https://img.shields.io/pypi/v/aiocassandra.svg\n    :target: https://pypi.python.org/pypi/aiocassandra\n\n.. image:: https://codecov.io/gh/aio-libs/aiocassandra/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/aio-libs/aiocassandra\n\nInstallation\n------------\n\n.. code-block:: shell\n\n    pip install aiocassandra\n\nUsage\n-----\n\n.. code-block:: python\n\n    import asyncio\n\n    from aiocassandra import aiosession\n    from cassandra.cluster import Cluster\n    from cassandra.query import SimpleStatement\n\n    # connection is blocking call\n    cluster = Cluster()\n    # aiocassandra uses executor_threads to talk to cassndra driver\n    # https://datastax.github.io/python-driver/api/cassandra/cluster.html?highlight=executor_threads\n    session = cluster.connect()\n\n\n    async def main():\n        # patches and adds `execute_future`, `execute_futures` and `prepare_future`\n        # to `cassandra.cluster.Session`\n        aiosession(session)\n\n        # best way is to use cassandra prepared statements\n        # https://cassandra-zone.com/prepared-statements/\n        # https://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Session.prepare\n        # try to create them once on application init\n        query = session.prepare('SELECT now() FROM system.local;')\n\n        # if non-blocking prepared statements is really needed:\n        query = await session.prepare_future('SELECT now() FROM system.local;')\n\n        print(await session.execute_future(query))\n\n        # pagination is also supported\n        query = 'SELECT * FROM system.size_estimates;'\n        statement = SimpleStatement(query, fetch_size=100)\n\n        # don't miss *s* (execute_futureS)\n        async with session.execute_futures(statement) as paginator:\n            async for row in paginator:\n                print(row)\n\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n    cluster.shutdown()\n    loop.close()\n\nPython 3.5+ is required\n\nThanks\n------\n\nThe library was donated by `Ocean S.A. <https://ocean.io/>`_\n\nThanks to the company for contribution.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aio-libs/aiocassandra", "keywords": "cassandra,asyncio", "license": "", "maintainer": "", "maintainer_email": "", "name": "aiocassandra", "package_url": "https://pypi.org/project/aiocassandra/", "platform": "", "project_url": "https://pypi.org/project/aiocassandra/", "project_urls": {"Homepage": "https://github.com/aio-libs/aiocassandra"}, "release_url": "https://pypi.org/project/aiocassandra/2.0.1/", "requires_dist": ["cassandra-driver", "async-generator"], "requires_python": ">=3.4.0", "summary": "Simple threaded cassandra wrapper for asyncio", "version": "2.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>info:</th><td>Simple threaded cassandra wrapper for asyncio</td>\n</tr>\n</tbody>\n</table>\n<a href=\"https://travis-ci.org/aio-libs/aiocassandra\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/aio-libs/aiocassandra.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70b3fb2e5f36331f863c97e480cafc187718360c/68747470733a2f2f7472617669732d63692e6f72672f61696f2d6c6962732f61696f63617373616e6472612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/aiocassandra\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/aiocassandra.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/135ade1cda30a45df7b928805cc4f20b7f8d55d4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f63617373616e6472612e737667\"></a>\n<a href=\"https://codecov.io/gh/aio-libs/aiocassandra\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/aio-libs/aiocassandra/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e95ab29a017e7a0b78483912595bf30cbf76378/68747470733a2f2f636f6465636f762e696f2f67682f61696f2d6c6962732f61696f63617373616e6472612f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install aiocassandra\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiocassandra</span> <span class=\"kn\">import</span> <span class=\"n\">aiosession</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cassandra.cluster</span> <span class=\"kn\">import</span> <span class=\"n\">Cluster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cassandra.query</span> <span class=\"kn\">import</span> <span class=\"n\">SimpleStatement</span>\n\n<span class=\"c1\"># connection is blocking call</span>\n<span class=\"n\">cluster</span> <span class=\"o\">=</span> <span class=\"n\">Cluster</span><span class=\"p\">()</span>\n<span class=\"c1\"># aiocassandra uses executor_threads to talk to cassndra driver</span>\n<span class=\"c1\"># https://datastax.github.io/python-driver/api/cassandra/cluster.html?highlight=executor_threads</span>\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">cluster</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># patches and adds `execute_future`, `execute_futures` and `prepare_future`</span>\n    <span class=\"c1\"># to `cassandra.cluster.Session`</span>\n    <span class=\"n\">aiosession</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># best way is to use cassandra prepared statements</span>\n    <span class=\"c1\"># https://cassandra-zone.com/prepared-statements/</span>\n    <span class=\"c1\"># https://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Session.prepare</span>\n    <span class=\"c1\"># try to create them once on application init</span>\n    <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">prepare</span><span class=\"p\">(</span><span class=\"s1\">'SELECT now() FROM system.local;'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># if non-blocking prepared statements is really needed:</span>\n    <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">prepare_future</span><span class=\"p\">(</span><span class=\"s1\">'SELECT now() FROM system.local;'</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">execute_future</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># pagination is also supported</span>\n    <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"s1\">'SELECT * FROM system.size_estimates;'</span>\n    <span class=\"n\">statement</span> <span class=\"o\">=</span> <span class=\"n\">SimpleStatement</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">fetch_size</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># don't miss *s* (execute_futureS)</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">execute_futures</span><span class=\"p\">(</span><span class=\"n\">statement</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">paginator</span><span class=\"p\">:</span>\n        <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">paginator</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n<span class=\"n\">cluster</span><span class=\"o\">.</span><span class=\"n\">shutdown</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<p>Python 3.5+ is required</p>\n</div>\n<div id=\"thanks\">\n<h2>Thanks</h2>\n<p>The library was donated by <a href=\"https://ocean.io/\" rel=\"nofollow\">Ocean S.A.</a></p>\n<p>Thanks to the company for contribution.</p>\n</div>\n\n          </div>"}, "last_serial": 3925842, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9672fadb33cf91ded624c69667fabc9c", "sha256": "504923c1f5ddcf6fb65b55101c1ae72fa8914664d7fc803121cc2890489ca410"}, "downloads": -1, "filename": "aiocassandra-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9672fadb33cf91ded624c69667fabc9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3307, "upload_time": "2017-01-29T18:42:16", "upload_time_iso_8601": "2017-01-29T18:42:16.136883Z", "url": "https://files.pythonhosted.org/packages/db/f5/fdadc3d97128247e8097843ba93c4ee168cd94c1205731ac1064694f608c/aiocassandra-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "d5ab85f1fba4cc02a4f598f0301b0402", "sha256": "d159229a6ee15ee156d651e9659d9e3b232f10711afb6da0692952c7c09fa879"}, "downloads": -1, "filename": "aiocassandra-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d5ab85f1fba4cc02a4f598f0301b0402", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3314, "upload_time": "2017-01-29T18:44:09", "upload_time_iso_8601": "2017-01-29T18:44:09.483105Z", "url": "https://files.pythonhosted.org/packages/65/8c/7a04b3f8f0f1ccfce06a36d4bb45e6978d1de623baba719dfa0fdeae742d/aiocassandra-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "0074c1917a4687ccf0fe1e0fe604f21e", "sha256": "8eed3684bab35c5a49fd038a71faa234afab9dcc3b8505a1e8f4a6b4051f88f2"}, "downloads": -1, "filename": "aiocassandra-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0074c1917a4687ccf0fe1e0fe604f21e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3357, "upload_time": "2017-01-29T19:55:54", "upload_time_iso_8601": "2017-01-29T19:55:54.105633Z", "url": "https://files.pythonhosted.org/packages/5d/df/f58c8f44ce965c61be8a8f456a03cdd9fcb9e17fb4d00000eecc58481aff/aiocassandra-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "4c3e7280e25a424ed7ad26dd358b9cb7", "sha256": "ffeb2d3bbd69d03c8e021d8e2b4bb8edf9890d255acbb04256e29d3525233f6f"}, "downloads": -1, "filename": "aiocassandra-1.0.3.tar.gz", "has_sig": false, "md5_digest": "4c3e7280e25a424ed7ad26dd358b9cb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3424, "upload_time": "2017-03-09T06:41:57", "upload_time_iso_8601": "2017-03-09T06:41:57.122659Z", "url": "https://files.pythonhosted.org/packages/73/32/96d5fcc0b9dddc5ec7122811e3d7aa100f2b81770dfaef54bddcac144cc2/aiocassandra-1.0.3.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "fa888bee5b8044c52b62362f6668de7c", "sha256": "769de08bf9387edfb164b560908329f31bf0d4e8c53cbaf4fb00446b3ae3d2cf"}, "downloads": -1, "filename": "aiocassandra-1.1.0.tar.gz", "has_sig": false, "md5_digest": "fa888bee5b8044c52b62362f6668de7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3553, "upload_time": "2018-02-09T12:02:24", "upload_time_iso_8601": "2018-02-09T12:02:24.598709Z", "url": "https://files.pythonhosted.org/packages/7f/b9/50b307f3f2e58bb7cc4098e2244fddb5f6f9418792499d5641c3d8647704/aiocassandra-1.1.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "15005dca5778e23ba526e370929ec589", "sha256": "d44b927e82cc76fd400cbf60cf5133aa182eea19e45aa6144c0728b426d9415f"}, "downloads": -1, "filename": "aiocassandra-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "15005dca5778e23ba526e370929ec589", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.4.0", "size": 6615, "upload_time": "2018-02-18T21:24:41", "upload_time_iso_8601": "2018-02-18T21:24:41.271617Z", "url": "https://files.pythonhosted.org/packages/8a/53/9e43df0a21dc6a3910f9b7dcb4bc71105ab36102a7183f8e4a6dd0888d65/aiocassandra-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0c15a67d8938d9dc4eeca1572f4f9bd", "sha256": "7cd08b869c0e81e4ef1e94b80f795a1c0bddf3e24aad8960c39e1ae3946a6142"}, "downloads": -1, "filename": "aiocassandra-2.0.0.tar.gz", "has_sig": false, "md5_digest": "e0c15a67d8938d9dc4eeca1572f4f9bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.0", "size": 5032, "upload_time": "2018-02-18T21:24:42", "upload_time_iso_8601": "2018-02-18T21:24:42.676188Z", "url": "https://files.pythonhosted.org/packages/c8/fe/44ae1094f623d4fa5d4c1b61d64673d67240256ce895296f00de5e4aa3fa/aiocassandra-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "f0914b49ae67e1fb9b59b8d7aa54743b", "sha256": "bd9b95c60e0c729266041c4f5407ccf07c647f945bf2bfdb889989222ba14578"}, "downloads": -1, "filename": "aiocassandra-2.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f0914b49ae67e1fb9b59b8d7aa54743b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.4.0", "size": 6617, "upload_time": "2018-02-19T10:46:34", "upload_time_iso_8601": "2018-02-19T10:46:34.434627Z", "url": "https://files.pythonhosted.org/packages/67/6a/86bcb47ec5283f7076500d0ec7d6a78abbdbc10223cee59a2fb49984886d/aiocassandra-2.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50d1a84b808c066c98d0e0cb309af54e", "sha256": "82a91c8766d9e23b23775ed14eb6322a6f0bc22ddcc2babb17a69e31b46467a9"}, "downloads": -1, "filename": "aiocassandra-2.0.1.tar.gz", "has_sig": false, "md5_digest": "50d1a84b808c066c98d0e0cb309af54e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.0", "size": 5035, "upload_time": "2018-02-19T10:46:36", "upload_time_iso_8601": "2018-02-19T10:46:36.521694Z", "url": "https://files.pythonhosted.org/packages/87/44/5c0e978ad16ba1d75c02dd5cb6030833b42cc248b11bf15fdd82b0544951/aiocassandra-2.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f0914b49ae67e1fb9b59b8d7aa54743b", "sha256": "bd9b95c60e0c729266041c4f5407ccf07c647f945bf2bfdb889989222ba14578"}, "downloads": -1, "filename": "aiocassandra-2.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f0914b49ae67e1fb9b59b8d7aa54743b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.4.0", "size": 6617, "upload_time": "2018-02-19T10:46:34", "upload_time_iso_8601": "2018-02-19T10:46:34.434627Z", "url": "https://files.pythonhosted.org/packages/67/6a/86bcb47ec5283f7076500d0ec7d6a78abbdbc10223cee59a2fb49984886d/aiocassandra-2.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50d1a84b808c066c98d0e0cb309af54e", "sha256": "82a91c8766d9e23b23775ed14eb6322a6f0bc22ddcc2babb17a69e31b46467a9"}, "downloads": -1, "filename": "aiocassandra-2.0.1.tar.gz", "has_sig": false, "md5_digest": "50d1a84b808c066c98d0e0cb309af54e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.0", "size": 5035, "upload_time": "2018-02-19T10:46:36", "upload_time_iso_8601": "2018-02-19T10:46:36.521694Z", "url": "https://files.pythonhosted.org/packages/87/44/5c0e978ad16ba1d75c02dd5cb6030833b42cc248b11bf15fdd82b0544951/aiocassandra-2.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:44 2020"}