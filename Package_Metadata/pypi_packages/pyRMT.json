{"info": {"author": "Gregory Giecold", "author_email": "g.giecold@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Mathematics"], "description": "# pyRMT\nPython for Random Matrix Theory. Implements several cleaning schemes for noisy correlation matrices, \nincluding the optimal shrinkage, rotationally-invariant estimator\nto an underlying correlation matrix (as proposed by Joel Bun, \nJean-Philippe Bouchaud, Marc Potters and colleagues).\n\nSuch cleaned correlation matrix are known to improve factor-decomposition\nvia Principal Component Analysis (PCA) and could be of relevance in a variety \nof contexts, including computational biology.\n\nCleaning schemes also result in much improved out-of-sample risk\nof Markowitz optimal portfolios, as established over the years\nin several papers by Jean-Philippe Bouchaud, Marc Potters and collaborators.\n\nSome cleaning schemes can be easily adapted from the various shrinkage\nestimators implemented in the sklearn.covariance module \n(see the various publications by O. Ledoit and M. Wolf listed below).\n\nIn addition, it might make sense to perform an empirical estimate\nof a correlation matrix robust to outliers before proceeding with\nthe cleaning schemes of the present module. Some of those robust estimates\nhave been implemented in the sklearn.covariance module as well. \n\n\nReferences\n----------\n* \"DISTRIBUTION OF EIGENVALUES FOR SOME SETS OF RANDOM MATRICES\",\n  V. A. Marcenko and L. A. Pastur, Mathematics of the USSR-Sbornik, Vol. 1 (4), pp 457-483\n* \"A well-conditioned estimator for large-dimensional covariance matrices\",\n  O. Ledoit and M. Wolf, Journal of Multivariate Analysis, Vol. 88 (2), pp 365-411\n* \"Improved estimation of the covariance matrix of stock returns with \"\n  \"an application to portfolio selection\",\n  O. Ledoit and M. Wolf, Journal of Empirical Finance, Vol. 10 (5), pp 603-621\n* \"Financial Applications of Random Matrix Theory: a short review\",\n  J.-P. Bouchaud and M. Potters, arXiv: 0910.1205 [q-fin.ST]\n* \"Eigenvectors of some large sample covariance matrix ensembles\",\n  O. Ledoit and S. Peche, Probability Theory and Related Fields, Vol. 151 (1), pp 233-264\n* \"NONLINEAR SHRINKAGE ESTIMATION OF LARGE-DIMENSIONAL COVARIANCE MATRICES\",\n  O. Ledoit and M. Wolf, The Annals of Statistics, Vol. 40 (2), pp 1024-1060 \n* \"Rotational invariant estimator for general noisy matrices\",\n  J. Bun, R. Allez, J.-P. Bouchaud and M. Potters, arXiv: 1502.06736 [cond-mat.stat-mech]\n* \"Cleaning large Correlation Matrices: tools from Random Matrix Theory\",\n  J. Bun, J.-P. Bouchaud and M. Potters, arXiv: 1610.08104 [cond-mat.stat-mech]\n  \nInstalling from PyPI\n--------------------\n\nTry\n\n```pip install pyRMT```\n\nTo install manually from the git repo, try this:\n\n```python setup.py install```\n\nThe pyRMT codebase supports Python 2 and 3.\n\nUsage\n-----\n\nFor more information on cleaning your correlation matrices, please refer to the docstrings to the various schemes implemented within pyRMT.\n  \nAttribution\n-----------\n\nIf you happen to use pyRMT in your work or research, please cite its GitHub repository:\n\nG. Giecold, pyRMT, (2017), GitHub repository, https://github.com/GGiecold/pyRMT\n\nThe respective BibTex entry is\n\n```@misc{GregoryGiecold2017, author = {G. Giecold}, title = {pyRMT}, year = {2017}, publisher = {GitHub}, journal = {GitHub repository}, howpublished = {\\url{https://github.com/GGiecold/pyRMT}}}```\n\n\nLicense\n-------\n\nCopyright 2017-2022 Gregory Giecold and contributors.\n\npyRMT is free software made available under the MIT License. For details see the LICENSE file.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/GGiecold/pyRMT", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/GGiecold/pyRMT", "keywords": "applied-mathematics cleaning correlation-matrices noise-reduction random-matrix-theory", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "pyRMT", "package_url": "https://pypi.org/project/pyRMT/", "platform": "ALL", "project_url": "https://pypi.org/project/pyRMT/", "project_urls": {"Download": "https://github.com/GGiecold/pyRMT", "Homepage": "https://github.com/GGiecold/pyRMT"}, "release_url": "https://pypi.org/project/pyRMT/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Python for Random Matrix Theory: cleaning schemes for noisy correlation matrices", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># pyRMT\nPython for Random Matrix Theory. Implements several cleaning schemes for noisy correlation matrices,\nincluding the optimal shrinkage, rotationally-invariant estimator\nto an underlying correlation matrix (as proposed by Joel Bun,\nJean-Philippe Bouchaud, Marc Potters and colleagues).</p>\n<p>Such cleaned correlation matrix are known to improve factor-decomposition\nvia Principal Component Analysis (PCA) and could be of relevance in a variety\nof contexts, including computational biology.</p>\n<p>Cleaning schemes also result in much improved out-of-sample risk\nof Markowitz optimal portfolios, as established over the years\nin several papers by Jean-Philippe Bouchaud, Marc Potters and collaborators.</p>\n<p>Some cleaning schemes can be easily adapted from the various shrinkage\nestimators implemented in the sklearn.covariance module\n(see the various publications by O. Ledoit and M. Wolf listed below).</p>\n<p>In addition, it might make sense to perform an empirical estimate\nof a correlation matrix robust to outliers before proceeding with\nthe cleaning schemes of the present module. Some of those robust estimates\nhave been implemented in the sklearn.covariance module as well.</p>\n<div id=\"references\">\n<h2>References</h2>\n<ul>\n<li>\u201cDISTRIBUTION OF EIGENVALUES FOR SOME SETS OF RANDOM MATRICES\u201d,\nV. A. Marcenko and L. A. Pastur, Mathematics of the USSR-Sbornik, Vol. 1 (4), pp 457-483</li>\n<li>\u201cA well-conditioned estimator for large-dimensional covariance matrices\u201d,\nO. Ledoit and M. Wolf, Journal of Multivariate Analysis, Vol. 88 (2), pp 365-411</li>\n<li>\u201cImproved estimation of the covariance matrix of stock returns with \u201d\n\u201can application to portfolio selection\u201d,\nO. Ledoit and M. Wolf, Journal of Empirical Finance, Vol. 10 (5), pp 603-621</li>\n<li>\u201cFinancial Applications of Random Matrix Theory: a short review\u201d,\nJ.-P. Bouchaud and M. Potters, arXiv: 0910.1205 [q-fin.ST]</li>\n<li>\u201cEigenvectors of some large sample covariance matrix ensembles\u201d,\nO. Ledoit and S. Peche, Probability Theory and Related Fields, Vol. 151 (1), pp 233-264</li>\n<li>\u201cNONLINEAR SHRINKAGE ESTIMATION OF LARGE-DIMENSIONAL COVARIANCE MATRICES\u201d,\nO. Ledoit and M. Wolf, The Annals of Statistics, Vol. 40 (2), pp 1024-1060</li>\n<li>\u201cRotational invariant estimator for general noisy matrices\u201d,\nJ. Bun, R. Allez, J.-P. Bouchaud and M. Potters, arXiv: 1502.06736 [cond-mat.stat-mech]</li>\n<li>\u201cCleaning large Correlation Matrices: tools from Random Matrix Theory\u201d,\nJ. Bun, J.-P. Bouchaud and M. Potters, arXiv: 1610.08104 [cond-mat.stat-mech]</li>\n</ul>\n</div>\n<div id=\"installing-from-pypi\">\n<h2>Installing from PyPI</h2>\n<p>Try</p>\n<p><tt>`pip install pyRMT`</tt></p>\n<p>To install manually from the git repo, try this:</p>\n<p><tt>`python setup.py install`</tt></p>\n<p>The pyRMT codebase supports Python 2 and 3.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>For more information on cleaning your correlation matrices, please refer to the docstrings to the various schemes implemented within pyRMT.</p>\n</div>\n<div id=\"attribution\">\n<h2>Attribution</h2>\n<p>If you happen to use pyRMT in your work or research, please cite its GitHub repository:</p>\n<ol>\n<li>Giecold, pyRMT, (2017), GitHub repository, <a href=\"https://github.com/GGiecold/pyRMT\" rel=\"nofollow\">https://github.com/GGiecold/pyRMT</a></li>\n</ol>\n<p>The respective BibTex entry is</p>\n<p><tt>`@misc{GregoryGiecold2017, author = {G. Giecold}, title = {pyRMT}, year = {2017}, publisher = {GitHub}, journal = {GitHub repository}, howpublished = <span class=\"pre\">{\\url{https://github.com/GGiecold/pyRMT}}}`</span></tt></p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright 2017-2022 Gregory Giecold and contributors.</p>\n<p>pyRMT is free software made available under the MIT License. For details see the LICENSE file.</p>\n</div>\n\n          </div>"}, "last_serial": 2951377, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5718a367f4ee2cc144f9ff5be386b889", "sha256": "1742956f6c42c17f2087f70f9d548b698cfedb049106fb126e66957ae06fa9ca"}, "downloads": -1, "filename": "pyRMT-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5718a367f4ee2cc144f9ff5be386b889", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7790, "upload_time": "2017-06-15T05:07:46", "upload_time_iso_8601": "2017-06-15T05:07:46.995696Z", "url": "https://files.pythonhosted.org/packages/68/f8/ae80bc6f1c587d5c1fa966d7620dc8f60f890006b7c9debc3a454fb5d7ae/pyRMT-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5718a367f4ee2cc144f9ff5be386b889", "sha256": "1742956f6c42c17f2087f70f9d548b698cfedb049106fb126e66957ae06fa9ca"}, "downloads": -1, "filename": "pyRMT-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5718a367f4ee2cc144f9ff5be386b889", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7790, "upload_time": "2017-06-15T05:07:46", "upload_time_iso_8601": "2017-06-15T05:07:46.995696Z", "url": "https://files.pythonhosted.org/packages/68/f8/ae80bc6f1c587d5c1fa966d7620dc8f60f890006b7c9debc3a454fb5d7ae/pyRMT-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:45 2020"}