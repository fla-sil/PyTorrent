{"info": {"author": "Tom Ritchford", "author_email": "tom@swirly.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "``import_all``: Automatically import everything\n-------------------------------------------------------------\n\nA three-line unit test in your project automatically imports\nevery Python file and module in it, optionally testing for warnings.\n\nWhy?\n=====\n\nNot every file is covered by unit tests; and unit tests won't report any new\nwarnings that occur.\n\n``import_all`` is a single-file library with a unit test that automatically\nimports every Python file and module in your project.\n\nI drop ``include_all`` into each new project.  It takes seconds, it inevitably\ncatches lots of dumb problems early, and it requires no maintenance.\n\n\nHow to use ``import_all``\n==============================\n\nInstall it with ``pip install import_all``, and use it by adding\n`this tiny file <https://github.com/rec/import_all/blob/master/all_test.py>`_\n(`raw <https://raw.githubusercontent.com/rec/import_all/master/all_test.py>`_)\nanywhere in a project - it looks like this:\n\n.. code-block:: python\n\n    import import_all\n\n\n    class ImportAllTest(import_all.ImportAllTest):\n        pass\n\nand most of the time that's all you need.\n\nOverriding properties\n=============================\n\nImportAllTest has eight properties that can be overridden.\n\n  * ALL_SUBDIRECTORIES: Whether to search all subdirectories\n  * CATCH_EXCEPTIONS: Catch all exceptions and report at the end\n  * EXCLUDE: Which modules to exclude\n  * EXPECTED_TO_FAIL: Which modules are expected to fail\n  * INCLUDE: Which modules to exclude\n  * PROJECT_PATHS: Roots for searching subdirectories\n  * SKIP_PREFIXES: Skip subdirectories that start with these prefixes\n  * WARNINGS_ACTION: What to do on warnings\n\nFull documentation for each property is `here\n<https://github.com/rec/import_all/blob/master/import_all.py#L18-L133>`_.\n\nTo permanently override a test property, set it in the derived class, like\nthis:\n\n.. code-block:: python\n\n    import import_all\n\n\n    class ImportAllTest(import_all.ImportAllTest):\n        WARNINGS_ACTION = 'error'\n\n\nTo temporarily override a test property, set an environment variable before\nrunnning the test, like this:\n\n.. code-block:: bash\n\n    $ _IMPORT_ALL_WARNINGS_ACTION=error pytest\n\nUsing ``import_all.py`` as a standalone program\n\nThe file ``import_all.py`` is executable and is installed in the path by\n``pip``.  You can use it on projects that you are evaluating or debugging\nlike this:\n\n.. code-block:: bash\n\n    $ import_all.py [directory ..directory]\n\nwhere if no directory is specified it uses the current directory.\n\nYou can use environment variables to set properties as above and for convenience\nthere are also command line flags for each property, so you can write:\n\n.. code-block:: bash\n\n    $ import_all.py --catch_exceptions --all_directories --exclude=foo/bar\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rec/import_all", "keywords": "testing", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "import_all", "package_url": "https://pypi.org/project/import_all/", "platform": "", "project_url": "https://pypi.org/project/import_all/", "project_urls": {"Homepage": "https://github.com/rec/import_all"}, "release_url": "https://pypi.org/project/import_all/0.9.5/", "requires_dist": null, "requires_python": "", "summary": "Try to import all modules below a given root", "version": "0.9.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A three-line unit test in your project automatically imports\nevery Python file and module in it, optionally testing for warnings.</p>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>Not every file is covered by unit tests; and unit tests won\u2019t report any new\nwarnings that occur.</p>\n<p><tt>import_all</tt> is a single-file library with a unit test that automatically\nimports every Python file and module in your project.</p>\n<p>I drop <tt>include_all</tt> into each new project.  It takes seconds, it inevitably\ncatches lots of dumb problems early, and it requires no maintenance.</p>\n</div>\n<div id=\"how-to-use-import-all\">\n<h2>How to use <tt>import_all</tt></h2>\n<p>Install it with <tt>pip install import_all</tt>, and use it by adding\n<a href=\"https://github.com/rec/import_all/blob/master/all_test.py\" rel=\"nofollow\">this tiny file</a>\n(<a href=\"https://raw.githubusercontent.com/rec/import_all/master/all_test.py\" rel=\"nofollow\">raw</a>)\nanywhere in a project - it looks like this:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">import_all</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ImportAllTest</span><span class=\"p\">(</span><span class=\"n\">import_all</span><span class=\"o\">.</span><span class=\"n\">ImportAllTest</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>and most of the time that\u2019s all you need.</p>\n</div>\n<div id=\"overriding-properties\">\n<h2>Overriding properties</h2>\n<p>ImportAllTest has eight properties that can be overridden.</p>\n<blockquote>\n<ul>\n<li>ALL_SUBDIRECTORIES: Whether to search all subdirectories</li>\n<li>CATCH_EXCEPTIONS: Catch all exceptions and report at the end</li>\n<li>EXCLUDE: Which modules to exclude</li>\n<li>EXPECTED_TO_FAIL: Which modules are expected to fail</li>\n<li>INCLUDE: Which modules to exclude</li>\n<li>PROJECT_PATHS: Roots for searching subdirectories</li>\n<li>SKIP_PREFIXES: Skip subdirectories that start with these prefixes</li>\n<li>WARNINGS_ACTION: What to do on warnings</li>\n</ul>\n</blockquote>\n<p>Full documentation for each property is <a href=\"https://github.com/rec/import_all/blob/master/import_all.py#L18-L133\" rel=\"nofollow\">here</a>.</p>\n<p>To permanently override a test property, set it in the derived class, like\nthis:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">import_all</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ImportAllTest</span><span class=\"p\">(</span><span class=\"n\">import_all</span><span class=\"o\">.</span><span class=\"n\">ImportAllTest</span><span class=\"p\">):</span>\n    <span class=\"n\">WARNINGS_ACTION</span> <span class=\"o\">=</span> <span class=\"s1\">'error'</span>\n</pre>\n<p>To temporarily override a test property, set an environment variable before\nrunnning the test, like this:</p>\n<pre>$ <span class=\"nv\">_IMPORT_ALL_WARNINGS_ACTION</span><span class=\"o\">=</span>error pytest\n</pre>\n<p>Using <tt>import_all.py</tt> as a standalone program</p>\n<p>The file <tt>import_all.py</tt> is executable and is installed in the path by\n<tt>pip</tt>.  You can use it on projects that you are evaluating or debugging\nlike this:</p>\n<pre>$ import_all.py <span class=\"o\">[</span>directory ..directory<span class=\"o\">]</span>\n</pre>\n<p>where if no directory is specified it uses the current directory.</p>\n<p>You can use environment variables to set properties as above and for convenience\nthere are also command line flags for each property, so you can write:</p>\n<pre>$ import_all.py --catch_exceptions --all_directories --exclude<span class=\"o\">=</span>foo/bar\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5375873, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "945321c0742be5b8bdf4c456f5e24e64", "sha256": "6d69953f5cfd7db7006d164fad8e7b59862df11f5d96339b57e39b80b88d954e"}, "downloads": -1, "filename": "import_all-0.9.0.tar.gz", "has_sig": false, "md5_digest": "945321c0742be5b8bdf4c456f5e24e64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2424, "upload_time": "2019-03-31T16:17:48", "upload_time_iso_8601": "2019-03-31T16:17:48.523482Z", "url": "https://files.pythonhosted.org/packages/b5/07/a93ed86ad3eafcd0dda402fb70c22fdf20f66b865efe3c14c2e944486aed/import_all-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "8f818b618962daf228cdf0dab21c121a", "sha256": "da4be0b8c6c0801c955cc565ebb9e2e39603658fff09e8976e872f6b00207fa8"}, "downloads": -1, "filename": "import_all-0.9.1.tar.gz", "has_sig": false, "md5_digest": "8f818b618962daf228cdf0dab21c121a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2401, "upload_time": "2019-03-31T19:56:05", "upload_time_iso_8601": "2019-03-31T19:56:05.905010Z", "url": "https://files.pythonhosted.org/packages/46/12/2c62aa6252ff9c05ee5f8c891c3449efab3923752e718b53ab646ba37cd6/import_all-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "f4928eb2ab00c8f80ac6dee224af6f4c", "sha256": "feab6baf655a09ac634456857631403023addbe310ca5f5787f0228811e89532"}, "downloads": -1, "filename": "import_all-0.9.2.tar.gz", "has_sig": false, "md5_digest": "f4928eb2ab00c8f80ac6dee224af6f4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2394, "upload_time": "2019-04-01T10:52:15", "upload_time_iso_8601": "2019-04-01T10:52:15.422462Z", "url": "https://files.pythonhosted.org/packages/56/b6/d8d7b3b91ac55543dcfab3b8afb50dba3a2f9e87291f25e00bb40756be79/import_all-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "7dc5b582ffbde632a6c02cebb9da45ac", "sha256": "93f26492d5b7099c5c4c8fa5e02ae080055215682410717e6db4206d3fd43568"}, "downloads": -1, "filename": "import_all-0.9.3.tar.gz", "has_sig": false, "md5_digest": "7dc5b582ffbde632a6c02cebb9da45ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6209, "upload_time": "2019-06-07T16:06:24", "upload_time_iso_8601": "2019-06-07T16:06:24.293639Z", "url": "https://files.pythonhosted.org/packages/08/bc/d2c6f664ea6ed6916bc42439252b766cd4b111901d8727ebd04980534dba/import_all-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "2cc5bf0876c62f36e3f356b9c1f0250d", "sha256": "038991095ea791bd79571c343f3c8d646bccb83b62a97ab6809567e3c02716c7"}, "downloads": -1, "filename": "import_all-0.9.4.tar.gz", "has_sig": false, "md5_digest": "2cc5bf0876c62f36e3f356b9c1f0250d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6211, "upload_time": "2019-06-08T13:49:39", "upload_time_iso_8601": "2019-06-08T13:49:39.843795Z", "url": "https://files.pythonhosted.org/packages/01/63/b2ad83238dfb78f1af7e2d4c8b29e14ba7502ab6313c2898963ecd9d1d99/import_all-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "24c8dc36f643e25a11ec630c71924e30", "sha256": "77ed30b6537ebf59fb3ae3dd4706c9a257670ef3fb05042b482ec5058bd3b868"}, "downloads": -1, "filename": "import_all-0.9.5.tar.gz", "has_sig": false, "md5_digest": "24c8dc36f643e25a11ec630c71924e30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6562, "upload_time": "2019-06-08T18:03:51", "upload_time_iso_8601": "2019-06-08T18:03:51.737604Z", "url": "https://files.pythonhosted.org/packages/1d/4f/eed24061302cd7671d37a8ad7501389b26646a65d69002dc0f2e080d6c7e/import_all-0.9.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "24c8dc36f643e25a11ec630c71924e30", "sha256": "77ed30b6537ebf59fb3ae3dd4706c9a257670ef3fb05042b482ec5058bd3b868"}, "downloads": -1, "filename": "import_all-0.9.5.tar.gz", "has_sig": false, "md5_digest": "24c8dc36f643e25a11ec630c71924e30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6562, "upload_time": "2019-06-08T18:03:51", "upload_time_iso_8601": "2019-06-08T18:03:51.737604Z", "url": "https://files.pythonhosted.org/packages/1d/4f/eed24061302cd7671d37a8ad7501389b26646a65d69002dc0f2e080d6c7e/import_all-0.9.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:33 2020"}