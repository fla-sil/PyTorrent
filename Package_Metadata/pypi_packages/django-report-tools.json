{"info": {"author": "Evan Brumley", "author_email": "evan.brumley@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Utilities"], "description": "django-report-tools\n===================\n\nDjango Report Tools aims to take the pain out of putting charts, graphs \nand tables into your Django projects. It provides a nice class-based\nframework to restore a little bit of elegance to your application's \ncomplex data views.\n\n\nFeatures\n--------\n\n* Define your reports using the same syntax as Django forms and models\n* Use built-in 'renderers' to avoid the hassle of dealing with various \n  charting technologies (currently only the Google Visualization Toolkit is supported)\n* Enter chart data in a standardised format\n* Build a simple API, allowing for the creation of chart exports or a 'save to dashboard' feature.\n\n\nRelease Notes - 0.2.1\n---------------------\n\n* Fixed a JSON encoding bug that broke Python 2.6 compatibility.\n* Added a tox.ini and setup.py test support so I can test and prevent these sorts of\n  bug in the future.\n\nRelease Notes - 0.2\n-------------------\n\n* Updated for Django 1.5 compatibility\n* Fixed an XSS vector in the Google Charts renderer\n* Updated to the most recent GViz API\n\n\nA fully-functional example report\n-----------------\n\nThe following example implements a report with a simple pie chart, rendered\nusing the Google Visualization Toolkit.\n\n::\n\n    from report_tools.reports import Report\n    from report_tools.chart_data import ChartData\n    from report_tools.renderers.googlecharts import GoogleChartsRenderer\n    from report_tools import charts\n\n\n    class MyReport(Report):\n        renderer = GoogleChartsRenderer\n\n        pie_chart = charts.PieChart(\n            title=\"A nice, simple pie chart\",\n            width=400,\n            height=300\n        )\n\n        def get_data_for_pie_chart(self):\n            data = ChartData()\n\n            data.add_column(\"Pony Type\")\n            data.add_column(\"Population\")\n\n            data.add_row([\"Blue\", 20])\n            data.add_row([\"Pink\", 20])\n            data.add_row([\"Magical\", 1])\n\n            return data\n\nRead on in the documentation for a full explanation and lots more examples.\n\n\nLinks\n-----\n\nProject Home: http://github.com/evanbrumley/django-report-tools\n\nDocumentation: http://django-report-tools.readthedocs.org\n\n\nInstallation\n------------\n\nTo install django-report-tools simply use: ::\n\n    $ pip install django-report-tools\n\nOr alternatively: ::\n\n    $ easy_install django-report-tools\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/evanbrumley/django-report-tools", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-report-tools", "package_url": "https://pypi.org/project/django-report-tools/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-report-tools/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/evanbrumley/django-report-tools"}, "release_url": "https://pypi.org/project/django-report-tools/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "Class-based reports for elegant data views.", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            django-report-tools<br>===================<br><br>Django Report Tools aims to take the pain out of putting charts, graphs <br>and tables into your Django projects. It provides a nice class-based<br>framework to restore a little bit of elegance to your application's <br>complex data views.<br><br><br>Features<br>--------<br><br>* Define your reports using the same syntax as Django forms and models<br>* Use built-in 'renderers' to avoid the hassle of dealing with various <br>  charting technologies (currently only the Google Visualization Toolkit is supported)<br>* Enter chart data in a standardised format<br>* Build a simple API, allowing for the creation of chart exports or a 'save to dashboard' feature.<br><br><br>Release Notes - 0.2.1<br>---------------------<br><br>* Fixed a JSON encoding bug that broke Python 2.6 compatibility.<br>* Added a tox.ini and setup.py test support so I can test and prevent these sorts of<br>  bug in the future.<br><br>Release Notes - 0.2<br>-------------------<br><br>* Updated for Django 1.5 compatibility<br>* Fixed an XSS vector in the Google Charts renderer<br>* Updated to the most recent GViz API<br><br><br>A fully-functional example report<br>-----------------<br><br>The following example implements a report with a simple pie chart, rendered<br>using the Google Visualization Toolkit.<br><br>::<br><br>    from report_tools.reports import Report<br>    from report_tools.chart_data import ChartData<br>    from report_tools.renderers.googlecharts import GoogleChartsRenderer<br>    from report_tools import charts<br><br><br>    class MyReport(Report):<br>        renderer = GoogleChartsRenderer<br><br>        pie_chart = charts.PieChart(<br>            title=\"A nice, simple pie chart\",<br>            width=400,<br>            height=300<br>        )<br><br>        def get_data_for_pie_chart(self):<br>            data = ChartData()<br><br>            data.add_column(\"Pony Type\")<br>            data.add_column(\"Population\")<br><br>            data.add_row([\"Blue\", 20])<br>            data.add_row([\"Pink\", 20])<br>            data.add_row([\"Magical\", 1])<br><br>            return data<br><br>Read on in the documentation for a full explanation and lots more examples.<br><br><br>Links<br>-----<br><br>Project Home: http://github.com/evanbrumley/django-report-tools<br><br>Documentation: http://django-report-tools.readthedocs.org<br><br><br>Installation<br>------------<br><br>To install django-report-tools simply use: ::<br><br>    $ pip install django-report-tools<br><br>Or alternatively: ::<br><br>    $ easy_install django-report-tools<br>\n          </div>"}, "last_serial": 988928, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "37216c0608d176d2ac89dbf7a531dfd2", "sha256": "3ad25c5c46130bf174e7eb2d1105e1fac538508b1029841e5900cc20a38eceee"}, "downloads": -1, "filename": "django-report-tools-0.1.tar.gz", "has_sig": false, "md5_digest": "37216c0608d176d2ac89dbf7a531dfd2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29585, "upload_time": "2012-08-23T14:18:07", "upload_time_iso_8601": "2012-08-23T14:18:07.547929Z", "url": "https://files.pythonhosted.org/packages/27/5d/998f3edfbf8ab41b35d33df859ef2d30874c0566bacf42590a05be66d894/django-report-tools-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "037787f747c837cb0d1aaf7aaf66819b", "sha256": "a142d504d641583b507c3d5a777a3ac2d33404a8b6a1fad8ef54f70edad907bc"}, "downloads": -1, "filename": "django-report-tools-0.2.tar.gz", "has_sig": false, "md5_digest": "037787f747c837cb0d1aaf7aaf66819b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30935, "upload_time": "2013-03-31T08:22:24", "upload_time_iso_8601": "2013-03-31T08:22:24.660234Z", "url": "https://files.pythonhosted.org/packages/26/63/9d939d9a480208cc0fb3fcdd1a1c693824b4293b46d6cc24623c93ed28d7/django-report-tools-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "b60b2d45b44b712243667fab0ce0d5f1", "sha256": "96a2d0189891ad0f4de3eef6b7378c006d4e31fb530a73233061886b2bc9c1b0"}, "downloads": -1, "filename": "django-report-tools-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b60b2d45b44b712243667fab0ce0d5f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31840, "upload_time": "2013-04-07T09:03:22", "upload_time_iso_8601": "2013-04-07T09:03:22.352497Z", "url": "https://files.pythonhosted.org/packages/d1/a8/2d6c73ae71781aff327285bcca7bf1555c2e32599b00331a7a1aff77da95/django-report-tools-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "1de17b79e4089a5a46088d416d4e7ae6", "sha256": "aa5478c793ba728c657361e9167b20eb5d2bf045ec7519d458511f7898d60b54"}, "downloads": -1, "filename": "django-report-tools-0.2.2.tar.gz", "has_sig": false, "md5_digest": "1de17b79e4089a5a46088d416d4e7ae6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32463, "upload_time": "2014-02-03T02:46:37", "upload_time_iso_8601": "2014-02-03T02:46:37.620972Z", "url": "https://files.pythonhosted.org/packages/12/65/8a24237f99ac7e3ca846de8a1b9a5299ed7a42028a6431c0c241c998cc7b/django-report-tools-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1de17b79e4089a5a46088d416d4e7ae6", "sha256": "aa5478c793ba728c657361e9167b20eb5d2bf045ec7519d458511f7898d60b54"}, "downloads": -1, "filename": "django-report-tools-0.2.2.tar.gz", "has_sig": false, "md5_digest": "1de17b79e4089a5a46088d416d4e7ae6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32463, "upload_time": "2014-02-03T02:46:37", "upload_time_iso_8601": "2014-02-03T02:46:37.620972Z", "url": "https://files.pythonhosted.org/packages/12/65/8a24237f99ac7e3ca846de8a1b9a5299ed7a42028a6431c0c241c998cc7b/django-report-tools-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:16 2020"}