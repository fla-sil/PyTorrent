{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "Hexadecimal Hamming\n====================\n\n|Pip|_ |Prs|_ |Github|_\n\n.. |Pip| image:: https://badge.fury.io/py/hexhamming.svg\n.. _Pip: https://badge.fury.io/py/hexhamming\n\n.. |Prs| image:: https://img.shields.io/badge/PRs-welcome-brightgreen.svg\n.. _Prs: .github/CONTRIBUTING.md#pull-requests\n\n.. |Github| image:: https://github.com/mrecachinas/hexhamming/workflows/build/badge.svg\n.. _Github: https://github.com/mrecachinas/hexhamming/actions\n\nWhat does it do?\n----------------\n\nThis module performs a fast bitwise hamming distance of two hexadecimal strings.\n\nThis looks like::\n\n    DEADBEEF = 11011110101011011011111011101111\n    00000000 = 00000000000000000000000000000000\n    XOR      = 11011110101011011011111011101111\n    Hamming  = number of ones in DEADBEEF ^ 00000000 = 24\n\nThis essentially amounts to\n\n::\n\n    >>> import gmpy\n    >>> gmpy.popcount(0xdeadbeef ^ 0x00000000)\n    24\n\nexcept with Python strings, so\n\n::\n\n    >>> import gmpy\n    >>> gmpy.popcount(int(\"deadbeef\", 16) ^ int(\"00000000\", 16))\n    24\n\nA few assumptions are made and enforced:\n\n* this is a valid hexadecimal string (i.e., ``[a-fA-F0-9]+``)\n* the strings are the same length\n* the strings do not begin with ``\"0x\"``\n\nWhy yet another Hamming distance library?\n-----------------------------------------\n\nThere are a lot of fantastic (python) libraries that offer methods to calculate\nvarious edit distances, including Hamming distances: Distance, textdistance,\nscipy, jellyfish, etc.\n\nIn this case, I needed a hamming distance library that worked on hexadecimal\nstrings (i.e., a Python ``str``) and performed blazingly fast.\nFurthermore, I often did not care about hex strings greater than 256 bits.\nThat length constraint is different vs all the other libraries and enabled me\nto explore vectorization techniques via ``numba``, ``numpy``, and even\n``SSE/AVX``.\n\nLastly, I wanted to minimize dependencies, meaning you do not need to install\n``numpy``, ``gmpy``, ``cython``, ``pypy``, ``pythran``, etc.\n\nEventually, after playing around with ``gmpy.popcount``, ``numba.jit``,\n``pythran.run``, ``numpy``, and ``AVX2``, I decided to write what I wanted\nin a raw C header. At this point, I'm using raw ``char*`` and\n``int*``, so exploring re-writing this in Fortran makes little sense. Vectorization\ntechniques also ended up adding more overhead due to converting the hex strings to\nvector-register-ingestible floats from ``char*``.\n\nInstallation\n-------------\n\nTo install, ensure you have Python 2.7 or 3.4+. Run\n\n::\n\n    pip install hexhamming\n\nor to install from source\n\n::\n\n    git clone https://github.com/mrecachinas/hexhamming\n    cd hexhamming\n    python setup.py install # or pip install .\n\nIf you want to contribute to hexhamming, you should install the dev\ndependencies\n\n::\n\n    pip install -r requirements-dev.txt\n\nand make sure the tests pass with\n\n::\n\n    pytest -vls\n\nExample\n-------\n\nTo use the base C++ extension, you can simply run\n\n::\n\n    >>> from hexhamming import hamming_distance\n    >>> hamming_distance(\"deadbeef\", \"00000000\")\n    24\n\nBenchmark\n---------\n\nNote: For the below image, to show how optimized this is, I included\nthe benchmark of a function that looks like\n\nBelow is a benchmark using ``pytest-benchmark`` with hexhamming==v1.3.0\nmy early 2016 1.2 GHz Intel m5 8 GB 1867 MHz LPDDR3 macOS Mojave (10.14.3)\nwith Python 3.7.3 and Apple clang version 11.0.0 (clang-1100.0.33.17).\n\n=======================================  ===========  ==========  =============  ========  ============\nName                                       Mean (ns)    Std (ns)    Median (ns)    Rounds    Iterations\n=======================================  ===========  ==========  =============  ========  ============\ntest_hamming_distance_bench_short_same       182.21      282.187        140.1      137742            30\ntest_hamming_distance_bench_short            204.275     353.317        154.156    183723            32\ntest_hamming_distance_bench_long_same        431.369     553.671        329.5      132838            20\ntest_check_hexstrings_within_dist_bench      419.923     489.503        330.1       83718            20\ntest_hamming_distance_bench_256              649.275    2854.9          505        172118             1\ntest_hamming_distance_bench_long            3569.42     6408.05        2758        160591             1\n=======================================  ===========  ==========  =============  ========  ============\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mrecachinas/hexhamming.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "hexhamming", "package_url": "https://pypi.org/project/hexhamming/", "platform": "", "project_url": "https://pypi.org/project/hexhamming/", "project_urls": {"Homepage": "https://github.com/mrecachinas/hexhamming.git"}, "release_url": "https://pypi.org/project/hexhamming/1.3.1/", "requires_dist": null, "requires_python": "", "summary": "Fast Hamming distance calculation for hexadecimal strings", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://badge.fury.io/py/hexhamming\" rel=\"nofollow\"><img alt=\"Pip\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1e76f1bf4971a8110f77a5dcfeb6950846d562a5/68747470733a2f2f62616467652e667572792e696f2f70792f68657868616d6d696e672e737667\"></a> <a href=\".github/CONTRIBUTING.md#pull-requests\" rel=\"nofollow\"><img alt=\"Prs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6482ead086859c79e80e1d7af03e30a98f345bf0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e737667\"></a> <a href=\"https://github.com/mrecachinas/hexhamming/actions\" rel=\"nofollow\"><img alt=\"Github\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/54323c6b258684c82236d383d1e0f1941a0cdc30/68747470733a2f2f6769746875622e636f6d2f6d726563616368696e61732f68657868616d6d696e672f776f726b666c6f77732f6275696c642f62616467652e737667\"></a></p>\n<div id=\"what-does-it-do\">\n<h2>What does it do?</h2>\n<p>This module performs a fast bitwise hamming distance of two hexadecimal strings.</p>\n<p>This looks like:</p>\n<pre>DEADBEEF = 11011110101011011011111011101111\n00000000 = 00000000000000000000000000000000\nXOR      = 11011110101011011011111011101111\nHamming  = number of ones in DEADBEEF ^ 00000000 = 24\n</pre>\n<p>This essentially amounts to</p>\n<pre>&gt;&gt;&gt; import gmpy\n&gt;&gt;&gt; gmpy.popcount(0xdeadbeef ^ 0x00000000)\n24\n</pre>\n<p>except with Python strings, so</p>\n<pre>&gt;&gt;&gt; import gmpy\n&gt;&gt;&gt; gmpy.popcount(int(\"deadbeef\", 16) ^ int(\"00000000\", 16))\n24\n</pre>\n<p>A few assumptions are made and enforced:</p>\n<ul>\n<li>this is a valid hexadecimal string (i.e., <tt><span class=\"pre\">[a-fA-F0-9]+</span></tt>)</li>\n<li>the strings are the same length</li>\n<li>the strings do not begin with <tt>\"0x\"</tt></li>\n</ul>\n</div>\n<div id=\"why-yet-another-hamming-distance-library\">\n<h2>Why yet another Hamming distance library?</h2>\n<p>There are a lot of fantastic (python) libraries that offer methods to calculate\nvarious edit distances, including Hamming distances: Distance, textdistance,\nscipy, jellyfish, etc.</p>\n<p>In this case, I needed a hamming distance library that worked on hexadecimal\nstrings (i.e., a Python <tt>str</tt>) and performed blazingly fast.\nFurthermore, I often did not care about hex strings greater than 256 bits.\nThat length constraint is different vs all the other libraries and enabled me\nto explore vectorization techniques via <tt>numba</tt>, <tt>numpy</tt>, and even\n<tt>SSE/AVX</tt>.</p>\n<p>Lastly, I wanted to minimize dependencies, meaning you do not need to install\n<tt>numpy</tt>, <tt>gmpy</tt>, <tt>cython</tt>, <tt>pypy</tt>, <tt>pythran</tt>, etc.</p>\n<p>Eventually, after playing around with <tt>gmpy.popcount</tt>, <tt>numba.jit</tt>,\n<tt>pythran.run</tt>, <tt>numpy</tt>, and <tt>AVX2</tt>, I decided to write what I wanted\nin a raw C header. At this point, I\u2019m using raw <tt>char*</tt> and\n<tt>int*</tt>, so exploring re-writing this in Fortran makes little sense. Vectorization\ntechniques also ended up adding more overhead due to converting the hex strings to\nvector-register-ingestible floats from <tt>char*</tt>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install, ensure you have Python 2.7 or 3.4+. Run</p>\n<pre>pip install hexhamming\n</pre>\n<p>or to install from source</p>\n<pre>git clone https://github.com/mrecachinas/hexhamming\ncd hexhamming\npython setup.py install # or pip install .\n</pre>\n<p>If you want to contribute to hexhamming, you should install the dev\ndependencies</p>\n<pre>pip install -r requirements-dev.txt\n</pre>\n<p>and make sure the tests pass with</p>\n<pre>pytest -vls\n</pre>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>To use the base C++ extension, you can simply run</p>\n<pre>&gt;&gt;&gt; from hexhamming import hamming_distance\n&gt;&gt;&gt; hamming_distance(\"deadbeef\", \"00000000\")\n24\n</pre>\n</div>\n<div id=\"benchmark\">\n<h2>Benchmark</h2>\n<p>Note: For the below image, to show how optimized this is, I included\nthe benchmark of a function that looks like</p>\n<p>Below is a benchmark using <tt><span class=\"pre\">pytest-benchmark</span></tt> with hexhamming==v1.3.0\nmy early 2016 1.2 GHz Intel m5 8 GB 1867 MHz LPDDR3 macOS Mojave (10.14.3)\nwith Python 3.7.3 and Apple clang version 11.0.0 (clang-1100.0.33.17).</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Name</th>\n<th>Mean (ns)</th>\n<th>Std (ns)</th>\n<th>Median (ns)</th>\n<th>Rounds</th>\n<th>Iterations</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>test_hamming_distance_bench_short_same</td>\n<td>182.21</td>\n<td>282.187</td>\n<td>140.1</td>\n<td>137742</td>\n<td>30</td>\n</tr>\n<tr><td>test_hamming_distance_bench_short</td>\n<td>204.275</td>\n<td>353.317</td>\n<td>154.156</td>\n<td>183723</td>\n<td>32</td>\n</tr>\n<tr><td>test_hamming_distance_bench_long_same</td>\n<td>431.369</td>\n<td>553.671</td>\n<td>329.5</td>\n<td>132838</td>\n<td>20</td>\n</tr>\n<tr><td>test_check_hexstrings_within_dist_bench</td>\n<td>419.923</td>\n<td>489.503</td>\n<td>330.1</td>\n<td>83718</td>\n<td>20</td>\n</tr>\n<tr><td>test_hamming_distance_bench_256</td>\n<td>649.275</td>\n<td>2854.9</td>\n<td>505</td>\n<td>172118</td>\n<td>1</td>\n</tr>\n<tr><td>test_hamming_distance_bench_long</td>\n<td>3569.42</td>\n<td>6408.05</td>\n<td>2758</td>\n<td>160591</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 6880280, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "f67d7c14a65a4c94a76941bf02f48908", "sha256": "e68803278f70b27793868a6fd682229b47711c729bee09032ce277ee551d50ee"}, "downloads": -1, "filename": "hexhamming-1.0-cp27-cp27m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "f67d7c14a65a4c94a76941bf02f48908", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 4685, "upload_time": "2019-03-02T11:30:46", "upload_time_iso_8601": "2019-03-02T11:30:46.068386Z", "url": "https://files.pythonhosted.org/packages/d7/b6/57f9b5a076cefbf2c93e64e4de949f78e3e305acfde636ef743eef75eb71/hexhamming-1.0-cp27-cp27m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "161ac27d7baa0e81698749c295d70998", "sha256": "f5a2901a96cbf94e42ae3b4131a8956bda9a424f0c071914aa467a18c06cd169"}, "downloads": -1, "filename": "hexhamming-1.0-cp36-cp36m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "161ac27d7baa0e81698749c295d70998", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 4765, "upload_time": "2019-03-02T11:30:01", "upload_time_iso_8601": "2019-03-02T11:30:01.245352Z", "url": "https://files.pythonhosted.org/packages/56/51/219ecbce734dd51f887a64662f32d12e00e245ad78d48bfce29ea548b126/hexhamming-1.0-cp36-cp36m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d3c454d9a01c166558ad2eacd46cc07", "sha256": "acaaae3d3ddeb70855bf1b2fcf0e318c22d87b8d0eddb384fa136a72415dd5c7"}, "downloads": -1, "filename": "hexhamming-1.0.tar.gz", "has_sig": false, "md5_digest": "7d3c454d9a01c166558ad2eacd46cc07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5115, "upload_time": "2019-03-02T11:30:03", "upload_time_iso_8601": "2019-03-02T11:30:03.677804Z", "url": "https://files.pythonhosted.org/packages/01/29/616da57e6979629d0148a14cc9596a1f04c77c84994f4de52ae004b2a8ea/hexhamming-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "ba762b84f546b0529f4409dcb8ff7c06", "sha256": "90bca96a66d653c4abd417e3c21d32790494144e2bcb6f201ee4b7132ddce58d"}, "downloads": -1, "filename": "hexhamming-1.1-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "ba762b84f546b0529f4409dcb8ff7c06", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 5272, "upload_time": "2020-02-11T21:40:10", "upload_time_iso_8601": "2020-02-11T21:40:10.293468Z", "url": "https://files.pythonhosted.org/packages/5f/98/c51681886ec1a129c91a7706835c04008bfcff46aaa9d7bbccf571550b3f/hexhamming-1.1-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d100b1911ce59ff0293ff434cd3ef236", "sha256": "513bfb64561196f2f0450de893363330a6747ea541c896bec03bf9a4d918a5a0"}, "downloads": -1, "filename": "hexhamming-1.1.tar.gz", "has_sig": false, "md5_digest": "d100b1911ce59ff0293ff434cd3ef236", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5164, "upload_time": "2020-02-11T21:40:11", "upload_time_iso_8601": "2020-02-11T21:40:11.889732Z", "url": "https://files.pythonhosted.org/packages/ea/ca/f66e463148a1f70c112c34a1d4442774aea52996c133f736cde7d7339ee2/hexhamming-1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "165ea6be26e9352435730bc27dcf65cb", "sha256": "005c5a669f9b3a717861891d2c332e2ad44cbd25a0c289eb9c6dcbadf7906b78"}, "downloads": -1, "filename": "hexhamming-1.2.0-cp27-cp27m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "165ea6be26e9352435730bc27dcf65cb", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 5364, "upload_time": "2020-02-12T20:28:17", "upload_time_iso_8601": "2020-02-12T20:28:17.120451Z", "url": "https://files.pythonhosted.org/packages/c7/1b/af5946d39a68acac3bed8a9872c5166a34421151814cc8f68085c67c6620/hexhamming-1.2.0-cp27-cp27m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98e2b4246aa933dae949860cc40d4a28", "sha256": "e11bad0b2341d2d2ae15d2add9f28c088dde3edbb69fba7f9a5f6f9dbc8f5d9d"}, "downloads": -1, "filename": "hexhamming-1.2.0-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "98e2b4246aa933dae949860cc40d4a28", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 5859, "upload_time": "2020-02-12T20:27:36", "upload_time_iso_8601": "2020-02-12T20:27:36.191476Z", "url": "https://files.pythonhosted.org/packages/5f/70/bc5efa5dcd9366c5bb8d536104353766a14f098307078952bbad64c41f69/hexhamming-1.2.0-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a55ac55d525360b29d35b473947ea924", "sha256": "3e84b5739478d7d33f9b3df50622b2f533dfab343c25bb273fe63286636a711b"}, "downloads": -1, "filename": "hexhamming-1.2.0.tar.gz", "has_sig": false, "md5_digest": "a55ac55d525360b29d35b473947ea924", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5711, "upload_time": "2020-02-12T20:27:37", "upload_time_iso_8601": "2020-02-12T20:27:37.190851Z", "url": "https://files.pythonhosted.org/packages/47/f4/620ad618036f779bd5edb93854d8f6d521946f271055e9f73ddbdc1451f9/hexhamming-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "5e65276431e646d87546967085e4b6cb", "sha256": "f2fcf67e2e4f593bd8cebc49679552387aec5856a122f7faf12925bc8db54fe7"}, "downloads": -1, "filename": "hexhamming-1.3.0-cp27-cp27m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "5e65276431e646d87546967085e4b6cb", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 5256, "upload_time": "2020-03-25T11:34:01", "upload_time_iso_8601": "2020-03-25T11:34:01.653385Z", "url": "https://files.pythonhosted.org/packages/0f/5d/67108390c3c16017ffdf66c571478c618275623745857bd6221976147b18/hexhamming-1.3.0-cp27-cp27m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbc4ead008942388b81e11fc42661f30", "sha256": "ad1f06230a7e2843dbd3c033410c5886b71a17e57da09c5127ab0287895c5d39"}, "downloads": -1, "filename": "hexhamming-1.3.0-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "dbc4ead008942388b81e11fc42661f30", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 5744, "upload_time": "2020-03-25T11:34:02", "upload_time_iso_8601": "2020-03-25T11:34:02.787389Z", "url": "https://files.pythonhosted.org/packages/b6/a6/975f1018ea62720ef4bfbd07b7dc7135c4098772b9cf84751cc1c5f98746/hexhamming-1.3.0-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56f05f540e86327e679a2807e222e1e8", "sha256": "388229f0db7dd588d867c0ce2cbf2ab6a25cb18cd1d6347487c977786749b325"}, "downloads": -1, "filename": "hexhamming-1.3.0.tar.gz", "has_sig": false, "md5_digest": "56f05f540e86327e679a2807e222e1e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6034, "upload_time": "2020-03-25T11:34:04", "upload_time_iso_8601": "2020-03-25T11:34:04.030784Z", "url": "https://files.pythonhosted.org/packages/0c/e2/435d43aa9446a275c9cc2e963896c61e6d46d4a000a8f900f8960196ea41/hexhamming-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "d8971c3b5212c34cbba473512d00e98a", "sha256": "294da6f2699be3ca28610d0a187e27c59c1743ce59b09500a0d823c63b00a671"}, "downloads": -1, "filename": "hexhamming-1.3.1-cp27-cp27m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "d8971c3b5212c34cbba473512d00e98a", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 5465, "upload_time": "2020-03-25T12:30:42", "upload_time_iso_8601": "2020-03-25T12:30:42.930494Z", "url": "https://files.pythonhosted.org/packages/9f/a6/36ab7fa744a0e31c10ef3f1ec2153a00404825335454bc6b3880b8436075/hexhamming-1.3.1-cp27-cp27m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd7b75b3f9ad616d1ba7ff1f22b4f66a", "sha256": "f9fcf2fd0e3742af9a1b8023a1d30b03117a81ac65642b04024d7ddfefc133a9"}, "downloads": -1, "filename": "hexhamming-1.3.1-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "bd7b75b3f9ad616d1ba7ff1f22b4f66a", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 5955, "upload_time": "2020-03-25T12:30:44", "upload_time_iso_8601": "2020-03-25T12:30:44.135986Z", "url": "https://files.pythonhosted.org/packages/be/ce/579002d0158eef058fc812c28a659e2beb0ea96ecfe44966e5b04bc6d408/hexhamming-1.3.1-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73057afe4b431b08e410aa7166f10e0a", "sha256": "b9e77e1af3a1155d37823ea4d156261a85572d92a7c56b9bd920e4573e26f2d8"}, "downloads": -1, "filename": "hexhamming-1.3.1.tar.gz", "has_sig": false, "md5_digest": "73057afe4b431b08e410aa7166f10e0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5986, "upload_time": "2020-03-25T12:30:45", "upload_time_iso_8601": "2020-03-25T12:30:45.712017Z", "url": "https://files.pythonhosted.org/packages/33/02/2dfcf3ff3080de7f1710c1b9d6245d0a083efd51f0dafb86165fbc2619e9/hexhamming-1.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d8971c3b5212c34cbba473512d00e98a", "sha256": "294da6f2699be3ca28610d0a187e27c59c1743ce59b09500a0d823c63b00a671"}, "downloads": -1, "filename": "hexhamming-1.3.1-cp27-cp27m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "d8971c3b5212c34cbba473512d00e98a", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 5465, "upload_time": "2020-03-25T12:30:42", "upload_time_iso_8601": "2020-03-25T12:30:42.930494Z", "url": "https://files.pythonhosted.org/packages/9f/a6/36ab7fa744a0e31c10ef3f1ec2153a00404825335454bc6b3880b8436075/hexhamming-1.3.1-cp27-cp27m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd7b75b3f9ad616d1ba7ff1f22b4f66a", "sha256": "f9fcf2fd0e3742af9a1b8023a1d30b03117a81ac65642b04024d7ddfefc133a9"}, "downloads": -1, "filename": "hexhamming-1.3.1-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "bd7b75b3f9ad616d1ba7ff1f22b4f66a", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 5955, "upload_time": "2020-03-25T12:30:44", "upload_time_iso_8601": "2020-03-25T12:30:44.135986Z", "url": "https://files.pythonhosted.org/packages/be/ce/579002d0158eef058fc812c28a659e2beb0ea96ecfe44966e5b04bc6d408/hexhamming-1.3.1-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73057afe4b431b08e410aa7166f10e0a", "sha256": "b9e77e1af3a1155d37823ea4d156261a85572d92a7c56b9bd920e4573e26f2d8"}, "downloads": -1, "filename": "hexhamming-1.3.1.tar.gz", "has_sig": false, "md5_digest": "73057afe4b431b08e410aa7166f10e0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5986, "upload_time": "2020-03-25T12:30:45", "upload_time_iso_8601": "2020-03-25T12:30:45.712017Z", "url": "https://files.pythonhosted.org/packages/33/02/2dfcf3ff3080de7f1710c1b9d6245d0a083efd51f0dafb86165fbc2619e9/hexhamming-1.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:27 2020"}