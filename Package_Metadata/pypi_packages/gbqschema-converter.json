{"info": {"author": "Dmitry Kisler", "author_email": "admin@dkisler.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Google BigQuery Table Schema Converter\n\n[![license](https://img.shields.io/pypi/l/ansicolortags.svg)](./LICENSE)\n[![pyversion](https://img.shields.io/static/v1?label=python&color=blue&message=3.6%20|%203.7%20|%203.8)](./)\n[![coverage](https://img.shields.io/static/v1?label=coverage&color=brightgreen&message=94%25)](./)\n[![test](https://img.shields.io/static/v1?label=tests&color=success&message=100%25)](./)\n\nPython library to convert [Google BigQuery table schema](https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#datetime_type) into [draft-07](https://json-schema.org/draft-07/json-schema-release-notes.html) [json schema](https://json-schema.org/) and vice versa.\n\nThe library includes two main modules:\n\n```bash\ngbqschema_converter\n\u251c\u2500\u2500 gbqschema_to_jsonschema.py\n\u2514\u2500\u2500 jsonschema_to_gbqschema.py\n```\n\nEach of those modules has two main functions:\n\n- `json_representation`: corresponds to json output (input for `gbqschema_to_jsonschema`).\n- `sdk_representation`: corresponds to [Google Python SDK format](https://googleapis.dev/python/bigquery/latest/generated/google.cloud.bigquery.schema.SchemaField.html) output (input for `gbqschema_to_jsonschema`).\n\n## Installation\n\n```bash\npython3 -m venv env && source ${PWD}/env/bin/activate\n(env) pip install --no-cache-dir gbqschema_converter\n```\n\n## Usage: CLI\n\n### Convert json-schema to GBQ table schema\n\n```bash\n(env) json2gbq -h\nusage: json2gbq [-h] (-i INPUT | -f FILE)\n\nGoogle BigQuery Table Schema Converter\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Input object as string.\n  -f FILE, --file FILE  Input object as file path.\n```\n\n#### Example: stdin\n\nExecution:\n\n```bash\n(env) json2gbq -i '{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\",\n  \"items\": {\n    \"$ref\": \"#/definitions/element\"\n  },\n  \"definitions\": {\n    \"element\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"att_01\": {\n          \"type\": \"integer\",\n          \"description\": \"Att 1\"\n        },\n        \"att_02\": {\n          \"type\": \"number\",\n          \"description\": \"Att 2\"\n        },\n        \"att_03\": {\n          \"type\": \"string\"\n        },\n        \"att_04\": {\n          \"type\": \"boolean\"\n        },\n        \"att_05\": {\n          \"type\": \"string\",\n          \"format\": \"date\"\n        },\n        \"att_06\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"att_07\": {\n          \"type\": \"string\",\n          \"format\": \"time\"\n        }\n      },\n      \"required\": [\n        \"att_02\"\n      ]\n    }\n  }\n}'\n```\n\nOutput:\n\n```bash\n2020-04-08 21:42:51.700 [INFO ] [Google BigQuery Table Schema Converter] Output (5.52 ms elapsed):\n[\n  {\n    \"description\": \"Att 1\",\n    \"name\": \"att_01\",\n    \"type\": \"INTEGER\",\n    \"mode\": \"NULLABLE\"\n  },\n  {\n    \"description\": \"Att 2\",\n    \"name\": \"att_02\",\n    \"type\": \"NUMERIC\",\n    \"mode\": \"REQUIRED\"\n  },\n  {\n    \"name\": \"att_03\",\n    \"type\": \"STRING\",\n    \"mode\": \"NULLABLE\"\n  },\n  {\n    \"name\": \"att_04\",\n    \"type\": \"BOOLEAN\",\n    \"mode\": \"NULLABLE\"\n  },\n  {\n    \"name\": \"att_05\",\n    \"type\": \"DATE\",\n    \"mode\": \"NULLABLE\"\n  },\n  {\n    \"name\": \"att_06\",\n    \"type\": \"TIMESTAMP\",\n    \"mode\": \"NULLABLE\"\n  },\n  {\n    \"name\": \"att_07\",\n    \"type\": \"STRING\",\n    \"mode\": \"NULLABLE\"\n  }\n]\n```\n\n#### Example: file\n\nExecution:\n\n```bash\n(env) json2gbq -f ${PWD}/data/jsonschema.json\n```\n\nOutput:\n\n```bash\n2020-04-08 21:57:25.516 [INFO ] [Google BigQuery Table Schema Converter] Output (6.39 ms elapsed):\n[\n  {\n    \"description\": \"Att 1\",\n    \"name\": \"att_01\",\n    \"type\": \"INTEGER\",\n    \"mode\": \"NULLABLE\"\n  },\n  {\n    \"description\": \"Att 2\",\n    \"name\": \"att_02\",\n    \"type\": \"NUMERIC\",\n    \"mode\": \"REQUIRED\"\n  },\n  {\n    \"name\": \"att_03\",\n    \"type\": \"STRING\",\n    \"mode\": \"NULLABLE\"\n  },\n  {\n    \"name\": \"att_04\",\n    \"type\": \"BOOLEAN\",\n    \"mode\": \"NULLABLE\"\n  },\n  {\n    \"name\": \"att_05\",\n    \"type\": \"DATE\",\n    \"mode\": \"NULLABLE\"\n  },\n  {\n    \"name\": \"att_06\",\n    \"type\": \"TIMESTAMP\",\n    \"mode\": \"NULLABLE\"\n  },\n  {\n    \"name\": \"att_07\",\n    \"type\": \"STRING\",\n    \"mode\": \"NULLABLE\"\n  }\n]\n```\n\n### Convert GBQ table schema to json-schema\n\n```bash\n(env) gbq2json -h\nusage: gbq2json [-h] (-i INPUT | -f FILE)\n\nGoogle BigQuery Table Schema Converter\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Input object as string.\n  -f FILE, --file FILE  Input object as file path.\n```\n\n#### Example: stdin\n\nExecution:\n\n```bash\n(env) gbq2json -i '[\n  {\n    \"description\": \"Att 1\",\n    \"name\": \"att_01\",\n    \"type\": \"INTEGER\",\n    \"mode\": \"NULLABLE\"\n  },\n  {\n    \"description\": \"Att 2\",\n    \"name\": \"att_02\",\n    \"type\": \"NUMERIC\",\n    \"mode\": \"REQUIRED\"\n  },\n  {\n    \"name\": \"att_03\",\n    \"type\": \"STRING\",\n    \"mode\": \"NULLABLE\"\n  },\n  {\n    \"name\": \"att_04\",\n    \"type\": \"BOOLEAN\",\n    \"mode\": \"NULLABLE\"\n  },\n  {\n    \"name\": \"att_05\",\n    \"type\": \"DATE\",\n    \"mode\": \"NULLABLE\"\n  },\n  {\n    \"name\": \"att_06\",\n    \"type\": \"DATETIME\",\n    \"mode\": \"NULLABLE\"\n  },\n  {\n    \"name\": \"att_07\",\n    \"type\": \"TIMESTAMP\",\n    \"mode\": \"NULLABLE\"\n  }\n]'\n```\n\nOutput:\n\n```bash\n2020-04-08 21:51:05.370 [INFO ] [Google BigQuery Table Schema Converter] Output (1.08 ms elapsed):\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\",\n  \"items\": {\n    \"$ref\": \"#/definitions/element\"\n  },\n  \"definitions\": {\n    \"element\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"att_01\": {\n          \"type\": \"integer\",\n          \"description\": \"Att 1\"\n        },\n        \"att_02\": {\n          \"type\": \"number\",\n          \"description\": \"Att 2\"\n        },\n        \"att_03\": {\n          \"type\": \"string\"\n        },\n        \"att_04\": {\n          \"type\": \"boolean\"\n        },\n        \"att_05\": {\n          \"type\": \"string\",\n          \"format\": \"date\"\n        },\n        \"att_06\": {\n          \"type\": \"string\",\n          \"pattern\": \"^[0-9]{4}-((|0)[1-9]|1[0-2])-((|[0-2])[1-9]|3[0-1])(|T)((|[0-1])[0-9]|2[0-3]):((|[0-5])[0-9]):((|[0-5])[0-9])(|.[0-9]{1,6})$\"\n        },\n        \"att_07\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        }\n      },\n      \"additionalProperties\": false,\n      \"required\": [\n        \"att_02\"\n      ]\n    }\n  }\n}\n```\n\n#### Example: file\n\nExecution:\n\n```bash\n(env) gbq2json -f ${PWD}/data/gbqschema.json\n```\n\nOutput:\n\n```bash\n2020-04-08 21:55:20.275 [INFO ] [Google BigQuery Table Schema Converter] Output (1.72 ms elapsed):\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\",\n  \"items\": {\n    \"$ref\": \"#/definitions/element\"\n  },\n  \"definitions\": {\n    \"element\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"att_01\": {\n          \"type\": \"integer\",\n          \"description\": \"Att 1\"\n        },\n        \"att_02\": {\n          \"type\": \"number\",\n          \"description\": \"Att 2\"\n        },\n        \"att_03\": {\n          \"type\": \"string\"\n        },\n        \"att_04\": {\n          \"type\": \"boolean\"\n        },\n        \"att_05\": {\n          \"type\": \"string\",\n          \"format\": \"date\"\n        },\n        \"att_06\": {\n          \"type\": \"string\",\n          \"pattern\": \"^[0-9]{4}-((|0)[1-9]|1[0-2])-((|[0-2])[1-9]|3[0-1])(|T)((|[0-1])[0-9]|2[0-3]):((|[0-5])[0-9]):((|[0-5])[0-9])(|.[0-9]{1,6})$\"\n        },\n        \"att_07\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        }\n      },\n      \"additionalProperties\": false,\n      \"required\": [\n        \"att_02\"\n      ]\n    }\n  }\n}\n```\n\n## Usage: python program\n\n### Convert json-schema to GBQ table schema\n\n#### Example: output as json\n\n```python\nfrom gbqschema_converter.jsonschema_to_gbqschema import json_representation as converter\n\nschema_in = {\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\",\n  \"items\": {\n    \"$ref\": \"#/definitions/element\",\n  },\n  \"definitions\": {\n    \"element\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"att_01\": {\n          \"type\": \"integer\",\n          \"description\": \"Att 1\"\n        },\n        \"att_02\": {\n          \"type\": \"number\",\n        },\n      }\n      \"required\": [\n        \"att_02\",\n      ],\n    },\n  },\n}\n\nschema_out = converter(schema_in)\nprint(schema_out)\n```\n\nOutput:\n\n```bash\n[{'description': 'Att 1', 'name': 'att_01', 'type': 'INTEGER', 'mode': 'NULLABLE'}, {'name': 'att_02', 'type': 'NUMERIC', 'mode': 'REQUIRED'}]\n```\n\n#### Example: output as list of SchemaField (SDK format)\n\n```python\nfrom gbqschema_converter.jsonschema_to_gbqschema import sdk_representation as converter\n\nschema_in = {\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\",\n  \"items\": {\n    \"$ref\": \"#/definitions/element\",\n  },\n  \"definitions\": {\n    \"element\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"att_01\": {\n          \"type\": \"integer\",\n          \"description\": \"Att 1\"\n        },\n        \"att_02\": {\n          \"type\": \"number\",\n        },\n      },\n      \"required\": [\n        \"att_02\",\n      ],\n    },\n  },\n}\n\nschema_out = converter(schema_in)\nprint(schema_out)\n```\n\nOutput:\n\n```bash\n[SchemaField('att_01', 'INTEGER', 'NULLABLE', 'Att 1', ()), SchemaField('att_02', 'NUMERIC', 'REQUIRED', None, ())]\n```\n\n### Convert GBQ table schema to json-schema\n\n#### Example: output as json\n\n```python\nfrom gbqschema_converter.gbqschema_to_jsonschema import json_representation as converter\n\nschema_in = [\n    {\n        'description': 'Att 1',\n        'name': 'att_01',\n        'type': 'INTEGER',\n        'mode': 'NULLABLE'\n    },\n    {\n        'name': 'att_02',\n        'type': 'NUMERIC',\n        'mode': 'REQUIRED'\n    }\n]\n\nschema_out = converter(schema_in)\nprint(schema_out)\n```\n\nOutput:\n\n```bash\n{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'array', 'items': {'$ref': '#/definitions/element'}, 'definitions': {'element': {'type': 'object', 'properties': {'att_01': {\n'type': 'integer', 'description': 'Att 1'}, 'att_02': {'type': 'number'}}, 'additionalProperties': False, 'required': ['att_02']}}}\n```\n\n#### Example: output as list of SchemaField (SDK format)\n\n```python\nfrom gbqschema_converter.gbqschema_to_jsonschema import sdk_representation as converter\nfrom google.cloud.bigquery import SchemaField\n\nschema_in = [\n    SchemaField('att_01', 'INTEGER', 'NULLABLE', 'Att 1', ()),\n    SchemaField('att_02', 'NUMERIC', 'REQUIRED', None, ()),\n]\n\nschema_out = converter(schema_in)\nprint(schema_out)\n```\n\nOutput:\n\n```bash\n{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'array', 'items': {'$ref': '#/definitions/element'}, 'definitions': {'element': {'type': 'object', 'properties': {'att_01': {\n'type': 'integer', 'description': 'Att 1'}, 'att_02': {'type': 'number'}}, 'additionalProperties': False, 'required': ['att_02']}}}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kislerdm/gbqschema_converter", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gbqschema-converter", "package_url": "https://pypi.org/project/gbqschema-converter/", "platform": "", "project_url": "https://pypi.org/project/gbqschema-converter/", "project_urls": {"Homepage": "https://github.com/kislerdm/gbqschema_converter"}, "release_url": "https://pypi.org/project/gbqschema-converter/1.1.0/", "requires_dist": ["fastjsonschema (>=2.14.4)", "google-cloud-bigquery (>=1.24.0)"], "requires_python": "", "summary": "Library to convert Google BigQuery Table Schema into Json Schema", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Google BigQuery Table Schema Converter</h1>\n<p><a href=\"./LICENSE\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb7554d3f165ac5e7bc396a6fbc22d51a890512a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f616e7369636f6c6f72746167732e737667\"></a>\n<a href=\"./\" rel=\"nofollow\"><img alt=\"pyversion\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/485bd28a56cc69d19f857395711e92b65396de25/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d707974686f6e26636f6c6f723d626c7565266d6573736167653d332e36253230253743253230332e37253230253743253230332e38\"></a>\n<a href=\"./\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3c9feaad328f0badb27170b78a5de299445829a/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d636f76657261676526636f6c6f723d627269676874677265656e266d6573736167653d3934253235\"></a>\n<a href=\"./\" rel=\"nofollow\"><img alt=\"test\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/21ec6e0b01205b3e0dac6daec5ce643fa50c52cd/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d746573747326636f6c6f723d73756363657373266d6573736167653d313030253235\"></a></p>\n<p>Python library to convert <a href=\"https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#datetime_type\" rel=\"nofollow\">Google BigQuery table schema</a> into <a href=\"https://json-schema.org/draft-07/json-schema-release-notes.html\" rel=\"nofollow\">draft-07</a> <a href=\"https://json-schema.org/\" rel=\"nofollow\">json schema</a> and vice versa.</p>\n<p>The library includes two main modules:</p>\n<pre>gbqschema_converter\n\u251c\u2500\u2500 gbqschema_to_jsonschema.py\n\u2514\u2500\u2500 jsonschema_to_gbqschema.py\n</pre>\n<p>Each of those modules has two main functions:</p>\n<ul>\n<li><code>json_representation</code>: corresponds to json output (input for <code>gbqschema_to_jsonschema</code>).</li>\n<li><code>sdk_representation</code>: corresponds to <a href=\"https://googleapis.dev/python/bigquery/latest/generated/google.cloud.bigquery.schema.SchemaField.html\" rel=\"nofollow\">Google Python SDK format</a> output (input for <code>gbqschema_to_jsonschema</code>).</li>\n</ul>\n<h2>Installation</h2>\n<pre>python3 -m venv env <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">source</span> <span class=\"si\">${</span><span class=\"nv\">PWD</span><span class=\"si\">}</span>/env/bin/activate\n<span class=\"o\">(</span>env<span class=\"o\">)</span> pip install --no-cache-dir gbqschema_converter\n</pre>\n<h2>Usage: CLI</h2>\n<h3>Convert json-schema to GBQ table schema</h3>\n<pre><span class=\"o\">(</span>env<span class=\"o\">)</span> json2gbq -h\nusage: json2gbq <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">(</span>-i INPUT <span class=\"p\">|</span> -f FILE<span class=\"o\">)</span>\n\nGoogle BigQuery Table Schema Converter\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -i INPUT, --input INPUT\n                        Input object as string.\n  -f FILE, --file FILE  Input object as file path.\n</pre>\n<h4>Example: stdin</h4>\n<p>Execution:</p>\n<pre><span class=\"o\">(</span>env<span class=\"o\">)</span> json2gbq -i <span class=\"s1\">'{</span>\n<span class=\"s1\">  \"$schema\": \"http://json-schema.org/draft-07/schema#\",</span>\n<span class=\"s1\">  \"type\": \"array\",</span>\n<span class=\"s1\">  \"items\": {</span>\n<span class=\"s1\">    \"$ref\": \"#/definitions/element\"</span>\n<span class=\"s1\">  },</span>\n<span class=\"s1\">  \"definitions\": {</span>\n<span class=\"s1\">    \"element\": {</span>\n<span class=\"s1\">      \"type\": \"object\",</span>\n<span class=\"s1\">      \"properties\": {</span>\n<span class=\"s1\">        \"att_01\": {</span>\n<span class=\"s1\">          \"type\": \"integer\",</span>\n<span class=\"s1\">          \"description\": \"Att 1\"</span>\n<span class=\"s1\">        },</span>\n<span class=\"s1\">        \"att_02\": {</span>\n<span class=\"s1\">          \"type\": \"number\",</span>\n<span class=\"s1\">          \"description\": \"Att 2\"</span>\n<span class=\"s1\">        },</span>\n<span class=\"s1\">        \"att_03\": {</span>\n<span class=\"s1\">          \"type\": \"string\"</span>\n<span class=\"s1\">        },</span>\n<span class=\"s1\">        \"att_04\": {</span>\n<span class=\"s1\">          \"type\": \"boolean\"</span>\n<span class=\"s1\">        },</span>\n<span class=\"s1\">        \"att_05\": {</span>\n<span class=\"s1\">          \"type\": \"string\",</span>\n<span class=\"s1\">          \"format\": \"date\"</span>\n<span class=\"s1\">        },</span>\n<span class=\"s1\">        \"att_06\": {</span>\n<span class=\"s1\">          \"type\": \"string\",</span>\n<span class=\"s1\">          \"format\": \"date-time\"</span>\n<span class=\"s1\">        },</span>\n<span class=\"s1\">        \"att_07\": {</span>\n<span class=\"s1\">          \"type\": \"string\",</span>\n<span class=\"s1\">          \"format\": \"time\"</span>\n<span class=\"s1\">        }</span>\n<span class=\"s1\">      },</span>\n<span class=\"s1\">      \"required\": [</span>\n<span class=\"s1\">        \"att_02\"</span>\n<span class=\"s1\">      ]</span>\n<span class=\"s1\">    }</span>\n<span class=\"s1\">  }</span>\n<span class=\"s1\">}'</span>\n</pre>\n<p>Output:</p>\n<pre><span class=\"m\">2020</span>-04-08 <span class=\"m\">21</span>:42:51.700 <span class=\"o\">[</span>INFO <span class=\"o\">]</span> <span class=\"o\">[</span>Google BigQuery Table Schema Converter<span class=\"o\">]</span> Output <span class=\"o\">(</span><span class=\"m\">5</span>.52 ms elapsed<span class=\"o\">)</span>:\n<span class=\"o\">[</span>\n  <span class=\"o\">{</span>\n    <span class=\"s2\">\"description\"</span>: <span class=\"s2\">\"Att 1\"</span>,\n    <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"att_01\"</span>,\n    <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"INTEGER\"</span>,\n    <span class=\"s2\">\"mode\"</span>: <span class=\"s2\">\"NULLABLE\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"o\">{</span>\n    <span class=\"s2\">\"description\"</span>: <span class=\"s2\">\"Att 2\"</span>,\n    <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"att_02\"</span>,\n    <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"NUMERIC\"</span>,\n    <span class=\"s2\">\"mode\"</span>: <span class=\"s2\">\"REQUIRED\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"o\">{</span>\n    <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"att_03\"</span>,\n    <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"STRING\"</span>,\n    <span class=\"s2\">\"mode\"</span>: <span class=\"s2\">\"NULLABLE\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"o\">{</span>\n    <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"att_04\"</span>,\n    <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"BOOLEAN\"</span>,\n    <span class=\"s2\">\"mode\"</span>: <span class=\"s2\">\"NULLABLE\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"o\">{</span>\n    <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"att_05\"</span>,\n    <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"DATE\"</span>,\n    <span class=\"s2\">\"mode\"</span>: <span class=\"s2\">\"NULLABLE\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"o\">{</span>\n    <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"att_06\"</span>,\n    <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"TIMESTAMP\"</span>,\n    <span class=\"s2\">\"mode\"</span>: <span class=\"s2\">\"NULLABLE\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"o\">{</span>\n    <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"att_07\"</span>,\n    <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"STRING\"</span>,\n    <span class=\"s2\">\"mode\"</span>: <span class=\"s2\">\"NULLABLE\"</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">]</span>\n</pre>\n<h4>Example: file</h4>\n<p>Execution:</p>\n<pre><span class=\"o\">(</span>env<span class=\"o\">)</span> json2gbq -f <span class=\"si\">${</span><span class=\"nv\">PWD</span><span class=\"si\">}</span>/data/jsonschema.json\n</pre>\n<p>Output:</p>\n<pre><span class=\"m\">2020</span>-04-08 <span class=\"m\">21</span>:57:25.516 <span class=\"o\">[</span>INFO <span class=\"o\">]</span> <span class=\"o\">[</span>Google BigQuery Table Schema Converter<span class=\"o\">]</span> Output <span class=\"o\">(</span><span class=\"m\">6</span>.39 ms elapsed<span class=\"o\">)</span>:\n<span class=\"o\">[</span>\n  <span class=\"o\">{</span>\n    <span class=\"s2\">\"description\"</span>: <span class=\"s2\">\"Att 1\"</span>,\n    <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"att_01\"</span>,\n    <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"INTEGER\"</span>,\n    <span class=\"s2\">\"mode\"</span>: <span class=\"s2\">\"NULLABLE\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"o\">{</span>\n    <span class=\"s2\">\"description\"</span>: <span class=\"s2\">\"Att 2\"</span>,\n    <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"att_02\"</span>,\n    <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"NUMERIC\"</span>,\n    <span class=\"s2\">\"mode\"</span>: <span class=\"s2\">\"REQUIRED\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"o\">{</span>\n    <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"att_03\"</span>,\n    <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"STRING\"</span>,\n    <span class=\"s2\">\"mode\"</span>: <span class=\"s2\">\"NULLABLE\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"o\">{</span>\n    <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"att_04\"</span>,\n    <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"BOOLEAN\"</span>,\n    <span class=\"s2\">\"mode\"</span>: <span class=\"s2\">\"NULLABLE\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"o\">{</span>\n    <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"att_05\"</span>,\n    <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"DATE\"</span>,\n    <span class=\"s2\">\"mode\"</span>: <span class=\"s2\">\"NULLABLE\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"o\">{</span>\n    <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"att_06\"</span>,\n    <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"TIMESTAMP\"</span>,\n    <span class=\"s2\">\"mode\"</span>: <span class=\"s2\">\"NULLABLE\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"o\">{</span>\n    <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"att_07\"</span>,\n    <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"STRING\"</span>,\n    <span class=\"s2\">\"mode\"</span>: <span class=\"s2\">\"NULLABLE\"</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">]</span>\n</pre>\n<h3>Convert GBQ table schema to json-schema</h3>\n<pre><span class=\"o\">(</span>env<span class=\"o\">)</span> gbq2json -h\nusage: gbq2json <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">(</span>-i INPUT <span class=\"p\">|</span> -f FILE<span class=\"o\">)</span>\n\nGoogle BigQuery Table Schema Converter\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -i INPUT, --input INPUT\n                        Input object as string.\n  -f FILE, --file FILE  Input object as file path.\n</pre>\n<h4>Example: stdin</h4>\n<p>Execution:</p>\n<pre><span class=\"o\">(</span>env<span class=\"o\">)</span> gbq2json -i <span class=\"s1\">'[</span>\n<span class=\"s1\">  {</span>\n<span class=\"s1\">    \"description\": \"Att 1\",</span>\n<span class=\"s1\">    \"name\": \"att_01\",</span>\n<span class=\"s1\">    \"type\": \"INTEGER\",</span>\n<span class=\"s1\">    \"mode\": \"NULLABLE\"</span>\n<span class=\"s1\">  },</span>\n<span class=\"s1\">  {</span>\n<span class=\"s1\">    \"description\": \"Att 2\",</span>\n<span class=\"s1\">    \"name\": \"att_02\",</span>\n<span class=\"s1\">    \"type\": \"NUMERIC\",</span>\n<span class=\"s1\">    \"mode\": \"REQUIRED\"</span>\n<span class=\"s1\">  },</span>\n<span class=\"s1\">  {</span>\n<span class=\"s1\">    \"name\": \"att_03\",</span>\n<span class=\"s1\">    \"type\": \"STRING\",</span>\n<span class=\"s1\">    \"mode\": \"NULLABLE\"</span>\n<span class=\"s1\">  },</span>\n<span class=\"s1\">  {</span>\n<span class=\"s1\">    \"name\": \"att_04\",</span>\n<span class=\"s1\">    \"type\": \"BOOLEAN\",</span>\n<span class=\"s1\">    \"mode\": \"NULLABLE\"</span>\n<span class=\"s1\">  },</span>\n<span class=\"s1\">  {</span>\n<span class=\"s1\">    \"name\": \"att_05\",</span>\n<span class=\"s1\">    \"type\": \"DATE\",</span>\n<span class=\"s1\">    \"mode\": \"NULLABLE\"</span>\n<span class=\"s1\">  },</span>\n<span class=\"s1\">  {</span>\n<span class=\"s1\">    \"name\": \"att_06\",</span>\n<span class=\"s1\">    \"type\": \"DATETIME\",</span>\n<span class=\"s1\">    \"mode\": \"NULLABLE\"</span>\n<span class=\"s1\">  },</span>\n<span class=\"s1\">  {</span>\n<span class=\"s1\">    \"name\": \"att_07\",</span>\n<span class=\"s1\">    \"type\": \"TIMESTAMP\",</span>\n<span class=\"s1\">    \"mode\": \"NULLABLE\"</span>\n<span class=\"s1\">  }</span>\n<span class=\"s1\">]'</span>\n</pre>\n<p>Output:</p>\n<pre><span class=\"m\">2020</span>-04-08 <span class=\"m\">21</span>:51:05.370 <span class=\"o\">[</span>INFO <span class=\"o\">]</span> <span class=\"o\">[</span>Google BigQuery Table Schema Converter<span class=\"o\">]</span> Output <span class=\"o\">(</span><span class=\"m\">1</span>.08 ms elapsed<span class=\"o\">)</span>:\n<span class=\"o\">{</span>\n  <span class=\"s2\">\"</span><span class=\"nv\">$schema</span><span class=\"s2\">\"</span>: <span class=\"s2\">\"http://json-schema.org/draft-07/schema#\"</span>,\n  <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"array\"</span>,\n  <span class=\"s2\">\"items\"</span>: <span class=\"o\">{</span>\n    <span class=\"s2\">\"</span><span class=\"nv\">$ref</span><span class=\"s2\">\"</span>: <span class=\"s2\">\"#/definitions/element\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"s2\">\"definitions\"</span>: <span class=\"o\">{</span>\n    <span class=\"s2\">\"element\"</span>: <span class=\"o\">{</span>\n      <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"object\"</span>,\n      <span class=\"s2\">\"properties\"</span>: <span class=\"o\">{</span>\n        <span class=\"s2\">\"att_01\"</span>: <span class=\"o\">{</span>\n          <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"integer\"</span>,\n          <span class=\"s2\">\"description\"</span>: <span class=\"s2\">\"Att 1\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"s2\">\"att_02\"</span>: <span class=\"o\">{</span>\n          <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"number\"</span>,\n          <span class=\"s2\">\"description\"</span>: <span class=\"s2\">\"Att 2\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"s2\">\"att_03\"</span>: <span class=\"o\">{</span>\n          <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"string\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"s2\">\"att_04\"</span>: <span class=\"o\">{</span>\n          <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"boolean\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"s2\">\"att_05\"</span>: <span class=\"o\">{</span>\n          <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"string\"</span>,\n          <span class=\"s2\">\"format\"</span>: <span class=\"s2\">\"date\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"s2\">\"att_06\"</span>: <span class=\"o\">{</span>\n          <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"string\"</span>,\n          <span class=\"s2\">\"pattern\"</span>: <span class=\"s2\">\"^[0-9]{4}-((|0)[1-9]|1[0-2])-((|[0-2])[1-9]|3[0-1])(|T)((|[0-1])[0-9]|2[0-3]):((|[0-5])[0-9]):((|[0-5])[0-9])(|.[0-9]{1,6})</span>$<span class=\"s2\">\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"s2\">\"att_07\"</span>: <span class=\"o\">{</span>\n          <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"string\"</span>,\n          <span class=\"s2\">\"format\"</span>: <span class=\"s2\">\"date-time\"</span>\n        <span class=\"o\">}</span>\n      <span class=\"o\">}</span>,\n      <span class=\"s2\">\"additionalProperties\"</span>: false,\n      <span class=\"s2\">\"required\"</span>: <span class=\"o\">[</span>\n        <span class=\"s2\">\"att_02\"</span>\n      <span class=\"o\">]</span>\n    <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre>\n<h4>Example: file</h4>\n<p>Execution:</p>\n<pre><span class=\"o\">(</span>env<span class=\"o\">)</span> gbq2json -f <span class=\"si\">${</span><span class=\"nv\">PWD</span><span class=\"si\">}</span>/data/gbqschema.json\n</pre>\n<p>Output:</p>\n<pre><span class=\"m\">2020</span>-04-08 <span class=\"m\">21</span>:55:20.275 <span class=\"o\">[</span>INFO <span class=\"o\">]</span> <span class=\"o\">[</span>Google BigQuery Table Schema Converter<span class=\"o\">]</span> Output <span class=\"o\">(</span><span class=\"m\">1</span>.72 ms elapsed<span class=\"o\">)</span>:\n<span class=\"o\">{</span>\n  <span class=\"s2\">\"</span><span class=\"nv\">$schema</span><span class=\"s2\">\"</span>: <span class=\"s2\">\"http://json-schema.org/draft-07/schema#\"</span>,\n  <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"array\"</span>,\n  <span class=\"s2\">\"items\"</span>: <span class=\"o\">{</span>\n    <span class=\"s2\">\"</span><span class=\"nv\">$ref</span><span class=\"s2\">\"</span>: <span class=\"s2\">\"#/definitions/element\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"s2\">\"definitions\"</span>: <span class=\"o\">{</span>\n    <span class=\"s2\">\"element\"</span>: <span class=\"o\">{</span>\n      <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"object\"</span>,\n      <span class=\"s2\">\"properties\"</span>: <span class=\"o\">{</span>\n        <span class=\"s2\">\"att_01\"</span>: <span class=\"o\">{</span>\n          <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"integer\"</span>,\n          <span class=\"s2\">\"description\"</span>: <span class=\"s2\">\"Att 1\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"s2\">\"att_02\"</span>: <span class=\"o\">{</span>\n          <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"number\"</span>,\n          <span class=\"s2\">\"description\"</span>: <span class=\"s2\">\"Att 2\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"s2\">\"att_03\"</span>: <span class=\"o\">{</span>\n          <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"string\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"s2\">\"att_04\"</span>: <span class=\"o\">{</span>\n          <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"boolean\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"s2\">\"att_05\"</span>: <span class=\"o\">{</span>\n          <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"string\"</span>,\n          <span class=\"s2\">\"format\"</span>: <span class=\"s2\">\"date\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"s2\">\"att_06\"</span>: <span class=\"o\">{</span>\n          <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"string\"</span>,\n          <span class=\"s2\">\"pattern\"</span>: <span class=\"s2\">\"^[0-9]{4}-((|0)[1-9]|1[0-2])-((|[0-2])[1-9]|3[0-1])(|T)((|[0-1])[0-9]|2[0-3]):((|[0-5])[0-9]):((|[0-5])[0-9])(|.[0-9]{1,6})</span>$<span class=\"s2\">\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"s2\">\"att_07\"</span>: <span class=\"o\">{</span>\n          <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"string\"</span>,\n          <span class=\"s2\">\"format\"</span>: <span class=\"s2\">\"date-time\"</span>\n        <span class=\"o\">}</span>\n      <span class=\"o\">}</span>,\n      <span class=\"s2\">\"additionalProperties\"</span>: false,\n      <span class=\"s2\">\"required\"</span>: <span class=\"o\">[</span>\n        <span class=\"s2\">\"att_02\"</span>\n      <span class=\"o\">]</span>\n    <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre>\n<h2>Usage: python program</h2>\n<h3>Convert json-schema to GBQ table schema</h3>\n<h4>Example: output as json</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gbqschema_converter.jsonschema_to_gbqschema</span> <span class=\"kn\">import</span> <span class=\"n\">json_representation</span> <span class=\"k\">as</span> <span class=\"n\">converter</span>\n\n<span class=\"n\">schema_in</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"$schema\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://json-schema.org/draft-07/schema#\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"array\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"items\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"$ref\"</span><span class=\"p\">:</span> <span class=\"s2\">\"#/definitions/element\"</span><span class=\"p\">,</span>\n  <span class=\"p\">},</span>\n  <span class=\"s2\">\"definitions\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"element\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"att_01\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"integer\"</span><span class=\"p\">,</span>\n          <span class=\"s2\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Att 1\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">\"att_02\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"number\"</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n      <span class=\"p\">}</span>\n      <span class=\"s2\">\"required\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"att_02\"</span><span class=\"p\">,</span>\n      <span class=\"p\">],</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">schema_out</span> <span class=\"o\">=</span> <span class=\"n\">converter</span><span class=\"p\">(</span><span class=\"n\">schema_in</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">schema_out</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><span class=\"o\">[{</span><span class=\"s1\">'description'</span>: <span class=\"s1\">'Att 1'</span>, <span class=\"s1\">'name'</span>: <span class=\"s1\">'att_01'</span>, <span class=\"s1\">'type'</span>: <span class=\"s1\">'INTEGER'</span>, <span class=\"s1\">'mode'</span>: <span class=\"s1\">'NULLABLE'</span><span class=\"o\">}</span>, <span class=\"o\">{</span><span class=\"s1\">'name'</span>: <span class=\"s1\">'att_02'</span>, <span class=\"s1\">'type'</span>: <span class=\"s1\">'NUMERIC'</span>, <span class=\"s1\">'mode'</span>: <span class=\"s1\">'REQUIRED'</span><span class=\"o\">}]</span>\n</pre>\n<h4>Example: output as list of SchemaField (SDK format)</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gbqschema_converter.jsonschema_to_gbqschema</span> <span class=\"kn\">import</span> <span class=\"n\">sdk_representation</span> <span class=\"k\">as</span> <span class=\"n\">converter</span>\n\n<span class=\"n\">schema_in</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"$schema\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://json-schema.org/draft-07/schema#\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"array\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"items\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"$ref\"</span><span class=\"p\">:</span> <span class=\"s2\">\"#/definitions/element\"</span><span class=\"p\">,</span>\n  <span class=\"p\">},</span>\n  <span class=\"s2\">\"definitions\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"element\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"att_01\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"integer\"</span><span class=\"p\">,</span>\n          <span class=\"s2\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Att 1\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">\"att_02\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"number\"</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n      <span class=\"p\">},</span>\n      <span class=\"s2\">\"required\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"att_02\"</span><span class=\"p\">,</span>\n      <span class=\"p\">],</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">schema_out</span> <span class=\"o\">=</span> <span class=\"n\">converter</span><span class=\"p\">(</span><span class=\"n\">schema_in</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">schema_out</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><span class=\"o\">[</span>SchemaField<span class=\"o\">(</span><span class=\"s1\">'att_01'</span>, <span class=\"s1\">'INTEGER'</span>, <span class=\"s1\">'NULLABLE'</span>, <span class=\"s1\">'Att 1'</span>, <span class=\"o\">())</span>, SchemaField<span class=\"o\">(</span><span class=\"s1\">'att_02'</span>, <span class=\"s1\">'NUMERIC'</span>, <span class=\"s1\">'REQUIRED'</span>, None, <span class=\"o\">())]</span>\n</pre>\n<h3>Convert GBQ table schema to json-schema</h3>\n<h4>Example: output as json</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gbqschema_converter.gbqschema_to_jsonschema</span> <span class=\"kn\">import</span> <span class=\"n\">json_representation</span> <span class=\"k\">as</span> <span class=\"n\">converter</span>\n\n<span class=\"n\">schema_in</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'Att 1'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'att_01'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'INTEGER'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'mode'</span><span class=\"p\">:</span> <span class=\"s1\">'NULLABLE'</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'att_02'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'NUMERIC'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'mode'</span><span class=\"p\">:</span> <span class=\"s1\">'REQUIRED'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">schema_out</span> <span class=\"o\">=</span> <span class=\"n\">converter</span><span class=\"p\">(</span><span class=\"n\">schema_in</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">schema_out</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><span class=\"o\">{</span><span class=\"s1\">'$schema'</span>: <span class=\"s1\">'http://json-schema.org/draft-07/schema#'</span>, <span class=\"s1\">'type'</span>: <span class=\"s1\">'array'</span>, <span class=\"s1\">'items'</span>: <span class=\"o\">{</span><span class=\"s1\">'$ref'</span>: <span class=\"s1\">'#/definitions/element'</span><span class=\"o\">}</span>, <span class=\"s1\">'definitions'</span>: <span class=\"o\">{</span><span class=\"s1\">'element'</span>: <span class=\"o\">{</span><span class=\"s1\">'type'</span>: <span class=\"s1\">'object'</span>, <span class=\"s1\">'properties'</span>: <span class=\"o\">{</span><span class=\"s1\">'att_01'</span>: <span class=\"o\">{</span>\n<span class=\"s1\">'type'</span>: <span class=\"s1\">'integer'</span>, <span class=\"s1\">'description'</span>: <span class=\"s1\">'Att 1'</span><span class=\"o\">}</span>, <span class=\"s1\">'att_02'</span>: <span class=\"o\">{</span><span class=\"s1\">'type'</span>: <span class=\"s1\">'number'</span><span class=\"o\">}}</span>, <span class=\"s1\">'additionalProperties'</span>: False, <span class=\"s1\">'required'</span>: <span class=\"o\">[</span><span class=\"s1\">'att_02'</span><span class=\"o\">]}}}</span>\n</pre>\n<h4>Example: output as list of SchemaField (SDK format)</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gbqschema_converter.gbqschema_to_jsonschema</span> <span class=\"kn\">import</span> <span class=\"n\">sdk_representation</span> <span class=\"k\">as</span> <span class=\"n\">converter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">google.cloud.bigquery</span> <span class=\"kn\">import</span> <span class=\"n\">SchemaField</span>\n\n<span class=\"n\">schema_in</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">SchemaField</span><span class=\"p\">(</span><span class=\"s1\">'att_01'</span><span class=\"p\">,</span> <span class=\"s1\">'INTEGER'</span><span class=\"p\">,</span> <span class=\"s1\">'NULLABLE'</span><span class=\"p\">,</span> <span class=\"s1\">'Att 1'</span><span class=\"p\">,</span> <span class=\"p\">()),</span>\n    <span class=\"n\">SchemaField</span><span class=\"p\">(</span><span class=\"s1\">'att_02'</span><span class=\"p\">,</span> <span class=\"s1\">'NUMERIC'</span><span class=\"p\">,</span> <span class=\"s1\">'REQUIRED'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">()),</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">schema_out</span> <span class=\"o\">=</span> <span class=\"n\">converter</span><span class=\"p\">(</span><span class=\"n\">schema_in</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">schema_out</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><span class=\"o\">{</span><span class=\"s1\">'$schema'</span>: <span class=\"s1\">'http://json-schema.org/draft-07/schema#'</span>, <span class=\"s1\">'type'</span>: <span class=\"s1\">'array'</span>, <span class=\"s1\">'items'</span>: <span class=\"o\">{</span><span class=\"s1\">'$ref'</span>: <span class=\"s1\">'#/definitions/element'</span><span class=\"o\">}</span>, <span class=\"s1\">'definitions'</span>: <span class=\"o\">{</span><span class=\"s1\">'element'</span>: <span class=\"o\">{</span><span class=\"s1\">'type'</span>: <span class=\"s1\">'object'</span>, <span class=\"s1\">'properties'</span>: <span class=\"o\">{</span><span class=\"s1\">'att_01'</span>: <span class=\"o\">{</span>\n<span class=\"s1\">'type'</span>: <span class=\"s1\">'integer'</span>, <span class=\"s1\">'description'</span>: <span class=\"s1\">'Att 1'</span><span class=\"o\">}</span>, <span class=\"s1\">'att_02'</span>: <span class=\"o\">{</span><span class=\"s1\">'type'</span>: <span class=\"s1\">'number'</span><span class=\"o\">}}</span>, <span class=\"s1\">'additionalProperties'</span>: False, <span class=\"s1\">'required'</span>: <span class=\"o\">[</span><span class=\"s1\">'att_02'</span><span class=\"o\">]}}}</span>\n</pre>\n\n          </div>"}, "last_serial": 6993671, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "43ccb608e20d85d7392a3f7dcf9c1538", "sha256": "a126bd4e1c8b30e7529bea311d21a30761ccea5e96a2b867998963fc59ce42bc"}, "downloads": -1, "filename": "gbqschema_converter-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "43ccb608e20d85d7392a3f7dcf9c1538", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8643, "upload_time": "2020-04-08T22:48:03", "upload_time_iso_8601": "2020-04-08T22:48:03.585467Z", "url": "https://files.pythonhosted.org/packages/11/63/1151f14e6609bb8ef26fb2a9bc4bdbbd347a7f394c2d61aa4fdbf54c132d/gbqschema_converter-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "258d56c1c79c4ba421aa50afe74c1428", "sha256": "e9dc7e19a2838fe2a08b81a7d065b7f69f746575a5de91e54f9440f0219add56"}, "downloads": -1, "filename": "gbqschema_converter-1.0.tar.gz", "has_sig": false, "md5_digest": "258d56c1c79c4ba421aa50afe74c1428", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9523, "upload_time": "2020-04-08T22:48:06", "upload_time_iso_8601": "2020-04-08T22:48:06.366468Z", "url": "https://files.pythonhosted.org/packages/e0/0e/1507f8b67a60950c4467ca233bcdcfa77046007534ee380620b6d251563d/gbqschema_converter-1.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "abb961982d59c8a28b37c21093dcb679", "sha256": "5328fe9eaa0f686cb33996f6acd396ad7e018fc459caccc6392f27c8d70ee6a1"}, "downloads": -1, "filename": "gbqschema_converter-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "abb961982d59c8a28b37c21093dcb679", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8893, "upload_time": "2020-04-10T14:44:54", "upload_time_iso_8601": "2020-04-10T14:44:54.922184Z", "url": "https://files.pythonhosted.org/packages/a4/51/fc5de0a3d37b38ea851779a7aeff642e771d38b4e7d63c41013973e792f4/gbqschema_converter-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b828d599ebbf17d23fcf1d7cd66688a", "sha256": "9c8fa214022220a4b4d7c4fa75196bfa1f2bc7d9950675d2fe670a8393a2204b"}, "downloads": -1, "filename": "gbqschema_converter-1.1.0.tar.gz", "has_sig": false, "md5_digest": "0b828d599ebbf17d23fcf1d7cd66688a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10397, "upload_time": "2020-04-10T14:44:56", "upload_time_iso_8601": "2020-04-10T14:44:56.694647Z", "url": "https://files.pythonhosted.org/packages/6b/b3/cfde4327e62b7f17dc46b05bc8c985cab2355054f8416b07a5b51fb134d8/gbqschema_converter-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "abb961982d59c8a28b37c21093dcb679", "sha256": "5328fe9eaa0f686cb33996f6acd396ad7e018fc459caccc6392f27c8d70ee6a1"}, "downloads": -1, "filename": "gbqschema_converter-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "abb961982d59c8a28b37c21093dcb679", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8893, "upload_time": "2020-04-10T14:44:54", "upload_time_iso_8601": "2020-04-10T14:44:54.922184Z", "url": "https://files.pythonhosted.org/packages/a4/51/fc5de0a3d37b38ea851779a7aeff642e771d38b4e7d63c41013973e792f4/gbqschema_converter-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b828d599ebbf17d23fcf1d7cd66688a", "sha256": "9c8fa214022220a4b4d7c4fa75196bfa1f2bc7d9950675d2fe670a8393a2204b"}, "downloads": -1, "filename": "gbqschema_converter-1.1.0.tar.gz", "has_sig": false, "md5_digest": "0b828d599ebbf17d23fcf1d7cd66688a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10397, "upload_time": "2020-04-10T14:44:56", "upload_time_iso_8601": "2020-04-10T14:44:56.694647Z", "url": "https://files.pythonhosted.org/packages/6b/b3/cfde4327e62b7f17dc46b05bc8c985cab2355054f8416b07a5b51fb134d8/gbqschema_converter-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:55 2020"}