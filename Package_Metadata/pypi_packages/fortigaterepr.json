{"info": {"author": "Will McLendon", "author_email": "wimclend@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# fortigaterepr\n\nNOTE:  This should be considered ALPHA!\n\nBuilt off of Fortinet's fortiosapi library to provide an abstraction and representation of various operational state data of a Fortigate Device.  Currently most operational data is modeled in a sub-classed Pandas Dataframe, and the Dataframe itself can be manipulated like any other Dataframe for manipulation of the output.  Has some helper methods that more or less wrap some of the methods in the fortiosapi library -- most (all?) of the parameters that library accepts are passed through from the FortigateDevice Class, with the same defaults.  The data is sub-classed to allow for some helper methods to clean up the data and also to provide some canned output filtering options like removing certain often-unnecessary columns from printouts, etc.\n\nTo gather data from the device, use one of the 'get' methods available such as `get_interfaces()`.  This returns the result and also stores the result as a property of the class instance - i.e. `dev.interfaces`\n\nIn general all of the data returned from the device API is stored in the DataFrame, though there is some data cleanup that can occur (i.e. converting epoch timestamp to readable date/time, replacing NaNs with \"None\" or \"N/A\", etc.).  Often the number of columns is quite large, and much of the data is not useful most of the time, so each DataFrame has a `get()` method that will return a copy of the DataFrame with certain columns removed (depends upon the table).  If the full DataFrame is needed, you can just reference the appropriate class instance property - i.e. `dev.interfaces`\n\n## Prerequisites\n\nTo use the Fortigate REST API, the device must have a defined REST API admin account, with appropriate permissions.  In the GUI you can create an Admin Profile for the REST API admin account under System --> Admin Profiles --> Create New.  From there you can specify what permissions to give for the various sections.  Next, you create a REST API admin account -- in the GUI via System --> Administrators --> Create New --> REST API Admin.  Once you create the API Token you'll have to save it somewhere safe!\n\nExample CLI config:\n\n```bash\nconfig system accprofile\n    edit \"API_ADMIN_PROFILE\"\n        set comments \"Admin Profile for REST API Access\"\n        set secfabgrp read-write\n        set ftviewgrp read-write\n        set authgrp read-write\n        set sysgrp read-write\n        set netgrp read-write\n        set loggrp read-write\n        set fwgrp read-write\n        set vpngrp read-write\n        set utmgrp read-write\n        set wifi read-write\n    next\nend\n# create API User:\nconfig system api-user\n    edit \"apiuser\"\n        set comments \"rest api user\"\n        set api-key ENC API-TOKEN-ENCRYPTED-STRING-HERE\n        set accprofile \"API_ADMIN_PROFILE\"\n        set vdom \"root\"\n        set cors-allow-origin \"https://fndn.fortinet.net\" ## Allows API exploration with FNDN\n        config trusthost\n            edit 1\n                set ipv4-trusthost 192.168.1.0 255.255.255.0\n            next\n        end\n    next\nend\n```\n\n### Creating an Admin Profile for API Accounts\n\nfortigaterepr offers some helpful methods to bootstrap creation of admin profiles and rest API users.  It currently supports creating basic read only or read-write admin profiles.  More granular permissions are possible, but are expected to be implemented outside of this library at this time.  The custom profile can be specified when creating the API User if needed.  Below is example of using fortigaterepr to create read only and readwrite profiles.  The `create_admin_profile()` function returns the name of the profile upon success.\n\n```python\nfrom fortigaterepr.fortigaterepr import FortigateDevice\n# create device:\ndev = FortigateDevice(\"192.0.2.50\", username=\"username\", password=\"password\", verify=False)\n# below will return the default RO profile name \"API_RO_PROFILE\"\nro_profile_name = dev.create_admin_profile(profile_type=\"RO\")\n\n# below will return the custom RW profile name \"test_rw_profile\"\nrw_profile_name = dev.create_admin_profile(profile_type=\"RW\", profile_name=\"test_rw_profile\")\n```\n\n### Creating an API User\n\nIn cases where an existing API User does not exist, and / or API token not known, the library has a helper method that will create an api user via SSH and create its token, and return that token to the caller, which can then be saved or used as needed for future API calls.  A short example that creates a RO and RW api user (based on profiles created above):\n\n```python\ndev = FortigateDevice(\"192.0.2.50\", username=\"username\", password=\"password\", verify=False)\n\n# create a read only api account, and store its api key that is generated\nro_apikey = dev.create_api_user(\n    \"ro-devapi\",\n    profile_name=ro_profile_name,\n    trusted_hosts_ipv4=[\"192.168.1.0/24\",\n    \"172.16.1.0/24\"],\n    comment=\"Test API User\")\n# associate api key to device, and get some data\ndev.apitoken = ro_apikey\nvpns = dev.get_active_ipsec_vpns()\n```\n\n## Basic Use\n\nSimple example usage assuming API User and token already exists:\n\n```python\nfrom fortigaterepr.fortigaterepr import FortigateDevice\ndev = FortigateDevice(\n    \"192.0.2.50\",\n    username=\"username\",\n    password=\"password\",\n    apitoken=\"secretapitoken\",\n    verify=False,\n)\n\nif not dev.restapilogin():\n    print(\"Error authenticating to API - exiting!\")\n    sys.exit(1)\n\ninterface_data = dev.get_interfaces()\n\n# print entire interface_data DataFrame:\nprint(interface_data)\n\n# print a generally more useful subset:\nprint(interface_data.get())\n```\n\n## TODO\n\n* Unit Tests\n* Documentation\n* more state data gathering / representation\n  * Address Book Objects\n  * how to add route table size?  as own dataframe, or somehow as part of Route Table DataFrame?\n* methods for other output formats -- i.e. a `to_html()` or `to_json()` method that takes all the stored data and writes it to HTML or JSON stdout or to a file.\n* add type hints\n* Improve dataframe return parsing for handling columns not existing in dataframe\n* other?\n\n\n=======\nHistory\n=======\n\n0.1.0 (2019-10-20)\n------------------\n\n* First release on PyPI.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wmclendon/fortigaterepr", "keywords": "fortigaterepr", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "fortigaterepr", "package_url": "https://pypi.org/project/fortigaterepr/", "platform": "", "project_url": "https://pypi.org/project/fortigaterepr/", "project_urls": {"Homepage": "https://github.com/wmclendon/fortigaterepr"}, "release_url": "https://pypi.org/project/fortigaterepr/0.1.6/", "requires_dist": ["fortiosapi", "pandas", "textfsm"], "requires_python": "", "summary": "Library to interact with and create representation of operational state data of a Fortigate device.", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>fortigaterepr</h1>\n<p>NOTE:  This should be considered ALPHA!</p>\n<p>Built off of Fortinet's fortiosapi library to provide an abstraction and representation of various operational state data of a Fortigate Device.  Currently most operational data is modeled in a sub-classed Pandas Dataframe, and the Dataframe itself can be manipulated like any other Dataframe for manipulation of the output.  Has some helper methods that more or less wrap some of the methods in the fortiosapi library -- most (all?) of the parameters that library accepts are passed through from the FortigateDevice Class, with the same defaults.  The data is sub-classed to allow for some helper methods to clean up the data and also to provide some canned output filtering options like removing certain often-unnecessary columns from printouts, etc.</p>\n<p>To gather data from the device, use one of the 'get' methods available such as <code>get_interfaces()</code>.  This returns the result and also stores the result as a property of the class instance - i.e. <code>dev.interfaces</code></p>\n<p>In general all of the data returned from the device API is stored in the DataFrame, though there is some data cleanup that can occur (i.e. converting epoch timestamp to readable date/time, replacing NaNs with \"None\" or \"N/A\", etc.).  Often the number of columns is quite large, and much of the data is not useful most of the time, so each DataFrame has a <code>get()</code> method that will return a copy of the DataFrame with certain columns removed (depends upon the table).  If the full DataFrame is needed, you can just reference the appropriate class instance property - i.e. <code>dev.interfaces</code></p>\n<h2>Prerequisites</h2>\n<p>To use the Fortigate REST API, the device must have a defined REST API admin account, with appropriate permissions.  In the GUI you can create an Admin Profile for the REST API admin account under System --&gt; Admin Profiles --&gt; Create New.  From there you can specify what permissions to give for the various sections.  Next, you create a REST API admin account -- in the GUI via System --&gt; Administrators --&gt; Create New --&gt; REST API Admin.  Once you create the API Token you'll have to save it somewhere safe!</p>\n<p>Example CLI config:</p>\n<pre>config system accprofile\n    edit <span class=\"s2\">\"API_ADMIN_PROFILE\"</span>\n        <span class=\"nb\">set</span> comments <span class=\"s2\">\"Admin Profile for REST API Access\"</span>\n        <span class=\"nb\">set</span> secfabgrp read-write\n        <span class=\"nb\">set</span> ftviewgrp read-write\n        <span class=\"nb\">set</span> authgrp read-write\n        <span class=\"nb\">set</span> sysgrp read-write\n        <span class=\"nb\">set</span> netgrp read-write\n        <span class=\"nb\">set</span> loggrp read-write\n        <span class=\"nb\">set</span> fwgrp read-write\n        <span class=\"nb\">set</span> vpngrp read-write\n        <span class=\"nb\">set</span> utmgrp read-write\n        <span class=\"nb\">set</span> wifi read-write\n    next\nend\n<span class=\"c1\"># create API User:</span>\nconfig system api-user\n    edit <span class=\"s2\">\"apiuser\"</span>\n        <span class=\"nb\">set</span> comments <span class=\"s2\">\"rest api user\"</span>\n        <span class=\"nb\">set</span> api-key ENC API-TOKEN-ENCRYPTED-STRING-HERE\n        <span class=\"nb\">set</span> accprofile <span class=\"s2\">\"API_ADMIN_PROFILE\"</span>\n        <span class=\"nb\">set</span> vdom <span class=\"s2\">\"root\"</span>\n        <span class=\"nb\">set</span> cors-allow-origin <span class=\"s2\">\"https://fndn.fortinet.net\"</span> <span class=\"c1\">## Allows API exploration with FNDN</span>\n        config trusthost\n            edit <span class=\"m\">1</span>\n                <span class=\"nb\">set</span> ipv4-trusthost <span class=\"m\">192</span>.168.1.0 <span class=\"m\">255</span>.255.255.0\n            next\n        end\n    next\nend\n</pre>\n<h3>Creating an Admin Profile for API Accounts</h3>\n<p>fortigaterepr offers some helpful methods to bootstrap creation of admin profiles and rest API users.  It currently supports creating basic read only or read-write admin profiles.  More granular permissions are possible, but are expected to be implemented outside of this library at this time.  The custom profile can be specified when creating the API User if needed.  Below is example of using fortigaterepr to create read only and readwrite profiles.  The <code>create_admin_profile()</code> function returns the name of the profile upon success.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fortigaterepr.fortigaterepr</span> <span class=\"kn\">import</span> <span class=\"n\">FortigateDevice</span>\n<span class=\"c1\"># create device:</span>\n<span class=\"n\">dev</span> <span class=\"o\">=</span> <span class=\"n\">FortigateDevice</span><span class=\"p\">(</span><span class=\"s2\">\"192.0.2.50\"</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">\"username\"</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">\"password\"</span><span class=\"p\">,</span> <span class=\"n\">verify</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"c1\"># below will return the default RO profile name \"API_RO_PROFILE\"</span>\n<span class=\"n\">ro_profile_name</span> <span class=\"o\">=</span> <span class=\"n\">dev</span><span class=\"o\">.</span><span class=\"n\">create_admin_profile</span><span class=\"p\">(</span><span class=\"n\">profile_type</span><span class=\"o\">=</span><span class=\"s2\">\"RO\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># below will return the custom RW profile name \"test_rw_profile\"</span>\n<span class=\"n\">rw_profile_name</span> <span class=\"o\">=</span> <span class=\"n\">dev</span><span class=\"o\">.</span><span class=\"n\">create_admin_profile</span><span class=\"p\">(</span><span class=\"n\">profile_type</span><span class=\"o\">=</span><span class=\"s2\">\"RW\"</span><span class=\"p\">,</span> <span class=\"n\">profile_name</span><span class=\"o\">=</span><span class=\"s2\">\"test_rw_profile\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Creating an API User</h3>\n<p>In cases where an existing API User does not exist, and / or API token not known, the library has a helper method that will create an api user via SSH and create its token, and return that token to the caller, which can then be saved or used as needed for future API calls.  A short example that creates a RO and RW api user (based on profiles created above):</p>\n<pre><span class=\"n\">dev</span> <span class=\"o\">=</span> <span class=\"n\">FortigateDevice</span><span class=\"p\">(</span><span class=\"s2\">\"192.0.2.50\"</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">\"username\"</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">\"password\"</span><span class=\"p\">,</span> <span class=\"n\">verify</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create a read only api account, and store its api key that is generated</span>\n<span class=\"n\">ro_apikey</span> <span class=\"o\">=</span> <span class=\"n\">dev</span><span class=\"o\">.</span><span class=\"n\">create_api_user</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"ro-devapi\"</span><span class=\"p\">,</span>\n    <span class=\"n\">profile_name</span><span class=\"o\">=</span><span class=\"n\">ro_profile_name</span><span class=\"p\">,</span>\n    <span class=\"n\">trusted_hosts_ipv4</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"192.168.1.0/24\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"172.16.1.0/24\"</span><span class=\"p\">],</span>\n    <span class=\"n\">comment</span><span class=\"o\">=</span><span class=\"s2\">\"Test API User\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># associate api key to device, and get some data</span>\n<span class=\"n\">dev</span><span class=\"o\">.</span><span class=\"n\">apitoken</span> <span class=\"o\">=</span> <span class=\"n\">ro_apikey</span>\n<span class=\"n\">vpns</span> <span class=\"o\">=</span> <span class=\"n\">dev</span><span class=\"o\">.</span><span class=\"n\">get_active_ipsec_vpns</span><span class=\"p\">()</span>\n</pre>\n<h2>Basic Use</h2>\n<p>Simple example usage assuming API User and token already exists:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fortigaterepr.fortigaterepr</span> <span class=\"kn\">import</span> <span class=\"n\">FortigateDevice</span>\n<span class=\"n\">dev</span> <span class=\"o\">=</span> <span class=\"n\">FortigateDevice</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"192.0.2.50\"</span><span class=\"p\">,</span>\n    <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">\"username\"</span><span class=\"p\">,</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">\"password\"</span><span class=\"p\">,</span>\n    <span class=\"n\">apitoken</span><span class=\"o\">=</span><span class=\"s2\">\"secretapitoken\"</span><span class=\"p\">,</span>\n    <span class=\"n\">verify</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">dev</span><span class=\"o\">.</span><span class=\"n\">restapilogin</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Error authenticating to API - exiting!\"</span><span class=\"p\">)</span>\n    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">interface_data</span> <span class=\"o\">=</span> <span class=\"n\">dev</span><span class=\"o\">.</span><span class=\"n\">get_interfaces</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># print entire interface_data DataFrame:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">interface_data</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># print a generally more useful subset:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">interface_data</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span>\n</pre>\n<h2>TODO</h2>\n<ul>\n<li>Unit Tests</li>\n<li>Documentation</li>\n<li>more state data gathering / representation\n<ul>\n<li>Address Book Objects</li>\n<li>how to add route table size?  as own dataframe, or somehow as part of Route Table DataFrame?</li>\n</ul>\n</li>\n<li>methods for other output formats -- i.e. a <code>to_html()</code> or <code>to_json()</code> method that takes all the stored data and writes it to HTML or JSON stdout or to a file.</li>\n<li>add type hints</li>\n<li>Improve dataframe return parsing for handling columns not existing in dataframe</li>\n<li>other?</li>\n</ul>\n<h1>=======\nHistory</h1>\n<h2>0.1.0 (2019-10-20)</h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n\n          </div>"}, "last_serial": 6107693, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7cf8f5fadbb0bddf0739292ff40c6a89", "sha256": "49e12ace6fc16d29969f5b6bf0a7a9aca2a02d79adcc9c3a40480ded9b11e798"}, "downloads": -1, "filename": "fortigaterepr-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7cf8f5fadbb0bddf0739292ff40c6a89", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11329, "upload_time": "2019-10-20T14:06:47", "upload_time_iso_8601": "2019-10-20T14:06:47.366440Z", "url": "https://files.pythonhosted.org/packages/97/10/8dc6e819ac96f0bf3dc12c8b6e8bb14322138d20400d283566b2d77a0a5f/fortigaterepr-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50f227822f1a8b823e53e3d142eaedab", "sha256": "66ae5777ee44d487534db3ac316d06f19287c27848b3ceb2a2e43782e52214d7"}, "downloads": -1, "filename": "fortigaterepr-0.1.0.tar.gz", "has_sig": false, "md5_digest": "50f227822f1a8b823e53e3d142eaedab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22034, "upload_time": "2019-10-20T14:06:49", "upload_time_iso_8601": "2019-10-20T14:06:49.912170Z", "url": "https://files.pythonhosted.org/packages/d2/81/927e048332e84a49c9e66d18285a56de6b70202ecd379a86f30f06cac4f4/fortigaterepr-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a60d243bb83905dc4e9cdf467abde2fa", "sha256": "4f184b7edc2064b7a891a52682bbd873d96e305822083b7e0e28c8f7415f2ef4"}, "downloads": -1, "filename": "fortigaterepr-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a60d243bb83905dc4e9cdf467abde2fa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11821, "upload_time": "2019-10-21T12:56:15", "upload_time_iso_8601": "2019-10-21T12:56:15.104483Z", "url": "https://files.pythonhosted.org/packages/56/e5/f3d6103e359f151ae8c108051642752562ae3f61e2a691aaf8cb0425bd2b/fortigaterepr-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be855f1012e178006b044cf958e979f3", "sha256": "565a62568aadcfb6033147bfabe70f684e40efea4f6be2acbde9d405261c511b"}, "downloads": -1, "filename": "fortigaterepr-0.1.1.tar.gz", "has_sig": false, "md5_digest": "be855f1012e178006b044cf958e979f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22564, "upload_time": "2019-10-21T12:56:16", "upload_time_iso_8601": "2019-10-21T12:56:16.834307Z", "url": "https://files.pythonhosted.org/packages/ba/0f/0e58d012983270222b76e99bc85414d77e7f8bb78c4fcb5ebae4efa3ab47/fortigaterepr-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "503d5eda49c5b50506a96a8307aedb42", "sha256": "b3a29a05008baf625babcf1954d57e9c5a757125ae2aab6573bc9f00600afb8a"}, "downloads": -1, "filename": "fortigaterepr-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "503d5eda49c5b50506a96a8307aedb42", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13585, "upload_time": "2019-10-27T17:56:43", "upload_time_iso_8601": "2019-10-27T17:56:43.991734Z", "url": "https://files.pythonhosted.org/packages/4f/a1/229ce1719b4243e2c7e752436775cd02c64efe9a0f33ef50afd32b2c15bd/fortigaterepr-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bcb4114f729291b93e58f614a839228d", "sha256": "f2985f1a3b4acadb1215a327fe8917d7534ea51802623cfc631c6c2908c83db3"}, "downloads": -1, "filename": "fortigaterepr-0.1.2.tar.gz", "has_sig": false, "md5_digest": "bcb4114f729291b93e58f614a839228d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25327, "upload_time": "2019-10-27T17:56:45", "upload_time_iso_8601": "2019-10-27T17:56:45.568932Z", "url": "https://files.pythonhosted.org/packages/1a/50/84ef874b48b0490a4f622637e82dbe22a2645fa2f8bdbdfbcf7e9fae8b65/fortigaterepr-0.1.2.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "3d5f1865eb356b208e23ea6e76fa7a83", "sha256": "81c29ded26418163bd56a9e14a92c566c8b985e1544f3bb180c6f01764058e80"}, "downloads": -1, "filename": "fortigaterepr-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3d5f1865eb356b208e23ea6e76fa7a83", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13578, "upload_time": "2019-10-28T08:56:26", "upload_time_iso_8601": "2019-10-28T08:56:26.394862Z", "url": "https://files.pythonhosted.org/packages/ff/8f/e6f7b3ad466f53b68e9da7647945b27142c8e5c07783a8bdc7ebb405e32d/fortigaterepr-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e585abb531eacbcbba569403aa3410a", "sha256": "fb013238d7d7b5992805a95913dc25dc9bd4e25d6f00b39b3dbc85416cfae1b9"}, "downloads": -1, "filename": "fortigaterepr-0.1.4.tar.gz", "has_sig": false, "md5_digest": "3e585abb531eacbcbba569403aa3410a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25342, "upload_time": "2019-10-28T08:56:28", "upload_time_iso_8601": "2019-10-28T08:56:28.030806Z", "url": "https://files.pythonhosted.org/packages/4c/19/73665f189f6748476b50d6cc3b96c4f77aa4f9f6fddd045b4347bee8dc2c/fortigaterepr-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "a9dd2ed5dda71e7015d10f63462fdcd6", "sha256": "134530d81a06ffc379185b2d76ae23b1a38912ccaf0cb87c71e2318b4f481036"}, "downloads": -1, "filename": "fortigaterepr-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a9dd2ed5dda71e7015d10f63462fdcd6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14229, "upload_time": "2019-11-02T21:04:16", "upload_time_iso_8601": "2019-11-02T21:04:16.050732Z", "url": "https://files.pythonhosted.org/packages/99/1b/f66a80926eb2607b257d7a8ce61067407e91894be662e00b9855479f0b66/fortigaterepr-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db063e478654b2972702b2ffdc295bee", "sha256": "f6d1eecb4da6dfdcc2c18be0c017cbd509f53ccf5ec446a7fe1dadf605012b4b"}, "downloads": -1, "filename": "fortigaterepr-0.1.5.tar.gz", "has_sig": false, "md5_digest": "db063e478654b2972702b2ffdc295bee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26576, "upload_time": "2019-11-02T21:04:17", "upload_time_iso_8601": "2019-11-02T21:04:17.324451Z", "url": "https://files.pythonhosted.org/packages/78/40/39e45b4a0b3834b829e7398820982e243b245876080f2b28d84c5ec2967a/fortigaterepr-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "73d8cd7778283133e0c6d60993406758", "sha256": "21a86a7a758fc056c24926dcabf61a2479d1cedba1f39206af86032601b95e8d"}, "downloads": -1, "filename": "fortigaterepr-0.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "73d8cd7778283133e0c6d60993406758", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15816, "upload_time": "2019-11-09T16:19:43", "upload_time_iso_8601": "2019-11-09T16:19:43.660866Z", "url": "https://files.pythonhosted.org/packages/9b/17/013814bdc6e060077169c9c197a4eda1ad97f501ffae04746f3ed2d88be4/fortigaterepr-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99872249d054a407d2cc53fdbacf1de5", "sha256": "41d8b7f724602ee75331c8c0c33fe986b64567a06e573e52bd723517c185886f"}, "downloads": -1, "filename": "fortigaterepr-0.1.6.tar.gz", "has_sig": false, "md5_digest": "99872249d054a407d2cc53fdbacf1de5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33380, "upload_time": "2019-11-09T16:19:45", "upload_time_iso_8601": "2019-11-09T16:19:45.603797Z", "url": "https://files.pythonhosted.org/packages/f1/4e/35488bdf24593755cf6d0d8357d92068e47e89ae3683412b31c3a75a32ea/fortigaterepr-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "73d8cd7778283133e0c6d60993406758", "sha256": "21a86a7a758fc056c24926dcabf61a2479d1cedba1f39206af86032601b95e8d"}, "downloads": -1, "filename": "fortigaterepr-0.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "73d8cd7778283133e0c6d60993406758", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15816, "upload_time": "2019-11-09T16:19:43", "upload_time_iso_8601": "2019-11-09T16:19:43.660866Z", "url": "https://files.pythonhosted.org/packages/9b/17/013814bdc6e060077169c9c197a4eda1ad97f501ffae04746f3ed2d88be4/fortigaterepr-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99872249d054a407d2cc53fdbacf1de5", "sha256": "41d8b7f724602ee75331c8c0c33fe986b64567a06e573e52bd723517c185886f"}, "downloads": -1, "filename": "fortigaterepr-0.1.6.tar.gz", "has_sig": false, "md5_digest": "99872249d054a407d2cc53fdbacf1de5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33380, "upload_time": "2019-11-09T16:19:45", "upload_time_iso_8601": "2019-11-09T16:19:45.603797Z", "url": "https://files.pythonhosted.org/packages/f1/4e/35488bdf24593755cf6d0d8357d92068e47e89ae3683412b31c3a75a32ea/fortigaterepr-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:46 2020"}