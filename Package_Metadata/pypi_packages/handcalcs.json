{"info": {"author": "Connor Ferster", "author_email": "connorferster@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Mathematics"], "description": "\n# handcalcs: Your Python code as beautifully formatted latex math.\n\n\n\n`handcalcs` is a library designed for working engineers and educators who want\ntheir Python code to present as a finished calculation PDF report, just like you it\nwould be if you had written it out by hand.\n\nThe purpose of this library is to allow you to simply write the calculation logic\nwithout having to painstakingly format it as a report, much like you might have\nto do if you were to program your calculation as an Excel spreadsheet or as a\nMathCAD document.\n\nIntended users: working engineers, teachers, and students thhat who want to\nfocus on simply writing the calculation code and to have formatting just be \"taken\ncare of\".\n\n## Installing\n\nYou can install using pip:\n\n`pip install handcalcs`\n\n### External requirements\n\nPrinting to PDF requires you to have a Latex environment with pdflatex installed\non your system and to have `pdflatex` available on your `PATH` so that you can run\n`pdflatex` as a command from your terminal.\n\n#### Windows installation of latex\n\nInstallation on Windows is easiest by installing the TeX distribution, [MiKTeX](https://miktex.org/howto/install-miktex).\nAfter installation, ensure that you allow automatic downloading of required\nto make operation easiest.\n\n#### OSX installation of latex\n\nInstallation on Mac OS X is easiest by installing [MacTeX](http://www.tug.org/mactex/mactex-download.html).\nBe sure to read the installation page to prevent/assist with any issues.\n\n#### Linux installation of latex\n\n`$ sudo apt install texlive-latex-extra`\nYou can also refer to [this page](https://linuxconfig.org/how-to-install-latex-on-ubuntu-18-04-bionic-beaver-linux) to review all of the options available for the\nTeXLive installation.\n\n### Additional system setup (Optional, but convenient)\n\n`handcalcs` uses the Python import system to import any calculation scripts that\ncreate. Therefore its best to setup your system to make it easy to put new scripts\ninto your Python path.\n\n1. Create a \"calcs\" folder you where you will begin building your calculation library. This can be anywhere on your system you like and can have any name.\n2. Copy the absolute path of your folder and paste it into a blank text file. Save that file as a `.pth` file and save it in your Python `site-packages` directory. You can find your `site-packages` directory by typing `python -m site` in your command line. Note: This requires `python` to be in your system's PATH variable. (i.e. you have to be able to launch Python by typing `python` in a terminal).\n3. In your new \"calcs\" folder, create a blank text file and name it `__init__.py`. Within that file, insert the following:\n\n```python\n\nfrom os.path import dirname, basename, isfile\nimport glob\nmodules = glob.glob(dirname(__file__)+\"/*.py\")\n__all__ = [ basename(f)[:-3] for f in modules if isfile(f) and not f.endswith('__init__.py')]\nfrom . import *\n```\n\nThis will allow you to create subfolders in your \"calc\" folder so you can organize your calculation scripts more conveniently. For every folder you create with its own subfolders, include a copy of the same `__init__.py` file in the folder.\n\n## Basic usage\n\nThe most basic use is just to import the library:\n\n```python\n>>> import handcalcs as hand\n>>> bending_resistance = hand.Calc(\"calcs.wood.timber.mr\") # Loads calcs/wood/timber/mr.py, my pre-written script\n>>> bending_resistance.inputs # Remind yourself what the function parameters are for your script\n<Signature (b, d, f_b, K_Zb, K_L, K_D, K_H, K_Sb, K_T, phi=0.9)>\n\n>>> results = bending_resistance(300, 1200, 19.2, 1, 1, 1, 1, 1, 1) # Calc object is now a callable function based on your script\n>>> results # The Calc object returns a dict with all of the intermediate values of your script included\n{'b': 300, 'd': 1200, 'f_b': 19.2, 'K_Zb': 1, 'K_L': 1, 'K_D': 1, 'K_H': 1, 'K_Sb': 1, 'K_T': 1, 'phi': 0.9, 'F_b': 19.2, 'S': 72000000.0, 'M_r': 1244160000.0}\n\n>>> bending_resistance.print(filename = \"Bending Resistance Results\")\n\"handcalcs: Latex rendering complete.\"\n\n>>> print(bending_resistance._source)\ndef main(b, d, f_b, K_Zb, K_L, K_D, K_H, K_Sb, K_T, phi = 0.9):\n    # Cl. 6.5.4.1 General Bending Moment Resistance\n\n    ## Specified strength in bending\n    F_b = f_b * (K_D*K_H*K_Sb*K_T)\n\n    ## Section Modulus\n    S = (b * d**2) / 6\n\n    ## Moment resistance\n    M_r = phi * F_b * S * K_Zb * K_L\n    return locals()\n```\n\n\nThe PDF file that is created from `.print()` is created directly from the source\ncode of the script, as seen below.\n\n<img src = \"https://github.com/connorferster/handcalcs/blob/master/rendered_latex_pdf_example.png\">\n\n## API\n\n\n\n### Properties\n\n\n### Methods\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/connorferster/handcalcs", "keywords": "", "license": "GNU General Public License v3 (GPLv3)", "maintainer": "", "maintainer_email": "", "name": "handcalcs", "package_url": "https://pypi.org/project/handcalcs/", "platform": "", "project_url": "https://pypi.org/project/handcalcs/", "project_urls": {"Homepage": "https://github.com/connorferster/handcalcs"}, "release_url": "https://pypi.org/project/handcalcs/0.2.0/", "requires_dist": ["jinja2", "pyparsing"], "requires_python": ">=3.6.0", "summary": "Converts your Python calculation script into beautifully rendered Latex, similar to how you would write a calculation by hand.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>handcalcs: Your Python code as beautifully formatted latex math.</h1>\n<p><code>handcalcs</code> is a library designed for working engineers and educators who want\ntheir Python code to present as a finished calculation PDF report, just like you it\nwould be if you had written it out by hand.</p>\n<p>The purpose of this library is to allow you to simply write the calculation logic\nwithout having to painstakingly format it as a report, much like you might have\nto do if you were to program your calculation as an Excel spreadsheet or as a\nMathCAD document.</p>\n<p>Intended users: working engineers, teachers, and students thhat who want to\nfocus on simply writing the calculation code and to have formatting just be \"taken\ncare of\".</p>\n<h2>Installing</h2>\n<p>You can install using pip:</p>\n<p><code>pip install handcalcs</code></p>\n<h3>External requirements</h3>\n<p>Printing to PDF requires you to have a Latex environment with pdflatex installed\non your system and to have <code>pdflatex</code> available on your <code>PATH</code> so that you can run\n<code>pdflatex</code> as a command from your terminal.</p>\n<h4>Windows installation of latex</h4>\n<p>Installation on Windows is easiest by installing the TeX distribution, <a href=\"https://miktex.org/howto/install-miktex\" rel=\"nofollow\">MiKTeX</a>.\nAfter installation, ensure that you allow automatic downloading of required\nto make operation easiest.</p>\n<h4>OSX installation of latex</h4>\n<p>Installation on Mac OS X is easiest by installing <a href=\"http://www.tug.org/mactex/mactex-download.html\" rel=\"nofollow\">MacTeX</a>.\nBe sure to read the installation page to prevent/assist with any issues.</p>\n<h4>Linux installation of latex</h4>\n<p><code>$ sudo apt install texlive-latex-extra</code>\nYou can also refer to <a href=\"https://linuxconfig.org/how-to-install-latex-on-ubuntu-18-04-bionic-beaver-linux\" rel=\"nofollow\">this page</a> to review all of the options available for the\nTeXLive installation.</p>\n<h3>Additional system setup (Optional, but convenient)</h3>\n<p><code>handcalcs</code> uses the Python import system to import any calculation scripts that\ncreate. Therefore its best to setup your system to make it easy to put new scripts\ninto your Python path.</p>\n<ol>\n<li>Create a \"calcs\" folder you where you will begin building your calculation library. This can be anywhere on your system you like and can have any name.</li>\n<li>Copy the absolute path of your folder and paste it into a blank text file. Save that file as a <code>.pth</code> file and save it in your Python <code>site-packages</code> directory. You can find your <code>site-packages</code> directory by typing <code>python -m site</code> in your command line. Note: This requires <code>python</code> to be in your system's PATH variable. (i.e. you have to be able to launch Python by typing <code>python</code> in a terminal).</li>\n<li>In your new \"calcs\" folder, create a blank text file and name it <code>__init__.py</code>. Within that file, insert the following:</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">os.path</span> <span class=\"kn\">import</span> <span class=\"n\">dirname</span><span class=\"p\">,</span> <span class=\"n\">basename</span><span class=\"p\">,</span> <span class=\"n\">isfile</span>\n<span class=\"kn\">import</span> <span class=\"nn\">glob</span>\n<span class=\"n\">modules</span> <span class=\"o\">=</span> <span class=\"n\">glob</span><span class=\"o\">.</span><span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s2\">\"/*.py\"</span><span class=\"p\">)</span>\n<span class=\"n\">__all__</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)[:</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"n\">modules</span> <span class=\"k\">if</span> <span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s1\">'__init__.py'</span><span class=\"p\">)]</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n<p>This will allow you to create subfolders in your \"calc\" folder so you can organize your calculation scripts more conveniently. For every folder you create with its own subfolders, include a copy of the same <code>__init__.py</code> file in the folder.</p>\n<h2>Basic usage</h2>\n<p>The most basic use is just to import the library:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">handcalcs</span> <span class=\"k\">as</span> <span class=\"nn\">hand</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bending_resistance</span> <span class=\"o\">=</span> <span class=\"n\">hand</span><span class=\"o\">.</span><span class=\"n\">Calc</span><span class=\"p\">(</span><span class=\"s2\">\"calcs.wood.timber.mr\"</span><span class=\"p\">)</span> <span class=\"c1\"># Loads calcs/wood/timber/mr.py, my pre-written script</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bending_resistance</span><span class=\"o\">.</span><span class=\"n\">inputs</span> <span class=\"c1\"># Remind yourself what the function parameters are for your script</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Signature</span> <span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">f_b</span><span class=\"p\">,</span> <span class=\"n\">K_Zb</span><span class=\"p\">,</span> <span class=\"n\">K_L</span><span class=\"p\">,</span> <span class=\"n\">K_D</span><span class=\"p\">,</span> <span class=\"n\">K_H</span><span class=\"p\">,</span> <span class=\"n\">K_Sb</span><span class=\"p\">,</span> <span class=\"n\">K_T</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"mf\">0.9</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">bending_resistance</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">1200</span><span class=\"p\">,</span> <span class=\"mf\">19.2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"c1\"># Calc object is now a callable function based on your script</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">results</span> <span class=\"c1\"># The Calc object returns a dict with all of the intermediate values of your script included</span>\n<span class=\"p\">{</span><span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"s1\">'d'</span><span class=\"p\">:</span> <span class=\"mi\">1200</span><span class=\"p\">,</span> <span class=\"s1\">'f_b'</span><span class=\"p\">:</span> <span class=\"mf\">19.2</span><span class=\"p\">,</span> <span class=\"s1\">'K_Zb'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'K_L'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'K_D'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'K_H'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'K_Sb'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'K_T'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'phi'</span><span class=\"p\">:</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"s1\">'F_b'</span><span class=\"p\">:</span> <span class=\"mf\">19.2</span><span class=\"p\">,</span> <span class=\"s1\">'S'</span><span class=\"p\">:</span> <span class=\"mf\">72000000.0</span><span class=\"p\">,</span> <span class=\"s1\">'M_r'</span><span class=\"p\">:</span> <span class=\"mf\">1244160000.0</span><span class=\"p\">}</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bending_resistance</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"s2\">\"Bending Resistance Results\"</span><span class=\"p\">)</span>\n<span class=\"s2\">\"handcalcs: Latex rendering complete.\"</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">bending_resistance</span><span class=\"o\">.</span><span class=\"n\">_source</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">f_b</span><span class=\"p\">,</span> <span class=\"n\">K_Zb</span><span class=\"p\">,</span> <span class=\"n\">K_L</span><span class=\"p\">,</span> <span class=\"n\">K_D</span><span class=\"p\">,</span> <span class=\"n\">K_H</span><span class=\"p\">,</span> <span class=\"n\">K_Sb</span><span class=\"p\">,</span> <span class=\"n\">K_T</span><span class=\"p\">,</span> <span class=\"n\">phi</span> <span class=\"o\">=</span> <span class=\"mf\">0.9</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Cl. 6.5.4.1 General Bending Moment Resistance</span>\n\n    <span class=\"c1\">## Specified strength in bending</span>\n    <span class=\"n\">F_b</span> <span class=\"o\">=</span> <span class=\"n\">f_b</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">K_D</span><span class=\"o\">*</span><span class=\"n\">K_H</span><span class=\"o\">*</span><span class=\"n\">K_Sb</span><span class=\"o\">*</span><span class=\"n\">K_T</span><span class=\"p\">)</span>\n\n    <span class=\"c1\">## Section Modulus</span>\n    <span class=\"n\">S</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">b</span> <span class=\"o\">*</span> <span class=\"n\">d</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">6</span>\n\n    <span class=\"c1\">## Moment resistance</span>\n    <span class=\"n\">M_r</span> <span class=\"o\">=</span> <span class=\"n\">phi</span> <span class=\"o\">*</span> <span class=\"n\">F_b</span> <span class=\"o\">*</span> <span class=\"n\">S</span> <span class=\"o\">*</span> <span class=\"n\">K_Zb</span> <span class=\"o\">*</span> <span class=\"n\">K_L</span>\n    <span class=\"k\">return</span> <span class=\"nb\">locals</span><span class=\"p\">()</span>\n</pre>\n<p>The PDF file that is created from <code>.print()</code> is created directly from the source\ncode of the script, as seen below.</p>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6124c3266b1b185d33d72cf4bc735cc7ba7fc983/68747470733a2f2f6769746875622e636f6d2f636f6e6e6f72666572737465722f68616e6463616c63732f626c6f622f6d61737465722f72656e64657265645f6c617465785f7064665f6578616d706c652e706e67\">\n<h2>API</h2>\n<h3>Properties</h3>\n<h3>Methods</h3>\n\n          </div>"}, "last_serial": 6947824, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e45c5b638f94e4bffd4533043537d426", "sha256": "5e04c14632bf21931a7f756112ff30bf15e4ca60a0342e8abdcecf52267c81cf"}, "downloads": -1, "filename": "handcalcs-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e45c5b638f94e4bffd4533043537d426", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 16286, "upload_time": "2020-03-05T04:54:48", "upload_time_iso_8601": "2020-03-05T04:54:48.471350Z", "url": "https://files.pythonhosted.org/packages/10/51/5e41476f45c3a90afeb5bbc8f9d97569f43cff4045aba5a8c34bbde32b89/handcalcs-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3d2da9811b8ba48c5e3ad2e128209061", "sha256": "e29ba539404db187e15fb497949a1a38c3c7ab173895812c36490bf8d5ffca42"}, "downloads": -1, "filename": "handcalcs-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3d2da9811b8ba48c5e3ad2e128209061", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 24734, "upload_time": "2020-03-15T22:27:53", "upload_time_iso_8601": "2020-03-15T22:27:53.343787Z", "url": "https://files.pythonhosted.org/packages/ff/cb/a19e438579d9bcdd0d016861671f3991beb6b26c44e347c69c2367222e75/handcalcs-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "2d3c17c29f8ce625b6c6d0d7bdda9b0d", "sha256": "d3e938b7b2596b6bf05041c59820e9d4c5c657eddf4c840c0cf6d6f5cc93b9e8"}, "downloads": -1, "filename": "handcalcs-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2d3c17c29f8ce625b6c6d0d7bdda9b0d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 24757, "upload_time": "2020-03-15T22:51:40", "upload_time_iso_8601": "2020-03-15T22:51:40.842351Z", "url": "https://files.pythonhosted.org/packages/e3/d2/f308d8c02c8fcd2bd265e9aa9ddb73334a4550a2ec8236975fe62b87cf18/handcalcs-0.1.2-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c617cec0c26529af395a8f19942dd85d", "sha256": "b1a76ff4f23994d4571b0943f7db30d3e1575db31aafca303ebe52e769519fcd"}, "downloads": -1, "filename": "handcalcs-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c617cec0c26529af395a8f19942dd85d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 27381, "upload_time": "2020-04-04T03:22:29", "upload_time_iso_8601": "2020-04-04T03:22:29.558425Z", "url": "https://files.pythonhosted.org/packages/bc/92/15b04383f62df9fab6061517c3b7761e046b3c38046f6b45fcb8c00eaa60/handcalcs-0.2.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c617cec0c26529af395a8f19942dd85d", "sha256": "b1a76ff4f23994d4571b0943f7db30d3e1575db31aafca303ebe52e769519fcd"}, "downloads": -1, "filename": "handcalcs-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c617cec0c26529af395a8f19942dd85d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 27381, "upload_time": "2020-04-04T03:22:29", "upload_time_iso_8601": "2020-04-04T03:22:29.558425Z", "url": "https://files.pythonhosted.org/packages/bc/92/15b04383f62df9fab6061517c3b7761e046b3c38046f6b45fcb8c00eaa60/handcalcs-0.2.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:52:38 2020"}