{"info": {"author": "CryptAPI", "author_email": "cryptapi@protonmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "![CryptAPI](https://i.imgur.com/IfMAa7E.png)\n\n# CryptAPI's Django Library\nDjango's implementation of CryptAPI's payment gateway\n\n## Requirements:\n\n```\nPython >= 3.0\nDjango >= 2.0\nRequests >= 2.20\n```\n\n\n\n## Install\n\n\n```bash\npip install django-cryptapi\n```\n\n\n[on pypi](https://pypi.python.org/pypi/django-cryptapi)\nor\n[on GitHub](https://github.com/cryptapi/django-cryptapi)\n\nAdd to INSTALLED_APPS:\n\n```python\nINSTALLED_APPS = (\n    'cryptapi',\n    ...\n)\n```\n\n\nRun migrations:\n\n```bash\npython3 manage.py migrate cryptapi\n```\n\n\nAdd CryptAPI's URLs to your project's urls.py file:\n\n```python\nurlpatterns = [\n    path('cryptapi/', include('cryptapi.urls')),\n    ...\n]\n```\n\n## Configuration\n\nAfter the installation you need to set up Providers for each coin you wish to accept.\n\nYou need to go into your Django Admin and create a new CryptAPI ``Provider`` for each coin with your cold wallet address where the funds will be forwarded to.\n\n## Usage\n\n### Creating an Invoice\n\nIn your order creation view, assuming ``user_order`` is your order object:\n\n```python\nfrom cryptapi import Invoice\n...\ndef order_creation_view(request):\n    ...\n    invoice = Invoice(\n        request=request,\n        order_id=user_order.id,\n        coin='btc',\n        value=user_order.value\n    )\n\n    payment_address = invoice.address()\n\n    if payment_address is not None:\n        # Show the payment address to the user\n        ...\n    else:\n        # Handle request error, check RequestLogs on Admin\n```\n\nWhere:\n\n``request`` is Django's view HttpRequest object  \n``order_id`` is just your order id  \n``coin`` is the coin you wish to use, can be one of: ``['btc', 'eth', 'bch', 'ltc', 'xmr', 'iota']`` and you need to have a ``Provider`` set up for that coin.  \n``value`` is an integer of the value of your order, either in satoshi, litoshi, wei, piconero or IOTA\n\n\n### Getting notified when the user pays\n\n```python\nfrom django.dispatch import receiver\nfrom cryptapi.signals import payment_complete\n\n@receiver(payment_complete)\ndef payment_received(order_id, payment, value):\n    # Implement your logic to mark the order as paid and release the goods to the user\n    ...\n```\n\nWhere:  \n\n``order_id`` is the id of the order that you provided earlier, used to fetch your order  \n``payment`` is an ``cryptapi.models.Payment`` object with the payment details, such as TXID, number of confirmations, etc.  \n``value`` is the value the user paid, either in satoshi, litoshi, wei or IOTA\n\n\n### Helpers\n\nThis library has a couple of helpers to help you get started\n\n``cryptapi.valid_providers()`` is a method that returns a list of tuples of the active providers that you can just feed into the choices of a ``form.ChoiceField``\n\n``cryptapi.get_order_invoices(order_id)`` returns a list of ``cryptapi.models.Request`` objects of your order (you can have multiple objects for the same order if the user mistakenly initiated the payment with another coin)\n\n\nThere's also some template tags which you can import to help you with conversions and the protocols.\nYou just need to load ``cryptapi_helper`` on your template and use the following tags / filters:  \n\n``{% convert_value coin value %}`` where the coin is one of ``['btc', 'eth', 'bch', 'ltc', 'xmr', 'iota']`` and the value is the value in satoshi, litoshi, wei or IOTA, will convert to the main coin denomination.  \n\n\n``{{ coin|coin_name }}`` will output the properly formatted cryptocurrency name  \n\n\nIf you want to build a full payment URI for your clients, you can use our `build_payment_uri` tag, like so:\n\n```djangotemplate\n{% build_payment_uri btc 1PE5U4temq1rFzseHHGE2L8smwHCyRbkx3 0.001 %}\n\n# will output: bitcoin:1PE5U4temq1rFzseHHGE2L8smwHCyRbkx3?amount=0.001\n```\n\nIt takes 3 arguments: the coin, the payment address and the value in the main denomination of the coin, and it will output a payment URI ready for you to feed into a QR Code generator\n\n## Help\n\nNeed help?  \nContact us @ https://cryptapi.io/contact/\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cryptapi/django-cryptapi", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-cryptapi", "package_url": "https://pypi.org/project/django-cryptapi/", "platform": "", "project_url": "https://pypi.org/project/django-cryptapi/", "project_urls": {"Homepage": "https://github.com/cryptapi/django-cryptapi"}, "release_url": "https://pypi.org/project/django-cryptapi/0.1.8/", "requires_dist": ["django", "requests"], "requires_python": "", "summary": "Django implementation of CryptAPI's payment gateway", "version": "0.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"CryptAPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b31a7e0a9a14ece233472cc2373ffd12a430e7c8/68747470733a2f2f692e696d6775722e636f6d2f49664d416137452e706e67\"></p>\n<h1>CryptAPI's Django Library</h1>\n<p>Django's implementation of CryptAPI's payment gateway</p>\n<h2>Requirements:</h2>\n<pre><code>Python &gt;= 3.0\nDjango &gt;= 2.0\nRequests &gt;= 2.20\n</code></pre>\n<h2>Install</h2>\n<pre>pip install django-cryptapi\n</pre>\n<p><a href=\"https://pypi.python.org/pypi/django-cryptapi\" rel=\"nofollow\">on pypi</a>\nor\n<a href=\"https://github.com/cryptapi/django-cryptapi\" rel=\"nofollow\">on GitHub</a></p>\n<p>Add to INSTALLED_APPS:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s1\">'cryptapi'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Run migrations:</p>\n<pre>python3 manage.py migrate cryptapi\n</pre>\n<p>Add CryptAPI's URLs to your project's urls.py file:</p>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">'cryptapi/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'cryptapi.urls'</span><span class=\"p\">)),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<h2>Configuration</h2>\n<p>After the installation you need to set up Providers for each coin you wish to accept.</p>\n<p>You need to go into your Django Admin and create a new CryptAPI <code>Provider</code> for each coin with your cold wallet address where the funds will be forwarded to.</p>\n<h2>Usage</h2>\n<h3>Creating an Invoice</h3>\n<p>In your order creation view, assuming <code>user_order</code> is your order object:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cryptapi</span> <span class=\"kn\">import</span> <span class=\"n\">Invoice</span>\n<span class=\"o\">...</span>\n<span class=\"k\">def</span> <span class=\"nf\">order_creation_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">invoice</span> <span class=\"o\">=</span> <span class=\"n\">Invoice</span><span class=\"p\">(</span>\n        <span class=\"n\">request</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"p\">,</span>\n        <span class=\"n\">order_id</span><span class=\"o\">=</span><span class=\"n\">user_order</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n        <span class=\"n\">coin</span><span class=\"o\">=</span><span class=\"s1\">'btc'</span><span class=\"p\">,</span>\n        <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">user_order</span><span class=\"o\">.</span><span class=\"n\">value</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">payment_address</span> <span class=\"o\">=</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">payment_address</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Show the payment address to the user</span>\n        <span class=\"o\">...</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Handle request error, check RequestLogs on Admin</span>\n</pre>\n<p>Where:</p>\n<p><code>request</code> is Django's view HttpRequest object<br>\n<code>order_id</code> is just your order id<br>\n<code>coin</code> is the coin you wish to use, can be one of: <code>['btc', 'eth', 'bch', 'ltc', 'xmr', 'iota']</code> and you need to have a <code>Provider</code> set up for that coin.<br>\n<code>value</code> is an integer of the value of your order, either in satoshi, litoshi, wei, piconero or IOTA</p>\n<h3>Getting notified when the user pays</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.dispatch</span> <span class=\"kn\">import</span> <span class=\"n\">receiver</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cryptapi.signals</span> <span class=\"kn\">import</span> <span class=\"n\">payment_complete</span>\n\n<span class=\"nd\">@receiver</span><span class=\"p\">(</span><span class=\"n\">payment_complete</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">payment_received</span><span class=\"p\">(</span><span class=\"n\">order_id</span><span class=\"p\">,</span> <span class=\"n\">payment</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Implement your logic to mark the order as paid and release the goods to the user</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>Where:</p>\n<p><code>order_id</code> is the id of the order that you provided earlier, used to fetch your order<br>\n<code>payment</code> is an <code>cryptapi.models.Payment</code> object with the payment details, such as TXID, number of confirmations, etc.<br>\n<code>value</code> is the value the user paid, either in satoshi, litoshi, wei or IOTA</p>\n<h3>Helpers</h3>\n<p>This library has a couple of helpers to help you get started</p>\n<p><code>cryptapi.valid_providers()</code> is a method that returns a list of tuples of the active providers that you can just feed into the choices of a <code>form.ChoiceField</code></p>\n<p><code>cryptapi.get_order_invoices(order_id)</code> returns a list of <code>cryptapi.models.Request</code> objects of your order (you can have multiple objects for the same order if the user mistakenly initiated the payment with another coin)</p>\n<p>There's also some template tags which you can import to help you with conversions and the protocols.\nYou just need to load <code>cryptapi_helper</code> on your template and use the following tags / filters:</p>\n<p><code>{% convert_value coin value %}</code> where the coin is one of <code>['btc', 'eth', 'bch', 'ltc', 'xmr', 'iota']</code> and the value is the value in satoshi, litoshi, wei or IOTA, will convert to the main coin denomination.</p>\n<p><code>{{ coin|coin_name }}</code> will output the properly formatted cryptocurrency name</p>\n<p>If you want to build a full payment URI for your clients, you can use our <code>build_payment_uri</code> tag, like so:</p>\n<pre>{% build_payment_uri btc 1PE5U4temq1rFzseHHGE2L8smwHCyRbkx3 0.001 %}\n\n# will output: bitcoin:1PE5U4temq1rFzseHHGE2L8smwHCyRbkx3?amount=0.001\n</pre>\n<p>It takes 3 arguments: the coin, the payment address and the value in the main denomination of the coin, and it will output a payment URI ready for you to feed into a QR Code generator</p>\n<h2>Help</h2>\n<p>Need help?<br>\nContact us @ <a href=\"https://cryptapi.io/contact/\" rel=\"nofollow\">https://cryptapi.io/contact/</a></p>\n\n          </div>"}, "last_serial": 6158795, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b8aa81d0e8053bcfa093ed176a470ba7", "sha256": "9c3216a237223dd30dfbe442e1682ce511c82cb3fa8e6ba545e29a19ebbd89b2"}, "downloads": -1, "filename": "django_cryptapi-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b8aa81d0e8053bcfa093ed176a470ba7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12632, "upload_time": "2018-11-14T16:06:48", "upload_time_iso_8601": "2018-11-14T16:06:48.148914Z", "url": "https://files.pythonhosted.org/packages/a9/4a/a6646b00549561e977747885fbb95766daf5ac4af76db1f24cf75afba61c/django_cryptapi-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5af49fd48a4f4a6b4c044b91198f9a5f", "sha256": "b64a467c53c9737390ac2b686af7a731e7d9e59f307bcacda6f11abd22d65b07"}, "downloads": -1, "filename": "django-cryptapi-0.1.tar.gz", "has_sig": false, "md5_digest": "5af49fd48a4f4a6b4c044b91198f9a5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8477, "upload_time": "2018-11-14T16:06:50", "upload_time_iso_8601": "2018-11-14T16:06:50.050922Z", "url": "https://files.pythonhosted.org/packages/e4/00/68a35964193fba3ffefd7ec979a4b3be73581395dbfd42ecd264e2d863a0/django-cryptapi-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "82c83aaa1d46c5ec8d5d402a8d4761c4", "sha256": "6132a35263aee16afe34a003baaa4128e527fe5fef87899289424a6f067899fb"}, "downloads": -1, "filename": "django_cryptapi-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "82c83aaa1d46c5ec8d5d402a8d4761c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13899, "upload_time": "2018-11-16T11:55:06", "upload_time_iso_8601": "2018-11-16T11:55:06.514840Z", "url": "https://files.pythonhosted.org/packages/d8/8f/c0a645079385f45aee26dca97ceb46d7f00d3eb0a46e42b3d2584b864a09/django_cryptapi-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4fa6ca4cfa99351a5add4950446d336", "sha256": "6212de80b0b38e33e80309370e50ec0120c575e61f08a6fbeff747407cabb04f"}, "downloads": -1, "filename": "django-cryptapi-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e4fa6ca4cfa99351a5add4950446d336", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8672, "upload_time": "2018-11-16T11:55:07", "upload_time_iso_8601": "2018-11-16T11:55:07.842478Z", "url": "https://files.pythonhosted.org/packages/bb/b3/e053f322dcf24c4218d67ee052a42d6da4c09daadc8b6cd92faebe6cf513/django-cryptapi-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c76f706afb36cc815a29fac2df1d93f2", "sha256": "5503b8ef76bc1e48f74d3a72693ce5973920ecd6f6cec3d9fa517685a8df844f"}, "downloads": -1, "filename": "django_cryptapi-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c76f706afb36cc815a29fac2df1d93f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13077, "upload_time": "2018-11-19T18:48:56", "upload_time_iso_8601": "2018-11-19T18:48:56.484471Z", "url": "https://files.pythonhosted.org/packages/6f/56/bbf441c7b57aeb56e128108de158fe69d5dd03c40e259798ca9f01da52eb/django_cryptapi-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "969a08ee8755897ae8150a24a05d0682", "sha256": "ea18e71e326f4319ce698d45c1a6f1148cfa83752e5e2ca2a2d8e100cd3ecc99"}, "downloads": -1, "filename": "django-cryptapi-0.1.2.tar.gz", "has_sig": false, "md5_digest": "969a08ee8755897ae8150a24a05d0682", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8679, "upload_time": "2018-11-19T18:48:57", "upload_time_iso_8601": "2018-11-19T18:48:57.855333Z", "url": "https://files.pythonhosted.org/packages/3e/dd/c1452755ebf8067746a8be4a3a07fb9b0564d56a57d8ca597a4fd50214eb/django-cryptapi-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "264d39f9f26cf10b4dff3398c399d781", "sha256": "5617eafa1aee9c044939f9f651d0933f2245a2e1ea0339d56f217cc68c44dc50"}, "downloads": -1, "filename": "django_cryptapi-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "264d39f9f26cf10b4dff3398c399d781", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14094, "upload_time": "2019-07-26T17:54:13", "upload_time_iso_8601": "2019-07-26T17:54:13.214327Z", "url": "https://files.pythonhosted.org/packages/b1/e3/12b512c9da4039922c27c19880e044fa4572b1445edc74c6d496e660efe4/django_cryptapi-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2336cdbad6057314e98e6853f2385601", "sha256": "bbec0bffacbbe7ed6d716767738fcc35baf8b13c5bcbaa674d9b2d7c609ce447"}, "downloads": -1, "filename": "django-cryptapi-0.1.3.tar.gz", "has_sig": false, "md5_digest": "2336cdbad6057314e98e6853f2385601", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8773, "upload_time": "2019-07-26T17:54:14", "upload_time_iso_8601": "2019-07-26T17:54:14.847682Z", "url": "https://files.pythonhosted.org/packages/4d/5b/13f3034b098957cd48ed6e98f09383ecfacf34d6779152948ecf404c7dd0/django-cryptapi-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "5942443b87219ae10be0a77047f63028", "sha256": "91663606e83f3ad0cd76bcc5dca0e85f65e68e5eb7e6c97f756cc17be5f0ecfe"}, "downloads": -1, "filename": "django_cryptapi-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5942443b87219ae10be0a77047f63028", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14777, "upload_time": "2019-07-29T10:51:08", "upload_time_iso_8601": "2019-07-29T10:51:08.574434Z", "url": "https://files.pythonhosted.org/packages/ad/16/9187b6f15ac59d5d5def1e48f7d54a4b02987e396289429af4ac27a62d54/django_cryptapi-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "522a9dc551d75fc1331e2bd01520a07d", "sha256": "4a5a9f233da4645758c0839e99333febfb516d4a1592952939eed00a1faee478"}, "downloads": -1, "filename": "django-cryptapi-0.1.4.tar.gz", "has_sig": false, "md5_digest": "522a9dc551d75fc1331e2bd01520a07d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8901, "upload_time": "2019-07-29T10:51:10", "upload_time_iso_8601": "2019-07-29T10:51:10.524639Z", "url": "https://files.pythonhosted.org/packages/4e/2c/8e71682037222d41e591537e1d6c750db8e20667590ecca63ff9a602f15b/django-cryptapi-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "148cb654537ecf99ba3749967c139252", "sha256": "5f51a8691a3710be784659327c1e684564301d4d60eca4535d7e23b26746ee83"}, "downloads": -1, "filename": "django_cryptapi-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "148cb654537ecf99ba3749967c139252", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15256, "upload_time": "2019-10-24T19:07:37", "upload_time_iso_8601": "2019-10-24T19:07:37.761117Z", "url": "https://files.pythonhosted.org/packages/3a/b7/5763aa4adeb55e91b4e80d5fabb4141fa52a88f6e772da141feb96d1e4a1/django_cryptapi-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26cece35870e414bc553770c676a115a", "sha256": "0f53729c08b88278d9436d7af14650f6cb61e8739ba5ae3b70e07bdd0df08487"}, "downloads": -1, "filename": "django-cryptapi-0.1.5.tar.gz", "has_sig": false, "md5_digest": "26cece35870e414bc553770c676a115a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9485, "upload_time": "2019-10-24T19:07:40", "upload_time_iso_8601": "2019-10-24T19:07:40.119389Z", "url": "https://files.pythonhosted.org/packages/77/11/f1d2521f29931b87d96bcdec0a9ca23fa875997f8f24894a075e44fc0ce7/django-cryptapi-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "223903a5a124b7040e838a0fe0195d15", "sha256": "f8e4f8022a5ac29a56451e1fe32d602715d72cb458d204389dda5c2d09baf50b"}, "downloads": -1, "filename": "django_cryptapi-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "223903a5a124b7040e838a0fe0195d15", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15275, "upload_time": "2019-10-24T23:16:41", "upload_time_iso_8601": "2019-10-24T23:16:41.020231Z", "url": "https://files.pythonhosted.org/packages/de/51/dd841f15515ed6dd3cc86ad06738fbe842bb720fbd541c4f1a2687129ef7/django_cryptapi-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2da1c64443620389fd1f2a129b03b99e", "sha256": "0ec70fd2fe40b2bcb38b00520987c1d6bad66370551dd4e597e0a43a1b9f1cfb"}, "downloads": -1, "filename": "django-cryptapi-0.1.6.tar.gz", "has_sig": false, "md5_digest": "2da1c64443620389fd1f2a129b03b99e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9455, "upload_time": "2019-10-24T23:16:42", "upload_time_iso_8601": "2019-10-24T23:16:42.924959Z", "url": "https://files.pythonhosted.org/packages/25/df/e1be8c66184e10d5d865bd998f48b9c745677c049cb5d9088cfdb956c508/django-cryptapi-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "0b16ae1109fd3fa227a8e6cefb6b0cf0", "sha256": "79416ed4a9029602296d5b0842d7e888141cbcd8a7163bc09d870dc17c2db5d7"}, "downloads": -1, "filename": "django_cryptapi-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "0b16ae1109fd3fa227a8e6cefb6b0cf0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18122, "upload_time": "2019-11-18T22:04:57", "upload_time_iso_8601": "2019-11-18T22:04:57.879634Z", "url": "https://files.pythonhosted.org/packages/f7/51/d6155211280f0ab9d50d3c4d7b1e78e08982a32c1fe231ec240001324421/django_cryptapi-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2d1fde7a64f66dc916dc8255469753b", "sha256": "d0a07d3fc6ee707488e7604ec2b5cf8a239e9dbd028e1f8b90441cc3d65c0183"}, "downloads": -1, "filename": "django-cryptapi-0.1.7.tar.gz", "has_sig": false, "md5_digest": "f2d1fde7a64f66dc916dc8255469753b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9640, "upload_time": "2019-11-18T22:05:00", "upload_time_iso_8601": "2019-11-18T22:05:00.076962Z", "url": "https://files.pythonhosted.org/packages/c3/cf/a603155f0003e91efe367dc847a7d8fcef894ca4c6acf7d7fa54ecc7e3c3/django-cryptapi-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "14499561a463b26f4851bb686478d41f", "sha256": "dcc9c27b1c3732d979f7d84b47693f6dd7cc13752f75b129c88e68f5d7849062"}, "downloads": -1, "filename": "django_cryptapi-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "14499561a463b26f4851bb686478d41f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18104, "upload_time": "2019-11-18T23:00:02", "upload_time_iso_8601": "2019-11-18T23:00:02.561341Z", "url": "https://files.pythonhosted.org/packages/bd/a3/96077dccca8ad40c219fb059b5a8b47405ac17c19eb11fb37348f7965b38/django_cryptapi-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "862683277df6ba8a63e418d0a13ae119", "sha256": "6acd3dc340ab42c1b7d7c9951eb363c04995b94c386f6ff5c839608146d8a032"}, "downloads": -1, "filename": "django-cryptapi-0.1.8.tar.gz", "has_sig": false, "md5_digest": "862683277df6ba8a63e418d0a13ae119", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9616, "upload_time": "2019-11-18T23:00:04", "upload_time_iso_8601": "2019-11-18T23:00:04.280423Z", "url": "https://files.pythonhosted.org/packages/fd/14/41c0ce2d7160921c8c5a5c9e507ef576b778991f01215e97517390dd93a9/django-cryptapi-0.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "14499561a463b26f4851bb686478d41f", "sha256": "dcc9c27b1c3732d979f7d84b47693f6dd7cc13752f75b129c88e68f5d7849062"}, "downloads": -1, "filename": "django_cryptapi-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "14499561a463b26f4851bb686478d41f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18104, "upload_time": "2019-11-18T23:00:02", "upload_time_iso_8601": "2019-11-18T23:00:02.561341Z", "url": "https://files.pythonhosted.org/packages/bd/a3/96077dccca8ad40c219fb059b5a8b47405ac17c19eb11fb37348f7965b38/django_cryptapi-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "862683277df6ba8a63e418d0a13ae119", "sha256": "6acd3dc340ab42c1b7d7c9951eb363c04995b94c386f6ff5c839608146d8a032"}, "downloads": -1, "filename": "django-cryptapi-0.1.8.tar.gz", "has_sig": false, "md5_digest": "862683277df6ba8a63e418d0a13ae119", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9616, "upload_time": "2019-11-18T23:00:04", "upload_time_iso_8601": "2019-11-18T23:00:04.280423Z", "url": "https://files.pythonhosted.org/packages/fd/14/41c0ce2d7160921c8c5a5c9e507ef576b778991f01215e97517390dd93a9/django-cryptapi-0.1.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:46 2020"}