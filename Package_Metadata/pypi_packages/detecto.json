{"info": {"author": "Alan Bi", "author_email": "alan.bi326@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "![Detecto Logo](assets/logo_words.svg)\n--------------------------------------\n\n[![CircleCI](https://circleci.com/gh/alankbi/detecto/tree/master.svg?style=svg)](https://circleci.com/gh/alankbi/detecto/tree/master)\n[![Documentation Status](https://readthedocs.org/projects/detecto/badge/?version=latest)](https://detecto.readthedocs.io/en/latest/?badge=latest)\n\n\nDetecto is a Python package that allows you to build fully-functioning computer vision and object detection models with just 5 lines of code. \nInference on still images and videos, transfer learning on custom datasets, and serialization of models to files are just a few of Detecto's features. \nDetecto is also built on top of PyTorch, allowing an easy transfer of models between the two libraries.\n\nThe table below shows a few examples of Detecto's performance:   \n\nStill Image                                                                   |  Video\n:----------------------------------------------------------------------------:|:-----------------------------------------:\n<img src=\"./assets/apple_orange.png\" alt=\"Detecto still image\" width=\"500px\"> | ![Video demo of Detecto](assets/demo.gif)\n\n# Installation\n\nTo install Detecto using pip, run the following command:\n\n`pip3 install detecto`\n\nInstalling with pip should download all of Detecto's dependencies automatically. \nHowever, if an issue arises, you can manually download the dependencies listed in the [requirements.txt](requirements.txt) file.\n\n# Usage\n\nThe power of Detecto comes from its simplicity and ease of use. Creating and running a pre-trained \n[Faster R-CNN ResNet-50 FPN](https://pytorch.org/docs/stable/torchvision/models.html#object-detection-instance-segmentation-and-person-keypoint-detection) \nfrom PyTorch's model zoo takes 4 lines of code:\n\n```python\nfrom detecto.core import Model\nfrom detecto.visualize import detect_video\n\nmodel = Model()  # Initialize a pre-trained model\ndetect_video(model, 'input_video.mp4', 'output.avi')  # Run inference on a video\n```\n\nBelow are several more examples of things you can do with Detecto:\n\n### Transfer Learning on Custom Datasets\n\nMost of the times, you want a computer vision model that can detect custom objects. With Detecto, you can train a model on a custom dataset with 5 lines of code: \n\n```python\nfrom detecto.core import Model, Dataset\n\ndataset = Dataset('custom_dataset/')  # Load images and label data from the custom_dataset/ folder\n\nmodel = Model(['dog', 'cat', 'rabbit'])  # Train to predict dogs, cats, and rabbits\nmodel.fit(dataset)\n\nmodel.predict(...)  # Start using your trained model!\n```\n\n### Inference and Visualization\n\nWhen using a model for inference, Detecto returns predictions in an easy-to-use format and provides several visualization tools:\n\n```python\n\nfrom detecto.core import Model\nfrom detecto import utils, visualize\n\nmodel = Model()\n\nimage = utils.read_image('image.jpg')  # Helper function to read in images\n\nlabels, boxes, scores = model.predict(image)  # Get all predictions on an image\npredictions = model.predict_top(image)  # Same as above, but returns only the top predictions\n\nprint(labels, boxes, scores)\nprint(predictions)\n\nvisualize.show_labeled_image(image, boxes, labels)  # Plot predictions on a single image\n\nimages = [...]\nvisualize.plot_prediction_grid(model, images)  # Plot predictions on a list of images\n\nvisualize.detect_video(model, 'input_video.mp4', 'output.avi')  # Run inference on a video\n```\n\n### Advanced Usage\n\nIf you want more control over how you train your model, Detecto lets you do just that:\n\n```python\n\nfrom detecto import core, utils\nfrom torchvision import transforms\nimport matplotlib.pyplot as plt\n\n# Convert XML files to CSV format\nutils.xml_to_csv('training_labels/', 'train_labels.csv')\nutils.xml_to_csv('validation_labels/', 'val_labels.csv')\n\n# Define custom transforms to apply to your dataset\ncustom_transforms = transforms.Compose([\n    transforms.ToPILImage(),\n    transforms.Resize(800),\n    transforms.ColorJitter(saturation=0.3),\n    transforms.ToTensor(),\n    utils.normalize_transform(),\n])\n\n# Pass in a CSV file instead of XML files for faster Dataset initialization speeds\ndataset = core.Dataset('train_labels.csv', 'images/', transform=custom_transforms)\nval_dataset = core.Dataset('val_labels.csv', 'val_images')  # Validation dataset for training\n\n# Create your own DataLoader with custom options\nloader = core.DataLoader(dataset, batch_size=2, shuffle=True) \n\nmodel = core.Model(['car', 'truck', 'boat', 'plane'])\nlosses = model.fit(loader, val_dataset, epochs=15, learning_rate=0.001, verbose=True)\n\nplt.plot(losses)  # Visualize loss throughout training\nplt.show()\n\nmodel.save('model_weights.pth')  # Save model to a file\n\n# Directly access underlying torchvision model for even more control\ntorch_model = model.get_internal_model()\nprint(type(torch_model))\n```\n\nFor more examples, visit the [docs](https://detecto.readthedocs.io/), which includes a [quickstart](https://detecto.readthedocs.io/en/latest/usage/quickstart.html) tutorial.\n\nAlternatively, check out the [demo on Colab](https://colab.research.google.com/drive/1ISaTV5F-7b4i2QqtjTa7ToDPQ2k8qEe0).  \n\n# API Documentation\n\nThe full API documentation can be found at [detecto.readthedocs.io](https://detecto.readthedocs.io/en/latest/api/index.html).\nThe docs are split into three sections, each corresponding to one of Detecto's modules:\n\n### Core\n\nThe [detecto.core](https://detecto.readthedocs.io/en/latest/api/core.html) module contains the central classes of the package: Dataset, DataLoader, and Model. \nThese are used to read in a labeled dataset and train a functioning object detection model.\n\n### Utils\n\nThe [detecto.utils](https://detecto.readthedocs.io/en/latest/api/utils.html) module contains a variety of useful helper functions. \nWith it, you can read in images, convert XML files into CSV files, apply standard transforms to images, and more.\n\n### Visualize\n\nThe [detecto.visualize](https://detecto.readthedocs.io/en/latest/api/visualize.html) module is used to display labeled images, plot predictions, and run object detection on videos.\n\n\n\n# Contributing\n\nAll issues and pull requests are welcome! To run the code locally, first fork the repository and then run the following commands on your computer: \n\n```bash\ngit clone https://github.com/<your-username>/detecto.git\ncd detecto\n# Recommended to create a virtual environment before the next step\npip3 install -r requirements.txt\n```\n\nWhen adding code, be sure to write unit tests and docstrings where necessary. \n\nTests are located in `detecto/tests` and can be run using pytest:\n\n`python3 -m pytest`\n\nTo generate the documentation locally, run the following commands:\n\n```bash\ncd docs\nmake html\n```\n\nThe documentation can then be viewed at `docs/_build/html/index.html`.\n\n# Contact\n\nDetecto was created by [Alan Bi](https://www.alanbi.com/). Feel free to reach out on [Twitter](https://twitter.com/alankbi) or through [email](mailto:alan.bi326@gmail.com)!\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alankbi/detecto", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "detecto", "package_url": "https://pypi.org/project/detecto/", "platform": "", "project_url": "https://pypi.org/project/detecto/", "project_urls": {"Homepage": "https://github.com/alankbi/detecto"}, "release_url": "https://pypi.org/project/detecto/1.1.3/", "requires_dist": ["matplotlib", "opencv-python", "pandas", "scikit-image", "torch", "torchvision"], "requires_python": ">=3.6", "summary": "Build fully-functioning computer vision models with 5 lines of code", "version": "1.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2><img alt=\"Detecto Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/63b81c107404458fa58f067940f7bfc74799c562/6173736574732f6c6f676f5f776f7264732e737667\"></h2>\n<p><a href=\"https://circleci.com/gh/alankbi/detecto/tree/master\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/92dd578e62fc717d175b1ae7c2e30299574af8d6/68747470733a2f2f636972636c6563692e636f6d2f67682f616c616e6b62692f6465746563746f2f747265652f6d61737465722e7376673f7374796c653d737667\"></a>\n<a href=\"https://detecto.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c835262562cd02ed5057af7416d82b4b5fe682cd/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6465746563746f2f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p>Detecto is a Python package that allows you to build fully-functioning computer vision and object detection models with just 5 lines of code.\nInference on still images and videos, transfer learning on custom datasets, and serialization of models to files are just a few of Detecto's features.\nDetecto is also built on top of PyTorch, allowing an easy transfer of models between the two libraries.</p>\n<p>The table below shows a few examples of Detecto's performance:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Still Image</th>\n<th align=\"center\">Video</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><img alt=\"Detecto still image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/abc7c0c2baeeadb0d2ecc3105a592563ea1872f8/2e2f6173736574732f6170706c655f6f72616e67652e706e67\" width=\"500px\"></td>\n<td align=\"center\"><img alt=\"Video demo of Detecto\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4bcf464c7ead240cb5249441a5ab7ea95cd0ecf3/6173736574732f64656d6f2e676966\"></td>\n</tr></tbody></table>\n<h1>Installation</h1>\n<p>To install Detecto using pip, run the following command:</p>\n<p><code>pip3 install detecto</code></p>\n<p>Installing with pip should download all of Detecto's dependencies automatically.\nHowever, if an issue arises, you can manually download the dependencies listed in the <a href=\"requirements.txt\" rel=\"nofollow\">requirements.txt</a> file.</p>\n<h1>Usage</h1>\n<p>The power of Detecto comes from its simplicity and ease of use. Creating and running a pre-trained\n<a href=\"https://pytorch.org/docs/stable/torchvision/models.html#object-detection-instance-segmentation-and-person-keypoint-detection\" rel=\"nofollow\">Faster R-CNN ResNet-50 FPN</a>\nfrom PyTorch's model zoo takes 4 lines of code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">detecto.core</span> <span class=\"kn\">import</span> <span class=\"n\">Model</span>\n<span class=\"kn\">from</span> <span class=\"nn\">detecto.visualize</span> <span class=\"kn\">import</span> <span class=\"n\">detect_video</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">()</span>  <span class=\"c1\"># Initialize a pre-trained model</span>\n<span class=\"n\">detect_video</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"s1\">'input_video.mp4'</span><span class=\"p\">,</span> <span class=\"s1\">'output.avi'</span><span class=\"p\">)</span>  <span class=\"c1\"># Run inference on a video</span>\n</pre>\n<p>Below are several more examples of things you can do with Detecto:</p>\n<h3>Transfer Learning on Custom Datasets</h3>\n<p>Most of the times, you want a computer vision model that can detect custom objects. With Detecto, you can train a model on a custom dataset with 5 lines of code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">detecto.core</span> <span class=\"kn\">import</span> <span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">Dataset</span>\n\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">Dataset</span><span class=\"p\">(</span><span class=\"s1\">'custom_dataset/'</span><span class=\"p\">)</span>  <span class=\"c1\"># Load images and label data from the custom_dataset/ folder</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">([</span><span class=\"s1\">'dog'</span><span class=\"p\">,</span> <span class=\"s1\">'cat'</span><span class=\"p\">,</span> <span class=\"s1\">'rabbit'</span><span class=\"p\">])</span>  <span class=\"c1\"># Train to predict dogs, cats, and rabbits</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">)</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>  <span class=\"c1\"># Start using your trained model!</span>\n</pre>\n<h3>Inference and Visualization</h3>\n<p>When using a model for inference, Detecto returns predictions in an easy-to-use format and provides several visualization tools:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">detecto.core</span> <span class=\"kn\">import</span> <span class=\"n\">Model</span>\n<span class=\"kn\">from</span> <span class=\"nn\">detecto</span> <span class=\"kn\">import</span> <span class=\"n\">utils</span><span class=\"p\">,</span> <span class=\"n\">visualize</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">()</span>\n\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">read_image</span><span class=\"p\">(</span><span class=\"s1\">'image.jpg'</span><span class=\"p\">)</span>  <span class=\"c1\"># Helper function to read in images</span>\n\n<span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">boxes</span><span class=\"p\">,</span> <span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>  <span class=\"c1\"># Get all predictions on an image</span>\n<span class=\"n\">predictions</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict_top</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>  <span class=\"c1\"># Same as above, but returns only the top predictions</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">boxes</span><span class=\"p\">,</span> <span class=\"n\">scores</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">predictions</span><span class=\"p\">)</span>\n\n<span class=\"n\">visualize</span><span class=\"o\">.</span><span class=\"n\">show_labeled_image</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">boxes</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">)</span>  <span class=\"c1\"># Plot predictions on a single image</span>\n\n<span class=\"n\">images</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"n\">visualize</span><span class=\"o\">.</span><span class=\"n\">plot_prediction_grid</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">images</span><span class=\"p\">)</span>  <span class=\"c1\"># Plot predictions on a list of images</span>\n\n<span class=\"n\">visualize</span><span class=\"o\">.</span><span class=\"n\">detect_video</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"s1\">'input_video.mp4'</span><span class=\"p\">,</span> <span class=\"s1\">'output.avi'</span><span class=\"p\">)</span>  <span class=\"c1\"># Run inference on a video</span>\n</pre>\n<h3>Advanced Usage</h3>\n<p>If you want more control over how you train your model, Detecto lets you do just that:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">detecto</span> <span class=\"kn\">import</span> <span class=\"n\">core</span><span class=\"p\">,</span> <span class=\"n\">utils</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision</span> <span class=\"kn\">import</span> <span class=\"n\">transforms</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"c1\"># Convert XML files to CSV format</span>\n<span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">xml_to_csv</span><span class=\"p\">(</span><span class=\"s1\">'training_labels/'</span><span class=\"p\">,</span> <span class=\"s1\">'train_labels.csv'</span><span class=\"p\">)</span>\n<span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">xml_to_csv</span><span class=\"p\">(</span><span class=\"s1\">'validation_labels/'</span><span class=\"p\">,</span> <span class=\"s1\">'val_labels.csv'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Define custom transforms to apply to your dataset</span>\n<span class=\"n\">custom_transforms</span> <span class=\"o\">=</span> <span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">Compose</span><span class=\"p\">([</span>\n    <span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToPILImage</span><span class=\"p\">(),</span>\n    <span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">Resize</span><span class=\"p\">(</span><span class=\"mi\">800</span><span class=\"p\">),</span>\n    <span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ColorJitter</span><span class=\"p\">(</span><span class=\"n\">saturation</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">),</span>\n    <span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">(),</span>\n    <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">normalize_transform</span><span class=\"p\">(),</span>\n<span class=\"p\">])</span>\n\n<span class=\"c1\"># Pass in a CSV file instead of XML files for faster Dataset initialization speeds</span>\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">(</span><span class=\"s1\">'train_labels.csv'</span><span class=\"p\">,</span> <span class=\"s1\">'images/'</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">custom_transforms</span><span class=\"p\">)</span>\n<span class=\"n\">val_dataset</span> <span class=\"o\">=</span> <span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">(</span><span class=\"s1\">'val_labels.csv'</span><span class=\"p\">,</span> <span class=\"s1\">'val_images'</span><span class=\"p\">)</span>  <span class=\"c1\"># Validation dataset for training</span>\n\n<span class=\"c1\"># Create your own DataLoader with custom options</span>\n<span class=\"n\">loader</span> <span class=\"o\">=</span> <span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">shuffle</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> \n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">([</span><span class=\"s1\">'car'</span><span class=\"p\">,</span> <span class=\"s1\">'truck'</span><span class=\"p\">,</span> <span class=\"s1\">'boat'</span><span class=\"p\">,</span> <span class=\"s1\">'plane'</span><span class=\"p\">])</span>\n<span class=\"n\">losses</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">loader</span><span class=\"p\">,</span> <span class=\"n\">val_dataset</span><span class=\"p\">,</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">learning_rate</span><span class=\"o\">=</span><span class=\"mf\">0.001</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">losses</span><span class=\"p\">)</span>  <span class=\"c1\"># Visualize loss throughout training</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'model_weights.pth'</span><span class=\"p\">)</span>  <span class=\"c1\"># Save model to a file</span>\n\n<span class=\"c1\"># Directly access underlying torchvision model for even more control</span>\n<span class=\"n\">torch_model</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">get_internal_model</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">torch_model</span><span class=\"p\">))</span>\n</pre>\n<p>For more examples, visit the <a href=\"https://detecto.readthedocs.io/\" rel=\"nofollow\">docs</a>, which includes a <a href=\"https://detecto.readthedocs.io/en/latest/usage/quickstart.html\" rel=\"nofollow\">quickstart</a> tutorial.</p>\n<p>Alternatively, check out the <a href=\"https://colab.research.google.com/drive/1ISaTV5F-7b4i2QqtjTa7ToDPQ2k8qEe0\" rel=\"nofollow\">demo on Colab</a>.</p>\n<h1>API Documentation</h1>\n<p>The full API documentation can be found at <a href=\"https://detecto.readthedocs.io/en/latest/api/index.html\" rel=\"nofollow\">detecto.readthedocs.io</a>.\nThe docs are split into three sections, each corresponding to one of Detecto's modules:</p>\n<h3>Core</h3>\n<p>The <a href=\"https://detecto.readthedocs.io/en/latest/api/core.html\" rel=\"nofollow\">detecto.core</a> module contains the central classes of the package: Dataset, DataLoader, and Model.\nThese are used to read in a labeled dataset and train a functioning object detection model.</p>\n<h3>Utils</h3>\n<p>The <a href=\"https://detecto.readthedocs.io/en/latest/api/utils.html\" rel=\"nofollow\">detecto.utils</a> module contains a variety of useful helper functions.\nWith it, you can read in images, convert XML files into CSV files, apply standard transforms to images, and more.</p>\n<h3>Visualize</h3>\n<p>The <a href=\"https://detecto.readthedocs.io/en/latest/api/visualize.html\" rel=\"nofollow\">detecto.visualize</a> module is used to display labeled images, plot predictions, and run object detection on videos.</p>\n<h1>Contributing</h1>\n<p>All issues and pull requests are welcome! To run the code locally, first fork the repository and then run the following commands on your computer:</p>\n<pre>git clone https://github.com/&lt;your-username&gt;/detecto.git\n<span class=\"nb\">cd</span> detecto\n<span class=\"c1\"># Recommended to create a virtual environment before the next step</span>\npip3 install -r requirements.txt\n</pre>\n<p>When adding code, be sure to write unit tests and docstrings where necessary.</p>\n<p>Tests are located in <code>detecto/tests</code> and can be run using pytest:</p>\n<p><code>python3 -m pytest</code></p>\n<p>To generate the documentation locally, run the following commands:</p>\n<pre><span class=\"nb\">cd</span> docs\nmake html\n</pre>\n<p>The documentation can then be viewed at <code>docs/_build/html/index.html</code>.</p>\n<h1>Contact</h1>\n<p>Detecto was created by <a href=\"https://www.alanbi.com/\" rel=\"nofollow\">Alan Bi</a>. Feel free to reach out on <a href=\"https://twitter.com/alankbi\" rel=\"nofollow\">Twitter</a> or through <a href=\"mailto:alan.bi326@gmail.com\">email</a>!</p>\n\n          </div>"}, "last_serial": 6886722, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3eb7db931a21439f64f0703e8335276e", "sha256": "67fcb68b45c724d65ff025ef79f9038046e93809c371c8a2c6b4557ad9bcf32e"}, "downloads": -1, "filename": "detecto-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3eb7db931a21439f64f0703e8335276e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19899, "upload_time": "2020-01-11T18:22:43", "upload_time_iso_8601": "2020-01-11T18:22:43.817215Z", "url": "https://files.pythonhosted.org/packages/9b/8e/41a977ff723a317f8452052387523a7b870b56c4fe876c5d2dca207ad072/detecto-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bf9e5b97eed08afc7846f6fe0effcf7", "sha256": "e08438a64ea5d366716efd1709ac55c7bfd127a6ad9e6e82c82060d4f7c38305"}, "downloads": -1, "filename": "detecto-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8bf9e5b97eed08afc7846f6fe0effcf7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16359, "upload_time": "2020-01-11T18:22:46", "upload_time_iso_8601": "2020-01-11T18:22:46.406787Z", "url": "https://files.pythonhosted.org/packages/b0/f3/070802a92f0bbdce3d23e80b31b8075dd5c8262afbcf6a584458305a1499/detecto-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "01777de2d830b2150a4bb2d0170ee384", "sha256": "12faa8c55b8bde134c8906b8db31e71b93737db68923215c373206828a92e1c8"}, "downloads": -1, "filename": "detecto-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "01777de2d830b2150a4bb2d0170ee384", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19898, "upload_time": "2020-01-11T18:36:51", "upload_time_iso_8601": "2020-01-11T18:36:51.841191Z", "url": "https://files.pythonhosted.org/packages/af/f7/dc49a42c15b2823f3a3de66dd61187f3378848282acd74a651f55a0ca86c/detecto-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5187f334ea40d5836402977ceaf2ae3", "sha256": "cd908ef107fa465c85ceb82ba03d7d3bc35fbb18442e928327756fcd362621aa"}, "downloads": -1, "filename": "detecto-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d5187f334ea40d5836402977ceaf2ae3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16357, "upload_time": "2020-01-11T18:36:53", "upload_time_iso_8601": "2020-01-11T18:36:53.619889Z", "url": "https://files.pythonhosted.org/packages/7d/e6/7acb3bf09dbc4a319d5c4a1367edbfc72e7d9becd81e344506e2d234cf66/detecto-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "f16202393091459cf9f4b0936bbdc618", "sha256": "b64c9562c0db411ecd7c77ef5e7ae98a78770d442a2daa2f4fd9f92530643d52"}, "downloads": -1, "filename": "detecto-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f16202393091459cf9f4b0936bbdc618", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20148, "upload_time": "2020-01-20T16:33:19", "upload_time_iso_8601": "2020-01-20T16:33:19.403793Z", "url": "https://files.pythonhosted.org/packages/a2/3c/970bd842dadd6f12f1ffe4cf13fc40fb03ca4579a55b8c0e4bed212d6a77/detecto-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6f31286da9fbe56b7c3b4d74d84aac4", "sha256": "355decd18eefbf7ba635dff0c3bc2af24c9d12bcec20603b331697e00e71e741"}, "downloads": -1, "filename": "detecto-1.0.2.tar.gz", "has_sig": false, "md5_digest": "e6f31286da9fbe56b7c3b4d74d84aac4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16903, "upload_time": "2020-01-20T16:33:21", "upload_time_iso_8601": "2020-01-20T16:33:21.030784Z", "url": "https://files.pythonhosted.org/packages/1f/c8/c66e5f18738aca5f37e0809182cb34060c83b28c55da8d45f61b801233dc/detecto-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "9e22d55efd847858c454c4ceff743e24", "sha256": "2b17164cf730edb59f2d66d3f66652461d5d2da16b2ede4ffb5f99a6e6b2f78a"}, "downloads": -1, "filename": "detecto-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9e22d55efd847858c454c4ceff743e24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22229, "upload_time": "2020-01-29T17:36:26", "upload_time_iso_8601": "2020-01-29T17:36:26.229507Z", "url": "https://files.pythonhosted.org/packages/a0/ed/0259d30cb4f138d26a75bc2fa4626134a3506d97446ca90c00a375cb3a7c/detecto-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c00d6c11e0b781360b1239f01b063e6c", "sha256": "7e75de7b06f3c1ee0c3f8010dfb5afc55def7eabfeb6a9032899b1b762f093d0"}, "downloads": -1, "filename": "detecto-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c00d6c11e0b781360b1239f01b063e6c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18781, "upload_time": "2020-01-29T17:36:27", "upload_time_iso_8601": "2020-01-29T17:36:27.797759Z", "url": "https://files.pythonhosted.org/packages/e6/08/cf300aa346d74c0eef1e03e64e5330005f190454ebdbfa8195649bffc7fe/detecto-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "92cd401aaf8b33c63b95003a02765405", "sha256": "7a648ed185f4d64f0c881555d37d96ae5615947a2246a47dd2221821ded7dd94"}, "downloads": -1, "filename": "detecto-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "92cd401aaf8b33c63b95003a02765405", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22481, "upload_time": "2020-01-29T19:31:36", "upload_time_iso_8601": "2020-01-29T19:31:36.199257Z", "url": "https://files.pythonhosted.org/packages/e8/ae/a2808b4ad1d9d0d472154965217ef8aca6ed5fe962fac020d75c7e5fba80/detecto-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "038d60a72f830b8d35c0c8a81f9767bf", "sha256": "fdcafae390e36349a4b022fee32177f519071d2ce6e57b96d8146d7307f49ac1"}, "downloads": -1, "filename": "detecto-1.1.1.tar.gz", "has_sig": false, "md5_digest": "038d60a72f830b8d35c0c8a81f9767bf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18996, "upload_time": "2020-01-29T19:31:37", "upload_time_iso_8601": "2020-01-29T19:31:37.788604Z", "url": "https://files.pythonhosted.org/packages/1f/82/2f43617b81afb1c2db45314b35a78c0a2c4a410cc3e8d046fa51149589c0/detecto-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "eb39f8df9f14069ec2aabde63a10b51d", "sha256": "74c0fd63bf709a284799a8eed7cd89f317cd7b4d72cf5f4eb0f3aff0c4dd96bd"}, "downloads": -1, "filename": "detecto-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "eb39f8df9f14069ec2aabde63a10b51d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24027, "upload_time": "2020-02-14T16:40:00", "upload_time_iso_8601": "2020-02-14T16:40:00.387103Z", "url": "https://files.pythonhosted.org/packages/ff/f1/d64ae24cc437a639c42daad6532bf019770cda2aa91d13a97a990c1e90a3/detecto-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b7c3314b23518cbdfb99f8106a2c2f1", "sha256": "fd22f75f282de90d1a785cf4bab3e300d80a9fe0f684fa2ef5d098335ac2326c"}, "downloads": -1, "filename": "detecto-1.1.2.tar.gz", "has_sig": false, "md5_digest": "9b7c3314b23518cbdfb99f8106a2c2f1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22009, "upload_time": "2020-02-14T16:40:01", "upload_time_iso_8601": "2020-02-14T16:40:01.812557Z", "url": "https://files.pythonhosted.org/packages/63/4c/636bcdf07626555fbcc94b62653af8c0d627eee2a81a2bdae30db63f1af0/detecto-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "28719158367c0f9f260c3e4288f31a25", "sha256": "236f50d3d5f11ff3842e464f6575ebf57057b0d231a49182e4967627537c8761"}, "downloads": -1, "filename": "detecto-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "28719158367c0f9f260c3e4288f31a25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24421, "upload_time": "2020-03-26T04:57:29", "upload_time_iso_8601": "2020-03-26T04:57:29.351824Z", "url": "https://files.pythonhosted.org/packages/0c/fe/2a6b29c30189051b0f0308fb6f1a1a386069eaa200b89f985ef1f3a9dc85/detecto-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccca0763d64b40a5fb609a05961fbd01", "sha256": "c95cf523ec90030324acf4d6c84fb43b5e1b9c4a1a3baedfd8a711eeb10e2710"}, "downloads": -1, "filename": "detecto-1.1.3.tar.gz", "has_sig": false, "md5_digest": "ccca0763d64b40a5fb609a05961fbd01", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22381, "upload_time": "2020-03-26T04:57:31", "upload_time_iso_8601": "2020-03-26T04:57:31.138386Z", "url": "https://files.pythonhosted.org/packages/39/e1/25bc763f29d24fbf9fc0207fe0f9fcb0601d93bcba8d13f032de1304e3eb/detecto-1.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "28719158367c0f9f260c3e4288f31a25", "sha256": "236f50d3d5f11ff3842e464f6575ebf57057b0d231a49182e4967627537c8761"}, "downloads": -1, "filename": "detecto-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "28719158367c0f9f260c3e4288f31a25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24421, "upload_time": "2020-03-26T04:57:29", "upload_time_iso_8601": "2020-03-26T04:57:29.351824Z", "url": "https://files.pythonhosted.org/packages/0c/fe/2a6b29c30189051b0f0308fb6f1a1a386069eaa200b89f985ef1f3a9dc85/detecto-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccca0763d64b40a5fb609a05961fbd01", "sha256": "c95cf523ec90030324acf4d6c84fb43b5e1b9c4a1a3baedfd8a711eeb10e2710"}, "downloads": -1, "filename": "detecto-1.1.3.tar.gz", "has_sig": false, "md5_digest": "ccca0763d64b40a5fb609a05961fbd01", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22381, "upload_time": "2020-03-26T04:57:31", "upload_time_iso_8601": "2020-03-26T04:57:31.138386Z", "url": "https://files.pythonhosted.org/packages/39/e1/25bc763f29d24fbf9fc0207fe0f9fcb0601d93bcba8d13f032de1304e3eb/detecto-1.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:56 2020"}