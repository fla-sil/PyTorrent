{"info": {"author": "Matan Noam Shavit", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# SimpleQuery\nquery from containers of objects, in Python\n\n## Query pattern\n\nThe Query pattern uses criteria on classes and fields to retrieve\nvalue objects from a dataset. Those criteria are a field, an operator,\nand a value. For example, ('last_name', =, 'Fowler') or ('price', <, 100.00).\n\n## Installation\n\n```\npip install simple-query\n```\n\n## Usage\n`all() ` returns the matching objects for a query, and `filter(*criteria)` returns a new, filtered query, where `criteria = field, operator, value`.\n\nFor example:\n```Python\nfrom simple_query.query import Query\nfrom operator import eq, gt, lt\n\npeople = [\n    Person('Ada Lovelace'),\n    Person('Grace Hopper'),\n    Person('Jean Bartik')]\n\nQuery(people).all()\n# [Person('Ada Lovelace'), Person('Grace Hopper'), Person('Jean Bartik')]\n\nQuery(people).filter('last_name', eq, 'Lovelace').all()\n# [Person('Ada Lovelace')]\n\nQuery(people) \\\n    .filter('first_name', gt, 'B') \\\n    .filter('last_name', lt, 'C').all()\n# [Person('Jean Bartik')]\n```\n\n## Setting up development environment\nIt is always recommended to use a virtual environment for each\nPython appplication. Create the environment once, after cloning\nthis repository to your machine.\n```\npython3 -m venv .env\n```\n\nFor each terminal session going forward, work on the virtual\nenvironment and use its copy of python.\n```\nsource .env/bin/activate\n```\n\nUpgrade pip\n```\npip install -U pip\n```\n\nInstall developer requirements for a nicer test runner (see Running Tests)\n```\npip install -r requirements/dev.txt\n```\n\n## Running tests\nTests are written in unittest syntax, so no additional package are needed\nto run them\n```\npython -m unittest discover\n```\nFor a more informative output, as well as plugins for\ncolor and watch mode, use nose test runner. You can also use the test runner\nof your choice.\n```\nnosetests --rednose --with-watch\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/matannoam/SimpleQuery", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "simple-query", "package_url": "https://pypi.org/project/simple-query/", "platform": "", "project_url": "https://pypi.org/project/simple-query/", "project_urls": {"Homepage": "https://github.com/matannoam/SimpleQuery"}, "release_url": "https://pypi.org/project/simple-query/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Query pattern of containers of objects", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SimpleQuery</h1>\n<p>query from containers of objects, in Python</p>\n<h2>Query pattern</h2>\n<p>The Query pattern uses criteria on classes and fields to retrieve\nvalue objects from a dataset. Those criteria are a field, an operator,\nand a value. For example, ('last_name', =, 'Fowler') or ('price', &lt;, 100.00).</p>\n<h2>Installation</h2>\n<pre><code>pip install simple-query\n</code></pre>\n<h2>Usage</h2>\n<p><code>all()</code> returns the matching objects for a query, and <code>filter(*criteria)</code> returns a new, filtered query, where <code>criteria = field, operator, value</code>.</p>\n<p>For example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simple_query.query</span> <span class=\"kn\">import</span> <span class=\"n\">Query</span>\n<span class=\"kn\">from</span> <span class=\"nn\">operator</span> <span class=\"kn\">import</span> <span class=\"n\">eq</span><span class=\"p\">,</span> <span class=\"n\">gt</span><span class=\"p\">,</span> <span class=\"n\">lt</span>\n\n<span class=\"n\">people</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"s1\">'Ada Lovelace'</span><span class=\"p\">),</span>\n    <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"s1\">'Grace Hopper'</span><span class=\"p\">),</span>\n    <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"s1\">'Jean Bartik'</span><span class=\"p\">)]</span>\n\n<span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"n\">people</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"c1\"># [Person('Ada Lovelace'), Person('Grace Hopper'), Person('Jean Bartik')]</span>\n\n<span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"n\">people</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"s1\">'last_name'</span><span class=\"p\">,</span> <span class=\"n\">eq</span><span class=\"p\">,</span> <span class=\"s1\">'Lovelace'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"c1\"># [Person('Ada Lovelace')]</span>\n\n<span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"n\">people</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"s1\">'first_name'</span><span class=\"p\">,</span> <span class=\"n\">gt</span><span class=\"p\">,</span> <span class=\"s1\">'B'</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"s1\">'last_name'</span><span class=\"p\">,</span> <span class=\"n\">lt</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"c1\"># [Person('Jean Bartik')]</span>\n</pre>\n<h2>Setting up development environment</h2>\n<p>It is always recommended to use a virtual environment for each\nPython appplication. Create the environment once, after cloning\nthis repository to your machine.</p>\n<pre><code>python3 -m venv .env\n</code></pre>\n<p>For each terminal session going forward, work on the virtual\nenvironment and use its copy of python.</p>\n<pre><code>source .env/bin/activate\n</code></pre>\n<p>Upgrade pip</p>\n<pre><code>pip install -U pip\n</code></pre>\n<p>Install developer requirements for a nicer test runner (see Running Tests)</p>\n<pre><code>pip install -r requirements/dev.txt\n</code></pre>\n<h2>Running tests</h2>\n<p>Tests are written in unittest syntax, so no additional package are needed\nto run them</p>\n<pre><code>python -m unittest discover\n</code></pre>\n<p>For a more informative output, as well as plugins for\ncolor and watch mode, use nose test runner. You can also use the test runner\nof your choice.</p>\n<pre><code>nosetests --rednose --with-watch\n</code></pre>\n\n          </div>"}, "last_serial": 4325149, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "31e320fa8c6bb307f922244b31c258d7", "sha256": "e7ee076142b3335e34e510a4c79d070d674be04f2ca8e90c47b16070ea386458"}, "downloads": -1, "filename": "simple_query-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "31e320fa8c6bb307f922244b31c258d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4062, "upload_time": "2018-09-30T14:35:34", "upload_time_iso_8601": "2018-09-30T14:35:34.405372Z", "url": "https://files.pythonhosted.org/packages/6d/d9/84e236424875d28fadf219e1e70a716c02e9b2cf7271234d513434766e08/simple_query-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb2d2ab1cacb8137717e612c4cb427db", "sha256": "1585b890af1201661c083a28c0c13da1f35203d0f2d5c321434f89e4f36ca07f"}, "downloads": -1, "filename": "simple_query-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cb2d2ab1cacb8137717e612c4cb427db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2565, "upload_time": "2018-09-30T14:35:35", "upload_time_iso_8601": "2018-09-30T14:35:35.694615Z", "url": "https://files.pythonhosted.org/packages/3c/74/465dac5ab4bfa771f3f09e9e8a363b6a7fabb16afeb5b6968703aaeba545/simple_query-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "88d6fa4775c8581dd8712edcbe8cc5ab", "sha256": "1a32c683fbc95f850dcbe5302dffdf9c8f287c84ca1ec35b49800237a2a6bae8"}, "downloads": -1, "filename": "simple_query-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "88d6fa4775c8581dd8712edcbe8cc5ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4308, "upload_time": "2018-09-30T14:52:05", "upload_time_iso_8601": "2018-09-30T14:52:05.977752Z", "url": "https://files.pythonhosted.org/packages/81/b1/0a63261ef432cf890756596acdc3a4eac4cd787b76e5ba7d73034d1c8107/simple_query-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2e502288016309dc024feb0509b1cec", "sha256": "95f262f24ddebdc7c186275be831c829d78fb2ba1e11d45a7f6535aea655842b"}, "downloads": -1, "filename": "simple_query-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c2e502288016309dc024feb0509b1cec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2834, "upload_time": "2018-09-30T14:52:07", "upload_time_iso_8601": "2018-09-30T14:52:07.357306Z", "url": "https://files.pythonhosted.org/packages/48/e7/1c9f37231d34cf628a2ed889af675e53928d6b0203e4495d58cdfffc5bf9/simple_query-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "88d6fa4775c8581dd8712edcbe8cc5ab", "sha256": "1a32c683fbc95f850dcbe5302dffdf9c8f287c84ca1ec35b49800237a2a6bae8"}, "downloads": -1, "filename": "simple_query-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "88d6fa4775c8581dd8712edcbe8cc5ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4308, "upload_time": "2018-09-30T14:52:05", "upload_time_iso_8601": "2018-09-30T14:52:05.977752Z", "url": "https://files.pythonhosted.org/packages/81/b1/0a63261ef432cf890756596acdc3a4eac4cd787b76e5ba7d73034d1c8107/simple_query-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2e502288016309dc024feb0509b1cec", "sha256": "95f262f24ddebdc7c186275be831c829d78fb2ba1e11d45a7f6535aea655842b"}, "downloads": -1, "filename": "simple_query-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c2e502288016309dc024feb0509b1cec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2834, "upload_time": "2018-09-30T14:52:07", "upload_time_iso_8601": "2018-09-30T14:52:07.357306Z", "url": "https://files.pythonhosted.org/packages/48/e7/1c9f37231d34cf628a2ed889af675e53928d6b0203e4495d58cdfffc5bf9/simple_query-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:18 2020"}