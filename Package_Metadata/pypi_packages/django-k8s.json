{"info": {"author": "Ben Timby", "author_email": "btimby@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. image:: https://travis-ci.org/btimby/django-k8s.png\n   :target: https://travis-ci.org/btimby/django-k8s\n\n.. image:: https://coveralls.io/repos/github/btimby/django-k8s/badge.svg?branch=master\n   :target: https://coveralls.io/github/btimby/django-k8s?branch=master\n\n.. image:: https://badge.fury.io/py/django-k8s.svg\n    :target: https://badge.fury.io/py/django-k8s\n\ndjango-k8s\n----------\n\nIntegration between Django and Kubernetes.\n\nCaching\n=======\n\nService discovery for Memcached. Admittedly this will work with any service\ndiscovery that uses multiple A records for memcached servers. This allows the\nmemcached client to properly distribute keys amongst memcached servers. AWS\nElasticCache as well as Kubernetes and others are compatible with this scheme.\n\nIf an error is received when trying to access a memcached server, DNS\nresolution is performed again (refreshing server list). This allows memcached\nservers to be added or removed without restarting the application.\n\nMore information on this approach is provided below.\n\nhttps://cloud.google.com/solutions/deploying-memcached-on-kubernetes-engine\n\nGiven Memcached deployed to Kubernetes with the following command:\n\n.. code:: bash\n\n    helm install stable/memcached --name mycache --set replicaCount=3\n\nYou could configure your application like this:\n\n.. code:: python\n\n    CACHES = {\n        'default': {\n            'BACKEND': 'django_k8s.cache.backends.Memcached',\n            'HOST': environ.get('DJANGO_CACHE_HOST', None),\n        },\n    }\n\n\nMigrations\n==========\n\nOne convenient way to handle Django migrations in Kubernetes is using a Job.\nHowever Django applications expect the database to be available and migrated on\nstartup. Therefore some coordination is necessary. The application containers\nshould wait for the migration job to complete before starting up.\n\nThis package provides a management command that polls the database to check for\ntwo conditions:\n\n1. That the database server is reachable.\n2. That all migrations have been applied.\n\nIt can optionally wait for both of these conditions to be true. An exit code of\n``0`` indicates success. This management command could be part of your\nentrypoint, ensuring no Django application is started until these conditions\nare met.\n\nThis technique is compatible with systems other than Kubernetes, the author has\nused it with Docker Compose as well.\n\n.. code:: bash\n\n    $ python manage.py checkmigrations\n    Migrations complete.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/btimby/django-k8s/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-k8s", "package_url": "https://pypi.org/project/django-k8s/", "platform": "", "project_url": "https://pypi.org/project/django-k8s/", "project_urls": {"Homepage": "http://github.com/btimby/django-k8s/"}, "release_url": "https://pypi.org/project/django-k8s/0.2.7/", "requires_dist": null, "requires_python": "", "summary": "Integration between Django and Kubernetes.", "version": "0.2.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/btimby/django-k8s\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/btimby/django-k8s.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8bac4e194ed4f0bb32f747080c8a624427838e50/68747470733a2f2f7472617669732d63692e6f72672f6274696d62792f646a616e676f2d6b38732e706e67\"></a>\n<a href=\"https://coveralls.io/github/btimby/django-k8s?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/btimby/django-k8s/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a660ff0fc848c55b8490364209d889786da63d9/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6274696d62792f646a616e676f2d6b38732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/django-k8s\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/django-k8s.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6acac01f49a1b46bd7d0398a2af73f68470f1ee0/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d6b38732e737667\"></a>\n<div id=\"django-k8s\">\n<h2>django-k8s</h2>\n<p>Integration between Django and Kubernetes.</p>\n<div id=\"caching\">\n<h3>Caching</h3>\n<p>Service discovery for Memcached. Admittedly this will work with any service\ndiscovery that uses multiple A records for memcached servers. This allows the\nmemcached client to properly distribute keys amongst memcached servers. AWS\nElasticCache as well as Kubernetes and others are compatible with this scheme.</p>\n<p>If an error is received when trying to access a memcached server, DNS\nresolution is performed again (refreshing server list). This allows memcached\nservers to be added or removed without restarting the application.</p>\n<p>More information on this approach is provided below.</p>\n<p><a href=\"https://cloud.google.com/solutions/deploying-memcached-on-kubernetes-engine\" rel=\"nofollow\">https://cloud.google.com/solutions/deploying-memcached-on-kubernetes-engine</a></p>\n<p>Given Memcached deployed to Kubernetes with the following command:</p>\n<pre>helm install stable/memcached --name mycache --set <span class=\"nv\">replicaCount</span><span class=\"o\">=</span><span class=\"m\">3</span>\n</pre>\n<p>You could configure your application like this:</p>\n<pre><span class=\"n\">CACHES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'BACKEND'</span><span class=\"p\">:</span> <span class=\"s1\">'django_k8s.cache.backends.Memcached'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'HOST'</span><span class=\"p\">:</span> <span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'DJANGO_CACHE_HOST'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"migrations\">\n<h3>Migrations</h3>\n<p>One convenient way to handle Django migrations in Kubernetes is using a Job.\nHowever Django applications expect the database to be available and migrated on\nstartup. Therefore some coordination is necessary. The application containers\nshould wait for the migration job to complete before starting up.</p>\n<p>This package provides a management command that polls the database to check for\ntwo conditions:</p>\n<ol>\n<li>That the database server is reachable.</li>\n<li>That all migrations have been applied.</li>\n</ol>\n<p>It can optionally wait for both of these conditions to be true. An exit code of\n<tt>0</tt> indicates success. This management command could be part of your\nentrypoint, ensuring no Django application is started until these conditions\nare met.</p>\n<p>This technique is compatible with systems other than Kubernetes, the author has\nused it with Docker Compose as well.</p>\n<pre>$ python manage.py checkmigrations\nMigrations complete.\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3932846, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "353d67bd447af85ebd3de414235f4d02", "sha256": "0e0f5fee9411932d640a531efaa03c87730739c52b039f2e24c2f1f541a2ede4"}, "downloads": -1, "filename": "django-k8s-0.1.tar.gz", "has_sig": false, "md5_digest": "353d67bd447af85ebd3de414235f4d02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2854, "upload_time": "2018-05-24T15:21:04", "upload_time_iso_8601": "2018-05-24T15:21:04.465698Z", "url": "https://files.pythonhosted.org/packages/ba/4a/a09e280a2dbbae4a53bd787f8aa461e002819c636ba39c250beba2b8aaa4/django-k8s-0.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "aaaff26cb9be9142dabcbdc59704320a", "sha256": "113a05eefce3cb2a4ef3d08537ddd4ec3a7606b2d91e7a30e4af67572b2da243"}, "downloads": -1, "filename": "django-k8s-0.2.2.tar.gz", "has_sig": false, "md5_digest": "aaaff26cb9be9142dabcbdc59704320a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3167, "upload_time": "2018-05-24T16:40:38", "upload_time_iso_8601": "2018-05-24T16:40:38.467675Z", "url": "https://files.pythonhosted.org/packages/b9/ec/5bef2e6350def50acac9613155bc716388adc9b11cf00bf45f5008a728fa/django-k8s-0.2.2.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "db44fcee97af60aa93b9bde03d91e1a4", "sha256": "472651aa4070affa3af24d1ae5359b8605226c16b1079b9708e09f912111dacd"}, "downloads": -1, "filename": "django-k8s-0.2.4.tar.gz", "has_sig": false, "md5_digest": "db44fcee97af60aa93b9bde03d91e1a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3166, "upload_time": "2018-05-24T19:39:21", "upload_time_iso_8601": "2018-05-24T19:39:21.245010Z", "url": "https://files.pythonhosted.org/packages/20/10/ba450a4c7ba417153b9f85ca695fb219c3b5b86a1f4f3a9124ee78bf32e5/django-k8s-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "3ab10af184edff00cbe81e8f9de94ab0", "sha256": "ffc92195ace744ed5db96b9b1b5ee7e8982c3d41b8cabf32b666a2d1dcdaab1e"}, "downloads": -1, "filename": "django-k8s-0.2.5.tar.gz", "has_sig": false, "md5_digest": "3ab10af184edff00cbe81e8f9de94ab0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3169, "upload_time": "2018-05-25T01:50:21", "upload_time_iso_8601": "2018-05-25T01:50:21.754075Z", "url": "https://files.pythonhosted.org/packages/20/6d/3fd610546e702c22428a94ec12215856f0bbd74273b29f479b6c29c89203/django-k8s-0.2.5.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "515100642b2267ea4c424de01e7f9424", "sha256": "d7c2e9a41b7b2c6422d6715b118d59716c7cb4afad87af2d80c7a284c48ebd69"}, "downloads": -1, "filename": "django-k8s-0.2.7.tar.gz", "has_sig": false, "md5_digest": "515100642b2267ea4c424de01e7f9424", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6990, "upload_time": "2018-06-05T16:19:14", "upload_time_iso_8601": "2018-06-05T16:19:14.070469Z", "url": "https://files.pythonhosted.org/packages/d1/97/56d020f556d2bcd05b3a6656243d9a917cd3c886d656b77c9f50001cd0e7/django-k8s-0.2.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "515100642b2267ea4c424de01e7f9424", "sha256": "d7c2e9a41b7b2c6422d6715b118d59716c7cb4afad87af2d80c7a284c48ebd69"}, "downloads": -1, "filename": "django-k8s-0.2.7.tar.gz", "has_sig": false, "md5_digest": "515100642b2267ea4c424de01e7f9424", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6990, "upload_time": "2018-06-05T16:19:14", "upload_time_iso_8601": "2018-06-05T16:19:14.070469Z", "url": "https://files.pythonhosted.org/packages/d1/97/56d020f556d2bcd05b3a6656243d9a917cd3c886d656b77c9f50001cd0e7/django-k8s-0.2.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:27 2020"}