{"info": {"author": "Vladimir Ermakov", "author_email": "vooon341@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": ".. -*- mode: rst -*-\n\n==============\ndjango-hgadmin\n==============\n\nFeatures\n========\n\n1. Create new repository and delete\n2. Create's backup tarball before delete\n3. Change repository settings\n4. Authentification\n\nInstall\n=======\n\n1. Create new Django project\n2. Set ``HGWEBDIR_CONF``, ``HGWEBDIR_WSGI``, ``HGWEBDIR_ROOT`` paths\n   and set ``HGADMIN_ALLOW_REMOVE`` True or False\n3. Cange Apache configuration (see example)\n4. Put your repos and run\n   ``$ python manage.py syncdb``\n5. ???\n6. PROFIT :)\n\nExamples\n========\n\nProject tree\n------------\n\n::\n\n    project\n    |-- __init__.py\n    |-- auth.wsgi -> ./hgadmin/auth.wsgi\n    |-- django.wsgi\n    |-- hgadmin\n    |-- hgweb.config\n    |-- hgwebdir.wsgi\n    |-- manage.py\n    |-- repos\n    |   |-- test0\n    |   |-- test1.tar.bz2\n    |   `-- test2\n    |-- settings.py\n    `-- urls.py\n\n\nDjango settings\n---------------\n\n::\n\n    ##\n    # Helpers\n    import os.path\n    PROJECT_ROOT = os.path.normpath(os.path.dirname(__file__))\n\n    ##\n    # Paths\n    HGWEBDIR_CONF = os.path.join(PROJECT_ROOT, 'hgweb.config')\n    HGWEBDIR_WSGI = os.path.join(PROJECT_ROOT, 'hgwebdir.wsgi')\n    HGWEBDIR_ROOT = os.path.join(PROJECT_ROOT, 'repos')\n\n    ##\n    # Allow remove repo from server.\n    # Be careful!\n    HGADMIN_ALLOW_REMOVE = False\n\n\nApache settings\n---------------\n\n::\n\n    <VirtualHost *:80>\n        ServerAdmin     webmaster@example.com\n        ServerName      hg.example.com\n        DocumentRoot    /path/to/hg/root\n\n        ##\n        # WSGI\n        #\n        # WSGIProcessGroup group-name\n        # WSGIDaemonProcess group-name user=username group=group maximum-requests=2000\n        #\n        # Django settings.HGWEBDIR_WSGI\n        WSGIScriptAlias / /path/to/hgwebdir.wsgi\n\n        <Location />\n            Order allow,deny\n            Allow from all\n\n            ##\n            # WSGI based auth\n            AuthName \"Mercurial repository\"\n            AuthType Basic\n            AuthBasicProvider wsgi\n            WSGIAuthUserScript /path/to/hgadmin/auth.wsgi\n\n            <LimitExcept GET>\n                    Require valid-user\n            </LimitExcept>\n        </Location>\n\n        LogLevel debug\n        ErrorLog /var/log/httpd/hg.example.com-error.log\n        CustomLog /var/log/httpd/hg.example.com-access.log common\n    </VirtualHost>", "description_content_type": null, "docs_url": null, "download_url": "http://hg.vehq.ru/hgadmin/archive/0.4.2.tar.bz2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://vehq.ru/project/HGAdmin", "keywords": "Django,Mercurial,tool", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-hgadmin", "package_url": "https://pypi.org/project/django-hgadmin/", "platform": "any", "project_url": "https://pypi.org/project/django-hgadmin/", "project_urls": {"Download": "http://hg.vehq.ru/hgadmin/archive/0.4.2.tar.bz2", "Homepage": "http://vehq.ru/project/HGAdmin"}, "release_url": "https://pypi.org/project/django-hgadmin/0.4.2/", "requires_dist": null, "requires_python": null, "summary": "Mercurial repository administaration tool", "version": "0.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"features\">\n<h2>Features</h2>\n<ol>\n<li>Create new repository and delete</li>\n<li>Create\u2019s backup tarball before delete</li>\n<li>Change repository settings</li>\n<li>Authentification</li>\n</ol>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<ol>\n<li>Create new Django project</li>\n<li>Set <tt>HGWEBDIR_CONF</tt>, <tt>HGWEBDIR_WSGI</tt>, <tt>HGWEBDIR_ROOT</tt> paths\nand set <tt>HGADMIN_ALLOW_REMOVE</tt> True or False</li>\n<li>Cange Apache configuration (see example)</li>\n<li>Put your repos and run\n<tt>$ python manage.py syncdb</tt></li>\n<li>???</li>\n<li>PROFIT :)</li>\n</ol>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<div id=\"project-tree\">\n<h3>Project tree</h3>\n<pre>project\n|-- __init__.py\n|-- auth.wsgi -&gt; ./hgadmin/auth.wsgi\n|-- django.wsgi\n|-- hgadmin\n|-- hgweb.config\n|-- hgwebdir.wsgi\n|-- manage.py\n|-- repos\n|   |-- test0\n|   |-- test1.tar.bz2\n|   `-- test2\n|-- settings.py\n`-- urls.py\n</pre>\n</div>\n<div id=\"django-settings\">\n<h3>Django settings</h3>\n<pre>##\n# Helpers\nimport os.path\nPROJECT_ROOT = os.path.normpath(os.path.dirname(__file__))\n\n##\n# Paths\nHGWEBDIR_CONF = os.path.join(PROJECT_ROOT, 'hgweb.config')\nHGWEBDIR_WSGI = os.path.join(PROJECT_ROOT, 'hgwebdir.wsgi')\nHGWEBDIR_ROOT = os.path.join(PROJECT_ROOT, 'repos')\n\n##\n# Allow remove repo from server.\n# Be careful!\nHGADMIN_ALLOW_REMOVE = False\n</pre>\n</div>\n<div id=\"apache-settings\">\n<h3>Apache settings</h3>\n<pre>&lt;VirtualHost *:80&gt;\n    ServerAdmin     webmaster@example.com\n    ServerName      hg.example.com\n    DocumentRoot    /path/to/hg/root\n\n    ##\n    # WSGI\n    #\n    # WSGIProcessGroup group-name\n    # WSGIDaemonProcess group-name user=username group=group maximum-requests=2000\n    #\n    # Django settings.HGWEBDIR_WSGI\n    WSGIScriptAlias / /path/to/hgwebdir.wsgi\n\n    &lt;Location /&gt;\n        Order allow,deny\n        Allow from all\n\n        ##\n        # WSGI based auth\n        AuthName \"Mercurial repository\"\n        AuthType Basic\n        AuthBasicProvider wsgi\n        WSGIAuthUserScript /path/to/hgadmin/auth.wsgi\n\n        &lt;LimitExcept GET&gt;\n                Require valid-user\n        &lt;/LimitExcept&gt;\n    &lt;/Location&gt;\n\n    LogLevel debug\n    ErrorLog /var/log/httpd/hg.example.com-error.log\n    CustomLog /var/log/httpd/hg.example.com-access.log common\n&lt;/VirtualHost&gt;\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 789802, "releases": {"0.4.0": [], "0.4.1": [{"comment_text": "", "digests": {"md5": "b15f6106249994acecbc3f51e2fb18da", "sha256": "41775706b281f76ff45fce49b2b6b184e8be89d6a1a5f97eb9cf08b13f2acf5f"}, "downloads": -1, "filename": "django-hgadmin-0.4.1.tar.bz2", "has_sig": false, "md5_digest": "b15f6106249994acecbc3f51e2fb18da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6993, "upload_time": "2010-03-30T17:09:05", "upload_time_iso_8601": "2010-03-30T17:09:05.871795Z", "url": "https://files.pythonhosted.org/packages/31/80/6323600eab3a4de78c99522265b49289885d8d9d39971dd5b4ff3bb37c0e/django-hgadmin-0.4.1.tar.bz2", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "2b584241322a6398a66cf23652a8ac32", "sha256": "e8d544de61608885f67afa71be43d0a36281e9fa407e3ad821aaeb410ac63af8"}, "downloads": -1, "filename": "django-hgadmin-0.4.2.tar.bz2", "has_sig": false, "md5_digest": "2b584241322a6398a66cf23652a8ac32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7075, "upload_time": "2010-06-20T18:11:21", "upload_time_iso_8601": "2010-06-20T18:11:21.941890Z", "url": "https://files.pythonhosted.org/packages/d5/24/6fde2f06b69af9921269d2488cb0a031da6a6632152e14d08f3600912514/django-hgadmin-0.4.2.tar.bz2", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2b584241322a6398a66cf23652a8ac32", "sha256": "e8d544de61608885f67afa71be43d0a36281e9fa407e3ad821aaeb410ac63af8"}, "downloads": -1, "filename": "django-hgadmin-0.4.2.tar.bz2", "has_sig": false, "md5_digest": "2b584241322a6398a66cf23652a8ac32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7075, "upload_time": "2010-06-20T18:11:21", "upload_time_iso_8601": "2010-06-20T18:11:21.941890Z", "url": "https://files.pythonhosted.org/packages/d5/24/6fde2f06b69af9921269d2488cb0a031da6a6632152e14d08f3600912514/django-hgadmin-0.4.2.tar.bz2", "yanked": false}], "timestamp": "Fri May  8 00:35:43 2020"}