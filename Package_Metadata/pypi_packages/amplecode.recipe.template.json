{"info": {"author": "Torgeir Lorange Ostby", "author_email": "torgeilo@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Topic :: Software Development", "Topic :: Software Development :: Code Generators", "Topic :: Software Development :: Pre-processors"], "description": "=========================\namplecode.recipe.template\n=========================\n\namplecode.recipe.template is a Buildout recipe for generating files using Jinja2 templates. The recipe configures a Jinja2 environment, by default relative to the Buildout directory, allowing templates to extend and include other templates relative to the environment. \n\nDownloads are available from pypi: http://pypi.python.org/pypi/amplecode.recipe.template/\n\nBuildout Options\n================\n\n* template-file (required): One or more Jinja2 template file paths. \n* target-file (required): One of more target file paths. The number of files must match the number of template files. \n* base-dir: Base directory of the Jinja2 environment. Template file paths are relative to this directory. Default is the Buildout directory. \n* target-executable: One or more boolean flags (yes|no|true|false|1|0) indicating the executability of the target files. If only one flag is given it is applied to all target files. \n* eggs: Reserved for a list of eggs, conveniently converted into a pkg_resources.WorkingSet when specified \n\nAdditional options are simply forwarded to the templates, and options from all the other parts listed in buildout:parts are made available through ``parts.<part-name>.<option-name>`` and ``parts[<part-name>][<option-name>]``.\n\nLists of Values\n===============\n\nIt is possible for a recipe option to contain one or more values, separated by whitespace. A split filter is available for when you want to iterate over the whitespace separated values in your Jinja2 template::\n\n  #!/bin/sh\n  {% for cmd in cmds|split %}\n     echo \"{{ cmd }}\"\n  {% endfor %}\n\nMinimal Example\n===============\n\nfoo.txt is created from foo.txt.jinja2 without any extra options::\n\n  [buildout]\n  parts = foo\n\n  [foo]\n  recipe = amplecode.recipe.template\n  template-file = foo.txt.jinja2\n  target-file = foo.txt\n\nLarger Example\n==============\n\nfoo.txt is created from myapp/foo.txt.jinja2, bar.sh is created from myapp/bar.sh.jinja2, the second will be executable, and both templates can utilize the additional options specified::\n\n  [buildout]\n  parts = foo\n\n  [foo]\n  recipe = amplecode.recipe.template\n  base-dir = myapp\n  template-file =\n      foo.txt.jinja2\n      bar.sh.jinja2\n  target-file =\n      foo.txt\n      bar.sh\n  target-executable =\n      false\n      true\n  project_name = Another Example\n  author = Me\n\nChangelog\n=========\n\nSee the CHANGELOG file\n\nLicense\n=======\n\nSee the LICENSE file", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/torgeilo/amplecode.recipe.template", "keywords": "zc.buildout recipe template Jinja2", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "amplecode.recipe.template", "package_url": "https://pypi.org/project/amplecode.recipe.template/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/amplecode.recipe.template/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/torgeilo/amplecode.recipe.template"}, "release_url": "https://pypi.org/project/amplecode.recipe.template/1.1/", "requires_dist": null, "requires_python": null, "summary": "Buildout recipe for making files out of Jinja2 templates", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>amplecode.recipe.template is a Buildout recipe for generating files using Jinja2 templates. The recipe configures a Jinja2 environment, by default relative to the Buildout directory, allowing templates to extend and include other templates relative to the environment.</p>\n<p>Downloads are available from pypi: <a href=\"http://pypi.python.org/pypi/amplecode.recipe.template/\" rel=\"nofollow\">http://pypi.python.org/pypi/amplecode.recipe.template/</a></p>\n<div id=\"buildout-options\">\n<h2>Buildout Options</h2>\n<ul>\n<li>template-file (required): One or more Jinja2 template file paths.</li>\n<li>target-file (required): One of more target file paths. The number of files must match the number of template files.</li>\n<li>base-dir: Base directory of the Jinja2 environment. Template file paths are relative to this directory. Default is the Buildout directory.</li>\n<li>target-executable: One or more boolean flags (yes|no|true|false|1|0) indicating the executability of the target files. If only one flag is given it is applied to all target files.</li>\n<li>eggs: Reserved for a list of eggs, conveniently converted into a pkg_resources.WorkingSet when specified</li>\n</ul>\n<p>Additional options are simply forwarded to the templates, and options from all the other parts listed in buildout:parts are made available through <tt><span class=\"pre\">parts.&lt;part-name&gt;.&lt;option-name&gt;</span></tt> and <tt><span class=\"pre\">parts[&lt;part-name&gt;][&lt;option-name&gt;]</span></tt>.</p>\n</div>\n<div id=\"lists-of-values\">\n<h2>Lists of Values</h2>\n<p>It is possible for a recipe option to contain one or more values, separated by whitespace. A split filter is available for when you want to iterate over the whitespace separated values in your Jinja2 template:</p>\n<pre>#!/bin/sh\n{% for cmd in cmds|split %}\n   echo \"{{ cmd }}\"\n{% endfor %}\n</pre>\n</div>\n<div id=\"minimal-example\">\n<h2>Minimal Example</h2>\n<p>foo.txt is created from foo.txt.jinja2 without any extra options:</p>\n<pre>[buildout]\nparts = foo\n\n[foo]\nrecipe = amplecode.recipe.template\ntemplate-file = foo.txt.jinja2\ntarget-file = foo.txt\n</pre>\n</div>\n<div id=\"larger-example\">\n<h2>Larger Example</h2>\n<p>foo.txt is created from myapp/foo.txt.jinja2, bar.sh is created from myapp/bar.sh.jinja2, the second will be executable, and both templates can utilize the additional options specified:</p>\n<pre>[buildout]\nparts = foo\n\n[foo]\nrecipe = amplecode.recipe.template\nbase-dir = myapp\ntemplate-file =\n    foo.txt.jinja2\n    bar.sh.jinja2\ntarget-file =\n    foo.txt\n    bar.sh\ntarget-executable =\n    false\n    true\nproject_name = Another Example\nauthor = Me\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p>See the CHANGELOG file</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>See the LICENSE file</p>\n</div>\n\n          </div>"}, "last_serial": 786263, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4e9b1aaf02058cba0ac7c4ca639723c0", "sha256": "b6328f8bf8ea8ab4f87563897ae21f3e0ac57a3407e52d78b390635c092da110"}, "downloads": -1, "filename": "amplecode.recipe.template-0.1.0-py2.5.egg", "has_sig": false, "md5_digest": "4e9b1aaf02058cba0ac7c4ca639723c0", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 7808, "upload_time": "2008-12-10T20:44:16", "upload_time_iso_8601": "2008-12-10T20:44:16Z", "url": "https://files.pythonhosted.org/packages/d4/e2/ed7df8a4d169d570f48b0c1d59bdd1f9f970690b176691d3807d856630e0/amplecode.recipe.template-0.1.0-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "92b9dcbf69e480b1724fb792e1a27f9f", "sha256": "9e9b19353aa6d5787c2e524a68b79b076228a13fff2269bdf9e885d7579e1442"}, "downloads": -1, "filename": "amplecode.recipe.template-0.1.0.tar.gz", "has_sig": false, "md5_digest": "92b9dcbf69e480b1724fb792e1a27f9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3486, "upload_time": "2008-12-10T20:49:39", "upload_time_iso_8601": "2008-12-10T20:49:39Z", "url": "https://files.pythonhosted.org/packages/10/da/7dddde811cc154578253cba442a01768adda816adaa028b1ca6078de5f4b/amplecode.recipe.template-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9ac4faca5b0c73b87ba084510f5fea60", "sha256": "2973cf6af9fab381094cb29fe3f923636c81339491c6eb466f25403a4ae179e1"}, "downloads": -1, "filename": "amplecode.recipe.template-0.1.1-py2.5.egg", "has_sig": false, "md5_digest": "9ac4faca5b0c73b87ba084510f5fea60", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 7953, "upload_time": "2008-12-11T21:01:25", "upload_time_iso_8601": "2008-12-11T21:01:25Z", "url": "https://files.pythonhosted.org/packages/af/46/1a1086f3dbb2a7e57c7d5d0043b6f4ee4f0ad24eb9cb0d58a76d68bb80b9/amplecode.recipe.template-0.1.1-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "deb4d25388128963c099144ceb87f4a4", "sha256": "212899f3236c43742dec73e8c3e23aac4a66e9c8de5cc5af1601cc76a8ee29f2"}, "downloads": -1, "filename": "amplecode.recipe.template-0.1.1.tar.gz", "has_sig": false, "md5_digest": "deb4d25388128963c099144ceb87f4a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3547, "upload_time": "2008-12-11T21:02:07", "upload_time_iso_8601": "2008-12-11T21:02:07Z", "url": "https://files.pythonhosted.org/packages/cf/06/c37b00fd078cd8f3e11c8ed61e000e6d0a4efc0ec8044483a80e32b90a25/amplecode.recipe.template-0.1.1.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "d3801011f3b654f945b2aed30fb35399", "sha256": "0de9c5a351d3e44139cefd2339cc552065c7e59055591433d0450ef86547b473"}, "downloads": -1, "filename": "amplecode.recipe.template-1.0-py2.5.egg", "has_sig": false, "md5_digest": "d3801011f3b654f945b2aed30fb35399", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 8034, "upload_time": "2009-04-13T12:09:14", "upload_time_iso_8601": "2009-04-13T12:09:14.568857Z", "url": "https://files.pythonhosted.org/packages/81/73/c5f0e55088dc428cb7b2d38187ac68a74b0ac5d8553a250d336682acf8c3/amplecode.recipe.template-1.0-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2240057086ccc0899e871f433bff646d", "sha256": "b1e0fdd7da343bd6295fef22f4927c75f864a4caa105cbf916e13c74cd6eb52c"}, "downloads": -1, "filename": "amplecode.recipe.template-1.0.tar.gz", "has_sig": false, "md5_digest": "2240057086ccc0899e871f433bff646d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3596, "upload_time": "2009-04-13T11:31:29", "upload_time_iso_8601": "2009-04-13T11:31:29.420053Z", "url": "https://files.pythonhosted.org/packages/9a/f9/efd95b62982d8250b2be91785ee1ac3ee065e185fdaca62da0a8896b9f2d/amplecode.recipe.template-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "adf8d767ad5d3a73a02bec7baef0a47e", "sha256": "7fdf301997c1511e265290967bc82ae60a359361c947e83fe4d16d08547e521d"}, "downloads": -1, "filename": "amplecode.recipe.template-1.1.tar.gz", "has_sig": false, "md5_digest": "adf8d767ad5d3a73a02bec7baef0a47e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5774, "upload_time": "2012-02-23T18:52:06", "upload_time_iso_8601": "2012-02-23T18:52:06.551920Z", "url": "https://files.pythonhosted.org/packages/ac/27/7df1ee6e22700b77ab1b59a3d3520e9b3d8ec02ed13379e3e839e44b42ca/amplecode.recipe.template-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "adf8d767ad5d3a73a02bec7baef0a47e", "sha256": "7fdf301997c1511e265290967bc82ae60a359361c947e83fe4d16d08547e521d"}, "downloads": -1, "filename": "amplecode.recipe.template-1.1.tar.gz", "has_sig": false, "md5_digest": "adf8d767ad5d3a73a02bec7baef0a47e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5774, "upload_time": "2012-02-23T18:52:06", "upload_time_iso_8601": "2012-02-23T18:52:06.551920Z", "url": "https://files.pythonhosted.org/packages/ac/27/7df1ee6e22700b77ab1b59a3d3520e9b3d8ec02ed13379e3e839e44b42ca/amplecode.recipe.template-1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:20 2020"}