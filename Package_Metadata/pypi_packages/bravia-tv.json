{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Python Bravia TV\n=====================\n\nPython Bravia TV is a Python library to perform remote communication via http protocol with Sony Bravia TVs 2013 and newer: [list of tvs](http://info.tvsideview.sony.net/en_ww/home_device.html#bravia) For more information on the api used in this library, refer to [BRAVIA Professional Display Knowledge Center](https://pro-bravia.sony.net/develop/index.html)\n\nThis library is a fork of [BraviaRC](https://github.com/aparraga/braviarc) and is primarily being developed with the intent of supporting [home-assistant](https://github.com/home-assistant/home-assistant)\n\nInstallation\n------------\n\n    # Installing from PyPI\n    $ pip install bravia-tv\n    # Installing latest development\n    $ pip install git+https://github.com/dcnielsen90/python-bravia-tv@master\n\nInitializing and Connecting\n===========================\n\n    from bravia_tv import BraviaRC\n\n    ip_address = '192.168.1.2'\n\n    # IP address is required. The active NIC's mac will be acquired dynamically\n    # if mac is left None.\n    braviarc = BraviaRC(ip_address)\n\n\n    # The pin can be a pre-shared key (PSK) or you can\n    # receive a pin from the tv by making the pin 0000\n    pin = '1878'\n\n    # Connect to TV\n    braviarc.connect(pin, 'my_device_id', 'my device name')\n\nCommand Examples\n================\n\n    # Check connection\n    if braviarc.is_connected():\n\n        # Get power status\n        power_status = braviarc.get_power_status()\n        print (power_status)\n\n        # Get playing info\n        playing_content = braviarc.get_playing_info()\n\n        # Print current playing channel\n        print (playing_content.get('title'))\n\n        # Get volume info\n        volume_info = braviarc.get_volume_info()\n\n        # Print current volume\n        print (volume_info.get('volume'))\n\n        # Change channel\n        braviarc.play_content(uri)\n\n        # Get app list\n        app_info = braviarc.load_app_list()\n        print (app_info)\n\n        # Start a given app\n        braviarc.start_app(\"Netflix\")\n\n        # Turn off the TV\n        braviarc.turn_off()\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dcnielsen90/python-bravia-tv.git", "keywords": "", "license": "", "maintainer": "David Nielsen", "maintainer_email": "dncielsen90@gmail.com", "name": "bravia-tv", "package_url": "https://pypi.org/project/bravia-tv/", "platform": "", "project_url": "https://pypi.org/project/bravia-tv/", "project_urls": {"Homepage": "https://github.com/dcnielsen90/python-bravia-tv.git"}, "release_url": "https://pypi.org/project/bravia-tv/1.0.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Python Bravia TV remote control", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python Bravia TV</h1>\n<p>Python Bravia TV is a Python library to perform remote communication via http protocol with Sony Bravia TVs 2013 and newer: <a href=\"http://info.tvsideview.sony.net/en_ww/home_device.html#bravia\" rel=\"nofollow\">list of tvs</a> For more information on the api used in this library, refer to <a href=\"https://pro-bravia.sony.net/develop/index.html\" rel=\"nofollow\">BRAVIA Professional Display Knowledge Center</a></p>\n<p>This library is a fork of <a href=\"https://github.com/aparraga/braviarc\" rel=\"nofollow\">BraviaRC</a> and is primarily being developed with the intent of supporting <a href=\"https://github.com/home-assistant/home-assistant\" rel=\"nofollow\">home-assistant</a></p>\n<h2>Installation</h2>\n<pre><code># Installing from PyPI\n$ pip install bravia-tv\n# Installing latest development\n$ pip install git+https://github.com/dcnielsen90/python-bravia-tv@master\n</code></pre>\n<h1>Initializing and Connecting</h1>\n<pre><code>from bravia_tv import BraviaRC\n\nip_address = '192.168.1.2'\n\n# IP address is required. The active NIC's mac will be acquired dynamically\n# if mac is left None.\nbraviarc = BraviaRC(ip_address)\n\n\n# The pin can be a pre-shared key (PSK) or you can\n# receive a pin from the tv by making the pin 0000\npin = '1878'\n\n# Connect to TV\nbraviarc.connect(pin, 'my_device_id', 'my device name')\n</code></pre>\n<h1>Command Examples</h1>\n<pre><code># Check connection\nif braviarc.is_connected():\n\n    # Get power status\n    power_status = braviarc.get_power_status()\n    print (power_status)\n\n    # Get playing info\n    playing_content = braviarc.get_playing_info()\n\n    # Print current playing channel\n    print (playing_content.get('title'))\n\n    # Get volume info\n    volume_info = braviarc.get_volume_info()\n\n    # Print current volume\n    print (volume_info.get('volume'))\n\n    # Change channel\n    braviarc.play_content(uri)\n\n    # Get app list\n    app_info = braviarc.load_app_list()\n    print (app_info)\n\n    # Start a given app\n    braviarc.start_app(\"Netflix\")\n\n    # Turn off the TV\n    braviarc.turn_off()\n</code></pre>\n\n          </div>"}, "last_serial": 7152516, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "41d2791399089d8c6059c83c0673ecd0", "sha256": "d031b8b8ba1aff3b6517a1394f9eb609583bee2b7c3e9d44bc4d556a98608bec"}, "downloads": -1, "filename": "bravia_tv-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "41d2791399089d8c6059c83c0673ecd0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6940, "upload_time": "2020-01-30T03:14:32", "upload_time_iso_8601": "2020-01-30T03:14:32.461785Z", "url": "https://files.pythonhosted.org/packages/90/6a/e9f7af78ac09514ca4a27d2aaa8577cb5715d0911c83eae0de2ad01239ad/bravia_tv-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9f01f104605314f264fa9f5ad2a791d", "sha256": "c874813c21fe31e09adc0e39988ccd958496b30a31c519c3984ae093e60c1fd6"}, "downloads": -1, "filename": "bravia_tv-1.0.tar.gz", "has_sig": false, "md5_digest": "b9f01f104605314f264fa9f5ad2a791d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5773, "upload_time": "2020-01-30T03:14:34", "upload_time_iso_8601": "2020-01-30T03:14:34.522950Z", "url": "https://files.pythonhosted.org/packages/93/d8/1b46208ca0871e2971c5aa63d6e59d2c58dcc1da5c49ad00f0a6c14a159c/bravia_tv-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "9a59a607bc50c225a1e030537ebc44ff", "sha256": "72a0f1618bb5ee57234e73ff0bc2e109d52d0977f2221b4e9094a03b2de9e8fd"}, "downloads": -1, "filename": "bravia_tv-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9a59a607bc50c225a1e030537ebc44ff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7121, "upload_time": "2020-02-20T18:15:05", "upload_time_iso_8601": "2020-02-20T18:15:05.698719Z", "url": "https://files.pythonhosted.org/packages/f8/02/af9b9dc9f99b127bc39300f30168c9b92505e5b02ca217bec52a9d98545f/bravia_tv-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "444848d50ff2690a45776380e553d4f8", "sha256": "d43a912fe9ab8ff3bfb7387320840a22bd48ec1fd836008f72915560db5e33d8"}, "downloads": -1, "filename": "bravia_tv-1.0.1.tar.gz", "has_sig": false, "md5_digest": "444848d50ff2690a45776380e553d4f8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5955, "upload_time": "2020-02-20T18:15:06", "upload_time_iso_8601": "2020-02-20T18:15:06.571201Z", "url": "https://files.pythonhosted.org/packages/78/5e/f675b6637042b7bde74821bfe0bcb1db36d8088ef3f878dd3dd0580ed56e/bravia_tv-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "af9f177f04c1991349db989f1bc3f8cb", "sha256": "b76bb594299fb8dcba6b71588f1b1f9477136628fa00a913cf988d52ef255dc2"}, "downloads": -1, "filename": "bravia_tv-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "af9f177f04c1991349db989f1bc3f8cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6707, "upload_time": "2020-04-16T00:25:28", "upload_time_iso_8601": "2020-04-16T00:25:28.182014Z", "url": "https://files.pythonhosted.org/packages/9b/69/e61d7dbd7b2977f8cfc3abe4b963867cee2affbd5046414f87d20c252198/bravia_tv-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e154ca4ea6a006b417c572663438bcf9", "sha256": "4ca5e51e6ae796e76828797fc3a517846a866aba7986b1cb370b8639bd0064a5"}, "downloads": -1, "filename": "bravia_tv-1.0.2.tar.gz", "has_sig": false, "md5_digest": "e154ca4ea6a006b417c572663438bcf9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5564, "upload_time": "2020-04-16T00:25:29", "upload_time_iso_8601": "2020-04-16T00:25:29.740284Z", "url": "https://files.pythonhosted.org/packages/a1/39/08cdd53cb0c3bc7bf434d65ac3e3f4b1bcc1e8d47a278ec7dc82571615c5/bravia_tv-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "5078ce3c228d878264738b37e9d9cd73", "sha256": "78351cc1fbc4e44a3fe9c085c133c4b751ffaca1089783afb24cc8c5b60cb5f8"}, "downloads": -1, "filename": "bravia_tv-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5078ce3c228d878264738b37e9d9cd73", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7166, "upload_time": "2020-05-02T17:11:39", "upload_time_iso_8601": "2020-05-02T17:11:39.657971Z", "url": "https://files.pythonhosted.org/packages/f9/4e/3d87cdf813802a5cf09d0a090a18657f4af5462422fd9f464e7dbddded7b/bravia_tv-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "527d6941b1289dea65026cc2b26cb827", "sha256": "0e73cc3c0af0f5a70e99629b3c785d4121a77c45af24b7eb4e6a64e0466e3275"}, "downloads": -1, "filename": "bravia_tv-1.0.3.tar.gz", "has_sig": false, "md5_digest": "527d6941b1289dea65026cc2b26cb827", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5746, "upload_time": "2020-05-02T17:11:40", "upload_time_iso_8601": "2020-05-02T17:11:40.616290Z", "url": "https://files.pythonhosted.org/packages/7b/c3/cbc5223092358ae88cb401b40da04121085126b8410154cc33f3c4f9b355/bravia_tv-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5078ce3c228d878264738b37e9d9cd73", "sha256": "78351cc1fbc4e44a3fe9c085c133c4b751ffaca1089783afb24cc8c5b60cb5f8"}, "downloads": -1, "filename": "bravia_tv-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5078ce3c228d878264738b37e9d9cd73", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7166, "upload_time": "2020-05-02T17:11:39", "upload_time_iso_8601": "2020-05-02T17:11:39.657971Z", "url": "https://files.pythonhosted.org/packages/f9/4e/3d87cdf813802a5cf09d0a090a18657f4af5462422fd9f464e7dbddded7b/bravia_tv-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "527d6941b1289dea65026cc2b26cb827", "sha256": "0e73cc3c0af0f5a70e99629b3c785d4121a77c45af24b7eb4e6a64e0466e3275"}, "downloads": -1, "filename": "bravia_tv-1.0.3.tar.gz", "has_sig": false, "md5_digest": "527d6941b1289dea65026cc2b26cb827", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5746, "upload_time": "2020-05-02T17:11:40", "upload_time_iso_8601": "2020-05-02T17:11:40.616290Z", "url": "https://files.pythonhosted.org/packages/7b/c3/cbc5223092358ae88cb401b40da04121085126b8410154cc33f3c4f9b355/bravia_tv-1.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:22 2020"}