{"info": {"author": "Peter Holloway", "author_email": "holloway.p.r@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Operating System :: POSIX", "Programming Language :: Python :: 3 :: Only", "Topic :: Utilities"], "description": "Enquiries\n=========\n\n``enquiries`` aims to provide a straightforward way to get decisions from your users.\nIt can offer multiple choice, yes/no or free text\n\n.. code-block:: python\n\n    import enquiries\n\n    options = ['thing 1', 'thing 2', 'thing 3']\n    choice = enquiries.choose('Choose one of these options: ', options)\n\n    if enquiries.confirm('Do you want to write something?'):\n        text = enquiries.freetext('Write something interesting: ')\n        print(text)\n\nInput for these questions is fully interactive and prevents any incorrect\nresponses. No more loops checking if the answer matches the question. No more\nmapping the text entered to original objects. Let users choose the objects\ndirectly.\n\n.. image:: https://asciinema.org/a/6OyuQH9H03vSP2gf79f0KwaCO.png\n   :target: https://asciinema.org/a/6OyuQH9H03vSP2gf79f0KwaCO\n\nMultiple choice\n---------------\nAll choices consist of letting users pick on of several items. For ``enquiries`` these\ncan be in any iterable.\n\nUsers can pick one or many of the options offered to them.\n\nSingle Selection\n~~~~~~~~~~~~~~~~\n\nFor single choice, use the ``choose`` method with the list of choices.\n\n.. code-block:: python\n\n    >>> options = ['Thing 1', 'Thing 2']\n    >>> response = enquiries.choose('Pick a thing', options)\n    # interactive prompt\n    >>> print('You chose \"{}\"'.format(response))\n    You chose \"Thing 1\"\n    >>>\n\nThe interactive prompt here appears as list of options you can scroll through\nand select using the return key::\n\n    Pick a thing\n    > Thing 1\n      Thing 2\n      Thing 3\n\nWhere up/down arrow keys will scroll through the options moving the ``>``\nmarker. The currently selected option is also in bold typeface (if the terminal\nsupports it).\n\nMultiple Selections\n~~~~~~~~~~~~~~~~~~~\nFor cases where the user can choose multiple options, the ``multi`` keyword can\nbe used.\n\n.. code-block:: python\n\n    >>> options = ['Thing 1', 'Thing 2', 'Thing 3']\n    >>> response = enquiries.choose('Pick some things', options, multi=True)\n    # interactive prompt\n    >>> print('You chose \"{}\"'.format(response))\n    You chose \"['Thing1', 'Thing 3']\"\n    >>>\n\nThe interactive prompt for multiple choice is similar to that used for single\nchoice but the `>` marker is replaces with \u25c9 and \u25cc to signify chosen or not\nchosen. As before, the arrow keys change the selection and the current line is\nbold. The space key is used to mark an option as selected.::\n\n    pick a thing\n    \u25c9 Thing 1\n    \u25cc Thing 2\n    \u25cc Thing 3\n\nYes/No Confirmation\n-------------------\n\nUsed to get a simple boolean response from users.\n\n.. code-block:: python\n\n    >>> if enquiries.confirm('Do you really want to do the thing')\n    ...     print('Carrying on')\n    ... else:\n    ...     print('Exiting')\n    ...\n    # interactive prompt\n    Carrying on\n    >>>\n\nResults in the prompt below::\n\n    Do you really want to do the thing? [y/N]\n\nThe prompt for confirmation by default accepts ``y``/``n`` keys to choose and\nreturn to accept the choice. Return without choosing accepts the default value\n(usually ``False``). The keys used and the default can be changed as required.\nBy default, the user should choose y/n then hit return but ``single_key`` mode\ncan be used to remove the need to hit return.\n\n\nFreetext\n--------\n``enquiries`` free text offering is offers a slightly enhanced version of the\n``raw_input`` builtin function. It adds multi line support as well as basic\nreadline like controls (``Ctrl-a``, ``Ctrl-w`` etc). The text entry area is also cleared after the text is\naccepted keeping terminal history clean.\n\n.. code-block:: python\n\n    >>> text = enquiries.freetext('Write some stuff')\n    >>> print(text)\n    This is the text you entered\n    on many lines\n    >>>\n\nNew lines in text can be entered using ``Alt``-``Return``.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/facingBackwards/enquiries", "keywords": "cli,prompt,input", "license": "MPLv2", "maintainer": "", "maintainer_email": "", "name": "enquiries", "package_url": "https://pypi.org/project/enquiries/", "platform": "", "project_url": "https://pypi.org/project/enquiries/", "project_urls": {"Homepage": "https://gitlab.com/facingBackwards/enquiries"}, "release_url": "https://pypi.org/project/enquiries/0.1.0/", "requires_dist": ["curtsies"], "requires_python": ">=3", "summary": "Ask simple questions - get simple answers", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>enquiries</tt> aims to provide a straightforward way to get decisions from your users.\nIt can offer multiple choice, yes/no or free text</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">enquiries</span>\n\n<span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'thing 1'</span><span class=\"p\">,</span> <span class=\"s1\">'thing 2'</span><span class=\"p\">,</span> <span class=\"s1\">'thing 3'</span><span class=\"p\">]</span>\n<span class=\"n\">choice</span> <span class=\"o\">=</span> <span class=\"n\">enquiries</span><span class=\"o\">.</span><span class=\"n\">choose</span><span class=\"p\">(</span><span class=\"s1\">'Choose one of these options: '</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"n\">enquiries</span><span class=\"o\">.</span><span class=\"n\">confirm</span><span class=\"p\">(</span><span class=\"s1\">'Do you want to write something?'</span><span class=\"p\">):</span>\n    <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">enquiries</span><span class=\"o\">.</span><span class=\"n\">freetext</span><span class=\"p\">(</span><span class=\"s1\">'Write something interesting: '</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n</pre>\n<p>Input for these questions is fully interactive and prevents any incorrect\nresponses. No more loops checking if the answer matches the question. No more\nmapping the text entered to original objects. Let users choose the objects\ndirectly.</p>\n<a href=\"https://asciinema.org/a/6OyuQH9H03vSP2gf79f0KwaCO\" rel=\"nofollow\"><img alt=\"https://asciinema.org/a/6OyuQH9H03vSP2gf79f0KwaCO.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/84bf8185368836e979ed6397f4cd2f53c3f4618c/68747470733a2f2f61736369696e656d612e6f72672f612f364f7975514839483033765350326766373966304b7761434f2e706e67\"></a>\n<div id=\"multiple-choice\">\n<h2>Multiple choice</h2>\n<p>All choices consist of letting users pick on of several items. For <tt>enquiries</tt> these\ncan be in any iterable.</p>\n<p>Users can pick one or many of the options offered to them.</p>\n<div id=\"single-selection\">\n<h3>Single Selection</h3>\n<p>For single choice, use the <tt>choose</tt> method with the list of choices.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'Thing 1'</span><span class=\"p\">,</span> <span class=\"s1\">'Thing 2'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">enquiries</span><span class=\"o\">.</span><span class=\"n\">choose</span><span class=\"p\">(</span><span class=\"s1\">'Pick a thing'</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">)</span>\n<span class=\"c1\"># interactive prompt</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'You chose \"</span><span class=\"si\">{}</span><span class=\"s1\">\"'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">))</span>\n<span class=\"n\">You</span> <span class=\"n\">chose</span> <span class=\"s2\">\"Thing 1\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<p>The interactive prompt here appears as list of options you can scroll through\nand select using the return key:</p>\n<pre>Pick a thing\n&gt; Thing 1\n  Thing 2\n  Thing 3\n</pre>\n<p>Where up/down arrow keys will scroll through the options moving the <tt>&gt;</tt>\nmarker. The currently selected option is also in bold typeface (if the terminal\nsupports it).</p>\n</div>\n<div id=\"multiple-selections\">\n<h3>Multiple Selections</h3>\n<p>For cases where the user can choose multiple options, the <tt>multi</tt> keyword can\nbe used.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'Thing 1'</span><span class=\"p\">,</span> <span class=\"s1\">'Thing 2'</span><span class=\"p\">,</span> <span class=\"s1\">'Thing 3'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">enquiries</span><span class=\"o\">.</span><span class=\"n\">choose</span><span class=\"p\">(</span><span class=\"s1\">'Pick some things'</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">,</span> <span class=\"n\">multi</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># interactive prompt</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'You chose \"</span><span class=\"si\">{}</span><span class=\"s1\">\"'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">))</span>\n<span class=\"n\">You</span> <span class=\"n\">chose</span> <span class=\"s2\">\"['Thing1', 'Thing 3']\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<p>The interactive prompt for multiple choice is similar to that used for single\nchoice but the <cite>&gt;</cite> marker is replaces with \u25c9 and \u25cc to signify chosen or not\nchosen. As before, the arrow keys change the selection and the current line is\nbold. The space key is used to mark an option as selected.:</p>\n<pre>pick a thing\n\u25c9 Thing 1\n\u25cc Thing 2\n\u25cc Thing 3\n</pre>\n</div>\n</div>\n<div id=\"yes-no-confirmation\">\n<h2>Yes/No Confirmation</h2>\n<p>Used to get a simple boolean response from users.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">if</span> <span class=\"n\">enquiries</span><span class=\"o\">.</span><span class=\"n\">confirm</span><span class=\"p\">(</span><span class=\"s1\">'Do you really want to do the thing'</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Carrying on'</span><span class=\"p\">)</span>\n<span class=\"o\">...</span> <span class=\"k\">else</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Exiting'</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"c1\"># interactive prompt</span>\n<span class=\"n\">Carrying</span> <span class=\"n\">on</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<p>Results in the prompt below:</p>\n<pre>Do you really want to do the thing? [y/N]\n</pre>\n<p>The prompt for confirmation by default accepts <tt>y</tt>/<tt>n</tt> keys to choose and\nreturn to accept the choice. Return without choosing accepts the default value\n(usually <tt>False</tt>). The keys used and the default can be changed as required.\nBy default, the user should choose y/n then hit return but <tt>single_key</tt> mode\ncan be used to remove the need to hit return.</p>\n</div>\n<div id=\"freetext\">\n<h2>Freetext</h2>\n<p><tt>enquiries</tt> free text offering is offers a slightly enhanced version of the\n<tt>raw_input</tt> builtin function. It adds multi line support as well as basic\nreadline like controls (<tt><span class=\"pre\">Ctrl-a</span></tt>, <tt><span class=\"pre\">Ctrl-w</span></tt> etc). The text entry area is also cleared after the text is\naccepted keeping terminal history clean.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">enquiries</span><span class=\"o\">.</span><span class=\"n\">freetext</span><span class=\"p\">(</span><span class=\"s1\">'Write some stuff'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n<span class=\"n\">This</span> <span class=\"ow\">is</span> <span class=\"n\">the</span> <span class=\"n\">text</span> <span class=\"n\">you</span> <span class=\"n\">entered</span>\n<span class=\"n\">on</span> <span class=\"n\">many</span> <span class=\"n\">lines</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<p>New lines in text can be entered using <tt>Alt</tt>-<tt>Return</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 3639131, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "87b1a059a62294857aa2a7947a9493c3", "sha256": "11227e0ff167384bc6494c61e5c5ed045603af2d605230f7cac710898a31785f"}, "downloads": -1, "filename": "enquiries-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "87b1a059a62294857aa2a7947a9493c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 11458, "upload_time": "2018-03-05T00:35:17", "upload_time_iso_8601": "2018-03-05T00:35:17.548193Z", "url": "https://files.pythonhosted.org/packages/e2/4f/7fd508cb98176a9e8b6c10623917ce840f4b63981fe8c17f7917dddabe97/enquiries-0.1.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "87b1a059a62294857aa2a7947a9493c3", "sha256": "11227e0ff167384bc6494c61e5c5ed045603af2d605230f7cac710898a31785f"}, "downloads": -1, "filename": "enquiries-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "87b1a059a62294857aa2a7947a9493c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 11458, "upload_time": "2018-03-05T00:35:17", "upload_time_iso_8601": "2018-03-05T00:35:17.548193Z", "url": "https://files.pythonhosted.org/packages/e2/4f/7fd508cb98176a9e8b6c10623917ce840f4b63981fe8c17f7917dddabe97/enquiries-0.1.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:46:17 2020"}