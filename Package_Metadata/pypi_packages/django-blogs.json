{"info": {"author": "Illia Polosukhin", "author_email": "ilblackdragon@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "django-blogs\n##############\n\n**Django blogs** is module that provide configurable blogs for Django projects.\n\n.. contents::\n\nQuick overview\n==============\n\n- Using this module, you can implement blogging system in your project.\n- This application allows to configure:\n    - One blog (for companies news blog or for personal blog)\n    - Multiblogging system (multiple blogs with different topics, for internet societies or instead of forum as more orginized way to share information)\n    - Blog-per-user system (each user writes in his own blog, useful for companies when each person has it's own blog)\n    - Mix of blog-per-user and blog-per-topic - multiple blogs with specific topic and each user has own blog (Large internet societies, social networks)\n- Post's content is cleaned up to contain only safe html tags. So you can use any JS editor you like (we use http://frol.github.com/prostoEscribir/)\n- Each post can have tease which will be shown at when posts are listed, you can configure how will it be cut and how long it can be.\n- RSS feeds are available for all types of blogs.\n\nRequirements\n==============\n\n- python >= 2.5\n- pip >= 0.8\n- django >= 1.2\n- django-misc (https://github.com/ilblackdragon/django-misc)\n- django-pagination\n- django-tagging\n- django-voter (https://github.com/ilblackdragon/django-voter)\n\nOptional:\n\n- django-threadedcomments (https://github.com/ilblackdragon/django-threadedcomments)\n- django-notification (https://github.com/frol/django-notification)\n\nInstallation\n=============\n\n**Django blogs** should be installed using pip: ::\n\n    pip install git+git://github.com/ilblackdragon/django-blogs.git\n\n\nSetup\n============\n\n- Add 'blog' to INSTALLED_APPS ::\n\n    INSTALLED_APPS += ( 'blog', )\n\n- Add blog urls to urlpatterns in url.py: ::\n\n    from blog.feeds import BlogFeedAll, BlogFeedBlog, BlogFeedUser\n\n    blogs_feed_dict = {\"feed_dict\": {\n        'all': BlogFeedAll,\n        'blog' : BlogFeedBlog,\n        'only': BlogFeedUser,\n    }}\n\n\n    urlpatterns = ('',\n        ...\n        (r'^blogs/', include('blog.urls')),\n        (r'^b/', include('blogs.short_urls')), # For short urls, if you want\n        (r'^feeds/posts/(?P<url>\\w+)/', 'django.contrib.syndication.views.feed', blogs_feed_dict), # Rss feeds\n        ...\n    )\n\n- Copy blog/static/ to your STATIC_URL path\n\nPlease, consider templates and css that are in this application - as example how to create your own design.\nNote, that I use django-themes (https://github.com/ilblackdragon/django-themes) in my templates.\n\n\nConfigure django-blogs\n===============\n\nThere are two main settings:\n\n- BLOG_ENABLE_USER_BLOG - enable user blogs, by default TRUE\n\n- BLOG_ENABLE_BLOGS - enable multiblogging system, by default TRUE\n\nAdditional settings:\n\n- BLOG_SHORT_POST_MAX_LENGTH - limits to post, that can be without tease, by default - 2048 symbols.\n\n- BLOG_CUT_MAX_LENGTH - limits to size of cut added, by default - 2048 symbols.\n\n- BLOG_CUT_TAG and BLOG_CUT_TAG_SYNONYMS are added to help customize tag that is used to cut post on tease and main content. Defaults: '<hr class=\"redactor_cut\">' as main cut tag, and <!--more--> as one synonym.\n\n\nContributing\n============\n\nDevelopment of django-blogs happens at github: https://github.com/ilblackdragon/django-blogs\n\nNote, that I don't like having django-voter as obligatory requirement, and if you have a solution how to make it not to be obligatory but still be able to use it's RatingField as an optional feature - I'm open for suggestion.\n\nLicense\n============\n\nCopyright (C) 2013 Illia Polosukhin\nThis program is licensed under the MIT License (see LICENSE)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/ilblackdragon/django-blogs.git", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-blogs", "package_url": "https://pypi.org/project/django-blogs/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-blogs/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/ilblackdragon/django-blogs.git"}, "release_url": "https://pypi.org/project/django-blogs/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Django blogs - module that provide blogs to your django application.\n- One user blog\n- Multi blogging system\n- Blog per user\n- Safe html in posts\n- System to manage permissions to read\\write\\moderate blogs", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            django-blogs<br>##############<br><br>**Django blogs** is module that provide configurable blogs for Django projects.<br><br>.. contents::<br><br>Quick overview<br>==============<br><br>- Using this module, you can implement blogging system in your project.<br>- This application allows to configure:<br>    - One blog (for companies news blog or for personal blog)<br>    - Multiblogging system (multiple blogs with different topics, for internet societies or instead of forum as more orginized way to share information)<br>    - Blog-per-user system (each user writes in his own blog, useful for companies when each person has it's own blog)<br>    - Mix of blog-per-user and blog-per-topic - multiple blogs with specific topic and each user has own blog (Large internet societies, social networks)<br>- Post's content is cleaned up to contain only safe html tags. So you can use any JS editor you like (we use http://frol.github.com/prostoEscribir/)<br>- Each post can have tease which will be shown at when posts are listed, you can configure how will it be cut and how long it can be.<br>- RSS feeds are available for all types of blogs.<br><br>Requirements<br>==============<br><br>- python &gt;= 2.5<br>- pip &gt;= 0.8<br>- django &gt;= 1.2<br>- django-misc (https://github.com/ilblackdragon/django-misc)<br>- django-pagination<br>- django-tagging<br>- django-voter (https://github.com/ilblackdragon/django-voter)<br><br>Optional:<br><br>- django-threadedcomments (https://github.com/ilblackdragon/django-threadedcomments)<br>- django-notification (https://github.com/frol/django-notification)<br><br>Installation<br>=============<br><br>**Django blogs** should be installed using pip: ::<br><br>    pip install git+git://github.com/ilblackdragon/django-blogs.git<br><br><br>Setup<br>============<br><br>- Add 'blog' to INSTALLED_APPS ::<br><br>    INSTALLED_APPS += ( 'blog', )<br><br>- Add blog urls to urlpatterns in url.py: ::<br><br>    from blog.feeds import BlogFeedAll, BlogFeedBlog, BlogFeedUser<br><br>    blogs_feed_dict = {\"feed_dict\": {<br>        'all': BlogFeedAll,<br>        'blog' : BlogFeedBlog,<br>        'only': BlogFeedUser,<br>    }}<br><br><br>    urlpatterns = ('',<br>        ...<br>        (r'^blogs/', include('blog.urls')),<br>        (r'^b/', include('blogs.short_urls')), # For short urls, if you want<br>        (r'^feeds/posts/(?P&lt;url&gt;\\w+)/', 'django.contrib.syndication.views.feed', blogs_feed_dict), # Rss feeds<br>        ...<br>    )<br><br>- Copy blog/static/ to your STATIC_URL path<br><br>Please, consider templates and css that are in this application - as example how to create your own design.<br>Note, that I use django-themes (https://github.com/ilblackdragon/django-themes) in my templates.<br><br><br>Configure django-blogs<br>===============<br><br>There are two main settings:<br><br>- BLOG_ENABLE_USER_BLOG - enable user blogs, by default TRUE<br><br>- BLOG_ENABLE_BLOGS - enable multiblogging system, by default TRUE<br><br>Additional settings:<br><br>- BLOG_SHORT_POST_MAX_LENGTH - limits to post, that can be without tease, by default - 2048 symbols.<br><br>- BLOG_CUT_MAX_LENGTH - limits to size of cut added, by default - 2048 symbols.<br><br>- BLOG_CUT_TAG and BLOG_CUT_TAG_SYNONYMS are added to help customize tag that is used to cut post on tease and main content. Defaults: '&lt;hr class=\"redactor_cut\"&gt;' as main cut tag, and &lt;!--more--&gt; as one synonym.<br><br><br>Contributing<br>============<br><br>Development of django-blogs happens at github: https://github.com/ilblackdragon/django-blogs<br><br>Note, that I don't like having django-voter as obligatory requirement, and if you have a solution how to make it not to be obligatory but still be able to use it's RatingField as an optional feature - I'm open for suggestion.<br><br>License<br>============<br><br>Copyright (C) 2013 Illia Polosukhin<br>This program is licensed under the MIT License (see LICENSE)\n          </div>"}, "last_serial": 789189, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "b95e897db1dc0784f058d47bbed70bc9", "sha256": "5919493dc3ee7b23b7e206443a26c9c7dde0483e5a0064a6948e96479428c269"}, "downloads": -1, "filename": "django-blogs-0.2.0.zip", "has_sig": false, "md5_digest": "b95e897db1dc0784f058d47bbed70bc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66291, "upload_time": "2012-11-18T07:10:15", "upload_time_iso_8601": "2012-11-18T07:10:15.843320Z", "url": "https://files.pythonhosted.org/packages/9f/9e/38baca0421a027c1c64dad1076522c5d3732fc385fd5f28cce311caf580d/django-blogs-0.2.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b95e897db1dc0784f058d47bbed70bc9", "sha256": "5919493dc3ee7b23b7e206443a26c9c7dde0483e5a0064a6948e96479428c269"}, "downloads": -1, "filename": "django-blogs-0.2.0.zip", "has_sig": false, "md5_digest": "b95e897db1dc0784f058d47bbed70bc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66291, "upload_time": "2012-11-18T07:10:15", "upload_time_iso_8601": "2012-11-18T07:10:15.843320Z", "url": "https://files.pythonhosted.org/packages/9f/9e/38baca0421a027c1c64dad1076522c5d3732fc385fd5f28cce311caf580d/django-blogs-0.2.0.zip", "yanked": false}], "timestamp": "Fri May  8 00:37:24 2020"}