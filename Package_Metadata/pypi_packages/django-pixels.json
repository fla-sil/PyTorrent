{"info": {"author": "Kasun Herath", "author_email": "kasunh01@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7"], "description": "=============================\ndjango-pixels\n=============================\n\nTracking pixels made easy\n\nFeatures\n----------\n* Built-in view to serve a pixel response\n* Compose pixel tracking urls with different type IDs\n* Route tracking requests to functions using type IDs\n\nImplementation Notes with Short Examples\n----------\n\nInstall django-pixels::\n\n    pip install django-pixels\n\n\nMount pixel tracking URL patterns:\n\n.. code-block:: python\n\n    urlpatterns = [\n        ...\n        url(r'^tracker/', include('django_pixels.urls', namespace=\"pixels\")),\n        ...\n    ]\n\n\nGet the general pixel tracking url (This serves a transparent pixel as the response):\n\n.. code-block:: python\n\n    from django.core.urlresolvers import reverse\n    tracking_url = reverse('pixels:pixel') # given you have mounted django_pixels urls with namespace='pixels'\n\nGet the tracking url with no-content(204) response (This serves an empty response with code 204):\n\n.. code-block:: python\n\n    from django.core.urlresolvers import reverse\n    tracking_url = reverse('pixels:pixel-204') # given you have mounted django_pixels urls with namespace='pixels'\n\n\nGenerate a pixel tracking url with type 1:\n\n.. code-block:: python\n\n    from django_pixels import utils\n\n    utils.compose_pixel_url(tracking_url, 1)\n\n\nWrite a function to handle tracking calls with type 1:\n\n.. code-block:: python\n\n    def track_emails(request):\n        # handle tracking with the passed HttpRequest instance\n\n\nRegister the function to handle tracking calls with type 1:\n\n.. code-block:: python\n\n    from django_pixels import handlers\n\n    handlers.register(1, track_emails)\n\n\nOr mark a function to handle tracking calls with type 2:\n\n.. code-block:: python\n\n    from django_pixels import handlers\n\n    @handlers.track(type_id=2)\n    def track_emails(request):\n        # handle tracking with the passed HttpRequest instance\n\n\nSettings\n----------\n* PIXELS_TYPE_PARAMETER_NAME - Change the parameter name used for tracking type\n\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n0.1 (2016-12-10)\n++++++++++++++++++\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kasun/django-pixels", "keywords": "django_pixels", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-pixels", "package_url": "https://pypi.org/project/django-pixels/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-pixels/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/kasun/django-pixels"}, "release_url": "https://pypi.org/project/django-pixels/0.2/", "requires_dist": null, "requires_python": null, "summary": "Tracking pixels made easy", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            =============================<br>django-pixels<br>=============================<br><br>Tracking pixels made easy<br><br>Features<br>----------<br>* Built-in view to serve a pixel response<br>* Compose pixel tracking urls with different type IDs<br>* Route tracking requests to functions using type IDs<br><br>Implementation Notes with Short Examples<br>----------<br><br>Install django-pixels::<br><br>    pip install django-pixels<br><br><br>Mount pixel tracking URL patterns:<br><br>.. code-block:: python<br><br>    urlpatterns = [<br>        ...<br>        url(r'^tracker/', include('django_pixels.urls', namespace=\"pixels\")),<br>        ...<br>    ]<br><br><br>Get the general pixel tracking url (This serves a transparent pixel as the response):<br><br>.. code-block:: python<br><br>    from django.core.urlresolvers import reverse<br>    tracking_url = reverse('pixels:pixel') # given you have mounted django_pixels urls with namespace='pixels'<br><br>Get the tracking url with no-content(204) response (This serves an empty response with code 204):<br><br>.. code-block:: python<br><br>    from django.core.urlresolvers import reverse<br>    tracking_url = reverse('pixels:pixel-204') # given you have mounted django_pixels urls with namespace='pixels'<br><br><br>Generate a pixel tracking url with type 1:<br><br>.. code-block:: python<br><br>    from django_pixels import utils<br><br>    utils.compose_pixel_url(tracking_url, 1)<br><br><br>Write a function to handle tracking calls with type 1:<br><br>.. code-block:: python<br><br>    def track_emails(request):<br>        # handle tracking with the passed HttpRequest instance<br><br><br>Register the function to handle tracking calls with type 1:<br><br>.. code-block:: python<br><br>    from django_pixels import handlers<br><br>    handlers.register(1, track_emails)<br><br><br>Or mark a function to handle tracking calls with type 2:<br><br>.. code-block:: python<br><br>    from django_pixels import handlers<br><br>    @handlers.track(type_id=2)<br>    def track_emails(request):<br>        # handle tracking with the passed HttpRequest instance<br><br><br>Settings<br>----------<br>* PIXELS_TYPE_PARAMETER_NAME - Change the parameter name used for tracking type<br><br><br>Credits<br>-------<br><br>Tools used in rendering this package:<br><br>*  Cookiecutter_<br>*  `cookiecutter-djangopackage`_<br><br>.. _Cookiecutter: https://github.com/audreyr/cookiecutter<br>.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage<br><br><br><br><br>History<br>-------<br><br>0.1 (2016-12-10)<br>++++++++++++++++++<br><br>* First release on PyPI.\n          </div>"}, "last_serial": 2538831, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "19526a13259bb47af1bceccaa417ce54", "sha256": "13c3ab6af195731fa19ca0d477dbe3c2966eba99086dceb1e41030e76c1a8ba2"}, "downloads": -1, "filename": "django_pixels-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "19526a13259bb47af1bceccaa417ce54", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6332, "upload_time": "2016-12-11T17:27:09", "upload_time_iso_8601": "2016-12-11T17:27:09.963995Z", "url": "https://files.pythonhosted.org/packages/9c/5a/361769bf3bd13a5edba7b1eac147162b6c00f0bfd97ca746e900c1a3b127/django_pixels-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1077f14d38d4c8c2ef1eddd662a5aff5", "sha256": "109d8e8e80a2a9d73bd992add50c99bbbdab89581bb0175178b93831a769652b"}, "downloads": -1, "filename": "django-pixels-0.1.tar.gz", "has_sig": false, "md5_digest": "1077f14d38d4c8c2ef1eddd662a5aff5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4636, "upload_time": "2016-12-11T17:27:06", "upload_time_iso_8601": "2016-12-11T17:27:06.418913Z", "url": "https://files.pythonhosted.org/packages/38/f3/a076e74758a7462a22cd74e36d5017f431e26d151fa57b52ba14d30e1303/django-pixels-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "ca4d33e5f71dbc5587caf39daf40eaba", "sha256": "fb469d27351a996a17788944498e1f7e0b244f64699a8154acc718e71995f86a"}, "downloads": -1, "filename": "django_pixels-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ca4d33e5f71dbc5587caf39daf40eaba", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6582, "upload_time": "2016-12-25T17:24:52", "upload_time_iso_8601": "2016-12-25T17:24:52.003242Z", "url": "https://files.pythonhosted.org/packages/cb/04/5ecab13a5e08ef6a07293b31cd1d08df30f12632fa18bdb9526260e5ae92/django_pixels-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbd965015c1197faeac7f7196990c8b2", "sha256": "555f2948a3a40f890eb3b9218e2fce5cd7b51f9a7644f04d914589820c55d146"}, "downloads": -1, "filename": "django-pixels-0.2.tar.gz", "has_sig": false, "md5_digest": "dbd965015c1197faeac7f7196990c8b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4825, "upload_time": "2016-12-25T17:24:48", "upload_time_iso_8601": "2016-12-25T17:24:48.932568Z", "url": "https://files.pythonhosted.org/packages/ef/d5/b82074473ad2b06e7015fe6b4c242f6af96414caa3a3e73140f33611deb6/django-pixels-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ca4d33e5f71dbc5587caf39daf40eaba", "sha256": "fb469d27351a996a17788944498e1f7e0b244f64699a8154acc718e71995f86a"}, "downloads": -1, "filename": "django_pixels-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ca4d33e5f71dbc5587caf39daf40eaba", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6582, "upload_time": "2016-12-25T17:24:52", "upload_time_iso_8601": "2016-12-25T17:24:52.003242Z", "url": "https://files.pythonhosted.org/packages/cb/04/5ecab13a5e08ef6a07293b31cd1d08df30f12632fa18bdb9526260e5ae92/django_pixels-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbd965015c1197faeac7f7196990c8b2", "sha256": "555f2948a3a40f890eb3b9218e2fce5cd7b51f9a7644f04d914589820c55d146"}, "downloads": -1, "filename": "django-pixels-0.2.tar.gz", "has_sig": false, "md5_digest": "dbd965015c1197faeac7f7196990c8b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4825, "upload_time": "2016-12-25T17:24:48", "upload_time_iso_8601": "2016-12-25T17:24:48.932568Z", "url": "https://files.pythonhosted.org/packages/ef/d5/b82074473ad2b06e7015fe6b4c242f6af96414caa3a3e73140f33611deb6/django-pixels-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:59 2020"}