{"info": {"author": "Dave Hall", "author_email": "dave@etianen.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "django-s3-storage\n=================\n\n**django-s3-storage** provides a Django Amazon S3 file storage.\n\n\nFeatures\n--------\n\n- Django file storage for Amazon S3.\n- Django static file storage for Amazon S3.\n- Works in Python 3!\n\n\nInstallation\n------------\n\n1. Install using ``pip install django-s3-storage``.\n2. Add ``'django_s3_storage'`` to your ``INSTALLED_APPS`` setting.\n3. Set your ``DEFAULT_FILE_STORAGE`` setting to ``\"django_s3_storage.storage.S3Storage\"``.\n4. Set your ``STATICFILES_STORAGE`` setting to ``\"django_s3_storage.storage.StaticS3Storage\"`` or ``\"django_s3_storage.storage.ManifestStaticS3Storage\"``.\n5. Configure your Amazon S3 settings (see Available settings, below).\n\n\nAvailable settings\n------------------\n\n.. code:: python\n\n    # The region to connect to when storing files.\n    AWS_REGION = \"us-east-1\"\n\n    # The AWS access key used to access the storage buckets.\n    AWS_ACCESS_KEY_ID = \"\"\n\n    # The AWS secret access key used to access the storage buckets.\n    AWS_SECRET_ACCESS_KEY = \"\"\n\n    # The S3 bucket used to store uploaded files.\n    AWS_S3_BUCKET_NAME = \"\"\n\n    # The S3 calling format to use to connect to the bucket.\n    AWS_S3_CALLING_FORMAT = \"boto.s3.connection.OrdinaryCallingFormat\"\n\n    # A prefix to add to the start of all uploaded files.\n    AWS_S3_KEY_PREFIX = \"\"\n\n    # Whether to enable querystring authentication for uploaded files.\n    AWS_S3_BUCKET_AUTH = True\n\n    # The expire time used to access uploaded files.\n    AWS_S3_MAX_AGE_SECONDS = 60*60  # 1 hour.\n\n    # A custom URL prefix to use for public-facing URLs for uploaded files.\n    AWS_S3_PUBLIC_URL = \"\"\n\n    # Whether to set the storage class of uploaded files to REDUCED_REDUNDANCY.\n    AWS_S3_REDUCED_REDUNDANCY = False\n\n    # The S3 bucket used to store static files.\n    AWS_S3_BUCKET_NAME_STATIC = \"\"\n\n    # The S3 calling format to use to connect to the static bucket.\n    AWS_S3_CALLING_FORMAT_STATIC = \"boto.s3.connection.OrdinaryCallingFormat\"\n\n    # Whether to enable querystring authentication for static files.\n    AWS_S3_BUCKET_AUTH_STATIC = False\n\n    # A prefix to add to the start of all static files.\n    AWS_S3_KEY_PREFIX_STATIC = \"\"\n\n    # The expire time used to access static files.\n    AWS_S3_MAX_AGE_SECONDS_STATIC = 60*60*24*365  # 1 year.\n\n    # A custom URL prefix to use for public-facing URLs for static files.\n    AWS_S3_PUBLIC_URL_STATIC = \"\"\n\n    # Whether to set the storage class of static files to REDUCED_REDUNDANCY.\n    AWS_S3_REDUCED_REDUNDANCY_STATIC = False\n\n\n**Important:** If you change any of the ``AWS_S3_BUCKET_AUTH`` or ``AWS_S3_MAX_AGE_SECONDS`` settings, you will need\nto run ``./manage.py s3_sync_meta path.to.your.storage`` before the changes will be applied to existing media files.\n\n\nHow it works\n------------\n\nBy default, uploaded user files are stored on Amazon S3 using the private access control level. When a URL for the file\nis generated, querystring auth with a timeout of 1 hour is used to secure access to the file.\n\nBy default, static files are stored on Amazon S3 using the public access control level and aggressive caching.\n\nText-based files, such as HTML, XML and JSON, are stored using gzip to save space and improve download\nperformance.\n\nAt the moment, files stored on S3 can only be opened in read-only mode.\n\n\nOptimizing media file caching\n-----------------------------\n\nThe default settings assume that user-uploaded file are private. This means that\nthey are only accessible via S3 authenticated URLs, which is bad for browser caching.\n\nTo make user-uploaded files public, and enable aggressive caching, make the following changes to your ``settings.py``.\n\n.. code:: python\n\n    AWS_S3_BUCKET_AUTH = False\n\n    AWS_S3_MAX_AGE_SECONDS = 60*60*24*365  # 1 year.\n\n**Important:** By making these changes, all user-uploaded files will be public. Ensure they do not contain confidential information.\n\n**Important:** If you change any of the ``AWS_S3_BUCKET_AUTH`` or ``AWS_S3_MAX_AGE_SECONDS`` settings, you will need\nto run ``./manage.py s3_sync_meta path.to.your.storage`` before the changes will be applied to existing media files.\n\n\nManagement commands\n-------------------\n\n`s3_sync_meta`\n~~~~~~~~~~~~~~\n\nSyncronizes the meta information on S3 files.\n\nIf you change any of the ``AWS_S3_BUCKET_AUTH`` or ``AWS_S3_MAX_AGE_SECONDS`` settings, you will need\nto run this command before the changes will be applied to existing media files.\n\nExample usage: ``./manage.py s3_sync_meta django.core.files.storage.default_storage``\n\n\nHow does django-s3-storage compare with django-storages?\n--------------------------------------------------------\n\nThe `django-storages-redux <https://github.com/jschneier/django-storages>`_ fork of django-storages appears to be\nthe most widely used S3 storage backend for Django. It also supports a variety of other storage backends.\n\ndjango-s3-storage provides similar features, but only supports S3. It was originally written to support Python 3\nat a time when the future of django-storages was unclear. It's a small, well-tested and self-contained library\nthat aims to do one thing very well.\n\nThe author of django-s3-storage is not aware of significant differences in functionality with django-storages-redux.\nIf you notice some differences, please file an issue!\n\n\nBuild status\n------------\n\nThis project is built on every push using the Travis-CI service.\n\n.. image:: https://travis-ci.org/etianen/django-s3-storage.svg?branch=master\n    :target: https://travis-ci.org/etianen/django-s3-storage\n\n\nSupport and announcements\n-------------------------\n\nDownloads and bug tracking can be found at the `main project\nwebsite <http://github.com/etianen/django-s3-storage>`_.\n\n\nMore information\n----------------\n\nThe django-s3-storage project was developed by Dave Hall. You can get the code\nfrom the `django-s3-storage project site <http://github.com/etianen/django-s3-storage>`_.\n\nDave Hall is a freelance web developer, based in Cambridge, UK. You can usually\nfind him on the Internet in a number of different places:\n\n-  `Website <http://www.etianen.com/>`_\n-  `Twitter <http://twitter.com/etianen>`_\n-  `Google Profile <http://www.google.com/profiles/david.etianen>`_\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/etianen/django-s3-storage", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-s3-storage-patched", "package_url": "https://pypi.org/project/django-s3-storage-patched/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-s3-storage-patched/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/etianen/django-s3-storage"}, "release_url": "https://pypi.org/project/django-s3-storage-patched/0.9.6.2/", "requires_dist": null, "requires_python": null, "summary": "Django Amazon S3 file storage.", "version": "0.9.6.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>django-s3-storage</strong> provides a Django Amazon S3 file storage.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Django file storage for Amazon S3.</li>\n<li>Django static file storage for Amazon S3.</li>\n<li>Works in Python 3!</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li>Install using <tt>pip install <span class=\"pre\">django-s3-storage</span></tt>.</li>\n<li>Add <tt>'django_s3_storage'</tt> to your <tt>INSTALLED_APPS</tt> setting.</li>\n<li>Set your <tt>DEFAULT_FILE_STORAGE</tt> setting to <tt>\"django_s3_storage.storage.S3Storage\"</tt>.</li>\n<li>Set your <tt>STATICFILES_STORAGE</tt> setting to <tt>\"django_s3_storage.storage.StaticS3Storage\"</tt> or <tt>\"django_s3_storage.storage.ManifestStaticS3Storage\"</tt>.</li>\n<li>Configure your Amazon S3 settings (see Available settings, below).</li>\n</ol>\n</div>\n<div id=\"available-settings\">\n<h2>Available settings</h2>\n<pre><span class=\"c1\"># The region to connect to when storing files.</span>\n<span class=\"n\">AWS_REGION</span> <span class=\"o\">=</span> <span class=\"s2\">\"us-east-1\"</span>\n\n<span class=\"c1\"># The AWS access key used to access the storage buckets.</span>\n<span class=\"n\">AWS_ACCESS_KEY_ID</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n\n<span class=\"c1\"># The AWS secret access key used to access the storage buckets.</span>\n<span class=\"n\">AWS_SECRET_ACCESS_KEY</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n\n<span class=\"c1\"># The S3 bucket used to store uploaded files.</span>\n<span class=\"n\">AWS_S3_BUCKET_NAME</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n\n<span class=\"c1\"># The S3 calling format to use to connect to the bucket.</span>\n<span class=\"n\">AWS_S3_CALLING_FORMAT</span> <span class=\"o\">=</span> <span class=\"s2\">\"boto.s3.connection.OrdinaryCallingFormat\"</span>\n\n<span class=\"c1\"># A prefix to add to the start of all uploaded files.</span>\n<span class=\"n\">AWS_S3_KEY_PREFIX</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n\n<span class=\"c1\"># Whether to enable querystring authentication for uploaded files.</span>\n<span class=\"n\">AWS_S3_BUCKET_AUTH</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n<span class=\"c1\"># The expire time used to access uploaded files.</span>\n<span class=\"n\">AWS_S3_MAX_AGE_SECONDS</span> <span class=\"o\">=</span> <span class=\"mi\">60</span><span class=\"o\">*</span><span class=\"mi\">60</span>  <span class=\"c1\"># 1 hour.</span>\n\n<span class=\"c1\"># A custom URL prefix to use for public-facing URLs for uploaded files.</span>\n<span class=\"n\">AWS_S3_PUBLIC_URL</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n\n<span class=\"c1\"># Whether to set the storage class of uploaded files to REDUCED_REDUNDANCY.</span>\n<span class=\"n\">AWS_S3_REDUCED_REDUNDANCY</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n<span class=\"c1\"># The S3 bucket used to store static files.</span>\n<span class=\"n\">AWS_S3_BUCKET_NAME_STATIC</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n\n<span class=\"c1\"># The S3 calling format to use to connect to the static bucket.</span>\n<span class=\"n\">AWS_S3_CALLING_FORMAT_STATIC</span> <span class=\"o\">=</span> <span class=\"s2\">\"boto.s3.connection.OrdinaryCallingFormat\"</span>\n\n<span class=\"c1\"># Whether to enable querystring authentication for static files.</span>\n<span class=\"n\">AWS_S3_BUCKET_AUTH_STATIC</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n<span class=\"c1\"># A prefix to add to the start of all static files.</span>\n<span class=\"n\">AWS_S3_KEY_PREFIX_STATIC</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n\n<span class=\"c1\"># The expire time used to access static files.</span>\n<span class=\"n\">AWS_S3_MAX_AGE_SECONDS_STATIC</span> <span class=\"o\">=</span> <span class=\"mi\">60</span><span class=\"o\">*</span><span class=\"mi\">60</span><span class=\"o\">*</span><span class=\"mi\">24</span><span class=\"o\">*</span><span class=\"mi\">365</span>  <span class=\"c1\"># 1 year.</span>\n\n<span class=\"c1\"># A custom URL prefix to use for public-facing URLs for static files.</span>\n<span class=\"n\">AWS_S3_PUBLIC_URL_STATIC</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n\n<span class=\"c1\"># Whether to set the storage class of static files to REDUCED_REDUNDANCY.</span>\n<span class=\"n\">AWS_S3_REDUCED_REDUNDANCY_STATIC</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n</pre>\n<p><strong>Important:</strong> If you change any of the <tt>AWS_S3_BUCKET_AUTH</tt> or <tt>AWS_S3_MAX_AGE_SECONDS</tt> settings, you will need\nto run <tt>./manage.py s3_sync_meta path.to.your.storage</tt> before the changes will be applied to existing media files.</p>\n</div>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>By default, uploaded user files are stored on Amazon S3 using the private access control level. When a URL for the file\nis generated, querystring auth with a timeout of 1 hour is used to secure access to the file.</p>\n<p>By default, static files are stored on Amazon S3 using the public access control level and aggressive caching.</p>\n<p>Text-based files, such as HTML, XML and JSON, are stored using gzip to save space and improve download\nperformance.</p>\n<p>At the moment, files stored on S3 can only be opened in read-only mode.</p>\n</div>\n<div id=\"optimizing-media-file-caching\">\n<h2>Optimizing media file caching</h2>\n<p>The default settings assume that user-uploaded file are private. This means that\nthey are only accessible via S3 authenticated URLs, which is bad for browser caching.</p>\n<p>To make user-uploaded files public, and enable aggressive caching, make the following changes to your <tt>settings.py</tt>.</p>\n<pre><span class=\"n\">AWS_S3_BUCKET_AUTH</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n<span class=\"n\">AWS_S3_MAX_AGE_SECONDS</span> <span class=\"o\">=</span> <span class=\"mi\">60</span><span class=\"o\">*</span><span class=\"mi\">60</span><span class=\"o\">*</span><span class=\"mi\">24</span><span class=\"o\">*</span><span class=\"mi\">365</span>  <span class=\"c1\"># 1 year.</span>\n</pre>\n<p><strong>Important:</strong> By making these changes, all user-uploaded files will be public. Ensure they do not contain confidential information.</p>\n<p><strong>Important:</strong> If you change any of the <tt>AWS_S3_BUCKET_AUTH</tt> or <tt>AWS_S3_MAX_AGE_SECONDS</tt> settings, you will need\nto run <tt>./manage.py s3_sync_meta path.to.your.storage</tt> before the changes will be applied to existing media files.</p>\n</div>\n<div id=\"management-commands\">\n<h2>Management commands</h2>\n<h2 id=\"s3-sync-meta\"><span class=\"section-subtitle\"><cite>s3_sync_meta</cite></span></h2>\n<p>Syncronizes the meta information on S3 files.</p>\n<p>If you change any of the <tt>AWS_S3_BUCKET_AUTH</tt> or <tt>AWS_S3_MAX_AGE_SECONDS</tt> settings, you will need\nto run this command before the changes will be applied to existing media files.</p>\n<p>Example usage: <tt>./manage.py s3_sync_meta django.core.files.storage.default_storage</tt></p>\n</div>\n<div id=\"how-does-django-s3-storage-compare-with-django-storages\">\n<h2>How does django-s3-storage compare with django-storages?</h2>\n<p>The <a href=\"https://github.com/jschneier/django-storages\" rel=\"nofollow\">django-storages-redux</a> fork of django-storages appears to be\nthe most widely used S3 storage backend for Django. It also supports a variety of other storage backends.</p>\n<p>django-s3-storage provides similar features, but only supports S3. It was originally written to support Python 3\nat a time when the future of django-storages was unclear. It\u2019s a small, well-tested and self-contained library\nthat aims to do one thing very well.</p>\n<p>The author of django-s3-storage is not aware of significant differences in functionality with django-storages-redux.\nIf you notice some differences, please file an issue!</p>\n</div>\n<div id=\"build-status\">\n<h2>Build status</h2>\n<p>This project is built on every push using the Travis-CI service.</p>\n<a href=\"https://travis-ci.org/etianen/django-s3-storage\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/etianen/django-s3-storage.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3dbc85a3677b85555ade96cd1b677f792ebd0bd4/68747470733a2f2f7472617669732d63692e6f72672f657469616e656e2f646a616e676f2d73332d73746f726167652e7376673f6272616e63683d6d6173746572\"></a>\n</div>\n<div id=\"support-and-announcements\">\n<h2>Support and announcements</h2>\n<p>Downloads and bug tracking can be found at the <a href=\"http://github.com/etianen/django-s3-storage\" rel=\"nofollow\">main project\nwebsite</a>.</p>\n</div>\n<div id=\"more-information\">\n<h2>More information</h2>\n<p>The django-s3-storage project was developed by Dave Hall. You can get the code\nfrom the <a href=\"http://github.com/etianen/django-s3-storage\" rel=\"nofollow\">django-s3-storage project site</a>.</p>\n<p>Dave Hall is a freelance web developer, based in Cambridge, UK. You can usually\nfind him on the Internet in a number of different places:</p>\n<ul>\n<li><a href=\"http://www.etianen.com/\" rel=\"nofollow\">Website</a></li>\n<li><a href=\"http://twitter.com/etianen\" rel=\"nofollow\">Twitter</a></li>\n<li><a href=\"http://www.google.com/profiles/david.etianen\" rel=\"nofollow\">Google Profile</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1859569, "releases": {"0.9.6": [{"comment_text": "", "digests": {"md5": "86ba858b168d0e6cd3785d008593fe7b", "sha256": "da05ad6361e4ac9499b5025556ed9e10cf343445011ed38b4de5b19b1ec9dff7"}, "downloads": -1, "filename": "django_s3_storage_patched-0.9.6-py3.4.egg", "has_sig": false, "md5_digest": "86ba858b168d0e6cd3785d008593fe7b", "packagetype": "bdist_egg", "python_version": "3.4", "requires_python": null, "size": 48075, "upload_time": "2015-11-24T08:37:34", "upload_time_iso_8601": "2015-11-24T08:37:34.434382Z", "url": "https://files.pythonhosted.org/packages/0c/9f/168b87efa12cea6958b93de82441cbc6b8e65382d0d752c608b591a2b6d6/django_s3_storage_patched-0.9.6-py3.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "42667fe5e7eaccacf5e83e46546845de", "sha256": "c4eec19c31f89d5e68cdaac620cd4ea77596869b474335ecd26bf26ef1864d07"}, "downloads": -1, "filename": "django-s3-storage-patched-0.9.6.tar.gz", "has_sig": false, "md5_digest": "42667fe5e7eaccacf5e83e46546845de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11207, "upload_time": "2015-11-24T08:37:44", "upload_time_iso_8601": "2015-11-24T08:37:44.710380Z", "url": "https://files.pythonhosted.org/packages/3e/bf/e03d1aa698ee3e34adbef64e3fa93d0eeef165cc6a1143aa48937792f08c/django-s3-storage-patched-0.9.6.tar.gz", "yanked": false}], "0.9.6.2": [{"comment_text": "", "digests": {"md5": "51db09fc82f637f540fc6c4dbbb6cb05", "sha256": "489f83503d7b9d412055a4b7020441a756a3420587f13dafced5b94e8b8a17ff"}, "downloads": -1, "filename": "django_s3_storage_patched-0.9.6.2-py3.4.egg", "has_sig": false, "md5_digest": "51db09fc82f637f540fc6c4dbbb6cb05", "packagetype": "bdist_egg", "python_version": "3.4", "requires_python": null, "size": 48096, "upload_time": "2015-11-24T10:34:57", "upload_time_iso_8601": "2015-11-24T10:34:57.907823Z", "url": "https://files.pythonhosted.org/packages/47/0e/8b0b9c66e98decb34437a25b1decda2e664648574766bbaa96682a2e5ab8/django_s3_storage_patched-0.9.6.2-py3.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "04f8bf4a9afccb57b9e2c586c61b9911", "sha256": "c148549f53300c88d60c54a4bec81248b1d05254a993aa9f5382de62bc826e84"}, "downloads": -1, "filename": "django-s3-storage-patched-0.9.6.2.tar.gz", "has_sig": false, "md5_digest": "04f8bf4a9afccb57b9e2c586c61b9911", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11223, "upload_time": "2015-11-24T10:35:13", "upload_time_iso_8601": "2015-11-24T10:35:13.560528Z", "url": "https://files.pythonhosted.org/packages/1e/11/1f0ef01d0ed1f1ccac9c87ce59294c7498f3cbfa92e1dee6c9eea82c7555/django-s3-storage-patched-0.9.6.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "51db09fc82f637f540fc6c4dbbb6cb05", "sha256": "489f83503d7b9d412055a4b7020441a756a3420587f13dafced5b94e8b8a17ff"}, "downloads": -1, "filename": "django_s3_storage_patched-0.9.6.2-py3.4.egg", "has_sig": false, "md5_digest": "51db09fc82f637f540fc6c4dbbb6cb05", "packagetype": "bdist_egg", "python_version": "3.4", "requires_python": null, "size": 48096, "upload_time": "2015-11-24T10:34:57", "upload_time_iso_8601": "2015-11-24T10:34:57.907823Z", "url": "https://files.pythonhosted.org/packages/47/0e/8b0b9c66e98decb34437a25b1decda2e664648574766bbaa96682a2e5ab8/django_s3_storage_patched-0.9.6.2-py3.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "04f8bf4a9afccb57b9e2c586c61b9911", "sha256": "c148549f53300c88d60c54a4bec81248b1d05254a993aa9f5382de62bc826e84"}, "downloads": -1, "filename": "django-s3-storage-patched-0.9.6.2.tar.gz", "has_sig": false, "md5_digest": "04f8bf4a9afccb57b9e2c586c61b9911", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11223, "upload_time": "2015-11-24T10:35:13", "upload_time_iso_8601": "2015-11-24T10:35:13.560528Z", "url": "https://files.pythonhosted.org/packages/1e/11/1f0ef01d0ed1f1ccac9c87ce59294c7498f3cbfa92e1dee6c9eea82c7555/django-s3-storage-patched-0.9.6.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:50 2020"}