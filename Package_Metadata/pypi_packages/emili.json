{"info": {"author": "David Garcia Garzon", "author_email": "voki@canvoki.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Communications :: Email :: Email Clients (MUA)", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Emili\n\nSimple interface for sending mails. Turns input formats\nsuch as Markdown or console outputs using ANSI colors\ninto nice dual plaintext/html messages.\n\n\n## Module usage\n\n\n```python\nimport emili\n\ncontent = \"\"\"\n# this is a title\n\nRead **this** is very _important_!!\n\n\"\"\"\n\nemili.sendmail(\n    from  = \"me@acme.cat\",\n    to = [ \"abe@acme.cat\", \"bill@acme.cat\" ],\n    bcc = [ \"me@acme.cat\" ],\n    subject = \"About this email\"\n    md = content,\n    attachments = [ 'onefile.pdf' ],\n\tconfig = '../config.py',\n    )\n```\n\n\nRight now a config.py file is required containing the configuration options\nfor the SMTP connection in a dictionary named `smtp`:\n\n```python\nsmtp=dict(\n    host='smtp.acme.cat',\n    port=465,\n    user='roadrunner@acme.cat',\n    password='mecmec',\n)\n```\n\n\n## Command line usage\n\n```\nusage: emili.py [-h] -f SENDER -s SUBJECT -t recipient [--body TEXT]\n                [--bodyfile BODYFILE] [-C CONFIG.PY] [-c CC] [-b BCC]\n                [-r REPLYTO] [--format FORMAT] [--style CSSFILE]\n                [--template TEMPLATE] [--dump OUTPUTFILE.eml]\n                [FILE [FILE ...]]\n\nSends an email.\n\npositional arguments:\n  FILE                  File to attach\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f SENDER, --from SENDER\n                        Message sender ('From:' header)\n  -s SUBJECT, --subject SUBJECT\n                        Message subject ('Subject:' header)\n  -t recipient, --to recipient\n                        Message recipient ('To:' header) (multiple)\n  --body TEXT           Message body (defaults to stdin)\n  --bodyfile BODYFILE   File containing the message body (defaults to stdin)\n  -C CONFIG.PY, --config CONFIG.PY\n                        Python Module with smtp configuration defined.\n  -c CC, --cc CC        Message copy recipient ('CC:' header) (multiple)\n  -b BCC, --bcc BCC     Message hidden copy recipient ('BCC:' header)\n                        (multiple), other recipients won't see this header\n  -r REPLYTO, --replyto REPLYTO\n                        Default address to reply at ('Reply-To:' header)\n                        (multiple)\n  --format FORMAT       Format for the body. 'md' takes markdown and generates\n                        both html and text. 'ansi' does the same, turning ANSI\n                        color codes in html or stripping them for text.\n  --style CSSFILE       Style sheet for the html output, (multiple)\n  --template TEMPLATE   Alternative template for the html body.\n  --dump OUTPUTFILE.eml\n                        Instead of sending, dump the email into a file\n```\n\n## reportrun\n\n```\nusage: reportrun [-h] -s SUBJECT -t RECIPIENT [-f SENDER] [-C CONFIG.PY]\n                [FILE [FILE ...]] -- COMMAND [COMMAND_ARG ...]\n\nreportrun wraps the execution of a command and sends an email\nwhenever the command fails. The mail sending is processed by\nemili so that ansi codes and spacing are shown properly.\n\npositional arguments:\n  FILE                  File to attach\n  COMMAND               Command to run\n  COMMAND_ARG           Argument for COMMAND\n\noptional arguments:\n  -f SENDER, --from SENDER\n                        Message sender ('From:' header)\n  -s SUBJECT, --subject SUBJECT\n                        Message subject ('Subject:' header)\n  -t recipient, --to recipient\n                        Message recipient ('To:' header) (multiple)\n  -C CONFIG.PY, --config CONFIG.PY\n                        Python Module with smtp configuration defined.\n  -a, --always\n                        Sends even if the command does not fail.\n  --\n                        Marks the start of the command to execute.\n```\n\n## Changelog\n\n### 1.6 (2019-10-09)\n\n- Fix: reportrun ignored endlines\n- reportrun accepts attatchment\n- reportrun --help option and documented in README\n\n### 1.5 (2018-10-15)\n\n- Added `reportrun` script\n\n### 1.4 (2017-07-02)\n\n- Fix: dump does not require configuration\n\n### 1.3 (2016-11-02)\n\n- `--dump` option to dump the resulting email as file instead of sending it\n- Fix: Better processing addresses in the format `Me <me@here.org>`\n- Fix: Do not take the full path as attachment name\n- `activate_wrapper.sh` moved to `somenergia-utils` repo\n\n### 1.2 (2016-03-28)\n\n- Option `-c`/`--config` to explicit configuration file\n- Added wrapper `execute_send_mail.sh`\n- Added wrapper `activate_wrapper.sh`\n\n### 1.1 (2016-01-12)\n\n- Available on PyPi\n\n### 1.0 (2016-01-12)\n\n- First version", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Som-Energia/emili", "keywords": "", "license": "GNU General Public License v3 or later (GPLv3+)", "maintainer": "", "maintainer_email": "", "name": "emili", "package_url": "https://pypi.org/project/emili/", "platform": "", "project_url": "https://pypi.org/project/emili/", "project_urls": {"Homepage": "https://github.com/Som-Energia/emili"}, "release_url": "https://pypi.org/project/emili/1.6/", "requires_dist": null, "requires_python": "", "summary": "Mail sending Python/CLI interface using markdown or ANSI codes based content", "version": "1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Emili</h1>\n<p>Simple interface for sending mails. Turns input formats\nsuch as Markdown or console outputs using ANSI colors\ninto nice dual plaintext/html messages.</p>\n<h2>Module usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">emili</span>\n\n<span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\"># this is a title</span>\n\n<span class=\"s2\">Read **this** is very _important_!!</span>\n\n<span class=\"s2\">\"\"\"</span>\n\n<span class=\"n\">emili</span><span class=\"o\">.</span><span class=\"n\">sendmail</span><span class=\"p\">(</span>\n    <span class=\"kn\">from</span>  <span class=\"o\">=</span> <span class=\"s2\">\"me@acme.cat\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"s2\">\"abe@acme.cat\"</span><span class=\"p\">,</span> <span class=\"s2\">\"bill@acme.cat\"</span> <span class=\"p\">],</span>\n    <span class=\"n\">bcc</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"s2\">\"me@acme.cat\"</span> <span class=\"p\">],</span>\n    <span class=\"n\">subject</span> <span class=\"o\">=</span> <span class=\"s2\">\"About this email\"</span>\n    <span class=\"n\">md</span> <span class=\"o\">=</span> <span class=\"n\">content</span><span class=\"p\">,</span>\n    <span class=\"n\">attachments</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"s1\">'onefile.pdf'</span> <span class=\"p\">],</span>\n\t<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"s1\">'../config.py'</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>Right now a config.py file is required containing the configuration options\nfor the SMTP connection in a dictionary named <code>smtp</code>:</p>\n<pre><span class=\"n\">smtp</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span>\n    <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'smtp.acme.cat'</span><span class=\"p\">,</span>\n    <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">465</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"s1\">'roadrunner@acme.cat'</span><span class=\"p\">,</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'mecmec'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Command line usage</h2>\n<pre><code>usage: emili.py [-h] -f SENDER -s SUBJECT -t recipient [--body TEXT]\n                [--bodyfile BODYFILE] [-C CONFIG.PY] [-c CC] [-b BCC]\n                [-r REPLYTO] [--format FORMAT] [--style CSSFILE]\n                [--template TEMPLATE] [--dump OUTPUTFILE.eml]\n                [FILE [FILE ...]]\n\nSends an email.\n\npositional arguments:\n  FILE                  File to attach\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f SENDER, --from SENDER\n                        Message sender ('From:' header)\n  -s SUBJECT, --subject SUBJECT\n                        Message subject ('Subject:' header)\n  -t recipient, --to recipient\n                        Message recipient ('To:' header) (multiple)\n  --body TEXT           Message body (defaults to stdin)\n  --bodyfile BODYFILE   File containing the message body (defaults to stdin)\n  -C CONFIG.PY, --config CONFIG.PY\n                        Python Module with smtp configuration defined.\n  -c CC, --cc CC        Message copy recipient ('CC:' header) (multiple)\n  -b BCC, --bcc BCC     Message hidden copy recipient ('BCC:' header)\n                        (multiple), other recipients won't see this header\n  -r REPLYTO, --replyto REPLYTO\n                        Default address to reply at ('Reply-To:' header)\n                        (multiple)\n  --format FORMAT       Format for the body. 'md' takes markdown and generates\n                        both html and text. 'ansi' does the same, turning ANSI\n                        color codes in html or stripping them for text.\n  --style CSSFILE       Style sheet for the html output, (multiple)\n  --template TEMPLATE   Alternative template for the html body.\n  --dump OUTPUTFILE.eml\n                        Instead of sending, dump the email into a file\n</code></pre>\n<h2>reportrun</h2>\n<pre><code>usage: reportrun [-h] -s SUBJECT -t RECIPIENT [-f SENDER] [-C CONFIG.PY]\n                [FILE [FILE ...]] -- COMMAND [COMMAND_ARG ...]\n\nreportrun wraps the execution of a command and sends an email\nwhenever the command fails. The mail sending is processed by\nemili so that ansi codes and spacing are shown properly.\n\npositional arguments:\n  FILE                  File to attach\n  COMMAND               Command to run\n  COMMAND_ARG           Argument for COMMAND\n\noptional arguments:\n  -f SENDER, --from SENDER\n                        Message sender ('From:' header)\n  -s SUBJECT, --subject SUBJECT\n                        Message subject ('Subject:' header)\n  -t recipient, --to recipient\n                        Message recipient ('To:' header) (multiple)\n  -C CONFIG.PY, --config CONFIG.PY\n                        Python Module with smtp configuration defined.\n  -a, --always\n                        Sends even if the command does not fail.\n  --\n                        Marks the start of the command to execute.\n</code></pre>\n<h2>Changelog</h2>\n<h3>1.6 (2019-10-09)</h3>\n<ul>\n<li>Fix: reportrun ignored endlines</li>\n<li>reportrun accepts attatchment</li>\n<li>reportrun --help option and documented in README</li>\n</ul>\n<h3>1.5 (2018-10-15)</h3>\n<ul>\n<li>Added <code>reportrun</code> script</li>\n</ul>\n<h3>1.4 (2017-07-02)</h3>\n<ul>\n<li>Fix: dump does not require configuration</li>\n</ul>\n<h3>1.3 (2016-11-02)</h3>\n<ul>\n<li><code>--dump</code> option to dump the resulting email as file instead of sending it</li>\n<li>Fix: Better processing addresses in the format <code>Me &lt;me@here.org&gt;</code></li>\n<li>Fix: Do not take the full path as attachment name</li>\n<li><code>activate_wrapper.sh</code> moved to <code>somenergia-utils</code> repo</li>\n</ul>\n<h3>1.2 (2016-03-28)</h3>\n<ul>\n<li>Option <code>-c</code>/<code>--config</code> to explicit configuration file</li>\n<li>Added wrapper <code>execute_send_mail.sh</code></li>\n<li>Added wrapper <code>activate_wrapper.sh</code></li>\n</ul>\n<h3>1.1 (2016-01-12)</h3>\n<ul>\n<li>Available on PyPi</li>\n</ul>\n<h3>1.0 (2016-01-12)</h3>\n<ul>\n<li>First version</li>\n</ul>\n\n          </div>"}, "last_serial": 6105306, "releases": {"1.0": [], "1.1": [{"comment_text": "", "digests": {"md5": "96504c4bc3cd3e084998026c75665677", "sha256": "7f99106fff336fc1c34b8ed03d1e8855916932c96f6ff14214f71e7311802f94"}, "downloads": -1, "filename": "emili-1.1.tar.gz", "has_sig": false, "md5_digest": "96504c4bc3cd3e084998026c75665677", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4314, "upload_time": "2016-01-12T17:26:52", "upload_time_iso_8601": "2016-01-12T17:26:52.734835Z", "url": "https://files.pythonhosted.org/packages/39/d8/8eaee237c94b216d3fcb8bd62dcf40120cdee84ef97eb6bc47fbb9de3aac/emili-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "92668f94f5ad3b3154ca4985be20e64b", "sha256": "b644953eb4e5fc898a1697250485134aa0bb53ea7f230bffe1eae4c1b9818486"}, "downloads": -1, "filename": "emili-1.2.tar.gz", "has_sig": false, "md5_digest": "92668f94f5ad3b3154ca4985be20e64b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5145, "upload_time": "2016-03-28T17:38:03", "upload_time_iso_8601": "2016-03-28T17:38:03.221193Z", "url": "https://files.pythonhosted.org/packages/0e/d7/196fc0d78ffcaea3e6c75e0c41888a6664b9d2505139899d83b48906e8d5/emili-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "873001148ecd9746abcb4aaec078fae8", "sha256": "bfbe1e4790aad9f6c9938b0f058903c9b4ba4bc2422f7e4fd7e41343418b9583"}, "downloads": -1, "filename": "emili-1.3.tar.gz", "has_sig": false, "md5_digest": "873001148ecd9746abcb4aaec078fae8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5269, "upload_time": "2016-11-02T09:36:44", "upload_time_iso_8601": "2016-11-02T09:36:44.085389Z", "url": "https://files.pythonhosted.org/packages/66/e4/a67db4ea5486d9ee6526fd6c8cc6eaebe42d21f6f74feb71c6a3ddc42ac5/emili-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "da07a7683b550d87ba58b82456767e8f", "sha256": "4038b206c3dd16bcb2c5a3f9325fa9acf1ed0bb37ee65c0f4053b0c9a4d876d6"}, "downloads": -1, "filename": "emili-1.4.tar.gz", "has_sig": false, "md5_digest": "da07a7683b550d87ba58b82456767e8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5262, "upload_time": "2017-07-02T13:51:09", "upload_time_iso_8601": "2017-07-02T13:51:09.282233Z", "url": "https://files.pythonhosted.org/packages/fd/92/bbc62fed8a41acef1355b8738edc3247c430ff03816a56e707819b44ae1e/emili-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "2a56b7e2e185b3388fe0dd1923c2ed52", "sha256": "be6925911edc5aa79c79d6faf06620594595e12c20b0cb2a2e28e3015eecf098"}, "downloads": -1, "filename": "emili-1.5.tar.gz", "has_sig": false, "md5_digest": "2a56b7e2e185b3388fe0dd1923c2ed52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5944, "upload_time": "2019-04-03T23:09:35", "upload_time_iso_8601": "2019-04-03T23:09:35.288796Z", "url": "https://files.pythonhosted.org/packages/d9/c6/4edb3c498127a59e2f534c05e73f8fa40a1d90e8f2f4e7f95a144cd753ce/emili-1.5.tar.gz", "yanked": false}], "1.6": [{"comment_text": "", "digests": {"md5": "d3bfb59941a72e8c05d5bed74af1eb37", "sha256": "4cc25aa57ef4f7f677605d586ebc7c20357975bb03b472fe9c105b73a7e69e3d"}, "downloads": -1, "filename": "emili-1.6.tar.gz", "has_sig": false, "md5_digest": "d3bfb59941a72e8c05d5bed74af1eb37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6724, "upload_time": "2019-11-09T10:13:56", "upload_time_iso_8601": "2019-11-09T10:13:56.916390Z", "url": "https://files.pythonhosted.org/packages/d3/b0/1ea72d154b6fd4e299fea958b1704c9721c845d7eb67d02134f6ab9dd801/emili-1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d3bfb59941a72e8c05d5bed74af1eb37", "sha256": "4cc25aa57ef4f7f677605d586ebc7c20357975bb03b472fe9c105b73a7e69e3d"}, "downloads": -1, "filename": "emili-1.6.tar.gz", "has_sig": false, "md5_digest": "d3bfb59941a72e8c05d5bed74af1eb37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6724, "upload_time": "2019-11-09T10:13:56", "upload_time_iso_8601": "2019-11-09T10:13:56.916390Z", "url": "https://files.pythonhosted.org/packages/d3/b0/1ea72d154b6fd4e299fea958b1704c9721c845d7eb67d02134f6ab9dd801/emili-1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:36 2020"}