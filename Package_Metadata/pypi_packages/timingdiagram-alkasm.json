{"info": {"author": "Alexander Reynolds", "author_email": "ar@reynoldsalexander.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "<img src=\"https://raw.githubusercontent.com/alkasm/timingdiagram/master/timingdiagram.svg?sanitize=true\" alt=\"Visual timing diagram example\" width=\"100%\">\n\n# timingdiagram\n\nWork with discrete state changes over time.\n\n* Reduce data to state changes\n* Compare diagrams over time\n* Query state by time\n* Use any ordered index\n\n## Install\n\nFrom PyPI with `pip`:\n\n```sh\npip install timingdiagram-alkasm\n```\n\nFrom source:\n\n```sh\ngit clone https://github.com/alkasm/timingdiagram\ncd timingdiagram\npip install .\n```\n\nNote that you must have `pip >= 19.0` installed in your environment to install from source, since this project uses the `pyproject.toml` file defined in [PEP-0517](https://www.python.org/dev/peps/pep-0517/) instead of `setup.py`. More from PyPA [here](https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support).\n\n\n## Try it out\n\n```python\n>>> from timingdiagram import TimingDiagram\n>>> d1 = TimingDiagram(enumerate([False, False, False, True, True, False, True]))\n>>> d2 = TimingDiagram(enumerate([False, True, False, False, True, False, False]))\n>>> d1 | d2\nTimingDiagram([(0, False), (1, True), (2, False), (3, True), (5, False), (6, True)])\n```\n\n## Example\n\nSuppose you had a log of users signing in and out of a service, and the log included the time, user id, and action the user took. We can view each user's login/logout history as a timing diagram, and simply `&` them all together to see when all users were logged in at the same time:\n\n```python\nlog = \"\"\"2019-08-27T19:38:50 001768bf-af44-46a6-890d-048f2c50aa29 login\n2019-08-27T19:51:11 084c07f0-dd0d-46a3-8eb5-1d4cb13756a4 logout\n2019-08-27T19:55:25 001768bf-af44-46a6-890d-048f2c50aa29 logout\n2019-08-27T19:58:37 001768bf-af44-46a6-890d-048f2c50aa29 login\n2019-08-27T20:17:21 a8118353-eb81-4ce0-8d10-6f3f9de6d7ca login\n2019-08-27T20:45:19 001768bf-af44-46a6-890d-048f2c50aa29 logout\n2019-08-27T21:01:45 001768bf-af44-46a6-890d-048f2c50aa29 login\n2019-08-27T21:18:09 001768bf-af44-46a6-890d-048f2c50aa29 logout\n2019-08-27T22:02:37 084c07f0-dd0d-46a3-8eb5-1d4cb13756a4 login\n2019-08-27T22:55:54 001768bf-af44-46a6-890d-048f2c50aa29 login\n2019-08-27T23:08:07 001768bf-af44-46a6-890d-048f2c50aa29 logout\n2019-08-27T23:23:04 a8118353-eb81-4ce0-8d10-6f3f9de6d7ca logout\n2019-08-27T23:47:50 001768bf-af44-46a6-890d-048f2c50aa29 login\n2019-08-27T23:55:10 084c07f0-dd0d-46a3-8eb5-1d4cb13756a4 logout\n2019-08-27T23:56:33 001768bf-af44-46a6-890d-048f2c50aa29 logout\"\"\".split(\"\\n\")\n\n\nfrom collections import defaultdict\nfrom functools import reduce\nfrom timingdiagram import TimingDiagram\n\n\nsessions = defaultdict(list)\nfor row in log:\n    ts, userid, action = row.split()\n    sessions[userid].append((ts, action == \"login\"))\n\nall_logged_in = reduce(lambda d1, d2: d1 & d2, map(TimingDiagram, sessions.values()))\n```\n\nFrom just a few lines of code, we get a timing diagram corresponding to when all the users were logged in:\n\n```\nTimingDiagram([\n  ('2019-08-27T19:38:50', False), \n  ('2019-08-27T22:55:54', True), \n  ('2019-08-27T23:08:07', False), \n  ('2019-08-27T23:56:33', False)\n ])\n ```\n \nSo all users were logged in between `22:55:54` and `23:08:07` on `2019-08-27`. The additional states at the beginning and end signify the start and end times of the logs.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alkasm/timingdiagram", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "timingdiagram-alkasm", "package_url": "https://pypi.org/project/timingdiagram-alkasm/", "platform": "", "project_url": "https://pypi.org/project/timingdiagram-alkasm/", "project_urls": {"Homepage": "https://github.com/alkasm/timingdiagram"}, "release_url": "https://pypi.org/project/timingdiagram-alkasm/0.4.1/", "requires_dist": ["sortedcollections"], "requires_python": ">=3.6", "summary": "Temporal boolean algebra.", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"Visual timing diagram example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0aeab9a8353befe015d777aebc60211c6503ce9f/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616c6b61736d2f74696d696e676469616772616d2f6d61737465722f74696d696e676469616772616d2e7376673f73616e6974697a653d74727565\" width=\"100%\">\n<h1>timingdiagram</h1>\n<p>Work with discrete state changes over time.</p>\n<ul>\n<li>Reduce data to state changes</li>\n<li>Compare diagrams over time</li>\n<li>Query state by time</li>\n<li>Use any ordered index</li>\n</ul>\n<h2>Install</h2>\n<p>From PyPI with <code>pip</code>:</p>\n<pre>pip install timingdiagram-alkasm\n</pre>\n<p>From source:</p>\n<pre>git clone https://github.com/alkasm/timingdiagram\n<span class=\"nb\">cd</span> timingdiagram\npip install .\n</pre>\n<p>Note that you must have <code>pip &gt;= 19.0</code> installed in your environment to install from source, since this project uses the <code>pyproject.toml</code> file defined in <a href=\"https://www.python.org/dev/peps/pep-0517/\" rel=\"nofollow\">PEP-0517</a> instead of <code>setup.py</code>. More from PyPA <a href=\"https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support\" rel=\"nofollow\">here</a>.</p>\n<h2>Try it out</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">timingdiagram</span> <span class=\"kn\">import</span> <span class=\"n\">TimingDiagram</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d1</span> <span class=\"o\">=</span> <span class=\"n\">TimingDiagram</span><span class=\"p\">(</span><span class=\"nb\">enumerate</span><span class=\"p\">([</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">]))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d2</span> <span class=\"o\">=</span> <span class=\"n\">TimingDiagram</span><span class=\"p\">(</span><span class=\"nb\">enumerate</span><span class=\"p\">([</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">]))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d1</span> <span class=\"o\">|</span> <span class=\"n\">d2</span>\n<span class=\"n\">TimingDiagram</span><span class=\"p\">([(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)])</span>\n</pre>\n<h2>Example</h2>\n<p>Suppose you had a log of users signing in and out of a service, and the log included the time, user id, and action the user took. We can view each user's login/logout history as a timing diagram, and simply <code>&amp;</code> them all together to see when all users were logged in at the same time:</p>\n<pre><span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"2019-08-27T19:38:50 001768bf-af44-46a6-890d-048f2c50aa29 login</span>\n<span class=\"s2\">2019-08-27T19:51:11 084c07f0-dd0d-46a3-8eb5-1d4cb13756a4 logout</span>\n<span class=\"s2\">2019-08-27T19:55:25 001768bf-af44-46a6-890d-048f2c50aa29 logout</span>\n<span class=\"s2\">2019-08-27T19:58:37 001768bf-af44-46a6-890d-048f2c50aa29 login</span>\n<span class=\"s2\">2019-08-27T20:17:21 a8118353-eb81-4ce0-8d10-6f3f9de6d7ca login</span>\n<span class=\"s2\">2019-08-27T20:45:19 001768bf-af44-46a6-890d-048f2c50aa29 logout</span>\n<span class=\"s2\">2019-08-27T21:01:45 001768bf-af44-46a6-890d-048f2c50aa29 login</span>\n<span class=\"s2\">2019-08-27T21:18:09 001768bf-af44-46a6-890d-048f2c50aa29 logout</span>\n<span class=\"s2\">2019-08-27T22:02:37 084c07f0-dd0d-46a3-8eb5-1d4cb13756a4 login</span>\n<span class=\"s2\">2019-08-27T22:55:54 001768bf-af44-46a6-890d-048f2c50aa29 login</span>\n<span class=\"s2\">2019-08-27T23:08:07 001768bf-af44-46a6-890d-048f2c50aa29 logout</span>\n<span class=\"s2\">2019-08-27T23:23:04 a8118353-eb81-4ce0-8d10-6f3f9de6d7ca logout</span>\n<span class=\"s2\">2019-08-27T23:47:50 001768bf-af44-46a6-890d-048f2c50aa29 login</span>\n<span class=\"s2\">2019-08-27T23:55:10 084c07f0-dd0d-46a3-8eb5-1d4cb13756a4 logout</span>\n<span class=\"s2\">2019-08-27T23:56:33 001768bf-af44-46a6-890d-048f2c50aa29 logout\"\"\"</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">defaultdict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"n\">reduce</span>\n<span class=\"kn\">from</span> <span class=\"nn\">timingdiagram</span> <span class=\"kn\">import</span> <span class=\"n\">TimingDiagram</span>\n\n\n<span class=\"n\">sessions</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">log</span><span class=\"p\">:</span>\n    <span class=\"n\">ts</span><span class=\"p\">,</span> <span class=\"n\">userid</span><span class=\"p\">,</span> <span class=\"n\">action</span> <span class=\"o\">=</span> <span class=\"n\">row</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n    <span class=\"n\">sessions</span><span class=\"p\">[</span><span class=\"n\">userid</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">ts</span><span class=\"p\">,</span> <span class=\"n\">action</span> <span class=\"o\">==</span> <span class=\"s2\">\"login\"</span><span class=\"p\">))</span>\n\n<span class=\"n\">all_logged_in</span> <span class=\"o\">=</span> <span class=\"n\">reduce</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">d1</span><span class=\"p\">,</span> <span class=\"n\">d2</span><span class=\"p\">:</span> <span class=\"n\">d1</span> <span class=\"o\">&amp;</span> <span class=\"n\">d2</span><span class=\"p\">,</span> <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">TimingDiagram</span><span class=\"p\">,</span> <span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()))</span>\n</pre>\n<p>From just a few lines of code, we get a timing diagram corresponding to when all the users were logged in:</p>\n<pre><code>TimingDiagram([\n  ('2019-08-27T19:38:50', False), \n  ('2019-08-27T22:55:54', True), \n  ('2019-08-27T23:08:07', False), \n  ('2019-08-27T23:56:33', False)\n ])\n</code></pre>\n<p>So all users were logged in between <code>22:55:54</code> and <code>23:08:07</code> on <code>2019-08-27</code>. The additional states at the beginning and end signify the start and end times of the logs.</p>\n\n          </div>"}, "last_serial": 6464722, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "8f20c914c752f71eb9010bf0918e7617", "sha256": "2a7f599ac73b645728ccb3f0402ac2d9c67bf5fd40cc4d00f61bc3dfdef0ceac"}, "downloads": -1, "filename": "timingdiagram_alkasm-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8f20c914c752f71eb9010bf0918e7617", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4654, "upload_time": "2020-01-15T09:08:39", "upload_time_iso_8601": "2020-01-15T09:08:39.747293Z", "url": "https://files.pythonhosted.org/packages/74/6c/d94017cfe7d9667ee03caeac915ede54588a94d460ba9c8e36363cfd9fff/timingdiagram_alkasm-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "119307f3f762fb3793cdd7fade5083ea", "sha256": "49e02ec66731e36613de32d45704bdf2df416d77f3a654fbb7364835f07851e3"}, "downloads": -1, "filename": "timingdiagram-alkasm-0.3.1.tar.gz", "has_sig": false, "md5_digest": "119307f3f762fb3793cdd7fade5083ea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3612, "upload_time": "2020-01-15T09:08:42", "upload_time_iso_8601": "2020-01-15T09:08:42.468578Z", "url": "https://files.pythonhosted.org/packages/6b/ef/e7d94173f396e941264cce9e9880a6a6df19ec5a9d6947e9857ce72517c0/timingdiagram-alkasm-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "a7c107bf349060e33b4aaafb2aaa4c00", "sha256": "820ec56ea50a2a5cc24fda822b991000cc93a98e67a182eebdfdcdef2d94c555"}, "downloads": -1, "filename": "timingdiagram_alkasm-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a7c107bf349060e33b4aaafb2aaa4c00", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4446, "upload_time": "2020-01-16T07:33:21", "upload_time_iso_8601": "2020-01-16T07:33:21.625967Z", "url": "https://files.pythonhosted.org/packages/ab/70/6bc89aa7e1d02c4a7d2b864fa56951847586cfda34221bfa0d4438f63845/timingdiagram_alkasm-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eeb95b0f836ef631ce78af3fd3a11cd8", "sha256": "03a37b61349cae2e5853d46e18e67aafb0390c946fe4a4ae4c5c89155fe24e2b"}, "downloads": -1, "filename": "timingdiagram-alkasm-0.3.2.tar.gz", "has_sig": false, "md5_digest": "eeb95b0f836ef631ce78af3fd3a11cd8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5812, "upload_time": "2020-01-16T07:33:23", "upload_time_iso_8601": "2020-01-16T07:33:23.166775Z", "url": "https://files.pythonhosted.org/packages/1b/50/f2d8830d298624743982f4f113e9b29fa530244681d49157f5ab1ad6fe77/timingdiagram-alkasm-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "c250ece0a2b79e4af88ba907e291895c", "sha256": "dac1411c5d60a286bf08aca941335767bdbdf0114aeeffec17cee2071f7e53a4"}, "downloads": -1, "filename": "timingdiagram_alkasm-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c250ece0a2b79e4af88ba907e291895c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4504, "upload_time": "2020-01-16T08:43:47", "upload_time_iso_8601": "2020-01-16T08:43:47.638658Z", "url": "https://files.pythonhosted.org/packages/1f/ac/78d4d9cbaa0a31769e7dd736372750b78c84e1111ea1be5a0466864a1024/timingdiagram_alkasm-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5aee6cb3b8f1580ebfcf661279e4ff3e", "sha256": "6fc50a4a6883d95dacfbca54dd6577c14936c36d3b7ff7ec43351f9a812419ec"}, "downloads": -1, "filename": "timingdiagram-alkasm-0.4.0.tar.gz", "has_sig": false, "md5_digest": "5aee6cb3b8f1580ebfcf661279e4ff3e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5856, "upload_time": "2020-01-16T08:43:49", "upload_time_iso_8601": "2020-01-16T08:43:49.018776Z", "url": "https://files.pythonhosted.org/packages/7a/9f/1393b95879b7d08446a7e378a86882c3957883167c541046f7f3deddc6af/timingdiagram-alkasm-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "ba87f0d89ae72a6f5f4e855d5017f69f", "sha256": "0858e7040a94be737ab786002ca53a881b8d24c354c532286bfaee0e52567c81"}, "downloads": -1, "filename": "timingdiagram_alkasm-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ba87f0d89ae72a6f5f4e855d5017f69f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4526, "upload_time": "2020-01-16T08:47:30", "upload_time_iso_8601": "2020-01-16T08:47:30.119190Z", "url": "https://files.pythonhosted.org/packages/a1/34/7e1345bc94443e11375b8d09f9d0f8eaec325b2686513fd184e8f68f1b1e/timingdiagram_alkasm-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4002412ab4e7897f9704c77f59e14f0", "sha256": "58bba8ba507863ccc2c72979fcb0036015018e495bceed251d53a6edaff5654b"}, "downloads": -1, "filename": "timingdiagram-alkasm-0.4.1.tar.gz", "has_sig": false, "md5_digest": "f4002412ab4e7897f9704c77f59e14f0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5875, "upload_time": "2020-01-16T08:47:31", "upload_time_iso_8601": "2020-01-16T08:47:31.974963Z", "url": "https://files.pythonhosted.org/packages/e3/7b/e7dd9f112158e6ec52b37cffb214c2db7636df9e0985357a51adca4d057e/timingdiagram-alkasm-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba87f0d89ae72a6f5f4e855d5017f69f", "sha256": "0858e7040a94be737ab786002ca53a881b8d24c354c532286bfaee0e52567c81"}, "downloads": -1, "filename": "timingdiagram_alkasm-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ba87f0d89ae72a6f5f4e855d5017f69f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4526, "upload_time": "2020-01-16T08:47:30", "upload_time_iso_8601": "2020-01-16T08:47:30.119190Z", "url": "https://files.pythonhosted.org/packages/a1/34/7e1345bc94443e11375b8d09f9d0f8eaec325b2686513fd184e8f68f1b1e/timingdiagram_alkasm-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4002412ab4e7897f9704c77f59e14f0", "sha256": "58bba8ba507863ccc2c72979fcb0036015018e495bceed251d53a6edaff5654b"}, "downloads": -1, "filename": "timingdiagram-alkasm-0.4.1.tar.gz", "has_sig": false, "md5_digest": "f4002412ab4e7897f9704c77f59e14f0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5875, "upload_time": "2020-01-16T08:47:31", "upload_time_iso_8601": "2020-01-16T08:47:31.974963Z", "url": "https://files.pythonhosted.org/packages/e3/7b/e7dd9f112158e6ec52b37cffb214c2db7636df9e0985357a51adca4d057e/timingdiagram-alkasm-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:53:18 2020"}