{"info": {"author": "Masahiro Sakai", "author_email": "masahiro.sakai@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# pyglucose\n\n[![Build Status (Travis-CI)](https://secure.travis-ci.org/msakai/glucose-pybind11.png?branch=master)](http://travis-ci.org/msakai/glucose-pybind11)\n[![Build status (AppVeyor)](https://ci.appveyor.com/api/projects/status/c3dve9477wgs49c1?svg=true)](https://ci.appveyor.com/project/msakai/glucose-pybind11)\n[![License](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n\n[pybind11](https://github.com/pybind/pybind11)-based binding of [glucose SAT solver](http://www.labri.fr/perso/lsimon/glucose/).\n\n## Installation\n\n```\npip install git+https://github.com/msakai/glucose-pybind11/\n```\n\n## Basic Usage\n\nThe `pyglucose` module exports `Solver` and `Lit`.\n\nA SAT problem can be solved as follows:\n\n1. Construct a solver instance using `solver = Solver()`.\n2. Allocate variables using `var = solver.new_var()`.\n   A variable is returned as integer value and can be converted to `Lit` by `Lit(var)`.\n   A literal `lit` can be negated as `~lit`.\n3. Add clauses using `solver.add_clause(clause)`. A clause is represented as `Iterable[Lit]`.\n4. Solve the problem using `solver.solve()`\n5. If `solver.okay` property is `True` then the problem is `SATISFIABLE`, and\n   satisfying assignment can be retrieved using `solver.model` property.\n   Otherwise, the problem is `UNSATISFIABLE`.\n   \n## License\n\n[MIT License](LICENSE)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/msakai/glucose-pybind11", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "pyglucose", "package_url": "https://pypi.org/project/pyglucose/", "platform": "", "project_url": "https://pypi.org/project/pyglucose/", "project_urls": {"Homepage": "https://github.com/msakai/glucose-pybind11"}, "release_url": "https://pypi.org/project/pyglucose/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "pybind11-based binding of glucose SAT solver", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyglucose</h1>\n<p><a href=\"http://travis-ci.org/msakai/glucose-pybind11\" rel=\"nofollow\"><img alt=\"Build Status (Travis-CI)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49cc9149145acf4c93888703c22202491c13711c/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f6d73616b61692f676c75636f73652d707962696e6431312e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/msakai/glucose-pybind11\" rel=\"nofollow\"><img alt=\"Build status (AppVeyor)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b5a3b0c0f7f10a07a5a5be777f64ad75f07f51d/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f633364766539343737776773343963313f7376673d74727565\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4150014b4dfdd7b565fa18de88e9bb1b8ccd7c08/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667\"></a></p>\n<p><a href=\"https://github.com/pybind/pybind11\" rel=\"nofollow\">pybind11</a>-based binding of <a href=\"http://www.labri.fr/perso/lsimon/glucose/\" rel=\"nofollow\">glucose SAT solver</a>.</p>\n<h2>Installation</h2>\n<pre><code>pip install git+https://github.com/msakai/glucose-pybind11/\n</code></pre>\n<h2>Basic Usage</h2>\n<p>The <code>pyglucose</code> module exports <code>Solver</code> and <code>Lit</code>.</p>\n<p>A SAT problem can be solved as follows:</p>\n<ol>\n<li>Construct a solver instance using <code>solver = Solver()</code>.</li>\n<li>Allocate variables using <code>var = solver.new_var()</code>.\nA variable is returned as integer value and can be converted to <code>Lit</code> by <code>Lit(var)</code>.\nA literal <code>lit</code> can be negated as <code>~lit</code>.</li>\n<li>Add clauses using <code>solver.add_clause(clause)</code>. A clause is represented as <code>Iterable[Lit]</code>.</li>\n<li>Solve the problem using <code>solver.solve()</code></li>\n<li>If <code>solver.okay</code> property is <code>True</code> then the problem is <code>SATISFIABLE</code>, and\nsatisfying assignment can be retrieved using <code>solver.model</code> property.\nOtherwise, the problem is <code>UNSATISFIABLE</code>.</li>\n</ol>\n<h2>License</h2>\n<p><a href=\"LICENSE\" rel=\"nofollow\">MIT License</a></p>\n\n          </div>"}, "last_serial": 5140111, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e32da83354529bddab77a6fa291319be", "sha256": "97cd6e91b6b8aab8f7c33d0e6b029d50c0df04fe94671f7c88910da414461c27"}, "downloads": -1, "filename": "pyglucose-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e32da83354529bddab77a6fa291319be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84363, "upload_time": "2019-04-14T07:44:57", "upload_time_iso_8601": "2019-04-14T07:44:57.894821Z", "url": "https://files.pythonhosted.org/packages/d0/ab/c090ade934444eb4e4a56781ad2baed6e86675eb864f823975f9ef5ed69c/pyglucose-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e32da83354529bddab77a6fa291319be", "sha256": "97cd6e91b6b8aab8f7c33d0e6b029d50c0df04fe94671f7c88910da414461c27"}, "downloads": -1, "filename": "pyglucose-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e32da83354529bddab77a6fa291319be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84363, "upload_time": "2019-04-14T07:44:57", "upload_time_iso_8601": "2019-04-14T07:44:57.894821Z", "url": "https://files.pythonhosted.org/packages/d0/ab/c090ade934444eb4e4a56781ad2baed6e86675eb864f823975f9ef5ed69c/pyglucose-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:55 2020"}