{"info": {"author": "Alex Van de Kleut", "author_email": "avandekleut@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Sparse Distributed Memory for Python\n\n## What is this?\n\nThis is a fast implementation of Pentti Kanerva's [Sparse Distributed Memory (SDM)](https://en.wikipedia.org/wiki/Sparse_distributed_memory). `sdmlib` is written in Python using [`numpy`](https://numpy.org).\n\n## Installation\n\nThe package is available through PyPi:\n```sh\npip install sdmlib\n```\n\n## Using `sdmlib`\n\n`sdmlib` is designed to operate on `numpy` arrays.\n\n### The `Memory` class\n\nThis class provides the main functionality of SDM.\n\n|Parameter|Description|\n|:-:|:-:|\n|`N`|Length of addresses in bits|\n|`M`|Number of hard addresses|\n|`U`|Length of data in bits|\n|`d`|Hamming radius of addresses considered \"near\" for reading and writing. If `None`, then it is computed using T|\n|`T`|(Default: `None`) Number of data points to be written. Ignored if `d` is provided. If `T` is `None` then `d` must be provided. `d` and `T` cannot both be `None`|\n|`seed`|Seed the random number generator (for reproducability)|\n\n### Example Usage\n\n```python\nimport numpy as np\nfrom sdmlib import Memory\n\nN = 256\nM = 1000\nU = 256\nT = 100\n\naddresses =  np.random.randint(low=0, high=2, size=(T, N), dtype=np.uint8)\ndata      =  np.random.randint(low=0, high=2, size=(T, U), dtype=np.uint8)\n\nmem = Memory(N=N, M=M, U=U, d=None, T=T)\n\nfor t in range(T):\n    mem.write(addresses[t], data[t])\n\nerror = 0\nfor t in range(T):\n    error += np.mean(data[t] != mem.read(addresses[t]))/T\nprint(f'Reconstruction error: {100*error:.2f}%')\n```\n\n```\nReconstruction error: 0.51%\n```\n\n#### The `write` method\nWrite a binary string to memory.\n\n|Parameter|Description|\n|:-:|:-:|\n|`x`|Address. Binary numpy array of shape `(N,)`|\n|`w`|Data. Binary numpy array of shape `(U,)`|\n\n#### The `read` method\nRead a binary string from memory.\n\n|Parameter|Description|\n|:-:|:-:|\n|`x`|Address. Binary numpy array of shape `(N,)`|\n\n|Returns|Description|\n|:-:|:-:|\n|`z`|Data. Binary numpy array of shape `(U,)`|\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/avandekleut/sdmlib", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sdmlib", "package_url": "https://pypi.org/project/sdmlib/", "platform": "", "project_url": "https://pypi.org/project/sdmlib/", "project_urls": {"Homepage": "https://github.com/avandekleut/sdmlib"}, "release_url": "https://pypi.org/project/sdmlib/0.1.2/", "requires_dist": ["numpy", "scipy"], "requires_python": ">=3.7", "summary": "A fast, numpy-based implementation of Kanerva's Sparse     Distributed Memory (SDM)", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Sparse Distributed Memory for Python</h1>\n<h2>What is this?</h2>\n<p>This is a fast implementation of Pentti Kanerva's <a href=\"https://en.wikipedia.org/wiki/Sparse_distributed_memory\" rel=\"nofollow\">Sparse Distributed Memory (SDM)</a>. <code>sdmlib</code> is written in Python using <a href=\"https://numpy.org\" rel=\"nofollow\"><code>numpy</code></a>.</p>\n<h2>Installation</h2>\n<p>The package is available through PyPi:</p>\n<pre>pip install sdmlib\n</pre>\n<h2>Using <code>sdmlib</code></h2>\n<p><code>sdmlib</code> is designed to operate on <code>numpy</code> arrays.</p>\n<h3>The <code>Memory</code> class</h3>\n<p>This class provides the main functionality of SDM.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Parameter</th>\n<th align=\"center\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>N</code></td>\n<td align=\"center\">Length of addresses in bits</td>\n</tr>\n<tr>\n<td align=\"center\"><code>M</code></td>\n<td align=\"center\">Number of hard addresses</td>\n</tr>\n<tr>\n<td align=\"center\"><code>U</code></td>\n<td align=\"center\">Length of data in bits</td>\n</tr>\n<tr>\n<td align=\"center\"><code>d</code></td>\n<td align=\"center\">Hamming radius of addresses considered \"near\" for reading and writing. If <code>None</code>, then it is computed using T</td>\n</tr>\n<tr>\n<td align=\"center\"><code>T</code></td>\n<td align=\"center\">(Default: <code>None</code>) Number of data points to be written. Ignored if <code>d</code> is provided. If <code>T</code> is <code>None</code> then <code>d</code> must be provided. <code>d</code> and <code>T</code> cannot both be <code>None</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>seed</code></td>\n<td align=\"center\">Seed the random number generator (for reproducability)</td>\n</tr></tbody></table>\n<h3>Example Usage</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sdmlib</span> <span class=\"kn\">import</span> <span class=\"n\">Memory</span>\n\n<span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"mi\">256</span>\n<span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n<span class=\"n\">U</span> <span class=\"o\">=</span> <span class=\"mi\">256</span>\n<span class=\"n\">T</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n\n<span class=\"n\">addresses</span> <span class=\"o\">=</span>  <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"n\">low</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">high</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">)</span>\n<span class=\"n\">data</span>      <span class=\"o\">=</span>  <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"n\">low</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">high</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">U</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">)</span>\n\n<span class=\"n\">mem</span> <span class=\"o\">=</span> <span class=\"n\">Memory</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"o\">=</span><span class=\"n\">N</span><span class=\"p\">,</span> <span class=\"n\">M</span><span class=\"o\">=</span><span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">U</span><span class=\"o\">=</span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">T</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">):</span>\n    <span class=\"n\">mem</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">addresses</span><span class=\"p\">[</span><span class=\"n\">t</span><span class=\"p\">],</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">t</span><span class=\"p\">])</span>\n\n<span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">):</span>\n    <span class=\"n\">error</span> <span class=\"o\">+=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">t</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">mem</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">addresses</span><span class=\"p\">[</span><span class=\"n\">t</span><span class=\"p\">]))</span><span class=\"o\">/</span><span class=\"n\">T</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Reconstruction error: </span><span class=\"si\">{</span><span class=\"mi\">100</span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"si\">:</span><span class=\"s1\">.2f</span><span class=\"si\">}</span><span class=\"s1\">%'</span><span class=\"p\">)</span>\n</pre>\n<pre><code>Reconstruction error: 0.51%\n</code></pre>\n<h4>The <code>write</code> method</h4>\n<p>Write a binary string to memory.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Parameter</th>\n<th align=\"center\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>x</code></td>\n<td align=\"center\">Address. Binary numpy array of shape <code>(N,)</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>w</code></td>\n<td align=\"center\">Data. Binary numpy array of shape <code>(U,)</code></td>\n</tr></tbody></table>\n<h4>The <code>read</code> method</h4>\n<p>Read a binary string from memory.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Parameter</th>\n<th align=\"center\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>x</code></td>\n<td align=\"center\">Address. Binary numpy array of shape <code>(N,)</code></td>\n</tr></tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Returns</th>\n<th align=\"center\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>z</code></td>\n<td align=\"center\">Data. Binary numpy array of shape <code>(U,)</code></td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 6391859, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6fb94f3ffccb422559298feca19ce0a2", "sha256": "1185adff52019c2e5008cec41f58075b67a54ac1c7515a2a74bf0aaf65632851"}, "downloads": -1, "filename": "sdmlib-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6fb94f3ffccb422559298feca19ce0a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 3979, "upload_time": "2020-01-03T16:18:25", "upload_time_iso_8601": "2020-01-03T16:18:25.096418Z", "url": "https://files.pythonhosted.org/packages/cc/f9/45e8e21507826eff78e1a798c753d2a962b45464dd09dd3bf273c596065d/sdmlib-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7fa5336722526a45c3b4c90bac1be1af", "sha256": "06cb5a9deefdf2c7135b57af6259f50665f36bfdebbd12da612a5de0c5ca7c71"}, "downloads": -1, "filename": "sdmlib-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7fa5336722526a45c3b4c90bac1be1af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2596, "upload_time": "2020-01-03T16:18:27", "upload_time_iso_8601": "2020-01-03T16:18:27.372344Z", "url": "https://files.pythonhosted.org/packages/bb/4e/d9dd6aef04c3d0440a25f5b2c75a1d871becbb9c6ad215a04f389a160067/sdmlib-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "bbcfda533c5386cdf86778c201b13398", "sha256": "7c94b6658ce0059d4b6c4f72078b294eb1085caf466ae3dddbb5d4b8c26961c9"}, "downloads": -1, "filename": "sdmlib-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bbcfda533c5386cdf86778c201b13398", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 3992, "upload_time": "2020-01-03T16:31:17", "upload_time_iso_8601": "2020-01-03T16:31:17.458078Z", "url": "https://files.pythonhosted.org/packages/d2/9e/7069607f603d515ec923e0a6a296b4ea33b01aa2cfd3bf2797515f50908f/sdmlib-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a4e4fa773a5c90c6110a52ad4eaa1fa", "sha256": "103d5c17d6c9c30c395e3c1a81d62bfe3f141896cb1bde9d2b7feadb691018cf"}, "downloads": -1, "filename": "sdmlib-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8a4e4fa773a5c90c6110a52ad4eaa1fa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2641, "upload_time": "2020-01-03T16:31:21", "upload_time_iso_8601": "2020-01-03T16:31:21.947736Z", "url": "https://files.pythonhosted.org/packages/6a/f4/ced5bf9c56307868a7fec26710cf8eddcd066a5d6990a86a5c011419aee6/sdmlib-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "e99142f8faec6f7c56178c2908d44e69", "sha256": "1bce02ab50420abb8377a65ea8896a937fe045e85891517f656967db7c3b08e5"}, "downloads": -1, "filename": "sdmlib-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e99142f8faec6f7c56178c2908d44e69", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 3991, "upload_time": "2020-01-03T16:31:19", "upload_time_iso_8601": "2020-01-03T16:31:19.273444Z", "url": "https://files.pythonhosted.org/packages/76/82/9a83b6e5e1fd4744190108bccdc59ef01b31f5992408990bd6779b43c195/sdmlib-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc2d5caa3084aec056bc89c85fde9b5e", "sha256": "475704cd952dd26226b843338e2dee07aca0613afd4c7489b7d8feec66149bf1"}, "downloads": -1, "filename": "sdmlib-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bc2d5caa3084aec056bc89c85fde9b5e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2639, "upload_time": "2020-01-03T16:31:22", "upload_time_iso_8601": "2020-01-03T16:31:22.958781Z", "url": "https://files.pythonhosted.org/packages/a6/f0/2631c7f69a40af28a2fb84344199747d2ff097efa5c11c93d29daf68e17e/sdmlib-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a7b26ab156a59b86ce3fd1e6715f0499", "sha256": "a933f95ff730ccd8c611aba6dc77b57866ce0490c2fe8fac6f18b270994a57ee"}, "downloads": -1, "filename": "sdmlib-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a7b26ab156a59b86ce3fd1e6715f0499", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 3992, "upload_time": "2020-01-03T16:55:31", "upload_time_iso_8601": "2020-01-03T16:55:31.531956Z", "url": "https://files.pythonhosted.org/packages/28/9c/4121abdcb5725bdf00f46c7fdbd60d296c84663fa9aa3c46cce175c7abc0/sdmlib-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d99b79a8a56c7f7a26237869019e060", "sha256": "d5ebc5c85d7965a6b9a7e76188b1a63326a748ca17df2cbebf1bd5e423da2300"}, "downloads": -1, "filename": "sdmlib-0.1.2.tar.gz", "has_sig": false, "md5_digest": "4d99b79a8a56c7f7a26237869019e060", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2644, "upload_time": "2020-01-03T16:55:32", "upload_time_iso_8601": "2020-01-03T16:55:32.745853Z", "url": "https://files.pythonhosted.org/packages/b3/45/eb609d5a13c57c0e8a6502617c10a8efb63852ea352833a61c1f2b9ffa7e/sdmlib-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a7b26ab156a59b86ce3fd1e6715f0499", "sha256": "a933f95ff730ccd8c611aba6dc77b57866ce0490c2fe8fac6f18b270994a57ee"}, "downloads": -1, "filename": "sdmlib-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a7b26ab156a59b86ce3fd1e6715f0499", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 3992, "upload_time": "2020-01-03T16:55:31", "upload_time_iso_8601": "2020-01-03T16:55:31.531956Z", "url": "https://files.pythonhosted.org/packages/28/9c/4121abdcb5725bdf00f46c7fdbd60d296c84663fa9aa3c46cce175c7abc0/sdmlib-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d99b79a8a56c7f7a26237869019e060", "sha256": "d5ebc5c85d7965a6b9a7e76188b1a63326a748ca17df2cbebf1bd5e423da2300"}, "downloads": -1, "filename": "sdmlib-0.1.2.tar.gz", "has_sig": false, "md5_digest": "4d99b79a8a56c7f7a26237869019e060", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2644, "upload_time": "2020-01-03T16:55:32", "upload_time_iso_8601": "2020-01-03T16:55:32.745853Z", "url": "https://files.pythonhosted.org/packages/b3/45/eb609d5a13c57c0e8a6502617c10a8efb63852ea352833a61c1f2b9ffa7e/sdmlib-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:15 2020"}