{"info": {"author": "Davide Moro", "author_email": "davide.moro@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": "build_commands\n==============\n\n|build status|_\n|code coverage|_\n\n.. |build status| image:: https://secure.travis-ci.org/davidemoro/build_commands.png?branch=master\n.. _build status: http://travis-ci.org/davidemoro/build_commands\n.. |code coverage| image:: http://codecov.io/github/davidemoro/build_commands/coverage.svg?branch=master\n.. _code coverage: http://codecov.io/github/davidemoro/build_commands?branch=master\n\nThis package provides common setuptools command utilities if you\nneed to initialize your package with ``npm``, ``bower``\nor ``gulp`` commands.\n\nUsage\n-----\n\nYou are supposed to create in your own package a ``Yeoman`` like\nproject folder (for example: ``your_package/templates``).\n\nAdd the ``build_commands`` dependency to your pretend ``your_package``.\n\nUpdate your ``setup.cfg`` adding the following::\n\n    [aliases]\n    npm = npm -i your_package/templates\n    bower = bower\n    gulp = gulp -i your_package/templates -g gulpfile.babel.js\n\nIf you are using bower you can add a ``.bowerrc`` file to your\npackage root (where your ``setup.cfg`` file lives) with the\nfollowing (see http://bower.io/docs/config/#cwd)::\n\n    {\n      \"directory\": \"bower_components\",\n      \"cwd\": \"./your_package/templates/\"\n    }\n\nAnd update your setup.py entry points distutils commands::\n\n      entry_points=\"\"\"\\\n      [distutils.commands]\n      npm = build_commands:NpmCommand\n      bower = build_commands:BowerCommand\n      gulp = build_commands:GulpCommand\n      \"\"\",\n\nThis way once installed your ``your_package`` you can initialize your\nYeoman project with::\n\n    $ python setup.py install/develop\n    $ python setup.py npm\n    $ python setup.py bower\n    $ python setup.py gulp\n\nAnd all your frontend stuff will be processed automatically (SASS, minification,\nuglyfication, etc).\n\nAuthors\n=======\n\n* Davide Moro <https://twitter.com/davidemoro>\n\n\n0.0.1 (2015-08-12)\n------------------\n\n-  Initial version", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/davidemoro/build_commands", "keywords": "web python gulp npm bower yeoman", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "build_commands", "package_url": "https://pypi.org/project/build_commands/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/build_commands/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/davidemoro/build_commands"}, "release_url": "https://pypi.org/project/build_commands/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "build_commands", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"build-commands\">\n<h2>build_commands</h2>\n<p><a href=\"http://travis-ci.org/davidemoro/build_commands\" rel=\"nofollow\"><img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/feb43fed1dc25d599c6773cf02aacbddf41fc21a/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f6461766964656d6f726f2f6275696c645f636f6d6d616e64732e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://codecov.io/github/davidemoro/build_commands?branch=master\" rel=\"nofollow\"><img alt=\"code coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c49ceee094b5dc3b9818e98b7ce2a49cfa4d272c/687474703a2f2f636f6465636f762e696f2f6769746875622f6461766964656d6f726f2f6275696c645f636f6d6d616e64732f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>This package provides common setuptools command utilities if you\nneed to initialize your package with <tt>npm</tt>, <tt>bower</tt>\nor <tt>gulp</tt> commands.</p>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>You are supposed to create in your own package a <tt>Yeoman</tt> like\nproject folder (for example: <tt>your_package/templates</tt>).</p>\n<p>Add the <tt>build_commands</tt> dependency to your pretend <tt>your_package</tt>.</p>\n<p>Update your <tt>setup.cfg</tt> adding the following:</p>\n<pre>[aliases]\nnpm = npm -i your_package/templates\nbower = bower\ngulp = gulp -i your_package/templates -g gulpfile.babel.js\n</pre>\n<p>If you are using bower you can add a <tt>.bowerrc</tt> file to your\npackage root (where your <tt>setup.cfg</tt> file lives) with the\nfollowing (see <a href=\"http://bower.io/docs/config/#cwd\" rel=\"nofollow\">http://bower.io/docs/config/#cwd</a>):</p>\n<pre>{\n  \"directory\": \"bower_components\",\n  \"cwd\": \"./your_package/templates/\"\n}\n</pre>\n<p>And update your setup.py entry points distutils commands:</p>\n<pre>entry_points=\"\"\"\\\n[distutils.commands]\nnpm = build_commands:NpmCommand\nbower = build_commands:BowerCommand\ngulp = build_commands:GulpCommand\n\"\"\",\n</pre>\n<p>This way once installed your <tt>your_package</tt> you can initialize your\nYeoman project with:</p>\n<pre>$ python setup.py install/develop\n$ python setup.py npm\n$ python setup.py bower\n$ python setup.py gulp\n</pre>\n<p>And all your frontend stuff will be processed automatically (SASS, minification,\nuglyfication, etc).</p>\n</div>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li>Davide Moro &lt;<a href=\"https://twitter.com/davidemoro\" rel=\"nofollow\">https://twitter.com/davidemoro</a>&gt;</li>\n</ul>\n<div id=\"id1\">\n<h3>0.0.1 (2015-08-12)</h3>\n<ul>\n<li>Initial version</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1673719, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "839f48a39431a4472725ddf041246351", "sha256": "9421d2794336fa1196e67a92c8b44cb9e6e6d703259301b1a14c1e0956f94003"}, "downloads": -1, "filename": "build_commands-0.0.1.tar.gz", "has_sig": false, "md5_digest": "839f48a39431a4472725ddf041246351", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5355, "upload_time": "2015-08-11T22:32:09", "upload_time_iso_8601": "2015-08-11T22:32:09.029866Z", "url": "https://files.pythonhosted.org/packages/f0/6d/3ac2e1d4c153cde4a547bb5d6490994555ccf87451ee7eae0a0f60d16a3a/build_commands-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "839f48a39431a4472725ddf041246351", "sha256": "9421d2794336fa1196e67a92c8b44cb9e6e6d703259301b1a14c1e0956f94003"}, "downloads": -1, "filename": "build_commands-0.0.1.tar.gz", "has_sig": false, "md5_digest": "839f48a39431a4472725ddf041246351", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5355, "upload_time": "2015-08-11T22:32:09", "upload_time_iso_8601": "2015-08-11T22:32:09.029866Z", "url": "https://files.pythonhosted.org/packages/f0/6d/3ac2e1d4c153cde4a547bb5d6490994555ccf87451ee7eae0a0f60d16a3a/build_commands-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:03 2020"}