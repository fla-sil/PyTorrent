{"info": {"author": "Juan-Pablo Scaletti", "author_email": "juanpablo@jpscaletti.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3"], "description": "> **NOTE**: I'm thankful for any bug fix or report; They are more than welcome.<br>\n> However, I want to keep the scope of this project very small, so any other kind of pull-requests are discouraged.\n\n# ![Hecto(graph)](https://github.com/jpscaletti/hecto/raw/master/hecto.png)\n\n[![Coverage Status](https://coveralls.io/repos/github/jpscaletti/hecto/badge.svg?branch=master)](https://coveralls.io/github/jpscaletti/hecto?branch=master) [![Tests](https://travis-ci.org/jpscaletti/hecto.svg?branch=master)](https://travis-ci.org/jpscaletti/hecto/)\n\nA small and simple **library** for rendering projects templates.\n\n* Works with **local** paths and **git URLs**.\n* Your project can include any file and **Hecto** can dynamically replace values in any kind of text files.\n* It generates a beautiful output and take care of not overwrite existing files, unless instructed to do so.\n\n\n## How to use\n\n```bash\npip install hecto\n```\n\n```python\nfrom hecto import copy\n\n# Create a project from a local path\ncopy('path/to/project/template', 'path/to/destination')\n\n# Or from a git URL.\n# You can also use \"gh:\" as a shortcut of \"https://github.com/\"\n# Or \"gl:\"  as a shortcut of \"https://gitlab.com/\"\ncopy('https://github.com/jpscaletti/hecto.git', 'path/to/destination')\ncopy('gh:jpscaletti/hecto.git', 'path/to/destination')\ncopy('gl:jpscaletti/hecto.git', 'path/to/destination')\n\n```\n\n## How it works\n\nThe content of the files inside the project template are copied to the destination without changes, **unless are suffixed with the extension '.tmpl'.** (you can customize that with the `render_as` setting). In that case, the templating engine is used to render them.\n\nA slightly customized Jinja2 templates are used. The main difference is\nthat variables are referenced with ``[[ name ]]`` instead of\n``{{ name }}`` and blocks are ``[% if name %]`` instead of\n``{% if name %}``. To read more about templating see the [Jinja2\ndocumentation](http://jinja.pocoo.org/docs>).\n\nUse the `data` argument to pass whatever extra context you want to be available\nin the templates. The arguments can be any valid Python value, even a\nfunction.\n\n\n## API\n\n#### hecto.copy()\n\n```python\nhecto.copy(\n    src_path,\n    dst_path,\n\n    data=DEFAULT_DATA,\n    *,\n    exclude=DEFAULT_EXCLUDE,\n    include=[],\n    skip_if_exists=[],\n    envops={},\n    render_as=DEFAULT_RENDER_AS,\n\n    pretend=False,\n    force=False,\n    skip=False,\n    quiet=False,\n)\n```\n\nUses the template in `src_path` to generate a new project at `dst_path`.\n\n**Arguments**:\n\n- **src_path** (str):<br>\n    Absolute path to the project skeleton. May be a version control system URL.\n\n- **dst_path** (str):<br>\n    Absolute path to where to render the project template.\n\n- **data** (dict):<br>\n    Optional. Data to be passed to the templates.\n\n- **exclude** (list of str):<br>\n    Optional. A list of names or shell-style patterns matching files or folders\n    that must not be copied.\n\n- **include** (list of str):<br>\n    Optional. A list of names or shell-style patterns matching files or folders that must be included, even if its name is a match for the `exclude` list. Eg: `['.gitignore']`.\n    The default is an empty list.\n\n- **skip_if_exists** (list of str):<br>\n    Optional. Skip any of these file names or shell-style patterns, without asking, if another with the same name already exists in the destination folder.\n    It only makes sense if you are copying to a folder that already exists.\n\n- **envops** (dict):<br>\n    Optional. Extra options for the Jinja template environment.\n\n- **render_as** (function):<br>\n    An optional hook that takes the absolute source path and the relative destination path of a file as arguments.\n\n    It should return `None` if the file must be copied as-is or a Path object of the new relative destination (can be the same as the one received).\n\n    By default all the files with the `.tmpl` postfix are rendered and saved without that postfix. Eg: `readme.md.tmpl` becomes `readme.md`.\n\n- **get_context** (function):<br>\n    An optional hook called before rendering a file. Takes the relative\n    destination path of the file as argument, and should return a dictionary\n    with the context for its rendering.\n\n- **pretend** (bool):<br>\n    Optional. Run but do not make any changes\n\n- **force** (bool):<br>\n    Optional. Overwrite files that already exist, without asking\n\n- **skip** (bool):<br>\n    Optional. Skip files that already exist, without asking\n\n- **quiet** (bool):<br>\n    Optional. Suppress the status output\n\n\n## The hecto.yaml file\n\nIf a YAML file named `hecto.yaml` is found in the root of the project, it will be read and used for arguments defaults.\n\nNote that they become just _the defaults_, so any explicitly-passed argument will overwrite them.\n\n```yaml\n# Shell-style patterns files/folders that must not be copied.\nexclude:\n  - \"*.bar\"\n  - \".git\"\n  - \".git/*\"\n\n# Shell-style patterns files/folders that *must be* copied, even if\n# they are in the exclude list\ninclude:\n  - \"foo.bar\"\n\n# Shell-style patterns files to skip, without asking, if they already exists\n# in the destination folder\nskip_if_exists:\n  - \".gitignore\"\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jpscaletti/hecto", "keywords": "", "license": "Apache License Version 2.0", "maintainer": "", "maintainer_email": "", "name": "hecto", "package_url": "https://pypi.org/project/hecto/", "platform": "", "project_url": "https://pypi.org/project/hecto/", "project_urls": {"Homepage": "https://github.com/jpscaletti/hecto"}, "release_url": "https://pypi.org/project/hecto/1.200121/", "requires_dist": ["jinja2 (~=2.10)", "colorama (~=0.4)", "pyyaml (~=5.1)", "pytest ; extra == 'dev'", "pytest-cov ; extra == 'dev'", "flake8 ; extra == 'dev'", "ipdb ; extra == 'dev'", "tox ; extra == 'dev'", "pytest ; extra == 'testing'", "pytest-cov ; extra == 'testing'"], "requires_python": ">=3.6,<4.0", "summary": "(graph).", "version": "1.200121", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\n<p><strong>NOTE</strong>: I'm thankful for any bug fix or report; They are more than welcome.<br>\nHowever, I want to keep the scope of this project very small, so any other kind of pull-requests are discouraged.</p>\n</blockquote>\n<h1><img alt=\"Hecto(graph)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2d630ebeb195aaa7d350c1b8efec13f07840eae8/68747470733a2f2f6769746875622e636f6d2f6a707363616c657474692f686563746f2f7261772f6d61737465722f686563746f2e706e67\"></h1>\n<p><a href=\"https://coveralls.io/github/jpscaletti/hecto?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6e5c12d02ad4399a313bb48dc490cdb182a3ef8/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6a707363616c657474692f686563746f2f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://travis-ci.org/jpscaletti/hecto/\" rel=\"nofollow\"><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/61d5f35f6ae70bd672d778b9033714572e86cc4e/68747470733a2f2f7472617669732d63692e6f72672f6a707363616c657474692f686563746f2e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>A small and simple <strong>library</strong> for rendering projects templates.</p>\n<ul>\n<li>Works with <strong>local</strong> paths and <strong>git URLs</strong>.</li>\n<li>Your project can include any file and <strong>Hecto</strong> can dynamically replace values in any kind of text files.</li>\n<li>It generates a beautiful output and take care of not overwrite existing files, unless instructed to do so.</li>\n</ul>\n<h2>How to use</h2>\n<pre>pip install hecto\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hecto</span> <span class=\"kn\">import</span> <span class=\"n\">copy</span>\n\n<span class=\"c1\"># Create a project from a local path</span>\n<span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"s1\">'path/to/project/template'</span><span class=\"p\">,</span> <span class=\"s1\">'path/to/destination'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or from a git URL.</span>\n<span class=\"c1\"># You can also use \"gh:\" as a shortcut of \"https://github.com/\"</span>\n<span class=\"c1\"># Or \"gl:\"  as a shortcut of \"https://gitlab.com/\"</span>\n<span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"s1\">'https://github.com/jpscaletti/hecto.git'</span><span class=\"p\">,</span> <span class=\"s1\">'path/to/destination'</span><span class=\"p\">)</span>\n<span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"s1\">'gh:jpscaletti/hecto.git'</span><span class=\"p\">,</span> <span class=\"s1\">'path/to/destination'</span><span class=\"p\">)</span>\n<span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"s1\">'gl:jpscaletti/hecto.git'</span><span class=\"p\">,</span> <span class=\"s1\">'path/to/destination'</span><span class=\"p\">)</span>\n</pre>\n<h2>How it works</h2>\n<p>The content of the files inside the project template are copied to the destination without changes, <strong>unless are suffixed with the extension '.tmpl'.</strong> (you can customize that with the <code>render_as</code> setting). In that case, the templating engine is used to render them.</p>\n<p>A slightly customized Jinja2 templates are used. The main difference is\nthat variables are referenced with <code>[[ name ]]</code> instead of\n<code>{{ name }}</code> and blocks are <code>[% if name %]</code> instead of\n<code>{% if name %}</code>. To read more about templating see the <a href=\"http://jinja.pocoo.org/docs%3E\" rel=\"nofollow\">Jinja2\ndocumentation</a>.</p>\n<p>Use the <code>data</code> argument to pass whatever extra context you want to be available\nin the templates. The arguments can be any valid Python value, even a\nfunction.</p>\n<h2>API</h2>\n<h4>hecto.copy()</h4>\n<pre><span class=\"n\">hecto</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span>\n    <span class=\"n\">src_path</span><span class=\"p\">,</span>\n    <span class=\"n\">dst_path</span><span class=\"p\">,</span>\n\n    <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">DEFAULT_DATA</span><span class=\"p\">,</span>\n    <span class=\"o\">*</span><span class=\"p\">,</span>\n    <span class=\"n\">exclude</span><span class=\"o\">=</span><span class=\"n\">DEFAULT_EXCLUDE</span><span class=\"p\">,</span>\n    <span class=\"n\">include</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n    <span class=\"n\">skip_if_exists</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n    <span class=\"n\">envops</span><span class=\"o\">=</span><span class=\"p\">{},</span>\n    <span class=\"n\">render_as</span><span class=\"o\">=</span><span class=\"n\">DEFAULT_RENDER_AS</span><span class=\"p\">,</span>\n\n    <span class=\"n\">pretend</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">skip</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">quiet</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Uses the template in <code>src_path</code> to generate a new project at <code>dst_path</code>.</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li>\n<p><strong>src_path</strong> (str):<br>\nAbsolute path to the project skeleton. May be a version control system URL.</p>\n</li>\n<li>\n<p><strong>dst_path</strong> (str):<br>\nAbsolute path to where to render the project template.</p>\n</li>\n<li>\n<p><strong>data</strong> (dict):<br>\nOptional. Data to be passed to the templates.</p>\n</li>\n<li>\n<p><strong>exclude</strong> (list of str):<br>\nOptional. A list of names or shell-style patterns matching files or folders\nthat must not be copied.</p>\n</li>\n<li>\n<p><strong>include</strong> (list of str):<br>\nOptional. A list of names or shell-style patterns matching files or folders that must be included, even if its name is a match for the <code>exclude</code> list. Eg: <code>['.gitignore']</code>.\nThe default is an empty list.</p>\n</li>\n<li>\n<p><strong>skip_if_exists</strong> (list of str):<br>\nOptional. Skip any of these file names or shell-style patterns, without asking, if another with the same name already exists in the destination folder.\nIt only makes sense if you are copying to a folder that already exists.</p>\n</li>\n<li>\n<p><strong>envops</strong> (dict):<br>\nOptional. Extra options for the Jinja template environment.</p>\n</li>\n<li>\n<p><strong>render_as</strong> (function):<br>\nAn optional hook that takes the absolute source path and the relative destination path of a file as arguments.</p>\n<p>It should return <code>None</code> if the file must be copied as-is or a Path object of the new relative destination (can be the same as the one received).</p>\n<p>By default all the files with the <code>.tmpl</code> postfix are rendered and saved without that postfix. Eg: <code>readme.md.tmpl</code> becomes <code>readme.md</code>.</p>\n</li>\n<li>\n<p><strong>get_context</strong> (function):<br>\nAn optional hook called before rendering a file. Takes the relative\ndestination path of the file as argument, and should return a dictionary\nwith the context for its rendering.</p>\n</li>\n<li>\n<p><strong>pretend</strong> (bool):<br>\nOptional. Run but do not make any changes</p>\n</li>\n<li>\n<p><strong>force</strong> (bool):<br>\nOptional. Overwrite files that already exist, without asking</p>\n</li>\n<li>\n<p><strong>skip</strong> (bool):<br>\nOptional. Skip files that already exist, without asking</p>\n</li>\n<li>\n<p><strong>quiet</strong> (bool):<br>\nOptional. Suppress the status output</p>\n</li>\n</ul>\n<h2>The hecto.yaml file</h2>\n<p>If a YAML file named <code>hecto.yaml</code> is found in the root of the project, it will be read and used for arguments defaults.</p>\n<p>Note that they become just <em>the defaults</em>, so any explicitly-passed argument will overwrite them.</p>\n<pre><span class=\"c1\"># Shell-style patterns files/folders that must not be copied.</span>\n<span class=\"nt\">exclude</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"*.bar\"</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\".git\"</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\".git/*\"</span>\n\n<span class=\"c1\"># Shell-style patterns files/folders that *must be* copied, even if</span>\n<span class=\"c1\"># they are in the exclude list</span>\n<span class=\"nt\">include</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"foo.bar\"</span>\n\n<span class=\"c1\"># Shell-style patterns files to skip, without asking, if they already exists</span>\n<span class=\"c1\"># in the destination folder</span>\n<span class=\"nt\">skip_if_exists</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\".gitignore\"</span>\n</pre>\n\n          </div>"}, "last_serial": 6503330, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "bc7257022fa2ef128bd22789e997d394", "sha256": "dfe0990dd9d3da20488edbb2d4d5130d7240f640d968d22feca1a51c76e7dea6"}, "downloads": -1, "filename": "hecto-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bc7257022fa2ef128bd22789e997d394", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 12635, "upload_time": "2019-10-11T02:39:10", "upload_time_iso_8601": "2019-10-11T02:39:10.575240Z", "url": "https://files.pythonhosted.org/packages/ed/10/c25855c5b0c83441e552e479df7e08c765b7c5d66f3331318881822e6ab6/hecto-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c872c4a4f239876ede0c2a3be3ed6ed2", "sha256": "df3bbb07c67631b3d9265e3cac943fb04c5557adba8d20f6ee63e7f7efc25ae3"}, "downloads": -1, "filename": "hecto-1.0.tar.gz", "has_sig": false, "md5_digest": "c872c4a4f239876ede0c2a3be3ed6ed2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 7932, "upload_time": "2019-10-11T02:39:13", "upload_time_iso_8601": "2019-10-11T02:39:13.161505Z", "url": "https://files.pythonhosted.org/packages/4f/36/46b9cff2055dab75dda8450281075fa4fba58ab0abf0c346e2ae846055a0/hecto-1.0.tar.gz", "yanked": false}], "1.191024": [{"comment_text": "", "digests": {"md5": "da42ac46e1c32a1adde3c0e11395974e", "sha256": "aa0e78c9419c6586fbe9802c121434b123854b4968cdd9c7d3eebe56e9f7ea01"}, "downloads": -1, "filename": "hecto-1.191024-py3-none-any.whl", "has_sig": false, "md5_digest": "da42ac46e1c32a1adde3c0e11395974e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 15036, "upload_time": "2019-10-25T03:17:37", "upload_time_iso_8601": "2019-10-25T03:17:37.912814Z", "url": "https://files.pythonhosted.org/packages/94/e9/e9d7db330f1e37e984a05041955e014d5c9cb7005870c4c6123522135fa1/hecto-1.191024-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9976df16760b64c33d161ec347326f1f", "sha256": "37b8d4a049dac9960b3d1454bdef1b21df77c33e26932e50d177e0244e1af308"}, "downloads": -1, "filename": "hecto-1.191024.tar.gz", "has_sig": false, "md5_digest": "9976df16760b64c33d161ec347326f1f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 10574, "upload_time": "2019-10-25T03:17:39", "upload_time_iso_8601": "2019-10-25T03:17:39.980893Z", "url": "https://files.pythonhosted.org/packages/52/91/935f27898054899c2c7651e5496ba069669bcab2615e646f4e233ab35d20/hecto-1.191024.tar.gz", "yanked": false}], "1.191025": [{"comment_text": "", "digests": {"md5": "778c2f594daeac72e32b133f38e5c9dc", "sha256": "9cbc9b41fa278017a85ebe828cb3836689faea2d42a009f7eb53fb7b0c2ad294"}, "downloads": -1, "filename": "hecto-1.191025-py3-none-any.whl", "has_sig": false, "md5_digest": "778c2f594daeac72e32b133f38e5c9dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 15036, "upload_time": "2019-10-25T14:27:37", "upload_time_iso_8601": "2019-10-25T14:27:37.906781Z", "url": "https://files.pythonhosted.org/packages/9f/85/7241112c4448197d07095f91f890b76cd389e127a32c0f54a853cadc4e4d/hecto-1.191025-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23ef59087d961cc648f4a20ab0f1b6e6", "sha256": "2369145a5abb8833afb2089e60b7ab3437efa521a1bd48c1133b952a9b2b7600"}, "downloads": -1, "filename": "hecto-1.191025.tar.gz", "has_sig": false, "md5_digest": "23ef59087d961cc648f4a20ab0f1b6e6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 10577, "upload_time": "2019-10-25T14:27:41", "upload_time_iso_8601": "2019-10-25T14:27:41.214311Z", "url": "https://files.pythonhosted.org/packages/ff/ee/30c1e2107997c047a677606ef73eb5c61349eb5090afe29fe558d61c2e7e/hecto-1.191025.tar.gz", "yanked": false}], "1.191026": [{"comment_text": "", "digests": {"md5": "45e1e283057c3fbbfc8fbf1312793b26", "sha256": "bada3b994f7e955375da15595f47cab4bd51eb576491a2fd3e3b75e517637e68"}, "downloads": -1, "filename": "hecto-1.191026-py3-none-any.whl", "has_sig": false, "md5_digest": "45e1e283057c3fbbfc8fbf1312793b26", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 15192, "upload_time": "2019-10-27T03:38:16", "upload_time_iso_8601": "2019-10-27T03:38:16.145643Z", "url": "https://files.pythonhosted.org/packages/5b/18/76fce4d604ab721069d14715391274cb3c9a978bf58df12b4efc3c3e40e9/hecto-1.191026-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08c08c348a6371e516b2e7a44d789a82", "sha256": "3858711e9f8f3ea78a9172c22067778395171e0348abf65f2c6d658ea190177d"}, "downloads": -1, "filename": "hecto-1.191026.tar.gz", "has_sig": false, "md5_digest": "08c08c348a6371e516b2e7a44d789a82", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 10704, "upload_time": "2019-10-27T03:38:19", "upload_time_iso_8601": "2019-10-27T03:38:19.465410Z", "url": "https://files.pythonhosted.org/packages/1a/28/74c938c6c95dbe2c3603177d6ea214cb4e984ac9e238a55945f5ce1230cc/hecto-1.191026.tar.gz", "yanked": false}], "1.200103": [{"comment_text": "", "digests": {"md5": "322ac177d5c2991d3d3b49d1b711a5fb", "sha256": "07772814702b21816b53af3faaa50d3867ff3ef11f8aecc01b058ea9a08941a2"}, "downloads": -1, "filename": "hecto-1.200103-py3-none-any.whl", "has_sig": false, "md5_digest": "322ac177d5c2991d3d3b49d1b711a5fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 15270, "upload_time": "2020-01-03T21:30:27", "upload_time_iso_8601": "2020-01-03T21:30:27.349141Z", "url": "https://files.pythonhosted.org/packages/32/b1/709c70b46196e27f972f5d66583391806c453df456ecc883c7d14c73abaf/hecto-1.200103-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9966e9689cc8103b8248e9900356246a", "sha256": "c8f56f15f01b2aab511d12758327d136b56f8fbbeeb8ba092ef58e4fb104c42c"}, "downloads": -1, "filename": "hecto-1.200103.tar.gz", "has_sig": false, "md5_digest": "9966e9689cc8103b8248e9900356246a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 14247, "upload_time": "2020-01-03T21:30:29", "upload_time_iso_8601": "2020-01-03T21:30:29.206463Z", "url": "https://files.pythonhosted.org/packages/88/3c/26401ff349df51be5b8516676b34327b5dbfb9cdc3a8b5738a3fbbf1b3ed/hecto-1.200103.tar.gz", "yanked": false}], "1.200120": [{"comment_text": "", "digests": {"md5": "03960f08b4fa795c39a8328cee5e939b", "sha256": "fcdb90603047453bf49993b9e6064dcb5bd11706d89ee8adf2d025c34bbbe793"}, "downloads": -1, "filename": "hecto-1.200120-py3-none-any.whl", "has_sig": false, "md5_digest": "03960f08b4fa795c39a8328cee5e939b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 15363, "upload_time": "2020-01-22T21:34:08", "upload_time_iso_8601": "2020-01-22T21:34:08.464530Z", "url": "https://files.pythonhosted.org/packages/7f/c1/dd2771bcc15b7c464ae4f5627fc7fde46f7e412f7462f03d14c0cb53c756/hecto-1.200120-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b723777df7482a9b0ae935ad27b759e0", "sha256": "c6d56ba8052574ebe611add4aa474d71ff52c02dc2f7e7f5c9df5c3fa0480091"}, "downloads": -1, "filename": "hecto-1.200120.tar.gz", "has_sig": false, "md5_digest": "b723777df7482a9b0ae935ad27b759e0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 10904, "upload_time": "2020-01-22T21:34:09", "upload_time_iso_8601": "2020-01-22T21:34:09.976306Z", "url": "https://files.pythonhosted.org/packages/1e/97/b69e73f15d5922b58c1985aac40a2f416edbfc5cdd3a68e701e6b46f22b8/hecto-1.200120.tar.gz", "yanked": false}], "1.200121": [{"comment_text": "", "digests": {"md5": "fa8f4c49605c386d0b7702588adc8f79", "sha256": "6d024a0ada2529130007533593df10e9d92ba41e6052149e2db49de244dd3453"}, "downloads": -1, "filename": "hecto-1.200121-py3-none-any.whl", "has_sig": false, "md5_digest": "fa8f4c49605c386d0b7702588adc8f79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 15361, "upload_time": "2020-01-23T00:44:06", "upload_time_iso_8601": "2020-01-23T00:44:06.769542Z", "url": "https://files.pythonhosted.org/packages/2e/34/d9e5f6fc75c48470b555d27038d816df272b990601b5c8a4a140b4060620/hecto-1.200121-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3399927fcd84acbb1bb926d19ed83e8f", "sha256": "8e3752bd02665ef2834e77b9cd93996377389c91745f25a73928b19771c41ab9"}, "downloads": -1, "filename": "hecto-1.200121.tar.gz", "has_sig": false, "md5_digest": "3399927fcd84acbb1bb926d19ed83e8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 14374, "upload_time": "2020-01-23T00:44:09", "upload_time_iso_8601": "2020-01-23T00:44:09.907091Z", "url": "https://files.pythonhosted.org/packages/8b/b9/91f8f789042d1260362001a51fc0da84f50157185df2ec218e87fd29007f/hecto-1.200121.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fa8f4c49605c386d0b7702588adc8f79", "sha256": "6d024a0ada2529130007533593df10e9d92ba41e6052149e2db49de244dd3453"}, "downloads": -1, "filename": "hecto-1.200121-py3-none-any.whl", "has_sig": false, "md5_digest": "fa8f4c49605c386d0b7702588adc8f79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 15361, "upload_time": "2020-01-23T00:44:06", "upload_time_iso_8601": "2020-01-23T00:44:06.769542Z", "url": "https://files.pythonhosted.org/packages/2e/34/d9e5f6fc75c48470b555d27038d816df272b990601b5c8a4a140b4060620/hecto-1.200121-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3399927fcd84acbb1bb926d19ed83e8f", "sha256": "8e3752bd02665ef2834e77b9cd93996377389c91745f25a73928b19771c41ab9"}, "downloads": -1, "filename": "hecto-1.200121.tar.gz", "has_sig": false, "md5_digest": "3399927fcd84acbb1bb926d19ed83e8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 14374, "upload_time": "2020-01-23T00:44:09", "upload_time_iso_8601": "2020-01-23T00:44:09.907091Z", "url": "https://files.pythonhosted.org/packages/8b/b9/91f8f789042d1260362001a51fc0da84f50157185df2ec218e87fd29007f/hecto-1.200121.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:53 2020"}