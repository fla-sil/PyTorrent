{"info": {"author": "Caio Stringari", "author_email": "caio.stringari@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# swantools\n\nThis repository gathers some useful functions and tools to be used alongside SWAN wave model.\n\nFor downloading, installing  and using SWAN, please see: http://swanmodel.sourceforge.net/\n\nTo easily install the module just do:\n\n```bash\nsudo pip install swantools\n```\n\nalternatively, download the source code and install with:\n\n```bash\nsudo setup.py install\n```\n\nNowadays, there is a I/O class which can handle TABLE, SPECOUT and BLOCK outputs. In the future, it will be possible to write spectral boundary conditions, TPAR files and initial conditions.\n\nFor example, to use the I/O structure for reading a TABLE with HEAD option do:\n\n```python\n\nimport swantools\n\nrw = swantools.SwanIO()\n\ntable = rw.read_swantable('file.txt')\n```\nThis will return a pandas DataFrame with the model data.\n\nReading spectral (.spc) files become very easy:\n\n```python\n\nlon,lat,nfreqs,freqs,ndirs,dirs,spectra = rw.read_swanspc('file.txt','19990101.00000')\n```\n\nSome useful functions are also provided, for example:\n\n```python\n\nlat    = np.arange(-40,-10,0.25)\nlon    = np.arange(-60,-40,0.25)\nplats  = np.array([-15.65,-25.25,-12.45])\nplons  = np.array([-35.20,-55.27,-30.10])\n\nindx,dists = nearest_point(lon,lat,plons,plats)\n```\n\nMuch more will be added in the future.\n\nEnjoy !\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/caiostringari/swantools", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "swantools", "package_url": "https://pypi.org/project/swantools/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/swantools/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/caiostringari/swantools"}, "release_url": "https://pypi.org/project/swantools/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Swan Utilities", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # swantools<br><br>This repository gathers some useful functions and tools to be used alongside SWAN wave model.<br><br>For downloading, installing  and using SWAN, please see: http://swanmodel.sourceforge.net/<br><br>To easily install the module just do:<br><br>```bash<br>sudo pip install swantools<br>```<br><br>alternatively, download the source code and install with:<br><br>```bash<br>sudo setup.py install<br>```<br><br>Nowadays, there is a I/O class which can handle TABLE, SPECOUT and BLOCK outputs. In the future, it will be possible to write spectral boundary conditions, TPAR files and initial conditions.<br><br>For example, to use the I/O structure for reading a TABLE with HEAD option do:<br><br>```python<br><br>import swantools<br><br>rw = swantools.SwanIO()<br><br>table = rw.read_swantable('file.txt')<br>```<br>This will return a pandas DataFrame with the model data.<br><br>Reading spectral (.spc) files become very easy:<br><br>```python<br><br>lon,lat,nfreqs,freqs,ndirs,dirs,spectra = rw.read_swanspc('file.txt','19990101.00000')<br>```<br><br>Some useful functions are also provided, for example:<br><br>```python<br><br>lat    = np.arange(-40,-10,0.25)<br>lon    = np.arange(-60,-40,0.25)<br>plats  = np.array([-15.65,-25.25,-12.45])<br>plons  = np.array([-35.20,-55.27,-30.10])<br><br>indx,dists = nearest_point(lon,lat,plons,plats)<br>```<br><br>Much more will be added in the future.<br><br>Enjoy !<br>\n          </div>"}, "last_serial": 1515413, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "84eab0122c46a19a12bba9a59f4ac485", "sha256": "7a6bf2fb883d9d439b79130dc427a438e93d6028414e45656ad50fd2a204d31b"}, "downloads": -1, "filename": "swantools-0.1.tar.gz", "has_sig": false, "md5_digest": "84eab0122c46a19a12bba9a59f4ac485", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3741, "upload_time": "2015-04-16T23:59:07", "upload_time_iso_8601": "2015-04-16T23:59:07.897235Z", "url": "https://files.pythonhosted.org/packages/a7/1b/d3904ef4e6f581990766fb7547a643325cded693392a26fe6e38c8017e24/swantools-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4e995543f7bd411a8c99a45a86e9223f", "sha256": "eafc6c97458b92094a9d3dcd43810044c4a722f0f082a4f0042dd433d237ec8d"}, "downloads": -1, "filename": "swantools-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4e995543f7bd411a8c99a45a86e9223f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4527, "upload_time": "2015-04-21T21:03:37", "upload_time_iso_8601": "2015-04-21T21:03:37.056042Z", "url": "https://files.pythonhosted.org/packages/5b/f3/ad1792906880f80745f3ce5c9ff714a978366fff7024f79c07d113bdcebf/swantools-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4e995543f7bd411a8c99a45a86e9223f", "sha256": "eafc6c97458b92094a9d3dcd43810044c4a722f0f082a4f0042dd433d237ec8d"}, "downloads": -1, "filename": "swantools-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4e995543f7bd411a8c99a45a86e9223f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4527, "upload_time": "2015-04-21T21:03:37", "upload_time_iso_8601": "2015-04-21T21:03:37.056042Z", "url": "https://files.pythonhosted.org/packages/5b/f3/ad1792906880f80745f3ce5c9ff714a978366fff7024f79c07d113bdcebf/swantools-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:41 2020"}