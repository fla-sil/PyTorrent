{"info": {"author": "Lecnim", "author_email": "lecnim@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Software Development :: Testing", "Topic :: Utilities"], "description": ".. figure:: https://github.com/lecnim/cutest.py/raw/master/images/example.png\n   :alt: Example terminal output\n\nSimple test source file powered by docstrings:\n\n.. code:: python\n\n    import cutest as unittest\n\n    class CoffeMachine(unittest.TestCase):\n        \"\"\"A good coffee machine\"\"\"\n\n        def test_success(self):\n            \"\"\"should makes hot drinks\"\"\"\n\n    class Dog(unittest.TestCase):\n        \"\"\"A typical dog\"\"\"\n\n        def test_barking(self):\n            \"\"\"should barks loudly\"\"\"\n        def test_tail(self):\n            \"\"\"has a tail\"\"\"\n            self.assertTrue(False)\n\n    class Cat(unittest.TestCase):\n        \"\"\"A typical cat\"\"\"\n\n        def test_meow(self):\n            \"\"\"can meow\"\"\"\n            print('an onomatopoeia for the voiced sound')\n        def test_fur(self):\n            \"\"\"has a fur\"\"\"\n\n    if __name__ == \"__main__\":\n        unittest.main()\n\n\nUsage\n-----\n\nImport and use it just like ``unittest`` package:\n\n.. code:: python\n\n    import cutest as unittest\n\n\nOr run and it will auto-discover available tests:\n\n.. code:: bash\n\n    $ python cutest.py\n\nYou can also test given file or package:\n\n.. code:: bash\n\n    $ python cutest.py my_test.py\n\n\nStandard minimalistic mode\n--------------------------\n\n\n.. code:: bash\n\n    $ python cutest.py\n\nOutput:\n\n.. figure:: https://github.com/lecnim/cutest.py/raw/master/images/minimal_success.png\n   :alt: Minimalistic mode\n\n\n\nVerbose mode\n------------\n\n.. code:: bash\n\n    $ python cutest.py -v\n\nOutput:\n\n.. figure:: https://github.com/lecnim/cutest.py/raw/master/images/verbose_success.png\n   :alt: Verbose mode", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lecnim/cutest.py", "keywords": "", "license": "LICENSE", "maintainer": "", "maintainer_email": "", "name": "cutest.py", "package_url": "https://pypi.org/project/cutest.py/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cutest.py/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/lecnim/cutest.py"}, "release_url": "https://pypi.org/project/cutest.py/0.9.1/", "requires_dist": null, "requires_python": null, "summary": "The colorful and beautiful terminal output of python unittest.", "version": "0.9.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<img alt=\"Example terminal output\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ebb6b40ec12c693cd16d7982fc7199ed204ebaa/68747470733a2f2f6769746875622e636f6d2f6c65636e696d2f6375746573742e70792f7261772f6d61737465722f696d616765732f6578616d706c652e706e67\">\n</div>\n<p>Simple test source file powered by docstrings:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cutest</span> <span class=\"k\">as</span> <span class=\"nn\">unittest</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CoffeMachine</span><span class=\"p\">(</span><span class=\"n\">unittest</span><span class=\"o\">.</span><span class=\"n\">TestCase</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"A good coffee machine\"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">test_success</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"should makes hot drinks\"\"\"</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Dog</span><span class=\"p\">(</span><span class=\"n\">unittest</span><span class=\"o\">.</span><span class=\"n\">TestCase</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"A typical dog\"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">test_barking</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"should barks loudly\"\"\"</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_tail</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"has a tail\"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertTrue</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Cat</span><span class=\"p\">(</span><span class=\"n\">unittest</span><span class=\"o\">.</span><span class=\"n\">TestCase</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"A typical cat\"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">test_meow</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"can meow\"\"\"</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'an onomatopoeia for the voiced sound'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_fur</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"has a fur\"\"\"</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">unittest</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Import and use it just like <tt>unittest</tt> package:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cutest</span> <span class=\"k\">as</span> <span class=\"nn\">unittest</span>\n</pre>\n<p>Or run and it will auto-discover available tests:</p>\n<pre>$ python cutest.py\n</pre>\n<p>You can also test given file or package:</p>\n<pre>$ python cutest.py my_test.py\n</pre>\n</div>\n<div id=\"standard-minimalistic-mode\">\n<h2>Standard minimalistic mode</h2>\n<pre>$ python cutest.py\n</pre>\n<p>Output:</p>\n<div>\n<img alt=\"Minimalistic mode\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0b31fbcdbbcd2bf56971a1d06769231162da005b/68747470733a2f2f6769746875622e636f6d2f6c65636e696d2f6375746573742e70792f7261772f6d61737465722f696d616765732f6d696e696d616c5f737563636573732e706e67\">\n</div>\n</div>\n<div id=\"verbose-mode\">\n<h2>Verbose mode</h2>\n<pre>$ python cutest.py -v\n</pre>\n<p>Output:</p>\n<div>\n<img alt=\"Verbose mode\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be8cc3b6f47c287d5445f6c0da45816c0d508451/68747470733a2f2f6769746875622e636f6d2f6c65636e696d2f6375746573742e70792f7261772f6d61737465722f696d616765732f766572626f73655f737563636573732e706e67\">\n</div>\n</div>\n\n          </div>"}, "last_serial": 1142728, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "1d94a1a32070907b3cc59cb229c9a890", "sha256": "22b6f9fa1e179895622fd6823a7f13271e0354a80d7cd242edb3fc93529aaead"}, "downloads": -1, "filename": "cutest.py-0.9.0.tar.gz", "has_sig": false, "md5_digest": "1d94a1a32070907b3cc59cb229c9a890", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5695, "upload_time": "2014-06-30T20:25:21", "upload_time_iso_8601": "2014-06-30T20:25:21.858089Z", "url": "https://files.pythonhosted.org/packages/10/28/a71abfd168effc1053226d3b3399341dc6f8f2054ca5d99890e9c119d6ea/cutest.py-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "40ec2286f593e252633fd73d93331c4c", "sha256": "0096216e62301eef825a8ac7048af4a429b2a30197438febc8c83c4328a8e215"}, "downloads": -1, "filename": "cutest.py-0.9.1.tar.gz", "has_sig": false, "md5_digest": "40ec2286f593e252633fd73d93331c4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5689, "upload_time": "2014-06-30T21:23:15", "upload_time_iso_8601": "2014-06-30T21:23:15.768558Z", "url": "https://files.pythonhosted.org/packages/43/91/00c6edfe841490049dc0ba590c9a28c708f86650315494f35135aeb5d99a/cutest.py-0.9.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "40ec2286f593e252633fd73d93331c4c", "sha256": "0096216e62301eef825a8ac7048af4a429b2a30197438febc8c83c4328a8e215"}, "downloads": -1, "filename": "cutest.py-0.9.1.tar.gz", "has_sig": false, "md5_digest": "40ec2286f593e252633fd73d93331c4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5689, "upload_time": "2014-06-30T21:23:15", "upload_time_iso_8601": "2014-06-30T21:23:15.768558Z", "url": "https://files.pythonhosted.org/packages/43/91/00c6edfe841490049dc0ba590c9a28c708f86650315494f35135aeb5d99a/cutest.py-0.9.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:16 2020"}