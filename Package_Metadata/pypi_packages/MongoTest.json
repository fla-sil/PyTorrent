{"info": {"author": "idbentley", "author_email": "ian.bentley@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "================\nMongoDB Test Util\n================\n\nThis library provides a handful of useful functionality for easing the testing\nof systems that rely on *MongoDB* as a datastore\n\n-------------------------\nStart and Teardown mongod\n-------------------------\n\nFor most use cases, you can use this snippet to startup a ``mongod`` instance\nfor your test environment::\n\n    from mongo_test.handlers import startup_handle\n    startup_handle()\n\nTo tear an instance down if one exists::\n\n    from mongo_test.handlers import teardown_handle\n    teardown_handle()\n\n--------\nFixtures\n--------\n\n*MongoTest* allows you to specify fixtures in *yaml*, with a few conveniences.\nA sample yaml file would look something like::\n\n    `user_fixture.yml`\n        configuration:\n            collection: users\n            drop: true\n        simple_user:\n            _id: !oid 1\n            username: idbentley\n            first_name: Ian\n            last_name: Bentley\n\n``!oid`` is a custom *yaml* constructor provided by *MongoTest*.  This constructor\nallows you to create object ids based on an integer seed.  You can access the\nconstructor directly from python, which allows you to write assertions on\ndocument identity::\n\n    from mongo_test.fixtures import oid_con\n    user = db.coll.find({name: 'ian.bentley@gmail.com'})\n    assert user['_id'] = oid_con(1)\n\n------------------\nA complete example\n------------------\n\nSee the tests for a complete simple example.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/idbentley/mongo_test", "keywords": "python MongoDB fixture test", "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "MongoTest", "package_url": "https://pypi.org/project/MongoTest/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/MongoTest/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/idbentley/mongo_test"}, "release_url": "https://pypi.org/project/MongoTest/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "A Python library to ease testing applications that rely on\n    MongoDB as a datastore", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            ================<br>MongoDB Test Util<br>================<br><br>This library provides a handful of useful functionality for easing the testing<br>of systems that rely on *MongoDB* as a datastore<br><br>-------------------------<br>Start and Teardown mongod<br>-------------------------<br><br>For most use cases, you can use this snippet to startup a ``mongod`` instance<br>for your test environment::<br><br>    from mongo_test.handlers import startup_handle<br>    startup_handle()<br><br>To tear an instance down if one exists::<br><br>    from mongo_test.handlers import teardown_handle<br>    teardown_handle()<br><br>--------<br>Fixtures<br>--------<br><br>*MongoTest* allows you to specify fixtures in *yaml*, with a few conveniences.<br>A sample yaml file would look something like::<br><br>    `user_fixture.yml`<br>        configuration:<br>            collection: users<br>            drop: true<br>        simple_user:<br>            _id: !oid 1<br>            username: idbentley<br>            first_name: Ian<br>            last_name: Bentley<br><br>``!oid`` is a custom *yaml* constructor provided by *MongoTest*.  This constructor<br>allows you to create object ids based on an integer seed.  You can access the<br>constructor directly from python, which allows you to write assertions on<br>document identity::<br><br>    from mongo_test.fixtures import oid_con<br>    user = db.coll.find({name: 'ian.bentley@gmail.com'})<br>    assert user['_id'] = oid_con(1)<br><br>------------------<br>A complete example<br>------------------<br><br>See the tests for a complete simple example.\n          </div>"}, "last_serial": 1213342, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "34c6513a61e361017e7003be51bfea66", "sha256": "e584f1d696f27923f76f9797a31b5347f411a4e40cc4030c70e0e0b44ffc13e3"}, "downloads": -1, "filename": "MongoTest-0.1.0.tar.gz", "has_sig": false, "md5_digest": "34c6513a61e361017e7003be51bfea66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3556, "upload_time": "2014-01-10T21:10:39", "upload_time_iso_8601": "2014-01-10T21:10:39.135846Z", "url": "https://files.pythonhosted.org/packages/93/a0/da9e363dab464b475ba83cda3a73c70011fa935bd86da337d4c6870db8f5/MongoTest-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ad882f421b0dd44b0471671f90c86e42", "sha256": "7ef84129876c3305272a635cc57705067f6f8a8fff5764fb2877a9fe4ccac29c"}, "downloads": -1, "filename": "MongoTest-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ad882f421b0dd44b0471671f90c86e42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3745, "upload_time": "2014-09-04T21:00:10", "upload_time_iso_8601": "2014-09-04T21:00:10.603058Z", "url": "https://files.pythonhosted.org/packages/da/f2/2cc94307b4b235f27f1e30846d49e55684d4591ccee9acf13d936f9dd99d/MongoTest-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ad882f421b0dd44b0471671f90c86e42", "sha256": "7ef84129876c3305272a635cc57705067f6f8a8fff5764fb2877a9fe4ccac29c"}, "downloads": -1, "filename": "MongoTest-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ad882f421b0dd44b0471671f90c86e42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3745, "upload_time": "2014-09-04T21:00:10", "upload_time_iso_8601": "2014-09-04T21:00:10.603058Z", "url": "https://files.pythonhosted.org/packages/da/f2/2cc94307b4b235f27f1e30846d49e55684d4591ccee9acf13d936f9dd99d/MongoTest-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:12 2020"}