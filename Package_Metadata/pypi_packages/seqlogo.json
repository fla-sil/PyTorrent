{"info": {"author": "Marcus D. Sherman", "author_email": "mdsherman@betteridiot.tech", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Unix", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Information Analysis"], "description": "[![PyPI version](https://badge.fury.io/py/seqlogo.svg)](https://pypi.org/project/seqlogo/)\n[![install with bioconda](https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat-square)](http://bioconda.github.io/recipes/seqlogo/README.html)\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://github.com/betteridiot/seqlogo/blob/master/LICENSE)\n</br>\n\n# seqlogo\nPython port of Bioconductor's [seqLogo](http://bioconductor.org/packages/release/bioc/html/seqLogo.html) served by [WebLogo](http://weblogo.threeplusone.com/)\n\n## Overview\n\nIn the field of bioinformatics, a common task is to look for sequence motifs at \ndifferent sites along the genome or within a protein sequence. One aspect of this\nanalysis involves creating a variant of a Position Matrix (PM): Position Frequency Matrix (PFM),\nPosition Probability Matrix (PPM), and Position Weight Matrix (PWM). The formal format for\na PWM file can be found [here](http://bioinformatics.intec.ugent.be/MotifSuite/pwmformat.php).\n\n---\n#### Specification\nA PM file can be just a plain text, whitespace delimited matrix, such that the number of columns\nmatches the number of letters in your desired alphabet and the number of rows is the number of positions\nin your sequence. Any comment lines that start with `#` will be skipped.\n\n*Note*: [TRANSFAC matrix](http://meme-suite.org/doc/transfac-format.html) and [MEME Motif](http://meme-suite.org/doc/meme-format.html) formats are not directly supported.\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\mathit{PWM}_{m,n}&space;=&space;\\begin{pmatrix}&space;a_{1,1}&space;&&space;a_{1,2}&space;&&space;\\cdots&space;&&space;a_{1,n}&space;\\\\&space;a_{2,1}&space;&&space;a_{2,2}&space;&&space;\\cdots&space;&&space;a_{2,n}&space;\\\\&space;\\vdots&space;&&space;\\vdots&space;&&space;\\ddots&space;&&space;\\vdots&space;\\\\&space;a_{m,1}&space;&&space;a_{m,2}&space;&&space;\\cdots&space;&&space;a_{m,n}&space;\\end{pmatrix}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\mathit{PWM}_{m,n}&space;=&space;\\begin{pmatrix}&space;a_{1,1}&space;&&space;a_{1,2}&space;&&space;\\cdots&space;&&space;a_{1,n}&space;\\\\&space;a_{2,1}&space;&&space;a_{2,2}&space;&&space;\\cdots&space;&&space;a_{2,n}&space;\\\\&space;\\vdots&space;&&space;\\vdots&space;&&space;\\ddots&space;&&space;\\vdots&space;\\\\&space;a_{m,1}&space;&&space;a_{m,2}&space;&&space;\\cdots&space;&&space;a_{m,n}&space;\\end{pmatrix}\" title=\"\\large \\mathit{PWM}_{m,n} = \\begin{pmatrix} a_{1,1} & a_{1,2} & \\cdots & a_{1,n} \\\\ a_{2,1} & a_{2,2} & \\cdots & a_{2,n} \\\\ \\vdots & \\vdots & \\ddots & \\vdots \\\\ a_{m,1} & a_{m,2} & \\cdots & a_{m,n} \\end{pmatrix}\" /></a>\n\nWhere <a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;a_{m,n}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/gif.latex?\\large&space;a_{m,n}\" title=\"\\large a_{m,n}\" /></a> is the probability that at <a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;m\" target=\"_blank\"><img src=\"https://latex.codecogs.com/gif.latex?\\large&space;m\" title=\"\\large m\" /></a> position, <a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;n\" target=\"_blank\"><img src=\"https://latex.codecogs.com/gif.latex?\\large&space;n\" title=\"\\large n\" /></a> letter is seen.\n\nThis is often generated in a frequentist fashion. If a pipeline\ntallies all observed letters at each position, this is called a Position Frequency Matrix (PFM).\n\nThe PFM can be converted to a PPM in a straight-forward manner, creating a matrix\nthat for any given position and letter, the probability of that letter at that position\nis reported.\n\nA PWM is the PPM converted into log-likelihood. Pseudocounts can be applied to prevent \nprobabilities of 0 from turing into -inf in the conversion process. Lastly, each position's\nlog-likelihood is corrected for some background probability for every given letter in the\nselected alphabet.\n\n---\n#### Features\n* `seqlogo` can use any PM as entry points for analysis (from a file or in array formats)\nand, subsequently, plot the sequence logos.\n\n* `seqlogo` was written to support BIOINF 529 :Bioinformatics Concepts and Algorithms\nat the University of Michigan in the Department of Computational Medicine & Bioinformatics.\n\n* `seqlogo` attempts to blend the user-friendly api of Bioconductor's [seqLogo](http://bioconductor.org/packages/release/bioc/html/seqLogo.html) \nand the rendering power of the [WebLogo](http://weblogo.threeplusone.com/)Python API.\n\n* `seqlogo` supports the following alphabets:\n\n    | Alphabet name |  Alphabet Letters |\n    | :--- |  :--- |\n    | **`\"DNA\"`** | `\"ACGT\"` |\n    | `\"reduced DNA\"` | `\"ACGTN-\"` |\n    | `\"ambig DNA\"` | `\"ACGTRYSWKMBDHVN-\"` |\n    | **`\"RNA\"`** | `\"ACGU\"` |\n    | `\"reduced RNA\"` | `\"ACGUN-\"` |\n    | `\"ambig RNA\"` | `\"ACGURYSWKMBDHVN-\"` |\n    | **`\"AA\"`** | `\"ACDEFGHIKLMNPQRSTVWY\"` |\n    | `\"reduced AA\"` | `\"ACDEFGHIKLMNPQRSTVWYX*-\"` |\n    | `\"ambig AA\"` | `\"ACDEFGHIKLMNOPQRSTUVWYBJZX*-\"` |\n    (**Bolded** alphabet names are the most commonly used)\n* `seqlogo` can also render sequence logos in a number of formats:\n    * `\"svg\"` (default)\n    * `\"eps\"`\n    * `\"pdf\"`\n    * `\"jpeg\"`\n    * `\"png\"`\n\n* All plots can be rendered in 4 different sizes:\n    * `\"small\"`: 3.54\" wide\n    * `\"medium\"`: 5\" wide\n    * `\"large\"`: 7.25\" wide\n    * `\"xlarge\"`: 10.25\" wide\n\n*Note*: all sizes taken from [this](http://www.sciencemag.org/sites/default/files/Figure_prep_guide.pdf) publication\nguide from Science Magazine.\n\n---\n#### Recommended settings:\n* For best results, implement `seqlogo` within a IPython/Jupyter environment (for inline plotting purposes).\n* Initially written for Python 3.7, but has shown to work in versions 3.5+ (**Python 2.7 is not supported**)\n\n***\n## Setup\n\n### Minimal Requirements:\n1. `numpy`\n2. `pandas`\n3. `weblogo`\n\n**Note**: it is strongly encouraged that `jupyter` is installed as well.\n\n---\n#### `conda` environment:\n\nTo produce the ideal virtual environment that will run `seqlogo` on a `conda`-based\nbuild, clone the repo or download the environment.yml within the repo. Then run the following\ncommand:\n\n```bash\n\n$ conda env create -f environment.yml\n\n```\n\n---\n#### Installation\n\nTo install using `pip`: (recommended)\n\n```bash\n\n$ pip install seqlogo\n\n```\n\nTo install using `conda`\n\n```bash\n\n$ conda install -c bioconda seqlogo\n\n```\n\n\nOr install from GitHub directly\n\n```bash\n\n$ pip install git+https://github.com/betteridiot/seqlogo.git#egg=seqlogo\n\n```\n\n***\n## Quickstart\n\n### Importing\n\n```python\n\nimport numpy as np\nimport pandas as pd\nimport seqlogo\n\n```\n\n### Generate some PM data (without frequency data)\n\nFor many demonstrations that speak to PWMs, they are often started with PPM data.\nMany packages preclude sequence logo generation from this entry point. However,\n`seqlogo` can handle it just fine. One point to make though is that if no count \ndata is provided, `seqlogo` just generates the PFM data by multiplying the\nprobabilities by 100. This is **only** for `weblogolib` compatability.\n\n```python\n\n# Setting seed for demonstration purposes\n>>> np.random.seed(42)\n\n# Making a fake PPM\n>>> random_ppm = np.random.dirichlet(np.ones(4), size=6)\n>>> ppm = seqlogo.Ppm(random_ppm)\n>>> ppm\n          A         C         G         T\n0  0.082197  0.527252  0.230641  0.159911\n1  0.070375  0.070363  0.024826  0.834435\n2  0.161962  0.216972  0.003665  0.617401\n3  0.735638  0.098290  0.082638  0.083434\n4  0.179898  0.368931  0.280463  0.170708\n5  0.498510  0.079138  0.182004  0.240349\n\n```\n\n### Generate some frequency data and convert to PWM\nSometimes the user has frequency data instead of PWM. To construct a `Pwm` instance\nthat automatically computes Information Content and PWM values, the user can use\nthe `seqlogo.pfm2pwm()` function.\n\n```python\n\n# Setting seed for demonstration purposes\n>>> np.random.seed(42)\n\n# Making some fake Position Frequency Data (PFM)\n>>> pfm = pd.DataFrame(np.random.randint(0, 36, size=(8, 4)))\n\n# Convert to Position Weight Matrix (PWM)\n>>> pwm = seqlogo.pfm2pwm(pfm)\n>>> pwm\n          A         C         G         T\n0  0.698830 -0.301170 -1.301170  0.213404\n1  0.263034  0.552541 -0.584962 -0.584962\n2  0.148523  0.754244  0.148523 -3.375039\n3  0.182864 -4.209453  0.314109  0.648528\n4 -4.000000  0.321928  1.000000 -0.540568\n5 -0.222392 -0.029747  0.085730  0.140178\n6  0.697437  0.597902 -2.209453 -0.624491\n7  0.736966 -0.584962  0.502500 -2.000000\n\n```\n\n### `seqlogo.CompletePm` demo\n\nHere is a quickstart guide on how to leverage the power of `seqlogo.CompletePm`\n\n```python\n\n# Setting seed for demonstration purposes\n>>> np.random.seed(42)\n\n# Making a fake PWM\n>>> random_ppm = np.random.dirichlet(np.ones(4), size=6)\n>>> cpm = seqlogo.CompletePM(ppm = random_ppm)\n\n# Pfm was imputed\n>>> print(cpm.pfm)\n    A   C   G   T\n0   8  52  23  15\n1   7   7   2  83\n2  16  21   0  61\n3  73   9   8   8\n4  17  36  28  17\n5  49   7  18  24\n\n# Shows the how the PPM data was formatted\n>>> print(cpm.ppm)\n          A         C         G         T\n0  0.082197  0.527252  0.230641  0.159911\n1  0.070375  0.070363  0.024826  0.834435\n2  0.161962  0.216972  0.003665  0.617401\n3  0.735638  0.098290  0.082638  0.083434\n4  0.179898  0.368931  0.280463  0.170708\n5  0.498510  0.079138  0.182004  0.240349\n\n# Computing the PWM using default background and pseudocounts\n>>> print(cpm.pwm)\n          A         C         G         T\n0 -1.604773  1.076564 -0.116281 -0.644662\n1 -1.828788 -1.829031 -3.331983  1.738871\n2 -0.626276 -0.204418 -6.091862  1.304279\n3  1.557068 -1.346815 -1.597049 -1.583223\n4 -0.474749  0.561423  0.165882 -0.550396\n5  0.995695 -1.659494 -0.457960 -0.056800\n\n# See the consensus sequence\n>>> print(cpm.consensus)\nCTTACA\n\n# See the Information Content\n>>> print(cpm.ic)\n0    0.305806\n1    1.110856\n2    0.637149\n3    0.748989\n4    0.074286\n5    0.268034\ndtype: float64\n\n```\n\n### Plot the sequence logo with information content scaling\n\n```python\n\n# Setting seed for demonstration purposes\n>>> np.random.seed(42)\n\n# Making a fake PWM\n>>> random_ppm = np.random.dirichlet(np.ones(4), size=6)\n>>> ppm = seqlogo.Ppm(random_ppm)\n>>> seqlogo.seqlogo(ppm, ic_scale = False, format = 'svg', size = 'medium')\n\n```\n\nThe above code will produce:\n\n![](https://github.com/betteridiot/seqlogo/blob/master/docs/figures/ic_scale.svg)\n\n\n### Plot the sequence logo with no information content scaling\n\n```python\n\n# Setting seed for demonstration purposes\n>>> np.random.seed(42)\n\n# Making a fake PWM\n>>> random_ppm = np.random.dirichlet(np.ones(4), size=6)\n>>> ppm = seqlogo.Ppm(random_ppm)\n>>> seqlogo.seqlogo(ppm, ic_scale = False, format = 'svg', size = 'medium')\n\n```\n\nThe above code will produce:\n\n![](https://github.com/betteridiot/seqlogo/blob/master/docs/figures/no_ic_scale.svg)\n\n***\n## Documentation\n\n`seqlogo` exposes 5 classes to the user for handling PM data:\n1. `seqlogo.Pm`: the base class for all other specialized PM subclasses\n2. `seqlogo.Pfm`: The class used for handling PFM data\n3. `seqlogo.Ppm`: The class used for handling PPM data\n4. `seqlogo.Pwm`: The class used for handling PWM data\n5. `seqlogo.CompletePm`: This final class will take any/all of the other PM subclass data\n    and compute any of the other missing data. That is, if the user only provides a `seqlogo.Pfm`\n    and passes it to `seqlogo.CompletePm`, it will solve for the PPM, PWM, consensus sequence, and\n    information content.\n\nAdditionally, `seqlogo` also provides 6 methods for converting PM structures:\n1. `seqlogo.pfm2ppm`: converts a PFM to a PPM\n2. `seqlogo.pfm2pwm`: converts a PFM to a PWM\n3. `seqlogo.ppm2pfm`: converts a PPM to a PFM\n4. `seqlogo.ppm2pwm`: converts a PPM to a PWM\n5. `seqlogo.pwm2pfm`: converts a PWM to a PFM\n6. `seqlogo.pwm2ppm`: converts a PWM to a PPM\n\nThe signatures for each item above are as follows:\n\n### Classes\n```python\n\nseqlogo.CompletePm(pfm = None, ppm = None, pwm = None, background = None, pseudocount = None,\n                 alphabet_type = 'DNA', alphabet = None, default_pm = 'ppm'):\n    \"\"\"\n    Creates the CompletePm instance. If the user does not define any `pm_filename_or_array`,\n    it will be initialized to empty. Will generate all other attributes as soon\n    as a `pm_filename_or_array` is supplied.\n\n    Args:\n        pfm (str or `numpy.ndarray` or `pandas.DataFrame` or Pm): The user supplied\n            PFM. If it is a filename, the file will be opened\n            and parsed. If it is an `numpy.ndarray` or `pandas.DataFrame`,\n            it will just be assigned. (default: None, skips '#' comment lines)\n        ppm (str or `numpy.ndarray` or `pandas.DataFrame` or Pm): The user supplied\n            PPM. If it is a filename, the file will be opened\n            and parsed. If it is an `numpy.ndarray` or `pandas.DataFrame`,\n            it will just be assigned. (default: None, skips '#' comment lines)\n        pwm (str or `numpy.ndarray` or `pandas.DataFrame` or Pm): The user supplied\n            PWM. If it is a filename, the file will be opened\n            and parsed. If it is an `numpy.ndarray` or `pandas.DataFrame`,\n            it will just be assigned. (default: None, skips '#' comment lines)\n        background (constant or Collection): Offsets used to calculate background letter probabilities (defaults: If \n            using an Nucleic Acid alphabet: 0.25; if using an Aminio Acid alphabet: Robinson-Robinson Frequencies)\n        pseudocount (constant): Some constant to offset PPM conversion to PWM to prevent -/+ inf. (defaults to 1e-10)\n        alphabet_type (str): Desired alphabet to use. Order matters (default: 'DNA')\n            \"DNA\" := \"ACGT\"\n            \"reduced DNA\" := \"ACGTN-\"\n            \"ambig DNA\" := \"ACGTRYSWKMBDHVN-\"\n            \"RNA\" := \"ACGU\"\n            \"reduced RNA\" := \"ACGUN-\"\n            \"ambig RNA\" := \"ACGURYSWKMBDHVN-\"\n            \"AA\" : = \"ACDEFGHIKLMNPQRSTVWY\"\n            \"reduced AA\" := \"ACDEFGHIKLMNPQRSTVWYX*-\"\n            \"ambig AA\" := \"ACDEFGHIKLMNOPQRSTUVWYBJZX*-\"\n            \"custom\" := None\n            (default: 'DNA')\n        alphabet (str): if 'custom' is selected or a specialize alphabet is desired, this accepts a string (default: None)\n        default_pm (str): which of the 3 pm's do you want to call '*home*'? (default: 'ppm')\n    \"\"\"\n\nseqlogo.Pm(pm_filename_or_array = None, pm_type = 'ppm', alphabet_type = 'DNA', alphabet = None, \n    background = None, pseudocount = None):\n    \"\"\"Initializes the Pm\n\n    Creates the Pm instance. If the user does not define `pm_filename_or_array`,\n    it will be initialized to empty. Will generate all other attributes as soon\n    as a `pm_filename_or_array` is supplied.\n\n    Args:\n        pm_filename_or_array (str or `numpy.ndarray` or `pandas.DataFrame` or Pm): The user supplied\n            PM. If it is a filename, the file will be opened\n            and parsed. If it is an `numpy.ndarray` or `pandas.DataFrame`,\n            it will just be assigned. (default: None, skips '#' comment lines)\n        alphabet_type (str): Desired alphabet to use. Order matters (default: 'DNA')\n            \"DNA\" := \"ACGT\"\n            \"reduced DNA\" := \"ACGTN-\"\n            \"ambig DNA\" := \"ACGTRYSWKMBDHVN-\"\n            \"RNA\" := \"ACGU\"\n            \"reduced RNA\" := \"ACGUN-\"\n            \"ambig RNA\" := \"ACGURYSWKMBDHVN-\"\n            \"AA\" : = \"ACDEFGHIKLMNPQRSTVWY\"\n            \"reduced AA\" := \"ACDEFGHIKLMNPQRSTVWYX*-\"\n            \"ambig AA\" := \"ACDEFGHIKLMNOPQRSTUVWYBJZX*-\"\n            \"custom\" := None\n            (default: 'DNA')\n        alphabet (str): if 'custom' is selected or a specialize alphabet is desired, this accepts a string (default: None)\n        background (constant or Collection): Offsets used to calculate background letter probabilities (defaults: If \n            using an Nucleic Acid alphabet: 0.25; if using an Aminio Acid alphabet: Robinson-Robinson Frequencies)\n        pseudocount (constant): Some constant to offset PPM conversion to PWM to prevent -/+ inf. (default: 1e-10)\n    \"\"\"\n\nseqlogo.Pfm(pfm_filename_or_array = None, pm_type = 'pfm', alphabet_type = 'DNA', alphabet = None, \n    background = None, pseudocount = None):\n    \"\"\"Initializes the Pfm\n\n    Creates the Pfm instance. If the user does not define `pfm_filename_or_array`,\n    it will be initialized to empty. Will generate all other attributes as soon\n    as a `pfm_filename_or_array` is supplied.\n\n    Args:\n        pfm_filename_or_array (str or `numpy.ndarray` or `pandas.DataFrame` or Pm): The user supplied\n            PFM. If it is a filename, the file will be opened\n            and parsed. If it is an `numpy.ndarray` or `pandas.DataFrame`,\n            it will just be assigned. (default: None, skips '#' comment lines)\n        alphabet_type (str): Desired alphabet to use. Order matters (default: 'DNA')\n            \"DNA\" := \"ACGT\"\n            \"reduced DNA\" := \"ACGTN-\"\n            \"ambig DNA\" := \"ACGTRYSWKMBDHVN-\"\n            \"RNA\" := \"ACGU\"\n            \"reduced RNA\" := \"ACGUN-\"\n            \"ambig RNA\" := \"ACGURYSWKMBDHVN-\"\n            \"AA\" : = \"ACDEFGHIKLMNPQRSTVWY\"\n            \"reduced AA\" := \"ACDEFGHIKLMNPQRSTVWYX*-\"\n            \"ambig AA\" := \"ACDEFGHIKLMNOPQRSTUVWYBJZX*-\"\n            \"custom\" := None\n            (default: 'DNA')\n        alphabet (str): if 'custom' is selected or a specialize alphabet is desired, this accepts a string (default: None)\n        background (constant or Collection): Offsets used to calculate background letter probabilities (defaults: If \n            using an Nucleic Acid alphabet: 0.25; if using an Aminio Acid alphabet: Robinson-Robinson Frequencies)\n        pseudocount (constant): Some constant to offset PPM conversion to PWM to prevent -/+ inf. (default: 1e-10)\n    \"\"\"\n\nseqlogo.Ppm(ppm_filename_or_array = None, pm_type = 'ppm', alphabet_type = 'DNA', alphabet = None, \n    background = None, pseudocount = None):\n    \"\"\"Initializes the Ppm\n\n    Creates the Ppm instance. If the user does not define `ppm_filename_or_array`,\n    it will be initialized to empty. Will generate all other attributes as soon\n    as a `ppm_filename_or_array` is supplied.\n\n    Args:\n        ppm_filename_or_array (str or `numpy.ndarray` or `pandas.DataFrame` or Pm): The user supplied\n            PPM. If it is a filename, the file will be opened\n            and parsed. If it is an `numpy.ndarray` or `pandas.DataFrame`,\n            it will just be assigned. (default: None, skips '#' comment lines)\n        alphabet_type (str): Desired alphabet to use. Order matters (default: 'DNA')\n            \"DNA\" := \"ACGT\"\n            \"reduced DNA\" := \"ACGTN-\"\n            \"ambig DNA\" := \"ACGTRYSWKMBDHVN-\"\n            \"RNA\" := \"ACGU\"\n            \"reduced RNA\" := \"ACGUN-\"\n            \"ambig RNA\" := \"ACGURYSWKMBDHVN-\"\n            \"AA\" : = \"ACDEFGHIKLMNPQRSTVWY\"\n            \"reduced AA\" := \"ACDEFGHIKLMNPQRSTVWYX*-\"\n            \"ambig AA\" := \"ACDEFGHIKLMNOPQRSTUVWYBJZX*-\"\n            \"custom\" := None\n            (default: 'DNA')\n        alphabet (str): if 'custom' is selected or a specialize alphabet is desired, this accepts a string (default: None)\n        background (constant or Collection): Offsets used to calculate background letter probabilities (defaults: If \n            using an Nucleic Acid alphabet: 0.25; if using an Aminio Acid alphabet: Robinson-Robinson Frequencies)\n        pseudocount (constant): Some constant to offset PPM conversion to PWM to prevent -/+ inf. (default: 1e-10)\n   \"\"\"\n   \nseqlogo.Pwm(pwm_filename_or_array = None, pm_type = 'pwm', alphabet_type = 'DNA', alphabet = None, \n    background = None, pseudocount = None):\n    \"\"\"Initializes the Pwm\n\n    Creates the Pwm instance. If the user does not define `pwm_filename_or_array`,\n    it will be initialized to empty. Will generate all other attributes as soon\n    as a `pwm_filename_or_array` is supplied.\n\n    Args:\n        pwm_filename_or_array (str or `numpy.ndarray` or `pandas.DataFrame` or Pm): The user supplied\n            PWM. If it is a filename, the file will be opened\n            and parsed. If it is an `numpy.ndarray` or `pandas.DataFrame`,\n            it will just be assigned. (default: None, skips '#' comment lines)\n        alphabet_type (str): Desired alphabet to use. Order matters (default: 'DNA')\n            \"DNA\" := \"ACGT\"\n            \"reduced DNA\" := \"ACGTN-\"\n            \"ambig DNA\" := \"ACGTRYSWKMBDHVN-\"\n            \"RNA\" := \"ACGU\"\n            \"reduced RNA\" := \"ACGUN-\"\n            \"ambig RNA\" := \"ACGURYSWKMBDHVN-\"\n            \"AA\" : = \"ACDEFGHIKLMNPQRSTVWY\"\n            \"reduced AA\" := \"ACDEFGHIKLMNPQRSTVWYX*-\"\n            \"ambig AA\" := \"ACDEFGHIKLMNOPQRSTUVWYBJZX*-\"\n            \"custom\" := None\n            (default: 'DNA')\n        alphabet (str): if 'custom' is selected or a specialize alphabet is desired, this accepts a string (default: None)\n        background (constant or Collection): Offsets used to calculate background letter probabilities (defaults: If \n            using an Nucleic Acid alphabet: 0.25; if using an Aminio Acid alphabet: Robinson-Robinson Frequencies)\n        pseudocount (constant): Some constant to offset PPM conversion to PWM to prevent -/+ inf. (default: 1e-10)\n   \"\"\"\n   \n```\n\n### Conversion Methods\n\n```python\n\nseqlogo.pfm2ppm(pfm):\n    \"\"\"Converts a Pfm to a ppm array\n\n    Args:\n        pfm (Pfm): a fully initialized Pfm\n\n    Returns:\n        (np.array): converted values\n    \"\"\"\n    \nseqlogo.pfm2pwm(pfm, background = None, pseudocount = None):\n    \"\"\"Converts a Pfm to a pwm array\n\n    Args:\n        pfm (Pfm): a fully initialized Pfm\n        background: accounts for relative weights from background. Must be a constant or same number of columns as Pwm (default: None)\n        pseudocount (const): The number used to offset log-likelihood conversion from probabilites (default: None -> 1e-10)\n\n    Returns:\n        (np.array): converted values\n    \"\"\"\n\nseqlogo.ppm2pfm(ppm):\n    \"\"\"Converts a Ppm to a pfm array\n\n    Args:\n        ppm (Ppm): a fully initialized Ppm\n\n    Returns:\n        (np.array): converted values\n    \"\"\"\n\nseqlogo.ppm2pwm(ppm, background= None, pseudocount = None):\n    \"\"\"Converts a Ppm to a pwm array\n\n    Args:\n        ppm (Ppm): a fully initialized Ppm\n        background: accounts for relative weights from background. Must be a constant or same number of columns as Pwm (default: None)\n        pseudocount (const): The number used to offset log-likelihood conversion from probabilites (default: None -> 1e-10)\n\n    Returns:\n        (np.array): converted values\n\n    Raises:\n        ValueError: if the pseudocount isn't a constant or the same length as sequence\n    \"\"\"\n\nseqlogo.pwm2pfm(pwm, background = None, pseudocount = None):\n    \"\"\"Converts a Pwm to a pfm array\n\n    Args:\n        pwm (Pwm): a fully initialized Pwm\n        background: accounts for relative weights from background. Must be a constant or same number of columns as Pwm (default: None)\n        pseudocount (const): The number used to offset log-likelihood conversion from probabilites (default: None -> 1e-10)\n\n    Returns:\n        (np.array): converted values\n    \"\"\"\n\nseqlogo.pwm2ppm(pwm, background = None, pseudocount = None):\n    \"\"\"Converts a Pwm to a ppm array\n\n    Args:\n        pwm (Pwm): a fully initialized Pwm\n        background: accounts for relative weights from background. Must be a constant or same number of columns as Pwm (default: None)\n        pseudocount (const): The number used to offset log-likelihood conversion from probabilites (default: None -> 1e-10)\n\n    Returns:\n        (np.array): converted values\n\n    Raises:\n        ValueError: if the pseudocount isn't a constant or the same length as sequence\n    \"\"\"\n    \n```\n\n***\n## Contributing\n\nPlease see our contribution guidelines [here](https://github.com/betteridiot/seqlogo/blob/master/CONTRIBUTING.md)\n\n***\n## Acknowledgments\n\n1. Bembom O (2018). seqlogo: Sequence logos for DNA sequence alignments. R package version 1.48.0.\n2. Crooks GE, Hon G, Chandonia JM, Brenner SE WebLogo: A sequence logo generator,\nGenome Research, 14:1188-1190, (2004).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/betteridiot/seqlogo", "keywords": "sequence logo seqlogo bioinformatics genomics weblogo", "license": "BSD 3-Clause", "maintainer": "", "maintainer_email": "", "name": "seqlogo", "package_url": "https://pypi.org/project/seqlogo/", "platform": "", "project_url": "https://pypi.org/project/seqlogo/", "project_urls": {"Homepage": "https://github.com/betteridiot/seqlogo"}, "release_url": "https://pypi.org/project/seqlogo/5.29.7/", "requires_dist": null, "requires_python": "", "summary": "Python port of the R Bioconductor `seqlogo` package", "version": "5.29.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/seqlogo/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cfe7f3fcfa337537a5a9a89114af88b71f106e88/68747470733a2f2f62616467652e667572792e696f2f70792f7365716c6f676f2e737667\"></a>\n<a href=\"http://bioconda.github.io/recipes/seqlogo/README.html\" rel=\"nofollow\"><img alt=\"install with bioconda\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/46594aa9d755bed29a0b8f0a7ca2fa8dba131a8d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f696e7374616c6c253230776974682d62696f636f6e64612d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://github.com/betteridiot/seqlogo/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/110fcca60a43a8ea37b1a5bda616e639325f2f30/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d425344253230332d2d436c617573652d626c75652e737667\"></a>\n<br></p>\n<h1>seqlogo</h1>\n<p>Python port of Bioconductor's <a href=\"http://bioconductor.org/packages/release/bioc/html/seqLogo.html\" rel=\"nofollow\">seqLogo</a> served by <a href=\"http://weblogo.threeplusone.com/\" rel=\"nofollow\">WebLogo</a></p>\n<h2>Overview</h2>\n<p>In the field of bioinformatics, a common task is to look for sequence motifs at\ndifferent sites along the genome or within a protein sequence. One aspect of this\nanalysis involves creating a variant of a Position Matrix (PM): Position Frequency Matrix (PFM),\nPosition Probability Matrix (PPM), and Position Weight Matrix (PWM). The formal format for\na PWM file can be found <a href=\"http://bioinformatics.intec.ugent.be/MotifSuite/pwmformat.php\" rel=\"nofollow\">here</a>.</p>\n<hr>\n<h4>Specification</h4>\n<p>A PM file can be just a plain text, whitespace delimited matrix, such that the number of columns\nmatches the number of letters in your desired alphabet and the number of rows is the number of positions\nin your sequence. Any comment lines that start with <code>#</code> will be skipped.</p>\n<p><em>Note</em>: <a href=\"http://meme-suite.org/doc/transfac-format.html\" rel=\"nofollow\">TRANSFAC matrix</a> and <a href=\"http://meme-suite.org/doc/meme-format.html\" rel=\"nofollow\">MEME Motif</a> formats are not directly supported.</p>\n<p><a href=\"https://www.codecogs.com/eqnedit.php?latex=%5Clarge&amp;space;%5Cmathit%7BPWM%7D_%7Bm,n%7D&amp;space;=&amp;space;%5Cbegin%7Bpmatrix%7D&amp;space;a_%7B1,1%7D&amp;space;&amp;&amp;space;a_%7B1,2%7D&amp;space;&amp;&amp;space;%5Ccdots&amp;space;&amp;&amp;space;a_%7B1,n%7D&amp;space;%5C%5C&amp;space;a_%7B2,1%7D&amp;space;&amp;&amp;space;a_%7B2,2%7D&amp;space;&amp;&amp;space;%5Ccdots&amp;space;&amp;&amp;space;a_%7B2,n%7D&amp;space;%5C%5C&amp;space;%5Cvdots&amp;space;&amp;&amp;space;%5Cvdots&amp;space;&amp;&amp;space;%5Cddots&amp;space;&amp;&amp;space;%5Cvdots&amp;space;%5C%5C&amp;space;a_%7Bm,1%7D&amp;space;&amp;&amp;space;a_%7Bm,2%7D&amp;space;&amp;&amp;space;%5Ccdots&amp;space;&amp;&amp;space;a_%7Bm,n%7D&amp;space;%5Cend%7Bpmatrix%7D\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e0c4bdd37255d718015dcac1a231f939c4833cd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f5c6c617267652673706163653b5c6d61746869747b50574d7d5f7b6d2c6e7d2673706163653b3d2673706163653b5c626567696e7b706d61747269787d2673706163653b615f7b312c317d2673706163653b262673706163653b615f7b312c327d2673706163653b262673706163653b5c63646f74732673706163653b262673706163653b615f7b312c6e7d2673706163653b5c5c2673706163653b615f7b322c317d2673706163653b262673706163653b615f7b322c327d2673706163653b262673706163653b5c63646f74732673706163653b262673706163653b615f7b322c6e7d2673706163653b5c5c2673706163653b5c76646f74732673706163653b262673706163653b5c76646f74732673706163653b262673706163653b5c64646f74732673706163653b262673706163653b5c76646f74732673706163653b5c5c2673706163653b615f7b6d2c317d2673706163653b262673706163653b615f7b6d2c327d2673706163653b262673706163653b5c63646f74732673706163653b262673706163653b615f7b6d2c6e7d2673706163653b5c656e647b706d61747269787d\"></a></p>\n<p>Where <a href=\"https://www.codecogs.com/eqnedit.php?latex=%5Clarge&amp;space;a_%7Bm,n%7D\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/15149060a91da820608a041b62f78ddbea48ed10/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f5c6c617267652673706163653b615f7b6d2c6e7d\"></a> is the probability that at <a href=\"https://www.codecogs.com/eqnedit.php?latex=%5Clarge&amp;space;m\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd6fce48023842b70f96aa2a22dcc0a5094b4a23/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f5c6c617267652673706163653b6d\"></a> position, <a href=\"https://www.codecogs.com/eqnedit.php?latex=%5Clarge&amp;space;n\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d9fdc275dec0948d6ef9ecc0775b16254da37533/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f5c6c617267652673706163653b6e\"></a> letter is seen.</p>\n<p>This is often generated in a frequentist fashion. If a pipeline\ntallies all observed letters at each position, this is called a Position Frequency Matrix (PFM).</p>\n<p>The PFM can be converted to a PPM in a straight-forward manner, creating a matrix\nthat for any given position and letter, the probability of that letter at that position\nis reported.</p>\n<p>A PWM is the PPM converted into log-likelihood. Pseudocounts can be applied to prevent\nprobabilities of 0 from turing into -inf in the conversion process. Lastly, each position's\nlog-likelihood is corrected for some background probability for every given letter in the\nselected alphabet.</p>\n<hr>\n<h4>Features</h4>\n<ul>\n<li>\n<p><code>seqlogo</code> can use any PM as entry points for analysis (from a file or in array formats)\nand, subsequently, plot the sequence logos.</p>\n</li>\n<li>\n<p><code>seqlogo</code> was written to support BIOINF 529 :Bioinformatics Concepts and Algorithms\nat the University of Michigan in the Department of Computational Medicine &amp; Bioinformatics.</p>\n</li>\n<li>\n<p><code>seqlogo</code> attempts to blend the user-friendly api of Bioconductor's <a href=\"http://bioconductor.org/packages/release/bioc/html/seqLogo.html\" rel=\"nofollow\">seqLogo</a>\nand the rendering power of the <a href=\"http://weblogo.threeplusone.com/\" rel=\"nofollow\">WebLogo</a>Python API.</p>\n</li>\n<li>\n<p><code>seqlogo</code> supports the following alphabets:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Alphabet name</th>\n<th align=\"left\">Alphabet Letters</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><strong><code>\"DNA\"</code></strong></td>\n<td align=\"left\"><code>\"ACGT\"</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>\"reduced DNA\"</code></td>\n<td align=\"left\"><code>\"ACGTN-\"</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>\"ambig DNA\"</code></td>\n<td align=\"left\"><code>\"ACGTRYSWKMBDHVN-\"</code></td>\n</tr>\n<tr>\n<td align=\"left\"><strong><code>\"RNA\"</code></strong></td>\n<td align=\"left\"><code>\"ACGU\"</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>\"reduced RNA\"</code></td>\n<td align=\"left\"><code>\"ACGUN-\"</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>\"ambig RNA\"</code></td>\n<td align=\"left\"><code>\"ACGURYSWKMBDHVN-\"</code></td>\n</tr>\n<tr>\n<td align=\"left\"><strong><code>\"AA\"</code></strong></td>\n<td align=\"left\"><code>\"ACDEFGHIKLMNPQRSTVWY\"</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>\"reduced AA\"</code></td>\n<td align=\"left\"><code>\"ACDEFGHIKLMNPQRSTVWYX*-\"</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>\"ambig AA\"</code></td>\n<td align=\"left\"><code>\"ACDEFGHIKLMNOPQRSTUVWYBJZX*-\"</code></td>\n</tr>\n<tr>\n<td align=\"left\">(<strong>Bolded</strong> alphabet names are the most commonly used)</td>\n<td align=\"left\"></td>\n</tr></tbody></table>\n</li>\n<li>\n<p><code>seqlogo</code> can also render sequence logos in a number of formats:</p>\n<ul>\n<li><code>\"svg\"</code> (default)</li>\n<li><code>\"eps\"</code></li>\n<li><code>\"pdf\"</code></li>\n<li><code>\"jpeg\"</code></li>\n<li><code>\"png\"</code></li>\n</ul>\n</li>\n<li>\n<p>All plots can be rendered in 4 different sizes:</p>\n<ul>\n<li><code>\"small\"</code>: 3.54\" wide</li>\n<li><code>\"medium\"</code>: 5\" wide</li>\n<li><code>\"large\"</code>: 7.25\" wide</li>\n<li><code>\"xlarge\"</code>: 10.25\" wide</li>\n</ul>\n</li>\n</ul>\n<p><em>Note</em>: all sizes taken from <a href=\"http://www.sciencemag.org/sites/default/files/Figure_prep_guide.pdf\" rel=\"nofollow\">this</a> publication\nguide from Science Magazine.</p>\n<hr>\n<h4>Recommended settings:</h4>\n<ul>\n<li>For best results, implement <code>seqlogo</code> within a IPython/Jupyter environment (for inline plotting purposes).</li>\n<li>Initially written for Python 3.7, but has shown to work in versions 3.5+ (<strong>Python 2.7 is not supported</strong>)</li>\n</ul>\n<hr>\n<h2>Setup</h2>\n<h3>Minimal Requirements:</h3>\n<ol>\n<li><code>numpy</code></li>\n<li><code>pandas</code></li>\n<li><code>weblogo</code></li>\n</ol>\n<p><strong>Note</strong>: it is strongly encouraged that <code>jupyter</code> is installed as well.</p>\n<hr>\n<h4><code>conda</code> environment:</h4>\n<p>To produce the ideal virtual environment that will run <code>seqlogo</code> on a <code>conda</code>-based\nbuild, clone the repo or download the environment.yml within the repo. Then run the following\ncommand:</p>\n<pre>$ conda env create -f environment.yml\n</pre>\n<hr>\n<h4>Installation</h4>\n<p>To install using <code>pip</code>: (recommended)</p>\n<pre>$ pip install seqlogo\n</pre>\n<p>To install using <code>conda</code></p>\n<pre>$ conda install -c bioconda seqlogo\n</pre>\n<p>Or install from GitHub directly</p>\n<pre>$ pip install git+https://github.com/betteridiot/seqlogo.git#egg<span class=\"o\">=</span>seqlogo\n</pre>\n<hr>\n<h2>Quickstart</h2>\n<h3>Importing</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">seqlogo</span>\n</pre>\n<h3>Generate some PM data (without frequency data)</h3>\n<p>For many demonstrations that speak to PWMs, they are often started with PPM data.\nMany packages preclude sequence logo generation from this entry point. However,\n<code>seqlogo</code> can handle it just fine. One point to make though is that if no count\ndata is provided, <code>seqlogo</code> just generates the PFM data by multiplying the\nprobabilities by 100. This is <strong>only</strong> for <code>weblogolib</code> compatability.</p>\n<pre><span class=\"c1\"># Setting seed for demonstration purposes</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Making a fake PPM</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">random_ppm</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">dirichlet</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ppm</span> <span class=\"o\">=</span> <span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">Ppm</span><span class=\"p\">(</span><span class=\"n\">random_ppm</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ppm</span>\n          <span class=\"n\">A</span>         <span class=\"n\">C</span>         <span class=\"n\">G</span>         <span class=\"n\">T</span>\n<span class=\"mi\">0</span>  <span class=\"mf\">0.082197</span>  <span class=\"mf\">0.527252</span>  <span class=\"mf\">0.230641</span>  <span class=\"mf\">0.159911</span>\n<span class=\"mi\">1</span>  <span class=\"mf\">0.070375</span>  <span class=\"mf\">0.070363</span>  <span class=\"mf\">0.024826</span>  <span class=\"mf\">0.834435</span>\n<span class=\"mi\">2</span>  <span class=\"mf\">0.161962</span>  <span class=\"mf\">0.216972</span>  <span class=\"mf\">0.003665</span>  <span class=\"mf\">0.617401</span>\n<span class=\"mi\">3</span>  <span class=\"mf\">0.735638</span>  <span class=\"mf\">0.098290</span>  <span class=\"mf\">0.082638</span>  <span class=\"mf\">0.083434</span>\n<span class=\"mi\">4</span>  <span class=\"mf\">0.179898</span>  <span class=\"mf\">0.368931</span>  <span class=\"mf\">0.280463</span>  <span class=\"mf\">0.170708</span>\n<span class=\"mi\">5</span>  <span class=\"mf\">0.498510</span>  <span class=\"mf\">0.079138</span>  <span class=\"mf\">0.182004</span>  <span class=\"mf\">0.240349</span>\n</pre>\n<h3>Generate some frequency data and convert to PWM</h3>\n<p>Sometimes the user has frequency data instead of PWM. To construct a <code>Pwm</code> instance\nthat automatically computes Information Content and PWM values, the user can use\nthe <code>seqlogo.pfm2pwm()</code> function.</p>\n<pre><span class=\"c1\"># Setting seed for demonstration purposes</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Making some fake Position Frequency Data (PFM)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pfm</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Convert to Position Weight Matrix (PWM)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pwm</span> <span class=\"o\">=</span> <span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">pfm2pwm</span><span class=\"p\">(</span><span class=\"n\">pfm</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pwm</span>\n          <span class=\"n\">A</span>         <span class=\"n\">C</span>         <span class=\"n\">G</span>         <span class=\"n\">T</span>\n<span class=\"mi\">0</span>  <span class=\"mf\">0.698830</span> <span class=\"o\">-</span><span class=\"mf\">0.301170</span> <span class=\"o\">-</span><span class=\"mf\">1.301170</span>  <span class=\"mf\">0.213404</span>\n<span class=\"mi\">1</span>  <span class=\"mf\">0.263034</span>  <span class=\"mf\">0.552541</span> <span class=\"o\">-</span><span class=\"mf\">0.584962</span> <span class=\"o\">-</span><span class=\"mf\">0.584962</span>\n<span class=\"mi\">2</span>  <span class=\"mf\">0.148523</span>  <span class=\"mf\">0.754244</span>  <span class=\"mf\">0.148523</span> <span class=\"o\">-</span><span class=\"mf\">3.375039</span>\n<span class=\"mi\">3</span>  <span class=\"mf\">0.182864</span> <span class=\"o\">-</span><span class=\"mf\">4.209453</span>  <span class=\"mf\">0.314109</span>  <span class=\"mf\">0.648528</span>\n<span class=\"mi\">4</span> <span class=\"o\">-</span><span class=\"mf\">4.000000</span>  <span class=\"mf\">0.321928</span>  <span class=\"mf\">1.000000</span> <span class=\"o\">-</span><span class=\"mf\">0.540568</span>\n<span class=\"mi\">5</span> <span class=\"o\">-</span><span class=\"mf\">0.222392</span> <span class=\"o\">-</span><span class=\"mf\">0.029747</span>  <span class=\"mf\">0.085730</span>  <span class=\"mf\">0.140178</span>\n<span class=\"mi\">6</span>  <span class=\"mf\">0.697437</span>  <span class=\"mf\">0.597902</span> <span class=\"o\">-</span><span class=\"mf\">2.209453</span> <span class=\"o\">-</span><span class=\"mf\">0.624491</span>\n<span class=\"mi\">7</span>  <span class=\"mf\">0.736966</span> <span class=\"o\">-</span><span class=\"mf\">0.584962</span>  <span class=\"mf\">0.502500</span> <span class=\"o\">-</span><span class=\"mf\">2.000000</span>\n</pre>\n<h3><code>seqlogo.CompletePm</code> demo</h3>\n<p>Here is a quickstart guide on how to leverage the power of <code>seqlogo.CompletePm</code></p>\n<pre><span class=\"c1\"># Setting seed for demonstration purposes</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Making a fake PWM</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">random_ppm</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">dirichlet</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cpm</span> <span class=\"o\">=</span> <span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">CompletePM</span><span class=\"p\">(</span><span class=\"n\">ppm</span> <span class=\"o\">=</span> <span class=\"n\">random_ppm</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Pfm was imputed</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cpm</span><span class=\"o\">.</span><span class=\"n\">pfm</span><span class=\"p\">)</span>\n    <span class=\"n\">A</span>   <span class=\"n\">C</span>   <span class=\"n\">G</span>   <span class=\"n\">T</span>\n<span class=\"mi\">0</span>   <span class=\"mi\">8</span>  <span class=\"mi\">52</span>  <span class=\"mi\">23</span>  <span class=\"mi\">15</span>\n<span class=\"mi\">1</span>   <span class=\"mi\">7</span>   <span class=\"mi\">7</span>   <span class=\"mi\">2</span>  <span class=\"mi\">83</span>\n<span class=\"mi\">2</span>  <span class=\"mi\">16</span>  <span class=\"mi\">21</span>   <span class=\"mi\">0</span>  <span class=\"mi\">61</span>\n<span class=\"mi\">3</span>  <span class=\"mi\">73</span>   <span class=\"mi\">9</span>   <span class=\"mi\">8</span>   <span class=\"mi\">8</span>\n<span class=\"mi\">4</span>  <span class=\"mi\">17</span>  <span class=\"mi\">36</span>  <span class=\"mi\">28</span>  <span class=\"mi\">17</span>\n<span class=\"mi\">5</span>  <span class=\"mi\">49</span>   <span class=\"mi\">7</span>  <span class=\"mi\">18</span>  <span class=\"mi\">24</span>\n\n<span class=\"c1\"># Shows the how the PPM data was formatted</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cpm</span><span class=\"o\">.</span><span class=\"n\">ppm</span><span class=\"p\">)</span>\n          <span class=\"n\">A</span>         <span class=\"n\">C</span>         <span class=\"n\">G</span>         <span class=\"n\">T</span>\n<span class=\"mi\">0</span>  <span class=\"mf\">0.082197</span>  <span class=\"mf\">0.527252</span>  <span class=\"mf\">0.230641</span>  <span class=\"mf\">0.159911</span>\n<span class=\"mi\">1</span>  <span class=\"mf\">0.070375</span>  <span class=\"mf\">0.070363</span>  <span class=\"mf\">0.024826</span>  <span class=\"mf\">0.834435</span>\n<span class=\"mi\">2</span>  <span class=\"mf\">0.161962</span>  <span class=\"mf\">0.216972</span>  <span class=\"mf\">0.003665</span>  <span class=\"mf\">0.617401</span>\n<span class=\"mi\">3</span>  <span class=\"mf\">0.735638</span>  <span class=\"mf\">0.098290</span>  <span class=\"mf\">0.082638</span>  <span class=\"mf\">0.083434</span>\n<span class=\"mi\">4</span>  <span class=\"mf\">0.179898</span>  <span class=\"mf\">0.368931</span>  <span class=\"mf\">0.280463</span>  <span class=\"mf\">0.170708</span>\n<span class=\"mi\">5</span>  <span class=\"mf\">0.498510</span>  <span class=\"mf\">0.079138</span>  <span class=\"mf\">0.182004</span>  <span class=\"mf\">0.240349</span>\n\n<span class=\"c1\"># Computing the PWM using default background and pseudocounts</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cpm</span><span class=\"o\">.</span><span class=\"n\">pwm</span><span class=\"p\">)</span>\n          <span class=\"n\">A</span>         <span class=\"n\">C</span>         <span class=\"n\">G</span>         <span class=\"n\">T</span>\n<span class=\"mi\">0</span> <span class=\"o\">-</span><span class=\"mf\">1.604773</span>  <span class=\"mf\">1.076564</span> <span class=\"o\">-</span><span class=\"mf\">0.116281</span> <span class=\"o\">-</span><span class=\"mf\">0.644662</span>\n<span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"mf\">1.828788</span> <span class=\"o\">-</span><span class=\"mf\">1.829031</span> <span class=\"o\">-</span><span class=\"mf\">3.331983</span>  <span class=\"mf\">1.738871</span>\n<span class=\"mi\">2</span> <span class=\"o\">-</span><span class=\"mf\">0.626276</span> <span class=\"o\">-</span><span class=\"mf\">0.204418</span> <span class=\"o\">-</span><span class=\"mf\">6.091862</span>  <span class=\"mf\">1.304279</span>\n<span class=\"mi\">3</span>  <span class=\"mf\">1.557068</span> <span class=\"o\">-</span><span class=\"mf\">1.346815</span> <span class=\"o\">-</span><span class=\"mf\">1.597049</span> <span class=\"o\">-</span><span class=\"mf\">1.583223</span>\n<span class=\"mi\">4</span> <span class=\"o\">-</span><span class=\"mf\">0.474749</span>  <span class=\"mf\">0.561423</span>  <span class=\"mf\">0.165882</span> <span class=\"o\">-</span><span class=\"mf\">0.550396</span>\n<span class=\"mi\">5</span>  <span class=\"mf\">0.995695</span> <span class=\"o\">-</span><span class=\"mf\">1.659494</span> <span class=\"o\">-</span><span class=\"mf\">0.457960</span> <span class=\"o\">-</span><span class=\"mf\">0.056800</span>\n\n<span class=\"c1\"># See the consensus sequence</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cpm</span><span class=\"o\">.</span><span class=\"n\">consensus</span><span class=\"p\">)</span>\n<span class=\"n\">CTTACA</span>\n\n<span class=\"c1\"># See the Information Content</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cpm</span><span class=\"o\">.</span><span class=\"n\">ic</span><span class=\"p\">)</span>\n<span class=\"mi\">0</span>    <span class=\"mf\">0.305806</span>\n<span class=\"mi\">1</span>    <span class=\"mf\">1.110856</span>\n<span class=\"mi\">2</span>    <span class=\"mf\">0.637149</span>\n<span class=\"mi\">3</span>    <span class=\"mf\">0.748989</span>\n<span class=\"mi\">4</span>    <span class=\"mf\">0.074286</span>\n<span class=\"mi\">5</span>    <span class=\"mf\">0.268034</span>\n<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">float64</span>\n</pre>\n<h3>Plot the sequence logo with information content scaling</h3>\n<pre><span class=\"c1\"># Setting seed for demonstration purposes</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Making a fake PWM</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">random_ppm</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">dirichlet</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ppm</span> <span class=\"o\">=</span> <span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">Ppm</span><span class=\"p\">(</span><span class=\"n\">random_ppm</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">seqlogo</span><span class=\"p\">(</span><span class=\"n\">ppm</span><span class=\"p\">,</span> <span class=\"n\">ic_scale</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"nb\">format</span> <span class=\"o\">=</span> <span class=\"s1\">'svg'</span><span class=\"p\">,</span> <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"s1\">'medium'</span><span class=\"p\">)</span>\n</pre>\n<p>The above code will produce:</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25996ecf0b48057d2fbd0e6ca631b72de68aed17/68747470733a2f2f6769746875622e636f6d2f6265747465726964696f742f7365716c6f676f2f626c6f622f6d61737465722f646f63732f666967757265732f69635f7363616c652e737667\"></p>\n<h3>Plot the sequence logo with no information content scaling</h3>\n<pre><span class=\"c1\"># Setting seed for demonstration purposes</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Making a fake PWM</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">random_ppm</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">dirichlet</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ppm</span> <span class=\"o\">=</span> <span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">Ppm</span><span class=\"p\">(</span><span class=\"n\">random_ppm</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">seqlogo</span><span class=\"p\">(</span><span class=\"n\">ppm</span><span class=\"p\">,</span> <span class=\"n\">ic_scale</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"nb\">format</span> <span class=\"o\">=</span> <span class=\"s1\">'svg'</span><span class=\"p\">,</span> <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"s1\">'medium'</span><span class=\"p\">)</span>\n</pre>\n<p>The above code will produce:</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a270a4fe70ed9c3543b30f0c721dac643998b5e3/68747470733a2f2f6769746875622e636f6d2f6265747465726964696f742f7365716c6f676f2f626c6f622f6d61737465722f646f63732f666967757265732f6e6f5f69635f7363616c652e737667\"></p>\n<hr>\n<h2>Documentation</h2>\n<p><code>seqlogo</code> exposes 5 classes to the user for handling PM data:</p>\n<ol>\n<li><code>seqlogo.Pm</code>: the base class for all other specialized PM subclasses</li>\n<li><code>seqlogo.Pfm</code>: The class used for handling PFM data</li>\n<li><code>seqlogo.Ppm</code>: The class used for handling PPM data</li>\n<li><code>seqlogo.Pwm</code>: The class used for handling PWM data</li>\n<li><code>seqlogo.CompletePm</code>: This final class will take any/all of the other PM subclass data\nand compute any of the other missing data. That is, if the user only provides a <code>seqlogo.Pfm</code>\nand passes it to <code>seqlogo.CompletePm</code>, it will solve for the PPM, PWM, consensus sequence, and\ninformation content.</li>\n</ol>\n<p>Additionally, <code>seqlogo</code> also provides 6 methods for converting PM structures:</p>\n<ol>\n<li><code>seqlogo.pfm2ppm</code>: converts a PFM to a PPM</li>\n<li><code>seqlogo.pfm2pwm</code>: converts a PFM to a PWM</li>\n<li><code>seqlogo.ppm2pfm</code>: converts a PPM to a PFM</li>\n<li><code>seqlogo.ppm2pwm</code>: converts a PPM to a PWM</li>\n<li><code>seqlogo.pwm2pfm</code>: converts a PWM to a PFM</li>\n<li><code>seqlogo.pwm2ppm</code>: converts a PWM to a PPM</li>\n</ol>\n<p>The signatures for each item above are as follows:</p>\n<h3>Classes</h3>\n<pre><span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">CompletePm</span><span class=\"p\">(</span><span class=\"n\">pfm</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">ppm</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pwm</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">background</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pseudocount</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">alphabet_type</span> <span class=\"o\">=</span> <span class=\"s1\">'DNA'</span><span class=\"p\">,</span> <span class=\"n\">alphabet</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">default_pm</span> <span class=\"o\">=</span> <span class=\"s1\">'ppm'</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Creates the CompletePm instance. If the user does not define any `pm_filename_or_array`,</span>\n<span class=\"sd\">    it will be initialized to empty. Will generate all other attributes as soon</span>\n<span class=\"sd\">    as a `pm_filename_or_array` is supplied.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        pfm (str or `numpy.ndarray` or `pandas.DataFrame` or Pm): The user supplied</span>\n<span class=\"sd\">            PFM. If it is a filename, the file will be opened</span>\n<span class=\"sd\">            and parsed. If it is an `numpy.ndarray` or `pandas.DataFrame`,</span>\n<span class=\"sd\">            it will just be assigned. (default: None, skips '#' comment lines)</span>\n<span class=\"sd\">        ppm (str or `numpy.ndarray` or `pandas.DataFrame` or Pm): The user supplied</span>\n<span class=\"sd\">            PPM. If it is a filename, the file will be opened</span>\n<span class=\"sd\">            and parsed. If it is an `numpy.ndarray` or `pandas.DataFrame`,</span>\n<span class=\"sd\">            it will just be assigned. (default: None, skips '#' comment lines)</span>\n<span class=\"sd\">        pwm (str or `numpy.ndarray` or `pandas.DataFrame` or Pm): The user supplied</span>\n<span class=\"sd\">            PWM. If it is a filename, the file will be opened</span>\n<span class=\"sd\">            and parsed. If it is an `numpy.ndarray` or `pandas.DataFrame`,</span>\n<span class=\"sd\">            it will just be assigned. (default: None, skips '#' comment lines)</span>\n<span class=\"sd\">        background (constant or Collection): Offsets used to calculate background letter probabilities (defaults: If </span>\n<span class=\"sd\">            using an Nucleic Acid alphabet: 0.25; if using an Aminio Acid alphabet: Robinson-Robinson Frequencies)</span>\n<span class=\"sd\">        pseudocount (constant): Some constant to offset PPM conversion to PWM to prevent -/+ inf. (defaults to 1e-10)</span>\n<span class=\"sd\">        alphabet_type (str): Desired alphabet to use. Order matters (default: 'DNA')</span>\n<span class=\"sd\">            \"DNA\" := \"ACGT\"</span>\n<span class=\"sd\">            \"reduced DNA\" := \"ACGTN-\"</span>\n<span class=\"sd\">            \"ambig DNA\" := \"ACGTRYSWKMBDHVN-\"</span>\n<span class=\"sd\">            \"RNA\" := \"ACGU\"</span>\n<span class=\"sd\">            \"reduced RNA\" := \"ACGUN-\"</span>\n<span class=\"sd\">            \"ambig RNA\" := \"ACGURYSWKMBDHVN-\"</span>\n<span class=\"sd\">            \"AA\" : = \"ACDEFGHIKLMNPQRSTVWY\"</span>\n<span class=\"sd\">            \"reduced AA\" := \"ACDEFGHIKLMNPQRSTVWYX*-\"</span>\n<span class=\"sd\">            \"ambig AA\" := \"ACDEFGHIKLMNOPQRSTUVWYBJZX*-\"</span>\n<span class=\"sd\">            \"custom\" := None</span>\n<span class=\"sd\">            (default: 'DNA')</span>\n<span class=\"sd\">        alphabet (str): if 'custom' is selected or a specialize alphabet is desired, this accepts a string (default: None)</span>\n<span class=\"sd\">        default_pm (str): which of the 3 pm's do you want to call '*home*'? (default: 'ppm')</span>\n<span class=\"sd\">    \"\"\"</span>\n\n<span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">Pm</span><span class=\"p\">(</span><span class=\"n\">pm_filename_or_array</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pm_type</span> <span class=\"o\">=</span> <span class=\"s1\">'ppm'</span><span class=\"p\">,</span> <span class=\"n\">alphabet_type</span> <span class=\"o\">=</span> <span class=\"s1\">'DNA'</span><span class=\"p\">,</span> <span class=\"n\">alphabet</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> \n    <span class=\"n\">background</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pseudocount</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Initializes the Pm</span>\n\n<span class=\"sd\">    Creates the Pm instance. If the user does not define `pm_filename_or_array`,</span>\n<span class=\"sd\">    it will be initialized to empty. Will generate all other attributes as soon</span>\n<span class=\"sd\">    as a `pm_filename_or_array` is supplied.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        pm_filename_or_array (str or `numpy.ndarray` or `pandas.DataFrame` or Pm): The user supplied</span>\n<span class=\"sd\">            PM. If it is a filename, the file will be opened</span>\n<span class=\"sd\">            and parsed. If it is an `numpy.ndarray` or `pandas.DataFrame`,</span>\n<span class=\"sd\">            it will just be assigned. (default: None, skips '#' comment lines)</span>\n<span class=\"sd\">        alphabet_type (str): Desired alphabet to use. Order matters (default: 'DNA')</span>\n<span class=\"sd\">            \"DNA\" := \"ACGT\"</span>\n<span class=\"sd\">            \"reduced DNA\" := \"ACGTN-\"</span>\n<span class=\"sd\">            \"ambig DNA\" := \"ACGTRYSWKMBDHVN-\"</span>\n<span class=\"sd\">            \"RNA\" := \"ACGU\"</span>\n<span class=\"sd\">            \"reduced RNA\" := \"ACGUN-\"</span>\n<span class=\"sd\">            \"ambig RNA\" := \"ACGURYSWKMBDHVN-\"</span>\n<span class=\"sd\">            \"AA\" : = \"ACDEFGHIKLMNPQRSTVWY\"</span>\n<span class=\"sd\">            \"reduced AA\" := \"ACDEFGHIKLMNPQRSTVWYX*-\"</span>\n<span class=\"sd\">            \"ambig AA\" := \"ACDEFGHIKLMNOPQRSTUVWYBJZX*-\"</span>\n<span class=\"sd\">            \"custom\" := None</span>\n<span class=\"sd\">            (default: 'DNA')</span>\n<span class=\"sd\">        alphabet (str): if 'custom' is selected or a specialize alphabet is desired, this accepts a string (default: None)</span>\n<span class=\"sd\">        background (constant or Collection): Offsets used to calculate background letter probabilities (defaults: If </span>\n<span class=\"sd\">            using an Nucleic Acid alphabet: 0.25; if using an Aminio Acid alphabet: Robinson-Robinson Frequencies)</span>\n<span class=\"sd\">        pseudocount (constant): Some constant to offset PPM conversion to PWM to prevent -/+ inf. (default: 1e-10)</span>\n<span class=\"sd\">    \"\"\"</span>\n\n<span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">Pfm</span><span class=\"p\">(</span><span class=\"n\">pfm_filename_or_array</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pm_type</span> <span class=\"o\">=</span> <span class=\"s1\">'pfm'</span><span class=\"p\">,</span> <span class=\"n\">alphabet_type</span> <span class=\"o\">=</span> <span class=\"s1\">'DNA'</span><span class=\"p\">,</span> <span class=\"n\">alphabet</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> \n    <span class=\"n\">background</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pseudocount</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Initializes the Pfm</span>\n\n<span class=\"sd\">    Creates the Pfm instance. If the user does not define `pfm_filename_or_array`,</span>\n<span class=\"sd\">    it will be initialized to empty. Will generate all other attributes as soon</span>\n<span class=\"sd\">    as a `pfm_filename_or_array` is supplied.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        pfm_filename_or_array (str or `numpy.ndarray` or `pandas.DataFrame` or Pm): The user supplied</span>\n<span class=\"sd\">            PFM. If it is a filename, the file will be opened</span>\n<span class=\"sd\">            and parsed. If it is an `numpy.ndarray` or `pandas.DataFrame`,</span>\n<span class=\"sd\">            it will just be assigned. (default: None, skips '#' comment lines)</span>\n<span class=\"sd\">        alphabet_type (str): Desired alphabet to use. Order matters (default: 'DNA')</span>\n<span class=\"sd\">            \"DNA\" := \"ACGT\"</span>\n<span class=\"sd\">            \"reduced DNA\" := \"ACGTN-\"</span>\n<span class=\"sd\">            \"ambig DNA\" := \"ACGTRYSWKMBDHVN-\"</span>\n<span class=\"sd\">            \"RNA\" := \"ACGU\"</span>\n<span class=\"sd\">            \"reduced RNA\" := \"ACGUN-\"</span>\n<span class=\"sd\">            \"ambig RNA\" := \"ACGURYSWKMBDHVN-\"</span>\n<span class=\"sd\">            \"AA\" : = \"ACDEFGHIKLMNPQRSTVWY\"</span>\n<span class=\"sd\">            \"reduced AA\" := \"ACDEFGHIKLMNPQRSTVWYX*-\"</span>\n<span class=\"sd\">            \"ambig AA\" := \"ACDEFGHIKLMNOPQRSTUVWYBJZX*-\"</span>\n<span class=\"sd\">            \"custom\" := None</span>\n<span class=\"sd\">            (default: 'DNA')</span>\n<span class=\"sd\">        alphabet (str): if 'custom' is selected or a specialize alphabet is desired, this accepts a string (default: None)</span>\n<span class=\"sd\">        background (constant or Collection): Offsets used to calculate background letter probabilities (defaults: If </span>\n<span class=\"sd\">            using an Nucleic Acid alphabet: 0.25; if using an Aminio Acid alphabet: Robinson-Robinson Frequencies)</span>\n<span class=\"sd\">        pseudocount (constant): Some constant to offset PPM conversion to PWM to prevent -/+ inf. (default: 1e-10)</span>\n<span class=\"sd\">    \"\"\"</span>\n\n<span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">Ppm</span><span class=\"p\">(</span><span class=\"n\">ppm_filename_or_array</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pm_type</span> <span class=\"o\">=</span> <span class=\"s1\">'ppm'</span><span class=\"p\">,</span> <span class=\"n\">alphabet_type</span> <span class=\"o\">=</span> <span class=\"s1\">'DNA'</span><span class=\"p\">,</span> <span class=\"n\">alphabet</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> \n    <span class=\"n\">background</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pseudocount</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Initializes the Ppm</span>\n\n<span class=\"sd\">    Creates the Ppm instance. If the user does not define `ppm_filename_or_array`,</span>\n<span class=\"sd\">    it will be initialized to empty. Will generate all other attributes as soon</span>\n<span class=\"sd\">    as a `ppm_filename_or_array` is supplied.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ppm_filename_or_array (str or `numpy.ndarray` or `pandas.DataFrame` or Pm): The user supplied</span>\n<span class=\"sd\">            PPM. If it is a filename, the file will be opened</span>\n<span class=\"sd\">            and parsed. If it is an `numpy.ndarray` or `pandas.DataFrame`,</span>\n<span class=\"sd\">            it will just be assigned. (default: None, skips '#' comment lines)</span>\n<span class=\"sd\">        alphabet_type (str): Desired alphabet to use. Order matters (default: 'DNA')</span>\n<span class=\"sd\">            \"DNA\" := \"ACGT\"</span>\n<span class=\"sd\">            \"reduced DNA\" := \"ACGTN-\"</span>\n<span class=\"sd\">            \"ambig DNA\" := \"ACGTRYSWKMBDHVN-\"</span>\n<span class=\"sd\">            \"RNA\" := \"ACGU\"</span>\n<span class=\"sd\">            \"reduced RNA\" := \"ACGUN-\"</span>\n<span class=\"sd\">            \"ambig RNA\" := \"ACGURYSWKMBDHVN-\"</span>\n<span class=\"sd\">            \"AA\" : = \"ACDEFGHIKLMNPQRSTVWY\"</span>\n<span class=\"sd\">            \"reduced AA\" := \"ACDEFGHIKLMNPQRSTVWYX*-\"</span>\n<span class=\"sd\">            \"ambig AA\" := \"ACDEFGHIKLMNOPQRSTUVWYBJZX*-\"</span>\n<span class=\"sd\">            \"custom\" := None</span>\n<span class=\"sd\">            (default: 'DNA')</span>\n<span class=\"sd\">        alphabet (str): if 'custom' is selected or a specialize alphabet is desired, this accepts a string (default: None)</span>\n<span class=\"sd\">        background (constant or Collection): Offsets used to calculate background letter probabilities (defaults: If </span>\n<span class=\"sd\">            using an Nucleic Acid alphabet: 0.25; if using an Aminio Acid alphabet: Robinson-Robinson Frequencies)</span>\n<span class=\"sd\">        pseudocount (constant): Some constant to offset PPM conversion to PWM to prevent -/+ inf. (default: 1e-10)</span>\n<span class=\"sd\">   \"\"\"</span>\n   \n<span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">Pwm</span><span class=\"p\">(</span><span class=\"n\">pwm_filename_or_array</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pm_type</span> <span class=\"o\">=</span> <span class=\"s1\">'pwm'</span><span class=\"p\">,</span> <span class=\"n\">alphabet_type</span> <span class=\"o\">=</span> <span class=\"s1\">'DNA'</span><span class=\"p\">,</span> <span class=\"n\">alphabet</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> \n    <span class=\"n\">background</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pseudocount</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Initializes the Pwm</span>\n\n<span class=\"sd\">    Creates the Pwm instance. If the user does not define `pwm_filename_or_array`,</span>\n<span class=\"sd\">    it will be initialized to empty. Will generate all other attributes as soon</span>\n<span class=\"sd\">    as a `pwm_filename_or_array` is supplied.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        pwm_filename_or_array (str or `numpy.ndarray` or `pandas.DataFrame` or Pm): The user supplied</span>\n<span class=\"sd\">            PWM. If it is a filename, the file will be opened</span>\n<span class=\"sd\">            and parsed. If it is an `numpy.ndarray` or `pandas.DataFrame`,</span>\n<span class=\"sd\">            it will just be assigned. (default: None, skips '#' comment lines)</span>\n<span class=\"sd\">        alphabet_type (str): Desired alphabet to use. Order matters (default: 'DNA')</span>\n<span class=\"sd\">            \"DNA\" := \"ACGT\"</span>\n<span class=\"sd\">            \"reduced DNA\" := \"ACGTN-\"</span>\n<span class=\"sd\">            \"ambig DNA\" := \"ACGTRYSWKMBDHVN-\"</span>\n<span class=\"sd\">            \"RNA\" := \"ACGU\"</span>\n<span class=\"sd\">            \"reduced RNA\" := \"ACGUN-\"</span>\n<span class=\"sd\">            \"ambig RNA\" := \"ACGURYSWKMBDHVN-\"</span>\n<span class=\"sd\">            \"AA\" : = \"ACDEFGHIKLMNPQRSTVWY\"</span>\n<span class=\"sd\">            \"reduced AA\" := \"ACDEFGHIKLMNPQRSTVWYX*-\"</span>\n<span class=\"sd\">            \"ambig AA\" := \"ACDEFGHIKLMNOPQRSTUVWYBJZX*-\"</span>\n<span class=\"sd\">            \"custom\" := None</span>\n<span class=\"sd\">            (default: 'DNA')</span>\n<span class=\"sd\">        alphabet (str): if 'custom' is selected or a specialize alphabet is desired, this accepts a string (default: None)</span>\n<span class=\"sd\">        background (constant or Collection): Offsets used to calculate background letter probabilities (defaults: If </span>\n<span class=\"sd\">            using an Nucleic Acid alphabet: 0.25; if using an Aminio Acid alphabet: Robinson-Robinson Frequencies)</span>\n<span class=\"sd\">        pseudocount (constant): Some constant to offset PPM conversion to PWM to prevent -/+ inf. (default: 1e-10)</span>\n<span class=\"sd\">   \"\"\"</span>\n   \n</pre>\n<h3>Conversion Methods</h3>\n<pre><span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">pfm2ppm</span><span class=\"p\">(</span><span class=\"n\">pfm</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Converts a Pfm to a ppm array</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        pfm (Pfm): a fully initialized Pfm</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        (np.array): converted values</span>\n<span class=\"sd\">    \"\"\"</span>\n    \n<span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">pfm2pwm</span><span class=\"p\">(</span><span class=\"n\">pfm</span><span class=\"p\">,</span> <span class=\"n\">background</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pseudocount</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Converts a Pfm to a pwm array</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        pfm (Pfm): a fully initialized Pfm</span>\n<span class=\"sd\">        background: accounts for relative weights from background. Must be a constant or same number of columns as Pwm (default: None)</span>\n<span class=\"sd\">        pseudocount (const): The number used to offset log-likelihood conversion from probabilites (default: None -&gt; 1e-10)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        (np.array): converted values</span>\n<span class=\"sd\">    \"\"\"</span>\n\n<span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">ppm2pfm</span><span class=\"p\">(</span><span class=\"n\">ppm</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Converts a Ppm to a pfm array</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ppm (Ppm): a fully initialized Ppm</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        (np.array): converted values</span>\n<span class=\"sd\">    \"\"\"</span>\n\n<span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">ppm2pwm</span><span class=\"p\">(</span><span class=\"n\">ppm</span><span class=\"p\">,</span> <span class=\"n\">background</span><span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pseudocount</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Converts a Ppm to a pwm array</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        ppm (Ppm): a fully initialized Ppm</span>\n<span class=\"sd\">        background: accounts for relative weights from background. Must be a constant or same number of columns as Pwm (default: None)</span>\n<span class=\"sd\">        pseudocount (const): The number used to offset log-likelihood conversion from probabilites (default: None -&gt; 1e-10)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        (np.array): converted values</span>\n\n<span class=\"sd\">    Raises:</span>\n<span class=\"sd\">        ValueError: if the pseudocount isn't a constant or the same length as sequence</span>\n<span class=\"sd\">    \"\"\"</span>\n\n<span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">pwm2pfm</span><span class=\"p\">(</span><span class=\"n\">pwm</span><span class=\"p\">,</span> <span class=\"n\">background</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pseudocount</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Converts a Pwm to a pfm array</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        pwm (Pwm): a fully initialized Pwm</span>\n<span class=\"sd\">        background: accounts for relative weights from background. Must be a constant or same number of columns as Pwm (default: None)</span>\n<span class=\"sd\">        pseudocount (const): The number used to offset log-likelihood conversion from probabilites (default: None -&gt; 1e-10)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        (np.array): converted values</span>\n<span class=\"sd\">    \"\"\"</span>\n\n<span class=\"n\">seqlogo</span><span class=\"o\">.</span><span class=\"n\">pwm2ppm</span><span class=\"p\">(</span><span class=\"n\">pwm</span><span class=\"p\">,</span> <span class=\"n\">background</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">pseudocount</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Converts a Pwm to a ppm array</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        pwm (Pwm): a fully initialized Pwm</span>\n<span class=\"sd\">        background: accounts for relative weights from background. Must be a constant or same number of columns as Pwm (default: None)</span>\n<span class=\"sd\">        pseudocount (const): The number used to offset log-likelihood conversion from probabilites (default: None -&gt; 1e-10)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        (np.array): converted values</span>\n\n<span class=\"sd\">    Raises:</span>\n<span class=\"sd\">        ValueError: if the pseudocount isn't a constant or the same length as sequence</span>\n<span class=\"sd\">    \"\"\"</span>\n    \n</pre>\n<hr>\n<h2>Contributing</h2>\n<p>Please see our contribution guidelines <a href=\"https://github.com/betteridiot/seqlogo/blob/master/CONTRIBUTING.md\" rel=\"nofollow\">here</a></p>\n<hr>\n<h2>Acknowledgments</h2>\n<ol>\n<li>Bembom O (2018). seqlogo: Sequence logos for DNA sequence alignments. R package version 1.48.0.</li>\n<li>Crooks GE, Hon G, Chandonia JM, Brenner SE WebLogo: A sequence logo generator,\nGenome Research, 14:1188-1190, (2004).</li>\n</ol>\n\n          </div>"}, "last_serial": 6126603, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ab183498391b6c178077c94d31d2a6ba", "sha256": "046352de8df982feee36297ab3ed4c419986c6f50a7239c7d463e3df36eb4012"}, "downloads": -1, "filename": "seqLogo-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ab183498391b6c178077c94d31d2a6ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13624, "upload_time": "2018-12-22T22:08:14", "upload_time_iso_8601": "2018-12-22T22:08:14.465535Z", "url": "https://files.pythonhosted.org/packages/c2/0f/a1e3faa5f0e090e4a71b98563923e9fadbd67d1230b2c61ebad67189ffb9/seqLogo-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e869156c2399f8456bf4b9f0899c9682", "sha256": "57b5c5fe8a009d3b9403ee842d9d239296111cd4a0871c218056c83aae52625d"}, "downloads": -1, "filename": "seqLogo-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e869156c2399f8456bf4b9f0899c9682", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14047, "upload_time": "2018-12-22T22:26:03", "upload_time_iso_8601": "2018-12-22T22:26:03.139071Z", "url": "https://files.pythonhosted.org/packages/d3/1a/1c8f6d5ee2f9ee12aa9d7e4fd151479aa811bc25ec240f0b0c5443dfcf23/seqLogo-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "100b0bc1d7cd65ac8449071030bd0d80", "sha256": "d56d41bf3c669bbdc2bf271fb4fd69474a395f04a7df6ba7fd57249f32a970ed"}, "downloads": -1, "filename": "seqLogo-0.0.3.tar.gz", "has_sig": false, "md5_digest": "100b0bc1d7cd65ac8449071030bd0d80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13711, "upload_time": "2018-12-22T22:38:47", "upload_time_iso_8601": "2018-12-22T22:38:47.880442Z", "url": "https://files.pythonhosted.org/packages/0d/0a/4dbd2030ab555e87d224a4fe8f11aca295a632ab1212b145a6990e89805e/seqLogo-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "14130db92b39bf4b2c870420b028ecdb", "sha256": "6877256e549b747a3f7e27efb6ad9e6b393a11a514d9ada255b9e6cced471e6d"}, "downloads": -1, "filename": "seqLogo-0.0.4.tar.gz", "has_sig": false, "md5_digest": "14130db92b39bf4b2c870420b028ecdb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13029, "upload_time": "2018-12-23T01:34:33", "upload_time_iso_8601": "2018-12-23T01:34:33.955048Z", "url": "https://files.pythonhosted.org/packages/79/d9/172708d6c737e153a32b808c2e5c2016b71f9ccb53b78bb88291a3773eab/seqLogo-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "fd018d3bbebaa943a4c79604bbdfbb44", "sha256": "28a16d1531ba9736f64b63d9ed6323e91904a0064c74c6d86212c824032df5b0"}, "downloads": -1, "filename": "seqLogo-0.0.5.tar.gz", "has_sig": false, "md5_digest": "fd018d3bbebaa943a4c79604bbdfbb44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13023, "upload_time": "2018-12-23T01:47:21", "upload_time_iso_8601": "2018-12-23T01:47:21.493256Z", "url": "https://files.pythonhosted.org/packages/0e/a7/31ff890a25bed311371a4b2c6d0ca0c8b56716e68558e35545d704c42237/seqLogo-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "9b4551450dceec3b6a86ab8a3404ba9e", "sha256": "606d6e963debe4ed5dc8b2d490e00de87f05a577f07e01329398bc9028e7f9d1"}, "downloads": -1, "filename": "seqLogo-0.0.6.tar.gz", "has_sig": false, "md5_digest": "9b4551450dceec3b6a86ab8a3404ba9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13022, "upload_time": "2018-12-23T02:00:58", "upload_time_iso_8601": "2018-12-23T02:00:58.141181Z", "url": "https://files.pythonhosted.org/packages/ba/2b/df55fd39614e52ebe766768f72d123af0b33784e78bc27a4fabeb981e42e/seqLogo-0.0.6.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "58af34180d043e444411ec1c61994cf3", "sha256": "32d4856131ed741b93f97dfab1dd8dad40cde417d8fc8bd59d145eb4c0b44fdf"}, "downloads": -1, "filename": "seqLogo-0.1.0.tar.gz", "has_sig": false, "md5_digest": "58af34180d043e444411ec1c61994cf3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14013, "upload_time": "2018-12-27T21:14:09", "upload_time_iso_8601": "2018-12-27T21:14:09.369389Z", "url": "https://files.pythonhosted.org/packages/00/f1/79308aac8247c4696659ea9dfb8684282af0f8766650675c2ddf3c207878/seqLogo-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f50e6aa720f6aa67c6260dffbd61b7b2", "sha256": "c339d26f1f05f4f50cecc6ac375a03e3d1395422e14114f9884feb0ec6a6afe8"}, "downloads": -1, "filename": "seqlogo-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f50e6aa720f6aa67c6260dffbd61b7b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21569, "upload_time": "2018-12-27T23:01:02", "upload_time_iso_8601": "2018-12-27T23:01:02.930587Z", "url": "https://files.pythonhosted.org/packages/08/9b/6c181477204f012e741043d4229dfef01ad61595ebe8963457e4586c86ea/seqlogo-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "96bf96be969cdfd3c93c196640f6c949", "sha256": "de9ce0678af69630cd50da762abc9cfb7008e60153b0e8b5ad5a0edd730bc13a"}, "downloads": -1, "filename": "seqlogo-0.1.10.tar.gz", "has_sig": false, "md5_digest": "96bf96be969cdfd3c93c196640f6c949", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19119, "upload_time": "2018-12-28T17:20:14", "upload_time_iso_8601": "2018-12-28T17:20:14.101797Z", "url": "https://files.pythonhosted.org/packages/3b/3a/3bcdab5aee0596cd6f06c78694e35bd5a37d12ae38d0666eb4d45d2b8fe9/seqlogo-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "f88b43e3843c3e270e4ea179e1aa384e", "sha256": "3bc542010a6f28eab0d96ac374c62fc4ae2659e5cc3fed18c51af6c7be12d68b"}, "downloads": -1, "filename": "seqlogo-0.1.11.tar.gz", "has_sig": false, "md5_digest": "f88b43e3843c3e270e4ea179e1aa384e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19126, "upload_time": "2018-12-28T18:57:05", "upload_time_iso_8601": "2018-12-28T18:57:05.538522Z", "url": "https://files.pythonhosted.org/packages/ab/10/411b88d93c5d28c5dd87f2d2cdb066e57c5997f8e9d6295ea3f803b44ced/seqlogo-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "d8de304c582a8620320c754c4a5da8cc", "sha256": "b172a4b52ea406d1b3225e3e6a580e69b435f2e69a9e1e94c68cf982e948ccb7"}, "downloads": -1, "filename": "seqlogo-0.1.12.tar.gz", "has_sig": false, "md5_digest": "d8de304c582a8620320c754c4a5da8cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18974, "upload_time": "2018-12-28T20:02:40", "upload_time_iso_8601": "2018-12-28T20:02:40.912962Z", "url": "https://files.pythonhosted.org/packages/36/9f/5e8dd45b588f0bf62763a5ea9cf7a74325eab2ce878656294d44a0cb1eb3/seqlogo-0.1.12.tar.gz", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "af67ca37e6c4476efe792d39a4764444", "sha256": "e13c6d9645c4e2de476607650431d9d78337e0f8f1d60385ca41893d6d7de604"}, "downloads": -1, "filename": "seqlogo-0.1.13.tar.gz", "has_sig": false, "md5_digest": "af67ca37e6c4476efe792d39a4764444", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19081, "upload_time": "2019-01-01T21:41:01", "upload_time_iso_8601": "2019-01-01T21:41:01.710205Z", "url": "https://files.pythonhosted.org/packages/e1/10/a7a1468b4f003436f8e48c4b75b77e11236479270078e86d3e8b9e0c5275/seqlogo-0.1.13.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "793a5419e2e3b8f228a1e6788aabfae6", "sha256": "3d5821097a197da94d567e78f6b8e2bd54b89add411b67c1133e25abcc3101c2"}, "downloads": -1, "filename": "seqlogo-0.1.2.tar.gz", "has_sig": false, "md5_digest": "793a5419e2e3b8f228a1e6788aabfae6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21561, "upload_time": "2018-12-28T01:14:37", "upload_time_iso_8601": "2018-12-28T01:14:37.493285Z", "url": "https://files.pythonhosted.org/packages/45/9d/09edfe59eb0dd108c4dbce5dc20cfeac1c7aabf6d7b3c4f781368ff85aa7/seqlogo-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "6693b0c499a6b39f2331c61f5dcd9be5", "sha256": "a09974ebae4b113ce1bae1fe5cb4b09f56995068b1ee92bff0416145f8a6ba39"}, "downloads": -1, "filename": "seqlogo-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6693b0c499a6b39f2331c61f5dcd9be5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18397, "upload_time": "2018-12-28T01:58:40", "upload_time_iso_8601": "2018-12-28T01:58:40.280432Z", "url": "https://files.pythonhosted.org/packages/7c/5e/d15c7471d37e31d4dcb25be97a803d9d04c8801eae3f6e2a42e0d1b8da72/seqlogo-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "5c001dbea456e59773c97f57fec3427f", "sha256": "a9de41c758f9dc223f2b16ba6b4b5196bfd01eb8d331e6c36af3b23cbe72151a"}, "downloads": -1, "filename": "seqlogo-0.1.4.tar.gz", "has_sig": false, "md5_digest": "5c001dbea456e59773c97f57fec3427f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18374, "upload_time": "2018-12-28T02:30:16", "upload_time_iso_8601": "2018-12-28T02:30:16.063199Z", "url": "https://files.pythonhosted.org/packages/b5/20/39fbb38a01a677a92ef0e556179b4070e674df01242bda285d18f605c873/seqlogo-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "631cb1353612d3281634ef8746cb5467", "sha256": "d0efc955c1e70f5ae2cae1c11c768f53f2a69ef49bce37bdbd39f5d96bd6b3e5"}, "downloads": -1, "filename": "seqlogo-0.1.5.tar.gz", "has_sig": false, "md5_digest": "631cb1353612d3281634ef8746cb5467", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14154, "upload_time": "2018-12-28T02:54:02", "upload_time_iso_8601": "2018-12-28T02:54:02.650599Z", "url": "https://files.pythonhosted.org/packages/c8/98/f83b7024102efd73fc7d01d3ffd2d48ce42a4819d07b60b28f50b08cfd38/seqlogo-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "3f56deb09ca03a5a8a17e3056449ee66", "sha256": "55cf023e39340ba9d65344ac0955e888e725f18da6e4e1dd22cb64a09c7b8246"}, "downloads": -1, "filename": "seqlogo-0.1.6.tar.gz", "has_sig": false, "md5_digest": "3f56deb09ca03a5a8a17e3056449ee66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14159, "upload_time": "2018-12-28T03:06:49", "upload_time_iso_8601": "2018-12-28T03:06:49.712793Z", "url": "https://files.pythonhosted.org/packages/91/47/bdbe984f7018db645e26bb35689a801cc8877b7504dd42674086f48700a8/seqlogo-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "a16aaa98556f3cdce1c9ae4be39cf51c", "sha256": "b0e98e27e48624dd5fdc0af9228e2636732d617fd14081426da81e610502c31e"}, "downloads": -1, "filename": "seqlogo-0.1.7.tar.gz", "has_sig": false, "md5_digest": "a16aaa98556f3cdce1c9ae4be39cf51c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14162, "upload_time": "2018-12-28T03:31:56", "upload_time_iso_8601": "2018-12-28T03:31:56.582507Z", "url": "https://files.pythonhosted.org/packages/3d/e3/b131aa37e0ff6f912ab7050926bbcf7190c2423666d553c4a36fcc1d7826/seqlogo-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "e2bb40549e13a02f3602cf34cadd7c43", "sha256": "03ca5de954e8414245970f335c7a9aa19953093c92af3f950789e790485b59c8"}, "downloads": -1, "filename": "seqlogo-0.1.8.tar.gz", "has_sig": false, "md5_digest": "e2bb40549e13a02f3602cf34cadd7c43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14182, "upload_time": "2018-12-28T05:06:10", "upload_time_iso_8601": "2018-12-28T05:06:10.495355Z", "url": "https://files.pythonhosted.org/packages/d6/3f/71b766aab3f3df0c85f6a4c010885cc18c597610448d89137315f4e73b90/seqlogo-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "bfbf985e6d18f15851d772a58e123510", "sha256": "d23af1b8d10ef267c5bdbc594e5aa62c78253b26152b0c9db736deca0803c78e"}, "downloads": -1, "filename": "seqlogo-0.1.9.tar.gz", "has_sig": false, "md5_digest": "bfbf985e6d18f15851d772a58e123510", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19086, "upload_time": "2018-12-28T14:01:11", "upload_time_iso_8601": "2018-12-28T14:01:11.346908Z", "url": "https://files.pythonhosted.org/packages/3a/39/baf49230ef815364674460b62cd05b7c95b2ca6b19f98e093ef65f7f8c59/seqlogo-0.1.9.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "727e0eeabc03b38b992fe49c7a87abc7", "sha256": "7a31ac047744c5bfa3100c8f56b7bfe0dd481407f3adb41c332fb5ae9470e8a9"}, "downloads": -1, "filename": "seqlogo-0.2.0.tar.gz", "has_sig": false, "md5_digest": "727e0eeabc03b38b992fe49c7a87abc7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19102, "upload_time": "2019-01-11T01:04:33", "upload_time_iso_8601": "2019-01-11T01:04:33.514233Z", "url": "https://files.pythonhosted.org/packages/5d/5e/ee796bcf3d94854aa048162a5b7795d2a2428977057c4b844d66f7451633/seqlogo-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "2be59544a11b47b0abc305c543180f67", "sha256": "647c1a512d3bd5fd4a256b599b1f1a01228f710cd54ec1a9606e8d42b7f51800"}, "downloads": -1, "filename": "seqlogo-0.2.1.tar.gz", "has_sig": false, "md5_digest": "2be59544a11b47b0abc305c543180f67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27368, "upload_time": "2019-01-16T15:59:30", "upload_time_iso_8601": "2019-01-16T15:59:30.798184Z", "url": "https://files.pythonhosted.org/packages/96/29/6fc5e1812bc365913533e27d92bfe0b42c0a9deb75db749dc40a86fdfb63/seqlogo-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "71dec363a9433b30aac1b6f720d7ffca", "sha256": "ed19d123aa25fb4e84c5a27217b94d2b562ef3457582e515fbce94a961c6f2f5"}, "downloads": -1, "filename": "seqlogo-0.2.2.tar.gz", "has_sig": false, "md5_digest": "71dec363a9433b30aac1b6f720d7ffca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27358, "upload_time": "2019-01-16T16:15:36", "upload_time_iso_8601": "2019-01-16T16:15:36.244728Z", "url": "https://files.pythonhosted.org/packages/ca/c8/43ca28c4eea9420added6b41cc1ffa5b39508819ab00fe94c7d1d79cc205/seqlogo-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "e2d5bb2a4e5e6feff5d5ee41d034fb9f", "sha256": "61e0cea972f4f70e23224570377c8f7a53cefc00204d229b8a2609f4bde43936"}, "downloads": -1, "filename": "seqlogo-0.2.3.tar.gz", "has_sig": false, "md5_digest": "e2d5bb2a4e5e6feff5d5ee41d034fb9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27373, "upload_time": "2019-01-16T17:16:31", "upload_time_iso_8601": "2019-01-16T17:16:31.634455Z", "url": "https://files.pythonhosted.org/packages/ad/b3/0515388315c35ab9ba26f0e775fdfbee11bbacfb129893da0764212d0d7c/seqlogo-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "ca357021cc3a31112c5e9d1b851d91b6", "sha256": "c0d5d67f1f6fd8db03ef58b19dec3f282eeddf6896349bcc32f4d755aa91b347"}, "downloads": -1, "filename": "seqlogo-0.2.4.tar.gz", "has_sig": false, "md5_digest": "ca357021cc3a31112c5e9d1b851d91b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27366, "upload_time": "2019-01-16T17:48:31", "upload_time_iso_8601": "2019-01-16T17:48:31.843198Z", "url": "https://files.pythonhosted.org/packages/8b/59/369a6d90c8c31f64dfca4a24ec013db60826c15d699bdcfabe231f32a6a6/seqlogo-0.2.4.tar.gz", "yanked": false}], "5.2.0": [{"comment_text": "", "digests": {"md5": "3625f712a766c9301634753e46aa641c", "sha256": "d2b33abffab8734470c3b4da3980cd340185ca0f36ac30c48a9fb75af588c821"}, "downloads": -1, "filename": "seqlogo-5.2.0.tar.gz", "has_sig": false, "md5_digest": "3625f712a766c9301634753e46aa641c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27376, "upload_time": "2019-01-16T19:13:55", "upload_time_iso_8601": "2019-01-16T19:13:55.516919Z", "url": "https://files.pythonhosted.org/packages/4c/e5/3fa79543cbcdb5f294724f6125ef059b1d8d64d9872e12772316f84cfa7f/seqlogo-5.2.0.tar.gz", "yanked": false}], "5.2.10": [{"comment_text": "", "digests": {"md5": "c62d9e72764142f089a5218ccfa58eca", "sha256": "aa743c4ad9892a7ecc4d3ab8da45471aafbe2e0056846ee26cc506f14235521b"}, "downloads": -1, "filename": "seqlogo-5.2.10.tar.gz", "has_sig": false, "md5_digest": "c62d9e72764142f089a5218ccfa58eca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27375, "upload_time": "2019-01-23T16:09:11", "upload_time_iso_8601": "2019-01-23T16:09:11.175450Z", "url": "https://files.pythonhosted.org/packages/cc/66/7583ee7f765e0df6935075f631e12aaa266f1b72e515284ae8965dfd2b6a/seqlogo-5.2.10.tar.gz", "yanked": false}], "5.2.9": [{"comment_text": "", "digests": {"md5": "3d87c65f568cb85fc7da2be7b4a4992a", "sha256": "4ef1e39ddee3285c354b5349a326e14b5293d77933175dd4c858a34de62f9738"}, "downloads": -1, "filename": "seqlogo-5.2.9.tar.gz", "has_sig": false, "md5_digest": "3d87c65f568cb85fc7da2be7b4a4992a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27411, "upload_time": "2019-01-19T03:31:55", "upload_time_iso_8601": "2019-01-19T03:31:55.553613Z", "url": "https://files.pythonhosted.org/packages/77/d5/6865f19a2c578d73f75eb92b55ee8fd1d52ebda48f43b89c77fa1a0a0372/seqlogo-5.2.9.tar.gz", "yanked": false}], "5.2.9001": [{"comment_text": "", "digests": {"md5": "7482a5a4ac2faf759b40b02a65cc8ce6", "sha256": "5e9dd8ea53999247de359af53f1331b9422dbed454f6072817230de2a2acd4e0"}, "downloads": -1, "filename": "seqlogo-5.2.9001.tar.gz", "has_sig": false, "md5_digest": "7482a5a4ac2faf759b40b02a65cc8ce6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27443, "upload_time": "2019-02-01T00:33:19", "upload_time_iso_8601": "2019-02-01T00:33:19.773212Z", "url": "https://files.pythonhosted.org/packages/1b/9a/0dea0325526897a4ed9ede987c26d10dd44a79321fc9c401abab50b870fd/seqlogo-5.2.9001.tar.gz", "yanked": false}], "5.29.1": [{"comment_text": "", "digests": {"md5": "59ad3596126441c08c998199a0698c5d", "sha256": "e85a2c35d6cf85c15d10df127846a72a35cb0841cec6e5ba06a9b9423de6c85b"}, "downloads": -1, "filename": "seqlogo-5.29.1.tar.gz", "has_sig": false, "md5_digest": "59ad3596126441c08c998199a0698c5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30143, "upload_time": "2019-02-01T17:17:37", "upload_time_iso_8601": "2019-02-01T17:17:37.784976Z", "url": "https://files.pythonhosted.org/packages/98/ad/58117bf02e1eb324922bc09afa56c4b27b5a44671c4d31eac2e81b665c18/seqlogo-5.29.1.tar.gz", "yanked": false}], "5.29.2": [{"comment_text": "", "digests": {"md5": "011f8fbd0aeae94b9db3854b4cd20813", "sha256": "b506d986a786bd036cd7c85ac5c873b615e53dd080caa1219e0b9317532b905a"}, "downloads": -1, "filename": "seqlogo-5.29.2.tar.gz", "has_sig": false, "md5_digest": "011f8fbd0aeae94b9db3854b4cd20813", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27823, "upload_time": "2019-03-19T20:10:29", "upload_time_iso_8601": "2019-03-19T20:10:29.689892Z", "url": "https://files.pythonhosted.org/packages/d3/5f/6659071e1e551003c6941348c8106a922118c524afa8564257213967e34d/seqlogo-5.29.2.tar.gz", "yanked": false}], "5.29.3": [{"comment_text": "", "digests": {"md5": "4312b7b90104e2fed5d29c3ad72fb8f6", "sha256": "38877edc66ad18b7ce80f09d77106e47f8e24dc61ff804511576d91b555254a0"}, "downloads": -1, "filename": "seqlogo-5.29.3.tar.gz", "has_sig": false, "md5_digest": "4312b7b90104e2fed5d29c3ad72fb8f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27846, "upload_time": "2019-03-19T20:26:34", "upload_time_iso_8601": "2019-03-19T20:26:34.386439Z", "url": "https://files.pythonhosted.org/packages/70/6d/2b09809f44082052b34ae86461c8c50699b72bef1aa57af55c5247b84140/seqlogo-5.29.3.tar.gz", "yanked": false}], "5.29.4": [{"comment_text": "", "digests": {"md5": "d0f2f3240a2c3424502e233917d5f197", "sha256": "2017e23c5928fca7a925e534a65778710ec3573ea2dae6f16f9c2739256ea300"}, "downloads": -1, "filename": "seqlogo-5.29.4.tar.gz", "has_sig": false, "md5_digest": "d0f2f3240a2c3424502e233917d5f197", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27961, "upload_time": "2019-05-09T16:12:09", "upload_time_iso_8601": "2019-05-09T16:12:09.417737Z", "url": "https://files.pythonhosted.org/packages/c8/0f/95ae76972c57a9a60309bad6e138943ded8b7dc667257977b7004fded4bb/seqlogo-5.29.4.tar.gz", "yanked": false}], "5.29.5": [{"comment_text": "", "digests": {"md5": "b6705fec0399de6b0801c8cca19fc1d7", "sha256": "e077444f3ef66e41552d2c9fc14cbea85f73ef4e3a02ad44b6f2034fffc184b0"}, "downloads": -1, "filename": "seqlogo-5.29.5.tar.gz", "has_sig": false, "md5_digest": "b6705fec0399de6b0801c8cca19fc1d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27478, "upload_time": "2019-08-13T17:34:51", "upload_time_iso_8601": "2019-08-13T17:34:51.413971Z", "url": "https://files.pythonhosted.org/packages/5c/c2/290a5d9e927f3c1b54cc7f0b194237fc22ea798aa8aeb691b91fced0574b/seqlogo-5.29.5.tar.gz", "yanked": false}], "5.29.6": [{"comment_text": "", "digests": {"md5": "0b1c94b5a74470aeb917d67ebf58cff4", "sha256": "5bf546559f5bfe5af96a2583b3a156611f7d633452611d087bf4b87bd5396d0e"}, "downloads": -1, "filename": "seqlogo-5.29.6.tar.gz", "has_sig": false, "md5_digest": "0b1c94b5a74470aeb917d67ebf58cff4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27526, "upload_time": "2019-08-14T19:05:43", "upload_time_iso_8601": "2019-08-14T19:05:43.204341Z", "url": "https://files.pythonhosted.org/packages/dd/6d/29e23eddee3ca0edfef5dec1c3d536c0ccc3e255948638af1e708a836bc8/seqlogo-5.29.6.tar.gz", "yanked": false}], "5.29.7": [{"comment_text": "", "digests": {"md5": "fe6e975a01063d56d941eee8518a3d6e", "sha256": "14054f1e939e14d93b8b9129c005b7f3b56ae905425328861ab84046647e2ffc"}, "downloads": -1, "filename": "seqlogo-5.29.7.tar.gz", "has_sig": false, "md5_digest": "fe6e975a01063d56d941eee8518a3d6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38278, "upload_time": "2019-11-12T21:27:24", "upload_time_iso_8601": "2019-11-12T21:27:24.822498Z", "url": "https://files.pythonhosted.org/packages/f4/8f/6ca2c173670ec151986b8fbe8e7255b0a6966a74ca220f34aacbe3019e82/seqlogo-5.29.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fe6e975a01063d56d941eee8518a3d6e", "sha256": "14054f1e939e14d93b8b9129c005b7f3b56ae905425328861ab84046647e2ffc"}, "downloads": -1, "filename": "seqlogo-5.29.7.tar.gz", "has_sig": false, "md5_digest": "fe6e975a01063d56d941eee8518a3d6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38278, "upload_time": "2019-11-12T21:27:24", "upload_time_iso_8601": "2019-11-12T21:27:24.822498Z", "url": "https://files.pythonhosted.org/packages/f4/8f/6ca2c173670ec151986b8fbe8e7255b0a6966a74ca220f34aacbe3019e82/seqlogo-5.29.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:51 2020"}