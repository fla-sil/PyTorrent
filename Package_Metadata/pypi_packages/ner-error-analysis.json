{"info": {"author": "Chiao-Wei Hsu", "author_email": "tony790927@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# NER Error Analyzer \n\n## Quick Start\n```python\nfrom nlu.error import *\nfrom nlu.parser import *\n\n\ncols_format = [{'type': 'predict', 'col_num': 1, 'tagger': 'ner'},\n                {'type': 'gold', 'col_num': 2, 'tagger': 'ner'}]\n\nparser = ConllParser('testb.pred.gold', cols_format)\n\nparser.obtain_statistics(entity_stat=True, source='predict')\n\nparser.obtain_statistics(entity_stat=True, source='gold')\n\nparser.set_entity_mentions()\n\nNERErrorAnnotator.annotate(parser)\n\nparser.print_corrects()\n\nparser.print_all_errors()\n\nparser.error_overall_stats()\n```\n\nsee the section Input Format below to know what the input format is\n\n## Usage\n### import\n```python\nfrom nlu.error import *\nfrom nlu.parser import *\n```\n### Create a `ConllParser` instance first with the input of the file path with specifying the column number in `cols_format` field\n`ConllParser(filepath)`\n\n```python\ncols_format = [{'type': 'predict', 'col_num': 1, 'tagger': 'ner'},\n                {'type': 'gold', 'col_num': 2, 'tagger': 'ner'}]\n\nparser = ConllParser('testb.pred.gold', cols_format)\n```\n### obtain the basic statistics by `obtain_statistics()` method\n```python\nparser.obtain_statistics(entity_stat=True, source='predict')\n\nparser.obtain_statistics(entity_stat=True, source='gold')\n```\n### To \"Annotate\" NER Errors in the documents inside ConllParser\n`NERErrorAnnotator.annotate(parser)`\n\n### To print out all corrects/errors, use\n`parser.print_corrects()` or\n`parser.print_all_errors()`\n\nor use the function `error_overall_stats()` method to get the stats\n\n## Input File Format\n\nThe input file format of `ConllParser` is following the column format used by Conll03.\n\nFor example,\n\n```text\nNatural I-ORG O\nLanguage I-ORG O\nLaboratory I-ORG I-ORG\n...\n```\n\nwhere the first column is the text, the second and the third are the predicted and the ground truth tag respectively, where the order can be specified in the keyword `cols_format` in `ConllParser` in instantialization:\n ```\n cols_format = [{'type': 'predict', 'col_num': 1, 'tagger': 'ner'},\n                {'type': 'gold', 'col_num': 2, 'tagger': 'ner'}]  # col_num starts from 0\n```\nI recommend to use shell command `awk '{print $x}' filepath` to obtain the x-th column, like `awk '{print $4} filepath'` to obtain the 4-th column.\n\nAnd use `paste file1.txt file2.txt` to concatenate two files.\n\nFor example,\n\n```bash\nawk '{print $4}' eng.train > ner_tags_file  # $num starts from 1\npaste ner_pred_tags_file ner_tags_file\n```\n\n\n## Types of Span Errors\n\nTypes | Number of Mentions (Predicted and Gold) | Subtypes | Examples| Notes \n:---: | :---: | --- |----- |----- \nMissing Mention<br />(False Negative) | 1 | TYPES&rightarrow;O |[] &rightarrow; None # todo|\nExtra Mention<br />(False Positive) | 1 | O&rightarrow;TYPES | None &rightarrow; [...]  # todo |  \nMention with Wrong Type<br />(Type Errors) | &ge; 2 | TYPES-> TYPES - self<br />( {(p, g) \\| p &isin; T, g &isin; T - p } ) | [<sub>PER</sub>...] &rightarrow; [<sub>ORG</sub>...] # todo | But the spans are the same \nMissing Tokens | 2 | L/ R/ LR Diminished | \\[<sub>MISC</sub>1991 World Cup] &rightarrow; \\[<sub>MISC</sub>1991] \\[<sub>MISC</sub> World Cup] | also possible with type errors \nExtra Tokens | 2 | L/R/LR Expanded | [...] &rightarrow; [......]  # todo| also possible with type errors \nMissing + Extra Tokens | 2 | L/R Crossed | ..[...].. &rightarrow; .[..]... | also possible with type errors \nConflated Mention | &ge; 3 |  |  \\[]\\[]\\[] &rightarrow; \\[]  # todo | also possible with type errors \nDivided Mention | &ge; 3 |  | [<sub>MISC</sub>1991 World Cup] &rightarrow; \\[<sub>MISC</sub>1991] \\[<sub>MISC</sub> World Cup]<br />[<sub>PER</sub>Barack Hussein Obama] &rightarrow; \\[<sub>PER</sub>Barack]\\[<sub>PER</sub>Hussein]\\[<sub>PER</sub>Obama] | also possible with type errors \nComplicated Case | &ge; 3 |                                                              | \\[]\\[]\\[] &rightarrow; \\[]\\[]  # todo | also possible with type errors \nEx - <br />Mention with Wrong Segmentation<br />(Same overall range but wrong segmentation) | &ge; 4 |                                                              | \\[...]\\[......]\\[.] &rightarrow; \\[......][.....] | also possible with type errors \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ciaochiaociao/ner_error_analysis", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ner-error-analysis", "package_url": "https://pypi.org/project/ner-error-analysis/", "platform": "", "project_url": "https://pypi.org/project/ner-error-analysis/", "project_urls": {"Homepage": "https://github.com/ciaochiaociao/ner_error_analysis"}, "release_url": "https://pypi.org/project/ner-error-analysis/0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "NER Error Analysis for column (conll format) dataset including CoNLL-2003, WNUT-2017, ...", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>NER Error Analyzer</h1>\n<h2>Quick Start</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nlu.error</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nlu.parser</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n\n<span class=\"n\">cols_format</span> <span class=\"o\">=</span> <span class=\"p\">[{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'predict'</span><span class=\"p\">,</span> <span class=\"s1\">'col_num'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'tagger'</span><span class=\"p\">:</span> <span class=\"s1\">'ner'</span><span class=\"p\">},</span>\n                <span class=\"p\">{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'gold'</span><span class=\"p\">,</span> <span class=\"s1\">'col_num'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'tagger'</span><span class=\"p\">:</span> <span class=\"s1\">'ner'</span><span class=\"p\">}]</span>\n\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">ConllParser</span><span class=\"p\">(</span><span class=\"s1\">'testb.pred.gold'</span><span class=\"p\">,</span> <span class=\"n\">cols_format</span><span class=\"p\">)</span>\n\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">obtain_statistics</span><span class=\"p\">(</span><span class=\"n\">entity_stat</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s1\">'predict'</span><span class=\"p\">)</span>\n\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">obtain_statistics</span><span class=\"p\">(</span><span class=\"n\">entity_stat</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s1\">'gold'</span><span class=\"p\">)</span>\n\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">set_entity_mentions</span><span class=\"p\">()</span>\n\n<span class=\"n\">NERErrorAnnotator</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">parser</span><span class=\"p\">)</span>\n\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">print_corrects</span><span class=\"p\">()</span>\n\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">print_all_errors</span><span class=\"p\">()</span>\n\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">error_overall_stats</span><span class=\"p\">()</span>\n</pre>\n<p>see the section Input Format below to know what the input format is</p>\n<h2>Usage</h2>\n<h3>import</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nlu.error</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nlu.parser</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n<h3>Create a <code>ConllParser</code> instance first with the input of the file path with specifying the column number in <code>cols_format</code> field</h3>\n<p><code>ConllParser(filepath)</code></p>\n<pre><span class=\"n\">cols_format</span> <span class=\"o\">=</span> <span class=\"p\">[{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'predict'</span><span class=\"p\">,</span> <span class=\"s1\">'col_num'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'tagger'</span><span class=\"p\">:</span> <span class=\"s1\">'ner'</span><span class=\"p\">},</span>\n                <span class=\"p\">{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'gold'</span><span class=\"p\">,</span> <span class=\"s1\">'col_num'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'tagger'</span><span class=\"p\">:</span> <span class=\"s1\">'ner'</span><span class=\"p\">}]</span>\n\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">ConllParser</span><span class=\"p\">(</span><span class=\"s1\">'testb.pred.gold'</span><span class=\"p\">,</span> <span class=\"n\">cols_format</span><span class=\"p\">)</span>\n</pre>\n<h3>obtain the basic statistics by <code>obtain_statistics()</code> method</h3>\n<pre><span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">obtain_statistics</span><span class=\"p\">(</span><span class=\"n\">entity_stat</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s1\">'predict'</span><span class=\"p\">)</span>\n\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">obtain_statistics</span><span class=\"p\">(</span><span class=\"n\">entity_stat</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s1\">'gold'</span><span class=\"p\">)</span>\n</pre>\n<h3>To \"Annotate\" NER Errors in the documents inside ConllParser</h3>\n<p><code>NERErrorAnnotator.annotate(parser)</code></p>\n<h3>To print out all corrects/errors, use</h3>\n<p><code>parser.print_corrects()</code> or\n<code>parser.print_all_errors()</code></p>\n<p>or use the function <code>error_overall_stats()</code> method to get the stats</p>\n<h2>Input File Format</h2>\n<p>The input file format of <code>ConllParser</code> is following the column format used by Conll03.</p>\n<p>For example,</p>\n<pre>Natural I-ORG O\nLanguage I-ORG O\nLaboratory I-ORG I-ORG\n...\n</pre>\n<p>where the first column is the text, the second and the third are the predicted and the ground truth tag respectively, where the order can be specified in the keyword <code>cols_format</code> in <code>ConllParser</code> in instantialization:</p>\n<pre><code>cols_format = [{'type': 'predict', 'col_num': 1, 'tagger': 'ner'},\n               {'type': 'gold', 'col_num': 2, 'tagger': 'ner'}]  # col_num starts from 0\n</code></pre>\n<p>I recommend to use shell command <code>awk '{print $x}' filepath</code> to obtain the x-th column, like <code>awk '{print $4} filepath'</code> to obtain the 4-th column.</p>\n<p>And use <code>paste file1.txt file2.txt</code> to concatenate two files.</p>\n<p>For example,</p>\n<pre>awk <span class=\"s1\">'{print $4}'</span> eng.train &gt; ner_tags_file  <span class=\"c1\"># $num starts from 1</span>\npaste ner_pred_tags_file ner_tags_file\n</pre>\n<h2>Types of Span Errors</h2>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Types</th>\n<th align=\"center\">Number of Mentions (Predicted and Gold)</th>\n<th>Subtypes</th>\n<th>Examples</th>\n<th>Notes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Missing Mention<br>(False Negative)</td>\n<td align=\"center\">1</td>\n<td>TYPES\u2192O</td>\n<td>[] \u2192 None # todo</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">Extra Mention<br>(False Positive)</td>\n<td align=\"center\">1</td>\n<td>O\u2192TYPES</td>\n<td>None \u2192 [...]  # todo</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">Mention with Wrong Type<br>(Type Errors)</td>\n<td align=\"center\">\u2265 2</td>\n<td>TYPES-&gt; TYPES - self<br>( {(p, g) | p \u2208 T, g \u2208 T - p } )</td>\n<td>[<sub>PER</sub>...] \u2192 [<sub>ORG</sub>...] # todo</td>\n<td>But the spans are the same</td>\n</tr>\n<tr>\n<td align=\"center\">Missing Tokens</td>\n<td align=\"center\">2</td>\n<td>L/ R/ LR Diminished</td>\n<td>[<sub>MISC</sub>1991 World Cup] \u2192 [<sub>MISC</sub>1991] [<sub>MISC</sub> World Cup]</td>\n<td>also possible with type errors</td>\n</tr>\n<tr>\n<td align=\"center\">Extra Tokens</td>\n<td align=\"center\">2</td>\n<td>L/R/LR Expanded</td>\n<td>[...] \u2192 [......]  # todo</td>\n<td>also possible with type errors</td>\n</tr>\n<tr>\n<td align=\"center\">Missing + Extra Tokens</td>\n<td align=\"center\">2</td>\n<td>L/R Crossed</td>\n<td>..[...].. \u2192 .[..]...</td>\n<td>also possible with type errors</td>\n</tr>\n<tr>\n<td align=\"center\">Conflated Mention</td>\n<td align=\"center\">\u2265 3</td>\n<td></td>\n<td>[][][] \u2192 []  # todo</td>\n<td>also possible with type errors</td>\n</tr>\n<tr>\n<td align=\"center\">Divided Mention</td>\n<td align=\"center\">\u2265 3</td>\n<td></td>\n<td>[<sub>MISC</sub>1991 World Cup] \u2192 [<sub>MISC</sub>1991] [<sub>MISC</sub> World Cup]<br>[<sub>PER</sub>Barack Hussein Obama] \u2192 [<sub>PER</sub>Barack][<sub>PER</sub>Hussein][<sub>PER</sub>Obama]</td>\n<td>also possible with type errors</td>\n</tr>\n<tr>\n<td align=\"center\">Complicated Case</td>\n<td align=\"center\">\u2265 3</td>\n<td></td>\n<td>[][][] \u2192 [][]  # todo</td>\n<td>also possible with type errors</td>\n</tr>\n<tr>\n<td align=\"center\">Ex - <br>Mention with Wrong Segmentation<br>(Same overall range but wrong segmentation)</td>\n<td align=\"center\">\u2265 4</td>\n<td></td>\n<td>[...][......][.] \u2192 [......][.....]</td>\n<td>also possible with type errors</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 6471262, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c9c77b9a83c6191ba7028421df59f190", "sha256": "c91178990d24939ad189578a5332a28e585297223562696a12d1bcecd8a1e8f5"}, "downloads": -1, "filename": "ner_error_analysis-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c9c77b9a83c6191ba7028421df59f190", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 36003, "upload_time": "2020-01-17T06:21:18", "upload_time_iso_8601": "2020-01-17T06:21:18.615547Z", "url": "https://files.pythonhosted.org/packages/24/ac/7c21f4fcd2518c3f31020908627c20dc8a22a31bde08e9c64c3d43b67d77/ner_error_analysis-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a52978ce04b61050fcdd7554503267ad", "sha256": "d6249015685cb601df5ac497b1d89f9a0de06960a58aaf26ff98ac6d4cb5cd4d"}, "downloads": -1, "filename": "ner_error_analysis-0.1.tar.gz", "has_sig": false, "md5_digest": "a52978ce04b61050fcdd7554503267ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 34984, "upload_time": "2020-01-17T06:21:21", "upload_time_iso_8601": "2020-01-17T06:21:21.921152Z", "url": "https://files.pythonhosted.org/packages/58/64/ec3a48d15c1d656ce350cf3a3282c100f7b0bc5cce4ec64c1cd9fad1a1e9/ner_error_analysis-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "4b7f693e3fa439e54fe214832e76a979", "sha256": "513b733e000a49c89cf5494136ca6f90acb7ffe78c8a84c23af24d1e66b3e2f5"}, "downloads": -1, "filename": "ner_error_analysis-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4b7f693e3fa439e54fe214832e76a979", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 36015, "upload_time": "2020-01-17T07:24:23", "upload_time_iso_8601": "2020-01-17T07:24:23.435740Z", "url": "https://files.pythonhosted.org/packages/c1/fc/ff7a1a2c7d20e92e7b3edc1589bce18c87da060edc3e9acb140278ae2d93/ner_error_analysis-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f5ade2229307959b5bc4961bbfbdf5c", "sha256": "30719bd97ece8e33d45312da0650c9624ff5e92d629cae564860b458732ac6b3"}, "downloads": -1, "filename": "ner_error_analysis-0.2.tar.gz", "has_sig": false, "md5_digest": "9f5ade2229307959b5bc4961bbfbdf5c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 35014, "upload_time": "2020-01-17T07:24:24", "upload_time_iso_8601": "2020-01-17T07:24:24.839337Z", "url": "https://files.pythonhosted.org/packages/e0/e6/106dbac58c7928185c953cd3e31837eaae4e954e892b08967393ca3fcd1c/ner_error_analysis-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4b7f693e3fa439e54fe214832e76a979", "sha256": "513b733e000a49c89cf5494136ca6f90acb7ffe78c8a84c23af24d1e66b3e2f5"}, "downloads": -1, "filename": "ner_error_analysis-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4b7f693e3fa439e54fe214832e76a979", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 36015, "upload_time": "2020-01-17T07:24:23", "upload_time_iso_8601": "2020-01-17T07:24:23.435740Z", "url": "https://files.pythonhosted.org/packages/c1/fc/ff7a1a2c7d20e92e7b3edc1589bce18c87da060edc3e9acb140278ae2d93/ner_error_analysis-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f5ade2229307959b5bc4961bbfbdf5c", "sha256": "30719bd97ece8e33d45312da0650c9624ff5e92d629cae564860b458732ac6b3"}, "downloads": -1, "filename": "ner_error_analysis-0.2.tar.gz", "has_sig": false, "md5_digest": "9f5ade2229307959b5bc4961bbfbdf5c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 35014, "upload_time": "2020-01-17T07:24:24", "upload_time_iso_8601": "2020-01-17T07:24:24.839337Z", "url": "https://files.pythonhosted.org/packages/e0/e6/106dbac58c7928185c953cd3e31837eaae4e954e892b08967393ca3fcd1c/ner_error_analysis-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:26 2020"}