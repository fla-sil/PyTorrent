{"info": {"author": "Monik Raj Behera", "author_email": "bmonikraj@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: Other Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Adaptive Technologies", "Topic :: Internet", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Internet :: WWW/HTTP :: WSGI :: Server", "Topic :: Software Development", "Topic :: System :: Distributed Computing", "Topic :: Utilities"], "description": "# SharkRadar\n\n![Travis (.org)](https://img.shields.io/travis/bmonikraj/sharkradar) ![Coveralls github](https://img.shields.io/coveralls/github/bmonikraj/sharkradar) [![GitHub license](https://img.shields.io/github/license/bmonikraj/sharkradar)](https://github.com/bmonikraj/sharkradar/blob/master/LICENSE.rst) ![PyPI](https://img.shields.io/pypi/v/sharkradar) ![Libraries.io dependency status for GitHub repo](https://img.shields.io/librariesio/github/bmonikraj/sharkradar) \n\n**Sharkradar** is a lightweight, yet flexible **service registry and discovery** tool, compatible with any microservice *(independent of tech stack)*, as long as your microservice supports **HTTP** for communication (generally, it surely would, unless you have some custom protocol for communication. In that case, *Congratulations* :D !)\n\n## Installation \n```python\npip install sharkradar\n```\n\n## Usage\n`sharkradar --help`\n\n## Technical Documentation\n[**Complete Technical Documentation available here, on project's wiki**](https://github.com/bmonikraj/sharkradar/wiki)\n\n## Overview\nSharkradar **is** <br/>\n- Service (RD) registry and discovery <br/>\n- HTTP based service <br/>\n- Compatible with any microservice <br/>\n- Weighted priority discovery <br/>\n- Service which tells you the address of *best* instance of server which can handle your request <br/>\n- Can register/discover heterogeneous instances (of microservices) and homogeneous instances <br/>\n\nSharkradar is **not** <br/>\n- API Gateway <br/>\n- Not a router to redirect requests <br/>\n- Not a proxy/reverse-proxy <br/>\n- A poller which will check if the services are up. It only knows if services are up, only when service tells itself <br/>\n\n## Technical Requirements\n\n 1. OS - Any OS which supports Python :D\n 2. Dependency - Python (>=3 is preferred)\n 3. Networking - similar to any other microservice/server (like exposing ports, IP address binding, etc). Must be reachable by all the services using sharkradar\n 4. Any specific module/library/agent for Client/Microservices using Sharkradar - **NO** (Only a HTTP communication library/ability to make HTTP GET, PUT calls :D)\n 5. Reachability - Sharkradar **must be reachable** by all the clients/microservices/services using sharkradar (network administrators, please take a note :D)\n 6. Availability - Sharkradar is a standalone application, *for now!*. So sharkradar could be the single point of inter-microservice communication, and also single point of failure (of inter microservice communication)\n\n## Architecture\nThe architecture of sharkradar is pretty straight forward, keeping in mind:\n\n - Usability\n - Compatibility\n - Lightweight\n - Low storage footprint\n - Low computational footprint\n\n![Architecture](https://drive.google.com/uc?id=19wH9r_8AU4gkSgNn-n-iT8IL0mpNZodX)\n\n**The fundamental principle behind the architecture is a \"publish/ask\" mechanism** \n\n> **Service R(registry)** => \"You *(microservices/applications/consumers)* give me your fitness report. If I receive, I will give you work to do based on your ability, I am not gonna ask you for it :(. And if I don't receive it within time, you will not be considered for work until next report\"\n\n> **Service D(discovery)** => \"You want to know which of person can do the job in best way and how to reach him, ask me! I will tell you best person's address, ONLY -_-. I am not gonna take you there\"\n\n**Service Registration**\n - Client (Microservice - who wants to be discoverable through shark radar)\n - Client sends a health report with `params` to shark radar at some decided `frequency` in every last report sent. \n - If sharkradar doesn't receive the health report, after the threshold time provided by client in previous report, the client is removed from the list of registered services *(hence won't be considered for discovery)*\n - Auto-deregistration happens, if health report is not sent.\n - No separate API / endpoint for registration. First health report will be considered as regitration.\n\n**Service Discovery**\n\n - Any client (with any tech stack) which understands and able to communicate to HTTP, can ask for a service location (*IP address* and *Port*) \n - The address given is for the best (selected by a weight based priority algorithm) client with the asked `service name`\n\n## Contribution | Issues or Bugs | Suggestions\n- For *contribution*, fork the repository, develop and create Pull request with `master` branch \n- For *Issue and bug reporting*, create a Issue on the repository, we or our fellow developer community will definitely look into it. And if you win the race and solve the bug, don't hesitate to take the credit by raising a pull request.\n- For *suggestions and features*, send a mail to the maintainer. Have already developed the feature, even better. Create a pull request for the same. Our maintainers will review the same and merge it :)\n\n## Maintainers\n[Monik Raj Behera](https://github.com/bmonikraj) - [bmonikraj@gmail.com](mailto:bmonikraj@gmail.com) <br/>\n[Preetam Nahak](https://github.com/preetamnahak007) - [preetamnahak@gmail.com](mailto:preetamnahak@gmail.com)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bmonikraj.github.io/sharkradar", "keywords": "", "license": "BSD-3-Clause", "maintainer": "Preetam Keshari Nahak", "maintainer_email": "preetamnahak@gmail.com", "name": "sharkradar", "package_url": "https://pypi.org/project/sharkradar/", "platform": "", "project_url": "https://pypi.org/project/sharkradar/", "project_urls": {"Code": "https://github.com/bmonikraj/sharkradar", "Documentation": "https://github.com/bmonikraj/sharkradar/wiki", "Homepage": "https://bmonikraj.github.io/sharkradar", "Issue tracker": "https://github.com/bmonikraj/sharkradar/issues"}, "release_url": "https://pypi.org/project/sharkradar/1.2.0/", "requires_dist": ["flask (>=1.0.1)", "pysqlite3 (>=0.2.0)", "waitress (>=1.2.0)", "click (>=7.0)", "pyfiglet (>=0.8.0)", "termcolor (>=1.1.0)", "colorama (>=0.4.1)"], "requires_python": ">=2.7, >=3", "summary": "Lightweight micro service registry and discovery tool, compatible with any HTTP based microservice", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SharkRadar</h1>\n<p><img alt=\"Travis (.org)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0c9f4343e6985721b79d4610669fa2de25623ca6/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f626d6f6e696b72616a2f736861726b7261646172\"> <img alt=\"Coveralls github\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/10fb9be093e358de05c61b2b7fab5768cde050ae/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f626d6f6e696b72616a2f736861726b7261646172\"> <a href=\"https://github.com/bmonikraj/sharkradar/blob/master/LICENSE.rst\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fa65b01458f1f3561fbd100d6ef82775ca77b173/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f626d6f6e696b72616a2f736861726b7261646172\"></a> <img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0fcce54cf128dc9292934ec1e23493bc17ef89b4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f736861726b7261646172\"> <img alt=\"Libraries.io dependency status for GitHub repo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c26b575b3815e3967cde99503f8cdb101f72fd33/68747470733a2f2f696d672e736869656c64732e696f2f6c6962726172696573696f2f6769746875622f626d6f6e696b72616a2f736861726b7261646172\"></p>\n<p><strong>Sharkradar</strong> is a lightweight, yet flexible <strong>service registry and discovery</strong> tool, compatible with any microservice <em>(independent of tech stack)</em>, as long as your microservice supports <strong>HTTP</strong> for communication (generally, it surely would, unless you have some custom protocol for communication. In that case, <em>Congratulations</em> :D !)</p>\n<h2>Installation</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">sharkradar</span>\n</pre>\n<h2>Usage</h2>\n<p><code>sharkradar --help</code></p>\n<h2>Technical Documentation</h2>\n<p><a href=\"https://github.com/bmonikraj/sharkradar/wiki\" rel=\"nofollow\"><strong>Complete Technical Documentation available here, on project's wiki</strong></a></p>\n<h2>Overview</h2>\n<p>Sharkradar <strong>is</strong> <br></p>\n<ul>\n<li>Service (RD) registry and discovery <br></li>\n<li>HTTP based service <br></li>\n<li>Compatible with any microservice <br></li>\n<li>Weighted priority discovery <br></li>\n<li>Service which tells you the address of <em>best</em> instance of server which can handle your request <br></li>\n<li>Can register/discover heterogeneous instances (of microservices) and homogeneous instances <br></li>\n</ul>\n<p>Sharkradar is <strong>not</strong> <br></p>\n<ul>\n<li>API Gateway <br></li>\n<li>Not a router to redirect requests <br></li>\n<li>Not a proxy/reverse-proxy <br></li>\n<li>A poller which will check if the services are up. It only knows if services are up, only when service tells itself <br></li>\n</ul>\n<h2>Technical Requirements</h2>\n<ol>\n<li>OS - Any OS which supports Python :D</li>\n<li>Dependency - Python (&gt;=3 is preferred)</li>\n<li>Networking - similar to any other microservice/server (like exposing ports, IP address binding, etc). Must be reachable by all the services using sharkradar</li>\n<li>Any specific module/library/agent for Client/Microservices using Sharkradar - <strong>NO</strong> (Only a HTTP communication library/ability to make HTTP GET, PUT calls :D)</li>\n<li>Reachability - Sharkradar <strong>must be reachable</strong> by all the clients/microservices/services using sharkradar (network administrators, please take a note :D)</li>\n<li>Availability - Sharkradar is a standalone application, <em>for now!</em>. So sharkradar could be the single point of inter-microservice communication, and also single point of failure (of inter microservice communication)</li>\n</ol>\n<h2>Architecture</h2>\n<p>The architecture of sharkradar is pretty straight forward, keeping in mind:</p>\n<ul>\n<li>Usability</li>\n<li>Compatibility</li>\n<li>Lightweight</li>\n<li>Low storage footprint</li>\n<li>Low computational footprint</li>\n</ul>\n<p><img alt=\"Architecture\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4726f39755740aed3b25530c14e40640a76190e6/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f69643d3139774839725f38415534676b53674e6e2d6e2d695438494c306d704e5a6f6458\"></p>\n<p><strong>The fundamental principle behind the architecture is a \"publish/ask\" mechanism</strong></p>\n<blockquote>\n<p><strong>Service R(registry)</strong> =&gt; \"You <em>(microservices/applications/consumers)</em> give me your fitness report. If I receive, I will give you work to do based on your ability, I am not gonna ask you for it :(. And if I don't receive it within time, you will not be considered for work until next report\"</p>\n</blockquote>\n<blockquote>\n<p><strong>Service D(discovery)</strong> =&gt; \"You want to know which of person can do the job in best way and how to reach him, ask me! I will tell you best person's address, ONLY -_-. I am not gonna take you there\"</p>\n</blockquote>\n<p><strong>Service Registration</strong></p>\n<ul>\n<li>Client (Microservice - who wants to be discoverable through shark radar)</li>\n<li>Client sends a health report with <code>params</code> to shark radar at some decided <code>frequency</code> in every last report sent.</li>\n<li>If sharkradar doesn't receive the health report, after the threshold time provided by client in previous report, the client is removed from the list of registered services <em>(hence won't be considered for discovery)</em></li>\n<li>Auto-deregistration happens, if health report is not sent.</li>\n<li>No separate API / endpoint for registration. First health report will be considered as regitration.</li>\n</ul>\n<p><strong>Service Discovery</strong></p>\n<ul>\n<li>Any client (with any tech stack) which understands and able to communicate to HTTP, can ask for a service location (<em>IP address</em> and <em>Port</em>)</li>\n<li>The address given is for the best (selected by a weight based priority algorithm) client with the asked <code>service name</code></li>\n</ul>\n<h2>Contribution | Issues or Bugs | Suggestions</h2>\n<ul>\n<li>For <em>contribution</em>, fork the repository, develop and create Pull request with <code>master</code> branch</li>\n<li>For <em>Issue and bug reporting</em>, create a Issue on the repository, we or our fellow developer community will definitely look into it. And if you win the race and solve the bug, don't hesitate to take the credit by raising a pull request.</li>\n<li>For <em>suggestions and features</em>, send a mail to the maintainer. Have already developed the feature, even better. Create a pull request for the same. Our maintainers will review the same and merge it :)</li>\n</ul>\n<h2>Maintainers</h2>\n<p><a href=\"https://github.com/bmonikraj\" rel=\"nofollow\">Monik Raj Behera</a> - <a href=\"mailto:bmonikraj@gmail.com\">bmonikraj@gmail.com</a> <br>\n<a href=\"https://github.com/preetamnahak007\" rel=\"nofollow\">Preetam Nahak</a> - <a href=\"mailto:preetamnahak@gmail.com\">preetamnahak@gmail.com</a></p>\n\n          </div>"}, "last_serial": 5727125, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "94127f0ec524589a2b9d0c8c167f04f8", "sha256": "35c86a034acb436a7fddd6837aa30b173db4127190fc7d4168594679839e5f56"}, "downloads": -1, "filename": "sharkradar-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "94127f0ec524589a2b9d0c8c167f04f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, >=3", "size": 8696, "upload_time": "2019-08-13T22:55:51", "upload_time_iso_8601": "2019-08-13T22:55:51.580535Z", "url": "https://files.pythonhosted.org/packages/83/d2/c5890fbc50d0ffc75710887450ae4f6b2eb6d47912564e8a739a5dd7bdc5/sharkradar-1.0-py3-none-any.whl", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "a8754bd6f0b50b316005bb977f0dc4f2", "sha256": "8481db57d88335d97627a2b885b3435d30ae3b321fd8023a0417b9d590ad4b93"}, "downloads": -1, "filename": "sharkradar-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a8754bd6f0b50b316005bb977f0dc4f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, >=3", "size": 10470, "upload_time": "2019-08-14T20:35:49", "upload_time_iso_8601": "2019-08-14T20:35:49.758635Z", "url": "https://files.pythonhosted.org/packages/4b/73/27c989767e709bd59375cc151b20eb58f7d3d8a3709bf18dfd284b8409d0/sharkradar-1.1-py3-none-any.whl", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "fa24d7d78f1630b2659544cc6e0c0ade", "sha256": "f549958837d897f000c3bf65e6fd3436d836c81972bef4a9d9b8fcd94678ac23"}, "downloads": -1, "filename": "sharkradar-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fa24d7d78f1630b2659544cc6e0c0ade", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, >=3", "size": 10533, "upload_time": "2019-08-14T21:09:35", "upload_time_iso_8601": "2019-08-14T21:09:35.850781Z", "url": "https://files.pythonhosted.org/packages/23/90/27b4f5fa6d49b88955bef36bc5c45b94faacfe387c2449ebf06fd69e5328/sharkradar-1.1.1-py3-none-any.whl", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "ae33f182c56a10559da4e81bc22269e2", "sha256": "c296084bab41aaf90337eafb1d1daf1125af81daf734bfa6315de75d4c0e1e90"}, "downloads": -1, "filename": "sharkradar-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ae33f182c56a10559da4e81bc22269e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, >=3", "size": 12656, "upload_time": "2019-08-15T18:51:48", "upload_time_iso_8601": "2019-08-15T18:51:48.793474Z", "url": "https://files.pythonhosted.org/packages/ac/31/17bcf02d1f0dc0a083519cb0c0f26c9180ef74b9b283afd02b2fbd9a32d1/sharkradar-1.1.2-py3-none-any.whl", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "91fc11ccfac384e284c02c99e6d1d5c5", "sha256": "8e7be117bd28a55128813118647c2753cf6f2fbfbbe1ee070979653f72a3695c"}, "downloads": -1, "filename": "sharkradar-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "91fc11ccfac384e284c02c99e6d1d5c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, >=3", "size": 12696, "upload_time": "2019-08-15T19:16:07", "upload_time_iso_8601": "2019-08-15T19:16:07.069029Z", "url": "https://files.pythonhosted.org/packages/c1/4f/0787b2d087308bfdf62bb7fd9134eb10e16859f0c51962e594b84e1ef5ec/sharkradar-1.1.3-py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "e048042bd4abf1d41b72390093f9cb3c", "sha256": "8da58b6a7471ebeaadc49bc6c43deae6b6449357f3f9c68c2a5c398185f4ab58"}, "downloads": -1, "filename": "sharkradar-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e048042bd4abf1d41b72390093f9cb3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, >=3", "size": 2392751, "upload_time": "2019-08-25T13:56:50", "upload_time_iso_8601": "2019-08-25T13:56:50.572402Z", "url": "https://files.pythonhosted.org/packages/7c/a7/67fe83bbbea33c735bbf2c68cb403e56422ddeafbdba486f20ac5c0f121f/sharkradar-1.2.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e048042bd4abf1d41b72390093f9cb3c", "sha256": "8da58b6a7471ebeaadc49bc6c43deae6b6449357f3f9c68c2a5c398185f4ab58"}, "downloads": -1, "filename": "sharkradar-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e048042bd4abf1d41b72390093f9cb3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, >=3", "size": 2392751, "upload_time": "2019-08-25T13:56:50", "upload_time_iso_8601": "2019-08-25T13:56:50.572402Z", "url": "https://files.pythonhosted.org/packages/7c/a7/67fe83bbbea33c735bbf2c68cb403e56422ddeafbdba486f20ac5c0f121f/sharkradar-1.2.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:13:35 2020"}