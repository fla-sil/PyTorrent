{"info": {"author": "Miro Hron\u010dok", "author_email": "miro@hroncok.cz", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: tox", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Testing"], "description": "===============\ntox-current-env\n===============\n---------------------------------------------------------------------------------------\n`tox <https://tox.readthedocs.io/>`_  plugin to run tests in current Python environment\n---------------------------------------------------------------------------------------\n\nThe ``tox-current-env`` plugin adds two options:\n\n``tox --current-env``\n   Runs the tox testenv's ``commands`` in the current Python environment\n   (that is, the environment where ``tox`` is invoked from and installed in).\n   Unlike regular ``tox`` invocation, this installs no dependencies declared in ``deps``.\n   An attempt to run this with a Python version that doesn't match will fail\n   (if ``tox`` is invoked from an Python 3.7 environment, any non 3.7 testenv will fail).\n\n``tox --print-deps-only`` / ``--print-deps-to-file``\n    Instead of running any ``commands``,\n    simply prints the declared dependencies in ``deps`` to the standard output or specified file.\n    This is useful for preparing the current environment for the above.\n    ``--print-deps-to-file`` will overwrite the file if it already exists.\n\nInvoking ``tox`` without any of the above options should behave as regular ``tox`` invocation without this plugin.\nAny deviation from this behavior is considered a bug.\n\nThe plugin disables *tox's way* of providing a testing environment,\nbut assumes that you supply one in *some other way*.\nAlways run ``tox`` with this plugin in a fresh isolated environment,\nsuch as Python virtualenv, Linux container or chroot.\n\\\nSee other caveats below.\n\n\nMotivation\n----------\n\nObviously, ``tox`` was created to run tests in isolated Python virtual environments.\nThe ``--current-env`` flag totally defeats the purpose of ``tox``.\nWhy would anybody do that, you might ask?\n\nWell, it turns out that ``tox`` became too popular and gained another purpose.\n\nThe Python ecosystem now has formal `specifications <https://packaging.python.org/specifications/>`_ for many pieces of package metadata like versions or dependencies.\nHowever, there is no standardization yet for declaring *test dependencies* or *running tests*.\nThe most popular de-facto standard for that today is ``tox``,\nand we expect a future standard to evolve from ``tox.ini``.\nThis plugin lets us use ``tox``'s dependency lists and testing commands for environments other than Python venvs.\n\nWe hope this plugin will enable community best practices around ``tox`` configuration\nto grow to better accomodate non-virtualenv environments in general \u2013 for example,\nLinux distros, Conda, or containers.\n\nSpecifically, this plugin was created for `Fedora <https://fedoralovespython.org/>`_'s needs.\nWhen we package Python software as RPM packages, we try to run the project's test suite during package build.\nHowever, we need to test if the software works integrated into Fedora,\nnot with packages downloaded from PyPI into a fresh environment.\nBy running the tests in *current environment*, we can achieve that.\n\nIf you are interested in the RPM packaging part of this,\nsee Fedora's `%pyproject RPM macros <https://src.fedoraproject.org/rpms/pyproject-rpm-macros>`_.\n\n\nInstallation\n------------\n\nInstall this via ``pip``:\n\n.. code-block:: console\n\n   $ python -m pip install tox-current-env\n\nOr install the development version by cloning `the git repository <https://github.com/fedora-python/tox-current-env>`_\nand ``pip``-installing locally:\n\n.. code-block:: console\n\n   $ git clone https://github.com/fedora-python/tox-current-env\n   $ cd tox-current-env\n   $ python -m pip install -e .\n\n\nUsage\n-----\n\nWhen the plugin is installed, use ``tox`` with ``--current-env`` or ``--print-deps-only`` and all the other options as usual. Assuming your ``tox`` is installed on Python 3.7:\n\n.. code-block:: console\n\n   $ tox -e py37 --current-env\n   py37 create: /home/pythonista/projects/holy-grail/tests/.tox/py37\n   py37 installed: ...list of packages from the current environment...\n   py37 run-test-pre: PYTHONHASHSEED='3333333333'\n   py37 run-test: commands...\n   ...runs tests in current environment's Python...\n   ___________________________________ summary ____________________________________\n     py37: commands succeeded\n     congratulations :)\n\nAttempting to run the ``py36`` environment's test will fail:\n\n.. code-block:: console\n\n   $ tox -e py36 --current-env\n   py36 create: /home/pythonista/projects/holy-grail/tests/.tox/py36\n   ERROR: InterpreterMismatch: tox_current_env: interpreter versions do not match:\n       in current env: (3, 7, 4, 'final', 0)\n       requested: (3, 6, 9, 'final', 0)\n   ___________________________________ summary ____________________________________\n   ERROR:  py36: InterpreterMismatch: tox_current_env: interpreter versions do not match:\n       in current env: (3, 7, 4, 'final', 0)\n       requested: (3, 6, 9, 'final', 0)\n\nTo get list of test dependencies, run:\n\n.. code-block:: console\n\n   $ tox -e py37 --print-deps-only\n   py37 create: /home/pythonista/projects/holy-grail/tests/.tox/py37\n   py37 installed: ...you can see almost anything here...\n   py37 run-test-pre: PYTHONHASHSEED='3333333333'\n   dep1\n   dep2\n   ...\n   ___________________________________ summary ____________________________________\n     py37: commands succeeded\n     congratulations :)\n\n\nCaveats, warnings and limitations\n---------------------------------\n\nUse an isolated environment\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nRunning (especially third party software's) tests in your system Python environment is dangerous.\nAlways use this plugin in an isolated environment,\nsuch as Python virtualenv, Linux container, virtual machine or chroot.\nYou have been warned.\n\nDo not rely on virtualenv details\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIn order to support the ``python`` command in the ``commands`` section,\nthe current environment invocation of ``tox`` creates a fake virtual environment\nthat just has a symbolic link to the Python executable.\nThe link is named ``python`` even if the real interpreter's name is different\n(such as ``python3.7`` or ``pypy``).\nAny other commands are not linked anywhere and it is the users' responsibility\nto make sure such commands are in ``$PATH`` and use the correct Python.\nThis can lead to slightly different results of tests than invoking them directly,\nespecially if you have assumptions about ``sys.executable`` or other commands\nin your tests.\n\nAs a specific example, tests should invoke ``python -m pytest`` rather than assuming\nthe ``pytest`` command is present and uses the correct version of Python.\n\nDon't mix current-env and regular tox runs\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTox caches the virtualenvs it creates, and doesn't distinguish between\nregular virtualenvs and ``--current-env``.\nDon't mix ``tox --current-env`` or ``tox --print-deps-only`` runs\nand regular ``tox`` runs (without the flag).\nIf you ever need to do this, use tox's ``--recreate/-r`` flag to clear the cache.\n\nThe plugin should abort with a meaningful error message if this is detected,\nbut in some cases (such as running ``tox --current-env``, uninstalling the\nplugin, and running ``tox``), you will get undefined results\n(such as installing packages from PyPI into your current environment).\n\nEnvironment variables are not passed by default\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAlthough the plugin name suggests that current environment is used for tests,\nit means the Python environment, not Shell.\nIf you want the tests to see environment variables of the calling process,\nuse the ``TOX_TESTENV_PASSENV`` environment variable.\nRead `the documentation for passing environment variables to tox\n<https://tox.readthedocs.io/en/latest/config.html#conf-passenv>`_.\n\n\nOther limitations and known bugs\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe ``installed:`` line in the output of ``tox --print-deps-only`` shows irrelevant output\n(based on the content of the real or faked virtual environment).\n\nRegardless of any `Python flags <https://docs.python.org/3/using/cmdline.html>`_ used in the shebang of ``tox``,\nthe tests are invoked with ``sys.executable`` without any added flags\n(unless explicitly invoked with them in the ``commands`` section).\n\nThe current environment's Python is tested for the major and minor version only.\nDifferent interpreters with the same Python version (such as CPython and PyPy) are treated as equal.\n\nOnly Linux is supported, with special emphasis on Fedora.\nThis plugin might work on other Unix-like systems,\nbut does not work on Microsoft Windows.\n\nThis is alpha quality software.\nUse it at your on your own risk.\nPull requests with improvements are welcome.\n\n\nDevelopment, issues, support\n----------------------------\n\nThe development happens on GitHub,\nat the `fedora-python/tox-current-env <https://github.com/fedora-python/tox-current-env>`_ repository.\nYou can use the `issue tracker <https://github.com/fedora-python/tox-current-env/issues>`_  there for any discussion\nor send Pull Requests.\n\n\nTests\n~~~~~\n\nIn order to run the tests, you'll need ``tox`` and Python 3.6, 3.7 and 3.8 installed.\nThe integration tests assume all three are available.\nOn Fedora, you just need to ``dnf install tox``.\n\nRun ``tox`` to invoke the tests.\n\nRunning tests of this plugin with its own ``--current-env`` flag will most likely blow up.\n\n\nLicense\n-------\n\nThe ``tox-current-env`` project is licensed under the so-called MIT license, full text available in the `LICENSE <https://github.com/fedora-python/tox-current-env/blob/master/LICENSE>`_ file.\n\n\nCode of Conduct\n---------------\n\nThe ``tox-current-env`` project follows the `Fedora's Code of Conduct <https://docs.fedoraproject.org/en-US/project/code-of-conduct/>`_.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fedora-python/tox-current-env", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tox-current-env", "package_url": "https://pypi.org/project/tox-current-env/", "platform": "", "project_url": "https://pypi.org/project/tox-current-env/", "project_urls": {"Homepage": "https://github.com/fedora-python/tox-current-env"}, "release_url": "https://pypi.org/project/tox-current-env/0.0.2/", "requires_dist": ["tox (>=3.5)"], "requires_python": ">=3.6", "summary": "Use current environment instead of virtualenv for tox testenvs", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The <tt><span class=\"pre\">tox-current-env</span></tt> plugin adds two options:</p>\n<dl>\n<dt><tt>tox <span class=\"pre\">--current-env</span></tt></dt>\n<dd>Runs the tox testenv\u2019s <tt>commands</tt> in the current Python environment\n(that is, the environment where <tt>tox</tt> is invoked from and installed in).\nUnlike regular <tt>tox</tt> invocation, this installs no dependencies declared in <tt>deps</tt>.\nAn attempt to run this with a Python version that doesn\u2019t match will fail\n(if <tt>tox</tt> is invoked from an Python 3.7 environment, any non 3.7 testenv will fail).</dd>\n<dt><tt>tox <span class=\"pre\">--print-deps-only</span></tt> / <tt><span class=\"pre\">--print-deps-to-file</span></tt></dt>\n<dd>Instead of running any <tt>commands</tt>,\nsimply prints the declared dependencies in <tt>deps</tt> to the standard output or specified file.\nThis is useful for preparing the current environment for the above.\n<tt><span class=\"pre\">--print-deps-to-file</span></tt> will overwrite the file if it already exists.</dd>\n</dl>\n<p>Invoking <tt>tox</tt> without any of the above options should behave as regular <tt>tox</tt> invocation without this plugin.\nAny deviation from this behavior is considered a bug.</p>\n<p>The plugin disables <em>tox\u2019s way</em> of providing a testing environment,\nbut assumes that you supply one in <em>some other way</em>.\nAlways run <tt>tox</tt> with this plugin in a fresh isolated environment,\nsuch as Python virtualenv, Linux container or chroot.\nSee other caveats below.</p>\n<div id=\"motivation\">\n<h2>Motivation</h2>\n<p>Obviously, <tt>tox</tt> was created to run tests in isolated Python virtual environments.\nThe <tt><span class=\"pre\">--current-env</span></tt> flag totally defeats the purpose of <tt>tox</tt>.\nWhy would anybody do that, you might ask?</p>\n<p>Well, it turns out that <tt>tox</tt> became too popular and gained another purpose.</p>\n<p>The Python ecosystem now has formal <a href=\"https://packaging.python.org/specifications/\" rel=\"nofollow\">specifications</a> for many pieces of package metadata like versions or dependencies.\nHowever, there is no standardization yet for declaring <em>test dependencies</em> or <em>running tests</em>.\nThe most popular de-facto standard for that today is <tt>tox</tt>,\nand we expect a future standard to evolve from <tt>tox.ini</tt>.\nThis plugin lets us use <tt>tox</tt>\u2019s dependency lists and testing commands for environments other than Python venvs.</p>\n<p>We hope this plugin will enable community best practices around <tt>tox</tt> configuration\nto grow to better accomodate non-virtualenv environments in general \u2013 for example,\nLinux distros, Conda, or containers.</p>\n<p>Specifically, this plugin was created for <a href=\"https://fedoralovespython.org/\" rel=\"nofollow\">Fedora</a>\u2019s needs.\nWhen we package Python software as RPM packages, we try to run the project\u2019s test suite during package build.\nHowever, we need to test if the software works integrated into Fedora,\nnot with packages downloaded from PyPI into a fresh environment.\nBy running the tests in <em>current environment</em>, we can achieve that.</p>\n<p>If you are interested in the RPM packaging part of this,\nsee Fedora\u2019s <a href=\"https://src.fedoraproject.org/rpms/pyproject-rpm-macros\" rel=\"nofollow\">%pyproject RPM macros</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install this via <tt>pip</tt>:</p>\n<pre><span class=\"gp\">$</span> python -m pip install tox-current-env\n</pre>\n<p>Or install the development version by cloning <a href=\"https://github.com/fedora-python/tox-current-env\" rel=\"nofollow\">the git repository</a>\nand <tt>pip</tt>-installing locally:</p>\n<pre><span class=\"gp\">$</span> git clone https://github.com/fedora-python/tox-current-env\n<span class=\"gp\">$</span> <span class=\"nb\">cd</span> tox-current-env\n<span class=\"gp\">$</span> python -m pip install -e .\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>When the plugin is installed, use <tt>tox</tt> with <tt><span class=\"pre\">--current-env</span></tt> or <tt><span class=\"pre\">--print-deps-only</span></tt> and all the other options as usual. Assuming your <tt>tox</tt> is installed on Python 3.7:</p>\n<pre><span class=\"gp\">$</span> tox -e py37 --current-env\n<span class=\"go\">py37 create: /home/pythonista/projects/holy-grail/tests/.tox/py37\npy37 installed: ...list of packages from the current environment...\npy37 run-test-pre: PYTHONHASHSEED='3333333333'\npy37 run-test: commands...\n...runs tests in current environment's Python...\n___________________________________ summary ____________________________________\n  py37: commands succeeded\n  congratulations :)</span>\n</pre>\n<p>Attempting to run the <tt>py36</tt> environment\u2019s test will fail:</p>\n<pre><span class=\"gp\">$</span> tox -e py36 --current-env\n<span class=\"go\">py36 create: /home/pythonista/projects/holy-grail/tests/.tox/py36\nERROR: InterpreterMismatch: tox_current_env: interpreter versions do not match:\n    in current env: (3, 7, 4, 'final', 0)\n    requested: (3, 6, 9, 'final', 0)\n___________________________________ summary ____________________________________\nERROR:  py36: InterpreterMismatch: tox_current_env: interpreter versions do not match:\n    in current env: (3, 7, 4, 'final', 0)\n    requested: (3, 6, 9, 'final', 0)</span>\n</pre>\n<p>To get list of test dependencies, run:</p>\n<pre><span class=\"gp\">$</span> tox -e py37 --print-deps-only\n<span class=\"go\">py37 create: /home/pythonista/projects/holy-grail/tests/.tox/py37\npy37 installed: ...you can see almost anything here...\npy37 run-test-pre: PYTHONHASHSEED='3333333333'\ndep1\ndep2\n...\n___________________________________ summary ____________________________________\n  py37: commands succeeded\n  congratulations :)</span>\n</pre>\n</div>\n<div id=\"caveats-warnings-and-limitations\">\n<h2>Caveats, warnings and limitations</h2>\n<div id=\"use-an-isolated-environment\">\n<h3>Use an isolated environment</h3>\n<p>Running (especially third party software\u2019s) tests in your system Python environment is dangerous.\nAlways use this plugin in an isolated environment,\nsuch as Python virtualenv, Linux container, virtual machine or chroot.\nYou have been warned.</p>\n</div>\n<div id=\"do-not-rely-on-virtualenv-details\">\n<h3>Do not rely on virtualenv details</h3>\n<p>In order to support the <tt>python</tt> command in the <tt>commands</tt> section,\nthe current environment invocation of <tt>tox</tt> creates a fake virtual environment\nthat just has a symbolic link to the Python executable.\nThe link is named <tt>python</tt> even if the real interpreter\u2019s name is different\n(such as <tt>python3.7</tt> or <tt>pypy</tt>).\nAny other commands are not linked anywhere and it is the users\u2019 responsibility\nto make sure such commands are in <tt>$PATH</tt> and use the correct Python.\nThis can lead to slightly different results of tests than invoking them directly,\nespecially if you have assumptions about <tt>sys.executable</tt> or other commands\nin your tests.</p>\n<p>As a specific example, tests should invoke <tt>python <span class=\"pre\">-m</span> pytest</tt> rather than assuming\nthe <tt>pytest</tt> command is present and uses the correct version of Python.</p>\n</div>\n<div id=\"don-t-mix-current-env-and-regular-tox-runs\">\n<h3>Don\u2019t mix current-env and regular tox runs</h3>\n<p>Tox caches the virtualenvs it creates, and doesn\u2019t distinguish between\nregular virtualenvs and <tt><span class=\"pre\">--current-env</span></tt>.\nDon\u2019t mix <tt>tox <span class=\"pre\">--current-env</span></tt> or <tt>tox <span class=\"pre\">--print-deps-only</span></tt> runs\nand regular <tt>tox</tt> runs (without the flag).\nIf you ever need to do this, use tox\u2019s <tt><span class=\"pre\">--recreate/-r</span></tt> flag to clear the cache.</p>\n<p>The plugin should abort with a meaningful error message if this is detected,\nbut in some cases (such as running <tt>tox <span class=\"pre\">--current-env</span></tt>, uninstalling the\nplugin, and running <tt>tox</tt>), you will get undefined results\n(such as installing packages from PyPI into your current environment).</p>\n</div>\n<div id=\"environment-variables-are-not-passed-by-default\">\n<h3>Environment variables are not passed by default</h3>\n<p>Although the plugin name suggests that current environment is used for tests,\nit means the Python environment, not Shell.\nIf you want the tests to see environment variables of the calling process,\nuse the <tt>TOX_TESTENV_PASSENV</tt> environment variable.\nRead <a href=\"https://tox.readthedocs.io/en/latest/config.html#conf-passenv\" rel=\"nofollow\">the documentation for passing environment variables to tox</a>.</p>\n</div>\n<div id=\"other-limitations-and-known-bugs\">\n<h3>Other limitations and known bugs</h3>\n<p>The <tt>installed:</tt> line in the output of <tt>tox <span class=\"pre\">--print-deps-only</span></tt> shows irrelevant output\n(based on the content of the real or faked virtual environment).</p>\n<p>Regardless of any <a href=\"https://docs.python.org/3/using/cmdline.html\" rel=\"nofollow\">Python flags</a> used in the shebang of <tt>tox</tt>,\nthe tests are invoked with <tt>sys.executable</tt> without any added flags\n(unless explicitly invoked with them in the <tt>commands</tt> section).</p>\n<p>The current environment\u2019s Python is tested for the major and minor version only.\nDifferent interpreters with the same Python version (such as CPython and PyPy) are treated as equal.</p>\n<p>Only Linux is supported, with special emphasis on Fedora.\nThis plugin might work on other Unix-like systems,\nbut does not work on Microsoft Windows.</p>\n<p>This is alpha quality software.\nUse it at your on your own risk.\nPull requests with improvements are welcome.</p>\n</div>\n</div>\n<div id=\"development-issues-support\">\n<h2>Development, issues, support</h2>\n<p>The development happens on GitHub,\nat the <a href=\"https://github.com/fedora-python/tox-current-env\" rel=\"nofollow\">fedora-python/tox-current-env</a> repository.\nYou can use the <a href=\"https://github.com/fedora-python/tox-current-env/issues\" rel=\"nofollow\">issue tracker</a>  there for any discussion\nor send Pull Requests.</p>\n<div id=\"tests\">\n<h3>Tests</h3>\n<p>In order to run the tests, you\u2019ll need <tt>tox</tt> and Python 3.6, 3.7 and 3.8 installed.\nThe integration tests assume all three are available.\nOn Fedora, you just need to <tt>dnf install tox</tt>.</p>\n<p>Run <tt>tox</tt> to invoke the tests.</p>\n<p>Running tests of this plugin with its own <tt><span class=\"pre\">--current-env</span></tt> flag will most likely blow up.</p>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The <tt><span class=\"pre\">tox-current-env</span></tt> project is licensed under the so-called MIT license, full text available in the <a href=\"https://github.com/fedora-python/tox-current-env/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> file.</p>\n</div>\n<div id=\"code-of-conduct\">\n<h2>Code of Conduct</h2>\n<p>The <tt><span class=\"pre\">tox-current-env</span></tt> project follows the <a href=\"https://docs.fedoraproject.org/en-US/project/code-of-conduct/\" rel=\"nofollow\">Fedora\u2019s Code of Conduct</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 5666992, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1cdfe5963ecd14ae00648e0efcc52716", "sha256": "012fcceda8bddc9ce316359c043f7427e654161ab0febe9f79a6888518b70fb0"}, "downloads": -1, "filename": "tox_current_env-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1cdfe5963ecd14ae00648e0efcc52716", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7121, "upload_time": "2019-07-23T10:59:03", "upload_time_iso_8601": "2019-07-23T10:59:03.318744Z", "url": "https://files.pythonhosted.org/packages/9c/cf/ea5ae7d287c12f73d978966d971c3a1fef7e240e4938f835dd33554bbfa1/tox_current_env-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1fcb2387107e16ecf444ac212d9c40a", "sha256": "861396b0da3a58c24a1af0f5dfd81e1f2eda1668c6632de35c6ab4264796e32e"}, "downloads": -1, "filename": "tox-current-env-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f1fcb2387107e16ecf444ac212d9c40a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9334, "upload_time": "2019-07-23T10:58:37", "upload_time_iso_8601": "2019-07-23T10:58:37.703083Z", "url": "https://files.pythonhosted.org/packages/a3/e4/67192df56bc9bb85aacfbb4afc2489017299bc530d60d209284eb4ca3ad9/tox-current-env-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0c8a288b1bef08316c5f61120299c36d", "sha256": "2d5f45321d69b95036af14c255223f88c9357403f6eae08c1e074cbba885419d"}, "downloads": -1, "filename": "tox_current_env-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0c8a288b1bef08316c5f61120299c36d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7765, "upload_time": "2019-08-12T15:05:41", "upload_time_iso_8601": "2019-08-12T15:05:41.068029Z", "url": "https://files.pythonhosted.org/packages/36/42/f9f9ad665c1476d1d0a31b1b880089ea79e2e0f2ce3190ae9c738a55d792/tox_current_env-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c79fca48c22ca5875610def6347651aa", "sha256": "e4f434a7dd993702c18a5e8c71d917d2dbb170204f5b57351791e36cf81102cf"}, "downloads": -1, "filename": "tox-current-env-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c79fca48c22ca5875610def6347651aa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10881, "upload_time": "2019-08-12T15:05:42", "upload_time_iso_8601": "2019-08-12T15:05:42.876373Z", "url": "https://files.pythonhosted.org/packages/19/0b/71aa41fa8eb7cd7b855b616c5b5c348c0f81cf3033f2c828960ce335bdf6/tox-current-env-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0c8a288b1bef08316c5f61120299c36d", "sha256": "2d5f45321d69b95036af14c255223f88c9357403f6eae08c1e074cbba885419d"}, "downloads": -1, "filename": "tox_current_env-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0c8a288b1bef08316c5f61120299c36d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7765, "upload_time": "2019-08-12T15:05:41", "upload_time_iso_8601": "2019-08-12T15:05:41.068029Z", "url": "https://files.pythonhosted.org/packages/36/42/f9f9ad665c1476d1d0a31b1b880089ea79e2e0f2ce3190ae9c738a55d792/tox_current_env-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c79fca48c22ca5875610def6347651aa", "sha256": "e4f434a7dd993702c18a5e8c71d917d2dbb170204f5b57351791e36cf81102cf"}, "downloads": -1, "filename": "tox-current-env-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c79fca48c22ca5875610def6347651aa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10881, "upload_time": "2019-08-12T15:05:42", "upload_time_iso_8601": "2019-08-12T15:05:42.876373Z", "url": "https://files.pythonhosted.org/packages/19/0b/71aa41fa8eb7cd7b855b616c5b5c348c0f81cf3033f2c828960ce335bdf6/tox-current-env-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:49:21 2020"}