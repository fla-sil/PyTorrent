{"info": {"author": "Michael Bader", "author_email": "michaeldmbader@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3"], "description": "==============\ndjango-vitae\n==============\n\nDjango-Vitae is a CV generator that can be used with the `Django`_ web framework.\n\n.. _Django: https://docs.djangoproject.com/\n\nMany academics have trouble keeping CVs up to date. Django-Vitae was created to streamline this process. Django-Vitae allows users to make highly customizable curricula vitae for use on their websites. The application provides models for common entries on curricula vitae such as education, employment, publications, teaching, and service. Django-Vitae eliminates many of the repetitive tasks related to producing curricula vitae. The included templates provide a complete CV \"out of the box\", but allows researchers who might be interested in customizing the format using Django templating language. \n\nDjango-Vitae uses `semantic versioning`_. Though it aims to provide a complete suite to create a CV, the project does not been tested extensively (and **you** can contribute to that effort!) and pieces might still throw errors. See notes below for quirks and errors in usage that must be resolved. \n\n.. _semantic versioning: http://semver.org/\n\n\nRequirements\n------------\n\nDjango-Vitae is developed and tested in Python 3. It depends on several external packages (other than Django): \n\n* `Markdown <https://pypi.org/project/Markdown/>`_ (makes pretty HTML with simple text entries)\n* `citeproc-py <https://pypi.org/project/citeproc-py/>`_ (creates citations formatted according to desired `CSL`_ styles [not yet implemented])\n* `citeproc-py-styles <https://pypi.org/project/citeproc-py-styles/>`_ (adds library of `CSL`_ styles)\n* `reportlab <https://www.reportlab.com/>`_ (creates PDFs on-the-fly)\n\n.. _CSL: http://citationstyles.org/\n\nInstallation\n------------\nFrom `PyPI <https://pypi.org/>`_::\n\n    pip install django-vitae\n\nFor the latest development version: \n\n::\n\n    git clone https://github.com/mikebader/django-vitae\n    cd django-vitae\n    python setup.py install\n\nIf you are new to Django_, you may want to visit the `Getting Started`_ guide in the documentation. \n\n.. _`Getting Started`: https://djangocv.readthedocs.io/en/latest/getting_started.html\n\nDocumentation\n-------------\n\nIncomplete documentation can be found in the ``docs/`` directory and at http://djangocv.readthedocs.io/.\n\nTesting\n-------\nTo test, you need to install the following packages: \n\n* `Nose`_ & `django-nose`_ (used for testing suite)\n* `Coverage`_ (used to document testing coverage)\n\n.. _Nose: https://pypi.org/project/nose/\n.. _django-nose: https://pypi.org/project/nose/\n.. _Coverage: https://pypi.org/project/coverage/\n\n:: \n\n    pip install nose\n    pip install django-nose\n    pip install coverage\n\nA test suite can be found in the ``tests/`` directory. With `Nose`_ and `Coverage`_ installed, you may run the tests with ``runtests.py``. From the ``django-vitae`` root directory: \n\n::\n\n    ./runtests.py\n\n\nTo test only a single model, you may use the flag ``--attr=<model_name>`` for the model (not implemented for all models). For example, to test books, you would use:\n\n::\n\n    ./runtests.py --attr=book\n\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mikebader/django-vitae", "keywords": "", "license": "BSD Three Clause", "maintainer": "", "maintainer_email": "", "name": "django-vitae", "package_url": "https://pypi.org/project/django-vitae/", "platform": "", "project_url": "https://pypi.org/project/django-vitae/", "project_urls": {"Homepage": "https://github.com/mikebader/django-vitae"}, "release_url": "https://pypi.org/project/django-vitae/0.1.0/", "requires_dist": ["django (>=1.11)", "markdown (>=2.6.11)", "citeproc-py (>=0.4.0)", "citeproc-py-styles (>=0.1.1)", "django-widgets (>=-0.1.16)", "reportlab (<4,>=3.5.8)"], "requires_python": "", "summary": "A CV generator built for the Django web framework.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django-Vitae is a CV generator that can be used with the <a href=\"https://docs.djangoproject.com/\" rel=\"nofollow\">Django</a> web framework.</p>\n<p>Many academics have trouble keeping CVs up to date. Django-Vitae was created to streamline this process. Django-Vitae allows users to make highly customizable curricula vitae for use on their websites. The application provides models for common entries on curricula vitae such as education, employment, publications, teaching, and service. Django-Vitae eliminates many of the repetitive tasks related to producing curricula vitae. The included templates provide a complete CV \u201cout of the box\u201d, but allows researchers who might be interested in customizing the format using Django templating language.</p>\n<p>Django-Vitae uses <a href=\"http://semver.org/\" rel=\"nofollow\">semantic versioning</a>. Though it aims to provide a complete suite to create a CV, the project does not been tested extensively (and <strong>you</strong> can contribute to that effort!) and pieces might still throw errors. See notes below for quirks and errors in usage that must be resolved.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Django-Vitae is developed and tested in Python 3. It depends on several external packages (other than Django):</p>\n<ul>\n<li><a href=\"https://pypi.org/project/Markdown/\" rel=\"nofollow\">Markdown</a> (makes pretty HTML with simple text entries)</li>\n<li><a href=\"https://pypi.org/project/citeproc-py/\" rel=\"nofollow\">citeproc-py</a> (creates citations formatted according to desired <a href=\"http://citationstyles.org/\" rel=\"nofollow\">CSL</a> styles [not yet implemented])</li>\n<li><a href=\"https://pypi.org/project/citeproc-py-styles/\" rel=\"nofollow\">citeproc-py-styles</a> (adds library of <a href=\"http://citationstyles.org/\" rel=\"nofollow\">CSL</a> styles)</li>\n<li><a href=\"https://www.reportlab.com/\" rel=\"nofollow\">reportlab</a> (creates PDFs on-the-fly)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>From <a href=\"https://pypi.org/\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>pip install django-vitae\n</pre>\n<p>For the latest development version:</p>\n<pre>git clone https://github.com/mikebader/django-vitae\ncd django-vitae\npython setup.py install\n</pre>\n<p>If you are new to <a href=\"https://docs.djangoproject.com/\" rel=\"nofollow\">Django</a>, you may want to visit the <a href=\"https://djangocv.readthedocs.io/en/latest/getting_started.html\" rel=\"nofollow\">Getting Started</a> guide in the documentation.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Incomplete documentation can be found in the <tt>docs/</tt> directory and at <a href=\"http://djangocv.readthedocs.io/\" rel=\"nofollow\">http://djangocv.readthedocs.io/</a>.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>To test, you need to install the following packages:</p>\n<ul>\n<li><a href=\"https://pypi.org/project/nose/\" rel=\"nofollow\">Nose</a> &amp; <a href=\"https://pypi.org/project/nose/\" rel=\"nofollow\">django-nose</a> (used for testing suite)</li>\n<li><a href=\"https://pypi.org/project/coverage/\" rel=\"nofollow\">Coverage</a> (used to document testing coverage)</li>\n</ul>\n<pre>pip install nose\npip install django-nose\npip install coverage\n</pre>\n<p>A test suite can be found in the <tt>tests/</tt> directory. With <a href=\"https://pypi.org/project/nose/\" rel=\"nofollow\">Nose</a> and <a href=\"https://pypi.org/project/coverage/\" rel=\"nofollow\">Coverage</a> installed, you may run the tests with <tt>runtests.py</tt>. From the <tt><span class=\"pre\">django-vitae</span></tt> root directory:</p>\n<pre>./runtests.py\n</pre>\n<p>To test only a single model, you may use the flag <tt><span class=\"pre\">--attr=&lt;model_name&gt;</span></tt> for the model (not implemented for all models). For example, to test books, you would use:</p>\n<pre>./runtests.py --attr=book\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4370613, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7e6feae7f3cae70435839d4de9b64886", "sha256": "5976834a5923bc885d7d38a5d33caebc53fe294386e04917f70f36378523f0b9"}, "downloads": -1, "filename": "django_vitae-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7e6feae7f3cae70435839d4de9b64886", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50643, "upload_time": "2018-09-18T17:04:36", "upload_time_iso_8601": "2018-09-18T17:04:36.138787Z", "url": "https://files.pythonhosted.org/packages/7d/e4/c7d739117658ddb8ed4ab5f360ee2ed403eb3610fb0771f01979acd8e6a0/django_vitae-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c33be61ed3093b7cdf25b423d8bb086", "sha256": "a0c45923f24e2e8bc2f4021aa4f56b3c138516bdf03a2fb7563140d74631a3cf"}, "downloads": -1, "filename": "django-vitae-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9c33be61ed3093b7cdf25b423d8bb086", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 667825, "upload_time": "2018-09-18T17:04:38", "upload_time_iso_8601": "2018-09-18T17:04:38.926829Z", "url": "https://files.pythonhosted.org/packages/c5/97/fd2c5bf4b2216d9b52c5c099c6794989ad2576f27c2a29b81cd95138d064/django-vitae-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d18522ded29a54e13603f7eeb9902e2d", "sha256": "927bc17b7ea80cdb304eff42c8a399d3411a4a40974f353572c74ff8654a8a9d"}, "downloads": -1, "filename": "django_vitae-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d18522ded29a54e13603f7eeb9902e2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 86720, "upload_time": "2018-09-22T03:53:41", "upload_time_iso_8601": "2018-09-22T03:53:41.153963Z", "url": "https://files.pythonhosted.org/packages/52/1d/59ffcb34086cfd70ff224cdeb23cd0faf10339a91e89716a3d2039a77c98/django_vitae-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2b7eeae3d04963bad8e38c22df61346", "sha256": "4dda53ca1d92ed1bec148be231c475a3e0922d41e1cbaefbdd3d3c0d45c76f4b"}, "downloads": -1, "filename": "django-vitae-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c2b7eeae3d04963bad8e38c22df61346", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77408, "upload_time": "2018-09-22T03:53:43", "upload_time_iso_8601": "2018-09-22T03:53:43.082971Z", "url": "https://files.pythonhosted.org/packages/3b/d5/e38d1d11b1eef6fbf1194c7b07ba9c8f60033c60b40973ba7f2ae4d62a28/django-vitae-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "8ccdfa74ed025da8166b5dba5c21566c", "sha256": "f677e85172d1667e932d6eb7d31960fa6e3d43ceae675b8fd0d25eeab54573cf"}, "downloads": -1, "filename": "django_vitae-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8ccdfa74ed025da8166b5dba5c21566c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 111128, "upload_time": "2018-10-13T00:55:19", "upload_time_iso_8601": "2018-10-13T00:55:19.969415Z", "url": "https://files.pythonhosted.org/packages/1d/67/87f2e7b3731f10da2693535a2bbd6e61c7323173cb3ba56d11dac6e46ed2/django_vitae-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf7b522ba6c33d71a654a77803c10dd7", "sha256": "afd3f506b246c3fd7feaaf1cb5223c24519125107c71930de28e4c953887612e"}, "downloads": -1, "filename": "django-vitae-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cf7b522ba6c33d71a654a77803c10dd7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 798887, "upload_time": "2018-10-13T00:55:23", "upload_time_iso_8601": "2018-10-13T00:55:23.586555Z", "url": "https://files.pythonhosted.org/packages/62/30/1c9bc3b3e0ee53c37fbd5965ceff9808824a11889308b3d8014bf06b09db/django-vitae-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8ccdfa74ed025da8166b5dba5c21566c", "sha256": "f677e85172d1667e932d6eb7d31960fa6e3d43ceae675b8fd0d25eeab54573cf"}, "downloads": -1, "filename": "django_vitae-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8ccdfa74ed025da8166b5dba5c21566c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 111128, "upload_time": "2018-10-13T00:55:19", "upload_time_iso_8601": "2018-10-13T00:55:19.969415Z", "url": "https://files.pythonhosted.org/packages/1d/67/87f2e7b3731f10da2693535a2bbd6e61c7323173cb3ba56d11dac6e46ed2/django_vitae-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf7b522ba6c33d71a654a77803c10dd7", "sha256": "afd3f506b246c3fd7feaaf1cb5223c24519125107c71930de28e4c953887612e"}, "downloads": -1, "filename": "django-vitae-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cf7b522ba6c33d71a654a77803c10dd7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 798887, "upload_time": "2018-10-13T00:55:23", "upload_time_iso_8601": "2018-10-13T00:55:23.586555Z", "url": "https://files.pythonhosted.org/packages/62/30/1c9bc3b3e0ee53c37fbd5965ceff9808824a11889308b3d8014bf06b09db/django-vitae-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:00 2020"}