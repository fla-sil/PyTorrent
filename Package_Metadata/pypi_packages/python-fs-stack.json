{"info": {"author": "Peter Henderson", "author_email": "peterhenderson@byu.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: No Input/Output (Daemon)", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: Other/Proprietary License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Topic :: Internet :: WWW/HTTP", "Topic :: Sociology :: Genealogy", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=================\n python-fs-stack\n=================\n\n``python-fs-stack`` provides a Python package that simplifies access to the\nFamilySearch_ `REST-style API`_.\n\n.. _FamilySearch: https://new.familysearch.org/\n.. _REST-style API: https://devnet.familysearch.org/docs/api\n\n:Home Page:\n  http://pypi.python.org/pypi/python-fs-stack\n:Source Code:\n  https://github.com/familysearch-devnet/python-fs-stack\n\n\n.. contents::\n\n\nDependencies\n============\n\n- Python 2.4 or later\n- simplejson_, if using Python older than 2.6\n- wsgi_intercept_ 0.5.0 or later (only required to run test suite)\n\n.. _simplejson: http://pypi.python.org/pypi/simplejson\n.. _wsgi_intercept: http://pypi.python.org/pypi/wsgi_intercept\n\n\nInstallation\n============\n\nUsing pip_::\n\n  pip install python-fs-stack\n\nor using easy_install_ (from setuptools_ or distribute_)::\n\n  easy_install python-fs-stack\n\nor (after downloading manually)::\n\n  python setup.py install\n\n.. _pip: http://www.pip-installer.org/\n.. _easy_install: http://peak.telecommunity.com/DevCenter/EasyInstall\n.. _setuptools: http://pypi.python.org/pypi/setuptools\n.. _distribute: http://pypi.python.org/pypi/distribute\n\n\nExample Usage\n=============\n\nFirst, import the FamilySearch class::\n\n  from familysearch import FamilySearch\n\n\nAuthenticating with FamilySearch\n--------------------------------\n\n``python-fs-stack`` supports several ways of initiating a session with\nFamilySearch, including Basic Authentication, OAuth, and resuming a previous\nsession.\n\nLog in immediately with Basic Authentication::\n\n  fs = FamilySearch('ClientApp/1.0', 'developer_key', 'username', 'password')\n\nLog in in a separate step with Basic Authentication::\n\n  fs = FamilySearch('ClientApp/1.0', 'developer_key')\n  fs.login('username', 'password')\n\nLog in in two steps with Basic Authentication::\n\n  fs = FamilySearch('ClientApp/1.0', 'developer_key')\n  fs.initialize()\n  fs.authenticate('username', 'password')\n\nLog in with OAuth::\n\n  import webbrowser\n  fs = FamilySearch('ClientApp/1.0', 'developer_key')\n  fs.request_token()\n  webbrowser.open(fs.authorize())\n  # [Enter username and password into browser window that opens]\n  verifier = [verifier from resulting web page]\n  fs.access_token(verifier)\n\nResume a previous session::\n\n  fs = FamilySearch('ClientApp/1.0', 'developer_key', session='session_id')\n\nUse the production system instead of the reference system::\n\n  fs = FamilySearch('ClientApp/1.0', 'developer_key', base='https://api.familysearch.org')\n\n\nMaintaining and Ending a Session\n--------------------------------\n\nKeep the current session active::\n\n  fs.session()\n\nLog out::\n\n  fs.logout()\n\n\nAccessing Family Tree Information\n---------------------------------\n\nPrint current user's family tree details::\n\n  print fs.person()\n\nTo specify a person ID to retrieve, pass the ID as an argument::\n\n  print fs.person('ABCD-123')\n\nTo print multiple family tree entries, pass a list of IDs as an argument. To\npass additional parameters to the API, simply pass them as named arguments::\n\n  print fs.person(['ABCD-123', 'EFGH-456'], events='all', children='all')\n\nPrint the latest version of a list of persons (this request is more lightweight\nthan a full person request, so it supports more IDs at once)::\n\n  for person in fs.version(['ABCD-123', 'EFGH-456']):\n      print person['id'], person['version']\n\nPrint the contents of a persona::\n\n  print fs.persona('ABCD-123')\n\nPrint current user's pedigree::\n\n  print fs.pedigree()\n\nFormat the pedigree output more nicely::\n\n  import pprint\n  pprint.pprint(fs.pedigree())\n\n\nSearching for Persons in the Family Tree\n----------------------------------------\n\nSearch for a male named John Smith::\n\n  results = fs.search(givenName='John', familyName='Smith', gender='Male', maxResults=10)\n\nRetrieve the second page of the previous search::\n\n  more_results = fs.search(contextId=results[0]['contextId'], maxResults=10, startIndex=10)\n\nSearch for an exact match for John Smith (use an ``options`` dict to specify\noptions with periods in their names)::\n\n  results = fs.search(options={'givenName.exact': 'John', 'familyName.exact': 'Smith'}, gender='Male', maxResults=10)\n\n\nSearching for Possible Duplicates\n---------------------------------\n\nSearch for possible duplicates of a person::\n\n  matches = fs.match('ABCD-123')\n\nCompute match score between two persons::\n\n  match = fs.match('ABCD-123', id='EFGH-456')\n\nSearch for possible duplicates matching specified parameters::\n\n  matches = fs.match(givenName='John', familyName='Smith', gender='Male', birthDate='1900', birthPlace='USA', deathDate='1950', deathPlace='USA')\n\n\nStandardizing Places, Names, and Dates\n--------------------------------------\n\nLook up a place by name::\n\n  place = fs.place(place='paris')\n\nLook up a place by ID::\n\n  place = fs.place(5061509)\n\nLook up a list of places by ID::\n\n  places = fs.place([5061509, 5061446])\n\nLook up a place by name, showing only the most likely result, returning results in another locale::\n\n  place = fs.place(place='germany', filter=True, locale='de')\n\nStandardize a name::\n\n  name = fs.name('John Smith')\n\nStandardize a list of names::\n\n  names = fs.name(['John Smith', 'Jane Doe'])\n\nStandardize a date::\n\n  date = fs.date('1-1-11')\n\nStandardize a list of dates::\n\n  dates = fs.date(['1-1-11', 'december 31 1999'])", "description_content_type": null, "docs_url": "https://pythonhosted.org/python-fs-stack/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/python-fs-stack", "keywords": "FamilySearch,genealogy,family history,API,OAuth,REST,JSON", "license": "FamilySearch API License Agreement <https://devnet.familysearch.org/downloads/sample-code/sample-clients/sample-client-license>", "maintainer": null, "maintainer_email": null, "name": "python-fs-stack", "package_url": "https://pypi.org/project/python-fs-stack/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/python-fs-stack/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/python-fs-stack"}, "release_url": "https://pypi.org/project/python-fs-stack/0.2/", "requires_dist": null, "requires_python": null, "summary": "Python wrapper for all FamilySearch APIs", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt><span class=\"pre\">python-fs-stack</span></tt> provides a Python package that simplifies access to the\n<a href=\"https://new.familysearch.org/\" rel=\"nofollow\">FamilySearch</a> <a href=\"https://devnet.familysearch.org/docs/api\" rel=\"nofollow\">REST-style API</a>.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Home Page:</th><td><a href=\"http://pypi.python.org/pypi/python-fs-stack\" rel=\"nofollow\">http://pypi.python.org/pypi/python-fs-stack</a></td>\n</tr>\n<tr><th>Source Code:</th><td><a href=\"https://github.com/familysearch-devnet/python-fs-stack\" rel=\"nofollow\">https://github.com/familysearch-devnet/python-fs-stack</a></td>\n</tr>\n</tbody>\n</table>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#dependencies\" id=\"id1\" rel=\"nofollow\">Dependencies</a></li>\n<li><a href=\"#installation\" id=\"id2\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#example-usage\" id=\"id3\" rel=\"nofollow\">Example Usage</a><ul>\n<li><a href=\"#authenticating-with-familysearch\" id=\"id4\" rel=\"nofollow\">Authenticating with FamilySearch</a></li>\n<li><a href=\"#maintaining-and-ending-a-session\" id=\"id5\" rel=\"nofollow\">Maintaining and Ending a Session</a></li>\n<li><a href=\"#accessing-family-tree-information\" id=\"id6\" rel=\"nofollow\">Accessing Family Tree Information</a></li>\n<li><a href=\"#searching-for-persons-in-the-family-tree\" id=\"id7\" rel=\"nofollow\">Searching for Persons in the Family Tree</a></li>\n<li><a href=\"#searching-for-possible-duplicates\" id=\"id8\" rel=\"nofollow\">Searching for Possible Duplicates</a></li>\n<li><a href=\"#standardizing-places-names-and-dates\" id=\"id9\" rel=\"nofollow\">Standardizing Places, Names, and Dates</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"dependencies\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Dependencies</a></h2>\n<ul>\n<li>Python 2.4 or later</li>\n<li><a href=\"http://pypi.python.org/pypi/simplejson\" rel=\"nofollow\">simplejson</a>, if using Python older than 2.6</li>\n<li><a href=\"http://pypi.python.org/pypi/wsgi_intercept\" rel=\"nofollow\">wsgi_intercept</a> 0.5.0 or later (only required to run test suite)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Installation</a></h2>\n<p>Using <a href=\"http://www.pip-installer.org/\" rel=\"nofollow\">pip</a>:</p>\n<pre>pip install python-fs-stack\n</pre>\n<p>or using <a href=\"http://peak.telecommunity.com/DevCenter/EasyInstall\" rel=\"nofollow\">easy_install</a> (from <a href=\"http://pypi.python.org/pypi/setuptools\" rel=\"nofollow\">setuptools</a> or <a href=\"http://pypi.python.org/pypi/distribute\" rel=\"nofollow\">distribute</a>):</p>\n<pre>easy_install python-fs-stack\n</pre>\n<p>or (after downloading manually):</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"example-usage\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Example Usage</a></h2>\n<p>First, import the FamilySearch class:</p>\n<pre>from familysearch import FamilySearch\n</pre>\n<div id=\"authenticating-with-familysearch\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Authenticating with FamilySearch</a></h3>\n<p><tt><span class=\"pre\">python-fs-stack</span></tt> supports several ways of initiating a session with\nFamilySearch, including Basic Authentication, OAuth, and resuming a previous\nsession.</p>\n<p>Log in immediately with Basic Authentication:</p>\n<pre>fs = FamilySearch('ClientApp/1.0', 'developer_key', 'username', 'password')\n</pre>\n<p>Log in in a separate step with Basic Authentication:</p>\n<pre>fs = FamilySearch('ClientApp/1.0', 'developer_key')\nfs.login('username', 'password')\n</pre>\n<p>Log in in two steps with Basic Authentication:</p>\n<pre>fs = FamilySearch('ClientApp/1.0', 'developer_key')\nfs.initialize()\nfs.authenticate('username', 'password')\n</pre>\n<p>Log in with OAuth:</p>\n<pre>import webbrowser\nfs = FamilySearch('ClientApp/1.0', 'developer_key')\nfs.request_token()\nwebbrowser.open(fs.authorize())\n# [Enter username and password into browser window that opens]\nverifier = [verifier from resulting web page]\nfs.access_token(verifier)\n</pre>\n<p>Resume a previous session:</p>\n<pre>fs = FamilySearch('ClientApp/1.0', 'developer_key', session='session_id')\n</pre>\n<p>Use the production system instead of the reference system:</p>\n<pre>fs = FamilySearch('ClientApp/1.0', 'developer_key', base='https://api.familysearch.org')\n</pre>\n</div>\n<div id=\"maintaining-and-ending-a-session\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Maintaining and Ending a Session</a></h3>\n<p>Keep the current session active:</p>\n<pre>fs.session()\n</pre>\n<p>Log out:</p>\n<pre>fs.logout()\n</pre>\n</div>\n<div id=\"accessing-family-tree-information\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Accessing Family Tree Information</a></h3>\n<p>Print current user\u2019s family tree details:</p>\n<pre>print fs.person()\n</pre>\n<p>To specify a person ID to retrieve, pass the ID as an argument:</p>\n<pre>print fs.person('ABCD-123')\n</pre>\n<p>To print multiple family tree entries, pass a list of IDs as an argument. To\npass additional parameters to the API, simply pass them as named arguments:</p>\n<pre>print fs.person(['ABCD-123', 'EFGH-456'], events='all', children='all')\n</pre>\n<p>Print the latest version of a list of persons (this request is more lightweight\nthan a full person request, so it supports more IDs at once):</p>\n<pre>for person in fs.version(['ABCD-123', 'EFGH-456']):\n    print person['id'], person['version']\n</pre>\n<p>Print the contents of a persona:</p>\n<pre>print fs.persona('ABCD-123')\n</pre>\n<p>Print current user\u2019s pedigree:</p>\n<pre>print fs.pedigree()\n</pre>\n<p>Format the pedigree output more nicely:</p>\n<pre>import pprint\npprint.pprint(fs.pedigree())\n</pre>\n</div>\n<div id=\"searching-for-persons-in-the-family-tree\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Searching for Persons in the Family Tree</a></h3>\n<p>Search for a male named John Smith:</p>\n<pre>results = fs.search(givenName='John', familyName='Smith', gender='Male', maxResults=10)\n</pre>\n<p>Retrieve the second page of the previous search:</p>\n<pre>more_results = fs.search(contextId=results[0]['contextId'], maxResults=10, startIndex=10)\n</pre>\n<p>Search for an exact match for John Smith (use an <tt>options</tt> dict to specify\noptions with periods in their names):</p>\n<pre>results = fs.search(options={'givenName.exact': 'John', 'familyName.exact': 'Smith'}, gender='Male', maxResults=10)\n</pre>\n</div>\n<div id=\"searching-for-possible-duplicates\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Searching for Possible Duplicates</a></h3>\n<p>Search for possible duplicates of a person:</p>\n<pre>matches = fs.match('ABCD-123')\n</pre>\n<p>Compute match score between two persons:</p>\n<pre>match = fs.match('ABCD-123', id='EFGH-456')\n</pre>\n<p>Search for possible duplicates matching specified parameters:</p>\n<pre>matches = fs.match(givenName='John', familyName='Smith', gender='Male', birthDate='1900', birthPlace='USA', deathDate='1950', deathPlace='USA')\n</pre>\n</div>\n<div id=\"standardizing-places-names-and-dates\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Standardizing Places, Names, and Dates</a></h3>\n<p>Look up a place by name:</p>\n<pre>place = fs.place(place='paris')\n</pre>\n<p>Look up a place by ID:</p>\n<pre>place = fs.place(5061509)\n</pre>\n<p>Look up a list of places by ID:</p>\n<pre>places = fs.place([5061509, 5061446])\n</pre>\n<p>Look up a place by name, showing only the most likely result, returning results in another locale:</p>\n<pre>place = fs.place(place='germany', filter=True, locale='de')\n</pre>\n<p>Standardize a name:</p>\n<pre>name = fs.name('John Smith')\n</pre>\n<p>Standardize a list of names:</p>\n<pre>names = fs.name(['John Smith', 'Jane Doe'])\n</pre>\n<p>Standardize a date:</p>\n<pre>date = fs.date('1-1-11')\n</pre>\n<p>Standardize a list of dates:</p>\n<pre>dates = fs.date(['1-1-11', 'december 31 1999'])\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 797941, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "16128d38a8a1d59013a0612487234cd8", "sha256": "3e0c1e2671553044715a00b62244ab2c123c3e848ff00e20fa22b3c6f82b7522"}, "downloads": -1, "filename": "python-fs-stack-0.1.tar.gz", "has_sig": false, "md5_digest": "16128d38a8a1d59013a0612487234cd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7471, "upload_time": "2011-02-09T21:44:14", "upload_time_iso_8601": "2011-02-09T21:44:14.421215Z", "url": "https://files.pythonhosted.org/packages/bc/4a/72557c49753d924029c750a8e4b92a73d6154038545ce2fe5ef4369b1a1f/python-fs-stack-0.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "2931c459de0787740085482ac2431a8e", "sha256": "46a082cbe12e89ead2d5a7781fbe1742eb43a1ce08fcd95fbb9f4c2df4234c58"}, "downloads": -1, "filename": "python-fs-stack-0.1.zip", "has_sig": false, "md5_digest": "2931c459de0787740085482ac2431a8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10597, "upload_time": "2011-02-10T02:08:33", "upload_time_iso_8601": "2011-02-10T02:08:33.714457Z", "url": "https://files.pythonhosted.org/packages/1a/a5/c7495b7ef68252f6ae63f21d49cbb11d36362212165832eda40021b0b241/python-fs-stack-0.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "6d365d50d88467114a66d63125357007", "sha256": "6c274bc1553447e6647c45dccbc76d2be4ca80d314c88844b33337b66f9772ad"}, "downloads": -1, "filename": "python-fs-stack-0.2.tar.gz", "has_sig": false, "md5_digest": "6d365d50d88467114a66d63125357007", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19946, "upload_time": "2011-06-08T22:21:08", "upload_time_iso_8601": "2011-06-08T22:21:08.502409Z", "url": "https://files.pythonhosted.org/packages/99/d4/823fca60e6da187b2bf89e945291af234399a3dd31a9d798adac3e69f980/python-fs-stack-0.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "b26cf09ff6d5a6d046ae8e6ec1620280", "sha256": "bc6ddaaf01ff8766ce4616518b90288e14f4c2b2f69710641bb49c22ecce9016"}, "downloads": -1, "filename": "python-fs-stack-0.2.zip", "has_sig": false, "md5_digest": "b26cf09ff6d5a6d046ae8e6ec1620280", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37655, "upload_time": "2011-06-08T22:17:14", "upload_time_iso_8601": "2011-06-08T22:17:14.450497Z", "url": "https://files.pythonhosted.org/packages/7a/f9/3a698753346576eb282cbdf31599870bbeb0689d1387890914c18ee5639c/python-fs-stack-0.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6d365d50d88467114a66d63125357007", "sha256": "6c274bc1553447e6647c45dccbc76d2be4ca80d314c88844b33337b66f9772ad"}, "downloads": -1, "filename": "python-fs-stack-0.2.tar.gz", "has_sig": false, "md5_digest": "6d365d50d88467114a66d63125357007", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19946, "upload_time": "2011-06-08T22:21:08", "upload_time_iso_8601": "2011-06-08T22:21:08.502409Z", "url": "https://files.pythonhosted.org/packages/99/d4/823fca60e6da187b2bf89e945291af234399a3dd31a9d798adac3e69f980/python-fs-stack-0.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "b26cf09ff6d5a6d046ae8e6ec1620280", "sha256": "bc6ddaaf01ff8766ce4616518b90288e14f4c2b2f69710641bb49c22ecce9016"}, "downloads": -1, "filename": "python-fs-stack-0.2.zip", "has_sig": false, "md5_digest": "b26cf09ff6d5a6d046ae8e6ec1620280", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37655, "upload_time": "2011-06-08T22:17:14", "upload_time_iso_8601": "2011-06-08T22:17:14.450497Z", "url": "https://files.pythonhosted.org/packages/7a/f9/3a698753346576eb282cbdf31599870bbeb0689d1387890914c18ee5639c/python-fs-stack-0.2.zip", "yanked": false}], "timestamp": "Fri May  8 03:17:34 2020"}