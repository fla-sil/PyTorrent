{"info": {"author": "Yuri Shikanov", "author_email": "dizballanze@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "breaking-point.py\n=================\n\nbreaking-point.py helps to find a size of input data where one function starts outperform\nanother function. It is a convenient way to compare different algorithms for a single\ntask.\n\nINSTALLATION\n------------\n\n::\n    \n    pip install breaking-point\n\nUSAGE\n-----\n\n.. code:: python\n\n    from breaking_point import find_breaking_point\n\n    find_breaking_point(f1, f2, input_generator, start=1, step=1, limit=1000000, trial_count=1000, repeat_count=3)\n\nthere \n\n-  ``f1``, ``f2`` - functions to compare.\n-  ``inpurt_generator`` - function that takes ``n`` argument (size of input on current iteration) and returns input data for ``f1`` and ``f2``. Return value should be a tuple with first element - list of non-keyworded arguments and second element - dict of keyword arguments.\n-  ``start`` - initial input data size.\n-  ``step`` - step of iteration.\n-  ``limit`` - maximum amount of input data. If breaking point was not found until limit was reached - iteration stops.\n-  ``trial_count`` - number of executions with each input data size.\n-  ``repeat_count`` - repeat trial several times and use average performance result.\n\nFunction returns ``n0`` - size of input data for which ``f2(n0)`` executed faster than  ``f1(n0)`` or ``None`` if reaches limit.\n\nEXAMPLE\n-------\n\nSee ``example.py``.\n\nLICENSE\n-------\n\nMIT", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dizballanze/breaking-point", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "breaking-point", "package_url": "https://pypi.org/project/breaking-point/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/breaking-point/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/dizballanze/breaking-point"}, "release_url": "https://pypi.org/project/breaking-point/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "breaking-point.py helps to find a size of input data where one function starts outperform another function. It is a convenient way to compare different algorithms for a single task.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>breaking-point.py helps to find a size of input data where one function starts outperform\nanother function. It is a convenient way to compare different algorithms for a single\ntask.</p>\n<div id=\"installation\">\n<h2>INSTALLATION</h2>\n<pre>pip install breaking-point\n</pre>\n</div>\n<div id=\"usage\">\n<h2>USAGE</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">breaking_point</span> <span class=\"kn\">import</span> <span class=\"n\">find_breaking_point</span>\n\n<span class=\"n\">find_breaking_point</span><span class=\"p\">(</span><span class=\"n\">f1</span><span class=\"p\">,</span> <span class=\"n\">f2</span><span class=\"p\">,</span> <span class=\"n\">input_generator</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">1000000</span><span class=\"p\">,</span> <span class=\"n\">trial_count</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">repeat_count</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p>there</p>\n<ul>\n<li><tt>f1</tt>, <tt>f2</tt> - functions to compare.</li>\n<li><tt>inpurt_generator</tt> - function that takes <tt>n</tt> argument (size of input on current iteration) and returns input data for <tt>f1</tt> and <tt>f2</tt>. Return value should be a tuple with first element - list of non-keyworded arguments and second element - dict of keyword arguments.</li>\n<li><tt>start</tt> - initial input data size.</li>\n<li><tt>step</tt> - step of iteration.</li>\n<li><tt>limit</tt> - maximum amount of input data. If breaking point was not found until limit was reached - iteration stops.</li>\n<li><tt>trial_count</tt> - number of executions with each input data size.</li>\n<li><tt>repeat_count</tt> - repeat trial several times and use average performance result.</li>\n</ul>\n<p>Function returns <tt>n0</tt> - size of input data for which <tt>f2(n0)</tt> executed faster than  <tt>f1(n0)</tt> or <tt>None</tt> if reaches limit.</p>\n</div>\n<div id=\"example\">\n<h2>EXAMPLE</h2>\n<p>See <tt>example.py</tt>.</p>\n</div>\n<div id=\"license\">\n<h2>LICENSE</h2>\n<p>MIT</p>\n</div>\n\n          </div>"}, "last_serial": 1906276, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "25bd6f6cb975844a9aa86d59819f6c31", "sha256": "ec1430a9ec037b1460d308e9a838d6355d0ca111040c77631f862f70342bc50b"}, "downloads": -1, "filename": "breaking_point-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "25bd6f6cb975844a9aa86d59819f6c31", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5906, "upload_time": "2016-01-15T15:42:38", "upload_time_iso_8601": "2016-01-15T15:42:38.437679Z", "url": "https://files.pythonhosted.org/packages/61/e1/d132773a82e98a9bd40a63091983f6cf4691e2ae27ecdce424a6268aa199/breaking_point-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee9c6d73c809322af58ade93f6f18a9c", "sha256": "5508d275dff47d116a1430262ccb520f125438f28eb325aaa94af75f08be0bc7"}, "downloads": -1, "filename": "breaking-point-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ee9c6d73c809322af58ade93f6f18a9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2968, "upload_time": "2016-01-15T15:42:43", "upload_time_iso_8601": "2016-01-15T15:42:43.255314Z", "url": "https://files.pythonhosted.org/packages/9c/99/639f3a21d40063111335202e81c1d50d33b5c1e0c87e148c5edc12a2ab3b/breaking-point-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "25bd6f6cb975844a9aa86d59819f6c31", "sha256": "ec1430a9ec037b1460d308e9a838d6355d0ca111040c77631f862f70342bc50b"}, "downloads": -1, "filename": "breaking_point-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "25bd6f6cb975844a9aa86d59819f6c31", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5906, "upload_time": "2016-01-15T15:42:38", "upload_time_iso_8601": "2016-01-15T15:42:38.437679Z", "url": "https://files.pythonhosted.org/packages/61/e1/d132773a82e98a9bd40a63091983f6cf4691e2ae27ecdce424a6268aa199/breaking_point-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee9c6d73c809322af58ade93f6f18a9c", "sha256": "5508d275dff47d116a1430262ccb520f125438f28eb325aaa94af75f08be0bc7"}, "downloads": -1, "filename": "breaking-point-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ee9c6d73c809322af58ade93f6f18a9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2968, "upload_time": "2016-01-15T15:42:43", "upload_time_iso_8601": "2016-01-15T15:42:43.255314Z", "url": "https://files.pythonhosted.org/packages/9c/99/639f3a21d40063111335202e81c1d50d33b5c1e0c87e148c5edc12a2ab3b/breaking-point-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:21 2020"}