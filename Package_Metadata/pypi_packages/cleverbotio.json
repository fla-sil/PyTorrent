{"info": {"author": "shadeyg56", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "cleverbotio.py\n============\n\nA python wrapper for the cleverbot.io API that has an async option\n============\nNote: This is WIP\n\n\nExample\n-------\n\n.. code:: py\n\n    import Cleverbotio\n\n\n    cb = Cleverbotio.Cleverbot('API_USER','YOUR_API_KEY', 'Bot Nickname')\n\n    cb.create_session()\n    resp = cb.say(\"Hello World\")\n    \n    print(resp)\n    # will print something like: {'status': 'success', 'response': \"I'm not the world.\"}\n\nInstalling\n----------\n\nInstall it normally from `PyPI <https://pypi.org/project/cleverbotio/>`_ with\npip:\n\n::\n\n    pip install cleverbotio\n\nOr install it with the asynchronous dependencies (Python 3.4.2+ only):\n\n::\n\n    pip install cleverbotio[async]\n\n**Requirements:**\n\n- Python 3.2+ or 2.7\n- `A Cleverbot API Key <https://cleverbot.io/login>`_\n\n**Dependencies:**\n\n- requests 1.0.0+\n\n+ **Asynchronous:**\n\n  - aiohttp 1.0.0+\n\nUsage\n-----\n\nFirst import the package:\n\n.. code:: py\n\n    import Cleverbotio\n\nIf you have the asynchronous dependencies and want to use Cleverbot\nasynchronously import it as below instead:\n\n.. code:: py\n\n    from Cleverbot import async as cleverbot\n\nThen initialize Cleverbot with your API key and optionally a cleverbot state,\ntimeout and or tweak if you want to adjust Cleverbot's mood:\n\n.. code:: py\n\n    cb = Cleverbot.Cleverbot('API_USER, 'YOUR_API_KEY', 'Bot Nickname')\n\nNow you create a cleverbot instance\n\n.. code:: py\n     \n    cb.create_session\n\nNow you can use the say function which returns a JSON dict from the API of the status and cleverbot response\n\n.. code:: py\n\n    resp = cb.say('Hello World')\n    print(resp)\n    #should print a dict like: {'status': 'success', 'response': \"I'm not the world.\"}", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shadeyg56/cleverbotio.py", "keywords": "cleverbot,async,api-wrapper", "license": "GNU", "maintainer": "", "maintainer_email": "", "name": "cleverbotio", "package_url": "https://pypi.org/project/cleverbotio/", "platform": "", "project_url": "https://pypi.org/project/cleverbotio/", "project_urls": {"Homepage": "https://github.com/shadeyg56/cleverbotio.py"}, "release_url": "https://pypi.org/project/cleverbotio/1.1/", "requires_dist": null, "requires_python": "", "summary": "A Python wrapper for the Cleverbot.io API that has an async option", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            cleverbotio.py<br>============<br><br>A python wrapper for the cleverbot.io API that has an async option<br>============<br>Note: This is WIP<br><br><br>Example<br>-------<br><br>.. code:: py<br><br>    import Cleverbotio<br><br><br>    cb = Cleverbotio.Cleverbot('API_USER','YOUR_API_KEY', 'Bot Nickname')<br><br>    cb.create_session()<br>    resp = cb.say(\"Hello World\")<br>    <br>    print(resp)<br>    # will print something like: {'status': 'success', 'response': \"I'm not the world.\"}<br><br>Installing<br>----------<br><br>Install it normally from `PyPI &lt;https://pypi.org/project/cleverbotio/&gt;`_ with<br>pip:<br><br>::<br><br>    pip install cleverbotio<br><br>Or install it with the asynchronous dependencies (Python 3.4.2+ only):<br><br>::<br><br>    pip install cleverbotio[async]<br><br>**Requirements:**<br><br>- Python 3.2+ or 2.7<br>- `A Cleverbot API Key &lt;https://cleverbot.io/login&gt;`_<br><br>**Dependencies:**<br><br>- requests 1.0.0+<br><br>+ **Asynchronous:**<br><br>  - aiohttp 1.0.0+<br><br>Usage<br>-----<br><br>First import the package:<br><br>.. code:: py<br><br>    import Cleverbotio<br><br>If you have the asynchronous dependencies and want to use Cleverbot<br>asynchronously import it as below instead:<br><br>.. code:: py<br><br>    from Cleverbot import async as cleverbot<br><br>Then initialize Cleverbot with your API key and optionally a cleverbot state,<br>timeout and or tweak if you want to adjust Cleverbot's mood:<br><br>.. code:: py<br><br>    cb = Cleverbot.Cleverbot('API_USER, 'YOUR_API_KEY', 'Bot Nickname')<br><br>Now you create a cleverbot instance<br><br>.. code:: py<br>     <br>    cb.create_session<br><br>Now you can use the say function which returns a JSON dict from the API of the status and cleverbot response<br><br>.. code:: py<br><br>    resp = cb.say('Hello World')<br>    print(resp)<br>    #should print a dict like: {'status': 'success', 'response': \"I'm not the world.\"}\n          </div>"}, "last_serial": 3924231, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "d11a0e268d74a318b8c082f97f9bbc6a", "sha256": "a333171ed688fec0078361725190fa594ff0aaaab2ab381b6a60e73b6910347b"}, "downloads": -1, "filename": "cleverbotio-0.3.tar.gz", "has_sig": false, "md5_digest": "d11a0e268d74a318b8c082f97f9bbc6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1639, "upload_time": "2018-06-01T21:01:56", "upload_time_iso_8601": "2018-06-01T21:01:56.585319Z", "url": "https://files.pythonhosted.org/packages/af/8a/72a0973b5924b065da3a0fd114186127c4b25866357588c374465bde55fe/cleverbotio-0.3.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "8b9e3af506574ae06570370ded70adda", "sha256": "727450b1add4a762051e53dcfde4cb15f83ed66a2e16c93ea6e0c626f05dba2c"}, "downloads": -1, "filename": "cleverbotio-1.0.tar.gz", "has_sig": false, "md5_digest": "8b9e3af506574ae06570370ded70adda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2574, "upload_time": "2018-06-01T21:24:33", "upload_time_iso_8601": "2018-06-01T21:24:33.725002Z", "url": "https://files.pythonhosted.org/packages/72/d7/7b0e0388127e48b8a6d9e0696a40b34912b4c26ceaf9c473e7e4379f177a/cleverbotio-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "f1bd6407586201a4fb5556a1ff4d1d77", "sha256": "5cbc1ca9f5042abc431e6360b8fd1091695da9abeaf82cf9b5990c1b11bdc853"}, "downloads": -1, "filename": "cleverbotio-1.1.tar.gz", "has_sig": false, "md5_digest": "f1bd6407586201a4fb5556a1ff4d1d77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2611, "upload_time": "2018-06-02T20:44:53", "upload_time_iso_8601": "2018-06-02T20:44:53.794569Z", "url": "https://files.pythonhosted.org/packages/36/86/b3137f48626327c8cb519ba55b93338f319e3c3ec1f265e0fd4d969ea9f3/cleverbotio-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f1bd6407586201a4fb5556a1ff4d1d77", "sha256": "5cbc1ca9f5042abc431e6360b8fd1091695da9abeaf82cf9b5990c1b11bdc853"}, "downloads": -1, "filename": "cleverbotio-1.1.tar.gz", "has_sig": false, "md5_digest": "f1bd6407586201a4fb5556a1ff4d1d77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2611, "upload_time": "2018-06-02T20:44:53", "upload_time_iso_8601": "2018-06-02T20:44:53.794569Z", "url": "https://files.pythonhosted.org/packages/36/86/b3137f48626327c8cb519ba55b93338f319e3c3ec1f265e0fd4d969ea9f3/cleverbotio-1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:04 2020"}