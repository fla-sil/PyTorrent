{"info": {"author": "Nico Hoffmann", "author_email": "info@maxdoom.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: POSIX", "Topic :: Software Development :: Code Generators", "Topic :: Utilities"], "description": "Templetize is a script to convert a file or a directory (recursively)\r\nto a template for codegen and writes it to stdout.\r\n\r\nCodegen uses a single jinja2 template from a given file or string and\r\nthe data you provide to the code generator to recreate the previously\r\ntempletized file structure (maybe renaming parts of it).\r\n\r\nSee the jinja2 documentation for the template syntax.\r\n\r\n---\r\n\r\nCode generator reads and evaluates templates generated with templetize\r\nand creates the directories and files according to the templates\r\ninstructions.\r\n\r\nBevore operating the template will be parsed thru jinja2.\r\n\r\nSee the jinja2 documentation for the template syntax.\r\n\r\nCode generator special directives start with \"@@@\" and extend to the\r\nend of the line. There are 3 different commands. An example:\r\n\r\n@@@ dir dir/to/be/generated/\r\n\r\n@@@ file dir/to/be/generated/with-a-file-{{inside}}.txt\r\n\r\nThis is the content {{inside}} of the file. The word inside will be\r\nreplaced by jinja2. So if you set 'inside': 'to-generate', you will get\r\na file called `dir/to/be/generated/with-a-file-to-generate.txt` with\r\nthe content `This is the content to-generate of the file. [...]`\r\n\r\n@@@ binary another/dir/image.png\r\n\r\nIyEvdXNyL2Jpbi9lbnYgcHl0aG9uCiMgLSotIGNvZGluZzogdXRmLTggLSotCgppbXB==\r\n\r\nCode generator will not throw exceptions but just ignore already\r\nexisting files. They won't be overwritten. A message is printed to\r\nstderr.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.maxdoom.com/2014/09/21/templetize-code-generator/", "keywords": "templating code generator", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "templetize", "package_url": "https://pypi.org/project/templetize/", "platform": "Posix", "project_url": "https://pypi.org/project/templetize/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.maxdoom.com/2014/09/21/templetize-code-generator/"}, "release_url": "https://pypi.org/project/templetize/2014.09.21/", "requires_dist": null, "requires_python": null, "summary": "Templetize is a script to convert a file or a directory (recursively) to a template for codegen. It is bundled with a simple code generator module to expand these templates.", "version": "2014.09.21", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Templetize is a script to convert a file or a directory (recursively)\nto a template for codegen and writes it to stdout.</p>\n<p>Codegen uses a single jinja2 template from a given file or string and\nthe data you provide to the code generator to recreate the previously\ntempletized file structure (maybe renaming parts of it).</p>\n<p>See the jinja2 documentation for the template syntax.</p>\n<p>\u2014</p>\n<p>Code generator reads and evaluates templates generated with templetize\nand creates the directories and files according to the templates\ninstructions.</p>\n<p>Bevore operating the template will be parsed thru jinja2.</p>\n<p>See the jinja2 documentation for the template syntax.</p>\n<p>Code generator special directives start with \u201c@@@\u201d and extend to the\nend of the line. There are 3 different commands. An example:</p>\n<p>@@@ dir dir/to/be/generated/</p>\n<p>@@@ file dir/to/be/generated/with-a-file-{{inside}}.txt</p>\n<p>This is the content {{inside}} of the file. The word inside will be\nreplaced by jinja2. So if you set \u2018inside\u2019: \u2018to-generate\u2019, you will get\na file called <cite>dir/to/be/generated/with-a-file-to-generate.txt</cite> with\nthe content <cite>This is the content to-generate of the file. [\u2026]</cite></p>\n<p>@@@ binary another/dir/image.png</p>\n<p>IyEvdXNyL2Jpbi9lbnYgcHl0aG9uCiMgLSotIGNvZGluZzogdXRmLTggLSotCgppbXB==</p>\n<p>Code generator will not throw exceptions but just ignore already\nexisting files. They won\u2019t be overwritten. A message is printed to\nstderr.</p>\n\n          </div>"}, "last_serial": 1232085, "releases": {"2014.09.21": [{"comment_text": "", "digests": {"md5": "2ae5b78a166b0efc2f1e3dd98af1f35b", "sha256": "876fa728e3c0b300e871a56f0b26bf36c1289df3c53bcbb59b6f38f3fc3dc631"}, "downloads": -1, "filename": "templetize-2014.09.21.tar.gz", "has_sig": false, "md5_digest": "2ae5b78a166b0efc2f1e3dd98af1f35b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2177, "upload_time": "2014-09-21T00:45:37", "upload_time_iso_8601": "2014-09-21T00:45:37.939972Z", "url": "https://files.pythonhosted.org/packages/20/6c/07d6a87b89c0df55346948d502e0cf3887707814f6b2bc759e9e3a9ffde5/templetize-2014.09.21.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2ae5b78a166b0efc2f1e3dd98af1f35b", "sha256": "876fa728e3c0b300e871a56f0b26bf36c1289df3c53bcbb59b6f38f3fc3dc631"}, "downloads": -1, "filename": "templetize-2014.09.21.tar.gz", "has_sig": false, "md5_digest": "2ae5b78a166b0efc2f1e3dd98af1f35b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2177, "upload_time": "2014-09-21T00:45:37", "upload_time_iso_8601": "2014-09-21T00:45:37.939972Z", "url": "https://files.pythonhosted.org/packages/20/6c/07d6a87b89c0df55346948d502e0cf3887707814f6b2bc759e9e3a9ffde5/templetize-2014.09.21.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:41 2020"}