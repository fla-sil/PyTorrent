{"info": {"author": "Sebastien Bigaret", "author_email": "sbigaret@users.sourceforge.net", "bugtrack_url": null, "classifiers": ["Development Status :: 7 - Inactive"], "description": "The Modeling Framework fills the gap between the Python object world and\r\nrelational databases in that it allows users to transparently create,\r\nretrieve, update, or delete Python objects from a database without having to\r\nwrite a single line of SQL. Its main features include generation of database\r\nschema, generation of Python code templates ready to be used, support for\r\ntransparent mapping of (class) inheritance in relational databases,\r\nobject-oriented query language, use of standard Python getters to traverse\r\nrelationships (the related objects are automatically fetched when needed and\r\nwhen appropriate), and automatic checking for referential-integrity\r\nconstraints, etc. Supported databases are MySQL, Oracle, PostgreSQL, and\r\nSQLite.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://modeling.sourceforge.net/", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "ModelingCore", "package_url": "https://pypi.org/project/ModelingCore/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ModelingCore/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://modeling.sourceforge.net/"}, "release_url": "https://pypi.org/project/ModelingCore/0.9/", "requires_dist": null, "requires_python": null, "summary": "The Modeling Framework is an Object-Relational Bridge for python", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The Modeling Framework fills the gap between the Python object world and\nrelational databases in that it allows users to transparently create,\nretrieve, update, or delete Python objects from a database without having to\nwrite a single line of SQL. Its main features include generation of database\nschema, generation of Python code templates ready to be used, support for\ntransparent mapping of (class) inheritance in relational databases,\nobject-oriented query language, use of standard Python getters to traverse\nrelationships (the related objects are automatically fetched when needed and\nwhen appropriate), and automatic checking for referential-integrity\nconstraints, etc. Supported databases are MySQL, Oracle, PostgreSQL, and\nSQLite.</p>\n\n          </div>"}, "last_serial": 767764, "releases": {"0.9": [], "0.9-pre-15": [], "0.9-pre-16": [], "0.9-pre-17": [], "0.9-pre-17.1": []}, "urls": [], "timestamp": "Fri May  8 00:52:54 2020"}