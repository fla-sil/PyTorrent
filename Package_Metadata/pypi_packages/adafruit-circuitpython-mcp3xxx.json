{"info": {"author": "Adafruit Industries", "author_email": "circuitpython@adafruit.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: System :: Hardware"], "description": "Introduction\n============\n\n.. image:: https://readthedocs.org/projects/adafruit-circuitpython-mcp3xxx/badge/?version=latest\n    :target: https://circuitpython.readthedocs.io/projects/mcp3xxx/en/latest/\n    :alt: Documentation Status\n\n.. image:: https://img.shields.io/discord/327254708534116352.svg\n    :target: https://discord.gg/nBQh6qu\n    :alt: Discord\n\n.. image:: https://github.com/adafruit/Adafruit_CircuitPython_MCP3xxx/workflows/Build%20CI/badge.svg\n    :target: https://github.com/adafruit/Adafruit_CircuitPython_MCP3xxx/actions/\n    :alt: Build Status\n\nCircuitPython library for the MCP3xxx series of analog-to-digital converters.\n\nCurrently supports:\n\n*  `MCP3008: 8-Channel 10-Bit ADC With SPI Interface <https://www.adafruit.com/product/856>`_\n\n\nDependencies\n=============\nThis driver depends on:\n\n* `Adafruit CircuitPython <https://github.com/adafruit/circuitpython>`_\n* `Bus Device <https://github.com/adafruit/Adafruit_CircuitPython_BusDevice>`_\n\nPlease ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n`the Adafruit library and driver bundle <https://github.com/adafruit/Adafruit_CircuitPython_Bundle>`_.\n\nInstalling from PyPI\n====================\n\nOn supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `from\nPyPI <https://pypi.org/project/adafruit-circuitpython-mcp3xxx/>`_. To install for current user:\n\n.. code-block:: shell\n\n    pip3 install adafruit-circuitpython-mcp3xxx\n\nTo install system-wide (this may be required in some cases):\n\n.. code-block:: shell\n\n    sudo pip3 install adafruit-circuitpython-mcp3xxx\n\nTo install in a virtual environment in your current project:\n\n.. code-block:: shell\n\n    mkdir project-name && cd project-name\n    python3 -m venv .env\n    source .env/bin/activate\n    pip3 install adafruit-circuitpython-mcp3xxx\n\nUsage Example\n=============\n\n\nMCP3008 Single Ended\n---------------------\n\n.. code-block:: python\n\n    import busio\n    import digitalio\n    import board\n    import adafruit_mcp3xxx.mcp3008 as MCP\n    from adafruit_mcp3xxx.analog_in import AnalogIn\n\n    # create the spi bus\n    spi = busio.SPI(clock=board.SCK, MISO=board.MISO, MOSI=board.MOSI)\n\n    # create the cs (chip select)\n    cs = digitalio.DigitalInOut(board.D5)\n\n    # create the mcp object\n    mcp = MCP.MCP3008(spi, cs)\n\n    # create an analog input channel on pin 0\n    chan = AnalogIn(mcp, MCP.P0)\n\n    print('Raw ADC Value: ', chan.value)\n    print('ADC Voltage: ' + str(chan.voltage) + 'V')\n\n\nMCP3008 Differential\n--------------------\n\n.. code-block:: python\n\n    import busio\n    import digitalio\n    import board\n    import adafruit_mcp3xxx.mcp3008 as MCP\n    from adafruit_mcp3xxx.analog_in import AnalogIn\n\n    # create the spi bus\n    spi = busio.SPI(clock=board.SCK, MISO=board.MISO, MOSI=board.MOSI)\n\n    # create the cs (chip select)\n    cs = digitalio.DigitalInOut(board.D5)\n\n    # create the mcp object\n    mcp = MCP.MCP3008(spi, cs)\n\n    # create a differential ADC channel between Pin 0 and Pin 1\n    chan = AnalogIn(mcp, MCP.P0, MCP.P1)\n\n    print('Differential ADC Value: ', chan.value)\n    print('Differential ADC Voltage: ' + str(chan.voltage) + 'V')\n\nMCP3004 Single-Ended\n---------------------\n\n.. code-block:: python\n\n    import busio\n    import digitalio\n    import board\n    import adafruit_mcp3xxx.mcp3004 as MCP\n    from adafruit_mcp3xxx.analog_in import AnalogIn\n\n    # create the spi bus\n    spi = busio.SPI(clock=board.SCK, MISO=board.MISO, MOSI=board.MOSI)\n\n    # create the cs (chip select)\n    cs = digitalio.DigitalInOut(board.D5)\n\n    # create the mcp object\n    mcp = MCP.MCP3004(spi, cs)\n\n    # create an analog input channel on pin 0\n    chan = AnalogIn(mcp, MCP.P0)\n\n    print('Raw ADC Value: ', chan.value)\n    print('ADC Voltage: ' + str(chan.voltage) + 'V')\n\nMCP3004 Differential\n--------------------\n\n.. code-block:: python\n\n    import busio\n    import digitalio\n    import board\n    import adafruit_mcp3xxx.mcp3004 as MCP\n    from adafruit_mcp3xxx.analog_in import AnalogIn\n\n    # create the spi bus\n    spi = busio.SPI(clock=board.SCK, MISO=board.MISO, MOSI=board.MOSI)\n\n    # create the cs (chip select)\n    cs = digitalio.DigitalInOut(board.D5)\n\n    # create the mcp object\n    mcp = MCP.MCP3004(spi, cs)\n\n    # create a differential ADC channel between Pin 0 and Pin 1\n    chan = AnalogIn(mcp, MCP.P0, MCP.P1)\n\n    print('Differential ADC Value: ', chan.value)\n    print('Differential ADC Voltage: ' + str(chan.voltage) + 'V')\n\n\n\nContributing\n============\n\nContributions are welcome! Please read our `Code of Conduct\n<https://github.com/adafruit/adafruit_CircuitPython_MCP3xxx/blob/master/CODE_OF_CONDUCT.md>`_\nbefore contributing to help this project stay welcoming.\n\nDocumentation\n=============\n\nFor information on building library documentation, please check out `this guide <https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1>`_.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adafruit/Adafruit_CircuitPython_MCP3xxx", "keywords": "adafruit mcp3xxx hardware micropython circuitpython", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "adafruit-circuitpython-mcp3xxx", "package_url": "https://pypi.org/project/adafruit-circuitpython-mcp3xxx/", "platform": "", "project_url": "https://pypi.org/project/adafruit-circuitpython-mcp3xxx/", "project_urls": {"Homepage": "https://github.com/adafruit/Adafruit_CircuitPython_MCP3xxx"}, "release_url": "https://pypi.org/project/adafruit-circuitpython-mcp3xxx/1.4.1/", "requires_dist": null, "requires_python": "", "summary": "CircuitPython library for the MCP3xxx Analog-to-Digital converters.", "version": "1.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<a href=\"https://circuitpython.readthedocs.io/projects/mcp3xxx/en/latest/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9309b32134498a839bef4d6d7778c873afbf55c7/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61646166727569742d63697263756974707974686f6e2d6d6370337878782f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://discord.gg/nBQh6qu\" rel=\"nofollow\"><img alt=\"Discord\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2973e7de9caf359680953316fa3b541f702086c/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3332373235343730383533343131363335322e737667\"></a>\n<a href=\"https://github.com/adafruit/Adafruit_CircuitPython_MCP3xxx/actions/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dafd6a82bb234f237949d6ed8ed98894563a5d42/68747470733a2f2f6769746875622e636f6d2f61646166727569742f41646166727569745f43697263756974507974686f6e5f4d4350337878782f776f726b666c6f77732f4275696c6425323043492f62616467652e737667\"></a>\n<p>CircuitPython library for the MCP3xxx series of analog-to-digital converters.</p>\n<p>Currently supports:</p>\n<ul>\n<li><a href=\"https://www.adafruit.com/product/856\" rel=\"nofollow\">MCP3008: 8-Channel 10-Bit ADC With SPI Interface</a></li>\n</ul>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>This driver depends on:</p>\n<ul>\n<li><a href=\"https://github.com/adafruit/circuitpython\" rel=\"nofollow\">Adafruit CircuitPython</a></li>\n<li><a href=\"https://github.com/adafruit/Adafruit_CircuitPython_BusDevice\" rel=\"nofollow\">Bus Device</a></li>\n</ul>\n<p>Please ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n<a href=\"https://github.com/adafruit/Adafruit_CircuitPython_Bundle\" rel=\"nofollow\">the Adafruit library and driver bundle</a>.</p>\n</div>\n<div id=\"installing-from-pypi\">\n<h2>Installing from PyPI</h2>\n<p>On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally <a href=\"https://pypi.org/project/adafruit-circuitpython-mcp3xxx/\" rel=\"nofollow\">from\nPyPI</a>. To install for current user:</p>\n<pre>pip3 install adafruit-circuitpython-mcp3xxx\n</pre>\n<p>To install system-wide (this may be required in some cases):</p>\n<pre>sudo pip3 install adafruit-circuitpython-mcp3xxx\n</pre>\n<p>To install in a virtual environment in your current project:</p>\n<pre>mkdir project-name <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> project-name\npython3 -m venv .env\n<span class=\"nb\">source</span> .env/bin/activate\npip3 install adafruit-circuitpython-mcp3xxx\n</pre>\n</div>\n<div id=\"usage-example\">\n<h2>Usage Example</h2>\n<div id=\"mcp3008-single-ended\">\n<h3>MCP3008 Single Ended</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">busio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">digitalio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">board</span>\n<span class=\"kn\">import</span> <span class=\"nn\">adafruit_mcp3xxx.mcp3008</span> <span class=\"k\">as</span> <span class=\"nn\">MCP</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_mcp3xxx.analog_in</span> <span class=\"kn\">import</span> <span class=\"n\">AnalogIn</span>\n\n<span class=\"c1\"># create the spi bus</span>\n<span class=\"n\">spi</span> <span class=\"o\">=</span> <span class=\"n\">busio</span><span class=\"o\">.</span><span class=\"n\">SPI</span><span class=\"p\">(</span><span class=\"n\">clock</span><span class=\"o\">=</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">SCK</span><span class=\"p\">,</span> <span class=\"n\">MISO</span><span class=\"o\">=</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">MISO</span><span class=\"p\">,</span> <span class=\"n\">MOSI</span><span class=\"o\">=</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">MOSI</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create the cs (chip select)</span>\n<span class=\"n\">cs</span> <span class=\"o\">=</span> <span class=\"n\">digitalio</span><span class=\"o\">.</span><span class=\"n\">DigitalInOut</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">D5</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create the mcp object</span>\n<span class=\"n\">mcp</span> <span class=\"o\">=</span> <span class=\"n\">MCP</span><span class=\"o\">.</span><span class=\"n\">MCP3008</span><span class=\"p\">(</span><span class=\"n\">spi</span><span class=\"p\">,</span> <span class=\"n\">cs</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create an analog input channel on pin 0</span>\n<span class=\"n\">chan</span> <span class=\"o\">=</span> <span class=\"n\">AnalogIn</span><span class=\"p\">(</span><span class=\"n\">mcp</span><span class=\"p\">,</span> <span class=\"n\">MCP</span><span class=\"o\">.</span><span class=\"n\">P0</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Raw ADC Value: '</span><span class=\"p\">,</span> <span class=\"n\">chan</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'ADC Voltage: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">chan</span><span class=\"o\">.</span><span class=\"n\">voltage</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">'V'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"mcp3008-differential\">\n<h3>MCP3008 Differential</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">busio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">digitalio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">board</span>\n<span class=\"kn\">import</span> <span class=\"nn\">adafruit_mcp3xxx.mcp3008</span> <span class=\"k\">as</span> <span class=\"nn\">MCP</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_mcp3xxx.analog_in</span> <span class=\"kn\">import</span> <span class=\"n\">AnalogIn</span>\n\n<span class=\"c1\"># create the spi bus</span>\n<span class=\"n\">spi</span> <span class=\"o\">=</span> <span class=\"n\">busio</span><span class=\"o\">.</span><span class=\"n\">SPI</span><span class=\"p\">(</span><span class=\"n\">clock</span><span class=\"o\">=</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">SCK</span><span class=\"p\">,</span> <span class=\"n\">MISO</span><span class=\"o\">=</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">MISO</span><span class=\"p\">,</span> <span class=\"n\">MOSI</span><span class=\"o\">=</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">MOSI</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create the cs (chip select)</span>\n<span class=\"n\">cs</span> <span class=\"o\">=</span> <span class=\"n\">digitalio</span><span class=\"o\">.</span><span class=\"n\">DigitalInOut</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">D5</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create the mcp object</span>\n<span class=\"n\">mcp</span> <span class=\"o\">=</span> <span class=\"n\">MCP</span><span class=\"o\">.</span><span class=\"n\">MCP3008</span><span class=\"p\">(</span><span class=\"n\">spi</span><span class=\"p\">,</span> <span class=\"n\">cs</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create a differential ADC channel between Pin 0 and Pin 1</span>\n<span class=\"n\">chan</span> <span class=\"o\">=</span> <span class=\"n\">AnalogIn</span><span class=\"p\">(</span><span class=\"n\">mcp</span><span class=\"p\">,</span> <span class=\"n\">MCP</span><span class=\"o\">.</span><span class=\"n\">P0</span><span class=\"p\">,</span> <span class=\"n\">MCP</span><span class=\"o\">.</span><span class=\"n\">P1</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Differential ADC Value: '</span><span class=\"p\">,</span> <span class=\"n\">chan</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Differential ADC Voltage: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">chan</span><span class=\"o\">.</span><span class=\"n\">voltage</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">'V'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"mcp3004-single-ended\">\n<h3>MCP3004 Single-Ended</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">busio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">digitalio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">board</span>\n<span class=\"kn\">import</span> <span class=\"nn\">adafruit_mcp3xxx.mcp3004</span> <span class=\"k\">as</span> <span class=\"nn\">MCP</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_mcp3xxx.analog_in</span> <span class=\"kn\">import</span> <span class=\"n\">AnalogIn</span>\n\n<span class=\"c1\"># create the spi bus</span>\n<span class=\"n\">spi</span> <span class=\"o\">=</span> <span class=\"n\">busio</span><span class=\"o\">.</span><span class=\"n\">SPI</span><span class=\"p\">(</span><span class=\"n\">clock</span><span class=\"o\">=</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">SCK</span><span class=\"p\">,</span> <span class=\"n\">MISO</span><span class=\"o\">=</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">MISO</span><span class=\"p\">,</span> <span class=\"n\">MOSI</span><span class=\"o\">=</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">MOSI</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create the cs (chip select)</span>\n<span class=\"n\">cs</span> <span class=\"o\">=</span> <span class=\"n\">digitalio</span><span class=\"o\">.</span><span class=\"n\">DigitalInOut</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">D5</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create the mcp object</span>\n<span class=\"n\">mcp</span> <span class=\"o\">=</span> <span class=\"n\">MCP</span><span class=\"o\">.</span><span class=\"n\">MCP3004</span><span class=\"p\">(</span><span class=\"n\">spi</span><span class=\"p\">,</span> <span class=\"n\">cs</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create an analog input channel on pin 0</span>\n<span class=\"n\">chan</span> <span class=\"o\">=</span> <span class=\"n\">AnalogIn</span><span class=\"p\">(</span><span class=\"n\">mcp</span><span class=\"p\">,</span> <span class=\"n\">MCP</span><span class=\"o\">.</span><span class=\"n\">P0</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Raw ADC Value: '</span><span class=\"p\">,</span> <span class=\"n\">chan</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'ADC Voltage: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">chan</span><span class=\"o\">.</span><span class=\"n\">voltage</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">'V'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"mcp3004-differential\">\n<h3>MCP3004 Differential</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">busio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">digitalio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">board</span>\n<span class=\"kn\">import</span> <span class=\"nn\">adafruit_mcp3xxx.mcp3004</span> <span class=\"k\">as</span> <span class=\"nn\">MCP</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_mcp3xxx.analog_in</span> <span class=\"kn\">import</span> <span class=\"n\">AnalogIn</span>\n\n<span class=\"c1\"># create the spi bus</span>\n<span class=\"n\">spi</span> <span class=\"o\">=</span> <span class=\"n\">busio</span><span class=\"o\">.</span><span class=\"n\">SPI</span><span class=\"p\">(</span><span class=\"n\">clock</span><span class=\"o\">=</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">SCK</span><span class=\"p\">,</span> <span class=\"n\">MISO</span><span class=\"o\">=</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">MISO</span><span class=\"p\">,</span> <span class=\"n\">MOSI</span><span class=\"o\">=</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">MOSI</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create the cs (chip select)</span>\n<span class=\"n\">cs</span> <span class=\"o\">=</span> <span class=\"n\">digitalio</span><span class=\"o\">.</span><span class=\"n\">DigitalInOut</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">D5</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create the mcp object</span>\n<span class=\"n\">mcp</span> <span class=\"o\">=</span> <span class=\"n\">MCP</span><span class=\"o\">.</span><span class=\"n\">MCP3004</span><span class=\"p\">(</span><span class=\"n\">spi</span><span class=\"p\">,</span> <span class=\"n\">cs</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create a differential ADC channel between Pin 0 and Pin 1</span>\n<span class=\"n\">chan</span> <span class=\"o\">=</span> <span class=\"n\">AnalogIn</span><span class=\"p\">(</span><span class=\"n\">mcp</span><span class=\"p\">,</span> <span class=\"n\">MCP</span><span class=\"o\">.</span><span class=\"n\">P0</span><span class=\"p\">,</span> <span class=\"n\">MCP</span><span class=\"o\">.</span><span class=\"n\">P1</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Differential ADC Value: '</span><span class=\"p\">,</span> <span class=\"n\">chan</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Differential ADC Voltage: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">chan</span><span class=\"o\">.</span><span class=\"n\">voltage</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">'V'</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions are welcome! Please read our <a href=\"https://github.com/adafruit/adafruit_CircuitPython_MCP3xxx/blob/master/CODE_OF_CONDUCT.md\" rel=\"nofollow\">Code of Conduct</a>\nbefore contributing to help this project stay welcoming.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>For information on building library documentation, please check out <a href=\"https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1\" rel=\"nofollow\">this guide</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6995345, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "b32210b431074c2e52e2ef77996a5827", "sha256": "3528b0f11fb9d0dbf7834fda084be64adc4dec103526438caea6dc12b2ca07b7"}, "downloads": -1, "filename": "adafruit-circuitpython-mcp3xxx-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b32210b431074c2e52e2ef77996a5827", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21685, "upload_time": "2018-10-16T18:10:28", "upload_time_iso_8601": "2018-10-16T18:10:28.027498Z", "url": "https://files.pythonhosted.org/packages/e6/dc/1827497549776da9c8bd8116976af4d582fb8683146fa17a34080ab0ef9e/adafruit-circuitpython-mcp3xxx-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "360a62ca9ee3b6082941c09570a1ab69", "sha256": "57caf6fc3ac78fdb4400430143f2cd1ec372359188ff5fa2e8890da08cf70ab7"}, "downloads": -1, "filename": "adafruit-circuitpython-mcp3xxx-1.0.2.tar.gz", "has_sig": false, "md5_digest": "360a62ca9ee3b6082941c09570a1ab69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21651, "upload_time": "2019-01-15T23:56:14", "upload_time_iso_8601": "2019-01-15T23:56:14.855126Z", "url": "https://files.pythonhosted.org/packages/ea/d2/5f565ca0a9bad376935659da7fd526809d86a80048d243c8d29a5ca99c65/adafruit-circuitpython-mcp3xxx-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "0613b1c7c903c9ba72303d4fed8d95c9", "sha256": "ad29c9134f97a1c71ff2b26954281fe3204e6c7898c6385d24843a7861a98acb"}, "downloads": -1, "filename": "adafruit-circuitpython-mcp3xxx-1.0.3.tar.gz", "has_sig": false, "md5_digest": "0613b1c7c903c9ba72303d4fed8d95c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21730, "upload_time": "2019-03-15T20:45:46", "upload_time_iso_8601": "2019-03-15T20:45:46.722239Z", "url": "https://files.pythonhosted.org/packages/7f/72/ebdaf1c2531a41710c3a2d608d2ee4615bd8b0ed21043090c98862f7e244/adafruit-circuitpython-mcp3xxx-1.0.3.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "9900a19f6ac34161dc1a607d35defd47", "sha256": "bcb8f2048138fb86f5a2b87ebdc6d6eb4cc830a33b3f9d23e1d3e4eb14822bf2"}, "downloads": -1, "filename": "adafruit-circuitpython-mcp3xxx-1.1.0.tar.gz", "has_sig": false, "md5_digest": "9900a19f6ac34161dc1a607d35defd47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21813, "upload_time": "2019-09-16T21:15:42", "upload_time_iso_8601": "2019-09-16T21:15:42.829140Z", "url": "https://files.pythonhosted.org/packages/a9/f9/8163f7afc27a7cc353af2f060f8f8bda4c3f650b78c78313b879a82acb12/adafruit-circuitpython-mcp3xxx-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "e54894ca74a5c69c318fcc2dc94f1931", "sha256": "a008694ca93c6b0007b45f6302003ad6718a77782f0be5b3c21203c4ba835dde"}, "downloads": -1, "filename": "adafruit-circuitpython-mcp3xxx-1.1.1.tar.gz", "has_sig": false, "md5_digest": "e54894ca74a5c69c318fcc2dc94f1931", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21812, "upload_time": "2019-10-09T16:08:02", "upload_time_iso_8601": "2019-10-09T16:08:02.698380Z", "url": "https://files.pythonhosted.org/packages/a1/f6/058857d7ff727571387b6aa1e13bbbee50ef50fb1c1c25d5504bc3b96cea/adafruit-circuitpython-mcp3xxx-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "ce68d607ed0dcb75eb9a8571d529bd00", "sha256": "80e8ddcd95ad7d709323ef36e67b377860560d7dc04f8eb5df6b682bb3f53f05"}, "downloads": -1, "filename": "adafruit-circuitpython-mcp3xxx-1.1.2.tar.gz", "has_sig": false, "md5_digest": "ce68d607ed0dcb75eb9a8571d529bd00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21819, "upload_time": "2019-10-14T13:15:57", "upload_time_iso_8601": "2019-10-14T13:15:57.234762Z", "url": "https://files.pythonhosted.org/packages/bb/46/63260692402660b7cb1ae77082f13bb4146428126398c837df1b54ae26be/adafruit-circuitpython-mcp3xxx-1.1.2.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "10e2a79c25b2e049156be2a23a9a569c", "sha256": "9bec60760fbb5cb1e6e6ac83bb77c911c0f6c7bfcbe40e2577d91296e099105e"}, "downloads": -1, "filename": "adafruit-circuitpython-mcp3xxx-1.3.0.tar.gz", "has_sig": false, "md5_digest": "10e2a79c25b2e049156be2a23a9a569c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22555, "upload_time": "2020-01-22T01:42:25", "upload_time_iso_8601": "2020-01-22T01:42:25.753749Z", "url": "https://files.pythonhosted.org/packages/84/03/bd1255909a5538b3362e2e19d52c70bdd84bdcb2d8dfe93745fb78bcec6f/adafruit-circuitpython-mcp3xxx-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "2f5223442ef836f79843356218bce8e9", "sha256": "b57ba9b4378831bb6cb1a322d418e4dcc1220edb06a94ac8211ed0c9939171db"}, "downloads": -1, "filename": "adafruit-circuitpython-mcp3xxx-1.4.0.tar.gz", "has_sig": false, "md5_digest": "2f5223442ef836f79843356218bce8e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22819, "upload_time": "2020-03-20T15:33:37", "upload_time_iso_8601": "2020-03-20T15:33:37.494331Z", "url": "https://files.pythonhosted.org/packages/06/6f/df2b2b40893a141b03b704c6029afa53612c5cb7612f7dddd3af19bc9dd7/adafruit-circuitpython-mcp3xxx-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "1b773971beb1c366d7ace17a5e937836", "sha256": "393dba639f33e6ab84da12a4a6b86a97fb219c5bca3ef351cd365923f526eb65"}, "downloads": -1, "filename": "adafruit-circuitpython-mcp3xxx-1.4.1.tar.gz", "has_sig": false, "md5_digest": "1b773971beb1c366d7ace17a5e937836", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22807, "upload_time": "2020-04-10T17:59:37", "upload_time_iso_8601": "2020-04-10T17:59:37.912510Z", "url": "https://files.pythonhosted.org/packages/57/3a/2d62e66b60619d6f15a2ebf08ad77fcc4196c924e489ec22b66e1977d88b/adafruit-circuitpython-mcp3xxx-1.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1b773971beb1c366d7ace17a5e937836", "sha256": "393dba639f33e6ab84da12a4a6b86a97fb219c5bca3ef351cd365923f526eb65"}, "downloads": -1, "filename": "adafruit-circuitpython-mcp3xxx-1.4.1.tar.gz", "has_sig": false, "md5_digest": "1b773971beb1c366d7ace17a5e937836", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22807, "upload_time": "2020-04-10T17:59:37", "upload_time_iso_8601": "2020-04-10T17:59:37.912510Z", "url": "https://files.pythonhosted.org/packages/57/3a/2d62e66b60619d6f15a2ebf08ad77fcc4196c924e489ec22b66e1977d88b/adafruit-circuitpython-mcp3xxx-1.4.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:23:58 2020"}