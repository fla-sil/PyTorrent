{"info": {"author": "Django Statuspage", "author_email": "margus.laak@redfunction.ee", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "=============================\ndjango-statuspage\n=============================\n\n.. image:: https://badge.fury.io/py/django-statuspage.png\n    :target: https://badge.fury.io/py/django-statuspage\n\n.. image:: https://travis-ci.org/marguslaak/django-statuspage.png?branch=master\n    :target: https://travis-ci.org/marguslaak/django-statuspage\n\nDisplay status and information of the system. Can be used as a heartbeat\nindicator for load balancer.\n\nQuickstart\n----------\n\nInstall django-statuspage::\n\n    pip install django-statuspage\n\nThen use it in a project::\n\n    import djstatuspage\n\nFeatures\n--------\n\n* Display information about installed system with a simple json response\n\nUsage\n-----\n\nAdd url in your project with\n\nimport djastatuspage\n\nurlpatterns += patterns('',\n    url(r'^', include(djstatuspage.urls.urlpatterns, namespace='statuspage')),\n)\n\nSettings\n--------\n\n*  STATUSPAGE_TASKS - define extra callables to add to output in key-value\nmanner. For example.\n\n    STATUSPAGE_TASKS[\"version\"] = lambda: \"0.1.0\"\n\nWill return\n\n    {\"database\": \"ok\", \"version\": \"0.1.0\"}\n\n*  STATUSPAGE_TRY_DATABASE - Default True. Turn off database round trip.\n\n\nCookiecutter Tools Used in Making This Package\n----------------------------------------------\n\n*  cookiecutter\n*  cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n0.1.0 (2015-09-22)\n++++++++++++++++++\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/redfunction/django-statuspage", "keywords": "django-statuspage", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-statuspage", "package_url": "https://pypi.org/project/django-statuspage/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-statuspage/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/redfunction/django-statuspage"}, "release_url": "https://pypi.org/project/django-statuspage/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Your project description goes here", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            =============================<br>django-statuspage<br>=============================<br><br>.. image:: https://badge.fury.io/py/django-statuspage.png<br>    :target: https://badge.fury.io/py/django-statuspage<br><br>.. image:: https://travis-ci.org/marguslaak/django-statuspage.png?branch=master<br>    :target: https://travis-ci.org/marguslaak/django-statuspage<br><br>Display status and information of the system. Can be used as a heartbeat<br>indicator for load balancer.<br><br>Quickstart<br>----------<br><br>Install django-statuspage::<br><br>    pip install django-statuspage<br><br>Then use it in a project::<br><br>    import djstatuspage<br><br>Features<br>--------<br><br>* Display information about installed system with a simple json response<br><br>Usage<br>-----<br><br>Add url in your project with<br><br>import djastatuspage<br><br>urlpatterns += patterns('',<br>    url(r'^', include(djstatuspage.urls.urlpatterns, namespace='statuspage')),<br>)<br><br>Settings<br>--------<br><br>*  STATUSPAGE_TASKS - define extra callables to add to output in key-value<br>manner. For example.<br><br>    STATUSPAGE_TASKS[\"version\"] = lambda: \"0.1.0\"<br><br>Will return<br><br>    {\"database\": \"ok\", \"version\": \"0.1.0\"}<br><br>*  STATUSPAGE_TRY_DATABASE - Default True. Turn off database round trip.<br><br><br>Cookiecutter Tools Used in Making This Package<br>----------------------------------------------<br><br>*  cookiecutter<br>*  cookiecutter-djangopackage<br><br><br><br><br>History<br>-------<br><br>0.1.0 (2015-09-22)<br>++++++++++++++++++<br><br>* First release on PyPI.\n          </div>"}, "last_serial": 1733066, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "70d4fa89229b34f0e4ccc6464dd69d1d", "sha256": "a4f746fc903ab00acaff334a8cb66dc50011aa8322080c9dbf00d9969df3753d"}, "downloads": -1, "filename": "django-statuspage-0.1.0.tar.gz", "has_sig": false, "md5_digest": "70d4fa89229b34f0e4ccc6464dd69d1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5226, "upload_time": "2015-09-22T12:14:47", "upload_time_iso_8601": "2015-09-22T12:14:47.244204Z", "url": "https://files.pythonhosted.org/packages/42/93/3c98c71be4fbcdb60756aa52068efe79b8508648fd441e77793e6a9178fc/django-statuspage-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "70d4fa89229b34f0e4ccc6464dd69d1d", "sha256": "a4f746fc903ab00acaff334a8cb66dc50011aa8322080c9dbf00d9969df3753d"}, "downloads": -1, "filename": "django-statuspage-0.1.0.tar.gz", "has_sig": false, "md5_digest": "70d4fa89229b34f0e4ccc6464dd69d1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5226, "upload_time": "2015-09-22T12:14:47", "upload_time_iso_8601": "2015-09-22T12:14:47.244204Z", "url": "https://files.pythonhosted.org/packages/42/93/3c98c71be4fbcdb60756aa52068efe79b8508648fd441e77793e6a9178fc/django-statuspage-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:54 2020"}