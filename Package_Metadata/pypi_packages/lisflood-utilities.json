{"info": {"author": "Valerio Lorini, Domenico Nappo, Lorenzo Alfieri", "author_email": "valerio.lorini@ec.europa.eu,domenico.nappo@gmail.com,lorenzo.alfieri@ec.europa.eu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Other Audience", "Intended Audience :: Science/Research", "License :: OSI Approved :: European Union Public Licence 1.2 (EUPL 1.2)", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Physics"], "description": "# Lisflood Utilities\n\nThis repository hosts source code of LISFLOOD utilities.\nGo to [Lisflood OS page](https://ec-jrc.github.io/lisflood/) for more information.\n\nOther useful resources\n\n| **Project**         | **Documentation**                                         | **Source code**                                                 |\n| ------------------- | --------------------------------------------------------- | --------------------------------------------------------------- |\n| Lisflood            | [Model docs](https://ec-jrc.github.io/lisflood-model/)    | https://github.com/ec-jrc/lisflood-code                         |\n|                     | [User guide](https://ec-jrc.github.io/lisflood-code/)     |                                                                 |\n| Lisvap              | [Docs](https://ec-jrc.github.io/lisflood-lisvap/)         | https://github.com/ec-jrc/lisflood-lisvap                       |\n| Calibration tool    | [Docs](https://ec-jrc.github.io/lisflood-calibration/)    | https://github.com/ec-jrc/lisflood-calibration                  |\n| Lisflood Utilities  |                                                           | https://github.com/ec-jrc/lisflood-utilities (this repository)  |\n| Lisflood Usecases   |                                                           | https://github.com/ec-jrc/lisflood-usecases                     |\n\n\n## lisflood utilities\n\n**Note:** User guide of each tool is placed under the relative directory in a README.md file.\n\nLisflood Utilities is a set of tools to help LISFLOOD users (or any users of PCRaster/netCDF files) \nto execute some mundane tasks that are necessary to operate lisflood.\nHere's a list of utilities you can find in lisflood-utilities package.\n\n* __pcr2nc__ is a tool to convert PCRaster maps to netCDF4 files.\n  - convert a single map into a NetCDF4 file\n  - convert a time series of maps into a NetCDF4 mapstack\n  - support for WGS84 and ETRS89 (LAEA) reference systems\n  - fine tuning of output files (compression, significant digits, etc.)\n\n* __cutmaps__ is a tool to cut netcdf files in order to reduce size, using either\n  - a bounding box of coordinates\n  - a bounding box of matrix indices\n  - an existing boolean area mask\n \n* __compare__ is a package containing a set of simple Python classes that helps to compare \nnetCDF, PCRaster and TSS files.\n\nThe package contains convenient classes for reading/writing:\n\n* PCRasterMap\n* PCRasterReader\n* NetCDFWriter\n\n### Installation\n\nThere are two ways to get the software: \n\n* install it via pip tool\n* clone the repository\n\n#### Requisites\n\nEnsure you have properly installed the following software:\n\n- Python 3.5+\n- GDAL C library and software\n- netCDF4 C library\n\n#### Install via pip tool\n\nActivate your virtualenv and then:\n\n```bash\n$ pip install lisflood-utilities\n```\n\nAfter the install was complete, you still have to install the proper GDAL package,\naccording to the version of gdal library that is installed on your machine.\nYou will also need C GDAL headers to properly install python GDAL wrapper.\n\nE.g.\n\n```bash\nsudo apt-get install libgdal-dev libgdal\nexport CPLUS_INCLUDE_PATH=/usr/include/gdal\nexport C_INCLUDE_PATH=/usr/include/gdal\ngdal-config --version  # 2.2.3\npip install GDAL==2.2.3\n```\n\n#### Install by cloning the repository\n\n```bash\ngit clone https://github.com/ec-jrc/lisflood-utilities\n```\n\nInstall requirements\n\n```bash\n$ pip install -r requirements.txt\n```\n\nIf GDAL library fails to install, ensure to install the same package version of the\nlibrary you have on your system.\nTo check which version of GDAL libraries you have installed on your computer, use gdal-config\n\n```bash\ngdal-config --version\n2.1\n```\n\nExample: you have installed gdal 2.1, then:\n\n```bash\n$ pip install GDAL==2.1\n$ pip install -r requirements.txt\n```\n\n## pcr2nc\n\n### Usage\n\n> __Note:__ This guide assumes you have installed the program with pip tool.\n> If you cloned the source code instead, just substitute the executable `pcr2nc` with `python pcr2nc_script.py` that is in the root folder of the cloned project.\n\nThe tool takes three command line input arguments:\n\n- -i, --input: It can be a path to a single file, a folder or a unix-like widlcard expression like _/path/to/files/dis00*_\n- -o, --output_file: Path to the output nc file\n- -m, --metadata: Path to a yaml or json file containing configuration for the NetCDF4 output file.\n\nUnless the input is a single file, the resulting NetCDF4 file will be a mapstack according to a time dimension.\n\nInput as a folder containing PCRaster maps. In this case, the folder must contain ONLY PCraster files and the output will be a mapstack.\n\n```bash\npcr2nc -i /path/to/input/ -o /path/to/output/out.nc -m ./nc_metadata.yaml\n```\n\nInput as a path to a single map. In this case, the output won't be a mapstack.\n\n```bash\npcr2nc -i /path/to/input/pcr.map -o /path/to/output/out.nc -m ./nc_metadata.yaml\n```\n\nInput as a _Unix style pathname pattern expansion_. The output will be a mapstack. __Note that in this case the input argument must be contained in double quotes!__\n\n```bash\npcr2nc -i \"/path/to/input/pcr00*\" -o /path/to/output/out.nc -m ./nc_metadata.json\n```\n\n#### Writing metadata configuration file\n\nFormat of resulting NetCDF4 file is configured into a metadata configuration file. This file can be written in YAML or JSON format.\n\nAn example of a metadata configuration file is the following\n\n```yaml\nvariable:\n  shortname: dis\n  description: Discharge\n  longname: discharge\n  units: m3/s\n  compression: 9\n  least_significant_digit: 2\nsource: JRC Space, Security, Migration\nreference: JRC Space, Security, Migration\ngeographical:\n  datum: WGS84\ntime:\n  calendar: proleptic_gregorian\n  units: days since 1996-01-01\n\n```\n\n#### Variable section\n\nIn `variable` section you can configure metadata for the main variable:\n\n- `shortname`: A short name for the variable\n- `longname`: The long name version\n- `description`: A description for humans\n- `units`: The units of the variable\n- `compression`: Optional, integer number between 1 and 9, default 0 (no compression). If present the output nc file will be compressed at this level.\n- `least_significant_digit`: Optional, integer number, default 2. From NetCDF4 documentation:\n\n> If your data only has a certain number of digits of precision\n(say for example, it is temperature data that was measured with a precision\nof 0.1 degrees), you can dramatically improve zlib compression by quantizing\n(or truncating) the data using the least_significant_digit keyword argument\nto createVariable. The least significant digit is the power of ten of the\nsmallest decimal place in the data that is a reliable value.\nFor example if the data has a precision of 0.1,\nthen setting least_significant_digit=1 will cause data the data to be\nquantized using `numpy.around(scale*data)/scale`, where `scale = 2**bits`,\nand bits is determined so that a precision of 0.1 is retained\n(in this case bits=4). Effectively, this makes the compression 'lossy'\ninstead of 'lossless', that is some precision in the data is sacrificed for the sake of disk space.\n\n#### Source and reference\n\n`source` and `reference` add information for the institution that is providing the NetCDF4 file.\n\n#### Geographical section\n\nIn `geographical` section the only setting to configure is `datum`. \nCurrently, pcr2nc supports the following list:\n\n  * `WGS84`\n  * `ETRS89`\n  * `GISCO`\n\n#### Time section\n\nThis section is optional and is only required if the output file is a mapstack (a timeseries of georeferenced 2D arrays)\nIn this section you have to configure `units` and `calendar`.\n\n- `units`: Can be one of the following strings (replacing placeholders with the actual date):\n    - `hours since YYYY-MM-DD HH:MM:SS`\n    - `days since YYYY-MM-DD`\n- `calendar`: A recognized calendar identifier, like `proleptic_gregorian`, `gregorian` etc.\n\n## Cutmaps: a NetCDF files cookie-cutter\n\nThis tool accepts a template/cookie-cutter as input, along with a list of files to cut, and produces cut netcdf files.  \n\n### Usage:\nThe tool accepts as input:\n\n* a mask map (either PCRaster or netCDF format) or \n  - alternatively, matrix indices in the form xmini_xmaxi:ymini_ymaxi or\n  - alternatively, coordinates bounding box in the form xmin_xmax:ymin_ymax\n* a textfile with a list of filepaths for files to cut or alternatively a path to a folder containing netCDF files to cut \n* a path to a folder where to write cut files.\n\nThe following command will cut all netcdf files inside _/workarea/Madeira/lai/_ folder \nand produced files will be writte in current folder. \nThe cookie-cutter that will be used is _/workarea/Madeira/maps/MaskMap/Bacia_madeira.nc_. \nThis file is a mask (boolean map with 1 only in the area of interest) where cutmaps takes the bounding box from.\nThe mask can also be in PCRaster format.\n\n```console\ncutmaps -m /workarea/Madeira/maps/MaskMap/Bacia_madeira.nc -f /workarea/Madeira/lai/ -o ./\n```\n\nIndices can also be passed as an argument (using -c argument instead of -m). Knowing your area of interest from your netCDF files, \nyou can determine indices of the array and you can pass in the form `imin_i_max:jmin_jmax`.\n\n```console\ncutmaps -c 150_350:80_180 -f /workarea/Madeira/lai/ -o ./\n```\n\n## gfit\n\n### Introduction\n\nThe tool Gfit2 was created to extract flood warning thresholds from a map stack of daily discharge for several years, given in NetCDF format.\nIt is designed to work with any other variable as well as with different sampling (sub- or super- daily)\n\nThe tool is made of three files:\n\n1. Gfit2.sh: the main file, used to run the tool (e.g., ./Gfit2.sh ./settingFile_test.sh)\n2. settingFile_test.sh: a setting file, where paths and values of the input variables are defined. It can be renamed, as long as the correct name is called in the script (e.g.: set1.sh --> ./Gfit2.sh ./set1.sh)\n3. gfit2.r: the r script that  performs the extreme value analysis\n\n### Requirements\n\nYou need to have installed the following:\n\n- CDO\n- R\n\n### How to run\nThe tool operates in a Linux environment (also as a job with qsub). To run the tool you'll need:\n- R (the script was tested with R version 3.5.0)\n- the following R packages: ncdf4, lmomco, ismev\n- CDO (the script was tested with CDO version 1.6.5.1)\n\n### What does the tool do\n\nThe Gfit2 tool performs the following steps:\n- It takes the input file in NetCDF and extract the series of annual maxima. an optional number of warm-up years ($warmup_yrs) are excluded at the beginning of the data, to remove potential spin-up effect. Also the map of average value is computed\n- An extreme value fitting is performed on each pixel of the map, using L-moments and a 2-parameter Gumbel distribution. As option, the user can limit the analysis to a specific number of years. Also, one can use the option to remove from the fitting all values smaller than the long-term average. The fitting is performed only where at least 5 annual maxima are available, otherwise a NA is returned on the output map\n- Output return level maps (corresponding to user-selected years of recurrence interval) are saved in a netcdf file (return_levels.nc) and as ascii files. If a clone map in PCRaster format is provided, maps are also saved in PCRaster (return level maps and parameters of the Gumbel distribution)\n- After the EV fitting, the tool estimates some further statistics from the long-term input file, including minimum, maximum, and different percentile maps. This part can be commented out if not of interest\n\n### Reference\n[L-Moments: Analysis and Estimation of Distributions Using Linear Combinations of Order Statistics](https://www.jstor.org/stable/2345653)\n\nHosking, J.R.M., 1990. L-Moments: Analysis and Estimation of Distributions Using Linear Combinations of Order Statistics. J. R. Stat. Soc. Ser. B Methodol. 52, 105124.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ec-jrc/lisflood-utilities", "keywords": "netCDF4,PCRaster,mapstack,lisflood,efas,glofas,ecmwf,copernicus", "license": "EUPL 1.2", "maintainer": "", "maintainer_email": "", "name": "lisflood-utilities", "package_url": "https://pypi.org/project/lisflood-utilities/", "platform": "", "project_url": "https://pypi.org/project/lisflood-utilities/", "project_urls": {"Homepage": "https://github.com/ec-jrc/lisflood-utilities"}, "release_url": "https://pypi.org/project/lisflood-utilities/0.12.2/", "requires_dist": null, "requires_python": "", "summary": "A set of utilities for lisfloodutilities users. pcr2nc: Convert PCRaster files to netCDF; cutmaps: cut netCDF files;compare: to compare two set of netcdf files", "version": "0.12.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Lisflood Utilities</h1>\n<p>This repository hosts source code of LISFLOOD utilities.\nGo to <a href=\"https://ec-jrc.github.io/lisflood/\" rel=\"nofollow\">Lisflood OS page</a> for more information.</p>\n<p>Other useful resources</p>\n<table>\n<thead>\n<tr>\n<th><strong>Project</strong></th>\n<th><strong>Documentation</strong></th>\n<th><strong>Source code</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Lisflood</td>\n<td><a href=\"https://ec-jrc.github.io/lisflood-model/\" rel=\"nofollow\">Model docs</a></td>\n<td><a href=\"https://github.com/ec-jrc/lisflood-code\" rel=\"nofollow\">https://github.com/ec-jrc/lisflood-code</a></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://ec-jrc.github.io/lisflood-code/\" rel=\"nofollow\">User guide</a></td>\n<td></td>\n</tr>\n<tr>\n<td>Lisvap</td>\n<td><a href=\"https://ec-jrc.github.io/lisflood-lisvap/\" rel=\"nofollow\">Docs</a></td>\n<td><a href=\"https://github.com/ec-jrc/lisflood-lisvap\" rel=\"nofollow\">https://github.com/ec-jrc/lisflood-lisvap</a></td>\n</tr>\n<tr>\n<td>Calibration tool</td>\n<td><a href=\"https://ec-jrc.github.io/lisflood-calibration/\" rel=\"nofollow\">Docs</a></td>\n<td><a href=\"https://github.com/ec-jrc/lisflood-calibration\" rel=\"nofollow\">https://github.com/ec-jrc/lisflood-calibration</a></td>\n</tr>\n<tr>\n<td>Lisflood Utilities</td>\n<td></td>\n<td><a href=\"https://github.com/ec-jrc/lisflood-utilities\" rel=\"nofollow\">https://github.com/ec-jrc/lisflood-utilities</a> (this repository)</td>\n</tr>\n<tr>\n<td>Lisflood Usecases</td>\n<td></td>\n<td><a href=\"https://github.com/ec-jrc/lisflood-usecases\" rel=\"nofollow\">https://github.com/ec-jrc/lisflood-usecases</a></td>\n</tr></tbody></table>\n<h2>lisflood utilities</h2>\n<p><strong>Note:</strong> User guide of each tool is placed under the relative directory in a README.md file.</p>\n<p>Lisflood Utilities is a set of tools to help LISFLOOD users (or any users of PCRaster/netCDF files)\nto execute some mundane tasks that are necessary to operate lisflood.\nHere's a list of utilities you can find in lisflood-utilities package.</p>\n<ul>\n<li>\n<p><strong>pcr2nc</strong> is a tool to convert PCRaster maps to netCDF4 files.</p>\n<ul>\n<li>convert a single map into a NetCDF4 file</li>\n<li>convert a time series of maps into a NetCDF4 mapstack</li>\n<li>support for WGS84 and ETRS89 (LAEA) reference systems</li>\n<li>fine tuning of output files (compression, significant digits, etc.)</li>\n</ul>\n</li>\n<li>\n<p><strong>cutmaps</strong> is a tool to cut netcdf files in order to reduce size, using either</p>\n<ul>\n<li>a bounding box of coordinates</li>\n<li>a bounding box of matrix indices</li>\n<li>an existing boolean area mask</li>\n</ul>\n</li>\n<li>\n<p><strong>compare</strong> is a package containing a set of simple Python classes that helps to compare\nnetCDF, PCRaster and TSS files.</p>\n</li>\n</ul>\n<p>The package contains convenient classes for reading/writing:</p>\n<ul>\n<li>PCRasterMap</li>\n<li>PCRasterReader</li>\n<li>NetCDFWriter</li>\n</ul>\n<h3>Installation</h3>\n<p>There are two ways to get the software:</p>\n<ul>\n<li>install it via pip tool</li>\n<li>clone the repository</li>\n</ul>\n<h4>Requisites</h4>\n<p>Ensure you have properly installed the following software:</p>\n<ul>\n<li>Python 3.5+</li>\n<li>GDAL C library and software</li>\n<li>netCDF4 C library</li>\n</ul>\n<h4>Install via pip tool</h4>\n<p>Activate your virtualenv and then:</p>\n<pre>$ pip install lisflood-utilities\n</pre>\n<p>After the install was complete, you still have to install the proper GDAL package,\naccording to the version of gdal library that is installed on your machine.\nYou will also need C GDAL headers to properly install python GDAL wrapper.</p>\n<p>E.g.</p>\n<pre>sudo apt-get install libgdal-dev libgdal\n<span class=\"nb\">export</span> <span class=\"nv\">CPLUS_INCLUDE_PATH</span><span class=\"o\">=</span>/usr/include/gdal\n<span class=\"nb\">export</span> <span class=\"nv\">C_INCLUDE_PATH</span><span class=\"o\">=</span>/usr/include/gdal\ngdal-config --version  <span class=\"c1\"># 2.2.3</span>\npip install <span class=\"nv\">GDAL</span><span class=\"o\">==</span><span class=\"m\">2</span>.2.3\n</pre>\n<h4>Install by cloning the repository</h4>\n<pre>git clone https://github.com/ec-jrc/lisflood-utilities\n</pre>\n<p>Install requirements</p>\n<pre>$ pip install -r requirements.txt\n</pre>\n<p>If GDAL library fails to install, ensure to install the same package version of the\nlibrary you have on your system.\nTo check which version of GDAL libraries you have installed on your computer, use gdal-config</p>\n<pre>gdal-config --version\n<span class=\"m\">2</span>.1\n</pre>\n<p>Example: you have installed gdal 2.1, then:</p>\n<pre>$ pip install <span class=\"nv\">GDAL</span><span class=\"o\">==</span><span class=\"m\">2</span>.1\n$ pip install -r requirements.txt\n</pre>\n<h2>pcr2nc</h2>\n<h3>Usage</h3>\n<blockquote>\n<p><strong>Note:</strong> This guide assumes you have installed the program with pip tool.\nIf you cloned the source code instead, just substitute the executable <code>pcr2nc</code> with <code>python pcr2nc_script.py</code> that is in the root folder of the cloned project.</p>\n</blockquote>\n<p>The tool takes three command line input arguments:</p>\n<ul>\n<li>-i, --input: It can be a path to a single file, a folder or a unix-like widlcard expression like <em>/path/to/files/dis00*</em></li>\n<li>-o, --output_file: Path to the output nc file</li>\n<li>-m, --metadata: Path to a yaml or json file containing configuration for the NetCDF4 output file.</li>\n</ul>\n<p>Unless the input is a single file, the resulting NetCDF4 file will be a mapstack according to a time dimension.</p>\n<p>Input as a folder containing PCRaster maps. In this case, the folder must contain ONLY PCraster files and the output will be a mapstack.</p>\n<pre>pcr2nc -i /path/to/input/ -o /path/to/output/out.nc -m ./nc_metadata.yaml\n</pre>\n<p>Input as a path to a single map. In this case, the output won't be a mapstack.</p>\n<pre>pcr2nc -i /path/to/input/pcr.map -o /path/to/output/out.nc -m ./nc_metadata.yaml\n</pre>\n<p>Input as a <em>Unix style pathname pattern expansion</em>. The output will be a mapstack. <strong>Note that in this case the input argument must be contained in double quotes!</strong></p>\n<pre>pcr2nc -i <span class=\"s2\">\"/path/to/input/pcr00*\"</span> -o /path/to/output/out.nc -m ./nc_metadata.json\n</pre>\n<h4>Writing metadata configuration file</h4>\n<p>Format of resulting NetCDF4 file is configured into a metadata configuration file. This file can be written in YAML or JSON format.</p>\n<p>An example of a metadata configuration file is the following</p>\n<pre><span class=\"nt\">variable</span><span class=\"p\">:</span>\n  <span class=\"nt\">shortname</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">dis</span>\n  <span class=\"nt\">description</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Discharge</span>\n  <span class=\"nt\">longname</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">discharge</span>\n  <span class=\"nt\">units</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">m3/s</span>\n  <span class=\"nt\">compression</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">9</span>\n  <span class=\"nt\">least_significant_digit</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">2</span>\n<span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">JRC Space, Security, Migration</span>\n<span class=\"nt\">reference</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">JRC Space, Security, Migration</span>\n<span class=\"nt\">geographical</span><span class=\"p\">:</span>\n  <span class=\"nt\">datum</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">WGS84</span>\n<span class=\"nt\">time</span><span class=\"p\">:</span>\n  <span class=\"nt\">calendar</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">proleptic_gregorian</span>\n  <span class=\"nt\">units</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">days since 1996-01-01</span>\n</pre>\n<h4>Variable section</h4>\n<p>In <code>variable</code> section you can configure metadata for the main variable:</p>\n<ul>\n<li><code>shortname</code>: A short name for the variable</li>\n<li><code>longname</code>: The long name version</li>\n<li><code>description</code>: A description for humans</li>\n<li><code>units</code>: The units of the variable</li>\n<li><code>compression</code>: Optional, integer number between 1 and 9, default 0 (no compression). If present the output nc file will be compressed at this level.</li>\n<li><code>least_significant_digit</code>: Optional, integer number, default 2. From NetCDF4 documentation:</li>\n</ul>\n<blockquote>\n<p>If your data only has a certain number of digits of precision\n(say for example, it is temperature data that was measured with a precision\nof 0.1 degrees), you can dramatically improve zlib compression by quantizing\n(or truncating) the data using the least_significant_digit keyword argument\nto createVariable. The least significant digit is the power of ten of the\nsmallest decimal place in the data that is a reliable value.\nFor example if the data has a precision of 0.1,\nthen setting least_significant_digit=1 will cause data the data to be\nquantized using <code>numpy.around(scale*data)/scale</code>, where <code>scale = 2**bits</code>,\nand bits is determined so that a precision of 0.1 is retained\n(in this case bits=4). Effectively, this makes the compression 'lossy'\ninstead of 'lossless', that is some precision in the data is sacrificed for the sake of disk space.</p>\n</blockquote>\n<h4>Source and reference</h4>\n<p><code>source</code> and <code>reference</code> add information for the institution that is providing the NetCDF4 file.</p>\n<h4>Geographical section</h4>\n<p>In <code>geographical</code> section the only setting to configure is <code>datum</code>.\nCurrently, pcr2nc supports the following list:</p>\n<ul>\n<li><code>WGS84</code></li>\n<li><code>ETRS89</code></li>\n<li><code>GISCO</code></li>\n</ul>\n<h4>Time section</h4>\n<p>This section is optional and is only required if the output file is a mapstack (a timeseries of georeferenced 2D arrays)\nIn this section you have to configure <code>units</code> and <code>calendar</code>.</p>\n<ul>\n<li><code>units</code>: Can be one of the following strings (replacing placeholders with the actual date):\n<ul>\n<li><code>hours since YYYY-MM-DD HH:MM:SS</code></li>\n<li><code>days since YYYY-MM-DD</code></li>\n</ul>\n</li>\n<li><code>calendar</code>: A recognized calendar identifier, like <code>proleptic_gregorian</code>, <code>gregorian</code> etc.</li>\n</ul>\n<h2>Cutmaps: a NetCDF files cookie-cutter</h2>\n<p>This tool accepts a template/cookie-cutter as input, along with a list of files to cut, and produces cut netcdf files.</p>\n<h3>Usage:</h3>\n<p>The tool accepts as input:</p>\n<ul>\n<li>a mask map (either PCRaster or netCDF format) or\n<ul>\n<li>alternatively, matrix indices in the form xmini_xmaxi:ymini_ymaxi or</li>\n<li>alternatively, coordinates bounding box in the form xmin_xmax:ymin_ymax</li>\n</ul>\n</li>\n<li>a textfile with a list of filepaths for files to cut or alternatively a path to a folder containing netCDF files to cut</li>\n<li>a path to a folder where to write cut files.</li>\n</ul>\n<p>The following command will cut all netcdf files inside <em>/workarea/Madeira/lai/</em> folder\nand produced files will be writte in current folder.\nThe cookie-cutter that will be used is <em>/workarea/Madeira/maps/MaskMap/Bacia_madeira.nc</em>.\nThis file is a mask (boolean map with 1 only in the area of interest) where cutmaps takes the bounding box from.\nThe mask can also be in PCRaster format.</p>\n<pre><span class=\"go\">cutmaps -m /workarea/Madeira/maps/MaskMap/Bacia_madeira.nc -f /workarea/Madeira/lai/ -o ./</span>\n</pre>\n<p>Indices can also be passed as an argument (using -c argument instead of -m). Knowing your area of interest from your netCDF files,\nyou can determine indices of the array and you can pass in the form <code>imin_i_max:jmin_jmax</code>.</p>\n<pre><span class=\"go\">cutmaps -c 150_350:80_180 -f /workarea/Madeira/lai/ -o ./</span>\n</pre>\n<h2>gfit</h2>\n<h3>Introduction</h3>\n<p>The tool Gfit2 was created to extract flood warning thresholds from a map stack of daily discharge for several years, given in NetCDF format.\nIt is designed to work with any other variable as well as with different sampling (sub- or super- daily)</p>\n<p>The tool is made of three files:</p>\n<ol>\n<li>Gfit2.sh: the main file, used to run the tool (e.g., ./Gfit2.sh ./settingFile_test.sh)</li>\n<li>settingFile_test.sh: a setting file, where paths and values of the input variables are defined. It can be renamed, as long as the correct name is called in the script (e.g.: set1.sh --&gt; ./Gfit2.sh ./set1.sh)</li>\n<li>gfit2.r: the r script that  performs the extreme value analysis</li>\n</ol>\n<h3>Requirements</h3>\n<p>You need to have installed the following:</p>\n<ul>\n<li>CDO</li>\n<li>R</li>\n</ul>\n<h3>How to run</h3>\n<p>The tool operates in a Linux environment (also as a job with qsub). To run the tool you'll need:</p>\n<ul>\n<li>R (the script was tested with R version 3.5.0)</li>\n<li>the following R packages: ncdf4, lmomco, ismev</li>\n<li>CDO (the script was tested with CDO version 1.6.5.1)</li>\n</ul>\n<h3>What does the tool do</h3>\n<p>The Gfit2 tool performs the following steps:</p>\n<ul>\n<li>It takes the input file in NetCDF and extract the series of annual maxima. an optional number of warm-up years ($warmup_yrs) are excluded at the beginning of the data, to remove potential spin-up effect. Also the map of average value is computed</li>\n<li>An extreme value fitting is performed on each pixel of the map, using L-moments and a 2-parameter Gumbel distribution. As option, the user can limit the analysis to a specific number of years. Also, one can use the option to remove from the fitting all values smaller than the long-term average. The fitting is performed only where at least 5 annual maxima are available, otherwise a NA is returned on the output map</li>\n<li>Output return level maps (corresponding to user-selected years of recurrence interval) are saved in a netcdf file (return_levels.nc) and as ascii files. If a clone map in PCRaster format is provided, maps are also saved in PCRaster (return level maps and parameters of the Gumbel distribution)</li>\n<li>After the EV fitting, the tool estimates some further statistics from the long-term input file, including minimum, maximum, and different percentile maps. This part can be commented out if not of interest</li>\n</ul>\n<h3>Reference</h3>\n<p><a href=\"https://www.jstor.org/stable/2345653\" rel=\"nofollow\">L-Moments: Analysis and Estimation of Distributions Using Linear Combinations of Order Statistics</a></p>\n<p>Hosking, J.R.M., 1990. L-Moments: Analysis and Estimation of Distributions Using Linear Combinations of Order Statistics. J. R. Stat. Soc. Ser. B Methodol. 52, 105124.</p>\n\n          </div>"}, "last_serial": 7094731, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8fc687e276b1f505e6c1f81fbbe8df79", "sha256": "6199dbbcc4462d37675ca42faabc9b16a8ae2e1d214175b3b6f949b4fffd3989"}, "downloads": -1, "filename": "lisflood-utilities-0.1.tar.gz", "has_sig": false, "md5_digest": "8fc687e276b1f505e6c1f81fbbe8df79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15639, "upload_time": "2019-08-12T13:14:46", "upload_time_iso_8601": "2019-08-12T13:14:46.279507Z", "url": "https://files.pythonhosted.org/packages/83/a9/0cb46b2c5123d060fa3dc9519bb434d0696c67056fff457ddb02ee2a6b6d/lisflood-utilities-0.1.tar.gz", "yanked": false}], "0.10": [{"comment_text": "", "digests": {"md5": "da382817e18976e9bd05148713a200df", "sha256": "02ac9e961a27bd5e9d59a4fde9d159e4df814da5f143788f84a4bc4fa55bf43a"}, "downloads": -1, "filename": "lisflood-utilities-0.10.tar.gz", "has_sig": false, "md5_digest": "da382817e18976e9bd05148713a200df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23215, "upload_time": "2020-02-06T15:52:14", "upload_time_iso_8601": "2020-02-06T15:52:14.408785Z", "url": "https://files.pythonhosted.org/packages/d4/75/3d7a75c3c74162fa75e2a42c722263218519e162deb379d4169220df7a31/lisflood-utilities-0.10.tar.gz", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "5513efcee42478378c469e49bc485d66", "sha256": "958731366a4a63d0f896cb009824884ad92dc6567b8fa144dc8bcc1296d6a978"}, "downloads": -1, "filename": "lisflood-utilities-0.11.tar.gz", "has_sig": false, "md5_digest": "5513efcee42478378c469e49bc485d66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23192, "upload_time": "2020-02-06T15:58:53", "upload_time_iso_8601": "2020-02-06T15:58:53.798393Z", "url": "https://files.pythonhosted.org/packages/6b/2c/d76e05e4a3c3aca7885a1a906ebc5352a02ff8db4b5c25cdf9935795bd6c/lisflood-utilities-0.11.tar.gz", "yanked": false}], "0.11.1": [{"comment_text": "", "digests": {"md5": "32d4f816f43e487cb056a93f96714642", "sha256": "7201d5619e32579b64f049210050b9ba315c3dd387a5e1bf0325e9ff07e20edb"}, "downloads": -1, "filename": "lisflood-utilities-0.11.1.tar.gz", "has_sig": false, "md5_digest": "32d4f816f43e487cb056a93f96714642", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23234, "upload_time": "2020-02-07T09:12:55", "upload_time_iso_8601": "2020-02-07T09:12:55.439455Z", "url": "https://files.pythonhosted.org/packages/f8/c7/11d56adc130f1230e44006585c2662767df1fe9d6e1fca28b26941d464db/lisflood-utilities-0.11.1.tar.gz", "yanked": false}], "0.11.10": [{"comment_text": "", "digests": {"md5": "c2e467d65a99a4c2c52983290dffc3c1", "sha256": "3eda20755bd841c36b8f4652118dab6a820bcb9a56e055e9e4cf9f826805e9f4"}, "downloads": -1, "filename": "lisflood-utilities-0.11.10.tar.gz", "has_sig": false, "md5_digest": "c2e467d65a99a4c2c52983290dffc3c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23395, "upload_time": "2020-02-26T14:55:28", "upload_time_iso_8601": "2020-02-26T14:55:28.286387Z", "url": "https://files.pythonhosted.org/packages/22/a5/2acc42ac749361f6aee25d1a8c7d46d6bed270bb2bf3281502e425276dd8/lisflood-utilities-0.11.10.tar.gz", "yanked": false}], "0.11.11": [{"comment_text": "", "digests": {"md5": "e91ca6fbfa768a910ec8bd4f5c0abc4b", "sha256": "ff5b22ab692aa6b58ee40442315a83719cc5a671ec9621fc98e56ec87382132a"}, "downloads": -1, "filename": "lisflood-utilities-0.11.11.tar.gz", "has_sig": false, "md5_digest": "e91ca6fbfa768a910ec8bd4f5c0abc4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23411, "upload_time": "2020-02-26T15:09:44", "upload_time_iso_8601": "2020-02-26T15:09:44.839613Z", "url": "https://files.pythonhosted.org/packages/b1/98/1c23ac39ffedb2a908506b1eb71f7e2062f5af212725786dca7682e1a1cb/lisflood-utilities-0.11.11.tar.gz", "yanked": false}], "0.11.12": [{"comment_text": "", "digests": {"md5": "bf48e04baf93209dd4c618c9b3e37ba7", "sha256": "ca51f977097e7755cff553a1779f20db06c9caf60c1e6d1fb1d756347d39d026"}, "downloads": -1, "filename": "lisflood-utilities-0.11.12.tar.gz", "has_sig": false, "md5_digest": "bf48e04baf93209dd4c618c9b3e37ba7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19484, "upload_time": "2020-03-11T17:46:23", "upload_time_iso_8601": "2020-03-11T17:46:23.798699Z", "url": "https://files.pythonhosted.org/packages/9d/13/f7b8b4ed2aed6636d1d3a8981b5d75831a5087dd969faa577700d54eacde/lisflood-utilities-0.11.12.tar.gz", "yanked": false}], "0.11.2": [{"comment_text": "", "digests": {"md5": "66bbd49c1e57e3cda51cead97b07c863", "sha256": "bbcf28ff0cc809f3faa5494b5cf53a8d103d7978c1a9366c1468debfcc23f04a"}, "downloads": -1, "filename": "lisflood-utilities-0.11.2.tar.gz", "has_sig": false, "md5_digest": "66bbd49c1e57e3cda51cead97b07c863", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23253, "upload_time": "2020-02-07T09:41:17", "upload_time_iso_8601": "2020-02-07T09:41:17.898485Z", "url": "https://files.pythonhosted.org/packages/d3/8f/ed471f18a1c1da8dc2883e39825e3fd544364667b29727acf906ba48701e/lisflood-utilities-0.11.2.tar.gz", "yanked": false}], "0.11.3": [{"comment_text": "", "digests": {"md5": "a44c8a3f9cc6bc67951fb23b34d5030b", "sha256": "24cadf6d8b1567bdc3461831add242ae82f3ac40426627b1c9888ca60ef76783"}, "downloads": -1, "filename": "lisflood-utilities-0.11.3.tar.gz", "has_sig": false, "md5_digest": "a44c8a3f9cc6bc67951fb23b34d5030b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23258, "upload_time": "2020-02-07T09:55:44", "upload_time_iso_8601": "2020-02-07T09:55:44.902995Z", "url": "https://files.pythonhosted.org/packages/3c/5b/e6b5c85dd58406a0d55a8e2e6db0c9a4f0cd69244bc1ab6c58d34c2c8b4e/lisflood-utilities-0.11.3.tar.gz", "yanked": false}], "0.11.4": [{"comment_text": "", "digests": {"md5": "db6c121961eafd662646dab621e1c926", "sha256": "b13a64af25152f88dd6f0508ac4232ffba5be7a4d40737cc8bd6f733d3894b2c"}, "downloads": -1, "filename": "lisflood-utilities-0.11.4.tar.gz", "has_sig": false, "md5_digest": "db6c121961eafd662646dab621e1c926", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23266, "upload_time": "2020-02-14T14:52:19", "upload_time_iso_8601": "2020-02-14T14:52:19.386485Z", "url": "https://files.pythonhosted.org/packages/2e/35/159629edb76fd0f1c6ae5536581228b92aa1e305109664c845b5c5e7f8c7/lisflood-utilities-0.11.4.tar.gz", "yanked": false}], "0.11.5": [{"comment_text": "", "digests": {"md5": "53953289b0759bc31387bf46691719e5", "sha256": "33b34f022af70802e713202c56084160c6c6f604783c9c0130eefccade4063df"}, "downloads": -1, "filename": "lisflood-utilities-0.11.5.tar.gz", "has_sig": false, "md5_digest": "53953289b0759bc31387bf46691719e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23247, "upload_time": "2020-02-18T16:20:57", "upload_time_iso_8601": "2020-02-18T16:20:57.781516Z", "url": "https://files.pythonhosted.org/packages/e3/9d/90ac8c154c9de645a243febfff6f57ab449dbe3bed3c2cd302e509b4f832/lisflood-utilities-0.11.5.tar.gz", "yanked": false}], "0.11.6": [{"comment_text": "", "digests": {"md5": "b65969efb3d4c616091e5a31eb3b48d3", "sha256": "b22af9f1aab01ab6eb18c584feffc7517f4b7c1de8413080b093bf6584eb8195"}, "downloads": -1, "filename": "lisflood-utilities-0.11.6.tar.gz", "has_sig": false, "md5_digest": "b65969efb3d4c616091e5a31eb3b48d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23291, "upload_time": "2020-02-25T11:44:03", "upload_time_iso_8601": "2020-02-25T11:44:03.503913Z", "url": "https://files.pythonhosted.org/packages/02/5c/bf70c3a8dfd0e928081d364928d4e4916392a6cc9fd9d388c8b4825a5ac8/lisflood-utilities-0.11.6.tar.gz", "yanked": false}], "0.11.7": [{"comment_text": "", "digests": {"md5": "ac01674d3c7e3e32945dffdb4384bc07", "sha256": "0d5ec1efebf5cfe6164d76236d5172839c3908efd71f34ce01d08a8bb943af98"}, "downloads": -1, "filename": "lisflood-utilities-0.11.7.tar.gz", "has_sig": false, "md5_digest": "ac01674d3c7e3e32945dffdb4384bc07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23395, "upload_time": "2020-02-25T15:41:55", "upload_time_iso_8601": "2020-02-25T15:41:55.718160Z", "url": "https://files.pythonhosted.org/packages/69/3a/c35270464b4db9d3d70020971cf0a3a2664828ab9aa994dbb3c3a5f725b3/lisflood-utilities-0.11.7.tar.gz", "yanked": false}], "0.11.8": [{"comment_text": "", "digests": {"md5": "f4fb65e887e890210c06dd6808da16ff", "sha256": "c4b298fd488c1d4807b76853c3b4b5df79c61723afefc3e1b530eee4dfbe7473"}, "downloads": -1, "filename": "lisflood-utilities-0.11.8.tar.gz", "has_sig": false, "md5_digest": "f4fb65e887e890210c06dd6808da16ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23401, "upload_time": "2020-02-25T15:46:23", "upload_time_iso_8601": "2020-02-25T15:46:23.440155Z", "url": "https://files.pythonhosted.org/packages/b6/37/909638178f4ff4b71338877e9f2dddd86a67b4fb0966204ff216b7a3bc3b/lisflood-utilities-0.11.8.tar.gz", "yanked": false}], "0.11.9": [{"comment_text": "", "digests": {"md5": "f042b15eca3ec8e84a751d29ccdd34c9", "sha256": "0dc4b36fa4557995b807bd541e3ac31ee70b28febfac949257eb18308a108049"}, "downloads": -1, "filename": "lisflood-utilities-0.11.9.tar.gz", "has_sig": false, "md5_digest": "f042b15eca3ec8e84a751d29ccdd34c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23354, "upload_time": "2020-02-26T14:49:32", "upload_time_iso_8601": "2020-02-26T14:49:32.467371Z", "url": "https://files.pythonhosted.org/packages/d5/0c/726df5eee2889934e7f6b07389b43e0ffd9d858c59e1387ea2d5ecd3c980/lisflood-utilities-0.11.9.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "47419b426fe6a250bf153926ad609012", "sha256": "05d223f47e5fea1552bcc43eafcf99241af3e386834ea57103d381aa91b40382"}, "downloads": -1, "filename": "lisflood-utilities-0.12.0.tar.gz", "has_sig": false, "md5_digest": "47419b426fe6a250bf153926ad609012", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20326, "upload_time": "2020-04-09T16:21:14", "upload_time_iso_8601": "2020-04-09T16:21:14.432174Z", "url": "https://files.pythonhosted.org/packages/3f/20/a2d2e1d9ea205202d2ca8ca7e9638a12ec1ef6d06f935fe5d5ec9ef9003c/lisflood-utilities-0.12.0.tar.gz", "yanked": false}], "0.12.2": [{"comment_text": "", "digests": {"md5": "8128c9094c4d4f53105d5eaa8192b046", "sha256": "2d8517711629d2118dd9b7c37a3ab8b98b6869f2af3d9c446b4869a30c2ad9f9"}, "downloads": -1, "filename": "lisflood-utilities-0.12.2.tar.gz", "has_sig": false, "md5_digest": "8128c9094c4d4f53105d5eaa8192b046", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20419, "upload_time": "2020-04-24T17:39:27", "upload_time_iso_8601": "2020-04-24T17:39:27.068539Z", "url": "https://files.pythonhosted.org/packages/75/cb/a2e9a16f6ea31de8b40f695496f2dc1ea682fd251d7c2e15447e1ee7ac89/lisflood-utilities-0.12.2.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "6e71d86c4b5fe412fd6365fe28ee5c59", "sha256": "576b7daf7cb1cb86bb43724513ae39e7e2f6f014c9997c99ca5f6c1240850fbe"}, "downloads": -1, "filename": "lisflood_utilities-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6e71d86c4b5fe412fd6365fe28ee5c59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22204, "upload_time": "2019-08-30T07:24:01", "upload_time_iso_8601": "2019-08-30T07:24:01.946776Z", "url": "https://files.pythonhosted.org/packages/65/17/418ca492f9d97d4bd46b0919c6f404d9b9c92321c752a8f4c41e86434aa7/lisflood_utilities-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "419b6823cde9abea60056a775f035fad", "sha256": "30f62306f0515c48d8edbc6be7c28a261ec4b43bf1ff3337043f773591eb723d"}, "downloads": -1, "filename": "lisflood-utilities-0.2.tar.gz", "has_sig": false, "md5_digest": "419b6823cde9abea60056a775f035fad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15664, "upload_time": "2019-08-30T07:24:03", "upload_time_iso_8601": "2019-08-30T07:24:03.608133Z", "url": "https://files.pythonhosted.org/packages/05/f8/ea8638a686b737d7b2df35e76042acfc4a9dc693dcfb6e3c2bb3866fb4e0/lisflood-utilities-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "228e8197bfe78cb05f19b7d81ec5dafd", "sha256": "083893e000600a0017172369905eec7c8309afe414b24da6cce8517fdb7e20bf"}, "downloads": -1, "filename": "lisflood_utilities-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "228e8197bfe78cb05f19b7d81ec5dafd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32978, "upload_time": "2019-08-30T09:41:03", "upload_time_iso_8601": "2019-08-30T09:41:03.371857Z", "url": "https://files.pythonhosted.org/packages/67/98/63ec1b4051a01db69ed4e70a0ed1a508e2d01f31b4d41a6b294c8525a288/lisflood_utilities-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "220deb6fbd315e6d203327b1fc8b5ce7", "sha256": "0718d56f7563b6c2a69fa15a0416b5dc5c4d30a425c7259bc12f07beeb0ec52c"}, "downloads": -1, "filename": "lisflood-utilities-0.3.tar.gz", "has_sig": false, "md5_digest": "220deb6fbd315e6d203327b1fc8b5ce7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18849, "upload_time": "2019-08-30T09:41:05", "upload_time_iso_8601": "2019-08-30T09:41:05.160019Z", "url": "https://files.pythonhosted.org/packages/6e/3f/d658e46f397c10003c97d4539c8c9918783807c22fc90fe37dac76498750/lisflood-utilities-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "c91fdde301cd590e8efa548a547c3e25", "sha256": "d87e16c75e7223e8555dde4f251b037ea016ab91c5a6957c48b2cfde3d1edd91"}, "downloads": -1, "filename": "lisflood_utilities-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c91fdde301cd590e8efa548a547c3e25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23305, "upload_time": "2019-08-30T14:14:23", "upload_time_iso_8601": "2019-08-30T14:14:23.834960Z", "url": "https://files.pythonhosted.org/packages/67/5c/21eeb75e06ca2ef8a2af83c09e2cfab24a7de8fc4b4ca578dfb5577b7f85/lisflood_utilities-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30e4113e68e9511a5415a2ce6da349ee", "sha256": "c689d92773807eba073b4e14bd4163ddc6151652958fc8c92ec56b85806583af"}, "downloads": -1, "filename": "lisflood-utilities-0.4.tar.gz", "has_sig": false, "md5_digest": "30e4113e68e9511a5415a2ce6da349ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19851, "upload_time": "2019-08-30T14:14:25", "upload_time_iso_8601": "2019-08-30T14:14:25.386821Z", "url": "https://files.pythonhosted.org/packages/68/03/cf7c185a21e365703c905d18c78b63b922a45ef0bdcfab6443f4c0e4079c/lisflood-utilities-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "40b5ca2da11e34fdb4cb2dc5b8a82231", "sha256": "4b1ae0905d8ef8f5971cc3ff243b8e3896a648a78012125d2ef3e0f2e0dfde00"}, "downloads": -1, "filename": "lisflood_utilities-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "40b5ca2da11e34fdb4cb2dc5b8a82231", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23803, "upload_time": "2019-09-12T08:29:37", "upload_time_iso_8601": "2019-09-12T08:29:37.606090Z", "url": "https://files.pythonhosted.org/packages/70/bf/ea9b26a4b1de82408f7a104f458b626b024746c7619b3ba7ee4cb89a124b/lisflood_utilities-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdeec9bc82428206c04d08ed3804ec96", "sha256": "209f938e9b32decd00fe704b4e1bd923a2fddd813a9e97450a8f3321ad76f4f1"}, "downloads": -1, "filename": "lisflood-utilities-0.5.tar.gz", "has_sig": false, "md5_digest": "fdeec9bc82428206c04d08ed3804ec96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20303, "upload_time": "2019-09-12T08:29:39", "upload_time_iso_8601": "2019-09-12T08:29:39.110785Z", "url": "https://files.pythonhosted.org/packages/b5/37/1aecc68c033c1185ddaa01465a086c40e7b820f658ef0c962b94b0379dbe/lisflood-utilities-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "c5f6934c9c88901d6713768ea3c53e85", "sha256": "5099ee761bd11ecf24d2c0cccfe098e39f9af4d8fdcc908e7733ea4f3c786cde"}, "downloads": -1, "filename": "lisflood_utilities-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "c5f6934c9c88901d6713768ea3c53e85", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26980, "upload_time": "2019-10-11T09:52:57", "upload_time_iso_8601": "2019-10-11T09:52:57.874525Z", "url": "https://files.pythonhosted.org/packages/fd/7b/fcefd1d7135768853c28d3d60268aef3a3af845318c7605e15d9d6e3b1b5/lisflood_utilities-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9969c034176c8105d0ad62c9d0c107d", "sha256": "36708376cee0c4b9e3e67f1ff7c378d0e7b4a10a97b78256d6ed1138f7fb3163"}, "downloads": -1, "filename": "lisflood-utilities-0.6.tar.gz", "has_sig": false, "md5_digest": "b9969c034176c8105d0ad62c9d0c107d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21789, "upload_time": "2019-10-11T09:52:59", "upload_time_iso_8601": "2019-10-11T09:52:59.474774Z", "url": "https://files.pythonhosted.org/packages/7a/cb/f60dc6a40a54beb973f256e955b9c731ec90eaa1150fd674a73ed31ecbcd/lisflood-utilities-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "a8815ddcc2fce5f0becde26c85325158", "sha256": "2ada5f1f224afad615153b72e29af651b2aa82d3076ea3f5c00ae67c32c561f0"}, "downloads": -1, "filename": "lisflood-utilities-0.7.tar.gz", "has_sig": false, "md5_digest": "a8815ddcc2fce5f0becde26c85325158", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22028, "upload_time": "2019-11-13T15:32:00", "upload_time_iso_8601": "2019-11-13T15:32:00.899797Z", "url": "https://files.pythonhosted.org/packages/10/3c/cbc75f138ff6885a0cc86143f1ca9ca2ee52a5d40557b3dc2426dab8f9fc/lisflood-utilities-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "e13dfb642406d81616a307d66cef6e1b", "sha256": "0915338b12e1fa9c7013bdcd1f844759bb75855911f39ef4c223ea3c66ec7c65"}, "downloads": -1, "filename": "lisflood-utilities-0.8.tar.gz", "has_sig": false, "md5_digest": "e13dfb642406d81616a307d66cef6e1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23094, "upload_time": "2019-12-06T13:08:21", "upload_time_iso_8601": "2019-12-06T13:08:21.085522Z", "url": "https://files.pythonhosted.org/packages/b2/34/bf68eea851b37b57c44642ad19baebed25324f10515a5ccf7ea977c30ace/lisflood-utilities-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "ad3e620ede1a3c7d4e6157a6c5ab2e1b", "sha256": "be5166efcb8e1faf70d6a1f2bdf9c7a277ac02a66b241400b69264b05b914c80"}, "downloads": -1, "filename": "lisflood-utilities-0.9.tar.gz", "has_sig": false, "md5_digest": "ad3e620ede1a3c7d4e6157a6c5ab2e1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23155, "upload_time": "2019-12-11T09:08:08", "upload_time_iso_8601": "2019-12-11T09:08:08.254795Z", "url": "https://files.pythonhosted.org/packages/5f/2c/bd1a084dc74a65967c1ce6b181f6cea7ab6d3fe27602b7e615c7997e5972/lisflood-utilities-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8128c9094c4d4f53105d5eaa8192b046", "sha256": "2d8517711629d2118dd9b7c37a3ab8b98b6869f2af3d9c446b4869a30c2ad9f9"}, "downloads": -1, "filename": "lisflood-utilities-0.12.2.tar.gz", "has_sig": false, "md5_digest": "8128c9094c4d4f53105d5eaa8192b046", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20419, "upload_time": "2020-04-24T17:39:27", "upload_time_iso_8601": "2020-04-24T17:39:27.068539Z", "url": "https://files.pythonhosted.org/packages/75/cb/a2e9a16f6ea31de8b40f695496f2dc1ea682fd251d7c2e15447e1ee7ac89/lisflood-utilities-0.12.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:19 2020"}