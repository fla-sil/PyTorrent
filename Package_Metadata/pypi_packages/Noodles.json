{"info": {"author": "Johan Hidding", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.7", "Topic :: System :: Distributed Computing"], "description": "|rtfd| |travis| |zenodo| |codecov|\n\nNoodles - easy parallel programming for Python\n==============================================\n\nOften, a computer program can be sped up by executing parts of its code *in\nparallel* (simultaneously), as opposed to *synchronously* (one part after\nanother).\n\nA simple example may be where you assign two variables, as follows ``a = 2 * i``\nand ``b = 3 * i``. Either statement is only dependent on ``i``, but whether you\nassign ``a`` before ``b`` or vice versa, does not matter for how your program\nworks. Whenever this is the case, there is potential to speed up a program,\nbecause the assignment of ``a`` and ``b`` could be done in parallel, using\nmultiple cores on your computer's CPU. Obviously, for simple assignments like\n``a = 2 * i``, there is not much time to be gained, but what if ``a`` is the\nresult of a time-consuming function, e.g. ``a = very_difficult_function(i)``?\nAnd what if your program makes many calls to that function, e.g. ``list_of_a =\n[very_difficult_function(i) for i in list_of_i]``? The potential speed-up could\nbe tremendous.\n\nSo, parallel execution of computer programs is great for improving performance,\nbut how do you tell the computer which parts should be executed in parallel, and\nwhich parts should be executed synchronously? How do you identify the order in\nwhich to execute each part, since the optimal order may be different from the\norder in which the parts appear in your program. These questions quickly become\nnearly impossible to answer as your program grows and changes during\ndevelopment. Because of this, many developers accept the slow execution of their\nprogram only because it saves them from the headaches associated with keeping\ntrack of which parts of their program depend on which other parts.\n\nEnter Noodles.\n\nNoodles is a Python package that can automatically construct a *callgraph*\nfor a given Python program, listing exactly which parts depend on which parts.\nMoreover, Noodles can subsequently use the callgraph to execute code in parallel\non your local machine using multiple cores. If you so choose, you can even\nconfigure Noodles such that it will execute the code remotely, for example on a\nbig compute node in a cluster computer.\n\nInstallation\n------------\n\nInstall the latest version from PyPI:\n\n.. code:: bash\n\n    pip install noodles\n\nOr, if you clone this repository,\n\n.. code:: bash\n\n    git clone git@github.com:NLeSC/noodles.git\n    cd noodles\n    pip install .\n\nTo enable Xenon for remote execution, Java must be installed, and Xenon\ncan be installed with\n\n.. code:: bash\n\n    pip install '.[xenon]'\n\nIf Java cannot be found (needed by Xenon), run\n\n.. code:: bash\n\n    export JAVA_HOME=\"/usr/lib/jvm/default-java\"  # or similar...\n\nin your shell initialization script (like `~/.bashrc`).\n\nTo enable the TinyDB based job database, run\n\n.. code:: bash\n\n    pip install '.[prov]'\n\nThis is needed if you want to interrupt a running workflow and resume where\nyou left of, or to reuse results over multiple runs.\n\nTo run unit tests, run\n\n.. code:: bash\n\n    pip install '.[test]'\n    tox\n\nSome tests depend on the optional modules being installed. Those are skipped if\nif imports fail. If you want to test everything, make sure you have NumPy\ninstalled as well.\n\nDocumentation\n-------------\n\nAll the latest documentation is available on `Read the Docs <https://noodles.rtfd.io/>`_.\n\n.. |travis| image:: https://travis-ci.org/NLeSC/noodles.svg?branch=master\n  :target: https://travis-ci.org/NLeSC/noodles\n  :alt: Travis\n.. |zenodo| image:: https://zenodo.org/badge/45391130.svg\n  :target: https://zenodo.org/badge/latestdoi/45391130\n  :alt: DOI\n.. |codecov| image:: https://codecov.io/gh/NLeSC/noodles/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/NLeSC/noodles\n.. |rtfd| image:: https://readthedocs.org/projects/noodles/badge/?version=latest\n  :target: https://noodles.readthedocs.io/en/latest/?badge=latest\n  :alt: Documentation Status\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/NLeSC/noodles", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "Noodles", "package_url": "https://pypi.org/project/Noodles/", "platform": "", "project_url": "https://pypi.org/project/Noodles/", "project_urls": {"Homepage": "https://github.com/NLeSC/noodles"}, "release_url": "https://pypi.org/project/Noodles/0.3.3/", "requires_dist": ["graphviz", "ujson", "pytest ; extra == 'develop'", "coverage ; extra == 'develop'", "pep8 ; extra == 'develop'", "numpy ; extra == 'develop'", "tox ; extra == 'develop'", "sphinx ; extra == 'develop'", "sphinx-rtd-theme ; extra == 'develop'", "nbsphinx ; extra == 'develop'", "flake8 ; extra == 'develop'", "numpy ; extra == 'numpy'", "h5py ; extra == 'numpy'", "filelock ; extra == 'numpy'", "pyxenon ; extra == 'xenon'"], "requires_python": "", "summary": "Workflow Engine", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>|rtfd| |travis| |zenodo| |codecov|</p>\n<h1>Noodles - easy parallel programming for Python</h1>\n<p>Often, a computer program can be sped up by executing parts of its code <em>in\nparallel</em> (simultaneously), as opposed to <em>synchronously</em> (one part after\nanother).</p>\n<p>A simple example may be where you assign two variables, as follows <code>a = 2 * i</code>\nand <code>b = 3 * i</code>. Either statement is only dependent on <code>i</code>, but whether you\nassign <code>a</code> before <code>b</code> or vice versa, does not matter for how your program\nworks. Whenever this is the case, there is potential to speed up a program,\nbecause the assignment of <code>a</code> and <code>b</code> could be done in parallel, using\nmultiple cores on your computer's CPU. Obviously, for simple assignments like\n<code>a = 2 * i</code>, there is not much time to be gained, but what if <code>a</code> is the\nresult of a time-consuming function, e.g. <code>a = very_difficult_function(i)</code>?\nAnd what if your program makes many calls to that function, e.g. <code>list_of_a = [very_difficult_function(i) for i in list_of_i]</code>? The potential speed-up could\nbe tremendous.</p>\n<p>So, parallel execution of computer programs is great for improving performance,\nbut how do you tell the computer which parts should be executed in parallel, and\nwhich parts should be executed synchronously? How do you identify the order in\nwhich to execute each part, since the optimal order may be different from the\norder in which the parts appear in your program. These questions quickly become\nnearly impossible to answer as your program grows and changes during\ndevelopment. Because of this, many developers accept the slow execution of their\nprogram only because it saves them from the headaches associated with keeping\ntrack of which parts of their program depend on which other parts.</p>\n<p>Enter Noodles.</p>\n<p>Noodles is a Python package that can automatically construct a <em>callgraph</em>\nfor a given Python program, listing exactly which parts depend on which parts.\nMoreover, Noodles can subsequently use the callgraph to execute code in parallel\non your local machine using multiple cores. If you so choose, you can even\nconfigure Noodles such that it will execute the code remotely, for example on a\nbig compute node in a cluster computer.</p>\n<h2>Installation</h2>\n<p>Install the latest version from PyPI:</p>\n<p>.. code:: bash</p>\n<pre><code>pip install noodles\n</code></pre>\n<p>Or, if you clone this repository,</p>\n<p>.. code:: bash</p>\n<pre><code>git clone git@github.com:NLeSC/noodles.git\ncd noodles\npip install .\n</code></pre>\n<p>To enable Xenon for remote execution, Java must be installed, and Xenon\ncan be installed with</p>\n<p>.. code:: bash</p>\n<pre><code>pip install '.[xenon]'\n</code></pre>\n<p>If Java cannot be found (needed by Xenon), run</p>\n<p>.. code:: bash</p>\n<pre><code>export JAVA_HOME=\"/usr/lib/jvm/default-java\"  # or similar...\n</code></pre>\n<p>in your shell initialization script (like <code>~/.bashrc</code>).</p>\n<p>To enable the TinyDB based job database, run</p>\n<p>.. code:: bash</p>\n<pre><code>pip install '.[prov]'\n</code></pre>\n<p>This is needed if you want to interrupt a running workflow and resume where\nyou left of, or to reuse results over multiple runs.</p>\n<p>To run unit tests, run</p>\n<p>.. code:: bash</p>\n<pre><code>pip install '.[test]'\ntox\n</code></pre>\n<p>Some tests depend on the optional modules being installed. Those are skipped if\nif imports fail. If you want to test everything, make sure you have NumPy\ninstalled as well.</p>\n<h2>Documentation</h2>\n<p>All the latest documentation is available on <code>Read the Docs &lt;https://noodles.rtfd.io/&gt;</code>_.</p>\n<p>.. |travis| image:: <a href=\"https://travis-ci.org/NLeSC/noodles.svg?branch=master\" rel=\"nofollow\">https://travis-ci.org/NLeSC/noodles.svg?branch=master</a>\n:target: <a href=\"https://travis-ci.org/NLeSC/noodles\" rel=\"nofollow\">https://travis-ci.org/NLeSC/noodles</a>\n:alt: Travis\n.. |zenodo| image:: <a href=\"https://zenodo.org/badge/45391130.svg\" rel=\"nofollow\">https://zenodo.org/badge/45391130.svg</a>\n:target: <a href=\"https://zenodo.org/badge/latestdoi/45391130\" rel=\"nofollow\">https://zenodo.org/badge/latestdoi/45391130</a>\n:alt: DOI\n.. |codecov| image:: <a href=\"https://codecov.io/gh/NLeSC/noodles/branch/master/graph/badge.svg\" rel=\"nofollow\">https://codecov.io/gh/NLeSC/noodles/branch/master/graph/badge.svg</a>\n:target: <a href=\"https://codecov.io/gh/NLeSC/noodles\" rel=\"nofollow\">https://codecov.io/gh/NLeSC/noodles</a>\n.. |rtfd| image:: <a href=\"https://readthedocs.org/projects/noodles/badge/?version=latest\" rel=\"nofollow\">https://readthedocs.org/projects/noodles/badge/?version=latest</a>\n:target: <a href=\"https://noodles.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\">https://noodles.readthedocs.io/en/latest/?badge=latest</a>\n:alt: Documentation Status</p>\n\n          </div>"}, "last_serial": 4967883, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "275c6c523d084897c347a64ac71ed645", "sha256": "90687c3d9115d11b1d0f0f87e997564420aa9c195ed50024734de541946cabba"}, "downloads": -1, "filename": "noodles-0.2.1-py3.5.egg", "has_sig": false, "md5_digest": "275c6c523d084897c347a64ac71ed645", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 169567, "upload_time": "2016-08-22T12:30:21", "upload_time_iso_8601": "2016-08-22T12:30:21.230801Z", "url": "https://files.pythonhosted.org/packages/a3/0a/86f5631d3b613a5aa0586a3e7bb9d194a9d11c00d7c44e4e810a9537898a/noodles-0.2.1-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6eaa301f7b6cc43b8590568c73a3364d", "sha256": "a5a7f76583c456114340a4093ff2947f8612e8e5483194671c306f7b47c8cc06"}, "downloads": -1, "filename": "noodles-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6eaa301f7b6cc43b8590568c73a3364d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 69546, "upload_time": "2016-08-22T12:46:37", "upload_time_iso_8601": "2016-08-22T12:46:37.090402Z", "url": "https://files.pythonhosted.org/packages/94/ca/63ce923cad48a512f40fc7c4e80a22c6e1113b707dee4516681fdd6f2f9a/noodles-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5997c9ab8b63787c2a5a3e7a8e1e2ff6", "sha256": "71f25d7e6129f5eaf5a85488f8cc5bfc9d0da8d0d06225f10466b8778a516fa5"}, "downloads": -1, "filename": "noodles-0.2.1.tar.gz", "has_sig": false, "md5_digest": "5997c9ab8b63787c2a5a3e7a8e1e2ff6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49593, "upload_time": "2016-08-22T12:49:20", "upload_time_iso_8601": "2016-08-22T12:49:20.137026Z", "url": "https://files.pythonhosted.org/packages/df/97/5ea2ae990cbe20137b161e4d87090ae61dfbe7c89a5f8b5f44c9a6b69a6f/noodles-0.2.1.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "dbc7693bbd942861ca2ab9a769f8cbac", "sha256": "a78d3ec420b52039091b5683f97c6c7dfe2525423eb09a26d9a2a57af4bba6dd"}, "downloads": -1, "filename": "Noodles-0.2.3.tar.gz", "has_sig": false, "md5_digest": "dbc7693bbd942861ca2ab9a769f8cbac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54144, "upload_time": "2016-12-16T09:53:13", "upload_time_iso_8601": "2016-12-16T09:53:13.020911Z", "url": "https://files.pythonhosted.org/packages/45/43/3d8ec8b1be1b3dfeafea405adf56a167d2d40d61d6c7a58f6dac8567bed9/Noodles-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "a25c6f7606eab7e3c8b4d2a6bc65ec8f", "sha256": "5b3e8c1aa98816ebb67b89e8cf7d71934db8aa14152d64306b1dffc16bd5fb3a"}, "downloads": -1, "filename": "Noodles-0.2.4.tar.gz", "has_sig": false, "md5_digest": "a25c6f7606eab7e3c8b4d2a6bc65ec8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55650, "upload_time": "2017-11-13T14:13:37", "upload_time_iso_8601": "2017-11-13T14:13:37.669179Z", "url": "https://files.pythonhosted.org/packages/21/66/dfb0a05c19177918e3c60f23739a24dc9ff477e79ec9e0d8d53fbdc50b68/Noodles-0.2.4.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "873bc1053cc760527f028f4e19997154", "sha256": "25e6e10922d5707354b18e2e019c1c5f1879dcdcbce77684132f6c3a5068f9a6"}, "downloads": -1, "filename": "Noodles-0.3.0.tar.gz", "has_sig": false, "md5_digest": "873bc1053cc760527f028f4e19997154", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60918, "upload_time": "2018-05-15T09:51:31", "upload_time_iso_8601": "2018-05-15T09:51:31.419330Z", "url": "https://files.pythonhosted.org/packages/57/79/dd6aa8551dbd7938d80e12d51f22870311ddac23440157705ae740578f93/Noodles-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "cb27052bde6b7722bc0c74f404d9effc", "sha256": "def709ff4b7e138970c99b0425f741e9b6c45840007f83714ab9da3f627eed40"}, "downloads": -1, "filename": "Noodles-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cb27052bde6b7722bc0c74f404d9effc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 82308, "upload_time": "2018-10-17T09:17:29", "upload_time_iso_8601": "2018-10-17T09:17:29.402132Z", "url": "https://files.pythonhosted.org/packages/7d/e7/74735d59a2df77b603ad43241172bb307a5d2aef2f0c62c713b4ceb3b3de/Noodles-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20e67ca3208f4a8c9067c1d5bbc6a200", "sha256": "c83742f374bfc70a8fe1397e9fc6c9dc7b8972e1a9b3a952e2d944c19060b166"}, "downloads": -1, "filename": "Noodles-0.3.1.tar.gz", "has_sig": false, "md5_digest": "20e67ca3208f4a8c9067c1d5bbc6a200", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62806, "upload_time": "2018-10-17T09:17:31", "upload_time_iso_8601": "2018-10-17T09:17:31.348499Z", "url": "https://files.pythonhosted.org/packages/57/53/0e1516a13c2df1eb5e790eb0390158cbff6236d2062b0b841b5da176624e/Noodles-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "aa8b8041a241e09e8c811c4c2f8cec1e", "sha256": "a79b29ee33de454dd058dd970454de8086db45de157bb3174b0c116609e222c5"}, "downloads": -1, "filename": "Noodles-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "aa8b8041a241e09e8c811c4c2f8cec1e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 86142, "upload_time": "2019-03-21T11:49:10", "upload_time_iso_8601": "2019-03-21T11:49:10.063602Z", "url": "https://files.pythonhosted.org/packages/b6/e9/f3731b1c98d8e41d403ac3826d86b85b69bf84984ea9848eb631a65fec7b/Noodles-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6041ab1498b6a904c78a5647f87312e", "sha256": "cbeef5127f75b8b8b05c8cf48a9d92874239b30dfdba70a6a5d088916e5f0e8f"}, "downloads": -1, "filename": "Noodles-0.3.2.tar.gz", "has_sig": false, "md5_digest": "e6041ab1498b6a904c78a5647f87312e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60490, "upload_time": "2019-03-21T11:49:11", "upload_time_iso_8601": "2019-03-21T11:49:11.761137Z", "url": "https://files.pythonhosted.org/packages/0a/90/60e29e1b24759b4aa5c5638ae176a1fc2e99219202618dd855ca3062cf34/Noodles-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "f356f78505aafbbeb9f0648ed57f3ce9", "sha256": "7fa2c6a3deb09bb45153d5536ace90dd36b75476fe618507de86929104181300"}, "downloads": -1, "filename": "Noodles-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f356f78505aafbbeb9f0648ed57f3ce9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 86151, "upload_time": "2019-03-21T12:13:43", "upload_time_iso_8601": "2019-03-21T12:13:43.486119Z", "url": "https://files.pythonhosted.org/packages/ac/f9/aa22d893d310f70f33d9624ddfe84985c38327b9bf704f3de77cc566130b/Noodles-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "beb84ebad40730622ccabb8f40b36681", "sha256": "b57979b08a44c61a962d2003b31313925ac974d39721c9ef3cd46526d18d25ef"}, "downloads": -1, "filename": "Noodles-0.3.3.tar.gz", "has_sig": false, "md5_digest": "beb84ebad40730622ccabb8f40b36681", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60509, "upload_time": "2019-03-21T12:13:45", "upload_time_iso_8601": "2019-03-21T12:13:45.127951Z", "url": "https://files.pythonhosted.org/packages/73/88/2d6797caa72c3d45f33ef59c7cee7f40f42c274680a798b2cbb63ba74353/Noodles-0.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f356f78505aafbbeb9f0648ed57f3ce9", "sha256": "7fa2c6a3deb09bb45153d5536ace90dd36b75476fe618507de86929104181300"}, "downloads": -1, "filename": "Noodles-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f356f78505aafbbeb9f0648ed57f3ce9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 86151, "upload_time": "2019-03-21T12:13:43", "upload_time_iso_8601": "2019-03-21T12:13:43.486119Z", "url": "https://files.pythonhosted.org/packages/ac/f9/aa22d893d310f70f33d9624ddfe84985c38327b9bf704f3de77cc566130b/Noodles-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "beb84ebad40730622ccabb8f40b36681", "sha256": "b57979b08a44c61a962d2003b31313925ac974d39721c9ef3cd46526d18d25ef"}, "downloads": -1, "filename": "Noodles-0.3.3.tar.gz", "has_sig": false, "md5_digest": "beb84ebad40730622ccabb8f40b36681", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60509, "upload_time": "2019-03-21T12:13:45", "upload_time_iso_8601": "2019-03-21T12:13:45.127951Z", "url": "https://files.pythonhosted.org/packages/73/88/2d6797caa72c3d45f33ef59c7cee7f40f42c274680a798b2cbb63ba74353/Noodles-0.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:51 2020"}