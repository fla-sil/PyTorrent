{"info": {"author": "nwmqpa", "author_email": "thomas.nicollet@epitech.eu", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# GraphCall\n\n### License\n\nThis project is licensed under the GNU GPLv3 License\n\n### Introduction\n\nBack when I first discovered GraphQL, I started using it for y data driven projects.\n\nBut I was in shock when I saw that no good java framework was able to make a decent request.\n\nI decided to make one then...\n\n### Use case\n\n\n```java\nimport com.nwmqpa.graphcall.requests.Query;\n\npublic class Main {\n    \n    public int main(String argv[]) {\n        Query query = new Query();\n        query.addNode(\"hero\")\n                .addNode(\"friends\")\n                .addEdge(\"friendsName\")\n                .buildNode()\n                .addEdge(\"name\");\n        System.out.println(query.compile);\n        \n        Request request = new Request(query.compile());\n        Result result = request.send(new URL(\"http://api.example.com/graphql/\"));\n        System.out.println(result.data);\n        return (0);\n    }\n}\n```\n\nResolves to ...\n\n```graphQL\nquery {\n  hero {\n    friends {\n      friendsName\n    }\n    name\n  }\n}\n\n{\"data\": {\n    \"hero\": [\n        {\n            \"friends\": [\n                {\n                    \"friendsName\": \"Leia\"\n                },\n                {\n                    \"firendsName\": \"Han\"\n                }\n            ],\n            \"name\": \"Luke\"\n        }\n     ]\n    }\n}\n```\n\n\n\n### TODO\n\n* Make mutation resolves correcty\n\n* Implement queries arguments.\n\n* Implements fragments and name queries.\n\n### Credits\n\nThomas Nicollet (@nwmqpa)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nwmqpa/GraphCall", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "graphcall", "package_url": "https://pypi.org/project/graphcall/", "platform": "", "project_url": "https://pypi.org/project/graphcall/", "project_urls": {"Homepage": "https://github.com/nwmqpa/GraphCall"}, "release_url": "https://pypi.org/project/graphcall/0.0.15/", "requires_dist": null, "requires_python": "", "summary": "A lightweight graphQL library", "version": "0.0.15", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>GraphCall</h1>\n<h3>License</h3>\n<p>This project is licensed under the GNU GPLv3 License</p>\n<h3>Introduction</h3>\n<p>Back when I first discovered GraphQL, I started using it for y data driven projects.</p>\n<p>But I was in shock when I saw that no good java framework was able to make a decent request.</p>\n<p>I decided to make one then...</p>\n<h3>Use case</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">com.nwmqpa.graphcall.requests.Query</span><span class=\"p\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Main</span> <span class=\"p\">{</span>\n    \n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">String</span> <span class=\"n\">argv</span><span class=\"o\">[]</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">Query</span> <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Query</span><span class=\"p\">();</span>\n        <span class=\"n\">query</span><span class=\"p\">.</span><span class=\"na\">addNode</span><span class=\"p\">(</span><span class=\"s\">\"hero\"</span><span class=\"p\">)</span>\n                <span class=\"p\">.</span><span class=\"na\">addNode</span><span class=\"p\">(</span><span class=\"s\">\"friends\"</span><span class=\"p\">)</span>\n                <span class=\"p\">.</span><span class=\"na\">addEdge</span><span class=\"p\">(</span><span class=\"s\">\"friendsName\"</span><span class=\"p\">)</span>\n                <span class=\"p\">.</span><span class=\"na\">buildNode</span><span class=\"p\">()</span>\n                <span class=\"p\">.</span><span class=\"na\">addEdge</span><span class=\"p\">(</span><span class=\"s\">\"name\"</span><span class=\"p\">);</span>\n        <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">out</span><span class=\"p\">.</span><span class=\"na\">println</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">.</span><span class=\"na\">compile</span><span class=\"p\">);</span>\n        \n        <span class=\"n\">Request</span> <span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">.</span><span class=\"na\">compile</span><span class=\"p\">());</span>\n        <span class=\"n\">Result</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"p\">.</span><span class=\"na\">send</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">URL</span><span class=\"p\">(</span><span class=\"s\">\"http://api.example.com/graphql/\"</span><span class=\"p\">));</span>\n        <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">out</span><span class=\"p\">.</span><span class=\"na\">println</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">.</span><span class=\"na\">data</span><span class=\"p\">);</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Resolves to ...</p>\n<pre>query {\n  hero {\n    friends {\n      friendsName\n    }\n    name\n  }\n}\n\n{\"data\": {\n    \"hero\": [\n        {\n            \"friends\": [\n                {\n                    \"friendsName\": \"Leia\"\n                },\n                {\n                    \"firendsName\": \"Han\"\n                }\n            ],\n            \"name\": \"Luke\"\n        }\n     ]\n    }\n}\n</pre>\n<h3>TODO</h3>\n<ul>\n<li>\n<p>Make mutation resolves correcty</p>\n</li>\n<li>\n<p>Implement queries arguments.</p>\n</li>\n<li>\n<p>Implements fragments and name queries.</p>\n</li>\n</ul>\n<h3>Credits</h3>\n<p>Thomas Nicollet (@nwmqpa)</p>\n\n          </div>"}, "last_serial": 4615919, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "c8d2327616634547ebc3bdd08e5bbc9b", "sha256": "aea47b8cad5655244f518c5c50a8add3ff1c50dcd3d85e28d5f5c94ff6efd215"}, "downloads": -1, "filename": "graphcall-0.0.10.tar.gz", "has_sig": false, "md5_digest": "c8d2327616634547ebc3bdd08e5bbc9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3191, "upload_time": "2018-09-07T20:53:48", "upload_time_iso_8601": "2018-09-07T20:53:48.510283Z", "url": "https://files.pythonhosted.org/packages/e4/9e/d90dc2b4122c2b9c3b5ee2b364d646254b68aa6b795d6c261478b4dad05b/graphcall-0.0.10.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "ca8e67263301c3678a91c2337f22a413", "sha256": "1683747870ed9714f8bd36726eb392bf778e0ba6c4e333bd0028c92de609e503"}, "downloads": -1, "filename": "graphcall-0.0.12.tar.gz", "has_sig": false, "md5_digest": "ca8e67263301c3678a91c2337f22a413", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3192, "upload_time": "2018-09-07T20:58:32", "upload_time_iso_8601": "2018-09-07T20:58:32.544858Z", "url": "https://files.pythonhosted.org/packages/d5/3b/eaf2ff6a32202fc6e7f9888cf53260cd5d67d6c588fe0f5df7891ca8c0e6/graphcall-0.0.12.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "14b86da8c9a08a7eea5a51c638239c07", "sha256": "621cf1447d52a37a654eafa12df38ae3e6138cdcbf274f884d6806f1b0672b40"}, "downloads": -1, "filename": "graphcall-0.0.14.tar.gz", "has_sig": false, "md5_digest": "14b86da8c9a08a7eea5a51c638239c07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3208, "upload_time": "2018-09-08T10:58:21", "upload_time_iso_8601": "2018-09-08T10:58:21.237713Z", "url": "https://files.pythonhosted.org/packages/1d/e2/3c8b149e003306bb8be58a2088be30142252222dce85bf18c0602fc5b07e/graphcall-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "f53159441564bfea42f17933835a9b99", "sha256": "f3d9a12ae4a9124345cfd96f1b56200c92183a541ae9d472e83edd4936a5721f"}, "downloads": -1, "filename": "graphcall-0.0.15.tar.gz", "has_sig": false, "md5_digest": "f53159441564bfea42f17933835a9b99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3227, "upload_time": "2018-12-19T09:59:14", "upload_time_iso_8601": "2018-12-19T09:59:14.187674Z", "url": "https://files.pythonhosted.org/packages/77/08/5daff82dc009d0912914753d190bb66c0f167f5c8ce1c216756e5c8966eb/graphcall-0.0.15.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "c9b137afe6d49f822869fa3abeea2343", "sha256": "2552c3e8bd2a042c2bf1d1846ac4123e947341e5631ed696a34f53122361f49b"}, "downloads": -1, "filename": "graphcall-0.0.6.tar.gz", "has_sig": false, "md5_digest": "c9b137afe6d49f822869fa3abeea2343", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3147, "upload_time": "2018-09-06T18:37:27", "upload_time_iso_8601": "2018-09-06T18:37:27.086930Z", "url": "https://files.pythonhosted.org/packages/bf/3a/436715889efa6df810218b16da736577c964090f65127ccc055c6a1aa62c/graphcall-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "812fcedd01ec2ff01c3359abf223d9b2", "sha256": "a699f5affc00a30343f43757f9e218a38a61290b5ebf90f9761bb4ff60e777a1"}, "downloads": -1, "filename": "graphcall-0.0.7.tar.gz", "has_sig": false, "md5_digest": "812fcedd01ec2ff01c3359abf223d9b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3161, "upload_time": "2018-09-06T20:51:12", "upload_time_iso_8601": "2018-09-06T20:51:12.255565Z", "url": "https://files.pythonhosted.org/packages/f9/88/f7d49dfa79a726e797f3ee167e471a77c9a07978932a484185f02038b2e7/graphcall-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "3002a9668dce2981b66f01d88c482ba0", "sha256": "ec8aa05bb07915ac78465797fe26400b84e361e4bdf5a4580035e7972a449036"}, "downloads": -1, "filename": "graphcall-0.0.8.tar.gz", "has_sig": false, "md5_digest": "3002a9668dce2981b66f01d88c482ba0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3149, "upload_time": "2018-09-06T22:30:41", "upload_time_iso_8601": "2018-09-06T22:30:41.593637Z", "url": "https://files.pythonhosted.org/packages/4b/b2/d9b6304cfc46dc848edd5203e93165811657d7383552f8e5ca01db42d3a3/graphcall-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "d5ffe038c34cb33de99ce4139b09c24e", "sha256": "6e20c9bb0dd31ef54f631f844ced135a6107d63d767a3e08a62e06ac9830e6f4"}, "downloads": -1, "filename": "graphcall-0.0.9.tar.gz", "has_sig": false, "md5_digest": "d5ffe038c34cb33de99ce4139b09c24e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3180, "upload_time": "2018-09-07T20:45:46", "upload_time_iso_8601": "2018-09-07T20:45:46.524593Z", "url": "https://files.pythonhosted.org/packages/d1/b3/4fdc9356a15efd8d5288dadf77bf7ad5281221956d2878d9189d3bfb529c/graphcall-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f53159441564bfea42f17933835a9b99", "sha256": "f3d9a12ae4a9124345cfd96f1b56200c92183a541ae9d472e83edd4936a5721f"}, "downloads": -1, "filename": "graphcall-0.0.15.tar.gz", "has_sig": false, "md5_digest": "f53159441564bfea42f17933835a9b99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3227, "upload_time": "2018-12-19T09:59:14", "upload_time_iso_8601": "2018-12-19T09:59:14.187674Z", "url": "https://files.pythonhosted.org/packages/77/08/5daff82dc009d0912914753d190bb66c0f167f5c8ce1c216756e5c8966eb/graphcall-0.0.15.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:48 2020"}