{"info": {"author": "Yann B\u00fcchau", "author_email": "nobodyinperson@gmx.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "co2logserver Python package\n===========================\n\n[![Build](https://gitlab.com/tue-umphy/co2mofetten/python3-co2logserver/badges/master/build.svg)](https://gitlab.com/tue-umphy/co2mofetten/python3-co2logserver/commits/master)\n[![Documentation](https://img.shields.io/badge/docs-sphinx-brightgreen.svg)](https://tue-umphy.gitlab.io/co2mofetten/python3-co2logserver/)\n[![Coverage](https://gitlab.com/tue-umphy/co2mofetten/python3-co2logserver/badges/master/coverage.svg)](https://tue-umphy.gitlab.io/co2mofetten/python3-co2logserver/coverage-report)\n[![PyPi](https://badge.fury.io/py/co2logserver.svg)](https://badge.fury.io/py/co2logserver)\n\nThis package provides a simple server for logging data.\n\nDocumentation\n-------------\n\nYou can find detailed documentation of this package [here on on\nGitlab](https://tue-umphy.gitlab.io/co2mofetten/python3-co2logserver/).\n\n### Local installation\n\nInstall this module from the repository root via `pip`:\n\n```bash\n# local user library under ~/.local\npip3 install --user .\n# also install msgpack support\npip3 install --user '.[msgpack]'\n# also install OpenSenseMap support\npip3 install --user '.[opensensemap]'\n```\n\n### Running\n\n#### Development\n\nTo run the server in development mode, run after the installation:\n\n```bash\npython3 -m co2logserver\n```\n\nYou might want to add the options `-v -t -d`.\n\n#### Production\n\nTo run the server in a production environment, use the `gunicorn`\nWSGI-server for example:\n\n```bash\npip3 install --user gunicon\n```\n\n```bash\ngunicorn co2logserver\n```\n\n#### Configuration\n\nYou can always specify the path to a configuration file via the\n`CO2LOGSERVER_CONFIG` environment variable. See the file\n`co2logserver/config_default.py` for default settings.\n\n#### Data Management\n\nTo upload data to the server, you may send `POST` requests to the\n`/upload` path:\n\n| Type                           | ``Content-Type``                      | data example                                               |\n|--------------------------------|---------------------------------------|------------------------------------------------------------|\n| JSON                           | ``application/json``                  | ``{\"time_utc\":[43,23],\"co2\":[1223,2351]}``                 |\n| CSV                            | ``text/csv``                          | ``time_utc,co2\\n43,1223\\n23,2351``                         |\n| FORM                           | ``application/x-www-form-urlencoded`` | ``time_utc=43&co2=1223&time_utc=23&co2=2351``              |\n| [MSGPACK](https://msgpack.org) | ``application/msgpack``               | ``82a874696d655f757463922b17a3636f3292cd04c7cd092f`` (HEX) |\n\n\nNew data columns are automatically added to the database. Every column\nname is converted to lowercase.\n\n#### Authentication\n\nIf you want to control who is allowed to upload data to the server, you\nmay use the PSK (pre-shared-key) salting mechanism built into the\nserver.\n\nSet `CO2LOGSERVER_UPLOAD_REQUIRES_AUTH=True` and specify one or more PSK salt\nstrings, e.g.  `CO2LOGSERVER_CHECKSUM_SALTS = [\"my-super-secret-psk\"]`.\n\nBy default, the server then only accepts requests including at least one header\nfield `Content-HASHALGORITHM-Salted` containing the hexadecimal hash of the\nsent payload with the salt appended calculated with HASHALGORITHM (e.g. MD5,\nSHA1, SHA256, etc...).\n\nFor example, if you want to upload the JSON data\n`{\"time_utc\":[43,23],\"co2\":[1223,2351]}` and your salt string is\n`my-super-secret-psk`, your header field `Content-MD5-Salted` would be\n`b71e91feb2be18ccca019914a1da5b1d` which is the MD5-sum of\n`{\"time_utc\":[43,23],\"co2\":[1223,2351]}my-super-secret-psk`.\n\nThis is a simple yet effective way of preventing spam uploads.\n\n> #### Security Note\n>\n> Note, however, that communication to the server is still unencrypted (only\n> HTTP, not HTTPS). The reason for this is that embedded devices like Arduinos\n> do not have the capabilities for encrypted web traffic. Thus, the sent data\n> including the checksums can theoretically be intercepted and reused to\n> *reupload the exact same dataset*.\n\n#### OpenSenseMap upload\n\nUsing the [sensemapi package](https://pypi.org/project/sensemapi/),\n`co2logserver` is able to redirect uploaded data to the\n[OpenSenseMap](https://opensensemap.org). For this to work, an OpenSenseMap\naccount is necessary whose login credentials are set in the `co2logserver`\nconfiguration. The default configuration takes the credentials from the\nenvironment variables `SENSEMAP_EMAIL`, `SENSEMAP_USERNAME` and\n`SENSEMAP_PASSWORD`. Also setting `CO2LOGSERVER_OSEM_UPLOAD` to `True` in the\nconfiguration enables uploaded data to also be redirected to the OpenSenseMap.\nThe `config_default.py` contains explanations for further customization\noptions.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/tue-umphy/co2mofetten/python3-co2logserver", "keywords": "measurement,logging", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "co2logserver", "package_url": "https://pypi.org/project/co2logserver/", "platform": "", "project_url": "https://pypi.org/project/co2logserver/", "project_urls": {"Homepage": "https://gitlab.com/tue-umphy/co2mofetten/python3-co2logserver"}, "release_url": "https://pypi.org/project/co2logserver/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "simple HTTP server for CO2 data logging", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>co2logserver Python package</h1>\n<p><a href=\"https://gitlab.com/tue-umphy/co2mofetten/python3-co2logserver/commits/master\" rel=\"nofollow\"><img alt=\"Build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dac8346062a6acfb2f77f627159120c48f2ac877/68747470733a2f2f6769746c61622e636f6d2f7475652d756d7068792f636f326d6f66657474656e2f707974686f6e332d636f326c6f677365727665722f6261646765732f6d61737465722f6275696c642e737667\"></a>\n<a href=\"https://tue-umphy.gitlab.io/co2mofetten/python3-co2logserver/\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/18d6347376a93a5245f79c4a4988efd764856645/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737068696e782d627269676874677265656e2e737667\"></a>\n<a href=\"https://tue-umphy.gitlab.io/co2mofetten/python3-co2logserver/coverage-report\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fcbd852a219dff0812a47bd06131993b90f711f7/68747470733a2f2f6769746c61622e636f6d2f7475652d756d7068792f636f326d6f66657474656e2f707974686f6e332d636f326c6f677365727665722f6261646765732f6d61737465722f636f7665726167652e737667\"></a>\n<a href=\"https://badge.fury.io/py/co2logserver\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cebc3b78707d393d0cc00f4e93c37df930d920dc/68747470733a2f2f62616467652e667572792e696f2f70792f636f326c6f677365727665722e737667\"></a></p>\n<p>This package provides a simple server for logging data.</p>\n<h2>Documentation</h2>\n<p>You can find detailed documentation of this package <a href=\"https://tue-umphy.gitlab.io/co2mofetten/python3-co2logserver/\" rel=\"nofollow\">here on on\nGitlab</a>.</p>\n<h3>Local installation</h3>\n<p>Install this module from the repository root via <code>pip</code>:</p>\n<pre><span class=\"c1\"># local user library under ~/.local</span>\npip3 install --user .\n<span class=\"c1\"># also install msgpack support</span>\npip3 install --user <span class=\"s1\">'.[msgpack]'</span>\n<span class=\"c1\"># also install OpenSenseMap support</span>\npip3 install --user <span class=\"s1\">'.[opensensemap]'</span>\n</pre>\n<h3>Running</h3>\n<h4>Development</h4>\n<p>To run the server in development mode, run after the installation:</p>\n<pre>python3 -m co2logserver\n</pre>\n<p>You might want to add the options <code>-v -t -d</code>.</p>\n<h4>Production</h4>\n<p>To run the server in a production environment, use the <code>gunicorn</code>\nWSGI-server for example:</p>\n<pre>pip3 install --user gunicon\n</pre>\n<pre>gunicorn co2logserver\n</pre>\n<h4>Configuration</h4>\n<p>You can always specify the path to a configuration file via the\n<code>CO2LOGSERVER_CONFIG</code> environment variable. See the file\n<code>co2logserver/config_default.py</code> for default settings.</p>\n<h4>Data Management</h4>\n<p>To upload data to the server, you may send <code>POST</code> requests to the\n<code>/upload</code> path:</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th><code>Content-Type</code></th>\n<th>data example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>JSON</td>\n<td><code>application/json</code></td>\n<td><code>{\"time_utc\":[43,23],\"co2\":[1223,2351]}</code></td>\n</tr>\n<tr>\n<td>CSV</td>\n<td><code>text/csv</code></td>\n<td><code>time_utc,co2\\n43,1223\\n23,2351</code></td>\n</tr>\n<tr>\n<td>FORM</td>\n<td><code>application/x-www-form-urlencoded</code></td>\n<td><code>time_utc=43&amp;co2=1223&amp;time_utc=23&amp;co2=2351</code></td>\n</tr>\n<tr>\n<td><a href=\"https://msgpack.org\" rel=\"nofollow\">MSGPACK</a></td>\n<td><code>application/msgpack</code></td>\n<td><code>82a874696d655f757463922b17a3636f3292cd04c7cd092f</code> (HEX)</td>\n</tr></tbody></table>\n<p>New data columns are automatically added to the database. Every column\nname is converted to lowercase.</p>\n<h4>Authentication</h4>\n<p>If you want to control who is allowed to upload data to the server, you\nmay use the PSK (pre-shared-key) salting mechanism built into the\nserver.</p>\n<p>Set <code>CO2LOGSERVER_UPLOAD_REQUIRES_AUTH=True</code> and specify one or more PSK salt\nstrings, e.g.  <code>CO2LOGSERVER_CHECKSUM_SALTS = [\"my-super-secret-psk\"]</code>.</p>\n<p>By default, the server then only accepts requests including at least one header\nfield <code>Content-HASHALGORITHM-Salted</code> containing the hexadecimal hash of the\nsent payload with the salt appended calculated with HASHALGORITHM (e.g. MD5,\nSHA1, SHA256, etc...).</p>\n<p>For example, if you want to upload the JSON data\n<code>{\"time_utc\":[43,23],\"co2\":[1223,2351]}</code> and your salt string is\n<code>my-super-secret-psk</code>, your header field <code>Content-MD5-Salted</code> would be\n<code>b71e91feb2be18ccca019914a1da5b1d</code> which is the MD5-sum of\n<code>{\"time_utc\":[43,23],\"co2\":[1223,2351]}my-super-secret-psk</code>.</p>\n<p>This is a simple yet effective way of preventing spam uploads.</p>\n<blockquote>\n<h4>Security Note</h4>\n<p>Note, however, that communication to the server is still unencrypted (only\nHTTP, not HTTPS). The reason for this is that embedded devices like Arduinos\ndo not have the capabilities for encrypted web traffic. Thus, the sent data\nincluding the checksums can theoretically be intercepted and reused to\n<em>reupload the exact same dataset</em>.</p>\n</blockquote>\n<h4>OpenSenseMap upload</h4>\n<p>Using the <a href=\"https://pypi.org/project/sensemapi/\" rel=\"nofollow\">sensemapi package</a>,\n<code>co2logserver</code> is able to redirect uploaded data to the\n<a href=\"https://opensensemap.org\" rel=\"nofollow\">OpenSenseMap</a>. For this to work, an OpenSenseMap\naccount is necessary whose login credentials are set in the <code>co2logserver</code>\nconfiguration. The default configuration takes the credentials from the\nenvironment variables <code>SENSEMAP_EMAIL</code>, <code>SENSEMAP_USERNAME</code> and\n<code>SENSEMAP_PASSWORD</code>. Also setting <code>CO2LOGSERVER_OSEM_UPLOAD</code> to <code>True</code> in the\nconfiguration enables uploaded data to also be redirected to the OpenSenseMap.\nThe <code>config_default.py</code> contains explanations for further customization\noptions.</p>\n\n          </div>"}, "last_serial": 4988675, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9286be04e2c5434152bae252f5a77a91", "sha256": "9e34451d1e0e4eaf995dd373f37c071492cf8e7dcd2b20afebc915a45296440c"}, "downloads": -1, "filename": "co2logserver-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9286be04e2c5434152bae252f5a77a91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24926, "upload_time": "2019-03-26T17:25:05", "upload_time_iso_8601": "2019-03-26T17:25:05.542822Z", "url": "https://files.pythonhosted.org/packages/82/8c/a582530830d0479effb28823c9018e4dc347ce1b72231ce3ad14a25d4fd5/co2logserver-0.0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7c3b7210dc58c7a1f3cca61b1d16c43f", "sha256": "7b2a83f6d43ce98952edd6361b3d0c23c43b3819e62c5c1b93c2bdc3e175b865"}, "downloads": -1, "filename": "co2logserver-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7c3b7210dc58c7a1f3cca61b1d16c43f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24975, "upload_time": "2019-03-26T17:34:41", "upload_time_iso_8601": "2019-03-26T17:34:41.657924Z", "url": "https://files.pythonhosted.org/packages/6d/32/ee0948e6d99ca8a96087565eacbd7660555f2523770bc891a31b6f4be943/co2logserver-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d39daa2715d027690283f657da5bd387", "sha256": "84b39df62febef4465c347ab5ff4683748d121e7fae62687abd86855e38aa420"}, "downloads": -1, "filename": "co2logserver-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d39daa2715d027690283f657da5bd387", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24996, "upload_time": "2019-03-26T17:38:33", "upload_time_iso_8601": "2019-03-26T17:38:33.402895Z", "url": "https://files.pythonhosted.org/packages/1e/9c/22f0380a2ac7ba05140c8f3949d26a469b2557cb7ba251f9e5d116f73e5b/co2logserver-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d39daa2715d027690283f657da5bd387", "sha256": "84b39df62febef4465c347ab5ff4683748d121e7fae62687abd86855e38aa420"}, "downloads": -1, "filename": "co2logserver-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d39daa2715d027690283f657da5bd387", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24996, "upload_time": "2019-03-26T17:38:33", "upload_time_iso_8601": "2019-03-26T17:38:33.402895Z", "url": "https://files.pythonhosted.org/packages/1e/9c/22f0380a2ac7ba05140c8f3949d26a469b2557cb7ba251f9e5d116f73e5b/co2logserver-0.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:26 2020"}