{"info": {"author": "Logan Page", "author_email": "page.lg@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: IPython", "License :: OSI Approved :: BSD License", "Programming Language :: Python"], "description": "Nbtutor\n=======\n\nVisualize Python code execution (line-by-line) in `Jupyter Notebook\n<http://jupyter.org>`__ cells. Inspired by `Online Python Tutor\n<http://pythontutor.com>`__.\n\n.. figure:: usage.gif\n   :alt:\n\n   Usage\n\nInstall\n-------\n\nNote: installing directly off this repo won't work, as we don't ship the built\nJavaScript and CSS assets. See more about `developing <#develop>`__ below.\n\n``pip``\n~~~~~~~\n\n.. code:: shell\n\n    pip install nbtutor\n    jupyter nbextension install --overwrite --py nbtutor\n    jupyter nbextension enable --py nbtutor\n\n``conda``\n~~~~~~~~~\n\n.. code:: shell\n\n    conda install -c conda-forge nbtutor\n\nUsage (Jupyter Notebook)\n------------------------\n\nFirst load the ``nbtutor`` IPython kernel extension at top of the Notebook by\nexecuting the following magic in a ``CodeCell``:\n\n.. code:: python\n\n    %load_ext nbtutor\n\nThen to visualize the execute of code in a ``CodeCell`` add the\nfollowing magic to the top of the ``CodeCell`` and execute it again:\n\n.. code:: python\n\n    %%nbtutor\n\n\nOptional arguments\n~~~~~~~~~~~~~~~~~~\n\nThere are also optional arguments that can be used with the cell magic:\n\n-  Reset the IPython user namespace\n\n   .. code:: python\n\n       %%nbtutor -r/--reset\n\n-  Suppress the confirmation message from ``-r/--reset``\n\n   .. code:: python\n\n       %%nbtutor -r/--reset -f/--force\n\n-  Render primitive objects inline\n\n   .. code:: python\n\n       %%nbtutor -i/--inline\n\n-  Specify the maximum frame depth to visualize (default: 1)\n\n   .. code:: python\n\n       %%nbtutor -d/--depth N\n\n-  Specify the number of significant digits for floats (default: 3)\n\n   .. code:: python\n\n       %%nbtutor --digits D\n\n-  Specify the maximum number of elements to visualize for \"sequence\"\n   type objects (default: 5)\n\n   .. code:: python\n\n       %%nbtutor --max_size S\n\n-  Step through all frames (including frames from other cells and other\n   global scopes altogether)\n\n   .. code:: python\n\n       %%nbtutor --step_all\n\n-  Expand ``numpy`` arrays to show underlying data\n\n   .. code:: python\n\n       %%nbtutor --expand_arrays\n\n-  No inlined keys, attributes, or primitive objects\n\n   .. code:: python\n\n       %%nbtutor --nolies\n\n\nNotes\n-----\n\n-  Visualizing ``numpy`` arrays is somewhat experimental. Simple\n   ``ndarray``\\ s and simple slicing should work, but anything beyond\n   that is un-tested.\n-  If you find a problem please feel free to submit an\n   `issue <https://github.com/lgpage/nbtutor/issues>`__\n\n\nDevelop\n-------\n\nThis assumes you have cloned this repository locally:\n\n.. code:: shell\n\n    git clone https://github.com/lgpage/nbtutor.git\n    cd nbtutor\n\n\nRepo architecture\n~~~~~~~~~~~~~~~~~\n\nThe ``nbtutor`` nbextension is built from ``./src`` into\n``./nbtutor/static/nbtutor`` with: - ``less`` for style - ``es6`` (via\n``babel``) for javascript - ``browserify`` for packaging\n\nThe ``nbtutor`` ipython kernel extension (magics) is stored in the\n``./nbtutor/ipython`` folder\n\nBuild tools are stored in the ``./tools`` folder.\n\n\nGetting started\n~~~~~~~~~~~~~~~\n\nYou'll need conda installed, either from\n`Anaconda <https://www.continuum.io/downloads>`__ or\n`miniconda <http://conda.pydata.org/miniconda.html>`__. You can create a\nPython development environment named ``nbtutor`` from\n``./environment.yml``.\n\n.. code:: shell\n\n    conda create -n nbtutor python=YOUR_FAVORITE_PYTHON\n    conda env update\n    source activate nbtutor\n\nWe use ``npm`` for ``node.js`` dependencies, so then run:\n\n.. code:: shell\n\n    npm install\n\nFinally, you are ready to build the assets with:\n\n.. code:: shell\n\n    npm run build\n\n\nInstalling the nbextension\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo ensure that you always get the right assets (for development),\ninstall the nbextension with the ``symlink`` options:\n\n.. code:: shell\n\n    python setup.py develop\n    jupyter nbextension install --overwrite --symlink --sys-prefix --py nbtutor\n    jupyter nbextension enable --sys-prefix --py nbtutor\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lgpage/nbtutor", "keywords": "ipython jupyter notebook python tutor visualize code exection", "license": "BSD 3-Clause", "maintainer": "", "maintainer_email": "", "name": "nbtutor", "package_url": "https://pypi.org/project/nbtutor/", "platform": "", "project_url": "https://pypi.org/project/nbtutor/", "project_urls": {"Homepage": "https://github.com/lgpage/nbtutor"}, "release_url": "https://pypi.org/project/nbtutor/1.0.4/", "requires_dist": null, "requires_python": "", "summary": "Visualize Python code execution in Jupyter Notebook cells", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Visualize Python code execution (line-by-line) in <a href=\"http://jupyter.org\" rel=\"nofollow\">Jupyter Notebook</a> cells. Inspired by <a href=\"http://pythontutor.com\" rel=\"nofollow\">Online Python Tutor</a>.</p>\n<div>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a94ccd0be65b1e7f4113b8982ec7105a23ae90c6/75736167652e676966\">\n<p>Usage</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Note: installing directly off this repo won\u2019t work, as we don\u2019t ship the built\nJavaScript and CSS assets. See more about <a href=\"#develop\" rel=\"nofollow\">developing</a> below.</p>\n<div id=\"pip\">\n<h3><tt>pip</tt></h3>\n<pre>pip install nbtutor\njupyter nbextension install --overwrite --py nbtutor\njupyter nbextension <span class=\"nb\">enable</span> --py nbtutor\n</pre>\n</div>\n<div id=\"conda\">\n<h3><tt>conda</tt></h3>\n<pre>conda install -c conda-forge nbtutor\n</pre>\n</div>\n</div>\n<div id=\"usage-jupyter-notebook\">\n<h2>Usage (Jupyter Notebook)</h2>\n<p>First load the <tt>nbtutor</tt> IPython kernel extension at top of the Notebook by\nexecuting the following magic in a <tt>CodeCell</tt>:</p>\n<pre><span class=\"o\">%</span><span class=\"n\">load_ext</span> <span class=\"n\">nbtutor</span>\n</pre>\n<p>Then to visualize the execute of code in a <tt>CodeCell</tt> add the\nfollowing magic to the top of the <tt>CodeCell</tt> and execute it again:</p>\n<pre><span class=\"o\">%%</span><span class=\"n\">nbtutor</span>\n</pre>\n<div id=\"optional-arguments\">\n<h3>Optional arguments</h3>\n<p>There are also optional arguments that can be used with the cell magic:</p>\n<ul>\n<li><p>Reset the IPython user namespace</p>\n<pre><span class=\"o\">%%</span><span class=\"n\">nbtutor</span> <span class=\"o\">-</span><span class=\"n\">r</span><span class=\"o\">/--</span><span class=\"n\">reset</span>\n</pre>\n</li>\n<li><p>Suppress the confirmation message from <tt><span class=\"pre\">-r/--reset</span></tt></p>\n<pre><span class=\"o\">%%</span><span class=\"n\">nbtutor</span> <span class=\"o\">-</span><span class=\"n\">r</span><span class=\"o\">/--</span><span class=\"n\">reset</span> <span class=\"o\">-</span><span class=\"n\">f</span><span class=\"o\">/--</span><span class=\"n\">force</span>\n</pre>\n</li>\n<li><p>Render primitive objects inline</p>\n<pre><span class=\"o\">%%</span><span class=\"n\">nbtutor</span> <span class=\"o\">-</span><span class=\"n\">i</span><span class=\"o\">/--</span><span class=\"n\">inline</span>\n</pre>\n</li>\n<li><p>Specify the maximum frame depth to visualize (default: 1)</p>\n<pre><span class=\"o\">%%</span><span class=\"n\">nbtutor</span> <span class=\"o\">-</span><span class=\"n\">d</span><span class=\"o\">/--</span><span class=\"n\">depth</span> <span class=\"n\">N</span>\n</pre>\n</li>\n<li><p>Specify the number of significant digits for floats (default: 3)</p>\n<pre><span class=\"o\">%%</span><span class=\"n\">nbtutor</span> <span class=\"o\">--</span><span class=\"n\">digits</span> <span class=\"n\">D</span>\n</pre>\n</li>\n<li><p>Specify the maximum number of elements to visualize for \u201csequence\u201d\ntype objects (default: 5)</p>\n<pre><span class=\"o\">%%</span><span class=\"n\">nbtutor</span> <span class=\"o\">--</span><span class=\"n\">max_size</span> <span class=\"n\">S</span>\n</pre>\n</li>\n<li><p>Step through all frames (including frames from other cells and other\nglobal scopes altogether)</p>\n<pre><span class=\"o\">%%</span><span class=\"n\">nbtutor</span> <span class=\"o\">--</span><span class=\"n\">step_all</span>\n</pre>\n</li>\n<li><p>Expand <tt>numpy</tt> arrays to show underlying data</p>\n<pre><span class=\"o\">%%</span><span class=\"n\">nbtutor</span> <span class=\"o\">--</span><span class=\"n\">expand_arrays</span>\n</pre>\n</li>\n<li><p>No inlined keys, attributes, or primitive objects</p>\n<pre><span class=\"o\">%%</span><span class=\"n\">nbtutor</span> <span class=\"o\">--</span><span class=\"n\">nolies</span>\n</pre>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<ul>\n<li>Visualizing <tt>numpy</tt> arrays is somewhat experimental. Simple\n<tt>ndarray</tt>s and simple slicing should work, but anything beyond\nthat is un-tested.</li>\n<li>If you find a problem please feel free to submit an\n<a href=\"https://github.com/lgpage/nbtutor/issues\" rel=\"nofollow\">issue</a></li>\n</ul>\n</div>\n<div id=\"develop\">\n<h2>Develop</h2>\n<p>This assumes you have cloned this repository locally:</p>\n<pre>git clone https://github.com/lgpage/nbtutor.git\n<span class=\"nb\">cd</span> nbtutor\n</pre>\n<div id=\"repo-architecture\">\n<h3>Repo architecture</h3>\n<p>The <tt>nbtutor</tt> nbextension is built from <tt>./src</tt> into\n<tt>./nbtutor/static/nbtutor</tt> with: - <tt>less</tt> for style - <tt>es6</tt> (via\n<tt>babel</tt>) for javascript - <tt>browserify</tt> for packaging</p>\n<p>The <tt>nbtutor</tt> ipython kernel extension (magics) is stored in the\n<tt>./nbtutor/ipython</tt> folder</p>\n<p>Build tools are stored in the <tt>./tools</tt> folder.</p>\n</div>\n<div id=\"getting-started\">\n<h3>Getting started</h3>\n<p>You\u2019ll need conda installed, either from\n<a href=\"https://www.continuum.io/downloads\" rel=\"nofollow\">Anaconda</a> or\n<a href=\"http://conda.pydata.org/miniconda.html\" rel=\"nofollow\">miniconda</a>. You can create a\nPython development environment named <tt>nbtutor</tt> from\n<tt>./environment.yml</tt>.</p>\n<pre>conda create -n nbtutor <span class=\"nv\">python</span><span class=\"o\">=</span>YOUR_FAVORITE_PYTHON\nconda env update\n<span class=\"nb\">source</span> activate nbtutor\n</pre>\n<p>We use <tt>npm</tt> for <tt>node.js</tt> dependencies, so then run:</p>\n<pre>npm install\n</pre>\n<p>Finally, you are ready to build the assets with:</p>\n<pre>npm run build\n</pre>\n</div>\n<div id=\"installing-the-nbextension\">\n<h3>Installing the nbextension</h3>\n<p>To ensure that you always get the right assets (for development),\ninstall the nbextension with the <tt>symlink</tt> options:</p>\n<pre>python setup.py develop\njupyter nbextension install --overwrite --symlink --sys-prefix --py nbtutor\njupyter nbextension <span class=\"nb\">enable</span> --sys-prefix --py nbtutor\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2536565, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "e4eef265097e3315a801a925cee33000", "sha256": "d367c7529fa5dced1e2f5cbeda25496f8784e03afd8dc2954c7097f22b0ad701"}, "downloads": -1, "filename": "nbtutor-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e4eef265097e3315a801a925cee33000", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 12881, "upload_time": "2016-12-10T20:40:13", "upload_time_iso_8601": "2016-12-10T20:40:13.910304Z", "url": "https://files.pythonhosted.org/packages/34/99/5ca2eb2b90c88d01f75f86f916517aaa86d70e66a47392c9082b374bba72/nbtutor-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6c58db44e5fd3948b23bde239629682", "sha256": "141c9dd4590cc1005e35f93e8976dabe4bb047b53563b124c1ce7c5948509ca7"}, "downloads": -1, "filename": "nbtutor-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d6c58db44e5fd3948b23bde239629682", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 543406, "upload_time": "2016-12-10T20:40:10", "upload_time_iso_8601": "2016-12-10T20:40:10.645463Z", "url": "https://files.pythonhosted.org/packages/1f/8e/3638b202e35be07cf26ea8bec0be7d2780bbe05ffe8edcc7068e1351207f/nbtutor-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "d2795b89469591fc4438804bc14b983c", "sha256": "8b70e3905fb0980aca12bc5199e70d297a6bf23b26daf385a3a538f585d8933c"}, "downloads": -1, "filename": "nbtutor-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d2795b89469591fc4438804bc14b983c", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 12851, "upload_time": "2016-12-10T20:43:57", "upload_time_iso_8601": "2016-12-10T20:43:57.782669Z", "url": "https://files.pythonhosted.org/packages/08/8a/5978f11a7a6dfb76bd7efea3bd65ec028d12910cd664321f64d83379ee70/nbtutor-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9ed752b6081bb49179e646544db8bc0", "sha256": "85f0ae5dd5b51190fa44f603f4b0e2a8cfa0d4e5377912a1496523a6e1c3a979"}, "downloads": -1, "filename": "nbtutor-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a9ed752b6081bb49179e646544db8bc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 543375, "upload_time": "2016-12-10T20:43:54", "upload_time_iso_8601": "2016-12-10T20:43:54.549306Z", "url": "https://files.pythonhosted.org/packages/88/8b/cea7bceb2b1d90861e0b14b61a8f3ee3e47b5e05354e3233493cee472c0c/nbtutor-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "4dcd4c35977c1400b4ebe3dda6d3e424", "sha256": "c5e35ddcbde63b700dfcbeafc96fe5fd17a7d30767d64dc257df61e5bfbb340a"}, "downloads": -1, "filename": "nbtutor-1.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4dcd4c35977c1400b4ebe3dda6d3e424", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 272138, "upload_time": "2016-12-10T21:03:31", "upload_time_iso_8601": "2016-12-10T21:03:31.583088Z", "url": "https://files.pythonhosted.org/packages/4e/73/8ae50ce3d0040dfe447cedbdfab5dd154b7f9fde6df4b365c86336d41c46/nbtutor-1.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd93413e6a3fb2a99329a347c5c54ab7", "sha256": "b40ec797d3c0579dc080cd4985bdc2198e39e98b8965b6b581d3407b19e9af21"}, "downloads": -1, "filename": "nbtutor-1.0.3.tar.gz", "has_sig": false, "md5_digest": "fd93413e6a3fb2a99329a347c5c54ab7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1585996, "upload_time": "2016-12-10T21:03:26", "upload_time_iso_8601": "2016-12-10T21:03:26.162642Z", "url": "https://files.pythonhosted.org/packages/8e/68/db9e7355f4ecb5c19b8823df767cb2b3625cd8bceabc9b93fe818d72acb3/nbtutor-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "49e4e65e8bb1566486cd9ec7252398ab", "sha256": "3103933a2cfdd5a103cf7c2ac61086d8fd4b7f070f9f935f90e708392d77f544"}, "downloads": -1, "filename": "nbtutor-1.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "49e4e65e8bb1566486cd9ec7252398ab", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 272170, "upload_time": "2016-12-23T13:07:38", "upload_time_iso_8601": "2016-12-23T13:07:38.631509Z", "url": "https://files.pythonhosted.org/packages/f3/5f/6f708ff28031faba4ebb15be60f8de10771267578484279f114e5483cfde/nbtutor-1.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdc3b607acf270b34865889bfa1f394b", "sha256": "9de0e76a0e756ffd54fb9c9215d030cc1bf57ac71a202cb2316942824828feba"}, "downloads": -1, "filename": "nbtutor-1.0.4.tar.gz", "has_sig": false, "md5_digest": "fdc3b607acf270b34865889bfa1f394b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1587292, "upload_time": "2016-12-23T13:07:30", "upload_time_iso_8601": "2016-12-23T13:07:30.762242Z", "url": "https://files.pythonhosted.org/packages/67/3c/fd3f2b554900ac0fad25d6fcb0fd8723edb7e508b5f653a5521eb501c51d/nbtutor-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "49e4e65e8bb1566486cd9ec7252398ab", "sha256": "3103933a2cfdd5a103cf7c2ac61086d8fd4b7f070f9f935f90e708392d77f544"}, "downloads": -1, "filename": "nbtutor-1.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "49e4e65e8bb1566486cd9ec7252398ab", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 272170, "upload_time": "2016-12-23T13:07:38", "upload_time_iso_8601": "2016-12-23T13:07:38.631509Z", "url": "https://files.pythonhosted.org/packages/f3/5f/6f708ff28031faba4ebb15be60f8de10771267578484279f114e5483cfde/nbtutor-1.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdc3b607acf270b34865889bfa1f394b", "sha256": "9de0e76a0e756ffd54fb9c9215d030cc1bf57ac71a202cb2316942824828feba"}, "downloads": -1, "filename": "nbtutor-1.0.4.tar.gz", "has_sig": false, "md5_digest": "fdc3b607acf270b34865889bfa1f394b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1587292, "upload_time": "2016-12-23T13:07:30", "upload_time_iso_8601": "2016-12-23T13:07:30.762242Z", "url": "https://files.pythonhosted.org/packages/67/3c/fd3f2b554900ac0fad25d6fcb0fd8723edb7e508b5f653a5521eb501c51d/nbtutor-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:51 2020"}