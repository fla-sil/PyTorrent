{"info": {"author": "Eric Davis", "author_email": "ed@npri.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License"], "description": "django-infinite-memcached\n=========================\n\nA Django memcached backend to handle \"infinite\" timeouts (i.e., never\nexpire an item).\n\nInstallation\n-------------\n\n1) ``$ pip install django-infinite-memcached``\n\n2) Set ``infinite_memcached.cache.MemcachedCache`` as your cache backend::\n\n    CACHES = {\n        \"default\": {\n            \"BACKEND\": \"infinite_memcached.cache.MemcachedCache\",\n            \"LOCATION\": \"127.0.0.1:11211\",\n        },\n    }\n\nHow to use\n----------\n\nEither set the ``TIMEOUT`` option to 0::\n\n    CACHES = {\n        \"default\": {\n            \"BACKEND\": \"infinite_memcached.cache.MemcachedCache\",\n            \"LOCATION\": \"127.0.0.1:11211\",\n            \"TIMEOUT\": 0,\n        },\n    }\n\nOr pass ``timeout=0`` to the `low-level cache commands\n<https://docs.djangoproject.com/en/1.4/topics/cache/#the-low-level-cache-api>`_\n(e.g., set, add, etc.) to keep things from expiring.\n\nWhy?\n----\n\nDjango's default memcached backend doesn't accept timeout values of\nzero, instead using the default timeout (five minutes) when zero is passed.\n\nThis cache backend overrides how timeouts are calculated so any\ntimeout of zero is passed directly to memcached, telling memcached to\nnever expire an item.\n\nThis has been an `known issue\n<https://code.djangoproject.com/ticket/9595>`_ for awhile, but\nconcerns over backwards compatibility have prevented any fixes from\ntaking place.\n\nLicense\n-------\n\nBSD. See LICENSE.txt.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/edavis/django-infinite-memcached/", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-infinite-memcached", "package_url": "https://pypi.org/project/django-infinite-memcached/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-infinite-memcached/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/edavis/django-infinite-memcached/"}, "release_url": "https://pypi.org/project/django-infinite-memcached/0.1/", "requires_dist": null, "requires_python": null, "summary": "A Django memcached backend to handle 'infinite' timeouts", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Django memcached backend to handle \u201cinfinite\u201d timeouts (i.e., never\nexpire an item).</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><p><tt>$ pip install <span class=\"pre\">django-infinite-memcached</span></tt></p>\n</li>\n<li><p>Set <tt>infinite_memcached.cache.MemcachedCache</tt> as your cache backend:</p>\n<pre>CACHES = {\n    \"default\": {\n        \"BACKEND\": \"infinite_memcached.cache.MemcachedCache\",\n        \"LOCATION\": \"127.0.0.1:11211\",\n    },\n}\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<p>Either set the <tt>TIMEOUT</tt> option to 0:</p>\n<pre>CACHES = {\n    \"default\": {\n        \"BACKEND\": \"infinite_memcached.cache.MemcachedCache\",\n        \"LOCATION\": \"127.0.0.1:11211\",\n        \"TIMEOUT\": 0,\n    },\n}\n</pre>\n<p>Or pass <tt>timeout=0</tt> to the <a href=\"https://docs.djangoproject.com/en/1.4/topics/cache/#the-low-level-cache-api\" rel=\"nofollow\">low-level cache commands</a>\n(e.g., set, add, etc.) to keep things from expiring.</p>\n</div>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>Django\u2019s default memcached backend doesn\u2019t accept timeout values of\nzero, instead using the default timeout (five minutes) when zero is passed.</p>\n<p>This cache backend overrides how timeouts are calculated so any\ntimeout of zero is passed directly to memcached, telling memcached to\nnever expire an item.</p>\n<p>This has been an <a href=\"https://code.djangoproject.com/ticket/9595\" rel=\"nofollow\">known issue</a> for awhile, but\nconcerns over backwards compatibility have prevented any fixes from\ntaking place.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>BSD. See LICENSE.txt.</p>\n</div>\n\n          </div>"}, "last_serial": 748589, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "bd0ddf4322ed743bfd4c42129935a10a", "sha256": "debdd1c611d3e0c1cdb806fde90e12b8c10b8183e5602da21a00a254ea557d7c"}, "downloads": -1, "filename": "django-infinite-memcached-0.1.tar.gz", "has_sig": false, "md5_digest": "bd0ddf4322ed743bfd4c42129935a10a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2283, "upload_time": "2012-11-12T19:51:42", "upload_time_iso_8601": "2012-11-12T19:51:42.968100Z", "url": "https://files.pythonhosted.org/packages/42/93/6dab288d659c62126018a001adb04aa67bca3f9c45ae07cd42258f2e73ab/django-infinite-memcached-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bd0ddf4322ed743bfd4c42129935a10a", "sha256": "debdd1c611d3e0c1cdb806fde90e12b8c10b8183e5602da21a00a254ea557d7c"}, "downloads": -1, "filename": "django-infinite-memcached-0.1.tar.gz", "has_sig": false, "md5_digest": "bd0ddf4322ed743bfd4c42129935a10a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2283, "upload_time": "2012-11-12T19:51:42", "upload_time_iso_8601": "2012-11-12T19:51:42.968100Z", "url": "https://files.pythonhosted.org/packages/42/93/6dab288d659c62126018a001adb04aa67bca3f9c45ae07cd42258f2e73ab/django-infinite-memcached-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:36 2020"}