{"info": {"author": "Graham Findlay", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering"], "description": "Graphiit\n~~~~~~~~\n\nUtilities for building `PyPhi <https://github.com/wmayner/pyphi>`_ networks\nthat need to be large and/or malleable.\n\n\nInstallation\n~~~~~~~~~~~~\n\nYou can install ``graphiit`` from `PyPi\n<https://pypi.python.org/pypi/graphiit>`_::\n\n    pip install graphiit\n\nOr the latest development version from `Github\n<https://github.com/grahamfindlay/graphiit>`_::\n\n    pip install git+https://github.com/grahamfindlay/graphiit@develop\n\n\nBasic Usage\n~~~~~~~~~~~\n\nAt the core of ``graphiit`` is the ``Graph`` object.\n\n    >>> from graphiit import Graph\n\n``Graph`` takes a graph configuration as a parameter:\n\n    >>> graph_config = [\n        ('A', 'OR', 'B', 'C'),\n        ('B', 'AND', 'A', 'C'),\n        ('C', 'XOR', 'A', 'B')]\n    >>> graph = Graph(graph_config)\n\nEach line in the configuration specifies the name of a node, the mechanism that\nthe node implements, and the nodes in the network which input to the node. For\nexample, in the above configuration the line ``('A', 'OR', 'B', 'C')`` specifies\nthat node ``A`` is an OR-gate over the inputs ``B`` and ``C``.\n\nOnce we've initialized a ``Graph`` object, we can create a PyPhi ``Network``:\n\n    >>> network = graph.pyphi_network()\n\nThat's it! You can now perform all IIT computations using this network.\n\n\nMechanisms\n~~~~~~~~~~\n\nWhile ``graphiit`` has a number of builtin mechanisms, you can easily specify\nyour own by defining a function which takes the states of the input nodes as a\nparameter and returns ``True`` if the mechanism should be on and ``False`` if\nit should be off.\n\n    >>> def ALWAYS_ON(inputs):\n    ...     return True\n\nYou can then use this function in the graph configuration:\n\n    >>> graph_config = [('A', ALWAYS_ON, 'A')]\n    >>> graph = Graph(graph_config)\n\nSee ``graphiit.micro_mechanisms`` for implementations of the basic mechanisms.\n\n\nOther Functionality\n~~~~~~~~~~~~~~~~~~~\n\nTODO\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/grahamfindlay/graphiit", "keywords": "", "license": "GNU General Public License v3.0", "maintainer": "", "maintainer_email": "", "name": "graphiit", "package_url": "https://pypi.org/project/graphiit/", "platform": "", "project_url": "https://pypi.org/project/graphiit/", "project_urls": {"Homepage": "http://github.com/grahamfindlay/graphiit"}, "release_url": "https://pypi.org/project/graphiit/0.1.0/", "requires_dist": ["numpy", "pyphi (>=1.0.0)", "networkx (<2.0.0)"], "requires_python": "", "summary": "Python library for building PyPhi network graphs", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"graphiit\">\n<h2>Graphiit</h2>\n<p>Utilities for building <a href=\"https://github.com/wmayner/pyphi\" rel=\"nofollow\">PyPhi</a> networks\nthat need to be large and/or malleable.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install <tt>graphiit</tt> from <a href=\"https://pypi.python.org/pypi/graphiit\" rel=\"nofollow\">PyPi</a>:</p>\n<pre>pip install graphiit\n</pre>\n<p>Or the latest development version from <a href=\"https://github.com/grahamfindlay/graphiit\" rel=\"nofollow\">Github</a>:</p>\n<pre>pip install git+https://github.com/grahamfindlay/graphiit@develop\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<p>At the core of <tt>graphiit</tt> is the <tt>Graph</tt> object.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from graphiit import Graph\n</pre>\n</blockquote>\n<p><tt>Graph</tt> takes a graph configuration as a parameter:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; graph_config = [\n    ('A', 'OR', 'B', 'C'),\n    ('B', 'AND', 'A', 'C'),\n    ('C', 'XOR', 'A', 'B')]\n&gt;&gt;&gt; graph = Graph(graph_config)\n</pre>\n</blockquote>\n<p>Each line in the configuration specifies the name of a node, the mechanism that\nthe node implements, and the nodes in the network which input to the node. For\nexample, in the above configuration the line <tt>('A', 'OR', 'B', 'C')</tt> specifies\nthat node <tt>A</tt> is an OR-gate over the inputs <tt>B</tt> and <tt>C</tt>.</p>\n<p>Once we\u2019ve initialized a <tt>Graph</tt> object, we can create a PyPhi <tt>Network</tt>:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; network = graph.pyphi_network()\n</pre>\n</blockquote>\n<p>That\u2019s it! You can now perform all IIT computations using this network.</p>\n</div>\n<div id=\"mechanisms\">\n<h2>Mechanisms</h2>\n<p>While <tt>graphiit</tt> has a number of builtin mechanisms, you can easily specify\nyour own by defining a function which takes the states of the input nodes as a\nparameter and returns <tt>True</tt> if the mechanism should be on and <tt>False</tt> if\nit should be off.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; def ALWAYS_ON(inputs):\n...     return True\n</pre>\n</blockquote>\n<p>You can then use this function in the graph configuration:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; graph_config = [('A', ALWAYS_ON, 'A')]\n&gt;&gt;&gt; graph = Graph(graph_config)\n</pre>\n</blockquote>\n<p>See <tt>graphiit.micro_mechanisms</tt> for implementations of the basic mechanisms.</p>\n</div>\n<div id=\"other-functionality\">\n<h2>Other Functionality</h2>\n<p>TODO</p>\n</div>\n\n          </div>"}, "last_serial": 4024490, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "aefe972f7886dcc0a81addaadd0090c4", "sha256": "e27f3c85a2ba44552bfda3240692adad4b0231b01ff674e2700d0fd8c53c649c"}, "downloads": -1, "filename": "graphiit-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "aefe972f7886dcc0a81addaadd0090c4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7083, "upload_time": "2016-04-25T18:55:12", "upload_time_iso_8601": "2016-04-25T18:55:12.051270Z", "url": "https://files.pythonhosted.org/packages/b0/bc/f3770f95055770538132732b0ce4743c748e2ec45c17871fe77f17e55f25/graphiit-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c8023ec67de6883913e6d19bb3fa5d0", "sha256": "5e53d3665e69a56a559092e4f10196c8e7c2e3895c2c298918a2ff7695174a43"}, "downloads": -1, "filename": "graphiit-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7c8023ec67de6883913e6d19bb3fa5d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6443, "upload_time": "2016-03-22T20:59:52", "upload_time_iso_8601": "2016-03-22T20:59:52.452137Z", "url": "https://files.pythonhosted.org/packages/aa/c2/9243d391b0ee6bd5a9cc399066cd32bc4b513b10197694965502005ece3d/graphiit-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d718f5e4aee029ca491a4b101408324f", "sha256": "4c0c31d77b3ad554ee8ffd83aa9cb5267264a90cb3ab4f39762aae68d4711698"}, "downloads": -1, "filename": "graphiit-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d718f5e4aee029ca491a4b101408324f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4585, "upload_time": "2016-03-22T20:59:58", "upload_time_iso_8601": "2016-03-22T20:59:58.759867Z", "url": "https://files.pythonhosted.org/packages/0d/b1/b7eea39fcf0a37c9784ff97db14edf14f49340a1a2c4f85ee8949b26ce5e/graphiit-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "663912c510fc7d13781ab6c5189bc4a2", "sha256": "01bbb42b720a311b77fd429bff9a5e76435b238ec613620fa7e29a66326dbf0f"}, "downloads": -1, "filename": "graphiit-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "663912c510fc7d13781ab6c5189bc4a2", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7081, "upload_time": "2016-04-25T18:56:55", "upload_time_iso_8601": "2016-04-25T18:56:55.979115Z", "url": "https://files.pythonhosted.org/packages/67/f1/4ffd8a18628e0e90a9fb2ce3bcf1800fe5e8b780f14249dd4c252b0b1639/graphiit-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16c13fcd308172b3631e7b8268ccd06c", "sha256": "2f8f7b57658fc2c476e7a6c6fdf2b42642f05de457c37968e71fdd4b39d10e80"}, "downloads": -1, "filename": "graphiit-0.0.2.tar.gz", "has_sig": false, "md5_digest": "16c13fcd308172b3631e7b8268ccd06c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5110, "upload_time": "2016-04-25T18:57:13", "upload_time_iso_8601": "2016-04-25T18:57:13.236810Z", "url": "https://files.pythonhosted.org/packages/11/36/c35e7cd120913776e9cf60702c3d04be6c4a2a0e2d746750f07e02c4b640/graphiit-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "65b23345c7d1649bdbcaf76bc8c3afcf", "sha256": "4fd237de6df6ddff7bc4481d8ebf73a8cbde5c413481d757a3f3f7c79890b490"}, "downloads": -1, "filename": "graphiit-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "65b23345c7d1649bdbcaf76bc8c3afcf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6765, "upload_time": "2018-07-02T23:41:01", "upload_time_iso_8601": "2018-07-02T23:41:01.018869Z", "url": "https://files.pythonhosted.org/packages/2c/2b/c40720c78c0d4710af179aedce39daad018a0a49fbcd411c440e0f46cc8c/graphiit-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "236922d29f89ffcd4b9bb1f60bfd26d4", "sha256": "e898f9d55591e39a48c2a5d04e0658fb4fe7747eeb9f50f33a9af41c08ad9e52"}, "downloads": -1, "filename": "graphiit-0.1.0.tar.gz", "has_sig": false, "md5_digest": "236922d29f89ffcd4b9bb1f60bfd26d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19306, "upload_time": "2018-07-02T23:41:02", "upload_time_iso_8601": "2018-07-02T23:41:02.750451Z", "url": "https://files.pythonhosted.org/packages/a6/c7/06488516df23f39694a8af8d82002e300fbbb6da9916930db659a8aa9258/graphiit-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "65b23345c7d1649bdbcaf76bc8c3afcf", "sha256": "4fd237de6df6ddff7bc4481d8ebf73a8cbde5c413481d757a3f3f7c79890b490"}, "downloads": -1, "filename": "graphiit-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "65b23345c7d1649bdbcaf76bc8c3afcf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6765, "upload_time": "2018-07-02T23:41:01", "upload_time_iso_8601": "2018-07-02T23:41:01.018869Z", "url": "https://files.pythonhosted.org/packages/2c/2b/c40720c78c0d4710af179aedce39daad018a0a49fbcd411c440e0f46cc8c/graphiit-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "236922d29f89ffcd4b9bb1f60bfd26d4", "sha256": "e898f9d55591e39a48c2a5d04e0658fb4fe7747eeb9f50f33a9af41c08ad9e52"}, "downloads": -1, "filename": "graphiit-0.1.0.tar.gz", "has_sig": false, "md5_digest": "236922d29f89ffcd4b9bb1f60bfd26d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19306, "upload_time": "2018-07-02T23:41:02", "upload_time_iso_8601": "2018-07-02T23:41:02.750451Z", "url": "https://files.pythonhosted.org/packages/a6/c7/06488516df23f39694a8af8d82002e300fbbb6da9916930db659a8aa9258/graphiit-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:40 2020"}