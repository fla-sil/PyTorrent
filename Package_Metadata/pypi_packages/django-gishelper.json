{"info": {"author": "Kirill Klenov", "author_email": "horneds@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "..   -*- mode: rst -*-\n\ndjango-gishelper\n#################\n\n**Gishelper** is python django application with useful commands for django.gis module.\n\n.. contents::\n\nRequirements\n-------------\n\n- python >= 2.5\n- pip >= 0.8\n\n\nInstallation\n------------\n\n**Gishelper** should be installed using pip: ::\n\n    pip install git+git://github.com/klen/django-gishelper.git\n\n\nSetup\n------\n\n- Add gishelper to INSTALLED_APPS ::\n\n  INSTALLED_APPS += ( 'gishelper', )\n\n- Add gishelper router to DATABASE_ROUTERS ::\n\n  DATABASE_ROUTERS = [ 'gishelper.router.GisRouter', ]\n\n- Add GISHELPER_GIS_APPS with your gis app labels to settings ::\n\n  GISHELPER_GIS_APPS =  ( 'my_gis_app', )\n\n\nUsage\n------\n\n- Inspect shape maps and show django gis model structure and mapping ::\n\n    ./manage.py inspectgeo -f FILEPATH -m MODEL_NAME -s SRID -u USE_DB_ALIAS\n\n- Load data in postgis (mapping and filter) command parse from app.models::\n\n    ./manage.py loadgeo APP_NAME -f FILEPATH -m MODEL -s SRID -u USE_DB_ALIAS\n\n'loadgeo' can filtrate source, define in models file dict '<lower_model_name>_filter' where keys OGR_NAME of features and condition. \n\nExample: ::\n\n    poi_filter = dict(AMENITY__in = ( city, town ))\n\n\nNote\n-----\n\nYou need to setup geodjango_ as described in geodjango documentation\n\n\n.. _geodjango: http://docs.djangoproject.com/en/dev/ref/contrib/gis/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/klen/django-gishelper.git", "keywords": null, "license": "GNU LGPL", "maintainer": null, "maintainer_email": null, "name": "django-gishelper", "package_url": "https://pypi.org/project/django-gishelper/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-gishelper/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/klen/django-gishelper.git"}, "release_url": "https://pypi.org/project/django-gishelper/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Geodjango helper commands.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            ..   -*- mode: rst -*-<br><br>django-gishelper<br>#################<br><br>**Gishelper** is python django application with useful commands for django.gis module.<br><br>.. contents::<br><br>Requirements<br>-------------<br><br>- python &gt;= 2.5<br>- pip &gt;= 0.8<br><br><br>Installation<br>------------<br><br>**Gishelper** should be installed using pip: ::<br><br>    pip install git+git://github.com/klen/django-gishelper.git<br><br><br>Setup<br>------<br><br>- Add gishelper to INSTALLED_APPS ::<br><br>  INSTALLED_APPS += ( 'gishelper', )<br><br>- Add gishelper router to DATABASE_ROUTERS ::<br><br>  DATABASE_ROUTERS = [ 'gishelper.router.GisRouter', ]<br><br>- Add GISHELPER_GIS_APPS with your gis app labels to settings ::<br><br>  GISHELPER_GIS_APPS =  ( 'my_gis_app', )<br><br><br>Usage<br>------<br><br>- Inspect shape maps and show django gis model structure and mapping ::<br><br>    ./manage.py inspectgeo -f FILEPATH -m MODEL_NAME -s SRID -u USE_DB_ALIAS<br><br>- Load data in postgis (mapping and filter) command parse from app.models::<br><br>    ./manage.py loadgeo APP_NAME -f FILEPATH -m MODEL -s SRID -u USE_DB_ALIAS<br><br>'loadgeo' can filtrate source, define in models file dict '&lt;lower_model_name&gt;_filter' where keys OGR_NAME of features and condition. <br><br>Example: ::<br><br>    poi_filter = dict(AMENITY__in = ( city, town ))<br><br><br>Note<br>-----<br><br>You need to setup geodjango_ as described in geodjango documentation<br><br><br>.. _geodjango: http://docs.djangoproject.com/en/dev/ref/contrib/gis/\n          </div>"}, "last_serial": 789751, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "b054493d950421407d133fea5e78fd8c", "sha256": "651a988b3cd37947af0c98fd7a6363bc79011d151efcbe0d8e2020202804afc0"}, "downloads": -1, "filename": "django-gishelper-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b054493d950421407d133fea5e78fd8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4089, "upload_time": "2011-08-10T14:11:05", "upload_time_iso_8601": "2011-08-10T14:11:05.919271Z", "url": "https://files.pythonhosted.org/packages/e6/d6/ffadb4085613681830597320cf7e57ee5e08d6411cfcd86a8e161deed8da/django-gishelper-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b054493d950421407d133fea5e78fd8c", "sha256": "651a988b3cd37947af0c98fd7a6363bc79011d151efcbe0d8e2020202804afc0"}, "downloads": -1, "filename": "django-gishelper-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b054493d950421407d133fea5e78fd8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4089, "upload_time": "2011-08-10T14:11:05", "upload_time_iso_8601": "2011-08-10T14:11:05.919271Z", "url": "https://files.pythonhosted.org/packages/e6/d6/ffadb4085613681830597320cf7e57ee5e08d6411cfcd86a8e161deed8da/django-gishelper-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:52 2020"}