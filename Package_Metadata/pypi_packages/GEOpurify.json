{"info": {"author": "Sasha Illarionov", "author_email": "sasha.delly@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "* GEOpurify\n/Atlas of tools making Gene Expression Omnibus data amicable to machine learning./\n\n** Installation\n\n#+BEGIN_SRC sh\npip install GEOpurify\n#+END_SRC\n\n** Example Usage\n\n#+BEGIN_SRC python :results output org drawer\nfrom GEOpurify import GEOpurifier\ng = GEOpurifier()\ngds_df = g.gdspurify(\"GDS4376\")\n#+END_SRC\n\n** Methods\n\n*** ~filepurify(filepath, separation=\"\\t\")~\n\nGiven a path to a standard table with GEO data, returns a dataframe\nwith gene expression and GSM ids in separate columns.\n\n*** ~dirpurify(dirname)~\n\nGiven a path to a directory with standard tables of data from GEO,\napplies ~filepurify~ and return a combined dataframe.\n\n*** ~gdspurify(gds_id, load_extra_features=False)~\n\nGiven a GDS id, extracts data on a platform, platform organism,\nplatform techonolgy type and sample organism used. If\n~load_extra_features~ is set to ~True~, extra features are fetched\nfrom the GDS columns.\n\nSaves already processed tables corresponding to the GDS in the\ndirectory ~data/tmp~, while storing the raw GEO data in the directory\n~data/raw~.\n\n*** ~gdspolypurify(self, gds_list_path, load_extra_features=False)~\n\nGiven a path to a file listing GDS ids, each on a new line, applies\n~gdspurify~ to each and combines all the data into one dataframe.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/biologos/GEOpurify/archive/0.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/biologos/GEOpurify", "keywords": "GEO,bioinformatics", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "GEOpurify", "package_url": "https://pypi.org/project/GEOpurify/", "platform": "", "project_url": "https://pypi.org/project/GEOpurify/", "project_urls": {"Download": "https://github.com/biologos/GEOpurify/archive/0.1.tar.gz", "Homepage": "https://github.com/biologos/GEOpurify"}, "release_url": "https://pypi.org/project/GEOpurify/0.1/", "requires_dist": ["GEOparse", "pandas"], "requires_python": "", "summary": "Making Gene Expression Omnibus data cleansing easy.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            * GEOpurify<br>/Atlas of tools making Gene Expression Omnibus data amicable to machine learning./<br><br>** Installation<br><br>#+BEGIN_SRC sh<br>pip install GEOpurify<br>#+END_SRC<br><br>** Example Usage<br><br>#+BEGIN_SRC python :results output org drawer<br>from GEOpurify import GEOpurifier<br>g = GEOpurifier()<br>gds_df = g.gdspurify(\"GDS4376\")<br>#+END_SRC<br><br>** Methods<br><br>*** ~filepurify(filepath, separation=\"\\t\")~<br><br>Given a path to a standard table with GEO data, returns a dataframe<br>with gene expression and GSM ids in separate columns.<br><br>*** ~dirpurify(dirname)~<br><br>Given a path to a directory with standard tables of data from GEO,<br>applies ~filepurify~ and return a combined dataframe.<br><br>*** ~gdspurify(gds_id, load_extra_features=False)~<br><br>Given a GDS id, extracts data on a platform, platform organism,<br>platform techonolgy type and sample organism used. If<br>~load_extra_features~ is set to ~True~, extra features are fetched<br>from the GDS columns.<br><br>Saves already processed tables corresponding to the GDS in the<br>directory ~data/tmp~, while storing the raw GEO data in the directory<br>~data/raw~.<br><br>*** ~gdspolypurify(self, gds_list_path, load_extra_features=False)~<br><br>Given a path to a file listing GDS ids, each on a new line, applies<br>~gdspurify~ to each and combines all the data into one dataframe.<br><br><br>\n          </div>"}, "last_serial": 3088041, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d04de71dcad7a67a6cb2068d82a0bc47", "sha256": "9149d60794effd4e423bbff5d48137b584bb599db9a9523839eb566f512ddd3a"}, "downloads": -1, "filename": "GEOpurify-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d04de71dcad7a67a6cb2068d82a0bc47", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5427, "upload_time": "2017-08-10T20:22:06", "upload_time_iso_8601": "2017-08-10T20:22:06.716852Z", "url": "https://files.pythonhosted.org/packages/51/e7/b0915646d147197e1f7baac2943b8c940a1af345296ddac65bb38b065df9/GEOpurify-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35eda47f1114f1cb3ba630af2a71b960", "sha256": "70a90a0bda6f55521bec3b174a663aec603436ea1201164887e68a49f3523d4e"}, "downloads": -1, "filename": "GEOpurify-0.1.tar.gz", "has_sig": false, "md5_digest": "35eda47f1114f1cb3ba630af2a71b960", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4326, "upload_time": "2017-08-10T20:22:09", "upload_time_iso_8601": "2017-08-10T20:22:09.379843Z", "url": "https://files.pythonhosted.org/packages/9b/ac/493ee1cf81fa3480b78c8319ec5180356447155133929c25282bd2287c79/GEOpurify-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d04de71dcad7a67a6cb2068d82a0bc47", "sha256": "9149d60794effd4e423bbff5d48137b584bb599db9a9523839eb566f512ddd3a"}, "downloads": -1, "filename": "GEOpurify-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d04de71dcad7a67a6cb2068d82a0bc47", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5427, "upload_time": "2017-08-10T20:22:06", "upload_time_iso_8601": "2017-08-10T20:22:06.716852Z", "url": "https://files.pythonhosted.org/packages/51/e7/b0915646d147197e1f7baac2943b8c940a1af345296ddac65bb38b065df9/GEOpurify-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35eda47f1114f1cb3ba630af2a71b960", "sha256": "70a90a0bda6f55521bec3b174a663aec603436ea1201164887e68a49f3523d4e"}, "downloads": -1, "filename": "GEOpurify-0.1.tar.gz", "has_sig": false, "md5_digest": "35eda47f1114f1cb3ba630af2a71b960", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4326, "upload_time": "2017-08-10T20:22:09", "upload_time_iso_8601": "2017-08-10T20:22:09.379843Z", "url": "https://files.pythonhosted.org/packages/9b/ac/493ee1cf81fa3480b78c8319ec5180356447155133929c25282bd2287c79/GEOpurify-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:58 2020"}