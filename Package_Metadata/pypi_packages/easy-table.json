{"info": {"author": "Jacob Rumbolt", "author_email": "rumboltjacob@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Easy Table\nEasy Table is a python module that provides an easy way to work with tables. It\nprovides functionality for creating, modifying and cleaning displaying them in a\nconsole.\n\n## Features\n- Automatically formatted table\n- Insert, delete and update data\n- Checkpoint data\n- Sort data\n\n## Install\n`pip install easy-table`\n\n## Usage\n\n```python\nfrom easy_table import EasyTable\n\n#Create the table and define the structure\ntable = EasyTable(\"My Table\")\ntable.setCorners(\"/\", \"\\\\\", \"\\\\\", \"/\")\ntable.setOuterStructure(\"|\", \"-\")\ntable.setInnerStructure(\"|\", \"-\", \"+\")\n\nprint(\"This is the table structure:\")\ntable.displayTableStructure()\nprint()\n\n#Set the data in the table\ntable.setData([\n    {\"id\": 1, \"name\": \"Tim\", \"age\": 33},\n    {\"id\": 2, \"name\": \"Bob\", \"age\": 28},\n    {\"id\": 3, \"name\": \"John\", \"age\": 41}\n  ])\n\n#Display the table\nprint(\"This is the table:\")\ntable.displayTable()\n```\n\nShows\n\n```\nThis is the table structure:\n----TABLE PROPERTIES----\nTable Corners: / \\ \\ /\nTable Outer: | -\nTable Inner: | - +\n\nThis is the table:\n/-----------\\\n|id|name|age|\n|--+----+---|\n|1 |Tim |33 |\n|--+----+---|\n|2 |Bob |28 |\n|--+----+---|\n|3 |John|41 |\n\\-----------/\n```\n\n## API\n#### *class* easy_table.EasyTable(table_name=\"\")\nCreates EasyTable object\n\nReturns `EasyTable` object\n\n|Parameter|Type|Default|Description|\n|---|---|---|---|\n|*table_name*|`str`|`\"\"`|Name of table|\n\n#### *classmethod* EasyTable.setTableName(table_name)\nSets the name of the table\n\n|Parameter|Type|Default|Description|\n|---|---|---|---|\n|*table_name*|`str`|`\"\"`|Name of table|\n\n#### *classmethod* EasyTable.setCorners(top_left, top_right, bottom_left, bottom_right)\nSets the strings used as the corners of the table\n\n|Parameter|Type|Default|Description|\n|---|---|---|---|\n|*top_left*|`str`|N/A|Top Left Corner|\n|*top_right*|`str`|N/A|Top Right Corner|\n|*bottom_left*|`str`|N/A|Bottom Left Corner|\n|*bottom_right*|`str`|N/A|Bottom Right Corner|\n\n#### *classmethod* EasyTable.setOuterStructure(vertical_outer, horizontal_outer)\nSet the strings used as the outer structure (border) of the table\n\n|Parameter|Type|Default|Description|\n|---|---|---|---|\n|*vertical_outer*|`str`|N/A|The border on the left and right of the table|\n|*horizontal_outer*|`str`|N/A|The border at the top and bottom of the table|\n\n#### *classmethod* EasyTable.setInnerStructure(vertical_inner, horizontal_inner, intersection_inner)\nSet the strings used as the inner structure (separating cells) of the table\n\n|Parameter|Type|Default|Description|\n|---|---|---|---|\n|*vertical_inner*|`str`|N/A|Separates columns|\n|*horizontal_inner*|`str`|N/A|Separates rows|\n|*intersection_inner*|`str`|N/A|Corners of a cell|\n\n#### *classmethod* EasyTable.displayTableStructure()\nDisplays the strings that make up the table structure\n\nExample:\n```\n----TABLE PROPERTIES----\nTable Corners: / \\ \\ /\nTable Outer: | -\nTable Inner: | - +\n```\n\n#### *classmethod* EasyTable.setData(data)\nSet the data in the table\n\n|Parameter|Type|Default|Description|\n|---|---|---|---|\n|*data*|`list`|N/A|Data for the table, either list of dicts or list of lists|\n\n#### *classmethod* EasyTable.setColumns(columns)\nManually set the columns the table has\n\n|Parameter|Type|Default|Description|\n|---|---|---|---|\n|*columns*|`list`|N/A|Column names for the table|\n\n#### *classmethod* EasyTable.addColumns(columns)\nAdd columns to the table\n\n|Parameter|Type|Default|Description|\n|---|---|---|---|\n|*columns*|`dict`|N/A|Column names and default values to be added to the table|\n\n#### *classmethod* EasyTable.removeColumns(columns)\nRemove columns from the table\n\n|Parameter|Type|Default|Description|\n|---|---|---|---|\n|*columns*|`list`|N/A|Column names to be removed from the table|\n\n#### *classmethod* EasyTable.displayTable()\nDisplays table with data and column names, with the table being formatted so the\ndata in the cells are all centered\n\nExample:\n```\n/-----------\\\n|id|name|age|\n|--+----+---|\n|1 |Tim |33 |\n|--+----+---|\n|2 |Bob |28 |\n|--+----+---|\n|3 |John|41 |\n\\-----------/\n```\n\n#### *classmethod* EasyTable.sortData(condition=None, reverse=False)\nSort the table data based off `condition`\n\n|Parameter|Type|Default|Description|\n|---|---|---|---|\n|*condition*|`function`|`None`|Function providing what to sort by|\n|*reverse*|`bool`|`False`|If the sorted data should be reversed|\n\n#### *classmethod* EasyTable.commitData()\nSet the current table data as the new backup point\n\n#### *classmethod* EasyTable.rollbackData()\nSet the data in the table equal to the data from the backup point\n\n#### *classmethod* EasyTable.insertData(new_data)\nAdd new rows of data to the table\n\n|Parameter|Type|Default|Description|\n|---|---|---|---|\n|*new_data*|`list` or `dict`|N/A|New rows to be added to the table|\n\n#### *classmethod* EasyTable.deleteData(condition=None)\nDelete rows of data from the table based off `condition`\n\n|Parameter|Type|Default|Description|\n|---|---|---|---|\n|*condition*|`function`|`None`|Function providing whether or not the row should be deleted|\n\n#### *classmethod* EasyTable.updateData(value, condition=None)\nUpdate rows of data withe `value` based off `condition`\n\n|Parameter|Type|Default|Description|\n|---|---|---|---|\n|*value*|`function`|N/A|Function providing the value the row should be updated to|\n|*condition*|`function`|`None`|Function providing whether or not the row should be updated|\n\n## License\nEasy-Table is licensed under the MIT License", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TheGuyFromCanada/Easy-Table", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "easy-table", "package_url": "https://pypi.org/project/easy-table/", "platform": "", "project_url": "https://pypi.org/project/easy-table/", "project_urls": {"Homepage": "https://github.com/TheGuyFromCanada/Easy-Table"}, "release_url": "https://pypi.org/project/easy-table/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "An easy to use python module for creating, editing, and displaying tables", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Easy Table</h1>\n<p>Easy Table is a python module that provides an easy way to work with tables. It\nprovides functionality for creating, modifying and cleaning displaying them in a\nconsole.</p>\n<h2>Features</h2>\n<ul>\n<li>Automatically formatted table</li>\n<li>Insert, delete and update data</li>\n<li>Checkpoint data</li>\n<li>Sort data</li>\n</ul>\n<h2>Install</h2>\n<p><code>pip install easy-table</code></p>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">easy_table</span> <span class=\"kn\">import</span> <span class=\"n\">EasyTable</span>\n\n<span class=\"c1\">#Create the table and define the structure</span>\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">EasyTable</span><span class=\"p\">(</span><span class=\"s2\">\"My Table\"</span><span class=\"p\">)</span>\n<span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">setCorners</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"s2\">\"</span><span class=\"se\">\\\\</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"s2\">\"</span><span class=\"se\">\\\\</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/\"</span><span class=\"p\">)</span>\n<span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">setOuterStructure</span><span class=\"p\">(</span><span class=\"s2\">\"|\"</span><span class=\"p\">,</span> <span class=\"s2\">\"-\"</span><span class=\"p\">)</span>\n<span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">setInnerStructure</span><span class=\"p\">(</span><span class=\"s2\">\"|\"</span><span class=\"p\">,</span> <span class=\"s2\">\"-\"</span><span class=\"p\">,</span> <span class=\"s2\">\"+\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"This is the table structure:\"</span><span class=\"p\">)</span>\n<span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">displayTableStructure</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#Set the data in the table</span>\n<span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">setData</span><span class=\"p\">([</span>\n    <span class=\"p\">{</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Tim\"</span><span class=\"p\">,</span> <span class=\"s2\">\"age\"</span><span class=\"p\">:</span> <span class=\"mi\">33</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Bob\"</span><span class=\"p\">,</span> <span class=\"s2\">\"age\"</span><span class=\"p\">:</span> <span class=\"mi\">28</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"John\"</span><span class=\"p\">,</span> <span class=\"s2\">\"age\"</span><span class=\"p\">:</span> <span class=\"mi\">41</span><span class=\"p\">}</span>\n  <span class=\"p\">])</span>\n\n<span class=\"c1\">#Display the table</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"This is the table:\"</span><span class=\"p\">)</span>\n<span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">displayTable</span><span class=\"p\">()</span>\n</pre>\n<p>Shows</p>\n<pre><code>This is the table structure:\n----TABLE PROPERTIES----\nTable Corners: / \\ \\ /\nTable Outer: | -\nTable Inner: | - +\n\nThis is the table:\n/-----------\\\n|id|name|age|\n|--+----+---|\n|1 |Tim |33 |\n|--+----+---|\n|2 |Bob |28 |\n|--+----+---|\n|3 |John|41 |\n\\-----------/\n</code></pre>\n<h2>API</h2>\n<h4><em>class</em> easy_table.EasyTable(table_name=\"\")</h4>\n<p>Creates EasyTable object</p>\n<p>Returns <code>EasyTable</code> object</p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>table_name</em></td>\n<td><code>str</code></td>\n<td><code>\"\"</code></td>\n<td>Name of table</td>\n</tr></tbody></table>\n<h4><em>classmethod</em> EasyTable.setTableName(table_name)</h4>\n<p>Sets the name of the table</p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>table_name</em></td>\n<td><code>str</code></td>\n<td><code>\"\"</code></td>\n<td>Name of table</td>\n</tr></tbody></table>\n<h4><em>classmethod</em> EasyTable.setCorners(top_left, top_right, bottom_left, bottom_right)</h4>\n<p>Sets the strings used as the corners of the table</p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>top_left</em></td>\n<td><code>str</code></td>\n<td>N/A</td>\n<td>Top Left Corner</td>\n</tr>\n<tr>\n<td><em>top_right</em></td>\n<td><code>str</code></td>\n<td>N/A</td>\n<td>Top Right Corner</td>\n</tr>\n<tr>\n<td><em>bottom_left</em></td>\n<td><code>str</code></td>\n<td>N/A</td>\n<td>Bottom Left Corner</td>\n</tr>\n<tr>\n<td><em>bottom_right</em></td>\n<td><code>str</code></td>\n<td>N/A</td>\n<td>Bottom Right Corner</td>\n</tr></tbody></table>\n<h4><em>classmethod</em> EasyTable.setOuterStructure(vertical_outer, horizontal_outer)</h4>\n<p>Set the strings used as the outer structure (border) of the table</p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>vertical_outer</em></td>\n<td><code>str</code></td>\n<td>N/A</td>\n<td>The border on the left and right of the table</td>\n</tr>\n<tr>\n<td><em>horizontal_outer</em></td>\n<td><code>str</code></td>\n<td>N/A</td>\n<td>The border at the top and bottom of the table</td>\n</tr></tbody></table>\n<h4><em>classmethod</em> EasyTable.setInnerStructure(vertical_inner, horizontal_inner, intersection_inner)</h4>\n<p>Set the strings used as the inner structure (separating cells) of the table</p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>vertical_inner</em></td>\n<td><code>str</code></td>\n<td>N/A</td>\n<td>Separates columns</td>\n</tr>\n<tr>\n<td><em>horizontal_inner</em></td>\n<td><code>str</code></td>\n<td>N/A</td>\n<td>Separates rows</td>\n</tr>\n<tr>\n<td><em>intersection_inner</em></td>\n<td><code>str</code></td>\n<td>N/A</td>\n<td>Corners of a cell</td>\n</tr></tbody></table>\n<h4><em>classmethod</em> EasyTable.displayTableStructure()</h4>\n<p>Displays the strings that make up the table structure</p>\n<p>Example:</p>\n<pre><code>----TABLE PROPERTIES----\nTable Corners: / \\ \\ /\nTable Outer: | -\nTable Inner: | - +\n</code></pre>\n<h4><em>classmethod</em> EasyTable.setData(data)</h4>\n<p>Set the data in the table</p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>data</em></td>\n<td><code>list</code></td>\n<td>N/A</td>\n<td>Data for the table, either list of dicts or list of lists</td>\n</tr></tbody></table>\n<h4><em>classmethod</em> EasyTable.setColumns(columns)</h4>\n<p>Manually set the columns the table has</p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>columns</em></td>\n<td><code>list</code></td>\n<td>N/A</td>\n<td>Column names for the table</td>\n</tr></tbody></table>\n<h4><em>classmethod</em> EasyTable.addColumns(columns)</h4>\n<p>Add columns to the table</p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>columns</em></td>\n<td><code>dict</code></td>\n<td>N/A</td>\n<td>Column names and default values to be added to the table</td>\n</tr></tbody></table>\n<h4><em>classmethod</em> EasyTable.removeColumns(columns)</h4>\n<p>Remove columns from the table</p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>columns</em></td>\n<td><code>list</code></td>\n<td>N/A</td>\n<td>Column names to be removed from the table</td>\n</tr></tbody></table>\n<h4><em>classmethod</em> EasyTable.displayTable()</h4>\n<p>Displays table with data and column names, with the table being formatted so the\ndata in the cells are all centered</p>\n<p>Example:</p>\n<pre><code>/-----------\\\n|id|name|age|\n|--+----+---|\n|1 |Tim |33 |\n|--+----+---|\n|2 |Bob |28 |\n|--+----+---|\n|3 |John|41 |\n\\-----------/\n</code></pre>\n<h4><em>classmethod</em> EasyTable.sortData(condition=None, reverse=False)</h4>\n<p>Sort the table data based off <code>condition</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>condition</em></td>\n<td><code>function</code></td>\n<td><code>None</code></td>\n<td>Function providing what to sort by</td>\n</tr>\n<tr>\n<td><em>reverse</em></td>\n<td><code>bool</code></td>\n<td><code>False</code></td>\n<td>If the sorted data should be reversed</td>\n</tr></tbody></table>\n<h4><em>classmethod</em> EasyTable.commitData()</h4>\n<p>Set the current table data as the new backup point</p>\n<h4><em>classmethod</em> EasyTable.rollbackData()</h4>\n<p>Set the data in the table equal to the data from the backup point</p>\n<h4><em>classmethod</em> EasyTable.insertData(new_data)</h4>\n<p>Add new rows of data to the table</p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>new_data</em></td>\n<td><code>list</code> or <code>dict</code></td>\n<td>N/A</td>\n<td>New rows to be added to the table</td>\n</tr></tbody></table>\n<h4><em>classmethod</em> EasyTable.deleteData(condition=None)</h4>\n<p>Delete rows of data from the table based off <code>condition</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>condition</em></td>\n<td><code>function</code></td>\n<td><code>None</code></td>\n<td>Function providing whether or not the row should be deleted</td>\n</tr></tbody></table>\n<h4><em>classmethod</em> EasyTable.updateData(value, condition=None)</h4>\n<p>Update rows of data withe <code>value</code> based off <code>condition</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>value</em></td>\n<td><code>function</code></td>\n<td>N/A</td>\n<td>Function providing the value the row should be updated to</td>\n</tr>\n<tr>\n<td><em>condition</em></td>\n<td><code>function</code></td>\n<td><code>None</code></td>\n<td>Function providing whether or not the row should be updated</td>\n</tr></tbody></table>\n<h2>License</h2>\n<p>Easy-Table is licensed under the MIT License</p>\n\n          </div>"}, "last_serial": 6345902, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4eee31c4da81d3039dec60cf9e3a89ac", "sha256": "bcad0ff027057fbd104a84282daa2bc2076a12724033c2045ebcde9f31cd6883"}, "downloads": -1, "filename": "easy_table-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4eee31c4da81d3039dec60cf9e3a89ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3488, "upload_time": "2019-11-24T04:38:38", "upload_time_iso_8601": "2019-11-24T04:38:38.046005Z", "url": "https://files.pythonhosted.org/packages/3c/ed/2bb256f4fb2430650239de919003e21e849f2cde77c3eceed35b93aa2375/easy_table-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "3ae0e1a5a61c917d684a187bfacef1bf", "sha256": "510ad0115d32fed0567609698359ec56964746545b8d587e0d703d5f4ccb61d6"}, "downloads": -1, "filename": "easy_table-0.0.2.tar.gz", "has_sig": false, "md5_digest": "3ae0e1a5a61c917d684a187bfacef1bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5386, "upload_time": "2019-11-24T23:59:56", "upload_time_iso_8601": "2019-11-24T23:59:56.399053Z", "url": "https://files.pythonhosted.org/packages/a5/62/63b651f1e20bc9a17053cbeb22f33cb29dc1dd9e0d40f72315e064c8e983/easy_table-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "819e274e5724bb0f5feeb2d577919a3e", "sha256": "bd7902b122e214bd249559f2328eec334e968661e6424419306209343ee9d7b8"}, "downloads": -1, "filename": "easy_table-0.0.3.tar.gz", "has_sig": false, "md5_digest": "819e274e5724bb0f5feeb2d577919a3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5448, "upload_time": "2019-11-27T06:46:13", "upload_time_iso_8601": "2019-11-27T06:46:13.082097Z", "url": "https://files.pythonhosted.org/packages/57/43/4cadeca168da899a5e313e83e62a7fb399fd25a9680675d8bc66855c7b9c/easy_table-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "aecc922e4f3655fb9701bd6c4df3d86e", "sha256": "8921a96752b9284f0aea13459a5795a6eb7bd4f0a3ec03abcb57b149f51e0669"}, "downloads": -1, "filename": "easy_table-0.0.4.tar.gz", "has_sig": false, "md5_digest": "aecc922e4f3655fb9701bd6c4df3d86e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5511, "upload_time": "2019-12-22T00:33:39", "upload_time_iso_8601": "2019-12-22T00:33:39.498517Z", "url": "https://files.pythonhosted.org/packages/b7/2b/1609bf36d1c8eb4a8b8735f769fae9448e0595475dc8d6985dcb5a097b0a/easy_table-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aecc922e4f3655fb9701bd6c4df3d86e", "sha256": "8921a96752b9284f0aea13459a5795a6eb7bd4f0a3ec03abcb57b149f51e0669"}, "downloads": -1, "filename": "easy_table-0.0.4.tar.gz", "has_sig": false, "md5_digest": "aecc922e4f3655fb9701bd6c4df3d86e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5511, "upload_time": "2019-12-22T00:33:39", "upload_time_iso_8601": "2019-12-22T00:33:39.498517Z", "url": "https://files.pythonhosted.org/packages/b7/2b/1609bf36d1c8eb4a8b8735f769fae9448e0595475dc8d6985dcb5a097b0a/easy_table-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:13 2020"}