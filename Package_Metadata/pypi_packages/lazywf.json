{"info": {"author": "Cl\u00e9ber Zavadniak", "author_email": "cleberman@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries"], "description": "#lazywf\n\nThe laziest web framework ever.\n\n[![CircleCI](https://circleci.com/gh/cleberzavadniak/lazywf/tree/master.svg?style=svg)](https://circleci.com/gh/cleberzavadniak/lazywf/tree/master)\n\n## Why I started this project\n\nI really enjoy working with **Django**. It's a very nice\nframework if you want to do some serious business without\nworrying too much about little details that won't help you\nat all to make your deliveries in time. It's opinionated\nand I think it's good. Except when I don't want to do\nanything \"serious\".\n\nReally, it's too difficult to get a Django project up and\nrunning. You have to deal with your \"settings.py\",\nconfigure where your templates are, enable static files\nserving, write your models upfront, create migrations,\nmigrate, write the views, then write the templates then\nrun the server and finally see nothing really happening\nbecause all you did was simply the skeleton of your\napplication and **now** you can start really making the\nthings happen as you wanted at first.\n\nWhat was that, again?\n\nMan, I don't have the patience to deal with so much only\nto put into life something very simple I want to play with.\n\n**I am too lazy!**\n\n## Django REST -ANYTHING- make everything even worse!\n\nAdd to all that the decision to have a REST API. Now I have\nto write serializers or specialized views, too.\n\n**Oh, no, God!, no!**\n\nI can't do that anymore. Really. Maybe when I was 20 years\nold, but not on my age...\n\n## Save your laziness on a DBMS\n\nSo, I decided to create a project using Bottle. But, where\nshould I save my data? Planning to run the app on Heroku, I\ncouldn't save things on the filesystem. So I found the\n\"dataset\" project and loved it. That was **exactly** what I\nneeded.\n\n## Models are still nice\n\nI like to design models. What I don't like is to write the\nmodels as code. Yes, you heard it. There should be a better\nway.\nSince \"dataset\" is very loose about data and I wanted some\nway of validating what was coming from the REST API, I\nfound it suitable to validate data using \"cerberus\". So I\nneeded some place to save the validation schemata, and\ndecided to use **YAML** for that, since JSON is too verbose\nand I am too lazy to comply with JSON strict rules (and\ntype all that innumerous '{' and '}' and ','...).\n\nAlso, model defining should be very simple. Your project\nmust have a \"models.yaml\" file on the root directory, from\nwhere models definition, some constraints and validation\nrules are going to be loaded.\n\nAnd that is it.\n\n## Example project using lazywf\n\nThere is an example project included on this repository.\nYou can copy it to use in your own project. It's as simple\nas it seems. ;-)", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cleberzavadniak/lazywf", "keywords": "lazy web framework simple microframework", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "lazywf", "package_url": "https://pypi.org/project/lazywf/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/lazywf/", "project_urls": {"Homepage": "https://github.com/cleberzavadniak/lazywf"}, "release_url": "https://pypi.org/project/lazywf/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "The laziest web framework ever", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>#lazywf</p>\n<p>The laziest web framework ever.</p>\n<p>[![CircleCI](<a href=\"https://circleci.com/gh/cleberzavadniak/lazywf/tree/master.svg?style=svg)%5D(https://circleci.com/gh/cleberzavadniak/lazywf/tree/master\" rel=\"nofollow\">https://circleci.com/gh/cleberzavadniak/lazywf/tree/master.svg?style=svg)](https://circleci.com/gh/cleberzavadniak/lazywf/tree/master</a>)</p>\n<p>## Why I started this project</p>\n<p>I really enjoy working with <strong>Django</strong>. It\u2019s a very nice\nframework if you want to do some serious business without\nworrying too much about little details that won\u2019t help you\nat all to make your deliveries in time. It\u2019s opinionated\nand I think it\u2019s good. Except when I don\u2019t want to do\nanything \u201cserious\u201d.</p>\n<p>Really, it\u2019s too difficult to get a Django project up and\nrunning. You have to deal with your \u201csettings.py\u201d,\nconfigure where your templates are, enable static files\nserving, write your models upfront, create migrations,\nmigrate, write the views, then write the templates then\nrun the server and finally see nothing really happening\nbecause all you did was simply the skeleton of your\napplication and <strong>now</strong> you can start really making the\nthings happen as you wanted at first.</p>\n<p>What was that, again?</p>\n<p>Man, I don\u2019t have the patience to deal with so much only\nto put into life something very simple I want to play with.</p>\n<p><strong>I am too lazy!</strong></p>\n<p>## Django REST -ANYTHING- make everything even worse!</p>\n<p>Add to all that the decision to have a REST API. Now I have\nto write serializers or specialized views, too.</p>\n<p><strong>Oh, no, God!, no!</strong></p>\n<p>I can\u2019t do that anymore. Really. Maybe when I was 20 years\nold, but not on my age\u2026</p>\n<p>## Save your laziness on a DBMS</p>\n<p>So, I decided to create a project using Bottle. But, where\nshould I save my data? Planning to run the app on Heroku, I\ncouldn\u2019t save things on the filesystem. So I found the\n\u201cdataset\u201d project and loved it. That was <strong>exactly</strong> what I\nneeded.</p>\n<p>## Models are still nice</p>\n<p>I like to design models. What I don\u2019t like is to write the\nmodels as code. Yes, you heard it. There should be a better\nway.\nSince \u201cdataset\u201d is very loose about data and I wanted some\nway of validating what was coming from the REST API, I\nfound it suitable to validate data using \u201ccerberus\u201d. So I\nneeded some place to save the validation schemata, and\ndecided to use <strong>YAML</strong> for that, since JSON is too verbose\nand I am too lazy to comply with JSON strict rules (and\ntype all that innumerous \u2018{\u2018 and \u2018}\u2019 and \u2018,\u2019\u2026).</p>\n<p>Also, model defining should be very simple. Your project\nmust have a \u201cmodels.yaml\u201d file on the root directory, from\nwhere models definition, some constraints and validation\nrules are going to be loaded.</p>\n<p>And that is it.</p>\n<p>## Example project using lazywf</p>\n<p>There is an example project included on this repository.\nYou can copy it to use in your own project. It\u2019s as simple\nas it seems. ;-)</p>\n\n          </div>"}, "last_serial": 2510796, "releases": {"0.1.0": []}, "urls": [], "timestamp": "Fri May  8 00:47:34 2020"}