{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# Intake-avro\n\n[![Build Status](https://travis-ci.org/ContinuumIO/intake-avro.svg?branch=master)](https://travis-ci.org/ContinuumIO/intake-avro)\n[![Documentation Status](https://readthedocs.org/projects/intake-avro/badge/?version=latest)](http://intake-avro.readthedocs.io/en/latest/?badge=latest)\n\nThe [Apache Avro](https://avro.apache.org/) format is a popular method for information\nexchange, particularly for message and reord distribution in high-throughput systems.\n\nIn [Intake](https://github.com/ContinuumIO/intake/), there are two plugins provided for reading avro data:\n\n- `avro_table` is appropriate for data which have a schema simple enough to be\n  represented as columns with simple types, i.e., *flat* schema. The output of\n  this plugin are dataframes, and the reading is optimized for speed.\n- `avro_sequence` is more generic and can handle all possible avro schema, but\n  it produces generic python sequences of dictionaries, and is consequently\n  much slower than the table reader.\n\n### Installation\n\nThe conda install instructions are:\n\n```\nconda install -c conda-forge fastavro uavro\nconda install -c intake intake_avro\n```\n\n### Examples\n\nSee the notebook in the examples/ directory.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ContinuumIO/intake-avro", "keywords": "", "license": "BSD", "maintainer": "Martin Durant", "maintainer_email": "martin.durant@utoronto.ca", "name": "intake-avro", "package_url": "https://pypi.org/project/intake-avro/", "platform": "", "project_url": "https://pypi.org/project/intake-avro/", "project_urls": {"Homepage": "https://github.com/ContinuumIO/intake-avro"}, "release_url": "https://pypi.org/project/intake-avro/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Intake avro plugin", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Intake-avro</p>\n<p>[![Build Status](<a href=\"https://travis-ci.org/ContinuumIO/intake-avro.svg?branch=master)%5D(https://travis-ci.org/ContinuumIO/intake-avro\" rel=\"nofollow\">https://travis-ci.org/ContinuumIO/intake-avro.svg?branch=master)](https://travis-ci.org/ContinuumIO/intake-avro</a>)\n[![Documentation Status](<a href=\"https://readthedocs.org/projects/intake-avro/badge/?version=latest)%5D(http://intake-avro.readthedocs.io/en/latest/\" rel=\"nofollow\">https://readthedocs.org/projects/intake-avro/badge/?version=latest)](http://intake-avro.readthedocs.io/en/latest/</a>?badge=latest)</p>\n<p>The [Apache Avro](<a href=\"https://avro.apache.org/\" rel=\"nofollow\">https://avro.apache.org/</a>) format is a popular method for information\nexchange, particularly for message and reord distribution in high-throughput systems.</p>\n<p>In [Intake](<a href=\"https://github.com/ContinuumIO/intake/\" rel=\"nofollow\">https://github.com/ContinuumIO/intake/</a>), there are two plugins provided for reading avro data:</p>\n<ul>\n<li><cite>avro_table</cite> is appropriate for data which have a schema simple enough to be\nrepresented as columns with simple types, i.e., <em>flat</em> schema. The output of\nthis plugin are dataframes, and the reading is optimized for speed.</li>\n<li><cite>avro_sequence</cite> is more generic and can handle all possible avro schema, but\nit produces generic python sequences of dictionaries, and is consequently\nmuch slower than the table reader.</li>\n</ul>\n<p>### Installation</p>\n<p>The conda install instructions are:</p>\n<p><tt>`\nconda install <span class=\"pre\">-c</span> <span class=\"pre\">conda-forge</span> fastavro uavro\nconda install <span class=\"pre\">-c</span> intake intake_avro\n`</tt></p>\n<p>### Examples</p>\n<p>See the notebook in the examples/ directory.</p>\n\n          </div>"}, "last_serial": 4783594, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "957f408147d3a1fc317271cbb80fa601", "sha256": "55c5945ce1b5be1bbf252c949dc5cadca596b06531bbd12a70061cb70c1e6df9"}, "downloads": -1, "filename": "intake-avro-0.2.0.tar.gz", "has_sig": false, "md5_digest": "957f408147d3a1fc317271cbb80fa601", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30467, "upload_time": "2018-12-03T16:20:19", "upload_time_iso_8601": "2018-12-03T16:20:19.322079Z", "url": "https://files.pythonhosted.org/packages/4b/4d/e99a67e467bdfa4f92b08064b16fe02f9bf77245df1ab09e6ce0fd307a74/intake-avro-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "e34dba4a7b3376feefc7b3fde53d2e91", "sha256": "741196488f0bc92b4d269a11f5d8fb502ff93d9eafde98d732ec7cd3a9e0daf3"}, "downloads": -1, "filename": "intake-avro-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e34dba4a7b3376feefc7b3fde53d2e91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30527, "upload_time": "2019-02-05T19:40:47", "upload_time_iso_8601": "2019-02-05T19:40:47.408315Z", "url": "https://files.pythonhosted.org/packages/40/08/51ffb2b233f3023303e5f90d79ee1453db70726e7e7da15ffe9232318c90/intake-avro-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e34dba4a7b3376feefc7b3fde53d2e91", "sha256": "741196488f0bc92b4d269a11f5d8fb502ff93d9eafde98d732ec7cd3a9e0daf3"}, "downloads": -1, "filename": "intake-avro-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e34dba4a7b3376feefc7b3fde53d2e91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30527, "upload_time": "2019-02-05T19:40:47", "upload_time_iso_8601": "2019-02-05T19:40:47.408315Z", "url": "https://files.pythonhosted.org/packages/40/08/51ffb2b233f3023303e5f90d79ee1453db70726e7e7da15ffe9232318c90/intake-avro-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:35 2020"}