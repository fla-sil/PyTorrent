{"info": {"author": "Amir Rachum", "author_email": "amir@rachum.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "`yieldfrom` is a backport of the `yield from` semantic from Python 3.x to \nPython 2.7. It also supports Python 3.x so it can be used as compatibility\nlibrary for code that supports both major versions of Python.\n\nIf you want to nest generators in Python 3.x, you can use the ``yield from``\nkeywords. This allows you to automatically iterate over sub-generators and\ntransparently pass exceptions and return values from the top level caller\nto the lowest generator.\n\n```.py\ndef subgen():\n    yield 2\n    yield 3\n\ndef gen():\n    yield 1\n    yield from subgen()  # Python 3.x only\n    yield 4\n\ndef main():\n    for i in gen():\n        print i,\n\n>>> main()\n... 1 2 3 4\n```\n\nThis functionality is not available in Python 2.x, and we emulate it using the\n`yieldfrom` decorator and the helper `From` class:\n\n```.py\nfrom yieldfrom import yieldfrom, From\ndef subgen():\n    yield 2\n    yield 3\n\n@yieldfrom\ndef gen():\n    yield 1\n    yield From(subgen())\n    yield 4\n\ndef main():\n    for i in gen():\n        print i,\n\n>>> main()\n... 1 2 3 4\n```\n\nAdvanced usage allows returning a value from the subgenerator using \n`StopIteration`. Using `Return` does this conveniently:\n\n```.py\nfrom yieldfrom import yieldfrom, From, Return\n\ndef subgen():\n    yield 2\n    yield 3\n    Return(100)  # Raises `StopIteration(100)`\n\n@yieldfrom\ndef gen():\n    yield 1\n    ret = (yield From(subgen()))\n    yield 4\n    yield ret\n\ndef main():\n    for i in gen():\n        print i,\n\n>>> main()\n... 1 2 3 4 100\n```\n\nSubgenerators can be nested on multiple levels, each one requiring additional\ndecoration by `yieldfrom`:\n\n```.py\ndef subsubgen():\n    yield 2\n\n@yieldfrom\ndef subgen():\n    yield From(subsubgen())\n    yield 3\n\n@yieldfrom\ndef gen():\n    yield 1\n    yield From(subgen())\n    yield 4\n\ndef main():\n    for i in gen():\n        print i,\n\n>>> main()\n... 1 2 3 4\n```\n\nExceptions thrown into the top-level generator can be handled in relevant\nsubgenerators:\n\n```.py\ndef subsubgen():\n    try:\n        yield 2\n    except ValueError:\n        yield 200\n\n@yieldfrom\ndef subgen():\n    yield From(subsubgen())\n    yield 3\n\n@yieldfrom\ndef gen():\n    yield 1\n    yield From(subgen())\n    yield 4\n\ndef main():\n    try:\n        g = gen()\n        while True:\n            i = g.next()\n            if i == 2:\n                i = g.throw(ValueError())\n        print i,\n    except StopIteration:\n        pass\n\n>>> main()\n... 1 200 3 4\n```\n\nNote that if you use `yield From()` on a simple iterable (`list`, \n`tuple`, etc) then the individual members of the iterator will be yielded on\neach iteration (perhaps in that case you need the usual `yield`).\n\n```.py\n@yieldfrom\ndef gen():\n    yield From([1, 2, 3])\n    yield [1, 2, 3]\n\ndef main():\n    for i in gen():\n        print i\n\n>>> main()\n... 1\n... 2\n... 3\n... [1, 2, 3]\n```\n\nPassing non-iterable objects to `From` will result in an empty\ngenerator that does nothing.\n\n```.py\n@yieldfrom\ndef gen():\n    yield From(None)\n    yield 1\n\ndef main():\n    for i in gen():\n        print i\n\n>>> main()\n... 1\n```\n\nThis module is an adaptation of the following Python recipe:\nhttp://code.activestate.com/recipes/576727  \nModifications include bug fixes in exception handling, naming, documentation,\nhandling of empty generators, etc.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Nurdok/yieldfrom/", "keywords": "yield,from,yield from,generators,backport,iterators", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "yieldfrom", "package_url": "https://pypi.org/project/yieldfrom/", "platform": "", "project_url": "https://pypi.org/project/yieldfrom/", "project_urls": {"Homepage": "https://github.com/Nurdok/yieldfrom/"}, "release_url": "https://pypi.org/project/yieldfrom/1.0.5/", "requires_dist": null, "requires_python": "", "summary": "A backport of the `yield from` semantic from Python 3.x to Python 2.7", "version": "1.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><code>yieldfrom</code> is a backport of the <code>yield from</code> semantic from Python 3.x to\nPython 2.7. It also supports Python 3.x so it can be used as compatibility\nlibrary for code that supports both major versions of Python.</p>\n<p>If you want to nest generators in Python 3.x, you can use the <code>yield from</code>\nkeywords. This allows you to automatically iterate over sub-generators and\ntransparently pass exceptions and return values from the top level caller\nto the lowest generator.</p>\n<pre>def subgen():\n    yield 2\n    yield 3\n\ndef gen():\n    yield 1\n    yield from subgen()  # Python 3.x only\n    yield 4\n\ndef main():\n    for i in gen():\n        print i,\n\n&gt;&gt;&gt; main()\n... 1 2 3 4\n</pre>\n<p>This functionality is not available in Python 2.x, and we emulate it using the\n<code>yieldfrom</code> decorator and the helper <code>From</code> class:</p>\n<pre>from yieldfrom import yieldfrom, From\ndef subgen():\n    yield 2\n    yield 3\n\n@yieldfrom\ndef gen():\n    yield 1\n    yield From(subgen())\n    yield 4\n\ndef main():\n    for i in gen():\n        print i,\n\n&gt;&gt;&gt; main()\n... 1 2 3 4\n</pre>\n<p>Advanced usage allows returning a value from the subgenerator using\n<code>StopIteration</code>. Using <code>Return</code> does this conveniently:</p>\n<pre>from yieldfrom import yieldfrom, From, Return\n\ndef subgen():\n    yield 2\n    yield 3\n    Return(100)  # Raises `StopIteration(100)`\n\n@yieldfrom\ndef gen():\n    yield 1\n    ret = (yield From(subgen()))\n    yield 4\n    yield ret\n\ndef main():\n    for i in gen():\n        print i,\n\n&gt;&gt;&gt; main()\n... 1 2 3 4 100\n</pre>\n<p>Subgenerators can be nested on multiple levels, each one requiring additional\ndecoration by <code>yieldfrom</code>:</p>\n<pre>def subsubgen():\n    yield 2\n\n@yieldfrom\ndef subgen():\n    yield From(subsubgen())\n    yield 3\n\n@yieldfrom\ndef gen():\n    yield 1\n    yield From(subgen())\n    yield 4\n\ndef main():\n    for i in gen():\n        print i,\n\n&gt;&gt;&gt; main()\n... 1 2 3 4\n</pre>\n<p>Exceptions thrown into the top-level generator can be handled in relevant\nsubgenerators:</p>\n<pre>def subsubgen():\n    try:\n        yield 2\n    except ValueError:\n        yield 200\n\n@yieldfrom\ndef subgen():\n    yield From(subsubgen())\n    yield 3\n\n@yieldfrom\ndef gen():\n    yield 1\n    yield From(subgen())\n    yield 4\n\ndef main():\n    try:\n        g = gen()\n        while True:\n            i = g.next()\n            if i == 2:\n                i = g.throw(ValueError())\n        print i,\n    except StopIteration:\n        pass\n\n&gt;&gt;&gt; main()\n... 1 200 3 4\n</pre>\n<p>Note that if you use <code>yield From()</code> on a simple iterable (<code>list</code>,\n<code>tuple</code>, etc) then the individual members of the iterator will be yielded on\neach iteration (perhaps in that case you need the usual <code>yield</code>).</p>\n<pre>@yieldfrom\ndef gen():\n    yield From([1, 2, 3])\n    yield [1, 2, 3]\n\ndef main():\n    for i in gen():\n        print i\n\n&gt;&gt;&gt; main()\n... 1\n... 2\n... 3\n... [1, 2, 3]\n</pre>\n<p>Passing non-iterable objects to <code>From</code> will result in an empty\ngenerator that does nothing.</p>\n<pre>@yieldfrom\ndef gen():\n    yield From(None)\n    yield 1\n\ndef main():\n    for i in gen():\n        print i\n\n&gt;&gt;&gt; main()\n... 1\n</pre>\n<p>This module is an adaptation of the following Python recipe:\n<a href=\"http://code.activestate.com/recipes/576727\" rel=\"nofollow\">http://code.activestate.com/recipes/576727</a><br>\nModifications include bug fixes in exception handling, naming, documentation,\nhandling of empty generators, etc.</p>\n\n          </div>"}, "last_serial": 6316132, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0158d67d9bca2ce8cf8dbac150b70c29", "sha256": "7ecd25c43b6c4c62998d106c93662dce3a5720ef854fc304f472860abd22bac9"}, "downloads": -1, "filename": "yieldfrom-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "0158d67d9bca2ce8cf8dbac150b70c29", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4831, "upload_time": "2017-05-01T09:24:46", "upload_time_iso_8601": "2017-05-01T09:24:46.926321Z", "url": "https://files.pythonhosted.org/packages/ba/81/975780af5226a6b4ff9d8453e155b7c62873b7c34f8627a4ae83a21f57cc/yieldfrom-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15cf2cbfab5385eee28e9c434f11b06e", "sha256": "ccacd050540693b214a521f79f456cc1502d1042b65d2c639d02c7bfcc9e8740"}, "downloads": -1, "filename": "yieldfrom-1.0.0.tar.gz", "has_sig": false, "md5_digest": "15cf2cbfab5385eee28e9c434f11b06e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3495, "upload_time": "2017-05-12T08:34:49", "upload_time_iso_8601": "2017-05-12T08:34:49.625383Z", "url": "https://files.pythonhosted.org/packages/87/2b/aa59a1017e5eab96fdd1e99e88353e8656d1e2b903bf78564371331ef246/yieldfrom-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "c081474e77e79aed3820cf97c59b5456", "sha256": "659a6e1b004feba2ab98c9b4f475b5108f5b2ab5fcc93fcb54ccecd4d05bf80b"}, "downloads": -1, "filename": "yieldfrom-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "c081474e77e79aed3820cf97c59b5456", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4881, "upload_time": "2017-07-10T19:48:48", "upload_time_iso_8601": "2017-07-10T19:48:48.164048Z", "url": "https://files.pythonhosted.org/packages/fe/27/fe1b79543720046733768e6ed9076672e50b182d711dd6b43ab95f0d9c45/yieldfrom-1.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2087fd4f1cbb29cb6fe175cd8453b9f0", "sha256": "2b476a7a778935eba415feffe93f16b81cf8e646fd2d7fc6cf50039bb4ea1f44"}, "downloads": -1, "filename": "yieldfrom-1.0.1.tar.gz", "has_sig": false, "md5_digest": "2087fd4f1cbb29cb6fe175cd8453b9f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3681, "upload_time": "2017-07-10T19:48:50", "upload_time_iso_8601": "2017-07-10T19:48:50.377012Z", "url": "https://files.pythonhosted.org/packages/da/33/431e2e79550a4b0a0810b4079835812bdbb4f0f08a5d61e1d68aa4b19eea/yieldfrom-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "00be2cbab9bc65cb7a46e69354d3c794", "sha256": "d30454790c70e6c099dbc729a2ff5812f149860d0c2b0093537df0b1cc29d125"}, "downloads": -1, "filename": "yieldfrom-1.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "00be2cbab9bc65cb7a46e69354d3c794", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6796, "upload_time": "2017-07-14T19:59:17", "upload_time_iso_8601": "2017-07-14T19:59:17.153520Z", "url": "https://files.pythonhosted.org/packages/18/55/cd81b9c079829f289c933244ab9bf2b377d230833c23ab371b8d96775cd5/yieldfrom-1.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cab50e40e0025c6ba9dd8e801ae2b1c", "sha256": "772e46e62d41fb045d22deeaf62fa071673e201ce0478f5477860b663153a03e"}, "downloads": -1, "filename": "yieldfrom-1.0.2.tar.gz", "has_sig": false, "md5_digest": "5cab50e40e0025c6ba9dd8e801ae2b1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4275, "upload_time": "2017-07-14T19:59:19", "upload_time_iso_8601": "2017-07-14T19:59:19.065360Z", "url": "https://files.pythonhosted.org/packages/15/2c/33c6222cc91254e644db3b4b446f03a34a5d47a1a0e17ff8360d2c4a5b5e/yieldfrom-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "a550a37ea37572d04ab4cef40f9c8b12", "sha256": "49b748d2145beb58fca205a6df766e6ae63ab1c36b714e81790bdf7d11b4643c"}, "downloads": -1, "filename": "yieldfrom-1.0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "a550a37ea37572d04ab4cef40f9c8b12", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6802, "upload_time": "2017-07-15T07:13:37", "upload_time_iso_8601": "2017-07-15T07:13:37.460992Z", "url": "https://files.pythonhosted.org/packages/43/72/ba8bf1417282992937f046a687e2d08f793aa8d3af413420509cd4313fc5/yieldfrom-1.0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a1c6fd152032d49ccd4ac250aad7746", "sha256": "388004d0ee8854c2ed7a2c87e664aad13acd70c9b33d7f3c441182d37357739b"}, "downloads": -1, "filename": "yieldfrom-1.0.3.tar.gz", "has_sig": false, "md5_digest": "1a1c6fd152032d49ccd4ac250aad7746", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4266, "upload_time": "2017-07-15T07:13:39", "upload_time_iso_8601": "2017-07-15T07:13:39.329809Z", "url": "https://files.pythonhosted.org/packages/de/2d/05524f368e691846824d962b64f983e3fde9b8c10839e7efbc1b51d42de3/yieldfrom-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "c94df2ec41cee7e89dc23f3549ec3026", "sha256": "ab62daf50776de62b7ea98f5264f372c1cb33ca8af1a244bd5c42405381edf8e"}, "downloads": -1, "filename": "yieldfrom-1.0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "c94df2ec41cee7e89dc23f3549ec3026", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6074, "upload_time": "2018-11-30T19:54:19", "upload_time_iso_8601": "2018-11-30T19:54:19.925178Z", "url": "https://files.pythonhosted.org/packages/a7/a9/68ac74ef7b1b8950a8aa40493f99b8756e69cbcbccdd020a523d532697c6/yieldfrom-1.0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98182ff0e861458e9e3dfaa0d47a47af", "sha256": "09c4e32402ec1c098e66ef5e25e036134f0e84f72ff5817641728707a168f5b3"}, "downloads": -1, "filename": "yieldfrom-1.0.4.tar.gz", "has_sig": false, "md5_digest": "98182ff0e861458e9e3dfaa0d47a47af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5023, "upload_time": "2018-12-05T14:07:52", "upload_time_iso_8601": "2018-12-05T14:07:52.307452Z", "url": "https://files.pythonhosted.org/packages/6e/d2/dc48e4cc6bbe48afd022da745f981cf0437ab7e658de9078bf56747b1d73/yieldfrom-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "6417508867a9a04ff9207c7c38dd0318", "sha256": "ab52d7b4128b795dd2d942fad0126fcf2d7dbd35cde2a340cdafb66273b0ee3a"}, "downloads": -1, "filename": "yieldfrom-1.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6417508867a9a04ff9207c7c38dd0318", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5885, "upload_time": "2019-12-17T09:05:12", "upload_time_iso_8601": "2019-12-17T09:05:12.638486Z", "url": "https://files.pythonhosted.org/packages/d6/e8/4bc727e1fefe1b1b8f5a3516df2f17621271e9a9700afecd86f5c311c613/yieldfrom-1.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd94120625ac1e69bb5946d5e63182da", "sha256": "eb75e58641410f06083f85013a438f28bceaabfe5af9c3206d5049362c37aca0"}, "downloads": -1, "filename": "yieldfrom-1.0.5.tar.gz", "has_sig": false, "md5_digest": "fd94120625ac1e69bb5946d5e63182da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5122, "upload_time": "2019-12-17T09:05:13", "upload_time_iso_8601": "2019-12-17T09:05:13.884685Z", "url": "https://files.pythonhosted.org/packages/4d/f9/395917f574ace618eb234bcbae8df3fabaa9624532d96d1fbd3a20678b1e/yieldfrom-1.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6417508867a9a04ff9207c7c38dd0318", "sha256": "ab52d7b4128b795dd2d942fad0126fcf2d7dbd35cde2a340cdafb66273b0ee3a"}, "downloads": -1, "filename": "yieldfrom-1.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6417508867a9a04ff9207c7c38dd0318", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5885, "upload_time": "2019-12-17T09:05:12", "upload_time_iso_8601": "2019-12-17T09:05:12.638486Z", "url": "https://files.pythonhosted.org/packages/d6/e8/4bc727e1fefe1b1b8f5a3516df2f17621271e9a9700afecd86f5c311c613/yieldfrom-1.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd94120625ac1e69bb5946d5e63182da", "sha256": "eb75e58641410f06083f85013a438f28bceaabfe5af9c3206d5049362c37aca0"}, "downloads": -1, "filename": "yieldfrom-1.0.5.tar.gz", "has_sig": false, "md5_digest": "fd94120625ac1e69bb5946d5e63182da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5122, "upload_time": "2019-12-17T09:05:13", "upload_time_iso_8601": "2019-12-17T09:05:13.884685Z", "url": "https://files.pythonhosted.org/packages/4d/f9/395917f574ace618eb234bcbae8df3fabaa9624532d96d1fbd3a20678b1e/yieldfrom-1.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:22:15 2020"}