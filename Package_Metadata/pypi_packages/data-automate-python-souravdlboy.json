{"info": {"author": "sourav kumar", "author_email": "sauravkumarsct@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Automate-Images + Videos-download\n\n# Introduction :   \nData collection is one of the important steps in Data analysis\u00c2\u00a0, Machine learning and Deep learning.\nIt is the process of gathering information of our interest, in our case it's the images of any type we want to gather.\nWithout data, we can't model our problem and do analysis of it.  \n\n# Objective :\n\u00f0\u0178\u2018\u2030 Automate the collection and building of images using Google API's for search and videos using Youtube API's.            \n\u00f0\u0178\u2018\u2030 Option to send mails to anyone containing collected datasets as attachment.       \n\n\n# Getting credentials for Google API and Youtube API:   \n\n> For [Google image API](https://github.com/souravs17031999/AUTOMATE-DATA-PIPELINE/blob/master/Google_API_images.md)\n> For [Youtube API]()\n\n# Getting Started Locally : \n\n* After getting the credentials , we can now run the script for automation.  \n* Firstly download all the files on your system using cmd (terminal) or git bash :     \n```git clone https://github.com/souravs17031999/AUTOMATE-DATA-PIPELINE```   \n\n## With Tkinter GUI :    \n### For IMAGES : \n* Move to the directory where script is downloaded.    \n* Now run the script in following way :  \n```python data_image_automation.py```          \nand arguments can be passed from interactive GUI.           \n\n### For VIDEOS :  \n* Move to the directory where script is downloaded.    \n* Now run the script in following way :  \n```python data_video_automation.py```          \nand arguments can be passed from interactive GUI.        \nNote : Two important args :         \n> Client secrets file path: Give absolute path.    \n> Chrome driver path : Give absolute path with .exe extension.   \n\n# Output :       \n> Some samples of images :\n![output](/images/output5.JPG)         \n![output](/images/output6.JPG)         \n![output](/images/output2.JPG)         \n![output](/images/output4.JPG)          \n![output](/images/output10.JPG)          \n\n\n### Limitations and Scope for future work:  \nThere are few limitations :   \n* Currently Google and Youtube allows 100 requests in one API call and so the script is able to download in total 100API's in one go but this behaviour can be changed from the script by calling it multiple times after tweaking some parameters which controls the after and before id's of returned images and videos and can be checked in their API documentation.        \n* [For Images] Considering big file sizes for sending as mails, i have resized , gray-scaled and then zipped the files and upload as attachment.    \nThis behaviour can be changed from the script by disabling some of the functions passing a optional parameter.      \n* [For videos] Considering big file sizes for sending as mails, i have compressed the file sizes and reduced the duration of videos.      \nThis behaviour can be easily manipulated in the script itself.     \n* Also, mail can be only sent for GMAIL users as of now, this can also be changed by manipulating the Ports of all email servers and controlling their behaviours in the script.   \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/souravs17031999/AUTOMATE-DATA-PIPELINE", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "data-automate-python-souravdlboy", "package_url": "https://pypi.org/project/data-automate-python-souravdlboy/", "platform": "", "project_url": "https://pypi.org/project/data-automate-python-souravdlboy/", "project_urls": {"Homepage": "https://github.com/souravs17031999/AUTOMATE-DATA-PIPELINE"}, "release_url": "https://pypi.org/project/data-automate-python-souravdlboy/0.1/", "requires_dist": null, "requires_python": ">=3.0", "summary": "Python package for Automating Data collection and building using Tkinter GUI", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Automate-Images + Videos-download</h1>\n<h1>Introduction :</h1>\n<p>Data collection is one of the important steps in Data analysis\u00c2\u00a0, Machine learning and Deep learning.\nIt is the process of gathering information of our interest, in our case it's the images of any type we want to gather.\nWithout data, we can't model our problem and do analysis of it.</p>\n<h1>Objective :</h1>\n<p>\u00f0\u0178\u2018\u2030 Automate the collection and building of images using Google API's for search and videos using Youtube API's.<br>\n\u00f0\u0178\u2018\u2030 Option to send mails to anyone containing collected datasets as attachment.</p>\n<h1>Getting credentials for Google API and Youtube API:</h1>\n<blockquote>\n<p>For <a href=\"https://github.com/souravs17031999/AUTOMATE-DATA-PIPELINE/blob/master/Google_API_images.md\" rel=\"nofollow\">Google image API</a>\nFor <a href=\"\" rel=\"nofollow\">Youtube API</a></p>\n</blockquote>\n<h1>Getting Started Locally :</h1>\n<ul>\n<li>After getting the credentials , we can now run the script for automation.</li>\n<li>Firstly download all the files on your system using cmd (terminal) or git bash :<br>\n<code>git clone https://github.com/souravs17031999/AUTOMATE-DATA-PIPELINE</code></li>\n</ul>\n<h2>With Tkinter GUI :</h2>\n<h3>For IMAGES :</h3>\n<ul>\n<li>Move to the directory where script is downloaded.</li>\n<li>Now run the script in following way :<br>\n<code>python data_image_automation.py</code><br>\nand arguments can be passed from interactive GUI.</li>\n</ul>\n<h3>For VIDEOS :</h3>\n<ul>\n<li>Move to the directory where script is downloaded.</li>\n<li>Now run the script in following way :<br>\n<code>python data_video_automation.py</code><br>\nand arguments can be passed from interactive GUI.<br>\nNote : Two important args :</li>\n</ul>\n<blockquote>\n<p>Client secrets file path: Give absolute path.<br>\nChrome driver path : Give absolute path with .exe extension.</p>\n</blockquote>\n<h1>Output :</h1>\n<blockquote>\n<p>Some samples of images :\n<img alt=\"output\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/11f24510d0e1215c5632d66ae480119e7d59f9ba/2f696d616765732f6f7574707574352e4a5047\"><br>\n<img alt=\"output\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/126b604e884b26ee83ef760205bbfe5e755ff403/2f696d616765732f6f7574707574362e4a5047\"><br>\n<img alt=\"output\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d4eba8fd5871791fb9c583bcc06b22bad7f432d/2f696d616765732f6f7574707574322e4a5047\"><br>\n<img alt=\"output\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7714ba34172b4c50a6541ea9f2e33f76721747fd/2f696d616765732f6f7574707574342e4a5047\"><br>\n<img alt=\"output\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/15fd2baac0e820e62e1e64f3121e1e75047b7e37/2f696d616765732f6f757470757431302e4a5047\"></p>\n</blockquote>\n<h3>Limitations and Scope for future work:</h3>\n<p>There are few limitations :</p>\n<ul>\n<li>Currently Google and Youtube allows 100 requests in one API call and so the script is able to download in total 100API's in one go but this behaviour can be changed from the script by calling it multiple times after tweaking some parameters which controls the after and before id's of returned images and videos and can be checked in their API documentation.</li>\n<li>[For Images] Considering big file sizes for sending as mails, i have resized , gray-scaled and then zipped the files and upload as attachment.<br>\nThis behaviour can be changed from the script by disabling some of the functions passing a optional parameter.</li>\n<li>[For videos] Considering big file sizes for sending as mails, i have compressed the file sizes and reduced the duration of videos.<br>\nThis behaviour can be easily manipulated in the script itself.</li>\n<li>Also, mail can be only sent for GMAIL users as of now, this can also be changed by manipulating the Ports of all email servers and controlling their behaviours in the script.</li>\n</ul>\n\n          </div>"}, "last_serial": 7145229, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f89a7300e5efb51bad388a4fe65eddef", "sha256": "bc4ebf86c0bca288ff2471d65d0e1aa909d21cd513aaa5ebe30887ad8e337af7"}, "downloads": -1, "filename": "data_automate_python_souravdlboy-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f89a7300e5efb51bad388a4fe65eddef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 15512, "upload_time": "2020-05-01T14:12:44", "upload_time_iso_8601": "2020-05-01T14:12:44.789512Z", "url": "https://files.pythonhosted.org/packages/78/24/83d8e41db76408b5f41ddf29541a07be7c4575bff5210a88ff75f10ea1e8/data_automate_python_souravdlboy-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3cf048fa529edf1567d699b171fa5eb", "sha256": "1da85688a3d5acc89cba0ea3daf8758e8546e4d4059b5d6de3355e754a3ed559"}, "downloads": -1, "filename": "data-automate-python-souravdlboy-0.1.tar.gz", "has_sig": false, "md5_digest": "c3cf048fa529edf1567d699b171fa5eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 12408, "upload_time": "2020-05-01T14:12:48", "upload_time_iso_8601": "2020-05-01T14:12:48.153665Z", "url": "https://files.pythonhosted.org/packages/f5/fa/714dd8190dbf9a604bb6a0d468a1690f3d5083536d99a1955081a70af614/data-automate-python-souravdlboy-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f89a7300e5efb51bad388a4fe65eddef", "sha256": "bc4ebf86c0bca288ff2471d65d0e1aa909d21cd513aaa5ebe30887ad8e337af7"}, "downloads": -1, "filename": "data_automate_python_souravdlboy-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f89a7300e5efb51bad388a4fe65eddef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 15512, "upload_time": "2020-05-01T14:12:44", "upload_time_iso_8601": "2020-05-01T14:12:44.789512Z", "url": "https://files.pythonhosted.org/packages/78/24/83d8e41db76408b5f41ddf29541a07be7c4575bff5210a88ff75f10ea1e8/data_automate_python_souravdlboy-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3cf048fa529edf1567d699b171fa5eb", "sha256": "1da85688a3d5acc89cba0ea3daf8758e8546e4d4059b5d6de3355e754a3ed559"}, "downloads": -1, "filename": "data-automate-python-souravdlboy-0.1.tar.gz", "has_sig": false, "md5_digest": "c3cf048fa529edf1567d699b171fa5eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 12408, "upload_time": "2020-05-01T14:12:48", "upload_time_iso_8601": "2020-05-01T14:12:48.153665Z", "url": "https://files.pythonhosted.org/packages/f5/fa/714dd8190dbf9a604bb6a0d468a1690f3d5083536d99a1955081a70af614/data-automate-python-souravdlboy-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:31 2020"}