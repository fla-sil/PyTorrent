{"info": {"author": "Ronald Angel", "author_email": "ronaldsmithangel@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Owl Data Sanitizer: A light Spark data validation framework\n\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000)](https://github.com/ronald-smith-angel/owl-data-sanitizer/blob/develop/license.md)\n[![Build Status](https://travis-ci.org/ronald-smith-angel/owl-data-sanitizer.svg?branch=develop)](https://travis-ci.org/github/ronald-smith-angel/owl-data-sanitizer)\n\nThis is a small framework for data quality validation. This first version works reading spark dataframes from local \ndatasources like local system, s3 or hive and delivers hive tables with quality reports.\n\nLet's follow this example:\n\nInput data from a hive table:\n\n```\n+----------+--------------+--------+---------+------------------+---------+\n|GENERAL_ID|          NAME|    CODE|ADDR_DESC|ULTIMATE_PARENT_ID|PARENT_ID|\n+----------+--------------+--------+---------+------------------+---------+\n|         1|Dummy 1 Entity|12000123|     null|              null|     null|\n|         2|          null|    null|     null|                 2|        2|\n|         3|          null|12000123|     null|                 3|        3|\n|         4|             1|       1|     null|                 4|        4|\n|         5|             1|12000123|     null|                 5|        5|\n|         6|          null|       3|     null|                 6|        6|\n|      null|          null|12000123|     null|                11|        7|\n|         7|             2|    null|     null|                 8|        8|\n+----------+--------------+--------+---------+------------------+---------+\n```\n\nfollowing this validation config with 4 sections:\n\n1. `source_table` including the table metadata.\n2. `correctness_validations` including correctness validations per column. \nthe rule must be a valid spark SQL expression.\n3. `parent_children_constraints` including children parent constrains. \nThis means that any parent id should be valid id.\n4. `compare_related_tables_list` including comparison with other tables or \nthe same table in other environments.\n\n```\n{\n  \"source_table\": {\n    \"name\": \"test.data_test\",\n    \"id_column\": \"GENERAL_ID\",\n    \"unique_column_group_values_per_table\": [\"GENERAL_ID\", \"ULTIMATE_PARENT_ID\"],\n    \"fuzzy_deduplication_distance\": 0,\n    \"output_correctness_table\": \"test.data_test_correctness\",\n    \"output_completeness_table\": \"test.data_test_completeness\",\n    \"output_comparison_table\": \"test.data_test_comparison\"\n  },\n  \"correctness_validations\": [\n    {\n      \"column\": \"CODE\",\n      \"rule\": \"CODE is not null and CODE != '' and CODE != 'null'\"\n    },\n    {\n      \"column\": \"NAME\",\n      \"rule\": \"NAME is not null and NAME != '' and NAME != 'null'\"\n    },\n    {\n      \"column\": \"GENERAL_ID\",\n      \"rule\": \"GENERAL_ID is not null and GENERAL_ID != '' and GENERAL_ID != 'null' and CHAR_LENGTH(GENERAL_ID) < 4\"\n    }\n  ],\n  \"completeness_validations\": [\n    {\n      \"column\": \"OVER_ALL_COUNT\",\n      \"rule\": \"OVER_ALL_COUNT <= 7\"\n    }\n  ],\n  \"parent_children_constraints\": [\n    {\n      \"column\": \"GENERAL_ID\",\n      \"parent\": \"ULTIMATE_PARENT_ID\"\n    },\n    {\n      \"column\": \"GENERAL_ID\",\n      \"parent\": \"PARENT_ID\"\n    }\n  ],\n  \"compare_related_tables_list\": [\"test.diff_df\", \"test.diff_df_2\"]\n}\n```\n\nTherefore, these results are delivered in two output hive tables:\n\na). Correctness Report.\n\n- You will see and output col per validation col showing either 1 when there is error or 0 when is clean.\n- Sum of error per columns.\n\n```\n+----------+-------------+-------------+-------------------+--------------------------------------+-----------------------------+-------------+--------------------------+-----------------+-----------------+-----------------------+------------------------------------------+---------------------------------+-----------------+\n|GENERAL_ID|IS_ERROR_CODE|IS_ERROR_NAME|IS_ERROR_GENERAL_ID|IS_ERROR_GENERAL_ID_ULTIMATE_PARENT_ID|IS_ERROR_GENERAL_ID_PARENT_ID|IS_ERROR__ROW|dt                        |IS_ERROR_CODE_SUM|IS_ERROR_NAME_SUM|IS_ERROR_GENERAL_ID_SUM|IS_ERROR_GENERAL_ID_ULTIMATE_PARENT_ID_SUM|IS_ERROR_GENERAL_ID_PARENT_ID_SUM|IS_ERROR__ROW_SUM|\n+----------+-------------+-------------+-------------------+--------------------------------------+-----------------------------+-------------+--------------------------+-----------------+-----------------+-----------------------+------------------------------------------+---------------------------------+-----------------+\n|null      |0            |1            |1                  |1                                     |0                            |1            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n|3         |0            |1            |0                  |0                                     |0                            |1            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n|7         |1            |0            |0                  |1                                     |1                            |1            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n|5         |0            |0            |0                  |0                                     |0                            |0            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n|6         |0            |1            |0                  |0                                     |0                            |1            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n|4         |0            |0            |0                  |0                                     |0                            |0            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n|2         |1            |1            |0                  |0                                     |0                            |1            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n|1         |0            |0            |0                  |0                                     |0                            |0            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n+----------+-------------+-------------+-------------------+--------------------------------------+-----------------------------+-------------+--------------------------+-----------------+-----------------+-----------------------+------------------------------------------+---------------------------------+-----------------+\n```\nb) Completeness Report.\n- The overall count of the dataframe.\n- Column checking if the overall count is complete, example: `IS_ERROR_OVER_ALL_COUNT`.\n```\n+--------------+-----------------------+--------------------------+\n|OVER_ALL_COUNT|IS_ERROR_OVER_ALL_COUNT|dt                        |\n+--------------+-----------------------+--------------------------+\n|8             |1                      |2020-04-17 09:39:04.783505|\n+--------------+-----------------------+--------------------------+\n```\n\nc). Comparison of schema and values with related dataframes. \n\nNOTE: the result includes for now only the ids that are different and a further \njoin with the source data to see differences is needed.\n\n```\n+--------------+----------------------------------+-----------------+------------------+-----------------+--------------------------+\n|df            |missing_cols_right                |missing_cols_left|missing_vals_right|missing_vals_left|dt                        |\n+--------------+----------------------------------+-----------------+------------------+-----------------+--------------------------+\n|test.diff_df_2|GENERAL_ID:string,ADDR_DESC:string|GENERAL_ID:int   |                  |                 |2020-04-17 09:39:07.572483|\n|test.diff_df  |                                  |                 |6,7               |                 |2020-04-17 09:39:07.572483|\n+--------------+----------------------------------+-----------------+------------------+-----------------+--------------------------+\n```\n\n## Installation\n\nInstall owl sanitizer from PyPI:\n\n```pip install owl-sanitizer-data-quality```\n\nThen you can call the library.\n\n```\nfrom spark_validation.dataframe_validation.dataframe_validator import CreateHiveValidationDF\nfrom spark_validation.common.config import Config\n\nspark_session = SparkSession.builder.enableHiveSupport().getOrCreate()\nwith open(PATH_TO_CONFIG_FILE) as f:\n        config = Config.parse(f)\nCreateHiveValidationDF.validate(spark_session, config)\n```\n\nTo use in your spark submit command or airflow dag.\n\n- Add `py_files` : `[https://pypi.org/project/owl-sanitizer-data-quality/latest/]` .\n- `application` : `owl-sanitizer-data-quality/latest/src/spark_validation/dataframe_validation/hive_validator.py`\n- `application_package`: `https://pypi.org/project/owl-sanitizer-data-quality/latest/owl-sanitizer-data-quality-latest.tar.gz`\n- `application_params`: `URL_TO_YOUR_REMOTE_CONFIG_FILE`\n\nContact\n-------\n\nPlease ask questions about technical issues here on GitHub. \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ronald-smith-angel/owl-data-sanitizer.git", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "owl-sanitizer-data-quality", "package_url": "https://pypi.org/project/owl-sanitizer-data-quality/", "platform": "", "project_url": "https://pypi.org/project/owl-sanitizer-data-quality/", "project_urls": {"Homepage": "https://github.com/ronald-smith-angel/owl-data-sanitizer.git"}, "release_url": "https://pypi.org/project/owl-sanitizer-data-quality/0.5/", "requires_dist": ["dataclasses (==0.6)", "pyspark (==2.4.5)", "Flask (==1.1.2)", "requests (==2.23.0)", "numpy (==1.18.3)", "pandas (==1.0.1)", "pivottablejs (==0.9.0)", "ipython (==7.13.0)"], "requires_python": "", "summary": "Data Quality framework for Pyspark jobs", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Owl Data Sanitizer: A light Spark data validation framework</h1>\n<p><a href=\"https://github.com/ronald-smith-angel/owl-data-sanitizer/blob/develop/license.md\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae646c9f8bcc796bfc74debf7ac2c93ee374c6ef/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6173686170652f6170697374617475732e7376673f6d61784167653d32353932303030\"></a>\n<a href=\"https://travis-ci.org/github/ronald-smith-angel/owl-data-sanitizer\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ceef19d37cb106b58dc5a97f95e5245bbccadd96/68747470733a2f2f7472617669732d63692e6f72672f726f6e616c642d736d6974682d616e67656c2f6f776c2d646174612d73616e6974697a65722e7376673f6272616e63683d646576656c6f70\"></a></p>\n<p>This is a small framework for data quality validation. This first version works reading spark dataframes from local\ndatasources like local system, s3 or hive and delivers hive tables with quality reports.</p>\n<p>Let's follow this example:</p>\n<p>Input data from a hive table:</p>\n<pre><code>+----------+--------------+--------+---------+------------------+---------+\n|GENERAL_ID|          NAME|    CODE|ADDR_DESC|ULTIMATE_PARENT_ID|PARENT_ID|\n+----------+--------------+--------+---------+------------------+---------+\n|         1|Dummy 1 Entity|12000123|     null|              null|     null|\n|         2|          null|    null|     null|                 2|        2|\n|         3|          null|12000123|     null|                 3|        3|\n|         4|             1|       1|     null|                 4|        4|\n|         5|             1|12000123|     null|                 5|        5|\n|         6|          null|       3|     null|                 6|        6|\n|      null|          null|12000123|     null|                11|        7|\n|         7|             2|    null|     null|                 8|        8|\n+----------+--------------+--------+---------+------------------+---------+\n</code></pre>\n<p>following this validation config with 4 sections:</p>\n<ol>\n<li><code>source_table</code> including the table metadata.</li>\n<li><code>correctness_validations</code> including correctness validations per column.\nthe rule must be a valid spark SQL expression.</li>\n<li><code>parent_children_constraints</code> including children parent constrains.\nThis means that any parent id should be valid id.</li>\n<li><code>compare_related_tables_list</code> including comparison with other tables or\nthe same table in other environments.</li>\n</ol>\n<pre><code>{\n  \"source_table\": {\n    \"name\": \"test.data_test\",\n    \"id_column\": \"GENERAL_ID\",\n    \"unique_column_group_values_per_table\": [\"GENERAL_ID\", \"ULTIMATE_PARENT_ID\"],\n    \"fuzzy_deduplication_distance\": 0,\n    \"output_correctness_table\": \"test.data_test_correctness\",\n    \"output_completeness_table\": \"test.data_test_completeness\",\n    \"output_comparison_table\": \"test.data_test_comparison\"\n  },\n  \"correctness_validations\": [\n    {\n      \"column\": \"CODE\",\n      \"rule\": \"CODE is not null and CODE != '' and CODE != 'null'\"\n    },\n    {\n      \"column\": \"NAME\",\n      \"rule\": \"NAME is not null and NAME != '' and NAME != 'null'\"\n    },\n    {\n      \"column\": \"GENERAL_ID\",\n      \"rule\": \"GENERAL_ID is not null and GENERAL_ID != '' and GENERAL_ID != 'null' and CHAR_LENGTH(GENERAL_ID) &lt; 4\"\n    }\n  ],\n  \"completeness_validations\": [\n    {\n      \"column\": \"OVER_ALL_COUNT\",\n      \"rule\": \"OVER_ALL_COUNT &lt;= 7\"\n    }\n  ],\n  \"parent_children_constraints\": [\n    {\n      \"column\": \"GENERAL_ID\",\n      \"parent\": \"ULTIMATE_PARENT_ID\"\n    },\n    {\n      \"column\": \"GENERAL_ID\",\n      \"parent\": \"PARENT_ID\"\n    }\n  ],\n  \"compare_related_tables_list\": [\"test.diff_df\", \"test.diff_df_2\"]\n}\n</code></pre>\n<p>Therefore, these results are delivered in two output hive tables:</p>\n<p>a). Correctness Report.</p>\n<ul>\n<li>You will see and output col per validation col showing either 1 when there is error or 0 when is clean.</li>\n<li>Sum of error per columns.</li>\n</ul>\n<pre><code>+----------+-------------+-------------+-------------------+--------------------------------------+-----------------------------+-------------+--------------------------+-----------------+-----------------+-----------------------+------------------------------------------+---------------------------------+-----------------+\n|GENERAL_ID|IS_ERROR_CODE|IS_ERROR_NAME|IS_ERROR_GENERAL_ID|IS_ERROR_GENERAL_ID_ULTIMATE_PARENT_ID|IS_ERROR_GENERAL_ID_PARENT_ID|IS_ERROR__ROW|dt                        |IS_ERROR_CODE_SUM|IS_ERROR_NAME_SUM|IS_ERROR_GENERAL_ID_SUM|IS_ERROR_GENERAL_ID_ULTIMATE_PARENT_ID_SUM|IS_ERROR_GENERAL_ID_PARENT_ID_SUM|IS_ERROR__ROW_SUM|\n+----------+-------------+-------------+-------------------+--------------------------------------+-----------------------------+-------------+--------------------------+-----------------+-----------------+-----------------------+------------------------------------------+---------------------------------+-----------------+\n|null      |0            |1            |1                  |1                                     |0                            |1            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n|3         |0            |1            |0                  |0                                     |0                            |1            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n|7         |1            |0            |0                  |1                                     |1                            |1            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n|5         |0            |0            |0                  |0                                     |0                            |0            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n|6         |0            |1            |0                  |0                                     |0                            |1            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n|4         |0            |0            |0                  |0                                     |0                            |0            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n|2         |1            |1            |0                  |0                                     |0                            |1            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n|1         |0            |0            |0                  |0                                     |0                            |0            |2020-04-17 09:39:04.783505|2                |4                |1                      |2                                         |1                                |5                |\n+----------+-------------+-------------+-------------------+--------------------------------------+-----------------------------+-------------+--------------------------+-----------------+-----------------+-----------------------+------------------------------------------+---------------------------------+-----------------+\n</code></pre>\n<p>b) Completeness Report.</p>\n<ul>\n<li>The overall count of the dataframe.</li>\n<li>Column checking if the overall count is complete, example: <code>IS_ERROR_OVER_ALL_COUNT</code>.</li>\n</ul>\n<pre><code>+--------------+-----------------------+--------------------------+\n|OVER_ALL_COUNT|IS_ERROR_OVER_ALL_COUNT|dt                        |\n+--------------+-----------------------+--------------------------+\n|8             |1                      |2020-04-17 09:39:04.783505|\n+--------------+-----------------------+--------------------------+\n</code></pre>\n<p>c). Comparison of schema and values with related dataframes.</p>\n<p>NOTE: the result includes for now only the ids that are different and a further\njoin with the source data to see differences is needed.</p>\n<pre><code>+--------------+----------------------------------+-----------------+------------------+-----------------+--------------------------+\n|df            |missing_cols_right                |missing_cols_left|missing_vals_right|missing_vals_left|dt                        |\n+--------------+----------------------------------+-----------------+------------------+-----------------+--------------------------+\n|test.diff_df_2|GENERAL_ID:string,ADDR_DESC:string|GENERAL_ID:int   |                  |                 |2020-04-17 09:39:07.572483|\n|test.diff_df  |                                  |                 |6,7               |                 |2020-04-17 09:39:07.572483|\n+--------------+----------------------------------+-----------------+------------------+-----------------+--------------------------+\n</code></pre>\n<h2>Installation</h2>\n<p>Install owl sanitizer from PyPI:</p>\n<p><code>pip install owl-sanitizer-data-quality</code></p>\n<p>Then you can call the library.</p>\n<pre><code>from spark_validation.dataframe_validation.dataframe_validator import CreateHiveValidationDF\nfrom spark_validation.common.config import Config\n\nspark_session = SparkSession.builder.enableHiveSupport().getOrCreate()\nwith open(PATH_TO_CONFIG_FILE) as f:\n        config = Config.parse(f)\nCreateHiveValidationDF.validate(spark_session, config)\n</code></pre>\n<p>To use in your spark submit command or airflow dag.</p>\n<ul>\n<li>Add <code>py_files</code> : <code>[https://pypi.org/project/owl-sanitizer-data-quality/latest/]</code> .</li>\n<li><code>application</code> : <code>owl-sanitizer-data-quality/latest/src/spark_validation/dataframe_validation/hive_validator.py</code></li>\n<li><code>application_package</code>: <code>https://pypi.org/project/owl-sanitizer-data-quality/latest/owl-sanitizer-data-quality-latest.tar.gz</code></li>\n<li><code>application_params</code>: <code>URL_TO_YOUR_REMOTE_CONFIG_FILE</code></li>\n</ul>\n<h2>Contact</h2>\n<p>Please ask questions about technical issues here on GitHub.</p>\n\n          </div>"}, "last_serial": 7174848, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e203b31a254f68fdf4c8ef11b6641663", "sha256": "61bdf129313cdf2e2652601645b74e1d771c1dae2ef8050f3d92602a276f988b"}, "downloads": -1, "filename": "owl_sanitizer_data_quality-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e203b31a254f68fdf4c8ef11b6641663", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8842, "upload_time": "2020-04-17T11:20:02", "upload_time_iso_8601": "2020-04-17T11:20:02.007994Z", "url": "https://files.pythonhosted.org/packages/03/fa/cae3a3fc9fbef634f0f0af7e9a9d8e89fdfc869aa857b4231bc2b53d8e41/owl_sanitizer_data_quality-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1e6a4c29455d1b1c4d38c9a75ea65f6", "sha256": "abaaa5d0332f97aa0e1404815dcbb39d602b004fa201df6a80f615eaebc9c26b"}, "downloads": -1, "filename": "owl-sanitizer-data-quality-0.1.tar.gz", "has_sig": false, "md5_digest": "e1e6a4c29455d1b1c4d38c9a75ea65f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6345, "upload_time": "2020-04-17T11:20:04", "upload_time_iso_8601": "2020-04-17T11:20:04.552736Z", "url": "https://files.pythonhosted.org/packages/bf/4a/7580f094b857d3401e8c73d88eb8be1376a4474b093dd98bac4309bf92ef/owl-sanitizer-data-quality-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "89607342b967ec9879bfedb66dc7fa37", "sha256": "2665f7791733b7e294ddb2ea0c6b25379aed096a95d6113f2e96e0c6cf10d38c"}, "downloads": -1, "filename": "owl_sanitizer_data_quality-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "89607342b967ec9879bfedb66dc7fa37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10694, "upload_time": "2020-04-18T09:03:46", "upload_time_iso_8601": "2020-04-18T09:03:46.570052Z", "url": "https://files.pythonhosted.org/packages/de/ef/aac77dbe7c3fb5f62551abbcd6ccc07775f72e011f60440d085cd86998ee/owl_sanitizer_data_quality-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb109b33751e0c0e51e86feb62350baf", "sha256": "aae63cd85a01272d423ab614ce7aaa79fa6bb98f5ab6e9365717c62be8878606"}, "downloads": -1, "filename": "owl-sanitizer-data-quality-0.2.tar.gz", "has_sig": false, "md5_digest": "fb109b33751e0c0e51e86feb62350baf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8190, "upload_time": "2020-04-18T09:03:48", "upload_time_iso_8601": "2020-04-18T09:03:48.080063Z", "url": "https://files.pythonhosted.org/packages/1e/01/70ebd5d4a50eb1fdcf151d64a3f7d3a177ecbfb29fd2d8417a44d61bf54f/owl-sanitizer-data-quality-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "42989396d2553d1176da96affd25590d", "sha256": "fcff39d11707500fc723a56cff0891f92fc5c05bdeaa769e3d4c148c1f3d8fa8"}, "downloads": -1, "filename": "owl_sanitizer_data_quality-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "42989396d2553d1176da96affd25590d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10898, "upload_time": "2020-04-18T10:43:30", "upload_time_iso_8601": "2020-04-18T10:43:30.944000Z", "url": "https://files.pythonhosted.org/packages/48/f2/018053d3ebed60c4d4b9fc83f9c13fea4907b446adcf1fb1c5f8e3699747/owl_sanitizer_data_quality-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b8f0896f3b5c028be2496fa3b1a468b", "sha256": "adc2d3f6d33f61cc9468efc9697966d4fff0a55052a9820ab57502b530231fec"}, "downloads": -1, "filename": "owl-sanitizer-data-quality-0.3.tar.gz", "has_sig": false, "md5_digest": "9b8f0896f3b5c028be2496fa3b1a468b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8389, "upload_time": "2020-04-18T10:43:32", "upload_time_iso_8601": "2020-04-18T10:43:32.464986Z", "url": "https://files.pythonhosted.org/packages/0d/98/1276e4f87452a533d014fe541e81f641b17ecd38ca2ca8f68f6716657cad/owl-sanitizer-data-quality-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "5e6d6c328fedd92f57ca0bce179afb32", "sha256": "13da1345f5da0ed3b93fbc701e75686f7189a26dbcf537f1d167b56ed7e66659"}, "downloads": -1, "filename": "owl_sanitizer_data_quality-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5e6d6c328fedd92f57ca0bce179afb32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12456, "upload_time": "2020-04-20T11:56:32", "upload_time_iso_8601": "2020-04-20T11:56:32.093763Z", "url": "https://files.pythonhosted.org/packages/80/b3/198dc146315a157ce490e846074a29cb6a26115291ced2594d2b1fc4a963/owl_sanitizer_data_quality-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b212a1f66f60329e1159948e8b2c15c", "sha256": "e0b04e83887c57ee83973d58f4ffc7bc531480870df28e05414bbdf7ee86fcc3"}, "downloads": -1, "filename": "owl-sanitizer-data-quality-0.4.tar.gz", "has_sig": false, "md5_digest": "8b212a1f66f60329e1159948e8b2c15c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8922, "upload_time": "2020-04-20T11:56:33", "upload_time_iso_8601": "2020-04-20T11:56:33.462040Z", "url": "https://files.pythonhosted.org/packages/dd/2c/6aa5dfaed04de289de8e89ed8cd800bfe1849152a073822214d2eebfbf08/owl-sanitizer-data-quality-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "933140b2a955f9e62e7f088d945ccf43", "sha256": "35587c269cce4bbf62c546c56d0b53e12b37b9ef5e4283898610a305104aa6f2"}, "downloads": -1, "filename": "owl_sanitizer_data_quality-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "933140b2a955f9e62e7f088d945ccf43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14007, "upload_time": "2020-05-05T19:23:24", "upload_time_iso_8601": "2020-05-05T19:23:24.252061Z", "url": "https://files.pythonhosted.org/packages/2c/08/c22ed2321e3d33a91e0be93bb590fa3ddf5edf26fb7d45ef32b212bb4c11/owl_sanitizer_data_quality-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26fd913898e0509d882bc2006ac47279", "sha256": "2a76bf867f50d326b747a78f1b2af7c2b80d3dbff0e5b6efc70590de6ab96731"}, "downloads": -1, "filename": "owl-sanitizer-data-quality-0.5.tar.gz", "has_sig": false, "md5_digest": "26fd913898e0509d882bc2006ac47279", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10108, "upload_time": "2020-05-05T19:23:25", "upload_time_iso_8601": "2020-05-05T19:23:25.595945Z", "url": "https://files.pythonhosted.org/packages/e2/65/d0e7991a0e461840472bc2e74902eaf7006dbead859547a21403e3cb724f/owl-sanitizer-data-quality-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "933140b2a955f9e62e7f088d945ccf43", "sha256": "35587c269cce4bbf62c546c56d0b53e12b37b9ef5e4283898610a305104aa6f2"}, "downloads": -1, "filename": "owl_sanitizer_data_quality-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "933140b2a955f9e62e7f088d945ccf43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14007, "upload_time": "2020-05-05T19:23:24", "upload_time_iso_8601": "2020-05-05T19:23:24.252061Z", "url": "https://files.pythonhosted.org/packages/2c/08/c22ed2321e3d33a91e0be93bb590fa3ddf5edf26fb7d45ef32b212bb4c11/owl_sanitizer_data_quality-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26fd913898e0509d882bc2006ac47279", "sha256": "2a76bf867f50d326b747a78f1b2af7c2b80d3dbff0e5b6efc70590de6ab96731"}, "downloads": -1, "filename": "owl-sanitizer-data-quality-0.5.tar.gz", "has_sig": false, "md5_digest": "26fd913898e0509d882bc2006ac47279", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10108, "upload_time": "2020-05-05T19:23:25", "upload_time_iso_8601": "2020-05-05T19:23:25.595945Z", "url": "https://files.pythonhosted.org/packages/e2/65/d0e7991a0e461840472bc2e74902eaf7006dbead859547a21403e3cb724f/owl-sanitizer-data-quality-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:29 2020"}