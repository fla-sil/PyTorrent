{"info": {"author": "Rohith R", "author_email": "rohithr31@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# codeforces-auto-tester\n\nA simple tool to help you save time during a codeforces contest.\n\nGiven a contest number it fetches all the testcases and expected output for it. For each problem a new folder is created with sub-folders input/ and output/ which contain the example inputs and outputs respectively.\n\nAsk it to test and it will run the program on the sample inputs and check whether your output matches the expected output.\n\n**NOTE : You can add your own test cases into the folders and that will also be tested happily.**\n\n**Bonus :** Keep your template code as `template.cpp` in the same folder as `main.py` and it will automatically populate your template for every problem.\n\n## See it work\n- Download or Clone this repository\n- Identify a codeforeces contest number (Need not be a current contest) **Eg. 703 (Codeforces Round #365 (Div. 2))**\n- To fetch testcases type : `python main.py fetch 703`\n- To test your code for a problem (say A)  : `python main.py test A`\n- If multiple answers are possible : `python main.py test A multiple`\n\n## Dependencies\n- [Beautiful Soup] (https://www.crummy.com/software/BeautifulSoup/bs4/doc/)\n\n## TODO\n- [x] Create basic POC for C/C++ code\n- [x] Added support for multiple answers\n- [ ] Add support for Java and Python\n- [ ] Create a command line tool for Mac and Linux", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MadaraUchiha-314/codeforces-auto-tester", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "cfat", "package_url": "https://pypi.org/project/cfat/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cfat/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/MadaraUchiha-314/codeforces-auto-tester"}, "release_url": "https://pypi.org/project/cfat/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "A simple tool to help you save time during a codeforces contest.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># codeforces-auto-tester</p>\n<p>A simple tool to help you save time during a codeforces contest.</p>\n<p>Given a contest number it fetches all the testcases and expected output for it. For each problem a new folder is created with sub-folders input/ and output/ which contain the example inputs and outputs respectively.</p>\n<p>Ask it to test and it will run the program on the sample inputs and check whether your output matches the expected output.</p>\n<p><strong>NOTE : You can add your own test cases into the folders and that will also be tested happily.</strong></p>\n<p><strong>Bonus :</strong> Keep your template code as <cite>template.cpp</cite> in the same folder as <cite>main.py</cite> and it will automatically populate your template for every problem.</p>\n<p>## See it work\n- Download or Clone this repository\n- Identify a codeforeces contest number (Need not be a current contest) <strong>Eg. 703 (Codeforces Round #365 (Div. 2))</strong>\n- To fetch testcases type : <cite>python main.py fetch 703</cite>\n- To test your code for a problem (say A)  : <cite>python main.py test A</cite>\n- If multiple answers are possible : <cite>python main.py test A multiple</cite></p>\n<p>## Dependencies\n- [Beautiful Soup] (<a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/\" rel=\"nofollow\">https://www.crummy.com/software/BeautifulSoup/bs4/doc/</a>)</p>\n<p>## TODO\n- [x] Create basic POC for C/C++ code\n- [x] Added support for multiple answers\n- [ ] Add support for Java and Python\n- [ ] Create a command line tool for Mac and Linux</p>\n\n          </div>"}, "last_serial": 2263659, "releases": {"0.1.0": []}, "urls": [], "timestamp": "Thu May  7 22:34:41 2020"}