{"info": {"author": "Rajendra Gupta", "author_email": "roy.gupta68@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: ISC License (ISCL)", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3.6"], "description": "=====\nnacha\n=====\n\n.. image:: https://travis-ci.org/DisruptiveLabs/nacha.png\n   :target: https://travis-ci.org/DisruptiveLabs/nacha\n\n.. image:: https://coveralls.io/repos/DisruptiveLabs/nacha/badge.png?branch=master\n  :target: https://coveralls.io/r/DisruptiveLabs/nacha?branch=master\n\n`NACHA <http://www.regaltek.com/docs/NACHA Format.pdf>`_ is a fixed sized\nrecord format used to represent financial transactions composed like this:\n\n.. code::\n\n    FileHeader\n        CompanyBatchHeader\n            EntryDetail\n                EntryDetailAddendum\n                ...\n            ...\n        CompanyBatchControl\n        ...\n    FileControl\n\nwhich we express using `bryl <https://github.com/balanced/bryl/>`_. Writing is\ndone like this:\n\n.. code:: python\n\n    with open('sample.nacha', 'w') as fo:\n        writer = nacha.Writer(fo)\n        with writer.begin_file(\n             ...\n             ):\n             with writer.begin_company_batch(\n                  ...\n                  ):\n                 writer.entry(...):\n                 ...\n            ...\n\nReading is done by iterating records like this:\n\n.. code:: python\n\n    with open('sample.nacha', 'r') as fo:\n        reader = Reader(fo, include_terminal=True)\n        for record, terminal in reader:\n            ...\n\nOr structured like this:\n\n.. code:: python\n\n    with open('sample.nacha', 'r') as fo:\n        reader = Reader(fo)\n        reader.file_header()\n        for company_batch_header in reader.company_batches():\n            for entry_detail, entry_addenda in reader.entries():\n                ...\n            reader.company_batch_control()\n        reader.file_control()\n\n===\nuse\n===\n\n.. code:: bash\n\n   $ pip install nacha3\n\n===\ndev\n===\n\n.. code:: bash\n\n   $ git clone https://github.com/rockxraj68/nacha3.git\n   $ cd nacha\n   $ mkvirtualenv nacha\n   (nacha)$ pip install -e .[tests]\n   (nacha)$ py.test tests.py --cov=nacha --cov-report term-missing\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rockxraj68/nacha3.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "nacha3", "package_url": "https://pypi.org/project/nacha3/", "platform": "any", "project_url": "https://pypi.org/project/nacha3/", "project_urls": {"Homepage": "https://github.com/rockxraj68/nacha3.git"}, "release_url": "https://pypi.org/project/nacha3/0.0.2/", "requires_dist": ["bryl", "pytest (<3.0,>=2.5) ; extra == 'tests'", "pytest-cov (<2.0,>=1.7) ; extra == 'tests'", "unittest2 (<0.6,>=0.5.1) ; extra == 'tests'"], "requires_python": "", "summary": "NACHA File Generation", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"nacha\">\n<h2>nacha</h2>\n<a href=\"https://travis-ci.org/DisruptiveLabs/nacha\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/DisruptiveLabs/nacha.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8bd48b87cce24a06e90e73d8497f604747c884a5/68747470733a2f2f7472617669732d63692e6f72672f446973727570746976654c6162732f6e616368612e706e67\"></a>\n<a href=\"https://coveralls.io/r/DisruptiveLabs/nacha?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/DisruptiveLabs/nacha/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/37facda4f27a275b3945524c8bdf046ffd27eeb5/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f446973727570746976654c6162732f6e616368612f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<p><a href=\"http://www.regaltek.com/docs/NACHAFormat.pdf\" rel=\"nofollow\">NACHA</a> is a fixed sized\nrecord format used to represent financial transactions composed like this:</p>\n<pre>FileHeader\n    CompanyBatchHeader\n        EntryDetail\n            EntryDetailAddendum\n            ...\n        ...\n    CompanyBatchControl\n    ...\nFileControl\n</pre>\n<p>which we express using <a href=\"https://github.com/balanced/bryl/\" rel=\"nofollow\">bryl</a>. Writing is\ndone like this:</p>\n<pre><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'sample.nacha'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fo</span><span class=\"p\">:</span>\n    <span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"n\">nacha</span><span class=\"o\">.</span><span class=\"n\">Writer</span><span class=\"p\">(</span><span class=\"n\">fo</span><span class=\"p\">)</span>\n    <span class=\"k\">with</span> <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">begin_file</span><span class=\"p\">(</span>\n         <span class=\"o\">...</span>\n         <span class=\"p\">):</span>\n         <span class=\"k\">with</span> <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">begin_company_batch</span><span class=\"p\">(</span>\n              <span class=\"o\">...</span>\n              <span class=\"p\">):</span>\n             <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">entry</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">):</span>\n             <span class=\"o\">...</span>\n        <span class=\"o\">...</span>\n</pre>\n<p>Reading is done by iterating records like this:</p>\n<pre><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'sample.nacha'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fo</span><span class=\"p\">:</span>\n    <span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">Reader</span><span class=\"p\">(</span><span class=\"n\">fo</span><span class=\"p\">,</span> <span class=\"n\">include_terminal</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">record</span><span class=\"p\">,</span> <span class=\"n\">terminal</span> <span class=\"ow\">in</span> <span class=\"n\">reader</span><span class=\"p\">:</span>\n        <span class=\"o\">...</span>\n</pre>\n<p>Or structured like this:</p>\n<pre><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'sample.nacha'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fo</span><span class=\"p\">:</span>\n    <span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">Reader</span><span class=\"p\">(</span><span class=\"n\">fo</span><span class=\"p\">)</span>\n    <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">file_header</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">company_batch_header</span> <span class=\"ow\">in</span> <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">company_batches</span><span class=\"p\">():</span>\n        <span class=\"k\">for</span> <span class=\"n\">entry_detail</span><span class=\"p\">,</span> <span class=\"n\">entry_addenda</span> <span class=\"ow\">in</span> <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">entries</span><span class=\"p\">():</span>\n            <span class=\"o\">...</span>\n        <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">company_batch_control</span><span class=\"p\">()</span>\n    <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">file_control</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"use\">\n<h2>use</h2>\n<pre>$ pip install nacha3\n</pre>\n</div>\n<div id=\"dev\">\n<h2>dev</h2>\n<pre>$ git clone https://github.com/rockxraj68/nacha3.git\n$ <span class=\"nb\">cd</span> nacha\n$ mkvirtualenv nacha\n<span class=\"o\">(</span>nacha<span class=\"o\">)</span>$ pip install -e .<span class=\"o\">[</span>tests<span class=\"o\">]</span>\n<span class=\"o\">(</span>nacha<span class=\"o\">)</span>$ py.test tests.py --cov<span class=\"o\">=</span>nacha --cov-report term-missing\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5484923, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "8bf3ea49c479c5fb8de69e2cb08a3bd7", "sha256": "1219434b0ac124cfb6755d8ed03034e3e43ad16f0761901e037a3a159155b930"}, "downloads": -1, "filename": "nacha3-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8bf3ea49c479c5fb8de69e2cb08a3bd7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25058, "upload_time": "2019-07-04T05:18:54", "upload_time_iso_8601": "2019-07-04T05:18:54.704063Z", "url": "https://files.pythonhosted.org/packages/c8/c1/8fb016620d29325cf77111e5431bd3c80d62140d9e8f48ce7f3c190489ad/nacha3-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af19cf1c5de94f5d0edf6f1ce1e5983e", "sha256": "71892ddf54149152dd3d5471322c8b4e0b9419a1666ee45363193009ef38a991"}, "downloads": -1, "filename": "nacha3-0.0.2.tar.gz", "has_sig": false, "md5_digest": "af19cf1c5de94f5d0edf6f1ce1e5983e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14534, "upload_time": "2019-07-04T05:18:57", "upload_time_iso_8601": "2019-07-04T05:18:57.498899Z", "url": "https://files.pythonhosted.org/packages/38/5e/ec77ea43686c51452fa079a075e4829790e0c5ee4316a63fdaae44748052/nacha3-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8bf3ea49c479c5fb8de69e2cb08a3bd7", "sha256": "1219434b0ac124cfb6755d8ed03034e3e43ad16f0761901e037a3a159155b930"}, "downloads": -1, "filename": "nacha3-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8bf3ea49c479c5fb8de69e2cb08a3bd7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25058, "upload_time": "2019-07-04T05:18:54", "upload_time_iso_8601": "2019-07-04T05:18:54.704063Z", "url": "https://files.pythonhosted.org/packages/c8/c1/8fb016620d29325cf77111e5431bd3c80d62140d9e8f48ce7f3c190489ad/nacha3-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af19cf1c5de94f5d0edf6f1ce1e5983e", "sha256": "71892ddf54149152dd3d5471322c8b4e0b9419a1666ee45363193009ef38a991"}, "downloads": -1, "filename": "nacha3-0.0.2.tar.gz", "has_sig": false, "md5_digest": "af19cf1c5de94f5d0edf6f1ce1e5983e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14534, "upload_time": "2019-07-04T05:18:57", "upload_time_iso_8601": "2019-07-04T05:18:57.498899Z", "url": "https://files.pythonhosted.org/packages/38/5e/ec77ea43686c51452fa079a075e4829790e0c5ee4316a63fdaae44748052/nacha3-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:54 2020"}