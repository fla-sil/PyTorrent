{"info": {"author": "Pavel Sofroniev", "author_email": "pavelsof@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Text Processing :: Linguistic"], "description": "====\nasjp\n====\n\nA library of three functions. ``ipa2asjp`` takes an IPA-encoded sequence and\nconverts it into an ASJP-encoded sequence. ``asjp2ipa`` tries to do the\nopposite. ``tokenise`` takes an ASJP-encoded string and returns a list of\ntokens.\n\n>>> from asjp import ipa2asjp, asjp2ipa, tokenise\n>>> ipa2asjp('z\u025bm\u02b2a')\n'zEmy~a'\n>>> ipa2asjp(['z', '\u025b', 'm\u02b2', 'a'])\n['z', 'E', 'my~', 'a']\n>>> asjp2ipa('zEmy~a')\n'z\u025bm\u02b2a'\n>>> tokenise('zEmy~a')\n['z', 'E', 'my~', 'a']\n>>> ipa2asjp(asjp2ipa(tokenise('zEmy~a'))) == tokenise('zEmy~a')\nTrue\n>>> ipa2asjp(['z', '\u025b', 'm\u02b2', 'a']) == tokenise(ipa2asjp('z\u025bm\u02b2a'))\nTrue\n\n\nwhat is this?\n=============\n\nASJPcode, more commonly referred to as the ASJP alphabet or simply as ASJP, is\na simplified transcription alphabet introduced in `Brown et al. (2008)`_ and\nthen slightly modified in `Brown et al. (2013)`_; the latter is considered the\nalphabet's spec for the purposes of this package.\n\nThe ASJP alphabet is used for transcribing the `ASJP Database`_, an actively\ndeveloped database aiming to provide the translations of a set of 40 basic\nconcepts into all the world's languages. Both alphabet and database are\nemployed in the field of computational historical linguistics, e.g. in `J\u00e4ger\n(2013)`_ or `Wichmann et al. (2011)`_.\n\n\napi\n===\n\n``ipa2asjp(ipa_seq)`` takes an IPA string or sequence of string tokens and\nconverts it into an ASJP string or sequence of string tokens. Raises a\n``ValueError`` if the input does not constitute a valid IPA sequence.\n\n``asjp2ipa(asjp_seq)`` takes an ASJP string or sequence of string tokens and\nconverts it into an IPA string or sequence of string tokens. As ASJP encodes\nmuch less information than IPA, something like\n``asjp2ipa(ipa2asjp(ipa_seq)) == ipa_seq`` would rarely hold true. Raises a\n``ValueError`` if the input does not constitute a valid ASJP sequence.\n\n``tokenise(asjp_string)`` takes an ASJP string and converts it into a list of\nASJP tokens. Raises a ``ValueError`` if the input cannot be unambiguously\ntokenised.\n\n``tokenize(asjp_string)`` is an alias for ``tokenise(asjp_string)``.\n\n\ninstallation\n============\n\nThis is a standard Python 3 package with a single dependency, `ipatok`_. It is\noffered at the `Cheese Shop`_, so you can install it with pip::\n\n    pip install asjp\n\nor, alternatively, you can clone this repo (safe to delete afterwards) and do::\n\n    python setup.py test\n    python setup.py install\n\nOf course, all of this could, and probably should, be happening within a\nvirtual environment.\n\n\nsee also\n========\n\n- `lingpy`_ is an extensive library for computational historical linguistics\n  that includes functions for converting IPA to ASJP.\n- `ipatok`_ is a library for tokenising IPA strings used by the ``ipa2asjp``\n  function for handling string input.\n\n\nlicence\n=======\n\nMIT. Do as you please and praise the snake gods.\n\n\n.. _`Brown et al. (2008)`: https://doi.org/10.1524/stuf.2008.0026\n.. _`Brown et al. (2013)`: https://doi.org/10.1353/lan.2013.0009\n.. _`J\u00e4ger (2013)`: https://doi.org/10.1163/22105832-13030204\n.. _`Wichmann et al. (2011)`: https://doi.org/10.1515/lity.2011.013\n.. _`ASJP Database`: http://asjp.clld.org/\n.. _`Cheese Shop`: https://pypi.python.org/pypi/asjp\n.. _`ipatok`: https://pypi.python.org/pypi/ipatok\n.. _`lingpy`: https://pypi.python.org/pypi/lingpy\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pavelsof/asjp", "keywords": "ASJP ASJPcode IPA", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "asjp", "package_url": "https://pypi.org/project/asjp/", "platform": "", "project_url": "https://pypi.org/project/asjp/", "project_urls": {"Homepage": "https://github.com/pavelsof/asjp"}, "release_url": "https://pypi.org/project/asjp/0.0.2/", "requires_dist": ["ipatok (>=0.2)"], "requires_python": ">=3", "summary": "ASJP conversion and tokenisation utils", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A library of three functions. <tt>ipa2asjp</tt> takes an IPA-encoded sequence and\nconverts it into an ASJP-encoded sequence. <tt>asjp2ipa</tt> tries to do the\nopposite. <tt>tokenise</tt> takes an ASJP-encoded string and returns a list of\ntokens.</p>\n<pre>&gt;&gt;&gt; from asjp import ipa2asjp, asjp2ipa, tokenise\n&gt;&gt;&gt; ipa2asjp('z\u025bm\u02b2a')\n'zEmy~a'\n&gt;&gt;&gt; ipa2asjp(['z', '\u025b', 'm\u02b2', 'a'])\n['z', 'E', 'my~', 'a']\n&gt;&gt;&gt; asjp2ipa('zEmy~a')\n'z\u025bm\u02b2a'\n&gt;&gt;&gt; tokenise('zEmy~a')\n['z', 'E', 'my~', 'a']\n&gt;&gt;&gt; ipa2asjp(asjp2ipa(tokenise('zEmy~a'))) == tokenise('zEmy~a')\nTrue\n&gt;&gt;&gt; ipa2asjp(['z', '\u025b', 'm\u02b2', 'a']) == tokenise(ipa2asjp('z\u025bm\u02b2a'))\nTrue\n</pre>\n<div id=\"what-is-this\">\n<h2>what is this?</h2>\n<p>ASJPcode, more commonly referred to as the ASJP alphabet or simply as ASJP, is\na simplified transcription alphabet introduced in <a href=\"https://doi.org/10.1524/stuf.2008.0026\" rel=\"nofollow\">Brown et al. (2008)</a> and\nthen slightly modified in <a href=\"https://doi.org/10.1353/lan.2013.0009\" rel=\"nofollow\">Brown et al. (2013)</a>; the latter is considered the\nalphabet\u2019s spec for the purposes of this package.</p>\n<p>The ASJP alphabet is used for transcribing the <a href=\"http://asjp.clld.org/\" rel=\"nofollow\">ASJP Database</a>, an actively\ndeveloped database aiming to provide the translations of a set of 40 basic\nconcepts into all the world\u2019s languages. Both alphabet and database are\nemployed in the field of computational historical linguistics, e.g. in <a href=\"https://doi.org/10.1163/22105832-13030204\" rel=\"nofollow\">J\u00e4ger\n(2013)</a> or <a href=\"https://doi.org/10.1515/lity.2011.013\" rel=\"nofollow\">Wichmann et al. (2011)</a>.</p>\n</div>\n<div id=\"api\">\n<h2>api</h2>\n<p><tt>ipa2asjp(ipa_seq)</tt> takes an IPA string or sequence of string tokens and\nconverts it into an ASJP string or sequence of string tokens. Raises a\n<tt>ValueError</tt> if the input does not constitute a valid IPA sequence.</p>\n<p><tt>asjp2ipa(asjp_seq)</tt> takes an ASJP string or sequence of string tokens and\nconverts it into an IPA string or sequence of string tokens. As ASJP encodes\nmuch less information than IPA, something like\n<tt>asjp2ipa(ipa2asjp(ipa_seq)) == ipa_seq</tt> would rarely hold true. Raises a\n<tt>ValueError</tt> if the input does not constitute a valid ASJP sequence.</p>\n<p><tt>tokenise(asjp_string)</tt> takes an ASJP string and converts it into a list of\nASJP tokens. Raises a <tt>ValueError</tt> if the input cannot be unambiguously\ntokenised.</p>\n<p><tt>tokenize(asjp_string)</tt> is an alias for <tt>tokenise(asjp_string)</tt>.</p>\n</div>\n<div id=\"installation\">\n<h2>installation</h2>\n<p>This is a standard Python 3 package with a single dependency, <a href=\"https://pypi.python.org/pypi/ipatok\" rel=\"nofollow\">ipatok</a>. It is\noffered at the <a href=\"https://pypi.python.org/pypi/asjp\" rel=\"nofollow\">Cheese Shop</a>, so you can install it with pip:</p>\n<pre>pip install asjp\n</pre>\n<p>or, alternatively, you can clone this repo (safe to delete afterwards) and do:</p>\n<pre>python setup.py test\npython setup.py install\n</pre>\n<p>Of course, all of this could, and probably should, be happening within a\nvirtual environment.</p>\n</div>\n<div id=\"see-also\">\n<h2>see also</h2>\n<ul>\n<li><a href=\"https://pypi.python.org/pypi/lingpy\" rel=\"nofollow\">lingpy</a> is an extensive library for computational historical linguistics\nthat includes functions for converting IPA to ASJP.</li>\n<li><a href=\"https://pypi.python.org/pypi/ipatok\" rel=\"nofollow\">ipatok</a> is a library for tokenising IPA strings used by the <tt>ipa2asjp</tt>\nfunction for handling string input.</li>\n</ul>\n</div>\n<div id=\"licence\">\n<h2>licence</h2>\n<p>MIT. Do as you please and praise the snake gods.</p>\n</div>\n\n          </div>"}, "last_serial": 3802040, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "d067e7984f495b2f54a17f2023fb88a1", "sha256": "977212e34bf0752e59e1fb291bcb827f378c9da531718683b1a89e0986ddf1a2"}, "downloads": -1, "filename": "asjp-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d067e7984f495b2f54a17f2023fb88a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3067, "upload_time": "2018-03-19T21:56:40", "upload_time_iso_8601": "2018-03-19T21:56:40.881432Z", "url": "https://files.pythonhosted.org/packages/79/a9/fa1db3166b53c8a5c0d9b8f3bede3cb121f57aed9860a06e98187f5fde7a/asjp-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5326b0d6e5830bd1f0c4d6abd42eb8d4", "sha256": "f5aee9494c92b7b768bf538ef90d9040f65025a2c738f9cc3025775385bf3add"}, "downloads": -1, "filename": "asjp-0.0.0.tar.gz", "has_sig": false, "md5_digest": "5326b0d6e5830bd1f0c4d6abd42eb8d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1647, "upload_time": "2018-03-19T21:56:42", "upload_time_iso_8601": "2018-03-19T21:56:42.217204Z", "url": "https://files.pythonhosted.org/packages/b5/e6/73be4891c2ba292a9406439d725394e269c7a621c7c463502954d9278abc/asjp-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "65fa3f8177f56585a1fd276d6151ea8c", "sha256": "4c657d525a2e683ebfb6a1c5e48ae2d7d0dc50661137f070bf0c6d7fdcc96f7a"}, "downloads": -1, "filename": "asjp-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "65fa3f8177f56585a1fd276d6151ea8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 10284, "upload_time": "2018-03-30T12:20:35", "upload_time_iso_8601": "2018-03-30T12:20:35.611563Z", "url": "https://files.pythonhosted.org/packages/34/66/9da03189d70c36f8540dccb8e53a397ab14088ebf230130fc787890b9bde/asjp-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4861c2d94142176e1f0eca47c635cf5", "sha256": "f88f9c8d2e50a0a3984dcabed3a58dbc87b759aa0a98225dcba99787d035f5d1"}, "downloads": -1, "filename": "asjp-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b4861c2d94142176e1f0eca47c635cf5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7637, "upload_time": "2018-03-30T12:20:36", "upload_time_iso_8601": "2018-03-30T12:20:36.836514Z", "url": "https://files.pythonhosted.org/packages/85/c4/a6f7d3a5ae5a8f85373e51c01918cf156da71d0c23a598243c128e1ff401/asjp-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0f1e6baba89b96a76e7780244a8325db", "sha256": "7eb51189a1a848ef84641e767373cb4cdb61116ac471a05ad0bc201b77153049"}, "downloads": -1, "filename": "asjp-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0f1e6baba89b96a76e7780244a8325db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 10593, "upload_time": "2018-04-24T09:41:57", "upload_time_iso_8601": "2018-04-24T09:41:57.697056Z", "url": "https://files.pythonhosted.org/packages/d8/b3/3af44aead0869c857ccf21557ec514f45e803a7281ab626db7926d5d85fe/asjp-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "161ca5d96e8e7f4e3cb923cd9ca452fd", "sha256": "8263eeb3df59d110c8fd666f3c65aaa17093f4a0aa7deb8fc1b3dd2bc77a7e15"}, "downloads": -1, "filename": "asjp-0.0.2.tar.gz", "has_sig": false, "md5_digest": "161ca5d96e8e7f4e3cb923cd9ca452fd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7905, "upload_time": "2018-04-24T09:41:59", "upload_time_iso_8601": "2018-04-24T09:41:59.405803Z", "url": "https://files.pythonhosted.org/packages/21/86/899a26268e220c661806caebfe4c9210556aaf8d026c5482bb1b38137fbe/asjp-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0f1e6baba89b96a76e7780244a8325db", "sha256": "7eb51189a1a848ef84641e767373cb4cdb61116ac471a05ad0bc201b77153049"}, "downloads": -1, "filename": "asjp-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0f1e6baba89b96a76e7780244a8325db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 10593, "upload_time": "2018-04-24T09:41:57", "upload_time_iso_8601": "2018-04-24T09:41:57.697056Z", "url": "https://files.pythonhosted.org/packages/d8/b3/3af44aead0869c857ccf21557ec514f45e803a7281ab626db7926d5d85fe/asjp-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "161ca5d96e8e7f4e3cb923cd9ca452fd", "sha256": "8263eeb3df59d110c8fd666f3c65aaa17093f4a0aa7deb8fc1b3dd2bc77a7e15"}, "downloads": -1, "filename": "asjp-0.0.2.tar.gz", "has_sig": false, "md5_digest": "161ca5d96e8e7f4e3cb923cd9ca452fd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7905, "upload_time": "2018-04-24T09:41:59", "upload_time_iso_8601": "2018-04-24T09:41:59.405803Z", "url": "https://files.pythonhosted.org/packages/21/86/899a26268e220c661806caebfe4c9210556aaf8d026c5482bb1b38137fbe/asjp-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:59 2020"}