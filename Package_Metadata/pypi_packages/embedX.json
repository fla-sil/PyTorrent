{"info": {"author": "Khaled Monsoor", "author_email": "k@kmonsoor.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "[![License](https://img.shields.io/badge/license-MIT-blue.svg)](http://kmonsoor.mit-license.org/)\n[![PyPI version](https://badge.fury.io/py/embedX.svg)](https://badge.fury.io/py/embedX)\n[![Code Issues](https://www.quantifiedcode.com/api/v1/project/69f2bf7e3b404e6c90015053e48a1cbf/badge.svg)](https://www.quantifiedcode.com/app/project/69f2bf7e3b404e6c90015053e48a1cbf)\n\n# embedX\n\nGenerate embeddable HTML or JavaScript code for a online content from its URL in a single step.\n\nThe content can be anything like \n\n * Youtube or Vimeo video,\n * Twitter status,\n * Github Gist,\n etc.\n\n\nEmbeddable code-generation be simple like this:\n\n    >>> from embed_x import OnlineContent\n    >>> oc = OnlineContent('http://www.youtube.com/embed/_lOT2p_FCvA')\n    >>> oc.get_embed_code()\n    \"<div class='embedx-yt'><iframe src='http://www.youtube.com/embed/_lOT2p_FCvA' 'frameborder='0' allowfullscreen></iframe></div>\"\n\n    \n\n### Currently, supports\n\n * Youtube video,\n * Vimeo video,\n * Twitter: single status,\n * Github gist,\n * Flickr image\n\n\n\n### Examples of URLs\n\n####  Valid\n\n *  http://youtu.be/_lOT2p_FCvA\n *  www.youtube.com/watch?v=_lOT2p_FCvA&feature=feedu\n *  http://www.youtube.com/embed/_lOT2p_FCvA\n *  https://www.youtube.com/watch?v=rTHlyTphWP0&index=6&list=PLjeDyYvG6-40qawYNR4juzvSOg-ezZ2a6\n *  youtube.com/watch?v=_lOT2p_FCvA\n *  https://vimeo.com/groups/animation/videos/150618894/\n *  https://vimeo.com/150519302\n *  https://twitter.com/codinghorror/status/686254714938200064\n *   \n\n####  Invalid:\n\n * youtu.be/watch?v=_lOT2p_FCvA  [ because Youtube don't give any url like this ]\n * https://twitter.com/gvanrossum/with_replies\n * \n\n\n\n## Install\n\n### from PyPI\n\n    pip install embedx\n\n### Directly from source\n\n    pip install git+https://github.com/kmonsoor/embedX.git\n\n## Requirements\n    \n    This library don't have any external dependencies other than standard Python installation.\n\n\n## Usage\n\n    >>> from embedx import OnlineContent\n    >>> oc = OnlineContent('http://www.youtube.com/embed/_lOT2p_FCvA')\n    >>> oc.extract_id()\n    '_lOT2p_FCvA'\n\n    >>> oc.get_embed_code()\n    \"<div class='embed-container'><iframe src='http://www.youtube.com/embed/_lOT2p_FCvA' 'frameborder='0'allowfullscreen></iframe></div>\"\n\n    >>> oc = OnlineContent('https://vimeo.com/groups/animation/videos/150618894/')\n    >>> oc.get_embed_code()\n    \"<div class='embed-container'> <iframe src='http://player.vimeo.com/video/150618894' frameborder='0' webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe></div>\"\n\n\n\n## To-do\n\n* Create test cases for automated testing\n* Provision Travis-CI for automatic building & testing\n* Add support for [conda](http://conda.pydata.org/docs/index.html)-based installation\n* Add more rich-content sites\n\n  - [x] Github gists\n  - [ ] Facebook status\n  - [ ] Facebook notes\n  - [ ] Scribd docs\n  - [ ] Imgur images\n\n\n## Contributors\n\n * Seed idea :  [A StackOverflow answer](http://stackoverflow.com/a/7936523) by [Mikhail Kashkin](http://stackoverflow.com/users/85739/mikhail-kashkin)\n * Author : [Khaled Monsoor](http://github.com/kmonsoor)\n * \n\nPlease try to contribute by submitting more content-sites with their different link formats and embed-codes. You can submit through pull-requests or by creating issue.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kmonsoor/embedX", "keywords": "embed,html,javascript,embeddable,code generation,from url", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "embedX", "package_url": "https://pypi.org/project/embedX/", "platform": "any", "project_url": "https://pypi.org/project/embedX/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/kmonsoor/embedX"}, "release_url": "https://pypi.org/project/embedX/0.0.7/", "requires_dist": null, "requires_python": null, "summary": "Generate responsive, embeddable HTML/JS code from URL of online content", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            [![License](https://img.shields.io/badge/license-MIT-blue.svg)](http://kmonsoor.mit-license.org/)<br>[![PyPI version](https://badge.fury.io/py/embedX.svg)](https://badge.fury.io/py/embedX)<br>[![Code Issues](https://www.quantifiedcode.com/api/v1/project/69f2bf7e3b404e6c90015053e48a1cbf/badge.svg)](https://www.quantifiedcode.com/app/project/69f2bf7e3b404e6c90015053e48a1cbf)<br><br># embedX<br><br>Generate embeddable HTML or JavaScript code for a online content from its URL in a single step.<br><br>The content can be anything like <br><br> * Youtube or Vimeo video,<br> * Twitter status,<br> * Github Gist,<br> etc.<br><br><br>Embeddable code-generation be simple like this:<br><br>    &gt;&gt;&gt; from embed_x import OnlineContent<br>    &gt;&gt;&gt; oc = OnlineContent('http://www.youtube.com/embed/_lOT2p_FCvA')<br>    &gt;&gt;&gt; oc.get_embed_code()<br>    \"&lt;div class='embedx-yt'&gt;&lt;iframe src='http://www.youtube.com/embed/_lOT2p_FCvA' 'frameborder='0' allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;\"<br><br>    <br><br>### Currently, supports<br><br> * Youtube video,<br> * Vimeo video,<br> * Twitter: single status,<br> * Github gist,<br> * Flickr image<br><br><br><br>### Examples of URLs<br><br>####  Valid<br><br> *  http://youtu.be/_lOT2p_FCvA<br> *  www.youtube.com/watch?v=_lOT2p_FCvA&amp;feature=feedu<br> *  http://www.youtube.com/embed/_lOT2p_FCvA<br> *  https://www.youtube.com/watch?v=rTHlyTphWP0&amp;index=6&amp;list=PLjeDyYvG6-40qawYNR4juzvSOg-ezZ2a6<br> *  youtube.com/watch?v=_lOT2p_FCvA<br> *  https://vimeo.com/groups/animation/videos/150618894/<br> *  https://vimeo.com/150519302<br> *  https://twitter.com/codinghorror/status/686254714938200064<br> *   <br><br>####  Invalid:<br><br> * youtu.be/watch?v=_lOT2p_FCvA  [ because Youtube don't give any url like this ]<br> * https://twitter.com/gvanrossum/with_replies<br> * <br><br><br><br>## Install<br><br>### from PyPI<br><br>    pip install embedx<br><br>### Directly from source<br><br>    pip install git+https://github.com/kmonsoor/embedX.git<br><br>## Requirements<br>    <br>    This library don't have any external dependencies other than standard Python installation.<br><br><br>## Usage<br><br>    &gt;&gt;&gt; from embedx import OnlineContent<br>    &gt;&gt;&gt; oc = OnlineContent('http://www.youtube.com/embed/_lOT2p_FCvA')<br>    &gt;&gt;&gt; oc.extract_id()<br>    '_lOT2p_FCvA'<br><br>    &gt;&gt;&gt; oc.get_embed_code()<br>    \"&lt;div class='embed-container'&gt;&lt;iframe src='http://www.youtube.com/embed/_lOT2p_FCvA' 'frameborder='0'allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;\"<br><br>    &gt;&gt;&gt; oc = OnlineContent('https://vimeo.com/groups/animation/videos/150618894/')<br>    &gt;&gt;&gt; oc.get_embed_code()<br>    \"&lt;div class='embed-container'&gt; &lt;iframe src='http://player.vimeo.com/video/150618894' frameborder='0' webkitAllowFullScreen mozallowfullscreen allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;\"<br><br><br><br>## To-do<br><br>* Create test cases for automated testing<br>* Provision Travis-CI for automatic building &amp; testing<br>* Add support for [conda](http://conda.pydata.org/docs/index.html)-based installation<br>* Add more rich-content sites<br><br>  - [x] Github gists<br>  - [ ] Facebook status<br>  - [ ] Facebook notes<br>  - [ ] Scribd docs<br>  - [ ] Imgur images<br><br><br>## Contributors<br><br> * Seed idea :  [A StackOverflow answer](http://stackoverflow.com/a/7936523) by [Mikhail Kashkin](http://stackoverflow.com/users/85739/mikhail-kashkin)<br> * Author : [Khaled Monsoor](http://github.com/kmonsoor)<br> * <br><br>Please try to contribute by submitting more content-sites with their different link formats and embed-codes. You can submit through pull-requests or by creating issue.\n          </div>"}, "last_serial": 2062780, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "2864ebe4d1219ede6d1548aad75e4a26", "sha256": "565d479c599a4a9edfa1473cc36444df4fd47bda31318bee64c561010858cd42"}, "downloads": -1, "filename": "embedX-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2864ebe4d1219ede6d1548aad75e4a26", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2220, "upload_time": "2016-01-12T20:33:01", "upload_time_iso_8601": "2016-01-12T20:33:01.667407Z", "url": "https://files.pythonhosted.org/packages/95/aa/2a32998b07599e2b75fb67bf27370716ae54c2cd78a99015c2a5e35592ec/embedX-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf7288ffec57a3285c28ec9914ceb1c7", "sha256": "f14818bf43f71990e1d21a97107d55ab4d747216e04893ee1aa9ab46602182a0"}, "downloads": -1, "filename": "embedX-0.0.3.tar.gz", "has_sig": false, "md5_digest": "bf7288ffec57a3285c28ec9914ceb1c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2740, "upload_time": "2016-01-12T20:33:09", "upload_time_iso_8601": "2016-01-12T20:33:09.769398Z", "url": "https://files.pythonhosted.org/packages/98/6b/3d78275adb1939b47a43f5c4ac4d02c22a998ae1ed4326f2f395cd46331a/embedX-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "f70f33273f9853e389999ed4c751f77d", "sha256": "33cecb9a2625f6dc4102c352d3af16c6ab5cc3a7ca0b4a853fcaec9908884824"}, "downloads": -1, "filename": "embedx-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f70f33273f9853e389999ed4c751f77d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7408, "upload_time": "2016-01-20T19:18:34", "upload_time_iso_8601": "2016-01-20T19:18:34.342181Z", "url": "https://files.pythonhosted.org/packages/39/50/b3ce31ec388767dfa707d8f10e3fb66bd1971080dfaeac277ef2a19abe07/embedx-0.0.4-py2.py3-none-any.whl", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "79627c459b893e7307e01722c1ec05e3", "sha256": "60bb9b4b1d0f1cfe9011718d8f38a5bf3e56653ef388a6bc15984d15c874f7b1"}, "downloads": -1, "filename": "embedx-0.0.5.tar.gz", "has_sig": false, "md5_digest": "79627c459b893e7307e01722c1ec05e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5974, "upload_time": "2016-01-24T15:43:10", "upload_time_iso_8601": "2016-01-24T15:43:10.987518Z", "url": "https://files.pythonhosted.org/packages/73/f8/ba3c80f85d33bb88635a10e99b7c56aefa342cc8d66109ad3bbe03328a17/embedx-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "4b77aba5b21a4f9a40d6f42e4fe0daad", "sha256": "2d8b8d883b5c79ec54e630c9196934b07b31261863dfd44cf1e809bebba40e64"}, "downloads": -1, "filename": "embedx-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4b77aba5b21a4f9a40d6f42e4fe0daad", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8112, "upload_time": "2016-02-06T18:47:26", "upload_time_iso_8601": "2016-02-06T18:47:26.266953Z", "url": "https://files.pythonhosted.org/packages/0a/4d/5c33a61be1220b27ff236af0ed4792fada3b6e9a48e37cf7058df70ba890/embedx-0.0.6-py2.py3-none-any.whl", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "128d405e2111099572c32f8064678f8f", "sha256": "c839247eb29f61b0646f6f8dcdbcd79c305bc775b415be6af796c2e81560336e"}, "downloads": -1, "filename": "embedx-0.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "128d405e2111099572c32f8064678f8f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7980, "upload_time": "2016-04-13T22:04:57", "upload_time_iso_8601": "2016-04-13T22:04:57.570318Z", "url": "https://files.pythonhosted.org/packages/cb/43/e4e41f23e822c913003b7a0814d3b6514ed19c66eea180220232cab031ac/embedx-0.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9946b36121313538c9c07b3cd40d3562", "sha256": "7e329c0af0fa927ef9b53e7fdb153d621249b0462581c4a46d8faa063be76a2e"}, "downloads": -1, "filename": "embedx-0.0.7.tar.gz", "has_sig": false, "md5_digest": "9946b36121313538c9c07b3cd40d3562", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6167, "upload_time": "2016-04-13T22:04:28", "upload_time_iso_8601": "2016-04-13T22:04:28.286464Z", "url": "https://files.pythonhosted.org/packages/0a/0e/d29b5c9727c9e5d516a23d771a5c083a78256095195a9db49e6e05613fd6/embedx-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "128d405e2111099572c32f8064678f8f", "sha256": "c839247eb29f61b0646f6f8dcdbcd79c305bc775b415be6af796c2e81560336e"}, "downloads": -1, "filename": "embedx-0.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "128d405e2111099572c32f8064678f8f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7980, "upload_time": "2016-04-13T22:04:57", "upload_time_iso_8601": "2016-04-13T22:04:57.570318Z", "url": "https://files.pythonhosted.org/packages/cb/43/e4e41f23e822c913003b7a0814d3b6514ed19c66eea180220232cab031ac/embedx-0.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9946b36121313538c9c07b3cd40d3562", "sha256": "7e329c0af0fa927ef9b53e7fdb153d621249b0462581c4a46d8faa063be76a2e"}, "downloads": -1, "filename": "embedx-0.0.7.tar.gz", "has_sig": false, "md5_digest": "9946b36121313538c9c07b3cd40d3562", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6167, "upload_time": "2016-04-13T22:04:28", "upload_time_iso_8601": "2016-04-13T22:04:28.286464Z", "url": "https://files.pythonhosted.org/packages/0a/0e/d29b5c9727c9e5d516a23d771a5c083a78256095195a9db49e6e05613fd6/embedx-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:40 2020"}