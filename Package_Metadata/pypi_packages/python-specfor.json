{"info": {"author": "bellbind", "author_email": "bellbind@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Testing"], "description": "It is inspired from Ruby's RSpec. \nSpec definition is based on Python decorator description.\n\nFeatures\n--------\n\n- Python decorator based \"Spec\" definition\n- \"Spec\" definition is compatible with ``unittest.TestCase``\n- Spec files can execute with ``unittest`` or ``nosetests``\n- RSpec like Expectation (e.g. ``the[xxx].should.be[yyy]``)\n- Decorator based \"Mock\" object definition\n- All features can be used independently: e.g. use spec with ``nose.tools``\n- Markdown document generator from spec file\n- Single code implementation for multi python version (2.5-2.7, 3.1)\n\n\nSpec Example\n------------\n\n::\n\n    # examples/sum_spec.py\n    from specfor import the, spec\n    \n    empty_list = spec.of(\"empty list\")\n    int_list = spec.of(\"int list\")\n        \n    @empty_list.before()\n    def prepare(its):\n        its.list = []\n        its.sum = 0\n    \n    @int_list.before()\n    def prepare(its):\n        its.list = [2, 3, 5, 7, 11]\n        its.sum = 28\n    \n    @empty_list.that(\"sum\")\n    @int_list.that(\"sum\")\n    def sum_spec(its):\n        result = sum(its.list)\n        the[result].should == its.sum\n    \n    spec.publish(globals())\n\nFor more detail, see `README.md\n<http://github.com/bellbind/python-specfor/blob/master/README.md>`_", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/bellbind/python-specfor", "keywords": "bdd,testing,unittest", "license": "http://www.gnu.org/copyleft/lesser.html", "maintainer": null, "maintainer_email": null, "name": "python-specfor", "package_url": "https://pypi.org/project/python-specfor/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/python-specfor/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/bellbind/python-specfor"}, "release_url": "https://pypi.org/project/python-specfor/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "A Framework for Behavior Driven Development(BDD) based on stdlib's unittest", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>It is inspired from Ruby\u2019s RSpec.\nSpec definition is based on Python decorator description.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Python decorator based \u201cSpec\u201d definition</li>\n<li>\u201cSpec\u201d definition is compatible with <tt>unittest.TestCase</tt></li>\n<li>Spec files can execute with <tt>unittest</tt> or <tt>nosetests</tt></li>\n<li>RSpec like Expectation (e.g. <tt><span class=\"pre\">the[xxx].should.be[yyy]</span></tt>)</li>\n<li>Decorator based \u201cMock\u201d object definition</li>\n<li>All features can be used independently: e.g. use spec with <tt>nose.tools</tt></li>\n<li>Markdown document generator from spec file</li>\n<li>Single code implementation for multi python version (2.5-2.7, 3.1)</li>\n</ul>\n</div>\n<div id=\"spec-example\">\n<h2>Spec Example</h2>\n<pre># examples/sum_spec.py\nfrom specfor import the, spec\n\nempty_list = spec.of(\"empty list\")\nint_list = spec.of(\"int list\")\n\n@empty_list.before()\ndef prepare(its):\n    its.list = []\n    its.sum = 0\n\n@int_list.before()\ndef prepare(its):\n    its.list = [2, 3, 5, 7, 11]\n    its.sum = 28\n\n@empty_list.that(\"sum\")\n@int_list.that(\"sum\")\ndef sum_spec(its):\n    result = sum(its.list)\n    the[result].should == its.sum\n\nspec.publish(globals())\n</pre>\n<p>For more detail, see <a href=\"http://github.com/bellbind/python-specfor/blob/master/README.md\" rel=\"nofollow\">README.md</a></p>\n</div>\n\n          </div>"}, "last_serial": 798091, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "3f3c93752c3f087296fe973a2c40decf", "sha256": "e560aea9cf7210a1832431f1421d733c1d18ac29aaffcdc99ad6555c46df5947"}, "downloads": -1, "filename": "python-specfor-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3f3c93752c3f087296fe973a2c40decf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23001, "upload_time": "2010-08-06T22:02:22", "upload_time_iso_8601": "2010-08-06T22:02:22.968610Z", "url": "https://files.pythonhosted.org/packages/a9/ca/cd846a0edb7767c610f7c0c95b118fd07d63162a832e62da4a149db99745/python-specfor-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3f3c93752c3f087296fe973a2c40decf", "sha256": "e560aea9cf7210a1832431f1421d733c1d18ac29aaffcdc99ad6555c46df5947"}, "downloads": -1, "filename": "python-specfor-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3f3c93752c3f087296fe973a2c40decf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23001, "upload_time": "2010-08-06T22:02:22", "upload_time_iso_8601": "2010-08-06T22:02:22.968610Z", "url": "https://files.pythonhosted.org/packages/a9/ca/cd846a0edb7767c610f7c0c95b118fd07d63162a832e62da4a149db99745/python-specfor-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:16 2020"}