{"info": {"author": "David Fritzsche", "author_email": "david.fritzsche@mvua.de", "bugtrack_url": null, "classifiers": ["Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: OS Independent", "Operating System :: POSIX", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Typing :: Typed"], "description": "<!--\nSPDX-FileCopyrightText: David Fritzsche\nSPDX-License-Identifier: CC0-1.0\n-->\n[![PyPI](https://img.shields.io/pypi/v/pytest-mypy-testing.svg)](https://pypi.python.org/pypi/pytest-mypy-testing)\n[![GitHub Action Status](https://github.com/davidfritzsche/pytest-mypy-testing/workflows/Python%20package/badge.svg)](https://github.com/davidfritzsche/pytest-mypy-testing/actions)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n\n# pytest-mypy-testing \u2014 Plugin to test mypy output with pytest\n\n`pytest-mypy-testing` provides a\n[pytest](https://pytest.readthedocs.io/en/latest/) plugin to test that\n[mypy](http://mypy-lang.org/) produces a given output. As mypy can be\ntold to [display the type of an\nexpression](https://mypy.readthedocs.io/en/latest/common_issues.html#displaying-the-type-of-an-expression)\nthis allows us to check mypys type interference.\n\n\n# Installation\n\n``` shell\npython -m pip install pytest-mypy-testing\n```\n\nThe Python distribution package contains an [entry\npoint](https://docs.pytest.org/en/latest/writing_plugins.html#making-your-plugin-installable-by-others)\nso that the plugin is automatically discovered by pytest. To disable\nthe plugin when it is installed , you can use the pytest command line\noption `-p no:mypy-testing`.\n\n\n# Writing Mypy Output Test Cases\n\nA mypy test case is a top-level functions decorated with\n`@pytest.mark.mypy_testing` in a file named `*.mypy-testing` or in a\npytest test module.  `pytest-mypy-testing` follows the pytest logic in\nidentifying test modules and respects the\n[`python_files`](https://docs.pytest.org/en/latest/reference.html#confval-python_files)\nconfig value.\n\nNote that ``pytest-mypy-testing`` uses the Python\n[ast](https://docs.python.org/3/library/ast.html) module to parse\ncandidate files and does not import any file, i.e., the decorator must\nbe exactly named `@pytest.mark.mypy_testing`.\n\nIn a pytest test module file you may combine both regular pytest test\nfunctions and mypy test functions. A single function can be both.\n\nExample: A simple mypy test case could look like this:\n\n``` python\n@pytest.mark.mypy_testing\ndef mypy_test_invalid_assginment() -> None:\n    foo = \"abc\"\n    foo = 123  # E: Incompatible types in assignment (expression has type \"int\", variable has type \"str\")\n```\n\nThe plugin runs mypy for every file containing at least one mypy test\ncase. The mypy output is then compared to special Python comments in\nthe file:\n\n* `# N: <msg>` - we expect a mypy note message\n* `# W: <msg>` - we expect a mypy warning message\n* `# E: <msg>` - we expect a mypy error message\n* `# R: <msg>` - we expect a mypy note message `Revealed type is\n  '<msg>'`. This is useful to easily check `reveal_type` output:\n     ```python\n     @pytest.mark.mypy_testing\n     def mypy_use_reveal_type():\n         reveal_type(123)  # N: Revealed type is 'Literal[123]?'\n         reveal_type(456)  # R: Literal[456]?\n     ```\n\n\n## Skipping and Expected Failures\n\nMypy test case functions can be decorated with `@pytest.mark.skip` and\n`@pytest.mark.xfail` to mark them as to-be-skipped and as\nexpected-to-fail, respectively. As with the\n`@pytest.mark.mypy_testing` mark, the names must match exactly as the\ndecorators are extracted from the ast.\n\n\n# Development\n\n* Create and activate a Python virtual environment.\n* Install development dependencies by calling `python -m pip install\n  -U -r requirements.txt`.\n* Start developing.\n* To run all tests with [tox](https://tox.readthedocs.io/en/latest/),\n  Python 3.6, 3.7 and 3.8 must be available. You might want to look\n  into using [pyenv](https://github.com/pyenv/pyenv).\n\n\n# Changelog\n\n## v0.0.7\n\n* Fix `PYTEST_VERSION_INFO` - by [@blueyed](https://github.com/blueyed) (#8)\n* Always pass `--check-untyped-defs` to mypy (#11)\n* Respect pytest config `python_files` when identifying pytest test modules (#12)\n\n## v0.0.6 - add pytest 5.4 support\n\n* Update the plugin to work with pytest 5.4 (#7)\n\n## v0.0.5 - CI improvements\n\n* Make invoke tasks work (partially) on Windows (#6)\n* Add an invoke task to run tox environments by selecting globs (e.g.,\n  `inv tox -e py-*`) (#6)\n* Use coverage directly for code coverage to get more consistent\n  parallel run results (#6)\n* Use flit fork dflit to make packaging work with `LICENSES` directory\n  (#6)\n* Bump dependencies (#6)\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/davidfritzsche/pytest-mypy-testing", "keywords": "", "license": "Apache-2.0 OR MIT", "maintainer": "", "maintainer_email": "", "name": "pytest-mypy-testing", "package_url": "https://pypi.org/project/pytest-mypy-testing/", "platform": "", "project_url": "https://pypi.org/project/pytest-mypy-testing/", "project_urls": {"Homepage": "https://github.com/davidfritzsche/pytest-mypy-testing"}, "release_url": "https://pypi.org/project/pytest-mypy-testing/0.0.7/", "requires_dist": ["pytest", "mypy"], "requires_python": ">=3.6", "summary": "Pytest plugin to check mypy output.", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/pytest-mypy-testing\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf9eb9c0964973e8b22eee385e6e6cc0971e6bbe/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079746573742d6d7970792d74657374696e672e737667\"></a>\n<a href=\"https://github.com/davidfritzsche/pytest-mypy-testing/actions\" rel=\"nofollow\"><img alt=\"GitHub Action Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9bcf4d17268e1ded6e8858745530f9ce5fb8825/68747470733a2f2f6769746875622e636f6d2f6461766964667269747a736368652f7079746573742d6d7970792d74657374696e672f776f726b666c6f77732f507974686f6e2532307061636b6167652f62616467652e737667\"></a>\n<a href=\"https://opensource.org/licenses/Apache-2.0\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b97ca76cf5d8fd16c7bc4731270e0bbe53df7aa1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a></p>\n<h1>pytest-mypy-testing \u2014 Plugin to test mypy output with pytest</h1>\n<p><code>pytest-mypy-testing</code> provides a\n<a href=\"https://pytest.readthedocs.io/en/latest/\" rel=\"nofollow\">pytest</a> plugin to test that\n<a href=\"http://mypy-lang.org/\" rel=\"nofollow\">mypy</a> produces a given output. As mypy can be\ntold to <a href=\"https://mypy.readthedocs.io/en/latest/common_issues.html#displaying-the-type-of-an-expression\" rel=\"nofollow\">display the type of an\nexpression</a>\nthis allows us to check mypys type interference.</p>\n<h1>Installation</h1>\n<pre>python -m pip install pytest-mypy-testing\n</pre>\n<p>The Python distribution package contains an <a href=\"https://docs.pytest.org/en/latest/writing_plugins.html#making-your-plugin-installable-by-others\" rel=\"nofollow\">entry\npoint</a>\nso that the plugin is automatically discovered by pytest. To disable\nthe plugin when it is installed , you can use the pytest command line\noption <code>-p no:mypy-testing</code>.</p>\n<h1>Writing Mypy Output Test Cases</h1>\n<p>A mypy test case is a top-level functions decorated with\n<code>@pytest.mark.mypy_testing</code> in a file named <code>*.mypy-testing</code> or in a\npytest test module.  <code>pytest-mypy-testing</code> follows the pytest logic in\nidentifying test modules and respects the\n<a href=\"https://docs.pytest.org/en/latest/reference.html#confval-python_files\" rel=\"nofollow\"><code>python_files</code></a>\nconfig value.</p>\n<p>Note that <code>pytest-mypy-testing</code> uses the Python\n<a href=\"https://docs.python.org/3/library/ast.html\" rel=\"nofollow\">ast</a> module to parse\ncandidate files and does not import any file, i.e., the decorator must\nbe exactly named <code>@pytest.mark.mypy_testing</code>.</p>\n<p>In a pytest test module file you may combine both regular pytest test\nfunctions and mypy test functions. A single function can be both.</p>\n<p>Example: A simple mypy test case could look like this:</p>\n<pre><span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">mypy_testing</span>\n<span class=\"k\">def</span> <span class=\"nf\">mypy_test_invalid_assginment</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"s2\">\"abc\"</span>\n    <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"mi\">123</span>  <span class=\"c1\"># E: Incompatible types in assignment (expression has type \"int\", variable has type \"str\")</span>\n</pre>\n<p>The plugin runs mypy for every file containing at least one mypy test\ncase. The mypy output is then compared to special Python comments in\nthe file:</p>\n<ul>\n<li><code># N: &lt;msg&gt;</code> - we expect a mypy note message</li>\n<li><code># W: &lt;msg&gt;</code> - we expect a mypy warning message</li>\n<li><code># E: &lt;msg&gt;</code> - we expect a mypy error message</li>\n<li><code># R: &lt;msg&gt;</code> - we expect a mypy note message <code>Revealed type is '&lt;msg&gt;'</code>. This is useful to easily check <code>reveal_type</code> output:\n<pre><span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">mypy_testing</span>\n<span class=\"k\">def</span> <span class=\"nf\">mypy_use_reveal_type</span><span class=\"p\">():</span>\n    <span class=\"n\">reveal_type</span><span class=\"p\">(</span><span class=\"mi\">123</span><span class=\"p\">)</span>  <span class=\"c1\"># N: Revealed type is 'Literal[123]?'</span>\n    <span class=\"n\">reveal_type</span><span class=\"p\">(</span><span class=\"mi\">456</span><span class=\"p\">)</span>  <span class=\"c1\"># R: Literal[456]?</span>\n</pre>\n</li>\n</ul>\n<h2>Skipping and Expected Failures</h2>\n<p>Mypy test case functions can be decorated with <code>@pytest.mark.skip</code> and\n<code>@pytest.mark.xfail</code> to mark them as to-be-skipped and as\nexpected-to-fail, respectively. As with the\n<code>@pytest.mark.mypy_testing</code> mark, the names must match exactly as the\ndecorators are extracted from the ast.</p>\n<h1>Development</h1>\n<ul>\n<li>Create and activate a Python virtual environment.</li>\n<li>Install development dependencies by calling <code>python -m pip install -U -r requirements.txt</code>.</li>\n<li>Start developing.</li>\n<li>To run all tests with <a href=\"https://tox.readthedocs.io/en/latest/\" rel=\"nofollow\">tox</a>,\nPython 3.6, 3.7 and 3.8 must be available. You might want to look\ninto using <a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\">pyenv</a>.</li>\n</ul>\n<h1>Changelog</h1>\n<h2>v0.0.7</h2>\n<ul>\n<li>Fix <code>PYTEST_VERSION_INFO</code> - by <a href=\"https://github.com/blueyed\" rel=\"nofollow\">@blueyed</a> (#8)</li>\n<li>Always pass <code>--check-untyped-defs</code> to mypy (#11)</li>\n<li>Respect pytest config <code>python_files</code> when identifying pytest test modules (#12)</li>\n</ul>\n<h2>v0.0.6 - add pytest 5.4 support</h2>\n<ul>\n<li>Update the plugin to work with pytest 5.4 (#7)</li>\n</ul>\n<h2>v0.0.5 - CI improvements</h2>\n<ul>\n<li>Make invoke tasks work (partially) on Windows (#6)</li>\n<li>Add an invoke task to run tox environments by selecting globs (e.g.,\n<code>inv tox -e py-*</code>) (#6)</li>\n<li>Use coverage directly for code coverage to get more consistent\nparallel run results (#6)</li>\n<li>Use flit fork dflit to make packaging work with <code>LICENSES</code> directory\n(#6)</li>\n<li>Bump dependencies (#6)</li>\n</ul>\n\n          </div>"}, "last_serial": 7096886, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "668129b535cbac9125410c8b755c4deb", "sha256": "a9eded9fc0d7e941631a23254f1772cfad1ee9d0bda7566885b609bbd843272e"}, "downloads": -1, "filename": "pytest_mypy_testing-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "668129b535cbac9125410c8b755c4deb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.6", "size": 10707, "upload_time": "2020-01-05T00:47:46", "upload_time_iso_8601": "2020-01-05T00:47:46.129565Z", "url": "https://files.pythonhosted.org/packages/30/ac/0c54e45a06212cee2db3656b720fe0873790c17bf8473d255077b57b04c7/pytest_mypy_testing-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "387caa28bf2e38a9e7231259405435bc", "sha256": "96d4b3c61ab72d288168594b384f916f93319d7f5d16efef0b90de688d8a8f21"}, "downloads": -1, "filename": "pytest-mypy-testing-0.0.2.tar.gz", "has_sig": false, "md5_digest": "387caa28bf2e38a9e7231259405435bc", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 16134, "upload_time": "2020-01-05T00:47:50", "upload_time_iso_8601": "2020-01-05T00:47:50.406450Z", "url": "https://files.pythonhosted.org/packages/d0/78/502821427665e724d53ba87e93224d68bde662588251c58950c8fbc29a57/pytest-mypy-testing-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ad8567bda60d000b0853cb57e9cb574c", "sha256": "ea1ab89f679177388bb956922fc5a9074ae4ded521da459038bbde52a4b68fd9"}, "downloads": -1, "filename": "pytest_mypy_testing-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ad8567bda60d000b0853cb57e9cb574c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18731, "upload_time": "2020-01-06T23:58:00", "upload_time_iso_8601": "2020-01-06T23:58:00.810650Z", "url": "https://files.pythonhosted.org/packages/17/ef/2c3b0b2a5d9cc703060bd19bc60c28d61b217c3e5f3ce8b0305d91bab50b/pytest_mypy_testing-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41d7a9e79c9f06ac356011a44c05e84e", "sha256": "729935f7c00a43d6fbf069cdd3721adccca6716ae255e94c68ab5b19e54a2f48"}, "downloads": -1, "filename": "pytest-mypy-testing-0.0.3.tar.gz", "has_sig": false, "md5_digest": "41d7a9e79c9f06ac356011a44c05e84e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23093, "upload_time": "2020-01-06T23:58:02", "upload_time_iso_8601": "2020-01-06T23:58:02.551893Z", "url": "https://files.pythonhosted.org/packages/62/9e/affb5109a822ad28834f9241ce4de83ce4ea4f541ab47ec429b37ebc2416/pytest-mypy-testing-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "78fcb7ba66d3d987d7e5f64f970fac5c", "sha256": "1c706c658f7451f83cc4809ed62a2c50a7253b1047f9890e0080dc048fab69ad"}, "downloads": -1, "filename": "pytest_mypy_testing-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "78fcb7ba66d3d987d7e5f64f970fac5c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19246, "upload_time": "2020-01-16T22:59:22", "upload_time_iso_8601": "2020-01-16T22:59:22.939336Z", "url": "https://files.pythonhosted.org/packages/6f/4f/accd920909dbbe0f40301abcd923e3587c347b4d39ee87ec7df49d6a0287/pytest_mypy_testing-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0491654cad452318fa39f1e02d325bc6", "sha256": "d20e0ee4efcd4d60414b2b022da643460ee8cb938b3c623c61947b1708c7b168"}, "downloads": -1, "filename": "pytest-mypy-testing-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0491654cad452318fa39f1e02d325bc6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24008, "upload_time": "2020-01-16T22:59:27", "upload_time_iso_8601": "2020-01-16T22:59:27.140871Z", "url": "https://files.pythonhosted.org/packages/ea/25/0243a88656a3cf66af33cf33ba3a2f54fa534ee33832965ef05bee89cb5f/pytest-mypy-testing-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "83bf1f5ee1f4418609646d4618913a14", "sha256": "eb348d1fface7ae4d43e2bb6894f3b8eb6fe109ddc3b038209e1bccb7906a5d8"}, "downloads": -1, "filename": "pytest_mypy_testing-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "83bf1f5ee1f4418609646d4618913a14", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19246, "upload_time": "2020-03-29T09:54:02", "upload_time_iso_8601": "2020-03-29T09:54:02.583563Z", "url": "https://files.pythonhosted.org/packages/a8/7e/50dfe804606ae270f7cebde782addf6dbb778382200813574d55203579bb/pytest_mypy_testing-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "291daa227c08ee36bb057825c0a7136f", "sha256": "b6d84e66f8ebcfc420037ce6123ffbe833f8e123cfffb49f785784c51c59935b"}, "downloads": -1, "filename": "pytest-mypy-testing-0.0.5.tar.gz", "has_sig": false, "md5_digest": "291daa227c08ee36bb057825c0a7136f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24573, "upload_time": "2020-03-29T09:54:07", "upload_time_iso_8601": "2020-03-29T09:54:07.302805Z", "url": "https://files.pythonhosted.org/packages/33/4b/c96440ae7d97ec550c82b8ea7f72762e6b291ff671a539d76fc1ab06282f/pytest-mypy-testing-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "dbfd82fd2da16f8b1c85a4ebb94809d7", "sha256": "7f760fdbe6b0474ac3986851d3e6a22f4fb351a7bc305a9dc35522327f08994d"}, "downloads": -1, "filename": "pytest_mypy_testing-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "dbfd82fd2da16f8b1c85a4ebb94809d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19479, "upload_time": "2020-03-29T15:06:35", "upload_time_iso_8601": "2020-03-29T15:06:35.873775Z", "url": "https://files.pythonhosted.org/packages/bb/cd/b9c5265b2f866514b0808f166824272ad29a2b57723bba69bffc47e8ab5a/pytest_mypy_testing-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a9f6bf23572c84083a924ab3086c389", "sha256": "dd460904e3d37868e38f87aa23d24a70c910e5546707d5c2f90f20e5c55c5436"}, "downloads": -1, "filename": "pytest-mypy-testing-0.0.6.tar.gz", "has_sig": false, "md5_digest": "3a9f6bf23572c84083a924ab3086c389", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24950, "upload_time": "2020-03-29T15:06:39", "upload_time_iso_8601": "2020-03-29T15:06:39.350917Z", "url": "https://files.pythonhosted.org/packages/38/c6/24643a0b7c14fa37cd2ff36008a8a655f3da53c149d657ac1d2416784630/pytest-mypy-testing-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "0c67f740aed2cbea2c8d0adad1c98f48", "sha256": "cf46090a42cf52135cf291b11c8d2abc9bc4880795430018731b3fb8f0086d0e"}, "downloads": -1, "filename": "pytest_mypy_testing-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "0c67f740aed2cbea2c8d0adad1c98f48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20062, "upload_time": "2020-04-24T23:00:26", "upload_time_iso_8601": "2020-04-24T23:00:26.343576Z", "url": "https://files.pythonhosted.org/packages/08/b8/2b00c44ec43d74c6f363710b78772a655693a0c663ebd4c43d823d39e0cf/pytest_mypy_testing-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba37336721b82f711f8ac5b9ad5c3077", "sha256": "72b39e5a594773a927d7329757b6ccb272ecf3b6fddbdd1b9dfb74d1adfd347f"}, "downloads": -1, "filename": "pytest-mypy-testing-0.0.7.tar.gz", "has_sig": false, "md5_digest": "ba37336721b82f711f8ac5b9ad5c3077", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25590, "upload_time": "2020-04-24T23:00:29", "upload_time_iso_8601": "2020-04-24T23:00:29.803808Z", "url": "https://files.pythonhosted.org/packages/67/32/7d37ca4a6e4524daac96b17783ccdd8d03e3be1a055665d8f41e50de33e4/pytest-mypy-testing-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0c67f740aed2cbea2c8d0adad1c98f48", "sha256": "cf46090a42cf52135cf291b11c8d2abc9bc4880795430018731b3fb8f0086d0e"}, "downloads": -1, "filename": "pytest_mypy_testing-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "0c67f740aed2cbea2c8d0adad1c98f48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20062, "upload_time": "2020-04-24T23:00:26", "upload_time_iso_8601": "2020-04-24T23:00:26.343576Z", "url": "https://files.pythonhosted.org/packages/08/b8/2b00c44ec43d74c6f363710b78772a655693a0c663ebd4c43d823d39e0cf/pytest_mypy_testing-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba37336721b82f711f8ac5b9ad5c3077", "sha256": "72b39e5a594773a927d7329757b6ccb272ecf3b6fddbdd1b9dfb74d1adfd347f"}, "downloads": -1, "filename": "pytest-mypy-testing-0.0.7.tar.gz", "has_sig": false, "md5_digest": "ba37336721b82f711f8ac5b9ad5c3077", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25590, "upload_time": "2020-04-24T23:00:29", "upload_time_iso_8601": "2020-04-24T23:00:29.803808Z", "url": "https://files.pythonhosted.org/packages/67/32/7d37ca4a6e4524daac96b17783ccdd8d03e3be1a055665d8f41e50de33e4/pytest-mypy-testing-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:56 2020"}