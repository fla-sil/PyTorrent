{"info": {"author": "Richard Jones", "author_email": "rjones@ekit-inc.com", "bugtrack_url": null, "classifiers": [], "description": "Caching PyPI Proxy\n==================\n\n.. warning::\n   Don't use this software. Use devpi_ instead!\n\n.. _devpi: https://pypi.python.org/pypi/devpi\n\n\nUse proxypypi to set up a transparent caching proxy to PyPI\n(https://pypy.python.org/) to:\n\n1. make your installs res/ilient against Internet/PyPI issues,\n2. speed up your installs significantly (after the first one),\n3. prevent problems installing packages that are removed from distribution by\n   the author,\n4. allow installation of packages from within a firewalled environment where\n   the host performing the installation does not have Internet access, and\n5. allow hosting and installation of private packages.\n\nWhen the proxy is asked about a package it doesn't know it automatically goes\noff and fetches the file download list for the package, rewriting all\nreferences (PyPI and external) so they appear to be local. On request of one\nof those now-local package file references it performs a background fetch of\nthe file contents and serves up the new file data to the pip request (thus\nkeeping that request alive despite its very short timeout duration).\n\n\nWhy Another One?\n----------------\n\nThere's a lot of PyPI-alike implementations and \"proxy\" servers out there.\nThis proxy differs from almost all others (save devpi-server) in that it\nautomatically relocates package download files from the Internet to your local\nserver. It differs from devpi-server in that it has no external database\nrequirement (just a filesystem is needed) making deployment much simpler (at\nleast for me).\n\n\nUsage\n-----\n\nSetup of proxypypi requires:\n\n1. \"pip install proxypypi\"\n2. cd to some directory you would like files to be cached in\n3. proxypypi run\n\nThere are some command-line arguments (see \"proxypypi -h\") that allow some\nrun-time behaviour control. Notably \"-d\" which can configure the directory\nto cache in.\n\nAdditionally the proxy may run in the background, in which case you need to\nsupply three additional command-line arguments: \"-P\" (PID file), \"-l\" (log\nfile) and \"-o\" (console output file) and use one of the daemon control commands\ninstead of \"run\". See \"proxypypi -h\" for the commands.\n\nOnce running you may perform pip installs using the proxy by including the\nproxy in the pip command line using the \"-i\" argument:\n\n   pip install -i http://proxy_host:proxy_port/simple/ package_to_install\n\nAny packages not cached will be fetched into the cache and the install will\ncontinue as normal.\n\n\nPrivate (or Manually Downloaded) Packages\n-----------------------------------------\n\nPackage distribution files added to the root of the package directory served\nby proxypypi will be served alongside those it proxies requests for. You may,\nif you wish, make package-named subdirectories, but it's not necessary.\n\n\nUpgrading Cached Packages\n-------------------------\n\nThis isn't done yet :-)\n\n\nVersion History\n---------------\n\n- 1.0 first public releae\n- 1.0.1 clear up handling of paths to daemon files\n- 1.2 handle external files that don't exist (issue 1, thanks George Hickman)\n- 1.2.1 fix a name collision issue\n- 1.2.2 remove partial download for missing external file", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/r1chardj0n3s/proxypypi", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "proxypypi", "package_url": "https://pypi.org/project/proxypypi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/proxypypi/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/r1chardj0n3s/proxypypi"}, "release_url": "https://pypi.org/project/proxypypi/1.2.2/", "requires_dist": null, "requires_python": null, "summary": "A PyPI caching proxy", "version": "1.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<p>Warning</p>\n<p>Don\u2019t use this software. Use <a href=\"https://pypi.python.org/pypi/devpi\" rel=\"nofollow\">devpi</a> instead!</p>\n</div>\n<p>Use proxypypi to set up a transparent caching proxy to PyPI\n(<a href=\"https://pypy.python.org/\" rel=\"nofollow\">https://pypy.python.org/</a>) to:</p>\n<ol>\n<li>make your installs res/ilient against Internet/PyPI issues,</li>\n<li>speed up your installs significantly (after the first one),</li>\n<li>prevent problems installing packages that are removed from distribution by\nthe author,</li>\n<li>allow installation of packages from within a firewalled environment where\nthe host performing the installation does not have Internet access, and</li>\n<li>allow hosting and installation of private packages.</li>\n</ol>\n<p>When the proxy is asked about a package it doesn\u2019t know it automatically goes\noff and fetches the file download list for the package, rewriting all\nreferences (PyPI and external) so they appear to be local. On request of one\nof those now-local package file references it performs a background fetch of\nthe file contents and serves up the new file data to the pip request (thus\nkeeping that request alive despite its very short timeout duration).</p>\n<div id=\"why-another-one\">\n<h2>Why Another One?</h2>\n<p>There\u2019s a lot of PyPI-alike implementations and \u201cproxy\u201d servers out there.\nThis proxy differs from almost all others (save devpi-server) in that it\nautomatically relocates package download files from the Internet to your local\nserver. It differs from devpi-server in that it has no external database\nrequirement (just a filesystem is needed) making deployment much simpler (at\nleast for me).</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Setup of proxypypi requires:</p>\n<ol>\n<li>\u201cpip install proxypypi\u201d</li>\n<li>cd to some directory you would like files to be cached in</li>\n<li>proxypypi run</li>\n</ol>\n<p>There are some command-line arguments (see \u201cproxypypi -h\u201d) that allow some\nrun-time behaviour control. Notably \u201c-d\u201d which can configure the directory\nto cache in.</p>\n<p>Additionally the proxy may run in the background, in which case you need to\nsupply three additional command-line arguments: \u201c-P\u201d (PID file), \u201c-l\u201d (log\nfile) and \u201c-o\u201d (console output file) and use one of the daemon control commands\ninstead of \u201crun\u201d. See \u201cproxypypi -h\u201d for the commands.</p>\n<p>Once running you may perform pip installs using the proxy by including the\nproxy in the pip command line using the \u201c-i\u201d argument:</p>\n<blockquote>\npip install -i <a href=\"http://proxy_host:proxy_port/simple/\" rel=\"nofollow\">http://proxy_host:proxy_port/simple/</a> package_to_install</blockquote>\n<p>Any packages not cached will be fetched into the cache and the install will\ncontinue as normal.</p>\n</div>\n<div id=\"private-or-manually-downloaded-packages\">\n<h2>Private (or Manually Downloaded) Packages</h2>\n<p>Package distribution files added to the root of the package directory served\nby proxypypi will be served alongside those it proxies requests for. You may,\nif you wish, make package-named subdirectories, but it\u2019s not necessary.</p>\n</div>\n<div id=\"upgrading-cached-packages\">\n<h2>Upgrading Cached Packages</h2>\n<p>This isn\u2019t done yet :-)</p>\n</div>\n<div id=\"version-history\">\n<h2>Version History</h2>\n<ul>\n<li>1.0 first public releae</li>\n<li>1.0.1 clear up handling of paths to daemon files</li>\n<li>1.2 handle external files that don\u2019t exist (issue 1, thanks George Hickman)</li>\n<li>1.2.1 fix a name collision issue</li>\n<li>1.2.2 remove partial download for missing external file</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1178061, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "9d03edc9859b5825af9e432b9ca0fb95", "sha256": "aecd7c4e904e9edb199f2755d461b610c85e830ff5d76f9fc63fac133371b542"}, "downloads": -1, "filename": "proxypypi-1.0.tar.gz", "has_sig": false, "md5_digest": "9d03edc9859b5825af9e432b9ca0fb95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10142, "upload_time": "2013-05-07T06:55:36", "upload_time_iso_8601": "2013-05-07T06:55:36.056069Z", "url": "https://files.pythonhosted.org/packages/b2/a5/c5bc2c57db3b94446bfc5934b2bd94169e839388a54ab059387944732985/proxypypi-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "9e7b7cbda567adfefa7ceec91a552989", "sha256": "bd20a68a465b3c17fecf65accb4846c07f6d2bdec9e61d2ce026f43d7bc7add4"}, "downloads": -1, "filename": "proxypypi-1.0.1.tar.gz", "has_sig": false, "md5_digest": "9e7b7cbda567adfefa7ceec91a552989", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10289, "upload_time": "2013-05-07T07:03:54", "upload_time_iso_8601": "2013-05-07T07:03:54.759015Z", "url": "https://files.pythonhosted.org/packages/ed/3f/fc887aa2a9485e885e6d700116d78e276c1d938720cb8bbd3a2143cdc68b/proxypypi-1.0.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "5e56269bb97e782f0ac98348774edf0a", "sha256": "5149430873172280ba75b40c9c55a2228b7bad7553a052f20ae5ad523209817e"}, "downloads": -1, "filename": "proxypypi-1.2.tar.gz", "has_sig": true, "md5_digest": "5e56269bb97e782f0ac98348774edf0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11215, "upload_time": "2013-05-13T04:04:44", "upload_time_iso_8601": "2013-05-13T04:04:44.586268Z", "url": "https://files.pythonhosted.org/packages/de/3c/bcd48bb4dd12610018070be1183b18fef607f3185946ce87dfe3161c55a7/proxypypi-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "6e8ceaf7e197c51a1e090e1c2060cef1", "sha256": "b9d7d0ea4d647f8b64bba18a6c6ec778d4258cbe742d84ca39b06bea6be71946"}, "downloads": -1, "filename": "proxypypi-1.2.1.tar.gz", "has_sig": true, "md5_digest": "6e8ceaf7e197c51a1e090e1c2060cef1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11247, "upload_time": "2013-05-14T00:42:34", "upload_time_iso_8601": "2013-05-14T00:42:34.911096Z", "url": "https://files.pythonhosted.org/packages/22/4a/5099c42380b7d72d8d7b6b20191bc458b0b090ed38ba324e75682b4832be/proxypypi-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "fd4b6bd49a769e54b76885d2677ad493", "sha256": "72783899ddee7913a657d3ae6f668a2a6f05434602daa7ab5d49fab34392c0c1"}, "downloads": -1, "filename": "proxypypi-1.2.2.tar.gz", "has_sig": false, "md5_digest": "fd4b6bd49a769e54b76885d2677ad493", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11298, "upload_time": "2013-05-14T05:37:50", "upload_time_iso_8601": "2013-05-14T05:37:50.032422Z", "url": "https://files.pythonhosted.org/packages/75/2d/eae11d68cd9e1e01eea95fea2f51d76782a8dba3fda10904b6646962d6cd/proxypypi-1.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fd4b6bd49a769e54b76885d2677ad493", "sha256": "72783899ddee7913a657d3ae6f668a2a6f05434602daa7ab5d49fab34392c0c1"}, "downloads": -1, "filename": "proxypypi-1.2.2.tar.gz", "has_sig": false, "md5_digest": "fd4b6bd49a769e54b76885d2677ad493", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11298, "upload_time": "2013-05-14T05:37:50", "upload_time_iso_8601": "2013-05-14T05:37:50.032422Z", "url": "https://files.pythonhosted.org/packages/75/2d/eae11d68cd9e1e01eea95fea2f51d76782a8dba3fda10904b6646962d6cd/proxypypi-1.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:17 2020"}