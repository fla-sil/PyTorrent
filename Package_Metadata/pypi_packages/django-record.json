{"info": {"author": "Ha Junsoo", "author_email": "kuc2477@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4"], "description": "*************\ndjango-record\n*************\n.. image:: https://img.shields.io/pypi/l/django-record.svg\n   :target: https://img.shields.io/pypi/django-record\n.. image:: https://secure.travis-ci.org/kuc2477/django-record.png?branch=master\n   :target: http://travis-ci.org/kuc2477/django-record\n.. image:: https://coveralls.io/repos/kuc2477/django-record/badge.svg?branch=master\n   :target: https://coveralls.io/r/kuc2477/django-record?branch=master\n.. image:: https://img.shields.io/pypi/v/django-record.svg\n   :target: https://img.shields.io/pypi/django-record\n.. image:: https://img.shields.io/pypi/dm/django-record.svg\n   :target: https://img.shields.io/pypi/django-record\n   :alt: Latest Version\n\n\nAuthor\n======\n* `Ha Junsoo <kuc2477@gmail.com>`_\n\n\nRequirements\n============\n* Tested against Python 2.7 and 3.4\n* *django-record* supports `django <https://github.com/django/django>`_ 1.7 or later.\n* Requires `pandas <https://github.com/pydaya/pandas>`__ 0.17.0 or later.\n* Requires `faker <https://github.com/joke2k/faker>`_ for tests.\n\n\nInstallation\n============\n``pip install django-record``\n\n\nRationale\n=========\nOften there are situations where you want to record your properties of your models and\nwhere you want to track their changes. Although that recording process can be implemented\nby `handcrafted, ad-hoc signals`_ or `overriding save() methods of your models`_, it's\nnot a generic way, and **it'll eventually mess up your code base**.\n\n*django-record* **automatically creates an snapshot-like extra record** when an audited \nDjango model instance has been changed **either directly or indirectly**,\nwithout messing up your code base.\n\n``RecordModel`` will detect any changes in ``recording_fields`` of\n``recording_model`` at it's ``post_save`` time or ``auditing_relatives``'s\n``post_save`` time and create an new record for it. \n\nYou can access records via record manager ``records`` in your recorded model\ninstance. You can also access recorded model's instance via ``recording``, \nwhich is in effect just ordinary ``ForeignKey``, from your records.\n\nMore conveniently, **just mix** ``RecordedModelMixin`` into your model and provide \n``recording_fields`` and ``auditing_relatives``.\n\n.. _`handcrafted, ad-hoc signals`: https://djangosnippets.org/snippets/500/\n.. _`overriding save() methods of your models`: https://trickveda.wordpress.com/2014/01/22/overriding-save-method-in-django-models/\n\n\nUsage\n=====\n.. code-block:: python\n\n   from django.db import models\n   from django_record.mixins import RecordedModelMixin\n\n\n   class MyTopic(models.Model):\n       title = models.CharField(max_length=100)\n\n\n   class MyArticle(RecordedModelMixin, models.Model):\n       topic = models.ForeignKey(MyTopic)\n       text = models.TextField()\n\n       @property\n       def my_local_property(self):\n           return self.text\n      \n       @property\n       def my_nonlocal_property(self):\n           return self.topic.title + self.text\n       \n       # We will monitor `topic` relative to watch if he changes!\n       auditing_relatives = ['topic']\n\n       recording_fields = [\n           # Record changes of the model instance's `text` field\n           'text', \n           # Yayy! we can record changes on properties too!\n           ('my_local_property', models.TextField()),\n           # Even indirect effects from relatives are recordable!\n           ('my_nonlocal_property', models.TextField())\n       ] \n\n\n    # To get the model instance's all records\n    >>> my_article.records.all()\n\n    # To get queryset of the model instance's records created in specific \n    # time threshold\n    >>> my_article.records.created_in_years(2)\n    >>> my_article.records.created_in_days(3)\n    >>> my_article.records.created_in_minutes(5)\n\n    # To resample records of today by hour\n    >>> my_article.records.created_in_days().resample('T')\n\n    # To get record contents\n    >>> my_article.records.first().text\n    >>> my_article.records.first().my_local_property\n    >>> my_article.records.first().my_nonlocal_property\n\n\nNote\n====\n* **Recursive auditing is currently not supported.** Indirect effect only those \n  from direct relatives will be detected and recorded.\n* **Only primitive types are supported for properties.** You must offer appropriate django field for them.\n* ``RecordModel`` is also a subclass of ``TimeStampedModel``, so make sure that\n  you don't record either 'created' or 'modified' fields.\n\n\n=======\nChanges\n=======\n\n11.09.2015 (0.2.5 release)\n==========================\n* Renamed TimeStampedModel to AbstractTimeStampedModel.\n* Replaced monkey patched shortcut properties with ``RecordQueryset`` filters.\n  Those shortcut properties are now deprecated.\n\n09.20.2015\n==========\n* Support Python 3.4\n\n06.13.2015\n==========\n* Following shortcut properties added to *recording_model*. All of properties\n  below are ordinary django querysets.\n\n  * ``records_in_hour``: Records created in last recent hour.\n  * ``records_in_day``: Records created today.\n  * ``records_in_week``: Records created in this week.\n  * ``records_in_month``: Records created in this month.\n  * ``records_in_year``: Records created in this year.\n\n* Following shortcut properties providing resampled records has been added to\n  *recording_model*.  All of properties below are ordinary django querysets.\n\n  * ``resampled_records_in_hour``: Records created in last recent hour, \n    resampled with minutes.\n  * ``resampled_records_in_day``: Records created today, resampled with hours.\n  * ``resampled_records_in_week``: Records created in this week, resamped with\n    days.\n  * ``resampled_records_in_month``: Records created in this month, resampled \n    with days.\n  * ``resamped_records_in_year``: Records created in this year, resampled with\n    months.\n\n05.18.2015\n==========\n* ``RecordedModelMixin`` added.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kuc2477/django-record/", "keywords": "", "license": "GNU General Public License v2 (GPLv2)", "maintainer": "", "maintainer_email": "", "name": "django-record", "package_url": "https://pypi.org/project/django-record/", "platform": "OS Independent", "project_url": "https://pypi.org/project/django-record/", "project_urls": {"Homepage": "https://github.com/kuc2477/django-record/"}, "release_url": "https://pypi.org/project/django-record/0.2.5/", "requires_dist": null, "requires_python": "", "summary": "Models and mixins for recording changes in Django models", "version": "0.2.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://img.shields.io/pypi/django-record\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/django-record.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1f5c5e9fb3594842ed16b45e111ba4490d95eeb9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f646a616e676f2d7265636f72642e737667\"></a>\n<a href=\"http://travis-ci.org/kuc2477/django-record\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/kuc2477/django-record.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/83db6986fa33533485eefa824ff231973271942f/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f6b7563323437372f646a616e676f2d7265636f72642e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/kuc2477/django-record?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/kuc2477/django-record/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0fd0d1b2547b6f7ff5073dfa63b27f6cfa2dcce/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6b7563323437372f646a616e676f2d7265636f72642f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://img.shields.io/pypi/django-record\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/django-record.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b4bf1cdb0423af7619f944b3aaa2bda6dcbd2a0f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d7265636f72642e737667\"></a>\n<a href=\"https://img.shields.io/pypi/django-record\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64c6231e488d7cdc30d82e87918058c6b2a608c3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f646a616e676f2d7265636f72642e737667\"></a>\n<div id=\"author\">\n<h2>Author</h2>\n<ul>\n<li><a href=\"mailto:kuc2477%40gmail.com\">Ha Junsoo</a></li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Tested against Python 2.7 and 3.4</li>\n<li><em>django-record</em> supports <a href=\"https://github.com/django/django\" rel=\"nofollow\">django</a> 1.7 or later.</li>\n<li>Requires <a href=\"https://github.com/pydaya/pandas\" rel=\"nofollow\">pandas</a> 0.17.0 or later.</li>\n<li>Requires <a href=\"https://github.com/joke2k/faker\" rel=\"nofollow\">faker</a> for tests.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pip install <span class=\"pre\">django-record</span></tt></p>\n</div>\n<div id=\"rationale\">\n<h2>Rationale</h2>\n<p>Often there are situations where you want to record your properties of your models and\nwhere you want to track their changes. Although that recording process can be implemented\nby <a href=\"https://djangosnippets.org/snippets/500/\" rel=\"nofollow\">handcrafted, ad-hoc signals</a> or <a href=\"https://trickveda.wordpress.com/2014/01/22/overriding-save-method-in-django-models/\" rel=\"nofollow\">overriding save() methods of your models</a>, it\u2019s\nnot a generic way, and <strong>it\u2019ll eventually mess up your code base</strong>.</p>\n<p><em>django-record</em> <strong>automatically creates an snapshot-like extra record</strong> when an audited\nDjango model instance has been changed <strong>either directly or indirectly</strong>,\nwithout messing up your code base.</p>\n<p><tt>RecordModel</tt> will detect any changes in <tt>recording_fields</tt> of\n<tt>recording_model</tt> at it\u2019s <tt>post_save</tt> time or <tt>auditing_relatives</tt>\u2019s\n<tt>post_save</tt> time and create an new record for it.</p>\n<p>You can access records via record manager <tt>records</tt> in your recorded model\ninstance. You can also access recorded model\u2019s instance via <tt>recording</tt>,\nwhich is in effect just ordinary <tt>ForeignKey</tt>, from your records.</p>\n<p>More conveniently, <strong>just mix</strong> <tt>RecordedModelMixin</tt> into your model and provide\n<tt>recording_fields</tt> and <tt>auditing_relatives</tt>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_record.mixins</span> <span class=\"kn\">import</span> <span class=\"n\">RecordedModelMixin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyTopic</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyArticle</span><span class=\"p\">(</span><span class=\"n\">RecordedModelMixin</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">topic</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">MyTopic</span><span class=\"p\">)</span>\n    <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">my_local_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">my_nonlocal_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">topic</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text</span>\n\n    <span class=\"c1\"># We will monitor `topic` relative to watch if he changes!</span>\n    <span class=\"n\">auditing_relatives</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'topic'</span><span class=\"p\">]</span>\n\n    <span class=\"n\">recording_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"c1\"># Record changes of the model instance's `text` field</span>\n        <span class=\"s1\">'text'</span><span class=\"p\">,</span>\n        <span class=\"c1\"># Yayy! we can record changes on properties too!</span>\n        <span class=\"p\">(</span><span class=\"s1\">'my_local_property'</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">()),</span>\n        <span class=\"c1\"># Even indirect effects from relatives are recordable!</span>\n        <span class=\"p\">(</span><span class=\"s1\">'my_nonlocal_property'</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">())</span>\n    <span class=\"p\">]</span>\n\n\n <span class=\"c1\"># To get the model instance's all records</span>\n <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">my_article</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n\n <span class=\"c1\"># To get queryset of the model instance's records created in specific</span>\n <span class=\"c1\"># time threshold</span>\n <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">my_article</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">created_in_years</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">my_article</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">created_in_days</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">my_article</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">created_in_minutes</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n <span class=\"c1\"># To resample records of today by hour</span>\n <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">my_article</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">created_in_days</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">resample</span><span class=\"p\">(</span><span class=\"s1\">'T'</span><span class=\"p\">)</span>\n\n <span class=\"c1\"># To get record contents</span>\n <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">my_article</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">text</span>\n <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">my_article</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">my_local_property</span>\n <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">my_article</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">my_nonlocal_property</span>\n</pre>\n</div>\n<div id=\"note\">\n<h2>Note</h2>\n<ul>\n<li><strong>Recursive auditing is currently not supported.</strong> Indirect effect only those\nfrom direct relatives will be detected and recorded.</li>\n<li><strong>Only primitive types are supported for properties.</strong> You must offer appropriate django field for them.</li>\n<li><tt>RecordModel</tt> is also a subclass of <tt>TimeStampedModel</tt>, so make sure that\nyou don\u2019t record either \u2018created\u2019 or \u2018modified\u2019 fields.</li>\n</ul>\n<div id=\"changes\">\n<h3>Changes</h3>\n</div>\n</div>\n<div id=\"release\">\n<h2>11.09.2015 (0.2.5 release)</h2>\n<ul>\n<li>Renamed TimeStampedModel to AbstractTimeStampedModel.</li>\n<li>Replaced monkey patched shortcut properties with <tt>RecordQueryset</tt> filters.\nThose shortcut properties are now deprecated.</li>\n</ul>\n</div>\n<div id=\"id1\">\n<h2>09.20.2015</h2>\n<ul>\n<li>Support Python 3.4</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>06.13.2015</h2>\n<ul>\n<li>Following shortcut properties added to <em>recording_model</em>. All of properties\nbelow are ordinary django querysets.<ul>\n<li><tt>records_in_hour</tt>: Records created in last recent hour.</li>\n<li><tt>records_in_day</tt>: Records created today.</li>\n<li><tt>records_in_week</tt>: Records created in this week.</li>\n<li><tt>records_in_month</tt>: Records created in this month.</li>\n<li><tt>records_in_year</tt>: Records created in this year.</li>\n</ul>\n</li>\n<li>Following shortcut properties providing resampled records has been added to\n<em>recording_model</em>.  All of properties below are ordinary django querysets.<ul>\n<li><tt>resampled_records_in_hour</tt>: Records created in last recent hour,\nresampled with minutes.</li>\n<li><tt>resampled_records_in_day</tt>: Records created today, resampled with hours.</li>\n<li><tt>resampled_records_in_week</tt>: Records created in this week, resamped with\ndays.</li>\n<li><tt>resampled_records_in_month</tt>: Records created in this month, resampled\nwith days.</li>\n<li><tt>resamped_records_in_year</tt>: Records created in this year, resampled with\nmonths.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>05.18.2015</h2>\n<ul>\n<li><tt>RecordedModelMixin</tt> added.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1807227, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "1d1370ad210b07955a8ec6e91090a21d", "sha256": "e6e55559327fa5d3434fcd54fe95e999d5012f983366d30857efa8ba59a46375"}, "downloads": -1, "filename": "django-record-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1d1370ad210b07955a8ec6e91090a21d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4012, "upload_time": "2015-05-14T17:10:56", "upload_time_iso_8601": "2015-05-14T17:10:56.920143Z", "url": "https://files.pythonhosted.org/packages/ae/a4/e1c7f91a817566654833bb5fe296633b1e7c83fa545a9c5b54cdcc9f8439/django-record-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "92d6e10469f8148c6b653f879ba92d3a", "sha256": "0bf727f371a143aa752bc77a7970ae510e6b35ed241436b897951ddba90fdfc0"}, "downloads": -1, "filename": "django-record-0.1.3.tar.gz", "has_sig": false, "md5_digest": "92d6e10469f8148c6b653f879ba92d3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5468, "upload_time": "2015-05-14T17:16:45", "upload_time_iso_8601": "2015-05-14T17:16:45.200734Z", "url": "https://files.pythonhosted.org/packages/52/30/3b6628b2bdb7dd152ec450cd6d64890ee8ddfdc5e6d2580e4207c1a542a3/django-record-0.1.3.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "3fdc7c9dbb9e37af154157c8504f960b", "sha256": "54b6605ec84a09d54517bfbdc74d48786912b4a98c7781eebce15d67e3e26f89"}, "downloads": -1, "filename": "django-record-0.1.5.tar.gz", "has_sig": false, "md5_digest": "3fdc7c9dbb9e37af154157c8504f960b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7336, "upload_time": "2015-05-17T13:02:27", "upload_time_iso_8601": "2015-05-17T13:02:27.211161Z", "url": "https://files.pythonhosted.org/packages/4a/5e/c6509aafbfd3269727541fe2956181b07d4ba836baed0cdb952e1fc15c92/django-record-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "8af009c96404d76f483aa7c5df5a6723", "sha256": "1720ad54fd57019f568f051f8b820621712b06b36b4001b4f727ea740d668a91"}, "downloads": -1, "filename": "django-record-0.1.6.tar.gz", "has_sig": false, "md5_digest": "8af009c96404d76f483aa7c5df5a6723", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9403, "upload_time": "2015-05-18T08:00:42", "upload_time_iso_8601": "2015-05-18T08:00:42.584611Z", "url": "https://files.pythonhosted.org/packages/ae/f3/c3e676cb7b4779e87f14db7698c3c16f8cf840e85db14252c65f426589d2/django-record-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "e53a51ac4397a2025f2b857d2e44ae6b", "sha256": "4a69a98071352044b980f660fb9001c372d2fb5bb7a88de23ad2f7245b470a31"}, "downloads": -1, "filename": "django-record-0.1.7.tar.gz", "has_sig": false, "md5_digest": "e53a51ac4397a2025f2b857d2e44ae6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9791, "upload_time": "2015-05-20T07:16:20", "upload_time_iso_8601": "2015-05-20T07:16:20.666787Z", "url": "https://files.pythonhosted.org/packages/18/e1/f3c0d909cee811bc7809450f67923d74a3e3fae618c6b575520848c67ecf/django-record-0.1.7.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "68f3a6cff93a63f315221145f5ad77ed", "sha256": "5ccd20c2480a6b84fc129150d09d2e19077c4a3470673a2d6b18a1ecb684d91e"}, "downloads": -1, "filename": "django-record-0.2.0.tar.gz", "has_sig": false, "md5_digest": "68f3a6cff93a63f315221145f5ad77ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11736, "upload_time": "2015-06-13T03:29:37", "upload_time_iso_8601": "2015-06-13T03:29:37.372869Z", "url": "https://files.pythonhosted.org/packages/83/e7/c0d37b8b0a146141dd2a938a7b52520aadaeb5097de38908b5575fa74525/django-record-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "44d74c44253a3dd3678368505df7b428", "sha256": "3fd14caa24d1423eae3451cd79db9622f174a9a415c71560bb2cc25351505498"}, "downloads": -1, "filename": "django-record-0.2.1.tar.gz", "has_sig": false, "md5_digest": "44d74c44253a3dd3678368505df7b428", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11733, "upload_time": "2015-06-13T07:09:41", "upload_time_iso_8601": "2015-06-13T07:09:41.357520Z", "url": "https://files.pythonhosted.org/packages/2b/31/c280fc99d663447ace0c6a4e186cb2fe5d26f06f3827baf7827acd075d5b/django-record-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "dbf5482f1338e107008254bc8eb078dd", "sha256": "31a290d1d1424449f56007f265983a931d370f6907a5c92c5c0972e63b889561"}, "downloads": -1, "filename": "django-record-0.2.2.tar.gz", "has_sig": false, "md5_digest": "dbf5482f1338e107008254bc8eb078dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11744, "upload_time": "2015-06-13T07:24:57", "upload_time_iso_8601": "2015-06-13T07:24:57.266166Z", "url": "https://files.pythonhosted.org/packages/a6/c9/2e9197e8c7673d18a2bc197f317eef0a384df35aed1765e463927a60898f/django-record-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "c928ee68b9afb83e68d4b103b38f10da", "sha256": "7312db36c66d95b724e3f8c479d0bce92197bbd9e38757504472598b090512a7"}, "downloads": -1, "filename": "django-record-0.2.3.tar.gz", "has_sig": false, "md5_digest": "c928ee68b9afb83e68d4b103b38f10da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11794, "upload_time": "2015-09-04T22:52:28", "upload_time_iso_8601": "2015-09-04T22:52:28.774056Z", "url": "https://files.pythonhosted.org/packages/4d/25/5960c588ad49cca05940c9f1e3b505c246ed97d904991b64cdb5dbd42610/django-record-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "2bb63c9a6efa5670852f9d1a73aa1712", "sha256": "fb23cac777e8664e92740ac1ec557fb6b09369a5957e42618207a15401deaae6"}, "downloads": -1, "filename": "django-record-0.2.4.tar.gz", "has_sig": false, "md5_digest": "2bb63c9a6efa5670852f9d1a73aa1712", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11890, "upload_time": "2015-11-07T03:41:56", "upload_time_iso_8601": "2015-11-07T03:41:56.449312Z", "url": "https://files.pythonhosted.org/packages/8b/08/384cf9e50331efa99ceb263242292b6af88b20dfd8b828f3552ac19459ce/django-record-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "c173d8ea5a501717d89eff6d0c75d7b7", "sha256": "43c9ae95b157f7883b2622012a7e33faecd47b249b2f73648709aaf81ba3c52d"}, "downloads": -1, "filename": "django-record-0.2.5.tar.gz", "has_sig": false, "md5_digest": "c173d8ea5a501717d89eff6d0c75d7b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10027, "upload_time": "2015-11-09T02:59:53", "upload_time_iso_8601": "2015-11-09T02:59:53.451923Z", "url": "https://files.pythonhosted.org/packages/c7/51/07d1ddbaa1580d9bb9312ec71cd812523f63f92943dab526917663c8a29e/django-record-0.2.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c173d8ea5a501717d89eff6d0c75d7b7", "sha256": "43c9ae95b157f7883b2622012a7e33faecd47b249b2f73648709aaf81ba3c52d"}, "downloads": -1, "filename": "django-record-0.2.5.tar.gz", "has_sig": false, "md5_digest": "c173d8ea5a501717d89eff6d0c75d7b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10027, "upload_time": "2015-11-09T02:59:53", "upload_time_iso_8601": "2015-11-09T02:59:53.451923Z", "url": "https://files.pythonhosted.org/packages/c7/51/07d1ddbaa1580d9bb9312ec71cd812523f63f92943dab526917663c8a29e/django-record-0.2.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:22 2020"}