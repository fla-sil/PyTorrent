{"info": {"author": "RedTurtle Technology", "author_email": "sviluppoplone@redturtle.it", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Plone", "Framework :: Plone :: 3.3", "Framework :: Plone :: 4.0", "Framework :: Plone :: 4.1", "Framework :: Plone :: 4.2", "Framework :: Plone :: 4.3", "Programming Language :: Python"], "description": "An additional set of **column types** for `DatagridField`__ Plone product.\n\n__ http://plone.org/products/datagridfield\n\n.. contents::\n\nNew columns\n===========\n\nTextAreaColumn\n--------------\n\nLike the base *Column* type, just display a ``textarea`` HTML element.\n\nAdditional parameters:\n\n``rows``\n    Default: 3. Number of rows of the textarea.\n``cols``\n    Default: 0. Number of columns of the textarea. If not provided the\n    html ``cols`` attribute is omitted and an inline style \"*width: 100%*\"\n    wil be used instead.\n\nExample::\n\n    ...\n    DataGridField('foo',\n              columns=(\"type\", \"description\"),\n              widget = DataGridWidget(\n                        columns={\n                             'type' : Column(_(u\"Type\")),\n                             'description' : TextAreaColumn(_(u\"Description\"),\n                                                            rows=10,\n                                                            cols=20),\n                        },\n             ),\n    ),\n    ...\n\nSelectColumn\n------------\n\nLike the default *SelectColumn* from DataGridField product, but explicitly support the\n``vocabulary_factory`` way to provide vocabularies.\n\nAdditional parameters:\n\n``vocabulary_factory``\n    Provide the name of a registered vocabulary using a Zope Component Utility. See the\n    Archetypes Develop Manual for more.\n``vocabulary``\n    As default SelectColumn, required only if you don't provide ``vocabulary_factory``.\n    Use this to call a method on the context to obtain the vocabulary.\n\nExample::\n\n    ...\n    DataGridField('foo',\n              columns=(\"type\", \"description\"),\n              widget = DataGridWidget(\n                        columns={\n                             'type' : SelectColumn(_(u\"Type\"),\n                                                   vocabulary_factory='plone.app.vocabularies.PortalTypes'),\n                             'description' : Column(_(u\"Description\"),),\n                        },\n             ),\n    ),\n    ...\n\n.. note:: The base *SelectColumn* of DataGridField 1.8 already have some kind of support for Zope-3-like\n          vocabularies, however the use of that feature is not clear (and *this* version also works on Plone 3).\n\nReferenceColumn\n---------------\n\nThis is a complex column type that store an unique object \"*UID*\". The default view rendering of this column\nwill display a proper link to the referenced object.\n\nYou can use this is different ways. In the simpler example, just use it as a textual column::\n\n    ...\n    DataGridField('foo',\n              columns=(\"uid\", \"comment\"),\n              widget = DataGridWidget(\n                        columns={\n                             'uid' : ReferenceColumn(_(u\"Reference\")),\n                             'comment' : Column(_(u\"Comment\")),\n                        },\n             ),\n    ),\n    ...\n\nSo you are on your own to store a propert UID in the field (not very interesting, isn't it?).\n\nIf you want something more, you can enable an additional JavaScript module and you'll get an\n**autocomplete feature** of referenced objects::\n\n    ...\n    DataGridField('foo',\n              columns=(\"uid\", \"comment\"),\n              widget = DataGridWidget(\n                        helper_js= ('datagridwidget.js', 'datagridautocomplete.js'),\n                        columns={\n                             'uid' : ReferenceColumn(_(u\"Reference\")),\n                             'comment' : Column(_(u\"Comment\")),\n                        },\n             ),\n    ),\n    ...\n\nSo you will add to the default ``datagridwidget.js`` (automatically provided by the widget) a new\n``datagridautocomplete.js`` ones.\nThis will also required `jQueryUI autocomplete`__. Please, read also the \"Dependencies\" section below.\n\n__ http://jqueryui.com/demos/autocomplete/\n\nWhen using autocomplete, you can query Plone in two different way:\n\n* starting a query with the \"``/``\" character will query documents by *path*, so you can manually\n  surf the whole site.\n* starting as query with other character will perform a full-text query on titles.\n\nAdditional parameters:\n\n``object_provides``\n    When using the full-text query, only return results of objects that provide those interfaces.\n    Default is an empty list (no filter).\n``surf_site``\n    Choose to be able to surf the site tree using a \"/dir/dir/...\" term.\n    Default to True (allowed).\n``search_site``\n    Choose to be able to search items in the site by full-text query or not.\n    Default to True (allowed).\n\nDateColumn\n----------\n\nA simple column field that allows to insert some dates. This field use `jQuery UI datepicker plugin`__.\n\n__ http://jqueryui.com/datepicker/\n\nTo use datepicker plugin you need to enable datepicker plugin of jQuery UI (see above for infos) and add an\nhelper_js named ``datagriddatepicker.js`` in the widget. See the example below.\n\nAdditional parameters:\n\n``date_format``\n    Default: yy/mm/dd. The date format to store in the field.\n\nExample::\n\n    ...\n    DataGridField('foo',\n              columns=(\"name\", \"birthday\"),\n              widget = DataGridWidget(\n                        helper_js= ('datagridwidget.js', 'datagriddatepicker.js'),\n                        columns={\n                             'name' : Column(_(u\"Name\")),\n                             'birthday' : DateColumn(_(u\"Birthday\"),\n                                                     date_format=\"dd/mm/yy\"),\n                        },\n             ),\n    ),\n    ...\n\nMultiSelectColumn\n-----------------\n\nBased on the *SelectColumn* from (from this package, not the original ones, so it support the \n``vocabulary_factory`` parameter), show a list of checkboxes and store a list of selected entries.\n\nAdditional parameters: see all parameter from *SelectColumn*.\n\nExample::\n\n    ...\n    DataGridField('foo',\n              columns=(\"recipe_name\", \"recipe_options\"),\n              widget = DataGridWidget(\n                        helper_js= ('datagridwidget.js', 'datagridwidget_patches.js', 'datagridmultiselect.js'),\n                        columns={\n                             'recipe_name' : Column(_(u\"Name of the recipe\"),),\n                             'recipe_options' : MultiSelectColumn(_(u\"Type\"),\n                                                                  vocabulary_factory='your.vocabulary',\n                                                                  ),\n                        },\n             ),\n    ),\n    ...\n\n.. warning:: This column suffer of the same limitations of *RadioColumn* and\n             *CheckboxColumn* columns (from original DataGridField).\n             \n             If you get a validation error when saving, **post data will not be reloaded** on the form itself.\n\nDependencies\n============\n\nThis product has been tested on:\n\n* *Plone 3.3* and *DataGridField 1.6*\n* *Plone 4.2 and 4.3* and *DataGridField 1.9*\n\njQuery version (for Plone 3)\n----------------------------\n\nBoth *ReferenceColumn*, *DateColumn* and *MultiSelectColumn* need jQuery 1.4.2 or better to work.\nPlone 3.3 is shipped with jQuery 1.3. You can fix this dependency by your how, or using a 3rd party library.\n\nAn alternative Generic Setup import step (\"*DataGridField: register jQuery 1.4*\") is provided\nwith the product. Run this and the default Plone jQuery version will be disabled, then a\n1.4.4 version of jQuery will be registered.\n\n**Do not run this** on Plone 4! \n\njQueryUI\n--------\n\nReferenceColumn and DateColumn needs that Plone provide jQueryUI library. This product *will not* cover this\nrequirement, even by dependency.\n\nIf you have already jQueryUI (autocomplete or datepicker) behaviour in your Plone site, you are already ok.\nIf you don't, take a look at `collective.jqueryui.autocomplete`__ (or read it's documentation page\nto understand how cover this need).\n\n__ http://plone.org/products/collective.jqueryui.autocomplete\n\nKeep in mind that the standard way of providing jQueryUI support to Plone is by using `collective.js.jqueryui`__\n\n__ http://plone.org/products/collective.js.jqueryui\n\nAuthors\n=======\n\nThis product was developed by RedTurtle Technology team.\n\n.. image:: http://www.redturtle.it/redturtle_banner.png\n   :alt: RedTurtle Technology Site\n   :target: http://www.redturtle.it/\n\nCredits\n=======\n\nDeveloped with the support of:\n\n\n* `Regione Emilia Romagna`__\n* `Azienda USL Ferrara`__\n  \n  .. image:: http://www.ausl.fe.it/logo_ausl.gif\n     :alt: Azienda USL's logo\n  \n* `S. Anna Hospital, Ferrara`__\n\n  .. image:: http://www.ospfe.it/ospfe-logo.jpg \n     :alt: S. Anna Hospital logo\n\nAll of them supports the `PloneGov initiative`__.\n\n__ http://www.regione.emilia-romagna.it/\n__ http://www.ausl.fe.it/\n__ http://www.ospfe.it/\n__ http://www.plonegov.it/\n\nChangelog\n=========\n\n0.7.0 (2015-05-22)\n------------------\n\n- Display the selected values in the MultiSelectColumn view macro\n  instead of displaying a special char (\"V\")\n  [gbastien]\n- ReferenceColumn - Add ``workflow_states`` parameter\n  [sdelcourt]\n- Fixed MANIFEST\n  [keul]\n\n0.6.2 (2014-02-19)\n------------------\n\n- HTML validation fix. Transformed hidden ``div`` to ``span``\n  [keul]\n\n0.6.1 (2014-02-06)\n------------------\n\n- Soft-support for the field's ``title`` (see `pull request 12`__)\n  [keul]\n- Better implementation of datagridwidget_patches.js approach\n  [keul]\n\n__ https://github.com/collective/Products.DataGridField/pull/12\n\n0.6.0 (2014-01-13)\n------------------\n\n- Not use jQuery ``.live()`` anymore, but switched to ``.delegate()``.\n  We still not use ``.on()`` for keeping jQuery 1.4 compatibility.\n  [keul]\n- Added the ``MultiSelectColumn`` column\n  [keul]\n\n0.5.1 (2013-12-12)\n------------------\n\n- Fixed deprecated usage of ``jq`` JavaScript var [davidemoro]\n- Added uninstall profile [keul]\n\n0.5.0 (2013-09-10)\n------------------\n\n- Python code now support the new ``required`` method that has been added\n  in version 1.9.0. Old DGF versions are still supported [keul]\n- Python code now support the new ``col_description`` method that has been added\n  in version 1.9.0. Old DGF versions are still supported [keul]\n- Removed any reference to ``label_msgid``, unused by DataGridField also\n  (see `#9`__) [keul]\n\n__ https://github.com/collective/Products.DataGridField/issues/9\n\n0.4.0 (2013-08-20)\n------------------\n\n- Added new column: DateColumn, that allows to add date values [cekk]\n- Catch ``ParseError`` exceptions [keul]\n\n0.3.2 (2012-10-17)\n------------------\n\n- Fixed a bug introduced with version 0.3. See `#1`__ [keul]\n\n__ https://github.com/RedTurtle/collective.datagridcolumns/issues/1\n\n0.3.1 (2012-06-27)\n------------------\n\n* Fixed manifest and readme [cekk]\n\n\n0.3.0 (2012-06-27)\n------------------\n\n* ReferenceColumn - added base Column default paremeters: ``default_method``, ``label_msgid``, ``required`` [cekk]\n\n0.2.0 (2012-01-30)\n------------------\n\n* ReferenceColumn - added an alternative jQuery library, installable using a separate\n  Generic Setup profile [keul]\n* ReferenceColumn - fulltext search is now restricted to the path of the calling context [keul]\n* ReferenceColumn - URL where to perform AJAX call is taken from a ``ICallingContextProvider``\n  adapter. 3rd party products can provide a more specific one than the default (that still\n  call the portal url) [keul]\n\n0.1.1 (2012-01-12)\n------------------\n\n* ReferenceColumn - fixed bug that when saving empty new row it will save a random\n  site content [keul]\n* ReferenceColumn - Added ``surf_site`` and ``search_site`` parameters [keul]\n\n0.1.0 (2011-12-01)\n------------------\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://plone.org/products/collective.datagridcolumns", "keywords": "plonegov plone datagridfield archetypes jqueryui widget", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.datagridcolumns", "package_url": "https://pypi.org/project/collective.datagridcolumns/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.datagridcolumns/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://plone.org/products/collective.datagridcolumns"}, "release_url": "https://pypi.org/project/collective.datagridcolumns/0.7.0/", "requires_dist": null, "requires_python": null, "summary": "Additional columns for Plone and DataGridField", "version": "0.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An additional set of <strong>column types</strong> for <a href=\"http://plone.org/products/datagridfield\" rel=\"nofollow\">DatagridField</a> Plone product.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#new-columns\" id=\"id26\" rel=\"nofollow\">New columns</a><ul>\n<li><a href=\"#textareacolumn\" id=\"id27\" rel=\"nofollow\">TextAreaColumn</a></li>\n<li><a href=\"#selectcolumn\" id=\"id28\" rel=\"nofollow\">SelectColumn</a></li>\n<li><a href=\"#referencecolumn\" id=\"id29\" rel=\"nofollow\">ReferenceColumn</a></li>\n<li><a href=\"#datecolumn\" id=\"id30\" rel=\"nofollow\">DateColumn</a></li>\n<li><a href=\"#multiselectcolumn\" id=\"id31\" rel=\"nofollow\">MultiSelectColumn</a></li>\n</ul>\n</li>\n<li><a href=\"#dependencies\" id=\"id32\" rel=\"nofollow\">Dependencies</a><ul>\n<li><a href=\"#jquery-version-for-plone-3\" id=\"id33\" rel=\"nofollow\">jQuery version (for Plone 3)</a></li>\n<li><a href=\"#jqueryui\" id=\"id34\" rel=\"nofollow\">jQueryUI</a></li>\n</ul>\n</li>\n<li><a href=\"#authors\" id=\"id35\" rel=\"nofollow\">Authors</a></li>\n<li><a href=\"#credits\" id=\"id36\" rel=\"nofollow\">Credits</a></li>\n<li><a href=\"#changelog\" id=\"id37\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id10\" id=\"id38\" rel=\"nofollow\">0.7.0 (2015-05-22)</a></li>\n<li><a href=\"#id11\" id=\"id39\" rel=\"nofollow\">0.6.2 (2014-02-19)</a></li>\n<li><a href=\"#id12\" id=\"id40\" rel=\"nofollow\">0.6.1 (2014-02-06)</a></li>\n<li><a href=\"#id14\" id=\"id41\" rel=\"nofollow\">0.6.0 (2014-01-13)</a></li>\n<li><a href=\"#id15\" id=\"id42\" rel=\"nofollow\">0.5.1 (2013-12-12)</a></li>\n<li><a href=\"#id16\" id=\"id43\" rel=\"nofollow\">0.5.0 (2013-09-10)</a></li>\n<li><a href=\"#id18\" id=\"id44\" rel=\"nofollow\">0.4.0 (2013-08-20)</a></li>\n<li><a href=\"#id19\" id=\"id45\" rel=\"nofollow\">0.3.2 (2012-10-17)</a></li>\n<li><a href=\"#id21\" id=\"id46\" rel=\"nofollow\">0.3.1 (2012-06-27)</a></li>\n<li><a href=\"#id22\" id=\"id47\" rel=\"nofollow\">0.3.0 (2012-06-27)</a></li>\n<li><a href=\"#id23\" id=\"id48\" rel=\"nofollow\">0.2.0 (2012-01-30)</a></li>\n<li><a href=\"#id24\" id=\"id49\" rel=\"nofollow\">0.1.1 (2012-01-12)</a></li>\n<li><a href=\"#id25\" id=\"id50\" rel=\"nofollow\">0.1.0 (2011-12-01)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"new-columns\">\n<h2><a href=\"#id26\" rel=\"nofollow\">New columns</a></h2>\n<div id=\"textareacolumn\">\n<h3><a href=\"#id27\" rel=\"nofollow\">TextAreaColumn</a></h3>\n<p>Like the base <em>Column</em> type, just display a <tt>textarea</tt> HTML element.</p>\n<p>Additional parameters:</p>\n<dl>\n<dt><tt>rows</tt></dt>\n<dd>Default: 3. Number of rows of the textarea.</dd>\n<dt><tt>cols</tt></dt>\n<dd>Default: 0. Number of columns of the textarea. If not provided the\nhtml <tt>cols</tt> attribute is omitted and an inline style \u201c<em>width: 100%</em>\u201d\nwil be used instead.</dd>\n</dl>\n<p>Example:</p>\n<pre>...\nDataGridField('foo',\n          columns=(\"type\", \"description\"),\n          widget = DataGridWidget(\n                    columns={\n                         'type' : Column(_(u\"Type\")),\n                         'description' : TextAreaColumn(_(u\"Description\"),\n                                                        rows=10,\n                                                        cols=20),\n                    },\n         ),\n),\n...\n</pre>\n</div>\n<div id=\"selectcolumn\">\n<h3><a href=\"#id28\" rel=\"nofollow\">SelectColumn</a></h3>\n<p>Like the default <em>SelectColumn</em> from DataGridField product, but explicitly support the\n<tt>vocabulary_factory</tt> way to provide vocabularies.</p>\n<p>Additional parameters:</p>\n<dl>\n<dt><tt>vocabulary_factory</tt></dt>\n<dd>Provide the name of a registered vocabulary using a Zope Component Utility. See the\nArchetypes Develop Manual for more.</dd>\n<dt><tt>vocabulary</tt></dt>\n<dd>As default SelectColumn, required only if you don\u2019t provide <tt>vocabulary_factory</tt>.\nUse this to call a method on the context to obtain the vocabulary.</dd>\n</dl>\n<p>Example:</p>\n<pre>...\nDataGridField('foo',\n          columns=(\"type\", \"description\"),\n          widget = DataGridWidget(\n                    columns={\n                         'type' : SelectColumn(_(u\"Type\"),\n                                               vocabulary_factory='plone.app.vocabularies.PortalTypes'),\n                         'description' : Column(_(u\"Description\"),),\n                    },\n         ),\n),\n...\n</pre>\n<div>\n<p>Note</p>\n<p>The base <em>SelectColumn</em> of DataGridField 1.8 already have some kind of support for Zope-3-like\nvocabularies, however the use of that feature is not clear (and <em>this</em> version also works on Plone 3).</p>\n</div>\n</div>\n<div id=\"referencecolumn\">\n<h3><a href=\"#id29\" rel=\"nofollow\">ReferenceColumn</a></h3>\n<p>This is a complex column type that store an unique object \u201c<em>UID</em>\u201d. The default view rendering of this column\nwill display a proper link to the referenced object.</p>\n<p>You can use this is different ways. In the simpler example, just use it as a textual column:</p>\n<pre>...\nDataGridField('foo',\n          columns=(\"uid\", \"comment\"),\n          widget = DataGridWidget(\n                    columns={\n                         'uid' : ReferenceColumn(_(u\"Reference\")),\n                         'comment' : Column(_(u\"Comment\")),\n                    },\n         ),\n),\n...\n</pre>\n<p>So you are on your own to store a propert UID in the field (not very interesting, isn\u2019t it?).</p>\n<p>If you want something more, you can enable an additional JavaScript module and you\u2019ll get an\n<strong>autocomplete feature</strong> of referenced objects:</p>\n<pre>...\nDataGridField('foo',\n          columns=(\"uid\", \"comment\"),\n          widget = DataGridWidget(\n                    helper_js= ('datagridwidget.js', 'datagridautocomplete.js'),\n                    columns={\n                         'uid' : ReferenceColumn(_(u\"Reference\")),\n                         'comment' : Column(_(u\"Comment\")),\n                    },\n         ),\n),\n...\n</pre>\n<p>So you will add to the default <tt>datagridwidget.js</tt> (automatically provided by the widget) a new\n<tt>datagridautocomplete.js</tt> ones.\nThis will also required <a href=\"http://jqueryui.com/demos/autocomplete/\" rel=\"nofollow\">jQueryUI autocomplete</a>. Please, read also the \u201cDependencies\u201d section below.</p>\n<p>When using autocomplete, you can query Plone in two different way:</p>\n<ul>\n<li>starting a query with the \u201c<tt>/</tt>\u201d character will query documents by <em>path</em>, so you can manually\nsurf the whole site.</li>\n<li>starting as query with other character will perform a full-text query on titles.</li>\n</ul>\n<p>Additional parameters:</p>\n<dl>\n<dt><tt>object_provides</tt></dt>\n<dd>When using the full-text query, only return results of objects that provide those interfaces.\nDefault is an empty list (no filter).</dd>\n<dt><tt>surf_site</tt></dt>\n<dd>Choose to be able to surf the site tree using a \u201c/dir/dir/\u2026\u201d term.\nDefault to True (allowed).</dd>\n<dt><tt>search_site</tt></dt>\n<dd>Choose to be able to search items in the site by full-text query or not.\nDefault to True (allowed).</dd>\n</dl>\n</div>\n<div id=\"datecolumn\">\n<h3><a href=\"#id30\" rel=\"nofollow\">DateColumn</a></h3>\n<p>A simple column field that allows to insert some dates. This field use <a href=\"http://jqueryui.com/datepicker/\" rel=\"nofollow\">jQuery UI datepicker plugin</a>.</p>\n<p>To use datepicker plugin you need to enable datepicker plugin of jQuery UI (see above for infos) and add an\nhelper_js named <tt>datagriddatepicker.js</tt> in the widget. See the example below.</p>\n<p>Additional parameters:</p>\n<dl>\n<dt><tt>date_format</tt></dt>\n<dd>Default: yy/mm/dd. The date format to store in the field.</dd>\n</dl>\n<p>Example:</p>\n<pre>...\nDataGridField('foo',\n          columns=(\"name\", \"birthday\"),\n          widget = DataGridWidget(\n                    helper_js= ('datagridwidget.js', 'datagriddatepicker.js'),\n                    columns={\n                         'name' : Column(_(u\"Name\")),\n                         'birthday' : DateColumn(_(u\"Birthday\"),\n                                                 date_format=\"dd/mm/yy\"),\n                    },\n         ),\n),\n...\n</pre>\n</div>\n<div id=\"multiselectcolumn\">\n<h3><a href=\"#id31\" rel=\"nofollow\">MultiSelectColumn</a></h3>\n<p>Based on the <em>SelectColumn</em> from (from this package, not the original ones, so it support the\n<tt>vocabulary_factory</tt> parameter), show a list of checkboxes and store a list of selected entries.</p>\n<p>Additional parameters: see all parameter from <em>SelectColumn</em>.</p>\n<p>Example:</p>\n<pre>...\nDataGridField('foo',\n          columns=(\"recipe_name\", \"recipe_options\"),\n          widget = DataGridWidget(\n                    helper_js= ('datagridwidget.js', 'datagridwidget_patches.js', 'datagridmultiselect.js'),\n                    columns={\n                         'recipe_name' : Column(_(u\"Name of the recipe\"),),\n                         'recipe_options' : MultiSelectColumn(_(u\"Type\"),\n                                                              vocabulary_factory='your.vocabulary',\n                                                              ),\n                    },\n         ),\n),\n...\n</pre>\n<div>\n<p>Warning</p>\n<p>This column suffer of the same limitations of <em>RadioColumn</em> and\n<em>CheckboxColumn</em> columns (from original DataGridField).</p>\n<p>If you get a validation error when saving, <strong>post data will not be reloaded</strong> on the form itself.</p>\n</div>\n</div>\n</div>\n<div id=\"dependencies\">\n<h2><a href=\"#id32\" rel=\"nofollow\">Dependencies</a></h2>\n<p>This product has been tested on:</p>\n<ul>\n<li><em>Plone 3.3</em> and <em>DataGridField 1.6</em></li>\n<li><em>Plone 4.2 and 4.3</em> and <em>DataGridField 1.9</em></li>\n</ul>\n<div id=\"jquery-version-for-plone-3\">\n<h3><a href=\"#id33\" rel=\"nofollow\">jQuery version (for Plone 3)</a></h3>\n<p>Both <em>ReferenceColumn</em>, <em>DateColumn</em> and <em>MultiSelectColumn</em> need jQuery 1.4.2 or better to work.\nPlone 3.3 is shipped with jQuery 1.3. You can fix this dependency by your how, or using a 3rd party library.</p>\n<p>An alternative Generic Setup import step (\u201c<em>DataGridField: register jQuery 1.4</em>\u201d) is provided\nwith the product. Run this and the default Plone jQuery version will be disabled, then a\n1.4.4 version of jQuery will be registered.</p>\n<p><strong>Do not run this</strong> on Plone 4!</p>\n</div>\n<div id=\"jqueryui\">\n<h3><a href=\"#id34\" rel=\"nofollow\">jQueryUI</a></h3>\n<p>ReferenceColumn and DateColumn needs that Plone provide jQueryUI library. This product <em>will not</em> cover this\nrequirement, even by dependency.</p>\n<p>If you have already jQueryUI (autocomplete or datepicker) behaviour in your Plone site, you are already ok.\nIf you don\u2019t, take a look at <a href=\"http://plone.org/products/collective.jqueryui.autocomplete\" rel=\"nofollow\">collective.jqueryui.autocomplete</a> (or read it\u2019s documentation page\nto understand how cover this need).</p>\n<p>Keep in mind that the standard way of providing jQueryUI support to Plone is by using <a href=\"http://plone.org/products/collective.js.jqueryui\" rel=\"nofollow\">collective.js.jqueryui</a></p>\n</div>\n</div>\n<div id=\"authors\">\n<h2><a href=\"#id35\" rel=\"nofollow\">Authors</a></h2>\n<p>This product was developed by RedTurtle Technology team.</p>\n<a href=\"http://www.redturtle.it/\" rel=\"nofollow\"><img alt=\"RedTurtle Technology Site\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ea6aa086619f59e61ad184ae3739fda4ec31e20/687474703a2f2f7777772e726564747572746c652e69742f726564747572746c655f62616e6e65722e706e67\"></a>\n</div>\n<div id=\"credits\">\n<h2><a href=\"#id36\" rel=\"nofollow\">Credits</a></h2>\n<p>Developed with the support of:</p>\n<ul>\n<li><p><a href=\"http://www.regione.emilia-romagna.it/\" rel=\"nofollow\">Regione Emilia Romagna</a></p>\n</li>\n<li><p><a href=\"http://www.ausl.fe.it/\" rel=\"nofollow\">Azienda USL Ferrara</a></p>\n<img alt=\"Azienda USL's logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9d43e5831bfae37f39271205f9e60753825aad00/687474703a2f2f7777772e6175736c2e66652e69742f6c6f676f5f6175736c2e676966\">\n</li>\n<li><p><a href=\"http://www.ospfe.it/\" rel=\"nofollow\">S. Anna Hospital, Ferrara</a></p>\n<img alt=\"S. Anna Hospital logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/63d938d4a6c3524ff18f7f9883763f1a70492531/687474703a2f2f7777772e6f737066652e69742f6f737066652d6c6f676f2e6a7067\">\n</li>\n</ul>\n<p>All of them supports the <a href=\"http://www.plonegov.it/\" rel=\"nofollow\">PloneGov initiative</a>.</p>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id37\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id10\">\n<h3><a href=\"#id38\" rel=\"nofollow\">0.7.0 (2015-05-22)</a></h3>\n<ul>\n<li>Display the selected values in the MultiSelectColumn view macro\ninstead of displaying a special char (\u201cV\u201d)\n[gbastien]</li>\n<li>ReferenceColumn - Add <tt>workflow_states</tt> parameter\n[sdelcourt]</li>\n<li>Fixed MANIFEST\n[keul]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3><a href=\"#id39\" rel=\"nofollow\">0.6.2 (2014-02-19)</a></h3>\n<ul>\n<li>HTML validation fix. Transformed hidden <tt>div</tt> to <tt>span</tt>\n[keul]</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3><a href=\"#id40\" rel=\"nofollow\">0.6.1 (2014-02-06)</a></h3>\n<ul>\n<li>Soft-support for the field\u2019s <tt>title</tt> (see <a href=\"https://github.com/collective/Products.DataGridField/pull/12\" rel=\"nofollow\">pull request 12</a>)\n[keul]</li>\n<li>Better implementation of datagridwidget_patches.js approach\n[keul]</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3><a href=\"#id41\" rel=\"nofollow\">0.6.0 (2014-01-13)</a></h3>\n<ul>\n<li>Not use jQuery <tt>.live()</tt> anymore, but switched to <tt>.delegate()</tt>.\nWe still not use <tt>.on()</tt> for keeping jQuery 1.4 compatibility.\n[keul]</li>\n<li>Added the <tt>MultiSelectColumn</tt> column\n[keul]</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3><a href=\"#id42\" rel=\"nofollow\">0.5.1 (2013-12-12)</a></h3>\n<ul>\n<li>Fixed deprecated usage of <tt>jq</tt> JavaScript var [davidemoro]</li>\n<li>Added uninstall profile [keul]</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3><a href=\"#id43\" rel=\"nofollow\">0.5.0 (2013-09-10)</a></h3>\n<ul>\n<li>Python code now support the new <tt>required</tt> method that has been added\nin version 1.9.0. Old DGF versions are still supported [keul]</li>\n<li>Python code now support the new <tt>col_description</tt> method that has been added\nin version 1.9.0. Old DGF versions are still supported [keul]</li>\n<li>Removed any reference to <tt>label_msgid</tt>, unused by DataGridField also\n(see <a href=\"https://github.com/collective/Products.DataGridField/issues/9\" rel=\"nofollow\">#9</a>) [keul]</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3><a href=\"#id44\" rel=\"nofollow\">0.4.0 (2013-08-20)</a></h3>\n<ul>\n<li>Added new column: DateColumn, that allows to add date values [cekk]</li>\n<li>Catch <tt>ParseError</tt> exceptions [keul]</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3><a href=\"#id45\" rel=\"nofollow\">0.3.2 (2012-10-17)</a></h3>\n<ul>\n<li>Fixed a bug introduced with version 0.3. See <a href=\"https://github.com/RedTurtle/collective.datagridcolumns/issues/1\" rel=\"nofollow\">#1</a> [keul]</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3><a href=\"#id46\" rel=\"nofollow\">0.3.1 (2012-06-27)</a></h3>\n<ul>\n<li>Fixed manifest and readme [cekk]</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3><a href=\"#id47\" rel=\"nofollow\">0.3.0 (2012-06-27)</a></h3>\n<ul>\n<li>ReferenceColumn - added base Column default paremeters: <tt>default_method</tt>, <tt>label_msgid</tt>, <tt>required</tt> [cekk]</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3><a href=\"#id48\" rel=\"nofollow\">0.2.0 (2012-01-30)</a></h3>\n<ul>\n<li>ReferenceColumn - added an alternative jQuery library, installable using a separate\nGeneric Setup profile [keul]</li>\n<li>ReferenceColumn - fulltext search is now restricted to the path of the calling context [keul]</li>\n<li>ReferenceColumn - URL where to perform AJAX call is taken from a <tt>ICallingContextProvider</tt>\nadapter. 3rd party products can provide a more specific one than the default (that still\ncall the portal url) [keul]</li>\n</ul>\n</div>\n<div id=\"id24\">\n<h3><a href=\"#id49\" rel=\"nofollow\">0.1.1 (2012-01-12)</a></h3>\n<ul>\n<li>ReferenceColumn - fixed bug that when saving empty new row it will save a random\nsite content [keul]</li>\n<li>ReferenceColumn - Added <tt>surf_site</tt> and <tt>search_site</tt> parameters [keul]</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h3><a href=\"#id50\" rel=\"nofollow\">0.1.0 (2011-12-01)</a></h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1558170, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "339fad1435d73b1f69c940882afe5094", "sha256": "5113330b408f00a7a5da0ba1d7911d25e061a481609e283856bce0acb97a1431"}, "downloads": -1, "filename": "collective.datagridcolumns-0.1.0.tar.gz", "has_sig": false, "md5_digest": "339fad1435d73b1f69c940882afe5094", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18121, "upload_time": "2011-12-01T18:36:12", "upload_time_iso_8601": "2011-12-01T18:36:12.267356Z", "url": "https://files.pythonhosted.org/packages/fe/22/713b4f453a6be99f5bf4ead23dd643c440c9dceca59105d145d41bede35e/collective.datagridcolumns-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "78ccd86f9adf409ec56a89005c85ecca", "sha256": "8a8fe407946ff4e8d40a764883d94acec3acc9f49e12b23dd5b7991966ba4822"}, "downloads": -1, "filename": "collective.datagridcolumns-0.1.1.tar.gz", "has_sig": false, "md5_digest": "78ccd86f9adf409ec56a89005c85ecca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18649, "upload_time": "2012-01-12T09:32:04", "upload_time_iso_8601": "2012-01-12T09:32:04.255733Z", "url": "https://files.pythonhosted.org/packages/08/eb/a0a15a7f2ab58d365f869cf959b115191f5a997caad700a31948f281b665/collective.datagridcolumns-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "0c88749ab2b5115bcedae34f1ed4d278", "sha256": "be40bd46e86be7c14f3c2ec702064c84ce774a6a5a9cb0ef481651fc53cbfa40"}, "downloads": -1, "filename": "collective.datagridcolumns-0.2.0.tar.gz", "has_sig": false, "md5_digest": "0c88749ab2b5115bcedae34f1ed4d278", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46930, "upload_time": "2012-01-30T17:23:59", "upload_time_iso_8601": "2012-01-30T17:23:59.800301Z", "url": "https://files.pythonhosted.org/packages/9a/36/af360285b7304723a1bf311f9f9ad21e0708437cd727a3e186b2a897f048/collective.datagridcolumns-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "5ed0130c98a56467152ed675b6fadd92", "sha256": "da623d5979b32aed440ceb64f5e51a54933ef1d86ae1d7dadc989b80f00f82c1"}, "downloads": -1, "filename": "collective.datagridcolumns-0.3.0.tar.gz", "has_sig": false, "md5_digest": "5ed0130c98a56467152ed675b6fadd92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47583, "upload_time": "2012-06-27T11:01:44", "upload_time_iso_8601": "2012-06-27T11:01:44.342392Z", "url": "https://files.pythonhosted.org/packages/32/bf/1bc24c6df8a6edd6f6c3480da5c91517d8a3acf30baeecdc955fe9f7ad6a/collective.datagridcolumns-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "99c8a60bee0d87501a98f627345fadd1", "sha256": "7e67d1d033366a40102f8ebeda6a0efc42dec763dc1ff06b53885fda2bf66bb7"}, "downloads": -1, "filename": "collective.datagridcolumns-0.3.1.tar.gz", "has_sig": false, "md5_digest": "99c8a60bee0d87501a98f627345fadd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47647, "upload_time": "2012-06-27T17:02:14", "upload_time_iso_8601": "2012-06-27T17:02:14.608373Z", "url": "https://files.pythonhosted.org/packages/39/f8/f86e1e3b690d1a65a5522ac76f2add2c049b7595a8fb3501567c26710b8b/collective.datagridcolumns-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "b9678024f085eac989908c14dfc15cab", "sha256": "7736db7f359facf9f6da166310ef809656ea539287159b204df6f0a3103c8c5c"}, "downloads": -1, "filename": "collective.datagridcolumns-0.3.2.zip", "has_sig": false, "md5_digest": "b9678024f085eac989908c14dfc15cab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60995, "upload_time": "2012-10-17T09:06:42", "upload_time_iso_8601": "2012-10-17T09:06:42.152838Z", "url": "https://files.pythonhosted.org/packages/5b/d5/59abbd0588437f7c32d321dbfa8d5f41c0dc00ddeba533582cdcd7abe414/collective.datagridcolumns-0.3.2.zip", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "729d536f869a5fb161f53e0a8b66c85d", "sha256": "1928ede8de076e06ef5933a06fd9b1b5136bba894fa5f6a0f1a5a917406d3f62"}, "downloads": -1, "filename": "collective.datagridcolumns-0.4.0.zip", "has_sig": false, "md5_digest": "729d536f869a5fb161f53e0a8b66c85d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64202, "upload_time": "2013-08-20T10:00:25", "upload_time_iso_8601": "2013-08-20T10:00:25.721520Z", "url": "https://files.pythonhosted.org/packages/34/b6/6be78835becacfce074d74072c2112a890c97b78a256542839d373ac0b69/collective.datagridcolumns-0.4.0.zip", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "c84afe2b495b704fe6431e93fb85f22a", "sha256": "0e6169457f6111881a256fa959b97cd1f44da1ce900a59826c03faa9e74135b7"}, "downloads": -1, "filename": "collective.datagridcolumns-0.5.0.zip", "has_sig": false, "md5_digest": "c84afe2b495b704fe6431e93fb85f22a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65482, "upload_time": "2013-09-10T10:29:37", "upload_time_iso_8601": "2013-09-10T10:29:37.844497Z", "url": "https://files.pythonhosted.org/packages/7c/f1/6083778b7c5f3a20a0901eac739ffdeda3941c538bf3d23e67bfe5dff10f/collective.datagridcolumns-0.5.0.zip", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "18d13b1cf60ee38d4aff684973b3477a", "sha256": "b06b66df2cbefcc217e279bf239d31b7bd9be345c655a39e4e2c85c520297024"}, "downloads": -1, "filename": "collective.datagridcolumns-0.5.1.zip", "has_sig": false, "md5_digest": "18d13b1cf60ee38d4aff684973b3477a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66586, "upload_time": "2013-12-12T08:24:24", "upload_time_iso_8601": "2013-12-12T08:24:24.576106Z", "url": "https://files.pythonhosted.org/packages/d9/91/d9a5f8d61c14cd25ce645baefc053c42028e8c9e4665862a78445bf39c6d/collective.datagridcolumns-0.5.1.zip", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "706d6b5ccb123b685bbeafe6b1bba93c", "sha256": "be0a1507f70102deb40397497f36ec161ab863e954be4c6832398958580e62e6"}, "downloads": -1, "filename": "collective.datagridcolumns-0.6.0.zip", "has_sig": false, "md5_digest": "706d6b5ccb123b685bbeafe6b1bba93c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71676, "upload_time": "2014-01-13T13:47:58", "upload_time_iso_8601": "2014-01-13T13:47:58.324941Z", "url": "https://files.pythonhosted.org/packages/03/5f/0e338ee7d789ce812ccb026026087e2592fedeb39521cfa7856b88875720/collective.datagridcolumns-0.6.0.zip", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "4c369bbcee9fec9d15675b5bd9b32e75", "sha256": "5704472a84d45a97d2f771027cf8912d73632d9f83cbef208ff3239c1b75445c"}, "downloads": -1, "filename": "collective.datagridcolumns-0.6.1.zip", "has_sig": false, "md5_digest": "4c369bbcee9fec9d15675b5bd9b32e75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71979, "upload_time": "2014-02-06T09:22:06", "upload_time_iso_8601": "2014-02-06T09:22:06.022439Z", "url": "https://files.pythonhosted.org/packages/7a/0e/17e9d73dc1556f2f899b6a4187ef6762dc629bf167aa38d3c75f8b62145d/collective.datagridcolumns-0.6.1.zip", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "e06e9cb4eda69f4e4e09eea937130121", "sha256": "561a7d6cb7dd132000a8fb007a769ba63d0f27a3a2e8a47711abca04a8ffce81"}, "downloads": -1, "filename": "collective.datagridcolumns-0.6.2.zip", "has_sig": false, "md5_digest": "e06e9cb4eda69f4e4e09eea937130121", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72105, "upload_time": "2014-02-19T14:35:23", "upload_time_iso_8601": "2014-02-19T14:35:23.691483Z", "url": "https://files.pythonhosted.org/packages/b2/ba/da194051f406945e062778a143b219fd63065db1c4a1ce0da4e3c770787d/collective.datagridcolumns-0.6.2.zip", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "04f8301c2ef95ec236b02ece7092e6e3", "sha256": "37994233794a5fae8b1c674a2a5049b09116123db68a0984592c68f65e1ef77f"}, "downloads": -1, "filename": "collective.datagridcolumns-0.7.0.tar.gz", "has_sig": false, "md5_digest": "04f8301c2ef95ec236b02ece7092e6e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52836, "upload_time": "2015-05-22T16:08:58", "upload_time_iso_8601": "2015-05-22T16:08:58.219070Z", "url": "https://files.pythonhosted.org/packages/69/42/4a9c8ae00e3a686650fccf5b545899d41d019398e49168d179f38c6b598a/collective.datagridcolumns-0.7.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "04f8301c2ef95ec236b02ece7092e6e3", "sha256": "37994233794a5fae8b1c674a2a5049b09116123db68a0984592c68f65e1ef77f"}, "downloads": -1, "filename": "collective.datagridcolumns-0.7.0.tar.gz", "has_sig": false, "md5_digest": "04f8301c2ef95ec236b02ece7092e6e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52836, "upload_time": "2015-05-22T16:08:58", "upload_time_iso_8601": "2015-05-22T16:08:58.219070Z", "url": "https://files.pythonhosted.org/packages/69/42/4a9c8ae00e3a686650fccf5b545899d41d019398e49168d179f38c6b598a/collective.datagridcolumns-0.7.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:17:57 2020"}