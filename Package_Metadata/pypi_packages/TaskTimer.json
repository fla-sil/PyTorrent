{"info": {"author": "Sigvald Marholm", "author_email": "marholm@marebakken.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "TaskTimer\n=========\n\n.. image:: https://travis-ci.com/sigvaldm/TaskTimer.svg?branch=master\n    :target: https://travis-ci.com/sigvaldm/TaskTimer\n\n.. image:: https://coveralls.io/repos/github/sigvaldm/TaskTimer/badge.svg?branch=master\n    :target: https://coveralls.io/github/sigvaldm/TaskTimer?branch=master\n\n.. image:: https://img.shields.io/pypi/pyversions/TaskTimer.svg\n    :target: https://pypi.org/project/TaskTimer\n\nIndicates progress during runtime, while keeping track of time consumed by user-defined tasks. Not quite a progress bar, not quite a profiler, but something in between which I personally have found to be very handy, especially when working with computationally intensive programs.\n\nConsider this simple dummy program::\n\n    from tasktimer import TaskTimer\n    from time import sleep\n\n    timer = TaskTimer()\n\n    for n in timer.range(40):\n\n        timer.task('Assembling load vector (b)')\n        sleep(0.1) # Dummy\n\n        timer.task('Solving linear system Au=b')\n        sleep(0.5) # Dummy\n\n    print(timer)\n    \nThe ``task()`` method is used to indicate that from now on the program is working on another task. ``TaskTimer`` will indicate progress, and display the current task, for instance::\n\n    Step 11/40 (28%). 17.5s of 24.1s remaining. Assembling load vector (b)\n\nWhen all tasks are completed, ``print(timer)`` can be used to print statistics of the tasks::\n\n                                 #   Mean   StDev  Total    %\n    Assembling load vector (b)  40  101ms  89.2us  4.02s   17\n    Solving linear system Au=b  40  501ms   140us  20.0s   83\n    Total                                          24.1s  100\n\nMany more options than demonstrated here are available, and the functionality is extensively documented in the docstrings. For instance, customization of the progress string (see ``TaskTimer``), iterating over general iterables using the ``iterate()`` method, sorting the statistics (see the ``summary()`` method). The time tracking of the individual tasks are performed by the ``Timer`` class, which can also be used stand-alone.\n\nInstallation\n------------\nInstall from PyPI using ``pip``::\n\n    pip install TaskTimer\n\nOr download the GitHub repository https://github.com/sigvaldm/TaskTimer.git and run::\n\n    python setup.py install", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sigvaldm/tasktimer.git", "keywords": "", "license": "LGPL", "maintainer": "", "maintainer_email": "", "name": "TaskTimer", "package_url": "https://pypi.org/project/TaskTimer/", "platform": "", "project_url": "https://pypi.org/project/TaskTimer/", "project_urls": {"Homepage": "https://github.com/sigvaldm/tasktimer.git"}, "release_url": "https://pypi.org/project/TaskTimer/1.0.4/", "requires_dist": null, "requires_python": "", "summary": "Indicates progress during runtime, while keeping track of time consumed by user-defined tasks.", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.com/sigvaldm/TaskTimer\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/sigvaldm/TaskTimer.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81bcc9048e853fd4a7be76c2090b1ae9c8647f64/68747470733a2f2f7472617669732d63692e636f6d2f73696776616c646d2f5461736b54696d65722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/sigvaldm/TaskTimer?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/sigvaldm/TaskTimer/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45e584db26456d4e778967ec5e2eba403c055d92/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f73696776616c646d2f5461736b54696d65722f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/TaskTimer\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/TaskTimer.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae4b11d9c20d06b198a178dbe070d3e8ab82687e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f5461736b54696d65722e737667\"></a>\n<p>Indicates progress during runtime, while keeping track of time consumed by user-defined tasks. Not quite a progress bar, not quite a profiler, but something in between which I personally have found to be very handy, especially when working with computationally intensive programs.</p>\n<p>Consider this simple dummy program:</p>\n<pre>from tasktimer import TaskTimer\nfrom time import sleep\n\ntimer = TaskTimer()\n\nfor n in timer.range(40):\n\n    timer.task('Assembling load vector (b)')\n    sleep(0.1) # Dummy\n\n    timer.task('Solving linear system Au=b')\n    sleep(0.5) # Dummy\n\nprint(timer)\n</pre>\n<p>The <tt>task()</tt> method is used to indicate that from now on the program is working on another task. <tt>TaskTimer</tt> will indicate progress, and display the current task, for instance:</p>\n<pre>Step 11/40 (28%). 17.5s of 24.1s remaining. Assembling load vector (b)\n</pre>\n<p>When all tasks are completed, <tt>print(timer)</tt> can be used to print statistics of the tasks:</p>\n<pre>                             #   Mean   StDev  Total    %\nAssembling load vector (b)  40  101ms  89.2us  4.02s   17\nSolving linear system Au=b  40  501ms   140us  20.0s   83\nTotal                                          24.1s  100\n</pre>\n<p>Many more options than demonstrated here are available, and the functionality is extensively documented in the docstrings. For instance, customization of the progress string (see <tt>TaskTimer</tt>), iterating over general iterables using the <tt>iterate()</tt> method, sorting the statistics (see the <tt>summary()</tt> method). The time tracking of the individual tasks are performed by the <tt>Timer</tt> class, which can also be used stand-alone.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install from PyPI using <tt>pip</tt>:</p>\n<pre>pip install TaskTimer\n</pre>\n<p>Or download the GitHub repository <a href=\"https://github.com/sigvaldm/TaskTimer.git\" rel=\"nofollow\">https://github.com/sigvaldm/TaskTimer.git</a> and run:</p>\n<pre>python setup.py install\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4301513, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "8a3657bbf82d72090b5d3bbe6fc4729d", "sha256": "b51d5634ab5ad35ecbbb4804a67026a43ec200c4893adcd4ca5cbf6330600ace"}, "downloads": -1, "filename": "TaskTimer-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8a3657bbf82d72090b5d3bbe6fc4729d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2261, "upload_time": "2018-05-24T10:11:10", "upload_time_iso_8601": "2018-05-24T10:11:10.482893Z", "url": "https://files.pythonhosted.org/packages/84/29/01ccd6a45f4bb8e85cfd52dfbfb4cb1c3c5808e48be8ad58dd5a908ddec7/TaskTimer-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "fdd512a64a815e4a49dfa263821c7476", "sha256": "baa888b04ee4ac62119c1574e5461daec41dac795112623ff2809f401453fefb"}, "downloads": -1, "filename": "tasktimer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "fdd512a64a815e4a49dfa263821c7476", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7097, "upload_time": "2018-05-25T06:40:21", "upload_time_iso_8601": "2018-05-25T06:40:21.598915Z", "url": "https://files.pythonhosted.org/packages/84/0f/1ffed88e57ab975123ba3c576cb1474f2e78241341509a269c7fc2882743/tasktimer-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "e4a83da55451c3ab760e9f993e413107", "sha256": "674841e8a38652aaa9b0e38cd1a0dd229e8841638a7cb6d5f7f0b80e96252aae"}, "downloads": -1, "filename": "tasktimer-1.0.2.tar.gz", "has_sig": false, "md5_digest": "e4a83da55451c3ab760e9f993e413107", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7347, "upload_time": "2018-09-23T10:48:15", "upload_time_iso_8601": "2018-09-23T10:48:15.373244Z", "url": "https://files.pythonhosted.org/packages/3b/0f/407a72a8b56ede99294fccbc39b1b7fc9cbf6cdfe4245f5e211123a1946d/tasktimer-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "0fa417009faa43a080a6e67bcd45faab", "sha256": "7d423e3a0f23fdd80b9dc02241137e8e195cc1845013c14b82bf518f639ba389"}, "downloads": -1, "filename": "tasktimer-1.0.3.tar.gz", "has_sig": false, "md5_digest": "0fa417009faa43a080a6e67bcd45faab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7381, "upload_time": "2018-09-23T11:01:20", "upload_time_iso_8601": "2018-09-23T11:01:20.163391Z", "url": "https://files.pythonhosted.org/packages/81/ad/09bc48aa472161acdd45895fe9733e226f7d864f54d4af9e826c2a7a0d59/tasktimer-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "6442237cb4c92dc6b02863de524a0a50", "sha256": "7a06453597ee5d779ea4163bf5ba4430bf8097003738f044d6b02f83f4a98478"}, "downloads": -1, "filename": "tasktimer-1.0.4.tar.gz", "has_sig": false, "md5_digest": "6442237cb4c92dc6b02863de524a0a50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7685, "upload_time": "2018-09-23T11:04:47", "upload_time_iso_8601": "2018-09-23T11:04:47.238988Z", "url": "https://files.pythonhosted.org/packages/31/8d/6722accfd312e52e71cb061457215ed864f5c3c3eed9ad90e3b744868ca1/tasktimer-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6442237cb4c92dc6b02863de524a0a50", "sha256": "7a06453597ee5d779ea4163bf5ba4430bf8097003738f044d6b02f83f4a98478"}, "downloads": -1, "filename": "tasktimer-1.0.4.tar.gz", "has_sig": false, "md5_digest": "6442237cb4c92dc6b02863de524a0a50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7685, "upload_time": "2018-09-23T11:04:47", "upload_time_iso_8601": "2018-09-23T11:04:47.238988Z", "url": "https://files.pythonhosted.org/packages/31/8d/6722accfd312e52e71cb061457215ed864f5c3c3eed9ad90e3b744868ca1/tasktimer-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:43 2020"}