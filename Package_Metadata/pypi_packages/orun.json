{"info": {"author": "Alexandre L. Dias", "author_email": "alexandre@katrid.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "License :: OSI Approved :: BSD License"], "description": "====\r\nOrun\r\n====\r\n\r\nOrun (Object RUNtime) is a small/lightweight library that provides a fast \r\nto build Python RIA, the client communicates with the server through ajax.\r\nTypical usage often looks like this::\r\n\r\n    #!/usr/bin/env python\r\n    # Cherrypy + ExtJS example\r\n\t\r\n\tfrom orun.extjs import *\r\n\tfrom orun.extjs import cp\r\n\t\r\n\tdef ok_click(id, *args, **kwargs):\r\n\t    cli << Ext.getCmp(id).setText('Clicked')\r\n\t    cli << js.client.alert('Server side message')\r\n\t\r\n\tdef button_click(id, *args, **kwargs):\r\n\t    js.write(\"\"\"\r\n\t    Ext.getCmp(\"%s\").setText('Clicked');\r\n\t    alert('Server side callback message');\r\n\t    \"\"\" % id)\r\n\t\r\n\tclass MyApplication(cp.ExtApplication):\r\n\t    def main(self, *args, **kwargs):\r\n\t        wnd = Ext.create('widget.window', {'title': 'My Window', 'width': 300, 'height': 250,\r\n\t            'items': [{'xtype': 'button', 'text': 'Click Here', 'handler': button_click}],\r\n\t            'buttons': [\r\n\t                {'text': 'OK', 'handler': ok_click},\r\n\t                {'text': 'Close', 'handler': js.function('this.up(\"window\").close();')}]})\r\n\t        wnd.show()\r\n\t        wnd.setHeight(200)\r\n\t\r\n\tapp = MyApplication('Orun (ExtJS Application)')\r\n\tapp.run()\r\n\r\nThe example above, runs cherrypy application on 8080 http port, and exposes\r\nextjs method.\r\n\r\nInstallation\r\n============", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/katrid/orun", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.katrid.com", "keywords": "Python, javascript, ExtJS", "license": "New BSD License", "maintainer": "", "maintainer_email": "", "name": "orun", "package_url": "https://pypi.org/project/orun/", "platform": "", "project_url": "https://pypi.org/project/orun/", "project_urls": {"Download": "https://github.com/katrid/orun", "Homepage": "http://www.katrid.com"}, "release_url": "https://pypi.org/project/orun/0.1/", "requires_dist": null, "requires_python": null, "summary": "Python javascript generator", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Orun (Object RUNtime) is a small/lightweight library that provides a fast\nto build Python RIA, the client communicates with the server through ajax.\nTypical usage often looks like this:</p>\n<pre>#!/usr/bin/env python\n# Cherrypy + ExtJS example\n\n    from orun.extjs import *\n    from orun.extjs import cp\n\n    def ok_click(id, *args, **kwargs):\n        cli &lt;&lt; Ext.getCmp(id).setText('Clicked')\n        cli &lt;&lt; js.client.alert('Server side message')\n\n    def button_click(id, *args, **kwargs):\n        js.write(\"\"\"\n        Ext.getCmp(\"%s\").setText('Clicked');\n        alert('Server side callback message');\n        \"\"\" % id)\n\n    class MyApplication(cp.ExtApplication):\n        def main(self, *args, **kwargs):\n            wnd = Ext.create('widget.window', {'title': 'My Window', 'width': 300, 'height': 250,\n                'items': [{'xtype': 'button', 'text': 'Click Here', 'handler': button_click}],\n                'buttons': [\n                    {'text': 'OK', 'handler': ok_click},\n                    {'text': 'Close', 'handler': js.function('this.up(\"window\").close();')}]})\n            wnd.show()\n            wnd.setHeight(200)\n\n    app = MyApplication('Orun (ExtJS Application)')\n    app.run()\n</pre>\n<p>The example above, runs cherrypy application on 8080 http port, and exposes\nextjs method.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n</div>\n\n          </div>"}, "last_serial": 752117, "releases": {"0.1": []}, "urls": [], "timestamp": "Fri May  8 03:01:29 2020"}