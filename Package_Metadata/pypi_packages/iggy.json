{"info": {"author": "Sven Thiele", "author_email": "sthiele78@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Installation\n\n\n\nYou can install iggy by running:\n\n    > pip install --user iggy\n\nOn Linux the executable scripts can then be found in `~/.local/bin`\n\nand on MacOS the scripts are under `/Users/YOURUSERNAME/Library/Python/3.5/bin`.\n\n\n# Usage\n\n\nTypical usage is:\n\n    > iggy.py network.sif observation.obs --show_labelings 10 --show_predictions\n\nFor more options you can ask for help as follows:\n\n    > iggy.py -h\n    usage: iggy.py [-h] [--no_fwd_propagation] [--no_founded_constraints]\n                   [--elempath] [--depmat] [--mics] [--autoinputs] [--scenfit]\n                   [--show_labelings SHOW_LABELINGS] [--show_predictions]\n                   networkfile observationfile\n\n    Iggy confronts biological networks given as interaction graphs with\n    experimental observations given as signs that represent the concentration\n    changes between two measured states. Iggy supports the incorporation of\n    uncertain measurements, discovers inconsistencies in data or network, applies\n    minimal repairs, and predicts the behavior of unmeasured species. In\n    particular, it distinguishes strong predictions (e.g. increase of a node\n    level) and weak predictions (e.g., node level increases or remains unchanged).\n\n    positional arguments:\n      networkfile           influence graph in SIF format\n      observationfile       observations in bioquali format\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --no_fwd_propagation  turn forward propagation OFF, default is ON\n      --no_founded_constraints\n                            turn constraints OFF that every variation must be\n                            founded in an input, default is ON\n      --elempath            a change must be explained by an elementary path from\n                            an input.\n      --depmat              combines multiple states, a change must be explained\n                            by an elementary path from an input.\n      --mics                compute minimal inconsistent cores\n      --autoinputs          compute possible inputs of the network (nodes with\n                            indegree 0)\n      --scenfit             compute scenfit of the data, default is mcos\n      --show_labelings SHOW_LABELINGS\n                            number of labelings to print, default is OFF, 0=all\n      --show_predictions    show predictions\n\n\nThe second script contained is opt_graph.py\nTypical usage is:\n\n    > opt_graph.py network.sif observations_dir/ --show_repairs 10\n\nFor more options you can ask for help as follows:\n\n    > opt_graph.py -h\n    usage: opt_graph.py [-h] [--no_fwd_propagation] [--no_founded_constraints]\n                        [--elempath] [--depmat] [--autoinputs]\n                        [--show_repairs SHOW_REPAIRS] [--repair_mode REPAIR_MODE]\n                        networkfile observationfiles\n\n    Opt-graph confronts a biological network given as interaction graphs with sets\n    of experimental observations given as signs that represent the concentration\n    changes between two measured states. Opt-graph computes the networks fitting\n    the observation data by removing (or adding) a minimal number of edges in the\n    given network\n\n    positional arguments:\n      networkfile           influence graph in SIF format\n      observationfiles      directory of observations in bioquali format\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --no_fwd_propagation  turn forward propagation OFF, default is ON\n      --no_founded_constraints\n                            turn constraints OFF that every variation must be\n                            founded in an input, default is ON\n      --elempath            a change must be explained by an elementary path from\n                            an input.\n      --depmat              combines multiple states, a change must be explained\n                            by an elementary path from an input.\n      --autoinputs          compute possible inputs of the network (nodes with\n                            indegree 0)\n      --show_repairs SHOW_REPAIRS\n                            number of repairs to show, default is OFF, 0=all\n      --repair_mode REPAIR_MODE\n                            choose repair mode: 1 = remove edges (default), 2 = add +\n                            remove edges (opt-graph), 3 = flip edges\n\n\n# Samples\n\nSample files available here: [demo_data.tar.gz](https://bioasp.github.io/iggy/downloads/demo_data.tar.gz)", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bioasp.github.io/iggy/", "keywords": "", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "iggy", "package_url": "https://pypi.org/project/iggy/", "platform": "", "project_url": "https://pypi.org/project/iggy/", "project_urls": {"Homepage": "http://bioasp.github.io/iggy/"}, "release_url": "https://pypi.org/project/iggy/1.4.3/", "requires_dist": null, "requires_python": "", "summary": "A tool for consistency based analysis of influence graphs and observed systems behavior.", "version": "1.4.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Installation<br><br><br><br>You can install iggy by running:<br><br>    &gt; pip install --user iggy<br><br>On Linux the executable scripts can then be found in `~/.local/bin`<br><br>and on MacOS the scripts are under `/Users/YOURUSERNAME/Library/Python/3.5/bin`.<br><br><br># Usage<br><br><br>Typical usage is:<br><br>    &gt; iggy.py network.sif observation.obs --show_labelings 10 --show_predictions<br><br>For more options you can ask for help as follows:<br><br>    &gt; iggy.py -h<br>    usage: iggy.py [-h] [--no_fwd_propagation] [--no_founded_constraints]<br>                   [--elempath] [--depmat] [--mics] [--autoinputs] [--scenfit]<br>                   [--show_labelings SHOW_LABELINGS] [--show_predictions]<br>                   networkfile observationfile<br><br>    Iggy confronts biological networks given as interaction graphs with<br>    experimental observations given as signs that represent the concentration<br>    changes between two measured states. Iggy supports the incorporation of<br>    uncertain measurements, discovers inconsistencies in data or network, applies<br>    minimal repairs, and predicts the behavior of unmeasured species. In<br>    particular, it distinguishes strong predictions (e.g. increase of a node<br>    level) and weak predictions (e.g., node level increases or remains unchanged).<br><br>    positional arguments:<br>      networkfile           influence graph in SIF format<br>      observationfile       observations in bioquali format<br><br>    optional arguments:<br>      -h, --help            show this help message and exit<br>      --no_fwd_propagation  turn forward propagation OFF, default is ON<br>      --no_founded_constraints<br>                            turn constraints OFF that every variation must be<br>                            founded in an input, default is ON<br>      --elempath            a change must be explained by an elementary path from<br>                            an input.<br>      --depmat              combines multiple states, a change must be explained<br>                            by an elementary path from an input.<br>      --mics                compute minimal inconsistent cores<br>      --autoinputs          compute possible inputs of the network (nodes with<br>                            indegree 0)<br>      --scenfit             compute scenfit of the data, default is mcos<br>      --show_labelings SHOW_LABELINGS<br>                            number of labelings to print, default is OFF, 0=all<br>      --show_predictions    show predictions<br><br><br>The second script contained is opt_graph.py<br>Typical usage is:<br><br>    &gt; opt_graph.py network.sif observations_dir/ --show_repairs 10<br><br>For more options you can ask for help as follows:<br><br>    &gt; opt_graph.py -h<br>    usage: opt_graph.py [-h] [--no_fwd_propagation] [--no_founded_constraints]<br>                        [--elempath] [--depmat] [--autoinputs]<br>                        [--show_repairs SHOW_REPAIRS] [--repair_mode REPAIR_MODE]<br>                        networkfile observationfiles<br><br>    Opt-graph confronts a biological network given as interaction graphs with sets<br>    of experimental observations given as signs that represent the concentration<br>    changes between two measured states. Opt-graph computes the networks fitting<br>    the observation data by removing (or adding) a minimal number of edges in the<br>    given network<br><br>    positional arguments:<br>      networkfile           influence graph in SIF format<br>      observationfiles      directory of observations in bioquali format<br><br>    optional arguments:<br>      -h, --help            show this help message and exit<br>      --no_fwd_propagation  turn forward propagation OFF, default is ON<br>      --no_founded_constraints<br>                            turn constraints OFF that every variation must be<br>                            founded in an input, default is ON<br>      --elempath            a change must be explained by an elementary path from<br>                            an input.<br>      --depmat              combines multiple states, a change must be explained<br>                            by an elementary path from an input.<br>      --autoinputs          compute possible inputs of the network (nodes with<br>                            indegree 0)<br>      --show_repairs SHOW_REPAIRS<br>                            number of repairs to show, default is OFF, 0=all<br>      --repair_mode REPAIR_MODE<br>                            choose repair mode: 1 = remove edges (default), 2 = add +<br>                            remove edges (opt-graph), 3 = flip edges<br><br><br># Samples<br><br>Sample files available here: [demo_data.tar.gz](https://bioasp.github.io/iggy/downloads/demo_data.tar.gz)\n          </div>"}, "last_serial": 4884173, "releases": {"0.1dev": [{"comment_text": "", "digests": {"md5": "4ba6374b8f5840345983b2fa0a845fb4", "sha256": "826c88bd7059740e494d06156ad554855705e8deefeafd69a58605c661971df0"}, "downloads": -1, "filename": "iggy-0.1.tar.gz", "has_sig": false, "md5_digest": "4ba6374b8f5840345983b2fa0a845fb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 300355, "upload_time": "2014-05-30T09:22:42", "upload_time_iso_8601": "2014-05-30T09:22:42.860531Z", "url": "https://files.pythonhosted.org/packages/cb/da/67b35439b0061f7d788301f4642a1fc4a89803c24759b479a89e9b21aee3/iggy-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "e5414357754427ac626a4c60df6f11c2", "sha256": "78b113955a385c7f54ab8bfa2aed897a56d340b55e164ac4a6ff208e668c66e9"}, "downloads": -1, "filename": "iggy-0.2.tar.gz", "has_sig": false, "md5_digest": "e5414357754427ac626a4c60df6f11c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 286967, "upload_time": "2014-06-18T20:55:06", "upload_time_iso_8601": "2014-06-18T20:55:06.765612Z", "url": "https://files.pythonhosted.org/packages/92/51/5a7f142e29d4135aaba9bdf4ed3aeb10614fb231272f5454e17704288d4b/iggy-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "3a086f9b7066f8417cc31820acc12e26", "sha256": "4658b0c3f2be0ba46055ed5e3554dd031d7bb5c5d814508950ab27fccc4fc857"}, "downloads": -1, "filename": "iggy-0.3.tar.gz", "has_sig": false, "md5_digest": "3a086f9b7066f8417cc31820acc12e26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 401058, "upload_time": "2014-06-24T13:22:19", "upload_time_iso_8601": "2014-06-24T13:22:19.215762Z", "url": "https://files.pythonhosted.org/packages/6f/88/7711b793bbcf11dc846154b3a70a5ca7cb2d10760b550eb26f928bd3374a/iggy-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "03e15d2f29e847594f26330bdd6bf3d0", "sha256": "a0a67e11dca14be00a19e52f2c8852d98d1f4f174f0643e6bda5908b85006daa"}, "downloads": -1, "filename": "iggy-0.4.tar.gz", "has_sig": false, "md5_digest": "03e15d2f29e847594f26330bdd6bf3d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26238, "upload_time": "2014-08-01T11:42:32", "upload_time_iso_8601": "2014-08-01T11:42:32.063042Z", "url": "https://files.pythonhosted.org/packages/c9/c2/8739848e166ee4346ff0d7ce24039d19695b2225038b20f3a6f8c3bab051/iggy-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "f113eda81dcb6dc2c96eaa95e44f4a22", "sha256": "6fca0c3fd2227b3431f8247b604783959b19f02c5a6e400d9d2544ae28187c4d"}, "downloads": -1, "filename": "iggy-0.5.tar.gz", "has_sig": false, "md5_digest": "f113eda81dcb6dc2c96eaa95e44f4a22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26633, "upload_time": "2015-02-04T09:16:50", "upload_time_iso_8601": "2015-02-04T09:16:50.192843Z", "url": "https://files.pythonhosted.org/packages/08/31/418876635f634e38583199a55baf5a14c3e414fe975a058707bdde99092e/iggy-0.5.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "9f87a2fe603242047509142beeedbb2e", "sha256": "2b941e9c271d0ff9b2c03c9c63938c73a01df94b9f35c0041089a1b2ef685735"}, "downloads": -1, "filename": "iggy-1.2.tar.gz", "has_sig": false, "md5_digest": "9f87a2fe603242047509142beeedbb2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26589, "upload_time": "2015-06-26T11:03:45", "upload_time_iso_8601": "2015-06-26T11:03:45.492022Z", "url": "https://files.pythonhosted.org/packages/62/bc/80892a7b04b882bf0a5dc61f7f53bc1d34d79a611455698ab07f91b81632/iggy-1.2.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "15660f25b13afdef78ee8a2513dc4ea8", "sha256": "af536a789f90d5a20ded3b86a951d57539436c023b6893913b7639f2a93e6817"}, "downloads": -1, "filename": "iggy-1.4.tar.gz", "has_sig": false, "md5_digest": "15660f25b13afdef78ee8a2513dc4ea8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31581, "upload_time": "2017-03-29T08:14:04", "upload_time_iso_8601": "2017-03-29T08:14:04.409686Z", "url": "https://files.pythonhosted.org/packages/09/8e/fa2ba9718b0f9dddb94434c955540b3f0248469cc75ec69f724e7b5cbc6c/iggy-1.4.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "bdd778566e83c4c0fcc26df1efd8fef0", "sha256": "e23d0619c06eb742fe98c70fbc261198231350ba1be61a20ee82b3317576c863"}, "downloads": -1, "filename": "iggy-1.4.1.tar.gz", "has_sig": false, "md5_digest": "bdd778566e83c4c0fcc26df1efd8fef0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30189, "upload_time": "2017-07-20T12:12:00", "upload_time_iso_8601": "2017-07-20T12:12:00.130482Z", "url": "https://files.pythonhosted.org/packages/e0/54/aebe69a1303672b41bddb9c921e5c7aa1d429048b447e53658e417f29d8c/iggy-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "97972128e8dc580007de82b83d6758a9", "sha256": "adf331e1880c9de008dc2a8c510effdc86d38739a47c9972333d31a7f13a96c0"}, "downloads": -1, "filename": "iggy-1.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "97972128e8dc580007de82b83d6758a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30897, "upload_time": "2018-08-16T12:39:57", "upload_time_iso_8601": "2018-08-16T12:39:57.999840Z", "url": "https://files.pythonhosted.org/packages/03/a2/3ac7a0269351f4fe76079084a0b39d302250389a9ab7e66848f8b1bd5fdd/iggy-1.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d30fc409c4e301219acb6da015adb9f2", "sha256": "98be1af3c1b5c6f806f11620bc8c2a8d84cd66088db4aa138e050974848adbf9"}, "downloads": -1, "filename": "iggy-1.4.2.tar.gz", "has_sig": false, "md5_digest": "d30fc409c4e301219acb6da015adb9f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30605, "upload_time": "2018-08-16T12:39:59", "upload_time_iso_8601": "2018-08-16T12:39:59.728535Z", "url": "https://files.pythonhosted.org/packages/1d/72/776308b566cffc2ccb4e889af5b92324cbe1c837eeebf497b5d4b3a3ff07/iggy-1.4.2.tar.gz", "yanked": false}], "1.4.3": [{"comment_text": "", "digests": {"md5": "489dd312797d9da496d54b658e80e593", "sha256": "6625339ee0ab4a5bd924088ea56ce3a26f377d3b0c5d1d2325e8751af08c03c8"}, "downloads": -1, "filename": "iggy-1.4.3.tar.gz", "has_sig": false, "md5_digest": "489dd312797d9da496d54b658e80e593", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30422, "upload_time": "2019-03-01T12:59:04", "upload_time_iso_8601": "2019-03-01T12:59:04.358784Z", "url": "https://files.pythonhosted.org/packages/95/2a/0d1d558dfaeefba734f39bd08bb73e6f629a0127116bf03dbf65e0914ef6/iggy-1.4.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "489dd312797d9da496d54b658e80e593", "sha256": "6625339ee0ab4a5bd924088ea56ce3a26f377d3b0c5d1d2325e8751af08c03c8"}, "downloads": -1, "filename": "iggy-1.4.3.tar.gz", "has_sig": false, "md5_digest": "489dd312797d9da496d54b658e80e593", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30422, "upload_time": "2019-03-01T12:59:04", "upload_time_iso_8601": "2019-03-01T12:59:04.358784Z", "url": "https://files.pythonhosted.org/packages/95/2a/0d1d558dfaeefba734f39bd08bb73e6f629a0127116bf03dbf65e0914ef6/iggy-1.4.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:44 2020"}