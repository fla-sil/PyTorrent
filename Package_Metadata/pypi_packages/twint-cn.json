{"info": {"author": "Cody Zacharias", "author_email": "codyzacharias@pm.me", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython"], "description": "# TWINT - Twitter Intelligence Tool\n![2](https://i.imgur.com/iaH3s7z.png)\n![3](https://i.imgur.com/hVeCrqL.png)\n\n[![PyPI](https://img.shields.io/pypi/v/twint.svg)](https://pypi.org/project/twint/) [![Build Status](https://travis-ci.org/twintproject/twint.svg?branch=master)](https://travis-ci.org/twintproject/twint) [![Python 3.6|3.7|3.8](https://img.shields.io/badge/Python-3.6%2F3.7%2F3.8-blue.svg)](https://www.python.org/download/releases/3.0/) [![GitHub license](https://img.shields.io/github/license/haccer/tweep.svg)](https://github.com/haccer/tweep/blob/master/LICENSE) [![Downloads](https://pepy.tech/badge/twint)](https://pepy.tech/project/twint) [![Downloads](https://pepy.tech/badge/twint/week)](https://pepy.tech/project/twint/week) [![Patreon](https://img.shields.io/endpoint.svg?url=https:%2F%2Fshieldsio-patreon.herokuapp.com%2Ftwintproject)](https://www.patreon.com/twintproject)\n\n>No authentication. No API. No limits.\n\nTwint is an advanced Twitter scraping tool written in Python that allows for scraping Tweets from Twitter profiles **without** using Twitter's API.\n\nTwint utilizes Twitter's search operators to let you scrape Tweets from specific users, scrape Tweets relating to certain topics, hashtags & trends, or sort out *sensitive* information from Tweets like e-mail and phone numbers. I find this very useful, and you can get really creative with it too.\n\nTwint also makes special queries to Twitter allowing you to also scrape a Twitter user's followers, Tweets a user has liked, and who they follow **without** any authentication, API, Selenium, or browser emulation.\n\n## tl;dr Benefits\nSome of the benefits of using Twint vs Twitter API:\n- Can fetch almost __all__ Tweets (Twitter API limits to last 3200 Tweets only);\n- Fast initial setup;\n- Can be used anonymously and without Twitter sign up;\n- **No rate limitations**.\n\n## Limits imposed by Twitter\nTwitter limits scrolls while browsing the user timeline. This means that with `.Profile` or with `.Favorites` you will be able to get ~3200 tweets.\n\n## Requirements\n- Python 3.6;\n- aiohttp;\n- aiodns;\n- beautifulsoup4;\n- cchardet;\n- elasticsearch;\n- pysocks;\n- pandas (>=0.23.0);\n- aiohttp_socks;\n- schedule;\n- geopy;\n- fake-useragent;\n- py-googletransx.\n\n## Installing\n\n**Git:**\n```bash\ngit clone https://github.com/twintproject/twint.git\ncd twint\npip3 install . -r requirements.txt\n```\n\n**Pip:**\n```bash\npip3 install twint\n```\n\nor\n\n```bash\npip3 install --user --upgrade -e git+https://github.com/twintproject/twint.git@origin/master#egg=twint\n```\n\n**Pipenv**:\n```bash\npipenv install -e git+https://github.com/twintproject/twint.git#egg=twint\n```\n\n## CLI Basic Examples and Combos\nA few simple examples to help you understand the basics:\n\n- `twint -u username` - Scrape all the Tweets from *user*'s timeline.\n- `twint -u username -s pineapple` - Scrape all Tweets from the *user*'s timeline containing _pineapple_.\n- `twint -s pineapple` - Collect every Tweet containing *pineapple* from everyone's Tweets.\n- `twint -u username --year 2014` - Collect Tweets that were tweeted **before** 2014.\n- `twint -u username --since \"2015-12-20 20:30:15\"` - Collect Tweets that were tweeted since 2015-12-20 20:30:15.\n- `twint -u username --since 2015-12-20` - Collect Tweets that were tweeted since 2015-12-20 00:00:00.\n- `twint -u username -o file.txt` - Scrape Tweets and save to file.txt.\n- `twint -u username -o file.csv --csv` - Scrape Tweets and save as a csv file.\n- `twint -u username --email --phone` - Show Tweets that might have phone numbers or email addresses.\n- `twint -s \"Donald Trump\" --verified` - Display Tweets by verified users that Tweeted about Donald Trump.\n- `twint -g=\"48.880048,2.385939,1km\" -o file.csv --csv` - Scrape Tweets from a radius of 1km around a place in Paris and export them to a csv file.\n- `twint -u username -es localhost:9200` - Output Tweets to Elasticsearch\n- `twint -u username -o file.json --json` - Scrape Tweets and save as a json file.\n- `twint -u username --database tweets.db` - Save Tweets to a SQLite database.\n- `twint -u username --followers` - Scrape a Twitter user's followers.\n- `twint -u username --following` - Scrape who a Twitter user follows.\n- `twint -u username --favorites` - Collect all the Tweets a user has favorited (gathers ~3200 tweet).\n- `twint -u username --following --user-full` - Collect full user information a person follows\n- `twint -u username --profile-full` - Use a slow, but effective method to gather Tweets from a user's profile (Gathers ~3200 Tweets, Including Retweets).\n- `twint -u username --retweets` - Use a quick method to gather the last 900 Tweets (that includes retweets) from a user's profile.\n- `twint -u username --resume resume_file.txt` - Resume a search starting from the last saved scroll-id.\n\nMore detail about the commands and options are located in the [wiki](https://github.com/twintproject/twint/wiki/Commands)\n\n## Module Example\n\nTwint can now be used as a module and supports custom formatting. **More details are located in the [wiki](https://github.com/twintproject/twint/wiki/Module)**\n\n```python\nimport twint\n\n# Configure\nc = twint.Config()\nc.Username = \"now\"\nc.Search = \"fruit\"\n\n# Run\ntwint.run.Search(c)\n```\n> Output\n\n`955511208597184512 2018-01-22 18:43:19 GMT <now> pineapples are the best fruit`\n\n```python\nimport twint\n\nc = twint.Config()\n\nc.Username = \"noneprivacy\"\nc.Custom[\"tweet\"] = [\"id\"]\nc.Custom[\"user\"] = [\"bio\"]\nc.Limit = 10\nc.Store_csv = True\nc.Output = \"none\"\n\ntwint.run.Search(c)\n```\n\n## Storing Options\n- Write to file;\n- CSV;\n- JSON;\n- SQLite;\n- Elasticsearch.\n\n## Elasticsearch Setup\n\nDetails on setting up Elasticsearch with Twint is located in the [wiki](https://github.com/twintproject/twint/wiki/Elasticsearch).\n\n## Graph Visualization\n![graph](https://i.imgur.com/EEJqB8n.png)\n\n[Graph](https://github.com/twintproject/twint/wiki/Graph) details are also located in the [wiki](https://github.com/twintproject/twint/wiki/Graph).\n\nWe are developing a Twint Desktop App.\n\n![4](https://i.imgur.com/DzcfIgL.png)\n\n## FAQ\n> I tried scraping tweets from a user, I know that they exist but I'm not getting them\n\nTwitter can shadow-ban accounts, which means that their tweets will not be available via search. To solve this, pass `--profile-full` if you are using Twint via CLI or, if are using Twint as module, add `config.Profile_full = True`. Please note that this process will be quite slow.\n## More Examples\n\n#### Followers/Following\n\n> To get only follower usernames/following usernames\n\n`twint -u username --followers`\n\n`twint -u username --following`\n\n> To get user info of followers/following users\n\n`twint -u username --followers --user-full`\n\n`twint -u username --following --user-full`\n\n#### userlist\n\n> To get only user info of user\n\n`twint -u username --user-full`\n\n> To get user info of users from a userlist\n\n`twint --userlist inputlist --user-full`\n\n\n#### tweet translation (experimental)\n\n> To get 100 english tweets and translate them to italian\n\n`twint -u noneprivacy --csv --output none.csv --lang en --translate --translate-dest it --limit 100`\n\nor\n\n```python\nimport twint\n\nc = twint.Config()\nc.Username = \"noneprivacy\"\nc.Limit = 100\nc.Store_csv = True\nc.Output = \"none.csv\"\nc.Lang = \"en\"\nc.Translate = True\nc.TranslateDest = \"it\"\ntwint.run.Search(c)\n```\n\nNotes:\n- [Google translate has some quotas](https://cloud.google.com/translate/quotas)\n\n## Featured Blog Posts:\n- [How to use Twint as an OSINT tool](https://pielco11.ovh/posts/twint-osint/)\n- [Basic tutorial made by Null Byte](https://null-byte.wonderhowto.com/how-to/mine-twitter-for-targeted-information-with-twint-0193853/)\n- [Analyzing Tweets with NLP in minutes with Spark, Optimus and Twint](https://towardsdatascience.com/analyzing-tweets-with-nlp-in-minutes-with-spark-optimus-and-twint-a0c96084995f)\n- [Loading tweets into Kafka and Neo4j](https://markhneedham.com/blog/2019/05/29/loading-tweets-twint-kafka-neo4j/)\n\n## Contact\n\nIf you have any question, want to join in discussions, or need extra help, you are welcome to join our Twint focused channel at [OSINT team](https://osint.team)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/twintproject/twint", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "twint-cn", "package_url": "https://pypi.org/project/twint-cn/", "platform": "", "project_url": "https://pypi.org/project/twint-cn/", "project_urls": {"Homepage": "https://github.com/twintproject/twint"}, "release_url": "https://pypi.org/project/twint-cn/2.1.15/", "requires_dist": null, "requires_python": ">=3.6.0", "summary": "An advanced Twitter scraping & OSINT tool.", "version": "2.1.15", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TWINT - Twitter Intelligence Tool</h1>\n<p><img alt=\"2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd675f60c5098da8b3f4048a9836e984ae87c3ad/68747470733a2f2f692e696d6775722e636f6d2f6961483373377a2e706e67\">\n<img alt=\"3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0b6b73976c408876d977e7e7b160b0f737c61cf/68747470733a2f2f692e696d6775722e636f6d2f6856654372714c2e706e67\"></p>\n<p><a href=\"https://pypi.org/project/twint/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae7069956daec500764d1f8f33b354293a4efcb2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7477696e742e737667\"></a> <a href=\"https://travis-ci.org/twintproject/twint\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ce066da30324ff34012b8a0dd07fc94d7223f53d/68747470733a2f2f7472617669732d63692e6f72672f7477696e7470726f6a6563742f7477696e742e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://www.python.org/download/releases/3.0/\" rel=\"nofollow\"><img alt=\"Python 3.6|3.7|3.8\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/152c6c24f02c855ac8531446256c7f511a6b2290/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d332e36253246332e37253246332e382d626c75652e737667\"></a> <a href=\"https://github.com/haccer/tweep/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec0900fb7b156561023f43156eeba7c704932336/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6861636365722f74776565702e737667\"></a> <a href=\"https://pepy.tech/project/twint\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68e1b26105ad459069a70462f176809b07af701b/68747470733a2f2f706570792e746563682f62616467652f7477696e74\"></a> <a href=\"https://pepy.tech/project/twint/week\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d186d1c3df7eff010ae5057c5e0a232bd9f2da09/68747470733a2f2f706570792e746563682f62616467652f7477696e742f7765656b\"></a> <a href=\"https://www.patreon.com/twintproject\" rel=\"nofollow\"><img alt=\"Patreon\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d2eadc5aed02f692f59ee5600784d0c3deb39bd/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e742e7376673f75726c3d68747470733a253246253246736869656c6473696f2d70617472656f6e2e6865726f6b756170702e636f6d2532467477696e7470726f6a656374\"></a></p>\n<blockquote>\n<p>No authentication. No API. No limits.</p>\n</blockquote>\n<p>Twint is an advanced Twitter scraping tool written in Python that allows for scraping Tweets from Twitter profiles <strong>without</strong> using Twitter's API.</p>\n<p>Twint utilizes Twitter's search operators to let you scrape Tweets from specific users, scrape Tweets relating to certain topics, hashtags &amp; trends, or sort out <em>sensitive</em> information from Tweets like e-mail and phone numbers. I find this very useful, and you can get really creative with it too.</p>\n<p>Twint also makes special queries to Twitter allowing you to also scrape a Twitter user's followers, Tweets a user has liked, and who they follow <strong>without</strong> any authentication, API, Selenium, or browser emulation.</p>\n<h2>tl;dr Benefits</h2>\n<p>Some of the benefits of using Twint vs Twitter API:</p>\n<ul>\n<li>Can fetch almost <strong>all</strong> Tweets (Twitter API limits to last 3200 Tweets only);</li>\n<li>Fast initial setup;</li>\n<li>Can be used anonymously and without Twitter sign up;</li>\n<li><strong>No rate limitations</strong>.</li>\n</ul>\n<h2>Limits imposed by Twitter</h2>\n<p>Twitter limits scrolls while browsing the user timeline. This means that with <code>.Profile</code> or with <code>.Favorites</code> you will be able to get ~3200 tweets.</p>\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.6;</li>\n<li>aiohttp;</li>\n<li>aiodns;</li>\n<li>beautifulsoup4;</li>\n<li>cchardet;</li>\n<li>elasticsearch;</li>\n<li>pysocks;</li>\n<li>pandas (&gt;=0.23.0);</li>\n<li>aiohttp_socks;</li>\n<li>schedule;</li>\n<li>geopy;</li>\n<li>fake-useragent;</li>\n<li>py-googletransx.</li>\n</ul>\n<h2>Installing</h2>\n<p><strong>Git:</strong></p>\n<pre>git clone https://github.com/twintproject/twint.git\n<span class=\"nb\">cd</span> twint\npip3 install . -r requirements.txt\n</pre>\n<p><strong>Pip:</strong></p>\n<pre>pip3 install twint\n</pre>\n<p>or</p>\n<pre>pip3 install --user --upgrade -e git+https://github.com/twintproject/twint.git@origin/master#egg<span class=\"o\">=</span>twint\n</pre>\n<p><strong>Pipenv</strong>:</p>\n<pre>pipenv install -e git+https://github.com/twintproject/twint.git#egg<span class=\"o\">=</span>twint\n</pre>\n<h2>CLI Basic Examples and Combos</h2>\n<p>A few simple examples to help you understand the basics:</p>\n<ul>\n<li><code>twint -u username</code> - Scrape all the Tweets from <em>user</em>'s timeline.</li>\n<li><code>twint -u username -s pineapple</code> - Scrape all Tweets from the <em>user</em>'s timeline containing <em>pineapple</em>.</li>\n<li><code>twint -s pineapple</code> - Collect every Tweet containing <em>pineapple</em> from everyone's Tweets.</li>\n<li><code>twint -u username --year 2014</code> - Collect Tweets that were tweeted <strong>before</strong> 2014.</li>\n<li><code>twint -u username --since \"2015-12-20 20:30:15\"</code> - Collect Tweets that were tweeted since 2015-12-20 20:30:15.</li>\n<li><code>twint -u username --since 2015-12-20</code> - Collect Tweets that were tweeted since 2015-12-20 00:00:00.</li>\n<li><code>twint -u username -o file.txt</code> - Scrape Tweets and save to file.txt.</li>\n<li><code>twint -u username -o file.csv --csv</code> - Scrape Tweets and save as a csv file.</li>\n<li><code>twint -u username --email --phone</code> - Show Tweets that might have phone numbers or email addresses.</li>\n<li><code>twint -s \"Donald Trump\" --verified</code> - Display Tweets by verified users that Tweeted about Donald Trump.</li>\n<li><code>twint -g=\"48.880048,2.385939,1km\" -o file.csv --csv</code> - Scrape Tweets from a radius of 1km around a place in Paris and export them to a csv file.</li>\n<li><code>twint -u username -es localhost:9200</code> - Output Tweets to Elasticsearch</li>\n<li><code>twint -u username -o file.json --json</code> - Scrape Tweets and save as a json file.</li>\n<li><code>twint -u username --database tweets.db</code> - Save Tweets to a SQLite database.</li>\n<li><code>twint -u username --followers</code> - Scrape a Twitter user's followers.</li>\n<li><code>twint -u username --following</code> - Scrape who a Twitter user follows.</li>\n<li><code>twint -u username --favorites</code> - Collect all the Tweets a user has favorited (gathers ~3200 tweet).</li>\n<li><code>twint -u username --following --user-full</code> - Collect full user information a person follows</li>\n<li><code>twint -u username --profile-full</code> - Use a slow, but effective method to gather Tweets from a user's profile (Gathers ~3200 Tweets, Including Retweets).</li>\n<li><code>twint -u username --retweets</code> - Use a quick method to gather the last 900 Tweets (that includes retweets) from a user's profile.</li>\n<li><code>twint -u username --resume resume_file.txt</code> - Resume a search starting from the last saved scroll-id.</li>\n</ul>\n<p>More detail about the commands and options are located in the <a href=\"https://github.com/twintproject/twint/wiki/Commands\" rel=\"nofollow\">wiki</a></p>\n<h2>Module Example</h2>\n<p>Twint can now be used as a module and supports custom formatting. <strong>More details are located in the <a href=\"https://github.com/twintproject/twint/wiki/Module\" rel=\"nofollow\">wiki</a></strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">twint</span>\n\n<span class=\"c1\"># Configure</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">twint</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"p\">()</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Username</span> <span class=\"o\">=</span> <span class=\"s2\">\"now\"</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Search</span> <span class=\"o\">=</span> <span class=\"s2\">\"fruit\"</span>\n\n<span class=\"c1\"># Run</span>\n<span class=\"n\">twint</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">Search</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n</pre>\n<blockquote>\n<p>Output</p>\n</blockquote>\n<p><code>955511208597184512 2018-01-22 18:43:19 GMT &lt;now&gt; pineapples are the best fruit</code></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">twint</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">twint</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"p\">()</span>\n\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Username</span> <span class=\"o\">=</span> <span class=\"s2\">\"noneprivacy\"</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Custom</span><span class=\"p\">[</span><span class=\"s2\">\"tweet\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"id\"</span><span class=\"p\">]</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Custom</span><span class=\"p\">[</span><span class=\"s2\">\"user\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"bio\"</span><span class=\"p\">]</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Limit</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Store_csv</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Output</span> <span class=\"o\">=</span> <span class=\"s2\">\"none\"</span>\n\n<span class=\"n\">twint</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">Search</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n</pre>\n<h2>Storing Options</h2>\n<ul>\n<li>Write to file;</li>\n<li>CSV;</li>\n<li>JSON;</li>\n<li>SQLite;</li>\n<li>Elasticsearch.</li>\n</ul>\n<h2>Elasticsearch Setup</h2>\n<p>Details on setting up Elasticsearch with Twint is located in the <a href=\"https://github.com/twintproject/twint/wiki/Elasticsearch\" rel=\"nofollow\">wiki</a>.</p>\n<h2>Graph Visualization</h2>\n<p><img alt=\"graph\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8dd4245415235d6693f937ab3a88e3db8d010f48/68747470733a2f2f692e696d6775722e636f6d2f45454a7142386e2e706e67\"></p>\n<p><a href=\"https://github.com/twintproject/twint/wiki/Graph\" rel=\"nofollow\">Graph</a> details are also located in the <a href=\"https://github.com/twintproject/twint/wiki/Graph\" rel=\"nofollow\">wiki</a>.</p>\n<p>We are developing a Twint Desktop App.</p>\n<p><img alt=\"4\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/087cbe93b2fb2799307e26723802681a0b458715/68747470733a2f2f692e696d6775722e636f6d2f447a636649674c2e706e67\"></p>\n<h2>FAQ</h2>\n<blockquote>\n<p>I tried scraping tweets from a user, I know that they exist but I'm not getting them</p>\n</blockquote>\n<p>Twitter can shadow-ban accounts, which means that their tweets will not be available via search. To solve this, pass <code>--profile-full</code> if you are using Twint via CLI or, if are using Twint as module, add <code>config.Profile_full = True</code>. Please note that this process will be quite slow.</p>\n<h2>More Examples</h2>\n<h4>Followers/Following</h4>\n<blockquote>\n<p>To get only follower usernames/following usernames</p>\n</blockquote>\n<p><code>twint -u username --followers</code></p>\n<p><code>twint -u username --following</code></p>\n<blockquote>\n<p>To get user info of followers/following users</p>\n</blockquote>\n<p><code>twint -u username --followers --user-full</code></p>\n<p><code>twint -u username --following --user-full</code></p>\n<h4>userlist</h4>\n<blockquote>\n<p>To get only user info of user</p>\n</blockquote>\n<p><code>twint -u username --user-full</code></p>\n<blockquote>\n<p>To get user info of users from a userlist</p>\n</blockquote>\n<p><code>twint --userlist inputlist --user-full</code></p>\n<h4>tweet translation (experimental)</h4>\n<blockquote>\n<p>To get 100 english tweets and translate them to italian</p>\n</blockquote>\n<p><code>twint -u noneprivacy --csv --output none.csv --lang en --translate --translate-dest it --limit 100</code></p>\n<p>or</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">twint</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">twint</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"p\">()</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Username</span> <span class=\"o\">=</span> <span class=\"s2\">\"noneprivacy\"</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Limit</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Store_csv</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Output</span> <span class=\"o\">=</span> <span class=\"s2\">\"none.csv\"</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Lang</span> <span class=\"o\">=</span> <span class=\"s2\">\"en\"</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Translate</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">TranslateDest</span> <span class=\"o\">=</span> <span class=\"s2\">\"it\"</span>\n<span class=\"n\">twint</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">Search</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n</pre>\n<p>Notes:</p>\n<ul>\n<li><a href=\"https://cloud.google.com/translate/quotas\" rel=\"nofollow\">Google translate has some quotas</a></li>\n</ul>\n<h2>Featured Blog Posts:</h2>\n<ul>\n<li><a href=\"https://pielco11.ovh/posts/twint-osint/\" rel=\"nofollow\">How to use Twint as an OSINT tool</a></li>\n<li><a href=\"https://null-byte.wonderhowto.com/how-to/mine-twitter-for-targeted-information-with-twint-0193853/\" rel=\"nofollow\">Basic tutorial made by Null Byte</a></li>\n<li><a href=\"https://towardsdatascience.com/analyzing-tweets-with-nlp-in-minutes-with-spark-optimus-and-twint-a0c96084995f\" rel=\"nofollow\">Analyzing Tweets with NLP in minutes with Spark, Optimus and Twint</a></li>\n<li><a href=\"https://markhneedham.com/blog/2019/05/29/loading-tweets-twint-kafka-neo4j/\" rel=\"nofollow\">Loading tweets into Kafka and Neo4j</a></li>\n</ul>\n<h2>Contact</h2>\n<p>If you have any question, want to join in discussions, or need extra help, you are welcome to join our Twint focused channel at <a href=\"https://osint.team\" rel=\"nofollow\">OSINT team</a></p>\n\n          </div>"}, "last_serial": 6826132, "releases": {"2.1.15": [{"comment_text": "", "digests": {"md5": "432247ad54daf9f21c0b5016c78addfa", "sha256": "f14feb1187c208c9a274e39245a7845df5a4adf6acb7426dce536c8feb0158b0"}, "downloads": -1, "filename": "twint_cn-2.1.15.1.tar.gz", "has_sig": false, "md5_digest": "432247ad54daf9f21c0b5016c78addfa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 30994, "upload_time": "2020-03-17T05:13:31", "upload_time_iso_8601": "2020-03-17T05:13:31.680071Z", "url": "https://files.pythonhosted.org/packages/67/56/2031e01b9ab1c31c0f55410c9b1c253fe716e118090be80b9e337232a4cf/twint_cn-2.1.15.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "432247ad54daf9f21c0b5016c78addfa", "sha256": "f14feb1187c208c9a274e39245a7845df5a4adf6acb7426dce536c8feb0158b0"}, "downloads": -1, "filename": "twint_cn-2.1.15.1.tar.gz", "has_sig": false, "md5_digest": "432247ad54daf9f21c0b5016c78addfa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 30994, "upload_time": "2020-03-17T05:13:31", "upload_time_iso_8601": "2020-03-17T05:13:31.680071Z", "url": "https://files.pythonhosted.org/packages/67/56/2031e01b9ab1c31c0f55410c9b1c253fe716e118090be80b9e337232a4cf/twint_cn-2.1.15.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:54 2020"}