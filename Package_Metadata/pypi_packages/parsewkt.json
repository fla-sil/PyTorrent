{"info": {"author": "Christian Ledermann", "author_email": "christian.ledermann@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Topic :: Scientific/Engineering :: GIS"], "description": "The WKT Parser was gernerated using grako https://pypi.python.org/pypi/grako\n        \n        The ebnf file is the translation of http://svn.osgeo.org/postgis/trunk/doc/bnf-wkt.txt\n        \n        The bnf to ebnf conversion was guided by http://stackoverflow.com/questions/14922242/how-to-convert-bnf-to-ebnf\n        \n        The generation of parse.py is as easy as: /path/to/grako Wkt.ebnf -o parse.py\n        \n        parsewkt is continually tested with *Travis CI*\n        \n        .. image:: https://api.travis-ci.org/cleder/parsewkt.png\n            :target: https://travis-ci.org/cleder/parsewkt\n        \n        .. image:: https://coveralls.io/repos/cleder/parsewkt/badge.png?branch=master\n            :target: https://coveralls.io/r/cleder/parsewkt?branch=master\n        \n        Implementation Status\n        =====================\n        \n        Currently implemented is parsing from WKT to a __geo_interface__ compliant\n        dictionary for the following types:\n        \n        - POINT\n        - LINESTRING\n        - POLYGON\n        - MULTIPOINT\n        - MULTILINESTRING\n        - MULTIPOLYGON\n        - GEOMETRYCOLLECTION\n        \n        The parser can parse the following types but they are currently not\n        translated into python objects:\n        \n        - COMPOUNDCURVE\n        - CIRCULARSTRING\n        - CURVEPOLYGON\n        - MULTICURVE\n        - POLYHEDRALSURFACE\n        - TIN\n        - TRIANGLE\n        \n        Usage\n        ======\n        \n            >>> from parsewkt import from_wkt\n            >>> gc = \"\"\"GEOMETRYCOLLECTION(\n            ...           POINT(99 98),\n            ...           LINESTRING(1 1, 3 3),\n            ...           POLYGON((0 0, 0 1, 1 1, 0 0)),\n            ...           POLYGON((0 0, 0 9, 9 9, 9 0, 0 0), (5 5, 5 6, 6 6, 5 5)),\n            ...           MULTIPOLYGON(((0 0, 0 9, 9 9, 9 0, 0 0), (5 5, 5 6, 6 6, 5 5)))\n            ...         )\"\"\"\n            >>> from_wkt(gc)\n            {'type': 'GeometryCollection', 'geometries': ({'type': 'Point', 'coordinates': (99.0, 98.0)}, {'type': 'LineString', 'coordinates': ((1.0, 1.0), (3.0, 3.0))}, {'type': 'Polygon', 'coordinates': (((0.0, 0.0), (0.0, 1.0), (1.0, 1.0), (0.0, 0.0)),)}, {'type': 'Polygon', 'coordinates': (((0.0, 0.0), (0.0, 9.0), (9.0, 9.0), (9.0, 0.0), (0.0, 0.0)), ((5.0, 5.0), (5.0, 6.0), (6.0, 6.0), (5.0, 5.0)))}, {'type': 'MultiPolygon', 'coordinates': ((((0.0, 0.0), (0.0, 9.0), (9.0, 9.0), (9.0, 0.0), (0.0, 0.0)), ((5.0, 5.0), (5.0, 6.0), (6.0, 6.0), (5.0, 5.0))),)})}\n        \n            >>> tri = \"\"\"TRIANGLE((0 0 0,0 1 0,1 1 0,0 0 0))\"\"\"\n            >>> from_wkt(tri)\n            Traceback (most recent call last):\n              File \"<console>\", line 1, in <module>\n              File \"/home/.../parsewkt/parsewkt/wkt.py\", line 307, in from_wkt\n                raise NotImplementedError\n            NotImplementedError\n        \n        \n        Download\n        ********", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cleder/parsewkt", "keywords": "WKT GIS Spatial", "license": "LGPL", "maintainer": null, "maintainer_email": null, "name": "parsewkt", "package_url": "https://pypi.org/project/parsewkt/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/parsewkt/", "project_urls": {"Homepage": "https://github.com/cleder/parsewkt"}, "release_url": "https://pypi.org/project/parsewkt/0.1dev/", "requires_dist": null, "requires_python": null, "summary": "WKT Parser", "version": "0.1dev", "yanked": false, "html_description": "<div class=\"project-description\">\n            The WKT Parser was gernerated using grako https://pypi.python.org/pypi/grako<br>        <br>        The ebnf file is the translation of http://svn.osgeo.org/postgis/trunk/doc/bnf-wkt.txt<br>        <br>        The bnf to ebnf conversion was guided by http://stackoverflow.com/questions/14922242/how-to-convert-bnf-to-ebnf<br>        <br>        The generation of parse.py is as easy as: /path/to/grako Wkt.ebnf -o parse.py<br>        <br>        parsewkt is continually tested with *Travis CI*<br>        <br>        .. image:: https://api.travis-ci.org/cleder/parsewkt.png<br>            :target: https://travis-ci.org/cleder/parsewkt<br>        <br>        .. image:: https://coveralls.io/repos/cleder/parsewkt/badge.png?branch=master<br>            :target: https://coveralls.io/r/cleder/parsewkt?branch=master<br>        <br>        Implementation Status<br>        =====================<br>        <br>        Currently implemented is parsing from WKT to a __geo_interface__ compliant<br>        dictionary for the following types:<br>        <br>        - POINT<br>        - LINESTRING<br>        - POLYGON<br>        - MULTIPOINT<br>        - MULTILINESTRING<br>        - MULTIPOLYGON<br>        - GEOMETRYCOLLECTION<br>        <br>        The parser can parse the following types but they are currently not<br>        translated into python objects:<br>        <br>        - COMPOUNDCURVE<br>        - CIRCULARSTRING<br>        - CURVEPOLYGON<br>        - MULTICURVE<br>        - POLYHEDRALSURFACE<br>        - TIN<br>        - TRIANGLE<br>        <br>        Usage<br>        ======<br>        <br>            &gt;&gt;&gt; from parsewkt import from_wkt<br>            &gt;&gt;&gt; gc = \"\"\"GEOMETRYCOLLECTION(<br>            ...           POINT(99 98),<br>            ...           LINESTRING(1 1, 3 3),<br>            ...           POLYGON((0 0, 0 1, 1 1, 0 0)),<br>            ...           POLYGON((0 0, 0 9, 9 9, 9 0, 0 0), (5 5, 5 6, 6 6, 5 5)),<br>            ...           MULTIPOLYGON(((0 0, 0 9, 9 9, 9 0, 0 0), (5 5, 5 6, 6 6, 5 5)))<br>            ...         )\"\"\"<br>            &gt;&gt;&gt; from_wkt(gc)<br>            {'type': 'GeometryCollection', 'geometries': ({'type': 'Point', 'coordinates': (99.0, 98.0)}, {'type': 'LineString', 'coordinates': ((1.0, 1.0), (3.0, 3.0))}, {'type': 'Polygon', 'coordinates': (((0.0, 0.0), (0.0, 1.0), (1.0, 1.0), (0.0, 0.0)),)}, {'type': 'Polygon', 'coordinates': (((0.0, 0.0), (0.0, 9.0), (9.0, 9.0), (9.0, 0.0), (0.0, 0.0)), ((5.0, 5.0), (5.0, 6.0), (6.0, 6.0), (5.0, 5.0)))}, {'type': 'MultiPolygon', 'coordinates': ((((0.0, 0.0), (0.0, 9.0), (9.0, 9.0), (9.0, 0.0), (0.0, 0.0)), ((5.0, 5.0), (5.0, 6.0), (6.0, 6.0), (5.0, 5.0))),)})}<br>        <br>            &gt;&gt;&gt; tri = \"\"\"TRIANGLE((0 0 0,0 1 0,1 1 0,0 0 0))\"\"\"<br>            &gt;&gt;&gt; from_wkt(tri)<br>            Traceback (most recent call last):<br>              File \"&lt;console&gt;\", line 1, in &lt;module&gt;<br>              File \"/home/.../parsewkt/parsewkt/wkt.py\", line 307, in from_wkt<br>                raise NotImplementedError<br>            NotImplementedError<br>        <br>        <br>        Download<br>        ********\n          </div>"}, "last_serial": 903155, "releases": {"0.1dev": [{"comment_text": "", "digests": {"md5": "dfde68104681c841e16dd73a76994b11", "sha256": "25e9c446632d9fc6b209256ba780eff0b25c9a98691dc7dcea03a7cfe2e50b3a"}, "downloads": -1, "filename": "parsewkt-0.1dev.tar.gz", "has_sig": false, "md5_digest": "dfde68104681c841e16dd73a76994b11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11897, "upload_time": "2013-10-25T14:00:13", "upload_time_iso_8601": "2013-10-25T14:00:13.016965Z", "url": "https://files.pythonhosted.org/packages/45/8a/cca913105036937bcf9f697a763d0146ed338caf417bf050c3eee41f3cd7/parsewkt-0.1dev.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dfde68104681c841e16dd73a76994b11", "sha256": "25e9c446632d9fc6b209256ba780eff0b25c9a98691dc7dcea03a7cfe2e50b3a"}, "downloads": -1, "filename": "parsewkt-0.1dev.tar.gz", "has_sig": false, "md5_digest": "dfde68104681c841e16dd73a76994b11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11897, "upload_time": "2013-10-25T14:00:13", "upload_time_iso_8601": "2013-10-25T14:00:13.016965Z", "url": "https://files.pythonhosted.org/packages/45/8a/cca913105036937bcf9f697a763d0146ed338caf417bf050c3eee41f3cd7/parsewkt-0.1dev.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:17 2020"}