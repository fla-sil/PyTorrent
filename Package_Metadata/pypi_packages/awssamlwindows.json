{"info": {"author": "Neeharika", "author_email": "neeharika.mm@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Programming Language :: Python"], "description": "As part of AWS Governance to enhance the security with the accounts and IAM users, Federated API access is recommended for AWS resources instead of hard-coded IAM AcessID and SecretKeys in the config file.\n\n# Steps:\n- Install the python package based on the OS using below command:\n\n\t\tFor Linux environment, pip install awssamllinux\n\t\tFor Windows environment, pip install awssamlwindows\n\n- Create a 'configure' file under ~/.aws directory without providing the values for access and secret keys\n \n        [default]\n        output = json\n        region = us-east-1\n        aws_access_key_id =\n        aws_secret_access_key =\n\n- Based on the Python version and installation, the script might throw errors due to missing modules on your system like below -\n\n        requests\n        html5lib\n        configparser\n \n- Install the required modules:\n\n        On Linux, pip install <module>\n            Eg: pip install requests\n        On Windows, easy_install <module>\n            Eg: easy_install requests\n \n- Whenever you need SAML access to your AWS services, just the command:\n\n        aws-saml.py \n\n- This does the following:\n        \n        - Prompts the user for AD username/password and does SAML auth with our ADFS\n                    NOTE: Username has to be in the format rpega\\<networkID>\n                    Eg: rpega\\mn001\n\n         - Based on SAML response, prompts the user to choose the roles available on AWS for that user\n\n         - Then, stores the temporarily created credentials (using Amazon STS service) for the user in the \n           .aws/credentials file along with STS token\n\n        - Use API calls to work on AWS resources\n\n        - Sample API call used in the script is for listing the S3 buckets, which is in Boto2.x format", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "awssamlwindows", "package_url": "https://pypi.org/project/awssamlwindows/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/awssamlwindows/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/awssamlwindows/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "SAML federated API access for AWS", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>As part of AWS Governance to enhance the security with the accounts and IAM users, Federated API access is recommended for AWS resources instead of hard-coded IAM AcessID and SecretKeys in the config file.</p>\n<p># Steps:\n- Install the python package based on the OS using below command:</p>\n<blockquote>\nFor Linux environment, pip install awssamllinux\nFor Windows environment, pip install awssamlwindows</blockquote>\n<ul>\n<li><p>Create a \u2018configure\u2019 file under ~/.aws directory without providing the values for access and secret keys</p>\n<blockquote>\n<p>[default]\noutput = json\nregion = us-east-1\naws_access_key_id =\naws_secret_access_key =</p>\n</blockquote>\n</li>\n<li><p>Based on the Python version and installation, the script might throw errors due to missing modules on your system like below -</p>\n<blockquote>\n<p>requests\nhtml5lib\nconfigparser</p>\n</blockquote>\n</li>\n<li><p>Install the required modules:</p>\n<blockquote>\n<dl>\n<dt>On Linux, pip install &lt;module&gt;</dt>\n<dd><p>Eg: pip install requests</p>\n</dd>\n<dt>On Windows, easy_install &lt;module&gt;</dt>\n<dd><p>Eg: easy_install requests</p>\n</dd>\n</dl>\n</blockquote>\n</li>\n<li><p>Whenever you need SAML access to your AWS services, just the command:</p>\n<blockquote>\n<p>aws-saml.py</p>\n</blockquote>\n</li>\n<li><p>This does the following:</p>\n<blockquote>\n<ul>\n<li><dl>\n<dt>Prompts the user for AD username/password and does SAML auth with our ADFS</dt>\n<dd>NOTE: Username has to be in the format rpega&lt;networkID&gt;\nEg: rpegamn001</dd>\n</dl>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>Based on SAML response, prompts the user to choose the roles available on AWS for that user</li>\n<li>Then, stores the temporarily created credentials (using Amazon STS service) for the user in the\n.aws/credentials file along with STS token</li>\n</ul>\n</blockquote>\n<ul>\n<li>Use API calls to work on AWS resources</li>\n<li>Sample API call used in the script is for listing the S3 buckets, which is in Boto2.x format</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 2414769, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1dc2f353e224ed92ed95da54a0a21bff", "sha256": "33c0e8155ad606f161a05949cd18814d3644bb7f04c49d4c59a1d9a9cd9663c5"}, "downloads": -1, "filename": "awssamlwindows-0.0.1.zip", "has_sig": false, "md5_digest": "1dc2f353e224ed92ed95da54a0a21bff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5458, "upload_time": "2016-10-21T09:45:52", "upload_time_iso_8601": "2016-10-21T09:45:52.156452Z", "url": "https://files.pythonhosted.org/packages/c2/14/37ede82582e7c076f79eb9e2fed61ca13c6f70be11acd448984cddc44ca9/awssamlwindows-0.0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1dc2f353e224ed92ed95da54a0a21bff", "sha256": "33c0e8155ad606f161a05949cd18814d3644bb7f04c49d4c59a1d9a9cd9663c5"}, "downloads": -1, "filename": "awssamlwindows-0.0.1.zip", "has_sig": false, "md5_digest": "1dc2f353e224ed92ed95da54a0a21bff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5458, "upload_time": "2016-10-21T09:45:52", "upload_time_iso_8601": "2016-10-21T09:45:52.156452Z", "url": "https://files.pythonhosted.org/packages/c2/14/37ede82582e7c076f79eb9e2fed61ca13c6f70be11acd448984cddc44ca9/awssamlwindows-0.0.1.zip", "yanked": false}], "timestamp": "Thu May  7 18:15:35 2020"}