{"info": {"author": "Ladybug Tools", "author_email": "info@ladybug.tools", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython"], "description": "# queenbee\n\n:crown: Queenbee is a workflow language for creating workflows! The Queenbee workflow\nis inspired by [Argo Workflow](https://argoproj.github.io/docs/argo/readme.html) and\nborrows a number of terms and expressions from\n[Apache Airflow](http://airflow.apache.org/) and [Ansible](https://docs.ansible.com/).\n\nQueenbee populates and validates the workflows but does not run them! For running the\nworkflows see `ladybug-tools/workerbee` which converts Queenbee workflows to executable\n[Luigi](https://luigi.readthedocs.io/en/stable/) pipelines.\n\nYou can find more workflow samples in\n[honeybee-radiance-workflow](https://github.com/ladybug-tools/honeybee-radiance-workflow)\nrepository.\n\n# Queenbee Workflow structure\n\nA Queenbee workflow is a YAML / JSON file which consists of different parts. You\ncan use Queenbee to generate the workflows programmatically using Python or you can\nwrite a workflow line by line.\n\nHere we discuss the generic structure of a Queenbee workflow. [See OpenApi schema\ndocumentation for all Workflow objects](https://www.ladybug.tools/queenbee/).\n\n```\n  Workflow\n    |\n    |__ name\n    |\n    |__ artifact_locations\n    |\n    |__ inputs\n    |   |___ parameters\n    |   |___ artifacts\n    |\n    |__ operators\n    |\n    |__ templates\n    |\n    |__ flow\n    |   |___ tasks / steps\n    |\n    |__ outputs\n        |___ parameters\n        |___ artifacts\n\n```\n\n## 1. Artifact Locations\n\nArtifacts are files that will be used during different steps of the workflow computation.\nThese files can be stored on different types of systems (remote folder, local machine or\nAPI call to a webapp). Every artifact indicates which `location` or source-system it is\nto be acquired from, and each `Artifact Location` is listed in the `artifact_locations`\nkey of the `workflow` object. Currently 3 types of locations are supported:\n\n* **Local**: Artifacts situated on the machine running the workflows\n* **HTTP**: Artifacts that can be sourced from a website or web API\n* **S3**: Artifacts that can be retrieved from an S3 bucket\n\n```yaml\nartifact_locations:\n- name: local-test\n  type: local\n  root: C:\\Users\\Test\\Projects\\Project 1\n\n- name: http-test\n  type: http\n  root: http://climate.onebuilding.org\n  headers: \n    Authorization: some-long-JWT-token\n\n- name: s3-test\n  type: s3\n  root: pollination\n  endpoint: s3.eu-west-1.amazonaws.com\n  bucket: all-of-my-data\n  credentials_path: C:\\Users\\Test\\.queenbee\\config.yaml\n```\n\n## 2. inputs\n\nWorkflow inputs are global inputs that can be accessed as `\"{{workflow.inputs.xx.yy}}\"`\nwhen creating the `flow` section. For instance to access an input parameter with the\nname `file-path` one should use `\"{{workflow.inputs.parameters.file-path}}\"` and Queenbee\nwill map the value of `file-path` parameter to this place-holder.\n\nInputs can be from two different types: `parameters` and `artifacts`.\n\nInput `artifacts` are a collection of *files* that will be accessed during the run.\nArtifacts in this section usually exist before the execution of the workflow. If the\n`artifact` is generated as part of the `flow` it is usually identified in that `step` of\nthe `flow`. Keep in mind that in distributed execution that each section of the `flow`\nmight be executed on a separate machine the content of these `artifacts` will be copied\nto target location before executing the workflow. For all the other `inputs` use\n`parameters`.\n\nHere is an example `inputs` for a typical simulation workflow. The `parameters` section\nis used to define the maximum number of workers during the execution of the workflow and\n`artifacts` section is used to define the project-folder. Both inputs have a default\nvalue which can be overwritten by an input file.\n\n\n```yaml\n\n  inputs:\n    parameters:\n    - name: worker\n      description: Maximum number of workers for executing this workflow.\n      value: 1   # this is the default value which can be overwritten\n    artifacts:\n    - name: model-folder\n      description: |\n        Path to project folder for this study. This will make it easy to use relative\n        path for other template inputs.\n      location: project-folder\n      path: models/\n      task_path: . # this is the default value which can be overwritten\n\n```\n\n## 3. operators\n\n`Operators` include the requirements for running `templates` [see below]. In a valid\nworkflow all the the `operators` that are referenced by `templates` should be included\nin this section. Keep in mind that the operators are reusable and can be shared between\ndifferent templates. The `image` field identifies the Docker image for running a\n`template`. Below is an operator for running arbitrary Radiance commands.\n\n```yaml\n  - name: radiance-operator\n    image: ladybugtools/radiance:5.2\n```\n\nHere is another operator example for running `honeybee-radiance` commands.\n\n```yaml\n\n  - name: honeybee-radiance\n    image: ladybugtools/honeybee-radiance:latest\n\n```\n\nYou can also import the operator from a `YAML` or `JSON` file using the `import_from`\nkey. All the fields will be loaded from the file except for the `name`. The original name\nwill be kept since this is the name that has been used inside the workflow to refer to\nthis operator.\n\n```yaml\n\noperators:\n  - name: radiance-operator  # will NOT change based on the operator name in the file\n    import_from: 'radiance_operator.yaml'  # relative path to the workflow file itself\n\n```\n\nIn this example the content of `radiance_operator.yaml` can be something like this:\n\n```yaml\n---\nname: honeybee-radiance\nimage: ladybugtools/honeybee-radiance:latest\n\n```\n\n## 4. templates\n\nTemplates are discrete reusable units of code that can be executed separately or as part\nof a workflow. Queenbee supports 4 types of objects as templates:\n\n- `function` : A single function to execute a single command.\n- `dag`: Collection of functions as a Directed Acyclic Graph (DAG).\n- `workflow`: A full Queenbee workflow itself can be referenced as a template in another\n  workflow.\n\nTemplates can use the `import_from` keyword to import the `template` from a `YAML` or\n`JSON` file. Keep in mind that a template in a file should be self-sufficient and include\nall the information including `operator`s. This is different from when the `template` is\npart of the `workflow` where an `operator` will be referenced by name.\n\nHere is an example `function` for generating a sky with desired irradiance which is part\nof a workflow. In order to make it a valid `template` in a separate file you should use\nthe full operator specification from the last step instead of only using the name of the\noperator.\n\n```yaml\n  name: generate-overcast-sky\n  type: function\n  inputs:\n    parameters:\n      - name: desired-irradiance\n        description: desired sky horizontal irradiance\n      - name: sky-file\n        description: full path to output sky file\n  operator: radiance-operator\n  # commands and args will be used both locally and inside the container\n  # TODO: This must change to be platform specific\n  command: gensky -c -B \"{{inputs.parameters.desired-irradiance}}\" > file.sky\n  outputs:\n    artifacts:\n      - name: sky\n        task_path: file.sky\n        path: \"{{inputs.parameters.sky-file}}\"\n        source: project-folder\n```\n\n## 5. flow\n\n`flow` is the workflow logic that defines in what order the templates should be executed\nand how the output from one task will be consumed by another task(s). Such a workflow is\nalso known as Directed Acyclic Graph (DAG).\n\nHere is an example of creating a sky and generating an octree as two consecutive steps.\n\n```yaml\n\nflow:\n  - name: prepare-sky-and-octree\n    tasks:\n      - name: generate-sky-step\n        template: generate-sky\n        inputs:\n          parameters:\n            - name: desired_irradiance\n              value: 100000\n      - name: generate_octree_step\n        template: generate_octree\n        dependencies: [generate-sky]\n        inputs:\n          parameters:\n            - name: scene_files\n              value: |\n                \"{{tasks.generate_sky_steps.outputs.sky_file}}\"\n                \"{{workflow.inputs.parameters.folder}}\"/model/static/scene.mat\n                \"{{workflow.inputs.parameters.folder}}\"/model/static/scene.rad\n\n```\n\nNow let's think about a longer workflow which also includes ray-tracing using the\ngenerated octree. We need to add two new steps to the workflow:\n\n1. generate sensor grids\n2. run ray-tracing\n\nBut there is a difference between these new two steps and the initial two steps.\nIn the first two steps the second step of generating the octree was dependant on the\nfirst step and it couldn't be executed until generating sky is finished. However for\ngenerating the sensor grids we we do not need to wait for generating sky to be finished.\nFinally, the last step of ray-tracing will need both the grid and the octree.\n\nTo describe such flows we will use a Directed Acyclic Graph or DAG. Here\nis the updated process.\n\nAlso since the step for generating grids can generate more than one grid we are using\nloop to run ray-tracing for all these grids in parallel.\n\n```\n\n                              sky    grids\n                                |      |\n                              octree   |\n                                |      |\n                                \\______/\n                                    |\n                                ray-tracing\n                         ___________|_____________\n                        /       |       |         \\\n                      g-1-1   g-1-2   g-2-1 ... g-n-m\n                        \\_______|_______|_________/\n                                    |\n                              collect results\n\n```\n\n```yaml\n\nflow:\n  - name: sample-workflow\n  - tasks:\n    - name: generate_sky_task\n      template: generate_sky\n      inputs:\n        parameters:\n          - name: desired_irradiance\n            value: 100000\n    - name: generate_octree_task\n      template: generate_octree\n      dependencies:\n        - generate_sky_task\n      inputs:\n        parameters:\n           - name: scene_files\n             value: |\n               \"{{tasks.generate_sky_steps.outputs.sky_file}}\"\n               \"{{workflow.inputs.parameters.folder}}\"/model/static/scene.mat\n               \"{{workflow.inputs.parameters.folder}}\"/model/static/scene.rad\n    - name: generate_grids_task\n      template: generate_grids\n      inputs:\n        parameters:\n          - name: max_sensor_count\n            value: 200\n    - name: ray_tracing_task\n      template: run_raytracing\n      dependencies:\n        - generate_octree_task\n        - generate_grids_task\n      inputs:\n        parameters:\n          - name: grid\n            value: \"{{item}}\"\n          - name: octree\n            value: \"{{tasks.generate_octree_task.outputs.parameters.octree}}\"\n      loop: \"{{ tasks.generate_grids_task.outputs.parameters.grids }}\"\n```\n\n## 6. outputs\n\nSeveral files might be generated in the `process` section and the `outputs` `artifacts`\nsection indicates which ones should be saved as the final outputs of the `workflow`.\nExecutors may return these outputs as a collection of file locations or file contents.\n\nOutputs can also return `parameters` that are generated in the `process` section of the\nworkflow. \n\n\n## Variables\n\nAs you can see it is common to use the output of one task as an input for another task or\nreference one of the workflow inputs as an input for one of the steps or tasks. Queenbee\nsupports the following words as prefix variable names:\n\n### Global variables\n\n| Variable | Description|\n|----------|------------|\n| `workflow.name` | Replaced by workflow name |\n| `workflow.id` | Replaced by workflow id |\n| `workflow.inputs.parameters.<NAME>` | Replaced by `value` for parameter `<NAME>` |\n| `workflow.inputs.artifacts.<NAME>` | Replaced by `path` for artifact `<NAME>` |\n| `workflow.operators.<OPERATORNAME>.image` | Replaced by image name for operator `<OPERATORNAME>` |\n\n### Flow variables\n\n| Variable | Description|\n|----------|------------|\n| `tasks.<TASKNAME>.outputs.parameters.<NAME>` | Output parameter of any previous task |\n| `tasks.<TASKNAME>.outputs.artifacts.<NAME>` | Output artifact of any previous task |\n\n### Task variables\n\n| Variable | Description|\n|----------|------------|\n| `inputs.parameters.<NAME>` | Input parameter of task `<NAME>`|\n| `inputs.artifacts.<NAME>` | Input artifact of task `<NAME>`|\n| `outputs.parameters.<NAME>` | Output parameter of task `<NAME>`|\n| `outputs.artifacts.<NAME>` | Output artifact of task `<NAME>`|\n\n### Loops\n\n| Variable | Description|\n|----------|------------|\n| `item` | Replaced by the value of item |\n| `item.<FIELDNAME>` | Replaced by the field value of the item |\n\n\n# TODO: Command Line Interface\n\nYou can also use queenbee from command line. The most commonly used commands are:\n\n## validate\n\n`queenbee validate [WORKFLOW-FILE]`\n\nThis command validates the workflow to ensure:\n  a. the workflow complies with queenbee schema\n  b. all the `import_from` resources are available and valid.\n  c. all the operators are included in workflow file.\n\nYou can also validate a workflow against an input file.\n\n`queenbee validate [WORKFLOW-FILE] --inputs [INPUT-FILE]`\n\n## package\n\n`queenbee package [WORKFLOW-FILE] [PACKAGED-WORKFLOW-FILE]`\n\nThis command packages the workflow and all its dependencies into a single file. If\nthere is no `import_from` in original workflow the packaged workflow will be identical\nto the original workflow.\n\n## freeze\n\n`queenbee freeze [WORKFLOW-FILE] [INPUT-FILE] [FROZEN-WORKFLOW-FILE]`\n\nQueenbee workflows are designed to be reusable and it is valid to have input parameters\nwith no default values. These values will be provided in an input file. In some cases\nyou want to use the workflow over and over with the same input values. This command\nmakes a frozen version of the workflow with all the values hard-coded in the workflow.\n\n`freeze` command calls `package` command under the hood. In other words a frozen\nworkflow will not have an `import_from` key.\n\n## populate-inputs\n\n`queenbee populate-inputs [WORKFLOW-FILE] [INPUT-FILE]`\n\nThis command generates a template input file for a specific workflow. You can use\n`--include-defaults` flag to also get the inputs that already have a default value. The\ninputs with referenced inputs with prefix variable name (e.g.\n\"{{tasks.create_octree.outputs.artifacts.octree}}\") will not be included in the inputs\nfile. \n\n## visualize\n\n`queenbee visualize [WORKFLOW-FILE]`\n\nThis command creates an interactive visual representation of the workflow.\n\n![image](https://user-images.githubusercontent.com/2915573/61600213-9405e280-abfd-11e9-91e7-a0a622ca3ece.png)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ladybug-tools/queenbee", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "queenbee", "package_url": "https://pypi.org/project/queenbee/", "platform": "", "project_url": "https://pypi.org/project/queenbee/", "project_urls": {"Homepage": "https://github.com/ladybug-tools/queenbee"}, "release_url": "https://pypi.org/project/queenbee/1.10.0/", "requires_dist": ["pydantic (~=1.3)", "PyYAML (~=5.1.2)", "graphviz (==0.13.2)", "click (>=7.0) ; extra == 'cli'", "click-plugins (==1.1.1) ; extra == 'cli'"], "requires_python": "", "summary": "Queenbee is a workflow language for creating DAG workflows which empowers all workflow libraries in Ladybug Tools!", "version": "1.10.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>queenbee</h1>\n<p>:crown: Queenbee is a workflow language for creating workflows! The Queenbee workflow\nis inspired by <a href=\"https://argoproj.github.io/docs/argo/readme.html\" rel=\"nofollow\">Argo Workflow</a> and\nborrows a number of terms and expressions from\n<a href=\"http://airflow.apache.org/\" rel=\"nofollow\">Apache Airflow</a> and <a href=\"https://docs.ansible.com/\" rel=\"nofollow\">Ansible</a>.</p>\n<p>Queenbee populates and validates the workflows but does not run them! For running the\nworkflows see <code>ladybug-tools/workerbee</code> which converts Queenbee workflows to executable\n<a href=\"https://luigi.readthedocs.io/en/stable/\" rel=\"nofollow\">Luigi</a> pipelines.</p>\n<p>You can find more workflow samples in\n<a href=\"https://github.com/ladybug-tools/honeybee-radiance-workflow\" rel=\"nofollow\">honeybee-radiance-workflow</a>\nrepository.</p>\n<h1>Queenbee Workflow structure</h1>\n<p>A Queenbee workflow is a YAML / JSON file which consists of different parts. You\ncan use Queenbee to generate the workflows programmatically using Python or you can\nwrite a workflow line by line.</p>\n<p>Here we discuss the generic structure of a Queenbee workflow. <a href=\"https://www.ladybug.tools/queenbee/\" rel=\"nofollow\">See OpenApi schema\ndocumentation for all Workflow objects</a>.</p>\n<pre><code>  Workflow\n    |\n    |__ name\n    |\n    |__ artifact_locations\n    |\n    |__ inputs\n    |   |___ parameters\n    |   |___ artifacts\n    |\n    |__ operators\n    |\n    |__ templates\n    |\n    |__ flow\n    |   |___ tasks / steps\n    |\n    |__ outputs\n        |___ parameters\n        |___ artifacts\n\n</code></pre>\n<h2>1. Artifact Locations</h2>\n<p>Artifacts are files that will be used during different steps of the workflow computation.\nThese files can be stored on different types of systems (remote folder, local machine or\nAPI call to a webapp). Every artifact indicates which <code>location</code> or source-system it is\nto be acquired from, and each <code>Artifact Location</code> is listed in the <code>artifact_locations</code>\nkey of the <code>workflow</code> object. Currently 3 types of locations are supported:</p>\n<ul>\n<li><strong>Local</strong>: Artifacts situated on the machine running the workflows</li>\n<li><strong>HTTP</strong>: Artifacts that can be sourced from a website or web API</li>\n<li><strong>S3</strong>: Artifacts that can be retrieved from an S3 bucket</li>\n</ul>\n<pre><span class=\"nt\">artifact_locations</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">local-test</span>\n  <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">local</span>\n  <span class=\"nt\">root</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">C:\\Users\\Test\\Projects\\Project 1</span>\n\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">http-test</span>\n  <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">http</span>\n  <span class=\"nt\">root</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">http://climate.onebuilding.org</span>\n  <span class=\"nt\">headers</span><span class=\"p\">:</span> \n    <span class=\"nt\">Authorization</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">some-long-JWT-token</span>\n\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">s3-test</span>\n  <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">s3</span>\n  <span class=\"nt\">root</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">pollination</span>\n  <span class=\"nt\">endpoint</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">s3.eu-west-1.amazonaws.com</span>\n  <span class=\"nt\">bucket</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">all-of-my-data</span>\n  <span class=\"nt\">credentials_path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">C:\\Users\\Test\\.queenbee\\config.yaml</span>\n</pre>\n<h2>2. inputs</h2>\n<p>Workflow inputs are global inputs that can be accessed as <code>\"{{workflow.inputs.xx.yy}}\"</code>\nwhen creating the <code>flow</code> section. For instance to access an input parameter with the\nname <code>file-path</code> one should use <code>\"{{workflow.inputs.parameters.file-path}}\"</code> and Queenbee\nwill map the value of <code>file-path</code> parameter to this place-holder.</p>\n<p>Inputs can be from two different types: <code>parameters</code> and <code>artifacts</code>.</p>\n<p>Input <code>artifacts</code> are a collection of <em>files</em> that will be accessed during the run.\nArtifacts in this section usually exist before the execution of the workflow. If the\n<code>artifact</code> is generated as part of the <code>flow</code> it is usually identified in that <code>step</code> of\nthe <code>flow</code>. Keep in mind that in distributed execution that each section of the <code>flow</code>\nmight be executed on a separate machine the content of these <code>artifacts</code> will be copied\nto target location before executing the workflow. For all the other <code>inputs</code> use\n<code>parameters</code>.</p>\n<p>Here is an example <code>inputs</code> for a typical simulation workflow. The <code>parameters</code> section\nis used to define the maximum number of workers during the execution of the workflow and\n<code>artifacts</code> section is used to define the project-folder. Both inputs have a default\nvalue which can be overwritten by an input file.</p>\n<pre>  <span class=\"nt\">inputs</span><span class=\"p\">:</span>\n    <span class=\"nt\">parameters</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">worker</span>\n      <span class=\"nt\">description</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Maximum number of workers for executing this workflow.</span>\n      <span class=\"nt\">value</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">1</span>   <span class=\"c1\"># this is the default value which can be overwritten</span>\n    <span class=\"nt\">artifacts</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">model-folder</span>\n      <span class=\"nt\">description</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">|</span>\n        <span class=\"no\">Path to project folder for this study. This will make it easy to use relative</span>\n        <span class=\"no\">path for other template inputs.</span>\n      <span class=\"nt\">location</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">project-folder</span>\n      <span class=\"nt\">path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">models/</span>\n      <span class=\"nt\">task_path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">.</span> <span class=\"c1\"># this is the default value which can be overwritten</span>\n</pre>\n<h2>3. operators</h2>\n<p><code>Operators</code> include the requirements for running <code>templates</code> [see below]. In a valid\nworkflow all the the <code>operators</code> that are referenced by <code>templates</code> should be included\nin this section. Keep in mind that the operators are reusable and can be shared between\ndifferent templates. The <code>image</code> field identifies the Docker image for running a\n<code>template</code>. Below is an operator for running arbitrary Radiance commands.</p>\n<pre>  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">radiance-operator</span>\n    <span class=\"nt\">image</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">ladybugtools/radiance:5.2</span>\n</pre>\n<p>Here is another operator example for running <code>honeybee-radiance</code> commands.</p>\n<pre>  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">honeybee-radiance</span>\n    <span class=\"nt\">image</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">ladybugtools/honeybee-radiance:latest</span>\n</pre>\n<p>You can also import the operator from a <code>YAML</code> or <code>JSON</code> file using the <code>import_from</code>\nkey. All the fields will be loaded from the file except for the <code>name</code>. The original name\nwill be kept since this is the name that has been used inside the workflow to refer to\nthis operator.</p>\n<pre><span class=\"nt\">operators</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">radiance-operator</span>  <span class=\"c1\"># will NOT change based on the operator name in the file</span>\n    <span class=\"nt\">import_from</span><span class=\"p\">:</span> <span class=\"s\">'radiance_operator.yaml'</span>  <span class=\"c1\"># relative path to the workflow file itself</span>\n</pre>\n<p>In this example the content of <code>radiance_operator.yaml</code> can be something like this:</p>\n<pre><span class=\"nn\">---</span>\n<span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">honeybee-radiance</span>\n<span class=\"nt\">image</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">ladybugtools/honeybee-radiance:latest</span>\n</pre>\n<h2>4. templates</h2>\n<p>Templates are discrete reusable units of code that can be executed separately or as part\nof a workflow. Queenbee supports 4 types of objects as templates:</p>\n<ul>\n<li><code>function</code> : A single function to execute a single command.</li>\n<li><code>dag</code>: Collection of functions as a Directed Acyclic Graph (DAG).</li>\n<li><code>workflow</code>: A full Queenbee workflow itself can be referenced as a template in another\nworkflow.</li>\n</ul>\n<p>Templates can use the <code>import_from</code> keyword to import the <code>template</code> from a <code>YAML</code> or\n<code>JSON</code> file. Keep in mind that a template in a file should be self-sufficient and include\nall the information including <code>operator</code>s. This is different from when the <code>template</code> is\npart of the <code>workflow</code> where an <code>operator</code> will be referenced by name.</p>\n<p>Here is an example <code>function</code> for generating a sky with desired irradiance which is part\nof a workflow. In order to make it a valid <code>template</code> in a separate file you should use\nthe full operator specification from the last step instead of only using the name of the\noperator.</p>\n<pre>  <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">generate-overcast-sky</span>\n  <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">function</span>\n  <span class=\"nt\">inputs</span><span class=\"p\">:</span>\n    <span class=\"nt\">parameters</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">desired-irradiance</span>\n        <span class=\"nt\">description</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">desired sky horizontal irradiance</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">sky-file</span>\n        <span class=\"nt\">description</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">full path to output sky file</span>\n  <span class=\"nt\">operator</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">radiance-operator</span>\n  <span class=\"c1\"># commands and args will be used both locally and inside the container</span>\n  <span class=\"c1\"># TODO: This must change to be platform specific</span>\n  <span class=\"nt\">command</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">gensky -c -B \"{{inputs.parameters.desired-irradiance}}\" &gt; file.sky</span>\n  <span class=\"nt\">outputs</span><span class=\"p\">:</span>\n    <span class=\"nt\">artifacts</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">sky</span>\n        <span class=\"nt\">task_path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">file.sky</span>\n        <span class=\"nt\">path</span><span class=\"p\">:</span> <span class=\"s\">\"{{inputs.parameters.sky-file}}\"</span>\n        <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">project-folder</span>\n</pre>\n<h2>5. flow</h2>\n<p><code>flow</code> is the workflow logic that defines in what order the templates should be executed\nand how the output from one task will be consumed by another task(s). Such a workflow is\nalso known as Directed Acyclic Graph (DAG).</p>\n<p>Here is an example of creating a sky and generating an octree as two consecutive steps.</p>\n<pre><span class=\"nt\">flow</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">prepare-sky-and-octree</span>\n    <span class=\"nt\">tasks</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">generate-sky-step</span>\n        <span class=\"nt\">template</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">generate-sky</span>\n        <span class=\"nt\">inputs</span><span class=\"p\">:</span>\n          <span class=\"nt\">parameters</span><span class=\"p\">:</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">desired_irradiance</span>\n              <span class=\"nt\">value</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">100000</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">generate_octree_step</span>\n        <span class=\"nt\">template</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">generate_octree</span>\n        <span class=\"nt\">dependencies</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">[</span><span class=\"nv\">generate-sky</span><span class=\"p p-Indicator\">]</span>\n        <span class=\"nt\">inputs</span><span class=\"p\">:</span>\n          <span class=\"nt\">parameters</span><span class=\"p\">:</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">scene_files</span>\n              <span class=\"nt\">value</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">|</span>\n                <span class=\"no\">\"{{tasks.generate_sky_steps.outputs.sky_file}}\"</span>\n                <span class=\"no\">\"{{workflow.inputs.parameters.folder}}\"/model/static/scene.mat</span>\n                <span class=\"no\">\"{{workflow.inputs.parameters.folder}}\"/model/static/scene.rad</span>\n</pre>\n<p>Now let's think about a longer workflow which also includes ray-tracing using the\ngenerated octree. We need to add two new steps to the workflow:</p>\n<ol>\n<li>generate sensor grids</li>\n<li>run ray-tracing</li>\n</ol>\n<p>But there is a difference between these new two steps and the initial two steps.\nIn the first two steps the second step of generating the octree was dependant on the\nfirst step and it couldn't be executed until generating sky is finished. However for\ngenerating the sensor grids we we do not need to wait for generating sky to be finished.\nFinally, the last step of ray-tracing will need both the grid and the octree.</p>\n<p>To describe such flows we will use a Directed Acyclic Graph or DAG. Here\nis the updated process.</p>\n<p>Also since the step for generating grids can generate more than one grid we are using\nloop to run ray-tracing for all these grids in parallel.</p>\n<pre><code>\n                              sky    grids\n                                |      |\n                              octree   |\n                                |      |\n                                \\______/\n                                    |\n                                ray-tracing\n                         ___________|_____________\n                        /       |       |         \\\n                      g-1-1   g-1-2   g-2-1 ... g-n-m\n                        \\_______|_______|_________/\n                                    |\n                              collect results\n\n</code></pre>\n<pre><span class=\"nt\">flow</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">sample-workflow</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">tasks</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">generate_sky_task</span>\n      <span class=\"nt\">template</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">generate_sky</span>\n      <span class=\"nt\">inputs</span><span class=\"p\">:</span>\n        <span class=\"nt\">parameters</span><span class=\"p\">:</span>\n          <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">desired_irradiance</span>\n            <span class=\"nt\">value</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">100000</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">generate_octree_task</span>\n      <span class=\"nt\">template</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">generate_octree</span>\n      <span class=\"nt\">dependencies</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">generate_sky_task</span>\n      <span class=\"nt\">inputs</span><span class=\"p\">:</span>\n        <span class=\"nt\">parameters</span><span class=\"p\">:</span>\n           <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">scene_files</span>\n             <span class=\"nt\">value</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">|</span>\n               <span class=\"no\">\"{{tasks.generate_sky_steps.outputs.sky_file}}\"</span>\n               <span class=\"no\">\"{{workflow.inputs.parameters.folder}}\"/model/static/scene.mat</span>\n               <span class=\"no\">\"{{workflow.inputs.parameters.folder}}\"/model/static/scene.rad</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">generate_grids_task</span>\n      <span class=\"nt\">template</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">generate_grids</span>\n      <span class=\"nt\">inputs</span><span class=\"p\">:</span>\n        <span class=\"nt\">parameters</span><span class=\"p\">:</span>\n          <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">max_sensor_count</span>\n            <span class=\"nt\">value</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">200</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">ray_tracing_task</span>\n      <span class=\"nt\">template</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">run_raytracing</span>\n      <span class=\"nt\">dependencies</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">generate_octree_task</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">generate_grids_task</span>\n      <span class=\"nt\">inputs</span><span class=\"p\">:</span>\n        <span class=\"nt\">parameters</span><span class=\"p\">:</span>\n          <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">grid</span>\n            <span class=\"nt\">value</span><span class=\"p\">:</span> <span class=\"s\">\"{{item}}\"</span>\n          <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">octree</span>\n            <span class=\"nt\">value</span><span class=\"p\">:</span> <span class=\"s\">\"{{tasks.generate_octree_task.outputs.parameters.octree}}\"</span>\n      <span class=\"nt\">loop</span><span class=\"p\">:</span> <span class=\"s\">\"{{</span><span class=\"nv\"> </span><span class=\"s\">tasks.generate_grids_task.outputs.parameters.grids</span><span class=\"nv\"> </span><span class=\"s\">}}\"</span>\n</pre>\n<h2>6. outputs</h2>\n<p>Several files might be generated in the <code>process</code> section and the <code>outputs</code> <code>artifacts</code>\nsection indicates which ones should be saved as the final outputs of the <code>workflow</code>.\nExecutors may return these outputs as a collection of file locations or file contents.</p>\n<p>Outputs can also return <code>parameters</code> that are generated in the <code>process</code> section of the\nworkflow.</p>\n<h2>Variables</h2>\n<p>As you can see it is common to use the output of one task as an input for another task or\nreference one of the workflow inputs as an input for one of the steps or tasks. Queenbee\nsupports the following words as prefix variable names:</p>\n<h3>Global variables</h3>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>workflow.name</code></td>\n<td>Replaced by workflow name</td>\n</tr>\n<tr>\n<td><code>workflow.id</code></td>\n<td>Replaced by workflow id</td>\n</tr>\n<tr>\n<td><code>workflow.inputs.parameters.&lt;NAME&gt;</code></td>\n<td>Replaced by <code>value</code> for parameter <code>&lt;NAME&gt;</code></td>\n</tr>\n<tr>\n<td><code>workflow.inputs.artifacts.&lt;NAME&gt;</code></td>\n<td>Replaced by <code>path</code> for artifact <code>&lt;NAME&gt;</code></td>\n</tr>\n<tr>\n<td><code>workflow.operators.&lt;OPERATORNAME&gt;.image</code></td>\n<td>Replaced by image name for operator <code>&lt;OPERATORNAME&gt;</code></td>\n</tr></tbody></table>\n<h3>Flow variables</h3>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>tasks.&lt;TASKNAME&gt;.outputs.parameters.&lt;NAME&gt;</code></td>\n<td>Output parameter of any previous task</td>\n</tr>\n<tr>\n<td><code>tasks.&lt;TASKNAME&gt;.outputs.artifacts.&lt;NAME&gt;</code></td>\n<td>Output artifact of any previous task</td>\n</tr></tbody></table>\n<h3>Task variables</h3>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>inputs.parameters.&lt;NAME&gt;</code></td>\n<td>Input parameter of task <code>&lt;NAME&gt;</code></td>\n</tr>\n<tr>\n<td><code>inputs.artifacts.&lt;NAME&gt;</code></td>\n<td>Input artifact of task <code>&lt;NAME&gt;</code></td>\n</tr>\n<tr>\n<td><code>outputs.parameters.&lt;NAME&gt;</code></td>\n<td>Output parameter of task <code>&lt;NAME&gt;</code></td>\n</tr>\n<tr>\n<td><code>outputs.artifacts.&lt;NAME&gt;</code></td>\n<td>Output artifact of task <code>&lt;NAME&gt;</code></td>\n</tr></tbody></table>\n<h3>Loops</h3>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>item</code></td>\n<td>Replaced by the value of item</td>\n</tr>\n<tr>\n<td><code>item.&lt;FIELDNAME&gt;</code></td>\n<td>Replaced by the field value of the item</td>\n</tr></tbody></table>\n<h1>TODO: Command Line Interface</h1>\n<p>You can also use queenbee from command line. The most commonly used commands are:</p>\n<h2>validate</h2>\n<p><code>queenbee validate [WORKFLOW-FILE]</code></p>\n<p>This command validates the workflow to ensure:\na. the workflow complies with queenbee schema\nb. all the <code>import_from</code> resources are available and valid.\nc. all the operators are included in workflow file.</p>\n<p>You can also validate a workflow against an input file.</p>\n<p><code>queenbee validate [WORKFLOW-FILE] --inputs [INPUT-FILE]</code></p>\n<h2>package</h2>\n<p><code>queenbee package [WORKFLOW-FILE] [PACKAGED-WORKFLOW-FILE]</code></p>\n<p>This command packages the workflow and all its dependencies into a single file. If\nthere is no <code>import_from</code> in original workflow the packaged workflow will be identical\nto the original workflow.</p>\n<h2>freeze</h2>\n<p><code>queenbee freeze [WORKFLOW-FILE] [INPUT-FILE] [FROZEN-WORKFLOW-FILE]</code></p>\n<p>Queenbee workflows are designed to be reusable and it is valid to have input parameters\nwith no default values. These values will be provided in an input file. In some cases\nyou want to use the workflow over and over with the same input values. This command\nmakes a frozen version of the workflow with all the values hard-coded in the workflow.</p>\n<p><code>freeze</code> command calls <code>package</code> command under the hood. In other words a frozen\nworkflow will not have an <code>import_from</code> key.</p>\n<h2>populate-inputs</h2>\n<p><code>queenbee populate-inputs [WORKFLOW-FILE] [INPUT-FILE]</code></p>\n<p>This command generates a template input file for a specific workflow. You can use\n<code>--include-defaults</code> flag to also get the inputs that already have a default value. The\ninputs with referenced inputs with prefix variable name (e.g.\n\"{{tasks.create_octree.outputs.artifacts.octree}}\") will not be included in the inputs\nfile.</p>\n<h2>visualize</h2>\n<p><code>queenbee visualize [WORKFLOW-FILE]</code></p>\n<p>This command creates an interactive visual representation of the workflow.</p>\n<p><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f414103be1ffe50714045a85c51de125f16c578a/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f323931353537332f36313630303231332d39343035653238302d616266642d313165392d393165372d6130613632326361336563652e706e67\"></p>\n\n          </div>"}, "last_serial": 6916991, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "5d7018c0e14658a725fa3b88e7b17046", "sha256": "abe51804c45298740e9dd521c9e0a88d00d29edc7632139b641be2c9a4c68629"}, "downloads": -1, "filename": "queenbee-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5d7018c0e14658a725fa3b88e7b17046", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18715, "upload_time": "2019-10-24T15:33:25", "upload_time_iso_8601": "2019-10-24T15:33:25.579426Z", "url": "https://files.pythonhosted.org/packages/a7/30/34708623f28b0bfe06e19231bf9f0affc3bc55a2e2a06215409377761da4/queenbee-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0caa8216519813f07330ba017206dbc", "sha256": "08ba65b7e9c0499fce90d0b44f528c4878bdec4842f92e3120412d478cba78e9"}, "downloads": -1, "filename": "queenbee-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f0caa8216519813f07330ba017206dbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23230, "upload_time": "2019-10-24T15:33:27", "upload_time_iso_8601": "2019-10-24T15:33:27.860930Z", "url": "https://files.pythonhosted.org/packages/53/55/2dd65b588c47da511563cfd8cc545f61dd4192ddd661fc85411d8e9ee9e7/queenbee-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "59ef7f15799e6f5e9cd25c02b3c2527a", "sha256": "2e60731b1a266fc345dba8f37a48dee953eb46419acaa078d295bd1cd286444b"}, "downloads": -1, "filename": "queenbee-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "59ef7f15799e6f5e9cd25c02b3c2527a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21964, "upload_time": "2019-11-08T00:40:21", "upload_time_iso_8601": "2019-11-08T00:40:21.098641Z", "url": "https://files.pythonhosted.org/packages/11/88/fb3a584ef61e065b85a50b3c4f2e4d0377744fae0b41c623c82f00fcb2fc/queenbee-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58004be135c71b2b09fbf00ca3944e83", "sha256": "e63b118852312cace9455b070816f36d17913506afcedc636d97536b1122476c"}, "downloads": -1, "filename": "queenbee-1.1.0.tar.gz", "has_sig": false, "md5_digest": "58004be135c71b2b09fbf00ca3944e83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26314, "upload_time": "2019-11-08T00:40:22", "upload_time_iso_8601": "2019-11-08T00:40:22.517313Z", "url": "https://files.pythonhosted.org/packages/fb/f5/81158ed12cdaa53b30544015b2d4fa95acc67c311879d3a4c7cd707af229/queenbee-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "481bf7f89429271ee0033fa174715b84", "sha256": "60bb1a7e933a55ce68568bd8fa5b107a50858fecdcab878e1c8c7cad65149156"}, "downloads": -1, "filename": "queenbee-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "481bf7f89429271ee0033fa174715b84", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21962, "upload_time": "2019-11-08T04:21:54", "upload_time_iso_8601": "2019-11-08T04:21:54.313083Z", "url": "https://files.pythonhosted.org/packages/15/73/2ec56c6e618504a5e09cfaecf81ed9667dbd325f70cc22ddb16479477af3/queenbee-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6447e6e780cd739c37349e6a73c9997d", "sha256": "43c1576da69737668b1c8e1ced219e3bf6e0dd9cadfa218bb69002673aff0e93"}, "downloads": -1, "filename": "queenbee-1.1.1.tar.gz", "has_sig": false, "md5_digest": "6447e6e780cd739c37349e6a73c9997d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26315, "upload_time": "2019-11-08T04:21:55", "upload_time_iso_8601": "2019-11-08T04:21:55.872392Z", "url": "https://files.pythonhosted.org/packages/72/23/8499782174b7072bcd51931968c3f5b2a44e76f14b6121284e4288e7f3f1/queenbee-1.1.1.tar.gz", "yanked": false}], "1.10.0": [{"comment_text": "", "digests": {"md5": "d643a3e07addbef370c58f0aa8d68c53", "sha256": "9d6133daf177b989f030f4680c6d01ef9facbb9c11439a4bf61474a95770a388"}, "downloads": -1, "filename": "queenbee-1.10.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d643a3e07addbef370c58f0aa8d68c53", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 34580, "upload_time": "2020-03-31T00:14:39", "upload_time_iso_8601": "2020-03-31T00:14:39.257061Z", "url": "https://files.pythonhosted.org/packages/71/5e/a978a3929596e0b60e52f82d1a1767cc846f1342c1ce1fae02a05c3dc2a8/queenbee-1.10.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "542522dbb360d7c677cecb99c2e17dab", "sha256": "4264e65b477310b89c706c8f6270725e189eb44fe60796cc4d48cc604a5f94cc"}, "downloads": -1, "filename": "queenbee-1.10.0.tar.gz", "has_sig": false, "md5_digest": "542522dbb360d7c677cecb99c2e17dab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38064, "upload_time": "2020-03-31T00:14:40", "upload_time_iso_8601": "2020-03-31T00:14:40.276617Z", "url": "https://files.pythonhosted.org/packages/fa/9b/d8a6f13f12755f34f02fc9a8d86a5d8705bec117821d20c4029345267ee1/queenbee-1.10.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "08b9cc493996be0361492036fa6feeb6", "sha256": "3002cb855073a0f7fee8f9c79dfd241607207844f4b5f813cfb9b62a8ac652c8"}, "downloads": -1, "filename": "queenbee-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "08b9cc493996be0361492036fa6feeb6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24004, "upload_time": "2019-11-10T21:33:32", "upload_time_iso_8601": "2019-11-10T21:33:32.740780Z", "url": "https://files.pythonhosted.org/packages/82/45/3d27eb8ed894663ea329f2971194195fec9d2ca5b8e8c7eb124b191f1dea/queenbee-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09057ec798f7ce635cbfc2cabe45308c", "sha256": "1f1556338b3b9517a10c98547061acd245b7b4733dac55c351f6c910b8ea6dfd"}, "downloads": -1, "filename": "queenbee-1.2.0.tar.gz", "has_sig": false, "md5_digest": "09057ec798f7ce635cbfc2cabe45308c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27969, "upload_time": "2019-11-10T21:33:34", "upload_time_iso_8601": "2019-11-10T21:33:34.349627Z", "url": "https://files.pythonhosted.org/packages/7c/8d/0ac186c6caa7b70c40965c9bd25b5b28b19d2385efd0c3c2b532f3b58c0b/queenbee-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "44df5aff9c7948417491f5d4dcd78c27", "sha256": "61d0059b778cf134cc6b185fa116510795fe3ae636c54b68fb883c558c7423f0"}, "downloads": -1, "filename": "queenbee-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "44df5aff9c7948417491f5d4dcd78c27", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24058, "upload_time": "2019-11-10T22:13:54", "upload_time_iso_8601": "2019-11-10T22:13:54.564242Z", "url": "https://files.pythonhosted.org/packages/de/e0/5ca101a564552a3309583f6cfaceaf0391e42ba701078a5bfe3a8d50b56f/queenbee-1.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db0655d972fca392d9c3213d8d11b10d", "sha256": "8eca31b21a36f466ba47b4a7389e8b9b85f88d9abd58bf6d558a3785d4dadff1"}, "downloads": -1, "filename": "queenbee-1.3.0.tar.gz", "has_sig": false, "md5_digest": "db0655d972fca392d9c3213d8d11b10d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28034, "upload_time": "2019-11-10T22:13:56", "upload_time_iso_8601": "2019-11-10T22:13:56.225606Z", "url": "https://files.pythonhosted.org/packages/62/0b/cf1cd9681d3908860482e08e215121cfb510c9c4a325235a0470fb3c0c36/queenbee-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "d10f62b2c0ae2be10e90cd9a6117f0d0", "sha256": "032579b5ef377461b0aa6538d8cd2877061300b4bbf1501506d29b8137f8ab65"}, "downloads": -1, "filename": "queenbee-1.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d10f62b2c0ae2be10e90cd9a6117f0d0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24056, "upload_time": "2019-11-10T23:43:16", "upload_time_iso_8601": "2019-11-10T23:43:16.798300Z", "url": "https://files.pythonhosted.org/packages/10/b3/33afc70c01115222c84c8416dfb446b4d8bb7624e05d93d1c21a5e5e158c/queenbee-1.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de0ae815d3e13bb009f70e5aedba676e", "sha256": "d9c50f538d468468460e0fec70e2158511e9e419f0aa763b36b79cea307e1526"}, "downloads": -1, "filename": "queenbee-1.3.1.tar.gz", "has_sig": false, "md5_digest": "de0ae815d3e13bb009f70e5aedba676e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28036, "upload_time": "2019-11-10T23:43:18", "upload_time_iso_8601": "2019-11-10T23:43:18.390664Z", "url": "https://files.pythonhosted.org/packages/d0/9a/c715b75057c83f49506a1d6effe0c183d8e5eb9558ba3ca15d84b3f91302/queenbee-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "ea5a65c2dadbfbee8c5c11578a39df92", "sha256": "5251dfdabdca83f227f38691821600346013f489da16d191479087a708c54356"}, "downloads": -1, "filename": "queenbee-1.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ea5a65c2dadbfbee8c5c11578a39df92", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24059, "upload_time": "2019-11-10T23:48:46", "upload_time_iso_8601": "2019-11-10T23:48:46.347179Z", "url": "https://files.pythonhosted.org/packages/9b/08/51be43fd922ec91ed764d9d680d917f60539b2ef9bb554ce1020faa4fcc3/queenbee-1.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "250f32f5b5cc82d6d631ce1c2e1f0a80", "sha256": "9ca720ceade0923a2ea680d675b443870faad20cb65cc5b1c93788dff78b8225"}, "downloads": -1, "filename": "queenbee-1.3.2.tar.gz", "has_sig": false, "md5_digest": "250f32f5b5cc82d6d631ce1c2e1f0a80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28027, "upload_time": "2019-11-10T23:48:47", "upload_time_iso_8601": "2019-11-10T23:48:47.794909Z", "url": "https://files.pythonhosted.org/packages/c9/3b/fe5a87df1e3f65cf5efe4364aef62b47bc0d2220e1d113d755ff4929f39b/queenbee-1.3.2.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "9d08504be5db019e811a2dc12784c36b", "sha256": "82f4e008305760cf812d9676d5924328dfae05b27b6f955329fc38e7432ea66c"}, "downloads": -1, "filename": "queenbee-1.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9d08504be5db019e811a2dc12784c36b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25608, "upload_time": "2019-11-11T21:20:35", "upload_time_iso_8601": "2019-11-11T21:20:35.288075Z", "url": "https://files.pythonhosted.org/packages/f1/73/e64bb9fc651cd2bfb802b48aa892b9665b8ef16246b95803574a20aaf82a/queenbee-1.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8b6fafc204984f1ff76decb08e84207", "sha256": "746983a497a1e2721cc046ccba0f36493d3c5d85b19222dd0cf7c5c93d8fdcfa"}, "downloads": -1, "filename": "queenbee-1.4.0.tar.gz", "has_sig": false, "md5_digest": "d8b6fafc204984f1ff76decb08e84207", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29409, "upload_time": "2019-11-11T21:20:36", "upload_time_iso_8601": "2019-11-11T21:20:36.780553Z", "url": "https://files.pythonhosted.org/packages/3c/37/a1546f41c8daceb7bae2d2370f540c99155b1029e71208c33ca2dac3a802/queenbee-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "2ca4ea6f73333e87953c2aa4b89d8a66", "sha256": "4c65c77781fc1a2c0e145ede2ccdb8a7012b0ca46369c40b0656fc6a92628f2f"}, "downloads": -1, "filename": "queenbee-1.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2ca4ea6f73333e87953c2aa4b89d8a66", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25605, "upload_time": "2019-11-11T21:34:44", "upload_time_iso_8601": "2019-11-11T21:34:44.743125Z", "url": "https://files.pythonhosted.org/packages/c3/22/0d5ac88aa5b65b863d08a3f12e35999914653bafe938ca4651429d037f54/queenbee-1.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88e621e43cebc69eb3d5d460fe84d173", "sha256": "2acc872c497691115b6c53a85f05640f858dfd7ac8f98f35e46d68728fe7c8be"}, "downloads": -1, "filename": "queenbee-1.4.1.tar.gz", "has_sig": false, "md5_digest": "88e621e43cebc69eb3d5d460fe84d173", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29407, "upload_time": "2019-11-11T21:34:46", "upload_time_iso_8601": "2019-11-11T21:34:46.511032Z", "url": "https://files.pythonhosted.org/packages/f9/26/ff99ebe11e9e3e3dd5dd6ddd82cf6b97a0d2dc744263dbbbf0012e7c0a19/queenbee-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "2debb461e953d303da7ecda999459b54", "sha256": "ff7fe4de95f6d4a5ed02d6814da8224262d069fefcc6c7da5a3f167909a4dc0e"}, "downloads": -1, "filename": "queenbee-1.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2debb461e953d303da7ecda999459b54", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25775, "upload_time": "2019-11-13T01:41:09", "upload_time_iso_8601": "2019-11-13T01:41:09.127814Z", "url": "https://files.pythonhosted.org/packages/86/04/60a7f904f57f8b9221e78fee4270d4dfe7930b155b24dcccab1dedaf7d48/queenbee-1.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6de70c1c19f51e8757d2d95bbd195402", "sha256": "1fe4093cae021cba4d7ca3a8cb5da1a59a09a0b04f42f642a4e9d842dfbd0667"}, "downloads": -1, "filename": "queenbee-1.4.2.tar.gz", "has_sig": false, "md5_digest": "6de70c1c19f51e8757d2d95bbd195402", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29520, "upload_time": "2019-11-13T01:41:10", "upload_time_iso_8601": "2019-11-13T01:41:10.772840Z", "url": "https://files.pythonhosted.org/packages/ec/d4/df0bbaf4696193d04f31c85c18c011c6ec43dad118483ae34758f03cc84b/queenbee-1.4.2.tar.gz", "yanked": false}], "1.4.3": [{"comment_text": "", "digests": {"md5": "b2ac10b96de9117bce30704d169cc485", "sha256": "f697c930034f85c3121fcea82e7e2a65465cef3f0dfed226277a50b69afd903e"}, "downloads": -1, "filename": "queenbee-1.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b2ac10b96de9117bce30704d169cc485", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25773, "upload_time": "2019-11-13T01:53:38", "upload_time_iso_8601": "2019-11-13T01:53:38.752195Z", "url": "https://files.pythonhosted.org/packages/d4/4f/b249d1534f6fb9ab35cb86635b149dc3e53e51f52ebded189ebb4d2fe778/queenbee-1.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ea4729011e37912d825a6116f8f2a68", "sha256": "54fb5af3520d07e01631cb676ac802fe320b096c9cbe684a558236a3594dff52"}, "downloads": -1, "filename": "queenbee-1.4.3.tar.gz", "has_sig": false, "md5_digest": "8ea4729011e37912d825a6116f8f2a68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29536, "upload_time": "2019-11-13T01:53:40", "upload_time_iso_8601": "2019-11-13T01:53:40.483042Z", "url": "https://files.pythonhosted.org/packages/82/80/3d94922dd736bdb05800b35eb400d92d091e22bb68a48a71331269d34088/queenbee-1.4.3.tar.gz", "yanked": false}], "1.4.4": [{"comment_text": "", "digests": {"md5": "346120c0608777dafd8433e295709c0c", "sha256": "cc5cbe925bd6aaf1a0ac774a69051dee1cef39333324c6339e098c60d243910d"}, "downloads": -1, "filename": "queenbee-1.4.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "346120c0608777dafd8433e295709c0c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25790, "upload_time": "2019-11-13T04:09:58", "upload_time_iso_8601": "2019-11-13T04:09:58.680566Z", "url": "https://files.pythonhosted.org/packages/ea/51/609e1a3ac5031688a47e66daa52d2b889c86287cae08c776f5e957c58f4f/queenbee-1.4.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e438f29bf422c86fe558d0f5a92a723", "sha256": "02af2906af7ba954ad191f2776fc7f0b75e493923ec7258fb1dc06a1447b2977"}, "downloads": -1, "filename": "queenbee-1.4.4.tar.gz", "has_sig": false, "md5_digest": "1e438f29bf422c86fe558d0f5a92a723", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29558, "upload_time": "2019-11-13T04:10:00", "upload_time_iso_8601": "2019-11-13T04:10:00.370494Z", "url": "https://files.pythonhosted.org/packages/13/f9/fa20c9ad359968aeef6dfa1a24f201cefe1fef536c4698da078e220ef829/queenbee-1.4.4.tar.gz", "yanked": false}], "1.4.5": [{"comment_text": "", "digests": {"md5": "09af7faa3005e19c6e1d6c64504dc01c", "sha256": "b5ce51cdacbd4f3fc17de004f88b3d7b8f9e1f9b0eb1bc7f59f7dd30b75a0a7c"}, "downloads": -1, "filename": "queenbee-1.4.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "09af7faa3005e19c6e1d6c64504dc01c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25848, "upload_time": "2019-12-03T02:06:55", "upload_time_iso_8601": "2019-12-03T02:06:55.604910Z", "url": "https://files.pythonhosted.org/packages/23/6f/2a51394deefd33d573b8d3998b222e6cbaf01d3502d564dd07de262154e7/queenbee-1.4.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "970f22ceb5d3c666d897b6e54e7082b4", "sha256": "91694c88174a94e7bf8229e5b0d55eaa270f46d8db7d7bc1a4434c66212a3c45"}, "downloads": -1, "filename": "queenbee-1.4.5.tar.gz", "has_sig": false, "md5_digest": "970f22ceb5d3c666d897b6e54e7082b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29612, "upload_time": "2019-12-03T02:07:00", "upload_time_iso_8601": "2019-12-03T02:07:00.076825Z", "url": "https://files.pythonhosted.org/packages/9a/06/6ef33af6bf42489cc48e97b7ebef8956183d6f209746cf43e651fdd45166/queenbee-1.4.5.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "d30734b5bdef273800c85c751687cff7", "sha256": "ddc2cc70c9c59ccd70f195f1fd499729c8767d5d8efae0f3933cdcf783fb335d"}, "downloads": -1, "filename": "queenbee-1.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d30734b5bdef273800c85c751687cff7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26322, "upload_time": "2019-12-12T04:38:26", "upload_time_iso_8601": "2019-12-12T04:38:26.420384Z", "url": "https://files.pythonhosted.org/packages/35/6c/017c0ec49537ea32139341731a438a14aebaeccfccdc8f4932e4d6ed7f65/queenbee-1.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "004cce43016056af838a907639e91da5", "sha256": "c4676515469bafa5b98c7c7be624d897abf4dced0ccc2cce0b06e871da3c5921"}, "downloads": -1, "filename": "queenbee-1.5.0.tar.gz", "has_sig": false, "md5_digest": "004cce43016056af838a907639e91da5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30175, "upload_time": "2019-12-12T04:38:27", "upload_time_iso_8601": "2019-12-12T04:38:27.777437Z", "url": "https://files.pythonhosted.org/packages/a5/8f/e07d34c4e140a7bff3c6527821566f7ad3aef356b62c2334b48d5c3d41e6/queenbee-1.5.0.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "701ac535c59c6cf5453dbb7be70b3ac4", "sha256": "6beeb65afbbabe689b21b3fe53e7eec2c8bb348466509d93a23ec353c949a3da"}, "downloads": -1, "filename": "queenbee-1.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "701ac535c59c6cf5453dbb7be70b3ac4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27502, "upload_time": "2019-12-19T00:22:47", "upload_time_iso_8601": "2019-12-19T00:22:47.672460Z", "url": "https://files.pythonhosted.org/packages/ac/76/e57227e4937ab463174ae6665309747c8bdc38f223f52931cb4fb81d5115/queenbee-1.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41f546692455f3ac031d54823654378a", "sha256": "94abf0480117dbc787c9eaf0ec0ad2018b3d84880c99ebf0a138fb6619e2a737"}, "downloads": -1, "filename": "queenbee-1.6.0.tar.gz", "has_sig": false, "md5_digest": "41f546692455f3ac031d54823654378a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30940, "upload_time": "2019-12-19T00:22:49", "upload_time_iso_8601": "2019-12-19T00:22:49.338818Z", "url": "https://files.pythonhosted.org/packages/5f/3c/6b97afb264339707de230e6d89ecbc417b0e7a998045d636919795232667/queenbee-1.6.0.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "bed2163fa40bd6c04f3ff30fa0218376", "sha256": "15aa699a2d373a0dc596a147e6e68daf990b842b691c4b68b5816a2ebbc6162e"}, "downloads": -1, "filename": "queenbee-1.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bed2163fa40bd6c04f3ff30fa0218376", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27506, "upload_time": "2019-12-19T03:54:17", "upload_time_iso_8601": "2019-12-19T03:54:17.603142Z", "url": "https://files.pythonhosted.org/packages/ab/27/589e375b8743901d97ebf7f19fe821cbbfa49c5eee19541a980a84734859/queenbee-1.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89925517b5f3d4f9adef84730dcd6d6b", "sha256": "c2d0dc296d40805d007364c6f7d3367af90548facbd3070fcbe3b22fab6265ad"}, "downloads": -1, "filename": "queenbee-1.6.1.tar.gz", "has_sig": false, "md5_digest": "89925517b5f3d4f9adef84730dcd6d6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30935, "upload_time": "2019-12-19T03:54:18", "upload_time_iso_8601": "2019-12-19T03:54:18.930141Z", "url": "https://files.pythonhosted.org/packages/05/d7/a4a7a27e9a02be2e63842eeeec33e353478a37dbf37342855c7a18c94505/queenbee-1.6.1.tar.gz", "yanked": false}], "1.6.2": [{"comment_text": "", "digests": {"md5": "c4312411b23019505206d2e52f09fa0d", "sha256": "8b54185ba2ae060558a9e9926b7f36b24a5585a5f1520ce3b80f2e5fb1fb3eef"}, "downloads": -1, "filename": "queenbee-1.6.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c4312411b23019505206d2e52f09fa0d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27513, "upload_time": "2019-12-19T04:28:32", "upload_time_iso_8601": "2019-12-19T04:28:32.581178Z", "url": "https://files.pythonhosted.org/packages/e5/e6/6b0ccf5ca14109ddf3ac19740d432c90febf921d661a9d7a7a6ed0f949cf/queenbee-1.6.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82e327e54f6d90993abe9d0773e000c3", "sha256": "57f57a8546c9a73df3f07da7765144ff4c91eecbc93d2c20e70613de50cb3b3c"}, "downloads": -1, "filename": "queenbee-1.6.2.tar.gz", "has_sig": false, "md5_digest": "82e327e54f6d90993abe9d0773e000c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30924, "upload_time": "2019-12-19T04:28:34", "upload_time_iso_8601": "2019-12-19T04:28:34.134780Z", "url": "https://files.pythonhosted.org/packages/22/c6/fd8a241718b03fc8c08c17876200e58a6c97661b68ceffd3996285270b6e/queenbee-1.6.2.tar.gz", "yanked": false}], "1.6.3": [{"comment_text": "", "digests": {"md5": "502476c4d4a068704569b1db7d7b1547", "sha256": "958d5e6675e99c5d1d575ccf769599c90a9654a523ec5e93c21e579e1f4e59f2"}, "downloads": -1, "filename": "queenbee-1.6.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "502476c4d4a068704569b1db7d7b1547", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27518, "upload_time": "2019-12-19T05:13:04", "upload_time_iso_8601": "2019-12-19T05:13:04.134685Z", "url": "https://files.pythonhosted.org/packages/8e/fc/e6cbed25b27fe386b774c6d0ba7325dc164ff8a383dce4b2c8105d9da35f/queenbee-1.6.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee888745483bff9100f82bef7c575811", "sha256": "d948dfec2cd8d6edb4296ee5242e09ae782655fb9b19374bb39ea43c22f011a8"}, "downloads": -1, "filename": "queenbee-1.6.3.tar.gz", "has_sig": false, "md5_digest": "ee888745483bff9100f82bef7c575811", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30935, "upload_time": "2019-12-19T05:13:05", "upload_time_iso_8601": "2019-12-19T05:13:05.763456Z", "url": "https://files.pythonhosted.org/packages/14/48/980314fc731135fbd856312cb78c5e242540e2963ace5380c76696bb9ae8/queenbee-1.6.3.tar.gz", "yanked": false}], "1.6.4": [{"comment_text": "", "digests": {"md5": "3ef52eb29ee56d97211d3c392f419e39", "sha256": "80303381c444ab6bc91c4acfa899a20cc77c8cda544fe67d76c5900e9df1e988"}, "downloads": -1, "filename": "queenbee-1.6.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3ef52eb29ee56d97211d3c392f419e39", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27612, "upload_time": "2020-01-07T21:35:13", "upload_time_iso_8601": "2020-01-07T21:35:13.195442Z", "url": "https://files.pythonhosted.org/packages/10/31/bad67fec78d7ebf8105e21865afe82e21af36a051e03cd1d1f8806d14b1e/queenbee-1.6.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66671bbb605c5368925bcb383e092967", "sha256": "80e6f27ec9b65553a53404e8706d952a0b518aa71ec98a92cc0e2802c8a68949"}, "downloads": -1, "filename": "queenbee-1.6.4.tar.gz", "has_sig": false, "md5_digest": "66671bbb605c5368925bcb383e092967", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31301, "upload_time": "2020-01-07T21:35:14", "upload_time_iso_8601": "2020-01-07T21:35:14.848019Z", "url": "https://files.pythonhosted.org/packages/89/38/934f7eeab54d5c1cc1ed683cf3f7e42ffddbda8a60873e7f8bb3f1e86942/queenbee-1.6.4.tar.gz", "yanked": false}], "1.6.5": [{"comment_text": "", "digests": {"md5": "0e734d22dfcfd5ef71f3581898590906", "sha256": "3cabd762296167464ee14459a3c46beb4d6f738311803cf2139b2e18310ea44d"}, "downloads": -1, "filename": "queenbee-1.6.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0e734d22dfcfd5ef71f3581898590906", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28782, "upload_time": "2020-01-08T00:34:06", "upload_time_iso_8601": "2020-01-08T00:34:06.822786Z", "url": "https://files.pythonhosted.org/packages/0d/77/9c49ee6718cfb9ddbff9a7840b17c401c892c26b170c68c4b84bc93e02f0/queenbee-1.6.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8aa015b3148b9bd7115800669f8a5fdf", "sha256": "79ea034acb5be4e6149f1bd104532fda6dc7c1e05e462a3ca8e79aae95712862"}, "downloads": -1, "filename": "queenbee-1.6.5.tar.gz", "has_sig": false, "md5_digest": "8aa015b3148b9bd7115800669f8a5fdf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29869, "upload_time": "2020-01-08T00:34:08", "upload_time_iso_8601": "2020-01-08T00:34:08.239348Z", "url": "https://files.pythonhosted.org/packages/82/c1/61de669c45bebf760f75dee4093e695c31024c5ef79e78f7f4ee308370bc/queenbee-1.6.5.tar.gz", "yanked": false}], "1.6.6": [{"comment_text": "", "digests": {"md5": "6fc6982ff8e771549d8bfe65d2dbabe6", "sha256": "58fd80d8937ccf3080aff44726559c57759f8c024a3ec5cfddbd61c1d7416c6e"}, "downloads": -1, "filename": "queenbee-1.6.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6fc6982ff8e771549d8bfe65d2dbabe6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28821, "upload_time": "2020-01-13T04:37:20", "upload_time_iso_8601": "2020-01-13T04:37:20.514519Z", "url": "https://files.pythonhosted.org/packages/e5/ad/1efeb47c179eb4376f425df2a13ddb43c212da1bdb3f5b45ec66e75ff5c3/queenbee-1.6.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ffbe2c3eea0a584fdea63ccfe4c5fe7", "sha256": "801ff5e46d77a3cf985063a35c827fb00805de7d8df6bc0a177a485065cb60d3"}, "downloads": -1, "filename": "queenbee-1.6.6.tar.gz", "has_sig": false, "md5_digest": "9ffbe2c3eea0a584fdea63ccfe4c5fe7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29859, "upload_time": "2020-01-13T04:37:22", "upload_time_iso_8601": "2020-01-13T04:37:22.076911Z", "url": "https://files.pythonhosted.org/packages/1f/cf/65464c033bb7e67391bcbd72daa5754999c90c12f6d4e452bf12f165414d/queenbee-1.6.6.tar.gz", "yanked": false}], "1.6.7": [{"comment_text": "", "digests": {"md5": "4192cd7339aa68c31a1447b1f8d600db", "sha256": "66456dd66f352a947e0941c39363c584d56fd7d1ee40bcd4b36ff03a2019a63e"}, "downloads": -1, "filename": "queenbee-1.6.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4192cd7339aa68c31a1447b1f8d600db", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32290, "upload_time": "2020-01-18T16:51:21", "upload_time_iso_8601": "2020-01-18T16:51:21.397470Z", "url": "https://files.pythonhosted.org/packages/d4/eb/9d35d0c3d63ab0e4a5f86323ada22fabdd13ec38b3e1f8dacce446a266cf/queenbee-1.6.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52418a4375e5e4d57f17cbdde48ca4bb", "sha256": "5f610689e284dc1bcaed8a0c5a05041f15185116e70c2c1edd04b72c2753be6c"}, "downloads": -1, "filename": "queenbee-1.6.7.tar.gz", "has_sig": false, "md5_digest": "52418a4375e5e4d57f17cbdde48ca4bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33242, "upload_time": "2020-01-18T16:51:23", "upload_time_iso_8601": "2020-01-18T16:51:23.137588Z", "url": "https://files.pythonhosted.org/packages/f0/96/4a07c37679f1402d1146c08abb5edff275f9178516c3559d539f9789b336/queenbee-1.6.7.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "0c9820c895fb2e4b6e03a3d1afd0426c", "sha256": "493fa980529428223021441ba46582a401ea7a5b651ebeee5ed99730ce87f5d4"}, "downloads": -1, "filename": "queenbee-1.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0c9820c895fb2e4b6e03a3d1afd0426c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 31332, "upload_time": "2020-01-19T16:04:42", "upload_time_iso_8601": "2020-01-19T16:04:42.030922Z", "url": "https://files.pythonhosted.org/packages/3e/21/a1ab05d2e3e7080c51e322133259fe8d625ba729f2b4471dd54f19fae77a/queenbee-1.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "318121c74c563a68693c6e202550b03f", "sha256": "b6b4a9cc1d56272d35aa7c855b6d946aeaa36bedc2050ec448d46ca6c7a6a7f3"}, "downloads": -1, "filename": "queenbee-1.7.0.tar.gz", "has_sig": false, "md5_digest": "318121c74c563a68693c6e202550b03f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31988, "upload_time": "2020-01-19T16:04:43", "upload_time_iso_8601": "2020-01-19T16:04:43.728859Z", "url": "https://files.pythonhosted.org/packages/48/ff/89cfcc0a84696d0edbea3d37d89cadb473a480f1afd32738f5512f2aaaa3/queenbee-1.7.0.tar.gz", "yanked": false}], "1.7.1": [{"comment_text": "", "digests": {"md5": "7f75738ecc8ce03015cd07cc9ce6ada5", "sha256": "8ca5d543c0a80a9270a867f3477add90a7444d19166c6b868b0ae34e3f3dcda7"}, "downloads": -1, "filename": "queenbee-1.7.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7f75738ecc8ce03015cd07cc9ce6ada5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 31347, "upload_time": "2020-01-23T02:39:15", "upload_time_iso_8601": "2020-01-23T02:39:15.533647Z", "url": "https://files.pythonhosted.org/packages/67/90/d172d3728b3723e1ebba718463484f00caaac8e5e24d8c2530c760d8cc64/queenbee-1.7.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d22c73dde2e80bd79ba8f0f4d93f0be1", "sha256": "5ebccb63698a5c6ed9ec0a96a97ff7e71baca96b5ca6d5d8221054f65edcfdb7"}, "downloads": -1, "filename": "queenbee-1.7.1.tar.gz", "has_sig": false, "md5_digest": "d22c73dde2e80bd79ba8f0f4d93f0be1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31993, "upload_time": "2020-01-23T02:39:17", "upload_time_iso_8601": "2020-01-23T02:39:17.627472Z", "url": "https://files.pythonhosted.org/packages/65/48/7a1c070cd51c415dc44ff32dc283fc9ab68d6b454921e39bfb3dfef3a32a/queenbee-1.7.1.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "6827d3f149434420e600a1608d91edef", "sha256": "ccaeeed43996ad2890c6bb9effdc01bde274cc323e46ceff358501d37f3925f3"}, "downloads": -1, "filename": "queenbee-1.8.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6827d3f149434420e600a1608d91edef", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32610, "upload_time": "2020-01-23T17:50:34", "upload_time_iso_8601": "2020-01-23T17:50:34.860540Z", "url": "https://files.pythonhosted.org/packages/74/1a/7a201c342bbdfba9fd0576b5bafa14f44692052fd411d42c6f9c5c19f878/queenbee-1.8.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4556d2cd6f57180b26dc97c4aff4256e", "sha256": "8ad0372ced3dac3d122ad07cc8aaea2a24e91dc9af8ed90967cd119bd351a03e"}, "downloads": -1, "filename": "queenbee-1.8.0.tar.gz", "has_sig": false, "md5_digest": "4556d2cd6f57180b26dc97c4aff4256e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33329, "upload_time": "2020-01-23T17:50:36", "upload_time_iso_8601": "2020-01-23T17:50:36.255002Z", "url": "https://files.pythonhosted.org/packages/b4/ae/2a03486e5f3d1034ba9c115532d06f6bd3c5be3d75e0961cda7da03cb3ee/queenbee-1.8.0.tar.gz", "yanked": false}], "1.9.0": [{"comment_text": "", "digests": {"md5": "2b87df7eed7d73a38f3cb4a9cbf5de6f", "sha256": "a965bc084a47c38c8dc4919dd2c2db95b211cf73cf60105a88ce73ee4672a2b8"}, "downloads": -1, "filename": "queenbee-1.9.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2b87df7eed7d73a38f3cb4a9cbf5de6f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 33825, "upload_time": "2020-02-23T03:41:34", "upload_time_iso_8601": "2020-02-23T03:41:34.382065Z", "url": "https://files.pythonhosted.org/packages/20/0e/df60c502630e4416b1161cfe86d15667b5340c9db2fe9edf84269baa4888/queenbee-1.9.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "183c2d97720a5092310070c33acc7758", "sha256": "3ec4ba1613c7f2217d7df14fe0a1b40a968256e972e1ebf9b6d94e9857f9e6ce"}, "downloads": -1, "filename": "queenbee-1.9.0.tar.gz", "has_sig": false, "md5_digest": "183c2d97720a5092310070c33acc7758", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33962, "upload_time": "2020-02-23T03:41:35", "upload_time_iso_8601": "2020-02-23T03:41:35.957887Z", "url": "https://files.pythonhosted.org/packages/ec/3b/d336f46971c2b27bf9bd555531b34e0083ac60675c63d634c954953af95e/queenbee-1.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d643a3e07addbef370c58f0aa8d68c53", "sha256": "9d6133daf177b989f030f4680c6d01ef9facbb9c11439a4bf61474a95770a388"}, "downloads": -1, "filename": "queenbee-1.10.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d643a3e07addbef370c58f0aa8d68c53", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 34580, "upload_time": "2020-03-31T00:14:39", "upload_time_iso_8601": "2020-03-31T00:14:39.257061Z", "url": "https://files.pythonhosted.org/packages/71/5e/a978a3929596e0b60e52f82d1a1767cc846f1342c1ce1fae02a05c3dc2a8/queenbee-1.10.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "542522dbb360d7c677cecb99c2e17dab", "sha256": "4264e65b477310b89c706c8f6270725e189eb44fe60796cc4d48cc604a5f94cc"}, "downloads": -1, "filename": "queenbee-1.10.0.tar.gz", "has_sig": false, "md5_digest": "542522dbb360d7c677cecb99c2e17dab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38064, "upload_time": "2020-03-31T00:14:40", "upload_time_iso_8601": "2020-03-31T00:14:40.276617Z", "url": "https://files.pythonhosted.org/packages/fa/9b/d8a6f13f12755f34f02fc9a8d86a5d8705bec117821d20c4029345267ee1/queenbee-1.10.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:39 2020"}