{"info": {"author": "Maurizio Sambati", "author_email": "maurizio@skicelab.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Operating System :: POSIX", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "pg_raxarchive\n=============\n\n``pg_raxarchive`` is a command line tool to handle Postgresql WAL archiving on\nRackspace's cloudfiles.\n\n\nQuick help\n----------\n\nInstall using pip then:\n\n- Create a file ``/etc/pg_raxarchive.ini`` with rackspace credentials (see below).\n- Run ``pg_raxarchive upload {path_to_file} {basename}`` to upload archive a file.\n- Run ``pg_raxarchive download {basename} {path_to_file}`` to download an archived file.\n- Run ``pg_raxarchive cleanup {filename}`` to remove WAL files older than {filename}.\n\nRackspace credential file follows pyrax format::\n\n    [rackspace_cloud]\n    username = YUOR_USERNAME_HERE\n    api_key  = YOUR_API_KEY_HERE\n\nYou can customize the region and the container name using:\n\n- ``pg_raxarchive --container CONTAINE_RNAME ...``\n- ``pg_raxarchive --region REGION_NAME ...``\n\nBy default ``pg_raxarchive`` expects to be running inside rackspace network. If this is\nnot your case or you want to be billed for some other reasons use ``pg_raxarchive --use-public``.\n\n\nMore\n----\n\n* Run ``pg_raxarchive --help`` to know more.\n* Check the repository at https://github.com/duilio/pg_raxarchive/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/duilio/pg_raxarchive", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "pg_raxarchive", "package_url": "https://pypi.org/project/pg_raxarchive/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pg_raxarchive/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/duilio/pg_raxarchive"}, "release_url": "https://pypi.org/project/pg_raxarchive/1.1/", "requires_dist": null, "requires_python": null, "summary": "Command line tool to handle Postgresql WAL archiving on Rackspace's cloudfiles.", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>pg_raxarchive</tt> is a command line tool to handle Postgresql WAL archiving on\nRackspace\u2019s cloudfiles.</p>\n<div id=\"quick-help\">\n<h2>Quick help</h2>\n<p>Install using pip then:</p>\n<ul>\n<li>Create a file <tt>/etc/pg_raxarchive.ini</tt> with rackspace credentials (see below).</li>\n<li>Run <tt>pg_raxarchive upload {path_to_file} {basename}</tt> to upload archive a file.</li>\n<li>Run <tt>pg_raxarchive download {basename} {path_to_file}</tt> to download an archived file.</li>\n<li>Run <tt>pg_raxarchive cleanup {filename}</tt> to remove WAL files older than {filename}.</li>\n</ul>\n<p>Rackspace credential file follows pyrax format:</p>\n<pre>[rackspace_cloud]\nusername = YUOR_USERNAME_HERE\napi_key  = YOUR_API_KEY_HERE\n</pre>\n<p>You can customize the region and the container name using:</p>\n<ul>\n<li><tt>pg_raxarchive <span class=\"pre\">--container</span> CONTAINE_RNAME ...</tt></li>\n<li><tt>pg_raxarchive <span class=\"pre\">--region</span> REGION_NAME ...</tt></li>\n</ul>\n<p>By default <tt>pg_raxarchive</tt> expects to be running inside rackspace network. If this is\nnot your case or you want to be billed for some other reasons use <tt>pg_raxarchive <span class=\"pre\">--use-public</span></tt>.</p>\n</div>\n<div id=\"more\">\n<h2>More</h2>\n<ul>\n<li>Run <tt>pg_raxarchive <span class=\"pre\">--help</span></tt> to know more.</li>\n<li>Check the repository at <a href=\"https://github.com/duilio/pg_raxarchive/\" rel=\"nofollow\">https://github.com/duilio/pg_raxarchive/</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 974922, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "3fa3ce8b03700c11382a4dcb39f8d09f", "sha256": "fdd68805e72f82e5ad31a4ac7aa3281d64462de04037fd15be4a2bef8c570f5a"}, "downloads": -1, "filename": "pg_raxarchive-1.0.tar.gz", "has_sig": false, "md5_digest": "3fa3ce8b03700c11382a4dcb39f8d09f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3801, "upload_time": "2013-09-01T14:02:03", "upload_time_iso_8601": "2013-09-01T14:02:03.855856Z", "url": "https://files.pythonhosted.org/packages/4c/c8/b23ad6aebeb9fdcdd4d1da93b02392672d25bd19df7d7586b797ed2f70d8/pg_raxarchive-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "cfcf97242b0251e611699d58b88253a5", "sha256": "12e7392cc66b5fbcd1e06db5e62eba6750ba373ca7942400850f3879f327bf38"}, "downloads": -1, "filename": "pg_raxarchive-1.1.tar.gz", "has_sig": false, "md5_digest": "cfcf97242b0251e611699d58b88253a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3801, "upload_time": "2014-01-20T16:44:17", "upload_time_iso_8601": "2014-01-20T16:44:17.709444Z", "url": "https://files.pythonhosted.org/packages/0e/59/7b8db8b0b15abe89ccd082bac66f85b2d8b32979be016ef636cbbe79dc0c/pg_raxarchive-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cfcf97242b0251e611699d58b88253a5", "sha256": "12e7392cc66b5fbcd1e06db5e62eba6750ba373ca7942400850f3879f327bf38"}, "downloads": -1, "filename": "pg_raxarchive-1.1.tar.gz", "has_sig": false, "md5_digest": "cfcf97242b0251e611699d58b88253a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3801, "upload_time": "2014-01-20T16:44:17", "upload_time_iso_8601": "2014-01-20T16:44:17.709444Z", "url": "https://files.pythonhosted.org/packages/0e/59/7b8db8b0b15abe89ccd082bac66f85b2d8b32979be016ef636cbbe79dc0c/pg_raxarchive-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:43 2020"}