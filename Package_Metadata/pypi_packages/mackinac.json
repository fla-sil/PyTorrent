{"info": {"author": "Michael Mundy, Helena Mendes-Soares, Nicholas Chia", "author_email": "mundy.michael@mayo.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "Mackinac: A bridge between ModelSEED and COBRApy\n================================================\n\nMackinac combines the ability of `ModelSEED <http://modelseed.org>`_ to automatically\nreconstruct metabolic models with the advanced analysis capabilities in\n`cobrapy <https://github.com/opencobra/cobrapy>`_ to bridge the differences between\nthe two frameworks. Mackinac provides support for using the ModelSEED\nweb service to create draft genome-scale models from genomes available in the\n`Pathosystems Resource Integration Center <https://www.patricbrc.org/portal/portal/patric/Home>`_\n(PATRIC) and creates a COBRA model from a ModelSEED model. If you are not a\n`registered PATRIC user <http://enews.patricbrc.org/faqs/workspace-faqs/registration-faqs/>`_,\nyou must complete a `new user registration <https://user.patricbrc.org/register/>`_\nto work with the ModelSEED web service.\n \nIf you already have models available in ModelSEED, you can simply import and\ncreate a COBRA model with the ``create_cobra_model_from_modelseed_model()``\nfunction. You can then use all of the features in cobrapy to analyze,\ninspect, explore, and draw conclusions from the model.\n\nYou can also reconstruct and gap fill models using the ModelSEED\nservice for any organism with a genome available in PATRIC. Additional functions\nare available for working with ModelSEED models, managing workspace objects,\ngetting information about PATRIC genomes, and calculating reaction likelihoods.\n\nPlease use the `cobrapy Google\nGroup <http://groups.google.com/group/cobra-pie>`_ for help.\nAlternatively, you can use\n`gitter.im <https://gitter.im/opencobra/cobrapy>`_ for quick questions\nand discussions (faster response times).\n\nMore information about opencobra is available at the\n`website <http://opencobra.github.io/>`_.\n\nInstallation\n------------\n\nUse pip to install Mackinac from\n`PyPI <https://pypi.python.org/pypi/mackinac>`_ (we recommend doing this\ninside a `virtual environment\n<http://docs.python-guide.org/en/latest/dev/virtualenvs/>`_)::\n\n    pip install mackinac\n\nWeb service URLs\n----------------\n\nMackinac uses web services provided by other organizations which can be offline,\nthe interface can change, or the URL can change. Mackinac uses these default URLs:\n\n* ModelSEED web service at http://p3c.theseed.org/dev1/services/ProbModelSEED\n* Workspace web service at https://p3.theseed.org/services/Workspace\n* PATRIC web service at https://www.patricbrc.org/api/\n\nAlternate URLs include the following:\n\n* Former production ModelSEED web service at https://p3.theseed.org/services/ProbModelSEED\n\nYou can change the URL used to connect to a web service as shown below:\n\n    >>> import mackinac\n    >>> mackinac.modelseed.ms_client.url = 'http://p3c.theseed.org/dev1/services/ProbModelSEED'\n    >>> mackinac.workspace.ws_client.url = 'https://p3.theseed.org/services/Workspace'\n    >>> mackinac.genome.patric_url = 'https://www.patricbrc.org/api/'\n\nDirect installation in virtual environment\n------------------------------------------\n\n1. If virtualenvwrapper is not installed, `follow the directions <https://virtualenvwrapper.readthedocs.io/en/stable/>`__\n   to install virtualenvwrapper. You should also `update your shell startup file\n   <http://virtualenvwrapper.readthedocs.io/en/stable/install.html#shell-startup-file>`_.\n\n2. Clone the `git repository <https://github.com/mmundy42/mackinac>`_ to your\n   computer with this command::\n\n    $ git clone https://github.com/mmundy42/mackinac.git\n\n3. Create a virtualenv for Mackinac with these commands::\n\n    $ cd mackinac\n    $ mkvirtualenv mackinac\n\n   Use the ``--python`` option to select a specific version of Python for the\n   virtualenv. For example, ``python=python3`` to select the current python3\n   installed on the system.\n\n   Note on macOS, matplotlib requires Python be installed as a framework but\n   virtualenv creates a non-framework build of Python. See the\n   `matplotlib FAQ <http://matplotlib.org/1.5.3/faq/virtualenv_faq.html>`__\n   for details on a workaround.\n\n4. Upgrade pip and setuptools to the latest versions with these commands::\n\n    (mackinac)$ pip install --upgrade pip setuptools\n\n5. Install all of the Mackinac dependencies with this command::\n\n    (mackinac)$ pip install -r requirements.txt\n\n   This command can take a few minutes while numpy, pandas, and libsbml are\n   built in the virtualenv.\n\n6. Install the latest version of Mackinac with this command::\n\n    (mackinac)$ python setup.py install\n\n7. Install the pytest package with this command::\n\n    (mackinac)$ pip install pytest\n\n8. You need to provide a username and password for the tests to obtain an\n   authentication token. Substitute your PATRIC username and password and run\n   the tests with this command::\n\n    (mackinac)$ TEST_USERNAME=<username> TEST_PASSWORD=<password> pytest mackinac/test -v\n\nRun examples in a notebook\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nAn example of how to use Mackinac is provided in a notebook. Here's how to start Jupyter and run\nthe notebook from the virtualenv.\n\n1. Install Jupyter with this command::\n\n    (mackinac)$ pip install jupyter\n\n2. Install a kernel that uses the virtualenv installation with this command::\n\n    (mackinac)$ ipython kernel install --name \"Mackinac_Python27\" --user\n\n3. Start the Jupyter notebook server with this command::\n\n    (mackinac)$ jupyter notebook\n\n   Jupyter opens a web page in your default browser with a file browser.\n\n4. Navigate to the \"documentation_builder\" folder and click on the \"modelseed.ipynb\"\n   notebook.\n\n5. After the notebook opens, from the \"Kernel\" menu, select \"Change kernel\" and\n   click on \"Mackinac_Python27\".\n\n6. Now you can run the cells in the notebook.\n\nRelease Notes\n-------------\n\nVersion 0.8.4 (May 18, 2017)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed usages of deprecated cobra.core.Model.add_reaction() function\n* Added another way to parse error returned by ModelSEED server\n\nVersion 0.8.3 (May 8, 2017)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed setting reaction objective coefficient with cobra 0.6\n\nVersion 0.8.2 (May 5, 2017)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Removed dependency on a specific version of six package\n* Updated directions for virtual environment installation\n* Switched default ModelSEED service URL to current active server\n\nVersion 0.8.1 (March 15, 2017)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Version corresponding to published paper\n\nHow to cite Mackinac\n--------------------\n\nIf you use Mackinac for an analysis, please cite this paper:\n`Mackinac: a bridge between ModelSEED and COBRApy to generate and analyze genome-scale\nmetabolic models <https://dx.doi.org/doi:10.1093/bioinformatics/btx185>`_\n\n\nReferences\n----------\n\n1. `COBRApy: COnstraints-Based Reconstruction and Analysis for Python <http://dx.doi.org/doi:10.1186/1752-0509-7-74>`_\n2. `High-throughput generation, optimization and analysis of genome-scale metabolic models <http://dx.doi.org/doi:10.1038/nbt.1672>`_ (ModelSEED)\n3. `PATRIC, the bacterial bioinformatics database and analysis resource <http://dx.doi.org/doi:10.1093/nar/gkt1099>`_\n\nMackinac Bridge\n^^^^^^^^^^^^^^^\n\nThe `Mackinac Bridge <http://www.mackinacbridge.org>`_ is one of the longest\nsuspension bridges in the United States and spans the Straits of Mackinac to\nconnect the Upper and Lower Peninsulas of Michigan.", "description_content_type": null, "docs_url": null, "download_url": "https://pypi.python.org/pypi/mackinac", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mmundy42/mackinac", "keywords": "metabolism biology optimization flux balance analysis fba", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "mackinac", "package_url": "https://pypi.org/project/mackinac/", "platform": "GNU/Linux,Mac OS X >= 10.7,Microsoft Windows >= 7", "project_url": "https://pypi.org/project/mackinac/", "project_urls": {"Download": "https://pypi.python.org/pypi/mackinac", "Homepage": "https://github.com/mmundy42/mackinac"}, "release_url": "https://pypi.org/project/mackinac/0.8.4/", "requires_dist": null, "requires_python": null, "summary": "Mackinac: A bridge between ModelSEED and COBRApy", "version": "0.8.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Mackinac combines the ability of <a href=\"http://modelseed.org\" rel=\"nofollow\">ModelSEED</a> to automatically\nreconstruct metabolic models with the advanced analysis capabilities in\n<a href=\"https://github.com/opencobra/cobrapy\" rel=\"nofollow\">cobrapy</a> to bridge the differences between\nthe two frameworks. Mackinac provides support for using the ModelSEED\nweb service to create draft genome-scale models from genomes available in the\n<a href=\"https://www.patricbrc.org/portal/portal/patric/Home\" rel=\"nofollow\">Pathosystems Resource Integration Center</a>\n(PATRIC) and creates a COBRA model from a ModelSEED model. If you are not a\n<a href=\"http://enews.patricbrc.org/faqs/workspace-faqs/registration-faqs/\" rel=\"nofollow\">registered PATRIC user</a>,\nyou must complete a <a href=\"https://user.patricbrc.org/register/\" rel=\"nofollow\">new user registration</a>\nto work with the ModelSEED web service.</p>\n<p>If you already have models available in ModelSEED, you can simply import and\ncreate a COBRA model with the <tt>create_cobra_model_from_modelseed_model()</tt>\nfunction. You can then use all of the features in cobrapy to analyze,\ninspect, explore, and draw conclusions from the model.</p>\n<p>You can also reconstruct and gap fill models using the ModelSEED\nservice for any organism with a genome available in PATRIC. Additional functions\nare available for working with ModelSEED models, managing workspace objects,\ngetting information about PATRIC genomes, and calculating reaction likelihoods.</p>\n<p>Please use the <a href=\"http://groups.google.com/group/cobra-pie\" rel=\"nofollow\">cobrapy Google\nGroup</a> for help.\nAlternatively, you can use\n<a href=\"https://gitter.im/opencobra/cobrapy\" rel=\"nofollow\">gitter.im</a> for quick questions\nand discussions (faster response times).</p>\n<p>More information about opencobra is available at the\n<a href=\"http://opencobra.github.io/\" rel=\"nofollow\">website</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Use pip to install Mackinac from\n<a href=\"https://pypi.python.org/pypi/mackinac\" rel=\"nofollow\">PyPI</a> (we recommend doing this\ninside a <a href=\"http://docs.python-guide.org/en/latest/dev/virtualenvs/\" rel=\"nofollow\">virtual environment</a>):</p>\n<pre>pip install mackinac\n</pre>\n</div>\n<div id=\"web-service-urls\">\n<h2>Web service URLs</h2>\n<p>Mackinac uses web services provided by other organizations which can be offline,\nthe interface can change, or the URL can change. Mackinac uses these default URLs:</p>\n<ul>\n<li>ModelSEED web service at <a href=\"http://p3c.theseed.org/dev1/services/ProbModelSEED\" rel=\"nofollow\">http://p3c.theseed.org/dev1/services/ProbModelSEED</a></li>\n<li>Workspace web service at <a href=\"https://p3.theseed.org/services/Workspace\" rel=\"nofollow\">https://p3.theseed.org/services/Workspace</a></li>\n<li>PATRIC web service at <a href=\"https://www.patricbrc.org/api/\" rel=\"nofollow\">https://www.patricbrc.org/api/</a></li>\n</ul>\n<p>Alternate URLs include the following:</p>\n<ul>\n<li>Former production ModelSEED web service at <a href=\"https://p3.theseed.org/services/ProbModelSEED\" rel=\"nofollow\">https://p3.theseed.org/services/ProbModelSEED</a></li>\n</ul>\n<p>You can change the URL used to connect to a web service as shown below:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import mackinac\n&gt;&gt;&gt; mackinac.modelseed.ms_client.url = 'http://p3c.theseed.org/dev1/services/ProbModelSEED'\n&gt;&gt;&gt; mackinac.workspace.ws_client.url = 'https://p3.theseed.org/services/Workspace'\n&gt;&gt;&gt; mackinac.genome.patric_url = 'https://www.patricbrc.org/api/'\n</pre>\n</blockquote>\n</div>\n<div id=\"direct-installation-in-virtual-environment\">\n<h2>Direct installation in virtual environment</h2>\n<ol>\n<li><p>If virtualenvwrapper is not installed, <a href=\"https://virtualenvwrapper.readthedocs.io/en/stable/\" rel=\"nofollow\">follow the directions</a>\nto install virtualenvwrapper. You should also <a href=\"http://virtualenvwrapper.readthedocs.io/en/stable/install.html#shell-startup-file\" rel=\"nofollow\">update your shell startup file</a>.</p>\n</li>\n<li><p>Clone the <a href=\"https://github.com/mmundy42/mackinac\" rel=\"nofollow\">git repository</a> to your\ncomputer with this command:</p>\n<pre>$ git clone https://github.com/mmundy42/mackinac.git\n</pre>\n</li>\n<li><p>Create a virtualenv for Mackinac with these commands:</p>\n<pre>$ cd mackinac\n$ mkvirtualenv mackinac\n</pre>\n<p>Use the <tt><span class=\"pre\">--python</span></tt> option to select a specific version of Python for the\nvirtualenv. For example, <tt>python=python3</tt> to select the current python3\ninstalled on the system.</p>\n<p>Note on macOS, matplotlib requires Python be installed as a framework but\nvirtualenv creates a non-framework build of Python. See the\n<a href=\"http://matplotlib.org/1.5.3/faq/virtualenv_faq.html\" rel=\"nofollow\">matplotlib FAQ</a>\nfor details on a workaround.</p>\n</li>\n<li><p>Upgrade pip and setuptools to the latest versions with these commands:</p>\n<pre>(mackinac)$ pip install --upgrade pip setuptools\n</pre>\n</li>\n<li><p>Install all of the Mackinac dependencies with this command:</p>\n<pre>(mackinac)$ pip install -r requirements.txt\n</pre>\n<p>This command can take a few minutes while numpy, pandas, and libsbml are\nbuilt in the virtualenv.</p>\n</li>\n<li><p>Install the latest version of Mackinac with this command:</p>\n<pre>(mackinac)$ python setup.py install\n</pre>\n</li>\n<li><p>Install the pytest package with this command:</p>\n<pre>(mackinac)$ pip install pytest\n</pre>\n</li>\n<li><p>You need to provide a username and password for the tests to obtain an\nauthentication token. Substitute your PATRIC username and password and run\nthe tests with this command:</p>\n<pre>(mackinac)$ TEST_USERNAME=&lt;username&gt; TEST_PASSWORD=&lt;password&gt; pytest mackinac/test -v\n</pre>\n</li>\n</ol>\n<div id=\"run-examples-in-a-notebook\">\n<h3>Run examples in a notebook</h3>\n<p>An example of how to use Mackinac is provided in a notebook. Here\u2019s how to start Jupyter and run\nthe notebook from the virtualenv.</p>\n<ol>\n<li><p>Install Jupyter with this command:</p>\n<pre>(mackinac)$ pip install jupyter\n</pre>\n</li>\n<li><p>Install a kernel that uses the virtualenv installation with this command:</p>\n<pre>(mackinac)$ ipython kernel install --name \"Mackinac_Python27\" --user\n</pre>\n</li>\n<li><p>Start the Jupyter notebook server with this command:</p>\n<pre>(mackinac)$ jupyter notebook\n</pre>\n<p>Jupyter opens a web page in your default browser with a file browser.</p>\n</li>\n<li><p>Navigate to the \u201cdocumentation_builder\u201d folder and click on the \u201cmodelseed.ipynb\u201d\nnotebook.</p>\n</li>\n<li><p>After the notebook opens, from the \u201cKernel\u201d menu, select \u201cChange kernel\u201d and\nclick on \u201cMackinac_Python27\u201d.</p>\n</li>\n<li><p>Now you can run the cells in the notebook.</p>\n</li>\n</ol>\n</div>\n</div>\n<div id=\"release-notes\">\n<h2>Release Notes</h2>\n<div id=\"version-0-8-4-may-18-2017\">\n<h3>Version 0.8.4 (May 18, 2017)</h3>\n<ul>\n<li>Fixed usages of deprecated cobra.core.Model.add_reaction() function</li>\n<li>Added another way to parse error returned by ModelSEED server</li>\n</ul>\n</div>\n<div id=\"version-0-8-3-may-8-2017\">\n<h3>Version 0.8.3 (May 8, 2017)</h3>\n<ul>\n<li>Fixed setting reaction objective coefficient with cobra 0.6</li>\n</ul>\n</div>\n<div id=\"version-0-8-2-may-5-2017\">\n<h3>Version 0.8.2 (May 5, 2017)</h3>\n<ul>\n<li>Removed dependency on a specific version of six package</li>\n<li>Updated directions for virtual environment installation</li>\n<li>Switched default ModelSEED service URL to current active server</li>\n</ul>\n</div>\n<div id=\"version-0-8-1-march-15-2017\">\n<h3>Version 0.8.1 (March 15, 2017)</h3>\n<ul>\n<li>Version corresponding to published paper</li>\n</ul>\n</div>\n</div>\n<div id=\"how-to-cite-mackinac\">\n<h2>How to cite Mackinac</h2>\n<p>If you use Mackinac for an analysis, please cite this paper:\n<a href=\"https://dx.doi.org/doi:10.1093/bioinformatics/btx185\" rel=\"nofollow\">Mackinac: a bridge between ModelSEED and COBRApy to generate and analyze genome-scale\nmetabolic models</a></p>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<ol>\n<li><a href=\"http://dx.doi.org/doi:10.1186/1752-0509-7-74\" rel=\"nofollow\">COBRApy: COnstraints-Based Reconstruction and Analysis for Python</a></li>\n<li><a href=\"http://dx.doi.org/doi:10.1038/nbt.1672\" rel=\"nofollow\">High-throughput generation, optimization and analysis of genome-scale metabolic models</a> (ModelSEED)</li>\n<li><a href=\"http://dx.doi.org/doi:10.1093/nar/gkt1099\" rel=\"nofollow\">PATRIC, the bacterial bioinformatics database and analysis resource</a></li>\n</ol>\n<div id=\"mackinac-bridge\">\n<h3>Mackinac Bridge</h3>\n<p>The <a href=\"http://www.mackinacbridge.org\" rel=\"nofollow\">Mackinac Bridge</a> is one of the longest\nsuspension bridges in the United States and spans the Straits of Mackinac to\nconnect the Upper and Lower Peninsulas of Michigan.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3037200, "releases": {"0.8.0": [{"comment_text": "", "digests": {"md5": "aa0565535508cfd75f8831836a561b5a", "sha256": "3eaf012aa542f86439fc45a0c7dab7e3ae55abec461094ff7b6c0a2a907fb47a"}, "downloads": -1, "filename": "mackinac-0.8.0.tar.gz", "has_sig": false, "md5_digest": "aa0565535508cfd75f8831836a561b5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29760, "upload_time": "2017-02-10T16:11:22", "upload_time_iso_8601": "2017-02-10T16:11:22.459748Z", "url": "https://files.pythonhosted.org/packages/c0/1d/112ff352f5930c8306c32f31eae467b2c27600eb3333c42c94a92a971f01/mackinac-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "371765643c1e3f5b30c828a8cc1ebb78", "sha256": "999b6039511843d993b9b5bda68fdf59f65598f1ff5305c854912f4cf6916bef"}, "downloads": -1, "filename": "mackinac-0.8.1.tar.gz", "has_sig": false, "md5_digest": "371765643c1e3f5b30c828a8cc1ebb78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28506, "upload_time": "2017-03-15T21:33:29", "upload_time_iso_8601": "2017-03-15T21:33:29.561684Z", "url": "https://files.pythonhosted.org/packages/da/44/e934f6ca84e2749cc573d5d6e28f8ed8abf6095dad02e0ef19f5b58754fe/mackinac-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "4461edcfffaf99ab15aafc36f679bd04", "sha256": "b0c318ea812fe874e4c5e43a9a472c5d4998ff4b490a5733ce9047840d7dae37"}, "downloads": -1, "filename": "mackinac-0.8.2.tar.gz", "has_sig": false, "md5_digest": "4461edcfffaf99ab15aafc36f679bd04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28871, "upload_time": "2017-05-05T14:18:43", "upload_time_iso_8601": "2017-05-05T14:18:43.488607Z", "url": "https://files.pythonhosted.org/packages/f7/21/a2c30a5491b7a7f299f145d2be9e269133678c6e576f45d0594b659e41b8/mackinac-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "08996b26b3f4eb979b944e3a26ba3542", "sha256": "c921c3873a5e5380e867cfb67ba28249d17a08411a4d49fe3dd7b32457ac5c95"}, "downloads": -1, "filename": "mackinac-0.8.3.tar.gz", "has_sig": false, "md5_digest": "08996b26b3f4eb979b944e3a26ba3542", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28923, "upload_time": "2017-05-08T14:46:25", "upload_time_iso_8601": "2017-05-08T14:46:25.168230Z", "url": "https://files.pythonhosted.org/packages/3c/11/5337f427a10005042b11826b5a7c169e2baa9a8fb713d4d1c438499404d3/mackinac-0.8.3.tar.gz", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "8d5a164c250bbd8a2da69fb766a3d309", "sha256": "a5a95db3d3607ede34aa22fbc30bcd295f51e0d0867d16b17c21617d077bae96"}, "downloads": -1, "filename": "mackinac-0.8.4.tar.gz", "has_sig": false, "md5_digest": "8d5a164c250bbd8a2da69fb766a3d309", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29058, "upload_time": "2017-05-18T20:49:37", "upload_time_iso_8601": "2017-05-18T20:49:37.758106Z", "url": "https://files.pythonhosted.org/packages/3b/62/f75db7e0eeb6dcc1d4a445259c21e2c78d95b58b8ed829e49a62f5fa9e69/mackinac-0.8.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8d5a164c250bbd8a2da69fb766a3d309", "sha256": "a5a95db3d3607ede34aa22fbc30bcd295f51e0d0867d16b17c21617d077bae96"}, "downloads": -1, "filename": "mackinac-0.8.4.tar.gz", "has_sig": false, "md5_digest": "8d5a164c250bbd8a2da69fb766a3d309", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29058, "upload_time": "2017-05-18T20:49:37", "upload_time_iso_8601": "2017-05-18T20:49:37.758106Z", "url": "https://files.pythonhosted.org/packages/3b/62/f75db7e0eeb6dcc1d4a445259c21e2c78d95b58b8ed829e49a62f5fa9e69/mackinac-0.8.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:19 2020"}