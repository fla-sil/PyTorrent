{"info": {"author": "autofelge1024", "author_email": "mail@autofelge1024.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python :: 3"], "description": "# Webhook script execution\n\nThis module provides a simple method for automatically execution calling scripts when a webhook-call is received.\n\nIn the configuration file you define, which script will be called on wich request. e.g.:\n\n```\n[webserver-settings]\nlisten_ip: 127.0.0.1\nlisten_port: 8080\n\n[/print/hello]\nmethod: GET, POST\ncommand: echo \"Hello!\"\n\n[/wall/hello]\nmethod: GET, POST\ncommand: wall \"Hello!\"\n\n[/sleep]\nmethod: GET\ncommand: sleep 5 && wall \"Hello!\"\n\n[/git/pull/webhook_script_execution]\nmethod: GET\npath: /data/scripts/webhook_script_execution\ncommand: git pull\n```\n\nThe configuration has following sections:\n\n## `webserver-settings`:\n\nIn this section, the IP-Adress and Port configuration can be done.\n\n## `/request/paths`:\n\nIn these sections, it is defined, wich script will be called:\nYou can define:\n\n- `method`: Which HTTP-Method can be used to trigger the script-execution. Today, `GET`and `POST` are implemented.\n- `path`: Optionally, you can define a Filesystem-Path, where the script shall be executed.\n- `command`: The command to be executed.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/autofelge1024/webhook_script_execution", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "webhook-script-execution", "package_url": "https://pypi.org/project/webhook-script-execution/", "platform": "", "project_url": "https://pypi.org/project/webhook-script-execution/", "project_urls": {"Homepage": "https://github.com/autofelge1024/webhook_script_execution"}, "release_url": "https://pypi.org/project/webhook-script-execution/0.0.2/", "requires_dist": null, "requires_python": ">=3.4", "summary": "A simple and small webserver to react to webhook-calls by executing scripts.For simplicity, webhook-urls and scripts are configured in a configfile.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Webhook script execution</h1>\n<p>This module provides a simple method for automatically execution calling scripts when a webhook-call is received.</p>\n<p>In the configuration file you define, which script will be called on wich request. e.g.:</p>\n<pre><code>[webserver-settings]\nlisten_ip: 127.0.0.1\nlisten_port: 8080\n\n[/print/hello]\nmethod: GET, POST\ncommand: echo \"Hello!\"\n\n[/wall/hello]\nmethod: GET, POST\ncommand: wall \"Hello!\"\n\n[/sleep]\nmethod: GET\ncommand: sleep 5 &amp;&amp; wall \"Hello!\"\n\n[/git/pull/webhook_script_execution]\nmethod: GET\npath: /data/scripts/webhook_script_execution\ncommand: git pull\n</code></pre>\n<p>The configuration has following sections:</p>\n<h2><code>webserver-settings</code>:</h2>\n<p>In this section, the IP-Adress and Port configuration can be done.</p>\n<h2><code>/request/paths</code>:</h2>\n<p>In these sections, it is defined, wich script will be called:\nYou can define:</p>\n<ul>\n<li><code>method</code>: Which HTTP-Method can be used to trigger the script-execution. Today, <code>GET</code>and <code>POST</code> are implemented.</li>\n<li><code>path</code>: Optionally, you can define a Filesystem-Path, where the script shall be executed.</li>\n<li><code>command</code>: The command to be executed.</li>\n</ul>\n\n          </div>"}, "last_serial": 5796804, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "f31c05fb4afc921999020c4a033a2461", "sha256": "0ec562d5f9a215d2f420ef79d9201ff5cee4b44ed819966fa7726c080764ce7c"}, "downloads": -1, "filename": "webhook_script_execution-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f31c05fb4afc921999020c4a033a2461", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 2757, "upload_time": "2019-09-07T17:32:21", "upload_time_iso_8601": "2019-09-07T17:32:21.872462Z", "url": "https://files.pythonhosted.org/packages/3a/42/926c74669c6d76bed49bf8274beebe134ba6fb1b8b5f8be1106aa14da51a/webhook_script_execution-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f31c05fb4afc921999020c4a033a2461", "sha256": "0ec562d5f9a215d2f420ef79d9201ff5cee4b44ed819966fa7726c080764ce7c"}, "downloads": -1, "filename": "webhook_script_execution-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f31c05fb4afc921999020c4a033a2461", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 2757, "upload_time": "2019-09-07T17:32:21", "upload_time_iso_8601": "2019-09-07T17:32:21.872462Z", "url": "https://files.pythonhosted.org/packages/3a/42/926c74669c6d76bed49bf8274beebe134ba6fb1b8b5f8be1106aa14da51a/webhook_script_execution-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:31:05 2020"}