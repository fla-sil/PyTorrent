{"info": {"author": "Jelle Smet", "author_email": "development@smetj.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python"], "description": "::\n            __       __    __\n  .--.--.--|__.-----|  |--|  |--.-----.-----.-----.\n  |  |  |  |  |__ --|     |  _  |  _  |     |  -__|\n  |________|__|_____|__|__|_____|_____|__|__|_____|\n\n\n  ===================================\n  wishbone_contrib.module.output.file\n  ===================================\n\n  Version: 3.0.0\n\n  Writes events to a file.\n  ------------------------\n\n      Writes events to a file.\n\n      Parameters::\n\n          - directory(str)(\"./\")\n             |  The directory to write the files to.\n\n          - filename(str)(\"wishbone.out\")*\n             |  The filename to use.\n\n          - native_events(bool)(False)\n             |  Submit Wishbone native events.\n\n          - overwrite(bool)(False)\n\n             |  If `True` overwrites each time the content otherwise appends to\n             |  the end of the file.\n\n          - parallel_streams(int)(1)\n             |  The number of outgoing parallel data streams.\n\n          - payload(str)(None)\n             |  The string to submit.\n             |  If defined takes precedence over `selection`.\n\n          - selection(str)(\"data\")*\n             |  The part of the event to submit externally.\n             |  Use an empty string to refer to the complete event.\n\n\n      Queues::\n\n          - inbox\n             |  Incoming messages\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/smetj/wishbone-xxx/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smetj/wishbone-output-file", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "wishbone_output_file", "package_url": "https://pypi.org/project/wishbone_output_file/", "platform": "Linux", "project_url": "https://pypi.org/project/wishbone_output_file/", "project_urls": {"Download": "https://github.com/smetj/wishbone-xxx/tarball/master", "Homepage": "https://github.com/smetj/wishbone-output-file"}, "release_url": "https://pypi.org/project/wishbone_output_file/3.0.0/", "requires_dist": null, "requires_python": "", "summary": "A Wishbone output module to write event data to a file.", "version": "3.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            ::<br>            __       __    __<br>  .--.--.--|__.-----|  |--|  |--.-----.-----.-----.<br>  |  |  |  |  |__ --|     |  _  |  _  |     |  -__|<br>  |________|__|_____|__|__|_____|_____|__|__|_____|<br><br><br>  ===================================<br>  wishbone_contrib.module.output.file<br>  ===================================<br><br>  Version: 3.0.0<br><br>  Writes events to a file.<br>  ------------------------<br><br>      Writes events to a file.<br><br>      Parameters::<br><br>          - directory(str)(\"./\")<br>             |  The directory to write the files to.<br><br>          - filename(str)(\"wishbone.out\")*<br>             |  The filename to use.<br><br>          - native_events(bool)(False)<br>             |  Submit Wishbone native events.<br><br>          - overwrite(bool)(False)<br><br>             |  If `True` overwrites each time the content otherwise appends to<br>             |  the end of the file.<br><br>          - parallel_streams(int)(1)<br>             |  The number of outgoing parallel data streams.<br><br>          - payload(str)(None)<br>             |  The string to submit.<br>             |  If defined takes precedence over `selection`.<br><br>          - selection(str)(\"data\")*<br>             |  The part of the event to submit externally.<br>             |  Use an empty string to refer to the complete event.<br><br><br>      Queues::<br><br>          - inbox<br>             |  Incoming messages<br><br><br>\n          </div>"}, "last_serial": 3745841, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c784aa7838ac21f05060e7c3e71b6ba3", "sha256": "3be9d13e7bad099d08e2eaa409cef77871f478200dd96a9e7599e6c6de1f519a"}, "downloads": -1, "filename": "wishbone_output_file-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c784aa7838ac21f05060e7c3e71b6ba3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2838, "upload_time": "2016-03-28T13:55:58", "upload_time_iso_8601": "2016-03-28T13:55:58.901314Z", "url": "https://files.pythonhosted.org/packages/d0/3a/d9ca6e904b14e39b671001db64a0aeb380c4b421b1b1363842e048590405/wishbone_output_file-1.0.0.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "b3f7da4db8b6368bcaf8adda2e5a7b32", "sha256": "579818b04276e634756d8ab3ac304586336ea52f1975d730bc945bfdd570f57b"}, "downloads": -1, "filename": "wishbone_output_file-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b3f7da4db8b6368bcaf8adda2e5a7b32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2949, "upload_time": "2016-08-21T11:27:57", "upload_time_iso_8601": "2016-08-21T11:27:57.746524Z", "url": "https://files.pythonhosted.org/packages/f7/ef/8cbf87eeaad3ebdb59f7f527d882925f00039ef4c7bb8e57cf259e8b1638/wishbone_output_file-1.0.2.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "a0ad61023718019412e2115abf90ab3c", "sha256": "cc999e7715cf6ed836e29fd6a92b5f657fa89214d40f49ebd37ae310386c6760"}, "downloads": -1, "filename": "wishbone_output_file-3.0.0.tar.gz", "has_sig": false, "md5_digest": "a0ad61023718019412e2115abf90ab3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3235, "upload_time": "2018-04-08T13:09:13", "upload_time_iso_8601": "2018-04-08T13:09:13.610055Z", "url": "https://files.pythonhosted.org/packages/bb/36/4fff318b1e7db5f18c00dc793d9ff380324ec1869eda1f140b6e109c40ee/wishbone_output_file-3.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a0ad61023718019412e2115abf90ab3c", "sha256": "cc999e7715cf6ed836e29fd6a92b5f657fa89214d40f49ebd37ae310386c6760"}, "downloads": -1, "filename": "wishbone_output_file-3.0.0.tar.gz", "has_sig": false, "md5_digest": "a0ad61023718019412e2115abf90ab3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3235, "upload_time": "2018-04-08T13:09:13", "upload_time_iso_8601": "2018-04-08T13:09:13.610055Z", "url": "https://files.pythonhosted.org/packages/bb/36/4fff318b1e7db5f18c00dc793d9ff380324ec1869eda1f140b6e109c40ee/wishbone_output_file-3.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:36 2020"}