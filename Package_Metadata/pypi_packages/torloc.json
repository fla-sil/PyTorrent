{"info": {"author": "Nikita Kudryavtsev", "author_email": "mrgyber@mail.ru", "bugtrack_url": null, "classifiers": [], "description": "# Torloc\nTorloc runs multiple Tor services on local ports. So you can use many different ip addresses without having to start\neach service manually.\n\nFor Linux and Windows.\n\n# Installation\n\n    pip install torloc\n\nOr download the tarball / `git clone` and...\n\n    python setup.py install\n\nOr include `torloc` directory in your project (PySocks required).\n\nOr simply copy the `torloc` directory to your Python's lib/site-packages directory (PySocks required).\n\n# Usage\n```python\nimport torloc\n\nports_data = torloc.start(6, threads=3)\nfor port in ports_data:\n    ...\ntorloc.stop(ports_data)\n```\n##### Output example\n```\nSTARTING: 49152... \nSTARTING: 49153... \nSTARTING: 49154... \nREADY: 49152 (192.42.116.27)\nSTARTING: 49155... \nREADY: 49153 (185.220.101.48)\nSTARTING: 49156... \nREADY: 49154 (185.220.100.252)\nSTARTING: 49157... \nREADY: 49155 (185.220.101.24)\nREADY: 49156 (185.220.101.25)\nREADY: 49157 (185.220.101.46)\n\nStooping 49152, 49153, 49154, 49155, 49156, 491537 ... OK\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mrgyber/torloc", "keywords": "tor,proxy", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "torloc", "package_url": "https://pypi.org/project/torloc/", "platform": "", "project_url": "https://pypi.org/project/torloc/", "project_urls": {"Homepage": "https://github.com/mrgyber/torloc"}, "release_url": "https://pypi.org/project/torloc/1.0.0/", "requires_dist": ["PySocks"], "requires_python": ">=3.4", "summary": "A Python tool for running multiple Tor services on local ports", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Torloc</h1>\n<p>Torloc runs multiple Tor services on local ports. So you can use many different ip addresses without having to start\neach service manually.</p>\n<p>For Linux and Windows.</p>\n<h1>Installation</h1>\n<pre><code>pip install torloc\n</code></pre>\n<p>Or download the tarball / <code>git clone</code> and...</p>\n<pre><code>python setup.py install\n</code></pre>\n<p>Or include <code>torloc</code> directory in your project (PySocks required).</p>\n<p>Or simply copy the <code>torloc</code> directory to your Python's lib/site-packages directory (PySocks required).</p>\n<h1>Usage</h1>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">torloc</span>\n\n<span class=\"n\">ports_data</span> <span class=\"o\">=</span> <span class=\"n\">torloc</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">threads</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">port</span> <span class=\"ow\">in</span> <span class=\"n\">ports_data</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n<span class=\"n\">torloc</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">(</span><span class=\"n\">ports_data</span><span class=\"p\">)</span>\n</pre>\n<h5>Output example</h5>\n<pre><code>STARTING: 49152... \nSTARTING: 49153... \nSTARTING: 49154... \nREADY: 49152 (192.42.116.27)\nSTARTING: 49155... \nREADY: 49153 (185.220.101.48)\nSTARTING: 49156... \nREADY: 49154 (185.220.100.252)\nSTARTING: 49157... \nREADY: 49155 (185.220.101.24)\nREADY: 49156 (185.220.101.25)\nREADY: 49157 (185.220.101.46)\n\nStooping 49152, 49153, 49154, 49155, 49156, 491537 ... OK\n</code></pre>\n\n          </div>"}, "last_serial": 6719386, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "08465f41ece335394a4588abfd590d48", "sha256": "6d0b799652c78784945e2ef00f59e0bd151836252ddb09edf7592bc19e23f811"}, "downloads": -1, "filename": "torloc-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "08465f41ece335394a4588abfd590d48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 10434442, "upload_time": "2020-02-28T17:57:00", "upload_time_iso_8601": "2020-02-28T17:57:00.975313Z", "url": "https://files.pythonhosted.org/packages/05/28/0712a31be318e6dda0799480a23e25a22f2189b7259ad6434f886423b2dd/torloc-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6017cbbeada2a8ccf25b1e80c502afaf", "sha256": "e5e24d151e7bed920e74b94892299d2e9dfcd68d965f14062dfb64749d8226bc"}, "downloads": -1, "filename": "torloc-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6017cbbeada2a8ccf25b1e80c502afaf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 10434107, "upload_time": "2020-02-28T17:57:06", "upload_time_iso_8601": "2020-02-28T17:57:06.165501Z", "url": "https://files.pythonhosted.org/packages/2c/4f/4342a21850d954d76c6ca29abb7fd4917d77477da80650e5e283aea2da7f/torloc-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "08465f41ece335394a4588abfd590d48", "sha256": "6d0b799652c78784945e2ef00f59e0bd151836252ddb09edf7592bc19e23f811"}, "downloads": -1, "filename": "torloc-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "08465f41ece335394a4588abfd590d48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 10434442, "upload_time": "2020-02-28T17:57:00", "upload_time_iso_8601": "2020-02-28T17:57:00.975313Z", "url": "https://files.pythonhosted.org/packages/05/28/0712a31be318e6dda0799480a23e25a22f2189b7259ad6434f886423b2dd/torloc-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6017cbbeada2a8ccf25b1e80c502afaf", "sha256": "e5e24d151e7bed920e74b94892299d2e9dfcd68d965f14062dfb64749d8226bc"}, "downloads": -1, "filename": "torloc-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6017cbbeada2a8ccf25b1e80c502afaf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 10434107, "upload_time": "2020-02-28T17:57:06", "upload_time_iso_8601": "2020-02-28T17:57:06.165501Z", "url": "https://files.pythonhosted.org/packages/2c/4f/4342a21850d954d76c6ca29abb7fd4917d77477da80650e5e283aea2da7f/torloc-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:49:58 2020"}