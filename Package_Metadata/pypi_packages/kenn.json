{"info": {"author": "Alessandro Daniele, Luciano Serafini", "author_email": "daniele@fbk.eu, serafini@fbk.eu", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "KENN (Knowledge Enhanced Neural Networks) is a library for python 2.7 built on top of TensorFlow which permits to enhance neural networks models with logical constraints (clauses). It does so by adding a new final layer, called Knowledge Enhancer (KE), to the existing neural network. The KE change the orginal predictions of the standard neural network enforcing the satisfaction of the constraints. Additionally, it contains clause weights, learnable parameters associated to the constraints that represent their strength.", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/DanieleAlessandro/KENN/archive/v1.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DanieleAlessandro/KENN", "keywords": "kenn,Statistical Relational Learning,Neural Symbolic Learning,Learning with logic", "license": "bsd-3-clause", "maintainer": "", "maintainer_email": "", "name": "kenn", "package_url": "https://pypi.org/project/kenn/", "platform": "", "project_url": "https://pypi.org/project/kenn/", "project_urls": {"Download": "https://github.com/DanieleAlessandro/KENN/archive/v1.0.tar.gz", "Homepage": "https://github.com/DanieleAlessandro/KENN"}, "release_url": "https://pypi.org/project/kenn/1.0/", "requires_dist": null, "requires_python": "", "summary": "Knowledge Enhanced Neural Networks", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>KENN (Knowledge Enhanced Neural Networks) is a library for python 2.7 built on top of TensorFlow which permits to enhance neural networks models with logical constraints (clauses). It does so by adding a new final layer, called Knowledge Enhancer (KE), to the existing neural network. The KE change the orginal predictions of the standard neural network enforcing the satisfaction of the constraints. Additionally, it contains clause weights, learnable parameters associated to the constraints that represent their strength.</p>\n\n          </div>"}, "last_serial": 5716132, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "2f9c574c0089cdab75b10644140e8614", "sha256": "08bf0a598ed0578c2fc02aabfd47b2d1b42f9bf48913891e6b1fd582808e0039"}, "downloads": -1, "filename": "kenn-1.0.tar.gz", "has_sig": false, "md5_digest": "2f9c574c0089cdab75b10644140e8614", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3757, "upload_time": "2019-08-22T16:45:25", "upload_time_iso_8601": "2019-08-22T16:45:25.134573Z", "url": "https://files.pythonhosted.org/packages/00/c5/7a88248e6740bf71c085f6dc51a979406a6b5463f8bd4614720a4870b22e/kenn-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2f9c574c0089cdab75b10644140e8614", "sha256": "08bf0a598ed0578c2fc02aabfd47b2d1b42f9bf48913891e6b1fd582808e0039"}, "downloads": -1, "filename": "kenn-1.0.tar.gz", "has_sig": false, "md5_digest": "2f9c574c0089cdab75b10644140e8614", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3757, "upload_time": "2019-08-22T16:45:25", "upload_time_iso_8601": "2019-08-22T16:45:25.134573Z", "url": "https://files.pythonhosted.org/packages/00/c5/7a88248e6740bf71c085f6dc51a979406a6b5463f8bd4614720a4870b22e/kenn-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:16 2020"}