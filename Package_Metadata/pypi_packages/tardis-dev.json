{"info": {"author": "Thad", "author_email": "thad@tardis.dev", "bugtrack_url": null, "classifiers": ["License :: OSI Approved", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# tardis-client\n\n[![PyPi](https://img.shields.io/pypi/v/tardis-client.svg)](https://pypi.org/project/tardis-client/)\n[![Python](https://img.shields.io/pypi/pyversions/tardis-client.svg)](https://pypi.org/project/tardis-client/)\n<a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n\nPython client for [tardis.dev](https://tardis.dev) - historical tick-level cryptocurrency market data replay API.\nProvides fast, high level and developer friendly wrapper for more low level [HTTP API](https://docs.tardis.dev/api#http-api) with local file based caching build in.\n\n## Installation\n\nRequires Python 3.7.0+ installed.\n\n```sh\npip install tardis-client\n```\n\n## Usage\n\n```python\nimport asyncio\nfrom tardis_client import TardisClient, Channel\n\nasync def replay():\n    tardis_client = TardisClient()\n\n    # replay method returns Async Generator\n    # https://rickyhan.com/jekyll/update/2018/01/27/python36.html\n    messages = tardis_client.replay(\n        exchange=\"bitmex\",\n        from_date=\"2019-06-01\",\n        to_date=\"2019-06-02\",\n        filters=[Channel(name=\"trade\", symbols=[\"XBTUSD\",\"ETHUSD\"]), Channel(\"orderBookL2\", [\"XBTUSD\"])],\n    )\n\n    # this will print all trades and orderBookL2 messages for XBTUSD\n    # and all trades for ETHUSD for bitmex exchange\n    # between 2019-06-01T00:00:00.000Z and 2019-06-02T00:00:00.000Z (whole first day of June 2019)\n    async for local_timestamp, message in messages:\n        # local timestamp is a Python datetime that marks timestamp when given message has been received\n        # message is a message object as provided by exchange real-time stream\n        print(message)\n\nasyncio.run(replay())\n```\n[![Try on repl.it](https://repl-badge.jajoosam.repl.co/try.png)](https://repl.it/@TardisThad/tardis-python-client-example)\n\n## API\n\n`tardis-client` package provides `TardisClient` and `Channel` classes.\n\n```python\nfrom tardis_client import TardisClient, Channel\n```\n\n### TardisClient\n\nOptional client constructor parameters.\n\n| name                   | type     | default value               | description                                                                                                                                                     |\n| ---------------------- | -------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `api_key` (optional)   | `string` | `\"\"`                        | optional `string` containing API key for [tardis.dev](https://tardis.dev) API. If not provided only first day of each month of data is accessible (free access) |\n| `cache_dir` (optional) | `string` | `<os.tmpdir>/.tardis-cache` | optional `string` with path to local dir that will be used as cache location. If not provided default `temp` dir for given OS will be used.                     |\n\nExample:\n\n```python\n# creates new client instance with access only to sample data (first day of each month)\ntardis_client = TardisClient()\n\n# creates new client with access to all data for given API key\ntardis_client = TardisClient(api_key=\"YOUR_API_KEY\")\n\n# creates new client with custom cache dir\ntardis_client = TardisClient(cache_dir=\"./cache\")\n```\n\n- ### `tardis_client.clear_cache()`\n\n  Removes local file cache dir and it's contents.\n\n  Example:\n\n  ```python\n  tardis_client = TardisClient()\n\n  tardis_client.clear_cache()\n  ```\n\n- ### `tardis_client.replay(exchange, from_date, to_date, filters=[])`\n\n  Replays historical market data messages for given replay arguments.\n\n  Returns [Async Generator](https://rickyhan.com/jekyll/update/2018/01/27/python36.html) with named tuples (`namedtuple(\"Response\", [\"local_timestamp\", \"message\"])`).\n\n  - `local_timestamp` is a Python datetime object specyfying when message has been received from the exchange real-time data feed.\n\n  - `message` is Python dict with parsed JSON that has exactly the same format as message provided by particular exchange's real-time data feed.\n\n    #### `replay` method parameters:\n\n    | name                 | type                              | default value | description                                                                                                                                                                                  |\n    | -------------------- | --------------------------------- | ------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | `exchange`           | `string`                          | -             | requested exchange name - see [allowed exchanges](https://github.com/tardis-dev/python-client/blob/master/tardis_client/consts.py#L1) list                                                   |\n    | `from_date`          | `string`                          | -             | requested UTC start date of data feed - [valid ISO date string](https://docs.python.org/3/library/datetime.html#datetime.date.fromisoformat), eg: `2019-04-05` or `2019-05-05T00:00:00`      |\n    | `to_date`            | `string`                          | -             | requested UTC end date of data feed - [valid ISO date string](https://docs.python.org/3/library/datetime.html#datetime.date.fromisoformat), eg: `2019-04-05` or `2019-05-05T00:00:00`        |\n    | `filters` (optional) | [`List[Channel]`](#channel-class) | []            | optional filters of requested data feed. Use [/exchanges/:exchange](https://docs.tardis.dev/api#exchanges-exchange) API call to get allowed channel names and symbols for requested exchange |\n\n    ##### `Channel` class\n\n    `Channel` class constructor parameters.\n\n    | name      | type           | description                                                                                                                                         |\n    | --------- | -------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | `name`    | `string`       | Use [/exchanges/:exchange](https://docs.tardis.dev/api#exchanges-exchange) API call to get allowed channel names and symbols for requested exchange |\n    | `symbols` | `List[string]` | Use [/exchanges/:exchange](https://docs.tardis.dev/api#exchanges-exchange) API call to get allowed channel names and symbols for requested exchange |\n\n    ```python\n    Channel(name=\"trade\", symbols=[\"XBTUSD\",\"ETHUSD\"])\n    Channel(\"orderBookL2\", [\"XBTUSD\"])\n    ```\n\n## FAQ\n\n#### How to debug it if something went wrong?\n\n`tardis-client` uses Python logging on `DEBUG` level for that purpose. In doubt please create issue in this repository with steps how to reproduce the issue.\n\n#### Where can I find more details about tardis.dev API?\n\nCheck out [API docs](https://docs.tardis.dev/api).\n\n## License\n\nMPL-2.0\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tardis-dev/tardis-python", "keywords": "cryptocurrency data feed,market data,api client,orderbook,crypto markets data replay,historical data,historical cryptocurrency prices,cryptocurrency api", "license": "MPL-2.0", "maintainer": "", "maintainer_email": "", "name": "tardis-dev", "package_url": "https://pypi.org/project/tardis-dev/", "platform": "", "project_url": "https://pypi.org/project/tardis-dev/", "project_urls": {"Homepage": "https://github.com/tardis-dev/tardis-python"}, "release_url": "https://pypi.org/project/tardis-dev/2.0.0a6/", "requires_dist": ["python-dateutil (>=2.8.1,<3.0.0)", "aiohttp (>=3.6.2,<4.0.0)", "aiofiles (>=0.4.0,<0.5.0)", "sortedcontainers (>=2.1,<3.0)"], "requires_python": ">=3.6", "summary": "Python client for tardis.dev - historical tick-level cryptocurrency market data replay API.", "version": "2.0.0a6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>tardis-client</h1>\n<p><a href=\"https://pypi.org/project/tardis-client/\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ff687b75b10b39b11dced8caf58f63aa3add22dd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7461726469732d636c69656e742e737667\"></a>\n<a href=\"https://pypi.org/project/tardis-client/\" rel=\"nofollow\"><img alt=\"Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f9ceef0c918fdb7b7ad7ae1e8fc010f32789db6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7461726469732d636c69656e742e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>Python client for <a href=\"https://tardis.dev\" rel=\"nofollow\">tardis.dev</a> - historical tick-level cryptocurrency market data replay API.\nProvides fast, high level and developer friendly wrapper for more low level <a href=\"https://docs.tardis.dev/api#http-api\" rel=\"nofollow\">HTTP API</a> with local file based caching build in.</p>\n<h2>Installation</h2>\n<p>Requires Python 3.7.0+ installed.</p>\n<pre>pip install tardis-client\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tardis_client</span> <span class=\"kn\">import</span> <span class=\"n\">TardisClient</span><span class=\"p\">,</span> <span class=\"n\">Channel</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">replay</span><span class=\"p\">():</span>\n    <span class=\"n\">tardis_client</span> <span class=\"o\">=</span> <span class=\"n\">TardisClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># replay method returns Async Generator</span>\n    <span class=\"c1\"># https://rickyhan.com/jekyll/update/2018/01/27/python36.html</span>\n    <span class=\"n\">messages</span> <span class=\"o\">=</span> <span class=\"n\">tardis_client</span><span class=\"o\">.</span><span class=\"n\">replay</span><span class=\"p\">(</span>\n        <span class=\"n\">exchange</span><span class=\"o\">=</span><span class=\"s2\">\"bitmex\"</span><span class=\"p\">,</span>\n        <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-06-01\"</span><span class=\"p\">,</span>\n        <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-06-02\"</span><span class=\"p\">,</span>\n        <span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Channel</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"trade\"</span><span class=\"p\">,</span> <span class=\"n\">symbols</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"XBTUSD\"</span><span class=\"p\">,</span><span class=\"s2\">\"ETHUSD\"</span><span class=\"p\">]),</span> <span class=\"n\">Channel</span><span class=\"p\">(</span><span class=\"s2\">\"orderBookL2\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"XBTUSD\"</span><span class=\"p\">])],</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"c1\"># this will print all trades and orderBookL2 messages for XBTUSD</span>\n    <span class=\"c1\"># and all trades for ETHUSD for bitmex exchange</span>\n    <span class=\"c1\"># between 2019-06-01T00:00:00.000Z and 2019-06-02T00:00:00.000Z (whole first day of June 2019)</span>\n    <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">local_timestamp</span><span class=\"p\">,</span> <span class=\"n\">message</span> <span class=\"ow\">in</span> <span class=\"n\">messages</span><span class=\"p\">:</span>\n        <span class=\"c1\"># local timestamp is a Python datetime that marks timestamp when given message has been received</span>\n        <span class=\"c1\"># message is a message object as provided by exchange real-time stream</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">replay</span><span class=\"p\">())</span>\n</pre>\n<p><a href=\"https://repl.it/@TardisThad/tardis-python-client-example\" rel=\"nofollow\"><img alt=\"Try on repl.it\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb4c4c8c88e15f627ef5b9d72ae61e17e0bc0f43/68747470733a2f2f7265706c2d62616467652e6a616a6f6f73616d2e7265706c2e636f2f7472792e706e67\"></a></p>\n<h2>API</h2>\n<p><code>tardis-client</code> package provides <code>TardisClient</code> and <code>Channel</code> classes.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tardis_client</span> <span class=\"kn\">import</span> <span class=\"n\">TardisClient</span><span class=\"p\">,</span> <span class=\"n\">Channel</span>\n</pre>\n<h3>TardisClient</h3>\n<p>Optional client constructor parameters.</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>default value</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>api_key</code> (optional)</td>\n<td><code>string</code></td>\n<td><code>\"\"</code></td>\n<td>optional <code>string</code> containing API key for <a href=\"https://tardis.dev\" rel=\"nofollow\">tardis.dev</a> API. If not provided only first day of each month of data is accessible (free access)</td>\n</tr>\n<tr>\n<td><code>cache_dir</code> (optional)</td>\n<td><code>string</code></td>\n<td><code>&lt;os.tmpdir&gt;/.tardis-cache</code></td>\n<td>optional <code>string</code> with path to local dir that will be used as cache location. If not provided default <code>temp</code> dir for given OS will be used.</td>\n</tr></tbody></table>\n<p>Example:</p>\n<pre><span class=\"c1\"># creates new client instance with access only to sample data (first day of each month)</span>\n<span class=\"n\">tardis_client</span> <span class=\"o\">=</span> <span class=\"n\">TardisClient</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># creates new client with access to all data for given API key</span>\n<span class=\"n\">tardis_client</span> <span class=\"o\">=</span> <span class=\"n\">TardisClient</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s2\">\"YOUR_API_KEY\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># creates new client with custom cache dir</span>\n<span class=\"n\">tardis_client</span> <span class=\"o\">=</span> <span class=\"n\">TardisClient</span><span class=\"p\">(</span><span class=\"n\">cache_dir</span><span class=\"o\">=</span><span class=\"s2\">\"./cache\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>\n<h3><code>tardis_client.clear_cache()</code></h3>\n<p>Removes local file cache dir and it's contents.</p>\n<p>Example:</p>\n<pre><span class=\"n\">tardis_client</span> <span class=\"o\">=</span> <span class=\"n\">TardisClient</span><span class=\"p\">()</span>\n\n<span class=\"n\">tardis_client</span><span class=\"o\">.</span><span class=\"n\">clear_cache</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<h3><code>tardis_client.replay(exchange, from_date, to_date, filters=[])</code></h3>\n<p>Replays historical market data messages for given replay arguments.</p>\n<p>Returns <a href=\"https://rickyhan.com/jekyll/update/2018/01/27/python36.html\" rel=\"nofollow\">Async Generator</a> with named tuples (<code>namedtuple(\"Response\", [\"local_timestamp\", \"message\"])</code>).</p>\n<ul>\n<li>\n<p><code>local_timestamp</code> is a Python datetime object specyfying when message has been received from the exchange real-time data feed.</p>\n</li>\n<li>\n<p><code>message</code> is Python dict with parsed JSON that has exactly the same format as message provided by particular exchange's real-time data feed.</p>\n<h4><code>replay</code> method parameters:</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>default value</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>exchange</code></td>\n<td><code>string</code></td>\n<td>-</td>\n<td>requested exchange name - see <a href=\"https://github.com/tardis-dev/python-client/blob/master/tardis_client/consts.py#L1\" rel=\"nofollow\">allowed exchanges</a> list</td>\n</tr>\n<tr>\n<td><code>from_date</code></td>\n<td><code>string</code></td>\n<td>-</td>\n<td>requested UTC start date of data feed - <a href=\"https://docs.python.org/3/library/datetime.html#datetime.date.fromisoformat\" rel=\"nofollow\">valid ISO date string</a>, eg: <code>2019-04-05</code> or <code>2019-05-05T00:00:00</code></td>\n</tr>\n<tr>\n<td><code>to_date</code></td>\n<td><code>string</code></td>\n<td>-</td>\n<td>requested UTC end date of data feed - <a href=\"https://docs.python.org/3/library/datetime.html#datetime.date.fromisoformat\" rel=\"nofollow\">valid ISO date string</a>, eg: <code>2019-04-05</code> or <code>2019-05-05T00:00:00</code></td>\n</tr>\n<tr>\n<td><code>filters</code> (optional)</td>\n<td><a href=\"#channel-class\" rel=\"nofollow\"><code>List[Channel]</code></a></td>\n<td>[]</td>\n<td>optional filters of requested data feed. Use <a href=\"https://docs.tardis.dev/api#exchanges-exchange\" rel=\"nofollow\">/exchanges/:exchange</a> API call to get allowed channel names and symbols for requested exchange</td>\n</tr></tbody></table>\n<h5><code>Channel</code> class</h5>\n<p><code>Channel</code> class constructor parameters.</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td><code>string</code></td>\n<td>Use <a href=\"https://docs.tardis.dev/api#exchanges-exchange\" rel=\"nofollow\">/exchanges/:exchange</a> API call to get allowed channel names and symbols for requested exchange</td>\n</tr>\n<tr>\n<td><code>symbols</code></td>\n<td><code>List[string]</code></td>\n<td>Use <a href=\"https://docs.tardis.dev/api#exchanges-exchange\" rel=\"nofollow\">/exchanges/:exchange</a> API call to get allowed channel names and symbols for requested exchange</td>\n</tr></tbody></table>\n<pre><span class=\"n\">Channel</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"trade\"</span><span class=\"p\">,</span> <span class=\"n\">symbols</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"XBTUSD\"</span><span class=\"p\">,</span><span class=\"s2\">\"ETHUSD\"</span><span class=\"p\">])</span>\n<span class=\"n\">Channel</span><span class=\"p\">(</span><span class=\"s2\">\"orderBookL2\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"XBTUSD\"</span><span class=\"p\">])</span>\n</pre>\n</li>\n</ul>\n</li>\n</ul>\n<h2>FAQ</h2>\n<h4>How to debug it if something went wrong?</h4>\n<p><code>tardis-client</code> uses Python logging on <code>DEBUG</code> level for that purpose. In doubt please create issue in this repository with steps how to reproduce the issue.</p>\n<h4>Where can I find more details about tardis.dev API?</h4>\n<p>Check out <a href=\"https://docs.tardis.dev/api\" rel=\"nofollow\">API docs</a>.</p>\n<h2>License</h2>\n<p>MPL-2.0</p>\n\n          </div>"}, "last_serial": 7075147, "releases": {"2.0.0a1": [{"comment_text": "", "digests": {"md5": "39033bc4190c4316b8621ec0c265af84", "sha256": "f8602b3d05dabd3a6d95d45129e11cef4b9501f87723357f4f1d8c05acccd543"}, "downloads": -1, "filename": "tardis_dev-2.0.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "39033bc4190c4316b8621ec0c265af84", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10846, "upload_time": "2020-04-09T16:29:16", "upload_time_iso_8601": "2020-04-09T16:29:16.675328Z", "url": "https://files.pythonhosted.org/packages/51/17/25d28dd5b7285f2f25c199f3421d68a9ef4109bb0f8b48602afc71ea093f/tardis_dev-2.0.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "761cba01de39d6116ef7e7163f738547", "sha256": "68ae4c439b99248cb4319e22eaa33f7d77019de465cf3ca10c8a3dd9c1d49b58"}, "downloads": -1, "filename": "tardis-dev-2.0.0a1.tar.gz", "has_sig": false, "md5_digest": "761cba01de39d6116ef7e7163f738547", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11219, "upload_time": "2020-04-09T16:29:14", "upload_time_iso_8601": "2020-04-09T16:29:14.522166Z", "url": "https://files.pythonhosted.org/packages/22/9a/a126c0f68d371e93b43b9de2eef15f558ddc40a7f267a0c73fda2f4a6a3b/tardis-dev-2.0.0a1.tar.gz", "yanked": false}], "2.0.0a2": [{"comment_text": "", "digests": {"md5": "27dfc137d2abe8d636da8514721c4400", "sha256": "d2e2fd0f2097041f3677e0d4df55be88e4c70fdd0458bd620c67d49a74e47934"}, "downloads": -1, "filename": "tardis_dev-2.0.0a2-py3-none-any.whl", "has_sig": false, "md5_digest": "27dfc137d2abe8d636da8514721c4400", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11701, "upload_time": "2020-04-20T13:29:56", "upload_time_iso_8601": "2020-04-20T13:29:56.498018Z", "url": "https://files.pythonhosted.org/packages/8d/5f/0925865e06dcebeb52d373d38ced03ab28fd47e2810a01f10c6ae89dadb2/tardis_dev-2.0.0a2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f99fb084d5fa3812c9d6d8b5fb4f5eb", "sha256": "e839957b970be2fe67d2fef6603b697749ba3722354b4c2ea8a9c2a368aa82b1"}, "downloads": -1, "filename": "tardis-dev-2.0.0a2.tar.gz", "has_sig": false, "md5_digest": "8f99fb084d5fa3812c9d6d8b5fb4f5eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11699, "upload_time": "2020-04-20T13:29:55", "upload_time_iso_8601": "2020-04-20T13:29:55.022237Z", "url": "https://files.pythonhosted.org/packages/95/37/6d29e5b1c6af7a2fd5d64f87c8284bc203e12e936e54fcd99159fdbb1347/tardis-dev-2.0.0a2.tar.gz", "yanked": false}], "2.0.0a3": [{"comment_text": "", "digests": {"md5": "03712fca01c4154c886cb81a746a052a", "sha256": "ec84f37888267cd52d58085baa1ee4e2da5b919301db6242d3126f0ffc1bd8b7"}, "downloads": -1, "filename": "tardis_dev-2.0.0a3-py3-none-any.whl", "has_sig": false, "md5_digest": "03712fca01c4154c886cb81a746a052a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11702, "upload_time": "2020-04-21T07:39:36", "upload_time_iso_8601": "2020-04-21T07:39:36.736002Z", "url": "https://files.pythonhosted.org/packages/7a/b3/d8465edd0c54bb569c9d5dce10b827732281ba24ba1091f7d3d3835b5e71/tardis_dev-2.0.0a3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0f44b0a9921f8f111d0ff934f821693", "sha256": "eeea67a1a9924fe4101dbc74a2660060d1d9cbe0e13f538bba9e384707e5a436"}, "downloads": -1, "filename": "tardis-dev-2.0.0a3.tar.gz", "has_sig": false, "md5_digest": "b0f44b0a9921f8f111d0ff934f821693", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11717, "upload_time": "2020-04-21T07:39:35", "upload_time_iso_8601": "2020-04-21T07:39:35.292987Z", "url": "https://files.pythonhosted.org/packages/3a/27/a2fe01834920defd9c3ecb40b1925ff075b8eb2cbeeca616004197577a33/tardis-dev-2.0.0a3.tar.gz", "yanked": false}], "2.0.0a4": [{"comment_text": "", "digests": {"md5": "8fefa3a5058882ee1b9970a964f9c075", "sha256": "d55a8f57ade89f53a22b08fd89a16ceaf2836e72cdafe992654fcec9a59f1f73"}, "downloads": -1, "filename": "tardis_dev-2.0.0a4-py3-none-any.whl", "has_sig": false, "md5_digest": "8fefa3a5058882ee1b9970a964f9c075", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11699, "upload_time": "2020-04-21T14:37:07", "upload_time_iso_8601": "2020-04-21T14:37:07.518723Z", "url": "https://files.pythonhosted.org/packages/59/25/2dc94b902464fef2a828c6b66664972b5b6a3789f2a7e5f18d0a50276552/tardis_dev-2.0.0a4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68e64c0c1f23754b21e95176a9ec3b26", "sha256": "8b0794e029b540b22f49b747b51d1a3c40686c3c10c75e707ee087f845c52131"}, "downloads": -1, "filename": "tardis-dev-2.0.0a4.tar.gz", "has_sig": false, "md5_digest": "68e64c0c1f23754b21e95176a9ec3b26", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11721, "upload_time": "2020-04-21T14:37:06", "upload_time_iso_8601": "2020-04-21T14:37:06.358652Z", "url": "https://files.pythonhosted.org/packages/bf/1b/133b1d488fcc74f35f77a3c31727d5ef543631fe3046fae58ddca0ae44c4/tardis-dev-2.0.0a4.tar.gz", "yanked": false}], "2.0.0a5": [{"comment_text": "", "digests": {"md5": "f9cc81a10609d5d9e0bf9742eb4a4a8e", "sha256": "837df8f0bac1cb210d26ac78bd223652d5423c69d8e51d5e91e9a70d47977787"}, "downloads": -1, "filename": "tardis_dev-2.0.0a5-py3-none-any.whl", "has_sig": false, "md5_digest": "f9cc81a10609d5d9e0bf9742eb4a4a8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11671, "upload_time": "2020-04-21T19:35:30", "upload_time_iso_8601": "2020-04-21T19:35:30.372808Z", "url": "https://files.pythonhosted.org/packages/25/39/5be3fd72c50d7a13cbae19c6a05594cbcc351bcd433b8a228714633028f8/tardis_dev-2.0.0a5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "660b673ca6b2c057eeda754969d7e66a", "sha256": "5a5a0d289c63730b03c81b407e7c80dda5104619f453c44138060aa6fdd4bdfd"}, "downloads": -1, "filename": "tardis-dev-2.0.0a5.tar.gz", "has_sig": false, "md5_digest": "660b673ca6b2c057eeda754969d7e66a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11694, "upload_time": "2020-04-21T19:35:28", "upload_time_iso_8601": "2020-04-21T19:35:28.876984Z", "url": "https://files.pythonhosted.org/packages/c6/cd/9a2bab93e8e0888dd8466b2cd58218b481bea3cc6b7a906007598428b977/tardis-dev-2.0.0a5.tar.gz", "yanked": false}], "2.0.0a6": [{"comment_text": "", "digests": {"md5": "39edc30517852c687f275581f7405b9f", "sha256": "e62c197615d42a3bdfe2952099ef9066ff1078d90decb4da24189ed1b12433f5"}, "downloads": -1, "filename": "tardis_dev-2.0.0a6-py3-none-any.whl", "has_sig": false, "md5_digest": "39edc30517852c687f275581f7405b9f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11750, "upload_time": "2020-04-22T09:13:11", "upload_time_iso_8601": "2020-04-22T09:13:11.289079Z", "url": "https://files.pythonhosted.org/packages/b1/75/d88720cfd666f59f5d0a9f2559f8e87c193f3d5b50826a99cec98fcf85e3/tardis_dev-2.0.0a6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1882e7b85603de28602841d09b67af4", "sha256": "163ee6859c79ab195f7feb24c109128be80c741c15116f730bff4175695ff78e"}, "downloads": -1, "filename": "tardis-dev-2.0.0a6.tar.gz", "has_sig": false, "md5_digest": "b1882e7b85603de28602841d09b67af4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11757, "upload_time": "2020-04-22T09:13:10", "upload_time_iso_8601": "2020-04-22T09:13:10.051511Z", "url": "https://files.pythonhosted.org/packages/30/5c/3f7b40abfb8a4a4542d042594bd42e1179b6a29928eb48157a85699012aa/tardis-dev-2.0.0a6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "39edc30517852c687f275581f7405b9f", "sha256": "e62c197615d42a3bdfe2952099ef9066ff1078d90decb4da24189ed1b12433f5"}, "downloads": -1, "filename": "tardis_dev-2.0.0a6-py3-none-any.whl", "has_sig": false, "md5_digest": "39edc30517852c687f275581f7405b9f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11750, "upload_time": "2020-04-22T09:13:11", "upload_time_iso_8601": "2020-04-22T09:13:11.289079Z", "url": "https://files.pythonhosted.org/packages/b1/75/d88720cfd666f59f5d0a9f2559f8e87c193f3d5b50826a99cec98fcf85e3/tardis_dev-2.0.0a6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1882e7b85603de28602841d09b67af4", "sha256": "163ee6859c79ab195f7feb24c109128be80c741c15116f730bff4175695ff78e"}, "downloads": -1, "filename": "tardis-dev-2.0.0a6.tar.gz", "has_sig": false, "md5_digest": "b1882e7b85603de28602841d09b67af4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11757, "upload_time": "2020-04-22T09:13:10", "upload_time_iso_8601": "2020-04-22T09:13:10.051511Z", "url": "https://files.pythonhosted.org/packages/30/5c/3f7b40abfb8a4a4542d042594bd42e1179b6a29928eb48157a85699012aa/tardis-dev-2.0.0a6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:57 2020"}