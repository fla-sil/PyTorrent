{"info": {"author": "LEANG Sotheara", "author_email": "leangsotheara@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License"], "description": "xFlask combines the extensions of Flask and it is designed to make getting started quick and easy to build Restful web service, with the ability to scale up to complex applications. It begin as a simple wrapper around Flask and its extensions to provide a simple platform to ease API development.\n## 1. Functionalities\n\n* Follow concepts of Model, Data Access Object (DAO), Service and Controller\n* Ease to decouple component dependencies by using Flask-Injector\n* Provide a simple way to validate Value Object (VO) by using Marshmallow\n* Adapt with Flask-Migration to easily maintain the database schema\n* Provide simple logging API helping to debug the application flow\n* Adapt with Flask-Testing for testing the application components\n \n\n## 2. Usages\n\n* Model\n\n```python\nfrom xflask.sqlalchemy import Column, Integer, String\nfrom xflask.sqlalchemy.model import AuditModel\n\nclass User(AuditModel):\n\n    id          = Column(Integer, primary_key=True)\n    username    = Column(String(50), unique=True, nullable=False)\n    password    = Column(String(50), unique=False, nullable=False)\n```\n\n* DAO\n\n```python\nfrom xflask.dao import Dao\n\nfrom main.model.user import User\n\nclass UserDao(Dao):\n\n    def __init__(self):\n        super(UserDao, self).__init__(User)\n\n    def get_by_username(self, username):\n        return self.query().filter_by(username=username).first()\n```\n\n* Service\n\n```python\nfrom injector import inject\n\nfrom xflask.service import CrudService\n\nfrom main.dao.user import UserDao\n\nclass UserService(CrudService):\n\n    @inject\n    def __init__(self, dao: UserDao):\n        super(UserService, self).__init__(dao)\n\n    def get_user(self, user_id):\n        return self.user_dao.get_user(user_id)\n```\n\n* Controller\n\n```python\nfrom injector import inject\n\nfrom xflask.classy import route, JsonBody\nfrom xflask.controller import Controller\nfrom xflask.web.response import Response\n\nfrom main.controller.vo.user import UserVo\nfrom main.model.user import User\nfrom main.service.user import UserService\n\nclass UserController(Controller):\n\n    route_base = '/api/user/'\n\n    @inject\n    def __init__(self, user_service: UserService):\n        self.user_service = user_service\n    \n    @route('<user_id>')\n    def get(self, user_id):\n        user = self.user_service.get(user_id)\n        if user is None:\n            return Response.not_found()\n\n        return Response.success(user)\n        \n    @route('', methods=['PUT'])\n    def update(self, user: JsonBody(UserVo)):\n        self.user_service.update(User(**user))\n\n        return Response.success()\n```\n\n* Value Object (VO)\n\n```python\nfrom xflask.marshmallow import Int, Str\nfrom xflask.marshmallow import validate\n\nfrom xflask.web.vo import Vo\n\nclass UserVo(Vo):\n\n    id          : Int(required=True)\n    username    : Str(validate=validate.Length(min=2, max=50), required=True)\n    password    : Str(validate=validate.Length(min=2, max=50), required=True)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sotheara-leang/xFlask.git", "keywords": "xFlask,Restful,Web", "license": "", "maintainer": "", "maintainer_email": "", "name": "xFlask", "package_url": "https://pypi.org/project/xFlask/", "platform": "", "project_url": "https://pypi.org/project/xFlask/", "project_urls": {"Homepage": "https://github.com/sotheara-leang/xFlask.git"}, "release_url": "https://pypi.org/project/xFlask/0.1.3/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Python Web Framework", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>xFlask combines the extensions of Flask and it is designed to make getting started quick and easy to build Restful web service, with the ability to scale up to complex applications. It begin as a simple wrapper around Flask and its extensions to provide a simple platform to ease API development.</p>\n<h2>1. Functionalities</h2>\n<ul>\n<li>Follow concepts of Model, Data Access Object (DAO), Service and Controller</li>\n<li>Ease to decouple component dependencies by using Flask-Injector</li>\n<li>Provide a simple way to validate Value Object (VO) by using Marshmallow</li>\n<li>Adapt with Flask-Migration to easily maintain the database schema</li>\n<li>Provide simple logging API helping to debug the application flow</li>\n<li>Adapt with Flask-Testing for testing the application components</li>\n</ul>\n<h2>2. Usages</h2>\n<ul>\n<li>Model</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">xflask.sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">Column</span><span class=\"p\">,</span> <span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">String</span>\n<span class=\"kn\">from</span> <span class=\"nn\">xflask.sqlalchemy.model</span> <span class=\"kn\">import</span> <span class=\"n\">AuditModel</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">AuditModel</span><span class=\"p\">):</span>\n\n    <span class=\"nb\">id</span>          <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">username</span>    <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">),</span> <span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">password</span>    <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">),</span> <span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>DAO</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">xflask.dao</span> <span class=\"kn\">import</span> <span class=\"n\">Dao</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">main.model.user</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">UserDao</span><span class=\"p\">(</span><span class=\"n\">Dao</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">UserDao</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_by_username</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">filter_by</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">username</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>Service</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">injector</span> <span class=\"kn\">import</span> <span class=\"n\">inject</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">xflask.service</span> <span class=\"kn\">import</span> <span class=\"n\">CrudService</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">main.dao.user</span> <span class=\"kn\">import</span> <span class=\"n\">UserDao</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">UserService</span><span class=\"p\">(</span><span class=\"n\">CrudService</span><span class=\"p\">):</span>\n\n    <span class=\"nd\">@inject</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dao</span><span class=\"p\">:</span> <span class=\"n\">UserDao</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">UserService</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">dao</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_user</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">user_id</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user_dao</span><span class=\"o\">.</span><span class=\"n\">get_user</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Controller</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">injector</span> <span class=\"kn\">import</span> <span class=\"n\">inject</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">xflask.classy</span> <span class=\"kn\">import</span> <span class=\"n\">route</span><span class=\"p\">,</span> <span class=\"n\">JsonBody</span>\n<span class=\"kn\">from</span> <span class=\"nn\">xflask.controller</span> <span class=\"kn\">import</span> <span class=\"n\">Controller</span>\n<span class=\"kn\">from</span> <span class=\"nn\">xflask.web.response</span> <span class=\"kn\">import</span> <span class=\"n\">Response</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">main.controller.vo.user</span> <span class=\"kn\">import</span> <span class=\"n\">UserVo</span>\n<span class=\"kn\">from</span> <span class=\"nn\">main.model.user</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n<span class=\"kn\">from</span> <span class=\"nn\">main.service.user</span> <span class=\"kn\">import</span> <span class=\"n\">UserService</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">UserController</span><span class=\"p\">(</span><span class=\"n\">Controller</span><span class=\"p\">):</span>\n\n    <span class=\"n\">route_base</span> <span class=\"o\">=</span> <span class=\"s1\">'/api/user/'</span>\n\n    <span class=\"nd\">@inject</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">user_service</span><span class=\"p\">:</span> <span class=\"n\">UserService</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user_service</span> <span class=\"o\">=</span> <span class=\"n\">user_service</span>\n    \n    <span class=\"nd\">@route</span><span class=\"p\">(</span><span class=\"s1\">'&lt;user_id&gt;'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">user_id</span><span class=\"p\">):</span>\n        <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user_service</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">user</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">not_found</span><span class=\"p\">()</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">success</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n        \n    <span class=\"nd\">@route</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'PUT'</span><span class=\"p\">])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">:</span> <span class=\"n\">JsonBody</span><span class=\"p\">(</span><span class=\"n\">UserVo</span><span class=\"p\">)):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user_service</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">user</span><span class=\"p\">))</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">success</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>Value Object (VO)</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">xflask.marshmallow</span> <span class=\"kn\">import</span> <span class=\"n\">Int</span><span class=\"p\">,</span> <span class=\"n\">Str</span>\n<span class=\"kn\">from</span> <span class=\"nn\">xflask.marshmallow</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">xflask.web.vo</span> <span class=\"kn\">import</span> <span class=\"n\">Vo</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">UserVo</span><span class=\"p\">(</span><span class=\"n\">Vo</span><span class=\"p\">):</span>\n\n    <span class=\"nb\">id</span>          <span class=\"p\">:</span> <span class=\"n\">Int</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">username</span>    <span class=\"p\">:</span> <span class=\"n\">Str</span><span class=\"p\">(</span><span class=\"n\">validate</span><span class=\"o\">=</span><span class=\"n\">validate</span><span class=\"o\">.</span><span class=\"n\">Length</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"nb\">max</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">),</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">password</span>    <span class=\"p\">:</span> <span class=\"n\">Str</span><span class=\"p\">(</span><span class=\"n\">validate</span><span class=\"o\">=</span><span class=\"n\">validate</span><span class=\"o\">.</span><span class=\"n\">Length</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"nb\">max</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">),</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7184659, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "f99b0c36f1cc6e65a8795aa7090622af", "sha256": "25d2d7d977c8d2d429532a147f2aa6f327fd211d9d0c22f3667efd2664cc7e47"}, "downloads": -1, "filename": "xFlask-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f99b0c36f1cc6e65a8795aa7090622af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8411, "upload_time": "2020-02-12T12:32:13", "upload_time_iso_8601": "2020-02-12T12:32:13.400640Z", "url": "https://files.pythonhosted.org/packages/a2/63/6350f773283f1ff5c3fa33763ed28c7294d364d8c898a7e1de77d0ad7aec/xFlask-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "2b041cc1e16d69f968ca299edead9675", "sha256": "906ae9e9ecf043323a5e14198c6a136676ebb08bc4e0e9a66d93ab9274ca5490"}, "downloads": -1, "filename": "xFlask-0.0.4.tar.gz", "has_sig": false, "md5_digest": "2b041cc1e16d69f968ca299edead9675", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9968, "upload_time": "2020-02-14T16:24:59", "upload_time_iso_8601": "2020-02-14T16:24:59.441529Z", "url": "https://files.pythonhosted.org/packages/d5/c5/9e0979c721138cd1e1a3745a66ff642173cbbb49f95ee6a75e4ba8766224/xFlask-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "104c08a1f16e108d9807ea1e920c2a60", "sha256": "8759708a8a83aa0b657c4a4c37843878cc6cc78f8201c79216c91cf0d94c154f"}, "downloads": -1, "filename": "xFlask-0.0.5.tar.gz", "has_sig": false, "md5_digest": "104c08a1f16e108d9807ea1e920c2a60", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11188, "upload_time": "2020-02-19T03:49:41", "upload_time_iso_8601": "2020-02-19T03:49:41.786474Z", "url": "https://files.pythonhosted.org/packages/5b/25/0293c370260a5c9d340fa286b94627c5e05f8ce86067e03bd18603774615/xFlask-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "cb3d9ee26ec3515cf659bc6611e3bb03", "sha256": "2ec0f04d4c5df5c9cbd08a079523a915de38458e1ac70d0e9e776600742f3f6f"}, "downloads": -1, "filename": "xFlask-0.0.6.tar.gz", "has_sig": false, "md5_digest": "cb3d9ee26ec3515cf659bc6611e3bb03", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 15309, "upload_time": "2020-02-20T09:06:47", "upload_time_iso_8601": "2020-02-20T09:06:47.877928Z", "url": "https://files.pythonhosted.org/packages/4c/f1/f781592a4f34a724334fe1661fc1be2a21cb082bf28bc98fc318c053fadb/xFlask-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "bec8ed7b9c44fe493b546cc194e0a277", "sha256": "7c45a24d6382e599e85b5939121ad426574a9e720fb1c59931a45507b4a6e179"}, "downloads": -1, "filename": "xFlask-0.0.7.tar.gz", "has_sig": false, "md5_digest": "bec8ed7b9c44fe493b546cc194e0a277", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 15468, "upload_time": "2020-02-21T08:12:47", "upload_time_iso_8601": "2020-02-21T08:12:47.182794Z", "url": "https://files.pythonhosted.org/packages/d9/0c/f941af54999759d5bfa07e6eeca64dc3cd9dd63d2e7218e8a3dcd9d77168/xFlask-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "915918ada15b7910e9aa16cb43ec29d4", "sha256": "c1106695778a5ebe491c09b1196ec8583863207ce386e0cc74413280cb9e6f2e"}, "downloads": -1, "filename": "xFlask-0.0.8.tar.gz", "has_sig": false, "md5_digest": "915918ada15b7910e9aa16cb43ec29d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 15852, "upload_time": "2020-02-27T08:35:40", "upload_time_iso_8601": "2020-02-27T08:35:40.336269Z", "url": "https://files.pythonhosted.org/packages/33/7a/9f8447f33dde5b13322b02b2feba4dbe82bf45cf1ad5deb0d8f8c463eed0/xFlask-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "9f99ee912e34453768a13f7e1f23d26b", "sha256": "8e7d2d6b1ef5314c514699fdb4133d07179291dae88743a3a230a3a1d8771484"}, "downloads": -1, "filename": "xFlask-0.0.9.tar.gz", "has_sig": false, "md5_digest": "9f99ee912e34453768a13f7e1f23d26b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 16435, "upload_time": "2020-03-02T02:05:17", "upload_time_iso_8601": "2020-03-02T02:05:17.375357Z", "url": "https://files.pythonhosted.org/packages/84/48/57f3c1465469f4490700715a282e2878e61a010388f8ad7bd1bb4c39c7a1/xFlask-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "9e3d99e8d8950e0aa886bd16e2b652e8", "sha256": "71d002b49c711702f0d3c95fc1a1699ff5f8e2ea49b0e7bed0bbce1ebff5dc7d"}, "downloads": -1, "filename": "xFlask-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9e3d99e8d8950e0aa886bd16e2b652e8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 16196, "upload_time": "2020-03-25T03:02:13", "upload_time_iso_8601": "2020-03-25T03:02:13.436099Z", "url": "https://files.pythonhosted.org/packages/77/42/ad53b48ae7e197856e567ede6120404447d30f633c9127de66c5f07253d7/xFlask-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d10a6ce7ff5edc55ef39902a35ce5ee9", "sha256": "a3756d0fd402e6ee2707ba56cab7dec826c3eb53a3c133478c3aac89df7b2780"}, "downloads": -1, "filename": "xFlask-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d10a6ce7ff5edc55ef39902a35ce5ee9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 17013, "upload_time": "2020-04-22T13:51:00", "upload_time_iso_8601": "2020-04-22T13:51:00.471951Z", "url": "https://files.pythonhosted.org/packages/21/2f/ca09112448e6306645936c24f5c3d1c57026a19929f769ac4749950fe3e3/xFlask-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "4f8c5c7dff5a8d280a5cc45713928ece", "sha256": "f1c88c39c899b6178633c3374bce82a52a669afc716ce620fb4b7ffb7b4d7bad"}, "downloads": -1, "filename": "xFlask-0.1.2.tar.gz", "has_sig": false, "md5_digest": "4f8c5c7dff5a8d280a5cc45713928ece", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18146, "upload_time": "2020-04-22T14:38:55", "upload_time_iso_8601": "2020-04-22T14:38:55.908505Z", "url": "https://files.pythonhosted.org/packages/42/1e/a4e4dd9a5905b1b79cf6e5c30930c160c57cf879f30dabfa11602eed52a1/xFlask-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "8bb67ef36fe66f22819bf37021b327a6", "sha256": "cc755bbdbd4241311e78f8c2d89acb3f4b9cd36b7aca08ed5164d23335894d93"}, "downloads": -1, "filename": "xFlask-0.1.3.tar.gz", "has_sig": false, "md5_digest": "8bb67ef36fe66f22819bf37021b327a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18215, "upload_time": "2020-05-07T01:32:38", "upload_time_iso_8601": "2020-05-07T01:32:38.619406Z", "url": "https://files.pythonhosted.org/packages/69/91/322dd825abb1a1f8e1778973e2d86a9f147a8265d3c0903d8fe6107970b6/xFlask-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8bb67ef36fe66f22819bf37021b327a6", "sha256": "cc755bbdbd4241311e78f8c2d89acb3f4b9cd36b7aca08ed5164d23335894d93"}, "downloads": -1, "filename": "xFlask-0.1.3.tar.gz", "has_sig": false, "md5_digest": "8bb67ef36fe66f22819bf37021b327a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18215, "upload_time": "2020-05-07T01:32:38", "upload_time_iso_8601": "2020-05-07T01:32:38.619406Z", "url": "https://files.pythonhosted.org/packages/69/91/322dd825abb1a1f8e1778973e2d86a9f147a8265d3c0903d8fe6107970b6/xFlask-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:25:37 2020"}