{"info": {"author": "Lorenz Gorse", "author_email": "lorenz.gorse+id3parse@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Multimedia :: Sound/Audio"], "description": "===========\r\nid3parse.py\r\n===========\r\n\r\nAn ID3 parser and serializer for Python 3.\r\n\r\nExample Usage\r\n=============\r\n\r\nCreating an ID3 tag from scratch\r\n--------------------------------\r\n\r\nInput::\r\n\r\n  from id3parse import ID3, ID3TextFrame\r\n\r\n  id3 = ID3.from_scratch()\r\n\r\n  id3.add_frame(ID3TextFrame.from_scratch('TIT2', 'Why Don\\'t You Get A Job?'))\r\n  id3.add_frame(ID3TextFrame.from_scratch('TPE1', 'The Offspring'))\r\n\r\n  print(id3.serialize())\r\n\r\nOutput::\r\n\r\n  b'ID3\\x04\\x00\\x00\\x00\\x00\\x00=TIT2\\x00\\x00\\x00\\x1a\\x00\\x00\\x03Why Don\\'t You Get A Job?\\x00TPE1\\x00\\x00\\x00\\x0f\\x00\\x00\\x03The Offspring\\x00'\r\n\r\nParsing an ID3 tag\r\n------------------\r\n\r\nInput::\r\n\r\n  from id3parse import ID3\r\n\r\n  id3 = ID3.from_byte_array(b'ID3\\x04\\x00\\x00\\x00\\x00\\x00=TIT2\\x00\\x00\\x00\\x1a\\x00\\x00\\x03Why Don\\'t You Get A Job?\\x00TPE1\\x00\\x00\\x00\\x0f\\x00\\x00\\x03The Offspring\\x00')\r\n\r\n  for f in id3.frames:\r\n      print(f)\r\n\r\nOutput::\r\n\r\n  TIT2: Why Don't You Get A Job?\r\n  TPE1: The Offspring\r\n\r\nLoading and saving an ID3 tag\r\n-----------------------------\r\n\r\n::\r\n\r\n  from id3parse import ID3, ID3TextFrame\r\n\r\n  id3 = ID3.from_file('01 - The Offspring - Why Dont You Get A Job.mp3')\r\n\r\n  id3.add_frame(ID3TextFrame.from_scratch('TPE1', 'The Offspring'))\r\n  id3.add_frame(ID3TextFrame.from_scratch('TIT2', 'Why Don\\'t You Get A Job?'))\r\n\r\n  id3.to_file()\r\n\r\nQuerying frames\r\n---------------\r\n\r\n::\r\n\r\n  from id3parse import ID3, ID3TextFrame\r\n\r\n  id3 = ID3.from_file('01 - The Offspring - Why Dont You Get A Job.mp3')\r\n\r\n  tpe1 = id3.find_frame_by_name('TPE1')    # Returns a frame, fails if more than one\r\n  tpe1.text = 'The Offspring'              # frame with this name is available\r\n\r\n  privs = id3.find_frames_by_name('PRIV')  # Returns a list of frames\r\n  for priv in privs:\r\n      print(priv)\r\n\r\n  id3.to_file()", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/frececroka/id3parse.py", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "id3parse", "package_url": "https://pypi.org/project/id3parse/", "platform": "", "project_url": "https://pypi.org/project/id3parse/", "project_urls": {"Homepage": "https://github.com/frececroka/id3parse.py"}, "release_url": "https://pypi.org/project/id3parse/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "A parser and serializer for ID3v2 tags", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An ID3 parser and serializer for Python 3.</p>\n<div id=\"example-usage\">\n<h2>Example Usage</h2>\n<div id=\"creating-an-id3-tag-from-scratch\">\n<h3>Creating an ID3 tag from scratch</h3>\n<p>Input:</p>\n<pre>from id3parse import ID3, ID3TextFrame\n\nid3 = ID3.from_scratch()\n\nid3.add_frame(ID3TextFrame.from_scratch('TIT2', 'Why Don\\'t You Get A Job?'))\nid3.add_frame(ID3TextFrame.from_scratch('TPE1', 'The Offspring'))\n\nprint(id3.serialize())\n</pre>\n<p>Output:</p>\n<pre>b'ID3\\x04\\x00\\x00\\x00\\x00\\x00=TIT2\\x00\\x00\\x00\\x1a\\x00\\x00\\x03Why Don\\'t You Get A Job?\\x00TPE1\\x00\\x00\\x00\\x0f\\x00\\x00\\x03The Offspring\\x00'\n</pre>\n</div>\n<div id=\"parsing-an-id3-tag\">\n<h3>Parsing an ID3 tag</h3>\n<p>Input:</p>\n<pre>from id3parse import ID3\n\nid3 = ID3.from_byte_array(b'ID3\\x04\\x00\\x00\\x00\\x00\\x00=TIT2\\x00\\x00\\x00\\x1a\\x00\\x00\\x03Why Don\\'t You Get A Job?\\x00TPE1\\x00\\x00\\x00\\x0f\\x00\\x00\\x03The Offspring\\x00')\n\nfor f in id3.frames:\n    print(f)\n</pre>\n<p>Output:</p>\n<pre>TIT2: Why Don't You Get A Job?\nTPE1: The Offspring\n</pre>\n</div>\n<div id=\"loading-and-saving-an-id3-tag\">\n<h3>Loading and saving an ID3 tag</h3>\n<pre>from id3parse import ID3, ID3TextFrame\n\nid3 = ID3.from_file('01 - The Offspring - Why Dont You Get A Job.mp3')\n\nid3.add_frame(ID3TextFrame.from_scratch('TPE1', 'The Offspring'))\nid3.add_frame(ID3TextFrame.from_scratch('TIT2', 'Why Don\\'t You Get A Job?'))\n\nid3.to_file()\n</pre>\n</div>\n<div id=\"querying-frames\">\n<h3>Querying frames</h3>\n<pre>from id3parse import ID3, ID3TextFrame\n\nid3 = ID3.from_file('01 - The Offspring - Why Dont You Get A Job.mp3')\n\ntpe1 = id3.find_frame_by_name('TPE1')    # Returns a frame, fails if more than one\ntpe1.text = 'The Offspring'              # frame with this name is available\n\nprivs = id3.find_frames_by_name('PRIV')  # Returns a list of frames\nfor priv in privs:\n    print(priv)\n\nid3.to_file()\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1133972, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7cb9db84f987d4aa30ad843f89a7a90e", "sha256": "ad59f518be16483cad5c02409193db477ba24f338b6061b7874d6bd1c6672201"}, "downloads": -1, "filename": "id3parse-0.1.0.tar.gz", "has_sig": true, "md5_digest": "7cb9db84f987d4aa30ad843f89a7a90e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4888, "upload_time": "2014-06-22T14:44:54", "upload_time_iso_8601": "2014-06-22T14:44:54.273651Z", "url": "https://files.pythonhosted.org/packages/af/ce/6f96ebe0a2a1a807c5e88306e8c02410d0bd0f5796582de3493bf453b949/id3parse-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "20611aca4ff0ceb7b94a3d0287267a10", "sha256": "af62e8d983d728404a63f68cd03cefbbe9523b60b9c200aaf245df17a7f67408"}, "downloads": -1, "filename": "id3parse-0.1.1.tar.gz", "has_sig": true, "md5_digest": "20611aca4ff0ceb7b94a3d0287267a10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4887, "upload_time": "2014-06-22T15:14:29", "upload_time_iso_8601": "2014-06-22T15:14:29.565777Z", "url": "https://files.pythonhosted.org/packages/d9/fa/ab128ac6534bd6ab2ecceaa9b71844d2d45245df2f746e82b19020c8fd26/id3parse-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "20611aca4ff0ceb7b94a3d0287267a10", "sha256": "af62e8d983d728404a63f68cd03cefbbe9523b60b9c200aaf245df17a7f67408"}, "downloads": -1, "filename": "id3parse-0.1.1.tar.gz", "has_sig": true, "md5_digest": "20611aca4ff0ceb7b94a3d0287267a10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4887, "upload_time": "2014-06-22T15:14:29", "upload_time_iso_8601": "2014-06-22T15:14:29.565777Z", "url": "https://files.pythonhosted.org/packages/d9/fa/ab128ac6534bd6ab2ecceaa9b71844d2d45245df2f746e82b19020c8fd26/id3parse-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:58 2020"}