{"info": {"author": "Malte Franken", "author_email": "coding@subspace.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# python-georss-wa-dfes-client\n\n[![Build Status](https://travis-ci.org/exxamalte/python-georss-wa-dfes-client.svg)](https://travis-ci.org/exxamalte/python-georss-wa-dfes-client)\n[![Coverage Status](https://coveralls.io/repos/github/exxamalte/python-georss-wa-dfes-client/badge.svg?branch=master)](https://coveralls.io/github/exxamalte/python-georss-wa-dfes-client?branch=master)\n[![PyPi](https://img.shields.io/pypi/v/georss-wa-dfes-client.svg)](https://pypi.python.org/pypi/georss-wa-dfes-client)\n[![Version](https://img.shields.io/pypi/pyversions/georss-wa-dfes-client.svg)](https://pypi.python.org/pypi/georss-wa-dfes-client)\n\nThis library provides convenient access to the [Western Australia Department of Fire and Emergency Services Feed](https://www.emergency.wa.gov.au/).\n\n## Installation\n`pip install georss-wa-dfes-client`\n\n## Usage\nSee below for an example of how this library can be used. After instantiating \nthe feed class and supplying the required parameters, you can call `update` to \nretrieve the feed data. The return value will be a tuple of a status code and \nthe actual data in the form of a list of specific feed entries.\n\n**Status Codes**\n* _UPDATE_OK_: Update went fine and data was retrieved. The library may still return empty data, for example because no entries fulfilled the filter criteria.\n* _UPDATE_OK_NO_DATA_: Update went fine but no data was retrieved, for example because the server indicated that there was not update since the last request.\n* _UPDATE_ERROR_: Something went wrong during the update\n\n**Supported Feeds**\n\n| Category  | Feed            |\n|-----------|-----------------|\n| Warnings  | `warnings`      |\n| Incidents | `all_incidents` |\n\n**Supported Filters**\n\n| Filter     |                     | Description |\n|------------|---------------------|-------------|\n| Radius     | `filter_radius`     | Radius in kilometers around the home coordinates in which events from feed are included. |\n| Categories | `filter_categories` | Array of category names. Only events with a category matching any of these is included. |\n\n**Example**\n```python\nfrom georss_wa_dfes_client import WaDfesFeed\n# Home Coordinates: Latitude: -31.0, Longitude: 121.0\n# Feed: Warnings\n# Filter radius: 50 km\nfeed = WaDfesFeed((-31.0, 121.0), 'warnings', filter_radius=50)\nstatus, entries = feed.update()\n```\n\n## Feed Manager\n\nThe Feed Manager helps managing feed updates over time, by notifying the \nconsumer of the feed about new feed entries, updates and removed entries \ncompared to the last feed update.\n\n* If the current feed update is the first one, then all feed entries will be \n  reported as new. The feed manager will keep track of all feed entries' \n  external IDs that it has successfully processed.\n* If the current feed update is not the first one, then the feed manager will \n  produce three sets:\n  * Feed entries that were not in the previous feed update but are in the \n    current feed update will be reported as new.\n  * Feed entries that were in the previous feed update and are still in the \n    current feed update will be reported as to be updated.\n  * Feed entries that were in the previous feed update but are not in the \n    current feed update will be reported to be removed.\n* If the current update fails, then all feed entries processed in the previous\n  feed update will be reported to be removed.\n\nAfter a successful update from the feed, the feed manager will provide two\ndifferent dates:\n\n* `last_update` will be the timestamp of the last successful update from the\n  feed. This date may be useful if the consumer of this library wants to\n  treat intermittent errors from feed updates differently.\n* `last_timestamp` will be the latest timestamp extracted from the feed data. \n  This requires that the underlying feed data actually contains a suitable \n  date. This date may be useful if the consumer of this library wants to \n  process feed entries differently if they haven't actually been updated.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/exxamalte/python-georss-wa-dfes-client", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "georss-wa-dfes-client", "package_url": "https://pypi.org/project/georss-wa-dfes-client/", "platform": "", "project_url": "https://pypi.org/project/georss-wa-dfes-client/", "project_urls": {"Homepage": "https://github.com/exxamalte/python-georss-wa-dfes-client"}, "release_url": "https://pypi.org/project/georss-wa-dfes-client/0.1/", "requires_dist": ["georss-client (>=0.8)"], "requires_python": "", "summary": "A GeoRSS client library for the WA Department of Fire and Emergency Services (DFES) feed.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>python-georss-wa-dfes-client</h1>\n<p><a href=\"https://travis-ci.org/exxamalte/python-georss-wa-dfes-client\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fba243ffd4157a3ca0f291d67e0d8ac8d44642c0/68747470733a2f2f7472617669732d63692e6f72672f657878616d616c74652f707974686f6e2d67656f7273732d77612d646665732d636c69656e742e737667\"></a>\n<a href=\"https://coveralls.io/github/exxamalte/python-georss-wa-dfes-client?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c26f514a6cfe79c90db4e4eb4744faa7e2cfc1e2/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f657878616d616c74652f707974686f6e2d67656f7273732d77612d646665732d636c69656e742f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/georss-wa-dfes-client\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9196f5819ce25e9b44ad37db773123128aff5207/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f67656f7273732d77612d646665732d636c69656e742e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/georss-wa-dfes-client\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d36d8e6ec5f8b1c189f0d58902f8f0ab7719e591/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f67656f7273732d77612d646665732d636c69656e742e737667\"></a></p>\n<p>This library provides convenient access to the <a href=\"https://www.emergency.wa.gov.au/\" rel=\"nofollow\">Western Australia Department of Fire and Emergency Services Feed</a>.</p>\n<h2>Installation</h2>\n<p><code>pip install georss-wa-dfes-client</code></p>\n<h2>Usage</h2>\n<p>See below for an example of how this library can be used. After instantiating\nthe feed class and supplying the required parameters, you can call <code>update</code> to\nretrieve the feed data. The return value will be a tuple of a status code and\nthe actual data in the form of a list of specific feed entries.</p>\n<p><strong>Status Codes</strong></p>\n<ul>\n<li><em>UPDATE_OK</em>: Update went fine and data was retrieved. The library may still return empty data, for example because no entries fulfilled the filter criteria.</li>\n<li><em>UPDATE_OK_NO_DATA</em>: Update went fine but no data was retrieved, for example because the server indicated that there was not update since the last request.</li>\n<li><em>UPDATE_ERROR</em>: Something went wrong during the update</li>\n</ul>\n<p><strong>Supported Feeds</strong></p>\n<table>\n<thead>\n<tr>\n<th>Category</th>\n<th>Feed</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Warnings</td>\n<td><code>warnings</code></td>\n</tr>\n<tr>\n<td>Incidents</td>\n<td><code>all_incidents</code></td>\n</tr></tbody></table>\n<p><strong>Supported Filters</strong></p>\n<table>\n<thead>\n<tr>\n<th>Filter</th>\n<th></th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Radius</td>\n<td><code>filter_radius</code></td>\n<td>Radius in kilometers around the home coordinates in which events from feed are included.</td>\n</tr>\n<tr>\n<td>Categories</td>\n<td><code>filter_categories</code></td>\n<td>Array of category names. Only events with a category matching any of these is included.</td>\n</tr></tbody></table>\n<p><strong>Example</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">georss_wa_dfes_client</span> <span class=\"kn\">import</span> <span class=\"n\">WaDfesFeed</span>\n<span class=\"c1\"># Home Coordinates: Latitude: -31.0, Longitude: 121.0</span>\n<span class=\"c1\"># Feed: Warnings</span>\n<span class=\"c1\"># Filter radius: 50 km</span>\n<span class=\"n\">feed</span> <span class=\"o\">=</span> <span class=\"n\">WaDfesFeed</span><span class=\"p\">((</span><span class=\"o\">-</span><span class=\"mf\">31.0</span><span class=\"p\">,</span> <span class=\"mf\">121.0</span><span class=\"p\">),</span> <span class=\"s1\">'warnings'</span><span class=\"p\">,</span> <span class=\"n\">filter_radius</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">entries</span> <span class=\"o\">=</span> <span class=\"n\">feed</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n</pre>\n<h2>Feed Manager</h2>\n<p>The Feed Manager helps managing feed updates over time, by notifying the\nconsumer of the feed about new feed entries, updates and removed entries\ncompared to the last feed update.</p>\n<ul>\n<li>If the current feed update is the first one, then all feed entries will be\nreported as new. The feed manager will keep track of all feed entries'\nexternal IDs that it has successfully processed.</li>\n<li>If the current feed update is not the first one, then the feed manager will\nproduce three sets:\n<ul>\n<li>Feed entries that were not in the previous feed update but are in the\ncurrent feed update will be reported as new.</li>\n<li>Feed entries that were in the previous feed update and are still in the\ncurrent feed update will be reported as to be updated.</li>\n<li>Feed entries that were in the previous feed update but are not in the\ncurrent feed update will be reported to be removed.</li>\n</ul>\n</li>\n<li>If the current update fails, then all feed entries processed in the previous\nfeed update will be reported to be removed.</li>\n</ul>\n<p>After a successful update from the feed, the feed manager will provide two\ndifferent dates:</p>\n<ul>\n<li><code>last_update</code> will be the timestamp of the last successful update from the\nfeed. This date may be useful if the consumer of this library wants to\ntreat intermittent errors from feed updates differently.</li>\n<li><code>last_timestamp</code> will be the latest timestamp extracted from the feed data.\nThis requires that the underlying feed data actually contains a suitable\ndate. This date may be useful if the consumer of this library wants to\nprocess feed entries differently if they haven't actually been updated.</li>\n</ul>\n\n          </div>"}, "last_serial": 4986432, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "db9ce692a7db66d1ca6e9b567ac09d81", "sha256": "425c26e7724f326e257c4f06acd46da303a84ff6da6101b1b0f4dd131a086016"}, "downloads": -1, "filename": "georss_wa_dfes_client-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "db9ce692a7db66d1ca6e9b567ac09d81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10206, "upload_time": "2019-03-26T07:48:26", "upload_time_iso_8601": "2019-03-26T07:48:26.506052Z", "url": "https://files.pythonhosted.org/packages/63/e4/474cf8f6a05613722202c1ec37c627a6b00dd556dd06262b912ec2503fb2/georss_wa_dfes_client-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f67f6df52388ffbdd5c66b3445360685", "sha256": "958f0b2bba7130d6c627e542f2dc21164f767883f61442fd669ad88fd78fd785"}, "downloads": -1, "filename": "georss_wa_dfes_client-0.1.tar.gz", "has_sig": false, "md5_digest": "f67f6df52388ffbdd5c66b3445360685", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5292, "upload_time": "2019-03-26T07:48:28", "upload_time_iso_8601": "2019-03-26T07:48:28.749760Z", "url": "https://files.pythonhosted.org/packages/df/e5/dc9243ed738d0b06505635dfa2de4b2df5f0d802cb63df3bfa3d624fcecc/georss_wa_dfes_client-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "db9ce692a7db66d1ca6e9b567ac09d81", "sha256": "425c26e7724f326e257c4f06acd46da303a84ff6da6101b1b0f4dd131a086016"}, "downloads": -1, "filename": "georss_wa_dfes_client-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "db9ce692a7db66d1ca6e9b567ac09d81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10206, "upload_time": "2019-03-26T07:48:26", "upload_time_iso_8601": "2019-03-26T07:48:26.506052Z", "url": "https://files.pythonhosted.org/packages/63/e4/474cf8f6a05613722202c1ec37c627a6b00dd556dd06262b912ec2503fb2/georss_wa_dfes_client-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f67f6df52388ffbdd5c66b3445360685", "sha256": "958f0b2bba7130d6c627e542f2dc21164f767883f61442fd669ad88fd78fd785"}, "downloads": -1, "filename": "georss_wa_dfes_client-0.1.tar.gz", "has_sig": false, "md5_digest": "f67f6df52388ffbdd5c66b3445360685", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5292, "upload_time": "2019-03-26T07:48:28", "upload_time_iso_8601": "2019-03-26T07:48:28.749760Z", "url": "https://files.pythonhosted.org/packages/df/e5/dc9243ed738d0b06505635dfa2de4b2df5f0d802cb63df3bfa3d624fcecc/georss_wa_dfes_client-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:56 2020"}