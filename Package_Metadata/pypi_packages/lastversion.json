{"info": {"author": "Danila Vershinin", "author_email": "info@getpagespeed.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: System Administrators", "Operating System :: OS Independent", "Topic :: Software Development"], "description": "# lastversion\n\n[![Build Status](https://travis-ci.org/dvershinin/lastversion.svg?branch=master)](https://travis-ci.org/dvershinin/lastversion)\n[![PyPI version](https://badge.fury.io/py/lastversion.svg)](https://badge.fury.io/py/lastversion)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/380e3a38dc524112b4dcfc0492d5b816)](https://www.codacy.com/manual/GetPageSpeed/lastversion?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=dvershinin/lastversion&amp;utm_campaign=Badge_Grade)\n\nA tiny command-line utility that helps to answer a simple question:\n\n> What is the latest *stable* version for a GitHub/GitLab/BitBucket/etc. project?\n\n... and, optionally, download/install it.\n\nGitHub has an API endpoint \n[here](https://developer.github.com/v3/repos/releases/#get-the-latest-release). \nBut if you're here, then you know how it sucks:\n\nA release would show up in this API response *only* if it was filed formally using the GitHub \nrelease interface.\nSometimes project authors use formal releases, and next thing you know, for the next release \nthey won't.\nThere is no consistency in human beings.\n\nOK, you think you could use another API endpoint to \n[list tags](https://developer.github.com/v3/repos/#list-tags).\nTags *usually* represent a release, however, the API does not sort them chronologically. \nMoreover, you might get something like \"latest-stable\" for a tag name's value.\n\nIn general, quite many project authors complicate things further by:\n\n*   Creating a formal release that is clearly a Release Candidate (`rc` in tag), but forgetting to\n mark it as a pre-release\n*   Putting extraneous text in release tag e.g. `release-1.2.3` or `name-1.2.3-2019` anything fancy \nlike that\n*   Putting or not putting the `v` prefix inside release tags. Today yes, tomorrow not. I'm not\n consistent about it myself :)\n*   Switching from one version format to another, e.g. `v20150121` to `v2.0.1`\n\nTo deal with all this mess and simply get well-formatted, last *stable* version (or download URL!) \non the command line, you can use `lastversion`.\n\nIts primary use is for build systems - whenever you want to watch specific repositories for released\nversions to build packages automatically.\nOr otherwise require getting the latest version in your automation scripts.\n\n[Like I do](https://www.getpagespeed.com/redhat)\n\n`lastversion` does a little bit of AI to detect if releasers mistakenly filed a beta version as a \nstable release.\nIt uses both of the API endpoints and incorporates logic for cleaning up human inconsistency from \nversion information.\n\n## Synopsis\n\n```bash\nlastversion apache/incubator-pagespeed-ngx \n#> 1.13.35.2\nlastversion apache/incubator-pagespeed-ngx -d \n#> downloaded incubator-pagespeed-ngx-v1.13.35.2-stable.tar.gz\nlastversion apache/incubator-pagespeed-ngx -d pagespeed.tar.gz \n#> downloads with chosen filename\n```\n\n## Installation for CentOS/RHEL 7, 8 or Amazon Linux 2\n\n```bash\nsudo yum -y install https://extras.getpagespeed.com/release-latest.rpm\nsudo yum install lastversion\n```\n\n## Installation for other systems\n\nInstalling with `pip` is easiest:\n\n```bash\npip install lastversion\n```\n\n## Usage\n\nTypically, you would just pass a repository URL (or repo owner/name to it) as the only argument, \ne.g.:\n\n```bash\nlastversion https://github.com/gperftools/gperftools\n```\n\nEquivalently accepted invocation with same output is:\n\n```bash\nlastversion gperftools/gperftools\n```    \n\nIf you're lazy to even copy paste a project's URL, you can just type its name as argument, which \nwill use repository search API (slower).\nHelps to answer what is the latest Linux version:\n\n```bash\nlastversion linux\n```\n\nOr wondering what is the latest version of WordPress? :\n\n```bash\nlastversion wordpress\n```\n\nA special value of `self` for the main argument, will lookup the last release of `lastversion` \nitself.\n\nFor more options to control output or behavior, see `--help` output:    \n\n```\nusage: lastversion [-h] [--pre] [--verbose] [-d [FILENAME]]\n                   [--format {version,assets,source,json,tag}] [--assets]\n                   [--source] [-gt VER] [-b MAJOR] [--filter REGEX] [-su] [-y]\n                   [--version]\n                   [action] <repo or URL>\n\nGet the latest release from GitHub/GitLab/BitBucket.\n\npositional arguments:\n  action                Special action to run, e.g. download, install, test\n  <repo or URL>         GitHub/GitLab/BitBucket repository in format\n                        owner/name or any URL that belongs to it\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --pre                 Include pre-releases in potential versions\n  --verbose             Will give you idea of what is happening under the hood\n  -d [FILENAME], --download [FILENAME]\n                        Download with custom filename\n  --format {version,assets,source,json,tag}\n                        Output format\n  --assets              Returns assets download URLs for last release\n  --source              Returns only source URL for last release\n  -gt VER, --newer-than VER\n                        Output only if last version is newer than given\n                        version\n  -b MAJOR, --major MAJOR\n                        Only consider releases of a specific major version,\n                        e.g. 2.1.x\n  --filter REGEX        Filters --assets result by a regular expression\n  -su, --shorter-urls   A tiny bit shorter URLs produced\n  -y, --assumeyes       Automatically answer yes for all questions\n  --version             show program's version number and exit\n```\n\n\nThe `--format` will affect what kind of information from the last release and in which format will\n be displayed, e.g.:\n\n*   `version` is the default. Simply outputs well-formatted version number of the latest release\n*   `assets` will output a newline-separated list of assets URLs (if any), otherwise link to\n sources archive\n*   `source` will output link to source archive, no matter if the release has some assets added\n*   `json` can be used by external Python modules or for debugging, it is dict/JSON output of an API\n call that satisfied last version checks\n*   `tag` will emit just the latest release's tag name, which useful if you're constructing download\n URL yourself or need the tag name otherwise\n\nAn asset is a downloadable file that typically represents an executable, or otherwise \n\"ready to launch\" project. It's what you see filed under formal releases, and is usually a compiled \n(for specific platform), program.\n\nSource files, are either tarballs or zipballs of sources for the source code of release. \n\nYou can display either assets or source URLs of the latest release, by passing the corresponding\n `--format flag`, e.g. `--format source`\n\nYou also simply pass `--source` instead of `--format source`, and `--assets` instead of \n`--format assets`, as in:\n\n```bash\nlastversion --assets mautic/mautic \n#> https://github.com/mautic/mautic/archive/2.15.1/mautic-2.15.1.tar.gz\n```\n\nBy default, `lastversion` filters output of `--assets` to be OS specific. Who needs `.exe` on Linux?\n\nTo override this behavior, you can use `--filter`, which has a regular expression as its argument.\nTo disable OS filtering, use `--filter .`, this will match everything.\n\nYou can naturally use `--filter` in place where you would use `grep`, e.g. \n`lastversion --assets --filter win REPO`\n\n### Use case: How to download latest version of something     \n\nYou can also use `lastversion` to download assets/sources for the latest release.\n\nDownload the most recent Mautic source release:\n\n```bash\nlastversion mautic/mautic --download \n```\n\nCustomize downloaded filename (works only for sources, which is the default):\n\n```bash\nlastversion mautic/mautic --download mautic.tar.gz\n```\n\nOr you can just have `lastversion` output sources/assets URLs and have those downloaded by \nsomething else:    \n\n```bash\nwget $(lastversion --assets mautic/mautic)\n```\n\nThis will download all assets of the newest stable Mautic, which are 2 zip files.\n\nHow this works: `lastversion` outputs all asset URLs, each on a new line, and `wget` is smart \nenough to download each URL. Magic :)\n\nFor releases which have no assets added, it will download source archive.  \n\nTo always download source, use `--source` instead:\n\n```bash\nwget $(lastversion --source mautic/mautic)  \n```\n\n### Use case: Get last version (betas are fine)\n\nWe consider latest release is the one which is stable / not marked as beta.\nIf you think otherwise, then pass `--pre` switch and if the latest version of repository is a \npre-release, then you'll get its version instead:\n\n```bash\nlastversion --pre mautic/mautic \n#> 2.15.2b0\n```\n\n### Use case: version of a specific branch\n\nFor some projects, there may be several stable releases available simultaneously, in different\nbranches. An obvious example is PHP. You can use `--major` flag to specify the major release\nversion to match with, to help you find latest stable release of a branch, like so:\n\n```bash\nlastversion php/php-src --major 7.2\n``` \n\nThis will give you current stable version of PHP 7.2.x, e.g. `7.2.28`.\n\n#### Special use case: NGINX stable vs mainline branch version\n\n```bash\nlastversion https://nginx.org --major stable #> 1.16.1\nlastversion https://nginx.org --major mainline #> 1.17.9\n```\n\nBehind the scenes, this checks with `hg.nginx.org` which is a Mercurial web repo.\nThose are supported as well, e.g.\n\n```bash\nlastversion https://hg.example.com/project/\n```\n\nMercurial repos are rather rare these days, but support has been added primarily for NGINX.\n\n### Install an RPM asset\n\nIf a project provides `.rpm` assets and your system has `yum` or `dnf`, you can install the project's\n RPM directly, like so:\n\n    sudo lastversion install mailspring\n\nThis finds [MailSpring](https://github.com/Foundry376/Mailspring), gets its latest release info, \nfilters assets for `.rpm` and passes it to `yum` / `dnf`. \n\nYou can even set up an auto-updater cron job which will ensure you are on the latest version of a\n package, like so:\n\n```bash\n@daily /usr/bin/lastversion install mailspring -y 2>/dev/null\n```\n\nIf the Mailspring GitHub repo posts a release with newer `.rpm`, then it will be automatically\n installed, making sure you are running the latest and greated Mailspring version.\n\nYou'll even get an email alert after update (standard cron feature).\n\nNeedless to say, more often than not such RPM packages have no idea about all potentially missing\ndependencies. Thus, only use `lastversion install ...` if the software is missing from the base\n`yum` repositories.\n\n### Test version parser\n\nThe `test` command can be used for troubleshooting or simply well formatting a string with version:\n\n```bash\nlastversion test 'blah-1.2.3-devel' # > 1.2.3.dev0\nlastversion test '1.2.x' # > False (no clear version)\nlastversion test '1.2.3-rc1' # > 1.2.3rc1\n```\n\n### Scripting with lastversion\n\n#### Check for NEW release\n\nWhen you're building some upstream package, and you did this before, there is a known \"last build\" \nversion.\nAutomatic builds become easy with:\n\n```bash\nCURRENTLY_BUILT_VER=1.2.3 # stored somewhere, e.g. spec file in my case\nLASTVER=$(lastversion repo/owner -gt ${CURRENTLY_BUILT_VER})\nif [[ $? -eq 0 ]]; then\n  # LASTVER is newer, update and trigger build\n  # ....\nfi\n```\n\nHere, the `-gt` is actually a switch passed to `lastversion`, which acts in a similar fashion to\n `-gt` comparison in bash.\n\nThere is more to it, if you want to make this reliable.\nSee my ranting on \n[RPM auto-builds with `lastversion`](https://github.com/dvershinin/lastversion/wiki/Use-in-RPM-building)\n\n#### Exit Status codes\n\nExit status codes are the usual means of communicating a command's execution success or failure. \nSo `lastversion` follows this: successful command returns `0` while anything else is an error of \nsome kind:\n\nExit status code `1` is returned for cases like no release tag existing for repository at all, or \nrepository does not exist.\n\nExit status code `2` is returned for `-gt` version comparison negative lookup.\n\nExit status code `3` is returned when filtering assets of last release yields empty URL set \n(no match)\n\n## Tips\n\nGetting latest version is heavy on the API, because GitHub does not allow to fetch tags in \nchronological order, and some repositories switch from one version format to another, so *we can't \njust consider highest version to be latest*.\nWe have to fetch every tag's commit date, and see if it's actually more recent. Thus it's slower\nwith larger repositories, which have potentially a lot of tags.\n\nThus, `lastversion` makes use of caching API response to be fast and light on GitHub API,\nIt does conditional ETag validation, which, as per GitHub API will not count towards rate limit.\nThe cache is stored in `~/.cache/lastversion` on Linux systems.\n\nIt is *much recommended* to setup your [GitHub API token](https://github.com/settings/tokens) in \n`~/.bashrc` like this, to increase your rate limit:\n\n```bash\nexport GITHUB_API_TOKEN=xxxxxxxxxxxxxxx\n```\n\nFor GitLab, you can use a\n[Personal Access Token](https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html):\n\n```bash\nexport GITLAB_PA_TOKEN=xxxxxxxxxxxxxxx\n```\n\nThen run `source ~/.bashrc`. After this, `lastversion` will use it to get larger API calls allowance\nfrom GitHub.\n\n## Usage in a Python module\n\nInvoke `lastversion.latest` function get version information for a repo.  \n\n```python\nfrom lastversion import lastversion\nfrom packaging import version\n\nlatest_mautic_version = lastversion.latest(\"mautic/mautic\", output_format='version', pre_ok=True)\n\nprint('Latest Mautic version: {}'.format(str(latest_mautic_version))\n\nif latest_mautic_version >= version.parse('1.8.1')\n    print('It is newer')\n```\n\nWith `output_format='version'` (the default), the function returns a \n[Version](https://packaging.pypa.io/en/latest/version/#packaging.version.Version) object, or\n `False`. So you can do things like above, namely version comparison, checking dev status, etc.\n\nThe `lastversion.latest` function accepts 3 arguments\n\n*   `repo`, in format of `<owner>/<name>`, or any URL under this repository, e.g. `https://github.com/dvershinin/lastversion/issues`   \n*   `format`, which accepts same values as when you run `lastversion` interactively\n*   `pre_ok`, boolean for whether to include pre-releases as potential versions\n\n### Check if there is a newer kernel for your Linux machine\n\n```bash\nLATEST_KERNEL=$(lastversion linux -gt $(uname -r | cut -d '-' -f 1))\nif [[ $? -eq 0 ]]; then\n  echo \"I better update my kernel now, because ${LATEST_KERNEL} is there\"\nelse \n  echo \"My kernel is latest and greatest.\"\nfi \n```  \n\n[![DeepSource](https://static.deepsource.io/deepsource-badge-light.svg)](https://deepsource.io/gh/dvershinin/lastversion/?ref=repository-badge)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dvershinin/lastversion", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "lastversion", "package_url": "https://pypi.org/project/lastversion/", "platform": "", "project_url": "https://pypi.org/project/lastversion/", "project_urls": {"Homepage": "https://github.com/dvershinin/lastversion"}, "release_url": "https://pypi.org/project/lastversion/1.1.5/", "requires_dist": ["requests (>=2.6.1)", "packaging", "cachecontrol", "lockfile", "appdirs", "python-dateutil", "feedparser", "PyYAML", "tqdm", "requests (>=2.6.1) ; extra == 'tests'", "packaging ; extra == 'tests'", "cachecontrol ; extra == 'tests'", "lockfile ; extra == 'tests'", "appdirs ; extra == 'tests'", "python-dateutil ; extra == 'tests'", "feedparser ; extra == 'tests'", "PyYAML ; extra == 'tests'", "tqdm ; extra == 'tests'", "pytest (>=4.4.0) ; extra == 'tests'", "flake8 ; extra == 'tests'", "pytest-xdist ; extra == 'tests'"], "requires_python": "", "summary": "A CLI tool to fetch last GitHub release version", "version": "1.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>lastversion</h1>\n<p><a href=\"https://travis-ci.org/dvershinin/lastversion\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8aaba8433ade1488af0f42c82add4f412ad2d96a/68747470733a2f2f7472617669732d63692e6f72672f647665727368696e696e2f6c61737476657273696f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/lastversion\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1687e6dd9022b8f4341b784c2bbbf41d9233fb65/68747470733a2f2f62616467652e667572792e696f2f70792f6c61737476657273696f6e2e737667\"></a>\n<a href=\"https://www.codacy.com/manual/GetPageSpeed/lastversion?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=dvershinin/lastversion&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/624bdcd32b928b2a345fcd95a3f877214fa9deea/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3338306533613338646335323431313262346463666330343932643562383136\"></a></p>\n<p>A tiny command-line utility that helps to answer a simple question:</p>\n<blockquote>\n<p>What is the latest <em>stable</em> version for a GitHub/GitLab/BitBucket/etc. project?</p>\n</blockquote>\n<p>... and, optionally, download/install it.</p>\n<p>GitHub has an API endpoint\n<a href=\"https://developer.github.com/v3/repos/releases/#get-the-latest-release\" rel=\"nofollow\">here</a>.\nBut if you're here, then you know how it sucks:</p>\n<p>A release would show up in this API response <em>only</em> if it was filed formally using the GitHub\nrelease interface.\nSometimes project authors use formal releases, and next thing you know, for the next release\nthey won't.\nThere is no consistency in human beings.</p>\n<p>OK, you think you could use another API endpoint to\n<a href=\"https://developer.github.com/v3/repos/#list-tags\" rel=\"nofollow\">list tags</a>.\nTags <em>usually</em> represent a release, however, the API does not sort them chronologically.\nMoreover, you might get something like \"latest-stable\" for a tag name's value.</p>\n<p>In general, quite many project authors complicate things further by:</p>\n<ul>\n<li>Creating a formal release that is clearly a Release Candidate (<code>rc</code> in tag), but forgetting to\nmark it as a pre-release</li>\n<li>Putting extraneous text in release tag e.g. <code>release-1.2.3</code> or <code>name-1.2.3-2019</code> anything fancy\nlike that</li>\n<li>Putting or not putting the <code>v</code> prefix inside release tags. Today yes, tomorrow not. I'm not\nconsistent about it myself :)</li>\n<li>Switching from one version format to another, e.g. <code>v20150121</code> to <code>v2.0.1</code></li>\n</ul>\n<p>To deal with all this mess and simply get well-formatted, last <em>stable</em> version (or download URL!)\non the command line, you can use <code>lastversion</code>.</p>\n<p>Its primary use is for build systems - whenever you want to watch specific repositories for released\nversions to build packages automatically.\nOr otherwise require getting the latest version in your automation scripts.</p>\n<p><a href=\"https://www.getpagespeed.com/redhat\" rel=\"nofollow\">Like I do</a></p>\n<p><code>lastversion</code> does a little bit of AI to detect if releasers mistakenly filed a beta version as a\nstable release.\nIt uses both of the API endpoints and incorporates logic for cleaning up human inconsistency from\nversion information.</p>\n<h2>Synopsis</h2>\n<pre>lastversion apache/incubator-pagespeed-ngx \n<span class=\"c1\">#&gt; 1.13.35.2</span>\nlastversion apache/incubator-pagespeed-ngx -d \n<span class=\"c1\">#&gt; downloaded incubator-pagespeed-ngx-v1.13.35.2-stable.tar.gz</span>\nlastversion apache/incubator-pagespeed-ngx -d pagespeed.tar.gz \n<span class=\"c1\">#&gt; downloads with chosen filename</span>\n</pre>\n<h2>Installation for CentOS/RHEL 7, 8 or Amazon Linux 2</h2>\n<pre>sudo yum -y install https://extras.getpagespeed.com/release-latest.rpm\nsudo yum install lastversion\n</pre>\n<h2>Installation for other systems</h2>\n<p>Installing with <code>pip</code> is easiest:</p>\n<pre>pip install lastversion\n</pre>\n<h2>Usage</h2>\n<p>Typically, you would just pass a repository URL (or repo owner/name to it) as the only argument,\ne.g.:</p>\n<pre>lastversion https://github.com/gperftools/gperftools\n</pre>\n<p>Equivalently accepted invocation with same output is:</p>\n<pre>lastversion gperftools/gperftools\n</pre>\n<p>If you're lazy to even copy paste a project's URL, you can just type its name as argument, which\nwill use repository search API (slower).\nHelps to answer what is the latest Linux version:</p>\n<pre>lastversion linux\n</pre>\n<p>Or wondering what is the latest version of WordPress? :</p>\n<pre>lastversion wordpress\n</pre>\n<p>A special value of <code>self</code> for the main argument, will lookup the last release of <code>lastversion</code>\nitself.</p>\n<p>For more options to control output or behavior, see <code>--help</code> output:</p>\n<pre><code>usage: lastversion [-h] [--pre] [--verbose] [-d [FILENAME]]\n                   [--format {version,assets,source,json,tag}] [--assets]\n                   [--source] [-gt VER] [-b MAJOR] [--filter REGEX] [-su] [-y]\n                   [--version]\n                   [action] &lt;repo or URL&gt;\n\nGet the latest release from GitHub/GitLab/BitBucket.\n\npositional arguments:\n  action                Special action to run, e.g. download, install, test\n  &lt;repo or URL&gt;         GitHub/GitLab/BitBucket repository in format\n                        owner/name or any URL that belongs to it\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --pre                 Include pre-releases in potential versions\n  --verbose             Will give you idea of what is happening under the hood\n  -d [FILENAME], --download [FILENAME]\n                        Download with custom filename\n  --format {version,assets,source,json,tag}\n                        Output format\n  --assets              Returns assets download URLs for last release\n  --source              Returns only source URL for last release\n  -gt VER, --newer-than VER\n                        Output only if last version is newer than given\n                        version\n  -b MAJOR, --major MAJOR\n                        Only consider releases of a specific major version,\n                        e.g. 2.1.x\n  --filter REGEX        Filters --assets result by a regular expression\n  -su, --shorter-urls   A tiny bit shorter URLs produced\n  -y, --assumeyes       Automatically answer yes for all questions\n  --version             show program's version number and exit\n</code></pre>\n<p>The <code>--format</code> will affect what kind of information from the last release and in which format will\nbe displayed, e.g.:</p>\n<ul>\n<li><code>version</code> is the default. Simply outputs well-formatted version number of the latest release</li>\n<li><code>assets</code> will output a newline-separated list of assets URLs (if any), otherwise link to\nsources archive</li>\n<li><code>source</code> will output link to source archive, no matter if the release has some assets added</li>\n<li><code>json</code> can be used by external Python modules or for debugging, it is dict/JSON output of an API\ncall that satisfied last version checks</li>\n<li><code>tag</code> will emit just the latest release's tag name, which useful if you're constructing download\nURL yourself or need the tag name otherwise</li>\n</ul>\n<p>An asset is a downloadable file that typically represents an executable, or otherwise\n\"ready to launch\" project. It's what you see filed under formal releases, and is usually a compiled\n(for specific platform), program.</p>\n<p>Source files, are either tarballs or zipballs of sources for the source code of release.</p>\n<p>You can display either assets or source URLs of the latest release, by passing the corresponding\n<code>--format flag</code>, e.g. <code>--format source</code></p>\n<p>You also simply pass <code>--source</code> instead of <code>--format source</code>, and <code>--assets</code> instead of\n<code>--format assets</code>, as in:</p>\n<pre>lastversion --assets mautic/mautic \n<span class=\"c1\">#&gt; https://github.com/mautic/mautic/archive/2.15.1/mautic-2.15.1.tar.gz</span>\n</pre>\n<p>By default, <code>lastversion</code> filters output of <code>--assets</code> to be OS specific. Who needs <code>.exe</code> on Linux?</p>\n<p>To override this behavior, you can use <code>--filter</code>, which has a regular expression as its argument.\nTo disable OS filtering, use <code>--filter .</code>, this will match everything.</p>\n<p>You can naturally use <code>--filter</code> in place where you would use <code>grep</code>, e.g.\n<code>lastversion --assets --filter win REPO</code></p>\n<h3>Use case: How to download latest version of something</h3>\n<p>You can also use <code>lastversion</code> to download assets/sources for the latest release.</p>\n<p>Download the most recent Mautic source release:</p>\n<pre>lastversion mautic/mautic --download \n</pre>\n<p>Customize downloaded filename (works only for sources, which is the default):</p>\n<pre>lastversion mautic/mautic --download mautic.tar.gz\n</pre>\n<p>Or you can just have <code>lastversion</code> output sources/assets URLs and have those downloaded by\nsomething else:</p>\n<pre>wget <span class=\"k\">$(</span>lastversion --assets mautic/mautic<span class=\"k\">)</span>\n</pre>\n<p>This will download all assets of the newest stable Mautic, which are 2 zip files.</p>\n<p>How this works: <code>lastversion</code> outputs all asset URLs, each on a new line, and <code>wget</code> is smart\nenough to download each URL. Magic :)</p>\n<p>For releases which have no assets added, it will download source archive.</p>\n<p>To always download source, use <code>--source</code> instead:</p>\n<pre>wget <span class=\"k\">$(</span>lastversion --source mautic/mautic<span class=\"k\">)</span>  \n</pre>\n<h3>Use case: Get last version (betas are fine)</h3>\n<p>We consider latest release is the one which is stable / not marked as beta.\nIf you think otherwise, then pass <code>--pre</code> switch and if the latest version of repository is a\npre-release, then you'll get its version instead:</p>\n<pre>lastversion --pre mautic/mautic \n<span class=\"c1\">#&gt; 2.15.2b0</span>\n</pre>\n<h3>Use case: version of a specific branch</h3>\n<p>For some projects, there may be several stable releases available simultaneously, in different\nbranches. An obvious example is PHP. You can use <code>--major</code> flag to specify the major release\nversion to match with, to help you find latest stable release of a branch, like so:</p>\n<pre>lastversion php/php-src --major <span class=\"m\">7</span>.2\n</pre>\n<p>This will give you current stable version of PHP 7.2.x, e.g. <code>7.2.28</code>.</p>\n<h4>Special use case: NGINX stable vs mainline branch version</h4>\n<pre>lastversion https://nginx.org --major stable <span class=\"c1\">#&gt; 1.16.1</span>\nlastversion https://nginx.org --major mainline <span class=\"c1\">#&gt; 1.17.9</span>\n</pre>\n<p>Behind the scenes, this checks with <code>hg.nginx.org</code> which is a Mercurial web repo.\nThose are supported as well, e.g.</p>\n<pre>lastversion https://hg.example.com/project/\n</pre>\n<p>Mercurial repos are rather rare these days, but support has been added primarily for NGINX.</p>\n<h3>Install an RPM asset</h3>\n<p>If a project provides <code>.rpm</code> assets and your system has <code>yum</code> or <code>dnf</code>, you can install the project's\nRPM directly, like so:</p>\n<pre><code>sudo lastversion install mailspring\n</code></pre>\n<p>This finds <a href=\"https://github.com/Foundry376/Mailspring\" rel=\"nofollow\">MailSpring</a>, gets its latest release info,\nfilters assets for <code>.rpm</code> and passes it to <code>yum</code> / <code>dnf</code>.</p>\n<p>You can even set up an auto-updater cron job which will ensure you are on the latest version of a\npackage, like so:</p>\n<pre>@daily /usr/bin/lastversion install mailspring -y <span class=\"m\">2</span>&gt;/dev/null\n</pre>\n<p>If the Mailspring GitHub repo posts a release with newer <code>.rpm</code>, then it will be automatically\ninstalled, making sure you are running the latest and greated Mailspring version.</p>\n<p>You'll even get an email alert after update (standard cron feature).</p>\n<p>Needless to say, more often than not such RPM packages have no idea about all potentially missing\ndependencies. Thus, only use <code>lastversion install ...</code> if the software is missing from the base\n<code>yum</code> repositories.</p>\n<h3>Test version parser</h3>\n<p>The <code>test</code> command can be used for troubleshooting or simply well formatting a string with version:</p>\n<pre>lastversion <span class=\"nb\">test</span> <span class=\"s1\">'blah-1.2.3-devel'</span> <span class=\"c1\"># &gt; 1.2.3.dev0</span>\nlastversion <span class=\"nb\">test</span> <span class=\"s1\">'1.2.x'</span> <span class=\"c1\"># &gt; False (no clear version)</span>\nlastversion <span class=\"nb\">test</span> <span class=\"s1\">'1.2.3-rc1'</span> <span class=\"c1\"># &gt; 1.2.3rc1</span>\n</pre>\n<h3>Scripting with lastversion</h3>\n<h4>Check for NEW release</h4>\n<p>When you're building some upstream package, and you did this before, there is a known \"last build\"\nversion.\nAutomatic builds become easy with:</p>\n<pre><span class=\"nv\">CURRENTLY_BUILT_VER</span><span class=\"o\">=</span><span class=\"m\">1</span>.2.3 <span class=\"c1\"># stored somewhere, e.g. spec file in my case</span>\n<span class=\"nv\">LASTVER</span><span class=\"o\">=</span><span class=\"k\">$(</span>lastversion repo/owner -gt <span class=\"si\">${</span><span class=\"nv\">CURRENTLY_BUILT_VER</span><span class=\"si\">}</span><span class=\"k\">)</span>\n<span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$?</span> -eq <span class=\"m\">0</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n  <span class=\"c1\"># LASTVER is newer, update and trigger build</span>\n  <span class=\"c1\"># ....</span>\n<span class=\"k\">fi</span>\n</pre>\n<p>Here, the <code>-gt</code> is actually a switch passed to <code>lastversion</code>, which acts in a similar fashion to\n<code>-gt</code> comparison in bash.</p>\n<p>There is more to it, if you want to make this reliable.\nSee my ranting on\n<a href=\"https://github.com/dvershinin/lastversion/wiki/Use-in-RPM-building\" rel=\"nofollow\">RPM auto-builds with <code>lastversion</code></a></p>\n<h4>Exit Status codes</h4>\n<p>Exit status codes are the usual means of communicating a command's execution success or failure.\nSo <code>lastversion</code> follows this: successful command returns <code>0</code> while anything else is an error of\nsome kind:</p>\n<p>Exit status code <code>1</code> is returned for cases like no release tag existing for repository at all, or\nrepository does not exist.</p>\n<p>Exit status code <code>2</code> is returned for <code>-gt</code> version comparison negative lookup.</p>\n<p>Exit status code <code>3</code> is returned when filtering assets of last release yields empty URL set\n(no match)</p>\n<h2>Tips</h2>\n<p>Getting latest version is heavy on the API, because GitHub does not allow to fetch tags in\nchronological order, and some repositories switch from one version format to another, so <em>we can't\njust consider highest version to be latest</em>.\nWe have to fetch every tag's commit date, and see if it's actually more recent. Thus it's slower\nwith larger repositories, which have potentially a lot of tags.</p>\n<p>Thus, <code>lastversion</code> makes use of caching API response to be fast and light on GitHub API,\nIt does conditional ETag validation, which, as per GitHub API will not count towards rate limit.\nThe cache is stored in <code>~/.cache/lastversion</code> on Linux systems.</p>\n<p>It is <em>much recommended</em> to setup your <a href=\"https://github.com/settings/tokens\" rel=\"nofollow\">GitHub API token</a> in\n<code>~/.bashrc</code> like this, to increase your rate limit:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">GITHUB_API_TOKEN</span><span class=\"o\">=</span>xxxxxxxxxxxxxxx\n</pre>\n<p>For GitLab, you can use a\n<a href=\"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html\" rel=\"nofollow\">Personal Access Token</a>:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">GITLAB_PA_TOKEN</span><span class=\"o\">=</span>xxxxxxxxxxxxxxx\n</pre>\n<p>Then run <code>source ~/.bashrc</code>. After this, <code>lastversion</code> will use it to get larger API calls allowance\nfrom GitHub.</p>\n<h2>Usage in a Python module</h2>\n<p>Invoke <code>lastversion.latest</code> function get version information for a repo.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lastversion</span> <span class=\"kn\">import</span> <span class=\"n\">lastversion</span>\n<span class=\"kn\">from</span> <span class=\"nn\">packaging</span> <span class=\"kn\">import</span> <span class=\"n\">version</span>\n\n<span class=\"n\">latest_mautic_version</span> <span class=\"o\">=</span> <span class=\"n\">lastversion</span><span class=\"o\">.</span><span class=\"n\">latest</span><span class=\"p\">(</span><span class=\"s2\">\"mautic/mautic\"</span><span class=\"p\">,</span> <span class=\"n\">output_format</span><span class=\"o\">=</span><span class=\"s1\">'version'</span><span class=\"p\">,</span> <span class=\"n\">pre_ok</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Latest Mautic version: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">latest_mautic_version</span><span class=\"p\">))</span>\n\n<span class=\"k\">if</span> <span class=\"n\">latest_mautic_version</span> <span class=\"o\">&gt;=</span> <span class=\"n\">version</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s1\">'1.8.1'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'It is newer'</span><span class=\"p\">)</span>\n</pre>\n<p>With <code>output_format='version'</code> (the default), the function returns a\n<a href=\"https://packaging.pypa.io/en/latest/version/#packaging.version.Version\" rel=\"nofollow\">Version</a> object, or\n<code>False</code>. So you can do things like above, namely version comparison, checking dev status, etc.</p>\n<p>The <code>lastversion.latest</code> function accepts 3 arguments</p>\n<ul>\n<li><code>repo</code>, in format of <code>&lt;owner&gt;/&lt;name&gt;</code>, or any URL under this repository, e.g. <code>https://github.com/dvershinin/lastversion/issues</code></li>\n<li><code>format</code>, which accepts same values as when you run <code>lastversion</code> interactively</li>\n<li><code>pre_ok</code>, boolean for whether to include pre-releases as potential versions</li>\n</ul>\n<h3>Check if there is a newer kernel for your Linux machine</h3>\n<pre><span class=\"nv\">LATEST_KERNEL</span><span class=\"o\">=</span><span class=\"k\">$(</span>lastversion linux -gt <span class=\"k\">$(</span>uname -r <span class=\"p\">|</span> cut -d <span class=\"s1\">'-'</span> -f <span class=\"m\">1</span><span class=\"k\">))</span>\n<span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$?</span> -eq <span class=\"m\">0</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">\"I better update my kernel now, because </span><span class=\"si\">${</span><span class=\"nv\">LATEST_KERNEL</span><span class=\"si\">}</span><span class=\"s2\"> is there\"</span>\n<span class=\"k\">else</span> \n  <span class=\"nb\">echo</span> <span class=\"s2\">\"My kernel is latest and greatest.\"</span>\n<span class=\"k\">fi</span> \n</pre>\n<p><a href=\"https://deepsource.io/gh/dvershinin/lastversion/?ref=repository-badge\" rel=\"nofollow\"><img alt=\"DeepSource\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/edddb0b780c4ee8ee62e7982e2e7d416e041c3fb/68747470733a2f2f7374617469632e64656570736f757263652e696f2f64656570736f757263652d62616467652d6c696768742e737667\"></a></p>\n\n          </div>"}, "last_serial": 7163043, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "2c9487ce70add260a7c9f87157d2c266", "sha256": "e0156e3225c0a479b84c718f03e7eb8d672592196f294ebba5a62b6e5f54f839"}, "downloads": -1, "filename": "lastversion-0.0.10.tar.gz", "has_sig": false, "md5_digest": "2c9487ce70add260a7c9f87157d2c266", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6442, "upload_time": "2019-06-12T19:46:40", "upload_time_iso_8601": "2019-06-12T19:46:40.998619Z", "url": "https://files.pythonhosted.org/packages/0d/3a/f9eab0dca47510fcbf3e39c89faeee0dd4bc72cfc2bcb7a5c753110eb166/lastversion-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "dd0ac5b1e53e71c5f241a536f3840032", "sha256": "408039d3459f9585d7a00d90cc0a52023ca4bd4ada8c60b1787ac9b7c42870ea"}, "downloads": -1, "filename": "lastversion-0.0.11.tar.gz", "has_sig": false, "md5_digest": "dd0ac5b1e53e71c5f241a536f3840032", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6446, "upload_time": "2019-06-13T06:16:10", "upload_time_iso_8601": "2019-06-13T06:16:10.739789Z", "url": "https://files.pythonhosted.org/packages/f3/c5/2de0f579e720d22d4fd81b4c3784b22ada6a57e30e31627da09fdaf298a4/lastversion-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "f7cd9d78fa79c50f1532291a48632c06", "sha256": "0704353f0a1805c9ce4cf99ecec89b8b105f8863f8b7e6865dce043d033bbff2"}, "downloads": -1, "filename": "lastversion-0.0.12.tar.gz", "has_sig": false, "md5_digest": "f7cd9d78fa79c50f1532291a48632c06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6558, "upload_time": "2019-07-24T07:34:08", "upload_time_iso_8601": "2019-07-24T07:34:08.017109Z", "url": "https://files.pythonhosted.org/packages/ad/50/f8a623156d438685e5e8bd9eef30c9d0ad2f89dec270951d6c405fdb8c25/lastversion-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "c1c06ffe6998637dad3bd76f79d5a946", "sha256": "421d30b7ee1a9acc998d7c5e5b3d6e7921dd34bf47f53394b52503d37da59687"}, "downloads": -1, "filename": "lastversion-0.0.13.tar.gz", "has_sig": false, "md5_digest": "c1c06ffe6998637dad3bd76f79d5a946", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6609, "upload_time": "2019-07-25T06:04:20", "upload_time_iso_8601": "2019-07-25T06:04:20.214375Z", "url": "https://files.pythonhosted.org/packages/f6/5a/ad20a7383e9a91b63ef41b2bebe990579fbfea126b14ce97ead9a32dd533/lastversion-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "27ffc2459b40ea6fa99370ee9f483a54", "sha256": "135543e60f8206439e666077565eb4acf60c818c805d48372d1eb4b3c2f88993"}, "downloads": -1, "filename": "lastversion-0.0.14.tar.gz", "has_sig": false, "md5_digest": "27ffc2459b40ea6fa99370ee9f483a54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6844, "upload_time": "2019-07-25T08:13:30", "upload_time_iso_8601": "2019-07-25T08:13:30.789154Z", "url": "https://files.pythonhosted.org/packages/fd/b7/1af5e2300aecc3404edf1dac3954e64108008d436715afca3b1bd2464b1e/lastversion-0.0.14.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "c9bd40d7cdb36c3653c79bbc18e705e9", "sha256": "1c2d679403158a5ef061b23c338857e9ffa285b8d39a46db5244e5e1e9534e13"}, "downloads": -1, "filename": "lastversion-0.0.6.tar.gz", "has_sig": false, "md5_digest": "c9bd40d7cdb36c3653c79bbc18e705e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4163, "upload_time": "2019-05-17T12:32:02", "upload_time_iso_8601": "2019-05-17T12:32:02.830478Z", "url": "https://files.pythonhosted.org/packages/2e/40/f787169a916f6e3912f7275b771865e6b0b6a1f2116ca5b166dcda8c4c12/lastversion-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "3d361444c2c305575368218ae6457687", "sha256": "4073def3d93d8610c00a42ad89722a5af984e0e7936e38e336e405087c494104"}, "downloads": -1, "filename": "lastversion-0.0.7.tar.gz", "has_sig": false, "md5_digest": "3d361444c2c305575368218ae6457687", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4434, "upload_time": "2019-05-17T17:03:12", "upload_time_iso_8601": "2019-05-17T17:03:12.764076Z", "url": "https://files.pythonhosted.org/packages/54/1c/ccd9083df41193e5fac7f45b6a5399c6c3caa1f44310f776b45e4f4de6fe/lastversion-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "7db41b305e52a348c9faad2305872732", "sha256": "3105eb13866ad59423a0e27da8ade8d0da4828fdf101adf294c82134a734f719"}, "downloads": -1, "filename": "lastversion-0.0.8.tar.gz", "has_sig": false, "md5_digest": "7db41b305e52a348c9faad2305872732", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4684, "upload_time": "2019-05-17T17:28:54", "upload_time_iso_8601": "2019-05-17T17:28:54.777711Z", "url": "https://files.pythonhosted.org/packages/ae/01/e57aa6536037f792be2a021e66003a409bdf3203e6cb65ff8b539c9c7bb4/lastversion-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "69beef456060a9ed6450463ddfcae67f", "sha256": "4a795797479283a7811e82efe30eca87905107006e7a08e4209bbef86a67d0f3"}, "downloads": -1, "filename": "lastversion-0.0.9.tar.gz", "has_sig": false, "md5_digest": "69beef456060a9ed6450463ddfcae67f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5757, "upload_time": "2019-06-12T12:22:08", "upload_time_iso_8601": "2019-06-12T12:22:08.011092Z", "url": "https://files.pythonhosted.org/packages/71/bd/7602b86d3d553d8c7709f03b4426bd88a9372205ef26e0cfa1d0c53c1d95/lastversion-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "f99e9497dd64d2be570ce5a1e1a094df", "sha256": "e9a71547a8feb9ab98a49162bc8354c559e8676c89867e18913a401c3c9ace61"}, "downloads": -1, "filename": "lastversion-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f99e9497dd64d2be570ce5a1e1a094df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8760, "upload_time": "2019-07-29T20:20:42", "upload_time_iso_8601": "2019-07-29T20:20:42.800309Z", "url": "https://files.pythonhosted.org/packages/3d/48/a91aa5f9d038f75a0ec425b1a73cde10c885767d480a27e6cbb561441b38/lastversion-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d382e6c195567bdcebae804683543245", "sha256": "833ee473ba79c56d6992182c73e376a2a1970f0c88ffec16918eba3831d7fdcd"}, "downloads": -1, "filename": "lastversion-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d382e6c195567bdcebae804683543245", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10961, "upload_time": "2019-07-30T21:45:40", "upload_time_iso_8601": "2019-07-30T21:45:40.941657Z", "url": "https://files.pythonhosted.org/packages/3b/4f/3815110e2c10478843a99c44751b8dbef1b5fea0b4c2d01bb7d31be98edf/lastversion-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "6ed1bbe8feb0e92d70bb8af691e40782", "sha256": "584c36447a0d949093e0979c809e273265bb14787c258e205e39020b13b69fef"}, "downloads": -1, "filename": "lastversion-0.1.2.tar.gz", "has_sig": false, "md5_digest": "6ed1bbe8feb0e92d70bb8af691e40782", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11563, "upload_time": "2019-08-07T09:20:41", "upload_time_iso_8601": "2019-08-07T09:20:41.959912Z", "url": "https://files.pythonhosted.org/packages/b8/64/23f6844203304101cea1bb04516810214204ad236f6a2f09d4dcaeeb2b87/lastversion-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "219cfc85c16c83ce2c578153c0b8bb76", "sha256": "d469075450220c6e9b4f93e8b86ddbbb6f87023021905f7376debda2a76e3901"}, "downloads": -1, "filename": "lastversion-0.2.0.tar.gz", "has_sig": false, "md5_digest": "219cfc85c16c83ce2c578153c0b8bb76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12088, "upload_time": "2019-08-08T12:46:34", "upload_time_iso_8601": "2019-08-08T12:46:34.200059Z", "url": "https://files.pythonhosted.org/packages/b2/14/53553a671ec60fa1763b2af6792874d9a9969bb1522535bbc8376bfc9d83/lastversion-0.2.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "e4952cd46d0e3bb1647b8d121ce6a22c", "sha256": "4130bcb2771414e566cf34e098c09ac924a2b31b18b985ed7db4e2d6f7a7d207"}, "downloads": -1, "filename": "lastversion-0.2.2.tar.gz", "has_sig": false, "md5_digest": "e4952cd46d0e3bb1647b8d121ce6a22c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12175, "upload_time": "2019-09-17T20:26:31", "upload_time_iso_8601": "2019-09-17T20:26:31.104774Z", "url": "https://files.pythonhosted.org/packages/04/44/105bd3e5ea74ccb6c66cbc41da70125982a3e2e0b122073ce9b745b22d13/lastversion-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "95f73a03e6753924f9d7fc9fa4831934", "sha256": "9766be8d9bd40a819e3fb53c48334cfe06f7e5e522020e4fa8f9e5cb970fb3b5"}, "downloads": -1, "filename": "lastversion-0.2.3.tar.gz", "has_sig": false, "md5_digest": "95f73a03e6753924f9d7fc9fa4831934", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13081, "upload_time": "2019-09-24T11:47:33", "upload_time_iso_8601": "2019-09-24T11:47:33.316757Z", "url": "https://files.pythonhosted.org/packages/5f/7d/e5bea1aa450ad1c0394c792e774a2bab8bc404cb08e4c152b10e2d3991da/lastversion-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "59351d9b876acd0b62e7a4c6d6300d5b", "sha256": "9aa742683c586c9d56ffd8870c467f806b8d706d9138b8ed24a9a3d5579ddf80"}, "downloads": -1, "filename": "lastversion-0.2.4.tar.gz", "has_sig": false, "md5_digest": "59351d9b876acd0b62e7a4c6d6300d5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13877, "upload_time": "2019-10-12T13:15:13", "upload_time_iso_8601": "2019-10-12T13:15:13.555387Z", "url": "https://files.pythonhosted.org/packages/63/35/42c8d46c89461a8befa0f0e573ca7c60f964df8bf3d41237458473237da2/lastversion-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "03d1dbc20eae8a1a66188a1ffdc807f0", "sha256": "bacb2384502a28fce18c42daf97db0a9ab83571c3648451ddaf7d1231ea31ec7"}, "downloads": -1, "filename": "lastversion-0.2.5.tar.gz", "has_sig": false, "md5_digest": "03d1dbc20eae8a1a66188a1ffdc807f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14471, "upload_time": "2020-03-12T14:20:30", "upload_time_iso_8601": "2020-03-12T14:20:30.385285Z", "url": "https://files.pythonhosted.org/packages/3e/d9/a2c09da9dec0d07cdcef52ff2192ba660847740f2abc1ed647f76970e9ad/lastversion-0.2.5.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "b00d7e7c6ca214ea9fc72f0c40bb64c9", "sha256": "fb8e3b711f0da618bad9afa3eeda30dbfec4d0694450c7a92ffc2ebf958a9f0c"}, "downloads": -1, "filename": "lastversion-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b00d7e7c6ca214ea9fc72f0c40bb64c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19223, "upload_time": "2020-03-23T03:00:33", "upload_time_iso_8601": "2020-03-23T03:00:33.462149Z", "url": "https://files.pythonhosted.org/packages/c4/50/de49aa6226bc791151f3436e733e7c57bafb60214864ebccb34366e9afd3/lastversion-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "b5e97348a180afd763ac8881d3ff2d30", "sha256": "17d2f9313148a71046d3c63d10c961008d0c4b8fefa90e6facfcd0da479c415c"}, "downloads": -1, "filename": "lastversion-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b5e97348a180afd763ac8881d3ff2d30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19925, "upload_time": "2020-03-23T04:58:10", "upload_time_iso_8601": "2020-03-23T04:58:10.039158Z", "url": "https://files.pythonhosted.org/packages/90/50/27580da92698a77110e3d4afd4a9431686d3fc7f029a0b9196076bb363a3/lastversion-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "b5e90861122bea7d292ce67598aa8d4c", "sha256": "7e1950646241fb671d9a2baca8a56c9c3401da5720cb76fa41973ae8ec553fbf"}, "downloads": -1, "filename": "lastversion-1.1.0.tar.gz", "has_sig": false, "md5_digest": "b5e90861122bea7d292ce67598aa8d4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21526, "upload_time": "2020-03-24T17:26:03", "upload_time_iso_8601": "2020-03-24T17:26:03.141926Z", "url": "https://files.pythonhosted.org/packages/a6/8a/ecdf5c03d76eb911bc8b292834dab8dacb13cc4e00050bef9c4c28ec3eb3/lastversion-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "48463d5a854a065188eba4ccfe24cccf", "sha256": "b4f6a4034071e16f0e09e9a9b13fcc9a2dbec63e25c9d56d5eadaa3b0ad4e925"}, "downloads": -1, "filename": "lastversion-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "48463d5a854a065188eba4ccfe24cccf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24118, "upload_time": "2020-03-30T22:50:29", "upload_time_iso_8601": "2020-03-30T22:50:29.750801Z", "url": "https://files.pythonhosted.org/packages/5d/91/8aff3e6b6afec6199f4c92d0263bab57fcbd0a4b85b6e33983b494eed5bc/lastversion-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fbd5358ec87c22e19c18d6d7d037a452", "sha256": "fdedfb722e74f1f4ea6c13e11b9c91f94601b4ce2e882b6581fc2c36e9b1017c"}, "downloads": -1, "filename": "lastversion-1.1.1.tar.gz", "has_sig": false, "md5_digest": "fbd5358ec87c22e19c18d6d7d037a452", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26257, "upload_time": "2020-03-30T22:50:30", "upload_time_iso_8601": "2020-03-30T22:50:30.980887Z", "url": "https://files.pythonhosted.org/packages/58/85/8ec255aba17dcaeae2adde935c41d28fb0fb84cf52e58089056632c9ebda/lastversion-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "b33d024ad54da04925f74e30d5805cdb", "sha256": "88601476a0e1effb3ddd2f1cb6cf26adb5be2e291b527e34371cbbf2bea31056"}, "downloads": -1, "filename": "lastversion-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b33d024ad54da04925f74e30d5805cdb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24130, "upload_time": "2020-04-04T18:41:05", "upload_time_iso_8601": "2020-04-04T18:41:05.275719Z", "url": "https://files.pythonhosted.org/packages/7f/5b/05ea7d9f5201d9a0c35d604a12b11f3de9bd3b7c194402a4b31741c3583e/lastversion-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efae96fe3e85fdeb20aae0b4e216a7c4", "sha256": "8226901500778716c0fdaf008447a56e3bfaae0acff77810a2d12f6fac46277c"}, "downloads": -1, "filename": "lastversion-1.1.2.tar.gz", "has_sig": false, "md5_digest": "efae96fe3e85fdeb20aae0b4e216a7c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26319, "upload_time": "2020-04-04T18:41:06", "upload_time_iso_8601": "2020-04-04T18:41:06.349265Z", "url": "https://files.pythonhosted.org/packages/38/02/6917e9c1fdd15ad3da14449f8b2680e8ac6610d98b85c97832d6efca4777/lastversion-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "41b2fbd17e8449df114eccd025b7071b", "sha256": "6c49238d778426f245d122049213118e53be8e963270f98f95925c241bb9f48f"}, "downloads": -1, "filename": "lastversion-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "41b2fbd17e8449df114eccd025b7071b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24477, "upload_time": "2020-04-15T12:27:24", "upload_time_iso_8601": "2020-04-15T12:27:24.868114Z", "url": "https://files.pythonhosted.org/packages/a7/5b/0fba92659c8eadd939919882389eb99ac336c4cd2b06b382da316845ca44/lastversion-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2fc3d335ec5d491d17c8473ce8d3e36f", "sha256": "1a17dd68a095f7bd0668c7db241e9ffa62cb071bc224438c90e281a9551f36bc"}, "downloads": -1, "filename": "lastversion-1.1.3.tar.gz", "has_sig": false, "md5_digest": "2fc3d335ec5d491d17c8473ce8d3e36f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26654, "upload_time": "2020-04-15T12:27:26", "upload_time_iso_8601": "2020-04-15T12:27:26.339039Z", "url": "https://files.pythonhosted.org/packages/e7/56/c2c885ca45bcc2d313881fd1c847dbfceebb681ea04e7d48f79d946242e3/lastversion-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "d8793a0cf46c9c2d6b235cb2a0f0d595", "sha256": "ebc6319e1d1158ff1801169b409690dc044bb90ef53eeb1b0e6be6d61d3e6600"}, "downloads": -1, "filename": "lastversion-1.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d8793a0cf46c9c2d6b235cb2a0f0d595", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25566, "upload_time": "2020-04-23T00:37:08", "upload_time_iso_8601": "2020-04-23T00:37:08.671188Z", "url": "https://files.pythonhosted.org/packages/77/b6/d6946b4a7e718bb49bca1287aaba371f7be87670506595e7063a401572f3/lastversion-1.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e56531c3cb4b506327e928484b9c788c", "sha256": "2c93d27670ff07711aaaf007c7d32ad19b8bfdf880fbdc9a8c5ba9983e03269a"}, "downloads": -1, "filename": "lastversion-1.1.4.tar.gz", "has_sig": false, "md5_digest": "e56531c3cb4b506327e928484b9c788c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27895, "upload_time": "2020-04-23T00:37:10", "upload_time_iso_8601": "2020-04-23T00:37:10.323104Z", "url": "https://files.pythonhosted.org/packages/0a/a6/99eae203c32cb814b19d250add45419449942a6d32468618e2adf0d3604b/lastversion-1.1.4.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "4adabb7bac8b00ab9b04e76098fb3498", "sha256": "3167d907f096b355ac712714607145d9c186e67f8470de23321a94e4469d33b0"}, "downloads": -1, "filename": "lastversion-1.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "4adabb7bac8b00ab9b04e76098fb3498", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25706, "upload_time": "2020-05-04T10:23:12", "upload_time_iso_8601": "2020-05-04T10:23:12.963214Z", "url": "https://files.pythonhosted.org/packages/6e/ac/5601e46ddd9bbaccbf9fc4b355deaa6658812cf9ba5a4b7d8c4e95414b0e/lastversion-1.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2550ba748f7abe424b9dc663e284dc21", "sha256": "5deb5cdaef3107ed465f2a13bf7cfadb45411eb2f97a972a9cf24f00b89a9ffb"}, "downloads": -1, "filename": "lastversion-1.1.5.tar.gz", "has_sig": false, "md5_digest": "2550ba748f7abe424b9dc663e284dc21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28094, "upload_time": "2020-05-04T10:23:14", "upload_time_iso_8601": "2020-05-04T10:23:14.063378Z", "url": "https://files.pythonhosted.org/packages/a2/0d/23263d3d9329b0478c952cef6a240418495f2e90468ab8be73b08980f76c/lastversion-1.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4adabb7bac8b00ab9b04e76098fb3498", "sha256": "3167d907f096b355ac712714607145d9c186e67f8470de23321a94e4469d33b0"}, "downloads": -1, "filename": "lastversion-1.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "4adabb7bac8b00ab9b04e76098fb3498", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25706, "upload_time": "2020-05-04T10:23:12", "upload_time_iso_8601": "2020-05-04T10:23:12.963214Z", "url": "https://files.pythonhosted.org/packages/6e/ac/5601e46ddd9bbaccbf9fc4b355deaa6658812cf9ba5a4b7d8c4e95414b0e/lastversion-1.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2550ba748f7abe424b9dc663e284dc21", "sha256": "5deb5cdaef3107ed465f2a13bf7cfadb45411eb2f97a972a9cf24f00b89a9ffb"}, "downloads": -1, "filename": "lastversion-1.1.5.tar.gz", "has_sig": false, "md5_digest": "2550ba748f7abe424b9dc663e284dc21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28094, "upload_time": "2020-05-04T10:23:14", "upload_time_iso_8601": "2020-05-04T10:23:14.063378Z", "url": "https://files.pythonhosted.org/packages/a2/0d/23263d3d9329b0478c952cef6a240418495f2e90468ab8be73b08980f76c/lastversion-1.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:47 2020"}