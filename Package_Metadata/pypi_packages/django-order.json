{"info": {"author": "Praekelt Foundation", "author_email": "dev@praekelt.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "Django Order\n============\n**Django app allowing users to manually order objects via admin.**\n\nProvides an additional *order* tool within admin with which objects can be ordered by any number of arbitrary ``settings`` defined fields. A ``user_order_by`` queryset method allows for retrieval of objects as they were ordered by users via admin. \n\n.. contents:: Contents\n    :depth: 5\n\nInstallation\n------------\n\n#. Install or add ``django-order`` to your Python path.\n\n#. Install ``django-object-tools`` as described `here <http://pypi.python.org/pypi/django-object-tools#id3>`_.\n\n#. Add ``order`` to your ``INSTALLED_APPS`` setting.\n   \n#. Add an ``ORDERABLE_MODELS`` setting to your project's ``settings.py`` file. This settings is a dictionary containing model-app label strings for those models you want to make orderable as keys. Values take the form of a tupple containing field names on which you want the relevant model to be orderable. I.e. to make the ``User`` model orderable for hypothetical *home* and *users* pages, add the following ``ORDERABLE_MODELS`` setting::\n\n    ORDERABLE_MODELS = {\n        'auth.User': ('home', 'users'),\n    }\n\nUsage\n-----\n\nAdmin\n~~~~~\nOnce a model has been registered as orderable an additional *Order* object tool should be visible on the model's change list view.\n\n.. image:: http://cloud.github.com/downloads/praekelt/django-order/django-order-tool.jpg\n\nYou can order your items using this tool for each field name specified for you orderable model.\n\nQuerysets\n~~~~~~~~~\n\nWith the ``order`` app installed all queryset objects will have a new ``user_order_by`` method. This method behaves exactly the same as Django's builtin ``order_by`` method except that it expects one of the settings defined field names for the model being queried. It will order the queryset based on the field name you provide. For example, to order users for the *home* page in our hypothetical example you would use the method as follows::\n\n    User.objects.all().user_order_by('home')\n\nAuthors\n=======\n\nPraekelt Foundation\n-------------------\n\n* Shaun Sephton\n\nChangelog\n=========\n\n0.0.7 (2011-09-15)\n------------------\n#. django-object-tools refactor.\n\n0.0.6\n-----\n#. Tests, docs, cleanup, descending ordering, bugfixes.\n\n0.0.5\n-----\n#. No longer use class_prepared signal.\n\n0.0.4\n-----\n#.Initial public release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/praekelt/django-order", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-order", "package_url": "https://pypi.org/project/django-order/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-order/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/praekelt/django-order"}, "release_url": "https://pypi.org/project/django-order/0.0.7/", "requires_dist": null, "requires_python": null, "summary": "Django app allowing users to manually order objects via admin.", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-order\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Django Order</a></h2>\n<p><strong>Django app allowing users to manually order objects via admin.</strong></p>\n<p>Provides an additional <em>order</em> tool within admin with which objects can be ordered by any number of arbitrary <tt>settings</tt> defined fields. A <tt>user_order_by</tt> queryset method allows for retrieval of objects as they were ordered by users via admin.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#django-order\" id=\"id5\" rel=\"nofollow\">Django Order</a><ul>\n<li><a href=\"#installation\" id=\"id6\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" id=\"id7\" rel=\"nofollow\">Usage</a><ul>\n<li><a href=\"#admin\" id=\"id8\" rel=\"nofollow\">Admin</a></li>\n<li><a href=\"#querysets\" id=\"id9\" rel=\"nofollow\">Querysets</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#authors\" id=\"id10\" rel=\"nofollow\">Authors</a></li>\n<li><a href=\"#changelog\" id=\"id11\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id1\" id=\"id12\" rel=\"nofollow\">0.0.7 (2011-09-15)</a></li>\n<li><a href=\"#id2\" id=\"id13\" rel=\"nofollow\">0.0.6</a></li>\n<li><a href=\"#id3\" id=\"id14\" rel=\"nofollow\">0.0.5</a></li>\n<li><a href=\"#id4\" id=\"id15\" rel=\"nofollow\">0.0.4</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Installation</a></h3>\n<ol>\n<li><p>Install or add <tt><span class=\"pre\">django-order</span></tt> to your Python path.</p>\n</li>\n<li><p>Install <tt><span class=\"pre\">django-object-tools</span></tt> as described <a href=\"http://pypi.python.org/pypi/django-object-tools#id3\" rel=\"nofollow\">here</a>.</p>\n</li>\n<li><p>Add <tt>order</tt> to your <tt>INSTALLED_APPS</tt> setting.</p>\n</li>\n<li><p>Add an <tt>ORDERABLE_MODELS</tt> setting to your project\u2019s <tt>settings.py</tt> file. This settings is a dictionary containing model-app label strings for those models you want to make orderable as keys. Values take the form of a tupple containing field names on which you want the relevant model to be orderable. I.e. to make the <tt>User</tt> model orderable for hypothetical <em>home</em> and <em>users</em> pages, add the following <tt>ORDERABLE_MODELS</tt> setting:</p>\n<pre>ORDERABLE_MODELS = {\n    'auth.User': ('home', 'users'),\n}\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Usage</a></h3>\n<div id=\"admin\">\n<h4><a href=\"#id8\" rel=\"nofollow\">Admin</a></h4>\n<p>Once a model has been registered as orderable an additional <em>Order</em> object tool should be visible on the model\u2019s change list view.</p>\n<img alt=\"http://cloud.github.com/downloads/praekelt/django-order/django-order-tool.jpg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6d33b2e68c16f34baba37bfa51e68714f261b967/687474703a2f2f636c6f75642e6769746875622e636f6d2f646f776e6c6f6164732f707261656b656c742f646a616e676f2d6f726465722f646a616e676f2d6f726465722d746f6f6c2e6a7067\">\n<p>You can order your items using this tool for each field name specified for you orderable model.</p>\n</div>\n<div id=\"querysets\">\n<h4><a href=\"#id9\" rel=\"nofollow\">Querysets</a></h4>\n<p>With the <tt>order</tt> app installed all queryset objects will have a new <tt>user_order_by</tt> method. This method behaves exactly the same as Django\u2019s builtin <tt>order_by</tt> method except that it expects one of the settings defined field names for the model being queried. It will order the queryset based on the field name you provide. For example, to order users for the <em>home</em> page in our hypothetical example you would use the method as follows:</p>\n<pre>User.objects.all().user_order_by('home')\n</pre>\n</div>\n</div>\n</div>\n<div id=\"authors\">\n<h2><a href=\"#id10\" rel=\"nofollow\">Authors</a></h2>\n<h2 id=\"praekelt-foundation\"><span class=\"section-subtitle\">Praekelt Foundation</span></h2>\n<ul>\n<li>Shaun Sephton</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id12\" rel=\"nofollow\">0.0.7 (2011-09-15)</a></h3>\n<ol>\n<li>django-object-tools refactor.</li>\n</ol>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id13\" rel=\"nofollow\">0.0.6</a></h3>\n<ol>\n<li>Tests, docs, cleanup, descending ordering, bugfixes.</li>\n</ol>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id14\" rel=\"nofollow\">0.0.5</a></h3>\n<ol>\n<li>No longer use class_prepared signal.</li>\n</ol>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id15\" rel=\"nofollow\">0.0.4</a></h3>\n<p>#.Initial public release.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4624037, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "e51ac59673f3945e631137d7e7b7ae05", "sha256": "e9853549ca19643d132d86747073356db8ee6ba17113f49229800cc477bc2ec7"}, "downloads": -1, "filename": "django_order-0.0.4-py2.6.egg", "has_sig": false, "md5_digest": "e51ac59673f3945e631137d7e7b7ae05", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 11341, "upload_time": "2011-02-05T10:20:20", "upload_time_iso_8601": "2011-02-05T10:20:20.785980Z", "url": "https://files.pythonhosted.org/packages/17/78/914eaf5f8c0327078a94afc069d4951c205705afff0255b5652afbc6d4b1/django_order-0.0.4-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc824e7561b481978b88ab3009d98359", "sha256": "4c8e0c018a1df7817d52364cfaee5d7ff3d5efa9c93a53db8c525a8f52f9c31d"}, "downloads": -1, "filename": "django-order-0.0.4.tar.gz", "has_sig": false, "md5_digest": "cc824e7561b481978b88ab3009d98359", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5589, "upload_time": "2011-02-05T10:20:22", "upload_time_iso_8601": "2011-02-05T10:20:22.166794Z", "url": "https://files.pythonhosted.org/packages/7e/d4/6399de327b22d8139996d9b76c7290ddbad28d8ba5e964f154531a39ea8b/django-order-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "e28d9e70e981e5323c066e674aa54fe3", "sha256": "21398699a4977f0144db1c11a7c57c240fb9f1ff77701459b65acf15273f70f9"}, "downloads": -1, "filename": "django_order-0.0.5-py2.6.egg", "has_sig": false, "md5_digest": "e28d9e70e981e5323c066e674aa54fe3", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 11476, "upload_time": "2011-02-28T12:47:36", "upload_time_iso_8601": "2011-02-28T12:47:36.528788Z", "url": "https://files.pythonhosted.org/packages/19/9b/da04d9e07ae4358560a79d99f2908148b5308cb8c91a715c2dd1f439b5fd/django_order-0.0.5-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3433ac73f45fcfffffab2f42cd85c496", "sha256": "a1ea9778bae1432deac71af0b11f698c21eba80281506aefdf983ae024ff654b"}, "downloads": -1, "filename": "django-order-0.0.5.tar.gz", "has_sig": false, "md5_digest": "3433ac73f45fcfffffab2f42cd85c496", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5503, "upload_time": "2011-02-28T12:47:37", "upload_time_iso_8601": "2011-02-28T12:47:37.576837Z", "url": "https://files.pythonhosted.org/packages/bd/85/3134f95f09909398ea50495fb98805f726bbaed460699cf98b35398beef8/django-order-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "27a28993179321db52d962b940a2b383", "sha256": "7619d00719da2e9e3cf1afef762dab90643010d29e5398241ce3fc67cb8960ee"}, "downloads": -1, "filename": "django_order-0.0.6-py2.6.egg", "has_sig": false, "md5_digest": "27a28993179321db52d962b940a2b383", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 14989, "upload_time": "2011-03-02T17:50:13", "upload_time_iso_8601": "2011-03-02T17:50:13.356045Z", "url": "https://files.pythonhosted.org/packages/38/2e/63631245ccf42765e63bd9f6ad63f0d0aee98b9d3451cef582dafb44214d/django_order-0.0.6-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1147f59fd50de7188cbaca38bb12d0f9", "sha256": "89e057ec66ab7b88c643decb5746242deadf3d43c92578f0d35d458c5d6be133"}, "downloads": -1, "filename": "django-order-0.0.6.tar.gz", "has_sig": false, "md5_digest": "1147f59fd50de7188cbaca38bb12d0f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7415, "upload_time": "2011-03-02T17:50:15", "upload_time_iso_8601": "2011-03-02T17:50:15.118989Z", "url": "https://files.pythonhosted.org/packages/e3/b2/bc4cb556c6d57d75c58a9b1cd1cb49a03b28b5b7df69212daa4bd108170d/django-order-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "8a147e1dfff6ebe2e8b7ba66890b2762", "sha256": "8b41ec82ff4c279b5bc4fb3a33d44a1a9331c255f1bb306992a6b03a737b53ef"}, "downloads": -1, "filename": "django_order-0.0.7-py2.6.egg", "has_sig": false, "md5_digest": "8a147e1dfff6ebe2e8b7ba66890b2762", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 15949, "upload_time": "2011-09-15T11:10:57", "upload_time_iso_8601": "2011-09-15T11:10:57.888939Z", "url": "https://files.pythonhosted.org/packages/42/dc/89624c16ec2bdb359869ad2a1479ae529d07ad9db2b82779f33eb9c543d3/django_order-0.0.7-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "696538418ac55f1df50ffce916083b7c", "sha256": "625c6ec488376b9a567b46f95c2049e411725bbbd3efa3293e00f3608b7667e7"}, "downloads": -1, "filename": "django_order-0.0.7-py2.7.egg", "has_sig": false, "md5_digest": "696538418ac55f1df50ffce916083b7c", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 15860, "upload_time": "2011-09-15T11:10:34", "upload_time_iso_8601": "2011-09-15T11:10:34.783408Z", "url": "https://files.pythonhosted.org/packages/68/8e/49afc9c0352d6d78285e2821e2af72492eae35db0c212c7572b59fa24d69/django_order-0.0.7-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4333af6eee261218b90c6aba6952a0b0", "sha256": "6ea21fd8de38ab6a218ebd523455723c4950ca4ed4bb20462a1b04b57e5fb7a9"}, "downloads": -1, "filename": "django-order-0.0.7.tar.gz", "has_sig": false, "md5_digest": "4333af6eee261218b90c6aba6952a0b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7998, "upload_time": "2011-09-15T11:10:36", "upload_time_iso_8601": "2011-09-15T11:10:36.133358Z", "url": "https://files.pythonhosted.org/packages/96/53/650b3743cfde225b64f88ea87050254ab743d00e227c5413899a03fb8d1d/django-order-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8a147e1dfff6ebe2e8b7ba66890b2762", "sha256": "8b41ec82ff4c279b5bc4fb3a33d44a1a9331c255f1bb306992a6b03a737b53ef"}, "downloads": -1, "filename": "django_order-0.0.7-py2.6.egg", "has_sig": false, "md5_digest": "8a147e1dfff6ebe2e8b7ba66890b2762", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 15949, "upload_time": "2011-09-15T11:10:57", "upload_time_iso_8601": "2011-09-15T11:10:57.888939Z", "url": "https://files.pythonhosted.org/packages/42/dc/89624c16ec2bdb359869ad2a1479ae529d07ad9db2b82779f33eb9c543d3/django_order-0.0.7-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "696538418ac55f1df50ffce916083b7c", "sha256": "625c6ec488376b9a567b46f95c2049e411725bbbd3efa3293e00f3608b7667e7"}, "downloads": -1, "filename": "django_order-0.0.7-py2.7.egg", "has_sig": false, "md5_digest": "696538418ac55f1df50ffce916083b7c", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 15860, "upload_time": "2011-09-15T11:10:34", "upload_time_iso_8601": "2011-09-15T11:10:34.783408Z", "url": "https://files.pythonhosted.org/packages/68/8e/49afc9c0352d6d78285e2821e2af72492eae35db0c212c7572b59fa24d69/django_order-0.0.7-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4333af6eee261218b90c6aba6952a0b0", "sha256": "6ea21fd8de38ab6a218ebd523455723c4950ca4ed4bb20462a1b04b57e5fb7a9"}, "downloads": -1, "filename": "django-order-0.0.7.tar.gz", "has_sig": false, "md5_digest": "4333af6eee261218b90c6aba6952a0b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7998, "upload_time": "2011-09-15T11:10:36", "upload_time_iso_8601": "2011-09-15T11:10:36.133358Z", "url": "https://files.pythonhosted.org/packages/96/53/650b3743cfde225b64f88ea87050254ab743d00e227c5413899a03fb8d1d/django-order-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:28 2020"}