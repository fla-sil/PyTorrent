{"info": {"author": "Marcel Rieger", "author_email": "marcel.rieger@cern.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# Lorentz Boost Network (LBN) [![Build Status](https://travis-ci.org/riga/LBN.svg?branch=master)](https://travis-ci.org/riga/LBN) [![Package Status](https://badge.fury.io/py/lbn.svg)](https://badge.fury.io/py/lbn)\n\nTensorFlow implementation of the Lorentz Boost Network from [arXiv:1812.09722 [hep-ex]](https://arxiv.org/abs/1812.09722).\n\n\n### Usage example\n\n```python\nimport tensorflow as tf\nfrom lbn import LBN\n\n# initialize the LBN, set 10 combinations and pairwise boosting\nlbn = LBN(10, boost_mode=LBN.PAIRS)\n\n# create a feature tensor based on input four-vectors\nfeatures = lbn(four_vectors)\n\n# use the features as input for a subsequent, application-specific network\n...\n```\n\nOr with TensorFlow 2 and Keras:\n\n```python\nimport tensorflow as tf\nfrom lbn import LBN, LBNLayer\n\n# start a sequential model\nmodel = tf.keras.models.Sequential()\n\n# add the LBN layer\nmodel.add(LBNLayer(10, boost_mode=LBN.PAIRS))\n\n# add a dense layer\nmodel.add(tf.keras.layers.Dense(1024))\n\n# continue builing and training the model\n...\n```\n\n\n### Installation and dependencies\n\nVia [pip](https://pypi.python.org/pypi/lbn):\n\n```bash\npip install lbn\n```\n\nNumPy and TensorFlow are the only dependencies. Both TensorFlow v1 and v2 are supported.\n\n\n### Testing\n\nTests should be run for Python 2 and 3 and for TensorFlow 1 and 2. The following commands assume you are root directory of the LBN respository:\n\n```bash\npython -m unittest test\n\n# or via docker, python 2 and tf 1\ndocker run --rm -v `pwd`:/root/lbn -w /root/lbn tensorflow/tensorflow:1.13.2 python -m unittest test\n\n# or via docker, python 3 and tf 2\ndocker run --rm -v `pwd`:/root/lbn -w /root/lbn tensorflow/tensorflow:2.0.0-py3 python -m unittest test\n```\n\n\n### Contributing\n\nIf you like to contribute, we are happy to receive pull requests. Just make sure to add new test cases and run the tests. Also, please use a coding style that is compatible with our `.flake8` config.\n\n\n### Development\n\n- Original source hosted on [GitHub](https://github.com/riga/LBN)\n- Report issues, questions, feature requests on [GitHub Issues](https://github.com/riga/LBN/issues)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/riga/LBN", "keywords": "neural network,lorentz,lorentz transformation,lorentz boost,autonomous,feature,feature engineering,autonomous engineering,hep,four momenta,four vectors", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "lbn", "package_url": "https://pypi.org/project/lbn/", "platform": "", "project_url": "https://pypi.org/project/lbn/", "project_urls": {"Homepage": "https://github.com/riga/LBN"}, "release_url": "https://pypi.org/project/lbn/1.1.0/", "requires_dist": null, "requires_python": ">=2.7", "summary": "TensorFlow implementation of the Lorentz Boost Network (LBN). https://arxiv.org/abs/1812.09722.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Lorentz Boost Network (LBN) <a href=\"https://travis-ci.org/riga/LBN\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb6050bce1b06527686dc06210f961af6cefcaf2/68747470733a2f2f7472617669732d63692e6f72672f726967612f4c424e2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://badge.fury.io/py/lbn\" rel=\"nofollow\"><img alt=\"Package Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a62f2e51b293fb2e709a88105d1cda4c88dee2f/68747470733a2f2f62616467652e667572792e696f2f70792f6c626e2e737667\"></a></h1>\n<p>TensorFlow implementation of the Lorentz Boost Network from <a href=\"https://arxiv.org/abs/1812.09722\" rel=\"nofollow\">arXiv:1812.09722 [hep-ex]</a>.</p>\n<h3>Usage example</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n<span class=\"kn\">from</span> <span class=\"nn\">lbn</span> <span class=\"kn\">import</span> <span class=\"n\">LBN</span>\n\n<span class=\"c1\"># initialize the LBN, set 10 combinations and pairwise boosting</span>\n<span class=\"n\">lbn</span> <span class=\"o\">=</span> <span class=\"n\">LBN</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">boost_mode</span><span class=\"o\">=</span><span class=\"n\">LBN</span><span class=\"o\">.</span><span class=\"n\">PAIRS</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create a feature tensor based on input four-vectors</span>\n<span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"n\">lbn</span><span class=\"p\">(</span><span class=\"n\">four_vectors</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># use the features as input for a subsequent, application-specific network</span>\n<span class=\"o\">...</span>\n</pre>\n<p>Or with TensorFlow 2 and Keras:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n<span class=\"kn\">from</span> <span class=\"nn\">lbn</span> <span class=\"kn\">import</span> <span class=\"n\">LBN</span><span class=\"p\">,</span> <span class=\"n\">LBNLayer</span>\n\n<span class=\"c1\"># start a sequential model</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># add the LBN layer</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">LBNLayer</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">boost_mode</span><span class=\"o\">=</span><span class=\"n\">LBN</span><span class=\"o\">.</span><span class=\"n\">PAIRS</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># add a dense layer</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Dense</span><span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># continue builing and training the model</span>\n<span class=\"o\">...</span>\n</pre>\n<h3>Installation and dependencies</h3>\n<p>Via <a href=\"https://pypi.python.org/pypi/lbn\" rel=\"nofollow\">pip</a>:</p>\n<pre>pip install lbn\n</pre>\n<p>NumPy and TensorFlow are the only dependencies. Both TensorFlow v1 and v2 are supported.</p>\n<h3>Testing</h3>\n<p>Tests should be run for Python 2 and 3 and for TensorFlow 1 and 2. The following commands assume you are root directory of the LBN respository:</p>\n<pre>python -m unittest <span class=\"nb\">test</span>\n\n<span class=\"c1\"># or via docker, python 2 and tf 1</span>\ndocker run --rm -v <span class=\"sb\">`</span><span class=\"nb\">pwd</span><span class=\"sb\">`</span>:/root/lbn -w /root/lbn tensorflow/tensorflow:1.13.2 python -m unittest <span class=\"nb\">test</span>\n\n<span class=\"c1\"># or via docker, python 3 and tf 2</span>\ndocker run --rm -v <span class=\"sb\">`</span><span class=\"nb\">pwd</span><span class=\"sb\">`</span>:/root/lbn -w /root/lbn tensorflow/tensorflow:2.0.0-py3 python -m unittest <span class=\"nb\">test</span>\n</pre>\n<h3>Contributing</h3>\n<p>If you like to contribute, we are happy to receive pull requests. Just make sure to add new test cases and run the tests. Also, please use a coding style that is compatible with our <code>.flake8</code> config.</p>\n<h3>Development</h3>\n<ul>\n<li>Original source hosted on <a href=\"https://github.com/riga/LBN\" rel=\"nofollow\">GitHub</a></li>\n<li>Report issues, questions, feature requests on <a href=\"https://github.com/riga/LBN/issues\" rel=\"nofollow\">GitHub Issues</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6230358, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "87d58c1593a13836c3f33e37e0d95928", "sha256": "7eeb17f7b40bb412d4774d37d073812664c567be864f149950c947bc1cd39911"}, "downloads": -1, "filename": "lbn-0.0.1.tar.gz", "has_sig": false, "md5_digest": "87d58c1593a13836c3f33e37e0d95928", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2216, "upload_time": "2018-05-17T14:42:45", "upload_time_iso_8601": "2018-05-17T14:42:45.909738Z", "url": "https://files.pythonhosted.org/packages/73/af/8d7b2f6670cd6585dafe24f837325fe28510bb7d612a55fc73d6c543f2d4/lbn-0.0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "092625b003f5532e21cf450aa219cbe9", "sha256": "a701bb7e19a38ff446822ffa3bccf7205fa3badc8fef88e3b2dd04fc2bfc9c24"}, "downloads": -1, "filename": "lbn-1.0.0.tar.gz", "has_sig": false, "md5_digest": "092625b003f5532e21cf450aa219cbe9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12000, "upload_time": "2018-12-27T09:21:21", "upload_time_iso_8601": "2018-12-27T09:21:21.165930Z", "url": "https://files.pythonhosted.org/packages/15/3c/4911213a1dba76932f11f38d825c9e14e03347064f9595608b4188cc2f4e/lbn-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "94c0d3896a78dd5c541c54b81c833c17", "sha256": "3a615c88bccb2a12785a0c99becaed353a29c9c6172bc7d77fe99ce8e8084aca"}, "downloads": -1, "filename": "lbn-1.0.1.tar.gz", "has_sig": false, "md5_digest": "94c0d3896a78dd5c541c54b81c833c17", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 11971, "upload_time": "2018-12-27T19:16:25", "upload_time_iso_8601": "2018-12-27T19:16:25.862251Z", "url": "https://files.pythonhosted.org/packages/20/08/5e631309f89a63e21ee8be664eb9700a15723379d57da45702a9e4c6de41/lbn-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "4b54ad69b370c06735f374159932cc93", "sha256": "dfeec9f5d3d936cab56b106c562c9dfeba58dba76be7aa7ba7d91132c44502a0"}, "downloads": -1, "filename": "lbn-1.0.2.tar.gz", "has_sig": false, "md5_digest": "4b54ad69b370c06735f374159932cc93", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 12009, "upload_time": "2019-02-22T17:53:03", "upload_time_iso_8601": "2019-02-22T17:53:03.825518Z", "url": "https://files.pythonhosted.org/packages/e4/c3/a1b70e8e1098897057baf7bd99bbf2b3bcb710d3b40b1668acffca96c812/lbn-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "0a1750ddb1996af78f203a18b4f9fdc0", "sha256": "9e4688cbf48db4f49573a0ac6efa6e767777b889def8c2bf68fa2545adcc73c2"}, "downloads": -1, "filename": "lbn-1.0.3.tar.gz", "has_sig": false, "md5_digest": "0a1750ddb1996af78f203a18b4f9fdc0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 12090, "upload_time": "2019-02-22T18:00:35", "upload_time_iso_8601": "2019-02-22T18:00:35.627954Z", "url": "https://files.pythonhosted.org/packages/d6/92/0ff19f485c9ae545fcc88bf694d2ed7f47e662c2d977f51cc7f6de4d2a95/lbn-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "18111c49fccb69ef808187d1927c5d43", "sha256": "729b9a656c557f94e396d39faed890b7abe081d1ccf5338513181b917694b83e"}, "downloads": -1, "filename": "lbn-1.0.4.tar.gz", "has_sig": false, "md5_digest": "18111c49fccb69ef808187d1927c5d43", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 12594, "upload_time": "2019-12-02T14:28:28", "upload_time_iso_8601": "2019-12-02T14:28:28.078785Z", "url": "https://files.pythonhosted.org/packages/db/89/34a59079bd054586fa8d873c7e8848943fda23fcb5bcc041c903671777cd/lbn-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "54a8f32a8fda39650a00df833bb837f3", "sha256": "f0ddbabd66210bb3237f59892abd58807aa933b083bc85562f13d8891be83795"}, "downloads": -1, "filename": "lbn-1.0.5.tar.gz", "has_sig": false, "md5_digest": "54a8f32a8fda39650a00df833bb837f3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 12585, "upload_time": "2019-12-02T14:48:20", "upload_time_iso_8601": "2019-12-02T14:48:20.000812Z", "url": "https://files.pythonhosted.org/packages/85/14/dbaf26ca45d40ccae658705e3dfc8458b9edde4e80d98cc7c155b9a8ba05/lbn-1.0.5.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "b473786c3484fb9bdb83535cb0f3b671", "sha256": "1af60284bf61a07d1aac7ea7893617f578b98e889b67603afd90a3410d754328"}, "downloads": -1, "filename": "lbn-1.1.0.tar.gz", "has_sig": false, "md5_digest": "b473786c3484fb9bdb83535cb0f3b671", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 12998, "upload_time": "2019-12-02T19:21:05", "upload_time_iso_8601": "2019-12-02T19:21:05.449263Z", "url": "https://files.pythonhosted.org/packages/1c/8b/ee78aba02ef8e55cb3807939377b4b10aa8a10672dfa3109bb6327c2d913/lbn-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b473786c3484fb9bdb83535cb0f3b671", "sha256": "1af60284bf61a07d1aac7ea7893617f578b98e889b67603afd90a3410d754328"}, "downloads": -1, "filename": "lbn-1.1.0.tar.gz", "has_sig": false, "md5_digest": "b473786c3484fb9bdb83535cb0f3b671", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 12998, "upload_time": "2019-12-02T19:21:05", "upload_time_iso_8601": "2019-12-02T19:21:05.449263Z", "url": "https://files.pythonhosted.org/packages/1c/8b/ee78aba02ef8e55cb3807939377b4b10aa8a10672dfa3109bb6327c2d913/lbn-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:33 2020"}