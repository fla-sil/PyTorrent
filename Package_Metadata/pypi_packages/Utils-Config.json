{"info": {"author": "Juan Biondi", "author_email": "juanernestobiondi@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5"], "description": "\nUtils-Config\n============\n\nLibrary to use .json files as configuration objects using namedtuple.\n\nThis library let\u2019s you use ``.json`` files as \u201cobjects\u201d within your\ncode.\n\nInstallation\n------------\n\n.. code-block:: console\n\n   pip install git+https://github.com/yeyeto2788/Utils-Config\n\n\nUsage\n-----\n\nCreate a file called `config.json` (you can change the name to\nsomething you like) and add some content to it.\n\nIn this demo we add the following data.\n\n.. code-block:: json\n\n   {\n     \"temperature\": 30,\n     \"screen\": {\n       \"width\": 640,\n       \"height\": 480\n     },\n     \"name\": null,\n     \"id\": \"4V3RYCR4ZY1D\"\n   }\n\n\nNow let\u2019s head over Python and test the module and its functions.\n\nImporting the module and loading our `.json` file.\n\n.. code-block:: python\n\n   import utils_config\n   config_file=\"./config.json\"\n   config = utils_config.load_config(config_file)\n\n\nNow let\u2019s see what we\u2019ve got in the `config` variable, serializing it\ninto a dictionary.\n\n.. code-block:: python\n\n   utils_config.serialize_config(config)\n\nLet\u2019s access to its keys/attributes.\n\n.. code-block:: python\n\n   config.temperature\n   config.screen.width\n   config.name\n   config.id\n\nEdit the current configuration (Take into account that this function\nwill return a new `configuration` namedtuple)\n\n.. code-block:: python\n\n   config = utils_config.edit_config(config, {\"id\": \"another_id\"})\n   config.id\n\nSave the configuration to a file.\n\n.. code-block:: python\n\n   utils_config.save_config(config_file, config)\n\nContributing\n------------\n\n**All contributions, pull requests and comments are welcome!**\n\nWhen contributing it is important to test the module in order to make sure everything is working as expected. For that install dependencies to run the tests.\n\n.. code-block:: console\n\n   pip install pytest pytest-cov mock pylint\n\nRunning tests and see coverage.\n\n.. code-block:: console\n\n   py.test --cov -v --cov-config=.coveragerc --cov-report=html\n\nThis will generate a report with the coverage which is at **100%** now,\nlet\u2019s try to keep it at the same percentage.\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yeyeto2788/Utils-Config", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Utils-Config", "package_url": "https://pypi.org/project/Utils-Config/", "platform": "", "project_url": "https://pypi.org/project/Utils-Config/", "project_urls": {"Homepage": "https://github.com/yeyeto2788/Utils-Config"}, "release_url": "https://pypi.org/project/Utils-Config/1.0.0/", "requires_dist": null, "requires_python": ">=3.5.0", "summary": "Library to use .json files as configuration objects using namedtuple.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Library to use .json files as configuration objects using namedtuple.</p>\n<p>This library let\u2019s you use <tt>.json</tt> files as \u201cobjects\u201d within your\ncode.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre><span class=\"go\">pip install git+https://github.com/yeyeto2788/Utils-Config</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Create a file called <cite>config.json</cite> (you can change the name to\nsomething you like) and add some content to it.</p>\n<p>In this demo we add the following data.</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"temperature\"</span><span class=\"p\">:</span> <span class=\"mi\">30</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"screen\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"width\"</span><span class=\"p\">:</span> <span class=\"mi\">640</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"height\"</span><span class=\"p\">:</span> <span class=\"mi\">480</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"4V3RYCR4ZY1D\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Now let\u2019s head over Python and test the module and its functions.</p>\n<p>Importing the module and loading our <cite>.json</cite> file.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">utils_config</span>\n<span class=\"n\">config_file</span><span class=\"o\">=</span><span class=\"s2\">\"./config.json\"</span>\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">utils_config</span><span class=\"o\">.</span><span class=\"n\">load_config</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"p\">)</span>\n</pre>\n<p>Now let\u2019s see what we\u2019ve got in the <cite>config</cite> variable, serializing it\ninto a dictionary.</p>\n<pre><span class=\"n\">utils_config</span><span class=\"o\">.</span><span class=\"n\">serialize_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n</pre>\n<p>Let\u2019s access to its keys/attributes.</p>\n<pre><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">temperature</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">screen</span><span class=\"o\">.</span><span class=\"n\">width</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">name</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">id</span>\n</pre>\n<p>Edit the current configuration (Take into account that this function\nwill return a new <cite>configuration</cite> namedtuple)</p>\n<pre><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">utils_config</span><span class=\"o\">.</span><span class=\"n\">edit_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"another_id\"</span><span class=\"p\">})</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">id</span>\n</pre>\n<p>Save the configuration to a file.</p>\n<pre><span class=\"n\">utils_config</span><span class=\"o\">.</span><span class=\"n\">save_config</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p><strong>All contributions, pull requests and comments are welcome!</strong></p>\n<p>When contributing it is important to test the module in order to make sure everything is working as expected. For that install dependencies to run the tests.</p>\n<pre><span class=\"go\">pip install pytest pytest-cov mock pylint</span>\n</pre>\n<p>Running tests and see coverage.</p>\n<pre><span class=\"go\">py.test --cov -v --cov-config=.coveragerc --cov-report=html</span>\n</pre>\n<p>This will generate a report with the coverage which is at <strong>100%</strong> now,\nlet\u2019s try to keep it at the same percentage.</p>\n</div>\n\n          </div>"}, "last_serial": 6452718, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "81eddfdf37e892eb695293a7823f62e0", "sha256": "49c8573018ba387d40f45df42d0a8fabfccd59aecda86f74ba46662fdb60dcce"}, "downloads": -1, "filename": "Utils_Config-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "81eddfdf37e892eb695293a7823f62e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 5215, "upload_time": "2020-01-14T16:37:11", "upload_time_iso_8601": "2020-01-14T16:37:11.228947Z", "url": "https://files.pythonhosted.org/packages/08/65/a2597196c00724c3db81a24e326d74560196b55d5b797c5bc0ff72609aa6/Utils_Config-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59333b721ef4b9f392485e80ee9ba89f", "sha256": "ab3f2caae0d3ad2f2cf2e261c1117be0bec3f1d7a2e924f85ee024f74e6e995b"}, "downloads": -1, "filename": "Utils-Config-1.0.0.tar.gz", "has_sig": false, "md5_digest": "59333b721ef4b9f392485e80ee9ba89f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 10927, "upload_time": "2020-01-14T16:37:14", "upload_time_iso_8601": "2020-01-14T16:37:14.607944Z", "url": "https://files.pythonhosted.org/packages/60/ae/57eb29a546c7c0a1b612404e296f9321cd0e81f8c28f2f9315daa46c50a8/Utils-Config-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "81eddfdf37e892eb695293a7823f62e0", "sha256": "49c8573018ba387d40f45df42d0a8fabfccd59aecda86f74ba46662fdb60dcce"}, "downloads": -1, "filename": "Utils_Config-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "81eddfdf37e892eb695293a7823f62e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 5215, "upload_time": "2020-01-14T16:37:11", "upload_time_iso_8601": "2020-01-14T16:37:11.228947Z", "url": "https://files.pythonhosted.org/packages/08/65/a2597196c00724c3db81a24e326d74560196b55d5b797c5bc0ff72609aa6/Utils_Config-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59333b721ef4b9f392485e80ee9ba89f", "sha256": "ab3f2caae0d3ad2f2cf2e261c1117be0bec3f1d7a2e924f85ee024f74e6e995b"}, "downloads": -1, "filename": "Utils-Config-1.0.0.tar.gz", "has_sig": false, "md5_digest": "59333b721ef4b9f392485e80ee9ba89f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 10927, "upload_time": "2020-01-14T16:37:14", "upload_time_iso_8601": "2020-01-14T16:37:14.607944Z", "url": "https://files.pythonhosted.org/packages/60/ae/57eb29a546c7c0a1b612404e296f9321cd0e81f8c28f2f9315daa46c50a8/Utils-Config-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:38:47 2020"}