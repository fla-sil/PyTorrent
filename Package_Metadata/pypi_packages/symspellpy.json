{"info": {"author": "mmb L", "author_email": "mammothb@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "symspellpy <br>\n[![PyPI version](https://badge.fury.io/py/symspellpy.svg)](https://badge.fury.io/py/symspellpy)\n[![Build Status](https://travis-ci.com/mammothb/symspellpy.svg?branch=master)](https://travis-ci.com/mammothb/symspellpy)\n[![Documentation Status](https://readthedocs.org/projects/symspellpy/badge/?version=latest)](https://symspellpy.readthedocs.io/en/latest/?badge=latest)\n[![codecov](https://codecov.io/gh/mammothb/symspellpy/branch/master/graph/badge.svg)](https://codecov.io/gh/mammothb/symspellpy)\n========\n\nsymspellpy is a Python port of [SymSpell](https://github.com/wolfgarbe/SymSpell) v6.5, which provides much higher speed and lower memory consumption. Unit tests\nfrom the original project are implemented to ensure the accuracy of the port.\n\nPlease note that the port has not been optimized for speed.\n\nUsage\n========\n### Installing the `symspellpy` module\n```pip install -U symspellpy```\n\n### Copying the frequency dictionary to your project\nCopy `frequency_dictionary_en_82_765.txt` and `frequency_bigramdictionary_en_243_342.txt` (found in the inner `symspellpy`\ndirectory) to your project directory so you end up with the following layout:\n```\nproject_dir\n  +-frequency_dictionary_en_82_765.txt\n  +-frequency_bigramdictionary_en_243_342.txt\n  \\-project.py\n```\n\n### Adding new terms\n  - Use `load_dictionary(corpus=<path/to/dictionary.txt>, <term_index>,<count_index>)`. `dictionary.txt` should contain:\n```\n<term> <count>\n<term> <count>\n...\n<term> <count>\n```\nwith `term_index` indicating the column number of terms and `count_index` indicating the column number of counts/frequency.\n  - Append `<term> <count>` to the provided `frequency_dictionary_en_82_765.txt`\n  - Use the method `create_dictionary_entry(key=<term>, count=<count>)`\n\n### Sample usage (`create_dictionary`)\n```python\nimport os\n\nfrom symspellpy.symspellpy import SymSpell  # import the module\n\ndef main():\n    # maximum edit distance per dictionary precalculation\n    max_edit_distance_dictionary = 2\n    prefix_length = 7\n    # create object\n    sym_spell = SymSpell(max_edit_distance_dictionary, prefix_length)\n\n    # create dictionary using corpus.txt\n    if not sym_spell.create_dictionary(<path/to/corpus.txt>):\n        print(\"Corpus file not found\")\n        return\n\n    for key, count in sym_spell.words.items():\n        print(\"{} {}\".format(key, count))\n\nif __name__ == \"__main__\":\n    main()\n```\n`corpus.txt` should contain:\n```\nabc abc-def abc_def abc'def abc qwe qwe1 1qwe q1we 1234 1234\n```\nExpected output:\n```\nabc 4\ndef 2\nabc'def 1\nqwe 1\nqwe1 1\n1qwe 1\nq1we 1\n1234 2\n```\n\n### Sample usage (`lookup` and `lookup_compound`)\nUsing `project.py` (code is more verbose than required to allow explanation of method arguments)\n```python\nimport pkg_resources\n\nfrom symspellpy.symspellpy import SymSpell, Verbosity  # import the module\n\ndef main():\n    # maximum edit distance per dictionary precalculation\n    max_edit_distance_dictionary = 2\n    prefix_length = 7\n    # create object\n    sym_spell = SymSpell(max_edit_distance_dictionary, prefix_length)\n    # load dictionary\n    dictionary_path = pkg_resources.resource_filename(\n        \"symspellpy\", \"frequency_dictionary_en_82_765.txt\")\n    bigram_path = pkg_resources.resource_filename(\n        \"symspellpy\", \"frequency_bigramdictionary_en_243_342.txt\")\n    # term_index is the column of the term and count_index is the\n    # column of the term frequency\n    if not sym_spell.load_dictionary(dictionary_path, term_index=0,\n                                     count_index=1):\n        print(\"Dictionary file not found\")\n        return\n    if not sym_spell.load_bigram_dictionary(bigram_path, term_index=0,\n                                            count_index=2):\n        print(\"Bigram dictionary file not found\")\n        return\n\n    # lookup suggestions for single-word input strings\n    input_term = \"memebers\"  # misspelling of \"members\"\n    # max edit distance per lookup\n    # (max_edit_distance_lookup <= max_edit_distance_dictionary)\n    max_edit_distance_lookup = 2\n    suggestion_verbosity = Verbosity.CLOSEST  # TOP, CLOSEST, ALL\n    suggestions = sym_spell.lookup(input_term, suggestion_verbosity,\n                                   max_edit_distance_lookup)\n    # display suggestion term, term frequency, and edit distance\n    for suggestion in suggestions:\n        print(\"{}, {}, {}\".format(suggestion.term, suggestion.distance,\n                                  suggestion.count))\n\n    # lookup suggestions for multi-word input strings (supports compound\n    # splitting & merging)\n    input_term = (\"whereis th elove hehad dated forImuch of thepast who \"\n                  \"couqdn'tread in sixtgrade and ins pired him\")\n    # max edit distance per lookup (per single word, not per whole input string)\n    max_edit_distance_lookup = 2\n    suggestions = sym_spell.lookup_compound(input_term,\n                                            max_edit_distance_lookup)\n    # display suggestion term, edit distance, and term frequency\n    for suggestion in suggestions:\n        print(\"{}, {}, {}\".format(suggestion.term, suggestion.distance,\n                                  suggestion.count))\n\nif __name__ == \"__main__\":\n    main()\n```\n##### Expected output:\n`members, 1, 226656153`<br><br>\n`where is the love he had dated for much of the past who couldn't read in six grade and inspired him, 9, 0`\n\n### Sample usage (`word_segmentation`)\nUsing `project.py` (code is more verbose than required to allow explanation of\nmethod arguments)\n```python\nimport pkg_resources\n\nfrom symspellpy.symspellpy import SymSpell  # import the module\n\ndef main():\n    # maximum edit distance per dictionary precalculation\n    max_edit_distance_dictionary = 0\n    prefix_length = 7\n    # create object\n    sym_spell = SymSpell(max_edit_distance_dictionary, prefix_length)\n    # load dictionary\n    dictionary_path = pkg_resources.resource_filename(\n        \"symspellpy\", \"frequency_dictionary_en_82_765.txt\")\n    bigram_path = pkg_resources.resource_filename(\n        \"symspellpy\", \"frequency_bigramdictionary_en_243_342.txt\")\n    # term_index is the column of the term and count_index is the\n    # column of the term frequency\n    if not sym_spell.load_dictionary(dictionary_path, term_index=0,\n                                     count_index=1):\n        print(\"Dictionary file not found\")\n        return\n    if not sym_spell.load_bigram_dictionary(dictionary_path, term_index=0,\n                                            count_index=2):\n        print(\"Bigram dictionary file not found\")\n        return\n\n    # a sentence without any spaces\n    input_term = \"thequickbrownfoxjumpsoverthelazydog\"\n\n    result = sym_spell.word_segmentation(input_term)\n    # display suggestion term, term frequency, and edit distance\n    print(\"{}, {}, {}\".format(result.corrected_string, result.distance_sum,\n                              result.log_prob_sum))\n\nif __name__ == \"__main__\":\n    main()\n```\n##### Expected output:\n`the quick brown fox jumps over the lazy dog 8 -34.491167981910635`\n\n\n### Transferring casing\n\nTo transfer the casing (eg uppercase/lowercase) from the original phrase\nto the typo-corrected one, use the `transfer_casing` boolean flag of \nthe `lookup()` and the `lookup_compound()` methods:\n\n`lookup_compound()`:\n```\nsuggestions = sym_spell.lookup_compound(input_term,\n                                        max_edit_distance_lookup,\n                                        transfer_casing=True)\n```\n\n`lookup()`:\n```\nsuggestions = sym_spell.lookup(input_term,\n                               suggestion_verbosity,\n                               max_edit_distance_lookup,\n                               transfer_casing=True)\n```\n\n\n\n\nCHANGELOG <br>\n==============\n\n## 6.5.2 (2019-10-23)\n---------------------\n- Modified `load_bigram_dictionary` to allow dictionary entries to be split\ninto only 2 parts when using a custom separator\n- Added dictionary files to wheels so `pkg_resources` could be used to access\nthem\n\n## 6.5.1 (2019-10-08)\n---------------------\n- Added `separator` argument to allow user to choose custom separator for `load_dictionary`\n\n## 6.5.0 (2019-09-21)\n---------------------\n- Added `load_bigram_dictionary` and bigram dictionary `frequency_bigramdictionary_en_243_342.txt`\n- Updated `lookup_compound` algorithm\n- Added `Levenshtein` to compute edit distance\n- Added `save_pickle_stream` and `load_pickle_stream` to save/load SymSpell data alongside other structure (contribution by [marcoffee](https://github.com/marcoffee))\n\n## 6.3.9 (2019-08-06)\n---------------------\n- Added `transfer_casing` to `lookup` and `lookup_compound`\n- Fixed prefix length check in `_edits_prefix`\n\n## 6.3.8 (2019-03-21)\n---------------------\n- Implemented `delete_dictionary_entry`\n- Improved performance by using python builtin hashing\n- Added versioning of the pickle\n\n## 6.3.7 (2019-02-18)\n---------------------\n- Fixed `include_unknown` in `lookup`\n- Removed unused `initial_capacity` argument\n- Improved `_get_str_hash` performance\n- Implemented `save_pickle` and `load_pickle` to avoid having to create the\ndictionary every time\n\n## 6.3.6 (2019-02-11)\n---------------------\n- Added `create_dictionary()` feature\n\n## 6.3.5 (2019-01-14)\n---------------------\n- Fixed `lookup_compound()` to return the correct `distance`\n\n## 6.3.4 (2019-01-04)\n---------------------\n- Added `<self._replaced_words = dict()>` to track number of misspelled words\n- Added `ignore_token` to `word_segmentation()` to ignore words with regular expression\n\n## 6.3.3 (2018-12-05)\n---------------------\n- Added `word_segmentation()` feature\n\n## 6.3.2 (2018-10-23)\n---------------------\n- Added `encoding` option to `load_dictionary()`\n\n## 6.3.1 (2018-08-30)\n---------------------\n- Create a package for `symspellpy`\n\n## 6.3.0 (2018-08-13)\n---------------------\n- Ported [SymSpell](https://github.com/wolfgarbe/SymSpell) v6.3\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mammothb/symspellpy", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "symspellpy", "package_url": "https://pypi.org/project/symspellpy/", "platform": "", "project_url": "https://pypi.org/project/symspellpy/", "project_urls": {"Homepage": "https://github.com/mammothb/symspellpy"}, "release_url": "https://pypi.org/project/symspellpy/6.5.2/", "requires_dist": ["numpy (>=1.13.1)"], "requires_python": ">=3.4", "summary": "Python SymSpell", "version": "6.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>symspellpy <br>\n<a href=\"https://badge.fury.io/py/symspellpy\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c5a92c26979406861e48d84352a8b22722a10d6c/68747470733a2f2f62616467652e667572792e696f2f70792f73796d7370656c6c70792e737667\"></a>\n<a href=\"https://travis-ci.com/mammothb/symspellpy\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b94721af22264ccb8d3732db1d80101eb3708374/68747470733a2f2f7472617669732d63692e636f6d2f6d616d6d6f7468622f73796d7370656c6c70792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://symspellpy.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/87aba74df8cdffb51b5bf4460e1f0191b3f8e73c/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f73796d7370656c6c70792f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh/mammothb/symspellpy\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90d4ae9dfacd4269944b86198e4a7f4b1e6af565/68747470733a2f2f636f6465636f762e696f2f67682f6d616d6d6f7468622f73796d7370656c6c70792f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></h1>\n<p>symspellpy is a Python port of <a href=\"https://github.com/wolfgarbe/SymSpell\" rel=\"nofollow\">SymSpell</a> v6.5, which provides much higher speed and lower memory consumption. Unit tests\nfrom the original project are implemented to ensure the accuracy of the port.</p>\n<p>Please note that the port has not been optimized for speed.</p>\n<h1>Usage</h1>\n<h3>Installing the <code>symspellpy</code> module</h3>\n<p><code>pip install -U symspellpy</code></p>\n<h3>Copying the frequency dictionary to your project</h3>\n<p>Copy <code>frequency_dictionary_en_82_765.txt</code> and <code>frequency_bigramdictionary_en_243_342.txt</code> (found in the inner <code>symspellpy</code>\ndirectory) to your project directory so you end up with the following layout:</p>\n<pre><code>project_dir\n  +-frequency_dictionary_en_82_765.txt\n  +-frequency_bigramdictionary_en_243_342.txt\n  \\-project.py\n</code></pre>\n<h3>Adding new terms</h3>\n<ul>\n<li>Use <code>load_dictionary(corpus=&lt;path/to/dictionary.txt&gt;, &lt;term_index&gt;,&lt;count_index&gt;)</code>. <code>dictionary.txt</code> should contain:</li>\n</ul>\n<pre><code>&lt;term&gt; &lt;count&gt;\n&lt;term&gt; &lt;count&gt;\n...\n&lt;term&gt; &lt;count&gt;\n</code></pre>\n<p>with <code>term_index</code> indicating the column number of terms and <code>count_index</code> indicating the column number of counts/frequency.</p>\n<ul>\n<li>Append <code>&lt;term&gt; &lt;count&gt;</code> to the provided <code>frequency_dictionary_en_82_765.txt</code></li>\n<li>Use the method <code>create_dictionary_entry(key=&lt;term&gt;, count=&lt;count&gt;)</code></li>\n</ul>\n<h3>Sample usage (<code>create_dictionary</code>)</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">symspellpy.symspellpy</span> <span class=\"kn\">import</span> <span class=\"n\">SymSpell</span>  <span class=\"c1\"># import the module</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># maximum edit distance per dictionary precalculation</span>\n    <span class=\"n\">max_edit_distance_dictionary</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n    <span class=\"n\">prefix_length</span> <span class=\"o\">=</span> <span class=\"mi\">7</span>\n    <span class=\"c1\"># create object</span>\n    <span class=\"n\">sym_spell</span> <span class=\"o\">=</span> <span class=\"n\">SymSpell</span><span class=\"p\">(</span><span class=\"n\">max_edit_distance_dictionary</span><span class=\"p\">,</span> <span class=\"n\">prefix_length</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># create dictionary using corpus.txt</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">sym_spell</span><span class=\"o\">.</span><span class=\"n\">create_dictionary</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">corpus</span><span class=\"o\">.</span><span class=\"n\">txt</span><span class=\"o\">&gt;</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Corpus file not found\"</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">count</span> <span class=\"ow\">in</span> <span class=\"n\">sym_spell</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"p\">))</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<p><code>corpus.txt</code> should contain:</p>\n<pre><code>abc abc-def abc_def abc'def abc qwe qwe1 1qwe q1we 1234 1234\n</code></pre>\n<p>Expected output:</p>\n<pre><code>abc 4\ndef 2\nabc'def 1\nqwe 1\nqwe1 1\n1qwe 1\nq1we 1\n1234 2\n</code></pre>\n<h3>Sample usage (<code>lookup</code> and <code>lookup_compound</code>)</h3>\n<p>Using <code>project.py</code> (code is more verbose than required to allow explanation of method arguments)</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pkg_resources</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">symspellpy.symspellpy</span> <span class=\"kn\">import</span> <span class=\"n\">SymSpell</span><span class=\"p\">,</span> <span class=\"n\">Verbosity</span>  <span class=\"c1\"># import the module</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># maximum edit distance per dictionary precalculation</span>\n    <span class=\"n\">max_edit_distance_dictionary</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n    <span class=\"n\">prefix_length</span> <span class=\"o\">=</span> <span class=\"mi\">7</span>\n    <span class=\"c1\"># create object</span>\n    <span class=\"n\">sym_spell</span> <span class=\"o\">=</span> <span class=\"n\">SymSpell</span><span class=\"p\">(</span><span class=\"n\">max_edit_distance_dictionary</span><span class=\"p\">,</span> <span class=\"n\">prefix_length</span><span class=\"p\">)</span>\n    <span class=\"c1\"># load dictionary</span>\n    <span class=\"n\">dictionary_path</span> <span class=\"o\">=</span> <span class=\"n\">pkg_resources</span><span class=\"o\">.</span><span class=\"n\">resource_filename</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"symspellpy\"</span><span class=\"p\">,</span> <span class=\"s2\">\"frequency_dictionary_en_82_765.txt\"</span><span class=\"p\">)</span>\n    <span class=\"n\">bigram_path</span> <span class=\"o\">=</span> <span class=\"n\">pkg_resources</span><span class=\"o\">.</span><span class=\"n\">resource_filename</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"symspellpy\"</span><span class=\"p\">,</span> <span class=\"s2\">\"frequency_bigramdictionary_en_243_342.txt\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># term_index is the column of the term and count_index is the</span>\n    <span class=\"c1\"># column of the term frequency</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">sym_spell</span><span class=\"o\">.</span><span class=\"n\">load_dictionary</span><span class=\"p\">(</span><span class=\"n\">dictionary_path</span><span class=\"p\">,</span> <span class=\"n\">term_index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                                     <span class=\"n\">count_index</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Dictionary file not found\"</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">sym_spell</span><span class=\"o\">.</span><span class=\"n\">load_bigram_dictionary</span><span class=\"p\">(</span><span class=\"n\">bigram_path</span><span class=\"p\">,</span> <span class=\"n\">term_index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                                            <span class=\"n\">count_index</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Bigram dictionary file not found\"</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span>\n\n    <span class=\"c1\"># lookup suggestions for single-word input strings</span>\n    <span class=\"n\">input_term</span> <span class=\"o\">=</span> <span class=\"s2\">\"memebers\"</span>  <span class=\"c1\"># misspelling of \"members\"</span>\n    <span class=\"c1\"># max edit distance per lookup</span>\n    <span class=\"c1\"># (max_edit_distance_lookup &lt;= max_edit_distance_dictionary)</span>\n    <span class=\"n\">max_edit_distance_lookup</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n    <span class=\"n\">suggestion_verbosity</span> <span class=\"o\">=</span> <span class=\"n\">Verbosity</span><span class=\"o\">.</span><span class=\"n\">CLOSEST</span>  <span class=\"c1\"># TOP, CLOSEST, ALL</span>\n    <span class=\"n\">suggestions</span> <span class=\"o\">=</span> <span class=\"n\">sym_spell</span><span class=\"o\">.</span><span class=\"n\">lookup</span><span class=\"p\">(</span><span class=\"n\">input_term</span><span class=\"p\">,</span> <span class=\"n\">suggestion_verbosity</span><span class=\"p\">,</span>\n                                   <span class=\"n\">max_edit_distance_lookup</span><span class=\"p\">)</span>\n    <span class=\"c1\"># display suggestion term, term frequency, and edit distance</span>\n    <span class=\"k\">for</span> <span class=\"n\">suggestion</span> <span class=\"ow\">in</span> <span class=\"n\">suggestions</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\">, </span><span class=\"si\">{}</span><span class=\"s2\">, </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">suggestion</span><span class=\"o\">.</span><span class=\"n\">term</span><span class=\"p\">,</span> <span class=\"n\">suggestion</span><span class=\"o\">.</span><span class=\"n\">distance</span><span class=\"p\">,</span>\n                                  <span class=\"n\">suggestion</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># lookup suggestions for multi-word input strings (supports compound</span>\n    <span class=\"c1\"># splitting &amp; merging)</span>\n    <span class=\"n\">input_term</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">\"whereis th elove hehad dated forImuch of thepast who \"</span>\n                  <span class=\"s2\">\"couqdn'tread in sixtgrade and ins pired him\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># max edit distance per lookup (per single word, not per whole input string)</span>\n    <span class=\"n\">max_edit_distance_lookup</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n    <span class=\"n\">suggestions</span> <span class=\"o\">=</span> <span class=\"n\">sym_spell</span><span class=\"o\">.</span><span class=\"n\">lookup_compound</span><span class=\"p\">(</span><span class=\"n\">input_term</span><span class=\"p\">,</span>\n                                            <span class=\"n\">max_edit_distance_lookup</span><span class=\"p\">)</span>\n    <span class=\"c1\"># display suggestion term, edit distance, and term frequency</span>\n    <span class=\"k\">for</span> <span class=\"n\">suggestion</span> <span class=\"ow\">in</span> <span class=\"n\">suggestions</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\">, </span><span class=\"si\">{}</span><span class=\"s2\">, </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">suggestion</span><span class=\"o\">.</span><span class=\"n\">term</span><span class=\"p\">,</span> <span class=\"n\">suggestion</span><span class=\"o\">.</span><span class=\"n\">distance</span><span class=\"p\">,</span>\n                                  <span class=\"n\">suggestion</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">))</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<h5>Expected output:</h5>\n<p><code>members, 1, 226656153</code><br><br>\n<code>where is the love he had dated for much of the past who couldn't read in six grade and inspired him, 9, 0</code></p>\n<h3>Sample usage (<code>word_segmentation</code>)</h3>\n<p>Using <code>project.py</code> (code is more verbose than required to allow explanation of\nmethod arguments)</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pkg_resources</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">symspellpy.symspellpy</span> <span class=\"kn\">import</span> <span class=\"n\">SymSpell</span>  <span class=\"c1\"># import the module</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># maximum edit distance per dictionary precalculation</span>\n    <span class=\"n\">max_edit_distance_dictionary</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">prefix_length</span> <span class=\"o\">=</span> <span class=\"mi\">7</span>\n    <span class=\"c1\"># create object</span>\n    <span class=\"n\">sym_spell</span> <span class=\"o\">=</span> <span class=\"n\">SymSpell</span><span class=\"p\">(</span><span class=\"n\">max_edit_distance_dictionary</span><span class=\"p\">,</span> <span class=\"n\">prefix_length</span><span class=\"p\">)</span>\n    <span class=\"c1\"># load dictionary</span>\n    <span class=\"n\">dictionary_path</span> <span class=\"o\">=</span> <span class=\"n\">pkg_resources</span><span class=\"o\">.</span><span class=\"n\">resource_filename</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"symspellpy\"</span><span class=\"p\">,</span> <span class=\"s2\">\"frequency_dictionary_en_82_765.txt\"</span><span class=\"p\">)</span>\n    <span class=\"n\">bigram_path</span> <span class=\"o\">=</span> <span class=\"n\">pkg_resources</span><span class=\"o\">.</span><span class=\"n\">resource_filename</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"symspellpy\"</span><span class=\"p\">,</span> <span class=\"s2\">\"frequency_bigramdictionary_en_243_342.txt\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># term_index is the column of the term and count_index is the</span>\n    <span class=\"c1\"># column of the term frequency</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">sym_spell</span><span class=\"o\">.</span><span class=\"n\">load_dictionary</span><span class=\"p\">(</span><span class=\"n\">dictionary_path</span><span class=\"p\">,</span> <span class=\"n\">term_index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                                     <span class=\"n\">count_index</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Dictionary file not found\"</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">sym_spell</span><span class=\"o\">.</span><span class=\"n\">load_bigram_dictionary</span><span class=\"p\">(</span><span class=\"n\">dictionary_path</span><span class=\"p\">,</span> <span class=\"n\">term_index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                                            <span class=\"n\">count_index</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Bigram dictionary file not found\"</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span>\n\n    <span class=\"c1\"># a sentence without any spaces</span>\n    <span class=\"n\">input_term</span> <span class=\"o\">=</span> <span class=\"s2\">\"thequickbrownfoxjumpsoverthelazydog\"</span>\n\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">sym_spell</span><span class=\"o\">.</span><span class=\"n\">word_segmentation</span><span class=\"p\">(</span><span class=\"n\">input_term</span><span class=\"p\">)</span>\n    <span class=\"c1\"># display suggestion term, term frequency, and edit distance</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\">, </span><span class=\"si\">{}</span><span class=\"s2\">, </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">corrected_string</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">distance_sum</span><span class=\"p\">,</span>\n                              <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">log_prob_sum</span><span class=\"p\">))</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<h5>Expected output:</h5>\n<p><code>the quick brown fox jumps over the lazy dog 8 -34.491167981910635</code></p>\n<h3>Transferring casing</h3>\n<p>To transfer the casing (eg uppercase/lowercase) from the original phrase\nto the typo-corrected one, use the <code>transfer_casing</code> boolean flag of\nthe <code>lookup()</code> and the <code>lookup_compound()</code> methods:</p>\n<p><code>lookup_compound()</code>:</p>\n<pre><code>suggestions = sym_spell.lookup_compound(input_term,\n                                        max_edit_distance_lookup,\n                                        transfer_casing=True)\n</code></pre>\n<p><code>lookup()</code>:</p>\n<pre><code>suggestions = sym_spell.lookup(input_term,\n                               suggestion_verbosity,\n                               max_edit_distance_lookup,\n                               transfer_casing=True)\n</code></pre>\n<h1>CHANGELOG <br></h1>\n<h2>6.5.2 (2019-10-23)</h2>\n<hr>\n<ul>\n<li>Modified <code>load_bigram_dictionary</code> to allow dictionary entries to be split\ninto only 2 parts when using a custom separator</li>\n<li>Added dictionary files to wheels so <code>pkg_resources</code> could be used to access\nthem</li>\n</ul>\n<h2>6.5.1 (2019-10-08)</h2>\n<hr>\n<ul>\n<li>Added <code>separator</code> argument to allow user to choose custom separator for <code>load_dictionary</code></li>\n</ul>\n<h2>6.5.0 (2019-09-21)</h2>\n<hr>\n<ul>\n<li>Added <code>load_bigram_dictionary</code> and bigram dictionary <code>frequency_bigramdictionary_en_243_342.txt</code></li>\n<li>Updated <code>lookup_compound</code> algorithm</li>\n<li>Added <code>Levenshtein</code> to compute edit distance</li>\n<li>Added <code>save_pickle_stream</code> and <code>load_pickle_stream</code> to save/load SymSpell data alongside other structure (contribution by <a href=\"https://github.com/marcoffee\" rel=\"nofollow\">marcoffee</a>)</li>\n</ul>\n<h2>6.3.9 (2019-08-06)</h2>\n<hr>\n<ul>\n<li>Added <code>transfer_casing</code> to <code>lookup</code> and <code>lookup_compound</code></li>\n<li>Fixed prefix length check in <code>_edits_prefix</code></li>\n</ul>\n<h2>6.3.8 (2019-03-21)</h2>\n<hr>\n<ul>\n<li>Implemented <code>delete_dictionary_entry</code></li>\n<li>Improved performance by using python builtin hashing</li>\n<li>Added versioning of the pickle</li>\n</ul>\n<h2>6.3.7 (2019-02-18)</h2>\n<hr>\n<ul>\n<li>Fixed <code>include_unknown</code> in <code>lookup</code></li>\n<li>Removed unused <code>initial_capacity</code> argument</li>\n<li>Improved <code>_get_str_hash</code> performance</li>\n<li>Implemented <code>save_pickle</code> and <code>load_pickle</code> to avoid having to create the\ndictionary every time</li>\n</ul>\n<h2>6.3.6 (2019-02-11)</h2>\n<hr>\n<ul>\n<li>Added <code>create_dictionary()</code> feature</li>\n</ul>\n<h2>6.3.5 (2019-01-14)</h2>\n<hr>\n<ul>\n<li>Fixed <code>lookup_compound()</code> to return the correct <code>distance</code></li>\n</ul>\n<h2>6.3.4 (2019-01-04)</h2>\n<hr>\n<ul>\n<li>Added <code>&lt;self._replaced_words = dict()&gt;</code> to track number of misspelled words</li>\n<li>Added <code>ignore_token</code> to <code>word_segmentation()</code> to ignore words with regular expression</li>\n</ul>\n<h2>6.3.3 (2018-12-05)</h2>\n<hr>\n<ul>\n<li>Added <code>word_segmentation()</code> feature</li>\n</ul>\n<h2>6.3.2 (2018-10-23)</h2>\n<hr>\n<ul>\n<li>Added <code>encoding</code> option to <code>load_dictionary()</code></li>\n</ul>\n<h2>6.3.1 (2018-08-30)</h2>\n<hr>\n<ul>\n<li>Create a package for <code>symspellpy</code></li>\n</ul>\n<h2>6.3.0 (2018-08-13)</h2>\n<hr>\n<ul>\n<li>Ported <a href=\"https://github.com/wolfgarbe/SymSpell\" rel=\"nofollow\">SymSpell</a> v6.3</li>\n</ul>\n\n          </div>"}, "last_serial": 6017027, "releases": {"6.3.1": [{"comment_text": "", "digests": {"md5": "ea5fbd32d02e53af993f55c05c2331fb", "sha256": "2a5c7d9fc0a6fb23eb537f29997dd5b240530595bc59404760f54140ae2d72ba"}, "downloads": -1, "filename": "symspellpy-6.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ea5fbd32d02e53af993f55c05c2331fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 13644, "upload_time": "2018-08-30T02:36:45", "upload_time_iso_8601": "2018-08-30T02:36:45.192148Z", "url": "https://files.pythonhosted.org/packages/c4/bb/9ff151e5176233020c9bcaa905b94541ff2ed5a8a38ac61cc48befe6419a/symspellpy-6.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ddf10d2567e15672753db81a7b404fb", "sha256": "2f64bfbe96513122a6266e2c11a78214ff7a47bd1c87f531faf14a9996472522"}, "downloads": -1, "filename": "symspellpy-6.3.1.tar.gz", "has_sig": false, "md5_digest": "5ddf10d2567e15672753db81a7b404fb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 15711, "upload_time": "2018-08-30T02:36:46", "upload_time_iso_8601": "2018-08-30T02:36:46.319351Z", "url": "https://files.pythonhosted.org/packages/f7/35/b522e578372f4c3eb9f90301b11642992bfe5a37c333fb8cea9d17ff89db/symspellpy-6.3.1.tar.gz", "yanked": false}], "6.3.2": [{"comment_text": "", "digests": {"md5": "967b1ccaabdcee46f9a0d97ca4635b9d", "sha256": "0bf925f1d77afdc14751595dfda43b603293ccc6881e6243a8158b62f4fb52fd"}, "downloads": -1, "filename": "symspellpy-6.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "967b1ccaabdcee46f9a0d97ca4635b9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 14490, "upload_time": "2018-10-23T01:47:08", "upload_time_iso_8601": "2018-10-23T01:47:08.370770Z", "url": "https://files.pythonhosted.org/packages/f1/87/001fdfd91d015414fd430a6791197e1afac6bb21dcb0e1d5d503e3d68c34/symspellpy-6.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8129fd26a958b7398c68ea412558fdf3", "sha256": "c2b97ba6850c90755c2d0d13cf349198fbdf31ce8b00d3d66efe178475bcd1b4"}, "downloads": -1, "filename": "symspellpy-6.3.2.tar.gz", "has_sig": false, "md5_digest": "8129fd26a958b7398c68ea412558fdf3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 15775, "upload_time": "2018-10-23T01:47:10", "upload_time_iso_8601": "2018-10-23T01:47:10.050211Z", "url": "https://files.pythonhosted.org/packages/3e/44/4df4c40d4fd4a5920a38e3b67fa17c6c220305102d2b0bbdb8366e445b42/symspellpy-6.3.2.tar.gz", "yanked": false}], "6.3.3": [{"comment_text": "", "digests": {"md5": "f12a9f315840166b54b4837ab26ace0f", "sha256": "39355c7736e01fff62cbbf78258cccbb8ee566f795925858127fc8e66d5b1b33"}, "downloads": -1, "filename": "symspellpy-6.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f12a9f315840166b54b4837ab26ace0f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 16502, "upload_time": "2018-12-05T11:13:30", "upload_time_iso_8601": "2018-12-05T11:13:30.253764Z", "url": "https://files.pythonhosted.org/packages/0a/72/b0c0a35570217c94de5d9ed9eb6e10e47a91f4b999eb66f0c711cf7829ca/symspellpy-6.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ef4bb41619daa75a7b666e2f0d88774", "sha256": "da942438a93c3ead0ad9cf81a8583a9720b8a6918728a572ab4e9a81b9a0f1c9"}, "downloads": -1, "filename": "symspellpy-6.3.3.tar.gz", "has_sig": false, "md5_digest": "9ef4bb41619daa75a7b666e2f0d88774", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 18370, "upload_time": "2018-12-05T11:13:31", "upload_time_iso_8601": "2018-12-05T11:13:31.568937Z", "url": "https://files.pythonhosted.org/packages/c4/66/8fde69b4908889c991ccf952a3a09f66f631f89cbf01dbfe7340c18ba5e0/symspellpy-6.3.3.tar.gz", "yanked": false}], "6.3.4": [{"comment_text": "", "digests": {"md5": "69db30915e1d30677fd560ccddc193bb", "sha256": "ebffd396282c9989eeb04c7c10043755aef7b4b5e60a82c5ed9e5b2bccedac16"}, "downloads": -1, "filename": "symspellpy-6.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "69db30915e1d30677fd560ccddc193bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 16449, "upload_time": "2019-01-04T03:51:38", "upload_time_iso_8601": "2019-01-04T03:51:38.056879Z", "url": "https://files.pythonhosted.org/packages/57/95/6a35b8b63202222fa998c6722933484868a6882dffc2b9bbe2c14601fd31/symspellpy-6.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6be91272a3cb8314e64d53d0c8a0f66", "sha256": "f9ae73352b35175b849d89942f4340ffa3bb866b109883dc4627c4e3c534e49c"}, "downloads": -1, "filename": "symspellpy-6.3.4.tar.gz", "has_sig": false, "md5_digest": "e6be91272a3cb8314e64d53d0c8a0f66", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 20395, "upload_time": "2019-01-04T03:51:40", "upload_time_iso_8601": "2019-01-04T03:51:40.057506Z", "url": "https://files.pythonhosted.org/packages/5c/95/4bd79f828ca5375a434fa30b1b5caf88ff1ffa9b468111c5f5bbe06f3cdf/symspellpy-6.3.4.tar.gz", "yanked": false}], "6.3.5": [{"comment_text": "", "digests": {"md5": "ddf61d12c7b05b1b97869ebf7cb116ef", "sha256": "ea67127916b5f0158d87484a774d6405e63c803e9788db0f6ddef77fef605b56"}, "downloads": -1, "filename": "symspellpy-6.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "ddf61d12c7b05b1b97869ebf7cb116ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 16480, "upload_time": "2019-01-14T02:06:51", "upload_time_iso_8601": "2019-01-14T02:06:51.784040Z", "url": "https://files.pythonhosted.org/packages/c5/20/915cd089dee63ae3aee4d54475a84f2eeb6fbbebd9b1311ce11387179b61/symspellpy-6.3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19875ae941f82c812da39b1a5a7574b4", "sha256": "0c0d5fe14098d7378c432cb87412d619c2ad80fc56d0aee87d6901766e09408c"}, "downloads": -1, "filename": "symspellpy-6.3.5.tar.gz", "has_sig": false, "md5_digest": "19875ae941f82c812da39b1a5a7574b4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 20520, "upload_time": "2019-01-14T02:06:54", "upload_time_iso_8601": "2019-01-14T02:06:54.483887Z", "url": "https://files.pythonhosted.org/packages/4b/a9/0849d6456ad72f307d6032c9d76b8feac11e5e863db4af8c29f9cd61addf/symspellpy-6.3.5.tar.gz", "yanked": false}], "6.3.6": [{"comment_text": "", "digests": {"md5": "6bbe885ecf8030e34ee51bcaa46935ee", "sha256": "10f413967bb885ce43bc8dd9b1e5a2e8d8a6b6500e07409de49b04b206d11ffb"}, "downloads": -1, "filename": "symspellpy-6.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "6bbe885ecf8030e34ee51bcaa46935ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 17040, "upload_time": "2019-02-11T05:48:06", "upload_time_iso_8601": "2019-02-11T05:48:06.619284Z", "url": "https://files.pythonhosted.org/packages/43/af/d7bec0d65aa916d47b92fa6ac5eafc9a833a3d2f8d7adabcef3ba47a52d6/symspellpy-6.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4236251b27dca9202e715bbac9029efd", "sha256": "6375756f36230be3e465164727ca958554aaa3707b341dd078d4e2d273b8e7b6"}, "downloads": -1, "filename": "symspellpy-6.3.6.tar.gz", "has_sig": false, "md5_digest": "4236251b27dca9202e715bbac9029efd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 21006, "upload_time": "2019-02-11T05:48:10", "upload_time_iso_8601": "2019-02-11T05:48:10.493045Z", "url": "https://files.pythonhosted.org/packages/8d/cc/888cacf7fb92f760e1f0ef167bdaae16308e235774c2ff8a0f84adf2522b/symspellpy-6.3.6.tar.gz", "yanked": false}], "6.3.7": [{"comment_text": "", "digests": {"md5": "86d14ac987863d692d6e90cce6712743", "sha256": "ff98216f32abfccfd7c94f2e0e697bae80b07e83ed3d9a8a9effa9a3105e9150"}, "downloads": -1, "filename": "symspellpy-6.3.7-py3-none-any.whl", "has_sig": false, "md5_digest": "86d14ac987863d692d6e90cce6712743", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 17412, "upload_time": "2019-02-18T07:36:32", "upload_time_iso_8601": "2019-02-18T07:36:32.800192Z", "url": "https://files.pythonhosted.org/packages/60/0d/f46a1a98fbaee317ff006134b2ced63e71ca57e63e71c9aa62d74b655a22/symspellpy-6.3.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f5d117d8309f53a52ce7dc4888ec996", "sha256": "c6b82077c2ee07a7650e3205030bda418a66f58f95a3fa25b106f8a6c2aa0015"}, "downloads": -1, "filename": "symspellpy-6.3.7.tar.gz", "has_sig": false, "md5_digest": "6f5d117d8309f53a52ce7dc4888ec996", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 21692, "upload_time": "2019-02-18T07:36:34", "upload_time_iso_8601": "2019-02-18T07:36:34.886962Z", "url": "https://files.pythonhosted.org/packages/54/e3/4a9c7efe04aca3ea61f0361a964a505532122ab8a455ade3f8554f79c1c8/symspellpy-6.3.7.tar.gz", "yanked": false}], "6.3.8": [{"comment_text": "", "digests": {"md5": "a14981f4f55b1211b92eebd288cc9ef4", "sha256": "b3bbb9dba9a86e3a159dce5701dad9fb49785952b7ff2642742852347b067d8c"}, "downloads": -1, "filename": "symspellpy-6.3.8-py3-none-any.whl", "has_sig": false, "md5_digest": "a14981f4f55b1211b92eebd288cc9ef4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 19358, "upload_time": "2019-03-21T07:23:42", "upload_time_iso_8601": "2019-03-21T07:23:42.139806Z", "url": "https://files.pythonhosted.org/packages/4c/d5/9cf41f05a30f205c00489e3d37639c348349ba6f8d0e1005f26dc9a9ac60/symspellpy-6.3.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54a0f7743289d143dc43d5ee65ee8a6a", "sha256": "29a86ef50cc3abb2f5cb85aa91466419c1c5a7b1153cd44ae782ef1046da87c4"}, "downloads": -1, "filename": "symspellpy-6.3.8.tar.gz", "has_sig": false, "md5_digest": "54a0f7743289d143dc43d5ee65ee8a6a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 23696, "upload_time": "2019-03-21T07:23:44", "upload_time_iso_8601": "2019-03-21T07:23:44.514779Z", "url": "https://files.pythonhosted.org/packages/0e/33/b64536457e0f001d5dbb87fde2fb2c1c71ac0ced78dc81b16f74e924dd1e/symspellpy-6.3.8.tar.gz", "yanked": false}], "6.3.9": [{"comment_text": "", "digests": {"md5": "f9cdbeac7bccf112854c0bb1acc5a85e", "sha256": "e33706475ab5d1ab1ac7857fbc251dc59364c73ac7295eb907b1adec8f641cc7"}, "downloads": -1, "filename": "symspellpy-6.3.9-py3-none-any.whl", "has_sig": false, "md5_digest": "f9cdbeac7bccf112854c0bb1acc5a85e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 21076, "upload_time": "2019-08-06T01:05:55", "upload_time_iso_8601": "2019-08-06T01:05:55.023174Z", "url": "https://files.pythonhosted.org/packages/2f/c2/8a15e2d16d22644afa208317a445f46b1e3157ad681dc5f31d6a25a8113e/symspellpy-6.3.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4a7549fbbf7555a057d9577f1e1dc55", "sha256": "218ae731df01ed0953c21a0a9472e7fec022d974d733b2cf3fdcf78199f52d02"}, "downloads": -1, "filename": "symspellpy-6.3.9.tar.gz", "has_sig": false, "md5_digest": "d4a7549fbbf7555a057d9577f1e1dc55", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 26064, "upload_time": "2019-08-06T01:05:58", "upload_time_iso_8601": "2019-08-06T01:05:58.759160Z", "url": "https://files.pythonhosted.org/packages/17/69/b2c8ee8b2649c5577271162b10adb03d8720d372aa378afb66109797fed5/symspellpy-6.3.9.tar.gz", "yanked": false}], "6.5.0": [{"comment_text": "", "digests": {"md5": "7d57dd50a86f3d9256f5d35688be1d09", "sha256": "76cefcdf4f6edcb63054a793dfc010d56833cdc3f3d1f598c84a3e691b75eb1a"}, "downloads": -1, "filename": "symspellpy-6.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7d57dd50a86f3d9256f5d35688be1d09", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 22208, "upload_time": "2019-09-21T02:23:22", "upload_time_iso_8601": "2019-09-21T02:23:22.802249Z", "url": "https://files.pythonhosted.org/packages/ee/d4/7c5d10f42fbd2eaef07117f30a48ae46e5704c1eb72d9bd0889a6243537f/symspellpy-6.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62563552e1bc0a26a9a8c224d4dfd50a", "sha256": "fa2e402d661878946a70141a676ed14b7707111f16430c3d555b2509295d808b"}, "downloads": -1, "filename": "symspellpy-6.5.0.tar.gz", "has_sig": false, "md5_digest": "62563552e1bc0a26a9a8c224d4dfd50a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 29181, "upload_time": "2019-09-21T02:23:24", "upload_time_iso_8601": "2019-09-21T02:23:24.360068Z", "url": "https://files.pythonhosted.org/packages/b5/da/fb3ad19b134cb482465047a9ff469ed36b4b8eae4ae4a722ed697877e901/symspellpy-6.5.0.tar.gz", "yanked": false}], "6.5.1": [{"comment_text": "", "digests": {"md5": "31055bc42588d0dbb07b8f2b6bf929ed", "sha256": "84090ee35c30b60400bb159c8daacef91ed1d1de04e0c5ae91123cac08af1bf2"}, "downloads": -1, "filename": "symspellpy-6.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "31055bc42588d0dbb07b8f2b6bf929ed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 22250, "upload_time": "2019-10-08T03:52:22", "upload_time_iso_8601": "2019-10-08T03:52:22.717400Z", "url": "https://files.pythonhosted.org/packages/83/78/7c827a713ebc0c12d837751a2a8da57340115991fc5b6dcc9a808056dcb0/symspellpy-6.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8783e164c3f950a7e676bcb995add55b", "sha256": "c73901b2f9d049d6fa4f52941240e7fc577e87d2761764c632daeadfc694ed74"}, "downloads": -1, "filename": "symspellpy-6.5.1.tar.gz", "has_sig": false, "md5_digest": "8783e164c3f950a7e676bcb995add55b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 28559, "upload_time": "2019-10-08T03:52:26", "upload_time_iso_8601": "2019-10-08T03:52:26.041961Z", "url": "https://files.pythonhosted.org/packages/99/a0/eb70f29641c77b50e569f96da7dd820aa4b5352b4952d8f5c0226796cbbd/symspellpy-6.5.1.tar.gz", "yanked": false}], "6.5.2": [{"comment_text": "", "digests": {"md5": "000af4b5059001aa23a6f98fef2b73a5", "sha256": "ab1adacd40a616741181121e8927c9c4d43bb961756b97c642ed60dc3960b469"}, "downloads": -1, "filename": "symspellpy-6.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "000af4b5059001aa23a6f98fef2b73a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 2635567, "upload_time": "2019-10-23T07:20:52", "upload_time_iso_8601": "2019-10-23T07:20:52.944092Z", "url": "https://files.pythonhosted.org/packages/6d/0b/2daa14bf1ed649fff0d072b2e51ae98d8b45cae6cf8fdda41be01ce6c289/symspellpy-6.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "037dd1da48d328308b88cbca791d716b", "sha256": "884a6496462288576f6ab5d6888f84e406e871031e0c64de1c3aa6c78d5ee35a"}, "downloads": -1, "filename": "symspellpy-6.5.2.tar.gz", "has_sig": false, "md5_digest": "037dd1da48d328308b88cbca791d716b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 2640367, "upload_time": "2019-10-23T07:20:55", "upload_time_iso_8601": "2019-10-23T07:20:55.877623Z", "url": "https://files.pythonhosted.org/packages/f8/a1/4a3bbb4d881946b493787a63c3d401f1fa38446a4b7a59e1977b56fe4a7c/symspellpy-6.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "000af4b5059001aa23a6f98fef2b73a5", "sha256": "ab1adacd40a616741181121e8927c9c4d43bb961756b97c642ed60dc3960b469"}, "downloads": -1, "filename": "symspellpy-6.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "000af4b5059001aa23a6f98fef2b73a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 2635567, "upload_time": "2019-10-23T07:20:52", "upload_time_iso_8601": "2019-10-23T07:20:52.944092Z", "url": "https://files.pythonhosted.org/packages/6d/0b/2daa14bf1ed649fff0d072b2e51ae98d8b45cae6cf8fdda41be01ce6c289/symspellpy-6.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "037dd1da48d328308b88cbca791d716b", "sha256": "884a6496462288576f6ab5d6888f84e406e871031e0c64de1c3aa6c78d5ee35a"}, "downloads": -1, "filename": "symspellpy-6.5.2.tar.gz", "has_sig": false, "md5_digest": "037dd1da48d328308b88cbca791d716b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 2640367, "upload_time": "2019-10-23T07:20:55", "upload_time_iso_8601": "2019-10-23T07:20:55.877623Z", "url": "https://files.pythonhosted.org/packages/f8/a1/4a3bbb4d881946b493787a63c3d401f1fa38446a4b7a59e1977b56fe4a7c/symspellpy-6.5.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:09 2020"}