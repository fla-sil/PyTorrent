{"info": {"author": "Amazon Web Services", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": ".. image:: https://github.com/aws/sagemaker-experiments/raw/master/branding/icon/sagemaker-banner.png\n    :height: 100px\n    :alt: SageMaker\n    :target: https://aws.amazon.com/sagemaker/\n\n================================\nSageMaker Experiments Python SDK\n================================\n\n.. image:: https://img.shields.io/pypi/v/sagemaker-experiments.svg\n    :target: https://pypi.python.org/pypi/sagemaker-experiments\n    :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/pyversions/sagemaker-experiments.svg\n    :target: https://pypi.python.org/pypi/sagemaker-experiments\n    :alt: Supported Python Versions\n\n.. image:: https://img.shields.io/pypi/l/sagemaker-experiments\n    :target: https://github.com/aws/sagemaker-experiments/blob/master/LICENSE\n    :alt: License\n\n.. image:: https://img.shields.io/pypi/dm/sagemaker-experiments\n    :target: https://pypi.python.org/pypi/sagemaker-experiments\n    :alt: PyPI - Downloads\n\n.. image:: https://codecov.io/gh/aws/sagemaker-experiments/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/aws/sagemaker-experiments\n   :alt: CodeCov\n\n.. image:: https://img.shields.io/pypi/status/sagemaker-experiments\n    :target: https://github.com/aws/sagemaker-experiments\n    :alt: PyPI - Status\n\n.. image:: https://img.shields.io/pypi/format/coverage.svg\n    :target: https://pypi.org/project/coverage/\n    :alt: Kit format\n\n.. image:: https://img.shields.io/github/workflow/status/aws/sagemaker-experiments/Main\n    :target: https://github.com/aws/sagemaker-experiments/actions\n    :alt: GitHub Workflow Status\n\n.. image:: https://img.shields.io/github/stars/aws/sagemaker-experiments.svg?logo=github\n    :target: https://github.com/aws/sagemaker-experiments/stargazers\n    :alt: Github stars\n\n.. image:: https://img.shields.io/github/forks/aws/sagemaker-experiments.svg?logo=github\n    :target: https://github.com/aws/sagemaker-experiments/network/members\n    :alt: Github forks\n\n.. image:: https://img.shields.io/github/contributors/aws/sagemaker-experiments.svg?logo=github\n    :target: https://github.com/aws/sagemaker-experiments/graphs/contributors\n    :alt: Contributors\n\n.. image:: https://img.shields.io/github/search/aws/sagemaker-experiments/sagemaker\n    :target: https://github.com/aws/sagemaker-experiments\n    :alt: GitHub search hit counter\n\n.. image:: https://img.shields.io/badge/code_style-black-000000.svg\n    :target: https://github.com/python/black\n    :alt: Code style: black\n\n.. image:: https://readthedocs.org/projects/sagemaker-experiments/badge/?version=latest\n    :target: https://readthedocs.org/projects/sagemaker-experiments/\n    :alt: Read the Docs - Sagemaker Experiments\n\n.. image:: https://mybinder.org/badge_logo.svg\n    :target: https://mybinder.org/v2/gh/awslabs/amazon-sagemaker-examples/master?filepath=sagemaker-experiments%2Fmnist-handwritten-digits-classification-experiment.ipynb\n\n\n\nExperiment tracking in SageMaker Training Jobs, Processing Jobs, and Notebooks.\n\nOverview\n--------\nSageMaker Experiments is an AWS service for tracking machine learning Experiments. The SageMaker Experiments Python SDK is a high-level interface to this service that helps you track Experiment information using Python.\n\nExperiment tracking powers the machine learning integrated development environment `Amazon SageMaker Studio <https://docs.aws.amazon.com/sagemaker/latest/dg/gs-studio.html>`_.\n\nFor detailed API reference please go to: `Read the Docs <https://sagemaker-experiments.readthedocs.io>`_\n\nConcepts\n--------\n\n- **Experiment**: A collection of related Trials. Add Trials to an Experiment that you wish to compare together.\n- **Trial**: A description of a multi-step machine learning workflow. Each step in the workflow is described by a Trial Component. There is no relationship between Trial Components such as ordering.\n- **Trial Component**: A description of a single step in a machine learning workflow.  For example data cleaning, feature extraction, model training, model evaluation, etc...\n- **Tracker**: A Python context-manager for logging information about a single TrialComponent.\n\nFor more information see `Amazon SageMaker Experiments - Organize, Track, and Compare Your Machine Learning Trainings <https://aws.amazon.com/blogs/aws/amazon-sagemaker-experiments-organize-track-and-compare-your-machine-learning-trainings/>`_\n\nUsing the SDK\n-------------\nYou can use this SDK to:\n\n- Manage Experiments, Trials, and Trial Components within Python scripts, programs, and notebooks.\n- Add tracking information to a SageMaker notebook, allowing you to model your notebook in SageMaker Experiments as a multi-step ML workflow.\n- Record experiment information from inside your running SageMaker Training and Processing Jobs.\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    pip install sagemaker-experiments\n\nExamples\n--------\n\n.. code-block:: python\n\n    import boto3\n    import pickle, gzip, numpy, urllib.request, json\n    import io\n    import numpy as np\n    import sagemaker.amazon.common as smac\n    import sagemaker\n    from sagemaker import get_execution_role\n    from sagemaker import analytics\n    from smexperiments import experiment\n\n    # Specify training container\n    from sagemaker.amazon.amazon_estimator import get_image_uri\n    container = get_image_uri(boto3.Session().region_name, 'linear-learner')\n\n    # Load the dataset\n    urllib.request.urlretrieve(\"http://deeplearning.net/data/mnist/mnist.pkl.gz\", \"mnist.pkl.gz\")\n    with gzip.open('mnist.pkl.gz', 'rb') as f:\n        train_set, valid_set, test_set = pickle.load(f, encoding='latin1')\n\n    vectors = np.array([t.tolist() for t in train_set[0]]).astype('float32')\n    labels = np.where(np.array([t.tolist() for t in train_set[1]]) == 0, 1, 0).astype('float32')\n\n    buf = io.BytesIO()\n    smac.write_numpy_to_dense_tensor(buf, vectors, labels)\n    buf.seek(0)\n\n    key = 'recordio-pb-data'\n    bucket = '{YOUR-BUCKET}'\n    prefix = 'sagemaker/DEMO-linear-mnist'\n    boto3.resource('s3').Bucket(bucket).Object(os.path.join(prefix, 'train', key)).upload_fileobj(buf)\n    s3_train_data = 's3://{}/{}/train/{}'.format(bucket, prefix, key)\n    output_location = 's3://{}/{}/output'.format(bucket, prefix)\n\n    my_experiment = experiment.Experiment.create(experiment_name='MNIST')\n    my_trial = my_experiment.create_trial(trial_name='linear-learner')\n\n    role = get_execution_role()\n    sess = sagemaker.Session()\n\n    linear = sagemaker.estimator.Estimator(container,\n                                        role, \n                                        train_instance_count=1, \n                                        train_instance_type='ml.c4.xlarge',\n                                        output_path=output_location,\n                                        sagemaker_session=sess)\n    linear.set_hyperparameters(feature_dim=784,\n                            predictor_type='binary_classifier',\n                            mini_batch_size=200)\n\n    linear.fit(inputs={'train': s3_train_data}, experiment_config={\n                \"ExperimentName\": my_experiment.experiment_name,\n                \"TrialName\": my_trial.trial_name,\n                \"TrialComponentDisplayName\": \"MNIST-linear-learner\",\n            },)\n\n    trial_component_analytics = analytics.ExperimentAnalytics(experiment_name=my_experiment.experiment_name)\n\n    analytic_table = trial_component_analytics.dataframe()\n    analytic_table\n\nFor more examples, check out: `sagemaker-experiments <https://github.com/awslabs/amazon-sagemaker-examples/tree/master/sagemaker-experiments>`_ in `AWS Labs Amazon SageMaker Examples <https://github.com/awslabs/amazon-sagemaker-examples>`_.\n\nLicense\n-------\nThis library is licensed under the Apache 2.0 License.\n\nRunning Tests\n-------------\n\n**Unit Tests**\n\n.. code-block:: bash\n\n    tox tests/unit\n\n**Integration Tests**\n\nTo run the integration tests, the following prerequisites must be met:\n\n- AWS account credentials are available in the environment for the boto3 client to use.\n- The AWS account has an IAM role with SageMaker permissions.\n\n.. code-block:: bash\n\n    tox tests/integ\n\n- Test against different regions\n\n.. code-block:: bash\n\n    tox -e py37 -- --region cn-north-1\n\nGenerate Docs\n-------------\n\n.. code-block:: bash\n\n    tox -e docs\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aws/sagemaker-experiment-tracking/", "keywords": "ML Amazon AWS AI Tensorflow MXNet", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "sagemaker-experiments", "package_url": "https://pypi.org/project/sagemaker-experiments/", "platform": "", "project_url": "https://pypi.org/project/sagemaker-experiments/", "project_urls": {"Homepage": "https://github.com/aws/sagemaker-experiment-tracking/"}, "release_url": "https://pypi.org/project/sagemaker-experiments/0.1.13/", "requires_dist": ["boto3 (>=1.12.8)", "tox (==3.13.1) ; extra == 'test'", "flake8 ; extra == 'test'", "pytest (==4.4.1) ; extra == 'test'", "pytest-cov ; extra == 'test'", "pytest-coverage ; extra == 'test'", "pytest-rerunfailures ; extra == 'test'", "pytest-xdist ; extra == 'test'", "docker ; extra == 'test'"], "requires_python": "", "summary": "Open source library for Experiment Tracking in SageMaker Jobs and Notebooks", "version": "0.1.13", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://aws.amazon.com/sagemaker/\" rel=\"nofollow\"><img alt=\"SageMaker\" height=\"100px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0c2a9807734ad407f7414ae2d8fa51a67cdda3be/68747470733a2f2f6769746875622e636f6d2f6177732f736167656d616b65722d6578706572696d656e74732f7261772f6d61737465722f6272616e64696e672f69636f6e2f736167656d616b65722d62616e6e65722e706e67\"></a>\n<div id=\"sagemaker-experiments-python-sdk\">\n<h2>SageMaker Experiments Python SDK</h2>\n<a href=\"https://pypi.python.org/pypi/sagemaker-experiments\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/091b5053438241d3035bebd680a50b222a4aa8d9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f736167656d616b65722d6578706572696d656e74732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/sagemaker-experiments\" rel=\"nofollow\"><img alt=\"Supported Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8698626c127885b842990b89fbd317b01f7881d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f736167656d616b65722d6578706572696d656e74732e737667\"></a>\n<a href=\"https://github.com/aws/sagemaker-experiments/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2577c5c42e977b04a99ebff0637c7a52a6a702fc/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f736167656d616b65722d6578706572696d656e7473\"></a>\n<a href=\"https://pypi.python.org/pypi/sagemaker-experiments\" rel=\"nofollow\"><img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f85195fefcec28450b1ba593a25262a12f1e90d9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f736167656d616b65722d6578706572696d656e7473\"></a>\n<a href=\"https://codecov.io/gh/aws/sagemaker-experiments\" rel=\"nofollow\"><img alt=\"CodeCov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a3b675f4ebfe3db794c059d7747db725ab89ff7/68747470733a2f2f636f6465636f762e696f2f67682f6177732f736167656d616b65722d6578706572696d656e74732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://github.com/aws/sagemaker-experiments\" rel=\"nofollow\"><img alt=\"PyPI - Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69d916dd4d2823bcd73d0c1b15c4cd6f55dcd975/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f736167656d616b65722d6578706572696d656e7473\"></a>\n<a href=\"https://pypi.org/project/coverage/\" rel=\"nofollow\"><img alt=\"Kit format\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5914cba5554999b98eb1a3a42ec89033141a3f00/68747470733a2f2f696d672e736869656c64732e696f2f707970692f666f726d61742f636f7665726167652e737667\"></a>\n<a href=\"https://github.com/aws/sagemaker-experiments/actions\" rel=\"nofollow\"><img alt=\"GitHub Workflow Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a556c2d165408c153c8d958f1f62e18e2ac5bcb/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6177732f736167656d616b65722d6578706572696d656e74732f4d61696e\"></a>\n<a href=\"https://github.com/aws/sagemaker-experiments/stargazers\" rel=\"nofollow\"><img alt=\"Github stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2dcbe4d0b07140daff3bbb67aa87d786c94e512b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6177732f736167656d616b65722d6578706572696d656e74732e7376673f6c6f676f3d676974687562\"></a>\n<a href=\"https://github.com/aws/sagemaker-experiments/network/members\" rel=\"nofollow\"><img alt=\"Github forks\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ef32de1ac4564228165741edd8b979e560a4b15b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f6177732f736167656d616b65722d6578706572696d656e74732e7376673f6c6f676f3d676974687562\"></a>\n<a href=\"https://github.com/aws/sagemaker-experiments/graphs/contributors\" rel=\"nofollow\"><img alt=\"Contributors\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d3bd965e5b4df7b1d98d931e846c9696d93af379/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6177732f736167656d616b65722d6578706572696d656e74732e7376673f6c6f676f3d676974687562\"></a>\n<a href=\"https://github.com/aws/sagemaker-experiments\" rel=\"nofollow\"><img alt=\"GitHub search hit counter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9adacd58bf75dec4a86cea732b6c287bb4358464/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7365617263682f6177732f736167656d616b65722d6578706572696d656e74732f736167656d616b6572\"></a>\n<a href=\"https://github.com/python/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60c9766d3e4743ac1ccc37cf3755aa6609b5ce47/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://readthedocs.org/projects/sagemaker-experiments/\" rel=\"nofollow\"><img alt=\"Read the Docs - Sagemaker Experiments\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c7c9aa74f54b10411ef976174e1667b23984146/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f736167656d616b65722d6578706572696d656e74732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://mybinder.org/v2/gh/awslabs/amazon-sagemaker-examples/master?filepath=sagemaker-experiments%2Fmnist-handwritten-digits-classification-experiment.ipynb\" rel=\"nofollow\"><img alt=\"https://mybinder.org/badge_logo.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a>\n<p>Experiment tracking in SageMaker Training Jobs, Processing Jobs, and Notebooks.</p>\n<div id=\"overview\">\n<h3>Overview</h3>\n<p>SageMaker Experiments is an AWS service for tracking machine learning Experiments. The SageMaker Experiments Python SDK is a high-level interface to this service that helps you track Experiment information using Python.</p>\n<p>Experiment tracking powers the machine learning integrated development environment <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/gs-studio.html\" rel=\"nofollow\">Amazon SageMaker Studio</a>.</p>\n<p>For detailed API reference please go to: <a href=\"https://sagemaker-experiments.readthedocs.io\" rel=\"nofollow\">Read the Docs</a></p>\n</div>\n<div id=\"concepts\">\n<h3>Concepts</h3>\n<ul>\n<li><strong>Experiment</strong>: A collection of related Trials. Add Trials to an Experiment that you wish to compare together.</li>\n<li><strong>Trial</strong>: A description of a multi-step machine learning workflow. Each step in the workflow is described by a Trial Component. There is no relationship between Trial Components such as ordering.</li>\n<li><strong>Trial Component</strong>: A description of a single step in a machine learning workflow.  For example data cleaning, feature extraction, model training, model evaluation, etc\u2026</li>\n<li><strong>Tracker</strong>: A Python context-manager for logging information about a single TrialComponent.</li>\n</ul>\n<p>For more information see <a href=\"https://aws.amazon.com/blogs/aws/amazon-sagemaker-experiments-organize-track-and-compare-your-machine-learning-trainings/\" rel=\"nofollow\">Amazon SageMaker Experiments - Organize, Track, and Compare Your Machine Learning Trainings</a></p>\n</div>\n<div id=\"using-the-sdk\">\n<h3>Using the SDK</h3>\n<p>You can use this SDK to:</p>\n<ul>\n<li>Manage Experiments, Trials, and Trial Components within Python scripts, programs, and notebooks.</li>\n<li>Add tracking information to a SageMaker notebook, allowing you to model your notebook in SageMaker Experiments as a multi-step ML workflow.</li>\n<li>Record experiment information from inside your running SageMaker Training and Processing Jobs.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>pip install sagemaker-experiments\n</pre>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">boto3</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pickle</span><span class=\"o\">,</span> <span class=\"nn\">gzip</span><span class=\"o\">,</span> <span class=\"nn\">numpy</span><span class=\"o\">,</span> <span class=\"nn\">urllib.request</span><span class=\"o\">,</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">io</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sagemaker.amazon.common</span> <span class=\"k\">as</span> <span class=\"nn\">smac</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sagemaker</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sagemaker</span> <span class=\"kn\">import</span> <span class=\"n\">get_execution_role</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sagemaker</span> <span class=\"kn\">import</span> <span class=\"n\">analytics</span>\n<span class=\"kn\">from</span> <span class=\"nn\">smexperiments</span> <span class=\"kn\">import</span> <span class=\"n\">experiment</span>\n\n<span class=\"c1\"># Specify training container</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sagemaker.amazon.amazon_estimator</span> <span class=\"kn\">import</span> <span class=\"n\">get_image_uri</span>\n<span class=\"n\">container</span> <span class=\"o\">=</span> <span class=\"n\">get_image_uri</span><span class=\"p\">(</span><span class=\"n\">boto3</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">region_name</span><span class=\"p\">,</span> <span class=\"s1\">'linear-learner'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Load the dataset</span>\n<span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">urlretrieve</span><span class=\"p\">(</span><span class=\"s2\">\"http://deeplearning.net/data/mnist/mnist.pkl.gz\"</span><span class=\"p\">,</span> <span class=\"s2\">\"mnist.pkl.gz\"</span><span class=\"p\">)</span>\n<span class=\"k\">with</span> <span class=\"n\">gzip</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'mnist.pkl.gz'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">train_set</span><span class=\"p\">,</span> <span class=\"n\">valid_set</span><span class=\"p\">,</span> <span class=\"n\">test_set</span> <span class=\"o\">=</span> <span class=\"n\">pickle</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'latin1'</span><span class=\"p\">)</span>\n\n<span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">train_set</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]])</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"s1\">'float32'</span><span class=\"p\">)</span>\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">train_set</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]])</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"s1\">'float32'</span><span class=\"p\">)</span>\n\n<span class=\"n\">buf</span> <span class=\"o\">=</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">BytesIO</span><span class=\"p\">()</span>\n<span class=\"n\">smac</span><span class=\"o\">.</span><span class=\"n\">write_numpy_to_dense_tensor</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">,</span> <span class=\"n\">vectors</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"n\">buf</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s1\">'recordio-pb-data'</span>\n<span class=\"n\">bucket</span> <span class=\"o\">=</span> <span class=\"s1\">'{YOUR-BUCKET}'</span>\n<span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"s1\">'sagemaker/DEMO-linear-mnist'</span>\n<span class=\"n\">boto3</span><span class=\"o\">.</span><span class=\"n\">resource</span><span class=\"p\">(</span><span class=\"s1\">'s3'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Bucket</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Object</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"p\">,</span> <span class=\"s1\">'train'</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">upload_fileobj</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">)</span>\n<span class=\"n\">s3_train_data</span> <span class=\"o\">=</span> <span class=\"s1\">'s3://</span><span class=\"si\">{}</span><span class=\"s1\">/</span><span class=\"si\">{}</span><span class=\"s1\">/train/</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span>\n<span class=\"n\">output_location</span> <span class=\"o\">=</span> <span class=\"s1\">'s3://</span><span class=\"si\">{}</span><span class=\"s1\">/</span><span class=\"si\">{}</span><span class=\"s1\">/output'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"p\">)</span>\n\n<span class=\"n\">my_experiment</span> <span class=\"o\">=</span> <span class=\"n\">experiment</span><span class=\"o\">.</span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">experiment_name</span><span class=\"o\">=</span><span class=\"s1\">'MNIST'</span><span class=\"p\">)</span>\n<span class=\"n\">my_trial</span> <span class=\"o\">=</span> <span class=\"n\">my_experiment</span><span class=\"o\">.</span><span class=\"n\">create_trial</span><span class=\"p\">(</span><span class=\"n\">trial_name</span><span class=\"o\">=</span><span class=\"s1\">'linear-learner'</span><span class=\"p\">)</span>\n\n<span class=\"n\">role</span> <span class=\"o\">=</span> <span class=\"n\">get_execution_role</span><span class=\"p\">()</span>\n<span class=\"n\">sess</span> <span class=\"o\">=</span> <span class=\"n\">sagemaker</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span>\n\n<span class=\"n\">linear</span> <span class=\"o\">=</span> <span class=\"n\">sagemaker</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">Estimator</span><span class=\"p\">(</span><span class=\"n\">container</span><span class=\"p\">,</span>\n                                    <span class=\"n\">role</span><span class=\"p\">,</span>\n                                    <span class=\"n\">train_instance_count</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n                                    <span class=\"n\">train_instance_type</span><span class=\"o\">=</span><span class=\"s1\">'ml.c4.xlarge'</span><span class=\"p\">,</span>\n                                    <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"n\">output_location</span><span class=\"p\">,</span>\n                                    <span class=\"n\">sagemaker_session</span><span class=\"o\">=</span><span class=\"n\">sess</span><span class=\"p\">)</span>\n<span class=\"n\">linear</span><span class=\"o\">.</span><span class=\"n\">set_hyperparameters</span><span class=\"p\">(</span><span class=\"n\">feature_dim</span><span class=\"o\">=</span><span class=\"mi\">784</span><span class=\"p\">,</span>\n                        <span class=\"n\">predictor_type</span><span class=\"o\">=</span><span class=\"s1\">'binary_classifier'</span><span class=\"p\">,</span>\n                        <span class=\"n\">mini_batch_size</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n\n<span class=\"n\">linear</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'train'</span><span class=\"p\">:</span> <span class=\"n\">s3_train_data</span><span class=\"p\">},</span> <span class=\"n\">experiment_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">\"ExperimentName\"</span><span class=\"p\">:</span> <span class=\"n\">my_experiment</span><span class=\"o\">.</span><span class=\"n\">experiment_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"TrialName\"</span><span class=\"p\">:</span> <span class=\"n\">my_trial</span><span class=\"o\">.</span><span class=\"n\">trial_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"TrialComponentDisplayName\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MNIST-linear-learner\"</span><span class=\"p\">,</span>\n        <span class=\"p\">},)</span>\n\n<span class=\"n\">trial_component_analytics</span> <span class=\"o\">=</span> <span class=\"n\">analytics</span><span class=\"o\">.</span><span class=\"n\">ExperimentAnalytics</span><span class=\"p\">(</span><span class=\"n\">experiment_name</span><span class=\"o\">=</span><span class=\"n\">my_experiment</span><span class=\"o\">.</span><span class=\"n\">experiment_name</span><span class=\"p\">)</span>\n\n<span class=\"n\">analytic_table</span> <span class=\"o\">=</span> <span class=\"n\">trial_component_analytics</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"p\">()</span>\n<span class=\"n\">analytic_table</span>\n</pre>\n<p>For more examples, check out: <a href=\"https://github.com/awslabs/amazon-sagemaker-examples/tree/master/sagemaker-experiments\" rel=\"nofollow\">sagemaker-experiments</a> in <a href=\"https://github.com/awslabs/amazon-sagemaker-examples\" rel=\"nofollow\">AWS Labs Amazon SageMaker Examples</a>.</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>This library is licensed under the Apache 2.0 License.</p>\n</div>\n<div id=\"running-tests\">\n<h3>Running Tests</h3>\n<p><strong>Unit Tests</strong></p>\n<pre>tox tests/unit\n</pre>\n<p><strong>Integration Tests</strong></p>\n<p>To run the integration tests, the following prerequisites must be met:</p>\n<ul>\n<li>AWS account credentials are available in the environment for the boto3 client to use.</li>\n<li>The AWS account has an IAM role with SageMaker permissions.</li>\n</ul>\n<pre>tox tests/integ\n</pre>\n<ul>\n<li>Test against different regions</li>\n</ul>\n<pre>tox -e py37 -- --region cn-north-1\n</pre>\n</div>\n<div id=\"generate-docs\">\n<h3>Generate Docs</h3>\n<pre>tox -e docs\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7011271, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e3212388abc81f18699765b858f9a936", "sha256": "a64ae40d6d4279ac7d4ed507ec2dde25b6f5ccf8fa35d380622885cc61dd4953"}, "downloads": -1, "filename": "sagemaker_experiments-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e3212388abc81f18699765b858f9a936", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25116, "upload_time": "2019-12-03T18:47:07", "upload_time_iso_8601": "2019-12-03T18:47:07.229826Z", "url": "https://files.pythonhosted.org/packages/36/2a/ed86bce0dca6e400254fd0d8b93fd79c3c6e7a55d45678ee2bd389d8b943/sagemaker_experiments-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "5ab0a30155efb387729e019e21b83167", "sha256": "34bc00d7d257ef5bedf5548dcc0735547ec6b6396271086e3b27898c428f85e2"}, "downloads": -1, "filename": "sagemaker_experiments-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5ab0a30155efb387729e019e21b83167", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25114, "upload_time": "2019-12-03T19:00:07", "upload_time_iso_8601": "2019-12-03T19:00:07.435433Z", "url": "https://files.pythonhosted.org/packages/c6/99/f33e7179cf50970ce67f92d103cab33447528a50949c0ac708de7e56f8ca/sagemaker_experiments-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "84d341f293fb4bc656319c9b674a79bc", "sha256": "1250435deb26521152765de6f26fcb15d00418b3bf1c4770a6345a4795e1dd81"}, "downloads": -1, "filename": "sagemaker_experiments-0.1.10-py3-none-any.whl", "has_sig": false, "md5_digest": "84d341f293fb4bc656319c9b674a79bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30044, "upload_time": "2020-03-23T17:07:09", "upload_time_iso_8601": "2020-03-23T17:07:09.740580Z", "url": "https://files.pythonhosted.org/packages/1a/03/28137af7ad73b27d65e237a3df2d1236ac7f55ac0edd655e1cadc7c787b3/sagemaker_experiments-0.1.10-py3-none-any.whl", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "274847151022c8645a90ff0ec2ad1ea7", "sha256": "9094ed55194f8d34272a0532d8ce95d4cccc5e0c137509b4eb2bd6518cb88a26"}, "downloads": -1, "filename": "sagemaker_experiments-0.1.11-py3-none-any.whl", "has_sig": false, "md5_digest": "274847151022c8645a90ff0ec2ad1ea7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30072, "upload_time": "2020-03-24T17:07:23", "upload_time_iso_8601": "2020-03-24T17:07:23.234510Z", "url": "https://files.pythonhosted.org/packages/ce/0d/4eb667ab6d94b8e7de6adce170cab1651fd52371207e7b1b94a639539a96/sagemaker_experiments-0.1.11-py3-none-any.whl", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "d582a11c22783b8122de072977e50195", "sha256": "d120ef966c860e189bf093a3f7f551163485d962ed90b1a4e6ef19313c446f32"}, "downloads": -1, "filename": "sagemaker_experiments-0.1.12-py3-none-any.whl", "has_sig": false, "md5_digest": "d582a11c22783b8122de072977e50195", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31850, "upload_time": "2020-04-07T17:06:11", "upload_time_iso_8601": "2020-04-07T17:06:11.970710Z", "url": "https://files.pythonhosted.org/packages/5f/17/27df3daa7853a54f673deea7f3e5baf852afabfd8220146fbb5ab0ef236c/sagemaker_experiments-0.1.12-py3-none-any.whl", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "375e836ab101b21e30caaea0a354ffa6", "sha256": "53da1fc170f9e9ac92671a63d3a4be4a90110fb7e03688ae41dff8bec081123a"}, "downloads": -1, "filename": "sagemaker_experiments-0.1.13-py3-none-any.whl", "has_sig": false, "md5_digest": "375e836ab101b21e30caaea0a354ffa6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35160, "upload_time": "2020-04-13T17:07:05", "upload_time_iso_8601": "2020-04-13T17:07:05.804161Z", "url": "https://files.pythonhosted.org/packages/04/c6/c80307c5b9bebcc1eccfc08548c86191a73e353926d95331b3cb3ecd7fd2/sagemaker_experiments-0.1.13-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "2c94f1f46323967495f40a45502c935e", "sha256": "63730b30429679455447fd64c43c488902ae81c46451a7bc2042e0514b72d02f"}, "downloads": -1, "filename": "sagemaker_experiments-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2c94f1f46323967495f40a45502c935e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25103, "upload_time": "2019-12-04T03:04:38", "upload_time_iso_8601": "2019-12-04T03:04:38.874988Z", "url": "https://files.pythonhosted.org/packages/4f/97/6bdaf83ccd59ab9c3e06d9a23bf5fae7c0d8e7ada73683f2eb5f2938f509/sagemaker_experiments-0.1.2-py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "866747847a2f2cc009590c4b32dff70a", "sha256": "2bebe198ef1db694022cb717331cf9fce91773a1ac527826259094e7239d5636"}, "downloads": -1, "filename": "sagemaker_experiments-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "866747847a2f2cc009590c4b32dff70a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25161, "upload_time": "2019-12-05T21:22:39", "upload_time_iso_8601": "2019-12-05T21:22:39.198853Z", "url": "https://files.pythonhosted.org/packages/b3/ac/0a80ffc70870bc31e839cadf987e337dcd62a0c217b23c519ed5ae2c8852/sagemaker_experiments-0.1.3-py3-none-any.whl", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "e07d76445641a2597045835ee2056dfa", "sha256": "fb56f253bab78bc699f9b480a973c799f7bf429028de7ed3dc5b8caf165c18a7"}, "downloads": -1, "filename": "sagemaker_experiments-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "e07d76445641a2597045835ee2056dfa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25433, "upload_time": "2020-01-14T18:10:23", "upload_time_iso_8601": "2020-01-14T18:10:23.459076Z", "url": "https://files.pythonhosted.org/packages/45/e4/283bbbdf8cc91820d9977a42563e9e372c8f80c4276ea7b9026ee431b15e/sagemaker_experiments-0.1.4-py3-none-any.whl", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "9db7e5e783d9b1196852f551eef0c174", "sha256": "4048940d1242bea42473ec72b72724238fc502bfc6d49376bf4669c4b0b8f7d1"}, "downloads": -1, "filename": "sagemaker_experiments-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "9db7e5e783d9b1196852f551eef0c174", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26662, "upload_time": "2020-02-03T23:24:47", "upload_time_iso_8601": "2020-02-03T23:24:47.106567Z", "url": "https://files.pythonhosted.org/packages/67/5e/2c5f43dd141d8538639d86cf59b4557ed5f8fb962ce74c9e161e942e3205/sagemaker_experiments-0.1.5-py3-none-any.whl", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "0d711eae7d2614960bfd7306e86ab502", "sha256": "d04d16d84323b33a503cd99298f13ed49e0aeec2ef10379a76f17a6469bf4724"}, "downloads": -1, "filename": "sagemaker_experiments-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "0d711eae7d2614960bfd7306e86ab502", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26663, "upload_time": "2020-02-03T23:25:58", "upload_time_iso_8601": "2020-02-03T23:25:58.548491Z", "url": "https://files.pythonhosted.org/packages/98/39/683f3251a6299c16320f3c454272fe2f2d17f9aee7ac9e14790026a829a1/sagemaker_experiments-0.1.6-py3-none-any.whl", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "03cf3ec04b9da8e6f3771de4ead9e775", "sha256": "a241a46e28c2767daea9fe75be4dc203c5f790fe54766f23a2374b2de7a44256"}, "downloads": -1, "filename": "sagemaker_experiments-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "03cf3ec04b9da8e6f3771de4ead9e775", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26661, "upload_time": "2020-02-04T23:57:54", "upload_time_iso_8601": "2020-02-04T23:57:54.530494Z", "url": "https://files.pythonhosted.org/packages/c4/49/2fe8e93a8405de81ce4b94d7e72fbc9cd9abd8e6c444523f75f4053103c8/sagemaker_experiments-0.1.7-py3-none-any.whl", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "39f32bc91a66758997033ce816f5ae13", "sha256": "e3e52e82ea177d76ebb8635ad7b24667800db9aa6f40347b28366321d0a15d41"}, "downloads": -1, "filename": "sagemaker_experiments-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "39f32bc91a66758997033ce816f5ae13", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26688, "upload_time": "2020-03-10T05:28:01", "upload_time_iso_8601": "2020-03-10T05:28:01.605456Z", "url": "https://files.pythonhosted.org/packages/86/f7/0208103c5a36dd8dd0ac2287c061731d4a512d0e63d4637a92d4c70725b3/sagemaker_experiments-0.1.8-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "375e836ab101b21e30caaea0a354ffa6", "sha256": "53da1fc170f9e9ac92671a63d3a4be4a90110fb7e03688ae41dff8bec081123a"}, "downloads": -1, "filename": "sagemaker_experiments-0.1.13-py3-none-any.whl", "has_sig": false, "md5_digest": "375e836ab101b21e30caaea0a354ffa6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35160, "upload_time": "2020-04-13T17:07:05", "upload_time_iso_8601": "2020-04-13T17:07:05.804161Z", "url": "https://files.pythonhosted.org/packages/04/c6/c80307c5b9bebcc1eccfc08548c86191a73e353926d95331b3cb3ecd7fd2/sagemaker_experiments-0.1.13-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:59:18 2020"}