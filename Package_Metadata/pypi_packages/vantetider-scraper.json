{"info": {"author": "Jens Finn\u00e4s", "author_email": "jens.finnas@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "This is a scraper for statistical data from http://www.vantetider.se built on top of the `Statscraper package <https://github.com/jplusplus/statscraper>`.\n\nInstall\n-------\n\n  pip install -r requirements.txt\n\nThe scraper has to do a lot of requests and uses `requests-cache <https://pypi.python.org/pypi/requests-cache>` to store queries.\n\nExample usage\n-------------\n\n.. code:: python\n\n  from vantetider import VantetiderScraper\n\n  scraper = VantetiderScraper()\n  scraper.items  # List _implemeted_ datasets\n  # [<VantetiderDataset: VantatKortareAn60Dagar (V\u00e4ntat kortare \u00e4n 60 dagar )>, <VantetiderDataset: Overbelaggning (\u00d6verbel\u00e4ggningar)>, <VantetiderDataset: PrimarvardTelefon (Telefontillg\u00e4nglighet)>, <VantetiderDataset: PrimarvardBesok (L\u00e4karbes\u00f6k)>, <VantetiderDataset: SpecialiseradBesok (F\u00f6rstabes\u00f6k)>, <VantetiderDataset: SpecialiseradOperation (Operation/\u00e5tg\u00e4rd)>]\n\n  dataset = scraper.get(\"Overbelaggning\")  # Get a specific dataset\n\n  # List all available dimensions\n  print dataset.dimensions\n\n  print datatset.regions  # List available region\n  print datatset.years  # List available years\n\n  # Make a query, you have to explicitly define all dimension values you want\n  # to query. By default the scraper will fetch default values.\n  res = dataset.fetch({\n    \"region\": \"Blekinge\",\n    \"year\": \"2016\",\n    \"period\": \"Februari\",\n    # Currenty we can only query by id of dimension value\n    \"type_of_overbelaggning\": [\"0\", \"1\"], # \"Somatik\" and \"Psykiatri\"\n    })\n\n  # Do something with the result\n  df = res.pandas\n\nPractical application, using dataset.py for storege.\n\n.. code:: python\n\n  from vantetider import VantetiderScraper\n  from vantetider.allowed_values import TYPE_OF_OVERBELAGGNING, PERIODS\n  import dataset\n\n  db = dataset.connect('sqlite:///vantetider.db')\n\n  TOPIC = \"Overbelaggning\"\n\n  # Set up local db\n  table = db.create_table(TOPIC)\n  scraper = VantetiderScraper()\n\n  dataset = scraper.get(TOPIC)\n\n  # Get all available regions and years for query\n  years = [x.value for x in dataset.years]\n  regions = [x.value for x in dataset.regions]\n\n  # Query in chunks to be able to store to database on the run\n  for region in regions:\n      for year in years:\n          res = dataset.fetch({\n              \"year\": year,\n              \"type_of_overbelaggning\": [x[0] for x in TYPE_OF_OVERBELAGGNING],\n              \"period\": PERIODS,\n              \"region\": region,\n              })\n          df = res.pandas\n          data = res.list_of_dicts\n          table.insert_many(data)\n\nTODO\n----\n\n- Implement scraping of \"Aterbesok\", \"Undersokningar\", \"BUPdetalj\", \"BUP\".\n- Enable querying on label names on all dimensions\n- Add more allowed values to `vantetider/allowed_values.py`\n- Make requests-cache optional.\n\nDevlop\n------\n\nRun tests:\n\n  make tests", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/jplusplus/vantetider-scraper/archive/0.1.8.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jplusplus/vantetider-scraper", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "vantetider-scraper", "package_url": "https://pypi.org/project/vantetider-scraper/", "platform": "", "project_url": "https://pypi.org/project/vantetider-scraper/", "project_urls": {"Download": "https://github.com/jplusplus/vantetider-scraper/archive/0.1.8.tar.gz", "Homepage": "https://github.com/jplusplus/vantetider-scraper"}, "release_url": "https://pypi.org/project/vantetider-scraper/0.1.8/", "requires_dist": null, "requires_python": "", "summary": "A scraper of statistical data from Vantetider.se built on top of Statscraper.", "version": "0.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a scraper for statistical data from <a href=\"http://www.vantetider.se\" rel=\"nofollow\">http://www.vantetider.se</a> built on top of the <cite>Statscraper package &lt;https://github.com/jplusplus/statscraper&gt;</cite>.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<blockquote>\npip install -r requirements.txt</blockquote>\n<p>The scraper has to do a lot of requests and uses <cite>requests-cache &lt;https://pypi.python.org/pypi/requests-cache&gt;</cite> to store queries.</p>\n</div>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">vantetider</span> <span class=\"kn\">import</span> <span class=\"n\">VantetiderScraper</span>\n\n<span class=\"n\">scraper</span> <span class=\"o\">=</span> <span class=\"n\">VantetiderScraper</span><span class=\"p\">()</span>\n<span class=\"n\">scraper</span><span class=\"o\">.</span><span class=\"n\">items</span>  <span class=\"c1\"># List _implemeted_ datasets</span>\n<span class=\"c1\"># [&lt;VantetiderDataset: VantatKortareAn60Dagar (V\u00e4ntat kortare \u00e4n 60 dagar )&gt;, &lt;VantetiderDataset: Overbelaggning (\u00d6verbel\u00e4ggningar)&gt;, &lt;VantetiderDataset: PrimarvardTelefon (Telefontillg\u00e4nglighet)&gt;, &lt;VantetiderDataset: PrimarvardBesok (L\u00e4karbes\u00f6k)&gt;, &lt;VantetiderDataset: SpecialiseradBesok (F\u00f6rstabes\u00f6k)&gt;, &lt;VantetiderDataset: SpecialiseradOperation (Operation/\u00e5tg\u00e4rd)&gt;]</span>\n\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">scraper</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"Overbelaggning\"</span><span class=\"p\">)</span>  <span class=\"c1\"># Get a specific dataset</span>\n\n<span class=\"c1\"># List all available dimensions</span>\n<span class=\"nb\">print</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">dimensions</span>\n\n<span class=\"nb\">print</span> <span class=\"n\">datatset</span><span class=\"o\">.</span><span class=\"n\">regions</span>  <span class=\"c1\"># List available region</span>\n<span class=\"nb\">print</span> <span class=\"n\">datatset</span><span class=\"o\">.</span><span class=\"n\">years</span>  <span class=\"c1\"># List available years</span>\n\n<span class=\"c1\"># Make a query, you have to explicitly define all dimension values you want</span>\n<span class=\"c1\"># to query. By default the scraper will fetch default values.</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">({</span>\n  <span class=\"s2\">\"region\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Blekinge\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"year\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2016\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"period\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Februari\"</span><span class=\"p\">,</span>\n  <span class=\"c1\"># Currenty we can only query by id of dimension value</span>\n  <span class=\"s2\">\"type_of_overbelaggning\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"0\"</span><span class=\"p\">,</span> <span class=\"s2\">\"1\"</span><span class=\"p\">],</span> <span class=\"c1\"># \"Somatik\" and \"Psykiatri\"</span>\n  <span class=\"p\">})</span>\n\n<span class=\"c1\"># Do something with the result</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">pandas</span>\n</pre>\n<p>Practical application, using dataset.py for storege.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">vantetider</span> <span class=\"kn\">import</span> <span class=\"n\">VantetiderScraper</span>\n<span class=\"kn\">from</span> <span class=\"nn\">vantetider.allowed_values</span> <span class=\"kn\">import</span> <span class=\"n\">TYPE_OF_OVERBELAGGNING</span><span class=\"p\">,</span> <span class=\"n\">PERIODS</span>\n<span class=\"kn\">import</span> <span class=\"nn\">dataset</span>\n\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s1\">'sqlite:///vantetider.db'</span><span class=\"p\">)</span>\n\n<span class=\"n\">TOPIC</span> <span class=\"o\">=</span> <span class=\"s2\">\"Overbelaggning\"</span>\n\n<span class=\"c1\"># Set up local db</span>\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">create_table</span><span class=\"p\">(</span><span class=\"n\">TOPIC</span><span class=\"p\">)</span>\n<span class=\"n\">scraper</span> <span class=\"o\">=</span> <span class=\"n\">VantetiderScraper</span><span class=\"p\">()</span>\n\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">scraper</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">TOPIC</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get all available regions and years for query</span>\n<span class=\"n\">years</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">years</span><span class=\"p\">]</span>\n<span class=\"n\">regions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">regions</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Query in chunks to be able to store to database on the run</span>\n<span class=\"k\">for</span> <span class=\"n\">region</span> <span class=\"ow\">in</span> <span class=\"n\">regions</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">year</span> <span class=\"ow\">in</span> <span class=\"n\">years</span><span class=\"p\">:</span>\n        <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">({</span>\n            <span class=\"s2\">\"year\"</span><span class=\"p\">:</span> <span class=\"n\">year</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"type_of_overbelaggning\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">TYPE_OF_OVERBELAGGNING</span><span class=\"p\">],</span>\n            <span class=\"s2\">\"period\"</span><span class=\"p\">:</span> <span class=\"n\">PERIODS</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"region\"</span><span class=\"p\">:</span> <span class=\"n\">region</span><span class=\"p\">,</span>\n            <span class=\"p\">})</span>\n        <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">pandas</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">list_of_dicts</span>\n        <span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">insert_many</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Implement scraping of \u201cAterbesok\u201d, \u201cUndersokningar\u201d, \u201cBUPdetalj\u201d, \u201cBUP\u201d.</li>\n<li>Enable querying on label names on all dimensions</li>\n<li>Add more allowed values to <cite>vantetider/allowed_values.py</cite></li>\n<li>Make requests-cache optional.</li>\n</ul>\n</div>\n<div id=\"devlop\">\n<h2>Devlop</h2>\n<p>Run tests:</p>\n<blockquote>\nmake tests</blockquote>\n</div>\n\n          </div>"}, "last_serial": 4933945, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "31752cce173c16dcbd0029dec25e489b", "sha256": "237a7a618ffb587cbe8723d3392c3ec349af0d6865b83d8f3888abad72ff3a46"}, "downloads": -1, "filename": "vantetider_scraper-0.1.2.tar.gz", "has_sig": false, "md5_digest": "31752cce173c16dcbd0029dec25e489b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10227, "upload_time": "2017-11-06T12:51:46", "upload_time_iso_8601": "2017-11-06T12:51:46.846948Z", "url": "https://files.pythonhosted.org/packages/06/0d/d8952e99804fa6075b6f7c55c8cf453a52c17a9ea2aff413cb5372d07a1e/vantetider_scraper-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "495119affd25d8952e60aee1cf3122d2", "sha256": "fa52edf884f9b1e259293c0b9fe0852556b899fda6d104d66b6ba47f8f3ef847"}, "downloads": -1, "filename": "vantetider_scraper-0.1.3.tar.gz", "has_sig": false, "md5_digest": "495119affd25d8952e60aee1cf3122d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10226, "upload_time": "2017-11-06T12:54:26", "upload_time_iso_8601": "2017-11-06T12:54:26.337583Z", "url": "https://files.pythonhosted.org/packages/e0/24/9572df33b02942f3699111cb880a5469b761e07c689e644bccb8f517dbfa/vantetider_scraper-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "2b7ec4fa9644dac5ab9c53b78c21e5fe", "sha256": "b674430d25fb9ec7d41ee7761d5b833c5768bec97053b97714fd5d857b3e11f1"}, "downloads": -1, "filename": "vantetider_scraper-0.1.4.tar.gz", "has_sig": false, "md5_digest": "2b7ec4fa9644dac5ab9c53b78c21e5fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10367, "upload_time": "2017-11-06T14:32:50", "upload_time_iso_8601": "2017-11-06T14:32:50.541810Z", "url": "https://files.pythonhosted.org/packages/00/93/bdb225234072aaaca2efb12e9653ea538ed712f202fbce6e47b23daef86a/vantetider_scraper-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "a2c4790897e64d522d0f22f190507789", "sha256": "f00335237404151b98eb922903b61c7034b904c1598ac214eb4bcefbc5b67e73"}, "downloads": -1, "filename": "vantetider_scraper-0.1.5.tar.gz", "has_sig": false, "md5_digest": "a2c4790897e64d522d0f22f190507789", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10482, "upload_time": "2018-02-14T08:13:21", "upload_time_iso_8601": "2018-02-14T08:13:21.767430Z", "url": "https://files.pythonhosted.org/packages/74/09/2e2c2ebe723103bebd03a40455e513edf0cef404a05bfe64e9c76bfcf0f2/vantetider_scraper-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "07fc88e87718675433385c248a9dacf9", "sha256": "5fb18278e7391c9a261177ae3d2fa0f6c0941ff10dd0b31cfc0c6f39cd0335e6"}, "downloads": -1, "filename": "vantetider_scraper-0.1.6.tar.gz", "has_sig": false, "md5_digest": "07fc88e87718675433385c248a9dacf9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10403, "upload_time": "2018-05-03T10:50:27", "upload_time_iso_8601": "2018-05-03T10:50:27.885202Z", "url": "https://files.pythonhosted.org/packages/c6/ca/70e0ef372978ccffa1ed156d17d97b2482245f477f9bda0c50490316f0c7/vantetider_scraper-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "1eea925bce4f356d712202e140591888", "sha256": "7e6c2652e33161a46154464216118d42b1a1161bfac436941f97a1bac851e15b"}, "downloads": -1, "filename": "vantetider_scraper-0.1.7.tar.gz", "has_sig": false, "md5_digest": "1eea925bce4f356d712202e140591888", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9232, "upload_time": "2019-01-25T11:34:34", "upload_time_iso_8601": "2019-01-25T11:34:34.413410Z", "url": "https://files.pythonhosted.org/packages/bc/93/878acb4a53f6b647f3fe0b524f3e50e1a4fb4f5c07596fa539e55dc27902/vantetider_scraper-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "4efd3257abbf368c0d45b17a444ebab4", "sha256": "309ff755600ab9c02cbdd1626ad650609561a508eeb77b81fcc6cc1c061d735a"}, "downloads": -1, "filename": "vantetider_scraper-0.1.8.tar.gz", "has_sig": false, "md5_digest": "4efd3257abbf368c0d45b17a444ebab4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9289, "upload_time": "2019-03-13T10:17:59", "upload_time_iso_8601": "2019-03-13T10:17:59.767631Z", "url": "https://files.pythonhosted.org/packages/32/b4/8d23c78f5d88106d6c9699f9a82dcf2c6324f644162bb2376039e0770ec6/vantetider_scraper-0.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4efd3257abbf368c0d45b17a444ebab4", "sha256": "309ff755600ab9c02cbdd1626ad650609561a508eeb77b81fcc6cc1c061d735a"}, "downloads": -1, "filename": "vantetider_scraper-0.1.8.tar.gz", "has_sig": false, "md5_digest": "4efd3257abbf368c0d45b17a444ebab4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9289, "upload_time": "2019-03-13T10:17:59", "upload_time_iso_8601": "2019-03-13T10:17:59.767631Z", "url": "https://files.pythonhosted.org/packages/32/b4/8d23c78f5d88106d6c9699f9a82dcf2c6324f644162bb2376039e0770ec6/vantetider_scraper-0.1.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:53 2020"}