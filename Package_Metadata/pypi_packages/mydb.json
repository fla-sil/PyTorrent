{"info": {"author": "Young King", "author_email": "yanckin@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "License :: OSI Approved :: BSD License", "Programming Language :: Python"], "description": "mydb\n================\nmydb is a simple db wrapper for mysql.\n\n.. contents::\n\nInstall\n=================\n::\n\n    pip install mydb\n\nUsage\n================\n\nSingle Connection\n--------------------\n\n::\n\n\n        from mydb.connection import Connection\n\n        db = Connection(\"mysql://youngking@localhost:13306/mydatabase\")\n        for article in db.query(\"SELECT * FROM articles\"):\n            print article.title\n\n\nMultiple Connection Like Master/Slave\n-----------------------------------------\n\n::\n\n        from mydb.router import ConnectionRouter\n        from mydb.proxy import DBProxy\n        router = ConnectionRouter([\"myapp.somewhere.MasterSlaveRouter\"])\n        db = DBProxy(router)\n\n        for article in db.query(\"SELECT * FROM articles\"):\n            print article.title\n\n\nDatabase routers\n~~~~~~~~~~~~~~~~~~~\n\nA database Router is a class that provides up to two methods:\n\ndb_for_read(statement, \\**hints)\n\n::\n\n    Suggest the database that should be used for read operations for ``SELECT`` statement.\n\n    If a database operation is able to provide any additional information that might assist in selecting a database, it will be provided in the hints dictionary. Details on valid hints are provided below.\n\n    Returns None if there is no suggestion.\n\ndb_for_write(model, \\**hints)\n\n::\n\n    Suggest the database that should be used for writes of statements except ``SELECT``.\n\n    If a database operation is able to provide any additional information that might assist in selecting a database, it will be provided in the hints dictionary. Details on valid hints are provided below.\n\n\nThere is an example in ``tests/test_router.py``.\n\nA router doesn\u2019t have to provide all these methods \u2013 it may omit one or more of them. If one of the methods is omitted, \nmydb will skip that router when performing the relevant check.\n\n\nIn ``mydb.router``  there are some default routers, where you can inherit from and overwriten them.\n\n\nLinks\n===============================\n\n* `documentation <http://pythonhosted.org/mydb>`_\n\n* `SouceCode at github <https://github.com/youngking/mydb>`_", "description_content_type": null, "docs_url": "https://pythonhosted.org/mydb/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/youngking/mydb", "keywords": "orm mysql", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "mydb", "package_url": "https://pypi.org/project/mydb/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mydb/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/youngking/mydb"}, "release_url": "https://pypi.org/project/mydb/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "db wrapper for mysql", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"mydb\">\n<h2><a href=\"#id1\" rel=\"nofollow\">mydb</a></h2>\n<p>mydb is a simple db wrapper for mysql.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#mydb\" id=\"id1\" rel=\"nofollow\">mydb</a></li>\n<li><a href=\"#install\" id=\"id2\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#usage\" id=\"id3\" rel=\"nofollow\">Usage</a><ul>\n<li><a href=\"#single-connection\" id=\"id4\" rel=\"nofollow\">Single Connection</a></li>\n<li><a href=\"#multiple-connection-like-master-slave\" id=\"id5\" rel=\"nofollow\">Multiple Connection Like Master/Slave</a><ul>\n<li><a href=\"#database-routers\" id=\"id6\" rel=\"nofollow\">Database routers</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#links\" id=\"id7\" rel=\"nofollow\">Links</a></li>\n</ul>\n</div>\n</div>\n<div id=\"install\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Install</a></h2>\n<pre>pip install mydb\n</pre>\n</div>\n<div id=\"usage\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Usage</a></h2>\n<div id=\"single-connection\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Single Connection</a></h3>\n<pre>from mydb.connection import Connection\n\ndb = Connection(\"mysql://youngking@localhost:13306/mydatabase\")\nfor article in db.query(\"SELECT * FROM articles\"):\n    print article.title\n</pre>\n</div>\n<div id=\"multiple-connection-like-master-slave\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Multiple Connection Like Master/Slave</a></h3>\n<pre>from mydb.router import ConnectionRouter\nfrom mydb.proxy import DBProxy\nrouter = ConnectionRouter([\"myapp.somewhere.MasterSlaveRouter\"])\ndb = DBProxy(router)\n\nfor article in db.query(\"SELECT * FROM articles\"):\n    print article.title\n</pre>\n<div id=\"database-routers\">\n<h4><a href=\"#id6\" rel=\"nofollow\">Database routers</a></h4>\n<p>A database Router is a class that provides up to two methods:</p>\n<p>db_for_read(statement, **hints)</p>\n<pre>Suggest the database that should be used for read operations for ``SELECT`` statement.\n\nIf a database operation is able to provide any additional information that might assist in selecting a database, it will be provided in the hints dictionary. Details on valid hints are provided below.\n\nReturns None if there is no suggestion.\n</pre>\n<p>db_for_write(model, **hints)</p>\n<pre>Suggest the database that should be used for writes of statements except ``SELECT``.\n\nIf a database operation is able to provide any additional information that might assist in selecting a database, it will be provided in the hints dictionary. Details on valid hints are provided below.\n</pre>\n<p>There is an example in <tt>tests/test_router.py</tt>.</p>\n<p>A router doesn\u2019t have to provide all these methods \u2013 it may omit one or more of them. If one of the methods is omitted,\nmydb will skip that router when performing the relevant check.</p>\n<p>In <tt>mydb.router</tt>  there are some default routers, where you can inherit from and overwriten them.</p>\n</div>\n</div>\n</div>\n<div id=\"links\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Links</a></h2>\n<ul>\n<li><a href=\"http://pythonhosted.org/mydb\" rel=\"nofollow\">documentation</a></li>\n<li><a href=\"https://github.com/youngking/mydb\" rel=\"nofollow\">SouceCode at github</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 906023, "releases": {"0.1.0": [], "0.1.2": [{"comment_text": "", "digests": {"md5": "1d21a46b16496fc41ce81c357802eb8d", "sha256": "73b8d0ba5460f626990519db99846419f200925c2f178af873c81f156a591fa5"}, "downloads": -1, "filename": "mydb-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1d21a46b16496fc41ce81c357802eb8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17568, "upload_time": "2013-10-29T05:32:31", "upload_time_iso_8601": "2013-10-29T05:32:31.076232Z", "url": "https://files.pythonhosted.org/packages/2b/37/dde5ab43c033222c86c78676437c948c2330b148cf719bfc8850d9ab180d/mydb-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1d21a46b16496fc41ce81c357802eb8d", "sha256": "73b8d0ba5460f626990519db99846419f200925c2f178af873c81f156a591fa5"}, "downloads": -1, "filename": "mydb-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1d21a46b16496fc41ce81c357802eb8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17568, "upload_time": "2013-10-29T05:32:31", "upload_time_iso_8601": "2013-10-29T05:32:31.076232Z", "url": "https://files.pythonhosted.org/packages/2b/37/dde5ab43c033222c86c78676437c948c2330b148cf719bfc8850d9ab180d/mydb-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:34 2020"}