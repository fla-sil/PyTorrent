{"info": {"author": "Pedro Guerra Demingos", "author_email": "pdemingos@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "ChemStruct: Chemical Structure Analysis Package\n================================================\n\n## About\n\nChemStruct is a Python package for structural analysis of atomic files (like `.xyz` files) and assistance with molecular dynamics simulations on LAMMPS. ChemStruct computes bonds based on the distance between atoms, as well as angles and dihedrals, hybridization, cycles, etc. It also writes LAMMPS Data Files with `atom_style full` for a given `.xyz` file, using CGenFF (CHARMM General Force Field) atomic classification and original parameters. \n\nReady-to-run examples can be found in the `examples` directory.\n\n## Usage\n\nInstall ChemStruct using pip:\n\n```bash\npip3 install chemstruct\n```\n\nThen run Python, import the package and use the `write_lmpdat()` function to convert your xyz file into a LAMMPS Data File: \n\n```bash\nfrom chemstruct.quick import write_lmpdat\nwrite_lmpdat(\"yourdir/yourfile.xyz\", \"outdir/outfile.lmp\")\n```\n\nNote that: \n\n(1) The `write_lmpdat()` function will take a break while the user is checking the parameters in the `.par` file (written in the same directory as the input `.xyz` file, with the same name plus `_(computed_parameters).par`). This is needed because not all bonds/angles/dihedrals found in the input file will always have parameters, so a few manual additions may be necessary. Another necessity is the choice of atomic charges, since CHARMM doesn't have a one-for-one class-charge correspondence. ChemStruct makes suggestions for charges. If your system if simple enough, no manual editing will be necessary. \n\n(2) The `write_lmpdat()` function requires a defined Lattice in the input `.xyz` file, e.g. as generated by Ovito (open-source visualization software). The Lattice is needed when the system is periodic -- if that is not the case, writing `Lattice=\"10.0 0.0 0.0 0.0 10 0.0 0.0 0.0 10.0\"`in the second line of your `.xyz` file will make it work. \n\n## Contact\n\nSend any bugs or suggestions to `pdemingos@gmail.com`. \n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pdemingos/chemstruct", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "chemstruct", "package_url": "https://pypi.org/project/chemstruct/", "platform": "", "project_url": "https://pypi.org/project/chemstruct/", "project_urls": {"Homepage": "https://github.com/pdemingos/chemstruct"}, "release_url": "https://pypi.org/project/chemstruct/2019.6.2/", "requires_dist": null, "requires_python": "", "summary": "Package for chemical structure analysis of atomic files", "version": "2019.6.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ChemStruct: Chemical Structure Analysis Package</h1>\n<h2>About</h2>\n<p>ChemStruct is a Python package for structural analysis of atomic files (like <code>.xyz</code> files) and assistance with molecular dynamics simulations on LAMMPS. ChemStruct computes bonds based on the distance between atoms, as well as angles and dihedrals, hybridization, cycles, etc. It also writes LAMMPS Data Files with <code>atom_style full</code> for a given <code>.xyz</code> file, using CGenFF (CHARMM General Force Field) atomic classification and original parameters.</p>\n<p>Ready-to-run examples can be found in the <code>examples</code> directory.</p>\n<h2>Usage</h2>\n<p>Install ChemStruct using pip:</p>\n<pre>pip3 install chemstruct\n</pre>\n<p>Then run Python, import the package and use the <code>write_lmpdat()</code> function to convert your xyz file into a LAMMPS Data File:</p>\n<pre>from chemstruct.quick import write_lmpdat\nwrite_lmpdat<span class=\"o\">(</span><span class=\"s2\">\"yourdir/yourfile.xyz\"</span>, <span class=\"s2\">\"outdir/outfile.lmp\"</span><span class=\"o\">)</span>\n</pre>\n<p>Note that:</p>\n<p>(1) The <code>write_lmpdat()</code> function will take a break while the user is checking the parameters in the <code>.par</code> file (written in the same directory as the input <code>.xyz</code> file, with the same name plus <code>_(computed_parameters).par</code>). This is needed because not all bonds/angles/dihedrals found in the input file will always have parameters, so a few manual additions may be necessary. Another necessity is the choice of atomic charges, since CHARMM doesn't have a one-for-one class-charge correspondence. ChemStruct makes suggestions for charges. If your system if simple enough, no manual editing will be necessary.</p>\n<p>(2) The <code>write_lmpdat()</code> function requires a defined Lattice in the input <code>.xyz</code> file, e.g. as generated by Ovito (open-source visualization software). The Lattice is needed when the system is periodic -- if that is not the case, writing <code>Lattice=\"10.0 0.0 0.0 0.0 10 0.0 0.0 0.0 10.0\"</code>in the second line of your <code>.xyz</code> file will make it work.</p>\n<h2>Contact</h2>\n<p>Send any bugs or suggestions to <code>pdemingos@gmail.com</code>.</p>\n\n          </div>"}, "last_serial": 5421068, "releases": {"2019.6.1": [{"comment_text": "", "digests": {"md5": "c9ec222b868a15d5dd6e36f2f85ec2d9", "sha256": "c9e97ff77c5d9c7f1511363cd8a36dc1604281ff196900c2dd72984965fab341"}, "downloads": -1, "filename": "chemstruct-2019.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c9ec222b868a15d5dd6e36f2f85ec2d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 180008, "upload_time": "2019-05-27T19:24:56", "upload_time_iso_8601": "2019-05-27T19:24:56.367260Z", "url": "https://files.pythonhosted.org/packages/ee/35/cb0df3d0fb4166002e22c66060a1efd528e3722a47c95cd39e0e2fdfe5ca/chemstruct-2019.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "462e5b215e3df5d71504249279d87089", "sha256": "7407225372bc729780f564b61e723ebfe19af95bf43c1d3413c088cf64a23e65"}, "downloads": -1, "filename": "chemstruct-2019.6.1.tar.gz", "has_sig": false, "md5_digest": "462e5b215e3df5d71504249279d87089", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 161525, "upload_time": "2019-05-27T19:24:59", "upload_time_iso_8601": "2019-05-27T19:24:59.823524Z", "url": "https://files.pythonhosted.org/packages/92/fa/f9aeaf98bec6787c5dea0f27e9dd4a29807dddf25a9c695ef4123fdb9eba/chemstruct-2019.6.1.tar.gz", "yanked": false}], "2019.6.2": [{"comment_text": "", "digests": {"md5": "4a5f41311305d59999ee15be1c4803d3", "sha256": "a2c99c57c6f0b2ec265883ef74f9e750f8adbacc2da0a9c2098310f7b8e97288"}, "downloads": -1, "filename": "chemstruct-2019.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4a5f41311305d59999ee15be1c4803d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 180297, "upload_time": "2019-06-19T15:59:15", "upload_time_iso_8601": "2019-06-19T15:59:15.834127Z", "url": "https://files.pythonhosted.org/packages/d9/17/b0bc0b50021c7fa000dcc25a7e7639d3746d17d16782fd21fa413ceb7aa6/chemstruct-2019.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf12366452a75ddb96e362b69f53b717", "sha256": "b45a821734897ad1ec3621d39573b2a5f72dcae2d540b86109192d18c8012201"}, "downloads": -1, "filename": "chemstruct-2019.6.2.tar.gz", "has_sig": false, "md5_digest": "bf12366452a75ddb96e362b69f53b717", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 160966, "upload_time": "2019-06-19T15:59:18", "upload_time_iso_8601": "2019-06-19T15:59:18.487924Z", "url": "https://files.pythonhosted.org/packages/ed/d6/97d0ed646ef6af9a65ab76b935c53ab75a8205872325af04a5204fa204fd/chemstruct-2019.6.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4a5f41311305d59999ee15be1c4803d3", "sha256": "a2c99c57c6f0b2ec265883ef74f9e750f8adbacc2da0a9c2098310f7b8e97288"}, "downloads": -1, "filename": "chemstruct-2019.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4a5f41311305d59999ee15be1c4803d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 180297, "upload_time": "2019-06-19T15:59:15", "upload_time_iso_8601": "2019-06-19T15:59:15.834127Z", "url": "https://files.pythonhosted.org/packages/d9/17/b0bc0b50021c7fa000dcc25a7e7639d3746d17d16782fd21fa413ceb7aa6/chemstruct-2019.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf12366452a75ddb96e362b69f53b717", "sha256": "b45a821734897ad1ec3621d39573b2a5f72dcae2d540b86109192d18c8012201"}, "downloads": -1, "filename": "chemstruct-2019.6.2.tar.gz", "has_sig": false, "md5_digest": "bf12366452a75ddb96e362b69f53b717", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 160966, "upload_time": "2019-06-19T15:59:18", "upload_time_iso_8601": "2019-06-19T15:59:18.487924Z", "url": "https://files.pythonhosted.org/packages/ed/d6/97d0ed646ef6af9a65ab76b935c53ab75a8205872325af04a5204fa204fd/chemstruct-2019.6.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:39 2020"}