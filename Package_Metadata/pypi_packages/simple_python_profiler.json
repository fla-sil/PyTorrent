{"info": {"author": "Jeshan G. BABOOA", "author_email": "j@jeshan.co", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License"], "description": "# simple_python_profiler\n\nAn early look at a _simple_ Python profiler, written in Python. Get started by typing `pip install simple_python_profiler`.\n\n## Description\nA profiler that times every function call and reports back the top 100 slowest functions.\n\n_logs every function call means it's non-sampling, hence resource-intensive. If that's unsuitable, check out something like [py-spy](https://github.com/benfred/py-spy)._\n\nUsage:\n```python\n# your-script.py\n\nfrom simple_python_profiler import Profiler\nif __name__ == '__main__':\n    with Profiler():\n        run_your_code()\n\n```\n\nThis will decorate all your top-level functions in your modules. System (built-in) and pip-installed packages (those that go in `dist-packages`) are excluded.\n\nSince the default behaviour is to not include nested functions, you can profile your nested functions too as follows:\n\n```python\nfrom simple_python_profiler import profile_recursive\n\n# your-module.py\n\ndef top_level_function():\n\n    @profile_recursive\n    def inner_function():\n        print('in inner fn')\n\n```\n\nThis recursive feature relies on the [codetransformer](https://github.com/llllllllll/codetransformer) dependency. However, it has a few bugs in recent versions of Python. If you encounter runtime exceptions with `simple_python_profiler`, use the second, non-recursive decorator:\n\n```python\nfrom simple_python_profiler import profile\n\n# your-module.py\n\ndef top_level_function():\n\n    @profile\n    def inner_function():\n        print('in inner fn')\n\n```\n\n# Releasing on PyPI\n- `pipenv shell`\n- `flit build`\n- `flit publish`\n\nEnter password when prompted.\n\n# TODO\n- option to include system packages\n\nReleased under the MIT licence. See file named LICENCE for details.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jeshan/simple-python-profiler", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "simple_python_profiler", "package_url": "https://pypi.org/project/simple_python_profiler/", "platform": "", "project_url": "https://pypi.org/project/simple_python_profiler/", "project_urls": {"Homepage": "https://github.com/jeshan/simple-python-profiler"}, "release_url": "https://pypi.org/project/simple_python_profiler/0.2/", "requires_dist": ["recursive-decorator >=1,<2", "loguru <1"], "requires_python": "", "summary": "A simple cli-based profiler for Python", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>simple_python_profiler</h1>\n<p>An early look at a <em>simple</em> Python profiler, written in Python. Get started by typing <code>pip install simple_python_profiler</code>.</p>\n<h2>Description</h2>\n<p>A profiler that times every function call and reports back the top 100 slowest functions.</p>\n<p><em>logs every function call means it's non-sampling, hence resource-intensive. If that's unsuitable, check out something like <a href=\"https://github.com/benfred/py-spy\" rel=\"nofollow\">py-spy</a>.</em></p>\n<p>Usage:</p>\n<pre><span class=\"c1\"># your-script.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">simple_python_profiler</span> <span class=\"kn\">import</span> <span class=\"n\">Profiler</span>\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"k\">with</span> <span class=\"n\">Profiler</span><span class=\"p\">():</span>\n        <span class=\"n\">run_your_code</span><span class=\"p\">()</span>\n</pre>\n<p>This will decorate all your top-level functions in your modules. System (built-in) and pip-installed packages (those that go in <code>dist-packages</code>) are excluded.</p>\n<p>Since the default behaviour is to not include nested functions, you can profile your nested functions too as follows:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simple_python_profiler</span> <span class=\"kn\">import</span> <span class=\"n\">profile_recursive</span>\n\n<span class=\"c1\"># your-module.py</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">top_level_function</span><span class=\"p\">():</span>\n\n    <span class=\"nd\">@profile_recursive</span>\n    <span class=\"k\">def</span> <span class=\"nf\">inner_function</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'in inner fn'</span><span class=\"p\">)</span>\n</pre>\n<p>This recursive feature relies on the <a href=\"https://github.com/llllllllll/codetransformer\" rel=\"nofollow\">codetransformer</a> dependency. However, it has a few bugs in recent versions of Python. If you encounter runtime exceptions with <code>simple_python_profiler</code>, use the second, non-recursive decorator:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simple_python_profiler</span> <span class=\"kn\">import</span> <span class=\"n\">profile</span>\n\n<span class=\"c1\"># your-module.py</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">top_level_function</span><span class=\"p\">():</span>\n\n    <span class=\"nd\">@profile</span>\n    <span class=\"k\">def</span> <span class=\"nf\">inner_function</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'in inner fn'</span><span class=\"p\">)</span>\n</pre>\n<h1>Releasing on PyPI</h1>\n<ul>\n<li><code>pipenv shell</code></li>\n<li><code>flit build</code></li>\n<li><code>flit publish</code></li>\n</ul>\n<p>Enter password when prompted.</p>\n<h1>TODO</h1>\n<ul>\n<li>option to include system packages</li>\n</ul>\n<p>Released under the MIT licence. See file named LICENCE for details.</p>\n\n          </div>"}, "last_serial": 6443422, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f4011addc9a569b9dfe8ebfa4bb9a4d7", "sha256": "1160d5fd4b4bc0b70fa2402e39dc6dfdac0f770cebcb5bc062b969e8a682ed17"}, "downloads": -1, "filename": "simple_python_profiler-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f4011addc9a569b9dfe8ebfa4bb9a4d7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4583, "upload_time": "2020-01-13T09:22:52", "upload_time_iso_8601": "2020-01-13T09:22:52.062642Z", "url": "https://files.pythonhosted.org/packages/fb/76/a9a1d900f72835beb50b16a81d87b002a176e2352c6228f61fa4efa8481e/simple_python_profiler-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9447d9e7a665f7a351ec650e02e614d", "sha256": "e7f7c7d964525d5ef18c741ae1f0be6f6342fbd4ae3ec87f641f2022240217b0"}, "downloads": -1, "filename": "simple_python_profiler-0.1.tar.gz", "has_sig": false, "md5_digest": "b9447d9e7a665f7a351ec650e02e614d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7874, "upload_time": "2020-01-13T09:23:25", "upload_time_iso_8601": "2020-01-13T09:23:25.449307Z", "url": "https://files.pythonhosted.org/packages/f0/bd/be84aaba3911e29b0b7283aab4c009a770bfbea739af07b4f5711caba8d0/simple_python_profiler-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "491c88417fdb4eca6b166a5e824afd82", "sha256": "ce38f672d92acafb54f74024f1b713ddfee2f13fe59e42ebc45394c538d37f55"}, "downloads": -1, "filename": "simple_python_profiler-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "491c88417fdb4eca6b166a5e824afd82", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5344, "upload_time": "2020-01-13T09:29:15", "upload_time_iso_8601": "2020-01-13T09:29:15.298779Z", "url": "https://files.pythonhosted.org/packages/0d/82/d2556b2c19a708f2957fef128e00296c2d3fc8c6e33bc62a0b86bf673f74/simple_python_profiler-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21e2c6a65c8f2af6d21e8822fad2f578", "sha256": "969eaa0af8ad4bf1fac4ce0880f50e8ce00b82898d2510dc9e030f27c3220d09"}, "downloads": -1, "filename": "simple_python_profiler-0.2.tar.gz", "has_sig": false, "md5_digest": "21e2c6a65c8f2af6d21e8822fad2f578", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7938, "upload_time": "2020-01-13T09:29:21", "upload_time_iso_8601": "2020-01-13T09:29:21.623452Z", "url": "https://files.pythonhosted.org/packages/de/ed/8676340fff77e2535a1062690a361dfc6520af713cbc45cc34d27e9a4bb3/simple_python_profiler-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "491c88417fdb4eca6b166a5e824afd82", "sha256": "ce38f672d92acafb54f74024f1b713ddfee2f13fe59e42ebc45394c538d37f55"}, "downloads": -1, "filename": "simple_python_profiler-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "491c88417fdb4eca6b166a5e824afd82", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5344, "upload_time": "2020-01-13T09:29:15", "upload_time_iso_8601": "2020-01-13T09:29:15.298779Z", "url": "https://files.pythonhosted.org/packages/0d/82/d2556b2c19a708f2957fef128e00296c2d3fc8c6e33bc62a0b86bf673f74/simple_python_profiler-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21e2c6a65c8f2af6d21e8822fad2f578", "sha256": "969eaa0af8ad4bf1fac4ce0880f50e8ce00b82898d2510dc9e030f27c3220d09"}, "downloads": -1, "filename": "simple_python_profiler-0.2.tar.gz", "has_sig": false, "md5_digest": "21e2c6a65c8f2af6d21e8822fad2f578", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7938, "upload_time": "2020-01-13T09:29:21", "upload_time_iso_8601": "2020-01-13T09:29:21.623452Z", "url": "https://files.pythonhosted.org/packages/de/ed/8676340fff77e2535a1062690a361dfc6520af713cbc45cc34d27e9a4bb3/simple_python_profiler-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:19 2020"}