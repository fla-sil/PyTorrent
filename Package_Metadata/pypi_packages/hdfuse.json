{"info": {"author": "Dimitar Tasev", "author_email": "dimtasev@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: Unix", "Programming Language :: Python :: 3.6"], "description": "What is hdfuse?\n===============\n\nhdfuse is a filesystem in userspace (FUSE https://github.com/libfuse/libfuse or\nMacFUSE https://osxfuse.github.io/) to explore data stored in\nhierarchical hdf5 files (see https://www.hdfgroup.org/solutions/hdf5/).\n\nAll files in the directory given as the hdfuse5 root are mirrored into the\nmountpoint with all hdf5 files being presented as a directories. HDF5 Groups\nwithin the files are mapped into further directories, data arrays are files,\nand attributes are shown as extended filesystem attributes. Non-hdf5 files\nand directories are just mirrored unchanged.\n\nThe main purpose is to enable a quick access to the contents of hdf5 files\nwith normal system tools (grep, find, cat, file browser, etc.).\n\nWhat do I need to run hdfuse?\n==============================\n\n * python (https://www.python.org/)\n * h5py (https://www.h5py.org/)\n * fusepy (https://github.com/fusepy/fusepy)\n * FUSE or MacFUSE support in you operating system and the required\n   permissions to use it. That rules out any Windows variants.\n\nMost distributions have a 'fuse' user group you need to be a member of in\norder to be allowed to use fuse (and therefore hdfuse5).\n\nWhat do I need to do?\n=====================\n\n\n    $ pip install hdfuse\n    # This will put you inside the editor (by default Vim), browsing\n    # the directory that was mounted with `-d`\n    $ hdfuse -d directory_containing_nxs_file\n\n\nTo go back to a shell from Vim you can do `:sh`. The directory path should be\nvisible just above where the new shell starts. If you `cd` to it then you can\nbrowse it like a normal directory:\n\n\n    $ # what's in the mountpoint now? a directory for the file!\n    $ ls -l tmppath\n    total 0\n    drwxr-xr-x 1 user user 14704 2011-06-17 16:55 NXtest.h5\n    $ # explore the structure\n    $ find tmppath -ls\n    1    0 drwxr-xr-x   2 user user     4096 Jun 17 16:55 tmppath\n    2    0 drwxr-xr-x   1 user user    14704 Jun 17 16:55 tmppath/NXtest.h5\n    3    0 drwxr-xr-x   1 user user        0 Jun 17 16:55 tmppath/NXtest.h5/entry\n    4    0 -rw-r--r--   1 user user       10 Jun 17 16:55 tmppath/NXtest.h5/entry/ch_data\n    5    0 drwxr-xr-x   1 user user        0 Jun 17 16:55 tmppath/NXtest.h5/entry/data\n    6    0 -rw-r--r--   1 user user     8000 Jun 17 16:55 tmppath/NXtest.h5/entry/data/comp_data\n    7    0 -rw-r--r--   1 user user       28 Jun 17 16:55 tmppath/NXtest.h5/entry/data/flush_data\n    8    0 -rw-r--r--   1 user user      160 Jun 17 16:55 tmppath/NXtest.h5/entry/data/r8_data\n    9    0 -rw-r--r--   1 user user        4 Jun 17 16:55 tmppath/NXtest.h5/entry/i1_data\n    10    0 -rw-r--r--   1 user user        8 Jun 17 16:55 tmppath/NXtest.h5/entry/i2_data\n    11    0 -rw-r--r--   1 user user       16 Jun 17 16:55 tmppath/NXtest.h5/entry/i4_data\n    12    0 -rw-r--r--   1 user user       32 Jun 17 16:55 tmppath/NXtest.h5/entry/i8_data\n    13    0 -rw-r--r--   1 user user       80 Jun 17 16:55 tmppath/NXtest.h5/entry/r4_data\n    14    0 -rw-r--r--   1 user user      160 Jun 17 16:55 tmppath/NXtest.h5/entry/r8_data\n    15    0 drwxr-xr-x   1 user user        0 Jun 17 16:55 tmppath/NXtest.h5/entry/sample\n    16    0 -rw-r--r--   1 user user       20 Jun 17 16:55 tmppath/NXtest.h5/entry/sample/ch_data\n    17    0 drwxr-xr-x   1 user user        0 Jun 17 16:55 tmppath/NXtest.h5/link\n    18    0 -rw-r--r--   1 user user      160 Jun 17 16:55 tmppath/NXtest.h5/link/renLinkData\n    19    0 drwxr-xr-x   1 user user        0 Jun 17 16:55 tmppath/NXtest.h5/link/renLinkGroup\n    20    0 -rw-r--r--   1 user user       20 Jun 17 16:55 tmppath/NXtest.h5/link/renLinkGroup/ch_data\n    21    0 drwxr-xr-x   1 user user        0 Jun 17 16:55 tmppath/NXtest.h5/link/sample\n    22    0 -rw-r--r--   1 user user       20 Jun 17 16:55 tmppath/NXtest.h5/link/sample/ch_data\n    $ # find out the attributes of a dataset\n    $ getfattr -d tmppath/NXtest.h5/entry/data/comp_data\n    # file: tmppath/NXtest.h5/entry/data/comp_data\n    user.dtype=\"int32\"\n    user.dtype.itemsize=\"4\"\n    user.itemsize=\"4\"\n    user.ndim=\"2\"\n    user.shape=\"(100, 20)\"\n    user.size=\"2000\"\n    $ # explore the data (see \"man od\")\n    $ od -t dI -w4 -v tmppath/NXtest.h5/entry/data/comp_data | head -30\n    0000000           0\n    0000004           0\n    0000010           0\n    0000014           0\n    0000020           0\n    0000024           0\n    0000030           0\n    0000034           0\n    0000040           0\n    0000044           0\n    0000050           0\n    0000054           0\n    0000060           0\n    0000064           0\n    0000070           0\n    0000074           0\n    0000100           0\n    0000104           0\n    0000110           0\n    0000114           0\n    0000120           1\n    0000124           1\n    0000130           1\n    0000134           1\n    0000140           1\n    0000144           1\n    0000150           1\n    0000154           1\n    0000160           1\n    0000164           1\n    $ grep -ar sample tmppath # find some sample information\n    mnt/NXtest.h5/entry/sample/ch_data:NeXus sample\n    mnt/NXtest.h5/link/renLinkGroup/ch_data:NeXus sample\n    mnt/NXtest.h5/link/sample/ch_data:NeXus sample\n\n\nAfter you exit the shell and Vim the file will be automatically closed.\n\n\nRandom other questions\n======================\n\nWhat kind of performance can I expect?\n--------------------------------------\n\nNone. hdfuse was coded as a proof of principle. It holds no state, there\nis no caching, no optimisations whatsoever. This left the code quite simple\nand concise but still proved to be good enough for the main application:\nquick inspection of the file structure of a limited number of files.\n\nIt is not recommended to run this on a directory with hundreds of HDF5 files.\n\n\nWhy do I have to mount a directory? Why can't I mount a single file?\n--------------------------------------------------------------------\n\nThis would be simple to support. The motivation at the time was to be able\nexplore to multiple files easily with \"grep\" or similar tools.\n\n\nCan I have write support?\n-------------------------\n\nIt is best to use `h5py` directly for this, that way you can be more\nconfident that the data is correct.\n\nAny drawbacks?\n--------------\n\nhdf5 files cannot be opened \"normally\" by HDF5 aware tools in the tree\nmounted via hdfuse5, because to the operating system they look like directories.\n\n\nAny future plans?\n-----------------\n\nLinks in hdf5 could be presented as symbolic link in the mounted directory.\nPull requests welcome.\n\nAnother idea would get to present data that could be interpreted as image\ndata in the hdf5 in a format that could be read by standard image file\nreaders, e.g. as tiff.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dtasev/hdfuse5", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "hdfuse", "package_url": "https://pypi.org/project/hdfuse/", "platform": "", "project_url": "https://pypi.org/project/hdfuse/", "project_urls": {"Homepage": "https://github.com/dtasev/hdfuse5"}, "release_url": "https://pypi.org/project/hdfuse/1.0.2/", "requires_dist": ["fusepy", "h5py"], "requires_python": ">=3.6", "summary": "hdfuse is a tool for quick inspection of HDF5 files", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>What is hdfuse?</h1>\n<p>hdfuse is a filesystem in userspace (FUSE <a href=\"https://github.com/libfuse/libfuse\" rel=\"nofollow\">https://github.com/libfuse/libfuse</a> or\nMacFUSE <a href=\"https://osxfuse.github.io/\" rel=\"nofollow\">https://osxfuse.github.io/</a>) to explore data stored in\nhierarchical hdf5 files (see <a href=\"https://www.hdfgroup.org/solutions/hdf5/\" rel=\"nofollow\">https://www.hdfgroup.org/solutions/hdf5/</a>).</p>\n<p>All files in the directory given as the hdfuse5 root are mirrored into the\nmountpoint with all hdf5 files being presented as a directories. HDF5 Groups\nwithin the files are mapped into further directories, data arrays are files,\nand attributes are shown as extended filesystem attributes. Non-hdf5 files\nand directories are just mirrored unchanged.</p>\n<p>The main purpose is to enable a quick access to the contents of hdf5 files\nwith normal system tools (grep, find, cat, file browser, etc.).</p>\n<h1>What do I need to run hdfuse?</h1>\n<ul>\n<li>python (<a href=\"https://www.python.org/\" rel=\"nofollow\">https://www.python.org/</a>)</li>\n<li>h5py (<a href=\"https://www.h5py.org/\" rel=\"nofollow\">https://www.h5py.org/</a>)</li>\n<li>fusepy (<a href=\"https://github.com/fusepy/fusepy\" rel=\"nofollow\">https://github.com/fusepy/fusepy</a>)</li>\n<li>FUSE or MacFUSE support in you operating system and the required\npermissions to use it. That rules out any Windows variants.</li>\n</ul>\n<p>Most distributions have a 'fuse' user group you need to be a member of in\norder to be allowed to use fuse (and therefore hdfuse5).</p>\n<h1>What do I need to do?</h1>\n<pre><code>$ pip install hdfuse\n# This will put you inside the editor (by default Vim), browsing\n# the directory that was mounted with `-d`\n$ hdfuse -d directory_containing_nxs_file\n</code></pre>\n<p>To go back to a shell from Vim you can do <code>:sh</code>. The directory path should be\nvisible just above where the new shell starts. If you <code>cd</code> to it then you can\nbrowse it like a normal directory:</p>\n<pre><code>$ # what's in the mountpoint now? a directory for the file!\n$ ls -l tmppath\ntotal 0\ndrwxr-xr-x 1 user user 14704 2011-06-17 16:55 NXtest.h5\n$ # explore the structure\n$ find tmppath -ls\n1    0 drwxr-xr-x   2 user user     4096 Jun 17 16:55 tmppath\n2    0 drwxr-xr-x   1 user user    14704 Jun 17 16:55 tmppath/NXtest.h5\n3    0 drwxr-xr-x   1 user user        0 Jun 17 16:55 tmppath/NXtest.h5/entry\n4    0 -rw-r--r--   1 user user       10 Jun 17 16:55 tmppath/NXtest.h5/entry/ch_data\n5    0 drwxr-xr-x   1 user user        0 Jun 17 16:55 tmppath/NXtest.h5/entry/data\n6    0 -rw-r--r--   1 user user     8000 Jun 17 16:55 tmppath/NXtest.h5/entry/data/comp_data\n7    0 -rw-r--r--   1 user user       28 Jun 17 16:55 tmppath/NXtest.h5/entry/data/flush_data\n8    0 -rw-r--r--   1 user user      160 Jun 17 16:55 tmppath/NXtest.h5/entry/data/r8_data\n9    0 -rw-r--r--   1 user user        4 Jun 17 16:55 tmppath/NXtest.h5/entry/i1_data\n10    0 -rw-r--r--   1 user user        8 Jun 17 16:55 tmppath/NXtest.h5/entry/i2_data\n11    0 -rw-r--r--   1 user user       16 Jun 17 16:55 tmppath/NXtest.h5/entry/i4_data\n12    0 -rw-r--r--   1 user user       32 Jun 17 16:55 tmppath/NXtest.h5/entry/i8_data\n13    0 -rw-r--r--   1 user user       80 Jun 17 16:55 tmppath/NXtest.h5/entry/r4_data\n14    0 -rw-r--r--   1 user user      160 Jun 17 16:55 tmppath/NXtest.h5/entry/r8_data\n15    0 drwxr-xr-x   1 user user        0 Jun 17 16:55 tmppath/NXtest.h5/entry/sample\n16    0 -rw-r--r--   1 user user       20 Jun 17 16:55 tmppath/NXtest.h5/entry/sample/ch_data\n17    0 drwxr-xr-x   1 user user        0 Jun 17 16:55 tmppath/NXtest.h5/link\n18    0 -rw-r--r--   1 user user      160 Jun 17 16:55 tmppath/NXtest.h5/link/renLinkData\n19    0 drwxr-xr-x   1 user user        0 Jun 17 16:55 tmppath/NXtest.h5/link/renLinkGroup\n20    0 -rw-r--r--   1 user user       20 Jun 17 16:55 tmppath/NXtest.h5/link/renLinkGroup/ch_data\n21    0 drwxr-xr-x   1 user user        0 Jun 17 16:55 tmppath/NXtest.h5/link/sample\n22    0 -rw-r--r--   1 user user       20 Jun 17 16:55 tmppath/NXtest.h5/link/sample/ch_data\n$ # find out the attributes of a dataset\n$ getfattr -d tmppath/NXtest.h5/entry/data/comp_data\n# file: tmppath/NXtest.h5/entry/data/comp_data\nuser.dtype=\"int32\"\nuser.dtype.itemsize=\"4\"\nuser.itemsize=\"4\"\nuser.ndim=\"2\"\nuser.shape=\"(100, 20)\"\nuser.size=\"2000\"\n$ # explore the data (see \"man od\")\n$ od -t dI -w4 -v tmppath/NXtest.h5/entry/data/comp_data | head -30\n0000000           0\n0000004           0\n0000010           0\n0000014           0\n0000020           0\n0000024           0\n0000030           0\n0000034           0\n0000040           0\n0000044           0\n0000050           0\n0000054           0\n0000060           0\n0000064           0\n0000070           0\n0000074           0\n0000100           0\n0000104           0\n0000110           0\n0000114           0\n0000120           1\n0000124           1\n0000130           1\n0000134           1\n0000140           1\n0000144           1\n0000150           1\n0000154           1\n0000160           1\n0000164           1\n$ grep -ar sample tmppath # find some sample information\nmnt/NXtest.h5/entry/sample/ch_data:NeXus sample\nmnt/NXtest.h5/link/renLinkGroup/ch_data:NeXus sample\nmnt/NXtest.h5/link/sample/ch_data:NeXus sample\n</code></pre>\n<p>After you exit the shell and Vim the file will be automatically closed.</p>\n<h1>Random other questions</h1>\n<h2>What kind of performance can I expect?</h2>\n<p>None. hdfuse was coded as a proof of principle. It holds no state, there\nis no caching, no optimisations whatsoever. This left the code quite simple\nand concise but still proved to be good enough for the main application:\nquick inspection of the file structure of a limited number of files.</p>\n<p>It is not recommended to run this on a directory with hundreds of HDF5 files.</p>\n<h2>Why do I have to mount a directory? Why can't I mount a single file?</h2>\n<p>This would be simple to support. The motivation at the time was to be able\nexplore to multiple files easily with \"grep\" or similar tools.</p>\n<h2>Can I have write support?</h2>\n<p>It is best to use <code>h5py</code> directly for this, that way you can be more\nconfident that the data is correct.</p>\n<h2>Any drawbacks?</h2>\n<p>hdf5 files cannot be opened \"normally\" by HDF5 aware tools in the tree\nmounted via hdfuse5, because to the operating system they look like directories.</p>\n<h2>Any future plans?</h2>\n<p>Links in hdf5 could be presented as symbolic link in the mounted directory.\nPull requests welcome.</p>\n<p>Another idea would get to present data that could be interpreted as image\ndata in the hdf5 in a format that could be read by standard image file\nreaders, e.g. as tiff.</p>\n\n          </div>"}, "last_serial": 6979213, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "3c82a3cb3b2e0989529ee709c217085f", "sha256": "159ed3243c59ab043e292439c9b313158fcb3b70933c2416125778febb76fe2f"}, "downloads": -1, "filename": "hdfuse-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3c82a3cb3b2e0989529ee709c217085f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7770, "upload_time": "2020-04-08T16:45:05", "upload_time_iso_8601": "2020-04-08T16:45:05.703287Z", "url": "https://files.pythonhosted.org/packages/e1/e0/ecc23dfe74de555bc6a006d1a288efa19f5a0e0118ee4715fced4ca02300/hdfuse-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51bd8fd2f3ee3d27991530092f0f353c", "sha256": "41a6f57d7075ed2cbc1fbc8aa0ec8756a083ab2103eb650a5c06d2881d005e83"}, "downloads": -1, "filename": "hdfuse-1.0.1.tar.gz", "has_sig": false, "md5_digest": "51bd8fd2f3ee3d27991530092f0f353c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7055, "upload_time": "2020-04-08T16:45:06", "upload_time_iso_8601": "2020-04-08T16:45:06.566836Z", "url": "https://files.pythonhosted.org/packages/13/d3/b56497497c6fec69501ac3a79e74f118c8ebd78ad96fb1652d76e18d396b/hdfuse-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "5aeb690c96f97a3b68013acbbfd5682e", "sha256": "5ff315711c6176053183ff1e05b75c26fa5e8a023900bc9ae960672240e3d554"}, "downloads": -1, "filename": "hdfuse-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5aeb690c96f97a3b68013acbbfd5682e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7668, "upload_time": "2020-04-08T17:05:54", "upload_time_iso_8601": "2020-04-08T17:05:54.920884Z", "url": "https://files.pythonhosted.org/packages/05/cf/a74b857599fcda83c6c49421562d3ae7ef90720e299a03c6ae19a7c2d6b3/hdfuse-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a34aa8816903ca85f9f4a9ffc21d2469", "sha256": "33a5c5d95014c89d8dd4df04f22a6184c53da92b5f4b022c4c20b8dc85eae267"}, "downloads": -1, "filename": "hdfuse-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a34aa8816903ca85f9f4a9ffc21d2469", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6817, "upload_time": "2020-04-08T17:05:56", "upload_time_iso_8601": "2020-04-08T17:05:56.003943Z", "url": "https://files.pythonhosted.org/packages/77/f2/e38edcbb18867632e94081eb70fd5c129cd3af88624b14a6ce5179793618/hdfuse-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5aeb690c96f97a3b68013acbbfd5682e", "sha256": "5ff315711c6176053183ff1e05b75c26fa5e8a023900bc9ae960672240e3d554"}, "downloads": -1, "filename": "hdfuse-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5aeb690c96f97a3b68013acbbfd5682e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7668, "upload_time": "2020-04-08T17:05:54", "upload_time_iso_8601": "2020-04-08T17:05:54.920884Z", "url": "https://files.pythonhosted.org/packages/05/cf/a74b857599fcda83c6c49421562d3ae7ef90720e299a03c6ae19a7c2d6b3/hdfuse-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a34aa8816903ca85f9f4a9ffc21d2469", "sha256": "33a5c5d95014c89d8dd4df04f22a6184c53da92b5f4b022c4c20b8dc85eae267"}, "downloads": -1, "filename": "hdfuse-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a34aa8816903ca85f9f4a9ffc21d2469", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6817, "upload_time": "2020-04-08T17:05:56", "upload_time_iso_8601": "2020-04-08T17:05:56.003943Z", "url": "https://files.pythonhosted.org/packages/77/f2/e38edcbb18867632e94081eb70fd5c129cd3af88624b14a6ce5179793618/hdfuse-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:03 2020"}