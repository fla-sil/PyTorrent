{"info": {"author": "Adam Taranto", "author_email": "adam.taranto@anu.edu.au", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Blast-Besties\n\nRapid discovery of reciprocal best blast pairs from BLAST output files.  \n\n\n# Table of contents\n\n* [Example usage](#example-usage)\n  * [Input requirements](#input-requirements)\n* [Standard options](#standard-options)\n* [License](#license) \n\n# Example usage\n\nRun BLASTp for each protein set AvsB and BvsA.\nRequire vaild alignments to cover 95% of the query sequence and with an e-value of < 0.001.\n\n```bash\nblastp -qcov_hsp_perc 95 -query A_prot.fa -subject B_prot.fa -out AvB.tab -evalue 0.001 -outfmt 6 -use_sw_tback\nblastp -qcov_hsp_perc 95 -query B_prot.fa -subject A_prot.fa -out BVA.tab -evalue 0.001 -outfmt 6 -use_sw_tback\n```\n\nReport reciprocal best match pairs where each hit meets criteria e-value \n<= 0.001, hit-length >= 100, bitscore >= 100.  \n\n```bash\n./blastBesties.py -e 0.001 -l 100 -s 100 -a *blastAvB.tab* -b *blastBvA.tab\n```\n\n## Input requirements\n\n  - Takes two BLAST output files as input. SetA vs SetB, and SetB vs SetA.\n  - BLAST output format 6 (tabular)\n  - Hits must be sorted by query name then descending match quality - this is default BLAST behaviour.\n\n# Standard options\n\n```\nUsage: BLAST-Besties [-h] [-v] -a BLASTAVB -b BLASTBVA [-l MINLEN] [-e EVAL]\n                     [-s BITSCORE] [-o OUTFILE] [-d OUTDIR]\n\nOptions:\n\n  # Info\n  -h, --help        Show this help message and exit.\n  -v, --version     Show program's version number and exit.\n  \n  # Input \n  -a, --blastAvB    Blast tab result file for fastaA query against fastaB\n                    subject.\n  -b, --blastBvA    Blast tab result file for fastaB query against fastaA\n                    subject.\n  \n  # Settings\n  -l, --minLen      Minimum length of hit to consider valid.\n  -e, --eVal        Maximum e-value to consider valid pair.\n  -s, --bitScore    Minimum bitscore to consider valid pair.\n\n  # Output\n  -o, --outFile     Write reciprocal blast pairs to this file.\n  -d, --outDir      Directory for new sequence files to be written to.\n```\n\n# License\n\nSoftware provided under MIT license.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Adamtaranto/blast-besties", "keywords": "Orthologues,Reciprocal best BLAST", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "blastbesties", "package_url": "https://pypi.org/project/blastbesties/", "platform": "", "project_url": "https://pypi.org/project/blastbesties/", "project_urls": {"Homepage": "https://github.com/Adamtaranto/blast-besties"}, "release_url": "https://pypi.org/project/blastbesties/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "Rapid discovery of reciprocal best blast pairs from BLAST output files.", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Blast-Besties<br><br>Rapid discovery of reciprocal best blast pairs from BLAST output files.  <br><br><br># Table of contents<br><br>* [Example usage](#example-usage)<br>  * [Input requirements](#input-requirements)<br>* [Standard options](#standard-options)<br>* [License](#license) <br><br># Example usage<br><br>Run BLASTp for each protein set AvsB and BvsA.<br>Require vaild alignments to cover 95% of the query sequence and with an e-value of &lt; 0.001.<br><br>```bash<br>blastp -qcov_hsp_perc 95 -query A_prot.fa -subject B_prot.fa -out AvB.tab -evalue 0.001 -outfmt 6 -use_sw_tback<br>blastp -qcov_hsp_perc 95 -query B_prot.fa -subject A_prot.fa -out BVA.tab -evalue 0.001 -outfmt 6 -use_sw_tback<br>```<br><br>Report reciprocal best match pairs where each hit meets criteria e-value <br>&lt;= 0.001, hit-length &gt;= 100, bitscore &gt;= 100.  <br><br>```bash<br>./blastBesties.py -e 0.001 -l 100 -s 100 -a *blastAvB.tab* -b *blastBvA.tab<br>```<br><br>## Input requirements<br><br>  - Takes two BLAST output files as input. SetA vs SetB, and SetB vs SetA.<br>  - BLAST output format 6 (tabular)<br>  - Hits must be sorted by query name then descending match quality - this is default BLAST behaviour.<br><br># Standard options<br><br>```<br>Usage: BLAST-Besties [-h] [-v] -a BLASTAVB -b BLASTBVA [-l MINLEN] [-e EVAL]<br>                     [-s BITSCORE] [-o OUTFILE] [-d OUTDIR]<br><br>Options:<br><br>  # Info<br>  -h, --help        Show this help message and exit.<br>  -v, --version     Show program's version number and exit.<br>  <br>  # Input <br>  -a, --blastAvB    Blast tab result file for fastaA query against fastaB<br>                    subject.<br>  -b, --blastBvA    Blast tab result file for fastaB query against fastaA<br>                    subject.<br>  <br>  # Settings<br>  -l, --minLen      Minimum length of hit to consider valid.<br>  -e, --eVal        Maximum e-value to consider valid pair.<br>  -s, --bitScore    Minimum bitscore to consider valid pair.<br><br>  # Output<br>  -o, --outFile     Write reciprocal blast pairs to this file.<br>  -d, --outDir      Directory for new sequence files to be written to.<br>```<br><br># License<br><br>Software provided under MIT license.\n          </div>"}, "last_serial": 3273547, "releases": {"1.1.1": [{"comment_text": "", "digests": {"md5": "42f74b3b5ba2c11ec3a2a39b1dee79ef", "sha256": "32bcd64d53845150d44e7e158cbb8a8dcaba63be4c2ca8a338daf39724ddde67"}, "downloads": -1, "filename": "blastbesties-1.1.1.tar.gz", "has_sig": true, "md5_digest": "42f74b3b5ba2c11ec3a2a39b1dee79ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5013, "upload_time": "2017-10-23T23:23:38", "upload_time_iso_8601": "2017-10-23T23:23:38.350015Z", "url": "https://files.pythonhosted.org/packages/86/61/b71bc19d93ac15bf69f2d883ec50ac36b351366d26b81761880ca2775587/blastbesties-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "42f74b3b5ba2c11ec3a2a39b1dee79ef", "sha256": "32bcd64d53845150d44e7e158cbb8a8dcaba63be4c2ca8a338daf39724ddde67"}, "downloads": -1, "filename": "blastbesties-1.1.1.tar.gz", "has_sig": true, "md5_digest": "42f74b3b5ba2c11ec3a2a39b1dee79ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5013, "upload_time": "2017-10-23T23:23:38", "upload_time_iso_8601": "2017-10-23T23:23:38.350015Z", "url": "https://files.pythonhosted.org/packages/86/61/b71bc19d93ac15bf69f2d883ec50ac36b351366d26b81761880ca2775587/blastbesties-1.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:08 2020"}