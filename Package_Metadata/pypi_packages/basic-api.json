{"info": {"author": "Daniel Bennett", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython"], "description": "# Basic API Client\n\n`BasicAPI` is a Python API client that knows nothing about any specific APIs.\n\n## Purpose\n\nI've used a lot of complicated python clients that are of course useuful,\nbut my favorite clients are very basic.  They're _so not-smart_ that the question\n\"Is this a problem with the API, or a problem with the python client?\"\nshould be more on the API than the client.\n\nSo, `BasicAPI` is very slim.  After a bit of understanding of how it works,\ngenerally you should read the API docs instead of client docs.\n\nIt's intended to be extended by subclasses which may have varying degrees\nof knowledge of their target API, including auth and/or convenience methods.\n\n### Example\n\nAn example subclass can be found in\n[`examples/basic_github.py`](https://github.com/gulducat/basic-api/blob/master/examples/basic_github.py)\nwhich is used for cutting releases of `basic-api` in\n[`release.py`](https://github.com/gulducat/basic-api/blob/master/release.py).\n\n## Usage\n\n```\npip install requests basic-api\n```\n\n```python\nfrom basic_api import BasicAPI\napi = BasicAPI('example.com')\n```\n\nAll of the below are equivalent.\nThey make a GET request to `https://example.com/cool/path`\n\n```python\napi.get('/cool/path')\napi.get.cool.path()\napi.get['cool']['path']()\napi.get['cool/path']()\napi['get'].cool['path']()\n```\n\nThe `[item]` syntax is useful for variables, and paths that include `.`s.\n\nExample POST request:\n\n```python\napi.post('/cool/path', json={'some': 'data'})\n```\n\nThis also works the same as the above, by happenstance:\n\n```python\napi.post\napi.cool['path']\napi(json={'some': 'data'})\n```\n\nSee `Heads Up -> Thread Safety` below.\n\n### Request adapter\n\nThe default adapter is [`requests`](https://requests.readthedocs.io/).\nIt is not a hard requirement for folks who wish to keep requirements to the bare minimum,\nbut there is no fallback adapter, so either install `requests`\nor `basic-api[adapter]` (which includes requests) or pass in some specific adapter.\n\nAll keyword arguments aside from `host`, `proto`, and `adapter`\nwill be passed into the adapter call.\n\nFor example, you may wish to include the same header on all API calls:\n\n```python\napi = BasicAPI('example.com', headers={'User-Agent': 'fancy'})\n```\n\n#### Overlapping kwargs\n\nIf you include the same keyword in subsequent calls,\n`BasicAPI` will do a not-so-basic thing and attempt to merge them together,\npreferring the value(s) in the API call, so with\n\n```python\napi = BasicAPI('example.com', headers={'User-Agent': 'fancy'})\napi.get('/cool/path', headers={'User-Agent': 'super fancy'})\n```\n\nthe `get` call will override the previous `User-Agent` header,\nresulting in a \"super fancy\" user agent, and\n\n```python\napi.get('/cool/path', headers={'another', 'header'})\n```\n\nwill result in both the original \"fancy\" user agent _and_ `another` header.\n\nThis behavior is sorta-tested; it's the only part of this thing I'm worried about.\nIt's probably fine, but no promises.  Your own integration tests\nand `logging.basicConfig(level=logging.DEBUG)` are your friends.\n\nPlease tell me how wrong I am about my recursive `merge` function.\n\n#### Sessions\n\nFor APIs (or API-like things) that support it, you may pass in a\n[`requests.Session()`](https://2.python-requests.org/en/master/user/advanced/#session-objects)\nas the `adapter`, since it has (mostly) the same interface as `requests` itself.\n\n```python\nsesh = requests.Session()\nsesh.headers = {'User-Agent': 'my fancy app'}\n# sesh.get(something something cookies)\napi = BasicAPI('example.com', adapter=sesh)\n```\n\n#### Advanced\n\nThe `adapter` can be any object with callable attributes.\n\nIf you are advanced, you can probably figure out how to do exceptional stuff with this basic thing.\n\n## Heads Up\n\n### Thread Safety\n\nBasicAPI is _not_ thread safe (it is quite basic, after all).\n\nInstantiate one per thread if you are multithreading.\nThey don't cost much.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gulducat/basic-api", "keywords": "basic,api,client,basic-api", "license": "", "maintainer": "", "maintainer_email": "", "name": "basic-api", "package_url": "https://pypi.org/project/basic-api/", "platform": "", "project_url": "https://pypi.org/project/basic-api/", "project_urls": {"Homepage": "https://github.com/gulducat/basic-api"}, "release_url": "https://pypi.org/project/basic-api/0.1.3/", "requires_dist": ["requests ; extra == 'adapter'"], "requires_python": "", "summary": "Basic API client", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Basic API Client</h1>\n<p><code>BasicAPI</code> is a Python API client that knows nothing about any specific APIs.</p>\n<h2>Purpose</h2>\n<p>I've used a lot of complicated python clients that are of course useuful,\nbut my favorite clients are very basic.  They're <em>so not-smart</em> that the question\n\"Is this a problem with the API, or a problem with the python client?\"\nshould be more on the API than the client.</p>\n<p>So, <code>BasicAPI</code> is very slim.  After a bit of understanding of how it works,\ngenerally you should read the API docs instead of client docs.</p>\n<p>It's intended to be extended by subclasses which may have varying degrees\nof knowledge of their target API, including auth and/or convenience methods.</p>\n<h3>Example</h3>\n<p>An example subclass can be found in\n<a href=\"https://github.com/gulducat/basic-api/blob/master/examples/basic_github.py\" rel=\"nofollow\"><code>examples/basic_github.py</code></a>\nwhich is used for cutting releases of <code>basic-api</code> in\n<a href=\"https://github.com/gulducat/basic-api/blob/master/release.py\" rel=\"nofollow\"><code>release.py</code></a>.</p>\n<h2>Usage</h2>\n<pre><code>pip install requests basic-api\n</code></pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">basic_api</span> <span class=\"kn\">import</span> <span class=\"n\">BasicAPI</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">BasicAPI</span><span class=\"p\">(</span><span class=\"s1\">'example.com'</span><span class=\"p\">)</span>\n</pre>\n<p>All of the below are equivalent.\nThey make a GET request to <code>https://example.com/cool/path</code></p>\n<pre><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/cool/path'</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"o\">.</span><span class=\"n\">cool</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">()</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">[</span><span class=\"s1\">'cool'</span><span class=\"p\">][</span><span class=\"s1\">'path'</span><span class=\"p\">]()</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">[</span><span class=\"s1\">'cool/path'</span><span class=\"p\">]()</span>\n<span class=\"n\">api</span><span class=\"p\">[</span><span class=\"s1\">'get'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">cool</span><span class=\"p\">[</span><span class=\"s1\">'path'</span><span class=\"p\">]()</span>\n</pre>\n<p>The <code>[item]</code> syntax is useful for variables, and paths that include <code>.</code>s.</p>\n<p>Example POST request:</p>\n<pre><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'/cool/path'</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'some'</span><span class=\"p\">:</span> <span class=\"s1\">'data'</span><span class=\"p\">})</span>\n</pre>\n<p>This also works the same as the above, by happenstance:</p>\n<pre><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">post</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">cool</span><span class=\"p\">[</span><span class=\"s1\">'path'</span><span class=\"p\">]</span>\n<span class=\"n\">api</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'some'</span><span class=\"p\">:</span> <span class=\"s1\">'data'</span><span class=\"p\">})</span>\n</pre>\n<p>See <code>Heads Up -&gt; Thread Safety</code> below.</p>\n<h3>Request adapter</h3>\n<p>The default adapter is <a href=\"https://requests.readthedocs.io/\" rel=\"nofollow\"><code>requests</code></a>.\nIt is not a hard requirement for folks who wish to keep requirements to the bare minimum,\nbut there is no fallback adapter, so either install <code>requests</code>\nor <code>basic-api[adapter]</code> (which includes requests) or pass in some specific adapter.</p>\n<p>All keyword arguments aside from <code>host</code>, <code>proto</code>, and <code>adapter</code>\nwill be passed into the adapter call.</p>\n<p>For example, you may wish to include the same header on all API calls:</p>\n<pre><span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">BasicAPI</span><span class=\"p\">(</span><span class=\"s1\">'example.com'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'User-Agent'</span><span class=\"p\">:</span> <span class=\"s1\">'fancy'</span><span class=\"p\">})</span>\n</pre>\n<h4>Overlapping kwargs</h4>\n<p>If you include the same keyword in subsequent calls,\n<code>BasicAPI</code> will do a not-so-basic thing and attempt to merge them together,\npreferring the value(s) in the API call, so with</p>\n<pre><span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">BasicAPI</span><span class=\"p\">(</span><span class=\"s1\">'example.com'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'User-Agent'</span><span class=\"p\">:</span> <span class=\"s1\">'fancy'</span><span class=\"p\">})</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/cool/path'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'User-Agent'</span><span class=\"p\">:</span> <span class=\"s1\">'super fancy'</span><span class=\"p\">})</span>\n</pre>\n<p>the <code>get</code> call will override the previous <code>User-Agent</code> header,\nresulting in a \"super fancy\" user agent, and</p>\n<pre><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/cool/path'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'another'</span><span class=\"p\">,</span> <span class=\"s1\">'header'</span><span class=\"p\">})</span>\n</pre>\n<p>will result in both the original \"fancy\" user agent <em>and</em> <code>another</code> header.</p>\n<p>This behavior is sorta-tested; it's the only part of this thing I'm worried about.\nIt's probably fine, but no promises.  Your own integration tests\nand <code>logging.basicConfig(level=logging.DEBUG)</code> are your friends.</p>\n<p>Please tell me how wrong I am about my recursive <code>merge</code> function.</p>\n<h4>Sessions</h4>\n<p>For APIs (or API-like things) that support it, you may pass in a\n<a href=\"https://2.python-requests.org/en/master/user/advanced/#session-objects\" rel=\"nofollow\"><code>requests.Session()</code></a>\nas the <code>adapter</code>, since it has (mostly) the same interface as <code>requests</code> itself.</p>\n<pre><span class=\"n\">sesh</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span>\n<span class=\"n\">sesh</span><span class=\"o\">.</span><span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'User-Agent'</span><span class=\"p\">:</span> <span class=\"s1\">'my fancy app'</span><span class=\"p\">}</span>\n<span class=\"c1\"># sesh.get(something something cookies)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">BasicAPI</span><span class=\"p\">(</span><span class=\"s1\">'example.com'</span><span class=\"p\">,</span> <span class=\"n\">adapter</span><span class=\"o\">=</span><span class=\"n\">sesh</span><span class=\"p\">)</span>\n</pre>\n<h4>Advanced</h4>\n<p>The <code>adapter</code> can be any object with callable attributes.</p>\n<p>If you are advanced, you can probably figure out how to do exceptional stuff with this basic thing.</p>\n<h2>Heads Up</h2>\n<h3>Thread Safety</h3>\n<p>BasicAPI is <em>not</em> thread safe (it is quite basic, after all).</p>\n<p>Instantiate one per thread if you are multithreading.\nThey don't cost much.</p>\n\n          </div>"}, "last_serial": 7188956, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "90666ce14ec6aebcfbdf40daea909592", "sha256": "32889ad08f0e30dea36a85fbbaad9bb5aba5306915e9f2c0bbe5ec9574b9211c"}, "downloads": -1, "filename": "basic_api-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "90666ce14ec6aebcfbdf40daea909592", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4626, "upload_time": "2020-04-20T04:01:50", "upload_time_iso_8601": "2020-04-20T04:01:50.791675Z", "url": "https://files.pythonhosted.org/packages/a9/e6/ac48c885416ee0b4155cf672bd3a2c2da52841a0edaa40939b1313d3e4be/basic_api-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "682895310b3082a53291a150e31042b7", "sha256": "aefe9d9af611eae193e937a2b22b370e87bef499480a0dd192dc66095c2571bf"}, "downloads": -1, "filename": "basic-api-0.1.1.tar.gz", "has_sig": false, "md5_digest": "682895310b3082a53291a150e31042b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3883, "upload_time": "2020-04-20T04:01:52", "upload_time_iso_8601": "2020-04-20T04:01:52.512343Z", "url": "https://files.pythonhosted.org/packages/25/18/42196d0dca230f0bc0eb0bc8aec068756a376ac2d4aba4dc57d577fa0f83/basic-api-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "192991084fe697fdbb4507464a9063b3", "sha256": "8bd92a73bcfd02e0afcde5e84f1458f0368890da568533d33b31a5347b36e2cc"}, "downloads": -1, "filename": "basic_api-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "192991084fe697fdbb4507464a9063b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5426, "upload_time": "2020-05-07T14:07:34", "upload_time_iso_8601": "2020-05-07T14:07:34.458541Z", "url": "https://files.pythonhosted.org/packages/2b/5d/85078f05132d259b91bf9ff7c7585bcea8b2c5ece854a809d09946c0cd36/basic_api-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13ec0fdcbe9dd6259f9e16e785aa2e24", "sha256": "7459fb222b4ccb49321ee37742a6cb08ff40872e189430994b6d106e262489d4"}, "downloads": -1, "filename": "basic-api-0.1.2.tar.gz", "has_sig": false, "md5_digest": "13ec0fdcbe9dd6259f9e16e785aa2e24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4797, "upload_time": "2020-05-07T14:07:35", "upload_time_iso_8601": "2020-05-07T14:07:35.465698Z", "url": "https://files.pythonhosted.org/packages/86/b0/480fb298f8530077b7744b469f7037877e02e7ffd2255254fe2697009220/basic-api-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "db70fea6ce4b953905e0b2390aded14d", "sha256": "5655c9488e699d194f746fc07503c7e567690899f8d5a2aa43673b8759899042"}, "downloads": -1, "filename": "basic_api-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "db70fea6ce4b953905e0b2390aded14d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5439, "upload_time": "2020-05-07T14:20:38", "upload_time_iso_8601": "2020-05-07T14:20:38.517367Z", "url": "https://files.pythonhosted.org/packages/ee/36/3824c800b662d280a9b5fb146b7b66f3cea5aa9dcddc2e79aa05d9bbe497/basic_api-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "522ec0a9f64796cad10a3d66f783f09c", "sha256": "20e0f43a8eade660e7e86d40bdc71aa758cca44a348d0778e229a81b9f349495"}, "downloads": -1, "filename": "basic-api-0.1.3.tar.gz", "has_sig": false, "md5_digest": "522ec0a9f64796cad10a3d66f783f09c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4795, "upload_time": "2020-05-07T14:20:39", "upload_time_iso_8601": "2020-05-07T14:20:39.470614Z", "url": "https://files.pythonhosted.org/packages/05/b8/13f5a2cc65d2873ec6410736c506a7fa8d29b150e5229f7230512416c770/basic-api-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "db70fea6ce4b953905e0b2390aded14d", "sha256": "5655c9488e699d194f746fc07503c7e567690899f8d5a2aa43673b8759899042"}, "downloads": -1, "filename": "basic_api-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "db70fea6ce4b953905e0b2390aded14d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5439, "upload_time": "2020-05-07T14:20:38", "upload_time_iso_8601": "2020-05-07T14:20:38.517367Z", "url": "https://files.pythonhosted.org/packages/ee/36/3824c800b662d280a9b5fb146b7b66f3cea5aa9dcddc2e79aa05d9bbe497/basic_api-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "522ec0a9f64796cad10a3d66f783f09c", "sha256": "20e0f43a8eade660e7e86d40bdc71aa758cca44a348d0778e229a81b9f349495"}, "downloads": -1, "filename": "basic-api-0.1.3.tar.gz", "has_sig": false, "md5_digest": "522ec0a9f64796cad10a3d66f783f09c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4795, "upload_time": "2020-05-07T14:20:39", "upload_time_iso_8601": "2020-05-07T14:20:39.470614Z", "url": "https://files.pythonhosted.org/packages/05/b8/13f5a2cc65d2873ec6410736c506a7fa8d29b150e5229f7230512416c770/basic-api-0.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:47 2020"}