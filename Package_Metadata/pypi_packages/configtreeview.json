{"info": {"author": "Wesley Hansen", "author_email": "wes@ridersdiscount.com", "bugtrack_url": null, "classifiers": [], "description": "==============\nConfigTreeView\n==============\n\tThis is an implementation of a GtkTreeView in python(using pygtk) that\n\tallows for easy, fast, and dynamic setting up of a TreeView, its\n\tTreeViewColumns and CellRenderers. This ConfigTreeView can create a TreeView\n\twith all its properties initialized through the use of a simple config-type\n\tfile. This config file can be in a python dictionary format, or even read\n\tin from a JSON object.\n\t\nThe Why (Why use a ConfigTreeView?)\n===================================\n\t* The ConfigTreeView was designed in such a way to abstract the developer\n\t  from having to set up indices for how a ListStore row of data should look.\n\t  The config file creates an easy way to do it and allows you to supply a\n\t  row of data in python dict form(or a JSON) while initializing all the\n\t  properties, columns, cell renderers that could possbily be used in\n\t  creating a TreeView.\n\t\n\t* Eliminates the several lines of code it takes to initialize a TreeView.\n\t  A TreeView is a very useful but also very complicated widget in the gtk \n\t  arsenal and this implementation takes away that complication.\n\t\n\t* Useful for data sets that could change frequently without having\n\t  to go in and change the code.--This is actually the use case that I ran\n\t  into at my place of work that inspired me to create the ConfigTreeView. We\n\t  have an application that many people use in the office that is connected\n\t  to a server. The application gets all of the data from the server and \n\t  displays it in a GtkTreeView but the data could change in the near future\n\t  as we may need to display new columns or different formats of data in the\n\t  same TreeView so we wanted a system set in place that could allow for us \n\t  to change the data the server was sending without having to go in and\n\t  change the code in the clients(i.e. the TreeView) in order to properly\n\t  display the newly changed data. With a ConfigTreeView you can do just\n\t  this: the server can supply a config structure to initialize the clients,\n\t  eliminating the need for changing the client code.\n\nHow to use it\n=============\n\t* It's easy! All you need to do is create a config file(either as a python\n\t  dict in a .py file or as a JSON file). \n\t* Then with a config file, you're ready to create a ConfigTreeView::\n\t\n\t\tfrom config_treeview import ConfigTreeView\n\t\t#Import the config structure(it's a python dict named config)\n\t\tfrom myconfigfile import config\n\t\t#Create a ConfigTreeView using config as the configuration structure\n\t\ttreeview = ConfigTreeView(config)\n\t\t#Apply the config structure to finish initalizing the TreeView\n\t\ttreeview._apply_config()\n\nFor more information\n====================\nCheck out the documentation in the source in the `html/` directory starting with \n`index.html`\n\nor visit the docs: http://packages.python.org/configtreeview/", "description_content_type": null, "docs_url": "https://pythonhosted.org/configtreeview/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/wrhansen/ConfigTreeView", "keywords": null, "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "configtreeview", "package_url": "https://pypi.org/project/configtreeview/", "platform": "POSIX,Windows", "project_url": "https://pypi.org/project/configtreeview/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/wrhansen/ConfigTreeView"}, "release_url": "https://pypi.org/project/configtreeview/0.1.32/", "requires_dist": null, "requires_python": null, "summary": "An easily configurable GtkTreeView implementation for pygtk.", "version": "0.1.32", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\nThis is an implementation of a GtkTreeView in python(using pygtk) that\nallows for easy, fast, and dynamic setting up of a TreeView, its\nTreeViewColumns and CellRenderers. This ConfigTreeView can create a TreeView\nwith all its properties initialized through the use of a simple config-type\nfile. This config file can be in a python dictionary format, or even read\nin from a JSON object.</blockquote>\n<div id=\"the-why-why-use-a-configtreeview\">\n<h2>The Why (Why use a ConfigTreeView?)</h2>\n<blockquote>\n<ul>\n<li>The ConfigTreeView was designed in such a way to abstract the developer\nfrom having to set up indices for how a ListStore row of data should look.\nThe config file creates an easy way to do it and allows you to supply a\nrow of data in python dict form(or a JSON) while initializing all the\nproperties, columns, cell renderers that could possbily be used in\ncreating a TreeView.</li>\n<li>Eliminates the several lines of code it takes to initialize a TreeView.\nA TreeView is a very useful but also very complicated widget in the gtk\narsenal and this implementation takes away that complication.</li>\n<li>Useful for data sets that could change frequently without having\nto go in and change the code.\u2013This is actually the use case that I ran\ninto at my place of work that inspired me to create the ConfigTreeView. We\nhave an application that many people use in the office that is connected\nto a server. The application gets all of the data from the server and\ndisplays it in a GtkTreeView but the data could change in the near future\nas we may need to display new columns or different formats of data in the\nsame TreeView so we wanted a system set in place that could allow for us\nto change the data the server was sending without having to go in and\nchange the code in the clients(i.e. the TreeView) in order to properly\ndisplay the newly changed data. With a ConfigTreeView you can do just\nthis: the server can supply a config structure to initialize the clients,\neliminating the need for changing the client code.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"how-to-use-it\">\n<h2>How to use it</h2>\n<blockquote>\n<ul>\n<li><p>It\u2019s easy! All you need to do is create a config file(either as a python\ndict in a .py file or as a JSON file).</p>\n</li>\n<li><p>Then with a config file, you\u2019re ready to create a ConfigTreeView:</p>\n<pre>from config_treeview import ConfigTreeView\n#Import the config structure(it's a python dict named config)\nfrom myconfigfile import config\n#Create a ConfigTreeView using config as the configuration structure\ntreeview = ConfigTreeView(config)\n#Apply the config structure to finish initalizing the TreeView\ntreeview._apply_config()\n</pre>\n</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"for-more-information\">\n<h2>For more information</h2>\n<p>Check out the documentation in the source in the <cite>html/</cite> directory starting with\n<cite>index.html</cite></p>\n<p>or visit the docs: <a href=\"http://packages.python.org/configtreeview/\" rel=\"nofollow\">http://packages.python.org/configtreeview/</a></p>\n</div>\n\n          </div>"}, "last_serial": 788371, "releases": {"0.1.2a": [{"comment_text": "", "digests": {"md5": "336a78ff154984f935adfc2c1c2eee5c", "sha256": "c4724247285e9e549188ea16f4320fd7d5c685ec30150bb8e85cbb10593849e3"}, "downloads": -1, "filename": "configtreeview-0.1.2a-py2.7.egg", "has_sig": false, "md5_digest": "336a78ff154984f935adfc2c1c2eee5c", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 23693, "upload_time": "2012-06-06T21:47:47", "upload_time_iso_8601": "2012-06-06T21:47:47.519869Z", "url": "https://files.pythonhosted.org/packages/bf/d9/330cc2bc0be0c2a1c0812bf5ab5c3bfaf3de99c4b2d428a417c8601ec265/configtreeview-0.1.2a-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0993c63c2548ee50468e484efc863833", "sha256": "ec5d99d845e6fe8426f601f14d02e045f518ad3c8f9763782473d1d766dc79e1"}, "downloads": -1, "filename": "configtreeview-0.1.2a.tar.gz", "has_sig": false, "md5_digest": "0993c63c2548ee50468e484efc863833", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28852, "upload_time": "2012-06-06T21:47:46", "upload_time_iso_8601": "2012-06-06T21:47:46.386770Z", "url": "https://files.pythonhosted.org/packages/7b/a5/484740ac17b804a559e2d959dd94d89c21bee2fb82cefa3bd4a8b30588d9/configtreeview-0.1.2a.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "3f7296c3185fe8efa4902cd0e8e08d05", "sha256": "30dc37fa52c426f8a92afed5ba7ec5a2523bdca0d1c8cf749aa5d2f5d3861d4e"}, "downloads": -1, "filename": "configtreeview-0.1.3.tar.gz", "has_sig": false, "md5_digest": "3f7296c3185fe8efa4902cd0e8e08d05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 117338, "upload_time": "2012-06-26T17:39:09", "upload_time_iso_8601": "2012-06-26T17:39:09.574884Z", "url": "https://files.pythonhosted.org/packages/59/b8/79639bf03764545ba7ded7f8f3e43aa74c652758502876c1e6038b2b2558/configtreeview-0.1.3.tar.gz", "yanked": false}], "0.1.31": [{"comment_text": "", "digests": {"md5": "ecb517b9253ef2cf195c96074f9ac614", "sha256": "0a2a216193d84ae6f45f7e5fce2ed0403f6b9468eaec838a01c8251bb27c421d"}, "downloads": -1, "filename": "configtreeview-0.1.31.tar.gz", "has_sig": false, "md5_digest": "ecb517b9253ef2cf195c96074f9ac614", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 117532, "upload_time": "2012-06-26T17:53:03", "upload_time_iso_8601": "2012-06-26T17:53:03.350977Z", "url": "https://files.pythonhosted.org/packages/f6/ac/38d90652f84f70f102ba0747d5e9f39a7a665908f4e92496e0fdbe53e99f/configtreeview-0.1.31.tar.gz", "yanked": false}], "0.1.32": [{"comment_text": "", "digests": {"md5": "24d466df0f2f69a1523d50e3c1464c1a", "sha256": "aa7c358f2abfa7edfc6f848ffbf23f21e8fee75279e7494d611cbdcf88848a86"}, "downloads": -1, "filename": "configtreeview-0.1.32.tar.gz", "has_sig": false, "md5_digest": "24d466df0f2f69a1523d50e3c1464c1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24838, "upload_time": "2012-07-06T18:52:49", "upload_time_iso_8601": "2012-07-06T18:52:49.832766Z", "url": "https://files.pythonhosted.org/packages/01/d6/d7268edaefd4f6e667d0ccfce24fe6bee6f0d8c8fd69334fc7fabddede88/configtreeview-0.1.32.tar.gz", "yanked": false}], "0.1.3b": [{"comment_text": "", "digests": {"md5": "30558ecd30b5efb33a70914ed3dc5d23", "sha256": "eb788e44c4857dd5f4fb9e35c175aa4d6ca9101ff1958f63fb8f77aeaf017452"}, "downloads": -1, "filename": "configtreeview-0.1.3b.tar.gz", "has_sig": false, "md5_digest": "30558ecd30b5efb33a70914ed3dc5d23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 117350, "upload_time": "2012-06-26T17:50:09", "upload_time_iso_8601": "2012-06-26T17:50:09.500219Z", "url": "https://files.pythonhosted.org/packages/05/c6/87d7fb04e9f3f8706e737eef6d0b288a518a90dd9c241627b6e0f12d1755/configtreeview-0.1.3b.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "24d466df0f2f69a1523d50e3c1464c1a", "sha256": "aa7c358f2abfa7edfc6f848ffbf23f21e8fee75279e7494d611cbdcf88848a86"}, "downloads": -1, "filename": "configtreeview-0.1.32.tar.gz", "has_sig": false, "md5_digest": "24d466df0f2f69a1523d50e3c1464c1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24838, "upload_time": "2012-07-06T18:52:49", "upload_time_iso_8601": "2012-07-06T18:52:49.832766Z", "url": "https://files.pythonhosted.org/packages/01/d6/d7268edaefd4f6e667d0ccfce24fe6bee6f0d8c8fd69334fc7fabddede88/configtreeview-0.1.32.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:53 2020"}