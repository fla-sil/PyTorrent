{"info": {"author": "Christian Klinger", "author_email": "cklinger@novareto.de", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "======================\nmegrok.z3cform.tabular\n======================\n\nWith the help of this package you can create tables inside forms.\nThink on a folder listing where you have a checkbox on the first\ncolumn and you can check the rows you want to modify. \nSuch modifcations are for example:\n\n - edit \n - delete \n - change workflow state\n\nmegrok.z3cform.tabular is based on these existing megrok packages:\n\n - megrok.layout\n - megrok.z3ctable\n - megrok.z3cform.base\n - megrok.z3cform.ui\n\n\nExample\n-------\n\nFirst we have to setup a container with some objects.\n\n   >>> from zope.app.testing.functional import getRootFolder\n   >>> root = getRootFolder()\n\n   >>> from zope.app.container import btree\n   >>> class Container(btree.BTreeContainer):\n   ...     \"\"\"Sample container.\"\"\"\n   ...     __name__ = u'container'\n   >>> container = Container()\n\n\n   >>> root['container'] = container\n\n\n   >>> class Content(object):\n   ...     \"\"\"Sample content.\"\"\"\n   ...     def __init__(self, title, number):\n   ...         self.title = title\n   ...         self.number = number\n       \n\n   >>> container[u'first'] = Content('First', 1)\n   >>> container[u'second'] = Content('Second', 2)\n   >>> container[u'third'] = Content('Third', 3)\n\n   >>> len(container)\n   3\n\nOk now we have a container with three objects in it. Now we\ncan create a tabular view for this container:\n\n   >>> from megrok.z3cform.tabular import FormTable\n   >>> import grokcore.component as grok\n   >>> from megrok.z3cform.base import button, extends\n\n   >>> class FormTableView(FormTable):\n   ...     grok.context(Container)\n   ...     extends(FormTable)\n   ...\n   ...     @button.buttonAndHandler(u'ChangeWorkflowState')\n   ...     def handleChangeWorkflowState(self, action):\n   ...         print 'success'\n   ...\n   ...     def render(self):\n   ...         return self.renderFormTable()\n\n\n   >>> grok.testing.grok_component('formtableview', FormTableView)\n   True\n\n   >>> from megrok.z3ctable import table, CheckBoxColumn, NameColumn\n   >>> class CheckBox(CheckBoxColumn):\n   ...     grok.name('checkBox')\n   ...     grok.context(Container)\n   ...     table(FormTableView)\n\n   >>> grok.testing.grok_component('checkbox', CheckBox)\n   True\n\n   >>> class Name(NameColumn):\n   ...     grok.name('name')\n   ...     grok.context(Container)\n   ...     table(FormTableView)\n\n   >>> grok.testing.grok_component('name', Name)\n   True\n\nOk now we can call the FormTableView on the container. We\nshould see a table with three rows and two columns.\nThere is a default Cancel button and our custom\nChangeWorkflowState button.\n\n  >>> from zope.publisher.browser import TestRequest\n  >>> request = TestRequest()\n\n  >>> from zope.component import getMultiAdapter\n  >>> formtableview = getMultiAdapter((container, request), name=\"formtableview\")\n  >>> formtableview\n  <FormTableView 'formtableview'>\n\n  >>> formtableview.update()\n  >>> print formtableview() \n  <form action=\"http://127.0.0.1\" method=\"post\"\n        enctype=\"multipart/form-data\" class=\"edit-form\"\n        name=\"formTable\" id=\"formTable\">\n    <div class=\"viewspace\">\n      <div>\n      <div class=\"tabluarTable\">\n        <table class=\"contents\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>X</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"even\">\n        <td>first</td>\n        <td><input type=\"checkbox\" class=\"checkbox-widget\" name=\"formTable-checkBox-1-selectedItems\" value=\"first\"  /></td>\n      </tr>\n      <tr class=\"odd\">\n        <td>second</td>\n        <td><input type=\"checkbox\" class=\"checkbox-widget\" name=\"formTable-checkBox-1-selectedItems\" value=\"second\"  /></td>\n      </tr>\n      <tr class=\"even\">\n        <td>third</td>\n        <td><input type=\"checkbox\" class=\"checkbox-widget\" name=\"formTable-checkBox-1-selectedItems\" value=\"third\"  /></td>\n      </tr>\n    </tbody>\n  </table>\n      </div>\n      <div class=\"tabluarForm\">\n      </div>\n    </div>\n    </div>\n    <div>\n      <div class=\"buttons\">\n  <input id=\"formTable-buttons-cancel\"\n         name=\"formTable.buttons.cancel\"\n         class=\"submit-widget button-field\" value=\"Cancel\"\n         type=\"submit\" />\n  <input id=\"formTable-buttons-changeworkflowstate\"\n         name=\"formTable.buttons.changeworkflowstate\"\n         class=\"submit-widget button-field\"\n         value=\"ChangeWorkflowState\" type=\"submit\" />\n      </div>\n    </div>\n  </form>\n\nThis package works nicely with megrok.layout. There are some additional\nBaseClasses available. Please take a look on the tests.\n\nEnjoy...\n\nChangelog\n=========\n\n0.2 (2009-10-26)\n----------------\n\n- Change the description of the project. \n\n\n0.1 (2009-10-26)\n----------------\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "grok z3c.form megrok.z3cform.wizard", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "megrok.z3cform.tabular", "package_url": "https://pypi.org/project/megrok.z3cform.tabular/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/megrok.z3cform.tabular/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/megrok.z3cform.tabular/0.2/", "requires_dist": null, "requires_python": null, "summary": "Grok addon for createing tabular forms", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>With the help of this package you can create tables inside forms.\nThink on a folder listing where you have a checkbox on the first\ncolumn and you can check the rows you want to modify.\nSuch modifcations are for example:</p>\n<blockquote>\n<ul>\n<li>edit</li>\n<li>delete</li>\n<li>change workflow state</li>\n</ul>\n</blockquote>\n<p>megrok.z3cform.tabular is based on these existing megrok packages:</p>\n<blockquote>\n<ul>\n<li>megrok.layout</li>\n<li>megrok.z3ctable</li>\n<li>megrok.z3cform.base</li>\n<li>megrok.z3cform.ui</li>\n</ul>\n</blockquote>\n<div id=\"example\">\n<h2>Example</h2>\n<p>First we have to setup a container with some objects.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from zope.app.testing.functional import getRootFolder\n&gt;&gt;&gt; root = getRootFolder()\n</pre>\n<pre>&gt;&gt;&gt; from zope.app.container import btree\n&gt;&gt;&gt; class Container(btree.BTreeContainer):\n...     \"\"\"Sample container.\"\"\"\n...     __name__ = u'container'\n&gt;&gt;&gt; container = Container()\n</pre>\n<pre>&gt;&gt;&gt; root['container'] = container\n</pre>\n<pre>&gt;&gt;&gt; class Content(object):\n...     \"\"\"Sample content.\"\"\"\n...     def __init__(self, title, number):\n...         self.title = title\n...         self.number = number\n</pre>\n<pre>&gt;&gt;&gt; container[u'first'] = Content('First', 1)\n&gt;&gt;&gt; container[u'second'] = Content('Second', 2)\n&gt;&gt;&gt; container[u'third'] = Content('Third', 3)\n</pre>\n<pre>&gt;&gt;&gt; len(container)\n3\n</pre>\n</blockquote>\n<p>Ok now we have a container with three objects in it. Now we\ncan create a tabular view for this container:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from megrok.z3cform.tabular import FormTable\n&gt;&gt;&gt; import grokcore.component as grok\n&gt;&gt;&gt; from megrok.z3cform.base import button, extends\n</pre>\n<pre>&gt;&gt;&gt; class FormTableView(FormTable):\n...     grok.context(Container)\n...     extends(FormTable)\n...\n...     @button.buttonAndHandler(u'ChangeWorkflowState')\n...     def handleChangeWorkflowState(self, action):\n...         print 'success'\n...\n...     def render(self):\n...         return self.renderFormTable()\n</pre>\n<pre>&gt;&gt;&gt; grok.testing.grok_component('formtableview', FormTableView)\nTrue\n</pre>\n<pre>&gt;&gt;&gt; from megrok.z3ctable import table, CheckBoxColumn, NameColumn\n&gt;&gt;&gt; class CheckBox(CheckBoxColumn):\n...     grok.name('checkBox')\n...     grok.context(Container)\n...     table(FormTableView)\n</pre>\n<pre>&gt;&gt;&gt; grok.testing.grok_component('checkbox', CheckBox)\nTrue\n</pre>\n<pre>&gt;&gt;&gt; class Name(NameColumn):\n...     grok.name('name')\n...     grok.context(Container)\n...     table(FormTableView)\n</pre>\n<pre>&gt;&gt;&gt; grok.testing.grok_component('name', Name)\nTrue\n</pre>\n</blockquote>\n<p>Ok now we can call the FormTableView on the container. We\nshould see a table with three rows and two columns.\nThere is a default Cancel button and our custom\nChangeWorkflowState button.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from zope.publisher.browser import TestRequest\n&gt;&gt;&gt; request = TestRequest()\n</pre>\n<pre>&gt;&gt;&gt; from zope.component import getMultiAdapter\n&gt;&gt;&gt; formtableview = getMultiAdapter((container, request), name=\"formtableview\")\n&gt;&gt;&gt; formtableview\n&lt;FormTableView 'formtableview'&gt;\n</pre>\n<pre>&gt;&gt;&gt; formtableview.update()\n&gt;&gt;&gt; print formtableview()\n&lt;form action=\"http://127.0.0.1\" method=\"post\"\n      enctype=\"multipart/form-data\" class=\"edit-form\"\n      name=\"formTable\" id=\"formTable\"&gt;\n  &lt;div class=\"viewspace\"&gt;\n    &lt;div&gt;\n    &lt;div class=\"tabluarTable\"&gt;\n      &lt;table class=\"contents\"&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th&gt;Name&lt;/th&gt;\n      &lt;th&gt;X&lt;/th&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    &lt;tr class=\"even\"&gt;\n      &lt;td&gt;first&lt;/td&gt;\n      &lt;td&gt;&lt;input type=\"checkbox\" class=\"checkbox-widget\" name=\"formTable-checkBox-1-selectedItems\" value=\"first\"  /&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class=\"odd\"&gt;\n      &lt;td&gt;second&lt;/td&gt;\n      &lt;td&gt;&lt;input type=\"checkbox\" class=\"checkbox-widget\" name=\"formTable-checkBox-1-selectedItems\" value=\"second\"  /&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class=\"even\"&gt;\n      &lt;td&gt;third&lt;/td&gt;\n      &lt;td&gt;&lt;input type=\"checkbox\" class=\"checkbox-widget\" name=\"formTable-checkBox-1-selectedItems\" value=\"third\"  /&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n    &lt;/div&gt;\n    &lt;div class=\"tabluarForm\"&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div&gt;\n    &lt;div class=\"buttons\"&gt;\n&lt;input id=\"formTable-buttons-cancel\"\n       name=\"formTable.buttons.cancel\"\n       class=\"submit-widget button-field\" value=\"Cancel\"\n       type=\"submit\" /&gt;\n&lt;input id=\"formTable-buttons-changeworkflowstate\"\n       name=\"formTable.buttons.changeworkflowstate\"\n       class=\"submit-widget button-field\"\n       value=\"ChangeWorkflowState\" type=\"submit\" /&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/form&gt;\n</pre>\n</blockquote>\n<p>This package works nicely with megrok.layout. There are some additional\nBaseClasses available. Please take a look on the tests.</p>\n<p>Enjoy\u2026</p>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n</div>\n</div>\n<div id=\"id1\">\n<h2>0.2 (2009-10-26)</h2>\n<ul>\n<li>Change the description of the project.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>0.1 (2009-10-26)</h2>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 794663, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b4d5f7666b9bee39e655a0e0676ddc43", "sha256": "6da77de2d35ddca05e5a8474d2d4359ce47868a04dd8c3888cbce6a88ef79f88"}, "downloads": -1, "filename": "megrok.z3cform.tabular-0.1.tar.gz", "has_sig": false, "md5_digest": "b4d5f7666b9bee39e655a0e0676ddc43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8421, "upload_time": "2009-10-26T16:08:34", "upload_time_iso_8601": "2009-10-26T16:08:34.356910Z", "url": "https://files.pythonhosted.org/packages/02/b8/a0f73702f0d6340f43841d74b6309133937f8e04201e83e494eb5fbee316/megrok.z3cform.tabular-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "6121c55a8035a1b17b14a01810724078", "sha256": "b5396b7eda4ea5407bf3172c5244839de8eb8752b7153e032cf3a31961676c28"}, "downloads": -1, "filename": "megrok.z3cform.tabular-0.2.tar.gz", "has_sig": false, "md5_digest": "6121c55a8035a1b17b14a01810724078", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8364, "upload_time": "2009-10-26T16:10:40", "upload_time_iso_8601": "2009-10-26T16:10:40.649582Z", "url": "https://files.pythonhosted.org/packages/8e/a2/35d355e557821e7951f98616b2999e143d8f6fd15a810e06ee5b83ef1789/megrok.z3cform.tabular-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6121c55a8035a1b17b14a01810724078", "sha256": "b5396b7eda4ea5407bf3172c5244839de8eb8752b7153e032cf3a31961676c28"}, "downloads": -1, "filename": "megrok.z3cform.tabular-0.2.tar.gz", "has_sig": false, "md5_digest": "6121c55a8035a1b17b14a01810724078", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8364, "upload_time": "2009-10-26T16:10:40", "upload_time_iso_8601": "2009-10-26T16:10:40.649582Z", "url": "https://files.pythonhosted.org/packages/8e/a2/35d355e557821e7951f98616b2999e143d8f6fd15a810e06ee5b83ef1789/megrok.z3cform.tabular-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:26 2020"}