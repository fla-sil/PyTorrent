{"info": {"author": "Hanna Torrence", "author_email": "htorrence@shoprunner.com", "bugtrack_url": null, "classifiers": [], "description": "# Apparate\nMake your libraries magically appear in Databricks.\n\n![apparate](https://pa1.narvii.com/6547/b8fd048a32aa591dbae528f4a80e67cb87112317_hq.gif)\n\n\n## Why we built this\n\nWhen our team started setting up CI/CD for the various packages we maintain, we encountered some difficulties integrating Jenkins with Databricks.\n\nWe write a lot of Python + PySpark packages in our data science work, and we often deploy these as batch jobs run on a schedule using Databricks. However, each time we merged in a new change to one of these libraries we would have to manually create an egg, upload it using the Databricks GUI, go find all the jobs that used the library, and update each one to point to the new job. As our team and set of libraries and jobs grew, this became unsustainable (not to mention a big break from the CI/CD philosophy...).\n\nAs we set out to automate this using Databrick's library API, we realized that this task required using two versions of the API and many dependant API calls. Instead of trying to recreate that logic in each Jenkinsfile, we wrote apparate. Now you can enjoy the magic as well!\n\nApparate now works for both `.egg` and `.jar` files to support Python + PySpark and Scala + Spark libaries.\nTake advantage of apparate's ability to update jobs, make sure you're following one of the following naming conventions:\n```\nnew_library-1.0.0-py3.6.egg\nnew_library-1.0.0-SNAPSHOT-py3.6.egg\nnew_library-1.0.0-SNAPSHOT-my-branch-py3.6.egg\nnew_library-1.0.0.egg\nnew_library-1.0.0-SNAPSHOT.egg\nnew_library-1.0.0-SNAPSHOT-my-branch.egg\nnew_library-1.0.0.jar\nnew_library-1.0.0-SNAPSHOT.jar\nnew_library-1.0.0-SNAPSHOT-my-branch.jar\n```\nWhere the first number in the version (in this case `1`) is a major version signaling breaking changes.\n\n## What it does\n\nApparate is a tool to manage libraries in Databricks in an automated fashion. It allows you to move away from the point-and-click interface for your development work and for deploying production-level libraries for use in scheduled Databricks jobs.\n\nFor a more detailed API and tutorials, check out the [docs](https://apparate.readthedocs.io/en/latest/index.html).\n\n## Installation\n\nNote: apparate requires python3, and currently only works on Databricks accounts that run AWS (not Azure)\n\nApparate is hosted on PyPi, so to get the latest version simply install via pip:\n```\npip install apparate\n```\n\nYou can also install from source, by cloning the git repository https://github.com/ShopRunner/apparate.git and installing via easy_install:\n```\ngit clone https://github.com/ShopRunner/apparate.git\ncd apparate\neasy_install .\n```\n\n## Setup\n\n### Configuration\n\nApparate uses a `.apparatecfg` to store information about your Databricks account and setup. To create this file, run:\n```\napparate configure\n```\n\nYou will be asked for your Databricks host name (the url you use to access the account - something like `https://my-organization.cloud.databricks.com`), an access token, and your production folder. This should be a folder your team creates to keep production-ready libraries. By isolating production-ready libraries in their own folder, you ensure that apparate will never update a job to use a library still in development/testing.\n\n### Databricks API token\n\nThe API tokens can be generated in Databricks under Account Settings -> Access Tokens. To upload an egg to any folder in Databricks, you can use any token. To update jobs, you will need a token with admin permissions, which can be created in the same manner by an admin on the account.\n\n## Usage notes\n\nWhile libraries can be uploaded to folders other than your specified production library, no libraries outside of this folder will ever be deleted and no jobs using libraries outside of this folder will be updated.\n\nIf you try to upload a library to Databricks that already exists there with the same version, a warning will be printed instructing the user to update the version if a change has been made. Without a version change the new library will not be uploaded.\n\n\n## Contributing\nSee a way for apparate to improve? We welcome contributions in the form of issues or pull requests!\n\nPlease check out the [contributing](https://apparate.readthedocs.io/en/latest/contrib.html) page for more information.\n\n\n\nLicense\n-------\nCopyright (c) 2018, ShopRunner\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shoprunner/apparate", "keywords": "", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "apparate", "package_url": "https://pypi.org/project/apparate/", "platform": "", "project_url": "https://pypi.org/project/apparate/", "project_urls": {"Homepage": "https://github.com/shoprunner/apparate"}, "release_url": "https://pypi.org/project/apparate/2.2.2/", "requires_dist": ["click", "click-log", "configparser", "requests", "simplejson"], "requires_python": "", "summary": "Update libraries on Databricks", "version": "2.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Apparate</h1>\n<p>Make your libraries magically appear in Databricks.</p>\n<p><img alt=\"apparate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/312f6a6d9843dd502a35ba73008589d12df79ad7/68747470733a2f2f7061312e6e61727669692e636f6d2f363534372f623866643034386133326161353931646261653532386634613830653637636238373131323331375f68712e676966\"></p>\n<h2>Why we built this</h2>\n<p>When our team started setting up CI/CD for the various packages we maintain, we encountered some difficulties integrating Jenkins with Databricks.</p>\n<p>We write a lot of Python + PySpark packages in our data science work, and we often deploy these as batch jobs run on a schedule using Databricks. However, each time we merged in a new change to one of these libraries we would have to manually create an egg, upload it using the Databricks GUI, go find all the jobs that used the library, and update each one to point to the new job. As our team and set of libraries and jobs grew, this became unsustainable (not to mention a big break from the CI/CD philosophy...).</p>\n<p>As we set out to automate this using Databrick's library API, we realized that this task required using two versions of the API and many dependant API calls. Instead of trying to recreate that logic in each Jenkinsfile, we wrote apparate. Now you can enjoy the magic as well!</p>\n<p>Apparate now works for both <code>.egg</code> and <code>.jar</code> files to support Python + PySpark and Scala + Spark libaries.\nTake advantage of apparate's ability to update jobs, make sure you're following one of the following naming conventions:</p>\n<pre><code>new_library-1.0.0-py3.6.egg\nnew_library-1.0.0-SNAPSHOT-py3.6.egg\nnew_library-1.0.0-SNAPSHOT-my-branch-py3.6.egg\nnew_library-1.0.0.egg\nnew_library-1.0.0-SNAPSHOT.egg\nnew_library-1.0.0-SNAPSHOT-my-branch.egg\nnew_library-1.0.0.jar\nnew_library-1.0.0-SNAPSHOT.jar\nnew_library-1.0.0-SNAPSHOT-my-branch.jar\n</code></pre>\n<p>Where the first number in the version (in this case <code>1</code>) is a major version signaling breaking changes.</p>\n<h2>What it does</h2>\n<p>Apparate is a tool to manage libraries in Databricks in an automated fashion. It allows you to move away from the point-and-click interface for your development work and for deploying production-level libraries for use in scheduled Databricks jobs.</p>\n<p>For a more detailed API and tutorials, check out the <a href=\"https://apparate.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">docs</a>.</p>\n<h2>Installation</h2>\n<p>Note: apparate requires python3, and currently only works on Databricks accounts that run AWS (not Azure)</p>\n<p>Apparate is hosted on PyPi, so to get the latest version simply install via pip:</p>\n<pre><code>pip install apparate\n</code></pre>\n<p>You can also install from source, by cloning the git repository <a href=\"https://github.com/ShopRunner/apparate.git\" rel=\"nofollow\">https://github.com/ShopRunner/apparate.git</a> and installing via easy_install:</p>\n<pre><code>git clone https://github.com/ShopRunner/apparate.git\ncd apparate\neasy_install .\n</code></pre>\n<h2>Setup</h2>\n<h3>Configuration</h3>\n<p>Apparate uses a <code>.apparatecfg</code> to store information about your Databricks account and setup. To create this file, run:</p>\n<pre><code>apparate configure\n</code></pre>\n<p>You will be asked for your Databricks host name (the url you use to access the account - something like <code>https://my-organization.cloud.databricks.com</code>), an access token, and your production folder. This should be a folder your team creates to keep production-ready libraries. By isolating production-ready libraries in their own folder, you ensure that apparate will never update a job to use a library still in development/testing.</p>\n<h3>Databricks API token</h3>\n<p>The API tokens can be generated in Databricks under Account Settings -&gt; Access Tokens. To upload an egg to any folder in Databricks, you can use any token. To update jobs, you will need a token with admin permissions, which can be created in the same manner by an admin on the account.</p>\n<h2>Usage notes</h2>\n<p>While libraries can be uploaded to folders other than your specified production library, no libraries outside of this folder will ever be deleted and no jobs using libraries outside of this folder will be updated.</p>\n<p>If you try to upload a library to Databricks that already exists there with the same version, a warning will be printed instructing the user to update the version if a change has been made. Without a version change the new library will not be uploaded.</p>\n<h2>Contributing</h2>\n<p>See a way for apparate to improve? We welcome contributions in the form of issues or pull requests!</p>\n<p>Please check out the <a href=\"https://apparate.readthedocs.io/en/latest/contrib.html\" rel=\"nofollow\">contributing</a> page for more information.</p>\n<h2>License</h2>\n<p>Copyright (c) 2018, ShopRunner</p>\n<p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p>\n<ol>\n<li>\n<p>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</p>\n</li>\n<li>\n<p>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</p>\n</li>\n<li>\n<p>Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</p>\n</li>\n</ol>\n<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n\n          </div>"}, "last_serial": 4825741, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "0c9e2f0cee5ba886455147151b4e6907", "sha256": "128f1e03feff7824018e79de44b20ff193ddf5bd0aad9508ca5b95af6d7b518a"}, "downloads": -1, "filename": "apparate-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0c9e2f0cee5ba886455147151b4e6907", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11988, "upload_time": "2018-10-11T18:27:44", "upload_time_iso_8601": "2018-10-11T18:27:44.014599Z", "url": "https://files.pythonhosted.org/packages/0f/7d/6f7e47768eda30416d7ade8aaad708f029e4a8fe9085ae46c9d17200dd55/apparate-2.0.0-py3-none-any.whl", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "d725790ed2f639ab473175c2c1a6a863", "sha256": "6aee9f85d8579aadc44ef54472e4e3cd38233a9a6c6b717ca5843e0296c64b22"}, "downloads": -1, "filename": "apparate-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d725790ed2f639ab473175c2c1a6a863", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12025, "upload_time": "2018-10-11T19:56:12", "upload_time_iso_8601": "2018-10-11T19:56:12.950352Z", "url": "https://files.pythonhosted.org/packages/4b/a7/8632916c1839e3759c1744c3304c59934c1023823701f29522f5313a17f1/apparate-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ede92437b7d8fb615c697342e50e2451", "sha256": "0468d0706d5cde47c4a1ff61d7364d742b83c3647ebaa2a0386ad9944c8b0927"}, "downloads": -1, "filename": "apparate-2.1.0.tar.gz", "has_sig": false, "md5_digest": "ede92437b7d8fb615c697342e50e2451", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9377, "upload_time": "2018-10-11T19:56:14", "upload_time_iso_8601": "2018-10-11T19:56:14.087983Z", "url": "https://files.pythonhosted.org/packages/2d/da/8767a09260d6e00c986a24cedf7e99c640a6d239fdc4d98bd0b3d1b6bc86/apparate-2.1.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "8d038c1bc57fc8eecd6fcdfdfe15de64", "sha256": "b53e6ef9e9ea3d64d43700f293c580b85c341f7a43ed72a8f84a4c4b637ad754"}, "downloads": -1, "filename": "apparate-2.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8d038c1bc57fc8eecd6fcdfdfe15de64", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13111, "upload_time": "2018-12-04T21:00:10", "upload_time_iso_8601": "2018-12-04T21:00:10.566875Z", "url": "https://files.pythonhosted.org/packages/18/4b/103447dfaf779fdb33dac6a66e211035b309966246cc1779b43a234555ea/apparate-2.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa0f2b6f6d543d5037ca5c640bb1ae3b", "sha256": "184519023fbccdd90eadc3410b90a19f5a38ba1958bc6355cc7c51269ec441f4"}, "downloads": -1, "filename": "apparate-2.2.0.tar.gz", "has_sig": false, "md5_digest": "fa0f2b6f6d543d5037ca5c640bb1ae3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10503, "upload_time": "2018-12-04T21:00:11", "upload_time_iso_8601": "2018-12-04T21:00:11.974350Z", "url": "https://files.pythonhosted.org/packages/0e/ac/33ba73da58039a5d0fdc2a247ed1da589e791540c40fbb9a5a622d6fb699/apparate-2.2.0.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "1fbfbede1652dd980ffd2ce2f86c694c", "sha256": "d429236de1838e46b0a1f89f155810dcbfbf92e66fd50cf006326661178bb74d"}, "downloads": -1, "filename": "apparate-2.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1fbfbede1652dd980ffd2ce2f86c694c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14048, "upload_time": "2019-02-15T15:56:26", "upload_time_iso_8601": "2019-02-15T15:56:26.210099Z", "url": "https://files.pythonhosted.org/packages/1b/72/8515f6d6bd04320e15a0fa78f4f137696849af4619dec9a659ec03a5365e/apparate-2.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3e8427a8325684b2f3920fec46a1995", "sha256": "a15aa639fc9a6b864fffaa71b39f110ac4b4712a59df787d27d057761b136562"}, "downloads": -1, "filename": "apparate-2.2.2.tar.gz", "has_sig": false, "md5_digest": "a3e8427a8325684b2f3920fec46a1995", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10580, "upload_time": "2019-02-15T15:56:27", "upload_time_iso_8601": "2019-02-15T15:56:27.398458Z", "url": "https://files.pythonhosted.org/packages/64/9c/72091a2bcd83f24a9956f8a0f6ec5fe79c969006ccf47b7f23af73da8090/apparate-2.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1fbfbede1652dd980ffd2ce2f86c694c", "sha256": "d429236de1838e46b0a1f89f155810dcbfbf92e66fd50cf006326661178bb74d"}, "downloads": -1, "filename": "apparate-2.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1fbfbede1652dd980ffd2ce2f86c694c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14048, "upload_time": "2019-02-15T15:56:26", "upload_time_iso_8601": "2019-02-15T15:56:26.210099Z", "url": "https://files.pythonhosted.org/packages/1b/72/8515f6d6bd04320e15a0fa78f4f137696849af4619dec9a659ec03a5365e/apparate-2.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3e8427a8325684b2f3920fec46a1995", "sha256": "a15aa639fc9a6b864fffaa71b39f110ac4b4712a59df787d27d057761b136562"}, "downloads": -1, "filename": "apparate-2.2.2.tar.gz", "has_sig": false, "md5_digest": "a3e8427a8325684b2f3920fec46a1995", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10580, "upload_time": "2019-02-15T15:56:27", "upload_time_iso_8601": "2019-02-15T15:56:27.398458Z", "url": "https://files.pythonhosted.org/packages/64/9c/72091a2bcd83f24a9956f8a0f6ec5fe79c969006ccf47b7f23af73da8090/apparate-2.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:42 2020"}