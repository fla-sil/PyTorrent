{"info": {"author": "Loris Mularoni", "author_email": "loris.mularoni@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "Microsatellites Finder\n======================\nThis program searches for microsatellites in fasta sequences.  \nThe available options are the following:  \n\n- ``-i, --input-fasta``: path of the fasta file containing the sequence(s) to analyze. The file can be either a plain text file or a gzip compressed file.  \n- ``-o, --output-file``: path of the file to save with the results of the analysis. The coordinates of the microsatellites will be 0-based.    \n- ``-l, --seed-length``: length of the seed of the microsatellites, i.e. the number of nucleotides that will be repeated. For instance `-l 2` will find microsatellites like ``ACACACAC`` where the seed ``AC`` is repeated 4 times.  \n- ``-r, --minimum_repetitions``: minimum number of repetitions of the seed. For instance ``-r 3`` will find microsatellites like ``CTACTACTA`` or ``CTACTACTACTA`` where the seed ``CTA`` is repeated at least 3 times. The minimum allowed value is 2 and the default value is 3.  \n- ``-im, --imperfect``: include imperfect microsatellites. With this option microsatellites repeated at least ``-r -1`` times that share the same seed and have a distance up to the \"--imperfect\" value will be merged together and will be considered as a single microsatellite. By default this option is disabled and microsatellites are kept separated.  \n- ``-s, --strict``: when ``--imperfect`` is a positive integer, this option allows to search for imperfect microsatellites only by using nucleotides that are present in the seed. For instance, if the seed is ``AT`` only the nucleotides ``A`` and ``T`` will be considered. By default this option is disabled and all the nucleotides ``ACGT`` are considered.\n- ``-a, --alphabet``: alphabet to use for the microsatellites search. The alphabet can be either **dna** for DNA or **aa** for PROTEINS. Default is \"dna\".\n- ``-f, --flanking``: length of the sequences flanking the microsatellites. The sequences will be written in the output file. Sequences that overstep the boundaries of a chromosome will be truncated. By default this option is disabled.\n- ``-c, --cores``: number of CPUs to use in the computation. By default it will use all the available CPUs.  \n- ``-p, --progress``: track the progress of the computation with a progress bar.  \n\n\nHow to execute the program\n--------------------------\nThe program can be executed by writing of your terminal:\n        \n    find_micro\n\nRequirements:\n-------------\n- Python 3.4+\n\n\nInstallation:\n-------------\n\n    pip install macrosatellites_finder", "description_content_type": "", "docs_url": null, "download_url": "https://bitbucket.org/batterio/microsatellites_finder/get/1.2.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/batterio/microsatellites_finder/", "keywords": "repeats,microsatellites", "license": "The MIT License (MIT)", "maintainer": "", "maintainer_email": "", "name": "microsatellites_finder", "package_url": "https://pypi.org/project/microsatellites_finder/", "platform": "", "project_url": "https://pypi.org/project/microsatellites_finder/", "project_urls": {"Download": "https://bitbucket.org/batterio/microsatellites_finder/get/1.2.1.tar.gz", "Homepage": "https://bitbucket.org/batterio/microsatellites_finder/"}, "release_url": "https://pypi.org/project/microsatellites_finder/1.2.1/", "requires_dist": null, "requires_python": "", "summary": "Python package that searches for microsatellites in fasta sequences", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This program searches for microsatellites in fasta sequences.\nThe available options are the following:</p>\n<ul>\n<li><tt><span class=\"pre\">-i,</span> <span class=\"pre\">--input-fasta</span></tt>: path of the fasta file containing the sequence(s) to analyze. The file can be either a plain text file or a gzip compressed file.</li>\n<li><tt><span class=\"pre\">-o,</span> <span class=\"pre\">--output-file</span></tt>: path of the file to save with the results of the analysis. The coordinates of the microsatellites will be 0-based.</li>\n<li><tt><span class=\"pre\">-l,</span> <span class=\"pre\">--seed-length</span></tt>: length of the seed of the microsatellites, i.e. the number of nucleotides that will be repeated. For instance <cite>-l 2</cite> will find microsatellites like <tt>ACACACAC</tt> where the seed <tt>AC</tt> is repeated 4 times.</li>\n<li><tt><span class=\"pre\">-r,</span> <span class=\"pre\">--minimum_repetitions</span></tt>: minimum number of repetitions of the seed. For instance <tt><span class=\"pre\">-r</span> 3</tt> will find microsatellites like <tt>CTACTACTA</tt> or <tt>CTACTACTACTA</tt> where the seed <tt>CTA</tt> is repeated at least 3 times. The minimum allowed value is 2 and the default value is 3.</li>\n<li><tt><span class=\"pre\">-im,</span> <span class=\"pre\">--imperfect</span></tt>: include imperfect microsatellites. With this option microsatellites repeated at least <tt><span class=\"pre\">-r</span> <span class=\"pre\">-1</span></tt> times that share the same seed and have a distance up to the \u201c\u2013imperfect\u201d value will be merged together and will be considered as a single microsatellite. By default this option is disabled and microsatellites are kept separated.</li>\n<li><tt><span class=\"pre\">-s,</span> <span class=\"pre\">--strict</span></tt>: when <tt><span class=\"pre\">--imperfect</span></tt> is a positive integer, this option allows to search for imperfect microsatellites only by using nucleotides that are present in the seed. For instance, if the seed is <tt>AT</tt> only the nucleotides <tt>A</tt> and <tt>T</tt> will be considered. By default this option is disabled and all the nucleotides <tt>ACGT</tt> are considered.</li>\n<li><tt><span class=\"pre\">-a,</span> <span class=\"pre\">--alphabet</span></tt>: alphabet to use for the microsatellites search. The alphabet can be either <strong>dna</strong> for DNA or <strong>aa</strong> for PROTEINS. Default is \u201cdna\u201d.</li>\n<li><tt><span class=\"pre\">-f,</span> <span class=\"pre\">--flanking</span></tt>: length of the sequences flanking the microsatellites. The sequences will be written in the output file. Sequences that overstep the boundaries of a chromosome will be truncated. By default this option is disabled.</li>\n<li><tt><span class=\"pre\">-c,</span> <span class=\"pre\">--cores</span></tt>: number of CPUs to use in the computation. By default it will use all the available CPUs.</li>\n<li><tt><span class=\"pre\">-p,</span> <span class=\"pre\">--progress</span></tt>: track the progress of the computation with a progress bar.</li>\n</ul>\n<div id=\"how-to-execute-the-program\">\n<h2>How to execute the program</h2>\n<p>The program can be executed by writing of your terminal:</p>\n<blockquote>\nfind_micro</blockquote>\n</div>\n<div id=\"requirements\">\n<h2>Requirements:</h2>\n<ul>\n<li>Python 3.4+</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<blockquote>\npip install macrosatellites_finder</blockquote>\n</div>\n\n          </div>"}, "last_serial": 4468751, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "6c4cad6f826571369c05df375b622cc2", "sha256": "ed74270116e27777787ca349a581b8804312e5e644d7c4fa7f4d7458d1f9cabf"}, "downloads": -1, "filename": "microsatellites_finder-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6c4cad6f826571369c05df375b622cc2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5814, "upload_time": "2015-08-26T22:12:21", "upload_time_iso_8601": "2015-08-26T22:12:21.868303Z", "url": "https://files.pythonhosted.org/packages/23/32/6e9c76dc8cec49ff4029cd3210c68d5f3574f6d60255af66ea6b3b8c35e3/microsatellites_finder-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "311f98abb0dbe5ea2c3cfb6007752bce", "sha256": "7f2229feb93c022a7e1a841b75662ef4c8e19245aaa56b44f675f9c427c62812"}, "downloads": -1, "filename": "microsatellites_finder-1.1.0.tar.gz", "has_sig": false, "md5_digest": "311f98abb0dbe5ea2c3cfb6007752bce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6203, "upload_time": "2015-08-30T18:20:59", "upload_time_iso_8601": "2015-08-30T18:20:59.900428Z", "url": "https://files.pythonhosted.org/packages/ef/18/14c2809a3de06e1f59c1576ff4cf05a76ac00859a3964377e2053569512d/microsatellites_finder-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "78350778173c4fbda077cde5dcbdaada", "sha256": "0cf0ba2e6bed3193f43b2905fe5136b9b7da998f855d8f40188e16347fa62899"}, "downloads": -1, "filename": "microsatellites_finder-1.2.0.tar.gz", "has_sig": false, "md5_digest": "78350778173c4fbda077cde5dcbdaada", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6593, "upload_time": "2015-09-27T17:32:24", "upload_time_iso_8601": "2015-09-27T17:32:24.128823Z", "url": "https://files.pythonhosted.org/packages/f1/4f/a5fefa10a0b605a0ecdb1cadb09fc8ac4304795e10236749513fac8583fd/microsatellites_finder-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "b085f6d30967ef5ca6e84a0d50c9aa28", "sha256": "075428fdf368126b3f51a36abe7fc3fafc7c3db9ef9ccfacab9e2dbc6dadda7a"}, "downloads": -1, "filename": "microsatellites_finder-1.2.1.tar.gz", "has_sig": false, "md5_digest": "b085f6d30967ef5ca6e84a0d50c9aa28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6851, "upload_time": "2018-11-09T09:41:14", "upload_time_iso_8601": "2018-11-09T09:41:14.762249Z", "url": "https://files.pythonhosted.org/packages/8d/d0/01c3c521d2e3d0e57c585f72362fb71ce19243f7705d16955f18495fe5f6/microsatellites_finder-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b085f6d30967ef5ca6e84a0d50c9aa28", "sha256": "075428fdf368126b3f51a36abe7fc3fafc7c3db9ef9ccfacab9e2dbc6dadda7a"}, "downloads": -1, "filename": "microsatellites_finder-1.2.1.tar.gz", "has_sig": false, "md5_digest": "b085f6d30967ef5ca6e84a0d50c9aa28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6851, "upload_time": "2018-11-09T09:41:14", "upload_time_iso_8601": "2018-11-09T09:41:14.762249Z", "url": "https://files.pythonhosted.org/packages/8d/d0/01c3c521d2e3d0e57c585f72362fb71ce19243f7705d16955f18495fe5f6/microsatellites_finder-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:57 2020"}