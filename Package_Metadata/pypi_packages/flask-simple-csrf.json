{"info": {"author": "Cary Carter", "author_email": "ccarterdev@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# Install\n`pip3 install flask-simple-csrf`\nor if installing from source\n```python3 setup.py install```\n\n# How to use\nThis package is intended to assign a unique CSRF string per each form submit per user session, without requiring any backend session tracking. First, you'll want to set a variable `SECRET_CSRF_KEY` in your app config to a random, complex string. Example: `SECRET_CSRF_KEY = 'wMmeltW4mhwidorQRli6Oxx9VPXldz'`\n\nSecond, you probably want to add somthing like this to the top of your code:\n\n```\nfrom flask_simple_csrf import CSRF\n\n#app.config should have an attribute that looks something like this\n#CSRF_CONFIG = {\n#    'SECRET_CSRF_KEY': 'changeme-40-50-characters-long',\n#}\n\nCSRF = CSRF(config=config.CSRF_CONFIG)\napp = CSRF.init_app(app)\n\n@app.before_request\ndef before_request():\n        if 'CSRF_TOKEN' not in session or 'USER_CSRF' not in session:\n            session['USER_CSRF'] = random_string(64)\n            session['CSRF_TOKEN'] = CSRF.create(session['USER_CSRF'])\n```\n\nEach user session should have a unique CSRF string which changes on form submit.\n\nIn the HTML templates you want to protect, add: `{{ csrf_html(session['USER_CSRF'])|safe }}`\n\nThis will create something like this: `<input type=\"hidden\" value=\"9D...\" name=\"simplecsrf\">`\n\nI'd reccommend creating a wrapper to avoid code duplciation when checking for this value. Something like:\n```\ndef require_csrf(f):\n    @wraps(f)\n    def decorated(*args, **kwargs):\n        if request.method == 'POST':\n            user_csrf = request.form.get('simplecsrf')\n\n            if CSRF.verify(user_csrf, session['CSRF_TOKEN']) is False:\n                flash('submitted csrf does not match combined server & user keys')\n                return logout()\n\n            clear_csrf_tokens()\n            flash('csrf user token and server token match', 'success')\n\n            return f(*args, **kwargs)\n        else:\n            return f(*args, **kwargs)\n    return decorated\n```\n\nThen use the @require_csrf decorator before each flask view you'd like to require the check.\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cc-d/flask-simple-csrf", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flask-simple-csrf", "package_url": "https://pypi.org/project/flask-simple-csrf/", "platform": "", "project_url": "https://pypi.org/project/flask-simple-csrf/", "project_urls": {"Homepage": "https://github.com/cc-d/flask-simple-csrf"}, "release_url": "https://pypi.org/project/flask-simple-csrf/1.2.0/", "requires_dist": ["Werkzeug (==0.16.0)"], "requires_python": "", "summary": "Extremely simple, \"Good Enough\" csrf implemention for flask forms, no server side sessions required.", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Install</h1>\n<p><code>pip3 install flask-simple-csrf</code>\nor if installing from source\n<code>python3 setup.py install</code></p>\n<h1>How to use</h1>\n<p>This package is intended to assign a unique CSRF string per each form submit per user session, without requiring any backend session tracking. First, you'll want to set a variable <code>SECRET_CSRF_KEY</code> in your app config to a random, complex string. Example: <code>SECRET_CSRF_KEY = 'wMmeltW4mhwidorQRli6Oxx9VPXldz'</code></p>\n<p>Second, you probably want to add somthing like this to the top of your code:</p>\n<pre><code>from flask_simple_csrf import CSRF\n\n#app.config should have an attribute that looks something like this\n#CSRF_CONFIG = {\n#    'SECRET_CSRF_KEY': 'changeme-40-50-characters-long',\n#}\n\nCSRF = CSRF(config=config.CSRF_CONFIG)\napp = CSRF.init_app(app)\n\n@app.before_request\ndef before_request():\n        if 'CSRF_TOKEN' not in session or 'USER_CSRF' not in session:\n            session['USER_CSRF'] = random_string(64)\n            session['CSRF_TOKEN'] = CSRF.create(session['USER_CSRF'])\n</code></pre>\n<p>Each user session should have a unique CSRF string which changes on form submit.</p>\n<p>In the HTML templates you want to protect, add: <code>{{ csrf_html(session['USER_CSRF'])|safe }}</code></p>\n<p>This will create something like this: <code>&lt;input type=\"hidden\" value=\"9D...\" name=\"simplecsrf\"&gt;</code></p>\n<p>I'd reccommend creating a wrapper to avoid code duplciation when checking for this value. Something like:</p>\n<pre><code>def require_csrf(f):\n    @wraps(f)\n    def decorated(*args, **kwargs):\n        if request.method == 'POST':\n            user_csrf = request.form.get('simplecsrf')\n\n            if CSRF.verify(user_csrf, session['CSRF_TOKEN']) is False:\n                flash('submitted csrf does not match combined server &amp; user keys')\n                return logout()\n\n            clear_csrf_tokens()\n            flash('csrf user token and server token match', 'success')\n\n            return f(*args, **kwargs)\n        else:\n            return f(*args, **kwargs)\n    return decorated\n</code></pre>\n<p>Then use the @require_csrf decorator before each flask view you'd like to require the check.</p>\n\n          </div>"}, "last_serial": 6557184, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3a931708ca6eb3f2a8a209edf777ff3d", "sha256": "ee4016e43a6e03381980ff864fd653fddc8bf6e5476eaa86e2cded1e4e8638f4"}, "downloads": -1, "filename": "flask_simple_csrf-1.0.0-py3.7.egg", "has_sig": false, "md5_digest": "3a931708ca6eb3f2a8a209edf777ff3d", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 5912, "upload_time": "2020-02-02T07:59:30", "upload_time_iso_8601": "2020-02-02T07:59:30.427340Z", "url": "https://files.pythonhosted.org/packages/12/45/6d8aaf811d0f1638b4dc095f18e11d145368e593985fdb04ebe6ffbb3305/flask_simple_csrf-1.0.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "469ecdcd3946dfa5b92f3fcf11bbc9c9", "sha256": "b2f35c8b6ab6ab6e341ea270b794a9125dd9036d91f43292e1066beaf50ba8e4"}, "downloads": -1, "filename": "flask_simple_csrf-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "469ecdcd3946dfa5b92f3fcf11bbc9c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4572, "upload_time": "2020-02-02T02:16:28", "upload_time_iso_8601": "2020-02-02T02:16:28.508002Z", "url": "https://files.pythonhosted.org/packages/f3/cd/1ddd15a165be501d7bf4b7de806d7bfd46dbd8d04c0bfd4aef69e63ad59a/flask_simple_csrf-1.0.0-py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "1cb773999a0c24e7d17d9a43a198d0e4", "sha256": "d273b2686284e42cb2fe966b3108cb9eb8e3abd75f5e7a943f3cd24ca47c61ef"}, "downloads": -1, "filename": "flask_simple_csrf-1.1.0-py3.7.egg", "has_sig": false, "md5_digest": "1cb773999a0c24e7d17d9a43a198d0e4", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 6006, "upload_time": "2020-02-02T07:59:31", "upload_time_iso_8601": "2020-02-02T07:59:31.584052Z", "url": "https://files.pythonhosted.org/packages/ed/de/bf703098fbe4ebba925b11c24b7cde90d8cc88657dc1acef30f1f8ca67c0/flask_simple_csrf-1.1.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "32d1a5a27f1b085f2d90a880a4904178", "sha256": "ecc50ed1e3477b205ef5e303a10600b860c58648b4147c324fb092c373268c85"}, "downloads": -1, "filename": "flask_simple_csrf-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "32d1a5a27f1b085f2d90a880a4904178", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4719, "upload_time": "2020-02-02T07:59:29", "upload_time_iso_8601": "2020-02-02T07:59:29.486402Z", "url": "https://files.pythonhosted.org/packages/1a/18/6f21588570d64e79994aef52d7ba6f4445dcceb6b784abf473772ad86a3a/flask_simple_csrf-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55c4d48d9f4d526f0b84b7cd80bb2937", "sha256": "a11005a3578a7bb70ce8531e18a2abe08535185bcaa700a8c82f40a35b9a4db8"}, "downloads": -1, "filename": "flask-simple-csrf-1.1.0.tar.gz", "has_sig": false, "md5_digest": "55c4d48d9f4d526f0b84b7cd80bb2937", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3379, "upload_time": "2020-02-02T07:59:32", "upload_time_iso_8601": "2020-02-02T07:59:32.448182Z", "url": "https://files.pythonhosted.org/packages/2e/d7/e65e21938beb7b0af403e8a1eeb4d0cbc6508cc249c841853b42f0a08d82/flask-simple-csrf-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "4f2a198152622753baa946b4e48dce83", "sha256": "0a5dc892f9020dba9c95d06a50d5e2f43c7889365810660ebe30c0b658d0fd38"}, "downloads": -1, "filename": "flask_simple_csrf-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4f2a198152622753baa946b4e48dce83", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4755, "upload_time": "2020-02-02T08:35:21", "upload_time_iso_8601": "2020-02-02T08:35:21.329628Z", "url": "https://files.pythonhosted.org/packages/17/9e/854ac478e50f9ba1bf3970fc0959e4843ab1084517235f759c889a4319a1/flask_simple_csrf-1.1.1-py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "f336a85c0264edbcf15f267ee21de337", "sha256": "426719c80e2e5d9d03ccf8d94ddefdbf91094aaaf3fd87fc7d31f2c1d16206eb"}, "downloads": -1, "filename": "flask_simple_csrf-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f336a85c0264edbcf15f267ee21de337", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4755, "upload_time": "2020-02-02T08:37:35", "upload_time_iso_8601": "2020-02-02T08:37:35.629108Z", "url": "https://files.pythonhosted.org/packages/c1/35/2f91c14f3bd0f065334f95f71a66cf48271adf2152220cbacd8f336c70de/flask_simple_csrf-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4eecc33168a95f77ffdc948654abd8dd", "sha256": "45c265c210e9073777454aae4136058a5c704c249c0712831c4c696e9bfd29b4"}, "downloads": -1, "filename": "flask-simple-csrf-1.2.0.tar.gz", "has_sig": false, "md5_digest": "4eecc33168a95f77ffdc948654abd8dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3405, "upload_time": "2020-02-02T08:37:36", "upload_time_iso_8601": "2020-02-02T08:37:36.672942Z", "url": "https://files.pythonhosted.org/packages/54/be/4f011f40c12f657bbec76deb7c1136b566f1a3b4d892c8f84084b79d03f3/flask-simple-csrf-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f336a85c0264edbcf15f267ee21de337", "sha256": "426719c80e2e5d9d03ccf8d94ddefdbf91094aaaf3fd87fc7d31f2c1d16206eb"}, "downloads": -1, "filename": "flask_simple_csrf-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f336a85c0264edbcf15f267ee21de337", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4755, "upload_time": "2020-02-02T08:37:35", "upload_time_iso_8601": "2020-02-02T08:37:35.629108Z", "url": "https://files.pythonhosted.org/packages/c1/35/2f91c14f3bd0f065334f95f71a66cf48271adf2152220cbacd8f336c70de/flask_simple_csrf-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4eecc33168a95f77ffdc948654abd8dd", "sha256": "45c265c210e9073777454aae4136058a5c704c249c0712831c4c696e9bfd29b4"}, "downloads": -1, "filename": "flask-simple-csrf-1.2.0.tar.gz", "has_sig": false, "md5_digest": "4eecc33168a95f77ffdc948654abd8dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3405, "upload_time": "2020-02-02T08:37:36", "upload_time_iso_8601": "2020-02-02T08:37:36.672942Z", "url": "https://files.pythonhosted.org/packages/54/be/4f011f40c12f657bbec76deb7c1136b566f1a3b4d892c8f84084b79d03f3/flask-simple-csrf-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:18 2020"}