{"info": {"author": "Luca Cappelletti", "author_email": "cappelletti.luca94@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "fasta_one_hot_encoder\n=========================================================================================\n|travis| |sonar_quality| |sonar_maintainability| |codacy| |code_climate_maintainability| |pip| |downloads|\n\nSimple python to lazily one-hot encode fasta files using multiple processes, either single bases or considering arbitrary kmers.\n\nHow do I install this package?\n----------------------------------------------\nAs usual, just download it using pip:\n\n.. code:: shell\n\n    pip install fasta_one_hot_encoder\n\nTests Coverage\n----------------------------------------------\nSince some software handling coverages sometime get slightly different results, here's three of them:\n\n|coveralls| |sonar_coverage| |code_climate_coverage|\n\nExamples\n---------------\n\nBases\n~~~~~~~~~~~~~~~~~~\n|bases|\n\nOne-hot encode to bases.\n\n.. code:: python\n\n    from fasta_one_hot_encoder import FastaOneHotEncoder\n\n    encoder = FastaOneHotEncoder(\n        nucleotides = \"acgt\",\n        lower = True,\n        sparse = False,\n        handle_unknown=\"ignore\"\n    )\n    path = \"test_data/my_test_fasta.fa\"\n    encoder.transform_to_df(path, verbose=True).to_csv(\n        \"my_result.csv\"\n    )\n\nObtained results should look like:\n\n+---+---+---+---+---+\n|   | a | c | g | t |\n+===+===+===+===+===+\n| 0 | 0 | 0 | 1 | 0 |\n+---+---+---+---+---+\n| 1 | 0 | 1 | 0 | 0 |\n+---+---+---+---+---+\n| 2 | 0 | 1 | 0 | 0 |\n+---+---+---+---+---+\n\nKmers\n~~~~~~~~~~~~~~~~~~\n|kmers|\n\nOne-hot encode to kmers of given length.\n\n.. code:: python\n\n    from fasta_one_hot_encoder import FastaOneHotEncoder\n\n    encoder = FastaOneHotEncoder(\n        nucleotides = \"acgt\",\n        kmers_length=2,\n        lower = True,\n        sparse = False,\n        handle_unknown=\"ignore\"\n    )\n    path = \"test_data/my_test_fasta.fa\"\n    encoder.transform_to_df(path, verbose=True).to_csv(\n        \"my_result.csv\"\n    )\n\nObtained results should look like:\n\n+---+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n|   | aa | ac | ag | at | ca | cc | cg | ct | ga | gc | gg | gt | ta | tc | tg | tt |\n+===+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+\n| 0 | 0  | 0  | 0  | 0  | 0  | 0  | 0  | 0  | 0  | 1  | 0  | 0  | 0  | 0  | 0  | 0  |\n+---+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n| 1 | 0  | 0  | 0  | 0  | 0  | 1  | 0  | 0  | 0  | 0  | 0  | 0  | 0  | 0  | 0  | 0  |\n+---+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+\n\n.. |bases| image:: https://github.com/LucaCappelletti94/fasta_one_hot_encoder/blob/master/bases.png?raw=true\n   :alt: Bases\n\n.. |kmers| image:: https://github.com/LucaCappelletti94/fasta_one_hot_encoder/raw/master/kmers.png\n   :alt: Kmers\n\n.. |travis| image:: https://travis-ci.org/LucaCappelletti94/fasta_one_hot_encoder.png\n   :target: https://travis-ci.org/LucaCappelletti94/fasta_one_hot_encoder\n   :alt: Travis CI build\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_fasta_one_hot_encoder&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_fasta_one_hot_encoder\n    :alt: SonarCloud Quality\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_fasta_one_hot_encoder&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_fasta_one_hot_encoder\n    :alt: SonarCloud Maintainability\n\n.. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_fasta_one_hot_encoder&metric=coverage\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_fasta_one_hot_encoder\n    :alt: SonarCloud Coverage\n\n.. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/fasta_one_hot_encoder/badge.svg?branch=master\n    :target: https://coveralls.io/github/LucaCappelletti94/fasta_one_hot_encoder?branch=master\n    :alt: Coveralls Coverage\n\n.. |pip| image:: https://badge.fury.io/py/fasta_one_hot_encoder.svg\n    :target: https://badge.fury.io/py/fasta_one_hot_encoder\n    :alt: Pypi project\n\n.. |downloads| image:: https://pepy.tech/badge/fasta_one_hot_encoder\n    :target: https://pepy.tech/badge/fasta_one_hot_encoder\n    :alt: Pypi total project downloads \n\n.. |codacy|  image:: https://api.codacy.com/project/badge/Grade/b95f6c430646485c82a1f674253f4d42\n    :target: https://www.codacy.com/app/LucaCappelletti94/fasta_one_hot_encoder?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LucaCappelletti94/fasta_one_hot_encoder&amp;utm_campaign=Badge_Grade\n    :alt: Codacy Maintainability\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/7c5ae881132b6622be2b/maintainability\n    :target: https://codeclimate.com/github/LucaCappelletti94/fasta_one_hot_encoder/maintainability\n    :alt: Maintainability\n\n.. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/7c5ae881132b6622be2b/test_coverage\n    :target: https://codeclimate.com/github/LucaCappelletti94/fasta_one_hot_encoder/test_coverage\n    :alt: Code Climate Coverate", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LucaCappelletti94/fasta_one_hot_encoder", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fasta-one-hot-encoder", "package_url": "https://pypi.org/project/fasta-one-hot-encoder/", "platform": "", "project_url": "https://pypi.org/project/fasta-one-hot-encoder/", "project_urls": {"Homepage": "https://github.com/LucaCappelletti94/fasta_one_hot_encoder"}, "release_url": "https://pypi.org/project/fasta-one-hot-encoder/1.2.2/", "requires_dist": null, "requires_python": "", "summary": "Simple python to lazily one-hot encode fasta files using multiple processes, either single bases or considering arbitrary kmers.", "version": "1.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/LucaCappelletti94/fasta_one_hot_encoder\" rel=\"nofollow\"><img alt=\"Travis CI build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ed281cfe7c19fb13f0a1e080acdbc3d8006467b/68747470733a2f2f7472617669732d63692e6f72672f4c75636143617070656c6c6574746939342f66617374615f6f6e655f686f745f656e636f6465722e706e67\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_fasta_one_hot_encoder\" rel=\"nofollow\"><img alt=\"SonarCloud Quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/77cd936d3f29f4ea7478fe210bde0c03e15af12d/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f66617374615f6f6e655f686f745f656e636f646572266d65747269633d616c6572745f737461747573\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_fasta_one_hot_encoder\" rel=\"nofollow\"><img alt=\"SonarCloud Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/10d1fdea953d2d18cbed2e13eebd4935f411d17e/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f66617374615f6f6e655f686f745f656e636f646572266d65747269633d7371616c655f726174696e67\"></a> <a href=\"https://www.codacy.com/app/LucaCappelletti94/fasta_one_hot_encoder?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=LucaCappelletti94/fasta_one_hot_encoder&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c958adec56285896c5f3d91f2f70e491fbed55a0/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6239356636633433303634363438356338326131663637343235336634643432\"></a> <a href=\"https://codeclimate.com/github/LucaCappelletti94/fasta_one_hot_encoder/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/79922fff5424a5c87aedd208e3047a4fd1cd9cf1/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f37633561653838313133326236363232626532622f6d61696e7461696e6162696c697479\"></a> <a href=\"https://badge.fury.io/py/fasta_one_hot_encoder\" rel=\"nofollow\"><img alt=\"Pypi project\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0b2d3815a9c796c2b94eb9dedb5c629229b4d6ef/68747470733a2f2f62616467652e667572792e696f2f70792f66617374615f6f6e655f686f745f656e636f6465722e737667\"></a> <a href=\"https://pepy.tech/badge/fasta_one_hot_encoder\" rel=\"nofollow\"><img alt=\"Pypi total project downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8fccee85a9e0f920b65cef4ee544dc4592401a8b/68747470733a2f2f706570792e746563682f62616467652f66617374615f6f6e655f686f745f656e636f646572\"></a></p>\n<p>Simple python to lazily one-hot encode fasta files using multiple processes, either single bases or considering arbitrary kmers.</p>\n<div id=\"how-do-i-install-this-package\">\n<h2>How do I install this package?</h2>\n<p>As usual, just download it using pip:</p>\n<pre>pip install fasta_one_hot_encoder\n</pre>\n</div>\n<div id=\"tests-coverage\">\n<h2>Tests Coverage</h2>\n<p>Since some software handling coverages sometime get slightly different results, here\u2019s three of them:</p>\n<p><a href=\"https://coveralls.io/github/LucaCappelletti94/fasta_one_hot_encoder?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a21dc0fe2e252139c6622a81e07eaf01a635cea0/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4c75636143617070656c6c6574746939342f66617374615f6f6e655f686f745f656e636f6465722f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_fasta_one_hot_encoder\" rel=\"nofollow\"><img alt=\"SonarCloud Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/84d4f132cb9c9a6c84010b4c10ff225bbcd0302a/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f66617374615f6f6e655f686f745f656e636f646572266d65747269633d636f766572616765\"></a> <a href=\"https://codeclimate.com/github/LucaCappelletti94/fasta_one_hot_encoder/test_coverage\" rel=\"nofollow\"><img alt=\"Code Climate Coverate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/07dff455cbe346dc9c04921cbdee1f059b9ca5b4/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f37633561653838313133326236363232626532622f746573745f636f766572616765\"></a></p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<div id=\"bases\">\n<h3>Bases</h3>\n<p><img alt=\"Bases\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e365b088ee0757a3c1a5b0df45d03ffb8d58b9c9/68747470733a2f2f6769746875622e636f6d2f4c75636143617070656c6c6574746939342f66617374615f6f6e655f686f745f656e636f6465722f626c6f622f6d61737465722f62617365732e706e673f7261773d74727565\"></p>\n<p>One-hot encode to bases.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fasta_one_hot_encoder</span> <span class=\"kn\">import</span> <span class=\"n\">FastaOneHotEncoder</span>\n\n<span class=\"n\">encoder</span> <span class=\"o\">=</span> <span class=\"n\">FastaOneHotEncoder</span><span class=\"p\">(</span>\n    <span class=\"n\">nucleotides</span> <span class=\"o\">=</span> <span class=\"s2\">\"acgt\"</span><span class=\"p\">,</span>\n    <span class=\"n\">lower</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">sparse</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">handle_unknown</span><span class=\"o\">=</span><span class=\"s2\">\"ignore\"</span>\n<span class=\"p\">)</span>\n<span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_data/my_test_fasta.fa\"</span>\n<span class=\"n\">encoder</span><span class=\"o\">.</span><span class=\"n\">transform_to_df</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_csv</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"my_result.csv\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Obtained results should look like:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>\u00a0</th>\n<th>a</th>\n<th>c</th>\n<th>g</th>\n<th>t</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>0</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n</tr>\n<tr><td>1</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr><td>2</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"kmers\">\n<h3>Kmers</h3>\n<p><img alt=\"Kmers\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f968dd23a3d39f63fd4a89d436e031b40267b97c/68747470733a2f2f6769746875622e636f6d2f4c75636143617070656c6c6574746939342f66617374615f6f6e655f686f745f656e636f6465722f7261772f6d61737465722f6b6d6572732e706e67\"></p>\n<p>One-hot encode to kmers of given length.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fasta_one_hot_encoder</span> <span class=\"kn\">import</span> <span class=\"n\">FastaOneHotEncoder</span>\n\n<span class=\"n\">encoder</span> <span class=\"o\">=</span> <span class=\"n\">FastaOneHotEncoder</span><span class=\"p\">(</span>\n    <span class=\"n\">nucleotides</span> <span class=\"o\">=</span> <span class=\"s2\">\"acgt\"</span><span class=\"p\">,</span>\n    <span class=\"n\">kmers_length</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"n\">lower</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">sparse</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">handle_unknown</span><span class=\"o\">=</span><span class=\"s2\">\"ignore\"</span>\n<span class=\"p\">)</span>\n<span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_data/my_test_fasta.fa\"</span>\n<span class=\"n\">encoder</span><span class=\"o\">.</span><span class=\"n\">transform_to_df</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_csv</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"my_result.csv\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Obtained results should look like:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>\u00a0</th>\n<th>aa</th>\n<th>ac</th>\n<th>ag</th>\n<th>at</th>\n<th>ca</th>\n<th>cc</th>\n<th>cg</th>\n<th>ct</th>\n<th>ga</th>\n<th>gc</th>\n<th>gg</th>\n<th>gt</th>\n<th>ta</th>\n<th>tc</th>\n<th>tg</th>\n<th>tt</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr><td>1</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5349503, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0e05beb58b6564ac83aed6e0f534db48", "sha256": "df52780e763dadc267fc302526d9ab55c6310c67719ba74d83028e568dcc3687"}, "downloads": -1, "filename": "fasta_one_hot_encoder-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0e05beb58b6564ac83aed6e0f534db48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3583, "upload_time": "2018-12-18T14:06:23", "upload_time_iso_8601": "2018-12-18T14:06:23.443224Z", "url": "https://files.pythonhosted.org/packages/13/79/adda132c4982f24dedcc0a8413757cb93f097e71ce99dbf07ab1e7c7b992/fasta_one_hot_encoder-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "eb552be222a7f0c9474055c04c473847", "sha256": "2a81befcf100a746a18838d49901951a2c718b9975ca5184908d0c34068afccc"}, "downloads": -1, "filename": "fasta_one_hot_encoder-1.1.0.tar.gz", "has_sig": false, "md5_digest": "eb552be222a7f0c9474055c04c473847", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4441, "upload_time": "2019-01-07T11:22:18", "upload_time_iso_8601": "2019-01-07T11:22:18.441858Z", "url": "https://files.pythonhosted.org/packages/5c/b8/f15ad9e8ce401c2a09afad1c657656563cbc455153baacb371327591afc9/fasta_one_hot_encoder-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "7d8bda57f375fa1305c195821f71d94a", "sha256": "546bd1c5347d1c1e969665c6d2191c9f874e0a88d9d8fbf5147ea27197923d53"}, "downloads": -1, "filename": "fasta_one_hot_encoder-1.2.0.tar.gz", "has_sig": false, "md5_digest": "7d8bda57f375fa1305c195821f71d94a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4411, "upload_time": "2019-01-08T07:52:47", "upload_time_iso_8601": "2019-01-08T07:52:47.818213Z", "url": "https://files.pythonhosted.org/packages/a0/ef/f1066ade9f807f5d83db3fc4e7a5dba959209f2718e373f64c45d37d813a/fasta_one_hot_encoder-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "f71b4e11282ca792727d82b4e0c28c13", "sha256": "23ef48ab39d93a597a0a3f39efd31e326c87ba1fa896bc221f6249c55d9a6ceb"}, "downloads": -1, "filename": "fasta_one_hot_encoder-1.2.1.tar.gz", "has_sig": false, "md5_digest": "f71b4e11282ca792727d82b4e0c28c13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4417, "upload_time": "2019-01-08T10:59:37", "upload_time_iso_8601": "2019-01-08T10:59:37.549993Z", "url": "https://files.pythonhosted.org/packages/77/c6/e79e6857e8c106dd52257b0136ce1672dd2a622a02b704c7b024ed5a5a07/fasta_one_hot_encoder-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "74c4ddf773e95d1ce2bbf3d8839a08e5", "sha256": "2e0b8f4f999a1905495bd4f762e99b9c94ca0fdc909f5696464d38967261ff3a"}, "downloads": -1, "filename": "fasta_one_hot_encoder-1.2.2.tar.gz", "has_sig": false, "md5_digest": "74c4ddf773e95d1ce2bbf3d8839a08e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4419, "upload_time": "2019-06-02T18:15:28", "upload_time_iso_8601": "2019-06-02T18:15:28.652808Z", "url": "https://files.pythonhosted.org/packages/f3/6c/0b92fc3d507f55b57d1afa520ca6f450bf23de97f258a5312725461adcd3/fasta_one_hot_encoder-1.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "74c4ddf773e95d1ce2bbf3d8839a08e5", "sha256": "2e0b8f4f999a1905495bd4f762e99b9c94ca0fdc909f5696464d38967261ff3a"}, "downloads": -1, "filename": "fasta_one_hot_encoder-1.2.2.tar.gz", "has_sig": false, "md5_digest": "74c4ddf773e95d1ce2bbf3d8839a08e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4419, "upload_time": "2019-06-02T18:15:28", "upload_time_iso_8601": "2019-06-02T18:15:28.652808Z", "url": "https://files.pythonhosted.org/packages/f3/6c/0b92fc3d507f55b57d1afa520ca6f450bf23de97f258a5312725461adcd3/fasta_one_hot_encoder-1.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:40 2020"}