{"info": {"author": "Microsoft Corporation", "author_email": "python@microsoft.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Win32 (MS Windows)", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: Microsoft :: Windows", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3 :: Only", "Topic :: Multimedia :: Sound/Audio :: Capture/Recording", "Topic :: Multimedia :: Sound/Audio :: Players", "Topic :: Multimedia :: Sound/Audio :: Speech", "Topic :: Text Processing :: Linguistic"], "description": "projectoxford\n=============\n\nPython client library for `Project Oxford <https://projectoxford.ai/>`__ APIs.\n\nMicrosoft Project Oxford is a collection of artificial intelligence tools made available as online services. This library provides easy use of the Project Oxford APIs from Python.\n\nCurrently only the speech recognition, synthesis and `LUIS <https://luis.ai/>`__ APIs are implemented.\n\nIf you were using the previous version of this library, which only provided the vision APIs, install ``projectoxford<=0.2`` to continue to use that version.\n\nInstallation\n------------\n\nTo install, use pip:\n\n.. code:: shell\n\n    pip install projectoxford\n\nThis library is in an early stage of development. We strongly recommend pinning all references to the specific version you are using.\n\nGetting Started\n---------------\n\nTo use text to speech or speech recognition, you'll need to `obtain a subscription key <https://projectoxford.ai/speech>`__. \n\n.. code:: python\n\n    from projectoxford.speech import SpeechClient\n    sc = SpeechClient(\"YOUR-KEY-GOES-HERE\", gender='Male', locale='en-US')\n\nYou can use ``sc.say_to_wav`` to create a wave file containing synthesized speech, or ``sc.say`` to immediately play the speech.\n\n.. code:: python\n\n    data = sc.say_to_wav(\"Hello. I have been written to a file.\", filename=\"test.wav\")\n    sc.say(\"I am being read out loud, right now.\")\n\nYou can use ``sc.recognize`` to convert speech in a wave file into text, or without providing a file to record up to 30 seconds from the user's default microphone.\n\nIf the response indicates that it does not have high confidence in the result, a ``LowConfidenceError`` is raised. ``args[0]`` on the error contains the best guess at the text. If no result can be determined at all, ``ValueError`` is raised.\n\nThe ``recognize_raw`` method returns the JSON response from the service, which contains more information than is available from ``recognize``.\n\n.. code:: python\n\n    from projectoxford.speech import LowConfidenceError\n    text = sc.recognize('some_speech.wav')\n    \n    try:\n        text = sc.recognize()\n    except LowConfidenceError as err:\n        text = err.args[0]\n    \n    json_data = sc.recognize_raw()\n\nFunctions ``sc.print`` and ``sc.input`` can be used to override the builtin ``print`` and ``input`` functions to easily convert existing code.\n\n.. code:: python\n\n    print = sc.print\n    input = sc.input\n    \n    print(\"Welcome to my application.\")\n    name = input(\"What is your name?\")\n\nAudio playback and recording is performed by the ``projectoxford.audio`` module. Currently, only Windows is supported, and the user's default device is always used.\n\nBy default, ``record`` waits for some sound to be heard, then records until one second of silence. Use the `quiet_threshold` argument to adjust sensitivity, and the `get_quiet_threshold` function can to obtain this value by recording a short period of silence.\n\nThe ``play`` function takes a filename or the raw contents of a wave file and plays the entire sound before returning.\n\n.. code:: python\n\n    from projectoxford.audio import play, record\n    wave_file_contents = record()\n    play(wave_file_contents)\n    \n    # Record for 5 seconds\n    data = record(seconds=5, quiet_seconds=0, wait_for_sound=False)\n\nUse ``help(record)`` to review other arguments.\n\nContributing\n------------\n\nOver time we hope to add the full range of Project Oxford APIs to this library. Contributions are welcome.\n\nLicence\n-------\n\nThis Project Oxford client library is distributed under the MIT license. See LICENSE for full details.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/zooba/projectoxford", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "projectoxford", "package_url": "https://pypi.org/project/projectoxford/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/projectoxford/", "project_urls": {"Homepage": "http://github.com/zooba/projectoxford"}, "release_url": "https://pypi.org/project/projectoxford/0.3.1/", "requires_dist": null, "requires_python": "", "summary": "Python module for using Project Oxford APIs", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python client library for <a href=\"https://projectoxford.ai/\" rel=\"nofollow\">Project Oxford</a> APIs.</p>\n<p>Microsoft Project Oxford is a collection of artificial intelligence tools made available as online services. This library provides easy use of the Project Oxford APIs from Python.</p>\n<p>Currently only the speech recognition, synthesis and <a href=\"https://luis.ai/\" rel=\"nofollow\">LUIS</a> APIs are implemented.</p>\n<p>If you were using the previous version of this library, which only provided the vision APIs, install <tt><span class=\"pre\">projectoxford&lt;=0.2</span></tt> to continue to use that version.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install, use pip:</p>\n<pre>pip install projectoxford\n</pre>\n<p>This library is in an early stage of development. We strongly recommend pinning all references to the specific version you are using.</p>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>To use text to speech or speech recognition, you\u2019ll need to <a href=\"https://projectoxford.ai/speech\" rel=\"nofollow\">obtain a subscription key</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">projectoxford.speech</span> <span class=\"kn\">import</span> <span class=\"n\">SpeechClient</span>\n<span class=\"n\">sc</span> <span class=\"o\">=</span> <span class=\"n\">SpeechClient</span><span class=\"p\">(</span><span class=\"s2\">\"YOUR-KEY-GOES-HERE\"</span><span class=\"p\">,</span> <span class=\"n\">gender</span><span class=\"o\">=</span><span class=\"s1\">'Male'</span><span class=\"p\">,</span> <span class=\"n\">locale</span><span class=\"o\">=</span><span class=\"s1\">'en-US'</span><span class=\"p\">)</span>\n</pre>\n<p>You can use <tt>sc.say_to_wav</tt> to create a wave file containing synthesized speech, or <tt>sc.say</tt> to immediately play the speech.</p>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">say_to_wav</span><span class=\"p\">(</span><span class=\"s2\">\"Hello. I have been written to a file.\"</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s2\">\"test.wav\"</span><span class=\"p\">)</span>\n<span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">say</span><span class=\"p\">(</span><span class=\"s2\">\"I am being read out loud, right now.\"</span><span class=\"p\">)</span>\n</pre>\n<p>You can use <tt>sc.recognize</tt> to convert speech in a wave file into text, or without providing a file to record up to 30 seconds from the user\u2019s default microphone.</p>\n<p>If the response indicates that it does not have high confidence in the result, a <tt>LowConfidenceError</tt> is raised. <tt>args[0]</tt> on the error contains the best guess at the text. If no result can be determined at all, <tt>ValueError</tt> is raised.</p>\n<p>The <tt>recognize_raw</tt> method returns the JSON response from the service, which contains more information than is available from <tt>recognize</tt>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">projectoxford.speech</span> <span class=\"kn\">import</span> <span class=\"n\">LowConfidenceError</span>\n<span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">recognize</span><span class=\"p\">(</span><span class=\"s1\">'some_speech.wav'</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">recognize</span><span class=\"p\">()</span>\n<span class=\"k\">except</span> <span class=\"n\">LowConfidenceError</span> <span class=\"k\">as</span> <span class=\"n\">err</span><span class=\"p\">:</span>\n    <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">err</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"n\">json_data</span> <span class=\"o\">=</span> <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">recognize_raw</span><span class=\"p\">()</span>\n</pre>\n<p>Functions <tt>sc.print</tt> and <tt>sc.input</tt> can be used to override the builtin <tt>print</tt> and <tt>input</tt> functions to easily convert existing code.</p>\n<pre><span class=\"nb\">print</span> <span class=\"o\">=</span> <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">print</span>\n<span class=\"nb\">input</span> <span class=\"o\">=</span> <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">input</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Welcome to my application.\"</span><span class=\"p\">)</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"What is your name?\"</span><span class=\"p\">)</span>\n</pre>\n<p>Audio playback and recording is performed by the <tt>projectoxford.audio</tt> module. Currently, only Windows is supported, and the user\u2019s default device is always used.</p>\n<p>By default, <tt>record</tt> waits for some sound to be heard, then records until one second of silence. Use the <cite>quiet_threshold</cite> argument to adjust sensitivity, and the <cite>get_quiet_threshold</cite> function can to obtain this value by recording a short period of silence.</p>\n<p>The <tt>play</tt> function takes a filename or the raw contents of a wave file and plays the entire sound before returning.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">projectoxford.audio</span> <span class=\"kn\">import</span> <span class=\"n\">play</span><span class=\"p\">,</span> <span class=\"n\">record</span>\n<span class=\"n\">wave_file_contents</span> <span class=\"o\">=</span> <span class=\"n\">record</span><span class=\"p\">()</span>\n<span class=\"n\">play</span><span class=\"p\">(</span><span class=\"n\">wave_file_contents</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Record for 5 seconds</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">seconds</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">quiet_seconds</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">wait_for_sound</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>Use <tt>help(record)</tt> to review other arguments.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Over time we hope to add the full range of Project Oxford APIs to this library. Contributions are welcome.</p>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p>This Project Oxford client library is distributed under the MIT license. See LICENSE for full details.</p>\n</div>\n\n          </div>"}, "last_serial": 1930107, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "ccc4a3cbea95beca86131c53b059a5f3", "sha256": "a25b1bbf3ccbb1e9ac3e36284b5f8ae75f9d238e2feb80aca42a00763e3aca69"}, "downloads": -1, "filename": "projectoxford-0.1.1.zip", "has_sig": false, "md5_digest": "ccc4a3cbea95beca86131c53b059a5f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 522187, "upload_time": "2015-10-07T23:34:12", "upload_time_iso_8601": "2015-10-07T23:34:12.994376Z", "url": "https://files.pythonhosted.org/packages/6c/41/cfb10543c7ac8ba4138e16470173f4d44c5906d2fcc3977831a291326159/projectoxford-0.1.1.zip", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c6b63f2db4b88869c9e68bbe8dd1389a", "sha256": "cc135022282a832000c471cf4a4c4ba8c6bcff0b253d639ee991449cbb2f5e59"}, "downloads": -1, "filename": "projectoxford-0.1.2.zip", "has_sig": false, "md5_digest": "c6b63f2db4b88869c9e68bbe8dd1389a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 528782, "upload_time": "2015-10-08T23:58:46", "upload_time_iso_8601": "2015-10-08T23:58:46.970332Z", "url": "https://files.pythonhosted.org/packages/f9/d1/bfa46ba4be7496425326c6f46e32cec72cb40fb7de587b6dd892098daff7/projectoxford-0.1.2.zip", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "d1d3b33656b35120119a189149ebc518", "sha256": "7d327b49f4b5feaaba7b5966ac9b094bc585fce4bdfbd4600fc007c7ad6a2f7c"}, "downloads": -1, "filename": "projectoxford-0.1.3.zip", "has_sig": false, "md5_digest": "d1d3b33656b35120119a189149ebc518", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 528917, "upload_time": "2015-10-09T23:26:17", "upload_time_iso_8601": "2015-10-09T23:26:17.923099Z", "url": "https://files.pythonhosted.org/packages/6f/69/221102269128ce13ffe76b8d47972b58dd1a944abaa1fd2a6b4bd1ec34ad/projectoxford-0.1.3.zip", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "6b9d879761d84b73d3c934d2f7dd0666", "sha256": "356ba9bd9061776e556f88deca4cf085a767e1f999cbb8a89aee17961e2b312e"}, "downloads": -1, "filename": "projectoxford-0.1.4.tar.gz", "has_sig": false, "md5_digest": "6b9d879761d84b73d3c934d2f7dd0666", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 512781, "upload_time": "2015-11-26T19:01:03", "upload_time_iso_8601": "2015-11-26T19:01:03.629269Z", "url": "https://files.pythonhosted.org/packages/79/6e/ced09a8b6a17ded9e21e0e1588ad83f9dc6bd242fa08244b2a14f1e55997/projectoxford-0.1.4.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "6cf62678f0be1a9480405c825b068cca", "sha256": "5e152c8df3266850688b5916252593f07e1d771d2d7c4b8bedc314f1aa27f072"}, "downloads": -1, "filename": "projectoxford-0.2.0.zip", "has_sig": false, "md5_digest": "6cf62678f0be1a9480405c825b068cca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 524948, "upload_time": "2015-12-14T21:39:56", "upload_time_iso_8601": "2015-12-14T21:39:56.903723Z", "url": "https://files.pythonhosted.org/packages/74/25/2eef258cfb6d0891670e8f4999b2ec7e4197194326d74f1395d4dc5ac27a/projectoxford-0.2.0.zip", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b5362e82b7ab30a146e749784e887a69", "sha256": "08c829796d4fab6aa1ee759b684b901cfadabbb093f4b37015785366214266e8"}, "downloads": -1, "filename": "projectoxford-0.3.0.zip", "has_sig": false, "md5_digest": "b5362e82b7ab30a146e749784e887a69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22063, "upload_time": "2016-01-28T22:43:51", "upload_time_iso_8601": "2016-01-28T22:43:51.295088Z", "url": "https://files.pythonhosted.org/packages/c9/2c/3d96e67b871dbcf9e494a6b3513e0d28c193891e30280244f903b8b38dc0/projectoxford-0.3.0.zip", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "9dd92d7382ba232faf8c218ad309cae6", "sha256": "7a227a128a6ed25f752da2e18ea0f35015e92cf2eead6309da1925e09b728b88"}, "downloads": -1, "filename": "projectoxford-0.3.1.zip", "has_sig": false, "md5_digest": "9dd92d7382ba232faf8c218ad309cae6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22195, "upload_time": "2016-01-29T21:28:06", "upload_time_iso_8601": "2016-01-29T21:28:06.796208Z", "url": "https://files.pythonhosted.org/packages/66/04/355aeb27a3b18679df6d975f5ca1299666b3aaba0bc41d23eaa034b9db39/projectoxford-0.3.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9dd92d7382ba232faf8c218ad309cae6", "sha256": "7a227a128a6ed25f752da2e18ea0f35015e92cf2eead6309da1925e09b728b88"}, "downloads": -1, "filename": "projectoxford-0.3.1.zip", "has_sig": false, "md5_digest": "9dd92d7382ba232faf8c218ad309cae6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22195, "upload_time": "2016-01-29T21:28:06", "upload_time_iso_8601": "2016-01-29T21:28:06.796208Z", "url": "https://files.pythonhosted.org/packages/66/04/355aeb27a3b18679df6d975f5ca1299666b3aaba0bc41d23eaa034b9db39/projectoxford-0.3.1.zip", "yanked": false}], "timestamp": "Fri May  8 03:17:17 2020"}