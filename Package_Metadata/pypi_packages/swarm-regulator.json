{"info": {"author": "Paris Kasidiaris", "author_email": "paris@sourcelair.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8"], "description": "# Swarm Regulator\n\nRegulate your Docker Swarm cluster, according to YOUR rules. Use `async` Python functions to enforce rules like service placement and resource management on your Docker Swarm.\n\n## Concepts\n\n### Consumer\n\nEach regulator is based on top of a single consumer. The consumer responds to Docker events and instruments all components of the regulator.\n\n### Conditions\n\nA regulator needs to know when to apply its rules. This is what conditions are for. Conditions help us know when should a rule be applied on a Docker Swarm entity. In brief, a condition is a Python function (or callable) that accepts a Docker Swarm entity as a single argument and returns `True` when the rule should run, and `False` when it shouldn't.\n\n**\ud83d\ude4c Heads up**: In order to avoid infinite loops, a confition that initially returns `True`, should return `False`, when it gets the regulated entity as an argument. If this is not the case, the rule is being ignored.\n\n### Rules\n\nRules simply do the job. Rules are **`async`** Python functions that accept a Docker Swarm entity as an argument and return it modified, so it complies with the business logic we intend to enforce on our Docker Swarm cluster.\n\n## Requirements\n\n- Python 3.8+\n- Docker Swarm Mode cluster\n\n## Install\n\n### pipenv\n\n```\npipenv install swarm-regulator\n```\n\n### poetry\n\n```\npoetry add swarm-regulator\n```\n\n### pip\n\n```\npip install swarm-regulator\n```\n\n## Run\n\n1. Create a Python file (e.g. `regulator.py`)\n2. Import the `consumer` from the `swarm_regulator` package\n3. Register your rules that will run according to given conditions\n4. Run your regulator\n\n## Example\n\n### `regulator.py`\n```py\nfrom swarm_regulator import consumer\n\n\ndef _extract_constraints(service_spec):\n    return service_spec[\"TaskTemplate\"][\"Placement\"].get(\"Constraints\", [])\n\n\ndef has_not_constraints(service_spec) -> bool:\n    constraints = _extract_constraints(service_spec)\n    return not len(constraints)\n\n\nasync def do_not_schedule_on_gpu(service_spec):\n    constraints = _extract_constraints(service_spec) + [\"node.labels.gpu!=true\"]\n    service_spec[\"TaskTemplate\"][\"Placement\"][\"Constraints\"] = constraints\n    return service_spec\n\n\nconsumer.register_rule(\n    \"service\", has_not_constraints, do_not_schedule_on_gpu,\n)\n\nconsumer.run()\n```\n\n### Run\n\n```console\npython regulator.py\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "swarm-regulator", "package_url": "https://pypi.org/project/swarm-regulator/", "platform": "", "project_url": "https://pypi.org/project/swarm-regulator/", "project_urls": null, "release_url": "https://pypi.org/project/swarm-regulator/0.2.3/", "requires_dist": ["aiodocker (>=0.17.0,<0.18.0)", "pytest-asyncio (>=0.10.0,<0.11.0)"], "requires_python": ">=3.8,<4.0", "summary": "The regulator of your Docker Swarm cluster", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Swarm Regulator</h1>\n<p>Regulate your Docker Swarm cluster, according to YOUR rules. Use <code>async</code> Python functions to enforce rules like service placement and resource management on your Docker Swarm.</p>\n<h2>Concepts</h2>\n<h3>Consumer</h3>\n<p>Each regulator is based on top of a single consumer. The consumer responds to Docker events and instruments all components of the regulator.</p>\n<h3>Conditions</h3>\n<p>A regulator needs to know when to apply its rules. This is what conditions are for. Conditions help us know when should a rule be applied on a Docker Swarm entity. In brief, a condition is a Python function (or callable) that accepts a Docker Swarm entity as a single argument and returns <code>True</code> when the rule should run, and <code>False</code> when it shouldn't.</p>\n<p><strong>\ud83d\ude4c Heads up</strong>: In order to avoid infinite loops, a confition that initially returns <code>True</code>, should return <code>False</code>, when it gets the regulated entity as an argument. If this is not the case, the rule is being ignored.</p>\n<h3>Rules</h3>\n<p>Rules simply do the job. Rules are <strong><code>async</code></strong> Python functions that accept a Docker Swarm entity as an argument and return it modified, so it complies with the business logic we intend to enforce on our Docker Swarm cluster.</p>\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.8+</li>\n<li>Docker Swarm Mode cluster</li>\n</ul>\n<h2>Install</h2>\n<h3>pipenv</h3>\n<pre><code>pipenv install swarm-regulator\n</code></pre>\n<h3>poetry</h3>\n<pre><code>poetry add swarm-regulator\n</code></pre>\n<h3>pip</h3>\n<pre><code>pip install swarm-regulator\n</code></pre>\n<h2>Run</h2>\n<ol>\n<li>Create a Python file (e.g. <code>regulator.py</code>)</li>\n<li>Import the <code>consumer</code> from the <code>swarm_regulator</code> package</li>\n<li>Register your rules that will run according to given conditions</li>\n<li>Run your regulator</li>\n</ol>\n<h2>Example</h2>\n<h3><code>regulator.py</code></h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">swarm_regulator</span> <span class=\"kn\">import</span> <span class=\"n\">consumer</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_extract_constraints</span><span class=\"p\">(</span><span class=\"n\">service_spec</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">service_spec</span><span class=\"p\">[</span><span class=\"s2\">\"TaskTemplate\"</span><span class=\"p\">][</span><span class=\"s2\">\"Placement\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"Constraints\"</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">has_not_constraints</span><span class=\"p\">(</span><span class=\"n\">service_spec</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n    <span class=\"n\">constraints</span> <span class=\"o\">=</span> <span class=\"n\">_extract_constraints</span><span class=\"p\">(</span><span class=\"n\">service_spec</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"ow\">not</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">constraints</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">do_not_schedule_on_gpu</span><span class=\"p\">(</span><span class=\"n\">service_spec</span><span class=\"p\">):</span>\n    <span class=\"n\">constraints</span> <span class=\"o\">=</span> <span class=\"n\">_extract_constraints</span><span class=\"p\">(</span><span class=\"n\">service_spec</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"s2\">\"node.labels.gpu!=true\"</span><span class=\"p\">]</span>\n    <span class=\"n\">service_spec</span><span class=\"p\">[</span><span class=\"s2\">\"TaskTemplate\"</span><span class=\"p\">][</span><span class=\"s2\">\"Placement\"</span><span class=\"p\">][</span><span class=\"s2\">\"Constraints\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">constraints</span>\n    <span class=\"k\">return</span> <span class=\"n\">service_spec</span>\n\n\n<span class=\"n\">consumer</span><span class=\"o\">.</span><span class=\"n\">register_rule</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"service\"</span><span class=\"p\">,</span> <span class=\"n\">has_not_constraints</span><span class=\"p\">,</span> <span class=\"n\">do_not_schedule_on_gpu</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">consumer</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h3>Run</h3>\n<pre><span class=\"go\">python regulator.py</span>\n</pre>\n\n          </div>"}, "last_serial": 6452324, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "274c203249e65200c6844e69acac687c", "sha256": "7acf470cebe911447a248632b8c691450eaa53b19a6d4ef351bf2fc4c5a579c2"}, "downloads": -1, "filename": "swarm_regulator-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "274c203249e65200c6844e69acac687c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5379, "upload_time": "2020-01-14T11:10:04", "upload_time_iso_8601": "2020-01-14T11:10:04.960858Z", "url": "https://files.pythonhosted.org/packages/4b/e3/25b04b98d3df3e43135f54293d2f8444a4619bcc16c880e4c63b1c975023/swarm_regulator-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "28cf78aa0876eb1de43f4231540f8576", "sha256": "d73d954487d09344532b09b0014a62cc551f01df2250aed8155ba9b6c16ccf72"}, "downloads": -1, "filename": "swarm-regulator-0.1.0.tar.gz", "has_sig": false, "md5_digest": "28cf78aa0876eb1de43f4231540f8576", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 3737, "upload_time": "2020-01-14T11:10:02", "upload_time_iso_8601": "2020-01-14T11:10:02.503508Z", "url": "https://files.pythonhosted.org/packages/04/31/11a87644520ad774b5778fbcf39592dccd72dee656c3bb7f93d4d73ed348/swarm-regulator-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8849538463653e4d9be46e7c892a3c67", "sha256": "1f3dbdb1825734d938313aa9e1fc81b42e24ba6b133cdf408ad77f37c1feb55d"}, "downloads": -1, "filename": "swarm_regulator-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8849538463653e4d9be46e7c892a3c67", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5728, "upload_time": "2020-01-14T11:14:41", "upload_time_iso_8601": "2020-01-14T11:14:41.242777Z", "url": "https://files.pythonhosted.org/packages/7c/3d/1ac00aee0dd7258d607dbbd6a1937542863712afce436745a335e738940d/swarm_regulator-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16c30b15f7fd620121ef2d16ef04aeab", "sha256": "062bffb5acefebac55fc65d9efe7d9314ec49c4471c4e78254480ab8c7a254d5"}, "downloads": -1, "filename": "swarm-regulator-0.1.1.tar.gz", "has_sig": false, "md5_digest": "16c30b15f7fd620121ef2d16ef04aeab", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 4293, "upload_time": "2020-01-14T11:14:39", "upload_time_iso_8601": "2020-01-14T11:14:39.117425Z", "url": "https://files.pythonhosted.org/packages/69/d3/145dc07ab6bacd64baf165007665da39316ebcb00420ad7846d85d45aa4b/swarm-regulator-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8588f1d81ceae186e9099aaa28d7f58b", "sha256": "146106d14a1507f046678fc646de5a28bd161b9a07d85e447d7f3fbde976bd9c"}, "downloads": -1, "filename": "swarm_regulator-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8588f1d81ceae186e9099aaa28d7f58b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 6321, "upload_time": "2020-01-14T11:33:50", "upload_time_iso_8601": "2020-01-14T11:33:50.858862Z", "url": "https://files.pythonhosted.org/packages/aa/c9/9932422a2e5c351690d1debb3229ac8621906cf1464450e74778a992bb4c/swarm_regulator-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b9905166c3cb5b2de990af606594e32", "sha256": "8b017324e2189dc8b23782d837c56ae26b78f18b4bf38967f5d68f279bd2ac59"}, "downloads": -1, "filename": "swarm-regulator-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5b9905166c3cb5b2de990af606594e32", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 5143, "upload_time": "2020-01-14T11:33:49", "upload_time_iso_8601": "2020-01-14T11:33:49.457927Z", "url": "https://files.pythonhosted.org/packages/b3/c3/ef7895040157e1a4f1008c92c3d06c087eb75bae6477b9ae726ef9146d5d/swarm-regulator-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "3fa5b4ca95c33f22bebf2e43c2392d6a", "sha256": "f9f6fdb0f04cbed268e7859feb035a83905387e9e5e02561f330c3347586f491"}, "downloads": -1, "filename": "swarm_regulator-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3fa5b4ca95c33f22bebf2e43c2392d6a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 6316, "upload_time": "2020-01-14T15:09:21", "upload_time_iso_8601": "2020-01-14T15:09:21.343219Z", "url": "https://files.pythonhosted.org/packages/1c/90/cd81a47b3d709c643eb68da8f9e13bb324d1e0001d725f92d5f3c601ef8a/swarm_regulator-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d5065eb7a56c81241d3790e7e17adfa", "sha256": "e13dc876672a36e47db88e0252fee5831ccdf2f99e064c3a8b5a2e3508106e30"}, "downloads": -1, "filename": "swarm-regulator-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9d5065eb7a56c81241d3790e7e17adfa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 5142, "upload_time": "2020-01-14T15:09:19", "upload_time_iso_8601": "2020-01-14T15:09:19.769400Z", "url": "https://files.pythonhosted.org/packages/e7/09/3142d04fa03da8d0226e03fabd3db69aebccabcf4ee892ad4c38129e3480/swarm-regulator-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "78dada5a22dfc61071f9a9141f325b03", "sha256": "b388d19ca8d5d406101137ecda87dd2b063b133abe7832cf96123374bf7bb7db"}, "downloads": -1, "filename": "swarm_regulator-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "78dada5a22dfc61071f9a9141f325b03", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 6359, "upload_time": "2020-01-14T15:18:58", "upload_time_iso_8601": "2020-01-14T15:18:58.213835Z", "url": "https://files.pythonhosted.org/packages/d6/2f/8204fc30f5eed09f7e8f98f2b934a308dbe94f309057cdd13f6fc445e463/swarm_regulator-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a9e4751cb25dae7c6c0cec5568c50e5", "sha256": "b0fe07f8bac2cb3d38c5810a769ac4c162991d2c1ac187207276a007bd4c862d"}, "downloads": -1, "filename": "swarm-regulator-0.2.2.tar.gz", "has_sig": false, "md5_digest": "6a9e4751cb25dae7c6c0cec5568c50e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 5177, "upload_time": "2020-01-14T15:18:56", "upload_time_iso_8601": "2020-01-14T15:18:56.874932Z", "url": "https://files.pythonhosted.org/packages/78/8a/aeda7abcd838db2252300e18cc63cf3039f84a1b9bf5dce4096c6ac64bc0/swarm-regulator-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "7b777a2e94afe1b28aa0b62f7139940a", "sha256": "bace59cdf88bf3135ce769c8d41216bf7ef0c275edb7a723346f22de629bce97"}, "downloads": -1, "filename": "swarm_regulator-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7b777a2e94afe1b28aa0b62f7139940a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 6359, "upload_time": "2020-01-14T15:40:50", "upload_time_iso_8601": "2020-01-14T15:40:50.904669Z", "url": "https://files.pythonhosted.org/packages/00/1d/aa454e62059b5b3347b6333d473cb0a14dbcbc724b85ee9147380c602286/swarm_regulator-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6c5dc1dee75d855ed1c8f7c334fc468", "sha256": "4356ce01bfd7b36e99f90aef1a631222808a44f0fbe5bef69ca3b402d55f35e6"}, "downloads": -1, "filename": "swarm-regulator-0.2.3.tar.gz", "has_sig": false, "md5_digest": "f6c5dc1dee75d855ed1c8f7c334fc468", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 5181, "upload_time": "2020-01-14T15:40:49", "upload_time_iso_8601": "2020-01-14T15:40:49.546780Z", "url": "https://files.pythonhosted.org/packages/76/74/c351a09a1e6612fbb43c0a1848720230d9f649272b28625dbf888ac0438c/swarm-regulator-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7b777a2e94afe1b28aa0b62f7139940a", "sha256": "bace59cdf88bf3135ce769c8d41216bf7ef0c275edb7a723346f22de629bce97"}, "downloads": -1, "filename": "swarm_regulator-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7b777a2e94afe1b28aa0b62f7139940a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 6359, "upload_time": "2020-01-14T15:40:50", "upload_time_iso_8601": "2020-01-14T15:40:50.904669Z", "url": "https://files.pythonhosted.org/packages/00/1d/aa454e62059b5b3347b6333d473cb0a14dbcbc724b85ee9147380c602286/swarm_regulator-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6c5dc1dee75d855ed1c8f7c334fc468", "sha256": "4356ce01bfd7b36e99f90aef1a631222808a44f0fbe5bef69ca3b402d55f35e6"}, "downloads": -1, "filename": "swarm-regulator-0.2.3.tar.gz", "has_sig": false, "md5_digest": "f6c5dc1dee75d855ed1c8f7c334fc468", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 5181, "upload_time": "2020-01-14T15:40:49", "upload_time_iso_8601": "2020-01-14T15:40:49.546780Z", "url": "https://files.pythonhosted.org/packages/76/74/c351a09a1e6612fbb43c0a1848720230d9f649272b28625dbf888ac0438c/swarm-regulator-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:40 2020"}