{"info": {"author": "The Dicom2cloud Team", "author_email": "steffen.bollmann@cai.uq.edu.au", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Healthcare Industry", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Medical Science Apps."], "description": "Clinic2Cloud - A platform independent graphical user interface for anonymizing and uploading clinical brain scans to an image processing cloud instance\n\nCurrent image processing techniques have reached a high level of sophistication and allow the extraction of extensive information from medical imaging data. The problem is that most of these modern post processing techniques are not applied in a clinical setting, because the software developed by scientists is difficult to use, often does not run on operating systems used by clinicians, and requires extensive hardware resources. The integration of new post processing techniques by vendors often takes many years, if the vendors take the risk at all to implement a new technique. One solution to bring modern image processing into the clinic would be to take the medical data outside of the clinic and utilize a powerful cloud instance where all tools are installed and the clinician can upload the data. The problem however is, that medical data contains sensitive information that cannot be easily removed, such as facial features in magnetic resonance imaging data of the brain.\n\nModern image processing algorithms could potentially have a high clinical impact and could help diagnose a variety of diseases, like Multiple sclerosis, Parkinson, and other neurodegenerative diseases. Unfortunately the use of new exciting techniques is currently limited to a few specialized centers where expertise exists to run these algorithms. This severely limits the translation of research into clinics and it often takes years until vendors implement new processing techniques into their clinical platforms.\n\nThe ideal solution would be a platform-independent (win, mac, linux) software/browser plugin that is easy to use, reads standard DICOM data, anonymizes the data and uploads it to a cloud instance and starts the processing. Anonymization of brain scans needs to remove facial features so that patients cannot be re-identified in a 3D rendering of their head. However, it is not possible to simply cut off the area where the face is, as this would affect registration tools by creating artificial edges.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CAIsr/dicom2cloud", "keywords": "image processing mri", "license": "BSD-2", "maintainer": "", "maintainer_email": "", "name": "dicom2cloud", "package_url": "https://pypi.org/project/dicom2cloud/", "platform": "", "project_url": "https://pypi.org/project/dicom2cloud/", "project_urls": {"Homepage": "https://github.com/CAIsr/dicom2cloud"}, "release_url": "https://pypi.org/project/dicom2cloud/0.9/", "requires_dist": null, "requires_python": "~=2.7", "summary": "Platform independent GUI for anonymizing/uploading brain scans to an image processing cloud instance", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Clinic2Cloud - A platform independent graphical user interface for anonymizing and uploading clinical brain scans to an image processing cloud instance</p>\n<p>Current image processing techniques have reached a high level of sophistication and allow the extraction of extensive information from medical imaging data. The problem is that most of these modern post processing techniques are not applied in a clinical setting, because the software developed by scientists is difficult to use, often does not run on operating systems used by clinicians, and requires extensive hardware resources. The integration of new post processing techniques by vendors often takes many years, if the vendors take the risk at all to implement a new technique. One solution to bring modern image processing into the clinic would be to take the medical data outside of the clinic and utilize a powerful cloud instance where all tools are installed and the clinician can upload the data. The problem however is, that medical data contains sensitive information that cannot be easily removed, such as facial features in magnetic resonance imaging data of the brain.</p>\n<p>Modern image processing algorithms could potentially have a high clinical impact and could help diagnose a variety of diseases, like Multiple sclerosis, Parkinson, and other neurodegenerative diseases. Unfortunately the use of new exciting techniques is currently limited to a few specialized centers where expertise exists to run these algorithms. This severely limits the translation of research into clinics and it often takes years until vendors implement new processing techniques into their clinical platforms.</p>\n<p>The ideal solution would be a platform-independent (win, mac, linux) software/browser plugin that is easy to use, reads standard DICOM data, anonymizes the data and uploads it to a cloud instance and starts the processing. Anonymization of brain scans needs to remove facial features so that patients cannot be re-identified in a 3D rendering of their head. However, it is not possible to simply cut off the area where the face is, as this would affect registration tools by creating artificial edges.</p>\n\n          </div>"}, "last_serial": 3314667, "releases": {"0.8": [{"comment_text": "", "digests": {"md5": "6593480d2f482118125a5ade3878a510", "sha256": "6f4f8b426c11bb625fcaa3d371183183cdfa97099ac6ab340a8b65c575fedab7"}, "downloads": -1, "filename": "dicom2cloud-0.8.tar.gz", "has_sig": false, "md5_digest": "6593480d2f482118125a5ade3878a510", "packagetype": "sdist", "python_version": "source", "requires_python": "~=2.7", "size": 16523, "upload_time": "2017-11-08T02:13:44", "upload_time_iso_8601": "2017-11-08T02:13:44.585577Z", "url": "https://files.pythonhosted.org/packages/ba/b8/97f454b6a9efc93333596be107e1bfdac83b910ebbf1b35d86ff074dcb7d/dicom2cloud-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "0e30b736c6d2254370564c58d5a0ca03", "sha256": "12fca500766612fe6b6ad3c1c67d5a825423485a7c12be9ca54536927424f105"}, "downloads": -1, "filename": "dicom2cloud-0.9.tar.gz", "has_sig": false, "md5_digest": "0e30b736c6d2254370564c58d5a0ca03", "packagetype": "sdist", "python_version": "source", "requires_python": "~=2.7", "size": 16515, "upload_time": "2017-11-08T02:20:09", "upload_time_iso_8601": "2017-11-08T02:20:09.475843Z", "url": "https://files.pythonhosted.org/packages/99/6f/ef3b82d6967ac10130414f633fb5b49909714e9f759cdaa8bf8b455a477c/dicom2cloud-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0e30b736c6d2254370564c58d5a0ca03", "sha256": "12fca500766612fe6b6ad3c1c67d5a825423485a7c12be9ca54536927424f105"}, "downloads": -1, "filename": "dicom2cloud-0.9.tar.gz", "has_sig": false, "md5_digest": "0e30b736c6d2254370564c58d5a0ca03", "packagetype": "sdist", "python_version": "source", "requires_python": "~=2.7", "size": 16515, "upload_time": "2017-11-08T02:20:09", "upload_time_iso_8601": "2017-11-08T02:20:09.475843Z", "url": "https://files.pythonhosted.org/packages/99/6f/ef3b82d6967ac10130414f633fb5b49909714e9f759cdaa8bf8b455a477c/dicom2cloud-0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:34 2020"}