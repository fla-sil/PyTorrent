{"info": {"author": "Kristoffer Sahlin", "author_email": "kxs624@psu.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "IsoCon\n========\n\nIsoCon is distributed as a python package supported on Linux / OSX with python v2.7, and version >=3.6 [![Build Status](https://travis-ci.org/ksahlin/IsoCon.svg?branch=master)](https://travis-ci.org/ksahlin/IsoCon)\n\n\nIsoCon is a tool for reconstructing highly similar sequences present in a dataset of from long noisy reads. Its original use case was transcripts from highly similar gene copies ([paper here](https://www.nature.com/articles/s41467-018-06910-x)), however the methodology extends to any dataset where sequences spans the region(s) of interest end-to-end. IsoCon use examples: \n\n* Deriving *finished transcripts* from *Iso-Seq* or ONT reads from *targeted* sequencing of gene families using primers. \n* Deriving consensus sequence from several passes of long noisy reads (e.g., pacbio polymerase reads to CCS or ONT Rolling Circle Amplification to Concatemeric Consensus (R2C2)).\n* Deriving viral strains from  reads (assuming the reads spans the viral sequence, e.g., as for HIV).\n* Deriving consensus ribosomal RNA.\n* Deriving consensus from any targeted amplicone based sequencing technique.\n\n\nSimplest usage is an input file of fastq or fasta containing reads. IsoCon can be run as follows\n\n```\nIsoCon pipeline -fl_reads <reads.fastq> -outfolder </path/to/output>\n```\n\nor \n\n```\nIsoCon pipeline -fl_reads <reads.fasta> -outfolder </path/to/output> --ccs </path/to/filename.ccs.bam>\n```\n\n\n\npredicted transcripts are found in file **/path/to/output/final_candidates.fa**. Reads that could not be corrected or clustered are found in /path/to/output/not_converged.fa. \n\n* Can IsoCon be run on nontargeted Iso-Seq datasets? [see here](https://github.com/ksahlin/IsoCon/issues/2). \n* How does my data set affect the runtime? [see here](https://github.com/ksahlin/IsoCon/issues/3) \n\nFor more instructions see below.\n\n\nTable of Contents\n=================\n\n  * [Table of Contents](#Table-of-Contents)\n  * [INSTALLATION](#INSTALLATION)\n    * [Using conda](#Using-conda)\n    * [Using pip](#Using-pip)\n    * [Downloading source from GitHub](#Downloading-source-from-GitHub)\n    * [Dependencies](#Dependencies)\n  * [USAGE](#USAGE)\n    * [Pipline](#Pipline)\n    * [Output](#Output)\n    * [get_candidates](#get_candidates)\n    * [stat_filter](#stat_filter)\n  * [CREDITS](#CREDITS)\n  * [LICENCE](#LICENCE)\n\n\nINSTALLATION\n----------------\n\n### Using conda\nConda is the preferred way to install IsoCon.\n\n1. Create and activate a new environment called IsoCon\n\n```\nconda create -n IsoCon python=3 pip \nconda activate IsoCon\n```\n\n2. Install IsoCon \n\n```\npip install IsoCon\n```\n\n3. You should now have 'IsoCon' installed; try it:\n\n```\nIsoCon --help\n```\n\nUpon start/login to your server/computer you need to activate the conda environment \"IsoCon\" to run IsoCon as:\n\n```\nconda activate IsoCon\n```\n\n\n### Using pip \n\n`pip` is pythons official package installer. This section assumes you have `python` (v2.7 or >=3.6) and a recent version of `pip` installed which should be included in most python versions. If you do not have `pip`, it can be easily installed [from here](https://pip.pypa.io/en/stable/installing/) and upgraded with `pip install --upgrade pip`. \n\nWith `python` and `pip` available, create a file `requirements.txt` with contents copied from [this file](https://github.com/ksahlin/IsoCon/blob/master/requirements.txt). Then, type in terminal \n\n```\npip install --requirement requirements.txt IsoCon\n```\n\nThis should install IsoCon. With proper installation of **IsoCon**, you should be able to issue the command `IsoCon pipeline` to view user instructions. You should also be able to run IsoCon on this [small dataset](https://github.com/ksahlin/IsoCon/tree/master/test/data). Simply download the test dataset and run:\n\n```\nIsoCon pipeline -fl_reads [path/simulated_pacbio_reads.fa] -outfolder [output path]\n```\n\n`pip` will install the dependencies automatically for you. IsoCon has been built with python 2.7, 3.4-3.6 on Linux systems using [Travis](https://travis-ci.org/). For customized installation of latest master branch, see below.\n\n### Downloading source from GitHub\n\n#### Dependencies\n\nMake sure the below listed dependencies are installed (installation links below). Versions in parenthesis are suggested as IsoCon has not been tested with earlier versions of these libraries. However, IsoCon may also work with earliear versions of these libaries.\n* [edlib](https://github.com/Martinsos/edlib \"edlib's Homepage\"), for installation see [link](https://github.com/Martinsos/edlib/tree/master/bindings/python#installation) (>= v1.1.2)\n* [networkx](https://networkx.github.io/) (>= v1.10)\n* [parasail](https://github.com/jeffdaily/parasail-python)\n* [pysam](http://pysam.readthedocs.io/en/latest/installation.html) (>= v0.11)\n\n\nWith these dependencies installed. Run\n\n```sh\ngit clone https://github.com/ksahlin/IsoCon.git\ncd IsoCon\n./IsoCon\n```\n\n\nUSAGE\n-------\n\nIsoCon's algorithm consists of two main phases; the error correction step and the statistical testing step. IsoCon can run these two steps in one go using `IsoCon pipeline`, or it can run only the correction or statistical test steps using `IsoCon get_candidates` and `IsoCon stat_filter` respectively. The preffered and most tested way is to use the entire pipeline `IsoCon pipeline`, but the other two settings can come in handy for specific cases. For example, running only `IsoCon get_candidates` will give more sequences if one is not concerned about precision and will also be faster, while one might use only `IsoCon stat_filter` using different parameters for a set of already constructed candidates in order to prevent rerunning the error correction step.\n\n\n### Pipeline\n\nUsing quality values (fastq) is preferred over fasta as IsoCon uses the quality values for statistical analysis.\n\n\n```\nIsoCon pipeline -fl_reads <reads.fast[a/q]> -outfolder </path/to/output>\n```\n\n\n#### Output\n\nThe final high quality transcripts are written to the file `final_candidates.fa` in the output folder. If there was only one or two reads coming from a transcript, which is sufficiently different from other reads (exon difference), it will be output in the file `not_converged.fa`. This file may contain other erroneous reads such as chimeras. The output also contains a file `cluster_info.tsv` that shows for each read which candidate it was assigned to in `final_candidates.fa`.\n\n### get_candidates\n\nRuns only the error correction step. The output is the converged candidates in a fasta file.\n\n```\nIsoCon get_candidates -fl_reads <flnc.fast[a/q]> -outfolder </path/to/output>\n```\n\n### stat_filter\n\nRuns only the statistical filtering of candidates.\n\n```\nIsoCon pipeline -fl_reads <flnc.fast[a/q]> -outfolder </path/to/output> -candidates <candidate_transcripts.fa> \n```\nObserve that `candidate_transcripts.fa` does not have to come from IsoCon's error correction algorithm. For example, this could either be a set of already validated transcripts to which one would like to see if they occur in the reads, or they could be Illumina (or in other ways) corrected CCS reads.\n\n\n\nCREDITS\n----------------\n\nPlease cite [1] when using IsoCon.\n\n1. Kristoffer Sahlin*, Marta Tomaszkiewicz*, Kateryna D. Makova\u2020, Paul Medvedev\u2020 Deciphering highly similar multigene family transcripts from iso-seq data with isocon. Nature Communications, 9(1):4601, 2018. [Link](https://www.nature.com/articles/s41467-018-06910-x).\n\nLICENCE\n----------------\n\nGPL v3.0, see [LICENSE.txt](https://github.com/ksahlin/IsoCon/blob/master/LICENCE.txt).", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ksahlin/IsoCon", "keywords": "Iso-Seq CCS PacBio transcript long-read", "license": "", "maintainer": "", "maintainer_email": "", "name": "IsoCon", "package_url": "https://pypi.org/project/IsoCon/", "platform": "", "project_url": "https://pypi.org/project/IsoCon/", "project_urls": {"Homepage": "https://github.com/ksahlin/IsoCon"}, "release_url": "https://pypi.org/project/IsoCon/0.3.3/", "requires_dist": null, "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "summary": "Pipeline for obtaining non-redundant haplotype specific transcript isoforms using PacBio IsoSeq reads.", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"isocon\">\n<h2>IsoCon</h2>\n<p>IsoCon is distributed as a python package supported on Linux / OSX with python v2.7, and version &gt;=3.6 [![Build Status](<a href=\"https://travis-ci.org/ksahlin/IsoCon.svg?branch=master)%5D(https://travis-ci.org/ksahlin/IsoCon\" rel=\"nofollow\">https://travis-ci.org/ksahlin/IsoCon.svg?branch=master)](https://travis-ci.org/ksahlin/IsoCon</a>)</p>\n<p>IsoCon is a tool for reconstructing highly similar sequences present in a dataset of from long noisy reads. Its original use case was transcripts from highly similar gene copies ([paper here](<a href=\"https://www.nature.com/articles/s41467-018-06910-x\" rel=\"nofollow\">https://www.nature.com/articles/s41467-018-06910-x</a>)), however the methodology extends to any dataset where sequences spans the region(s) of interest end-to-end. IsoCon use examples:</p>\n<ul>\n<li>Deriving <em>finished transcripts</em> from <em>Iso-Seq</em> or ONT reads from <em>targeted</em> sequencing of gene families using primers.</li>\n<li>Deriving consensus sequence from several passes of long noisy reads (e.g., pacbio polymerase reads to CCS or ONT Rolling Circle Amplification to Concatemeric Consensus (R2C2)).</li>\n<li>Deriving viral strains from  reads (assuming the reads spans the viral sequence, e.g., as for HIV).</li>\n<li>Deriving consensus ribosomal RNA.</li>\n<li>Deriving consensus from any targeted amplicone based sequencing technique.</li>\n</ul>\n<p>Simplest usage is an input file of fastq or fasta containing reads. IsoCon can be run as follows</p>\n<p><tt>`\nIsoCon pipeline <span class=\"pre\">-fl_reads</span> &lt;reads.fastq&gt; <span class=\"pre\">-outfolder</span> &lt;/path/to/output&gt;\n`</tt></p>\n<p>or</p>\n<p><tt>`\nIsoCon pipeline <span class=\"pre\">-fl_reads</span> &lt;reads.fasta&gt; <span class=\"pre\">-outfolder</span> &lt;/path/to/output&gt; <span class=\"pre\">--ccs</span> &lt;/path/to/filename.ccs.bam&gt;\n`</tt></p>\n<p>predicted transcripts are found in file <strong>/path/to/output/final_candidates.fa</strong>. Reads that could not be corrected or clustered are found in /path/to/output/not_converged.fa.</p>\n<ul>\n<li>Can IsoCon be run on nontargeted Iso-Seq datasets? [see here](<a href=\"https://github.com/ksahlin/IsoCon/issues/2\" rel=\"nofollow\">https://github.com/ksahlin/IsoCon/issues/2</a>).</li>\n<li>How does my data set affect the runtime? [see here](<a href=\"https://github.com/ksahlin/IsoCon/issues/3\" rel=\"nofollow\">https://github.com/ksahlin/IsoCon/issues/3</a>)</li>\n</ul>\n<p>For more instructions see below.</p>\n</div>\n<div id=\"table-of-contents\">\n<h2>Table of Contents</h2>\n<blockquote>\n<ul>\n<li>[Table of Contents](#Table-of-Contents)</li>\n<li>[INSTALLATION](#INSTALLATION)\n* [Using conda](#Using-conda)\n* [Using pip](#Using-pip)\n* [Downloading source from GitHub](#Downloading-source-from-GitHub)\n* [Dependencies](#Dependencies)</li>\n<li>[USAGE](#USAGE)\n* [Pipline](#Pipline)\n* [Output](#Output)\n* [get_candidates](#get_candidates)\n* [stat_filter](#stat_filter)</li>\n<li>[CREDITS](#CREDITS)</li>\n<li>[LICENCE](#LICENCE)</li>\n</ul>\n</blockquote>\n<div id=\"installation\">\n<h3>INSTALLATION</h3>\n<p>### Using conda\nConda is the preferred way to install IsoCon.</p>\n<ol>\n<li>Create and activate a new environment called IsoCon</li>\n</ol>\n<p><tt>`\nconda create <span class=\"pre\">-n</span> IsoCon python=3 pip\nconda activate IsoCon\n`</tt></p>\n<ol>\n<li>Install IsoCon</li>\n</ol>\n<p><tt>`\npip install IsoCon\n`</tt></p>\n<ol>\n<li>You should now have \u2018IsoCon\u2019 installed; try it:</li>\n</ol>\n<p><tt>`\nIsoCon <span class=\"pre\">--help</span>\n`</tt></p>\n<p>Upon start/login to your server/computer you need to activate the conda environment \u201cIsoCon\u201d to run IsoCon as:</p>\n<p><tt>`\nconda activate IsoCon\n`</tt></p>\n<p>### Using pip</p>\n<p><cite>pip</cite> is pythons official package installer. This section assumes you have <cite>python</cite> (v2.7 or &gt;=3.6) and a recent version of <cite>pip</cite> installed which should be included in most python versions. If you do not have <cite>pip</cite>, it can be easily installed [from here](<a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\">https://pip.pypa.io/en/stable/installing/</a>) and upgraded with <cite>pip install \u2013upgrade pip</cite>.</p>\n<p>With <cite>python</cite> and <cite>pip</cite> available, create a file <cite>requirements.txt</cite> with contents copied from [this file](<a href=\"https://github.com/ksahlin/IsoCon/blob/master/requirements.txt\" rel=\"nofollow\">https://github.com/ksahlin/IsoCon/blob/master/requirements.txt</a>). Then, type in terminal</p>\n<p><tt>`\npip install <span class=\"pre\">--requirement</span> requirements.txt IsoCon\n`</tt></p>\n<p>This should install IsoCon. With proper installation of <strong>IsoCon</strong>, you should be able to issue the command <cite>IsoCon pipeline</cite> to view user instructions. You should also be able to run IsoCon on this [small dataset](<a href=\"https://github.com/ksahlin/IsoCon/tree/master/test/data\" rel=\"nofollow\">https://github.com/ksahlin/IsoCon/tree/master/test/data</a>). Simply download the test dataset and run:</p>\n<p><tt>`\nIsoCon pipeline <span class=\"pre\">-fl_reads</span> [path/simulated_pacbio_reads.fa] <span class=\"pre\">-outfolder</span> [output path]\n`</tt></p>\n<p><cite>pip</cite> will install the dependencies automatically for you. IsoCon has been built with python 2.7, 3.4-3.6 on Linux systems using [Travis](<a href=\"https://travis-ci.org/\" rel=\"nofollow\">https://travis-ci.org/</a>). For customized installation of latest master branch, see below.</p>\n<p>### Downloading source from GitHub</p>\n<p>#### Dependencies</p>\n<p>Make sure the below listed dependencies are installed (installation links below). Versions in parenthesis are suggested as IsoCon has not been tested with earlier versions of these libraries. However, IsoCon may also work with earliear versions of these libaries.\n* [edlib](<a href=\"https://github.com/Martinsos/edlib\" rel=\"nofollow\">https://github.com/Martinsos/edlib</a> \u201cedlib\u2019s Homepage\u201d), for installation see [link](<a href=\"https://github.com/Martinsos/edlib/tree/master/bindings/python#installation\" rel=\"nofollow\">https://github.com/Martinsos/edlib/tree/master/bindings/python#installation</a>) (&gt;= v1.1.2)\n* [networkx](<a href=\"https://networkx.github.io/\" rel=\"nofollow\">https://networkx.github.io/</a>) (&gt;= v1.10)\n* [parasail](<a href=\"https://github.com/jeffdaily/parasail-python\" rel=\"nofollow\">https://github.com/jeffdaily/parasail-python</a>)\n* [pysam](<a href=\"http://pysam.readthedocs.io/en/latest/installation.html\" rel=\"nofollow\">http://pysam.readthedocs.io/en/latest/installation.html</a>) (&gt;= v0.11)</p>\n<p>With these dependencies installed. Run</p>\n<p><tt>`sh\ngit clone <span class=\"pre\">https://github.com/ksahlin/IsoCon.git</span>\ncd IsoCon\n./IsoCon\n`</tt></p>\n</div>\n<div id=\"usage\">\n<h3>USAGE</h3>\n<p>IsoCon\u2019s algorithm consists of two main phases; the error correction step and the statistical testing step. IsoCon can run these two steps in one go using <cite>IsoCon pipeline</cite>, or it can run only the correction or statistical test steps using <cite>IsoCon get_candidates</cite> and <cite>IsoCon stat_filter</cite> respectively. The preffered and most tested way is to use the entire pipeline <cite>IsoCon pipeline</cite>, but the other two settings can come in handy for specific cases. For example, running only <cite>IsoCon get_candidates</cite> will give more sequences if one is not concerned about precision and will also be faster, while one might use only <cite>IsoCon stat_filter</cite> using different parameters for a set of already constructed candidates in order to prevent rerunning the error correction step.</p>\n<p>### Pipeline</p>\n<p>Using quality values (fastq) is preferred over fasta as IsoCon uses the quality values for statistical analysis.</p>\n<p><tt>`\nIsoCon pipeline <span class=\"pre\">-fl_reads</span> &lt;reads.fast[a/q]&gt; <span class=\"pre\">-outfolder</span> &lt;/path/to/output&gt;\n`</tt></p>\n<p>#### Output</p>\n<p>The final high quality transcripts are written to the file <cite>final_candidates.fa</cite> in the output folder. If there was only one or two reads coming from a transcript, which is sufficiently different from other reads (exon difference), it will be output in the file <cite>not_converged.fa</cite>. This file may contain other erroneous reads such as chimeras. The output also contains a file <cite>cluster_info.tsv</cite> that shows for each read which candidate it was assigned to in <cite>final_candidates.fa</cite>.</p>\n<p>### get_candidates</p>\n<p>Runs only the error correction step. The output is the converged candidates in a fasta file.</p>\n<p><tt>`\nIsoCon get_candidates <span class=\"pre\">-fl_reads</span> &lt;flnc.fast[a/q]&gt; <span class=\"pre\">-outfolder</span> &lt;/path/to/output&gt;\n`</tt></p>\n<p>### stat_filter</p>\n<p>Runs only the statistical filtering of candidates.</p>\n<p><tt>`\nIsoCon pipeline <span class=\"pre\">-fl_reads</span> &lt;flnc.fast[a/q]&gt; <span class=\"pre\">-outfolder</span> &lt;/path/to/output&gt; <span class=\"pre\">-candidates</span> &lt;candidate_transcripts.fa&gt;\n`</tt>\nObserve that <cite>candidate_transcripts.fa</cite> does not have to come from IsoCon\u2019s error correction algorithm. For example, this could either be a set of already validated transcripts to which one would like to see if they occur in the reads, or they could be Illumina (or in other ways) corrected CCS reads.</p>\n</div>\n<div id=\"credits\">\n<h3>CREDITS</h3>\n<p>Please cite [1] when using IsoCon.</p>\n<ol>\n<li>Kristoffer Sahlin*, Marta Tomaszkiewicz*, Kateryna D. Makova\u2020, Paul Medvedev\u2020 Deciphering highly similar multigene family transcripts from iso-seq data with isocon. Nature Communications, 9(1):4601, 2018. [Link](<a href=\"https://www.nature.com/articles/s41467-018-06910-x\" rel=\"nofollow\">https://www.nature.com/articles/s41467-018-06910-x</a>).</li>\n</ol>\n</div>\n<div id=\"licence\">\n<h3>LICENCE</h3>\n<p>GPL v3.0, see [LICENSE.txt](<a href=\"https://github.com/ksahlin/IsoCon/blob/master/LICENCE.txt\" rel=\"nofollow\">https://github.com/ksahlin/IsoCon/blob/master/LICENCE.txt</a>).</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6961573, "releases": {"0.2.5": [{"comment_text": "", "digests": {"md5": "1cde5b5e4b0186af8cfec23d1e3d0171", "sha256": "4b9c47944a63442e614d19493b8c3ad124023fa69ae724ddb56413353acdfa4d"}, "downloads": -1, "filename": "IsoCon-0.2.5.tar.gz", "has_sig": false, "md5_digest": "1cde5b5e4b0186af8cfec23d1e3d0171", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 66897, "upload_time": "2017-12-28T06:07:16", "upload_time_iso_8601": "2017-12-28T06:07:16.187757Z", "url": "https://files.pythonhosted.org/packages/fb/0d/16337232c28df5e0026a7fadbdb42ebe3382b5171de0c068c00ad7cb95ea/IsoCon-0.2.5.tar.gz", "yanked": false}], "0.2.5.1": [{"comment_text": "", "digests": {"md5": "180ab13c595068ebd652ae73cd4b2e64", "sha256": "249cba90c74b1e6b1619c401cf9a7d1693fb9aeb7e63563d3088a937260f77cf"}, "downloads": -1, "filename": "IsoCon-0.2.5.1.tar.gz", "has_sig": false, "md5_digest": "180ab13c595068ebd652ae73cd4b2e64", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 76930, "upload_time": "2017-12-28T07:22:37", "upload_time_iso_8601": "2017-12-28T07:22:37.246886Z", "url": "https://files.pythonhosted.org/packages/71/dd/4a7aa46032738138138af3db3e4739ad36d56aae8bb2758d4e26e05070ac/IsoCon-0.2.5.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "e7d52f0ba055b0425bbcd7397a741a3f", "sha256": "ba750f72194b4f8650401c0b817b804be0498dae8d9567d71e1fa2d521587626"}, "downloads": -1, "filename": "IsoCon-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e7d52f0ba055b0425bbcd7397a741a3f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 73467, "upload_time": "2018-02-03T02:43:56", "upload_time_iso_8601": "2018-02-03T02:43:56.111679Z", "url": "https://files.pythonhosted.org/packages/01/02/ea28396a0ca3ee5d36a7e68a611744ba54c0a5798ae890f9947be7304729/IsoCon-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a2fe32e6b493d5485bcec90b19d76a6", "sha256": "2c5e5b03138d8221cdfeaa1dd726d2000a3dbe65fbbb2ae4cbfa0bc3d833ab1f"}, "downloads": -1, "filename": "IsoCon-0.3.0.tar.gz", "has_sig": false, "md5_digest": "6a2fe32e6b493d5485bcec90b19d76a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 63998, "upload_time": "2018-02-03T02:43:58", "upload_time_iso_8601": "2018-02-03T02:43:58.445326Z", "url": "https://files.pythonhosted.org/packages/c7/51/6a43ac7daeeec9c737e30f2bc3ea1fd45977c8c3ac622f1c36facff94fbd/IsoCon-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "16a056cb41420983e8134ae9e573a437", "sha256": "d5a9bd33f1c28eaa4ad3daaafa4b2589d4b46fb0c510ff150ea2aa0fed8a8d27"}, "downloads": -1, "filename": "IsoCon-0.3.1.tar.gz", "has_sig": false, "md5_digest": "16a056cb41420983e8134ae9e573a437", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 70983, "upload_time": "2018-03-25T13:59:42", "upload_time_iso_8601": "2018-03-25T13:59:42.476850Z", "url": "https://files.pythonhosted.org/packages/5c/e9/426388b5f5fd5a3366624cb0629ef13e9ea5171003272d7aae23acf1b23d/IsoCon-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "fb4740f064a6768408f6d77183c5e761", "sha256": "a8872c860a27785fa5d37c43d27177a98341e602504156e173b2e6baa80c7c2c"}, "downloads": -1, "filename": "IsoCon-0.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb4740f064a6768408f6d77183c5e761", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 83988, "upload_time": "2018-07-29T02:38:30", "upload_time_iso_8601": "2018-07-29T02:38:30.135935Z", "url": "https://files.pythonhosted.org/packages/c4/9d/8068d6c56d58f1bfdcb496fb74b7c3eae1c20e40c0ba643e5005321614d3/IsoCon-0.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a32af624da42d37242d152045ae55d28", "sha256": "62bb117689e20dbfb436a906332aa353c77fd4ad1b16673b6310e81d824416e0"}, "downloads": -1, "filename": "IsoCon-0.3.2.tar.gz", "has_sig": false, "md5_digest": "a32af624da42d37242d152045ae55d28", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 74577, "upload_time": "2018-07-29T02:38:36", "upload_time_iso_8601": "2018-07-29T02:38:36.566628Z", "url": "https://files.pythonhosted.org/packages/fe/93/df5f166072f8e1fa3189da4e2f6c0005b55aa0ba7117bb921a2fb31e748b/IsoCon-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "18e331f2ebe1493cc42c737382f5ad88", "sha256": "94ef3c96ec1bc3ce2d9795dcf3f24c967ce12e03f458f3e11844234954e276db"}, "downloads": -1, "filename": "IsoCon-0.3.3.tar.gz", "has_sig": false, "md5_digest": "18e331f2ebe1493cc42c737382f5ad88", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 69379, "upload_time": "2020-04-06T13:17:51", "upload_time_iso_8601": "2020-04-06T13:17:51.198690Z", "url": "https://files.pythonhosted.org/packages/19/33/6c2e1b64d9654494de5d3cc50f7af29c9896e8aab4f17db469692e956db2/IsoCon-0.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "18e331f2ebe1493cc42c737382f5ad88", "sha256": "94ef3c96ec1bc3ce2d9795dcf3f24c967ce12e03f458f3e11844234954e276db"}, "downloads": -1, "filename": "IsoCon-0.3.3.tar.gz", "has_sig": false, "md5_digest": "18e331f2ebe1493cc42c737382f5ad88", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 69379, "upload_time": "2020-04-06T13:17:51", "upload_time_iso_8601": "2020-04-06T13:17:51.198690Z", "url": "https://files.pythonhosted.org/packages/19/33/6c2e1b64d9654494de5d3cc50f7af29c9896e8aab4f17db469692e956db2/IsoCon-0.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:01 2020"}