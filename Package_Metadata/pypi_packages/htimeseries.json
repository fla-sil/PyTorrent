{"info": {"author": "Antonis Christofides", "author_email": "antonis@antonischristofides.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "=========================================================\nhtimeseries - Hydrological and meteorological time series\n=========================================================\n\n\n.. image:: https://img.shields.io/pypi/v/htimeseries.svg\n        :target: https://pypi.python.org/pypi/htimeseries\n\n.. image:: https://img.shields.io/travis/openmeteo/htimeseries.svg\n        :target: https://travis-ci.org/openmeteo/htimeseries\n\n.. image:: https://codecov.io/github/openmeteo/htimeseries/coverage.svg\n        :target: https://codecov.io/gh/openmeteo/htimeseries\n        :alt: Coverage\n\n.. image:: https://pyup.io/repos/github/openmeteo/htimeseries/shield.svg\n         :target: https://pyup.io/repos/github/openmeteo/htimeseries/\n         :alt: Updates\n\nThis module provides the HTimeseries class, which is a layer on top of\npandas, offering a little more functionality.\n\nIntroduction\n============\n\n::\n\n    from htimeseries import HTimeseries\n\n    ts = HTimeseries()\n\nThis creates a ``HTimeseries`` object, whose ``data`` attribute is a\npandas time series or dataframe with a datetime index. Besides ``data``,\nit can have other attributes which serve as the time series' metadata.\nThere are also several utility methods described below.\n\nHTimeseries objects\n===================\n\n**HTimeseries(data=None, format=None, start_date=None, end_date=None)**\n\nCreates a ``HTimeseries`` object. ``data`` can be a pandas time series\nor dataframe indexed by datetime or a file-like object. If it is a\npandas object, it becomes the value of the ``data`` attribute and the\nrest of the keyword arguments are ignored.\n\nThe ``data`` attribute should be a dataframe with two columns (besides\ndate): value and flags. However, in this version, ``HTimeseries`` does\nnot enforce that. A good idea is to create an empty ``HTimeseries``\nobject with ``HTimeseries()``, and then proceed to fill in its ``data``\nattribute. This ensures that the dataframe will have the right columns\nand dtypes.\n\nIf the ``data`` argument is a filelike object, the time series is read\nfrom it.  There must be no newline translation in ``data`` (open it with\n``open(..., newline='\\n')``. If ``start_date`` and ``end_date`` are\nspecified, it skips rows outside the range.\n\nThe contents of the filelike object can be in text format or file format (see\n\"formats\" below). This usually auto-detected, but a specific format can\nbe specified with the ``format`` parameter.  If reading in text format,\nthe returned object just has the ``data`` attribute set. If reading in\nfile format , the returned object also has attributes ``unit``,\n``title``, ``comment``, ``timezone``, ``time_step``, ``interval_type``,\n``variable``, ``precision`` and ``location``. For the meaning of these\nattributes, see section \"File format\" below.\n\nThese attributes are purely informational. In particular, ``time_step``\nand the other time-step-related attributes don't necessarily mean that\nthe pandas object will have a related time step (also called\n\"frequency\"). In fact, raw time series may be irregular but actually\nhave a time step. For example, a ten-minute time series might end in\n:10, :20, etc., but at some point there might be an irregularity and it\ncould continue with :31, :41, etc.  Strictly speaking, such a time\nseries has an irregular step. However, when stored in a database,\nspecifying that its time step is ten minutes (because that's what it is,\nten minutes with irregularities) can help people who browse or search\nthe database contents.\n\nThe ``location`` attribute is a dictionary that has items ``abscissa``,\n``ordinate``, ``srid``, ``altitude``, and ``asrid``.\n\n**.write(f, format=HTimeseries.TEXT, version=None)**\n\nWrites the time series to filelike object ``f``. In accordance with the\nformats described below, time series are written\nusing the CR-LF sequence to terminate lines.  Care should be taken that\n``f``, or any subsequent operations on ``f``, do not perform text\ntranslation; otherwise it may result in lines being terminated with\nCR-CR-LF. If ``f`` is a file, it should have been opened with\n`newline=\"\\n\"`.\n\n``version`` is ignored unless ``format=HTimeseries.FILE``. The default\n``version`` is latest.\n\nWhile writing, the value of the ``precision`` attribute is taken into\naccount.\n\nTzinfoFromString objects\n========================\n\n::\n\n    from htimeseries imort TzinfoFromString\n\n    atzinfo = TzinfoFromString(\"EET (UTC+0200)\")\n\n``TzinfoFromString`` is a utility that creates and returns a tzinfo_\nobject from a string formatted as \"+0000\" or as \"XXX (+0000)\" or as \"XXX\n(UTC+0000)\" (``TzinfoFromString`` is actually a tzinfo_ subclass). Its\npurpose is to read the contents of the ``timezone`` parameter of the\nfile format (described below).\n\n.. _tzinfo: https://docs.python.org/3/library/datetime.html#tzinfo-objects\n\nFormats\n=======\n\nThere are two formats: the *text format* is generic text format, without\nmetadata; the *file format* is like the text format, but additionally\ncontains headers with metadata.\n\n.. _textformat:\n\nText format\n-----------\n\nThe text format for a time series is us-ascii, one line per record,\nlike this:\n\n    2006-12-23 18:34,18.2,RANGE\n\nThe three fields are comma-separated and must always exist.  In the date\nfield, the time may be missing. The character that separates the date\nfrom the time may be either a space or a lower case ``t``, or a capital\n``T`` (this module produces text format using a space as date separator,\nbut can read text format that uses ``t`` or ``T``). The second field\nalways uses a dot as the decimal separator and may be empty.  The third\nfield is usually empty but may contain a list of space-separated flags.\nThe line separator should be the CR-LF sequence used in MS-DOS and\nWindows systems. Code that produces text format should always use CR-LF\nto end lines, but code that reads text format should be able to also\nread lines that end in LF only, as well as CR-CR-LF (for reasons\nexplained in the ``write()`` function above).\n\nIn order to improve performance in file writes, the maximum length of\neach time series record line is limited to 255 characters.\n\nFlags should be encoded in ASCII; there must be no characters with\ncode greater than 127.\n\n.. _fileformat:\n\nFile format\n-----------\n\nThe file format is like this::\n\n    Version=2\n    Title=My timeseries\n    Unit=\u00b0C\n\n    2006-12-23 18:34,18.2,RANGE\n    2006-12-23 18:44,18.3,\n\nIn other words, the file format consists of a header that specifies\nparameters in the form ``Parameter=Value``, followed by a blank line,\nfollowed by the timeseries in text format. The same conventions for line\nterminators apply here as for the text format. The encoding of the\nheader section is UTF-8.\n\nClient and server software should recognize UTF-8 files with or without\nUTF-8 BOM (Byte Order Mark) in the begining of file.  Writes may or may\nnot include the BOM, according OS. (Usually Windows software attaches\nthe BOM at the beginning of the file).\n\nParameter names are case insensitive.  There may be white space on\neither side of the equal sign, which is ignored. Trailing white space on\nthe line is also ignored. A second equal sign is considered to be part\nof the value. The value cannot contain a newline, but there is a way to\nhave multi-lined parameters explained in the Comment parameter below.\nAll parameters except Version are optional: either the value can be\nblank or the entire ``Parameter=Value`` can be missing; the only\nexception is the Comment parameter.\n\nThe parameters available are:\n\n**Version**\n  There are four versions:\n\n  * Version 1 files are long obsolete. They did not have a header\n    section.\n\n  * Version 2 files must have ``Version=2`` as the first line of the\n    file. All other parameters are optional. The file may not contain\n    unrecognized parameters; software reading files with unrecognized\n    parameters may raise an error.\n\n  * Version 3 files do not have the *Version* parameter. At least one of\n    the other parameters must be present. Unrecognized parameters are\n    ignored when reading. The old deprecated parameter names\n    *Nominal_offset* and *Actual_offset* are used instead of the newer\n    (but also deprecated) ones *Timestamp_rounding* and\n    *Timestamp_offset*.\n\n  * Version 4 files are the same as Version 3, except for the names of\n    the parameters *Timestamp_rounding* and *Timestamp_offset*.\n\n  * Version 5 files are the same as Version 4, except that\n    *Timestamp_rounding* and *Timestamp_offset* do not exist, and\n    *Time_step* is in a different format (see below).\n\n**Unit**\n    A symbol for the measurement unit, like ``\u00b0C`` or ``mm``.\n\n**Count**\n    The number of records in the time series. If present, it need not be\n    exact; it can be an estimate. Its primary purpose is to enable\n    progress indicators in software that takes time to read large time\n    series files. In order to determine the actual number of records,\n    the records need to be counted.\n\n**Title**\n    A title for the time series.\n\n**Comment**\n    A multiline comment for the time series. Multiline comments are\n    stored by specifying multiple adjacent Comment parameters, like\n    this::\n\n        Comment=This timeseries is extremely important\n        Comment=because the comment that describes it\n        Comment=spans five lines.\n        Comment=\n        Comment=These five lines form two paragraphs.\n\n    The Comment parameter is the only parameter where a blank value is\n    significant and indicates an empty line, as can be seen in the\n    example above.\n\n**Timezone**\n    The time zone of the timestamps, in the format ``{XXX}\n    (UTC{+HHmm})``, where *XXX* is a time zone name and *+HHmm* is the\n    offset from UTC. Examples are ``EET (UTC+0200)`` and ``VST\n    (UTC-0430)``.\n\n    The ``TzinfoFromString`` utility (described above) can be used to\n    convert this string to a tzinfo_ object.\n\n**Time_step**\n    In version 5, a pandas \"frequency\" string such as ``10min`` (10\n    minutes), ``H`` (hour), or ``2M`` (two months). If missing or empty,\n    the time series is without time step.\n\n    Up to version 4, a comma-separated pair of integers; the number of\n    minutes and months in the time step (one of the two must be zero).\n\n    When reading from version 4 or earlier, the pair of integers is\n    automatically converted to a pandas \"frequency\" string, so the\n    ``time_step`` attribute of an ``HTimeseries`` object is always a\n    pandas \"frequency\" string. Likewise, when writing to a version 4\n    or earlier file, the pandas \"frequency\" string is automatically\n    converted to the pair of integers.\n\n**Timestamp_rounding**\n    Deprecated. It might be found in old files, Version 4 or earlier,\n    but ``htimeseries`` will ignore it when reading and will never write\n    it.\n\n    A comma-separated pair of integers indicating the number of minutes\n    and months that must be added to a round timestamp to get to the\n    nominal timestamp.  For example, if an hourly time series has\n    timestamps that end in :13, such as 01:13, 02:13, etc., then its\n    rounding is 13 minutes, 0 months, i.e., ``(13, 0)``. Monthly time\n    series normally have a nominal timestamp of ``(0, 0)``, the\n    timestamps usually being of the form 2008-02-01 00:00, meaning\n    \"February 2008\" and usually rendered by application software as \"Feb\n    2008\" or \"2008-02\". Annual timestamps have a nominal timestamp which\n    normally has 0 minutes, but may have nonzero months; for example, a\n    common rounding in Greece is 9 months (0=January), which means that\n    an annual timestamp is of the form 2008-10-01 00:00, normally\n    rendered by application software as 2008-2009, and denoting the\n    hydrological year 2008-2009.\n\n    ``timestamp_rounding`` may be None, meaning that the timestamps can\n    be irregular.\n\n    *Timestamp_rounding* is named differently in older versions. See the\n    *Version* parameter above for more information.\n\n**Timestamp_offset**\n    Deprecated. It might be found in old files, Version 4 or earlier,\n    but ``htimeseries`` will ignore it when reading and will never write\n    it.\n\n    A comma-separated pair of integers indicating the number of minutes\n    and months that must be added to the nominal timestamp to get to the\n    actual timestamp. The timestamp offset for small time steps, such as\n    up to daily, is usually zero, except if the nominal timestamp is the\n    beginning of an interval, in which case the timestamp offset is\n    equal to the length of the time step, so that the actual timestamp\n    is the end of the interval. For monthly and annual time steps, the\n    timestamp offset is usually 1 and 12 months respectively.  For a\n    monthly time series, a timestamp offset of (-475, 1) means that\n    2003-11-01 00:00 (often rendered as 2003-11) denotes the interval\n    2003-10-31 18:05 to 2003-11-30 18:05.\n\n    *Timestamp_offset* is named differently in older versions. See the\n    *Version* parameter above for more information.\n\n**Interval_type**\n    Deprecated. Has one of the values ``sum``, ``average``, ``maximum``,\n    ``minimum``, and ``vector_average``. If absent it means that the\n    time series values are instantaneous, they do not refer to\n    intervals.\n\n**Variable**\n    A textual description of the variable, such as ``Temperature`` or\n    ``Precipitation``.\n\n**Precision**\n    The precision of the time series values, in number of decimal digits\n    after the decimal separator. It can be negative; for example, a\n    precision of -2 indicates values accurate to the hundred, such as\n    100, 200, 300 etc.\n\n**Location**, **Altitude**\n    (Versions 3 and later.) *Location* is three numbers,\n    space-separated: abscissa, ordinate, and EPSG SRID. *Altitude* is\n    one or two space-separated numbers: the altitude and the EPSG SRID\n    for altitude. The altitude SRID may be omitted.\n\n\n=======\nHistory\n=======\n\n3.0.0 (2020-02-23)\n==================\n\n- Only Python>=3.7 is now supported.\n- When reading or writing a time series, it now checks that there are no\n  duplicate timestamps and raises an exception if there are.\n\n2.0.5 (2020-01-15)\n==================\n\n- Fix pandas dependency to use pandas<1, so that Python 3.5\n  compatibility is kept.\n\n2.0.4 (2020-01-08)\n==================\n\n- Fixed crash when saving in version 2 and the time step was a mere \"M\"\n  or \"Y\" without multiplier.\n\n2.0.3 (2020-01-05)\n==================\n\n- Default version when writing file is now latest.\n\n2.0.1 (2020-01-04)\n==================\n\n- Fixed error when the time step was empty.\n\n2.0.0 (2020-01-04)\n==================\n\n- Changed the way the time step is specified. Instead of\n  \"minutes,months\", it is now a pandas \"frequency\" offset specification\n  such as \"5min\" or \"3M\".\n- The timestamp_offset and timestamp_rounding parameters have been\n  abolished.\n\n1.1.2 (2019-07-18)\n==================\n\n- Fixed some altitude-related bugs: 1) It would crash when trying to\n  read a file that specified altitude but not location; 2) it wouldn't\n  write altitude to the file it the altitude was zero.\n\n1.1.1 (2019-06-12)\n==================\n\n- Fixed crash when Timestamp_rounding=None or Timestamp_offset=None.\n\n1.1.0 (2019-06-08)\n==================\n\n- Added TzinfoFromString utility (moved in here from pthelma).\n\n1.0.1 (2019-06-06)\n==================\n\n- Fixed error in the README (which prevented 1.0.0 from being uploaded\n  to PyPi).\n\n1.0.0 (2019-06-06)\n==================\n\n- API change: .read() is gone, now we use a single overloaded\n  constructor; either HTimeseries() or HTimeseries(dataframe) or \n  HTimeseries(filelike).\n- The columns and dtypes of .data are now standardized and properly\n  created even for empty objects (created with HTimeseries()).\n\n0.2.0 (2019-04-09) \n==================\n\n- Auto detect format when reading a file\n\n0.1.0 (2019-01-14)\n==================\n\n- Initial release\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/openmeteo/htimeseries", "keywords": "", "license": "GNU General Public License v3", "maintainer": "", "maintainer_email": "", "name": "htimeseries", "package_url": "https://pypi.org/project/htimeseries/", "platform": "", "project_url": "https://pypi.org/project/htimeseries/", "project_urls": {"Homepage": "https://github.com/openmeteo/htimeseries"}, "release_url": "https://pypi.org/project/htimeseries/3.0.0/", "requires_dist": ["pandas (<2,>=0.20)", "iso8601", "textbisect"], "requires_python": "", "summary": "Hydrological and meteorological timeseries", "version": "3.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"htimeseries-hydrological-and-meteorological-time-series\">\n<h2>htimeseries - Hydrological and meteorological time series</h2>\n<a href=\"https://pypi.python.org/pypi/htimeseries\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/htimeseries.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cbf531caa4b1dd29e124866090a492f1cb1c912f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6874696d657365726965732e737667\"></a>\n<a href=\"https://travis-ci.org/openmeteo/htimeseries\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/openmeteo/htimeseries.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d933c8c3b92f0df10ca639444947417f681f69a8/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6f70656e6d6574656f2f6874696d657365726965732e737667\"></a>\n<a href=\"https://codecov.io/gh/openmeteo/htimeseries\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e518b3a0dd328959686746698def74496beb508b/68747470733a2f2f636f6465636f762e696f2f6769746875622f6f70656e6d6574656f2f6874696d657365726965732f636f7665726167652e737667\"></a>\n<a href=\"https://pyup.io/repos/github/openmeteo/htimeseries/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd526251f9a1c411e9f8b7cfef98bc76a11ca97c/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f6f70656e6d6574656f2f6874696d657365726965732f736869656c642e737667\"></a>\n<p>This module provides the HTimeseries class, which is a layer on top of\npandas, offering a little more functionality.</p>\n<div id=\"introduction\">\n<h3>Introduction</h3>\n<pre>from htimeseries import HTimeseries\n\nts = HTimeseries()\n</pre>\n<p>This creates a <tt>HTimeseries</tt> object, whose <tt>data</tt> attribute is a\npandas time series or dataframe with a datetime index. Besides <tt>data</tt>,\nit can have other attributes which serve as the time series\u2019 metadata.\nThere are also several utility methods described below.</p>\n</div>\n<div id=\"htimeseries-objects\">\n<h3>HTimeseries objects</h3>\n<p><strong>HTimeseries(data=None, format=None, start_date=None, end_date=None)</strong></p>\n<p>Creates a <tt>HTimeseries</tt> object. <tt>data</tt> can be a pandas time series\nor dataframe indexed by datetime or a file-like object. If it is a\npandas object, it becomes the value of the <tt>data</tt> attribute and the\nrest of the keyword arguments are ignored.</p>\n<p>The <tt>data</tt> attribute should be a dataframe with two columns (besides\ndate): value and flags. However, in this version, <tt>HTimeseries</tt> does\nnot enforce that. A good idea is to create an empty <tt>HTimeseries</tt>\nobject with <tt>HTimeseries()</tt>, and then proceed to fill in its <tt>data</tt>\nattribute. This ensures that the dataframe will have the right columns\nand dtypes.</p>\n<p>If the <tt>data</tt> argument is a filelike object, the time series is read\nfrom it.  There must be no newline translation in <tt>data</tt> (open it with\n<tt><span class=\"pre\">open(...,</span> <span class=\"pre\">newline='\\n')</span></tt>. If <tt>start_date</tt> and <tt>end_date</tt> are\nspecified, it skips rows outside the range.</p>\n<p>The contents of the filelike object can be in text format or file format (see\n\u201cformats\u201d below). This usually auto-detected, but a specific format can\nbe specified with the <tt>format</tt> parameter.  If reading in text format,\nthe returned object just has the <tt>data</tt> attribute set. If reading in\nfile format , the returned object also has attributes <tt>unit</tt>,\n<tt>title</tt>, <tt>comment</tt>, <tt>timezone</tt>, <tt>time_step</tt>, <tt>interval_type</tt>,\n<tt>variable</tt>, <tt>precision</tt> and <tt>location</tt>. For the meaning of these\nattributes, see section \u201cFile format\u201d below.</p>\n<p>These attributes are purely informational. In particular, <tt>time_step</tt>\nand the other time-step-related attributes don\u2019t necessarily mean that\nthe pandas object will have a related time step (also called\n\u201cfrequency\u201d). In fact, raw time series may be irregular but actually\nhave a time step. For example, a ten-minute time series might end in\n:10, :20, etc., but at some point there might be an irregularity and it\ncould continue with :31, :41, etc.  Strictly speaking, such a time\nseries has an irregular step. However, when stored in a database,\nspecifying that its time step is ten minutes (because that\u2019s what it is,\nten minutes with irregularities) can help people who browse or search\nthe database contents.</p>\n<p>The <tt>location</tt> attribute is a dictionary that has items <tt>abscissa</tt>,\n<tt>ordinate</tt>, <tt>srid</tt>, <tt>altitude</tt>, and <tt>asrid</tt>.</p>\n<p><strong>.write(f, format=HTimeseries.TEXT, version=None)</strong></p>\n<p>Writes the time series to filelike object <tt>f</tt>. In accordance with the\nformats described below, time series are written\nusing the CR-LF sequence to terminate lines.  Care should be taken that\n<tt>f</tt>, or any subsequent operations on <tt>f</tt>, do not perform text\ntranslation; otherwise it may result in lines being terminated with\nCR-CR-LF. If <tt>f</tt> is a file, it should have been opened with\n<cite>newline=\u201dn\u201d</cite>.</p>\n<p><tt>version</tt> is ignored unless <tt>format=HTimeseries.FILE</tt>. The default\n<tt>version</tt> is latest.</p>\n<p>While writing, the value of the <tt>precision</tt> attribute is taken into\naccount.</p>\n</div>\n<div id=\"tzinfofromstring-objects\">\n<h3>TzinfoFromString objects</h3>\n<pre>from htimeseries imort TzinfoFromString\n\natzinfo = TzinfoFromString(\"EET (UTC+0200)\")\n</pre>\n<p><tt>TzinfoFromString</tt> is a utility that creates and returns a <a href=\"https://docs.python.org/3/library/datetime.html#tzinfo-objects\" rel=\"nofollow\">tzinfo</a>\nobject from a string formatted as \u201c+0000\u201d or as \u201cXXX (+0000)\u201d or as \u201cXXX\n(UTC+0000)\u201d (<tt>TzinfoFromString</tt> is actually a <a href=\"https://docs.python.org/3/library/datetime.html#tzinfo-objects\" rel=\"nofollow\">tzinfo</a> subclass). Its\npurpose is to read the contents of the <tt>timezone</tt> parameter of the\nfile format (described below).</p>\n</div>\n<div id=\"formats\">\n<h3>Formats</h3>\n<p>There are two formats: the <em>text format</em> is generic text format, without\nmetadata; the <em>file format</em> is like the text format, but additionally\ncontains headers with metadata.</p>\n<div id=\"text-format\">\n<span id=\"textformat\"></span><h4>Text format</h4>\n<p>The text format for a time series is us-ascii, one line per record,\nlike this:</p>\n<blockquote>\n2006-12-23 18:34,18.2,RANGE</blockquote>\n<p>The three fields are comma-separated and must always exist.  In the date\nfield, the time may be missing. The character that separates the date\nfrom the time may be either a space or a lower case <tt>t</tt>, or a capital\n<tt>T</tt> (this module produces text format using a space as date separator,\nbut can read text format that uses <tt>t</tt> or <tt>T</tt>). The second field\nalways uses a dot as the decimal separator and may be empty.  The third\nfield is usually empty but may contain a list of space-separated flags.\nThe line separator should be the CR-LF sequence used in MS-DOS and\nWindows systems. Code that produces text format should always use CR-LF\nto end lines, but code that reads text format should be able to also\nread lines that end in LF only, as well as CR-CR-LF (for reasons\nexplained in the <tt>write()</tt> function above).</p>\n<p>In order to improve performance in file writes, the maximum length of\neach time series record line is limited to 255 characters.</p>\n<p>Flags should be encoded in ASCII; there must be no characters with\ncode greater than 127.</p>\n</div>\n<div id=\"file-format\">\n<span id=\"fileformat\"></span><h4>File format</h4>\n<p>The file format is like this:</p>\n<pre>Version=2\nTitle=My timeseries\nUnit=\u00b0C\n\n2006-12-23 18:34,18.2,RANGE\n2006-12-23 18:44,18.3,\n</pre>\n<p>In other words, the file format consists of a header that specifies\nparameters in the form <tt>Parameter=Value</tt>, followed by a blank line,\nfollowed by the timeseries in text format. The same conventions for line\nterminators apply here as for the text format. The encoding of the\nheader section is UTF-8.</p>\n<p>Client and server software should recognize UTF-8 files with or without\nUTF-8 BOM (Byte Order Mark) in the begining of file.  Writes may or may\nnot include the BOM, according OS. (Usually Windows software attaches\nthe BOM at the beginning of the file).</p>\n<p>Parameter names are case insensitive.  There may be white space on\neither side of the equal sign, which is ignored. Trailing white space on\nthe line is also ignored. A second equal sign is considered to be part\nof the value. The value cannot contain a newline, but there is a way to\nhave multi-lined parameters explained in the Comment parameter below.\nAll parameters except Version are optional: either the value can be\nblank or the entire <tt>Parameter=Value</tt> can be missing; the only\nexception is the Comment parameter.</p>\n<p>The parameters available are:</p>\n<dl>\n<dt><strong>Version</strong></dt>\n<dd><p>There are four versions:</p>\n<ul>\n<li>Version 1 files are long obsolete. They did not have a header\nsection.</li>\n<li>Version 2 files must have <tt>Version=2</tt> as the first line of the\nfile. All other parameters are optional. The file may not contain\nunrecognized parameters; software reading files with unrecognized\nparameters may raise an error.</li>\n<li>Version 3 files do not have the <em>Version</em> parameter. At least one of\nthe other parameters must be present. Unrecognized parameters are\nignored when reading. The old deprecated parameter names\n<em>Nominal_offset</em> and <em>Actual_offset</em> are used instead of the newer\n(but also deprecated) ones <em>Timestamp_rounding</em> and\n<em>Timestamp_offset</em>.</li>\n<li>Version 4 files are the same as Version 3, except for the names of\nthe parameters <em>Timestamp_rounding</em> and <em>Timestamp_offset</em>.</li>\n<li>Version 5 files are the same as Version 4, except that\n<em>Timestamp_rounding</em> and <em>Timestamp_offset</em> do not exist, and\n<em>Time_step</em> is in a different format (see below).</li>\n</ul>\n</dd>\n<dt><strong>Unit</strong></dt>\n<dd>A symbol for the measurement unit, like <tt>\u00b0C</tt> or <tt>mm</tt>.</dd>\n<dt><strong>Count</strong></dt>\n<dd>The number of records in the time series. If present, it need not be\nexact; it can be an estimate. Its primary purpose is to enable\nprogress indicators in software that takes time to read large time\nseries files. In order to determine the actual number of records,\nthe records need to be counted.</dd>\n<dt><strong>Title</strong></dt>\n<dd>A title for the time series.</dd>\n<dt><strong>Comment</strong></dt>\n<dd><p>A multiline comment for the time series. Multiline comments are\nstored by specifying multiple adjacent Comment parameters, like\nthis:</p>\n<pre>Comment=This timeseries is extremely important\nComment=because the comment that describes it\nComment=spans five lines.\nComment=\nComment=These five lines form two paragraphs.\n</pre>\n<p>The Comment parameter is the only parameter where a blank value is\nsignificant and indicates an empty line, as can be seen in the\nexample above.</p>\n</dd>\n<dt><strong>Timezone</strong></dt>\n<dd><p>The time zone of the timestamps, in the format <tt>{XXX}\n<span class=\"pre\">(UTC{+HHmm})</span></tt>, where <em>XXX</em> is a time zone name and <em>+HHmm</em> is the\noffset from UTC. Examples are <tt>EET (UTC+0200)</tt> and <tt>VST\n<span class=\"pre\">(UTC-0430)</span></tt>.</p>\n<p>The <tt>TzinfoFromString</tt> utility (described above) can be used to\nconvert this string to a <a href=\"https://docs.python.org/3/library/datetime.html#tzinfo-objects\" rel=\"nofollow\">tzinfo</a> object.</p>\n</dd>\n<dt><strong>Time_step</strong></dt>\n<dd><p>In version 5, a pandas \u201cfrequency\u201d string such as <tt>10min</tt> (10\nminutes), <tt>H</tt> (hour), or <tt>2M</tt> (two months). If missing or empty,\nthe time series is without time step.</p>\n<p>Up to version 4, a comma-separated pair of integers; the number of\nminutes and months in the time step (one of the two must be zero).</p>\n<p>When reading from version 4 or earlier, the pair of integers is\nautomatically converted to a pandas \u201cfrequency\u201d string, so the\n<tt>time_step</tt> attribute of an <tt>HTimeseries</tt> object is always a\npandas \u201cfrequency\u201d string. Likewise, when writing to a version 4\nor earlier file, the pandas \u201cfrequency\u201d string is automatically\nconverted to the pair of integers.</p>\n</dd>\n<dt><strong>Timestamp_rounding</strong></dt>\n<dd><p>Deprecated. It might be found in old files, Version 4 or earlier,\nbut <tt>htimeseries</tt> will ignore it when reading and will never write\nit.</p>\n<p>A comma-separated pair of integers indicating the number of minutes\nand months that must be added to a round timestamp to get to the\nnominal timestamp.  For example, if an hourly time series has\ntimestamps that end in :13, such as 01:13, 02:13, etc., then its\nrounding is 13 minutes, 0 months, i.e., <tt>(13, 0)</tt>. Monthly time\nseries normally have a nominal timestamp of <tt>(0, 0)</tt>, the\ntimestamps usually being of the form 2008-02-01 00:00, meaning\n\u201cFebruary 2008\u201d and usually rendered by application software as \u201cFeb\n2008\u201d or \u201c2008-02\u201d. Annual timestamps have a nominal timestamp which\nnormally has 0 minutes, but may have nonzero months; for example, a\ncommon rounding in Greece is 9 months (0=January), which means that\nan annual timestamp is of the form 2008-10-01 00:00, normally\nrendered by application software as 2008-2009, and denoting the\nhydrological year 2008-2009.</p>\n<p><tt>timestamp_rounding</tt> may be None, meaning that the timestamps can\nbe irregular.</p>\n<p><em>Timestamp_rounding</em> is named differently in older versions. See the\n<em>Version</em> parameter above for more information.</p>\n</dd>\n<dt><strong>Timestamp_offset</strong></dt>\n<dd><p>Deprecated. It might be found in old files, Version 4 or earlier,\nbut <tt>htimeseries</tt> will ignore it when reading and will never write\nit.</p>\n<p>A comma-separated pair of integers indicating the number of minutes\nand months that must be added to the nominal timestamp to get to the\nactual timestamp. The timestamp offset for small time steps, such as\nup to daily, is usually zero, except if the nominal timestamp is the\nbeginning of an interval, in which case the timestamp offset is\nequal to the length of the time step, so that the actual timestamp\nis the end of the interval. For monthly and annual time steps, the\ntimestamp offset is usually 1 and 12 months respectively.  For a\nmonthly time series, a timestamp offset of (-475, 1) means that\n2003-11-01 00:00 (often rendered as 2003-11) denotes the interval\n2003-10-31 18:05 to 2003-11-30 18:05.</p>\n<p><em>Timestamp_offset</em> is named differently in older versions. See the\n<em>Version</em> parameter above for more information.</p>\n</dd>\n<dt><strong>Interval_type</strong></dt>\n<dd>Deprecated. Has one of the values <tt>sum</tt>, <tt>average</tt>, <tt>maximum</tt>,\n<tt>minimum</tt>, and <tt>vector_average</tt>. If absent it means that the\ntime series values are instantaneous, they do not refer to\nintervals.</dd>\n<dt><strong>Variable</strong></dt>\n<dd>A textual description of the variable, such as <tt>Temperature</tt> or\n<tt>Precipitation</tt>.</dd>\n<dt><strong>Precision</strong></dt>\n<dd>The precision of the time series values, in number of decimal digits\nafter the decimal separator. It can be negative; for example, a\nprecision of -2 indicates values accurate to the hundred, such as\n100, 200, 300 etc.</dd>\n<dt><strong>Location</strong>, <strong>Altitude</strong></dt>\n<dd>(Versions 3 and later.) <em>Location</em> is three numbers,\nspace-separated: abscissa, ordinate, and EPSG SRID. <em>Altitude</em> is\none or two space-separated numbers: the altitude and the EPSG SRID\nfor altitude. The altitude SRID may be omitted.</dd>\n</dl>\n</div>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>3.0.0 (2020-02-23)</h3>\n<ul>\n<li>Only Python&gt;=3.7 is now supported.</li>\n<li>When reading or writing a time series, it now checks that there are no\nduplicate timestamps and raises an exception if there are.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>2.0.5 (2020-01-15)</h3>\n<ul>\n<li>Fix pandas dependency to use pandas&lt;1, so that Python 3.5\ncompatibility is kept.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>2.0.4 (2020-01-08)</h3>\n<ul>\n<li>Fixed crash when saving in version 2 and the time step was a mere \u201cM\u201d\nor \u201cY\u201d without multiplier.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>2.0.3 (2020-01-05)</h3>\n<ul>\n<li>Default version when writing file is now latest.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>2.0.1 (2020-01-04)</h3>\n<ul>\n<li>Fixed error when the time step was empty.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>2.0.0 (2020-01-04)</h3>\n<ul>\n<li>Changed the way the time step is specified. Instead of\n\u201cminutes,months\u201d, it is now a pandas \u201cfrequency\u201d offset specification\nsuch as \u201c5min\u201d or \u201c3M\u201d.</li>\n<li>The timestamp_offset and timestamp_rounding parameters have been\nabolished.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.1.2 (2019-07-18)</h3>\n<ul>\n<li>Fixed some altitude-related bugs: 1) It would crash when trying to\nread a file that specified altitude but not location; 2) it wouldn\u2019t\nwrite altitude to the file it the altitude was zero.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.1.1 (2019-06-12)</h3>\n<ul>\n<li>Fixed crash when Timestamp_rounding=None or Timestamp_offset=None.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>1.1.0 (2019-06-08)</h3>\n<ul>\n<li>Added TzinfoFromString utility (moved in here from pthelma).</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>1.0.1 (2019-06-06)</h3>\n<ul>\n<li>Fixed error in the README (which prevented 1.0.0 from being uploaded\nto PyPi).</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>1.0.0 (2019-06-06)</h3>\n<ul>\n<li>API change: .read() is gone, now we use a single overloaded\nconstructor; either HTimeseries() or HTimeseries(dataframe) or\nHTimeseries(filelike).</li>\n<li>The columns and dtypes of .data are now standardized and properly\ncreated even for empty objects (created with HTimeseries()).</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.2.0 (2019-04-09)</h3>\n<ul>\n<li>Auto detect format when reading a file</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.1.0 (2019-01-14)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6683769, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "989f7856f705305717dba54cc966b288", "sha256": "52a6564c3c42b0e05d3bf35ee31f82586782cff15a6302d1627a180606ba33a5"}, "downloads": -1, "filename": "htimeseries-0.1.0.tar.gz", "has_sig": false, "md5_digest": "989f7856f705305717dba54cc966b288", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17337, "upload_time": "2019-01-14T13:30:44", "upload_time_iso_8601": "2019-01-14T13:30:44.418902Z", "url": "https://files.pythonhosted.org/packages/4b/fd/cd66a9290b460d6530d695a709249841e8069dd64663912f6444119fbf14/htimeseries-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "89cebebc7cd77afced5085cbf3fe8e03", "sha256": "6cc1503e8d34cde9df6369cb60f6fd1a35a8f82658b16eea013058e17a92882a"}, "downloads": -1, "filename": "htimeseries-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "89cebebc7cd77afced5085cbf3fe8e03", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10512, "upload_time": "2019-04-09T09:32:16", "upload_time_iso_8601": "2019-04-09T09:32:16.407981Z", "url": "https://files.pythonhosted.org/packages/8f/09/10dae25e40009fca9fb44af092ea4c1a2fae4669819d0be9098f81bdb312/htimeseries-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "088f533a60ca0c97f30007f05c68df23", "sha256": "71ba22cc4f6bb73b872ca984208878c8f9fbd3493d7f1aa4cf14df8b2a5be5fa"}, "downloads": -1, "filename": "htimeseries-0.2.0.tar.gz", "has_sig": false, "md5_digest": "088f533a60ca0c97f30007f05c68df23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17761, "upload_time": "2019-04-09T09:32:18", "upload_time_iso_8601": "2019-04-09T09:32:18.547218Z", "url": "https://files.pythonhosted.org/packages/a4/d5/d3486a82c81ca99ae9fa6ad0f9696248b49d31aae36d22ea1a2a300917bb/htimeseries-0.2.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "d24c6091ae91c073068c6df3db809c79", "sha256": "5074f07bdf0f02f74f553d6e1b0476c074595cf1adb49be36c61247821b5c1cb"}, "downloads": -1, "filename": "htimeseries-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d24c6091ae91c073068c6df3db809c79", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10743, "upload_time": "2019-06-06T10:26:38", "upload_time_iso_8601": "2019-06-06T10:26:38.622652Z", "url": "https://files.pythonhosted.org/packages/84/c3/f508d4b9ece9ed31d31037afa2d6b18dfb8152f19b0de768bcf067ee6a69/htimeseries-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edb817c82ebddccb33771bd3fbfbe0cb", "sha256": "cba8ce4d85567694aa473ebcda0c53638cd15602159ab7033a21e7be5a079745"}, "downloads": -1, "filename": "htimeseries-1.0.1.tar.gz", "has_sig": false, "md5_digest": "edb817c82ebddccb33771bd3fbfbe0cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18453, "upload_time": "2019-06-06T10:26:40", "upload_time_iso_8601": "2019-06-06T10:26:40.331060Z", "url": "https://files.pythonhosted.org/packages/e6/5a/0518801ddbf41704dd28860c34dccca8ee860b03aaadc4db44259d641a1d/htimeseries-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "467b3039eccdd58302cbd12abfa2f853", "sha256": "757e2a667402c666341d60e8425b1f3054d22571007c11da36c5dfa4a94466b1"}, "downloads": -1, "filename": "htimeseries-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "467b3039eccdd58302cbd12abfa2f853", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11746, "upload_time": "2019-06-08T09:23:10", "upload_time_iso_8601": "2019-06-08T09:23:10.507258Z", "url": "https://files.pythonhosted.org/packages/5b/99/f60f38d36cc974a11d9e76733717f428d27a493b4775d35a6e4f7d64c959/htimeseries-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9404918dedf78869b280b9bf01b3515", "sha256": "12815954de0b5916a20f838773ac1af9599f85576978bdcad03ddd8e1371bf1c"}, "downloads": -1, "filename": "htimeseries-1.1.0.tar.gz", "has_sig": false, "md5_digest": "f9404918dedf78869b280b9bf01b3515", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19786, "upload_time": "2019-06-08T09:23:12", "upload_time_iso_8601": "2019-06-08T09:23:12.198063Z", "url": "https://files.pythonhosted.org/packages/9c/16/5d711bb57836db98a48d3a36e1ed1f4c86a5870f47ebaf9a8724aa0eb959/htimeseries-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "7ae30d256a7dfd9218520bb02bc70734", "sha256": "c453beeddbd9ac09c15b548788e99f31e7232a16949fc373fa1779d97f9a31bd"}, "downloads": -1, "filename": "htimeseries-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7ae30d256a7dfd9218520bb02bc70734", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11785, "upload_time": "2019-06-12T11:44:47", "upload_time_iso_8601": "2019-06-12T11:44:47.911755Z", "url": "https://files.pythonhosted.org/packages/16/28/08dbc98380486a9fc8d698902d6f3441ce575e691c44863c66ca1c306b54/htimeseries-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aab710d7b085a70dfb3f4fd2f28b9bc1", "sha256": "2878f24a5e0e613b5d58b9a119a5ec32db44296ee51d4ee958dbd2a66b427d7c"}, "downloads": -1, "filename": "htimeseries-1.1.1.tar.gz", "has_sig": false, "md5_digest": "aab710d7b085a70dfb3f4fd2f28b9bc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19930, "upload_time": "2019-06-12T11:44:49", "upload_time_iso_8601": "2019-06-12T11:44:49.906818Z", "url": "https://files.pythonhosted.org/packages/58/cc/3e3e9a2177c41c859467abb61fd140ec6c1ee6823c97a42f219a0b9acc4e/htimeseries-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "1c1761cf2fa24862196f639478ebf76e", "sha256": "241e9b6541a34aaffa2286daa2ef3489e16e5912ff92f1b2820839681330c7ff"}, "downloads": -1, "filename": "htimeseries-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1c1761cf2fa24862196f639478ebf76e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12358, "upload_time": "2019-07-18T12:07:38", "upload_time_iso_8601": "2019-07-18T12:07:38.800000Z", "url": "https://files.pythonhosted.org/packages/8b/f3/9e2a2edda788e2d93effdd1f8ff0605d77266c68e0f3db4dd635064b0e70/htimeseries-1.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5004a99b51354e4a20176331c4febbdc", "sha256": "b32f59b29b4244aae9ca41a8e1c220314e6a07ffe907069f49b0063335880231"}, "downloads": -1, "filename": "htimeseries-1.1.2.tar.gz", "has_sig": false, "md5_digest": "5004a99b51354e4a20176331c4febbdc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24073, "upload_time": "2019-07-18T12:07:40", "upload_time_iso_8601": "2019-07-18T12:07:40.318786Z", "url": "https://files.pythonhosted.org/packages/6d/ec/03c5a9672d684f1f7f4defbfc61e5dadea713d7e57e748e7a9c4de359523/htimeseries-1.1.2.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "a05214929dd6e95827606c46933bc973", "sha256": "3038762fa6221efe678980cf91f2f3fbbea22dd4a888c273c45d10e37c5e4e41"}, "downloads": -1, "filename": "htimeseries-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a05214929dd6e95827606c46933bc973", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12405, "upload_time": "2020-01-04T07:46:40", "upload_time_iso_8601": "2020-01-04T07:46:40.539697Z", "url": "https://files.pythonhosted.org/packages/f9/ef/d7e4b04662c6a6db7a8beea8fe9b565c00023220d7e6c3771ea0bba1d186/htimeseries-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f8a517bc702f639016b82ce46b2de0f", "sha256": "1d254d08c44ec27a8639575d82ea26b83dba0a4c10c76bdc7a1c0ca3cfe86447"}, "downloads": -1, "filename": "htimeseries-2.0.0.tar.gz", "has_sig": false, "md5_digest": "8f8a517bc702f639016b82ce46b2de0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21338, "upload_time": "2020-01-04T07:46:42", "upload_time_iso_8601": "2020-01-04T07:46:42.398620Z", "url": "https://files.pythonhosted.org/packages/74/ce/f6c91e01e8b091005addd552f1c64ad7b217f79e3fdd83dc0272f5e786a3/htimeseries-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "be1a8345d2411e96dccf8cbccdb93d0b", "sha256": "a2013eae0c5b09c344f7b5dbdcab334eae9aaeb71d42810a787124cc4e8f0c04"}, "downloads": -1, "filename": "htimeseries-2.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "be1a8345d2411e96dccf8cbccdb93d0b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12444, "upload_time": "2020-01-04T21:20:39", "upload_time_iso_8601": "2020-01-04T21:20:39.093003Z", "url": "https://files.pythonhosted.org/packages/48/22/d70cb93a8c2d307e0e3830524701197862cb2f63e5a29a11b7d9251f21e3/htimeseries-2.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "730a99866fd2a6644f01c8df41b19850", "sha256": "d02dc5c9e52b54875dc606ed38e5962f4899a03879c9dfffa57789f32c4bf225"}, "downloads": -1, "filename": "htimeseries-2.0.1.tar.gz", "has_sig": false, "md5_digest": "730a99866fd2a6644f01c8df41b19850", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21400, "upload_time": "2020-01-04T21:20:41", "upload_time_iso_8601": "2020-01-04T21:20:41.154181Z", "url": "https://files.pythonhosted.org/packages/db/fb/5adf5adcba628dca10ac1e36fdcc4f631dd47fae7a015e81fef499a52e83/htimeseries-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "a77e22d3a8b40dbfa4a61648cfc8b5b1", "sha256": "e3ddc835d1d7d222921d4b054ca8bec578a8d9681c0e90cef56cc111867a376a"}, "downloads": -1, "filename": "htimeseries-2.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a77e22d3a8b40dbfa4a61648cfc8b5b1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12481, "upload_time": "2020-01-04T22:17:54", "upload_time_iso_8601": "2020-01-04T22:17:54.792960Z", "url": "https://files.pythonhosted.org/packages/9f/12/a3f7e5bdbb17e979e139133a8cd75f275f672b7708ff992e91fd26ceaefd/htimeseries-2.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd919dc447372e23296350cc949b55e6", "sha256": "85d1c3c60579f2b552fde7133a5ee258c737d429cd6f3d5166d76f4b97f11d36"}, "downloads": -1, "filename": "htimeseries-2.0.2.tar.gz", "has_sig": false, "md5_digest": "dd919dc447372e23296350cc949b55e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21487, "upload_time": "2020-01-04T22:17:56", "upload_time_iso_8601": "2020-01-04T22:17:56.408159Z", "url": "https://files.pythonhosted.org/packages/36/67/a4218056f61cace03ed045d36c3d7ba92572575d3bfd4182394a397ae586/htimeseries-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "6583ec47aacda537e54c590c9f81ac9e", "sha256": "66192bc31709c20b488e14ef347b9b3fea5968dc67acd48bf4d00c69a6d21852"}, "downloads": -1, "filename": "htimeseries-2.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6583ec47aacda537e54c590c9f81ac9e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12486, "upload_time": "2020-01-04T22:25:32", "upload_time_iso_8601": "2020-01-04T22:25:32.471597Z", "url": "https://files.pythonhosted.org/packages/42/22/3ed821244822b0b87fa07dbdd91c0f11f2c93a767c69d540d7c8bd0d7d4d/htimeseries-2.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2e92e36e59660a51fd8ffbdc5926580", "sha256": "04fc9335d9e41d85b0d5c191db131194af495810f8c0587cc75794fee193e8ca"}, "downloads": -1, "filename": "htimeseries-2.0.3.tar.gz", "has_sig": false, "md5_digest": "a2e92e36e59660a51fd8ffbdc5926580", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21506, "upload_time": "2020-01-04T22:25:34", "upload_time_iso_8601": "2020-01-04T22:25:34.503573Z", "url": "https://files.pythonhosted.org/packages/db/17/a6df8dc190bd5ef1e6c024c6c0f4e824765e784bfc81978ca78fa7667516/htimeseries-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "a06ddf1c05809fe3c0df1373b83a57c0", "sha256": "ff4cb21cad85c48c15b2f8b25f6de147e71e19ec8f67fb0542bbc778ee578b00"}, "downloads": -1, "filename": "htimeseries-2.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a06ddf1c05809fe3c0df1373b83a57c0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12546, "upload_time": "2020-01-08T20:20:53", "upload_time_iso_8601": "2020-01-08T20:20:53.925701Z", "url": "https://files.pythonhosted.org/packages/f2/e5/3f72826efecdf9f2ce4ab051270ec698c5aeb7e36ad4b1e73a780aaa6d81/htimeseries-2.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0ebf7899662092d25b49f917f9c09d6", "sha256": "ffcab9019d557f015d4624f4fefef3eb8059a0ed098b64380a9c5964fd4ce6e7"}, "downloads": -1, "filename": "htimeseries-2.0.4.tar.gz", "has_sig": false, "md5_digest": "e0ebf7899662092d25b49f917f9c09d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21883, "upload_time": "2020-01-08T20:20:55", "upload_time_iso_8601": "2020-01-08T20:20:55.981003Z", "url": "https://files.pythonhosted.org/packages/ac/af/391f0f86462551590eb999a73980e8f4c315cd25368dff7a3f39817e30ca/htimeseries-2.0.4.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "3eb81b2d058b5ca0a87ec5058c7a05d1", "sha256": "6ce83f3d627e2507c76844a580bfbd4b2924310df4f0adfc1545db2abb02b634"}, "downloads": -1, "filename": "htimeseries-2.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3eb81b2d058b5ca0a87ec5058c7a05d1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12596, "upload_time": "2020-01-15T06:41:53", "upload_time_iso_8601": "2020-01-15T06:41:53.324192Z", "url": "https://files.pythonhosted.org/packages/7f/83/835d1ae4c0ccfc5fe3f629dccbf8da566edf9145b62e44432b460542c0ec/htimeseries-2.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de5d09e389e68c651ad24b85f563cba9", "sha256": "ceaaaa831248c971eef6c5a6498a16f73c72a7a755f0ab2e8d20a770a09b7317"}, "downloads": -1, "filename": "htimeseries-2.0.5.tar.gz", "has_sig": false, "md5_digest": "de5d09e389e68c651ad24b85f563cba9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22003, "upload_time": "2020-01-15T06:41:55", "upload_time_iso_8601": "2020-01-15T06:41:55.282252Z", "url": "https://files.pythonhosted.org/packages/ca/2c/7ee9f44252d0b601534c9d65553ead9a3c486daebde0ec93384062f6b1a1/htimeseries-2.0.5.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "f6d0beee1d3ed47da9b7e38c82dbba97", "sha256": "9d937997c8a8aa0db2cb520a9b6a67e8b69bd7d75a36bd921a366deb4177db9d"}, "downloads": -1, "filename": "htimeseries-3.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f6d0beee1d3ed47da9b7e38c82dbba97", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13263, "upload_time": "2020-02-23T12:32:29", "upload_time_iso_8601": "2020-02-23T12:32:29.705726Z", "url": "https://files.pythonhosted.org/packages/75/a5/e15504b1e47c7063d791d38c34de58f34e4cab78019c93bf13159df7884d/htimeseries-3.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6797356da945fedc016ec7889010bbcf", "sha256": "be464bf43a8421795310adfd2ac5cedb0a228bd3c807a9e35cd1f69ac043b71a"}, "downloads": -1, "filename": "htimeseries-3.0.0.tar.gz", "has_sig": false, "md5_digest": "6797356da945fedc016ec7889010bbcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23040, "upload_time": "2020-02-23T12:32:31", "upload_time_iso_8601": "2020-02-23T12:32:31.782383Z", "url": "https://files.pythonhosted.org/packages/22/5b/8abbfc72e7358c19864dbd0636361ad2fff32c1a30095c907e6ed6251181/htimeseries-3.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f6d0beee1d3ed47da9b7e38c82dbba97", "sha256": "9d937997c8a8aa0db2cb520a9b6a67e8b69bd7d75a36bd921a366deb4177db9d"}, "downloads": -1, "filename": "htimeseries-3.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f6d0beee1d3ed47da9b7e38c82dbba97", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13263, "upload_time": "2020-02-23T12:32:29", "upload_time_iso_8601": "2020-02-23T12:32:29.705726Z", "url": "https://files.pythonhosted.org/packages/75/a5/e15504b1e47c7063d791d38c34de58f34e4cab78019c93bf13159df7884d/htimeseries-3.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6797356da945fedc016ec7889010bbcf", "sha256": "be464bf43a8421795310adfd2ac5cedb0a228bd3c807a9e35cd1f69ac043b71a"}, "downloads": -1, "filename": "htimeseries-3.0.0.tar.gz", "has_sig": false, "md5_digest": "6797356da945fedc016ec7889010bbcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23040, "upload_time": "2020-02-23T12:32:31", "upload_time_iso_8601": "2020-02-23T12:32:31.782383Z", "url": "https://files.pythonhosted.org/packages/22/5b/8abbfc72e7358c19864dbd0636361ad2fff32c1a30095c907e6ed6251181/htimeseries-3.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:20 2020"}