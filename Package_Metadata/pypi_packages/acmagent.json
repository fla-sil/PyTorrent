{"info": {"author": "Bernard Baltrusaitis", "author_email": "bernard@runawaylover.info", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": ".. image:: https://travis-ci.org/b-b3rn4rd/acmagent.svg?branch=master\n    :target: https://travis-ci.org/b-b3rn4rd/acmagent\n\n.. image:: https://coveralls.io/repos/github/b-b3rn4rd/acmagent/badge.svg?branch=master\n    :target: https://coveralls.io/github/b-b3rn4rd/acmagent?branch=master\n\n\n======================================\nACMagent - automates ACM certificates\n======================================\nACM agents provides functionality to request and confirm ACM certificates using the CLI interface\n\nInstallation\n############\n\n::\n\n    $ pip install acmagent\n\n\nConfiguration\n#############\nIn order to approve ACM certificates, create and configure acmagent IMAP credentials file. By default ``acmagent`` loads configuration ``.acmagent`` file from the user's home folder for example: `/home/john.doe/.acmagent`. However, you have an option to specify a custom path to the credentials file.\n\n::\n\n    # /home/john.doe/.acmagent\n\n    username: username@example.com\n    server: imap.example.com\n    password: mysecretpassword\n\nUsage\n#####\n\nIssuing ACM certificates\n------------------------\n\nThe simplest option to request ACM certificate is to specify ``--domain-name`` and/or ``--validation-domain`` parameters.\n\n::\n\n    $ acmagent request-certificate --domain-name *.dev.example.com\n    12345678-1234-1234-1234-123456789012\n\n\n::\n\n    $ acmagent request-certificate --domain-name *.dev.example.com --validation-domain example.com\n    12345678-1234-1234-1234-123456789012\n\n\nOptionally, if you need to generate a certificate for multiple domain names you can provide the ``--alternative-names`` parameter to specify **space separated** alternative domain names.\n\n::\n\n    $ acmagent request-certificate --domain-name dev.example.com --validation-domain example.com --alternative-names  www.dev.example.com ftp.dev.example.com\n    12345678-1234-1234-1234-123456789012\n\nACMAgent offers an option to specify JSON input file instead of typing them at the command line using ``--cli-input-json`` parameter.\n\n- Generate CLI skeleton output\n\n::\n\n    $ acmagent request-certificate --generate-cli-skeleton &> certificate.json\n\n\n::\n\n    $ cat certificate.json\n    {\n        \"DomainName\": \"\",\n        \"SubjectAlternativeNames\": [],\n        \"ValidationDomain\": \"\"\n    }\n\n\n- Modify generated skeleton file using your preferred method\n- Using ``--cli-input-json`` parameter specify path fo the ``certificate.json`` file\n\n::\n\n    $ acmagent request-certificate --cli-input-json file:./certificate.json\n\n\n**Output**\n\nThe `request-certificate` outputs ACM certificate id, it's the last part of the ARN arn:aws:acm:us-east-1:123456789012:certificate/**12345678-1234-1234-1234-123456789012** you will need that id for a certificate approval process.\n\nApproving ACM certificates\n--------------------------\n\n*Before approving ACM issued certificate, please ensure that the credentials file has been setup.*\n*For gmail and yahoo enable access for 'less secure apps' (https://support.google.com/accounts/answer/6010255?hl=en-GB&authuser=1)*\n\nconfirm-certificate\n^^^^^^^^^^^^^^^^^^^\n\n::\n\n    $ acmagent confirm-certificate --help\n    usage: acmagent confirm-certificate [-h] --certificate-id CERTIFICATE_ID\n                                    [--wait WAIT] [--attempts ATTEMPTS]\n                                    [--debug] [--credentials CREDENTIALS]\n    optional arguments:\n    -h, --help                      show this help message and exit\n    --certificate-id CERTIFICATE_ID Certificate id\n    --wait WAIT                     Timeout in seconds between querying IMAP server\n    --attempts ATTEMPTS             Number of attempts to query IMAP server\n    --debug (boolean)               Send logging to standard output\n    --credentials CREDENTIALS       Explicitly provide IMAP credentials file\n\nExamples\n^^^^^^^^\nConfirming a certificate using the default settings:\n\n::\n\n    $ acmagent confirm-certificate --certificate-id 12345678-1234-1234-1234-123456789012\n\n\nHowever, for most scenarios the recommended approach to specify custom values for ``--wait`` and ``--attempts`` parameters tailored for your IMAP server.\n\n::\n\n    $ acmagent confirm-certificate --wait 10 --attempts 6 --certificate-id 12345678-1234-1234-1234-123456789012\n\n\nIn the situations when you can't use the default IMAP credentials file provide the ``--credentials`` parameter\n\n::\n\n    $ acmagent confirm-certificate --certificate-id 12345678-1234-1234-1234-123456789012 --credentials file:///var/lib/jenkins/.acmagent\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/b-b3rn4rd/acmagent", "keywords": "acm aws ssl certificates", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "acmagent", "package_url": "https://pypi.org/project/acmagent/", "platform": "", "project_url": "https://pypi.org/project/acmagent/", "project_urls": {"Homepage": "https://github.com/b-b3rn4rd/acmagent"}, "release_url": "https://pypi.org/project/acmagent/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "ACM agent - automates ACM certificates", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/b-b3rn4rd/acmagent\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/b-b3rn4rd/acmagent.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/065caff68b5accde3330aac26fc94ce958d86d28/68747470733a2f2f7472617669732d63692e6f72672f622d6233726e3472642f61636d6167656e742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/b-b3rn4rd/acmagent?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/b-b3rn4rd/acmagent/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e40508756e2ee37662ee0de950f0093bffbb1aa/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f622d6233726e3472642f61636d6167656e742f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"acmagent-automates-acm-certificates\">\n<h2>ACMagent - automates ACM certificates</h2>\n<p>ACM agents provides functionality to request and confirm ACM certificates using the CLI interface</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>$ pip install acmagent\n</pre>\n</div>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>In order to approve ACM certificates, create and configure acmagent IMAP credentials file. By default <tt>acmagent</tt> loads configuration <tt>.acmagent</tt> file from the user\u2019s home folder for example: <cite>/home/john.doe/.acmagent</cite>. However, you have an option to specify a custom path to the credentials file.</p>\n<pre># /home/john.doe/.acmagent\n\nusername: username@example.com\nserver: imap.example.com\npassword: mysecretpassword\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<div id=\"issuing-acm-certificates\">\n<h4>Issuing ACM certificates</h4>\n<p>The simplest option to request ACM certificate is to specify <tt><span class=\"pre\">--domain-name</span></tt> and/or <tt><span class=\"pre\">--validation-domain</span></tt> parameters.</p>\n<pre>$ acmagent request-certificate --domain-name *.dev.example.com\n12345678-1234-1234-1234-123456789012\n</pre>\n<pre>$ acmagent request-certificate --domain-name *.dev.example.com --validation-domain example.com\n12345678-1234-1234-1234-123456789012\n</pre>\n<p>Optionally, if you need to generate a certificate for multiple domain names you can provide the <tt><span class=\"pre\">--alternative-names</span></tt> parameter to specify <strong>space separated</strong> alternative domain names.</p>\n<pre>$ acmagent request-certificate --domain-name dev.example.com --validation-domain example.com --alternative-names  www.dev.example.com ftp.dev.example.com\n12345678-1234-1234-1234-123456789012\n</pre>\n<p>ACMAgent offers an option to specify JSON input file instead of typing them at the command line using <tt><span class=\"pre\">--cli-input-json</span></tt> parameter.</p>\n<ul>\n<li>Generate CLI skeleton output</li>\n</ul>\n<pre>$ acmagent request-certificate --generate-cli-skeleton &amp;&gt; certificate.json\n</pre>\n<pre>$ cat certificate.json\n{\n    \"DomainName\": \"\",\n    \"SubjectAlternativeNames\": [],\n    \"ValidationDomain\": \"\"\n}\n</pre>\n<ul>\n<li>Modify generated skeleton file using your preferred method</li>\n<li>Using <tt><span class=\"pre\">--cli-input-json</span></tt> parameter specify path fo the <tt>certificate.json</tt> file</li>\n</ul>\n<pre>$ acmagent request-certificate --cli-input-json file:./certificate.json\n</pre>\n<p><strong>Output</strong></p>\n<p>The <cite>request-certificate</cite> outputs ACM certificate id, it\u2019s the last part of the ARN arn:aws:acm:us-east-1:123456789012:certificate/<strong>12345678-1234-1234-1234-123456789012</strong> you will need that id for a certificate approval process.</p>\n</div>\n<div id=\"approving-acm-certificates\">\n<h4>Approving ACM certificates</h4>\n<p><em>Before approving ACM issued certificate, please ensure that the credentials file has been setup.</em>\n<em>For gmail and yahoo enable access for \u2018less secure apps\u2019 (https://support.google.com/accounts/answer/6010255?hl=en-GB&amp;authuser=1)</em></p>\n<div id=\"confirm-certificate\">\n<h5>confirm-certificate</h5>\n<pre>$ acmagent confirm-certificate --help\nusage: acmagent confirm-certificate [-h] --certificate-id CERTIFICATE_ID\n                                [--wait WAIT] [--attempts ATTEMPTS]\n                                [--debug] [--credentials CREDENTIALS]\noptional arguments:\n-h, --help                      show this help message and exit\n--certificate-id CERTIFICATE_ID Certificate id\n--wait WAIT                     Timeout in seconds between querying IMAP server\n--attempts ATTEMPTS             Number of attempts to query IMAP server\n--debug (boolean)               Send logging to standard output\n--credentials CREDENTIALS       Explicitly provide IMAP credentials file\n</pre>\n</div>\n<div id=\"examples\">\n<h5>Examples</h5>\n<p>Confirming a certificate using the default settings:</p>\n<pre>$ acmagent confirm-certificate --certificate-id 12345678-1234-1234-1234-123456789012\n</pre>\n<p>However, for most scenarios the recommended approach to specify custom values for <tt><span class=\"pre\">--wait</span></tt> and <tt><span class=\"pre\">--attempts</span></tt> parameters tailored for your IMAP server.</p>\n<pre>$ acmagent confirm-certificate --wait 10 --attempts 6 --certificate-id 12345678-1234-1234-1234-123456789012\n</pre>\n<p>In the situations when you can\u2019t use the default IMAP credentials file provide the <tt><span class=\"pre\">--credentials</span></tt> parameter</p>\n<pre>$ acmagent confirm-certificate --certificate-id 12345678-1234-1234-1234-123456789012 --credentials file:///var/lib/jenkins/.acmagent\n</pre>\n</div>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2821466, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "7feaeaea8968863851470c775cacdfd8", "sha256": "f921e65254664617e19bcf51b5d399d4ae43e2dd647215accf63707c1021d06f"}, "downloads": -1, "filename": "acmagent-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7feaeaea8968863851470c775cacdfd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8610, "upload_time": "2017-04-09T06:15:49", "upload_time_iso_8601": "2017-04-09T06:15:49.608491Z", "url": "https://files.pythonhosted.org/packages/db/72/8e2c584ea8b3c6080cf2cdc9d85fba26f9d11ed7cfc82ff3ffa0f116dd5a/acmagent-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "ec0b9b05077e6eda8f1eba751cf1d750", "sha256": "43f40e76e8fb84f200ecf891c7b5ac105eb0da00398ab0a1f520d6687bd43c72"}, "downloads": -1, "filename": "acmagent-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ec0b9b05077e6eda8f1eba751cf1d750", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8613, "upload_time": "2017-04-09T11:09:57", "upload_time_iso_8601": "2017-04-09T11:09:57.368595Z", "url": "https://files.pythonhosted.org/packages/04/d5/c028a0388c31cb2d7802dadff7d089e911f8a7c15ec364b127b6bbf84a1e/acmagent-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "a7ad59165ea69d1c56ad47d308855c26", "sha256": "82e84c98774661c5eaef2eed545b8cbcc5a15fa4260d84a608b5d0773b0e12f9"}, "downloads": -1, "filename": "acmagent-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a7ad59165ea69d1c56ad47d308855c26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8744, "upload_time": "2017-04-22T09:47:18", "upload_time_iso_8601": "2017-04-22T09:47:18.280206Z", "url": "https://files.pythonhosted.org/packages/5c/77/ca361210ea70fce83e7a379d4b49eceb9ab063c17a7411f86f72e93dc482/acmagent-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a7ad59165ea69d1c56ad47d308855c26", "sha256": "82e84c98774661c5eaef2eed545b8cbcc5a15fa4260d84a608b5d0773b0e12f9"}, "downloads": -1, "filename": "acmagent-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a7ad59165ea69d1c56ad47d308855c26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8744, "upload_time": "2017-04-22T09:47:18", "upload_time_iso_8601": "2017-04-22T09:47:18.280206Z", "url": "https://files.pythonhosted.org/packages/5c/77/ca361210ea70fce83e7a379d4b49eceb9ab063c17a7411f86f72e93dc482/acmagent-1.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:35 2020"}