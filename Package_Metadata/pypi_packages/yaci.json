{"info": {"author": "Aquil H. Abdullah", "author_email": "aquil.abdullah@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Yet Another Cache Implementation\n\n[![Build Status](https://travis-ci.com/aabdullah-bos/yaci.svg?branch=master)](https://travis-ci.com/aabdullah-bos/yaci)\n\nSo you may be asking \"Is there really a need for yet another cache\nimplementation?\" I mean we already have:\n- [functools.lru_cache (Python 3.2 or greater)](https://docs.python.org/3.7/library/functools.html#functools.lru_cache) - Decorator to wrap a function with a memoizing callable that saves up to the maxsize most recent calls.\n- the [memoize pattern](https://dbader.org/blog/python-memoization)\n- [pymemcache](https://github.com/pinterest/pymemcache) - A comprehensive, fast, pure-Python memcached client\n- [DiskCache](http://www.grantjenks.com/docs/diskcache/) - An Apache2 licensed disk and file backed cache library, written in pure-Python\n- [minicache](https://github.com/duboviy/minicache) - Python memory caching utilities for Python 2 and 3 versions, also PyPy.\n- [pylibmc](https://github.com/lericson/pylibmc) - A Python wrapper around the libmemcached interface from TangentOrg.\n- the [memento pattern](http://code.activestate.com/recipes/286132-memento-design-pattern-in-python/) - a way of saving state\n\nThe answer is no, there are plenty of caching libraries and patterns out\nthere and yet another one isn't necessary, so with that being said,\nhere is **Y**et **A**nother **C**aching **I**nterface.\n\n## Motivation\n\nI needed a caching interface that allowed me to change or implement\ndifferent storage backends as needed. I also wanted a caching implementation whose interface closely resembled the Python `collections.MutableMapping` interface, so that I could easily switch between dictionaries and other storage backends.\n\n## Installing as a `pip`\n\nTo install the package run: `pip install yaci`\n\n## Developing Using Docker\n\nThe docker directory contains a Dockerfile that can be used to build a docker image which can be used for development. See the README.md in the docker directory for more help.\n\n## Using Pipenv\n\nIf you'd like to use Pipenv to mange this package in a development environment just run the command `pipenv install` in the top level of the repository.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "yaci", "package_url": "https://pypi.org/project/yaci/", "platform": "", "project_url": "https://pypi.org/project/yaci/", "project_urls": null, "release_url": "https://pypi.org/project/yaci/0.5.2/", "requires_dist": ["six"], "requires_python": "", "summary": "Yet Another Cache Implementation", "version": "0.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Yet Another Cache Implementation</h1>\n<p><a href=\"https://travis-ci.com/aabdullah-bos/yaci\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b298c829d2de7924d023fa9b7d3773d3113314c8/68747470733a2f2f7472617669732d63692e636f6d2f61616264756c6c61682d626f732f796163692e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>So you may be asking \"Is there really a need for yet another cache\nimplementation?\" I mean we already have:</p>\n<ul>\n<li><a href=\"https://docs.python.org/3.7/library/functools.html#functools.lru_cache\" rel=\"nofollow\">functools.lru_cache (Python 3.2 or greater)</a> - Decorator to wrap a function with a memoizing callable that saves up to the maxsize most recent calls.</li>\n<li>the <a href=\"https://dbader.org/blog/python-memoization\" rel=\"nofollow\">memoize pattern</a></li>\n<li><a href=\"https://github.com/pinterest/pymemcache\" rel=\"nofollow\">pymemcache</a> - A comprehensive, fast, pure-Python memcached client</li>\n<li><a href=\"http://www.grantjenks.com/docs/diskcache/\" rel=\"nofollow\">DiskCache</a> - An Apache2 licensed disk and file backed cache library, written in pure-Python</li>\n<li><a href=\"https://github.com/duboviy/minicache\" rel=\"nofollow\">minicache</a> - Python memory caching utilities for Python 2 and 3 versions, also PyPy.</li>\n<li><a href=\"https://github.com/lericson/pylibmc\" rel=\"nofollow\">pylibmc</a> - A Python wrapper around the libmemcached interface from TangentOrg.</li>\n<li>the <a href=\"http://code.activestate.com/recipes/286132-memento-design-pattern-in-python/\" rel=\"nofollow\">memento pattern</a> - a way of saving state</li>\n</ul>\n<p>The answer is no, there are plenty of caching libraries and patterns out\nthere and yet another one isn't necessary, so with that being said,\nhere is <strong>Y</strong>et <strong>A</strong>nother <strong>C</strong>aching <strong>I</strong>nterface.</p>\n<h2>Motivation</h2>\n<p>I needed a caching interface that allowed me to change or implement\ndifferent storage backends as needed. I also wanted a caching implementation whose interface closely resembled the Python <code>collections.MutableMapping</code> interface, so that I could easily switch between dictionaries and other storage backends.</p>\n<h2>Installing as a <code>pip</code></h2>\n<p>To install the package run: <code>pip install yaci</code></p>\n<h2>Developing Using Docker</h2>\n<p>The docker directory contains a Dockerfile that can be used to build a docker image which can be used for development. See the README.md in the docker directory for more help.</p>\n<h2>Using Pipenv</h2>\n<p>If you'd like to use Pipenv to mange this package in a development environment just run the command <code>pipenv install</code> in the top level of the repository.</p>\n\n          </div>"}, "last_serial": 6238700, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "4776a935185e2147426c041059a313cd", "sha256": "732595b85bc461d245108806c5cde7c184c922ee4f17bfccaec57d22af4a0b5e"}, "downloads": -1, "filename": "yaci-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4776a935185e2147426c041059a313cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5441, "upload_time": "2019-01-17T17:53:37", "upload_time_iso_8601": "2019-01-17T17:53:37.168866Z", "url": "https://files.pythonhosted.org/packages/2c/46/41a2931ad570e0894858fc78756fd1d3d7ae5851f3017a862745ff184f87/yaci-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e825519f0855dc2b8c87de546283347", "sha256": "bc99829d8f0af05eff6513286a65b0454878a2b4d244578b60f7cb54f29e7a94"}, "downloads": -1, "filename": "yaci-0.5.0.tar.gz", "has_sig": false, "md5_digest": "3e825519f0855dc2b8c87de546283347", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3597, "upload_time": "2019-01-17T17:53:39", "upload_time_iso_8601": "2019-01-17T17:53:39.512767Z", "url": "https://files.pythonhosted.org/packages/3e/02/7382b6095bb7862f8a09b3518499a1499d78e8201bd06aee0f41e9abff0a/yaci-0.5.0.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "c45fc21a0908227e2b68591df0c9c8eb", "sha256": "7226f2146a07a3c0a2be7806033e148eff52e629c0daa5d26612d54ce8df7ba8"}, "downloads": -1, "filename": "yaci-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c45fc21a0908227e2b68591df0c9c8eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8749, "upload_time": "2019-12-04T02:13:02", "upload_time_iso_8601": "2019-12-04T02:13:02.175170Z", "url": "https://files.pythonhosted.org/packages/7d/16/1cbb7e11891fef9e9d0edcb4b60cc63c36526b3401c8c6cbcc02c1f67b32/yaci-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01dc256016adcfc00b3b3296e9d8b60e", "sha256": "f622b52fb9a8556217c0287d4e81fa189008401910895b10d429205fdb0ffe66"}, "downloads": -1, "filename": "yaci-0.5.2.tar.gz", "has_sig": false, "md5_digest": "01dc256016adcfc00b3b3296e9d8b60e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5932, "upload_time": "2019-12-04T02:13:03", "upload_time_iso_8601": "2019-12-04T02:13:03.787595Z", "url": "https://files.pythonhosted.org/packages/7f/88/a95b3d6aadbf4891e835908188043e0614c2cb964187c48a2767c44c2676/yaci-0.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c45fc21a0908227e2b68591df0c9c8eb", "sha256": "7226f2146a07a3c0a2be7806033e148eff52e629c0daa5d26612d54ce8df7ba8"}, "downloads": -1, "filename": "yaci-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c45fc21a0908227e2b68591df0c9c8eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8749, "upload_time": "2019-12-04T02:13:02", "upload_time_iso_8601": "2019-12-04T02:13:02.175170Z", "url": "https://files.pythonhosted.org/packages/7d/16/1cbb7e11891fef9e9d0edcb4b60cc63c36526b3401c8c6cbcc02c1f67b32/yaci-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01dc256016adcfc00b3b3296e9d8b60e", "sha256": "f622b52fb9a8556217c0287d4e81fa189008401910895b10d429205fdb0ffe66"}, "downloads": -1, "filename": "yaci-0.5.2.tar.gz", "has_sig": false, "md5_digest": "01dc256016adcfc00b3b3296e9d8b60e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5932, "upload_time": "2019-12-04T02:13:03", "upload_time_iso_8601": "2019-12-04T02:13:03.787595Z", "url": "https://files.pythonhosted.org/packages/7f/88/a95b3d6aadbf4891e835908188043e0614c2cb964187c48a2767c44c2676/yaci-0.5.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:23:51 2020"}