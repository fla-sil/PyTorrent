{"info": {"author": "George L Fulk", "author_email": "fulkgl@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Games/Entertainment", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# PyBaccarat\nPlay the card game Baccarat\n\nTo check out a copy of the source:\n    mkdir /github.com/fulkgl\n    cd /github.com/fulkgl\n    git clone https://github.com/fulkgl/PyBaccarat.git\n\nThis is an implementation of the card game Baccarat. It includes the code\nneeded to play a game interactively, replay a historical game, or play a\ngame with a particular system.\n\nThese programs have been built and tested with versions:\n    Python 2.7.13\n    Python 3.6.4\n\n<h1>Updating this code</h1>\n<ol compact>\n<li>GIT (source control library). Check out a copy of the code.\n<br>To keep the origin and structure of the code obvious, I start\nwith a $BASE (%BASE%) location. It can be a location of your choosing.\nAssign an environment variable to define the starting base location:\nin Linux <code>export BASE=/home/george</code> or Windows\n<code>set BASE=\\users\\george</code>. Windows will use <code>%BASE%</code>\ninstead of <code>$BASE</code> and the back-slash for directory\nseparator instead of forward slash.\n</li><ol compact>\n<li>mkdir $BASE/github.com/fulkgl</li>\n<li>chdir $BASE/github.com/fulkgl</li>\n<li>git clone https://github.com/fulkgl/PyBaccarat.git</li>\n</ol>\n<li>Clean up temp files.</li>\n<ol compact>\n<li>del /s/q build dist pybaccarat.egg-info</li>\n<li>rmdir /s/q build dist pybaccarat.egg-info</li>\n<li>del /s/q tests\\*.pyc pybaccarat\\*.pyc</li>\n</ol>\n<li>Build the code</li>\n<br>python setup.py build bdist sdist\n</ol>\n\n\n\n\n\nRun unit tests:\n    cd base-location\n    <br>python tests\\unittest_card.py\n    <br>python tests\\unittest_shoe.py\n    <br>python tests\\unittest_hand.py\n    <br>python tests\\unittest_scoreboard.py\n\nTo check the coding standards and minor quality check:\n    cd base-location\n    <br>pycodestyle pybaccarat\\playingcards.py\n    <br>pycodestyle pybaccarat\\baccarat.py\n    <br>pycodestyle pybaccarat\\baccaratsystems.py\n    <br>pycodestyle bin\\play_baccarat.py\n    <br>pylint --rcfile=\\usr\\local\\bin\\pylint2.rc pybaccarat\\playingcards.py\n    <br>pylint --rcfile=\\usr\\local\\bin\\pylint2.rc pybaccarat\\baccarat.py\n    <br>pylint --rcfile=\\usr\\local\\bin\\pylint2.rc pybaccarat\\baccaratsystems.py\n    <br>pylint --rcfile=\\usr\\local\\bin\\pylint2.rc bin\\play_baccarat.py\n\nTo run the build and make distribution packages:\n    cd base-location\n    <br>python setup.py sdist bdist_egg\n    <br>rem dist/* contains source and binary distribution packages\n\n<h2>Updating this code</h2>\n<ol compact>\n\n\n<ol compact>\n<li><B>git clone https://github.com/fulkgl/PyBaccarat.git</B>\n<BR>This will make a copy of code from a remote host to local, \nsetting up 3 trees (working directory, index, and head). \nWhat you normally see is the working directory. The index and head\ntrees are inside the .git directory.</li>\n<li><b>git status</b><BR>Shows you files missing from git and files\nthat are changed.</li>\n<li><b>git diff README.md</B><br>Git diff will show you\nchanged files differences.\n<li><b>git add README.md</b><br>Use the git add\ncommand to move changes from the working directory to the index.\nFiles that are new from the repo are initially checked in with\nthe git add command. Files that have been changed are also \ncheck in this way. You often use git add one file at a time since\nyou specify each file with this command. Use \"git reset file\"\nto reverse the effects of a git add command.</li>\n<li><b>git commit -m \"description\"</b><br>Use the git commit \ncommand to move changes from the index to the head.\nYou will do this for all the git added files once.\nUse \"git checkout\" to reverse the effects of a git commit.</li>\n<li><b>git push origin master</b><br>Use the git push command to \nmove changes from the head to\nthe remote host.</li>\n<li>git init is used to create a new repo the first time.\nAlso a git remote add origin is used the first time to\nassociate a connection to the remote host.</li>\n<li><B>browser https://github.com/fulkgl/PyBaccarat</B>\n<br>See that the latest things look correct on the webpage.</li>\n</ol>\n\n<br>twine upload dist/* -r legacy\n<li>update PiPy</li>\n<li>build, test, install</li>\n@rem python setup.py build bdist sdist upload\n</ol>", "description_content_type": "", "docs_url": null, "download_url": "https://pypi.python.org/packages/source/P/pybaccarat/pybaccarat-0.18.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fulkgl/PyBaccarat", "keywords": "baccarat,game,playing cards,cards,card game", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pybaccarat", "package_url": "https://pypi.org/project/pybaccarat/", "platform": "", "project_url": "https://pypi.org/project/pybaccarat/", "project_urls": {"Download": "https://pypi.python.org/packages/source/P/pybaccarat/pybaccarat-0.18.tar.gz", "Homepage": "https://github.com/fulkgl/PyBaccarat"}, "release_url": "https://pypi.org/project/pybaccarat/0.18/", "requires_dist": null, "requires_python": "", "summary": "Play the card game Baccarat", "version": "0.18", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># PyBaccarat\nPlay the card game Baccarat</p>\n<dl>\n<dt>To check out a copy of the source:</dt>\n<dd>mkdir /github.com/fulkgl\ncd /github.com/fulkgl\ngit clone <a href=\"https://github.com/fulkgl/PyBaccarat.git\" rel=\"nofollow\">https://github.com/fulkgl/PyBaccarat.git</a></dd>\n</dl>\n<p>This is an implementation of the card game Baccarat. It includes the code\nneeded to play a game interactively, replay a historical game, or play a\ngame with a particular system.</p>\n<dl>\n<dt>These programs have been built and tested with versions:</dt>\n<dd>Python 2.7.13\nPython 3.6.4</dd>\n</dl>\n<p>&lt;h1&gt;Updating this code&lt;/h1&gt;\n&lt;ol compact&gt;\n&lt;li&gt;GIT (source control library). Check out a copy of the code.\n&lt;br&gt;To keep the origin and structure of the code obvious, I start\nwith a $BASE (%BASE%) location. It can be a location of your choosing.\nAssign an environment variable to define the starting base location:\nin Linux &lt;code&gt;export BASE=/home/george&lt;/code&gt; or Windows\n&lt;code&gt;set BASE=usersgeorge&lt;/code&gt;. Windows will use &lt;code&gt;%BASE%&lt;/code&gt;\ninstead of &lt;code&gt;$BASE&lt;/code&gt; and the back-slash for directory\nseparator instead of forward slash.\n&lt;/li&gt;&lt;ol compact&gt;\n&lt;li&gt;mkdir $BASE/github.com/fulkgl&lt;/li&gt;\n&lt;li&gt;chdir $BASE/github.com/fulkgl&lt;/li&gt;\n&lt;li&gt;git clone <a href=\"https://github.com/fulkgl/PyBaccarat\" rel=\"nofollow\">https://github.com/fulkgl/PyBaccarat</a>.git&lt;/li&gt;\n&lt;/ol&gt;\n&lt;li&gt;Clean up temp files.&lt;/li&gt;\n&lt;ol compact&gt;\n&lt;li&gt;del /s/q build dist pybaccarat.egg-info&lt;/li&gt;\n&lt;li&gt;rmdir /s/q build dist pybaccarat.egg-info&lt;/li&gt;\n&lt;li&gt;del /s/q tests*.pyc pybaccarat*.pyc&lt;/li&gt;\n&lt;/ol&gt;\n&lt;li&gt;Build the code&lt;/li&gt;\n&lt;br&gt;python setup.py build bdist sdist\n&lt;/ol&gt;</p>\n<dl>\n<dt>Run unit tests:</dt>\n<dd>cd base-location\n&lt;br&gt;python testsunittest_card.py\n&lt;br&gt;python testsunittest_shoe.py\n&lt;br&gt;python testsunittest_hand.py\n&lt;br&gt;python testsunittest_scoreboard.py</dd>\n<dt>To check the coding standards and minor quality check:</dt>\n<dd>cd base-location\n&lt;br&gt;pycodestyle pybaccaratplayingcards.py\n&lt;br&gt;pycodestyle pybaccaratbaccarat.py\n&lt;br&gt;pycodestyle pybaccaratbaccaratsystems.py\n&lt;br&gt;pycodestyle binplay_baccarat.py\n&lt;br&gt;pylint \u2013rcfile=usrlocalbinpylint2.rc pybaccaratplayingcards.py\n&lt;br&gt;pylint \u2013rcfile=usrlocalbinpylint2.rc pybaccaratbaccarat.py\n&lt;br&gt;pylint \u2013rcfile=usrlocalbinpylint2.rc pybaccaratbaccaratsystems.py\n&lt;br&gt;pylint \u2013rcfile=usrlocalbinpylint2.rc binplay_baccarat.py</dd>\n<dt>To run the build and make distribution packages:</dt>\n<dd>cd base-location\n&lt;br&gt;python setup.py sdist bdist_egg\n&lt;br&gt;rem dist/* contains source and binary distribution packages</dd>\n</dl>\n<p>&lt;h2&gt;Updating this code&lt;/h2&gt;\n&lt;ol compact&gt;</p>\n<p>&lt;ol compact&gt;\n&lt;li&gt;&lt;B&gt;git clone <a href=\"https://github.com/fulkgl/PyBaccarat\" rel=\"nofollow\">https://github.com/fulkgl/PyBaccarat</a>.git&lt;/B&gt;\n&lt;BR&gt;This will make a copy of code from a remote host to local,\nsetting up 3 trees (working directory, index, and head).\nWhat you normally see is the working directory. The index and head\ntrees are inside the .git directory.&lt;/li&gt;\n&lt;li&gt;&lt;b&gt;git status&lt;/b&gt;&lt;BR&gt;Shows you files missing from git and files\nthat are changed.&lt;/li&gt;\n&lt;li&gt;&lt;b&gt;git diff README.md&lt;/B&gt;&lt;br&gt;Git diff will show you\nchanged files differences.\n&lt;li&gt;&lt;b&gt;git add README.md&lt;/b&gt;&lt;br&gt;Use the git add\ncommand to move changes from the working directory to the index.\nFiles that are new from the repo are initially checked in with\nthe git add command. Files that have been changed are also\ncheck in this way. You often use git add one file at a time since\nyou specify each file with this command. Use \u201cgit reset file\u201d\nto reverse the effects of a git add command.&lt;/li&gt;\n&lt;li&gt;&lt;b&gt;git commit -m \u201cdescription\u201d&lt;/b&gt;&lt;br&gt;Use the git commit\ncommand to move changes from the index to the head.\nYou will do this for all the git added files once.\nUse \u201cgit checkout\u201d to reverse the effects of a git commit.&lt;/li&gt;\n&lt;li&gt;&lt;b&gt;git push origin master&lt;/b&gt;&lt;br&gt;Use the git push command to\nmove changes from the head to\nthe remote host.&lt;/li&gt;\n&lt;li&gt;git init is used to create a new repo the first time.\nAlso a git remote add origin is used the first time to\nassociate a connection to the remote host.&lt;/li&gt;\n&lt;li&gt;&lt;B&gt;browser <a href=\"https://github.com/fulkgl\" rel=\"nofollow\">https://github.com/fulkgl</a>/PyBaccarat&lt;/B&gt;\n&lt;br&gt;See that the latest things look correct on the webpage.&lt;/li&gt;\n&lt;/ol&gt;</p>\n<p>&lt;br&gt;twine upload dist/* -r legacy\n&lt;li&gt;update PiPy&lt;/li&gt;\n&lt;li&gt;build, test, install&lt;/li&gt;\n@rem python setup.py build bdist sdist upload\n&lt;/ol&gt;</p>\n\n          </div>"}, "last_serial": 4178399, "releases": {"0.10": [{"comment_text": "", "digests": {"md5": "525a6f9b6468a8b62b6002820c666136", "sha256": "6ef8345bb34f96edbc9c6dbf7e5194ad4dfcd3df044c3a1262d1a5d3eb708978"}, "downloads": -1, "filename": "pybaccarat-0.10-py2.7.egg", "has_sig": false, "md5_digest": "525a6f9b6468a8b62b6002820c666136", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 24501, "upload_time": "2017-11-20T22:58:35", "upload_time_iso_8601": "2017-11-20T22:58:35.477991Z", "url": "https://files.pythonhosted.org/packages/36/f4/ef98097333ce59e1836b0f88857d22db2e367a9003e07be7f18d0e0190ce/pybaccarat-0.10-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "337f14cefdd71b709100c52a08bb4de5", "sha256": "fefdaa8c444292e8a53807f6fcd2495ed92e7647e3a2c6a0b3b304a720a55829"}, "downloads": -1, "filename": "pybaccarat-0.10.tar.gz", "has_sig": false, "md5_digest": "337f14cefdd71b709100c52a08bb4de5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11541, "upload_time": "2017-11-20T22:58:34", "upload_time_iso_8601": "2017-11-20T22:58:34.137992Z", "url": "https://files.pythonhosted.org/packages/10/c6/493151ca60b47d9df45f4f11701a9d31ac26095a5e212d211dfd9bd40f21/pybaccarat-0.10.tar.gz", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "e89f99de69946bae64611abd778c011d", "sha256": "d6543b665e8e500a8fb2c01e56686000391655101e17a01dc67ecc3719515691"}, "downloads": -1, "filename": "pybaccarat-0.12.tar.gz", "has_sig": false, "md5_digest": "e89f99de69946bae64611abd778c011d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18624, "upload_time": "2018-06-08T16:42:15", "upload_time_iso_8601": "2018-06-08T16:42:15.267752Z", "url": "https://files.pythonhosted.org/packages/77/98/ff8239a8c8d32b40c14bd3453cf6757fa0858ff901515636a8d6d6a83d8f/pybaccarat-0.12.tar.gz", "yanked": false}], "0.18": [{"comment_text": "", "digests": {"md5": "a7bda666613ebefc5fa408ae0f66178b", "sha256": "a7b754f8c485598c3aa6b7c8ef08c72fa9d10c4d358f93c5d44d5015380fe29c"}, "downloads": -1, "filename": "pybaccarat-0.18.tar.gz", "has_sig": false, "md5_digest": "a7bda666613ebefc5fa408ae0f66178b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 210753, "upload_time": "2018-08-16T23:08:57", "upload_time_iso_8601": "2018-08-16T23:08:57.297831Z", "url": "https://files.pythonhosted.org/packages/e7/f7/6271fbbf797e5daa578dfc231e8d45ee189375d537a3783b6b773ea645b9/pybaccarat-0.18.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a7bda666613ebefc5fa408ae0f66178b", "sha256": "a7b754f8c485598c3aa6b7c8ef08c72fa9d10c4d358f93c5d44d5015380fe29c"}, "downloads": -1, "filename": "pybaccarat-0.18.tar.gz", "has_sig": false, "md5_digest": "a7bda666613ebefc5fa408ae0f66178b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 210753, "upload_time": "2018-08-16T23:08:57", "upload_time_iso_8601": "2018-08-16T23:08:57.297831Z", "url": "https://files.pythonhosted.org/packages/e7/f7/6271fbbf797e5daa578dfc231e8d45ee189375d537a3783b6b773ea645b9/pybaccarat-0.18.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:28 2020"}