{"info": {"author": "Zenobius Jiricek", "author_email": "airtonix@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "## DjangoCMS Embedded Pages\n\nThis simple extension allows your admin users to embed other pages within\nplaceholders\n\n## Requirements\n\n* django-cms\n* And all the requirements the above project(s) depend on.\n\n\n## Installation\n\n1. make sure you are using a python virtual environment\n\n     virtualenv ~/Dev/virtualenv/projectname;\n     . ~/Dev/virtualenv/projectname/bin/activate;\n     cd ~/Dev/projects/projectname/;\n\n2. install it from pypi\n\n    `pip install cmsplugin-embedded-pages`\n\n3. or, install it from github\n\n    `pip install git+https://github.com/airtonix/cmsplugin-embedded-pages`\n\n\n## Configuration\n\n1. add `cmsplugin_embeddedpages` to `INSTALLED_APPS`\n\n2. perform a `./manage.py migrate` (for south users), or `./manage.py syncdb`\n\n3. There is no step three!\n\n\n## Override Template\n\nChoosing a template in the administration interface means that you\npopulate the following two relative paths (to any of your app template dirs)\nwith templates you desire to be made available.\n\n* cmsplugin_embeddedpages/layouts\n\nAny .html file that doesn't contain the word 'default' will be presented in\nthe template selector combo dropdown in the admin interface.\n\nFor example, if your django project was at :\n\n    ~/Dev/Django/MyProjectName/\n\nAnd you had a django application named `SomethingSomethingSomething` at :\n\n    ~/Dev/Django/MyProjectName/SomethingSomethingSomething/\n\nThen templates for this plugin could be found at :\n\n    ~/Dev/Django/MyProjectName/SomethingSomethingSomething/templates/cmsplugin_embeddedpages/\n\nIn fact, anywhere django looks for templates, you can place the following tree :\n\n    /cmsplugin_embeddedpages\n        /layouts\n            /groups\n                /*.html\n            /pages\n                /*.html\n\n\n### Customising Templates\n\nAll DjangoCMS plugin templates provided the context :\n\n>     plugin' :\n>         An instance of CMSPlugin, which itself provides reference to either\n>         of the settings models as outlined below.\n\n>     plugin.instance\n>          An instance of the settings model unique to the plugin placed\n>          in a placeholder.\n\n>          group_template\n>               Chosen template for groups of pages\n\n>          page_template\n>               Chosen template for singular pages.\n\n>          include_root\n>               boolean that is used to indicate whether or not to render\n>               the root page content. This will always be False when the page\n>               containing the placeholder in which this plugin is place is\n>               the same as the root page.\n\n>          depth\n>               PositiveInteger that indicates how deep into the page hierachy\n>               tree the plugin will traverse in order to seek pages for\n>               embedding.\n\n>          placeholders.all\n>               ManyToMany field of page placeholders from which content will\n>               be used for the output.\n\n\n#### base.html\n\nbase.html in the `cmsplugin_configurableproduct` directory is used to load the\nselected template chosen in the administration interface.\n\nYou should probably only touch this if you know what you are doing.\n\n\n#### ./layouts/groups/*.html\n\nTemplates used to render a group of pages and are provided the context :\n\n>     EmbeddedPages\n>        A list of cms.Page(s) that match the settings of the plugin instance.\n\n\n#### ./layouts/pages/*.html\n\nTemplates used to render individual pages.\n\nSince templates here are used by the group template via `{% include %}` they\nhave all the same context variables as the group templates.\n\nHowever in the default templates I provide, the page templates use the following:\n\n>     EmbeddedPage\n>        A single instance of a cms.Page\n\n\n## Contributions\n\nanyone is free to contribute, simply submit a merge request at\ngithub : http://github.com/airtonix/cmsplugin-embedded-pages\n\n\n## Todo\n\nprovide option to manipulate menu choices:\n\n* Refine the product filter.\n* Provide better default templates.\n* Allow selecting/use of snippets for menu templates?", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/airtonix/cmsplugin-embedded-pages", "keywords": "django-cms,plugin,pages", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "cmsplugin-embedded-pages", "package_url": "https://pypi.org/project/cmsplugin-embedded-pages/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cmsplugin-embedded-pages/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/airtonix/cmsplugin-embedded-pages"}, "release_url": "https://pypi.org/project/cmsplugin-embedded-pages/0.0.4/", "requires_dist": null, "requires_python": null, "summary": "DjangoCMS plugin that allows for embedding other pages in placeholders", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            ## DjangoCMS Embedded Pages<br><br>This simple extension allows your admin users to embed other pages within<br>placeholders<br><br>## Requirements<br><br>* django-cms<br>* And all the requirements the above project(s) depend on.<br><br><br>## Installation<br><br>1. make sure you are using a python virtual environment<br><br>     virtualenv ~/Dev/virtualenv/projectname;<br>     . ~/Dev/virtualenv/projectname/bin/activate;<br>     cd ~/Dev/projects/projectname/;<br><br>2. install it from pypi<br><br>    `pip install cmsplugin-embedded-pages`<br><br>3. or, install it from github<br><br>    `pip install git+https://github.com/airtonix/cmsplugin-embedded-pages`<br><br><br>## Configuration<br><br>1. add `cmsplugin_embeddedpages` to `INSTALLED_APPS`<br><br>2. perform a `./manage.py migrate` (for south users), or `./manage.py syncdb`<br><br>3. There is no step three!<br><br><br>## Override Template<br><br>Choosing a template in the administration interface means that you<br>populate the following two relative paths (to any of your app template dirs)<br>with templates you desire to be made available.<br><br>* cmsplugin_embeddedpages/layouts<br><br>Any .html file that doesn't contain the word 'default' will be presented in<br>the template selector combo dropdown in the admin interface.<br><br>For example, if your django project was at :<br><br>    ~/Dev/Django/MyProjectName/<br><br>And you had a django application named `SomethingSomethingSomething` at :<br><br>    ~/Dev/Django/MyProjectName/SomethingSomethingSomething/<br><br>Then templates for this plugin could be found at :<br><br>    ~/Dev/Django/MyProjectName/SomethingSomethingSomething/templates/cmsplugin_embeddedpages/<br><br>In fact, anywhere django looks for templates, you can place the following tree :<br><br>    /cmsplugin_embeddedpages<br>        /layouts<br>            /groups<br>                /*.html<br>            /pages<br>                /*.html<br><br><br>### Customising Templates<br><br>All DjangoCMS plugin templates provided the context :<br><br>&gt;     plugin' :<br>&gt;         An instance of CMSPlugin, which itself provides reference to either<br>&gt;         of the settings models as outlined below.<br><br>&gt;     plugin.instance<br>&gt;          An instance of the settings model unique to the plugin placed<br>&gt;          in a placeholder.<br><br>&gt;          group_template<br>&gt;               Chosen template for groups of pages<br><br>&gt;          page_template<br>&gt;               Chosen template for singular pages.<br><br>&gt;          include_root<br>&gt;               boolean that is used to indicate whether or not to render<br>&gt;               the root page content. This will always be False when the page<br>&gt;               containing the placeholder in which this plugin is place is<br>&gt;               the same as the root page.<br><br>&gt;          depth<br>&gt;               PositiveInteger that indicates how deep into the page hierachy<br>&gt;               tree the plugin will traverse in order to seek pages for<br>&gt;               embedding.<br><br>&gt;          placeholders.all<br>&gt;               ManyToMany field of page placeholders from which content will<br>&gt;               be used for the output.<br><br><br>#### base.html<br><br>base.html in the `cmsplugin_configurableproduct` directory is used to load the<br>selected template chosen in the administration interface.<br><br>You should probably only touch this if you know what you are doing.<br><br><br>#### ./layouts/groups/*.html<br><br>Templates used to render a group of pages and are provided the context :<br><br>&gt;     EmbeddedPages<br>&gt;        A list of cms.Page(s) that match the settings of the plugin instance.<br><br><br>#### ./layouts/pages/*.html<br><br>Templates used to render individual pages.<br><br>Since templates here are used by the group template via `{% include %}` they<br>have all the same context variables as the group templates.<br><br>However in the default templates I provide, the page templates use the following:<br><br>&gt;     EmbeddedPage<br>&gt;        A single instance of a cms.Page<br><br><br>## Contributions<br><br>anyone is free to contribute, simply submit a merge request at<br>github : http://github.com/airtonix/cmsplugin-embedded-pages<br><br><br>## Todo<br><br>provide option to manipulate menu choices:<br><br>* Refine the product filter.<br>* Provide better default templates.<br>* Allow selecting/use of snippets for menu templates?\n          </div>"}, "last_serial": 787547, "releases": {"0.0.2": [], "0.0.3": [{"comment_text": "", "digests": {"md5": "b2402a361dd6c2810677b57f48a29cac", "sha256": "d7fd39e122f4950b3b8b8406ff8b8b437ebec52cc3a24ace4450361545cd2791"}, "downloads": -1, "filename": "cmsplugin-embedded-pages-0.0.3.tar.gz", "has_sig": false, "md5_digest": "b2402a361dd6c2810677b57f48a29cac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10575, "upload_time": "2011-12-31T15:14:24", "upload_time_iso_8601": "2011-12-31T15:14:24.205857Z", "url": "https://files.pythonhosted.org/packages/0b/e8/f7d62a967bb0a84e62a742541e98104a7f649e9cc4dbc7d9df2d9004d553/cmsplugin-embedded-pages-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "3d64c5ba885967d05a5ea07a9a167b43", "sha256": "b42638e83431973e62deec1d23073761152adaf12b4f08eb38aadc2f4c8aed49"}, "downloads": -1, "filename": "cmsplugin-embedded-pages-0.0.4.tar.gz", "has_sig": false, "md5_digest": "3d64c5ba885967d05a5ea07a9a167b43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11337, "upload_time": "2011-12-31T15:49:18", "upload_time_iso_8601": "2011-12-31T15:49:18.470201Z", "url": "https://files.pythonhosted.org/packages/d7/f6/885390f23dfcf76dc92a715ae7ce4c1f3df054eac66a7a82b46042b10fc2/cmsplugin-embedded-pages-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d64c5ba885967d05a5ea07a9a167b43", "sha256": "b42638e83431973e62deec1d23073761152adaf12b4f08eb38aadc2f4c8aed49"}, "downloads": -1, "filename": "cmsplugin-embedded-pages-0.0.4.tar.gz", "has_sig": false, "md5_digest": "3d64c5ba885967d05a5ea07a9a167b43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11337, "upload_time": "2011-12-31T15:49:18", "upload_time_iso_8601": "2011-12-31T15:49:18.470201Z", "url": "https://files.pythonhosted.org/packages/d7/f6/885390f23dfcf76dc92a715ae7ce4c1f3df054eac66a7a82b46042b10fc2/cmsplugin-embedded-pages-0.0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:32 2020"}