{"info": {"author": "csulliva", "author_email": "csulliva@brandeis.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Visualization"], "description": "IPlotter\n========\n\n|PyPI version| |PyPI| |PyPI|\n\nJavaScript charting in ipython/jupyter notebooks\n------------------------------------------------\n\n.. raw:: html\n\n   <!-- MarkdownTOC -->\n\n-  `Installation <#installation>`__\n-  `C3.js <#c3js>`__\n-  `plotly.js <#plotlyjs>`__\n-  `Chart.js <#chartjs>`__\n-  `Chartist.js <#chartistjs>`__\n-  `Google Charts <#google-charts>`__\n-  `Usage <#usage>`__\n-  `Examples <#examples>`__\n\n   -  `C3 Stacked Area Spline Chart <#c3-stacked-area-spline-chart>`__\n   -  `plotly.js HeatMap <#plotlyjs-heatmap>`__\n   -  `Chart.js Radar Chart <#chartjs-radar-chart>`__\n   -  `Chartist.js Bipolar Area\n      Chart <#chartistjs-bipolar-area-chart>`__\n   -  `Google Charts stacked Column\n      Chart <#google-charts-stacked-column-chart>`__\n\n-  `Multple Charts and Mixing\n   Libraries <#multple-charts-and-mixing-libraries>`__\n-  `Exporting plots to PNG images with\n   Selenium <#exporting-plots-to-png-images-with-selenium>`__\n\n.. raw:: html\n\n   <!-- /MarkdownTOC -->\n\niplotter is a simple package for generating interactive charts in\nipython/jupyter notebooks using popular JavaScript Libraries from python\ndata structures (dictionaries, lists, etc.)\n\n ## Installation To install the most recent stable release run\n``pip install iplotter``.\n\nTo install the latest version run\n``pip install git+git://github.com/niloch/iplotter.git@master`` or\n``git clone https://github.com/niloch/iplotter.git`` followed by\n``pip install -e iplotter/``\n\n ## `C3.js <http://c3js.org/>`__\n\nC3 is a charting library based on d3.js for making interactive and easy\nto understand charts, graphs, and plots. Charts have animated\ntransitions for hiding/displaying data.\n\n ## `plotly.js <https://plot.ly/javascript/>`__\n\nPlotly.js is a charting library based on d3.js. While plotly provides a\nnative client in python, it requires the user to create an account and\nby default makes all plots public. plotly.js can be used without\ncreating an account and are rendered locally to keep data private.\n\n ## `Chart.js <http://www.chartjs.org/>`__\n\nChart.js provides 6 chart types via HTML5 canvas elements with\ntooltips/hover events in very a lightweight library.\n\n ## `Chartist.js <http://gionkunz.github.io/chartist-js/index.html>`__\n\nSimple and Responsive SVG charts with media queries and animations.\n\n ## `Google Charts <https://developers.google.com/chart/>`__\n\nSimple and Powerful interactive charts with SVG/VML formats.\n\n ## Usage\n\niplotter attempts to maintain a consistent API across JavaScript\nLibraries as much as possible, with slight parameter variations. Each\nlibrary class supports the following functions: ``render``, ``plot``,\n``save``, ``plot_and_save``. The python chart data,layout,options must\nbe structured according to the JSON equivalent for each library (see\n`C3.js <http://c3js.org/>`__,\n`plotly.js <https://plot.ly/javascript/>`__,\\ `Chart.js <http://www.chartjs.org/>`__,\n`Chartist.js <http://gionkunz.github.io/chartist-js/index.html>`__ and\n`Google Charts <https://developers.google.com/chart/>`__ for more\nexamples). Plots can be rendered in ipython notebooks and saved to the\ncurrent directory as html files.\n\n ## Examples\n\n ### C3 Stacked Area Spline Chart\n\n.. code:: python\n\n    from iplotter import C3Plotter\n\n    plotter = C3Plotter()\n\n    chart = {\n        \"data\": {\n            \"columns\": [\n                ['data1', 300, 350, 300, 0, 0, 120],\n                ['data2', 130, 100, 140, 200, 150, 50],\n                ['data3', 180, 75, 265, 100, 50, 100]\n            ],\n            \"types\": {\n                \"data1\": 'area-spline',\n                \"data2\": 'area-spline',\n                \"data3\": 'area-spline'\n            },\n            \"groups\": [['data1', 'data2', 'data3']]\n        }\n    }\n\n    plotter.plot(chart)\n\n.. figure:: https://github.com/niloch/iplotter/blob/master/imgs/plot1.png?raw=true\n   :alt: Plot 1\n\n   Plot1\n\n ### plotly.js HeatMap\n\n.. code:: python\n\n    from iplotter import PlotlyPlotter\n\n    plotter = PlotlyPlotter()\n\n    data = [\n        {\n            'colorscale': 'YIGnBu',\n            'reversescale': True,\n            'type': 'heatmap',\n            'x': ['class1', 'class2', 'class3'],\n            'y': ['class1', 'class2', 'class3'],\n            'z': [[0.7,  0.2,  0.1],\n                  [0.2,  0.7,  0.1],\n                  [0.15,  0.27,  0.56]]\n        }\n    ]\n\n    layout = {\n        \"title\": 'Title',\n        \"xaxis\": {\n            \"tickangle\": -45\n        },\n    }\n\n    plotter.plot_and_save(data, layout=layout, w=600, h=600, filename='heatmap1', overwrite=True)\n\n.. figure:: https://github.com/niloch/iplotter/blob/master/imgs/plot3.png?raw=true\n   :alt: Plot 3\n\n   Plot3\n\n ### Chart.js Radar Chart\n\n.. code:: python\n\n    from iplotter import ChartJSPlotter\n\n    plotter = ChartJSPlotter()\n\n    data = {\n        \"labels\": [\"Eating\", \"Drinking\", \"Sleeping\", \"Designing\", \"Coding\",\n                   \"Cycling\", \"Running\"],\n        \"datasets\": [\n            {\n                \"label\": \"Trace 1\",\n                \"backgroundColor\": \"rgba(179,181,198,0.2)\",\n                \"borderColor\": \"rgba(179,181,198,1)\",\n                \"pointBackgroundColor\": \"rgba(179,181,198,1)\",\n                \"pointBorderColor\": \"#fff\",\n                \"pointHoverBackgroundColor\": \"#fff\",\n                \"pointHoverBorderColor\": \"rgba(179,181,198,1)\",\n                \"data\": [65, 59, 30, 81, 56, 55, 40]\n            }, {\n                \"label\": \"Trace 2\",\n                \"backgroundColor\": \"rgba(255,99,132,0.2)\",\n                \"borderColor\": \"rgba(255,99,132,1)\",\n                \"pointBackgroundColor\": \"rgba(255,99,132,1)\",\n                \"pointBorderColor\": \"#fff\",\n                \"pointHoverBackgroundColor\": \"#fff\",\n                \"pointHoverBorderColor\": \"rgba(255,99,132,1)\",\n                \"data\": [28, 48, 40, 19, 96, 27, 100]\n            }\n        ]\n    }\n\n    plotter.plot_and_save(data, 'radar', options=None)\n\n.. figure:: https://github.com/niloch/iplotter/blob/master/imgs/plot4.png?raw=true\n   :alt: Plot 4\n\n   Plot4\n\n ### Chartist.js Bipolar Area Chart\n\n.. code:: python\n\n    from iplotter import ChartistPlotter\n\n    plotter = ChartistPlotter()\n\n    data = {\n        \"labels\": [1, 2, 3, 4, 5, 6, 7, 8],\n        \"series\": [\n            [1, 2, 3, 1, -2, 0, 1, 0], [-2, -1, -2, -1, -2.5, -1, -2, -1],\n            [0, 0, 0, 1, 2, 2.5, 2, 1], [2.5, 2, 1, 0.5, 1, 0.5, -1, -2.5]\n        ]\n    }\n    options = {\n        \"high\": 4,\n        \"low\": -3,\n        \"showArea\": True,\n        \"showLine\": False,\n        \"showPoint\": False,\n        \"height\": 420,\n        \"width\": 700\n    }\n\n    plotter.save(data, chart_type=\"Line\", options=options)\n\n.. figure:: https://github.com/niloch/iplotter/blob/master/imgs/plot6.png?raw=true\n   :alt: Plot 6\n\n   Plot6\n\n ### Google Charts stacked Column Chart\n\n.. code:: python\n\n    from iplotter import GCPlotter\n\n    plotter = GCPlotter()\n\n    data = [\n        ['Genre', 'Fantasy & Sci Fi', 'Romance', 'Mystery/Crime', 'General',\n         'Western', 'Literature', {\"role\": 'annotation'}],\n        ['2010', 10, 24, 20, 32, 18, 5, ''],\n        ['2020', 16, 22, 23, 30, 16, 9, ''],\n        ['2030', 28, 19, 29, 30, 12, 13, '']\n    ]\n\n    options = {\n        \"width\": 600,\n        \"height\": 400,\n        \"legend\": {\"position\": 'top', \"maxLines\": 3},\n        \"bar\": {\"groupWidth\": '75%'},\n        \"isStacked\": \"true\",\n    }\n\n    plotter.plot(data, chart_type=\"ColumnChart\",chart_package='corechart', options=options)\n\n.. figure:: https://github.com/niloch/iplotter/blob/master/imgs/plot7.png?raw=true\n   :alt: Plot 7\n\n   Plot7\n\n ## Multple Charts and Mixing Libraries\n\nSaving multiple charts to one file or displaying multiple charts in one\niframe can be achieved by concatenating html strings returned by the\nrender function. The plotter's ``head`` attribute contains the script\ntags for loading the necessary JavasScript libraries and ``div_ids``\nmust be unique. Charts from different libraries can be mixed together.\n\n.. code:: python\n\n    from iplotter import PlotlyPlotter, C3Plotter\n    from IPython.display import HTML\n\n    plotly_plotter = PlotlyPlotter()\n\n    c3_plotter = C3Plotter()\n\n    plotly_chart = [{\n        \"type\": 'choropleth',\n        \"locationmode\": 'USA-states',\n        \"locations\": [\"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"FL\", \"GA\",\n                      \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\",\n                      \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\",\n                      \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\",\n                      \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"],\n        \"z\": [1390.63, 13.31, 1463.17, 3586.02, 16472.88, 1851.33, 259.62, 282.19,\n              3764.09, 2860.84, 401.84, 2078.89, 8709.48, 5050.23, 11273.76,\n              4589.01, 1889.15, 1914.23, 278.37, 692.75, 248.65, 3164.16, 7192.33,\n              2170.8, 3933.42, 1718, 7114.13, 139.89, 73.06, 500.4, 751.58, 1488.9,\n              3806.05, 3761.96, 3979.79, 1646.41, 1794.57, 1969.87, 31.59, 929.93,\n              3770.19, 1535.13, 6648.22, 453.39, 180.14, 1146.48, 3894.81, 138.89,\n              3090.23, 349.69],\n        \"text\":\n        [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \" California\", \"Colorado\",\n         \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\",\n         \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\",\n         \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\",\n         \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\",\n         \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\",\n         \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\",\n         \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\",\n         \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"],\n        \"zmin\": 0,\n        \"zmax\": 17000,\n        \"colorscale\": [\n            [0, 'rgb(242,240,247)'], [0.2, 'rgb(218,218,235)'],\n            [0.4, 'rgb(188,189,220)'], [0.6, 'rgb(158,154,200)'],\n            [0.8, 'rgb(117,107,177)'], [1, 'rgb(84,39,143)']\n        ],\n        \"colorbar\": {\n            \"title\": 'Millions USD',\n            \"thickness\": 0.2\n        },\n        \"marker\": {\n            \"line\": {\n                \"color\": 'rgb(255,255,255)',\n                \"width\": 2\n            }\n        }\n    }]\n\n    plotly_layout = {\n        \"title\": '2011 US Agriculture Exports by State',\n        \"geo\": {\n            \"scope\": 'usa',\n            \"showlakes\": True,\n            \"lakecolor\": 'rgb(255,255,255)'\n        }\n    }\n\n    c3_chart = {\n        \"data\": {\n            \"columns\": [\n                ['data1', 300, 350, 300, 0, 0, 120],\n                ['data2', 130, 100, 140, 200, 150, 50],\n                ['data3', 180, 75, 265, 100, 50, 100]\n            ],\n            \"type\": \"pie\",\n        }\n    }\n\n    # plotter.head will return the html string containing script tags for loading the plotly.js/C3.js libraries\n    multiple_plot_html = plotly_plotter.head + c3_plotter.head\n\n    multiple_plot_html += c3_plotter.render(data=c3_chart, div_id=\"chart_1\")\n\n    multiple_plot_html += plotly_plotter.render(\n        data=plotly_chart, layout=plotly_layout, div_id=\"chart_2\")\n\n    # display multiple plots in iframe\n    HTML(c3_plotter.iframe.format(source=multiple_plot_html, w=600, h=900))\n    # Write multiple plots to file\n    with open(\"multiple_plots.html\", 'w') as outfile:\n        outfile.write(multiple_plot_html)\n\n.. figure:: https://github.com/niloch/iplotter/blob/master/imgs/plot5.png?raw=true\n   :alt: Plot 5\n\n   Plot5\n\n ## Exporting plots to PNG images with\n`Selenium <http://www.seleniumhq.org/>`__\n\nSaved interactive HTML plots can be converted to static png images\nprogramatically for inclusion in other documents via a Selenium helper\nclass. The user will need to download a compatible webdriver and include\nit in their PATH. The expected default is the `Chrome\nwebdriver <https://sites.google.com/a/chromium.org/chromedriver/>`__\n\nUsing the context manager syntax is recommended as in\n``with VirtualBrowser() as browser`` to ensure the browswer session is\nproperly released. However it can be used as a normal object by calling\n``browser().quit()`` to end the session.\n\n.. code:: python\n\n    from iplotter import C3Plotter, ChartJSPlotter, VirtualBrowser\n\n    plotter1 = C3Plotter()\n    plotter2 = ChartJSPlotter()\n\n    ####  specify data for charts here...\n\n    plotter1.save(data1, filename=\"chart1\")  # save first plot to chart1.html\n    plotter2.save(data2, filename=\"chart2\")  # save second plot to chart2.html\n\n    charts = [\"chart1\", \"chart2\"]\n\n    with VirtualBrowser() as browser:\n        for chart in charts:\n            browser.save_as_png(\n                filename=chart, width=300,\n                height=200)  # save html chart to filename + '.png'\n\n.. |PyPI version| image:: https://badge.fury.io/py/iplotter.svg\n   :target: https://badge.fury.io/py/iplotter\n.. |PyPI| image:: https://img.shields.io/pypi/pyversions/iplotter.svg\n   :target: \n.. |PyPI| image:: https://img.shields.io/pypi/dm/iplotter.svg\n   :target:", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/niloch/iplotter", "keywords": "ipython,plotly,c3.js,plot,chart,plotly.js,charts.js,chartist.js,jupyter", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "iplotter", "package_url": "https://pypi.org/project/iplotter/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/iplotter/", "project_urls": {"Homepage": "https://github.com/niloch/iplotter"}, "release_url": "https://pypi.org/project/iplotter/0.4.3/", "requires_dist": ["Jinja2 (>=2.0)", "ipython (>=3.0)", "notebook (>=3.0)", "selenium (>=3.0)"], "requires_python": "", "summary": "JavaScript Charting for iPython/Jupyter notebooks", "version": "0.4.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            IPlotter<br>========<br><br>|PyPI version| |PyPI| |PyPI|<br><br>JavaScript charting in ipython/jupyter notebooks<br>------------------------------------------------<br><br>.. raw:: html<br><br>   &lt;!-- MarkdownTOC --&gt;<br><br>-  `Installation &lt;#installation&gt;`__<br>-  `C3.js &lt;#c3js&gt;`__<br>-  `plotly.js &lt;#plotlyjs&gt;`__<br>-  `Chart.js &lt;#chartjs&gt;`__<br>-  `Chartist.js &lt;#chartistjs&gt;`__<br>-  `Google Charts &lt;#google-charts&gt;`__<br>-  `Usage &lt;#usage&gt;`__<br>-  `Examples &lt;#examples&gt;`__<br><br>   -  `C3 Stacked Area Spline Chart &lt;#c3-stacked-area-spline-chart&gt;`__<br>   -  `plotly.js HeatMap &lt;#plotlyjs-heatmap&gt;`__<br>   -  `Chart.js Radar Chart &lt;#chartjs-radar-chart&gt;`__<br>   -  `Chartist.js Bipolar Area<br>      Chart &lt;#chartistjs-bipolar-area-chart&gt;`__<br>   -  `Google Charts stacked Column<br>      Chart &lt;#google-charts-stacked-column-chart&gt;`__<br><br>-  `Multple Charts and Mixing<br>   Libraries &lt;#multple-charts-and-mixing-libraries&gt;`__<br>-  `Exporting plots to PNG images with<br>   Selenium &lt;#exporting-plots-to-png-images-with-selenium&gt;`__<br><br>.. raw:: html<br><br>   &lt;!-- /MarkdownTOC --&gt;<br><br>iplotter is a simple package for generating interactive charts in<br>ipython/jupyter notebooks using popular JavaScript Libraries from python<br>data structures (dictionaries, lists, etc.)<br><br> ## Installation To install the most recent stable release run<br>``pip install iplotter``.<br><br>To install the latest version run<br>``pip install git+git://github.com/niloch/iplotter.git@master`` or<br>``git clone https://github.com/niloch/iplotter.git`` followed by<br>``pip install -e iplotter/``<br><br> ## `C3.js &lt;http://c3js.org/&gt;`__<br><br>C3 is a charting library based on d3.js for making interactive and easy<br>to understand charts, graphs, and plots. Charts have animated<br>transitions for hiding/displaying data.<br><br> ## `plotly.js &lt;https://plot.ly/javascript/&gt;`__<br><br>Plotly.js is a charting library based on d3.js. While plotly provides a<br>native client in python, it requires the user to create an account and<br>by default makes all plots public. plotly.js can be used without<br>creating an account and are rendered locally to keep data private.<br><br> ## `Chart.js &lt;http://www.chartjs.org/&gt;`__<br><br>Chart.js provides 6 chart types via HTML5 canvas elements with<br>tooltips/hover events in very a lightweight library.<br><br> ## `Chartist.js &lt;http://gionkunz.github.io/chartist-js/index.html&gt;`__<br><br>Simple and Responsive SVG charts with media queries and animations.<br><br> ## `Google Charts &lt;https://developers.google.com/chart/&gt;`__<br><br>Simple and Powerful interactive charts with SVG/VML formats.<br><br> ## Usage<br><br>iplotter attempts to maintain a consistent API across JavaScript<br>Libraries as much as possible, with slight parameter variations. Each<br>library class supports the following functions: ``render``, ``plot``,<br>``save``, ``plot_and_save``. The python chart data,layout,options must<br>be structured according to the JSON equivalent for each library (see<br>`C3.js &lt;http://c3js.org/&gt;`__,<br>`plotly.js &lt;https://plot.ly/javascript/&gt;`__,\\ `Chart.js &lt;http://www.chartjs.org/&gt;`__,<br>`Chartist.js &lt;http://gionkunz.github.io/chartist-js/index.html&gt;`__ and<br>`Google Charts &lt;https://developers.google.com/chart/&gt;`__ for more<br>examples). Plots can be rendered in ipython notebooks and saved to the<br>current directory as html files.<br><br> ## Examples<br><br> ### C3 Stacked Area Spline Chart<br><br>.. code:: python<br><br>    from iplotter import C3Plotter<br><br>    plotter = C3Plotter()<br><br>    chart = {<br>        \"data\": {<br>            \"columns\": [<br>                ['data1', 300, 350, 300, 0, 0, 120],<br>                ['data2', 130, 100, 140, 200, 150, 50],<br>                ['data3', 180, 75, 265, 100, 50, 100]<br>            ],<br>            \"types\": {<br>                \"data1\": 'area-spline',<br>                \"data2\": 'area-spline',<br>                \"data3\": 'area-spline'<br>            },<br>            \"groups\": [['data1', 'data2', 'data3']]<br>        }<br>    }<br><br>    plotter.plot(chart)<br><br>.. figure:: https://github.com/niloch/iplotter/blob/master/imgs/plot1.png?raw=true<br>   :alt: Plot 1<br><br>   Plot1<br><br> ### plotly.js HeatMap<br><br>.. code:: python<br><br>    from iplotter import PlotlyPlotter<br><br>    plotter = PlotlyPlotter()<br><br>    data = [<br>        {<br>            'colorscale': 'YIGnBu',<br>            'reversescale': True,<br>            'type': 'heatmap',<br>            'x': ['class1', 'class2', 'class3'],<br>            'y': ['class1', 'class2', 'class3'],<br>            'z': [[0.7,  0.2,  0.1],<br>                  [0.2,  0.7,  0.1],<br>                  [0.15,  0.27,  0.56]]<br>        }<br>    ]<br><br>    layout = {<br>        \"title\": 'Title',<br>        \"xaxis\": {<br>            \"tickangle\": -45<br>        },<br>    }<br><br>    plotter.plot_and_save(data, layout=layout, w=600, h=600, filename='heatmap1', overwrite=True)<br><br>.. figure:: https://github.com/niloch/iplotter/blob/master/imgs/plot3.png?raw=true<br>   :alt: Plot 3<br><br>   Plot3<br><br> ### Chart.js Radar Chart<br><br>.. code:: python<br><br>    from iplotter import ChartJSPlotter<br><br>    plotter = ChartJSPlotter()<br><br>    data = {<br>        \"labels\": [\"Eating\", \"Drinking\", \"Sleeping\", \"Designing\", \"Coding\",<br>                   \"Cycling\", \"Running\"],<br>        \"datasets\": [<br>            {<br>                \"label\": \"Trace 1\",<br>                \"backgroundColor\": \"rgba(179,181,198,0.2)\",<br>                \"borderColor\": \"rgba(179,181,198,1)\",<br>                \"pointBackgroundColor\": \"rgba(179,181,198,1)\",<br>                \"pointBorderColor\": \"#fff\",<br>                \"pointHoverBackgroundColor\": \"#fff\",<br>                \"pointHoverBorderColor\": \"rgba(179,181,198,1)\",<br>                \"data\": [65, 59, 30, 81, 56, 55, 40]<br>            }, {<br>                \"label\": \"Trace 2\",<br>                \"backgroundColor\": \"rgba(255,99,132,0.2)\",<br>                \"borderColor\": \"rgba(255,99,132,1)\",<br>                \"pointBackgroundColor\": \"rgba(255,99,132,1)\",<br>                \"pointBorderColor\": \"#fff\",<br>                \"pointHoverBackgroundColor\": \"#fff\",<br>                \"pointHoverBorderColor\": \"rgba(255,99,132,1)\",<br>                \"data\": [28, 48, 40, 19, 96, 27, 100]<br>            }<br>        ]<br>    }<br><br>    plotter.plot_and_save(data, 'radar', options=None)<br><br>.. figure:: https://github.com/niloch/iplotter/blob/master/imgs/plot4.png?raw=true<br>   :alt: Plot 4<br><br>   Plot4<br><br> ### Chartist.js Bipolar Area Chart<br><br>.. code:: python<br><br>    from iplotter import ChartistPlotter<br><br>    plotter = ChartistPlotter()<br><br>    data = {<br>        \"labels\": [1, 2, 3, 4, 5, 6, 7, 8],<br>        \"series\": [<br>            [1, 2, 3, 1, -2, 0, 1, 0], [-2, -1, -2, -1, -2.5, -1, -2, -1],<br>            [0, 0, 0, 1, 2, 2.5, 2, 1], [2.5, 2, 1, 0.5, 1, 0.5, -1, -2.5]<br>        ]<br>    }<br>    options = {<br>        \"high\": 4,<br>        \"low\": -3,<br>        \"showArea\": True,<br>        \"showLine\": False,<br>        \"showPoint\": False,<br>        \"height\": 420,<br>        \"width\": 700<br>    }<br><br>    plotter.save(data, chart_type=\"Line\", options=options)<br><br>.. figure:: https://github.com/niloch/iplotter/blob/master/imgs/plot6.png?raw=true<br>   :alt: Plot 6<br><br>   Plot6<br><br> ### Google Charts stacked Column Chart<br><br>.. code:: python<br><br>    from iplotter import GCPlotter<br><br>    plotter = GCPlotter()<br><br>    data = [<br>        ['Genre', 'Fantasy &amp; Sci Fi', 'Romance', 'Mystery/Crime', 'General',<br>         'Western', 'Literature', {\"role\": 'annotation'}],<br>        ['2010', 10, 24, 20, 32, 18, 5, ''],<br>        ['2020', 16, 22, 23, 30, 16, 9, ''],<br>        ['2030', 28, 19, 29, 30, 12, 13, '']<br>    ]<br><br>    options = {<br>        \"width\": 600,<br>        \"height\": 400,<br>        \"legend\": {\"position\": 'top', \"maxLines\": 3},<br>        \"bar\": {\"groupWidth\": '75%'},<br>        \"isStacked\": \"true\",<br>    }<br><br>    plotter.plot(data, chart_type=\"ColumnChart\",chart_package='corechart', options=options)<br><br>.. figure:: https://github.com/niloch/iplotter/blob/master/imgs/plot7.png?raw=true<br>   :alt: Plot 7<br><br>   Plot7<br><br> ## Multple Charts and Mixing Libraries<br><br>Saving multiple charts to one file or displaying multiple charts in one<br>iframe can be achieved by concatenating html strings returned by the<br>render function. The plotter's ``head`` attribute contains the script<br>tags for loading the necessary JavasScript libraries and ``div_ids``<br>must be unique. Charts from different libraries can be mixed together.<br><br>.. code:: python<br><br>    from iplotter import PlotlyPlotter, C3Plotter<br>    from IPython.display import HTML<br><br>    plotly_plotter = PlotlyPlotter()<br><br>    c3_plotter = C3Plotter()<br><br>    plotly_chart = [{<br>        \"type\": 'choropleth',<br>        \"locationmode\": 'USA-states',<br>        \"locations\": [\"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"FL\", \"GA\",<br>                      \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\",<br>                      \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\",<br>                      \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\",<br>                      \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"],<br>        \"z\": [1390.63, 13.31, 1463.17, 3586.02, 16472.88, 1851.33, 259.62, 282.19,<br>              3764.09, 2860.84, 401.84, 2078.89, 8709.48, 5050.23, 11273.76,<br>              4589.01, 1889.15, 1914.23, 278.37, 692.75, 248.65, 3164.16, 7192.33,<br>              2170.8, 3933.42, 1718, 7114.13, 139.89, 73.06, 500.4, 751.58, 1488.9,<br>              3806.05, 3761.96, 3979.79, 1646.41, 1794.57, 1969.87, 31.59, 929.93,<br>              3770.19, 1535.13, 6648.22, 453.39, 180.14, 1146.48, 3894.81, 138.89,<br>              3090.23, 349.69],<br>        \"text\":<br>        [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \" California\", \"Colorado\",<br>         \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\",<br>         \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\",<br>         \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\",<br>         \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\",<br>         \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\",<br>         \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\",<br>         \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\",<br>         \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"],<br>        \"zmin\": 0,<br>        \"zmax\": 17000,<br>        \"colorscale\": [<br>            [0, 'rgb(242,240,247)'], [0.2, 'rgb(218,218,235)'],<br>            [0.4, 'rgb(188,189,220)'], [0.6, 'rgb(158,154,200)'],<br>            [0.8, 'rgb(117,107,177)'], [1, 'rgb(84,39,143)']<br>        ],<br>        \"colorbar\": {<br>            \"title\": 'Millions USD',<br>            \"thickness\": 0.2<br>        },<br>        \"marker\": {<br>            \"line\": {<br>                \"color\": 'rgb(255,255,255)',<br>                \"width\": 2<br>            }<br>        }<br>    }]<br><br>    plotly_layout = {<br>        \"title\": '2011 US Agriculture Exports by State',<br>        \"geo\": {<br>            \"scope\": 'usa',<br>            \"showlakes\": True,<br>            \"lakecolor\": 'rgb(255,255,255)'<br>        }<br>    }<br><br>    c3_chart = {<br>        \"data\": {<br>            \"columns\": [<br>                ['data1', 300, 350, 300, 0, 0, 120],<br>                ['data2', 130, 100, 140, 200, 150, 50],<br>                ['data3', 180, 75, 265, 100, 50, 100]<br>            ],<br>            \"type\": \"pie\",<br>        }<br>    }<br><br>    # plotter.head will return the html string containing script tags for loading the plotly.js/C3.js libraries<br>    multiple_plot_html = plotly_plotter.head + c3_plotter.head<br><br>    multiple_plot_html += c3_plotter.render(data=c3_chart, div_id=\"chart_1\")<br><br>    multiple_plot_html += plotly_plotter.render(<br>        data=plotly_chart, layout=plotly_layout, div_id=\"chart_2\")<br><br>    # display multiple plots in iframe<br>    HTML(c3_plotter.iframe.format(source=multiple_plot_html, w=600, h=900))<br>    # Write multiple plots to file<br>    with open(\"multiple_plots.html\", 'w') as outfile:<br>        outfile.write(multiple_plot_html)<br><br>.. figure:: https://github.com/niloch/iplotter/blob/master/imgs/plot5.png?raw=true<br>   :alt: Plot 5<br><br>   Plot5<br><br> ## Exporting plots to PNG images with<br>`Selenium &lt;http://www.seleniumhq.org/&gt;`__<br><br>Saved interactive HTML plots can be converted to static png images<br>programatically for inclusion in other documents via a Selenium helper<br>class. The user will need to download a compatible webdriver and include<br>it in their PATH. The expected default is the `Chrome<br>webdriver &lt;https://sites.google.com/a/chromium.org/chromedriver/&gt;`__<br><br>Using the context manager syntax is recommended as in<br>``with VirtualBrowser() as browser`` to ensure the browswer session is<br>properly released. However it can be used as a normal object by calling<br>``browser().quit()`` to end the session.<br><br>.. code:: python<br><br>    from iplotter import C3Plotter, ChartJSPlotter, VirtualBrowser<br><br>    plotter1 = C3Plotter()<br>    plotter2 = ChartJSPlotter()<br><br>    ####  specify data for charts here...<br><br>    plotter1.save(data1, filename=\"chart1\")  # save first plot to chart1.html<br>    plotter2.save(data2, filename=\"chart2\")  # save second plot to chart2.html<br><br>    charts = [\"chart1\", \"chart2\"]<br><br>    with VirtualBrowser() as browser:<br>        for chart in charts:<br>            browser.save_as_png(<br>                filename=chart, width=300,<br>                height=200)  # save html chart to filename + '.png'<br><br>.. |PyPI version| image:: https://badge.fury.io/py/iplotter.svg<br>   :target: https://badge.fury.io/py/iplotter<br>.. |PyPI| image:: https://img.shields.io/pypi/pyversions/iplotter.svg<br>   :target: <br>.. |PyPI| image:: https://img.shields.io/pypi/dm/iplotter.svg<br>   :target:\n          </div>"}, "last_serial": 2820559, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "5c9b0e2d3c6434bb01b27ec25059f09a", "sha256": "6418807535a5c8be819e94626c0802aa29a7291dc0dd551c024b13eb7c6a3c20"}, "downloads": -1, "filename": "iplotter-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5c9b0e2d3c6434bb01b27ec25059f09a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6418, "upload_time": "2015-10-07T19:34:33", "upload_time_iso_8601": "2015-10-07T19:34:33.868178Z", "url": "https://files.pythonhosted.org/packages/50/7a/4f12aee4de624066a1c61936edb15e12ece334426a05aed60215b997bef4/iplotter-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5aa41784ec62edbb9ab17686f2aa64a", "sha256": "7dfd2a0788e5bd27b6ba78c084ac6150ef851f2a23432c515ba4a671ce7c93f9"}, "downloads": -1, "filename": "iplotter-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f5aa41784ec62edbb9ab17686f2aa64a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 136222, "upload_time": "2015-10-07T19:34:37", "upload_time_iso_8601": "2015-10-07T19:34:37.830844Z", "url": "https://files.pythonhosted.org/packages/cf/7e/f8343dd778f1c4f6bb8ba5f665a93f69e70f7304adb76f962403c5ffdfae/iplotter-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "9b35a2bc4867f5fe0350c5091a052cf5", "sha256": "0658e5bb50cf2c1f8edbb59b4adc511bae2af107cac7ea6e80424d5dbe3454e9"}, "downloads": -1, "filename": "iplotter-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9b35a2bc4867f5fe0350c5091a052cf5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6843, "upload_time": "2015-10-07T20:34:53", "upload_time_iso_8601": "2015-10-07T20:34:53.493276Z", "url": "https://files.pythonhosted.org/packages/96/29/858fa9d47b984e2a8df2c7408439be3432e21c29353ac18d47ab7e82db8a/iplotter-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04377bd7ecbe21d8c576601fa0268078", "sha256": "8808f22469e6cc3e6b3959a0c3b7081523c53d848088658766e988a132e100bc"}, "downloads": -1, "filename": "iplotter-0.1.3.tar.gz", "has_sig": false, "md5_digest": "04377bd7ecbe21d8c576601fa0268078", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 186647, "upload_time": "2015-10-07T20:34:57", "upload_time_iso_8601": "2015-10-07T20:34:57.310174Z", "url": "https://files.pythonhosted.org/packages/b6/8f/1e9d28787c9be50cb69626b7541756577443ebe52284d66884fec1c04e36/iplotter-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "b74f7e1be5ff62185623d3c3c6d7c1b1", "sha256": "1c3206a079bc38f9c3591599a73907d436c01b0310af96d8bc6ea2d45fea537d"}, "downloads": -1, "filename": "iplotter-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b74f7e1be5ff62185623d3c3c6d7c1b1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6835, "upload_time": "2015-10-16T14:53:13", "upload_time_iso_8601": "2015-10-16T14:53:13.214480Z", "url": "https://files.pythonhosted.org/packages/fe/c7/2390e9da4f4000c5c387f1491b8d12e3250ff2306a424644ceb73980a922/iplotter-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b16ef9f2c2008a6624b302ac91427c9f", "sha256": "4345c389bc1a5ee65871d9035fe8990cb3d422776cd08e094bf751d5d284106f"}, "downloads": -1, "filename": "iplotter-0.1.4.tar.gz", "has_sig": false, "md5_digest": "b16ef9f2c2008a6624b302ac91427c9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 186608, "upload_time": "2015-10-16T14:53:18", "upload_time_iso_8601": "2015-10-16T14:53:18.922003Z", "url": "https://files.pythonhosted.org/packages/f6/9b/c113a4fd3750998de74c6bf9ee5a2153ee62e45efa2139296f1be9aaa3f2/iplotter-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "82a8b3aef028fe39df506d7d93a7f709", "sha256": "8a6bdf268efab930a922ef6fd0c99040bbab2d863b92bf6a0576893a0dd5be4c"}, "downloads": -1, "filename": "iplotter-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "82a8b3aef028fe39df506d7d93a7f709", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6940, "upload_time": "2016-01-14T21:49:17", "upload_time_iso_8601": "2016-01-14T21:49:17.624916Z", "url": "https://files.pythonhosted.org/packages/69/df/0ce7811cd8637f336fb298424b0c71e7ebfc9b61121799c493e8106f321f/iplotter-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af5f684e7a50608adcfffa4ec2248465", "sha256": "46b2b1f287a456f54f7e615bcf361be29a9eecf46707c875fd7e900985bdacd6"}, "downloads": -1, "filename": "iplotter-0.1.5.tar.gz", "has_sig": false, "md5_digest": "af5f684e7a50608adcfffa4ec2248465", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 186750, "upload_time": "2016-01-14T21:49:24", "upload_time_iso_8601": "2016-01-14T21:49:24.016257Z", "url": "https://files.pythonhosted.org/packages/0e/de/a37edef999c54f00f0677699d3fa405919a9bd7e91dcee0c26480da0830a/iplotter-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "bcb34c7b6a7c6f817c23644f35dd7064", "sha256": "1604630308e0a048553238bb50200bb70baf95a8fa6a4a0d986ec970f1aa5541"}, "downloads": -1, "filename": "iplotter-0.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bcb34c7b6a7c6f817c23644f35dd7064", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7877, "upload_time": "2016-02-23T19:35:46", "upload_time_iso_8601": "2016-02-23T19:35:46.698043Z", "url": "https://files.pythonhosted.org/packages/d9/b5/3b395f036106e535f31dc268ae22960413e6378f78470b61ded00d1aee28/iplotter-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b907a6b036afed0fef37789fe5f3f8f", "sha256": "f3267cf00e84ddf5b76f95a212c494f4d053515d3c45e48cbc3d57e59a2916b1"}, "downloads": -1, "filename": "iplotter-0.1.6.tar.gz", "has_sig": false, "md5_digest": "5b907a6b036afed0fef37789fe5f3f8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 236390, "upload_time": "2016-02-23T19:35:52", "upload_time_iso_8601": "2016-02-23T19:35:52.520675Z", "url": "https://files.pythonhosted.org/packages/5a/a9/f064f50c71a7081c731b8df80cbd3c94e4f5c9e46e7e39757540ada0a47b/iplotter-0.1.6.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "219a05625335050f5f388c9e4d078ce7", "sha256": "287ced9af9ce1a4231663a17f438e4fed6a4afa95bfd9e95d327d6d5eb945e8f"}, "downloads": -1, "filename": "iplotter-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "219a05625335050f5f388c9e4d078ce7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10657, "upload_time": "2016-03-07T16:08:37", "upload_time_iso_8601": "2016-03-07T16:08:37.378134Z", "url": "https://files.pythonhosted.org/packages/4b/cf/13b9cb395b828ca1341e9ac53ad8c7ba63df5e48de3a21ef4647d5c113fb/iplotter-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a34c1c99063c7d6da7063bc6811c9067", "sha256": "0bb8622519cadaa77359eaa6d97cd6e9c6280dc5836011b6a7bb26b63aa33a8e"}, "downloads": -1, "filename": "iplotter-0.2.2.tar.gz", "has_sig": false, "md5_digest": "a34c1c99063c7d6da7063bc6811c9067", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 440972, "upload_time": "2016-03-07T16:11:37", "upload_time_iso_8601": "2016-03-07T16:11:37.281396Z", "url": "https://files.pythonhosted.org/packages/f9/ca/6be81d7472ae5d16a0790acf0445a95e15b0ed937038a979d92e6779fea8/iplotter-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b95f5a4bbe4b98e15880d44545a1ad09", "sha256": "ffa6220bbfc1a72a83c331a77c08b69a4b56fa8c90cbe7d1223ab8cbf5c0fda4"}, "downloads": -1, "filename": "iplotter-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b95f5a4bbe4b98e15880d44545a1ad09", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11409, "upload_time": "2016-03-25T05:04:44", "upload_time_iso_8601": "2016-03-25T05:04:44.347344Z", "url": "https://files.pythonhosted.org/packages/4f/92/db17086d2eb206e39da6ce64b894d3e63003b16cf438db5cf228d8cb1f2f/iplotter-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f96880cf110694b94edaa888c8bca290", "sha256": "709ddd1d89ce007652b774bc1caef5395b39cae1dabeef01e5e8ae546ff8df78"}, "downloads": -1, "filename": "iplotter-0.3.0.tar.gz", "has_sig": false, "md5_digest": "f96880cf110694b94edaa888c8bca290", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 514956, "upload_time": "2016-03-25T05:05:10", "upload_time_iso_8601": "2016-03-25T05:05:10.364567Z", "url": "https://files.pythonhosted.org/packages/40/86/b0afeaa6d237fde27811e7e7f12872a264d832d41706d13756118ccd82b3/iplotter-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "80582f5d0350f2172382a84d72c7cf33", "sha256": "ac327a745cecd373e3bcbd08424bb017b54e7fb3ee1a4acdb6103aa6cfe84264"}, "downloads": -1, "filename": "iplotter-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "80582f5d0350f2172382a84d72c7cf33", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16708, "upload_time": "2016-05-06T22:00:11", "upload_time_iso_8601": "2016-05-06T22:00:11.793650Z", "url": "https://files.pythonhosted.org/packages/74/c5/351e81f1cb3078306299cc9b9dc31330321b7ab1ac907ad8846b17da606c/iplotter-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11a55bf972fb0d8529a9617600029153", "sha256": "7f1671bfe243a35d74778e04ba2e23eae216fe9aad6229a3f3a7e451e04087ad"}, "downloads": -1, "filename": "iplotter-0.3.1.tar.gz", "has_sig": false, "md5_digest": "11a55bf972fb0d8529a9617600029153", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 555078, "upload_time": "2016-05-06T22:00:21", "upload_time_iso_8601": "2016-05-06T22:00:21.756148Z", "url": "https://files.pythonhosted.org/packages/3e/e4/4b4ca86ea2e1beedf3c9e121241bd1f366673516e2095fa8b4ae6d24550c/iplotter-0.3.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "604c55866a78767b4189846ef4b66ac1", "sha256": "80f2a5451f2c4fbc724c5af9484066eeef1073d5b3cffb9d7bb5b540fd077bfb"}, "downloads": -1, "filename": "iplotter-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "604c55866a78767b4189846ef4b66ac1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19041, "upload_time": "2017-03-31T20:08:19", "upload_time_iso_8601": "2017-03-31T20:08:19.069512Z", "url": "https://files.pythonhosted.org/packages/01/c3/f342c07924e63bdf52b34581295713eb4af3878865438bb65cfd3fd961d0/iplotter-0.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11a43183c3715ee09b770a5a41934625", "sha256": "500897495f1f99fef6b452a27273cfa4f64b59886d829466ba3018425414e037"}, "downloads": -1, "filename": "iplotter-0.4.2.tar.gz", "has_sig": false, "md5_digest": "11a43183c3715ee09b770a5a41934625", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 564592, "upload_time": "2017-03-31T20:08:23", "upload_time_iso_8601": "2017-03-31T20:08:23.087985Z", "url": "https://files.pythonhosted.org/packages/a9/1e/691f4a077245bd18c46c7bc21fa30519a2d81cd22945c88e38a3e8a59940/iplotter-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "b7c01a3bc40abc5b5d400b2c425194bb", "sha256": "5e4efc2829dbe17ff9acc46c5d699dbe0f60176983c7e4c0c148a10ad18734a9"}, "downloads": -1, "filename": "iplotter-0.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b7c01a3bc40abc5b5d400b2c425194bb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19102, "upload_time": "2017-04-21T21:29:01", "upload_time_iso_8601": "2017-04-21T21:29:01.974645Z", "url": "https://files.pythonhosted.org/packages/8b/33/c53a232412c896d2f1e28ed97cf8782dfc0504a55477713477daa61cefb0/iplotter-0.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c660640ab39ebe26b5529afdb5f71570", "sha256": "5d219223ae3eac7cb0e6a3d2d3e166da5cc0cde34f81b7572f92f3f3c9e155e2"}, "downloads": -1, "filename": "iplotter-0.4.3.tar.gz", "has_sig": false, "md5_digest": "c660640ab39ebe26b5529afdb5f71570", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 564628, "upload_time": "2017-04-21T21:29:03", "upload_time_iso_8601": "2017-04-21T21:29:03.589389Z", "url": "https://files.pythonhosted.org/packages/3a/4e/992f8c11220403778d8332fc55761a731affbffdcda62605e2f2267a75a6/iplotter-0.4.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b7c01a3bc40abc5b5d400b2c425194bb", "sha256": "5e4efc2829dbe17ff9acc46c5d699dbe0f60176983c7e4c0c148a10ad18734a9"}, "downloads": -1, "filename": "iplotter-0.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b7c01a3bc40abc5b5d400b2c425194bb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19102, "upload_time": "2017-04-21T21:29:01", "upload_time_iso_8601": "2017-04-21T21:29:01.974645Z", "url": "https://files.pythonhosted.org/packages/8b/33/c53a232412c896d2f1e28ed97cf8782dfc0504a55477713477daa61cefb0/iplotter-0.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c660640ab39ebe26b5529afdb5f71570", "sha256": "5d219223ae3eac7cb0e6a3d2d3e166da5cc0cde34f81b7572f92f3f3c9e155e2"}, "downloads": -1, "filename": "iplotter-0.4.3.tar.gz", "has_sig": false, "md5_digest": "c660640ab39ebe26b5529afdb5f71570", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 564628, "upload_time": "2017-04-21T21:29:03", "upload_time_iso_8601": "2017-04-21T21:29:03.589389Z", "url": "https://files.pythonhosted.org/packages/3a/4e/992f8c11220403778d8332fc55761a731affbffdcda62605e2f2267a75a6/iplotter-0.4.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:37 2020"}