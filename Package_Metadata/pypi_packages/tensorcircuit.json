{"info": {"author": "refraction-ray", "author_email": "refraction-ray@protonmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# TENSORCIRCUIT\n\nThis project is partially inspired by [mpsim](https://github.com/grmlarose/mpsim) which builds the quantum circuit model on top of tensornetwork setups instead of directly matrix manipulations.\n\nWith [TensorNetwork](https://github.com/google/TensorNetwork) project announced by Google, such setup may gain benefits from swift implementation to auto differentiation abilities.\n\nThis is only a toy project at very early stage and it may always be at this stage. There might be not only sharp edges but also essential bugs in the project.\nTry it on your own risk.\n\n## Baisc Usage\n\n```python\nimport tensorcircuit as tc\nc = tc.Circuit(2)\nc.H(0)\nc.CNOT(0,1)\nprint(c.perfect_sampling())\nprint(c.wavefunction())\nprint(c.measure(1))\nprint(c.expectation(tc.gates.z(), 1))\n```\n\nRuntime behavior changing:\n\n```python\ntc.set_backend(\"tensorflow\")\ntc.set_dtype(\"complex128\")\ntc.set_contractor(\"greedy\")\n```\n\nAuto differentiations with jit (tf and jax supported):\n\n```python\n@tc.backend.jit\ndef forward(theta):\n    c = tc.Circuit(2)\n    c.R(0, theta=theta, alpha=0.5, phi=0.8)\n    return tc.backend.real(c.expectation(tc.gates.z(), 0))\n\ng = tc.backend.grad(forward)\ng = tc.backend.jit(g)\ntheta = tc.gates.num_to_tensor(1.0)\nprint(g(theta))\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/refraction-ray/tensorcircuit", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tensorcircuit", "package_url": "https://pypi.org/project/tensorcircuit/", "platform": "", "project_url": "https://pypi.org/project/tensorcircuit/", "project_urls": {"Homepage": "https://github.com/refraction-ray/tensorcircuit"}, "release_url": "https://pypi.org/project/tensorcircuit/0.0.1/", "requires_dist": ["numpy", "scipy", "tensornetwork"], "requires_python": "", "summary": "Quantum circuits on top of tensor network", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TENSORCIRCUIT</h1>\n<p>This project is partially inspired by <a href=\"https://github.com/grmlarose/mpsim\" rel=\"nofollow\">mpsim</a> which builds the quantum circuit model on top of tensornetwork setups instead of directly matrix manipulations.</p>\n<p>With <a href=\"https://github.com/google/TensorNetwork\" rel=\"nofollow\">TensorNetwork</a> project announced by Google, such setup may gain benefits from swift implementation to auto differentiation abilities.</p>\n<p>This is only a toy project at very early stage and it may always be at this stage. There might be not only sharp edges but also essential bugs in the project.\nTry it on your own risk.</p>\n<h2>Baisc Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tensorcircuit</span> <span class=\"k\">as</span> <span class=\"nn\">tc</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">Circuit</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">H</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">CNOT</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">perfect_sampling</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">wavefunction</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">measure</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">expectation</span><span class=\"p\">(</span><span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">gates</span><span class=\"o\">.</span><span class=\"n\">z</span><span class=\"p\">(),</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n</pre>\n<p>Runtime behavior changing:</p>\n<pre><span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">set_backend</span><span class=\"p\">(</span><span class=\"s2\">\"tensorflow\"</span><span class=\"p\">)</span>\n<span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">set_dtype</span><span class=\"p\">(</span><span class=\"s2\">\"complex128\"</span><span class=\"p\">)</span>\n<span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">set_contractor</span><span class=\"p\">(</span><span class=\"s2\">\"greedy\"</span><span class=\"p\">)</span>\n</pre>\n<p>Auto differentiations with jit (tf and jax supported):</p>\n<pre><span class=\"nd\">@tc</span><span class=\"o\">.</span><span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">jit</span>\n<span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">):</span>\n    <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">Circuit</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">R</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"mf\">0.8</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">real</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">expectation</span><span class=\"p\">(</span><span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">gates</span><span class=\"o\">.</span><span class=\"n\">z</span><span class=\"p\">(),</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n\n<span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">grad</span><span class=\"p\">(</span><span class=\"n\">forward</span><span class=\"p\">)</span>\n<span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">jit</span><span class=\"p\">(</span><span class=\"n\">g</span><span class=\"p\">)</span>\n<span class=\"n\">theta</span> <span class=\"o\">=</span> <span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">gates</span><span class=\"o\">.</span><span class=\"n\">num_to_tensor</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">g</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">))</span>\n</pre>\n\n          </div>"}, "last_serial": 7051816, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b3c49b63fd79c509841b56c47d3152ef", "sha256": "bdc91ece34cc96bfd8e67b0c50b75e308b154b0b8d6c94783682bc295b216d89"}, "downloads": -1, "filename": "tensorcircuit-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b3c49b63fd79c509841b56c47d3152ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10152, "upload_time": "2020-04-19T07:10:49", "upload_time_iso_8601": "2020-04-19T07:10:49.466150Z", "url": "https://files.pythonhosted.org/packages/ff/e6/f5acc9c43764baa5a44cb784589698263f992672f497f1462942895f5335/tensorcircuit-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "caac5ab155794ee4048040a846f4b3fd", "sha256": "1e1e2168feb090280948416606006befa1c81b77972e662486ea9a876463b036"}, "downloads": -1, "filename": "tensorcircuit-0.0.1.tar.gz", "has_sig": false, "md5_digest": "caac5ab155794ee4048040a846f4b3fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8455, "upload_time": "2020-04-19T07:10:52", "upload_time_iso_8601": "2020-04-19T07:10:52.340824Z", "url": "https://files.pythonhosted.org/packages/60/1f/041c3c6e1afdd654542fad8697fbddd3921b36e7f4513bcb12f0be51df26/tensorcircuit-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b3c49b63fd79c509841b56c47d3152ef", "sha256": "bdc91ece34cc96bfd8e67b0c50b75e308b154b0b8d6c94783682bc295b216d89"}, "downloads": -1, "filename": "tensorcircuit-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b3c49b63fd79c509841b56c47d3152ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10152, "upload_time": "2020-04-19T07:10:49", "upload_time_iso_8601": "2020-04-19T07:10:49.466150Z", "url": "https://files.pythonhosted.org/packages/ff/e6/f5acc9c43764baa5a44cb784589698263f992672f497f1462942895f5335/tensorcircuit-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "caac5ab155794ee4048040a846f4b3fd", "sha256": "1e1e2168feb090280948416606006befa1c81b77972e662486ea9a876463b036"}, "downloads": -1, "filename": "tensorcircuit-0.0.1.tar.gz", "has_sig": false, "md5_digest": "caac5ab155794ee4048040a846f4b3fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8455, "upload_time": "2020-04-19T07:10:52", "upload_time_iso_8601": "2020-04-19T07:10:52.340824Z", "url": "https://files.pythonhosted.org/packages/60/1f/041c3c6e1afdd654542fad8697fbddd3921b36e7f4513bcb12f0be51df26/tensorcircuit-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:27 2020"}