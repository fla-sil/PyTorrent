{"info": {"author": "Colton Leekley-Winslow", "author_email": "colton@hurricanelabs.com", "bugtrack_url": null, "classifiers": [], "description": "#########\nstaticargs\n#########\n**A clean way to work around mutable default arguments in python functions**\n\nGet staticargs\n=============\n\nstaticargs supports Python 2 and 3.  Tests are run for 2.7 and 3.4\n\n.. code-block:: shell\n\n    pip install staticargs\n\nRun the tests\n=============\nYou must install tox, then run:\n\n.. code-block:: shell\n\n    git clone https://github.com/HurricaneLabs/staticargs.git\n    cd staticargs\n    tox\n\nExample\n--------\n\nFirst view the problem we are going to solve:\n\n.. code-block:: python\n\n    >>> def append_cat(cats=[]):\n    ...     cats.append(\"cat\")\n    ...     return cats\n    ...\n    >>> print(append_cat())\n    ['cat']\n    >>> print(append_cat())\n    ['cat', 'cat']\n    >>> print(append_cat())\n    ['cat', 'cat', 'cat']\n    >>>\n\nWell that's not good!  Notice how even though we are appending \"cat\" only once, the number of items in the list returned gets bigger each time.  Learn more about this problem and some other Python gotchas by watching this amazing presentation from PyCon 2015 (this specific problem is discussed at 8:04):  https://youtu.be/sH4XF6pKKmk\n\nstaticargs solves this problem for you:\n\n.. code-block:: python\n\n    >>> from staticargs import staticargs\n    >>> import random\n    >>>\n    >>> @staticargs\n    ... def append_cat(cats=[]):\n    ...     #I love cats\n    ...     cats.append(\"cat\")\n    ...     return cats\n    ...\n    >>> print(append_cat())\n    ['cat']\n    >>> print(append_cat())\n    ['cat']\n    >>> print(append_cat())\n    ['cat']\n    >>>\n    >>> @staticargs\n    ... def store_dog(dogs={}):\n    ...     #Dogs are OK I guess\n    ...     dog_name = random.choice([\"rufus\", \"muffins\", \"scooby\"])\n    ...     dogs[dog_name] = \"good boy\"\n    ...     return dogs\n    ...\n    >>> print(store_dog())\n    {'muffins': 'good boy'}\n    >>> print(store_dog())\n    {'scooby': 'good boy'}\n    >>> print(store_dog())\n    {'rufus': 'good boy'}\n    >>>\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/HurricaneLabs/staticargs", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "staticargs", "package_url": "https://pypi.org/project/staticargs/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/staticargs/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/HurricaneLabs/staticargs"}, "release_url": "https://pypi.org/project/staticargs/1.0.0rc3/", "requires_dist": null, "requires_python": null, "summary": "Work around mutable default arguments in function definitions", "version": "1.0.0rc3", "yanked": false, "html_description": "<div class=\"project-description\">\n            #########<br>staticargs<br>#########<br>**A clean way to work around mutable default arguments in python functions**<br><br>Get staticargs<br>=============<br><br>staticargs supports Python 2 and 3.  Tests are run for 2.7 and 3.4<br><br>.. code-block:: shell<br><br>    pip install staticargs<br><br>Run the tests<br>=============<br>You must install tox, then run:<br><br>.. code-block:: shell<br><br>    git clone https://github.com/HurricaneLabs/staticargs.git<br>    cd staticargs<br>    tox<br><br>Example<br>--------<br><br>First view the problem we are going to solve:<br><br>.. code-block:: python<br><br>    &gt;&gt;&gt; def append_cat(cats=[]):<br>    ...     cats.append(\"cat\")<br>    ...     return cats<br>    ...<br>    &gt;&gt;&gt; print(append_cat())<br>    ['cat']<br>    &gt;&gt;&gt; print(append_cat())<br>    ['cat', 'cat']<br>    &gt;&gt;&gt; print(append_cat())<br>    ['cat', 'cat', 'cat']<br>    &gt;&gt;&gt;<br><br>Well that's not good!  Notice how even though we are appending \"cat\" only once, the number of items in the list returned gets bigger each time.  Learn more about this problem and some other Python gotchas by watching this amazing presentation from PyCon 2015 (this specific problem is discussed at 8:04):  https://youtu.be/sH4XF6pKKmk<br><br>staticargs solves this problem for you:<br><br>.. code-block:: python<br><br>    &gt;&gt;&gt; from staticargs import staticargs<br>    &gt;&gt;&gt; import random<br>    &gt;&gt;&gt;<br>    &gt;&gt;&gt; @staticargs<br>    ... def append_cat(cats=[]):<br>    ...     #I love cats<br>    ...     cats.append(\"cat\")<br>    ...     return cats<br>    ...<br>    &gt;&gt;&gt; print(append_cat())<br>    ['cat']<br>    &gt;&gt;&gt; print(append_cat())<br>    ['cat']<br>    &gt;&gt;&gt; print(append_cat())<br>    ['cat']<br>    &gt;&gt;&gt;<br>    &gt;&gt;&gt; @staticargs<br>    ... def store_dog(dogs={}):<br>    ...     #Dogs are OK I guess<br>    ...     dog_name = random.choice([\"rufus\", \"muffins\", \"scooby\"])<br>    ...     dogs[dog_name] = \"good boy\"<br>    ...     return dogs<br>    ...<br>    &gt;&gt;&gt; print(store_dog())<br>    {'muffins': 'good boy'}<br>    &gt;&gt;&gt; print(store_dog())<br>    {'scooby': 'good boy'}<br>    &gt;&gt;&gt; print(store_dog())<br>    {'rufus': 'good boy'}<br>    &gt;&gt;&gt;<br>\n          </div>"}, "last_serial": 1501899, "releases": {"1.0.0rc2": [{"comment_text": "", "digests": {"md5": "5b022255774536676f049d00a1333eb7", "sha256": "ba48473426f1ab65ce8f8aaf38f5ff1f1006c4b7eeafe37062eaf6831e3755e9"}, "downloads": -1, "filename": "staticargs-1.0.0rc2.tar.gz", "has_sig": false, "md5_digest": "5b022255774536676f049d00a1333eb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2676, "upload_time": "2015-04-12T03:34:40", "upload_time_iso_8601": "2015-04-12T03:34:40.127037Z", "url": "https://files.pythonhosted.org/packages/71/8c/00d23f3c326f0fad136436a24f1c83bdb8591a93114fec2145d556234d5d/staticargs-1.0.0rc2.tar.gz", "yanked": false}], "1.0.0rc3": [{"comment_text": "", "digests": {"md5": "42ff3334e603365fb80f119610b2fcf0", "sha256": "1384c975653e0535035a0786e855cd35e06e94d51e88b70593feafce72f0db6b"}, "downloads": -1, "filename": "staticargs-1.0.0rc3.tar.gz", "has_sig": false, "md5_digest": "42ff3334e603365fb80f119610b2fcf0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2694, "upload_time": "2015-04-12T03:36:51", "upload_time_iso_8601": "2015-04-12T03:36:51.881189Z", "url": "https://files.pythonhosted.org/packages/f8/14/e1b5e62c38e7207a06ea9fafdfbc1907967ab1149f315502e52fed8d552f/staticargs-1.0.0rc3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "42ff3334e603365fb80f119610b2fcf0", "sha256": "1384c975653e0535035a0786e855cd35e06e94d51e88b70593feafce72f0db6b"}, "downloads": -1, "filename": "staticargs-1.0.0rc3.tar.gz", "has_sig": false, "md5_digest": "42ff3334e603365fb80f119610b2fcf0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2694, "upload_time": "2015-04-12T03:36:51", "upload_time_iso_8601": "2015-04-12T03:36:51.881189Z", "url": "https://files.pythonhosted.org/packages/f8/14/e1b5e62c38e7207a06ea9fafdfbc1907967ab1149f315502e52fed8d552f/staticargs-1.0.0rc3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:28 2020"}