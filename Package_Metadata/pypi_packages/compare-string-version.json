{"info": {"author": "Miguel Almeida", "author_email": "mplabdev@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Internationalization"], "description": "This is a software library that accepts 2 version string as input and \nreturns whether one is greater than, equal, or less than the other. \nAs an example: \"1.2\" is greater than \"1.1\". \n\nREQUIREMENTS: PYTHON 3. and above\n\nusage:\n\n    from compare_string_version import compareVersion\n    print(compareVersion(a,b))\n\nexpected return\n\nwhen\n\n    a==b:\n\n        a is equal to b\n\n    a>b:\n\n        a is greater than b\n\n    a<b: \n\n        a is less than b\n\nExceptions:\n\neither a is null and/or b is null:\n    Value(s) can not be null: Both values must be string    \neither a and/or b are/is not a string:\n    Both must be string\n\nassumptions:\n\n    a and b are string\n\n    a and b are not null (None)\n\n    both version strings only contain numbers (0...9) and this char '.':\n\n        123.456.789.012\n\n        'A..Z','a..z' and any other chars like \"! @ # $ % * [ } ] { ^ \u00c3\u00a7 ? ; : . > , < | \" will be removed from the comparison:\n            some adjustment would be applied after char removal:\n            '..' will be replaced by '.'\n            string ending in '.' will be shorted by 1\n\n    this '..' will not be accepted as it is '.' duplicated:\n            '10..12..13..14' will become '10.12.13.14'\n\n    the comparison would be from the group split by the char '.':\n            10.12.13.14 would be treated as 10 12 13 14\n            01.10.100.001 would be treated as 1 10 100 1\n\n    all the comparison would check the integer part of the version:\n            '10.0' is equal to '010.0.0.0.0.0.0.0' because int('10.0') is equal to int ('010')\n\n    whoever version number has the higher far left group would be named as greater:\n            10.0.0.0.0.1 is greater then 9.9.9.9.9.9.9\n            0.1.0.0.0.0.1 is greater than 0.0.9\n            the same \"int\" rule will be applied for any other group in the string\n\n    all '0's from the left will be disregarded if its value is '0':\n            1.0.0.0 is equal to 1.0 and it is equal to 1\n\n\nthe following .py were used in order to test data\n\ntest997.py has generated output5.txt\n\ntest996.py has generated output4.txt\n\ntest995.py has generated output1.txt and output2.txt\n\ntest994.py has generated output3.txt\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/miguelluiz/compare_string_version/archive/v_01.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/miguelluiz/compare_string_version", "keywords": "Compare,version control,version string as input", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "compare-string-version", "package_url": "https://pypi.org/project/compare-string-version/", "platform": "", "project_url": "https://pypi.org/project/compare-string-version/", "project_urls": {"Download": "https://github.com/miguelluiz/compare_string_version/archive/v_01.tar.gz", "Homepage": "https://github.com/miguelluiz/compare_string_version"}, "release_url": "https://pypi.org/project/compare-string-version/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "accepts 2 version string as input and returns whether one is greater than, equal, or less than the other", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a software library that accepts 2 version string as input and\nreturns whether one is greater than, equal, or less than the other.\nAs an example: \"1.2\" is greater than \"1.1\".</p>\n<p>REQUIREMENTS: PYTHON 3. and above</p>\n<p>usage:</p>\n<pre><code>from compare_string_version import compareVersion\nprint(compareVersion(a,b))\n</code></pre>\n<p>expected return</p>\n<p>when</p>\n<pre><code>a==b:\n\n    a is equal to b\n\na&gt;b:\n\n    a is greater than b\n\na&lt;b: \n\n    a is less than b\n</code></pre>\n<p>Exceptions:</p>\n<p>either a is null and/or b is null:\nValue(s) can not be null: Both values must be string<br>\neither a and/or b are/is not a string:\nBoth must be string</p>\n<p>assumptions:</p>\n<pre><code>a and b are string\n\na and b are not null (None)\n\nboth version strings only contain numbers (0...9) and this char '.':\n\n    123.456.789.012\n\n    'A..Z','a..z' and any other chars like \"! @ # $ % * [ } ] { ^ \u00c3\u00a7 ? ; : . &gt; , &lt; | \" will be removed from the comparison:\n        some adjustment would be applied after char removal:\n        '..' will be replaced by '.'\n        string ending in '.' will be shorted by 1\n\nthis '..' will not be accepted as it is '.' duplicated:\n        '10..12..13..14' will become '10.12.13.14'\n\nthe comparison would be from the group split by the char '.':\n        10.12.13.14 would be treated as 10 12 13 14\n        01.10.100.001 would be treated as 1 10 100 1\n\nall the comparison would check the integer part of the version:\n        '10.0' is equal to '010.0.0.0.0.0.0.0' because int('10.0') is equal to int ('010')\n\nwhoever version number has the higher far left group would be named as greater:\n        10.0.0.0.0.1 is greater then 9.9.9.9.9.9.9\n        0.1.0.0.0.0.1 is greater than 0.0.9\n        the same \"int\" rule will be applied for any other group in the string\n\nall '0's from the left will be disregarded if its value is '0':\n        1.0.0.0 is equal to 1.0 and it is equal to 1\n</code></pre>\n<p>the following .py were used in order to test data</p>\n<p>test997.py has generated output5.txt</p>\n<p>test996.py has generated output4.txt</p>\n<p>test995.py has generated output1.txt and output2.txt</p>\n<p>test994.py has generated output3.txt</p>\n\n          </div>"}, "last_serial": 5108924, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7c5950a66815e0def982e655c2141e10", "sha256": "c5876f1486535a3a0f3360334b436f871899e9d6af497c2a71d23dceb79ac4f6"}, "downloads": -1, "filename": "compare_string_version-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7c5950a66815e0def982e655c2141e10", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5524, "upload_time": "2019-04-07T03:54:15", "upload_time_iso_8601": "2019-04-07T03:54:15.533917Z", "url": "https://files.pythonhosted.org/packages/c6/7c/dfd82618806e71cc26c7b083ffdb5ec0b78d0cda6f1e577bd3874e0b47bd/compare_string_version-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b1e7ecdc778a18e564f977ac14d26f0", "sha256": "ee2177bfe8f57520cdc76257d37adea930c5feb81befd3345090856f5640c0b0"}, "downloads": -1, "filename": "compare_string_version-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8b1e7ecdc778a18e564f977ac14d26f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4217, "upload_time": "2019-04-07T03:54:17", "upload_time_iso_8601": "2019-04-07T03:54:17.681790Z", "url": "https://files.pythonhosted.org/packages/a3/45/dc14b52eedf73acfd40b7859863def834821bb73904be4a41746aea60724/compare_string_version-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7c5950a66815e0def982e655c2141e10", "sha256": "c5876f1486535a3a0f3360334b436f871899e9d6af497c2a71d23dceb79ac4f6"}, "downloads": -1, "filename": "compare_string_version-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7c5950a66815e0def982e655c2141e10", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5524, "upload_time": "2019-04-07T03:54:15", "upload_time_iso_8601": "2019-04-07T03:54:15.533917Z", "url": "https://files.pythonhosted.org/packages/c6/7c/dfd82618806e71cc26c7b083ffdb5ec0b78d0cda6f1e577bd3874e0b47bd/compare_string_version-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b1e7ecdc778a18e564f977ac14d26f0", "sha256": "ee2177bfe8f57520cdc76257d37adea930c5feb81befd3345090856f5640c0b0"}, "downloads": -1, "filename": "compare_string_version-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8b1e7ecdc778a18e564f977ac14d26f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4217, "upload_time": "2019-04-07T03:54:17", "upload_time_iso_8601": "2019-04-07T03:54:17.681790Z", "url": "https://files.pythonhosted.org/packages/a3/45/dc14b52eedf73acfd40b7859863def834821bb73904be4a41746aea60724/compare_string_version-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:16 2020"}