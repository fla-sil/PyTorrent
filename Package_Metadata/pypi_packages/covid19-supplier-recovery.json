{"info": {"author": "Ivo Bernardo, Sam Hopkins, Nuno Bras (DareData Engineering)", "author_email": "ivo@daredata.engineering", "bugtrack_url": null, "classifiers": [], "description": "# covid-19-supplier-economic-recovery\n\n## DISCLAIMER\n\nWe are not economists. We are not epidemiologists. All core assumptions that\nare related to each of these fields are taken from experts. This is not an\nacademic paper and has not gone through a peer review process. As a pandemic\nin modern times is a unique event, it is not possible to model resulting\neconomics events with any degree of certainty. The best we can likely hope\nfor is to maintain multiple plausible scenarios that can be used to inform high\nlevel strategic planning.\n\nAny examples provided in this paper or documentation are NOT to be taken as\nready for use in any particular use case.\n\n## Install\n\n```\n# ALWAYS create a virtualenv first\n\n# then pip install\npip install covid19-supplier-recovery\n```\n\n## Step 1: Read the paper\n\nIt's [here](https://docs.google.com/document/d/1cD82e4LuWe0lUrHlFCy9GBYMcJesbVRGy9zBlU9r0wM/)\n\nRead it and understand it. It does not make sense to use this without\nunderstanding the assumptions and structure.\n\n## Step 2: See the API usage\n\nSay that you have a 10 week sales forecast in which you will sell\n100 euros each week. You would express this forecast using a simple\npython list:\n\n```py\nforecast = [100] * 10\n```\n\nAssuming a single 3-week lockdown starting on the second week:\n\n```py\nlockdowns = [\n    {\n        'start': 1,\n        'length': 3,\n        'immediate_loss': 0.9,\n        'client_deaths': generic_linear_func(\n            x_intercept=0.05, slope=0.05),\n        'lockdown_growth': generic_linear_func(\n            x_intercept=0.0, slope=0.01)\n    }\n]\n```\n\nAnd the corresponding recovery:\n\n```py\nrecoveries = [\n    {\n        'client_recovery': generic_linear_func(\n            x_intercept=0.1, slope=0.01),\n        'market_appetite': generic_linear_func(0.2, 0.02)\n    }\n]\n```\n\nYou would model your forecast like so:\n\n```py\nrm = RecoveryModel(\n    normal_forecast=forecast,\n    lockdowns=lockdowns,\n    recoveries=recoveries\n)\n\nadjusted_forecasts = rm.model_recovery()\n```\n\nAnd your adjusted forecasts should look like so:\n\n```py\n[\n    # start business as usual\n    100.0,\n    # start lockdown\n    10.0,\n    11.0,\n    12.0,\n    # start recovery\n    30.0,   # .12 + ( (.85 + .10) * .20 )\n    32.0,   # .12 + ( (.85 + .11) * .22 )\n    34.0,   # .12 + ( (.85 + .12) * .24 )\n    36.0,   # .12 + ( (.85 + .13) * .26 )\n    38.0,   # .12 + ( (.85 + .14) * .28 )\n    41.0,   # forecast end\n]\n```\n\n## Step 3: Make your own forecast\n\nThis part will be hard. Selecting the parameters for the model is insanely\ndifficult and requires a TON of industry knowledge. You should probably\nmaintain several different scenarios and update them as more data, policy,\nand other information becomes available.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/DareData-open-source/covid-19-supplier-recovery", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "covid19-supplier-recovery", "package_url": "https://pypi.org/project/covid19-supplier-recovery/", "platform": "", "project_url": "https://pypi.org/project/covid19-supplier-recovery/", "project_urls": {"Homepage": "https://gitlab.com/DareData-open-source/covid-19-supplier-recovery"}, "release_url": "https://pypi.org/project/covid19-supplier-recovery/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Modeling the recovery from covid19 crisis for suppliers to industries that have been severely impacted.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>covid-19-supplier-economic-recovery</h1>\n<h2>DISCLAIMER</h2>\n<p>We are not economists. We are not epidemiologists. All core assumptions that\nare related to each of these fields are taken from experts. This is not an\nacademic paper and has not gone through a peer review process. As a pandemic\nin modern times is a unique event, it is not possible to model resulting\neconomics events with any degree of certainty. The best we can likely hope\nfor is to maintain multiple plausible scenarios that can be used to inform high\nlevel strategic planning.</p>\n<p>Any examples provided in this paper or documentation are NOT to be taken as\nready for use in any particular use case.</p>\n<h2>Install</h2>\n<pre><code># ALWAYS create a virtualenv first\n\n# then pip install\npip install covid19-supplier-recovery\n</code></pre>\n<h2>Step 1: Read the paper</h2>\n<p>It's <a href=\"https://docs.google.com/document/d/1cD82e4LuWe0lUrHlFCy9GBYMcJesbVRGy9zBlU9r0wM/\" rel=\"nofollow\">here</a></p>\n<p>Read it and understand it. It does not make sense to use this without\nunderstanding the assumptions and structure.</p>\n<h2>Step 2: See the API usage</h2>\n<p>Say that you have a 10 week sales forecast in which you will sell\n100 euros each week. You would express this forecast using a simple\npython list:</p>\n<pre><span class=\"n\">forecast</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">10</span>\n</pre>\n<p>Assuming a single 3-week lockdown starting on the second week:</p>\n<pre><span class=\"n\">lockdowns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'start'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"s1\">'length'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n        <span class=\"s1\">'immediate_loss'</span><span class=\"p\">:</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span>\n        <span class=\"s1\">'client_deaths'</span><span class=\"p\">:</span> <span class=\"n\">generic_linear_func</span><span class=\"p\">(</span>\n            <span class=\"n\">x_intercept</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"n\">slope</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">),</span>\n        <span class=\"s1\">'lockdown_growth'</span><span class=\"p\">:</span> <span class=\"n\">generic_linear_func</span><span class=\"p\">(</span>\n            <span class=\"n\">x_intercept</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">slope</span><span class=\"o\">=</span><span class=\"mf\">0.01</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>And the corresponding recovery:</p>\n<pre><span class=\"n\">recoveries</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'client_recovery'</span><span class=\"p\">:</span> <span class=\"n\">generic_linear_func</span><span class=\"p\">(</span>\n            <span class=\"n\">x_intercept</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">slope</span><span class=\"o\">=</span><span class=\"mf\">0.01</span><span class=\"p\">),</span>\n        <span class=\"s1\">'market_appetite'</span><span class=\"p\">:</span> <span class=\"n\">generic_linear_func</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">0.02</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>You would model your forecast like so:</p>\n<pre><span class=\"n\">rm</span> <span class=\"o\">=</span> <span class=\"n\">RecoveryModel</span><span class=\"p\">(</span>\n    <span class=\"n\">normal_forecast</span><span class=\"o\">=</span><span class=\"n\">forecast</span><span class=\"p\">,</span>\n    <span class=\"n\">lockdowns</span><span class=\"o\">=</span><span class=\"n\">lockdowns</span><span class=\"p\">,</span>\n    <span class=\"n\">recoveries</span><span class=\"o\">=</span><span class=\"n\">recoveries</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">adjusted_forecasts</span> <span class=\"o\">=</span> <span class=\"n\">rm</span><span class=\"o\">.</span><span class=\"n\">model_recovery</span><span class=\"p\">()</span>\n</pre>\n<p>And your adjusted forecasts should look like so:</p>\n<pre><span class=\"p\">[</span>\n    <span class=\"c1\"># start business as usual</span>\n    <span class=\"mf\">100.0</span><span class=\"p\">,</span>\n    <span class=\"c1\"># start lockdown</span>\n    <span class=\"mf\">10.0</span><span class=\"p\">,</span>\n    <span class=\"mf\">11.0</span><span class=\"p\">,</span>\n    <span class=\"mf\">12.0</span><span class=\"p\">,</span>\n    <span class=\"c1\"># start recovery</span>\n    <span class=\"mf\">30.0</span><span class=\"p\">,</span>   <span class=\"c1\"># .12 + ( (.85 + .10) * .20 )</span>\n    <span class=\"mf\">32.0</span><span class=\"p\">,</span>   <span class=\"c1\"># .12 + ( (.85 + .11) * .22 )</span>\n    <span class=\"mf\">34.0</span><span class=\"p\">,</span>   <span class=\"c1\"># .12 + ( (.85 + .12) * .24 )</span>\n    <span class=\"mf\">36.0</span><span class=\"p\">,</span>   <span class=\"c1\"># .12 + ( (.85 + .13) * .26 )</span>\n    <span class=\"mf\">38.0</span><span class=\"p\">,</span>   <span class=\"c1\"># .12 + ( (.85 + .14) * .28 )</span>\n    <span class=\"mf\">41.0</span><span class=\"p\">,</span>   <span class=\"c1\"># forecast end</span>\n<span class=\"p\">]</span>\n</pre>\n<h2>Step 3: Make your own forecast</h2>\n<p>This part will be hard. Selecting the parameters for the model is insanely\ndifficult and requires a TON of industry knowledge. You should probably\nmaintain several different scenarios and update them as more data, policy,\nand other information becomes available.</p>\n\n          </div>"}, "last_serial": 6991285, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4a42627ba1869d8d00a679144bf05d30", "sha256": "2bfee22e3c5c5bff631aa53853c3afd10fb201ec0a9194d14601b2932090b1ec"}, "downloads": -1, "filename": "covid19-supplier-recovery-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4a42627ba1869d8d00a679144bf05d30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5919, "upload_time": "2020-04-04T18:08:41", "upload_time_iso_8601": "2020-04-04T18:08:41.423167Z", "url": "https://files.pythonhosted.org/packages/da/a7/5ab2d1ce3e9361595902c08eb40a8ec6c5be2f50f1b1d09182f5f8584c0b/covid19-supplier-recovery-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2394e4b74b7080e5e5a6129fb35fa8a6", "sha256": "288a95ff9f3bad01725c73e8fffa9092d1d4b81d42b7c874f9777e57485ede43"}, "downloads": -1, "filename": "covid19-supplier-recovery-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2394e4b74b7080e5e5a6129fb35fa8a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6039, "upload_time": "2020-04-06T13:39:27", "upload_time_iso_8601": "2020-04-06T13:39:27.384396Z", "url": "https://files.pythonhosted.org/packages/57/e5/c03f22ed17cca1398605f37d78b349c863ceb619abdd33b0665e0e254794/covid19-supplier-recovery-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "71f1dc5887ca214a64cfe3fe0e6608a8", "sha256": "0f158cad3cf1a13b3c75dbea29f3706884141ac38d9d84010341ca6bcc96e437"}, "downloads": -1, "filename": "covid19-supplier-recovery-0.0.3.tar.gz", "has_sig": false, "md5_digest": "71f1dc5887ca214a64cfe3fe0e6608a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6109, "upload_time": "2020-04-10T06:58:32", "upload_time_iso_8601": "2020-04-10T06:58:32.090427Z", "url": "https://files.pythonhosted.org/packages/26/10/00f7dfbb35d7edc645e6c55ae79d4b1fbe2022c727363d06fff26dd31bd0/covid19-supplier-recovery-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "71f1dc5887ca214a64cfe3fe0e6608a8", "sha256": "0f158cad3cf1a13b3c75dbea29f3706884141ac38d9d84010341ca6bcc96e437"}, "downloads": -1, "filename": "covid19-supplier-recovery-0.0.3.tar.gz", "has_sig": false, "md5_digest": "71f1dc5887ca214a64cfe3fe0e6608a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6109, "upload_time": "2020-04-10T06:58:32", "upload_time_iso_8601": "2020-04-10T06:58:32.090427Z", "url": "https://files.pythonhosted.org/packages/26/10/00f7dfbb35d7edc645e6c55ae79d4b1fbe2022c727363d06fff26dd31bd0/covid19-supplier-recovery-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:45 2020"}