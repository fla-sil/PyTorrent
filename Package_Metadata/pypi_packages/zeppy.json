{"info": {"author": "Santosh Philip", "author_email": "Santosh@example.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "=====\nzeppy\n=====\n\n\n.. image:: https://img.shields.io/pypi/v/zeppy.svg\n        :target: https://pypi.python.org/pypi/zeppy\n\n.. image:: https://img.shields.io/travis/santoshphilip/zeppy.svg\n        :target: https://travis-ci.com/santoshphilip/zeppy\n\n.. image:: https://readthedocs.org/projects/zeppy/badge/?version=latest\n        :target: https://zeppy.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n\n\n\ndistributed processing for eppyy\n\n\n* Free software: Mozilla Public License 2.0 (MPL-2.0)\n* Documentation: https://zeppy.readthedocs.io.\n\n\nVision\n------\n\nTo run eppy on multiple nodes in parallel and collect the results.\n\nSo what is a node and why would you want to do this ?\n\nA node can be any or all of the following:\n\n- a process (such E+ running on a single core on a multi-core computer)\n    - so we can do multi-processing and run it on many cores on a single computer\n- a computer\n    - so we can run it on multiple computers that are on the same network\n- a group of group of computer in a local network \n    - So we can run multiple groups of machines that may be at different locations on different local networks\n    - This can also be computers at different cloud locations\n    - a single computer in the local network may act as an access node \n\nFeatures\n--------\n\nDo the distributed processing with a single function call and get all the results back. \n\nSample code ::\n\n    import zeppy\n\n    result = zeppy.zmq_parallelpipe(runfunction, \n                                    args_list, \n                                    nworkers=None)\n\n    # runfunction is a function you will write, \n        # that may run idf.run(), \n        # gather the total energy use and retrn it\n    # args_list = {args: [idf1, idf2, idf3, ...]}\n        # list of files to run\n    # if nworkers=None: \n        # it will start up as many nodes as there are items in args_list\n        # if you don't have enough nodes avaliable, you can set nworkers=n.\n        # it will start up n nodes and queue up the runs evenly on the nodes\n\n\nFor example the above code can do the following:\n\n- ``runfunction`` will run the *idf* file, and return the *total energy usage*\n- ``result`` will be a list *total energy usage* in the same order as the items in  ``args_list``\n- see the comments in the code for greater clarity\n\nWhy is the function called ``zmq_parallelpipe`` ?\n\n- This package uses `ZeroMQ Library <https://zeromq.org>`_\n- **Parallel Pipeline** is a fundamental pattern in it\n\nThis is the first pass at the API. It doesn't work yet - Ha!. But there is hope :-)\n\n\n\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n=======\nHistory\n=======\n\n0.1.0 (2020-04-19)\n------------------\n\n* First release on PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/santoshphilip/zeppy", "keywords": "zeppy", "license": "", "maintainer": "", "maintainer_email": "", "name": "zeppy", "package_url": "https://pypi.org/project/zeppy/", "platform": "", "project_url": "https://pypi.org/project/zeppy/", "project_urls": {"Homepage": "https://github.com/santoshphilip/zeppy"}, "release_url": "https://pypi.org/project/zeppy/0.1.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "distributed processing for eppyy", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"zeppy\">\n<h2>zeppy</h2>\n<a href=\"https://pypi.python.org/pypi/zeppy\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/zeppy.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe0ebf1a229ab29c98a141d4b3ccc1673cecaf8e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7a657070792e737667\"></a>\n<a href=\"https://travis-ci.com/santoshphilip/zeppy\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/santoshphilip/zeppy.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/096991c6714b687c6d34eab070bd20a29ff15799/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f73616e746f73687068696c69702f7a657070792e737667\"></a>\n<a href=\"https://zeppy.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91fbe92f9e76df07435c408afe96401e60703fa0/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7a657070792f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p>distributed processing for eppyy</p>\n<ul>\n<li>Free software: Mozilla Public License 2.0 (MPL-2.0)</li>\n<li>Documentation: <a href=\"https://zeppy.readthedocs.io\" rel=\"nofollow\">https://zeppy.readthedocs.io</a>.</li>\n</ul>\n<div id=\"vision\">\n<h3>Vision</h3>\n<p>To run eppy on multiple nodes in parallel and collect the results.</p>\n<p>So what is a node and why would you want to do this ?</p>\n<p>A node can be any or all of the following:</p>\n<ul>\n<li><dl>\n<dt>a process (such E+ running on a single core on a multi-core computer)</dt>\n<dd><ul>\n<li>so we can do multi-processing and run it on many cores on a single computer</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>a computer</dt>\n<dd><ul>\n<li>so we can run it on multiple computers that are on the same network</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>a group of group of computer in a local network</dt>\n<dd><ul>\n<li>So we can run multiple groups of machines that may be at different locations on different local networks</li>\n<li>This can also be computers at different cloud locations</li>\n<li>a single computer in the local network may act as an access node</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<p>Do the distributed processing with a single function call and get all the results back.</p>\n<p>Sample code</p>\n<pre>import zeppy\n\nresult = zeppy.zmq_parallelpipe(runfunction,\n                                args_list,\n                                nworkers=None)\n\n# runfunction is a function you will write,\n    # that may run idf.run(),\n    # gather the total energy use and retrn it\n# args_list = {args: [idf1, idf2, idf3, ...]}\n    # list of files to run\n# if nworkers=None:\n    # it will start up as many nodes as there are items in args_list\n    # if you don't have enough nodes avaliable, you can set nworkers=n.\n    # it will start up n nodes and queue up the runs evenly on the nodes\n</pre>\n<p>For example the above code can do the following:</p>\n<ul>\n<li><tt>runfunction</tt> will run the <em>idf</em> file, and return the <em>total energy usage</em></li>\n<li><tt>result</tt> will be a list <em>total energy usage</em> in the same order as the items in  <tt>args_list</tt></li>\n<li>see the comments in the code for greater clarity</li>\n</ul>\n<p>Why is the function called <tt>zmq_parallelpipe</tt> ?</p>\n<ul>\n<li>This package uses <a href=\"https://zeromq.org\" rel=\"nofollow\">ZeroMQ Library</a></li>\n<li><strong>Parallel Pipeline</strong> is a fundamental pattern in it</li>\n</ul>\n<p>This is the first pass at the API. It doesn\u2019t work yet - Ha!. But there is hope :-)</p>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2020-04-19)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7072146, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "306f320f52ab290378c7b9ab63833e59", "sha256": "541420b0388f03ac805009cc6534536af70b401d8966b02ad53a3fce3edae527"}, "downloads": -1, "filename": "zeppy-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "306f320f52ab290378c7b9ab63833e59", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 10856, "upload_time": "2020-04-21T22:53:06", "upload_time_iso_8601": "2020-04-21T22:53:06.406889Z", "url": "https://files.pythonhosted.org/packages/00/03/7f73f29575069df40f1c0882b2105d6be3e889ea0684247fb80f0490850c/zeppy-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02335de8997004a448f9c654e46335b7", "sha256": "52303d72b18cf1a69975ff2fd8c2c3e8819287910824d1ba874349e1ec7b7643"}, "downloads": -1, "filename": "zeppy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "02335de8997004a448f9c654e46335b7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18012, "upload_time": "2020-04-21T22:53:09", "upload_time_iso_8601": "2020-04-21T22:53:09.146047Z", "url": "https://files.pythonhosted.org/packages/c0/09/06033b06290dc78a097daf6e05073081676919e3ba3fc939a5dace3e4ae1/zeppy-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "306f320f52ab290378c7b9ab63833e59", "sha256": "541420b0388f03ac805009cc6534536af70b401d8966b02ad53a3fce3edae527"}, "downloads": -1, "filename": "zeppy-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "306f320f52ab290378c7b9ab63833e59", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 10856, "upload_time": "2020-04-21T22:53:06", "upload_time_iso_8601": "2020-04-21T22:53:06.406889Z", "url": "https://files.pythonhosted.org/packages/00/03/7f73f29575069df40f1c0882b2105d6be3e889ea0684247fb80f0490850c/zeppy-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02335de8997004a448f9c654e46335b7", "sha256": "52303d72b18cf1a69975ff2fd8c2c3e8819287910824d1ba874349e1ec7b7643"}, "downloads": -1, "filename": "zeppy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "02335de8997004a448f9c654e46335b7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18012, "upload_time": "2020-04-21T22:53:09", "upload_time_iso_8601": "2020-04-21T22:53:09.146047Z", "url": "https://files.pythonhosted.org/packages/c0/09/06033b06290dc78a097daf6e05073081676919e3ba3fc939a5dace3e4ae1/zeppy-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:52 2020"}