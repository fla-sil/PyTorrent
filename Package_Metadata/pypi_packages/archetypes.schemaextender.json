{"info": {"author": "Florian Schulze", "author_email": "plone-developers@lists.sourceforge.net", "bugtrack_url": null, "classifiers": ["Development Status :: 6 - Mature", "Framework :: Plone", "Framework :: Plone :: 5.2", "Framework :: Plone :: Core", "Framework :: Zope2", "Framework :: Zope :: 4", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python", "Programming Language :: Python :: 2.7"], "description": "Introduction\n============\n\nThis package allows you to modify an Archetypes schema, using simple\nadapters. This can be used to add new fields, reorder fields and fieldsets\nor make other changes.\n\nThe most common use of schema extension is to allow add-on products to\nenhance standard Plone content types, for example by adding an option\nthat can be set to toggle special behaviour.\n\nschemaextender hooks into the Archetypes framework by registering\nan ISchema adapter for BaseContent and BaseFolder, making it responsible\nfor providing the schema for all types derived from those classes. This\nincludes all standard Plone content types. Since only one ISchema adapter\ncan be active schemaextender provides its own mechanism to modify schemas\nusing named adapters. Named adapters are allowing to register more than one\nschemaextender per adapted interface.\n\nThere are three types of adapters available:\n\n* ISchemaExtender: using this adapter you can add new fields to a schema.\n\n* IOrderableSchemaExtender: this adapters makes it possible to both add\n  new fields and reorder fields. This is more costly than just adding new\n  fields.\n\n* IBrowserLayerAwareExtender: this adapters are making use of\n  plone.browserlayer, so that the extender is only available if a layer is\n  registered.\n\n* ISchemaModifier: this is a low-level hook that allows direct manipulation\n  of the schema. This can be very dangerous and should never be used if one\n  does not know exactly what she/he is doing!\n\n\nThe adapter types are documented in the ''interfaces.py'' file in\narchetypes.schemaextender.\n\n\nSimple example\n==============\n\nAs an example we will add a simple boolean field to the standard\nPlone document type. First we need to create a field class::\n\n     from Products.Archetypes.public import BooleanField\n     from archetypes.schemaextender.field import ExtensionField\n\n     class MyBooleanField(ExtensionField, BooleanField):\n         \"\"\"A trivial field.\"\"\"\n\nschemaextender can not use the standard Archetypes fields directly\nsince those rely on the class generation logic generating accessors\nand mutator methods. By using the ExtensionField mix-in class we can\nstill use them. Make sure the ExtensionField mix-in comes first, so it\nproperly overwrites the standard methods.\n\nNext we have to create an adapter that will add this field::\n\n    from zope.component import adapts\n    from zope.interface import implements\n    from archetypes.schemaextender.interfaces import ISchemaExtender\n    from Products.Archetypes.public import BooleanWidget\n    from Products.ATContentTypes.interfaces import IATDocument\n\n    class PageExtender(object):\n        adapts(IATDocument)\n        implements(ISchemaExtender)\n\n\n        fields = [\n            MyBooleanField(\"super_power\",\n            widget = BooleanWidget(\n                label=\"This page has super powers\")),\n                ]\n\n        def __init__(self, context):\n            self.context = context\n\n        def getFields(self):\n            return self.fields\n\nTry to store the fields on the class, that way they aren't created each\ntime the getFields method gets called. Generally you should make sure\ngetFields does as few things as possible, because it's called very often.\n\nThe final step is registering this adapter with the Zope component\narchitecture. Since we already declared the interface we provide and\nwhich type of object we adapt this can be done very quickly in\nconfigure.zcml (assuming you put the code above in a file extender.py)::\n\n    <configure xmlns=\"http://namespaces.zope.org/zope\"\n               xmlns:five=\"http://namespaces.zope.org/five\">\n\n        <include package=\"archetypes.schemaextender\" />\n        <adapter factory=\".extender.PageExtender\" />\n    </configure>\n\nCustom fields\n=============\n\nIf you want you can make more complicated field types as well. The only\nrequirement is that you need to have ExtensionField as the first parent\nclass for your field type. As an example here is a field that toggles a\nmarker interface on an object::\n\n    from zope.interface import Interface\n    from zope.interface import alsoProvides\n    from zope.interface import noLongerProvides\n    from Products.Archetypes.public import BooleanField\n    from archetypes.schemaextender.field import ExtensionField\n\n    def addMarkerInterface(obj, *ifaces):\n        for iface in ifaces:\n            if not iface.providedBy(obj):\n                alsoProvides(obj, iface)\n\n\n    def removeMarkerInterface(obj, *ifaces):\n        for iface in ifaces:\n            if iface.providedBy(obj):\n                noLongerProvides(obj, iface)\n\n\n    class ISuperPower(Interface):\n        \"\"\"Marker interface for classes that can do amazing things.\"\"\"\n\n\n    class InterfaceMarkerField(ExtensionField, BooleanField):\n        def get(self, instance, **kwargs):\n            return ISuperPower.providedBy(instance)\n\n        def getRaw(self, instance, **kwargs):\n            return ISuperPower.providedBy(instance)\n\n        def set(self, instance, value, **kwargs):\n            if value:\n                addMarkerInterface(instance, ISuperPower)\n            else:\n                removeMarkerInterface(instance, ISuperPower)\n\nLayer-aware example\n===================\n\nBy using ``archetypes.schemaextender.IBrowserLayerAwareExtender`` the\nextender is only applied if a specific browser layer is installed on the site.\n\n.. note ::\n\n        You should always use IBrowserLayerAwareExtender on configurations\n        where there can be multiple Plone sites on a single Zope application server.\n        Otherwise extenders are applied on every site, unconditionally.\n\nBelow is an example of ``extender.py`` which adds new field on *Dates* edit tab::\n\n        \"\"\"\n\n            Retrofit re-review dates to Archetypes schema.\n\n        \"\"\"\n\n        __docformat__ = \"epytext\"\n\n        from zope.component import adapts\n        from zope.interface import implements\n\n        from Products.Archetypes.public import BooleanWidget\n        from Products.ATContentTypes.interfaces import IATDocument\n        from Products.Archetypes import public as atapi\n        from Products.Archetypes.interfaces import IBaseContent\n\n        from archetypes.schemaextender.field import ExtensionField\n        from archetypes.schemaextender.interfaces import (\n          ISchemaExtender, IOrderableSchemaExtender, IBrowserLayerAwareExtender)\n\n        # Your add-on browserlayer\n        from your.package.interfaces import IAddOnInstalled\n\n        class ExtensionDateField(ExtensionField, atapi.DateTimeField):\n            \"\"\" Retrofitted date field \"\"\"\n\n\n        class RevisitExtender(object):\n            \"\"\" Include revisit date on all objects.\n\n            An example extended which will create a new field on Dates\n            tab between effective date and expiration date.\n            \"\"\"\n\n            # This extender will apply to all Archetypes based content\n            adapts(IBaseContent)\n\n            # We use both orderable and browser layer aware sensitive properties\n            implements(IOrderableSchemaExtender, IBrowserLayerAwareExtender)\n\n            # Don't do schema extending unless our add-on product is installed on Plone site\n            layer = IAddOnInstalled\n\n            fields = [\n                ExtensionDateField(\"revisitDate\",\n                    schemata=\"dates\",\n                    widget = atapi.CalendarWidget(\n                        label=\"Review Date\",\n                        description=(u\"When this date is reached, the content \"\n                                     u\"will be visible in the review task list\"),\n                        show_hm=False,\n                    ),\n                )\n            ]\n\n            def __init__(self, context):\n                self.context = context\n\n            def getOrder(self, schematas):\n                \"\"\" Manipulate the order in which fields appear.\n\n                @param schematas: Dictonary of schemata name -> field lists\n\n                @return: Dictionary of reordered field lists per schemata.\n                \"\"\"\n                schematas[\"dates\"] = ['effectiveDate', 'revisitDate', 'expirationDate',\n                                      'creation_date', 'modification_date']\n\n                return schematas\n\n            def getFields(self):\n                \"\"\"\n                @return: List of new fields we contribute to content.\n                \"\"\"\n                return self.fields\n\nNote: since the above example has two interfaces in its ``implements``\nline, you will get an error when your Zope instance starts up::\n\n        TypeError: Missing 'provides' attribute\n\nThis means we need to be more explicit in our zcml configuration and\nspecify which of the two interfaces is provided by our adapter::\n\n        <adapter factory=\".extender.RevisitExtender\"\n            provides=\"archetypes.schemaextender.interfaces.ISchemaExtender\" />\n\nChangelog\n=========\n\n.. You should *NOT* be adding new change log entries to this file.\n   You should create a file in the news directory instead.\n   For helpful instructions, please see:\n   https://github.com/plone/plone.releaser/blob/master/ADD-A-NEWS-ITEM.rst\n\n.. towncrier release notes start\n\n3.0.1 (2020-03-21)\n------------------\n\nBug fixes:\n\n\n- Minor packaging updates. [various] (#1)\n\n\n3.0.0 (2018-10-31)\n------------------\n\nBreaking changes:\n\n- Switch to new TestCase using AT after PloneTestcase is now DX.\n  No functionality was changed, but this needs Plone 5.2, so we call it a breaking change.\n  [pbauer]\n\n\n2.1.8 (2018-01-30)\n------------------\n\nBug fixes:\n\n- Add Python 2 / 3 compatibility.  [maurits]\n\n\n2.1.7 (2017-03-09)\n------------------\n\nBug fixes:\n\n- Update docs about ``Products.ATContentTypes.interfaces`` import location.\n  [thet]\n\n- Fix imports from Globals that was removed in Zope4\n  [pbauer]\n\n2.1.6 (2016-08-11)\n------------------\n\nFixes:\n\n- Use zope.interface decorator.\n  [gforcada]\n\n\n2.1.5 (2015-03-11)\n------------------\n\n- Ported tests to plone.app.testing\n\n\n2.1.4 (2014-09-08)\n------------------\n\n- archetypes.schemaextender assumes presence of getRaw method which\n  ComputedField does not provide\n  https://dev.plone.org/ticket/11315\n  [anthonygerrard]\n\n2.1.3 (2014-02-26)\n------------------\n\n- Fix tests [kiorky]\n\n2.1.2 (2013-01-13)\n------------------\n\n- PEP8 changes, documentation updates.\n  [maurits]\n\n2.1.1 - 2011-07-04\n------------------\n\n* Acquire request object via local site hook if object is not\n  acquisition-wrapped (in ``cachingInstanceSchemaFactory``). This\n  fixes caching issues with objects rendered using DTML. Note that\n  this is likely a bug in the ``DocumentTemplate`` code. Ideally, the\n  issue should be resolved there.\n  [malthe]\n\n2.1 - 2011-01-03\n----------------\n\n* Use plone.uuid to look up content UUIDs.\n  [toutpt, davisagli]\n\n* Added example of how to use ordered extenders and browser layer aware\n  extenders.\n  [miohtama]\n\n2.0.3 - 2010-07-07\n------------------\n\n* Added back the ``caching.zcml`` file, but have it load ``configure.zcml``.\n  This makes it easier to write Plone 3 / 4 compatible code.\n  [hannosch]\n\n* Factored out the condition to disable the cache during tests into a module\n  global variable called ``CACHE_ENABLED``.\n  [hannosch]\n\n2.0.2 - 2010-06-13\n------------------\n\n* Changed the schema cache again, to use the id() only as a fallback when there\n  is not yet an UID assigned. The id() is unstable with Acquisition wrappers\n  and ZODB level ghosting of objects. We provide an explicit API for disabling\n  the cache instead.\n  [hannosch]\n\n* Avoid deprecation warnings under Zope 2.13.\n  [hannosch]\n\n* Change the schema cache key to avoid an issue during content migration when\n  there might be two objects that have the same UID but different schemata.\n  Now concatenating the Python id() with the UID (id() alone isn't good enough,\n  as two objects with non-overlapping lifetimes may have the same id() value).\n  Fixes http://dev.plone.org/plone/ticket/10637.\n  [davisagli]\n\n2.0.1 - 2010-05-23\n------------------\n\n* Disable the schema cache during test runs.\n  [hannosch]\n\n2.0 - 2010-05-23\n----------------\n\n* Removed the ``caching.zcml`` and enabled caching by default. You can use\n  a different caching implementation by using an ``overrides.zcml`` file.\n  [hannosch]\n\n* Added ``z3c.autoinclude`` entry point to mark this as a Plone plugin.\n  [hannosch]\n\n1.6 - 2010-03-22\n----------------\n\n* Fix index accessor to support setting custom accessor methods.\n  [witsch]\n\n1.5 - 2009-11-18\n----------------\n\n* Fixed test failure in usage.txt.\n  [hannosch]\n\n* Standardized package metadata layout.\n  [hannosch]\n\n1.4 - 2009-11-05\n----------------\n\n* Fix schema copying to also include properties and layers.\n  [maerteijn]\n\n1.3 - 2009-10-20\n----------------\n\n* Refactored the TranslatableExtensionField getMutator to directly reuse the\n  generatedMutatorWrapper from LinguaPlone itself. This avoids duplicating the\n  logic and lets schemaextender fields use the special reference field\n  handling introduced in LinguaPlone. This change introduces a version\n  requirement for LinguaPlone of at least 3.0b6.\n  [hannosch]\n\n1.2 - 2009-10-10\n----------------\n\n* Add `ISchema` adapter using simple caching on the request in order to\n  avoid redundant calculation of the (extended) schema.  The adapter is\n  not enabled by default and can be activated by loading `caching.zcml`.\n  [witsch]\n\n* Avoid using the overridden `+` operator when copying the original schema\n  as this will needlessly validate all fields again.\n  [witsch]\n\n* Added missing changelog entry.\n  [hannosch, woutervh]\n\n1.1 - 2009-06-03\n----------------\n\n* Added support for LinguaPlone language independent fields, by seamlessly\n  using a new TranslatableExtensionField when LP is installed.\n  [hannosch]\n\n* Added a proper interface to the IExtensionField.\n  [hannosch]\n\n* Adjusted tests for Plone 3.3.\n  [hannosch]\n\n* Minor adjustment in documentation: a) don't adapt the class in the example,\n  b) explain why named adapters are used.\n  [jensens]\n\n* Schema modifiers now also browserlayer-aware.\n  [jessesnyder]\n\n1.0 - 2008-07-17\n----------------\n\n* No changes since 1.0rc1.\n\n1.0rc1 - 2008-04-07\n-------------------\n\n* Added optional plone.browserlayer support. Extenders implementing\n  IBrowserLayerAwareExtender need to have a layer attribute. Those extenders\n  are taken into account only if the specified layer is active.\n  [jensens]\n\n1.0b1 - 2007-12-07\n------------------\n\n* Schema modifiers implementing ISchemaModifier are now responsible for\n  copying fields they modify. See README and the doc strings.\n  [fschulze]\n\n* Added a simple benchmark and made some optimizations by avoiding a lot\n  of field copying.\n  [fschulze, wiggy]\n\n* Use a marker interface instead of overrides.zcml - this means you don't\n  need to muck with overrides in dependent products.\n  [optilude]\n\n* Added code to allow addition of new schemata. We need an ordered\n  dictionary to not bork the order of the schemata.\n  [jensens]\n\n* Add a small benchmark utility.\n  [wichert]\n\n* Replace the high-level test with unit-tests and extend the test coverage.\n  [wichert]\n\n* Rewrite the README to be more human readable.\n  [wichert]\n\n\n1.0a1 - 2007-10-15\n------------------\n\n* First public release.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.org/project/archetypes.schemaextender", "keywords": "Archetypes Schema extend", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "archetypes.schemaextender", "package_url": "https://pypi.org/project/archetypes.schemaextender/", "platform": "", "project_url": "https://pypi.org/project/archetypes.schemaextender/", "project_urls": {"Homepage": "https://pypi.org/project/archetypes.schemaextender"}, "release_url": "https://pypi.org/project/archetypes.schemaextender/3.0.1/", "requires_dist": ["setuptools", "six", "plone.uuid"], "requires_python": "", "summary": "Dynamically extend Archetypes schemas with named adapters.", "version": "3.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This package allows you to modify an Archetypes schema, using simple\nadapters. This can be used to add new fields, reorder fields and fieldsets\nor make other changes.</p>\n<p>The most common use of schema extension is to allow add-on products to\nenhance standard Plone content types, for example by adding an option\nthat can be set to toggle special behaviour.</p>\n<p>schemaextender hooks into the Archetypes framework by registering\nan ISchema adapter for BaseContent and BaseFolder, making it responsible\nfor providing the schema for all types derived from those classes. This\nincludes all standard Plone content types. Since only one ISchema adapter\ncan be active schemaextender provides its own mechanism to modify schemas\nusing named adapters. Named adapters are allowing to register more than one\nschemaextender per adapted interface.</p>\n<p>There are three types of adapters available:</p>\n<ul>\n<li>ISchemaExtender: using this adapter you can add new fields to a schema.</li>\n<li>IOrderableSchemaExtender: this adapters makes it possible to both add\nnew fields and reorder fields. This is more costly than just adding new\nfields.</li>\n<li>IBrowserLayerAwareExtender: this adapters are making use of\nplone.browserlayer, so that the extender is only available if a layer is\nregistered.</li>\n<li>ISchemaModifier: this is a low-level hook that allows direct manipulation\nof the schema. This can be very dangerous and should never be used if one\ndoes not know exactly what she/he is doing!</li>\n</ul>\n<p>The adapter types are documented in the \u2018\u2019interfaces.py\u2019\u2019 file in\narchetypes.schemaextender.</p>\n</div>\n<div id=\"simple-example\">\n<h2>Simple example</h2>\n<p>As an example we will add a simple boolean field to the standard\nPlone document type. First we need to create a field class:</p>\n<pre>from Products.Archetypes.public import BooleanField\nfrom archetypes.schemaextender.field import ExtensionField\n\nclass MyBooleanField(ExtensionField, BooleanField):\n    \"\"\"A trivial field.\"\"\"\n</pre>\n<p>schemaextender can not use the standard Archetypes fields directly\nsince those rely on the class generation logic generating accessors\nand mutator methods. By using the ExtensionField mix-in class we can\nstill use them. Make sure the ExtensionField mix-in comes first, so it\nproperly overwrites the standard methods.</p>\n<p>Next we have to create an adapter that will add this field:</p>\n<pre>from zope.component import adapts\nfrom zope.interface import implements\nfrom archetypes.schemaextender.interfaces import ISchemaExtender\nfrom Products.Archetypes.public import BooleanWidget\nfrom Products.ATContentTypes.interfaces import IATDocument\n\nclass PageExtender(object):\n    adapts(IATDocument)\n    implements(ISchemaExtender)\n\n\n    fields = [\n        MyBooleanField(\"super_power\",\n        widget = BooleanWidget(\n            label=\"This page has super powers\")),\n            ]\n\n    def __init__(self, context):\n        self.context = context\n\n    def getFields(self):\n        return self.fields\n</pre>\n<p>Try to store the fields on the class, that way they aren\u2019t created each\ntime the getFields method gets called. Generally you should make sure\ngetFields does as few things as possible, because it\u2019s called very often.</p>\n<p>The final step is registering this adapter with the Zope component\narchitecture. Since we already declared the interface we provide and\nwhich type of object we adapt this can be done very quickly in\nconfigure.zcml (assuming you put the code above in a file extender.py):</p>\n<pre>&lt;configure xmlns=\"http://namespaces.zope.org/zope\"\n           xmlns:five=\"http://namespaces.zope.org/five\"&gt;\n\n    &lt;include package=\"archetypes.schemaextender\" /&gt;\n    &lt;adapter factory=\".extender.PageExtender\" /&gt;\n&lt;/configure&gt;\n</pre>\n</div>\n<div id=\"custom-fields\">\n<h2>Custom fields</h2>\n<p>If you want you can make more complicated field types as well. The only\nrequirement is that you need to have ExtensionField as the first parent\nclass for your field type. As an example here is a field that toggles a\nmarker interface on an object:</p>\n<pre>from zope.interface import Interface\nfrom zope.interface import alsoProvides\nfrom zope.interface import noLongerProvides\nfrom Products.Archetypes.public import BooleanField\nfrom archetypes.schemaextender.field import ExtensionField\n\ndef addMarkerInterface(obj, *ifaces):\n    for iface in ifaces:\n        if not iface.providedBy(obj):\n            alsoProvides(obj, iface)\n\n\ndef removeMarkerInterface(obj, *ifaces):\n    for iface in ifaces:\n        if iface.providedBy(obj):\n            noLongerProvides(obj, iface)\n\n\nclass ISuperPower(Interface):\n    \"\"\"Marker interface for classes that can do amazing things.\"\"\"\n\n\nclass InterfaceMarkerField(ExtensionField, BooleanField):\n    def get(self, instance, **kwargs):\n        return ISuperPower.providedBy(instance)\n\n    def getRaw(self, instance, **kwargs):\n        return ISuperPower.providedBy(instance)\n\n    def set(self, instance, value, **kwargs):\n        if value:\n            addMarkerInterface(instance, ISuperPower)\n        else:\n            removeMarkerInterface(instance, ISuperPower)\n</pre>\n</div>\n<div id=\"layer-aware-example\">\n<h2>Layer-aware example</h2>\n<p>By using <tt>archetypes.schemaextender.IBrowserLayerAwareExtender</tt> the\nextender is only applied if a specific browser layer is installed on the site.</p>\n<div>\n<p>Note</p>\n<p>You should always use IBrowserLayerAwareExtender on configurations\nwhere there can be multiple Plone sites on a single Zope application server.\nOtherwise extenders are applied on every site, unconditionally.</p>\n</div>\n<p>Below is an example of <tt>extender.py</tt> which adds new field on <em>Dates</em> edit tab:</p>\n<pre>\"\"\"\n\n    Retrofit re-review dates to Archetypes schema.\n\n\"\"\"\n\n__docformat__ = \"epytext\"\n\nfrom zope.component import adapts\nfrom zope.interface import implements\n\nfrom Products.Archetypes.public import BooleanWidget\nfrom Products.ATContentTypes.interfaces import IATDocument\nfrom Products.Archetypes import public as atapi\nfrom Products.Archetypes.interfaces import IBaseContent\n\nfrom archetypes.schemaextender.field import ExtensionField\nfrom archetypes.schemaextender.interfaces import (\n  ISchemaExtender, IOrderableSchemaExtender, IBrowserLayerAwareExtender)\n\n# Your add-on browserlayer\nfrom your.package.interfaces import IAddOnInstalled\n\nclass ExtensionDateField(ExtensionField, atapi.DateTimeField):\n    \"\"\" Retrofitted date field \"\"\"\n\n\nclass RevisitExtender(object):\n    \"\"\" Include revisit date on all objects.\n\n    An example extended which will create a new field on Dates\n    tab between effective date and expiration date.\n    \"\"\"\n\n    # This extender will apply to all Archetypes based content\n    adapts(IBaseContent)\n\n    # We use both orderable and browser layer aware sensitive properties\n    implements(IOrderableSchemaExtender, IBrowserLayerAwareExtender)\n\n    # Don't do schema extending unless our add-on product is installed on Plone site\n    layer = IAddOnInstalled\n\n    fields = [\n        ExtensionDateField(\"revisitDate\",\n            schemata=\"dates\",\n            widget = atapi.CalendarWidget(\n                label=\"Review Date\",\n                description=(u\"When this date is reached, the content \"\n                             u\"will be visible in the review task list\"),\n                show_hm=False,\n            ),\n        )\n    ]\n\n    def __init__(self, context):\n        self.context = context\n\n    def getOrder(self, schematas):\n        \"\"\" Manipulate the order in which fields appear.\n\n        @param schematas: Dictonary of schemata name -&gt; field lists\n\n        @return: Dictionary of reordered field lists per schemata.\n        \"\"\"\n        schematas[\"dates\"] = ['effectiveDate', 'revisitDate', 'expirationDate',\n                              'creation_date', 'modification_date']\n\n        return schematas\n\n    def getFields(self):\n        \"\"\"\n        @return: List of new fields we contribute to content.\n        \"\"\"\n        return self.fields\n</pre>\n<p>Note: since the above example has two interfaces in its <tt>implements</tt>\nline, you will get an error when your Zope instance starts up:</p>\n<pre>TypeError: Missing 'provides' attribute\n</pre>\n<p>This means we need to be more explicit in our zcml configuration and\nspecify which of the two interfaces is provided by our adapter:</p>\n<pre>&lt;adapter factory=\".extender.RevisitExtender\"\n    provides=\"archetypes.schemaextender.interfaces.ISchemaExtender\" /&gt;\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>3.0.1 (2020-03-21)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Minor packaging updates. [various] (#1)</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>3.0.0 (2018-10-31)</h3>\n<p>Breaking changes:</p>\n<ul>\n<li>Switch to new TestCase using AT after PloneTestcase is now DX.\nNo functionality was changed, but this needs Plone 5.2, so we call it a breaking change.\n[pbauer]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>2.1.8 (2018-01-30)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Add Python 2 / 3 compatibility.  [maurits]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>2.1.7 (2017-03-09)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Update docs about <tt>Products.ATContentTypes.interfaces</tt> import location.\n[thet]</li>\n<li>Fix imports from Globals that was removed in Zope4\n[pbauer]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>2.1.6 (2016-08-11)</h3>\n<p>Fixes:</p>\n<ul>\n<li>Use zope.interface decorator.\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>2.1.5 (2015-03-11)</h3>\n<ul>\n<li>Ported tests to plone.app.testing</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>2.1.4 (2014-09-08)</h3>\n<ul>\n<li>archetypes.schemaextender assumes presence of getRaw method which\nComputedField does not provide\n<a href=\"https://dev.plone.org/ticket/11315\" rel=\"nofollow\">https://dev.plone.org/ticket/11315</a>\n[anthonygerrard]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>2.1.3 (2014-02-26)</h3>\n<ul>\n<li>Fix tests [kiorky]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>2.1.2 (2013-01-13)</h3>\n<ul>\n<li>PEP8 changes, documentation updates.\n[maurits]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>2.1.1 - 2011-07-04</h3>\n<ul>\n<li>Acquire request object via local site hook if object is not\nacquisition-wrapped (in <tt>cachingInstanceSchemaFactory</tt>). This\nfixes caching issues with objects rendered using DTML. Note that\nthis is likely a bug in the <tt>DocumentTemplate</tt> code. Ideally, the\nissue should be resolved there.\n[malthe]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>2.1 - 2011-01-03</h3>\n<ul>\n<li>Use plone.uuid to look up content UUIDs.\n[toutpt, davisagli]</li>\n<li>Added example of how to use ordered extenders and browser layer aware\nextenders.\n[miohtama]</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>2.0.3 - 2010-07-07</h3>\n<ul>\n<li>Added back the <tt>caching.zcml</tt> file, but have it load <tt>configure.zcml</tt>.\nThis makes it easier to write Plone 3 / 4 compatible code.\n[hannosch]</li>\n<li>Factored out the condition to disable the cache during tests into a module\nglobal variable called <tt>CACHE_ENABLED</tt>.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>2.0.2 - 2010-06-13</h3>\n<ul>\n<li>Changed the schema cache again, to use the id() only as a fallback when there\nis not yet an UID assigned. The id() is unstable with Acquisition wrappers\nand ZODB level ghosting of objects. We provide an explicit API for disabling\nthe cache instead.\n[hannosch]</li>\n<li>Avoid deprecation warnings under Zope 2.13.\n[hannosch]</li>\n<li>Change the schema cache key to avoid an issue during content migration when\nthere might be two objects that have the same UID but different schemata.\nNow concatenating the Python id() with the UID (id() alone isn\u2019t good enough,\nas two objects with non-overlapping lifetimes may have the same id() value).\nFixes <a href=\"http://dev.plone.org/plone/ticket/10637\" rel=\"nofollow\">http://dev.plone.org/plone/ticket/10637</a>.\n[davisagli]</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>2.0.1 - 2010-05-23</h3>\n<ul>\n<li>Disable the schema cache during test runs.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>2.0 - 2010-05-23</h3>\n<ul>\n<li>Removed the <tt>caching.zcml</tt> and enabled caching by default. You can use\na different caching implementation by using an <tt>overrides.zcml</tt> file.\n[hannosch]</li>\n<li>Added <tt>z3c.autoinclude</tt> entry point to mark this as a Plone plugin.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>1.6 - 2010-03-22</h3>\n<ul>\n<li>Fix index accessor to support setting custom accessor methods.\n[witsch]</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>1.5 - 2009-11-18</h3>\n<ul>\n<li>Fixed test failure in usage.txt.\n[hannosch]</li>\n<li>Standardized package metadata layout.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>1.4 - 2009-11-05</h3>\n<ul>\n<li>Fix schema copying to also include properties and layers.\n[maerteijn]</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>1.3 - 2009-10-20</h3>\n<ul>\n<li>Refactored the TranslatableExtensionField getMutator to directly reuse the\ngeneratedMutatorWrapper from LinguaPlone itself. This avoids duplicating the\nlogic and lets schemaextender fields use the special reference field\nhandling introduced in LinguaPlone. This change introduces a version\nrequirement for LinguaPlone of at least 3.0b6.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>1.2 - 2009-10-10</h3>\n<ul>\n<li>Add <cite>ISchema</cite> adapter using simple caching on the request in order to\navoid redundant calculation of the (extended) schema.  The adapter is\nnot enabled by default and can be activated by loading <cite>caching.zcml</cite>.\n[witsch]</li>\n<li>Avoid using the overridden <cite>+</cite> operator when copying the original schema\nas this will needlessly validate all fields again.\n[witsch]</li>\n<li>Added missing changelog entry.\n[hannosch, woutervh]</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3>1.1 - 2009-06-03</h3>\n<ul>\n<li>Added support for LinguaPlone language independent fields, by seamlessly\nusing a new TranslatableExtensionField when LP is installed.\n[hannosch]</li>\n<li>Added a proper interface to the IExtensionField.\n[hannosch]</li>\n<li>Adjusted tests for Plone 3.3.\n[hannosch]</li>\n<li>Minor adjustment in documentation: a) don\u2019t adapt the class in the example,\nb) explain why named adapters are used.\n[jensens]</li>\n<li>Schema modifiers now also browserlayer-aware.\n[jessesnyder]</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3>1.0 - 2008-07-17</h3>\n<ul>\n<li>No changes since 1.0rc1.</li>\n</ul>\n</div>\n<div id=\"rc1-2008-04-07\">\n<h3>1.0rc1 - 2008-04-07</h3>\n<ul>\n<li>Added optional plone.browserlayer support. Extenders implementing\nIBrowserLayerAwareExtender need to have a layer attribute. Those extenders\nare taken into account only if the specified layer is active.\n[jensens]</li>\n</ul>\n</div>\n<div id=\"b1-2007-12-07\">\n<h3>1.0b1 - 2007-12-07</h3>\n<ul>\n<li>Schema modifiers implementing ISchemaModifier are now responsible for\ncopying fields they modify. See README and the doc strings.\n[fschulze]</li>\n<li>Added a simple benchmark and made some optimizations by avoiding a lot\nof field copying.\n[fschulze, wiggy]</li>\n<li>Use a marker interface instead of overrides.zcml - this means you don\u2019t\nneed to muck with overrides in dependent products.\n[optilude]</li>\n<li>Added code to allow addition of new schemata. We need an ordered\ndictionary to not bork the order of the schemata.\n[jensens]</li>\n<li>Add a small benchmark utility.\n[wichert]</li>\n<li>Replace the high-level test with unit-tests and extend the test coverage.\n[wichert]</li>\n<li>Rewrite the README to be more human readable.\n[wichert]</li>\n</ul>\n</div>\n<div id=\"a1-2007-10-15\">\n<h3>1.0a1 - 2007-10-15</h3>\n<ul>\n<li>First public release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6853471, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "a8915df30933d7e245d82d8da53aed0d", "sha256": "8f95090744b3fc4fe86702d76f86397611651eebffc3979d53c83fb2fff7177a"}, "downloads": -1, "filename": "archetypes.schemaextender-1.0.tar.gz", "has_sig": false, "md5_digest": "a8915df30933d7e245d82d8da53aed0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20889, "upload_time": "2008-07-17T13:02:33", "upload_time_iso_8601": "2008-07-17T13:02:33Z", "url": "https://files.pythonhosted.org/packages/6d/51/aa04e235939215aa1ffadc3d916509d1bdbbc33fc2af6be5c790b678ee51/archetypes.schemaextender-1.0.tar.gz", "yanked": false}], "1.0a1": [{"comment_text": "", "digests": {"md5": "a25d575a7a1a0932e8ab96f9e2f40f04", "sha256": "96c62d19889276a2897e0b753c4bf1d129f9a51f2ac3e7f46dd5fb724df0db14"}, "downloads": -1, "filename": "archetypes.schemaextender-1.0a1-py2.4.egg", "has_sig": false, "md5_digest": "a25d575a7a1a0932e8ab96f9e2f40f04", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 15644, "upload_time": "2007-10-15T11:14:01", "upload_time_iso_8601": "2007-10-15T11:14:01Z", "url": "https://files.pythonhosted.org/packages/3c/3f/c7cc8f906f747a49f440cec5fdca6f46c604f1e7c25758fe6791de6421e5/archetypes.schemaextender-1.0a1-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a2d659ab7465bc3a58b5076a5dec13b", "sha256": "8b7a975e575eef0c8e35b18a20e3390ec8cc3089cef91b0b3b18ff60ebf8a446"}, "downloads": -1, "filename": "archetypes.schemaextender-1.0a1.tar.gz", "has_sig": false, "md5_digest": "4a2d659ab7465bc3a58b5076a5dec13b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12984, "upload_time": "2007-10-15T11:14:01", "upload_time_iso_8601": "2007-10-15T11:14:01Z", "url": "https://files.pythonhosted.org/packages/8f/17/c105c8ccdded724e83dd666a1edf3095b2db5142263a3a288d97385886b0/archetypes.schemaextender-1.0a1.tar.gz", "yanked": false}], "1.0b1": [{"comment_text": "", "digests": {"md5": "ca8d221b34e997e885d40de3470408f2", "sha256": "2424060b29c9920cd4b3bd7b5ec2f203366bd31e22b55288da2c010fb3b14f0c"}, "downloads": -1, "filename": "archetypes.schemaextender-1.0b1.tar.gz", "has_sig": false, "md5_digest": "ca8d221b34e997e885d40de3470408f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16853, "upload_time": "2007-12-07T16:39:39", "upload_time_iso_8601": "2007-12-07T16:39:39Z", "url": "https://files.pythonhosted.org/packages/ee/c4/6208e093dd4c5fe78a1d0e712933592f6ac8597688fbece91ea182a3a5b6/archetypes.schemaextender-1.0b1.tar.gz", "yanked": false}], "1.0rc1": [{"comment_text": "", "digests": {"md5": "4699c23f83d6abe4d4e5d7df9670357d", "sha256": "93bebd612a71428a602dd59f0204508390281cf1707b63395740fecbadc7883c"}, "downloads": -1, "filename": "archetypes.schemaextender-1.0rc1-py2.5.egg", "has_sig": false, "md5_digest": "4699c23f83d6abe4d4e5d7df9670357d", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 30047, "upload_time": "2008-04-07T12:10:27", "upload_time_iso_8601": "2008-04-07T12:10:27Z", "url": "https://files.pythonhosted.org/packages/fa/d9/088f7ecfb05c9f18848d8adf3344a5ae8d9b2242eac1f47b39c2b5130f7f/archetypes.schemaextender-1.0rc1-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf62c5a156a72e739539d5326febbeb1", "sha256": "4cb229cacccdc664688a34dbc70bc7049c8f1494c6e849e07ac81096ce99f7b2"}, "downloads": -1, "filename": "archetypes.schemaextender-1.0rc1.tar.gz", "has_sig": false, "md5_digest": "bf62c5a156a72e739539d5326febbeb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20904, "upload_time": "2008-04-07T12:10:24", "upload_time_iso_8601": "2008-04-07T12:10:24Z", "url": "https://files.pythonhosted.org/packages/22/6e/a224b34428ce8c20ea013e7369e54a7dbdd2d6849b5ab3faef2305e36789/archetypes.schemaextender-1.0rc1.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "c58959b7258e2252019731efd46cdf06", "sha256": "8aa04ea68cc6bd84d4383b2f73ab5c02c6acfd6605604706758f9331610ac19f"}, "downloads": -1, "filename": "archetypes.schemaextender-1.1.zip", "has_sig": true, "md5_digest": "c58959b7258e2252019731efd46cdf06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33174, "upload_time": "2009-06-03T15:07:56", "upload_time_iso_8601": "2009-06-03T15:07:56.438207Z", "url": "https://files.pythonhosted.org/packages/c1/33/73abec82dc1e695ccf6b72c144617bef4b9dd7cc89715fb224d5f5ac6843/archetypes.schemaextender-1.1.zip", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "b543d7fb02e67259943d25661ed1b0fe", "sha256": "5cd0921b1cd640a544a8c24c8dbe227aaa3be90feff38f7d01511ec385f67591"}, "downloads": -1, "filename": "archetypes.schemaextender-1.2.zip", "has_sig": true, "md5_digest": "b543d7fb02e67259943d25661ed1b0fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36150, "upload_time": "2009-10-10T16:58:28", "upload_time_iso_8601": "2009-10-10T16:58:28.826576Z", "url": "https://files.pythonhosted.org/packages/1d/75/2be3405e50001eb30a06e29158943a8518f49fac74e649f19d820ee9600d/archetypes.schemaextender-1.2.zip", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "c75fa9a3c563f6f7f8a78a555dd85344", "sha256": "beeaddcd049020b456783ff0b687c3ae833ae447bbfd16afc972810b5b82ebc1"}, "downloads": -1, "filename": "archetypes.schemaextender-1.3.zip", "has_sig": true, "md5_digest": "c75fa9a3c563f6f7f8a78a555dd85344", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36473, "upload_time": "2009-10-20T15:04:02", "upload_time_iso_8601": "2009-10-20T15:04:02.053302Z", "url": "https://files.pythonhosted.org/packages/3f/86/753af36bf4a0685fef4d664840c1a3446b049a017217c1f5667146abb0a0/archetypes.schemaextender-1.3.zip", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "dc5efb46b3950a99a353c86816d4c5f4", "sha256": "0cffc88b247b9b45bce509cf03dd50db98aec2eceec98a29e156553fd8012b84"}, "downloads": -1, "filename": "archetypes.schemaextender-1.4.zip", "has_sig": true, "md5_digest": "dc5efb46b3950a99a353c86816d4c5f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36662, "upload_time": "2009-11-05T12:33:56", "upload_time_iso_8601": "2009-11-05T12:33:56.053445Z", "url": "https://files.pythonhosted.org/packages/6c/69/649fbe6facdfb1d8bbcbfb0945deb467fb85bf51fcae67c6bb424cfdc42a/archetypes.schemaextender-1.4.zip", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "3661134e7419f8ab5723711953e45bc7", "sha256": "ae4fdbfa5370264e48d4cfc81ac5e7d9332e4b70a67b3261cfd31ab84dc839c8"}, "downloads": -1, "filename": "archetypes.schemaextender-1.5.zip", "has_sig": false, "md5_digest": "3661134e7419f8ab5723711953e45bc7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34780, "upload_time": "2009-11-18T14:36:46", "upload_time_iso_8601": "2009-11-18T14:36:46.169143Z", "url": "https://files.pythonhosted.org/packages/93/12/619eed0d8b0be049194ba9d2d1d81df406c8a5eed56d6dd35b8a70e3966d/archetypes.schemaextender-1.5.zip", "yanked": false}], "1.6": [{"comment_text": "", "digests": {"md5": "6679b05ccdcdb5254a23328b867c18ce", "sha256": "04283faf136b357c4be08be1db539d30746e3263d7f0306945767f7b830ee4a4"}, "downloads": -1, "filename": "archetypes.schemaextender-1.6.zip", "has_sig": true, "md5_digest": "6679b05ccdcdb5254a23328b867c18ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36231, "upload_time": "2010-03-22T15:51:47", "upload_time_iso_8601": "2010-03-22T15:51:47.218200Z", "url": "https://files.pythonhosted.org/packages/0e/3e/3340a5e19bdc09c53d933cb337f603e8393a241ee2f6e51e9a9bcd06fe38/archetypes.schemaextender-1.6.zip", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "5e9ec70171ab7bebc6cef32c50aa6970", "sha256": "ea1afd94b856f28190379590837d1c2f15c25dc7f078fb88009f810741b25d47"}, "downloads": -1, "filename": "archetypes.schemaextender-2.0.zip", "has_sig": false, "md5_digest": "5e9ec70171ab7bebc6cef32c50aa6970", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35323, "upload_time": "2010-05-23T16:49:18", "upload_time_iso_8601": "2010-05-23T16:49:18.535289Z", "url": "https://files.pythonhosted.org/packages/6e/fa/f26d66605e1be8c29be80520c82598356191d154d2762b129305a6427872/archetypes.schemaextender-2.0.zip", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "eb8e9e3136f3394a2e290a4914719c06", "sha256": "3fb3b8a83523952e99b09531838d8cf59d79b63467429a194f01245ca72ec4ac"}, "downloads": -1, "filename": "archetypes.schemaextender-2.0.1.zip", "has_sig": false, "md5_digest": "eb8e9e3136f3394a2e290a4914719c06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35583, "upload_time": "2010-05-23T17:15:45", "upload_time_iso_8601": "2010-05-23T17:15:45.686628Z", "url": "https://files.pythonhosted.org/packages/49/5f/c9a8b7cb914385a1672d26d9bdb7e72154237cf777cb681c4f0149f53e9e/archetypes.schemaextender-2.0.1.zip", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "79d39dd2f90893ca16c18a1d75afcab2", "sha256": "27e04a07a4223b8305f5451e2359513ad9d55d23290b70bb7d07fd5662116e65"}, "downloads": -1, "filename": "archetypes.schemaextender-2.0.2.zip", "has_sig": false, "md5_digest": "79d39dd2f90893ca16c18a1d75afcab2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36842, "upload_time": "2010-06-13T12:12:07", "upload_time_iso_8601": "2010-06-13T12:12:07.114922Z", "url": "https://files.pythonhosted.org/packages/91/4b/ca442adb35f5b107d2df43c752ddc7503d9fe93fccc571a3a76f096329ea/archetypes.schemaextender-2.0.2.zip", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "b4471603c33462d0fd7fff7e51930e67", "sha256": "8f739eb09801fe58ec1a6e8cb7d4f4ef717512fb4258d08ac144c8aa853cc128"}, "downloads": -1, "filename": "archetypes.schemaextender-2.0.3.zip", "has_sig": false, "md5_digest": "b4471603c33462d0fd7fff7e51930e67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37547, "upload_time": "2010-07-07T11:11:15", "upload_time_iso_8601": "2010-07-07T11:11:15.830096Z", "url": "https://files.pythonhosted.org/packages/e2/d7/9cb6a4eebed2eeb3f7499be660f39ee4bb538c0d951f15f635ca49d3a50a/archetypes.schemaextender-2.0.3.zip", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "2c3b027d40eb1ac81718fe56212d4cb3", "sha256": "05d3639dc51a5782d2811ac87ebc9f4fe23d3e0bd2321f2842e77ebe7e0b8b01"}, "downloads": -1, "filename": "archetypes.schemaextender-2.0.4.zip", "has_sig": false, "md5_digest": "2c3b027d40eb1ac81718fe56212d4cb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40886, "upload_time": "2011-07-05T00:29:52", "upload_time_iso_8601": "2011-07-05T00:29:52.899290Z", "url": "https://files.pythonhosted.org/packages/a1/63/ebabdd93c7f37a83d07c6c773733f89446b82a4c17085e0fa2af3d648bcc/archetypes.schemaextender-2.0.4.zip", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "b681acc4e8ca0f60b04e7f509f3c529f", "sha256": "939efce5dd668aaf20f1c744ce866f2cedbcb33b35262ae76475106694fdc12b"}, "downloads": -1, "filename": "archetypes.schemaextender-2.1.zip", "has_sig": false, "md5_digest": "b681acc4e8ca0f60b04e7f509f3c529f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40346, "upload_time": "2011-01-03T20:59:12", "upload_time_iso_8601": "2011-01-03T20:59:12.118091Z", "url": "https://files.pythonhosted.org/packages/a3/a4/a47c88411278d99cef683a6edb780b63e54dcc9e7a1adf5f189966ed50e8/archetypes.schemaextender-2.1.zip", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "3659dd72db341b629308d90f135031df", "sha256": "7ba5cefafbe7e97a9c33172ba16852138d33b05addf6b5f61ddb6b82f2154449"}, "downloads": -1, "filename": "archetypes.schemaextender-2.1.1.zip", "has_sig": false, "md5_digest": "3659dd72db341b629308d90f135031df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41025, "upload_time": "2011-07-05T00:37:06", "upload_time_iso_8601": "2011-07-05T00:37:06.791985Z", "url": "https://files.pythonhosted.org/packages/20/77/17d8559aa6b184ddea7872a58890b7b6e8c1a6daebe4464483c5b64e469a/archetypes.schemaextender-2.1.1.zip", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "865aa5b4b6b26e3bb650d89ddfe77c87", "sha256": "d151e3298c4ec19d9b6c2eb5fff807dd24ff051cc4170d099d41d4b7998c4715"}, "downloads": -1, "filename": "archetypes.schemaextender-2.1.2.zip", "has_sig": false, "md5_digest": "865aa5b4b6b26e3bb650d89ddfe77c87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41833, "upload_time": "2013-01-13T17:40:00", "upload_time_iso_8601": "2013-01-13T17:40:00.794139Z", "url": "https://files.pythonhosted.org/packages/c3/2d/3c3fdbfc5e75e23d55f76451574dc3bb621c60ab9521feaf7656db96b86a/archetypes.schemaextender-2.1.2.zip", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "105f2f8e9c18f34bd09d1a90a10c91d2", "sha256": "8dc8abf8b5d54e198f87f7d71edddd556c9c07be2e20e454bb997dccd68255e8"}, "downloads": -1, "filename": "archetypes.schemaextender-2.1.3.zip", "has_sig": false, "md5_digest": "105f2f8e9c18f34bd09d1a90a10c91d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42188, "upload_time": "2014-02-26T18:16:20", "upload_time_iso_8601": "2014-02-26T18:16:20.788695Z", "url": "https://files.pythonhosted.org/packages/4e/75/c53bae479c9db6dd1ae0540d2fc7c9194a2df5627123cc557b2d13278023/archetypes.schemaextender-2.1.3.zip", "yanked": false}], "2.1.4": [{"comment_text": "", "digests": {"md5": "18ec710a90e10af48d5db86aa02fb0e7", "sha256": "a280f058f801236efdcf56cbf3f615e328cefcb2e8d7d834581151cab4dfa7e5"}, "downloads": -1, "filename": "archetypes.schemaextender-2.1.4.zip", "has_sig": false, "md5_digest": "18ec710a90e10af48d5db86aa02fb0e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42456, "upload_time": "2014-09-08T15:15:34", "upload_time_iso_8601": "2014-09-08T15:15:34.486019Z", "url": "https://files.pythonhosted.org/packages/db/b8/a5dfef927c0162b02d168a4e2e00c079b4b2b5e194750c887b26d8ec7a74/archetypes.schemaextender-2.1.4.zip", "yanked": false}], "2.1.5": [{"comment_text": "", "digests": {"md5": "3276800ab65c09e10b45541b35299419", "sha256": "6e66a5fd74d4e6da444cb2d85daae9b24dd8e532ebf5f84407818ed03c30e17c"}, "downloads": -1, "filename": "archetypes.schemaextender-2.1.5.zip", "has_sig": false, "md5_digest": "3276800ab65c09e10b45541b35299419", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45053, "upload_time": "2015-03-11T12:54:33", "upload_time_iso_8601": "2015-03-11T12:54:33.904816Z", "url": "https://files.pythonhosted.org/packages/89/29/cc561c84473e7d9cc916f8040c1af935196a84318a60d3795767568a1da4/archetypes.schemaextender-2.1.5.zip", "yanked": false}], "2.1.6": [{"comment_text": "", "digests": {"md5": "c6d651d2e44ab6d8b983b965bbd4fb43", "sha256": "a5dc2dcf37f673900631c8cb22e5cfe5506037d99d870394d38561cb0c5e63cd"}, "downloads": -1, "filename": "archetypes.schemaextender-2.1.6.tar.gz", "has_sig": false, "md5_digest": "c6d651d2e44ab6d8b983b965bbd4fb43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27736, "upload_time": "2016-08-11T18:48:37", "upload_time_iso_8601": "2016-08-11T18:48:37.293019Z", "url": "https://files.pythonhosted.org/packages/e8/a8/fc1bba4856e3f3573234da9dc3a620fd14bd70b9f47eb719a603ca9e0799/archetypes.schemaextender-2.1.6.tar.gz", "yanked": false}], "2.1.7": [{"comment_text": "", "digests": {"md5": "4ba80586f8bdf72c07b05c691ff49efb", "sha256": "c19dea782af608719c739e02c76e569417d57f52427d4af678432fa4b59387f0"}, "downloads": -1, "filename": "archetypes.schemaextender-2.1.7.tar.gz", "has_sig": false, "md5_digest": "4ba80586f8bdf72c07b05c691ff49efb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27894, "upload_time": "2017-03-09T21:03:18", "upload_time_iso_8601": "2017-03-09T21:03:18.297893Z", "url": "https://files.pythonhosted.org/packages/78/03/491c926676496d0608aaf4ab1dcb356ca2172e35a4d0b69ecdd450db0590/archetypes.schemaextender-2.1.7.tar.gz", "yanked": false}], "2.1.8": [{"comment_text": "", "digests": {"md5": "56002e9fbe6c259d08a0422318cc63e2", "sha256": "795b951396f32473b0f5d441fdc8ca2d68c64cb2c03ff2091698fe46d9827c17"}, "downloads": -1, "filename": "archetypes.schemaextender-2.1.8-py2-none-any.whl", "has_sig": false, "md5_digest": "56002e9fbe6c259d08a0422318cc63e2", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 29328, "upload_time": "2018-01-30T09:45:26", "upload_time_iso_8601": "2018-01-30T09:45:26.313623Z", "url": "https://files.pythonhosted.org/packages/9b/60/2f12edcb674be48352cef0774a81ba37744c566dfe84d5112a242c09ac20/archetypes.schemaextender-2.1.8-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b05f50af8cf9434b7dfda8548a332853", "sha256": "82e74c72dea15e9af5f13701b2892e8bc09ab7d404917e71cd60dafe7106e484"}, "downloads": -1, "filename": "archetypes.schemaextender-2.1.8.tar.gz", "has_sig": false, "md5_digest": "b05f50af8cf9434b7dfda8548a332853", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28045, "upload_time": "2018-01-30T09:45:28", "upload_time_iso_8601": "2018-01-30T09:45:28.155462Z", "url": "https://files.pythonhosted.org/packages/0a/4c/9a73ccec94ffbd953f7a7903db094282d06680d87c856f423d769f651cca/archetypes.schemaextender-2.1.8.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "17a611e212781b4a82f0181ba2573ece", "sha256": "e1234aa4c18a3136420da0a5d9cf9cd7f276f34be68c2d67f5471f9ac8ac8bd5"}, "downloads": -1, "filename": "archetypes.schemaextender-3.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "17a611e212781b4a82f0181ba2573ece", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 23561, "upload_time": "2018-10-31T11:25:10", "upload_time_iso_8601": "2018-10-31T11:25:10.868374Z", "url": "https://files.pythonhosted.org/packages/0c/75/5b5602737983a1bbdace100c85e0f9f558e7ac8e88840f7b9653d02e4a19/archetypes.schemaextender-3.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "988c2e871205c7f0576a9089bcfa0bb7", "sha256": "785fe88caf012a16e548371cf678c425ee14b57fd7be4ca27457732e7df258a6"}, "downloads": -1, "filename": "archetypes.schemaextender-3.0.0.tar.gz", "has_sig": false, "md5_digest": "988c2e871205c7f0576a9089bcfa0bb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28428, "upload_time": "2018-10-31T11:25:12", "upload_time_iso_8601": "2018-10-31T11:25:12.904151Z", "url": "https://files.pythonhosted.org/packages/3c/c9/992f9932d4f19c72026fbc1d1ae9c1f06af622e62d089753cb69eb772fe1/archetypes.schemaextender-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "75e654d49bf093969469a6b5b6e37c58", "sha256": "7582775f18f1e5772bd8e29411d35f5df15f61d95397e351e74634efcab9a756"}, "downloads": -1, "filename": "archetypes.schemaextender-3.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "75e654d49bf093969469a6b5b6e37c58", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23766, "upload_time": "2020-03-21T00:42:46", "upload_time_iso_8601": "2020-03-21T00:42:46.158748Z", "url": "https://files.pythonhosted.org/packages/8a/19/9def12dbcf29cb5919ec411bc2c3694b8412b4396714dfb1ec4cc3b6b33c/archetypes.schemaextender-3.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3eb713a62bc741a3a6ab6fd1fc25c901", "sha256": "4675fde19c36bd2f9da25977c9e0b0c50eb66fd942c2c6d9169f3a49357977bd"}, "downloads": -1, "filename": "archetypes.schemaextender-3.0.1.tar.gz", "has_sig": false, "md5_digest": "3eb713a62bc741a3a6ab6fd1fc25c901", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28908, "upload_time": "2020-03-21T00:42:47", "upload_time_iso_8601": "2020-03-21T00:42:47.944791Z", "url": "https://files.pythonhosted.org/packages/aa/e4/214aa6c16ff1c51324525bc9ad8db206558e2401f6531835ff5ab5f36e0f/archetypes.schemaextender-3.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "75e654d49bf093969469a6b5b6e37c58", "sha256": "7582775f18f1e5772bd8e29411d35f5df15f61d95397e351e74634efcab9a756"}, "downloads": -1, "filename": "archetypes.schemaextender-3.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "75e654d49bf093969469a6b5b6e37c58", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23766, "upload_time": "2020-03-21T00:42:46", "upload_time_iso_8601": "2020-03-21T00:42:46.158748Z", "url": "https://files.pythonhosted.org/packages/8a/19/9def12dbcf29cb5919ec411bc2c3694b8412b4396714dfb1ec4cc3b6b33c/archetypes.schemaextender-3.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3eb713a62bc741a3a6ab6fd1fc25c901", "sha256": "4675fde19c36bd2f9da25977c9e0b0c50eb66fd942c2c6d9169f3a49357977bd"}, "downloads": -1, "filename": "archetypes.schemaextender-3.0.1.tar.gz", "has_sig": false, "md5_digest": "3eb713a62bc741a3a6ab6fd1fc25c901", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28908, "upload_time": "2020-03-21T00:42:47", "upload_time_iso_8601": "2020-03-21T00:42:47.944791Z", "url": "https://files.pythonhosted.org/packages/aa/e4/214aa6c16ff1c51324525bc9ad8db206558e2401f6531835ff5ab5f36e0f/archetypes.schemaextender-3.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:23 2020"}