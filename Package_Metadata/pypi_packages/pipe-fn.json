{"info": {"author": "thautwarm", "author_email": "twshere@outlook.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython"], "description": "|PyPI version|\n\nInstall\n-------\n\n``pip install pipe-fn``\n\npipe-fn\n=======\n\nFunction transformation purely.\n\n.. code:: python\n\n\n    from pipe_fn import e\n\n\n    # e is the identity mapping\n\n\n    def add(this, other):\n        return this + other\n\n\n    print([1, 2, 3] | e / sum)\n    # sum([1, 2, 3])\n    # => 6\n\n    print([2, 3, -1] | e ** {'key': lambda x: -x} / sorted)  # set kwargs\n    # sorted([2, 3, -1], key=lambda x: -x)\n    # => [3, 2, -1]\n\n    print([[1], [2], [3]] | e / sum * ([],))  # set args\n    # sum([[1], [2], [3]], [])\n    # => [1, 2, 3]\n\n\n    def my_func(self, *args, **kwargs):\n        return self, args, kwargs\n\n\n    print([1, 2, 3]\n          | e\n          ** dict(a=1, b=2, c=3)  # you should set kwargs first because of the high priority of `**` operator.\n\n          * (4, 5, 6)  # it'okay to change the order of setting `args` and setting `function`.\n          / my_func)\n    # => ([1, 2, 3], (4, 5, 6), {'a': 1, 'b': 2, 'c': 3})\n\n\n    print(1 | e / add * (1,))\n    # add(1, 1)\n    # => 2\n\n\n    def double(x):\n        return 2 * x\n\n\n    # and then composition\n    print(1 | (e / add * (2,) + double + double))\n    # double(double(add(1, 2))\n    # => 12 = (1 + 2) * 2 * 2\n\n\n    # set single arg\n    [['a'], ['b']] | e / sum @ [] \\\n                   | e / print\n    # print(sum([['a'], ['b']], []))\n    # => [1, 2]\n\n    def double(x):\n        return 2 * x\n\n\n    [1, 2, 3] | e / std.general.Sum @ double  \\\n              | e / print\n    # print(Sum([1,2,3], double))\n    # => 12\n\n.. |PyPI version| image:: https://img.shields.io/pypi/v/pipe-fn.svg\n   :target: https://pypi.python.org/pypi/pipe-fn\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Xython/pipe-fn", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pipe-fn", "package_url": "https://pypi.org/project/pipe-fn/", "platform": "any", "project_url": "https://pypi.org/project/pipe-fn/", "project_urls": {"Homepage": "https://github.com/Xython/pipe-fn"}, "release_url": "https://pypi.org/project/pipe-fn/0.2.2/", "requires_dist": null, "requires_python": "", "summary": "functional pipeline operation in Python", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/pipe-fn\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4868dd3084a37b7ec67f6c429e5814ed042e2458/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f706970652d666e2e737667\"></a></p>\n<div id=\"install\">\n<h2>Install</h2>\n<p><tt>pip install <span class=\"pre\">pipe-fn</span></tt></p>\n<div id=\"pipe-fn\">\n<h3>pipe-fn</h3>\n<p>Function transformation purely.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pipe_fn</span> <span class=\"kn\">import</span> <span class=\"n\">e</span>\n\n\n<span class=\"c1\"># e is the identity mapping</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">this</span> <span class=\"o\">+</span> <span class=\"n\">other</span>\n\n\n<span class=\"nb\">print</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">e</span> <span class=\"o\">/</span> <span class=\"nb\">sum</span><span class=\"p\">)</span>\n<span class=\"c1\"># sum([1, 2, 3])</span>\n<span class=\"c1\"># =&gt; 6</span>\n\n<span class=\"nb\">print</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">e</span> <span class=\"o\">**</span> <span class=\"p\">{</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"n\">x</span><span class=\"p\">}</span> <span class=\"o\">/</span> <span class=\"nb\">sorted</span><span class=\"p\">)</span>  <span class=\"c1\"># set kwargs</span>\n<span class=\"c1\"># sorted([2, 3, -1], key=lambda x: -x)</span>\n<span class=\"c1\"># =&gt; [3, 2, -1]</span>\n\n<span class=\"nb\">print</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]]</span> <span class=\"o\">|</span> <span class=\"n\">e</span> <span class=\"o\">/</span> <span class=\"nb\">sum</span> <span class=\"o\">*</span> <span class=\"p\">([],))</span>  <span class=\"c1\"># set args</span>\n<span class=\"c1\"># sum([[1], [2], [3]], [])</span>\n<span class=\"c1\"># =&gt; [1, 2, 3]</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">my_func</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span>\n\n\n<span class=\"nb\">print</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n      <span class=\"o\">|</span> <span class=\"n\">e</span>\n      <span class=\"o\">**</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>  <span class=\"c1\"># you should set kwargs first because of the high priority of `**` operator.</span>\n\n      <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span>  <span class=\"c1\"># it'okay to change the order of setting `args` and setting `function`.</span>\n      <span class=\"o\">/</span> <span class=\"n\">my_func</span><span class=\"p\">)</span>\n<span class=\"c1\"># =&gt; ([1, 2, 3], (4, 5, 6), {'a': 1, 'b': 2, 'c': 3})</span>\n\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">|</span> <span class=\"n\">e</span> <span class=\"o\">/</span> <span class=\"n\">add</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,))</span>\n<span class=\"c1\"># add(1, 1)</span>\n<span class=\"c1\"># =&gt; 2</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">double</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">x</span>\n\n\n<span class=\"c1\"># and then composition</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"n\">e</span> <span class=\"o\">/</span> <span class=\"n\">add</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,)</span> <span class=\"o\">+</span> <span class=\"n\">double</span> <span class=\"o\">+</span> <span class=\"n\">double</span><span class=\"p\">))</span>\n<span class=\"c1\"># double(double(add(1, 2))</span>\n<span class=\"c1\"># =&gt; 12 = (1 + 2) * 2 * 2</span>\n\n\n<span class=\"c1\"># set single arg</span>\n<span class=\"p\">[[</span><span class=\"s1\">'a'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'b'</span><span class=\"p\">]]</span> <span class=\"o\">|</span> <span class=\"n\">e</span> <span class=\"o\">/</span> <span class=\"nb\">sum</span> <span class=\"o\">@</span> <span class=\"p\">[]</span> \\\n               <span class=\"o\">|</span> <span class=\"n\">e</span> <span class=\"o\">/</span> <span class=\"nb\">print</span>\n<span class=\"c1\"># print(sum([['a'], ['b']], []))</span>\n<span class=\"c1\"># =&gt; [1, 2]</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">double</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">x</span>\n\n\n<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">e</span> <span class=\"o\">/</span> <span class=\"n\">std</span><span class=\"o\">.</span><span class=\"n\">general</span><span class=\"o\">.</span><span class=\"n\">Sum</span> <span class=\"o\">@</span> <span class=\"n\">double</span>  \\\n          <span class=\"o\">|</span> <span class=\"n\">e</span> <span class=\"o\">/</span> <span class=\"nb\">print</span>\n<span class=\"c1\"># print(Sum([1,2,3], double))</span>\n<span class=\"c1\"># =&gt; 12</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3486620, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8c396d28c73a96a24347032d1f5da3fe", "sha256": "687226cdf9a9629207dd95ebc957341897f07d25d4f6359e060afaae0f57f360"}, "downloads": -1, "filename": "pipe_fn-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8c396d28c73a96a24347032d1f5da3fe", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 4689, "upload_time": "2017-12-31T04:20:47", "upload_time_iso_8601": "2017-12-31T04:20:47.586011Z", "url": "https://files.pythonhosted.org/packages/c8/1d/1a3e65ecd1cb46b80f515d394b59e18753f4c41aacdfd1c75b7e9d4d6b7d/pipe_fn-0.1-py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "0666735822f496c8caedd7cd1c192f8a", "sha256": "83af331d309f1e719d6e93abbebb40eaa08ae786f4c7984b35a315deca594fba"}, "downloads": -1, "filename": "pipe_fn-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0666735822f496c8caedd7cd1c192f8a", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 4911, "upload_time": "2018-01-01T06:01:05", "upload_time_iso_8601": "2018-01-01T06:01:05.799430Z", "url": "https://files.pythonhosted.org/packages/05/33/0d4afd0d76ec0e6b773632050f8f426cae4cee564b55dc7b4034c06053f8/pipe_fn-0.2-py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "6ada2b704f2383dae63d3a4ad6de2ee9", "sha256": "ad3ca09b4843999408ba0b55ca0ac7e4ffab930c4735bbab6fa53c8b2e079557"}, "downloads": -1, "filename": "pipe_fn-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6ada2b704f2383dae63d3a4ad6de2ee9", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 4945, "upload_time": "2018-01-11T06:49:45", "upload_time_iso_8601": "2018-01-11T06:49:45.884630Z", "url": "https://files.pythonhosted.org/packages/19/ec/d731885d2c712c6a94e97d410883bb384c3ed1bbf0dabdfa53dda26bb829/pipe_fn-0.2.1-py3-none-any.whl", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "e101e983befab63dab9dfa645d6f4591", "sha256": "5c9040262d5eb4092d6e16f05f018ac7a9e04a0b3a3d66f709306982b6517971"}, "downloads": -1, "filename": "pipe_fn-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e101e983befab63dab9dfa645d6f4591", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 4952, "upload_time": "2018-01-13T11:14:56", "upload_time_iso_8601": "2018-01-13T11:14:56.119728Z", "url": "https://files.pythonhosted.org/packages/ab/71/8497dd8cb9e965ba13ce0c16b5db9a7581b73fffa3e7af5dca113410f389/pipe_fn-0.2.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e101e983befab63dab9dfa645d6f4591", "sha256": "5c9040262d5eb4092d6e16f05f018ac7a9e04a0b3a3d66f709306982b6517971"}, "downloads": -1, "filename": "pipe_fn-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e101e983befab63dab9dfa645d6f4591", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 4952, "upload_time": "2018-01-13T11:14:56", "upload_time_iso_8601": "2018-01-13T11:14:56.119728Z", "url": "https://files.pythonhosted.org/packages/ab/71/8497dd8cb9e965ba13ce0c16b5db9a7581b73fffa3e7af5dca113410f389/pipe_fn-0.2.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:54:21 2020"}