{"info": {"author": "Dmitriy Ferens", "author_email": "ferensdima@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9"], "description": "# aiodesktop\n\n[![Latest version on\nPyPi](https://badge.fury.io/py/aiodesktop.svg)](https://badge.fury.io/py/aiodesktop)\n[![Supported Python\nversions](https://img.shields.io/pypi/pyversions/aiodesktop.svg)](https://pypi.org/project/aiodesktop/)\n[![CircleCI](https://circleci.com/gh/dferens/aiodesktop/tree/master.svg?style=svg)](https://circleci.com/gh/dferens/aiodesktop/tree/master.svg?style=svg)\n\n\nA set of tools which simplify building cross-platform desktop apps with Python, JavaScript, HTML & CSS.\n\n## Features\n\nIn contrast to typical desktop GUI frameworks such as [tkinter](https://docs.python.org/3/library/tk.html#tkinter), [wxPython](https://www.wxpython.org/), [PyQt](https://docs.python.org/3/faq/gui.html#qt) or [Kivy](https://kivy.org/):\n* does not define own widgets/layout system ([Kivy](https://kivy.org/doc/stable/guide/lang.html), [Qt](https://www.riverbankcomputing.com/static/Docs/PyQt5/designer.html), [wx](https://stackoverflow.com/questions/31384089/how-am-i-supposed-to-use-wxformbuilder-python-gui-code-in-my-applications)), simply use a browser as a platform which already provides those things\n    * reuse time-saving libraries like [React](https://reactjs.org/), [Bootstrap](https://getbootstrap.com/) or [Highcharts](https://www.highcharts.com/)\n    * reuse technologies like [WebRTC](https://webrtc.org/), [WebGL](https://webglsamples.org/), [WebAssembly](https://webassembly.org/)\n    * access platform features such as [cameras](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices), [geolocation](https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API) and [others](https://developer.mozilla.org/en-US/docs/Web/API)\n* your app is client-server and cross-platform by design, different devices may use it simultaneously\n\nCompared to existing alternatives such as [Eel](https://github.com/samuelhwilliams/Eel), [async-eel](https://github.com/namuyan/async-Eel) and [guy](https://github.com/manatlan/guy):\n* runs on **asyncio** instead of threads or gevent greenlets\n* highly customizable **aiohttp** server\n* no global state / singleton API\n\n\n## Install\n\nInstall from pypi with `pip`:\n\n```shell\npip install aiodesktop\n```\n\n## Hello, World!\n\n```python\nimport aiodesktop\n\nclass Server(aiodesktop.Server):\n    async def on_startup(self):\n        aiodesktop.launch_chrome(self.start_uri)\n\n    # Use `expose` decorator to mark method as visible from JS\n    @aiodesktop.expose\n    async def get_string(self):\n        # Use `await self.js.xxx()` to call JS functions from Python \n        return 'Hello, ' + await self.js.getWorld()\n\nbundle = aiodesktop.Bundle()\nserver = Server(\n    bundle=bundle,\n    init_js_function='onConnect',\n    index_html='''<html><body><script>\n    async function onConnect(server) {                        \n        // Exposing JS function to python        \n        server.expose({\n            async getWorld() {\n                return 'World!'\n            }\n        });        \n\n        // Use `await server.py.xxx()` to call Python methods from JS\n        document.body.innerHTML += await server.py.get_string(); \n    };\n</script></body></html>''',\n)\nserver.run()\n```\n\nSee [example/](./example/) for a _slightly_ more complicated app with:\n  * static files\n  * pyinstaller executable\n  * JS & webpack\n  * https\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dferens/aiodesktop", "keywords": "gui,html,javascript,electron,asyncio,websocket", "license": "", "maintainer": "", "maintainer_email": "", "name": "aiodesktop", "package_url": "https://pypi.org/project/aiodesktop/", "platform": "", "project_url": "https://pypi.org/project/aiodesktop/", "project_urls": {"Homepage": "https://github.com/dferens/aiodesktop"}, "release_url": "https://pypi.org/project/aiodesktop/0.1.3/", "requires_dist": ["aiohttp (>=3.1)", "whichcraft (==0.6.1)"], "requires_python": ">=3.6", "summary": "A set of tools which simplify building cross-platform desktop apps with Python, JavaScript, HTML & CSS.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aiodesktop</h1>\n<p><a href=\"https://badge.fury.io/py/aiodesktop\" rel=\"nofollow\"><img alt=\"Latest version on PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc0553779e18e902b5ac5111719b3cad32f6883d/68747470733a2f2f62616467652e667572792e696f2f70792f61696f6465736b746f702e737667\"></a>\n<a href=\"https://pypi.org/project/aiodesktop/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/174f83bc4e1d2feec7229eb29725a980275e0551/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f61696f6465736b746f702e737667\"></a>\n<a href=\"https://circleci.com/gh/dferens/aiodesktop/tree/master.svg?style=svg\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e3aaaec0fca4ffe1aed3fcef1d932fc27570db68/68747470733a2f2f636972636c6563692e636f6d2f67682f64666572656e732f61696f6465736b746f702f747265652f6d61737465722e7376673f7374796c653d737667\"></a></p>\n<p>A set of tools which simplify building cross-platform desktop apps with Python, JavaScript, HTML &amp; CSS.</p>\n<h2>Features</h2>\n<p>In contrast to typical desktop GUI frameworks such as <a href=\"https://docs.python.org/3/library/tk.html#tkinter\" rel=\"nofollow\">tkinter</a>, <a href=\"https://www.wxpython.org/\" rel=\"nofollow\">wxPython</a>, <a href=\"https://docs.python.org/3/faq/gui.html#qt\" rel=\"nofollow\">PyQt</a> or <a href=\"https://kivy.org/\" rel=\"nofollow\">Kivy</a>:</p>\n<ul>\n<li>does not define own widgets/layout system (<a href=\"https://kivy.org/doc/stable/guide/lang.html\" rel=\"nofollow\">Kivy</a>, <a href=\"https://www.riverbankcomputing.com/static/Docs/PyQt5/designer.html\" rel=\"nofollow\">Qt</a>, <a href=\"https://stackoverflow.com/questions/31384089/how-am-i-supposed-to-use-wxformbuilder-python-gui-code-in-my-applications\" rel=\"nofollow\">wx</a>), simply use a browser as a platform which already provides those things\n<ul>\n<li>reuse time-saving libraries like <a href=\"https://reactjs.org/\" rel=\"nofollow\">React</a>, <a href=\"https://getbootstrap.com/\" rel=\"nofollow\">Bootstrap</a> or <a href=\"https://www.highcharts.com/\" rel=\"nofollow\">Highcharts</a></li>\n<li>reuse technologies like <a href=\"https://webrtc.org/\" rel=\"nofollow\">WebRTC</a>, <a href=\"https://webglsamples.org/\" rel=\"nofollow\">WebGL</a>, <a href=\"https://webassembly.org/\" rel=\"nofollow\">WebAssembly</a></li>\n<li>access platform features such as <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices\" rel=\"nofollow\">cameras</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API\" rel=\"nofollow\">geolocation</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API\" rel=\"nofollow\">others</a></li>\n</ul>\n</li>\n<li>your app is client-server and cross-platform by design, different devices may use it simultaneously</li>\n</ul>\n<p>Compared to existing alternatives such as <a href=\"https://github.com/samuelhwilliams/Eel\" rel=\"nofollow\">Eel</a>, <a href=\"https://github.com/namuyan/async-Eel\" rel=\"nofollow\">async-eel</a> and <a href=\"https://github.com/manatlan/guy\" rel=\"nofollow\">guy</a>:</p>\n<ul>\n<li>runs on <strong>asyncio</strong> instead of threads or gevent greenlets</li>\n<li>highly customizable <strong>aiohttp</strong> server</li>\n<li>no global state / singleton API</li>\n</ul>\n<h2>Install</h2>\n<p>Install from pypi with <code>pip</code>:</p>\n<pre>pip install aiodesktop\n</pre>\n<h2>Hello, World!</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">aiodesktop</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Server</span><span class=\"p\">(</span><span class=\"n\">aiodesktop</span><span class=\"o\">.</span><span class=\"n\">Server</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_startup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">aiodesktop</span><span class=\"o\">.</span><span class=\"n\">launch_chrome</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start_uri</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Use `expose` decorator to mark method as visible from JS</span>\n    <span class=\"nd\">@aiodesktop</span><span class=\"o\">.</span><span class=\"n\">expose</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">get_string</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Use `await self.js.xxx()` to call JS functions from Python </span>\n        <span class=\"k\">return</span> <span class=\"s1\">'Hello, '</span> <span class=\"o\">+</span> <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">js</span><span class=\"o\">.</span><span class=\"n\">getWorld</span><span class=\"p\">()</span>\n\n<span class=\"n\">bundle</span> <span class=\"o\">=</span> <span class=\"n\">aiodesktop</span><span class=\"o\">.</span><span class=\"n\">Bundle</span><span class=\"p\">()</span>\n<span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">Server</span><span class=\"p\">(</span>\n    <span class=\"n\">bundle</span><span class=\"o\">=</span><span class=\"n\">bundle</span><span class=\"p\">,</span>\n    <span class=\"n\">init_js_function</span><span class=\"o\">=</span><span class=\"s1\">'onConnect'</span><span class=\"p\">,</span>\n    <span class=\"n\">index_html</span><span class=\"o\">=</span><span class=\"s1\">'''&lt;html&gt;&lt;body&gt;&lt;script&gt;</span>\n<span class=\"s1\">    async function onConnect(server) {                        </span>\n<span class=\"s1\">        // Exposing JS function to python        </span>\n<span class=\"s1\">        server.expose({</span>\n<span class=\"s1\">            async getWorld() {</span>\n<span class=\"s1\">                return 'World!'</span>\n<span class=\"s1\">            }</span>\n<span class=\"s1\">        });        </span>\n\n<span class=\"s1\">        // Use `await server.py.xxx()` to call Python methods from JS</span>\n<span class=\"s1\">        document.body.innerHTML += await server.py.get_string(); </span>\n<span class=\"s1\">    };</span>\n<span class=\"s1\">&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;'''</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>See <a href=\"./example/\" rel=\"nofollow\">example/</a> for a <em>slightly</em> more complicated app with:</p>\n<ul>\n<li>static files</li>\n<li>pyinstaller executable</li>\n<li>JS &amp; webpack</li>\n<li>https</li>\n</ul>\n\n          </div>"}, "last_serial": 6926061, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b5bc73da2214ffd8b133e152a8e1bd07", "sha256": "06fd9519b21a846be2ced0312aecac1ca28cbcee6ff80a697b03ed2c677c33e8"}, "downloads": -1, "filename": "aiodesktop-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b5bc73da2214ffd8b133e152a8e1bd07", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13710, "upload_time": "2020-03-22T18:45:03", "upload_time_iso_8601": "2020-03-22T18:45:03.635845Z", "url": "https://files.pythonhosted.org/packages/08/16/c39899f56365c7369917e580a574e1fa97e454f81b8522472869879e3e53/aiodesktop-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76c61bc6e4446a8924782485ecf2534c", "sha256": "a6eff332a0392c37e68ef72bed0783d7c3a81801dbc9cce66e860fedca7ed35f"}, "downloads": -1, "filename": "aiodesktop-0.1.0.tar.gz", "has_sig": false, "md5_digest": "76c61bc6e4446a8924782485ecf2534c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12710, "upload_time": "2020-03-22T18:45:05", "upload_time_iso_8601": "2020-03-22T18:45:05.933804Z", "url": "https://files.pythonhosted.org/packages/22/67/6e019b1c28d86c8e38fc585881c15d298d800753ebd14cf81477fc424d57/aiodesktop-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "42ce15eeccc3f3cada2c4139c4fb18fb", "sha256": "51d08e946751881228cc65fbf018d605eff2c3e2bca3745adb3b3245f55cb40a"}, "downloads": -1, "filename": "aiodesktop-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "42ce15eeccc3f3cada2c4139c4fb18fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14077, "upload_time": "2020-03-23T21:42:49", "upload_time_iso_8601": "2020-03-23T21:42:49.348358Z", "url": "https://files.pythonhosted.org/packages/4c/35/93cac96e81b1539d9d437caf9de5ff17e59017ddda42853b85a2aa1ce031/aiodesktop-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6c22ed5331fdabe65f68b37a098806a", "sha256": "8483585a132036b2e0e07dd0036c014a888d11c591548ee5492d4d4a41b4ba76"}, "downloads": -1, "filename": "aiodesktop-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a6c22ed5331fdabe65f68b37a098806a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13015, "upload_time": "2020-03-23T21:42:50", "upload_time_iso_8601": "2020-03-23T21:42:50.784425Z", "url": "https://files.pythonhosted.org/packages/49/a9/aa1870a4179e1f1b35acdd70df262e2782c62877cbe8ce8db7e18c416963/aiodesktop-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "1bbae15ff76e2c667ddb9a0da6582c13", "sha256": "bf67f6afd3affba96a5770a5ec1c495007a4df08b354e8f4a22058bbdff9ae79"}, "downloads": -1, "filename": "aiodesktop-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1bbae15ff76e2c667ddb9a0da6582c13", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16116, "upload_time": "2020-03-26T16:39:12", "upload_time_iso_8601": "2020-03-26T16:39:12.318627Z", "url": "https://files.pythonhosted.org/packages/7f/4e/ce1dc0e8d6246c063eb1ef21733218c032f3c80a9f57fd22de9a29786e3a/aiodesktop-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1353bd38963fc3571cb3c71880d11856", "sha256": "3c424e5884d1410cf73338a758414a397ea3745d00883bb545f298f7c7afba07"}, "downloads": -1, "filename": "aiodesktop-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1353bd38963fc3571cb3c71880d11856", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14703, "upload_time": "2020-03-26T16:39:14", "upload_time_iso_8601": "2020-03-26T16:39:14.079812Z", "url": "https://files.pythonhosted.org/packages/f0/5d/a70cfbe4c2abd9b2433a0a3d9d80d177c7896c9c98ea72372efbe2374500/aiodesktop-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "b6bfb31df0c6149241259f19f3afc2ca", "sha256": "92811ab960cf6cdefd4a0c5a051a76734a436051568257272acefe4f1f9f197a"}, "downloads": -1, "filename": "aiodesktop-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b6bfb31df0c6149241259f19f3afc2ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16425, "upload_time": "2020-04-01T08:26:12", "upload_time_iso_8601": "2020-04-01T08:26:12.027194Z", "url": "https://files.pythonhosted.org/packages/97/c3/b40e0bc30b743f9f44670c5c2438dcc428c12ce1c370a5ba017e4d2e1f41/aiodesktop-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6147829e340ca629f1816e488ee3e3dc", "sha256": "35dd3b41762ef300c3b07a865d5c43f2adfb36c4484a9e9bc792d92f3611f8e2"}, "downloads": -1, "filename": "aiodesktop-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6147829e340ca629f1816e488ee3e3dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15024, "upload_time": "2020-04-01T08:26:13", "upload_time_iso_8601": "2020-04-01T08:26:13.461903Z", "url": "https://files.pythonhosted.org/packages/c0/c9/ae48412c708a4fdfd0b519e9fb55811558cf2a73c1bd56ab9e1b1edf625a/aiodesktop-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b6bfb31df0c6149241259f19f3afc2ca", "sha256": "92811ab960cf6cdefd4a0c5a051a76734a436051568257272acefe4f1f9f197a"}, "downloads": -1, "filename": "aiodesktop-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b6bfb31df0c6149241259f19f3afc2ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16425, "upload_time": "2020-04-01T08:26:12", "upload_time_iso_8601": "2020-04-01T08:26:12.027194Z", "url": "https://files.pythonhosted.org/packages/97/c3/b40e0bc30b743f9f44670c5c2438dcc428c12ce1c370a5ba017e4d2e1f41/aiodesktop-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6147829e340ca629f1816e488ee3e3dc", "sha256": "35dd3b41762ef300c3b07a865d5c43f2adfb36c4484a9e9bc792d92f3611f8e2"}, "downloads": -1, "filename": "aiodesktop-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6147829e340ca629f1816e488ee3e3dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15024, "upload_time": "2020-04-01T08:26:13", "upload_time_iso_8601": "2020-04-01T08:26:13.461903Z", "url": "https://files.pythonhosted.org/packages/c0/c9/ae48412c708a4fdfd0b519e9fb55811558cf2a73c1bd56ab9e1b1edf625a/aiodesktop-0.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:40 2020"}