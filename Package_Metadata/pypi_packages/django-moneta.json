{"info": {"author": "Visionect d.o.o., Matevz Mihalic", "author_email": "matevz.mihalic@visionect.si", "bugtrack_url": null, "classifiers": [], "description": "django-moneta\n=============\n\nDjango app for Moneta eTerminal API.\nMozzila's NSS library is used for secure communications, because OpenSSL or GnuTLS doesn't work with Moneta's servers.\n\n\n\nRequirements\n------------\n\n* [Django] 1.3+\n* [pysimplesoap] 1.08b+\n* [python-nss] 0.12+\n\nInstallation\n--------------\n\n```pip install django-moneta```\n\nUsage\n-----\n\n1. Create NSS database with Mobitel's root CA certificate and your client certificate (you can use certconvert.sh)\n2. Edit your settings.py\n * Add `moneta` to `INSTALLED_APPS`\n * set `MONETA_DBDIR` to point to NSS directory you've created in the first step\n * set `MONETA_CERT_NAME` to your client certificate name\n * optionally set `MONETA_PIN` if you're using it\n * set `MONETA_PRODUCTION` to `True` when you go to production\n3. Use `Transaction` model:\n\n```python\nfrom decimal import Decimal\nfrom moneta.models import Transaction\n\nt = Transaction(value=Decimal('1.23'), reference='areference123')\ntoken = t.getToken()\n\nprint \"Please call %s to pay.\" % token\n\nt.getStatus()\nprint t.status #should be 11 since it was just created\n\nt.cancel()\nprint t.status #should be 7\n```\n\nWhen transaction is finished `transaction_done` signal is emitted.\n\nTODO\n====\n\n* Suport delayed transaction\n* Support other API functions\n\nAuthor\n------\n\n[Visionect d.o.o.], [Matev\u017e Mihali\u010d]\n\nLicence\n-------\n\nMIT: http://mit-license.org/\n\n\n[Django]: http://djangoproject.com/\n[pysimplesoap]: https://code.google.com/p/pysimplesoap/\n[python-nss]: https://www.mozilla.org/projects/security/pki/python-nss/\n[Visionect d.o.o.]: http://www.visionect.si\n[Matev\u017e Mihali\u010d]: http://marv.si", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/visionect/django-moneta", "keywords": "moneta django api eterminal", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-moneta", "package_url": "https://pypi.org/project/django-moneta/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-moneta/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/visionect/django-moneta"}, "release_url": "https://pypi.org/project/django-moneta/0.1/", "requires_dist": null, "requires_python": null, "summary": "Django app for Moneta eTerminal API.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            django-moneta<br>=============<br><br>Django app for Moneta eTerminal API.<br>Mozzila's NSS library is used for secure communications, because OpenSSL or GnuTLS doesn't work with Moneta's servers.<br><br><br><br>Requirements<br>------------<br><br>* [Django] 1.3+<br>* [pysimplesoap] 1.08b+<br>* [python-nss] 0.12+<br><br>Installation<br>--------------<br><br>```pip install django-moneta```<br><br>Usage<br>-----<br><br>1. Create NSS database with Mobitel's root CA certificate and your client certificate (you can use certconvert.sh)<br>2. Edit your settings.py<br> * Add `moneta` to `INSTALLED_APPS`<br> * set `MONETA_DBDIR` to point to NSS directory you've created in the first step<br> * set `MONETA_CERT_NAME` to your client certificate name<br> * optionally set `MONETA_PIN` if you're using it<br> * set `MONETA_PRODUCTION` to `True` when you go to production<br>3. Use `Transaction` model:<br><br>```python<br>from decimal import Decimal<br>from moneta.models import Transaction<br><br>t = Transaction(value=Decimal('1.23'), reference='areference123')<br>token = t.getToken()<br><br>print \"Please call %s to pay.\" % token<br><br>t.getStatus()<br>print t.status #should be 11 since it was just created<br><br>t.cancel()<br>print t.status #should be 7<br>```<br><br>When transaction is finished `transaction_done` signal is emitted.<br><br>TODO<br>====<br><br>* Suport delayed transaction<br>* Support other API functions<br><br>Author<br>------<br><br>[Visionect d.o.o.], [Matev\u017e Mihali\u010d]<br><br>Licence<br>-------<br><br>MIT: http://mit-license.org/<br><br><br>[Django]: http://djangoproject.com/<br>[pysimplesoap]: https://code.google.com/p/pysimplesoap/<br>[python-nss]: https://www.mozilla.org/projects/security/pki/python-nss/<br>[Visionect d.o.o.]: http://www.visionect.si<br>[Matev\u017e Mihali\u010d]: http://marv.si\n          </div>"}, "last_serial": 675960, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b5f3f211de74db38375c2abbb2ea79d4", "sha256": "18533c40943d9159104c5ed5a10648badb331d949fd69e5e7be2e17f210d041b"}, "downloads": -1, "filename": "django-moneta-0.1.tar.gz", "has_sig": false, "md5_digest": "b5f3f211de74db38375c2abbb2ea79d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5234, "upload_time": "2013-05-22T12:16:36", "upload_time_iso_8601": "2013-05-22T12:16:36.768921Z", "url": "https://files.pythonhosted.org/packages/c6/25/030630e1e3b02f473646ef79ea263f144d13edd625b3904eb49a5d83e123/django-moneta-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b5f3f211de74db38375c2abbb2ea79d4", "sha256": "18533c40943d9159104c5ed5a10648badb331d949fd69e5e7be2e17f210d041b"}, "downloads": -1, "filename": "django-moneta-0.1.tar.gz", "has_sig": false, "md5_digest": "b5f3f211de74db38375c2abbb2ea79d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5234, "upload_time": "2013-05-22T12:16:36", "upload_time_iso_8601": "2013-05-22T12:16:36.768921Z", "url": "https://files.pythonhosted.org/packages/c6/25/030630e1e3b02f473646ef79ea263f144d13edd625b3904eb49a5d83e123/django-moneta-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:34:59 2020"}