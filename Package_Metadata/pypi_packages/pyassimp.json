{"info": {"author": "S\u00e9verin Lemaignan", "author_email": "severin@guakamole.org", "bugtrack_url": null, "classifiers": [], "description": "PyAssimp: Python bindings for libassimp\n=======================================\n\nA simple Python wrapper for Assimp using ``ctypes`` to access the\nlibrary. Requires Python >= 2.6.\n\nPython 3 support is mostly here, but not well tested.\n\nNote that pyassimp is not complete. Many ASSIMP features are missing.\n\nUSAGE\n-----\n\nComplete example: 3D viewer\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``pyassimp`` comes with a simple 3D viewer that shows how to load and\ndisplay a 3D model using a shader-based OpenGL pipeline.\n\n.. figure:: 3d_viewer_screenshot.png\n   :alt: Screenshot\n\n   Screenshot\n\nTo use it, from within ``/port/PyAssimp``:\n\n::\n\n    $ cd scripts\n    $ python ./3D-viewer <path to your model>\n\nYou can use this code as starting point in your applications.\n\nWriting your own code\n~~~~~~~~~~~~~~~~~~~~~\n\nTo get started with ``pyassimp``, examine the simpler ``sample.py``\nscript in ``scripts/``, which illustrates the basic usage. All Assimp\ndata structures are wrapped using ``ctypes``. All the data+length fields\nin Assimp's data structures (such as ``aiMesh::mNumVertices``,\n``aiMesh::mVertices``) are replaced by simple python lists, so you can\ncall ``len()`` on them to get their respective size and access members\nusing ``[]``.\n\nFor example, to load a file named ``hello.3ds`` and print the first\nvertex of the first mesh, you would do (proper error handling\nsubstituted by assertions ...):\n\n.. code:: python\n\n\n    from pyassimp import *\n    scene = load('hello.3ds')\n\n    assert len(scene.meshes)\n    mesh = scene.meshes[0]\n\n    assert len(mesh.vertices)\n    print(mesh.vertices[0])\n\n    # don't forget this one, or you will leak!\n    release(scene)\n\nAnother example to list the 'top nodes' in a scene:\n\n.. code:: python\n\n\n    from pyassimp import *\n    scene = load('hello.3ds')\n\n    for c in scene.rootnode.children:\n        print(str(c))\n\n    release(scene)\n\nINSTALL\n-------\n\nInstall ``pyassimp`` by running:\n\n::\n\n    $ python setup.py install\n\nPyAssimp requires a assimp dynamic library (``DLL`` on windows, ``.so``\non linux, ``.dynlib`` on macOS) in order to work. The default search\ndirectories are:\n\n-  the current directory\n-  on linux additionally: ``/usr/lib``, ``/usr/local/lib``,\n   ``/usr/lib/x86_64-linux-gnu``\n\nTo build that library, refer to the Assimp master ``INSTALL``\ninstructions. To look in more places, edit ``./pyassimp/helper.py``.\nThere's an ``additional_dirs`` list waiting for your entries.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/assimp/assimp", "keywords": "", "license": "ISC", "maintainer": "", "maintainer_email": "", "name": "pyassimp", "package_url": "https://pypi.org/project/pyassimp/", "platform": "", "project_url": "https://pypi.org/project/pyassimp/", "project_urls": {"Homepage": "https://github.com/assimp/assimp"}, "release_url": "https://pypi.org/project/pyassimp/4.1.4/", "requires_dist": null, "requires_python": "", "summary": "Python bindings for the Open Asset Import Library (ASSIMP)", "version": "4.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple Python wrapper for Assimp using <tt>ctypes</tt> to access the\nlibrary. Requires Python &gt;= 2.6.</p>\n<p>Python 3 support is mostly here, but not well tested.</p>\n<p>Note that pyassimp is not complete. Many ASSIMP features are missing.</p>\n<div id=\"usage\">\n<h2>USAGE</h2>\n<div id=\"complete-example-3d-viewer\">\n<h3>Complete example: 3D viewer</h3>\n<p><tt>pyassimp</tt> comes with a simple 3D viewer that shows how to load and\ndisplay a 3D model using a shader-based OpenGL pipeline.</p>\n<div>\n<img alt=\"Screenshot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd6f581a5d2006a22abfc829f79aed76541d1e69/33645f7669657765725f73637265656e73686f742e706e67\">\n<p>Screenshot</p>\n</div>\n<p>To use it, from within <tt>/port/PyAssimp</tt>:</p>\n<pre>$ cd scripts\n$ python ./3D-viewer &lt;path to your model&gt;\n</pre>\n<p>You can use this code as starting point in your applications.</p>\n</div>\n<div id=\"writing-your-own-code\">\n<h3>Writing your own code</h3>\n<p>To get started with <tt>pyassimp</tt>, examine the simpler <tt>sample.py</tt>\nscript in <tt>scripts/</tt>, which illustrates the basic usage. All Assimp\ndata structures are wrapped using <tt>ctypes</tt>. All the data+length fields\nin Assimp\u2019s data structures (such as <tt><span class=\"pre\">aiMesh::mNumVertices</span></tt>,\n<tt><span class=\"pre\">aiMesh::mVertices</span></tt>) are replaced by simple python lists, so you can\ncall <tt>len()</tt> on them to get their respective size and access members\nusing <tt>[]</tt>.</p>\n<p>For example, to load a file named <tt>hello.3ds</tt> and print the first\nvertex of the first mesh, you would do (proper error handling\nsubstituted by assertions \u2026):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyassimp</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'hello.3ds'</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">meshes</span><span class=\"p\">)</span>\n<span class=\"n\">mesh</span> <span class=\"o\">=</span> <span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">meshes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># don't forget this one, or you will leak!</span>\n<span class=\"n\">release</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre>\n<p>Another example to list the \u2018top nodes\u2019 in a scene:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyassimp</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'hello.3ds'</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">rootnode</span><span class=\"o\">.</span><span class=\"n\">children</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">))</span>\n\n<span class=\"n\">release</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"install\">\n<h2>INSTALL</h2>\n<p>Install <tt>pyassimp</tt> by running:</p>\n<pre>$ python setup.py install\n</pre>\n<p>PyAssimp requires a assimp dynamic library (<tt>DLL</tt> on windows, <tt>.so</tt>\non linux, <tt>.dynlib</tt> on macOS) in order to work. The default search\ndirectories are:</p>\n<ul>\n<li>the current directory</li>\n<li>on linux additionally: <tt>/usr/lib</tt>, <tt>/usr/local/lib</tt>,\n<tt><span class=\"pre\">/usr/lib/x86_64-linux-gnu</span></tt></li>\n</ul>\n<p>To build that library, refer to the Assimp master <tt>INSTALL</tt>\ninstructions. To look in more places, edit <tt>./pyassimp/helper.py</tt>.\nThere\u2019s an <tt>additional_dirs</tt> list waiting for your entries.</p>\n</div>\n\n          </div>"}, "last_serial": 4761687, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ead9684f30b2f6cbf59a3ebd974e4b02", "sha256": "86787206cdbfbc7eddb77e5b13cad7fd2558e91d83ace3ac35765cd1b91f92ca"}, "downloads": -1, "filename": "pyassimp-0.1.tar.gz", "has_sig": false, "md5_digest": "ead9684f30b2f6cbf59a3ebd974e4b02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31647, "upload_time": "2016-01-04T17:39:26", "upload_time_iso_8601": "2016-01-04T17:39:26.252025Z", "url": "https://files.pythonhosted.org/packages/ce/58/f61a2ced89a1c59487c4474911aec99b35fd09b865c18cd362ebd26a7506/pyassimp-0.1.tar.gz", "yanked": false}], "3.3": [{"comment_text": "", "digests": {"md5": "f00db8478f3b2a976df0697c34fa5327", "sha256": "626b4db1d11adb84e4b4d27f2fd9f0ea7ddcd6a328ab5b2a989c072a6fde0c4b"}, "downloads": -1, "filename": "pyassimp-3.3.tar.gz", "has_sig": false, "md5_digest": "f00db8478f3b2a976df0697c34fa5327", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94555, "upload_time": "2016-12-16T11:04:00", "upload_time_iso_8601": "2016-12-16T11:04:00.807129Z", "url": "https://files.pythonhosted.org/packages/11/0e/451c857f1d711f023a558c40e51c28e288f6644e613dc97c7eb992864e0b/pyassimp-3.3.tar.gz", "yanked": false}], "4.1.1": [{"comment_text": "", "digests": {"md5": "034c457dcb679b62286d8e421dda00d2", "sha256": "36e7f3df2495962008512982efc4fb69690f46709283df475a88317bf4d24604"}, "downloads": -1, "filename": "pyassimp-4.1.1.tar.gz", "has_sig": false, "md5_digest": "034c457dcb679b62286d8e421dda00d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96580, "upload_time": "2018-05-28T22:46:59", "upload_time_iso_8601": "2018-05-28T22:46:59.962656Z", "url": "https://files.pythonhosted.org/packages/b4/5d/3837d8c9f56f9b7ce7c32dee158335ad15255ed0ba11fdc61587f3dd69c6/pyassimp-4.1.1.tar.gz", "yanked": false}], "4.1.2": [{"comment_text": "", "digests": {"md5": "92e371bd58d1fbc99d9fa3751d85b655", "sha256": "a7370c8aea36e038824f8545f00379f074e422f4e6836400c713a70ad63c042b"}, "downloads": -1, "filename": "pyassimp-4.1.2.tar.gz", "has_sig": false, "md5_digest": "92e371bd58d1fbc99d9fa3751d85b655", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96606, "upload_time": "2018-05-28T22:51:47", "upload_time_iso_8601": "2018-05-28T22:51:47.421333Z", "url": "https://files.pythonhosted.org/packages/58/1a/85a6f9a8dabd19a4ca8ad4b688d45bcc151e53ae5a91f95c01c4313b2cdb/pyassimp-4.1.2.tar.gz", "yanked": false}], "4.1.3": [{"comment_text": "", "digests": {"md5": "98566dcbd23c55fe9dbdad6434778bc9", "sha256": "28553d428800daf00dedb6bfce43c7d4f62c6dc553d53e9f405694e21482db3b"}, "downloads": -1, "filename": "pyassimp-4.1.3.tar.gz", "has_sig": false, "md5_digest": "98566dcbd23c55fe9dbdad6434778bc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 106169, "upload_time": "2018-05-29T09:48:50", "upload_time_iso_8601": "2018-05-29T09:48:50.758773Z", "url": "https://files.pythonhosted.org/packages/b7/9f/d327c8fce7471a5295bde4adbfb94953584ff3b36b3c46ba586e27d2be8b/pyassimp-4.1.3.tar.gz", "yanked": false}], "4.1.4": [{"comment_text": "", "digests": {"md5": "682f1583e7d8e130fe70bf754721dcb5", "sha256": "266bd4be170d46065b8c2ad0f5396dad10938a6bbf9a566c4e4d56456e33aa6a"}, "downloads": -1, "filename": "pyassimp-4.1.4.tar.gz", "has_sig": false, "md5_digest": "682f1583e7d8e130fe70bf754721dcb5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98275, "upload_time": "2019-01-30T22:41:56", "upload_time_iso_8601": "2019-01-30T22:41:56.270805Z", "url": "https://files.pythonhosted.org/packages/60/49/95560c2e694fa5bcbe885bdd4656948d083d67ee2adb0378e7d15637df4f/pyassimp-4.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "682f1583e7d8e130fe70bf754721dcb5", "sha256": "266bd4be170d46065b8c2ad0f5396dad10938a6bbf9a566c4e4d56456e33aa6a"}, "downloads": -1, "filename": "pyassimp-4.1.4.tar.gz", "has_sig": false, "md5_digest": "682f1583e7d8e130fe70bf754721dcb5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98275, "upload_time": "2019-01-30T22:41:56", "upload_time_iso_8601": "2019-01-30T22:41:56.270805Z", "url": "https://files.pythonhosted.org/packages/60/49/95560c2e694fa5bcbe885bdd4656948d083d67ee2adb0378e7d15637df4f/pyassimp-4.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:06 2020"}