{"info": {"author": "Thammi", "author_email": "thammi@chaossource.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python :: 2", "Topic :: Multimedia :: Sound/Audio"], "description": "# nymp\n\n## About\n\nnymp is a graphical command line client for xmms2. It is library focused and\nprovides a tree view on your collection.\n\n## Status\n\nThe project is already usable but there is still some missing functionality. The\nauthor uses it on a daily basis. See the 'TODO' file for a (probably incomplete\nand outdatet) list of planned additional features.\n\n## Dependencies\n\n* XMMS2\n* Python 2.X (developed with Python 2.6, tested on Python 2.5)\n* urwid (python-urwid in Debian)\n* Python bindings for XMMS2 (python-xmmsclient in Debian)\n\n## Usage\n\n### XMMS2\n\nnymp is a frontend for XMMS2. It doesn't play any files by itself but forwards\nthese tasks to XMMS2. The library is handled by XMMS2 as well.\n\nXMMS2 follows a philosophy related to the Unix principle 'Make each program do\none thing well.'. It offers a client/server infrastructure where multiple\nclients are able to manipulate the state of the music playback. You therefore\nshould use other clients to achieve the best user experience.\n\nThe most important task nymp doesn't handle is media library management. You\nshould install `xmms2-mlib-updater` to automatically import your media files\ninto the media library and scan for changes. It is part of most distributions.\n\n### Startup\n\nUse `launch.py` in `./src/` to start the program. You can also add a link to it in\nyour `bin` directory. If nymp is not able to connect to the XMMS2 server,\n`xmms2-launcher` is called to start one.\n\n### Key Bindings\n\nThe key bindings are subject to change in the near future. They are loosely\nvim-oriented. Configuration and a command line will be implemented later.\n\nIncomplete overview:\n\n* x - play/pause\n* c - stop\n* z/v - previous/next\n* d - delete from playlist (and put into buffer)\n* a - append to playlist\n* p - paste from buffer\n* y - save to buffer\n* j/k/arrow keys - navigate\n* h/l/tab - change column (library/playlist)\n* enter - collapse tree node/jump to playlist item\n* space - mark/unmark item\n* alt+space - unmark all\n* 9/0 - change volume\n\nYou can use the mouse, too.\n\n## Todo and ideas\n\n- second xmms connection for heavy operations (library ...)\n- playlist update (sort, shuffle, update)\n- library update\n- library browser root?\n  - collections\n    - collection management?\n  - search?\n- search\n  - find and/or filter?\n- adding a command line?\n  - hotkeys -> commands?\n  - auto completion\n- playlists\n- playback status\n- seek", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.chaossource.net/nymp/", "keywords": "xmms2 audio cli", "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "nymp", "package_url": "https://pypi.org/project/nymp/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/nymp/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.chaossource.net/nymp/"}, "release_url": "https://pypi.org/project/nymp/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "A graphical xmms2 cli frontend. It is library focused and provides a tree view on your collection", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # nymp<br><br>## About<br><br>nymp is a graphical command line client for xmms2. It is library focused and<br>provides a tree view on your collection.<br><br>## Status<br><br>The project is already usable but there is still some missing functionality. The<br>author uses it on a daily basis. See the 'TODO' file for a (probably incomplete<br>and outdatet) list of planned additional features.<br><br>## Dependencies<br><br>* XMMS2<br>* Python 2.X (developed with Python 2.6, tested on Python 2.5)<br>* urwid (python-urwid in Debian)<br>* Python bindings for XMMS2 (python-xmmsclient in Debian)<br><br>## Usage<br><br>### XMMS2<br><br>nymp is a frontend for XMMS2. It doesn't play any files by itself but forwards<br>these tasks to XMMS2. The library is handled by XMMS2 as well.<br><br>XMMS2 follows a philosophy related to the Unix principle 'Make each program do<br>one thing well.'. It offers a client/server infrastructure where multiple<br>clients are able to manipulate the state of the music playback. You therefore<br>should use other clients to achieve the best user experience.<br><br>The most important task nymp doesn't handle is media library management. You<br>should install `xmms2-mlib-updater` to automatically import your media files<br>into the media library and scan for changes. It is part of most distributions.<br><br>### Startup<br><br>Use `launch.py` in `./src/` to start the program. You can also add a link to it in<br>your `bin` directory. If nymp is not able to connect to the XMMS2 server,<br>`xmms2-launcher` is called to start one.<br><br>### Key Bindings<br><br>The key bindings are subject to change in the near future. They are loosely<br>vim-oriented. Configuration and a command line will be implemented later.<br><br>Incomplete overview:<br><br>* x - play/pause<br>* c - stop<br>* z/v - previous/next<br>* d - delete from playlist (and put into buffer)<br>* a - append to playlist<br>* p - paste from buffer<br>* y - save to buffer<br>* j/k/arrow keys - navigate<br>* h/l/tab - change column (library/playlist)<br>* enter - collapse tree node/jump to playlist item<br>* space - mark/unmark item<br>* alt+space - unmark all<br>* 9/0 - change volume<br><br>You can use the mouse, too.<br><br>## Todo and ideas<br><br>- second xmms connection for heavy operations (library ...)<br>- playlist update (sort, shuffle, update)<br>- library update<br>- library browser root?<br>  - collections<br>    - collection management?<br>  - search?<br>- search<br>  - find and/or filter?<br>- adding a command line?<br>  - hotkeys -&gt; commands?<br>  - auto completion<br>- playlists<br>- playback status<br>- seek\n          </div>"}, "last_serial": 817297, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "30b751eeeddf76f1504ff784af17c609", "sha256": "928032858c2a824247ec3011eca1bb0cac0e0201220215b5b4ffabf308ad210f"}, "downloads": -1, "filename": "nymp-0.0.1.tar.gz", "has_sig": false, "md5_digest": "30b751eeeddf76f1504ff784af17c609", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17696, "upload_time": "2013-07-13T18:34:53", "upload_time_iso_8601": "2013-07-13T18:34:53.506946Z", "url": "https://files.pythonhosted.org/packages/b9/ce/460ffa40f7f1b5da4c980adc8be8c2ca7e336bfab32d7a391efa8a36d551/nymp-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "971ee46b7d052c7c8d30d6215f6d20a1", "sha256": "3f738383226c1734b7766b1e24c500678eaaeafad68d8b96a5986f536224d99f"}, "downloads": -1, "filename": "nymp-0.0.2.tar.gz", "has_sig": false, "md5_digest": "971ee46b7d052c7c8d30d6215f6d20a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19408, "upload_time": "2013-07-17T12:31:02", "upload_time_iso_8601": "2013-07-17T12:31:02.307676Z", "url": "https://files.pythonhosted.org/packages/4d/9b/6c76292d5c3afcf0dbf09cb474d6cdc7c1f3b3dc8e5926379ec2df56e777/nymp-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "971ee46b7d052c7c8d30d6215f6d20a1", "sha256": "3f738383226c1734b7766b1e24c500678eaaeafad68d8b96a5986f536224d99f"}, "downloads": -1, "filename": "nymp-0.0.2.tar.gz", "has_sig": false, "md5_digest": "971ee46b7d052c7c8d30d6215f6d20a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19408, "upload_time": "2013-07-17T12:31:02", "upload_time_iso_8601": "2013-07-17T12:31:02.307676Z", "url": "https://files.pythonhosted.org/packages/4d/9b/6c76292d5c3afcf0dbf09cb474d6cdc7c1f3b3dc8e5926379ec2df56e777/nymp-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:00 2020"}