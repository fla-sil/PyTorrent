{"info": {"author": "Nicolas Renaud, Cunliang Geng", "author_email": "n.renaud@esciencecenter.nl, c.geng@esciencecenter.nl", "bugtrack_url": null, "classifiers": [], "description": "# PSSMGen\n\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3635712.svg)](https://doi.org/10.5281/zenodo.3635712)\n\nGenerates consistent PSSM and/or PDB files for protein-protein complexes\n\n## Install\n\n1. Make sure BLAST is installed and its database is available on your machine. Otherwise, install BLAST and download its databases by following the [BLAST guide](https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=Download).\n2. Install the PSSMgen by `pip install PSSMGen`.\n\n\n## Requirements for file structures and names\n\n`PSSMGen` is geared toward computing the pssm files for all models of a particular protein-protein complex.\n\n### File structures\nThis tool assumes your files have following structure:\n\n```\n workdir\n |_ pdb\n |_ fasta\n |_ pssm_raw\n |_ pssm\n |_ pdb_nonmatch\n```\n\n- `workdir` is your working directory for one specific protein-protein complex.\n- `pdb` folder must contain the PDB files.\n- `fasta` folder contains the protein sequence [FASTA](https://en.wikipedia.org/wiki/FASTA_format) files. The code can generate the FASTA files by extracting sequences from the `pdb` file , or you can manually create this folder and put customed FASTA files there.\n- `pssm_raw` folder stores the PSSM files. The code can automatically generate them, or you can manually create this folder and put customed PSSM files there.\n- `pssm` folder stores consistent PSSM files, whose sequences are aligned with those of PDB files. This folder and its files are created automatically.\n- `pdb_nonmatch` folder stores the inconsistent PDB files, while the related consistent PDB files are in the `pdb` folder. This folder and its files are created automatically.\n\n### File names\nThe code assumes you follow the naming rules for different file types:\n- PDB files:   caseID_*.chainID.pdb\n- FASTA files: caseID.chainID.fasta\n- PSSM files:  caseID.chainID.pssm, caseID_*.chainID.pdb.pssm\n\n\n## Examples\n\n### Get consistent PSSM and PDB files for a specific protein-protein complex\n\nHere is an example for complex `7CEI`:\n\nThe file structure and input files should look like:\n```\n7CEI\n\u2514\u2500\u2500 pdb\n    \u251c\u2500\u2500 7CEI_1w.pdb\n    \u251c\u2500\u2500 7CEI_2w.pdb\n    \u2514\u2500\u2500 7CEI_3w.pdb\n```\n\n\n```python\nfrom pssmgen import PSSM\n\n# initiate the PSSM object\ngen = PSSM(work_dir='7CEI')\n\n# set psiblast executable, database and other psiblast parameters (here shows the defaults)\ngen.configure(blast_exe='/home/software/blast/bin/psiblast',\n            database='/data/DBs/blast_dbs/nr_v20180204/nr',\n            num_threads = 4, evalue=0.0001, comp_based_stats='T',\n            max_target_seqs=2000, num_iterations=3, outfmt=7,\n            save_each_pssm=True, save_pssm_after_last_round=True)\n\n# generates FASTA files\ngen.get_fasta(pdb_dir='pdb', chain=['A','B'], out_dir='fasta')\n\n# generates PSSM\ngen.get_pssm(fasta_dir='fasta', out_dir='pssm_raw', run=True)\n\n# map PSSM and PDB to get consisitent files\ngen.map_pssm(pssm_dir='pssm_raw', pdb_dir='pdb', out_dir='pssm', chain=['A','B'])\n\n# write consistent files and move\ngen.get_mapped_pdb(pdbpssm_dir='pssm', pdb_dir='pdb', pdbnonmatch_dir='pdb_nonmatch')\n```\n\nThe code will automatically create `fasta`, `pssm_raw`, `pssm` and `pdb_nonmatch` folders and related files.\n\n### Using customed FASTA files\n\nYou can use customed FASTA files intead of extracting them from PDB file.\n\nThe file structure and input files should look like\n```\n7CEI\n\u2514\u2500\u2500 fasta\n    \u251c\u2500\u2500 7CEI.A.fasta\n    \u2514\u2500\u2500 7CEI.B.fasta\n```\n\n\n```python\nfrom pssmgen import PSSM\n\n# initiate the PSSM object\ngen = PSSM('7CEI')\n\n# set psiblast executable, database\ngen.configure(blast_exe='/home/software/blast/bin/psiblast',\n            database='/data/DBs/blast_dbs/nr_v20180204/nr')\n\n# generates PSSM\ngen.get_pssm()\n```\n\n### Using customed PSSM files\n\nYou can also use avaliable PSSM files intead of calculating them again.\n\nThe file structure and input files should look like\n```\n7CEI\n\u251c\u2500\u2500 pdb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 7CEI_1w.pdb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 7CEI_2w.pdb\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 7CEI_3w.pdb\n\u2514\u2500\u2500 pssm_raw\n    \u251c\u2500\u2500 7CEI.A.pssm\n    \u2514\u2500\u2500 7CEI.B.pssm\n```\n\n```python\nfrom pssmgen import PSSM\n\n# initiate the PSSM object\ngen = PSSM('7CEI')\n\n# map PSSM and PDB to get consisitent files\ngen.map_pssm()\n\n# write consistent files and move\ngen.get_mapped_pdb()\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DeepRank/PSSMGen", "keywords": "pssmgen", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "PSSMGen", "package_url": "https://pypi.org/project/PSSMGen/", "platform": "", "project_url": "https://pypi.org/project/PSSMGen/", "project_urls": {"Homepage": "https://github.com/DeepRank/PSSMGen"}, "release_url": "https://pypi.org/project/PSSMGen/0.1.1/", "requires_dist": ["numpy (>=1.13)", "scipy", "biopython", "pdb2sql", "nose ; extra == 'test'", "coverage ; extra == 'test'", "pytest ; extra == 'test'", "pytest-cov ; extra == 'test'", "codacy-coverage ; extra == 'test'", "coveralls ; extra == 'test'"], "requires_python": "", "summary": "Generates consistent PSSM and/or PDB files for protein-protein complexes", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PSSMGen</h1>\n<p><a href=\"https://doi.org/10.5281/zenodo.3635712\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/23f068f41625677f2a991580933478aaf2734729/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e333633353731322e737667\"></a></p>\n<p>Generates consistent PSSM and/or PDB files for protein-protein complexes</p>\n<h2>Install</h2>\n<ol>\n<li>Make sure BLAST is installed and its database is available on your machine. Otherwise, install BLAST and download its databases by following the <a href=\"https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&amp;PAGE_TYPE=BlastDocs&amp;DOC_TYPE=Download\" rel=\"nofollow\">BLAST guide</a>.</li>\n<li>Install the PSSMgen by <code>pip install PSSMGen</code>.</li>\n</ol>\n<h2>Requirements for file structures and names</h2>\n<p><code>PSSMGen</code> is geared toward computing the pssm files for all models of a particular protein-protein complex.</p>\n<h3>File structures</h3>\n<p>This tool assumes your files have following structure:</p>\n<pre><code> workdir\n |_ pdb\n |_ fasta\n |_ pssm_raw\n |_ pssm\n |_ pdb_nonmatch\n</code></pre>\n<ul>\n<li><code>workdir</code> is your working directory for one specific protein-protein complex.</li>\n<li><code>pdb</code> folder must contain the PDB files.</li>\n<li><code>fasta</code> folder contains the protein sequence <a href=\"https://en.wikipedia.org/wiki/FASTA_format\" rel=\"nofollow\">FASTA</a> files. The code can generate the FASTA files by extracting sequences from the <code>pdb</code> file , or you can manually create this folder and put customed FASTA files there.</li>\n<li><code>pssm_raw</code> folder stores the PSSM files. The code can automatically generate them, or you can manually create this folder and put customed PSSM files there.</li>\n<li><code>pssm</code> folder stores consistent PSSM files, whose sequences are aligned with those of PDB files. This folder and its files are created automatically.</li>\n<li><code>pdb_nonmatch</code> folder stores the inconsistent PDB files, while the related consistent PDB files are in the <code>pdb</code> folder. This folder and its files are created automatically.</li>\n</ul>\n<h3>File names</h3>\n<p>The code assumes you follow the naming rules for different file types:</p>\n<ul>\n<li>PDB files:   caseID_*.chainID.pdb</li>\n<li>FASTA files: caseID.chainID.fasta</li>\n<li>PSSM files:  caseID.chainID.pssm, caseID_*.chainID.pdb.pssm</li>\n</ul>\n<h2>Examples</h2>\n<h3>Get consistent PSSM and PDB files for a specific protein-protein complex</h3>\n<p>Here is an example for complex <code>7CEI</code>:</p>\n<p>The file structure and input files should look like:</p>\n<pre><code>7CEI\n\u2514\u2500\u2500 pdb\n    \u251c\u2500\u2500 7CEI_1w.pdb\n    \u251c\u2500\u2500 7CEI_2w.pdb\n    \u2514\u2500\u2500 7CEI_3w.pdb\n</code></pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pssmgen</span> <span class=\"kn\">import</span> <span class=\"n\">PSSM</span>\n\n<span class=\"c1\"># initiate the PSSM object</span>\n<span class=\"n\">gen</span> <span class=\"o\">=</span> <span class=\"n\">PSSM</span><span class=\"p\">(</span><span class=\"n\">work_dir</span><span class=\"o\">=</span><span class=\"s1\">'7CEI'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set psiblast executable, database and other psiblast parameters (here shows the defaults)</span>\n<span class=\"n\">gen</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">blast_exe</span><span class=\"o\">=</span><span class=\"s1\">'/home/software/blast/bin/psiblast'</span><span class=\"p\">,</span>\n            <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s1\">'/data/DBs/blast_dbs/nr_v20180204/nr'</span><span class=\"p\">,</span>\n            <span class=\"n\">num_threads</span> <span class=\"o\">=</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">evalue</span><span class=\"o\">=</span><span class=\"mf\">0.0001</span><span class=\"p\">,</span> <span class=\"n\">comp_based_stats</span><span class=\"o\">=</span><span class=\"s1\">'T'</span><span class=\"p\">,</span>\n            <span class=\"n\">max_target_seqs</span><span class=\"o\">=</span><span class=\"mi\">2000</span><span class=\"p\">,</span> <span class=\"n\">num_iterations</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">outfmt</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">,</span>\n            <span class=\"n\">save_each_pssm</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">save_pssm_after_last_round</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># generates FASTA files</span>\n<span class=\"n\">gen</span><span class=\"o\">.</span><span class=\"n\">get_fasta</span><span class=\"p\">(</span><span class=\"n\">pdb_dir</span><span class=\"o\">=</span><span class=\"s1\">'pdb'</span><span class=\"p\">,</span> <span class=\"n\">chain</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'A'</span><span class=\"p\">,</span><span class=\"s1\">'B'</span><span class=\"p\">],</span> <span class=\"n\">out_dir</span><span class=\"o\">=</span><span class=\"s1\">'fasta'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># generates PSSM</span>\n<span class=\"n\">gen</span><span class=\"o\">.</span><span class=\"n\">get_pssm</span><span class=\"p\">(</span><span class=\"n\">fasta_dir</span><span class=\"o\">=</span><span class=\"s1\">'fasta'</span><span class=\"p\">,</span> <span class=\"n\">out_dir</span><span class=\"o\">=</span><span class=\"s1\">'pssm_raw'</span><span class=\"p\">,</span> <span class=\"n\">run</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># map PSSM and PDB to get consisitent files</span>\n<span class=\"n\">gen</span><span class=\"o\">.</span><span class=\"n\">map_pssm</span><span class=\"p\">(</span><span class=\"n\">pssm_dir</span><span class=\"o\">=</span><span class=\"s1\">'pssm_raw'</span><span class=\"p\">,</span> <span class=\"n\">pdb_dir</span><span class=\"o\">=</span><span class=\"s1\">'pdb'</span><span class=\"p\">,</span> <span class=\"n\">out_dir</span><span class=\"o\">=</span><span class=\"s1\">'pssm'</span><span class=\"p\">,</span> <span class=\"n\">chain</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'A'</span><span class=\"p\">,</span><span class=\"s1\">'B'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># write consistent files and move</span>\n<span class=\"n\">gen</span><span class=\"o\">.</span><span class=\"n\">get_mapped_pdb</span><span class=\"p\">(</span><span class=\"n\">pdbpssm_dir</span><span class=\"o\">=</span><span class=\"s1\">'pssm'</span><span class=\"p\">,</span> <span class=\"n\">pdb_dir</span><span class=\"o\">=</span><span class=\"s1\">'pdb'</span><span class=\"p\">,</span> <span class=\"n\">pdbnonmatch_dir</span><span class=\"o\">=</span><span class=\"s1\">'pdb_nonmatch'</span><span class=\"p\">)</span>\n</pre>\n<p>The code will automatically create <code>fasta</code>, <code>pssm_raw</code>, <code>pssm</code> and <code>pdb_nonmatch</code> folders and related files.</p>\n<h3>Using customed FASTA files</h3>\n<p>You can use customed FASTA files intead of extracting them from PDB file.</p>\n<p>The file structure and input files should look like</p>\n<pre><code>7CEI\n\u2514\u2500\u2500 fasta\n    \u251c\u2500\u2500 7CEI.A.fasta\n    \u2514\u2500\u2500 7CEI.B.fasta\n</code></pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pssmgen</span> <span class=\"kn\">import</span> <span class=\"n\">PSSM</span>\n\n<span class=\"c1\"># initiate the PSSM object</span>\n<span class=\"n\">gen</span> <span class=\"o\">=</span> <span class=\"n\">PSSM</span><span class=\"p\">(</span><span class=\"s1\">'7CEI'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set psiblast executable, database</span>\n<span class=\"n\">gen</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">blast_exe</span><span class=\"o\">=</span><span class=\"s1\">'/home/software/blast/bin/psiblast'</span><span class=\"p\">,</span>\n            <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s1\">'/data/DBs/blast_dbs/nr_v20180204/nr'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># generates PSSM</span>\n<span class=\"n\">gen</span><span class=\"o\">.</span><span class=\"n\">get_pssm</span><span class=\"p\">()</span>\n</pre>\n<h3>Using customed PSSM files</h3>\n<p>You can also use avaliable PSSM files intead of calculating them again.</p>\n<p>The file structure and input files should look like</p>\n<pre><code>7CEI\n\u251c\u2500\u2500 pdb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 7CEI_1w.pdb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 7CEI_2w.pdb\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 7CEI_3w.pdb\n\u2514\u2500\u2500 pssm_raw\n    \u251c\u2500\u2500 7CEI.A.pssm\n    \u2514\u2500\u2500 7CEI.B.pssm\n</code></pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pssmgen</span> <span class=\"kn\">import</span> <span class=\"n\">PSSM</span>\n\n<span class=\"c1\"># initiate the PSSM object</span>\n<span class=\"n\">gen</span> <span class=\"o\">=</span> <span class=\"n\">PSSM</span><span class=\"p\">(</span><span class=\"s1\">'7CEI'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># map PSSM and PDB to get consisitent files</span>\n<span class=\"n\">gen</span><span class=\"o\">.</span><span class=\"n\">map_pssm</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># write consistent files and move</span>\n<span class=\"n\">gen</span><span class=\"o\">.</span><span class=\"n\">get_mapped_pdb</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6588151, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "7e959fc7e73521c920dde42d6a8a5d51", "sha256": "ca23c42d328a3a0868b9f06bdbf7b9efffee2ddfd3839742d6238284cb327d59"}, "downloads": -1, "filename": "PSSMGen-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7e959fc7e73521c920dde42d6a8a5d51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12834, "upload_time": "2020-02-04T13:08:15", "upload_time_iso_8601": "2020-02-04T13:08:15.924547Z", "url": "https://files.pythonhosted.org/packages/11/93/f2afb386c701a07b5779008e9a015e93013bd3507811eff9be454d6336e8/PSSMGen-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f4af6e49d765e77314eb17562abc115", "sha256": "0feb37016037f14cc8da002c15beb1f05e48d21aecc51f1c8b2227e2e891cf84"}, "downloads": -1, "filename": "PSSMGen-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5f4af6e49d765e77314eb17562abc115", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8841, "upload_time": "2020-02-04T13:08:18", "upload_time_iso_8601": "2020-02-04T13:08:18.012344Z", "url": "https://files.pythonhosted.org/packages/c8/b4/e46b88ff0a78c1587e6c4bd628696a869635796918ae09784aae894cc6ac/PSSMGen-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "a3188573ee5e1756c775164df4225fdc", "sha256": "027df277734abfc5543c2140fc505e6a3bfb9c039cf464ad13b23b8b326d8e2b"}, "downloads": -1, "filename": "PSSMGen-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a3188573ee5e1756c775164df4225fdc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12868, "upload_time": "2020-02-07T12:14:03", "upload_time_iso_8601": "2020-02-07T12:14:03.450973Z", "url": "https://files.pythonhosted.org/packages/74/64/b533e2608ab6e8bdd98b2c590f14bc4913ea5e1eaf97826d839dc74eae20/PSSMGen-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0fcba8e70ce055be1b46185ae296955", "sha256": "fdb4c0c15964de09ee2c036c070179681727e0e5f597b0a61cd5f35e505f549b"}, "downloads": -1, "filename": "PSSMGen-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a0fcba8e70ce055be1b46185ae296955", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9133, "upload_time": "2020-02-07T12:14:04", "upload_time_iso_8601": "2020-02-07T12:14:04.830561Z", "url": "https://files.pythonhosted.org/packages/4e/19/a85089fe99f8698c3e04fed91f92a1dabbbad6fd0c3f43d070fc52064ce6/PSSMGen-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "131784248597859e138052fb79c18f7d", "sha256": "b777f3835c17b061923e61192fdd553f65b2452bfa46eeaac8272d96a9079917"}, "downloads": -1, "filename": "PSSMGen-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "131784248597859e138052fb79c18f7d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14360, "upload_time": "2020-02-07T12:21:11", "upload_time_iso_8601": "2020-02-07T12:21:11.158249Z", "url": "https://files.pythonhosted.org/packages/af/87/f6af9a54d02fb3673126571711aa72436e2fc0335a3e9a22af31c985244a/PSSMGen-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b06f47d9896813a9b8cdd36af3c9ddcc", "sha256": "d6326baa2d87fa5f1bc42ee3737b1c4ee43f657d9c3bf42523b222a5238c3bf7"}, "downloads": -1, "filename": "PSSMGen-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b06f47d9896813a9b8cdd36af3c9ddcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9628, "upload_time": "2020-02-07T12:21:12", "upload_time_iso_8601": "2020-02-07T12:21:12.663268Z", "url": "https://files.pythonhosted.org/packages/ed/fe/ec8ae5acb88ac5632b6c7036e6d3a395ffec0dd35f1907f057b4ca6244ca/PSSMGen-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "131784248597859e138052fb79c18f7d", "sha256": "b777f3835c17b061923e61192fdd553f65b2452bfa46eeaac8272d96a9079917"}, "downloads": -1, "filename": "PSSMGen-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "131784248597859e138052fb79c18f7d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14360, "upload_time": "2020-02-07T12:21:11", "upload_time_iso_8601": "2020-02-07T12:21:11.158249Z", "url": "https://files.pythonhosted.org/packages/af/87/f6af9a54d02fb3673126571711aa72436e2fc0335a3e9a22af31c985244a/PSSMGen-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b06f47d9896813a9b8cdd36af3c9ddcc", "sha256": "d6326baa2d87fa5f1bc42ee3737b1c4ee43f657d9c3bf42523b222a5238c3bf7"}, "downloads": -1, "filename": "PSSMGen-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b06f47d9896813a9b8cdd36af3c9ddcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9628, "upload_time": "2020-02-07T12:21:12", "upload_time_iso_8601": "2020-02-07T12:21:12.663268Z", "url": "https://files.pythonhosted.org/packages/ed/fe/ec8ae5acb88ac5632b6c7036e6d3a395ffec0dd35f1907f057b4ca6244ca/PSSMGen-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:45 2020"}