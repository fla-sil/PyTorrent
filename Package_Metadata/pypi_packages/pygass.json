{"info": {"author": "Oliver Marks", "author_email": "oly@digitaloctave.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "#+TITLE: Python google analytics library\n\n* Introduction\nThis library is a simple server side implementation of google analytics it is based on the documentation here.\nhttps://developers.google.com/analytics/devguides/collection/protocol/v1/devguide\n\nIt uses the requests library to send requests directly to google with out any javascript which may be blocked client side.\n\n* Installation\n#+BEGIN_SRC shell :results silent\npip install pygass\n#+END_SRC\n\nThe code is also available at this location for bug fixes or to pull from master.\nhttps://gitlab.com/python-open-source-library-collection/pygass\n\n* Development\nWhen testing its usefull to use the analytics hit builder to check the correct format.\nhttps://ga-dev-tools.appspot.com/hit-builder/\n* Examples\n** Simple Page tracking event\n\nThe below example sends a page view event to google, you will need to provide an anonymous client id and the page url as a minimum.\n\n#+NAME: Page tracking example\n#+BEGIN_SRC python :results output code :exports code\n  import random\n  import pprint\n  import constants as st\n  import pygass as an\n\n  # set your analytics code\n  st.ANALYTICS_CODE = \"UA-10000000-1\"\n\n  # use the test api for json responses\n  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"\n\n  # show the response\n  pprint.pprint(\n      an.track_pageview(client_id=123, page=\"/test/client/pageview\"), width=1\n  )\n#+END_SRC\n\n#+RESULTS: Page tracking example\n#+BEGIN_SRC python\n{'hitParsingResult': [{'hit': '/debug/collect?v=1&tid=UA-10000000-1&cid=123&t=pageview&dp=%2Ftest%2Fclient%2Fpageview',\n                       'parserMessage': [],\n                       'valid': True}],\n 'parserMessage': [{'description': 'Found '\n                                   '1 '\n                                   'hit '\n                                   'in '\n                                   'the '\n                                   'request.',\n                    'messageType': 'INFO'}]}\n#+END_SRC\n\n\nThe below example demonstrates how to track a transaction with analytics, you will need to send an anonymous client id with the requests.\n\n** Simple transaction tracking event\n\n#+NAME: Transaction tracking example\n#+BEGIN_SRC python :results output code :exports code\n  import random\n  import pprint\n  import constants as st\n  import pygass as an\n\n  # set your analytics code\n  st.ANALYTICS_CODE = \"UA-10000000-1\"\n\n  # use the test api for json responses\n  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"\n\n  # show the response\n  transaction_id = random.randint(1, 10000000)\n  an.track_transaction(client_id=1001, transaction_id=transaction_id)\n  pprint.pprint(\n      an.track_item(\n          client_id=1001, transaction_id=transaction_id, name=\"Test Product 3\"\n      ),\n      width=1,\n  )\n#+END_SRC\n\n#+RESULTS: Transaction tracking example\n#+BEGIN_SRC python\n{'hitParsingResult': [{'hit': '/debug/collect?v=1&tid=UA-10000000-1&cid=1001&t=item&ti=4801535&in=Test+Product+3&iq=1',\n                       'parserMessage': [],\n                       'valid': True}],\n 'parserMessage': [{'description': 'Found '\n                                   '1 '\n                                   'hit '\n                                   'in '\n                                   'the '\n                                   'request.',\n                    'messageType': 'INFO'}]}\n#+END_SRC\n** Simple enhanced ecommerce impression\n#+NAME: Enhanced impression ecommerce\n#+BEGIN_SRC python :results output code :exports code\n  import random\n  import pprint\n  import pygass.constants as st\n  import pygass.enhanced_ecommerce as an\n\n  # set your analytics code\n  st.ANALYTICS_CODE = \"UA-10000000-1\"\n\n  # use the test api for json responses\n  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"\n\n  # show the response\n  transaction_id = random.randint(1, 10000000)\n  pprint.pprint(\n      an.track_enhanced_ecommerce_impression(\n          client_id=1001, product_id=1001, product_name=\"Test Product 3\", page=\"/test/client/pageview\"\n      ),\n      width=1,\n  )\n#+END_SRC\n\n#+RESULTS: Enhanced impression ecommerce\n#+begin_src python\n{'hitParsingResult': [{'hit': '/debug/collect?il1pi1id=1001&il1pi1nm=Test+Product+3&v=1&tid=UA-10000000-1&cid=1001&t=pageview&dp=%2Ftest%2Fclient%2Fpageview',\n                       'parserMessage': [],\n                       'valid': True}],\n 'parserMessage': [{'description': 'Found '\n                                   '1 '\n                                   'hit '\n                                   'in '\n                                   'the '\n                                   'request.',\n                    'messageType': 'INFO'}]}\n#+end_src\n** Simple enhanced ecommerce action\n#+NAME: Enhanced action ecommerce\n#+BEGIN_SRC python :results output code :exports code\n  import random\n  import pprint\n  import pygass.constants as st\n  import pygass.enhanced_ecommerce as an\n\n  # set your analytics code\n  st.ANALYTICS_CODE = \"UA-10000000-1\"\n\n  # use the test api for json responses\n  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"\n\n  # show the response\n  pprint.pprint(\n      an.track_enhanced_ecommerce_action(\n          client_id=1001,\n          category=\"cat01\",\n          action=\"view\",\n          product_id=1337,\n          product_name=\"Test Product 3\",\n          product_action=\"detail\",\n          product_category= \"Product Test Category\",\n          page=\"/test/page\"),\n      width=1,\n  )\n#+END_SRC\n\n#+RESULTS: Enhanced action ecommerce\n#+begin_src python\n{'hitParsingResult': [{'hit': '/debug/collect?pa=detail&pr1id=1337&pr1nm=Test+Product+3&pr1ca=Product+Test+Category&v=1&tid=UA-10000000-1&cid=1001&t=pageview&dp=%2Ftest%2Fpage',\n                       'parserMessage': [],\n                       'valid': True}],\n 'parserMessage': [{'description': 'Found '\n                                   '1 '\n                                   'hit '\n                                   'in '\n                                   'the '\n                                   'request.',\n                    'messageType': 'INFO'}]}\n#+end_src\n\n** Simple enhanced ecommerce view product\n#+NAME: Enhanced ecommerce view product\n#+BEGIN_SRC python :results output code :exports code\n  import pprint\n  import pygass.constants as st\n  import pygass.enhanced_ecommerce as an\n  # set your analytics code\n  st.ANALYTICS_CODE = \"UA-10000000-1\"\n  # use the test api for json responses\n  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"\n\n  # show the response\n  pprint.pprint(\n      an.track_enhanced_ecommerce_impression(\n          client_id=1001,\n          category=\"cat01\",\n          action=\"click\",\n          product_action=\"add\",\n          product_id=1001,\n          product_name=\"Test Product 3\",\n          product_category=\"Product Test Category\",\n          page=\"/test/page\"),\n      width=1,\n  )\n#+END_SRC\nv=1&t=pageview&tid=UA-10000000-1&cid=555&dh=mydemo.com&dp=%2Fhome&dt=homepage\n\n&il1nm=Search%20Results&il1pi1id=P12345&il1pi1nm=Android%20Warhol%20T-Shirt&il1pi1ca=Apparel%2FT-Shirts&il1pi1br=Google&il1pi1va=Black&il1pi1ps=1&il1pi1cd1=Member&il2nm=Recommended%20Products&il2pi1nm=Yellow%20T-Shirt&il2pi2nm=Red%20T-Shirt\n#+RESULTS: Enhanced ecommerce view product\n#+begin_src python\n{'hitParsingResult': [{'hit': '/debug/collect?il1pi1id=1001&il1pi1nm=Test+Product+3&il1pi1ca=Product+Test+Category&v=1&tid=UA-10000000-1&cid=1001&t=pageview&dp=%2Ftest%2Fpage',\n                       'parserMessage': [],\n                       'valid': True}],\n 'parserMessage': [{'description': 'Found '\n                                   '1 '\n                                   'hit '\n                                   'in '\n                                   'the '\n                                   'request.',\n                    'messageType': 'INFO'}]}\n#+end_src\n\n** Simple enhanced ecommerce product add to basket\n#+NAME: Enhanced ecommerce product add to basket\n#+BEGIN_SRC python :results output code :exports code\n  import pprint\n  import pygass.constants as st\n  import pygass.enhanced_ecommerce as an\n  # set your analytics code\n  st.ANALYTICS_CODE = \"UA-10000000-1\"\n\n  # use the test api for json responses\n  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"\n\n  # show the response\n  pprint.pprint(\n      an.track_enhanced_ecommerce_add_to_basket(\n          client_id=1001,\n          category=\"cat01\",\n          action=\"click\",\n          transaction_id=20,\n          product_id=1001,\n          product_name=\"Test Product 3\",\n          product_category=\"Product Test Category\",\n          page=\"/test/page\"),\n      width=1,\n  )\n#+END_SRC\n\n#+RESULTS: Enhanced ecommerce product add to basket\n#+begin_src python\n{'hitParsingResult': [{'hit': '/debug/collect?pa=add&pr1id=1001&pr1nm=Test+Product+3&pr1ca=Product+Test+Category&v=1&tid=UA-10000000-1&cid=1001&t=pageview&dp=%2Ftest%2Fpage&ti=20',\n                       'parserMessage': [],\n                       'valid': True}],\n 'parserMessage': [{'description': 'Found '\n                                   '1 '\n                                   'hit '\n                                   'in '\n                                   'the '\n                                   'request.',\n                    'messageType': 'INFO'}]}\n#+end_src\n\n** Simple enhanced ecommerce product purchase checkout\n#+NAME: Enhanced ecommerce product checkout\n#+BEGIN_SRC python :results output code :exports code\n  import pprint\n  import pygass.constants as st\n  import pygass.enhanced_ecommerce as an\n  # set your analytics code\n  st.ANALYTICS_CODE = \"UA-10000000-1\"\n\n  # use the test api for json responses\n  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"\n\n  # show the response\n  pprint.pprint(\n      an.track_enhanced_ecommerce_checkout(\n          client_id=1001,\n          category=\"cat01\",\n          action=\"click\",\n          transaction_id=20,\n          product_id=1001,\n          product_name=\"Test Product 3\",\n          product_category=\"Product Test Category\",\n          product_action=\"purchase\",\n          page=\"/test/page\"),\n      width=1,\n  )\n#+END_SRC\n\n#+RESULTS: Enhanced ecommerce product checkout\n#+begin_src python\n{'hitParsingResult': [{'hit': '/debug/collect?pa=add&pr1id=1001&pr1nm=Test+Product+3&pr1ca=Product+Test+Category&v=1&tid=UA-10000000-1&cid=1001&t=pageview&dp=%2Ftest%2Fpage&ti=20',\n                       'parserMessage': [],\n                       'valid': True}],\n 'parserMessage': [{'description': 'Found '\n                                   '1 '\n                                   'hit '\n                                   'in '\n                                   'the '\n                                   'request.',\n                    'messageType': 'INFO'}]}\n#+end_src\n\n#+NAME: Enhanced ecommerce product add cart\n#+BEGIN_SRC python :results output code :exports code\n  import pprint\n  import pygass.constants as st\n  import pygass.enhanced_ecommerce as an\n  # set your analytics code\n  st.ANALYTICS_CODE = \"UA-10000000-1\"\n\n  # use the test api for json responses\n  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"\n\n  # show the response\n  pprint.pprint(\n      an.track_enhanced_ecommerce_add_to_cart(\n          client_id=1001,\n          category=\"cat01\",\n          action=\"click\",\n          transaction_id=21,\n          product_id=1001,\n          product_name=\"Test Product 3\",\n          product_category=\"Product Test Category\",\n          product_action=\"add\",\n          page=\"/test/page\"),\n      width=1,\n  )\n#+END_SRC\n\n#+RESULTS: Enhanced ecommerce product add cart\n#+begin_src python\n{'hitParsingResult': [{'hit': '/debug/collect?pa=add&pr1id=1001&pr1nm=Test+Product+3&pr1ca=Product+Test+Category&v=1&tid=UA-10000000-1&cid=1001&t=pageview&dp=%2Ftest%2Fpage&ti=21',\n                       'parserMessage': [],\n                       'valid': True}],\n 'parserMessage': [{'description': 'Found '\n                                   '1 '\n                                   'hit '\n                                   'in '\n                                   'the '\n                                   'request.',\n                    'messageType': 'INFO'}]}\n#+end_src\n\n** Simple enhanced ecommerce product purchase transaction\n#+NAME: Enhanced ecommerce product purchase\n#+BEGIN_SRC python :results output code :exports code\n  import pprint\n  import pygass.constants as st\n  import pygass.enhanced_ecommerce as an\n  # set your analytics code\n  st.ANALYTICS_CODE = \"UA-10000000-1\"\n\n  # use the test api for json responses\n  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"\n\n  # show the response\n  pprint.pprint(\n      an.track_enhanced_ecommerce_purchase(\n          client_id=1001,\n          category=\"cat01\",\n          action=\"click\",\n          transaction_id=20,\n          product_id=1001,\n          product_name=\"Test Product 3\",\n          product_category=\"Product Test Category\",\n          product_action=\"purchase\",\n          affiliation= \"Test Merchant\",\n          revenue= \"0.0\",\n          page=\"/test/page\"),\n      width=1,\n  )\n#+END_SRC\n\n#+RESULTS: Enhanced ecommerce product purchase\n#+begin_src python\n{'hitParsingResult': [{'hit': '/debug/collect?pa=purchase&pr1id=1001&pr1nm=Test+Product+3&pr1ca=Product+Test+Category&v=1&tid=UA-10000000-1&cid=1001&t=pageview&dp=%2Ftest%2Fpage&ti=20&ta=Test+Merchant&tr=0.0',\n                       'parserMessage': [],\n                       'valid': True}],\n 'parserMessage': [{'description': 'Found '\n                                   '1 '\n                                   'hit '\n                                   'in '\n                                   'the '\n                                   'request.',\n                    'messageType': 'INFO'}]}\n#+end_src\n\n#+RESULTS:\n: None\n\n#+RESULTS: Enhanced ecommerce add to cart example\n#+begin_src python\n{'hitParsingResult': [{'hit': '/debug/collect?pa=add&pr1id=1001&pr1nm=Test+Product+3&v=1&tid=UA-10000000-1&cid=1001&t=event&ec=cat01&ea=click',\n                       'parserMessage': [],\n                       'valid': True}],\n 'parserMessage': [{'description': 'Found '\n                                   '1 '\n                                   'hit '\n                                   'in '\n                                   'the '\n                                   'request.',\n                    'messageType': 'INFO'}]}\n#+end_src", "description_content_type": "text/plain", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/python-open-source-library-collection/pygass", "keywords": "google analytics server side", "license": "GPL-3", "maintainer": "", "maintainer_email": "", "name": "pygass", "package_url": "https://pypi.org/project/pygass/", "platform": "", "project_url": "https://pypi.org/project/pygass/", "project_urls": {"Homepage": "https://gitlab.com/python-open-source-library-collection/pygass"}, "release_url": "https://pypi.org/project/pygass/0.3.20/", "requires_dist": null, "requires_python": "", "summary": "Server side implementation of Google Analytics in Python.", "version": "0.3.20", "yanked": false, "html_description": "<div class=\"project-description\">\n            #+TITLE: Python google analytics library<br><br>* Introduction<br>This library is a simple server side implementation of google analytics it is based on the documentation here.<br>https://developers.google.com/analytics/devguides/collection/protocol/v1/devguide<br><br>It uses the requests library to send requests directly to google with out any javascript which may be blocked client side.<br><br>* Installation<br>#+BEGIN_SRC shell :results silent<br>pip install pygass<br>#+END_SRC<br><br>The code is also available at this location for bug fixes or to pull from master.<br>https://gitlab.com/python-open-source-library-collection/pygass<br><br>* Development<br>When testing its usefull to use the analytics hit builder to check the correct format.<br>https://ga-dev-tools.appspot.com/hit-builder/<br>* Examples<br>** Simple Page tracking event<br><br>The below example sends a page view event to google, you will need to provide an anonymous client id and the page url as a minimum.<br><br>#+NAME: Page tracking example<br>#+BEGIN_SRC python :results output code :exports code<br>  import random<br>  import pprint<br>  import constants as st<br>  import pygass as an<br><br>  # set your analytics code<br>  st.ANALYTICS_CODE = \"UA-10000000-1\"<br><br>  # use the test api for json responses<br>  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"<br><br>  # show the response<br>  pprint.pprint(<br>      an.track_pageview(client_id=123, page=\"/test/client/pageview\"), width=1<br>  )<br>#+END_SRC<br><br>#+RESULTS: Page tracking example<br>#+BEGIN_SRC python<br>{'hitParsingResult': [{'hit': '/debug/collect?v=1&amp;tid=UA-10000000-1&amp;cid=123&amp;t=pageview&amp;dp=%2Ftest%2Fclient%2Fpageview',<br>                       'parserMessage': [],<br>                       'valid': True}],<br> 'parserMessage': [{'description': 'Found '<br>                                   '1 '<br>                                   'hit '<br>                                   'in '<br>                                   'the '<br>                                   'request.',<br>                    'messageType': 'INFO'}]}<br>#+END_SRC<br><br><br>The below example demonstrates how to track a transaction with analytics, you will need to send an anonymous client id with the requests.<br><br>** Simple transaction tracking event<br><br>#+NAME: Transaction tracking example<br>#+BEGIN_SRC python :results output code :exports code<br>  import random<br>  import pprint<br>  import constants as st<br>  import pygass as an<br><br>  # set your analytics code<br>  st.ANALYTICS_CODE = \"UA-10000000-1\"<br><br>  # use the test api for json responses<br>  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"<br><br>  # show the response<br>  transaction_id = random.randint(1, 10000000)<br>  an.track_transaction(client_id=1001, transaction_id=transaction_id)<br>  pprint.pprint(<br>      an.track_item(<br>          client_id=1001, transaction_id=transaction_id, name=\"Test Product 3\"<br>      ),<br>      width=1,<br>  )<br>#+END_SRC<br><br>#+RESULTS: Transaction tracking example<br>#+BEGIN_SRC python<br>{'hitParsingResult': [{'hit': '/debug/collect?v=1&amp;tid=UA-10000000-1&amp;cid=1001&amp;t=item&amp;ti=4801535&amp;in=Test+Product+3&amp;iq=1',<br>                       'parserMessage': [],<br>                       'valid': True}],<br> 'parserMessage': [{'description': 'Found '<br>                                   '1 '<br>                                   'hit '<br>                                   'in '<br>                                   'the '<br>                                   'request.',<br>                    'messageType': 'INFO'}]}<br>#+END_SRC<br>** Simple enhanced ecommerce impression<br>#+NAME: Enhanced impression ecommerce<br>#+BEGIN_SRC python :results output code :exports code<br>  import random<br>  import pprint<br>  import pygass.constants as st<br>  import pygass.enhanced_ecommerce as an<br><br>  # set your analytics code<br>  st.ANALYTICS_CODE = \"UA-10000000-1\"<br><br>  # use the test api for json responses<br>  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"<br><br>  # show the response<br>  transaction_id = random.randint(1, 10000000)<br>  pprint.pprint(<br>      an.track_enhanced_ecommerce_impression(<br>          client_id=1001, product_id=1001, product_name=\"Test Product 3\", page=\"/test/client/pageview\"<br>      ),<br>      width=1,<br>  )<br>#+END_SRC<br><br>#+RESULTS: Enhanced impression ecommerce<br>#+begin_src python<br>{'hitParsingResult': [{'hit': '/debug/collect?il1pi1id=1001&amp;il1pi1nm=Test+Product+3&amp;v=1&amp;tid=UA-10000000-1&amp;cid=1001&amp;t=pageview&amp;dp=%2Ftest%2Fclient%2Fpageview',<br>                       'parserMessage': [],<br>                       'valid': True}],<br> 'parserMessage': [{'description': 'Found '<br>                                   '1 '<br>                                   'hit '<br>                                   'in '<br>                                   'the '<br>                                   'request.',<br>                    'messageType': 'INFO'}]}<br>#+end_src<br>** Simple enhanced ecommerce action<br>#+NAME: Enhanced action ecommerce<br>#+BEGIN_SRC python :results output code :exports code<br>  import random<br>  import pprint<br>  import pygass.constants as st<br>  import pygass.enhanced_ecommerce as an<br><br>  # set your analytics code<br>  st.ANALYTICS_CODE = \"UA-10000000-1\"<br><br>  # use the test api for json responses<br>  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"<br><br>  # show the response<br>  pprint.pprint(<br>      an.track_enhanced_ecommerce_action(<br>          client_id=1001,<br>          category=\"cat01\",<br>          action=\"view\",<br>          product_id=1337,<br>          product_name=\"Test Product 3\",<br>          product_action=\"detail\",<br>          product_category= \"Product Test Category\",<br>          page=\"/test/page\"),<br>      width=1,<br>  )<br>#+END_SRC<br><br>#+RESULTS: Enhanced action ecommerce<br>#+begin_src python<br>{'hitParsingResult': [{'hit': '/debug/collect?pa=detail&amp;pr1id=1337&amp;pr1nm=Test+Product+3&amp;pr1ca=Product+Test+Category&amp;v=1&amp;tid=UA-10000000-1&amp;cid=1001&amp;t=pageview&amp;dp=%2Ftest%2Fpage',<br>                       'parserMessage': [],<br>                       'valid': True}],<br> 'parserMessage': [{'description': 'Found '<br>                                   '1 '<br>                                   'hit '<br>                                   'in '<br>                                   'the '<br>                                   'request.',<br>                    'messageType': 'INFO'}]}<br>#+end_src<br><br>** Simple enhanced ecommerce view product<br>#+NAME: Enhanced ecommerce view product<br>#+BEGIN_SRC python :results output code :exports code<br>  import pprint<br>  import pygass.constants as st<br>  import pygass.enhanced_ecommerce as an<br>  # set your analytics code<br>  st.ANALYTICS_CODE = \"UA-10000000-1\"<br>  # use the test api for json responses<br>  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"<br><br>  # show the response<br>  pprint.pprint(<br>      an.track_enhanced_ecommerce_impression(<br>          client_id=1001,<br>          category=\"cat01\",<br>          action=\"click\",<br>          product_action=\"add\",<br>          product_id=1001,<br>          product_name=\"Test Product 3\",<br>          product_category=\"Product Test Category\",<br>          page=\"/test/page\"),<br>      width=1,<br>  )<br>#+END_SRC<br>v=1&amp;t=pageview&amp;tid=UA-10000000-1&amp;cid=555&amp;dh=mydemo.com&amp;dp=%2Fhome&amp;dt=homepage<br><br>&amp;il1nm=Search%20Results&amp;il1pi1id=P12345&amp;il1pi1nm=Android%20Warhol%20T-Shirt&amp;il1pi1ca=Apparel%2FT-Shirts&amp;il1pi1br=Google&amp;il1pi1va=Black&amp;il1pi1ps=1&amp;il1pi1cd1=Member&amp;il2nm=Recommended%20Products&amp;il2pi1nm=Yellow%20T-Shirt&amp;il2pi2nm=Red%20T-Shirt<br>#+RESULTS: Enhanced ecommerce view product<br>#+begin_src python<br>{'hitParsingResult': [{'hit': '/debug/collect?il1pi1id=1001&amp;il1pi1nm=Test+Product+3&amp;il1pi1ca=Product+Test+Category&amp;v=1&amp;tid=UA-10000000-1&amp;cid=1001&amp;t=pageview&amp;dp=%2Ftest%2Fpage',<br>                       'parserMessage': [],<br>                       'valid': True}],<br> 'parserMessage': [{'description': 'Found '<br>                                   '1 '<br>                                   'hit '<br>                                   'in '<br>                                   'the '<br>                                   'request.',<br>                    'messageType': 'INFO'}]}<br>#+end_src<br><br>** Simple enhanced ecommerce product add to basket<br>#+NAME: Enhanced ecommerce product add to basket<br>#+BEGIN_SRC python :results output code :exports code<br>  import pprint<br>  import pygass.constants as st<br>  import pygass.enhanced_ecommerce as an<br>  # set your analytics code<br>  st.ANALYTICS_CODE = \"UA-10000000-1\"<br><br>  # use the test api for json responses<br>  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"<br><br>  # show the response<br>  pprint.pprint(<br>      an.track_enhanced_ecommerce_add_to_basket(<br>          client_id=1001,<br>          category=\"cat01\",<br>          action=\"click\",<br>          transaction_id=20,<br>          product_id=1001,<br>          product_name=\"Test Product 3\",<br>          product_category=\"Product Test Category\",<br>          page=\"/test/page\"),<br>      width=1,<br>  )<br>#+END_SRC<br><br>#+RESULTS: Enhanced ecommerce product add to basket<br>#+begin_src python<br>{'hitParsingResult': [{'hit': '/debug/collect?pa=add&amp;pr1id=1001&amp;pr1nm=Test+Product+3&amp;pr1ca=Product+Test+Category&amp;v=1&amp;tid=UA-10000000-1&amp;cid=1001&amp;t=pageview&amp;dp=%2Ftest%2Fpage&amp;ti=20',<br>                       'parserMessage': [],<br>                       'valid': True}],<br> 'parserMessage': [{'description': 'Found '<br>                                   '1 '<br>                                   'hit '<br>                                   'in '<br>                                   'the '<br>                                   'request.',<br>                    'messageType': 'INFO'}]}<br>#+end_src<br><br>** Simple enhanced ecommerce product purchase checkout<br>#+NAME: Enhanced ecommerce product checkout<br>#+BEGIN_SRC python :results output code :exports code<br>  import pprint<br>  import pygass.constants as st<br>  import pygass.enhanced_ecommerce as an<br>  # set your analytics code<br>  st.ANALYTICS_CODE = \"UA-10000000-1\"<br><br>  # use the test api for json responses<br>  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"<br><br>  # show the response<br>  pprint.pprint(<br>      an.track_enhanced_ecommerce_checkout(<br>          client_id=1001,<br>          category=\"cat01\",<br>          action=\"click\",<br>          transaction_id=20,<br>          product_id=1001,<br>          product_name=\"Test Product 3\",<br>          product_category=\"Product Test Category\",<br>          product_action=\"purchase\",<br>          page=\"/test/page\"),<br>      width=1,<br>  )<br>#+END_SRC<br><br>#+RESULTS: Enhanced ecommerce product checkout<br>#+begin_src python<br>{'hitParsingResult': [{'hit': '/debug/collect?pa=add&amp;pr1id=1001&amp;pr1nm=Test+Product+3&amp;pr1ca=Product+Test+Category&amp;v=1&amp;tid=UA-10000000-1&amp;cid=1001&amp;t=pageview&amp;dp=%2Ftest%2Fpage&amp;ti=20',<br>                       'parserMessage': [],<br>                       'valid': True}],<br> 'parserMessage': [{'description': 'Found '<br>                                   '1 '<br>                                   'hit '<br>                                   'in '<br>                                   'the '<br>                                   'request.',<br>                    'messageType': 'INFO'}]}<br>#+end_src<br><br>#+NAME: Enhanced ecommerce product add cart<br>#+BEGIN_SRC python :results output code :exports code<br>  import pprint<br>  import pygass.constants as st<br>  import pygass.enhanced_ecommerce as an<br>  # set your analytics code<br>  st.ANALYTICS_CODE = \"UA-10000000-1\"<br><br>  # use the test api for json responses<br>  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"<br><br>  # show the response<br>  pprint.pprint(<br>      an.track_enhanced_ecommerce_add_to_cart(<br>          client_id=1001,<br>          category=\"cat01\",<br>          action=\"click\",<br>          transaction_id=21,<br>          product_id=1001,<br>          product_name=\"Test Product 3\",<br>          product_category=\"Product Test Category\",<br>          product_action=\"add\",<br>          page=\"/test/page\"),<br>      width=1,<br>  )<br>#+END_SRC<br><br>#+RESULTS: Enhanced ecommerce product add cart<br>#+begin_src python<br>{'hitParsingResult': [{'hit': '/debug/collect?pa=add&amp;pr1id=1001&amp;pr1nm=Test+Product+3&amp;pr1ca=Product+Test+Category&amp;v=1&amp;tid=UA-10000000-1&amp;cid=1001&amp;t=pageview&amp;dp=%2Ftest%2Fpage&amp;ti=21',<br>                       'parserMessage': [],<br>                       'valid': True}],<br> 'parserMessage': [{'description': 'Found '<br>                                   '1 '<br>                                   'hit '<br>                                   'in '<br>                                   'the '<br>                                   'request.',<br>                    'messageType': 'INFO'}]}<br>#+end_src<br><br>** Simple enhanced ecommerce product purchase transaction<br>#+NAME: Enhanced ecommerce product purchase<br>#+BEGIN_SRC python :results output code :exports code<br>  import pprint<br>  import pygass.constants as st<br>  import pygass.enhanced_ecommerce as an<br>  # set your analytics code<br>  st.ANALYTICS_CODE = \"UA-10000000-1\"<br><br>  # use the test api for json responses<br>  st.ANALYTICS_URL = \"https://www.google-analytics.com/debug/collect\"<br><br>  # show the response<br>  pprint.pprint(<br>      an.track_enhanced_ecommerce_purchase(<br>          client_id=1001,<br>          category=\"cat01\",<br>          action=\"click\",<br>          transaction_id=20,<br>          product_id=1001,<br>          product_name=\"Test Product 3\",<br>          product_category=\"Product Test Category\",<br>          product_action=\"purchase\",<br>          affiliation= \"Test Merchant\",<br>          revenue= \"0.0\",<br>          page=\"/test/page\"),<br>      width=1,<br>  )<br>#+END_SRC<br><br>#+RESULTS: Enhanced ecommerce product purchase<br>#+begin_src python<br>{'hitParsingResult': [{'hit': '/debug/collect?pa=purchase&amp;pr1id=1001&amp;pr1nm=Test+Product+3&amp;pr1ca=Product+Test+Category&amp;v=1&amp;tid=UA-10000000-1&amp;cid=1001&amp;t=pageview&amp;dp=%2Ftest%2Fpage&amp;ti=20&amp;ta=Test+Merchant&amp;tr=0.0',<br>                       'parserMessage': [],<br>                       'valid': True}],<br> 'parserMessage': [{'description': 'Found '<br>                                   '1 '<br>                                   'hit '<br>                                   'in '<br>                                   'the '<br>                                   'request.',<br>                    'messageType': 'INFO'}]}<br>#+end_src<br><br>#+RESULTS:<br>: None<br><br>#+RESULTS: Enhanced ecommerce add to cart example<br>#+begin_src python<br>{'hitParsingResult': [{'hit': '/debug/collect?pa=add&amp;pr1id=1001&amp;pr1nm=Test+Product+3&amp;v=1&amp;tid=UA-10000000-1&amp;cid=1001&amp;t=event&amp;ec=cat01&amp;ea=click',<br>                       'parserMessage': [],<br>                       'valid': True}],<br> 'parserMessage': [{'description': 'Found '<br>                                   '1 '<br>                                   'hit '<br>                                   'in '<br>                                   'the '<br>                                   'request.',<br>                    'messageType': 'INFO'}]}<br>#+end_src\n          </div>"}, "last_serial": 6576969, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "2a51d80561cb2f892a858418f5fcbe0e", "sha256": "231ae4d16580ee348cd9d40e016fa6f87907d94291a4e622a836ca62940fc02f"}, "downloads": -1, "filename": "pygass-0.1.2.tar.gz", "has_sig": false, "md5_digest": "2a51d80561cb2f892a858418f5fcbe0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5033, "upload_time": "2018-09-25T18:33:31", "upload_time_iso_8601": "2018-09-25T18:33:31.472382Z", "url": "https://files.pythonhosted.org/packages/58/b3/ee14dbf5275e4fb0faa71a5548fbd656c39481d4ae8e48fc1cf639d792d4/pygass-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c9a4ccec3a0bef32f7622ce801fdff02", "sha256": "dbc94fffe22444450b66f36a8cfc0c1c1703c3b6f3cd27b2573d60263342f3ce"}, "downloads": -1, "filename": "pygass-0.1.3.tar.gz", "has_sig": false, "md5_digest": "c9a4ccec3a0bef32f7622ce801fdff02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5538, "upload_time": "2018-10-08T20:16:27", "upload_time_iso_8601": "2018-10-08T20:16:27.380572Z", "url": "https://files.pythonhosted.org/packages/13/94/27e8b79379ce063709375089b08190022c5a85679353c6d43d1c11441d88/pygass-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "494786c8fcccddca26226510fc164937", "sha256": "33dbb545936f67b19db8417d614682e86d47603579ccad58be1d76428eebb300"}, "downloads": -1, "filename": "pygass-0.1.4.tar.gz", "has_sig": false, "md5_digest": "494786c8fcccddca26226510fc164937", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5523, "upload_time": "2018-10-16T19:38:43", "upload_time_iso_8601": "2018-10-16T19:38:43.127151Z", "url": "https://files.pythonhosted.org/packages/67/be/caed3221375d09f12f0c76b421115bca5866a69db816a39b68fdf66856c3/pygass-0.1.4.tar.gz", "yanked": false}], "0.2.10": [{"comment_text": "", "digests": {"md5": "4257892eaa2ce08e92bbab52d4b1d50f", "sha256": "b68dcbd418a257d2190e720ae0140ca3dc509d7c21fdafe0d24bf793caedaf7f"}, "downloads": -1, "filename": "pygass-0.2.10.tar.gz", "has_sig": false, "md5_digest": "4257892eaa2ce08e92bbab52d4b1d50f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9749, "upload_time": "2019-06-07T14:38:12", "upload_time_iso_8601": "2019-06-07T14:38:12.457185Z", "url": "https://files.pythonhosted.org/packages/e0/e2/8a66a3d18100a797489afb9757c3fd01a7741c35308351f8c35c8862d773/pygass-0.2.10.tar.gz", "yanked": false}], "0.2.20": [{"comment_text": "", "digests": {"md5": "619ebbb69a926e246ede4432900c2c27", "sha256": "3acdc85c729405ac55b94b9d0a2676f96e95ad3a08b46c04f50c33fd2cd7ede0"}, "downloads": -1, "filename": "pygass-0.2.20.tar.gz", "has_sig": false, "md5_digest": "619ebbb69a926e246ede4432900c2c27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9819, "upload_time": "2020-01-15T15:50:43", "upload_time_iso_8601": "2020-01-15T15:50:43.722939Z", "url": "https://files.pythonhosted.org/packages/38/dc/a70cfb67cb2eb09fba746134e727dee8ed671a2d2c6814b4adce905580b0/pygass-0.2.20.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "17d95e13d03272056703d994dc01ace1", "sha256": "cc601848ff0527c98b0ce8eaa8e426baebfbc82712f9ff61b5daebd7d6353795"}, "downloads": -1, "filename": "pygass-0.2.6.tar.gz", "has_sig": false, "md5_digest": "17d95e13d03272056703d994dc01ace1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10670, "upload_time": "2019-04-28T20:19:40", "upload_time_iso_8601": "2019-04-28T20:19:40.130780Z", "url": "https://files.pythonhosted.org/packages/66/b9/50fbdf720c753a6e04f692185692700e43d896d0465c3fd9965343350180/pygass-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "04353a7f1bd065e7b77da6ec00591ab3", "sha256": "75cf91a721118411a6e1be01cc318520adb992960aeb6bad14c394cd99f0d8ae"}, "downloads": -1, "filename": "pygass-0.2.7.tar.gz", "has_sig": false, "md5_digest": "04353a7f1bd065e7b77da6ec00591ab3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8332, "upload_time": "2019-05-23T14:41:40", "upload_time_iso_8601": "2019-05-23T14:41:40.271441Z", "url": "https://files.pythonhosted.org/packages/eb/4b/62dae5f772c71e9a8d531037ab3854f242464a5a3854bc39dce8ef97c770/pygass-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "b56a2e31025ce3c6cf3dfb292c029194", "sha256": "d9845b8a6f6dbdc7c0525b6a0504ca86e96cba0e392420838da1db41a0de82d7"}, "downloads": -1, "filename": "pygass-0.2.8.tar.gz", "has_sig": false, "md5_digest": "b56a2e31025ce3c6cf3dfb292c029194", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9303, "upload_time": "2019-05-23T14:56:55", "upload_time_iso_8601": "2019-05-23T14:56:55.818594Z", "url": "https://files.pythonhosted.org/packages/7e/5e/47ea98981f48357857e9e33408528888e4a930dd2d6de0e33ece3f5ad600/pygass-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "b3a71688f180ea28b2d5939cc2e4c17f", "sha256": "47ecc0ceec4db2c452795a317d1b4b399ef759876e8757419d37462746d54cbd"}, "downloads": -1, "filename": "pygass-0.2.9.tar.gz", "has_sig": false, "md5_digest": "b3a71688f180ea28b2d5939cc2e4c17f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9305, "upload_time": "2019-05-24T15:29:35", "upload_time_iso_8601": "2019-05-24T15:29:35.838276Z", "url": "https://files.pythonhosted.org/packages/65/92/78c6a66fc876f0923f763e859cc2bf0a9caaaa83fa03b3a732161fcc8dec/pygass-0.2.9.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "dc8369de63d9bcd1f1e4f75d561c4314", "sha256": "3d264b7af26acb3580de0f2a057ba046f556fe824b7a2fd7bd9ca08655990075"}, "downloads": -1, "filename": "pygass-0.3.0.tar.gz", "has_sig": false, "md5_digest": "dc8369de63d9bcd1f1e4f75d561c4314", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9931, "upload_time": "2020-01-16T10:47:07", "upload_time_iso_8601": "2020-01-16T10:47:07.039240Z", "url": "https://files.pythonhosted.org/packages/79/67/a8004e6ee64049f7a00f947f5f6ab5b59ecedb41a1a695fc77199d27599f/pygass-0.3.0.tar.gz", "yanked": false}], "0.3.10": [{"comment_text": "", "digests": {"md5": "411ee40c862376982c3493e51a8e1331", "sha256": "571d5d50969ce1178b5519804f85fdc84b66cba5b4bc12825814ab960b65ee1a"}, "downloads": -1, "filename": "pygass-0.3.10.tar.gz", "has_sig": false, "md5_digest": "411ee40c862376982c3493e51a8e1331", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9966, "upload_time": "2020-01-17T11:45:25", "upload_time_iso_8601": "2020-01-17T11:45:25.134786Z", "url": "https://files.pythonhosted.org/packages/8a/1c/9eebff344efbc97797cb4805da270eac0e77cf22757eecf74353d49d0c45/pygass-0.3.10.tar.gz", "yanked": false}], "0.3.20": [{"comment_text": "", "digests": {"md5": "eda651ac9e0106818f59ca9cb3c0b512", "sha256": "7386f29d1699f42c04f5e551b44dc6c407b43926c147d59aa714d6349d3f993d"}, "downloads": -1, "filename": "pygass-0.3.20.tar.gz", "has_sig": false, "md5_digest": "eda651ac9e0106818f59ca9cb3c0b512", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10007, "upload_time": "2020-02-05T16:42:32", "upload_time_iso_8601": "2020-02-05T16:42:32.489421Z", "url": "https://files.pythonhosted.org/packages/dd/27/d98ced293b4920a8563394beafd13024a5d2545b8abe3564b0d36ee27a1d/pygass-0.3.20.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eda651ac9e0106818f59ca9cb3c0b512", "sha256": "7386f29d1699f42c04f5e551b44dc6c407b43926c147d59aa714d6349d3f993d"}, "downloads": -1, "filename": "pygass-0.3.20.tar.gz", "has_sig": false, "md5_digest": "eda651ac9e0106818f59ca9cb3c0b512", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10007, "upload_time": "2020-02-05T16:42:32", "upload_time_iso_8601": "2020-02-05T16:42:32.489421Z", "url": "https://files.pythonhosted.org/packages/dd/27/d98ced293b4920a8563394beafd13024a5d2545b8abe3564b0d36ee27a1d/pygass-0.3.20.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:16 2020"}