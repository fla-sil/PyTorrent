{"info": {"author": "chris48s", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# geometry-to-spatialite\n\n[![Build Status](https://travis-ci.org/chris48s/geometry-to-spatialite.svg?branch=master)](https://travis-ci.org/chris48s/geometry-to-spatialite)\n[![Coverage Status](https://coveralls.io/repos/github/chris48s/geometry-to-spatialite/badge.svg?branch=master)](https://coveralls.io/github/chris48s/geometry-to-spatialite?branch=master)\n[![PyPI Version](https://img.shields.io/pypi/v/geometry-to-spatialite.svg)](https://pypi.org/project/geometry-to-spatialite/)\n![License](https://img.shields.io/pypi/l/geometry-to-spatialite.svg)\n![Python Support](https://img.shields.io/pypi/pyversions/geometry-to-spatialite.svg)\n![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)\n\n\nImport geographic and spatial data from files into a SpatiaLite DB.\n\nThis project is primarily useful for browsing and publishing geographic and spatial data with [datasette](https://github.com/simonw/datasette) and [datasette-leaflet-geojson](https://github.com/simonw/datasette-leaflet-geojson). It is inspired by [csvs-to-sqlite](https://github.com/simonw/csvs-to-sqlite) and provides a similar interface.\n\n## Setup\n\n```\npip install geometry-to-spatialite\n```\n\nYou'll need python >=3.6 and the [SpatiaLite](https://www.gaia-gis.it/fossil/libspatialite/index) module for SQLite. \n\n### Install SpatiaLite on Debian/Ubuntu\n\n```\napt install spatialite-bin libsqlite3-mod-spatialite\n```\n\n### Install SpatiaLite on Mac\n\n```\nbrew update\nbrew install spatialite-tools\n```\n\n## Usage\n\n### On the console\n\nGeometry-to-spatialite installs two commands: `shapefile-to-spatialite` and `geojson-to-spatialite`. Both provide the same arguments.\n\nBasic usage\n\n```\nshapefile-to-spatialite myfile.shp mydatabase.db\n```\n\nThis will create a new SQLite database called `mydatabase.db` containing a single table, `myfile`\n\nYou can provide multiple files:\n\n```\nshapefile-to-spatialite one.shp two.shp bundle.db\n```\n\nThe `bundle.db` database will contain two tables, `one` and `two`.\n\nThis means you can use wildcards:\n\n```\nshapefile-to-spatialite ~/Downloads/*.shp mydownloads.db\n```\n\nIf you pass a path to one or more directories, the script will recursively search those directories for files and create tables for each one:\n\n```\nshapefile-to-spatialite ~/path/to/directory all-my-shapefiles.db\n```\n\nFor more help on usage and arguments, run `shapefile-to-spatialite --help` or `geojson-to-spatialite --help`\n\n### As a library\n\n```py\nfrom shapefile_to_spatialite import (\n    geojson_to_spatialite,\n    shp_to_spatialite,\n    DataImportError\n)\n\n\n# Use the defaults\ntry:\n    geojson_to_spatialite('mydatabase.db', 'myfile.geojson')\nexcept DataImportError:\n    raise\n\n\n# With optional params\n# geojson_to_spatialite() and shp_to_spatialite() support the same argument list\ntry:\n    geojson_to_spatialite(\n        'mydatabase.db',\n        'myfile.geojson',\n        table_name='custom',  # set a custom table name (defaults to the filename)\n        srid=3857,            # specify a custom SRID (default is 4326)\n        pk='id',              # field (str) or fields (list/tuple) to use as a\n                              # primary key (default is no primary key)\n        write_mode='append',  # pass 'replace' or 'append' to overwrite\n                              # or append to an existing table\n\n        # In most cases the spatialite extension will be automatically detected and loaded\n        # If not you can manully pass a path to the .so .dylib or .dll file\n        spatialite_extension='path/to/mod_spatialite.so'\n    )\nexcept DataImportError:\n    raise\n```\n\n## Troubleshooting\n\n### Failed to load the SpatiaLite extension\n\nGeometry-to-spatialite requires [SpatiaLite](https://www.gaia-gis.it/fossil/libspatialite/index) to be installed. See [Setup](#setup). Geometry-to-spatialite will attempt to automatically load the extension. If you've installed the extension and you're still seeing this error, you can use the `--spatialite-extension` flag (using on the console) or `spatialite_extension` (using as a library) to manually specify the path to the SpatiaLite extension.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chris48s/geometry-to-spatialite", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "geometry-to-spatialite", "package_url": "https://pypi.org/project/geometry-to-spatialite/", "platform": "", "project_url": "https://pypi.org/project/geometry-to-spatialite/", "project_urls": {"Homepage": "https://github.com/chris48s/geometry-to-spatialite", "Repository": "https://github.com/chris48s/geometry-to-spatialite"}, "release_url": "https://pypi.org/project/geometry-to-spatialite/0.3.0/", "requires_dist": ["sqlite-utils (>=2.1,<3.0)", "geojson (>=2.5.0,<3.0.0)", "Shapely (>=1.6.4,<2.0.0)", "pyshp (>=2.1.0,<3.0.0)"], "requires_python": ">=3.6,<4.0", "summary": "Import geographic and spatial data from files into a SpatiaLite DB", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>geometry-to-spatialite</h1>\n<p><a href=\"https://travis-ci.org/chris48s/geometry-to-spatialite\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/23740a7d3ced889beb2ff84325abb716d6a1a7be/68747470733a2f2f7472617669732d63692e6f72672f63687269733438732f67656f6d657472792d746f2d7370617469616c6974652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/chris48s/geometry-to-spatialite?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed195c4502212dbd49a86eedbff282cde8180bc2/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f63687269733438732f67656f6d657472792d746f2d7370617469616c6974652f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/geometry-to-spatialite/\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f227b3f302cb735009854eb354f27f70933e1186/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f67656f6d657472792d746f2d7370617469616c6974652e737667\"></a>\n<img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f679d2b17a27ae248ef355c29ff4429f19db178d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f67656f6d657472792d746f2d7370617469616c6974652e737667\">\n<img alt=\"Python Support\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f1a58fe3d6276fb5b3bccef173d9eb11f1184ee/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f67656f6d657472792d746f2d7370617469616c6974652e737667\">\n<img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></p>\n<p>Import geographic and spatial data from files into a SpatiaLite DB.</p>\n<p>This project is primarily useful for browsing and publishing geographic and spatial data with <a href=\"https://github.com/simonw/datasette\" rel=\"nofollow\">datasette</a> and <a href=\"https://github.com/simonw/datasette-leaflet-geojson\" rel=\"nofollow\">datasette-leaflet-geojson</a>. It is inspired by <a href=\"https://github.com/simonw/csvs-to-sqlite\" rel=\"nofollow\">csvs-to-sqlite</a> and provides a similar interface.</p>\n<h2>Setup</h2>\n<pre><code>pip install geometry-to-spatialite\n</code></pre>\n<p>You'll need python &gt;=3.6 and the <a href=\"https://www.gaia-gis.it/fossil/libspatialite/index\" rel=\"nofollow\">SpatiaLite</a> module for SQLite.</p>\n<h3>Install SpatiaLite on Debian/Ubuntu</h3>\n<pre><code>apt install spatialite-bin libsqlite3-mod-spatialite\n</code></pre>\n<h3>Install SpatiaLite on Mac</h3>\n<pre><code>brew update\nbrew install spatialite-tools\n</code></pre>\n<h2>Usage</h2>\n<h3>On the console</h3>\n<p>Geometry-to-spatialite installs two commands: <code>shapefile-to-spatialite</code> and <code>geojson-to-spatialite</code>. Both provide the same arguments.</p>\n<p>Basic usage</p>\n<pre><code>shapefile-to-spatialite myfile.shp mydatabase.db\n</code></pre>\n<p>This will create a new SQLite database called <code>mydatabase.db</code> containing a single table, <code>myfile</code></p>\n<p>You can provide multiple files:</p>\n<pre><code>shapefile-to-spatialite one.shp two.shp bundle.db\n</code></pre>\n<p>The <code>bundle.db</code> database will contain two tables, <code>one</code> and <code>two</code>.</p>\n<p>This means you can use wildcards:</p>\n<pre><code>shapefile-to-spatialite ~/Downloads/*.shp mydownloads.db\n</code></pre>\n<p>If you pass a path to one or more directories, the script will recursively search those directories for files and create tables for each one:</p>\n<pre><code>shapefile-to-spatialite ~/path/to/directory all-my-shapefiles.db\n</code></pre>\n<p>For more help on usage and arguments, run <code>shapefile-to-spatialite --help</code> or <code>geojson-to-spatialite --help</code></p>\n<h3>As a library</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">shapefile_to_spatialite</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">geojson_to_spatialite</span><span class=\"p\">,</span>\n    <span class=\"n\">shp_to_spatialite</span><span class=\"p\">,</span>\n    <span class=\"n\">DataImportError</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Use the defaults</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">geojson_to_spatialite</span><span class=\"p\">(</span><span class=\"s1\">'mydatabase.db'</span><span class=\"p\">,</span> <span class=\"s1\">'myfile.geojson'</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">DataImportError</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span>\n\n\n<span class=\"c1\"># With optional params</span>\n<span class=\"c1\"># geojson_to_spatialite() and shp_to_spatialite() support the same argument list</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">geojson_to_spatialite</span><span class=\"p\">(</span>\n        <span class=\"s1\">'mydatabase.db'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'myfile.geojson'</span><span class=\"p\">,</span>\n        <span class=\"n\">table_name</span><span class=\"o\">=</span><span class=\"s1\">'custom'</span><span class=\"p\">,</span>  <span class=\"c1\"># set a custom table name (defaults to the filename)</span>\n        <span class=\"n\">srid</span><span class=\"o\">=</span><span class=\"mi\">3857</span><span class=\"p\">,</span>            <span class=\"c1\"># specify a custom SRID (default is 4326)</span>\n        <span class=\"n\">pk</span><span class=\"o\">=</span><span class=\"s1\">'id'</span><span class=\"p\">,</span>              <span class=\"c1\"># field (str) or fields (list/tuple) to use as a</span>\n                              <span class=\"c1\"># primary key (default is no primary key)</span>\n        <span class=\"n\">write_mode</span><span class=\"o\">=</span><span class=\"s1\">'append'</span><span class=\"p\">,</span>  <span class=\"c1\"># pass 'replace' or 'append' to overwrite</span>\n                              <span class=\"c1\"># or append to an existing table</span>\n\n        <span class=\"c1\"># In most cases the spatialite extension will be automatically detected and loaded</span>\n        <span class=\"c1\"># If not you can manully pass a path to the .so .dylib or .dll file</span>\n        <span class=\"n\">spatialite_extension</span><span class=\"o\">=</span><span class=\"s1\">'path/to/mod_spatialite.so'</span>\n    <span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">DataImportError</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span>\n</pre>\n<h2>Troubleshooting</h2>\n<h3>Failed to load the SpatiaLite extension</h3>\n<p>Geometry-to-spatialite requires <a href=\"https://www.gaia-gis.it/fossil/libspatialite/index\" rel=\"nofollow\">SpatiaLite</a> to be installed. See <a href=\"#setup\" rel=\"nofollow\">Setup</a>. Geometry-to-spatialite will attempt to automatically load the extension. If you've installed the extension and you're still seeing this error, you can use the <code>--spatialite-extension</code> flag (using on the console) or <code>spatialite_extension</code> (using as a library) to manually specify the path to the SpatiaLite extension.</p>\n\n          </div>"}, "last_serial": 6640666, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "98e3661dd7ae1791909e7488954c4f2c", "sha256": "4a03a605e2482c311dc2b96bbeef103005ae2ccf9b933f7b7ac3eaed6d25e5be"}, "downloads": -1, "filename": "geometry_to_spatialite-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "98e3661dd7ae1791909e7488954c4f2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 8887, "upload_time": "2019-10-13T08:34:22", "upload_time_iso_8601": "2019-10-13T08:34:22.696374Z", "url": "https://files.pythonhosted.org/packages/44/b7/525444441cc2cd277f040031ff9029cb4f6e9d0ceb4f938b1e621eeaf89d/geometry_to_spatialite-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e751bc312cd18709ac0bdaf9494ddff", "sha256": "2604bc728ca345d3938b9b7d2992245daff25d5b9be0e7c8506749b7a838b69c"}, "downloads": -1, "filename": "geometry-to-spatialite-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7e751bc312cd18709ac0bdaf9494ddff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 7920, "upload_time": "2019-10-13T08:34:20", "upload_time_iso_8601": "2019-10-13T08:34:20.045266Z", "url": "https://files.pythonhosted.org/packages/ce/1a/0916052b67bca60065144e8f7239195498c1eb07c14b195b34033a62f0d9/geometry-to-spatialite-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "30846632dc74bd4145fa4049f5f796b6", "sha256": "013eb2cc34504fbb026c3aea752774133d8e64546cc093a42cc90b8b147fabe8"}, "downloads": -1, "filename": "geometry_to_spatialite-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "30846632dc74bd4145fa4049f5f796b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9694, "upload_time": "2019-10-21T20:23:52", "upload_time_iso_8601": "2019-10-21T20:23:52.902777Z", "url": "https://files.pythonhosted.org/packages/68/1e/6d42fc5504c995b6647c8e8d3a0d26b9382b7d714269b05b328d7a63de84/geometry_to_spatialite-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f99e77e47855c34b1601466f3b04766f", "sha256": "7de6c73539bd4fe99140095433853c4d543bb9556e140b233cee7cc64b4b9675"}, "downloads": -1, "filename": "geometry-to-spatialite-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f99e77e47855c34b1601466f3b04766f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 8623, "upload_time": "2019-10-21T20:23:51", "upload_time_iso_8601": "2019-10-21T20:23:51.278733Z", "url": "https://files.pythonhosted.org/packages/1f/03/d2d52b52397e188089ee47728064cedaf6f3aeb0b9c721efe2d30e9509bf/geometry-to-spatialite-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "cb80ae7b7fbe9ff806341c7905ba50a5", "sha256": "486b798854dc158beffdb084b8988451a3ca723adbd9c0778db6611582817dc8"}, "downloads": -1, "filename": "geometry_to_spatialite-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cb80ae7b7fbe9ff806341c7905ba50a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9018, "upload_time": "2020-02-16T14:56:11", "upload_time_iso_8601": "2020-02-16T14:56:11.126573Z", "url": "https://files.pythonhosted.org/packages/2d/35/5403d518d8c18333c98a22b98da3773c064bd7f0b0dd9037c16181f2b997/geometry_to_spatialite-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3f2372e012ea9d3d80c5440ecd59340", "sha256": "b64f352198618aeef8c919af472e156e90a8c52e8fd612bdc5c95066c4a93fc3"}, "downloads": -1, "filename": "geometry-to-spatialite-0.3.0.tar.gz", "has_sig": false, "md5_digest": "a3f2372e012ea9d3d80c5440ecd59340", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 7998, "upload_time": "2020-02-16T14:56:09", "upload_time_iso_8601": "2020-02-16T14:56:09.888625Z", "url": "https://files.pythonhosted.org/packages/33/a2/91ca804452b551c6fcc5d296cdcf8ac801a288be766d895d88601f5e7c36/geometry-to-spatialite-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cb80ae7b7fbe9ff806341c7905ba50a5", "sha256": "486b798854dc158beffdb084b8988451a3ca723adbd9c0778db6611582817dc8"}, "downloads": -1, "filename": "geometry_to_spatialite-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cb80ae7b7fbe9ff806341c7905ba50a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9018, "upload_time": "2020-02-16T14:56:11", "upload_time_iso_8601": "2020-02-16T14:56:11.126573Z", "url": "https://files.pythonhosted.org/packages/2d/35/5403d518d8c18333c98a22b98da3773c064bd7f0b0dd9037c16181f2b997/geometry_to_spatialite-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3f2372e012ea9d3d80c5440ecd59340", "sha256": "b64f352198618aeef8c919af472e156e90a8c52e8fd612bdc5c95066c4a93fc3"}, "downloads": -1, "filename": "geometry-to-spatialite-0.3.0.tar.gz", "has_sig": false, "md5_digest": "a3f2372e012ea9d3d80c5440ecd59340", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 7998, "upload_time": "2020-02-16T14:56:09", "upload_time_iso_8601": "2020-02-16T14:56:09.888625Z", "url": "https://files.pythonhosted.org/packages/33/a2/91ca804452b551c6fcc5d296cdcf8ac801a288be766d895d88601f5e7c36/geometry-to-spatialite-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:01 2020"}