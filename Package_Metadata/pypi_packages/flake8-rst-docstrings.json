{"info": {"author": "Peter J. A. Cock", "author_email": "p.j.a.cock@googlemail.com", "bugtrack_url": null, "classifiers": ["Framework :: Flake8", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Quality Assurance"], "description": "flake8-rst-docstrings\n=====================\n\n.. image:: https://img.shields.io/pypi/v/flake8-rst-docstrings.svg\n   :alt: Released on the Python Package Index (PyPI)\n   :target: https://pypi.python.org/pypi/flake8-rst-docstrings\n.. image:: https://img.shields.io/conda/vn/conda-forge/flake8-rst-docstrings.svg\n   :alt: Released on Conda\n   :target: https://anaconda.org/conda-forge/flake8-rst-docstrings\n.. image:: https://img.shields.io/travis/peterjc/flake8-rst-docstrings/master.svg\n   :alt: Testing with TravisCI\n   :target: https://travis-ci.org/peterjc/flake8-rst-docstrings/branches\n.. image:: https://img.shields.io/pypi/dm/flake8-rst-docstrings.svg\n   :alt: PyPI downloads\n   :target: https://pypistats.org/packages/flake8-rst-docstrings\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :alt: Code style: black\n   :target: https://github.com/python/black\n\nIntroduction\n------------\n\nThis is an MIT licensed flake8 plugin for validating Python docstrings markup\nas reStructuredText (RST) using the Python library ``docutils``. It is\navailable to install from the Python Package Index (PyPI):\n\n- https://pypi.python.org/pypi/flake8-rst-docstrings\n\nThis is based heavily off ``pydocstyle`` (which is also MIT licensed), which\nhas a flake8 plugin called ``flake8-docstrings``, see:\n\n- https://github.com/PyCQA/pydocstyle\n- https://github.com/PyCQA/flake8-docstrings\n\nThe reStructuredText (RST) validation is done by calling ``docutils`` via\nTodd Wolfson's ``restructuredtext-lint`` code:\n\n- http://docutils.sourceforge.net/\n- https://github.com/twolfson/restructuredtext-lint\n\nI recommend you *also* install the related `flake8-docstrings\n<https://gitlab.com/pycqa/flake8-docstrings>`_ plugin, which brings\nthe `pydocstyle <https://github.com/pycqa/pydocstyle>`_ checks into flake8.\nThis checks things like missing docstrings, and other recommendations from\n`PEP 257 Docstring Conventions <https://www.python.org/dev/peps/pep-0257/>`_.\n\nYou may *also* wish to install the related flake8 plugin `flake8-rst\n<https://github.com/kataev/flake8-rst>`_ which can check the Python style\nof doctest formatted snippets of Python code within your ``*.rst`` files\nor the docstrings within your ``*.py`` files.\n\nFlake8 Validation codes\n-----------------------\n\nEarly versions of flake8 assumed a single character prefix for the validation\ncodes, which became problematic with collisions in the plugin ecosystem. Since\nv3.0, flake8 has supported longer prefixes therefore this plugin uses ``RST``\nas its prefix.\n\nInternally we use ``docutils`` for RST validation, which has this to say in\n`PEP258 <https://www.python.org/dev/peps/pep-0258/#error-handling>`_:\n\n* Level-0, \"DEBUG\": an internal reporting issue. There is no effect on the\n  processing. Level-0 system messages are handled separately from the others.\n* Level-1, \"INFO\": a minor issue that can be ignored. There is little or no\n  effect on the processing. Typically level-1 system messages are not\n  reported.\n* Level-2, \"WARNING\": an issue that should be addressed. If ignored, there may\n  be minor problems with the output. Typically level-2 system messages are\n  reported but do not halt processing\n* Level-3, \"ERROR\": a major issue that should be addressed. If ignored, the\n  output will contain unpredictable errors. Typically level-3 system messages\n  are reported but do not halt processing\n* Level-4, \"SEVERE\": a critical error that must be addressed. Typically\n  level-4 system messages are turned into exceptions which halt processing.\n  If ignored, the output will contain severe errors.\n\nThe ``docutils`` \"DEBUG\" level messages are not reported, and the plugin\ncurrently ignores the \"INFO\" level messages.\n\nWithin each category, the individual messages are mapped to ``flake8`` codes\nusing one hundred times the level. i.e. Validation codes ``RST4##`` are\nsevere or critical errors in RST validation, ``RST3##`` are major errors,\n``RST2##`` are warnings, and while currently not yet used, ``RST1##`` would\nbe information only.\n\nWarning codes:\n\n====== =======================================================================\nCode   Description\n------ -----------------------------------------------------------------------\nRST201 Block quote ends without a blank line; unexpected unindent.\nRST202 Bullet list ends without a blank line; unexpected unindent.\nRST203 Definition list ends without a blank line; unexpected unindent.\nRST204 Enumerated list ends without a blank line; unexpected unindent.\nRST205 Explicit markup ends without a blank line; unexpected unindent.\nRST206 Field list ends without a blank line; unexpected unindent.\nRST207 Literal block ends without a blank line; unexpected unindent.\nRST208 Option list ends without a blank line; unexpected unindent.\nRST210 Inline strong start-string without end-string.\nRST211 Blank line required after table.\nRST212 Title underline too short.\nRST213 Inline emphasis start-string without end-string.\nRST214 Inline literal start-string without end-string.\nRST215 Inline interpreted text or phrase reference start-string without end-string.\nRST216 Multiple roles in interpreted text (both prefix and suffix present; only one allowed).\nRST217 Mismatch: both interpreted text role suffix and reference suffix.\nRST218 Literal block expected; none found.\nRST219 Inline substitution_reference start-string without end-string.\nRST299 Previously unseen warning, not yet assigned a unique code.\n====== =======================================================================\n\nMajor error codes:\n\n====== =======================================================================\nCode   Description\n------ -----------------------------------------------------------------------\nRST301 Unexpected indentation.\nRST302 Malformed table.\nRST303 Unknown directive type \"XXX\".\nRST304 Unknown interpreted text role \"XXX\".\nRST305 Undefined substitution referenced: \"XXX\".\nRST306 Unknown target name: \"XXX\".\nRST399 Previously unseen major error, not yet assigned a unique code.\n====== =======================================================================\n\nSevere or critial error codes:\n\n====== =======================================================================\nCode   Description\n------ -----------------------------------------------------------------------\nRST401 Unexpected section title.\nRST499 Previously unseen severe error, not yet assigned a unique code.\n====== =======================================================================\n\nCodes ending ``99``, for example ``RST499``, indicate a previously unseen\nvalidation error for which we have yet to assign a unique validation code\nin the assocated range, which would be ``RST4##`` in this example. If you see\none of these codes, please report it on our GitHub issue tracker, ideally with\nan example we can use for testing.\n\nCodes starting ``RST9##`` indicate there was a problem parsing the Python\nfile in order to extract the docstrings, or in processing the contents.\n\n====== =======================================================================\nCode   Description (and notes)\n------ -----------------------------------------------------------------------\nRST900 Failed to load file (e.g. unicode encoding issue under Python 2)\nRST901 Failed to parse file\nRST902 Failed to parse __all__ entry\nRST903 Failed to lint docstring (e.g. unicode encoding issue under Python 2)\n====== =======================================================================\n\n\nInstallation and usage\n----------------------\n\nPython 3.6 or later is recommended, but Python 2.7 and Python 3.3 onwards are\nalso supported.\n\nWe recommend installing the plugin using pip, which handles the dependencies::\n\n    $ pip install flake8-rst-docstrings\n\nAlternatively, if you are using the Anaconda packaging system, the following\ncommand will install the plugin with its dependencies::\n\n    $ conda install -c conda-forge flake8-rst-docstrings\n\nThe new validator should be automatically included when using ``flake8`` which\nmay now report additional validation codes starting with ``RST`` (as defined\nabove). For example::\n\n    $ flake8 example.py\n\nYou can request only the ``RST`` codes be shown using::\n\n    $ flake8 --select RST example.py\n\nSimilarly you might add particular RST validation codes to your flake8\nconfiguration file's select or ignore list.\n\nNote in addition to the ``RST`` prefix alone you can use partial codes\nlike ``RST2`` meaning ``RST200``, ``RST201``, ... and so on.\n\n\nConfiguration\n-------------\n\nWe assume you are familiar with `flake8 configuration\n<http://flake8.pycqa.org/en/latest/user/configuration.html>`_.\n\nIf you are using Sphinx or other extensions to reStructuredText, you will\nwant to define any additional directives or roles you are using to avoid\nfalse positive ``RST303`` and ``RST304`` violations.\n\nYou can set these at the command line if you wish::\n\n    $ flake8 --rst-roles class,func,ref --rst-directives envvar,exception ...\n\nWe recommend recording these settings in your ``flake8`` configuration,\nfor example in your ``.flake8``, ``setup.cfg``, or ``tox.ini`` file, e.g.::\n\n    [flake8]\n    rst-roles =\n        class,\n        func,\n        ref,\n    rst-directives =\n        envvar,\n        exception,\n\nNote that flake8 allows splitting the comma separated lists over multiple\nlines, and allows including of hash comment lines.\n\n\nVersion History\n---------------\n\n======= ========== ===========================================================\nVersion Released   Changes\n------- ---------- -----------------------------------------------------------\nv0.0.13 2019-12-26 - Adds ``RST218`` and ``RST219``.\nv0.0.12 2019-11-18 - Adds ``RST213`` to ``RST217``.\nv0.0.11 2019-08-07 - Configuration options to define additional directives and\n                     roles (e.g. from Sphinx) for ``RST303`` and ``RST304``.\nv0.0.10 2019-06-17 - Fixed flake8 \"builtins\" parameter warning (contribution\n                     from `Ruben, @ROpdebee <https://github.com/ROpdebee>`_).\nv0.0.9  2019-04-22 - Checks positive and negative examples in test framework.\n                   - Adds ``RST212``, ``RST305`` and ``RST306`` (contribution\n                     from `Brian Skinn <https://github.com/bskinn>`_).\nv0.0.8  2017-10-09 - Adds ``RST303`` and ``RST304`` for unknown directives and\n                     interpreted text role as used in Sphinx-Needs extension.\nv0.0.7  2017-08-25 - Remove triple-quotes before linting, was causing false\n                     positives reporting RST entries ending without a blank\n                     line at end of docstrings (bug fix for issue #1).\nv0.0.6  2017-08-18 - Support PEP263 style encodings following a hashbang line\n                     (bug fix for issue #2).\nv0.0.5  2017-06-19 - Support PEP263 style encoding declaration under Python 2.\n                   - Introduced ``RST900`` when fail to open the file.\nv0.0.4  2017-06-19 - Catch docstring linting failures, report as ``RST903``.\nv0.0.3  2017-06-16 - Ensure plugin code and RST files themselves validate.\n                   - Removed unused import of ``six`` module.\n                   - Basic continuous integration checks with TravisCI.\nv0.0.2  2017-06-16 - Explicitly depend on flake8 v3.0.0 or later.\n                   - Improved documentation.\nv0.0.1  2017-06-16 - Initial public release.\n======= ========== ===========================================================\n\n\nDevelopers\n----------\n\nThis plugin is on GitHub at https://github.com/peterjc/flake8-rst-docstrings\n\nTo make a new release once tested locally and on TravisCI::\n\n    $ git tag vX.Y.Z\n    $ python setup.py sdist --formats=gztar\n    $ twine upload dist/flake8-rst-docstrings-X.Y.Z.tar.gz\n    $ git push origin master --tags\n\nThe PyPI upload should trigger an automated pull request updating the\n`flake8-rst-docstrings conda-forge recipe\n<https://github.com/conda-forge/flake8-rst-docstrings-feedstock/blob/master/recipe/meta.yaml>`_.\n\n\nTODO\n----\n\n- Have the \"INFO\" level ``RST1##`` codes available but ignored by default?\n- Can we call ``docutils`` rather than bundle a copy of their parser code?\n- Create a full test suite and use this for continuous integration.\n- Test with raw mode docstrings and slash-escaped characters.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/peterjc/flake8-rst-docstrings", "keywords": "PEP 287,pep287,docstrings,rst,reStructuredText", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flake8-rst-docstrings", "package_url": "https://pypi.org/project/flake8-rst-docstrings/", "platform": "", "project_url": "https://pypi.org/project/flake8-rst-docstrings/", "project_urls": {"Homepage": "https://github.com/peterjc/flake8-rst-docstrings"}, "release_url": "https://pypi.org/project/flake8-rst-docstrings/0.0.13/", "requires_dist": null, "requires_python": "", "summary": "Python docstring reStructuredText (RST) validator", "version": "0.0.13", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/flake8-rst-docstrings\" rel=\"nofollow\"><img alt=\"Released on the Python Package Index (PyPI)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43386ea6faeb0df30439f74f4df93ca5a2d80767/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666c616b65382d7273742d646f63737472696e67732e737667\"></a>\n<a href=\"https://anaconda.org/conda-forge/flake8-rst-docstrings\" rel=\"nofollow\"><img alt=\"Released on Conda\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/28a569c96e3dc1f58b37f1bad66ce11551776c46/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f766e2f636f6e64612d666f7267652f666c616b65382d7273742d646f63737472696e67732e737667\"></a>\n<a href=\"https://travis-ci.org/peterjc/flake8-rst-docstrings/branches\" rel=\"nofollow\"><img alt=\"Testing with TravisCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/66386108bc292f2dd1fb48d4d8c4f23afd1b2dcc/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f70657465726a632f666c616b65382d7273742d646f63737472696e67732f6d61737465722e737667\"></a>\n<a href=\"https://pypistats.org/packages/flake8-rst-docstrings\" rel=\"nofollow\"><img alt=\"PyPI downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/205310ae450c8eb93da3fe221601b7be72af7e10/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f666c616b65382d7273742d646f63737472696e67732e737667\"></a>\n<a href=\"https://github.com/python/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This is an MIT licensed flake8 plugin for validating Python docstrings markup\nas reStructuredText (RST) using the Python library <tt>docutils</tt>. It is\navailable to install from the Python Package Index (PyPI):</p>\n<ul>\n<li><a href=\"https://pypi.python.org/pypi/flake8-rst-docstrings\" rel=\"nofollow\">https://pypi.python.org/pypi/flake8-rst-docstrings</a></li>\n</ul>\n<p>This is based heavily off <tt>pydocstyle</tt> (which is also MIT licensed), which\nhas a flake8 plugin called <tt><span class=\"pre\">flake8-docstrings</span></tt>, see:</p>\n<ul>\n<li><a href=\"https://github.com/PyCQA/pydocstyle\" rel=\"nofollow\">https://github.com/PyCQA/pydocstyle</a></li>\n<li><a href=\"https://github.com/PyCQA/flake8-docstrings\" rel=\"nofollow\">https://github.com/PyCQA/flake8-docstrings</a></li>\n</ul>\n<p>The reStructuredText (RST) validation is done by calling <tt>docutils</tt> via\nTodd Wolfson\u2019s <tt><span class=\"pre\">restructuredtext-lint</span></tt> code:</p>\n<ul>\n<li><a href=\"http://docutils.sourceforge.net/\" rel=\"nofollow\">http://docutils.sourceforge.net/</a></li>\n<li><a href=\"https://github.com/twolfson/restructuredtext-lint\" rel=\"nofollow\">https://github.com/twolfson/restructuredtext-lint</a></li>\n</ul>\n<p>I recommend you <em>also</em> install the related <a href=\"https://gitlab.com/pycqa/flake8-docstrings\" rel=\"nofollow\">flake8-docstrings</a> plugin, which brings\nthe <a href=\"https://github.com/pycqa/pydocstyle\" rel=\"nofollow\">pydocstyle</a> checks into flake8.\nThis checks things like missing docstrings, and other recommendations from\n<a href=\"https://www.python.org/dev/peps/pep-0257/\" rel=\"nofollow\">PEP 257 Docstring Conventions</a>.</p>\n<p>You may <em>also</em> wish to install the related flake8 plugin <a href=\"https://github.com/kataev/flake8-rst\" rel=\"nofollow\">flake8-rst</a> which can check the Python style\nof doctest formatted snippets of Python code within your <tt>*.rst</tt> files\nor the docstrings within your <tt>*.py</tt> files.</p>\n</div>\n<div id=\"flake8-validation-codes\">\n<h2>Flake8 Validation codes</h2>\n<p>Early versions of flake8 assumed a single character prefix for the validation\ncodes, which became problematic with collisions in the plugin ecosystem. Since\nv3.0, flake8 has supported longer prefixes therefore this plugin uses <tt>RST</tt>\nas its prefix.</p>\n<p>Internally we use <tt>docutils</tt> for RST validation, which has this to say in\n<a href=\"https://www.python.org/dev/peps/pep-0258/#error-handling\" rel=\"nofollow\">PEP258</a>:</p>\n<ul>\n<li>Level-0, \u201cDEBUG\u201d: an internal reporting issue. There is no effect on the\nprocessing. Level-0 system messages are handled separately from the others.</li>\n<li>Level-1, \u201cINFO\u201d: a minor issue that can be ignored. There is little or no\neffect on the processing. Typically level-1 system messages are not\nreported.</li>\n<li>Level-2, \u201cWARNING\u201d: an issue that should be addressed. If ignored, there may\nbe minor problems with the output. Typically level-2 system messages are\nreported but do not halt processing</li>\n<li>Level-3, \u201cERROR\u201d: a major issue that should be addressed. If ignored, the\noutput will contain unpredictable errors. Typically level-3 system messages\nare reported but do not halt processing</li>\n<li>Level-4, \u201cSEVERE\u201d: a critical error that must be addressed. Typically\nlevel-4 system messages are turned into exceptions which halt processing.\nIf ignored, the output will contain severe errors.</li>\n</ul>\n<p>The <tt>docutils</tt> \u201cDEBUG\u201d level messages are not reported, and the plugin\ncurrently ignores the \u201cINFO\u201d level messages.</p>\n<p>Within each category, the individual messages are mapped to <tt>flake8</tt> codes\nusing one hundred times the level. i.e. Validation codes <tt>RST4##</tt> are\nsevere or critical errors in RST validation, <tt>RST3##</tt> are major errors,\n<tt>RST2##</tt> are warnings, and while currently not yet used, <tt>RST1##</tt> would\nbe information only.</p>\n<p>Warning codes:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>Code</td>\n<td>Description</td>\n</tr>\n<tr><td>RST201</td>\n<td>Block quote ends without a blank line; unexpected unindent.</td>\n</tr>\n<tr><td>RST202</td>\n<td>Bullet list ends without a blank line; unexpected unindent.</td>\n</tr>\n<tr><td>RST203</td>\n<td>Definition list ends without a blank line; unexpected unindent.</td>\n</tr>\n<tr><td>RST204</td>\n<td>Enumerated list ends without a blank line; unexpected unindent.</td>\n</tr>\n<tr><td>RST205</td>\n<td>Explicit markup ends without a blank line; unexpected unindent.</td>\n</tr>\n<tr><td>RST206</td>\n<td>Field list ends without a blank line; unexpected unindent.</td>\n</tr>\n<tr><td>RST207</td>\n<td>Literal block ends without a blank line; unexpected unindent.</td>\n</tr>\n<tr><td>RST208</td>\n<td>Option list ends without a blank line; unexpected unindent.</td>\n</tr>\n<tr><td>RST210</td>\n<td>Inline strong start-string without end-string.</td>\n</tr>\n<tr><td>RST211</td>\n<td>Blank line required after table.</td>\n</tr>\n<tr><td>RST212</td>\n<td>Title underline too short.</td>\n</tr>\n<tr><td>RST213</td>\n<td>Inline emphasis start-string without end-string.</td>\n</tr>\n<tr><td>RST214</td>\n<td>Inline literal start-string without end-string.</td>\n</tr>\n<tr><td>RST215</td>\n<td>Inline interpreted text or phrase reference start-string without end-string.</td>\n</tr>\n<tr><td>RST216</td>\n<td>Multiple roles in interpreted text (both prefix and suffix present; only one allowed).</td>\n</tr>\n<tr><td>RST217</td>\n<td>Mismatch: both interpreted text role suffix and reference suffix.</td>\n</tr>\n<tr><td>RST218</td>\n<td>Literal block expected; none found.</td>\n</tr>\n<tr><td>RST219</td>\n<td>Inline substitution_reference start-string without end-string.</td>\n</tr>\n<tr><td>RST299</td>\n<td>Previously unseen warning, not yet assigned a unique code.</td>\n</tr>\n</tbody>\n</table>\n<p>Major error codes:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>Code</td>\n<td>Description</td>\n</tr>\n<tr><td>RST301</td>\n<td>Unexpected indentation.</td>\n</tr>\n<tr><td>RST302</td>\n<td>Malformed table.</td>\n</tr>\n<tr><td>RST303</td>\n<td>Unknown directive type \u201cXXX\u201d.</td>\n</tr>\n<tr><td>RST304</td>\n<td>Unknown interpreted text role \u201cXXX\u201d.</td>\n</tr>\n<tr><td>RST305</td>\n<td>Undefined substitution referenced: \u201cXXX\u201d.</td>\n</tr>\n<tr><td>RST306</td>\n<td>Unknown target name: \u201cXXX\u201d.</td>\n</tr>\n<tr><td>RST399</td>\n<td>Previously unseen major error, not yet assigned a unique code.</td>\n</tr>\n</tbody>\n</table>\n<p>Severe or critial error codes:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>Code</td>\n<td>Description</td>\n</tr>\n<tr><td>RST401</td>\n<td>Unexpected section title.</td>\n</tr>\n<tr><td>RST499</td>\n<td>Previously unseen severe error, not yet assigned a unique code.</td>\n</tr>\n</tbody>\n</table>\n<p>Codes ending <tt>99</tt>, for example <tt>RST499</tt>, indicate a previously unseen\nvalidation error for which we have yet to assign a unique validation code\nin the assocated range, which would be <tt>RST4##</tt> in this example. If you see\none of these codes, please report it on our GitHub issue tracker, ideally with\nan example we can use for testing.</p>\n<p>Codes starting <tt>RST9##</tt> indicate there was a problem parsing the Python\nfile in order to extract the docstrings, or in processing the contents.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>Code</td>\n<td>Description (and notes)</td>\n</tr>\n<tr><td>RST900</td>\n<td>Failed to load file (e.g. unicode encoding issue under Python 2)</td>\n</tr>\n<tr><td>RST901</td>\n<td>Failed to parse file</td>\n</tr>\n<tr><td>RST902</td>\n<td>Failed to parse __all__ entry</td>\n</tr>\n<tr><td>RST903</td>\n<td>Failed to lint docstring (e.g. unicode encoding issue under Python 2)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"installation-and-usage\">\n<h2>Installation and usage</h2>\n<p>Python 3.6 or later is recommended, but Python 2.7 and Python 3.3 onwards are\nalso supported.</p>\n<p>We recommend installing the plugin using pip, which handles the dependencies:</p>\n<pre>$ pip install flake8-rst-docstrings\n</pre>\n<p>Alternatively, if you are using the Anaconda packaging system, the following\ncommand will install the plugin with its dependencies:</p>\n<pre>$ conda install -c conda-forge flake8-rst-docstrings\n</pre>\n<p>The new validator should be automatically included when using <tt>flake8</tt> which\nmay now report additional validation codes starting with <tt>RST</tt> (as defined\nabove). For example:</p>\n<pre>$ flake8 example.py\n</pre>\n<p>You can request only the <tt>RST</tt> codes be shown using:</p>\n<pre>$ flake8 --select RST example.py\n</pre>\n<p>Similarly you might add particular RST validation codes to your flake8\nconfiguration file\u2019s select or ignore list.</p>\n<p>Note in addition to the <tt>RST</tt> prefix alone you can use partial codes\nlike <tt>RST2</tt> meaning <tt>RST200</tt>, <tt>RST201</tt>, \u2026 and so on.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>We assume you are familiar with <a href=\"http://flake8.pycqa.org/en/latest/user/configuration.html\" rel=\"nofollow\">flake8 configuration</a>.</p>\n<p>If you are using Sphinx or other extensions to reStructuredText, you will\nwant to define any additional directives or roles you are using to avoid\nfalse positive <tt>RST303</tt> and <tt>RST304</tt> violations.</p>\n<p>You can set these at the command line if you wish:</p>\n<pre>$ flake8 --rst-roles class,func,ref --rst-directives envvar,exception ...\n</pre>\n<p>We recommend recording these settings in your <tt>flake8</tt> configuration,\nfor example in your <tt>.flake8</tt>, <tt>setup.cfg</tt>, or <tt>tox.ini</tt> file, e.g.:</p>\n<pre>[flake8]\nrst-roles =\n    class,\n    func,\n    ref,\nrst-directives =\n    envvar,\n    exception,\n</pre>\n<p>Note that flake8 allows splitting the comma separated lists over multiple\nlines, and allows including of hash comment lines.</p>\n</div>\n<div id=\"version-history\">\n<h2>Version History</h2>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>Version</td>\n<td>Released</td>\n<td>Changes</td>\n</tr>\n<tr><td>v0.0.13</td>\n<td>2019-12-26</td>\n<td><ul>\n<li>Adds <tt>RST218</tt> and <tt>RST219</tt>.</li>\n</ul>\n</td>\n</tr>\n<tr><td>v0.0.12</td>\n<td>2019-11-18</td>\n<td><ul>\n<li>Adds <tt>RST213</tt> to <tt>RST217</tt>.</li>\n</ul>\n</td>\n</tr>\n<tr><td>v0.0.11</td>\n<td>2019-08-07</td>\n<td><ul>\n<li>Configuration options to define additional directives and\nroles (e.g. from Sphinx) for <tt>RST303</tt> and <tt>RST304</tt>.</li>\n</ul>\n</td>\n</tr>\n<tr><td>v0.0.10</td>\n<td>2019-06-17</td>\n<td><ul>\n<li>Fixed flake8 \u201cbuiltins\u201d parameter warning (contribution\nfrom <a href=\"https://github.com/ROpdebee\" rel=\"nofollow\">Ruben, @ROpdebee</a>).</li>\n</ul>\n</td>\n</tr>\n<tr><td>v0.0.9</td>\n<td>2019-04-22</td>\n<td><ul>\n<li>Checks positive and negative examples in test framework.</li>\n<li>Adds <tt>RST212</tt>, <tt>RST305</tt> and <tt>RST306</tt> (contribution\nfrom <a href=\"https://github.com/bskinn\" rel=\"nofollow\">Brian Skinn</a>).</li>\n</ul>\n</td>\n</tr>\n<tr><td>v0.0.8</td>\n<td>2017-10-09</td>\n<td><ul>\n<li>Adds <tt>RST303</tt> and <tt>RST304</tt> for unknown directives and\ninterpreted text role as used in Sphinx-Needs extension.</li>\n</ul>\n</td>\n</tr>\n<tr><td>v0.0.7</td>\n<td>2017-08-25</td>\n<td><ul>\n<li>Remove triple-quotes before linting, was causing false\npositives reporting RST entries ending without a blank\nline at end of docstrings (bug fix for issue #1).</li>\n</ul>\n</td>\n</tr>\n<tr><td>v0.0.6</td>\n<td>2017-08-18</td>\n<td><ul>\n<li>Support PEP263 style encodings following a hashbang line\n(bug fix for issue #2).</li>\n</ul>\n</td>\n</tr>\n<tr><td>v0.0.5</td>\n<td>2017-06-19</td>\n<td><ul>\n<li>Support PEP263 style encoding declaration under Python 2.</li>\n<li>Introduced <tt>RST900</tt> when fail to open the file.</li>\n</ul>\n</td>\n</tr>\n<tr><td>v0.0.4</td>\n<td>2017-06-19</td>\n<td><ul>\n<li>Catch docstring linting failures, report as <tt>RST903</tt>.</li>\n</ul>\n</td>\n</tr>\n<tr><td>v0.0.3</td>\n<td>2017-06-16</td>\n<td><ul>\n<li>Ensure plugin code and RST files themselves validate.</li>\n<li>Removed unused import of <tt>six</tt> module.</li>\n<li>Basic continuous integration checks with TravisCI.</li>\n</ul>\n</td>\n</tr>\n<tr><td>v0.0.2</td>\n<td>2017-06-16</td>\n<td><ul>\n<li>Explicitly depend on flake8 v3.0.0 or later.</li>\n<li>Improved documentation.</li>\n</ul>\n</td>\n</tr>\n<tr><td>v0.0.1</td>\n<td>2017-06-16</td>\n<td><ul>\n<li>Initial public release.</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"developers\">\n<h2>Developers</h2>\n<p>This plugin is on GitHub at <a href=\"https://github.com/peterjc/flake8-rst-docstrings\" rel=\"nofollow\">https://github.com/peterjc/flake8-rst-docstrings</a></p>\n<p>To make a new release once tested locally and on TravisCI:</p>\n<pre>$ git tag vX.Y.Z\n$ python setup.py sdist --formats=gztar\n$ twine upload dist/flake8-rst-docstrings-X.Y.Z.tar.gz\n$ git push origin master --tags\n</pre>\n<p>The PyPI upload should trigger an automated pull request updating the\n<a href=\"https://github.com/conda-forge/flake8-rst-docstrings-feedstock/blob/master/recipe/meta.yaml\" rel=\"nofollow\">flake8-rst-docstrings conda-forge recipe</a>.</p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Have the \u201cINFO\u201d level <tt>RST1##</tt> codes available but ignored by default?</li>\n<li>Can we call <tt>docutils</tt> rather than bundle a copy of their parser code?</li>\n<li>Create a full test suite and use this for continuous integration.</li>\n<li>Test with raw mode docstrings and slash-escaped characters.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6363264, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b4880cf3175ad1e38c23ef270941ef0b", "sha256": "160854b69a9d609583dbfd1dc0d0031201103271ea578310586ac8f30694a171"}, "downloads": -1, "filename": "flake8-rst-docstrings-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b4880cf3175ad1e38c23ef270941ef0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12050, "upload_time": "2017-06-16T16:09:43", "upload_time_iso_8601": "2017-06-16T16:09:43.459531Z", "url": "https://files.pythonhosted.org/packages/06/0c/30a9f428995b44423c7d23ab1414b34a445ca31dd428dbe74817b7424abd/flake8-rst-docstrings-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "b535fda287669579a92a46f575c4d0e1", "sha256": "009c278460394d7f5a88c9e4da91962e1b7cd6a351913c2c2947b873a4887625"}, "downloads": -1, "filename": "flake8-rst-docstrings-0.0.10.tar.gz", "has_sig": false, "md5_digest": "b535fda287669579a92a46f575c4d0e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15969, "upload_time": "2019-06-17T10:38:39", "upload_time_iso_8601": "2019-06-17T10:38:39.807074Z", "url": "https://files.pythonhosted.org/packages/37/7e/38880c61c0b76e45d6907b1877e727fc558d3c2b5812955ce3b468bdae5d/flake8-rst-docstrings-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "dc59c98bf29dfc45c0ae9321d8f9fa77", "sha256": "a2fa35c6ef978422234afae8c345f23ff721571d43f2895e29817e94be92dd6c"}, "downloads": -1, "filename": "flake8-rst-docstrings-0.0.11.tar.gz", "has_sig": false, "md5_digest": "dc59c98bf29dfc45c0ae9321d8f9fa77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16939, "upload_time": "2019-08-07T14:21:39", "upload_time_iso_8601": "2019-08-07T14:21:39.087615Z", "url": "https://files.pythonhosted.org/packages/eb/ab/be3f6efb2103c3033e878748774c505638f267c0f25b55b70ef90e0efcd0/flake8-rst-docstrings-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "9b6d9d6325df01e980921937b9879784", "sha256": "01d38327801781b26c3dfeb71ae37e5a02c5ca1b774a686f63feab8824ca6f9c"}, "downloads": -1, "filename": "flake8-rst-docstrings-0.0.12.tar.gz", "has_sig": false, "md5_digest": "9b6d9d6325df01e980921937b9879784", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17066, "upload_time": "2019-11-18T12:44:38", "upload_time_iso_8601": "2019-11-18T12:44:38.975877Z", "url": "https://files.pythonhosted.org/packages/17/89/bc8e877c24fe266f4b4dc7ac04ab2dbcd8029d5bcebd65509259ec3d8b5c/flake8-rst-docstrings-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "c0417cb35286defd3a0531b1bab703f2", "sha256": "b1b619d81d879b874533973ac04ee5d823fdbe8c9f3701bfe802bb41813997b4"}, "downloads": -1, "filename": "flake8-rst-docstrings-0.0.13.tar.gz", "has_sig": false, "md5_digest": "c0417cb35286defd3a0531b1bab703f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17130, "upload_time": "2019-12-26T23:39:50", "upload_time_iso_8601": "2019-12-26T23:39:50.748436Z", "url": "https://files.pythonhosted.org/packages/bd/c3/f4a4fedd5f1ac7f9a2c75b5348710abb93c7a86169f87bb800530bd7c139/flake8-rst-docstrings-0.0.13.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8f57f0ac87671d49a237cc8d4b34a01f", "sha256": "147722f601e69c42c56e82e3ea135a59b9cf5c0774351551c12dcb0807e1aeba"}, "downloads": -1, "filename": "flake8-rst-docstrings-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8f57f0ac87671d49a237cc8d4b34a01f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13357, "upload_time": "2017-06-16T16:44:48", "upload_time_iso_8601": "2017-06-16T16:44:48.734549Z", "url": "https://files.pythonhosted.org/packages/fb/ce/9dd8023deafb9e51a23723518b60d96504ee29c7c456f07dd8f013b25d4d/flake8-rst-docstrings-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "f2a31cfebcdcfe1a07cc208f4901d7cd", "sha256": "9c74d82e39190848ead61dbf318289fb7a686948087a18d03bc7c4566a6b9965"}, "downloads": -1, "filename": "flake8-rst-docstrings-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f2a31cfebcdcfe1a07cc208f4901d7cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14044, "upload_time": "2017-06-16T17:23:06", "upload_time_iso_8601": "2017-06-16T17:23:06.126648Z", "url": "https://files.pythonhosted.org/packages/5c/8d/439b5c8718667a0db4887f6b84ef2674bfdf4cb810d9c70056c424610153/flake8-rst-docstrings-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "e7d0d7a21de8f91618627a57a627d4ad", "sha256": "7dece127d2fa6db2c125d4cc5f1c56991ea2aa913c9c818984983960e1561268"}, "downloads": -1, "filename": "flake8-rst-docstrings-0.0.4.tar.gz", "has_sig": false, "md5_digest": "e7d0d7a21de8f91618627a57a627d4ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14498, "upload_time": "2017-06-19T15:12:42", "upload_time_iso_8601": "2017-06-19T15:12:42.071038Z", "url": "https://files.pythonhosted.org/packages/39/96/e2658347f8d3ff2536f728cdb90506b4e072e15e65c90e441ed643dc0f4a/flake8-rst-docstrings-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "d68021dee0aa195f9a5b6ef661786d6e", "sha256": "d82bcfbc2bbcd81e8d4b1c3cc2f67723f4a5bfe117ca79564c28dd40033b6726"}, "downloads": -1, "filename": "flake8-rst-docstrings-0.0.5.tar.gz", "has_sig": false, "md5_digest": "d68021dee0aa195f9a5b6ef661786d6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15959, "upload_time": "2017-06-19T17:38:50", "upload_time_iso_8601": "2017-06-19T17:38:50.111814Z", "url": "https://files.pythonhosted.org/packages/de/df/9dfbe277e375d1f31f5f0e3835eb3b1a17e7ecd4c7c5ba2e013f205d1f50/flake8-rst-docstrings-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "826a2401a0e89c065d294895ed6c0b05", "sha256": "2534f7e4696fb08c03713c7a5fc95085140437a68ba4c854bc0a607814bf8892"}, "downloads": -1, "filename": "flake8-rst-docstrings-0.0.6.tar.gz", "has_sig": false, "md5_digest": "826a2401a0e89c065d294895ed6c0b05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16822, "upload_time": "2017-08-18T11:09:43", "upload_time_iso_8601": "2017-08-18T11:09:43.431978Z", "url": "https://files.pythonhosted.org/packages/51/a2/42f16167b0a5744163d667f8fd46f4c1f5b5571c58a771fa76849bbeeddf/flake8-rst-docstrings-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "5236727fe5b64c617d3917bf82d533e6", "sha256": "4a13adfa53d70039cad1a602c4ba7e0a8b2fcd6794096103696d8f6b457ff3be"}, "downloads": -1, "filename": "flake8-rst-docstrings-0.0.7.tar.gz", "has_sig": false, "md5_digest": "5236727fe5b64c617d3917bf82d533e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17567, "upload_time": "2017-08-25T14:28:10", "upload_time_iso_8601": "2017-08-25T14:28:10.833898Z", "url": "https://files.pythonhosted.org/packages/92/70/4843f49c8b04e93a6676bca8af70bed8f566e9b4ed1ae82bbcfe90906da0/flake8-rst-docstrings-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "50bf094dc3d37c229d313ea6571b77a9", "sha256": "3a5b92b40e87006f8e95bfc5082577414cd387ca24def37ecf1fcd9b3ce7273c"}, "downloads": -1, "filename": "flake8-rst-docstrings-0.0.8.tar.gz", "has_sig": false, "md5_digest": "50bf094dc3d37c229d313ea6571b77a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17907, "upload_time": "2017-10-09T12:12:17", "upload_time_iso_8601": "2017-10-09T12:12:17.687473Z", "url": "https://files.pythonhosted.org/packages/99/2f/38b97b21dc9efc9540620a7d9e76eceeb9f09953dbf05e4caa7d2f721fcb/flake8-rst-docstrings-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "2fa738576d61d9c4a3e0da5b921d654d", "sha256": "a31b9912de083de37cd8f031ebf9181c41bc9e17d246044fc8319712ec6f68be"}, "downloads": -1, "filename": "flake8-rst-docstrings-0.0.9.tar.gz", "has_sig": false, "md5_digest": "2fa738576d61d9c4a3e0da5b921d654d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15562, "upload_time": "2019-04-23T16:07:36", "upload_time_iso_8601": "2019-04-23T16:07:36.673932Z", "url": "https://files.pythonhosted.org/packages/86/50/4c11ec1f23a200062911bebba85efaedc89bb2de51520acf7fbf0e701f2f/flake8-rst-docstrings-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c0417cb35286defd3a0531b1bab703f2", "sha256": "b1b619d81d879b874533973ac04ee5d823fdbe8c9f3701bfe802bb41813997b4"}, "downloads": -1, "filename": "flake8-rst-docstrings-0.0.13.tar.gz", "has_sig": false, "md5_digest": "c0417cb35286defd3a0531b1bab703f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17130, "upload_time": "2019-12-26T23:39:50", "upload_time_iso_8601": "2019-12-26T23:39:50.748436Z", "url": "https://files.pythonhosted.org/packages/bd/c3/f4a4fedd5f1ac7f9a2c75b5348710abb93c7a86169f87bb800530bd7c139/flake8-rst-docstrings-0.0.13.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:03:20 2020"}