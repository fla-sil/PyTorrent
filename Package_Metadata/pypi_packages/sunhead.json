{"info": {"author": "Dmitry Litvinenko", "author_email": "anti1869@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP"], "description": "SunHead\n=======\n\n***This is preview. It's pre-beta, pre-alpha, pre-anything, so don't use it in real projects. \nMore work is on the way.***\n\nFramework for building asynchronous websites and micro-services on top of aiohttp\n\nBasic example\n-------------\n\nThis is how to run your ``epic_app``'s webserver::\n\n    from sunhead.cli.commands.runserver import Runserver\n    from sunhead.cli.entrypoint import main as sunhead_main\n    \n    commands = (\n        Runserver(\"apic_app.server.SubclassOfSunHeadWorkersHttpServer\"),   \n    )\n    \n    \n    DEFAULT_ENVIRONMENT_VARIABLE = \"EPIC_APP_SETTINGS_MODULE\"\n    GLOBAL_CONFIG_MODULE = \"epic_app.settings.base\"\n    \n    \n    def main():\n        sunhead_main(\n            commands=commands,\n            settings_ennvar=DEFAULT_ENVIRONMENT_VARIABLE,\n            fallback_settings_module=GLOBAL_CONFIG_MODULE\n        )\n    \n    \n    if __name__ == '__main__':\n        main()\n\nFeatures\n--------\n\nYou can run workers from basic console scripts up to the http-servers, connected to messaging streams, queues, etc.\nThere are REST helper classes, CLI tools, settings incapsulation and other useful things.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/anti1869/sunhead", "keywords": null, "license": "Apache 2", "maintainer": null, "maintainer_email": null, "name": "sunhead", "package_url": "https://pypi.org/project/sunhead/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/sunhead/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/anti1869/sunhead"}, "release_url": "https://pypi.org/project/sunhead/5.0.1/", "requires_dist": null, "requires_python": null, "summary": "Framework for building asynchronous websites and micro-services on top of ``aiohttp``", "version": "5.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>*This is preview. It\u2019s pre-beta, pre-alpha, pre-anything, so don\u2019t use it in real projects.\nMore work is on the way.*</strong></p>\n<p>Framework for building asynchronous websites and micro-services on top of aiohttp</p>\n<div id=\"basic-example\">\n<h2>Basic example</h2>\n<p>This is how to run your <tt>epic_app</tt>\u2019s webserver:</p>\n<pre>from sunhead.cli.commands.runserver import Runserver\nfrom sunhead.cli.entrypoint import main as sunhead_main\n\ncommands = (\n    Runserver(\"apic_app.server.SubclassOfSunHeadWorkersHttpServer\"),\n)\n\n\nDEFAULT_ENVIRONMENT_VARIABLE = \"EPIC_APP_SETTINGS_MODULE\"\nGLOBAL_CONFIG_MODULE = \"epic_app.settings.base\"\n\n\ndef main():\n    sunhead_main(\n        commands=commands,\n        settings_ennvar=DEFAULT_ENVIRONMENT_VARIABLE,\n        fallback_settings_module=GLOBAL_CONFIG_MODULE\n    )\n\n\nif __name__ == '__main__':\n    main()\n</pre>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<p>You can run workers from basic console scripts up to the http-servers, connected to messaging streams, queues, etc.\nThere are REST helper classes, CLI tools, settings incapsulation and other useful things.</p>\n</div>\n\n          </div>"}, "last_serial": 2636730, "releases": {"5.0.0": [{"comment_text": "", "digests": {"md5": "50275b64dd374cd1b079974541fd1f6a", "sha256": "97b45fd0829be743a85c0bf3b8937965fad595d29f518bd3003e47a88a03a63a"}, "downloads": -1, "filename": "sunhead-5.0.0.tar.gz", "has_sig": false, "md5_digest": "50275b64dd374cd1b079974541fd1f6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20191, "upload_time": "2016-04-06T08:13:02", "upload_time_iso_8601": "2016-04-06T08:13:02.807551Z", "url": "https://files.pythonhosted.org/packages/81/9c/36c650aae0acf82d3c6a12d674b8a0bc73a7b7f4a9c313f55700cd17c14f/sunhead-5.0.0.tar.gz", "yanked": false}], "5.0.1": [{"comment_text": "", "digests": {"md5": "7b237fa2bdd7ade2bc9963794c3982fb", "sha256": "dcaca9ebfcd280b74746e2b9fad377c85cb4eb969137d5abe089c5d88de26c8f"}, "downloads": -1, "filename": "sunhead-5.0.1.tar.gz", "has_sig": false, "md5_digest": "7b237fa2bdd7ade2bc9963794c3982fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24825, "upload_time": "2017-02-12T15:02:59", "upload_time_iso_8601": "2017-02-12T15:02:59.291955Z", "url": "https://files.pythonhosted.org/packages/74/8c/550db8a0be2fd886aacf47eb127cfeaeab07f8ef830092b1bce98b8f9ad2/sunhead-5.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7b237fa2bdd7ade2bc9963794c3982fb", "sha256": "dcaca9ebfcd280b74746e2b9fad377c85cb4eb969137d5abe089c5d88de26c8f"}, "downloads": -1, "filename": "sunhead-5.0.1.tar.gz", "has_sig": false, "md5_digest": "7b237fa2bdd7ade2bc9963794c3982fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24825, "upload_time": "2017-02-12T15:02:59", "upload_time_iso_8601": "2017-02-12T15:02:59.291955Z", "url": "https://files.pythonhosted.org/packages/74/8c/550db8a0be2fd886aacf47eb127cfeaeab07f8ef830092b1bce98b8f9ad2/sunhead-5.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:21 2020"}