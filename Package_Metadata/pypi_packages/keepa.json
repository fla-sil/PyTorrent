{"info": {"author": "Alex Kaszynski", "author_email": "akascap@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Database :: Front-Ends"], "description": "keepa\n=====\n\n.. image:: https://img.shields.io/pypi/v/keepa.svg?logo=python&logoColor=white\n   :target: https://pypi.org/project/keepa/\n\n.. image:: https://travis-ci.org/akaszynski/keepa.svg?branch=master\n    :target: https://travis-ci.org/akaszynski/keepa\n\n.. image:: https://readthedocs.org/projects/keepaapi/badge/?version=latest\n    :target: https://keepaapi.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://codecov.io/gh/akaszynski/keepa/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/akaszynski/keepa\n\nPython module to interface to `Keepa <https://keepa.com/>`_ to query for Amazon product information and history.\n\nDocumentation can be found on readthedocs at `keepa Documentation <https://keepaapi.readthedocs.io/en/latest/>`_.\n\n\nRequirements\n------------\nModule is compatible with Python 2 and 3. keepa requires:\n\n - ``numpy``\n - ``requests``\n\nProduct history can be plotted from the raw data when ``matplotlib`` is installed.\n\nInterfacing with the ``keepa`` requires an access key and a monthly subscription from `Keepa API <https://keepa.com/#!api>`_\n\n\nInstallation\n------------\nModule can be installed from PyPi with:\n\n.. code::\n\n    pip install keepa\n\n\nSource code can also be downloaded from `GitHub <https://github.com/akaszynski/keepa>`_ and installed using ``python setup.py install`` or ``pip install .``\n\n\nBrief Example\n-------------\n.. code:: python\n\n    import keepa\n    accesskey = 'XXXXXXXXXXXXXXXX' # enter real access key here\n    api = keepa.Keepa(accesskey)\n\n    # Single ASIN query\n    products = api.query('B0088PUEPK') # returns list of product data\n\n    # Plot result (requires matplotlib)\n    keepa.plot_product(products[0])\n\n.. figure:: https://github.com/akaszynski/keepa/raw/master/docs/source/images/Product_Price_Plot.png\n    :width: 500pt\n\n    Product Price Plot\n\n.. figure:: https://github.com/akaszynski/keepa/raw/master/docs/source/images/Product_Offer_Plot.png\n    :width: 500pt\n\n    Product Offers Plot\n\n\nDetailed Example\n----------------\n\nImport interface and establish connection to server\n\n.. code:: python\n\n    import keepa\n    accesskey = 'XXXXXXXXXXXXXXXX' # enter real access key here\n    api = keepa.Keepa(accesskey)\n\nSingle ASIN query\n\n.. code:: python\n\n    products = api.query('059035342X')\n\n    # See help(api.query) for available options when querying the API\n\nMultiple ASIN query from List\n\n.. code:: python\n\n    asins = ['0022841350', '0022841369', '0022841369', '0022841369']\n    products = api.query(asins)\n\nMultiple ASIN query from numpy array\n\n.. code:: python\n\n    asins = np.asarray(['0022841350', '0022841369', '0022841369', '0022841369'])\n    products = api.query(asins)\n\nProducts is a list of product data with one entry per successful result from the Keepa server. Each entry is a dictionary containing the same product data available from `Amazon <http://www.amazon.com>`_.\n\n.. code:: python\n\n    # Available keys\n    print(products[0].keys())\n\n    # Print ASIN and title\n    print('ASIN is ' + products[0]['asin'])\n    print('Title is ' + products[0]['title'])\n\nThe raw data is contained within each product result. Raw data is stored as a dictionary with each key paired with its associated time history.\n\n.. code:: python\n\n    # Access new price history and associated time data\n    newprice = products[0]['data']['NEW']\n    newpricetime = products[0]['data']['NEW_time']\n\n    # Can be plotted with matplotlib using:\n    import matplotlib.pyplot as plt\n    plt.step(newpricetime, newprice, where='pre')\n\n    # Keys can be listed by\n    print(products[0]['data'].keys())\n\nThe product history can also be plotted from the module if ``matplotlib`` is installed\n\n.. code:: python\n\n    keepa.plot_product(products[0])\n\nYou can obtain the offers history for an ASIN (or multiple ASINs) using the ``offers`` parameter.  See the documentation at `Request Products <https://keepa.com/#!discuss/t/request-products/110/1>`_ for further details.\n\n.. code:: python\n\n    products = api.query(asins, offers=20)\n    product = products[0]\n    offers = product['offers']\n\n    # each offer contains the price history of each offer\n    offer = offers[0]\n    csv = offer['offerCSV']\n\n    # convert these values to numpy arrays\n    times, prices = keepa.convert_offer_history(csv)\n\n    # for a list of active offers, see\n    indices = product['liveOffersOrder']\n\n    # with this you can loop through active offers:\n    indices = product['liveOffersOrder']\n    offer_times = []\n    offer_prices = []\n    for index in indices:\n        csv = offers[index]['offerCSV']\n        times, prices = keepa.convert_offer_history(csv)\n        offer_times.append(times)\n        offer_prices.append(prices)\n\n    # you can aggregate these using np.hstack or plot at the history individually\n    import matplotlib.pyplot as plt\n    for i in range(len(offer_prices)):\n        plt.step(offer_times[i], offer_prices[i])\n    plt.show()\n\n\nCredits\n-------\nThis Python code, written by Alex Kaszynski, is based on Java code written by Marius Johann, CEO keepa. Java source is can be found at `api_backend <https://github.com/keepacom/api_backend/>`_.\n\n\nLicense\n-------\nApache License, please see license file. Work is credited to both Alex Kaszynski and Marius Johann.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/akaszynski/keepa", "keywords": "keepa", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "keepa", "package_url": "https://pypi.org/project/keepa/", "platform": "", "project_url": "https://pypi.org/project/keepa/", "project_urls": {"Homepage": "https://github.com/akaszynski/keepa"}, "release_url": "https://pypi.org/project/keepa/0.20.0/", "requires_dist": null, "requires_python": "", "summary": "Interfaces with keepa.com", "version": "0.20.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/keepa/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/keepa.svg?logo=python&amp;logoColor=white\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34da368b114d461ae5207d34b31465a3d2912df0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6b656570612e7376673f6c6f676f3d707974686f6e266c6f676f436f6c6f723d7768697465\"></a>\n<a href=\"https://travis-ci.org/akaszynski/keepa\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/akaszynski/keepa.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/56fbee039114ec7673d5b68023e097012e0ebf48/68747470733a2f2f7472617669732d63692e6f72672f616b61737a796e736b692f6b656570612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://keepaapi.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e8bf8332ab3b1d2568f42aede59e3f179a376f1/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6b656570616170692f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh/akaszynski/keepa\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/akaszynski/keepa/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d2512ad4863746d41b47866e02350aaabac19a18/68747470733a2f2f636f6465636f762e696f2f67682f616b61737a796e736b692f6b656570612f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p>Python module to interface to <a href=\"https://keepa.com/\" rel=\"nofollow\">Keepa</a> to query for Amazon product information and history.</p>\n<p>Documentation can be found on readthedocs at <a href=\"https://keepaapi.readthedocs.io/en/latest/\" rel=\"nofollow\">keepa Documentation</a>.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Module is compatible with Python 2 and 3. keepa requires:</p>\n<blockquote>\n<ul>\n<li><tt>numpy</tt></li>\n<li><tt>requests</tt></li>\n</ul>\n</blockquote>\n<p>Product history can be plotted from the raw data when <tt>matplotlib</tt> is installed.</p>\n<p>Interfacing with the <tt>keepa</tt> requires an access key and a monthly subscription from <a href=\"https://keepa.com/#!api\" rel=\"nofollow\">Keepa API</a></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Module can be installed from PyPi with:</p>\n<pre>pip install keepa\n</pre>\n<p>Source code can also be downloaded from <a href=\"https://github.com/akaszynski/keepa\" rel=\"nofollow\">GitHub</a> and installed using <tt>python setup.py install</tt> or <tt>pip install .</tt></p>\n</div>\n<div id=\"brief-example\">\n<h2>Brief Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">keepa</span>\n<span class=\"n\">accesskey</span> <span class=\"o\">=</span> <span class=\"s1\">'XXXXXXXXXXXXXXXX'</span> <span class=\"c1\"># enter real access key here</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">keepa</span><span class=\"o\">.</span><span class=\"n\">Keepa</span><span class=\"p\">(</span><span class=\"n\">accesskey</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Single ASIN query</span>\n<span class=\"n\">products</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s1\">'B0088PUEPK'</span><span class=\"p\">)</span> <span class=\"c1\"># returns list of product data</span>\n\n<span class=\"c1\"># Plot result (requires matplotlib)</span>\n<span class=\"n\">keepa</span><span class=\"o\">.</span><span class=\"n\">plot_product</span><span class=\"p\">(</span><span class=\"n\">products</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n</pre>\n<div>\n<img alt=\"https://github.com/akaszynski/keepa/raw/master/docs/source/images/Product_Price_Plot.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a176e7247d3580a637b73fa8749511a942980cd5/68747470733a2f2f6769746875622e636f6d2f616b61737a796e736b692f6b656570612f7261772f6d61737465722f646f63732f736f757263652f696d616765732f50726f647563745f50726963655f506c6f742e706e67\" width=\"500pt\">\n<p>Product Price Plot</p>\n</div>\n<div>\n<img alt=\"https://github.com/akaszynski/keepa/raw/master/docs/source/images/Product_Offer_Plot.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/07b57a8f651457512803884643fb70abdc43db54/68747470733a2f2f6769746875622e636f6d2f616b61737a796e736b692f6b656570612f7261772f6d61737465722f646f63732f736f757263652f696d616765732f50726f647563745f4f666665725f506c6f742e706e67\" width=\"500pt\">\n<p>Product Offers Plot</p>\n</div>\n</div>\n<div id=\"detailed-example\">\n<h2>Detailed Example</h2>\n<p>Import interface and establish connection to server</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">keepa</span>\n<span class=\"n\">accesskey</span> <span class=\"o\">=</span> <span class=\"s1\">'XXXXXXXXXXXXXXXX'</span> <span class=\"c1\"># enter real access key here</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">keepa</span><span class=\"o\">.</span><span class=\"n\">Keepa</span><span class=\"p\">(</span><span class=\"n\">accesskey</span><span class=\"p\">)</span>\n</pre>\n<p>Single ASIN query</p>\n<pre><span class=\"n\">products</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s1\">'059035342X'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># See help(api.query) for available options when querying the API</span>\n</pre>\n<p>Multiple ASIN query from List</p>\n<pre><span class=\"n\">asins</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'0022841350'</span><span class=\"p\">,</span> <span class=\"s1\">'0022841369'</span><span class=\"p\">,</span> <span class=\"s1\">'0022841369'</span><span class=\"p\">,</span> <span class=\"s1\">'0022841369'</span><span class=\"p\">]</span>\n<span class=\"n\">products</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">asins</span><span class=\"p\">)</span>\n</pre>\n<p>Multiple ASIN query from numpy array</p>\n<pre><span class=\"n\">asins</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">asarray</span><span class=\"p\">([</span><span class=\"s1\">'0022841350'</span><span class=\"p\">,</span> <span class=\"s1\">'0022841369'</span><span class=\"p\">,</span> <span class=\"s1\">'0022841369'</span><span class=\"p\">,</span> <span class=\"s1\">'0022841369'</span><span class=\"p\">])</span>\n<span class=\"n\">products</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">asins</span><span class=\"p\">)</span>\n</pre>\n<p>Products is a list of product data with one entry per successful result from the Keepa server. Each entry is a dictionary containing the same product data available from <a href=\"http://www.amazon.com\" rel=\"nofollow\">Amazon</a>.</p>\n<pre><span class=\"c1\"># Available keys</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">products</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># Print ASIN and title</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'ASIN is '</span> <span class=\"o\">+</span> <span class=\"n\">products</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'asin'</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Title is '</span> <span class=\"o\">+</span> <span class=\"n\">products</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'title'</span><span class=\"p\">])</span>\n</pre>\n<p>The raw data is contained within each product result. Raw data is stored as a dictionary with each key paired with its associated time history.</p>\n<pre><span class=\"c1\"># Access new price history and associated time data</span>\n<span class=\"n\">newprice</span> <span class=\"o\">=</span> <span class=\"n\">products</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'data'</span><span class=\"p\">][</span><span class=\"s1\">'NEW'</span><span class=\"p\">]</span>\n<span class=\"n\">newpricetime</span> <span class=\"o\">=</span> <span class=\"n\">products</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'data'</span><span class=\"p\">][</span><span class=\"s1\">'NEW_time'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Can be plotted with matplotlib using:</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"n\">newpricetime</span><span class=\"p\">,</span> <span class=\"n\">newprice</span><span class=\"p\">,</span> <span class=\"n\">where</span><span class=\"o\">=</span><span class=\"s1\">'pre'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Keys can be listed by</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">products</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'data'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n</pre>\n<p>The product history can also be plotted from the module if <tt>matplotlib</tt> is installed</p>\n<pre><span class=\"n\">keepa</span><span class=\"o\">.</span><span class=\"n\">plot_product</span><span class=\"p\">(</span><span class=\"n\">products</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n</pre>\n<p>You can obtain the offers history for an ASIN (or multiple ASINs) using the <tt>offers</tt> parameter.  See the documentation at <a href=\"https://keepa.com/#!discuss/t/request-products/110/1\" rel=\"nofollow\">Request Products</a> for further details.</p>\n<pre><span class=\"n\">products</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">asins</span><span class=\"p\">,</span> <span class=\"n\">offers</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"n\">product</span> <span class=\"o\">=</span> <span class=\"n\">products</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">offers</span> <span class=\"o\">=</span> <span class=\"n\">product</span><span class=\"p\">[</span><span class=\"s1\">'offers'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># each offer contains the price history of each offer</span>\n<span class=\"n\">offer</span> <span class=\"o\">=</span> <span class=\"n\">offers</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">csv</span> <span class=\"o\">=</span> <span class=\"n\">offer</span><span class=\"p\">[</span><span class=\"s1\">'offerCSV'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># convert these values to numpy arrays</span>\n<span class=\"n\">times</span><span class=\"p\">,</span> <span class=\"n\">prices</span> <span class=\"o\">=</span> <span class=\"n\">keepa</span><span class=\"o\">.</span><span class=\"n\">convert_offer_history</span><span class=\"p\">(</span><span class=\"n\">csv</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># for a list of active offers, see</span>\n<span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"n\">product</span><span class=\"p\">[</span><span class=\"s1\">'liveOffersOrder'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># with this you can loop through active offers:</span>\n<span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"n\">product</span><span class=\"p\">[</span><span class=\"s1\">'liveOffersOrder'</span><span class=\"p\">]</span>\n<span class=\"n\">offer_times</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">offer_prices</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"n\">indices</span><span class=\"p\">:</span>\n    <span class=\"n\">csv</span> <span class=\"o\">=</span> <span class=\"n\">offers</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">][</span><span class=\"s1\">'offerCSV'</span><span class=\"p\">]</span>\n    <span class=\"n\">times</span><span class=\"p\">,</span> <span class=\"n\">prices</span> <span class=\"o\">=</span> <span class=\"n\">keepa</span><span class=\"o\">.</span><span class=\"n\">convert_offer_history</span><span class=\"p\">(</span><span class=\"n\">csv</span><span class=\"p\">)</span>\n    <span class=\"n\">offer_times</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">times</span><span class=\"p\">)</span>\n    <span class=\"n\">offer_prices</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">prices</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># you can aggregate these using np.hstack or plot at the history individually</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">offer_prices</span><span class=\"p\">)):</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"n\">offer_times</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">offer_prices</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>This Python code, written by Alex Kaszynski, is based on Java code written by Marius Johann, CEO keepa. Java source is can be found at <a href=\"https://github.com/keepacom/api_backend/\" rel=\"nofollow\">api_backend</a>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Apache License, please see license file. Work is credited to both Alex Kaszynski and Marius Johann.</p>\n</div>\n\n          </div>"}, "last_serial": 7147248, "releases": {"0.16.0": [{"comment_text": "", "digests": {"md5": "6063200bf335af580bf3744d008c17b2", "sha256": "28dd566392fdc69057518b8eba4ab92058819c0b7e92b8b7d7b3b3f06d933414"}, "downloads": -1, "filename": "keepa-0.16.0.tar.gz", "has_sig": false, "md5_digest": "6063200bf335af580bf3744d008c17b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14416, "upload_time": "2019-02-23T13:46:05", "upload_time_iso_8601": "2019-02-23T13:46:05.545754Z", "url": "https://files.pythonhosted.org/packages/ce/1f/e88b41ee52fa7dde2f686fb3c8a44619464bf50ff2e9e5b9cd1f5f071fc4/keepa-0.16.0.tar.gz", "yanked": false}], "0.16.1": [{"comment_text": "", "digests": {"md5": "103c3de77a6019593269bc31bcdb145c", "sha256": "8156357439df88ec57eaea2e65c676f0d3dc81c4f182790ba6c86cb5cbf85143"}, "downloads": -1, "filename": "keepa-0.16.1.tar.gz", "has_sig": false, "md5_digest": "103c3de77a6019593269bc31bcdb145c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14423, "upload_time": "2019-02-23T14:30:00", "upload_time_iso_8601": "2019-02-23T14:30:00.803744Z", "url": "https://files.pythonhosted.org/packages/51/42/fa6a302d2d709e04b9c1d5c527a8b7a1fac907d5b217442197a4f0717796/keepa-0.16.1.tar.gz", "yanked": false}], "0.16.2": [{"comment_text": "", "digests": {"md5": "ba4cd4a7523aab7e4a91500363188874", "sha256": "65cffef5edfae68b61637a11d54136460820fcd30f140f33fb7974c406c3c98a"}, "downloads": -1, "filename": "keepa-0.16.2.tar.gz", "has_sig": false, "md5_digest": "ba4cd4a7523aab7e4a91500363188874", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14427, "upload_time": "2019-02-23T14:37:48", "upload_time_iso_8601": "2019-02-23T14:37:48.219099Z", "url": "https://files.pythonhosted.org/packages/87/dc/e45e9babc63cd9acee21da8a8ba8fec9eca1e429b1d40b95b3c5548bb293/keepa-0.16.2.tar.gz", "yanked": false}], "0.16.3": [{"comment_text": "", "digests": {"md5": "5e1b493a48fc9c0f723f95d8c5cb2db5", "sha256": "6fb1dc93ae6e41e2c36a29791237e194627f76d92c4b4b255e28bbf4f20c8097"}, "downloads": -1, "filename": "keepa-0.16.3.tar.gz", "has_sig": false, "md5_digest": "5e1b493a48fc9c0f723f95d8c5cb2db5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14471, "upload_time": "2019-02-27T11:21:17", "upload_time_iso_8601": "2019-02-27T11:21:17.378070Z", "url": "https://files.pythonhosted.org/packages/8c/4b/3713be9635359482001cf725e987bf56afc694ac68ca80d82068b01252a1/keepa-0.16.3.tar.gz", "yanked": false}], "0.17.0": [{"comment_text": "", "digests": {"md5": "c21467537224c502db05b854b799d294", "sha256": "ba4e709b1e8942ebf8ddfe1166116be24cda311e582479fbafa5f51a64fe176a"}, "downloads": -1, "filename": "keepa-0.17.0.tar.gz", "has_sig": false, "md5_digest": "c21467537224c502db05b854b799d294", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14835, "upload_time": "2019-04-06T21:30:02", "upload_time_iso_8601": "2019-04-06T21:30:02.948953Z", "url": "https://files.pythonhosted.org/packages/8b/d8/8a62a7638388e971d3c34aeb5bf9f05c21e0da4cc0cec079155d4e678a7b/keepa-0.17.0.tar.gz", "yanked": false}], "0.17.1": [{"comment_text": "", "digests": {"md5": "5eb3415094efbbcc4ea5372c3a1b719d", "sha256": "0664b9c976db836f0021fbdb5757d30a00342f74c211bd164671ac4a34c00444"}, "downloads": -1, "filename": "keepa-0.17.1.tar.gz", "has_sig": false, "md5_digest": "5eb3415094efbbcc4ea5372c3a1b719d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14149, "upload_time": "2019-04-09T09:52:49", "upload_time_iso_8601": "2019-04-09T09:52:49.045384Z", "url": "https://files.pythonhosted.org/packages/53/27/19b3131383374bd7b5939c08133956412b926e9b995732b3422a2138e931/keepa-0.17.1.tar.gz", "yanked": false}], "0.17.2": [{"comment_text": "", "digests": {"md5": "9aff14d056f26f8dee1855aadfc54417", "sha256": "db7ac3ede7589f8b3c0048be1365da412fdabdefbc65630f9067dd4da9c9eca3"}, "downloads": -1, "filename": "keepa-0.17.2.tar.gz", "has_sig": false, "md5_digest": "9aff14d056f26f8dee1855aadfc54417", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14153, "upload_time": "2019-04-09T15:01:52", "upload_time_iso_8601": "2019-04-09T15:01:52.589268Z", "url": "https://files.pythonhosted.org/packages/91/3c/6af19fb6c7222922407ef15515ba49af6f7055b22510db4d8e2fac1d7811/keepa-0.17.2.tar.gz", "yanked": false}], "0.18.0": [{"comment_text": "", "digests": {"md5": "51d1f10c50e6818750da428100036539", "sha256": "f74a63579c8becc16a023f98f4df06106566db525a9c22bfce12e51e0a658c5d"}, "downloads": -1, "filename": "keepa-0.18.0.tar.gz", "has_sig": false, "md5_digest": "51d1f10c50e6818750da428100036539", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24420, "upload_time": "2019-06-12T07:35:50", "upload_time_iso_8601": "2019-06-12T07:35:50.058642Z", "url": "https://files.pythonhosted.org/packages/62/71/f8fdd8e7bc5b39688713892a01f28e44ce59496ec6ca8a99515a67b1ede2/keepa-0.18.0.tar.gz", "yanked": false}], "0.19.0": [{"comment_text": "", "digests": {"md5": "5f4563ab75f56b35aab10bbbecda7993", "sha256": "8db0366a216a95c42bf7c316d16a98af17466a3303f604c56528fbbf6de3e720"}, "downloads": -1, "filename": "keepa-0.19.0.tar.gz", "has_sig": false, "md5_digest": "5f4563ab75f56b35aab10bbbecda7993", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23582, "upload_time": "2019-09-12T16:36:50", "upload_time_iso_8601": "2019-09-12T16:36:50.842785Z", "url": "https://files.pythonhosted.org/packages/7b/6a/7121db5ac786c2408d044cad77a8a89f2560e13c50e0767d1297dc667762/keepa-0.19.0.tar.gz", "yanked": false}], "0.19.1": [{"comment_text": "", "digests": {"md5": "1d5e8189eb8fb4054c49e28fb875257c", "sha256": "3523d3c59995a56370c2e9c023b62aecb05d350967ffca4aa0be8eab2c408bff"}, "downloads": -1, "filename": "keepa-0.19.1.tar.gz", "has_sig": false, "md5_digest": "1d5e8189eb8fb4054c49e28fb875257c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23580, "upload_time": "2019-09-16T07:49:45", "upload_time_iso_8601": "2019-09-16T07:49:45.482600Z", "url": "https://files.pythonhosted.org/packages/44/fa/2ddde1dbebccd777ffc748ed578748ef62b0a7f45eefb2d92902df9b9517/keepa-0.19.1.tar.gz", "yanked": false}], "0.19.2": [{"comment_text": "", "digests": {"md5": "6122ec4e030702a4b4774bf5f21db51f", "sha256": "a9bceb3f74b90b81ad6978fcb63541f2b2f8491006dd8f800df196597157411d"}, "downloads": -1, "filename": "keepa-0.19.2.tar.gz", "has_sig": false, "md5_digest": "6122ec4e030702a4b4774bf5f21db51f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23586, "upload_time": "2019-09-19T14:29:54", "upload_time_iso_8601": "2019-09-19T14:29:54.625285Z", "url": "https://files.pythonhosted.org/packages/80/a2/25098ec662f1cd42194abf618fca1559ddcc8990da007b98115b0364618b/keepa-0.19.2.tar.gz", "yanked": false}], "0.19.3": [{"comment_text": "", "digests": {"md5": "915873a227418acfd95ca478b1819084", "sha256": "91bb494eeb28d3216145373c94fecc4ff65ab44e51de79aa93a54ce9f015a56d"}, "downloads": -1, "filename": "keepa-0.19.3.tar.gz", "has_sig": false, "md5_digest": "915873a227418acfd95ca478b1819084", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24193, "upload_time": "2020-03-14T19:45:58", "upload_time_iso_8601": "2020-03-14T19:45:58.936870Z", "url": "https://files.pythonhosted.org/packages/ed/a8/95942816b7229e022a2ba9fb02db87b2f116fec9fde0d9f0ef5fe7abdb5d/keepa-0.19.3.tar.gz", "yanked": false}], "0.20.0": [{"comment_text": "", "digests": {"md5": "171add5f0d53e868875213189263a391", "sha256": "e653444c47dadcc22f3db3848f2b37a084fc655d8f1e8d8a87a23ab7733db244"}, "downloads": -1, "filename": "keepa-0.20.0.tar.gz", "has_sig": false, "md5_digest": "171add5f0d53e868875213189263a391", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24951, "upload_time": "2020-05-01T19:17:38", "upload_time_iso_8601": "2020-05-01T19:17:38.476225Z", "url": "https://files.pythonhosted.org/packages/0e/42/a6b71e8affba1944a4ae364e6790b3719713a377984b6da98f8d6a3d6b52/keepa-0.20.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "171add5f0d53e868875213189263a391", "sha256": "e653444c47dadcc22f3db3848f2b37a084fc655d8f1e8d8a87a23ab7733db244"}, "downloads": -1, "filename": "keepa-0.20.0.tar.gz", "has_sig": false, "md5_digest": "171add5f0d53e868875213189263a391", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24951, "upload_time": "2020-05-01T19:17:38", "upload_time_iso_8601": "2020-05-01T19:17:38.476225Z", "url": "https://files.pythonhosted.org/packages/0e/42/a6b71e8affba1944a4ae364e6790b3719713a377984b6da98f8d6a3d6b52/keepa-0.20.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:22 2020"}