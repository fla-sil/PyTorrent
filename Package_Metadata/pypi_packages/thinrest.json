{"info": {"author": "Anurag Agarwal", "author_email": "anurag26@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# thinrest\n\n#### Very thin layer over Django to implement REST API using [Tastypie library](https://github.com/django-tastypie/django-tastypie).\n\n## Technology\n* Python 2.7\n* Django 1.5.12\n* Tastypie 0.12.2\n\n## Aim\n\nTo build a simple interface that can provide for CRUD operations for two types of Database tables:\n\n1. Column based e.g. EMPLOYEE(FIRST_NAME, LAST_NAME, ADDRESS, CITY, STATE, ZIP)\n\n2. Key Value pairs e.g. SYSTEM_SETTINGS(SETTING_NAME, SETTING_VALUE)\n\n## Quick start\n\n1. ```pip install thinrest```\n\n2. Add `thinrest` to your `INSTALLED_APPS` setting:\n\n    ```python\n        INSTALLED_APPS = (\n            ...\n            'thinrest',\n        )\n    ```\n\n3. Include the thinrest URLs\n\n    ```python\n    patterns = ('',\n        ...\n        url(r'^thinrest/', include('thinrest.urls')),\n    )\n    ```\n\n## Usage\n\n####Employee Table\n\nSample Data:\n\n```{\n    \"fields\": {\n        \"first_name\": \"Anurag\",\n        \"last_name\": \"Agarwal\",\n        \"address\": \"Wakad\",\n        \"city\": \"Pune\",\n        \"state\": \"Maharashtra\",\n        \"zip_code\": \"411057\"\n    },\n    \"model\": \"thinrest.employee\",\n    \"pk\":1\n}```\n\nEmployee LIST: GET http://www.example.com/thinrest/api/v1/employee?format=json\n\nEmployee DETAIL: GET http://www.example.com/thinrest/api/v1/employee/1?format=json\n\nEmployee CREATE / UPDATE: POST http://www.example.com/thinrest/api/v1/employee/\n\nEmployee DETELE: DELETE http://www.example.com/thinrest/api/v1/employee/1/\n\n####Settings Table\n\nSettings table is a key-value pair type table. Passing `id` to REST will not work for this type of table. So little tweaking is done in api of this table to handle column `name` as input param.\n\nSample Data:\n\n```{\n    \"fields\": {\n        \"name\": \"email\",\n        \"value\": 1\n    },\n    \"model\": \"thinrest.systemsetting\",\n    \"pk\": 1\n}```\n\nSetting LIST: GET http://www.example.com/thinrest/api/v1/setting?format=json\n\nSetting DETAIL: GET http://www.example.com/thinrest/api/v1/setting/email?format=json\n\nSetting CREATE / UPDATE: POST http://www.example.com/thinrest/api/v1/setting/\n\nSetting DETELE: DELETE http://www.example.com/thinrest/api/v1/employee/setting/email/\n\n## Running Test\n\n```python manage.py test```\n\n## Bugs & Contributions\n\nPlease report bugs by opening an issue", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/anuragal/thinrest", "keywords": "rest implementation tastypie", "license": "The MIT License (MIT)\n\nCopyright (c) 2015 anuragal\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "thinrest", "package_url": "https://pypi.org/project/thinrest/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/thinrest/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/anuragal/thinrest"}, "release_url": "https://pypi.org/project/thinrest/3.0.0/", "requires_dist": null, "requires_python": null, "summary": "Rest implementation using Tastypie.", "version": "3.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # thinrest<br><br>#### Very thin layer over Django to implement REST API using [Tastypie library](https://github.com/django-tastypie/django-tastypie).<br><br>## Technology<br>* Python 2.7<br>* Django 1.5.12<br>* Tastypie 0.12.2<br><br>## Aim<br><br>To build a simple interface that can provide for CRUD operations for two types of Database tables:<br><br>1. Column based e.g. EMPLOYEE(FIRST_NAME, LAST_NAME, ADDRESS, CITY, STATE, ZIP)<br><br>2. Key Value pairs e.g. SYSTEM_SETTINGS(SETTING_NAME, SETTING_VALUE)<br><br>## Quick start<br><br>1. ```pip install thinrest```<br><br>2. Add `thinrest` to your `INSTALLED_APPS` setting:<br><br>    ```python<br>        INSTALLED_APPS = (<br>            ...<br>            'thinrest',<br>        )<br>    ```<br><br>3. Include the thinrest URLs<br><br>    ```python<br>    patterns = ('',<br>        ...<br>        url(r'^thinrest/', include('thinrest.urls')),<br>    )<br>    ```<br><br>## Usage<br><br>####Employee Table<br><br>Sample Data:<br><br>```{<br>    \"fields\": {<br>        \"first_name\": \"Anurag\",<br>        \"last_name\": \"Agarwal\",<br>        \"address\": \"Wakad\",<br>        \"city\": \"Pune\",<br>        \"state\": \"Maharashtra\",<br>        \"zip_code\": \"411057\"<br>    },<br>    \"model\": \"thinrest.employee\",<br>    \"pk\":1<br>}```<br><br>Employee LIST: GET http://www.example.com/thinrest/api/v1/employee?format=json<br><br>Employee DETAIL: GET http://www.example.com/thinrest/api/v1/employee/1?format=json<br><br>Employee CREATE / UPDATE: POST http://www.example.com/thinrest/api/v1/employee/<br><br>Employee DETELE: DELETE http://www.example.com/thinrest/api/v1/employee/1/<br><br>####Settings Table<br><br>Settings table is a key-value pair type table. Passing `id` to REST will not work for this type of table. So little tweaking is done in api of this table to handle column `name` as input param.<br><br>Sample Data:<br><br>```{<br>    \"fields\": {<br>        \"name\": \"email\",<br>        \"value\": 1<br>    },<br>    \"model\": \"thinrest.systemsetting\",<br>    \"pk\": 1<br>}```<br><br>Setting LIST: GET http://www.example.com/thinrest/api/v1/setting?format=json<br><br>Setting DETAIL: GET http://www.example.com/thinrest/api/v1/setting/email?format=json<br><br>Setting CREATE / UPDATE: POST http://www.example.com/thinrest/api/v1/setting/<br><br>Setting DETELE: DELETE http://www.example.com/thinrest/api/v1/employee/setting/email/<br><br>## Running Test<br><br>```python manage.py test```<br><br>## Bugs &amp; Contributions<br><br>Please report bugs by opening an issue\n          </div>"}, "last_serial": 2315370, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "267e036254ef33ec94702fbe1275990b", "sha256": "e8348c66feb813e6a84d144bfea9c62238a2843e3dadf5e5ed36e2ab0ea09e52"}, "downloads": -1, "filename": "thinrest-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "267e036254ef33ec94702fbe1275990b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10739, "upload_time": "2015-10-04T15:28:32", "upload_time_iso_8601": "2015-10-04T15:28:32.597762Z", "url": "https://files.pythonhosted.org/packages/ad/33/cf8d41228801afc6dfde9af2016dda51f85620148c9080304610f43757ba/thinrest-1.0.0-py2-none-any.whl", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "d8be773b32ba1af43412f488e291619e", "sha256": "987ec75f1d4dd5ea9d2598207d0ab40ce7d19f5a3ac4250b0ac55bc73d038a54"}, "downloads": -1, "filename": "thinrest-2.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "d8be773b32ba1af43412f488e291619e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10739, "upload_time": "2015-10-04T15:44:13", "upload_time_iso_8601": "2015-10-04T15:44:13.528271Z", "url": "https://files.pythonhosted.org/packages/85/29/e78757a6d7845185e7fbec3246014fb1a5a6b861da83b89ea551c3784e0a/thinrest-2.0.0-py2-none-any.whl", "yanked": false}], "3.0.0": []}, "urls": [], "timestamp": "Fri May  8 02:53:55 2020"}