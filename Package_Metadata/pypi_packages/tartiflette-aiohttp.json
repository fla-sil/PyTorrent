{"info": {"author": "Dailymotion Core API Team", "author_email": "team@tartiflette.io", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries"], "description": "![Tartiflette aiohttp](github-landing.png)\n\n**tartiflette-aiohttp** is a wrapper of `aiohttp` which includes the Tartiflette GraphQL Engine. You can take a look at the [Tartiflette API documentation](https://tartiflette.io/docs/welcome/what-is-tartiflette).\n\n## Usage\n\n```python\n# main.py\nfrom aiohttp import web\nfrom tartiflette import Resolver\nfrom tartiflette_aiohttp import register_graphql_handlers\n\n@Resolver(\"Query.hello\")\nasync def resolver_hello(parent, args, ctx, info):\n    return \"hello \" + args[\"name\"]\n\nsdl = \"\"\"\n    type Query {\n        hello(name: String): String\n    }\n\"\"\"\n\nweb.run_app(\n    register_graphql_handlers(\n        web.Application(),\n        engine_sdl=sdl\n    )\n)\n```\n\nSave the file and start the server.\n\n```bash\n$ python main.py\n======== Running on http://0.0.0.0:8080 ========\n(Press CTRL+C to quit)\n```\n\n> Note: The server will be listening on the `/graphql` path by default.\n\nSend a request to your server\n```\ncurl -v -d '{\"query\": \"query { hello(name: \"Chuck\") }\"}' -H \"Content-Type: application/json\" http://localhost:8080/graphql\n```\n\n## Installation\n\n`tartiflette-aiohttp` is available on [pypi.org](https://pypi.org/project/tartiflette-aiohttp/).\n\n**WARNING**: Do not forget to install the [tartiflette dependencies beforehand as explained in the tutorial](https://tartiflette.io/docs/tutorial/install-tartiflette/).\n\n```bash\npip install tartiflette-aiohttp\n```\n\n## How to use\n\n### Use with built-in Tartiflette Engine\n\nThe basic and common way to use Tartiflette with `aiohttp`, is to create an `aiohttp` `web.Application` and use the `register_graphql_handlers` helper to bind Tartiflette and `aiohttp` together. `engine_*` parameters will be forwarded to the built-in [tartiflette](https://github.com/tartiflette/tartiflette) engine instance.\n\n```python\nfrom aiohttp import web\nfrom tartiflette_aiohttp import register_graphql_handlers\n\nsdl = \"\"\"\n    type Query {\n        hello(name: String): String\n    }\n\"\"\"\n\nctx = {\n    'user_service': user_service\n}\n\nweb.run_app(\n    register_graphql_handlers(\n        app=web.Application(),\n        engine_sdl=sdl,\n        engine_schema_name=\"default\",\n        executor_context=ctx,\n        executor_http_endpoint='/graphql',\n        executor_http_methods=['POST', 'GET']\n    )\n)\n```\n\n**Parameters**:\n\n* **engine_sdl**: Contains the [Schema Definition Language](https://graphql.org/learn/schema/)\n  - Can be a string which contains the SDL\n  - Can be an array of strings, which contain the SDLs\n  - Can be a path to an SDL\n  - Can be an array of paths which contain the SDLs\n* **engine_schema_name**: Name of the schema used by the built-in engine. Useful for advanced use-cases, see [Schema Registry API](https://tartiflette.io/docs/api/schema-registry).\n* **executor_context**: Context which will be passed to each resolver (as a dict). Very useful for passing handlers to services, functions or data that you want to use in your resolvers. The context reference is **unique** per request, a shallow copy is created based on the context passed. \n  - **req**: Request object from `aiohttp`\n  - **app**: Application object from `aiohttp`\n* **executor_http_endpoint**: Endpoint where the GraphQL Engine will be attached, by default on `/graphql`\n* **executor_http_methods**: HTTP Methods where the GraphQL Engine will be attached, by default on **POST** and **GET**.\n\n### Use with custom Tartiflette engine\n\nIn the case you already have a Tartiflette Engine instance, or, you do not want to use the built-in instance. You can pass an existing instance to the `register_graphql_handlers` helper.\n\n```python\n# main.py\nfrom aiohttp import web\nfrom tartiflette import Resolver, Engine\nfrom tartiflette_aiohttp import register_graphql_handlers\n\n@Resolver(\"Query.hello\")\nasync def resolver_hello(parent, args, ctx, info):\n    return \"hello \" + args[\"name\"]\n\nsdl = \"\"\"\n    type Query {\n        hello(name: String): String\n    }\n\"\"\"\n\nengine = Engine(sdl)\n\nctx = {\n    'user_service': user_service\n}\n\nweb.run_app(\n    register_graphql_handlers(\n        app=web.Application(),\n        engine=engine,\n        executor_context=ctx,\n        executor_http_endpoint='/graphql',\n        executor_http_methods=['POST', 'GET']\n    )\n)\n```\n\n**Parameters**:\n\n* **engine**: an instance of the Tartiflette Engine\n* **executor_context**: Context which will be passed to each resolver (as a dict). Very useful for passing handlers to services, functions or data that you want to use in your resolvers.\n  - **req**: Request object from `aiohttp`\n  - **app**: Application object from `aiohttp`\n* **executor_http_endpoint**: Endpoint where the GraphQL Engine will be attached, by default on `/graphql`\n* **executor_http_methods**: HTTP Methods where the GraphQL Engine will be attached, by default on **POST** and **GET**\n\n### Tartiflette with subscriptions\n\nTartiflette embeds an easy way to deal with subscriptions. The only thing to do is\nto fill in the `subscription_ws_endpoint` parameter and everything will work out\nof the box with `aiohttp` WebSockets. You can see a full example\n[here](examples/aiohttp/dogs).\n\n### Enable GraphiQL handler\n\nTartiflette allows you to set up an instance of GraphiQL easily to quickly test\nyour queries. The easiest way to do that is to set the `graphiql_enabled`\nparameter to `True`. Then, you can customize your GraphiQL instance by filling\nthe `graphiql_options` parameter as bellow:\n\n```python\nfrom aiohttp import web\n\nfrom tartiflette_aiohttp import register_graphql_handlers\n\n\n_SDL = \"\"\"\n    type Query {\n        hello(name: String): String\n    }\n\"\"\"\n\nweb.run_app(\n    register_graphql_handlers(\n        app=web.Application(),\n        engine_sdl=_SDL,\n        graphiql_enabled=True,\n        graphiql_options={  # This is optional\n            \"endpoint\": \"/explorer\",  # Default: `/graphiql`,\n            \"default_query\": \"\"\"\n                query Hello($name: String) {\n                  hello(name: $name)\n                }\n            \"\"\",\n            \"default_variables\": {\n                \"name\": \"Bob\",\n            },\n            \"default_headers\": {\n                \"Authorization\": \"Bearer <default_token>\",\n            },\n        },\n    )\n)\n```\n\n**Parameters**:\n\n* **engine_sdl**: Contains the [Schema Definition Language](https://graphql.org/learn/schema/)\n  - Can be a string which contains the SDL\n  - Can be an array of strings, which contain the SDLs\n  - Can be a path to an SDL\n  - Can be an array of paths which contain the SDLs\n* **graphiql_enabled** *(Optional[bool] = False)*: Determines whether or not we should include a GraphiQL interface\n* **graphiql_options** *(Optional[dict] = None)*: Customization options for the GraphiQL instance:\n  - **endpoint** *(Optional[str] = \"/graphiql\")*: allows to customize the GraphiQL interface endpoint path\n  - **default_query** *(Optional[str] = None)*: allows you to pre-fill the GraphiQL interface with a default query\n  - **default_variables** *(Optional[dict] = None)*: allows you to pre-fill the GraphiQL interface with default variables\n  - **default_headers** *(Optional[dict] = None)*: allows you to add default headers to each request sent through the GraphiQL instance\n\n\n## Advance Use Case\n\n### Response header manipulation from resolver\n\nIt is possible to set header to the response directly from the resolver using `set_response_headers`\u00a0method like:\n\n```python\nfrom tartiflette_aiohttp import set_response_headers\n\n@Resolver(\"Query.X\")\nasync def resolver_x(parent_result, args, ctx, info):\n    # do things\n    set_response_headers({\"Header\": \"Value\", \"AnotherHeader\": \"AnotherValue\"})\n    return result\n```\n\n> Note that this feature uses ContextVar and will only works for python 3.7.1 and later.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tartiflette/tartiflette-aiohttp", "keywords": "api graphql protocol api rest relay tartiflette dailymotion", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tartiflette-aiohttp", "package_url": "https://pypi.org/project/tartiflette-aiohttp/", "platform": "", "project_url": "https://pypi.org/project/tartiflette-aiohttp/", "project_urls": {"Homepage": "https://github.com/tartiflette/tartiflette-aiohttp"}, "release_url": "https://pypi.org/project/tartiflette-aiohttp/1.2.0/", "requires_dist": null, "requires_python": "", "summary": "Runs a Tartiflette GraphQL Engine through aiohttp", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Tartiflette aiohttp\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45592d8c785984941bae9c4ff9c7076672655483/6769746875622d6c616e64696e672e706e67\"></p>\n<p><strong>tartiflette-aiohttp</strong> is a wrapper of <code>aiohttp</code> which includes the Tartiflette GraphQL Engine. You can take a look at the <a href=\"https://tartiflette.io/docs/welcome/what-is-tartiflette\" rel=\"nofollow\">Tartiflette API documentation</a>.</p>\n<h2>Usage</h2>\n<pre><span class=\"c1\"># main.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">web</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tartiflette</span> <span class=\"kn\">import</span> <span class=\"n\">Resolver</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tartiflette_aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">register_graphql_handlers</span>\n\n<span class=\"nd\">@Resolver</span><span class=\"p\">(</span><span class=\"s2\">\"Query.hello\"</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">resolver_hello</span><span class=\"p\">(</span><span class=\"n\">parent</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"n\">info</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s2\">\"hello \"</span> <span class=\"o\">+</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">]</span>\n\n<span class=\"n\">sdl</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">    type Query {</span>\n<span class=\"s2\">        hello(name: String): String</span>\n<span class=\"s2\">    }</span>\n<span class=\"s2\">\"\"\"</span>\n\n<span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">run_app</span><span class=\"p\">(</span>\n    <span class=\"n\">register_graphql_handlers</span><span class=\"p\">(</span>\n        <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">(),</span>\n        <span class=\"n\">engine_sdl</span><span class=\"o\">=</span><span class=\"n\">sdl</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Save the file and start the server.</p>\n<pre>$ python main.py\n<span class=\"o\">========</span> Running on http://0.0.0.0:8080 <span class=\"o\">========</span>\n<span class=\"o\">(</span>Press CTRL+C to quit<span class=\"o\">)</span>\n</pre>\n<blockquote>\n<p>Note: The server will be listening on the <code>/graphql</code> path by default.</p>\n</blockquote>\n<p>Send a request to your server</p>\n<pre><code>curl -v -d '{\"query\": \"query { hello(name: \"Chuck\") }\"}' -H \"Content-Type: application/json\" http://localhost:8080/graphql\n</code></pre>\n<h2>Installation</h2>\n<p><code>tartiflette-aiohttp</code> is available on <a href=\"https://pypi.org/project/tartiflette-aiohttp/\" rel=\"nofollow\">pypi.org</a>.</p>\n<p><strong>WARNING</strong>: Do not forget to install the <a href=\"https://tartiflette.io/docs/tutorial/install-tartiflette/\" rel=\"nofollow\">tartiflette dependencies beforehand as explained in the tutorial</a>.</p>\n<pre>pip install tartiflette-aiohttp\n</pre>\n<h2>How to use</h2>\n<h3>Use with built-in Tartiflette Engine</h3>\n<p>The basic and common way to use Tartiflette with <code>aiohttp</code>, is to create an <code>aiohttp</code> <code>web.Application</code> and use the <code>register_graphql_handlers</code> helper to bind Tartiflette and <code>aiohttp</code> together. <code>engine_*</code> parameters will be forwarded to the built-in <a href=\"https://github.com/tartiflette/tartiflette\" rel=\"nofollow\">tartiflette</a> engine instance.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">web</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tartiflette_aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">register_graphql_handlers</span>\n\n<span class=\"n\">sdl</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">    type Query {</span>\n<span class=\"s2\">        hello(name: String): String</span>\n<span class=\"s2\">    }</span>\n<span class=\"s2\">\"\"\"</span>\n\n<span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'user_service'</span><span class=\"p\">:</span> <span class=\"n\">user_service</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">run_app</span><span class=\"p\">(</span>\n    <span class=\"n\">register_graphql_handlers</span><span class=\"p\">(</span>\n        <span class=\"n\">app</span><span class=\"o\">=</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">(),</span>\n        <span class=\"n\">engine_sdl</span><span class=\"o\">=</span><span class=\"n\">sdl</span><span class=\"p\">,</span>\n        <span class=\"n\">engine_schema_name</span><span class=\"o\">=</span><span class=\"s2\">\"default\"</span><span class=\"p\">,</span>\n        <span class=\"n\">executor_context</span><span class=\"o\">=</span><span class=\"n\">ctx</span><span class=\"p\">,</span>\n        <span class=\"n\">executor_http_endpoint</span><span class=\"o\">=</span><span class=\"s1\">'/graphql'</span><span class=\"p\">,</span>\n        <span class=\"n\">executor_http_methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">,</span> <span class=\"s1\">'GET'</span><span class=\"p\">]</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><strong>engine_sdl</strong>: Contains the <a href=\"https://graphql.org/learn/schema/\" rel=\"nofollow\">Schema Definition Language</a>\n<ul>\n<li>Can be a string which contains the SDL</li>\n<li>Can be an array of strings, which contain the SDLs</li>\n<li>Can be a path to an SDL</li>\n<li>Can be an array of paths which contain the SDLs</li>\n</ul>\n</li>\n<li><strong>engine_schema_name</strong>: Name of the schema used by the built-in engine. Useful for advanced use-cases, see <a href=\"https://tartiflette.io/docs/api/schema-registry\" rel=\"nofollow\">Schema Registry API</a>.</li>\n<li><strong>executor_context</strong>: Context which will be passed to each resolver (as a dict). Very useful for passing handlers to services, functions or data that you want to use in your resolvers. The context reference is <strong>unique</strong> per request, a shallow copy is created based on the context passed.\n<ul>\n<li><strong>req</strong>: Request object from <code>aiohttp</code></li>\n<li><strong>app</strong>: Application object from <code>aiohttp</code></li>\n</ul>\n</li>\n<li><strong>executor_http_endpoint</strong>: Endpoint where the GraphQL Engine will be attached, by default on <code>/graphql</code></li>\n<li><strong>executor_http_methods</strong>: HTTP Methods where the GraphQL Engine will be attached, by default on <strong>POST</strong> and <strong>GET</strong>.</li>\n</ul>\n<h3>Use with custom Tartiflette engine</h3>\n<p>In the case you already have a Tartiflette Engine instance, or, you do not want to use the built-in instance. You can pass an existing instance to the <code>register_graphql_handlers</code> helper.</p>\n<pre><span class=\"c1\"># main.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">web</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tartiflette</span> <span class=\"kn\">import</span> <span class=\"n\">Resolver</span><span class=\"p\">,</span> <span class=\"n\">Engine</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tartiflette_aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">register_graphql_handlers</span>\n\n<span class=\"nd\">@Resolver</span><span class=\"p\">(</span><span class=\"s2\">\"Query.hello\"</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">resolver_hello</span><span class=\"p\">(</span><span class=\"n\">parent</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"n\">info</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s2\">\"hello \"</span> <span class=\"o\">+</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">]</span>\n\n<span class=\"n\">sdl</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">    type Query {</span>\n<span class=\"s2\">        hello(name: String): String</span>\n<span class=\"s2\">    }</span>\n<span class=\"s2\">\"\"\"</span>\n\n<span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">Engine</span><span class=\"p\">(</span><span class=\"n\">sdl</span><span class=\"p\">)</span>\n\n<span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'user_service'</span><span class=\"p\">:</span> <span class=\"n\">user_service</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">run_app</span><span class=\"p\">(</span>\n    <span class=\"n\">register_graphql_handlers</span><span class=\"p\">(</span>\n        <span class=\"n\">app</span><span class=\"o\">=</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">(),</span>\n        <span class=\"n\">engine</span><span class=\"o\">=</span><span class=\"n\">engine</span><span class=\"p\">,</span>\n        <span class=\"n\">executor_context</span><span class=\"o\">=</span><span class=\"n\">ctx</span><span class=\"p\">,</span>\n        <span class=\"n\">executor_http_endpoint</span><span class=\"o\">=</span><span class=\"s1\">'/graphql'</span><span class=\"p\">,</span>\n        <span class=\"n\">executor_http_methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">,</span> <span class=\"s1\">'GET'</span><span class=\"p\">]</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><strong>engine</strong>: an instance of the Tartiflette Engine</li>\n<li><strong>executor_context</strong>: Context which will be passed to each resolver (as a dict). Very useful for passing handlers to services, functions or data that you want to use in your resolvers.\n<ul>\n<li><strong>req</strong>: Request object from <code>aiohttp</code></li>\n<li><strong>app</strong>: Application object from <code>aiohttp</code></li>\n</ul>\n</li>\n<li><strong>executor_http_endpoint</strong>: Endpoint where the GraphQL Engine will be attached, by default on <code>/graphql</code></li>\n<li><strong>executor_http_methods</strong>: HTTP Methods where the GraphQL Engine will be attached, by default on <strong>POST</strong> and <strong>GET</strong></li>\n</ul>\n<h3>Tartiflette with subscriptions</h3>\n<p>Tartiflette embeds an easy way to deal with subscriptions. The only thing to do is\nto fill in the <code>subscription_ws_endpoint</code> parameter and everything will work out\nof the box with <code>aiohttp</code> WebSockets. You can see a full example\n<a href=\"examples/aiohttp/dogs\" rel=\"nofollow\">here</a>.</p>\n<h3>Enable GraphiQL handler</h3>\n<p>Tartiflette allows you to set up an instance of GraphiQL easily to quickly test\nyour queries. The easiest way to do that is to set the <code>graphiql_enabled</code>\nparameter to <code>True</code>. Then, you can customize your GraphiQL instance by filling\nthe <code>graphiql_options</code> parameter as bellow:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">web</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">tartiflette_aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">register_graphql_handlers</span>\n\n\n<span class=\"n\">_SDL</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">    type Query {</span>\n<span class=\"s2\">        hello(name: String): String</span>\n<span class=\"s2\">    }</span>\n<span class=\"s2\">\"\"\"</span>\n\n<span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">run_app</span><span class=\"p\">(</span>\n    <span class=\"n\">register_graphql_handlers</span><span class=\"p\">(</span>\n        <span class=\"n\">app</span><span class=\"o\">=</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">(),</span>\n        <span class=\"n\">engine_sdl</span><span class=\"o\">=</span><span class=\"n\">_SDL</span><span class=\"p\">,</span>\n        <span class=\"n\">graphiql_enabled</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">graphiql_options</span><span class=\"o\">=</span><span class=\"p\">{</span>  <span class=\"c1\"># This is optional</span>\n            <span class=\"s2\">\"endpoint\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/explorer\"</span><span class=\"p\">,</span>  <span class=\"c1\"># Default: `/graphiql`,</span>\n            <span class=\"s2\">\"default_query\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">                query Hello($name: String) {</span>\n<span class=\"s2\">                  hello(name: $name)</span>\n<span class=\"s2\">                }</span>\n<span class=\"s2\">            \"\"\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"default_variables\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Bob\"</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n            <span class=\"s2\">\"default_headers\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"Authorization\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Bearer &lt;default_token&gt;\"</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><strong>engine_sdl</strong>: Contains the <a href=\"https://graphql.org/learn/schema/\" rel=\"nofollow\">Schema Definition Language</a>\n<ul>\n<li>Can be a string which contains the SDL</li>\n<li>Can be an array of strings, which contain the SDLs</li>\n<li>Can be a path to an SDL</li>\n<li>Can be an array of paths which contain the SDLs</li>\n</ul>\n</li>\n<li><strong>graphiql_enabled</strong> <em>(Optional[bool] = False)</em>: Determines whether or not we should include a GraphiQL interface</li>\n<li><strong>graphiql_options</strong> <em>(Optional[dict] = None)</em>: Customization options for the GraphiQL instance:\n<ul>\n<li><strong>endpoint</strong> <em>(Optional[str] = \"/graphiql\")</em>: allows to customize the GraphiQL interface endpoint path</li>\n<li><strong>default_query</strong> <em>(Optional[str] = None)</em>: allows you to pre-fill the GraphiQL interface with a default query</li>\n<li><strong>default_variables</strong> <em>(Optional[dict] = None)</em>: allows you to pre-fill the GraphiQL interface with default variables</li>\n<li><strong>default_headers</strong> <em>(Optional[dict] = None)</em>: allows you to add default headers to each request sent through the GraphiQL instance</li>\n</ul>\n</li>\n</ul>\n<h2>Advance Use Case</h2>\n<h3>Response header manipulation from resolver</h3>\n<p>It is possible to set header to the response directly from the resolver using <code>set_response_headers</code>\u00a0method like:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tartiflette_aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">set_response_headers</span>\n\n<span class=\"nd\">@Resolver</span><span class=\"p\">(</span><span class=\"s2\">\"Query.X\"</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">resolver_x</span><span class=\"p\">(</span><span class=\"n\">parent_result</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"n\">info</span><span class=\"p\">):</span>\n    <span class=\"c1\"># do things</span>\n    <span class=\"n\">set_response_headers</span><span class=\"p\">({</span><span class=\"s2\">\"Header\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Value\"</span><span class=\"p\">,</span> <span class=\"s2\">\"AnotherHeader\"</span><span class=\"p\">:</span> <span class=\"s2\">\"AnotherValue\"</span><span class=\"p\">})</span>\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n</pre>\n<blockquote>\n<p>Note that this feature uses ContextVar and will only works for python 3.7.1 and later.</p>\n</blockquote>\n\n          </div>"}, "last_serial": 6538733, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0d97090aebf19062d1b21da7dc75f718", "sha256": "cffca7376b239ed9d6b9ebecb32265525337d92b04ccf7c33ace30ab22b8d57a"}, "downloads": -1, "filename": "tartiflette_aiohttp-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0d97090aebf19062d1b21da7dc75f718", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3908, "upload_time": "2018-12-05T23:25:58", "upload_time_iso_8601": "2018-12-05T23:25:58.092475Z", "url": "https://files.pythonhosted.org/packages/00/05/dcd486739d0421fc8a8bbd6d1e48f03ff914dc8eea166ae5b24f9bdcdf92/tartiflette_aiohttp-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c3889157f74cb4a9289ccb0ba82013a", "sha256": "b9dba0ca229238aa7d1a4b0d1fde9e0470068ba810225e4d1d3eb18bb6b8c9f6"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9c3889157f74cb4a9289ccb0ba82013a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3179, "upload_time": "2018-12-05T23:26:00", "upload_time_iso_8601": "2018-12-05T23:26:00.047501Z", "url": "https://files.pythonhosted.org/packages/6b/bf/7822403b29bbb4b293b791f41e751e4f85e91d2c0c9cac023cb9c682743f/tartiflette-aiohttp-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9cc2ba7245b5d77d11850ebd5d59569e", "sha256": "b1a4370bf919cab12bc0aee9d8b06735fa3abf03c8cec729841538841e199481"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9cc2ba7245b5d77d11850ebd5d59569e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3146, "upload_time": "2018-12-06T09:10:54", "upload_time_iso_8601": "2018-12-06T09:10:54.449730Z", "url": "https://files.pythonhosted.org/packages/93/8a/08d7e6601a87e75e4f09ab23a18df9e41d0b675e4608f740a8147e6f8d42/tartiflette-aiohttp-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "66a062452499efa484750a842f55b0fc", "sha256": "d52b0008886124424f48ba3439d540c104b237491b8cf5206dd5be54261b3cee"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.1.2.tar.gz", "has_sig": false, "md5_digest": "66a062452499efa484750a842f55b0fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4745, "upload_time": "2018-12-07T15:15:42", "upload_time_iso_8601": "2018-12-07T15:15:42.074983Z", "url": "https://files.pythonhosted.org/packages/01/76/d7350776550a8646e32751840267656d20ca1fbbfa1dded76354ea530e3c/tartiflette-aiohttp-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b2ddab5d53c612976057294712c484da", "sha256": "fbeb2b6e9691908bf613acff2e124999a4635ba657aa4fc6bcff74df52e54aab"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b2ddab5d53c612976057294712c484da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4754, "upload_time": "2019-01-15T07:47:03", "upload_time_iso_8601": "2019-01-15T07:47:03.049224Z", "url": "https://files.pythonhosted.org/packages/e8/8f/e8bddf90d4f4400fbc52a2f34428f1817f832536eee9d2971e7780f81635/tartiflette-aiohttp-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "4c853f8ddf6d078885838d4bffb331da", "sha256": "296641544aec29d94d9d5e92294481d922d13e5e1be1f71bb032b3d20c090d31"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.2.1.tar.gz", "has_sig": false, "md5_digest": "4c853f8ddf6d078885838d4bffb331da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8832, "upload_time": "2019-02-25T12:29:31", "upload_time_iso_8601": "2019-02-25T12:29:31.735221Z", "url": "https://files.pythonhosted.org/packages/76/ce/2907c1ec3602212d8b46a9655686e2b55a74c78492264d876df9951d7581/tartiflette-aiohttp-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "794e26c7fa2556f84b81776ad88414db", "sha256": "6c312f7808ee03550d0c5be6b2ee8c22aab57e8ded5811a1110529062a032808"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.3.0.tar.gz", "has_sig": false, "md5_digest": "794e26c7fa2556f84b81776ad88414db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12474, "upload_time": "2019-02-25T15:52:33", "upload_time_iso_8601": "2019-02-25T15:52:33.799026Z", "url": "https://files.pythonhosted.org/packages/05/1f/5f4b3857bf7b13a3c47332390e907d5aaa163a25f2391a2c3365b5418b40/tartiflette-aiohttp-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "9aefbf3f5fb4c87163a348247f52a059", "sha256": "72783c76b2f31d9035096647ae2f63ac23f79a75f5408ccbbc7730b6363b15ce"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.3.1.tar.gz", "has_sig": false, "md5_digest": "9aefbf3f5fb4c87163a348247f52a059", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12466, "upload_time": "2019-02-28T15:23:31", "upload_time_iso_8601": "2019-02-28T15:23:31.655206Z", "url": "https://files.pythonhosted.org/packages/f9/10/2a1c5a2981bed89f61a917752fa19601a19e21ee22cedc43b349c7b3f783/tartiflette-aiohttp-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "eb88b0f8dc84ed7e8c78a80e861845fa", "sha256": "faeed8cd5c03a11c8eae3cbdaed75767a8e34156c2d0401fabc148f0049b5da0"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.4.0.tar.gz", "has_sig": false, "md5_digest": "eb88b0f8dc84ed7e8c78a80e861845fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12459, "upload_time": "2019-03-05T08:55:48", "upload_time_iso_8601": "2019-03-05T08:55:48.944736Z", "url": "https://files.pythonhosted.org/packages/54/68/81a32fdaaef29cfd48fff0ad3349e21f790d8a45238ba61789a3732b909a/tartiflette-aiohttp-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "394ddb755ad621db6c1a45179179b557", "sha256": "778c049b8e735d03f63ce006d342dc7533864d409d52aa51f4d129e13d760197"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.4.1.tar.gz", "has_sig": false, "md5_digest": "394ddb755ad621db6c1a45179179b557", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12484, "upload_time": "2019-03-05T15:17:23", "upload_time_iso_8601": "2019-03-05T15:17:23.385092Z", "url": "https://files.pythonhosted.org/packages/80/3e/46320e23cc2c48fdcb71ad01d3d3866c94d0c9c1fbeffa9bd229b3f6ad22/tartiflette-aiohttp-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "cd154b8bec9fea7a3243210feaef075e", "sha256": "091b11d05d896ea6b1c685c95ddd6dd97d7f92cbadf772cee70bb1578cec6a90"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.4.2.tar.gz", "has_sig": false, "md5_digest": "cd154b8bec9fea7a3243210feaef075e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12479, "upload_time": "2019-03-14T10:48:05", "upload_time_iso_8601": "2019-03-14T10:48:05.851472Z", "url": "https://files.pythonhosted.org/packages/a0/96/2c2b88d852585db9c90f9c67683636941b480f0cb3affdc9bc74f7d754d9/tartiflette-aiohttp-0.4.2.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "4cfa56146c69aba1dddb916c7c352fd9", "sha256": "a94c0a292c35a894321d9f2b51d944cd18074e4b84c9ef7ba013892bca7a7975"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.5.0.tar.gz", "has_sig": false, "md5_digest": "4cfa56146c69aba1dddb916c7c352fd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12380, "upload_time": "2019-03-26T14:09:24", "upload_time_iso_8601": "2019-03-26T14:09:24.931339Z", "url": "https://files.pythonhosted.org/packages/18/34/4dfecdc746ad3e729c2caf822aa991e3afe3fdc130a4e44af1a710281eac/tartiflette-aiohttp-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "8b31d45e7d0792c135b65c66011769b3", "sha256": "06a7dd7c8f00197c99dfd33f5ce0860910a0d9b2cbaa79a2cbeae95dbe696e24"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.5.1.tar.gz", "has_sig": false, "md5_digest": "8b31d45e7d0792c135b65c66011769b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12412, "upload_time": "2019-03-29T15:19:54", "upload_time_iso_8601": "2019-03-29T15:19:54.194138Z", "url": "https://files.pythonhosted.org/packages/67/46/b0875e56af2ed5c1a6197177d3c15017e15b8eda0a347342049b4a23914a/tartiflette-aiohttp-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "5587e95abc01081d69f87833bd79b591", "sha256": "41985e29d74af4f77010c5e2f135ca23500a585886706c79363f395baeccf5ec"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.6.0.tar.gz", "has_sig": false, "md5_digest": "5587e95abc01081d69f87833bd79b591", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12408, "upload_time": "2019-04-02T18:00:41", "upload_time_iso_8601": "2019-04-02T18:00:41.710242Z", "url": "https://files.pythonhosted.org/packages/0d/a4/41a0699d1f5ac07e3fa2cc75f76314387b53c0864f37ae31c654ef9cd2e4/tartiflette-aiohttp-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "5620afb6e8e3b6ef789f11229165b4d1", "sha256": "5d281be3eca89b2d1e2d3ba87997f533017b6a8dce08306996fdc86d143f20a8"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.6.1.tar.gz", "has_sig": false, "md5_digest": "5620afb6e8e3b6ef789f11229165b4d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12417, "upload_time": "2019-04-04T15:17:22", "upload_time_iso_8601": "2019-04-04T15:17:22.954548Z", "url": "https://files.pythonhosted.org/packages/22/3e/fcbbba8a0ff8db61a6dccbfbd6c1a2af7be39aba57bcc8adfd5fc767e566/tartiflette-aiohttp-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "7ec5432c3eb725c1fb0f26447bcd78b3", "sha256": "b67db458dbf7e45305de5dac75abf223e9af6bc212fd75d8f53e202e73cba72f"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.6.2.tar.gz", "has_sig": false, "md5_digest": "7ec5432c3eb725c1fb0f26447bcd78b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12423, "upload_time": "2019-04-12T07:13:49", "upload_time_iso_8601": "2019-04-12T07:13:49.057505Z", "url": "https://files.pythonhosted.org/packages/c3/ad/bc767a9ec686e0d666b4b9fbf8e931895b7d447538fb1655621d2725f3ef/tartiflette-aiohttp-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "62c068624667e208518160582540e9ab", "sha256": "f51d8d5bcc63a1a628e3db6c0d9996392c96b4fb3934b596c51dec0abb139398"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.6.3.tar.gz", "has_sig": false, "md5_digest": "62c068624667e208518160582540e9ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12424, "upload_time": "2019-05-09T09:33:57", "upload_time_iso_8601": "2019-05-09T09:33:57.334499Z", "url": "https://files.pythonhosted.org/packages/6e/57/981ceeba85436bc039ee0f6e19737f3b80e6ec3e407835ed1d5c59d0f0a1/tartiflette-aiohttp-0.6.3.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "abdf2f774f69adaba70649539d1b407d", "sha256": "13973ce77995541efdd315df862765a12cafd0cc3d5b85d423790ca99ab76e68"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.7.0.tar.gz", "has_sig": false, "md5_digest": "abdf2f774f69adaba70649539d1b407d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12569, "upload_time": "2019-06-03T10:09:13", "upload_time_iso_8601": "2019-06-03T10:09:13.596833Z", "url": "https://files.pythonhosted.org/packages/21/70/4c21b0f41c5662e9337377eb9b2fe4a94fdd48b6a26ee422b525cabc0bb6/tartiflette-aiohttp-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "faa22bdc5f3d49bc2f781f872ddd111f", "sha256": "973ca410389171c4f22d8d3796ef892cefd8529769e0c002469eacd78ac1af2d"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.8.0.tar.gz", "has_sig": false, "md5_digest": "faa22bdc5f3d49bc2f781f872ddd111f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12732, "upload_time": "2019-06-18T08:39:10", "upload_time_iso_8601": "2019-06-18T08:39:10.040523Z", "url": "https://files.pythonhosted.org/packages/dc/83/77df91eafbb16dd60ad1f64c66c69dd4966220bf62624c3e91e0ef5bfd0f/tartiflette-aiohttp-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "ea53b363fa9cb7f163086e2ce1d3ca01", "sha256": "0c86e32e63997e9e73de65d52ee2292355d57992c0eb92e09e1d291f8fd94e21"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.8.1.tar.gz", "has_sig": false, "md5_digest": "ea53b363fa9cb7f163086e2ce1d3ca01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12726, "upload_time": "2019-06-19T22:03:58", "upload_time_iso_8601": "2019-06-19T22:03:58.524596Z", "url": "https://files.pythonhosted.org/packages/ac/e3/b5f58b54714b0a8756cb39a51e5e72693f20a9d4c2712dec3ef6d968726f/tartiflette-aiohttp-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "f753e5b7626012898878e2a071045c0e", "sha256": "81f0366c5e4d5123becec9ffacb62283ac54bbec770ad8e8025fb85e26897991"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.8.2.tar.gz", "has_sig": false, "md5_digest": "f753e5b7626012898878e2a071045c0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12731, "upload_time": "2019-07-04T08:14:39", "upload_time_iso_8601": "2019-07-04T08:14:39.232002Z", "url": "https://files.pythonhosted.org/packages/1c/cc/f38105e454ce94aa99eb14f93882cc3fd63c02fe6ffb595454a13056ba36/tartiflette-aiohttp-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "d4918b821dc04e36454f424685826523", "sha256": "3fccf199013210aa82db7b4c3ab10ac78664a322c66ad573d0ef6374333ac940"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.8.3.tar.gz", "has_sig": false, "md5_digest": "d4918b821dc04e36454f424685826523", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12728, "upload_time": "2019-08-13T11:54:11", "upload_time_iso_8601": "2019-08-13T11:54:11.113162Z", "url": "https://files.pythonhosted.org/packages/fc/46/263d50ea7e5a6d58355edcae79bdcca0a5f204ad381b0b27253c9af0fab2/tartiflette-aiohttp-0.8.3.tar.gz", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "8a122e451ea4fd582c05cd0498c49b0f", "sha256": "535f44b194aac8c221e2c354adfec13c8c1378822ed094e9b35b773af6e91a21"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.8.4.tar.gz", "has_sig": false, "md5_digest": "8a122e451ea4fd582c05cd0498c49b0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12731, "upload_time": "2019-08-13T13:05:06", "upload_time_iso_8601": "2019-08-13T13:05:06.934746Z", "url": "https://files.pythonhosted.org/packages/08/91/e9b85f89592633703c5b63ddd5a80840344e4ce8e3c389d3bff8fbb33f7a/tartiflette-aiohttp-0.8.4.tar.gz", "yanked": false}], "0.8.5": [{"comment_text": "", "digests": {"md5": "0e3ccd191073e47625330586d3bbbf38", "sha256": "511d9bcb1a89f8ced1825fdcfa8810962212dcb96cb2f85af352d5701a7ac866"}, "downloads": -1, "filename": "tartiflette-aiohttp-0.8.5.tar.gz", "has_sig": false, "md5_digest": "0e3ccd191073e47625330586d3bbbf38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12771, "upload_time": "2019-09-05T07:33:31", "upload_time_iso_8601": "2019-09-05T07:33:31.860828Z", "url": "https://files.pythonhosted.org/packages/3e/93/c76f8ffd1a5892ea2d1c9851b707015ac51e238cef314cd9247c84bb3dca/tartiflette-aiohttp-0.8.5.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "a0ec0e69836ef4433efc06a93470ddcb", "sha256": "352ac1b8109dbe32bb6f05949698fa26845d6930ad2197f6bea3c259141a1a1d"}, "downloads": -1, "filename": "tartiflette-aiohttp-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a0ec0e69836ef4433efc06a93470ddcb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12824, "upload_time": "2019-09-12T15:26:28", "upload_time_iso_8601": "2019-09-12T15:26:28.296541Z", "url": "https://files.pythonhosted.org/packages/71/a8/595d73627a12385949ff6087d0b006f9c9e35c199759881c14e96ae01c42/tartiflette-aiohttp-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "d7e1646d5ddb08b4c8d381b8261549d7", "sha256": "b29e836e97449394052d12a904525a98eb9a7bc0024193a449d7387309eeb160"}, "downloads": -1, "filename": "tartiflette-aiohttp-1.1.0.tar.gz", "has_sig": false, "md5_digest": "d7e1646d5ddb08b4c8d381b8261549d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13226, "upload_time": "2019-10-03T06:54:01", "upload_time_iso_8601": "2019-10-03T06:54:01.113297Z", "url": "https://files.pythonhosted.org/packages/ec/e5/ecd5f4a37040a5112e0b9ea18d5c7b20e47b6d1075db46f94d4f3bc39bd2/tartiflette-aiohttp-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "5d7a168f109c1349f7e7423f703a5980", "sha256": "21e68c94ae246dbdd056597238007a21e86058d1695198b006fd4368f97319bf"}, "downloads": -1, "filename": "tartiflette-aiohttp-1.1.1.tar.gz", "has_sig": false, "md5_digest": "5d7a168f109c1349f7e7423f703a5980", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13232, "upload_time": "2019-10-15T07:58:17", "upload_time_iso_8601": "2019-10-15T07:58:17.697544Z", "url": "https://files.pythonhosted.org/packages/0d/b0/b1964d8ea4898b38cd8f46336b01c2f1a7f0f300dbfbc9adb480bda0a468/tartiflette-aiohttp-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "cf0aa046caed5e3e3ec132a8863e38de", "sha256": "13170b03e962a4d16120854564acc515d76e54a8b37b50205ba18f9b5ac55de9"}, "downloads": -1, "filename": "tartiflette-aiohttp-1.2.0.tar.gz", "has_sig": false, "md5_digest": "cf0aa046caed5e3e3ec132a8863e38de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13827, "upload_time": "2020-01-29T16:01:49", "upload_time_iso_8601": "2020-01-29T16:01:49.621044Z", "url": "https://files.pythonhosted.org/packages/6f/82/ecebfb43ad673c2ce41a64805a6a3e73e5c3f1b74addd7a3709a2ece1056/tartiflette-aiohttp-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cf0aa046caed5e3e3ec132a8863e38de", "sha256": "13170b03e962a4d16120854564acc515d76e54a8b37b50205ba18f9b5ac55de9"}, "downloads": -1, "filename": "tartiflette-aiohttp-1.2.0.tar.gz", "has_sig": false, "md5_digest": "cf0aa046caed5e3e3ec132a8863e38de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13827, "upload_time": "2020-01-29T16:01:49", "upload_time_iso_8601": "2020-01-29T16:01:49.621044Z", "url": "https://files.pythonhosted.org/packages/6f/82/ecebfb43ad673c2ce41a64805a6a3e73e5c3f1b74addd7a3709a2ece1056/tartiflette-aiohttp-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:52 2020"}