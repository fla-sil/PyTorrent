{"info": {"author": "Martin Scharrer", "author_email": "martin@scharrer-online.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Embedded Systems", "Topic :: Utilities"], "description": "About\n*****\nThe **hexformat** Python package allows the processing of several HEX data formats.\nSupported formats are the Intel-Hex format, the Motorola S-Record_ format as well as the simple `hex dump`_ format.\nThe first two are often used for programming microcontrollers while the last is often used to display binary data in a user readable way.\n\nFiles in the mentioned format can be created, modified (e.g. set, delete and fill data) and read from or written to files.\nA base class `MultiPartBuffer` is provided which implements the handling of multiple data parts where every part is identified by its corresponding start address.\nThis base class allows for the basic operations like reading and writing binary files as well as modifing the binary data.\nThe specific classes `IntelHex`, `SRecord` and `HexDump` are derivated from it which implement the parsing and generating of the corresponding HEX formats as well as implementing file format specific features.\n\n.. _Intel-Hex: http://en.wikipedia.org/wiki/Intel_HEX\n.. _S-Record: http://en.wikipedia.org/wiki/SREC_%28file_format%29\n.. _`hex dump`: http://en.wikipedia.org/wiki/Hex_dump\n\nMotivation\n~~~~~~~~~~\nThis package was mainly created to replace the srecord_ command line tool and its complicated interface with a clean python interface for use with handling microcontroller HEX files.\nThe existing Python library intelhex_ was used for a while, but then the need for the S-Record format appeared.\nAlso *intelhex.IntelHex* did not provide a suitable interface for the most often used operations.\n\n.. _srecord: http://srecord.sourceforge.net/\n.. _intelhex: https://pypi.python.org/pypi/IntelHex", "description_content_type": null, "docs_url": "https://pythonhosted.org/hexformat/", "download_url": "https://bitbucket.org/martin_scharrer/hexformat/downloads/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/martin_scharrer/hexformat", "keywords": null, "license": "GPL v3+", "maintainer": null, "maintainer_email": null, "name": "hexformat", "package_url": "https://pypi.org/project/hexformat/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/hexformat/", "project_urls": {"Download": "https://bitbucket.org/martin_scharrer/hexformat/downloads/", "Homepage": "https://bitbucket.org/martin_scharrer/hexformat"}, "release_url": "https://pypi.org/project/hexformat/0.2/", "requires_dist": null, "requires_python": null, "summary": "Library for popular HEX-formats like IntelHex and SRecord", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The <strong>hexformat</strong> Python package allows the processing of several HEX data formats.\nSupported formats are the Intel-Hex format, the Motorola <a href=\"http://en.wikipedia.org/wiki/SREC_%28file_format%29\" rel=\"nofollow\">S-Record</a> format as well as the simple <a href=\"http://en.wikipedia.org/wiki/Hex_dump\" rel=\"nofollow\">hex dump</a> format.\nThe first two are often used for programming microcontrollers while the last is often used to display binary data in a user readable way.</p>\n<p>Files in the mentioned format can be created, modified (e.g. set, delete and fill data) and read from or written to files.\nA base class <cite>MultiPartBuffer</cite> is provided which implements the handling of multiple data parts where every part is identified by its corresponding start address.\nThis base class allows for the basic operations like reading and writing binary files as well as modifing the binary data.\nThe specific classes <cite>IntelHex</cite>, <cite>SRecord</cite> and <cite>HexDump</cite> are derivated from it which implement the parsing and generating of the corresponding HEX formats as well as implementing file format specific features.</p>\n<div id=\"motivation\">\n<h2>Motivation</h2>\n<p>This package was mainly created to replace the <a href=\"http://srecord.sourceforge.net/\" rel=\"nofollow\">srecord</a> command line tool and its complicated interface with a clean python interface for use with handling microcontroller HEX files.\nThe existing Python library <a href=\"https://pypi.python.org/pypi/IntelHex\" rel=\"nofollow\">intelhex</a> was used for a while, but then the need for the S-Record format appeared.\nAlso <em>intelhex.IntelHex</em> did not provide a suitable interface for the most often used operations.</p>\n</div>\n\n          </div>"}, "last_serial": 2068306, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a760493b506a52b399ae9f226ea22d01", "sha256": "1091f1865d7fbd63620d21ae065824b0074ee65774a8f2ca5fe31a3401d544eb"}, "downloads": -1, "filename": "hexformat-0.1-py2.7.egg", "has_sig": false, "md5_digest": "a760493b506a52b399ae9f226ea22d01", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 48853, "upload_time": "2016-04-06T19:46:43", "upload_time_iso_8601": "2016-04-06T19:46:43.580303Z", "url": "https://files.pythonhosted.org/packages/91/ea/93b953e06781ccfc88fb6ba3a452dbaf688f2f2af1dd32e74856b3d97802/hexformat-0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "71378909a2fbf782447468d14f9c8acd", "sha256": "4b87d1d6e6019d7d59e591ddbbd5ebc9057bb89647c7041c9fd589e1b636bab7"}, "downloads": -1, "filename": "hexformat-0.1-py3.5.egg", "has_sig": false, "md5_digest": "71378909a2fbf782447468d14f9c8acd", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 49872, "upload_time": "2016-04-06T19:46:11", "upload_time_iso_8601": "2016-04-06T19:46:11.022758Z", "url": "https://files.pythonhosted.org/packages/33/2e/8086bebb5cfdc83e016513c515616b8f635760514f69da898c89a441226d/hexformat-0.1-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "276b2bdb31d0629639ff69d86889e273", "sha256": "a55fc89bfef9c08055ab5e9754ccfdf140d77deb492835722c8574ea391c9dec"}, "downloads": -1, "filename": "hexformat-0.1.zip", "has_sig": false, "md5_digest": "276b2bdb31d0629639ff69d86889e273", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24895, "upload_time": "2016-04-06T19:45:52", "upload_time_iso_8601": "2016-04-06T19:45:52.132676Z", "url": "https://files.pythonhosted.org/packages/a4/7b/b0215920c032b24969011654de0f1d62cd00b4ce27b65f36e1aa69996108/hexformat-0.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "187e57288c5bccf9e425c2b16465386c", "sha256": "9d5913e4ec9fc24ac87b8474281ad64a4dbddd19ec5a7b1e0358debbdd320f6b"}, "downloads": -1, "filename": "hexformat-0.2.zip", "has_sig": false, "md5_digest": "187e57288c5bccf9e425c2b16465386c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51584, "upload_time": "2016-04-17T15:07:34", "upload_time_iso_8601": "2016-04-17T15:07:34.102264Z", "url": "https://files.pythonhosted.org/packages/0d/89/271ecab76f0b592a8c684841b0ea5566fe10e7a8f8af532896205a095b85/hexformat-0.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "187e57288c5bccf9e425c2b16465386c", "sha256": "9d5913e4ec9fc24ac87b8474281ad64a4dbddd19ec5a7b1e0358debbdd320f6b"}, "downloads": -1, "filename": "hexformat-0.2.zip", "has_sig": false, "md5_digest": "187e57288c5bccf9e425c2b16465386c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51584, "upload_time": "2016-04-17T15:07:34", "upload_time_iso_8601": "2016-04-17T15:07:34.102264Z", "url": "https://files.pythonhosted.org/packages/0d/89/271ecab76f0b592a8c684841b0ea5566fe10e7a8f8af532896205a095b85/hexformat-0.2.zip", "yanked": false}], "timestamp": "Fri May  8 00:51:27 2020"}