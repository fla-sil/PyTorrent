{"info": {"author": "Will Kahn-Greene", "author_email": "willkg@mozilla.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only"], "description": "================\npaul-mclendahand\n================\n\nTool for combining GitHub pull requests.\n\n:Code:          https://github.com/willkg/paul-mclendahand\n:Issues:        https://github.com/willkg/paul-mclendahand/issues\n:License:       MPL v2\n:Documentation: this README\n\n\nInstall\n=======\n\n\nWith `pipx <https://pypi.org/project/pipx/>`_::\n\n    pipx install paul-mclendahand\n\nWith pip from PyPI::\n\n    pip install paul-mclendahand\n\nWith pip from GitHub master branch::\n\n    pip install https://github.com/willkg/paul-mclendahand/archive/master.zip\n\n\nQuick start\n===========\n\nConfigure git to fetch pull request references\n----------------------------------------------\n\nFirst, you need to have git configured to fetch pull request references. I have\nan additional ``fetch`` line in my remote for github.com. For example,\nthis is what I have for socorro::\n\n    [remote \"upstream\"]\n        url = git@github.com:mozilla-services/socorro.git\n        fetch = +refs/heads/*:refs/remotes/upstream/*\n        fetch = +refs/pull/*/head:refs/remotes/upstream/pr/*\n\nThe line you need to add is the last one. Make sure to use the right remote::\n\n        fetch = +refs/pull/*/head:refs/remotes/upstream/pr/*\n                                               ^^^^^^^^\n                                               use your remote name here\n\nAfter adding that, when you do ``git pull``, it'll pull down all the references\nfor pull requests. They'll be available as ``upstream/pr/PRNUM``.\n\n\nConfigure pmac\n--------------\n\npmac needs to know the GitHub user and GitHub project.\n\nYou can set configuration in the ``setup.cfg`` file::\n\n   [tool:paul-mclendahand]\n   github_user=user\n   github_project=project\n   git_remote=git-remote-name\n\nYou can override the ``setup.cfg`` variables with environment variables::\n\n   PMAC_GITHUB_USER=user\n   PMAC_GITHUB_PROJECT=project\n   PMAC_GIT_REMOTE=git-remote-name\n\nYou can also pass the git remote on the command line using the ``--git_remote``\nargument.\n\nIf you don't specify a remote, then pmac will guess it using a highly\nsophisticated deterministic stochastic rainbow chairs algorithm.\n\n\nUsing pmac\n----------\n\nAfter you've configured git, then you can use ``pmac`` like this:\n\n1. Create a new branch::\n\n       git checkout master\n       git checkout -b update-prs\n\n2. List open PRs::\n\n       pmac listprs\n\n3. Combine some pull requests into it::\n\n       pmac add 5100 5101 5102\n\n   Use the same pull requests numbers as on GitHub.\n\n   If you hit a cherry-pick conflict, ``pmac`` will tell you. You can edit\n   the file in another terminal to manually resolve the conflict. Then do::\n\n       git add FILE\n       git commit\n\n   After that, you can continue with ``pmac``.\n\n4. When you're done, push the branch to GitHub and create a pull request.\n\n   ``pmac`` can help with the PR description::\n\n       pmac prmsg\n\n\nWhy does this project exist?\n============================\n\nTwo main reasons.\n\nFirst, GitHub doesn't support combining pull requests. There is a forum post\nabout it here:\nhttps://github.community/t5/How-to-use-Git-and-GitHub/Feature-Request-combine-pull-requests/td-p/27660\n\nSecond, dependabot (also owned by GitHub) doesn't support grouping dependency\nupdates into a single pull request. If you have 50 dependency updates, it\ncreates 50 pull requests. I have a lot of projects and lack of grouping\nupdates makes monthly maintenance miserable. There's an issue for this:\nhttps://github.com/dependabot/feedback/issues/5\n\n\nHistory\n=======\n\n1.1.0 (April 7th, 2020)\n-----------------------\n\nNEW FEATURES:\n\n* Added a ``--git_remote`` argument, ``PMAC_GIT_REMOTE`` environment variable,\n  and ``git_remote`` configuration option which, when specified, will cause\n  pmac to use that as the remote name and not guess. (#10)\n\n\nOTHER THINGS:\n\n* Added a Makefile because that's how I roll.\n\n* Tweaked ``pmac --help`` so it shows the version and release date and link to\n  issue tracker.\n\n* Cleaned up README.\n\n* Made a peanut butter pie and ate it.\n\n\n1.0.0 (January 14, 2020)\n------------------------\n\n* Initial writing.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/willkg/paul-mclendahanad", "keywords": "github pr", "license": "MPLv2", "maintainer": "", "maintainer_email": "", "name": "paul-mclendahand", "package_url": "https://pypi.org/project/paul-mclendahand/", "platform": "", "project_url": "https://pypi.org/project/paul-mclendahand/", "project_urls": {"Homepage": "https://github.com/willkg/paul-mclendahanad"}, "release_url": "https://pypi.org/project/paul-mclendahand/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Tool for combining GitHub pull requests.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Tool for combining GitHub pull requests.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Code:</th><td><a href=\"https://github.com/willkg/paul-mclendahand\" rel=\"nofollow\">https://github.com/willkg/paul-mclendahand</a></td>\n</tr>\n<tr><th>Issues:</th><td><a href=\"https://github.com/willkg/paul-mclendahand/issues\" rel=\"nofollow\">https://github.com/willkg/paul-mclendahand/issues</a></td>\n</tr>\n<tr><th>License:</th><td>MPL v2</td>\n</tr>\n<tr><th>Documentation:</th><td>this README</td>\n</tr>\n</tbody>\n</table>\n<div id=\"install\">\n<h2>Install</h2>\n<p>With <a href=\"https://pypi.org/project/pipx/\" rel=\"nofollow\">pipx</a>:</p>\n<pre>pipx install paul-mclendahand\n</pre>\n<p>With pip from PyPI:</p>\n<pre>pip install paul-mclendahand\n</pre>\n<p>With pip from GitHub master branch:</p>\n<pre>pip install https://github.com/willkg/paul-mclendahand/archive/master.zip\n</pre>\n</div>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<div id=\"configure-git-to-fetch-pull-request-references\">\n<h3>Configure git to fetch pull request references</h3>\n<p>First, you need to have git configured to fetch pull request references. I have\nan additional <tt>fetch</tt> line in my remote for github.com. For example,\nthis is what I have for socorro:</p>\n<pre>[remote \"upstream\"]\n    url = git@github.com:mozilla-services/socorro.git\n    fetch = +refs/heads/*:refs/remotes/upstream/*\n    fetch = +refs/pull/*/head:refs/remotes/upstream/pr/*\n</pre>\n<p>The line you need to add is the last one. Make sure to use the right remote:</p>\n<pre>fetch = +refs/pull/*/head:refs/remotes/upstream/pr/*\n                                       ^^^^^^^^\n                                       use your remote name here\n</pre>\n<p>After adding that, when you do <tt>git pull</tt>, it\u2019ll pull down all the references\nfor pull requests. They\u2019ll be available as <tt>upstream/pr/PRNUM</tt>.</p>\n</div>\n<div id=\"configure-pmac\">\n<h3>Configure pmac</h3>\n<p>pmac needs to know the GitHub user and GitHub project.</p>\n<p>You can set configuration in the <tt>setup.cfg</tt> file:</p>\n<pre>[tool:paul-mclendahand]\ngithub_user=user\ngithub_project=project\ngit_remote=git-remote-name\n</pre>\n<p>You can override the <tt>setup.cfg</tt> variables with environment variables:</p>\n<pre>PMAC_GITHUB_USER=user\nPMAC_GITHUB_PROJECT=project\nPMAC_GIT_REMOTE=git-remote-name\n</pre>\n<p>You can also pass the git remote on the command line using the <tt><span class=\"pre\">--git_remote</span></tt>\nargument.</p>\n<p>If you don\u2019t specify a remote, then pmac will guess it using a highly\nsophisticated deterministic stochastic rainbow chairs algorithm.</p>\n</div>\n<div id=\"using-pmac\">\n<h3>Using pmac</h3>\n<p>After you\u2019ve configured git, then you can use <tt>pmac</tt> like this:</p>\n<ol>\n<li><p>Create a new branch:</p>\n<pre>git checkout master\ngit checkout -b update-prs\n</pre>\n</li>\n<li><p>List open PRs:</p>\n<pre>pmac listprs\n</pre>\n</li>\n<li><p>Combine some pull requests into it:</p>\n<pre>pmac add 5100 5101 5102\n</pre>\n<p>Use the same pull requests numbers as on GitHub.</p>\n<p>If you hit a cherry-pick conflict, <tt>pmac</tt> will tell you. You can edit\nthe file in another terminal to manually resolve the conflict. Then do:</p>\n<pre>git add FILE\ngit commit\n</pre>\n<p>After that, you can continue with <tt>pmac</tt>.</p>\n</li>\n<li><p>When you\u2019re done, push the branch to GitHub and create a pull request.</p>\n<p><tt>pmac</tt> can help with the PR description:</p>\n<pre>pmac prmsg\n</pre>\n</li>\n</ol>\n</div>\n</div>\n<div id=\"why-does-this-project-exist\">\n<h2>Why does this project exist?</h2>\n<p>Two main reasons.</p>\n<p>First, GitHub doesn\u2019t support combining pull requests. There is a forum post\nabout it here:\n<a href=\"https://github.community/t5/How-to-use-Git-and-GitHub/Feature-Request-combine-pull-requests/td-p/27660\" rel=\"nofollow\">https://github.community/t5/How-to-use-Git-and-GitHub/Feature-Request-combine-pull-requests/td-p/27660</a></p>\n<p>Second, dependabot (also owned by GitHub) doesn\u2019t support grouping dependency\nupdates into a single pull request. If you have 50 dependency updates, it\ncreates 50 pull requests. I have a lot of projects and lack of grouping\nupdates makes monthly maintenance miserable. There\u2019s an issue for this:\n<a href=\"https://github.com/dependabot/feedback/issues/5\" rel=\"nofollow\">https://github.com/dependabot/feedback/issues/5</a></p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"april-7th-2020\">\n<h3>1.1.0 (April 7th, 2020)</h3>\n<p>NEW FEATURES:</p>\n<ul>\n<li>Added a <tt><span class=\"pre\">--git_remote</span></tt> argument, <tt>PMAC_GIT_REMOTE</tt> environment variable,\nand <tt>git_remote</tt> configuration option which, when specified, will cause\npmac to use that as the remote name and not guess. (#10)</li>\n</ul>\n<p>OTHER THINGS:</p>\n<ul>\n<li>Added a Makefile because that\u2019s how I roll.</li>\n<li>Tweaked <tt>pmac <span class=\"pre\">--help</span></tt> so it shows the version and release date and link to\nissue tracker.</li>\n<li>Cleaned up README.</li>\n<li>Made a peanut butter pie and ate it.</li>\n</ul>\n</div>\n<div id=\"january-14-2020\">\n<h3>1.0.0 (January 14, 2020)</h3>\n<ul>\n<li>Initial writing.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6970547, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "eeec50e85d9afdc454cc7d2f4a6dd875", "sha256": "80d65fd079739e5c69b08414329ff4688dd32b1dafea6553180dd2d648242a79"}, "downloads": -1, "filename": "paul_mclendahand-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eeec50e85d9afdc454cc7d2f4a6dd875", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11190, "upload_time": "2020-01-14T17:06:53", "upload_time_iso_8601": "2020-01-14T17:06:53.433034Z", "url": "https://files.pythonhosted.org/packages/0b/ab/d1f0117371147a64c91fa6c700e31a502995d8e00998ff5ae90d9b97b5fa/paul_mclendahand-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12367752631a558d4086ebfe7e472fc1", "sha256": "f9a011a35a44b283ec2a5f0b4c392c587c2b3582cf0149bbdc1d64c8329c573f"}, "downloads": -1, "filename": "paul-mclendahand-1.0.0.tar.gz", "has_sig": false, "md5_digest": "12367752631a558d4086ebfe7e472fc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10852, "upload_time": "2020-01-14T17:06:55", "upload_time_iso_8601": "2020-01-14T17:06:55.899168Z", "url": "https://files.pythonhosted.org/packages/25/09/45bf749642b0ff8bff43fbe48f26092a2fe68aec44bf48e9a92f54d6ec1e/paul-mclendahand-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "e8c9cee66e5c2cd988df2f1995f1bdd6", "sha256": "d514b0eee9ac30c5c0085af7acd45dd4718ec77587970b9a035d41a79447ed4d"}, "downloads": -1, "filename": "paul_mclendahand-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e8c9cee66e5c2cd988df2f1995f1bdd6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11970, "upload_time": "2020-04-07T14:52:02", "upload_time_iso_8601": "2020-04-07T14:52:02.903525Z", "url": "https://files.pythonhosted.org/packages/41/fc/1552b73986220ae5405fc356e01f6cd915b58d90b0ed6b6a6595028f834a/paul_mclendahand-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40964d0e9b89d45bd2e8746e26850120", "sha256": "5c4f7ed82212c10954bf03604cd56ed74a8d8372c0f629617a77eb84798a6c20"}, "downloads": -1, "filename": "paul-mclendahand-1.1.0.tar.gz", "has_sig": false, "md5_digest": "40964d0e9b89d45bd2e8746e26850120", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11660, "upload_time": "2020-04-07T14:52:04", "upload_time_iso_8601": "2020-04-07T14:52:04.281580Z", "url": "https://files.pythonhosted.org/packages/e8/3d/be8bfcdc1ed23fc37db89eace37b5d2e11dfa74acecab36689ba1f562115/paul-mclendahand-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e8c9cee66e5c2cd988df2f1995f1bdd6", "sha256": "d514b0eee9ac30c5c0085af7acd45dd4718ec77587970b9a035d41a79447ed4d"}, "downloads": -1, "filename": "paul_mclendahand-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e8c9cee66e5c2cd988df2f1995f1bdd6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11970, "upload_time": "2020-04-07T14:52:02", "upload_time_iso_8601": "2020-04-07T14:52:02.903525Z", "url": "https://files.pythonhosted.org/packages/41/fc/1552b73986220ae5405fc356e01f6cd915b58d90b0ed6b6a6595028f834a/paul_mclendahand-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40964d0e9b89d45bd2e8746e26850120", "sha256": "5c4f7ed82212c10954bf03604cd56ed74a8d8372c0f629617a77eb84798a6c20"}, "downloads": -1, "filename": "paul-mclendahand-1.1.0.tar.gz", "has_sig": false, "md5_digest": "40964d0e9b89d45bd2e8746e26850120", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11660, "upload_time": "2020-04-07T14:52:04", "upload_time_iso_8601": "2020-04-07T14:52:04.281580Z", "url": "https://files.pythonhosted.org/packages/e8/3d/be8bfcdc1ed23fc37db89eace37b5d2e11dfa74acecab36689ba1f562115/paul-mclendahand-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:46 2020"}