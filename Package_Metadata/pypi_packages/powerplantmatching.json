{"info": {"author": "Fabian Hofmann (FIAS), Jonas Hoersch (KIT), Fabian Gotzens (FZ J\u00fclich)", "author_email": "hofmann@fias.uni-frankfurt.de", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# powerplantmatching\n\n\n [![pypi](https://img.shields.io/pypi/v/powerplantmatching.svg)](https://pypi.org/project/powerplantmatching/) [![conda](https://img.shields.io/conda/vn/conda-forge/powerplantmatching.svg)](https://anaconda.org/conda-forge/powerplantmatching) ![pythonversion](https://img.shields.io/pypi/pyversions/powerplantmatching) ![LICENSE](https://img.shields.io/pypi/l/powerplantmatching.svg) [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3358985.svg)](https://zenodo.org/record/3358985#.XUReFPxS_MU)\n\n\nA toolset for cleaning, standardizing and combining multiple power\nplant databases.\n\nThis package provides ready-to-use power plant data for the European power system.\nStarting from openly available power plant datasets, the package cleans, standardizes\nand merges the input data to create a new combining dataset, which includes all the important information.\nThe package allows to easily update the combined data as soon as new input datasets are released.\n\n![Map of power plants in Europe](https://user-images.githubusercontent.com/19226431/46086361-36a13080-c1a8-11e8-82ed-9f04167273e5.png)\n\npowerplantmatching was initially developed by the\n[Renewable Energy Group](https://fias.uni-frankfurt.de/physics/schramm/complex-renewable-energy-networks/)\nat [FIAS](https://fias.uni-frankfurt.de/) to build power plant data\ninputs to [PyPSA](http://www.pypsa.org/)-based models for carrying\nout simulations for the [CoNDyNet project](http://condynet.de/),\nfinanced by the\n[German Federal Ministry for Education and Research (BMBF)](https://www.bmbf.de/en/)\nas part of the\n[Stromnetze Research Initiative](http://forschung-stromnetze.info/projekte/grundlagen-und-konzepte-fuer-effiziente-dezentrale-stromnetze/).\n\n\n### What it can do\n\n- clean and standardize power plant data sets\n- aggregate power plants units which belong to the same plant\n- compare and combine different data sets\n- create lookups and give statistical insight to power plant goodness\n- provide cleaned data from different sources\n- choose between gros/net capacity\n- provide an already merged data set of six different data-sources\n- scale the power plant capacities in order to match country specific statistics about total power plant capacities\n- visualize the data\n- export your powerplant data to a [PyPSA](https://github.com/PyPSA/PyPSA) or [TIMES](https://iea-etsap.org/index.php/etsap-tools/model-generators/times) model \n\n\n## Installation\n\n Using pip\n\n```bash\npip install powerplantmatching\n```\n\nor conda (as long as the package is not yet in the conda-forge channel)\n\n```bash\npip install powerplantmatching entsoe-py --no-deps\nconda install pandas networkx pycountry xlrd seaborn pyyaml requests matplotlib geopy beautifulsoup4 cartopy \n\n```\n\n<!-- or using conda \n\n```bash \nconda install -c conda-forge powerplantmatching\n``` -->\n\n\n## Get the Data\n\nIn order to directly load  the already build data into a pandas dataframe just call \n```python\nimport powerplantmatching as pm\npm.powerplants(from_url=True)\n```\n\nwhich will parse and store the [actual dataset of powerplants of this repository](https://raw.githubusercontent.com/FRESNA/powerplantmatching/master/matched_data_red.csv\n). Setting `from_url=False` (default) will load all the necessary data files and combine them. Note that this might take some minutes.   \n\n\nThe resulting dataset compared with the capacity statistics provided by the [ENTSOE SO&AF](https://data.open-power-system-data.org/national_generation_capacity/2019-02-22):\n\n![Capacity statistics comparison](https://raw.githubusercontent.com/FRESNA/powerplantmatching/master/matching_analysis/factor_plot_Matched%20Data.png)\n\n\n\nThe dataset combines the data of all the data sources listed in\n[Data-Sources](#Data-Sources) and provides the following information:\n\n- **Power plant name**      - claim of each database\n- **Fueltype**          - {Bioenergy, Geothermal, Hard Coal, Hydro, Lignite, Nuclear, Natural Gas, Oil, Solar, Wind, Other}\n- **Technology**\t\t- {CCGT, OCGT, Steam Turbine, Combustion Engine, Run-Of-River, Pumped Storage, Reservoir}\n- **Set**\t\t\t- {Power Plant (PP), Combined Heat and Power (CHP), Storages (Stores)}\n- **Capacity**\t\t\t- \\[MW\\]\n- **Duration** \t- Maximum state of charge capacity in terms of hours at full output capacity  \n- **Dam Information** -  Dam volume [Mm^3] and Dam Height [m]\n- **Geo-position**\t\t- Latitude, Longitude\n- **Country**           - EU-27 + CH + NO (+ UK) minus Cyprus and Malta\n- **YearCommissioned**\t\t- Commmisioning year of the powerplant\n- **RetroFit**        - Year of last retrofit \n- **projectID**\t\t\t- Immutable identifier of the power plant\n\n\n\n### Where is the data stored?\n\nAll data files of the package will be stored in the folder given by `pm.core.package_config['data_dir']`\n\n\n\n## Make your own configuration\n\n\nYou have the option to easily manipulate the resulting data modifying the global configuration. Just save the [config.yaml file](https://github.com/FRESNA/powerplantmatching/blob/master/powerplantmatching/package_data/config.yaml) as **~/.powerplantmatching_config.yaml**  manually or for linux users \n\n```bash\nwget -O ~/.powerplantmatching_config.yaml https://raw.githubusercontent.com/FRESNA/powerplantmatching/master/powerplantmatching/package_data/config.yaml\n```\n\nand change the **.powerplantmaching_config.yaml** file according to your wishes. Thereby you can\n\n\n<!-- 2. Modify the configuration in your python session. When import powerplantmachting you can load and modify the configuration that the package should use, e.g.\n\n\t```python\n\timport powerplantmatching as pm\n\tconfig = pm.\n\t``` -->\n\n\n- determine the global set of **countries** and **fueltypes**\n\n- determine which data sources to combine and which data sources should completely be contained in the final dataset\n\n- individually filter data sources via [pandas.DataFrame.query](http://pandas.pydata.org/pandas-docs/stable/indexing.html#the-query-method) statements set as an argument of data source name. See the default  [config.yaml file](https://github.com/FRESNA/powerplantmatching/blob/master/powerplantmatching/package_data/config.yaml) as an example\n\n\nOptionally you can:\n\n\n- add your ENTSOE security token to the **.powerplantmaching_config.yaml** file. To enable updating the ENTSOE data by yourself. The token can be obtained by following section 2 of the [RESTful API documentation](https://transparency.entsoe.eu/content/static_content/Static%20content/web%20api/Guide.html#_authentication_and_authorisation) of the ENTSOE-E Transparency platform.\n\n- add your Google API key to the config.yaml file to enable geoparsing. The key can be obtained by following the [instructions](https://developers.google.com/maps/documentation/geocoding/get-api-key). \n\n\n\n\n\n## Data-Sources:\n\n- OPSD - [Open Power System Data](http://data.open-power-system-data.org/) publish their [data](http://data.open-power-system-data.org/conventional_power_plants/) under a free license\n- GEO - [Global Energy Observatory](http://globalenergyobservatory.org/), the data is not directly available on the website, but can be obtained from an [sqlite scraper](https://morph.io/coroa/global_energy_observatory_power_plants)\n- GPD - [Global Power Plant Database](http://datasets.wri.org/dataset/globalpowerplantdatabase) provide their data under a free license\n- CARMA - [Carbon Monitoring for Action](http://carma.org/plant)\n- ENTSOe - [European Network of Transmission System Operators for Electricity](http://entsoe.eu/), annually provides statistics about aggregated power plant capacities. Their data can be used as a validation reference. We further use their [annual energy generation report from 2010](https://www.entsoe.eu/db-query/miscellaneous/net-generating-capacity) as an input for the hydro power plant classification. The [power plant dataset](https://transparency.entsoe.eu/generation/r2/installedCapacityPerProductionUnit/show) on the ENTSO-E transparency website is downloaded using the [ENTSO-E Transparency API](https://transparency.entsoe.eu/content/static_content/Static%20content/web%20api/Guide.html).\n- JRC - [Joint Research Centre Hydro-power plants database](https://github.com/energy-modelling-toolkit/hydro-power-database)\n- IRENA - [International Renewable Energy Agency](http://resourceirena.irena.org/gateway/dashboard/) open available statistics on power plant capacities.\n- BNETZA - [Bundesnetzagentur](https://www.bundesnetzagentur.de/EN/Areas/Energy/Companies/SecurityOfSupply/GeneratingCapacity/PowerPlantList/PubliPowerPlantList_node.html) open available data source for Germany's power plants\n- UBA (Umwelt Bundesamt Datenbank \"Kraftwerke in Deutschland)\n\n### Not available but supported sources:\n\n- IWPDCY (International Water Power & Dam Country Yearbook)\n- WEPP (Platts, World Elecrtric Power Plants Database)\n\nThe merged dataset is available in two versions: The bigger dataset, obtained by \n\n```python\npm.powerplants(reduced=False)\n```\n\nlinks the entries of the matched power plants and lists all the related\nproperties given by the different data-sources. The smaller, reduced dataset, given by\n```python\npm.powerplants()\n```\nclaims only the value of the most reliable data source being matched in the individual power plant data entry.\nThe considered reliability scores are:\n\n\n| Dataset          | Reliabilty score |\n| :--------------- | :--------------- |\n| JRC     |                   6 |\n| ESE     |                   6 |\n| UBA     |                   5 |\n| OPSD    |                   5 |\n| OPSD_EU |                   5 |\n| OPSD_DE |                   5 |\n| WEPP    |                   4 |\n| ENTSOE  |                   4 |\n| IWPDCY  |                   3 |\n| GPD     |                   3 |\n| GEO     |                   3 |\n| BNETZA  |                   3 |\n| CARMA   |                   1 |\n\n\n\n## Getting Started\n\nA small presentation of the tool is given in the [jupyter notebook](https://github.com/FRESNA/powerplantmatching/blob/master/Example%20of%20Use.ipynb) \n\n<!-- ## Module Structure\n\nThe package consists of ten modules. For creating a new dataset you\ncan make most use of the modules data, clean and match, which provide\nyou with function for data supply, vertical cleaning and horizontal\nmatching, respectively.\n\n![Modular package structure](https://user-images.githubusercontent.com/19226431/31513014-2feef76e-af8d-11e7-9b4d-f1be929e2dba.png) -->\n\n## How it works\n\nWhereas single databases as the CARMA, GEO or the OPSD database provide non standardized and incomplete information, the datasets can complement each other and improve their reliability. \nIn a first step, powerplantmatching converts all powerplant dataset into a standardized format with a defined set of columns and values. The second part consists of aggregating power plant blocks together into units. Since some of the datasources provide their powerplant records on unit level, without detailed information about lower-level blocks, comparing with other sources is only possible on unit level. In the third and name-giving step the tool combines (or matches)different, standardized and aggregated input sources keeping only powerplants units which appear in more than one source. The matched data afterwards is complemented by data entries of reliable sources which have not matched.  \n\nThe aggregation and matching process heavily relies on\n[DUKE](https://github.com/larsga/Duke), a java application specialized\nfor deduplicating and linking data. It provides many built-in\ncomparators such as numerical, string or geoposition comparators.  The\nengine does a detailed comparison for each single argument (power\nplant name, fuel-type etc.) using adjusted comparators and weights.\nFrom the individual scores for each column it computes a compound\nscore for the likeliness that the two powerplant records refer to the\nsame powerplant. If the score exceeds a given threshold, the two\nrecords of the power plant are linked and merged into one data set.\n\nLet's make that a bit more concrete by giving a quick\nexample. Consider the following two data sets\n\n### Dataset 1:\n\n|    | Name                | Fueltype   |   Classification | Country        |   Capacity |     lat |        lon |   File |\n|---:|:--------------------|:-----------|-----------------:|:---------------|-----------:|--------:|-----------:|-------:|\n|  0 | Aarberg             | Hydro      |              nan | Switzerland    |     14.609 | 47.0444 |  7.27578   |    nan |\n|  1 | Abbey mills pumping | Oil        |              nan | United Kingdom |      6.4   | 51.687  | -0.0042057 |    nan |\n|  2 | Abertay             | Other      |              nan | United Kingdom |      8     | 57.1785 | -2.18679   |    nan |\n|  3 | Aberthaw            | Coal       |              nan | United Kingdom |   1552.5   | 51.3875 | -3.40675   |    nan |\n|  4 | Ablass              | Wind       |              nan | Germany        |     18     | 51.2333 | 12.95      |    nan |\n|  5 | Abono               | Coal       |              nan | Spain          |    921.7   | 43.5588 | -5.72287   |    nan |\n\nand\n\n### Dataset 2:\n\n|    | Name              | Fueltype    | Classification   | Country        |   Capacity |     lat |     lon |   File |\n|---:|:------------------|:------------|:-----------------|:---------------|-----------:|--------:|--------:|-------:|\n|  0 | Aarberg           | Hydro       | nan              | Switzerland    |       15.5 | 47.0378 |  7.272  |    nan |\n|  1 | Aberthaw          | Coal        | Thermal          | United Kingdom |     1500   | 51.3873 | -3.4049 |    nan |\n|  2 | Abono             | Coal        | Thermal          | Spain          |      921.7 | 43.5528 | -5.7231 |    nan |\n|  3 | Abwinden asten    | Hydro       | nan              | Austria        |      168   | 48.248  | 14.4305 |    nan |\n|  4 | Aceca             | Oil         | CHP              | Spain          |      629   | 39.941  | -3.8569 |    nan |\n|  5 | Aceca fenosa      | Natural Gas | CCGT             | Spain          |      400   | 39.9427 | -3.8548 |    nan |\n\nwhere Dataset 2 has the higher reliability score. Apparently entries 0, 3 and 5 of Dataset 1 relate to the same\npower plants as the entries 0,1 and 2 of Dataset 2. The toolset detects those similarities and combines them into the following set, but prioritising the values of Dataset 2:\n\n|  | Name   | Country        | Fueltype   | Classification   |   Capacity |     lat |      lon |   File |\n|---:|:------------|:---------------|:-----------|:-----------------|-----------:|--------:|---------:|-------:|\n|  0 | Aarberg    | Switzerland    | Hydro      | nan              |       15.5 | 47.0378 |  7.272 |    nan |\n|  1 | Aberthaw       | United Kingdom | Coal       | Thermal          |     1500 | 51.3873 | -3.4049 |    nan |\n|  2 | Abono             | Spain          | Coal       | Thermal          |      921.7 | 43.5528 | -5.7231 |    nan |\n\n\n## Citing powerplantmatching\n\nIf you want to cite powerplantmatching, use the following paper\n\n\n- F. Gotzens, H. Heinrichs, J. H\u00f6rsch, and F. Hofmann, [Performing energy modelling exercises in a transparent way - The issue of data quality in power plant databases](https://www.sciencedirect.com/science/article/pii/S2211467X18301056?dgcid=author), Energy Strategy Reviews, vol. 23, pp. 1\u201312, Jan. 2019.\n\nwith bibtex\n\n\n```\n@article{gotzens_performing_2019,\n\ttitle = {Performing energy modelling exercises in a transparent way - {The} issue of data quality in power plant databases},\n\tvolume = {23},\n\tissn = {2211467X},\n\turl = {https://linkinghub.elsevier.com/retrieve/pii/S2211467X18301056},\n\tdoi = {10.1016/j.esr.2018.11.004},\n\tlanguage = {en},\n\turldate = {2018-12-03},\n\tjournal = {Energy Strategy Reviews},\n\tauthor = {Gotzens, Fabian and Heinrichs, Heidi and H\u00f6rsch, Jonas and Hofmann, Fabian},\n\tmonth = jan,\n\tyear = {2019},\n\tpages = {1--12}\n}\n```\n\n\nand/or the current release stored on Zenodo with a release-specific DOI:\n\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3358985.svg)](https://zenodo.org/record/3358985#.XURat99fjRY)\n\n\n\n\n## Acknowledgements\n\nThe development of powerplantmatching was helped considerably by\nin-depth discussions and exchanges of ideas and code with\n\n- Tom Brown from Karlsruhe Institute for Technology\n- Chris Davis from University of Groningen and\n- Johannes Friedrich, Roman Hennig and Colin McCormick of the World Resources Institute\n\n## Licence\n\nCopyright 2018-2020 Fabian Gotzens (FZ J\u00fclich), Jonas H\u00f6rsch (KIT), Fabian Hofmann (FIAS)\n\n\n\npowerplantmatching is released as free software under the\n[GPLv3](http://www.gnu.org/licenses/gpl-3.0.en.html), see\n[LICENSE](LICENSE) for further information.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FRESNA/powerplantmatching", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "powerplantmatching", "package_url": "https://pypi.org/project/powerplantmatching/", "platform": "", "project_url": "https://pypi.org/project/powerplantmatching/", "project_urls": {"Homepage": "https://github.com/FRESNA/powerplantmatching"}, "release_url": "https://pypi.org/project/powerplantmatching/0.4.5/", "requires_dist": ["numpy", "scipy", "pandas (>=0.23.0)", "networkx (>=1.10)", "pycountry", "xlrd", "seaborn", "pyyaml (>=5.1.0)", "requests", "matplotlib", "geopy", "entsoe-py"], "requires_python": "", "summary": "Toolset for generating and managing Power Plant Data", "version": "0.4.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>powerplantmatching</h1>\n<p><a href=\"https://pypi.org/project/powerplantmatching/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/61838369af8b56441a7138b712ae15b4d1382e0c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f706f776572706c616e746d61746368696e672e737667\"></a> <a href=\"https://anaconda.org/conda-forge/powerplantmatching\" rel=\"nofollow\"><img alt=\"conda\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2fddcfa675cb1ba0f8798b4673fbd9749301db11/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f766e2f636f6e64612d666f7267652f706f776572706c616e746d61746368696e672e737667\"></a> <img alt=\"pythonversion\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b2b713d46d32b74ca314d7b204fcfed6988b170/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f706f776572706c616e746d61746368696e67\"> <img alt=\"LICENSE\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5af5669961d0fc84593eb9b3b7c25396f40d3db/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f706f776572706c616e746d61746368696e672e737667\"> <a href=\"https://zenodo.org/record/3358985#.XUReFPxS_MU\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c63dc508a2fa03864e891ec6d9cf98517a232fea/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e333335383938352e737667\"></a></p>\n<p>A toolset for cleaning, standardizing and combining multiple power\nplant databases.</p>\n<p>This package provides ready-to-use power plant data for the European power system.\nStarting from openly available power plant datasets, the package cleans, standardizes\nand merges the input data to create a new combining dataset, which includes all the important information.\nThe package allows to easily update the combined data as soon as new input datasets are released.</p>\n<p><img alt=\"Map of power plants in Europe\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ebd59c5b466d0d24c7e90a64cb3e30e2e77d538/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393232363433312f34363038363336312d33366131333038302d633161382d313165382d383265642d3966303431363732373365352e706e67\"></p>\n<p>powerplantmatching was initially developed by the\n<a href=\"https://fias.uni-frankfurt.de/physics/schramm/complex-renewable-energy-networks/\" rel=\"nofollow\">Renewable Energy Group</a>\nat <a href=\"https://fias.uni-frankfurt.de/\" rel=\"nofollow\">FIAS</a> to build power plant data\ninputs to <a href=\"http://www.pypsa.org/\" rel=\"nofollow\">PyPSA</a>-based models for carrying\nout simulations for the <a href=\"http://condynet.de/\" rel=\"nofollow\">CoNDyNet project</a>,\nfinanced by the\n<a href=\"https://www.bmbf.de/en/\" rel=\"nofollow\">German Federal Ministry for Education and Research (BMBF)</a>\nas part of the\n<a href=\"http://forschung-stromnetze.info/projekte/grundlagen-und-konzepte-fuer-effiziente-dezentrale-stromnetze/\" rel=\"nofollow\">Stromnetze Research Initiative</a>.</p>\n<h3>What it can do</h3>\n<ul>\n<li>clean and standardize power plant data sets</li>\n<li>aggregate power plants units which belong to the same plant</li>\n<li>compare and combine different data sets</li>\n<li>create lookups and give statistical insight to power plant goodness</li>\n<li>provide cleaned data from different sources</li>\n<li>choose between gros/net capacity</li>\n<li>provide an already merged data set of six different data-sources</li>\n<li>scale the power plant capacities in order to match country specific statistics about total power plant capacities</li>\n<li>visualize the data</li>\n<li>export your powerplant data to a <a href=\"https://github.com/PyPSA/PyPSA\" rel=\"nofollow\">PyPSA</a> or <a href=\"https://iea-etsap.org/index.php/etsap-tools/model-generators/times\" rel=\"nofollow\">TIMES</a> model</li>\n</ul>\n<h2>Installation</h2>\n<p>Using pip</p>\n<pre>pip install powerplantmatching\n</pre>\n<p>or conda (as long as the package is not yet in the conda-forge channel)</p>\n<pre>pip install powerplantmatching entsoe-py --no-deps\nconda install pandas networkx pycountry xlrd seaborn pyyaml requests matplotlib geopy beautifulsoup4 cartopy \n</pre>\n\n<h2>Get the Data</h2>\n<p>In order to directly load  the already build data into a pandas dataframe just call</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">powerplantmatching</span> <span class=\"k\">as</span> <span class=\"nn\">pm</span>\n<span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">powerplants</span><span class=\"p\">(</span><span class=\"n\">from_url</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>which will parse and store the <a href=\"https://raw.githubusercontent.com/FRESNA/powerplantmatching/master/matched_data_red.csv\" rel=\"nofollow\">actual dataset of powerplants of this repository</a>. Setting <code>from_url=False</code> (default) will load all the necessary data files and combine them. Note that this might take some minutes.</p>\n<p>The resulting dataset compared with the capacity statistics provided by the <a href=\"https://data.open-power-system-data.org/national_generation_capacity/2019-02-22\" rel=\"nofollow\">ENTSOE SO&amp;AF</a>:</p>\n<p><img alt=\"Capacity statistics comparison\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3bc7dd5c12223d72da3136330532707c2d61a049/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f465245534e412f706f776572706c616e746d61746368696e672f6d61737465722f6d61746368696e675f616e616c797369732f666163746f725f706c6f745f4d617463686564253230446174612e706e67\"></p>\n<p>The dataset combines the data of all the data sources listed in\n<a href=\"#Data-Sources\" rel=\"nofollow\">Data-Sources</a> and provides the following information:</p>\n<ul>\n<li><strong>Power plant name</strong>      - claim of each database</li>\n<li><strong>Fueltype</strong>          - {Bioenergy, Geothermal, Hard Coal, Hydro, Lignite, Nuclear, Natural Gas, Oil, Solar, Wind, Other}</li>\n<li><strong>Technology</strong>\t\t- {CCGT, OCGT, Steam Turbine, Combustion Engine, Run-Of-River, Pumped Storage, Reservoir}</li>\n<li><strong>Set</strong>\t\t\t- {Power Plant (PP), Combined Heat and Power (CHP), Storages (Stores)}</li>\n<li><strong>Capacity</strong>\t\t\t- [MW]</li>\n<li><strong>Duration</strong> \t- Maximum state of charge capacity in terms of hours at full output capacity</li>\n<li><strong>Dam Information</strong> -  Dam volume [Mm^3] and Dam Height [m]</li>\n<li><strong>Geo-position</strong>\t\t- Latitude, Longitude</li>\n<li><strong>Country</strong>           - EU-27 + CH + NO (+ UK) minus Cyprus and Malta</li>\n<li><strong>YearCommissioned</strong>\t\t- Commmisioning year of the powerplant</li>\n<li><strong>RetroFit</strong>        - Year of last retrofit</li>\n<li><strong>projectID</strong>\t\t\t- Immutable identifier of the power plant</li>\n</ul>\n<h3>Where is the data stored?</h3>\n<p>All data files of the package will be stored in the folder given by <code>pm.core.package_config['data_dir']</code></p>\n<h2>Make your own configuration</h2>\n<p>You have the option to easily manipulate the resulting data modifying the global configuration. Just save the <a href=\"https://github.com/FRESNA/powerplantmatching/blob/master/powerplantmatching/package_data/config.yaml\" rel=\"nofollow\">config.yaml file</a> as <strong>~/.powerplantmatching_config.yaml</strong>  manually or for linux users</p>\n<pre>wget -O ~/.powerplantmatching_config.yaml https://raw.githubusercontent.com/FRESNA/powerplantmatching/master/powerplantmatching/package_data/config.yaml\n</pre>\n<p>and change the <strong>.powerplantmaching_config.yaml</strong> file according to your wishes. Thereby you can</p>\n\n<ul>\n<li>\n<p>determine the global set of <strong>countries</strong> and <strong>fueltypes</strong></p>\n</li>\n<li>\n<p>determine which data sources to combine and which data sources should completely be contained in the final dataset</p>\n</li>\n<li>\n<p>individually filter data sources via <a href=\"http://pandas.pydata.org/pandas-docs/stable/indexing.html#the-query-method\" rel=\"nofollow\">pandas.DataFrame.query</a> statements set as an argument of data source name. See the default  <a href=\"https://github.com/FRESNA/powerplantmatching/blob/master/powerplantmatching/package_data/config.yaml\" rel=\"nofollow\">config.yaml file</a> as an example</p>\n</li>\n</ul>\n<p>Optionally you can:</p>\n<ul>\n<li>\n<p>add your ENTSOE security token to the <strong>.powerplantmaching_config.yaml</strong> file. To enable updating the ENTSOE data by yourself. The token can be obtained by following section 2 of the <a href=\"https://transparency.entsoe.eu/content/static_content/Static%20content/web%20api/Guide.html#_authentication_and_authorisation\" rel=\"nofollow\">RESTful API documentation</a> of the ENTSOE-E Transparency platform.</p>\n</li>\n<li>\n<p>add your Google API key to the config.yaml file to enable geoparsing. The key can be obtained by following the <a href=\"https://developers.google.com/maps/documentation/geocoding/get-api-key\" rel=\"nofollow\">instructions</a>.</p>\n</li>\n</ul>\n<h2>Data-Sources:</h2>\n<ul>\n<li>OPSD - <a href=\"http://data.open-power-system-data.org/\" rel=\"nofollow\">Open Power System Data</a> publish their <a href=\"http://data.open-power-system-data.org/conventional_power_plants/\" rel=\"nofollow\">data</a> under a free license</li>\n<li>GEO - <a href=\"http://globalenergyobservatory.org/\" rel=\"nofollow\">Global Energy Observatory</a>, the data is not directly available on the website, but can be obtained from an <a href=\"https://morph.io/coroa/global_energy_observatory_power_plants\" rel=\"nofollow\">sqlite scraper</a></li>\n<li>GPD - <a href=\"http://datasets.wri.org/dataset/globalpowerplantdatabase\" rel=\"nofollow\">Global Power Plant Database</a> provide their data under a free license</li>\n<li>CARMA - <a href=\"http://carma.org/plant\" rel=\"nofollow\">Carbon Monitoring for Action</a></li>\n<li>ENTSOe - <a href=\"http://entsoe.eu/\" rel=\"nofollow\">European Network of Transmission System Operators for Electricity</a>, annually provides statistics about aggregated power plant capacities. Their data can be used as a validation reference. We further use their <a href=\"https://www.entsoe.eu/db-query/miscellaneous/net-generating-capacity\" rel=\"nofollow\">annual energy generation report from 2010</a> as an input for the hydro power plant classification. The <a href=\"https://transparency.entsoe.eu/generation/r2/installedCapacityPerProductionUnit/show\" rel=\"nofollow\">power plant dataset</a> on the ENTSO-E transparency website is downloaded using the <a href=\"https://transparency.entsoe.eu/content/static_content/Static%20content/web%20api/Guide.html\" rel=\"nofollow\">ENTSO-E Transparency API</a>.</li>\n<li>JRC - <a href=\"https://github.com/energy-modelling-toolkit/hydro-power-database\" rel=\"nofollow\">Joint Research Centre Hydro-power plants database</a></li>\n<li>IRENA - <a href=\"http://resourceirena.irena.org/gateway/dashboard/\" rel=\"nofollow\">International Renewable Energy Agency</a> open available statistics on power plant capacities.</li>\n<li>BNETZA - <a href=\"https://www.bundesnetzagentur.de/EN/Areas/Energy/Companies/SecurityOfSupply/GeneratingCapacity/PowerPlantList/PubliPowerPlantList_node.html\" rel=\"nofollow\">Bundesnetzagentur</a> open available data source for Germany's power plants</li>\n<li>UBA (Umwelt Bundesamt Datenbank \"Kraftwerke in Deutschland)</li>\n</ul>\n<h3>Not available but supported sources:</h3>\n<ul>\n<li>IWPDCY (International Water Power &amp; Dam Country Yearbook)</li>\n<li>WEPP (Platts, World Elecrtric Power Plants Database)</li>\n</ul>\n<p>The merged dataset is available in two versions: The bigger dataset, obtained by</p>\n<pre><span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">powerplants</span><span class=\"p\">(</span><span class=\"n\">reduced</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>links the entries of the matched power plants and lists all the related\nproperties given by the different data-sources. The smaller, reduced dataset, given by</p>\n<pre><span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">powerplants</span><span class=\"p\">()</span>\n</pre>\n<p>claims only the value of the most reliable data source being matched in the individual power plant data entry.\nThe considered reliability scores are:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Dataset</th>\n<th align=\"left\">Reliabilty score</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">JRC</td>\n<td align=\"left\">6</td>\n</tr>\n<tr>\n<td align=\"left\">ESE</td>\n<td align=\"left\">6</td>\n</tr>\n<tr>\n<td align=\"left\">UBA</td>\n<td align=\"left\">5</td>\n</tr>\n<tr>\n<td align=\"left\">OPSD</td>\n<td align=\"left\">5</td>\n</tr>\n<tr>\n<td align=\"left\">OPSD_EU</td>\n<td align=\"left\">5</td>\n</tr>\n<tr>\n<td align=\"left\">OPSD_DE</td>\n<td align=\"left\">5</td>\n</tr>\n<tr>\n<td align=\"left\">WEPP</td>\n<td align=\"left\">4</td>\n</tr>\n<tr>\n<td align=\"left\">ENTSOE</td>\n<td align=\"left\">4</td>\n</tr>\n<tr>\n<td align=\"left\">IWPDCY</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\">GPD</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\">GEO</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\">BNETZA</td>\n<td align=\"left\">3</td>\n</tr>\n<tr>\n<td align=\"left\">CARMA</td>\n<td align=\"left\">1</td>\n</tr></tbody></table>\n<h2>Getting Started</h2>\n<p>A small presentation of the tool is given in the <a href=\"https://github.com/FRESNA/powerplantmatching/blob/master/Example%20of%20Use.ipynb\" rel=\"nofollow\">jupyter notebook</a></p>\n\n<h2>How it works</h2>\n<p>Whereas single databases as the CARMA, GEO or the OPSD database provide non standardized and incomplete information, the datasets can complement each other and improve their reliability.\nIn a first step, powerplantmatching converts all powerplant dataset into a standardized format with a defined set of columns and values. The second part consists of aggregating power plant blocks together into units. Since some of the datasources provide their powerplant records on unit level, without detailed information about lower-level blocks, comparing with other sources is only possible on unit level. In the third and name-giving step the tool combines (or matches)different, standardized and aggregated input sources keeping only powerplants units which appear in more than one source. The matched data afterwards is complemented by data entries of reliable sources which have not matched.</p>\n<p>The aggregation and matching process heavily relies on\n<a href=\"https://github.com/larsga/Duke\" rel=\"nofollow\">DUKE</a>, a java application specialized\nfor deduplicating and linking data. It provides many built-in\ncomparators such as numerical, string or geoposition comparators.  The\nengine does a detailed comparison for each single argument (power\nplant name, fuel-type etc.) using adjusted comparators and weights.\nFrom the individual scores for each column it computes a compound\nscore for the likeliness that the two powerplant records refer to the\nsame powerplant. If the score exceeds a given threshold, the two\nrecords of the power plant are linked and merged into one data set.</p>\n<p>Let's make that a bit more concrete by giving a quick\nexample. Consider the following two data sets</p>\n<h3>Dataset 1:</h3>\n<table>\n<thead>\n<tr>\n<th align=\"right\"></th>\n<th align=\"left\">Name</th>\n<th align=\"left\">Fueltype</th>\n<th align=\"right\">Classification</th>\n<th align=\"left\">Country</th>\n<th align=\"right\">Capacity</th>\n<th align=\"right\">lat</th>\n<th align=\"right\">lon</th>\n<th align=\"right\">File</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\">0</td>\n<td align=\"left\">Aarberg</td>\n<td align=\"left\">Hydro</td>\n<td align=\"right\">nan</td>\n<td align=\"left\">Switzerland</td>\n<td align=\"right\">14.609</td>\n<td align=\"right\">47.0444</td>\n<td align=\"right\">7.27578</td>\n<td align=\"right\">nan</td>\n</tr>\n<tr>\n<td align=\"right\">1</td>\n<td align=\"left\">Abbey mills pumping</td>\n<td align=\"left\">Oil</td>\n<td align=\"right\">nan</td>\n<td align=\"left\">United Kingdom</td>\n<td align=\"right\">6.4</td>\n<td align=\"right\">51.687</td>\n<td align=\"right\">-0.0042057</td>\n<td align=\"right\">nan</td>\n</tr>\n<tr>\n<td align=\"right\">2</td>\n<td align=\"left\">Abertay</td>\n<td align=\"left\">Other</td>\n<td align=\"right\">nan</td>\n<td align=\"left\">United Kingdom</td>\n<td align=\"right\">8</td>\n<td align=\"right\">57.1785</td>\n<td align=\"right\">-2.18679</td>\n<td align=\"right\">nan</td>\n</tr>\n<tr>\n<td align=\"right\">3</td>\n<td align=\"left\">Aberthaw</td>\n<td align=\"left\">Coal</td>\n<td align=\"right\">nan</td>\n<td align=\"left\">United Kingdom</td>\n<td align=\"right\">1552.5</td>\n<td align=\"right\">51.3875</td>\n<td align=\"right\">-3.40675</td>\n<td align=\"right\">nan</td>\n</tr>\n<tr>\n<td align=\"right\">4</td>\n<td align=\"left\">Ablass</td>\n<td align=\"left\">Wind</td>\n<td align=\"right\">nan</td>\n<td align=\"left\">Germany</td>\n<td align=\"right\">18</td>\n<td align=\"right\">51.2333</td>\n<td align=\"right\">12.95</td>\n<td align=\"right\">nan</td>\n</tr>\n<tr>\n<td align=\"right\">5</td>\n<td align=\"left\">Abono</td>\n<td align=\"left\">Coal</td>\n<td align=\"right\">nan</td>\n<td align=\"left\">Spain</td>\n<td align=\"right\">921.7</td>\n<td align=\"right\">43.5588</td>\n<td align=\"right\">-5.72287</td>\n<td align=\"right\">nan</td>\n</tr></tbody></table>\n<p>and</p>\n<h3>Dataset 2:</h3>\n<table>\n<thead>\n<tr>\n<th align=\"right\"></th>\n<th align=\"left\">Name</th>\n<th align=\"left\">Fueltype</th>\n<th align=\"left\">Classification</th>\n<th align=\"left\">Country</th>\n<th align=\"right\">Capacity</th>\n<th align=\"right\">lat</th>\n<th align=\"right\">lon</th>\n<th align=\"right\">File</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\">0</td>\n<td align=\"left\">Aarberg</td>\n<td align=\"left\">Hydro</td>\n<td align=\"left\">nan</td>\n<td align=\"left\">Switzerland</td>\n<td align=\"right\">15.5</td>\n<td align=\"right\">47.0378</td>\n<td align=\"right\">7.272</td>\n<td align=\"right\">nan</td>\n</tr>\n<tr>\n<td align=\"right\">1</td>\n<td align=\"left\">Aberthaw</td>\n<td align=\"left\">Coal</td>\n<td align=\"left\">Thermal</td>\n<td align=\"left\">United Kingdom</td>\n<td align=\"right\">1500</td>\n<td align=\"right\">51.3873</td>\n<td align=\"right\">-3.4049</td>\n<td align=\"right\">nan</td>\n</tr>\n<tr>\n<td align=\"right\">2</td>\n<td align=\"left\">Abono</td>\n<td align=\"left\">Coal</td>\n<td align=\"left\">Thermal</td>\n<td align=\"left\">Spain</td>\n<td align=\"right\">921.7</td>\n<td align=\"right\">43.5528</td>\n<td align=\"right\">-5.7231</td>\n<td align=\"right\">nan</td>\n</tr>\n<tr>\n<td align=\"right\">3</td>\n<td align=\"left\">Abwinden asten</td>\n<td align=\"left\">Hydro</td>\n<td align=\"left\">nan</td>\n<td align=\"left\">Austria</td>\n<td align=\"right\">168</td>\n<td align=\"right\">48.248</td>\n<td align=\"right\">14.4305</td>\n<td align=\"right\">nan</td>\n</tr>\n<tr>\n<td align=\"right\">4</td>\n<td align=\"left\">Aceca</td>\n<td align=\"left\">Oil</td>\n<td align=\"left\">CHP</td>\n<td align=\"left\">Spain</td>\n<td align=\"right\">629</td>\n<td align=\"right\">39.941</td>\n<td align=\"right\">-3.8569</td>\n<td align=\"right\">nan</td>\n</tr>\n<tr>\n<td align=\"right\">5</td>\n<td align=\"left\">Aceca fenosa</td>\n<td align=\"left\">Natural Gas</td>\n<td align=\"left\">CCGT</td>\n<td align=\"left\">Spain</td>\n<td align=\"right\">400</td>\n<td align=\"right\">39.9427</td>\n<td align=\"right\">-3.8548</td>\n<td align=\"right\">nan</td>\n</tr></tbody></table>\n<p>where Dataset 2 has the higher reliability score. Apparently entries 0, 3 and 5 of Dataset 1 relate to the same\npower plants as the entries 0,1 and 2 of Dataset 2. The toolset detects those similarities and combines them into the following set, but prioritising the values of Dataset 2:</p>\n<table>\n<thead>\n<tr>\n<th align=\"right\"></th>\n<th align=\"left\">Name</th>\n<th align=\"left\">Country</th>\n<th align=\"left\">Fueltype</th>\n<th align=\"left\">Classification</th>\n<th align=\"right\">Capacity</th>\n<th align=\"right\">lat</th>\n<th align=\"right\">lon</th>\n<th align=\"right\">File</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\">0</td>\n<td align=\"left\">Aarberg</td>\n<td align=\"left\">Switzerland</td>\n<td align=\"left\">Hydro</td>\n<td align=\"left\">nan</td>\n<td align=\"right\">15.5</td>\n<td align=\"right\">47.0378</td>\n<td align=\"right\">7.272</td>\n<td align=\"right\">nan</td>\n</tr>\n<tr>\n<td align=\"right\">1</td>\n<td align=\"left\">Aberthaw</td>\n<td align=\"left\">United Kingdom</td>\n<td align=\"left\">Coal</td>\n<td align=\"left\">Thermal</td>\n<td align=\"right\">1500</td>\n<td align=\"right\">51.3873</td>\n<td align=\"right\">-3.4049</td>\n<td align=\"right\">nan</td>\n</tr>\n<tr>\n<td align=\"right\">2</td>\n<td align=\"left\">Abono</td>\n<td align=\"left\">Spain</td>\n<td align=\"left\">Coal</td>\n<td align=\"left\">Thermal</td>\n<td align=\"right\">921.7</td>\n<td align=\"right\">43.5528</td>\n<td align=\"right\">-5.7231</td>\n<td align=\"right\">nan</td>\n</tr></tbody></table>\n<h2>Citing powerplantmatching</h2>\n<p>If you want to cite powerplantmatching, use the following paper</p>\n<ul>\n<li>F. Gotzens, H. Heinrichs, J. H\u00f6rsch, and F. Hofmann, <a href=\"https://www.sciencedirect.com/science/article/pii/S2211467X18301056?dgcid=author\" rel=\"nofollow\">Performing energy modelling exercises in a transparent way - The issue of data quality in power plant databases</a>, Energy Strategy Reviews, vol. 23, pp. 1\u201312, Jan. 2019.</li>\n</ul>\n<p>with bibtex</p>\n<pre><code>@article{gotzens_performing_2019,\n\ttitle = {Performing energy modelling exercises in a transparent way - {The} issue of data quality in power plant databases},\n\tvolume = {23},\n\tissn = {2211467X},\n\turl = {https://linkinghub.elsevier.com/retrieve/pii/S2211467X18301056},\n\tdoi = {10.1016/j.esr.2018.11.004},\n\tlanguage = {en},\n\turldate = {2018-12-03},\n\tjournal = {Energy Strategy Reviews},\n\tauthor = {Gotzens, Fabian and Heinrichs, Heidi and H\u00f6rsch, Jonas and Hofmann, Fabian},\n\tmonth = jan,\n\tyear = {2019},\n\tpages = {1--12}\n}\n</code></pre>\n<p>and/or the current release stored on Zenodo with a release-specific DOI:</p>\n<p><a href=\"https://zenodo.org/record/3358985#.XURat99fjRY\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c63dc508a2fa03864e891ec6d9cf98517a232fea/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e333335383938352e737667\"></a></p>\n<h2>Acknowledgements</h2>\n<p>The development of powerplantmatching was helped considerably by\nin-depth discussions and exchanges of ideas and code with</p>\n<ul>\n<li>Tom Brown from Karlsruhe Institute for Technology</li>\n<li>Chris Davis from University of Groningen and</li>\n<li>Johannes Friedrich, Roman Hennig and Colin McCormick of the World Resources Institute</li>\n</ul>\n<h2>Licence</h2>\n<p>Copyright 2018-2020 Fabian Gotzens (FZ J\u00fclich), Jonas H\u00f6rsch (KIT), Fabian Hofmann (FIAS)</p>\n<p>powerplantmatching is released as free software under the\n<a href=\"http://www.gnu.org/licenses/gpl-3.0.en.html\" rel=\"nofollow\">GPLv3</a>, see\n<a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> for further information.</p>\n\n          </div>"}, "last_serial": 6749623, "releases": {"0.4.0": [{"comment_text": "", "digests": {"md5": "68c7adb3743cba11592e528cec3f4ee8", "sha256": "f841a47936b88c696e56774cd4d9689ac8bac12d192facd0e4010b30b13ee701"}, "downloads": -1, "filename": "powerplantmatching-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "68c7adb3743cba11592e528cec3f4ee8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 704327, "upload_time": "2019-07-15T17:49:55", "upload_time_iso_8601": "2019-07-15T17:49:55.089219Z", "url": "https://files.pythonhosted.org/packages/96/d4/1365f55786888935d76a2fba2cc02b568b74512f73469748d0759456294b/powerplantmatching-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f592dbe689ad689755a2d3e05053235a", "sha256": "f84b8b715e00a6bd74c340a04f71bbd00c6e959916e4b9d85e6450358cf2f84e"}, "downloads": -1, "filename": "powerplantmatching-0.4.0.tar.gz", "has_sig": false, "md5_digest": "f592dbe689ad689755a2d3e05053235a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 701143, "upload_time": "2019-07-15T17:49:58", "upload_time_iso_8601": "2019-07-15T17:49:58.510941Z", "url": "https://files.pythonhosted.org/packages/09/5d/68a1a058554904d15f3caa695f686f01b988c33b230988dd359628087a9d/powerplantmatching-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "f15a30b77721039ca4abffe8dd6a573f", "sha256": "b77a82e3532aa3c43da55e6096c296e9c3eb6c13b95673e2069cdd9a53e682ab"}, "downloads": -1, "filename": "powerplantmatching-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f15a30b77721039ca4abffe8dd6a573f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 711471, "upload_time": "2019-08-02T14:40:16", "upload_time_iso_8601": "2019-08-02T14:40:16.726748Z", "url": "https://files.pythonhosted.org/packages/f8/d5/84ed42b40b1f118edfdaa474bb09c9682b1f95328b90b274a681dcfa7e83/powerplantmatching-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f05e80faafe488dbb7c6b07950afb8f5", "sha256": "f8adbd21322a9ae78a412c62bd31bc9d54e498389ac305a405bda2a15bf06e94"}, "downloads": -1, "filename": "powerplantmatching-0.4.1.tar.gz", "has_sig": false, "md5_digest": "f05e80faafe488dbb7c6b07950afb8f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 708074, "upload_time": "2019-08-02T14:40:36", "upload_time_iso_8601": "2019-08-02T14:40:36.054779Z", "url": "https://files.pythonhosted.org/packages/c4/75/3f797a33946f0f05469d9c981a95d3ac1fe7083c7b2625fd399141336464/powerplantmatching-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "cf4e53fae2ffa2c6a869985619268ab7", "sha256": "0bc42fab02c6caf108ecf566a40c358389c4b3b6b9dfc05249f098e51974af7a"}, "downloads": -1, "filename": "powerplantmatching-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cf4e53fae2ffa2c6a869985619268ab7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 711965, "upload_time": "2019-11-04T15:01:53", "upload_time_iso_8601": "2019-11-04T15:01:53.561008Z", "url": "https://files.pythonhosted.org/packages/f1/2b/b7df62d10ab56c0b1333c934154086fc1018944c8dd1ecc63b9b2ef18810/powerplantmatching-0.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "325e1155b422db78e94ad7e2e395b52a", "sha256": "fd4afe241bceb93ed593f6b6abe699a9507dff30ea4525cec8db612ca5304411"}, "downloads": -1, "filename": "powerplantmatching-0.4.2.tar.gz", "has_sig": false, "md5_digest": "325e1155b422db78e94ad7e2e395b52a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 708740, "upload_time": "2019-11-04T15:01:56", "upload_time_iso_8601": "2019-11-04T15:01:56.580021Z", "url": "https://files.pythonhosted.org/packages/66/d4/8f0ea58a4613eb23fe43617514e3ffacb04382d43c165e702c1fb0a9744e/powerplantmatching-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "f487671ca4e7e48928207c106dc74fd0", "sha256": "abfd597c278a76f80837cb929ffae66c9bd10ed5676aa2beb71232d8bb6b56af"}, "downloads": -1, "filename": "powerplantmatching-0.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f487671ca4e7e48928207c106dc74fd0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 711953, "upload_time": "2019-11-27T10:51:02", "upload_time_iso_8601": "2019-11-27T10:51:02.227016Z", "url": "https://files.pythonhosted.org/packages/c6/32/8b4af20e0308cdee1f562641cf788018ae83cf755a5f1adbcbffa1412794/powerplantmatching-0.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2305bae37e5a65362aa7fa958fc52865", "sha256": "e26436e8c64386d044eb3d532314e4eaba782dd44ebe0765994d310032db140a"}, "downloads": -1, "filename": "powerplantmatching-0.4.3.tar.gz", "has_sig": false, "md5_digest": "2305bae37e5a65362aa7fa958fc52865", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 708741, "upload_time": "2019-11-27T10:51:06", "upload_time_iso_8601": "2019-11-27T10:51:06.729464Z", "url": "https://files.pythonhosted.org/packages/7e/42/089c153556669f5221687229e07455b29db1b991b9ff0e54fd8ab6cdfe83/powerplantmatching-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "e1706b48739856391f07979cad3c548b", "sha256": "de69cf8ad7399a56adec84d55076591119f48ab53e9e915eee648dca033cf702"}, "downloads": -1, "filename": "powerplantmatching-0.4.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e1706b48739856391f07979cad3c548b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 712304, "upload_time": "2020-03-04T17:03:18", "upload_time_iso_8601": "2020-03-04T17:03:18.950778Z", "url": "https://files.pythonhosted.org/packages/f9/dd/f9425b5c05453319e736a5afeb2a16bb425bdcd7ba220fada657be4022d6/powerplantmatching-0.4.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eaf43deb6fd7733af39727b21f789bda", "sha256": "9ff5266bf11d4119fd32a7781a0aec8abdc61264832b9de5dece9451678d425e"}, "downloads": -1, "filename": "powerplantmatching-0.4.4.tar.gz", "has_sig": false, "md5_digest": "eaf43deb6fd7733af39727b21f789bda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 709136, "upload_time": "2020-03-04T17:03:25", "upload_time_iso_8601": "2020-03-04T17:03:25.086809Z", "url": "https://files.pythonhosted.org/packages/f5/fa/38acff832ec954cd2ea1203520b03e88c80b8645d7423eced849174de2b7/powerplantmatching-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "3030f03dda8e00601671d199fe124e97", "sha256": "d703d1c1e1253582a4c1f5939168999c89a2e56988018676330b2841177bc1fc"}, "downloads": -1, "filename": "powerplantmatching-0.4.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3030f03dda8e00601671d199fe124e97", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 712301, "upload_time": "2020-03-04T18:33:28", "upload_time_iso_8601": "2020-03-04T18:33:28.185116Z", "url": "https://files.pythonhosted.org/packages/13/63/35586ebaa9221a249e5d52d1025ddd9d59bff878b33ccb5791536820f76d/powerplantmatching-0.4.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b4f74de807d803bfaaa4a1a26c07631", "sha256": "374ee6d736dbbd2af54736d592ebf2abd0668aa019b21e88afbd761c31882fe6"}, "downloads": -1, "filename": "powerplantmatching-0.4.5.tar.gz", "has_sig": false, "md5_digest": "3b4f74de807d803bfaaa4a1a26c07631", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 709130, "upload_time": "2020-03-04T18:33:34", "upload_time_iso_8601": "2020-03-04T18:33:34.683673Z", "url": "https://files.pythonhosted.org/packages/ee/45/b89e6eb3598586c79871a5a9f9f7d7cd85f6ca5367daf870e2978ee5520a/powerplantmatching-0.4.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3030f03dda8e00601671d199fe124e97", "sha256": "d703d1c1e1253582a4c1f5939168999c89a2e56988018676330b2841177bc1fc"}, "downloads": -1, "filename": "powerplantmatching-0.4.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3030f03dda8e00601671d199fe124e97", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 712301, "upload_time": "2020-03-04T18:33:28", "upload_time_iso_8601": "2020-03-04T18:33:28.185116Z", "url": "https://files.pythonhosted.org/packages/13/63/35586ebaa9221a249e5d52d1025ddd9d59bff878b33ccb5791536820f76d/powerplantmatching-0.4.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b4f74de807d803bfaaa4a1a26c07631", "sha256": "374ee6d736dbbd2af54736d592ebf2abd0668aa019b21e88afbd761c31882fe6"}, "downloads": -1, "filename": "powerplantmatching-0.4.5.tar.gz", "has_sig": false, "md5_digest": "3b4f74de807d803bfaaa4a1a26c07631", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 709130, "upload_time": "2020-03-04T18:33:34", "upload_time_iso_8601": "2020-03-04T18:33:34.683673Z", "url": "https://files.pythonhosted.org/packages/ee/45/b89e6eb3598586c79871a5a9f9f7d7cd85f6ca5367daf870e2978ee5520a/powerplantmatching-0.4.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:20:38 2020"}