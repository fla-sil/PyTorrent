{"info": {"author": "Chris Amico", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Database"], "description": "[![Build Status](https://travis-ci.com/eyeseast/feed-to-sqlite.svg?branch=master)](https://travis-ci.com/eyeseast/feed-to-sqlite)\n\n# feed-to-sqlite\n\nDownload an RSS or Atom feed and save it to a SQLite database. This is meant to work well with [datasette](https://github.com/simonw/datasette).\n\n## Installation\n\n```sh\npip install feed-to-sqlite\n```\n\n## CLI Usage\n\nLet's grab the ATOM feeds for [items I've shared on NewsBlur](http://chrisamico.newsblur.com/social/rss/35501/chrisamico) and [my instapaper favorites](https://www.instapaper.com/starred/rss/13475/qUh7yaOUGOSQeANThMyxXdYnho) save each its own table.\n\n```sh\nfeed-to-sqlite feeds.db http://chrisamico.newsblur.com/social/rss/35501/chrisamico https://www.instapaper.com/starred/rss/13475/qUh7yaOUGOSQeANThMyxXdYnho\n```\n\nThis will use a SQLite database called `feeds.db`, creating it if necessary. By default, each feed gets its own table, named based on a slugified version of the feed's title.\n\nTo load all items from multiple feeds into a common (or pre-existing) table, pass a `--table` argument:\n\n```sh\nfeed-to-sqlite feeds.db --table links <url> <url>\n```\n\nThat will put all items in a table called `links`.\n\nEach feed also creates an entry in a `feeds` table containing top-level metadata for each feed. Each item will have a foreign key to the originating feed. This is especially useful if combining feeds into a shared table.\n\n## Python API\n\nOne function, `ingest_feed`, does most of the work here. The following will create a database called `feeds.db` and download my NewsBlur shared items into a new table called `links`.\n\n```python\nfrom feed_to_sqlite import ingest_feed\n\nurl = \"http://chrisamico.newsblur.com/social/rss/35501/chrisamico\"\n\ningest_feed(\"feeds.db\", url=url, table_name=\"links\")\n```\n\n## Development\n\nTests use [pytest](https://docs.pytest.org/). Run `pytest tests/` to run the test suite.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/eyeseast/feed-to-sqlite", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "feed-to-sqlite", "package_url": "https://pypi.org/project/feed-to-sqlite/", "platform": "", "project_url": "https://pypi.org/project/feed-to-sqlite/", "project_urls": {"Homepage": "https://github.com/eyeseast/feed-to-sqlite"}, "release_url": "https://pypi.org/project/feed-to-sqlite/0.2.0/", "requires_dist": ["sqlite-utils", "requests", "feedparser", "awesome-slugify", "pytest ; extra == 'test'"], "requires_python": "", "summary": "Save an RSS or ATOM feed to a SQLITE database", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.com/eyeseast/feed-to-sqlite\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f398ba04d91f66ef97417185d223bec895fa5310/68747470733a2f2f7472617669732d63692e636f6d2f65796573656173742f666565642d746f2d73716c6974652e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>feed-to-sqlite</h1>\n<p>Download an RSS or Atom feed and save it to a SQLite database. This is meant to work well with <a href=\"https://github.com/simonw/datasette\" rel=\"nofollow\">datasette</a>.</p>\n<h2>Installation</h2>\n<pre>pip install feed-to-sqlite\n</pre>\n<h2>CLI Usage</h2>\n<p>Let's grab the ATOM feeds for <a href=\"http://chrisamico.newsblur.com/social/rss/35501/chrisamico\" rel=\"nofollow\">items I've shared on NewsBlur</a> and <a href=\"https://www.instapaper.com/starred/rss/13475/qUh7yaOUGOSQeANThMyxXdYnho\" rel=\"nofollow\">my instapaper favorites</a> save each its own table.</p>\n<pre>feed-to-sqlite feeds.db http://chrisamico.newsblur.com/social/rss/35501/chrisamico https://www.instapaper.com/starred/rss/13475/qUh7yaOUGOSQeANThMyxXdYnho\n</pre>\n<p>This will use a SQLite database called <code>feeds.db</code>, creating it if necessary. By default, each feed gets its own table, named based on a slugified version of the feed's title.</p>\n<p>To load all items from multiple feeds into a common (or pre-existing) table, pass a <code>--table</code> argument:</p>\n<pre>feed-to-sqlite feeds.db --table links &lt;url&gt; &lt;url&gt;\n</pre>\n<p>That will put all items in a table called <code>links</code>.</p>\n<p>Each feed also creates an entry in a <code>feeds</code> table containing top-level metadata for each feed. Each item will have a foreign key to the originating feed. This is especially useful if combining feeds into a shared table.</p>\n<h2>Python API</h2>\n<p>One function, <code>ingest_feed</code>, does most of the work here. The following will create a database called <code>feeds.db</code> and download my NewsBlur shared items into a new table called <code>links</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">feed_to_sqlite</span> <span class=\"kn\">import</span> <span class=\"n\">ingest_feed</span>\n\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://chrisamico.newsblur.com/social/rss/35501/chrisamico\"</span>\n\n<span class=\"n\">ingest_feed</span><span class=\"p\">(</span><span class=\"s2\">\"feeds.db\"</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">table_name</span><span class=\"o\">=</span><span class=\"s2\">\"links\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Development</h2>\n<p>Tests use <a href=\"https://docs.pytest.org/\" rel=\"nofollow\">pytest</a>. Run <code>pytest tests/</code> to run the test suite.</p>\n\n          </div>"}, "last_serial": 6281977, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fb4ef139bb68d11c4a8ca3f6a8c283ed", "sha256": "79ecece4d1d9678f85000eca11ee7bf9e2ffa8515fdb43f488b41318575e9d93"}, "downloads": -1, "filename": "feed_to_sqlite-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fb4ef139bb68d11c4a8ca3f6a8c283ed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5013, "upload_time": "2019-12-11T15:00:56", "upload_time_iso_8601": "2019-12-11T15:00:56.537938Z", "url": "https://files.pythonhosted.org/packages/d5/58/e7b964a1ba5b674da4abe805b5ebf9001d1f5abefa03f28b9d61813fb06c/feed_to_sqlite-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51fefc459e3d4e7c09575e7b20a618c2", "sha256": "68b403f275f05b527750fe34b4bc3377ce1f7167c673aeac32209551b1b207fa"}, "downloads": -1, "filename": "feed-to-sqlite-0.1.0.tar.gz", "has_sig": false, "md5_digest": "51fefc459e3d4e7c09575e7b20a618c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3290, "upload_time": "2019-12-11T15:00:59", "upload_time_iso_8601": "2019-12-11T15:00:59.035062Z", "url": "https://files.pythonhosted.org/packages/86/14/1dd29930c1c70c0f7b3776309d4d8550fa42699e7bac06abecf15481b4a3/feed-to-sqlite-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9869b93b08e6e715308c121cf698a957", "sha256": "c9b2015646678246842bf3aee5b67c7b5ab1e0b020208353621ba64a20a62d2f"}, "downloads": -1, "filename": "feed_to_sqlite-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9869b93b08e6e715308c121cf698a957", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5409, "upload_time": "2019-12-12T01:43:54", "upload_time_iso_8601": "2019-12-12T01:43:54.615202Z", "url": "https://files.pythonhosted.org/packages/aa/95/cd95b83208078f984e4ea9cfa6304b876148caa78912ad69f608218399c2/feed_to_sqlite-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37da7e305b18fe100c4d70e37a0c674e", "sha256": "4f950554e74f714d6c85bb3d6b04847c5ce6a0e1c55725498ae4f1420581127e"}, "downloads": -1, "filename": "feed-to-sqlite-0.2.0.tar.gz", "has_sig": false, "md5_digest": "37da7e305b18fe100c4d70e37a0c674e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3667, "upload_time": "2019-12-12T01:43:56", "upload_time_iso_8601": "2019-12-12T01:43:56.895581Z", "url": "https://files.pythonhosted.org/packages/29/4c/3fc1ef078622ace5c96389ca7edef08dcad3b0bb414b6c551288195ef638/feed-to-sqlite-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9869b93b08e6e715308c121cf698a957", "sha256": "c9b2015646678246842bf3aee5b67c7b5ab1e0b020208353621ba64a20a62d2f"}, "downloads": -1, "filename": "feed_to_sqlite-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9869b93b08e6e715308c121cf698a957", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5409, "upload_time": "2019-12-12T01:43:54", "upload_time_iso_8601": "2019-12-12T01:43:54.615202Z", "url": "https://files.pythonhosted.org/packages/aa/95/cd95b83208078f984e4ea9cfa6304b876148caa78912ad69f608218399c2/feed_to_sqlite-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37da7e305b18fe100c4d70e37a0c674e", "sha256": "4f950554e74f714d6c85bb3d6b04847c5ce6a0e1c55725498ae4f1420581127e"}, "downloads": -1, "filename": "feed-to-sqlite-0.2.0.tar.gz", "has_sig": false, "md5_digest": "37da7e305b18fe100c4d70e37a0c674e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3667, "upload_time": "2019-12-12T01:43:56", "upload_time_iso_8601": "2019-12-12T01:43:56.895581Z", "url": "https://files.pythonhosted.org/packages/29/4c/3fc1ef078622ace5c96389ca7edef08dcad3b0bb414b6c551288195ef638/feed-to-sqlite-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:59 2020"}