{"info": {"author": "Luca Sbardella", "author_email": "luca@quantmind.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Plugins", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: JavaScript", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Topic :: Office/Business :: Financial", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Mathematics"], "description": "A statistic package for python with enphasis on timeseries analysis.\nBuilt around numpy_, it provides several back-end timeseries classes including R-based objects via rpy2_.\nIt is shipped with a domain specific language for timeseries analysis\nand manipulation built on to of ply_.\nIt requires Python 2.6 and up, including Python 3 versions.\n\n--\n\n:Documentation: http://packages.python.org/dynts/\n:Dowloads: http://pypi.python.org/pypi/dynts/\n:Source: http://github.com/quantmind/dynts\n:Keywords: timeseries, quantitative, finance, statistics, numpy, R, web\n\n--\n\n\n.. contents::\n    :local:\n\n\nTimeserie Object\n========================\n\nTo create a timeseries object directly::\n\n\t>>> from dynts import timeseries\n\t>>> ts = timeseries('test')\n\t>>> ts.type\n\t'zoo'\n\t>>> ts.name\n\t'test'\n\t>>> ts\n\tTimeSeries:zoo:test\n\t>>> str(ts)\n\t'test'\n\n\nDSL\n=======\nAt the core of the library there is a Domain-Specific-Language (DSL_) dedicated\nto timeserie analysis and manipulation. DynTS makes timeserie manipulation easy and fun.\nThis is a simple multiplication::\n\t\n\t>>> import dynts\n\t>>> e = dynts.parse('2*GOOG')\n\t>>> e\n\t2.0 * goog\n\t>>> len(e)\n\t2\n\t>>> list(e)\n\t[2.0, goog]\n\t>>> ts = dynts.evaluate(e).unwind()\n\t>>> ts\n\tTimeSeries:zoo:2.0 * goog\n\t>>> len(ts)\n\t251\n\n\nRequirements\n=====================\nThere are few requirements that must be met:\n\n* python_ 2.6 up to python 3.2.\n* numpy_ version 1.5.1 or higher for arrays and matrices.\n* ply_ version 3.3 or higher, the building block of the DSL_.\n* ccy_ for date and currency manipulation.\n\nR backend\n===============================\nDepending on the back-end used, additional dependencies need to be met.\nFor example, there are back-ends depending on the following R packages:\n\n* rpy2_ if an R_ TimeSeries back-end is used (default).\n* zoo_ and PerformanceAnlytics_ for the ``zoo`` back-end (currently the default one)\n* timeSeries_ for the ``rmetrics`` back-end \n\nInstalling rpy2_ on Linux is straightforward, on windows it requires the\n`python for windows`__ extension library.\n\nOptional Requirements\n===============================\n\n* cython_ for performance. The library is not strictly dependent on cython, however its usage\n  is highly recommended. If available several python modules will be replaced by more efficient compiled C code.\n* xlwt_ to create spreadsheet from timeseries.\n* matplotlib_ for plotting.\n* djpcms_ for the ``web.views`` module.\n\n__ http://sourceforge.net/projects/pywin32/files/\n\n\n.. _running-tests:\n\nRunning Tests\n=================\nThere are three types of tests available:\n\n* ``regression`` for unit and regression tests.\n* ``profile`` for analysing performance of different backends and impact of cython_.\n* ``bench`` same as ``profile`` but geared towards speed rather than profiling.\n  \nFrom the distribution directory type::\n\t\n\tpython runtests.py\n\t\nThis will run by default the regression tests. To run a profile test\ntype::\n\n\tpython runtests.py -t profile <test-name>\n\t\nwhere ``<test-name>`` is the name of a profile test.\nTo obtain a list of available tests for each test type, run::\n\n\tpython runtests.py --list\n\nfor regression, or:: \n\n\tpython runtests.py -t profile --list\n\t\nfor profile, or::\n\n\tpython runtests.py -t bench --list\n\t\nfrom benchmarks.\n\t\nIf you access the internet behind a proxy server, pass the ``-p`` option, for example::\n\n\tpython runtests.py -p http://myproxy.com:80\n\nIt is needed since during tests some data is fetched from google finance.\n\nTo access coverage of tests you need to install the coverage_ package and run the tests using::\n\n\tcoverage run runtests.py\n\t\nand to check out the coverage report::\n\n\tcoverage report -m\n\t\n\nKudos\n===========\n* numpy_ developers.\n\n\nCommunity\n=================\nTrying to use an IRC channel **#dynts** on ``irc.freenode.net``\n(you can use the webchat at http://webchat.freenode.net/).\n\nIf you find a bug or would like to request a feature, please `submit an issue`__.\n\n__ http://github.com/quantmind/dynts/issues\n    \n.. _numpy: http://numpy.scipy.org/\n.. _ply: http://www.dabeaz.com/ply/\n.. _rpy2: http://rpy.sourceforge.net/rpy2.html\n.. _DSL: http://en.wikipedia.org/wiki/Domain-specific_language\n.. _R: http://www.r-project.org/\n.. _ccy: http://code.google.com/p/ccy/\n.. _zoo: http://cran.r-project.org/web/packages/zoo/index.html\n.. _PerformanceAnlytics: http://cran.r-project.org/web/packages/PerformanceAnalytics/index.html\n.. _timeSeries: http://cran.r-project.org/web/packages/timeSeries/index.html\n.. _Python: http://www.python.org/\n.. _xlwt: http://pypi.python.org/pypi/xlwt\n.. _matplotlib: http://matplotlib.sourceforge.net/\n.. _djpcms: http://djpcms.com\n.. _coverage: http://nedbatchelder.com/code/coverage/\n.. _cython: http://www.cython.org/", "description_content_type": null, "docs_url": "https://pythonhosted.org/dynts/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/quantmind/dynts/", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "dynts", "package_url": "https://pypi.org/project/dynts/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dynts/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/quantmind/dynts/"}, "release_url": "https://pypi.org/project/dynts/0.4.1/", "requires_dist": null, "requires_python": null, "summary": "Quantitative financial timeseries analysis", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A statistic package for python with enphasis on timeseries analysis.\nBuilt around <a href=\"http://numpy.scipy.org/\" rel=\"nofollow\">numpy</a>, it provides several back-end timeseries classes including R-based objects via <a href=\"http://rpy.sourceforge.net/rpy2.html\" rel=\"nofollow\">rpy2</a>.\nIt is shipped with a domain specific language for timeseries analysis\nand manipulation built on to of <a href=\"http://www.dabeaz.com/ply/\" rel=\"nofollow\">ply</a>.\nIt requires Python 2.6 and up, including Python 3 versions.</p>\n<p>\u2013</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Documentation:</th><td><a href=\"http://packages.python.org/dynts/\" rel=\"nofollow\">http://packages.python.org/dynts/</a></td>\n</tr>\n<tr><th>Dowloads:</th><td><a href=\"http://pypi.python.org/pypi/dynts/\" rel=\"nofollow\">http://pypi.python.org/pypi/dynts/</a></td>\n</tr>\n<tr><th>Source:</th><td><a href=\"http://github.com/quantmind/dynts\" rel=\"nofollow\">http://github.com/quantmind/dynts</a></td>\n</tr>\n<tr><th>Keywords:</th><td>timeseries, quantitative, finance, statistics, numpy, R, web</td>\n</tr>\n</tbody>\n</table>\n<p>\u2013</p>\n<div id=\"contents\">\n<ul>\n<li><a href=\"#timeserie-object\" id=\"id5\" rel=\"nofollow\">Timeserie Object</a></li>\n<li><a href=\"#dsl\" id=\"id6\" rel=\"nofollow\">DSL</a></li>\n<li><a href=\"#requirements\" id=\"id7\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#r-backend\" id=\"id8\" rel=\"nofollow\">R backend</a></li>\n<li><a href=\"#optional-requirements\" id=\"id9\" rel=\"nofollow\">Optional Requirements</a></li>\n<li><a href=\"#id2\" id=\"id10\" rel=\"nofollow\">Running Tests</a></li>\n<li><a href=\"#kudos\" id=\"id11\" rel=\"nofollow\">Kudos</a></li>\n<li><a href=\"#community\" id=\"id12\" rel=\"nofollow\">Community</a></li>\n</ul>\n</div>\n<div id=\"timeserie-object\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Timeserie Object</a></h2>\n<p>To create a timeseries object directly:</p>\n<pre>&gt;&gt;&gt; from dynts import timeseries\n&gt;&gt;&gt; ts = timeseries('test')\n&gt;&gt;&gt; ts.type\n'zoo'\n&gt;&gt;&gt; ts.name\n'test'\n&gt;&gt;&gt; ts\nTimeSeries:zoo:test\n&gt;&gt;&gt; str(ts)\n'test'\n</pre>\n</div>\n<div id=\"dsl\">\n<h2><a href=\"#id6\" rel=\"nofollow\">DSL</a></h2>\n<p>At the core of the library there is a Domain-Specific-Language (<a href=\"http://en.wikipedia.org/wiki/Domain-specific_language\" rel=\"nofollow\">DSL</a>) dedicated\nto timeserie analysis and manipulation. DynTS makes timeserie manipulation easy and fun.\nThis is a simple multiplication:</p>\n<pre>&gt;&gt;&gt; import dynts\n&gt;&gt;&gt; e = dynts.parse('2*GOOG')\n&gt;&gt;&gt; e\n2.0 * goog\n&gt;&gt;&gt; len(e)\n2\n&gt;&gt;&gt; list(e)\n[2.0, goog]\n&gt;&gt;&gt; ts = dynts.evaluate(e).unwind()\n&gt;&gt;&gt; ts\nTimeSeries:zoo:2.0 * goog\n&gt;&gt;&gt; len(ts)\n251\n</pre>\n</div>\n<div id=\"requirements\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Requirements</a></h2>\n<p>There are few requirements that must be met:</p>\n<ul>\n<li><a href=\"http://www.python.org/\" rel=\"nofollow\">python</a> 2.6 up to python 3.2.</li>\n<li><a href=\"http://numpy.scipy.org/\" rel=\"nofollow\">numpy</a> version 1.5.1 or higher for arrays and matrices.</li>\n<li><a href=\"http://www.dabeaz.com/ply/\" rel=\"nofollow\">ply</a> version 3.3 or higher, the building block of the <a href=\"http://en.wikipedia.org/wiki/Domain-specific_language\" rel=\"nofollow\">DSL</a>.</li>\n<li><a href=\"http://code.google.com/p/ccy/\" rel=\"nofollow\">ccy</a> for date and currency manipulation.</li>\n</ul>\n</div>\n<div id=\"r-backend\">\n<h2><a href=\"#id8\" rel=\"nofollow\">R backend</a></h2>\n<p>Depending on the back-end used, additional dependencies need to be met.\nFor example, there are back-ends depending on the following R packages:</p>\n<ul>\n<li><a href=\"http://rpy.sourceforge.net/rpy2.html\" rel=\"nofollow\">rpy2</a> if an <a href=\"http://www.r-project.org/\" rel=\"nofollow\">R</a> TimeSeries back-end is used (default).</li>\n<li><a href=\"http://cran.r-project.org/web/packages/zoo/index.html\" rel=\"nofollow\">zoo</a> and <a href=\"http://cran.r-project.org/web/packages/PerformanceAnalytics/index.html\" rel=\"nofollow\">PerformanceAnlytics</a> for the <tt>zoo</tt> back-end (currently the default one)</li>\n<li><a href=\"http://cran.r-project.org/web/packages/timeSeries/index.html\" rel=\"nofollow\">timeSeries</a> for the <tt>rmetrics</tt> back-end</li>\n</ul>\n<p>Installing <a href=\"http://rpy.sourceforge.net/rpy2.html\" rel=\"nofollow\">rpy2</a> on Linux is straightforward, on windows it requires the\n<a href=\"http://sourceforge.net/projects/pywin32/files/\" rel=\"nofollow\">python for windows</a> extension library.</p>\n</div>\n<div id=\"optional-requirements\">\n<h2><a href=\"#id9\" rel=\"nofollow\">Optional Requirements</a></h2>\n<ul>\n<li><a href=\"http://www.cython.org/\" rel=\"nofollow\">cython</a> for performance. The library is not strictly dependent on cython, however its usage\nis highly recommended. If available several python modules will be replaced by more efficient compiled C code.</li>\n<li><a href=\"http://pypi.python.org/pypi/xlwt\" rel=\"nofollow\">xlwt</a> to create spreadsheet from timeseries.</li>\n<li><a href=\"http://matplotlib.sourceforge.net/\" rel=\"nofollow\">matplotlib</a> for plotting.</li>\n<li><a href=\"http://djpcms.com\" rel=\"nofollow\">djpcms</a> for the <tt>web.views</tt> module.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<span id=\"running-tests\"></span><h2><a href=\"#id10\" rel=\"nofollow\">Running Tests</a></h2>\n<p>There are three types of tests available:</p>\n<ul>\n<li><tt>regression</tt> for unit and regression tests.</li>\n<li><tt>profile</tt> for analysing performance of different backends and impact of <a href=\"http://www.cython.org/\" rel=\"nofollow\">cython</a>.</li>\n<li><tt>bench</tt> same as <tt>profile</tt> but geared towards speed rather than profiling.</li>\n</ul>\n<p>From the distribution directory type:</p>\n<pre>python runtests.py\n</pre>\n<p>This will run by default the regression tests. To run a profile test\ntype:</p>\n<pre>python runtests.py -t profile &lt;test-name&gt;\n</pre>\n<p>where <tt><span class=\"pre\">&lt;test-name&gt;</span></tt> is the name of a profile test.\nTo obtain a list of available tests for each test type, run:</p>\n<pre>python runtests.py --list\n</pre>\n<p>for regression, or:</p>\n<pre>python runtests.py -t profile --list\n</pre>\n<p>for profile, or:</p>\n<pre>python runtests.py -t bench --list\n</pre>\n<p>from benchmarks.</p>\n<p>If you access the internet behind a proxy server, pass the <tt><span class=\"pre\">-p</span></tt> option, for example:</p>\n<pre>python runtests.py -p http://myproxy.com:80\n</pre>\n<p>It is needed since during tests some data is fetched from google finance.</p>\n<p>To access coverage of tests you need to install the <a href=\"http://nedbatchelder.com/code/coverage/\" rel=\"nofollow\">coverage</a> package and run the tests using:</p>\n<pre>coverage run runtests.py\n</pre>\n<p>and to check out the coverage report:</p>\n<pre>coverage report -m\n</pre>\n</div>\n<div id=\"kudos\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Kudos</a></h2>\n<ul>\n<li><a href=\"http://numpy.scipy.org/\" rel=\"nofollow\">numpy</a> developers.</li>\n</ul>\n</div>\n<div id=\"community\">\n<h2><a href=\"#id12\" rel=\"nofollow\">Community</a></h2>\n<p>Trying to use an IRC channel <strong>#dynts</strong> on <tt>irc.freenode.net</tt>\n(you can use the webchat at <a href=\"http://webchat.freenode.net/\" rel=\"nofollow\">http://webchat.freenode.net/</a>).</p>\n<p>If you find a bug or would like to request a feature, please <a href=\"http://github.com/quantmind/dynts/issues\" rel=\"nofollow\">submit an issue</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 791478, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "0017acc3b4cc52e07348d5451d360859", "sha256": "522a78053daefa8896a519ff17605f4130b7d3e01c26379ad27779150d3be9bc"}, "downloads": -1, "filename": "dynts-0.2.tar.gz", "has_sig": false, "md5_digest": "0017acc3b4cc52e07348d5451d360859", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 277652, "upload_time": "2010-09-25T00:30:16", "upload_time_iso_8601": "2010-09-25T00:30:16.591012Z", "url": "https://files.pythonhosted.org/packages/f9/30/e31a7504d0737c10347d0daa5148fb754b27d79f122f1a94abb57d95a44a/dynts-0.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d79034f1dc6949375f988387a3dffc1", "sha256": "f9a45a8f7794b961e4cf258b395589f3b82e74d9e858e1a42622464ac1d8d49b"}, "downloads": -1, "filename": "dynts-0.2.zip", "has_sig": false, "md5_digest": "6d79034f1dc6949375f988387a3dffc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 323859, "upload_time": "2010-09-27T08:33:37", "upload_time_iso_8601": "2010-09-27T08:33:37.082146Z", "url": "https://files.pythonhosted.org/packages/10/a5/56fd1c27e046834dbe7b5daf976f3f4449b03bd9a6862ffc3ebce93d7dc4/dynts-0.2.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "ca8cee3a10e5a8c7a3eb8cb2351c08db", "sha256": "14a742319cfdd132537105f533177499a903c796778b0cadc47584fa244aa069"}, "downloads": -1, "filename": "dynts-0.3.tar.gz", "has_sig": false, "md5_digest": "ca8cee3a10e5a8c7a3eb8cb2351c08db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 120973, "upload_time": "2010-10-06T15:14:01", "upload_time_iso_8601": "2010-10-06T15:14:01.198480Z", "url": "https://files.pythonhosted.org/packages/ac/fb/8ea7d762e30856eb744f9e9ae0a9b20597c5f24fd92347d401d36bd485a5/dynts-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "71e2a38b3c7aa373ee41bf4df2e06038", "sha256": "46f8392d8f22d9f1b323e0270518307dfb490f0dd2bc0373a24a291ef7c1dc6d"}, "downloads": -1, "filename": "dynts-0.3.1.tar.gz", "has_sig": false, "md5_digest": "71e2a38b3c7aa373ee41bf4df2e06038", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 122611, "upload_time": "2010-10-10T19:12:18", "upload_time_iso_8601": "2010-10-10T19:12:18.262342Z", "url": "https://files.pythonhosted.org/packages/76/cd/35490d58e14dddcd03de4c579c1df1b146a00e3f989d58a921f33774598a/dynts-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "d87a3e4053e465ee71c0523f3b768351", "sha256": "f6e7a335f30b9450be4234743542066d1af9c239bbfe51ae131e48a25cbfe880"}, "downloads": -1, "filename": "dynts-0.3.2.tar.gz", "has_sig": false, "md5_digest": "d87a3e4053e465ee71c0523f3b768351", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 128280, "upload_time": "2010-10-20T22:47:54", "upload_time_iso_8601": "2010-10-20T22:47:54.249397Z", "url": "https://files.pythonhosted.org/packages/59/77/5f79559fc7b8a0d6b5fe40f9dde32d5c272306cdad888039a649a095c654/dynts-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "2e9f6ae3799c0857f94a06f2d3d5db42", "sha256": "0aefbf165c0f9f6d6db33eb7b260c0ccbcdcca6383152ba65423f120574233eb"}, "downloads": -1, "filename": "dynts-0.3.3.tar.gz", "has_sig": false, "md5_digest": "2e9f6ae3799c0857f94a06f2d3d5db42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 129319, "upload_time": "2010-11-16T20:18:08", "upload_time_iso_8601": "2010-11-16T20:18:08.557482Z", "url": "https://files.pythonhosted.org/packages/f2/12/8af77ceb674e346747a204e0ff3792ddf9ab5719592c86c7bcdef10c3650/dynts-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "eb104fd630d3adff0ce5f5a3ac22fd13", "sha256": "341827f69966af0a1ce1283b18e6aac606e283a8d97df52695a9114fd2ed7d02"}, "downloads": -1, "filename": "dynts-0.4.0.tar.gz", "has_sig": false, "md5_digest": "eb104fd630d3adff0ce5f5a3ac22fd13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 156615, "upload_time": "2011-02-15T23:16:45", "upload_time_iso_8601": "2011-02-15T23:16:45.007235Z", "url": "https://files.pythonhosted.org/packages/07/23/a5625b0b81a196b4e0b5af7340001a9509e0d0e54582c805b510a127b8e7/dynts-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "287a0333fe201108d052ba5bc6f32ded", "sha256": "4250ed7848eee6257b4aa757ded37088ec6767b33d78d90f587e19d965730a19"}, "downloads": -1, "filename": "dynts-0.4.1.tar.gz", "has_sig": false, "md5_digest": "287a0333fe201108d052ba5bc6f32ded", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 324460, "upload_time": "2011-05-19T23:33:08", "upload_time_iso_8601": "2011-05-19T23:33:08.450648Z", "url": "https://files.pythonhosted.org/packages/c5/ad/9eba13efcd4fd811d9a94efeab02a5a7c1e8cda45590ac7a911b4416ccda/dynts-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "287a0333fe201108d052ba5bc6f32ded", "sha256": "4250ed7848eee6257b4aa757ded37088ec6767b33d78d90f587e19d965730a19"}, "downloads": -1, "filename": "dynts-0.4.1.tar.gz", "has_sig": false, "md5_digest": "287a0333fe201108d052ba5bc6f32ded", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 324460, "upload_time": "2011-05-19T23:33:08", "upload_time_iso_8601": "2011-05-19T23:33:08.450648Z", "url": "https://files.pythonhosted.org/packages/c5/ad/9eba13efcd4fd811d9a94efeab02a5a7c1e8cda45590ac7a911b4416ccda/dynts-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:37 2020"}