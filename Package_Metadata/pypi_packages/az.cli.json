{"info": {"author": "Mark Warneke", "author_email": "warneke.mark@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Az.Cli\n\n[![PyPi](https://img.shields.io/pypi/pyversions/az.cli)](https://pypi.python.org/pypi/az.cli)\n[![Build Status master](https://github.com/MarkWarneke/Az.Cli/workflows/Build/badge.svg?branch=master)](https://github.com/MarkWarneke/Az.Cli/actions?query=workflow%3ABuild)\n[![Build Status dev](https://github.com/MarkWarneke/Az.Cli/workflows/Build/badge.svg?branch=dev)](https://github.com/MarkWarneke/Az.Cli/actions?query=workflow%3ABuild)\n\nPython [azure.cli.core](https://github.com/Azure/azure-cli/blob/dev/src/azure-cli-core/azure/cli/core/__init__.py) interface to execute `az` [Azure CLI](https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest) commands in python.\n\nThe method returns a named tuple `AzResult = namedtuple('AzResult', ['exit_code', 'result_dict', 'log'])`. The [`error_code`](https://docs.python.org/2/library/sys.html#sys.exit) where 0 == success. A `result_dict` containing successfull return as a python dictionary. On failure (`error_code` > 0) a log message inside `log` as a string.\n\n## Usage\n\nInstall the package\n\n```bash\npip install az.cli\n```\n\nLogin using `az login`, see [sign in using a service principal](https://docs.microsoft.com/en-us/cli/azure/create-an-azure-service-principal-azure-cli?view=azure-cli-latest#sign-in-using-a-service-principalt).\n\nUnder the hood the package uses the [~/.azure](https://github.com/Azure/azure-cli/blob/dev/src/azure-cli-core/azure/cli/core/_environment.py) folder to persist and retrieve config.\n\n## Example\n\n```python\nfrom az.cli import az\n\n# AzResult = namedtuple('AzResult', ['exit_code', 'result_dict', 'log'])\nexit_code, result_dict, logs = az(\"group show -n test\")\n\n# On 0 (SUCCESS) print result_dict, otherwise get info from `logs`\nif exit_code == 0:\n    print (result_dict)\nelse:\n    print(logs)\n```\n\n## Interactive\n\nYou can run the command interactively to traverse the dictionary.\nNavigate to `src` and run `python3`.\nImport the library `from az.cli import az` and\u00a0run any command by executing the method `az(\"<my command>\")` to invoke Azure CLI.\n\n```python\n# cd src\n# python3\nfrom az.cli import az\n# on Success, the `error_code` is 0 and the result_dict contains the output\naz(\"group list\") # list return tuple (exit_code, result_dict, log)\naz(\"group list\")[0] # 0\naz(\"group list\")[1] # print result_dict\naz(\"group list\")[1][0]['id'] # enumerate the id of the first element in dictionary\n\n# On Error, the `error_code` will be != 1 and the log is present\naz(\"group show -n does-not-exsist\") # list return tuple (exit_code, result_dict, log)\naz(\"group show -n does-not-exsist\")[0] # 3\naz(\"group show -n does-not-exsist\")[2] # print the log\n```\n\n## Build\n\n### Local Development\n\n- install [python3](https://www.python.org/downloads/)\n- install `REQUIREMENTS.txt` using `make init`\n\nI recommend to use [Python3 virtual environments](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/#installing-virtualenv).\n\n```bash\n# sets up environment\nmake env\n# installs requirements\nmake init\n```\n\n### Docker\n\nTo build the image run the following in order.\n\n```bash\n# Runs docker build & create\nmake create\n```\n\n#### Run\n\nAfter the container is build & created you can run the `az.cli` interactivly.\n\n```bash\n# Run docker run\nmake run\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MarkWarneke/Az.Cli", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "az.cli", "package_url": "https://pypi.org/project/az.cli/", "platform": "", "project_url": "https://pypi.org/project/az.cli/", "project_urls": {"Homepage": "https://github.com/MarkWarneke/Az.Cli"}, "release_url": "https://pypi.org/project/az.cli/0.4/", "requires_dist": ["azure-cli"], "requires_python": ">=3.7", "summary": "An interface to execute Azure CLI commands using Python", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Az.Cli</h1>\n<p><a href=\"https://pypi.python.org/pypi/az.cli\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/413bd0fe4ef86ea9e192b497dea1d70be9d153bf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f617a2e636c69\"></a>\n<a href=\"https://github.com/MarkWarneke/Az.Cli/actions?query=workflow%3ABuild\" rel=\"nofollow\"><img alt=\"Build Status master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9bbc3672c44baabfa0652c26666992cf9367b92b/68747470733a2f2f6769746875622e636f6d2f4d61726b5761726e656b652f417a2e436c692f776f726b666c6f77732f4275696c642f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/MarkWarneke/Az.Cli/actions?query=workflow%3ABuild\" rel=\"nofollow\"><img alt=\"Build Status dev\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c46d4bd6fa73cfd9b264bc89f5a8484e7ade931f/68747470733a2f2f6769746875622e636f6d2f4d61726b5761726e656b652f417a2e436c692f776f726b666c6f77732f4275696c642f62616467652e7376673f6272616e63683d646576\"></a></p>\n<p>Python <a href=\"https://github.com/Azure/azure-cli/blob/dev/src/azure-cli-core/azure/cli/core/__init__.py\" rel=\"nofollow\">azure.cli.core</a> interface to execute <code>az</code> <a href=\"https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest\" rel=\"nofollow\">Azure CLI</a> commands in python.</p>\n<p>The method returns a named tuple <code>AzResult = namedtuple('AzResult', ['exit_code', 'result_dict', 'log'])</code>. The <a href=\"https://docs.python.org/2/library/sys.html#sys.exit\" rel=\"nofollow\"><code>error_code</code></a> where 0 == success. A <code>result_dict</code> containing successfull return as a python dictionary. On failure (<code>error_code</code> &gt; 0) a log message inside <code>log</code> as a string.</p>\n<h2>Usage</h2>\n<p>Install the package</p>\n<pre>pip install az.cli\n</pre>\n<p>Login using <code>az login</code>, see <a href=\"https://docs.microsoft.com/en-us/cli/azure/create-an-azure-service-principal-azure-cli?view=azure-cli-latest#sign-in-using-a-service-principalt\" rel=\"nofollow\">sign in using a service principal</a>.</p>\n<p>Under the hood the package uses the <a href=\"https://github.com/Azure/azure-cli/blob/dev/src/azure-cli-core/azure/cli/core/_environment.py\" rel=\"nofollow\">~/.azure</a> folder to persist and retrieve config.</p>\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">az.cli</span> <span class=\"kn\">import</span> <span class=\"n\">az</span>\n\n<span class=\"c1\"># AzResult = namedtuple('AzResult', ['exit_code', 'result_dict', 'log'])</span>\n<span class=\"n\">exit_code</span><span class=\"p\">,</span> <span class=\"n\">result_dict</span><span class=\"p\">,</span> <span class=\"n\">logs</span> <span class=\"o\">=</span> <span class=\"n\">az</span><span class=\"p\">(</span><span class=\"s2\">\"group show -n test\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># On 0 (SUCCESS) print result_dict, otherwise get info from `logs`</span>\n<span class=\"k\">if</span> <span class=\"n\">exit_code</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">result_dict</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">logs</span><span class=\"p\">)</span>\n</pre>\n<h2>Interactive</h2>\n<p>You can run the command interactively to traverse the dictionary.\nNavigate to <code>src</code> and run <code>python3</code>.\nImport the library <code>from az.cli import az</code> and\u00a0run any command by executing the method <code>az(\"&lt;my command&gt;\")</code> to invoke Azure CLI.</p>\n<pre><span class=\"c1\"># cd src</span>\n<span class=\"c1\"># python3</span>\n<span class=\"kn\">from</span> <span class=\"nn\">az.cli</span> <span class=\"kn\">import</span> <span class=\"n\">az</span>\n<span class=\"c1\"># on Success, the `error_code` is 0 and the result_dict contains the output</span>\n<span class=\"n\">az</span><span class=\"p\">(</span><span class=\"s2\">\"group list\"</span><span class=\"p\">)</span> <span class=\"c1\"># list return tuple (exit_code, result_dict, log)</span>\n<span class=\"n\">az</span><span class=\"p\">(</span><span class=\"s2\">\"group list\"</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"c1\"># 0</span>\n<span class=\"n\">az</span><span class=\"p\">(</span><span class=\"s2\">\"group list\"</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"c1\"># print result_dict</span>\n<span class=\"n\">az</span><span class=\"p\">(</span><span class=\"s2\">\"group list\"</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'id'</span><span class=\"p\">]</span> <span class=\"c1\"># enumerate the id of the first element in dictionary</span>\n\n<span class=\"c1\"># On Error, the `error_code` will be != 1 and the log is present</span>\n<span class=\"n\">az</span><span class=\"p\">(</span><span class=\"s2\">\"group show -n does-not-exsist\"</span><span class=\"p\">)</span> <span class=\"c1\"># list return tuple (exit_code, result_dict, log)</span>\n<span class=\"n\">az</span><span class=\"p\">(</span><span class=\"s2\">\"group show -n does-not-exsist\"</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"c1\"># 3</span>\n<span class=\"n\">az</span><span class=\"p\">(</span><span class=\"s2\">\"group show -n does-not-exsist\"</span><span class=\"p\">)[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"c1\"># print the log</span>\n</pre>\n<h2>Build</h2>\n<h3>Local Development</h3>\n<ul>\n<li>install <a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">python3</a></li>\n<li>install <code>REQUIREMENTS.txt</code> using <code>make init</code></li>\n</ul>\n<p>I recommend to use <a href=\"https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/#installing-virtualenv\" rel=\"nofollow\">Python3 virtual environments</a>.</p>\n<pre><span class=\"c1\"># sets up environment</span>\nmake env\n<span class=\"c1\"># installs requirements</span>\nmake init\n</pre>\n<h3>Docker</h3>\n<p>To build the image run the following in order.</p>\n<pre><span class=\"c1\"># Runs docker build &amp; create</span>\nmake create\n</pre>\n<h4>Run</h4>\n<p>After the container is build &amp; created you can run the <code>az.cli</code> interactivly.</p>\n<pre><span class=\"c1\"># Run docker run</span>\nmake run\n</pre>\n\n          </div>"}, "last_serial": 6925923, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fac112e9028674e23410b8dc32852b54", "sha256": "d1e732e7544ef93f7e66235e820585354dd87ef313d0fba32c4985a94bfb65d4"}, "downloads": -1, "filename": "az.cli-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fac112e9028674e23410b8dc32852b54", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 4546, "upload_time": "2020-03-13T15:37:14", "upload_time_iso_8601": "2020-03-13T15:37:14.346206Z", "url": "https://files.pythonhosted.org/packages/a4/e0/1d927aed8833a2bdc0f6628c54a8227d167f7001b5a0cad2f874ab93a1f9/az.cli-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eaaa317e7a6d135aad31210ad1571baa", "sha256": "930dcde65ffeaa293015bee276133ab1760ccf47c135329d6054fd0713946cd3"}, "downloads": -1, "filename": "az.cli-0.1.tar.gz", "has_sig": false, "md5_digest": "eaaa317e7a6d135aad31210ad1571baa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3485, "upload_time": "2020-03-13T15:37:16", "upload_time_iso_8601": "2020-03-13T15:37:16.709747Z", "url": "https://files.pythonhosted.org/packages/0b/59/cba82566e9880d9eb069513bd941c5990742416adb28a50f21e94ac38fc5/az.cli-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "1e7b5351bc186a7a9e0950621df62e74", "sha256": "4b4adbe77191301b75974d80a9c91ff5ef9c28f94a17eafbbdfff8117ed910b7"}, "downloads": -1, "filename": "az.cli-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1e7b5351bc186a7a9e0950621df62e74", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 5022, "upload_time": "2020-03-13T23:56:14", "upload_time_iso_8601": "2020-03-13T23:56:14.289233Z", "url": "https://files.pythonhosted.org/packages/dd/31/1f92684255bc159ce2424d5897f9e752119871458059f7580b677517f5c2/az.cli-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "adf6adbd27c773c3a717e6c44a808b7d", "sha256": "4f8e66a332328d752807018537908a9d0733055b28d6bad12a3f19b0e3c221d5"}, "downloads": -1, "filename": "az.cli-0.2.tar.gz", "has_sig": false, "md5_digest": "adf6adbd27c773c3a717e6c44a808b7d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4113, "upload_time": "2020-03-13T23:56:15", "upload_time_iso_8601": "2020-03-13T23:56:15.490511Z", "url": "https://files.pythonhosted.org/packages/2c/48/86bcf54aab7f82ce4b6b70f81bb4391ecae950e4897016c5e714ddba7f9c/az.cli-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "3c5f4aef86c49f7d53cdb15f5d688681", "sha256": "f5cea8a54c85125a3e6083f3a9467c78cbe2cd4d7f917f631e15a7cb966b369e"}, "downloads": -1, "filename": "az.cli-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3c5f4aef86c49f7d53cdb15f5d688681", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 5145, "upload_time": "2020-03-16T20:07:59", "upload_time_iso_8601": "2020-03-16T20:07:59.275553Z", "url": "https://files.pythonhosted.org/packages/bc/b9/7839031a99a559f459d5b01d05683e296589affb75d78f5e73791d317a8b/az.cli-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e780c46621424ca1d075ad4b9eb89bae", "sha256": "4b10a204199dbcfbe8da4244d6d2dcb9ebb1118a9dca5f21d9c7ca3574c99a8c"}, "downloads": -1, "filename": "az.cli-0.3.tar.gz", "has_sig": false, "md5_digest": "e780c46621424ca1d075ad4b9eb89bae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3833, "upload_time": "2020-03-16T20:08:00", "upload_time_iso_8601": "2020-03-16T20:08:00.176879Z", "url": "https://files.pythonhosted.org/packages/a8/d1/47633a4ef25011f800b23646840221fce17d518b570eab517da685c43d0b/az.cli-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "11dd5a762eb1701d44429a5c21ed133c", "sha256": "c031bc54a5ca64b312ed0cf8dc8be36b585b22489e7a0e8af8af7cd71b2eccdb"}, "downloads": -1, "filename": "az.cli-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "11dd5a762eb1701d44429a5c21ed133c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 5103, "upload_time": "2020-04-01T08:04:40", "upload_time_iso_8601": "2020-04-01T08:04:40.359414Z", "url": "https://files.pythonhosted.org/packages/ec/f3/f5b9128ae8213adba6b4b3f780214acd46129f0a77668952740043d7efed/az.cli-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12218d9f909dd953649907ce96bd99c2", "sha256": "ffdd1d81a6ace061bac7de3946a5b4ebae552f1adb9751fe200654ac568d2649"}, "downloads": -1, "filename": "az.cli-0.4.tar.gz", "has_sig": false, "md5_digest": "12218d9f909dd953649907ce96bd99c2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3794, "upload_time": "2020-04-01T08:04:41", "upload_time_iso_8601": "2020-04-01T08:04:41.463788Z", "url": "https://files.pythonhosted.org/packages/85/15/337a35c358df39bfcfa1f4b5665c28eed86167df970f43f64394206b39b0/az.cli-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "11dd5a762eb1701d44429a5c21ed133c", "sha256": "c031bc54a5ca64b312ed0cf8dc8be36b585b22489e7a0e8af8af7cd71b2eccdb"}, "downloads": -1, "filename": "az.cli-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "11dd5a762eb1701d44429a5c21ed133c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 5103, "upload_time": "2020-04-01T08:04:40", "upload_time_iso_8601": "2020-04-01T08:04:40.359414Z", "url": "https://files.pythonhosted.org/packages/ec/f3/f5b9128ae8213adba6b4b3f780214acd46129f0a77668952740043d7efed/az.cli-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12218d9f909dd953649907ce96bd99c2", "sha256": "ffdd1d81a6ace061bac7de3946a5b4ebae552f1adb9751fe200654ac568d2649"}, "downloads": -1, "filename": "az.cli-0.4.tar.gz", "has_sig": false, "md5_digest": "12218d9f909dd953649907ce96bd99c2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3794, "upload_time": "2020-04-01T08:04:41", "upload_time_iso_8601": "2020-04-01T08:04:41.463788Z", "url": "https://files.pythonhosted.org/packages/85/15/337a35c358df39bfcfa1f4b5665c28eed86167df970f43f64394206b39b0/az.cli-0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:28 2020"}