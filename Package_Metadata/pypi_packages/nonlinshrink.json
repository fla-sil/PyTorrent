{"info": {"author": "Matz Haugen", "author_email": "matzhaugen@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Non-Linear Shrinkage\nProvides a function that calculates an estimate of the covariance matrix shrunk using a non-linear analytic formula provided by\nthe working paper Ledoit and Wolf (2018), entitled ['Analytical Nonlinear Shrinkage of Large-Dimensional Covariance Matrices']\n(http://www.econ.uzh.ch/static/wp/econwp264.pdf).\n\n\n# Installation\n```\npip install nonlinshrink\n```\n\n# Usage\n```\nimport numpy as np\nimport nonlinshrink as nls\np = 2\nn = 13\nsigma = np.eye(p, p)\ndata = np.random.multivariate_normal(np.zeros(p), sigma, n)\nsigma_tilde = nls.shrink_cov(data)\n```\nThe data is automatically demeaned unless otherwise specified. In the case where the data has been pre-processed and the effective degrees of freedom of the dataset is decreased, e.g. through an OLS regression, the user can specify this through a parameter `k` which signifies the degrees of freedom already subtracted. For example,\n```\nimport numpy as np\nimport nonlinshrink as nls\np = 2\nn = 14\nsigma = np.eye(p, p)\ndata = np.random.multivariate_normal(np.zeros(p), sigma, n) + np.arange(n)[:, np.newaxis] + 1\nx = np.vstack((np.ones(n).T, np.arange(n).T)).T\nbetahat = np.linalg.solve(np.dot(x.T, x), np.dot(x.T, data))\ndatahat = np.dot(x, betahat)\nres = data - datahat\nsigma_tilde = nls.shrink_cov(res, k=2)  # corresponding to 2 degrees of freedom\n```\n# Developing\nPlease submit a PR! The shrinkage function itself is located in `nonlinshrink.py`. \nFor running the tests do \n```\ngit clone https://github.com/matzhaugen/analytic_shrinkage.git\ncd analytic_shrinkage\npip install -e . # install the package\npytest\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/matzhaugen/analytic_shrinkage", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "nonlinshrink", "package_url": "https://pypi.org/project/nonlinshrink/", "platform": "", "project_url": "https://pypi.org/project/nonlinshrink/", "project_urls": {"Homepage": "https://github.com/matzhaugen/analytic_shrinkage"}, "release_url": "https://pypi.org/project/nonlinshrink/0.7/", "requires_dist": null, "requires_python": "", "summary": "Non-Linear Shrinkage Estimator from Ledoit and Wolf (2018)", "version": "0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Non-Linear Shrinkage</h1>\n<p>Provides a function that calculates an estimate of the covariance matrix shrunk using a non-linear analytic formula provided by\nthe working paper Ledoit and Wolf (2018), entitled ['Analytical Nonlinear Shrinkage of Large-Dimensional Covariance Matrices']\n(<a href=\"http://www.econ.uzh.ch/static/wp/econwp264.pdf\" rel=\"nofollow\">http://www.econ.uzh.ch/static/wp/econwp264.pdf</a>).</p>\n<h1>Installation</h1>\n<pre><code>pip install nonlinshrink\n</code></pre>\n<h1>Usage</h1>\n<pre><code>import numpy as np\nimport nonlinshrink as nls\np = 2\nn = 13\nsigma = np.eye(p, p)\ndata = np.random.multivariate_normal(np.zeros(p), sigma, n)\nsigma_tilde = nls.shrink_cov(data)\n</code></pre>\n<p>The data is automatically demeaned unless otherwise specified. In the case where the data has been pre-processed and the effective degrees of freedom of the dataset is decreased, e.g. through an OLS regression, the user can specify this through a parameter <code>k</code> which signifies the degrees of freedom already subtracted. For example,</p>\n<pre><code>import numpy as np\nimport nonlinshrink as nls\np = 2\nn = 14\nsigma = np.eye(p, p)\ndata = np.random.multivariate_normal(np.zeros(p), sigma, n) + np.arange(n)[:, np.newaxis] + 1\nx = np.vstack((np.ones(n).T, np.arange(n).T)).T\nbetahat = np.linalg.solve(np.dot(x.T, x), np.dot(x.T, data))\ndatahat = np.dot(x, betahat)\nres = data - datahat\nsigma_tilde = nls.shrink_cov(res, k=2)  # corresponding to 2 degrees of freedom\n</code></pre>\n<h1>Developing</h1>\n<p>Please submit a PR! The shrinkage function itself is located in <code>nonlinshrink.py</code>.\nFor running the tests do</p>\n<pre><code>git clone https://github.com/matzhaugen/analytic_shrinkage.git\ncd analytic_shrinkage\npip install -e . # install the package\npytest\n</code></pre>\n\n          </div>"}, "last_serial": 6155753, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "cea9d47701841ebc1b3f21fea6cecec2", "sha256": "13ae080e7c1be430ed652db1b4d85a6a0135f3beac98dbe94d2fccdfae28088a"}, "downloads": -1, "filename": "nonlinshrink-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "cea9d47701841ebc1b3f21fea6cecec2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5303, "upload_time": "2019-11-10T10:13:08", "upload_time_iso_8601": "2019-11-10T10:13:08.267792Z", "url": "https://files.pythonhosted.org/packages/0e/40/6ef120d2f184751e420ce3e532c4ff33908cf87e0c961219733e5ad26cb2/nonlinshrink-0.5-py3-none-any.whl", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "c638152422b2fd406efbb99ed93c9d30", "sha256": "79b0904e2daf248297e7530c442087f0479c65594f57db3dd4ec6d84b517819e"}, "downloads": -1, "filename": "nonlinshrink-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "c638152422b2fd406efbb99ed93c9d30", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5760, "upload_time": "2019-11-18T11:34:52", "upload_time_iso_8601": "2019-11-18T11:34:52.751382Z", "url": "https://files.pythonhosted.org/packages/42/bc/e301b55061c985b45f3248d0b988553ef13cca1ac18e886deab9f01aa0cf/nonlinshrink-0.6-py3-none-any.whl", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "424c8163236ff48e58066e0dd172211c", "sha256": "3bbc13ddc9283993dc08f89b90f160c3b389aa30f12d55282436bf9785e2471c"}, "downloads": -1, "filename": "nonlinshrink-0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "424c8163236ff48e58066e0dd172211c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6324, "upload_time": "2019-11-18T13:28:14", "upload_time_iso_8601": "2019-11-18T13:28:14.209845Z", "url": "https://files.pythonhosted.org/packages/8b/0a/aeb20552a2db5cfcc9e1c5b831295ef9785ea2eb9d428dce2d23d16c0da3/nonlinshrink-0.7-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "424c8163236ff48e58066e0dd172211c", "sha256": "3bbc13ddc9283993dc08f89b90f160c3b389aa30f12d55282436bf9785e2471c"}, "downloads": -1, "filename": "nonlinshrink-0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "424c8163236ff48e58066e0dd172211c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6324, "upload_time": "2019-11-18T13:28:14", "upload_time_iso_8601": "2019-11-18T13:28:14.209845Z", "url": "https://files.pythonhosted.org/packages/8b/0a/aeb20552a2db5cfcc9e1c5b831295ef9785ea2eb9d428dce2d23d16c0da3/nonlinshrink-0.7-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:44:52 2020"}