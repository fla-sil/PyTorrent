{"info": {"author": "Rapid7 Integrations Alliance", "author_email": "integrationalliance@rapid7.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Software Development :: Build Tools"], "description": "\n# InsightConnect Python Plugin Runtime ![Build Status](https://github.com/rapid7/komand-plugin-sdk-python/workflows/Continuous%20Integration/badge.svg)\n\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nThe InsightConnect Python Plugin Runtime is used for building plugins in Python for Rapid7 InsightConnect. The project\nresults in the building and publishing of two components: \n\n* Python Plugin Runtime Library \n* Base InsightConnect Plugin Docker Images \n\n![InsightConnect Python Plugin Runtime Diagram](plugin-runtime-diagram.png)\n\nDocker images created during the build and deployment of this project are uploaded to the \n[Rapid7 Docker Repositories](https://hub.docker.com/orgs/rapid7/repositories).\n\nFurther [documentation](https://komand.github.io/python/start.html) for building an InsightConnect plugin is available \nto get started.\n\n## Development of the InsightConnect Plugin Runtime\n\nThe Python Runtime codebase is built to support Python 3.8+ as of version 4.0.0. The following dependencies will need \nto be installed when developing or testing the Plugin Runtime:\n\n- Python 3.8\n- Docker\n- make\n- tox\n\n### Getting Started\n\n#### Building Python Library\n\nTo build and install the plugin runtime library locally, first create a Python virtual environment for the particular Python \nversion and activate it. Then build, install, and confirm the package has been installed.\n```\n> python3 -m venv venv\n> source venv/bin/activate\n> pip install -e ./\n> pip list | grep insightconnect-plugin-runtime\ninsightconnect-plugin-runtime 4.0.0\n```\n\n#### Building the InsightConnect Plugin Runtime Docker Images\n\nCurrently the `3-38` dockerfile is used by default when building the docker image. If you want to specify another \ndockerfile for testing purposes, such as `3-38-slim`, you can pass it as an argument.\n\n```\nmake build-image DOCKERFILE=3-38-slim\n```\n\nThis will overwrite the default `3-38`, provided that it exists in the `dockerfiles` directory.\n\n### Testing Sample Plugin\nThe easiest way to test changes to the runtime is by running it locally against one of the [sample plugins](./samples) \nincluded in the repository. Make sure a virtual environment has been activated and then pass in the sample directory \nname as a parameter:\n```\n> make sample=example run-sample\n```\n\nThe plugin will be started in `http` mode and listening at `http:0.0.0.0:10001`:\n```\n[2020-02-13 23:21:13 -0500] [56567] [INFO] Starting gunicorn 19.7.1\n[2020-02-13 23:21:13 -0500] [56567] [INFO] Listening at: http://0.0.0.0:10001 (56567)\n[2020-02-13 23:21:13 -0500] [56567] [INFO] Using worker: threads\n[2020-02-13 23:21:13 -0500] [56571] [INFO] Booting worker with pid: 56571\n```\n\nTo build, install, and run runtime changes without the use of the `run-sample` rule, the below steps can be used for \nsame result:\n```\n> python setup.py build && python setup.py install\n> cd samples/example\n> python setup.py build && python setup.py install\n> ./bin/icon_example http\n```\n\n### Testing Locally with Docker Runtime\n\nIn addition to testing locally with the resulting runtime and an InsightConnect plugin, it is also possible to build a \nplugin locally and test it as it would be used by the InsightConnect orchestrator.\n\nFirst, build the base runtime:\n```\nmake build-image\n```\n\nThis will result in tagged Docker images that can be used in the included sample plugins. Then the plugin can be built \nand run locally:\n```\n> cd samples/example\n> icon-plugin build image --no-pull\n> docker run -it -p 10001:10001 rapid7/example:latest http\n```\n\n## Running Tests\n\nIn order to run tests, first ensure `tox` has been installed. Tox makes it easy for testing this project in isolated \nvirtual environments and for specific Python versions. To install tox:\n```\n> pip install tox\n```\n\nRunning all tests:\n```\n> tox\n```\n\nRunning a specific test file:\n```\n> tox -e py38 -- tests/plugin/hello_world/tests/test_cli.py\n```\n\n## Release\n\nTo release a new version of the InsightConnect Python Plugin Runtime, the below steps must be followed:\n\n1. Create a Pull Request with your changes to be merged into master\n2. Merge changes after receiving at least one approval\n3. Create a versioned tag off of release; version must follow [SemVer](https://semver.org/)\n4. [Github Action](https://github.com/rapid7/komand-plugin-sdk-python/actions) will perform a matrix build and release \nbased on the recently created tag for each Python version and Dockerfile in scope\n\n## Contributions\n\nContributions for maintaining and enhancing the InsightConnect Python Plugin Runtime are appreciated. This project uses\n[Black](https://github.com/psf/black) for code formatting and includes a pre-commit hook to auto format code as it is\ncontributed. Black is installed as a test dependency and the hook can be initialized by running `pre-commit install` \nafter cloning this repository.\n\n## Changelog\n\n* 4.0.1 - Fix bug by including schema files in manifest | Fix issue uploading python library twice to PYPI\n* 4.0.0 - Implement new API endpoints | \n Implement Swagger API documentation generation | \n End support for Python2 and PyPy | \n Add development details to README |\n Enhancements to Makefile for local development and release | \n Rebrand SDK to InsightConnect Python Plugin Runtime | \n Revamp release process with use of Github Actions\n* 3.3.0 - Add webserver route to allow for threading changes\n* 3.2.0 - Add new ConnectionTestException/PluginException presets:\n UNKNOWN, BASE64_ENCODE, BASE64_DECODE, INVALID_JSON |\n Add an optional data parameter for formatting response output\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rapid7/komand-plugin-sdk-python", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "insightconnect-plugin-runtime", "package_url": "https://pypi.org/project/insightconnect-plugin-runtime/", "platform": "", "project_url": "https://pypi.org/project/insightconnect-plugin-runtime/", "project_urls": {"Homepage": "https://github.com/rapid7/komand-plugin-sdk-python"}, "release_url": "https://pypi.org/project/insightconnect-plugin-runtime/4.0.1/", "requires_dist": ["requests (>=2.23.0)", "python-jsonschema-objects (==0.3.12)", "jsonschema (==3.2.0)", "certifi (==2019.11.28)", "Flask (==1.1.1)", "gunicorn (==20.0.4)", "marshmallow (==3.4.0)", "apispec (==3.2.0)", "apispec-webframeworks (==0.5.2)"], "requires_python": "", "summary": "InsightConnect Plugin Runtime", "version": "4.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>InsightConnect Python Plugin Runtime <img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd9f71eedc8dadf3d651f1f8d6ce85e54373f17b/68747470733a2f2f6769746875622e636f6d2f7261706964372f6b6f6d616e642d706c7567696e2d73646b2d707974686f6e2f776f726b666c6f77732f436f6e74696e756f7573253230496e746567726174696f6e2f62616467652e737667\"></h1>\n<p><a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>The InsightConnect Python Plugin Runtime is used for building plugins in Python for Rapid7 InsightConnect. The project\nresults in the building and publishing of two components:</p>\n<ul>\n<li>Python Plugin Runtime Library</li>\n<li>Base InsightConnect Plugin Docker Images</li>\n</ul>\n<p><img alt=\"InsightConnect Python Plugin Runtime Diagram\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f140be1dd20a033f70e89acd86b18d91980b745a/706c7567696e2d72756e74696d652d6469616772616d2e706e67\"></p>\n<p>Docker images created during the build and deployment of this project are uploaded to the\n<a href=\"https://hub.docker.com/orgs/rapid7/repositories\" rel=\"nofollow\">Rapid7 Docker Repositories</a>.</p>\n<p>Further <a href=\"https://komand.github.io/python/start.html\" rel=\"nofollow\">documentation</a> for building an InsightConnect plugin is available\nto get started.</p>\n<h2>Development of the InsightConnect Plugin Runtime</h2>\n<p>The Python Runtime codebase is built to support Python 3.8+ as of version 4.0.0. The following dependencies will need\nto be installed when developing or testing the Plugin Runtime:</p>\n<ul>\n<li>Python 3.8</li>\n<li>Docker</li>\n<li>make</li>\n<li>tox</li>\n</ul>\n<h3>Getting Started</h3>\n<h4>Building Python Library</h4>\n<p>To build and install the plugin runtime library locally, first create a Python virtual environment for the particular Python\nversion and activate it. Then build, install, and confirm the package has been installed.</p>\n<pre><code>&gt; python3 -m venv venv\n&gt; source venv/bin/activate\n&gt; pip install -e ./\n&gt; pip list | grep insightconnect-plugin-runtime\ninsightconnect-plugin-runtime 4.0.0\n</code></pre>\n<h4>Building the InsightConnect Plugin Runtime Docker Images</h4>\n<p>Currently the <code>3-38</code> dockerfile is used by default when building the docker image. If you want to specify another\ndockerfile for testing purposes, such as <code>3-38-slim</code>, you can pass it as an argument.</p>\n<pre><code>make build-image DOCKERFILE=3-38-slim\n</code></pre>\n<p>This will overwrite the default <code>3-38</code>, provided that it exists in the <code>dockerfiles</code> directory.</p>\n<h3>Testing Sample Plugin</h3>\n<p>The easiest way to test changes to the runtime is by running it locally against one of the <a href=\"./samples\" rel=\"nofollow\">sample plugins</a>\nincluded in the repository. Make sure a virtual environment has been activated and then pass in the sample directory\nname as a parameter:</p>\n<pre><code>&gt; make sample=example run-sample\n</code></pre>\n<p>The plugin will be started in <code>http</code> mode and listening at <code>http:0.0.0.0:10001</code>:</p>\n<pre><code>[2020-02-13 23:21:13 -0500] [56567] [INFO] Starting gunicorn 19.7.1\n[2020-02-13 23:21:13 -0500] [56567] [INFO] Listening at: http://0.0.0.0:10001 (56567)\n[2020-02-13 23:21:13 -0500] [56567] [INFO] Using worker: threads\n[2020-02-13 23:21:13 -0500] [56571] [INFO] Booting worker with pid: 56571\n</code></pre>\n<p>To build, install, and run runtime changes without the use of the <code>run-sample</code> rule, the below steps can be used for\nsame result:</p>\n<pre><code>&gt; python setup.py build &amp;&amp; python setup.py install\n&gt; cd samples/example\n&gt; python setup.py build &amp;&amp; python setup.py install\n&gt; ./bin/icon_example http\n</code></pre>\n<h3>Testing Locally with Docker Runtime</h3>\n<p>In addition to testing locally with the resulting runtime and an InsightConnect plugin, it is also possible to build a\nplugin locally and test it as it would be used by the InsightConnect orchestrator.</p>\n<p>First, build the base runtime:</p>\n<pre><code>make build-image\n</code></pre>\n<p>This will result in tagged Docker images that can be used in the included sample plugins. Then the plugin can be built\nand run locally:</p>\n<pre><code>&gt; cd samples/example\n&gt; icon-plugin build image --no-pull\n&gt; docker run -it -p 10001:10001 rapid7/example:latest http\n</code></pre>\n<h2>Running Tests</h2>\n<p>In order to run tests, first ensure <code>tox</code> has been installed. Tox makes it easy for testing this project in isolated\nvirtual environments and for specific Python versions. To install tox:</p>\n<pre><code>&gt; pip install tox\n</code></pre>\n<p>Running all tests:</p>\n<pre><code>&gt; tox\n</code></pre>\n<p>Running a specific test file:</p>\n<pre><code>&gt; tox -e py38 -- tests/plugin/hello_world/tests/test_cli.py\n</code></pre>\n<h2>Release</h2>\n<p>To release a new version of the InsightConnect Python Plugin Runtime, the below steps must be followed:</p>\n<ol>\n<li>Create a Pull Request with your changes to be merged into master</li>\n<li>Merge changes after receiving at least one approval</li>\n<li>Create a versioned tag off of release; version must follow <a href=\"https://semver.org/\" rel=\"nofollow\">SemVer</a></li>\n<li><a href=\"https://github.com/rapid7/komand-plugin-sdk-python/actions\" rel=\"nofollow\">Github Action</a> will perform a matrix build and release\nbased on the recently created tag for each Python version and Dockerfile in scope</li>\n</ol>\n<h2>Contributions</h2>\n<p>Contributions for maintaining and enhancing the InsightConnect Python Plugin Runtime are appreciated. This project uses\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\">Black</a> for code formatting and includes a pre-commit hook to auto format code as it is\ncontributed. Black is installed as a test dependency and the hook can be initialized by running <code>pre-commit install</code>\nafter cloning this repository.</p>\n<h2>Changelog</h2>\n<ul>\n<li>4.0.1 - Fix bug by including schema files in manifest | Fix issue uploading python library twice to PYPI</li>\n<li>4.0.0 - Implement new API endpoints |\nImplement Swagger API documentation generation |\nEnd support for Python2 and PyPy |\nAdd development details to README |\nEnhancements to Makefile for local development and release |\nRebrand SDK to InsightConnect Python Plugin Runtime |\nRevamp release process with use of Github Actions</li>\n<li>3.3.0 - Add webserver route to allow for threading changes</li>\n<li>3.2.0 - Add new ConnectionTestException/PluginException presets:\nUNKNOWN, BASE64_ENCODE, BASE64_DECODE, INVALID_JSON |\nAdd an optional data parameter for formatting response output</li>\n</ul>\n\n          </div>"}, "last_serial": 6963733, "releases": {"4.0.0": [{"comment_text": "", "digests": {"md5": "8111c697c3cf4b56716427a10325dfc1", "sha256": "101f28db14f159abafc27d5747955b62ea9fdf810bce242b8a33832c018dba07"}, "downloads": -1, "filename": "insightconnect_plugin_runtime-4.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8111c697c3cf4b56716427a10325dfc1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52919, "upload_time": "2020-03-31T13:53:51", "upload_time_iso_8601": "2020-03-31T13:53:51.575972Z", "url": "https://files.pythonhosted.org/packages/a9/ae/97feef7637aa7f3b593a73f0d95196fca46feb27b1bd0b719632600907f4/insightconnect_plugin_runtime-4.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6414275bd74c99bc57518bf231dcd32e", "sha256": "0f4b7bed9c3fd3b451621830cb04c260f218eaabaeaabdd84b7b88a87a419eb4"}, "downloads": -1, "filename": "insightconnect-plugin-runtime-4.0.0.tar.gz", "has_sig": false, "md5_digest": "6414275bd74c99bc57518bf231dcd32e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36879, "upload_time": "2020-03-31T13:53:53", "upload_time_iso_8601": "2020-03-31T13:53:53.932022Z", "url": "https://files.pythonhosted.org/packages/65/97/5a8cf68671e3ec516ae6bf817446c43f79e4a1687c48ca98bb238ae010db/insightconnect-plugin-runtime-4.0.0.tar.gz", "yanked": false}], "4.0.1": [{"comment_text": "", "digests": {"md5": "19fa7556d093ee588e209e3d53cd8d93", "sha256": "e7d38c3ac2f5ea6a710994b63f0e3b94204d9817a83da1f7ad3aaca11d4a6569"}, "downloads": -1, "filename": "insightconnect_plugin_runtime-4.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "19fa7556d093ee588e209e3d53cd8d93", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 54084, "upload_time": "2020-04-06T18:58:49", "upload_time_iso_8601": "2020-04-06T18:58:49.086864Z", "url": "https://files.pythonhosted.org/packages/19/3f/1cdc8b595c7dca21cdd4628830f1c52f95e66d83649b6a1e377ab83bc017/insightconnect_plugin_runtime-4.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a2be24606624be8f1ced5fa258764a0", "sha256": "e14e511697c89a73d09de8b30c20febd379ca2d55b885ab475c2cc9544e976cf"}, "downloads": -1, "filename": "insightconnect-plugin-runtime-4.0.1.tar.gz", "has_sig": false, "md5_digest": "2a2be24606624be8f1ced5fa258764a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37562, "upload_time": "2020-04-06T18:58:50", "upload_time_iso_8601": "2020-04-06T18:58:50.337555Z", "url": "https://files.pythonhosted.org/packages/29/dd/b26c880676fdd40fac43ad3f671669cb2ea617d438b521ecd2fd2c6506c9/insightconnect-plugin-runtime-4.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "19fa7556d093ee588e209e3d53cd8d93", "sha256": "e7d38c3ac2f5ea6a710994b63f0e3b94204d9817a83da1f7ad3aaca11d4a6569"}, "downloads": -1, "filename": "insightconnect_plugin_runtime-4.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "19fa7556d093ee588e209e3d53cd8d93", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 54084, "upload_time": "2020-04-06T18:58:49", "upload_time_iso_8601": "2020-04-06T18:58:49.086864Z", "url": "https://files.pythonhosted.org/packages/19/3f/1cdc8b595c7dca21cdd4628830f1c52f95e66d83649b6a1e377ab83bc017/insightconnect_plugin_runtime-4.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a2be24606624be8f1ced5fa258764a0", "sha256": "e14e511697c89a73d09de8b30c20febd379ca2d55b885ab475c2cc9544e976cf"}, "downloads": -1, "filename": "insightconnect-plugin-runtime-4.0.1.tar.gz", "has_sig": false, "md5_digest": "2a2be24606624be8f1ced5fa258764a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37562, "upload_time": "2020-04-06T18:58:50", "upload_time_iso_8601": "2020-04-06T18:58:50.337555Z", "url": "https://files.pythonhosted.org/packages/29/dd/b26c880676fdd40fac43ad3f671669cb2ea617d438b521ecd2fd2c6506c9/insightconnect-plugin-runtime-4.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:49 2020"}