{"info": {"author": "Rafael Bicalho", "author_email": "rbmbika@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "==========================\npython-reCAPTCHA - 0.1.0\n==========================\n\nreCAPTCHA is a free CAPTCHA service that protects your site against spam,\nmalicious registrations and other forms of attacks where computers try to\ndisguise themselves as a human.\n\n**python-reCAPTCHA** is a Python **3.x** module, that provides an easy\nway to interact with the `reCAPTCHA API <http://www.google.com/recaptcha>`_.\n\nInstallation\n============\n::\n\n    $ pip install python-reCAPTCHA\n\n**or**\n\n::\n\n    $ git clone https://github.com/rbika/python-reCAPTCHA.git\n    $ cd python-reCAPTCHA\n    $ python setup.py install\n    $ cd .. && rm -rf python-reCAPTCHA\n\nUsage\n=====\nTo use reCAPTCHA, you need to `sign up for API keys\n<http://www.google.com/recaptcha/whyrecaptcha>`_ for your site.\n\nOnce you've signed up for API keys, adding reCAPTCHA to your site consists of\ntwo steps.\n\n1. Displaying the reCAPTCHA Widget\n----------------------------------\nGenerate the widget HTML by calling the ``generate_html`` function.\n\n::\n\n    >>> from recaptcha.captcha import generate_html\n    >>>\n    >>> public_key = \"your_public_key\"\n    >>> recaptcha_html = generate_html(public_key)\n    >>>\n    >>> print(recaptcha_html)\n    <script type=\"text/javascript\" src=\"http://www.google.com/recaptcha/api/challenge?k=your_public_key\"></script><noscript><iframe src=\"http://www.google.com/recaptcha/api/api/noscript?k=your_public_key\"height=\"300\" width=\"500\" frameborder=\"0\"></iframe><br><textarea name=\"recaptcha_challenge_field\"rows=\"3\" cols=\"40\"></textarea><input type=\"hidden\" name=\"recaptcha_response_field\"value=\"manual_challenge\"></noscript>\n\nPlace the generated HTML inside your form. If you are working with Django por\nexample, your form will looks like this:\n\n::\n\n    <form action=\"\">\n        {% autoscape on %}recaptcha_html{% endautoescape %}\n        <input type=\"submit\" value=\"Submit\">\n    </form>\n\n2. Verifying user's anwser\n--------------------------\nAfter the user submit the anwser, you should get the required paramenters and\ncall the ``verify`` function. Again, a Django's example.\n\n::\n\n    >>> from recaptcha.captcha import verify\n    >>>\n    >>> private_key = \"your_private_key\"\n    >>> remote_ip = request.META['REMOTE_ADDR']\n    >>> challenge = request.POST.get('recaptcha_challenge_field', '')\n    >>> response = request.POST.get('recaptcha_response_field', '')\n    >>>\n    >>> result = verify(private_key, remote_ip, challenge, response)\n    >>>\n    >>> print(result)\n    {'success': False, 'error': 'incorrect-captcha-sol'}\n\nDocumentation\n=============\nDocumentation will be available soon.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/python-reCAPTCHA/", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "python-reCAPTCHA", "package_url": "https://pypi.org/project/python-reCAPTCHA/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/python-reCAPTCHA/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/python-reCAPTCHA/"}, "release_url": "https://pypi.org/project/python-reCAPTCHA/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Python module for reCAPTCHA service.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>reCAPTCHA is a free CAPTCHA service that protects your site against spam,\nmalicious registrations and other forms of attacks where computers try to\ndisguise themselves as a human.</p>\n<p><strong>python-reCAPTCHA</strong> is a Python <strong>3.x</strong> module, that provides an easy\nway to interact with the <a href=\"http://www.google.com/recaptcha\" rel=\"nofollow\">reCAPTCHA API</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install python-reCAPTCHA\n</pre>\n<p><strong>or</strong></p>\n<pre>$ git clone https://github.com/rbika/python-reCAPTCHA.git\n$ cd python-reCAPTCHA\n$ python setup.py install\n$ cd .. &amp;&amp; rm -rf python-reCAPTCHA\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To use reCAPTCHA, you need to <a href=\"http://www.google.com/recaptcha/whyrecaptcha\" rel=\"nofollow\">sign up for API keys</a> for your site.</p>\n<p>Once you\u2019ve signed up for API keys, adding reCAPTCHA to your site consists of\ntwo steps.</p>\n<div id=\"displaying-the-recaptcha-widget\">\n<h3>1. Displaying the reCAPTCHA Widget</h3>\n<p>Generate the widget HTML by calling the <tt>generate_html</tt> function.</p>\n<pre>&gt;&gt;&gt; from recaptcha.captcha import generate_html\n&gt;&gt;&gt;\n&gt;&gt;&gt; public_key = \"your_public_key\"\n&gt;&gt;&gt; recaptcha_html = generate_html(public_key)\n&gt;&gt;&gt;\n&gt;&gt;&gt; print(recaptcha_html)\n&lt;script type=\"text/javascript\" src=\"http://www.google.com/recaptcha/api/challenge?k=your_public_key\"&gt;&lt;/script&gt;&lt;noscript&gt;&lt;iframe src=\"http://www.google.com/recaptcha/api/api/noscript?k=your_public_key\"height=\"300\" width=\"500\" frameborder=\"0\"&gt;&lt;/iframe&gt;&lt;br&gt;&lt;textarea name=\"recaptcha_challenge_field\"rows=\"3\" cols=\"40\"&gt;&lt;/textarea&gt;&lt;input type=\"hidden\" name=\"recaptcha_response_field\"value=\"manual_challenge\"&gt;&lt;/noscript&gt;\n</pre>\n<p>Place the generated HTML inside your form. If you are working with Django por\nexample, your form will looks like this:</p>\n<pre>&lt;form action=\"\"&gt;\n    {% autoscape on %}recaptcha_html{% endautoescape %}\n    &lt;input type=\"submit\" value=\"Submit\"&gt;\n&lt;/form&gt;\n</pre>\n</div>\n<div id=\"verifying-user-s-anwser\">\n<h3>2. Verifying user\u2019s anwser</h3>\n<p>After the user submit the anwser, you should get the required paramenters and\ncall the <tt>verify</tt> function. Again, a Django\u2019s example.</p>\n<pre>&gt;&gt;&gt; from recaptcha.captcha import verify\n&gt;&gt;&gt;\n&gt;&gt;&gt; private_key = \"your_private_key\"\n&gt;&gt;&gt; remote_ip = request.META['REMOTE_ADDR']\n&gt;&gt;&gt; challenge = request.POST.get('recaptcha_challenge_field', '')\n&gt;&gt;&gt; response = request.POST.get('recaptcha_response_field', '')\n&gt;&gt;&gt;\n&gt;&gt;&gt; result = verify(private_key, remote_ip, challenge, response)\n&gt;&gt;&gt;\n&gt;&gt;&gt; print(result)\n{'success': False, 'error': 'incorrect-captcha-sol'}\n</pre>\n</div>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Documentation will be available soon.</p>\n</div>\n\n          </div>"}, "last_serial": 1060618, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "82dc793aea376829fc5e3204ec9ddd99", "sha256": "4cf2d36413c26fcc611acca1e0b18daf6dc8f4ebfc8945ab5948cecbbe16aba7"}, "downloads": -1, "filename": "python-reCAPTCHA-0.1.0.tar.gz", "has_sig": false, "md5_digest": "82dc793aea376829fc5e3204ec9ddd99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3789, "upload_time": "2014-04-15T01:57:01", "upload_time_iso_8601": "2014-04-15T01:57:01.664409Z", "url": "https://files.pythonhosted.org/packages/03/65/53de4b4e64da860b2856b9622e464620658fe950ef76aef9fd8b7f7007dd/python-reCAPTCHA-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "82dc793aea376829fc5e3204ec9ddd99", "sha256": "4cf2d36413c26fcc611acca1e0b18daf6dc8f4ebfc8945ab5948cecbbe16aba7"}, "downloads": -1, "filename": "python-reCAPTCHA-0.1.0.tar.gz", "has_sig": false, "md5_digest": "82dc793aea376829fc5e3204ec9ddd99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3789, "upload_time": "2014-04-15T01:57:01", "upload_time_iso_8601": "2014-04-15T01:57:01.664409Z", "url": "https://files.pythonhosted.org/packages/03/65/53de4b4e64da860b2856b9622e464620658fe950ef76aef9fd8b7f7007dd/python-reCAPTCHA-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:42 2020"}