{"info": {"author": "Ans\u00e8lm Joseph", "author_email": "anselmjosephs@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Git Bundle Plus\n\nBundle a local git project with all uncommitted changes, unstaged files, and stashes (git bundle on steroids).\n\n## Contents\n- [Requirements](#req)\n- [Installation](#inst)\n- [Usage](#usage)\n- [Example](#ex)\n- [**.bundle** output + retrive git project](#output)\n- [How it works](#works)\n- [Like](#love)\n- [Contributers](#con1)\n- [Contribute](#con2)\n- [License](#lice)\n\n<a name=\"req\"></a>\n## Requirements \u2705\n* Python 3\n\n<a name=\"inst\"></a>\n## Installation \ud83d\udd0c\n\n### Using pip\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install [Git-Bundle-Plus](https://pypi.org/project/Git-Bundle-Plus/).\n\n```bash\npip install git-bundle-plus\n```\n### Clone + Python 3 \n```bash\ngit clone https://github.com/an23lm/GitBundlePlus.git\n```\n```bash\npython ./gitbundleplus [-h] path\n```\n\n<a name=\"usage\"></a>\n## Usage \ud83d\udc69\u200d\ud83d\udcbb\n\n```bash\ngitbundleplus [-h] path\n```\n**-h** : Help\n\n**path** : Path to local git project folder you would like to bundle\n\n##### \u26a0\ufe0f Note: After using `gitbundleplus` on a project the uncommitted and unstaged files will be statshed. You can easily retrieve these files by using `git stash apply` and drop the applied stash with `git stash drop` if you have no further need for it.\n\n\n<a name=\"ex\"></a>\n## Example \ud83d\udc76\n\n### Bundle project\n```bash\ngitbundleplus ~/Documents/mygitproject\n```\n\n### Unbundle project\n```bash\ngit clone ~/Documents/mygitproject.bundle\n```\n\n### Retrieve uncommited and unstanged changes\n```bash\ngit stash apply ga-stash-tag-{ga-latest}\n```\n\n<a name=\"output\"></a>\n## `.bundle` output + retrive git project \ud83d\udce6\n`<git-folder-name>.bundle` will be created in the git folder specified.\n\n### To unbundle the bundled git project, clone the bundle.\n```bash\ngit clone path/to/bundle\n```\n\n### Restore the unstaged and uncommitted changes.\n\nAll the unstaged and uncommitted changes are stashed (`git stash`) and tagged (`git tag`) before bundling.\n\n```bash\ngit stash apply ga-stash-tag-{ga-latest}\n```\n\nDelete the tag to drop the stash after your done applying.\n```bash\ngit tag -d <tag-name>\n```\n\n### Find and apply your previously stashed changes.\n\n`git tag list` to view all your previously stashed changes, tagged with the pattern `ga-stash-tag-{<stash-number>}`. Apply and drop these tagged stashes as per your requirements.\n```bash\ngit stash apply <tag-name>\n```\nDelete the tag to drop the stash after your done applying.\n```bash\ngit tag -d <tag-name>\n```\n\n##### \u26a0\ufe0f Note: Unbundled projects do not checkout to your current working branch. They default to `master` branch. Please, take care to use `git checkout <branch-name>` to start using a particular branch before applying stashed changes.\n\n#### Please read [How it works](#works) for more information.\n\n<a name=\"works\"></a>\n## How it works \u2699\ufe0f\n1. `git stash list` is run and all the previously stashed items are tagged with the pattern `ga-stash-tag-{<stash-number>}`. *Example: `git tag ga-stash-tag-{0} stash@{0}`*.\n2. Stash uncommited and unstaged changed using `git stash -u`. If a stash is created, this stash will be assigned the tag `ga-stash-tag-{ga-latest}`.\n3. Bundle the git project using `git bundle <git-folder-name>.bundle` and the bundle is placed in the git folder.\n4. All the tags from the original git project will be removed. *Example: `git tag -d ga-stash-tag-{0}`*.\n\n<a name=\"love\"></a>\n## Show some love \u2764\ufe0f \nIf you found this interesting or helpful, leave a star. \u2b50\ufe0f \n\n<a name=\"con1\"></a>\n## Contributers \ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66\n* [Anselm Joseph](https://github.com/an23lm)\n\n<a name=\"con2\"></a>\n## Contribute \ud83d\udcaa \nPull requests are welcome.\n\n<a name=\"lice\"></a>\n## License \ud83d\udcc3 \n[MIT](https://choosealicense.com/licenses/mit/)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/an23lm/GitBundlePlus", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "Git-Bundle-Plus", "package_url": "https://pypi.org/project/Git-Bundle-Plus/", "platform": "", "project_url": "https://pypi.org/project/Git-Bundle-Plus/", "project_urls": {"Homepage": "https://github.com/an23lm/GitBundlePlus"}, "release_url": "https://pypi.org/project/Git-Bundle-Plus/0.9.1/", "requires_dist": null, "requires_python": "", "summary": "Bundle a local Git project with all uncommitted changes and stashes (git bundle on steroids).", "version": "0.9.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Git Bundle Plus</h1>\n<p>Bundle a local git project with all uncommitted changes, unstaged files, and stashes (git bundle on steroids).</p>\n<h2>Contents</h2>\n<ul>\n<li><a href=\"#req\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#inst\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#ex\" rel=\"nofollow\">Example</a></li>\n<li><a href=\"#output\" rel=\"nofollow\"><strong>.bundle</strong> output + retrive git project</a></li>\n<li><a href=\"#works\" rel=\"nofollow\">How it works</a></li>\n<li><a href=\"#love\" rel=\"nofollow\">Like</a></li>\n<li><a href=\"#con1\" rel=\"nofollow\">Contributers</a></li>\n<li><a href=\"#con2\" rel=\"nofollow\">Contribute</a></li>\n<li><a href=\"#lice\" rel=\"nofollow\">License</a></li>\n</ul>\n<p><a></a></p>\n<h2>Requirements \u2705</h2>\n<ul>\n<li>Python 3</li>\n</ul>\n<p><a></a></p>\n<h2>Installation \ud83d\udd0c</h2>\n<h3>Using pip</h3>\n<p>Use the package manager <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> to install <a href=\"https://pypi.org/project/Git-Bundle-Plus/\" rel=\"nofollow\">Git-Bundle-Plus</a>.</p>\n<pre>pip install git-bundle-plus\n</pre>\n<h3>Clone + Python 3</h3>\n<pre>git clone https://github.com/an23lm/GitBundlePlus.git\n</pre>\n<pre>python ./gitbundleplus <span class=\"o\">[</span>-h<span class=\"o\">]</span> path\n</pre>\n<p><a></a></p>\n<h2>Usage \ud83d\udc69\u200d\ud83d\udcbb</h2>\n<pre>gitbundleplus <span class=\"o\">[</span>-h<span class=\"o\">]</span> path\n</pre>\n<p><strong>-h</strong> : Help</p>\n<p><strong>path</strong> : Path to local git project folder you would like to bundle</p>\n<h5>\u26a0\ufe0f Note: After using <code>gitbundleplus</code> on a project the uncommitted and unstaged files will be statshed. You can easily retrieve these files by using <code>git stash apply</code> and drop the applied stash with <code>git stash drop</code> if you have no further need for it.</h5>\n<p><a></a></p>\n<h2>Example \ud83d\udc76</h2>\n<h3>Bundle project</h3>\n<pre>gitbundleplus ~/Documents/mygitproject\n</pre>\n<h3>Unbundle project</h3>\n<pre>git clone ~/Documents/mygitproject.bundle\n</pre>\n<h3>Retrieve uncommited and unstanged changes</h3>\n<pre>git stash apply ga-stash-tag-<span class=\"o\">{</span>ga-latest<span class=\"o\">}</span>\n</pre>\n<p><a></a></p>\n<h2><code>.bundle</code> output + retrive git project \ud83d\udce6</h2>\n<p><code>&lt;git-folder-name&gt;.bundle</code> will be created in the git folder specified.</p>\n<h3>To unbundle the bundled git project, clone the bundle.</h3>\n<pre>git clone path/to/bundle\n</pre>\n<h3>Restore the unstaged and uncommitted changes.</h3>\n<p>All the unstaged and uncommitted changes are stashed (<code>git stash</code>) and tagged (<code>git tag</code>) before bundling.</p>\n<pre>git stash apply ga-stash-tag-<span class=\"o\">{</span>ga-latest<span class=\"o\">}</span>\n</pre>\n<p>Delete the tag to drop the stash after your done applying.</p>\n<pre>git tag -d &lt;tag-name&gt;\n</pre>\n<h3>Find and apply your previously stashed changes.</h3>\n<p><code>git tag list</code> to view all your previously stashed changes, tagged with the pattern <code>ga-stash-tag-{&lt;stash-number&gt;}</code>. Apply and drop these tagged stashes as per your requirements.</p>\n<pre>git stash apply &lt;tag-name&gt;\n</pre>\n<p>Delete the tag to drop the stash after your done applying.</p>\n<pre>git tag -d &lt;tag-name&gt;\n</pre>\n<h5>\u26a0\ufe0f Note: Unbundled projects do not checkout to your current working branch. They default to <code>master</code> branch. Please, take care to use <code>git checkout &lt;branch-name&gt;</code> to start using a particular branch before applying stashed changes.</h5>\n<h4>Please read <a href=\"#works\" rel=\"nofollow\">How it works</a> for more information.</h4>\n<p><a></a></p>\n<h2>How it works \u2699\ufe0f</h2>\n<ol>\n<li><code>git stash list</code> is run and all the previously stashed items are tagged with the pattern <code>ga-stash-tag-{&lt;stash-number&gt;}</code>. <em>Example: <code>git tag ga-stash-tag-{0} stash@{0}</code></em>.</li>\n<li>Stash uncommited and unstaged changed using <code>git stash -u</code>. If a stash is created, this stash will be assigned the tag <code>ga-stash-tag-{ga-latest}</code>.</li>\n<li>Bundle the git project using <code>git bundle &lt;git-folder-name&gt;.bundle</code> and the bundle is placed in the git folder.</li>\n<li>All the tags from the original git project will be removed. <em>Example: <code>git tag -d ga-stash-tag-{0}</code></em>.</li>\n</ol>\n<p><a></a></p>\n<h2>Show some love \u2764\ufe0f</h2>\n<p>If you found this interesting or helpful, leave a star. \u2b50\ufe0f</p>\n<p><a></a></p>\n<h2>Contributers \ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66</h2>\n<ul>\n<li><a href=\"https://github.com/an23lm\" rel=\"nofollow\">Anselm Joseph</a></li>\n</ul>\n<p><a></a></p>\n<h2>Contribute \ud83d\udcaa</h2>\n<p>Pull requests are welcome.</p>\n<p><a></a></p>\n<h2>License \ud83d\udcc3</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 4671786, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "6c00b145084e850d447a07a6d981ffb1", "sha256": "52f89acc80a94e0db01d30341cdece473f6e7bed11347b6fc660f60e1addb6d5"}, "downloads": -1, "filename": "Git_Bundle_Plus-0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "6c00b145084e850d447a07a6d981ffb1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6441, "upload_time": "2019-01-08T05:03:43", "upload_time_iso_8601": "2019-01-08T05:03:43.444197Z", "url": "https://files.pythonhosted.org/packages/7e/43/e54780ec40d1088e204be6f20032f36b19988e1066eb202e195310dc219a/Git_Bundle_Plus-0.9-py3-none-any.whl", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "d63683dabaf3cf35e521062337d863c9", "sha256": "d8eb263af8c9c1b20ed823e3a8617196d3e112cb323d68474d8a596685c0fa49"}, "downloads": -1, "filename": "Git_Bundle_Plus-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d63683dabaf3cf35e521062337d863c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7814, "upload_time": "2019-01-08T07:46:51", "upload_time_iso_8601": "2019-01-08T07:46:51.125080Z", "url": "https://files.pythonhosted.org/packages/6d/3d/782d5b7653e1868d166dc8813cd8153f0c1c9f94c6915c7af7196eddd682/Git_Bundle_Plus-0.9.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d63683dabaf3cf35e521062337d863c9", "sha256": "d8eb263af8c9c1b20ed823e3a8617196d3e112cb323d68474d8a596685c0fa49"}, "downloads": -1, "filename": "Git_Bundle_Plus-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d63683dabaf3cf35e521062337d863c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7814, "upload_time": "2019-01-08T07:46:51", "upload_time_iso_8601": "2019-01-08T07:46:51.125080Z", "url": "https://files.pythonhosted.org/packages/6d/3d/782d5b7653e1868d166dc8813cd8153f0c1c9f94c6915c7af7196eddd682/Git_Bundle_Plus-0.9.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:57:09 2020"}