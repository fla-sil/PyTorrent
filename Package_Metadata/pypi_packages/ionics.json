{"info": {"author": "Dominik Vilsmeier", "author_email": "d.vilsmeier@gsi.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Physics"], "description": "Ionization Cross Sections\n=========================\n\nInstallation\n------------\n\nRequirements\n~~~~~~~~~~~~\n\nIf you are on Unix then all dependencies are installed automatically upon installation. If you are\nusing Windows then the ``numpy`` and ``scipy`` dependencies can't be installed automatically as\nthey require precompiled binaries for the specific operating system. Scipy doesn't support\nbinaries for Windows officially. Please consider the scipy installation instructions about\n`scientific Python distributions`_ and `inofficial binaries`_.\n\n.. _scientific Python distributions: https://www.scipy.org/install.html#scientific-python-distributions\n.. _inofficial binaries: https://www.scipy.org/install.html#windows-packages\n\nThe GUI uses PyQt4_ which must be installed separately (the GUI also supports PyQt5 which can be\ninstalled similarly to the PyQt4 installation instructions below). You can use the package of course\nwithout the GUI in your scripts by simply importing it. However if you want to use the GUI please\nconsider the following resources:\n\n* **Unix** - You can downloaded the latest release from `here\n  <https://www.riverbankcomputing.com/software/pyqt/download>`_. Please follow the installation\n  instructions on this website. Usually you have to build it from source which is fairly simple though.\n\n* **Windows** - Download the correct PyQt4 version from `this website <http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyqt4>`_;\n  make sure that you match your Python and OS version. Then open Powershell (press the Windows key\n  and type \"Powershell\" in the search field; we recommend to use the x86 version) and navigate to\n  the folder where you downloaded the ``.whl`` file to (usually ``Downloads``). Then install the\n  package via ``pip install <version>.whl`` where you replace ``<version>.whl`` with the name of\n  the file you downloaded (you can use tab completion in Powershell).\n\n.. _PyQt4: https://www.riverbankcomputing.com/software/pyqt/intro\n\nThe GUI also uses ``matplotlib``; please visit their `website <https://matplotlib.org/users/installing.html>`_\nfor the installation instructions.\n\n\nInstalling the package\n~~~~~~~~~~~~~~~~~~~~~~\n\nYou can install the package from pip by running ``pip install ionics``.\n\n**Note:** If you are using Windows then Python must have been added to your path in order for the\nabove command to succeed.\n\n\nUsage\n-----\n\nThe GUI\n~~~~~~~\n\nTo use the graphical user interface navigate to the directory where the package has been installed.\nYou can find it by running ``python -c \"import ionics; print ionics.__file__\"``. Within that\ndirectory just run ``python start_gui.py``.\n\nBrowsing cross section\n``````````````````````\n\nOn the left side you find a file browser exposing the cross section files that are contained by\nthe ``ionics`` package. You can get a list of available cross sections by either clicking\non a directory (all cross section within that directory) or a module itself (all cross sections\nwithin that module). The cross sections are shown in the window below the file browser.\nBy clicking on a cross section you can obtain information about them.\n\nPlotting cross sections\n```````````````````````\n\nTo plot a specific cross section drag and drop it onto a plot canvas on the right side.\nYou are prompted to enter the cross section's specific parameters as well as the plot range.\nYou can also specify the scale for which the data should be generated (*linear* means the data is\nevenly distributed, *log* means the data is exponentially distributed so it will be evenly\ndistributed when using a log-scale).\n\nAlso:\n\n* You can stack multiple single-differential cross sections by dropping them onto the same canvas.\n* You can add a new canvas by clicking on the \"add\" button on the very right.\n* You can change the scale for each axis at the bottom of the corresponding plot.\n\n\nUsage within your applications\n``````````````````````````````\n\nThis package contains various ionization cross sections as well as related auxiliary functions\n(such as random sampling). Two kinds of ionization cross sections are provided:\n\n* Single differential ionization cross sections (SDCS); see ``ionics.ddcs``.\n* Double differential ionization cross sections (DDCS); see ``ionics.sdcs``.\n\nRequired parameters for cross sections must be specified in their ``__init__`` methods. A cross\nsection can be evaluated by calling it (via ``__call__``) (for the signature see the help text of\none of the cross sections). SDCS require the kinetic energy of the ionized particle as an argument\nwhile DDCS also require the polar scattering angle (in addition).\n\nRandom sampling is available for double differential cross sections. Two general methods are available\nwhich are meant to work with any two-dimensional distribution:\n\n* Inverse transform sampling\n* Rejection sampling\n\nPlease consider ``ionics.ddcs.random_sampling`` for more information.\n\n\nExamples\n--------\n\nUsing a double differential cross section::\n\n    >>> from ionics.ddcs.voitkiv import VoitkivDDCS\n    >>> ddcs = VoitkivDDCS(4.0e12, 1, 'H')  # 4 TeV protons on Hydrogen.\n    >>> ddcs(10, pi/2)  # Kinetic energy 10eV, transverse scattering.\n    0.00043127346990368256", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/IPMsim/Ionization-Cross-Sections", "keywords": "ionization", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "ionics", "package_url": "https://pypi.org/project/ionics/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ionics/", "project_urls": {"Homepage": "https://gitlab.com/IPMsim/Ionization-Cross-Sections"}, "release_url": "https://pypi.org/project/ionics/0.2.3/", "requires_dist": ["numpy", "scipy"], "requires_python": "", "summary": "This package contains various ionization cross section models.", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>If you are on Unix then all dependencies are installed automatically upon installation. If you are\nusing Windows then the <tt>numpy</tt> and <tt>scipy</tt> dependencies can\u2019t be installed automatically as\nthey require precompiled binaries for the specific operating system. Scipy doesn\u2019t support\nbinaries for Windows officially. Please consider the scipy installation instructions about\n<a href=\"https://www.scipy.org/install.html#scientific-python-distributions\" rel=\"nofollow\">scientific Python distributions</a> and <a href=\"https://www.scipy.org/install.html#windows-packages\" rel=\"nofollow\">inofficial binaries</a>.</p>\n<p>The GUI uses <a href=\"https://www.riverbankcomputing.com/software/pyqt/intro\" rel=\"nofollow\">PyQt4</a> which must be installed separately (the GUI also supports PyQt5 which can be\ninstalled similarly to the PyQt4 installation instructions below). You can use the package of course\nwithout the GUI in your scripts by simply importing it. However if you want to use the GUI please\nconsider the following resources:</p>\n<ul>\n<li><strong>Unix</strong> - You can downloaded the latest release from <a href=\"https://www.riverbankcomputing.com/software/pyqt/download\" rel=\"nofollow\">here</a>. Please follow the installation\ninstructions on this website. Usually you have to build it from source which is fairly simple though.</li>\n<li><strong>Windows</strong> - Download the correct PyQt4 version from <a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyqt4\" rel=\"nofollow\">this website</a>;\nmake sure that you match your Python and OS version. Then open Powershell (press the Windows key\nand type \u201cPowershell\u201d in the search field; we recommend to use the x86 version) and navigate to\nthe folder where you downloaded the <tt>.whl</tt> file to (usually <tt>Downloads</tt>). Then install the\npackage via <tt>pip install <span class=\"pre\">&lt;version&gt;.whl</span></tt> where you replace <tt><span class=\"pre\">&lt;version&gt;.whl</span></tt> with the name of\nthe file you downloaded (you can use tab completion in Powershell).</li>\n</ul>\n<p>The GUI also uses <tt>matplotlib</tt>; please visit their <a href=\"https://matplotlib.org/users/installing.html\" rel=\"nofollow\">website</a>\nfor the installation instructions.</p>\n</div>\n<div id=\"installing-the-package\">\n<h3>Installing the package</h3>\n<p>You can install the package from pip by running <tt>pip install ionics</tt>.</p>\n<p><strong>Note:</strong> If you are using Windows then Python must have been added to your path in order for the\nabove command to succeed.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<h2 id=\"the-gui\"><span class=\"section-subtitle\">The GUI</span></h2>\n<p>To use the graphical user interface navigate to the directory where the package has been installed.\nYou can find it by running <tt>python <span class=\"pre\">-c</span> \"import ionics; print ionics.__file__\"</tt>. Within that\ndirectory just run <tt>python start_gui.py</tt>.</p>\n<div id=\"browsing-cross-section\">\n<h3>Browsing cross section</h3>\n<p>On the left side you find a file browser exposing the cross section files that are contained by\nthe <tt>ionics</tt> package. You can get a list of available cross sections by either clicking\non a directory (all cross section within that directory) or a module itself (all cross sections\nwithin that module). The cross sections are shown in the window below the file browser.\nBy clicking on a cross section you can obtain information about them.</p>\n</div>\n<div id=\"plotting-cross-sections\">\n<h3>Plotting cross sections</h3>\n<p>To plot a specific cross section drag and drop it onto a plot canvas on the right side.\nYou are prompted to enter the cross section\u2019s specific parameters as well as the plot range.\nYou can also specify the scale for which the data should be generated (<em>linear</em> means the data is\nevenly distributed, <em>log</em> means the data is exponentially distributed so it will be evenly\ndistributed when using a log-scale).</p>\n<p>Also:</p>\n<ul>\n<li>You can stack multiple single-differential cross sections by dropping them onto the same canvas.</li>\n<li>You can add a new canvas by clicking on the \u201cadd\u201d button on the very right.</li>\n<li>You can change the scale for each axis at the bottom of the corresponding plot.</li>\n</ul>\n</div>\n<div id=\"usage-within-your-applications\">\n<h3>Usage within your applications</h3>\n<p>This package contains various ionization cross sections as well as related auxiliary functions\n(such as random sampling). Two kinds of ionization cross sections are provided:</p>\n<ul>\n<li>Single differential ionization cross sections (SDCS); see <tt>ionics.ddcs</tt>.</li>\n<li>Double differential ionization cross sections (DDCS); see <tt>ionics.sdcs</tt>.</li>\n</ul>\n<p>Required parameters for cross sections must be specified in their <tt>__init__</tt> methods. A cross\nsection can be evaluated by calling it (via <tt>__call__</tt>) (for the signature see the help text of\none of the cross sections). SDCS require the kinetic energy of the ionized particle as an argument\nwhile DDCS also require the polar scattering angle (in addition).</p>\n<p>Random sampling is available for double differential cross sections. Two general methods are available\nwhich are meant to work with any two-dimensional distribution:</p>\n<ul>\n<li>Inverse transform sampling</li>\n<li>Rejection sampling</li>\n</ul>\n<p>Please consider <tt>ionics.ddcs.random_sampling</tt> for more information.</p>\n</div>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Using a double differential cross section:</p>\n<pre>&gt;&gt;&gt; from ionics.ddcs.voitkiv import VoitkivDDCS\n&gt;&gt;&gt; ddcs = VoitkivDDCS(4.0e12, 1, 'H')  # 4 TeV protons on Hydrogen.\n&gt;&gt;&gt; ddcs(10, pi/2)  # Kinetic energy 10eV, transverse scattering.\n0.00043127346990368256\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2837754, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "6f8818c43c7d67b57b9cd0b63324eb29", "sha256": "f39ab343a2a5d2046a245c44535f979bd2a9598c144a234059e54a68f207afcb"}, "downloads": -1, "filename": "ionics-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6f8818c43c7d67b57b9cd0b63324eb29", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 59520, "upload_time": "2017-04-25T21:56:30", "upload_time_iso_8601": "2017-04-25T21:56:30.639631Z", "url": "https://files.pythonhosted.org/packages/38/d4/d4dc4e1e31ef8d8b2645045f1f7406e078963b0daaa0cf58868a00289e5a/ionics-0.2-py2.py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "39daab9754c29c1b4df01298fbcae4b0", "sha256": "a947daecbcf03fc20de5cd6c0ea2f4709a4fc7607d2ef3e5ff44c7f1efcc7ffd"}, "downloads": -1, "filename": "ionics-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "39daab9754c29c1b4df01298fbcae4b0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 59034, "upload_time": "2017-04-25T22:16:59", "upload_time_iso_8601": "2017-04-25T22:16:59.854148Z", "url": "https://files.pythonhosted.org/packages/95/89/7f4b3dd1f5dd4aeccf8dcdd55964c17c172c49b59fced340dfe71652c9de/ionics-0.2.1-py2.py3-none-any.whl", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "79e4137f9b8280c0c00be03acd87754c", "sha256": "05695d6e511fe120ad74728c0cd3fb7d34de7737c8266374d769201b0f3581eb"}, "downloads": -1, "filename": "ionics-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "79e4137f9b8280c0c00be03acd87754c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 59037, "upload_time": "2017-04-25T22:24:04", "upload_time_iso_8601": "2017-04-25T22:24:04.520744Z", "url": "https://files.pythonhosted.org/packages/0d/c3/4ccdb7ebb2f879e0827e380be308a1a15224ba380665b5b92ddca19a1044/ionics-0.2.2-py2.py3-none-any.whl", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "bf8ece37f46b42b10db7c5a2b16dfb9d", "sha256": "9bc651cc9bd07d2da8a4da3b22b342a879b8d79dc7427f41011b6bc28caac6d9"}, "downloads": -1, "filename": "ionics-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bf8ece37f46b42b10db7c5a2b16dfb9d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 60312, "upload_time": "2017-04-28T18:07:58", "upload_time_iso_8601": "2017-04-28T18:07:58.262933Z", "url": "https://files.pythonhosted.org/packages/5b/f1/242df203eb32fba94bae6394d7fb2283c0168a2e064585d721fcba53c6d5/ionics-0.2.3-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bf8ece37f46b42b10db7c5a2b16dfb9d", "sha256": "9bc651cc9bd07d2da8a4da3b22b342a879b8d79dc7427f41011b6bc28caac6d9"}, "downloads": -1, "filename": "ionics-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bf8ece37f46b42b10db7c5a2b16dfb9d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 60312, "upload_time": "2017-04-28T18:07:58", "upload_time_iso_8601": "2017-04-28T18:07:58.262933Z", "url": "https://files.pythonhosted.org/packages/5b/f1/242df203eb32fba94bae6394d7fb2283c0168a2e064585d721fcba53c6d5/ionics-0.2.3-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:54:59 2020"}