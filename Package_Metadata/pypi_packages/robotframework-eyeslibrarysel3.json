{"info": {"author": "Chris Hunter", "author_email": "<hunter.james.chris@gmail.com>", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Robot Framework :: Library", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing"], "description": "# EyesLibrary for Robot Framework\n\n#### Table of Contents\n\n- [Introduction](#Introduction)\n- [Requirements](#Requirements)\n- [Installation](#Installation)\n- [Directory Layout](#Directory%20Layout)\n- [Usage](#Usage)\n- [Running the Demo](#Running%20the%20Demo)\n- [Things to Note When Using Applitools](#Things%20to%20Note%20When%20Using%20Applitools)\n- [Getting Help](#Getting%20Help)\n- [Credits](#Credits)\n\n## Introduction\n\nEyesLibrary is a Robot Framework Library to automate visual software testing verification. EyesLibrary uses a Python SDK called [Eyes-Selenium](https://pypi.python.org/pypi/eyes-selenium) from the tool [Applitools Eyes](http://applitools.com/), and can be used with the [SeleniumLibrary](https://github.com/robotframework/SeleniumLibrary) and/or the [AppiumLibrary](https://github.com/serhatbolsu/robotframework-appiumlibrary) .\n\nThis library is a fork of [Robot-AppEyes](https://github.com/NaviNet/Robot-AppEyes).\nIn order to use EyesLibrary, you are required to [sign up](https://applitools.com/sign-up/) for a free account with Applitools. See the [Usage](https://github.com/joel-oliveira/EyesLibrary#usage) section.\n\n- Information about EyesLibrary keywords can be found on the [Keyword Documentation](https://joel-oliveira.github.io/EyesLibrary/) page.\n\n- The [Applitools Documentation](https://pypi.org/project/eyes-selenium/) may be consulted in order to understand how Eyes works.\n\n- More information about the SeleniumLibrary can be found on the [SeleniumLibrary Repo](https://github.com/robotframework/SeleniumLibrary) and in the [Keyword Documentation](http://robotframework.org/SeleniumLibrary/SeleniumLibrary.html).\n\n- More information about the AppiumLibrary can be found on the [AppiumLibrary Repo](https://github.com/serhatbolsu/robotframework-appiumlibrary) and in the [Keyword Documentation](http://serhatbolsu.github.io/robotframework-appiumlibrary/AppiumLibrary.html).\n\n## Requirements\n\nThe following versions were used to test the library:\n\n- Python 2.7.14 or 3.6.0\n- Robot Framework 3.1.1\n- Eyes-Selenium 3.16.2\n- SeleniumLibrary 3.3.1 (For Web Tests)\n- AppiumLibrary 1.5.0.3 (For Mobile Tests)\n\n## Installation\n\nThe recommended **installation** method is using [pip](http://pip-installer.org):\n\n    pip install robotframework-eyeslibrary\n\nTo **update** both the library and all\nits dependencies to the latest version:\n\n    pip install --upgrade robotframework-eyeslibrary\n\nTo install a **specific version**:\n\n    pip install robotframework-eyeslibrary==(DesiredVersion)\n\n#### Uninstall\n\nTo uninstall EyesLibrary use the following pip command:\n\n    pip uninstall robotframework-eyeslibrary\n\n## Directory Layout\n\n**EyesLibrary/**\n\n&ensp;&ensp;The Robot Framework Python Library that makes use of the Applitools Eyes Python SDK\n\n**tests/acceptance/**\n\n&ensp;&ensp;Test files to display what the keywords from EyesLibrary accomplish\n\n**docs/**\n\n&ensp;&ensp;Documentation for the EyesLibrary: Keyword Documentation and ChangeLog\n\n## Usage\n\nYou must create a [free account](https://applitools.com/sign-up/) with Applitools in order to run\nEyesLibrary and return results.\n\nThen, to use the library, follow [EyesLibrary Keyword Documentation](https://joel-oliveira.github.io/EyesLibrary/).\n\nThis is a Robot Framework library. If you're not familiarized with Robot Framework, \nplease consult [Robot Framework User Guide](http://code.google.com/p/robotframework/wiki/UserGuide).\n\n## Running the Demo\n\nAt _tests/acceptance_ directory, you can find Robot Framework tests for:\n\n- Web\n- Android Browser\n- Android Native App\n- Android Hybrid App\n- iOS Browser\n- iOS Native App\n- iOS Hybrid App\n\nBefore running the tests, your Applitools API Key must be set in _tests/acceptance/resources/common.robot_, by replacing \"YourApplitoolsApiKey\" with your own key.\n\nWhen running the mobile tests, you must replace the variables within _tests/acceptance/resources/mobile.robot_ with your own, as well as the ones in _tests/acceptance/resources/android.robot_ or _tests/acceptance/resources/ios.robot_, according to the OS in use.\n\nFor instance, you may want to use a different Remote URL than the one provided in the variables. So, if you are working with [TestingBot](https://testingbot.com/), for example, you'd have to replace the Remote URL variable in _tests/acceptance/resources/mobile.robot_:\n\n    ${REMOTE URL}          http://${CREDENTIALS}@hub.testingbot.com/wd/hub\n\nBefore running the Android Hybrid App tests, you need to install the Demo App (APK found at _tests/resources_) in your device.\n\nFor in depth detail on how the keywords function, read the Keyword documentation found here: [Keyword Documentation](https://joel-oliveira.github.io/EyesLibrary/)\n\n**Remember to include your Applitools API key otherwise the\ntest will not run.** To run a test, open a command prompt within the _tests/acceptance_ folder and run:\n\n    robot FILENAME.robot\n\nFor example, to run the Test Suite for Web:\n\n    robot web.robot\n\n**Note:** It is assumed that anyone who wants to use this demo is already able to execute robot tests using SeleniumLibrary (for web tests) and/or AppiumLibrary (for mobile tests). The browser used to navigate with SeleniumLibrary is Google Chrome.\n\n## Things to Note When Using Applitools\n\n- The tests will be accepted automatically by Applitools Eyes after the first run because a new baseline is being created. A second test run will show a comparison between screens.\n- Changing the Applitools baseline parameters will create a new baseline, that is automatically accepted on the first run. (For more information, read the article: [What is a \u2018baseline\u2019 and how is a baseline created?](https://help.applitools.com/hc/en-us/articles/360007188691-What-is-a-baseline-and-how-is-a-baseline-created-)\n- The viewport size should not be set to greater values than the maximum size of the device's window.\n(For more information on using viewports, consult [Using viewports in Eyes](https://applitools.com/docs/topics/general-concepts/using-viewports-in-eyes.html))\n\n## Getting Help\n\nTo be defined. It might be helpful to read [Applitools Documentation](https://applitools.com/docs).\n\n## Credits\n\nEyesLibrary was forked from [Robot-AppEyes](https://github.com/NaviNet/Robot-AppEyes) on version 1.2.\n\nRobot-AppEyes authors:\n\n- [Thomas Armstrong](https://github.com/tbarmstrong)\n- [Simon McMorran](https://github.com/SIMcM)\n- [Gareth Nixon](https://github.com/GarethNixon)\n- [Adam Simmons](https://github.com/adamsimmons)\n\nEyesLibrary then emerged as an independent library from the original one, on version 2.0.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/chunter4/EyesLibrary/archive/v2.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "robotframework testing testautomation eyes-selenium selenium appium visual-verification", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "robotframework-eyeslibrarysel3", "package_url": "https://pypi.org/project/robotframework-eyeslibrarysel3/", "platform": "any", "project_url": "https://pypi.org/project/robotframework-eyeslibrarysel3/", "project_urls": {"Download": "https://github.com/chunter4/EyesLibrary/archive/v2.2.tar.gz"}, "release_url": "https://pypi.org/project/robotframework-eyeslibrarysel3/2.2/", "requires_dist": null, "requires_python": "", "summary": "Visual verification testing library for Robot Framework", "version": "2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>EyesLibrary for Robot Framework</h1>\n<h4>Table of Contents</h4>\n<ul>\n<li><a href=\"#Introduction\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#Requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#Installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#Directory%20Layout\" rel=\"nofollow\">Directory Layout</a></li>\n<li><a href=\"#Usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#Running%20the%20Demo\" rel=\"nofollow\">Running the Demo</a></li>\n<li><a href=\"#Things%20to%20Note%20When%20Using%20Applitools\" rel=\"nofollow\">Things to Note When Using Applitools</a></li>\n<li><a href=\"#Getting%20Help\" rel=\"nofollow\">Getting Help</a></li>\n<li><a href=\"#Credits\" rel=\"nofollow\">Credits</a></li>\n</ul>\n<h2>Introduction</h2>\n<p>EyesLibrary is a Robot Framework Library to automate visual software testing verification. EyesLibrary uses a Python SDK called <a href=\"https://pypi.python.org/pypi/eyes-selenium\" rel=\"nofollow\">Eyes-Selenium</a> from the tool <a href=\"http://applitools.com/\" rel=\"nofollow\">Applitools Eyes</a>, and can be used with the <a href=\"https://github.com/robotframework/SeleniumLibrary\" rel=\"nofollow\">SeleniumLibrary</a> and/or the <a href=\"https://github.com/serhatbolsu/robotframework-appiumlibrary\" rel=\"nofollow\">AppiumLibrary</a> .</p>\n<p>This library is a fork of <a href=\"https://github.com/NaviNet/Robot-AppEyes\" rel=\"nofollow\">Robot-AppEyes</a>.\nIn order to use EyesLibrary, you are required to <a href=\"https://applitools.com/sign-up/\" rel=\"nofollow\">sign up</a> for a free account with Applitools. See the <a href=\"https://github.com/joel-oliveira/EyesLibrary#usage\" rel=\"nofollow\">Usage</a> section.</p>\n<ul>\n<li>\n<p>Information about EyesLibrary keywords can be found on the <a href=\"https://joel-oliveira.github.io/EyesLibrary/\" rel=\"nofollow\">Keyword Documentation</a> page.</p>\n</li>\n<li>\n<p>The <a href=\"https://pypi.org/project/eyes-selenium/\" rel=\"nofollow\">Applitools Documentation</a> may be consulted in order to understand how Eyes works.</p>\n</li>\n<li>\n<p>More information about the SeleniumLibrary can be found on the <a href=\"https://github.com/robotframework/SeleniumLibrary\" rel=\"nofollow\">SeleniumLibrary Repo</a> and in the <a href=\"http://robotframework.org/SeleniumLibrary/SeleniumLibrary.html\" rel=\"nofollow\">Keyword Documentation</a>.</p>\n</li>\n<li>\n<p>More information about the AppiumLibrary can be found on the <a href=\"https://github.com/serhatbolsu/robotframework-appiumlibrary\" rel=\"nofollow\">AppiumLibrary Repo</a> and in the <a href=\"http://serhatbolsu.github.io/robotframework-appiumlibrary/AppiumLibrary.html\" rel=\"nofollow\">Keyword Documentation</a>.</p>\n</li>\n</ul>\n<h2>Requirements</h2>\n<p>The following versions were used to test the library:</p>\n<ul>\n<li>Python 2.7.14 or 3.6.0</li>\n<li>Robot Framework 3.1.1</li>\n<li>Eyes-Selenium 3.16.2</li>\n<li>SeleniumLibrary 3.3.1 (For Web Tests)</li>\n<li>AppiumLibrary 1.5.0.3 (For Mobile Tests)</li>\n</ul>\n<h2>Installation</h2>\n<p>The recommended <strong>installation</strong> method is using <a href=\"http://pip-installer.org\" rel=\"nofollow\">pip</a>:</p>\n<pre><code>pip install robotframework-eyeslibrary\n</code></pre>\n<p>To <strong>update</strong> both the library and all\nits dependencies to the latest version:</p>\n<pre><code>pip install --upgrade robotframework-eyeslibrary\n</code></pre>\n<p>To install a <strong>specific version</strong>:</p>\n<pre><code>pip install robotframework-eyeslibrary==(DesiredVersion)\n</code></pre>\n<h4>Uninstall</h4>\n<p>To uninstall EyesLibrary use the following pip command:</p>\n<pre><code>pip uninstall robotframework-eyeslibrary\n</code></pre>\n<h2>Directory Layout</h2>\n<p><strong>EyesLibrary/</strong></p>\n<p>\u2002\u2002The Robot Framework Python Library that makes use of the Applitools Eyes Python SDK</p>\n<p><strong>tests/acceptance/</strong></p>\n<p>\u2002\u2002Test files to display what the keywords from EyesLibrary accomplish</p>\n<p><strong>docs/</strong></p>\n<p>\u2002\u2002Documentation for the EyesLibrary: Keyword Documentation and ChangeLog</p>\n<h2>Usage</h2>\n<p>You must create a <a href=\"https://applitools.com/sign-up/\" rel=\"nofollow\">free account</a> with Applitools in order to run\nEyesLibrary and return results.</p>\n<p>Then, to use the library, follow <a href=\"https://joel-oliveira.github.io/EyesLibrary/\" rel=\"nofollow\">EyesLibrary Keyword Documentation</a>.</p>\n<p>This is a Robot Framework library. If you're not familiarized with Robot Framework,\nplease consult <a href=\"http://code.google.com/p/robotframework/wiki/UserGuide\" rel=\"nofollow\">Robot Framework User Guide</a>.</p>\n<h2>Running the Demo</h2>\n<p>At <em>tests/acceptance</em> directory, you can find Robot Framework tests for:</p>\n<ul>\n<li>Web</li>\n<li>Android Browser</li>\n<li>Android Native App</li>\n<li>Android Hybrid App</li>\n<li>iOS Browser</li>\n<li>iOS Native App</li>\n<li>iOS Hybrid App</li>\n</ul>\n<p>Before running the tests, your Applitools API Key must be set in <em>tests/acceptance/resources/common.robot</em>, by replacing \"YourApplitoolsApiKey\" with your own key.</p>\n<p>When running the mobile tests, you must replace the variables within <em>tests/acceptance/resources/mobile.robot</em> with your own, as well as the ones in <em>tests/acceptance/resources/android.robot</em> or <em>tests/acceptance/resources/ios.robot</em>, according to the OS in use.</p>\n<p>For instance, you may want to use a different Remote URL than the one provided in the variables. So, if you are working with <a href=\"https://testingbot.com/\" rel=\"nofollow\">TestingBot</a>, for example, you'd have to replace the Remote URL variable in <em>tests/acceptance/resources/mobile.robot</em>:</p>\n<pre><code>${REMOTE URL}          http://${CREDENTIALS}@hub.testingbot.com/wd/hub\n</code></pre>\n<p>Before running the Android Hybrid App tests, you need to install the Demo App (APK found at <em>tests/resources</em>) in your device.</p>\n<p>For in depth detail on how the keywords function, read the Keyword documentation found here: <a href=\"https://joel-oliveira.github.io/EyesLibrary/\" rel=\"nofollow\">Keyword Documentation</a></p>\n<p><strong>Remember to include your Applitools API key otherwise the\ntest will not run.</strong> To run a test, open a command prompt within the <em>tests/acceptance</em> folder and run:</p>\n<pre><code>robot FILENAME.robot\n</code></pre>\n<p>For example, to run the Test Suite for Web:</p>\n<pre><code>robot web.robot\n</code></pre>\n<p><strong>Note:</strong> It is assumed that anyone who wants to use this demo is already able to execute robot tests using SeleniumLibrary (for web tests) and/or AppiumLibrary (for mobile tests). The browser used to navigate with SeleniumLibrary is Google Chrome.</p>\n<h2>Things to Note When Using Applitools</h2>\n<ul>\n<li>The tests will be accepted automatically by Applitools Eyes after the first run because a new baseline is being created. A second test run will show a comparison between screens.</li>\n<li>Changing the Applitools baseline parameters will create a new baseline, that is automatically accepted on the first run. (For more information, read the article: <a href=\"https://help.applitools.com/hc/en-us/articles/360007188691-What-is-a-baseline-and-how-is-a-baseline-created-\" rel=\"nofollow\">What is a \u2018baseline\u2019 and how is a baseline created?</a></li>\n<li>The viewport size should not be set to greater values than the maximum size of the device's window.\n(For more information on using viewports, consult <a href=\"https://applitools.com/docs/topics/general-concepts/using-viewports-in-eyes.html\" rel=\"nofollow\">Using viewports in Eyes</a>)</li>\n</ul>\n<h2>Getting Help</h2>\n<p>To be defined. It might be helpful to read <a href=\"https://applitools.com/docs\" rel=\"nofollow\">Applitools Documentation</a>.</p>\n<h2>Credits</h2>\n<p>EyesLibrary was forked from <a href=\"https://github.com/NaviNet/Robot-AppEyes\" rel=\"nofollow\">Robot-AppEyes</a> on version 1.2.</p>\n<p>Robot-AppEyes authors:</p>\n<ul>\n<li><a href=\"https://github.com/tbarmstrong\" rel=\"nofollow\">Thomas Armstrong</a></li>\n<li><a href=\"https://github.com/SIMcM\" rel=\"nofollow\">Simon McMorran</a></li>\n<li><a href=\"https://github.com/GarethNixon\" rel=\"nofollow\">Gareth Nixon</a></li>\n<li><a href=\"https://github.com/adamsimmons\" rel=\"nofollow\">Adam Simmons</a></li>\n</ul>\n<p>EyesLibrary then emerged as an independent library from the original one, on version 2.0.</p>\n\n          </div>"}, "last_serial": 6794777, "releases": {"2.2": [{"comment_text": "", "digests": {"md5": "425ef2c04ddbde8e5cbec4dee522fac3", "sha256": "d80f73b79466282a471bdbf788b5273670788be3bb76b42b80cf169282cabef3"}, "downloads": -1, "filename": "robotframework-eyeslibrarysel3-2.2.tar.gz", "has_sig": false, "md5_digest": "425ef2c04ddbde8e5cbec4dee522fac3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21071, "upload_time": "2020-03-11T20:03:47", "upload_time_iso_8601": "2020-03-11T20:03:47.544159Z", "url": "https://files.pythonhosted.org/packages/21/1f/812a8859266c981576c851ccfa6f39d8c3b23b5aa3361ea550f78cc61623/robotframework-eyeslibrarysel3-2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "425ef2c04ddbde8e5cbec4dee522fac3", "sha256": "d80f73b79466282a471bdbf788b5273670788be3bb76b42b80cf169282cabef3"}, "downloads": -1, "filename": "robotframework-eyeslibrarysel3-2.2.tar.gz", "has_sig": false, "md5_digest": "425ef2c04ddbde8e5cbec4dee522fac3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21071, "upload_time": "2020-03-11T20:03:47", "upload_time_iso_8601": "2020-03-11T20:03:47.544159Z", "url": "https://files.pythonhosted.org/packages/21/1f/812a8859266c981576c851ccfa6f39d8c3b23b5aa3361ea550f78cc61623/robotframework-eyeslibrarysel3-2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:54 2020"}