{"info": {"author": "InSilicoLynx Limited", "author_email": "contact@insilicolynx.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Science/Research", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Chemistry"], "description": "---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nREADME file for insilicolynxdqi\n=============================================================================================================================================================================================\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nChange log\n=============================================================================================================================================================================================\n\n17th November 2017: First release written by Mark Wenlock.\n\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCopyright\n=============================================================================================================================================================================================\n\nCopyright 2017 InSilicoLynx Limited\nAll Rights Reserved.\n\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nLicence\n=============================================================================================================================================================================================\n\nThe insilicolynxdqi software is covered by a BSD 3-clause license that is included in the LICENSE.txt file distributed with this software.\n\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nDescription\n=============================================================================================================================================================================================\n\nMedicinal Chemistry tool for calculating drug suitability parameters of compounds.\n\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPlatform and version\n=============================================================================================================================================================================================\n\nThe software named insilicolynxdqi has been tested for compatibility on the following systems:\n\n\tUbuntu 14.04 LTS system running Python 2.7.6\n\tUbuntu 14.04 LTS system running Python 3.4.3\n\tUbuntu 16.04 LTS system running Python 2.7.12\n\tUbuntu 16.04 LTS system running Python 3.5.2\n\tWindows 7 system running Python 3.6.0\n\nThe software named insilicolynxdqi should be compatible with Python 2.7(.z) and Python 3(.y.z) running on a Linux platform or a Win32 platform (where y and z are the version numbers of the \ndistribution).\n\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nTo install on a local computer\n=============================================================================================================================================================================================\n\n(1) Save the compressed source distribution file on to a local computer.\n\n(2) Installation from the compressed source distribution file using pip:\n\n\tWithin a new terminal (Linux) or a new Command Prompt (Win32), change the working directory to the directory containing the compressed source distribution file and type:\n\n\t\t>>> sudo pip install insilicolynxdqi-x.y.z.tar.gz (Linux)\n\n\tor\n\n\t\t>>> pip install insilicolynxdqi-x.y.z.zip (Win32)\n\n\twhere x, y and z are the version numbers of the distribution.\t\n\n\tNote, to uninstall:\n\n\t\t>>> sudo pip uninstall insilicolynxdqi (Linux)\n\n\tor\n\n\t\t>>> pip uninstall insilicolynxdqi (Win32)\n\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nUsing insilicolynxdqi within a Python script - generate in-vivo scenarios functionality\n=============================================================================================================================================================================================\n\nThe following code is needed for accessing the generate in-vivo scenarios functionality of insilicolynxdqi:\n\t\n\tfrom insilicolynxdqi.run.generate_in_vivo_scenarios import GenerateInVivoScenarios\n\tgenerateInVivoScenarios = GenerateInVivoScenarios()\n\t\t\t\t\n\tgenerateInVivoScenarios.run( args )\n\t\nThe possible arguments (i.e., args) for the generateInVivoScenarios.run() function include:\n\n\tdataFile (df):\n\n\t\tREQUIRED - full file name of the tab-delimited file containing the data set.  The following data column headers are required (note, the \"species\" text refers to dog, human or rat):\n\n\t\t\tname\n\t\t\tmol_wt\n\t\t\tcl_in_vivo_plasma_(species)\n\t\t\tcl_in_vivo_plasma_(species)_units\n\t\t\tv_steady_state_(species)\n\t\t\tv_steady_state_(species)_units\n\n\t\tFor calculation of free levels the additional data columns are also required:\n\n\t\t\tppb_(species)\n\t\t\tppb_(species)_units\n\n\t\tFor calculation based on oral dosing the additional data columns are also required:\n\n\t\t\tcharge_type\n\t\t\tpka_a1 (dependent on charge_type)\n\t\t\tpka_a2 (dependent on charge_type)\n\t\t\tpka_b1 (dependent on charge_type)\n\t\t\tpka_b2 (dependent on charge_type)\n\t\t\tcaco2_6p5_human\n\t\t\tcaco2_6p5_human_units\n\t\t\tsolubility_7p4\n\t\t\tsolubility_7p4_units\n\t\t\n\tspeciesName (sn):\n\n\t\tSpecies: d = dog, h = human, r = rat (default = h).\n\n\tmethod (m):\n\n\t\tMethod: 1 (po 1c total), 2 (po 1c free), 3 (po 2c total), 4 (po 2c free), 5 (iv 2c total), 6 (iv 2c free) (default = 1).\n\t\n\terrorScenarios (es):\n\n\t\tNumber of error scenarios to consider (default = 0, can not equal 1).\n\n\terrorParameters (ep):\n\n\t\tEnter the parameter abbreviation for error consideration (in vivo clearance (cl), volume of distribution at steady state (v), Caco2 Papp A to B at pH 6.5 (caco2), aqueous \n\t\tsolubility at pH 7.4 (solubility) and plasma protein binding (ppb)) e.g., cl v caco2 solubility ppb.  (Note, do not add speech marks.)\n\n\tmappingsFile (mf):\n\n\t\tFull file path of the file containing the column header mappings for the input data set.\n\n\trmsepFile (rf):\n\n\t\tFull file path of the file containing the rmsep values for the associated QSAR models.\n\n\tqsarDefaultRmsep (qdr):\n\n\t\tAssumed RMSEP for a QSAR model without an entry in the rmsep file.  The value reflects the RMSEP between predicted and observed values both on a logarithmic base-10 scale for \n\t\tcl_in_vivo_plasma_(species), v_steady_state_(species), caco2_6p5_human, solubility_7p4 and predicted and observed values both on a logarithmic base-10 percent bound over percent \n\t\tfree scale for ppb_(species) (default = 1.00).  (Note, the species text refers to dog, human or rat.)\n\n\tqsarExperimentalStandardDeviation (qesd):\n\n\t\tAssumed default experimental standard deviation associated to measured data.  For cl_in_vivo_plasma_(species), v_steady_state_(species), caco2_6p5_human and solubility_7p4 this \n\t\tvalue reflects a logarithmic base-10 scale, and for ppb_(species) this value reflects a logarithmic base-10 percent bound over percent free scale (default = 0.30).  (Note, the \n\t\tspecies text refers to dog, human or rat.)\n\n\tdefaultParameterStandardDeviation (dpsd):\n\n\t\tAssumed default parameter standard deviation to be used in the absence of a valid compound standard deviation value and/or a valid compound similarity score.  For \n\t\tcl_in_vivo_plasma_(species), v_steady_state_(species), caco2_6p5_human and solubility_7p4 this value reflects a logarithmic base-10 scale, and for ppb_(species) this value reflects \n\t\ta logarithmic base-10 percent bound over percent free scale (default = 0.30).  (Note, the species text refers to dog, human or rat.)\n\n\tnameSubstring (ns):\n\n\t\tThe substring appended to the name (followed by an integer) to indicate an error scenario row (default = _#).\n\t\n\tbyPass (bp):\n\t\t\n\t\tBypass the Python version and platform check: yes or no (default).\n\nOutput of generateInVivoScenarios.run( args ):\n\n\tdataFileNew:\n\n\t\tThe file path for the new data file generated by the library - permits joining with other functions within one Python script.\t\n\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nOutput - generate in-vivo scenarios functionality\n=============================================================================================================================================================================================\n\nA revised text file.\n\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nUsing insilicolynxdqi within a Python script - perform in-vivo calculations functionality\n=============================================================================================================================================================================================\n\nThe following code is needed for accessing the perform in-vivo calculations functionality of insilicolynxdqi:\n\t\n\tfrom insilicolynxdqi.run.perform_in_vivo_calculations import PerformInVivoCalculations\n\tperformInVivoCalculations = PerformInVivoCalculations()\n\t\t\t\t\n\tperformInVivoCalculations.run( args )\n\t\nThe possible arguments (i.e., args) for the performInVivoCalculations.run() function include:\n\n\tdataFile (df):\n\n\t\tREQUIRED - full file name of the tab-delimited file containing the data set (i.e., the output data file from insilicolynxdqi_generate_scenarios).  The following data column \n\t\theaders are required (note, the \"species\" text refers to dog, human or rat):\n\n\t\t\tname\n\t\t\tmol_wt\n\t\t\tcl_in_vivo_plasma_(species)\n\t\t\tcl_in_vivo_plasma_(species)_qualifier\n\t\t\tcl_in_vivo_plasma_(species)_units\n\t\t\tv_steady_state_(species)\n\t\t\tv_steady_state_(species)_qualifier\n\t\t\tv_steady_state_(species)_units\n\n\t\tFor calculation of free levels the additional data columns are also required:\n\n\t\t\tppb_(species)\n\t\t\tppb_(species)_qualifier\n\t\t\tppb_(species)_units\n\t\t\n\t\tFor calculation based on oral dosing the additional data columns are also required:\n\n\t\t\tcharge_type\n\t\t\tpka_a1 (dependent on charge_type)\n\t\t\tpka_a2 (dependent on charge_type)\n\t\t\tpka_b1 (dependent on charge_type)\n\t\t\tpka_b2 (dependent on charge_type)\n\t\t\tcaco2_6p5_human\n\t\t\tcaco2_6p5_human_qualifier\t\t\t\n\t\t\tcaco2_6p5_human_units\n\t\t\tsolubility_7p4\n\t\t\tsolubility_7p4_qualifier\n\t\t\tsolubility_7p4_units\n\n\tspeciesName (sn):\n\n\t\tSpecies: d = dog, h = human, r = rat (default = h).\n\n\tmethod (m):\n\n\t\tMethod: 1 (po 1c total), 2 (po 1c free), 3 (po 2c total), 4 (po 2c free), 5 (iv 2c total), 6 (iv 2c free) (default = 1).\n\n\tdoseInterval (di):\n\t\t\n\t\tDose interval (frequency), units: hours (default = 12.00).\n\n\tsimulationLength (sl):\n\n\t\tSimulation length, units = hours (default = 168.00).\n\n\tcompartment (c):\n\n\t\tCompartment to consider: c = central, p = peripheral, cp = central_peripheral or all (default = c).  (Note, not relevant for methods involving only one compartment.)\t\t\n\n\tname (n):\n\n\t\tName (of molecule) column header as it appears in the input data set (default = name).\n\n\tupperVcentralToVssRatio (uvr):\n\t\tUpper ratio for the volume of distribution in the central compartment to the volume of distribution at steady state (needs to be a number between 0.00 and less than 1.00) \n\t\t(default = 0.50).\n\n\tvterminalToVssRatioLower (vrl):\n\n\t\tTerminal volume of distribution to volume of distribution at steady state ratio lower limit (needs to be greater than or equal to 1.01) (default = 1.10).\n\n\tvterminalToVssRatioUpper (vru):\n\t\n\t\tTerminal volume of distribution to volume of distribution at steady state ratio upper limit (needs to be less than or equal to 7.00) (default = 2.00).\n\n\tdefaultIvDose (did):\n\n\t\tDefault dose to use with iv scenarios only, units: mg kg-1 (default = 1.00).\n\n\tabsorptionDelay (ad):\n\n\t\tAbsorption delay to use with po scenarios only, units: hours (default = -1.00 (and hard coded values used: dog = 0.50; human = 1.00; rat = 0.25)).\n\n\tintestinalTransitTime (itt):\n\n\t\tIntestinal transit time to use with po scenarios only, units: hours (default = -1.00 (and hard coded values used: dog = 2.00; human = 4.00; rat = 1.50)).\n\n\tsaveRawDataFiles (srdf):\n\t\t\n\t\tSave raw data files: yes (default) or no.\n\n\tbyPass (bp):\n\n\t\tBypass the Python version and platform check: yes or no (default).\n\nOutput of performInVivoCalculations.run( args ):\n\n\tdataFileNew:\n\n\t\tThe file path for the new data file generated by the library - permits joining with the insilicolynxdqi Python library within one Python script.\n\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nOutput - perform in-vivo calculations functionality\n=============================================================================================================================================================================================\n\nMultiple text files.\n\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nUsing insilicolynxdqi within a Python script - analyse in-vivo calculations functionality\n=============================================================================================================================================================================================\n\nThe following code is needed for accessing the analyse in-vivo calculations functionality of insilicolynxdqi:\n\t\n\tfrom insilicolynxdqi.run.analyse_in_vivo_calculations import AnalyseInVivoCalculations\n\tanalyseInVivoCalculations = AnalyseInVivoCalculations()\n\t\t\t\t\n\tanalyseInVivoCalculations.run( args )\n\t\nThe possible arguments (i.e., args)  for the analyseInVivoCalculations.run() function include:\n\n\tdataFile (df):\n\t\n\t\tREQUIRED - full file name of the tab-delimited file containing the data set (i.e., the output data file from insilicolynxdqi_perform_calculations) (enter file path prefix for \n\t\tmultiple scenarios e.g., ../../folder/data_).\n\n\tspeciesName (sn):\n\t\t\n\t\tSpecies: d = dog, h = human, r = rat (default = h).\n\n\tmethod (m):\n\t\n\t\tMethod: 1 (po 1c total), 2 (po 1c free), 3 (po 2c total), 4 (po 2c free), 5 (iv 2c total), 6 (iv 2c free) (default = 0, user must specify a method if full file path provided).\n\n\tnameSubstring (ns):\n\n\t\tThe substring appended to the name (followed by an integer) to indicate an error scenario row (default = _#).\n\n\tcompartment (c):\n\n\t\tCompartment to consider: c = central, p = peripheral, cp = central_peripheral or all (default = c).  (Note, not relevant for methods involving only one compartment.)\n\n\tremoveOutliers (ro):\n\t\tIf the number of available records permits, the number of outliers to remove - to use with po scenarios only.\n\n\tintervalLevelDistribution (ild):\n\n\t\tIf the number of available records permits, the (approximate) two-sided distribution interval level to calculate - accepted range : 70.00 percent to 100.00 percent \n\t\t(default = 80.00 percent).\n\n\tconfidenceMeanLevel (cml):\n\n\t\tIf the number of available records permits, the (approximate) two-sided confidence interval of the mean level to calculate - accepted range : 70.00 percent to 99.90 percent \n\t\t(default = 80.00 percent).  (Note, a minimum of four records is required to calculate the confidence intervals of the mean; and where the degrees of freedom is greater than 150 \n\t\tthe t-critical value is calculated for 150 degrees of freedom.)\n\n\tsmiles (s):\n\t\n\t\tIf applicable, smiles column header as it appears in the input data set (default = smiles).\n\n\tbyPass (bp):\n\n\t\tBypass the Python version and platform check: yes or no (default).\n\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nOutput - analyse in-vivo calculations functionality\n=============================================================================================================================================================================================\n\nMultiple text files.\n\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nFurther information\n=============================================================================================================================================================================================\n\nRefer to INSTRUCTIONS_FOR_USE.txt file included in the distribution (../insilicolynxdqi/docs/).\n\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nHelp\n=============================================================================================================================================================================================\n\nEmail: contact@insilicolynx.com\n\n\n=============================================================================================================================================================================================\n=============================================================================================================================================================================================", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.insilicolynx.com/", "keywords": "insilicolynxdqi", "license": "BSD 3-clause", "maintainer": "", "maintainer_email": "", "name": "insilicolynxdqi", "package_url": "https://pypi.org/project/insilicolynxdqi/", "platform": "Linux", "project_url": "https://pypi.org/project/insilicolynxdqi/", "project_urls": {"Homepage": "http://www.insilicolynx.com/"}, "release_url": "https://pypi.org/project/insilicolynxdqi/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Medicinal Chemistry tool for calculating drug suitability parameters of compounds.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>README file for insilicolynxdqi<br>=============================================================================================================================================================================================<br><br>---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Change log<br>=============================================================================================================================================================================================<br><br>17th November 2017: First release written by Mark Wenlock.<br><br><br>---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Copyright<br>=============================================================================================================================================================================================<br><br>Copyright 2017 InSilicoLynx Limited<br>All Rights Reserved.<br><br><br>---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Licence<br>=============================================================================================================================================================================================<br><br>The insilicolynxdqi software is covered by a BSD 3-clause license that is included in the LICENSE.txt file distributed with this software.<br><br><br>---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Description<br>=============================================================================================================================================================================================<br><br>Medicinal Chemistry tool for calculating drug suitability parameters of compounds.<br><br><br>---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Platform and version<br>=============================================================================================================================================================================================<br><br>The software named insilicolynxdqi has been tested for compatibility on the following systems:<br><br>\tUbuntu 14.04 LTS system running Python 2.7.6<br>\tUbuntu 14.04 LTS system running Python 3.4.3<br>\tUbuntu 16.04 LTS system running Python 2.7.12<br>\tUbuntu 16.04 LTS system running Python 3.5.2<br>\tWindows 7 system running Python 3.6.0<br><br>The software named insilicolynxdqi should be compatible with Python 2.7(.z) and Python 3(.y.z) running on a Linux platform or a Win32 platform (where y and z are the version numbers of the <br>distribution).<br><br><br>---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>To install on a local computer<br>=============================================================================================================================================================================================<br><br>(1) Save the compressed source distribution file on to a local computer.<br><br>(2) Installation from the compressed source distribution file using pip:<br><br>\tWithin a new terminal (Linux) or a new Command Prompt (Win32), change the working directory to the directory containing the compressed source distribution file and type:<br><br>\t\t&gt;&gt;&gt; sudo pip install insilicolynxdqi-x.y.z.tar.gz (Linux)<br><br>\tor<br><br>\t\t&gt;&gt;&gt; pip install insilicolynxdqi-x.y.z.zip (Win32)<br><br>\twhere x, y and z are the version numbers of the distribution.\t<br><br>\tNote, to uninstall:<br><br>\t\t&gt;&gt;&gt; sudo pip uninstall insilicolynxdqi (Linux)<br><br>\tor<br><br>\t\t&gt;&gt;&gt; pip uninstall insilicolynxdqi (Win32)<br><br><br>---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Using insilicolynxdqi within a Python script - generate in-vivo scenarios functionality<br>=============================================================================================================================================================================================<br><br>The following code is needed for accessing the generate in-vivo scenarios functionality of insilicolynxdqi:<br>\t<br>\tfrom insilicolynxdqi.run.generate_in_vivo_scenarios import GenerateInVivoScenarios<br>\tgenerateInVivoScenarios = GenerateInVivoScenarios()<br>\t\t\t\t<br>\tgenerateInVivoScenarios.run( args )<br>\t<br>The possible arguments (i.e., args) for the generateInVivoScenarios.run() function include:<br><br>\tdataFile (df):<br><br>\t\tREQUIRED - full file name of the tab-delimited file containing the data set.  The following data column headers are required (note, the \"species\" text refers to dog, human or rat):<br><br>\t\t\tname<br>\t\t\tmol_wt<br>\t\t\tcl_in_vivo_plasma_(species)<br>\t\t\tcl_in_vivo_plasma_(species)_units<br>\t\t\tv_steady_state_(species)<br>\t\t\tv_steady_state_(species)_units<br><br>\t\tFor calculation of free levels the additional data columns are also required:<br><br>\t\t\tppb_(species)<br>\t\t\tppb_(species)_units<br><br>\t\tFor calculation based on oral dosing the additional data columns are also required:<br><br>\t\t\tcharge_type<br>\t\t\tpka_a1 (dependent on charge_type)<br>\t\t\tpka_a2 (dependent on charge_type)<br>\t\t\tpka_b1 (dependent on charge_type)<br>\t\t\tpka_b2 (dependent on charge_type)<br>\t\t\tcaco2_6p5_human<br>\t\t\tcaco2_6p5_human_units<br>\t\t\tsolubility_7p4<br>\t\t\tsolubility_7p4_units<br>\t\t<br>\tspeciesName (sn):<br><br>\t\tSpecies: d = dog, h = human, r = rat (default = h).<br><br>\tmethod (m):<br><br>\t\tMethod: 1 (po 1c total), 2 (po 1c free), 3 (po 2c total), 4 (po 2c free), 5 (iv 2c total), 6 (iv 2c free) (default = 1).<br>\t<br>\terrorScenarios (es):<br><br>\t\tNumber of error scenarios to consider (default = 0, can not equal 1).<br><br>\terrorParameters (ep):<br><br>\t\tEnter the parameter abbreviation for error consideration (in vivo clearance (cl), volume of distribution at steady state (v), Caco2 Papp A to B at pH 6.5 (caco2), aqueous <br>\t\tsolubility at pH 7.4 (solubility) and plasma protein binding (ppb)) e.g., cl v caco2 solubility ppb.  (Note, do not add speech marks.)<br><br>\tmappingsFile (mf):<br><br>\t\tFull file path of the file containing the column header mappings for the input data set.<br><br>\trmsepFile (rf):<br><br>\t\tFull file path of the file containing the rmsep values for the associated QSAR models.<br><br>\tqsarDefaultRmsep (qdr):<br><br>\t\tAssumed RMSEP for a QSAR model without an entry in the rmsep file.  The value reflects the RMSEP between predicted and observed values both on a logarithmic base-10 scale for <br>\t\tcl_in_vivo_plasma_(species), v_steady_state_(species), caco2_6p5_human, solubility_7p4 and predicted and observed values both on a logarithmic base-10 percent bound over percent <br>\t\tfree scale for ppb_(species) (default = 1.00).  (Note, the species text refers to dog, human or rat.)<br><br>\tqsarExperimentalStandardDeviation (qesd):<br><br>\t\tAssumed default experimental standard deviation associated to measured data.  For cl_in_vivo_plasma_(species), v_steady_state_(species), caco2_6p5_human and solubility_7p4 this <br>\t\tvalue reflects a logarithmic base-10 scale, and for ppb_(species) this value reflects a logarithmic base-10 percent bound over percent free scale (default = 0.30).  (Note, the <br>\t\tspecies text refers to dog, human or rat.)<br><br>\tdefaultParameterStandardDeviation (dpsd):<br><br>\t\tAssumed default parameter standard deviation to be used in the absence of a valid compound standard deviation value and/or a valid compound similarity score.  For <br>\t\tcl_in_vivo_plasma_(species), v_steady_state_(species), caco2_6p5_human and solubility_7p4 this value reflects a logarithmic base-10 scale, and for ppb_(species) this value reflects <br>\t\ta logarithmic base-10 percent bound over percent free scale (default = 0.30).  (Note, the species text refers to dog, human or rat.)<br><br>\tnameSubstring (ns):<br><br>\t\tThe substring appended to the name (followed by an integer) to indicate an error scenario row (default = _#).<br>\t<br>\tbyPass (bp):<br>\t\t<br>\t\tBypass the Python version and platform check: yes or no (default).<br><br>Output of generateInVivoScenarios.run( args ):<br><br>\tdataFileNew:<br><br>\t\tThe file path for the new data file generated by the library - permits joining with other functions within one Python script.\t<br><br><br>---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Output - generate in-vivo scenarios functionality<br>=============================================================================================================================================================================================<br><br>A revised text file.<br><br><br>---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Using insilicolynxdqi within a Python script - perform in-vivo calculations functionality<br>=============================================================================================================================================================================================<br><br>The following code is needed for accessing the perform in-vivo calculations functionality of insilicolynxdqi:<br>\t<br>\tfrom insilicolynxdqi.run.perform_in_vivo_calculations import PerformInVivoCalculations<br>\tperformInVivoCalculations = PerformInVivoCalculations()<br>\t\t\t\t<br>\tperformInVivoCalculations.run( args )<br>\t<br>The possible arguments (i.e., args) for the performInVivoCalculations.run() function include:<br><br>\tdataFile (df):<br><br>\t\tREQUIRED - full file name of the tab-delimited file containing the data set (i.e., the output data file from insilicolynxdqi_generate_scenarios).  The following data column <br>\t\theaders are required (note, the \"species\" text refers to dog, human or rat):<br><br>\t\t\tname<br>\t\t\tmol_wt<br>\t\t\tcl_in_vivo_plasma_(species)<br>\t\t\tcl_in_vivo_plasma_(species)_qualifier<br>\t\t\tcl_in_vivo_plasma_(species)_units<br>\t\t\tv_steady_state_(species)<br>\t\t\tv_steady_state_(species)_qualifier<br>\t\t\tv_steady_state_(species)_units<br><br>\t\tFor calculation of free levels the additional data columns are also required:<br><br>\t\t\tppb_(species)<br>\t\t\tppb_(species)_qualifier<br>\t\t\tppb_(species)_units<br>\t\t<br>\t\tFor calculation based on oral dosing the additional data columns are also required:<br><br>\t\t\tcharge_type<br>\t\t\tpka_a1 (dependent on charge_type)<br>\t\t\tpka_a2 (dependent on charge_type)<br>\t\t\tpka_b1 (dependent on charge_type)<br>\t\t\tpka_b2 (dependent on charge_type)<br>\t\t\tcaco2_6p5_human<br>\t\t\tcaco2_6p5_human_qualifier\t\t\t<br>\t\t\tcaco2_6p5_human_units<br>\t\t\tsolubility_7p4<br>\t\t\tsolubility_7p4_qualifier<br>\t\t\tsolubility_7p4_units<br><br>\tspeciesName (sn):<br><br>\t\tSpecies: d = dog, h = human, r = rat (default = h).<br><br>\tmethod (m):<br><br>\t\tMethod: 1 (po 1c total), 2 (po 1c free), 3 (po 2c total), 4 (po 2c free), 5 (iv 2c total), 6 (iv 2c free) (default = 1).<br><br>\tdoseInterval (di):<br>\t\t<br>\t\tDose interval (frequency), units: hours (default = 12.00).<br><br>\tsimulationLength (sl):<br><br>\t\tSimulation length, units = hours (default = 168.00).<br><br>\tcompartment (c):<br><br>\t\tCompartment to consider: c = central, p = peripheral, cp = central_peripheral or all (default = c).  (Note, not relevant for methods involving only one compartment.)\t\t<br><br>\tname (n):<br><br>\t\tName (of molecule) column header as it appears in the input data set (default = name).<br><br>\tupperVcentralToVssRatio (uvr):<br>\t\tUpper ratio for the volume of distribution in the central compartment to the volume of distribution at steady state (needs to be a number between 0.00 and less than 1.00) <br>\t\t(default = 0.50).<br><br>\tvterminalToVssRatioLower (vrl):<br><br>\t\tTerminal volume of distribution to volume of distribution at steady state ratio lower limit (needs to be greater than or equal to 1.01) (default = 1.10).<br><br>\tvterminalToVssRatioUpper (vru):<br>\t<br>\t\tTerminal volume of distribution to volume of distribution at steady state ratio upper limit (needs to be less than or equal to 7.00) (default = 2.00).<br><br>\tdefaultIvDose (did):<br><br>\t\tDefault dose to use with iv scenarios only, units: mg kg-1 (default = 1.00).<br><br>\tabsorptionDelay (ad):<br><br>\t\tAbsorption delay to use with po scenarios only, units: hours (default = -1.00 (and hard coded values used: dog = 0.50; human = 1.00; rat = 0.25)).<br><br>\tintestinalTransitTime (itt):<br><br>\t\tIntestinal transit time to use with po scenarios only, units: hours (default = -1.00 (and hard coded values used: dog = 2.00; human = 4.00; rat = 1.50)).<br><br>\tsaveRawDataFiles (srdf):<br>\t\t<br>\t\tSave raw data files: yes (default) or no.<br><br>\tbyPass (bp):<br><br>\t\tBypass the Python version and platform check: yes or no (default).<br><br>Output of performInVivoCalculations.run( args ):<br><br>\tdataFileNew:<br><br>\t\tThe file path for the new data file generated by the library - permits joining with the insilicolynxdqi Python library within one Python script.<br><br><br>---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Output - perform in-vivo calculations functionality<br>=============================================================================================================================================================================================<br><br>Multiple text files.<br><br><br>---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Using insilicolynxdqi within a Python script - analyse in-vivo calculations functionality<br>=============================================================================================================================================================================================<br><br>The following code is needed for accessing the analyse in-vivo calculations functionality of insilicolynxdqi:<br>\t<br>\tfrom insilicolynxdqi.run.analyse_in_vivo_calculations import AnalyseInVivoCalculations<br>\tanalyseInVivoCalculations = AnalyseInVivoCalculations()<br>\t\t\t\t<br>\tanalyseInVivoCalculations.run( args )<br>\t<br>The possible arguments (i.e., args)  for the analyseInVivoCalculations.run() function include:<br><br>\tdataFile (df):<br>\t<br>\t\tREQUIRED - full file name of the tab-delimited file containing the data set (i.e., the output data file from insilicolynxdqi_perform_calculations) (enter file path prefix for <br>\t\tmultiple scenarios e.g., ../../folder/data_).<br><br>\tspeciesName (sn):<br>\t\t<br>\t\tSpecies: d = dog, h = human, r = rat (default = h).<br><br>\tmethod (m):<br>\t<br>\t\tMethod: 1 (po 1c total), 2 (po 1c free), 3 (po 2c total), 4 (po 2c free), 5 (iv 2c total), 6 (iv 2c free) (default = 0, user must specify a method if full file path provided).<br><br>\tnameSubstring (ns):<br><br>\t\tThe substring appended to the name (followed by an integer) to indicate an error scenario row (default = _#).<br><br>\tcompartment (c):<br><br>\t\tCompartment to consider: c = central, p = peripheral, cp = central_peripheral or all (default = c).  (Note, not relevant for methods involving only one compartment.)<br><br>\tremoveOutliers (ro):<br>\t\tIf the number of available records permits, the number of outliers to remove - to use with po scenarios only.<br><br>\tintervalLevelDistribution (ild):<br><br>\t\tIf the number of available records permits, the (approximate) two-sided distribution interval level to calculate - accepted range : 70.00 percent to 100.00 percent <br>\t\t(default = 80.00 percent).<br><br>\tconfidenceMeanLevel (cml):<br><br>\t\tIf the number of available records permits, the (approximate) two-sided confidence interval of the mean level to calculate - accepted range : 70.00 percent to 99.90 percent <br>\t\t(default = 80.00 percent).  (Note, a minimum of four records is required to calculate the confidence intervals of the mean; and where the degrees of freedom is greater than 150 <br>\t\tthe t-critical value is calculated for 150 degrees of freedom.)<br><br>\tsmiles (s):<br>\t<br>\t\tIf applicable, smiles column header as it appears in the input data set (default = smiles).<br><br>\tbyPass (bp):<br><br>\t\tBypass the Python version and platform check: yes or no (default).<br><br><br>---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Output - analyse in-vivo calculations functionality<br>=============================================================================================================================================================================================<br><br>Multiple text files.<br><br><br>---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Further information<br>=============================================================================================================================================================================================<br><br>Refer to INSTRUCTIONS_FOR_USE.txt file included in the distribution (../insilicolynxdqi/docs/).<br><br><br>---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br>Help<br>=============================================================================================================================================================================================<br><br>Email: contact@insilicolynx.com<br><br><br>=============================================================================================================================================================================================<br>=============================================================================================================================================================================================\n          </div>"}, "last_serial": 3341154, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e8442e04cc337449186a7edd308deb72", "sha256": "afb4e05acea6927c61d50447c56ecb31bc96c2715e4290e6b9a9e7fe42cb422b"}, "downloads": -1, "filename": "insilicolynxdqi-1.0.0.tar.gz", "has_sig": true, "md5_digest": "e8442e04cc337449186a7edd308deb72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102596, "upload_time": "2017-11-17T12:12:58", "upload_time_iso_8601": "2017-11-17T12:12:58.715873Z", "url": "https://files.pythonhosted.org/packages/29/bf/7d2a45b17cc56be99d3fd13e4a63d8e6eba6afe2bcb5b9fb00e618dd1f80/insilicolynxdqi-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e8442e04cc337449186a7edd308deb72", "sha256": "afb4e05acea6927c61d50447c56ecb31bc96c2715e4290e6b9a9e7fe42cb422b"}, "downloads": -1, "filename": "insilicolynxdqi-1.0.0.tar.gz", "has_sig": true, "md5_digest": "e8442e04cc337449186a7edd308deb72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102596, "upload_time": "2017-11-17T12:12:58", "upload_time_iso_8601": "2017-11-17T12:12:58.715873Z", "url": "https://files.pythonhosted.org/packages/29/bf/7d2a45b17cc56be99d3fd13e4a63d8e6eba6afe2bcb5b9fb00e618dd1f80/insilicolynxdqi-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:48 2020"}