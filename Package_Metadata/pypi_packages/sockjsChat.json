{"info": {"author": "Anirban Roy Das", "author_email": "anirban.nick@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: CPython"], "description": "========================\nsockjsChat\n========================\n\nA sockJS based Chat-Server/Chat-System primary using the SockJS protocol.\n\n-------\nDetails\n-------\n\n:Author: Anirban Roy Das\n:Email: anirban.nick@gmail.com\n:Copyright(C): 2016, Anirban Roy Das <anirban.nick@gmail.com>\n\nCheck sockjsChat/LICENSE file for full Copyright notice.\n\n--------\nOverview\n--------\n\nsockjsChat is a very basic Chat Server which can be set up locally to chat in your LAN. It supports both **Public Chat** among all participants connected simultaneously at a particulartime and also **Private Chat** between those individual participants.\n\nIt uses the **sockjs** protocol to implement the real time message passing system. **SockJS** is implemented in many languages, primarily javascript to talk to servers in real time using its protocol, which tries to create a duplex bi-directional connectin between the **Client(browser)** and the **Server**. The server should also implement the **sockjs** protocol. Thus, using the **sockjs-tornado** library which exposes the **sockjs** protocol in **tornado** server.  It first tries to create a **Websocket**  connection, and if it fails then it fallbacks to other transport mechanisms, such as **ajax**, **long polling**, etc.\n\nYou can read more about **sockjs** `here <https://github.com/sockjs/sockjs-client>`_\n\n---------------\nTechnical Specs\n---------------\n\n:sockjs-client:  Advance Websocket Javascript Client\n:Tornado: async python web server\n:sockjs-tornado: sockjs websocket server implementation for Tornado\n\n\n         \n------------\nInstallation\n------------\n\n\nPrerequisites\n`````````````\n\n1. python 2.7+\n2. tornado\n3. sockjs-tornado\n4. sockjs-client\n\n\nInstall\n```````\n\n::\n        \n        pip install sockjsChat\n\nIf the above dependencies do not get installed by the above command, then use the below steps to install them one by one.\n\n **Step 1 - Install pip**\n \n Follow the below methods for installing pip. One of them may help you to install pip in your system.\n\n * **Method 1 -**  https://pip.pypa.io/en/stable/installing/\n * **Method 2 -** http://ask.xmodulo.com/install-pip-linux.html\n * **Method 3 -** If you installed python on MAC OS X via ``brew install python``, then pip is already installed along with python.\n\n\n **Step 2 - Install tornado**\n ::\n\n        pip install tornado \n        \n\n **Step 3 - Install sockjs-tornado**\n ::\n\n        pip install sockjs-tornado\n \n------        \nUsage\n------\n\nAfter having installed sockjsChat, just run the following command to use it :\n\n* **Start Server**\n  ::\n          \n          $ sockjsChat [options]\n\n\n\n* **Options**\n  \n  :--port: Port number where the chat server will start\n\n* **Example**\n  ::\n\n          $ sockjsChat --port=8765\n\n\n* **Stop Server**\n  \n  Click ``Ctrl+C`` to stop the server.\n\n\n----\nTODO\n----\n\n1. Add Private Chat functionality.\n2. Manage Presence Management, sent, delivered acknowledgements.\n3. Message Persistence and delivery of messages to offline clients.\n4. Add Blog post regarding this topic.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/anirbanroydas/sockjsChat", "keywords": "chat server sockjs websocket tornado", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sockjsChat", "package_url": "https://pypi.org/project/sockjsChat/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/sockjsChat/", "project_urls": {"Homepage": "https://github.com/anirbanroydas/sockjsChat"}, "release_url": "https://pypi.org/project/sockjsChat/1.1.0/", "requires_dist": ["setuptools (>=0.7.0)", "sockjs-tornado", "tornado (>=2.2.1)"], "requires_python": "", "summary": "A Chat Server based on sockjs, websocket and tornado", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A sockJS based Chat-Server/Chat-System primary using the SockJS protocol.</p>\n<div id=\"details\">\n<h2>Details</h2>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th><td>Anirban Roy Das</td>\n</tr>\n<tr><th>Email:</th><td><a href=\"mailto:anirban.nick%40gmail.com\">anirban<span>.</span>nick<span>@</span>gmail<span>.</span>com</a></td>\n</tr>\n<tr><th>Copyright(C):</th><td>2016, Anirban Roy Das &lt;<a href=\"mailto:anirban.nick%40gmail.com\">anirban<span>.</span>nick<span>@</span>gmail<span>.</span>com</a>&gt;</td>\n</tr>\n</tbody>\n</table>\n<p>Check sockjsChat/LICENSE file for full Copyright notice.</p>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>sockjsChat is a very basic Chat Server which can be set up locally to chat in your LAN. It supports both <strong>Public Chat</strong> among all participants connected simultaneously at a particulartime and also <strong>Private Chat</strong> between those individual participants.</p>\n<p>It uses the <strong>sockjs</strong> protocol to implement the real time message passing system. <strong>SockJS</strong> is implemented in many languages, primarily javascript to talk to servers in real time using its protocol, which tries to create a duplex bi-directional connectin between the <strong>Client(browser)</strong> and the <strong>Server</strong>. The server should also implement the <strong>sockjs</strong> protocol. Thus, using the <strong>sockjs-tornado</strong> library which exposes the <strong>sockjs</strong> protocol in <strong>tornado</strong> server.  It first tries to create a <strong>Websocket</strong>  connection, and if it fails then it fallbacks to other transport mechanisms, such as <strong>ajax</strong>, <strong>long polling</strong>, etc.</p>\n<p>You can read more about <strong>sockjs</strong> <a href=\"https://github.com/sockjs/sockjs-client\" rel=\"nofollow\">here</a></p>\n</div>\n<div id=\"technical-specs\">\n<h2>Technical Specs</h2>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>sockjs-client:</th><td>Advance Websocket Javascript Client</td>\n</tr>\n<tr><th>Tornado:</th><td>async python web server</td>\n</tr>\n<tr><th>sockjs-tornado:</th><td>sockjs websocket server implementation for Tornado</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"prerequisites\">\n<h3>Prerequisites</h3>\n<ol>\n<li>python 2.7+</li>\n<li>tornado</li>\n<li>sockjs-tornado</li>\n<li>sockjs-client</li>\n</ol>\n</div>\n<div id=\"install\">\n<h3>Install</h3>\n<pre>pip install sockjsChat\n</pre>\n<p>If the above dependencies do not get installed by the above command, then use the below steps to install them one by one.</p>\n<blockquote>\n<p><strong>Step 1 - Install pip</strong></p>\n<p>Follow the below methods for installing pip. One of them may help you to install pip in your system.</p>\n<ul>\n<li><strong>Method 1 -</strong>  <a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\">https://pip.pypa.io/en/stable/installing/</a></li>\n<li><strong>Method 2 -</strong> <a href=\"http://ask.xmodulo.com/install-pip-linux.html\" rel=\"nofollow\">http://ask.xmodulo.com/install-pip-linux.html</a></li>\n<li><strong>Method 3 -</strong> If you installed python on MAC OS X via <tt>brew install python</tt>, then pip is already installed along with python.</li>\n</ul>\n<p><strong>Step 2 - Install tornado</strong></p>\n<pre>pip install tornado\n</pre>\n<p><strong>Step 3 - Install sockjs-tornado</strong></p>\n<pre>pip install sockjs-tornado\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>After having installed sockjsChat, just run the following command to use it :</p>\n<ul>\n<li><p><strong>Start Server</strong></p>\n<pre>$ sockjsChat [options]\n</pre>\n</li>\n<li><p><strong>Options</strong></p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>\u2013port:</th><td>Port number where the chat server will start</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li><p><strong>Example</strong></p>\n<pre>$ sockjsChat --port=8765\n</pre>\n</li>\n<li><p><strong>Stop Server</strong></p>\n<p>Click <tt>Ctrl+C</tt> to stop the server.</p>\n</li>\n</ul>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ol>\n<li>Add Private Chat functionality.</li>\n<li>Manage Presence Management, sent, delivered acknowledgements.</li>\n<li>Message Persistence and delivery of messages to offline clients.</li>\n<li>Add Blog post regarding this topic.</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 2105325, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "643777ad2e9437c33e2cf066547b0be0", "sha256": "8778fe140f81528b661d268f5d78326e766cfa8ffaefed489711193a09bf1afb"}, "downloads": -1, "filename": "sockjsChat-1.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "643777ad2e9437c33e2cf066547b0be0", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 28529, "upload_time": "2016-05-08T18:19:11", "upload_time_iso_8601": "2016-05-08T18:19:11.292307Z", "url": "https://files.pythonhosted.org/packages/a3/fa/041aa0759a4887bf4d59143648eb715725c9a68137d708447d17599f3333/sockjsChat-1.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1473618366dda1178af9997673b7f62", "sha256": "adaf649ad3ef6e83509e5abc584d8db7a559e3a89ae5d1aae7133bc3eee29c7e"}, "downloads": -1, "filename": "sockjsChat-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c1473618366dda1178af9997673b7f62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26294, "upload_time": "2016-05-08T18:19:18", "upload_time_iso_8601": "2016-05-08T18:19:18.823853Z", "url": "https://files.pythonhosted.org/packages/00/a9/98b82e23bf2a55a577ae888123a8754713f3ea61592cf20317af6d3437c2/sockjsChat-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "643777ad2e9437c33e2cf066547b0be0", "sha256": "8778fe140f81528b661d268f5d78326e766cfa8ffaefed489711193a09bf1afb"}, "downloads": -1, "filename": "sockjsChat-1.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "643777ad2e9437c33e2cf066547b0be0", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 28529, "upload_time": "2016-05-08T18:19:11", "upload_time_iso_8601": "2016-05-08T18:19:11.292307Z", "url": "https://files.pythonhosted.org/packages/a3/fa/041aa0759a4887bf4d59143648eb715725c9a68137d708447d17599f3333/sockjsChat-1.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1473618366dda1178af9997673b7f62", "sha256": "adaf649ad3ef6e83509e5abc584d8db7a559e3a89ae5d1aae7133bc3eee29c7e"}, "downloads": -1, "filename": "sockjsChat-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c1473618366dda1178af9997673b7f62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26294, "upload_time": "2016-05-08T18:19:18", "upload_time_iso_8601": "2016-05-08T18:19:18.823853Z", "url": "https://files.pythonhosted.org/packages/00/a9/98b82e23bf2a55a577ae888123a8754713f3ea61592cf20317af6d3437c2/sockjsChat-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:59 2020"}