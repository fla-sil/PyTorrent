{"info": {"author": "Benjamin Russell", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# hmmviz\nA package for visualizing state transition graphs from hidden Markov models or other models.\n\nThis package is meant to serve as an out-of-the-box means of plotting small graphs (less than 10 nodes) in a customizable way.\n\n## Installation\nDeveloped with Python 3.6\n\n    pip install hmmviz\n\n## Usage\nEach graph object takes a pandas DataFrame with states indices and columns and transition probabilities (from index to column). However, these can be instantiated using different data structures such as numpy arrays, networkx graphs, etc. (**help needed**) via the appropriate class methods.\nas values.\n\n### Plotting a Transition Matrix from a Markov Process\n```python\nfrom hmmviz import TransGraph\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nsequence = ['sunny', 'sunny', 'rainy', 'rainy', 'sunny', 'sunny', 'sunny', 'rainy']\n\nT = pd.crosstab(\n    pd.Series(sequence[:-1], name='Today'),\n    pd.Series(sequence[1:], name='Tomorrow'),\n    normalize=0\n)\n# Tomorrow  rainy  sunny\n# Today                 \n# rainy       0.5    0.5\n# sunny       0.4    0.6\n\ngraph = TransGraph(T)\n\n# looks best on square figures/axes\nfig = plt.figure(figsize=(6, 6))\n\ngraph.draw()\n\nplt.show()\n```\n\nThis will make an all black graph with labels on the nodes but none on the edges.\n\n<img src=\"https://raw.githubusercontent.com/benrussell80/hmmviz/master/images/basic_graph.png\" width=\"480\">\n\nIf we want to make the graph more colorful and informative we can pass some parameters into the graph's draw method.\n\n```python\n# same T as before\ngraph = TransGraph(T)\n\nfig = plt.figure(figsize=(6, 6))\n\nnodelabels = {'sunny':  '\u2601\u2600', 'rainy': '\ud83d\ude0a\u2602'}\ncolors = {'sunny': 'orange', 'rainy': 'blue'}\n\ngraph.draw(\n    nodelabels=nodelabels, nodecolors=colors, edgecolors=colors, edgelabels=True,\n    nodefontsize=16,\n)\n\nplt.show()\n```\n\n<img src=\"https://raw.githubusercontent.com/benrussell80/hmmviz/master/images/colorful_graph.png\" width=\"480\">\n\nhmmviz really shines for graphs with 4 or 5 nodes. For larger graphs consider using a package like nxviz.\n\n```python\nimport numpy as np\n\narr = np.ones((4, 4)) * 0.25\n\nlabels = ['s0', 's1', 's2', 's3']\n\ngraph = TransGraph.from_array(arr, labels)\n\ncolors = {f's{i}': f'C{i}' for i in range(4)}\n\nplt.figure(figsize=(6, 6))\n\ngraph.draw(edgecolors=colors, nodecolors=colors, nodelabels=False, edgewidths=2)\n\nplt.show()\n```\n\n<img src=\"https://raw.githubusercontent.com/benrussell80/hmmviz/master/images/four_node_graph.png\" width=\"480\">\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/benrussell80/hmmviz", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "hmmviz", "package_url": "https://pypi.org/project/hmmviz/", "platform": "", "project_url": "https://pypi.org/project/hmmviz/", "project_urls": {"Homepage": "https://github.com/benrussell80/hmmviz"}, "release_url": "https://pypi.org/project/hmmviz/0.0.7/", "requires_dist": ["hmmlearn (>=0.2)", "matplotlib (>=3.1.0)", "numpy (>=1.16)", "pandas (>=0.24.2)"], "requires_python": ">=3.6", "summary": "A package for visualizing state transition graphs from hidden Markov models or other models.", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>hmmviz</h1>\n<p>A package for visualizing state transition graphs from hidden Markov models or other models.</p>\n<p>This package is meant to serve as an out-of-the-box means of plotting small graphs (less than 10 nodes) in a customizable way.</p>\n<h2>Installation</h2>\n<p>Developed with Python 3.6</p>\n<pre><code>pip install hmmviz\n</code></pre>\n<h2>Usage</h2>\n<p>Each graph object takes a pandas DataFrame with states indices and columns and transition probabilities (from index to column). However, these can be instantiated using different data structures such as numpy arrays, networkx graphs, etc. (<strong>help needed</strong>) via the appropriate class methods.\nas values.</p>\n<h3>Plotting a Transition Matrix from a Markov Process</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hmmviz</span> <span class=\"kn\">import</span> <span class=\"n\">TransGraph</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"n\">sequence</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'sunny'</span><span class=\"p\">,</span> <span class=\"s1\">'sunny'</span><span class=\"p\">,</span> <span class=\"s1\">'rainy'</span><span class=\"p\">,</span> <span class=\"s1\">'rainy'</span><span class=\"p\">,</span> <span class=\"s1\">'sunny'</span><span class=\"p\">,</span> <span class=\"s1\">'sunny'</span><span class=\"p\">,</span> <span class=\"s1\">'sunny'</span><span class=\"p\">,</span> <span class=\"s1\">'rainy'</span><span class=\"p\">]</span>\n\n<span class=\"n\">T</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">crosstab</span><span class=\"p\">(</span>\n    <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">(</span><span class=\"n\">sequence</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Today'</span><span class=\"p\">),</span>\n    <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">(</span><span class=\"n\">sequence</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:],</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Tomorrow'</span><span class=\"p\">),</span>\n    <span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># Tomorrow  rainy  sunny</span>\n<span class=\"c1\"># Today                 </span>\n<span class=\"c1\"># rainy       0.5    0.5</span>\n<span class=\"c1\"># sunny       0.4    0.6</span>\n\n<span class=\"n\">graph</span> <span class=\"o\">=</span> <span class=\"n\">TransGraph</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># looks best on square figures/axes</span>\n<span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">))</span>\n\n<span class=\"n\">graph</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">()</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p>This will make an all black graph with labels on the nodes but none on the edges.</p>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/994eeda08998f5252e805f0832c017c7d91c61a6/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f62656e72757373656c6c38302f686d6d76697a2f6d61737465722f696d616765732f62617369635f67726170682e706e67\" width=\"480\">\n<p>If we want to make the graph more colorful and informative we can pass some parameters into the graph's draw method.</p>\n<pre><span class=\"c1\"># same T as before</span>\n<span class=\"n\">graph</span> <span class=\"o\">=</span> <span class=\"n\">TransGraph</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">)</span>\n\n<span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">))</span>\n\n<span class=\"n\">nodelabels</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'sunny'</span><span class=\"p\">:</span>  <span class=\"s1\">'\u2601\u2600'</span><span class=\"p\">,</span> <span class=\"s1\">'rainy'</span><span class=\"p\">:</span> <span class=\"s1\">'\ud83d\ude0a\u2602'</span><span class=\"p\">}</span>\n<span class=\"n\">colors</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'sunny'</span><span class=\"p\">:</span> <span class=\"s1\">'orange'</span><span class=\"p\">,</span> <span class=\"s1\">'rainy'</span><span class=\"p\">:</span> <span class=\"s1\">'blue'</span><span class=\"p\">}</span>\n\n<span class=\"n\">graph</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">(</span>\n    <span class=\"n\">nodelabels</span><span class=\"o\">=</span><span class=\"n\">nodelabels</span><span class=\"p\">,</span> <span class=\"n\">nodecolors</span><span class=\"o\">=</span><span class=\"n\">colors</span><span class=\"p\">,</span> <span class=\"n\">edgecolors</span><span class=\"o\">=</span><span class=\"n\">colors</span><span class=\"p\">,</span> <span class=\"n\">edgelabels</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">nodefontsize</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/589ddb7540f4c029244dd196623d9f3e1522bdc5/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f62656e72757373656c6c38302f686d6d76697a2f6d61737465722f696d616765732f636f6c6f7266756c5f67726170682e706e67\" width=\"480\">\n<p>hmmviz really shines for graphs with 4 or 5 nodes. For larger graphs consider using a package like nxviz.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">((</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span> <span class=\"o\">*</span> <span class=\"mf\">0.25</span>\n\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'s0'</span><span class=\"p\">,</span> <span class=\"s1\">'s1'</span><span class=\"p\">,</span> <span class=\"s1\">'s2'</span><span class=\"p\">,</span> <span class=\"s1\">'s3'</span><span class=\"p\">]</span>\n\n<span class=\"n\">graph</span> <span class=\"o\">=</span> <span class=\"n\">TransGraph</span><span class=\"o\">.</span><span class=\"n\">from_array</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">)</span>\n\n<span class=\"n\">colors</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"sa\">f</span><span class=\"s1\">'s</span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">:</span> <span class=\"sa\">f</span><span class=\"s1\">'C</span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s1\">'</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)}</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">))</span>\n\n<span class=\"n\">graph</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">(</span><span class=\"n\">edgecolors</span><span class=\"o\">=</span><span class=\"n\">colors</span><span class=\"p\">,</span> <span class=\"n\">nodecolors</span><span class=\"o\">=</span><span class=\"n\">colors</span><span class=\"p\">,</span> <span class=\"n\">nodelabels</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">edgewidths</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/beac9cb2eadfacff7d37e466f44f31abbfd29801/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f62656e72757373656c6c38302f686d6d76697a2f6d61737465722f696d616765732f666f75725f6e6f64655f67726170682e706e67\" width=\"480\">\n\n          </div>"}, "last_serial": 6374515, "releases": {"0.0.6": [{"comment_text": "", "digests": {"md5": "3d67745a11edb03cbeb80918d38217bc", "sha256": "58da9718a9450d12f2e9e54803ea3ff40ddd8b3416f1e440411a8d970af6b1c2"}, "downloads": -1, "filename": "hmmviz-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "3d67745a11edb03cbeb80918d38217bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4712, "upload_time": "2019-09-23T01:17:36", "upload_time_iso_8601": "2019-09-23T01:17:36.360608Z", "url": "https://files.pythonhosted.org/packages/5d/49/1295ad5baecbe9a39a68424d266f55a8d24ffde53f7a10691ba146ad66c3/hmmviz-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fbf8a97f7b3d6004049a30a85be902c1", "sha256": "e712455c25ef477f30a5b97ae732e18f53ae64a56dabe215d76597a248ff2e08"}, "downloads": -1, "filename": "hmmviz-0.0.6.tar.gz", "has_sig": false, "md5_digest": "fbf8a97f7b3d6004049a30a85be902c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3584, "upload_time": "2019-09-23T01:17:38", "upload_time_iso_8601": "2019-09-23T01:17:38.246562Z", "url": "https://files.pythonhosted.org/packages/7b/e0/3b2b23ef554093e3f20f770d3de2379690d64d9e929d405a51a4c5c477e9/hmmviz-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "7040d129ebd22e8556538004317b6c72", "sha256": "20ffc9f98258377d1a8c5fc39cd65b81759a29ed60bc25fdfc44a2942d53bbf0"}, "downloads": -1, "filename": "hmmviz-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "7040d129ebd22e8556538004317b6c72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6076, "upload_time": "2019-12-30T08:56:46", "upload_time_iso_8601": "2019-12-30T08:56:46.635832Z", "url": "https://files.pythonhosted.org/packages/1b/fc/53fd497a3f68911f44fc88844efa96bbb7b55c8777e702109dd369909fc2/hmmviz-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2dfcad361b9f0232633530a440104609", "sha256": "412956b5f4838aa6d1fb8ed250e1c2e7029950b14ff44614c287d5de6ee0fdf0"}, "downloads": -1, "filename": "hmmviz-0.0.7.tar.gz", "has_sig": false, "md5_digest": "2dfcad361b9f0232633530a440104609", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5377, "upload_time": "2019-12-30T08:56:48", "upload_time_iso_8601": "2019-12-30T08:56:48.459906Z", "url": "https://files.pythonhosted.org/packages/cb/fa/ef2229eb2c6c1d80a2e4ceae33c1dceb7ebcfa03ba323e0c47c9c8ac32c7/hmmviz-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7040d129ebd22e8556538004317b6c72", "sha256": "20ffc9f98258377d1a8c5fc39cd65b81759a29ed60bc25fdfc44a2942d53bbf0"}, "downloads": -1, "filename": "hmmviz-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "7040d129ebd22e8556538004317b6c72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6076, "upload_time": "2019-12-30T08:56:46", "upload_time_iso_8601": "2019-12-30T08:56:46.635832Z", "url": "https://files.pythonhosted.org/packages/1b/fc/53fd497a3f68911f44fc88844efa96bbb7b55c8777e702109dd369909fc2/hmmviz-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2dfcad361b9f0232633530a440104609", "sha256": "412956b5f4838aa6d1fb8ed250e1c2e7029950b14ff44614c287d5de6ee0fdf0"}, "downloads": -1, "filename": "hmmviz-0.0.7.tar.gz", "has_sig": false, "md5_digest": "2dfcad361b9f0232633530a440104609", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5377, "upload_time": "2019-12-30T08:56:48", "upload_time_iso_8601": "2019-12-30T08:56:48.459906Z", "url": "https://files.pythonhosted.org/packages/cb/fa/ef2229eb2c6c1d80a2e4ceae33c1dceb7ebcfa03ba323e0c47c9c8ac32c7/hmmviz-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:55 2020"}