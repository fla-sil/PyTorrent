{"info": {"author": "Lucas Simon Rodrigues Magalhaes", "author_email": "lucassrod@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# Django BR Locations\n\n## Overview\n\nThis app do a reusable model and admin of CRUD cities and address of\nBrazil\n\nImage 1\n\nImage 2\n\nIt has a two models abstracts in file `mixins.py` that will be used in your custom model if necessary\n\nSo you can build a custom City and Address Model extend of others Mixins and register it\nin admin.\n\n```\nfrom django_br_address.mixins import CityMixin, AddressMixin\n\n# models.py\n\nclass CustomCity(CityMixin, Mixin2, Mixin3)\n    pass\n\n# admin.py\nfrom django_br_address.admin import CityAdmin\nfrom customapp.model import CustomCity\n\nadmin.site.unregister(CityAdmin)\nadmin.site.register(CustomCity)\n```\n\n\n## How to install\n\n`pip install django-br-addresses`\n\n## How to use\n\nPut the app in settings installed apps.\n\n```\nINSTALLED APPS = [\n    'django-br-address'\n]\n```\n\n### To use in django<1.7\n\n```\nSOUTH_MIGRATION_MODULES = {\n    'django-br-addresses.br_addresses': 'django-br-addresses.br_addresses.south_migrations',\n}\n\n```\n\n\n## Running tests\n\nInstall the requirements in tests directory\n\n`pip install -r requirements.txt`\n\nGo to a tests directory and run the command below\n\n```\npython manage.py runstests.py\n```\n\n\n\n## Todo\n\n1 - Do a geospatial localization of address with latitude and longitude", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "django-br-addresses", "package_url": "https://pypi.org/project/django-br-addresses/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-br-addresses/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/django-br-addresses/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "A simple Django app to provide a CRUD of cities and address.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Django BR Locations<br><br>## Overview<br><br>This app do a reusable model and admin of CRUD cities and address of<br>Brazil<br><br>Image 1<br><br>Image 2<br><br>It has a two models abstracts in file `mixins.py` that will be used in your custom model if necessary<br><br>So you can build a custom City and Address Model extend of others Mixins and register it<br>in admin.<br><br>```<br>from django_br_address.mixins import CityMixin, AddressMixin<br><br># models.py<br><br>class CustomCity(CityMixin, Mixin2, Mixin3)<br>    pass<br><br># admin.py<br>from django_br_address.admin import CityAdmin<br>from customapp.model import CustomCity<br><br>admin.site.unregister(CityAdmin)<br>admin.site.register(CustomCity)<br>```<br><br><br>## How to install<br><br>`pip install django-br-addresses`<br><br>## How to use<br><br>Put the app in settings installed apps.<br><br>```<br>INSTALLED APPS = [<br>    'django-br-address'<br>]<br>```<br><br>### To use in django&lt;1.7<br><br>```<br>SOUTH_MIGRATION_MODULES = {<br>    'django-br-addresses.br_addresses': 'django-br-addresses.br_addresses.south_migrations',<br>}<br><br>```<br><br><br>## Running tests<br><br>Install the requirements in tests directory<br><br>`pip install -r requirements.txt`<br><br>Go to a tests directory and run the command below<br><br>```<br>python manage.py runstests.py<br>```<br><br><br><br>## Todo<br><br>1 - Do a geospatial localization of address with latitude and longitude\n          </div>"}, "last_serial": 1336480, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "0f72d7ad93a254d7384386bffe7711cb", "sha256": "79564fb66962b6b949afe5b36c564918fefe26310cd4b4bf6c6ee4fea7bef037"}, "downloads": -1, "filename": "django-br-addresses-0.1.tar.gz", "has_sig": false, "md5_digest": "0f72d7ad93a254d7384386bffe7711cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9374, "upload_time": "2014-12-09T00:28:28", "upload_time_iso_8601": "2014-12-09T00:28:28.615540Z", "url": "https://files.pythonhosted.org/packages/e0/76/d78137a7aaf38484423059bcf9933e97782181138b6e0d282bf8dd854736/django-br-addresses-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "11142c6461622adf00cb83a52e87b3cc", "sha256": "8f651362f3b0dd55847a62136846a5a48c7099816253662bf101716c67402c1a"}, "downloads": -1, "filename": "django-br-addresses-0.1.1.tar.gz", "has_sig": false, "md5_digest": "11142c6461622adf00cb83a52e87b3cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11101, "upload_time": "2014-12-09T01:26:34", "upload_time_iso_8601": "2014-12-09T01:26:34.676633Z", "url": "https://files.pythonhosted.org/packages/9d/61/1768eed23a70370c15eac47afe8acadd96ef6e297b92f622e53e0dadb414/django-br-addresses-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "11142c6461622adf00cb83a52e87b3cc", "sha256": "8f651362f3b0dd55847a62136846a5a48c7099816253662bf101716c67402c1a"}, "downloads": -1, "filename": "django-br-addresses-0.1.1.tar.gz", "has_sig": false, "md5_digest": "11142c6461622adf00cb83a52e87b3cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11101, "upload_time": "2014-12-09T01:26:34", "upload_time_iso_8601": "2014-12-09T01:26:34.676633Z", "url": "https://files.pythonhosted.org/packages/9d/61/1768eed23a70370c15eac47afe8acadd96ef6e297b92f622e53e0dadb414/django-br-addresses-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:20 2020"}