{"info": {"author": "Idin", "author_email": "py@idin.ca", "bugtrack_url": null, "classifiers": [], "description": "# *Nightingale*\n\nI named this package *Nightingale* in honour of \n[Florence Nightingale](https://en.wikipedia.org/wiki/Florence_Nightingale), \n[the lady with the data](https://thisisstatistics.org/florence-nightingale-the-lady-with-the-data/).\n\n# Table of Contents\n* [Installation](#installation)\n* [Usage](#usage)\n    * [Population Proportion](#population-proportion)\n    * [Regression](#regression)\n        * [Ordinary Least Squares (`OLS`)](#ordinary-least-squares-ols)\n        * [Logistic Regression (`LogisticRegression`)](#logistic-regression-logisticregression)\n        * [Generalized Estimating Equation (`GEE`)](#generalized-estimating-equation-gee)\n    * [Evaluation](#evaluation)\n        * [`evaluate_regression`](#evaluate_regression)\n        * [`evaluate_classification`](#evaluate_classification)\n    * [Feature Importance](#feature-importance)\n        * [`get_coefficients`](#get_coefficients)\n        * [`get_feature_importances`](#get_feature_importances)\n        * [`get_model_influence`](#get_model_influence)\n* [References](#references)\n\n\n# Installation\n\nYou can use pip to install Nightingale:\n\n```bash\npip install nightingale\n```\n\n# Usage\n\n## Shannon's Entropy\n\n```python\nfrom nightingale import entropy\nimport numpy as np\n\nx = np.random.choice(np.arange(1, 7), size=1000, p=[0.1, 0.05, 0.05, 0.2, 0.4, 0.2])\ny = x + np.random.uniform(low=0, high=3, size=1000) < 3 \nprint('H(x)=', entropy.get_entropy(x))\nprint('H(y, x)=', entropy.get_conditional_entropy(y, x))\nprint('G(y, x)=', entropy.get_information_gain(y, x))\n```\n**output:** \n```text\nH(x)= 2.2398258260443384\nH(y, x)= 0.12189402130109395\nG(y, x)= 0.2767517685048818\n```\n\n## Population Proportion\n\n```python\nfrom nightingale import get_sample_size, PopulationProportion, get_z_score\n\nprint('z-score for 0.95 confidence:', get_z_score(confidence=0.95))\nprint('sample size:', get_sample_size(confidence=0.95, error_margin=0.05, population_size=1000))\nprint('with 10% group proportion:', get_sample_size(confidence=0.95, error_margin=0.05, population_size=1000, group_proportion=0.1))\n\npopulation_proportion = PopulationProportion(sample_n=239, group_proportion=0.5)\nprint('error:', population_proportion.get_error(confidence=0.95))\n```\n\n## Regression\n\n### Ordinary Least Squares (`OLS`)\n\n```python\nfrom nightingale.regression import OLS\n\n# import other libraries\nimport pandas as pd\nimport numpy as np\nfrom IPython.display import display\n\n# create data\ndata = pd.DataFrame({\n    'x': np.random.normal(size=20, scale=5), \n    'y': np.random.normal(size=20, scale=5),\n})\ndata['z'] = data['x'].values + data['y'].values + np.random.normal(size=20, scale=1)\ndisplay(data.head())\n\n# build model\nols = OLS(data=data, formula='z ~ x + y')\nprint('ols results:')\ndisplay(ols.model_table)\n\nprint('r-squared:', ols.r_squared)\nprint('adjusted r-squared:', ols.adjusted_r_squared)\n\nprint('\\n', 'summary:')\ndisplay(ols.summary)\n```\n\n### Logistic Regression (`LogisticRegression`)\n\n### Generalized Estimating Equation (`GEE`)\n\n\n\n## Evaluation\n\n### `evaluate_regression`\n```python\nfrom nightingale.evaluation import evaluate_regression\n\n# import other libraries\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom pandas import DataFrame\nfrom numpy.random import normal\nfrom IPython.display import display\n\n# create the data\nnum_rows = 1000\nnum_columns = 10\ndata = DataFrame({f'x_{i + 1}': normal(size=num_rows) for i in range(num_columns)})\nnoise = normal(size=num_rows)\ndata['y'] = noise\nfor i in range(num_columns):\n    data['y'] += data[f'x_{i + 1}']\n\n# split the data into training and test\ntraining, test = train_test_split(data, test_size=0.2, random_state=42)\nx_columns = [f'x_{i + 1}' for i in range(num_columns)]\nX_training = training[x_columns]\nX_test = test[x_columns]\n\n# build regressor\nregressor = LinearRegression()\nregressor.fit(X_training, training['y'])\n\n# predict\npredicted = regressor.predict(test[x_columns])\n\n# evaluate the predictions\ndisplay(evaluate_regression(actual=test['y'], predicted=predicted))\n```\n**output:**\n```text\n{'nmae': 0.03634390112869996,\n 'rmse': 1.004360709998502,\n 'mae': 0.8091380646812157,\n 'mape': 125.73196935352729}\n```\n\n### `evaluate_classification`\nThis method evaluates a *binary* classifier based on predictions and actual values.\n```python\nfrom nightingale.evaluation import evaluate_classification\n\n# import other libraries\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom pandas import DataFrame\nfrom numpy.random import normal\nfrom IPython.display import display\n\n# create the data\nnum_rows = 1000\nnum_columns = 10\ndata = DataFrame({f'x_{i + 1}': normal(size=num_rows) for i in range(num_columns)})\nnoise = normal(size=num_rows)\ndata['y'] = noise\nfor i in range(num_columns):\n    data['y'] += data[f'x_{i + 1}']\n\ndata['y_class'] = (data['y'] > 0).astype(int)\n\n# split the data into training and test\ntraining, test = train_test_split(data, test_size=0.2, random_state=42)\nx_columns = [f'x_{i + 1}' for i in range(num_columns)]\nX_training = training[x_columns]\nX_test = test[x_columns]\n\n# build classifier\nclassifier = LogisticRegression()\nclassifier.fit(X_training, training['y_class'])\n\n# predict\npredicted = classifier.predict(test[x_columns])\ndisplay(evaluate_classification(actual=test['y_class'], predicted=predicted))\n```\n**output:**\n```text\n{'accuracy': 0.9,\n 'precision': 0.9425287356321839,\n 'recall': 0.845360824742268,\n 'specificity': 0.9514563106796117,\n 'negative_predictive_value': 0.8672566371681416,\n 'miss_rate': 0.15463917525773196,\n 'fall_out': 0.04854368932038835,\n 'false_discovery_rate': 0.05747126436781609,\n 'false_omission_rate': 0.13274336283185842,\n 'threat_score': 0.803921568627451,\n 'f1_score': 0.8913043478260869,\n 'matthews_correlation_coefficient': 0.8032750843025658,\n 'informedness': 0.7968171354218798,\n 'markedness': 0.8097853728003255,\n 'confusion_matrix': array([[98,  5],\n        [15, 82]], dtype=int64),\n 'true_negative': 98,\n 'false_positive': 5,\n 'false_negative': 15,\n 'true_positive': 82}\n```\n\n## Feature Importance\n\n### `get_coefficients`\nThis method provides the coefficients of a model (if applicable).\n```python\nfrom nightingale.feature_importance import get_coefficients\n\n# import other libraries\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom pandas import DataFrame\nfrom numpy.random import normal\nfrom IPython.display import display\n\n# create the data\nnum_rows = 1000\nnum_columns = 10\ndata = DataFrame({f'x_{i + 1}': normal(size=num_rows) for i in range(num_columns)})\nnoise = normal(size=num_rows)\ndata['y'] = noise\nfor i in range(num_columns):\n    data['y'] += data[f'x_{i + 1}'] * (i + 1)\n\n# split the data into training and test\ntraining, test = train_test_split(data, test_size=0.2, random_state=42)\nx_columns = [f'x_{i + 1}' for i in range(num_columns)]\nX_training = training[x_columns]\nX_test = test[x_columns]\n\n# build regressor\nregressor = LinearRegression()\nregressor.fit(X_training, training['y'])\n\n# show results\ndisplay(get_coefficients(model=regressor, columns=x_columns))\n```\n**output:**\n```text\n{'x_1': 0.9757592681006574,\n 'x_2': 2.087658823002798,\n 'x_3': 3.029429170607074,\n 'x_4': 3.9872397737924814,\n 'x_5': 5.017284345652762,\n 'x_6': 5.957884804572033,\n 'x_7': 7.0112941806800775,\n 'x_8': 7.99189170951265,\n 'x_9': 9.046356367379428,\n 'x_10': 9.994160430237088}\n```\n\n### `get_feature_importances`\nThis method produces the feature importances of a model (if applicable).\n```python\nfrom nightingale.feature_importance import get_feature_importances\n\n# import other libraries\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom pandas import DataFrame\nfrom numpy.random import normal\nfrom IPython.display import display\n\n# create the data\nnum_rows = 1000\nnum_columns = 10\ndata = DataFrame({f'x_{i + 1}': normal(size=num_rows) for i in range(num_columns)})\nnoise = normal(size=num_rows)\ndata['y'] = noise\nfor i in range(num_columns):\n    data['y'] += data[f'x_{i + 1}'] * (i + 1)\ndata['y_class'] = (data['y'] > 0).astype(int)\n\n# split the data into training and test\ntraining, test = train_test_split(data, test_size=0.2, random_state=42)\nx_columns = [f'x_{i + 1}' for i in range(num_columns)]\nX_training = training[x_columns]\nX_test = test[x_columns]\n\n# build classifier\nclassifier = RandomForestClassifier()\nclassifier.fit(X_training, training['y_class'])\n\n# show results\ndisplay(get_feature_importances(model=classifier, columns=x_columns))\n```\n**output:**\n```text\n{'x_1': 0.039392558058928634,\n 'x_2': 0.045648670987447175,\n 'x_3': 0.06830354705691284,\n 'x_4': 0.0675098079660134,\n 'x_5': 0.09446851464509692,\n 'x_6': 0.10764938247312761,\n 'x_7': 0.10715124795271348,\n 'x_8': 0.13332980023234497,\n 'x_9': 0.14531677148789846,\n 'x_10': 0.19122969913951648}\n```\n\n### `get_model_influence`\n```python\nfrom nightingale.feature_importance import get_model_influence\n\n# import other libraries\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\nfrom pandas import DataFrame\nfrom numpy.random import normal\nfrom IPython.display import display\n\n# visualization libraries\nfrom plotnine import ggplot, geom_line, aes, stat_smooth, facet_wrap\nfrom plotnine.data import mtcars\nfrom plotnine import options\n\n# create the data\nnum_rows = 1000\nnum_columns = 10\ndata = DataFrame({f'x_{i + 1}': normal(size=num_rows) for i in range(num_columns)})\nnoise = normal(size=num_rows)\ndata['y'] = noise\nfor i in range(num_columns):\n    data['y'] += data[f'x_{i + 1}'] * (i + 1) * (-1) ** i\n\n# split the data into training and test\ntraining, test = train_test_split(data, test_size=0.2, random_state=42)\nx_columns = [f'x_{i + 1}' for i in range(num_columns)]\nX_training = training[x_columns]\nX_test = test[x_columns]\n\n# build random forest regressor\nrandom_forest_regressor = RandomForestRegressor(n_estimators=10)\nrandom_forest_regressor.fit(X_training, training['y'])\n\n# show results\ninfluence = get_model_influence(model=random_forest_regressor, data=test, x_columns=x_columns, num_points=200, num_threads=1, echo=1)\ndisplay(influence.head())\n\n# visualize\noptions.figure_size = 10, 5\nggplot(influence, aes(x='perturbation', y='influence_mean', colour='column')) + geom_line()\n```\n<p align=\"center\">\n  <img \n    src=\"http://idin.ca/storage/python/nightingale/images/get_influence.png\"\n    width=100%\n  />\n</p>\n\n# References\nz-score: https://stackoverflow.com/questions/20864847/probability-to-z-score-and-vice-versa-in-python\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/idin/nightingale", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nightingale", "package_url": "https://pypi.org/project/nightingale/", "platform": "", "project_url": "https://pypi.org/project/nightingale/", "project_urls": {"Homepage": "https://github.com/idin/nightingale"}, "release_url": "https://pypi.org/project/nightingale/2020.4.28.2/", "requires_dist": ["statsmodels", "scipy", "pandas", "slytherin", "numpy", "chronometry", "pensieve", "sklearn", "joblib", "ravenclaw", "func-timeout"], "requires_python": "~=3.6", "summary": "Python library for simplifying statistical analysis and making it more consistent", "version": "2020.4.28.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><em>Nightingale</em></h1>\n<p>I named this package <em>Nightingale</em> in honour of\n<a href=\"https://en.wikipedia.org/wiki/Florence_Nightingale\" rel=\"nofollow\">Florence Nightingale</a>,\n<a href=\"https://thisisstatistics.org/florence-nightingale-the-lady-with-the-data/\" rel=\"nofollow\">the lady with the data</a>.</p>\n<h1>Table of Contents</h1>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#population-proportion\" rel=\"nofollow\">Population Proportion</a></li>\n<li><a href=\"#regression\" rel=\"nofollow\">Regression</a>\n<ul>\n<li><a href=\"#ordinary-least-squares-ols\" rel=\"nofollow\">Ordinary Least Squares (<code>OLS</code>)</a></li>\n<li><a href=\"#logistic-regression-logisticregression\" rel=\"nofollow\">Logistic Regression (<code>LogisticRegression</code>)</a></li>\n<li><a href=\"#generalized-estimating-equation-gee\" rel=\"nofollow\">Generalized Estimating Equation (<code>GEE</code>)</a></li>\n</ul>\n</li>\n<li><a href=\"#evaluation\" rel=\"nofollow\">Evaluation</a>\n<ul>\n<li><a href=\"#evaluate_regression\" rel=\"nofollow\"><code>evaluate_regression</code></a></li>\n<li><a href=\"#evaluate_classification\" rel=\"nofollow\"><code>evaluate_classification</code></a></li>\n</ul>\n</li>\n<li><a href=\"#feature-importance\" rel=\"nofollow\">Feature Importance</a>\n<ul>\n<li><a href=\"#get_coefficients\" rel=\"nofollow\"><code>get_coefficients</code></a></li>\n<li><a href=\"#get_feature_importances\" rel=\"nofollow\"><code>get_feature_importances</code></a></li>\n<li><a href=\"#get_model_influence\" rel=\"nofollow\"><code>get_model_influence</code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#references\" rel=\"nofollow\">References</a></li>\n</ul>\n<h1>Installation</h1>\n<p>You can use pip to install Nightingale:</p>\n<pre>pip install nightingale\n</pre>\n<h1>Usage</h1>\n<h2>Shannon's Entropy</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nightingale</span> <span class=\"kn\">import</span> <span class=\"n\">entropy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">])</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">uniform</span><span class=\"p\">(</span><span class=\"n\">low</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">high</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">3</span> \n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'H(x)='</span><span class=\"p\">,</span> <span class=\"n\">entropy</span><span class=\"o\">.</span><span class=\"n\">get_entropy</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'H(y, x)='</span><span class=\"p\">,</span> <span class=\"n\">entropy</span><span class=\"o\">.</span><span class=\"n\">get_conditional_entropy</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'G(y, x)='</span><span class=\"p\">,</span> <span class=\"n\">entropy</span><span class=\"o\">.</span><span class=\"n\">get_information_gain</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">))</span>\n</pre>\n<p><strong>output:</strong></p>\n<pre>H(x)= 2.2398258260443384\nH(y, x)= 0.12189402130109395\nG(y, x)= 0.2767517685048818\n</pre>\n<h2>Population Proportion</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nightingale</span> <span class=\"kn\">import</span> <span class=\"n\">get_sample_size</span><span class=\"p\">,</span> <span class=\"n\">PopulationProportion</span><span class=\"p\">,</span> <span class=\"n\">get_z_score</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'z-score for 0.95 confidence:'</span><span class=\"p\">,</span> <span class=\"n\">get_z_score</span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"o\">=</span><span class=\"mf\">0.95</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'sample size:'</span><span class=\"p\">,</span> <span class=\"n\">get_sample_size</span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"o\">=</span><span class=\"mf\">0.95</span><span class=\"p\">,</span> <span class=\"n\">error_margin</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"n\">population_size</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'with 10</span><span class=\"si\">% g</span><span class=\"s1\">roup proportion:'</span><span class=\"p\">,</span> <span class=\"n\">get_sample_size</span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"o\">=</span><span class=\"mf\">0.95</span><span class=\"p\">,</span> <span class=\"n\">error_margin</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"n\">population_size</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">group_proportion</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">))</span>\n\n<span class=\"n\">population_proportion</span> <span class=\"o\">=</span> <span class=\"n\">PopulationProportion</span><span class=\"p\">(</span><span class=\"n\">sample_n</span><span class=\"o\">=</span><span class=\"mi\">239</span><span class=\"p\">,</span> <span class=\"n\">group_proportion</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'error:'</span><span class=\"p\">,</span> <span class=\"n\">population_proportion</span><span class=\"o\">.</span><span class=\"n\">get_error</span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"o\">=</span><span class=\"mf\">0.95</span><span class=\"p\">))</span>\n</pre>\n<h2>Regression</h2>\n<h3>Ordinary Least Squares (<code>OLS</code>)</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nightingale.regression</span> <span class=\"kn\">import</span> <span class=\"n\">OLS</span>\n\n<span class=\"c1\"># import other libraries</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">IPython.display</span> <span class=\"kn\">import</span> <span class=\"n\">display</span>\n\n<span class=\"c1\"># create data</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n    <span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">),</span> \n    <span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">),</span>\n<span class=\"p\">})</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'z'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'x'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span> <span class=\"o\">+</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span> <span class=\"o\">+</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># build model</span>\n<span class=\"n\">ols</span> <span class=\"o\">=</span> <span class=\"n\">OLS</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">formula</span><span class=\"o\">=</span><span class=\"s1\">'z ~ x + y'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'ols results:'</span><span class=\"p\">)</span>\n<span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">ols</span><span class=\"o\">.</span><span class=\"n\">model_table</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'r-squared:'</span><span class=\"p\">,</span> <span class=\"n\">ols</span><span class=\"o\">.</span><span class=\"n\">r_squared</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'adjusted r-squared:'</span><span class=\"p\">,</span> <span class=\"n\">ols</span><span class=\"o\">.</span><span class=\"n\">adjusted_r_squared</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"s1\">'summary:'</span><span class=\"p\">)</span>\n<span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">ols</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">)</span>\n</pre>\n<h3>Logistic Regression (<code>LogisticRegression</code>)</h3>\n<h3>Generalized Estimating Equation (<code>GEE</code>)</h3>\n<h2>Evaluation</h2>\n<h3><code>evaluate_regression</code></h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nightingale.evaluation</span> <span class=\"kn\">import</span> <span class=\"n\">evaluate_regression</span>\n\n<span class=\"c1\"># import other libraries</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.linear_model</span> <span class=\"kn\">import</span> <span class=\"n\">LinearRegression</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">train_test_split</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pandas</span> <span class=\"kn\">import</span> <span class=\"n\">DataFrame</span>\n<span class=\"kn\">from</span> <span class=\"nn\">numpy.random</span> <span class=\"kn\">import</span> <span class=\"n\">normal</span>\n<span class=\"kn\">from</span> <span class=\"nn\">IPython.display</span> <span class=\"kn\">import</span> <span class=\"n\">display</span>\n\n<span class=\"c1\"># create the data</span>\n<span class=\"n\">num_rows</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n<span class=\"n\">num_columns</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">DataFrame</span><span class=\"p\">({</span><span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">:</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">num_rows</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_columns</span><span class=\"p\">)})</span>\n<span class=\"n\">noise</span> <span class=\"o\">=</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">num_rows</span><span class=\"p\">)</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">noise</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_columns</span><span class=\"p\">):</span>\n    <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># split the data into training and test</span>\n<span class=\"n\">training</span><span class=\"p\">,</span> <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">train_test_split</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">test_size</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"n\">x_columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_columns</span><span class=\"p\">)]</span>\n<span class=\"n\">X_training</span> <span class=\"o\">=</span> <span class=\"n\">training</span><span class=\"p\">[</span><span class=\"n\">x_columns</span><span class=\"p\">]</span>\n<span class=\"n\">X_test</span> <span class=\"o\">=</span> <span class=\"n\">test</span><span class=\"p\">[</span><span class=\"n\">x_columns</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># build regressor</span>\n<span class=\"n\">regressor</span> <span class=\"o\">=</span> <span class=\"n\">LinearRegression</span><span class=\"p\">()</span>\n<span class=\"n\">regressor</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_training</span><span class=\"p\">,</span> <span class=\"n\">training</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># predict</span>\n<span class=\"n\">predicted</span> <span class=\"o\">=</span> <span class=\"n\">regressor</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">[</span><span class=\"n\">x_columns</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># evaluate the predictions</span>\n<span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">evaluate_regression</span><span class=\"p\">(</span><span class=\"n\">actual</span><span class=\"o\">=</span><span class=\"n\">test</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">],</span> <span class=\"n\">predicted</span><span class=\"o\">=</span><span class=\"n\">predicted</span><span class=\"p\">))</span>\n</pre>\n<p><strong>output:</strong></p>\n<pre>{'nmae': 0.03634390112869996,\n 'rmse': 1.004360709998502,\n 'mae': 0.8091380646812157,\n 'mape': 125.73196935352729}\n</pre>\n<h3><code>evaluate_classification</code></h3>\n<p>This method evaluates a <em>binary</em> classifier based on predictions and actual values.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nightingale.evaluation</span> <span class=\"kn\">import</span> <span class=\"n\">evaluate_classification</span>\n\n<span class=\"c1\"># import other libraries</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.linear_model</span> <span class=\"kn\">import</span> <span class=\"n\">LogisticRegression</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">train_test_split</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pandas</span> <span class=\"kn\">import</span> <span class=\"n\">DataFrame</span>\n<span class=\"kn\">from</span> <span class=\"nn\">numpy.random</span> <span class=\"kn\">import</span> <span class=\"n\">normal</span>\n<span class=\"kn\">from</span> <span class=\"nn\">IPython.display</span> <span class=\"kn\">import</span> <span class=\"n\">display</span>\n\n<span class=\"c1\"># create the data</span>\n<span class=\"n\">num_rows</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n<span class=\"n\">num_columns</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">DataFrame</span><span class=\"p\">({</span><span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">:</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">num_rows</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_columns</span><span class=\"p\">)})</span>\n<span class=\"n\">noise</span> <span class=\"o\">=</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">num_rows</span><span class=\"p\">)</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">noise</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_columns</span><span class=\"p\">):</span>\n    <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">]</span>\n\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y_class'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># split the data into training and test</span>\n<span class=\"n\">training</span><span class=\"p\">,</span> <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">train_test_split</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">test_size</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"n\">x_columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_columns</span><span class=\"p\">)]</span>\n<span class=\"n\">X_training</span> <span class=\"o\">=</span> <span class=\"n\">training</span><span class=\"p\">[</span><span class=\"n\">x_columns</span><span class=\"p\">]</span>\n<span class=\"n\">X_test</span> <span class=\"o\">=</span> <span class=\"n\">test</span><span class=\"p\">[</span><span class=\"n\">x_columns</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># build classifier</span>\n<span class=\"n\">classifier</span> <span class=\"o\">=</span> <span class=\"n\">LogisticRegression</span><span class=\"p\">()</span>\n<span class=\"n\">classifier</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_training</span><span class=\"p\">,</span> <span class=\"n\">training</span><span class=\"p\">[</span><span class=\"s1\">'y_class'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># predict</span>\n<span class=\"n\">predicted</span> <span class=\"o\">=</span> <span class=\"n\">classifier</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">[</span><span class=\"n\">x_columns</span><span class=\"p\">])</span>\n<span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">evaluate_classification</span><span class=\"p\">(</span><span class=\"n\">actual</span><span class=\"o\">=</span><span class=\"n\">test</span><span class=\"p\">[</span><span class=\"s1\">'y_class'</span><span class=\"p\">],</span> <span class=\"n\">predicted</span><span class=\"o\">=</span><span class=\"n\">predicted</span><span class=\"p\">))</span>\n</pre>\n<p><strong>output:</strong></p>\n<pre>{'accuracy': 0.9,\n 'precision': 0.9425287356321839,\n 'recall': 0.845360824742268,\n 'specificity': 0.9514563106796117,\n 'negative_predictive_value': 0.8672566371681416,\n 'miss_rate': 0.15463917525773196,\n 'fall_out': 0.04854368932038835,\n 'false_discovery_rate': 0.05747126436781609,\n 'false_omission_rate': 0.13274336283185842,\n 'threat_score': 0.803921568627451,\n 'f1_score': 0.8913043478260869,\n 'matthews_correlation_coefficient': 0.8032750843025658,\n 'informedness': 0.7968171354218798,\n 'markedness': 0.8097853728003255,\n 'confusion_matrix': array([[98,  5],\n        [15, 82]], dtype=int64),\n 'true_negative': 98,\n 'false_positive': 5,\n 'false_negative': 15,\n 'true_positive': 82}\n</pre>\n<h2>Feature Importance</h2>\n<h3><code>get_coefficients</code></h3>\n<p>This method provides the coefficients of a model (if applicable).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nightingale.feature_importance</span> <span class=\"kn\">import</span> <span class=\"n\">get_coefficients</span>\n\n<span class=\"c1\"># import other libraries</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.linear_model</span> <span class=\"kn\">import</span> <span class=\"n\">LinearRegression</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">train_test_split</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pandas</span> <span class=\"kn\">import</span> <span class=\"n\">DataFrame</span>\n<span class=\"kn\">from</span> <span class=\"nn\">numpy.random</span> <span class=\"kn\">import</span> <span class=\"n\">normal</span>\n<span class=\"kn\">from</span> <span class=\"nn\">IPython.display</span> <span class=\"kn\">import</span> <span class=\"n\">display</span>\n\n<span class=\"c1\"># create the data</span>\n<span class=\"n\">num_rows</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n<span class=\"n\">num_columns</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">DataFrame</span><span class=\"p\">({</span><span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">:</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">num_rows</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_columns</span><span class=\"p\">)})</span>\n<span class=\"n\">noise</span> <span class=\"o\">=</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">num_rows</span><span class=\"p\">)</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">noise</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_columns</span><span class=\"p\">):</span>\n    <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># split the data into training and test</span>\n<span class=\"n\">training</span><span class=\"p\">,</span> <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">train_test_split</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">test_size</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"n\">x_columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_columns</span><span class=\"p\">)]</span>\n<span class=\"n\">X_training</span> <span class=\"o\">=</span> <span class=\"n\">training</span><span class=\"p\">[</span><span class=\"n\">x_columns</span><span class=\"p\">]</span>\n<span class=\"n\">X_test</span> <span class=\"o\">=</span> <span class=\"n\">test</span><span class=\"p\">[</span><span class=\"n\">x_columns</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># build regressor</span>\n<span class=\"n\">regressor</span> <span class=\"o\">=</span> <span class=\"n\">LinearRegression</span><span class=\"p\">()</span>\n<span class=\"n\">regressor</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_training</span><span class=\"p\">,</span> <span class=\"n\">training</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># show results</span>\n<span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">get_coefficients</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">regressor</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"n\">x_columns</span><span class=\"p\">))</span>\n</pre>\n<p><strong>output:</strong></p>\n<pre>{'x_1': 0.9757592681006574,\n 'x_2': 2.087658823002798,\n 'x_3': 3.029429170607074,\n 'x_4': 3.9872397737924814,\n 'x_5': 5.017284345652762,\n 'x_6': 5.957884804572033,\n 'x_7': 7.0112941806800775,\n 'x_8': 7.99189170951265,\n 'x_9': 9.046356367379428,\n 'x_10': 9.994160430237088}\n</pre>\n<h3><code>get_feature_importances</code></h3>\n<p>This method produces the feature importances of a model (if applicable).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nightingale.feature_importance</span> <span class=\"kn\">import</span> <span class=\"n\">get_feature_importances</span>\n\n<span class=\"c1\"># import other libraries</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.ensemble</span> <span class=\"kn\">import</span> <span class=\"n\">RandomForestClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">train_test_split</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pandas</span> <span class=\"kn\">import</span> <span class=\"n\">DataFrame</span>\n<span class=\"kn\">from</span> <span class=\"nn\">numpy.random</span> <span class=\"kn\">import</span> <span class=\"n\">normal</span>\n<span class=\"kn\">from</span> <span class=\"nn\">IPython.display</span> <span class=\"kn\">import</span> <span class=\"n\">display</span>\n\n<span class=\"c1\"># create the data</span>\n<span class=\"n\">num_rows</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n<span class=\"n\">num_columns</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">DataFrame</span><span class=\"p\">({</span><span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">:</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">num_rows</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_columns</span><span class=\"p\">)})</span>\n<span class=\"n\">noise</span> <span class=\"o\">=</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">num_rows</span><span class=\"p\">)</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">noise</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_columns</span><span class=\"p\">):</span>\n    <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y_class'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># split the data into training and test</span>\n<span class=\"n\">training</span><span class=\"p\">,</span> <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">train_test_split</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">test_size</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"n\">x_columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_columns</span><span class=\"p\">)]</span>\n<span class=\"n\">X_training</span> <span class=\"o\">=</span> <span class=\"n\">training</span><span class=\"p\">[</span><span class=\"n\">x_columns</span><span class=\"p\">]</span>\n<span class=\"n\">X_test</span> <span class=\"o\">=</span> <span class=\"n\">test</span><span class=\"p\">[</span><span class=\"n\">x_columns</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># build classifier</span>\n<span class=\"n\">classifier</span> <span class=\"o\">=</span> <span class=\"n\">RandomForestClassifier</span><span class=\"p\">()</span>\n<span class=\"n\">classifier</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_training</span><span class=\"p\">,</span> <span class=\"n\">training</span><span class=\"p\">[</span><span class=\"s1\">'y_class'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># show results</span>\n<span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">get_feature_importances</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">classifier</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"n\">x_columns</span><span class=\"p\">))</span>\n</pre>\n<p><strong>output:</strong></p>\n<pre>{'x_1': 0.039392558058928634,\n 'x_2': 0.045648670987447175,\n 'x_3': 0.06830354705691284,\n 'x_4': 0.0675098079660134,\n 'x_5': 0.09446851464509692,\n 'x_6': 0.10764938247312761,\n 'x_7': 0.10715124795271348,\n 'x_8': 0.13332980023234497,\n 'x_9': 0.14531677148789846,\n 'x_10': 0.19122969913951648}\n</pre>\n<h3><code>get_model_influence</code></h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nightingale.feature_importance</span> <span class=\"kn\">import</span> <span class=\"n\">get_model_influence</span>\n\n<span class=\"c1\"># import other libraries</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.ensemble</span> <span class=\"kn\">import</span> <span class=\"n\">RandomForestRegressor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">train_test_split</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pandas</span> <span class=\"kn\">import</span> <span class=\"n\">DataFrame</span>\n<span class=\"kn\">from</span> <span class=\"nn\">numpy.random</span> <span class=\"kn\">import</span> <span class=\"n\">normal</span>\n<span class=\"kn\">from</span> <span class=\"nn\">IPython.display</span> <span class=\"kn\">import</span> <span class=\"n\">display</span>\n\n<span class=\"c1\"># visualization libraries</span>\n<span class=\"kn\">from</span> <span class=\"nn\">plotnine</span> <span class=\"kn\">import</span> <span class=\"n\">ggplot</span><span class=\"p\">,</span> <span class=\"n\">geom_line</span><span class=\"p\">,</span> <span class=\"n\">aes</span><span class=\"p\">,</span> <span class=\"n\">stat_smooth</span><span class=\"p\">,</span> <span class=\"n\">facet_wrap</span>\n<span class=\"kn\">from</span> <span class=\"nn\">plotnine.data</span> <span class=\"kn\">import</span> <span class=\"n\">mtcars</span>\n<span class=\"kn\">from</span> <span class=\"nn\">plotnine</span> <span class=\"kn\">import</span> <span class=\"n\">options</span>\n\n<span class=\"c1\"># create the data</span>\n<span class=\"n\">num_rows</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n<span class=\"n\">num_columns</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">DataFrame</span><span class=\"p\">({</span><span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">:</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">num_rows</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_columns</span><span class=\"p\">)})</span>\n<span class=\"n\">noise</span> <span class=\"o\">=</span> <span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">num_rows</span><span class=\"p\">)</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">noise</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_columns</span><span class=\"p\">):</span>\n    <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"n\">i</span>\n\n<span class=\"c1\"># split the data into training and test</span>\n<span class=\"n\">training</span><span class=\"p\">,</span> <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">train_test_split</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">test_size</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"n\">x_columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">'x_</span><span class=\"si\">{</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s1\">'</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_columns</span><span class=\"p\">)]</span>\n<span class=\"n\">X_training</span> <span class=\"o\">=</span> <span class=\"n\">training</span><span class=\"p\">[</span><span class=\"n\">x_columns</span><span class=\"p\">]</span>\n<span class=\"n\">X_test</span> <span class=\"o\">=</span> <span class=\"n\">test</span><span class=\"p\">[</span><span class=\"n\">x_columns</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># build random forest regressor</span>\n<span class=\"n\">random_forest_regressor</span> <span class=\"o\">=</span> <span class=\"n\">RandomForestRegressor</span><span class=\"p\">(</span><span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">random_forest_regressor</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_training</span><span class=\"p\">,</span> <span class=\"n\">training</span><span class=\"p\">[</span><span class=\"s1\">'y'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># show results</span>\n<span class=\"n\">influence</span> <span class=\"o\">=</span> <span class=\"n\">get_model_influence</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">random_forest_regressor</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">test</span><span class=\"p\">,</span> <span class=\"n\">x_columns</span><span class=\"o\">=</span><span class=\"n\">x_columns</span><span class=\"p\">,</span> <span class=\"n\">num_points</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">num_threads</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">echo</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">influence</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># visualize</span>\n<span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">figure_size</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">5</span>\n<span class=\"n\">ggplot</span><span class=\"p\">(</span><span class=\"n\">influence</span><span class=\"p\">,</span> <span class=\"n\">aes</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"s1\">'perturbation'</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"s1\">'influence_mean'</span><span class=\"p\">,</span> <span class=\"n\">colour</span><span class=\"o\">=</span><span class=\"s1\">'column'</span><span class=\"p\">))</span> <span class=\"o\">+</span> <span class=\"n\">geom_line</span><span class=\"p\">()</span>\n</pre>\n<p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c44023ff4255b55f1b1b510fbdb5b378b99eadbf/687474703a2f2f6964696e2e63612f73746f726167652f707974686f6e2f6e69676874696e67616c652f696d616765732f6765745f696e666c75656e63652e706e67\" width=\"100%\">\n</p>\n<h1>References</h1>\n<p>z-score: <a href=\"https://stackoverflow.com/questions/20864847/probability-to-z-score-and-vice-versa-in-python\" rel=\"nofollow\">https://stackoverflow.com/questions/20864847/probability-to-z-score-and-vice-versa-in-python</a></p>\n\n          </div>"}, "last_serial": 7124035, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "1c3d32dcc417cec47d9526f86c675c74", "sha256": "c03cb9c99f2040f2b5d8e1c422324e52b0af4a05bdedd52f9fbbc65fd962a037"}, "downloads": -1, "filename": "nightingale-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1c3d32dcc417cec47d9526f86c675c74", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5365, "upload_time": "2019-05-27T18:20:38", "upload_time_iso_8601": "2019-05-27T18:20:38.901242Z", "url": "https://files.pythonhosted.org/packages/02/9a/78ce05b7b7e2d69ffa3440f6164dfbf8e91c2975009fe77cb05f15747929/nightingale-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd73a04fc2c6165e206c043743c2a986", "sha256": "16c90654e05d0e3acb0f3d12941ca32440cfc3fa384990deb0f94ea03ecd3352"}, "downloads": -1, "filename": "nightingale-1.1.tar.gz", "has_sig": false, "md5_digest": "dd73a04fc2c6165e206c043743c2a986", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3433, "upload_time": "2019-05-27T18:20:40", "upload_time_iso_8601": "2019-05-27T18:20:40.803772Z", "url": "https://files.pythonhosted.org/packages/a4/ef/e9d07cc2f872d2855fcaeb30caf8a9368126f1ee71a4417c0241a4e1b2cc/nightingale-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "e416a1abfc274e7863fefa9f0a1aaf71", "sha256": "2b688b460d38e5b48671accfee1a1e4325911633495ea4767fbe36a78317cd92"}, "downloads": -1, "filename": "nightingale-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e416a1abfc274e7863fefa9f0a1aaf71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 5876, "upload_time": "2019-05-27T18:29:31", "upload_time_iso_8601": "2019-05-27T18:29:31.060947Z", "url": "https://files.pythonhosted.org/packages/10/ec/ed7200b044cb85d1aa72effdec657d303f7cb00c516dbfc15c2849df6c8a/nightingale-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48448ba31586bca79b5afa3f2ce4973d", "sha256": "d841fbfc8de7712931427aad3224e23ad424bd026315562443cced4a0ccff4ce"}, "downloads": -1, "filename": "nightingale-1.2.tar.gz", "has_sig": false, "md5_digest": "48448ba31586bca79b5afa3f2ce4973d", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 3564, "upload_time": "2019-05-27T18:29:32", "upload_time_iso_8601": "2019-05-27T18:29:32.306781Z", "url": "https://files.pythonhosted.org/packages/6b/2c/783dc19befb0b58073fb9aef21aade5ddf41f4fb7fd6e74eeb1b0873015f/nightingale-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "6e874f01baae4631e94f106ce23243a2", "sha256": "9566a618020c617cbad65736fc7389956cfaca2ea39660f97bd1259d08360517"}, "downloads": -1, "filename": "nightingale-1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6e874f01baae4631e94f106ce23243a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 6089, "upload_time": "2019-05-27T18:31:12", "upload_time_iso_8601": "2019-05-27T18:31:12.211967Z", "url": "https://files.pythonhosted.org/packages/fd/16/1e9fb862f3dd983dcf97849b64a9194e5b0df6cd1d7f59e8666ce8b73ba4/nightingale-1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c385d23b089ded7045e34e482d86de1", "sha256": "9ece9df88be0200325d31cfc4d1439ed0afab2a990c074cac6e88e205d941980"}, "downloads": -1, "filename": "nightingale-1.3.tar.gz", "has_sig": false, "md5_digest": "2c385d23b089ded7045e34e482d86de1", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 3815, "upload_time": "2019-05-27T18:31:13", "upload_time_iso_8601": "2019-05-27T18:31:13.604845Z", "url": "https://files.pythonhosted.org/packages/ec/bb/1e1b1c6f64144f132e5a297c2255c8e89cb4dd17fed63dc8b7afd344ffd5/nightingale-1.3.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "9f415cb3579537e058577869dd9d905c", "sha256": "74642aeabe9c04ff3733aa279b7f9f76dbc49d507e4a08db751624c39bc6686e"}, "downloads": -1, "filename": "nightingale-1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "9f415cb3579537e058577869dd9d905c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 6131, "upload_time": "2019-05-27T19:21:43", "upload_time_iso_8601": "2019-05-27T19:21:43.634202Z", "url": "https://files.pythonhosted.org/packages/fb/77/67d320100b33c6263139b2b4ca48e7426582ce2c54ac01e3c59b456e48de/nightingale-1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6edfb1a13e4b196a0fc5ce5ab39f9fc4", "sha256": "39593be1ab5e547a3f37b169c37d3bbf5c1391b8e590d4f8ff3a6657bf86f3e8"}, "downloads": -1, "filename": "nightingale-1.5.tar.gz", "has_sig": false, "md5_digest": "6edfb1a13e4b196a0fc5ce5ab39f9fc4", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 3860, "upload_time": "2019-05-27T19:21:45", "upload_time_iso_8601": "2019-05-27T19:21:45.033185Z", "url": "https://files.pythonhosted.org/packages/a7/51/9f95bc7497bfb003ccc62317f4995494ad1f29a8dc91226c753af5caf199/nightingale-1.5.tar.gz", "yanked": false}], "2019.12.28": [{"comment_text": "", "digests": {"md5": "3147d10d60d1962784ffc5bef7dd925a", "sha256": "28f74128face5a6147a41c5d78c34448794ffc24e641805f713751bb6bc49696"}, "downloads": -1, "filename": "nightingale-2019.12.28-py3-none-any.whl", "has_sig": false, "md5_digest": "3147d10d60d1962784ffc5bef7dd925a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 35433, "upload_time": "2019-12-29T05:32:57", "upload_time_iso_8601": "2019-12-29T05:32:57.244993Z", "url": "https://files.pythonhosted.org/packages/62/ab/b650d35d3f7049e4f5903b420e915de1c2df3ad9a7cef6dc1ab4c7556e2d/nightingale-2019.12.28-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "91e6cff2e8529130b9fda8d897cb077d", "sha256": "9b39d79ff28b9fe71aed26b7e923a8b88e4f971060147d626c04f376fb7f26b8"}, "downloads": -1, "filename": "nightingale-2019.12.28.tar.gz", "has_sig": false, "md5_digest": "91e6cff2e8529130b9fda8d897cb077d", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 23363, "upload_time": "2019-12-29T05:32:58", "upload_time_iso_8601": "2019-12-29T05:32:58.432887Z", "url": "https://files.pythonhosted.org/packages/06/99/6c9662ad31b55a82298eaec3a2e3db5d93cb844d15834df03b1fe8ac9629/nightingale-2019.12.28.tar.gz", "yanked": false}], "2019.12.29": [{"comment_text": "", "digests": {"md5": "ff9f33044de2a9a2c803ec3299c9f518", "sha256": "7fbc69efe10190c1f0065aac57baba3d59dcdc14e150cfe2c71ffaa9dcd585e6"}, "downloads": -1, "filename": "nightingale-2019.12.29-py3-none-any.whl", "has_sig": false, "md5_digest": "ff9f33044de2a9a2c803ec3299c9f518", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 35433, "upload_time": "2019-12-30T03:05:07", "upload_time_iso_8601": "2019-12-30T03:05:07.355839Z", "url": "https://files.pythonhosted.org/packages/27/76/bc4a8336c165b5487998f558e30c1369696d7c7721b0c6907d8e3535ff87/nightingale-2019.12.29-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "344c77cc9627bb55ee6abbdf0346d821", "sha256": "c23a1b639c8c294bf36367d4f4da79f45ee434fe4c4f46c762a042023a2759b9"}, "downloads": -1, "filename": "nightingale-2019.12.29.tar.gz", "has_sig": false, "md5_digest": "344c77cc9627bb55ee6abbdf0346d821", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 23383, "upload_time": "2019-12-30T03:05:08", "upload_time_iso_8601": "2019-12-30T03:05:08.556802Z", "url": "https://files.pythonhosted.org/packages/87/3e/80b6366bc138046aa9a45cce99da5d9fc50a70a51eacbd1c7d523aef4f9a/nightingale-2019.12.29.tar.gz", "yanked": false}], "2019.12.29.1": [{"comment_text": "", "digests": {"md5": "5763128337a74b86836c0749b9e75b1a", "sha256": "259e8ca2d0b5cefd58ac79e77e00f9c15465ec9ecbc381a6de54cc2c85ece6cc"}, "downloads": -1, "filename": "nightingale-2019.12.29.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5763128337a74b86836c0749b9e75b1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 35452, "upload_time": "2019-12-30T03:06:21", "upload_time_iso_8601": "2019-12-30T03:06:21.319916Z", "url": "https://files.pythonhosted.org/packages/4f/f2/cda815baa020c24766917d591438e14c974fdde34b71c154be097460971d/nightingale-2019.12.29.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "865a2bfffe691c2961d0fa86ad6fa273", "sha256": "ad02df0679f2f2b1f413905322d23073861e805c97f5f966cd4975fd76f97703"}, "downloads": -1, "filename": "nightingale-2019.12.29.1.tar.gz", "has_sig": false, "md5_digest": "865a2bfffe691c2961d0fa86ad6fa273", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 23377, "upload_time": "2019-12-30T03:06:22", "upload_time_iso_8601": "2019-12-30T03:06:22.826569Z", "url": "https://files.pythonhosted.org/packages/b8/15/0aab5fa571dce9e4ddfcb2405d05d6978d5d7c93aaa23d576ef6bb0878ad/nightingale-2019.12.29.1.tar.gz", "yanked": false}], "2019.12.29.2": [{"comment_text": "", "digests": {"md5": "a65c31eab9cf6d7d4082b8d6336b70f2", "sha256": "a97bac887ba59056e45e80ecf94f17a5926d4b5aadf9d6907dfcee58e13e00ba"}, "downloads": -1, "filename": "nightingale-2019.12.29.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a65c31eab9cf6d7d4082b8d6336b70f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 35454, "upload_time": "2019-12-30T03:13:43", "upload_time_iso_8601": "2019-12-30T03:13:43.717741Z", "url": "https://files.pythonhosted.org/packages/33/e1/aec5abdb374477dee6b6c89640893ac26153fe00491478c93de95d63d61b/nightingale-2019.12.29.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b681519fb17f360629d95e6ebaf4003c", "sha256": "c2c1c7d1ff6002edc781c8be789150628d18d6c39958142cd5dbacc4cf12a6a2"}, "downloads": -1, "filename": "nightingale-2019.12.29.2.tar.gz", "has_sig": false, "md5_digest": "b681519fb17f360629d95e6ebaf4003c", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 23376, "upload_time": "2019-12-30T03:13:45", "upload_time_iso_8601": "2019-12-30T03:13:45.030554Z", "url": "https://files.pythonhosted.org/packages/10/51/fb54348be31c9b1156a96441ff476437b98d9bab7bcce67cefd356874e47/nightingale-2019.12.29.2.tar.gz", "yanked": false}], "2019.12.29.3": [{"comment_text": "", "digests": {"md5": "bdd7e68a2e5f405643637f7ba0b466c6", "sha256": "c4d258166adfe1d70b5841563ad9296518f713d407f5dab4f1545e700e86c7e6"}, "downloads": -1, "filename": "nightingale-2019.12.29.3-py3-none-any.whl", "has_sig": false, "md5_digest": "bdd7e68a2e5f405643637f7ba0b466c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 35455, "upload_time": "2019-12-30T03:15:02", "upload_time_iso_8601": "2019-12-30T03:15:02.299754Z", "url": "https://files.pythonhosted.org/packages/e9/a2/5b7b72431cc102ab3909deb7224c52f648f37c3d01538e2ce9393a47bd29/nightingale-2019.12.29.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89304835e8a112f5a60362b800a8873b", "sha256": "6653ddb06b707e47a8ba25a987b15605529240a3000ab6cf17bb9e5b6d3838b9"}, "downloads": -1, "filename": "nightingale-2019.12.29.3.tar.gz", "has_sig": false, "md5_digest": "89304835e8a112f5a60362b800a8873b", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 23370, "upload_time": "2019-12-30T03:15:03", "upload_time_iso_8601": "2019-12-30T03:15:03.594170Z", "url": "https://files.pythonhosted.org/packages/94/2a/ee87fc5e7104141039674db10db052816af84eccc0d0f9dfca4461304ee6/nightingale-2019.12.29.3.tar.gz", "yanked": false}], "2019.12.29.4": [{"comment_text": "", "digests": {"md5": "5e09cf39278e3c353ac218b564637c2a", "sha256": "6480df290ef6aeb660c0c44cc11658fb666feaaaab7384416bbe7ce6ce664024"}, "downloads": -1, "filename": "nightingale-2019.12.29.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5e09cf39278e3c353ac218b564637c2a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 35454, "upload_time": "2019-12-30T03:34:41", "upload_time_iso_8601": "2019-12-30T03:34:41.391776Z", "url": "https://files.pythonhosted.org/packages/f3/ca/7654f0ee53bcbbc096f43d6b9381440a790fae41bac9db211ad71859aa34/nightingale-2019.12.29.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89d05894ec52425d62c2d2b6082c527b", "sha256": "ed821802f68a8d555a0282d82d4b68515c0380d4ed0dead99ad3bf40e68cc7d0"}, "downloads": -1, "filename": "nightingale-2019.12.29.4.tar.gz", "has_sig": false, "md5_digest": "89d05894ec52425d62c2d2b6082c527b", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 23371, "upload_time": "2019-12-30T03:34:42", "upload_time_iso_8601": "2019-12-30T03:34:42.831950Z", "url": "https://files.pythonhosted.org/packages/8d/98/2c9276dcfa23db698124b45394584349afd42eb8b4fade221a89646059b0/nightingale-2019.12.29.4.tar.gz", "yanked": false}], "2020.1.5": [{"comment_text": "", "digests": {"md5": "73d2d388bad2bde68ed88103b6eb67e5", "sha256": "ada7857773d137f36dded032d3c51c6f6784124a8c807a5c5fed0df2731b463a"}, "downloads": -1, "filename": "nightingale-2020.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "73d2d388bad2bde68ed88103b6eb67e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 35406, "upload_time": "2020-01-05T22:38:42", "upload_time_iso_8601": "2020-01-05T22:38:42.098141Z", "url": "https://files.pythonhosted.org/packages/56/c0/4969371fbc0a45f88cb1b2e522df088c7058f34ad9a898082b015b6f68f3/nightingale-2020.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59213300b9bfed348f1d97464224f3a1", "sha256": "cdfee8dc368703666c013c6e64fed576d130c60c20d153ff2c1291ddc407c331"}, "downloads": -1, "filename": "nightingale-2020.1.5.tar.gz", "has_sig": false, "md5_digest": "59213300b9bfed348f1d97464224f3a1", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 23376, "upload_time": "2020-01-05T22:38:43", "upload_time_iso_8601": "2020-01-05T22:38:43.289322Z", "url": "https://files.pythonhosted.org/packages/04/5e/05db828bd9b33bce47acd8a38ce2805861f6b206dbe30ade6f52530bfb75/nightingale-2020.1.5.tar.gz", "yanked": false}], "2020.1.6": [{"comment_text": "", "digests": {"md5": "f167ca30c0ffa46b92432bdf1b346b4e", "sha256": "67b0aa18e4c50c2020b8f2df9f7ea18bc5d072e521ff3bfc10c667f697baaac4"}, "downloads": -1, "filename": "nightingale-2020.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "f167ca30c0ffa46b92432bdf1b346b4e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 35405, "upload_time": "2020-01-06T08:36:08", "upload_time_iso_8601": "2020-01-06T08:36:08.205652Z", "url": "https://files.pythonhosted.org/packages/aa/c6/779e7342379313b18d1570d8c8cdde8ea48e16df0a213adb5f12006f821e/nightingale-2020.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff32ade2f76cd14435e5fe9baaf80f9b", "sha256": "7338afe54713322b8adea4b09c19c64abdfeea6223169ccde8dd2e91c00111c6"}, "downloads": -1, "filename": "nightingale-2020.1.6.tar.gz", "has_sig": false, "md5_digest": "ff32ade2f76cd14435e5fe9baaf80f9b", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 23369, "upload_time": "2020-01-06T08:36:09", "upload_time_iso_8601": "2020-01-06T08:36:09.927335Z", "url": "https://files.pythonhosted.org/packages/25/62/8da1bed1781db1bdbe60fe162e818a1c5ceba12355b9d530fb195eb2e665/nightingale-2020.1.6.tar.gz", "yanked": false}], "2020.3.23": [{"comment_text": "", "digests": {"md5": "439ad9e616d1a0564c0dfd08fdeb1071", "sha256": "f513828a9c6ecb52c987be8c490d87c870a2e35f8002821acfd2e1733d61f196"}, "downloads": -1, "filename": "nightingale-2020.3.23-py3-none-any.whl", "has_sig": false, "md5_digest": "439ad9e616d1a0564c0dfd08fdeb1071", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 45022, "upload_time": "2020-03-24T00:45:19", "upload_time_iso_8601": "2020-03-24T00:45:19.221397Z", "url": "https://files.pythonhosted.org/packages/c5/0b/7efb6be60dee5cb2cd8328217754545339d07ab0b148c9ba759a6be72cb0/nightingale-2020.3.23-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e69b9172a4c62e18cd11dc1a02b72197", "sha256": "6f836e7426442f8dac660a601ee8199c8b86b3c41066f3a409b76f1e49e42597"}, "downloads": -1, "filename": "nightingale-2020.3.23.tar.gz", "has_sig": false, "md5_digest": "e69b9172a4c62e18cd11dc1a02b72197", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 33019, "upload_time": "2020-03-24T00:45:21", "upload_time_iso_8601": "2020-03-24T00:45:21.306736Z", "url": "https://files.pythonhosted.org/packages/a1/22/165fd3a6970071786af9154bf083d1837a7306e4a24283d6015dc106c51d/nightingale-2020.3.23.tar.gz", "yanked": false}], "2020.3.23.1": [{"comment_text": "", "digests": {"md5": "160793cc874b057085ec6a1cbbba635d", "sha256": "5ff3f844849767453421dc17a7a1cbcb7f15967fd2ac1f2e728076c7f33e5be2"}, "downloads": -1, "filename": "nightingale-2020.3.23.1-py3-none-any.whl", "has_sig": false, "md5_digest": "160793cc874b057085ec6a1cbbba635d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 45044, "upload_time": "2020-03-24T00:47:21", "upload_time_iso_8601": "2020-03-24T00:47:21.726815Z", "url": "https://files.pythonhosted.org/packages/51/15/9ece964c3bab6c3ae2b1ff386ccfbbdf12a5ff90088a45dcae5fce733681/nightingale-2020.3.23.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "057820c86bad71abed73e168128f910a", "sha256": "57c99f19fbb478d9fe97a18e5fd1a0eef3f03ff3a31d08287e3796a339d4a854"}, "downloads": -1, "filename": "nightingale-2020.3.23.1.tar.gz", "has_sig": false, "md5_digest": "057820c86bad71abed73e168128f910a", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 33028, "upload_time": "2020-03-24T00:47:23", "upload_time_iso_8601": "2020-03-24T00:47:23.220620Z", "url": "https://files.pythonhosted.org/packages/28/e2/bb799ecad7eb9e8cc0f7c9fcd20a59cccf7d3d7d571238749a863cf27441/nightingale-2020.3.23.1.tar.gz", "yanked": false}], "2020.3.23.2": [{"comment_text": "", "digests": {"md5": "bbf3a9ed1b8543e62d7ab41054fb8331", "sha256": "38eb57a5440a053ca2b7ebc36a4549878f8c626018ddff14e373b4328e8c3889"}, "downloads": -1, "filename": "nightingale-2020.3.23.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bbf3a9ed1b8543e62d7ab41054fb8331", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 45046, "upload_time": "2020-03-24T05:47:40", "upload_time_iso_8601": "2020-03-24T05:47:40.774871Z", "url": "https://files.pythonhosted.org/packages/5f/4d/08a1821bf158ec290a1c4129224115c86b6fd5d1e4244abb62e433477869/nightingale-2020.3.23.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fdb571b6a941c912a4a1350d6428ba2", "sha256": "800b8c1bf36a4e4f41ce90c96af661ba98b03148191a1803265aeefcccc1836b"}, "downloads": -1, "filename": "nightingale-2020.3.23.2.tar.gz", "has_sig": false, "md5_digest": "4fdb571b6a941c912a4a1350d6428ba2", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 33026, "upload_time": "2020-03-24T05:47:44", "upload_time_iso_8601": "2020-03-24T05:47:44.261268Z", "url": "https://files.pythonhosted.org/packages/d6/a3/c529ef8135199028f2a4cea4d8ec9895ca17664e413a066b0839e3c6864f/nightingale-2020.3.23.2.tar.gz", "yanked": false}], "2020.3.9": [{"comment_text": "", "digests": {"md5": "60db2a2952523c96bcac844acc4f626b", "sha256": "6ec8d020ea655fb6f9f76f42f8af7e6fbbe8a0dc949debaf0c8b86f384a823a6"}, "downloads": -1, "filename": "nightingale-2020.3.9-py3-none-any.whl", "has_sig": false, "md5_digest": "60db2a2952523c96bcac844acc4f626b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 43995, "upload_time": "2020-03-09T22:10:00", "upload_time_iso_8601": "2020-03-09T22:10:00.245012Z", "url": "https://files.pythonhosted.org/packages/e0/c8/d40d277a629446c8ad15bb79c17050a65c37e3cd289a4b9820cc300cb597/nightingale-2020.3.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a8381a90e5380d05f437c93128b332a", "sha256": "4fd53673959207f06cf358b2eacdf88eb72a7e9fe883c64aa9d045b591fa4f2c"}, "downloads": -1, "filename": "nightingale-2020.3.9.tar.gz", "has_sig": false, "md5_digest": "3a8381a90e5380d05f437c93128b332a", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 32051, "upload_time": "2020-03-09T22:10:02", "upload_time_iso_8601": "2020-03-09T22:10:02.140381Z", "url": "https://files.pythonhosted.org/packages/6d/83/c2ed4a3ad11528f1f8604b0a2d616d28e33ef096a6a4d5cf0432ba2bbbbd/nightingale-2020.3.9.tar.gz", "yanked": false}], "2020.4.1": [{"comment_text": "", "digests": {"md5": "9b531ab7b4e3e448904c8aee8f83c6f6", "sha256": "6fd6b1e167ee74e9b78529d8da801b9f281b4029921f33cac61eaad7013e27da"}, "downloads": -1, "filename": "nightingale-2020.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9b531ab7b4e3e448904c8aee8f83c6f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 45021, "upload_time": "2020-04-01T19:03:28", "upload_time_iso_8601": "2020-04-01T19:03:28.020905Z", "url": "https://files.pythonhosted.org/packages/36/03/0628155a34f4ef6fd82ca64b3d0569d9f22042770e1c5d56dcd4eac26455/nightingale-2020.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ca9638b6ab45e43f4d3818c5edee7f0", "sha256": "91c0663295828a46ba50bb0b05f5fa44146d61f46136a1f9cdd3635476be2ba0"}, "downloads": -1, "filename": "nightingale-2020.4.1.tar.gz", "has_sig": false, "md5_digest": "2ca9638b6ab45e43f4d3818c5edee7f0", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 33035, "upload_time": "2020-04-01T19:03:29", "upload_time_iso_8601": "2020-04-01T19:03:29.507258Z", "url": "https://files.pythonhosted.org/packages/ff/09/5b7ad5a5ed5b927ef0c3a9281efe4dc1ae93f43c0cbd45c6228b6bacdfd9/nightingale-2020.4.1.tar.gz", "yanked": false}], "2020.4.17": [{"comment_text": "", "digests": {"md5": "eb4a39d74288d2c455c0f3f57e78f455", "sha256": "904ee5d43e674549c57b306d54577745a538289318daeedf6ee7aa31275301a0"}, "downloads": -1, "filename": "nightingale-2020.4.17-py3-none-any.whl", "has_sig": false, "md5_digest": "eb4a39d74288d2c455c0f3f57e78f455", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 45082, "upload_time": "2020-04-17T21:29:41", "upload_time_iso_8601": "2020-04-17T21:29:41.788790Z", "url": "https://files.pythonhosted.org/packages/83/a8/d59c73d3b30b37f2de4d5eacf9506cd7036a742502a893e89a34ffb9ff57/nightingale-2020.4.17-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f845e39c273c2bd5048bd92f3108640", "sha256": "5adcc380ce49cf9b7139fd7e2df5b53e000098ee41000d744203fca374b348a3"}, "downloads": -1, "filename": "nightingale-2020.4.17.tar.gz", "has_sig": false, "md5_digest": "8f845e39c273c2bd5048bd92f3108640", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 33084, "upload_time": "2020-04-17T21:29:43", "upload_time_iso_8601": "2020-04-17T21:29:43.177206Z", "url": "https://files.pythonhosted.org/packages/07/3d/b177a334d4ecb86b3100bf562884a6bfb2e2ba81a8dfaaa6799507aa8bc8/nightingale-2020.4.17.tar.gz", "yanked": false}], "2020.4.28": [{"comment_text": "", "digests": {"md5": "e27d5132a9d349709506bcfb23f266f4", "sha256": "1be9d48d41d0e1989d2eaa9244232961c38ecb7a2e1108f8c27a68dfb6400e16"}, "downloads": -1, "filename": "nightingale-2020.4.28-py3-none-any.whl", "has_sig": false, "md5_digest": "e27d5132a9d349709506bcfb23f266f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 46975, "upload_time": "2020-04-28T18:03:57", "upload_time_iso_8601": "2020-04-28T18:03:57.379306Z", "url": "https://files.pythonhosted.org/packages/bb/ce/bd1eff13993a4305909ee41e5c8fc2c572dc64151a9a6109498d187897c5/nightingale-2020.4.28-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76e19a024d9385c346e66bccf54f31ce", "sha256": "35d4d48443c39d1ff28b2a65bb1b97a24438e9acc60d02491f89a5ab19c80e4c"}, "downloads": -1, "filename": "nightingale-2020.4.28.tar.gz", "has_sig": false, "md5_digest": "76e19a024d9385c346e66bccf54f31ce", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 33985, "upload_time": "2020-04-28T18:03:59", "upload_time_iso_8601": "2020-04-28T18:03:59.177374Z", "url": "https://files.pythonhosted.org/packages/ed/03/d16370b2c2364007594e40fd62041c87211f5f6cba0c8eae60c90059ac23/nightingale-2020.4.28.tar.gz", "yanked": false}], "2020.4.28.1": [{"comment_text": "", "digests": {"md5": "ff00231227b8d16bad522fa163d2ebdd", "sha256": "581306c6199e55a6249aea8cea20c1c87fb2d945cd09f3fa1480be4f6e3cd851"}, "downloads": -1, "filename": "nightingale-2020.4.28.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ff00231227b8d16bad522fa163d2ebdd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 46999, "upload_time": "2020-04-28T21:33:07", "upload_time_iso_8601": "2020-04-28T21:33:07.339736Z", "url": "https://files.pythonhosted.org/packages/af/16/1150dbd460c033eab09bf907f25cf557501cfb399902be2f251fcc3ab07d/nightingale-2020.4.28.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6be3a0b8407ab0e574dfe4213b943277", "sha256": "f0782d6e56d7d5742122f03a74e6c8b14dd9d495cc050eee6e3e50cfb56061af"}, "downloads": -1, "filename": "nightingale-2020.4.28.1.tar.gz", "has_sig": false, "md5_digest": "6be3a0b8407ab0e574dfe4213b943277", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 33992, "upload_time": "2020-04-28T21:33:09", "upload_time_iso_8601": "2020-04-28T21:33:09.136865Z", "url": "https://files.pythonhosted.org/packages/72/ed/fa30a3defe181525213ee19ea3277c28e52ac6cf27976520c057e9c2d838/nightingale-2020.4.28.1.tar.gz", "yanked": false}], "2020.4.28.2": [{"comment_text": "", "digests": {"md5": "af9db96013437830eea82e693f15421b", "sha256": "ec4a50723182a8bf96549eeb455c554081785c460ea231da6434b86da947397b"}, "downloads": -1, "filename": "nightingale-2020.4.28.2-py3-none-any.whl", "has_sig": false, "md5_digest": "af9db96013437830eea82e693f15421b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 47000, "upload_time": "2020-04-28T22:47:24", "upload_time_iso_8601": "2020-04-28T22:47:24.532334Z", "url": "https://files.pythonhosted.org/packages/de/fd/43004b8944f72c196a3ebb6f831018bf2a4cc39c355e29c76fe7f959947c/nightingale-2020.4.28.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0be886029b9f331e40346516f510cb00", "sha256": "4f6ac89a46c4a82cff7d42b04038c109b1a4f28403ec14f26e59ef3293df5b27"}, "downloads": -1, "filename": "nightingale-2020.4.28.2.tar.gz", "has_sig": false, "md5_digest": "0be886029b9f331e40346516f510cb00", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 33998, "upload_time": "2020-04-28T22:47:26", "upload_time_iso_8601": "2020-04-28T22:47:26.109587Z", "url": "https://files.pythonhosted.org/packages/bf/d4/99162cfd508d1d079a3d8bdb18a95d637ce75e6b0b16131200703a98b90f/nightingale-2020.4.28.2.tar.gz", "yanked": false}], "2020.4.6": [{"comment_text": "", "digests": {"md5": "1e4a7d96413ba2101eb751485f8d8c6c", "sha256": "11d6a134e5e3c59b2ac034a442c788be17311421deccb61c549d4dccac4514b4"}, "downloads": -1, "filename": "nightingale-2020.4.6-py3-none-any.whl", "has_sig": false, "md5_digest": "1e4a7d96413ba2101eb751485f8d8c6c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 45071, "upload_time": "2020-04-07T04:21:45", "upload_time_iso_8601": "2020-04-07T04:21:45.686217Z", "url": "https://files.pythonhosted.org/packages/f5/cb/3a8afc935b91bba40cc86f29d73ec11f81742837e7ffe9ff01a291a63083/nightingale-2020.4.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bb03204e1915fcc6bcb2c34e7b7eb51d", "sha256": "e3830864ce546307d0d37f1a6274966210667112279f2c35c141818136dedc6f"}, "downloads": -1, "filename": "nightingale-2020.4.6.tar.gz", "has_sig": false, "md5_digest": "bb03204e1915fcc6bcb2c34e7b7eb51d", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 33078, "upload_time": "2020-04-07T04:21:47", "upload_time_iso_8601": "2020-04-07T04:21:47.008075Z", "url": "https://files.pythonhosted.org/packages/ad/32/0e49fdd1730ed71ad0655252e6af99e5ff3244465b381d4b38487f09a2f6/nightingale-2020.4.6.tar.gz", "yanked": false}], "2020.4.7": [{"comment_text": "", "digests": {"md5": "39c4a40471c9cbcbe075da30989229cd", "sha256": "47113440b725c806d4298da40063e5e2ad4bd7e39ea1e61693c873ea52e21c76"}, "downloads": -1, "filename": "nightingale-2020.4.7-py3-none-any.whl", "has_sig": false, "md5_digest": "39c4a40471c9cbcbe075da30989229cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 45072, "upload_time": "2020-04-07T20:43:15", "upload_time_iso_8601": "2020-04-07T20:43:15.143401Z", "url": "https://files.pythonhosted.org/packages/c8/2e/180bb9bc2a64e0ed7a296d9acec0c6b6f8fc44f508ff2c349feca04642e1/nightingale-2020.4.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "decbb0654c0a010ebbb3e5ca7cc5a642", "sha256": "c2fd5daabc1d8eccd5bd0eb1eb6e6d77480ea5bf9e279f79225f92e20b66b266"}, "downloads": -1, "filename": "nightingale-2020.4.7.tar.gz", "has_sig": false, "md5_digest": "decbb0654c0a010ebbb3e5ca7cc5a642", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 33078, "upload_time": "2020-04-07T20:43:16", "upload_time_iso_8601": "2020-04-07T20:43:16.999713Z", "url": "https://files.pythonhosted.org/packages/33/f8/53255f2db96982a1d97b727ae57c654783ec94e5f7f47c2314578c1f39ff/nightingale-2020.4.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "af9db96013437830eea82e693f15421b", "sha256": "ec4a50723182a8bf96549eeb455c554081785c460ea231da6434b86da947397b"}, "downloads": -1, "filename": "nightingale-2020.4.28.2-py3-none-any.whl", "has_sig": false, "md5_digest": "af9db96013437830eea82e693f15421b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 47000, "upload_time": "2020-04-28T22:47:24", "upload_time_iso_8601": "2020-04-28T22:47:24.532334Z", "url": "https://files.pythonhosted.org/packages/de/fd/43004b8944f72c196a3ebb6f831018bf2a4cc39c355e29c76fe7f959947c/nightingale-2020.4.28.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0be886029b9f331e40346516f510cb00", "sha256": "4f6ac89a46c4a82cff7d42b04038c109b1a4f28403ec14f26e59ef3293df5b27"}, "downloads": -1, "filename": "nightingale-2020.4.28.2.tar.gz", "has_sig": false, "md5_digest": "0be886029b9f331e40346516f510cb00", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 33998, "upload_time": "2020-04-28T22:47:26", "upload_time_iso_8601": "2020-04-28T22:47:26.109587Z", "url": "https://files.pythonhosted.org/packages/bf/d4/99162cfd508d1d079a3d8bdb18a95d637ce75e6b0b16131200703a98b90f/nightingale-2020.4.28.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:23 2020"}