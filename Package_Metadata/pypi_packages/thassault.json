{"info": {"author": "Themis Anagnostopoulos", "author_email": "them.anagno@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\n# thassault\n\nA CLI load testing tool for getting website data.\n\n## Installation\n\nInstall using `pip`:\n\n```\n$ pip install thassault\n```\n\n## Usage\n\nThe simplest usage of `thassault` requires only a URL to test against and 500 requests synchronously (one at a time). This is what it would look like:\n\n```\n$ thassault https://example.com\n.... Done!\n--- Results ---\nSuccessful requests     500\nSlowest                 0.010s\nFastest                 0.001s\nAverage                 0.003s\nTotal time              0.620s\nRequests Per Minute     48360\nRequests Per Second     806\n```\n\nIf we want to add concurrency, we'll use the `-c` option, and we can use the `-r` option to specify how many requests that we'd like to make:\n\n```\n$ thassault -r 3000 -c 10 https://example.com\n.... Done!\n--- Results ---\nSuccessful requests     3000\nSlowest                 0.010s\nFastest                 0.001s\nAverage                 0.003s\nTotal time              2.400s\nRequests Per Minute     90000\nRequests Per Second     1250\n```\n\nIf you'd like to see these results in JSON format, you can use the `-j` option with a path to a JSON file:\n\n```\n$ thassault -r 3000 -c 10 -j output.json https://example.com\n.... Done!\n```\n\n## Development\n\nFor working on `assult`, you'll need to have Python >= 3.7 (because we use `asyncio`) and [`pipenv`][1] installed. With those installed, run the following command to create a virtualenv for the project and fetch the dependencies:\n\n```\n$ pipenv install --dev\n...\n```\n\nNext, activate the virtualenv and get to work:\n\n```\n$ pipenv shell\n...\n(thassault) $\n```\n\n[1]: https://docs.pipenv.org/en/latest/\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/themisAnagno/thassault.git", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "thassault", "package_url": "https://pypi.org/project/thassault/", "platform": "", "project_url": "https://pypi.org/project/thassault/", "project_urls": {"Homepage": "https://github.com/themisAnagno/thassault.git"}, "release_url": "https://pypi.org/project/thassault/0.1.0/", "requires_dist": ["click", "requests"], "requires_python": ">=3.7.0", "summary": "Application for retrieving web load statistics", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>thassault</h1>\n<p>A CLI load testing tool for getting website data.</p>\n<h2>Installation</h2>\n<p>Install using <code>pip</code>:</p>\n<pre><code>$ pip install thassault\n</code></pre>\n<h2>Usage</h2>\n<p>The simplest usage of <code>thassault</code> requires only a URL to test against and 500 requests synchronously (one at a time). This is what it would look like:</p>\n<pre><code>$ thassault https://example.com\n.... Done!\n--- Results ---\nSuccessful requests     500\nSlowest                 0.010s\nFastest                 0.001s\nAverage                 0.003s\nTotal time              0.620s\nRequests Per Minute     48360\nRequests Per Second     806\n</code></pre>\n<p>If we want to add concurrency, we'll use the <code>-c</code> option, and we can use the <code>-r</code> option to specify how many requests that we'd like to make:</p>\n<pre><code>$ thassault -r 3000 -c 10 https://example.com\n.... Done!\n--- Results ---\nSuccessful requests     3000\nSlowest                 0.010s\nFastest                 0.001s\nAverage                 0.003s\nTotal time              2.400s\nRequests Per Minute     90000\nRequests Per Second     1250\n</code></pre>\n<p>If you'd like to see these results in JSON format, you can use the <code>-j</code> option with a path to a JSON file:</p>\n<pre><code>$ thassault -r 3000 -c 10 -j output.json https://example.com\n.... Done!\n</code></pre>\n<h2>Development</h2>\n<p>For working on <code>assult</code>, you'll need to have Python &gt;= 3.7 (because we use <code>asyncio</code>) and <a href=\"https://docs.pipenv.org/en/latest/\" rel=\"nofollow\"><code>pipenv</code></a> installed. With those installed, run the following command to create a virtualenv for the project and fetch the dependencies:</p>\n<pre><code>$ pipenv install --dev\n...\n</code></pre>\n<p>Next, activate the virtualenv and get to work:</p>\n<pre><code>$ pipenv shell\n...\n(thassault) $\n</code></pre>\n\n          </div>"}, "last_serial": 6985358, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "75ccfc368b2b8c2f0eebc241cf775df4", "sha256": "e533c1032d3722cce2056389bb92e563a280cb862df1bdcca5f00af7c6b27eaf"}, "downloads": -1, "filename": "thassault-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "75ccfc368b2b8c2f0eebc241cf775df4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7.0", "size": 5054, "upload_time": "2020-04-09T12:08:33", "upload_time_iso_8601": "2020-04-09T12:08:33.838510Z", "url": "https://files.pythonhosted.org/packages/bb/49/636be6df8206e2ca7e996fec42e87faee7dbfc82b9f642ee38c8942ab8f1/thassault-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ec1adc1614cf5fcb8836bb02052f3b8", "sha256": "8aaef3c145bc1cd6b95b5de1bbe377747f6abf800ff5f209a6eb11a407fcc37a"}, "downloads": -1, "filename": "thassault-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8ec1adc1614cf5fcb8836bb02052f3b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 5300, "upload_time": "2020-04-09T12:08:35", "upload_time_iso_8601": "2020-04-09T12:08:35.966804Z", "url": "https://files.pythonhosted.org/packages/4e/e1/840d09aa45c0d9c0e87ada2e41f5344dcdfa9af8dd03ca0f2dffdd27c021/thassault-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "75ccfc368b2b8c2f0eebc241cf775df4", "sha256": "e533c1032d3722cce2056389bb92e563a280cb862df1bdcca5f00af7c6b27eaf"}, "downloads": -1, "filename": "thassault-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "75ccfc368b2b8c2f0eebc241cf775df4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7.0", "size": 5054, "upload_time": "2020-04-09T12:08:33", "upload_time_iso_8601": "2020-04-09T12:08:33.838510Z", "url": "https://files.pythonhosted.org/packages/bb/49/636be6df8206e2ca7e996fec42e87faee7dbfc82b9f642ee38c8942ab8f1/thassault-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ec1adc1614cf5fcb8836bb02052f3b8", "sha256": "8aaef3c145bc1cd6b95b5de1bbe377747f6abf800ff5f209a6eb11a407fcc37a"}, "downloads": -1, "filename": "thassault-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8ec1adc1614cf5fcb8836bb02052f3b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 5300, "upload_time": "2020-04-09T12:08:35", "upload_time_iso_8601": "2020-04-09T12:08:35.966804Z", "url": "https://files.pythonhosted.org/packages/4e/e1/840d09aa45c0d9c0e87ada2e41f5344dcdfa9af8dd03ca0f2dffdd27c021/thassault-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:09 2020"}