{"info": {"author": "source{d}", "author_email": "machine-learning@sourced.tech", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "<p align=\"center\">\n\n</p>\n<h1 align=\"center\">Hercules</h1>\n<p align=\"center\">\n      Fast, insightful and highly customizable Git history analysis.<br><br>\n      <a href=\"http://godoc.org/gopkg.in/src-d/hercules.v10\"><img src=\"https://godoc.org/gopkg.in/src-d/hercules.v10?status.svg\" alt=\"GoDoc\"></a>\n      <a href=\"https://travis-ci.com/src-d/hercules\"><img src=\"https://travis-ci.com/src-d/hercules.svg?branch=master\" alt=\"Travis build Status\"></a>\n      <a href=\"https://ci.appveyor.com/project/vmarkovtsev/hercules\"><img src=\"https://ci.appveyor.com/api/projects/status/49f0lm3v2y6xyph3?svg=true\" alt=\"AppVeyor build status\"></a>\n      <a href=\"https://pypi.python.org/pypi/labours\"><img src=\"https://img.shields.io/pypi/v/labours.svg\" alt=\"PyPi package status\"></a>\n      <a href=\"https://hub.docker.com/r/srcd/hercules\"><img src=\"https://img.shields.io/docker/build/srcd/hercules.svg\" alt=\"Docker build status\"></a>\n      <a href=\"https://codecov.io/gh/src-d/hercules\"><img src=\"https://codecov.io/github/src-d/hercules/coverage.svg\" alt=\"Code coverage\"></a>\n      <a href=\"https://goreportcard.com/report/github.com/src-d/hercules\"><img src=\"https://goreportcard.com/badge/github.com/src-d/hercules\" alt=\"Go Report Card\"></a>\n      <a href=\"https://opensource.org/licenses/Apache-2.0\"><img src=\"https://img.shields.io/badge/License-Apache%202.0-blue.svg\" alt=\"Apache 2.0 license\"></a>\n</p>\n<p align=\"center\">\n  <a href=\"#overview\">Overview</a> \u2022\n  <a href=\"#usage\">How To Use</a> \u2022\n  <a href=\"#installation\">Installation</a> \u2022\n  <a href=\"#contributions\">Contributions</a> \u2022\n  <a href=\"#license\">License</a>\n</p>\n\n--------\n\n\nTable of Contents\n=================\n\n  * [Overview](#overview)\n  * [Installation](#installation)\n     * [Build from source](#build-from-source)\n     * [GitHub Action](#github-action)\n  * [Contributions](#contributions)\n  * [License](#license)\n  * [Usage](#usage)\n    * [Caching](#caching)\n    * [GitHub Action](#github-action-1)\n    * [Docker image](#docker-image)\n    * [Built-in analyses](#built-in-analyses)\n      * [Project burndown](#project-burndown)\n      * [Files](#files)\n      * [People](#people)\n      * [Churn matrix](#overwrites-matrix)\n      * [Code ownership](#code-ownership)\n      * [Couples](#couples)\n      * [Structural hotness](#structural-hotness)\n      * [Aligned commit series](#aligned-commit-series)\n      * [Added vs changed lines through time](#added-vs-changed-lines-through-time)\n      * [Efforts through time](#efforts-through-time)\n      * [Sentiment (positive and negative comments)](#sentiment-positive-and-negative-comments)\n      * [Everything in a single pass](#everything-in-a-single-pass)\n    * [Plugins](#plugins)\n    * [Merging](#merging)\n    * [Bad unicode errors](#bad-unicode-errors)\n    * [Plotting](#plotting)\n    * [Custom plotting backend](#custom-plotting-backend)\n    * [Caveats](#caveats)\n    * [Burndown Out-Of-Memory](#burndown-out-of-memory)\n\n## Overview\n\nHercules is an amazingly fast and highly customizable Git repository analysis engine written in Go. Batteries are included.\nPowered by [go-git](https://github.com/src-d/go-git) and [Babelfish](https://doc.bblf.sh).\n\nThere are two command-line tools: `hercules` and `labours`. The first is a program\nwritten in Go which takes a Git repository and executes a Directed Acyclic Graph (DAG) of [analysis tasks](doc/PIPELINE_ITEMS.md) over the full commit history.\nThe second is a Python script which shows some predefined plots over the collected data. These two tools are normally used together through\na pipe. It is possible to write custom analyses using the plugin system. It is also possible\nto merge several analysis results together - relevant for organizations. \nThe analyzed commit history includes branches, merges, etc.\n\nHercules has been successfully used for several internal projects at [source{d}](https://sourced.tech).\nThere are blog posts: [1](https://blog.sourced.tech/post/hercules-v4), [2](https://blog.sourced.tech/post/hercules) and\na [presentation](http://vmarkovtsev.github.io/gowayfest-2018-minsk/). Please [contribute](#contributions)\nby testing, fixing bugs, adding [new analyses](https://github.com/src-d/hercules/issues?q=is%3Aissue+is%3Aopen+label%3Anew-analysis), or coding swagger!\n\n![Hercules DAG of Burndown analysis](doc/dag.png)\n<p align=\"center\">The DAG of burndown and couples analyses with UAST diff refining. Generated with <code>hercules --burndown --burndown-people --couples --feature=uast --dry-run --dump-dag doc/dag.dot https://github.com/src-d/hercules</code></p>\n\n![git/git image](doc/linux.png)\n<p align=\"center\">torvalds/linux line burndown (granularity 30, sampling 30, resampled by year). Generated with <code>hercules --burndown --first-parent --pb https://github.com/torvalds/linux | labours -f pb -m burndown-project</code> in 1h 40min.</p>\n\n## Installation\n\nGrab `hercules` binary from the [Releases page](https://github.com/src-d/hercules/releases).\n`labours` is installable from [PyPi](https://pypi.org/):\n\n```\npip3 install labours\n```\n\n[`pip3`](https://pip.pypa.io/en/stable/installing/) is the Python package manager.\n\nNumpy and Scipy can be installed on Windows using http://www.lfd.uci.edu/~gohlke/pythonlibs/\n\n### Build from source\nYou are going to need Go (>= v1.11) and [`protoc`](https://github.com/google/protobuf/releases).\n```\ngit clone https://github.com/src-d/hercules && cd hercules\nmake\npip3 install -e ./python\n```\n\n### GitHub Action\n\nIt is possible to run Hercules as a [GitHub Action](https://help.github.com/en/articles/about-github-actions):\n[Hercules on GitHub Marketplace](https://github.com/marketplace/actions/hercules-insights).\nPlease refer to the [sample workflow](.github/workflows/main.yml) which demonstrates how to setup.\n\n## Contributions\n\n...are welcome! See [CONTRIBUTING](CONTRIBUTING.md) and [code of conduct](CODE_OF_CONDUCT.md).\n\n## License\n[Apache 2.0](LICENSE.md)\n\n## Usage\n\nThe most useful and reliably up-to-date command line reference:\n\n```\nhercules --help\n```\n\nSome examples:\n\n```\n# Use \"memory\" go-git backend and display the burndown plot. \"memory\" is the fastest but the repository's git data must fit into RAM.\nhercules --burndown https://github.com/src-d/go-git | labours -m burndown-project --resample month\n# Use \"file system\" go-git backend and print some basic information about the repository.\nhercules /path/to/cloned/go-git\n# Use \"file system\" go-git backend, cache the cloned repository to /tmp/repo-cache, use Protocol Buffers and display the burndown plot without resampling.\nhercules --burndown --pb https://github.com/git/git /tmp/repo-cache | labours -m burndown-project -f pb --resample raw\n\n# Now something fun\n# Get the linear history from git rev-list, reverse it\n# Pipe to hercules, produce burndown snapshots for every 30 days grouped by 30 days\n# Save the raw data to cache.yaml, so that later is possible to labours -i cache.yaml\n# Pipe the raw data to labours, set text font size to 16pt, use Agg matplotlib backend and save the plot to output.png\ngit rev-list HEAD | tac | hercules --commits - --burndown https://github.com/git/git | tee cache.yaml | labours -m burndown-project --font-size 16 --backend Agg --output git.png\n```\n\n`labours -i /path/to/yaml` allows to read the output from `hercules` which was saved on disk.\n\n### Caching\n\nIt is possible to store the cloned repository on disk. The subsequent analysis can run on the\ncorresponding directory instead of cloning from scratch:\n\n```\n# First time - cache\nhercules https://github.com/git/git /tmp/repo-cache\n\n# Second time - use the cache\nhercules --some-analysis /tmp/repo-cache\n```\n\n### GitHub Action\n\nThe action produces the artifact named\n`hercules_charts`. Since it is currently impossible to pack several files in one artifact, all the\ncharts and Tensorflow Projector files are packed in the inner tar archive. In order to view the embeddings,\ngo to [projector.tensorflow.org](https://projector.tensorflow.org), click \"Load\" and choose the two TSVs. Then use UMAP or T-SNE.\n\n### Docker image\n\n```\ndocker run --rm srcd/hercules hercules --burndown --pb https://github.com/git/git | docker run --rm -i -v $(pwd):/io srcd/hercules labours -f pb -m burndown-project -o /io/git_git.png\n```\n\n### Built-in analyses\n\n#### Project burndown\n\n```\nhercules --burndown\nlabours -m burndown-project\n```\n\nLine burndown statistics for the whole repository.\nExactly the same what [git-of-theseus](https://github.com/erikbern/git-of-theseus)\ndoes but much faster. Blaming is performed efficiently and incrementally using a custom RB tree tracking\nalgorithm, and only the last modification date is recorded while running the analysis.\n\nAll burndown analyses depend on the values of *granularity* and *sampling*.\nGranularity is the number of days each band in the stack consists of. Sampling\nis the frequency with which the burnout state is snapshotted. The smaller the\nvalue, the more smooth is the plot but the more work is done.\n\nThere is an option to resample the bands inside `labours`, so that you can\ndefine a very precise distribution and visualize it different ways. Besides,\nresampling aligns the bands across periodic boundaries, e.g. months or years.\nUnresampled bands are apparently not aligned and start from the project's birth date.\n\n#### Files\n\n```\nhercules --burndown --burndown-files\nlabours -m burndown-file\n```\n\nBurndown statistics for every file in the repository which is alive in the latest revision.\n\nNote: it will generate separate graph for every file. You don't want to run it on repository with many files.\n\n#### People\n\n```\nhercules --burndown --burndown-people [--people-dict=/path/to/identities]\nlabours -m burndown-person\n```\n\nBurndown statistics for the repository's contributors. If `--people-dict` is not specified, the identities are\ndiscovered by the following algorithm:\n\n0. We start from the root commit towards the HEAD. Emails and names are converted to lower case.\n1. If we process an unknown email and name, record them as a new developer.\n2. If we process a known email but unknown name, match to the developer with the matching email,\nand add the unknown name to the list of that developer's names.\n3. If we process an unknown email but known name, match to the developer with the matching name,\nand add the unknown email to the list of that developer's emails.\n\nIf `--people-dict` is specified, it should point to a text file with the custom identities. The\nformat is: every line is a single developer, it contains all the matching emails and names separated\nby `|`. The case is ignored.\n\n#### Overwrites matrix\n\n![Wireshark top 20 overwrites matrix](doc/wireshark_overwrites_matrix.png)\n<p align=\"center\">Wireshark top 20 devs - overwrites matrix</p>\n\n```\nhercules --burndown --burndown-people [--people-dict=/path/to/identities]\nlabours -m overwrites-matrix\n```\n\nBeside the burndown information, `--burndown-people` collects the added and deleted line statistics per\ndeveloper. Thus it can be visualized how many lines written by developer A are removed by developer B.\nThis indicates collaboration between people and defines expertise teams.\n\nThe format is the matrix with N rows and (N+2) columns, where N is the number of developers.\n\n1. First column is the number of lines the developer wrote.\n2. Second column is how many lines were written by the developer and deleted by unidentified developers\n(if `--people-dict` is not specified, it is always 0).\n3. The rest of the columns show how many lines were written by the developer and deleted by identified\ndevelopers.\n\nThe sequence of developers is stored in `people_sequence` YAML node.\n\n#### Code ownership\n\n![Ember.js top 20 code ownership](doc/emberjs_people.png)\n<p align=\"center\">Ember.js top 20 devs - code ownership</p>\n\n```\nhercules --burndown --burndown-people [--people-dict=/path/to/identities]\nlabours -m ownership\n```\n\n`--burndown-people` also allows to draw the code share through time stacked area plot. That is,\nhow many lines are alive at the sampled moments in time for each identified developer.\n\n#### Couples\n\n![Linux kernel file couples](doc/tfprojcouples.png)\n<p align=\"center\">torvalds/linux files' coupling in Tensorflow Projector</p>\n\n```\nhercules --couples [--people-dict=/path/to/identities]\nlabours -m couples -o <name> [--couples-tmp-dir=/tmp]\n```\n\n**Important**: it requires Tensorflow to be installed, please follow [official instructions](https://www.tensorflow.org/install/).\n\nThe files are coupled if they are changed in the same commit. The developers are coupled if they\nchange the same file. `hercules` records the number of couples throughout the whole commit history\nand outputs the two corresponding co-occurrence matrices. `labours` then trains\n[Swivel embeddings](https://github.com/src-d/tensorflow-swivel) - dense vectors which reflect the\nco-occurrence probability through the Euclidean distance. The training requires a working\n[Tensorflow](http://tensorflow.org) installation. The intermediate files are stored in the\nsystem temporary directory or `--couples-tmp-dir` if it is specified. The trained embeddings are\nwritten to the current working directory with the name depending on `-o`. The output format is TSV\nand matches [Tensorflow Projector](http://projector.tensorflow.org/) so that the files and people\ncan be visualized with t-SNE implemented in TF Projector.\n\n#### Structural hotness\n\n```\n      46  jinja2/compiler.py:visit_Template [FunctionDef]\n      42  jinja2/compiler.py:visit_For [FunctionDef]\n      34  jinja2/compiler.py:visit_Output [FunctionDef]\n      29  jinja2/environment.py:compile [FunctionDef]\n      27  jinja2/compiler.py:visit_Include [FunctionDef]\n      22  jinja2/compiler.py:visit_Macro [FunctionDef]\n      22  jinja2/compiler.py:visit_FromImport [FunctionDef]\n      21  jinja2/compiler.py:visit_Filter [FunctionDef]\n      21  jinja2/runtime.py:__call__ [FunctionDef]\n      20  jinja2/compiler.py:visit_Block [FunctionDef]\n```\n\nThanks to Babelfish, hercules is able to measure how many times each structural unit has been modified.\nBy default, it looks at functions; refer to [Semantic UAST XPath](https://docs.sourced.tech/babelfish/using-babelfish/uast-querying)\nmanual to switch to something else.\n\n```\nhercules --shotness [--shotness-xpath-*]\nlabours -m shotness\n```\n\nCouples analysis automatically loads \"shotness\" data if available.\n\n![Jinja2 functions grouped by structural hotness](doc/jinja.png)\n<p align=\"center\"><code>hercules --shotness --pb https://github.com/pallets/jinja | labours -m couples -f pb</code></p>\n\n#### Aligned commit series\n\n![tensorflow/tensorflow](doc/devs_tensorflow.png)\n<p align=\"center\">tensorflow/tensorflow aligned commit series of top 50 developers by commit number.</p>\n\n```\nhercules --devs [--people-dict=/path/to/identities]\nlabours -m devs -o <name>\n```\n\nWe record how many commits made, as well as lines added, removed and changed per day for each developer.\nWe plot the resulting commit time series using a few tricks to show the temporal grouping. In other words,\ntwo adjacent commit series should look similar after normalization.\n\n1. We compute the distance matrix of the commit series. Our distance metric is\n[Dynamic Time Warping](https://en.wikipedia.org/wiki/Dynamic_time_warping).\nWe use [FastDTW](https://cs.fit.edu/~pkc/papers/tdm04.pdf) algorithm which has linear complexity\nproportional to the length of time series. Thus the overall complexity of computing the matrix is quadratic.\n2. We compile the linear list of commit series with\n[Seriation](http://nicolas.kruchten.com/content/2018/02/seriation/) technique.\nParticularly, we solve the [Travelling Salesman Problem](https://en.wikipedia.org/wiki/Travelling_salesman_problem) which is NP-complete.\nHowever, given the typical number of developers which is less than 1,000, there is a good chance that\nthe solution does not take much time. We use [Google or-tools](https://developers.google.com/optimization/routing/tsp) solver.\n3. We find 1-dimensional clusters in the resulting path with [HDBSCAN](https://hdbscan.readthedocs.io/en/latest/how_hdbscan_works.html)\nalgorithm and assign colors accordingly.\n4. Time series are smoothed by convolving with the [Slepian window](https://en.wikipedia.org/wiki/Window_function#DPSS_or_Slepian_window).\n\nThis plot allows to discover how the development team evolved through time. It also shows \"commit flashmobs\"\nsuch as [Hacktoberfest](https://hacktoberfest.digitalocean.com/). For example, here are the revealed\ninsights from the `tensorflow/tensorflow` plot above:\n\n1. \"Tensorflow Gardener\" is classified as the only outlier.\n2. The \"blue\" group of developers covers the global maintainers and a few people who left (at the top).\n3. The \"red\" group shows how core developers join the project or become less active.\n\n#### Added vs changed lines through time\n\n![tensorflow/tensorflow](doc/add_vs_changed.png)\n<p align=\"center\">tensorflow/tensorflow added and changed lines through time.</p>\n\n```\nhercules --devs [--people-dict=/path/to/identities]\nlabours -m old-vs-new -o <name>\n```\n\n`--devs` from the previous section allows to plot how many lines were added and how many existing changed\n(deleted or replaced) through time. This plot is smoothed.\n\n#### Efforts through time\n\n![kubernetes/kubernetes](doc/k8s_efforts.png)\n<p align=\"center\">kubernetes/kubernetes efforts through time.</p>\n\n```\nhercules --devs [--people-dict=/path/to/identities]\nlabours -m devs-efforts -o <name>\n```\n\nBesides, `--devs` allows to plot how many lines have been changed (added or removed) by each developer.\nThe upper part of the plot is an accumulated (integrated) lower part. It is impossible to have the same scale\nfor both parts, so the lower values are scaled, and hence there are no lower Y axis ticks.\nThere is a difference between the efforts plot and the ownership plot, although changing lines correlate\nwith owning lines.\n\n#### Sentiment (positive and negative comments)\n\n![Django sentiment](doc/sentiment.png)\n<p align=\"center\">It can be clearly seen that Django comments were positive/optimistic in the beginning, but later became negative/pessimistic.<br><code>hercules --sentiment --pb https://github.com/django/django | labours -m sentiment -f pb</code></p>\n\nWe extract new and changed comments from source code on every commit, apply [BiDiSentiment](https://github.com/vmarkovtsev/bidisentiment)\ngeneral purpose sentiment recurrent neural network and plot the results. Requires\n[libtensorflow](https://www.tensorflow.org/install/install_go).\nE.g. [`sadly, we need to hide the rect from the documentation finder for now`](https://github.com/pygame/pygame/commit/b6091d38c8a5639d311858660b38841d96598509#diff-eae59f175858fcef57cb17e733981c73R27) is negative and\n[`Theano has a built-in optimization for logsumexp (...) so we can just write the expression directly`](https://github.com/keras-team/keras/commit/7d52af64c03e71bcd23112a7086dc8aab1b37ed2#diff-ff634bb5c5441d7052449f20018872b8R549)\nis positive. Don't expect too much though - as was written, the sentiment model is\ngeneral purpose and the code comments have different nature, so there is no magic (for now).\n\nHercules must be built with \"tensorflow\" tag - it is not by default:\n\n```\nmake TAGS=tensorflow\n```\n\nSuch a build requires [`libtensorflow`](https://www.tensorflow.org/install/install_go).\n\n#### Everything in a single pass\n\n```\nhercules --burndown --burndown-files --burndown-people --couples --shotness --devs [--people-dict=/path/to/identities]\nlabours -m all\n```\n\n### Plugins\n\nHercules has a plugin system and allows to run custom analyses. See [PLUGINS.md](PLUGINS.md).\n\n### Merging\n\n`hercules combine` is the command which joins several analysis results in Protocol Buffers format together.\n\n```\nhercules --burndown --pb https://github.com/src-d/go-git > go-git.pb\nhercules --burndown --pb https://github.com/src-d/hercules > hercules.pb\nhercules combine go-git.pb hercules.pb | labours -f pb -m burndown-project --resample M\n```\n\n### Bad unicode errors\n\nYAML does not support the whole range of Unicode characters and the parser on `labours` side\nmay raise exceptions. Filter the output from `hercules` through `fix_yaml_unicode.py` to discard\nsuch offending characters.\n\n```\nhercules --burndown --burndown-people https://github.com/... | python3 fix_yaml_unicode.py | labours -m people\n```\n\n### Plotting\n\nThese options affects all plots:\n\n```\nlabours [--style=white|black] [--backend=] [--size=Y,X]\n```\n\n`--style` sets the general style of the plot (see `labours --help`).\n`--background` changes the plot background to be either white or black.\n`--backend` chooses the Matplotlib backend.\n`--size` sets the size of the figure in inches. The default is `12,9`.\n\n(required in macOS) you can pin the default Matplotlib backend with\n\n```\necho \"backend: TkAgg\" > ~/.matplotlib/matplotlibrc\n```\n\nThese options are effective in burndown charts only:\n\n```\nlabours [--text-size] [--relative]\n```\n\n`--text-size` changes the font size, `--relative` activate the stretched burndown layout.\n\n### Custom plotting backend\n\nIt is possible to output all the information needed to draw the plots in JSON format.\nSimply append `.json` to the output (`-o`) and you are done. The data format is not fully\nspecified and depends on the Python code which generates it. Each JSON file should\ncontain `\"type\"` which reflects the plot kind.\n\n### Caveats\n\n1. Processing all the commits may fail in some rare cases. If you get an error similar to https://github.com/src-d/hercules/issues/106\nplease report there and specify `--first-parent` as a workaround.\n1. Burndown collection may fail with an Out-Of-Memory error. See the next session for the workarounds.\n1. Parsing YAML in Python is slow when the number of internal objects is big. `hercules`' output\nfor the Linux kernel in \"couples\" mode is 1.5 GB and takes more than an hour / 180GB RAM to be\nparsed. However, most of the repositories are parsed within a minute. Try using Protocol Buffers\ninstead (`hercules --pb` and `labours -f pb`).\n1. To speed up yaml parsing\n   ```\n   # Debian, Ubuntu\n   apt install libyaml-dev\n   # macOS\n   brew install yaml-cpp libyaml\n\n   # you might need to re-install pyyaml for changes to make effect\n   pip uninstall pyyaml\n   pip --no-cache-dir install pyyaml\n   ```\n\n### Burndown Out-Of-Memory\n\nIf the analyzed repository is big and extensively uses branching, the burndown stats collection may\nfail with an OOM. You should try the following:\n\n1. Read the repo from disk instead of cloning into memory.\n2. Use `--skip-blacklist` to avoid analyzing the unwanted files. It is also possible to constrain the `--language`.\n3. Use the [hibernation](doc/HIBERNATION.md) feature: `--hibernation-distance 10 --burndown-hibernation-threshold=1000`. Play with those two numbers to start hibernating right before the OOM.\n4. Hibernate on disk: `--burndown-hibernation-disk --burndown-hibernation-dir /path`.\n5. `--first-parent`, you win.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/src-d/hercules", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/src-d/hercules", "keywords": "git,mloncode,mining software repositories,hercules", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "labours", "package_url": "https://pypi.org/project/labours/", "platform": "", "project_url": "https://pypi.org/project/labours/", "project_urls": {"Download": "https://github.com/src-d/hercules", "Homepage": "https://github.com/src-d/hercules"}, "release_url": "https://pypi.org/project/labours/10.7.2/", "requires_dist": ["matplotlib (<4.0,>=2.0)", "numpy (<2.0,>=1.12.0)", "pandas (<1.0,>=0.20.0)", "PyYAML (<6.0,>=3.0)", "scipy (<1.2.2,>=0.19.0)", "protobuf (<4.0,>=3.5.0)", "munch (<3.0,>=2.0)", "hdbscan (<2.0,>=0.8.0)", "seriate (<2.0,>=1.1.2)", "fastdtw (<2.0,>=0.3.2)", "python-dateutil (<3.0,>=2.6.0)", "lifelines (<2.0,>=0.20.0)", "tqdm (<5.0,>=4.3)"], "requires_python": "", "summary": "Python companion for github.com/src-d/hercules to visualize the results.", "version": "10.7.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n</p>\n<h1>Hercules</h1>\n<p align=\"center\">\n      Fast, insightful and highly customizable Git history analysis.<br><br>\n      <a href=\"http://godoc.org/gopkg.in/src-d/hercules.v10\" rel=\"nofollow\"><img alt=\"GoDoc\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/15ee604ee90c5ce2af6de48fc80581776516dba1/68747470733a2f2f676f646f632e6f72672f676f706b672e696e2f7372632d642f68657263756c65732e7631303f7374617475732e737667\"></a>\n      <a href=\"https://travis-ci.com/src-d/hercules\" rel=\"nofollow\"><img alt=\"Travis build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/02c90c65d58c892b0ccefd7e43be294815e0f854/68747470733a2f2f7472617669732d63692e636f6d2f7372632d642f68657263756c65732e7376673f6272616e63683d6d6173746572\"></a>\n      <a href=\"https://ci.appveyor.com/project/vmarkovtsev/hercules\" rel=\"nofollow\"><img alt=\"AppVeyor build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0c51064120f902980d3b1df3eb4c15d82ef58e31/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f343966306c6d337632793678797068333f7376673d74727565\"></a>\n      <a href=\"https://pypi.python.org/pypi/labours\" rel=\"nofollow\"><img alt=\"PyPi package status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7e9f27fc28f766d9c9463e5aa637aabab06cd46/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c61626f7572732e737667\"></a>\n      <a href=\"https://hub.docker.com/r/srcd/hercules\" rel=\"nofollow\"><img alt=\"Docker build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c88edd8f42b5f5951c3d5e219d55e24a65102d8/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f6275696c642f737263642f68657263756c65732e737667\"></a>\n      <a href=\"https://codecov.io/gh/src-d/hercules\" rel=\"nofollow\"><img alt=\"Code coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/48b86cc7367d150755794312b133c98a5c8ca8c3/68747470733a2f2f636f6465636f762e696f2f6769746875622f7372632d642f68657263756c65732f636f7665726167652e737667\"></a>\n      <a href=\"https://goreportcard.com/report/github.com/src-d/hercules\" rel=\"nofollow\"><img alt=\"Go Report Card\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/242838cea485edad668ea091a0e4fdd9dbe51495/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f7372632d642f68657263756c6573\"></a>\n      <a href=\"https://opensource.org/licenses/Apache-2.0\" rel=\"nofollow\"><img alt=\"Apache 2.0 license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b97ca76cf5d8fd16c7bc4731270e0bbe53df7aa1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667\"></a>\n</p>\n<p align=\"center\">\n  <a href=\"#overview\" rel=\"nofollow\">Overview</a> \u2022\n  <a href=\"#usage\" rel=\"nofollow\">How To Use</a> \u2022\n  <a href=\"#installation\" rel=\"nofollow\">Installation</a> \u2022\n  <a href=\"#contributions\" rel=\"nofollow\">Contributions</a> \u2022\n  <a href=\"#license\" rel=\"nofollow\">License</a>\n</p>\n<hr>\n<h1>Table of Contents</h1>\n<ul>\n<li><a href=\"#overview\" rel=\"nofollow\">Overview</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a>\n<ul>\n<li><a href=\"#build-from-source\" rel=\"nofollow\">Build from source</a></li>\n<li><a href=\"#github-action\" rel=\"nofollow\">GitHub Action</a></li>\n</ul>\n</li>\n<li><a href=\"#contributions\" rel=\"nofollow\">Contributions</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#caching\" rel=\"nofollow\">Caching</a></li>\n<li><a href=\"#github-action-1\" rel=\"nofollow\">GitHub Action</a></li>\n<li><a href=\"#docker-image\" rel=\"nofollow\">Docker image</a></li>\n<li><a href=\"#built-in-analyses\" rel=\"nofollow\">Built-in analyses</a>\n<ul>\n<li><a href=\"#project-burndown\" rel=\"nofollow\">Project burndown</a></li>\n<li><a href=\"#files\" rel=\"nofollow\">Files</a></li>\n<li><a href=\"#people\" rel=\"nofollow\">People</a></li>\n<li><a href=\"#overwrites-matrix\" rel=\"nofollow\">Churn matrix</a></li>\n<li><a href=\"#code-ownership\" rel=\"nofollow\">Code ownership</a></li>\n<li><a href=\"#couples\" rel=\"nofollow\">Couples</a></li>\n<li><a href=\"#structural-hotness\" rel=\"nofollow\">Structural hotness</a></li>\n<li><a href=\"#aligned-commit-series\" rel=\"nofollow\">Aligned commit series</a></li>\n<li><a href=\"#added-vs-changed-lines-through-time\" rel=\"nofollow\">Added vs changed lines through time</a></li>\n<li><a href=\"#efforts-through-time\" rel=\"nofollow\">Efforts through time</a></li>\n<li><a href=\"#sentiment-positive-and-negative-comments\" rel=\"nofollow\">Sentiment (positive and negative comments)</a></li>\n<li><a href=\"#everything-in-a-single-pass\" rel=\"nofollow\">Everything in a single pass</a></li>\n</ul>\n</li>\n<li><a href=\"#plugins\" rel=\"nofollow\">Plugins</a></li>\n<li><a href=\"#merging\" rel=\"nofollow\">Merging</a></li>\n<li><a href=\"#bad-unicode-errors\" rel=\"nofollow\">Bad unicode errors</a></li>\n<li><a href=\"#plotting\" rel=\"nofollow\">Plotting</a></li>\n<li><a href=\"#custom-plotting-backend\" rel=\"nofollow\">Custom plotting backend</a></li>\n<li><a href=\"#caveats\" rel=\"nofollow\">Caveats</a></li>\n<li><a href=\"#burndown-out-of-memory\" rel=\"nofollow\">Burndown Out-Of-Memory</a></li>\n</ul>\n</li>\n</ul>\n<h2>Overview</h2>\n<p>Hercules is an amazingly fast and highly customizable Git repository analysis engine written in Go. Batteries are included.\nPowered by <a href=\"https://github.com/src-d/go-git\" rel=\"nofollow\">go-git</a> and <a href=\"https://doc.bblf.sh\" rel=\"nofollow\">Babelfish</a>.</p>\n<p>There are two command-line tools: <code>hercules</code> and <code>labours</code>. The first is a program\nwritten in Go which takes a Git repository and executes a Directed Acyclic Graph (DAG) of <a href=\"doc/PIPELINE_ITEMS.md\" rel=\"nofollow\">analysis tasks</a> over the full commit history.\nThe second is a Python script which shows some predefined plots over the collected data. These two tools are normally used together through\na pipe. It is possible to write custom analyses using the plugin system. It is also possible\nto merge several analysis results together - relevant for organizations.\nThe analyzed commit history includes branches, merges, etc.</p>\n<p>Hercules has been successfully used for several internal projects at <a href=\"https://sourced.tech\" rel=\"nofollow\">source{d}</a>.\nThere are blog posts: <a href=\"https://blog.sourced.tech/post/hercules-v4\" rel=\"nofollow\">1</a>, <a href=\"https://blog.sourced.tech/post/hercules\" rel=\"nofollow\">2</a> and\na <a href=\"http://vmarkovtsev.github.io/gowayfest-2018-minsk/\" rel=\"nofollow\">presentation</a>. Please <a href=\"#contributions\" rel=\"nofollow\">contribute</a>\nby testing, fixing bugs, adding <a href=\"https://github.com/src-d/hercules/issues?q=is%3Aissue+is%3Aopen+label%3Anew-analysis\" rel=\"nofollow\">new analyses</a>, or coding swagger!</p>\n<p><img alt=\"Hercules DAG of Burndown analysis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35a96734e8a95d14cdd589e152ef97b75349ffae/646f632f6461672e706e67\"></p>\n<p align=\"center\">The DAG of burndown and couples analyses with UAST diff refining. Generated with <code>hercules --burndown --burndown-people --couples --feature=uast --dry-run --dump-dag doc/dag.dot https://github.com/src-d/hercules</code></p>\n<p><img alt=\"git/git image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/26bd678c84cee2398e297204802894dd505d721a/646f632f6c696e75782e706e67\"></p>\n<p align=\"center\">torvalds/linux line burndown (granularity 30, sampling 30, resampled by year). Generated with <code>hercules --burndown --first-parent --pb https://github.com/torvalds/linux | labours -f pb -m burndown-project</code> in 1h 40min.</p>\n<h2>Installation</h2>\n<p>Grab <code>hercules</code> binary from the <a href=\"https://github.com/src-d/hercules/releases\" rel=\"nofollow\">Releases page</a>.\n<code>labours</code> is installable from <a href=\"https://pypi.org/\" rel=\"nofollow\">PyPi</a>:</p>\n<pre><code>pip3 install labours\n</code></pre>\n<p><a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\"><code>pip3</code></a> is the Python package manager.</p>\n<p>Numpy and Scipy can be installed on Windows using <a href=\"http://www.lfd.uci.edu/%7Egohlke/pythonlibs/\" rel=\"nofollow\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a></p>\n<h3>Build from source</h3>\n<p>You are going to need Go (&gt;= v1.11) and <a href=\"https://github.com/google/protobuf/releases\" rel=\"nofollow\"><code>protoc</code></a>.</p>\n<pre><code>git clone https://github.com/src-d/hercules &amp;&amp; cd hercules\nmake\npip3 install -e ./python\n</code></pre>\n<h3>GitHub Action</h3>\n<p>It is possible to run Hercules as a <a href=\"https://help.github.com/en/articles/about-github-actions\" rel=\"nofollow\">GitHub Action</a>:\n<a href=\"https://github.com/marketplace/actions/hercules-insights\" rel=\"nofollow\">Hercules on GitHub Marketplace</a>.\nPlease refer to the <a href=\".github/workflows/main.yml\" rel=\"nofollow\">sample workflow</a> which demonstrates how to setup.</p>\n<h2>Contributions</h2>\n<p>...are welcome! See <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING</a> and <a href=\"CODE_OF_CONDUCT.md\" rel=\"nofollow\">code of conduct</a>.</p>\n<h2>License</h2>\n<p><a href=\"LICENSE.md\" rel=\"nofollow\">Apache 2.0</a></p>\n<h2>Usage</h2>\n<p>The most useful and reliably up-to-date command line reference:</p>\n<pre><code>hercules --help\n</code></pre>\n<p>Some examples:</p>\n<pre><code># Use \"memory\" go-git backend and display the burndown plot. \"memory\" is the fastest but the repository's git data must fit into RAM.\nhercules --burndown https://github.com/src-d/go-git | labours -m burndown-project --resample month\n# Use \"file system\" go-git backend and print some basic information about the repository.\nhercules /path/to/cloned/go-git\n# Use \"file system\" go-git backend, cache the cloned repository to /tmp/repo-cache, use Protocol Buffers and display the burndown plot without resampling.\nhercules --burndown --pb https://github.com/git/git /tmp/repo-cache | labours -m burndown-project -f pb --resample raw\n\n# Now something fun\n# Get the linear history from git rev-list, reverse it\n# Pipe to hercules, produce burndown snapshots for every 30 days grouped by 30 days\n# Save the raw data to cache.yaml, so that later is possible to labours -i cache.yaml\n# Pipe the raw data to labours, set text font size to 16pt, use Agg matplotlib backend and save the plot to output.png\ngit rev-list HEAD | tac | hercules --commits - --burndown https://github.com/git/git | tee cache.yaml | labours -m burndown-project --font-size 16 --backend Agg --output git.png\n</code></pre>\n<p><code>labours -i /path/to/yaml</code> allows to read the output from <code>hercules</code> which was saved on disk.</p>\n<h3>Caching</h3>\n<p>It is possible to store the cloned repository on disk. The subsequent analysis can run on the\ncorresponding directory instead of cloning from scratch:</p>\n<pre><code># First time - cache\nhercules https://github.com/git/git /tmp/repo-cache\n\n# Second time - use the cache\nhercules --some-analysis /tmp/repo-cache\n</code></pre>\n<h3>GitHub Action</h3>\n<p>The action produces the artifact named\n<code>hercules_charts</code>. Since it is currently impossible to pack several files in one artifact, all the\ncharts and Tensorflow Projector files are packed in the inner tar archive. In order to view the embeddings,\ngo to <a href=\"https://projector.tensorflow.org\" rel=\"nofollow\">projector.tensorflow.org</a>, click \"Load\" and choose the two TSVs. Then use UMAP or T-SNE.</p>\n<h3>Docker image</h3>\n<pre><code>docker run --rm srcd/hercules hercules --burndown --pb https://github.com/git/git | docker run --rm -i -v $(pwd):/io srcd/hercules labours -f pb -m burndown-project -o /io/git_git.png\n</code></pre>\n<h3>Built-in analyses</h3>\n<h4>Project burndown</h4>\n<pre><code>hercules --burndown\nlabours -m burndown-project\n</code></pre>\n<p>Line burndown statistics for the whole repository.\nExactly the same what <a href=\"https://github.com/erikbern/git-of-theseus\" rel=\"nofollow\">git-of-theseus</a>\ndoes but much faster. Blaming is performed efficiently and incrementally using a custom RB tree tracking\nalgorithm, and only the last modification date is recorded while running the analysis.</p>\n<p>All burndown analyses depend on the values of <em>granularity</em> and <em>sampling</em>.\nGranularity is the number of days each band in the stack consists of. Sampling\nis the frequency with which the burnout state is snapshotted. The smaller the\nvalue, the more smooth is the plot but the more work is done.</p>\n<p>There is an option to resample the bands inside <code>labours</code>, so that you can\ndefine a very precise distribution and visualize it different ways. Besides,\nresampling aligns the bands across periodic boundaries, e.g. months or years.\nUnresampled bands are apparently not aligned and start from the project's birth date.</p>\n<h4>Files</h4>\n<pre><code>hercules --burndown --burndown-files\nlabours -m burndown-file\n</code></pre>\n<p>Burndown statistics for every file in the repository which is alive in the latest revision.</p>\n<p>Note: it will generate separate graph for every file. You don't want to run it on repository with many files.</p>\n<h4>People</h4>\n<pre><code>hercules --burndown --burndown-people [--people-dict=/path/to/identities]\nlabours -m burndown-person\n</code></pre>\n<p>Burndown statistics for the repository's contributors. If <code>--people-dict</code> is not specified, the identities are\ndiscovered by the following algorithm:</p>\n<ol>\n<li>We start from the root commit towards the HEAD. Emails and names are converted to lower case.</li>\n<li>If we process an unknown email and name, record them as a new developer.</li>\n<li>If we process a known email but unknown name, match to the developer with the matching email,\nand add the unknown name to the list of that developer's names.</li>\n<li>If we process an unknown email but known name, match to the developer with the matching name,\nand add the unknown email to the list of that developer's emails.</li>\n</ol>\n<p>If <code>--people-dict</code> is specified, it should point to a text file with the custom identities. The\nformat is: every line is a single developer, it contains all the matching emails and names separated\nby <code>|</code>. The case is ignored.</p>\n<h4>Overwrites matrix</h4>\n<p><img alt=\"Wireshark top 20 overwrites matrix\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1cb537143878be5250ab4d730c236b297ec32d3e/646f632f77697265736861726b5f6f7665727772697465735f6d61747269782e706e67\"></p>\n<p align=\"center\">Wireshark top 20 devs - overwrites matrix</p>\n<pre><code>hercules --burndown --burndown-people [--people-dict=/path/to/identities]\nlabours -m overwrites-matrix\n</code></pre>\n<p>Beside the burndown information, <code>--burndown-people</code> collects the added and deleted line statistics per\ndeveloper. Thus it can be visualized how many lines written by developer A are removed by developer B.\nThis indicates collaboration between people and defines expertise teams.</p>\n<p>The format is the matrix with N rows and (N+2) columns, where N is the number of developers.</p>\n<ol>\n<li>First column is the number of lines the developer wrote.</li>\n<li>Second column is how many lines were written by the developer and deleted by unidentified developers\n(if <code>--people-dict</code> is not specified, it is always 0).</li>\n<li>The rest of the columns show how many lines were written by the developer and deleted by identified\ndevelopers.</li>\n</ol>\n<p>The sequence of developers is stored in <code>people_sequence</code> YAML node.</p>\n<h4>Code ownership</h4>\n<p><img alt=\"Ember.js top 20 code ownership\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35affac1f1be2f91c8a33068327209e840dc9cf0/646f632f656d6265726a735f70656f706c652e706e67\"></p>\n<p align=\"center\">Ember.js top 20 devs - code ownership</p>\n<pre><code>hercules --burndown --burndown-people [--people-dict=/path/to/identities]\nlabours -m ownership\n</code></pre>\n<p><code>--burndown-people</code> also allows to draw the code share through time stacked area plot. That is,\nhow many lines are alive at the sampled moments in time for each identified developer.</p>\n<h4>Couples</h4>\n<p><img alt=\"Linux kernel file couples\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25225e01f0470dc4fb09740a40863443ae9a1e7e/646f632f746670726f6a636f75706c65732e706e67\"></p>\n<p align=\"center\">torvalds/linux files' coupling in Tensorflow Projector</p>\n<pre><code>hercules --couples [--people-dict=/path/to/identities]\nlabours -m couples -o &lt;name&gt; [--couples-tmp-dir=/tmp]\n</code></pre>\n<p><strong>Important</strong>: it requires Tensorflow to be installed, please follow <a href=\"https://www.tensorflow.org/install/\" rel=\"nofollow\">official instructions</a>.</p>\n<p>The files are coupled if they are changed in the same commit. The developers are coupled if they\nchange the same file. <code>hercules</code> records the number of couples throughout the whole commit history\nand outputs the two corresponding co-occurrence matrices. <code>labours</code> then trains\n<a href=\"https://github.com/src-d/tensorflow-swivel\" rel=\"nofollow\">Swivel embeddings</a> - dense vectors which reflect the\nco-occurrence probability through the Euclidean distance. The training requires a working\n<a href=\"http://tensorflow.org\" rel=\"nofollow\">Tensorflow</a> installation. The intermediate files are stored in the\nsystem temporary directory or <code>--couples-tmp-dir</code> if it is specified. The trained embeddings are\nwritten to the current working directory with the name depending on <code>-o</code>. The output format is TSV\nand matches <a href=\"http://projector.tensorflow.org/\" rel=\"nofollow\">Tensorflow Projector</a> so that the files and people\ncan be visualized with t-SNE implemented in TF Projector.</p>\n<h4>Structural hotness</h4>\n<pre><code>      46  jinja2/compiler.py:visit_Template [FunctionDef]\n      42  jinja2/compiler.py:visit_For [FunctionDef]\n      34  jinja2/compiler.py:visit_Output [FunctionDef]\n      29  jinja2/environment.py:compile [FunctionDef]\n      27  jinja2/compiler.py:visit_Include [FunctionDef]\n      22  jinja2/compiler.py:visit_Macro [FunctionDef]\n      22  jinja2/compiler.py:visit_FromImport [FunctionDef]\n      21  jinja2/compiler.py:visit_Filter [FunctionDef]\n      21  jinja2/runtime.py:__call__ [FunctionDef]\n      20  jinja2/compiler.py:visit_Block [FunctionDef]\n</code></pre>\n<p>Thanks to Babelfish, hercules is able to measure how many times each structural unit has been modified.\nBy default, it looks at functions; refer to <a href=\"https://docs.sourced.tech/babelfish/using-babelfish/uast-querying\" rel=\"nofollow\">Semantic UAST XPath</a>\nmanual to switch to something else.</p>\n<pre><code>hercules --shotness [--shotness-xpath-*]\nlabours -m shotness\n</code></pre>\n<p>Couples analysis automatically loads \"shotness\" data if available.</p>\n<p><img alt=\"Jinja2 functions grouped by structural hotness\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a0a16a6ede0eaa468632d2e17358caf7a9dde256/646f632f6a696e6a612e706e67\"></p>\n<p align=\"center\"><code>hercules --shotness --pb https://github.com/pallets/jinja | labours -m couples -f pb</code></p>\n<h4>Aligned commit series</h4>\n<p><img alt=\"tensorflow/tensorflow\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5793b547024a7dc95f8a92944847457530afc85b/646f632f646576735f74656e736f72666c6f772e706e67\"></p>\n<p align=\"center\">tensorflow/tensorflow aligned commit series of top 50 developers by commit number.</p>\n<pre><code>hercules --devs [--people-dict=/path/to/identities]\nlabours -m devs -o &lt;name&gt;\n</code></pre>\n<p>We record how many commits made, as well as lines added, removed and changed per day for each developer.\nWe plot the resulting commit time series using a few tricks to show the temporal grouping. In other words,\ntwo adjacent commit series should look similar after normalization.</p>\n<ol>\n<li>We compute the distance matrix of the commit series. Our distance metric is\n<a href=\"https://en.wikipedia.org/wiki/Dynamic_time_warping\" rel=\"nofollow\">Dynamic Time Warping</a>.\nWe use <a href=\"https://cs.fit.edu/%7Epkc/papers/tdm04.pdf\" rel=\"nofollow\">FastDTW</a> algorithm which has linear complexity\nproportional to the length of time series. Thus the overall complexity of computing the matrix is quadratic.</li>\n<li>We compile the linear list of commit series with\n<a href=\"http://nicolas.kruchten.com/content/2018/02/seriation/\" rel=\"nofollow\">Seriation</a> technique.\nParticularly, we solve the <a href=\"https://en.wikipedia.org/wiki/Travelling_salesman_problem\" rel=\"nofollow\">Travelling Salesman Problem</a> which is NP-complete.\nHowever, given the typical number of developers which is less than 1,000, there is a good chance that\nthe solution does not take much time. We use <a href=\"https://developers.google.com/optimization/routing/tsp\" rel=\"nofollow\">Google or-tools</a> solver.</li>\n<li>We find 1-dimensional clusters in the resulting path with <a href=\"https://hdbscan.readthedocs.io/en/latest/how_hdbscan_works.html\" rel=\"nofollow\">HDBSCAN</a>\nalgorithm and assign colors accordingly.</li>\n<li>Time series are smoothed by convolving with the <a href=\"https://en.wikipedia.org/wiki/Window_function#DPSS_or_Slepian_window\" rel=\"nofollow\">Slepian window</a>.</li>\n</ol>\n<p>This plot allows to discover how the development team evolved through time. It also shows \"commit flashmobs\"\nsuch as <a href=\"https://hacktoberfest.digitalocean.com/\" rel=\"nofollow\">Hacktoberfest</a>. For example, here are the revealed\ninsights from the <code>tensorflow/tensorflow</code> plot above:</p>\n<ol>\n<li>\"Tensorflow Gardener\" is classified as the only outlier.</li>\n<li>The \"blue\" group of developers covers the global maintainers and a few people who left (at the top).</li>\n<li>The \"red\" group shows how core developers join the project or become less active.</li>\n</ol>\n<h4>Added vs changed lines through time</h4>\n<p><img alt=\"tensorflow/tensorflow\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7c692671bf141318897298dd8e5d3a8e096ae7b/646f632f6164645f76735f6368616e6765642e706e67\"></p>\n<p align=\"center\">tensorflow/tensorflow added and changed lines through time.</p>\n<pre><code>hercules --devs [--people-dict=/path/to/identities]\nlabours -m old-vs-new -o &lt;name&gt;\n</code></pre>\n<p><code>--devs</code> from the previous section allows to plot how many lines were added and how many existing changed\n(deleted or replaced) through time. This plot is smoothed.</p>\n<h4>Efforts through time</h4>\n<p><img alt=\"kubernetes/kubernetes\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9d413cb84b6f4db0a1b6a66364935490160352a/646f632f6b38735f6566666f7274732e706e67\"></p>\n<p align=\"center\">kubernetes/kubernetes efforts through time.</p>\n<pre><code>hercules --devs [--people-dict=/path/to/identities]\nlabours -m devs-efforts -o &lt;name&gt;\n</code></pre>\n<p>Besides, <code>--devs</code> allows to plot how many lines have been changed (added or removed) by each developer.\nThe upper part of the plot is an accumulated (integrated) lower part. It is impossible to have the same scale\nfor both parts, so the lower values are scaled, and hence there are no lower Y axis ticks.\nThere is a difference between the efforts plot and the ownership plot, although changing lines correlate\nwith owning lines.</p>\n<h4>Sentiment (positive and negative comments)</h4>\n<p><img alt=\"Django sentiment\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6d0b12ef6b53e76d1fa2c16251a76b484687aab1/646f632f73656e74696d656e742e706e67\"></p>\n<p align=\"center\">It can be clearly seen that Django comments were positive/optimistic in the beginning, but later became negative/pessimistic.<br><code>hercules --sentiment --pb https://github.com/django/django | labours -m sentiment -f pb</code></p>\n<p>We extract new and changed comments from source code on every commit, apply <a href=\"https://github.com/vmarkovtsev/bidisentiment\" rel=\"nofollow\">BiDiSentiment</a>\ngeneral purpose sentiment recurrent neural network and plot the results. Requires\n<a href=\"https://www.tensorflow.org/install/install_go\" rel=\"nofollow\">libtensorflow</a>.\nE.g. <a href=\"https://github.com/pygame/pygame/commit/b6091d38c8a5639d311858660b38841d96598509#diff-eae59f175858fcef57cb17e733981c73R27\" rel=\"nofollow\"><code>sadly, we need to hide the rect from the documentation finder for now</code></a> is negative and\n<a href=\"https://github.com/keras-team/keras/commit/7d52af64c03e71bcd23112a7086dc8aab1b37ed2#diff-ff634bb5c5441d7052449f20018872b8R549\" rel=\"nofollow\"><code>Theano has a built-in optimization for logsumexp (...) so we can just write the expression directly</code></a>\nis positive. Don't expect too much though - as was written, the sentiment model is\ngeneral purpose and the code comments have different nature, so there is no magic (for now).</p>\n<p>Hercules must be built with \"tensorflow\" tag - it is not by default:</p>\n<pre><code>make TAGS=tensorflow\n</code></pre>\n<p>Such a build requires <a href=\"https://www.tensorflow.org/install/install_go\" rel=\"nofollow\"><code>libtensorflow</code></a>.</p>\n<h4>Everything in a single pass</h4>\n<pre><code>hercules --burndown --burndown-files --burndown-people --couples --shotness --devs [--people-dict=/path/to/identities]\nlabours -m all\n</code></pre>\n<h3>Plugins</h3>\n<p>Hercules has a plugin system and allows to run custom analyses. See <a href=\"PLUGINS.md\" rel=\"nofollow\">PLUGINS.md</a>.</p>\n<h3>Merging</h3>\n<p><code>hercules combine</code> is the command which joins several analysis results in Protocol Buffers format together.</p>\n<pre><code>hercules --burndown --pb https://github.com/src-d/go-git &gt; go-git.pb\nhercules --burndown --pb https://github.com/src-d/hercules &gt; hercules.pb\nhercules combine go-git.pb hercules.pb | labours -f pb -m burndown-project --resample M\n</code></pre>\n<h3>Bad unicode errors</h3>\n<p>YAML does not support the whole range of Unicode characters and the parser on <code>labours</code> side\nmay raise exceptions. Filter the output from <code>hercules</code> through <code>fix_yaml_unicode.py</code> to discard\nsuch offending characters.</p>\n<pre><code>hercules --burndown --burndown-people https://github.com/... | python3 fix_yaml_unicode.py | labours -m people\n</code></pre>\n<h3>Plotting</h3>\n<p>These options affects all plots:</p>\n<pre><code>labours [--style=white|black] [--backend=] [--size=Y,X]\n</code></pre>\n<p><code>--style</code> sets the general style of the plot (see <code>labours --help</code>).\n<code>--background</code> changes the plot background to be either white or black.\n<code>--backend</code> chooses the Matplotlib backend.\n<code>--size</code> sets the size of the figure in inches. The default is <code>12,9</code>.</p>\n<p>(required in macOS) you can pin the default Matplotlib backend with</p>\n<pre><code>echo \"backend: TkAgg\" &gt; ~/.matplotlib/matplotlibrc\n</code></pre>\n<p>These options are effective in burndown charts only:</p>\n<pre><code>labours [--text-size] [--relative]\n</code></pre>\n<p><code>--text-size</code> changes the font size, <code>--relative</code> activate the stretched burndown layout.</p>\n<h3>Custom plotting backend</h3>\n<p>It is possible to output all the information needed to draw the plots in JSON format.\nSimply append <code>.json</code> to the output (<code>-o</code>) and you are done. The data format is not fully\nspecified and depends on the Python code which generates it. Each JSON file should\ncontain <code>\"type\"</code> which reflects the plot kind.</p>\n<h3>Caveats</h3>\n<ol>\n<li>Processing all the commits may fail in some rare cases. If you get an error similar to <a href=\"https://github.com/src-d/hercules/issues/106\" rel=\"nofollow\">https://github.com/src-d/hercules/issues/106</a>\nplease report there and specify <code>--first-parent</code> as a workaround.</li>\n<li>Burndown collection may fail with an Out-Of-Memory error. See the next session for the workarounds.</li>\n<li>Parsing YAML in Python is slow when the number of internal objects is big. <code>hercules</code>' output\nfor the Linux kernel in \"couples\" mode is 1.5 GB and takes more than an hour / 180GB RAM to be\nparsed. However, most of the repositories are parsed within a minute. Try using Protocol Buffers\ninstead (<code>hercules --pb</code> and <code>labours -f pb</code>).</li>\n<li>To speed up yaml parsing\n<pre><code># Debian, Ubuntu\napt install libyaml-dev\n# macOS\nbrew install yaml-cpp libyaml\n\n# you might need to re-install pyyaml for changes to make effect\npip uninstall pyyaml\npip --no-cache-dir install pyyaml\n</code></pre>\n</li>\n</ol>\n<h3>Burndown Out-Of-Memory</h3>\n<p>If the analyzed repository is big and extensively uses branching, the burndown stats collection may\nfail with an OOM. You should try the following:</p>\n<ol>\n<li>Read the repo from disk instead of cloning into memory.</li>\n<li>Use <code>--skip-blacklist</code> to avoid analyzing the unwanted files. It is also possible to constrain the <code>--language</code>.</li>\n<li>Use the <a href=\"doc/HIBERNATION.md\" rel=\"nofollow\">hibernation</a> feature: <code>--hibernation-distance 10 --burndown-hibernation-threshold=1000</code>. Play with those two numbers to start hibernating right before the OOM.</li>\n<li>Hibernate on disk: <code>--burndown-hibernation-disk --burndown-hibernation-dir /path</code>.</li>\n<li><code>--first-parent</code>, you win.</li>\n</ol>\n\n          </div>"}, "last_serial": 6454392, "releases": {"10.0.0": [{"comment_text": "", "digests": {"md5": "2648d7a3c906068d6f27c41a871aa8bd", "sha256": "8e00a209c00fa2b3bb5eae0af35048698a1749a34254dd833410f788cbee7ba2"}, "downloads": -1, "filename": "labours-10.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2648d7a3c906068d6f27c41a871aa8bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 55953, "upload_time": "2019-03-23T08:54:16", "upload_time_iso_8601": "2019-03-23T08:54:16.383581Z", "url": "https://files.pythonhosted.org/packages/1f/9a/0bc624835472281121090d7ef0c1e274351709b897796a50a0662527a0d7/labours-10.0.0-py3-none-any.whl", "yanked": false}], "10.0.1": [{"comment_text": "", "digests": {"md5": "2a7afa25590a5b16ef9dfd2c813d9fc5", "sha256": "2da3a15e68b2dcd62117fcec47a6b5ceb396c18b62812fd2a8d7aa24a48dbade"}, "downloads": -1, "filename": "labours-10.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2a7afa25590a5b16ef9dfd2c813d9fc5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 56497, "upload_time": "2019-04-06T15:20:07", "upload_time_iso_8601": "2019-04-06T15:20:07.707218Z", "url": "https://files.pythonhosted.org/packages/d0/2e/f6268dcb4d2b8eb67ba823ea872d246b26ca8b9a8025030f0ae51c74fa20/labours-10.0.1-py3-none-any.whl", "yanked": false}], "10.0.2": [{"comment_text": "", "digests": {"md5": "14cb49fa8f78ee0d87926258cdeccb52", "sha256": "8b9824677b5d77e7677647d33821f14aa0989cf11e077ed4823ebb81fc07f9be"}, "downloads": -1, "filename": "labours-10.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "14cb49fa8f78ee0d87926258cdeccb52", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 56498, "upload_time": "2019-04-09T07:12:19", "upload_time_iso_8601": "2019-04-09T07:12:19.655377Z", "url": "https://files.pythonhosted.org/packages/fe/12/0b55ab2985a9a80f0bec20ac979dc5e80c3b7575089178de3bd0eb135a24/labours-10.0.2-py3-none-any.whl", "yanked": false}], "10.0.3": [{"comment_text": "", "digests": {"md5": "f365ac4be0751844b3b392d0ba70324e", "sha256": "09dde4997e7dd7608ae0cb20393dda49d00a3a55b11675d4148a2c822215f103"}, "downloads": -1, "filename": "labours-10.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f365ac4be0751844b3b392d0ba70324e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 56969, "upload_time": "2019-04-09T06:46:00", "upload_time_iso_8601": "2019-04-09T06:46:00.889199Z", "url": "https://files.pythonhosted.org/packages/da/b1/f84d56ffe1a6ef9093eaf70e47d29137ab6658077fe610cd989e8227e8f0/labours-10.0.3-py3-none-any.whl", "yanked": false}], "10.0.4": [{"comment_text": "", "digests": {"md5": "13db9fac259cfd8d98c51b57d6cd77d7", "sha256": "31bb22a7f9bc1555c2b57eee144676d23d91d1161e30d1726025e1e529969bed"}, "downloads": -1, "filename": "labours-10.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "13db9fac259cfd8d98c51b57d6cd77d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 56969, "upload_time": "2019-04-09T21:46:11", "upload_time_iso_8601": "2019-04-09T21:46:11.432196Z", "url": "https://files.pythonhosted.org/packages/ef/a3/9158d7a318b1949db4c2c2fa2c8b5857da1a9cb4b07a17ceca8c98b92d5b/labours-10.0.4-py3-none-any.whl", "yanked": false}], "10.1.0": [{"comment_text": "", "digests": {"md5": "7adc0954963e4f157f88f09d845cf8fa", "sha256": "c3a945454e47a69db390f508ca59b30ce137b776ce76c89e0f8e9a8bb2361e5e"}, "downloads": -1, "filename": "labours-10.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7adc0954963e4f157f88f09d845cf8fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 57090, "upload_time": "2019-04-26T08:53:46", "upload_time_iso_8601": "2019-04-26T08:53:46.214779Z", "url": "https://files.pythonhosted.org/packages/f8/ce/d6a4818f65e7637ef342fb654c36c2891394164dcdec63d7383a372ffda1/labours-10.1.0-py3-none-any.whl", "yanked": false}], "10.2.0": [{"comment_text": "", "digests": {"md5": "b04d3be3858d7d03c0409287b7463c64", "sha256": "742099da014a383a0a65b536c0bf947c59e30ae6441a732910a98dc6a0d4ec13"}, "downloads": -1, "filename": "labours-10.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b04d3be3858d7d03c0409287b7463c64", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 57677, "upload_time": "2019-06-21T11:32:11", "upload_time_iso_8601": "2019-06-21T11:32:11.429900Z", "url": "https://files.pythonhosted.org/packages/38/a5/25c894dd03a141d309c4ef85f823273f431a9b3d8341911a4e27f7615cc9/labours-10.2.0-py3-none-any.whl", "yanked": false}], "10.3.0": [{"comment_text": "", "digests": {"md5": "f6868755c2456e003db8c0498af2d89a", "sha256": "b644bd5b1cf3b88b9f8bb403b0cc66eea1ca5fccf239107267317dd81dee4515"}, "downloads": -1, "filename": "labours-10.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f6868755c2456e003db8c0498af2d89a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 57688, "upload_time": "2019-07-11T20:59:27", "upload_time_iso_8601": "2019-07-11T20:59:27.430782Z", "url": "https://files.pythonhosted.org/packages/32/88/bc9f4ffd1c325e4824abd5a46a35e05aa9381c609b2d496ab38c92ba4486/labours-10.3.0-py3-none-any.whl", "yanked": false}], "10.4.0": [{"comment_text": "", "digests": {"md5": "1d35794fd35879188c80ac1e923fed83", "sha256": "917e4af10e7d5a5f4aa401b0eebfad31426fd9b63589d875bb9c84b81fc99793"}, "downloads": -1, "filename": "labours-10.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1d35794fd35879188c80ac1e923fed83", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 57780, "upload_time": "2019-09-18T09:26:39", "upload_time_iso_8601": "2019-09-18T09:26:39.861890Z", "url": "https://files.pythonhosted.org/packages/2c/1f/1d941dcc4e7a5a9d919d00d4df226715abb46e02a8dea4d84fd3bfb12a51/labours-10.4.0-py3-none-any.whl", "yanked": false}], "10.4.2": [{"comment_text": "", "digests": {"md5": "39525df9a8185043b8634cc5dcb41f25", "sha256": "93eeb6387bb5696e2d37a96911be7cfd9686452e62ab2cec17982d47ddb705b9"}, "downloads": -1, "filename": "labours-10.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "39525df9a8185043b8634cc5dcb41f25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 57874, "upload_time": "2019-09-28T18:03:09", "upload_time_iso_8601": "2019-09-28T18:03:09.874337Z", "url": "https://files.pythonhosted.org/packages/d6/5b/fa14316d1ea4f02a67446d900dc86eaa6f26bfa621e7dfce6ea3327422bc/labours-10.4.2-py3-none-any.whl", "yanked": false}], "10.4.3": [{"comment_text": "", "digests": {"md5": "affaaa1e1d3bd7c4ddb2c1ee705fe04d", "sha256": "ca8ff52e1ea7e9a3c16f69af0c3af5d9285d71db28588013605f24c4893d1580"}, "downloads": -1, "filename": "labours-10.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "affaaa1e1d3bd7c4ddb2c1ee705fe04d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 58032, "upload_time": "2019-09-28T19:00:03", "upload_time_iso_8601": "2019-09-28T19:00:03.889174Z", "url": "https://files.pythonhosted.org/packages/d1/6c/4a3c94964fab583ba8b64e7d05b2907fd5fe453841e106a4dcf8a5cd80cc/labours-10.4.3-py3-none-any.whl", "yanked": false}], "10.5.0": [{"comment_text": "", "digests": {"md5": "cbf4352d65d992b2f860003fe97da813", "sha256": "14a512df555e03a80899e7f20f274a58b4da0ebc29624e1c66d2b7a07d590959"}, "downloads": -1, "filename": "labours-10.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cbf4352d65d992b2f860003fe97da813", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 68351, "upload_time": "2019-10-07T09:12:08", "upload_time_iso_8601": "2019-10-07T09:12:08.433221Z", "url": "https://files.pythonhosted.org/packages/d3/91/2584c7615a78ca3142b4261210d3bd78ea93e3255543cc129a570f88643a/labours-10.5.0-py3-none-any.whl", "yanked": false}], "10.5.1": [{"comment_text": "", "digests": {"md5": "3a5cb918eb346c70eae8cdc0223c86f0", "sha256": "15fdfc6e7bf9afb728a0e62f64d7392810d7cffe31a3722a9ffcab6467045513"}, "downloads": -1, "filename": "labours-10.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a5cb918eb346c70eae8cdc0223c86f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 68348, "upload_time": "2019-10-09T13:29:33", "upload_time_iso_8601": "2019-10-09T13:29:33.622780Z", "url": "https://files.pythonhosted.org/packages/9a/f7/aea88e09f04213b8e2e1a899b235f8d2d579cdb42909b43e4e503cc4d427/labours-10.5.1-py3-none-any.whl", "yanked": false}], "10.5.2": [{"comment_text": "", "digests": {"md5": "b3e96d11893cb89b5233297119b73257", "sha256": "34e176c165c5c834dc331937986b1efab8ee2845cf58a140a34de570c6cd4501"}, "downloads": -1, "filename": "labours-10.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b3e96d11893cb89b5233297119b73257", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 68398, "upload_time": "2019-11-06T23:00:12", "upload_time_iso_8601": "2019-11-06T23:00:12.348875Z", "url": "https://files.pythonhosted.org/packages/f5/a0/c083dc335215040fac29fba16bc1bc59b06fb42952f36dcbe53c92116549/labours-10.5.2-py3-none-any.whl", "yanked": false}], "10.5.3": [{"comment_text": "", "digests": {"md5": "7426b33390ba7545c02839cf92b8bdbc", "sha256": "f412025cea6a46a5abbf1e86f1c3d713ac88359db2135ac83304620e5caecaef"}, "downloads": -1, "filename": "labours-10.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7426b33390ba7545c02839cf92b8bdbc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 68483, "upload_time": "2019-11-21T12:14:54", "upload_time_iso_8601": "2019-11-21T12:14:54.789700Z", "url": "https://files.pythonhosted.org/packages/96/33/3dc9bfc26ea7f46cfa534b2a3ae41295a435b1d7801537115e5539b1a9fc/labours-10.5.3-py3-none-any.whl", "yanked": false}], "10.6.0": [{"comment_text": "", "digests": {"md5": "744c7b1c5729552a4565c8db4192c108", "sha256": "bca6eea6be3ec69ec39b08fd52e757a371395736a7c65f133cec30e7e8cb9d15"}, "downloads": -1, "filename": "labours-10.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "744c7b1c5729552a4565c8db4192c108", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 69090, "upload_time": "2019-11-28T22:09:52", "upload_time_iso_8601": "2019-11-28T22:09:52.150771Z", "url": "https://files.pythonhosted.org/packages/f4/83/b9258778941cbfe79cbadaf8b973bddcd901a1dd13bc6d6a4d497e779bce/labours-10.6.0-py3-none-any.whl", "yanked": false}], "10.6.1": [{"comment_text": "", "digests": {"md5": "3e007cd7bc17e3255ab65efab17cec3c", "sha256": "9786d6ef771aff76b3fecc9538783b5927371327252e9aa798e7d14c860e5d34"}, "downloads": -1, "filename": "labours-10.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3e007cd7bc17e3255ab65efab17cec3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 69090, "upload_time": "2019-11-29T19:00:17", "upload_time_iso_8601": "2019-11-29T19:00:17.061485Z", "url": "https://files.pythonhosted.org/packages/f8/5a/eac7910ebed026571411254ad1caa9354b377dbdef00e704ae67d3ea7be6/labours-10.6.1-py3-none-any.whl", "yanked": false}], "10.6.2": [{"comment_text": "", "digests": {"md5": "f7d32a2b1f237c6c29bf6ac3881d4874", "sha256": "f3aee9637fe50703399cdf3d6032fe93fc7730b6e6dea0a34ac0524bae3bfa8e"}, "downloads": -1, "filename": "labours-10.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f7d32a2b1f237c6c29bf6ac3881d4874", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 69703, "upload_time": "2019-12-04T11:21:35", "upload_time_iso_8601": "2019-12-04T11:21:35.365374Z", "url": "https://files.pythonhosted.org/packages/7e/bc/48f6a1fb733ef8e2cb39a22e03aa1e470375e98f1b16dadce4bc84dfba93/labours-10.6.2-py3-none-any.whl", "yanked": false}], "10.7.0": [{"comment_text": "", "digests": {"md5": "8d805ac0161ed408255a43945ce8dbe8", "sha256": "33e6b97aaa5659fb2fd36dab24983dad85ccbc194c1d998c9d50a5fbb6fc8e7b"}, "downloads": -1, "filename": "labours-10.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8d805ac0161ed408255a43945ce8dbe8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 69934, "upload_time": "2019-12-24T10:41:35", "upload_time_iso_8601": "2019-12-24T10:41:35.599737Z", "url": "https://files.pythonhosted.org/packages/c1/b9/2c41fb3aa77800d0428da97105c55bab4094e65a88d7a059c15c35b75dd2/labours-10.7.0-py3-none-any.whl", "yanked": false}], "10.7.1": [{"comment_text": "", "digests": {"md5": "d7fafc6853077e1385e7dae63581c892", "sha256": "db858ef0e92c82a9e0995fb9fb5a473a00bbc752614caec7b9d1228e6bee19a3"}, "downloads": -1, "filename": "labours-10.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d7fafc6853077e1385e7dae63581c892", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 69935, "upload_time": "2020-01-10T12:33:03", "upload_time_iso_8601": "2020-01-10T12:33:03.612649Z", "url": "https://files.pythonhosted.org/packages/e3/04/ae75b9df182b441fc0bccb09c14b251d66b42d0d943580515ab6d22c1cf9/labours-10.7.1-py3-none-any.whl", "yanked": false}], "10.7.2": [{"comment_text": "", "digests": {"md5": "e18ff4c6d7a56c2099a397329fe60746", "sha256": "069fc17e0932a4367594367c0d3077af8afb52a723bd3396f715eb1fa215cf90"}, "downloads": -1, "filename": "labours-10.7.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e18ff4c6d7a56c2099a397329fe60746", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 69936, "upload_time": "2020-01-14T21:46:50", "upload_time_iso_8601": "2020-01-14T21:46:50.815099Z", "url": "https://files.pythonhosted.org/packages/5d/b7/95d58c23345384624212b26f5da0fcc00434dc5d94b0b5dd6fe7df97d39d/labours-10.7.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e18ff4c6d7a56c2099a397329fe60746", "sha256": "069fc17e0932a4367594367c0d3077af8afb52a723bd3396f715eb1fa215cf90"}, "downloads": -1, "filename": "labours-10.7.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e18ff4c6d7a56c2099a397329fe60746", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 69936, "upload_time": "2020-01-14T21:46:50", "upload_time_iso_8601": "2020-01-14T21:46:50.815099Z", "url": "https://files.pythonhosted.org/packages/5d/b7/95d58c23345384624212b26f5da0fcc00434dc5d94b0b5dd6fe7df97d39d/labours-10.7.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:48:19 2020"}