{"info": {"author": "Alex Azarh", "author_email": "alex.az@quali.com", "bugtrack_url": null, "classifiers": [], "description": "ionosphere\n==========\n\n|License| |PyPI| |Build Status|\n\nAbout\n=====\n\nIonosphere - library to create `Azure Resource Manager\nTemplates <https://docs.microsoft.com/en-us/azure/templates/>`__\ndescriptions (Ionosphere is porting of troposphere)\n\nThe Ionosphere library allows for easier creation of the Azure Resource\nManager templates JSON by writing Python code to describe the Azure\nresources.\n\nTo facilitate catching ARM templates or JSON errors early the library\nhas property and type checking built into the classes.\n\nCurrently supported Azure resource types\n========================================\n\n-  Virtual Machine\n-  Virtual Machine Extension\n-  Virtual Machine Scale Sets\n-  Virtual Machine Scale Set Extension\n-  Virtual Network\n-  Public IP Address\n-  Network Interface\n-  Network SecurityGroup\n-  Application Security Group\n-  Load Balancer\n-  Dns Zone\n-  Application Gateway\n-  Storage Account\n\nExample\n=======\n\nThe following example will generate an ARM Template that creates a VNet\nand an Ubuntu VM with a public IP. The template also exposes port 22 on\nthe VM to the internet.\n\n.. code:: python\n\n    # Create the object\n    template = ARMTemplate()\n\n    # Create VNET object\n    vnet = VirtualNetwork(\"myvnet\",\n                          addressSpace=AddressSpace(addressPrefixes=['10.0.0.0/24']),\n                          subnets=[Subnet('main_subnet', addressPrefix='10.0.0.0/24')],\n                          tags={'key1': 'tag-key1', 'key2': 'tag-key2'})\n\n    # Create Network Security Group object with \"Allow SSH\" rule\n    nsg = NetworkSecurityGroup(\"myNsg\",\n                               securityRules=[\n                                   SecurityRule('ssh',\n                                                description='public ssh access',\n                                                protocol='Tcp',\n                                                destinationPortRange=\"22\",\n                                                destinationAddressPrefix=\"*\",\n                                                sourceAddressPrefix='Internet',\n                                                sourcePortRange='*',\n                                                access='Allow',\n                                                direction='Inbound',\n                                                priority=200\n                                            )])\n\n    # Create Public IP Address object\n    publicIp = PublicIPAddress('my_vm_nic1_pubip', publicIPAllocationMethod='dynamic')\n\n    # Create Network Interface object\n    networkInterface = NetworkInterface('myvm_nic1',\n                                        ipConfigurations=[NetworkInterfaceIPConfiguration(\n                                                'my_vm_nic1_ip_config',\n                                                 privateIPAllocationMethod='Dynamic',\n                                                 subnet=SubResource(id=vnet.subnet_ref('main_subnet')),\n                                                 publicIPAddress=SubResource(id=publicIp.Ref()))],\n                                        networkSecurityGroup=SubResource(id=nsg.Ref()))\n                                        \n    # Set dependencies on VNET & Public IP to the Network Interface\n    networkInterface.with_depends_on([publicIp, vnet])\n\n    # Create a parameter for the VM password and add it to the template\n    vm_password_param = ARMParameter('vmPassword',\n                                     template=template,\n                                     type='secureString',\n                                     description='The password for the VM access. User is \"adminuser\"')\n\n    # Create the Virtual Machince object \n    vm = VirtualMachine('myvm',\n                        hardwareProfile=HardwareProfile(vmSize='Basic_A0'),\n                        storageProfile=StorageProfile(imageReference=ImageReference(publisher='Canonical',\n                                                                                    offer='UbuntuServer',\n                                                                                    sku='16.04-LTS'),\n                                                      osDisk=OsDisk(createOption='FromImage',\n                                                                    diskSizeGB=50,\n                                                                    managedDisk=ManagedDiskParameters(storageAccountType='Standard_LRS'))),\n                        osProfile=OSProfile(computerName='mytestvm',\n                                            adminUsername='adminuser',\n                                            adminPassword=vm_password_param.Ref(),\n                                            linuxConfiguration=LinuxConfiguration(disablePasswordAuthentication=False)),\n                        networkProfile=NetworkProfile(networkInterfaces=\n                                                      [NetworkInterfaceReference(id=networkInterface.Ref())]))\n    # Set dependency for the VM on the Network Interface\n    vm.with_depends_on(networkInterface)\n\n    # Add all objects to the arm template\n    template.add_resource([vnet, nsg, publicIp, networkInterface, vm])\n\n    # Generate ARM Template\n    print(template.to_json())\n\nContributions\n=============\n\nAll contributions are welcome.\n\nLicensing\n=========\n\nIonosphere is a fork of troposphere which is licensed under the `BSD\n2-Clause license <http://opensource.org/licenses/BSD-2-Clause>`__. See\n`LICENSE <https://github.com/cloudtools/ionosphere/blob/master/LICENSE>`__\nfor the Ionosphere full license text.\n\n.. |License| image:: https://img.shields.io/pypi/l/troposphere.svg\n   :target: https://opensource.org/licenses/BSD-2-Clause\n.. |PyPI| image:: https://img.shields.io/pypi/v/ionosphere.svg?maxAge=2592000&style=flat\n   :target: https://pypi.python.org/pypi/ionosphere/\n.. |Build Status| image:: https://travis-ci.org/QualiNext/ionosphere.svg?branch=master\n   :target: https://travis-ci.org/QualiNext/ionosphere", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/qualinext/ionosphere", "keywords": "", "license": "New BSD license", "maintainer": "", "maintainer_email": "", "name": "ionosphere", "package_url": "https://pypi.org/project/ionosphere/", "platform": "", "project_url": "https://pypi.org/project/ionosphere/", "project_urls": {"Homepage": "https://github.com/qualinext/ionosphere"}, "release_url": "https://pypi.org/project/ionosphere/0.0.36/", "requires_dist": null, "requires_python": "", "summary": "Azure Resource Manager Template creation library", "version": "0.0.36", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"ionosphere\">\n<h2>ionosphere</h2>\n<p><a href=\"https://opensource.org/licenses/BSD-2-Clause\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e48c1a46f99b01a0dd2281cac7b2a4c8f4a3aaed/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f74726f706f7370686572652e737667\"></a> <a href=\"https://pypi.python.org/pypi/ionosphere/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bebab22b5e1d06d9e606dc2509e14442cb85e586/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f696f6e6f7370686572652e7376673f6d61784167653d32353932303030267374796c653d666c6174\"></a> <a href=\"https://travis-ci.org/QualiNext/ionosphere\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8225b32672815e4c8326b300cf5d9d7ff8e38080/68747470733a2f2f7472617669732d63692e6f72672f5175616c694e6578742f696f6e6f7370686572652e7376673f6272616e63683d6d6173746572\"></a></p>\n</div>\n<div id=\"about\">\n<h2>About</h2>\n<p>Ionosphere - library to create <a href=\"https://docs.microsoft.com/en-us/azure/templates/\" rel=\"nofollow\">Azure Resource Manager\nTemplates</a>\ndescriptions (Ionosphere is porting of troposphere)</p>\n<p>The Ionosphere library allows for easier creation of the Azure Resource\nManager templates JSON by writing Python code to describe the Azure\nresources.</p>\n<p>To facilitate catching ARM templates or JSON errors early the library\nhas property and type checking built into the classes.</p>\n</div>\n<div id=\"currently-supported-azure-resource-types\">\n<h2>Currently supported Azure resource types</h2>\n<ul>\n<li>Virtual Machine</li>\n<li>Virtual Machine Extension</li>\n<li>Virtual Machine Scale Sets</li>\n<li>Virtual Machine Scale Set Extension</li>\n<li>Virtual Network</li>\n<li>Public IP Address</li>\n<li>Network Interface</li>\n<li>Network SecurityGroup</li>\n<li>Application Security Group</li>\n<li>Load Balancer</li>\n<li>Dns Zone</li>\n<li>Application Gateway</li>\n<li>Storage Account</li>\n</ul>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>The following example will generate an ARM Template that creates a VNet\nand an Ubuntu VM with a public IP. The template also exposes port 22 on\nthe VM to the internet.</p>\n<pre><span class=\"c1\"># Create the object</span>\n<span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"n\">ARMTemplate</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Create VNET object</span>\n<span class=\"n\">vnet</span> <span class=\"o\">=</span> <span class=\"n\">VirtualNetwork</span><span class=\"p\">(</span><span class=\"s2\">\"myvnet\"</span><span class=\"p\">,</span>\n                      <span class=\"n\">addressSpace</span><span class=\"o\">=</span><span class=\"n\">AddressSpace</span><span class=\"p\">(</span><span class=\"n\">addressPrefixes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'10.0.0.0/24'</span><span class=\"p\">]),</span>\n                      <span class=\"n\">subnets</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Subnet</span><span class=\"p\">(</span><span class=\"s1\">'main_subnet'</span><span class=\"p\">,</span> <span class=\"n\">addressPrefix</span><span class=\"o\">=</span><span class=\"s1\">'10.0.0.0/24'</span><span class=\"p\">)],</span>\n                      <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'key1'</span><span class=\"p\">:</span> <span class=\"s1\">'tag-key1'</span><span class=\"p\">,</span> <span class=\"s1\">'key2'</span><span class=\"p\">:</span> <span class=\"s1\">'tag-key2'</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Create Network Security Group object with \"Allow SSH\" rule</span>\n<span class=\"n\">nsg</span> <span class=\"o\">=</span> <span class=\"n\">NetworkSecurityGroup</span><span class=\"p\">(</span><span class=\"s2\">\"myNsg\"</span><span class=\"p\">,</span>\n                           <span class=\"n\">securityRules</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                               <span class=\"n\">SecurityRule</span><span class=\"p\">(</span><span class=\"s1\">'ssh'</span><span class=\"p\">,</span>\n                                            <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'public ssh access'</span><span class=\"p\">,</span>\n                                            <span class=\"n\">protocol</span><span class=\"o\">=</span><span class=\"s1\">'Tcp'</span><span class=\"p\">,</span>\n                                            <span class=\"n\">destinationPortRange</span><span class=\"o\">=</span><span class=\"s2\">\"22\"</span><span class=\"p\">,</span>\n                                            <span class=\"n\">destinationAddressPrefix</span><span class=\"o\">=</span><span class=\"s2\">\"*\"</span><span class=\"p\">,</span>\n                                            <span class=\"n\">sourceAddressPrefix</span><span class=\"o\">=</span><span class=\"s1\">'Internet'</span><span class=\"p\">,</span>\n                                            <span class=\"n\">sourcePortRange</span><span class=\"o\">=</span><span class=\"s1\">'*'</span><span class=\"p\">,</span>\n                                            <span class=\"n\">access</span><span class=\"o\">=</span><span class=\"s1\">'Allow'</span><span class=\"p\">,</span>\n                                            <span class=\"n\">direction</span><span class=\"o\">=</span><span class=\"s1\">'Inbound'</span><span class=\"p\">,</span>\n                                            <span class=\"n\">priority</span><span class=\"o\">=</span><span class=\"mi\">200</span>\n                                        <span class=\"p\">)])</span>\n\n<span class=\"c1\"># Create Public IP Address object</span>\n<span class=\"n\">publicIp</span> <span class=\"o\">=</span> <span class=\"n\">PublicIPAddress</span><span class=\"p\">(</span><span class=\"s1\">'my_vm_nic1_pubip'</span><span class=\"p\">,</span> <span class=\"n\">publicIPAllocationMethod</span><span class=\"o\">=</span><span class=\"s1\">'dynamic'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create Network Interface object</span>\n<span class=\"n\">networkInterface</span> <span class=\"o\">=</span> <span class=\"n\">NetworkInterface</span><span class=\"p\">(</span><span class=\"s1\">'myvm_nic1'</span><span class=\"p\">,</span>\n                                    <span class=\"n\">ipConfigurations</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">NetworkInterfaceIPConfiguration</span><span class=\"p\">(</span>\n                                            <span class=\"s1\">'my_vm_nic1_ip_config'</span><span class=\"p\">,</span>\n                                             <span class=\"n\">privateIPAllocationMethod</span><span class=\"o\">=</span><span class=\"s1\">'Dynamic'</span><span class=\"p\">,</span>\n                                             <span class=\"n\">subnet</span><span class=\"o\">=</span><span class=\"n\">SubResource</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">vnet</span><span class=\"o\">.</span><span class=\"n\">subnet_ref</span><span class=\"p\">(</span><span class=\"s1\">'main_subnet'</span><span class=\"p\">)),</span>\n                                             <span class=\"n\">publicIPAddress</span><span class=\"o\">=</span><span class=\"n\">SubResource</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">publicIp</span><span class=\"o\">.</span><span class=\"n\">Ref</span><span class=\"p\">()))],</span>\n                                    <span class=\"n\">networkSecurityGroup</span><span class=\"o\">=</span><span class=\"n\">SubResource</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">nsg</span><span class=\"o\">.</span><span class=\"n\">Ref</span><span class=\"p\">()))</span>\n\n<span class=\"c1\"># Set dependencies on VNET &amp; Public IP to the Network Interface</span>\n<span class=\"n\">networkInterface</span><span class=\"o\">.</span><span class=\"n\">with_depends_on</span><span class=\"p\">([</span><span class=\"n\">publicIp</span><span class=\"p\">,</span> <span class=\"n\">vnet</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Create a parameter for the VM password and add it to the template</span>\n<span class=\"n\">vm_password_param</span> <span class=\"o\">=</span> <span class=\"n\">ARMParameter</span><span class=\"p\">(</span><span class=\"s1\">'vmPassword'</span><span class=\"p\">,</span>\n                                 <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">template</span><span class=\"p\">,</span>\n                                 <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'secureString'</span><span class=\"p\">,</span>\n                                 <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'The password for the VM access. User is \"adminuser\"'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create the Virtual Machince object</span>\n<span class=\"n\">vm</span> <span class=\"o\">=</span> <span class=\"n\">VirtualMachine</span><span class=\"p\">(</span><span class=\"s1\">'myvm'</span><span class=\"p\">,</span>\n                    <span class=\"n\">hardwareProfile</span><span class=\"o\">=</span><span class=\"n\">HardwareProfile</span><span class=\"p\">(</span><span class=\"n\">vmSize</span><span class=\"o\">=</span><span class=\"s1\">'Basic_A0'</span><span class=\"p\">),</span>\n                    <span class=\"n\">storageProfile</span><span class=\"o\">=</span><span class=\"n\">StorageProfile</span><span class=\"p\">(</span><span class=\"n\">imageReference</span><span class=\"o\">=</span><span class=\"n\">ImageReference</span><span class=\"p\">(</span><span class=\"n\">publisher</span><span class=\"o\">=</span><span class=\"s1\">'Canonical'</span><span class=\"p\">,</span>\n                                                                                <span class=\"n\">offer</span><span class=\"o\">=</span><span class=\"s1\">'UbuntuServer'</span><span class=\"p\">,</span>\n                                                                                <span class=\"n\">sku</span><span class=\"o\">=</span><span class=\"s1\">'16.04-LTS'</span><span class=\"p\">),</span>\n                                                  <span class=\"n\">osDisk</span><span class=\"o\">=</span><span class=\"n\">OsDisk</span><span class=\"p\">(</span><span class=\"n\">createOption</span><span class=\"o\">=</span><span class=\"s1\">'FromImage'</span><span class=\"p\">,</span>\n                                                                <span class=\"n\">diskSizeGB</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\n                                                                <span class=\"n\">managedDisk</span><span class=\"o\">=</span><span class=\"n\">ManagedDiskParameters</span><span class=\"p\">(</span><span class=\"n\">storageAccountType</span><span class=\"o\">=</span><span class=\"s1\">'Standard_LRS'</span><span class=\"p\">))),</span>\n                    <span class=\"n\">osProfile</span><span class=\"o\">=</span><span class=\"n\">OSProfile</span><span class=\"p\">(</span><span class=\"n\">computerName</span><span class=\"o\">=</span><span class=\"s1\">'mytestvm'</span><span class=\"p\">,</span>\n                                        <span class=\"n\">adminUsername</span><span class=\"o\">=</span><span class=\"s1\">'adminuser'</span><span class=\"p\">,</span>\n                                        <span class=\"n\">adminPassword</span><span class=\"o\">=</span><span class=\"n\">vm_password_param</span><span class=\"o\">.</span><span class=\"n\">Ref</span><span class=\"p\">(),</span>\n                                        <span class=\"n\">linuxConfiguration</span><span class=\"o\">=</span><span class=\"n\">LinuxConfiguration</span><span class=\"p\">(</span><span class=\"n\">disablePasswordAuthentication</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)),</span>\n                    <span class=\"n\">networkProfile</span><span class=\"o\">=</span><span class=\"n\">NetworkProfile</span><span class=\"p\">(</span><span class=\"n\">networkInterfaces</span><span class=\"o\">=</span>\n                                                  <span class=\"p\">[</span><span class=\"n\">NetworkInterfaceReference</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">networkInterface</span><span class=\"o\">.</span><span class=\"n\">Ref</span><span class=\"p\">())]))</span>\n<span class=\"c1\"># Set dependency for the VM on the Network Interface</span>\n<span class=\"n\">vm</span><span class=\"o\">.</span><span class=\"n\">with_depends_on</span><span class=\"p\">(</span><span class=\"n\">networkInterface</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Add all objects to the arm template</span>\n<span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">add_resource</span><span class=\"p\">([</span><span class=\"n\">vnet</span><span class=\"p\">,</span> <span class=\"n\">nsg</span><span class=\"p\">,</span> <span class=\"n\">publicIp</span><span class=\"p\">,</span> <span class=\"n\">networkInterface</span><span class=\"p\">,</span> <span class=\"n\">vm</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Generate ARM Template</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">())</span>\n</pre>\n</div>\n<div id=\"contributions\">\n<h2>Contributions</h2>\n<p>All contributions are welcome.</p>\n</div>\n<div id=\"licensing\">\n<h2>Licensing</h2>\n<p>Ionosphere is a fork of troposphere which is licensed under the <a href=\"http://opensource.org/licenses/BSD-2-Clause\" rel=\"nofollow\">BSD\n2-Clause license</a>. See\n<a href=\"https://github.com/cloudtools/ionosphere/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a>\nfor the Ionosphere full license text.</p>\n</div>\n\n          </div>"}, "last_serial": 7157973, "releases": {"0.0.11": [{"comment_text": "", "digests": {"md5": "a1865a6868310c173dac94d83d6e8790", "sha256": "535cdaa1ae4ab4ae81be1fc469d2265a3a129768ce7c714da178405bc6e22477"}, "downloads": -1, "filename": "ionosphere-0.0.11.tar.gz", "has_sig": false, "md5_digest": "a1865a6868310c173dac94d83d6e8790", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25657, "upload_time": "2018-05-22T11:28:18", "upload_time_iso_8601": "2018-05-22T11:28:18.824722Z", "url": "https://files.pythonhosted.org/packages/5f/60/328016611e7fbeb7f437e892004f2d5390dff7276366777f84197b85db0f/ionosphere-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "f5e5916a401fa931825b3d98f2356956", "sha256": "e82d5b491e9fb12adbbaf23a35b35876d6b84ae826b84672d4a3b1e1321c21ea"}, "downloads": -1, "filename": "ionosphere-0.0.12.tar.gz", "has_sig": false, "md5_digest": "f5e5916a401fa931825b3d98f2356956", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25661, "upload_time": "2018-06-07T13:19:53", "upload_time_iso_8601": "2018-06-07T13:19:53.032805Z", "url": "https://files.pythonhosted.org/packages/dc/f5/376a7f99b52890d1f83e518541dbe8fe1274f2c3f8be6a1c549f8145de32/ionosphere-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "db5d796e2c886cba8287268145239484", "sha256": "08d20e1660c7cf48af7747ac2e4c3037980a049f78a50eb55ac5507be45ed6b4"}, "downloads": -1, "filename": "ionosphere-0.0.13.tar.gz", "has_sig": false, "md5_digest": "db5d796e2c886cba8287268145239484", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25697, "upload_time": "2018-06-11T06:52:50", "upload_time_iso_8601": "2018-06-11T06:52:50.130651Z", "url": "https://files.pythonhosted.org/packages/5e/fd/fe52a8d31044fa0831f96209e2c44702c756e458e108bc4fd06d5d634f2d/ionosphere-0.0.13.tar.gz", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "41e3ddea704a248a65c5c54f7dd1ea62", "sha256": "61337cda3a50ce6451d9657f5d621eaf5fb75b66e0d7a34490fb122e09150cf4"}, "downloads": -1, "filename": "ionosphere-0.0.18.tar.gz", "has_sig": false, "md5_digest": "41e3ddea704a248a65c5c54f7dd1ea62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26460, "upload_time": "2018-06-19T13:13:08", "upload_time_iso_8601": "2018-06-19T13:13:08.368102Z", "url": "https://files.pythonhosted.org/packages/e2/b6/91107249ccbbc4e00a03e6cb15e3d7c195aa1e13110c68484cbe37b19212/ionosphere-0.0.18.tar.gz", "yanked": false}], "0.0.19": [{"comment_text": "", "digests": {"md5": "7d7debe1f2602afa3def01a34b489884", "sha256": "310df01d3ce0e631d4d204a90332e5be3a88d3180ca3990a32bc1cdfc044e0e7"}, "downloads": -1, "filename": "ionosphere-0.0.19.tar.gz", "has_sig": false, "md5_digest": "7d7debe1f2602afa3def01a34b489884", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26749, "upload_time": "2018-06-23T21:01:30", "upload_time_iso_8601": "2018-06-23T21:01:30.563109Z", "url": "https://files.pythonhosted.org/packages/95/9a/ae0c60d15083e03153e805e16254d98581bfb1d02d381b0ded2c92893eb9/ionosphere-0.0.19.tar.gz", "yanked": false}], "0.0.20": [{"comment_text": "", "digests": {"md5": "6555fcc5df7ba0aeb24ed58707d5deff", "sha256": "a2293dd236673e3f8dcff6a65be281cbcb23b250086bd72da2c53cfaae3fb33e"}, "downloads": -1, "filename": "ionosphere-0.0.20.tar.gz", "has_sig": false, "md5_digest": "6555fcc5df7ba0aeb24ed58707d5deff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27038, "upload_time": "2018-06-26T11:29:04", "upload_time_iso_8601": "2018-06-26T11:29:04.741366Z", "url": "https://files.pythonhosted.org/packages/76/fa/1ea6352a5ef12ec0a58a64dc3277b8e3c9546e187de58653eb1e82af2cfe/ionosphere-0.0.20.tar.gz", "yanked": false}], "0.0.21": [{"comment_text": "", "digests": {"md5": "6422160f3eddb207a5a9e67eb3bbeb54", "sha256": "50f82ad1a198adfeec3530d8207baeb876a828dded30a59dba1e21cb4fc690e8"}, "downloads": -1, "filename": "ionosphere-0.0.21.tar.gz", "has_sig": false, "md5_digest": "6422160f3eddb207a5a9e67eb3bbeb54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27040, "upload_time": "2018-06-27T10:25:10", "upload_time_iso_8601": "2018-06-27T10:25:10.292185Z", "url": "https://files.pythonhosted.org/packages/56/a3/8957e5ca58a999b24f65c01c92b566270b86517ade551a2213e7ae0475eb/ionosphere-0.0.21.tar.gz", "yanked": false}], "0.0.22": [{"comment_text": "", "digests": {"md5": "07eb7dd20ba9c9da3701efc5f3243770", "sha256": "9fe23a61fcf00305df90ff3d96ef94849aea8ae6f9fce7ee14896d6b7a78b091"}, "downloads": -1, "filename": "ionosphere-0.0.22.tar.gz", "has_sig": false, "md5_digest": "07eb7dd20ba9c9da3701efc5f3243770", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27366, "upload_time": "2018-08-29T11:49:57", "upload_time_iso_8601": "2018-08-29T11:49:57.698010Z", "url": "https://files.pythonhosted.org/packages/c1/b1/21a3805c70a61b0f9e90e31e3216550173a53b3d4ddbfd87b046197c57f8/ionosphere-0.0.22.tar.gz", "yanked": false}], "0.0.23": [{"comment_text": "", "digests": {"md5": "9dc84f78a151e9a40a37dc486d627129", "sha256": "1e9f3a2f0badfbb76c4e25cd41e56127d32c51e2eb8535b2a1ecebf5386e736d"}, "downloads": -1, "filename": "ionosphere-0.0.23.tar.gz", "has_sig": false, "md5_digest": "9dc84f78a151e9a40a37dc486d627129", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28001, "upload_time": "2018-10-24T08:01:24", "upload_time_iso_8601": "2018-10-24T08:01:24.703314Z", "url": "https://files.pythonhosted.org/packages/7b/a3/1078e7b7d71ddbbe371aedb4effaceea1fe14acea548d2b6bbe0e3ab708a/ionosphere-0.0.23.tar.gz", "yanked": false}], "0.0.24": [{"comment_text": "", "digests": {"md5": "d0c11898aa1d63a03d85711ca87df46c", "sha256": "ba49e2266931a97254b6fb1d400483d9d2f5e5d7a8f8dd86549a437479a51efe"}, "downloads": -1, "filename": "ionosphere-0.0.24.tar.gz", "has_sig": false, "md5_digest": "d0c11898aa1d63a03d85711ca87df46c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29688, "upload_time": "2018-11-14T13:40:15", "upload_time_iso_8601": "2018-11-14T13:40:15.409634Z", "url": "https://files.pythonhosted.org/packages/7a/fc/540119ce8417c08d339c253dd07657a304a363438e1ea809f49666919e52/ionosphere-0.0.24.tar.gz", "yanked": false}], "0.0.25": [{"comment_text": "", "digests": {"md5": "3f9fe6e0323ce535dab6435da3fa5777", "sha256": "72d4cc3b6ca20226753d185cdc8c17f0cd13a672ba35d3205bf2a9ebbec80b2e"}, "downloads": -1, "filename": "ionosphere-0.0.25.tar.gz", "has_sig": false, "md5_digest": "3f9fe6e0323ce535dab6435da3fa5777", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29767, "upload_time": "2018-11-18T08:54:06", "upload_time_iso_8601": "2018-11-18T08:54:06.154874Z", "url": "https://files.pythonhosted.org/packages/d4/1c/076da8006effe37dd647c10d00019e38852c41d4dbb8704ab5eef9e99e56/ionosphere-0.0.25.tar.gz", "yanked": false}], "0.0.27": [{"comment_text": "", "digests": {"md5": "3e1c2b5ae81ca351be519dc460b765a0", "sha256": "93a04b5915a0d6698e1f5627881a763703d78ef9f8a02823ec086f4c540ba936"}, "downloads": -1, "filename": "ionosphere-0.0.27.tar.gz", "has_sig": false, "md5_digest": "3e1c2b5ae81ca351be519dc460b765a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29563, "upload_time": "2019-01-01T12:02:25", "upload_time_iso_8601": "2019-01-01T12:02:25.796256Z", "url": "https://files.pythonhosted.org/packages/f3/8e/e507e105c57f8ddead61390023411cdd2deb0b0d2cb02e0b27d4c58d5269/ionosphere-0.0.27.tar.gz", "yanked": false}], "0.0.28": [{"comment_text": "", "digests": {"md5": "dbe988a90aa47af593723e7e9f4e8dc8", "sha256": "781265037bdbde8515af860847a77bd06802d77b2e05271315243fb7b02f038a"}, "downloads": -1, "filename": "ionosphere-0.0.28.tar.gz", "has_sig": false, "md5_digest": "dbe988a90aa47af593723e7e9f4e8dc8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29847, "upload_time": "2019-01-14T06:11:20", "upload_time_iso_8601": "2019-01-14T06:11:20.485051Z", "url": "https://files.pythonhosted.org/packages/14/19/1794ed23b875b389eee82504df05fbabe46380f73ade64a17aef37f063e6/ionosphere-0.0.28.tar.gz", "yanked": false}], "0.0.29": [{"comment_text": "", "digests": {"md5": "93fe427896b8f3e9b70d67a6e32a8d85", "sha256": "48d38ad501093a67d533a1f150d4ef0f1e1a5437b0360b226048396afa763c23"}, "downloads": -1, "filename": "ionosphere-0.0.29.tar.gz", "has_sig": false, "md5_digest": "93fe427896b8f3e9b70d67a6e32a8d85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29846, "upload_time": "2019-01-14T11:29:56", "upload_time_iso_8601": "2019-01-14T11:29:56.711105Z", "url": "https://files.pythonhosted.org/packages/54/38/1867481ee20e26d662308897531dd30cadcd71d1064f18988c67d43a94f8/ionosphere-0.0.29.tar.gz", "yanked": false}], "0.0.30": [{"comment_text": "", "digests": {"md5": "bb57106f8413e17cbdd8d57b32b01641", "sha256": "928aa0609e08268dccac8889633c7abaf20309164f98bc4314a9b6f233c205a2"}, "downloads": -1, "filename": "ionosphere-0.0.30.tar.gz", "has_sig": false, "md5_digest": "bb57106f8413e17cbdd8d57b32b01641", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30082, "upload_time": "2019-10-03T09:42:15", "upload_time_iso_8601": "2019-10-03T09:42:15.343731Z", "url": "https://files.pythonhosted.org/packages/85/89/5cd2988394d06a3a43482eb92391a712efd82b519cc2520e077126185ce4/ionosphere-0.0.30.tar.gz", "yanked": false}], "0.0.31": [{"comment_text": "", "digests": {"md5": "d67ba047b38002670537ddd2f0b5f062", "sha256": "1672dea80274864945bf96b3ffb436e2a18ab3f2b069419340986fcd2709ab01"}, "downloads": -1, "filename": "ionosphere-0.0.31.tar.gz", "has_sig": false, "md5_digest": "d67ba047b38002670537ddd2f0b5f062", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30420, "upload_time": "2019-10-31T09:27:00", "upload_time_iso_8601": "2019-10-31T09:27:00.746016Z", "url": "https://files.pythonhosted.org/packages/63/7c/28d5722146dcc4f1eb447373c75c15d39f29615cb9c611e2d6dae289b31d/ionosphere-0.0.31.tar.gz", "yanked": false}], "0.0.32": [{"comment_text": "", "digests": {"md5": "c74e2adb936c60628f0d040daad0e31c", "sha256": "3943ff4ef8c34d7b78fb19b60d2a83447355ab17533e9674296ae2e8f2ad5613"}, "downloads": -1, "filename": "ionosphere-0.0.32.tar.gz", "has_sig": false, "md5_digest": "c74e2adb936c60628f0d040daad0e31c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30757, "upload_time": "2019-11-18T07:27:50", "upload_time_iso_8601": "2019-11-18T07:27:50.757300Z", "url": "https://files.pythonhosted.org/packages/f9/96/99787b6242ead86435e6344a2e520dcc38dc43a0238b3fb118924e273b8c/ionosphere-0.0.32.tar.gz", "yanked": false}], "0.0.33": [{"comment_text": "", "digests": {"md5": "6622fad641767106f1284857db6e1fe3", "sha256": "d17c39351d75b059220b268de3c22b77db9ac755f931f15056f5c3487187f6b2"}, "downloads": -1, "filename": "ionosphere-0.0.33.tar.gz", "has_sig": false, "md5_digest": "6622fad641767106f1284857db6e1fe3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30791, "upload_time": "2019-12-02T14:22:59", "upload_time_iso_8601": "2019-12-02T14:22:59.921358Z", "url": "https://files.pythonhosted.org/packages/99/12/1acee895c5c405eea072fc082cdbe06ff2ee79557855afb0f96b692024ac/ionosphere-0.0.33.tar.gz", "yanked": false}], "0.0.34": [{"comment_text": "", "digests": {"md5": "66e90132fe3ee5e81125af57e5f55a8d", "sha256": "b14128c552aea992ac3a81d19ea686d71bfd5abb39f03ab7c01c0acae3bd204f"}, "downloads": -1, "filename": "ionosphere-0.0.34.tar.gz", "has_sig": false, "md5_digest": "66e90132fe3ee5e81125af57e5f55a8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30806, "upload_time": "2019-12-04T07:09:43", "upload_time_iso_8601": "2019-12-04T07:09:43.284381Z", "url": "https://files.pythonhosted.org/packages/a8/a0/80b80aed2bf5d3acbecb85a1776ca3e6d208a9f2f089b2ce3ab447b58104/ionosphere-0.0.34.tar.gz", "yanked": false}], "0.0.35": [{"comment_text": "", "digests": {"md5": "52d8346a2b7c505d7808fda00fb7a6c5", "sha256": "3e736d5d19e2b283039c5c0f3819982ae29ac306daf196a6f56c6c1311ca5804"}, "downloads": -1, "filename": "ionosphere-0.0.35.tar.gz", "has_sig": false, "md5_digest": "52d8346a2b7c505d7808fda00fb7a6c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30802, "upload_time": "2020-02-19T09:24:47", "upload_time_iso_8601": "2020-02-19T09:24:47.862184Z", "url": "https://files.pythonhosted.org/packages/81/82/d644681ee2e2ee76f6c33f80ac5abab150026dbae8c2c8834b354711e722/ionosphere-0.0.35.tar.gz", "yanked": false}], "0.0.36": [{"comment_text": "", "digests": {"md5": "51fb1302deeb5d0ea811b565de0e1840", "sha256": "24ac0c6c8e67078296ab76f38c6a05635145dd8e0c2cac62d846caa32eeb5d6b"}, "downloads": -1, "filename": "ionosphere-0.0.36.tar.gz", "has_sig": false, "md5_digest": "51fb1302deeb5d0ea811b565de0e1840", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30959, "upload_time": "2020-05-03T16:49:11", "upload_time_iso_8601": "2020-05-03T16:49:11.867425Z", "url": "https://files.pythonhosted.org/packages/b8/49/ba49e4778d6b14821c519bc6c38b9bbc1514041e96acea53ec3723e486db/ionosphere-0.0.36.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "a39de756a775e849ff6e05d4f2e37716", "sha256": "7558684dd0a2625eb9df88c99ab0d51e707ff714d5738d88d6b26cf2403e6733"}, "downloads": -1, "filename": "ionosphere-0.0.5.tar.gz", "has_sig": false, "md5_digest": "a39de756a775e849ff6e05d4f2e37716", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25689, "upload_time": "2018-05-04T16:07:45", "upload_time_iso_8601": "2018-05-04T16:07:45.598544Z", "url": "https://files.pythonhosted.org/packages/08/b3/b792af859bd4c0078669b503f0aa79d72d0d266d26e74939741eab8635c1/ionosphere-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "45f7b6261cbd1c961ce4d5e84bee3586", "sha256": "eecacf1c4988efb7765d25d050bc28c6d24263581792a6bee30219b38f897d35"}, "downloads": -1, "filename": "ionosphere-0.0.6.tar.gz", "has_sig": false, "md5_digest": "45f7b6261cbd1c961ce4d5e84bee3586", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25150, "upload_time": "2018-05-04T16:17:05", "upload_time_iso_8601": "2018-05-04T16:17:05.378838Z", "url": "https://files.pythonhosted.org/packages/1d/81/7d1df0bcbe600fb0d3579c4873ec247e401fc117da1e9f3ec084f758d27d/ionosphere-0.0.6.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "6459d82eb8a6cc9aaa3d434b9147f96b", "sha256": "e615c95606ea2416dbfcc15fcbd045963722d2f10a05cba6bebe287c49f2466d"}, "downloads": -1, "filename": "ionosphere-0.0.8.tar.gz", "has_sig": false, "md5_digest": "6459d82eb8a6cc9aaa3d434b9147f96b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25761, "upload_time": "2018-05-14T11:22:17", "upload_time_iso_8601": "2018-05-14T11:22:17.191202Z", "url": "https://files.pythonhosted.org/packages/cf/71/f7601cd891e7dfcb49dd9e4ec068ad293f2aa032fc33eb9f1be14858622a/ionosphere-0.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "51fb1302deeb5d0ea811b565de0e1840", "sha256": "24ac0c6c8e67078296ab76f38c6a05635145dd8e0c2cac62d846caa32eeb5d6b"}, "downloads": -1, "filename": "ionosphere-0.0.36.tar.gz", "has_sig": false, "md5_digest": "51fb1302deeb5d0ea811b565de0e1840", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30959, "upload_time": "2020-05-03T16:49:11", "upload_time_iso_8601": "2020-05-03T16:49:11.867425Z", "url": "https://files.pythonhosted.org/packages/b8/49/ba49e4778d6b14821c519bc6c38b9bbc1514041e96acea53ec3723e486db/ionosphere-0.0.36.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:58 2020"}