{"info": {"author": "JeffreyCao", "author_email": "jeffreycao1024@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# ezutils\nUtils to save your time on python coding\n\nLife is short we use ezutils !\n\n## 1. Installing\n```bash\npip install ezutils\n```\n\n## 2. Using files\n\n### 2.1 readlines:\n\nreadlines(filename: str, strip_newline: bool = True) \n\n#### 2.1.1 params:\n```txt\nfilename: the filename tobe read\n\nstrip_newline: strip the last space/newline\n\n\n```\n#### 2.1.2 return lines readed from file\n\n#### 2.1.3 Example:\n\n```python\n    lines = readlines(brother_path('cfg.txt'))\n    print(lines)\n```\n\n\n### 2.2 writelines:\n\nwritelines(lines: List, filename, append_newline: bool = True) \n\n#### 2.2.1 params:\n```txt\nlines: lines tobe written\nfilename: file tobe written\nappend_newline: add a newline to each line writtend\n```\n#### 2.2.2 return None\n\nExample:\n\n```python\n    lines = ['hello', 'ezflines']\n    writelines(lines, brother_path('cfg.txt'))\n```\n\n### 2.3 readstr:\n\nreadstr(filename: str) -> str\n\n#### 2.3.1 params:\n```txt\nfilename: file tobe read\n```\n#### 2.3.2 return None\n\n### 2.4 readjson:\n\nreadjson(filename: str) -> dict\n\n#### 2.4.1 params:\n```txt\nfilename: file tobe read\n```\n#### 2.4.2 return dict from json parse\n\n\n## 2.5 DEMO\n\nexample/demo_files.py\n```python\n\n#!/usr/bin/env python3\n# -*- coding:utf-8 -*-\n\nimport os\nfrom ezutils.files import readlines, writelines, readstr, readjson, list_by_ext\n\n\ndef brother_path(filename): return os.path.join(\n    os.path.dirname(__file__), filename)\n\n\ndef read_as_lines():\n    lines1 = readlines(brother_path('cfg.txt'))\n    print(f\"lines1:{lines1}\")\n    '''\n    lines1:['hello', 'ezflines']\n    '''\n    lines2 = readlines(brother_path('cfg.txt'), False)\n    print(f\"lines2:{lines2}\")\n    '''\n    lines2:['hello\\n', 'ezflines\\n']\n    '''\n\n\ndef write_as_lines():\n    lines = ['hello', 'ezflines']\n    writelines(lines, brother_path('cfg.txt'))\n    '''\n    cfg.txt:\n    hello\n    ezflines\n\n    '''\n    writelines(lines, brother_path('cfg_oneline.txt'), False)\n    '''\n    cfg_oneline.txt:\n    helloezflines\n    '''\n\n\ndef read_as_string():\n    string = readstr(brother_path('cfg.txt'))\n    print(f\"read_as_string:\\n{string}\")\n\n\ndef read_as_json():\n    json_obj = readjson(brother_path('cfg.json'))\n    print(f\"read_as_json: type = {type(json_obj)}\")\n    images = json_obj[\"images\"]\n    for image in images:\n        print(f\"read_as_json: image = {image}\")\n\n\ndef find_pys():\n    files = list_by_ext('.', 'py')\n    index = 0\n    width = len(f\"{len(files)}\")\n    for file in files:\n        print(f\"[{index:0{width}}] {file}\")\n        index += 1\n\n\nif __name__ == \"__main__\":\n    write_as_lines()\n    read_as_lines()\n    read_as_string()\n    read_as_json()\n    find_pys()\n\n```\n## 3 Using progress\n\n### 3.1 print_progress\n\nprint_progress(msg, current, max, max_width=60)\n\n### Demo\n\nexample/demo_files.py\n\n```python\n\n#!/usr/bin/env python3\n#demo_progress.py\n\nimport time\n\nfrom ezutils.progress import print_progress\n\nif __name__ == '__main__':\n    max = 100\n    for i in range(max + 1):\n        print_progress(\"MSG:ABC(%d)\" % i, i, max)\n        time.sleep(0.01)\n```\n## TODO:\n\n### pillow utils\nadd roundrect for pillow\nsee and ANTIALIAS  [circle_corner](https://www.pyget.cn/p/185266)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/caojianfeng/ezutils", "keywords": "pip,ezutils", "license": "MIT Licence", "maintainer": "", "maintainer_email": "", "name": "ezutils", "package_url": "https://pypi.org/project/ezutils/", "platform": "any", "project_url": "https://pypi.org/project/ezutils/", "project_urls": {"Homepage": "https://github.com/caojianfeng/ezutils"}, "release_url": "https://pypi.org/project/ezutils/0.0.4/", "requires_dist": ["Pillow", "pngquant"], "requires_python": ">=3.6", "summary": "Utils to save your time on python coding", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ezutils</h1>\n<p>Utils to save your time on python coding</p>\n<p>Life is short we use ezutils !</p>\n<h2>1. Installing</h2>\n<pre>pip install ezutils\n</pre>\n<h2>2. Using files</h2>\n<h3>2.1 readlines:</h3>\n<p>readlines(filename: str, strip_newline: bool = True)</p>\n<h4>2.1.1 params:</h4>\n<pre>filename: the filename tobe read\n\nstrip_newline: strip the last space/newline\n</pre>\n<h4>2.1.2 return lines readed from file</h4>\n<h4>2.1.3 Example:</h4>\n<pre>    <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">readlines</span><span class=\"p\">(</span><span class=\"n\">brother_path</span><span class=\"p\">(</span><span class=\"s1\">'cfg.txt'</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">)</span>\n</pre>\n<h3>2.2 writelines:</h3>\n<p>writelines(lines: List, filename, append_newline: bool = True)</p>\n<h4>2.2.1 params:</h4>\n<pre>lines: lines tobe written\nfilename: file tobe written\nappend_newline: add a newline to each line writtend\n</pre>\n<h4>2.2.2 return None</h4>\n<p>Example:</p>\n<pre>    <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'hello'</span><span class=\"p\">,</span> <span class=\"s1\">'ezflines'</span><span class=\"p\">]</span>\n    <span class=\"n\">writelines</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">,</span> <span class=\"n\">brother_path</span><span class=\"p\">(</span><span class=\"s1\">'cfg.txt'</span><span class=\"p\">))</span>\n</pre>\n<h3>2.3 readstr:</h3>\n<p>readstr(filename: str) -&gt; str</p>\n<h4>2.3.1 params:</h4>\n<pre>filename: file tobe read\n</pre>\n<h4>2.3.2 return None</h4>\n<h3>2.4 readjson:</h3>\n<p>readjson(filename: str) -&gt; dict</p>\n<h4>2.4.1 params:</h4>\n<pre>filename: file tobe read\n</pre>\n<h4>2.4.2 return dict from json parse</h4>\n<h2>2.5 DEMO</h2>\n<p>example/demo_files.py</p>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n<span class=\"c1\"># -*- coding:utf-8 -*-</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ezutils.files</span> <span class=\"kn\">import</span> <span class=\"n\">readlines</span><span class=\"p\">,</span> <span class=\"n\">writelines</span><span class=\"p\">,</span> <span class=\"n\">readstr</span><span class=\"p\">,</span> <span class=\"n\">readjson</span><span class=\"p\">,</span> <span class=\"n\">list_by_ext</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">brother_path</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">):</span> <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">),</span> <span class=\"n\">filename</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">read_as_lines</span><span class=\"p\">():</span>\n    <span class=\"n\">lines1</span> <span class=\"o\">=</span> <span class=\"n\">readlines</span><span class=\"p\">(</span><span class=\"n\">brother_path</span><span class=\"p\">(</span><span class=\"s1\">'cfg.txt'</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"lines1:</span><span class=\"si\">{</span><span class=\"n\">lines1</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"sd\">'''</span>\n<span class=\"sd\">    lines1:['hello', 'ezflines']</span>\n<span class=\"sd\">    '''</span>\n    <span class=\"n\">lines2</span> <span class=\"o\">=</span> <span class=\"n\">readlines</span><span class=\"p\">(</span><span class=\"n\">brother_path</span><span class=\"p\">(</span><span class=\"s1\">'cfg.txt'</span><span class=\"p\">),</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"lines2:</span><span class=\"si\">{</span><span class=\"n\">lines2</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"sd\">'''</span>\n<span class=\"sd\">    lines2:['hello\\n', 'ezflines\\n']</span>\n<span class=\"sd\">    '''</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">write_as_lines</span><span class=\"p\">():</span>\n    <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'hello'</span><span class=\"p\">,</span> <span class=\"s1\">'ezflines'</span><span class=\"p\">]</span>\n    <span class=\"n\">writelines</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">,</span> <span class=\"n\">brother_path</span><span class=\"p\">(</span><span class=\"s1\">'cfg.txt'</span><span class=\"p\">))</span>\n    <span class=\"sd\">'''</span>\n<span class=\"sd\">    cfg.txt:</span>\n<span class=\"sd\">    hello</span>\n<span class=\"sd\">    ezflines</span>\n\n<span class=\"sd\">    '''</span>\n    <span class=\"n\">writelines</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">,</span> <span class=\"n\">brother_path</span><span class=\"p\">(</span><span class=\"s1\">'cfg_oneline.txt'</span><span class=\"p\">),</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"sd\">'''</span>\n<span class=\"sd\">    cfg_oneline.txt:</span>\n<span class=\"sd\">    helloezflines</span>\n<span class=\"sd\">    '''</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">read_as_string</span><span class=\"p\">():</span>\n    <span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"n\">readstr</span><span class=\"p\">(</span><span class=\"n\">brother_path</span><span class=\"p\">(</span><span class=\"s1\">'cfg.txt'</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"read_as_string:</span><span class=\"se\">\\n</span><span class=\"si\">{</span><span class=\"n\">string</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">read_as_json</span><span class=\"p\">():</span>\n    <span class=\"n\">json_obj</span> <span class=\"o\">=</span> <span class=\"n\">readjson</span><span class=\"p\">(</span><span class=\"n\">brother_path</span><span class=\"p\">(</span><span class=\"s1\">'cfg.json'</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"read_as_json: type = </span><span class=\"si\">{</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">json_obj</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"n\">images</span> <span class=\"o\">=</span> <span class=\"n\">json_obj</span><span class=\"p\">[</span><span class=\"s2\">\"images\"</span><span class=\"p\">]</span>\n    <span class=\"k\">for</span> <span class=\"n\">image</span> <span class=\"ow\">in</span> <span class=\"n\">images</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"read_as_json: image = </span><span class=\"si\">{</span><span class=\"n\">image</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">find_pys</span><span class=\"p\">():</span>\n    <span class=\"n\">files</span> <span class=\"o\">=</span> <span class=\"n\">list_by_ext</span><span class=\"p\">(</span><span class=\"s1\">'.'</span><span class=\"p\">,</span> <span class=\"s1\">'py'</span><span class=\"p\">)</span>\n    <span class=\"n\">index</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">files</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">file</span> <span class=\"ow\">in</span> <span class=\"n\">files</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"[</span><span class=\"si\">{</span><span class=\"n\">index</span><span class=\"si\">:</span><span class=\"s2\">0</span><span class=\"si\">{</span><span class=\"n\">width</span><span class=\"si\">}}</span><span class=\"s2\">] </span><span class=\"si\">{</span><span class=\"n\">file</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n        <span class=\"n\">index</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">write_as_lines</span><span class=\"p\">()</span>\n    <span class=\"n\">read_as_lines</span><span class=\"p\">()</span>\n    <span class=\"n\">read_as_string</span><span class=\"p\">()</span>\n    <span class=\"n\">read_as_json</span><span class=\"p\">()</span>\n    <span class=\"n\">find_pys</span><span class=\"p\">()</span>\n</pre>\n<h2>3 Using progress</h2>\n<h3>3.1 print_progress</h3>\n<p>print_progress(msg, current, max, max_width=60)</p>\n<h3>Demo</h3>\n<p>example/demo_files.py</p>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n<span class=\"c1\">#demo_progress.py</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">ezutils.progress</span> <span class=\"kn\">import</span> <span class=\"n\">print_progress</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"nb\">max</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">max</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"n\">print_progress</span><span class=\"p\">(</span><span class=\"s2\">\"MSG:ABC(</span><span class=\"si\">%d</span><span class=\"s2\">)\"</span> <span class=\"o\">%</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"nb\">max</span><span class=\"p\">)</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.01</span><span class=\"p\">)</span>\n</pre>\n<h2>TODO:</h2>\n<h3>pillow utils</h3>\n<p>add roundrect for pillow\nsee and ANTIALIAS  <a href=\"https://www.pyget.cn/p/185266\" rel=\"nofollow\">circle_corner</a></p>\n\n          </div>"}, "last_serial": 6235878, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "5bc9820a7746419974a209588c7d0f95", "sha256": "3c70b2c82362eb9def6ea9174d64c3efb2358d4e146d72071baee1484efc4d2a"}, "downloads": -1, "filename": "ezutils-0.0.3-py3.6.egg", "has_sig": false, "md5_digest": "5bc9820a7746419974a209588c7d0f95", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6", "size": 7094, "upload_time": "2019-11-23T14:38:53", "upload_time_iso_8601": "2019-11-23T14:38:53.161928Z", "url": "https://files.pythonhosted.org/packages/40/fe/777e59bd0ad6417d21428cbf9d5844e854092271225e4a792f4200215964/ezutils-0.0.3-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "eabff71182a9a137f21ac2bf5831efa5", "sha256": "9a5052de16e9849f5d0ba1fc2f14cebe4449ede2b280893898dc65234f33a37a"}, "downloads": -1, "filename": "ezutils-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "eabff71182a9a137f21ac2bf5831efa5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3927, "upload_time": "2019-11-23T14:38:44", "upload_time_iso_8601": "2019-11-23T14:38:44.280308Z", "url": "https://files.pythonhosted.org/packages/3a/6c/3d04cc1e17e21fa4ac86b4471cf2353dcb66465a92d4ff52e83dc504b666/ezutils-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32f4ec2dd3a76f6d01e029953b83f2a3", "sha256": "7d126faad0741b16d59fa4b6af0d130de498071f1f2750a73bbaf04970881e9c"}, "downloads": -1, "filename": "ezutils-0.0.3.tar.gz", "has_sig": false, "md5_digest": "32f4ec2dd3a76f6d01e029953b83f2a3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2874, "upload_time": "2019-11-23T14:38:55", "upload_time_iso_8601": "2019-11-23T14:38:55.091831Z", "url": "https://files.pythonhosted.org/packages/83/f2/caa9f41dc04d13f64860a310fc409d43a4fbd1aa63ce9a4fca7331279d0e/ezutils-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "518b6978fd9f42bdc66dc48bbd4ddd5a", "sha256": "8aefc4a188c9e491f5b77cda92569b5feb3899f8c053297d82200c943eb395c3"}, "downloads": -1, "filename": "ezutils-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "518b6978fd9f42bdc66dc48bbd4ddd5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4750, "upload_time": "2019-12-03T16:13:15", "upload_time_iso_8601": "2019-12-03T16:13:15.153357Z", "url": "https://files.pythonhosted.org/packages/d1/47/cba3b552f886f981fe637f6c013783cf1c9ece5e1dc6e0af81e2fc82201e/ezutils-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbe1cb197a978254f19dcd59c64d8d19", "sha256": "3337fd7748141296795abfa270078c855a2645de31a243093f3593296ec01452"}, "downloads": -1, "filename": "ezutils-0.0.4.tar.gz", "has_sig": false, "md5_digest": "dbe1cb197a978254f19dcd59c64d8d19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4296, "upload_time": "2019-12-03T16:13:17", "upload_time_iso_8601": "2019-12-03T16:13:17.888107Z", "url": "https://files.pythonhosted.org/packages/1c/67/6cdb5f9947aaa4c0c290cd9b54bc4356ed7baf58bbf0797e00c3b0cae147/ezutils-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "518b6978fd9f42bdc66dc48bbd4ddd5a", "sha256": "8aefc4a188c9e491f5b77cda92569b5feb3899f8c053297d82200c943eb395c3"}, "downloads": -1, "filename": "ezutils-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "518b6978fd9f42bdc66dc48bbd4ddd5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4750, "upload_time": "2019-12-03T16:13:15", "upload_time_iso_8601": "2019-12-03T16:13:15.153357Z", "url": "https://files.pythonhosted.org/packages/d1/47/cba3b552f886f981fe637f6c013783cf1c9ece5e1dc6e0af81e2fc82201e/ezutils-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbe1cb197a978254f19dcd59c64d8d19", "sha256": "3337fd7748141296795abfa270078c855a2645de31a243093f3593296ec01452"}, "downloads": -1, "filename": "ezutils-0.0.4.tar.gz", "has_sig": false, "md5_digest": "dbe1cb197a978254f19dcd59c64d8d19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4296, "upload_time": "2019-12-03T16:13:17", "upload_time_iso_8601": "2019-12-03T16:13:17.888107Z", "url": "https://files.pythonhosted.org/packages/1c/67/6cdb5f9947aaa4c0c290cd9b54bc4356ed7baf58bbf0797e00c3b0cae147/ezutils-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:19 2020"}