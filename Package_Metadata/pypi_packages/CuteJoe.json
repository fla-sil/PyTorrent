{"info": {"author": "MatheusBrochi", "author_email": "matheusgbrochi@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Documentation"], "description": "# CuteJoe\n> Commands to automate some release tasks.\n\n![Comb](./comb.svg)\n\n## Installation\n\n### Or on the local machine\n```sh\npip install cutejoe\n```\n\n## Usage\n\nSome commands are available on CLI. To see all available commands, type:\n\n```sh\ncutejoe --help\n```\n\n## Commands\n\n### Configuration File\n> Script to create default configuration file.\n\n```sh\ncutejoe config-file --help\n```\n\n`start` and `end` are the range commits to get the log messages.\n`folder` is where the changelogs will be saved.\n`kinds` are composed of:\n    - labels (prefix of the commit messages),\n    - title (title of this kind section),\n    - version (`major`, `minor` or `patch`).\n`default_title` is the title used if the commit message has no valid kind.\n\n### Changelog\n> Script to generate changelog based on the commit messages.\n\n```sh\ncutejoe changelog --help\n```\n\n#### Changes on changelog generation\n\nFor every PR, the reviewer will be required to follow this pattern when \"squash and merge\" the PR:\n\n`<kind>:<message>`\n\nThe kind and message must be written by the PR owner on the PR message. The reviewer must only copy the kind and message to the merge commit body.\n\n\n**\\* Valid kinds:**\n- `break`: fix or feature that would cause existing functionality to not work as expected;\n- `add`: non-breaking change that adds functionality;\n- `change`: non-breaking change that changes existing functionality;\n- `deprecate`: non-breaking change that deprecates existing functionality;\n- `remove`: non-breaking change that removes existing functionality;\n- `security`: non-breaking change that fixes existing vulnerability;\n- `fix`: non-breaking change that fixes existing issue.\n\n(kinds are defined on the configuration file)\n\n\\*\\*If someone forget to prefix with the kind, the message will be on the `Uncategorized` subsection.\n\n\n_Example:_\n\n`add:script to generate changelog based on commit messages`  *<- THIS MESSAGE MUST BE COPIED TO THE MERGE COMMIT MESSAGE*\n\n\n#### Changes on release and tag process\n\nWhen a release is to be made, we checkout to the `develop` specific commit and run this command:\n\n```sh\ncutejoe changelog\n```\n\nThe changelog is created to the `/changelog` folder and the release branch name is printed on the screen, like `release/v1.0.1`\n\n#### Template for the `.github/PULL_REQUEST_TEMPLATE.md` of your project\n\nIn order to standardize the PR commit messages, it's desirable to create/change the `.github/PULL_REQUEST_TEMPLATE.md`:\n\n```markdown\n## Squash and Merge Message\n\nPlease write the merge message:\n\n`<type*>:<message>`\n\n**\\* Valid types:**\n- `break`: fix or feature that would cause existing functionality to not work as expected;\n- `add`: non-breaking change that adds functionality;\n- `change`: non-breaking change that changes existing functionality;\n- `deprecate`: non-breaking change that deprecates existing functionality;\n- `remove`: non-breaking change that removes existing functionality;\n- `security`: non-breaking change that fixes existing vulnerability;\n- `fix`: non-breaking change that fixes existing issue.\n```\n(kinds are defined on the config file, change the valid types section according to your config file)\n\n### Template for the `README.md` of your project\n\nIt's advisable to inform on the `README.md` the PR commit pattern adopted by your project:\n\n```markdown\nThis project follows the [CuteJoe PR commit pattern and changelog](https://github.com/MatheusBrochi/CuteJoe).\n```\n\n## TODOs\n\n- Commands to automate the entire release process (create branch, change version, etc);\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MatheusBrochi/CuteJoe", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "CuteJoe", "package_url": "https://pypi.org/project/CuteJoe/", "platform": "", "project_url": "https://pypi.org/project/CuteJoe/", "project_urls": {"Changelog": "https://github.com/MatheusBrochi/CuteJoe/tree/master/changelogs", "Homepage": "https://github.com/MatheusBrochi/CuteJoe", "Issue Tracker": "https://github.com/MatheusBrochi/CuteJoe/issues"}, "release_url": "https://pypi.org/project/CuteJoe/0.1.1/", "requires_dist": ["Click (~=7.0)", "PyYAML (~=5.1.2)", "pytest ; extra == 'test'", "pytest-flake8 ; extra == 'test'", "pytest-cov ; extra == 'test'"], "requires_python": "", "summary": "Commands to automate some release tasks", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>CuteJoe</h1>\n<blockquote>\n<p>Commands to automate some release tasks.</p>\n</blockquote>\n<p><img alt=\"Comb\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69c356362458ffc935181cb3487e57c8f5cea605/2e2f636f6d622e737667\"></p>\n<h2>Installation</h2>\n<h3>Or on the local machine</h3>\n<pre>pip install cutejoe\n</pre>\n<h2>Usage</h2>\n<p>Some commands are available on CLI. To see all available commands, type:</p>\n<pre>cutejoe --help\n</pre>\n<h2>Commands</h2>\n<h3>Configuration File</h3>\n<blockquote>\n<p>Script to create default configuration file.</p>\n</blockquote>\n<pre>cutejoe config-file --help\n</pre>\n<p><code>start</code> and <code>end</code> are the range commits to get the log messages.\n<code>folder</code> is where the changelogs will be saved.\n<code>kinds</code> are composed of:\n- labels (prefix of the commit messages),\n- title (title of this kind section),\n- version (<code>major</code>, <code>minor</code> or <code>patch</code>).\n<code>default_title</code> is the title used if the commit message has no valid kind.</p>\n<h3>Changelog</h3>\n<blockquote>\n<p>Script to generate changelog based on the commit messages.</p>\n</blockquote>\n<pre>cutejoe changelog --help\n</pre>\n<h4>Changes on changelog generation</h4>\n<p>For every PR, the reviewer will be required to follow this pattern when \"squash and merge\" the PR:</p>\n<p><code>&lt;kind&gt;:&lt;message&gt;</code></p>\n<p>The kind and message must be written by the PR owner on the PR message. The reviewer must only copy the kind and message to the merge commit body.</p>\n<p><strong>* Valid kinds:</strong></p>\n<ul>\n<li><code>break</code>: fix or feature that would cause existing functionality to not work as expected;</li>\n<li><code>add</code>: non-breaking change that adds functionality;</li>\n<li><code>change</code>: non-breaking change that changes existing functionality;</li>\n<li><code>deprecate</code>: non-breaking change that deprecates existing functionality;</li>\n<li><code>remove</code>: non-breaking change that removes existing functionality;</li>\n<li><code>security</code>: non-breaking change that fixes existing vulnerability;</li>\n<li><code>fix</code>: non-breaking change that fixes existing issue.</li>\n</ul>\n<p>(kinds are defined on the configuration file)</p>\n<p>**If someone forget to prefix with the kind, the message will be on the <code>Uncategorized</code> subsection.</p>\n<p><em>Example:</em></p>\n<p><code>add:script to generate changelog based on commit messages</code>  <em>&lt;- THIS MESSAGE MUST BE COPIED TO THE MERGE COMMIT MESSAGE</em></p>\n<h4>Changes on release and tag process</h4>\n<p>When a release is to be made, we checkout to the <code>develop</code> specific commit and run this command:</p>\n<pre>cutejoe changelog\n</pre>\n<p>The changelog is created to the <code>/changelog</code> folder and the release branch name is printed on the screen, like <code>release/v1.0.1</code></p>\n<h4>Template for the <code>.github/PULL_REQUEST_TEMPLATE.md</code> of your project</h4>\n<p>In order to standardize the PR commit messages, it's desirable to create/change the <code>.github/PULL_REQUEST_TEMPLATE.md</code>:</p>\n<pre>## Squash and Merge Message\n\nPlease write the merge message:\n\n`&lt;type*&gt;:&lt;message&gt;`\n\n**\\* Valid types:**\n- `break`: fix or feature that would cause existing functionality to not work as expected;\n- `add`: non-breaking change that adds functionality;\n- `change`: non-breaking change that changes existing functionality;\n- `deprecate`: non-breaking change that deprecates existing functionality;\n- `remove`: non-breaking change that removes existing functionality;\n- `security`: non-breaking change that fixes existing vulnerability;\n- `fix`: non-breaking change that fixes existing issue.\n</pre>\n<p>(kinds are defined on the config file, change the valid types section according to your config file)</p>\n<h3>Template for the <code>README.md</code> of your project</h3>\n<p>It's advisable to inform on the <code>README.md</code> the PR commit pattern adopted by your project:</p>\n<pre>This project follows the [CuteJoe PR commit pattern and changelog](https://github.com/MatheusBrochi/CuteJoe).\n</pre>\n<h2>TODOs</h2>\n<ul>\n<li>Commands to automate the entire release process (create branch, change version, etc);</li>\n</ul>\n\n          </div>"}, "last_serial": 5804834, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "32a8391b1799d8f2ae064d595bc3d7a0", "sha256": "d8b2ebd0cf93303999676771c84f139508955c6e9027bf9ac3c228c6cba0e9cb"}, "downloads": -1, "filename": "CuteJoe-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "32a8391b1799d8f2ae064d595bc3d7a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9392, "upload_time": "2019-09-09T18:00:31", "upload_time_iso_8601": "2019-09-09T18:00:31.424662Z", "url": "https://files.pythonhosted.org/packages/54/11/235a78801713cc912c7703232c9cfe59d57bc0b741faa5ef64dd295575a1/CuteJoe-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd70bb0a019fe0c9d80b9e9ab99f2a8c", "sha256": "4acf29baea916538c4753b7941d2c60e02f4534d66df6765a5a9d0bb516a657e"}, "downloads": -1, "filename": "CuteJoe-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cd70bb0a019fe0c9d80b9e9ab99f2a8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6970, "upload_time": "2019-09-09T18:00:35", "upload_time_iso_8601": "2019-09-09T18:00:35.134657Z", "url": "https://files.pythonhosted.org/packages/61/1b/55c0a03d818627dc22d7c0d540349fb91fc28c898f22220cd9de39d73e47/CuteJoe-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "410cef03b8acaee4c848999ef27ca4d3", "sha256": "26b3b293a87ac66a159060322d12575bd45918b69e8d15ba707e87861358827d"}, "downloads": -1, "filename": "CuteJoe-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "410cef03b8acaee4c848999ef27ca4d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10018, "upload_time": "2019-09-09T18:00:33", "upload_time_iso_8601": "2019-09-09T18:00:33.751618Z", "url": "https://files.pythonhosted.org/packages/d0/ae/cbc64d793ea930fe2c68dd26ac38cc36c7265f12f0fa0b93119904a28864/CuteJoe-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c67ab299495bbd735a17a0124afe5d49", "sha256": "d2ebb604e0b464e31703cf16bcc14ac940cbd4e4b8f57c294d447336d47faac5"}, "downloads": -1, "filename": "CuteJoe-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c67ab299495bbd735a17a0124afe5d49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7403, "upload_time": "2019-09-09T18:00:36", "upload_time_iso_8601": "2019-09-09T18:00:36.508282Z", "url": "https://files.pythonhosted.org/packages/49/4e/bd74ca2f59b0c5ed0b1b53db20b5618481db70de315b84145269b6c48569/CuteJoe-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "410cef03b8acaee4c848999ef27ca4d3", "sha256": "26b3b293a87ac66a159060322d12575bd45918b69e8d15ba707e87861358827d"}, "downloads": -1, "filename": "CuteJoe-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "410cef03b8acaee4c848999ef27ca4d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10018, "upload_time": "2019-09-09T18:00:33", "upload_time_iso_8601": "2019-09-09T18:00:33.751618Z", "url": "https://files.pythonhosted.org/packages/d0/ae/cbc64d793ea930fe2c68dd26ac38cc36c7265f12f0fa0b93119904a28864/CuteJoe-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c67ab299495bbd735a17a0124afe5d49", "sha256": "d2ebb604e0b464e31703cf16bcc14ac940cbd4e4b8f57c294d447336d47faac5"}, "downloads": -1, "filename": "CuteJoe-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c67ab299495bbd735a17a0124afe5d49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7403, "upload_time": "2019-09-09T18:00:36", "upload_time_iso_8601": "2019-09-09T18:00:36.508282Z", "url": "https://files.pythonhosted.org/packages/49/4e/bd74ca2f59b0c5ed0b1b53db20b5618481db70de315b84145269b6c48569/CuteJoe-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:16 2020"}