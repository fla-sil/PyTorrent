{"info": {"author": "Center for Data Science and Public Policy", "author_email": "datascifellows@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Natural Language :: English", "Programming Language :: Python :: 3.5"], "description": "=======\nDickens\n=======\n\nAdditional Python decorators implementing the descriptor interface.\n\nUse cases\n=========\n\nLike the built-in decorator, ``property``, these classes are initialized by and wrap a function, generally within the context of a class, in order to modify its behavior.\n\ncached property\n---------------\n\nThis decorator functions much like a read-only ``property``, with the difference that, upon access, it records its result in the instance's object data dictionary, which reference takes precedence in look-ups, thereby replacing itself for that object::\n\n    from descriptors import cachedproperty\n\n    @cachedproperty\n    def circumference(self):\n        return 2 * math.pi * self.radius\n\nclass property\n--------------\n\nA read-only ``property`` for class methods::\n\n    from descriptors import classproperty\n\n    @classproperty\n    def badpi(cls):\n        return 22 / 7\n\ncached class property\n---------------------\n\nA class ``property``, which caches its result in the data dictionary of the class from which it was invoked, (under another name, so as not to interfere with inheritance of the property)::\n\n    from descriptors import cachedclassproperty\n\n    @cachedclassproperty\n    def badpi(cls):\n        return 22 / 7\n\nInstallation\n============\n\nDickens is a Python distribution, which may be installed via ``easy_install`` or ``pip``, *e.g.*::\n\n    pip install Dickens\n\n...or, from source::\n\n    python setup.py install\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dssg/dickens", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "Dickens", "package_url": "https://pypi.org/project/Dickens/", "platform": "", "project_url": "https://pypi.org/project/Dickens/", "project_urls": {"Homepage": "https://github.com/dssg/dickens"}, "release_url": "https://pypi.org/project/Dickens/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Additional decorators implementing the descriptor interface", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Additional Python decorators implementing the descriptor interface.</p>\n<div id=\"use-cases\">\n<h2>Use cases</h2>\n<p>Like the built-in decorator, <tt>property</tt>, these classes are initialized by and wrap a function, generally within the context of a class, in order to modify its behavior.</p>\n<div id=\"cached-property\">\n<h3>cached property</h3>\n<p>This decorator functions much like a read-only <tt>property</tt>, with the difference that, upon access, it records its result in the instance\u2019s object data dictionary, which reference takes precedence in look-ups, thereby replacing itself for that object:</p>\n<pre>from descriptors import cachedproperty\n\n@cachedproperty\ndef circumference(self):\n    return 2 * math.pi * self.radius\n</pre>\n</div>\n<div id=\"class-property\">\n<h3>class property</h3>\n<p>A read-only <tt>property</tt> for class methods:</p>\n<pre>from descriptors import classproperty\n\n@classproperty\ndef badpi(cls):\n    return 22 / 7\n</pre>\n</div>\n<div id=\"cached-class-property\">\n<h3>cached class property</h3>\n<p>A class <tt>property</tt>, which caches its result in the data dictionary of the class from which it was invoked, (under another name, so as not to interfere with inheritance of the property):</p>\n<pre>from descriptors import cachedclassproperty\n\n@cachedclassproperty\ndef badpi(cls):\n    return 22 / 7\n</pre>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Dickens is a Python distribution, which may be installed via <tt>easy_install</tt> or <tt>pip</tt>, <em>e.g.</em>:</p>\n<pre>pip install Dickens\n</pre>\n<p>\u2026or, from source:</p>\n<pre>python setup.py install\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3332945, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "eac2a7d41ae65a8efcf9d175e540261a", "sha256": "721688046300f4369d536e0cfbfb54f1eef149a7670871d6209ccaa738f21433"}, "downloads": -1, "filename": "Dickens-1.0.1.tar.gz", "has_sig": false, "md5_digest": "eac2a7d41ae65a8efcf9d175e540261a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2288, "upload_time": "2017-11-14T20:46:16", "upload_time_iso_8601": "2017-11-14T20:46:16.798113Z", "url": "https://files.pythonhosted.org/packages/d3/cd/411a4cbf9b0b79cdc71e557db991105a48132d61d0ca9501dec6ab97b90b/Dickens-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eac2a7d41ae65a8efcf9d175e540261a", "sha256": "721688046300f4369d536e0cfbfb54f1eef149a7670871d6209ccaa738f21433"}, "downloads": -1, "filename": "Dickens-1.0.1.tar.gz", "has_sig": false, "md5_digest": "eac2a7d41ae65a8efcf9d175e540261a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2288, "upload_time": "2017-11-14T20:46:16", "upload_time_iso_8601": "2017-11-14T20:46:16.798113Z", "url": "https://files.pythonhosted.org/packages/d3/cd/411a4cbf9b0b79cdc71e557db991105a48132d61d0ca9501dec6ab97b90b/Dickens-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:34 2020"}