{"info": {"author": "Grok Team", "author_email": "grok-dev@zope.org", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Zope3", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "grokcore.startup\n****************\n\nThis package provides elements for starting a `Grok`_ project with\n`paster`_ and `WSGI`_.\n\n.. contents::\n\nSetting up ``grokcore.startup``\n===============================\n\nThere is nothing special to setup this package.\n\nAll you have to do is, to make this package available during runtime.\n\nWith `zc.buildout`_ or other `setuptools`_-related setups this can be\ndone by simply adding the package name ``grokcore.startup`` to the\nrequired packages of your project in ``setup.py``.\n\n\nDetailed Description\n********************\n\nSetting up Grok projects as ``paster`` served WSGI applications\n===============================================================\n\nThe main target of this package is to provide support for enabling\n`Grok`_ applications to be run as `paster`_ served `WSGI`_\napplications. To make this working some configuration files have to be\nset up.\n\nSetting up a project with ``grokproject``\n-----------------------------------------\n\nThe most convenient way to setup a `Grok`_ project is using\n`grokproject`_. Once installed, you can a project like this::\n\n  $ grokproject Sample\n\nwhich will generate all configuration files for you.\n\n.. note:: Older versions of `grokproject`_ need an update\n\n  As older versions of `grokproject`_ do not support\n  `grokcore.startup`, you might want to update your existing\n  `grokproject`_ installation by running::\n\n    $ easy_install -U grokproject\n\n\nSetting up a project manually\n-----------------------------\n\nBefore we can make use of ``grokcore.startup``, we have to setup\nseveral configuration files in the project root:\n\n* ``setup.py``\n\n* ``buildout.cfg`` (optional)\n\n* ``zope.conf`` (normally found in the ``parts/etc/`` subdirectory of your\n  `Grok`_ project)\n\n* ``site.zcml`` (normally found in the ``parts/etc/`` subdirectory of your\n  `Grok`_ project)\n\n* ``deploy.ini`` (or any other .ini-file; normally found in the\n  ``parts/etc/`` subdirectory of your `Grok`_ project)\n\n\nWhen we want to setup a Zope instance as `paster`_ served `WSGI`_\napplication, then we have to set a ``paste.app_factory`` entry point\nin ``setup.py``. A minimal setup could look like this::\n\n  # setup.py\n  from setuptools import setup, find_packages\n\n  setup(name='sampleproject',\n        version='0.1dev',\n        description=\"A sample project\",\n        long_description=\"\"\"Without a long description.\"\"\",\n        classifiers=[],\n        keywords=\"\",\n        author=\"U.N.Owen\",\n        author_email=\"\",\n        url=\"\",\n        license=\"\",\n        package_dir={'': 'src'},\n        packages=find_packages('src'),\n        include_package_data=True,\n        zip_safe=False,\n        install_requires=['setuptools',],\n        entry_points = \"\"\"\n        [paste.app_factory]\n        main = grokcore.startup:application_factory\n        \"\"\",\n        )\n\nHere the `paste.app_factory` entry point pointing to\n`grokcore.startup:application_factory` is important.\n\nFurthermore we need at least a minimal ``buildout.cfg`` which enables\n`zc.buildout`_ to create the control scripts for our instance::\n\n  [buildout]\n  develop = .\n  parts = app\n\n  [app]\n  recipe = zc.recipe.egg\n  eggs = sampleproject\n         grokcore.startup\n         Paste\n         PasteScript\n         PasteDeploy\n\nHere an egg-entry for ``grokcore.startup`` **might** be important, if\nit is not required otherwise by your application. Projects generated\nby `grokproject`_ will automatically include such a dependency and\nupcoming versions of `Grok`_ will pull in ``grokcore.startup`` anyway,\nso that ``grokcore.startup`` would not be required in this list of\neggs any more.\n\nNext we need ``site.zcml`` and ``zope.conf`` files to define the\nZope instance. These configurations are completely independent from\nbeing served by `Paste`_ or not. If you are upgrading an old `Grok`_\nproject, you can use ``site.zcml`` and ``zope.conf`` of those project\nas-is. You only have to take care of the maybe changed\n``site-definition`` entry in ``zope.conf`` (see below).\n\nThe file ``site.zcml`` can be quite\nshort, but for real projects you certainly want to have some useful\ncontent in here::\n\n  <configure />\n\nA short ``zope.conf`` file for use in tests could look like this::\n\n  site-definition site.zcml\n\n  <zodb>\n    <mappingstorage />\n  </zodb>\n\n  <eventlog>\n    <logfile>\n      path STDOUT\n     </logfile>\n  </eventlog>\n\nwhere the ``site-definition`` entry should point to the location of\nthe file ``site.zcml``. In regular Grok projects those files are put\ninto the ``etc/`` subdirectory of your project root.\n\nFinally we have to provide a ``deploy.ini`` (or another .ini-file),\nwhich tells paster where to find the pieces. This is also put into the\n``etc/`` subdirectory of your project root in regular Grok projects\ncreated by `grokproject`_::\n\n  [app:main]\n  use = egg:sampleproject\n\n  [server:main]\n  use = egg:Paste#http\n  host = 127.0.0.1\n  port = 8080\n\n  [DEFAULT]\n  zope_conf = %(here)s/zope.conf\n\n\n\nAPI Documentation\n=================\n\n``application_factory(global_conf, **local_conf)``\n--------------------------------------------------\n\n  ``grokcore.startup`` provides a function ``application_factory``\n  which delivers a `WSGIPublisherApplication`_ instance when called\n  with an appropriate configuration. See the `zope.app.wsgi\n  documentation\n  <http://apidoc.zope.org/++apidoc++/Code/zope/app/wsgi/README.txt/index.html>`_\n  to learn more about Zope objects supporting `WSGI`_.\n\n  A call to this function is normally required as entry point in\n  `setuptools`_-driven `paster`_ environments  (see\n  http://pythonpaste.org/deploy/#paste-app-factory).\n\n  We have to create our own site definition file -- which will simply\n  be empty -- to provide a minimal test::\n\n    >>> import os, tempfile\n    >>> temp_dir = tempfile.mkdtemp()\n    >>> sitezcml = os.path.join(temp_dir, 'site.zcml')\n    >>> out = open(sitezcml, 'w')\n    >>> _ = out.write('<configure />')\n    >>> out.close()\n\n  Furthermore we create a Zope configuration file, which is also quite\n  plain::\n\n    >>> zope_conf = os.path.join(temp_dir, 'zope.conf')\n    >>> out = open(zope_conf, 'w')\n    >>> _ = out.write('''\n    ... site-definition %s\n    ...\n    ... <zodb>\n    ...   <mappingstorage />\n    ... </zodb>\n    ...\n    ... <eventlog>\n    ...   <logfile>\n    ...     path STDOUT\n    ...   </logfile>\n    ... </eventlog>\n    ... ''' % sitezcml)\n    >>> out.close()\n\n  Now we can call ``application_factory`` to get a WSGI application::\n\n    >>> from grokcore.startup import application_factory\n    >>> app_factory = application_factory({'zope_conf': zope_conf})\n    >>> app_factory\n    <zope.app.wsgi.WSGIPublisherApplication object at 0x...>\n\n``debug_application_factory(global_conf, **local_conf)``\n--------------------------------------------------------\n\n  There's a second application factory that can be used when debugging\n  the application, especially when using the ``z3c.evalexception`` middleware.\n\n  When debugging zope is instructed not to handle any raised exceptions\n  itself. The ``z3c.evalexception`` middleware then catches the exceptions\n  and provides an user interfaces for debugging in the webbrowser.\n\n  As a result also the IUnauthorized execption would not be handled by zope\n  and the authentication mechanisms of zope are not triggered. As a result,\n  when debugging one cannot login.\n\n  The ``debug_application_factory`` function accepts the \"exempt-exceptions\"\n  configuration option. The value for this option should be a comma seperated\n  list of dotted names for each of the execptions that should *still* be\n  handled by zope and not re-raised to be catched by the middleware.\n\n    >>> from grokcore.startup import debug_application_factory\n    >>> app_factory = debug_application_factory({'zope_conf': zope_conf})\n    >>> app_factory\n    <zope.app.wsgi.WSGIPublisherApplication object at 0x...>\n\n    >>> from zope.interface import implementer\n    >>> from zope.security.interfaces import IUnauthorized\n    >>> @implementer(IUnauthorized)\n    ... class UnauthorizedException(object):\n    ...     pass\n    >>>\n    >>> from zope.component import queryAdapter\n    >>> from zope.publisher.interfaces import IReRaiseException\n\n  Since the ``exempt-execptions`` configuration option was not passed,\n  there's no IReRaiseException adapter registered for any type of exceptions\n  including IUnauthorized:\n\n    >>> error = UnauthorizedException()\n    >>> reraise = queryAdapter(error, IReRaiseException, default=None)\n    >>> reraise is None\n    True\n\n  When the option is passed, the adapter will be registered. Calling this\n  adapter yields ``False``, telling zope not to reraise this particular\n  exception.\n\n    >>> app_factory = debug_application_factory(\n    ...     {'zope_conf': zope_conf},\n    ...     **{'exempt-exceptions': 'zope.security.interfaces.IUnauthorized'})\n    >>>\n    >>> reraise = queryAdapter(error, IReRaiseException, default=None)\n    >>> reraise is None\n    False\n    >>> reraise()\n    False\n\n  Clean up the temp_dir\n\n    >>> import shutil\n    >>> shutil.rmtree(temp_dir)\n\n``interactive_debug_prompt(zope_conf_path)``\n--------------------------------------------\n\n  Get an interactive console with a debugging shell started.\n\n  `grokcore.startup` provides two different debuggers currently: a\n  plain one based on `zope.app.debug` and a more powerful `IPython`_\n  debugger. The IPython debugger is automatically enabled if you have\n  IPython available in the environment.\n\n  You can explicitly enable the IPython_ debugger by stating::\n\n    grokcore.startup [debug]\n\n  in the install requirements of your `setup.py`, probably adding only\n  ``[debug]`` to an already existing entry for\n  `grokcore.startup`. Don't forget to rerun `buildout` afterwards.\n\n  You can explicitly require one or the other debugger by calling::\n\n    grokcore.startup.startup.interactive_debug_prompt(zope_conf)\n\n  or::\n\n    grokcore.startup.debug.ipython_debug_prompt(zope_conf)\n\n  in the ``[interactive_debugger]`` section of your ``buildout.cfg``.\n\n    >>> import zope.app.appsetup.appsetup\n    >>> zope.app.appsetup.appsetup._configured = False\n\n    >>> temp_dir = tempfile.mkdtemp()\n\n    >>> sitezcml = os.path.join(temp_dir, 'site.zcml')\n    >>> out = open(sitezcml, 'w')\n    >>> _ = out.write(\n    ...    \"\"\"<configure xmlns=\"http://namespaces.zope.org/zope\">\n    ...   <include package=\"zope.component\" file=\"meta.zcml\"/>\n    ...   <include package=\"zope.component\"/>\n    ...   <include package=\"zope.traversing\"/>\n    ...   <include package=\"zope.security\" file=\"meta.zcml\"/>\n    ...   <include package=\"zope.security\"/>\n    ...   <include package=\"zope.container\"/>\n    ...   <include package=\"zope.site\"/>\n    ...   <include package=\"zope.app.appsetup\"/>\n    ... </configure>\"\"\")\n    >>> out.close()\n    >>>\n    >>> zopeconf = os.path.join(temp_dir, 'zope.conf')\n    >>> out = open(zopeconf, 'w')\n    >>> _ = out.write(\"\"\"\n    ...     site-definition %s\n    ...     <zodb>\n    ...       <filestorage>\n    ...         path %s\n    ...       </filestorage>\n    ...     </zodb>\n    ...     <eventlog>\n    ...       <logfile>\n    ...         path STDOUT\n    ...         formatter zope.exceptions.log.Formatter\n    ...       </logfile>\n    ...     </eventlog>\n    ...     \"\"\" % (sitezcml, os.path.join(temp_dir, 'Data.fs')))\n    >>> out.close()\n    >>>\n    >>> import sys\n    >>> old_argv = sys.argv[:]\n    >>>\n    >>> script = os.path.join(temp_dir, 'script.py')\n    >>> out = open(script, 'w')\n    >>> _ = out.write(\n    ...    \"\"\"import sys\n    ... from pprint import pprint\n    ... pprint(debugger)\n    ... pprint(app)\n    ... pprint(root)\n    ... pprint(sys.argv)\n    ... pprint(__file__)\n    ... pprint(__name__)\"\"\")\n    >>>\n    >>> out.close()\n    >>>\n    >>> sys.argv = ['interactive_debugger', script]\n    >>> from grokcore.startup import interactive_debug_prompt\n    >>> try:\n    ...     interactive_debug_prompt(zopeconf)\n    ... except SystemExit:\n    ...     # Catch the exit from the interactive prompt as it would\n    ...     # exit this test as well.\n    ...     pass\n    ------\n    ...WARNING zope.app.appsetup Security policy is not configured.\n    Please make sure that securitypolicy.zcml is included in site.zcml\n    immediately before principals.zcml\n    ...\n    <zope.app.debug.debug.Debugger object at ...>\n    <zope.app.debug.debug.Debugger object at ...>\n    <zope.site.folder.Folder object at ...>\n    ['...script.py']\n    '...script.py'\n    '__main__'\n\n  Clean up the temp_dir\n\n    >>> sys.argv = old_argv\n    >>> import shutil\n    >>> shutil.rmtree(temp_dir)\n\n.. _grok: http://pypi.python.org/pypi/grok\n.. _grokproject: http://pypi.python.org/pypi/grokproject\n.. _Paste: http://pythonpaste.org/\n.. _paster: Paste_\n.. _setuptools: http://pypi.python.org/pypi/setuptools\n.. _WSGI: http://www.wsgi.org/wsgi/\n.. _WSGIPublisherApplication: http://apidoc.zope.org/++apidoc++/Code/zope/app/wsgi/WSGIPublisherApplication/index.html\n.. _zc.buildout: http://pypi.python.org/pypi/zc.buildout\n.. _ipython: http://ipython.org/\n\nChanges\n*******\n\n3.0.1 (2018-01-12)\n==================\n\n- Rearrange tests such that Travis CI can pick up all functional tests too.\n\n3.0.0 (2018-01-10)\n==================\n\n- Python 3 compatibility.\n\n1.2.1 (2016-02-15)\n==================\n\n- Update tests.\n\n1.2 (2012-05-02)\n================\n\n- Added new IPython-based interactive debugger which is used\n  automatically when IPython is available. Otherwise the gdb-style\n  debugger is provided.\n\n1.1 (2010-10-26)\n================\n\n- Drop zdaemon support.\n\n- Close the database explicitely when execing a script through the\n  ``interactive_debug_prompt``. This came to light in tests on Windows, as the\n  tests would try to delete the temp directory it created with the still\n  unclosed database file in there.\n\n1.0.2 (2010-10-05)\n==================\n\n- Somehow the intended fix in 1.0.1 did not actually get included in that\n  release. We make the fix again.\n\n1.0.1 (2010-08-18)\n==================\n\n- When passing a script to the interactive_debug_prompt command, one would\n  expect to be able to do: `if __name__ == '__main__':`, however __name__ would\n  be \"__builtin__\". This is fixed.\n\n1.0 (2010-05-20)\n================\n\n- Amend the interactive_debug_prompt function to behave more or less like the\n  \"old\" zopectl command. Whenever there's commandline arguments passed to the\n  command, the first one is assumed to be a python script that is 'execfile'd.\n  This allows ad hoc scripts to run against the setup application.\n\n- Make package comply to zope.org repository policy.\n\n- The upgrade notes will be moved to the Grok upgrade notes.\n\n- Define entry points for main and debug application factories in\n  grokcore.startup.\n\n- Use the groktoolkit.\n\n0.4 (2009-10-06)\n================\n\n- Fix documentation bugs.\n\n0.3 (2009-10-02)\n================\n\n* Add a ``debug_application_factory`` function that allows for the\n  ``exempt-exceptions`` configuration option. The value for this option\n  should be a comma seperated list of dotted names for each of the exceptions\n  that should not be re-raised during debugging.\n\n  This for one allow the IUnauthorized exception to still be handled by zope\n  and thus have the normal authentication mechanisms still work.\n\n* Bring versions.cfg in line with current grok versions.cfg.\n\n0.2 (2009-02-21)\n================\n\n* Made main functions available package wide.\n\n0.1 (2009-01-15)\n================\n\n* Added support for local ``zope_conf`` parameter.\n  Fix bug https://bugs.launchpad.net/grok/+bug/320644\n\n* Created ``grokcore.startup`` in January 2009 by factoring paster\n  related application code out of grokcore templates.", "description_content_type": null, "docs_url": null, "download_url": "http://pypi.python.org/pypi/grokcore.startup", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://grok.zope.org", "keywords": "zope zope3 grok grokproject WSGI Paste paster", "license": "ZPL", "maintainer": "", "maintainer_email": "", "name": "grokcore.startup", "package_url": "https://pypi.org/project/grokcore.startup/", "platform": "", "project_url": "https://pypi.org/project/grokcore.startup/", "project_urls": {"Download": "http://pypi.python.org/pypi/grokcore.startup", "Homepage": "http://grok.zope.org"}, "release_url": "https://pypi.org/project/grokcore.startup/3.0.1/", "requires_dist": null, "requires_python": "", "summary": "Paster support for Grok projects.", "version": "3.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"grokcore-startup\">\n<h2><a href=\"#id13\" rel=\"nofollow\">grokcore.startup</a></h2>\n<p>This package provides elements for starting a <a href=\"http://pypi.python.org/pypi/grok\" rel=\"nofollow\">Grok</a> project with\n<a href=\"http://pythonpaste.org/\" rel=\"nofollow\">paster</a> and <a href=\"http://www.wsgi.org/wsgi/\" rel=\"nofollow\">WSGI</a>.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#grokcore-startup\" id=\"id13\" rel=\"nofollow\">grokcore.startup</a><ul>\n<li><a href=\"#setting-up-grokcore-startup\" id=\"id14\" rel=\"nofollow\">Setting up <tt>grokcore.startup</tt></a></li>\n</ul>\n</li>\n<li><a href=\"#detailed-description\" id=\"id15\" rel=\"nofollow\">Detailed Description</a><ul>\n<li><a href=\"#setting-up-grok-projects-as-paster-served-wsgi-applications\" id=\"id16\" rel=\"nofollow\">Setting up Grok projects as <tt>paster</tt> served WSGI applications</a><ul>\n<li><a href=\"#setting-up-a-project-with-grokproject\" id=\"id17\" rel=\"nofollow\">Setting up a project with <tt>grokproject</tt></a></li>\n<li><a href=\"#setting-up-a-project-manually\" id=\"id18\" rel=\"nofollow\">Setting up a project manually</a></li>\n</ul>\n</li>\n<li><a href=\"#api-documentation\" id=\"id19\" rel=\"nofollow\">API Documentation</a><ul>\n<li><a href=\"#application-factory-global-conf-local-conf\" id=\"id20\" rel=\"nofollow\"><tt>application_factory(global_conf, **local_conf)</tt></a></li>\n<li><a href=\"#debug-application-factory-global-conf-local-conf\" id=\"id21\" rel=\"nofollow\"><tt>debug_application_factory(global_conf, **local_conf)</tt></a></li>\n<li><a href=\"#interactive-debug-prompt-zope-conf-path\" id=\"id22\" rel=\"nofollow\"><tt>interactive_debug_prompt(zope_conf_path)</tt></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#changes\" id=\"id23\" rel=\"nofollow\">Changes</a><ul>\n<li><a href=\"#id1\" id=\"id24\" rel=\"nofollow\">3.0.1 (2018-01-12)</a></li>\n<li><a href=\"#id2\" id=\"id25\" rel=\"nofollow\">3.0.0 (2018-01-10)</a></li>\n<li><a href=\"#id3\" id=\"id26\" rel=\"nofollow\">1.2.1 (2016-02-15)</a></li>\n<li><a href=\"#id4\" id=\"id27\" rel=\"nofollow\">1.2 (2012-05-02)</a></li>\n<li><a href=\"#id5\" id=\"id28\" rel=\"nofollow\">1.1 (2010-10-26)</a></li>\n<li><a href=\"#id6\" id=\"id29\" rel=\"nofollow\">1.0.2 (2010-10-05)</a></li>\n<li><a href=\"#id7\" id=\"id30\" rel=\"nofollow\">1.0.1 (2010-08-18)</a></li>\n<li><a href=\"#id8\" id=\"id31\" rel=\"nofollow\">1.0 (2010-05-20)</a></li>\n<li><a href=\"#id9\" id=\"id32\" rel=\"nofollow\">0.4 (2009-10-06)</a></li>\n<li><a href=\"#id10\" id=\"id33\" rel=\"nofollow\">0.3 (2009-10-02)</a></li>\n<li><a href=\"#id11\" id=\"id34\" rel=\"nofollow\">0.2 (2009-02-21)</a></li>\n<li><a href=\"#id12\" id=\"id35\" rel=\"nofollow\">0.1 (2009-01-15)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"setting-up-grokcore-startup\">\n<h3><a href=\"#id14\" rel=\"nofollow\">Setting up <tt>grokcore.startup</tt></a></h3>\n<p>There is nothing special to setup this package.</p>\n<p>All you have to do is, to make this package available during runtime.</p>\n<p>With <a href=\"http://pypi.python.org/pypi/zc.buildout\" rel=\"nofollow\">zc.buildout</a> or other <a href=\"http://pypi.python.org/pypi/setuptools\" rel=\"nofollow\">setuptools</a>-related setups this can be\ndone by simply adding the package name <tt>grokcore.startup</tt> to the\nrequired packages of your project in <tt>setup.py</tt>.</p>\n</div>\n</div>\n<div id=\"detailed-description\">\n<h2><a href=\"#id15\" rel=\"nofollow\">Detailed Description</a></h2>\n<div id=\"setting-up-grok-projects-as-paster-served-wsgi-applications\">\n<h3><a href=\"#id16\" rel=\"nofollow\">Setting up Grok projects as <tt>paster</tt> served WSGI applications</a></h3>\n<p>The main target of this package is to provide support for enabling\n<a href=\"http://pypi.python.org/pypi/grok\" rel=\"nofollow\">Grok</a> applications to be run as <a href=\"http://pythonpaste.org/\" rel=\"nofollow\">paster</a> served <a href=\"http://www.wsgi.org/wsgi/\" rel=\"nofollow\">WSGI</a>\napplications. To make this working some configuration files have to be\nset up.</p>\n<div id=\"setting-up-a-project-with-grokproject\">\n<h4><a href=\"#id17\" rel=\"nofollow\">Setting up a project with <tt>grokproject</tt></a></h4>\n<p>The most convenient way to setup a <a href=\"http://pypi.python.org/pypi/grok\" rel=\"nofollow\">Grok</a> project is using\n<a href=\"http://pypi.python.org/pypi/grokproject\" rel=\"nofollow\">grokproject</a>. Once installed, you can a project like this:</p>\n<pre>$ grokproject Sample\n</pre>\n<p>which will generate all configuration files for you.</p>\n<div>\n<p>Note</p>\n<p>Older versions of <a href=\"http://pypi.python.org/pypi/grokproject\" rel=\"nofollow\">grokproject</a> need an update</p>\n<p>As older versions of <a href=\"http://pypi.python.org/pypi/grokproject\" rel=\"nofollow\">grokproject</a> do not support\n<cite>grokcore.startup</cite>, you might want to update your existing\n<a href=\"http://pypi.python.org/pypi/grokproject\" rel=\"nofollow\">grokproject</a> installation by running:</p>\n<pre>$ easy_install -U grokproject\n</pre>\n</div>\n</div>\n<div id=\"setting-up-a-project-manually\">\n<h4><a href=\"#id18\" rel=\"nofollow\">Setting up a project manually</a></h4>\n<p>Before we can make use of <tt>grokcore.startup</tt>, we have to setup\nseveral configuration files in the project root:</p>\n<ul>\n<li><tt>setup.py</tt></li>\n<li><tt>buildout.cfg</tt> (optional)</li>\n<li><tt>zope.conf</tt> (normally found in the <tt>parts/etc/</tt> subdirectory of your\n<a href=\"http://pypi.python.org/pypi/grok\" rel=\"nofollow\">Grok</a> project)</li>\n<li><tt>site.zcml</tt> (normally found in the <tt>parts/etc/</tt> subdirectory of your\n<a href=\"http://pypi.python.org/pypi/grok\" rel=\"nofollow\">Grok</a> project)</li>\n<li><tt>deploy.ini</tt> (or any other .ini-file; normally found in the\n<tt>parts/etc/</tt> subdirectory of your <a href=\"http://pypi.python.org/pypi/grok\" rel=\"nofollow\">Grok</a> project)</li>\n</ul>\n<p>When we want to setup a Zope instance as <a href=\"http://pythonpaste.org/\" rel=\"nofollow\">paster</a> served <a href=\"http://www.wsgi.org/wsgi/\" rel=\"nofollow\">WSGI</a>\napplication, then we have to set a <tt>paste.app_factory</tt> entry point\nin <tt>setup.py</tt>. A minimal setup could look like this:</p>\n<pre># setup.py\nfrom setuptools import setup, find_packages\n\nsetup(name='sampleproject',\n      version='0.1dev',\n      description=\"A sample project\",\n      long_description=\"\"\"Without a long description.\"\"\",\n      classifiers=[],\n      keywords=\"\",\n      author=\"U.N.Owen\",\n      author_email=\"\",\n      url=\"\",\n      license=\"\",\n      package_dir={'': 'src'},\n      packages=find_packages('src'),\n      include_package_data=True,\n      zip_safe=False,\n      install_requires=['setuptools',],\n      entry_points = \"\"\"\n      [paste.app_factory]\n      main = grokcore.startup:application_factory\n      \"\"\",\n      )\n</pre>\n<p>Here the <cite>paste.app_factory</cite> entry point pointing to\n<cite>grokcore.startup:application_factory</cite> is important.</p>\n<p>Furthermore we need at least a minimal <tt>buildout.cfg</tt> which enables\n<a href=\"http://pypi.python.org/pypi/zc.buildout\" rel=\"nofollow\">zc.buildout</a> to create the control scripts for our instance:</p>\n<pre>[buildout]\ndevelop = .\nparts = app\n\n[app]\nrecipe = zc.recipe.egg\neggs = sampleproject\n       grokcore.startup\n       Paste\n       PasteScript\n       PasteDeploy\n</pre>\n<p>Here an egg-entry for <tt>grokcore.startup</tt> <strong>might</strong> be important, if\nit is not required otherwise by your application. Projects generated\nby <a href=\"http://pypi.python.org/pypi/grokproject\" rel=\"nofollow\">grokproject</a> will automatically include such a dependency and\nupcoming versions of <a href=\"http://pypi.python.org/pypi/grok\" rel=\"nofollow\">Grok</a> will pull in <tt>grokcore.startup</tt> anyway,\nso that <tt>grokcore.startup</tt> would not be required in this list of\neggs any more.</p>\n<p>Next we need <tt>site.zcml</tt> and <tt>zope.conf</tt> files to define the\nZope instance. These configurations are completely independent from\nbeing served by <a href=\"http://pythonpaste.org/\" rel=\"nofollow\">Paste</a> or not. If you are upgrading an old <a href=\"http://pypi.python.org/pypi/grok\" rel=\"nofollow\">Grok</a>\nproject, you can use <tt>site.zcml</tt> and <tt>zope.conf</tt> of those project\nas-is. You only have to take care of the maybe changed\n<tt><span class=\"pre\">site-definition</span></tt> entry in <tt>zope.conf</tt> (see below).</p>\n<p>The file <tt>site.zcml</tt> can be quite\nshort, but for real projects you certainly want to have some useful\ncontent in here:</p>\n<pre>&lt;configure /&gt;\n</pre>\n<p>A short <tt>zope.conf</tt> file for use in tests could look like this:</p>\n<pre>site-definition site.zcml\n\n&lt;zodb&gt;\n  &lt;mappingstorage /&gt;\n&lt;/zodb&gt;\n\n&lt;eventlog&gt;\n  &lt;logfile&gt;\n    path STDOUT\n   &lt;/logfile&gt;\n&lt;/eventlog&gt;\n</pre>\n<p>where the <tt><span class=\"pre\">site-definition</span></tt> entry should point to the location of\nthe file <tt>site.zcml</tt>. In regular Grok projects those files are put\ninto the <tt>etc/</tt> subdirectory of your project root.</p>\n<p>Finally we have to provide a <tt>deploy.ini</tt> (or another .ini-file),\nwhich tells paster where to find the pieces. This is also put into the\n<tt>etc/</tt> subdirectory of your project root in regular Grok projects\ncreated by <a href=\"http://pypi.python.org/pypi/grokproject\" rel=\"nofollow\">grokproject</a>:</p>\n<pre>[app:main]\nuse = egg:sampleproject\n\n[server:main]\nuse = egg:Paste#http\nhost = 127.0.0.1\nport = 8080\n\n[DEFAULT]\nzope_conf = %(here)s/zope.conf\n</pre>\n</div>\n</div>\n<div id=\"api-documentation\">\n<h3><a href=\"#id19\" rel=\"nofollow\">API Documentation</a></h3>\n<div id=\"application-factory-global-conf-local-conf\">\n<h4><a href=\"#id20\" rel=\"nofollow\"><tt>application_factory(global_conf, **local_conf)</tt></a></h4>\n<blockquote>\n<p><tt>grokcore.startup</tt> provides a function <tt>application_factory</tt>\nwhich delivers a <a href=\"http://apidoc.zope.org/++apidoc++/Code/zope/app/wsgi/WSGIPublisherApplication/index.html\" rel=\"nofollow\">WSGIPublisherApplication</a> instance when called\nwith an appropriate configuration. See the <a href=\"http://apidoc.zope.org/++apidoc++/Code/zope/app/wsgi/README.txt/index.html\" rel=\"nofollow\">zope.app.wsgi\ndocumentation</a>\nto learn more about Zope objects supporting <a href=\"http://www.wsgi.org/wsgi/\" rel=\"nofollow\">WSGI</a>.</p>\n<p>A call to this function is normally required as entry point in\n<a href=\"http://pypi.python.org/pypi/setuptools\" rel=\"nofollow\">setuptools</a>-driven <a href=\"http://pythonpaste.org/\" rel=\"nofollow\">paster</a> environments  (see\n<a href=\"http://pythonpaste.org/deploy/#paste-app-factory\" rel=\"nofollow\">http://pythonpaste.org/deploy/#paste-app-factory</a>).</p>\n<p>We have to create our own site definition file \u2013 which will simply\nbe empty \u2013 to provide a minimal test:</p>\n<pre>&gt;&gt;&gt; import os, tempfile\n&gt;&gt;&gt; temp_dir = tempfile.mkdtemp()\n&gt;&gt;&gt; sitezcml = os.path.join(temp_dir, 'site.zcml')\n&gt;&gt;&gt; out = open(sitezcml, 'w')\n&gt;&gt;&gt; _ = out.write('&lt;configure /&gt;')\n&gt;&gt;&gt; out.close()\n</pre>\n<p>Furthermore we create a Zope configuration file, which is also quite\nplain:</p>\n<pre>&gt;&gt;&gt; zope_conf = os.path.join(temp_dir, 'zope.conf')\n&gt;&gt;&gt; out = open(zope_conf, 'w')\n&gt;&gt;&gt; _ = out.write('''\n... site-definition %s\n...\n... &lt;zodb&gt;\n...   &lt;mappingstorage /&gt;\n... &lt;/zodb&gt;\n...\n... &lt;eventlog&gt;\n...   &lt;logfile&gt;\n...     path STDOUT\n...   &lt;/logfile&gt;\n... &lt;/eventlog&gt;\n... ''' % sitezcml)\n&gt;&gt;&gt; out.close()\n</pre>\n<p>Now we can call <tt>application_factory</tt> to get a WSGI application:</p>\n<pre>&gt;&gt;&gt; from grokcore.startup import application_factory\n&gt;&gt;&gt; app_factory = application_factory({'zope_conf': zope_conf})\n&gt;&gt;&gt; app_factory\n&lt;zope.app.wsgi.WSGIPublisherApplication object at 0x...&gt;\n</pre>\n</blockquote>\n</div>\n<div id=\"debug-application-factory-global-conf-local-conf\">\n<h4><a href=\"#id21\" rel=\"nofollow\"><tt>debug_application_factory(global_conf, **local_conf)</tt></a></h4>\n<blockquote>\n<p>There\u2019s a second application factory that can be used when debugging\nthe application, especially when using the <tt>z3c.evalexception</tt> middleware.</p>\n<p>When debugging zope is instructed not to handle any raised exceptions\nitself. The <tt>z3c.evalexception</tt> middleware then catches the exceptions\nand provides an user interfaces for debugging in the webbrowser.</p>\n<p>As a result also the IUnauthorized execption would not be handled by zope\nand the authentication mechanisms of zope are not triggered. As a result,\nwhen debugging one cannot login.</p>\n<p>The <tt>debug_application_factory</tt> function accepts the \u201cexempt-exceptions\u201d\nconfiguration option. The value for this option should be a comma seperated\nlist of dotted names for each of the execptions that should <em>still</em> be\nhandled by zope and not re-raised to be catched by the middleware.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from grokcore.startup import debug_application_factory\n&gt;&gt;&gt; app_factory = debug_application_factory({'zope_conf': zope_conf})\n&gt;&gt;&gt; app_factory\n&lt;zope.app.wsgi.WSGIPublisherApplication object at 0x...&gt;\n</pre>\n<pre>&gt;&gt;&gt; from zope.interface import implementer\n&gt;&gt;&gt; from zope.security.interfaces import IUnauthorized\n&gt;&gt;&gt; @implementer(IUnauthorized)\n... class UnauthorizedException(object):\n...     pass\n&gt;&gt;&gt;\n&gt;&gt;&gt; from zope.component import queryAdapter\n&gt;&gt;&gt; from zope.publisher.interfaces import IReRaiseException\n</pre>\n</blockquote>\n<p>Since the <tt><span class=\"pre\">exempt-execptions</span></tt> configuration option was not passed,\nthere\u2019s no IReRaiseException adapter registered for any type of exceptions\nincluding IUnauthorized:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; error = UnauthorizedException()\n&gt;&gt;&gt; reraise = queryAdapter(error, IReRaiseException, default=None)\n&gt;&gt;&gt; reraise is None\nTrue\n</pre>\n</blockquote>\n<p>When the option is passed, the adapter will be registered. Calling this\nadapter yields <tt>False</tt>, telling zope not to reraise this particular\nexception.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; app_factory = debug_application_factory(\n...     {'zope_conf': zope_conf},\n...     **{'exempt-exceptions': 'zope.security.interfaces.IUnauthorized'})\n&gt;&gt;&gt;\n&gt;&gt;&gt; reraise = queryAdapter(error, IReRaiseException, default=None)\n&gt;&gt;&gt; reraise is None\nFalse\n&gt;&gt;&gt; reraise()\nFalse\n</pre>\n</blockquote>\n<p>Clean up the temp_dir</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import shutil\n&gt;&gt;&gt; shutil.rmtree(temp_dir)\n</pre>\n</blockquote>\n</blockquote>\n</div>\n<div id=\"interactive-debug-prompt-zope-conf-path\">\n<h4><a href=\"#id22\" rel=\"nofollow\"><tt>interactive_debug_prompt(zope_conf_path)</tt></a></h4>\n<blockquote>\n<p>Get an interactive console with a debugging shell started.</p>\n<p><cite>grokcore.startup</cite> provides two different debuggers currently: a\nplain one based on <cite>zope.app.debug</cite> and a more powerful <a href=\"http://ipython.org/\" rel=\"nofollow\">IPython</a>\ndebugger. The IPython debugger is automatically enabled if you have\nIPython available in the environment.</p>\n<p>You can explicitly enable the <a href=\"http://ipython.org/\" rel=\"nofollow\">IPython</a> debugger by stating:</p>\n<pre>grokcore.startup [debug]\n</pre>\n<p>in the install requirements of your <cite>setup.py</cite>, probably adding only\n<tt>[debug]</tt> to an already existing entry for\n<cite>grokcore.startup</cite>. Don\u2019t forget to rerun <cite>buildout</cite> afterwards.</p>\n<p>You can explicitly require one or the other debugger by calling:</p>\n<pre>grokcore.startup.startup.interactive_debug_prompt(zope_conf)\n</pre>\n<p>or:</p>\n<pre>grokcore.startup.debug.ipython_debug_prompt(zope_conf)\n</pre>\n<p>in the <tt>[interactive_debugger]</tt> section of your <tt>buildout.cfg</tt>.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import zope.app.appsetup.appsetup\n&gt;&gt;&gt; zope.app.appsetup.appsetup._configured = False\n</pre>\n<pre>&gt;&gt;&gt; temp_dir = tempfile.mkdtemp()\n</pre>\n<pre>&gt;&gt;&gt; sitezcml = os.path.join(temp_dir, 'site.zcml')\n&gt;&gt;&gt; out = open(sitezcml, 'w')\n&gt;&gt;&gt; _ = out.write(\n...    \"\"\"&lt;configure xmlns=\"http://namespaces.zope.org/zope\"&gt;\n...   &lt;include package=\"zope.component\" file=\"meta.zcml\"/&gt;\n...   &lt;include package=\"zope.component\"/&gt;\n...   &lt;include package=\"zope.traversing\"/&gt;\n...   &lt;include package=\"zope.security\" file=\"meta.zcml\"/&gt;\n...   &lt;include package=\"zope.security\"/&gt;\n...   &lt;include package=\"zope.container\"/&gt;\n...   &lt;include package=\"zope.site\"/&gt;\n...   &lt;include package=\"zope.app.appsetup\"/&gt;\n... &lt;/configure&gt;\"\"\")\n&gt;&gt;&gt; out.close()\n&gt;&gt;&gt;\n&gt;&gt;&gt; zopeconf = os.path.join(temp_dir, 'zope.conf')\n&gt;&gt;&gt; out = open(zopeconf, 'w')\n&gt;&gt;&gt; _ = out.write(\"\"\"\n...     site-definition %s\n...     &lt;zodb&gt;\n...       &lt;filestorage&gt;\n...         path %s\n...       &lt;/filestorage&gt;\n...     &lt;/zodb&gt;\n...     &lt;eventlog&gt;\n...       &lt;logfile&gt;\n...         path STDOUT\n...         formatter zope.exceptions.log.Formatter\n...       &lt;/logfile&gt;\n...     &lt;/eventlog&gt;\n...     \"\"\" % (sitezcml, os.path.join(temp_dir, 'Data.fs')))\n&gt;&gt;&gt; out.close()\n&gt;&gt;&gt;\n&gt;&gt;&gt; import sys\n&gt;&gt;&gt; old_argv = sys.argv[:]\n&gt;&gt;&gt;\n&gt;&gt;&gt; script = os.path.join(temp_dir, 'script.py')\n&gt;&gt;&gt; out = open(script, 'w')\n&gt;&gt;&gt; _ = out.write(\n...    \"\"\"import sys\n... from pprint import pprint\n... pprint(debugger)\n... pprint(app)\n... pprint(root)\n... pprint(sys.argv)\n... pprint(__file__)\n... pprint(__name__)\"\"\")\n&gt;&gt;&gt;\n&gt;&gt;&gt; out.close()\n&gt;&gt;&gt;\n&gt;&gt;&gt; sys.argv = ['interactive_debugger', script]\n&gt;&gt;&gt; from grokcore.startup import interactive_debug_prompt\n&gt;&gt;&gt; try:\n...     interactive_debug_prompt(zopeconf)\n... except SystemExit:\n...     # Catch the exit from the interactive prompt as it would\n...     # exit this test as well.\n...     pass\n------\n...WARNING zope.app.appsetup Security policy is not configured.\nPlease make sure that securitypolicy.zcml is included in site.zcml\nimmediately before principals.zcml\n...\n&lt;zope.app.debug.debug.Debugger object at ...&gt;\n&lt;zope.app.debug.debug.Debugger object at ...&gt;\n&lt;zope.site.folder.Folder object at ...&gt;\n['...script.py']\n'...script.py'\n'__main__'\n</pre>\n</blockquote>\n<p>Clean up the temp_dir</p>\n<blockquote>\n<pre>&gt;&gt;&gt; sys.argv = old_argv\n&gt;&gt;&gt; import shutil\n&gt;&gt;&gt; shutil.rmtree(temp_dir)\n</pre>\n</blockquote>\n</blockquote>\n</div>\n</div>\n</div>\n<div id=\"changes\">\n<h2><a href=\"#id23\" rel=\"nofollow\">Changes</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id24\" rel=\"nofollow\">3.0.1 (2018-01-12)</a></h3>\n<ul>\n<li>Rearrange tests such that Travis CI can pick up all functional tests too.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id25\" rel=\"nofollow\">3.0.0 (2018-01-10)</a></h3>\n<ul>\n<li>Python 3 compatibility.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id26\" rel=\"nofollow\">1.2.1 (2016-02-15)</a></h3>\n<ul>\n<li>Update tests.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id27\" rel=\"nofollow\">1.2 (2012-05-02)</a></h3>\n<ul>\n<li>Added new IPython-based interactive debugger which is used\nautomatically when IPython is available. Otherwise the gdb-style\ndebugger is provided.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id28\" rel=\"nofollow\">1.1 (2010-10-26)</a></h3>\n<ul>\n<li>Drop zdaemon support.</li>\n<li>Close the database explicitely when execing a script through the\n<tt>interactive_debug_prompt</tt>. This came to light in tests on Windows, as the\ntests would try to delete the temp directory it created with the still\nunclosed database file in there.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id29\" rel=\"nofollow\">1.0.2 (2010-10-05)</a></h3>\n<ul>\n<li>Somehow the intended fix in 1.0.1 did not actually get included in that\nrelease. We make the fix again.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id30\" rel=\"nofollow\">1.0.1 (2010-08-18)</a></h3>\n<ul>\n<li>When passing a script to the interactive_debug_prompt command, one would\nexpect to be able to do: <cite>if __name__ == \u2018__main__\u2019:</cite>, however __name__ would\nbe \u201c__builtin__\u201d. This is fixed.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id31\" rel=\"nofollow\">1.0 (2010-05-20)</a></h3>\n<ul>\n<li>Amend the interactive_debug_prompt function to behave more or less like the\n\u201cold\u201d zopectl command. Whenever there\u2019s commandline arguments passed to the\ncommand, the first one is assumed to be a python script that is \u2018execfile\u2019d.\nThis allows ad hoc scripts to run against the setup application.</li>\n<li>Make package comply to zope.org repository policy.</li>\n<li>The upgrade notes will be moved to the Grok upgrade notes.</li>\n<li>Define entry points for main and debug application factories in\ngrokcore.startup.</li>\n<li>Use the groktoolkit.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3><a href=\"#id32\" rel=\"nofollow\">0.4 (2009-10-06)</a></h3>\n<ul>\n<li>Fix documentation bugs.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3><a href=\"#id33\" rel=\"nofollow\">0.3 (2009-10-02)</a></h3>\n<ul>\n<li><p>Add a <tt>debug_application_factory</tt> function that allows for the\n<tt><span class=\"pre\">exempt-exceptions</span></tt> configuration option. The value for this option\nshould be a comma seperated list of dotted names for each of the exceptions\nthat should not be re-raised during debugging.</p>\n<p>This for one allow the IUnauthorized exception to still be handled by zope\nand thus have the normal authentication mechanisms still work.</p>\n</li>\n<li><p>Bring versions.cfg in line with current grok versions.cfg.</p>\n</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3><a href=\"#id34\" rel=\"nofollow\">0.2 (2009-02-21)</a></h3>\n<ul>\n<li>Made main functions available package wide.</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3><a href=\"#id35\" rel=\"nofollow\">0.1 (2009-01-15)</a></h3>\n<ul>\n<li>Added support for local <tt>zope_conf</tt> parameter.\nFix bug <a href=\"https://bugs.launchpad.net/grok/+bug/320644\" rel=\"nofollow\">https://bugs.launchpad.net/grok/+bug/320644</a></li>\n<li>Created <tt>grokcore.startup</tt> in January 2009 by factoring paster\nrelated application code out of grokcore templates.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3484026, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a0e4aa0b6f10586eb5352a930d44b3ed", "sha256": "8080e7de6033631a89a9663a8403b266bf1252dec75b56556df7690a0d04bb00"}, "downloads": -1, "filename": "grokcore.startup-0.1.tar.gz", "has_sig": false, "md5_digest": "a0e4aa0b6f10586eb5352a930d44b3ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12944, "upload_time": "2009-02-15T12:11:19", "upload_time_iso_8601": "2009-02-15T12:11:19.214718Z", "url": "https://files.pythonhosted.org/packages/ab/01/47b11e4346869f314abc19be81cb6c4a9d83f3a16f73b322bbc9e5cd422a/grokcore.startup-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "5b595056e259aab1897c3ad0b50c1f0e", "sha256": "8167b14a00292b97e3fe425e275dacb75925b023775484a2a8f623e01545c1b9"}, "downloads": -1, "filename": "grokcore.startup-0.2.tar.gz", "has_sig": false, "md5_digest": "5b595056e259aab1897c3ad0b50c1f0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13555, "upload_time": "2009-02-21T14:24:50", "upload_time_iso_8601": "2009-02-21T14:24:50.850405Z", "url": "https://files.pythonhosted.org/packages/82/3a/f0ce5f1d9b9741cd007951fda51401d0661b01c7a0d2a2545692b30996e3/grokcore.startup-0.2.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "d40aaebef89d2f2e483410951c562f70", "sha256": "c7eee8548f4befc1b3d1fbb7e3c66a346473335f292c943234f188833d8ee288"}, "downloads": -1, "filename": "grokcore.startup-0.4.tar.gz", "has_sig": false, "md5_digest": "d40aaebef89d2f2e483410951c562f70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13164, "upload_time": "2009-10-06T21:39:20", "upload_time_iso_8601": "2009-10-06T21:39:20.211914Z", "url": "https://files.pythonhosted.org/packages/9a/1e/3d075607a30ba3283f55473d1bf957576c95c3972f2813fb5290fcb317a1/grokcore.startup-0.4.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "dead61b51b0539db2f599418a53d72f3", "sha256": "7d0b1662ee4f3ddf1a26d5520d4c4587d19b6a073ed27cd9826d09b69e734d5e"}, "downloads": -1, "filename": "grokcore.startup-1.0.tar.gz", "has_sig": false, "md5_digest": "dead61b51b0539db2f599418a53d72f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15981, "upload_time": "2010-05-20T13:10:01", "upload_time_iso_8601": "2010-05-20T13:10:01.691275Z", "url": "https://files.pythonhosted.org/packages/c1/67/7db6945109f81401264763219ffabe7037301e09409faacebf485ef6e848/grokcore.startup-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0c4888a24ff4df88a691ac02a19a6415", "sha256": "cdff98122c61b5c0562803bb2cb1c1d0be7d69cbe9c9cab21ea5ac003a75f21c"}, "downloads": -1, "filename": "grokcore.startup-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0c4888a24ff4df88a691ac02a19a6415", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16117, "upload_time": "2010-08-18T17:50:36", "upload_time_iso_8601": "2010-08-18T17:50:36.523708Z", "url": "https://files.pythonhosted.org/packages/c2/af/3324a5be5e0ee93bda9e03d2e87e3a76ce63c4bdb44e4166fedacf67dea2/grokcore.startup-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "7ff4b2781c439d1b32c978ad74f78d5c", "sha256": "01b6bb76c15853cebc48c236dc7b0856b575b07f8f326f820e124a992dd3e5cf"}, "downloads": -1, "filename": "grokcore.startup-1.0.2.tar.gz", "has_sig": false, "md5_digest": "7ff4b2781c439d1b32c978ad74f78d5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15258, "upload_time": "2010-10-05T10:56:10", "upload_time_iso_8601": "2010-10-05T10:56:10.431489Z", "url": "https://files.pythonhosted.org/packages/15/d7/88308f4aad6bb3381055dc31b7389377db34e6a5f7a251ac71580eb26222/grokcore.startup-1.0.2.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "15b63056170d61b628353cc94cbd359f", "sha256": "c3cafa25eb2a1a66f0ad0bb98a10bbb7b3efb114e765bf7e63e5c8a2c2c53b35"}, "downloads": -1, "filename": "grokcore.startup-1.1.tar.gz", "has_sig": false, "md5_digest": "15b63056170d61b628353cc94cbd359f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14860, "upload_time": "2010-10-26T16:38:51", "upload_time_iso_8601": "2010-10-26T16:38:51.038837Z", "url": "https://files.pythonhosted.org/packages/9f/a5/4b6575bfef540301e37b3e78e24b943fd5f332953f9937ab810416a47b5f/grokcore.startup-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "5e59d14dc5473ad88cdb4779d6549261", "sha256": "f12bb02c49d7c074927ba5872486325b3eaf3c58bb11fc82506d22cee6faf843"}, "downloads": -1, "filename": "grokcore.startup-1.2.tar.gz", "has_sig": false, "md5_digest": "5e59d14dc5473ad88cdb4779d6549261", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23544, "upload_time": "2012-05-02T10:42:16", "upload_time_iso_8601": "2012-05-02T10:42:16.211697Z", "url": "https://files.pythonhosted.org/packages/80/98/c4c40a6250a9c3fa5875118f67681faa09c808808dee32deccffce195924/grokcore.startup-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "e2a0d030c55c23c81b6fa74c58d33417", "sha256": "da81475b9792835d4332ff6f14c27ff444b7635d57f4a88b63dca462f60c43ee"}, "downloads": -1, "filename": "grokcore.startup-1.2.1.tar.gz", "has_sig": false, "md5_digest": "e2a0d030c55c23c81b6fa74c58d33417", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19579, "upload_time": "2016-02-15T15:18:42", "upload_time_iso_8601": "2016-02-15T15:18:42.363702Z", "url": "https://files.pythonhosted.org/packages/10/7e/f252b812071deed22920844a8a942c9e1db96364fdc0ff74f57605c08de0/grokcore.startup-1.2.1.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "98209ca98a5bd32fc6b2455d1aabeed2", "sha256": "e3f96b6429baf18972e578b324e3e0e91b1ca87e050217d3cc2cba30606c8c3d"}, "downloads": -1, "filename": "grokcore.startup-3.0.0.tar.gz", "has_sig": false, "md5_digest": "98209ca98a5bd32fc6b2455d1aabeed2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20192, "upload_time": "2018-01-10T16:01:34", "upload_time_iso_8601": "2018-01-10T16:01:34.181962Z", "url": "https://files.pythonhosted.org/packages/be/da/46b6598d5383d399d904ea26499b69d4b6e68f0c8ee17f5eafbf79c9e257/grokcore.startup-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "6cffde35bb1920f08beb70ee86dff179", "sha256": "6d7a363e26b8fa701bc30539368d4a95330aa5164c19c4cb012a19e3119b33c3"}, "downloads": -1, "filename": "grokcore.startup-3.0.1.tar.gz", "has_sig": false, "md5_digest": "6cffde35bb1920f08beb70ee86dff179", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20420, "upload_time": "2018-01-12T13:28:28", "upload_time_iso_8601": "2018-01-12T13:28:28.669474Z", "url": "https://files.pythonhosted.org/packages/2b/df/8ae3268d323f4950f4cc956fb2ba71d2ef752ac5404fdf596653b181c272/grokcore.startup-3.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6cffde35bb1920f08beb70ee86dff179", "sha256": "6d7a363e26b8fa701bc30539368d4a95330aa5164c19c4cb012a19e3119b33c3"}, "downloads": -1, "filename": "grokcore.startup-3.0.1.tar.gz", "has_sig": false, "md5_digest": "6cffde35bb1920f08beb70ee86dff179", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20420, "upload_time": "2018-01-12T13:28:28", "upload_time_iso_8601": "2018-01-12T13:28:28.669474Z", "url": "https://files.pythonhosted.org/packages/2b/df/8ae3268d323f4950f4cc956fb2ba71d2ef752ac5404fdf596653b181c272/grokcore.startup-3.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:06 2020"}