{"info": {"author": "AlexJReid", "author_email": "alexjreid@me.com", "bugtrack_url": null, "classifiers": [], "description": "# dynamodb-dev-importer (ddbimp)\n\n_Easily load data from CSV to test out your DynamoDB table design._\n\nWhen working with DynamoDB, it is common practice to minimise the number of tables used, ideally down to just one.\n\nTechniques such as sparse indexes and GSI overloading allow a lot of flexibility and efficiency.\n\nDesigning a good schema that supports your query patterns can be challenging. Often it is nice to try things out with a small amount of data.\nI personally find it convenient to enter data into a spreadsheet and play around with it there.\n\nThis utility eases the process of populating a DynamoDB table from a CSV file, exported from a spreadsheet, that follows a specific format common to DynamoDB modelling patterns.\n\n## Install\nYou can install it with\n\n```\n$ pip3 install ddbimp\n```\n\n## Run\nAssuming table `people(pk:S, sk:S)` is provisioned in your default region.\n```\n$ ddbimp --table people --skip 1 example.csv\n```\n\n### Expected input format\n\n| pk       | sk            | data |            |           |\n| -------- | ------------- | ---- | ---------- | --------- | \n| PERSON-1 | sales-Q1-2019 | Alex | jan: 12012 | feb: 1927 |\n\nYour spreadsheet (and exported CSV) should contain columns for:\n- pk\n- sk\n- data (optional)\n- anything after those three can contain arbitrary attributes of form `attribute_name: value` i.e. `city: Edinburgh`\n\nExample row:\n```\nPERSON-1,sales-Q1-2019,Alex,jan: 12012,feb: 1927\n```\n\nWill yield an item like this:\n```\n{\n    pk: 'PERSON-1',\n    sk: 'sales-Q1-2019',\n    data: 'Alex',\n    jan: 12012,\n    feb 1927\n}\n```\n\nFor a full example CSV, take a look at [example.csv](https://github.com/AlexJReid/dynamodb-dev-importer/blob/master/example.csv).\n\n## Key ideas\n- Table consists of partition key `pk: S` and sort key `sk: S` - their meaning varies depending on the item\n- A secondary index swaps the sort and partition keys, so the partition key is `sk: S` and sort key `pk: S`\n- A final secondary index uses `sk: S` and `data: S` where data is an arbitrary value you might want to search for, the meaning of `data` depends on the item it is part of\n- Group items through a shared partition key, store _sub_ items with a sort key e.g. \n    - e.g. `pk:PERSON-1, sk:sales-Q1-2019, jan:12012, feb:1927`\n\nAWS recently [released a preview build of a tool called NoSQL Workbench](https://aws.amazon.com/blogs/aws/nosql-workbench-for-amazon-dynamodb-available-in-preview/). It builds on the above ideas. I've tried it out and it seems pretty good, but I am a luddite and am faster working in a spreadsheet right now. I'd certainly recommend giving it a try.\n\n## Useful resources\n- https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-indexes.html\n- https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/workbench.html\n- https://www.youtube.com/watch?v=6yqfmXiZTlM\n\n## Caveats, TODO\n- Uses your default AWS profile\n- Region needs to be set\n- Make work directly with a Google Sheets via sheets API\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AlexJReid/dynamodb-dev-importer", "keywords": "", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "ddbimp", "package_url": "https://pypi.org/project/ddbimp/", "platform": "", "project_url": "https://pypi.org/project/ddbimp/", "project_urls": {"Homepage": "https://github.com/AlexJReid/dynamodb-dev-importer"}, "release_url": "https://pypi.org/project/ddbimp/0.4/", "requires_dist": ["boto3"], "requires_python": "", "summary": "Easily load data from CSV to test out your DynamoDB table design", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>dynamodb-dev-importer (ddbimp)</h1>\n<p><em>Easily load data from CSV to test out your DynamoDB table design.</em></p>\n<p>When working with DynamoDB, it is common practice to minimise the number of tables used, ideally down to just one.</p>\n<p>Techniques such as sparse indexes and GSI overloading allow a lot of flexibility and efficiency.</p>\n<p>Designing a good schema that supports your query patterns can be challenging. Often it is nice to try things out with a small amount of data.\nI personally find it convenient to enter data into a spreadsheet and play around with it there.</p>\n<p>This utility eases the process of populating a DynamoDB table from a CSV file, exported from a spreadsheet, that follows a specific format common to DynamoDB modelling patterns.</p>\n<h2>Install</h2>\n<p>You can install it with</p>\n<pre><code>$ pip3 install ddbimp\n</code></pre>\n<h2>Run</h2>\n<p>Assuming table <code>people(pk:S, sk:S)</code> is provisioned in your default region.</p>\n<pre><code>$ ddbimp --table people --skip 1 example.csv\n</code></pre>\n<h3>Expected input format</h3>\n<table>\n<thead>\n<tr>\n<th>pk</th>\n<th>sk</th>\n<th>data</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PERSON-1</td>\n<td>sales-Q1-2019</td>\n<td>Alex</td>\n<td>jan: 12012</td>\n<td>feb: 1927</td>\n</tr></tbody></table>\n<p>Your spreadsheet (and exported CSV) should contain columns for:</p>\n<ul>\n<li>pk</li>\n<li>sk</li>\n<li>data (optional)</li>\n<li>anything after those three can contain arbitrary attributes of form <code>attribute_name: value</code> i.e. <code>city: Edinburgh</code></li>\n</ul>\n<p>Example row:</p>\n<pre><code>PERSON-1,sales-Q1-2019,Alex,jan: 12012,feb: 1927\n</code></pre>\n<p>Will yield an item like this:</p>\n<pre><code>{\n    pk: 'PERSON-1',\n    sk: 'sales-Q1-2019',\n    data: 'Alex',\n    jan: 12012,\n    feb 1927\n}\n</code></pre>\n<p>For a full example CSV, take a look at <a href=\"https://github.com/AlexJReid/dynamodb-dev-importer/blob/master/example.csv\" rel=\"nofollow\">example.csv</a>.</p>\n<h2>Key ideas</h2>\n<ul>\n<li>Table consists of partition key <code>pk: S</code> and sort key <code>sk: S</code> - their meaning varies depending on the item</li>\n<li>A secondary index swaps the sort and partition keys, so the partition key is <code>sk: S</code> and sort key <code>pk: S</code></li>\n<li>A final secondary index uses <code>sk: S</code> and <code>data: S</code> where data is an arbitrary value you might want to search for, the meaning of <code>data</code> depends on the item it is part of</li>\n<li>Group items through a shared partition key, store <em>sub</em> items with a sort key e.g.\n<ul>\n<li>e.g. <code>pk:PERSON-1, sk:sales-Q1-2019, jan:12012, feb:1927</code></li>\n</ul>\n</li>\n</ul>\n<p>AWS recently <a href=\"https://aws.amazon.com/blogs/aws/nosql-workbench-for-amazon-dynamodb-available-in-preview/\" rel=\"nofollow\">released a preview build of a tool called NoSQL Workbench</a>. It builds on the above ideas. I've tried it out and it seems pretty good, but I am a luddite and am faster working in a spreadsheet right now. I'd certainly recommend giving it a try.</p>\n<h2>Useful resources</h2>\n<ul>\n<li><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-indexes.html\" rel=\"nofollow\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-indexes.html</a></li>\n<li><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/workbench.html\" rel=\"nofollow\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/workbench.html</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=6yqfmXiZTlM\" rel=\"nofollow\">https://www.youtube.com/watch?v=6yqfmXiZTlM</a></li>\n</ul>\n<h2>Caveats, TODO</h2>\n<ul>\n<li>Uses your default AWS profile</li>\n<li>Region needs to be set</li>\n<li>Make work directly with a Google Sheets via sheets API</li>\n</ul>\n\n          </div>"}, "last_serial": 6506787, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "4e98122ffb4a4f0d9d1f9fe0f705d1ad", "sha256": "6cd5e9eefeb854d4ae2d2b99f4a9b02fc77438808aabfc3c811535ed1aa4b619"}, "downloads": -1, "filename": "ddbimp-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4e98122ffb4a4f0d9d1f9fe0f705d1ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10380, "upload_time": "2020-01-23T10:02:58", "upload_time_iso_8601": "2020-01-23T10:02:58.874711Z", "url": "https://files.pythonhosted.org/packages/46/ba/20b779cf55beddb320503d751549abdb65f22b43968a80de1a132814d6f1/ddbimp-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c420ba9c2e85a9926078e76448fb85e8", "sha256": "5a7df24b7a40d578bb06089a6be2eedd5b896fad7aef1804ad925296463e136b"}, "downloads": -1, "filename": "ddbimp-0.2.tar.gz", "has_sig": false, "md5_digest": "c420ba9c2e85a9926078e76448fb85e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4115, "upload_time": "2020-01-23T10:03:00", "upload_time_iso_8601": "2020-01-23T10:03:00.066950Z", "url": "https://files.pythonhosted.org/packages/10/0c/fcf836a2c48e29256440824e7a5d540beb3b04d4b9396fd83a218ab0a9d4/ddbimp-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "fc30dc8238c7684de7253e014492c562", "sha256": "be3e4994a9ca19b5145d269c697bb477f97f7f20c8a802ead716bd1a4d184f0c"}, "downloads": -1, "filename": "ddbimp-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "fc30dc8238c7684de7253e014492c562", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8678, "upload_time": "2020-01-23T12:11:34", "upload_time_iso_8601": "2020-01-23T12:11:34.077351Z", "url": "https://files.pythonhosted.org/packages/b5/43/8da0155bb71f6ecf2d24177e63df261e39d4d91c52c82f532399fcfaf75c/ddbimp-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "078822720f5d4ec1243de06d8d22abc0", "sha256": "7999d324cbb46891304f3c12de3754b14e80d1c575aa593d1245c495786631e9"}, "downloads": -1, "filename": "ddbimp-0.3.tar.gz", "has_sig": false, "md5_digest": "078822720f5d4ec1243de06d8d22abc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4244, "upload_time": "2020-01-23T12:11:35", "upload_time_iso_8601": "2020-01-23T12:11:35.761002Z", "url": "https://files.pythonhosted.org/packages/c9/e6/bf6750860185e1e4e8037e5f1b1a8aa0f63a24c058a21b2714270b3868ab/ddbimp-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "c3d4832082a2cde0b7057f78eee69058", "sha256": "85ae955d83c9172f14d3b2064785ba30d3cf14e17a044f70d5c4bccdebfa119e"}, "downloads": -1, "filename": "ddbimp-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c3d4832082a2cde0b7057f78eee69058", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8661, "upload_time": "2020-01-23T14:22:47", "upload_time_iso_8601": "2020-01-23T14:22:47.861666Z", "url": "https://files.pythonhosted.org/packages/ef/12/90ec1bbdd53e66a3e6b68a226e83f0d839f392e631d893899f74f194ba97/ddbimp-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff249871300d737d87f5f8ad02f5a4df", "sha256": "af97cc1d00550cb871c54adf7abe393a5362636aaa278df390bfc9930e9cc774"}, "downloads": -1, "filename": "ddbimp-0.4.tar.gz", "has_sig": false, "md5_digest": "ff249871300d737d87f5f8ad02f5a4df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4226, "upload_time": "2020-01-23T14:22:49", "upload_time_iso_8601": "2020-01-23T14:22:49.040250Z", "url": "https://files.pythonhosted.org/packages/1a/d8/5e7577ac5bb8e8d5a8c4fac894f68b25a3fedbdad49a46ee52f05b3f1ba6/ddbimp-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c3d4832082a2cde0b7057f78eee69058", "sha256": "85ae955d83c9172f14d3b2064785ba30d3cf14e17a044f70d5c4bccdebfa119e"}, "downloads": -1, "filename": "ddbimp-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c3d4832082a2cde0b7057f78eee69058", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8661, "upload_time": "2020-01-23T14:22:47", "upload_time_iso_8601": "2020-01-23T14:22:47.861666Z", "url": "https://files.pythonhosted.org/packages/ef/12/90ec1bbdd53e66a3e6b68a226e83f0d839f392e631d893899f74f194ba97/ddbimp-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff249871300d737d87f5f8ad02f5a4df", "sha256": "af97cc1d00550cb871c54adf7abe393a5362636aaa278df390bfc9930e9cc774"}, "downloads": -1, "filename": "ddbimp-0.4.tar.gz", "has_sig": false, "md5_digest": "ff249871300d737d87f5f8ad02f5a4df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4226, "upload_time": "2020-01-23T14:22:49", "upload_time_iso_8601": "2020-01-23T14:22:49.040250Z", "url": "https://files.pythonhosted.org/packages/1a/d8/5e7577ac5bb8e8d5a8c4fac894f68b25a3fedbdad49a46ee52f05b3f1ba6/ddbimp-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:45 2020"}