{"info": {"author": "Chase Sterling", "author_email": "chase.sterling@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "jsonref\n=======\n\n\n.. image:: https://readthedocs.org/projects/jsonref/badge/?version=latest\n    :target: https://jsonref.readthedocs.io/en/latest/\n\n.. image:: https://travis-ci.org/gazpachoking/jsonref.png?branch=master\n    :target: https://travis-ci.org/gazpachoking/jsonref\n\n.. image:: https://coveralls.io/repos/gazpachoking/jsonref/badge.png?branch=master\n    :target: https://coveralls.io/r/gazpachoking/jsonref\n\n\n``jsonref`` is a library for automatic dereferencing of\n`JSON Reference <https://tools.ietf.org/id/draft-pbryan-zyp-json-ref-03.html>`_\nobjects for Python (supporting Python 2.6+ and Python 3.3+).\n\nThis library lets you use a data structure with JSON reference objects, as if\nthe references had been replaced with the referent data.\n\n\n.. code-block:: python\n\n    >>> from pprint import pprint\n    >>> import jsonref\n\n    >>> # An example json document\n    >>> json_str = \"\"\"{\"real\": [1, 2, 3, 4], \"ref\": {\"$ref\": \"#/real\"}}\"\"\"\n    >>> data = jsonref.loads(json_str)\n    >>> pprint(data)  # Reference is not evaluated until here\n    {'real': [1, 2, 3, 4], 'ref': [1, 2, 3, 4]}\n\n\nFeatures\n--------\n\n* References are evaluated lazily. Nothing is dereferenced until it is used.\n\n* Recursive references are supported, and create recursive python data\n  structures.\n\n\nReferences objects are actually replaced by lazy lookup proxy objects which are\nalmost completely transparent.\n\n.. code-block:: python\n\n    >>> data = jsonref.loads('{\"real\": [1, 2, 3, 4], \"ref\": {\"$ref\": \"#/real\"}}')\n    >>> # You can tell it is a proxy by using the type function\n    >>> type(data[\"real\"]), type(data[\"ref\"])\n    (<class 'list'>, <class 'jsonref.JsonRef'>)\n    >>> # You have direct access to the referent data with the __subject__\n    >>> # attribute\n    >>> type(data[\"ref\"].__subject__)\n    <class 'list'>\n    >>> # If you need to get at the reference object\n    >>> data[\"ref\"].__reference__\n    {'$ref': '#/real'}\n    >>> # Other than that you can use the proxy just like the underlying object\n    >>> ref = data[\"ref\"]\n    >>> isinstance(ref, list)\n    True\n    >>> data[\"real\"] == ref\n    True\n    >>> ref.append(5)\n    >>> del ref[0]\n    >>> # Actions on the reference affect the real data (if it is mutable)\n    >>> pprint(data)\n    {'real': [2, 3, 4, 5], 'ref': [2, 3, 4, 5]}\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gazpachoking/jsonref", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "jsonref", "package_url": "https://pypi.org/project/jsonref/", "platform": "", "project_url": "https://pypi.org/project/jsonref/", "project_urls": {"Homepage": "https://github.com/gazpachoking/jsonref"}, "release_url": "https://pypi.org/project/jsonref/0.2/", "requires_dist": null, "requires_python": "", "summary": "An implementation of JSON Reference for Python", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://jsonref.readthedocs.io/en/latest/\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/jsonref/badge/?version=latest\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/edc4df3ab6a627801af803fed1b3130f983e52ac/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6a736f6e7265662f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.org/gazpachoking/jsonref\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/gazpachoking/jsonref.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6841aa9cca0e31f0fdb8659714d5247fac0df1fe/68747470733a2f2f7472617669732d63692e6f72672f67617a706163686f6b696e672f6a736f6e7265662e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/gazpachoking/jsonref\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/gazpachoking/jsonref/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f54c93e273a560d5da738a6355a7dc801728c31/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f67617a706163686f6b696e672f6a736f6e7265662f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<p><tt>jsonref</tt> is a library for automatic dereferencing of\n<a href=\"https://tools.ietf.org/id/draft-pbryan-zyp-json-ref-03.html\" rel=\"nofollow\">JSON Reference</a>\nobjects for Python (supporting Python 2.6+ and Python 3.3+).</p>\n<p>This library lets you use a data structure with JSON reference objects, as if\nthe references had been replaced with the referent data.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">jsonref</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># An example json document</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">json_str</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"{\"real\": [1, 2, 3, 4], \"ref\": {\"$ref\": \"#/real\"}}\"\"\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">jsonref</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">json_str</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>  <span class=\"c1\"># Reference is not evaluated until here</span>\n<span class=\"p\">{</span><span class=\"s1\">'real'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"s1\">'ref'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]}</span>\n</pre>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>References are evaluated lazily. Nothing is dereferenced until it is used.</li>\n<li>Recursive references are supported, and create recursive python data\nstructures.</li>\n</ul>\n<p>References objects are actually replaced by lazy lookup proxy objects which are\nalmost completely transparent.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">jsonref</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"s1\">'{\"real\": [1, 2, 3, 4], \"ref\": {\"$ref\": \"#/real\"}}'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># You can tell it is a proxy by using the type function</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">\"real\"</span><span class=\"p\">]),</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">\"ref\"</span><span class=\"p\">])</span>\n<span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">'</span><span class=\"nc\">list</span><span class=\"s1\">'&gt;, &lt;class '</span><span class=\"n\">jsonref</span><span class=\"o\">.</span><span class=\"n\">JsonRef</span><span class=\"s1\">'&gt;)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># You have direct access to the referent data with the __subject__</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># attribute</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">\"ref\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">__subject__</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">'</span><span class=\"nc\">list</span><span class=\"s1\">'&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># If you need to get at the reference object</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">\"ref\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">__reference__</span>\n<span class=\"p\">{</span><span class=\"s1\">'$ref'</span><span class=\"p\">:</span> <span class=\"s1\">'#/real'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Other than that you can use the proxy just like the underlying object</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ref</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">\"ref\"</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">ref</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">\"real\"</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">ref</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ref</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">del</span> <span class=\"n\">ref</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Actions on the reference affect the real data (if it is mutable)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'real'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"s1\">'ref'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]}</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4349904, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a7f511bd8d4b7b696b230aee7fa3c62b", "sha256": "56e0ce228798bdecadff865c142741b1ffdd57a5e9c40c40ec2b641d7c430ad3"}, "downloads": -1, "filename": "jsonref-0.1.tar.gz", "has_sig": false, "md5_digest": "a7f511bd8d4b7b696b230aee7fa3c62b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12296, "upload_time": "2013-05-17T21:25:08", "upload_time_iso_8601": "2013-05-17T21:25:08.295579Z", "url": "https://files.pythonhosted.org/packages/3a/fe/42aca2f2a2e668375a92fcf74e0977a4943ca508e171c9a311b7d5fb9b07/jsonref-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "a422046ec61ba88d2ffb281f0d730536", "sha256": "b1e82fa0b62e2c2796a13e5401fe51790b248f6d9bf9d7212a3e31a3501b291f"}, "downloads": -1, "filename": "jsonref-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a422046ec61ba88d2ffb281f0d730536", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9346, "upload_time": "2018-10-07T19:24:08", "upload_time_iso_8601": "2018-10-07T19:24:08.803313Z", "url": "https://files.pythonhosted.org/packages/07/92/f8e4ac824b14af77e613984e480fa818397c72d4141fc466decb26752749/jsonref-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42b518b9ccd6852d1d709749bc96cb70", "sha256": "f3c45b121cf6257eafabdc3a8008763aed1cd7da06dbabc59a9e4d2a5e4e6697"}, "downloads": -1, "filename": "jsonref-0.2.tar.gz", "has_sig": false, "md5_digest": "42b518b9ccd6852d1d709749bc96cb70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13032, "upload_time": "2018-10-07T19:24:09", "upload_time_iso_8601": "2018-10-07T19:24:09.853881Z", "url": "https://files.pythonhosted.org/packages/b3/cf/93d4f34d76863d4fb995cb8e3e4f29908304065ce6381e0349700c44ad0c/jsonref-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a422046ec61ba88d2ffb281f0d730536", "sha256": "b1e82fa0b62e2c2796a13e5401fe51790b248f6d9bf9d7212a3e31a3501b291f"}, "downloads": -1, "filename": "jsonref-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a422046ec61ba88d2ffb281f0d730536", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9346, "upload_time": "2018-10-07T19:24:08", "upload_time_iso_8601": "2018-10-07T19:24:08.803313Z", "url": "https://files.pythonhosted.org/packages/07/92/f8e4ac824b14af77e613984e480fa818397c72d4141fc466decb26752749/jsonref-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42b518b9ccd6852d1d709749bc96cb70", "sha256": "f3c45b121cf6257eafabdc3a8008763aed1cd7da06dbabc59a9e4d2a5e4e6697"}, "downloads": -1, "filename": "jsonref-0.2.tar.gz", "has_sig": false, "md5_digest": "42b518b9ccd6852d1d709749bc96cb70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13032, "upload_time": "2018-10-07T19:24:09", "upload_time_iso_8601": "2018-10-07T19:24:09.853881Z", "url": "https://files.pythonhosted.org/packages/b3/cf/93d4f34d76863d4fb995cb8e3e4f29908304065ce6381e0349700c44ad0c/jsonref-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:42 2020"}