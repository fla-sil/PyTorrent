{"info": {"author": "Maria Antoniak", "author_email": "maa343@cornell.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# little-mallet-wrapper\n\nThis is a little Python wrapper around the topic modeling functions of [MALLET](http://mallet.cs.umass.edu/topics.php).\n\nCurrently under construction; please send feedback/requests to Maria Antoniak.\n\nSee demo.ipynb for a demonstration of how to use the functions in little-mallet-wrapper.\n\n\n## Documentation\n\n### `print_dataset_stats(training_data)`\n\nDisplays basic statistics about the training dataset.\n\n| Name               | Type              | Description                      |\n| ------------------ | ----------------- | -------------------------------- |\n| `training_data`      | list of strings   | Documents that will be used to train the topic model. |\n\n<br>\n\n### `process_string(text, lowercase=True, remove_short_words=True, remove_stop_words=True, remove_punctuation=True, numbers='replace', stop_words=STOPS)`\n\nA simple string processor that prepares raw text for topic modeling.\n\n| Name               | Type              | Description                      |\n| ------------------ | ----------------- | -------------------------------- |\n| `text`      | string   | Individual document to process. |\n| `lowercase` | boolean  | Whether or not to lowercase the text. |\n| `remove_short_words` | boolean | Whether or not to remove words with fewer than 2 characters. |\n| `remove_stop_words` | boolean | Whether or not to remove stopwords. |\n| `remove_punctuation` | boolean | Whether or not to remove punctuation (not A-Za-z0-9) |\n| `remove_numbers` | string | 'replace' replaces all numbers with the normalized token NUM; 'remove' removes all numbers. |\n| `stop_words` | list of strings | Custom list of words to remove. |\n| RETURNS | string | Processed version of the input text. |\n\n<br>\n\n### `import_data(path_to_mallet, path_to_training_data, path_to_formatted_training_data, training_data, use_pipe_from=None)`\n\nImports the training data into MALLET formatted data that can be used for training.\n\n| Name               | Type              | Description                      |\n| ------------------ | ----------------- | -------------------------------- |\n| `path_to_mallet` | string | Path to your local MALLET installation: .../mallet-2.0.8/bin/mallet |\n| `path_to_training_data` | string | Path to where the training data should be stored. |\n| `path_to_formatted_training_data` | string | Path to where the MALLET formatted training data should be stored. |\n| `training_data` | list of strings | Processed documents for training the topic model. |\n| `use_pipe_from` | string | If you want to import the documents using the same model as a previous set of documents, include the path to the previous MALLET formatted training data. |\n\n<br>\n\n### `train_topic_model(path_to_mallet, path_to_formatted_training_data, path_to_model, path_to_topic_key, path_to_topic_distributions, num_topics)`\n\nTrains an LDA topic model using MALLET.\n\n| Name               | Type              | Description                      |\n| ------------------ | ----------------- | -------------------------------- |\n| `path_to_mallet` | string | Path to your local MALLET installation: .../mallet-2.0.8/bin/mallet |\n| `path_to_formatted_training_data` | string | Path to where the MALLET formatted training data is stored. |\n| `path_to_model` | string | Path to where the model should be stored. |\n| `path_to_topic_key` | string | Path to where the topic keys should be stored. |\n| `path_to_topic_distributions` | string | Path to where the topic distributions should be stored. |\n| `num_topics` | integer | The number of topics to use for training. |\n\n<br> \n\n### `load_topic_keys(topic_keys_path)`\n\nLoads the most sets of most probable words for each topic after training a topic model.\n\n| Name               | Type              | Description                      |\n| ------------------ | ----------------- | -------------------------------- |\n| `topic_keys_path` | string | Path to where the topic keys are stored. |\n| RETURNS | list of lists of strings | The 20 most probable words for each topic. |\n\n<br>\n\n### `load_topic_distributions(topic_distributions_path)`\n\nLoads the topic distribution for each document after training a topic model.\n\n| Name               | Type              | Description                      |\n| ------------------ | ----------------- | -------------------------------- |\n| `topic_distributions_path` | string | Path to where the topic distributions are stored. |\n| RETURNS | list of lists of integers | Topic distribution (list of probabilities) for each document. |\n\n<br>\n\n### `get_top_docs(training_data, topic_distributions, topic_index, n=5)`\n\nGets the documents with the highest probability for the target topic.\n\n| Name               | Type              | Description                      |\n| ------------------ | ----------------- | -------------------------------- |\n| `training_data` | list of strings | Processed documents that was used to train the topic model. |\n| `topic_distributions` | list of lists of integers | Topic distribution (list of probabilities) for each document. |\n| `topic_index` | integer | The index of the target topic. |\n| `n` | integer | The number of documents to return. |\n| RETURNS | list of tuples (float, string) | The topic probability and document text for the n documents with the highest probability for the target topic. |\n\n<br>\n\n### `plot_categories_by_topics_heatmap(labels, topic_distributions, topic_keys, output_path=None, target_labels=None, dim=None)`\n\nIf the dataset includes some time of categorical labels, creates a heatmap of the labels x topics.\n\n| Name               | Type              | Description                      |\n| ------------------ | ----------------- | -------------------------------- |\n| `labels` | list of strings | Document labels (e.g., authors of the documents, genres of the documents). |\n| `topic_distributions` | list of lists of integers | Topic distribution (list of probabilities) for each document. |\n| `topic_keys` | list of lists of strings | The 20 most probable words for each topic. |\n| `output_path` | string | Path to where the resulting figure should be saved. |\n| `target_labels` | list of strings | A subset of `labels` to use for plotting. |\n| `dim` | tuple of integers | (x, y) dimensions for the resulting figure. |\n\n<br>\n\n### `plot_categories_by_topic_boxplots(labels, topic_distributions, topic_keys, output_path=None, target_labels=None, dim=None)`\n\nIf the dataset includes some time of categorical labels, creates a set of boxplots, one plot for each topic.\n\n| Name               | Type              | Description                      |\n| ------------------ | ----------------- | -------------------------------- |\n| `labels` | list of strings | Document labels (e.g., authors of the documents, genres of the documents). |\n| `topic_distributions` | list of lists of integers | Topic distribution (list of probabilities) for each document. |\n| `topic_keys` | list of lists of strings | The 20 most probable words for each topic. |\n| `output_path` | string | Path to where the resulting figure should be saved. |\n| `target_labels` | list of strings | A subset of `labels` to use for plotting. |\n| `dim` | tuple of integers | (x, y) dimensions for the resulting figure. |\n\n<br>\n\n### `divide_training_data(documents, num_chunks=10)`\n\nGiven a dataset, divides each document into a set of equally sized chunks.\n\n| Name               | Type              | Description                      |\n| ------------------ | ----------------- | -------------------------------- |\n| `documents` | list of strings | Documents to split. |\n| `num_chunks` | integer | How many times to split each document. |\n| RETURNS | tuple (list of strings, list of integers, list of floats) | The divided documents, the indices of the input documents, and the positions within the documents (0-1.0). |\n\n<br>\n\n### `infer_topics(path_to_mallet, path_to_original_model, path_to_new_formatted_training_data, path_to_new_topic_distributions)`\n\nGet topic distributions for a set of new documents using a model that has been trained on another set of documents.\n\n| Name               | Type              | Description                      |\n| ------------------ | ----------------- | -------------------------------- |\n| `path_to_mallet` | string | Path to your local MALLET installation: .../mallet-2.0.8/bin/mallet |\n| `path_to_original_model` | string | Path to where the topic model was stored. |\n| `path_to_new_formatted_training_data` | string | Path to where the MALLET formatted training data is stored. |\n| `path_to_new_topic_distributions` | string | Path to where the topic distributions should be stored. |\n\n<br>\n\n### `plot_topics_over_time(topic_distributions, topic_keys, times, topic_index, output_path=None)`\n\nCreates lineplots, one for each topic, showing the mean topic probability over document segments.\n\n| Name               | Type              | Description                      |\n| ------------------ | ----------------- | -------------------------------- |\n| `topic_distributions` | list of lists of integers | Topic distribution (list of probabilities) for each document. |\n| `topic_keys` | list of lists of strings | The 20 most probable words for each topic. |\n| `times` | list of floats | The division indices within the document. |\n| `topic_index` | integer | The index of the target topic. |\n| `output_path` | string | Path to where the resulting figure should be saved. |\n\n<br>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/maria-antoniak/little-mallet-wrapper", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "little-mallet-wrapper", "package_url": "https://pypi.org/project/little-mallet-wrapper/", "platform": "", "project_url": "https://pypi.org/project/little-mallet-wrapper/", "project_urls": {"Homepage": "https://github.com/maria-antoniak/little-mallet-wrapper"}, "release_url": "https://pypi.org/project/little-mallet-wrapper/0.0.11/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A little wrapper for the topic modeling functions of MALLET", "version": "0.0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>little-mallet-wrapper</h1>\n<p>This is a little Python wrapper around the topic modeling functions of <a href=\"http://mallet.cs.umass.edu/topics.php\" rel=\"nofollow\">MALLET</a>.</p>\n<p>Currently under construction; please send feedback/requests to Maria Antoniak.</p>\n<p>See demo.ipynb for a demonstration of how to use the functions in little-mallet-wrapper.</p>\n<h2>Documentation</h2>\n<h3><code>print_dataset_stats(training_data)</code></h3>\n<p>Displays basic statistics about the training dataset.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>training_data</code></td>\n<td>list of strings</td>\n<td>Documents that will be used to train the topic model.</td>\n</tr></tbody></table>\n<br>\n<h3><code>process_string(text, lowercase=True, remove_short_words=True, remove_stop_words=True, remove_punctuation=True, numbers='replace', stop_words=STOPS)</code></h3>\n<p>A simple string processor that prepares raw text for topic modeling.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>text</code></td>\n<td>string</td>\n<td>Individual document to process.</td>\n</tr>\n<tr>\n<td><code>lowercase</code></td>\n<td>boolean</td>\n<td>Whether or not to lowercase the text.</td>\n</tr>\n<tr>\n<td><code>remove_short_words</code></td>\n<td>boolean</td>\n<td>Whether or not to remove words with fewer than 2 characters.</td>\n</tr>\n<tr>\n<td><code>remove_stop_words</code></td>\n<td>boolean</td>\n<td>Whether or not to remove stopwords.</td>\n</tr>\n<tr>\n<td><code>remove_punctuation</code></td>\n<td>boolean</td>\n<td>Whether or not to remove punctuation (not A-Za-z0-9)</td>\n</tr>\n<tr>\n<td><code>remove_numbers</code></td>\n<td>string</td>\n<td>'replace' replaces all numbers with the normalized token NUM; 'remove' removes all numbers.</td>\n</tr>\n<tr>\n<td><code>stop_words</code></td>\n<td>list of strings</td>\n<td>Custom list of words to remove.</td>\n</tr>\n<tr>\n<td>RETURNS</td>\n<td>string</td>\n<td>Processed version of the input text.</td>\n</tr></tbody></table>\n<br>\n<h3><code>import_data(path_to_mallet, path_to_training_data, path_to_formatted_training_data, training_data, use_pipe_from=None)</code></h3>\n<p>Imports the training data into MALLET formatted data that can be used for training.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>path_to_mallet</code></td>\n<td>string</td>\n<td>Path to your local MALLET installation: .../mallet-2.0.8/bin/mallet</td>\n</tr>\n<tr>\n<td><code>path_to_training_data</code></td>\n<td>string</td>\n<td>Path to where the training data should be stored.</td>\n</tr>\n<tr>\n<td><code>path_to_formatted_training_data</code></td>\n<td>string</td>\n<td>Path to where the MALLET formatted training data should be stored.</td>\n</tr>\n<tr>\n<td><code>training_data</code></td>\n<td>list of strings</td>\n<td>Processed documents for training the topic model.</td>\n</tr>\n<tr>\n<td><code>use_pipe_from</code></td>\n<td>string</td>\n<td>If you want to import the documents using the same model as a previous set of documents, include the path to the previous MALLET formatted training data.</td>\n</tr></tbody></table>\n<br>\n<h3><code>train_topic_model(path_to_mallet, path_to_formatted_training_data, path_to_model, path_to_topic_key, path_to_topic_distributions, num_topics)</code></h3>\n<p>Trains an LDA topic model using MALLET.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>path_to_mallet</code></td>\n<td>string</td>\n<td>Path to your local MALLET installation: .../mallet-2.0.8/bin/mallet</td>\n</tr>\n<tr>\n<td><code>path_to_formatted_training_data</code></td>\n<td>string</td>\n<td>Path to where the MALLET formatted training data is stored.</td>\n</tr>\n<tr>\n<td><code>path_to_model</code></td>\n<td>string</td>\n<td>Path to where the model should be stored.</td>\n</tr>\n<tr>\n<td><code>path_to_topic_key</code></td>\n<td>string</td>\n<td>Path to where the topic keys should be stored.</td>\n</tr>\n<tr>\n<td><code>path_to_topic_distributions</code></td>\n<td>string</td>\n<td>Path to where the topic distributions should be stored.</td>\n</tr>\n<tr>\n<td><code>num_topics</code></td>\n<td>integer</td>\n<td>The number of topics to use for training.</td>\n</tr></tbody></table>\n<br> \n<h3><code>load_topic_keys(topic_keys_path)</code></h3>\n<p>Loads the most sets of most probable words for each topic after training a topic model.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>topic_keys_path</code></td>\n<td>string</td>\n<td>Path to where the topic keys are stored.</td>\n</tr>\n<tr>\n<td>RETURNS</td>\n<td>list of lists of strings</td>\n<td>The 20 most probable words for each topic.</td>\n</tr></tbody></table>\n<br>\n<h3><code>load_topic_distributions(topic_distributions_path)</code></h3>\n<p>Loads the topic distribution for each document after training a topic model.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>topic_distributions_path</code></td>\n<td>string</td>\n<td>Path to where the topic distributions are stored.</td>\n</tr>\n<tr>\n<td>RETURNS</td>\n<td>list of lists of integers</td>\n<td>Topic distribution (list of probabilities) for each document.</td>\n</tr></tbody></table>\n<br>\n<h3><code>get_top_docs(training_data, topic_distributions, topic_index, n=5)</code></h3>\n<p>Gets the documents with the highest probability for the target topic.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>training_data</code></td>\n<td>list of strings</td>\n<td>Processed documents that was used to train the topic model.</td>\n</tr>\n<tr>\n<td><code>topic_distributions</code></td>\n<td>list of lists of integers</td>\n<td>Topic distribution (list of probabilities) for each document.</td>\n</tr>\n<tr>\n<td><code>topic_index</code></td>\n<td>integer</td>\n<td>The index of the target topic.</td>\n</tr>\n<tr>\n<td><code>n</code></td>\n<td>integer</td>\n<td>The number of documents to return.</td>\n</tr>\n<tr>\n<td>RETURNS</td>\n<td>list of tuples (float, string)</td>\n<td>The topic probability and document text for the n documents with the highest probability for the target topic.</td>\n</tr></tbody></table>\n<br>\n<h3><code>plot_categories_by_topics_heatmap(labels, topic_distributions, topic_keys, output_path=None, target_labels=None, dim=None)</code></h3>\n<p>If the dataset includes some time of categorical labels, creates a heatmap of the labels x topics.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>labels</code></td>\n<td>list of strings</td>\n<td>Document labels (e.g., authors of the documents, genres of the documents).</td>\n</tr>\n<tr>\n<td><code>topic_distributions</code></td>\n<td>list of lists of integers</td>\n<td>Topic distribution (list of probabilities) for each document.</td>\n</tr>\n<tr>\n<td><code>topic_keys</code></td>\n<td>list of lists of strings</td>\n<td>The 20 most probable words for each topic.</td>\n</tr>\n<tr>\n<td><code>output_path</code></td>\n<td>string</td>\n<td>Path to where the resulting figure should be saved.</td>\n</tr>\n<tr>\n<td><code>target_labels</code></td>\n<td>list of strings</td>\n<td>A subset of <code>labels</code> to use for plotting.</td>\n</tr>\n<tr>\n<td><code>dim</code></td>\n<td>tuple of integers</td>\n<td>(x, y) dimensions for the resulting figure.</td>\n</tr></tbody></table>\n<br>\n<h3><code>plot_categories_by_topic_boxplots(labels, topic_distributions, topic_keys, output_path=None, target_labels=None, dim=None)</code></h3>\n<p>If the dataset includes some time of categorical labels, creates a set of boxplots, one plot for each topic.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>labels</code></td>\n<td>list of strings</td>\n<td>Document labels (e.g., authors of the documents, genres of the documents).</td>\n</tr>\n<tr>\n<td><code>topic_distributions</code></td>\n<td>list of lists of integers</td>\n<td>Topic distribution (list of probabilities) for each document.</td>\n</tr>\n<tr>\n<td><code>topic_keys</code></td>\n<td>list of lists of strings</td>\n<td>The 20 most probable words for each topic.</td>\n</tr>\n<tr>\n<td><code>output_path</code></td>\n<td>string</td>\n<td>Path to where the resulting figure should be saved.</td>\n</tr>\n<tr>\n<td><code>target_labels</code></td>\n<td>list of strings</td>\n<td>A subset of <code>labels</code> to use for plotting.</td>\n</tr>\n<tr>\n<td><code>dim</code></td>\n<td>tuple of integers</td>\n<td>(x, y) dimensions for the resulting figure.</td>\n</tr></tbody></table>\n<br>\n<h3><code>divide_training_data(documents, num_chunks=10)</code></h3>\n<p>Given a dataset, divides each document into a set of equally sized chunks.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>documents</code></td>\n<td>list of strings</td>\n<td>Documents to split.</td>\n</tr>\n<tr>\n<td><code>num_chunks</code></td>\n<td>integer</td>\n<td>How many times to split each document.</td>\n</tr>\n<tr>\n<td>RETURNS</td>\n<td>tuple (list of strings, list of integers, list of floats)</td>\n<td>The divided documents, the indices of the input documents, and the positions within the documents (0-1.0).</td>\n</tr></tbody></table>\n<br>\n<h3><code>infer_topics(path_to_mallet, path_to_original_model, path_to_new_formatted_training_data, path_to_new_topic_distributions)</code></h3>\n<p>Get topic distributions for a set of new documents using a model that has been trained on another set of documents.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>path_to_mallet</code></td>\n<td>string</td>\n<td>Path to your local MALLET installation: .../mallet-2.0.8/bin/mallet</td>\n</tr>\n<tr>\n<td><code>path_to_original_model</code></td>\n<td>string</td>\n<td>Path to where the topic model was stored.</td>\n</tr>\n<tr>\n<td><code>path_to_new_formatted_training_data</code></td>\n<td>string</td>\n<td>Path to where the MALLET formatted training data is stored.</td>\n</tr>\n<tr>\n<td><code>path_to_new_topic_distributions</code></td>\n<td>string</td>\n<td>Path to where the topic distributions should be stored.</td>\n</tr></tbody></table>\n<br>\n<h3><code>plot_topics_over_time(topic_distributions, topic_keys, times, topic_index, output_path=None)</code></h3>\n<p>Creates lineplots, one for each topic, showing the mean topic probability over document segments.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>topic_distributions</code></td>\n<td>list of lists of integers</td>\n<td>Topic distribution (list of probabilities) for each document.</td>\n</tr>\n<tr>\n<td><code>topic_keys</code></td>\n<td>list of lists of strings</td>\n<td>The 20 most probable words for each topic.</td>\n</tr>\n<tr>\n<td><code>times</code></td>\n<td>list of floats</td>\n<td>The division indices within the document.</td>\n</tr>\n<tr>\n<td><code>topic_index</code></td>\n<td>integer</td>\n<td>The index of the target topic.</td>\n</tr>\n<tr>\n<td><code>output_path</code></td>\n<td>string</td>\n<td>Path to where the resulting figure should be saved.</td>\n</tr></tbody></table>\n<br>\n\n          </div>"}, "last_serial": 7100687, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6c381a9c588cbbe7e69ab7a552478796", "sha256": "b5b032cef8348b2ee0f151f64bd1c19c6020b01ce26fee8113b9d7a8fa2b0210"}, "downloads": -1, "filename": "little_mallet_wrapper-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6c381a9c588cbbe7e69ab7a552478796", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13265, "upload_time": "2020-03-02T20:47:32", "upload_time_iso_8601": "2020-03-02T20:47:32.958788Z", "url": "https://files.pythonhosted.org/packages/13/0d/a0520f14c6fe5ee73150fa426b6725a3d832ac72c3a0100c42eecb32b954/little_mallet_wrapper-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a035a7762fb59159c6fc7d01cff39b70", "sha256": "5e3d87c41ada19376b162de3b0e1ef46fb256ccc76b04ff799455605850d5e42"}, "downloads": -1, "filename": "little-mallet-wrapper-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a035a7762fb59159c6fc7d01cff39b70", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1158, "upload_time": "2020-03-02T20:47:35", "upload_time_iso_8601": "2020-03-02T20:47:35.452160Z", "url": "https://files.pythonhosted.org/packages/b6/7e/6b94d1f50d5b658ec5ff4f81cdf61fb734be2669b46492beb2a5967bb310/little-mallet-wrapper-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "ae55f2c1f745cd6604cf817f9ae1b411", "sha256": "07f57fabb5f9de022e5c8d78838e96715ba60d3a004dd9837ad5d3431170c773"}, "downloads": -1, "filename": "little_mallet_wrapper-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "ae55f2c1f745cd6604cf817f9ae1b411", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18162, "upload_time": "2020-04-02T22:01:19", "upload_time_iso_8601": "2020-04-02T22:01:19.642684Z", "url": "https://files.pythonhosted.org/packages/04/bd/ed02020226752454f0b8581b41774762224a28ab7d2d93855ed5f57c7215/little_mallet_wrapper-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ce7874201fe356219fff6e287311542", "sha256": "dc81f8c5981c91d94678881d72624b75d84c384e69b4f9ffce6ce41fcfdad929"}, "downloads": -1, "filename": "little-mallet-wrapper-0.0.10.tar.gz", "has_sig": false, "md5_digest": "4ce7874201fe356219fff6e287311542", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5887, "upload_time": "2020-04-02T22:01:24", "upload_time_iso_8601": "2020-04-02T22:01:24.715574Z", "url": "https://files.pythonhosted.org/packages/1c/5d/7ad612e47bf4321955fa0e9ed51768d4a55be179bcd0f08eb92e1cbbd6b4/little-mallet-wrapper-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "9d8515ce3b5c3e3def12061d962bab36", "sha256": "71d0da37b39c79f163625cb66ec5172e47cd05dc56427e424d08d0978cd324c5"}, "downloads": -1, "filename": "little_mallet_wrapper-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "9d8515ce3b5c3e3def12061d962bab36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18318, "upload_time": "2020-04-25T18:14:40", "upload_time_iso_8601": "2020-04-25T18:14:40.254533Z", "url": "https://files.pythonhosted.org/packages/c6/bd/90ca1f1d359516bedd764f6759495034cd2e1611abc4b5adcea40dee9dc1/little_mallet_wrapper-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83c36377da70bd8ee15975ced8f82d30", "sha256": "d0ba02b2e0ae1a03cc790bb3bd67dd49ee6b971c4910fde07c8549481bfd9e77"}, "downloads": -1, "filename": "little-mallet-wrapper-0.0.11.tar.gz", "has_sig": false, "md5_digest": "83c36377da70bd8ee15975ced8f82d30", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6631, "upload_time": "2020-04-25T18:14:44", "upload_time_iso_8601": "2020-04-25T18:14:44.912824Z", "url": "https://files.pythonhosted.org/packages/ea/e1/e9bcd4b13e58d41c5754dca93c2a61bcffab36d651689663c6ee930a43e8/little-mallet-wrapper-0.0.11.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8234423380f4d1445ebeafba278524be", "sha256": "7123d5446eaca36f89560e564e59b6e6cbf1f1f8ead2efb1e61f49739b5006dd"}, "downloads": -1, "filename": "little_mallet_wrapper-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8234423380f4d1445ebeafba278524be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13265, "upload_time": "2020-03-20T02:00:08", "upload_time_iso_8601": "2020-03-20T02:00:08.033369Z", "url": "https://files.pythonhosted.org/packages/61/69/14d5cc8ad216d1d0e0585264b84aba0f65ad3add63a7f27722df207ef5ff/little_mallet_wrapper-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a3f69deb957e8dfe0a015f94e0b23db", "sha256": "bba2e76a5db9280cd5522abe9df05f6eb7f2cbb3956cdc7b68a87dc6325096a7"}, "downloads": -1, "filename": "little-mallet-wrapper-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4a3f69deb957e8dfe0a015f94e0b23db", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1172, "upload_time": "2020-03-20T02:00:09", "upload_time_iso_8601": "2020-03-20T02:00:09.428749Z", "url": "https://files.pythonhosted.org/packages/32/ea/384cd3e3c11997a69b20ededf524ccc0ac3d00704ee90f2552bb76c3c4eb/little-mallet-wrapper-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "c5b793545f342fc7bd685db907ce3c6a", "sha256": "09d620c0b89235771f06d75bc7bfdbc0f15d83166c15a23f4b0da382db5cc2f2"}, "downloads": -1, "filename": "little_mallet_wrapper-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c5b793545f342fc7bd685db907ce3c6a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16078, "upload_time": "2020-03-20T02:48:16", "upload_time_iso_8601": "2020-03-20T02:48:16.454546Z", "url": "https://files.pythonhosted.org/packages/39/14/c087a64ceab59237eb52f32e950273a408f0290130704e8bc41c961d0b2b/little_mallet_wrapper-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12642b625d0fc6c08c117563456af647", "sha256": "7405c5a24e34e53b488fe0deefcf116090084379a521e2e63cc08efb1f41d3b1"}, "downloads": -1, "filename": "little-mallet-wrapper-0.0.3.tar.gz", "has_sig": false, "md5_digest": "12642b625d0fc6c08c117563456af647", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3556, "upload_time": "2020-03-20T02:48:17", "upload_time_iso_8601": "2020-03-20T02:48:17.729332Z", "url": "https://files.pythonhosted.org/packages/78/1e/e2620423e3a4d2a6721a8e30badfd769e8dbd3d16c1e292e46ce46c89764/little-mallet-wrapper-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "bd43d7add8cfd6ff13a1a940c767914b", "sha256": "c44ee9aae3194795c8a1b812c2ea028eb197c1a3db6b7ed3c479c3c469e63a59"}, "downloads": -1, "filename": "little_mallet_wrapper-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "bd43d7add8cfd6ff13a1a940c767914b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16085, "upload_time": "2020-03-20T02:50:14", "upload_time_iso_8601": "2020-03-20T02:50:14.986938Z", "url": "https://files.pythonhosted.org/packages/fe/25/6098f1ea86fadb0d4315452377848084dc3790f2f994094a92fb26ebbc38/little_mallet_wrapper-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a4d8c4d4a20550d46f91a77a405305a", "sha256": "322e60b80ea2e7722db557f2202ab7719d106aecc31d6407b1151bfaa0c14789"}, "downloads": -1, "filename": "little-mallet-wrapper-0.0.4.tar.gz", "has_sig": false, "md5_digest": "6a4d8c4d4a20550d46f91a77a405305a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3551, "upload_time": "2020-03-20T02:50:15", "upload_time_iso_8601": "2020-03-20T02:50:15.998925Z", "url": "https://files.pythonhosted.org/packages/25/82/13cdd333ee1aeaab78999d5796526542cdf5fc1b567e94389fc01c3a6582/little-mallet-wrapper-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "4b4d6795d96d18752aae32a28b509046", "sha256": "0ecec1107a3ae2b07501c1cdd706d4b9e8438f0876af19381be727c1c9fda97a"}, "downloads": -1, "filename": "little_mallet_wrapper-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "4b4d6795d96d18752aae32a28b509046", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16337, "upload_time": "2020-03-25T23:55:46", "upload_time_iso_8601": "2020-03-25T23:55:46.459543Z", "url": "https://files.pythonhosted.org/packages/08/9e/528f88091c5c216339c17418b6400bb7e008e53ef7bffde58df1b79e3645/little_mallet_wrapper-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f4ddbb7ffbcb74faa82910c4aca0fe1", "sha256": "705860fd04586b8b1aef45041ba2a53bb7d8552e3b630402c8fa1bbe2ce90878"}, "downloads": -1, "filename": "little-mallet-wrapper-0.0.5.tar.gz", "has_sig": false, "md5_digest": "5f4ddbb7ffbcb74faa82910c4aca0fe1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3800, "upload_time": "2020-03-25T23:55:47", "upload_time_iso_8601": "2020-03-25T23:55:47.557152Z", "url": "https://files.pythonhosted.org/packages/94/00/e5a89436ba4ab10a7b03764e03cce996d62ff35fa6263882ac50fecbf94e/little-mallet-wrapper-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "2d1d3440717534efce9a10bddebc0342", "sha256": "60126775eb2776a32a3996ceaa787886feb4954fb1a83ceb7cbf41aeaa25155c"}, "downloads": -1, "filename": "little_mallet_wrapper-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "2d1d3440717534efce9a10bddebc0342", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16352, "upload_time": "2020-03-26T00:14:47", "upload_time_iso_8601": "2020-03-26T00:14:47.682763Z", "url": "https://files.pythonhosted.org/packages/65/79/e36067bf425e9f037db74ae06a7e4b10c16613ef0046b0e00ec3a9b7428b/little_mallet_wrapper-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4f67069ee6ef76a4198021e0b6c86f2", "sha256": "bdee96b6aae3af6cb16b6fc6267cd93de54fb6b8d73b9d55e0b3f37fb21f1e58"}, "downloads": -1, "filename": "little-mallet-wrapper-0.0.6.tar.gz", "has_sig": false, "md5_digest": "d4f67069ee6ef76a4198021e0b6c86f2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3814, "upload_time": "2020-03-26T00:14:48", "upload_time_iso_8601": "2020-03-26T00:14:48.711618Z", "url": "https://files.pythonhosted.org/packages/1c/fd/7f2a5d47fdb31fdbfffb226c9cd5923c7213ab65f03d7a1bc44fde776352/little-mallet-wrapper-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "b75cfa0682c9bc64d273659c72bdfaf3", "sha256": "19b42e90031e8a594610b5dc431c999b03d0283c5129865e44fd84e43289967c"}, "downloads": -1, "filename": "little_mallet_wrapper-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "b75cfa0682c9bc64d273659c72bdfaf3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18070, "upload_time": "2020-03-30T18:02:54", "upload_time_iso_8601": "2020-03-30T18:02:54.662881Z", "url": "https://files.pythonhosted.org/packages/77/4e/545a22485d3e5b1ba96479907b35997f44816a9070d7d87fdffb99963020/little_mallet_wrapper-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d66dc01a1aa9e84f1b4ebb910e5faae5", "sha256": "dd02fda0b26fe6aedaa137095337e40429b6c4d1291139ff9e6c1e4569c0840c"}, "downloads": -1, "filename": "little-mallet-wrapper-0.0.7.tar.gz", "has_sig": false, "md5_digest": "d66dc01a1aa9e84f1b4ebb910e5faae5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5810, "upload_time": "2020-03-30T18:02:56", "upload_time_iso_8601": "2020-03-30T18:02:56.072084Z", "url": "https://files.pythonhosted.org/packages/55/83/605ec5213de9ee36fb9ef801c9fc93b6f494ea9c41edea70f392921c7366/little-mallet-wrapper-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "0fd1278ecd9d4964bc58704550f6f45c", "sha256": "200c7d19c6b38f469b166466c87410eb4aa82711949ee9d42c07219078b86f19"}, "downloads": -1, "filename": "little_mallet_wrapper-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "0fd1278ecd9d4964bc58704550f6f45c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18070, "upload_time": "2020-04-02T20:05:54", "upload_time_iso_8601": "2020-04-02T20:05:54.236805Z", "url": "https://files.pythonhosted.org/packages/77/08/af2a4c6953a66a1425f551399210b7b6759eb8fa844df14079b312e232d9/little_mallet_wrapper-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0dfbd28e909821386d4d505d33d17c96", "sha256": "64037430c31f25605b9eff4d54b08e4093a443e21fcb7f4e05936eaf8e5eec7b"}, "downloads": -1, "filename": "little-mallet-wrapper-0.0.8.tar.gz", "has_sig": false, "md5_digest": "0dfbd28e909821386d4d505d33d17c96", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5811, "upload_time": "2020-04-02T20:05:56", "upload_time_iso_8601": "2020-04-02T20:05:56.503486Z", "url": "https://files.pythonhosted.org/packages/b8/ed/34e48e7de716109b3cb1701ac3fe7636e741dc163d55612724f1369d62fd/little-mallet-wrapper-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "504ce396f1f5fa7cab45a1a488272a0b", "sha256": "b5fae1898939582f421f09328e1580d7d93add0078939e20e9f29d53ff78c05d"}, "downloads": -1, "filename": "little_mallet_wrapper-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "504ce396f1f5fa7cab45a1a488272a0b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18130, "upload_time": "2020-04-02T20:37:49", "upload_time_iso_8601": "2020-04-02T20:37:49.964106Z", "url": "https://files.pythonhosted.org/packages/55/b7/5193ea16e42602f00cb6fc83bf07a554f1eeb86a7283e25d6a0e459818b2/little_mallet_wrapper-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3438755e43367066cb0a3a4fb679ee13", "sha256": "9da38faabed4b3d43d1c63bbf52d8c9385eb78567fa54961f8d39171dc7d5f49"}, "downloads": -1, "filename": "little-mallet-wrapper-0.0.9.tar.gz", "has_sig": false, "md5_digest": "3438755e43367066cb0a3a4fb679ee13", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5866, "upload_time": "2020-04-02T20:37:52", "upload_time_iso_8601": "2020-04-02T20:37:52.817635Z", "url": "https://files.pythonhosted.org/packages/e5/01/cb2e6ec44988eac5545bbc34298d738ab45adb59875eeb3ca6bb34a65b20/little-mallet-wrapper-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9d8515ce3b5c3e3def12061d962bab36", "sha256": "71d0da37b39c79f163625cb66ec5172e47cd05dc56427e424d08d0978cd324c5"}, "downloads": -1, "filename": "little_mallet_wrapper-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "9d8515ce3b5c3e3def12061d962bab36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18318, "upload_time": "2020-04-25T18:14:40", "upload_time_iso_8601": "2020-04-25T18:14:40.254533Z", "url": "https://files.pythonhosted.org/packages/c6/bd/90ca1f1d359516bedd764f6759495034cd2e1611abc4b5adcea40dee9dc1/little_mallet_wrapper-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83c36377da70bd8ee15975ced8f82d30", "sha256": "d0ba02b2e0ae1a03cc790bb3bd67dd49ee6b971c4910fde07c8549481bfd9e77"}, "downloads": -1, "filename": "little-mallet-wrapper-0.0.11.tar.gz", "has_sig": false, "md5_digest": "83c36377da70bd8ee15975ced8f82d30", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6631, "upload_time": "2020-04-25T18:14:44", "upload_time_iso_8601": "2020-04-25T18:14:44.912824Z", "url": "https://files.pythonhosted.org/packages/ea/e1/e9bcd4b13e58d41c5754dca93c2a61bcffab36d651689663c6ee930a43e8/little-mallet-wrapper-0.0.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:09 2020"}