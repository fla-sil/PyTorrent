{"info": {"author": "Mattia Sanchioni, Alessandro Concetti", "author_email": "mattia.sanchioni.dev@gmail.com, ale.concetti@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Scientific/Engineering :: Image Recognition"], "description": "# Segmentation Evaluation Tool\n\nThis tool has two main characteristics: \n1. manually segment an image in order to create the **ground truth**\n2. evaluate a segmentation through a ground truth in terms of **recall** and **precision**\n\nThe documentation is reachable through that [link](https://mett96.github.io/segmentation-evaluation/).\n\n![GitHub release (latest by date)](https://img.shields.io/github/v/release/mett96/segmentation-evaluation)\n![PyPI](https://img.shields.io/pypi/v/segmentation-evaluation?color=gre&logoColor=green)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/segmentation-evaluation)\n![GitHub](https://img.shields.io/github/license/mett96/segmentation-evaluation)\n![GitHub All Releases](https://img.shields.io/github/downloads/mett96/segmentation-evaluation/total)\n![GitHub stars](https://img.shields.io/github/stars/mett96/segmentation-evaluation?style=social)\n![GitHub forks](https://img.shields.io/github/forks/mett96/segmentation-evaluation?style=social)\n\n## Table of Content\n* [Installation](#Installation)\n* [Usage](#Usage)\n    * [Segmentation](#Segmentation)\n    * [Evaluation](#Evaluation)\n* [Version](#Version)\n* [Credits](#Credits)\n* [License](#License)\n\n ## Installation\n\n Use _pip_ to install the tool:\n ```shell script\npip install segmentation-evaluation\n```\n\n## Usage \nIn order to use the tool, open the terminal and digit `segmentation-evaluation`:\n```shell script\n$ segmentation-evaluation \n```\n\nAfter that a printed menu is shown:\n>**************************************************\n>PERFORMANCE TOOL\n>1) Press 1 to manually segment the image\n>2) Press 2 to evaluate programmatically segmentation\n>**************************************************\n\nIn order to exit from the menu press `ctrl + c`.\n\n### Segmentation\nChoosing `1` from the menu, the segmentation mode is activated.     \nAfter inserted the **absolute path** of the image and the **absolute path* of the folder in which save the results, a window that shows the required image is displayed.\n\n![](images/window_segmentation.png)\n\nIn order to insert a point **DOUBLE CLICK** in the desired position.     \nA green point is displayed. Then, inserting another point the segment between the two points is displayed.    \nAfter the third insertion of a point a polygon in which vertexes are the points is shown.\n\n A point | A line            \n:-------------------------:|:-------------------------:     \n ![](images/point.png)| ![](images/line.png)      \n A polygon with 3 vertexes | with 4 vertexes      \n  ![](images/3vertexes.png)| ![](images/4vertexes.png)      \n\n\nIn addition to inserting new points it is possible to perform several action inserting a specific char while the **image window is shown**.     \nThe possible actions are:\n\nChar | Action    \n----  | :-----    \nu | Undo last inserted point    \nc | Clear all inserted points (not removes the already saved polygons) \ns | Save points and go to execution to insert label    \nq | Terminate the insertion\n\nOnce the saving action is a pop up message asks to return to the terminal window where it is possible to insert the label associated to the polygon.    \nThen a printed string asks to come back to the image window to insert new polygons.\n\nIf you don't want to insert new polygon, come back to the image window and type `q`. A window shows all objects inserted associated to the label and typing again `q` the execution will terminate. \n\n### Evaluation\nIn order to perform the evaluation 3 paths need provided:\n1. path to the JSON file representing the correct segmentation, the ground truth\n2. path to the JSON file representing the segmentation to evaluate\n3. path to the folder in which save the evaluation\n\nThe evaluation is performed computing the recall and precision values.\nIn order to consider a match good, the object has to satisfy an intersection over the union greater or equal than 80%.\n\nThe results are saved into a json file containing several values, the associated key is the label matched in both json files as input.\nIn addition a final value that collects overall parameters associated to the key `overall_performance`.    \nEach item of the dictionary is another dictionary containing these keys:\n- `\"n_good_match\"`: number of polygons matched between the two json files\n- `\"n_correct\"`: number of polygons present in the ground truth\n- `\"n_found\"`: number of polygons present in the segmentation to evaluate\n- `\"recall\"`: n_good_match / n_correct\n- `\"precision\"`: n_good_match / n_found\n\n**NB**: the structure of the inputted json must be compliant with the following structure:\n```json\n{\n    \"0\": {\n        \"label\": \"name\",\n        \"points\": [\n            [803, 1138],\n            [980, 1167],\n            [972, 1370],\n            [797, 1331]\n        ]\n    },\n    \"1\": {\n        \"label\": \"\",\n        \"points\": []\n    }\n}\n```  \nThe main keys is an incremental value that identify uniquely the polygon.     \nEach polygon must contain a key `\"label\"` with the name (as string) and `\"points\"` that has a list as value, the list contains the vertexes of the polygon. Each vertex is a point represented by a list or a tuple of the (x, y) coordinate.\n\n## Version\n- `1.0`: first release \n\n## Credits \nThe tool was written by:\n- Mattia Sanchioni    [![](images/GitHub-Mark-16px.png)](https://github.com/mett96)\n- Alessandro Concetti    [![](images/GitHub-Mark-16px.png)](https://github.com/AleConcetti)\n\n## License\nThis project is under the GPL-3.0 license - see the [LICENSE.md](LICENSE.md) file for more details    \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mett96/segmentation-evaluation", "keywords": "segmentation-evaluation segmentation evaluation image analysis image-analysis ground-truth", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "segmentation-evaluation", "package_url": "https://pypi.org/project/segmentation-evaluation/", "platform": "", "project_url": "https://pypi.org/project/segmentation-evaluation/", "project_urls": {"Homepage": "https://github.com/mett96/segmentation-evaluation"}, "release_url": "https://pypi.org/project/segmentation-evaluation/1.0.4/", "requires_dist": ["numpy", "Shapely", "opencv-contrib-python (==3.4.2.17)"], "requires_python": ">=3.6", "summary": "Segmentation evaluation tool", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Segmentation Evaluation Tool</h1>\n<p>This tool has two main characteristics:</p>\n<ol>\n<li>manually segment an image in order to create the <strong>ground truth</strong></li>\n<li>evaluate a segmentation through a ground truth in terms of <strong>recall</strong> and <strong>precision</strong></li>\n</ol>\n<p>The documentation is reachable through that <a href=\"https://mett96.github.io/segmentation-evaluation/\" rel=\"nofollow\">link</a>.</p>\n<p><img alt=\"GitHub release (latest by date)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/65a611cddf388e6c73146f950aec70601a53d6ea/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f6d65747439362f7365676d656e746174696f6e2d6576616c756174696f6e\">\n<img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/09acc7cb0c88cde54abb326f449d788d5bcc60ac/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7365676d656e746174696f6e2d6576616c756174696f6e3f636f6c6f723d677265266c6f676f436f6c6f723d677265656e\">\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85909924aecab502dfd689004ba1d11c0deb2a1a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7365676d656e746174696f6e2d6576616c756174696f6e\">\n<img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b98c0ed9100f41a6bfd406a604741b716b620407/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d65747439362f7365676d656e746174696f6e2d6576616c756174696f6e\">\n<img alt=\"GitHub All Releases\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/662015be3c2150104ae4681dc51a2186d26c365f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6d65747439362f7365676d656e746174696f6e2d6576616c756174696f6e2f746f74616c\">\n<img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a4c2c0dc38ed4a17ca7522511bc0ea9055b26167/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6d65747439362f7365676d656e746174696f6e2d6576616c756174696f6e3f7374796c653d736f6369616c\">\n<img alt=\"GitHub forks\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9efe0d1f533a5e16f30f01fe14f233eda50bfb7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f6d65747439362f7365676d656e746174696f6e2d6576616c756174696f6e3f7374796c653d736f6369616c\"></p>\n<h2>Table of Content</h2>\n<ul>\n<li><a href=\"#Installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#Usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#Segmentation\" rel=\"nofollow\">Segmentation</a></li>\n<li><a href=\"#Evaluation\" rel=\"nofollow\">Evaluation</a></li>\n</ul>\n</li>\n<li><a href=\"#Version\" rel=\"nofollow\">Version</a></li>\n<li><a href=\"#Credits\" rel=\"nofollow\">Credits</a></li>\n<li><a href=\"#License\" rel=\"nofollow\">License</a></li>\n</ul>\n<h2>Installation</h2>\n<p>Use <em>pip</em> to install the tool:</p>\n<pre>pip install segmentation-evaluation\n</pre>\n<h2>Usage</h2>\n<p>In order to use the tool, open the terminal and digit <code>segmentation-evaluation</code>:</p>\n<pre>$ segmentation-evaluation \n</pre>\n<p>After that a printed menu is shown:</p>\n<blockquote>\n<hr>\n<p>PERFORMANCE TOOL</p>\n<ol>\n<li>Press 1 to manually segment the image</li>\n<li>Press 2 to evaluate programmatically segmentation</li>\n</ol>\n<hr>\n</blockquote>\n<p>In order to exit from the menu press <code>ctrl + c</code>.</p>\n<h3>Segmentation</h3>\n<p>Choosing <code>1</code> from the menu, the segmentation mode is activated.<br>\nAfter inserted the <strong>absolute path</strong> of the image and the *<em>absolute path</em> of the folder in which save the results, a window that shows the required image is displayed.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3595bd018b64f7a9d64b428cec19c73b446ab6d2/696d616765732f77696e646f775f7365676d656e746174696f6e2e706e67\"></p>\n<p>In order to insert a point <strong>DOUBLE CLICK</strong> in the desired position.<br>\nA green point is displayed. Then, inserting another point the segment between the two points is displayed.<br>\nAfter the third insertion of a point a polygon in which vertexes are the points is shown.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">A point</th>\n<th align=\"center\">A line</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97051b60d9085e6377e170b404cc3c53572035a5/696d616765732f706f696e742e706e67\"></td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1382e811db2cf3f4c68011b224df21e03edaec17/696d616765732f6c696e652e706e67\"></td>\n</tr>\n<tr>\n<td align=\"center\">A polygon with 3 vertexes</td>\n<td align=\"center\">with 4 vertexes</td>\n</tr>\n<tr>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6aed850ea119fcc3c8b8cf0dfdfd1ca36162893/696d616765732f3376657274657865732e706e67\"></td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a25b972031e6c92afd9050e50d8c36282047b41b/696d616765732f3476657274657865732e706e67\"></td>\n</tr></tbody></table>\n<p>In addition to inserting new points it is possible to perform several action inserting a specific char while the <strong>image window is shown</strong>.<br>\nThe possible actions are:</p>\n<table>\n<thead>\n<tr>\n<th>Char</th>\n<th align=\"left\">Action</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>u</td>\n<td align=\"left\">Undo last inserted point</td>\n</tr>\n<tr>\n<td>c</td>\n<td align=\"left\">Clear all inserted points (not removes the already saved polygons)</td>\n</tr>\n<tr>\n<td>s</td>\n<td align=\"left\">Save points and go to execution to insert label</td>\n</tr>\n<tr>\n<td>q</td>\n<td align=\"left\">Terminate the insertion</td>\n</tr></tbody></table>\n<p>Once the saving action is a pop up message asks to return to the terminal window where it is possible to insert the label associated to the polygon.<br>\nThen a printed string asks to come back to the image window to insert new polygons.</p>\n<p>If you don't want to insert new polygon, come back to the image window and type <code>q</code>. A window shows all objects inserted associated to the label and typing again <code>q</code> the execution will terminate.</p>\n<h3>Evaluation</h3>\n<p>In order to perform the evaluation 3 paths need provided:</p>\n<ol>\n<li>path to the JSON file representing the correct segmentation, the ground truth</li>\n<li>path to the JSON file representing the segmentation to evaluate</li>\n<li>path to the folder in which save the evaluation</li>\n</ol>\n<p>The evaluation is performed computing the recall and precision values.\nIn order to consider a match good, the object has to satisfy an intersection over the union greater or equal than 80%.</p>\n<p>The results are saved into a json file containing several values, the associated key is the label matched in both json files as input.\nIn addition a final value that collects overall parameters associated to the key <code>overall_performance</code>.<br>\nEach item of the dictionary is another dictionary containing these keys:</p>\n<ul>\n<li><code>\"n_good_match\"</code>: number of polygons matched between the two json files</li>\n<li><code>\"n_correct\"</code>: number of polygons present in the ground truth</li>\n<li><code>\"n_found\"</code>: number of polygons present in the segmentation to evaluate</li>\n<li><code>\"recall\"</code>: n_good_match / n_correct</li>\n<li><code>\"precision\"</code>: n_good_match / n_found</li>\n</ul>\n<p><strong>NB</strong>: the structure of the inputted json must be compliant with the following structure:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"0\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"label\"</span><span class=\"p\">:</span> <span class=\"s2\">\"name\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"points\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">[</span><span class=\"mi\">803</span><span class=\"p\">,</span> <span class=\"mi\">1138</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"mi\">980</span><span class=\"p\">,</span> <span class=\"mi\">1167</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"mi\">972</span><span class=\"p\">,</span> <span class=\"mi\">1370</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"mi\">797</span><span class=\"p\">,</span> <span class=\"mi\">1331</span><span class=\"p\">]</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"1\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"label\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"points\"</span><span class=\"p\">:</span> <span class=\"p\">[]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>The main keys is an incremental value that identify uniquely the polygon.<br>\nEach polygon must contain a key <code>\"label\"</code> with the name (as string) and <code>\"points\"</code> that has a list as value, the list contains the vertexes of the polygon. Each vertex is a point represented by a list or a tuple of the (x, y) coordinate.</p>\n<h2>Version</h2>\n<ul>\n<li><code>1.0</code>: first release</li>\n</ul>\n<h2>Credits</h2>\n<p>The tool was written by:</p>\n<ul>\n<li>Mattia Sanchioni    <a href=\"https://github.com/mett96\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d8c9612ab90b9a0352aa0eb2b0c7c79d860bfa4/696d616765732f4769744875622d4d61726b2d313670782e706e67\"></a></li>\n<li>Alessandro Concetti    <a href=\"https://github.com/AleConcetti\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d8c9612ab90b9a0352aa0eb2b0c7c79d860bfa4/696d616765732f4769744875622d4d61726b2d313670782e706e67\"></a></li>\n</ul>\n<h2>License</h2>\n<p>This project is under the GPL-3.0 license - see the <a href=\"LICENSE.md\" rel=\"nofollow\">LICENSE.md</a> file for more details</p>\n\n          </div>"}, "last_serial": 6514937, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "57f8d3200add4e0cc6d92da57fbb27e6", "sha256": "7edbfc18aa67598cc8d3be2230fa91ef20e9e74eb64e5e29e78517450b2f8a27"}, "downloads": -1, "filename": "segmentation_evaluation-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "57f8d3200add4e0cc6d92da57fbb27e6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18818, "upload_time": "2020-01-23T15:40:31", "upload_time_iso_8601": "2020-01-23T15:40:31.422433Z", "url": "https://files.pythonhosted.org/packages/2f/3d/2d8b43930818f7bd48d9c6da34c1fb512f248c3dfdfba2b52a562bc49ffb/segmentation_evaluation-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3d8c3ad2a05f66cdba1759157232de2", "sha256": "7fbb6f275a863dee7cf9c5fed90f21202f3e3b0b1a3d58d6442d4dfe02d2108f"}, "downloads": -1, "filename": "segmentation-evaluation-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d3d8c3ad2a05f66cdba1759157232de2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4918, "upload_time": "2020-01-23T15:40:34", "upload_time_iso_8601": "2020-01-23T15:40:34.108272Z", "url": "https://files.pythonhosted.org/packages/59/12/c5e2ae6cc9261a2731be14dbadaf5f3ab4d09dc43509465aa6f02a034839/segmentation-evaluation-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "f470109a1f710febaa02163b4cfc3fbe", "sha256": "b27b872dd01ea10ad54b1fae52ccc21c50aa8c4f777b84a580deb2c7aaf92691"}, "downloads": -1, "filename": "segmentation_evaluation-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f470109a1f710febaa02163b4cfc3fbe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18838, "upload_time": "2020-01-23T15:46:16", "upload_time_iso_8601": "2020-01-23T15:46:16.681065Z", "url": "https://files.pythonhosted.org/packages/2b/81/d715c591299af8ae7589cf37d4531deac745f6363b688a8624956a9a79c0/segmentation_evaluation-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee08fd352554c12ad167bbf07893ea35", "sha256": "0901a10c23e0682b90c15b53496796a44d578fbcececaa9510b897dc07cb9cc2"}, "downloads": -1, "filename": "segmentation-evaluation-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ee08fd352554c12ad167bbf07893ea35", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4882, "upload_time": "2020-01-23T15:46:19", "upload_time_iso_8601": "2020-01-23T15:46:19.000128Z", "url": "https://files.pythonhosted.org/packages/5b/55/1d506b03f3fc4aac77c6d460c7b04d08a0afb9064a1d37b92c1a51b4a43a/segmentation-evaluation-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "1b6f5384f9f0f8d58ed72332289a02a9", "sha256": "f0352dc1c6e8838673286cfd6414ed1b9d3662e056f7b6936d4784c8cb802abb"}, "downloads": -1, "filename": "segmentation_evaluation-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1b6f5384f9f0f8d58ed72332289a02a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18898, "upload_time": "2020-01-23T15:55:04", "upload_time_iso_8601": "2020-01-23T15:55:04.616633Z", "url": "https://files.pythonhosted.org/packages/cb/0d/8db4a96415fb6e5d21502da25540aec0347cabfbf41bc044888dba02631b/segmentation_evaluation-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "102786d037dbe50659a7aa7f8fc6fc9b", "sha256": "0356f26cf058d3b8d0e088c792749ef5aec76c755664b48e33b4f963dbdd2166"}, "downloads": -1, "filename": "segmentation-evaluation-1.0.3.tar.gz", "has_sig": false, "md5_digest": "102786d037dbe50659a7aa7f8fc6fc9b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4942, "upload_time": "2020-01-23T15:55:07", "upload_time_iso_8601": "2020-01-23T15:55:07.279317Z", "url": "https://files.pythonhosted.org/packages/b9/23/364e412179c3fbe4495c4a098e11bdc190225c9d847e8befdaa6cbd48a27/segmentation-evaluation-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "c51e3fc64780dee08714c5a834104e06", "sha256": "65e46e5896cd2d2ed3706f2362b770a745874198f253edfbe2fb3f5e2937e7ad"}, "downloads": -1, "filename": "segmentation_evaluation-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c51e3fc64780dee08714c5a834104e06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22686, "upload_time": "2020-01-24T17:18:35", "upload_time_iso_8601": "2020-01-24T17:18:35.423355Z", "url": "https://files.pythonhosted.org/packages/f9/b0/d903d54e16084346365d156ff33d65bfb993653899363c2f4d5d5874d4e6/segmentation_evaluation-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a77e132b0baa899a81eade29424e901d", "sha256": "536fbe2d0cc09da3ef9af78efb1cdc827804a88dfa5ee1b77efe4e3635662169"}, "downloads": -1, "filename": "segmentation-evaluation-1.0.4.tar.gz", "has_sig": false, "md5_digest": "a77e132b0baa899a81eade29424e901d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9428, "upload_time": "2020-01-24T17:18:37", "upload_time_iso_8601": "2020-01-24T17:18:37.168408Z", "url": "https://files.pythonhosted.org/packages/8d/20/c09317f1cd9112377f47398b55a5cf5721e2013a06c35dede9b31d74855f/segmentation-evaluation-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c51e3fc64780dee08714c5a834104e06", "sha256": "65e46e5896cd2d2ed3706f2362b770a745874198f253edfbe2fb3f5e2937e7ad"}, "downloads": -1, "filename": "segmentation_evaluation-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c51e3fc64780dee08714c5a834104e06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22686, "upload_time": "2020-01-24T17:18:35", "upload_time_iso_8601": "2020-01-24T17:18:35.423355Z", "url": "https://files.pythonhosted.org/packages/f9/b0/d903d54e16084346365d156ff33d65bfb993653899363c2f4d5d5874d4e6/segmentation_evaluation-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a77e132b0baa899a81eade29424e901d", "sha256": "536fbe2d0cc09da3ef9af78efb1cdc827804a88dfa5ee1b77efe4e3635662169"}, "downloads": -1, "filename": "segmentation-evaluation-1.0.4.tar.gz", "has_sig": false, "md5_digest": "a77e132b0baa899a81eade29424e901d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9428, "upload_time": "2020-01-24T17:18:37", "upload_time_iso_8601": "2020-01-24T17:18:37.168408Z", "url": "https://files.pythonhosted.org/packages/8d/20/c09317f1cd9112377f47398b55a5cf5721e2013a06c35dede9b31d74855f/segmentation-evaluation-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:44 2020"}