{"info": {"author": "Nicholas Morley", "author_email": "nick.morley111@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# visualise-spacy-tree\n\nAn alternative to [SpaCy's](https://spacy.io) [visualizer](https://spacy.io/usage/visualizers#dep), built on [GraphViz](https://graphviz.gitlab.io/). \n\n![Custom plot image](https://github.com/cyclecycle/visualise-spacy-tree/blob/master/example_plots/custom_plot.png)\n\n## Prerequisites\n\n- You need [GraphViz](https://graphviz.gitlab.io/download/) installed.\n\n## Installation\n\nWith pip:\n\n```bash\npip install visualise-spacy-tree\n```\n\nOr from source:\n\n```bash\ngit clone https://github.com/cyclecycle/visualise-spacy-tree.git visualise_spacy_tree\ncd visualise_spacy_tree\npython setup.py install\n```\n\n## Usage\n\n```python\n\n# Parse a string to create SpaCy Doc object\nimport en_core_web_sm\n\ntext = 'Forging involves the shaping of metal using localized compressive forces.'\n\nnlp = en_core_web_sm.load()\ndoc = nlp(text)\n\n# Create the plot\nimport visualise_spacy_tree\nplot = visualise_spacy_tree.plot(doc)\n\n# Write it to a file (it's png format)\nwith open('parse_tree.png', 'wb') as f:\n    f.write(plot)\n\n# If you're using Jupyter notebook, you can render it inline\nfrom IPython.display import Image, display\ndisplay(Image(plot))\n\n# Override node attributes like so\nfrom spacy.tokens import Token\nToken.set_extension('plot', default={})  # Create a token underscore extension\nfor token in doc:\n    node_text = '{0} [{1}])'.format(token.orth_, token.i)\n    token._.plot['text'] = node_text\n    if token.dep_ == 'ROOT':\n        token._.plot['color'] = 'green'\n\n'''\nYou can set any valid GraphViz dot attribute in 'plot'.\nSee GraphViz docs for reference of possible node attributes:\nhttps://graphviz.gitlab.io/_pages/doc/info/attrs.html\n'''\n\n```\n\n## Running the tests\n\n```bash\npytest\n```\n\n## Acknowledgements\n\nUses:\n\n- [pydot](https://github.com/pydot/pydot)\n\n## Contributions\n\nAre welcome :)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cyclecycle/visualise-spacy-tree", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "visualise-spacy-tree-0.0.1", "package_url": "https://pypi.org/project/visualise-spacy-tree-0.0.1/", "platform": "", "project_url": "https://pypi.org/project/visualise-spacy-tree-0.0.1/", "project_urls": {"Homepage": "https://github.com/cyclecycle/visualise-spacy-tree"}, "release_url": "https://pypi.org/project/visualise-spacy-tree-0.0.1/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Create dependency tree plots from SpaCy Doc objects", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>visualise-spacy-tree</h1>\n<p>An alternative to <a href=\"https://spacy.io\" rel=\"nofollow\">SpaCy's</a> <a href=\"https://spacy.io/usage/visualizers#dep\" rel=\"nofollow\">visualizer</a>, built on <a href=\"https://graphviz.gitlab.io/\" rel=\"nofollow\">GraphViz</a>.</p>\n<p><img alt=\"Custom plot image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fa5a7a96333b8123f189f9708c24928ae2fc7f43/68747470733a2f2f6769746875622e636f6d2f6379636c656379636c652f76697375616c6973652d73706163792d747265652f626c6f622f6d61737465722f6578616d706c655f706c6f74732f637573746f6d5f706c6f742e706e67\"></p>\n<h2>Prerequisites</h2>\n<ul>\n<li>You need <a href=\"https://graphviz.gitlab.io/download/\" rel=\"nofollow\">GraphViz</a> installed.</li>\n</ul>\n<h2>Installation</h2>\n<p>With pip:</p>\n<pre>pip install visualise-spacy-tree\n</pre>\n<p>Or from source:</p>\n<pre>git clone https://github.com/cyclecycle/visualise-spacy-tree.git visualise_spacy_tree\n<span class=\"nb\">cd</span> visualise_spacy_tree\npython setup.py install\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"c1\"># Parse a string to create SpaCy Doc object</span>\n<span class=\"kn\">import</span> <span class=\"nn\">en_core_web_sm</span>\n\n<span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s1\">'Forging involves the shaping of metal using localized compressive forces.'</span>\n\n<span class=\"n\">nlp</span> <span class=\"o\">=</span> <span class=\"n\">en_core_web_sm</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">()</span>\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">nlp</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create the plot</span>\n<span class=\"kn\">import</span> <span class=\"nn\">visualise_spacy_tree</span>\n<span class=\"n\">plot</span> <span class=\"o\">=</span> <span class=\"n\">visualise_spacy_tree</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Write it to a file (it's png format)</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'parse_tree.png'</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">plot</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If you're using Jupyter notebook, you can render it inline</span>\n<span class=\"kn\">from</span> <span class=\"nn\">IPython.display</span> <span class=\"kn\">import</span> <span class=\"n\">Image</span><span class=\"p\">,</span> <span class=\"n\">display</span>\n<span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"n\">plot</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Override node attributes like so</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spacy.tokens</span> <span class=\"kn\">import</span> <span class=\"n\">Token</span>\n<span class=\"n\">Token</span><span class=\"o\">.</span><span class=\"n\">set_extension</span><span class=\"p\">(</span><span class=\"s1\">'plot'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"p\">{})</span>  <span class=\"c1\"># Create a token underscore extension</span>\n<span class=\"k\">for</span> <span class=\"n\">token</span> <span class=\"ow\">in</span> <span class=\"n\">doc</span><span class=\"p\">:</span>\n    <span class=\"n\">node_text</span> <span class=\"o\">=</span> <span class=\"s1\">'</span><span class=\"si\">{0}</span><span class=\"s1\"> [</span><span class=\"si\">{1}</span><span class=\"s1\">])'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">orth_</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">_</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">[</span><span class=\"s1\">'text'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">node_text</span>\n    <span class=\"k\">if</span> <span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">dep_</span> <span class=\"o\">==</span> <span class=\"s1\">'ROOT'</span><span class=\"p\">:</span>\n        <span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">_</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">[</span><span class=\"s1\">'color'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'green'</span>\n\n<span class=\"sd\">'''</span>\n<span class=\"sd\">You can set any valid GraphViz dot attribute in 'plot'.</span>\n<span class=\"sd\">See GraphViz docs for reference of possible node attributes:</span>\n<span class=\"sd\">https://graphviz.gitlab.io/_pages/doc/info/attrs.html</span>\n<span class=\"sd\">'''</span>\n</pre>\n<h2>Running the tests</h2>\n<pre>pytest\n</pre>\n<h2>Acknowledgements</h2>\n<p>Uses:</p>\n<ul>\n<li><a href=\"https://github.com/pydot/pydot\" rel=\"nofollow\">pydot</a></li>\n</ul>\n<h2>Contributions</h2>\n<p>Are welcome :)</p>\n\n          </div>"}, "last_serial": 5309446, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3ad308f1f61fde40c7030ffcfbc0ca48", "sha256": "6d4a3a7ccf0327211d4dfe6db671403369aeda168fbca4b19f841426c1d5a8d8"}, "downloads": -1, "filename": "visualise_spacy_tree_0.0.1-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3ad308f1f61fde40c7030ffcfbc0ca48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3763, "upload_time": "2019-05-23T20:53:50", "upload_time_iso_8601": "2019-05-23T20:53:50.768046Z", "url": "https://files.pythonhosted.org/packages/a0/cd/2e94f6bf4b4db74c240350d618fac98a240948ff2c56c8dad6cef490178d/visualise_spacy_tree_0.0.1-0.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3ad308f1f61fde40c7030ffcfbc0ca48", "sha256": "6d4a3a7ccf0327211d4dfe6db671403369aeda168fbca4b19f841426c1d5a8d8"}, "downloads": -1, "filename": "visualise_spacy_tree_0.0.1-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3ad308f1f61fde40c7030ffcfbc0ca48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3763, "upload_time": "2019-05-23T20:53:50", "upload_time_iso_8601": "2019-05-23T20:53:50.768046Z", "url": "https://files.pythonhosted.org/packages/a0/cd/2e94f6bf4b4db74c240350d618fac98a240948ff2c56c8dad6cef490178d/visualise_spacy_tree_0.0.1-0.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:35:11 2020"}