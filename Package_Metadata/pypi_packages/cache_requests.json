{"info": {"author": "Manu Phatak", "author_email": "bionikspoon@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Database", "Topic :: Database :: Database Engines/Servers", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Session", "Topic :: Internet :: WWW/HTTP :: Site Management", "Topic :: Software Development", "Topic :: Utilities"], "description": ".. START Source defined in docs/github_docs.py\n\n\n.. This document was procedurally generated by docs/github_docs.py on Friday, December 25, 2015\n\n\n.. END Source defined in docs/github_docs.py\n.. START Source defined in docs/github_docs.py\n\n\n.. role:: mod(literal)\n.. role:: func(literal)\n.. role:: data(literal)\n.. role:: const(literal)\n.. role:: class(literal)\n.. role:: meth(literal)\n.. role:: attr(literal)\n.. role:: exc(literal)\n.. role:: obj(literal)\n.. role:: envvar(literal)\n\n\n.. END Source defined in docs/github_docs.py\n.. START Source defined in docs/source/_partial/readme_title.rst\n\n==============\ncache_requests\n==============\n\n.. image:: https://badge.fury.io/py/cache_requests.svg\n    :target: https://pypi.python.org/pypi/cache_requests/\n    :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/status/cache_requests.svg\n    :target: https://pypi.python.org/pypi/cache_requests/\n    :alt: Development Status\n\n.. image:: https://travis-ci.org/bionikspoon/cache_requests.svg?branch=develop\n    :target: https://travis-ci.org/bionikspoon/cache_requests?branch=develop\n    :alt: Build Status\n\n.. image:: https://coveralls.io/repos/bionikspoon/cache_requests/badge.svg?branch=develop\n    :target: https://coveralls.io/github/bionikspoon/cache_requests?branch=develop&service=github\n    :alt: Coverage Status\n\n.. image:: https://readthedocs.org/projects/cache_requests/badge/?version=develop\n    :target: https://cache_requests.readthedocs.org/en/develop/?badge=develop\n    :alt: Documentation Status\n\n------------\n\n.. image:: https://img.shields.io/badge/Python-2.7,_3.3,_3.4,_3.5,_pypy-brightgreen.svg\n    :target: https://pypi.python.org/pypi/cache_requests/\n    :alt: Supported Python versions\n\n\n.. image:: https://img.shields.io/pypi/l/cache_requests.svg\n    :target: https://pypi.python.org/pypi/cache_requests/\n    :alt: License\n\n**Simple. Powerful. Persistent LRU caching for the requests library.**\n\n\n.. END Source defined in docs/source/_partial/readme_title.rst\n.. START Source defined in docs/source/_partial/readme_features.rst\n\nFeatures\n--------\n\n- Documentation: https://cache_requests.readthedocs.org\n- Open Source: https://github.com/bionikspoon/cache_requests\n- Python version agnostic: tested against Python 2.7, 3.3, 3.4, 3.5 and Pypy\n- MIT license\n\n..\n\n- Drop in decorator for the requests library.\n- Automatic timer based expiration on stored items (optional).\n- Backed by yahoo's powerful ``redislite``.\n- Scalable with redis. Optionally accepts a ``redis`` connection.\n- Exposes the powerful underlying ``Memoize`` decorator to decorate any function.\n- Tested with high coverage.\n- Lightweight. Simple logic.\n- Lightning fast.\n\n..\n\n- Jump start your development cycle.\n- Collect and reuse entire response objects.\n\n\n.. END Source defined in docs/source/_partial/readme_features.rst\n.. START Source defined in docs/source/installation.rst\n\n\n============\nInstallation\n============\n\nAt the command line either via easy_install or pip\n\n.. code-block:: shell\n\n    $ pip install cache_requests\n\n\n\n.. code-block:: shell\n\n    $ easy_install cache_requests\n\nOr, if you have virtualenvwrapper installed\n\n.. code-block:: shell\n\n    $ mkvirtualenv cache_requests\n    $ pip install cache_requests\n\n**Uninstall**\n\n.. code-block:: shell\n\n    $ pip uninstall cache_requests\n\n\n.. END Source defined in docs/source/installation.rst\n.. START Source defined in docs/source/usage.rst\n\n=====\nUsage\n=====\n\nTo use cache_requests in a project\n\n.. code-block:: python\n\n    import cache_requests\n\nQuick Start\n-----------\n\nTo use ``cache_requests`` in a project\n\n.. code-block:: python\n\n    >>> from cache_requests import Session()\n\n    requests = Session()\n\n    # from python-requests.org\n    >>> r = requests.get('https://api.github.com/user', auth=('user', 'pass'))\n    >>> r.status_code\n    200\n    >>> r.headers['content-type']\n    'application/json; charset=utf8'\n    >>> r.encoding\n    'utf-8'\n    >>> r.text\n    u'{\"type\":\"User\"...'\n    >>> r.json()\n    {u'private_gists': 419, u'total_private_repos': 77, ...}\n\n\nConfig Options\n--------------\n\nDecorated Methods\n~~~~~~~~~~~~~~~~~\n\n``method.ex``\n    sets the default expiration (seconds) for new cache entries.\n\n``method.redis``\n    creates the connection to the ``redis`` or ``redislite`` database. By default this is a ``redislite`` connection. However, a redis connection can be dropped in for easy scalability.\n\n\n:mod:`cache_requests.Session`\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- ``ex`` is shared between request methods.  They can be accessed by ``Session.cache.ex`` or ``Session.get.ex``, where ``get`` is the ``requests.get`` method\n\n- By default requests that return and error will not be cached.  This can be overridden by overriding the ``Session.cache.set_cache_cb`` to return ``False``.  The callback takes the response object as an argument\n\n.. code-block:: python\n\n        from cache_requests import Session\n\n        requests = Session()\n\n        requests.cache.set_cache_db = lambda _:False\n\n- By default only autonomous methods are cached (``get``, ``head``, ``options``).  Each method can be setup to be cached using the ``Session.cache`` config option.\n\n\n\nThese methods are accessed through the Session objects ``Session.cache.[method name]``.\nThey can be overridden with the ``Session.cache.all`` setting.\n\nFor example\n\n.. code-block:: python\n\n        from cache_requests import Session\n\n        requests = Session()\n\n        requests.cache.delete = True\n\n        # cached, only called once.\n        requests.delete('http://google.com')\n        requests.delete('http://google.com')\n\n        requests.cache.delete = True\n\n        # not cached, called twice.\n        requests.delete('http://google.com')\n        requests.delete('http://google.com')\n\n        # cache ALL methods\n        requests.cache.all = True\n\n        # don't cache any methods\n        requests.cache.all = False\n\n        # Use individual method cache options.\n        requests.cache.all = None\n\nDefault settings\n****************\n===========  ========\nMethod       Cached\n===========  ========\n``get``      ``True``\n``head``     ``True``\n``options``  ``True``\n``post``     ``False``\n``put``      ``False``\n``patch``    ``False``\n``delete``   ``False``\n``all``      ``None``\n===========  ========\n\nFunction Level Config\n~~~~~~~~~~~~~~~~~~~~~\n\nCache Busting\n    Use keyword ``bust_cache=True`` in a memoized function to force reevaluation.\n\nConditionally Set Cache\n    Use keyword ``set_cache`` to provide a callback.  The callback takes the results of function as an argument and must return a ``bool``. Alternatively, ``True`` and ``False`` can be used.\n\nUse Case Scenarios\n------------------\n\n\nDevelopment: 3rd Party APIs\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nScenario:\n    Working on a project that uses a 3rd party API or service.\n\nThings you want:\n    * A cache that persists between sessions and is lightning fast.\n    * Ability to rapidly explore the API and it's parameters.\n    * Ability to inspect and debug response content.\n    * Ability to focus on progress.\n    * Perfect transition to a production environment.\n\n\n\nThings you don't want:\n    * Dependency on network and server stability for development.\n    * Spamming the API.  Especially APIs with limits.\n    * Responses that change in non-meaningful ways.\n    * Burning energy with copypasta or fake data to run piece of your program.\n    * Slow. Responses.\n\nMake a request one time. Cache the results for the rest of your work session.\n\n.. code-block:: python\n\n    import os\n\n    if os.environ.get('ENV') == 'DEVELOP':\n        from cache_requests import Session\n\n        request = Session(ex=60 * 60 )  # Set expiration, 60 min\n    else:\n        import requests\n\n    # strange, complicated request you might make\n    headers = {\"accept-encoding\": \"gzip, deflate, sdch\", \"accept-language\": \"en-US,en;q=0.8\"}\n    payload = dict(sourceid=\"chrome-instant\", ion=\"1\", espv=\"2\", ie=\"UTF-8\", client=\"ubuntu\",\n                   q=\"hash%20a%20dictionary%20python\")\n    response = requests.get('http://google.com/search', headers=headers, params=payload)\n\n    # spam to prove a point\n    response = requests.get('http://google.com/search', headers=headers, params=payload)\n    response = requests.get('http://google.com/search', headers=headers, params=payload)\n    response = requests.get('http://google.com/search', headers=headers, params=payload)\n    response = requests.get('http://google.com/search', headers=headers, params=payload)\n    response = requests.get('http://google.com/search', headers=headers, params=payload)\n    response = requests.get('http://google.com/search', headers=headers, params=payload)\n    response = requests.get('http://google.com/search', headers=headers, params=payload)\n\n    # tweak your query, we're exploring here\n    payload = dict(sourceid=\"chrome-instant\", ion=\"1\", espv=\"2\", ie=\"UTF-8\", client=\"ubuntu\",\n                   q=\"hash%20a%20dictionary%20python2\")\n    # do you see what changed? the caching tool did.\n    response = requests.get('http://google.com/search', headers=headers, params=payload)\n    response = requests.get('http://google.com/search', headers=headers, params=payload)\n    response = requests.get('http://google.com/search', headers=headers, params=payload)\n\n\n\nProduction: Web Scraping\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nAutomatically expire old content.\n\n    * How often? After a day? A week? A Month? etc.  100% of this logic is built in with the ``Session.cache.ex`` setting.\n    * Effectively it can manage all of the time-based rotation.\n    * Perfect if you theres more data then what your API caps allow.\n\nOne line of code to use a ``redis`` full database.\n\n    * Try ``redislite``; it can handle quite a bit.  The ``redislite`` api used by this module is 1:1 with the redis package.  Just replace the connection parameter/config value.\n    * ``redis`` is a drop in:\n\n.. code-block:: python\n\n        connection  = redis.StrictRedis(host='localhost', port=6379, db=0)\n        requests = Session(connection=connection)\n\n    * Everything else just works.  There's no magic required.\n\n.. code-block:: python\n\n        from cache_requests import Session\n\n        connection  = redis.StrictRedis(host='localhost', port=6379, db=0)\n        ex = 7 * 24 * 60 * 60 # 1 week\n\n        requests = Session(ex=ex, connection=connection)\n\n        for i in range(1000)\n            payload = dict(q=i)\n            response = requests.get('http://google.com/search', params=payload)\n            print(response.text)\n\n\n\n\nUsage: memoize\n~~~~~~~~~~~~~~\n\n\n\n.. code-block:: python\n\n    from cache_requests import Memoize\n\n    @Memoize(ex=15 * 60)  # 15 min, default, 60 min\n    def amazing_but_expensive_function(*args, **kwargs)\n        print(\"You're going to like this\")\n\n\n.. END Source defined in docs/source/usage.rst\n.. START Source defined in docs/source/_partial/readme_credits.rst\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `bionikspoon/cookiecutter-pypackage`_ forked from `audreyr/cookiecutter-pypackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`bionikspoon/cookiecutter-pypackage`: https://github.com/bionikspoon/cookiecutter-pypackage\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n.. END Source defined in docs/source/_partial/readme_credits.rst\n\n\n=======\nHistory\n=======\n\nNext Release\n------------\n\n- Stay tuned.\n\n\n4.0.0 (2015-12-25)\n------------------\n\n- Fix: Use MD5 for hash to avoid PYTHONHASHSEED issue.\n- Fix: Give default dbfilename a more unique name, based on caller.\n- BREAKING:Move ``Session.ex`` and ``Session.connection`` to ``Session.cache`` config object.\n- Updated examples.  New example demonstrates Memoize decorator.\n- Updated requirements.\n\n3.0.0 (2015-12-22)\n------------------\n\n- Feature: Cache busting! Use keyword argument ``bust_cache=True`` to force reevaluation.\n- Feature: Session automatically skips caching error responses.\n- Feature: Callback argument to decide if results should be cached.\n- Feature: Decorated Session methods share a centralized configuration per session.\n- BREAKING: Remove global config, in favor component level config.  Reasoning: Global config adds way too much complexity and adds too little value.  (Everything needs to lazy load the config at the last moment)\n- Fix: Unique cache per function in shared db.\n- Fix: Tweaks to keep the classes sub classable.\n- Fix: Cleaned up tests.\n- Updated requirements.\n\n2.0.0 (2015-12-12)\n------------------\n\n- API completely rewritten\n- New API extends ``requests`` internals as opposed to monkeypatching.\n- Entire package is redesigned to be more maintainable, more modular, and more usable.\n- Dependencies are pinned.\n- Tests are expanded.\n- PY26 and PY32 support is dropped, because of dependency constraints.\n- PY35 support is added.\n- Docs are rewritten.\n- Move towards idiomatic code.\n- 2.0.6 Fix broken coverage, broken rst render.\n\n1.0.0 (2015-04-23)\n------------------\n\n- First real release.\n- Feature/ Unit test suite, very high coverage.\n- Feature/ ``redislite`` integration.\n- Feature/ Documentation.  https://cache-requests.readthedocs.org.\n- Feature/ Exposed the beefed up ``Memoize`` decorator.\n- Feature/ Upgraded compatibility to:\n    - PY26\n    - PY27\n    - PY33\n    - PY34\n    - PYPY\n- Added examples and case studies.\n\n\n0.1.0 (2015-04-19)\n------------------\n\n- First release on PyPI.", "description_content_type": null, "docs_url": "https://pythonhosted.org/cache_requests/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bionikspoon/cache_requests", "keywords": "cache_requests Manu Phatak", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cache_requests", "package_url": "https://pypi.org/project/cache_requests/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cache_requests/", "project_urls": {"Homepage": "https://github.com/bionikspoon/cache_requests"}, "release_url": "https://pypi.org/project/cache_requests/4.0.0/", "requires_dist": ["redislite", "requests", "six"], "requires_python": "", "summary": "Simple. Powerful. Persistent LRU caching for the requests library.", "version": "4.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"cache-requests\">\n<h2>cache_requests</h2>\n<a href=\"https://pypi.python.org/pypi/cache_requests/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/008d9946d91b292ec3b1d15d4d2b832f018f1d93/68747470733a2f2f62616467652e667572792e696f2f70792f63616368655f72657175657374732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/cache_requests/\" rel=\"nofollow\"><img alt=\"Development Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d3fd5b2b08c84171a7eb10f45c0cf36feda47b94/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f63616368655f72657175657374732e737667\"></a>\n<a href=\"https://travis-ci.org/bionikspoon/cache_requests?branch=develop\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d8a61542d4729fb6a13b916e078c6beae2c769f4/68747470733a2f2f7472617669732d63692e6f72672f62696f6e696b73706f6f6e2f63616368655f72657175657374732e7376673f6272616e63683d646576656c6f70\"></a>\n<a href=\"https://coveralls.io/github/bionikspoon/cache_requests?branch=develop&amp;service=github\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/10ac82e3a2fa00109d898cc7bdb727512802c86e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f62696f6e696b73706f6f6e2f63616368655f72657175657374732f62616467652e7376673f6272616e63683d646576656c6f70\"></a>\n<a href=\"https://cache_requests.readthedocs.org/en/develop/?badge=develop\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/162d31bb671719f184d8169074c8f6e30d878fe9/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f63616368655f72657175657374732f62616467652f3f76657273696f6e3d646576656c6f70\"></a>\n<hr class=\"docutils\">\n<a href=\"https://pypi.python.org/pypi/cache_requests/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9dfd391f8fd92af22f00a509f7ea03380db3b397/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d322e372c5f332e332c5f332e342c5f332e352c5f707970792d627269676874677265656e2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/cache_requests/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58dd9b245d03c32a4c7d369a46cf9e27055c01e8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f63616368655f72657175657374732e737667\"></a>\n<p><strong>Simple. Powerful. Persistent LRU caching for the requests library.</strong></p>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Documentation: <a href=\"https://cache_requests.readthedocs.org\" rel=\"nofollow\">https://cache_requests.readthedocs.org</a></li>\n<li>Open Source: <a href=\"https://github.com/bionikspoon/cache_requests\" rel=\"nofollow\">https://github.com/bionikspoon/cache_requests</a></li>\n<li>Python version agnostic: tested against Python 2.7, 3.3, 3.4, 3.5 and Pypy</li>\n<li>MIT license</li>\n</ul>\n<ul>\n<li>Drop in decorator for the requests library.</li>\n<li>Automatic timer based expiration on stored items (optional).</li>\n<li>Backed by yahoo\u2019s powerful <tt>redislite</tt>.</li>\n<li>Scalable with redis. Optionally accepts a <tt>redis</tt> connection.</li>\n<li>Exposes the powerful underlying <tt>Memoize</tt> decorator to decorate any function.</li>\n<li>Tested with high coverage.</li>\n<li>Lightweight. Simple logic.</li>\n<li>Lightning fast.</li>\n</ul>\n<ul>\n<li>Jump start your development cycle.</li>\n<li>Collect and reuse entire response objects.</li>\n</ul>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>At the command line either via easy_install or pip</p>\n<pre>$ pip install cache_requests\n</pre>\n<pre>$ easy_install cache_requests\n</pre>\n<p>Or, if you have virtualenvwrapper installed</p>\n<pre>$ mkvirtualenv cache_requests\n$ pip install cache_requests\n</pre>\n<p><strong>Uninstall</strong></p>\n<pre>$ pip uninstall cache_requests\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To use cache_requests in a project</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cache_requests</span>\n</pre>\n<div id=\"quick-start\">\n<h3>Quick Start</h3>\n<p>To use <tt>cache_requests</tt> in a project</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cache_requests</span> <span class=\"kn\">import</span> <span class=\"n\">Session</span><span class=\"p\">()</span>\n\n<span class=\"n\">requests</span> <span class=\"o\">=</span> <span class=\"n\">Session</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># from python-requests.org</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://api.github.com/user'</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'user'</span><span class=\"p\">,</span> <span class=\"s1\">'pass'</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">status_code</span>\n<span class=\"mi\">200</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s1\">'content-type'</span><span class=\"p\">]</span>\n<span class=\"s1\">'application/json; charset=utf8'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">encoding</span>\n<span class=\"s1\">'utf-8'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"sa\">u</span><span class=\"s1\">'{\"type\":\"User\"...'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"sa\">u</span><span class=\"s1\">'private_gists'</span><span class=\"p\">:</span> <span class=\"mi\">419</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'total_private_repos'</span><span class=\"p\">:</span> <span class=\"mi\">77</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"config-options\">\n<h3>Config Options</h3>\n<div id=\"decorated-methods\">\n<h4>Decorated Methods</h4>\n<dl>\n<dt><tt>method.ex</tt></dt>\n<dd>sets the default expiration (seconds) for new cache entries.</dd>\n<dt><tt>method.redis</tt></dt>\n<dd>creates the connection to the <tt>redis</tt> or <tt>redislite</tt> database. By default this is a <tt>redislite</tt> connection. However, a redis connection can be dropped in for easy scalability.</dd>\n</dl>\n</div>\n<div id=\"cache-requests-session\">\n<h4><tt>cache_requests.Session</tt></h4>\n<ul>\n<li><tt>ex</tt> is shared between request methods.  They can be accessed by <tt>Session.cache.ex</tt> or <tt>Session.get.ex</tt>, where <tt>get</tt> is the <tt>requests.get</tt> method</li>\n<li>By default requests that return and error will not be cached.  This can be overridden by overriding the <tt>Session.cache.set_cache_cb</tt> to return <tt>False</tt>.  The callback takes the response object as an argument</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cache_requests</span> <span class=\"kn\">import</span> <span class=\"n\">Session</span>\n\n<span class=\"n\">requests</span> <span class=\"o\">=</span> <span class=\"n\">Session</span><span class=\"p\">()</span>\n\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">set_cache_db</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">_</span><span class=\"p\">:</span><span class=\"kc\">False</span>\n</pre>\n<ul>\n<li>By default only autonomous methods are cached (<tt>get</tt>, <tt>head</tt>, <tt>options</tt>).  Each method can be setup to be cached using the <tt>Session.cache</tt> config option.</li>\n</ul>\n<p>These methods are accessed through the Session objects <tt><span class=\"pre\">Session.cache.[method</span> name]</tt>.\nThey can be overridden with the <tt>Session.cache.all</tt> setting.</p>\n<p>For example</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cache_requests</span> <span class=\"kn\">import</span> <span class=\"n\">Session</span>\n\n<span class=\"n\">requests</span> <span class=\"o\">=</span> <span class=\"n\">Session</span><span class=\"p\">()</span>\n\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">delete</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n<span class=\"c1\"># cached, only called once.</span>\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com'</span><span class=\"p\">)</span>\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com'</span><span class=\"p\">)</span>\n\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">delete</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n<span class=\"c1\"># not cached, called twice.</span>\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com'</span><span class=\"p\">)</span>\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># cache ALL methods</span>\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">all</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n<span class=\"c1\"># don't cache any methods</span>\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">all</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n<span class=\"c1\"># Use individual method cache options.</span>\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">all</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n</pre>\n<div id=\"default-settings\">\n<h5>Default settings</h5>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Method</th>\n<th>Cached</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>get</tt></td>\n<td><tt>True</tt></td>\n</tr>\n<tr><td><tt>head</tt></td>\n<td><tt>True</tt></td>\n</tr>\n<tr><td><tt>options</tt></td>\n<td><tt>True</tt></td>\n</tr>\n<tr><td><tt>post</tt></td>\n<td><tt>False</tt></td>\n</tr>\n<tr><td><tt>put</tt></td>\n<td><tt>False</tt></td>\n</tr>\n<tr><td><tt>patch</tt></td>\n<td><tt>False</tt></td>\n</tr>\n<tr><td><tt>delete</tt></td>\n<td><tt>False</tt></td>\n</tr>\n<tr><td><tt>all</tt></td>\n<td><tt>None</tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"function-level-config\">\n<h4>Function Level Config</h4>\n<dl>\n<dt>Cache Busting</dt>\n<dd>Use keyword <tt>bust_cache=True</tt> in a memoized function to force reevaluation.</dd>\n<dt>Conditionally Set Cache</dt>\n<dd>Use keyword <tt>set_cache</tt> to provide a callback.  The callback takes the results of function as an argument and must return a <tt>bool</tt>. Alternatively, <tt>True</tt> and <tt>False</tt> can be used.</dd>\n</dl>\n</div>\n</div>\n<div id=\"use-case-scenarios\">\n<h3>Use Case Scenarios</h3>\n<div id=\"development-3rd-party-apis\">\n<h4>Development: 3rd Party APIs</h4>\n<dl>\n<dt>Scenario:</dt>\n<dd>Working on a project that uses a 3rd party API or service.</dd>\n<dt>Things you want:</dt>\n<dd><ul>\n<li>A cache that persists between sessions and is lightning fast.</li>\n<li>Ability to rapidly explore the API and it\u2019s parameters.</li>\n<li>Ability to inspect and debug response content.</li>\n<li>Ability to focus on progress.</li>\n<li>Perfect transition to a production environment.</li>\n</ul>\n</dd>\n<dt>Things you don\u2019t want:</dt>\n<dd><ul>\n<li>Dependency on network and server stability for development.</li>\n<li>Spamming the API.  Especially APIs with limits.</li>\n<li>Responses that change in non-meaningful ways.</li>\n<li>Burning energy with copypasta or fake data to run piece of your program.</li>\n<li>Slow. Responses.</li>\n</ul>\n</dd>\n</dl>\n<p>Make a request one time. Cache the results for the rest of your work session.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'ENV'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'DEVELOP'</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">cache_requests</span> <span class=\"kn\">import</span> <span class=\"n\">Session</span>\n\n    <span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">Session</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"o\">=</span><span class=\"mi\">60</span> <span class=\"o\">*</span> <span class=\"mi\">60</span> <span class=\"p\">)</span>  <span class=\"c1\"># Set expiration, 60 min</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n<span class=\"c1\"># strange, complicated request you might make</span>\n<span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"accept-encoding\"</span><span class=\"p\">:</span> <span class=\"s2\">\"gzip, deflate, sdch\"</span><span class=\"p\">,</span> <span class=\"s2\">\"accept-language\"</span><span class=\"p\">:</span> <span class=\"s2\">\"en-US,en;q=0.8\"</span><span class=\"p\">}</span>\n<span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">sourceid</span><span class=\"o\">=</span><span class=\"s2\">\"chrome-instant\"</span><span class=\"p\">,</span> <span class=\"n\">ion</span><span class=\"o\">=</span><span class=\"s2\">\"1\"</span><span class=\"p\">,</span> <span class=\"n\">espv</span><span class=\"o\">=</span><span class=\"s2\">\"2\"</span><span class=\"p\">,</span> <span class=\"n\">ie</span><span class=\"o\">=</span><span class=\"s2\">\"UTF-8\"</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"o\">=</span><span class=\"s2\">\"ubuntu\"</span><span class=\"p\">,</span>\n               <span class=\"n\">q</span><span class=\"o\">=</span><span class=\"s2\">\"hash</span><span class=\"si\">%20a%20d</span><span class=\"s2\">ictionary%20python\"</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com/search'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># spam to prove a point</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com/search'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com/search'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com/search'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com/search'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com/search'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com/search'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com/search'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># tweak your query, we're exploring here</span>\n<span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">sourceid</span><span class=\"o\">=</span><span class=\"s2\">\"chrome-instant\"</span><span class=\"p\">,</span> <span class=\"n\">ion</span><span class=\"o\">=</span><span class=\"s2\">\"1\"</span><span class=\"p\">,</span> <span class=\"n\">espv</span><span class=\"o\">=</span><span class=\"s2\">\"2\"</span><span class=\"p\">,</span> <span class=\"n\">ie</span><span class=\"o\">=</span><span class=\"s2\">\"UTF-8\"</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"o\">=</span><span class=\"s2\">\"ubuntu\"</span><span class=\"p\">,</span>\n               <span class=\"n\">q</span><span class=\"o\">=</span><span class=\"s2\">\"hash</span><span class=\"si\">%20a%20d</span><span class=\"s2\">ictionary%20python2\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># do you see what changed? the caching tool did.</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com/search'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com/search'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com/search'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"production-web-scraping\">\n<h4>Production: Web Scraping</h4>\n<p>Automatically expire old content.</p>\n<blockquote>\n<ul>\n<li>How often? After a day? A week? A Month? etc.  100% of this logic is built in with the <tt>Session.cache.ex</tt> setting.</li>\n<li>Effectively it can manage all of the time-based rotation.</li>\n<li>Perfect if you theres more data then what your API caps allow.</li>\n</ul>\n</blockquote>\n<p>One line of code to use a <tt>redis</tt> full database.</p>\n<blockquote>\n<ul>\n<li>Try <tt>redislite</tt>; it can handle quite a bit.  The <tt>redislite</tt> api used by this module is 1:1 with the redis package.  Just replace the connection parameter/config value.</li>\n<li><tt>redis</tt> is a drop in:</li>\n</ul>\n</blockquote>\n<pre>    <span class=\"n\">connection</span>  <span class=\"o\">=</span> <span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">StrictRedis</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">6379</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">requests</span> <span class=\"o\">=</span> <span class=\"n\">Session</span><span class=\"p\">(</span><span class=\"n\">connection</span><span class=\"o\">=</span><span class=\"n\">connection</span><span class=\"p\">)</span>\n\n<span class=\"o\">*</span> <span class=\"n\">Everything</span> <span class=\"k\">else</span> <span class=\"n\">just</span> <span class=\"n\">works</span><span class=\"o\">.</span>  <span class=\"n\">There</span><span class=\"s1\">'s no magic required.</span>\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cache_requests</span> <span class=\"kn\">import</span> <span class=\"n\">Session</span>\n\n<span class=\"n\">connection</span>  <span class=\"o\">=</span> <span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">StrictRedis</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">6379</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">ex</span> <span class=\"o\">=</span> <span class=\"mi\">7</span> <span class=\"o\">*</span> <span class=\"mi\">24</span> <span class=\"o\">*</span> <span class=\"mi\">60</span> <span class=\"o\">*</span> <span class=\"mi\">60</span> <span class=\"c1\"># 1 week</span>\n\n<span class=\"n\">requests</span> <span class=\"o\">=</span> <span class=\"n\">Session</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"o\">=</span><span class=\"n\">ex</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"o\">=</span><span class=\"n\">connection</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n    <span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com/search'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"usage-memoize\">\n<h4>Usage: memoize</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cache_requests</span> <span class=\"kn\">import</span> <span class=\"n\">Memoize</span>\n\n<span class=\"nd\">@Memoize</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"o\">=</span><span class=\"mi\">15</span> <span class=\"o\">*</span> <span class=\"mi\">60</span><span class=\"p\">)</span>  <span class=\"c1\"># 15 min, default, 60 min</span>\n<span class=\"k\">def</span> <span class=\"nf\">amazing_but_expensive_function</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"You're going to like this\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>Tools used in rendering this package:</p>\n<ul>\n<li><a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a></li>\n<li><a href=\"https://github.com/bionikspoon/cookiecutter-pypackage\" rel=\"nofollow\">bionikspoon/cookiecutter-pypackage</a> forked from <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a></li>\n</ul>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"next-release\">\n<h3>Next Release</h3>\n<ul>\n<li>Stay tuned.</li>\n</ul>\n</div>\n<div id=\"id1\">\n<h3>4.0.0 (2015-12-25)</h3>\n<ul>\n<li>Fix: Use MD5 for hash to avoid PYTHONHASHSEED issue.</li>\n<li>Fix: Give default dbfilename a more unique name, based on caller.</li>\n<li>BREAKING:Move <tt>Session.ex</tt> and <tt>Session.connection</tt> to <tt>Session.cache</tt> config object.</li>\n<li>Updated examples.  New example demonstrates Memoize decorator.</li>\n<li>Updated requirements.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>3.0.0 (2015-12-22)</h3>\n<ul>\n<li>Feature: Cache busting! Use keyword argument <tt>bust_cache=True</tt> to force reevaluation.</li>\n<li>Feature: Session automatically skips caching error responses.</li>\n<li>Feature: Callback argument to decide if results should be cached.</li>\n<li>Feature: Decorated Session methods share a centralized configuration per session.</li>\n<li>BREAKING: Remove global config, in favor component level config.  Reasoning: Global config adds way too much complexity and adds too little value.  (Everything needs to lazy load the config at the last moment)</li>\n<li>Fix: Unique cache per function in shared db.</li>\n<li>Fix: Tweaks to keep the classes sub classable.</li>\n<li>Fix: Cleaned up tests.</li>\n<li>Updated requirements.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>2.0.0 (2015-12-12)</h3>\n<ul>\n<li>API completely rewritten</li>\n<li>New API extends <tt>requests</tt> internals as opposed to monkeypatching.</li>\n<li>Entire package is redesigned to be more maintainable, more modular, and more usable.</li>\n<li>Dependencies are pinned.</li>\n<li>Tests are expanded.</li>\n<li>PY26 and PY32 support is dropped, because of dependency constraints.</li>\n<li>PY35 support is added.</li>\n<li>Docs are rewritten.</li>\n<li>Move towards idiomatic code.</li>\n<li>2.0.6 Fix broken coverage, broken rst render.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.0.0 (2015-04-23)</h3>\n<ul>\n<li>First real release.</li>\n<li>Feature/ Unit test suite, very high coverage.</li>\n<li>Feature/ <tt>redislite</tt> integration.</li>\n<li>Feature/ Documentation.  <a href=\"https://cache-requests.readthedocs.org\" rel=\"nofollow\">https://cache-requests.readthedocs.org</a>.</li>\n<li>Feature/ Exposed the beefed up <tt>Memoize</tt> decorator.</li>\n<li><dl>\n<dt>Feature/ Upgraded compatibility to:</dt>\n<dd><ul>\n<li>PY26</li>\n<li>PY27</li>\n<li>PY33</li>\n<li>PY34</li>\n<li>PYPY</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Added examples and case studies.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.1.0 (2015-04-19)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1879602, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "82a6b0f33a98013b369f06604db56965", "sha256": "a844afd30b130db9a351be1daf8a3a6669b54853ac7bc72bbc23bd9b2e122cf6"}, "downloads": -1, "filename": "cache_requests-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "82a6b0f33a98013b369f06604db56965", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11052, "upload_time": "2015-04-22T22:26:47", "upload_time_iso_8601": "2015-04-22T22:26:47.350323Z", "url": "https://files.pythonhosted.org/packages/c0/21/087a97a6e409a47d23173df9c90602d2ffe6086297608e61a13df57440bc/cache_requests-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "34198207eaf07565a08b30cfbd86fff9", "sha256": "cb6173f5b033458c229d604ef066db3ca4bfb5e88c3c51d322f20c200d017e85"}, "downloads": -1, "filename": "cache_requests-0.1.0.tar.gz", "has_sig": false, "md5_digest": "34198207eaf07565a08b30cfbd86fff9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16848, "upload_time": "2015-04-22T22:26:43", "upload_time_iso_8601": "2015-04-22T22:26:43.304791Z", "url": "https://files.pythonhosted.org/packages/43/07/4914e79e861e1eb73bf192b1d1d827b211584247bfbbc19b3a77314d60bc/cache_requests-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "048fc489f05148691ce62d5bbe59d18c", "sha256": "47c6d9c728da5a4fc675535cdcc84303ba58558ea3fd4fd2a52d6963733b3a1e"}, "downloads": -1, "filename": "cache_requests-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "048fc489f05148691ce62d5bbe59d18c", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 12563, "upload_time": "2015-04-23T05:50:08", "upload_time_iso_8601": "2015-04-23T05:50:08.126354Z", "url": "https://files.pythonhosted.org/packages/16/8a/2d6ffcfa9c54701f323fad3d6144332651397cd219d033444554b5463838/cache_requests-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10e04a51ee1a6a83759d3d61857fe20f", "sha256": "bbba2a8f881cd5fea3cbda60e6551fefa82f1bbb6fcb84621a606cc8348006d9"}, "downloads": -1, "filename": "cache_requests-1.0.0.tar.gz", "has_sig": false, "md5_digest": "10e04a51ee1a6a83759d3d61857fe20f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18136, "upload_time": "2015-04-23T05:50:05", "upload_time_iso_8601": "2015-04-23T05:50:05.096191Z", "url": "https://files.pythonhosted.org/packages/ec/37/c36ecfd4f4b5af3bc7c8b25e7082a35aee59fbc323c9ff10ac7fb703be76/cache_requests-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "581cec7c29fd1ca8108a6964cb6335b8", "sha256": "f5f7d8d22eb88ce3e8653e94556b1fddd980d286d56aa5567537dc3dd51e2daf"}, "downloads": -1, "filename": "cache_requests-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "581cec7c29fd1ca8108a6964cb6335b8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15361, "upload_time": "2015-12-13T04:30:37", "upload_time_iso_8601": "2015-12-13T04:30:37.763792Z", "url": "https://files.pythonhosted.org/packages/95/97/6a344723ba97bfecfb6d7f182535e6268297997c88bbe32e81fa08dbd63a/cache_requests-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55d5dbb0e6ee6edc7f9940bf1193f18e", "sha256": "f8d5b17deebcc4964be4f676734d30946645761087f06a5753f8983d31004770"}, "downloads": -1, "filename": "cache_requests-2.0.0.tar.gz", "has_sig": false, "md5_digest": "55d5dbb0e6ee6edc7f9940bf1193f18e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25529, "upload_time": "2015-12-13T04:30:43", "upload_time_iso_8601": "2015-12-13T04:30:43.840004Z", "url": "https://files.pythonhosted.org/packages/be/c8/c0dc417766ff352ca355f847a63eeb431021ec1e3a82069e6c16524acefe/cache_requests-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "5c6054ec4b6688a80e5f9a4d1127e889", "sha256": "de845c0bc44261ca757a89b29d1fc5d7a67e7db84ad742be0fa04946fdf64c6b"}, "downloads": -1, "filename": "cache_requests-2.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5c6054ec4b6688a80e5f9a4d1127e889", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 15351, "upload_time": "2015-12-13T04:40:23", "upload_time_iso_8601": "2015-12-13T04:40:23.899554Z", "url": "https://files.pythonhosted.org/packages/b5/5e/61486bdee59ef62b5b56c0a1a8ef5bc7efd551839666eb4b049165ead554/cache_requests-2.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b83ceca2379c168e1dd25a259fee5120", "sha256": "0c49bec83c75796ef1bfee66f907e5e7159468e63f262a7e0d66fdf0ee1ef91d"}, "downloads": -1, "filename": "cache_requests-2.0.1.tar.gz", "has_sig": false, "md5_digest": "b83ceca2379c168e1dd25a259fee5120", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21273, "upload_time": "2015-12-13T04:40:15", "upload_time_iso_8601": "2015-12-13T04:40:15.677819Z", "url": "https://files.pythonhosted.org/packages/12/cf/fd28be16aad1558b8db65c97656d2e7b6de73205d481fb9c8a3dd533203f/cache_requests-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "c43f3300d8fdecb02f14be12732d09f0", "sha256": "461f4ab54fe86460a58cb88a66ae19de9e983e1661b0962454878d128e1b6095"}, "downloads": -1, "filename": "cache_requests-2.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c43f3300d8fdecb02f14be12732d09f0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15242, "upload_time": "2015-12-13T05:10:55", "upload_time_iso_8601": "2015-12-13T05:10:55.076586Z", "url": "https://files.pythonhosted.org/packages/1f/5e/f8ac64e92d522c77d71871a1f5e73476ffc1dfe6f23c278551acf5baf617/cache_requests-2.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a8e2fdeb118392ff6ef621e6048ca5b", "sha256": "fe44d7748805c04bccabb76f75e9973c7dd74ed835f1ba2aa24591897754af72"}, "downloads": -1, "filename": "cache_requests-2.0.2.tar.gz", "has_sig": false, "md5_digest": "3a8e2fdeb118392ff6ef621e6048ca5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25477, "upload_time": "2015-12-13T05:10:58", "upload_time_iso_8601": "2015-12-13T05:10:58.847529Z", "url": "https://files.pythonhosted.org/packages/31/ed/de178dc3c91b2b368b3e6539d2093626d37d2cc5d5cce4039dd6f44e51f4/cache_requests-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "1a454b1847c566cc4e75bf484eac79dd", "sha256": "8141f02dfa8bf4fbaeb3a1ac34c423302cd35a101a2f57ea35b14941df60835e"}, "downloads": -1, "filename": "cache_requests-2.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1a454b1847c566cc4e75bf484eac79dd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15239, "upload_time": "2015-12-13T06:11:48", "upload_time_iso_8601": "2015-12-13T06:11:48.667792Z", "url": "https://files.pythonhosted.org/packages/91/58/f7c21a41912c05577f5a17ea12c763749f3408bf83062b934427a4742782/cache_requests-2.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de33d31c43f285ec0f5e1494490cd781", "sha256": "b3cdc8104110af1f02721fcdac18ba47bcd219adfdfaef5219302d586fb306bf"}, "downloads": -1, "filename": "cache_requests-2.0.3.tar.gz", "has_sig": false, "md5_digest": "de33d31c43f285ec0f5e1494490cd781", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25440, "upload_time": "2015-12-13T06:11:55", "upload_time_iso_8601": "2015-12-13T06:11:55.343761Z", "url": "https://files.pythonhosted.org/packages/d9/66/fb96ef080486c8cb84e76edfc2ad9621c9d9a2375e268cbfb597a0e1ca58/cache_requests-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "b6b0e1bdf86a1768b0c9b588e1dbf551", "sha256": "b7bd402ee0b71b19979018c2298e5b7d353e74cc55ee7ebfd502529a3d2e55c7"}, "downloads": -1, "filename": "cache_requests-2.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b6b0e1bdf86a1768b0c9b588e1dbf551", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15253, "upload_time": "2015-12-13T06:20:10", "upload_time_iso_8601": "2015-12-13T06:20:10.955625Z", "url": "https://files.pythonhosted.org/packages/11/49/f37b9aa31ee08ea6a15ce4bb6e422ef9b74c24cf97a4c2624dcf139894aa/cache_requests-2.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f70a599cd463a84f756a0bc0093953e8", "sha256": "512e8ad544e92688a59b43e238626885918912945570306304a95cd406df34e9"}, "downloads": -1, "filename": "cache_requests-2.0.4.tar.gz", "has_sig": false, "md5_digest": "f70a599cd463a84f756a0bc0093953e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25447, "upload_time": "2015-12-13T06:20:19", "upload_time_iso_8601": "2015-12-13T06:20:19.362899Z", "url": "https://files.pythonhosted.org/packages/c1/5f/5a83ccde1d5ed9e49d1943eab46c831f09acdb7b6a87e8bef9b9196747d9/cache_requests-2.0.4.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "eb6c8ecb8a29712d8e4817461f543d5e", "sha256": "8f904dc5e190491a6e01fb137a8911fd1b308ffdda05c86275fd8091b7f1dddd"}, "downloads": -1, "filename": "cache_requests-2.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eb6c8ecb8a29712d8e4817461f543d5e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15396, "upload_time": "2015-12-18T05:12:19", "upload_time_iso_8601": "2015-12-18T05:12:19.561636Z", "url": "https://files.pythonhosted.org/packages/8c/90/2907af5603b9ef0a92d74de8500163d73eecee1ef2da4014a98577cf5134/cache_requests-2.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f63904be1cf53252086d1831509e5fe6", "sha256": "65295ab9be18f4eb9ad3e692a6c69e39109d463d9f3a6c7998169ba96f42d590"}, "downloads": -1, "filename": "cache_requests-2.0.5.tar.gz", "has_sig": false, "md5_digest": "f63904be1cf53252086d1831509e5fe6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26944, "upload_time": "2015-12-18T05:12:26", "upload_time_iso_8601": "2015-12-18T05:12:26.537909Z", "url": "https://files.pythonhosted.org/packages/dd/ec/292d659c00a1068e00f4061bea313c0bc92b8cea1d4cd93fb19e5221c117/cache_requests-2.0.5.tar.gz", "yanked": false}], "2.0.6": [{"comment_text": "", "digests": {"md5": "78c0a6422dcdd4454140c58db5dce857", "sha256": "0462d3881a465fe09171976959d2d25d21f42417d7c03f72c2a43d3384d61c28"}, "downloads": -1, "filename": "cache_requests-2.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "78c0a6422dcdd4454140c58db5dce857", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15350, "upload_time": "2015-12-19T03:01:54", "upload_time_iso_8601": "2015-12-19T03:01:54.650187Z", "url": "https://files.pythonhosted.org/packages/1d/52/63b19479f0ba765947669c00d722590e2892fd93dbf214fd38ae52610797/cache_requests-2.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2e0c0253dc6766a9776c5129fa16b751", "sha256": "83c23a2f2a3f64429cc559c16235faac3812de28280ad93d6ca1f7337d551fae"}, "downloads": -1, "filename": "cache_requests-2.0.6.tar.gz", "has_sig": false, "md5_digest": "2e0c0253dc6766a9776c5129fa16b751", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26967, "upload_time": "2015-12-19T03:02:01", "upload_time_iso_8601": "2015-12-19T03:02:01.752812Z", "url": "https://files.pythonhosted.org/packages/01/bb/b7b76850de212f1d79b914e4012d54501b894b4f0eded5fce2e49b743083/cache_requests-2.0.6.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "024484aab525caca2e45fb412b371571", "sha256": "45089d83fadf5404edbdf1d115150bcda35cd13776d5ba416280e10a9bf5db30"}, "downloads": -1, "filename": "cache_requests-3.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "024484aab525caca2e45fb412b371571", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15942, "upload_time": "2015-12-23T03:15:09", "upload_time_iso_8601": "2015-12-23T03:15:09.456075Z", "url": "https://files.pythonhosted.org/packages/bb/77/3331031dd18f211818b18c158ffe4d3c5a674a2e1eb4e86f4fab26827859/cache_requests-3.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6aeb838a4aba166047fdd8bad733cce4", "sha256": "065ff932e6a49ec5cc2b4844fd3013b5100ad69676f6a9890f7b6a5fb3ed5d01"}, "downloads": -1, "filename": "cache_requests-3.0.0.tar.gz", "has_sig": false, "md5_digest": "6aeb838a4aba166047fdd8bad733cce4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29904, "upload_time": "2015-12-23T03:15:15", "upload_time_iso_8601": "2015-12-23T03:15:15.397741Z", "url": "https://files.pythonhosted.org/packages/b2/04/6f4744af1c605ab5a994f1e7e6c969c055fd0ecfe6f33b299031047c20b8/cache_requests-3.0.0.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "d8e1ea027cbc3dcecc8cdd0786b2b4f6", "sha256": "39849d65a7b332998c25ae275e636e3b9c6556328cc628c71e1786f73e86a154"}, "downloads": -1, "filename": "cache_requests-4.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d8e1ea027cbc3dcecc8cdd0786b2b4f6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16631, "upload_time": "2015-12-26T04:06:15", "upload_time_iso_8601": "2015-12-26T04:06:15.014423Z", "url": "https://files.pythonhosted.org/packages/c8/7c/6ff0976e2bc80fe815377303a7a9cfc5880871532cccb2e7f6c6e398af74/cache_requests-4.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88a6691e19d9982b3ba4ed679c088afd", "sha256": "2cc29b9b0ade89e9ea6a5cb985dca3617b0da1117ae3eaf870a8f1d94272aeb9"}, "downloads": -1, "filename": "cache_requests-4.0.0.tar.gz", "has_sig": false, "md5_digest": "88a6691e19d9982b3ba4ed679c088afd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30452, "upload_time": "2015-12-26T04:06:19", "upload_time_iso_8601": "2015-12-26T04:06:19.690220Z", "url": "https://files.pythonhosted.org/packages/c1/4b/25f2cde2bd908d9bd1357e06170c4070735838cdadb664859e06d47f9a28/cache_requests-4.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d8e1ea027cbc3dcecc8cdd0786b2b4f6", "sha256": "39849d65a7b332998c25ae275e636e3b9c6556328cc628c71e1786f73e86a154"}, "downloads": -1, "filename": "cache_requests-4.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d8e1ea027cbc3dcecc8cdd0786b2b4f6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16631, "upload_time": "2015-12-26T04:06:15", "upload_time_iso_8601": "2015-12-26T04:06:15.014423Z", "url": "https://files.pythonhosted.org/packages/c8/7c/6ff0976e2bc80fe815377303a7a9cfc5880871532cccb2e7f6c6e398af74/cache_requests-4.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88a6691e19d9982b3ba4ed679c088afd", "sha256": "2cc29b9b0ade89e9ea6a5cb985dca3617b0da1117ae3eaf870a8f1d94272aeb9"}, "downloads": -1, "filename": "cache_requests-4.0.0.tar.gz", "has_sig": false, "md5_digest": "88a6691e19d9982b3ba4ed679c088afd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30452, "upload_time": "2015-12-26T04:06:19", "upload_time_iso_8601": "2015-12-26T04:06:19.690220Z", "url": "https://files.pythonhosted.org/packages/c1/4b/25f2cde2bd908d9bd1357e06170c4070735838cdadb664859e06d47f9a28/cache_requests-4.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:43 2020"}