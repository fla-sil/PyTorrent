{"info": {"author": "Janneke Janssen", "author_email": "j.janssen@lukkien.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP :: Browsers", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing"], "description": "django-testhook\n===============\n\nA Django template tag to enable testhook attributes on HTML elements.\n\n.. image:: https://travis-ci.org/jjanssen/django-testhook.svg?branch=master\n    :target: http://travis-ci.org/jjanssen/django-testhook\n.. image:: https://img.shields.io/pypi/v/django-testhook.svg\n    :target: https://pypi.python.org/pypi/django-testhook/\n.. image:: https://img.shields.io/pypi/dm/django-testhook.svg\n    :target: https://pypi.python.org/pypi/django-testhook/\n.. image:: https://img.shields.io/badge/wheel-yes-green.svg\n    :target: https://pypi.python.org/pypi/django-testhook/\n.. image:: https://img.shields.io/pypi/l/django-testhook.svg\n    :target: https://pypi.python.org/pypi/django-testhook/\n.. image:: https://img.shields.io/pypi/pyversions/Django.svg\n    :target: https://pypi.python.org/pypi/django-testhook/\n.. image:: https://coveralls.io/repos/jjanssen/django-testhook/badge.svg?branch=master\n    :target: https://coveralls.io/github/jjanssen/django-testhook?branch=master\n\nAbout django-testhook\n---------------------\n\nThe django-testhook provides a template tag to generate\n``data-testhook-id`` for HTML templates.\n\nThis can be useful for automated testing (for eg:\n`Webdriver.IO <http://www.webdriver.io>`__) to maintain a fixed entry\npoint, rather than having a automated test that breaks by just renaming\na CSS class or an element which can require you to re-evaluate an\nXPath-selector.\n\nRequirements\n------------\n\nDjango 1.8.x or greater, Python 2.7 or greater.\n\nInstallation\n------------\n\nInstall django-testhook with pip:\n\n::\n\n    $ pip install django-testhook\n\nConfiguration\n-------------\n\nConfiguring django-testhook\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAdd the following to your settings file:\n\n.. code:: python\n\n    INSTALLED_APPS += (\n        'testhook',\n    )\n\nAvailable settings\n~~~~~~~~~~~~~~~~~~\n\nBy default the rendering of testhook data attributes is enabled. If you\nare in the scenario you want to disable it for a certain environment\njust configure it to ``False``.\n\n.. code:: python\n\n    TESTHOOK_ENABLED = False\n\nUsage\n-----\n\nBasic usage\n~~~~~~~~~~~\n\nWithin your HTML template you must load the testhook tag in order to use\nit. The testhook tag only requires a single argument in order to return\na result.\n\n.. code:: html\n\n    {% load testhook %}\n\n    <div class=\"my-elem\" {% testhook \"test-elem\" %}>\n        I want to test this\n    </div>\n\nThis will output to the following:\n\n.. code:: html\n\n    <div class=\"my-elem\" data-testhook-id=\"test-elem\">\n        I want to test this\n    </div>\n\nObject Usage\n~~~~~~~~~~~~\n\nFor dynamic elements there is also the option to pass arguments. For eg:\ngiven I have a product in a shopping basket with a primary key and a\nslug I could use it like this:\n\n.. code:: html\n\n    <div class=\"item\" {% testhook \"basket\" product.id product.slug %}>\n        {{ product.title }}\n    </div>\n\nIt will output to:\n\n.. code:: html\n\n    <div class=\"item\" data-testhook-id=\"basket-1-product-slug\">\n        A product title\n    </div>", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jjanssen/django-testhook", "keywords": "templatetag testhook django", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "django-testhook", "package_url": "https://pypi.org/project/django-testhook/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-testhook/", "project_urls": {"Homepage": "http://github.com/jjanssen/django-testhook"}, "release_url": "https://pypi.org/project/django-testhook/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "A Django template tag to enable testhook attributes on HTML elements.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Django template tag to enable testhook attributes on HTML elements.</p>\n<a href=\"http://travis-ci.org/jjanssen/django-testhook\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jjanssen/django-testhook.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e4130b1cadf95b21ec5f0e36eb63e44f494e08e/68747470733a2f2f7472617669732d63692e6f72672f6a6a616e7373656e2f646a616e676f2d74657374686f6f6b2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/django-testhook/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/django-testhook.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e71aab9bccbe7577c8d2f740ce4d019c51637058/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d74657374686f6f6b2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-testhook/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/dm/django-testhook.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aea27aa983224f2ca307d9601f90989b61dc0967/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f646a616e676f2d74657374686f6f6b2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-testhook/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/wheel-yes-green.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/66664e8566dcaf9e28a3e4690ff173a6d8c909c0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f776865656c2d7965732d677265656e2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-testhook/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/django-testhook.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ee60caa8f03eb386fe2870880939ef869ceaf27/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f646a616e676f2d74657374686f6f6b2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-testhook/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/Django.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/10dfd3abcb9a0ba765e14beb5116c17f39ed86b2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f446a616e676f2e737667\"></a>\n<a href=\"https://coveralls.io/github/jjanssen/django-testhook?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/jjanssen/django-testhook/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/087dc9f6415805c894e4831de8cc30da7e4b7fde/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6a6a616e7373656e2f646a616e676f2d74657374686f6f6b2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"about-django-testhook\">\n<h2>About django-testhook</h2>\n<p>The django-testhook provides a template tag to generate\n<tt><span class=\"pre\">data-testhook-id</span></tt> for HTML templates.</p>\n<p>This can be useful for automated testing (for eg:\n<a href=\"http://www.webdriver.io\" rel=\"nofollow\">Webdriver.IO</a>) to maintain a fixed entry\npoint, rather than having a automated test that breaks by just renaming\na CSS class or an element which can require you to re-evaluate an\nXPath-selector.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Django 1.8.x or greater, Python 2.7 or greater.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install django-testhook with pip:</p>\n<pre>$ pip install django-testhook\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<div id=\"configuring-django-testhook\">\n<h3>Configuring django-testhook</h3>\n<p>Add the following to your settings file:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">+=</span> <span class=\"p\">(</span>\n    <span class=\"s1\">'testhook'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"available-settings\">\n<h3>Available settings</h3>\n<p>By default the rendering of testhook data attributes is enabled. If you\nare in the scenario you want to disable it for a certain environment\njust configure it to <tt>False</tt>.</p>\n<pre><span class=\"n\">TESTHOOK_ENABLED</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"basic-usage\">\n<h3>Basic usage</h3>\n<p>Within your HTML template you must load the testhook tag in order to use\nit. The testhook tag only requires a single argument in order to return\na result.</p>\n<pre>{% load testhook %}\n\n<span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"my-elem\"</span> <span class=\"err\">{%</span> <span class=\"na\">testhook</span> <span class=\"err\">\"</span><span class=\"na\">test-elem</span><span class=\"err\">\"</span> <span class=\"err\">%}</span><span class=\"p\">&gt;</span>\n    I want to test this\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<p>This will output to the following:</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"my-elem\"</span> <span class=\"na\">data-testhook-id</span><span class=\"o\">=</span><span class=\"s\">\"test-elem\"</span><span class=\"p\">&gt;</span>\n    I want to test this\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n<div id=\"object-usage\">\n<h3>Object Usage</h3>\n<p>For dynamic elements there is also the option to pass arguments. For eg:\ngiven I have a product in a shopping basket with a primary key and a\nslug I could use it like this:</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"item\"</span> <span class=\"err\">{%</span> <span class=\"na\">testhook</span> <span class=\"err\">\"</span><span class=\"na\">basket</span><span class=\"err\">\"</span> <span class=\"na\">product</span><span class=\"err\">.</span><span class=\"na\">id</span> <span class=\"na\">product</span><span class=\"err\">.</span><span class=\"na\">slug</span> <span class=\"err\">%}</span><span class=\"p\">&gt;</span>\n    {{ product.title }}\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<p>It will output to:</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"item\"</span> <span class=\"na\">data-testhook-id</span><span class=\"o\">=</span><span class=\"s\">\"basket-1-product-slug\"</span><span class=\"p\">&gt;</span>\n    A product title\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2880750, "releases": {"1.0.0": [], "1.0.1": [{"comment_text": "", "digests": {"md5": "1a747e616b75c227cb905753421a5c09", "sha256": "86353cbc172019685641af32979ba635d14a7c5933662d27f0c1c9d22e0f863f"}, "downloads": -1, "filename": "django-testhook-1.0.1.tar.gz", "has_sig": false, "md5_digest": "1a747e616b75c227cb905753421a5c09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7918, "upload_time": "2016-08-16T09:46:00", "upload_time_iso_8601": "2016-08-16T09:46:00.372820Z", "url": "https://files.pythonhosted.org/packages/7c/c9/c1e8dcaba502871ed918f1f704fbb9a795df4a0606681007bc3a3c2f9555/django-testhook-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "5c41f2168e2212d1173f410c8b5a7419", "sha256": "946c01590431961ca6d65b2dc005c1df34f23d73cdb4e25c0bc57287859750f6"}, "downloads": -1, "filename": "django-testhook-1.0.2.tar.gz", "has_sig": false, "md5_digest": "5c41f2168e2212d1173f410c8b5a7419", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7893, "upload_time": "2017-05-17T14:54:51", "upload_time_iso_8601": "2017-05-17T14:54:51.826828Z", "url": "https://files.pythonhosted.org/packages/bf/67/050dad0b5cdb0034de7e2aba27d12ed68209137d37961e6075aea1baecf5/django-testhook-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5c41f2168e2212d1173f410c8b5a7419", "sha256": "946c01590431961ca6d65b2dc005c1df34f23d73cdb4e25c0bc57287859750f6"}, "downloads": -1, "filename": "django-testhook-1.0.2.tar.gz", "has_sig": false, "md5_digest": "5c41f2168e2212d1173f410c8b5a7419", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7893, "upload_time": "2017-05-17T14:54:51", "upload_time_iso_8601": "2017-05-17T14:54:51.826828Z", "url": "https://files.pythonhosted.org/packages/bf/67/050dad0b5cdb0034de7e2aba27d12ed68209137d37961e6075aea1baecf5/django-testhook-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:33 2020"}