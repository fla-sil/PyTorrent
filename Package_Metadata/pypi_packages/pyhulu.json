{"info": {"author": "truedread", "author_email": "truedread11@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Utilities"], "description": "# pyhulu\n[![Build Status](https://travis-ci.com/truedread/pyhulu.svg?branch=master)](https://travis-ci.com/truedread/pyhulu)\n[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n\nPython library for interacting with the E2E encrypted Hulu API\n\n# Usage\n\nFirst, initialize the `HuluClient` class with a device code, device key, and cookies:\n\n```python\nclient = pyhulu.HuluClient(device_code, device_key, cookies)\n```\n\n`device_code` is a three-digit string or integer (doesn't matter) denoting the device you will make requests as.\n\n`device_key` is a 16-byte AES key that corresponds to the device code you're using. This is used to decrypt the device config response.\n\n`cookies` can either be a cookie jar object or a dict of cookie key / value pairs. This is passed to the `requests` library, so whatever it takes will work. Examples here: http://docs.python-requests.org/en/master/user/quickstart/#cookies.\n\nWith the initialized `client` object, you can use the `load_playlist()` method:\n\n```python\nclient.load_playlist(video_id)\n```\n\n`video_id` is either a string or integer denoting the video ID to request a playlist for. This is NOT the ID in the `/watch/` URL! If you view the page source of a `/watch/` page, you'll find `\\\"content_id\\\"` which has the actual video ID used by the API.\n\nThis method returns a dict of the playlist response, which contains stream and license URLs.\n\n# Device Codes and Keys\n\n### PC\n- Device code: `159`\n- Device key (hex): `6ebfc84f3c304217b20fd9a66cb5957f`\n\n# Example Code\n\n```python\nimport pyhulu\nfrom http.cookiejar import MozillaCookieJar\n\ncj = MozillaCookieJar('cookies.txt')\ncj.load()\n\nclient = pyhulu.HuluClient('159', bytes.fromhex('6ebfc84f3c304217b20fd9a66cb5957f'), cj)\nprint(client.load_playlist(61085964))\n```\n\n# Installation\n\nTo install, either clone the repository and run `python setup.py install` or run `pip install pyhulu`.\n\n# To-Do\n\n- [x] Add unit tests\n- [x] Add to PyPI\n- [x] Add documentation\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/truedread/pyhulu", "keywords": "", "license": "GNU GPLv3", "maintainer": "", "maintainer_email": "", "name": "pyhulu", "package_url": "https://pypi.org/project/pyhulu/", "platform": "", "project_url": "https://pypi.org/project/pyhulu/", "project_urls": {"Homepage": "https://github.com/truedread/pyhulu"}, "release_url": "https://pypi.org/project/pyhulu/1.1.2/", "requires_dist": ["pycryptodomex", "requests"], "requires_python": "", "summary": "Python library for interacting with the E2E encrypted Hulu API", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyhulu</h1>\n<p><a href=\"https://travis-ci.com/truedread/pyhulu\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/30ad5c500246f04635bdd6537d17b7ad76483b06/68747470733a2f2f7472617669732d63692e636f6d2f7472756564726561642f707968756c752e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://www.gnu.org/licenses/gpl-3.0\" rel=\"nofollow\"><img alt=\"License: GPL v3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b8e7bd0619920735e058483fd428ecbeb267eb7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c25323076332d626c75652e737667\"></a></p>\n<p>Python library for interacting with the E2E encrypted Hulu API</p>\n<h1>Usage</h1>\n<p>First, initialize the <code>HuluClient</code> class with a device code, device key, and cookies:</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">pyhulu</span><span class=\"o\">.</span><span class=\"n\">HuluClient</span><span class=\"p\">(</span><span class=\"n\">device_code</span><span class=\"p\">,</span> <span class=\"n\">device_key</span><span class=\"p\">,</span> <span class=\"n\">cookies</span><span class=\"p\">)</span>\n</pre>\n<p><code>device_code</code> is a three-digit string or integer (doesn't matter) denoting the device you will make requests as.</p>\n<p><code>device_key</code> is a 16-byte AES key that corresponds to the device code you're using. This is used to decrypt the device config response.</p>\n<p><code>cookies</code> can either be a cookie jar object or a dict of cookie key / value pairs. This is passed to the <code>requests</code> library, so whatever it takes will work. Examples here: <a href=\"http://docs.python-requests.org/en/master/user/quickstart/#cookies\" rel=\"nofollow\">http://docs.python-requests.org/en/master/user/quickstart/#cookies</a>.</p>\n<p>With the initialized <code>client</code> object, you can use the <code>load_playlist()</code> method:</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">load_playlist</span><span class=\"p\">(</span><span class=\"n\">video_id</span><span class=\"p\">)</span>\n</pre>\n<p><code>video_id</code> is either a string or integer denoting the video ID to request a playlist for. This is NOT the ID in the <code>/watch/</code> URL! If you view the page source of a <code>/watch/</code> page, you'll find <code>\\\"content_id\\\"</code> which has the actual video ID used by the API.</p>\n<p>This method returns a dict of the playlist response, which contains stream and license URLs.</p>\n<h1>Device Codes and Keys</h1>\n<h3>PC</h3>\n<ul>\n<li>Device code: <code>159</code></li>\n<li>Device key (hex): <code>6ebfc84f3c304217b20fd9a66cb5957f</code></li>\n</ul>\n<h1>Example Code</h1>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyhulu</span>\n<span class=\"kn\">from</span> <span class=\"nn\">http.cookiejar</span> <span class=\"kn\">import</span> <span class=\"n\">MozillaCookieJar</span>\n\n<span class=\"n\">cj</span> <span class=\"o\">=</span> <span class=\"n\">MozillaCookieJar</span><span class=\"p\">(</span><span class=\"s1\">'cookies.txt'</span><span class=\"p\">)</span>\n<span class=\"n\">cj</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">()</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">pyhulu</span><span class=\"o\">.</span><span class=\"n\">HuluClient</span><span class=\"p\">(</span><span class=\"s1\">'159'</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'6ebfc84f3c304217b20fd9a66cb5957f'</span><span class=\"p\">),</span> <span class=\"n\">cj</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">load_playlist</span><span class=\"p\">(</span><span class=\"mi\">61085964</span><span class=\"p\">))</span>\n</pre>\n<h1>Installation</h1>\n<p>To install, either clone the repository and run <code>python setup.py install</code> or run <code>pip install pyhulu</code>.</p>\n<h1>To-Do</h1>\n<ul>\n<li>[x] Add unit tests</li>\n<li>[x] Add to PyPI</li>\n<li>[x] Add documentation</li>\n</ul>\n\n          </div>"}, "last_serial": 6364604, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "5533a3c74ce1a337e610cd81810602cb", "sha256": "0cc4afe1f7263d7c3569528b0209f0c69405ad93876c74f49a39e383fbe329ff"}, "downloads": -1, "filename": "pyhulu-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5533a3c74ce1a337e610cd81810602cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4312, "upload_time": "2018-08-13T22:43:41", "upload_time_iso_8601": "2018-08-13T22:43:41.774665Z", "url": "https://files.pythonhosted.org/packages/53/6b/a5640fc8346c932fbd9920c414cae3fe2c52f4dd72424ab9a8f73faa4c47/pyhulu-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e7dc4595315d133dd9bcc7a499a5d9a", "sha256": "3123ee84a8fd15d787945aa450b704b25e8e3c5cbec8198eaa74dfda59c54660"}, "downloads": -1, "filename": "pyhulu-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0e7dc4595315d133dd9bcc7a499a5d9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3602, "upload_time": "2018-08-13T22:43:43", "upload_time_iso_8601": "2018-08-13T22:43:43.069711Z", "url": "https://files.pythonhosted.org/packages/ae/7d/b77d3cf5fc8f0471d4a6f65b2f2a77f96543df198d5d5760074dc79a1daf/pyhulu-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "1fde20ea5b0c587b05f2d08d9f8ba3fe", "sha256": "832972b62d4e0d11be7d6862159992a2efd45e554c577aea6fe51f86db04f549"}, "downloads": -1, "filename": "pyhulu-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1fde20ea5b0c587b05f2d08d9f8ba3fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4789, "upload_time": "2018-08-15T07:24:19", "upload_time_iso_8601": "2018-08-15T07:24:19.169350Z", "url": "https://files.pythonhosted.org/packages/2a/42/d9179cf50388fe826705d116cf9ea67123b3737f8a7765fed7f91532646c/pyhulu-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23e2167c2971efa345daae93929b9e3a", "sha256": "699886160d1e3ccbd5e7a3205a16ed76f441a6118e2e3dd1b6620126746f120b"}, "downloads": -1, "filename": "pyhulu-1.1.0.tar.gz", "has_sig": false, "md5_digest": "23e2167c2971efa345daae93929b9e3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3983, "upload_time": "2018-08-15T07:24:20", "upload_time_iso_8601": "2018-08-15T07:24:20.144622Z", "url": "https://files.pythonhosted.org/packages/eb/b3/d0998a4d5af5009318c42b90ea68c45ff88f4fbdc2d5bbbc27b50b3d8e47/pyhulu-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "4d35f66ce8e31ad5903155fe0fe329d5", "sha256": "7d468dccd8da5aeabad2bcf40a1e7aed35cd6e491b06bc96f372a2f78b402a3f"}, "downloads": -1, "filename": "pyhulu-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4d35f66ce8e31ad5903155fe0fe329d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17103, "upload_time": "2019-12-27T08:26:27", "upload_time_iso_8601": "2019-12-27T08:26:27.322785Z", "url": "https://files.pythonhosted.org/packages/1b/a4/bd1d6bee1b73eb82eb2d29cfc6145aa17fdbb4a52bb5a079878c5d2719ad/pyhulu-1.1.1-py3-none-any.whl", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "7cca80e77d56dc83d890c2f9248d8334", "sha256": "b42aaf2c976d00b7cc562de33a2302c420e04cf8f4c2d9803ca8b2baf8f9ac8f"}, "downloads": -1, "filename": "pyhulu-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7cca80e77d56dc83d890c2f9248d8334", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17108, "upload_time": "2019-12-27T09:18:27", "upload_time_iso_8601": "2019-12-27T09:18:27.771100Z", "url": "https://files.pythonhosted.org/packages/31/10/9d44b07c299093cdf292eeed21bd2cde3126775caa7041eeb307fb92331f/pyhulu-1.1.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7cca80e77d56dc83d890c2f9248d8334", "sha256": "b42aaf2c976d00b7cc562de33a2302c420e04cf8f4c2d9803ca8b2baf8f9ac8f"}, "downloads": -1, "filename": "pyhulu-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7cca80e77d56dc83d890c2f9248d8334", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17108, "upload_time": "2019-12-27T09:18:27", "upload_time_iso_8601": "2019-12-27T09:18:27.771100Z", "url": "https://files.pythonhosted.org/packages/31/10/9d44b07c299093cdf292eeed21bd2cde3126775caa7041eeb307fb92331f/pyhulu-1.1.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:04:16 2020"}