{"info": {"author": "Sean McLemon", "author_email": "sean.mclemon@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "xsms\n====\n\nA simple SMS client written in Python + Tkinter which uses the em73xx\nlibrary. Originally written for my Thinkpad X250 (which uses this chip)\nit was mainly written for use with xmobar - with a text-mode summary so\nyou can quickly see any unread messages, and a lightweight GUI to read\nand send messages.\n\nTODO\n----\n\n-  clean-up the UI, make it match the xmonad style I have (using ttk\n   style in xsms/style.py)\n-  reply, mark as [un]read, delete/archive functionality\n\nInstall\n-------\n\nEither retrieve from pypi using pip:\n\n::\n\n    $ pip install xsms\n\nor clone this repo, and install using ``setup.py``:\n\n::\n\n    $ git clone https://github.com/smcl/xsms\n    $ cd xsms\n    $ python setup.py install\n\nUsing\n-----\n\nOnce xsms is installed you can either launch it standalone ...\n\n::\n\n    $ python -m xsms --device=/dev/ttyACM0\n\n... or add it to xmobarrc, like the below (which takes advantage of the\nability to specify the font via tags to easily get some icons from Font\nAwesome):\n\n::\n\n      -- assumes you have Font Awesome installed and used here:\n      -- additionalFonts = [\"xft:FontAwesome-10\"],\n      Run Com \"/usr/bin/python\" [ \"-m\", \"xsms\", \"-d\", \"/dev/ttyACM0\", \"-p\", \"1234\", \"-r\", \"<fn=1>\uf003</fn>\", \"-u\", \"<fn=1>\uf0e0</fn> %d\" ] \"xsms\" 600,\n\nThis will result in an xmobar entry like the below:\n\n.. figure:: xsms-xmobar.png?raw=true\n   :alt: xsms-xmobar.png\n\n   xsms-xmobar.png\n\n... and if you want to be able to click the icon to raise the GUI, you\ncan:\n\n::\n\n      template = \"%StdinReader% }{ ... stuff ... <action=`python -m xsms -g -d /dev/ttyACM0 -p 1234`>%xsms%</action> ... \"\n\n.. figure:: xsms-inbox.png?raw=true\n   :alt: xsms-inbox.png\n\n   xsms-inbox.png\n\nFor a quick reference of the switches and parameters supported, invoke\n``python -m xms --help``:\n\n::\n\n    $ python -m xsms --help\n    usage: __main__.py [-h] [-d DEVICE] [-g] [-p PIN] [-r READ_FORMAT]\n                       [-u UNREAD_FORMAT]\n\n    xsms - an sms client for linux systems with an em73xx modem\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -d DEVICE, --device DEVICE\n      -g, --gui\n      -p PIN, --pin PIN\n      -r READ_FORMAT, --read_format READ_FORMAT\n      -u UNREAD_FORMAT, --unread_format UNREAD_FORMAT\n\nProblems\n--------\n\nIf you've having a problem like the below...\n\n::\n\n    $ python -m xsms --device /dev/ttyACM0 --pin 1234\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\n          \"__main__\", fname, loader, pkg_name)\n      File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n          exec code in run_globals\n      File \"/home/sean/dev/py/xsms/xsms/__main__.py\", line 63, in <module>\n          modem = Modem(args.device, pin=args.pin)\n      File \"/usr/local/lib/python2.7/dist-packages/em73xx-0.5-py2.7.egg/em73xx/modem.py\", line 23, in __init__\n    module>\n          self.device = serial.Serial(dev, bps, timeout=1)\n      File \"/usr/lib/python2.7/dist-packages/serial/serialutil.py\", line 182, in __init__\n          self.open()\n      File \"/usr/lib/python2.7/dist-packages/serial/serialposix.py\", line 247, in open\n          raise SerialException(msg.errno, \"could not open port {}: {}\".format(self._port, msg))\n    serial.serialutil.SerialException: [Errno 16] could not open port /dev/ttyACM0: [Errno 16] Device or resource busy: '/dev/ttyACM0'\n\n... then it's possible that the ModemManager service is accessing the\ndevice already. It's not currently possible to use em73xx together with\nthe modem. You can kill it off and retry:\n\n::\n\n    $ sudo systemctl stop ModemManager\n    $ python -m xsms --device /dev/ttyACM0 --pin 1234\n    5", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/smcl/xsms/tarball/0.6", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smcl/xsms", "keywords": "thinkpad,em7345,em73xx,sms,xmonad,xmobar", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "xsms", "package_url": "https://pypi.org/project/xsms/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/xsms/", "project_urls": {"Download": "https://github.com/smcl/xsms/tarball/0.6", "Homepage": "https://github.com/smcl/xsms"}, "release_url": "https://pypi.org/project/xsms/0.6/", "requires_dist": null, "requires_python": null, "summary": "lightweight SMS reader/composer for systems with access to a Sierra em73xx modem (like the Thinkpad X250), with simple xmobar integration", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple SMS client written in Python + Tkinter which uses the em73xx\nlibrary. Originally written for my Thinkpad X250 (which uses this chip)\nit was mainly written for use with xmobar - with a text-mode summary so\nyou can quickly see any unread messages, and a lightweight GUI to read\nand send messages.</p>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>clean-up the UI, make it match the xmonad style I have (using ttk\nstyle in xsms/style.py)</li>\n<li>reply, mark as [un]read, delete/archive functionality</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Either retrieve from pypi using pip:</p>\n<pre>$ pip install xsms\n</pre>\n<p>or clone this repo, and install using <tt>setup.py</tt>:</p>\n<pre>$ git clone https://github.com/smcl/xsms\n$ cd xsms\n$ python setup.py install\n</pre>\n</div>\n<div id=\"using\">\n<h2>Using</h2>\n<p>Once xsms is installed you can either launch it standalone \u2026</p>\n<pre>$ python -m xsms --device=/dev/ttyACM0\n</pre>\n<p>\u2026 or add it to xmobarrc, like the below (which takes advantage of the\nability to specify the font via tags to easily get some icons from Font\nAwesome):</p>\n<pre>-- assumes you have Font Awesome installed and used here:\n-- additionalFonts = [\"xft:FontAwesome-10\"],\nRun Com \"/usr/bin/python\" [ \"-m\", \"xsms\", \"-d\", \"/dev/ttyACM0\", \"-p\", \"1234\", \"-r\", \"&lt;fn=1&gt;\uf003&lt;/fn&gt;\", \"-u\", \"&lt;fn=1&gt;\uf0e0&lt;/fn&gt; %d\" ] \"xsms\" 600,\n</pre>\n<p>This will result in an xmobar entry like the below:</p>\n<div>\n<img alt=\"xsms-xmobar.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/afafb3aa9afa88070e3457e999391ddca25534d1/78736d732d786d6f6261722e706e673f7261773d74727565\">\n<p>xsms-xmobar.png</p>\n</div>\n<p>\u2026 and if you want to be able to click the icon to raise the GUI, you\ncan:</p>\n<pre>template = \"%StdinReader% }{ ... stuff ... &lt;action=`python -m xsms -g -d /dev/ttyACM0 -p 1234`&gt;%xsms%&lt;/action&gt; ... \"\n</pre>\n<div>\n<img alt=\"xsms-inbox.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0bd99eef8e5d6929875aa178b770f27af06af0d9/78736d732d696e626f782e706e673f7261773d74727565\">\n<p>xsms-inbox.png</p>\n</div>\n<p>For a quick reference of the switches and parameters supported, invoke\n<tt>python <span class=\"pre\">-m</span> xms <span class=\"pre\">--help</span></tt>:</p>\n<pre>$ python -m xsms --help\nusage: __main__.py [-h] [-d DEVICE] [-g] [-p PIN] [-r READ_FORMAT]\n                   [-u UNREAD_FORMAT]\n\nxsms - an sms client for linux systems with an em73xx modem\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d DEVICE, --device DEVICE\n  -g, --gui\n  -p PIN, --pin PIN\n  -r READ_FORMAT, --read_format READ_FORMAT\n  -u UNREAD_FORMAT, --unread_format UNREAD_FORMAT\n</pre>\n</div>\n<div id=\"problems\">\n<h2>Problems</h2>\n<p>If you\u2019ve having a problem like the below\u2026</p>\n<pre>$ python -m xsms --device /dev/ttyACM0 --pin 1234\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\n      \"__main__\", fname, loader, pkg_name)\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n      exec code in run_globals\n  File \"/home/sean/dev/py/xsms/xsms/__main__.py\", line 63, in &lt;module&gt;\n      modem = Modem(args.device, pin=args.pin)\n  File \"/usr/local/lib/python2.7/dist-packages/em73xx-0.5-py2.7.egg/em73xx/modem.py\", line 23, in __init__\nmodule&gt;\n      self.device = serial.Serial(dev, bps, timeout=1)\n  File \"/usr/lib/python2.7/dist-packages/serial/serialutil.py\", line 182, in __init__\n      self.open()\n  File \"/usr/lib/python2.7/dist-packages/serial/serialposix.py\", line 247, in open\n      raise SerialException(msg.errno, \"could not open port {}: {}\".format(self._port, msg))\nserial.serialutil.SerialException: [Errno 16] could not open port /dev/ttyACM0: [Errno 16] Device or resource busy: '/dev/ttyACM0'\n</pre>\n<p>\u2026 then it\u2019s possible that the ModemManager service is accessing the\ndevice already. It\u2019s not currently possible to use em73xx together with\nthe modem. You can kill it off and retry:</p>\n<pre>$ sudo systemctl stop ModemManager\n$ python -m xsms --device /dev/ttyACM0 --pin 1234\n5\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2445261, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6212cff14c206a33d0388e321f024522", "sha256": "cb79c9f279e44851599a7c2201aef9a5585ee77dc5da20b30dd6f2be680dd37e"}, "downloads": -1, "filename": "xsms-0.1.tar.gz", "has_sig": false, "md5_digest": "6212cff14c206a33d0388e321f024522", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2492, "upload_time": "2016-10-24T21:40:03", "upload_time_iso_8601": "2016-10-24T21:40:03.811451Z", "url": "https://files.pythonhosted.org/packages/61/f8/333da774c6ea75f059be560650801114dca6c65bd41cef66346d8ed263c6/xsms-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "d9b5ccf91c376b9a260b604d1e94bd33", "sha256": "b92bc261a9c8c7f212964508a3ed50efd3c60b9788f1e6ba153b529180be52d9"}, "downloads": -1, "filename": "xsms-0.2.tar.gz", "has_sig": false, "md5_digest": "d9b5ccf91c376b9a260b604d1e94bd33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3165, "upload_time": "2016-10-27T20:46:57", "upload_time_iso_8601": "2016-10-27T20:46:57.861841Z", "url": "https://files.pythonhosted.org/packages/b7/75/1307c5934e8be02a4bfb2f9099cfa5e1d904d667aff34367bcb8f7abd21d/xsms-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "33b59a85d2cb0bb7bcb0cedb418bd864", "sha256": "7a4a21690f58f14d0c7a832d2749d184acebc36b6e2fbe3ad5e3c1d44b170f7f"}, "downloads": -1, "filename": "xsms-0.3.tar.gz", "has_sig": false, "md5_digest": "33b59a85d2cb0bb7bcb0cedb418bd864", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4551, "upload_time": "2016-10-29T11:30:16", "upload_time_iso_8601": "2016-10-29T11:30:16.837758Z", "url": "https://files.pythonhosted.org/packages/f5/26/795207e23177f6e0a6f3f87f3c3dbe49d523f8fd2722dac5b79f6fd8a148/xsms-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "9623e83dd2e0e25fd4f20e747a34ee47", "sha256": "2ea22b37a476ebbfd73399858b6c4dcc849dc2c9d2e60b66055a00c1f75f04e7"}, "downloads": -1, "filename": "xsms-0.4.tar.gz", "has_sig": false, "md5_digest": "9623e83dd2e0e25fd4f20e747a34ee47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6272, "upload_time": "2016-10-30T16:42:03", "upload_time_iso_8601": "2016-10-30T16:42:03.562971Z", "url": "https://files.pythonhosted.org/packages/5a/18/a624bf756d92349cad4c391dbab4b023969a9a22888039b36bdd49032b1b/xsms-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "585e66e69b38eab8e7b6db2bdf607ffc", "sha256": "c76aa9a3adffb4c2269ff3723ee2449e0efa089bb79a5401a91a155360cd3ab0"}, "downloads": -1, "filename": "xsms-0.5.tar.gz", "has_sig": false, "md5_digest": "585e66e69b38eab8e7b6db2bdf607ffc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6754, "upload_time": "2016-11-05T11:05:10", "upload_time_iso_8601": "2016-11-05T11:05:10.039779Z", "url": "https://files.pythonhosted.org/packages/eb/16/3c8b55a4d227122bff2362c9bceadc184ff7562395a69f14f21792ecacdb/xsms-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "adc89c3b6fa6ef9bcda29dc519760921", "sha256": "7ef6f52c6422b5d3148517711af410cd792fa8fc2eca514cc29e93430a813d42"}, "downloads": -1, "filename": "xsms-0.6.tar.gz", "has_sig": false, "md5_digest": "adc89c3b6fa6ef9bcda29dc519760921", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6787, "upload_time": "2016-11-06T10:42:29", "upload_time_iso_8601": "2016-11-06T10:42:29.903599Z", "url": "https://files.pythonhosted.org/packages/4d/bb/f1d77452da192f3f3bae0bc5b12bb6ff017f12d7a393917cba5a0a6b7c49/xsms-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "adc89c3b6fa6ef9bcda29dc519760921", "sha256": "7ef6f52c6422b5d3148517711af410cd792fa8fc2eca514cc29e93430a813d42"}, "downloads": -1, "filename": "xsms-0.6.tar.gz", "has_sig": false, "md5_digest": "adc89c3b6fa6ef9bcda29dc519760921", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6787, "upload_time": "2016-11-06T10:42:29", "upload_time_iso_8601": "2016-11-06T10:42:29.903599Z", "url": "https://files.pythonhosted.org/packages/4d/bb/f1d77452da192f3f3bae0bc5b12bb6ff017f12d7a393917cba5a0a6b7c49/xsms-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:24:23 2020"}