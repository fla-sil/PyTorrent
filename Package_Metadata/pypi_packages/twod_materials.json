{"info": {"author": "Michael Ashton", "author_email": "mashton@ufl.edu", "bugtrack_url": null, "classifiers": [], "description": "[![Build Status](https://travis-ci.org/ashtonmv/twod_materials.svg?branch=master)](https://travis-ci.org/ashtonmv/twod_materials)\n[![Coverage](https://codecov.io/gh/ashtonmv/twod_materials/coverage.svg?branch=master)](https://codecov.io/gh/ashtonmv/twod_materials)\n\n<img src=\"https://s3.amazonaws.com/mashton/twod_materials_logo.png\" alt=\"Drawing\" width=\"200\"/>\n\nAbout twod_materials\n====================\n\nThe official documentation for `twod_materials`, which includes a pretty\ncomprehensive set of tutorials, can be found\n[here](https://pythonhosted.org/twod_materials/).\n\nThe [wiki pages](https://github.com/ashtonmv/twod_materials/wiki) contain the\nunofficial but still well-maintained documentation for `twod_materials`,\nincluding the tutorials.\n\n# Overview #\n\n`twod_materials` is a library of functions that I've used in my research on\ndiscovering and characterizing 2D materials. Some of them I have used thousands\nof times, and others I have used less than five times. The functions in\n`twod_materials` have been designed with user-friendliness as a priority,\nwhich occasionally comes at the expense of flexibility. For example, some of the\npost-processing functions will assume you have used a certain directory\nstructure when organizing your calculations. The goal here was not to be\nrestrictive, but to be streamlined.\n\n# Installation and setup #\n\nThe latest stable release can be installed with ``pip``:\n```bash\npip install numpy\npip install twod_materials\n```\n\nAlternatively, the very latest (no promises) version of `twod_materials` can be\ninstalled by cloning this repository. Once you've cloned it\non your system, run `pip install numpy` and then\n`pip install -r requirements.txt` to install its dependencies. You should then\nadd its location to your system's `$PYTHONPATH` so you can import its\nfunctions from anywhere. There are a few ways to do this, including adding the\nfollowing line to your `~/.bashrc` file:\n```\n  export PYTHONPATH=$PYTHONPATH:/path/to/twod_materials  # obviously change this\n```\nEdit config.yaml with your system's settings, following the template:\n```\n  mp_api: your_materials_project_api_key\n  normal_binary: path_to_normal_vasp_executable\n  twod_binary: path_to_twod_vasp_executable\n  potentials: path_to_your_vasp_potentials\n  queue_system: slurm_or_pbs\n```\nand then copy or move it to your home directory (~).\n\n# How the package is structured #\n\nThere are five mature modules in `twod_materials`: `stability`,\n`electronic_structure`, `pourbaix`, `friction`, and `intercalation`.\nThe `magnetism` module is, for now, still in its infancy. The `utils` module\nis basically just a library of helper functions used throughout the other\npackages.\n\nEach of these modules has two submodules: `startup` and `analysis`. For\nmost modules, `startup` contains functions that set up and submit VASP\ncalculations by interacting with your machine's queue system (PBS or SLURM). It\nmight be helpful to think of the `startup` submodules as pre-processing tools.\nThe `analysis` submodules, then, contain post-processing functions. These\npost-processing functions can be grouped into two main categories: functions for\nanalyzing data and functions for plotting it. All plotting functions use\n`matplotlib`.\n\nThroughout the package, there are a few configuration files that for the most\npart don't need to be changed (as opposed to config.yaml, which does):\npotcar_symbols.yaml and the yaml files under the `pourbaix` module.\n\nSee the [tutorials](https://github.com/ashtonmv/twod_materials/wiki/Tutorial-1:-stability)\nfor sample usage of every function in `twod_materials`.\n", "description_content_type": null, "docs_url": "https://pythonhosted.org/twod_materials/", "download_url": "https://github.com/ashtonmv/twod_materials/tarball/0.0.6", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ashtonmv/twod_materials", "keywords": null, "license": "GNU", "maintainer": null, "maintainer_email": null, "name": "twod_materials", "package_url": "https://pypi.org/project/twod_materials/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/twod_materials/", "project_urls": {"Download": "https://github.com/ashtonmv/twod_materials/tarball/0.0.6", "Homepage": "https://github.com/ashtonmv/twod_materials"}, "release_url": "https://pypi.org/project/twod_materials/0.0.6/", "requires_dist": null, "requires_python": null, "summary": "High throughput 2D material modules", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            [![Build Status](https://travis-ci.org/ashtonmv/twod_materials.svg?branch=master)](https://travis-ci.org/ashtonmv/twod_materials)<br>[![Coverage](https://codecov.io/gh/ashtonmv/twod_materials/coverage.svg?branch=master)](https://codecov.io/gh/ashtonmv/twod_materials)<br><br>&lt;img src=\"https://s3.amazonaws.com/mashton/twod_materials_logo.png\" alt=\"Drawing\" width=\"200\"/&gt;<br><br>About twod_materials<br>====================<br><br>The official documentation for `twod_materials`, which includes a pretty<br>comprehensive set of tutorials, can be found<br>[here](https://pythonhosted.org/twod_materials/).<br><br>The [wiki pages](https://github.com/ashtonmv/twod_materials/wiki) contain the<br>unofficial but still well-maintained documentation for `twod_materials`,<br>including the tutorials.<br><br># Overview #<br><br>`twod_materials` is a library of functions that I've used in my research on<br>discovering and characterizing 2D materials. Some of them I have used thousands<br>of times, and others I have used less than five times. The functions in<br>`twod_materials` have been designed with user-friendliness as a priority,<br>which occasionally comes at the expense of flexibility. For example, some of the<br>post-processing functions will assume you have used a certain directory<br>structure when organizing your calculations. The goal here was not to be<br>restrictive, but to be streamlined.<br><br># Installation and setup #<br><br>The latest stable release can be installed with ``pip``:<br>```bash<br>pip install numpy<br>pip install twod_materials<br>```<br><br>Alternatively, the very latest (no promises) version of `twod_materials` can be<br>installed by cloning this repository. Once you've cloned it<br>on your system, run `pip install numpy` and then<br>`pip install -r requirements.txt` to install its dependencies. You should then<br>add its location to your system's `$PYTHONPATH` so you can import its<br>functions from anywhere. There are a few ways to do this, including adding the<br>following line to your `~/.bashrc` file:<br>```<br>  export PYTHONPATH=$PYTHONPATH:/path/to/twod_materials  # obviously change this<br>```<br>Edit config.yaml with your system's settings, following the template:<br>```<br>  mp_api: your_materials_project_api_key<br>  normal_binary: path_to_normal_vasp_executable<br>  twod_binary: path_to_twod_vasp_executable<br>  potentials: path_to_your_vasp_potentials<br>  queue_system: slurm_or_pbs<br>```<br>and then copy or move it to your home directory (~).<br><br># How the package is structured #<br><br>There are five mature modules in `twod_materials`: `stability`,<br>`electronic_structure`, `pourbaix`, `friction`, and `intercalation`.<br>The `magnetism` module is, for now, still in its infancy. The `utils` module<br>is basically just a library of helper functions used throughout the other<br>packages.<br><br>Each of these modules has two submodules: `startup` and `analysis`. For<br>most modules, `startup` contains functions that set up and submit VASP<br>calculations by interacting with your machine's queue system (PBS or SLURM). It<br>might be helpful to think of the `startup` submodules as pre-processing tools.<br>The `analysis` submodules, then, contain post-processing functions. These<br>post-processing functions can be grouped into two main categories: functions for<br>analyzing data and functions for plotting it. All plotting functions use<br>`matplotlib`.<br><br>Throughout the package, there are a few configuration files that for the most<br>part don't need to be changed (as opposed to config.yaml, which does):<br>potcar_symbols.yaml and the yaml files under the `pourbaix` module.<br><br>See the [tutorials](https://github.com/ashtonmv/twod_materials/wiki/Tutorial-1:-stability)<br>for sample usage of every function in `twod_materials`.<br>\n          </div>"}, "last_serial": 2522001, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1d8d54783c154e455901179d77a0d8c8", "sha256": "285c455539cfad1da6ebaa4ee61aff9f86cabd29c260958bb92b37009ab58aad"}, "downloads": -1, "filename": "twod_materials-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1d8d54783c154e455901179d77a0d8c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41265, "upload_time": "2016-12-12T19:26:00", "upload_time_iso_8601": "2016-12-12T19:26:00.956693Z", "url": "https://files.pythonhosted.org/packages/e3/c5/ef95ce5acdd567654bfe472f3d9d42d58c45a1e93549a70eacb94fa54ae1/twod_materials-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "39c6e7e211be07be581c9d28337f0f63", "sha256": "d8c868a4b364866ea0cc79ff6b4a9275c8504d68abab1a42b6f86ad6a254d9b1"}, "downloads": -1, "filename": "twod_materials-0.0.2.tar.gz", "has_sig": false, "md5_digest": "39c6e7e211be07be581c9d28337f0f63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41259, "upload_time": "2016-12-12T19:28:35", "upload_time_iso_8601": "2016-12-12T19:28:35.861316Z", "url": "https://files.pythonhosted.org/packages/57/9c/71a1231676fee589fea01376ee18287b19565dbd500dd8d80625b357feca/twod_materials-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "48850b8a4bb4f7f6026531e9c9b1536b", "sha256": "da343834a3c658709d0060cb3ba6048a51cbdf6c4725cb7ce031a8980df1f763"}, "downloads": -1, "filename": "twod_materials-0.0.3.tar.gz", "has_sig": false, "md5_digest": "48850b8a4bb4f7f6026531e9c9b1536b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41259, "upload_time": "2016-12-12T19:30:14", "upload_time_iso_8601": "2016-12-12T19:30:14.953842Z", "url": "https://files.pythonhosted.org/packages/2f/62/7947ec43ead40bbcdd9b8a8b0424b19ac4e7e60c6478474be355b12d1697/twod_materials-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "0a9ffed6399b10ea2546486fc643606e", "sha256": "ba81653f5d54e43021e4ead84c5e27c2f16407b51108b3bf8bd59511f87c26c9"}, "downloads": -1, "filename": "twod_materials-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0a9ffed6399b10ea2546486fc643606e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41274, "upload_time": "2016-12-12T19:36:52", "upload_time_iso_8601": "2016-12-12T19:36:52.050292Z", "url": "https://files.pythonhosted.org/packages/b1/05/0e7110717fb5aea8d35d5de0643c0492e07bf92bb8c76a6890cef7435264/twod_materials-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "6f1f908c42291e439841b3a663485928", "sha256": "b6b27cc92af8f7816d1e297aaf20eaa2237e9a08202be54e73a4e0aacd4910e6"}, "downloads": -1, "filename": "twod_materials-0.0.5.tar.gz", "has_sig": false, "md5_digest": "6f1f908c42291e439841b3a663485928", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41277, "upload_time": "2016-12-12T20:17:47", "upload_time_iso_8601": "2016-12-12T20:17:47.318698Z", "url": "https://files.pythonhosted.org/packages/40/8c/04ec724b3f91b00a5fe84abe4f37ff1050fdd0905af6dc1458eecb7a5aba/twod_materials-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "86836809df54426fc94e30f8c2bade69", "sha256": "1f6c891b7715b1489b064ed57855509218389f45604fc84761c76fa7a1c6311d"}, "downloads": -1, "filename": "twod_materials-0.0.6.tar.gz", "has_sig": false, "md5_digest": "86836809df54426fc94e30f8c2bade69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41287, "upload_time": "2016-12-12T20:50:45", "upload_time_iso_8601": "2016-12-12T20:50:45.549737Z", "url": "https://files.pythonhosted.org/packages/78/c5/0570b608612a867765ba926033c400191e0605052f63b9da93bdc782fca3/twod_materials-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "86836809df54426fc94e30f8c2bade69", "sha256": "1f6c891b7715b1489b064ed57855509218389f45604fc84761c76fa7a1c6311d"}, "downloads": -1, "filename": "twod_materials-0.0.6.tar.gz", "has_sig": false, "md5_digest": "86836809df54426fc94e30f8c2bade69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41287, "upload_time": "2016-12-12T20:50:45", "upload_time_iso_8601": "2016-12-12T20:50:45.549737Z", "url": "https://files.pythonhosted.org/packages/78/c5/0570b608612a867765ba926033c400191e0605052f63b9da93bdc782fca3/twod_materials-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:28 2020"}