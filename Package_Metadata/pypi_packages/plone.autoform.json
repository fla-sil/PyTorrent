{"info": {"author": "Martin Aspeli", "author_email": "optilude@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Plone", "Framework :: Plone :: 5.1", "Framework :: Plone :: 5.2", "Framework :: Plone :: 6.0", "Framework :: Plone :: Core", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "plone.autoform\n==============\n\n.. contents:: Contents\n\nIntroduction\n------------\n\n``plone.autoform`` builds custom `z3c.form`_ forms based on a model (schema)\nof what fields to include and what widgets and options should be used for each\nfield. This model is defined as a `zope.schema`_-based schema, but additional\nhints can be supplied to control aspects of form display not normally specified\nin a Zope schema.\n\n\nBasic schema-based forms\n------------------------\n\nTo use the automatic form setup, mix in the following base class in your\nforms::\n\n    >>> from plone.autoform.form import AutoExtensibleForm\n\nand then provide the ``schema`` (a schema interface) and optionally the\n``additionalSchemata`` (a list of schema interfaces) attributes on your form::\n\n    class MyForm(AutoExtensibleForm, form.EditForm):\n        schema = IMySchema\n        additionalSchemata = (ISchemaOne, ISchemaTwo,)\n        # ...\n\nFor dynamic forms, you could of course make ``schema`` and\n``additionalSchemata`` into properties. For example, `plone.dexterity`_ extends the\nbasic AutoExtensibleForm so that ``schema`` is the content type schema and\n``additionalSchemata`` is a list of field provider schemas associated with\nbehaviors.\n\n\nControlling form presentation\n-----------------------------\n\nDirectives can be specified in the schema to control aspects of form presentation.\n\nChanging a field's display mode\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nA field's widget can be displayed in several \"modes\":\n\n* input - allows the user to enter data into the field\n* display - a read-only indication of the field's value\n* hidden - a record of the field's value that is included only in the HTML source\n\nThe mode can be controlled using the ``mode`` directive::\n\n    from plone.supermodel import model\n    from plone.autoform import directives as form\n\n    class IMySchema(model.Schema):\n\n        form.mode(secret='hidden')\n        form.mode(IEditForm, secret='input')\n        secret = schema.TextLine(\n            title=u\"Secret\",\n            default=u\"Secret stuff (except on edit forms)\"\n            )\n\nIn this case the mode for the ``secret`` field is set to 'hidden' for most forms,\nbut 'input' for forms that provide the IEditForm interface.\n\nThe corresponding supermodel XML directive is ``form:mode``::\n\n    <field type=\"zope.schema.TextLine\"\n            name=\"secret\"\n            form:mode=\"z3c.form.interfaces.IForm:hidden z3c.form.interfaces.IEditForm:input\">\n        <title>Secret</title>\n        <description>Secret stuff (except on edit forms)</description>\n    </field>\n\nThe mode can be specified briefly if it should be the same for all forms::\n\n    <field type=\"zope.schema.TextLine\"\n            name=\"secret\"\n            form:mode=\"hidden\">\n        <title>Secret</title>\n        <description>Secret stuff</description>\n    </field>\n\nIn other words, ``form:mode`` may be either a single mode, or a space-separated\nlist of form_interface:mode pairs.\n\n\nOmitting fields\n~~~~~~~~~~~~~~~\n\nA field can be omitted entirely from all forms, or from some forms,\nusing the ``omitted`` and ``no_omit`` diretives. In this example,\nthe ``dummy`` field is omitted from all forms, and the ``edit_only``\nfield is omitted from all forms except those that provide the\nIEditForm interface::\n\n    from z3c.form.interfaces import IEditForm\n    from plone.supermodel import model\n    from plone.autoform import directives as form\n\n    class IMySchema(model.Schema):\n\n        form.omitted('dummy')\n        dummy = schema.Text(\n            title=u\"Dummy\"\n            )\n\n        form.omitted('edit_only')\n        form.no_omit(IEditForm, 'edit_only')\n        edit_only = schema.TextLine(\n            title = u'Only included on edit forms',\n            )\n\nIn supermodel XML, this can be specified as::\n\n    <field type=\"zope.schema.TextLine\"\n           name=\"dummy\"\n           form:omitted=\"true\">\n        <title>Dummy</title>\n    </field>\n\n    <field type=\"zope.schema.TextLine\"\n           name=\"edit-only\"\n           form:omitted=\"z3c.form.interfaces.IForm:true z3c.form.interfaces.IEditForm:false\">\n        <title>Only included on edit form</title>\n    </field>\n\n``form:omitted`` may be either a single boolean value, or a space-separated\nlist of form_interface:boolean pairs.\n\n\nRe-ordering fields\n~~~~~~~~~~~~~~~~~~\n\nA field's position in the form can be influenced using the ``order_before``\nand ``order_after`` directives. In this example, the ``not_last`` field\nis placed before the ``summary`` field even though it is defined afterward::\n\n    from plone.supermodel import model\n    from plone.autoform import directives as form\n\n    class IMySchema(model.Schema):\n\n        summary = schema.Text(\n            title=u\"Summary\",\n            description=u\"Summary of the body\",\n            readonly=True\n            )\n\n        form.order_before(not_last='summary')\n        not_last = schema.TextLine(\n            title=u\"Not last\",\n            )\n\nThe value passed to the directive may be either '*' (indicating before or after\nall fields) or the name of another field. Use ``'.fieldname'`` to refer to\nfield in the current schema or a base schema. Prefix with the schema name (e.g.\n``'IDublinCore.title'``) to refer to a field in another schema. Use an\nunprefixed name to refer to a field in the current or the default schema for\nthe form.\n\nIn supermodel XML, the directives are called ``form:before`` and ``form:after``.\nFor example::\n\n    <field type=\"zope.schema.TextLine\"\n           name=\"not_last\"\n           form:before=\"*\">\n        <title>Not last</title>\n    </field>\n\n\nOrganizing fields into fieldsets\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFields can be grouped into fieldsets, which will be rendered within an HTML\n``<fieldset>`` tag. In this example the ``footer`` and ``dummy`` fields\nare placed within the ``extra`` fieldset::\n\n    from plone.supermodel import model\n    from plone.autoform import directives as form\n\n    class IMySchema(model.Schema):\n\n        model.fieldset('extra',\n            label=u\"Extra info\",\n            fields=['footer', 'dummy']\n            )\n\n        footer = schema.Text(\n            title=u\"Footer text\",\n            )\n\n        dummy = schema.Text(\n            title=u\"Dummy\"\n            )\n\nIn supermodel XML fieldsets are specified by grouping fields within a\n``<fieldset>`` tag::\n\n  <fieldset name=\"extra\" label=\"Extra info\">\n      <field name=\"footer\" type=\"zope.schema.TextLine\">\n          <title>Footer text</title>\n      </field>\n      <field name=\"dummy\" type=\"zope.schema.TextLine\">\n          <title>Dummy</title>\n      </field>\n  </fieldset>\n\n\nChanging a field's widget\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nUsually, z3c.form picks a widget based on the type of your field.\nYou can change the widget using the ``widget`` directive if you want\nusers to enter or view data in a different format. For example,\nhere we change the widget for the ``human`` field to use yes/no\nradio buttons instead of a checkbox::\n\n    from plone.supermodel import model\n    from plone.autoform import directives as form\n    from z3c.form.browser.radio import RadioFieldWidget\n\n    class IMySchema(model.Schema):\n        form.widget('human', RadioFieldWidget)\n        human = schema.Bool(\n            title = u'Are you human?',\n            )\n\nYou can also pass widget parameters to control attributes of the\nwidget. For example, here we keep the default widget, but\nset a CSS class::\n\n    from plone.supermodel import model\n    from plone.autoform import directives as form\n    from z3c.form.browser.radio import RadioWidget\n\n    class IMySchema(model.Schema):\n        form.widget('human', klass='annoying')\n        human = schema.Bool(\n            title = u'Are you human?',\n            )\n\nIn supermodel XML the widget is specified using a ``<form:widget>`` tag, which\ncan have its own elements specifying parameters::\n\n    <field name=\"human\" type=\"zope.schema.TextLine\">\n        <title>Are you human?</title>\n        <form:widget type=\"z3c.form.browser.radio.RadioWidget\">\n            <klass>annoying</klass>\n        </form:widget>\n    </field>\n\nNote: In order to be included in the XML representation of a schema,\nwidget parameters must be handled by a WidgetExportImportHandler utility.\nThere is a default one which handles the attributes defined in\n``z3c.form.browser.interfaces.IHTMLFormElement``.\n\nProtect a field with a permission\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBy default, fields are included in the form regardless of the user's\npermissions. Fields can be protected using the ``read_permission``\nand ``write_permission`` directives. The read permission is checked when\nthe field is in display mode, and the write permission is checked when\nthe field is in input mode. The permission should be given with its\nZope 3-style name (i.e. cmf.ManagePortal rather than 'Manage portal').\n\nIn this example, the ``secret`` field is protected by the\n``cmf.ManagePortal`` permission as both a read and write permission.\nThis means that in both display and input modes, the field will\nonly be included in the form for users who have that permission::\n\n    from plone.supermodel import model\n    from plone.autoform import directives as form\n\n    class IMySchema(model.Schema):\n        form.read_permission(secret='cmf.ManagePortal')\n        form.write_permission(secret='cmf.ManagePortal')\n        secret = schema.TextLine(\n            title = u'Secret',\n            )\n\nIn supermodel XML the directives are ``security:read-permission`` and\n``security:write-permission``::\n\n    <field type=\"zope.schema.TextLine\"\n           name=\"secret\"\n           security:read-permission=\"cmf.ManagePortal\"\n           security:write-permission=\"cmf.ManagePortal\">\n        <title>Secret</title>\n    </field>\n\nDisplay Forms\n-------------\n\nSometimes rather than rendering a form for data entry, you want to display\nstored values based on the same schema. This can be done using a \"display form.\"\nThe display form renders each field's widget in \"display mode,\" which means\nthat it shows the field value in read-only form rather than as a form input.\n\nTo use the display form, create a view that extends ``WidgetsView`` like this:\n\n    >>> from plone.autoform.view import WidgetsView\n    >>> class MyView(WidgetsView):\n    ...     schema = IMySchema\n    ...     additionalSchemata = (ISchemaOne, ISchemaTwo,)\n    ...\n    ...     # ...\n\nTo render the form, do not override ``__call__()``. Instead, either implement\nthe ``render()`` method, set an ``index`` attribute to a page template or\nother callable, or use the ``template`` attribute of the ``<browser:page />``\nZCML directive when registering the view.\n\nIn the template, you can use the following variables:\n\n* ``view/w`` is a dictionary of all widgets, including those from non-default\n  fieldsets (by contrast, the ``widgets`` variable contains only those\n  widgets in the default fieldset). The keys are the field names, and the\n  values are widget instances. To render a widget (in display mode), you can\n  do ``tal:replace=\"structure view/w/myfield/render\" />``.\n* ``view/fieldsets`` is a dictionary of all fieldsets (not including the\n  default fieldset, i.e. those widgets not placed into a fieldset). They keys\n  are the fieldset names, and the values are the fieldset form instances,\n  which in turn have variables like ``widgets`` given a list of all widgets.\n\n\nBehind the scenes: how autoform directives work\n-----------------------------------------------\n\nZope schema fields do not allow storing arbitrary key-value data associated\nwith a particular field. However, arbitrary data can be stored in a\ndictionary on the schema (interface) known as the \"tagged values.\"\nThis is where ``plone.autoform`` keeps track of its extra hints,\nwhether they are configured via Python directives, an XML model, or some\nother way.\n\nThe tagged values are stored under various keys, which are defined\nin the ``plone.autoform.interfaces`` module. They can be set several ways:\n\n* Manually, by using ``setTaggedValue()`` on an interface.\n* By loading the schema from a `plone.supermodel`_ XML file and using the\n  ``form:`` prefix\n* By using the directives from ``plone.autoform.directives`` while defining\n  a schema in Python.\n\nSource Code\n===========\n\nContributors please read the document `Process for Plone core's development <https://docs.plone.org/develop/coredev/docs/index.html>`_\n\nSources are at the `Plone code repository hosted at Github <https://github.com/plone/plone.autoform>`_.\n\n\n.. _z3c.form: http://pypi.python.org/pypi/z3c.form\n.. _zope.schema: http://pypi.python.org/pypi/zope.schema\n.. _plone.supermodel: http://pypi.python.org/pypi/plone.supermodel\n.. _plone.dexterity: http://pypi.python.org/pypi/plone.dexterity\n\nChangelog\n=========\n\n.. You should *NOT* be adding new change log entries to this file.\n   You should create a file in the news directory instead.\n   For helpful instructions, please see:\n   https://github.com/plone/plone.releaser/blob/master/ADD-A-NEWS-ITEM.rst\n\n.. towncrier release notes start\n\n1.9.0 (2020-04-20)\n------------------\n\nNew features:\n\n\n- Support for zope.interface 5. \n  See https://github.com/zopefoundation/zope.interface/pull/183#issuecomment-599547556\n  [jensens] (#39)\n\n\n1.8.2 (2020-03-09)\n------------------\n\nBug fixes:\n\n\n- Decrease the loglevel of \"Field move to non-existing: ...\" (#21)\n\n\n1.8.1 (2018-10-31)\n------------------\n\nBug fixes:\n\n- Remove the dummy security manager on test tear down\n  [ale-rt]\n\n\n1.8.0 (2018-09-26)\n------------------\n\nNew features:\n\n- Add support for python 3\n  [pbauer]\n\n\n1.7.5 (2018-02-04)\n------------------\n\nBug fixes:\n\n- Prepare for Python 2 / 3 compatibility\n  [pbauer]\n\n- Minor fixes on testing that could avoid having test isolation problems.\n  [gforcada]\n\n1.7.4 (2017-11-24)\n------------------\n\nNew features:\n\n- Allow configuration of fieldsets via ``plone.supermodel`` fieldset directives via a schema without fields.\n  This can be used to create a Plone behavior for stable ordering of fieldsets.\n  [thet]\n\n- Add handler registration for text input widgets to support e.g. 'placeholder'\n  parameter in parameterized widgets\n  [datakurre]\n\n\n\n1.7.3 (2017-06-03)\n------------------\n\nBug fixes:\n\n- Reduce field move failure logging from error to warning.\n  Log more information like full rule.\n  [jensens]\n\n- Fix traceback in updateFieldsFromSchemata for forms with no schema.\n  [davisagli]\n\n- Clean up code.\n  [gforcada]\n\n- Remove unittest2 dependency\n  [kakshay21]\n\n\n1.7.2 (2017-04-01)\n------------------\n\nNew features:\n\n- Make of tracebacks of ``plone.autoform.widgets.ParameterizedWidget`` calls more verbose in order to ease debugging.\n  [jensens]\n\n\n1.7.1 (2017-02-12)\n------------------\n\nBug fixes:\n\n- Make sure WidgetsView doesn't use acquisition in Zope 4. [davisagli]\n\n\n1.7.0 (2016-06-07)\n------------------\n\nIncompatibilities:\n\n- Because of the ordering fix the field order in forms may be different.\n  Before this fix the order was a gamble dependent on schema order.\n  Schema form hints ``order_after`` and ``order_before`` may need minor adjustments.\n  ``plone.autoform.utils.processFieldMoves`` was deprecated,\n  but still works as before.\n  The new functionality is now part of ``plone.autoform.base.AutoFields``.\n  [jensens]\n\nNew:\n\n- Fieldset labels/descriptions we're taken from first occurence.\n  It was not possible to override them in a subsequent directive.\n  Also it was not possible to set them in a subsequent directive, if it was not set before.\n  Now subsequent directives w/o a label/description are just adding the field to the fieldset.\n  If a different label and/or description is given, it replaces the existing prior loaded one.\n  [jensens]\n\n- The order of the fieldsets can be defined now explictly with the ``plone.supermodel.directives.fieldset`` directive.\n  ``plone.autoform`` now does the sorting while fieldset processing.\n  [jensens]\n\nFixes:\n\n- Implementation on how field ordering happens was unreproducible if same schemas are coming in in different orders.\n  New implementation build a well defined rule tree and processes then the field moves,\n  almost independent from the schema order.\n  [jensens]\n\n- Update setup.py url\n  [esteele]\n\n\n1.6.2 (2016-02-20)\n------------------\n\nFixes:\n\n- Fix test for changed ``zope.interface`` comparison method, which\n  incorrectly reports two different Interfaces from the same module\n  but with empty name as being equal.  [thet]\n\n\n1.6.1 (2014-10-20)\n------------------\n\n- pep8 cleanup, utf8-header,sorted imports, readability, ...\n  [jensens]\n\n- Fix issue where multiple (plone.supermodel) fieldset directive calls for the\n  same fieldset name resulted to duplicate fieldsets (e.g. when updating\n  fieldset with new fields in a subschema)\n  [datakurre]\n\n\n1.6 (2014-02-22)\n----------------\n\n- Replace deprecated test assert statements.\n  [timo]\n\n- Support anonymous schema (dynamic interfaces with and empty\n  __name__ attribute) in autoGroups, opting to use prefix as\n  group name for such cases.  This allows subclasses of\n  AutoExtensibleForm to implement getPrefix() method as\n  a sufficient condition to support an unnamed schema.\n  [seanupton]\n\n\n1.5 (2013-08-14)\n----------------\n\n- Added an option on form to allow display of empty fieldsets.\n  [thomasdesvenain]\n\n- fix tests\n  [vangheem]\n\n\n1.4 (2013-05-23)\n----------------\n\n- Enhance the widget directive to allow for specifying widget parameters\n  within the schema.\n  [davisagli]\n\n- Support passing widget classes in the widget directive in addition to\n  IFieldWidgets.\n  [davisagli]\n\n- Support serializing widget parameters to XML. This requires implementing\n  a IWidgetExportImportHandler utility for the widget type.\n  [davisagli]\n\n\n1.3 (2012-08-30)\n----------------\n\n- Avoid dependency on z3c.form.testing.\n  [hannosch]\n\n1.2 (2012-04-15)\n----------------\n\n- Moved form schema directives here from plone.directives.form, and\n  reimplemented them as plone.supermodel directives to avoid depending on\n  grok.  Included directives: omitted, no_omit, mode, widget, order_before,\n  order_after, read_permission, write_permission\n  [davisagli]\n\n1.1 - 2012-02-20\n----------------\n\n- Added the AutoObjectSubForm class to support form hints for\n  object widget subforms.\n  [jcbrand]\n\n1.0 - 2011-05-13\n----------------\n\n- Raise a NotImplementedError instead of NotImplemented as that is not\n  an exception but meant for comparisons and is not callable.\n  [maurits]\n\n\n1.0b7 - 2011-04-29\n------------------\n\n- Check to make sure that interfaces and field widgets resolved by the\n  supermodel handler are of the correct type.\n  [elro]\n\n- Add form:validator support for supermodel.\n  [elro]\n\n- Fix issue where permission checks were not applied correctly to schemas being\n  added with prefixes.\n  [davisagli]\n\n- Add MANIFEST.in.\n  [WouterVH]\n\n\n1.0b6 - 2011-02-11\n------------------\n\n- Fix WidgetsView so that _update and update do not clash.\n  [elro]\n\n- Fix view.txt doctest to test actual behaviour, not artifacts from test setup.\n  [elro]\n\n\n1.0b5 - 2011-01-11\n------------------\n\n- Use five.ManageSite permission to check field permissions. We'll avoid\n  sniffing for Five/CMFCore permissions.zcml difference between Zope 2.12 and\n  2.13. [esteele]\n\n\n1.0b4 - 2010-08-05\n------------------\n\n- Fixed widget traversal for WidgetsView\n  http://groups.google.com/group/dexterity-development/browse_frm/thread/280016ece3ed1462\n  [29.08.2010, jbaumann]\n\n- Make field permission checks use the field mode rather than the form mode.\n  Fixes http://code.google.com/p/dexterity/issues/detail?id=110\n  [optilude]\n\n- Removed some dead code.\n  Fixes http://code.google.com/p/dexterity/issues/detail?id=132\n  [optilude, shywolf9982]\n\n\n1.0b3 - 2010-04-20\n------------------\n\n- Properly handle the 'omitted' tagged value when it is set to 'false' for a\n  field.\n  [davisagli]\n\n- Make it possible to set the 'omitted' and 'mode' settings only for particular\n  form interfaces.\n  [davisagli]\n\n- Do not omit read-only fields when rendering a form in DISPLAY mode.\n  http://code.google.com/p/dexterity/issues/detail?id=118\n  [mj]\n\n\n1.0b2 - 2009-07-12\n------------------\n\n- Changed API methods and arguments to mixedCase to be more consistent with\n  the rest of Zope. This is a non-backwards-compatible change. Our profuse\n  apologies, but it's now or never. :-/\n\n  If you find that you get import errors or unknown keyword arguments in your\n  code, please change names from foo_bar too fooBar, e.g. process_fields()\n  becomes processFields().\n\n  Note in particular that the additional_schemata property is now called\n  additionalSchemata. If you have implemented this property yourself, you will\n  need to rename it!\n  [optilude]\n\n\n1.0b1 - 2009-04-17\n------------------\n\n- Initial release\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/plone/plone.autoform", "keywords": "plone form z3c.form", "license": "LGPL", "maintainer": "", "maintainer_email": "", "name": "plone.autoform", "package_url": "https://pypi.org/project/plone.autoform/", "platform": "", "project_url": "https://pypi.org/project/plone.autoform/", "project_urls": {"Homepage": "http://github.com/plone/plone.autoform"}, "release_url": "https://pypi.org/project/plone.autoform/1.9.0/", "requires_dist": ["setuptools", "six", "zope.interface", "zope.schema", "zope.security", "zope.dottedname", "plone.supermodel (>=1.3.dev0)", "plone.z3cform (>=0.9.0.dev0)", "z3c.form"], "requires_python": "", "summary": "Tools to construct z3c.form forms", "version": "1.9.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"plone-autoform\">\n<h2><a href=\"#id20\" rel=\"nofollow\">plone.autoform</a></h2>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#plone-autoform\" id=\"id20\" rel=\"nofollow\">plone.autoform</a><ul>\n<li><a href=\"#introduction\" id=\"id21\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#basic-schema-based-forms\" id=\"id22\" rel=\"nofollow\">Basic schema-based forms</a></li>\n<li><a href=\"#controlling-form-presentation\" id=\"id23\" rel=\"nofollow\">Controlling form presentation</a><ul>\n<li><a href=\"#changing-a-field-s-display-mode\" id=\"id24\" rel=\"nofollow\">Changing a field\u2019s display mode</a></li>\n<li><a href=\"#omitting-fields\" id=\"id25\" rel=\"nofollow\">Omitting fields</a></li>\n<li><a href=\"#re-ordering-fields\" id=\"id26\" rel=\"nofollow\">Re-ordering fields</a></li>\n<li><a href=\"#organizing-fields-into-fieldsets\" id=\"id27\" rel=\"nofollow\">Organizing fields into fieldsets</a></li>\n<li><a href=\"#changing-a-field-s-widget\" id=\"id28\" rel=\"nofollow\">Changing a field\u2019s widget</a></li>\n<li><a href=\"#protect-a-field-with-a-permission\" id=\"id29\" rel=\"nofollow\">Protect a field with a permission</a></li>\n</ul>\n</li>\n<li><a href=\"#display-forms\" id=\"id30\" rel=\"nofollow\">Display Forms</a></li>\n<li><a href=\"#behind-the-scenes-how-autoform-directives-work\" id=\"id31\" rel=\"nofollow\">Behind the scenes: how autoform directives work</a></li>\n</ul>\n</li>\n<li><a href=\"#source-code\" id=\"id32\" rel=\"nofollow\">Source Code</a></li>\n<li><a href=\"#changelog\" id=\"id33\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id1\" id=\"id34\" rel=\"nofollow\">1.9.0 (2020-04-20)</a></li>\n<li><a href=\"#id2\" id=\"id35\" rel=\"nofollow\">1.8.2 (2020-03-09)</a></li>\n<li><a href=\"#id3\" id=\"id36\" rel=\"nofollow\">1.8.1 (2018-10-31)</a></li>\n<li><a href=\"#id4\" id=\"id37\" rel=\"nofollow\">1.8.0 (2018-09-26)</a></li>\n<li><a href=\"#id5\" id=\"id38\" rel=\"nofollow\">1.7.5 (2018-02-04)</a></li>\n<li><a href=\"#id6\" id=\"id39\" rel=\"nofollow\">1.7.4 (2017-11-24)</a></li>\n<li><a href=\"#id7\" id=\"id40\" rel=\"nofollow\">1.7.3 (2017-06-03)</a></li>\n<li><a href=\"#id8\" id=\"id41\" rel=\"nofollow\">1.7.2 (2017-04-01)</a></li>\n<li><a href=\"#id9\" id=\"id42\" rel=\"nofollow\">1.7.1 (2017-02-12)</a></li>\n<li><a href=\"#id10\" id=\"id43\" rel=\"nofollow\">1.7.0 (2016-06-07)</a></li>\n<li><a href=\"#id11\" id=\"id44\" rel=\"nofollow\">1.6.2 (2016-02-20)</a></li>\n<li><a href=\"#id12\" id=\"id45\" rel=\"nofollow\">1.6.1 (2014-10-20)</a></li>\n<li><a href=\"#id13\" id=\"id46\" rel=\"nofollow\">1.6 (2014-02-22)</a></li>\n<li><a href=\"#id14\" id=\"id47\" rel=\"nofollow\">1.5 (2013-08-14)</a></li>\n<li><a href=\"#id15\" id=\"id48\" rel=\"nofollow\">1.4 (2013-05-23)</a></li>\n<li><a href=\"#id16\" id=\"id49\" rel=\"nofollow\">1.3 (2012-08-30)</a></li>\n<li><a href=\"#id17\" id=\"id50\" rel=\"nofollow\">1.2 (2012-04-15)</a></li>\n<li><a href=\"#id18\" id=\"id51\" rel=\"nofollow\">1.1 - 2012-02-20</a></li>\n<li><a href=\"#id19\" id=\"id52\" rel=\"nofollow\">1.0 - 2011-05-13</a></li>\n<li><a href=\"#b7-2011-04-29\" id=\"id53\" rel=\"nofollow\">1.0b7 - 2011-04-29</a></li>\n<li><a href=\"#b6-2011-02-11\" id=\"id54\" rel=\"nofollow\">1.0b6 - 2011-02-11</a></li>\n<li><a href=\"#b5-2011-01-11\" id=\"id55\" rel=\"nofollow\">1.0b5 - 2011-01-11</a></li>\n<li><a href=\"#b4-2010-08-05\" id=\"id56\" rel=\"nofollow\">1.0b4 - 2010-08-05</a></li>\n<li><a href=\"#b3-2010-04-20\" id=\"id57\" rel=\"nofollow\">1.0b3 - 2010-04-20</a></li>\n<li><a href=\"#b2-2009-07-12\" id=\"id58\" rel=\"nofollow\">1.0b2 - 2009-07-12</a></li>\n<li><a href=\"#b1-2009-04-17\" id=\"id59\" rel=\"nofollow\">1.0b1 - 2009-04-17</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"introduction\">\n<h3><a href=\"#id21\" rel=\"nofollow\">Introduction</a></h3>\n<p><tt>plone.autoform</tt> builds custom <a href=\"http://pypi.python.org/pypi/z3c.form\" rel=\"nofollow\">z3c.form</a> forms based on a model (schema)\nof what fields to include and what widgets and options should be used for each\nfield. This model is defined as a <a href=\"http://pypi.python.org/pypi/zope.schema\" rel=\"nofollow\">zope.schema</a>-based schema, but additional\nhints can be supplied to control aspects of form display not normally specified\nin a Zope schema.</p>\n</div>\n<div id=\"basic-schema-based-forms\">\n<h3><a href=\"#id22\" rel=\"nofollow\">Basic schema-based forms</a></h3>\n<p>To use the automatic form setup, mix in the following base class in your\nforms:</p>\n<pre>&gt;&gt;&gt; from plone.autoform.form import AutoExtensibleForm\n</pre>\n<p>and then provide the <tt>schema</tt> (a schema interface) and optionally the\n<tt>additionalSchemata</tt> (a list of schema interfaces) attributes on your form:</p>\n<pre>class MyForm(AutoExtensibleForm, form.EditForm):\n    schema = IMySchema\n    additionalSchemata = (ISchemaOne, ISchemaTwo,)\n    # ...\n</pre>\n<p>For dynamic forms, you could of course make <tt>schema</tt> and\n<tt>additionalSchemata</tt> into properties. For example, <a href=\"http://pypi.python.org/pypi/plone.dexterity\" rel=\"nofollow\">plone.dexterity</a> extends the\nbasic AutoExtensibleForm so that <tt>schema</tt> is the content type schema and\n<tt>additionalSchemata</tt> is a list of field provider schemas associated with\nbehaviors.</p>\n</div>\n<div id=\"controlling-form-presentation\">\n<h3><a href=\"#id23\" rel=\"nofollow\">Controlling form presentation</a></h3>\n<p>Directives can be specified in the schema to control aspects of form presentation.</p>\n<div id=\"changing-a-field-s-display-mode\">\n<h4><a href=\"#id24\" rel=\"nofollow\">Changing a field\u2019s display mode</a></h4>\n<p>A field\u2019s widget can be displayed in several \u201cmodes\u201d:</p>\n<ul>\n<li>input - allows the user to enter data into the field</li>\n<li>display - a read-only indication of the field\u2019s value</li>\n<li>hidden - a record of the field\u2019s value that is included only in the HTML source</li>\n</ul>\n<p>The mode can be controlled using the <tt>mode</tt> directive:</p>\n<pre>from plone.supermodel import model\nfrom plone.autoform import directives as form\n\nclass IMySchema(model.Schema):\n\n    form.mode(secret='hidden')\n    form.mode(IEditForm, secret='input')\n    secret = schema.TextLine(\n        title=u\"Secret\",\n        default=u\"Secret stuff (except on edit forms)\"\n        )\n</pre>\n<p>In this case the mode for the <tt>secret</tt> field is set to \u2018hidden\u2019 for most forms,\nbut \u2018input\u2019 for forms that provide the IEditForm interface.</p>\n<p>The corresponding supermodel XML directive is <tt>form:mode</tt>:</p>\n<pre>&lt;field type=\"zope.schema.TextLine\"\n        name=\"secret\"\n        form:mode=\"z3c.form.interfaces.IForm:hidden z3c.form.interfaces.IEditForm:input\"&gt;\n    &lt;title&gt;Secret&lt;/title&gt;\n    &lt;description&gt;Secret stuff (except on edit forms)&lt;/description&gt;\n&lt;/field&gt;\n</pre>\n<p>The mode can be specified briefly if it should be the same for all forms:</p>\n<pre>&lt;field type=\"zope.schema.TextLine\"\n        name=\"secret\"\n        form:mode=\"hidden\"&gt;\n    &lt;title&gt;Secret&lt;/title&gt;\n    &lt;description&gt;Secret stuff&lt;/description&gt;\n&lt;/field&gt;\n</pre>\n<p>In other words, <tt>form:mode</tt> may be either a single mode, or a space-separated\nlist of form_interface:mode pairs.</p>\n</div>\n<div id=\"omitting-fields\">\n<h4><a href=\"#id25\" rel=\"nofollow\">Omitting fields</a></h4>\n<p>A field can be omitted entirely from all forms, or from some forms,\nusing the <tt>omitted</tt> and <tt>no_omit</tt> diretives. In this example,\nthe <tt>dummy</tt> field is omitted from all forms, and the <tt>edit_only</tt>\nfield is omitted from all forms except those that provide the\nIEditForm interface:</p>\n<pre>from z3c.form.interfaces import IEditForm\nfrom plone.supermodel import model\nfrom plone.autoform import directives as form\n\nclass IMySchema(model.Schema):\n\n    form.omitted('dummy')\n    dummy = schema.Text(\n        title=u\"Dummy\"\n        )\n\n    form.omitted('edit_only')\n    form.no_omit(IEditForm, 'edit_only')\n    edit_only = schema.TextLine(\n        title = u'Only included on edit forms',\n        )\n</pre>\n<p>In supermodel XML, this can be specified as:</p>\n<pre>&lt;field type=\"zope.schema.TextLine\"\n       name=\"dummy\"\n       form:omitted=\"true\"&gt;\n    &lt;title&gt;Dummy&lt;/title&gt;\n&lt;/field&gt;\n\n&lt;field type=\"zope.schema.TextLine\"\n       name=\"edit-only\"\n       form:omitted=\"z3c.form.interfaces.IForm:true z3c.form.interfaces.IEditForm:false\"&gt;\n    &lt;title&gt;Only included on edit form&lt;/title&gt;\n&lt;/field&gt;\n</pre>\n<p><tt>form:omitted</tt> may be either a single boolean value, or a space-separated\nlist of form_interface:boolean pairs.</p>\n</div>\n<div id=\"re-ordering-fields\">\n<h4><a href=\"#id26\" rel=\"nofollow\">Re-ordering fields</a></h4>\n<p>A field\u2019s position in the form can be influenced using the <tt>order_before</tt>\nand <tt>order_after</tt> directives. In this example, the <tt>not_last</tt> field\nis placed before the <tt>summary</tt> field even though it is defined afterward:</p>\n<pre>from plone.supermodel import model\nfrom plone.autoform import directives as form\n\nclass IMySchema(model.Schema):\n\n    summary = schema.Text(\n        title=u\"Summary\",\n        description=u\"Summary of the body\",\n        readonly=True\n        )\n\n    form.order_before(not_last='summary')\n    not_last = schema.TextLine(\n        title=u\"Not last\",\n        )\n</pre>\n<p>The value passed to the directive may be either \u2018*\u2019 (indicating before or after\nall fields) or the name of another field. Use <tt>'.fieldname'</tt> to refer to\nfield in the current schema or a base schema. Prefix with the schema name (e.g.\n<tt>'IDublinCore.title'</tt>) to refer to a field in another schema. Use an\nunprefixed name to refer to a field in the current or the default schema for\nthe form.</p>\n<p>In supermodel XML, the directives are called <tt>form:before</tt> and <tt>form:after</tt>.\nFor example:</p>\n<pre>&lt;field type=\"zope.schema.TextLine\"\n       name=\"not_last\"\n       form:before=\"*\"&gt;\n    &lt;title&gt;Not last&lt;/title&gt;\n&lt;/field&gt;\n</pre>\n</div>\n<div id=\"organizing-fields-into-fieldsets\">\n<h4><a href=\"#id27\" rel=\"nofollow\">Organizing fields into fieldsets</a></h4>\n<p>Fields can be grouped into fieldsets, which will be rendered within an HTML\n<tt>&lt;fieldset&gt;</tt> tag. In this example the <tt>footer</tt> and <tt>dummy</tt> fields\nare placed within the <tt>extra</tt> fieldset:</p>\n<pre>from plone.supermodel import model\nfrom plone.autoform import directives as form\n\nclass IMySchema(model.Schema):\n\n    model.fieldset('extra',\n        label=u\"Extra info\",\n        fields=['footer', 'dummy']\n        )\n\n    footer = schema.Text(\n        title=u\"Footer text\",\n        )\n\n    dummy = schema.Text(\n        title=u\"Dummy\"\n        )\n</pre>\n<p>In supermodel XML fieldsets are specified by grouping fields within a\n<tt>&lt;fieldset&gt;</tt> tag:</p>\n<pre>&lt;fieldset name=\"extra\" label=\"Extra info\"&gt;\n    &lt;field name=\"footer\" type=\"zope.schema.TextLine\"&gt;\n        &lt;title&gt;Footer text&lt;/title&gt;\n    &lt;/field&gt;\n    &lt;field name=\"dummy\" type=\"zope.schema.TextLine\"&gt;\n        &lt;title&gt;Dummy&lt;/title&gt;\n    &lt;/field&gt;\n&lt;/fieldset&gt;\n</pre>\n</div>\n<div id=\"changing-a-field-s-widget\">\n<h4><a href=\"#id28\" rel=\"nofollow\">Changing a field\u2019s widget</a></h4>\n<p>Usually, z3c.form picks a widget based on the type of your field.\nYou can change the widget using the <tt>widget</tt> directive if you want\nusers to enter or view data in a different format. For example,\nhere we change the widget for the <tt>human</tt> field to use yes/no\nradio buttons instead of a checkbox:</p>\n<pre>from plone.supermodel import model\nfrom plone.autoform import directives as form\nfrom z3c.form.browser.radio import RadioFieldWidget\n\nclass IMySchema(model.Schema):\n    form.widget('human', RadioFieldWidget)\n    human = schema.Bool(\n        title = u'Are you human?',\n        )\n</pre>\n<p>You can also pass widget parameters to control attributes of the\nwidget. For example, here we keep the default widget, but\nset a CSS class:</p>\n<pre>from plone.supermodel import model\nfrom plone.autoform import directives as form\nfrom z3c.form.browser.radio import RadioWidget\n\nclass IMySchema(model.Schema):\n    form.widget('human', klass='annoying')\n    human = schema.Bool(\n        title = u'Are you human?',\n        )\n</pre>\n<p>In supermodel XML the widget is specified using a <tt>&lt;form:widget&gt;</tt> tag, which\ncan have its own elements specifying parameters:</p>\n<pre>&lt;field name=\"human\" type=\"zope.schema.TextLine\"&gt;\n    &lt;title&gt;Are you human?&lt;/title&gt;\n    &lt;form:widget type=\"z3c.form.browser.radio.RadioWidget\"&gt;\n        &lt;klass&gt;annoying&lt;/klass&gt;\n    &lt;/form:widget&gt;\n&lt;/field&gt;\n</pre>\n<p>Note: In order to be included in the XML representation of a schema,\nwidget parameters must be handled by a WidgetExportImportHandler utility.\nThere is a default one which handles the attributes defined in\n<tt>z3c.form.browser.interfaces.IHTMLFormElement</tt>.</p>\n</div>\n<div id=\"protect-a-field-with-a-permission\">\n<h4><a href=\"#id29\" rel=\"nofollow\">Protect a field with a permission</a></h4>\n<p>By default, fields are included in the form regardless of the user\u2019s\npermissions. Fields can be protected using the <tt>read_permission</tt>\nand <tt>write_permission</tt> directives. The read permission is checked when\nthe field is in display mode, and the write permission is checked when\nthe field is in input mode. The permission should be given with its\nZope 3-style name (i.e. cmf.ManagePortal rather than \u2018Manage portal\u2019).</p>\n<p>In this example, the <tt>secret</tt> field is protected by the\n<tt>cmf.ManagePortal</tt> permission as both a read and write permission.\nThis means that in both display and input modes, the field will\nonly be included in the form for users who have that permission:</p>\n<pre>from plone.supermodel import model\nfrom plone.autoform import directives as form\n\nclass IMySchema(model.Schema):\n    form.read_permission(secret='cmf.ManagePortal')\n    form.write_permission(secret='cmf.ManagePortal')\n    secret = schema.TextLine(\n        title = u'Secret',\n        )\n</pre>\n<p>In supermodel XML the directives are <tt><span class=\"pre\">security:read-permission</span></tt> and\n<tt><span class=\"pre\">security:write-permission</span></tt>:</p>\n<pre>&lt;field type=\"zope.schema.TextLine\"\n       name=\"secret\"\n       security:read-permission=\"cmf.ManagePortal\"\n       security:write-permission=\"cmf.ManagePortal\"&gt;\n    &lt;title&gt;Secret&lt;/title&gt;\n&lt;/field&gt;\n</pre>\n</div>\n</div>\n<div id=\"display-forms\">\n<h3><a href=\"#id30\" rel=\"nofollow\">Display Forms</a></h3>\n<p>Sometimes rather than rendering a form for data entry, you want to display\nstored values based on the same schema. This can be done using a \u201cdisplay form.\u201d\nThe display form renders each field\u2019s widget in \u201cdisplay mode,\u201d which means\nthat it shows the field value in read-only form rather than as a form input.</p>\n<p>To use the display form, create a view that extends <tt>WidgetsView</tt> like this:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from plone.autoform.view import WidgetsView\n&gt;&gt;&gt; class MyView(WidgetsView):\n...     schema = IMySchema\n...     additionalSchemata = (ISchemaOne, ISchemaTwo,)\n...\n...     # ...\n</pre>\n</blockquote>\n<p>To render the form, do not override <tt>__call__()</tt>. Instead, either implement\nthe <tt>render()</tt> method, set an <tt>index</tt> attribute to a page template or\nother callable, or use the <tt>template</tt> attribute of the <tt>&lt;browser:page /&gt;</tt>\nZCML directive when registering the view.</p>\n<p>In the template, you can use the following variables:</p>\n<ul>\n<li><tt>view/w</tt> is a dictionary of all widgets, including those from non-default\nfieldsets (by contrast, the <tt>widgets</tt> variable contains only those\nwidgets in the default fieldset). The keys are the field names, and the\nvalues are widget instances. To render a widget (in display mode), you can\ndo <tt><span class=\"pre\">tal:replace=\"structure</span> view/w/myfield/render\" /&gt;</tt>.</li>\n<li><tt>view/fieldsets</tt> is a dictionary of all fieldsets (not including the\ndefault fieldset, i.e. those widgets not placed into a fieldset). They keys\nare the fieldset names, and the values are the fieldset form instances,\nwhich in turn have variables like <tt>widgets</tt> given a list of all widgets.</li>\n</ul>\n</div>\n<div id=\"behind-the-scenes-how-autoform-directives-work\">\n<h3><a href=\"#id31\" rel=\"nofollow\">Behind the scenes: how autoform directives work</a></h3>\n<p>Zope schema fields do not allow storing arbitrary key-value data associated\nwith a particular field. However, arbitrary data can be stored in a\ndictionary on the schema (interface) known as the \u201ctagged values.\u201d\nThis is where <tt>plone.autoform</tt> keeps track of its extra hints,\nwhether they are configured via Python directives, an XML model, or some\nother way.</p>\n<p>The tagged values are stored under various keys, which are defined\nin the <tt>plone.autoform.interfaces</tt> module. They can be set several ways:</p>\n<ul>\n<li>Manually, by using <tt>setTaggedValue()</tt> on an interface.</li>\n<li>By loading the schema from a <a href=\"http://pypi.python.org/pypi/plone.supermodel\" rel=\"nofollow\">plone.supermodel</a> XML file and using the\n<tt>form:</tt> prefix</li>\n<li>By using the directives from <tt>plone.autoform.directives</tt> while defining\na schema in Python.</li>\n</ul>\n</div>\n</div>\n<div id=\"source-code\">\n<h2><a href=\"#id32\" rel=\"nofollow\">Source Code</a></h2>\n<p>Contributors please read the document <a href=\"https://docs.plone.org/develop/coredev/docs/index.html\" rel=\"nofollow\">Process for Plone core\u2019s development</a></p>\n<p>Sources are at the <a href=\"https://github.com/plone/plone.autoform\" rel=\"nofollow\">Plone code repository hosted at Github</a>.</p>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id33\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id34\" rel=\"nofollow\">1.9.0 (2020-04-20)</a></h3>\n<p>New features:</p>\n<ul>\n<li>Support for zope.interface 5.\nSee <a href=\"https://github.com/zopefoundation/zope.interface/pull/183#issuecomment-599547556\" rel=\"nofollow\">https://github.com/zopefoundation/zope.interface/pull/183#issuecomment-599547556</a>\n[jensens] (#39)</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id35\" rel=\"nofollow\">1.8.2 (2020-03-09)</a></h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Decrease the loglevel of \u201cField move to non-existing: \u2026\u201d (#21)</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id36\" rel=\"nofollow\">1.8.1 (2018-10-31)</a></h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Remove the dummy security manager on test tear down\n[ale-rt]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id37\" rel=\"nofollow\">1.8.0 (2018-09-26)</a></h3>\n<p>New features:</p>\n<ul>\n<li>Add support for python 3\n[pbauer]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id38\" rel=\"nofollow\">1.7.5 (2018-02-04)</a></h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Prepare for Python 2 / 3 compatibility\n[pbauer]</li>\n<li>Minor fixes on testing that could avoid having test isolation problems.\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id39\" rel=\"nofollow\">1.7.4 (2017-11-24)</a></h3>\n<p>New features:</p>\n<ul>\n<li>Allow configuration of fieldsets via <tt>plone.supermodel</tt> fieldset directives via a schema without fields.\nThis can be used to create a Plone behavior for stable ordering of fieldsets.\n[thet]</li>\n<li>Add handler registration for text input widgets to support e.g. \u2018placeholder\u2019\nparameter in parameterized widgets\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id40\" rel=\"nofollow\">1.7.3 (2017-06-03)</a></h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Reduce field move failure logging from error to warning.\nLog more information like full rule.\n[jensens]</li>\n<li>Fix traceback in updateFieldsFromSchemata for forms with no schema.\n[davisagli]</li>\n<li>Clean up code.\n[gforcada]</li>\n<li>Remove unittest2 dependency\n[kakshay21]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id41\" rel=\"nofollow\">1.7.2 (2017-04-01)</a></h3>\n<p>New features:</p>\n<ul>\n<li>Make of tracebacks of <tt>plone.autoform.widgets.ParameterizedWidget</tt> calls more verbose in order to ease debugging.\n[jensens]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3><a href=\"#id42\" rel=\"nofollow\">1.7.1 (2017-02-12)</a></h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Make sure WidgetsView doesn\u2019t use acquisition in Zope 4. [davisagli]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3><a href=\"#id43\" rel=\"nofollow\">1.7.0 (2016-06-07)</a></h3>\n<p>Incompatibilities:</p>\n<ul>\n<li>Because of the ordering fix the field order in forms may be different.\nBefore this fix the order was a gamble dependent on schema order.\nSchema form hints <tt>order_after</tt> and <tt>order_before</tt> may need minor adjustments.\n<tt>plone.autoform.utils.processFieldMoves</tt> was deprecated,\nbut still works as before.\nThe new functionality is now part of <tt>plone.autoform.base.AutoFields</tt>.\n[jensens]</li>\n</ul>\n<p>New:</p>\n<ul>\n<li>Fieldset labels/descriptions we\u2019re taken from first occurence.\nIt was not possible to override them in a subsequent directive.\nAlso it was not possible to set them in a subsequent directive, if it was not set before.\nNow subsequent directives w/o a label/description are just adding the field to the fieldset.\nIf a different label and/or description is given, it replaces the existing prior loaded one.\n[jensens]</li>\n<li>The order of the fieldsets can be defined now explictly with the <tt>plone.supermodel.directives.fieldset</tt> directive.\n<tt>plone.autoform</tt> now does the sorting while fieldset processing.\n[jensens]</li>\n</ul>\n<p>Fixes:</p>\n<ul>\n<li>Implementation on how field ordering happens was unreproducible if same schemas are coming in in different orders.\nNew implementation build a well defined rule tree and processes then the field moves,\nalmost independent from the schema order.\n[jensens]</li>\n<li>Update setup.py url\n[esteele]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3><a href=\"#id44\" rel=\"nofollow\">1.6.2 (2016-02-20)</a></h3>\n<p>Fixes:</p>\n<ul>\n<li>Fix test for changed <tt>zope.interface</tt> comparison method, which\nincorrectly reports two different Interfaces from the same module\nbut with empty name as being equal.  [thet]</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3><a href=\"#id45\" rel=\"nofollow\">1.6.1 (2014-10-20)</a></h3>\n<ul>\n<li>pep8 cleanup, utf8-header,sorted imports, readability, \u2026\n[jensens]</li>\n<li>Fix issue where multiple (plone.supermodel) fieldset directive calls for the\nsame fieldset name resulted to duplicate fieldsets (e.g. when updating\nfieldset with new fields in a subschema)\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3><a href=\"#id46\" rel=\"nofollow\">1.6 (2014-02-22)</a></h3>\n<ul>\n<li>Replace deprecated test assert statements.\n[timo]</li>\n<li>Support anonymous schema (dynamic interfaces with and empty\n__name__ attribute) in autoGroups, opting to use prefix as\ngroup name for such cases.  This allows subclasses of\nAutoExtensibleForm to implement getPrefix() method as\na sufficient condition to support an unnamed schema.\n[seanupton]</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3><a href=\"#id47\" rel=\"nofollow\">1.5 (2013-08-14)</a></h3>\n<ul>\n<li>Added an option on form to allow display of empty fieldsets.\n[thomasdesvenain]</li>\n<li>fix tests\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3><a href=\"#id48\" rel=\"nofollow\">1.4 (2013-05-23)</a></h3>\n<ul>\n<li>Enhance the widget directive to allow for specifying widget parameters\nwithin the schema.\n[davisagli]</li>\n<li>Support passing widget classes in the widget directive in addition to\nIFieldWidgets.\n[davisagli]</li>\n<li>Support serializing widget parameters to XML. This requires implementing\na IWidgetExportImportHandler utility for the widget type.\n[davisagli]</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3><a href=\"#id49\" rel=\"nofollow\">1.3 (2012-08-30)</a></h3>\n<ul>\n<li>Avoid dependency on z3c.form.testing.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3><a href=\"#id50\" rel=\"nofollow\">1.2 (2012-04-15)</a></h3>\n<ul>\n<li>Moved form schema directives here from plone.directives.form, and\nreimplemented them as plone.supermodel directives to avoid depending on\ngrok.  Included directives: omitted, no_omit, mode, widget, order_before,\norder_after, read_permission, write_permission\n[davisagli]</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3><a href=\"#id51\" rel=\"nofollow\">1.1 - 2012-02-20</a></h3>\n<ul>\n<li>Added the AutoObjectSubForm class to support form hints for\nobject widget subforms.\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3><a href=\"#id52\" rel=\"nofollow\">1.0 - 2011-05-13</a></h3>\n<ul>\n<li>Raise a NotImplementedError instead of NotImplemented as that is not\nan exception but meant for comparisons and is not callable.\n[maurits]</li>\n</ul>\n</div>\n<div id=\"b7-2011-04-29\">\n<h3><a href=\"#id53\" rel=\"nofollow\">1.0b7 - 2011-04-29</a></h3>\n<ul>\n<li>Check to make sure that interfaces and field widgets resolved by the\nsupermodel handler are of the correct type.\n[elro]</li>\n<li>Add form:validator support for supermodel.\n[elro]</li>\n<li>Fix issue where permission checks were not applied correctly to schemas being\nadded with prefixes.\n[davisagli]</li>\n<li>Add MANIFEST.in.\n[WouterVH]</li>\n</ul>\n</div>\n<div id=\"b6-2011-02-11\">\n<h3><a href=\"#id54\" rel=\"nofollow\">1.0b6 - 2011-02-11</a></h3>\n<ul>\n<li>Fix WidgetsView so that _update and update do not clash.\n[elro]</li>\n<li>Fix view.txt doctest to test actual behaviour, not artifacts from test setup.\n[elro]</li>\n</ul>\n</div>\n<div id=\"b5-2011-01-11\">\n<h3><a href=\"#id55\" rel=\"nofollow\">1.0b5 - 2011-01-11</a></h3>\n<ul>\n<li>Use five.ManageSite permission to check field permissions. We\u2019ll avoid\nsniffing for Five/CMFCore permissions.zcml difference between Zope 2.12 and\n2.13. [esteele]</li>\n</ul>\n</div>\n<div id=\"b4-2010-08-05\">\n<h3><a href=\"#id56\" rel=\"nofollow\">1.0b4 - 2010-08-05</a></h3>\n<ul>\n<li>Fixed widget traversal for WidgetsView\n<a href=\"http://groups.google.com/group/dexterity-development/browse_frm/thread/280016ece3ed1462\" rel=\"nofollow\">http://groups.google.com/group/dexterity-development/browse_frm/thread/280016ece3ed1462</a>\n[29.08.2010, jbaumann]</li>\n<li>Make field permission checks use the field mode rather than the form mode.\nFixes <a href=\"http://code.google.com/p/dexterity/issues/detail?id=110\" rel=\"nofollow\">http://code.google.com/p/dexterity/issues/detail?id=110</a>\n[optilude]</li>\n<li>Removed some dead code.\nFixes <a href=\"http://code.google.com/p/dexterity/issues/detail?id=132\" rel=\"nofollow\">http://code.google.com/p/dexterity/issues/detail?id=132</a>\n[optilude, shywolf9982]</li>\n</ul>\n</div>\n<div id=\"b3-2010-04-20\">\n<h3><a href=\"#id57\" rel=\"nofollow\">1.0b3 - 2010-04-20</a></h3>\n<ul>\n<li>Properly handle the \u2018omitted\u2019 tagged value when it is set to \u2018false\u2019 for a\nfield.\n[davisagli]</li>\n<li>Make it possible to set the \u2018omitted\u2019 and \u2018mode\u2019 settings only for particular\nform interfaces.\n[davisagli]</li>\n<li>Do not omit read-only fields when rendering a form in DISPLAY mode.\n<a href=\"http://code.google.com/p/dexterity/issues/detail?id=118\" rel=\"nofollow\">http://code.google.com/p/dexterity/issues/detail?id=118</a>\n[mj]</li>\n</ul>\n</div>\n<div id=\"b2-2009-07-12\">\n<h3><a href=\"#id58\" rel=\"nofollow\">1.0b2 - 2009-07-12</a></h3>\n<ul>\n<li><p>Changed API methods and arguments to mixedCase to be more consistent with\nthe rest of Zope. This is a non-backwards-compatible change. Our profuse\napologies, but it\u2019s now or never. :-/</p>\n<p>If you find that you get import errors or unknown keyword arguments in your\ncode, please change names from foo_bar too fooBar, e.g. process_fields()\nbecomes processFields().</p>\n<p>Note in particular that the additional_schemata property is now called\nadditionalSchemata. If you have implemented this property yourself, you will\nneed to rename it!\n[optilude]</p>\n</li>\n</ul>\n</div>\n<div id=\"b1-2009-04-17\">\n<h3><a href=\"#id59\" rel=\"nofollow\">1.0b1 - 2009-04-17</a></h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7062319, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "b3668b52749a3ed100a61db2d17d70bb", "sha256": "c6d9054d200aaf62e34c7229a91c95fdbfac19d48920254c0e0f4cf4a420da24"}, "downloads": -1, "filename": "plone.autoform-1.0.zip", "has_sig": false, "md5_digest": "b3668b52749a3ed100a61db2d17d70bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69844, "upload_time": "2011-05-13T18:28:56", "upload_time_iso_8601": "2011-05-13T18:28:56.576811Z", "url": "https://files.pythonhosted.org/packages/4d/ac/c8ac937f82f80da6068bfd4158ad8d85da97d474a1f2b817034714642aaf/plone.autoform-1.0.zip", "yanked": false}], "1.0b1": [{"comment_text": "", "digests": {"md5": "c33c6f016a71ec99b5c1b6300c1554af", "sha256": "8e842d3997dd3206a550188ddbd4babfa088f508552491f0e3e916f085a012f1"}, "downloads": -1, "filename": "plone.autoform-1.0b1.tar.gz", "has_sig": false, "md5_digest": "c33c6f016a71ec99b5c1b6300c1554af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21736, "upload_time": "2009-04-17T06:23:55", "upload_time_iso_8601": "2009-04-17T06:23:55.988644Z", "url": "https://files.pythonhosted.org/packages/8d/bb/468112650c5c5e70c85050e94082cfd3906b1e56315172486933f64bf639/plone.autoform-1.0b1.tar.gz", "yanked": false}], "1.0b2": [{"comment_text": "", "digests": {"md5": "ae5e09813790856435ce64566c56869e", "sha256": "a24e15e8bd44f21047bca40fc96d56cda8b449e3ff76da5c23812497956264f4"}, "downloads": -1, "filename": "plone.autoform-1.0b2.tar.gz", "has_sig": false, "md5_digest": "ae5e09813790856435ce64566c56869e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22325, "upload_time": "2009-07-12T10:26:07", "upload_time_iso_8601": "2009-07-12T10:26:07.853832Z", "url": "https://files.pythonhosted.org/packages/b0/6c/e51134c604fd8cf3259935ee866ce6cd06f0c3deb6d7ab9ca0a428c26692/plone.autoform-1.0b2.tar.gz", "yanked": false}], "1.0b3": [{"comment_text": "", "digests": {"md5": "fedf6addc08a766d370273ddfa7d07e2", "sha256": "e692ef222910b3390cb97eac1c8b71804e77ad53c4e6cf945ebae1e6dfb817e3"}, "downloads": -1, "filename": "plone.autoform-1.0b3.zip", "has_sig": true, "md5_digest": "fedf6addc08a766d370273ddfa7d07e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47664, "upload_time": "2010-04-20T09:41:57", "upload_time_iso_8601": "2010-04-20T09:41:57.254943Z", "url": "https://files.pythonhosted.org/packages/83/67/7f8f357c34b31e2bd118f921c4ce0a5b7763ff7b2a0596adb108e6ce6a68/plone.autoform-1.0b3.zip", "yanked": false}], "1.0b4": [{"comment_text": "", "digests": {"md5": "afb3c728081189c6bf1d28d0205c5bb0", "sha256": "238946bf00c872a93f53274e1408a64316884e8b0da43b84ecc679f0b70bbbfe"}, "downloads": -1, "filename": "plone.autoform-1.0b4.zip", "has_sig": false, "md5_digest": "afb3c728081189c6bf1d28d0205c5bb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47935, "upload_time": "2010-08-05T07:05:04", "upload_time_iso_8601": "2010-08-05T07:05:04.293917Z", "url": "https://files.pythonhosted.org/packages/bb/76/53be2e073b7e13dfe27047fe0f29ec0edcbaa10db9fdc470006cc2eb3614/plone.autoform-1.0b4.zip", "yanked": false}], "1.0b5": [{"comment_text": "", "digests": {"md5": "2bb1b33e4c3a8866f5fcc4041d488f76", "sha256": "3cce7e7cf52b56e7ff6cc589f5093ce34735788732729f188f4eabc0e235b80a"}, "downloads": -1, "filename": "plone.autoform-1.0b5.zip", "has_sig": false, "md5_digest": "2bb1b33e4c3a8866f5fcc4041d488f76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48995, "upload_time": "2011-01-11T22:39:12", "upload_time_iso_8601": "2011-01-11T22:39:12.356489Z", "url": "https://files.pythonhosted.org/packages/ba/3f/5a27c9a79dcf68134d26208df75e3393fb7353286b24a606de5a6f94b9dc/plone.autoform-1.0b5.zip", "yanked": false}], "1.0b6": [{"comment_text": "", "digests": {"md5": "d3ef73d08e92a548ccb454130c7b866e", "sha256": "abd28c381ccee8a68d8cbf82570eac69e2186745ab6aacd2e43de5d636de3e3b"}, "downloads": -1, "filename": "plone.autoform-1.0b6.zip", "has_sig": false, "md5_digest": "d3ef73d08e92a548ccb454130c7b866e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49084, "upload_time": "2011-02-11T17:41:34", "upload_time_iso_8601": "2011-02-11T17:41:34.885603Z", "url": "https://files.pythonhosted.org/packages/60/a6/1d7e5e544751ec829aab1622d39c104279ec7f662d039292ec164c41c5f3/plone.autoform-1.0b6.zip", "yanked": false}], "1.0b7": [{"comment_text": "", "digests": {"md5": "4147d1d55146518643c2163a5b9041a5", "sha256": "92b01174eef813632db1e7c12ba1f004b4fac54de30b7fc7fad5a3874e9fc31d"}, "downloads": -1, "filename": "plone.autoform-1.0b7.zip", "has_sig": false, "md5_digest": "4147d1d55146518643c2163a5b9041a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69675, "upload_time": "2011-04-29T15:01:37", "upload_time_iso_8601": "2011-04-29T15:01:37.281822Z", "url": "https://files.pythonhosted.org/packages/b0/d6/b4ef2578716ddeaf7ff3bd208a204257a6ca2c8cbc9ba1df059fc7e94421/plone.autoform-1.0b7.zip", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "1e7708d55b3d88f5f361d177f7e3f6e7", "sha256": "c6f304f0d3492ffdd3525da4ff0f36b795ca310bcab2a1fd17cdea10864c59c2"}, "downloads": -1, "filename": "plone.autoform-1.1.zip", "has_sig": false, "md5_digest": "1e7708d55b3d88f5f361d177f7e3f6e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54109, "upload_time": "2012-02-21T04:14:17", "upload_time_iso_8601": "2012-02-21T04:14:17.656223Z", "url": "https://files.pythonhosted.org/packages/19/b8/0f3d164d019dd33f3c92fe2c34967767e738289bbca961be1a710fbacd2d/plone.autoform-1.1.zip", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "f6d73e2d46d3f19601e919ce1f0ef10c", "sha256": "79c39b02fa60ffb5043ac7694fc9b774aab8aa9f56f0818b41d01f6562f27ec6"}, "downloads": -1, "filename": "plone.autoform-1.2.zip", "has_sig": false, "md5_digest": "f6d73e2d46d3f19601e919ce1f0ef10c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59841, "upload_time": "2012-04-15T19:58:23", "upload_time_iso_8601": "2012-04-15T19:58:23.627931Z", "url": "https://files.pythonhosted.org/packages/f7/79/cfc60c9ad7a36d8f987a52268da9e157101157c3eff5fecfbf307b96bbe5/plone.autoform-1.2.zip", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "4cb2935ba9cda3eb3ee801ad8cda7c60", "sha256": "b8c4c8f3fabd9f6d669595494fba4a6a18aaf521daf85165a50335e97b88f071"}, "downloads": -1, "filename": "plone.autoform-1.3.zip", "has_sig": false, "md5_digest": "4cb2935ba9cda3eb3ee801ad8cda7c60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60107, "upload_time": "2012-08-30T14:55:04", "upload_time_iso_8601": "2012-08-30T14:55:04.936210Z", "url": "https://files.pythonhosted.org/packages/33/cf/d14d6a37f0a5193b3c67373c0a45da3f88ed8f196f91e20b8b74b767a877/plone.autoform-1.3.zip", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "01e5ccb59253bfaaa02c1ab4be3f212f", "sha256": "a447f9be51363435082309a61137ada2de66d94eee118d1c3f9934fdf051282f"}, "downloads": -1, "filename": "plone.autoform-1.4.zip", "has_sig": false, "md5_digest": "01e5ccb59253bfaaa02c1ab4be3f212f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58384, "upload_time": "2013-05-24T01:51:56", "upload_time_iso_8601": "2013-05-24T01:51:56.913425Z", "url": "https://files.pythonhosted.org/packages/7d/b1/cd6ea358ef5c18392058503aaf48b3ced9d55027267b99d46bf9e2dbd348/plone.autoform-1.4.zip", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "a62216fb76017077643f5af8b1e17949", "sha256": "851679000977a69cc68de5a3d5ce008f87389c13bbe4628bf737becb755c0512"}, "downloads": -1, "filename": "plone.autoform-1.5.zip", "has_sig": false, "md5_digest": "a62216fb76017077643f5af8b1e17949", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58465, "upload_time": "2013-08-13T22:19:30", "upload_time_iso_8601": "2013-08-13T22:19:30.566908Z", "url": "https://files.pythonhosted.org/packages/dd/bf/94fecbf2b6fef21cde42907486c1391a4f567572782d8f4c253611a494c1/plone.autoform-1.5.zip", "yanked": false}], "1.6": [{"comment_text": "", "digests": {"md5": "27412ab43f728064a60e2aeb564726b5", "sha256": "b637dd7851ae69ad75cd660b218fc111d7f115b05e4431402a3b0e3627d93a5a"}, "downloads": -1, "filename": "plone.autoform-1.6.zip", "has_sig": false, "md5_digest": "27412ab43f728064a60e2aeb564726b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59277, "upload_time": "2014-02-25T19:27:06", "upload_time_iso_8601": "2014-02-25T19:27:06.853640Z", "url": "https://files.pythonhosted.org/packages/00/25/f0267b73fd46bed03b19d5fcb1b1e1628763a3e7aa1b2a14a5b5d24c6e51/plone.autoform-1.6.zip", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "211ad073876a9d5385efae27da985548", "sha256": "9f1914cdcee9269086803bec009a89edd2826b70427d458cf57757951b807942"}, "downloads": -1, "filename": "plone.autoform-1.6.1.zip", "has_sig": false, "md5_digest": "211ad073876a9d5385efae27da985548", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61033, "upload_time": "2014-10-20T18:48:43", "upload_time_iso_8601": "2014-10-20T18:48:43.390273Z", "url": "https://files.pythonhosted.org/packages/7c/f1/dbec1011f4f2c7e8bd1cff565e2cae527911c9c15fbfd0a9b0bc509dd436/plone.autoform-1.6.1.zip", "yanked": false}], "1.6.2": [{"comment_text": "", "digests": {"md5": "f21e43c605ded798f115209fb24f57e8", "sha256": "b104a48a7ee2a7bd5f20839f37518829eeea7603db5377f0901fe6386828f2e6"}, "downloads": -1, "filename": "plone.autoform-1.6.2.tar.gz", "has_sig": false, "md5_digest": "f21e43c605ded798f115209fb24f57e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45047, "upload_time": "2016-02-20T22:51:46", "upload_time_iso_8601": "2016-02-20T22:51:46.729670Z", "url": "https://files.pythonhosted.org/packages/c3/c3/6634081a1dab3f20977c8ad86aad45417dd8c423d3f6f83e20c7511cba73/plone.autoform-1.6.2.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "a8fbeefec81d1f9dddca0c2222c7ca44", "sha256": "4d95abdb8e9d782e17a5663dabfbc7f175f4222a75db148451a27937449371cb"}, "downloads": -1, "filename": "plone.autoform-1.7.0.tar.gz", "has_sig": false, "md5_digest": "a8fbeefec81d1f9dddca0c2222c7ca44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49030, "upload_time": "2016-06-07T16:35:13", "upload_time_iso_8601": "2016-06-07T16:35:13.730334Z", "url": "https://files.pythonhosted.org/packages/c2/09/8fdae8772d954850b76797d1817dc5da538168499833ec12ce07f3042745/plone.autoform-1.7.0.tar.gz", "yanked": false}], "1.7.1": [{"comment_text": "", "digests": {"md5": "a373b13a5f68a1623799bdb14bf87363", "sha256": "49fb407a4e484e152d848c08527353a7113e003736b4384ad2d82b35ca0b46a3"}, "downloads": -1, "filename": "plone.autoform-1.7.1.tar.gz", "has_sig": false, "md5_digest": "a373b13a5f68a1623799bdb14bf87363", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49126, "upload_time": "2017-02-12T22:19:46", "upload_time_iso_8601": "2017-02-12T22:19:46.392740Z", "url": "https://files.pythonhosted.org/packages/e0/ab/f5f6adbb64f215f193be7f2e9263ed7ca6e44abc1311d54546582e8b1400/plone.autoform-1.7.1.tar.gz", "yanked": false}], "1.7.2": [{"comment_text": "", "digests": {"md5": "e85fe82ce154c76b0e75c8de2f230e69", "sha256": "6ddd8b12b91a82eed1f174c3f602ac007b99c0dd9ed31e6bd0689478346fe565"}, "downloads": -1, "filename": "plone.autoform-1.7.2.tar.gz", "has_sig": false, "md5_digest": "e85fe82ce154c76b0e75c8de2f230e69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49541, "upload_time": "2017-04-01T18:39:17", "upload_time_iso_8601": "2017-04-01T18:39:17.153991Z", "url": "https://files.pythonhosted.org/packages/d9/02/c71f692b8c2d4244cfb16a78a992e76d7346f5b13ae3462f91fe9003c243/plone.autoform-1.7.2.tar.gz", "yanked": false}], "1.7.3": [{"comment_text": "", "digests": {"md5": "53e3d6848300b457d2fd06beac5d758e", "sha256": "feb142567513f4816421d64abc64a31ff56683d6e36ec60076922da2f375656d"}, "downloads": -1, "filename": "plone.autoform-1.7.3-py2-none-any.whl", "has_sig": false, "md5_digest": "53e3d6848300b457d2fd06beac5d758e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 51860, "upload_time": "2017-06-03T19:14:17", "upload_time_iso_8601": "2017-06-03T19:14:17.698910Z", "url": "https://files.pythonhosted.org/packages/5e/2b/fcaef360143d34c2da2a1875f6ced0cf5bde40f47e3cf1dcf88beb5a17b1/plone.autoform-1.7.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00d1c6694024e5a873db6beb55e6cc84", "sha256": "1c27421617f95df59b58c4f3b9ffff3f8d3a797b04bda7cc9cefd7a5be72b73b"}, "downloads": -1, "filename": "plone.autoform-1.7.3.tar.gz", "has_sig": false, "md5_digest": "00d1c6694024e5a873db6beb55e6cc84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49961, "upload_time": "2017-06-03T19:14:19", "upload_time_iso_8601": "2017-06-03T19:14:19.712504Z", "url": "https://files.pythonhosted.org/packages/88/d1/00d8d1ab3665845f3614fae89ce5c7596f7e01ec317d03066c5fff0aeea6/plone.autoform-1.7.3.tar.gz", "yanked": false}], "1.7.4": [{"comment_text": "", "digests": {"md5": "8c9325c03e6f0484f80b441993a4ddfd", "sha256": "8d6c09e7ded017201715fd02b3fc71b46edc493d308cb4dcf8164e6553241387"}, "downloads": -1, "filename": "plone.autoform-1.7.4-py2-none-any.whl", "has_sig": false, "md5_digest": "8c9325c03e6f0484f80b441993a4ddfd", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 52469, "upload_time": "2017-11-25T01:30:38", "upload_time_iso_8601": "2017-11-25T01:30:38.291775Z", "url": "https://files.pythonhosted.org/packages/c4/b5/19136c8a6bf0150bb30ff46f5e3b748c3730a26f947e259a01f957cf58ae/plone.autoform-1.7.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "138dd32cb2faf339cc31aa6dd38e75f7", "sha256": "2f47e1de8e675fe65e33759363208d614414f4d85a3f3ce49816d415cbe75f97"}, "downloads": -1, "filename": "plone.autoform-1.7.4.tar.gz", "has_sig": false, "md5_digest": "138dd32cb2faf339cc31aa6dd38e75f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49184, "upload_time": "2017-11-25T01:30:40", "upload_time_iso_8601": "2017-11-25T01:30:40.354857Z", "url": "https://files.pythonhosted.org/packages/30/ce/0a07b8462e1f01692832e492349a138ab33b4f3de5415d3ceef2ece542a7/plone.autoform-1.7.4.tar.gz", "yanked": false}], "1.7.5": [{"comment_text": "", "digests": {"md5": "af8ad3fcf7485c64d6015a6c7078617f", "sha256": "51c8ef96c951000b8eeb4d4e60fd4519bbd44ac2858644841b90295531502b27"}, "downloads": -1, "filename": "plone.autoform-1.7.5-py2-none-any.whl", "has_sig": false, "md5_digest": "af8ad3fcf7485c64d6015a6c7078617f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 52725, "upload_time": "2018-02-04T22:23:29", "upload_time_iso_8601": "2018-02-04T22:23:29.950398Z", "url": "https://files.pythonhosted.org/packages/39/d1/a0c9ceaf0a742ca9ecf1662eebdc1882d7e789bb6ecf04682b659e2c0b81/plone.autoform-1.7.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "960e13be36e26d4e576f957d82188887", "sha256": "c37b55752c4e708d5619fd9e187f2b5187f546bc555e921a3fb0f54f73bd3207"}, "downloads": -1, "filename": "plone.autoform-1.7.5.tar.gz", "has_sig": false, "md5_digest": "960e13be36e26d4e576f957d82188887", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48220, "upload_time": "2018-02-04T22:23:32", "upload_time_iso_8601": "2018-02-04T22:23:32.157112Z", "url": "https://files.pythonhosted.org/packages/6c/db/7c5837c107cc143c7e34701f411b45492f7d1fba8e03bf5ecbae63ef92e6/plone.autoform-1.7.5.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "ef291357b30118b0d267d9cad0cfc70a", "sha256": "27d9f51c7816621e39166dbddd52b34cf79f0224d05953eaf40d264c4180d0c2"}, "downloads": -1, "filename": "plone.autoform-1.8.0-py2-none-any.whl", "has_sig": false, "md5_digest": "ef291357b30118b0d267d9cad0cfc70a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 45396, "upload_time": "2018-09-26T16:25:42", "upload_time_iso_8601": "2018-09-26T16:25:42.210371Z", "url": "https://files.pythonhosted.org/packages/e7/f6/10bb819df5daffa97494bd91d00d1af5f22d12e5d5a21f09979b222dc77d/plone.autoform-1.8.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44a6e4514f1d3e4663935652ac9b59ee", "sha256": "1b0cb5ba6071ba27354fdab74f7b461d271e4245022758fd5f570f78571fc4da"}, "downloads": -1, "filename": "plone.autoform-1.8.0.tar.gz", "has_sig": false, "md5_digest": "44a6e4514f1d3e4663935652ac9b59ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50133, "upload_time": "2018-09-26T16:25:43", "upload_time_iso_8601": "2018-09-26T16:25:43.945000Z", "url": "https://files.pythonhosted.org/packages/72/26/823a37f8a68dc5aeccc61bcde076f5777fe64e66892026366799d6e452ee/plone.autoform-1.8.0.tar.gz", "yanked": false}], "1.8.1": [{"comment_text": "", "digests": {"md5": "3e7aaf5a9ab4e216e720004814c16b23", "sha256": "12fbdba148f58fd9b3c7beaf93ac8b30dd2e4e5782c9a5efd5b6646003dfe580"}, "downloads": -1, "filename": "plone.autoform-1.8.1-py2-none-any.whl", "has_sig": false, "md5_digest": "3e7aaf5a9ab4e216e720004814c16b23", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 53118, "upload_time": "2018-11-01T01:34:23", "upload_time_iso_8601": "2018-11-01T01:34:23.925334Z", "url": "https://files.pythonhosted.org/packages/d1/e6/6312e0d026e653125c28b21e377aa2689ce4a4d90a8b8cf9058729be3ae4/plone.autoform-1.8.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd4d8d87d1189b43e11431862fcdcea8", "sha256": "75a1a4792e6c07785ed0280d1926e138f13de638d853002fe535b0d7262786a8"}, "downloads": -1, "filename": "plone.autoform-1.8.1.tar.gz", "has_sig": false, "md5_digest": "cd4d8d87d1189b43e11431862fcdcea8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50230, "upload_time": "2018-11-01T01:34:26", "upload_time_iso_8601": "2018-11-01T01:34:26.175338Z", "url": "https://files.pythonhosted.org/packages/0d/5a/c857d176b5353d54b6762085bac3ea9dfa51a5bad459a758fddbf052f384/plone.autoform-1.8.1.tar.gz", "yanked": false}], "1.8.2": [{"comment_text": "", "digests": {"md5": "122d49ec46897e334c9dee5220246b3d", "sha256": "4e39f0a80e1249c6657a4c9916a69a51723489f0ac183f827368336c340461ab"}, "downloads": -1, "filename": "plone.autoform-1.8.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "122d49ec46897e334c9dee5220246b3d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 45659, "upload_time": "2020-03-08T23:04:19", "upload_time_iso_8601": "2020-03-08T23:04:19.639140Z", "url": "https://files.pythonhosted.org/packages/52/c9/5686f61dbe3feaa323af11c472195cda818c13ef10cff0b0ed0f6d329b36/plone.autoform-1.8.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d21e3f781bf2aff7f6ff5ed8f36519a3", "sha256": "45ddaa961a31b82aa191491eda14df9c23c1e71e350483da0d89abc5beeb50c4"}, "downloads": -1, "filename": "plone.autoform-1.8.2.tar.gz", "has_sig": false, "md5_digest": "d21e3f781bf2aff7f6ff5ed8f36519a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52583, "upload_time": "2020-03-08T23:04:21", "upload_time_iso_8601": "2020-03-08T23:04:21.543734Z", "url": "https://files.pythonhosted.org/packages/55/81/29c5952dd5b602bb75ba4e268954a2aa7ebf5645615b655a152462f32793/plone.autoform-1.8.2.tar.gz", "yanked": false}], "1.9.0": [{"comment_text": "", "digests": {"md5": "97d6f51edf61f8e3f39da1778b07a5d2", "sha256": "6048fb85d89219656781fa741afe8f58b16c00f6c85ff0703134a583afca4264"}, "downloads": -1, "filename": "plone.autoform-1.9.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "97d6f51edf61f8e3f39da1778b07a5d2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 45914, "upload_time": "2020-04-20T19:28:03", "upload_time_iso_8601": "2020-04-20T19:28:03.024995Z", "url": "https://files.pythonhosted.org/packages/6a/e4/3b4907610c64e756a8d95427b4bd5c6791af9f3ea71f517ecd7d261e46dd/plone.autoform-1.9.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6549c1817b504b616745d86c624a0ef", "sha256": "9c0c73726cab676ad8d35e7e98387ae6ea2dcdbff7f5a0b8a7ef36dd66b1136c"}, "downloads": -1, "filename": "plone.autoform-1.9.0.tar.gz", "has_sig": false, "md5_digest": "d6549c1817b504b616745d86c624a0ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52984, "upload_time": "2020-04-20T19:28:05", "upload_time_iso_8601": "2020-04-20T19:28:05.406955Z", "url": "https://files.pythonhosted.org/packages/29/ad/aec9c680d6bf51290daefe28630ccab3f33ec6cdd3201a5014eae6fd70b8/plone.autoform-1.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "97d6f51edf61f8e3f39da1778b07a5d2", "sha256": "6048fb85d89219656781fa741afe8f58b16c00f6c85ff0703134a583afca4264"}, "downloads": -1, "filename": "plone.autoform-1.9.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "97d6f51edf61f8e3f39da1778b07a5d2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 45914, "upload_time": "2020-04-20T19:28:03", "upload_time_iso_8601": "2020-04-20T19:28:03.024995Z", "url": "https://files.pythonhosted.org/packages/6a/e4/3b4907610c64e756a8d95427b4bd5c6791af9f3ea71f517ecd7d261e46dd/plone.autoform-1.9.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6549c1817b504b616745d86c624a0ef", "sha256": "9c0c73726cab676ad8d35e7e98387ae6ea2dcdbff7f5a0b8a7ef36dd66b1136c"}, "downloads": -1, "filename": "plone.autoform-1.9.0.tar.gz", "has_sig": false, "md5_digest": "d6549c1817b504b616745d86c624a0ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52984, "upload_time": "2020-04-20T19:28:05", "upload_time_iso_8601": "2020-04-20T19:28:05.406955Z", "url": "https://files.pythonhosted.org/packages/29/ad/aec9c680d6bf51290daefe28630ccab3f33ec6cdd3201a5014eae6fd70b8/plone.autoform-1.9.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:02 2020"}