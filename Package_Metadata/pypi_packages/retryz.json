{"info": {"author": "Cedric Zhuang", "author_email": "jealous@163.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Utilities"], "description": "Retry Decorator\n===============\n\n.. image:: https://img.shields.io/travis/jealous/retryz.svg\n    :target: https://travis-ci.org/jealous/retryz\n.. image:: https://img.shields.io/coveralls/jealous/retryz.svg\n    :target: https://coveralls.io/github/jealous/retryz\n.. image:: https://img.shields.io/pypi/v/retryz.svg\n    :target: https://pypi.python.org/pypi/retryz\n\nVERSION: 0.1.9\n\nIntroduction\n------------\n\nFunction decorator that helps to retry the function under certain criteria.\n\nThis package contains the ``retry`` decorator and a bunch of configuration \nparameters for this decorator. \n\nTested on python 2.7 and python 3.4.\n\nFor quick start, check the tutorial section of this page.\nCheck [test_retryz.py](test/test_retryz.py) for detail examples.\n\nInstallation\n------------\n\n``pip install retryz``\n\n\nLicense\n-------\n\n`Apache License version 2`_\n\nTutorial\n--------\n\n- Retry if `ValueError` is caught.\n\n.. code-block:: python\n\n    @retry(on_error=ValueError)\n    def my_func():\n        ...\n\n- Retry if `ValueError` or `TypeError` is caught.\n\n.. code-block:: python\n\n    @retry(on_error=lambda e: isinstance(e, (ValueError, TypeError)))\n    def my_func():\n        ...\n\n- Retry until `TypeError` is caught.\n\n.. code-block:: python\n\n    @retry(on_error=lambda e: not isinstance(e, TypeError))\n    def my_func():\n        ...\n\n- Retry until `TypeError` or `AttributeError` is caught.\n\n.. code-block:: python\n\n    @retry(on_error=lambda e: not isinstance(e, (TypeError, AttributeError)))\n    def my_func():\n        ...\n\n- When ``on_error`` is a callback,\n  it will retry until ``on_error`` returns ``False``.  Note that callback \n  takes one parameter which is the error instance raised by the decorated \n  function.\n\n.. code-block:: python\n\n    def _error_callback(self, ex):\n        assert_that(ex, instance_of(TypeError))\n        return self.call_count != 4\n    \n    @retry(on_error=_error_callback)\n    def error_call_back(self):\n        ...\n\n- Retry if returns certain value.\n\n.. code-block:: python\n\n    @retry(on_return=True)\n    def my_func(self):\n        ...\n\n- Retry if return value in the list.\n\n.. code-block:: python\n\n    @retry(on_return=lambda x: x in (1, 2, 3, 4, 5))\n    def my_func(self):\n        ...\n\n- Retry until certain value is returned.\n\n.. code-block:: python\n\n    @retry(on_return=lambda x: x != 4)\n    def my_func(self):\n        ...\n\n- Retry until any of the value is returned.\n\n.. code-block:: python\n\n    @retry(on_return=lambda x: x not in [3, 4])\n    def my_func(self):\n        ...\n\n\n- When ``on_return`` is a callback, \n  it will retry until ``on_return`` returns ``False``.  Note that callback \n  takes one parameter which is the return value of the decorated function.\n\n.. code-block:: python\n\n    def _return_callback(ret):\n        return 4 + ret < 7\n    \n    @retry(on_return=_return_callback)\n    def my_func(self):\n        ...\n\n- Retry until timeout (in seconds)\n\n.. code-block:: python\n    \n    @retry(timeout=0.1)\n    def my_func():\n        ...\n\n- Retry maximum X times.\n\n.. code-block:: python\n\n    @retry(limit=3)\n    def my_func():\n        ...\n\n    # or you could specify a callback\n    @retry(limit=lambda: 4)\n    def my_func_x():\n        ...\n\n\n- Wait X seconds between each retry.\n\n.. code-block:: python\n\n    @retry(wait=0.1, timeout=0.3)\n    def my_func():\n        ...\n\n\n- When ``wait`` is a callback, it will wait for the amount of\n  seconds returned by the callback.\n  The callback takes one parameter which is the current count of retry.\n\n.. code-block:: python\n\n    def _wait_callback(self, tried):\n        return 2 ** tried\n    \n    @retry(wait=_wait_callback, timeout=0.1)\n    def my_func():\n        ...\n\n\n- ``on_retry`` could be used to specify a callback.  This callback\n  is a function with no parameter.  It will be invoked before each\n  retry.  Here is a typical usage.\n\n.. code-block:: python\n\n    def do_login():\n        # login if not\n        ...\n        \n    @retry(on_retry=do_login, limit=2)\n    def requests(resource_id):\n        ...\n\n\n- ``retry`` could also be called in a functional style.\n  Note that the return value is a function.  If you want to call\n  it, you need to add an extra ``()``.\n\n.. code-block:: python\n\n    def foo():\n        ...\n        \n    retry(foo, limit=3, timeout=5)()\n\n \n\nTo file issue, please visit:\n\nhttps://github.com/jealous/retryz\n\n\nContact author:\n\n- Cedric Zhuang <jealous@163.com>\n\n.. _Apache License version 2: LICENSE.txt", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jealous/retryz", "keywords": "retry decorator", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "retryz", "package_url": "https://pypi.org/project/retryz/", "platform": "any", "project_url": "https://pypi.org/project/retryz/", "project_urls": {"Homepage": "http://github.com/jealous/retryz"}, "release_url": "https://pypi.org/project/retryz/0.1.9/", "requires_dist": null, "requires_python": "", "summary": "Retry decorator with a bunch of configuration parameters.", "version": "0.1.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/jealous/retryz\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/jealous/retryz.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ae2083d7d1f60d7f4db32e8bc43d416ab0e9dcb/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6a65616c6f75732f72657472797a2e737667\"></a>\n<a href=\"https://coveralls.io/github/jealous/retryz\" rel=\"nofollow\"><img alt=\"https://img.shields.io/coveralls/jealous/retryz.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b153bb669535386a5942fbe1b7d58d9c08b506a/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6a65616c6f75732f72657472797a2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/retryz\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/retryz.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1aef404675f837b557ba004fd942230a2a2956a0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f72657472797a2e737667\"></a>\n<p>VERSION: 0.1.9</p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Function decorator that helps to retry the function under certain criteria.</p>\n<p>This package contains the <tt>retry</tt> decorator and a bunch of configuration\nparameters for this decorator.</p>\n<p>Tested on python 2.7 and python 3.4.</p>\n<p>For quick start, check the tutorial section of this page.\nCheck [test_retryz.py](test/test_retryz.py) for detail examples.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pip install retryz</tt></p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><a href=\"LICENSE.txt\" rel=\"nofollow\">Apache License version 2</a></p>\n</div>\n<div id=\"tutorial\">\n<h2>Tutorial</h2>\n<ul>\n<li>Retry if <cite>ValueError</cite> is caught.</li>\n</ul>\n<pre><span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">on_error</span><span class=\"o\">=</span><span class=\"ne\">ValueError</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_func</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>Retry if <cite>ValueError</cite> or <cite>TypeError</cite> is caught.</li>\n</ul>\n<pre><span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">on_error</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">e</span><span class=\"p\">:</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"ne\">ValueError</span><span class=\"p\">,</span> <span class=\"ne\">TypeError</span><span class=\"p\">)))</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_func</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>Retry until <cite>TypeError</cite> is caught.</li>\n</ul>\n<pre><span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">on_error</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">e</span><span class=\"p\">:</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"ne\">TypeError</span><span class=\"p\">))</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_func</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>Retry until <cite>TypeError</cite> or <cite>AttributeError</cite> is caught.</li>\n</ul>\n<pre><span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">on_error</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">e</span><span class=\"p\">:</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"ne\">TypeError</span><span class=\"p\">,</span> <span class=\"ne\">AttributeError</span><span class=\"p\">)))</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_func</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>When <tt>on_error</tt> is a callback,\nit will retry until <tt>on_error</tt> returns <tt>False</tt>.  Note that callback\ntakes one parameter which is the error instance raised by the decorated\nfunction.</li>\n</ul>\n<pre><span class=\"k\">def</span> <span class=\"nf\">_error_callback</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ex</span><span class=\"p\">):</span>\n    <span class=\"n\">assert_that</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">,</span> <span class=\"n\">instance_of</span><span class=\"p\">(</span><span class=\"ne\">TypeError</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">call_count</span> <span class=\"o\">!=</span> <span class=\"mi\">4</span>\n\n<span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">on_error</span><span class=\"o\">=</span><span class=\"n\">_error_callback</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">error_call_back</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>Retry if returns certain value.</li>\n</ul>\n<pre><span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">on_return</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_func</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>Retry if return value in the list.</li>\n</ul>\n<pre><span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">on_return</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_func</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>Retry until certain value is returned.</li>\n</ul>\n<pre><span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">on_return</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">!=</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_func</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>Retry until any of the value is returned.</li>\n</ul>\n<pre><span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">on_return</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_func</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>When <tt>on_return</tt> is a callback,\nit will retry until <tt>on_return</tt> returns <tt>False</tt>.  Note that callback\ntakes one parameter which is the return value of the decorated function.</li>\n</ul>\n<pre><span class=\"k\">def</span> <span class=\"nf\">_return_callback</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"mi\">4</span> <span class=\"o\">+</span> <span class=\"n\">ret</span> <span class=\"o\">&lt;</span> <span class=\"mi\">7</span>\n\n<span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">on_return</span><span class=\"o\">=</span><span class=\"n\">_return_callback</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_func</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>Retry until timeout (in seconds)</li>\n</ul>\n<pre><span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_func</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>Retry maximum X times.</li>\n</ul>\n<pre><span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_func</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"c1\"># or you could specify a callback</span>\n<span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_func_x</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>Wait X seconds between each retry.</li>\n</ul>\n<pre><span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">wait</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_func</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>When <tt>wait</tt> is a callback, it will wait for the amount of\nseconds returned by the callback.\nThe callback takes one parameter which is the current count of retry.</li>\n</ul>\n<pre><span class=\"k\">def</span> <span class=\"nf\">_wait_callback</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tried</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"mi\">2</span> <span class=\"o\">**</span> <span class=\"n\">tried</span>\n\n<span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">wait</span><span class=\"o\">=</span><span class=\"n\">_wait_callback</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_func</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li><tt>on_retry</tt> could be used to specify a callback.  This callback\nis a function with no parameter.  It will be invoked before each\nretry.  Here is a typical usage.</li>\n</ul>\n<pre><span class=\"k\">def</span> <span class=\"nf\">do_login</span><span class=\"p\">():</span>\n    <span class=\"c1\"># login if not</span>\n    <span class=\"o\">...</span>\n\n<span class=\"nd\">@retry</span><span class=\"p\">(</span><span class=\"n\">on_retry</span><span class=\"o\">=</span><span class=\"n\">do_login</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">requests</span><span class=\"p\">(</span><span class=\"n\">resource_id</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li><tt>retry</tt> could also be called in a functional style.\nNote that the return value is a function.  If you want to call\nit, you need to add an extra <tt>()</tt>.</li>\n</ul>\n<pre><span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"n\">retry</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)()</span>\n</pre>\n<p>To file issue, please visit:</p>\n<p><a href=\"https://github.com/jealous/retryz\" rel=\"nofollow\">https://github.com/jealous/retryz</a></p>\n<p>Contact author:</p>\n<ul>\n<li>Cedric Zhuang &lt;<a href=\"mailto:jealous%40163.com\">jealous<span>@</span>163<span>.</span>com</a>&gt;</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2888992, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5f9585721f5dd331fe51234a4945ba65", "sha256": "11eebe5ac8a90b9a464fb26d1ad96ca028e0eb2f85a9c676483aba3ba0739e82"}, "downloads": -1, "filename": "retryz-0.1.0.zip", "has_sig": false, "md5_digest": "5f9585721f5dd331fe51234a4945ba65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9633, "upload_time": "2015-12-21T10:21:12", "upload_time_iso_8601": "2015-12-21T10:21:12.632164Z", "url": "https://files.pythonhosted.org/packages/67/04/6db9c347e4371e91a15f04a37d774da7f047b688e2bca6002a2ee8f07c69/retryz-0.1.0.zip", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "756915e52c72c291b955cb77213a29f2", "sha256": "daf4b46159968adeaeeb53e7d9641db03d489ea2731e0ec76c90557d5f052541"}, "downloads": -1, "filename": "retryz-0.1.1.zip", "has_sig": false, "md5_digest": "756915e52c72c291b955cb77213a29f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9639, "upload_time": "2016-01-04T13:58:46", "upload_time_iso_8601": "2016-01-04T13:58:46.797019Z", "url": "https://files.pythonhosted.org/packages/9c/fe/a53df1565858a1a445439738fa83efee00b4d3f88c9b8686c88d7f7505c1/retryz-0.1.1.zip", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "9ebe1257de24f8ff9d1a32c7ffab0369", "sha256": "0ba7152f28d491a0f7591d7fe8ccad2d08eb13dc7fe6dec62faab3fda67d12ed"}, "downloads": -1, "filename": "retryz-0.1.2.zip", "has_sig": false, "md5_digest": "9ebe1257de24f8ff9d1a32c7ffab0369", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9906, "upload_time": "2016-01-13T06:01:19", "upload_time_iso_8601": "2016-01-13T06:01:19.655495Z", "url": "https://files.pythonhosted.org/packages/46/49/e93b65d64df4ba7510023f51131a58953b1faaefcbe4986c997acac873c5/retryz-0.1.2.zip", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f727d40dd784ff9f16bdf005e334eea1", "sha256": "9764dfc93554d16dcbda1fbc2dacb97cd7449a1b8982e033de192897b63fd550"}, "downloads": -1, "filename": "retryz-0.1.3.zip", "has_sig": false, "md5_digest": "f727d40dd784ff9f16bdf005e334eea1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9951, "upload_time": "2016-01-14T03:33:37", "upload_time_iso_8601": "2016-01-14T03:33:37.957226Z", "url": "https://files.pythonhosted.org/packages/b1/61/019311d7093bb2782337abe484ddd4aa2dc1bfe426573b3f756bec79ab19/retryz-0.1.3.zip", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "46777d4e1dec6222b8b478b9ed8bb912", "sha256": "d1870d03fce049b7993ae6a00abe5e66a934e63f01379c7c13d38bd41391f880"}, "downloads": -1, "filename": "retryz-0.1.4.zip", "has_sig": false, "md5_digest": "46777d4e1dec6222b8b478b9ed8bb912", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10375, "upload_time": "2016-01-15T16:25:58", "upload_time_iso_8601": "2016-01-15T16:25:58.579445Z", "url": "https://files.pythonhosted.org/packages/29/48/94866179d64a4ab17a6a59a072f8466e841833df0e0a1746ddb158d936ad/retryz-0.1.4.zip", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "364c5d9fc46fe7699ec14a83a4541a78", "sha256": "6175c48f542c930a3730ff291b7206b5c8b765ce23d130fd62351e1b8b613228"}, "downloads": -1, "filename": "retryz-0.1.5.zip", "has_sig": false, "md5_digest": "364c5d9fc46fe7699ec14a83a4541a78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15313, "upload_time": "2016-03-23T09:22:19", "upload_time_iso_8601": "2016-03-23T09:22:19.558371Z", "url": "https://files.pythonhosted.org/packages/ee/00/69fd8ce5a8daca77337590afdd5e65fa21892e3af472e4b199f5f289a7ff/retryz-0.1.5.zip", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "63abde244cd4246a16dd2b6d6e5e1006", "sha256": "1312c6649aea239e5abb97a7161d2ba37d088dea5dc6860b65e2c66f828786f5"}, "downloads": -1, "filename": "retryz-0.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "63abde244cd4246a16dd2b6d6e5e1006", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10122, "upload_time": "2016-05-19T04:07:42", "upload_time_iso_8601": "2016-05-19T04:07:42.551952Z", "url": "https://files.pythonhosted.org/packages/4b/ef/2d8518f835faaf3e76811150324331e428716e06f3ad4304502fbebbf5fd/retryz-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "302edae81207e6e709a651fee07ae68f", "sha256": "e7c3157972a5994cf08aad05052b09fa0735677002939034311389dd7b266fca"}, "downloads": -1, "filename": "retryz-0.1.6.zip", "has_sig": false, "md5_digest": "302edae81207e6e709a651fee07ae68f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15439, "upload_time": "2016-06-21T03:45:46", "upload_time_iso_8601": "2016-06-21T03:45:46.982596Z", "url": "https://files.pythonhosted.org/packages/1b/f0/b9bb938e311278676d9a517eac0ecce71dcd8aa122c4d143928230cf5fa3/retryz-0.1.6.zip", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "1475379d73fe639c78079914f1bcae04", "sha256": "0e251600694e064f8c64d1b081f31ce34a653aba5be3962532c84c5737d862d1"}, "downloads": -1, "filename": "retryz-0.1.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1475379d73fe639c78079914f1bcae04", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10088, "upload_time": "2016-06-21T04:29:13", "upload_time_iso_8601": "2016-06-21T04:29:13.528690Z", "url": "https://files.pythonhosted.org/packages/6f/c2/771bec91b0e8041e223b4a187b7f81ec99f039878f7e89c963de341ea21e/retryz-0.1.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a4e385e67124349eef1eb0b2f6cd9f8", "sha256": "1728397c0cb1b647ea4152c6fa196a61072eda6da5a9edb45628fc56ace526d8"}, "downloads": -1, "filename": "retryz-0.1.7.zip", "has_sig": false, "md5_digest": "7a4e385e67124349eef1eb0b2f6cd9f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15554, "upload_time": "2016-06-21T04:29:19", "upload_time_iso_8601": "2016-06-21T04:29:19.640597Z", "url": "https://files.pythonhosted.org/packages/95/48/ff04b2d0336df1a9c0e620b50f109db6acf847426b5039f9517c84e558cb/retryz-0.1.7.zip", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "f0cf692c6b21caa46b25713614e34300", "sha256": "d5d2017a8d334a53f6a8b03d83a32c30d9aa6875b2f3497431290ffeeaaf8b83"}, "downloads": -1, "filename": "retryz-0.1.8.zip", "has_sig": false, "md5_digest": "f0cf692c6b21caa46b25713614e34300", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15638, "upload_time": "2016-08-02T09:06:08", "upload_time_iso_8601": "2016-08-02T09:06:08.935654Z", "url": "https://files.pythonhosted.org/packages/a8/5b/35f5e9c23b533a676b831c695671b54d2d0781d121989ee07bf80c290f78/retryz-0.1.8.zip", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "57e5ffe484c24d9ee9794b2e21a12914", "sha256": "8f4598c7fe02492789b05ecf59074908775bb0e3ce6486c17edc6b5710e1f19c"}, "downloads": -1, "filename": "retryz-0.1.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "57e5ffe484c24d9ee9794b2e21a12914", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 10131, "upload_time": "2017-05-21T15:19:55", "upload_time_iso_8601": "2017-05-21T15:19:55.480925Z", "url": "https://files.pythonhosted.org/packages/cf/eb/f52955956596f857ff64cc4c689b5d4c77bc2aaec7f86f5ff5d87d013826/retryz-0.1.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31b3dcbf34bd5ad6a6709044242c0e3e", "sha256": "d8a138009ca66032e6bd39e1bc0a5d8f3bc0f272763c8646ad73d1b6faf37915"}, "downloads": -1, "filename": "retryz-0.1.9.tar.gz", "has_sig": false, "md5_digest": "31b3dcbf34bd5ad6a6709044242c0e3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10319, "upload_time": "2017-05-21T15:19:52", "upload_time_iso_8601": "2017-05-21T15:19:52.135660Z", "url": "https://files.pythonhosted.org/packages/39/2b/9acb4ee95954db400cfa056d2d7f06860f12902c33db9f3bc149f1d657b1/retryz-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "57e5ffe484c24d9ee9794b2e21a12914", "sha256": "8f4598c7fe02492789b05ecf59074908775bb0e3ce6486c17edc6b5710e1f19c"}, "downloads": -1, "filename": "retryz-0.1.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "57e5ffe484c24d9ee9794b2e21a12914", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 10131, "upload_time": "2017-05-21T15:19:55", "upload_time_iso_8601": "2017-05-21T15:19:55.480925Z", "url": "https://files.pythonhosted.org/packages/cf/eb/f52955956596f857ff64cc4c689b5d4c77bc2aaec7f86f5ff5d87d013826/retryz-0.1.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31b3dcbf34bd5ad6a6709044242c0e3e", "sha256": "d8a138009ca66032e6bd39e1bc0a5d8f3bc0f272763c8646ad73d1b6faf37915"}, "downloads": -1, "filename": "retryz-0.1.9.tar.gz", "has_sig": false, "md5_digest": "31b3dcbf34bd5ad6a6709044242c0e3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10319, "upload_time": "2017-05-21T15:19:52", "upload_time_iso_8601": "2017-05-21T15:19:52.135660Z", "url": "https://files.pythonhosted.org/packages/39/2b/9acb4ee95954db400cfa056d2d7f06860f12902c33db9f3bc149f1d657b1/retryz-0.1.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:23 2020"}