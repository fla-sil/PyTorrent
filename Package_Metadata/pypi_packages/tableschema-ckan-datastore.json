{"info": {"author": "Open Knowledge International", "author_email": "info@okfn.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# tableschema-ckan-datastore-py\n\n[![Travis](https://img.shields.io/travis/frictionlessdata/tableschema-ckan-datastore-py/master.svg)](https://travis-ci.org/frictionlessdata/tableschema-ckan-datastore-py)\n[![Coveralls](http://img.shields.io/coveralls/frictionlessdata/tableschema-ckan-datastore-py/master.svg)](https://coveralls.io/r/frictionlessdata/tableschema-ckan-datastore-py?branch=master)\n[![PyPi](https://img.shields.io/pypi/v/tableschema-ckan-datastore.svg)](https://pypi.python.org/pypi/tableschema-ckan-datastore)\n[![Github](https://img.shields.io/badge/github-master-brightgreen)](https://github.com/frictionlessdata/tableschema-ckan-datastore-py)\n[![Gitter](https://img.shields.io/gitter/room/frictionlessdata/chat.svg)](https://gitter.im/frictionlessdata/chat)\n\nGenerate and load CKAN DataStore tables based on [Table Schema](http://specs.frictionlessdata.io/table-schema/) descriptors.\n\n## Features\n\n- implements `tableschema.Storage` interface\n\n## Contents\n\n<!--TOC-->\n\n  - [Getting Started](#getting-started)\n    - [Installation](#installation)\n  - [Documentation](#documentation)\n  - [API Reference](#api-reference)\n    - [`Storage`](#storage)\n  - [Contributing](#contributing)\n  - [Changelog](#changelog)\n\n<!--TOC-->\n\n## Getting Started\n\n### Installation\n\nThe package use semantic versioning. It means that major versions  could include breaking changes. It's highly recommended to specify `package` version range in your `setup/requirements` file e.g. `package>=1.0,<2.0`.\n\n```bash\npip install tableschema-ckan-datastore\n```\n\n## Documentation\n\nWhen writing data, tableschema-ckan-datastore uses the [CKAN API `datastore_upsert` endpoint](https://ckan.readthedocs.io/en/latest/maintaining/datastore.html#ckanext.datastore.logic.action.datastore_upsert) with the `upsert` method. This requires a unique key in the data defined by a [Table Schema primary key property](https://specs.frictionlessdata.io/table-schema/#primary-key). If your data has a primary key, you can use the `table.save` method:\n\n```python\nfrom tableschema import Table\n\n# Load and save CKAN DataStore record\nresource_id = 'bd79c992-40f0-454a-a0ff-887f84a792fb'\nbase_url = 'https://demo.ckan.org'\ndataset_id = 'test-dataset-010203'\napi_key = 'my-ckan-user-api-key'\n\ntable = Table('data.csv', schema='schema.json')  # data.csv has primary keys\ntable.save(resource_id,\n           storage='ckan_datastore',\n           base_url=base_url,\n           dataset_id=dataset_id,\n           api_key=api_key)\n```\n\nIf you need to define the method used to save data to the DataStore, you can create the `tableschema.Storage` object directly and specify which method parameter to use:\n\n```python\nimport io\nimport json\nfrom tabulator import Stream\nfrom tableschema import Storage\n\n# Load and save CKAN DataStore record\nresource_id = 'bd79c992-40f0-454a-a0ff-887f84a792fb'\nbase_url = 'https://demo.ckan.org'\ndataset_id = 'test-dataset-010203'\napi_key = 'my-ckan-user-api-key'\n\nschema = json.load(io.open('schema.json', encoding='utf-8'))\ndata = Stream('data.csv', headers=1).open()\n\nstorage = Storage.connect('ckan_datastore',\n                          base_url=base_url,\n                          dataset_id=dataset_id,\n                          api_key=api_key)\nstorage.create(resource_id, schema, force=True))\nstorage.write(resource_id, data, method='insert')  # specify the datastore_upsert method\n```\n\n## API Reference\n\n### `Storage`\n```python\nStorage(self, base_url, dataset_id=None, api_key=None)\n```\nCkan Datastore storage\n\nPackage implements\n[Tabular Storage](https://github.com/frictionlessdata/tableschema-py#storage)\ninterface (see full documentation on the link):\n\n![Storage](https://i.imgur.com/RQgrxqp.png)\n\n> Only additional API is documented\n\n__Arguments__\n- __base_url (str)__:\n- __the base url (and scheme) for the CKAN instance (e.g. http__://demo.ckan.org).\n- __dataset_id (str)__:\n        id or name of the CKAN dataset we wish to use as the bucket source.\n        If missing, all tables in the DataStore are used.\n- __api_key (str)__:\n        either a CKAN user api key or, if in the format `env:CKAN_API_KEY_NAME`,\n        an env var that defines an api key.\n\n\n## Contributing\n\n> The project follows the [Open Knowledge International coding standards](https://github.com/okfn/coding-standards).\n\nRecommended way to get started is to create and activate a project virtual environment.\nTo install package and development dependencies into active environment:\n\n```bash\n$ make install\n```\n\nTo run tests with linting and coverage:\n\n```bash\n$ make test\n```\n\n## Changelog\n\nHere described only breaking and the most important changes. The full changelog and documentation for all released versions could be found in nicely formatted [commit history](https://github.com/frictionlessdata/tableschema-ckan-datastore-py/commits/master).\n\n#### v1.1\n\n- Increase max size of a bucket to 100 resources\n\n#### v1.0\n\n- Initial driver implementation\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/frictionlessdata/tableschema-ckan-datastore-py", "keywords": "frictionless data,ckan,datastore", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tableschema-ckan-datastore", "package_url": "https://pypi.org/project/tableschema-ckan-datastore/", "platform": "", "project_url": "https://pypi.org/project/tableschema-ckan-datastore/", "project_urls": {"Homepage": "https://github.com/frictionlessdata/tableschema-ckan-datastore-py"}, "release_url": "https://pypi.org/project/tableschema-ckan-datastore/1.1.0/", "requires_dist": ["six (>=1.9)", "tableschema (>=1.0)", "mock ; extra == 'develop'", "pylama ; extra == 'develop'", "pytest ; extra == 'develop'", "pytest-cov ; extra == 'develop'", "tox ; extra == 'develop'", "python-dotenv ; extra == 'develop'", "requests-mock ; extra == 'develop'"], "requires_python": "", "summary": "Generate CKAN DataStore tables, load and extract data, based on Table Schema descriptors.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>tableschema-ckan-datastore-py</h1>\n<p><a href=\"https://travis-ci.org/frictionlessdata/tableschema-ckan-datastore-py\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d659f847bd29483cf5ea7a82ebd07782542b03a3/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6672696374696f6e6c657373646174612f7461626c65736368656d612d636b616e2d6461746173746f72652d70792f6d61737465722e737667\"></a>\n<a href=\"https://coveralls.io/r/frictionlessdata/tableschema-ckan-datastore-py?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b85cbab48fdf38f479ef6ca74a61f80c2424da6/687474703a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6672696374696f6e6c657373646174612f7461626c65736368656d612d636b616e2d6461746173746f72652d70792f6d61737465722e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/tableschema-ckan-datastore\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8650167d284a038169b6db484c7fbadbe6028a1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7461626c65736368656d612d636b616e2d6461746173746f72652e737667\"></a>\n<a href=\"https://github.com/frictionlessdata/tableschema-ckan-datastore-py\" rel=\"nofollow\"><img alt=\"Github\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe3b85e910b303fc497328fd9e064a0813699a67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746875622d6d61737465722d627269676874677265656e\"></a>\n<a href=\"https://gitter.im/frictionlessdata/chat\" rel=\"nofollow\"><img alt=\"Gitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb17f2481df87e64c9f854d8900ea6aaf373ea77/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f6672696374696f6e6c657373646174612f636861742e737667\"></a></p>\n<p>Generate and load CKAN DataStore tables based on <a href=\"http://specs.frictionlessdata.io/table-schema/\" rel=\"nofollow\">Table Schema</a> descriptors.</p>\n<h2>Features</h2>\n<ul>\n<li>implements <code>tableschema.Storage</code> interface</li>\n</ul>\n<h2>Contents</h2>\n\n<ul>\n<li><a href=\"#getting-started\" rel=\"nofollow\">Getting Started</a>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n</ul>\n</li>\n<li><a href=\"#documentation\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"#api-reference\" rel=\"nofollow\">API Reference</a>\n<ul>\n<li><a href=\"#storage\" rel=\"nofollow\"><code>Storage</code></a></li>\n</ul>\n</li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#changelog\" rel=\"nofollow\">Changelog</a></li>\n</ul>\n\n<h2>Getting Started</h2>\n<h3>Installation</h3>\n<p>The package use semantic versioning. It means that major versions  could include breaking changes. It's highly recommended to specify <code>package</code> version range in your <code>setup/requirements</code> file e.g. <code>package&gt;=1.0,&lt;2.0</code>.</p>\n<pre>pip install tableschema-ckan-datastore\n</pre>\n<h2>Documentation</h2>\n<p>When writing data, tableschema-ckan-datastore uses the <a href=\"https://ckan.readthedocs.io/en/latest/maintaining/datastore.html#ckanext.datastore.logic.action.datastore_upsert\" rel=\"nofollow\">CKAN API <code>datastore_upsert</code> endpoint</a> with the <code>upsert</code> method. This requires a unique key in the data defined by a <a href=\"https://specs.frictionlessdata.io/table-schema/#primary-key\" rel=\"nofollow\">Table Schema primary key property</a>. If your data has a primary key, you can use the <code>table.save</code> method:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tableschema</span> <span class=\"kn\">import</span> <span class=\"n\">Table</span>\n\n<span class=\"c1\"># Load and save CKAN DataStore record</span>\n<span class=\"n\">resource_id</span> <span class=\"o\">=</span> <span class=\"s1\">'bd79c992-40f0-454a-a0ff-887f84a792fb'</span>\n<span class=\"n\">base_url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://demo.ckan.org'</span>\n<span class=\"n\">dataset_id</span> <span class=\"o\">=</span> <span class=\"s1\">'test-dataset-010203'</span>\n<span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s1\">'my-ckan-user-api-key'</span>\n\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"s1\">'data.csv'</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"s1\">'schema.json'</span><span class=\"p\">)</span>  <span class=\"c1\"># data.csv has primary keys</span>\n<span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">resource_id</span><span class=\"p\">,</span>\n           <span class=\"n\">storage</span><span class=\"o\">=</span><span class=\"s1\">'ckan_datastore'</span><span class=\"p\">,</span>\n           <span class=\"n\">base_url</span><span class=\"o\">=</span><span class=\"n\">base_url</span><span class=\"p\">,</span>\n           <span class=\"n\">dataset_id</span><span class=\"o\">=</span><span class=\"n\">dataset_id</span><span class=\"p\">,</span>\n           <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"n\">api_key</span><span class=\"p\">)</span>\n</pre>\n<p>If you need to define the method used to save data to the DataStore, you can create the <code>tableschema.Storage</code> object directly and specify which method parameter to use:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">io</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tabulator</span> <span class=\"kn\">import</span> <span class=\"n\">Stream</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tableschema</span> <span class=\"kn\">import</span> <span class=\"n\">Storage</span>\n\n<span class=\"c1\"># Load and save CKAN DataStore record</span>\n<span class=\"n\">resource_id</span> <span class=\"o\">=</span> <span class=\"s1\">'bd79c992-40f0-454a-a0ff-887f84a792fb'</span>\n<span class=\"n\">base_url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://demo.ckan.org'</span>\n<span class=\"n\">dataset_id</span> <span class=\"o\">=</span> <span class=\"s1\">'test-dataset-010203'</span>\n<span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s1\">'my-ckan-user-api-key'</span>\n\n<span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'schema.json'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf-8'</span><span class=\"p\">))</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">Stream</span><span class=\"p\">(</span><span class=\"s1\">'data.csv'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">()</span>\n\n<span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"n\">Storage</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s1\">'ckan_datastore'</span><span class=\"p\">,</span>\n                          <span class=\"n\">base_url</span><span class=\"o\">=</span><span class=\"n\">base_url</span><span class=\"p\">,</span>\n                          <span class=\"n\">dataset_id</span><span class=\"o\">=</span><span class=\"n\">dataset_id</span><span class=\"p\">,</span>\n                          <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"n\">api_key</span><span class=\"p\">)</span>\n<span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">resource_id</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"p\">,</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">resource_id</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'insert'</span><span class=\"p\">)</span>  <span class=\"c1\"># specify the datastore_upsert method</span>\n</pre>\n<h2>API Reference</h2>\n<h3><code>Storage</code></h3>\n<pre><span class=\"n\">Storage</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">base_url</span><span class=\"p\">,</span> <span class=\"n\">dataset_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>Ckan Datastore storage</p>\n<p>Package implements\n<a href=\"https://github.com/frictionlessdata/tableschema-py#storage\" rel=\"nofollow\">Tabular Storage</a>\ninterface (see full documentation on the link):</p>\n<p><img alt=\"Storage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/191c341340508a9cf36b41690ca1a05252c9eca9/68747470733a2f2f692e696d6775722e636f6d2f525167727871702e706e67\"></p>\n<blockquote>\n<p>Only additional API is documented</p>\n</blockquote>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>base_url (str)</strong>:</li>\n<li><strong>the base url (and scheme) for the CKAN instance (e.g. http</strong>://demo.ckan.org).</li>\n<li><strong>dataset_id (str)</strong>:\nid or name of the CKAN dataset we wish to use as the bucket source.\nIf missing, all tables in the DataStore are used.</li>\n<li><strong>api_key (str)</strong>:\neither a CKAN user api key or, if in the format <code>env:CKAN_API_KEY_NAME</code>,\nan env var that defines an api key.</li>\n</ul>\n<h2>Contributing</h2>\n<blockquote>\n<p>The project follows the <a href=\"https://github.com/okfn/coding-standards\" rel=\"nofollow\">Open Knowledge International coding standards</a>.</p>\n</blockquote>\n<p>Recommended way to get started is to create and activate a project virtual environment.\nTo install package and development dependencies into active environment:</p>\n<pre>$ make install\n</pre>\n<p>To run tests with linting and coverage:</p>\n<pre>$ make <span class=\"nb\">test</span>\n</pre>\n<h2>Changelog</h2>\n<p>Here described only breaking and the most important changes. The full changelog and documentation for all released versions could be found in nicely formatted <a href=\"https://github.com/frictionlessdata/tableschema-ckan-datastore-py/commits/master\" rel=\"nofollow\">commit history</a>.</p>\n<h4>v1.1</h4>\n<ul>\n<li>Increase max size of a bucket to 100 resources</li>\n</ul>\n<h4>v1.0</h4>\n<ul>\n<li>Initial driver implementation</li>\n</ul>\n\n          </div>"}, "last_serial": 6943692, "releases": {"0.0.2a0": [{"comment_text": "", "digests": {"md5": "c55476f542ae67e692cb75e7d4ed2edb", "sha256": "db8c5b7ebe703dc0cd80b8c1451274686c1a76d5d6294f42d2474709b4b7e8a0"}, "downloads": -1, "filename": "tableschema_ckan_datastore-0.0.2a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c55476f542ae67e692cb75e7d4ed2edb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11637, "upload_time": "2017-10-30T11:28:49", "upload_time_iso_8601": "2017-10-30T11:28:49.481265Z", "url": "https://files.pythonhosted.org/packages/e3/ab/69e6cbb6f9c5e948ed10b2cb806fe58a82bf6e9e20437a1855d27aac99bb/tableschema_ckan_datastore-0.0.2a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5a602bcb17b0dcec7dcaa06d78473c0", "sha256": "cfaf11d46a69fefbf32b96e96f630c598b59ce60597a64fa2930dd744ec469d3"}, "downloads": -1, "filename": "tableschema-ckan-datastore-0.0.2a0.tar.gz", "has_sig": false, "md5_digest": "c5a602bcb17b0dcec7dcaa06d78473c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9285, "upload_time": "2017-10-30T11:28:50", "upload_time_iso_8601": "2017-10-30T11:28:50.383710Z", "url": "https://files.pythonhosted.org/packages/72/9a/c7884eaffecb9a10082b66396f5f4a0cabf28b3a8c12abbde794daeaf44f/tableschema-ckan-datastore-0.0.2a0.tar.gz", "yanked": false}], "0.0.3b0": [{"comment_text": "", "digests": {"md5": "d74ea0e9a90d8674cd45893915cad03e", "sha256": "2e68a6d490eeb822a437b2835258463281e367315b5fa19b6cbb4027fed452dc"}, "downloads": -1, "filename": "tableschema_ckan_datastore-0.0.3b0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d74ea0e9a90d8674cd45893915cad03e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12464, "upload_time": "2017-10-31T17:07:46", "upload_time_iso_8601": "2017-10-31T17:07:46.430077Z", "url": "https://files.pythonhosted.org/packages/ad/a7/245a6e221c9d523d5536391006df4a4c459d78492543e0850e9805e13804/tableschema_ckan_datastore-0.0.3b0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12f6cdd00a3e871d865518e6f1ea0662", "sha256": "e7238da22694f60bb287e0c52ed16841b728dc08266124c0003c7c873416a4dd"}, "downloads": -1, "filename": "tableschema-ckan-datastore-0.0.3b0.tar.gz", "has_sig": false, "md5_digest": "12f6cdd00a3e871d865518e6f1ea0662", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9811, "upload_time": "2017-10-31T17:07:47", "upload_time_iso_8601": "2017-10-31T17:07:47.452044Z", "url": "https://files.pythonhosted.org/packages/ea/83/1abf28aefc47771d56d0417de8c69ba3e24fd5e84e738130bc8de93be7a4/tableschema-ckan-datastore-0.0.3b0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "3d2ec7e8079157af862eb6ac1c5aadd0", "sha256": "82cf315e7bb08ac4345d27fc7efdb3dcc34490b17fa9d311e9d3454aefa57d5a"}, "downloads": -1, "filename": "tableschema_ckan_datastore-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3d2ec7e8079157af862eb6ac1c5aadd0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9836, "upload_time": "2019-10-06T08:54:22", "upload_time_iso_8601": "2019-10-06T08:54:22.957858Z", "url": "https://files.pythonhosted.org/packages/ba/45/5efe1f392271d144c16ca693d6ae49a79659ddf2ed029385ca8947a3e429/tableschema_ckan_datastore-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5f89682d883f42aa2d39d1323f0d4f2", "sha256": "6abbdf2c91982331081ee82bc400367881f32cd62c15517f6423bc5010ac1954"}, "downloads": -1, "filename": "tableschema-ckan-datastore-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c5f89682d883f42aa2d39d1323f0d4f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12100, "upload_time": "2019-10-06T08:54:24", "upload_time_iso_8601": "2019-10-06T08:54:24.831321Z", "url": "https://files.pythonhosted.org/packages/ef/bb/402bf536016abbf70f51e0119f977f29bfd60a32e5c9626ff1560cc3dc64/tableschema-ckan-datastore-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "21d41983390949ae8318476e99d7aa39", "sha256": "f018a41ea52c1df6cf9e5867d8366705821e0f8ce908a81a3ee8207670a6a876"}, "downloads": -1, "filename": "tableschema_ckan_datastore-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "21d41983390949ae8318476e99d7aa39", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9732, "upload_time": "2020-04-03T14:17:07", "upload_time_iso_8601": "2020-04-03T14:17:07.196506Z", "url": "https://files.pythonhosted.org/packages/4c/c7/2799848965b2bee30bc93c3d8f6da7b10b894778527fa373a01b879e146a/tableschema_ckan_datastore-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99741691de391f747479df9214326527", "sha256": "54e76c76f9d783f588cc4675a836a629011c0d53b63559d7397fdc0f33c70d5b"}, "downloads": -1, "filename": "tableschema-ckan-datastore-1.1.0.tar.gz", "has_sig": false, "md5_digest": "99741691de391f747479df9214326527", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11808, "upload_time": "2020-04-03T14:17:08", "upload_time_iso_8601": "2020-04-03T14:17:08.227140Z", "url": "https://files.pythonhosted.org/packages/85/75/629622313f6876958648ede0043c02185ac1c903f51f488675004f58c3ad/tableschema-ckan-datastore-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "21d41983390949ae8318476e99d7aa39", "sha256": "f018a41ea52c1df6cf9e5867d8366705821e0f8ce908a81a3ee8207670a6a876"}, "downloads": -1, "filename": "tableschema_ckan_datastore-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "21d41983390949ae8318476e99d7aa39", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9732, "upload_time": "2020-04-03T14:17:07", "upload_time_iso_8601": "2020-04-03T14:17:07.196506Z", "url": "https://files.pythonhosted.org/packages/4c/c7/2799848965b2bee30bc93c3d8f6da7b10b894778527fa373a01b879e146a/tableschema_ckan_datastore-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99741691de391f747479df9214326527", "sha256": "54e76c76f9d783f588cc4675a836a629011c0d53b63559d7397fdc0f33c70d5b"}, "downloads": -1, "filename": "tableschema-ckan-datastore-1.1.0.tar.gz", "has_sig": false, "md5_digest": "99741691de391f747479df9214326527", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11808, "upload_time": "2020-04-03T14:17:08", "upload_time_iso_8601": "2020-04-03T14:17:08.227140Z", "url": "https://files.pythonhosted.org/packages/85/75/629622313f6876958648ede0043c02185ac1c903f51f488675004f58c3ad/tableschema-ckan-datastore-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:39 2020"}