{"info": {"author": "Intellivoid Technologies", "author_email": "netkas@intellivoid.net", "bugtrack_url": null, "classifiers": [], "description": "# CoffeeHouse API Wrapper for Python\n\nThis is a very simple API Wrapper for the CoffeeHouse API. Using\nThis Library only supports the V1IVA2.0 CoffeeHouse API which is based from\nthis [Documentation](https://gist.github.com/Netkas/e8977b26f482ca40911a949df7dd286f)\n\n\n## Installation\n```sh\npip install coffeehouse\n```\n\nor\n```sh\npython setup.py build\npython setup.py install\n```\n\n\n## Lydia Example\n\n```python\nfrom coffeehouse.lydia import LydiaAI\n\n# Create the CoffeeHouse API instance\napi_key = input(\"API Key: \")\n\n# Create Lydia instance\nlydia = LydiaAI(api_key)\n\n# Create a new chat session (Like a conversation)\nsession = lydia.create_session()\nprint(\"Session ID: {0}\".format(session.id))\nprint(\"Session Available: {0}\".format(str(session.available)))\nprint(\"Session Language: {0}\".format(str(session.language)))\nprint(\"Session Expires: {0}\".format(str(session.expires)))\n\n# Talk to the bot!\nwhile True:\n    output = session.think_thought(input(\"Input: \"))\n    print(\"Output: {0}\".format(output))\n\n# In the case you want to save the Session ID to reuse the session\n# Use lydia to invoke think_thought instead, for example;\n#\n# while(True):\n#     output = lydia.think_thought(session.id, input(\"Input: \"))\n#     print(\"Output: {0}\".format(output))\n#\n# This is the same effect as above but uses the lydia instance directly.\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://coffeehouse.intellivoid.net/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "coffeehouse", "package_url": "https://pypi.org/project/coffeehouse/", "platform": "", "project_url": "https://pypi.org/project/coffeehouse/", "project_urls": {"Homepage": "https://coffeehouse.intellivoid.net/"}, "release_url": "https://pypi.org/project/coffeehouse/2.2.2/", "requires_dist": null, "requires_python": "", "summary": "Official CoffeeHouse API Wrapper for Python", "version": "2.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>CoffeeHouse API Wrapper for Python</h1>\n<p>This is a very simple API Wrapper for the CoffeeHouse API. Using\nThis Library only supports the V1IVA2.0 CoffeeHouse API which is based from\nthis <a href=\"https://gist.github.com/Netkas/e8977b26f482ca40911a949df7dd286f\" rel=\"nofollow\">Documentation</a></p>\n<h2>Installation</h2>\n<pre>pip install coffeehouse\n</pre>\n<p>or</p>\n<pre>python setup.py build\npython setup.py install\n</pre>\n<h2>Lydia Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">coffeehouse.lydia</span> <span class=\"kn\">import</span> <span class=\"n\">LydiaAI</span>\n\n<span class=\"c1\"># Create the CoffeeHouse API instance</span>\n<span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"API Key: \"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create Lydia instance</span>\n<span class=\"n\">lydia</span> <span class=\"o\">=</span> <span class=\"n\">LydiaAI</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create a new chat session (Like a conversation)</span>\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">lydia</span><span class=\"o\">.</span><span class=\"n\">create_session</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Session ID: </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Session Available: </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">available</span><span class=\"p\">)))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Session Language: </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"p\">)))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Session Expires: </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">expires</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Talk to the bot!</span>\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">think_thought</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"Input: \"</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Output: </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># In the case you want to save the Session ID to reuse the session</span>\n<span class=\"c1\"># Use lydia to invoke think_thought instead, for example;</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># while(True):</span>\n<span class=\"c1\">#     output = lydia.think_thought(session.id, input(\"Input: \"))</span>\n<span class=\"c1\">#     print(\"Output: {0}\".format(output))</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># This is the same effect as above but uses the lydia instance directly.</span>\n</pre>\n\n          </div>"}, "last_serial": 6897239, "releases": {"2.1.0": [{"comment_text": "", "digests": {"md5": "89f4c46706b029cc7410c47495961787", "sha256": "fcea9a67a8012da76ed22a9980771df9dda11f8124b3caf9a610c057537cfce4"}, "downloads": -1, "filename": "coffeehouse-2.1.0-py3.8.egg", "has_sig": false, "md5_digest": "89f4c46706b029cc7410c47495961787", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": null, "size": 8939, "upload_time": "2020-02-23T00:25:35", "upload_time_iso_8601": "2020-02-23T00:25:35.902129Z", "url": "https://files.pythonhosted.org/packages/76/9e/26fbecb0e20dea2af25c0f1747e448bb715f8edc081b8a11b48df2d536de/coffeehouse-2.1.0-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e11c4eb526d67807b6cc569bb75035c", "sha256": "8715ee68d991794c293a9d84153b657f972c9ac44a2158bddff423c94e9e855b"}, "downloads": -1, "filename": "coffeehouse-2.1.0.tar.gz", "has_sig": false, "md5_digest": "8e11c4eb526d67807b6cc569bb75035c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3431, "upload_time": "2020-02-23T00:25:37", "upload_time_iso_8601": "2020-02-23T00:25:37.185605Z", "url": "https://files.pythonhosted.org/packages/62/d3/40fa64736d8e0b2146fb222f4dac4d43c5f6512d802072ca577c277704a3/coffeehouse-2.1.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "db043bf4ee08f455a2142bdfdbc29728", "sha256": "a238b56b3edaa329e0c4172c2ef2a51c688cfa81b8d4ea80ebea4c582b25ae62"}, "downloads": -1, "filename": "coffeehouse-2.2.0.tar.gz", "has_sig": false, "md5_digest": "db043bf4ee08f455a2142bdfdbc29728", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3931, "upload_time": "2020-03-03T00:25:48", "upload_time_iso_8601": "2020-03-03T00:25:48.991792Z", "url": "https://files.pythonhosted.org/packages/01/fd/25ad5d6ff696c538e194c9bcee4e56b554895fe31fb6b43f4a90b5327e42/coffeehouse-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "4b692138b30b699c955c892986c6e850", "sha256": "3b5f8b00ac229fbf919f2b0ebbf46f8f80b9a0be813678037cbbc6ca73aae655"}, "downloads": -1, "filename": "coffeehouse-2.2.1.tar.gz", "has_sig": false, "md5_digest": "4b692138b30b699c955c892986c6e850", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3935, "upload_time": "2020-03-26T21:00:56", "upload_time_iso_8601": "2020-03-26T21:00:56.794869Z", "url": "https://files.pythonhosted.org/packages/5a/c0/c47fe483781f8a38e6b207b2953ed5077c6028a79855cd4f3927643f6fc3/coffeehouse-2.2.1.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "0a5d81858924c0f9022cd85c63916e18", "sha256": "59db81d0e33b8b023a5acf5a444e830d8f926e552577c80776fdcef7e1186da8"}, "downloads": -1, "filename": "coffeehouse-2.2.2.tar.gz", "has_sig": false, "md5_digest": "0a5d81858924c0f9022cd85c63916e18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3655, "upload_time": "2020-03-27T16:33:47", "upload_time_iso_8601": "2020-03-27T16:33:47.813953Z", "url": "https://files.pythonhosted.org/packages/93/75/b0f90b64f1227bb47a8861396832d3625ec7cd0c058a714f990760636d4e/coffeehouse-2.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a5d81858924c0f9022cd85c63916e18", "sha256": "59db81d0e33b8b023a5acf5a444e830d8f926e552577c80776fdcef7e1186da8"}, "downloads": -1, "filename": "coffeehouse-2.2.2.tar.gz", "has_sig": false, "md5_digest": "0a5d81858924c0f9022cd85c63916e18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3655, "upload_time": "2020-03-27T16:33:47", "upload_time_iso_8601": "2020-03-27T16:33:47.813953Z", "url": "https://files.pythonhosted.org/packages/93/75/b0f90b64f1227bb47a8861396832d3625ec7cd0c058a714f990760636d4e/coffeehouse-2.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:11 2020"}