{"info": {"author": "Matthew Pounsett", "author_email": "matt@conundrum.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: BSD :: FreeBSD", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Topic :: System :: Monitoring", "Topic :: System :: Networking :: Monitoring"], "description": "About\n=====\n\n**check_mount** is a Nagios/Icinga plugin for checking for the presence of\nmounted filesystems.  \n\nSometimes, it is only important to monitor the presence of a mount, and not\nthe amount of free (or used) storage on that filesystem.  For example, when\nmonitoring NFS clients it may be redundant to use **check_disk** to monitor\nthe NFS mounts because the amount of free storage on those mounts is monitored\nelsewhere.  Additionally, **check_disk** can give a false negative if the\nfilesystem is not mounted at all, but the directory used as a mount point is\npresent.\n\n\nUsage\n=====\n\n.. code:: text\n\n   usage: check_mount [-h] [-w RANGE] [-c RANGE] [-p PATH] [-t TYPE] [-M PATH]\n                      [-v]\n\n   optional arguments:\n     -h, --help            show this help message and exit\n     -w RANGE, --warning RANGE\n                           Generate warning state if number of mounts is outside\n                           this range\n     -c RANGE, --critical RANGE\n                           Generate critical state if number of mounts is\n                           outside this range\n     -p PATH, --path PATH  A mount point to check to ensure it is present. May\n                           be specified more than once. This option is\n                           incompatible with --type.\n     -t TYPE, --type TYPE  Only check mounts of a particular type. If specified\n                           more than once, the count of present mounts will\n                           include all mounts of all types specified. This\n                           option is incompatible with --path.\n     -M PATH, --mount-path PATH\n                           Override the path to mount(8) [Default: /sbin/mount]\n     -v, --verbose         Increase output verbosity (use up to 3 times).\n\nCounting Mounts\n---------------\n\nIf you're only concerned with making sure the correct number of mounts are\npresent, you can set a warning/critical range.\n\nTo warn if anything other than exactly 5 filesystems are mounted::\n\n   check_mount -w 5:5\n\nTo retun critical if fewer than 5 filesystems are mounted, and a warning if\nmore than 5 are mounted::\n\n   check_mount -w :5 -c 5:\n\nChecking Mounts by Type\n-----------------------\n\nIf you're only concerned with a particular type of mount, for example you want\nto ensure that all of your network mounts are present, but ignore any others,\nyou can supply a list of filesystem types to **check_mount**.\n\nTo look only at AFS and NFS mounts, and to expect exactly 2 total mounts (one\nof each)::\n\n   check_mount -t NFS -t AFS -w 2:2\n\nBy default, **check_mount** ignores several filessytem pseudo-types.  Ignoring\nthese can be overridden by specifying them, along with any other types you\nwould like to check, on the command line.  Filesystem types ignored by default\nare::\n\n    autofs      bpf         cgroup      cgroup2     debugfs\n    devpts      devtmpfs    hugetlbfs   mqueue      proc\n    pstore      securityfs  sysfs       tmpfs\n\nChecking Specific Mount Points\n------------------------------\n\nIf you wish to check specific mount points you can specify one or more on the\ncommand line with the `--path` argument::\n\n   check_mount -p /home -w1:1\n\nUnlike other modes of operation, when checking specific mount points\n**check_mount** applies the warning and critical ranges to each individual\nmount, rather than the sum of all mounts.  This allows **check_mount** to\ninclude the names of specific mounts in its error message.  So, if you're\nchecking three different mount points this way, and you want to return a\ncritical alert if any of them are missing, you would use a command like this::\n\n   check_mount -p /home -p /var -p /opt -c1:1\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://pypi.org/project/check-mount/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://check-mount.readthedocs.io/", "keywords": "Icinga,Nagios,monitoring", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "check-mount", "package_url": "https://pypi.org/project/check-mount/", "platform": "", "project_url": "https://pypi.org/project/check-mount/", "project_urls": {"Download": "https://pypi.org/project/check-mount/", "Homepage": "https://check-mount.readthedocs.io/", "check-mount issues": "https://github.com/mpounsett/check-mount/issues", "check-mount source": "https://github.com/mpounsett/check-mount"}, "release_url": "https://pypi.org/project/check-mount/1.0.3/", "requires_dist": ["nagiosplugin (<2.0,>=1.3)"], "requires_python": "", "summary": "Nagios / Icinga plugin to check that mounts are present.", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p><strong>check_mount</strong> is a Nagios/Icinga plugin for checking for the presence of\nmounted filesystems.</p>\n<p>Sometimes, it is only important to monitor the presence of a mount, and not\nthe amount of free (or used) storage on that filesystem.  For example, when\nmonitoring NFS clients it may be redundant to use <strong>check_disk</strong> to monitor\nthe NFS mounts because the amount of free storage on those mounts is monitored\nelsewhere.  Additionally, <strong>check_disk</strong> can give a false negative if the\nfilesystem is not mounted at all, but the directory used as a mount point is\npresent.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>usage: check_mount [-h] [-w RANGE] [-c RANGE] [-p PATH] [-t TYPE] [-M PATH]\n                   [-v]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -w RANGE, --warning RANGE\n                        Generate warning state if number of mounts is outside\n                        this range\n  -c RANGE, --critical RANGE\n                        Generate critical state if number of mounts is\n                        outside this range\n  -p PATH, --path PATH  A mount point to check to ensure it is present. May\n                        be specified more than once. This option is\n                        incompatible with --type.\n  -t TYPE, --type TYPE  Only check mounts of a particular type. If specified\n                        more than once, the count of present mounts will\n                        include all mounts of all types specified. This\n                        option is incompatible with --path.\n  -M PATH, --mount-path PATH\n                        Override the path to mount(8) [Default: /sbin/mount]\n  -v, --verbose         Increase output verbosity (use up to 3 times).\n</pre>\n<div id=\"counting-mounts\">\n<h3>Counting Mounts</h3>\n<p>If you\u2019re only concerned with making sure the correct number of mounts are\npresent, you can set a warning/critical range.</p>\n<p>To warn if anything other than exactly 5 filesystems are mounted:</p>\n<pre>check_mount -w 5:5\n</pre>\n<p>To retun critical if fewer than 5 filesystems are mounted, and a warning if\nmore than 5 are mounted:</p>\n<pre>check_mount -w :5 -c 5:\n</pre>\n</div>\n<div id=\"checking-mounts-by-type\">\n<h3>Checking Mounts by Type</h3>\n<p>If you\u2019re only concerned with a particular type of mount, for example you want\nto ensure that all of your network mounts are present, but ignore any others,\nyou can supply a list of filesystem types to <strong>check_mount</strong>.</p>\n<p>To look only at AFS and NFS mounts, and to expect exactly 2 total mounts (one\nof each):</p>\n<pre>check_mount -t NFS -t AFS -w 2:2\n</pre>\n<p>By default, <strong>check_mount</strong> ignores several filessytem pseudo-types.  Ignoring\nthese can be overridden by specifying them, along with any other types you\nwould like to check, on the command line.  Filesystem types ignored by default\nare:</p>\n<pre>autofs      bpf         cgroup      cgroup2     debugfs\ndevpts      devtmpfs    hugetlbfs   mqueue      proc\npstore      securityfs  sysfs       tmpfs\n</pre>\n</div>\n<div id=\"checking-specific-mount-points\">\n<h3>Checking Specific Mount Points</h3>\n<p>If you wish to check specific mount points you can specify one or more on the\ncommand line with the <cite>\u2013path</cite> argument:</p>\n<pre>check_mount -p /home -w1:1\n</pre>\n<p>Unlike other modes of operation, when checking specific mount points\n<strong>check_mount</strong> applies the warning and critical ranges to each individual\nmount, rather than the sum of all mounts.  This allows <strong>check_mount</strong> to\ninclude the names of specific mounts in its error message.  So, if you\u2019re\nchecking three different mount points this way, and you want to return a\ncritical alert if any of them are missing, you would use a command like this:</p>\n<pre>check_mount -p /home -p /var -p /opt -c1:1\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6287228, "releases": {"1.0.0b1": [{"comment_text": "", "digests": {"md5": "db0686bf4a345c9baec3cdb4537d1ddf", "sha256": "eb0114994c9fa5f194b2860efc57f9dfc999ffa828dfc3bcf1644b0fad33763d"}, "downloads": -1, "filename": "check_mount-1.0.0b1-py3-none-any.whl", "has_sig": false, "md5_digest": "db0686bf4a345c9baec3cdb4537d1ddf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4401, "upload_time": "2019-12-10T15:24:06", "upload_time_iso_8601": "2019-12-10T15:24:06.778686Z", "url": "https://files.pythonhosted.org/packages/b2/08/f5a015a69c36d1bf83b773e26e334a2491c98c66b884d8bbba91805cccb0/check_mount-1.0.0b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa6c1c634f032feb4ba4e3ba29bffb00", "sha256": "245c9fa15445563f604488792a31723b85105ed785b5b46ecb48436ca7a6569e"}, "downloads": -1, "filename": "check-mount-1.0.0b1.tar.gz", "has_sig": false, "md5_digest": "aa6c1c634f032feb4ba4e3ba29bffb00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4367, "upload_time": "2019-12-10T15:24:09", "upload_time_iso_8601": "2019-12-10T15:24:09.190640Z", "url": "https://files.pythonhosted.org/packages/86/21/c4b49f4a802d4fe2e538695560597488e0a4dfbf245e06a71d36046b7ba5/check-mount-1.0.0b1.tar.gz", "yanked": false}], "1.0.0b2": [{"comment_text": "", "digests": {"md5": "7639f24b90f30a1a284bcece59546ef4", "sha256": "ef70f74dd74ba3a085dc2ff96a1672dcf2c885d86726f0d03e572f6fe8e82b94"}, "downloads": -1, "filename": "check_mount-1.0.0b2-py3-none-any.whl", "has_sig": false, "md5_digest": "7639f24b90f30a1a284bcece59546ef4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4990, "upload_time": "2019-12-11T00:17:26", "upload_time_iso_8601": "2019-12-11T00:17:26.748021Z", "url": "https://files.pythonhosted.org/packages/eb/31/2dc4c30990757bedd5887a3d57ee9ce8921de271adb733bc0df6be739531/check_mount-1.0.0b2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8d62cff7b070483f470e139241c891c", "sha256": "60a0abece9dad8d4367b0afc0a8b6f1e59002dd7abfd04ee2792df4066044a4e"}, "downloads": -1, "filename": "check-mount-1.0.0b2.tar.gz", "has_sig": false, "md5_digest": "a8d62cff7b070483f470e139241c891c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4986, "upload_time": "2019-12-11T00:17:28", "upload_time_iso_8601": "2019-12-11T00:17:28.263443Z", "url": "https://files.pythonhosted.org/packages/76/20/2996b50b55aebf809564926bca01129f24e570c8f0bf57243b496098d4a2/check-mount-1.0.0b2.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "2294204e1ee11b0a9753a5865c594bd8", "sha256": "438e5b57871afbefcc16d198641bf9f9e7cf40fa1adb080adb57802d607bf79b"}, "downloads": -1, "filename": "check_mount-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2294204e1ee11b0a9753a5865c594bd8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10490, "upload_time": "2019-12-12T15:31:46", "upload_time_iso_8601": "2019-12-12T15:31:46.680786Z", "url": "https://files.pythonhosted.org/packages/09/b8/a5a16fed3c11e87b37b182126bfd20a8edcc6242f6eaa7d981be78a8e30f/check_mount-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e09d4a62135647afe588fdd8d7c1741", "sha256": "5bc2aa19b33a6328baccaea4c950134f60a9f2e6d086f43c0cbc657c70fd476b"}, "downloads": -1, "filename": "check-mount-1.0.2.tar.gz", "has_sig": false, "md5_digest": "8e09d4a62135647afe588fdd8d7c1741", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6483, "upload_time": "2019-12-12T15:31:48", "upload_time_iso_8601": "2019-12-12T15:31:48.492694Z", "url": "https://files.pythonhosted.org/packages/c4/2c/62726240605c8996d046b429c7f050a1647193fd10cdda4fe8722a35e493/check-mount-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "e833d492077fffc3960461c57b624afb", "sha256": "57f1fc4a776926e4156a3b60e924eab6a70c54d375d85e8a57b9f2bdecf2dc3b"}, "downloads": -1, "filename": "check_mount-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e833d492077fffc3960461c57b624afb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10492, "upload_time": "2019-12-12T15:32:16", "upload_time_iso_8601": "2019-12-12T15:32:16.299392Z", "url": "https://files.pythonhosted.org/packages/4e/e4/5fdfaaeb681eba88a25bff8ca400112f0f0e52d093ad01b42a3156859cca/check_mount-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "130171444e05738c6d19742a34bbc13b", "sha256": "55afb8f691549954be78ac682b8063367e1e33f6a73283652a3a7fb8d05312f6"}, "downloads": -1, "filename": "check-mount-1.0.3.tar.gz", "has_sig": false, "md5_digest": "130171444e05738c6d19742a34bbc13b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6486, "upload_time": "2019-12-12T15:32:17", "upload_time_iso_8601": "2019-12-12T15:32:17.956435Z", "url": "https://files.pythonhosted.org/packages/bb/28/3983274e4040f213700c38666f35b5c70095586273439f32be9abb09e1e9/check-mount-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e833d492077fffc3960461c57b624afb", "sha256": "57f1fc4a776926e4156a3b60e924eab6a70c54d375d85e8a57b9f2bdecf2dc3b"}, "downloads": -1, "filename": "check_mount-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e833d492077fffc3960461c57b624afb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10492, "upload_time": "2019-12-12T15:32:16", "upload_time_iso_8601": "2019-12-12T15:32:16.299392Z", "url": "https://files.pythonhosted.org/packages/4e/e4/5fdfaaeb681eba88a25bff8ca400112f0f0e52d093ad01b42a3156859cca/check_mount-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "130171444e05738c6d19742a34bbc13b", "sha256": "55afb8f691549954be78ac682b8063367e1e33f6a73283652a3a7fb8d05312f6"}, "downloads": -1, "filename": "check-mount-1.0.3.tar.gz", "has_sig": false, "md5_digest": "130171444e05738c6d19742a34bbc13b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6486, "upload_time": "2019-12-12T15:32:17", "upload_time_iso_8601": "2019-12-12T15:32:17.956435Z", "url": "https://files.pythonhosted.org/packages/bb/28/3983274e4040f213700c38666f35b5c70095586273439f32be9abb09e1e9/check-mount-1.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:20 2020"}