{"info": {"author": "Jake Drost", "author_email": "JDrost1818@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Topic :: Software Development :: Code Generators"], "description": "Plaster\n=======\n\nProject to bring similar functionality found in Rails to the Spring Boot\nplatform. Currently only supports maven-enabled projects.\n\nFor Example:\n\n::\n\n    plaster g scaffold User name:string age:integer\n\nWill create the following files:\n\n- Model - root/model/User.java\n- Repository - root/repository/UserRepository.java\n- Service - service/UserService.java\n- Controller - controller/UsersController.java\n\nThe root is calculated upon script start. For example, if being run on a\nproject with the following in `pom.xml`:\n\n::\n\n    <groupId>com.example</groupId>\n\nthe root will be `src/main/com/example/`\n\nInstallation\n\"\"\"\"\"\"\"\"\"\"\"\"\n\nIf you have `pip <https://pip.pypa.io/en/stable/installing/>`__\ninstalled, you can install Plaster with following:\n\n::\n\n    pip install plaster-spring-boot\n\nOtherwise, ensure Python's `setuptools` is installed to install\nPlaster. If on an ubuntu system, use the following:\n\n::\n\n    sudo apt-get install python-setuptools\n\nOtherwise, explore\n`setuptools <https://pypi.python.org/pypi/setuptools>`__ to find how to\ninstall for your system. Then download Plaster onto your machine,\nnavigate to the directory in which it was downloaded and run:\n\n::\n\n    python setup.py install\n\nUsage\n\"\"\"\"\"\n\n::\n\n    usage: plaster [-h] [-v] [-k [KEY]] [-d DIR]\n                   {generate,g,delete,d}\n                   {scaffold,model,repository,service,controller,field} model_name\n                   [fields [fields ...]]\n\n    Generate files for Spring Boot\n\n    positional arguments:\n      {generate,g,delete,d}\n                            whether to generate or delete\n                                generate, g - create files\n                                delete, d - remove files\n      {scaffold,model,repository,service,controller,field}\n                            how to generate or delete content\n                                scaffold - all files associated to the model\n                                model - the entire model\n                                repository - the entire repository\n                                service - the entire service\n                                controller - the entire controller\n                                field - individual field(s)\n      model_name            name of model for which to perform actions\n      fields                fields to perform actions listed as name:type pairs\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -v, --version         fetches the current version of the tool\n      -k [KEY], --key [KEY]\n                            indicates the following field:type pair should define the key\n                            NOTE: should be a trailing param\n      -d DIR, --dir DIR     defines a sub path in which to perform actions\n                            NOTE: should be a trailing param\n\nCustomization\n\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nPer default, Plater will auto-discover necessary configurations and then\nuse best-practices to decide where and how to generate files. However,\nif you would like to customize the generation of the files, Plater gives\nyou the ability to alter defaults by placing `plaster.yml` in the root\nof the project. The following configurations are supported:\n\nProperty `dir`\n^^^^^^^^^^^^^^\n\n+--------------+-----------------------------------------------+----------+--------------+\n| Property     | Description                                   | Type     | Default      |\n+==============+===============================================+==========+==============+\n| model        | Directory in which to generate models         | String   | model        |\n+--------------+-----------------------------------------------+----------+--------------+\n| repository   | Directory in which to generate repositories   | String   | repository   |\n+--------------+-----------------------------------------------+----------+--------------+\n| controller   | Directory in which to generate controllers    | String   | controller   |\n+--------------+-----------------------------------------------+----------+--------------+\n| service      | Directory in which to generate services       | String   | service      |\n+--------------+-----------------------------------------------+----------+--------------+\n\nProperty `lombok`\n^^^^^^^^^^^^^^^^^\n\n+----------------+-----------------------------------------+---------+-----------+\n| Property       | Description                             | Type    | Default   |\n+================+=========================================+=========+===========+\n| enabled        | Should we enable generation in lombok   | Boolean | Is lombok |\n|                | mode                                    |         | a         |\n|                |                                         |         | dependenc |\n|                |                                         |         | y         |\n|                |                                         |         | in        |\n|                |                                         |         | `pom.xml` |\n|                |                                         |         | ?         |\n+----------------+-----------------------------------------+---------+-----------+\n\nLombok Support\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nGeneration of models will change if a lombok dependency is found in\n`pom.xml`. This will import lombok and annotate the model differently.\nFor example:\n\n::\n\n    //NO LOMBOK\n    @Entity\n    public class Example {\n\n        @Id\n        @GeneratedValue(strategy = GenerationType.AUTO)\n        private Integer id;\n\n        public Integer getId() {\n            return this.id;\n        }\n\n        public void setId(Integer id) {\n            this.id = id;\n        }\n\n    }\n\n\n::\n\n    import lombok.AllArgsConstructor;\n    import lombok.Builder;\n    import lombok.Data;\n    import lombok.NoArgsConstructor;\n\n    @AllArgsConstructor\n    @Builder\n    @Data\n    @NoArgsConstructor\n    public class Example {\n\n        @Id\n        @GeneratedValue(strategy = GenerationType.AUTO)\n        private Integer id;\n\n    }\n\nFor lombok information, visit the project's\n`homepage <https://projectlombok.org/>`__.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JDrost1818/plaster", "keywords": "sample setuptools development", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "plaster-spring-boot", "package_url": "https://pypi.org/project/plaster-spring-boot/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/plaster-spring-boot/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/JDrost1818/plaster"}, "release_url": "https://pypi.org/project/plaster-spring-boot/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "Generates scaffolding for new models for Spring Boot projects", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Project to bring similar functionality found in Rails to the Spring Boot\nplatform. Currently only supports maven-enabled projects.</p>\n<p>For Example:</p>\n<pre>plaster g scaffold User name:string age:integer\n</pre>\n<p>Will create the following files:</p>\n<ul>\n<li>Model - root/model/User.java</li>\n<li>Repository - root/repository/UserRepository.java</li>\n<li>Service - service/UserService.java</li>\n<li>Controller - controller/UsersController.java</li>\n</ul>\n<p>The root is calculated upon script start. For example, if being run on a\nproject with the following in <cite>pom.xml</cite>:</p>\n<pre>&lt;groupId&gt;com.example&lt;/groupId&gt;\n</pre>\n<p>the root will be <cite>src/main/com/example/</cite></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>If you have <a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\">pip</a>\ninstalled, you can install Plaster with following:</p>\n<pre>pip install plaster-spring-boot\n</pre>\n<p>Otherwise, ensure Python\u2019s <cite>setuptools</cite> is installed to install\nPlaster. If on an ubuntu system, use the following:</p>\n<pre>sudo apt-get install python-setuptools\n</pre>\n<p>Otherwise, explore\n<a href=\"https://pypi.python.org/pypi/setuptools\" rel=\"nofollow\">setuptools</a> to find how to\ninstall for your system. Then download Plaster onto your machine,\nnavigate to the directory in which it was downloaded and run:</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>usage: plaster [-h] [-v] [-k [KEY]] [-d DIR]\n               {generate,g,delete,d}\n               {scaffold,model,repository,service,controller,field} model_name\n               [fields [fields ...]]\n\nGenerate files for Spring Boot\n\npositional arguments:\n  {generate,g,delete,d}\n                        whether to generate or delete\n                            generate, g - create files\n                            delete, d - remove files\n  {scaffold,model,repository,service,controller,field}\n                        how to generate or delete content\n                            scaffold - all files associated to the model\n                            model - the entire model\n                            repository - the entire repository\n                            service - the entire service\n                            controller - the entire controller\n                            field - individual field(s)\n  model_name            name of model for which to perform actions\n  fields                fields to perform actions listed as name:type pairs\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         fetches the current version of the tool\n  -k [KEY], --key [KEY]\n                        indicates the following field:type pair should define the key\n                        NOTE: should be a trailing param\n  -d DIR, --dir DIR     defines a sub path in which to perform actions\n                        NOTE: should be a trailing param\n</pre>\n</div>\n<div id=\"customization\">\n<h2>Customization</h2>\n<p>Per default, Plater will auto-discover necessary configurations and then\nuse best-practices to decide where and how to generate files. However,\nif you would like to customize the generation of the files, Plater gives\nyou the ability to alter defaults by placing <cite>plaster.yml</cite> in the root\nof the project. The following configurations are supported:</p>\n<div id=\"property-dir\">\n<h3>Property <cite>dir</cite></h3>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>model</td>\n<td>Directory in which to generate models</td>\n<td>String</td>\n<td>model</td>\n</tr>\n<tr><td>repository</td>\n<td>Directory in which to generate repositories</td>\n<td>String</td>\n<td>repository</td>\n</tr>\n<tr><td>controller</td>\n<td>Directory in which to generate controllers</td>\n<td>String</td>\n<td>controller</td>\n</tr>\n<tr><td>service</td>\n<td>Directory in which to generate services</td>\n<td>String</td>\n<td>service</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"property-lombok\">\n<h3>Property <cite>lombok</cite></h3>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>enabled</td>\n<td>Should we enable generation in lombok\nmode</td>\n<td>Boolean</td>\n<td>Is lombok\na\ndependenc\ny\nin\n<cite>pom.xml</cite>\n?</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"lombok-support\">\n<h2>Lombok Support</h2>\n<p>Generation of models will change if a lombok dependency is found in\n<cite>pom.xml</cite>. This will import lombok and annotate the model differently.\nFor example:</p>\n<pre>//NO LOMBOK\n@Entity\npublic class Example {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    private Integer id;\n\n    public Integer getId() {\n        return this.id;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n\n}\n</pre>\n<pre>import lombok.AllArgsConstructor;\nimport lombok.Builder;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\n@AllArgsConstructor\n@Builder\n@Data\n@NoArgsConstructor\npublic class Example {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    private Integer id;\n\n}\n</pre>\n<p>For lombok information, visit the project\u2019s\n<a href=\"https://projectlombok.org/\" rel=\"nofollow\">homepage</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 2860335, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "96ff670e424529c826f6d8ba97d49362", "sha256": "874838456d83dcfb08373854f6a9d43704219e4ece73b81c87ce7db82645ffae"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.0.tar.gz", "has_sig": false, "md5_digest": "96ff670e424529c826f6d8ba97d49362", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8995, "upload_time": "2016-12-07T19:07:55", "upload_time_iso_8601": "2016-12-07T19:07:55.800035Z", "url": "https://files.pythonhosted.org/packages/cd/fa/48f4264e7e6262127fee965bc53d98583c920a6ab0e44f39ae1fe7b75973/plaster-spring-boot-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ac6efed581b979127a5497c7735fa822", "sha256": "e3cfb5bb07f09db19032334a1358fd41e8179f6c8f3b82fb8e0217c6891f5fc3"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ac6efed581b979127a5497c7735fa822", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8972, "upload_time": "2016-12-07T19:13:32", "upload_time_iso_8601": "2016-12-07T19:13:32.457730Z", "url": "https://files.pythonhosted.org/packages/78/63/52211b5f7fda7fcf0f896e519ece0c0072b1994b7df0a579974a34cea69a/plaster-spring-boot-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "4d8a4a5eb4b0adadafb85f54c2a27f22", "sha256": "81c7429ac35ef30591bc8896ff425ec9b5f394a41a921d24e98d6fe575165792"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.10.tar.gz", "has_sig": false, "md5_digest": "4d8a4a5eb4b0adadafb85f54c2a27f22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11009, "upload_time": "2016-12-08T22:28:17", "upload_time_iso_8601": "2016-12-08T22:28:17.410536Z", "url": "https://files.pythonhosted.org/packages/e0/82/de0a1409c2a500ebbd5d999e6865adb414ce5ed02082b41aa4bce9725ffd/plaster-spring-boot-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "268cc2bf7e1a836fa85a667b5c3e293c", "sha256": "4748a1b47c8983a3328cac9a9b1c54f2010f3be796dad777e7a4f256acee9017"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.11.tar.gz", "has_sig": false, "md5_digest": "268cc2bf7e1a836fa85a667b5c3e293c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11149, "upload_time": "2016-12-08T23:25:47", "upload_time_iso_8601": "2016-12-08T23:25:47.342292Z", "url": "https://files.pythonhosted.org/packages/92/03/87aa7a3002c703b1ec6dc077fdfcb06428befe16c5cf1277be3e0b6cf145/plaster-spring-boot-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "6a089ec653bea771e3d71f865d1c3b7f", "sha256": "2a581c05411d39b52f333d2fa4bcdf320538db46d56eaa94ad0d42e014fc0f71"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.12.tar.gz", "has_sig": false, "md5_digest": "6a089ec653bea771e3d71f865d1c3b7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11071, "upload_time": "2017-05-06T14:57:37", "upload_time_iso_8601": "2017-05-06T14:57:37.663441Z", "url": "https://files.pythonhosted.org/packages/cd/88/72f1017cfde65f46cfb4290512b96965d54a98b141b134800ebd9b00eefa/plaster-spring-boot-0.1.12.tar.gz", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "c00349b4dd2a819c1881777688d61686", "sha256": "e29428ae5a86f2bcde1fb84616ee458c9e252a645d267303b43fb65e29e363ee"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.13.tar.gz", "has_sig": false, "md5_digest": "c00349b4dd2a819c1881777688d61686", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11091, "upload_time": "2017-05-06T15:14:35", "upload_time_iso_8601": "2017-05-06T15:14:35.780069Z", "url": "https://files.pythonhosted.org/packages/1e/81/93873bf3ce90856592ae62e53ff15528a3f768c88cacd8d7308d374323e7/plaster-spring-boot-0.1.13.tar.gz", "yanked": false}], "0.1.14": [{"comment_text": "", "digests": {"md5": "38efb2f6c10f58340e8ff3b6d3f93d69", "sha256": "55c96d06838d142ba06e65b7925de246e4330374f2543feab8e6fbfee6759ce7"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.14.tar.gz", "has_sig": false, "md5_digest": "38efb2f6c10f58340e8ff3b6d3f93d69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11105, "upload_time": "2017-05-06T15:29:41", "upload_time_iso_8601": "2017-05-06T15:29:41.130209Z", "url": "https://files.pythonhosted.org/packages/17/22/b87d55176b9125200ee83276600dd4db525ad8da546afd019eed140191ba/plaster-spring-boot-0.1.14.tar.gz", "yanked": false}], "0.1.15": [{"comment_text": "", "digests": {"md5": "8c4d79240dd75f38519abce1971edf54", "sha256": "bd0c8052f5d80bfb04fb319544ada6aa941524da095187536e81995ef7940bc8"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.15.tar.gz", "has_sig": false, "md5_digest": "8c4d79240dd75f38519abce1971edf54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11079, "upload_time": "2017-05-06T23:51:27", "upload_time_iso_8601": "2017-05-06T23:51:27.280936Z", "url": "https://files.pythonhosted.org/packages/39/92/19f41cd4e757788cf2de893c34f496369fc6e9c01c0fab75071d7d18e383/plaster-spring-boot-0.1.15.tar.gz", "yanked": false}], "0.1.16": [{"comment_text": "", "digests": {"md5": "b708562f77f01119884cf05c18228b29", "sha256": "5471e7ce1573fc90dfa2bdf6db0cbf63fb007204c8b9b135a2939ef6ed91e0cd"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.16.tar.gz", "has_sig": false, "md5_digest": "b708562f77f01119884cf05c18228b29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11075, "upload_time": "2017-05-06T23:54:27", "upload_time_iso_8601": "2017-05-06T23:54:27.626735Z", "url": "https://files.pythonhosted.org/packages/74/9a/989cc5f3d2cead0287c5efbd1dbb65bdffb3f420ca567f7607793df633c5/plaster-spring-boot-0.1.16.tar.gz", "yanked": false}], "0.1.17": [{"comment_text": "", "digests": {"md5": "bcd00388e2bedeeacf83ecff7ce3cb55", "sha256": "388c283228097c24d6043ec9633ba7385a051d73d92b3e10e6058cd8cce5422d"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.17.tar.gz", "has_sig": false, "md5_digest": "bcd00388e2bedeeacf83ecff7ce3cb55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11131, "upload_time": "2017-05-07T00:05:54", "upload_time_iso_8601": "2017-05-07T00:05:54.792556Z", "url": "https://files.pythonhosted.org/packages/67/cd/955a2bb49fc4d0f05e1376dedf8322257ab4f37ed7cfd2ca22fe643a52f4/plaster-spring-boot-0.1.17.tar.gz", "yanked": false}], "0.1.18": [{"comment_text": "", "digests": {"md5": "b8389133c165986a7040938db71f31ad", "sha256": "2985b40a0a0e9177b731487c473087c332e92a6f9cdb85d805e535102e9d4cd2"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.18.tar.gz", "has_sig": false, "md5_digest": "b8389133c165986a7040938db71f31ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11123, "upload_time": "2017-05-07T00:07:55", "upload_time_iso_8601": "2017-05-07T00:07:55.967551Z", "url": "https://files.pythonhosted.org/packages/9c/96/876ef1473db2e191be8cd82715c7f2d68fa9df217c94a8e5500a6496daae/plaster-spring-boot-0.1.18.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "35356529439e101ec54fa517ab5700e5", "sha256": "8436eb1d3b01136204989406b8aa8cd46e2fce6ba7b648017d1a971e4def90c2"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.2.tar.gz", "has_sig": false, "md5_digest": "35356529439e101ec54fa517ab5700e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9314, "upload_time": "2016-12-07T19:14:58", "upload_time_iso_8601": "2016-12-07T19:14:58.040428Z", "url": "https://files.pythonhosted.org/packages/78/17/02097bb8231ede198f735e3287e821c613240e2e726162c3647eaf9ae9b0/plaster-spring-boot-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "cc74027c6e45ec0f5a14fe1aece0acc2", "sha256": "924fc05904758943a62319fa67166e8902873d5a34786d0cf529bf8320f5664b"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.3.tar.gz", "has_sig": false, "md5_digest": "cc74027c6e45ec0f5a14fe1aece0acc2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9406, "upload_time": "2016-12-07T19:30:55", "upload_time_iso_8601": "2016-12-07T19:30:55.348624Z", "url": "https://files.pythonhosted.org/packages/e2/61/4d95d699a76a5df70339353805d8136e7b55d492dbd5d3b5d2f69f5728c8/plaster-spring-boot-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "1718187a5ebdaab1f83cac7e58cd5222", "sha256": "f4873336ae7fbe08ccd3583d30c0fb8328a1962a53d6a62a8f72c38b20620bb2"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.4.tar.gz", "has_sig": false, "md5_digest": "1718187a5ebdaab1f83cac7e58cd5222", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9448, "upload_time": "2016-12-07T19:58:16", "upload_time_iso_8601": "2016-12-07T19:58:16.161207Z", "url": "https://files.pythonhosted.org/packages/51/b1/d48f3dddedc1eccd5b00243267c0615767cafa213b6d1766e2c2f4fe8725/plaster-spring-boot-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "97d9f1f2a7ffc17e798e21cee2ba14c3", "sha256": "4283d8780f68605a87476a951bff5cf337791cabec1b890a92a1948e64d3f3db"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.5.tar.gz", "has_sig": false, "md5_digest": "97d9f1f2a7ffc17e798e21cee2ba14c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9431, "upload_time": "2016-12-07T20:03:39", "upload_time_iso_8601": "2016-12-07T20:03:39.090035Z", "url": "https://files.pythonhosted.org/packages/2e/20/b48142204785fabd61ae16550184f9b8f36e50bbe645db75d9bb3a6ff95c/plaster-spring-boot-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "7d927c56d634a2b34ac1c88d6b6c51bf", "sha256": "45333f960f6418be0b1f65cc441d814683e30b1bb71bb006d09a6d275da4eaf5"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.6.tar.gz", "has_sig": false, "md5_digest": "7d927c56d634a2b34ac1c88d6b6c51bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9720, "upload_time": "2016-12-07T20:40:43", "upload_time_iso_8601": "2016-12-07T20:40:43.144932Z", "url": "https://files.pythonhosted.org/packages/03/3f/895e0e80f7ce1f4df40fbba6351b195d1af3e5aa81e9b0ba764e6dcd63cf/plaster-spring-boot-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "663000190a9e3d706986ba34b71689c2", "sha256": "7d23ad0865d31aaadf2ef78c4887f1089af9494bbcead1eb012a8374510ff399"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.7.tar.gz", "has_sig": false, "md5_digest": "663000190a9e3d706986ba34b71689c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9689, "upload_time": "2016-12-07T20:46:54", "upload_time_iso_8601": "2016-12-07T20:46:54.202387Z", "url": "https://files.pythonhosted.org/packages/99/61/78f1262da316be41eb8d5399734919131aed4661f1cd1efb2c79721a3c0f/plaster-spring-boot-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "8c9c66359d71727e49997e85ef6c956d", "sha256": "3a60c0741f68ef88f51ae092e2ba9f3db8bb34160ccdc86fcdd6f8710a5943c3"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.8.tar.gz", "has_sig": false, "md5_digest": "8c9c66359d71727e49997e85ef6c956d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9684, "upload_time": "2016-12-07T20:58:41", "upload_time_iso_8601": "2016-12-07T20:58:41.620913Z", "url": "https://files.pythonhosted.org/packages/30/13/17319d7ed485ac34a4d0f791ddc312e0aea905402adb68bb461995cbf6d7/plaster-spring-boot-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "fb65ddd298690f9b13fcc8beee44b006", "sha256": "d0ac1f7c6b61c3d51d513c2e64fa9204d5ca33d4328e9914798a44ad5bd34088"}, "downloads": -1, "filename": "plaster-spring-boot-0.1.9.tar.gz", "has_sig": false, "md5_digest": "fb65ddd298690f9b13fcc8beee44b006", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10588, "upload_time": "2016-12-08T21:02:31", "upload_time_iso_8601": "2016-12-08T21:02:31.947267Z", "url": "https://files.pythonhosted.org/packages/e6/36/7cb70c0bf40d52e1f8b47d16e314a96a1c416f38770740208d9cf8b34fe7/plaster-spring-boot-0.1.9.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "96306c084a209e8721e709ceeaa9c60c", "sha256": "8d3e1f34ea4cd337e6f88cb59cfb5a50b20a0149ae651069371c0516f6c9d898"}, "downloads": -1, "filename": "plaster-spring-boot-0.2.0.tar.gz", "has_sig": false, "md5_digest": "96306c084a209e8721e709ceeaa9c60c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12048, "upload_time": "2017-05-08T16:30:30", "upload_time_iso_8601": "2017-05-08T16:30:30.391461Z", "url": "https://files.pythonhosted.org/packages/72/a8/e321cd8fd3fb87230cb16d8c7dc43c86a0cd7ff23d051dfa6a0c9c397fa9/plaster-spring-boot-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "70a5407d451d2aa6360d451ddefac6b8", "sha256": "2c21ee346f168b018d83463379d277c14b3dd418b93fb29d1713b58514883cae"}, "downloads": -1, "filename": "plaster-spring-boot-0.3.0.tar.gz", "has_sig": false, "md5_digest": "70a5407d451d2aa6360d451ddefac6b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13827, "upload_time": "2017-05-08T23:30:45", "upload_time_iso_8601": "2017-05-08T23:30:45.726223Z", "url": "https://files.pythonhosted.org/packages/74/29/f21a5d9ae6c809a38601a5c1b81b23f37d98b378ce56e294356d57223b89/plaster-spring-boot-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "70a5407d451d2aa6360d451ddefac6b8", "sha256": "2c21ee346f168b018d83463379d277c14b3dd418b93fb29d1713b58514883cae"}, "downloads": -1, "filename": "plaster-spring-boot-0.3.0.tar.gz", "has_sig": false, "md5_digest": "70a5407d451d2aa6360d451ddefac6b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13827, "upload_time": "2017-05-08T23:30:45", "upload_time_iso_8601": "2017-05-08T23:30:45.726223Z", "url": "https://files.pythonhosted.org/packages/74/29/f21a5d9ae6c809a38601a5c1b81b23f37d98b378ce56e294356d57223b89/plaster-spring-boot-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:38 2020"}