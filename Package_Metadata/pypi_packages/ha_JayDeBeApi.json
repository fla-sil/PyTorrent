{"info": {"author": "Anil Pai", "author_email": "apai@homeaway.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Programming Language :: Java", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Database", "Topic :: Software Development :: Libraries :: Java Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=================================================================\n JayDeBeApi - bridge from JDBC database drivers to Python DB-API\n=================================================================\n\n.. image:: https://img.shields.io/travis/baztian/jaydebeapi/master.svg\n   :target: https://travis-ci.org/baztian/jaydebeapi\n\n.. image:: https://img.shields.io/coveralls/baztian/jaydebeapi/master.svg\n    :target: https://coveralls.io/r/baztian/jaydebeapi\n\n.. image:: https://img.shields.io/badge/python-2.6,_2.7,_3.4-blue.svg\n    :target: https://pypi.python.org/pypi/JayDeBeApi/\n\n.. image:: https://img.shields.io/badge/jython-2.7.0-blue.svg\n    :target: https://pypi.python.org/pypi/JayDeBeApi/\n\n.. image:: https://img.shields.io/github/tag/baztian/jaydebeapi.svg\n    :target: https://pypi.python.org/pypi/JayDeBeApi/\n\n.. image:: https://img.shields.io/pypi/dm/JayDeBeApi.svg\n    :target: https://pypi.python.org/pypi/JayDeBeApi/\n\nThe JayDeBeApi module allows you to connect from Python code to\ndatabases using Java `JDBC\n<http://java.sun.com/products/jdbc/overview.html>`_. It provides a\nPython DB-API_ v2.0 to that database.\n\nIt works on ordinary Python (cPython) using the JPype_ Java\nintegration or on `Jython <http://www.jython.org/>`_ to make use of\nthe Java JDBC driver.\n\nIn contrast to zxJDBC from the Jython project JayDeBeApi let's you\naccess a database with Jython AND Python with only minor code\nmodifications. JayDeBeApi's future goal is to provide a unique and\nfast interface to different types of JDBC-Drivers through a flexible\nplug-in mechanism.\n\n.. contents::\n\nInstall\n=======\n\nYou can get and install JayDeBeApi with `pip <http://pip.pypa.io/>`_\n::\n\n    $ pip install JayDeBeApi\n\nIf you want to install JayDeBeApi in Jython make sure to have pip or\nEasyInstall available for it.\n\nOr you can get a copy of the source by cloning from the `JayDeBeApi\ngithub project <https://github.com/baztian/jaydebeapi>`_ and install\nwith ::\n\n    $ python setup.py install\n\nor if you are using Jython use ::\n\n    $ jython setup.py install\n\nIt has been tested with Jython 2.7.0.\n\nIf you are using cPython ensure that you have installed JPype_\nproperly. It has been tested with JPype1 0.5.7. Older JPype\ninstallations may cause problems.\n\nUsage\n=====\n\nBasically you just import the ``jaydebeapi`` Python module and execute\nthe ``connect`` method. This gives you a DB-API_ conform connection to\nthe database.\n\nThe first argument to ``connect`` is the name of the Java driver\nclass. The second argument is a string with the JDBC connection\nURL. Third you can optionally supply a sequence consisting of user and\npassword or alternatively a dictionary containing arguments that are\ninternally passed as properties to the Java\n``DriverManager.getConnection`` method. See the Javadoc of\n``DriverManager`` class for details.\n\nThe next parameter to ``connect`` is optional as well and specifies\nthe jar-Files of the driver if your classpath isn't set up\nsufficiently yet. The classpath set in ``CLASSPATH`` environment\nvariable will be honored. See the documentation of your Java runtime\nenvironment.\n\nHere is an example:\n\n>>> import jaydebeapi\n>>> conn = jaydebeapi.connect(\"org.hsqldb.jdbcDriver\",\n...                           \"jdbc:hsqldb:mem:.\",\n...                           [\"SA\", \"\"],\n...                           \"/path/to/hsqldb.jar\",)\n>>> curs = conn.cursor()\n>>> curs.execute('create table CUSTOMER'\n...                '(\"CUST_ID\" INTEGER not null,'\n...                ' \"NAME\" VARCHAR not null,'\n...                ' primary key (\"CUST_ID\"))'\n...             )\n>>> curs.execute(\"insert into CUSTOMER values (1, 'John')\")\n>>> curs.execute(\"select * from CUSTOMER\")\n>>> curs.fetchall()\n[(1, u'John')]\n>>> curs.close()\n>>> conn.close()\n\nAn alternative way to establish connection using connection\nproperties:\n\n>>> conn = jaydebeapi.connect(\"org.hsqldb.jdbcDriver\",\n...                           \"jdbc:hsqldb:mem:.\",\n...                           {'user': \"SA\", 'password': \"\",\n...                            'other_property': \"foobar\"},\n...                           \"/path/to/hsqldb.jar\",)\n\n\nIf you're having trouble getting this work check if your ``JAVA_HOME``\nenvironmentvariable is set correctly. For example I have to set it on\nmy Ubuntu machine like this ::\n\n    $ JAVA_HOME=/usr/lib/jvm/java-8-openjdk python\n\nSupported databases\n===================\n\nIn theory *every database with a suitable JDBC driver should work*. It\nis confirmed to work with the following databases:\n\n* SQLite\n* Hypersonic SQL (HSQLDB)\n* IBM DB2\n* IBM DB2 for mainframes\n* Oracle\n* Teradata DB\n* Netezza\n* Mimer DB\n* Microsoft SQL Server\n* MySQL\n* PostgreSQL\n* many more...\n\nContributing\n============\n\nPlease submit `bugs and patches\n<https://github.com/baztian/jaydebeapi/issues>`_. All contributors\nwill be acknowledged. Thanks!\n\nLicense\n=======\n\nJayDeBeApi is released under the GNU Lesser General Public license\n(LGPL). See the file ``COPYING`` and ``COPYING.LESSER`` in the\ndistribution for details.\n\n\nChangelog\n=========\n\n- Next version - unreleased\n- 1.1.1 - 2017-03-21\n\n  - Don't fail on dates before 1900 on Python < 3.\n\n- 1.1.0 - 2017-03-19\n\n  - Support BIT and TINYINT type mappings (thanks @Mokubyow for\n    reporting the issue).\n\n- 1.0.0 - 2017-01-10\n\n  - Allow for db properties to be passed to the connect\n    method. *Probably incompatible to code based on previous\n    versions.* See documentation of the connect method. (Thanks\n    @testlnord for you efforts and the patience.)\n\n  - New major version due to possible api incompatibility.\n\n- 0.2.0 - 2015-04-26\n\n  - Python 3 support (requires JPype1 >= 0.6.0).\n\n- 0.1.6 - 2015-04-10\n\n  - Fix Jython handling of Java exceptions that don't subclass python Exception\n\n  - Enrich exceptions with message from java SQLExceptions\n\n  - Be more specific about DB API exceptions: Distinguish DatabaseError and\n    InterfaceError.\n\n  - Fix typo LONGNARCHAR vs LONGVARCHAR (thanks @datdo for reporting #4)\n\n- 0.1.5 - 2015-03-02\n\n  - Add version number to module.\n\n  - Improve robustness of java to python type conversion.\n\n  - Support Time type.\n\n  - Add DB-API compliant exception handling.\n\n  - Minor documentation improvements.\n\n  - Some development related changes (Host project at github, use\n    Travis CI, use JPype1 for tests).\n\n- 0.1.4 - 2013-10-29\n\n  - More convenient way to setup Java classpath. *Important note*\n    check the changes to the ``connect`` method and adapt your code.\n\n  - Honor ``CLASSPATH`` if used in JPype mode.\n\n  - Set ``.rowcount`` properly.\n\n  - Changed signature of ``.setoutputsize()`` to be DB-API compliant.\n\n- 0.1.3 - 2011-01-27\n\n  - Fixed DB-API_ violation: Use ``curs.execute('foo ?', (bar, baz))``\n    instead of ``curs.execute('foo ?', bar, baz)``.\n\n  - Free resources after ``executemany`` call.\n\n  - Improved type handling. Initial support for BLOB columns.\n\n- 0.1.2 - 2011-01-25\n\n  - ``easy_install JayDeBeApi`` should really work.\n\n- 0.1.1 - 2010-12-12\n\n  - Fixed bug #688290 \"NULL values with converters error on fetch\".\n  - Fixed bug #684909 \"Selecting ROWIDs errors out on fetch\".\n\n- 0.1 - 2010-08-10\n\n  - Initial release.\n\nTo do\n=====\n\n- Extract Java calls to separate Java methods to increase performance.\n- Check if https://code.launchpad.net/dbapi-compliance can help making\n  JayDeBeApi more DB-API compliant.\n- Test it on different databases and provide a flexible db specific\n  pluign mechanism.\n- SQLAlchemy modules (separate project)\n\n.. _DB-API: http://www.python.org/dev/peps/pep-0249/\n.. _JPype: https://pypi.python.org/pypi/JPype1/\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/anilpai/jaydebeapi", "keywords": "db api java jdbc bridge connect sql jpype jython", "license": "GNU LGPL", "maintainer": "", "maintainer_email": "", "name": "ha_JayDeBeApi", "package_url": "https://pypi.org/project/ha_JayDeBeApi/", "platform": "", "project_url": "https://pypi.org/project/ha_JayDeBeApi/", "project_urls": {"Homepage": "https://github.com/anilpai/jaydebeapi"}, "release_url": "https://pypi.org/project/ha_JayDeBeApi/2.1.7/", "requires_dist": null, "requires_python": "", "summary": "Use JDBC database drivers from Python 2/3 or Jython with a DB-API.", "version": "2.1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/baztian/jaydebeapi\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/baztian/jaydebeapi/master.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df08eda958182e9aa6de14c1d22f1c3ed1c751c2/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f62617a7469616e2f6a6179646562656170692f6d61737465722e737667\"></a>\n<a href=\"https://coveralls.io/r/baztian/jaydebeapi\" rel=\"nofollow\"><img alt=\"https://img.shields.io/coveralls/baztian/jaydebeapi/master.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa8f65da88e20315377e5a36ea0cfe3e21b29578/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f62617a7469616e2f6a6179646562656170692f6d61737465722e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/JayDeBeApi/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/python-2.6,_2.7,_3.4-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f108bdb35685369d1463c477b80127439170b46a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d322e362c5f322e372c5f332e342d626c75652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/JayDeBeApi/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/jython-2.7.0-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f1ecf1ba28e2b5d9e32bba8c2b29e8648ab7dc5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6a7974686f6e2d322e372e302d626c75652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/JayDeBeApi/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/github/tag/baztian/jaydebeapi.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f50baa120696661e3b1dcea5e955f62786de00dc/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f62617a7469616e2f6a6179646562656170692e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/JayDeBeApi/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/dm/JayDeBeApi.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d537209452a7ec39bb8dc0b4b4aae4077da6728e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f4a6179446542654170692e737667\"></a>\n<p>The JayDeBeApi module allows you to connect from Python code to\ndatabases using Java <a href=\"http://java.sun.com/products/jdbc/overview.html\" rel=\"nofollow\">JDBC</a>. It provides a\nPython <a href=\"http://www.python.org/dev/peps/pep-0249/\" rel=\"nofollow\">DB-API</a> v2.0 to that database.</p>\n<p>It works on ordinary Python (cPython) using the <a href=\"https://pypi.python.org/pypi/JPype1/\" rel=\"nofollow\">JPype</a> Java\nintegration or on <a href=\"http://www.jython.org/\" rel=\"nofollow\">Jython</a> to make use of\nthe Java JDBC driver.</p>\n<p>In contrast to zxJDBC from the Jython project JayDeBeApi let\u2019s you\naccess a database with Jython AND Python with only minor code\nmodifications. JayDeBeApi\u2019s future goal is to provide a unique and\nfast interface to different types of JDBC-Drivers through a flexible\nplug-in mechanism.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#install\" id=\"id1\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#usage\" id=\"id2\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#supported-databases\" id=\"id3\" rel=\"nofollow\">Supported databases</a></li>\n<li><a href=\"#contributing\" id=\"id4\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#license\" id=\"id5\" rel=\"nofollow\">License</a></li>\n<li><a href=\"#changelog\" id=\"id6\" rel=\"nofollow\">Changelog</a></li>\n<li><a href=\"#to-do\" id=\"id7\" rel=\"nofollow\">To do</a></li>\n</ul>\n</div>\n<div id=\"install\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Install</a></h2>\n<p>You can get and install JayDeBeApi with <a href=\"http://pip.pypa.io/\" rel=\"nofollow\">pip</a></p>\n<pre>$ pip install JayDeBeApi\n</pre>\n<p>If you want to install JayDeBeApi in Jython make sure to have pip or\nEasyInstall available for it.</p>\n<p>Or you can get a copy of the source by cloning from the <a href=\"https://github.com/baztian/jaydebeapi\" rel=\"nofollow\">JayDeBeApi\ngithub project</a> and install\nwith</p>\n<pre>$ python setup.py install\n</pre>\n<p>or if you are using Jython use</p>\n<pre>$ jython setup.py install\n</pre>\n<p>It has been tested with Jython 2.7.0.</p>\n<p>If you are using cPython ensure that you have installed <a href=\"https://pypi.python.org/pypi/JPype1/\" rel=\"nofollow\">JPype</a>\nproperly. It has been tested with JPype1 0.5.7. Older JPype\ninstallations may cause problems.</p>\n</div>\n<div id=\"usage\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Usage</a></h2>\n<p>Basically you just import the <tt>jaydebeapi</tt> Python module and execute\nthe <tt>connect</tt> method. This gives you a <a href=\"http://www.python.org/dev/peps/pep-0249/\" rel=\"nofollow\">DB-API</a> conform connection to\nthe database.</p>\n<p>The first argument to <tt>connect</tt> is the name of the Java driver\nclass. The second argument is a string with the JDBC connection\nURL. Third you can optionally supply a sequence consisting of user and\npassword or alternatively a dictionary containing arguments that are\ninternally passed as properties to the Java\n<tt>DriverManager.getConnection</tt> method. See the Javadoc of\n<tt>DriverManager</tt> class for details.</p>\n<p>The next parameter to <tt>connect</tt> is optional as well and specifies\nthe jar-Files of the driver if your classpath isn\u2019t set up\nsufficiently yet. The classpath set in <tt>CLASSPATH</tt> environment\nvariable will be honored. See the documentation of your Java runtime\nenvironment.</p>\n<p>Here is an example:</p>\n<pre>&gt;&gt;&gt; import jaydebeapi\n&gt;&gt;&gt; conn = jaydebeapi.connect(\"org.hsqldb.jdbcDriver\",\n...                           \"jdbc:hsqldb:mem:.\",\n...                           [\"SA\", \"\"],\n...                           \"/path/to/hsqldb.jar\",)\n&gt;&gt;&gt; curs = conn.cursor()\n&gt;&gt;&gt; curs.execute('create table CUSTOMER'\n...                '(\"CUST_ID\" INTEGER not null,'\n...                ' \"NAME\" VARCHAR not null,'\n...                ' primary key (\"CUST_ID\"))'\n...             )\n&gt;&gt;&gt; curs.execute(\"insert into CUSTOMER values (1, 'John')\")\n&gt;&gt;&gt; curs.execute(\"select * from CUSTOMER\")\n&gt;&gt;&gt; curs.fetchall()\n[(1, u'John')]\n&gt;&gt;&gt; curs.close()\n&gt;&gt;&gt; conn.close()\n</pre>\n<p>An alternative way to establish connection using connection\nproperties:</p>\n<pre>&gt;&gt;&gt; conn = jaydebeapi.connect(\"org.hsqldb.jdbcDriver\",\n...                           \"jdbc:hsqldb:mem:.\",\n...                           {'user': \"SA\", 'password': \"\",\n...                            'other_property': \"foobar\"},\n...                           \"/path/to/hsqldb.jar\",)\n</pre>\n<p>If you\u2019re having trouble getting this work check if your <tt>JAVA_HOME</tt>\nenvironmentvariable is set correctly. For example I have to set it on\nmy Ubuntu machine like this</p>\n<pre>$ JAVA_HOME=/usr/lib/jvm/java-8-openjdk python\n</pre>\n</div>\n<div id=\"supported-databases\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Supported databases</a></h2>\n<p>In theory <em>every database with a suitable JDBC driver should work</em>. It\nis confirmed to work with the following databases:</p>\n<ul>\n<li>SQLite</li>\n<li>Hypersonic SQL (HSQLDB)</li>\n<li>IBM DB2</li>\n<li>IBM DB2 for mainframes</li>\n<li>Oracle</li>\n<li>Teradata DB</li>\n<li>Netezza</li>\n<li>Mimer DB</li>\n<li>Microsoft SQL Server</li>\n<li>MySQL</li>\n<li>PostgreSQL</li>\n<li>many more\u2026</li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Contributing</a></h2>\n<p>Please submit <a href=\"https://github.com/baztian/jaydebeapi/issues\" rel=\"nofollow\">bugs and patches</a>. All contributors\nwill be acknowledged. Thanks!</p>\n</div>\n<div id=\"license\">\n<h2><a href=\"#id5\" rel=\"nofollow\">License</a></h2>\n<p>JayDeBeApi is released under the GNU Lesser General Public license\n(LGPL). See the file <tt>COPYING</tt> and <tt>COPYING.LESSER</tt> in the\ndistribution for details.</p>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Changelog</a></h2>\n<ul>\n<li>Next version - unreleased</li>\n<li>1.1.1 - 2017-03-21<ul>\n<li>Don\u2019t fail on dates before 1900 on Python &lt; 3.</li>\n</ul>\n</li>\n<li>1.1.0 - 2017-03-19<ul>\n<li>Support BIT and TINYINT type mappings (thanks @Mokubyow for\nreporting the issue).</li>\n</ul>\n</li>\n<li>1.0.0 - 2017-01-10<ul>\n<li>Allow for db properties to be passed to the connect\nmethod. <em>Probably incompatible to code based on previous\nversions.</em> See documentation of the connect method. (Thanks\n@testlnord for you efforts and the patience.)</li>\n<li>New major version due to possible api incompatibility.</li>\n</ul>\n</li>\n<li>0.2.0 - 2015-04-26<ul>\n<li>Python 3 support (requires JPype1 &gt;= 0.6.0).</li>\n</ul>\n</li>\n<li>0.1.6 - 2015-04-10<ul>\n<li>Fix Jython handling of Java exceptions that don\u2019t subclass python Exception</li>\n<li>Enrich exceptions with message from java SQLExceptions</li>\n<li>Be more specific about DB API exceptions: Distinguish DatabaseError and\nInterfaceError.</li>\n<li>Fix typo LONGNARCHAR vs LONGVARCHAR (thanks @datdo for reporting #4)</li>\n</ul>\n</li>\n<li>0.1.5 - 2015-03-02<ul>\n<li>Add version number to module.</li>\n<li>Improve robustness of java to python type conversion.</li>\n<li>Support Time type.</li>\n<li>Add DB-API compliant exception handling.</li>\n<li>Minor documentation improvements.</li>\n<li>Some development related changes (Host project at github, use\nTravis CI, use JPype1 for tests).</li>\n</ul>\n</li>\n<li>0.1.4 - 2013-10-29<ul>\n<li>More convenient way to setup Java classpath. <em>Important note</em>\ncheck the changes to the <tt>connect</tt> method and adapt your code.</li>\n<li>Honor <tt>CLASSPATH</tt> if used in JPype mode.</li>\n<li>Set <tt>.rowcount</tt> properly.</li>\n<li>Changed signature of <tt>.setoutputsize()</tt> to be DB-API compliant.</li>\n</ul>\n</li>\n<li>0.1.3 - 2011-01-27<ul>\n<li>Fixed <a href=\"http://www.python.org/dev/peps/pep-0249/\" rel=\"nofollow\">DB-API</a> violation: Use <tt><span class=\"pre\">curs.execute('foo</span> <span class=\"pre\">?',</span> (bar, baz))</tt>\ninstead of <tt><span class=\"pre\">curs.execute('foo</span> <span class=\"pre\">?',</span> bar, baz)</tt>.</li>\n<li>Free resources after <tt>executemany</tt> call.</li>\n<li>Improved type handling. Initial support for BLOB columns.</li>\n</ul>\n</li>\n<li>0.1.2 - 2011-01-25<ul>\n<li><tt>easy_install JayDeBeApi</tt> should really work.</li>\n</ul>\n</li>\n<li>0.1.1 - 2010-12-12<ul>\n<li>Fixed bug #688290 \u201cNULL values with converters error on fetch\u201d.</li>\n<li>Fixed bug #684909 \u201cSelecting ROWIDs errors out on fetch\u201d.</li>\n</ul>\n</li>\n<li>0.1 - 2010-08-10<ul>\n<li>Initial release.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"to-do\">\n<h2><a href=\"#id7\" rel=\"nofollow\">To do</a></h2>\n<ul>\n<li>Extract Java calls to separate Java methods to increase performance.</li>\n<li>Check if <a href=\"https://code.launchpad.net/dbapi-compliance\" rel=\"nofollow\">https://code.launchpad.net/dbapi-compliance</a> can help making\nJayDeBeApi more DB-API compliant.</li>\n<li>Test it on different databases and provide a flexible db specific\npluign mechanism.</li>\n<li>SQLAlchemy modules (separate project)</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4446664, "releases": {"2.1.1": [{"comment_text": "", "digests": {"md5": "189157c1a59972f5e16a2864258dcee9", "sha256": "c7a9014fdd3b7ddff7ff6bbdb323200c9a39f80c823726e3744427839865846f"}, "downloads": -1, "filename": "ha_JayDeBeApi-2.1.1.tar.gz", "has_sig": false, "md5_digest": "189157c1a59972f5e16a2864258dcee9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31057, "upload_time": "2018-10-30T19:30:52", "upload_time_iso_8601": "2018-10-30T19:30:52.147827Z", "url": "https://files.pythonhosted.org/packages/87/5a/42a6b54ff44c4a37a069e366321b38464749eb2c45e9e7bc29e1627b7d55/ha_JayDeBeApi-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "4c1ea9d91ce8f0d43ee36b440d8268d7", "sha256": "1d4110f00225b901cf6c4eb6849e78cbf996d44e1bb84a0695cddc4576d6b65b"}, "downloads": -1, "filename": "ha_JayDeBeApi-2.1.2.tar.gz", "has_sig": false, "md5_digest": "4c1ea9d91ce8f0d43ee36b440d8268d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31136, "upload_time": "2018-11-01T22:05:11", "upload_time_iso_8601": "2018-11-01T22:05:11.888564Z", "url": "https://files.pythonhosted.org/packages/e5/8f/a4b073e7279cf8483f92e323a9a63ba6af4b2863eba3459bfae24f80dc83/ha_JayDeBeApi-2.1.2.tar.gz", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "3f622219ed14d75942756c1e3af00099", "sha256": "aeb60eb33159394ea6150cf917de99bab11cb854cbf4335c265ce255d04cc93a"}, "downloads": -1, "filename": "ha_JayDeBeApi-2.1.3.tar.gz", "has_sig": false, "md5_digest": "3f622219ed14d75942756c1e3af00099", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31138, "upload_time": "2018-11-02T21:22:54", "upload_time_iso_8601": "2018-11-02T21:22:54.867835Z", "url": "https://files.pythonhosted.org/packages/6c/e6/e2c2992964107da3050f2c4e9757e304c4452abafcaf975bcbb1abbeb599/ha_JayDeBeApi-2.1.3.tar.gz", "yanked": false}], "2.1.4": [{"comment_text": "", "digests": {"md5": "e0d21ebd220f0b9e8192d9057bc9c0f1", "sha256": "f0f0d1d8dfdc1a464091bb411a6a0b3689341320b5fdf1e076d5e57660258eee"}, "downloads": -1, "filename": "ha_JayDeBeApi-2.1.4.tar.gz", "has_sig": false, "md5_digest": "e0d21ebd220f0b9e8192d9057bc9c0f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31134, "upload_time": "2018-11-02T21:49:20", "upload_time_iso_8601": "2018-11-02T21:49:20.371689Z", "url": "https://files.pythonhosted.org/packages/9e/2b/a7ebe4b5d5b57868c9a312df6f86627d824083b0a6d3b5c469af1204a7cf/ha_JayDeBeApi-2.1.4.tar.gz", "yanked": false}], "2.1.5": [{"comment_text": "", "digests": {"md5": "346360bb0e6a8cfb7a600fa47c3afc3e", "sha256": "fead1cb0830da2ae9b0fc487e5b55f5e4889af70b4251d97a4ec4738fec41cae"}, "downloads": -1, "filename": "ha_JayDeBeApi-2.1.5.tar.gz", "has_sig": false, "md5_digest": "346360bb0e6a8cfb7a600fa47c3afc3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31138, "upload_time": "2018-11-02T22:32:46", "upload_time_iso_8601": "2018-11-02T22:32:46.687938Z", "url": "https://files.pythonhosted.org/packages/7b/eb/7319053435d24396572adbe3d65d9d7d0e202b5108dd58503930492323b8/ha_JayDeBeApi-2.1.5.tar.gz", "yanked": false}], "2.1.6": [{"comment_text": "", "digests": {"md5": "2b38adc9ed99d84d77d48e3d6a199ded", "sha256": "be33ed3c950e4e81571dc863a09200881ac6325c5a4ee58f108ec1a9ce82ff98"}, "downloads": -1, "filename": "ha_JayDeBeApi-2.1.6.tar.gz", "has_sig": false, "md5_digest": "2b38adc9ed99d84d77d48e3d6a199ded", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31132, "upload_time": "2018-11-03T00:02:37", "upload_time_iso_8601": "2018-11-03T00:02:37.912057Z", "url": "https://files.pythonhosted.org/packages/02/ef/d66fec89808b32d5b923997e907344a30baf722b8db4016cfdb21bdf2ff5/ha_JayDeBeApi-2.1.6.tar.gz", "yanked": false}], "2.1.7": [{"comment_text": "", "digests": {"md5": "dae4b0a8ae4b1337703840be6f14a6dc", "sha256": "d5d00d0d1af9eb7139d1ad8be4457e7513c26a0b200132b6da9baf65603dc7d2"}, "downloads": -1, "filename": "ha_JayDeBeApi-2.1.7.tar.gz", "has_sig": false, "md5_digest": "dae4b0a8ae4b1337703840be6f14a6dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31105, "upload_time": "2018-11-03T03:49:51", "upload_time_iso_8601": "2018-11-03T03:49:51.653919Z", "url": "https://files.pythonhosted.org/packages/1a/93/3d660eea7f2d3f0f016ef42a626dbbfb91c948020770bc05d58528118716/ha_JayDeBeApi-2.1.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dae4b0a8ae4b1337703840be6f14a6dc", "sha256": "d5d00d0d1af9eb7139d1ad8be4457e7513c26a0b200132b6da9baf65603dc7d2"}, "downloads": -1, "filename": "ha_JayDeBeApi-2.1.7.tar.gz", "has_sig": false, "md5_digest": "dae4b0a8ae4b1337703840be6f14a6dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31105, "upload_time": "2018-11-03T03:49:51", "upload_time_iso_8601": "2018-11-03T03:49:51.653919Z", "url": "https://files.pythonhosted.org/packages/1a/93/3d660eea7f2d3f0f016ef42a626dbbfb91c948020770bc05d58528118716/ha_JayDeBeApi-2.1.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:43 2020"}