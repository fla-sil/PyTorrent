{"info": {"author": "Ioannis Foukarakis", "author_email": "ioannis.foukarakis@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "\nHoneybadger-Extensions\n======================\n\n|CircleCI|\n\n**Honeybadger-Extensions** extend current `Honeybadger Python library`_ to better support `Celery`_ & `Flask`_.\n\nIt offers:\n\n- Improved reporting, including details for component, action etc.\n- Easier Honeybadger via Flask's or Celery's configuration object.\n- (Optional) Automatic reporting of errors detected by Celery or Flask.\n\n\nFeatures\n--------\n\nHoneybadger-Extensions provides the ``install_celery_handler()`` function which can be used\nat any time which can be used to initialize both Honeybadger & allow improved Honeybadger reporting. It also offers the\n``HoneybadgerFlask`` Flask extension that adds more information to Honeybadger logging, as well as automatic logging of\nerrors raised in the view functions.\n\nExample 1: Initialize Celery\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIn the following example, we will use the ``install_celery_handler`` to setup Honeybadger reporting.\n\n.. code:: python\n\n    from celery import Celery\n    from honeybadger_extensions import install_celery_handler\n\n    celery = Celery(__name__)\n    celery.config_from_object({\n        'HONEYBADGER_API_KEY': '<your key>',\n        'HONEYBADGER_ENVIRONMENT': 'development'\n    })\n\n    install_celery_handler(config=celery.conf, report_exceptions=True)\n\n\nExample 2: Initialize Flask\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can use HoneybadgerFlask extension to load Honeybadger configuration from Flask configuration object.\n\n.. code:: python\n\n    from flask import Flask, jsonify\n    from honeybadger_extensions import HoneybadgerFlask\n\n    app = Flask(__name__)\n    app.config['HONEYBADGER_ENVIRONMENT'] = 'development'\n    app.config['HONEYBADGER_API_KEY'] = '<your key>'\n    app.config['HONEYBADGER_EXCLUDE_HEADERS'] = 'Authorization, Proxy-Authorization, X-Custom-Key'\n    app.config['HONEYBADGER_PARAMS_FILTERS'] = 'password, secret, credit-card'\n\n    # Setup Honeybadger and listen for exceptions\n    HoneybadgerFlask(app, report_exceptions=True)\n\n    @app.route('/')\n    def index():\n        a = int(request.args.get('a'))\n        b = int(request.args.get('b'))\n\n        logger.info('Dividing two numbers {} {}'.format(a, b))\n        return jsonify({'result': a / b})\n\nInstallation\n------------\nThe easiest way to install it is using ``pip`` from PyPI\n\n.. code:: bash\n\n    pip install Honeybadger-Extensions\n\n\nLicense\n-------\n\nSee the `LICENSE`_ file for license rights and limitations (MIT).\n\n.. _Honeybadger Python Library: https://github.com/honeybadger-io/honeybadger-python\n.. _Flask: http://flask.pocoo.org/\n.. _Celery: http://www.celeryproject.org/\n.. _LICENSE: https://github.com/Workable/honeybadger-extensions/blob/master/LICENSE.md\n.. |CircleCI| image:: https://img.shields.io/circleci/project/github/Workable/honeybadger-extensions.svg\n   :target: https://circleci.com/gh/Workable/honeybadger-extensions\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/Workable/honeybadger-extensions", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Honeybadger-Extensions", "package_url": "https://pypi.org/project/Honeybadger-Extensions/", "platform": "any", "project_url": "https://pypi.org/project/Honeybadger-Extensions/", "project_urls": {"Homepage": "http://github.com/Workable/honeybadger-extensions"}, "release_url": "https://pypi.org/project/Honeybadger-Extensions/0.1.2/", "requires_dist": ["honeybadger (==0.1.2)", "blinker (>=1.1)", "Flask (>=0.8)", "celery (~=4.1.0)", "celery (~=4.1.0); extra == 'celery'", "nose; extra == 'test'", "mock (==2.0.0); extra == 'test'", "coverage (~=4.3.4); extra == 'test'"], "requires_python": "", "summary": "Honeybadger extension that can log exceptions raised by Flask or Celery, adding more context than the original  honeybadger python library.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://circleci.com/gh/Workable/honeybadger-extensions\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86c833f72f3ad63ac160eb95184bbaab9a948c2d/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f576f726b61626c652f686f6e65796261646765722d657874656e73696f6e732e737667\"></a></p>\n<p><strong>Honeybadger-Extensions</strong> extend current <a href=\"https://github.com/honeybadger-io/honeybadger-python\" rel=\"nofollow\">Honeybadger Python library</a> to better support <a href=\"http://www.celeryproject.org/\" rel=\"nofollow\">Celery</a> &amp; <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a>.</p>\n<p>It offers:</p>\n<ul>\n<li>Improved reporting, including details for component, action etc.</li>\n<li>Easier Honeybadger via Flask\u2019s or Celery\u2019s configuration object.</li>\n<li>(Optional) Automatic reporting of errors detected by Celery or Flask.</li>\n</ul>\n<div id=\"features\">\n<h2>Features</h2>\n<p>Honeybadger-Extensions provides the <tt>install_celery_handler()</tt> function which can be used\nat any time which can be used to initialize both Honeybadger &amp; allow improved Honeybadger reporting. It also offers the\n<tt>HoneybadgerFlask</tt> Flask extension that adds more information to Honeybadger logging, as well as automatic logging of\nerrors raised in the view functions.</p>\n<div id=\"example-1-initialize-celery\">\n<h3>Example 1: Initialize Celery</h3>\n<p>In the following example, we will use the <tt>install_celery_handler</tt> to setup Honeybadger reporting.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">celery</span> <span class=\"kn\">import</span> <span class=\"n\">Celery</span>\n<span class=\"kn\">from</span> <span class=\"nn\">honeybadger_extensions</span> <span class=\"kn\">import</span> <span class=\"n\">install_celery_handler</span>\n\n<span class=\"n\">celery</span> <span class=\"o\">=</span> <span class=\"n\">Celery</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">celery</span><span class=\"o\">.</span><span class=\"n\">config_from_object</span><span class=\"p\">({</span>\n    <span class=\"s1\">'HONEYBADGER_API_KEY'</span><span class=\"p\">:</span> <span class=\"s1\">'&lt;your key&gt;'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'HONEYBADGER_ENVIRONMENT'</span><span class=\"p\">:</span> <span class=\"s1\">'development'</span>\n<span class=\"p\">})</span>\n\n<span class=\"n\">install_celery_handler</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">celery</span><span class=\"o\">.</span><span class=\"n\">conf</span><span class=\"p\">,</span> <span class=\"n\">report_exceptions</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"example-2-initialize-flask\">\n<h3>Example 2: Initialize Flask</h3>\n<p>You can use HoneybadgerFlask extension to load Honeybadger configuration from Flask configuration object.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span><span class=\"p\">,</span> <span class=\"n\">jsonify</span>\n<span class=\"kn\">from</span> <span class=\"nn\">honeybadger_extensions</span> <span class=\"kn\">import</span> <span class=\"n\">HoneybadgerFlask</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'HONEYBADGER_ENVIRONMENT'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'development'</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'HONEYBADGER_API_KEY'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;your key&gt;'</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'HONEYBADGER_EXCLUDE_HEADERS'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'Authorization, Proxy-Authorization, X-Custom-Key'</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'HONEYBADGER_PARAMS_FILTERS'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'password, secret, credit-card'</span>\n\n<span class=\"c1\"># Setup Honeybadger and listen for exceptions</span>\n<span class=\"n\">HoneybadgerFlask</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">report_exceptions</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">():</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">))</span>\n    <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">))</span>\n\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Dividing two numbers </span><span class=\"si\">{}</span><span class=\"s1\"> </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">({</span><span class=\"s1\">'result'</span><span class=\"p\">:</span> <span class=\"n\">a</span> <span class=\"o\">/</span> <span class=\"n\">b</span><span class=\"p\">})</span>\n</pre>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The easiest way to install it is using <tt>pip</tt> from PyPI</p>\n<pre>pip install Honeybadger-Extensions\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>See the <a href=\"https://github.com/Workable/honeybadger-extensions/blob/master/LICENSE.md\" rel=\"nofollow\">LICENSE</a> file for license rights and limitations (MIT).</p>\n</div>\n\n          </div>"}, "last_serial": 3587110, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a1cbe61aebd34d9fc8a40e90d3faf6c5", "sha256": "545e263f9c5e3c3a103bdd2322134cb39bd1bb8bc44fe06014a7a2122286ae1b"}, "downloads": -1, "filename": "Honeybadger_Extensions-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a1cbe61aebd34d9fc8a40e90d3faf6c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9681, "upload_time": "2017-10-11T12:41:01", "upload_time_iso_8601": "2017-10-11T12:41:01.017630Z", "url": "https://files.pythonhosted.org/packages/46/99/e00976915970ecc02085a720696688888885aa9bc5919a6a79f1fe51f538/Honeybadger_Extensions-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "942be3c64658d2ac892701f8a947c570", "sha256": "dd5fe36f17baaf0d55db31c4e52880c0e4ccec6b9165f5cd9d8fca12a651aefc"}, "downloads": -1, "filename": "Honeybadger-Extensions-0.1.0.tar.gz", "has_sig": false, "md5_digest": "942be3c64658d2ac892701f8a947c570", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7655, "upload_time": "2017-10-11T12:41:02", "upload_time_iso_8601": "2017-10-11T12:41:02.980455Z", "url": "https://files.pythonhosted.org/packages/1c/73/23a0e3888ba64536c64853d156e92da70237daf54799913e890ee55d676e/Honeybadger-Extensions-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "86a537e505344621f5fa3213793fe416", "sha256": "5388b3acb7ff6cc78d0c405184d0a05686514c5d132cfa4ef2c6de85c494a615"}, "downloads": -1, "filename": "Honeybadger_Extensions-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "86a537e505344621f5fa3213793fe416", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9684, "upload_time": "2018-02-16T11:25:21", "upload_time_iso_8601": "2018-02-16T11:25:21.962718Z", "url": "https://files.pythonhosted.org/packages/bc/15/e3b9d38e6979b38f87f7707cff37d1832d844d8586e6f7bcbfb61b68b038/Honeybadger_Extensions-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92eeb3267828e6f61bf810ac77a7b725", "sha256": "6301bf12fc6ead228314f03c73e3093786a12e89e6c212f01ff34ffafeec0fd6"}, "downloads": -1, "filename": "Honeybadger-Extensions-0.1.2.tar.gz", "has_sig": false, "md5_digest": "92eeb3267828e6f61bf810ac77a7b725", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7601, "upload_time": "2018-02-16T11:25:24", "upload_time_iso_8601": "2018-02-16T11:25:24.173247Z", "url": "https://files.pythonhosted.org/packages/da/d4/39ced0da5ebdc28f941f7fd0a8898debea2d2c8db48d50f105c487ddeb56/Honeybadger-Extensions-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "86a537e505344621f5fa3213793fe416", "sha256": "5388b3acb7ff6cc78d0c405184d0a05686514c5d132cfa4ef2c6de85c494a615"}, "downloads": -1, "filename": "Honeybadger_Extensions-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "86a537e505344621f5fa3213793fe416", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9684, "upload_time": "2018-02-16T11:25:21", "upload_time_iso_8601": "2018-02-16T11:25:21.962718Z", "url": "https://files.pythonhosted.org/packages/bc/15/e3b9d38e6979b38f87f7707cff37d1832d844d8586e6f7bcbfb61b68b038/Honeybadger_Extensions-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92eeb3267828e6f61bf810ac77a7b725", "sha256": "6301bf12fc6ead228314f03c73e3093786a12e89e6c212f01ff34ffafeec0fd6"}, "downloads": -1, "filename": "Honeybadger-Extensions-0.1.2.tar.gz", "has_sig": false, "md5_digest": "92eeb3267828e6f61bf810ac77a7b725", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7601, "upload_time": "2018-02-16T11:25:24", "upload_time_iso_8601": "2018-02-16T11:25:24.173247Z", "url": "https://files.pythonhosted.org/packages/da/d4/39ced0da5ebdc28f941f7fd0a8898debea2d2c8db48d50f105c487ddeb56/Honeybadger-Extensions-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:42 2020"}