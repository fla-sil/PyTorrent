{"info": {"author": "Gorka Eguileor", "author_email": "gorka@eguileor.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7"], "description": "===========================\npinliner - Python Inliner\n===========================\n\n.. image:: https://img.shields.io/:license-apache-blue.svg\n         :target: http://www.apache.org/licenses/LICENSE-2.0\n\n.. image:: https://img.shields.io/pypi/v/pinliner.svg\n        :target: https://pypi.python.org/pypi/pinliner\n\n\nThis tool allows you to merge all files that comprise a Python package into\na single file and be able to use this single file as if it were a package.\n\nNot only will it behave as if it were the original package, but it will also\nshow code in exceptions and debug sessions, and will display the right line\nnumber and file when logging.\n\nImports will work as usual so if you have a package structure like:\n\n::\n\n    .\n    \u2514\u2500\u2500 [my_package]\n         \u251c\u2500\u2500 file_a.py\n         \u251c\u2500\u2500 [sub_package]\n         \u2502\u00a0\u00a0  \u251c\u2500\u2500 file_b.py\n         \u2502\u00a0\u00a0  \u2514\u2500\u2500 __init__.py\n         \u251c\u2500\u2500 __init__.py\n\nAnd with pinliner installed you execute:\n\n.. code:: bash\n\n    $ mkdir test\n    $ pinliner my_package test/my_package.py\n    $ cd test\n    $ python\n\nYou'll be able to use generated `my_package.py` file as if it were the real\npackage:\n\n.. code:: python\n\n    >>> import my_package\n    >>> from my_package import file_a as a_file\n    >>> from my_package.sub_package import file_b\n\nAnd `__init__.py` contents will be executed as expected when importing\n`my_package` package and you'll be able to access its contents like you would\nwith your normal package.\n\nModules will also behave as usual.\n\nIf your package is checking `__name__` for `__main__` it will also work as\nusual.  Although given the fact that we only have 1 file we will no longer be\nable to call other packages/modules directly from the command line to trigger\ncode conditioned to `__name__` having `__main__` as its value.\n\nLoader code will automatically compile packages and modules to byte code,\nbefore running it.  When a module is imported for the first time, or when the\nspecific's package/module source (not the whole inlined file) is more recent\nthan the current compiled file, a .pyc file containing the compiled code will\nbe created in the same directory as the pinlined .py file.\n\nIf the byte code is up to date then it will be used instead, thus avoiding a\nrecompilation, exactly the same as python normally does, with the only\nexception that all .pyc files will be in the same directory and the filenames\nwill include the full path to the original file.\n\nInstallation\n------------\n\nYou can install pinliner globally in your system or use a virtual environment,\nthis is how it could be done using a virtual environment:\n\n.. code:: bash\n\n    $ virtualenv .venv\n    $ source .venv/bin/activate\n    $ pip install pinliner\n\nAfter that you can run the tool with `pinliner`.\n\n\n=======\nHistory\n=======\n\n0.2.0 (2016-04-03)\n------------------\n\n* Add support for incompatible loaders to coexists.\n* Generate and use pyc files for modules.\n* Add support for the filename to be different than the package.\n* Now __main__ works directly from the package as expected.\n\n0.1.1 (2016-03-29)\n------------------\n\n* Fix missing template file when installing\n* Reduce memory footprint to keep the package structure and code.\n* Include tagging of beginning of files in the output.\n\n0.1.0 (2016-03-27)\n------------------\n\n* Show code when debugging and on tracebacks\n* Improve internal package and module names\n* Fix line numbers (off by 1)\n* Package's root namespace is no longer polluted by pinliner\n* Original filename for package/modules is stored so it will be reported by\n  exceptions and logging.\n\n0.0.1 (2016-03-26)\n------------------\n\n* Basic functionality.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Akrog/pinliner", "keywords": "pinliner", "license": "Apache", "maintainer": null, "maintainer_email": null, "name": "pinliner", "package_url": "https://pypi.org/project/pinliner/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pinliner/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Akrog/pinliner"}, "release_url": "https://pypi.org/project/pinliner/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Python Inliner merges in a single file all files from a Python package.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pinliner-python-inliner\">\n<h2>pinliner - Python Inliner</h2>\n<a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\"><img alt=\"https://img.shields.io/:license-apache-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/382baecb6923f5cbcad5e0a48881f28a69c0bf4c/68747470733a2f2f696d672e736869656c64732e696f2f3a6c6963656e73652d6170616368652d626c75652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pinliner\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pinliner.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ddf013cd8dfdfda8573207d77a8f422c2acef26/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70696e6c696e65722e737667\"></a>\n<p>This tool allows you to merge all files that comprise a Python package into\na single file and be able to use this single file as if it were a package.</p>\n<p>Not only will it behave as if it were the original package, but it will also\nshow code in exceptions and debug sessions, and will display the right line\nnumber and file when logging.</p>\n<p>Imports will work as usual so if you have a package structure like:</p>\n<pre>.\n\u2514\u2500\u2500 [my_package]\n     \u251c\u2500\u2500 file_a.py\n     \u251c\u2500\u2500 [sub_package]\n     \u2502\u00a0\u00a0  \u251c\u2500\u2500 file_b.py\n     \u2502\u00a0\u00a0  \u2514\u2500\u2500 __init__.py\n     \u251c\u2500\u2500 __init__.py\n</pre>\n<p>And with pinliner installed you execute:</p>\n<pre>$ mkdir <span class=\"nb\">test</span>\n$ pinliner my_package test/my_package.py\n$ <span class=\"nb\">cd</span> <span class=\"nb\">test</span>\n$ python\n</pre>\n<p>You\u2019ll be able to use generated <cite>my_package.py</cite> file as if it were the real\npackage:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">my_package</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">my_package</span> <span class=\"kn\">import</span> <span class=\"n\">file_a</span> <span class=\"k\">as</span> <span class=\"n\">a_file</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">my_package.sub_package</span> <span class=\"kn\">import</span> <span class=\"n\">file_b</span>\n</pre>\n<p>And <cite>__init__.py</cite> contents will be executed as expected when importing\n<cite>my_package</cite> package and you\u2019ll be able to access its contents like you would\nwith your normal package.</p>\n<p>Modules will also behave as usual.</p>\n<p>If your package is checking <cite>__name__</cite> for <cite>__main__</cite> it will also work as\nusual.  Although given the fact that we only have 1 file we will no longer be\nable to call other packages/modules directly from the command line to trigger\ncode conditioned to <cite>__name__</cite> having <cite>__main__</cite> as its value.</p>\n<p>Loader code will automatically compile packages and modules to byte code,\nbefore running it.  When a module is imported for the first time, or when the\nspecific\u2019s package/module source (not the whole inlined file) is more recent\nthan the current compiled file, a .pyc file containing the compiled code will\nbe created in the same directory as the pinlined .py file.</p>\n<p>If the byte code is up to date then it will be used instead, thus avoiding a\nrecompilation, exactly the same as python normally does, with the only\nexception that all .pyc files will be in the same directory and the filenames\nwill include the full path to the original file.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>You can install pinliner globally in your system or use a virtual environment,\nthis is how it could be done using a virtual environment:</p>\n<pre>$ virtualenv .venv\n$ <span class=\"nb\">source</span> .venv/bin/activate\n$ pip install pinliner\n</pre>\n<p>After that you can run the tool with <cite>pinliner</cite>.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.2.0 (2016-04-03)</h3>\n<ul>\n<li>Add support for incompatible loaders to coexists.</li>\n<li>Generate and use pyc files for modules.</li>\n<li>Add support for the filename to be different than the package.</li>\n<li>Now __main__ works directly from the package as expected.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.1 (2016-03-29)</h3>\n<ul>\n<li>Fix missing template file when installing</li>\n<li>Reduce memory footprint to keep the package structure and code.</li>\n<li>Include tagging of beginning of files in the output.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.0 (2016-03-27)</h3>\n<ul>\n<li>Show code when debugging and on tracebacks</li>\n<li>Improve internal package and module names</li>\n<li>Fix line numbers (off by 1)</li>\n<li>Package\u2019s root namespace is no longer polluted by pinliner</li>\n<li>Original filename for package/modules is stored so it will be reported by\nexceptions and logging.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.0.1 (2016-03-26)</h3>\n<ul>\n<li>Basic functionality.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2043551, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "0e0593ade27df63abd9bf4cdcdc06abd", "sha256": "814b9bd0e77b59fb4e8f909ea470ea17e15bad2ce8ef3f4cdfb2a87352d00abd"}, "downloads": -1, "filename": "pinliner-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0e0593ade27df63abd9bf4cdcdc06abd", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 5849, "upload_time": "2016-03-26T16:03:34", "upload_time_iso_8601": "2016-03-26T16:03:34.370237Z", "url": "https://files.pythonhosted.org/packages/5a/4a/5ca8f95dd0a55ba7bc10e29215c80eb17e7edb5c0e50e59e8f99b6a36a48/pinliner-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "234832d2c72039ad00eda1263eb5c4c8", "sha256": "4c054876240c144805d39e846347723ec4cb98e6ba99b2401a068d18e7cebd53"}, "downloads": -1, "filename": "pinliner-0.0.1.tar.gz", "has_sig": false, "md5_digest": "234832d2c72039ad00eda1263eb5c4c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15479, "upload_time": "2016-03-26T15:59:29", "upload_time_iso_8601": "2016-03-26T15:59:29.150161Z", "url": "https://files.pythonhosted.org/packages/e6/9f/afb5d857b92d869d2c226b9053e123f602d3921346583478cf0a46a76e6b/pinliner-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "aa9fe904d5fbee1e7fb9f428a517c387", "sha256": "3721a862100e477e9a9ec8d90c230b291d08d174bbac98bc1f467eb0922e96dd"}, "downloads": -1, "filename": "pinliner-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aa9fe904d5fbee1e7fb9f428a517c387", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6705, "upload_time": "2016-03-27T20:53:31", "upload_time_iso_8601": "2016-03-27T20:53:31.767859Z", "url": "https://files.pythonhosted.org/packages/ad/80/8b905571d73da6fd043bbd592f43295ea1151626147ebbc5c3adec647fe5/pinliner-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7262816c9179456619350c31a3b685a8", "sha256": "805f66cfb34440b0a61fa1413a4504f2b8fd7e5174fcbc2a8448fa51256ffe25"}, "downloads": -1, "filename": "pinliner-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7262816c9179456619350c31a3b685a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15976, "upload_time": "2016-03-27T20:53:00", "upload_time_iso_8601": "2016-03-27T20:53:00.356400Z", "url": "https://files.pythonhosted.org/packages/a4/2a/6c60f8e7438edd718a86cbc781ebf4a79922a86917b2917b25f464ca371f/pinliner-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f20ae5d5c1467779e38a7646a3361d94", "sha256": "532794b2fbc5a0bf7a4add59ec72ae00e29e785b5dc340e2982f6c8c7e86a840"}, "downloads": -1, "filename": "pinliner-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f20ae5d5c1467779e38a7646a3361d94", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9168, "upload_time": "2016-03-29T19:45:34", "upload_time_iso_8601": "2016-03-29T19:45:34.251154Z", "url": "https://files.pythonhosted.org/packages/32/12/5e7ac55786d634ce174e37d27b53ddbcd566cfb2744f87caef965aeb2505/pinliner-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59fcbe712b1400b1f84b61ee802591f4", "sha256": "630682fae72c97ad29d7de5f755b188b53217aee08cd68924ad8b213dd01b000"}, "downloads": -1, "filename": "pinliner-0.1.1.tar.gz", "has_sig": false, "md5_digest": "59fcbe712b1400b1f84b61ee802591f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16576, "upload_time": "2016-03-29T19:45:27", "upload_time_iso_8601": "2016-03-29T19:45:27.975876Z", "url": "https://files.pythonhosted.org/packages/ff/2a/20efab8cf9965eb8d0a6fe9a9c333276f057f4f1109b257987284437ccc6/pinliner-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ce6ecaa090c1dcffda289c5bb9b12a57", "sha256": "e8962390e8566c84ab656cc6c1aab3916c757d69e969954ab8b892005b2289bd"}, "downloads": -1, "filename": "pinliner-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ce6ecaa090c1dcffda289c5bb9b12a57", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10405, "upload_time": "2016-04-03T18:19:25", "upload_time_iso_8601": "2016-04-03T18:19:25.021665Z", "url": "https://files.pythonhosted.org/packages/1f/ec/d3f78c643db8051f1f526f57b496a1728ff009e2e850fd5b48b085edb6a6/pinliner-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd9e6ec32b44143066dca78203bcd128", "sha256": "c5d2438b3a1f583c22e377004a2b992f5cdc0f98ee0bff88b3e8ee0f138eb1c3"}, "downloads": -1, "filename": "pinliner-0.2.0.tar.gz", "has_sig": false, "md5_digest": "fd9e6ec32b44143066dca78203bcd128", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17094, "upload_time": "2016-04-03T18:19:17", "upload_time_iso_8601": "2016-04-03T18:19:17.858186Z", "url": "https://files.pythonhosted.org/packages/25/8c/f8a0523d96f8340f24d2a6d0ee99537f87c5293c0e72cfc6ba1783dbd44a/pinliner-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce6ecaa090c1dcffda289c5bb9b12a57", "sha256": "e8962390e8566c84ab656cc6c1aab3916c757d69e969954ab8b892005b2289bd"}, "downloads": -1, "filename": "pinliner-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ce6ecaa090c1dcffda289c5bb9b12a57", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10405, "upload_time": "2016-04-03T18:19:25", "upload_time_iso_8601": "2016-04-03T18:19:25.021665Z", "url": "https://files.pythonhosted.org/packages/1f/ec/d3f78c643db8051f1f526f57b496a1728ff009e2e850fd5b48b085edb6a6/pinliner-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd9e6ec32b44143066dca78203bcd128", "sha256": "c5d2438b3a1f583c22e377004a2b992f5cdc0f98ee0bff88b3e8ee0f138eb1c3"}, "downloads": -1, "filename": "pinliner-0.2.0.tar.gz", "has_sig": false, "md5_digest": "fd9e6ec32b44143066dca78203bcd128", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17094, "upload_time": "2016-04-03T18:19:17", "upload_time_iso_8601": "2016-04-03T18:19:17.858186Z", "url": "https://files.pythonhosted.org/packages/25/8c/f8a0523d96f8340f24d2a6d0ee99537f87c5293c0e72cfc6ba1783dbd44a/pinliner-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:29 2020"}