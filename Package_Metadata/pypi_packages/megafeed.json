{"info": {"author": "RED Interactive Agency", "author_email": "geeks@ff0000.com", "bugtrack_url": null, "classifiers": [], "description": "# Megafeed\n\nA library for serializing complex django querysets\n\n## Example\n\nTo enable megafeed system wide in your Django application, edit your settings.py file and add to your MIDDLEWARE_CLASSES:\n\n    'utils.middleware.MegaMiddleware',\n\nadd megafeed to your installed apps, and add an entry to your urls.py:\n\n    (r'^feed', 'megafeed.views.mega_feed'),\n\nUsing the following model:\n\n    from django.db import models\n    from django.contrib.auth.models import User\n    \n    class Blog(models.Model):\n        DRAFT, PUBLISHED = range(2)\n        BLOG_STATUS = ( \n            (DRAFT, 'Draft'),\n            (PUBLISHED, 'Published')\n            )   \n        title   = models.CharField(max_length=64)\n        slug    = models.SlugField()\n        content = models.TextField()\n        created = models.DateTimeField(auto_now=True)\n        status  = models.IntegerField(choices=BLOG_STATUS)\n        enable_comments = models.BooleanField(default=True)\n        author = models.ForeignKey(User)\n    \n        def __unicode__(self): return self.title\n    \n        @models.permalink\n        def get_absolute_url(self): \n            return ('view_blog_post', (), {\n                'year': self.created.year,\n                'month': self.created.month,\n                'day': self.created.day,\n                'slug': self.slug})\n    \n    import megafeed\n    megafeed.register(Blog)\n\nexample megafeed url:\n\n    /feeds.json?blog={\"title\":\"test\",\"order\":\"-created\"}@\n\njson response:\n\n    {\"response\": {\"blog\": {\"object_list\": [{\"blog\":\n    {\"status\": 0, \"author\": {\"id\": 1}, \"created\": \"2010-06-16 14:49:34\", \"title\": \"test\", \"id\": 1, \"content\": \"test\", \"enable_comments\": true, \"slug\": \"test\"}}],\n    \"type\": \"blog\", \"page_data\": {\"per_page\": 10, \"current_page\": 1, \"page_count\": 1, \"object_count\": 1}, \"filter_list\": {\"enable_comments\": 1, \"order\": \"-created\", \"title\": \"test\"}}}}\n\nMegafeed can also be accessed as [megafeed.megafeed(Model)](http://github.com/ff0000/megafeed/blob/master/megafeed/megafeed.py#L84) or [Model.megafeed()](http://github.com/ff0000/megafeed/blob/master/megafeed/megafeed.py#L61)\n\n* For ease of inclusion in views, request.GET can be passed directly to as params to a megafeed and it will be appropriately modified with defaults.\n* Model.megafeed also includes request_params which will only apply filters if they match the prefix value, e.g. blog_page=2\n\n## MegaFeed Tag\n\nContinuing on from the [[MegaFeed Example]]\n\nThe example megafeed url:\n\n    /feeds.json?blog={\"title\":\"test\",\"order\":\"-created\"}\n\nbecomes\n\n    {% load megafeed_tags %}\n    {% megafeed blog title \"test\" order \"-created\" as blogs %}\n\nwhich can be used as\n\n    {% for blog in blogs.object_list %}\n    <a href=\"{{blog.get_absolute_url}}\">{{blog.title}}</a>\n    {% endfor %}\n\nNote that the **blogs** variable contains object_list, page_data, and filter_list as in the [[MegaFeed Example]] JSON.\n\n## History\n\n* v0.1.1 - First version published\n* v0.1.2 - Writing deprecation warnings to STDERR, not to STDOUT", "description_content_type": null, "docs_url": null, "download_url": "http://www.github.com/ff0000/megafeed/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.github.com/ff0000/megafeed/", "keywords": null, "license": "MIT license", "maintainer": null, "maintainer_email": null, "name": "megafeed", "package_url": "https://pypi.org/project/megafeed/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/megafeed/", "project_urls": {"Download": "http://www.github.com/ff0000/megafeed/", "Homepage": "http://www.github.com/ff0000/megafeed/"}, "release_url": "https://pypi.org/project/megafeed/v0.1.2/", "requires_dist": null, "requires_python": null, "summary": "A library for serializing complex django querysets.", "version": "v0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Megafeed<br><br>A library for serializing complex django querysets<br><br>## Example<br><br>To enable megafeed system wide in your Django application, edit your settings.py file and add to your MIDDLEWARE_CLASSES:<br><br>    'utils.middleware.MegaMiddleware',<br><br>add megafeed to your installed apps, and add an entry to your urls.py:<br><br>    (r'^feed', 'megafeed.views.mega_feed'),<br><br>Using the following model:<br><br>    from django.db import models<br>    from django.contrib.auth.models import User<br>    <br>    class Blog(models.Model):<br>        DRAFT, PUBLISHED = range(2)<br>        BLOG_STATUS = ( <br>            (DRAFT, 'Draft'),<br>            (PUBLISHED, 'Published')<br>            )   <br>        title   = models.CharField(max_length=64)<br>        slug    = models.SlugField()<br>        content = models.TextField()<br>        created = models.DateTimeField(auto_now=True)<br>        status  = models.IntegerField(choices=BLOG_STATUS)<br>        enable_comments = models.BooleanField(default=True)<br>        author = models.ForeignKey(User)<br>    <br>        def __unicode__(self): return self.title<br>    <br>        @models.permalink<br>        def get_absolute_url(self): <br>            return ('view_blog_post', (), {<br>                'year': self.created.year,<br>                'month': self.created.month,<br>                'day': self.created.day,<br>                'slug': self.slug})<br>    <br>    import megafeed<br>    megafeed.register(Blog)<br><br>example megafeed url:<br><br>    /feeds.json?blog={\"title\":\"test\",\"order\":\"-created\"}@<br><br>json response:<br><br>    {\"response\": {\"blog\": {\"object_list\": [{\"blog\":<br>    {\"status\": 0, \"author\": {\"id\": 1}, \"created\": \"2010-06-16 14:49:34\", \"title\": \"test\", \"id\": 1, \"content\": \"test\", \"enable_comments\": true, \"slug\": \"test\"}}],<br>    \"type\": \"blog\", \"page_data\": {\"per_page\": 10, \"current_page\": 1, \"page_count\": 1, \"object_count\": 1}, \"filter_list\": {\"enable_comments\": 1, \"order\": \"-created\", \"title\": \"test\"}}}}<br><br>Megafeed can also be accessed as [megafeed.megafeed(Model)](http://github.com/ff0000/megafeed/blob/master/megafeed/megafeed.py#L84) or [Model.megafeed()](http://github.com/ff0000/megafeed/blob/master/megafeed/megafeed.py#L61)<br><br>* For ease of inclusion in views, request.GET can be passed directly to as params to a megafeed and it will be appropriately modified with defaults.<br>* Model.megafeed also includes request_params which will only apply filters if they match the prefix value, e.g. blog_page=2<br><br>## MegaFeed Tag<br><br>Continuing on from the [[MegaFeed Example]]<br><br>The example megafeed url:<br><br>    /feeds.json?blog={\"title\":\"test\",\"order\":\"-created\"}<br><br>becomes<br><br>    {% load megafeed_tags %}<br>    {% megafeed blog title \"test\" order \"-created\" as blogs %}<br><br>which can be used as<br><br>    {% for blog in blogs.object_list %}<br>    &lt;a href=\"{{blog.get_absolute_url}}\"&gt;{{blog.title}}&lt;/a&gt;<br>    {% endfor %}<br><br>Note that the **blogs** variable contains object_list, page_data, and filter_list as in the [[MegaFeed Example]] JSON.<br><br>## History<br><br>* v0.1.1 - First version published<br>* v0.1.2 - Writing deprecation warnings to STDERR, not to STDOUT\n          </div>"}, "last_serial": 794636, "releases": {"v0.1.1": [{"comment_text": "", "digests": {"md5": "9f6d994acdbd1d22afe8511edaa6258a", "sha256": "c03cf13a6ef4cd4ec6ee7e6161ba6982cacbc0bc761cafc5dc7f5a9060a046bc"}, "downloads": -1, "filename": "megafeed-v0.1.1.tar.gz", "has_sig": false, "md5_digest": "9f6d994acdbd1d22afe8511edaa6258a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8558, "upload_time": "2011-03-09T20:50:55", "upload_time_iso_8601": "2011-03-09T20:50:55.119369Z", "url": "https://files.pythonhosted.org/packages/b3/aa/aee105fb1eb1f5cfeae616c8b3f308a301af69b83418fa3f5c038887e18b/megafeed-v0.1.1.tar.gz", "yanked": false}], "v0.1.2": [{"comment_text": "", "digests": {"md5": "02de618de9321fac1b9fcd077a9f8b5f", "sha256": "7dffb341f8e705b65d1bc25cacbccd8a9b5e0094760d8fa3b381101442a78906"}, "downloads": -1, "filename": "megafeed-v0.1.2.tar.gz", "has_sig": false, "md5_digest": "02de618de9321fac1b9fcd077a9f8b5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8628, "upload_time": "2011-03-10T20:35:44", "upload_time_iso_8601": "2011-03-10T20:35:44.189807Z", "url": "https://files.pythonhosted.org/packages/8d/42/ff6a943696a43b082faa70163e3adef3f15fff38b678e92cd49db127d40f/megafeed-v0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "02de618de9321fac1b9fcd077a9f8b5f", "sha256": "7dffb341f8e705b65d1bc25cacbccd8a9b5e0094760d8fa3b381101442a78906"}, "downloads": -1, "filename": "megafeed-v0.1.2.tar.gz", "has_sig": false, "md5_digest": "02de618de9321fac1b9fcd077a9f8b5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8628, "upload_time": "2011-03-10T20:35:44", "upload_time_iso_8601": "2011-03-10T20:35:44.189807Z", "url": "https://files.pythonhosted.org/packages/8d/42/ff6a943696a43b082faa70163e3adef3f15fff38b678e92cd49db127d40f/megafeed-v0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:30 2020"}