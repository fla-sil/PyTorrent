{"info": {"author": "Arun Neelicattu", "author_email": "arun.neelicattu@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: AsyncIO", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Asynchronous GraphQL Client\n[![PyPI version](https://badge.fury.io/py/aiographql-client.svg)](https://badge.fury.io/py/aiographql-client)\n[![Python Versions](https://img.shields.io/pypi/pyversions/aiographql-client)](https://pypi.org/project/aiographql-client/)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Documentation Status](https://readthedocs.org/projects/aiographql-client/badge/?version=latest)](https://aiographql-client.readthedocs.io/en/latest/?badge=latest)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Sonarcloud Status](https://sonarcloud.io/api/project_badges/measure?project=twyla-ai_aiographql-client&metric=alert_status)](https://sonarcloud.io/dashboard?id=twyla-ai_aiographql-client)\n[![](https://github.com/twyla-ai/aiographql-client/workflows/Test%20Suite/badge.svg)](https://github.com/twyla-ai/aiographql-client/actions?query=workflow%3A%22Test+Suite%22)\n\nAn asynchronous GraphQL client built on top of aiohttp and graphql-core-next. The client by default introspects schemas and validates all queries prior to dispatching to the server.\n\n## Documentation\n\nFor the most recent project documentation, you can visit https://aiographql-client.readthedocs.io/.\n\n## Installation\n`pip install aiographql-client`\n\n## Example Usage\nHere are some example usages of this client implementation. For more examples, and advanced scenarios, \nsee [Usage Examples](https://aiographql-client.readthedocs.io/en/latest/examples.html) section in \nthe documentation.\n\n### Simple Query\n```py\nasync def get_logged_in_username(token: str) -> GraphQLResponse:\n    client = GraphQLClient(\n        endpoint=\"https://api.github.com/graphql\",\n        headers={\"Authorization\": f\"Bearer {token}\"},\n    )\n    request = GraphQLRequest(\n        query=\"\"\"\n            query {\n              viewer {\n                login\n              }\n            }\n        \"\"\"\n    )\n    return await client.query(request=request)\n```\n\n```console\n>>> import asyncio\n>>> response = asyncio.run(get_logged_in_username(\"<TOKEN FROM GITHUB GRAPHQL API>\"))\n>>> response.data\n{'viewer': {'login': 'username'}}\n```\n\n### Query Subscription\n```py\nasync def print_city_updates(client: GraphQLClient, city: str) -> None:\n    request = GraphQLRequest(\n        query=\"\"\"\n            subscription ($city:String!) {\n              city(where: {name: {_eq: $city}}) {\n                description\n                id\n              }\n            }\n        \"\"\",\n        variables={\"city\": city},\n    )\n    # subscribe to data and error events, and print them\n    await client.subscribe(\n        request=request, on_data=print, on_error=print, wait=True\n    )\n```\n\nFor custom event specific callback registration, see [Callback Registry Documentation](https://aiographql-client.readthedocs.io/en/latest/examples.html#callback-registry).\n\n### Query Validation Failures\nIf your query is invalid, thanks to graphql-core-next, we get a detailed exception in the traceback.\n\n```\naiographql.client.exceptions.GraphQLClientValidationException: Query validation failed\n\nCannot query field 'ids' on type 'chatbot'. Did you mean 'id'?\n\nGraphQL request (4:13)\n3:           chatbot {\n4:             ids, bot_names\n               ^\n5:           }\n\nCannot query field 'bot_names' on type 'chatbot'. Did you mean 'bot_name' or 'bot_language'?\n\nGraphQL request (4:18)\n3:           chatbot {\n4:             ids, bot_names\n                    ^\n5:           }\n\n```\n\n### Query Variables & Operations\nSupport for multi-operation requests and variables is available via the client. For example,\nthe following request contains multiple operations. The instance specifies default values to use.\n\n```py\nrequest = GraphQLRequest(\n    query=\"\"\"\n    query get_bot_created($id: Int) {\n      chatbot(where: {id: {_eq: $id}}) {\n        id, created\n      }\n    }\n    query get_bot_name($id: Int) {\n      chatbot(where: {id: {_eq: $id}}) {\n        id, bot_name\n      }\n    }\n    \"\"\",\n    variables={\"id\": 109},\n    operation=\"get_bot_name\"\n)\n```\n\nThe default values can be overridden at the time of making the request if required. \n\n```py\nawait client.query(request=request, variables={\"id\": 20}, operation=\"get_bot_created\")\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/twyla-ai/aiographql-client", "keywords": "aiohttp,asyncio,client,graphql,graphql-core,graphql-core-next", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aiographql-client", "package_url": "https://pypi.org/project/aiographql-client/", "platform": "", "project_url": "https://pypi.org/project/aiographql-client/", "project_urls": {"Homepage": "https://github.com/twyla-ai/aiographql-client", "Repository": "https://github.com/twyla-ai/aiographql-client"}, "release_url": "https://pypi.org/project/aiographql-client/1.0.1/", "requires_dist": ["cafeteria-asyncio (>=0.2,<0.3)", "aiohttp (>=3.5,<4.0)", "graphql-core (>=3.0,<4.0)", "ujson (>=2.0,<3.0)"], "requires_python": ">=3.7,<4.0", "summary": "An asyncio GraphQL client built on top of aiohttp and graphql-core-next", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Asynchronous GraphQL Client</h1>\n<p><a href=\"https://badge.fury.io/py/aiographql-client\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/02d761836447e5a8cb8df2cb9448957a8d38fc9f/68747470733a2f2f62616467652e667572792e696f2f70792f61696f6772617068716c2d636c69656e742e737667\"></a>\n<a href=\"https://pypi.org/project/aiographql-client/\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9b11e649df00fc5ef282f36cc69e5c3c6802d9b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f61696f6772617068716c2d636c69656e74\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a>\n<a href=\"https://aiographql-client.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1850beeb5710e36fb4b8d752071de90e63a67665/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61696f6772617068716c2d636c69656e742f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://sonarcloud.io/dashboard?id=twyla-ai_aiographql-client\" rel=\"nofollow\"><img alt=\"Sonarcloud Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a38e9b2ff11bb0f773e1e26efb88376fb86f6bcd/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d7477796c612d61695f61696f6772617068716c2d636c69656e74266d65747269633d616c6572745f737461747573\"></a>\n<a href=\"https://github.com/twyla-ai/aiographql-client/actions?query=workflow%3A%22Test+Suite%22\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/75efeec63133838f9a5407e2e921dbc966fe26d5/68747470733a2f2f6769746875622e636f6d2f7477796c612d61692f61696f6772617068716c2d636c69656e742f776f726b666c6f77732f5465737425323053756974652f62616467652e737667\"></a></p>\n<p>An asynchronous GraphQL client built on top of aiohttp and graphql-core-next. The client by default introspects schemas and validates all queries prior to dispatching to the server.</p>\n<h2>Documentation</h2>\n<p>For the most recent project documentation, you can visit <a href=\"https://aiographql-client.readthedocs.io/\" rel=\"nofollow\">https://aiographql-client.readthedocs.io/</a>.</p>\n<h2>Installation</h2>\n<p><code>pip install aiographql-client</code></p>\n<h2>Example Usage</h2>\n<p>Here are some example usages of this client implementation. For more examples, and advanced scenarios,\nsee <a href=\"https://aiographql-client.readthedocs.io/en/latest/examples.html\" rel=\"nofollow\">Usage Examples</a> section in\nthe documentation.</p>\n<h3>Simple Query</h3>\n<pre><span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">get_logged_in_username</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">GraphQLResponse</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">GraphQLClient</span><span class=\"p\">(</span>\n        <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"s2\">\"https://api.github.com/graphql\"</span><span class=\"p\">,</span>\n        <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"Authorization\"</span><span class=\"p\">:</span> <span class=\"sa\">f</span><span class=\"s2\">\"Bearer </span><span class=\"si\">{</span><span class=\"n\">token</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">GraphQLRequest</span><span class=\"p\">(</span>\n        <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">            query {</span>\n<span class=\"s2\">              viewer {</span>\n<span class=\"s2\">                login</span>\n<span class=\"s2\">              }</span>\n<span class=\"s2\">            }</span>\n<span class=\"s2\">        \"\"\"</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"gp\">&gt;</span>&gt;&gt; import asyncio\n<span class=\"gp\">&gt;</span>&gt;&gt; <span class=\"nv\">response</span> <span class=\"o\">=</span> asyncio.run<span class=\"o\">(</span>get_logged_in_username<span class=\"o\">(</span><span class=\"s2\">\"&lt;TOKEN FROM GITHUB GRAPHQL API&gt;\"</span><span class=\"o\">))</span>\n<span class=\"gp\">&gt;</span>&gt;&gt; response.data\n<span class=\"go\">{'viewer': {'login': 'username'}}</span>\n</pre>\n<h3>Query Subscription</h3>\n<pre><span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">print_city_updates</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">GraphQLClient</span><span class=\"p\">,</span> <span class=\"n\">city</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">GraphQLRequest</span><span class=\"p\">(</span>\n        <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">            subscription ($city:String!) {</span>\n<span class=\"s2\">              city(where: {name: {_eq: $city}}) {</span>\n<span class=\"s2\">                description</span>\n<span class=\"s2\">                id</span>\n<span class=\"s2\">              }</span>\n<span class=\"s2\">            }</span>\n<span class=\"s2\">        \"\"\"</span><span class=\"p\">,</span>\n        <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"city\"</span><span class=\"p\">:</span> <span class=\"n\">city</span><span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n    <span class=\"c1\"># subscribe to data and error events, and print them</span>\n    <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span>\n        <span class=\"n\">request</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">on_data</span><span class=\"o\">=</span><span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">on_error</span><span class=\"o\">=</span><span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"n\">wait</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>For custom event specific callback registration, see <a href=\"https://aiographql-client.readthedocs.io/en/latest/examples.html#callback-registry\" rel=\"nofollow\">Callback Registry Documentation</a>.</p>\n<h3>Query Validation Failures</h3>\n<p>If your query is invalid, thanks to graphql-core-next, we get a detailed exception in the traceback.</p>\n<pre><code>aiographql.client.exceptions.GraphQLClientValidationException: Query validation failed\n\nCannot query field 'ids' on type 'chatbot'. Did you mean 'id'?\n\nGraphQL request (4:13)\n3:           chatbot {\n4:             ids, bot_names\n               ^\n5:           }\n\nCannot query field 'bot_names' on type 'chatbot'. Did you mean 'bot_name' or 'bot_language'?\n\nGraphQL request (4:18)\n3:           chatbot {\n4:             ids, bot_names\n                    ^\n5:           }\n\n</code></pre>\n<h3>Query Variables &amp; Operations</h3>\n<p>Support for multi-operation requests and variables is available via the client. For example,\nthe following request contains multiple operations. The instance specifies default values to use.</p>\n<pre><span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">GraphQLRequest</span><span class=\"p\">(</span>\n    <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">    query get_bot_created($id: Int) {</span>\n<span class=\"s2\">      chatbot(where: {id: {_eq: $id}}) {</span>\n<span class=\"s2\">        id, created</span>\n<span class=\"s2\">      }</span>\n<span class=\"s2\">    }</span>\n<span class=\"s2\">    query get_bot_name($id: Int) {</span>\n<span class=\"s2\">      chatbot(where: {id: {_eq: $id}}) {</span>\n<span class=\"s2\">        id, bot_name</span>\n<span class=\"s2\">      }</span>\n<span class=\"s2\">    }</span>\n<span class=\"s2\">    \"\"\"</span><span class=\"p\">,</span>\n    <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">109</span><span class=\"p\">},</span>\n    <span class=\"n\">operation</span><span class=\"o\">=</span><span class=\"s2\">\"get_bot_name\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>The default values can be overridden at the time of making the request if required.</p>\n<pre><span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">},</span> <span class=\"n\">operation</span><span class=\"o\">=</span><span class=\"s2\">\"get_bot_created\"</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7115247, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "d19a548fe53156514566ebbbd77becd1", "sha256": "b4a9e6a9144bb4baea812a110cb864aec71ca504cd5efdb8af90a6a266803257"}, "downloads": -1, "filename": "aiographql_client-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d19a548fe53156514566ebbbd77becd1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7980, "upload_time": "2019-07-26T11:05:31", "upload_time_iso_8601": "2019-07-26T11:05:31.290274Z", "url": "https://files.pythonhosted.org/packages/26/34/33c24fc60663125b01d3ed3e8d629de31c063e187b4587ce0f37ac3f04a7/aiographql_client-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31949c7aa8a62518ef337b973e0d410c", "sha256": "e9d610d49e2c6c0bb7d2c2d81ef45b1b0d081f36ca49faa9c3fd6036310bc095"}, "downloads": -1, "filename": "aiographql-client-0.3.0.tar.gz", "has_sig": false, "md5_digest": "31949c7aa8a62518ef337b973e0d410c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 7089, "upload_time": "2019-07-26T11:05:30", "upload_time_iso_8601": "2019-07-26T11:05:30.119626Z", "url": "https://files.pythonhosted.org/packages/fa/13/cb12d73c0d6e7e60d09f8d9e09c3001402802c58f078405db441f962b16d/aiographql-client-0.3.0.tar.gz", "yanked": false}], "0.3.0a0": [{"comment_text": "", "digests": {"md5": "e891f65c14b381eecbccb636b6a78c0a", "sha256": "2ca9ccb3f308f8d157b6186c03b81540ef02757481430c3e82fede21982f0f2c"}, "downloads": -1, "filename": "aiographql_client-0.3.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "e891f65c14b381eecbccb636b6a78c0a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7998, "upload_time": "2019-07-26T10:58:37", "upload_time_iso_8601": "2019-07-26T10:58:37.659014Z", "url": "https://files.pythonhosted.org/packages/09/f6/98a69517e4220ffb12b91cfa8bffb1682360d340c3bcd61da9d0211995fd/aiographql_client-0.3.0a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4338c34759c9df317cf006a4c529b1c", "sha256": "e0213117b21c9df49bbd725394483038dfb413d7fb351f608ece3dfb262968cc"}, "downloads": -1, "filename": "aiographql-client-0.3.0a0.tar.gz", "has_sig": false, "md5_digest": "a4338c34759c9df317cf006a4c529b1c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 7088, "upload_time": "2019-07-26T10:58:35", "upload_time_iso_8601": "2019-07-26T10:58:35.945630Z", "url": "https://files.pythonhosted.org/packages/8e/d6/8b48dd8aba86cf56abf7d11c211dab653c857a95106cd6f4fa3cac019d6c/aiographql-client-0.3.0a0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "77672d354533310c39de11696c0360b1", "sha256": "d8ce7f2d9ab0e95fff58b97868d60eca46cdd4b06014a6eab37f0d5a7582f470"}, "downloads": -1, "filename": "aiographql_client-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "77672d354533310c39de11696c0360b1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 8197, "upload_time": "2019-12-05T14:00:10", "upload_time_iso_8601": "2019-12-05T14:00:10.318259Z", "url": "https://files.pythonhosted.org/packages/4d/ff/b91cd80e185198a7ea1611107e1438a9bde58a066884303f9647c4e28a51/aiographql_client-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "222c9faf0d2d3902f90d68a1b992d1e3", "sha256": "79d87d8e27b07b8b7672d55d20659e982eafbc696096ba1d511dcafa454ec37b"}, "downloads": -1, "filename": "aiographql-client-0.4.0.tar.gz", "has_sig": false, "md5_digest": "222c9faf0d2d3902f90d68a1b992d1e3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 7306, "upload_time": "2019-12-05T14:00:08", "upload_time_iso_8601": "2019-12-05T14:00:08.944877Z", "url": "https://files.pythonhosted.org/packages/91/88/99334a6aca3f1a33bd0a6b655b83366101b278dfbb04fcc884c2f4b73271/aiographql-client-0.4.0.tar.gz", "yanked": false}], "0.4.0a0": [{"comment_text": "", "digests": {"md5": "49a004c44c57b4f304fb44702ab39e57", "sha256": "4819b7caf2e5ea443796d10d680f216f80b075ae66ee8ad6430c29e2a014c31b"}, "downloads": -1, "filename": "aiographql_client-0.4.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "49a004c44c57b4f304fb44702ab39e57", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 8227, "upload_time": "2019-09-12T23:35:38", "upload_time_iso_8601": "2019-09-12T23:35:38.929400Z", "url": "https://files.pythonhosted.org/packages/5a/ee/1bcf134766fe5d8e626e72572e99409f0b545cd91f4a3df549047171ec03/aiographql_client-0.4.0a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc04549edbbd2bea37e0198f7bf79c95", "sha256": "92060c9a5f2b96fdd92c707bf42815efa7f8de5d388e9ccb61e660348d8f3809"}, "downloads": -1, "filename": "aiographql-client-0.4.0a0.tar.gz", "has_sig": false, "md5_digest": "bc04549edbbd2bea37e0198f7bf79c95", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 7355, "upload_time": "2019-09-12T23:35:37", "upload_time_iso_8601": "2019-09-12T23:35:37.674950Z", "url": "https://files.pythonhosted.org/packages/d0/a0/f3993aa306876de11780a50241275bc6577ab23b5a0cf1bdb11099fcc6bb/aiographql-client-0.4.0a0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "0b0b6fc4be9afd0b781db6ec656fb287", "sha256": "380603fbc70746bf2a0e2997dbc528df021b948d7014e28f6438bf7df9f39c93"}, "downloads": -1, "filename": "aiographql_client-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0b0b6fc4be9afd0b781db6ec656fb287", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 14113, "upload_time": "2020-04-19T14:08:23", "upload_time_iso_8601": "2020-04-19T14:08:23.277264Z", "url": "https://files.pythonhosted.org/packages/64/29/296f038753fa1323a4d7cf79e2930ad298547e15cd513352840f5fa90baf/aiographql_client-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4d09396e81a9691fc8adfee281255d3", "sha256": "47a18cb0fcffe1faba522d2e455e610bbe694d496bced5a58a7da1e7cedb207b"}, "downloads": -1, "filename": "aiographql-client-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b4d09396e81a9691fc8adfee281255d3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 13573, "upload_time": "2020-04-19T14:08:22", "upload_time_iso_8601": "2020-04-19T14:08:22.167603Z", "url": "https://files.pythonhosted.org/packages/ea/f1/ea0fa13e11b0a87589687f5c51eda40baeed560c34c57436c9820820246c/aiographql-client-1.0.0.tar.gz", "yanked": false}], "1.0.0a0": [{"comment_text": "", "digests": {"md5": "0bf435ecbdaa038ddf74b411aa4100bb", "sha256": "8b9b5e296df0a3c8e84ab41f7bd5943ce2981352bcdd018d4b7ffc9d06f57b9b"}, "downloads": -1, "filename": "aiographql_client-1.0.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "0bf435ecbdaa038ddf74b411aa4100bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 13550, "upload_time": "2020-03-02T03:16:49", "upload_time_iso_8601": "2020-03-02T03:16:49.575770Z", "url": "https://files.pythonhosted.org/packages/d6/22/3b23ef533848557146941d35e8cd515220f585c7bc52e82a1d478fe45d9f/aiographql_client-1.0.0a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "235d9929790bffe2f6cf6e1299b83133", "sha256": "7e4f28961ae1334070b78d6fe3376360d08f9aaa4911cb298ef010a96a76a2f7"}, "downloads": -1, "filename": "aiographql-client-1.0.0a0.tar.gz", "has_sig": false, "md5_digest": "235d9929790bffe2f6cf6e1299b83133", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 12368, "upload_time": "2020-03-02T03:16:48", "upload_time_iso_8601": "2020-03-02T03:16:48.367036Z", "url": "https://files.pythonhosted.org/packages/77/3e/029cf3095082f866e07913d67432844466983718771faf8b74c964ac78c5/aiographql-client-1.0.0a0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "a7a1f1b955b8a0dba3d16eeff1a5f7fc", "sha256": "d4ee273df6a57b3c4c32a0a3ac6c8c7e60cb2a0c999cfc9c945d7eeb201e1c6e"}, "downloads": -1, "filename": "aiographql_client-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a7a1f1b955b8a0dba3d16eeff1a5f7fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 14355, "upload_time": "2020-04-27T21:06:19", "upload_time_iso_8601": "2020-04-27T21:06:19.400819Z", "url": "https://files.pythonhosted.org/packages/63/03/afc1d5162e826f47ba2777ce2f1050927cd2990ff84a3882eb694a15ad80/aiographql_client-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0f16b796782b6eae5b5c1bbe58d1cb1", "sha256": "f66bfa48972b236dd263c55edffc2a9d0b2f18837af6e5e8b9828560d2110a4d"}, "downloads": -1, "filename": "aiographql-client-1.0.1.tar.gz", "has_sig": false, "md5_digest": "c0f16b796782b6eae5b5c1bbe58d1cb1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 13812, "upload_time": "2020-04-27T21:06:18", "upload_time_iso_8601": "2020-04-27T21:06:18.592538Z", "url": "https://files.pythonhosted.org/packages/94/9c/f968318475a81103145d5ee82ecfaef377d4d0928c48f8918113f5829be8/aiographql-client-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a7a1f1b955b8a0dba3d16eeff1a5f7fc", "sha256": "d4ee273df6a57b3c4c32a0a3ac6c8c7e60cb2a0c999cfc9c945d7eeb201e1c6e"}, "downloads": -1, "filename": "aiographql_client-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a7a1f1b955b8a0dba3d16eeff1a5f7fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 14355, "upload_time": "2020-04-27T21:06:19", "upload_time_iso_8601": "2020-04-27T21:06:19.400819Z", "url": "https://files.pythonhosted.org/packages/63/03/afc1d5162e826f47ba2777ce2f1050927cd2990ff84a3882eb694a15ad80/aiographql_client-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0f16b796782b6eae5b5c1bbe58d1cb1", "sha256": "f66bfa48972b236dd263c55edffc2a9d0b2f18837af6e5e8b9828560d2110a4d"}, "downloads": -1, "filename": "aiographql-client-1.0.1.tar.gz", "has_sig": false, "md5_digest": "c0f16b796782b6eae5b5c1bbe58d1cb1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 13812, "upload_time": "2020-04-27T21:06:18", "upload_time_iso_8601": "2020-04-27T21:06:18.592538Z", "url": "https://files.pythonhosted.org/packages/94/9c/f968318475a81103145d5ee82ecfaef377d4d0928c48f8918113f5829be8/aiographql-client-1.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:31 2020"}