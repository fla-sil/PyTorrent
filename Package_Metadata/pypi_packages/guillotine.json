{"info": {"author": "Chris Rossi", "author_email": "pylons-devel@googlegroups.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: Repoze Public License", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: WSGI"], "description": "==========\nguillotine\n==========\n\n`guillotine` is a WSGI middleware which allows for HEAD requests to be properly\nhandled by your WSGI pipeline.  `guillotine` is intended to be placed as the\nfirst, or topmost component in a WSGI pipeline, such that all other middelware\nis downstream.  For an incoming request, `guillotine` converts the request\nmethod from 'HEAD' to 'GET' before handing the request off to the next\ndownstream middleware or application.  `guillotine` then takes responsiblity\nfor discarding the response body before returning to the application server.\n\nFor more information about why you might want to do this see Graham Dumpleton's\narticle, `WSGI issues with HTTP HEAD requests.\n<http://blog.dscpl.com.au/2009/10/wsgi-issues-with-http-head-requests.html>`_\n\n\nUsing `guillotine` with Paster\n------------------------------\n\n`guillotine` provides an entry point for Paster allowing it to be used as a\nmiddleware in a pipeline::\n\n    [pipeline:example_app]\n    pipeline =\n        egg:guillotine#guillotine\n        egg:example#some_middleware\n        example_app\n\nUsing `guillotine` \"by hand\"\n----------------------------\n\nIf you compose your WSGI pipeline in Python code, `guillotine` can be\nconstructed directly::\n\n    from guillotine import Guillotine\n\n    middleware = Guillotine(app)  # app is some WSGI application or pipeline\n\n\n\n0.1 (2011-05-20)\n----------------\n\n- Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pylonsproject.org", "keywords": "web wsgi middleware", "license": "BSD-derived (http://www.repoze.org/LICENSE.txt)", "maintainer": null, "maintainer_email": null, "name": "guillotine", "package_url": "https://pypi.org/project/guillotine/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/guillotine/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pylonsproject.org"}, "release_url": "https://pypi.org/project/guillotine/0.1/", "requires_dist": null, "requires_python": null, "summary": "A middleware for proper handling of HEAD requests.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><cite>guillotine</cite> is a WSGI middleware which allows for HEAD requests to be properly\nhandled by your WSGI pipeline.  <cite>guillotine</cite> is intended to be placed as the\nfirst, or topmost component in a WSGI pipeline, such that all other middelware\nis downstream.  For an incoming request, <cite>guillotine</cite> converts the request\nmethod from \u2018HEAD\u2019 to \u2018GET\u2019 before handing the request off to the next\ndownstream middleware or application.  <cite>guillotine</cite> then takes responsiblity\nfor discarding the response body before returning to the application server.</p>\n<p>For more information about why you might want to do this see Graham Dumpleton\u2019s\narticle, <a href=\"http://blog.dscpl.com.au/2009/10/wsgi-issues-with-http-head-requests.html\" rel=\"nofollow\">WSGI issues with HTTP HEAD requests.</a></p>\n<div id=\"using-guillotine-with-paster\">\n<h2>Using <cite>guillotine</cite> with Paster</h2>\n<p><cite>guillotine</cite> provides an entry point for Paster allowing it to be used as a\nmiddleware in a pipeline:</p>\n<pre>[pipeline:example_app]\npipeline =\n    egg:guillotine#guillotine\n    egg:example#some_middleware\n    example_app\n</pre>\n</div>\n<div id=\"using-guillotine-by-hand\">\n<h2>Using <cite>guillotine</cite> \u201cby hand\u201d</h2>\n<p>If you compose your WSGI pipeline in Python code, <cite>guillotine</cite> can be\nconstructed directly:</p>\n<pre>from guillotine import Guillotine\n\nmiddleware = Guillotine(app)  # app is some WSGI application or pipeline\n</pre>\n</div>\n<div id=\"id1\">\n<h2>0.1 (2011-05-20)</h2>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 792767, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "61732c2e9f04f45022bbada0c4c2407d", "sha256": "d1441b6ed4126daffacd68e876778b9871eb75944f19ab8a02944858752a2ae4"}, "downloads": -1, "filename": "guillotine-0.1.tar.gz", "has_sig": false, "md5_digest": "61732c2e9f04f45022bbada0c4c2407d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2663, "upload_time": "2011-05-20T18:44:13", "upload_time_iso_8601": "2011-05-20T18:44:13.824770Z", "url": "https://files.pythonhosted.org/packages/67/fa/40f27b48a552ff7655789bf7dfcf413b55db5981ba8f066ac1dee9ccceef/guillotine-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "61732c2e9f04f45022bbada0c4c2407d", "sha256": "d1441b6ed4126daffacd68e876778b9871eb75944f19ab8a02944858752a2ae4"}, "downloads": -1, "filename": "guillotine-0.1.tar.gz", "has_sig": false, "md5_digest": "61732c2e9f04f45022bbada0c4c2407d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2663, "upload_time": "2011-05-20T18:44:13", "upload_time_iso_8601": "2011-05-20T18:44:13.824770Z", "url": "https://files.pythonhosted.org/packages/67/fa/40f27b48a552ff7655789bf7dfcf413b55db5981ba8f066ac1dee9ccceef/guillotine-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:16 2020"}