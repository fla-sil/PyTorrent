{"info": {"author": "Takashi Iwamoto", "author_email": "hello@iwamot.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Flask", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"], "description": "# flask-skinny\n\nA Flask extension that forces extremely skinny controllers.\n\n```python\n@app.route(\"/dogs/<int:dog_id>\", methods=[\"POST\"])\n@skinny.responses({200: responses.greet_dog, 400: responses.bad_request})\n@skinny.intent(intents.greet_dog)\ndef greet_dog(dog_id):\n    pass\n```\n\n## Description\n\nThis extension contains two decorators, `@skinny.intent` and `@skinny.responses`.\n\n* `@skinny.intent(callable)`\n    * `callable`: Receives `flask.request`, returns `status_code` and `outcome`.\n* `@skinny.responses({status_code: callable, ...})`\n    * `callable`: Receives `flask.request` and `outcome`, returns `headers` and `body`.\n\n`@skinny.responses` will choose an appropriate response by `status_code`.\n\n## Simple Usage\n\n```python\nfrom flask import Flask\nfrom flask_skinny import skinny\nfrom random import randint\nimport json\n\n\ndef intent(request):\n    if randint(0, 1) == 0:\n        status_code = 200\n        outcome = \"OK\"\n    else:\n        status_code = 403\n        outcome = \"Forbidden\"\n    return status_code, outcome\n\n\ndef response(request, outcome):\n    headers = {\"content-type\": \"application/json\"}\n    body = json.dumps({\"message\": outcome}) + \"\\n\"\n    return headers, body\n\n\napp = Flask(__name__)\n\n\n@app.route(\"/\", methods=[\"GET\"])\n@skinny.responses({200: response, 403: response})\n@skinny.intent(intent)\ndef index():\n    pass\n```\n\n## Detailed Usage\n\nSee [app.py](https://github.com/iwamot/flask-skinny/blob/master/app.py).\n\n## Installation\n\n`$ pip install flask-skinny`\n\n## Contribution\n\nCreate new Pull Request.\n\n## License\n\n[MIT](https://opensource.org/licenses/MIT)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/iwamot/flask-skinny/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flask-skinny", "package_url": "https://pypi.org/project/flask-skinny/", "platform": "", "project_url": "https://pypi.org/project/flask-skinny/", "project_urls": {"Homepage": "https://github.com/iwamot/flask-skinny/"}, "release_url": "https://pypi.org/project/flask-skinny/0.1.2/", "requires_dist": ["Flask"], "requires_python": "", "summary": "A Flask extension that forces extremely skinny controllers.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>flask-skinny</h1>\n<p>A Flask extension that forces extremely skinny controllers.</p>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/dogs/&lt;int:dog_id&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"POST\"</span><span class=\"p\">])</span>\n<span class=\"nd\">@skinny</span><span class=\"o\">.</span><span class=\"n\">responses</span><span class=\"p\">({</span><span class=\"mi\">200</span><span class=\"p\">:</span> <span class=\"n\">responses</span><span class=\"o\">.</span><span class=\"n\">greet_dog</span><span class=\"p\">,</span> <span class=\"mi\">400</span><span class=\"p\">:</span> <span class=\"n\">responses</span><span class=\"o\">.</span><span class=\"n\">bad_request</span><span class=\"p\">})</span>\n<span class=\"nd\">@skinny</span><span class=\"o\">.</span><span class=\"n\">intent</span><span class=\"p\">(</span><span class=\"n\">intents</span><span class=\"o\">.</span><span class=\"n\">greet_dog</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">greet_dog</span><span class=\"p\">(</span><span class=\"n\">dog_id</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<h2>Description</h2>\n<p>This extension contains two decorators, <code>@skinny.intent</code> and <code>@skinny.responses</code>.</p>\n<ul>\n<li><code>@skinny.intent(callable)</code>\n<ul>\n<li><code>callable</code>: Receives <code>flask.request</code>, returns <code>status_code</code> and <code>outcome</code>.</li>\n</ul>\n</li>\n<li><code>@skinny.responses({status_code: callable, ...})</code>\n<ul>\n<li><code>callable</code>: Receives <code>flask.request</code> and <code>outcome</code>, returns <code>headers</code> and <code>body</code>.</li>\n</ul>\n</li>\n</ul>\n<p><code>@skinny.responses</code> will choose an appropriate response by <code>status_code</code>.</p>\n<h2>Simple Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_skinny</span> <span class=\"kn\">import</span> <span class=\"n\">skinny</span>\n<span class=\"kn\">from</span> <span class=\"nn\">random</span> <span class=\"kn\">import</span> <span class=\"n\">randint</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">intent</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">status_code</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n        <span class=\"n\">outcome</span> <span class=\"o\">=</span> <span class=\"s2\">\"OK\"</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">status_code</span> <span class=\"o\">=</span> <span class=\"mi\">403</span>\n        <span class=\"n\">outcome</span> <span class=\"o\">=</span> <span class=\"s2\">\"Forbidden\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">status_code</span><span class=\"p\">,</span> <span class=\"n\">outcome</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">response</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">outcome</span><span class=\"p\">):</span>\n    <span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"content-type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"application/json\"</span><span class=\"p\">}</span>\n    <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">({</span><span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"n\">outcome</span><span class=\"p\">})</span> <span class=\"o\">+</span> <span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">body</span>\n\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"GET\"</span><span class=\"p\">])</span>\n<span class=\"nd\">@skinny</span><span class=\"o\">.</span><span class=\"n\">responses</span><span class=\"p\">({</span><span class=\"mi\">200</span><span class=\"p\">:</span> <span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"mi\">403</span><span class=\"p\">:</span> <span class=\"n\">response</span><span class=\"p\">})</span>\n<span class=\"nd\">@skinny</span><span class=\"o\">.</span><span class=\"n\">intent</span><span class=\"p\">(</span><span class=\"n\">intent</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre>\n<h2>Detailed Usage</h2>\n<p>See <a href=\"https://github.com/iwamot/flask-skinny/blob/master/app.py\" rel=\"nofollow\">app.py</a>.</p>\n<h2>Installation</h2>\n<p><code>$ pip install flask-skinny</code></p>\n<h2>Contribution</h2>\n<p>Create new Pull Request.</p>\n<h2>License</h2>\n<p><a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6920523, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "e67c4522832c81f7f95fb01ed88374fa", "sha256": "47be312ecdc2bae44e05d49d3656f70869689730bc23a807d6ad4e013293bf02"}, "downloads": -1, "filename": "flask_skinny-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e67c4522832c81f7f95fb01ed88374fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3462, "upload_time": "2020-03-31T14:15:07", "upload_time_iso_8601": "2020-03-31T14:15:07.568700Z", "url": "https://files.pythonhosted.org/packages/bc/76/3fc63b35a7ba3f9514261efcce1d478ae8e5f815818776a14f6ee5015d0f/flask_skinny-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1a7d86109cc715512a22a545a025f06", "sha256": "7d0dffcadb4342c1969cdd7c91d6716204ecc4bca5c322158937d1e1fed52748"}, "downloads": -1, "filename": "flask-skinny-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a1a7d86109cc715512a22a545a025f06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2633, "upload_time": "2020-03-31T14:15:09", "upload_time_iso_8601": "2020-03-31T14:15:09.345789Z", "url": "https://files.pythonhosted.org/packages/54/bc/9502e931001949f8689d4f4a80755192deca65354956ab70f44952f05d0f/flask-skinny-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e67c4522832c81f7f95fb01ed88374fa", "sha256": "47be312ecdc2bae44e05d49d3656f70869689730bc23a807d6ad4e013293bf02"}, "downloads": -1, "filename": "flask_skinny-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e67c4522832c81f7f95fb01ed88374fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3462, "upload_time": "2020-03-31T14:15:07", "upload_time_iso_8601": "2020-03-31T14:15:07.568700Z", "url": "https://files.pythonhosted.org/packages/bc/76/3fc63b35a7ba3f9514261efcce1d478ae8e5f815818776a14f6ee5015d0f/flask_skinny-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1a7d86109cc715512a22a545a025f06", "sha256": "7d0dffcadb4342c1969cdd7c91d6716204ecc4bca5c322158937d1e1fed52748"}, "downloads": -1, "filename": "flask-skinny-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a1a7d86109cc715512a22a545a025f06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2633, "upload_time": "2020-03-31T14:15:09", "upload_time_iso_8601": "2020-03-31T14:15:09.345789Z", "url": "https://files.pythonhosted.org/packages/54/bc/9502e931001949f8689d4f4a80755192deca65354956ab70f44952f05d0f/flask-skinny-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:17 2020"}