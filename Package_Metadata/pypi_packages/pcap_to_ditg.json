{"info": {"author": "Deven Bansod", "author_email": "devenbansod.bits@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent"], "description": "pcap\\_to\\_ditg\n==============\n\nGenerates [DITG](http://traffic.comics.unina.it/software/ITG/) flow\ndefinition Files for each IP using a Packet Capture (.pcap) file as\ninput\n\nInstallation\n------------\n\n-   The package is available to be installed through [PyPI - the Python\n    Package Index](https://pypi.python.org/pypi) at https://pypi.org/project/pcap_to_ditg\n-   You can install the latest version by running:\n\n        $ sudo pip install pcap_to_ditg\n\n-   The latest release can be also downloaded from the [Github\n    repository](https://github.com/devenbansod/pcap_to_DITG/releases)\n\nUsage\n-----\n\n-   The help section of the\n    [run.py](https://github.com/devenbansod/pcap_to_ditg/blob/master/examples/run.py)\n    program describes the usage details\n\n        usage: run.py [-h] [-t START_TIME] [-e END_TIME] [-s PACKET_SIZE_OPTIONS] [-p]\n              [-c] [-op]\n              pcap_file mapper_file list_file\n\n        Generate DITG script files from a pcap file\n\n        positional arguments:\n          pcap_file             .pcap file to be used in generation\n          mapper_file           Mapper file to be used in generation\n          list_file             File containing all distinct IPs to be used in\n                                generation\n\n        optional arguments:\n          -h, --help            show this help message and exit\n          -t START_TIME, --start-time START_TIME\n                                Timestamp (in sec) from which the file should be read\n          -e END_TIME, --end-time END_TIME\n                                Timestamp (in sec) until which the file should be read\n          -s PACKET_SIZE_OPTIONS, --packet-size-options PACKET_SIZE_OPTIONS\n                                Packet size options to be used for each flow (for ex.\n                                For Anonymized trace pcap files). If not provided,\n                                *_ps files are created for each flow by using packet\n                                sizes as per the pcap file\n          -p, --print-all-ips   Print all distinct IPs appearing in the pcap file and\n                                exit\n          -c, --clean           Remove any older generated files and exit the program\n          -op, --orig-ports     Whether original destination ports should be used or a\n                                non-clashing port should be assigned\n\n-   The format of `list_file` is as follows:\n\n        10.0.1.10,\n        10.0.2.10,\n        .\n        .\n        .\n\n    -   These are the IPs that are appearing in the PCAP file (as\n        specified by `pcap_file` argument)\n    -   You can generate this list automatically by running the example\n        program with `-p` option\n\n            $ touch list_file\n            $ python run.py -p pcap_file mapper_file list_file > list_file\n\n    -   **Note**: While running the program with `-p` option, the files\n        `mapper_file` and `list_file` are not actually used but still\n        have to be provided as argument and should exist.\n\n-   The format of `mapper_file` is as follows:\n\n        Host,Start_row,End_row,Number,IP\n        h1,1734,1902,169,10.0.0.1\n        h2,1528,1733,206,10.0.0.2\n        .\n        .\n        .\n\n-   Usage in a different script or in interpreter mode is as:\n\n        >> from pcap_to_ditg import pcap_to_ditg\n        >> pcap_file_path = '***'\n        >> mapper_file_path = '***'\n        >> list_file_path = '***'\n        >> options = {'end_time' : 60}\n        >> p = pcap_to_ditg.pcap_to_ditg(\n             pcap_file_path,\n             mapper_file_path,\n             list_file_path,\n             options\n           )\n        The flow scripts and the IDT files have been generated and have been saved in separate sub-folders *_ditg_files.\n        >>\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/devenbansod/pcap_to_DITG", "keywords": "", "license": "LICENSE", "maintainer": "", "maintainer_email": "", "name": "pcap_to_ditg", "package_url": "https://pypi.org/project/pcap_to_ditg/", "platform": "", "project_url": "https://pypi.org/project/pcap_to_ditg/", "project_urls": {"Homepage": "http://github.com/devenbansod/pcap_to_DITG"}, "release_url": "https://pypi.org/project/pcap_to_ditg/1.0.1/", "requires_dist": ["dpkt"], "requires_python": "", "summary": "Generate DITG script files from a pcap file", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pcap_to_ditg</h1>\n<p>Generates <a href=\"http://traffic.comics.unina.it/software/ITG/\" rel=\"nofollow\">DITG</a> flow\ndefinition Files for each IP using a Packet Capture (.pcap) file as\ninput</p>\n<h2>Installation</h2>\n<ul>\n<li>\n<p>The package is available to be installed through <a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\">PyPI - the Python\nPackage Index</a> at <a href=\"https://pypi.org/project/pcap_to_ditg\" rel=\"nofollow\">https://pypi.org/project/pcap_to_ditg</a></p>\n</li>\n<li>\n<p>You can install the latest version by running:</p>\n<pre><code>$ sudo pip install pcap_to_ditg\n</code></pre>\n</li>\n<li>\n<p>The latest release can be also downloaded from the <a href=\"https://github.com/devenbansod/pcap_to_DITG/releases\" rel=\"nofollow\">Github\nrepository</a></p>\n</li>\n</ul>\n<h2>Usage</h2>\n<ul>\n<li>\n<p>The help section of the\n<a href=\"https://github.com/devenbansod/pcap_to_ditg/blob/master/examples/run.py\" rel=\"nofollow\">run.py</a>\nprogram describes the usage details</p>\n<pre><code>usage: run.py [-h] [-t START_TIME] [-e END_TIME] [-s PACKET_SIZE_OPTIONS] [-p]\n      [-c] [-op]\n      pcap_file mapper_file list_file\n\nGenerate DITG script files from a pcap file\n\npositional arguments:\n  pcap_file             .pcap file to be used in generation\n  mapper_file           Mapper file to be used in generation\n  list_file             File containing all distinct IPs to be used in\n                        generation\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -t START_TIME, --start-time START_TIME\n                        Timestamp (in sec) from which the file should be read\n  -e END_TIME, --end-time END_TIME\n                        Timestamp (in sec) until which the file should be read\n  -s PACKET_SIZE_OPTIONS, --packet-size-options PACKET_SIZE_OPTIONS\n                        Packet size options to be used for each flow (for ex.\n                        For Anonymized trace pcap files). If not provided,\n                        *_ps files are created for each flow by using packet\n                        sizes as per the pcap file\n  -p, --print-all-ips   Print all distinct IPs appearing in the pcap file and\n                        exit\n  -c, --clean           Remove any older generated files and exit the program\n  -op, --orig-ports     Whether original destination ports should be used or a\n                        non-clashing port should be assigned\n</code></pre>\n</li>\n<li>\n<p>The format of <code>list_file</code> is as follows:</p>\n<pre><code>10.0.1.10,\n10.0.2.10,\n.\n.\n.\n</code></pre>\n<ul>\n<li>\n<p>These are the IPs that are appearing in the PCAP file (as\nspecified by <code>pcap_file</code> argument)</p>\n</li>\n<li>\n<p>You can generate this list automatically by running the example\nprogram with <code>-p</code> option</p>\n<pre><code>$ touch list_file\n$ python run.py -p pcap_file mapper_file list_file &gt; list_file\n</code></pre>\n</li>\n<li>\n<p><strong>Note</strong>: While running the program with <code>-p</code> option, the files\n<code>mapper_file</code> and <code>list_file</code> are not actually used but still\nhave to be provided as argument and should exist.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>The format of <code>mapper_file</code> is as follows:</p>\n<pre><code>Host,Start_row,End_row,Number,IP\nh1,1734,1902,169,10.0.0.1\nh2,1528,1733,206,10.0.0.2\n.\n.\n.\n</code></pre>\n</li>\n<li>\n<p>Usage in a different script or in interpreter mode is as:</p>\n<pre><code>&gt;&gt; from pcap_to_ditg import pcap_to_ditg\n&gt;&gt; pcap_file_path = '***'\n&gt;&gt; mapper_file_path = '***'\n&gt;&gt; list_file_path = '***'\n&gt;&gt; options = {'end_time' : 60}\n&gt;&gt; p = pcap_to_ditg.pcap_to_ditg(\n     pcap_file_path,\n     mapper_file_path,\n     list_file_path,\n     options\n   )\nThe flow scripts and the IDT files have been generated and have been saved in separate sub-folders *_ditg_files.\n&gt;&gt;\n</code></pre>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 4498985, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "b240f965733df049184b508b7563a1b1", "sha256": "e3e768de250270f37faad1813b5ae17c41698aeaa666abb0346ba15d4e2427d3"}, "downloads": -1, "filename": "pcap_to_ditg-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b240f965733df049184b508b7563a1b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4963, "upload_time": "2016-10-20T17:18:07", "upload_time_iso_8601": "2016-10-20T17:18:07.902971Z", "url": "https://files.pythonhosted.org/packages/d8/a8/c1888a99b7e5e5066bb9b06e70c8d7bb613a908d8f1c8c3a8540a012a45a/pcap_to_ditg-0.1.1.tar.gz", "yanked": false}], "0.1.1-alpha": [{"comment_text": "", "digests": {"md5": "a5673f4771c628715415893fe6a11eaa", "sha256": "f55922beeaa334d9446dd30f90156d6b4480ac765bbfe9dfbdbdf92b10988eef"}, "downloads": -1, "filename": "pcap_to_ditg-0.1.1-alpha.tar.gz", "has_sig": false, "md5_digest": "a5673f4771c628715415893fe6a11eaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4399, "upload_time": "2016-10-19T17:14:56", "upload_time_iso_8601": "2016-10-19T17:14:56.606867Z", "url": "https://files.pythonhosted.org/packages/15/8e/dcf66ceb194ad06c8b3c32195844dd5a2f4da7b0b5e52f5491f69ab8a629/pcap_to_ditg-0.1.1-alpha.tar.gz", "yanked": false}], "0.1.1-alpha2": [{"comment_text": "", "digests": {"md5": "acb4a81e15c1d8ad0b8548c1a34500b1", "sha256": "dda3078c18f64997ad73297208951c86810f4865da6f7d5fc11d2cf1b85f7218"}, "downloads": -1, "filename": "pcap_to_ditg-0.1.1-alpha2.tar.gz", "has_sig": false, "md5_digest": "acb4a81e15c1d8ad0b8548c1a34500b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4611, "upload_time": "2016-10-19T18:51:52", "upload_time_iso_8601": "2016-10-19T18:51:52.514940Z", "url": "https://files.pythonhosted.org/packages/70/eb/6a599f484911fd6863cd8339b6d1175affacab65cd1c83f6048b73caca79/pcap_to_ditg-0.1.1-alpha2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "8b0ce5c5f6c9c0f02a6001eff2cf3b3e", "sha256": "f20574422ceff54b00a08f46b7f4a78501e8d89684a4346fa589b48395037e3d"}, "downloads": -1, "filename": "pcap_to_ditg-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "8b0ce5c5f6c9c0f02a6001eff2cf3b3e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6344, "upload_time": "2018-11-18T05:23:44", "upload_time_iso_8601": "2018-11-18T05:23:44.218943Z", "url": "https://files.pythonhosted.org/packages/91/b4/f75532fb8b647af81b46f5c7be2d98d6afff21881810884cfde49369cfd0/pcap_to_ditg-1.0.0-py2-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "9c0f3adcaf1f73125e12c7b5630bc485", "sha256": "c383a68072aa709eb8904ab6adcb0ff97b7af70f89b9854bd00b04f1dbb234ff"}, "downloads": -1, "filename": "pcap_to_ditg-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "9c0f3adcaf1f73125e12c7b5630bc485", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6346, "upload_time": "2018-11-18T05:25:46", "upload_time_iso_8601": "2018-11-18T05:25:46.392666Z", "url": "https://files.pythonhosted.org/packages/8f/9f/736dc073eb32ec409f75f8b2aad5405f22b2316ad4a72ea1b662e2bd0bcf/pcap_to_ditg-1.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b5b37c35437c424824e22a63debda2c", "sha256": "9e63b08ce9c820967d6d9c66484fdb78f5346830e50573a0bb86f9e80b8b3ec5"}, "downloads": -1, "filename": "pcap_to_ditg-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0b5b37c35437c424824e22a63debda2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5497, "upload_time": "2018-11-18T05:25:48", "upload_time_iso_8601": "2018-11-18T05:25:48.058998Z", "url": "https://files.pythonhosted.org/packages/a6/6d/8ef44693d1ad57a04e1879e06ff39a979d43a2888d433da08c73b2a4f01b/pcap_to_ditg-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c0f3adcaf1f73125e12c7b5630bc485", "sha256": "c383a68072aa709eb8904ab6adcb0ff97b7af70f89b9854bd00b04f1dbb234ff"}, "downloads": -1, "filename": "pcap_to_ditg-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "9c0f3adcaf1f73125e12c7b5630bc485", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6346, "upload_time": "2018-11-18T05:25:46", "upload_time_iso_8601": "2018-11-18T05:25:46.392666Z", "url": "https://files.pythonhosted.org/packages/8f/9f/736dc073eb32ec409f75f8b2aad5405f22b2316ad4a72ea1b662e2bd0bcf/pcap_to_ditg-1.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b5b37c35437c424824e22a63debda2c", "sha256": "9e63b08ce9c820967d6d9c66484fdb78f5346830e50573a0bb86f9e80b8b3ec5"}, "downloads": -1, "filename": "pcap_to_ditg-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0b5b37c35437c424824e22a63debda2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5497, "upload_time": "2018-11-18T05:25:48", "upload_time_iso_8601": "2018-11-18T05:25:48.058998Z", "url": "https://files.pythonhosted.org/packages/a6/6d/8ef44693d1ad57a04e1879e06ff39a979d43a2888d433da08c73b2a4f01b/pcap_to_ditg-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:30 2020"}