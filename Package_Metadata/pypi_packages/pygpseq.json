{"info": {"author": "Gabriele Girelli", "author_email": "gabriele.girelli@scilifelab.se", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "pyGPSeq v3.3.5\n===\n\nA Python3 package that provides tools to analyze images of GPSeq samples.\n\n* Read the GitHub pages [documentation](https://ggirelli.github.io/pygpseq/) for more details.\n* Read the Wiki [documentation](https://github.com/ggirelli/pygpseq/wiki) for more details.  \n*Wiki docs will be merged with GitHub pages ones soon.*\n\nInstallation\n-------------\n\nTo **install**, run the following:\n\n```\ngit clone http://github.com/ggirelli/pygpseq\ncd pygpseq\nsudo -H pip3 install .\n```\n\nTo **uninstall** run the following from within the repository folder:\n\n```\nsudo -H pip3 uninstall pygpseq\n```\n\nTo **update**, first uninstall, and then run the following from within the repository folder.\n\n```\ngit pull\nsudo -H pip3 install .\n```\n\nUsage\n----------\n\n#### Analyze a GPSeq image dataset\n\nThe `gpseq_anim` (**GPSeq** **an**alysis of **im**ages) analyzes a multi-condition GPSeq image dataset. Run `gpseq_anim -h` for more details.\n\n#### Calculate lamin distance of FISH signals\n\nThe `gpseq_fromfish` script characterizes FISH signals identified with `DOTTER` (or similar tools) by calculating: absolute/normalized distance from lamina and central region, nuclear compartment, allele status,... Run `gpseq_fromfish -h` for more details.\n\n#### Merge multiple FISH analyses using a metadata table\n\nUse the `gpseq_fromfish_merge` script to merge multiple FISH analysis output (generated with `gpseq_fromfish`). For more details run `gpseq_fromfish_merge -h`.\n\n#### Perform automatic 3D nuclei segmentation\n\nRun `tiff_auto3dseg -h` for more details on how to produce binary/labeled (compressed) masks of your nuclei staining channels\n\n#### Identify out of focus (OOF) fields of view\n\nRun `tiff_findoof -h` for more details on how to quickly identify out of focus fields of view. Also, the `tiff_plotoof` script (in R, requires `argparser` and `ggplot2`) can be used to produce an informative plot with the signal location over the Z stack.\n\n#### Split a tiff in smaller images\n\nTo split a large tiff to smaller square images of size N x N pixels, run `tiff_split input_image output_folder N`. Use the `--enlarge` option to avoid pixel loss. If the input image is a 3D stack, then the output images will be of N x N x N voxels, use the `--2d` to apply the split only to the first slice of the stack. For more details, run `tiff_split -h`.\n\n#### (Un)compress a tiff\n\nTo uncompress a set of tiff, use the `tiffcu -u` command. To compress them use the `tiffcu -c` command instead. Use `tiffcu -h` for more details.\n\n#### Convert a nd2 file into single-channel tiff images\n\nUse the `nd2_to_tiff` tool to convert images bundled into a nd2 file into separate single-channel tiff images. Use `nd2_to_tiff -h` for the documentation.\n\nContributing\n---\n\nWe welcome any contributions to `pygpseq`. Please, refer to the [contribution guidelines](https://ggirelli.github.io/pygpseq/contributing) if this is your first time contributing! Also, check out our [code of conduct](https://ggirelli.github.io/pygpseq/code_of_conduct).\n\nLicense\n---\n\n```\nMIT License\nCopyright (c) 2017 Gabriele Girelli\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ggirelli/gpseq-img-py", "keywords": "microscopy image analysis bioimaging biology cell DNA", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pygpseq", "package_url": "https://pypi.org/project/pygpseq/", "platform": "", "project_url": "https://pypi.org/project/pygpseq/", "project_urls": {"Homepage": "https://github.com/ggirelli/gpseq-img-py"}, "release_url": "https://pypi.org/project/pygpseq/3.3.5/", "requires_dist": null, "requires_python": "", "summary": "A GPSeq image analysis package", "version": "3.3.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyGPSeq v3.3.5</h1>\n<p>A Python3 package that provides tools to analyze images of GPSeq samples.</p>\n<ul>\n<li>Read the GitHub pages <a href=\"https://ggirelli.github.io/pygpseq/\" rel=\"nofollow\">documentation</a> for more details.</li>\n<li>Read the Wiki <a href=\"https://github.com/ggirelli/pygpseq/wiki\" rel=\"nofollow\">documentation</a> for more details.<br>\n<em>Wiki docs will be merged with GitHub pages ones soon.</em></li>\n</ul>\n<h2>Installation</h2>\n<p>To <strong>install</strong>, run the following:</p>\n<pre><code>git clone http://github.com/ggirelli/pygpseq\ncd pygpseq\nsudo -H pip3 install .\n</code></pre>\n<p>To <strong>uninstall</strong> run the following from within the repository folder:</p>\n<pre><code>sudo -H pip3 uninstall pygpseq\n</code></pre>\n<p>To <strong>update</strong>, first uninstall, and then run the following from within the repository folder.</p>\n<pre><code>git pull\nsudo -H pip3 install .\n</code></pre>\n<h2>Usage</h2>\n<h4>Analyze a GPSeq image dataset</h4>\n<p>The <code>gpseq_anim</code> (<strong>GPSeq</strong> <strong>an</strong>alysis of <strong>im</strong>ages) analyzes a multi-condition GPSeq image dataset. Run <code>gpseq_anim -h</code> for more details.</p>\n<h4>Calculate lamin distance of FISH signals</h4>\n<p>The <code>gpseq_fromfish</code> script characterizes FISH signals identified with <code>DOTTER</code> (or similar tools) by calculating: absolute/normalized distance from lamina and central region, nuclear compartment, allele status,... Run <code>gpseq_fromfish -h</code> for more details.</p>\n<h4>Merge multiple FISH analyses using a metadata table</h4>\n<p>Use the <code>gpseq_fromfish_merge</code> script to merge multiple FISH analysis output (generated with <code>gpseq_fromfish</code>). For more details run <code>gpseq_fromfish_merge -h</code>.</p>\n<h4>Perform automatic 3D nuclei segmentation</h4>\n<p>Run <code>tiff_auto3dseg -h</code> for more details on how to produce binary/labeled (compressed) masks of your nuclei staining channels</p>\n<h4>Identify out of focus (OOF) fields of view</h4>\n<p>Run <code>tiff_findoof -h</code> for more details on how to quickly identify out of focus fields of view. Also, the <code>tiff_plotoof</code> script (in R, requires <code>argparser</code> and <code>ggplot2</code>) can be used to produce an informative plot with the signal location over the Z stack.</p>\n<h4>Split a tiff in smaller images</h4>\n<p>To split a large tiff to smaller square images of size N x N pixels, run <code>tiff_split input_image output_folder N</code>. Use the <code>--enlarge</code> option to avoid pixel loss. If the input image is a 3D stack, then the output images will be of N x N x N voxels, use the <code>--2d</code> to apply the split only to the first slice of the stack. For more details, run <code>tiff_split -h</code>.</p>\n<h4>(Un)compress a tiff</h4>\n<p>To uncompress a set of tiff, use the <code>tiffcu -u</code> command. To compress them use the <code>tiffcu -c</code> command instead. Use <code>tiffcu -h</code> for more details.</p>\n<h4>Convert a nd2 file into single-channel tiff images</h4>\n<p>Use the <code>nd2_to_tiff</code> tool to convert images bundled into a nd2 file into separate single-channel tiff images. Use <code>nd2_to_tiff -h</code> for the documentation.</p>\n<h2>Contributing</h2>\n<p>We welcome any contributions to <code>pygpseq</code>. Please, refer to the <a href=\"https://ggirelli.github.io/pygpseq/contributing\" rel=\"nofollow\">contribution guidelines</a> if this is your first time contributing! Also, check out our <a href=\"https://ggirelli.github.io/pygpseq/code_of_conduct\" rel=\"nofollow\">code of conduct</a>.</p>\n<h2>License</h2>\n<pre><code>MIT License\nCopyright (c) 2017 Gabriele Girelli\n</code></pre>\n\n          </div>"}, "last_serial": 4814468, "releases": {"0.1.0": [], "3.3.4": [{"comment_text": "", "digests": {"md5": "bc28fa79ebbbf0585e426c8cf04e9039", "sha256": "e0eaf5edb5f4ccaec1ffac3101b463dbfa113c11f4a5954ed6f1450ac7c40bb3"}, "downloads": -1, "filename": "pygpseq-3.3.4.tar.gz", "has_sig": false, "md5_digest": "bc28fa79ebbbf0585e426c8cf04e9039", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75766, "upload_time": "2019-02-08T14:50:52", "upload_time_iso_8601": "2019-02-08T14:50:52.597160Z", "url": "https://files.pythonhosted.org/packages/74/f4/98a1eb5002a9bdf97423364f720e0a64b779feb11eafb3be5fe669b5b9ab/pygpseq-3.3.4.tar.gz", "yanked": false}], "3.3.4.post1": [{"comment_text": "", "digests": {"md5": "5caca9b26309b87e18077109192add28", "sha256": "f0478eb8fbcca7ce38b00a7bafd90d94c01a4c9b093f2d73be5cb636b92b73fe"}, "downloads": -1, "filename": "pygpseq-3.3.4.post1.tar.gz", "has_sig": false, "md5_digest": "5caca9b26309b87e18077109192add28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95764, "upload_time": "2019-02-13T07:03:23", "upload_time_iso_8601": "2019-02-13T07:03:23.777405Z", "url": "https://files.pythonhosted.org/packages/a1/11/c4866f2957d0732445fc2299118aea7a9489721703730c49c3c986c9e6e6/pygpseq-3.3.4.post1.tar.gz", "yanked": false}], "3.3.4.post2": [{"comment_text": "", "digests": {"md5": "566cf93388df842c9b2508c6b4389aaf", "sha256": "19b62435bef8779267fe4fd3887e634ef155c6ed3c5944710d7e888ddb5dc83a"}, "downloads": -1, "filename": "pygpseq-3.3.4.post2.tar.gz", "has_sig": false, "md5_digest": "566cf93388df842c9b2508c6b4389aaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 99259, "upload_time": "2019-02-13T07:09:30", "upload_time_iso_8601": "2019-02-13T07:09:30.663214Z", "url": "https://files.pythonhosted.org/packages/b3/b8/9c627f5ff40883d3d71d290804323f59ff1db1beee028d71f7ec17219e1c/pygpseq-3.3.4.post2.tar.gz", "yanked": false}], "3.3.5": [{"comment_text": "", "digests": {"md5": "888098bf24cdc313ad4959580eb52261", "sha256": "18774003312b0f5445cd7c2cd46da10335a7937fe50886284d8d70bf5dfd76fd"}, "downloads": -1, "filename": "pygpseq-3.3.5.tar.gz", "has_sig": false, "md5_digest": "888098bf24cdc313ad4959580eb52261", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 99203, "upload_time": "2019-02-13T07:40:05", "upload_time_iso_8601": "2019-02-13T07:40:05.165908Z", "url": "https://files.pythonhosted.org/packages/0e/6f/a910ff8b4c1e76760b043d4607877f146d1fc5db438aed0b6e074c258f5e/pygpseq-3.3.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "888098bf24cdc313ad4959580eb52261", "sha256": "18774003312b0f5445cd7c2cd46da10335a7937fe50886284d8d70bf5dfd76fd"}, "downloads": -1, "filename": "pygpseq-3.3.5.tar.gz", "has_sig": false, "md5_digest": "888098bf24cdc313ad4959580eb52261", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 99203, "upload_time": "2019-02-13T07:40:05", "upload_time_iso_8601": "2019-02-13T07:40:05.165908Z", "url": "https://files.pythonhosted.org/packages/0e/6f/a910ff8b4c1e76760b043d4607877f146d1fc5db438aed0b6e074c258f5e/pygpseq-3.3.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:44 2020"}