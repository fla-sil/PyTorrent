{"info": {"author": "Filip \u0160", "author_email": "projects@filips.si", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Internet :: Name Service (DNS)", "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator", "Topic :: Security :: Cryptography", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "ContentHash for Python\n======================\n\n[![version][icon-version]][link-pypi]\n[![downloads][icon-downloads]][link-pypi]\n[![license][icon-license]][link-license]\n[![python][icon-python]][link-python]\n\n[![linux build][icon-travis]][link-travis]\n[![windows build][icon-appveyor]][link-appveyor]\n[![coverage][icon-coverage]][link-coverage]\n[![quality][icon-quality]][link-quality]\n\nPython implementation of EIP 1577 content hash.\n\n## Description\n\nThis is a simple package made for encoding and decoding content hashes has specified in the [EIP 1577][link-eip-1577].\nThis package will be useful for every [Ethereum][link-ethereum] developer wanting to interact with [EIP 1577][link-eip-1577] compliant [ENS resolvers][link-resolvers].\n\nFor JavaScript implementation, see [`pldespaigne/content-hash`][link-javascript-implementation].\n\n## Installation\n\n### Requirements\n\nContentHash requires Python 3.5 or higher.\n\n### From PyPI\n\nThe recommended way to install ContentHash is from PyPI with PIP.\n\n```bash\npip install content-hash\n```\n\n### From Source\n\nAlternatively, you can also install it from the source.\n\n```bash\ngit clone https://github.com/filips123/ContentHashPy.git\ncd ContentHashPy\npython setup.py install\n```\n\n## Usage\n\n### Supported Codecs\n\nThe following codecs are currently supported:\n\n- `swarm-ns`\n- `ipfs-ns`\n- `ipns-ns`\n\nEvery other codec supported by [`multicodec`][link-multicodec] will be encoded by default in `utf-8`. You can see the full list of the supported codecs [here][link-supported-codecs].\n\n### Getting Codec\n\nYou can use a `get_codec` function to get codec from the content hash.\n\nIt takes a content hash as a HEX string and returns the codec name. A content hash can be prefixed with a `0x`, but it's not mandatory.\n\n```py\nimport content_hash\n\nchash = 'bc037a716b746c776934666563766f367269'\ncodec = content_hash.get_codec(chash)\n\nprint(codec) # onion\n```\n\n### Decoding\n\nYou can use a `decode` function to decode a content hash.\n\nIt takes a content hash as a HEX string and returns the decoded content as a string. A content hash can be prefixed with a `0x`, but it's not mandatory.\n\n```py\nimport content_hash\n\nchash = 'e3010170122029f2d17be6139079dc48696d1f582a8530eb9805b561eda517e22a892c7e3f1f'\nvalue = content_hash.decode(chash)\n\nprint(value) # QmRAQB6YaCyidP37UdDnjFY5vQuiBrcqdyoW1CuDgwxkD4\n```\n\n### Encoding\n\nYou can use an `encode` function to encode a content hash.\n\nIt takes a supported codec as a string and a value as a string and returns the corresponding content hash as a HEX string. The output will not be prefixed with a `0x`.\n\n```py\nimport content_hash\n\ncodec = 'swarm-ns'\nvalue = 'd1de9994b4d039f6548d191eb26786769f580809256b4685ef316805265ea162'\nchash = content_hash.encode(codec, value)\n\nprint(chash) # e40101701b20d1de9994b4d039f6548d191eb26786769f580809256b4685ef316805265ea162\n```\n\n## Creating Codecs\n\nAll supported codec profiles are available in [`content_hash/profiles/__init__.py`][link-profiles-file], in `PROFILES` dictionary. You need to add a new profile there. You only need to add a new profile if your codec encoding and decoding are different from `utf-8`.\n\nEach profile must have the same name as the corresponding codec in the `multicodec` library.\n\nA profile must also have decode and encode function. They should be passed as a string containing the name of the module for required decode or encode. All such modules are available in [`content_hash/decodes`][link-decodes-directory] and [`content_hash/encodes`][link-encodes-directory].\n\nEach module name should describe it as much as possible. Its name can only contain valid characters for Python modules.\n\nEach decode module must have a `decode` function. It must be a function that takes a `bytes` input and returns a `str` result.\n\nEach encode module must have an `encode` function. It must be a function that takes a `str` input and returns a `bytes` result.\n\nAll inputs and outputs must be the same as in the [JavaScript implementation][link-javascript-implementation]. Multiple profiles can share the same decodes and encodes.\n\n## Versioning\n\nThis library uses [SemVer][link-semver] for versioning. For the versions available, see [the tags][link-tags] on this repository.\n\n## License\n\nThis library is licensed under the MIT license. See the [LICENSE][link-license-file] file for details.\n\n[icon-version]: https://img.shields.io/pypi/v/content-hash.svg?style=flat-square&label=version\n[icon-downloads]: https://img.shields.io/pypi/dm/content-hash.svg?style=flat-square&label=downloads\n[icon-license]: https://img.shields.io/pypi/l/content-hash.svg?style=flat-square&label=license\n[icon-python]: https://img.shields.io/pypi/pyversions/content-hash?style=flat-square&label=python\n\n[icon-travis]: https://img.shields.io/travis/com/filips123/ContentHashPy.svg?style=flat-square&label=linux+build\n[icon-appveyor]: https://img.shields.io/appveyor/ci/filips123/ContentHashPy.svg?style=flat-square&label=windows+build\n[icon-coverage]: https://img.shields.io/scrutinizer/coverage/g/filips123/ContentHashPy.svg?style=flat-square&label=coverage\n[icon-quality]: https://img.shields.io/scrutinizer/g/filips123/ContentHashPy.svg?style=flat-square&label=quality\n\n[link-pypi]: https://pypi.org/project/content-hash/\n[link-license]: https://choosealicense.com/licenses/mit/\n[link-python]: https://python.org/\n[link-travis]: https://travis-ci.com/filips123/ContentHashPy/\n[link-appveyor]: https://ci.appveyor.com/project/filips123/ContentHashPy/\n[link-coverage]: https://scrutinizer-ci.com/g/filips123/ContentHashPy/code-structure/\n[link-quality]: https://scrutinizer-ci.com/g/filips123/ContentHashPy/\n[link-semver]: https://semver.org/\n\n[link-eip-1577]: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1577.md\n[link-ethereum]: https://www.ethereum.org/\n[link-resolvers]: http://docs.ens.domains/en/latest/introduction.html\n[link-multicodec]: https://github.com/multiformats/multicodec/\n[link-supported-codecs]: https://github.com/multiformats/multicodec/blob/master/table.csv\n\n[link-tags]: https://github.com/filips123/ContentHashPy/tags/\n[link-license-file]: https://github.com/filips123/ContentHashPy/blob/master/LICENSE\n[link-profiles-file]: https://github.com/filips123/ContentHashPy/blob/master/content_hash/profiles/__init__.py\n[link-decodes-directory]: https://github.com/filips123/ContentHashPy/tree/master/content_hash/decodes/\n[link-encodes-directory]: https://github.com/filips123/ContentHashPy/tree/master/content_hash/encodes/\n\n[link-javascript-implementation]: https://github.com/pldespaigne/content-hash/\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/filips123/ContentHashPy/", "keywords": "ethereum,ethereum-name-service,ens,eip1577,web3,decentralized", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "content-hash", "package_url": "https://pypi.org/project/content-hash/", "platform": "", "project_url": "https://pypi.org/project/content-hash/", "project_urls": {"Homepage": "https://github.com/filips123/ContentHashPy/"}, "release_url": "https://pypi.org/project/content-hash/1.1.1/", "requires_dist": ["py-cid (<0.4.0,>=0.3.0)", "py-multicodec (<0.3.0,>=0.2.1)", "py-multihash (<0.3.0,>=0.2.3)", "pylint ; extra == 'lint'", "pytest ; extra == 'test'", "pytest-cov ; extra == 'test'"], "requires_python": ">= 3.5", "summary": "Python implementation of EIP 1577 content hash", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ContentHash for Python</h1>\n<p><a href=\"https://pypi.org/project/content-hash/\" rel=\"nofollow\"><img alt=\"version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0f5c631144890a9878cff58d190469bdf3e9ffbf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f6e74656e742d686173682e7376673f7374796c653d666c61742d737175617265266c6162656c3d76657273696f6e\"></a>\n<a href=\"https://pypi.org/project/content-hash/\" rel=\"nofollow\"><img alt=\"downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6cf89a1a576a22eaf86b947cb6cd9ac12eba7ed9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f636f6e74656e742d686173682e7376673f7374796c653d666c61742d737175617265266c6162656c3d646f776e6c6f616473\"></a>\n<a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9135391d875f4fc1e93b55ce54ae0b4e51d6f97/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f636f6e74656e742d686173682e7376673f7374796c653d666c61742d737175617265266c6162656c3d6c6963656e7365\"></a>\n<a href=\"https://python.org/\" rel=\"nofollow\"><img alt=\"python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed2eaa1538d91cfd154471a78e8d4debe3f7baa5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f636f6e74656e742d686173683f7374796c653d666c61742d737175617265266c6162656c3d707974686f6e\"></a></p>\n<p><a href=\"https://travis-ci.com/filips123/ContentHashPy/\" rel=\"nofollow\"><img alt=\"linux build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1366c94b6c16be7b96b170683f334c8ae0b41975/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f66696c6970733132332f436f6e74656e744861736850792e7376673f7374796c653d666c61742d737175617265266c6162656c3d6c696e75782b6275696c64\"></a>\n<a href=\"https://ci.appveyor.com/project/filips123/ContentHashPy/\" rel=\"nofollow\"><img alt=\"windows build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eee3f6220bf2bc2c6e7c52893cd584e468a72062/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f66696c6970733132332f436f6e74656e744861736850792e7376673f7374796c653d666c61742d737175617265266c6162656c3d77696e646f77732b6275696c64\"></a>\n<a href=\"https://scrutinizer-ci.com/g/filips123/ContentHashPy/code-structure/\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ad4dca7ce52c298126d18aa442a277b40b3a936/68747470733a2f2f696d672e736869656c64732e696f2f7363727574696e697a65722f636f7665726167652f672f66696c6970733132332f436f6e74656e744861736850792e7376673f7374796c653d666c61742d737175617265266c6162656c3d636f766572616765\"></a>\n<a href=\"https://scrutinizer-ci.com/g/filips123/ContentHashPy/\" rel=\"nofollow\"><img alt=\"quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9f5973520ef10f59c4909af4ce659b078f5633f/68747470733a2f2f696d672e736869656c64732e696f2f7363727574696e697a65722f672f66696c6970733132332f436f6e74656e744861736850792e7376673f7374796c653d666c61742d737175617265266c6162656c3d7175616c697479\"></a></p>\n<p>Python implementation of EIP 1577 content hash.</p>\n<h2>Description</h2>\n<p>This is a simple package made for encoding and decoding content hashes has specified in the <a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1577.md\" rel=\"nofollow\">EIP 1577</a>.\nThis package will be useful for every <a href=\"https://www.ethereum.org/\" rel=\"nofollow\">Ethereum</a> developer wanting to interact with <a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1577.md\" rel=\"nofollow\">EIP 1577</a> compliant <a href=\"http://docs.ens.domains/en/latest/introduction.html\" rel=\"nofollow\">ENS resolvers</a>.</p>\n<p>For JavaScript implementation, see <a href=\"https://github.com/pldespaigne/content-hash/\" rel=\"nofollow\"><code>pldespaigne/content-hash</code></a>.</p>\n<h2>Installation</h2>\n<h3>Requirements</h3>\n<p>ContentHash requires Python 3.5 or higher.</p>\n<h3>From PyPI</h3>\n<p>The recommended way to install ContentHash is from PyPI with PIP.</p>\n<pre>pip install content-hash\n</pre>\n<h3>From Source</h3>\n<p>Alternatively, you can also install it from the source.</p>\n<pre>git clone https://github.com/filips123/ContentHashPy.git\n<span class=\"nb\">cd</span> ContentHashPy\npython setup.py install\n</pre>\n<h2>Usage</h2>\n<h3>Supported Codecs</h3>\n<p>The following codecs are currently supported:</p>\n<ul>\n<li><code>swarm-ns</code></li>\n<li><code>ipfs-ns</code></li>\n<li><code>ipns-ns</code></li>\n</ul>\n<p>Every other codec supported by <a href=\"https://github.com/multiformats/multicodec/\" rel=\"nofollow\"><code>multicodec</code></a> will be encoded by default in <code>utf-8</code>. You can see the full list of the supported codecs <a href=\"https://github.com/multiformats/multicodec/blob/master/table.csv\" rel=\"nofollow\">here</a>.</p>\n<h3>Getting Codec</h3>\n<p>You can use a <code>get_codec</code> function to get codec from the content hash.</p>\n<p>It takes a content hash as a HEX string and returns the codec name. A content hash can be prefixed with a <code>0x</code>, but it's not mandatory.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">content_hash</span>\n\n<span class=\"n\">chash</span> <span class=\"o\">=</span> <span class=\"s1\">'bc037a716b746c776934666563766f367269'</span>\n<span class=\"n\">codec</span> <span class=\"o\">=</span> <span class=\"n\">content_hash</span><span class=\"o\">.</span><span class=\"n\">get_codec</span><span class=\"p\">(</span><span class=\"n\">chash</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">codec</span><span class=\"p\">)</span> <span class=\"c1\"># onion</span>\n</pre>\n<h3>Decoding</h3>\n<p>You can use a <code>decode</code> function to decode a content hash.</p>\n<p>It takes a content hash as a HEX string and returns the decoded content as a string. A content hash can be prefixed with a <code>0x</code>, but it's not mandatory.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">content_hash</span>\n\n<span class=\"n\">chash</span> <span class=\"o\">=</span> <span class=\"s1\">'e3010170122029f2d17be6139079dc48696d1f582a8530eb9805b561eda517e22a892c7e3f1f'</span>\n<span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">content_hash</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">chash</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"c1\"># QmRAQB6YaCyidP37UdDnjFY5vQuiBrcqdyoW1CuDgwxkD4</span>\n</pre>\n<h3>Encoding</h3>\n<p>You can use an <code>encode</code> function to encode a content hash.</p>\n<p>It takes a supported codec as a string and a value as a string and returns the corresponding content hash as a HEX string. The output will not be prefixed with a <code>0x</code>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">content_hash</span>\n\n<span class=\"n\">codec</span> <span class=\"o\">=</span> <span class=\"s1\">'swarm-ns'</span>\n<span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s1\">'d1de9994b4d039f6548d191eb26786769f580809256b4685ef316805265ea162'</span>\n<span class=\"n\">chash</span> <span class=\"o\">=</span> <span class=\"n\">content_hash</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"n\">codec</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">chash</span><span class=\"p\">)</span> <span class=\"c1\"># e40101701b20d1de9994b4d039f6548d191eb26786769f580809256b4685ef316805265ea162</span>\n</pre>\n<h2>Creating Codecs</h2>\n<p>All supported codec profiles are available in <a href=\"https://github.com/filips123/ContentHashPy/blob/master/content_hash/profiles/__init__.py\" rel=\"nofollow\"><code>content_hash/profiles/__init__.py</code></a>, in <code>PROFILES</code> dictionary. You need to add a new profile there. You only need to add a new profile if your codec encoding and decoding are different from <code>utf-8</code>.</p>\n<p>Each profile must have the same name as the corresponding codec in the <code>multicodec</code> library.</p>\n<p>A profile must also have decode and encode function. They should be passed as a string containing the name of the module for required decode or encode. All such modules are available in <a href=\"https://github.com/filips123/ContentHashPy/tree/master/content_hash/decodes/\" rel=\"nofollow\"><code>content_hash/decodes</code></a> and <a href=\"https://github.com/filips123/ContentHashPy/tree/master/content_hash/encodes/\" rel=\"nofollow\"><code>content_hash/encodes</code></a>.</p>\n<p>Each module name should describe it as much as possible. Its name can only contain valid characters for Python modules.</p>\n<p>Each decode module must have a <code>decode</code> function. It must be a function that takes a <code>bytes</code> input and returns a <code>str</code> result.</p>\n<p>Each encode module must have an <code>encode</code> function. It must be a function that takes a <code>str</code> input and returns a <code>bytes</code> result.</p>\n<p>All inputs and outputs must be the same as in the <a href=\"https://github.com/pldespaigne/content-hash/\" rel=\"nofollow\">JavaScript implementation</a>. Multiple profiles can share the same decodes and encodes.</p>\n<h2>Versioning</h2>\n<p>This library uses <a href=\"https://semver.org/\" rel=\"nofollow\">SemVer</a> for versioning. For the versions available, see <a href=\"https://github.com/filips123/ContentHashPy/tags/\" rel=\"nofollow\">the tags</a> on this repository.</p>\n<h2>License</h2>\n<p>This library is licensed under the MIT license. See the <a href=\"https://github.com/filips123/ContentHashPy/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> file for details.</p>\n\n          </div>"}, "last_serial": 6303029, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "49e14c4912e619c4902ca2e14e5981ab", "sha256": "fa323948276e09e1d81544a9480e4e962a6e19ddab2cca19fec5ac0aac22e235"}, "downloads": -1, "filename": "content_hash-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "49e14c4912e619c4902ca2e14e5981ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.5", "size": 18048, "upload_time": "2019-08-04T17:40:15", "upload_time_iso_8601": "2019-08-04T17:40:15.625374Z", "url": "https://files.pythonhosted.org/packages/d2/b2/ef815a6149ddad0264df1c9aefb6b7a4d16ef6d6c3355f68820d3d603af9/content_hash-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1a0022c69ab1a5b47be93981bc03518", "sha256": "2be108f39ddbcfc79868cd84c7aeee4e7347a40d11c6191897c5b67753386704"}, "downloads": -1, "filename": "content-hash-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e1a0022c69ab1a5b47be93981bc03518", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 12664, "upload_time": "2019-08-04T17:40:17", "upload_time_iso_8601": "2019-08-04T17:40:17.871064Z", "url": "https://files.pythonhosted.org/packages/b8/42/e83d0c604cfbfd9ce3a87ed0e931e4c8c5509260d39412274f15ebe0a02d/content-hash-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "b4c19f0c0ef2ef9ad43efa29f1d06ef2", "sha256": "b9b027aa6e8ee28c14443ca4ec5eb644e0823feaa7ce4e3f421d3517c0141844"}, "downloads": -1, "filename": "content_hash-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b4c19f0c0ef2ef9ad43efa29f1d06ef2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.5", "size": 18194, "upload_time": "2019-09-30T18:25:23", "upload_time_iso_8601": "2019-09-30T18:25:23.278823Z", "url": "https://files.pythonhosted.org/packages/34/99/ed315e8443e1e42bf5f4edf1392b590ba902536304180a28494b2fae85d8/content_hash-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72df31abb1b8fd0652a6826f6491fa49", "sha256": "6f2fce2c0ca995d40ba68fb33a31a8969a0f8c42410f3ca3bc055a6512713686"}, "downloads": -1, "filename": "content-hash-1.1.0.tar.gz", "has_sig": false, "md5_digest": "72df31abb1b8fd0652a6826f6491fa49", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 12983, "upload_time": "2019-09-30T18:25:25", "upload_time_iso_8601": "2019-09-30T18:25:25.025713Z", "url": "https://files.pythonhosted.org/packages/b2/97/f8e208effa19b634ffdf7faee7b03d384119180afa4e99e7f72f5ebb3102/content-hash-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "bf6d73149b71e506b9d3bce3a0be45ab", "sha256": "7110a3b8b5ce5735e5d692babe8ddc52e9f161fd69cfc91d5ebf6a0351b43f74"}, "downloads": -1, "filename": "content_hash-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bf6d73149b71e506b9d3bce3a0be45ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.5", "size": 9894, "upload_time": "2019-12-14T13:20:58", "upload_time_iso_8601": "2019-12-14T13:20:58.031477Z", "url": "https://files.pythonhosted.org/packages/33/54/9b35b10b9ff61fe00470727e12dc13028e69edb05bd02d030155ff6137f3/content_hash-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ee4460d8ec2948c81dadcf1eb39f4db", "sha256": "3f18bccc34f0275ebf2c7aa292f78b99273006d488b4a814ae4dec123c2269c3"}, "downloads": -1, "filename": "content-hash-1.1.1.tar.gz", "has_sig": false, "md5_digest": "5ee4460d8ec2948c81dadcf1eb39f4db", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 8175, "upload_time": "2019-12-14T13:20:59", "upload_time_iso_8601": "2019-12-14T13:20:59.004522Z", "url": "https://files.pythonhosted.org/packages/50/c3/bc891c84bfc822ab25be521bdce391739bd08a549d0c149000a04ca6f074/content-hash-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bf6d73149b71e506b9d3bce3a0be45ab", "sha256": "7110a3b8b5ce5735e5d692babe8ddc52e9f161fd69cfc91d5ebf6a0351b43f74"}, "downloads": -1, "filename": "content_hash-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bf6d73149b71e506b9d3bce3a0be45ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.5", "size": 9894, "upload_time": "2019-12-14T13:20:58", "upload_time_iso_8601": "2019-12-14T13:20:58.031477Z", "url": "https://files.pythonhosted.org/packages/33/54/9b35b10b9ff61fe00470727e12dc13028e69edb05bd02d030155ff6137f3/content_hash-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ee4460d8ec2948c81dadcf1eb39f4db", "sha256": "3f18bccc34f0275ebf2c7aa292f78b99273006d488b4a814ae4dec123c2269c3"}, "downloads": -1, "filename": "content-hash-1.1.1.tar.gz", "has_sig": false, "md5_digest": "5ee4460d8ec2948c81dadcf1eb39f4db", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 8175, "upload_time": "2019-12-14T13:20:59", "upload_time_iso_8601": "2019-12-14T13:20:59.004522Z", "url": "https://files.pythonhosted.org/packages/50/c3/bc891c84bfc822ab25be521bdce391739bd08a549d0c149000a04ca6f074/content-hash-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:34 2020"}