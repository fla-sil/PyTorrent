{"info": {"author": "Samuel Chan, Tomy Tjandra", "author_email": "samuel@algorit.ma", "bugtrack_url": null, "classifiers": ["License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Word Embedding utilities for Language Models\n[![PyPI version](https://img.shields.io/pypi/v/elang?color=green)](https://badge.fury.io/py/elang) [![PyPI license](https://img.shields.io/pypi/l/Elang?color=red)](https://pypi.python.org/pypi/elang/) [![Activity](https://img.shields.io/github/commit-activity/m/onlyphantom/elang)](https://github.com/onlyphantom/elang) [![maintained](https://img.shields.io/maintenance/yes/2020)](https://github.com/onlyphantom/elang/graphs/commit-activity) [![PyPI format](https://img.shields.io/pypi/format/elang)](https://pypi.org/project/elang/) [![pypi downloads](https://img.shields.io/pypi/dm/elang)](https://pypi.org/project/elang/) [![Documentation Status](https://readthedocs.org/projects/elang/badge/?version=latest)](https://elang.readthedocs.io/en/latest/?badge=latest)\n\n\nElang is an acronym that combines the phrases **Embedding (E)** and **Language (Lang) Models**. Its goal is to help NLP (natural language processing) researchers, Word2Vec practitioners, educators and data scientists be more productive in training language models and explaining key concepts in word embeddings. \n\nKey features as of the 0.1 release can be grouped as follow:\n\n- **Corpus-building utility**\n    - [x] `build_from_wikipedia_random`: Build English / Indonesian corpus using random articles from Wikipedia\n    - [x] `build_from_wikipedia_branch`: Build English / Indonesian corpus by building a \"topic branch\" off Wikipedia\n\n- **Text processing utility**\n    - [x] `remove_stopwords_id`: Remove stopwords (Indonesian)\n    - [x] `remove_region_id`: Remove region entity (Indonesian)\n    - [x] `remove_calendar_id`: Remove calendar words (Indonesian)\n    - [x] `remove_vulgarity_id`: Remove vulgarity (Indonesian)\n\n- **Embedding Visualization Utility** (see illustration below)\n    - [x] `plot2d`: 2D plot with emphasis on words of interest\n    - [x] `plotNeighbours`: 2D plot with neighbors of words\n\n\n<img align=\"left\" width=\"35%\" src=\"https://github.com/onlyphantom/elangdev/blob/master/assets/elang_light.png?raw=true\" style=\"margin-right:10%\">\n\n## Elang\nElang also means \"eagle\" in Bahasa Indonesia, and the _elang Jawa_ (Javan hawk-eagle) is the national bird of Indonesia, more commonly referred to as Garuda. \n\nThe package provides a collection of utility functions and tools that interface with `gensim`, `matplotlib` and `scikit-learn`, as well as curated negative lists for Bahasa Indonesia (kata kasar / vulgar words, _stopwords_ etc) and useful preprocesisng functions. It abstracts away the mundane task so you can train your Word2Vec model faster, and obtain visual feedback on your model more quickly.\n\n# Quick Demo\n\n### 2-d Word Embedding Visualization\nInstall the latest version of `elang`:\n```bash\npip install --upgrade elang\n```\n\nPerforming word embeddings in **2 lines of code** gets you a visualization:\n```py\nfrom elang.plot.utils import plot2d\nfrom gensim.models import Word2Vec\n\nmodel = Word2Vec.load(\"path.to.model\")\nplot2d(model)\n# output:\n```\n\n<img width=\"60%\" src=\"https://github.com/onlyphantom/elangdev/raw/master/assets/embedding.png\">\n\nIt even looks like a soaring eagle with its outstretched wings!\n\n### Visualizing Neighbors in 2-dimensional space\n\n`elang` also includes visualization methods to help you visualize a user-defined _k_ number of neighbors to each words. When `draggable` is set to `True`, you will obtain a legend that you can move around in the resulting plot.\n\n```py\nwords = ['bca', 'hitam', 'hutan', 'pisang', 'mobil', \"cinta\", \"pejabat\", \"android\", \"kompas\"]\n\nplotNeighbours(model, \n    words, \n    method=\"TSNE\", \n    k=15,\n    draggable=True)\n```\n\n<img width=\"60%\" src=\"https://github.com/onlyphantom/elangdev/raw/master/assets/neighbors.png\">\n\n\nThe plot above plots the 15 nearest neighbors for each word in the supplied `words` argument. It then renders the plot with a draggable legend.\n\n### Scikit-Learn Compatability\nBecause the dimensionality reduction procedure is handled by the underlying `sklearn` code, you can use any of the valid [parameters](https://scikit-learn.org/stable/modules/generated/sklearn.manifold.TSNE.html) in the function call to `plot2d` and `plotNeighbours` and they will be handed off to the underlying method. Common examples are the `perplexity`, `n_iter` and `random_state` parameters:\n\n```py\nmodel = Word2Vec.load(\"path.to.model\")\nbca = model.wv.most_similar(\"bca\", topn=14)\nsimilar_bca = [w[0] for w in bca]\nplot2d(\n    model,\n    method=\"PCA\",\n    targets=similar_bca,\n    perplexity=20,\n    early_exaggeration=50,\n    n_iter=2000,\n    random_state=0,\n)\n```\n\nOutput:\n\n<img width=\"60%\" src=\"https://github.com/onlyphantom/elangdev/raw/master/assets/tsne.png\">\n\n### Building a Word2Vec model from Wikipedia\n\n```py\nfrom elang.word2vec.builder import build_from_wikipedia\n# a convenient wrapper to build_from_wikipedia_random or build_from_wikipedia_branch\nmodel1 = build_from_wikipedia(n=3, lang=\"id\")\nmodel2 = build_from_wikipedia(slug=\"Koronavirus\", lang=\"id\", levels=2)\nprint(model1)\n# returns: Word2Vec(vocab=190, size=100, alpha=0.025)\n```\n\nThe code above constructs two Word2Vec models, `model1` and `model2`. The function that constructs these models does so by building a corpus from 3 (`n`) random articles on id.wikipedia.org (`id`). The corpus can optionally be saved by passing the `save=True` argument to the function call. \n\nIn `model2`, the function starts off by looking at the article: `https://id.wikipedia.org/wiki/Koronavirus` (determined by `id` and `slug`), and then find all related articles (level 1), and subsequently all related articles to those related articles (level 2). A corpus is built using all articles it find along this search branch (`levels`).\n\n#### Building a Corpus from Wikipedia (without Word2Vec model)\n\nIf you would like to build a corpus, but not have the function _return_ a Word2Vec model, simply pass `model=False` and `save=True`. The `save` argument will create a `/corpus` directory and save the corpus in a `.txt` file. \n\n```py\nbuild_from_wikipedia(n=10, lang=\"en\", save=True)\n```\n\nThe function call above will create a Corpus from the international (english) version of Wikipedia and save it to the following file in your working directory: `corpus/wikipedia_random_10_en.txt`\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/onlyphantom/elang", "keywords": "nlp bahasa indonesia indonesian natural language corpus word2vec gensim embedding nltk", "license": "", "maintainer": "", "maintainer_email": "", "name": "elang", "package_url": "https://pypi.org/project/elang/", "platform": "", "project_url": "https://pypi.org/project/elang/", "project_urls": {"Homepage": "https://github.com/onlyphantom/elang"}, "release_url": "https://pypi.org/project/elang/0.1.1/", "requires_dist": ["gensim", "scikit-learn", "matplotlib", "tqdm", "beautifulsoup4"], "requires_python": ">=3.6", "summary": "Word Embedding(E) utilities for Language(Lang) Models", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Word Embedding utilities for Language Models</h1>\n<p><a href=\"https://badge.fury.io/py/elang\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c57f81cc287748c6979eca3b9b86e5ab46d1a4da/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f656c616e673f636f6c6f723d677265656e\"></a> <a href=\"https://pypi.python.org/pypi/elang/\" rel=\"nofollow\"><img alt=\"PyPI license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/84fdc1d10f1d89f9164daf0339d09eeca1342ed9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f456c616e673f636f6c6f723d726564\"></a> <a href=\"https://github.com/onlyphantom/elang\" rel=\"nofollow\"><img alt=\"Activity\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b7b38509aa822615bb3e6067df36b63283694b5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f6d2f6f6e6c797068616e746f6d2f656c616e67\"></a> <a href=\"https://github.com/onlyphantom/elang/graphs/commit-activity\" rel=\"nofollow\"><img alt=\"maintained\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d26c89a30c7a216b90c06752077d51e62706e999/68747470733a2f2f696d672e736869656c64732e696f2f6d61696e74656e616e63652f7965732f32303230\"></a> <a href=\"https://pypi.org/project/elang/\" rel=\"nofollow\"><img alt=\"PyPI format\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/932acb1bcb33a12c5fe841736e5dafa3249b6454/68747470733a2f2f696d672e736869656c64732e696f2f707970692f666f726d61742f656c616e67\"></a> <a href=\"https://pypi.org/project/elang/\" rel=\"nofollow\"><img alt=\"pypi downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/543fc36ac4f8a4ed3f1d26de199c3b9f90bfe4ea/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f656c616e67\"></a> <a href=\"https://elang.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f155b7f405ef4880e4bcffc834984d1a6697eade/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f656c616e672f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p>Elang is an acronym that combines the phrases <strong>Embedding (E)</strong> and <strong>Language (Lang) Models</strong>. Its goal is to help NLP (natural language processing) researchers, Word2Vec practitioners, educators and data scientists be more productive in training language models and explaining key concepts in word embeddings.</p>\n<p>Key features as of the 0.1 release can be grouped as follow:</p>\n<ul>\n<li>\n<p><strong>Corpus-building utility</strong></p>\n<ul>\n<li>[x] <code>build_from_wikipedia_random</code>: Build English / Indonesian corpus using random articles from Wikipedia</li>\n<li>[x] <code>build_from_wikipedia_branch</code>: Build English / Indonesian corpus by building a \"topic branch\" off Wikipedia</li>\n</ul>\n</li>\n<li>\n<p><strong>Text processing utility</strong></p>\n<ul>\n<li>[x] <code>remove_stopwords_id</code>: Remove stopwords (Indonesian)</li>\n<li>[x] <code>remove_region_id</code>: Remove region entity (Indonesian)</li>\n<li>[x] <code>remove_calendar_id</code>: Remove calendar words (Indonesian)</li>\n<li>[x] <code>remove_vulgarity_id</code>: Remove vulgarity (Indonesian)</li>\n</ul>\n</li>\n<li>\n<p><strong>Embedding Visualization Utility</strong> (see illustration below)</p>\n<ul>\n<li>[x] <code>plot2d</code>: 2D plot with emphasis on words of interest</li>\n<li>[x] <code>plotNeighbours</code>: 2D plot with neighbors of words</li>\n</ul>\n</li>\n</ul>\n<img align=\"left\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b3317d74997d8c955af0883efc5a74ddc1b2ccb1/68747470733a2f2f6769746875622e636f6d2f6f6e6c797068616e746f6d2f656c616e676465762f626c6f622f6d61737465722f6173736574732f656c616e675f6c696768742e706e673f7261773d74727565\" width=\"35%\">\n<h2>Elang</h2>\n<p>Elang also means \"eagle\" in Bahasa Indonesia, and the <em>elang Jawa</em> (Javan hawk-eagle) is the national bird of Indonesia, more commonly referred to as Garuda.</p>\n<p>The package provides a collection of utility functions and tools that interface with <code>gensim</code>, <code>matplotlib</code> and <code>scikit-learn</code>, as well as curated negative lists for Bahasa Indonesia (kata kasar / vulgar words, <em>stopwords</em> etc) and useful preprocesisng functions. It abstracts away the mundane task so you can train your Word2Vec model faster, and obtain visual feedback on your model more quickly.</p>\n<h1>Quick Demo</h1>\n<h3>2-d Word Embedding Visualization</h3>\n<p>Install the latest version of <code>elang</code>:</p>\n<pre>pip install --upgrade elang\n</pre>\n<p>Performing word embeddings in <strong>2 lines of code</strong> gets you a visualization:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">elang.plot.utils</span> <span class=\"kn\">import</span> <span class=\"n\">plot2d</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gensim.models</span> <span class=\"kn\">import</span> <span class=\"n\">Word2Vec</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Word2Vec</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"path.to.model\"</span><span class=\"p\">)</span>\n<span class=\"n\">plot2d</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span>\n<span class=\"c1\"># output:</span>\n</pre>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f42b93a4d9801ea80548f8073b628de3ce14931a/68747470733a2f2f6769746875622e636f6d2f6f6e6c797068616e746f6d2f656c616e676465762f7261772f6d61737465722f6173736574732f656d62656464696e672e706e67\" width=\"60%\">\n<p>It even looks like a soaring eagle with its outstretched wings!</p>\n<h3>Visualizing Neighbors in 2-dimensional space</h3>\n<p><code>elang</code> also includes visualization methods to help you visualize a user-defined <em>k</em> number of neighbors to each words. When <code>draggable</code> is set to <code>True</code>, you will obtain a legend that you can move around in the resulting plot.</p>\n<pre><span class=\"n\">words</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'bca'</span><span class=\"p\">,</span> <span class=\"s1\">'hitam'</span><span class=\"p\">,</span> <span class=\"s1\">'hutan'</span><span class=\"p\">,</span> <span class=\"s1\">'pisang'</span><span class=\"p\">,</span> <span class=\"s1\">'mobil'</span><span class=\"p\">,</span> <span class=\"s2\">\"cinta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"pejabat\"</span><span class=\"p\">,</span> <span class=\"s2\">\"android\"</span><span class=\"p\">,</span> <span class=\"s2\">\"kompas\"</span><span class=\"p\">]</span>\n\n<span class=\"n\">plotNeighbours</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> \n    <span class=\"n\">words</span><span class=\"p\">,</span> \n    <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"TSNE\"</span><span class=\"p\">,</span> \n    <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span>\n    <span class=\"n\">draggable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5048ebfb5e38f90e37f79ff6b0b3ddd1e2a3e6e5/68747470733a2f2f6769746875622e636f6d2f6f6e6c797068616e746f6d2f656c616e676465762f7261772f6d61737465722f6173736574732f6e65696768626f72732e706e67\" width=\"60%\">\n<p>The plot above plots the 15 nearest neighbors for each word in the supplied <code>words</code> argument. It then renders the plot with a draggable legend.</p>\n<h3>Scikit-Learn Compatability</h3>\n<p>Because the dimensionality reduction procedure is handled by the underlying <code>sklearn</code> code, you can use any of the valid <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.manifold.TSNE.html\" rel=\"nofollow\">parameters</a> in the function call to <code>plot2d</code> and <code>plotNeighbours</code> and they will be handed off to the underlying method. Common examples are the <code>perplexity</code>, <code>n_iter</code> and <code>random_state</code> parameters:</p>\n<pre><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Word2Vec</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"path.to.model\"</span><span class=\"p\">)</span>\n<span class=\"n\">bca</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">wv</span><span class=\"o\">.</span><span class=\"n\">most_similar</span><span class=\"p\">(</span><span class=\"s2\">\"bca\"</span><span class=\"p\">,</span> <span class=\"n\">topn</span><span class=\"o\">=</span><span class=\"mi\">14</span><span class=\"p\">)</span>\n<span class=\"n\">similar_bca</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">w</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">w</span> <span class=\"ow\">in</span> <span class=\"n\">bca</span><span class=\"p\">]</span>\n<span class=\"n\">plot2d</span><span class=\"p\">(</span>\n    <span class=\"n\">model</span><span class=\"p\">,</span>\n    <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"PCA\"</span><span class=\"p\">,</span>\n    <span class=\"n\">targets</span><span class=\"o\">=</span><span class=\"n\">similar_bca</span><span class=\"p\">,</span>\n    <span class=\"n\">perplexity</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span>\n    <span class=\"n\">early_exaggeration</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\n    <span class=\"n\">n_iter</span><span class=\"o\">=</span><span class=\"mi\">2000</span><span class=\"p\">,</span>\n    <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f744431f141851e68ce0531ee235acf600608049/68747470733a2f2f6769746875622e636f6d2f6f6e6c797068616e746f6d2f656c616e676465762f7261772f6d61737465722f6173736574732f74736e652e706e67\" width=\"60%\">\n<h3>Building a Word2Vec model from Wikipedia</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">elang.word2vec.builder</span> <span class=\"kn\">import</span> <span class=\"n\">build_from_wikipedia</span>\n<span class=\"c1\"># a convenient wrapper to build_from_wikipedia_random or build_from_wikipedia_branch</span>\n<span class=\"n\">model1</span> <span class=\"o\">=</span> <span class=\"n\">build_from_wikipedia</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">lang</span><span class=\"o\">=</span><span class=\"s2\">\"id\"</span><span class=\"p\">)</span>\n<span class=\"n\">model2</span> <span class=\"o\">=</span> <span class=\"n\">build_from_wikipedia</span><span class=\"p\">(</span><span class=\"n\">slug</span><span class=\"o\">=</span><span class=\"s2\">\"Koronavirus\"</span><span class=\"p\">,</span> <span class=\"n\">lang</span><span class=\"o\">=</span><span class=\"s2\">\"id\"</span><span class=\"p\">,</span> <span class=\"n\">levels</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model1</span><span class=\"p\">)</span>\n<span class=\"c1\"># returns: Word2Vec(vocab=190, size=100, alpha=0.025)</span>\n</pre>\n<p>The code above constructs two Word2Vec models, <code>model1</code> and <code>model2</code>. The function that constructs these models does so by building a corpus from 3 (<code>n</code>) random articles on id.wikipedia.org (<code>id</code>). The corpus can optionally be saved by passing the <code>save=True</code> argument to the function call.</p>\n<p>In <code>model2</code>, the function starts off by looking at the article: <code>https://id.wikipedia.org/wiki/Koronavirus</code> (determined by <code>id</code> and <code>slug</code>), and then find all related articles (level 1), and subsequently all related articles to those related articles (level 2). A corpus is built using all articles it find along this search branch (<code>levels</code>).</p>\n<h4>Building a Corpus from Wikipedia (without Word2Vec model)</h4>\n<p>If you would like to build a corpus, but not have the function <em>return</em> a Word2Vec model, simply pass <code>model=False</code> and <code>save=True</code>. The <code>save</code> argument will create a <code>/corpus</code> directory and save the corpus in a <code>.txt</code> file.</p>\n<pre><span class=\"n\">build_from_wikipedia</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">lang</span><span class=\"o\">=</span><span class=\"s2\">\"en\"</span><span class=\"p\">,</span> <span class=\"n\">save</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>The function call above will create a Corpus from the international (english) version of Wikipedia and save it to the following file in your working directory: <code>corpus/wikipedia_random_10_en.txt</code></p>\n\n          </div>"}, "last_serial": 6879102, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "baac03a8de21e961d9a270b1e313e81a", "sha256": "1ff8488c6ca70e951e1c62e2ebe055a91221785d6ce9f03b3b26a78970cd6693"}, "downloads": -1, "filename": "elang-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "baac03a8de21e961d9a270b1e313e81a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 346519, "upload_time": "2020-03-09T11:41:42", "upload_time_iso_8601": "2020-03-09T11:41:42.707437Z", "url": "https://files.pythonhosted.org/packages/6c/0a/9da9530a9588f43aa47c50c5e1f2360bd4eba22d40d176bd24e89786b37f/elang-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a544f08cb8a8fa2b64beec7168d5a3a", "sha256": "e485b004a0cedf8ab0b273dfa0a2764f4938ae2437b09f85c3049793ddacfa12"}, "downloads": -1, "filename": "elang-0.0.10.tar.gz", "has_sig": false, "md5_digest": "1a544f08cb8a8fa2b64beec7168d5a3a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 339564, "upload_time": "2020-03-09T11:41:45", "upload_time_iso_8601": "2020-03-09T11:41:45.044808Z", "url": "https://files.pythonhosted.org/packages/39/d1/1605ac0af0efd81e1ff94f82db6a01371cd50dbe05abb207a7e5fc18de9d/elang-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "5b1312ff1725d31e71b00130fcdcb423", "sha256": "8fc65b8a6942e0c3fb3e89d6aeaf8e9cb1b120acf65b50f624acb60c5aa2c97f"}, "downloads": -1, "filename": "elang-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "5b1312ff1725d31e71b00130fcdcb423", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 347121, "upload_time": "2020-03-16T05:15:52", "upload_time_iso_8601": "2020-03-16T05:15:52.887438Z", "url": "https://files.pythonhosted.org/packages/d8/55/8ee1aa45ffa15d768685e9098506e0c8eeef9519b3a5f53265e4664e3781/elang-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a62433cc918af4947c34f4c349997b8", "sha256": "351d13a18d9dc2584781ab6e32785ea4a0555812227f49018e34657367235882"}, "downloads": -1, "filename": "elang-0.0.11.tar.gz", "has_sig": false, "md5_digest": "5a62433cc918af4947c34f4c349997b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 339803, "upload_time": "2020-03-16T05:15:54", "upload_time_iso_8601": "2020-03-16T05:15:54.726465Z", "url": "https://files.pythonhosted.org/packages/36/99/ab959fcf18b24551590d88b12dace23d1b1df2cbd7f1e9ee520839d12e1e/elang-0.0.11.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "58eebc253f41ad4ecad49c8ac63a7087", "sha256": "25493108e81d516196edfcc08b6cfbe707ad08ad65bf959ebe1239e40fe29443"}, "downloads": -1, "filename": "elang-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "58eebc253f41ad4ecad49c8ac63a7087", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12830, "upload_time": "2020-02-04T15:24:59", "upload_time_iso_8601": "2020-02-04T15:24:59.791675Z", "url": "https://files.pythonhosted.org/packages/61/5a/27383b420fd94fb21945f78a5cc723d80bc80c8a164887501b756b935d1d/elang-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5301f57b454d3aad92b278bdbcf3bdcb", "sha256": "d992a0dfb60964913fc116d12b19df2297301a45f493ee8d30bd70effbee50f5"}, "downloads": -1, "filename": "elang-0.0.3.tar.gz", "has_sig": false, "md5_digest": "5301f57b454d3aad92b278bdbcf3bdcb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5532, "upload_time": "2020-02-04T15:25:06", "upload_time_iso_8601": "2020-02-04T15:25:06.523749Z", "url": "https://files.pythonhosted.org/packages/e9/0b/c521ef2172e324aeb3993afaf84cde98bd65c6bf4d2261f31385f80b4382/elang-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "5c0df66e69924949ba86a1f888472b55", "sha256": "66a46358bef4fb4ca4f06461e88d0aa759bd9196a4798fd0bad06271747b955e"}, "downloads": -1, "filename": "elang-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5c0df66e69924949ba86a1f888472b55", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13346, "upload_time": "2020-02-15T07:00:20", "upload_time_iso_8601": "2020-02-15T07:00:20.636273Z", "url": "https://files.pythonhosted.org/packages/45/10/f7f0e1fc7cc710c79dd17e47cc98cc4e1d84b45ba40e92b433dd80a71e59/elang-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8c736499ecc60c4b042949108d88d09", "sha256": "0b6a39a286916a025cf5854fbf1b250522ca630315a20c9dad0e215aa3d15c57"}, "downloads": -1, "filename": "elang-0.0.4.tar.gz", "has_sig": false, "md5_digest": "c8c736499ecc60c4b042949108d88d09", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6218, "upload_time": "2020-02-15T07:00:22", "upload_time_iso_8601": "2020-02-15T07:00:22.560868Z", "url": "https://files.pythonhosted.org/packages/14/0f/d363e1bb4568ecda7968282b6ecc0a13c3e8e3004ac3939334fbe74e5950/elang-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "eb07bbbe54de71877efd581dd3e3a2ce", "sha256": "c4385292a810cb95ee891b0a5b317b858705d48fbd819346570ac9b865e10e21"}, "downloads": -1, "filename": "elang-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "eb07bbbe54de71877efd581dd3e3a2ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 342585, "upload_time": "2020-02-17T07:26:47", "upload_time_iso_8601": "2020-02-17T07:26:47.934780Z", "url": "https://files.pythonhosted.org/packages/75/53/2959d61a426dec28556f06426eec9ed61704b0238e5fd2bf70a154cc268c/elang-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9918db086412b9e715c4be37a694855e", "sha256": "bde8688c28658f4d92459ede04a004e065247e1dcb571af9e6f60fc1d6ff8af3"}, "downloads": -1, "filename": "elang-0.0.5.tar.gz", "has_sig": false, "md5_digest": "9918db086412b9e715c4be37a694855e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 335863, "upload_time": "2020-02-17T07:26:49", "upload_time_iso_8601": "2020-02-17T07:26:49.947340Z", "url": "https://files.pythonhosted.org/packages/f5/54/68d5a077409a36bab2a2a7fdc047164e5a18b182d639fea59b4343dad38a/elang-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "a1e233ea985b9ff87f836620adf1071f", "sha256": "5203f5d4f1aa04297fbd4b6cccbc47beb6a71b764fe4b1be60b34eedbfca83ad"}, "downloads": -1, "filename": "elang-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a1e233ea985b9ff87f836620adf1071f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 343956, "upload_time": "2020-02-20T11:05:56", "upload_time_iso_8601": "2020-02-20T11:05:56.586923Z", "url": "https://files.pythonhosted.org/packages/cb/a6/b775fe3b298a63d9ff71585f0fca9fa451b36bc3c097b69b5b39e99bc765/elang-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b295acbafedb93e608fb6076a35e620b", "sha256": "98db1cb99e3640cc2b4274257679d1c107d0091381854746c91150350b2934b8"}, "downloads": -1, "filename": "elang-0.0.6.tar.gz", "has_sig": false, "md5_digest": "b295acbafedb93e608fb6076a35e620b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 337500, "upload_time": "2020-02-20T11:05:58", "upload_time_iso_8601": "2020-02-20T11:05:58.384313Z", "url": "https://files.pythonhosted.org/packages/5f/44/0796ce54e79818fd10da120a9acb1c35a4ae5cfbd07da20ad2b7c09da9c0/elang-0.0.6.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "53a0bbc6b2b3ad50cd09bc9fae9385fa", "sha256": "667c63a8c38b35e2f834b85585616ec22edfdcebe9c4d2122dab8a142e7fc891"}, "downloads": -1, "filename": "elang-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "53a0bbc6b2b3ad50cd09bc9fae9385fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 345558, "upload_time": "2020-02-26T09:14:43", "upload_time_iso_8601": "2020-02-26T09:14:43.539161Z", "url": "https://files.pythonhosted.org/packages/aa/7e/1a8c9d0340d46e48ab97a9d3f001cda24bba9bc77a5b07fe1a164c8c3918/elang-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e38d24036baa0206084348be496d0ed", "sha256": "c0fcd3d757cf3e2f2b97226da220d0ffd0cdeb074f84dcd216bb2a85b545e371"}, "downloads": -1, "filename": "elang-0.0.8.tar.gz", "has_sig": false, "md5_digest": "1e38d24036baa0206084348be496d0ed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 338888, "upload_time": "2020-02-26T09:14:45", "upload_time_iso_8601": "2020-02-26T09:14:45.348354Z", "url": "https://files.pythonhosted.org/packages/4f/85/dc771f0cf8294cd86bc26440903e9310755cdf0bc017b38570bf9cbeb8f9/elang-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "39ec245426c6938ba8ee2e456d701573", "sha256": "ced744688255d2f3aec3fe0fff82c1fbe46cca5eddb3122ad7f2fab37072603d"}, "downloads": -1, "filename": "elang-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "39ec245426c6938ba8ee2e456d701573", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 345335, "upload_time": "2020-02-29T04:01:10", "upload_time_iso_8601": "2020-02-29T04:01:10.956466Z", "url": "https://files.pythonhosted.org/packages/51/43/35e8e0d62fe7eb3efac775d85ba4bc90cb55878a97a6f79a63388f35d886/elang-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c462135648e7723a18197e2be521b2e4", "sha256": "8416e887ff3bfd6cf3264c96da8119dce41f687e841e5f9b26119b55d54cf6a4"}, "downloads": -1, "filename": "elang-0.0.9.tar.gz", "has_sig": false, "md5_digest": "c462135648e7723a18197e2be521b2e4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 339525, "upload_time": "2020-02-29T04:01:12", "upload_time_iso_8601": "2020-02-29T04:01:12.863554Z", "url": "https://files.pythonhosted.org/packages/77/b6/7f818dafa4d25a096d6cc358beba292d1eecd53fe0ad293e03d514a590d0/elang-0.0.9.tar.gz", "yanked": false}], "0.0.9.dev1": [{"comment_text": "", "digests": {"md5": "6dd63f90ea1777b1aa05028e101854ce", "sha256": "51509ecb5b9c4efe9e06d8b7f8c4ea34e141aa043ee1543e9b9cf2920d94fa66"}, "downloads": -1, "filename": "elang-0.0.9.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "6dd63f90ea1777b1aa05028e101854ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 346573, "upload_time": "2020-03-09T11:40:12", "upload_time_iso_8601": "2020-03-09T11:40:12.190181Z", "url": "https://files.pythonhosted.org/packages/c9/9a/719debd957c11c89d8a36af3d91418480325c8ca7b9b3bc02af38efb8376/elang-0.0.9.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68de190ce3fcb2217283765879120f13", "sha256": "7a7a28b1bba4d00001e3511cbab61fe095a8c2f9fb6d5380542a956a518cfc62"}, "downloads": -1, "filename": "elang-0.0.9.dev1.tar.gz", "has_sig": false, "md5_digest": "68de190ce3fcb2217283765879120f13", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 339579, "upload_time": "2020-03-09T11:40:13", "upload_time_iso_8601": "2020-03-09T11:40:13.657091Z", "url": "https://files.pythonhosted.org/packages/72/74/bee00d572977025dc9d0dd9f0f20b271d7c870592708cd34b215b3e4f6d8/elang-0.0.9.dev1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "c704ba3c27cd9fdb3b37a3dbef62c441", "sha256": "48cc41e841f590a234e8a97dee853ab52c2f813c83c3ca293dec28ef8ce40807"}, "downloads": -1, "filename": "elang-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c704ba3c27cd9fdb3b37a3dbef62c441", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 342238, "upload_time": "2020-03-16T10:25:00", "upload_time_iso_8601": "2020-03-16T10:25:00.781056Z", "url": "https://files.pythonhosted.org/packages/98/65/67f8d88042faa7799a2cc7f526fe0c091ec31dc2eea9a4e1f42e2e391c01/elang-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af2de2aa2f235bf8841ae23fc227a9d7", "sha256": "9c22e4ac9cfa99810c8fa6db5b3c5a10c82a0b998d6c40fc6e8338c8f8644206"}, "downloads": -1, "filename": "elang-0.1.0.tar.gz", "has_sig": false, "md5_digest": "af2de2aa2f235bf8841ae23fc227a9d7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 341029, "upload_time": "2020-03-16T10:25:02", "upload_time_iso_8601": "2020-03-16T10:25:02.745906Z", "url": "https://files.pythonhosted.org/packages/ad/56/280168ab353c63fcdf2bbde285559955afd3d5b0c5d4b2ebf0f962f8a7e9/elang-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9c13cd5d0b44e9936535925f6e2ca34a", "sha256": "3c8398f303dccdd985ea2f93b5c7cdde38a82216b8a10e6494722054d90449e9"}, "downloads": -1, "filename": "elang-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9c13cd5d0b44e9936535925f6e2ca34a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 342250, "upload_time": "2020-03-25T07:57:57", "upload_time_iso_8601": "2020-03-25T07:57:57.952901Z", "url": "https://files.pythonhosted.org/packages/20/8f/1303295011d4ce2d7fa5e0e0c821497ffc3c3a53f965bcc66b5a1c41b806/elang-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b1cfc9a51b5eb72a097aead9068f8b0", "sha256": "d8c6a82841c6f06244febad9761fa6075d87c097f13c44b10e107fa49be41c83"}, "downloads": -1, "filename": "elang-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9b1cfc9a51b5eb72a097aead9068f8b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 341047, "upload_time": "2020-03-25T07:57:59", "upload_time_iso_8601": "2020-03-25T07:57:59.872070Z", "url": "https://files.pythonhosted.org/packages/83/3a/8cc8ba3733a11969eb320116b53993db9c119c7e19ecac1dc54a5190b213/elang-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c13cd5d0b44e9936535925f6e2ca34a", "sha256": "3c8398f303dccdd985ea2f93b5c7cdde38a82216b8a10e6494722054d90449e9"}, "downloads": -1, "filename": "elang-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9c13cd5d0b44e9936535925f6e2ca34a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 342250, "upload_time": "2020-03-25T07:57:57", "upload_time_iso_8601": "2020-03-25T07:57:57.952901Z", "url": "https://files.pythonhosted.org/packages/20/8f/1303295011d4ce2d7fa5e0e0c821497ffc3c3a53f965bcc66b5a1c41b806/elang-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b1cfc9a51b5eb72a097aead9068f8b0", "sha256": "d8c6a82841c6f06244febad9761fa6075d87c097f13c44b10e107fa49be41c83"}, "downloads": -1, "filename": "elang-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9b1cfc9a51b5eb72a097aead9068f8b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 341047, "upload_time": "2020-03-25T07:57:59", "upload_time_iso_8601": "2020-03-25T07:57:59.872070Z", "url": "https://files.pythonhosted.org/packages/83/3a/8cc8ba3733a11969eb320116b53993db9c119c7e19ecac1dc54a5190b213/elang-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:08 2020"}