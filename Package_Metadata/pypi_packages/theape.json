{"info": {"author": "russell", "author_email": "necromuralist@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "The APE (Read Me)\n=================\n\n\nThe `All-Purpose Experimenter` is a plugin-based system meant to create a unified front-end for different device-related testing. \n\nInstallation\n------------\n\nIf you have the repository you can install it by using the ``setup.py`` file.\n\n.. code:: bash\n\n   python setup.py install\n\nAlternately you can pull it from Pypi.\n\n.. code:: bash\n\n   pip install theape\n\nIf you are installing it system-wide you will probably have to prefix this and other install commands with ``sudo``.\n\nDocumentation\n-------------\n\nThe APE has some online help.\n\n.. code:: bash\n\n   ape -h\n\n::\n\n    APE (the all-purpose-evaluator)\n    \n    Usage: ape -h | -v\n           ape [--debug|--silent] [--pudb|--pdb] <command> [<argument>...]\n           ape [--debug|--silent] [--trace|--callgraph] <command> [<argument>...]\n    \n    Help Options:\n    \n        -h, --help     Display this help message and quit.\n        -v, --version  Display the version number and quit.\n        \n    Logging Options:\n    \n        --debug   Set logging level to DEBUG.\n        --silent  Set logging level to ERROR.\n    \n    Debugging Options:\n    \n        --pudb       Enable the `pudb` debugger (if installed)\n        --pdb        Enable the `pdb` (python's default) debugger\n        --trace      Enable code-tracing\n        --callgraph  Create a call-graph of for the code\n    \n    Positional Arguments:\n    \n        <command>      The name of a sub-command (see below)\n        <argument>...  One or more options or arguments for the sub-command\n        \n    Available Sub-Commands:\n    \n        run    Run a plugin\n        fetch  Fetch a sample configuration-file\n        help   Display more help\n        list   List known plugins\n        check  Check a configuration\n    \n    To get help for a sub-command pass `-h` as the argument. e.g.:\n    \n        ape run -h\n    \n    \n\n\n\nInstalling Testing Dependencies\n-------------------------------\n\nThe APE is currently being tested using `behave <http://pythonhosted.org/behave/>`_ so if you want to run the tests, you'll need that, `pyhamcrest <http://pyhamcrest.readthedocs.org/en/1.8.0/>`_ and `mock <http://mock.readthedocs.org/en/latest/magicmock.html>`_. All three are on pypi so if you have pip installed you can install them from the web (if installing system wide run as root).\n\n.. code:: bash\n\n   pip install behave\n   pip install pyhamcrest\n   pip install mock", "description_content_type": null, "docs_url": "https://pythonhosted.org/theape/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "theape", "package_url": "https://pypi.org/project/theape/", "platform": "linux", "project_url": "https://pypi.org/project/theape/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/theape/2014.11.10/", "requires_dist": null, "requires_python": null, "summary": "The All-Purpose Experimenter.", "version": "2014.11.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The <cite>All-Purpose Experimenter</cite> is a plugin-based system meant to create a unified front-end for different device-related testing.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>If you have the repository you can install it by using the <tt>setup.py</tt> file.</p>\n<pre>python setup.py install\n</pre>\n<p>Alternately you can pull it from Pypi.</p>\n<pre>pip install theape\n</pre>\n<p>If you are installing it system-wide you will probably have to prefix this and other install commands with <tt>sudo</tt>.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The APE has some online help.</p>\n<pre>ape -h\n</pre>\n<pre>APE (the all-purpose-evaluator)\n\nUsage: ape -h | -v\n       ape [--debug|--silent] [--pudb|--pdb] &lt;command&gt; [&lt;argument&gt;...]\n       ape [--debug|--silent] [--trace|--callgraph] &lt;command&gt; [&lt;argument&gt;...]\n\nHelp Options:\n\n    -h, --help     Display this help message and quit.\n    -v, --version  Display the version number and quit.\n\nLogging Options:\n\n    --debug   Set logging level to DEBUG.\n    --silent  Set logging level to ERROR.\n\nDebugging Options:\n\n    --pudb       Enable the `pudb` debugger (if installed)\n    --pdb        Enable the `pdb` (python's default) debugger\n    --trace      Enable code-tracing\n    --callgraph  Create a call-graph of for the code\n\nPositional Arguments:\n\n    &lt;command&gt;      The name of a sub-command (see below)\n    &lt;argument&gt;...  One or more options or arguments for the sub-command\n\nAvailable Sub-Commands:\n\n    run    Run a plugin\n    fetch  Fetch a sample configuration-file\n    help   Display more help\n    list   List known plugins\n    check  Check a configuration\n\nTo get help for a sub-command pass `-h` as the argument. e.g.:\n\n    ape run -h\n</pre>\n</div>\n<div id=\"installing-testing-dependencies\">\n<h2>Installing Testing Dependencies</h2>\n<p>The APE is currently being tested using <a href=\"http://pythonhosted.org/behave/\" rel=\"nofollow\">behave</a> so if you want to run the tests, you\u2019ll need that, <a href=\"http://pyhamcrest.readthedocs.org/en/1.8.0/\" rel=\"nofollow\">pyhamcrest</a> and <a href=\"http://mock.readthedocs.org/en/latest/magicmock.html\" rel=\"nofollow\">mock</a>. All three are on pypi so if you have pip installed you can install them from the web (if installing system wide run as root).</p>\n<pre>pip install behave\npip install pyhamcrest\npip install mock\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1357927, "releases": {"2014.11.10": [{"comment_text": "", "digests": {"md5": "cf9f436b7611370175fc65c35fb15220", "sha256": "776abcb4c0e716ff3f5edc6b293ec65a363612a3893a336566d313a8d0681a34"}, "downloads": -1, "filename": "theape-2014.11.10.tar.gz", "has_sig": false, "md5_digest": "cf9f436b7611370175fc65c35fb15220", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86043, "upload_time": "2014-12-22T21:14:46", "upload_time_iso_8601": "2014-12-22T21:14:46.107498Z", "url": "https://files.pythonhosted.org/packages/74/b8/49f48fb6fee7dd94ff348159ec0fb57da66ed45d274c8fc9e7e0728c2e2f/theape-2014.11.10.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cf9f436b7611370175fc65c35fb15220", "sha256": "776abcb4c0e716ff3f5edc6b293ec65a363612a3893a336566d313a8d0681a34"}, "downloads": -1, "filename": "theape-2014.11.10.tar.gz", "has_sig": false, "md5_digest": "cf9f436b7611370175fc65c35fb15220", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86043, "upload_time": "2014-12-22T21:14:46", "upload_time_iso_8601": "2014-12-22T21:14:46.107498Z", "url": "https://files.pythonhosted.org/packages/74/b8/49f48fb6fee7dd94ff348159ec0fb57da66ed45d274c8fc9e7e0728c2e2f/theape-2014.11.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:08 2020"}