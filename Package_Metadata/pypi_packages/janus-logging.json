{"info": {"author": "madkote", "author_email": "madkote <madkote@bluewin.ch>", "bugtrack_url": null, "classifiers": ["Framework :: AsyncIO", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Logging", "Topic :: Utilities"], "description": "janus-logging\n=============\n.. image:: https://travis-ci.com/madkote/janus_logging.svg?branch=master\n    :target: https://travis-ci.com/madkote/janus-logging\n.. image:: https://codecov.io/gh/madkote/janus-logging/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/madkote/janus-logging\n.. image:: https://img.shields.io/pypi/v/janus_logging.svg\n    :target: https://pypi.python.org/pypi/janus-logging\n\nsync and async logging within one logger instance.\n\nInstallation\n------------\n\n.. code:: sh\n\n    pip install janus-logging\n\nUsage\n-----\n\nDefault\n~~~~~~~\n\n.. code:: python\n\n    import asyncio\n    import logging\n    import sys\n\n    import janus_logging\n\n    def threaded(sync_log, counter: int):\n        for i in range(counter):\n            sync_log.info('s-Hello #%s' % i)\n            sync_log.info('s-Finished #%s' % counter)\n\n    async def async_coro(async_log, counter: int):\n        for i in range(counter):\n            await async_log.info('aio-Hello #%s' % i)\n            await async_log.info('aio-Finished #%s' % counter)\n\n    #\n    counter = 4\n    name = 'my_janus_logger'\n    level = logging.DEBUG\n    stream = sys.stdout\n    loop = asyncio.get_event_loop()\n    #\n    logger = janus_logging.JanusLogger(name=name, level=level, loop=loop, stream=stream)\n    loop.run_until_complete(\n        asyncio.gather(\n        loop.run_in_executor(\n            None,\n            threaded,\n            logger.logger_sync(),\n            counter\n        ),\n        async_coro(\n            logger.logger_async(),\n            counter\n        )\n        )\n    )\n    logger.shutdown()\n    #\n    #\n    loop.close()\n\nThe output of above will look like:\n\n.. code:: sh\n\n    s-Hello #0\n    s-Hello #1\n    s-Hello #2\n    aio-Hello #0\n    s-Hello #3\n    s-Finished #4\n    aio-Hello #1\n    aio-Hello #2\n    aio-Hello #3\n    aio-Finished #4\n\nPlease note, that the output might be different on your instance.\n\nJSON\n~~~~\n\nSimply use *fixtures*.\n\n.. code:: python\n\n    import asyncio\n    import logging\n    import sys\n\n    import janus_logging\n\n    def threaded(sync_log, counter: int):\n        for i in range(counter):\n            sync_log.info(\n                's-Hello #%s' % i,\n                extra=dict(counter=i, log_type='sync', log_status='in progress')\n            )\n        sync_log.info(\n            's-Finished #%s' % counter,\n            extra=dict(total=counter, log_type='sync', log_status='finished')\n        )\n\n\n    async def async_coro(async_log, counter: int):\n        for i in range(counter):\n            await async_log.info(\n                'aio-Hello #%s' % i,\n                extra=dict(counter=i, log_type='async', log_status='in progress')\n            )\n        await async_log.info(\n            'aio-Finished #%s' % counter,\n            extra=dict(total=counter, log_type='async', log_status='finished')\n        )\n\n    #\n    counter = 4\n    name = 'my_janus_logger'\n    level = logging.DEBUG\n    stream = sys.stdout\n    loop = asyncio.get_event_loop()\n    #\n    logger = janus_logging.JanusLogger(\n        name=name,\n        level=level,\n        loop=loop,\n        fixture=janus_logging.fixture_json,\n        stream=stream,\n        extra=dict(bla='blabla')\n    )\n    loop.run_until_complete(\n        asyncio.gather(\n            loop.run_in_executor(\n                None,\n                threaded,\n                logger.logger_sync(logger_name='logger_sync'),\n                counter\n            ),\n            async_coro(\n                logger.logger_async(logger_name='logger_async'),\n                counter\n            )\n        )\n    )\n    logger.shutdown()\n    #\n    #\n    loop.close()\n\nThe output of above will look like:\n\n.. code:: sh\n\n    {\"level\": \"INFO\", \"msg\": \"s-Hello #0\", \"log_type\": \"sync\", \"bla\": \"blabla\", \"logger_name\": \"logger_sync\", \"counter\": 0, \"log_status\": \"in progress\", \"logged_at\": \"2019-09-27T12:00:02.517101+02:00\", \"line_numer\": 35, \"function\": \"threaded\", \"file_path\": \"demo_janus_log.py\"}\n    {\"level\": \"INFO\", \"msg\": \"aio-Hello #1\", \"log_type\": \"async\", \"logged_at\": \"2019-09-27T12:00:02.518000+02:00\", \"line_number\": 60, \"function\": \"info\", \"file_path\": \"/home/madkote/janus-logging/janus_logging/__init__.py\", \"bla\": \"blabla\", \"logger_name\": \"logger_async\", \"counter\": 1, \"log_status\": \"in progress\"}\n    ...\n\nCustom\n~~~~~~\n\nIf a custom logger, formatter, handler are required, then create custom\n*fixtures* and pass them to the ``JanusLogger``.\n\n.. code:: python\n\n    def fixture_custom(\n    \t\tname: str,\n    \t\tlevel: int,\n    \t\tloop: loop: asyncio.AbstractEventLoop,\n    \t\t**kwargs\n    \t\t) -> logging.Logger:\n        ...\n        return ...\n\n    logger = janus_logging.JanusLogger(\n        ...,\n        fixture=fixture_custom,\n        ...\n    )\n\nDevelopment\n-----------\n\nIssues and suggestions are welcome through *issues*\n\n\nChanges\n=======\n\n1.3.1 (2020-02-05)\n------------------\n\n- Cleanup\n- add missing parameter for `formatter`\n\n\n1.3.0 (2020-01-31)\n------------------\n\n- Cleanup\n- Fix duplicate handlers\n\n\n1.2.1 (2019-11-19)\n------------------\n\n- Fix `shutdown()`\n\n\n1.2.0 (2019-10-04)\n------------------\n\n- `Executor` based `AsyncLoggerAdapter` due to issues with `aiologger==0.4.0`\n\n\n1.1.1 (2019-10-01)\n------------------\n\n- Fix `SyncJsonFormatter`\n\n\n1.1.0 (2019-09-27)\n------------------\n\n- Add `AsyncNullHandler`\n\n\n\n1.0.0 (2019-09-27)\n------------------\n\n- Initial release\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/madkote/janus-logging/archive/1.3.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/madkote/janus-logging", "keywords": "async,logging,log,json,asyncio,output", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "janus-logging", "package_url": "https://pypi.org/project/janus-logging/", "platform": "any", "project_url": "https://pypi.org/project/janus-logging/", "project_urls": {"Download": "https://github.com/madkote/janus-logging/archive/1.3.1.tar.gz", "Homepage": "https://github.com/madkote/janus-logging"}, "release_url": "https://pypi.org/project/janus-logging/1.3.1/", "requires_dist": ["aiologger (==0.5.*)", "uvloop (==0.14.*) ; extra == 'dev'", "uvloop (==0.14.*) ; extra == 'test'", "bandit ; extra == 'test'", "flake8 ; extra == 'test'", "pytest ; extra == 'test'", "pytest-cov ; extra == 'test'", "tox ; extra == 'test'"], "requires_python": ">=3.6.0", "summary": "sync and async logging within one logger instance", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"janus-logging\">\n<h2>janus-logging</h2>\n<a href=\"https://travis-ci.com/madkote/janus-logging\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/madkote/janus_logging.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4a7e749440b08c28907f0f5246ebd2b336e3d56/68747470733a2f2f7472617669732d63692e636f6d2f6d61646b6f74652f6a616e75735f6c6f6767696e672e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/madkote/janus-logging\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/madkote/janus-logging/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aacd2fe769dfebe0fe1ba41f5c759f133b835d7a/68747470733a2f2f636f6465636f762e696f2f67682f6d61646b6f74652f6a616e75732d6c6f6767696e672f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/janus-logging\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/janus_logging.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70d8c8c0569b69d8aaf64c32986f2fadd4f34239/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6a616e75735f6c6f6767696e672e737667\"></a>\n<p>sync and async logging within one logger instance.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>pip install janus-logging\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<div id=\"default\">\n<h4>Default</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">janus_logging</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">threaded</span><span class=\"p\">(</span><span class=\"n\">sync_log</span><span class=\"p\">,</span> <span class=\"n\">counter</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">counter</span><span class=\"p\">):</span>\n        <span class=\"n\">sync_log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'s-Hello #</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"n\">sync_log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'s-Finished #</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">counter</span><span class=\"p\">)</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">async_coro</span><span class=\"p\">(</span><span class=\"n\">async_log</span><span class=\"p\">,</span> <span class=\"n\">counter</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">counter</span><span class=\"p\">):</span>\n        <span class=\"k\">await</span> <span class=\"n\">async_log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'aio-Hello #</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"k\">await</span> <span class=\"n\">async_log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'aio-Finished #</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">counter</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#</span>\n<span class=\"n\">counter</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'my_janus_logger'</span>\n<span class=\"n\">level</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span>\n<span class=\"n\">stream</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span>\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"c1\">#</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">janus_logging</span><span class=\"o\">.</span><span class=\"n\">JanusLogger</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">level</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">,</span> <span class=\"n\">stream</span><span class=\"o\">=</span><span class=\"n\">stream</span><span class=\"p\">)</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span>\n    <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">gather</span><span class=\"p\">(</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_in_executor</span><span class=\"p\">(</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">threaded</span><span class=\"p\">,</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">logger_sync</span><span class=\"p\">(),</span>\n        <span class=\"n\">counter</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">async_coro</span><span class=\"p\">(</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">logger_async</span><span class=\"p\">(),</span>\n        <span class=\"n\">counter</span>\n    <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">shutdown</span><span class=\"p\">()</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<p>The output of above will look like:</p>\n<pre>s-Hello <span class=\"c1\">#0\n</span>s-Hello <span class=\"c1\">#1\n</span>s-Hello <span class=\"c1\">#2\n</span>aio-Hello <span class=\"c1\">#0\n</span>s-Hello <span class=\"c1\">#3\n</span>s-Finished <span class=\"c1\">#4\n</span>aio-Hello <span class=\"c1\">#1\n</span>aio-Hello <span class=\"c1\">#2\n</span>aio-Hello <span class=\"c1\">#3\n</span>aio-Finished <span class=\"c1\">#4</span>\n</pre>\n<p>Please note, that the output might be different on your instance.</p>\n</div>\n<div id=\"json\">\n<h4>JSON</h4>\n<p>Simply use <em>fixtures</em>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">janus_logging</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">threaded</span><span class=\"p\">(</span><span class=\"n\">sync_log</span><span class=\"p\">,</span> <span class=\"n\">counter</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">counter</span><span class=\"p\">):</span>\n        <span class=\"n\">sync_log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n            <span class=\"s1\">'s-Hello #</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">i</span><span class=\"p\">,</span>\n            <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">counter</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">log_type</span><span class=\"o\">=</span><span class=\"s1\">'sync'</span><span class=\"p\">,</span> <span class=\"n\">log_status</span><span class=\"o\">=</span><span class=\"s1\">'in progress'</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n    <span class=\"n\">sync_log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n        <span class=\"s1\">'s-Finished #</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">counter</span><span class=\"p\">,</span>\n        <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">total</span><span class=\"o\">=</span><span class=\"n\">counter</span><span class=\"p\">,</span> <span class=\"n\">log_type</span><span class=\"o\">=</span><span class=\"s1\">'sync'</span><span class=\"p\">,</span> <span class=\"n\">log_status</span><span class=\"o\">=</span><span class=\"s1\">'finished'</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">async_coro</span><span class=\"p\">(</span><span class=\"n\">async_log</span><span class=\"p\">,</span> <span class=\"n\">counter</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">counter</span><span class=\"p\">):</span>\n        <span class=\"k\">await</span> <span class=\"n\">async_log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n            <span class=\"s1\">'aio-Hello #</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">i</span><span class=\"p\">,</span>\n            <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">counter</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">log_type</span><span class=\"o\">=</span><span class=\"s1\">'async'</span><span class=\"p\">,</span> <span class=\"n\">log_status</span><span class=\"o\">=</span><span class=\"s1\">'in progress'</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">async_log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n        <span class=\"s1\">'aio-Finished #</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">counter</span><span class=\"p\">,</span>\n        <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">total</span><span class=\"o\">=</span><span class=\"n\">counter</span><span class=\"p\">,</span> <span class=\"n\">log_type</span><span class=\"o\">=</span><span class=\"s1\">'async'</span><span class=\"p\">,</span> <span class=\"n\">log_status</span><span class=\"o\">=</span><span class=\"s1\">'finished'</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n<span class=\"c1\">#</span>\n<span class=\"n\">counter</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'my_janus_logger'</span>\n<span class=\"n\">level</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span>\n<span class=\"n\">stream</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span>\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"c1\">#</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">janus_logging</span><span class=\"o\">.</span><span class=\"n\">JanusLogger</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n    <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">level</span><span class=\"p\">,</span>\n    <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">,</span>\n    <span class=\"n\">fixture</span><span class=\"o\">=</span><span class=\"n\">janus_logging</span><span class=\"o\">.</span><span class=\"n\">fixture_json</span><span class=\"p\">,</span>\n    <span class=\"n\">stream</span><span class=\"o\">=</span><span class=\"n\">stream</span><span class=\"p\">,</span>\n    <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">bla</span><span class=\"o\">=</span><span class=\"s1\">'blabla'</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span>\n    <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">gather</span><span class=\"p\">(</span>\n        <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_in_executor</span><span class=\"p\">(</span>\n            <span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"n\">threaded</span><span class=\"p\">,</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">logger_sync</span><span class=\"p\">(</span><span class=\"n\">logger_name</span><span class=\"o\">=</span><span class=\"s1\">'logger_sync'</span><span class=\"p\">),</span>\n            <span class=\"n\">counter</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">async_coro</span><span class=\"p\">(</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">logger_async</span><span class=\"p\">(</span><span class=\"n\">logger_name</span><span class=\"o\">=</span><span class=\"s1\">'logger_async'</span><span class=\"p\">),</span>\n            <span class=\"n\">counter</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">shutdown</span><span class=\"p\">()</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<p>The output of above will look like:</p>\n<pre><span class=\"o\">{</span><span class=\"s2\">\"level\"</span>: <span class=\"s2\">\"INFO\"</span>, <span class=\"s2\">\"msg\"</span>: <span class=\"s2\">\"s-Hello #0\"</span>, <span class=\"s2\">\"log_type\"</span>: <span class=\"s2\">\"sync\"</span>, <span class=\"s2\">\"bla\"</span>: <span class=\"s2\">\"blabla\"</span>, <span class=\"s2\">\"logger_name\"</span>: <span class=\"s2\">\"logger_sync\"</span>, <span class=\"s2\">\"counter\"</span>: <span class=\"m\">0</span>, <span class=\"s2\">\"log_status\"</span>: <span class=\"s2\">\"in progress\"</span>, <span class=\"s2\">\"logged_at\"</span>: <span class=\"s2\">\"2019-09-27T12:00:02.517101+02:00\"</span>, <span class=\"s2\">\"line_numer\"</span>: <span class=\"m\">35</span>, <span class=\"s2\">\"function\"</span>: <span class=\"s2\">\"threaded\"</span>, <span class=\"s2\">\"file_path\"</span>: <span class=\"s2\">\"demo_janus_log.py\"</span><span class=\"o\">}</span>\n<span class=\"o\">{</span><span class=\"s2\">\"level\"</span>: <span class=\"s2\">\"INFO\"</span>, <span class=\"s2\">\"msg\"</span>: <span class=\"s2\">\"aio-Hello #1\"</span>, <span class=\"s2\">\"log_type\"</span>: <span class=\"s2\">\"async\"</span>, <span class=\"s2\">\"logged_at\"</span>: <span class=\"s2\">\"2019-09-27T12:00:02.518000+02:00\"</span>, <span class=\"s2\">\"line_number\"</span>: <span class=\"m\">60</span>, <span class=\"s2\">\"function\"</span>: <span class=\"s2\">\"info\"</span>, <span class=\"s2\">\"file_path\"</span>: <span class=\"s2\">\"/home/madkote/janus-logging/janus_logging/__init__.py\"</span>, <span class=\"s2\">\"bla\"</span>: <span class=\"s2\">\"blabla\"</span>, <span class=\"s2\">\"logger_name\"</span>: <span class=\"s2\">\"logger_async\"</span>, <span class=\"s2\">\"counter\"</span>: <span class=\"m\">1</span>, <span class=\"s2\">\"log_status\"</span>: <span class=\"s2\">\"in progress\"</span><span class=\"o\">}</span>\n...\n</pre>\n</div>\n<div id=\"custom\">\n<h4>Custom</h4>\n<p>If a custom logger, formatter, handler are required, then create custom\n<em>fixtures</em> and pass them to the <tt>JanusLogger</tt>.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">fixture_custom</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n            <span class=\"n\">level</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span>\n            <span class=\"n\">loop</span><span class=\"p\">:</span> <span class=\"n\">loop</span><span class=\"p\">:</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">AbstractEventLoop</span><span class=\"p\">,</span>\n            <span class=\"o\">**</span><span class=\"n\">kwargs</span>\n            <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">Logger</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n    <span class=\"k\">return</span> <span class=\"o\">...</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">janus_logging</span><span class=\"o\">.</span><span class=\"n\">JanusLogger</span><span class=\"p\">(</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"n\">fixture</span><span class=\"o\">=</span><span class=\"n\">fixture_custom</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"development\">\n<h3>Development</h3>\n<p>Issues and suggestions are welcome through <em>issues</em></p>\n</div>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"id1\">\n<h3>1.3.1 (2020-02-05)</h3>\n<ul>\n<li>Cleanup</li>\n<li>add missing parameter for <cite>formatter</cite></li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.3.0 (2020-01-31)</h3>\n<ul>\n<li>Cleanup</li>\n<li>Fix duplicate handlers</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.2.1 (2019-11-19)</h3>\n<ul>\n<li>Fix <cite>shutdown()</cite></li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.2.0 (2019-10-04)</h3>\n<ul>\n<li><cite>Executor</cite> based <cite>AsyncLoggerAdapter</cite> due to issues with <cite>aiologger==0.4.0</cite></li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.1.1 (2019-10-01)</h3>\n<ul>\n<li>Fix <cite>SyncJsonFormatter</cite></li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.1.0 (2019-09-27)</h3>\n<ul>\n<li>Add <cite>AsyncNullHandler</cite></li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.0.0 (2019-09-27)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6575430, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "fd3383afd47262ccdd00ba59105fe6c2", "sha256": "57b3f1ea505ff2384e3dc3c172b3dc3c4c797ab7cf4c85b61e052840a319afca"}, "downloads": -1, "filename": "janus_logging-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fd3383afd47262ccdd00ba59105fe6c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 6390, "upload_time": "2019-09-27T13:18:03", "upload_time_iso_8601": "2019-09-27T13:18:03.252250Z", "url": "https://files.pythonhosted.org/packages/25/cd/124e5b104c8e5cf92b39ec3fefc3c5c07142ab89a8094d3216a042e2e097/janus_logging-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ad736897e5917e399544e7e8c69f7a6", "sha256": "15cd6eb6485353c8395c828708176dddc5ebe752b027edbcf16321c056a782ba"}, "downloads": -1, "filename": "janus-logging-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7ad736897e5917e399544e7e8c69f7a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 6667, "upload_time": "2019-09-27T13:18:05", "upload_time_iso_8601": "2019-09-27T13:18:05.648799Z", "url": "https://files.pythonhosted.org/packages/f5/49/462b56d21d48e367177a133e6aee48eaaf69fc17c503c17ad33e40549dab/janus-logging-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "d3b38af148562a7fa745f43426933889", "sha256": "9512af0174914f1c8d05af47cad503b34c9809c7d0fe4fbb27c6d4293c5564fc"}, "downloads": -1, "filename": "janus_logging-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d3b38af148562a7fa745f43426933889", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 6677, "upload_time": "2019-09-27T15:38:20", "upload_time_iso_8601": "2019-09-27T15:38:20.047413Z", "url": "https://files.pythonhosted.org/packages/6e/01/94349a62e5b7eb6a0fed6094385b43551a7eeae0f2fb2c256aa2d530e6cf/janus_logging-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dfe4fb5de8dc62433558ddbe33f8228", "sha256": "9871ccb23cea34ccff43fa9fd163c6d0cd7db6500aad8ceeebcd6f8b1e585bbf"}, "downloads": -1, "filename": "janus-logging-1.1.0.tar.gz", "has_sig": false, "md5_digest": "6dfe4fb5de8dc62433558ddbe33f8228", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 6967, "upload_time": "2019-09-27T15:38:22", "upload_time_iso_8601": "2019-09-27T15:38:22.253227Z", "url": "https://files.pythonhosted.org/packages/eb/f4/76017d575115f982529521d23506695ba1a16bf1abad2a00acbcdc0edc9c/janus-logging-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "54e98406a96612c9368c6ce0ef8da839", "sha256": "17534c1466affe86fe90944fd908a65950c97a4f18ab323f746f9c659b7bd648"}, "downloads": -1, "filename": "janus_logging-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "54e98406a96612c9368c6ce0ef8da839", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 6702, "upload_time": "2019-10-01T21:23:34", "upload_time_iso_8601": "2019-10-01T21:23:34.267446Z", "url": "https://files.pythonhosted.org/packages/66/f3/5e7c19f22e2896fbbc9b76be82493800427d68b5ca83636ea100d4ab2888/janus_logging-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bcb45360b46e0af4f3cdb880c1ca9af1", "sha256": "3baa322b9f73898d8375220f15dd95a77cfd07a403921ea632f944ff0611a071"}, "downloads": -1, "filename": "janus-logging-1.1.1.tar.gz", "has_sig": false, "md5_digest": "bcb45360b46e0af4f3cdb880c1ca9af1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 7009, "upload_time": "2019-10-01T21:23:36", "upload_time_iso_8601": "2019-10-01T21:23:36.234715Z", "url": "https://files.pythonhosted.org/packages/1d/27/620ab0726a27fd5d329f48e8121917fda9b890c5ed120fc72fd94d22352b/janus-logging-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "58c964536da1d563314c59f6929570db", "sha256": "56a39fff74e8b1d667716457150da6b7fc266c16692fe8d1685f8d57e9e211cb"}, "downloads": -1, "filename": "janus_logging-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "58c964536da1d563314c59f6929570db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 7563, "upload_time": "2019-10-04T14:39:01", "upload_time_iso_8601": "2019-10-04T14:39:01.137894Z", "url": "https://files.pythonhosted.org/packages/af/47/b446c49c6c09355afd26a67b6ffacd6bc5f4f4ab692d03e9c7c9d8a7270c/janus_logging-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8180310b920f46788724f2c7b3bca0d8", "sha256": "54a0f275b96117f4db2fa9f3c15793fc38005bb4eae210d32b2e52d9af98a9b7"}, "downloads": -1, "filename": "janus-logging-1.2.0.tar.gz", "has_sig": false, "md5_digest": "8180310b920f46788724f2c7b3bca0d8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 8731, "upload_time": "2019-10-04T14:39:03", "upload_time_iso_8601": "2019-10-04T14:39:03.520226Z", "url": "https://files.pythonhosted.org/packages/c3/a9/73d78b70fd378cb6f7068b905d6ffa383c02775fed0228d5cc234acd0ee9/janus-logging-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "a68e6d102b1086c0ae0b3780a7e7facc", "sha256": "d0cf850504b5c370f7f97dfd93edd17f040f96b7b056d435cc35bb308aef36d2"}, "downloads": -1, "filename": "janus_logging-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a68e6d102b1086c0ae0b3780a7e7facc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 7589, "upload_time": "2019-11-19T10:22:26", "upload_time_iso_8601": "2019-11-19T10:22:26.279479Z", "url": "https://files.pythonhosted.org/packages/77/d9/c5422a7cd28f835d6e0ca4c0c1d3ef0105151d9031a667258e4059f6debe/janus_logging-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92fd5dcfd5348b33d108ddecebb020eb", "sha256": "e85b400efe6cc5426adf8bb4cb5a5ed32efd67ce711bcbf10adfed3259b0a528"}, "downloads": -1, "filename": "janus-logging-1.2.1.tar.gz", "has_sig": false, "md5_digest": "92fd5dcfd5348b33d108ddecebb020eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 8788, "upload_time": "2019-11-19T10:22:28", "upload_time_iso_8601": "2019-11-19T10:22:28.247497Z", "url": "https://files.pythonhosted.org/packages/df/66/6d6d5379c4b03f779a32585a6c4173ed0cfd15e8a8b403e5890c278f4ba1/janus-logging-1.2.1.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "3d86178a814da2f8b21dd8e10c94da8d", "sha256": "2f87159668edf4837ad125da66b26920791c174e4e749ab4c27448bcb5889536"}, "downloads": -1, "filename": "janus_logging-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3d86178a814da2f8b21dd8e10c94da8d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 7917, "upload_time": "2020-02-03T14:57:14", "upload_time_iso_8601": "2020-02-03T14:57:14.535668Z", "url": "https://files.pythonhosted.org/packages/42/b7/967dc1e8e07ba5bdeb0aec4b2609702fa139116d4f612abb2e68f0809dea/janus_logging-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "301d21604fda0a45b12feafc5dae8af5", "sha256": "e36eecc35fdccee88141c290aef443f40817f714a15bd48ef3dd409afe4d5acd"}, "downloads": -1, "filename": "janus-logging-1.3.0.tar.gz", "has_sig": false, "md5_digest": "301d21604fda0a45b12feafc5dae8af5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 8301, "upload_time": "2020-02-03T14:57:16", "upload_time_iso_8601": "2020-02-03T14:57:16.988199Z", "url": "https://files.pythonhosted.org/packages/71/b6/a5aa455cabba866861dd26c554c8c37b93d03ded59d834320da26e6a6369/janus-logging-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "0dca0f0c42e4d267efb035f6721434f8", "sha256": "376d269c627e1fc260220894985f3231a1c42e98ffe96d8df7a4f89a2400cf4d"}, "downloads": -1, "filename": "janus_logging-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0dca0f0c42e4d267efb035f6721434f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 7966, "upload_time": "2020-02-05T11:21:28", "upload_time_iso_8601": "2020-02-05T11:21:28.288034Z", "url": "https://files.pythonhosted.org/packages/a9/88/5fa1862d9d8ca81616f24e3d0c11f2e0edf42e470c88111da467f19f927e/janus_logging-1.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5859294e6b7ef807d33b791bcb2982a7", "sha256": "07b3bb0f517b42a7054287297479154acfbe9eb75279caa22b3823c9ccf264a7"}, "downloads": -1, "filename": "janus-logging-1.3.1.tar.gz", "has_sig": false, "md5_digest": "5859294e6b7ef807d33b791bcb2982a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 8369, "upload_time": "2020-02-05T11:21:29", "upload_time_iso_8601": "2020-02-05T11:21:29.858781Z", "url": "https://files.pythonhosted.org/packages/9d/78/68e14f8aa562dc1437d63edd631a6621f4ebfa11f6d0446609c1756a4441/janus-logging-1.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0dca0f0c42e4d267efb035f6721434f8", "sha256": "376d269c627e1fc260220894985f3231a1c42e98ffe96d8df7a4f89a2400cf4d"}, "downloads": -1, "filename": "janus_logging-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0dca0f0c42e4d267efb035f6721434f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 7966, "upload_time": "2020-02-05T11:21:28", "upload_time_iso_8601": "2020-02-05T11:21:28.288034Z", "url": "https://files.pythonhosted.org/packages/a9/88/5fa1862d9d8ca81616f24e3d0c11f2e0edf42e470c88111da467f19f927e/janus_logging-1.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5859294e6b7ef807d33b791bcb2982a7", "sha256": "07b3bb0f517b42a7054287297479154acfbe9eb75279caa22b3823c9ccf264a7"}, "downloads": -1, "filename": "janus-logging-1.3.1.tar.gz", "has_sig": false, "md5_digest": "5859294e6b7ef807d33b791bcb2982a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 8369, "upload_time": "2020-02-05T11:21:29", "upload_time_iso_8601": "2020-02-05T11:21:29.858781Z", "url": "https://files.pythonhosted.org/packages/9d/78/68e14f8aa562dc1437d63edd631a6621f4ebfa11f6d0446609c1756a4441/janus-logging-1.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:14 2020"}