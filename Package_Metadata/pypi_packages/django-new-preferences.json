{"info": {"author": "Praekelt Consulting", "author_email": "dev@praekelt.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "Django Preferences\n==================\n**Django app allowing users to set app specific preferences through the admin interface.**\n\nProvides singleton admin views for Preferences objects and a simple interface to preference values.\nSingleton views ensure only one preference intance per site is available for each ``Preferences`` class.\n\n.. note::\n\n    django-new-preferences requires and supports `Django's \"sites\" framework <https://docs.djangoproject.com/en/dev/ref/contrib/sites/>`_, which means you can have multiple preferences, each associated with a particular site.\n\n.. note::\n\n    django-new-preferences version 0.0.5 and higher requires Django 1.3 and higher for correct operation. If you are getting the super vague ``Error: cannot import name receiver`` error on startup either update to Django 1.3 or use django-new-preferences version 0.0.4 or earlier.\n\n.. contents:: Contents\n    :depth: 5\n\nInstallation\n------------\n\n#. Install or add ``django-new-preferences`` to your Python path.\n\n#. Add ``preferences`` to your ``INSTALLED APPS`` setting.\n\n#. Add ``django.contrib.sites`` to your ``INSTALLED APPS`` setting. django-new-preferences associates preferences to specific sites and thus requires Django's \"sites\" framework to be installed.\n\n#. Optionally, add ``preferences.context_processors.preferences_cp`` to your template context processors settings. This will automatically add a ``preferences`` variable to your template context::\n\n    TEMPLATE_CONTEXT_PROCESSORS = (\n        ...other context processors...,\n        \"preferences.context_processors.preferences_cp\",\n    )\n\nUsage\n-----\nTo create preferences for your app create a Django ORM model as usual, with the model inheriting from ``preferences.models.Preferences``. Also specify ``preferences.models`` as your model's module::\n\n    from django.db import models\n    from preferences.models import Preferences\n\n    class MyPreferences(Preferences):\n        portal_contact_email = models.EmailField()\n\nAdmin classes are specified as per usual, except that they have to inherit from or be registered with ``preferences.admin.PreferencesAdmin``, i.e.::\n\n    from django.contrib import admin\n\n    from preferences.admin import PreferencesAdmin\n    from <my_app>.models import MyPreferences\n\n    admin.site.register(MyPreferences, PreferencesAdmin)\n\nWhen your model is registered with admin it will show up under the *Preferences* app label in Django admin.\n\nPreferences can be accessed in Python by importing the ``preferences`` module and traversing to your required preference in the form ``preferences.<ModelName>.<field>``, i.e.::\n\n    from preferences import preferences\n\n    portal_contact_email = preferences.MyPreferences.portal_contact_email\n\nIf you've specified the ``preferences.context_processors.preferences_cp`` as a `TEMPLATE_CONTEXT_PROCESSORS <https://docs.djangoproject.com/en/dev/ref/settings/#std:setting-TEMPLATE_CONTEXT_PROCESSORS>`_ you can similarly access your preferences within templates through the ``preferences`` variable, i.e.::\n\n    {{ preferences.MyPreferences.portal_contact_email }}\n\nAuthors\n=======\n\nPraekelt Consulting\n-------------------\n* Shaun Sephton\n* Euan Jonker\n* Hedley Roos\n\nChangelog\n=========\n\nnext\n----\n#. Django 2 and Python 3.5 compatibility. Django 1.9 is no longer supported.\n\n0.2\n---\n#. Move to tox for tests.\n#. Django 1.9 to 1.11 support. The official minimum supported version is 1.9.\n\n0.1\n---\n#. Cleanup and fixing of tests courtesy of senyor.\n#. Rewrite distinct query so it works with Oracle backend.\n\n0.0.6\n-----\n#. Better packaging.\n\n0.0.5 (2011-08-17)\n------------------\n#. Added sites support.\n#. Added unittests.\n\n0.0.4 (2011-08-11)\n------------------\n#. Cleanup. Docs polish.\n\n0.0.3\n-----\n#. Spelling correction, thanks tiktuk.\n\n0.0.2\n-----\n#. Doc update to indicate importance of placing url include before admin url include.\n\n0.0.1\n-----\n#. First super alpha release.\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/praekelt/django-new-preferences", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "django-new-preferences", "package_url": "https://pypi.org/project/django-new-preferences/", "platform": "", "project_url": "https://pypi.org/project/django-new-preferences/", "project_urls": {"Homepage": "http://github.com/praekelt/django-new-preferences"}, "release_url": "https://pypi.org/project/django-new-preferences/0.2/", "requires_dist": ["django"], "requires_python": "", "summary": "Django app allowing users to set app specific preferences through the admin interface.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-preferences\">\n<h2><a href=\"#id9\" rel=\"nofollow\">Django Preferences</a></h2>\n<p><strong>Django app allowing users to set app specific preferences through the admin interface.</strong></p>\n<p>Provides singleton admin views for Preferences objects and a simple interface to preference values.\nSingleton views ensure only one preference intance per site is available for each <tt>Preferences</tt> class.</p>\n<div>\n<p>Note</p>\n<p>django-new-preferences requires and supports <a href=\"https://docs.djangoproject.com/en/dev/ref/contrib/sites/\" rel=\"nofollow\">Django\u2019s \u201csites\u201d framework</a>, which means you can have multiple preferences, each associated with a particular site.</p>\n</div>\n<div>\n<p>Note</p>\n<p>django-new-preferences version 0.0.5 and higher requires Django 1.3 and higher for correct operation. If you are getting the super vague <tt>Error: cannot import name receiver</tt> error on startup either update to Django 1.3 or use django-new-preferences version 0.0.4 or earlier.</p>\n</div>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#django-preferences\" id=\"id9\" rel=\"nofollow\">Django Preferences</a><ul>\n<li><a href=\"#installation\" id=\"id10\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" id=\"id11\" rel=\"nofollow\">Usage</a></li>\n</ul>\n</li>\n<li><a href=\"#authors\" id=\"id12\" rel=\"nofollow\">Authors</a></li>\n<li><a href=\"#changelog\" id=\"id13\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#next\" id=\"id14\" rel=\"nofollow\">next</a></li>\n<li><a href=\"#id1\" id=\"id15\" rel=\"nofollow\">0.2</a></li>\n<li><a href=\"#id2\" id=\"id16\" rel=\"nofollow\">0.1</a></li>\n<li><a href=\"#id3\" id=\"id17\" rel=\"nofollow\">0.0.6</a></li>\n<li><a href=\"#id4\" id=\"id18\" rel=\"nofollow\">0.0.5 (2011-08-17)</a></li>\n<li><a href=\"#id5\" id=\"id19\" rel=\"nofollow\">0.0.4 (2011-08-11)</a></li>\n<li><a href=\"#id6\" id=\"id20\" rel=\"nofollow\">0.0.3</a></li>\n<li><a href=\"#id7\" id=\"id21\" rel=\"nofollow\">0.0.2</a></li>\n<li><a href=\"#id8\" id=\"id22\" rel=\"nofollow\">0.0.1</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Installation</a></h3>\n<ol>\n<li><p>Install or add <tt><span class=\"pre\">django-new-preferences</span></tt> to your Python path.</p>\n</li>\n<li><p>Add <tt>preferences</tt> to your <tt>INSTALLED APPS</tt> setting.</p>\n</li>\n<li><p>Add <tt>django.contrib.sites</tt> to your <tt>INSTALLED APPS</tt> setting. django-new-preferences associates preferences to specific sites and thus requires Django\u2019s \u201csites\u201d framework to be installed.</p>\n</li>\n<li><p>Optionally, add <tt>preferences.context_processors.preferences_cp</tt> to your template context processors settings. This will automatically add a <tt>preferences</tt> variable to your template context:</p>\n<pre>TEMPLATE_CONTEXT_PROCESSORS = (\n    ...other context processors...,\n    \"preferences.context_processors.preferences_cp\",\n)\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h3><a href=\"#id11\" rel=\"nofollow\">Usage</a></h3>\n<p>To create preferences for your app create a Django ORM model as usual, with the model inheriting from <tt>preferences.models.Preferences</tt>. Also specify <tt>preferences.models</tt> as your model\u2019s module:</p>\n<pre>from django.db import models\nfrom preferences.models import Preferences\n\nclass MyPreferences(Preferences):\n    portal_contact_email = models.EmailField()\n</pre>\n<p>Admin classes are specified as per usual, except that they have to inherit from or be registered with <tt>preferences.admin.PreferencesAdmin</tt>, i.e.:</p>\n<pre>from django.contrib import admin\n\nfrom preferences.admin import PreferencesAdmin\nfrom &lt;my_app&gt;.models import MyPreferences\n\nadmin.site.register(MyPreferences, PreferencesAdmin)\n</pre>\n<p>When your model is registered with admin it will show up under the <em>Preferences</em> app label in Django admin.</p>\n<p>Preferences can be accessed in Python by importing the <tt>preferences</tt> module and traversing to your required preference in the form <tt><span class=\"pre\">preferences.&lt;ModelName&gt;.&lt;field&gt;</span></tt>, i.e.:</p>\n<pre>from preferences import preferences\n\nportal_contact_email = preferences.MyPreferences.portal_contact_email\n</pre>\n<p>If you\u2019ve specified the <tt>preferences.context_processors.preferences_cp</tt> as a <a href=\"https://docs.djangoproject.com/en/dev/ref/settings/#std:setting-TEMPLATE_CONTEXT_PROCESSORS\" rel=\"nofollow\">TEMPLATE_CONTEXT_PROCESSORS</a> you can similarly access your preferences within templates through the <tt>preferences</tt> variable, i.e.:</p>\n<pre>{{ preferences.MyPreferences.portal_contact_email }}\n</pre>\n</div>\n</div>\n<div id=\"authors\">\n<h2><a href=\"#id12\" rel=\"nofollow\">Authors</a></h2>\n<h2 id=\"praekelt-consulting\"><span class=\"section-subtitle\">Praekelt Consulting</span></h2>\n<ul>\n<li>Shaun Sephton</li>\n<li>Euan Jonker</li>\n<li>Hedley Roos</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id13\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"next\">\n<h3><a href=\"#id14\" rel=\"nofollow\">next</a></h3>\n<ol>\n<li>Django 2 and Python 3.5 compatibility. Django 1.9 is no longer supported.</li>\n</ol>\n</div>\n<div id=\"id1\">\n<h3><a href=\"#id15\" rel=\"nofollow\">0.2</a></h3>\n<ol>\n<li>Move to tox for tests.</li>\n<li>Django 1.9 to 1.11 support. The official minimum supported version is 1.9.</li>\n</ol>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id16\" rel=\"nofollow\">0.1</a></h3>\n<ol>\n<li>Cleanup and fixing of tests courtesy of senyor.</li>\n<li>Rewrite distinct query so it works with Oracle backend.</li>\n</ol>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id17\" rel=\"nofollow\">0.0.6</a></h3>\n<ol>\n<li>Better packaging.</li>\n</ol>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id18\" rel=\"nofollow\">0.0.5 (2011-08-17)</a></h3>\n<ol>\n<li>Added sites support.</li>\n<li>Added unittests.</li>\n</ol>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id19\" rel=\"nofollow\">0.0.4 (2011-08-11)</a></h3>\n<ol>\n<li>Cleanup. Docs polish.</li>\n</ol>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id20\" rel=\"nofollow\">0.0.3</a></h3>\n<ol>\n<li>Spelling correction, thanks tiktuk.</li>\n</ol>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id21\" rel=\"nofollow\">0.0.2</a></h3>\n<ol>\n<li>Doc update to indicate importance of placing url include before admin url include.</li>\n</ol>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id22\" rel=\"nofollow\">0.0.1</a></h3>\n<ol>\n<li>First super alpha release.</li>\n</ol>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4233650, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "c3059e22b3c4032191bad2fc9b812b0e", "sha256": "a2a04ac9370e0c7c23f08889a6b61d578ff5dc075c404e7c7905b2a6105da5ac"}, "downloads": -1, "filename": "django_new_preferences-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c3059e22b3c4032191bad2fc9b812b0e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13002, "upload_time": "2018-09-03T08:20:28", "upload_time_iso_8601": "2018-09-03T08:20:28.454260Z", "url": "https://files.pythonhosted.org/packages/1c/f4/bf4740cdd5a91d4a47010de5bd992ea59336be925485c458fdcebc43a3d0/django_new_preferences-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29bf9bc24b8651f593d63f65a6200a83", "sha256": "146145700a2226fdeaf9efa6677ebf43a95bf30d569b452e6c1514ba36764bce"}, "downloads": -1, "filename": "django-new-preferences-0.2.tar.gz", "has_sig": false, "md5_digest": "29bf9bc24b8651f593d63f65a6200a83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10238, "upload_time": "2018-09-03T08:20:29", "upload_time_iso_8601": "2018-09-03T08:20:29.981749Z", "url": "https://files.pythonhosted.org/packages/6a/5c/4d4ddd080ee49464cf840a80491e35b8da3209f20967a2ae9f778e8ec78e/django-new-preferences-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c3059e22b3c4032191bad2fc9b812b0e", "sha256": "a2a04ac9370e0c7c23f08889a6b61d578ff5dc075c404e7c7905b2a6105da5ac"}, "downloads": -1, "filename": "django_new_preferences-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c3059e22b3c4032191bad2fc9b812b0e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13002, "upload_time": "2018-09-03T08:20:28", "upload_time_iso_8601": "2018-09-03T08:20:28.454260Z", "url": "https://files.pythonhosted.org/packages/1c/f4/bf4740cdd5a91d4a47010de5bd992ea59336be925485c458fdcebc43a3d0/django_new_preferences-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29bf9bc24b8651f593d63f65a6200a83", "sha256": "146145700a2226fdeaf9efa6677ebf43a95bf30d569b452e6c1514ba36764bce"}, "downloads": -1, "filename": "django-new-preferences-0.2.tar.gz", "has_sig": false, "md5_digest": "29bf9bc24b8651f593d63f65a6200a83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10238, "upload_time": "2018-09-03T08:20:29", "upload_time_iso_8601": "2018-09-03T08:20:29.981749Z", "url": "https://files.pythonhosted.org/packages/6a/5c/4d4ddd080ee49464cf840a80491e35b8da3209f20967a2ae9f778e8ec78e/django-new-preferences-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:42 2020"}