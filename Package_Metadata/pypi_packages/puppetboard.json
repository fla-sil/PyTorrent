{"info": {"author": "Vox Pupuli", "author_email": "voxpupuli@groups.io", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Flask", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "Puppetboard\n===========\n\n[![image](https://travis-ci.org/voxpupuli/puppetboard.svg?branch=master)](https://travis-ci.org/voxpupuli/puppetboard)\n\n[![image](https://coveralls.io/repos/github/voxpupuli/puppetboard/badge.svg?branch=master)](https://coveralls.io/github/voxpupuli/puppetboard?branch=master)\n\nPuppetboard is a web interface to [PuppetDB](https://puppet.com/docs/puppetdb/latest/index.html) aiming to replace the reporting functionality of [Puppet Dashboard](http://docs.puppetlabs.com/dashboard/).\n\nPuppetboard relies on the [pypuppetdb](https://pypi.python.org/pypi/pypuppetdb) library to fetch data from PuppetDB and is built with the help of the [Flask](http://flask.pocoo.org) microframework.\n\nAs of version 0.1.0 and higher, Puppetboard **requires** PuppetDB 3. Version 0.3.0 has been tested with PuppetDB versions 3 through 6.\n\nAt the current time of writing, Puppetboard supports the following Python versions:\n\n* Python 3.5\n* Python 3.6\n* Python 3.7\n* Python 3.8\n\n![View of a node](screenshots/overview.png)\n\nInstallation\n------------\n\nPuppetboard is now packaged and available on PyPi.\n\n### Production\n\n#### Puppet module\n\nThere is a [Puppet module](https://forge.puppetlabs.com/puppet/puppetboard) by [Spencer Krum](https://github.com/nibalizer) that takes care of installing Puppetboard for you.\n\nYou can install it with:\n\n> puppet module install puppet-puppetboard\n\nTo see how to get it working with EL7 check out these [docs](https://github.com/voxpupuli/puppetboard/blob/master/docs/EL7.md).\n\n#### Manual\n\nTo install it simply issue the following command:\n\n``` {.sourceCode .bash}\n$ pip install puppetboard\n```\n\nThis will install Puppetboard and take care of the dependencies. If you do this Puppetboard will be installed in the so called site-packages or dist-packages of your Python distribution.\n\nThe complete path on Debian and Ubuntu systems would be `/usr/local/lib/pythonX.Y/lib/dist-packages/puppetboard` and on Fedora would be `/usr/lib/pythonX.Y/site-packages/puppetboard`\n\nwhere X and Y are replaced by your major and minor python versions.\n\nYou will need this path in order to configure your HTTPD and WSGI-capable application server.\n\n#### Packages\n\nNative packages for your operating system will be provided in the near future.\n\n<table>\n<colgroup>\n<col width=\"25%\" />\n<col width=\"15%\" />\n<col width=\"58%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th align=\"left\">OS</th>\n<th align=\"left\">Status</th>\n<th align=\"left\"></th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td align=\"left\"><a href=\"https://build.opensuse.org/package/show/systemsmanagement:puppet/python-puppetboard\">OpenSuSE 12/13</a></td>\n<td align=\"left\">available</td>\n<td align=\"left\">Maintained on <a href=\"https://build.opensuse.org/package/show/systemsmanagement:puppet/python-puppetboard\">OpenSuSE Build Service</a></td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\"><a href=\"https://build.opensuse.org/package/show/systemsmanagement:puppet/python-puppetboard\">SuSE LE 11 SP3</a></td>\n<td align=\"left\">available</td>\n<td align=\"left\">Maintained on <a href=\"https://build.opensuse.org/package/show/systemsmanagement:puppet/python-puppetboard\">OpenSuSE Build Service</a></td>\n</tr>\n<tr class=\"odd\">\n<td align=\"left\"><a href=\"https://aur.archlinux.org/packages/python2-puppetboard/\">ArchLinux</a></td>\n<td align=\"left\">available</td>\n<td align=\"left\">Maintained by <a href=\"https://github.com/bastelfreak\">Tim Meusel</a></td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\"><a href=\"http://www.openbsd.org/cgi-bin/cvsweb/ports/www/puppetboard/\">OpenBSD</a></td>\n<td align=\"left\">available</td>\n<td align=\"left\">Maintained by <a href=\"https://github.com/buzzdeee\">Sebastian Reitenbach</a></td>\n</tr>\n</tbody>\n</table>\n\n#### Docker Images\n\nA [Dockerfile](https://github.com/voxpupuli/puppetboard/blob/master/Dockerfile) was added to the source-code in the 0.2.0 release. An officially image is planned for the 0.2.x series.\n\nUsage:\n\n``` {.sourceCode .bash}\n$ docker build -t puppetboard .\n$ docker run -it -p 9080:80 -v /etc/puppetlabs/puppet/ssl:/etc/puppetlabs/puppet/ssl \\\n  -e PUPPETDB_HOST=<hostname> \\\n  -e PUPPETDB_PORT=8081 \\\n  -e PUPPETDB_SSL_VERIFY=/etc/puppetlabs/puppetdb/ssl/ca.pem \\\n  -e PUPPETDB_KEY=/etc/puppetlabs/puppetdb/ssl/private.pem \\\n  -e PUPPETDB_CERT=/etc/puppetlabs/puppetdb/ssl/public.pem \\\n  -e INVENTORY_FACTS='Hostname,fqdn, IP Address,ipaddress' \\\n  -e ENABLE_CATALOG=True \\\n  -e GRAPH_FACTS='architecture,puppetversion,osfamily' \\\n  puppetboard\n```\n\nTo set a URL prefix you can use the optional `PUPPETBOARD_URL_PREFIX`\nenvironment variable.\n\n### Development\n\nIf you wish to hack on Puppetboard you should fork/clone the Github repository and then install the requirements through:\n\n``` {.sourceCode .bash}\n$ pip install -r requirements-test.txt\n```\n\nYou're advised to do this inside a virtualenv specifically created to work on Puppetboard as to not pollute your global Python installation.\n\nConfiguration\n-------------\n\nThe following instructions will help you configure Puppetboard and your HTTPD.\n\n### Puppet\n\nPuppetboard is built completely around PuppetDB which means your environment needs to be configured [to do that](https://puppet.com/docs/puppetdb/latest/connect_puppet_master.html#step-2-edit-config-files).\n\nIn order to get the reports to show up in Puppetboard you need to configure your environment to store those reports in PuppetDB. Have a look at [the documentation](https://puppet.com/docs/puppetdb/latest/connect_puppet_master.html#edit-puppetconf) about this, specifically the *Enabling report storage* section.\n\n### Settings\n\nPuppetboard will look for a file pointed at by the `PUPPETBOARD_SETTINGS` environment variable. The file has to be identical to `default_settings.py` but should only override the settings you need changed.\n\nYou can grab a copy of `default_settings.py` from the path where pip installed Puppetboard to or by looking in the source checkout.\n\nIf you run PuppetDB and Puppetboard on the same machine the default settings provided will be enough to get you started and you won't need a custom settings file.\n\nAssuming your webserver and PuppetDB machine are not identical you will at least have to change the following settings:\n\n-   `PUPPETDB_HOST`\n-   `PUPPETDB_PORT`\n\nBy default PuppetDB requires SSL to be used when a non-local client wants to connect. Therefor you'll also have to supply the following settings:\n\n-   `PUPPETDB_SSL_VERIFY = /path/to/ca/keyfile.pem`\n-   `PUPPETDB_KEY = /path/to/private/keyfile.pem`\n-   `PUPPETDB_CERT = /path/to/public/keyfile.crt`\n\nFor information about how to generate the correct keys please refer to the [pypuppetdb documentation](http://pypuppetdb.readthedocs.org/en/v0.1.0/quickstart.html#ssl). Alternatively is possible to explicitly specify the protocol to be used setting the `PUPPETDB_PROTO` variable.\n\nOther settings that might be interesting in no particular order:\n\n-   `SECRET_KEY`: Refer to [Flask documentation](http://flask.pocoo.org/docs/0.10/quickstart/#sessions), section sessions: How to generate good secret keys, to set the value. Defaults to a random 24-char string generated by os.random(24)\n-   `PUPPETDB_TIMEOUT`: Defaults to 20 seconds but you might need to increase this value. It depends on how big the results are when querying PuppetDB. This behaviour will change in a future release when pagination will be introduced.\n-   `UNRESPONSIVE_HOURS`: The amount of hours since the last check-in after which a node is considered unresponsive.\n-   `LOGLEVEL`: A string representing the loglevel. It defaults to `'info'` but can be changed to `'warning'` or `'critical'` for less verbose logging or `'debug'` for more information.\n-   `ENABLE_QUERY`: Defaults to `True` causing a Query tab to show up in the web interface allowing users to write and execute arbitrary queries against a set of endpoints in PuppetDB. Change this to `False` to disable this. See `ENABLED_QUERY_ENDPOINTS` to fine-tune which endpoints are allowed.\n-   `ENABLED_QUERY_ENDPOINTS`: If `ENABLE_QUERY` is `True`, allow to fine tune the endpoints of PuppetDB APIs that can be queried. It must be a list of strings of PuppetDB endpoints for which the query is enabled. See the `QUERY_ENDPOINTS` constant in the `puppetboard.app` module for a list of the available endpoints.\n-   `GRAPH_TYPE`: Specify the type of graph to display.   Default is\n    pie, other good option is donut.   Other choices can be found here:\n    \\_C3JS\\_documentation\\`\n-   `GRAPH_FACTS`: A list of fact names to tell PuppetBoard to generate a pie-chart on the fact page. With some fact values being unique per node, like ipaddress, uuid, and serial number, as well as structured facts it was no longer feasible to generate a graph for everything.\n-   `INVENTORY_FACTS`: A list of tuples that serve as the column header and the fact name to search for to create the inventory page. If a fact is not found for a node then `undef` is printed.\n-   `ENABLE_CATALOG`: If set to `True` allows the user to view a node's latest catalog. This includes all managed resources, their file-system locations and their relationships, if available. Defaults to `False`.\n-   `REFRESH_RATE`: Defaults to `30` the number of seconds to wait until the index page is automatically refreshed.\n-   `DEFAULT_ENVIRONMENT`: Defaults to `'production'`, as the name suggests, load all information filtered by this environment value.\n-   `REPORTS_COUNT`: Defaults to `10` the limit of the number of reports to load on the node or any reports page.\n-   `OFFLINE_MODE`: If set to `True` load static assets (jquery, semantic-ui, etc) from the local web server instead of a CDN. Defaults to `False`.\n-   `DAILY_REPORTS_CHART_ENABLED`: Enable the use of daily chart graphs when looking at dashboard and node view.\n-   `DAILY_REPORTS_CHART_DAYS`: Number of days to show history for on the daily report graphs.\n-   `DISPLAYED_METRICS`: Metrics to show when displaying node summary. Example: `'resources.total'`, `'events.noop'`.\n-   `TABLE_COUNT_SELECTOR`: Configure the dropdown to limit number of hosts to show per page.\n-   `LITTLE_TABLE_COUNT`: Default number of reports to show when when looking at a node.\n-   `NORMAL_TABLE_COUNT`: Default number of nodes to show when displaying reports and catalog nodes.\n-   `LOCALISE_TIMESTAMP`: Normalize time based on localserver time.\n-   `WITH_EVENT_NUMBERS`: If set to `True` then Overview and Nodes list shows exact number of changed resources in last report. Otherwise shows only 'some' string if there are resources with given status. Setting to `False` gives performance benefits, especially in big Puppet environments (more than few hundreds of nodes). Defaults to `True`.\n-   `DEV_LISTEN_HOST`: For use with dev.py for development. Default is localhost\n-   `DEV_LISTEN_PORT`: For use with dev.py for development. Default is 5000\n\n### Puppet Enterprise\n\nPuppet Enterprise maintains a certificate white-list for which certificates are allowed to access data from PuppetDB. This whitelist is maintained in `/etc/puppetlabs/puppetdb/certificate-whitelist` and you have to add the certificate name to that file.\n\nAfterwards you'll need to restart `pe-puppetdb` and you should be able to query PuppetDB freely now.\n\n### Development\n\nYou can run it in development mode by simply executing:\n\n``` {.sourceCode .bash}\n$ python dev.py\n```\n\nUse `PUPPETBOARD_SETTINGS` to change the different settings or patch `default_settings.py` directly. Take care not to include your local changes on that file when submitting patches for Puppetboard. Place a settings.py file inside the base directory of the git repository that will be used, if the environment variable is not set.\n\n### Production\n\nTo run Puppetboard in production we provide instructions for the following scenarios:\n\n-   Apache + mod\\_wsgi\n-   Apache + mod\\_passenger\n-   nginx + uwsgi\n-   nginx + gunicorn\n\nIf you deploy Puppetboard through a different setup we'd welcome a pull request that adds the instructions to this section.\n\nInstallation On Linux Distros \\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\n\n[Debian Jessie Install](docs/Debian-Jessie.md).\n\n#### Apache + mod\\_wsgi\n\nFirst we need to create the necessary directories:\n\n``` {.sourceCode .bash}\n$ mkdir -p /var/www/html/puppetboard\n```\n\nCopy Puppetboard's `default_settings.py` to the newly created puppetboard directory and name the file `settings.py`. This file will be available at the path Puppetboard was installed, for example: `/usr/local/lib/pythonX.Y/lib/dist-packages/puppetboard/default_settings.py`.\n\nChange the settings that need changing to match your environment and delete or comment with a `#` the rest of the entries.\n\nIf you don't need to change any settings you can skip the creation of the `settings.py` file entirely.\n\nNow create a `wsgi.py` with the following content in the newly created puppetboard directory:\n\n``` {.sourceCode .python}\nfrom __future__ import absolute_import\nimport os\n\n# Needed if a settings.py file exists\nos.environ['PUPPETBOARD_SETTINGS'] = '/var/www/html/puppetboard/settings.py'\nfrom puppetboard.app import app as application\n```\n\nMake sure this file is readable by the user the webserver runs as.\n\nFlask requires a static secret\\_key, see [FlaskSession](http://flask.pocoo.org/docs/0.11/quickstart/#sessions), in order to protect itself from CSRF exploits. The default secret\\_key in `default_settings.py` generates a random 24 character string, however this string is re-generated on each request under httpd \\>= 2.4.\n\nTo generate your own secret\\_key create a python script with the following content and run it once:\n\n``` {.sourceCode .python}\nimport os\nos.urandom(24)\n'\\xfd{H\\xe5<\\x95\\xf9\\xe3\\x96.5\\xd1\\x01O<!\\xd5\\xa2\\xa0\\x9fR\"\\xa1\\xa8'\n```\n\nCopy the output and add the following to your `wsgi.py` file:\n\n``` {.sourceCode .python}\napplication.secret_key = '<your secret key>'\n```\n\nThe last thing we need to do is configure Apache.\n\nHere is a sample configuration for Debian and Ubuntu:\n\n``` {.sourceCode .apache}\n<VirtualHost *:80>\n    ServerName puppetboard.example.tld\n    WSGIDaemonProcess puppetboard user=www-data group=www-data threads=5\n    WSGIScriptAlias / /var/www/html/puppetboard/wsgi.py\n    ErrorLog /var/log/apache2/puppetboard.error.log\n    CustomLog /var/log/apache2/puppetboard.access.log combined\n\n    Alias /static /usr/local/lib/pythonX.Y/dist-packages/puppetboard/static\n    <Directory /usr/local/lib/pythonX.X/dist-packages/puppetboard/static>\n        Satisfy Any\n        Allow from all\n    </Directory>\n\n    <Directory /usr/local/lib/pythonX.Y/dist-packages/puppetboard>\n        WSGIProcessGroup puppetboard\n        WSGIApplicationGroup %{GLOBAL}\n        Order deny,allow\n        Allow from all\n    </Directory>\n</VirtualHost>\n```\n\nHere is a sample configuration for Fedora:\n\n``` {.sourceCode .apache}\n<VirtualHost *:80>\n    ServerName puppetboard.example.tld\n    WSGIDaemonProcess puppetboard user=apache group=apache threads=5\n    WSGIScriptAlias / /var/www/html/puppetboard/wsgi.py\n    ErrorLog logs/puppetboard-error_log\n    CustomLog logs/puppetboard-access_log combined\n\n    Alias /static /usr/lib/pythonX.Y/site-packages/puppetboard/static\n    <Directory /usr/lib/pythonX.Y/site-packages/puppetboard/static>\n        Satisfy Any\n        Allow from all\n    </Directory>\n\n    <Directory /usr/lib/pythonX.Y/site-packages/puppetboard>\n        WSGIProcessGroup puppetboard\n        WSGIApplicationGroup %{GLOBAL}\n        Require all granted\n    </Directory>\n</VirtualHost>\n```\n\nNote the directory path, it's the path to where pip installed Puppetboard; X.Y must be replaced with your python version. We also alias the `/static` path so that Apache will serve the static files like the included CSS and Javascript.\n\n#### Apache + mod\\_passenger\n\nIt is possible to run Python applications through Passenger. Passenger has supported this since version 3 but it's considered experimental. Since the release of Passenger 4 it's a 'core' feature of the product.\n\nPerformance wise it also leaves something to be desired compared to the mod\\_wsgi powered solution. Application start up is noticeably slower and loading pages takes a fraction longer.\n\nFirst we need to create the necessary directories:\n\n``` {.sourceCode .bash}\n$ mkdir -p /var/www/puppetboard/{tmp,public}\n```\n\nCopy Puppetboard's `default_settings.py` to the newly created puppetboard directory and name the file `settings.py`. This file will be available at the path Puppetboard was installed, for example: `/usr/local/lib/pythonX.Y/lib/dist-packages/puppetboard/default_settings.py`.\n\nChange the settings that need changing to match your environment and delete or comment with a `#` the rest of the entries.\n\nIf you don't need to change any settings you can skip the creation of the `settings.py` file entirely.\n\nNow create a `passenger_wsgi.py` with the following content in the newly created puppetboard directory:\n\n``` {.sourceCode .python}\nfrom __future__ import absolute_import\nimport os\nimport logging\n\nlogging.basicConfig(filename='/path/to/file/for/logging', level=logging.INFO)\n\n# Needed if a settings.py file exists\nos.environ['PUPPETBOARD_SETTINGS'] = '/var/www/puppetboard/settings.py'\n\ntry:\n    from puppetboard.app import app as application\nexcept Exception, inst:\n    logging.exception(\"Error: %s\", str(type(inst)))\n```\n\nUnfortunately due to the way Passenger works we also need to configure logging inside `passenger_wsgi.py` else application start up issues won't be logged.\n\nThis means that even though `LOGLEVEL` might be set in your `settings.py` this setting will take precedence over it.\n\nNow the only thing left to do is configure Apache:\n\n``` {.sourceCode .apache}\n<VirtualHost *:80>\n    ServerName puppetboard.example.tld\n    DocumentRoot /var/www/puppetboard/public\n    ErrorLog /var/log/apache2/puppetboard.error.log\n    CustomLog /var/log/apache2/puppetboard.access.log combined\n\n    RackAutoDetect On\n    Alias /static /usr/local/lib/pythonX.Y/dist-packages/puppetboard/static\n</VirtualHost>\n```\n\nNote the `/static` alias path, it's the path to where pip installed Puppetboard. This is needed so that Apache will serve the static files like the included CSS and Javascript.\n\n#### nginx + uwsgi\n\nA common Python deployment scenario is to use the uwsgi application server (which can also serve rails/rack, PHP, Perl and other applications) and proxy to it through something like nginx or perhaps even HAProxy.\n\nuwsgi has a feature that every instance can run as its own user. In this example we'll use the `www-data` user but you can create a separate user solely for running Puppetboard and use that instead.\n\nFirst we need to create the necessary directories:\n\n``` {.sourceCode .bash}\n$ mkdir -p /var/www/puppetboard\n```\n\nCopy Puppetboard's `default_settings.py` to the newly created puppetboard directory and name the file `settings.py`. This file will be available at the path Puppetboard was installed, for example: `/usr/local/lib/pythonX.Y/lib/dist-packages/puppetboard/default_settings.py`.\n\nChange the settings that need changing to match your environment and delete or comment with a `#` the rest of the entries.\n\nIf you don't need to change any settings you can skip the creation of the `settings.py` file entirely.\n\nNow create a `wsgi.py` with the following content in the newly created puppetboard directory:\n\n``` {.sourceCode .python}\nfrom __future__ import absolute_import\nimport os\n\n# Needed if a settings.py file exists\nos.environ['PUPPETBOARD_SETTINGS'] = '/var/www/puppetboard/settings.py'\nfrom puppetboard.app import app as application\n```\n\nMake sure this file is owned by the user and group the uwsgi instance will run as.\n\nNow we need to start uwsgi:\n\n``` {.sourceCode .bash}\n$ uwsgi --socket :9090 --wsgi-file /var/www/puppetboard/wsgi.py\n```\n\nFeel free to change the port to something other than `9090`.\n\nThe last thing we need to do is configure nginx to proxy the requests:\n\n``` {.sourceCode .nginx}\nupstream puppetboard {\n    server 127.0.0.1:9090;\n}\n\nserver {\n    listen      80;\n    server_name puppetboard.example.tld;\n    charset     utf-8;\n\n    location /static {\n        alias /usr/local/lib/pythonX.Y/dist-packages/puppetboard/static;\n    }\n\n    location / {\n        uwsgi_pass puppetboard;\n        include    /path/to/uwsgi_params/probably/etc/nginx/uwsgi_params;\n    }\n}\n```\n\nIf all went well you should now be able to access to Puppetboard. Note the `/static` location block to make nginx serve static files like the included CSS and Javascript.\n\nBecause nginx natively supports the uwsgi protocol we use `uwsgi_pass` instead of the traditional `proxy_pass`.\n\nnginx + gunicorn \\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^ You can use gunicorn instead of uwsgi if you prefer, the process doesn't differ too much. As we can't use `uwsgi_pass` with gunicorn, the nginx configuration file is going to differ a bit:\n\n``` {.sourceCode .nginx}\nserver {\n    listen      80;\n    server_name puppetboard.example.tld;\n    charset     utf-8;\n\n    location /static {\n        alias /usr/local/lib/pythonX.Y/dist-packages/puppetboard/static;\n    }\n\n    location / {\n        add_header Access-Control-Allow-Origin *;\n        proxy_pass_header Server;\n        proxy_set_header Host $http_host;\n        proxy_redirect off;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Scheme $scheme;\n        proxy_connect_timeout 10;\n        proxy_read_timeout 10;\n        proxy_pass http://127.0.0.1:9090;\n    }\n}\n```\n\nNow, for running it with gunicorn:\n\n``` {.sourceCode .bash}\n$ cd /usr/local/lib/pythonX.Y/dist-packages/puppetboard\n$ gunicorn -b 127.0.0.1:9090 puppetboard.app:app\n```\n\nAs we may want to serve in the background, and we need `PUPPETBOARD_SETTINGS` as an environment variable, is recommendable to run this under supervisor. An example supervisor config with basic settings is the following:\n\n``` {.sourceCode .ini}\n[program:puppetboard]\ncommand=gunicorn -b 127.0.0.1:9090 puppetboard.app:app\nuser=www-data\nstdout_logfile=/var/log/supervisor/puppetboard/puppetboard.out\nstderr_logfile=/var/log/supervisor/puppetboard/puppetboard.err\nenvironment=PUPPETBOARD_SETTINGS=\"/var/www/puppetboard/settings.py\"\n```\n\nFor newer systems with systemd (for example CentOS7), you can use the following service file (`/usr/lib/systemd/system/gunicorn@.service`):\n\n``` {.sourceCode .ini}\n[Unit]\nDescription=gunicorn daemon for %i\nAfter=network.target\n\n[Service]\nExecStart=/usr/bin/gunicorn --config /etc/sysconfig/gunicorn/%i.conf %i\nExecReload=/bin/kill -s HUP $MAINPID\nPrivateTmp=true\nUser=gunicorn\nGroup=gunicorn\n```\n\nAnd the corresponding gunicorn config (`/etc/sysconfig/gunicorn/puppetboard.app\\:app.conf`):\n\n``` {.sourceCode .ini}\nimport multiprocessing\n\nbind    = '127.0.0.1:9090'\nworkers = multiprocessing.cpu_count() * 2 + 1\nchdir   = '/usr/lib/pythonX.Y/site-packages/puppetboard'\nraw_env = ['PUPPETBOARD_SETTINGS=/var/www/puppetboard/settings.py', 'http_proxy=']\n```\n\n### Security\n\nIf you wish to make users authenticate before getting access to Puppetboard you can use one of the following configuration snippets.\n\n#### Apache\n\nInside the `VirtualHost`:\n\n``` {.sourceCode .apache}\n<Location \"/\">\n    AuthType Basic\n    AuthName \"Puppetboard\"\n    Require valid-user\n    AuthBasicProvider file\n    AuthUserFile /path/to/a/file.htpasswd\n</Location>\n```\n\n#### nginx\n\nInside the `location / {}` block that has the `uwsgi_pass` directive:\n\n``` {.sourceCode .nginx}\nauth_basic \"Puppetboard\";\nauth_basic_user_file /path/to/a/file.htpasswd;\n```\n\nGetting Help\n------------\n\nThis project is still very new so it's not inconceivable you'll run into issues.\n\nFor bug reports you can file an [issue](https://github.com/voxpupuli/puppetboard/issues). If you need help with something feel free to hit up the maintainers by e-mail or on IRC. They can usually be found on [IRCnet](http://www.ircnet.org) and [Freenode](http://freenode.net) and idles in \\#puppetboard.\n\nThere's now also the \\#puppetboard channel on [Freenode](http://freenode.net) where we hang out and answer questions related to pypuppetdb and Puppetboard.\n\nThere is also a [GoogleGroup](https://groups.google.com/forum/?hl=en#!forum/puppet-community) to exchange questions and discussions. Please note that this group contains discussions of other Puppet Community projects.\n\nThird party\n-----------\n\nSome people have already started building things with and around Puppetboard.\n\n[Hunter Haugen](https://github.com/hunner) has provided a Vagrant setup:\n\n-   <https://github.com/hunner/puppetboard-vagrant>\n\n### Packages\n\n-   An OpenBSD port is being maintained by [Sebastian Reitenbach](https://github.com/buzzdeee) and can be viewed [here](http://www.openbsd.org/cgi-bin/cvsweb/ports/www/puppetboard/).\n-   A Docker image is being maintained by [Julien K.](https://github.com/juliengk) and can be viewed [here](https://registry.hub.docker.com/u/kassis/puppetboard/).\n\nContributing\n------------\n\nWe welcome contributions to this project. However, there are a few ground rules contributors should be aware of.\n\n### License\n\nThis project is licensed under the Apache v2.0 License. As such, your contributions, once accepted, are automatically covered by this license.\n\n### Commit messages\n\nWrite decent commit messages. Don't use swear words and refrain from uninformative commit messages as 'fixed typo'.\n\nThe preferred format of a commit message:\n\n    docs/quickstart: Fixed a typo in the Nodes section.\n\n    If needed, elaborate further on this commit. Feel free to write a\n    complete blog post here if that helps us understand what this is\n    all about.\n\n    Fixes #4 and resolves #2.\n\nIf you'd like a more elaborate guide on how to write and format your commit messages have a look at this post by [Tim Pope](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).\n\nExamples\n--------\n\n[vagrant-puppetboard](https://github.com/visibilityspots/vagrant-puppet/tree/puppetboard)\n\nA vagrant project to show off the puppetboard functionality using the puppetboard puppet module on a puppetserver with puppetdb.\n\nScreenshots\n-----------\n\n![Overview / Index / Homepage](screenshots/overview.png)\n\n![Nodes view, all active nodes](screenshots/nodes.png)\n\n![Single node page / overview](screenshots/node.png)\n\n![Report view](screenshots/report.png)\n\n![Facts view](screenshots/facts.png)\n\n![Single fact, with graphs](screenshots/fact.png)\n\n![All nodes that have this fact with that value](screenshots/fact_value.png)\n\n![Metrics view](screenshots/metrics.png)\n\n![Single metric](screenshots/metric.png)\n\n![Query view](screenshots/query.png)\n\n![Error page](screenshots/broken.png)\n\nChangelog\n=========\n\nThis is the changelog for Puppetboard.\n\nDevelopment\n-----------\n\n2.1.2\n----\n\n* Puppet DB 5.2.13 requires v2 metrics\n\n2.1.1\n-----\n\n* Added support for new metrics API `v2` on PuppetDB >= `5.3.11` and < `6.0.0` (#558)\n* Added Python 3.5 back into test matrix (#559)\n* Fixed bug in `dailyreport.js` that caused it not to render when served under a non-default virtual host (#557)\n\n2.1.0\n-----\n\n* Fixed Puppetboard's usage for the new metrics v2 API both on the home page for computing the average resources/node and the `Metrics` listing page. This change now supports the changes in PuppetDB >= 6.9.1 (https://puppet.com/security/cve/CVE-2020-7943/)\n* Added backwards compatability support for both the metric `v1` and `v2` endpoints\n  depending on the version of the server. Any PuppetDB >= `6.9.1` will be queried with\n  the `v2` endpoint automatically (because `v1` is disabled from here forward). Any\n  PuppetDB <= `6.9.0` will use `v1`.\n* pypuppetdb: raise version requirement `>=2.1.0` because changes were needed in this library to support the metrics v2 fixes.\n* app.py: Added python2 backwards compatability fix for importing `urllib`.\n\n2.0.0\n----\n\n* Dockerfile: Switch to python:3.7-alpine image\n* pypuppetdb: raise version requirement `>=1.2.0` to `>=2.0.0`\n* Drop support for python2.7 and python3.5 & Add python3.8 to buildmatrix\n* Upgrade of tests requirements + resolving current deprecation warnings\n* Ignore facts environment for compatibility and performance\n* Adding mypy + Cleanup + CommonMark upgrade to 0.9.1\n* Update docker and fix coveralls not running.\n* Cast inventory data toString\n\n1.1.0\n-----\n\n* Move to Python 3.6 for Docker\n* Fix problem loading daily chart on node page\n* fix gunicorn parameter and allow to define workers in docker\n* Add feature for better performance in big Puppet envs\n* bundle requirements.txt for tests and docker\n\n1.0.0\n-----\n\n* CI enhancements\n* Allow to configure which PuppetDB endpoints are allowed\n* Update c3 to 4.22\n* Add basic health check endpoint\n* Allow to force the PuppetDB connection protocol\n* Update jquery-tablesort to 0.0.11\n* Fix bug breaking date/time sort\n* Fix formatvalue for list of dicts\n* Modify date sort to handle failed\n* Include template files for altering Semantic css and Google fonts\n* Make 320px the max width for columns\n* If query is None don't perform add on it\n* Query using producer\\_timestamp index vs. start\\_time\n* Add missing components for building source packages\n* Add support for URL prefixes to Docker image\n\n0.3.0\n-----\n\n* Core UI Rework\n* Update to pypuppetdb 0.3.3\n* Fix sorty on data for index\n* Update debian documentation\n* Offline mode fix\n* Fix fact attribute error on paths\n* Enhanced testing\n* Radiator CSS uses same coloring\n* Markdown in config version\n* Update Flask\n* Cleanup requirements.txt\n* Update package maintainer for OpenBSD\n\n0.2.1\n-----\n\n* Daily Charts\n* Fixed missing javascript files on radiator view.\n* TravisCI and Coveralls integration.\n* Fixed app crash in catalog view.\n* Upgrade pypuppetdb to 0.3.2\n* Enhanced queries for Node and Report (\\#271)\n* Optimize Inventory Code.\n* Use certname instead of hostname to identify nodes when applicable.\n* Add environment filter for facts.\n* Update cs.js to 0.4.11\n* Fix radiator column alignment\n* Security checks with bandit\n* Dockerfile now uses gunicorn and environment variables for configuration.\n* Handle division by zero errors.\n* Implement new Jquery Datatables.\n* JSON output for radiator. \\* Move javascript to head tag.\n* Optimize reports and node page queries.\n* Fix all environments for PuppetDB 3.2\n* Fact graph chart now configurable.\n* Support for Flask 0.12 and Jinja2 2.9\n* Fix misreporting noops as changes.\n\n0.2.0\n-----\n\n* Full support for PuppetDB 4.x\n* Updating Semantic UI to 2.1.8\n* Updating Flask-WTF requirements to 0.12\n* Updating WTForms to 2.x\n* Restored CSRF protection on the Query Tab form\n* Updating Pypuppetdb requirement to 0.3.x\n* New configuration option OVERVIEW\\_FILTER allows users to add custom PuppetDB query clauses to include/exclude nodes displayed on the index page\n* Adding Radiator view similar to what is available in Puppet Dashboard\n* Adding a drop-down list in the Reports tab to configure the number of reports displayed\n* Removing unneeded report\\_latest() endpoint. This endpoint was deprecated with the addition of the latest\\_report\\_hash field in the Nodes PuppetDB endpoint\n* Enhancing Report pagination\n* Using the OOP Query Builder available in Pypuppetdb 0.3.x\n* Allowing PQL queries in the Query Tab\n* Fixing double url-quoting bug on Metric endpodint calls\n* Adding a Boolean field to the Query form to prettyprint responses from PuppetDB\n* Fixing corner-case where empty environments would trigger a ZeroDivisionError due to the Number of Nodes divided by the Number of Resources calculation\n* Adding additional logging in utils.py\n\n0.1.2\n-----\n* Add configuration option to set the default environment with new configuration option DEFAULT\\_ENVIRONMENT, defaults to 'production'.\n* Loading all available environments with every page load.\n* Adding an \"All Environments\" item to the Environments dropdown to remove all environment filters on PuppetDB data.\n* Updating README.rst to update links and describe new configuration options.\n* Fixing Query form submission problem by disabling CSRF protection. Needs to be re-implemented.\n\n\\* Updating the pypuppetdb requirement to \\>= 0.2.1, using information  \navailable in PuppetDB 3.2 and higher\n\n*\\* latest\\_report\\_hash and latest\\_report\\_status fields from the Nodes endpoint, this effectively deprecates the report\\_latest() function*\\* code\\_id from the Catalogs endpoint (current unused) \\* Adding a automatic refresh on the overview page to reload the page every X number of seconds, defaults to 30. This is configurable with the configuration option REFRESH\\_RATE \\* Fixing the table alignment in the catalog\\_compare() page by switching to fixed tables from basic tables. \\* Using colors similar to Puppet Dashboard and Foreman for the status counts sections\n\n0.1.1\n-----\n\n* Fix bug where the reports template was not generating the report links with the right environment\n\n0.1.0\n-----\n\n* Requires pypuppetdb \\>= 0.2.0\n* Drop support for PuppetDB 2 and earlier\n* Full support for PuppetDB 3.x\n* The first directory location is now a Puppet environment which is filtered on all supported queries. Users can browse different environments with a select field in the top NavBar\n* Using limit, order\\_by and offset parameters adding pagaination on the Reports page (available in the NavBar). Functionality is available to pages that accept a page attribute.\n* The report page now directly queries pypuppetdb to match the report\\_id value with the report hash or configuration\\_version fields.\n* Catching and aborting with a 404 if the report and report\\_latest function queries do not return a generator object.\n* Adding a Catalogs page (similar to the Nodes page) with a form to compare one node's catalog information with that of another node.\n* Updating the Query Endpoints for the Query page.\n* Adding to `templates/_macros.html` status\\_counts that shows node/report status information, like what is avaiable on the index and nodes pages, available to the reports pages and tables also.\n* Showing report logs and metrics in the report page.\n* Removing `limit_reports` from `utils.py` because this helper function has been replaced by the limit PuppetDB paging function.\n\n**Known Issues**\n\n* fact\\_value pages rendered from JSON valued facts return no results. A more sophisticated API is required to make use of JSON valued facts (through the factsets, fact-paths and/or fact-contents endpoints for example)\n\n0.0.5\n-----\n\n* Now requires WTForms versions less than 2.0\n* Adding a Flask development server in `dev.py`.\n* Adding CSRF protection VIA the flask\\_wtf CsrfProtect object.\n* Allowing users to configure the report limit on pages where reports are listed with the LIMIT\\_REPORTS configuration option.\n* Adding an inventory page to users to be able to see all available nodes and a configure lists of facts to display VIA the INVENTORY\\_FACTS configuration option.\n* Adding a page to view a node's catalog information if enabled, disabled by default. Can be changed with the ENABLE\\_CATALOG configuration attribute.\n* New configuration option GRAPH\\_FACTS allows the user to choose which graphs will generate pie on the fact pages.\n* Replacing Chart.js with c3.js and d3.js.\n* Adding Semantic UI 0.16.1 and removing unused bootstrap styles.\n* Adding an OFFLINE\\_MODE configuration option to load local assets or from a CDN service. This is useful in environments without internet access.\n\n0.0.4\n-----\n\n* Fix the sorting of the different tables containing facts.\n* Fix the license in our `setup.py`. The license shouldn't be longer than 200 characters. We were including the full license tripping up tools like bdist\\_rpm.\n\n0.0.3\n-----\n\nThis release introduces a few big changes. The most obvious one is the revamped\nOverview page which has received significant love. Most of the work was done by\nJulius H\u00e4rtl. The Nodes tab has been given a slight face-lift too.\n\nOther changes:\n\n* This release depends on the new pypuppetdb 0.1.0. Because of this the SSL configuration options have been changed:\n  * `PUPPETDB_SSL` is gone and replaced by `PUPPETDB_SSL_VERIFY` which now defaults to `True`. This only affects connections to PuppetDB that happen over SSL.\n  * SSL is automatically enabled if both `PUPPETDB_CERT` and `PUPPETDB_KEY` are provided.\n* Display of deeply nested metrics and query results have been fixed.\n* Average resources per node metric is now displayed as a natural number.\n* A link back to the node has been added to the reports.\n* A few issues with reports have been fixed.\n* A new setting called `UNRESPONSIVE_HOURS` has been added which denotes the amount of hours after which Puppetboard will display the node as unreported if it hasn't checked in. We default to `2` hours.\n* The event message can now be viewed by clicking on the event.\n\nPuppetboard is now neatly packaged up and available on PyPi. This should\nsignificantly help reduce the convoluted installation instructions people had\nto follow.\n\nUpdated installation instructions have been added on how to install from PyPi\nand how to configure your HTTPD.\n\n0.0.2\n-----\n\nIn this release we've introduced a few new things. First of all we now require pypuppetdb version 0.0.4 or later which includes support for the v3 API introduced with PuppetDB 1.5.\n\nBecause of changes in PuppetDB 1.5 and therefor in pypuppetdb users of the v2 API, regardless of the PuppetDB version, will no longer be able to view reports or events.\n\nIn light of this the following settings have been removed:\n\n* `PUPPETDB_EXPERIMENTAL`\n\nTwo new settings have been added:\n\n* `PUPPETDB_API`: an integer, defaulting to `3`, representing the API version we want to use.\n* `ENABLE_QUERY`: a boolean, defaulting to `True`, on wether or not to be able to use the Query tab.\n\nWe've also added a few new features:\n\n* Thanks to some work done during PuppetConf together with Nick Lewis (from Puppet Labs) we now expose all of PuppetDB's metrics in the Metrics tab. The formatting isn't exactly pretty but it's a start.\n* Spencer Krum added the graphing capabilities to the Facts tab.\n* Daniel Lawrence added a feature so that facts on the node view are clickable and take you to the complete overview of that fact for your infrastructure and made the nodes in the complete facts list clickable so you can jump to a node.\n* Klavs Klavsen contributed some documentation on how to run Puppetboard with Passenger.\n\n0.0.1\n-----\n\nInitial release.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/voxpupuli/puppetboard", "keywords": "puppet puppetdb puppetboard", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "puppetboard", "package_url": "https://pypi.org/project/puppetboard/", "platform": "", "project_url": "https://pypi.org/project/puppetboard/", "project_urls": {"Homepage": "https://github.com/voxpupuli/puppetboard"}, "release_url": "https://pypi.org/project/puppetboard/2.1.2/", "requires_dist": ["Flask (>=1.1.1)", "Flask-WTF (>=0.14.2)", "Jinja2 (>=2.10.3)", "MarkupSafe (>=1.1.1)", "WTForms (>=2.2.1)", "Werkzeug (>=0.16.0)", "itsdangerous (>=1.1.0)", "pypuppetdb (>=2.1.0)", "requests (>=2.22.0)", "CommonMark (==0.9.1)", "pep8 ; extra == 'test'", "coverage ; extra == 'test'", "mock ; extra == 'test'", "pytest ; extra == 'test'", "pytest-pep8 ; extra == 'test'", "pytest-cov ; extra == 'test'", "pytest-mock ; extra == 'test'", "pytest-mypy ; extra == 'test'", "cov-core ; extra == 'test'", "beautifulsoup4 ; extra == 'test'", "bandit ; extra == 'test'", "coveralls ; extra == 'test'", "mypy ; extra == 'test'"], "requires_python": "", "summary": "Web frontend for PuppetDB", "version": "2.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Puppetboard</h1>\n<p><a href=\"https://travis-ci.org/voxpupuli/puppetboard\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f987d9fc4333eb1917d0d3ed54ff0aacca1aa350/68747470733a2f2f7472617669732d63692e6f72672f766f78707570756c692f707570706574626f6172642e7376673f6272616e63683d6d6173746572\"></a></p>\n<p><a href=\"https://coveralls.io/github/voxpupuli/puppetboard?branch=master\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c91b73252f482b9541b83e6d7ed6aecd0322f17a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f766f78707570756c692f707570706574626f6172642f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Puppetboard is a web interface to <a href=\"https://puppet.com/docs/puppetdb/latest/index.html\" rel=\"nofollow\">PuppetDB</a> aiming to replace the reporting functionality of <a href=\"http://docs.puppetlabs.com/dashboard/\" rel=\"nofollow\">Puppet Dashboard</a>.</p>\n<p>Puppetboard relies on the <a href=\"https://pypi.python.org/pypi/pypuppetdb\" rel=\"nofollow\">pypuppetdb</a> library to fetch data from PuppetDB and is built with the help of the <a href=\"http://flask.pocoo.org\" rel=\"nofollow\">Flask</a> microframework.</p>\n<p>As of version 0.1.0 and higher, Puppetboard <strong>requires</strong> PuppetDB 3. Version 0.3.0 has been tested with PuppetDB versions 3 through 6.</p>\n<p>At the current time of writing, Puppetboard supports the following Python versions:</p>\n<ul>\n<li>Python 3.5</li>\n<li>Python 3.6</li>\n<li>Python 3.7</li>\n<li>Python 3.8</li>\n</ul>\n<p><img alt=\"View of a node\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f36a9f16fa83af0ec7cc94bc1fd8228a04147805/73637265656e73686f74732f6f766572766965772e706e67\"></p>\n<h2>Installation</h2>\n<p>Puppetboard is now packaged and available on PyPi.</p>\n<h3>Production</h3>\n<h4>Puppet module</h4>\n<p>There is a <a href=\"https://forge.puppetlabs.com/puppet/puppetboard\" rel=\"nofollow\">Puppet module</a> by <a href=\"https://github.com/nibalizer\" rel=\"nofollow\">Spencer Krum</a> that takes care of installing Puppetboard for you.</p>\n<p>You can install it with:</p>\n<blockquote>\n<p>puppet module install puppet-puppetboard</p>\n</blockquote>\n<p>To see how to get it working with EL7 check out these <a href=\"https://github.com/voxpupuli/puppetboard/blob/master/docs/EL7.md\" rel=\"nofollow\">docs</a>.</p>\n<h4>Manual</h4>\n<p>To install it simply issue the following command:</p>\n<pre>$ pip install puppetboard\n</pre>\n<p>This will install Puppetboard and take care of the dependencies. If you do this Puppetboard will be installed in the so called site-packages or dist-packages of your Python distribution.</p>\n<p>The complete path on Debian and Ubuntu systems would be <code>/usr/local/lib/pythonX.Y/lib/dist-packages/puppetboard</code> and on Fedora would be <code>/usr/lib/pythonX.Y/site-packages/puppetboard</code></p>\n<p>where X and Y are replaced by your major and minor python versions.</p>\n<p>You will need this path in order to configure your HTTPD and WSGI-capable application server.</p>\n<h4>Packages</h4>\n<p>Native packages for your operating system will be provided in the near future.</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr>\n<th align=\"left\">OS</th>\n<th align=\"left\">Status</th>\n<th align=\"left\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><a href=\"https://build.opensuse.org/package/show/systemsmanagement:puppet/python-puppetboard\" rel=\"nofollow\">OpenSuSE 12/13</a></td>\n<td align=\"left\">available</td>\n<td align=\"left\">Maintained on <a href=\"https://build.opensuse.org/package/show/systemsmanagement:puppet/python-puppetboard\" rel=\"nofollow\">OpenSuSE Build Service</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://build.opensuse.org/package/show/systemsmanagement:puppet/python-puppetboard\" rel=\"nofollow\">SuSE LE 11 SP3</a></td>\n<td align=\"left\">available</td>\n<td align=\"left\">Maintained on <a href=\"https://build.opensuse.org/package/show/systemsmanagement:puppet/python-puppetboard\" rel=\"nofollow\">OpenSuSE Build Service</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://aur.archlinux.org/packages/python2-puppetboard/\" rel=\"nofollow\">ArchLinux</a></td>\n<td align=\"left\">available</td>\n<td align=\"left\">Maintained by <a href=\"https://github.com/bastelfreak\" rel=\"nofollow\">Tim Meusel</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.openbsd.org/cgi-bin/cvsweb/ports/www/puppetboard/\" rel=\"nofollow\">OpenBSD</a></td>\n<td align=\"left\">available</td>\n<td align=\"left\">Maintained by <a href=\"https://github.com/buzzdeee\" rel=\"nofollow\">Sebastian Reitenbach</a></td>\n</tr>\n</tbody>\n</table>\n<h4>Docker Images</h4>\n<p>A <a href=\"https://github.com/voxpupuli/puppetboard/blob/master/Dockerfile\" rel=\"nofollow\">Dockerfile</a> was added to the source-code in the 0.2.0 release. An officially image is planned for the 0.2.x series.</p>\n<p>Usage:</p>\n<pre>$ docker build -t puppetboard .\n$ docker run -it -p 9080:80 -v /etc/puppetlabs/puppet/ssl:/etc/puppetlabs/puppet/ssl \\\n  -e PUPPETDB_HOST=&lt;hostname&gt; \\\n  -e PUPPETDB_PORT=8081 \\\n  -e PUPPETDB_SSL_VERIFY=/etc/puppetlabs/puppetdb/ssl/ca.pem \\\n  -e PUPPETDB_KEY=/etc/puppetlabs/puppetdb/ssl/private.pem \\\n  -e PUPPETDB_CERT=/etc/puppetlabs/puppetdb/ssl/public.pem \\\n  -e INVENTORY_FACTS='Hostname,fqdn, IP Address,ipaddress' \\\n  -e ENABLE_CATALOG=True \\\n  -e GRAPH_FACTS='architecture,puppetversion,osfamily' \\\n  puppetboard\n</pre>\n<p>To set a URL prefix you can use the optional <code>PUPPETBOARD_URL_PREFIX</code>\nenvironment variable.</p>\n<h3>Development</h3>\n<p>If you wish to hack on Puppetboard you should fork/clone the Github repository and then install the requirements through:</p>\n<pre>$ pip install -r requirements-test.txt\n</pre>\n<p>You're advised to do this inside a virtualenv specifically created to work on Puppetboard as to not pollute your global Python installation.</p>\n<h2>Configuration</h2>\n<p>The following instructions will help you configure Puppetboard and your HTTPD.</p>\n<h3>Puppet</h3>\n<p>Puppetboard is built completely around PuppetDB which means your environment needs to be configured <a href=\"https://puppet.com/docs/puppetdb/latest/connect_puppet_master.html#step-2-edit-config-files\" rel=\"nofollow\">to do that</a>.</p>\n<p>In order to get the reports to show up in Puppetboard you need to configure your environment to store those reports in PuppetDB. Have a look at <a href=\"https://puppet.com/docs/puppetdb/latest/connect_puppet_master.html#edit-puppetconf\" rel=\"nofollow\">the documentation</a> about this, specifically the <em>Enabling report storage</em> section.</p>\n<h3>Settings</h3>\n<p>Puppetboard will look for a file pointed at by the <code>PUPPETBOARD_SETTINGS</code> environment variable. The file has to be identical to <code>default_settings.py</code> but should only override the settings you need changed.</p>\n<p>You can grab a copy of <code>default_settings.py</code> from the path where pip installed Puppetboard to or by looking in the source checkout.</p>\n<p>If you run PuppetDB and Puppetboard on the same machine the default settings provided will be enough to get you started and you won't need a custom settings file.</p>\n<p>Assuming your webserver and PuppetDB machine are not identical you will at least have to change the following settings:</p>\n<ul>\n<li><code>PUPPETDB_HOST</code></li>\n<li><code>PUPPETDB_PORT</code></li>\n</ul>\n<p>By default PuppetDB requires SSL to be used when a non-local client wants to connect. Therefor you'll also have to supply the following settings:</p>\n<ul>\n<li><code>PUPPETDB_SSL_VERIFY = /path/to/ca/keyfile.pem</code></li>\n<li><code>PUPPETDB_KEY = /path/to/private/keyfile.pem</code></li>\n<li><code>PUPPETDB_CERT = /path/to/public/keyfile.crt</code></li>\n</ul>\n<p>For information about how to generate the correct keys please refer to the <a href=\"http://pypuppetdb.readthedocs.org/en/v0.1.0/quickstart.html#ssl\" rel=\"nofollow\">pypuppetdb documentation</a>. Alternatively is possible to explicitly specify the protocol to be used setting the <code>PUPPETDB_PROTO</code> variable.</p>\n<p>Other settings that might be interesting in no particular order:</p>\n<ul>\n<li><code>SECRET_KEY</code>: Refer to <a href=\"http://flask.pocoo.org/docs/0.10/quickstart/#sessions\" rel=\"nofollow\">Flask documentation</a>, section sessions: How to generate good secret keys, to set the value. Defaults to a random 24-char string generated by os.random(24)</li>\n<li><code>PUPPETDB_TIMEOUT</code>: Defaults to 20 seconds but you might need to increase this value. It depends on how big the results are when querying PuppetDB. This behaviour will change in a future release when pagination will be introduced.</li>\n<li><code>UNRESPONSIVE_HOURS</code>: The amount of hours since the last check-in after which a node is considered unresponsive.</li>\n<li><code>LOGLEVEL</code>: A string representing the loglevel. It defaults to <code>'info'</code> but can be changed to <code>'warning'</code> or <code>'critical'</code> for less verbose logging or <code>'debug'</code> for more information.</li>\n<li><code>ENABLE_QUERY</code>: Defaults to <code>True</code> causing a Query tab to show up in the web interface allowing users to write and execute arbitrary queries against a set of endpoints in PuppetDB. Change this to <code>False</code> to disable this. See <code>ENABLED_QUERY_ENDPOINTS</code> to fine-tune which endpoints are allowed.</li>\n<li><code>ENABLED_QUERY_ENDPOINTS</code>: If <code>ENABLE_QUERY</code> is <code>True</code>, allow to fine tune the endpoints of PuppetDB APIs that can be queried. It must be a list of strings of PuppetDB endpoints for which the query is enabled. See the <code>QUERY_ENDPOINTS</code> constant in the <code>puppetboard.app</code> module for a list of the available endpoints.</li>\n<li><code>GRAPH_TYPE</code>: Specify the type of graph to display.   Default is\npie, other good option is donut.   Other choices can be found here:\n_C3JS_documentation`</li>\n<li><code>GRAPH_FACTS</code>: A list of fact names to tell PuppetBoard to generate a pie-chart on the fact page. With some fact values being unique per node, like ipaddress, uuid, and serial number, as well as structured facts it was no longer feasible to generate a graph for everything.</li>\n<li><code>INVENTORY_FACTS</code>: A list of tuples that serve as the column header and the fact name to search for to create the inventory page. If a fact is not found for a node then <code>undef</code> is printed.</li>\n<li><code>ENABLE_CATALOG</code>: If set to <code>True</code> allows the user to view a node's latest catalog. This includes all managed resources, their file-system locations and their relationships, if available. Defaults to <code>False</code>.</li>\n<li><code>REFRESH_RATE</code>: Defaults to <code>30</code> the number of seconds to wait until the index page is automatically refreshed.</li>\n<li><code>DEFAULT_ENVIRONMENT</code>: Defaults to <code>'production'</code>, as the name suggests, load all information filtered by this environment value.</li>\n<li><code>REPORTS_COUNT</code>: Defaults to <code>10</code> the limit of the number of reports to load on the node or any reports page.</li>\n<li><code>OFFLINE_MODE</code>: If set to <code>True</code> load static assets (jquery, semantic-ui, etc) from the local web server instead of a CDN. Defaults to <code>False</code>.</li>\n<li><code>DAILY_REPORTS_CHART_ENABLED</code>: Enable the use of daily chart graphs when looking at dashboard and node view.</li>\n<li><code>DAILY_REPORTS_CHART_DAYS</code>: Number of days to show history for on the daily report graphs.</li>\n<li><code>DISPLAYED_METRICS</code>: Metrics to show when displaying node summary. Example: <code>'resources.total'</code>, <code>'events.noop'</code>.</li>\n<li><code>TABLE_COUNT_SELECTOR</code>: Configure the dropdown to limit number of hosts to show per page.</li>\n<li><code>LITTLE_TABLE_COUNT</code>: Default number of reports to show when when looking at a node.</li>\n<li><code>NORMAL_TABLE_COUNT</code>: Default number of nodes to show when displaying reports and catalog nodes.</li>\n<li><code>LOCALISE_TIMESTAMP</code>: Normalize time based on localserver time.</li>\n<li><code>WITH_EVENT_NUMBERS</code>: If set to <code>True</code> then Overview and Nodes list shows exact number of changed resources in last report. Otherwise shows only 'some' string if there are resources with given status. Setting to <code>False</code> gives performance benefits, especially in big Puppet environments (more than few hundreds of nodes). Defaults to <code>True</code>.</li>\n<li><code>DEV_LISTEN_HOST</code>: For use with dev.py for development. Default is localhost</li>\n<li><code>DEV_LISTEN_PORT</code>: For use with dev.py for development. Default is 5000</li>\n</ul>\n<h3>Puppet Enterprise</h3>\n<p>Puppet Enterprise maintains a certificate white-list for which certificates are allowed to access data from PuppetDB. This whitelist is maintained in <code>/etc/puppetlabs/puppetdb/certificate-whitelist</code> and you have to add the certificate name to that file.</p>\n<p>Afterwards you'll need to restart <code>pe-puppetdb</code> and you should be able to query PuppetDB freely now.</p>\n<h3>Development</h3>\n<p>You can run it in development mode by simply executing:</p>\n<pre>$ python dev.py\n</pre>\n<p>Use <code>PUPPETBOARD_SETTINGS</code> to change the different settings or patch <code>default_settings.py</code> directly. Take care not to include your local changes on that file when submitting patches for Puppetboard. Place a settings.py file inside the base directory of the git repository that will be used, if the environment variable is not set.</p>\n<h3>Production</h3>\n<p>To run Puppetboard in production we provide instructions for the following scenarios:</p>\n<ul>\n<li>Apache + mod_wsgi</li>\n<li>Apache + mod_passenger</li>\n<li>nginx + uwsgi</li>\n<li>nginx + gunicorn</li>\n</ul>\n<p>If you deploy Puppetboard through a different setup we'd welcome a pull request that adds the instructions to this section.</p>\n<p>Installation On Linux Distros ^^^^^^^^^^^^^^^^^^^^^^^^</p>\n<p><a href=\"docs/Debian-Jessie.md\" rel=\"nofollow\">Debian Jessie Install</a>.</p>\n<h4>Apache + mod_wsgi</h4>\n<p>First we need to create the necessary directories:</p>\n<pre>$ mkdir -p /var/www/html/puppetboard\n</pre>\n<p>Copy Puppetboard's <code>default_settings.py</code> to the newly created puppetboard directory and name the file <code>settings.py</code>. This file will be available at the path Puppetboard was installed, for example: <code>/usr/local/lib/pythonX.Y/lib/dist-packages/puppetboard/default_settings.py</code>.</p>\n<p>Change the settings that need changing to match your environment and delete or comment with a <code>#</code> the rest of the entries.</p>\n<p>If you don't need to change any settings you can skip the creation of the <code>settings.py</code> file entirely.</p>\n<p>Now create a <code>wsgi.py</code> with the following content in the newly created puppetboard directory:</p>\n<pre>from __future__ import absolute_import\nimport os\n\n# Needed if a settings.py file exists\nos.environ['PUPPETBOARD_SETTINGS'] = '/var/www/html/puppetboard/settings.py'\nfrom puppetboard.app import app as application\n</pre>\n<p>Make sure this file is readable by the user the webserver runs as.</p>\n<p>Flask requires a static secret_key, see <a href=\"http://flask.pocoo.org/docs/0.11/quickstart/#sessions\" rel=\"nofollow\">FlaskSession</a>, in order to protect itself from CSRF exploits. The default secret_key in <code>default_settings.py</code> generates a random 24 character string, however this string is re-generated on each request under httpd &gt;= 2.4.</p>\n<p>To generate your own secret_key create a python script with the following content and run it once:</p>\n<pre>import os\nos.urandom(24)\n'\\xfd{H\\xe5&lt;\\x95\\xf9\\xe3\\x96.5\\xd1\\x01O&lt;!\\xd5\\xa2\\xa0\\x9fR\"\\xa1\\xa8'\n</pre>\n<p>Copy the output and add the following to your <code>wsgi.py</code> file:</p>\n<pre>application.secret_key = '&lt;your secret key&gt;'\n</pre>\n<p>The last thing we need to do is configure Apache.</p>\n<p>Here is a sample configuration for Debian and Ubuntu:</p>\n<pre>&lt;VirtualHost *:80&gt;\n    ServerName puppetboard.example.tld\n    WSGIDaemonProcess puppetboard user=www-data group=www-data threads=5\n    WSGIScriptAlias / /var/www/html/puppetboard/wsgi.py\n    ErrorLog /var/log/apache2/puppetboard.error.log\n    CustomLog /var/log/apache2/puppetboard.access.log combined\n\n    Alias /static /usr/local/lib/pythonX.Y/dist-packages/puppetboard/static\n    &lt;Directory /usr/local/lib/pythonX.X/dist-packages/puppetboard/static&gt;\n        Satisfy Any\n        Allow from all\n    &lt;/Directory&gt;\n\n    &lt;Directory /usr/local/lib/pythonX.Y/dist-packages/puppetboard&gt;\n        WSGIProcessGroup puppetboard\n        WSGIApplicationGroup %{GLOBAL}\n        Order deny,allow\n        Allow from all\n    &lt;/Directory&gt;\n&lt;/VirtualHost&gt;\n</pre>\n<p>Here is a sample configuration for Fedora:</p>\n<pre>&lt;VirtualHost *:80&gt;\n    ServerName puppetboard.example.tld\n    WSGIDaemonProcess puppetboard user=apache group=apache threads=5\n    WSGIScriptAlias / /var/www/html/puppetboard/wsgi.py\n    ErrorLog logs/puppetboard-error_log\n    CustomLog logs/puppetboard-access_log combined\n\n    Alias /static /usr/lib/pythonX.Y/site-packages/puppetboard/static\n    &lt;Directory /usr/lib/pythonX.Y/site-packages/puppetboard/static&gt;\n        Satisfy Any\n        Allow from all\n    &lt;/Directory&gt;\n\n    &lt;Directory /usr/lib/pythonX.Y/site-packages/puppetboard&gt;\n        WSGIProcessGroup puppetboard\n        WSGIApplicationGroup %{GLOBAL}\n        Require all granted\n    &lt;/Directory&gt;\n&lt;/VirtualHost&gt;\n</pre>\n<p>Note the directory path, it's the path to where pip installed Puppetboard; X.Y must be replaced with your python version. We also alias the <code>/static</code> path so that Apache will serve the static files like the included CSS and Javascript.</p>\n<h4>Apache + mod_passenger</h4>\n<p>It is possible to run Python applications through Passenger. Passenger has supported this since version 3 but it's considered experimental. Since the release of Passenger 4 it's a 'core' feature of the product.</p>\n<p>Performance wise it also leaves something to be desired compared to the mod_wsgi powered solution. Application start up is noticeably slower and loading pages takes a fraction longer.</p>\n<p>First we need to create the necessary directories:</p>\n<pre>$ mkdir -p /var/www/puppetboard/{tmp,public}\n</pre>\n<p>Copy Puppetboard's <code>default_settings.py</code> to the newly created puppetboard directory and name the file <code>settings.py</code>. This file will be available at the path Puppetboard was installed, for example: <code>/usr/local/lib/pythonX.Y/lib/dist-packages/puppetboard/default_settings.py</code>.</p>\n<p>Change the settings that need changing to match your environment and delete or comment with a <code>#</code> the rest of the entries.</p>\n<p>If you don't need to change any settings you can skip the creation of the <code>settings.py</code> file entirely.</p>\n<p>Now create a <code>passenger_wsgi.py</code> with the following content in the newly created puppetboard directory:</p>\n<pre>from __future__ import absolute_import\nimport os\nimport logging\n\nlogging.basicConfig(filename='/path/to/file/for/logging', level=logging.INFO)\n\n# Needed if a settings.py file exists\nos.environ['PUPPETBOARD_SETTINGS'] = '/var/www/puppetboard/settings.py'\n\ntry:\n    from puppetboard.app import app as application\nexcept Exception, inst:\n    logging.exception(\"Error: %s\", str(type(inst)))\n</pre>\n<p>Unfortunately due to the way Passenger works we also need to configure logging inside <code>passenger_wsgi.py</code> else application start up issues won't be logged.</p>\n<p>This means that even though <code>LOGLEVEL</code> might be set in your <code>settings.py</code> this setting will take precedence over it.</p>\n<p>Now the only thing left to do is configure Apache:</p>\n<pre>&lt;VirtualHost *:80&gt;\n    ServerName puppetboard.example.tld\n    DocumentRoot /var/www/puppetboard/public\n    ErrorLog /var/log/apache2/puppetboard.error.log\n    CustomLog /var/log/apache2/puppetboard.access.log combined\n\n    RackAutoDetect On\n    Alias /static /usr/local/lib/pythonX.Y/dist-packages/puppetboard/static\n&lt;/VirtualHost&gt;\n</pre>\n<p>Note the <code>/static</code> alias path, it's the path to where pip installed Puppetboard. This is needed so that Apache will serve the static files like the included CSS and Javascript.</p>\n<h4>nginx + uwsgi</h4>\n<p>A common Python deployment scenario is to use the uwsgi application server (which can also serve rails/rack, PHP, Perl and other applications) and proxy to it through something like nginx or perhaps even HAProxy.</p>\n<p>uwsgi has a feature that every instance can run as its own user. In this example we'll use the <code>www-data</code> user but you can create a separate user solely for running Puppetboard and use that instead.</p>\n<p>First we need to create the necessary directories:</p>\n<pre>$ mkdir -p /var/www/puppetboard\n</pre>\n<p>Copy Puppetboard's <code>default_settings.py</code> to the newly created puppetboard directory and name the file <code>settings.py</code>. This file will be available at the path Puppetboard was installed, for example: <code>/usr/local/lib/pythonX.Y/lib/dist-packages/puppetboard/default_settings.py</code>.</p>\n<p>Change the settings that need changing to match your environment and delete or comment with a <code>#</code> the rest of the entries.</p>\n<p>If you don't need to change any settings you can skip the creation of the <code>settings.py</code> file entirely.</p>\n<p>Now create a <code>wsgi.py</code> with the following content in the newly created puppetboard directory:</p>\n<pre>from __future__ import absolute_import\nimport os\n\n# Needed if a settings.py file exists\nos.environ['PUPPETBOARD_SETTINGS'] = '/var/www/puppetboard/settings.py'\nfrom puppetboard.app import app as application\n</pre>\n<p>Make sure this file is owned by the user and group the uwsgi instance will run as.</p>\n<p>Now we need to start uwsgi:</p>\n<pre>$ uwsgi --socket :9090 --wsgi-file /var/www/puppetboard/wsgi.py\n</pre>\n<p>Feel free to change the port to something other than <code>9090</code>.</p>\n<p>The last thing we need to do is configure nginx to proxy the requests:</p>\n<pre>upstream puppetboard {\n    server 127.0.0.1:9090;\n}\n\nserver {\n    listen      80;\n    server_name puppetboard.example.tld;\n    charset     utf-8;\n\n    location /static {\n        alias /usr/local/lib/pythonX.Y/dist-packages/puppetboard/static;\n    }\n\n    location / {\n        uwsgi_pass puppetboard;\n        include    /path/to/uwsgi_params/probably/etc/nginx/uwsgi_params;\n    }\n}\n</pre>\n<p>If all went well you should now be able to access to Puppetboard. Note the <code>/static</code> location block to make nginx serve static files like the included CSS and Javascript.</p>\n<p>Because nginx natively supports the uwsgi protocol we use <code>uwsgi_pass</code> instead of the traditional <code>proxy_pass</code>.</p>\n<p>nginx + gunicorn ^^^^^^^^^^^^^ You can use gunicorn instead of uwsgi if you prefer, the process doesn't differ too much. As we can't use <code>uwsgi_pass</code> with gunicorn, the nginx configuration file is going to differ a bit:</p>\n<pre>server {\n    listen      80;\n    server_name puppetboard.example.tld;\n    charset     utf-8;\n\n    location /static {\n        alias /usr/local/lib/pythonX.Y/dist-packages/puppetboard/static;\n    }\n\n    location / {\n        add_header Access-Control-Allow-Origin *;\n        proxy_pass_header Server;\n        proxy_set_header Host $http_host;\n        proxy_redirect off;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Scheme $scheme;\n        proxy_connect_timeout 10;\n        proxy_read_timeout 10;\n        proxy_pass http://127.0.0.1:9090;\n    }\n}\n</pre>\n<p>Now, for running it with gunicorn:</p>\n<pre>$ cd /usr/local/lib/pythonX.Y/dist-packages/puppetboard\n$ gunicorn -b 127.0.0.1:9090 puppetboard.app:app\n</pre>\n<p>As we may want to serve in the background, and we need <code>PUPPETBOARD_SETTINGS</code> as an environment variable, is recommendable to run this under supervisor. An example supervisor config with basic settings is the following:</p>\n<pre>[program:puppetboard]\ncommand=gunicorn -b 127.0.0.1:9090 puppetboard.app:app\nuser=www-data\nstdout_logfile=/var/log/supervisor/puppetboard/puppetboard.out\nstderr_logfile=/var/log/supervisor/puppetboard/puppetboard.err\nenvironment=PUPPETBOARD_SETTINGS=\"/var/www/puppetboard/settings.py\"\n</pre>\n<p>For newer systems with systemd (for example CentOS7), you can use the following service file (<code>/usr/lib/systemd/system/gunicorn@.service</code>):</p>\n<pre>[Unit]\nDescription=gunicorn daemon for %i\nAfter=network.target\n\n[Service]\nExecStart=/usr/bin/gunicorn --config /etc/sysconfig/gunicorn/%i.conf %i\nExecReload=/bin/kill -s HUP $MAINPID\nPrivateTmp=true\nUser=gunicorn\nGroup=gunicorn\n</pre>\n<p>And the corresponding gunicorn config (<code>/etc/sysconfig/gunicorn/puppetboard.app\\:app.conf</code>):</p>\n<pre>import multiprocessing\n\nbind    = '127.0.0.1:9090'\nworkers = multiprocessing.cpu_count() * 2 + 1\nchdir   = '/usr/lib/pythonX.Y/site-packages/puppetboard'\nraw_env = ['PUPPETBOARD_SETTINGS=/var/www/puppetboard/settings.py', 'http_proxy=']\n</pre>\n<h3>Security</h3>\n<p>If you wish to make users authenticate before getting access to Puppetboard you can use one of the following configuration snippets.</p>\n<h4>Apache</h4>\n<p>Inside the <code>VirtualHost</code>:</p>\n<pre>&lt;Location \"/\"&gt;\n    AuthType Basic\n    AuthName \"Puppetboard\"\n    Require valid-user\n    AuthBasicProvider file\n    AuthUserFile /path/to/a/file.htpasswd\n&lt;/Location&gt;\n</pre>\n<h4>nginx</h4>\n<p>Inside the <code>location / {}</code> block that has the <code>uwsgi_pass</code> directive:</p>\n<pre>auth_basic \"Puppetboard\";\nauth_basic_user_file /path/to/a/file.htpasswd;\n</pre>\n<h2>Getting Help</h2>\n<p>This project is still very new so it's not inconceivable you'll run into issues.</p>\n<p>For bug reports you can file an <a href=\"https://github.com/voxpupuli/puppetboard/issues\" rel=\"nofollow\">issue</a>. If you need help with something feel free to hit up the maintainers by e-mail or on IRC. They can usually be found on <a href=\"http://www.ircnet.org\" rel=\"nofollow\">IRCnet</a> and <a href=\"http://freenode.net\" rel=\"nofollow\">Freenode</a> and idles in #puppetboard.</p>\n<p>There's now also the #puppetboard channel on <a href=\"http://freenode.net\" rel=\"nofollow\">Freenode</a> where we hang out and answer questions related to pypuppetdb and Puppetboard.</p>\n<p>There is also a <a href=\"https://groups.google.com/forum/?hl=en#!forum/puppet-community\" rel=\"nofollow\">GoogleGroup</a> to exchange questions and discussions. Please note that this group contains discussions of other Puppet Community projects.</p>\n<h2>Third party</h2>\n<p>Some people have already started building things with and around Puppetboard.</p>\n<p><a href=\"https://github.com/hunner\" rel=\"nofollow\">Hunter Haugen</a> has provided a Vagrant setup:</p>\n<ul>\n<li><a href=\"https://github.com/hunner/puppetboard-vagrant\" rel=\"nofollow\">https://github.com/hunner/puppetboard-vagrant</a></li>\n</ul>\n<h3>Packages</h3>\n<ul>\n<li>An OpenBSD port is being maintained by <a href=\"https://github.com/buzzdeee\" rel=\"nofollow\">Sebastian Reitenbach</a> and can be viewed <a href=\"http://www.openbsd.org/cgi-bin/cvsweb/ports/www/puppetboard/\" rel=\"nofollow\">here</a>.</li>\n<li>A Docker image is being maintained by <a href=\"https://github.com/juliengk\" rel=\"nofollow\">Julien K.</a> and can be viewed <a href=\"https://registry.hub.docker.com/u/kassis/puppetboard/\" rel=\"nofollow\">here</a>.</li>\n</ul>\n<h2>Contributing</h2>\n<p>We welcome contributions to this project. However, there are a few ground rules contributors should be aware of.</p>\n<h3>License</h3>\n<p>This project is licensed under the Apache v2.0 License. As such, your contributions, once accepted, are automatically covered by this license.</p>\n<h3>Commit messages</h3>\n<p>Write decent commit messages. Don't use swear words and refrain from uninformative commit messages as 'fixed typo'.</p>\n<p>The preferred format of a commit message:</p>\n<pre><code>docs/quickstart: Fixed a typo in the Nodes section.\n\nIf needed, elaborate further on this commit. Feel free to write a\ncomplete blog post here if that helps us understand what this is\nall about.\n\nFixes #4 and resolves #2.\n</code></pre>\n<p>If you'd like a more elaborate guide on how to write and format your commit messages have a look at this post by <a href=\"http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html\" rel=\"nofollow\">Tim Pope</a>.</p>\n<h2>Examples</h2>\n<p><a href=\"https://github.com/visibilityspots/vagrant-puppet/tree/puppetboard\" rel=\"nofollow\">vagrant-puppetboard</a></p>\n<p>A vagrant project to show off the puppetboard functionality using the puppetboard puppet module on a puppetserver with puppetdb.</p>\n<h2>Screenshots</h2>\n<p><img alt=\"Overview / Index / Homepage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f36a9f16fa83af0ec7cc94bc1fd8228a04147805/73637265656e73686f74732f6f766572766965772e706e67\"></p>\n<p><img alt=\"Nodes view, all active nodes\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47d95cf564bbda0b817818d87106e5ccbbf28277/73637265656e73686f74732f6e6f6465732e706e67\"></p>\n<p><img alt=\"Single node page / overview\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf6e9d71e37078d68325bbca37a5520eca5f4473/73637265656e73686f74732f6e6f64652e706e67\"></p>\n<p><img alt=\"Report view\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/42dfd38580770ac04217073f1221d2dc67f28f61/73637265656e73686f74732f7265706f72742e706e67\"></p>\n<p><img alt=\"Facts view\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/36e045775033a2cca80cb37263712e594b581823/73637265656e73686f74732f66616374732e706e67\"></p>\n<p><img alt=\"Single fact, with graphs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd0de5cc638ffe1c242ae78e6ea6df44a6391da0/73637265656e73686f74732f666163742e706e67\"></p>\n<p><img alt=\"All nodes that have this fact with that value\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0336396bd70a56e5ac91f7339c7a0ea4b919c87e/73637265656e73686f74732f666163745f76616c75652e706e67\"></p>\n<p><img alt=\"Metrics view\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3036ac587a0e3bccc5b87477b2fc67065cb3fc3b/73637265656e73686f74732f6d6574726963732e706e67\"></p>\n<p><img alt=\"Single metric\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f31e0f177556e692a7bc8febd771c1fcf474acc/73637265656e73686f74732f6d65747269632e706e67\"></p>\n<p><img alt=\"Query view\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f33ccbf00a863a6ea6563c273e2c9129fa6edec/73637265656e73686f74732f71756572792e706e67\"></p>\n<p><img alt=\"Error page\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/39671348f1e4f89da28024bb807a00313d0c00cc/73637265656e73686f74732f62726f6b656e2e706e67\"></p>\n<h1>Changelog</h1>\n<p>This is the changelog for Puppetboard.</p>\n<h2>Development</h2>\n<h2>2.1.2</h2>\n<ul>\n<li>Puppet DB 5.2.13 requires v2 metrics</li>\n</ul>\n<h2>2.1.1</h2>\n<ul>\n<li>Added support for new metrics API <code>v2</code> on PuppetDB &gt;= <code>5.3.11</code> and &lt; <code>6.0.0</code> (#558)</li>\n<li>Added Python 3.5 back into test matrix (#559)</li>\n<li>Fixed bug in <code>dailyreport.js</code> that caused it not to render when served under a non-default virtual host (#557)</li>\n</ul>\n<h2>2.1.0</h2>\n<ul>\n<li>Fixed Puppetboard's usage for the new metrics v2 API both on the home page for computing the average resources/node and the <code>Metrics</code> listing page. This change now supports the changes in PuppetDB &gt;= 6.9.1 (<a href=\"https://puppet.com/security/cve/CVE-2020-7943/\" rel=\"nofollow\">https://puppet.com/security/cve/CVE-2020-7943/</a>)</li>\n<li>Added backwards compatability support for both the metric <code>v1</code> and <code>v2</code> endpoints\ndepending on the version of the server. Any PuppetDB &gt;= <code>6.9.1</code> will be queried with\nthe <code>v2</code> endpoint automatically (because <code>v1</code> is disabled from here forward). Any\nPuppetDB &lt;= <code>6.9.0</code> will use <code>v1</code>.</li>\n<li>pypuppetdb: raise version requirement <code>&gt;=2.1.0</code> because changes were needed in this library to support the metrics v2 fixes.</li>\n<li>app.py: Added python2 backwards compatability fix for importing <code>urllib</code>.</li>\n</ul>\n<h2>2.0.0</h2>\n<ul>\n<li>Dockerfile: Switch to python:3.7-alpine image</li>\n<li>pypuppetdb: raise version requirement <code>&gt;=1.2.0</code> to <code>&gt;=2.0.0</code></li>\n<li>Drop support for python2.7 and python3.5 &amp; Add python3.8 to buildmatrix</li>\n<li>Upgrade of tests requirements + resolving current deprecation warnings</li>\n<li>Ignore facts environment for compatibility and performance</li>\n<li>Adding mypy + Cleanup + CommonMark upgrade to 0.9.1</li>\n<li>Update docker and fix coveralls not running.</li>\n<li>Cast inventory data toString</li>\n</ul>\n<h2>1.1.0</h2>\n<ul>\n<li>Move to Python 3.6 for Docker</li>\n<li>Fix problem loading daily chart on node page</li>\n<li>fix gunicorn parameter and allow to define workers in docker</li>\n<li>Add feature for better performance in big Puppet envs</li>\n<li>bundle requirements.txt for tests and docker</li>\n</ul>\n<h2>1.0.0</h2>\n<ul>\n<li>CI enhancements</li>\n<li>Allow to configure which PuppetDB endpoints are allowed</li>\n<li>Update c3 to 4.22</li>\n<li>Add basic health check endpoint</li>\n<li>Allow to force the PuppetDB connection protocol</li>\n<li>Update jquery-tablesort to 0.0.11</li>\n<li>Fix bug breaking date/time sort</li>\n<li>Fix formatvalue for list of dicts</li>\n<li>Modify date sort to handle failed</li>\n<li>Include template files for altering Semantic css and Google fonts</li>\n<li>Make 320px the max width for columns</li>\n<li>If query is None don't perform add on it</li>\n<li>Query using producer_timestamp index vs. start_time</li>\n<li>Add missing components for building source packages</li>\n<li>Add support for URL prefixes to Docker image</li>\n</ul>\n<h2>0.3.0</h2>\n<ul>\n<li>Core UI Rework</li>\n<li>Update to pypuppetdb 0.3.3</li>\n<li>Fix sorty on data for index</li>\n<li>Update debian documentation</li>\n<li>Offline mode fix</li>\n<li>Fix fact attribute error on paths</li>\n<li>Enhanced testing</li>\n<li>Radiator CSS uses same coloring</li>\n<li>Markdown in config version</li>\n<li>Update Flask</li>\n<li>Cleanup requirements.txt</li>\n<li>Update package maintainer for OpenBSD</li>\n</ul>\n<h2>0.2.1</h2>\n<ul>\n<li>Daily Charts</li>\n<li>Fixed missing javascript files on radiator view.</li>\n<li>TravisCI and Coveralls integration.</li>\n<li>Fixed app crash in catalog view.</li>\n<li>Upgrade pypuppetdb to 0.3.2</li>\n<li>Enhanced queries for Node and Report (#271)</li>\n<li>Optimize Inventory Code.</li>\n<li>Use certname instead of hostname to identify nodes when applicable.</li>\n<li>Add environment filter for facts.</li>\n<li>Update cs.js to 0.4.11</li>\n<li>Fix radiator column alignment</li>\n<li>Security checks with bandit</li>\n<li>Dockerfile now uses gunicorn and environment variables for configuration.</li>\n<li>Handle division by zero errors.</li>\n<li>Implement new Jquery Datatables.</li>\n<li>JSON output for radiator. * Move javascript to head tag.</li>\n<li>Optimize reports and node page queries.</li>\n<li>Fix all environments for PuppetDB 3.2</li>\n<li>Fact graph chart now configurable.</li>\n<li>Support for Flask 0.12 and Jinja2 2.9</li>\n<li>Fix misreporting noops as changes.</li>\n</ul>\n<h2>0.2.0</h2>\n<ul>\n<li>Full support for PuppetDB 4.x</li>\n<li>Updating Semantic UI to 2.1.8</li>\n<li>Updating Flask-WTF requirements to 0.12</li>\n<li>Updating WTForms to 2.x</li>\n<li>Restored CSRF protection on the Query Tab form</li>\n<li>Updating Pypuppetdb requirement to 0.3.x</li>\n<li>New configuration option OVERVIEW_FILTER allows users to add custom PuppetDB query clauses to include/exclude nodes displayed on the index page</li>\n<li>Adding Radiator view similar to what is available in Puppet Dashboard</li>\n<li>Adding a drop-down list in the Reports tab to configure the number of reports displayed</li>\n<li>Removing unneeded report_latest() endpoint. This endpoint was deprecated with the addition of the latest_report_hash field in the Nodes PuppetDB endpoint</li>\n<li>Enhancing Report pagination</li>\n<li>Using the OOP Query Builder available in Pypuppetdb 0.3.x</li>\n<li>Allowing PQL queries in the Query Tab</li>\n<li>Fixing double url-quoting bug on Metric endpodint calls</li>\n<li>Adding a Boolean field to the Query form to prettyprint responses from PuppetDB</li>\n<li>Fixing corner-case where empty environments would trigger a ZeroDivisionError due to the Number of Nodes divided by the Number of Resources calculation</li>\n<li>Adding additional logging in utils.py</li>\n</ul>\n<h2>0.1.2</h2>\n<ul>\n<li>Add configuration option to set the default environment with new configuration option DEFAULT_ENVIRONMENT, defaults to 'production'.</li>\n<li>Loading all available environments with every page load.</li>\n<li>Adding an \"All Environments\" item to the Environments dropdown to remove all environment filters on PuppetDB data.</li>\n<li>Updating README.rst to update links and describe new configuration options.</li>\n<li>Fixing Query form submission problem by disabling CSRF protection. Needs to be re-implemented.</li>\n</ul>\n<p>* Updating the pypuppetdb requirement to &gt;= 0.2.1, using information<br>\navailable in PuppetDB 3.2 and higher</p>\n<p><em>* latest_report_hash and latest_report_status fields from the Nodes endpoint, this effectively deprecates the report_latest() function</em>* code_id from the Catalogs endpoint (current unused) * Adding a automatic refresh on the overview page to reload the page every X number of seconds, defaults to 30. This is configurable with the configuration option REFRESH_RATE * Fixing the table alignment in the catalog_compare() page by switching to fixed tables from basic tables. * Using colors similar to Puppet Dashboard and Foreman for the status counts sections</p>\n<h2>0.1.1</h2>\n<ul>\n<li>Fix bug where the reports template was not generating the report links with the right environment</li>\n</ul>\n<h2>0.1.0</h2>\n<ul>\n<li>Requires pypuppetdb &gt;= 0.2.0</li>\n<li>Drop support for PuppetDB 2 and earlier</li>\n<li>Full support for PuppetDB 3.x</li>\n<li>The first directory location is now a Puppet environment which is filtered on all supported queries. Users can browse different environments with a select field in the top NavBar</li>\n<li>Using limit, order_by and offset parameters adding pagaination on the Reports page (available in the NavBar). Functionality is available to pages that accept a page attribute.</li>\n<li>The report page now directly queries pypuppetdb to match the report_id value with the report hash or configuration_version fields.</li>\n<li>Catching and aborting with a 404 if the report and report_latest function queries do not return a generator object.</li>\n<li>Adding a Catalogs page (similar to the Nodes page) with a form to compare one node's catalog information with that of another node.</li>\n<li>Updating the Query Endpoints for the Query page.</li>\n<li>Adding to <code>templates/_macros.html</code> status_counts that shows node/report status information, like what is avaiable on the index and nodes pages, available to the reports pages and tables also.</li>\n<li>Showing report logs and metrics in the report page.</li>\n<li>Removing <code>limit_reports</code> from <code>utils.py</code> because this helper function has been replaced by the limit PuppetDB paging function.</li>\n</ul>\n<p><strong>Known Issues</strong></p>\n<ul>\n<li>fact_value pages rendered from JSON valued facts return no results. A more sophisticated API is required to make use of JSON valued facts (through the factsets, fact-paths and/or fact-contents endpoints for example)</li>\n</ul>\n<h2>0.0.5</h2>\n<ul>\n<li>Now requires WTForms versions less than 2.0</li>\n<li>Adding a Flask development server in <code>dev.py</code>.</li>\n<li>Adding CSRF protection VIA the flask_wtf CsrfProtect object.</li>\n<li>Allowing users to configure the report limit on pages where reports are listed with the LIMIT_REPORTS configuration option.</li>\n<li>Adding an inventory page to users to be able to see all available nodes and a configure lists of facts to display VIA the INVENTORY_FACTS configuration option.</li>\n<li>Adding a page to view a node's catalog information if enabled, disabled by default. Can be changed with the ENABLE_CATALOG configuration attribute.</li>\n<li>New configuration option GRAPH_FACTS allows the user to choose which graphs will generate pie on the fact pages.</li>\n<li>Replacing Chart.js with c3.js and d3.js.</li>\n<li>Adding Semantic UI 0.16.1 and removing unused bootstrap styles.</li>\n<li>Adding an OFFLINE_MODE configuration option to load local assets or from a CDN service. This is useful in environments without internet access.</li>\n</ul>\n<h2>0.0.4</h2>\n<ul>\n<li>Fix the sorting of the different tables containing facts.</li>\n<li>Fix the license in our <code>setup.py</code>. The license shouldn't be longer than 200 characters. We were including the full license tripping up tools like bdist_rpm.</li>\n</ul>\n<h2>0.0.3</h2>\n<p>This release introduces a few big changes. The most obvious one is the revamped\nOverview page which has received significant love. Most of the work was done by\nJulius H\u00e4rtl. The Nodes tab has been given a slight face-lift too.</p>\n<p>Other changes:</p>\n<ul>\n<li>This release depends on the new pypuppetdb 0.1.0. Because of this the SSL configuration options have been changed:\n<ul>\n<li><code>PUPPETDB_SSL</code> is gone and replaced by <code>PUPPETDB_SSL_VERIFY</code> which now defaults to <code>True</code>. This only affects connections to PuppetDB that happen over SSL.</li>\n<li>SSL is automatically enabled if both <code>PUPPETDB_CERT</code> and <code>PUPPETDB_KEY</code> are provided.</li>\n</ul>\n</li>\n<li>Display of deeply nested metrics and query results have been fixed.</li>\n<li>Average resources per node metric is now displayed as a natural number.</li>\n<li>A link back to the node has been added to the reports.</li>\n<li>A few issues with reports have been fixed.</li>\n<li>A new setting called <code>UNRESPONSIVE_HOURS</code> has been added which denotes the amount of hours after which Puppetboard will display the node as unreported if it hasn't checked in. We default to <code>2</code> hours.</li>\n<li>The event message can now be viewed by clicking on the event.</li>\n</ul>\n<p>Puppetboard is now neatly packaged up and available on PyPi. This should\nsignificantly help reduce the convoluted installation instructions people had\nto follow.</p>\n<p>Updated installation instructions have been added on how to install from PyPi\nand how to configure your HTTPD.</p>\n<h2>0.0.2</h2>\n<p>In this release we've introduced a few new things. First of all we now require pypuppetdb version 0.0.4 or later which includes support for the v3 API introduced with PuppetDB 1.5.</p>\n<p>Because of changes in PuppetDB 1.5 and therefor in pypuppetdb users of the v2 API, regardless of the PuppetDB version, will no longer be able to view reports or events.</p>\n<p>In light of this the following settings have been removed:</p>\n<ul>\n<li><code>PUPPETDB_EXPERIMENTAL</code></li>\n</ul>\n<p>Two new settings have been added:</p>\n<ul>\n<li><code>PUPPETDB_API</code>: an integer, defaulting to <code>3</code>, representing the API version we want to use.</li>\n<li><code>ENABLE_QUERY</code>: a boolean, defaulting to <code>True</code>, on wether or not to be able to use the Query tab.</li>\n</ul>\n<p>We've also added a few new features:</p>\n<ul>\n<li>Thanks to some work done during PuppetConf together with Nick Lewis (from Puppet Labs) we now expose all of PuppetDB's metrics in the Metrics tab. The formatting isn't exactly pretty but it's a start.</li>\n<li>Spencer Krum added the graphing capabilities to the Facts tab.</li>\n<li>Daniel Lawrence added a feature so that facts on the node view are clickable and take you to the complete overview of that fact for your infrastructure and made the nodes in the complete facts list clickable so you can jump to a node.</li>\n<li>Klavs Klavsen contributed some documentation on how to run Puppetboard with Passenger.</li>\n</ul>\n<h2>0.0.1</h2>\n<p>Initial release.</p>\n\n          </div>"}, "last_serial": 6975707, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "d4b9384d61438ce54c715812a5fb17a1", "sha256": "a49abbf3b422fa54fd1309b12e9e2af86b381f2ffa6a3fe8d77984dae2fc2964"}, "downloads": -1, "filename": "puppetboard-0.0.3.tar.gz", "has_sig": false, "md5_digest": "d4b9384d61438ce54c715812a5fb17a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57280, "upload_time": "2014-01-16T11:02:55", "upload_time_iso_8601": "2014-01-16T11:02:55.422973Z", "url": "https://files.pythonhosted.org/packages/5a/29/fcbec60cc83fc3e875d276ec51dbf28cb460ebc9cbaa25d6a969fde07f7d/puppetboard-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "441d98db4126f7cf5c7394c8d3cd90b4", "sha256": "bceca6939f520a8cbd290c5d22174700332cb66493d09e5001ee80cb13ac62c8"}, "downloads": -1, "filename": "puppetboard-0.0.4.tar.gz", "has_sig": false, "md5_digest": "441d98db4126f7cf5c7394c8d3cd90b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53854, "upload_time": "2014-01-21T14:14:48", "upload_time_iso_8601": "2014-01-21T14:14:48.733756Z", "url": "https://files.pythonhosted.org/packages/39/66/38550954008bbe493379619f1f5b48b87da273262bba4d81dc897212211e/puppetboard-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "f38924551b2b05ec0a3c1c1c650251d1", "sha256": "ee6da440c6425a1b746bb3ae498a7b9c2003952d7260d5ee25f1cdf997b56969"}, "downloads": -1, "filename": "puppetboard-0.0.5.tar.gz", "has_sig": false, "md5_digest": "f38924551b2b05ec0a3c1c1c650251d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 589918, "upload_time": "2015-10-21T22:56:22", "upload_time_iso_8601": "2015-10-21T22:56:22.030321Z", "url": "https://files.pythonhosted.org/packages/7d/2a/c832cb3277d919e13d3e84c337833fb99a54144a12733bea289e63bfcb42/puppetboard-0.0.5.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "72b1775e5b7aae79857839de3173632b", "sha256": "0a4ceb5156779b4e620e099e01e018c4cceed2ce4627b3d39cacaa73e60e22b0"}, "downloads": -1, "filename": "puppetboard-0.1.0.tar.gz", "has_sig": false, "md5_digest": "72b1775e5b7aae79857839de3173632b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 595077, "upload_time": "2015-11-10T01:55:46", "upload_time_iso_8601": "2015-11-10T01:55:46.488715Z", "url": "https://files.pythonhosted.org/packages/fd/35/659f4a186afdfe9a9d6ce266c6289e9310841bfcd3b6dfdb14aec11b02ad/puppetboard-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "513b51d2bd5729664e34b7fce25f6695", "sha256": "0ecf680f1036441fe9302a83c14b783262eefaba692a57a6dbc3e19db6306bbd"}, "downloads": -1, "filename": "puppetboard-0.1.1.tar.gz", "has_sig": false, "md5_digest": "513b51d2bd5729664e34b7fce25f6695", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 595075, "upload_time": "2015-11-13T00:50:51", "upload_time_iso_8601": "2015-11-13T00:50:51.418230Z", "url": "https://files.pythonhosted.org/packages/36/85/d47f56b613ae48cfe8fb3f9ec1b6f8fc788c0732e73655f2b60ac989381b/puppetboard-0.1.1.tar.gz", "yanked": false}], "0.1.2": [], "0.1.3": [{"comment_text": "", "digests": {"md5": "6672bbc1592d3563a0fb917c594a19f9", "sha256": "e41b0ee5f4dead765922b4247f6d3a05f6373040aae2690035cca34f3f2f72cc"}, "downloads": -1, "filename": "puppetboard-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6672bbc1592d3563a0fb917c594a19f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 598857, "upload_time": "2016-03-22T00:31:19", "upload_time_iso_8601": "2016-03-22T00:31:19.330566Z", "url": "https://files.pythonhosted.org/packages/a4/1f/e1423b4bb9f6439df0e816b5befdbcc9205c19297a73aa145e1abc9e42fe/puppetboard-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4dbf3e3305eb421ea6952f3aabe40ab1", "sha256": "25f4a4d847bdaf9125add6a42c802cd39b15350d8d01a21d63177367c4a78e02"}, "downloads": -1, "filename": "puppetboard-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4dbf3e3305eb421ea6952f3aabe40ab1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 778843, "upload_time": "2016-06-29T00:45:38", "upload_time_iso_8601": "2016-06-29T00:45:38.838837Z", "url": "https://files.pythonhosted.org/packages/42/05/947aed8b8d0cbdea06ff3e82f855d8a0b7be6e908ba8b1bded64c107eea6/puppetboard-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0e07aaf30ecefee8bc1e7822df86f509", "sha256": "1471c2555c9dbb3a651d64fb428fac3591caf1e70ed45f3cad6455044dc6a8d1"}, "downloads": -1, "filename": "puppetboard-0.2.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "0e07aaf30ecefee8bc1e7822df86f509", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 844424, "upload_time": "2017-02-03T12:24:55", "upload_time_iso_8601": "2017-02-03T12:24:55.323365Z", "url": "https://files.pythonhosted.org/packages/b3/b8/6d658dad27e02b365f1f231a8913f372f2fb1d6a01b688e70b9de0697dc3/puppetboard-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec4634f2ad5a3d10fa70fec14537d96a", "sha256": "c3dc8679274306660cf3d9892f7202e96b6b7ec7ed7048e5a2d68481789cab76"}, "downloads": -1, "filename": "puppetboard-0.2.1.tar.gz", "has_sig": true, "md5_digest": "ec4634f2ad5a3d10fa70fec14537d96a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 846574, "upload_time": "2017-02-03T12:24:58", "upload_time_iso_8601": "2017-02-03T12:24:58.859432Z", "url": "https://files.pythonhosted.org/packages/0c/df/116a5fef08fc08e207ea47760a4defa7604102caf61e285a55b23a0b7da6/puppetboard-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "499e98e4c891b1e0a7b3dbe6b2a13fe4", "sha256": "4c6892bf3a1fc308a98e9b6343a503202dfaafbc5ce2c4e1a99aaf9a7490bfda"}, "downloads": -1, "filename": "puppetboard-0.2.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "499e98e4c891b1e0a7b3dbe6b2a13fe4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 844262, "upload_time": "2017-03-20T18:26:18", "upload_time_iso_8601": "2017-03-20T18:26:18.862099Z", "url": "https://files.pythonhosted.org/packages/39/61/232691a3ad578df41bb57b8f352085687c5ab13b9d91c0a98c35f01adf9a/puppetboard-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f2cfcaef52b0ea52bb23f6ebfc57b3a", "sha256": "60de9c2e92ea47e3d6bcfbcff48de6791760b31bae33218092ee9f2ac87825b4"}, "downloads": -1, "filename": "puppetboard-0.2.2.tar.gz", "has_sig": true, "md5_digest": "9f2cfcaef52b0ea52bb23f6ebfc57b3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 846428, "upload_time": "2017-03-20T18:26:23", "upload_time_iso_8601": "2017-03-20T18:26:23.908782Z", "url": "https://files.pythonhosted.org/packages/17/ed/82dd834330ee8b5c1101874362f84523ef7ef9863fce76b8c2542621fb04/puppetboard-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "280bf519831744d7c8c679c34acb3e5d", "sha256": "40c0b7d966c73fe144059fe1bca35176b574b538096bfef190a5f304e2a13ce0"}, "downloads": -1, "filename": "puppetboard-0.3.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "280bf519831744d7c8c679c34acb3e5d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 849611, "upload_time": "2017-10-16T11:06:19", "upload_time_iso_8601": "2017-10-16T11:06:19.808848Z", "url": "https://files.pythonhosted.org/packages/b7/36/2b4c13c114e2e234fe30bd27004ddd4715ee2f7ea78a1fdfc233037f0bb6/puppetboard-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0ec7cd0e452097a8138970b75ed0be2", "sha256": "5edd38f7a82083a75e349ce75967bf96a4331f87577071132dd961708c27edb2"}, "downloads": -1, "filename": "puppetboard-0.3.0.tar.gz", "has_sig": true, "md5_digest": "c0ec7cd0e452097a8138970b75ed0be2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 847086, "upload_time": "2017-10-16T11:06:23", "upload_time_iso_8601": "2017-10-16T11:06:23.242515Z", "url": "https://files.pythonhosted.org/packages/bb/9c/ae8d1b749c7969eb336534fae93e2e48a3af6b165f64a2659d586630a0d4/puppetboard-0.3.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "3e9ef7991e1d4cd5ddb37a24f7091ffd", "sha256": "95d5f94c431fc67e283b4a4102e3d40c83e6dc4ee7421f061887259cce611a30"}, "downloads": -1, "filename": "puppetboard-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3e9ef7991e1d4cd5ddb37a24f7091ffd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 933020, "upload_time": "2019-05-30T12:33:49", "upload_time_iso_8601": "2019-05-30T12:33:49.053666Z", "url": "https://files.pythonhosted.org/packages/95/cc/bc7ca66341a96dbf10c47486cb9d6083cb7a0a5b270e4f4bb3c3c6b358df/puppetboard-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5105cb2f5c7e2b13e6b7cf86ac614e5", "sha256": "034511f3c531f3c2cacde230766e42201d4165331c114680b94b4085ffb70901"}, "downloads": -1, "filename": "puppetboard-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b5105cb2f5c7e2b13e6b7cf86ac614e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 940271, "upload_time": "2019-05-30T12:33:51", "upload_time_iso_8601": "2019-05-30T12:33:51.244820Z", "url": "https://files.pythonhosted.org/packages/0b/bd/27644c2f3ded87dadf5f36bec3fccee6f944e0215e31d2fb8a0b2683e574/puppetboard-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "9a218613b1fdae5c063d85b815bc4761", "sha256": "cba8cc0333981632ad2c4c7bd48276177b4333eb388019c570855915d924882d"}, "downloads": -1, "filename": "puppetboard-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9a218613b1fdae5c063d85b815bc4761", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 934080, "upload_time": "2019-09-22T18:39:39", "upload_time_iso_8601": "2019-09-22T18:39:39.216158Z", "url": "https://files.pythonhosted.org/packages/18/c5/3fae367638ce164a6e4e56d032d8dc0fce96f4b9ed7c65a42da76a6f7e5f/puppetboard-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abf614e9bb260ae9a10dfcc4b2948f0e", "sha256": "26f7717e658e014a2b52226a34a093facacf6bcfbcce3456eff8b5ecb3ecbebc"}, "downloads": -1, "filename": "puppetboard-1.1.0.tar.gz", "has_sig": false, "md5_digest": "abf614e9bb260ae9a10dfcc4b2948f0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 941202, "upload_time": "2019-09-22T18:39:41", "upload_time_iso_8601": "2019-09-22T18:39:41.604437Z", "url": "https://files.pythonhosted.org/packages/4d/86/e217fbb0bb2b9816b1e1cfc08d867acf8bab25820220b829970880cfdb2e/puppetboard-1.1.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "fad686bf7fff3bc2f85785bd299408e9", "sha256": "7de1cc15de39c9bc8513d10a6262d091ed06735495e752b85aa0be40dad07cef"}, "downloads": -1, "filename": "puppetboard-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fad686bf7fff3bc2f85785bd299408e9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 933999, "upload_time": "2020-01-13T22:06:24", "upload_time_iso_8601": "2020-01-13T22:06:24.404819Z", "url": "https://files.pythonhosted.org/packages/35/17/34ad59f3904561ae4623119580867cb8ddf686698ca0f29062f487d4a6d5/puppetboard-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2160ab89755ec30eb7e0ec8546ec465e", "sha256": "cc13e1ae22e0232c6bd03ffd31d8828b87fbc2fe69c11e54b492dba91c8c97cd"}, "downloads": -1, "filename": "puppetboard-2.0.0.tar.gz", "has_sig": false, "md5_digest": "2160ab89755ec30eb7e0ec8546ec465e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 945289, "upload_time": "2020-01-13T22:06:26", "upload_time_iso_8601": "2020-01-13T22:06:26.411739Z", "url": "https://files.pythonhosted.org/packages/3d/9a/0ad3f2dd6f1836103d4e566daefde0e7f75adea8b9433935e61390757440/puppetboard-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "2949e9e981fdb64572b32dec96a1a1af", "sha256": "376bef01982f44234a895a1bd823c9e6829ad044ac99fe8fa611f0be331d2efc"}, "downloads": -1, "filename": "puppetboard-2.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2949e9e981fdb64572b32dec96a1a1af", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 936623, "upload_time": "2020-03-20T13:46:53", "upload_time_iso_8601": "2020-03-20T13:46:53.760304Z", "url": "https://files.pythonhosted.org/packages/f8/ed/5c90b140a90a644a45691a69ba6654da06ce9e05cb3d9948312226c35052/puppetboard-2.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "944a961d03aae97d7098f5158c703a2c", "sha256": "1b490ccf629e643f10e3bababf674ef373986714abca0d75fe78d138facdbe9b"}, "downloads": -1, "filename": "puppetboard-2.1.0.tar.gz", "has_sig": false, "md5_digest": "944a961d03aae97d7098f5158c703a2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 948563, "upload_time": "2020-03-20T13:46:55", "upload_time_iso_8601": "2020-03-20T13:46:55.515295Z", "url": "https://files.pythonhosted.org/packages/b0/ca/bbef5a234d76a9392b9e8ebd1b49cda7077ab72a12b6425c94b7adf6a373/puppetboard-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "562091b5ae36520892f7c8995814c4f6", "sha256": "0c700fddaf27f551820df0665a2406e5268627f068e40cb53f0eddd7f9836938"}, "downloads": -1, "filename": "puppetboard-2.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "562091b5ae36520892f7c8995814c4f6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 936825, "upload_time": "2020-03-30T13:14:57", "upload_time_iso_8601": "2020-03-30T13:14:57.585412Z", "url": "https://files.pythonhosted.org/packages/60/08/88077e4e75c22a150fd54bbab31c9c8c1ec4a523f0693d33bf49060ad19c/puppetboard-2.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb561fe0ec181c82dc4f26a5c20c68b9", "sha256": "b7745d4c1fbc81ac0b48c391c05a237a53fd4f81d33d40b30745663644c4bf61"}, "downloads": -1, "filename": "puppetboard-2.1.1.tar.gz", "has_sig": false, "md5_digest": "eb561fe0ec181c82dc4f26a5c20c68b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 949004, "upload_time": "2020-03-30T13:14:59", "upload_time_iso_8601": "2020-03-30T13:14:59.205424Z", "url": "https://files.pythonhosted.org/packages/6f/f5/51a4a17989c9dfd05dacf069cc8c4336021a5c9c2dce282db82b76b90bdb/puppetboard-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "41cb877ddcb51202d1bee8e2f757cca7", "sha256": "2644259a4c3bd4b4f49be4608ec199585cf3ae07b3421199944bee834aa86d56"}, "downloads": -1, "filename": "puppetboard-2.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "41cb877ddcb51202d1bee8e2f757cca7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 936886, "upload_time": "2020-04-08T07:27:54", "upload_time_iso_8601": "2020-04-08T07:27:54.791195Z", "url": "https://files.pythonhosted.org/packages/99/ca/a5ca8f87565bee81dc9a8dd911f66a2c325188e2ca00daf9c4e07a06edfb/puppetboard-2.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "526e9fc65a4822a3f1979a1ba0db8bb6", "sha256": "b51d1615c0c7c146f27b8a10eea8eba3692720722778c01b455add15c97d61f4"}, "downloads": -1, "filename": "puppetboard-2.1.2.tar.gz", "has_sig": false, "md5_digest": "526e9fc65a4822a3f1979a1ba0db8bb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 949156, "upload_time": "2020-04-08T07:27:56", "upload_time_iso_8601": "2020-04-08T07:27:56.772191Z", "url": "https://files.pythonhosted.org/packages/26/23/db4d6eb34b86ed355743f4cfb0a8949fc86cfa8ac159d9e02b613b864ed5/puppetboard-2.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "41cb877ddcb51202d1bee8e2f757cca7", "sha256": "2644259a4c3bd4b4f49be4608ec199585cf3ae07b3421199944bee834aa86d56"}, "downloads": -1, "filename": "puppetboard-2.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "41cb877ddcb51202d1bee8e2f757cca7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 936886, "upload_time": "2020-04-08T07:27:54", "upload_time_iso_8601": "2020-04-08T07:27:54.791195Z", "url": "https://files.pythonhosted.org/packages/99/ca/a5ca8f87565bee81dc9a8dd911f66a2c325188e2ca00daf9c4e07a06edfb/puppetboard-2.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "526e9fc65a4822a3f1979a1ba0db8bb6", "sha256": "b51d1615c0c7c146f27b8a10eea8eba3692720722778c01b455add15c97d61f4"}, "downloads": -1, "filename": "puppetboard-2.1.2.tar.gz", "has_sig": false, "md5_digest": "526e9fc65a4822a3f1979a1ba0db8bb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 949156, "upload_time": "2020-04-08T07:27:56", "upload_time_iso_8601": "2020-04-08T07:27:56.772191Z", "url": "https://files.pythonhosted.org/packages/26/23/db4d6eb34b86ed355743f4cfb0a8949fc86cfa8ac159d9e02b613b864ed5/puppetboard-2.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:28 2020"}