{"info": {"author": "IAM-units authors", "author_email": "mail@paul.kishimoto.name", "bugtrack_url": null, "classifiers": [], "description": "Unit definitions for integrated-assessment research\n***************************************************\n\n\u00a9 2020 `IAM-units authors`_; licensed under the `GNU GPL version 3`_.\n\nThe file `definitions.txt`_ gives `Pint`_-compatible definitions of energy, climate, and related units to supplement the SI and other units included in Pint's `default_en.txt`_.\nThese definitions are used by:\n\n- the IIASA Energy Program `MESSAGEix-GLOBIOM`_ integrated assessment model (IAM),\n- the Python package `pyam`_ for analysis and visualization of integrated-assessment scenarios (see `pyam.IamDataFrame.convert_unit()`_ for details)\n\nand may be used for research in integrated assessment, energy systems, transportation, or other, related fields.\n\nPlease open a GitHub `issue`_ or `pull request`_ to:\n\n- Add more units to definitions.txt.\n- Add your usage of iam-units to this README.\n- Request or contribute additional features.\n\nUsage\n=====\n\n``iam_units.registry`` is a ``pint.UnitRegistry`` object with the definitions from definitions.txt loaded:\n\n.. code-block:: python\n\n    >>> from iam_units import registry\n\n    # Parse an energy unit defined by iam-units\n    >>> qty = registry('1.2 tce')\n    >>> qty\n    1.2 <Unit('tonne_of_coal_equivalent')>\n\n    >>> qty.to('GJ')\n    29.308 <Unit('gigajoule')>\n\nTo make the registry from this package the default:\n\n.. code-block:: python\n\n    >>> import pint\n    >>> pint.set_application_registry(registry)\n\n    # Now used by default for pint top-level classes and methods\n    >>> pint.Quantity('1.2 tce')\n    1.2 <Unit('tonne_of_coal_equivalent')>\n\nWarnings\n========\n\n``iam_units`` overwrites Pint's default definitions in the following cases:\n\n.. list-table::\n   :header-rows: 1\n\n   - - ``pint`` default\n     - ``iam_units``\n     - Note\n   - - 'kt' = knot [velocity]\n     - 'kt' = 1000 metric tons\n     - 'kt' is commonly used for emissions in the IAM-context.\n\nTechnical details\n=================\n\nEmissions and GWP\n-----------------\n\nThe function ``convert_gwp()`` converts from from mass (or mass-related units) of one specific greenhouse gas (GHG) species to an equivalent quantity of second species, based on `global warming potential`_ (GWP) *metrics*.\nThe supported species are listed in `species.txt`_ and the variable ``iam_units.emissions.SPECIES``.\nThe metrics have names like ``<IPCC report>GWP<years>``, where ``<years>`` is `100` and:\n\n.. list-table::\n   :header-rows: 1\n\n   - - ``<IPCC report>``\n     - Meaning\n   - - ``SAR``\n     - Second Assessment Report (1995)\n   - - ``AR4``\n     - Fourth Assessment Report (2007)\n   - - ``AR5``\n     - Fifth Assessment Report (2014)\n\n.. code-block:: python\n\n   >>> qty = registry('3.5e3 t').to('Mt')\n   >>> qty\n   3.5 <Unit('megametric_ton')>\n\n   # Convert from mass of N2O to GWP-equivalent mass of CO2\n   >>> convert_gwp('AR4GWP100', qty, 'N2O', 'CO2')\n   0.9275 <Unit('megametric_ton')>\n\n   # Using a different metric\n   >>> convert_gwp('AR5GWP100', qty, 'N2O', 'CO2')\n   1.085 <Unit('megametric_ton')>\n\nThe function also accepts input with the commonly-used combination of mass (or related) *units* **and** the identity of a particular GHG species:\n\n.. code-block:: python\n\n   # Expression combining magnitude, units, *and* GHG species\n   >>> qty = '3.5 Mt N2O / year'\n\n   # Input species is determined from *qty*\n   >>> convert_gwp('AR5GWP100', qty, 'CO2')\n   1.085 <Unit('megametric_ton / year')>\n\nStrictly, the original species is not a unit but a *nominal property*; see the `International Vocabulary of Metrology`_ (VIM) used in the SI.\nTo avoid ambiguity, code handling GHG quantities should also track and output these nominal properties, including:\n\n1. Original species.\n2. Species in which GWP-equivalents are expressed (e.g. CO\u2082 or C)\n3. GWP metric used to convert (1) to (2).\n\nTo aid with this, the function ``format_mass()`` is provided to re-assemble strings that include the GHG species or other information:\n\n.. code-block:: python\n\n   # Perform a conversion\n   >>> qty = convert_gwp('AR5GWP100', '3.5 Mt N2O / year', 'CO2e')\n   >>> qty\n   927.5 <Unit('megametric_ton / year')>\n\n   # Format a string with species and metric info after the mass units of *qty*\n   >>> format_mass(qty, 'CO\u2082-e (AR5)', spec=':~')\n   'Mt CO\u2082-e (AR5) / a'\n\nSee `Pint's formatting documentation`_ for values of the *spec* argument.\n\nData sources\n~~~~~~~~~~~~\nThe GWP unit definitions are generated using the file metric_conversions.csv.\nThe file is copied from `lewisjared/scmdata`_ v0.4, authored by `@lewisjared <https://github.com/lewisjared>`_, `@swillner <https://github.com/swillner>`_, and `@znicholls <https://github.com/znicholls>`_ and licensed under BSD-3.\nThe version in scmdata was transcribed from `this source`_ (PDF link).\n\nSee `<DEVELOPING.rst>`_ for details on updating the definitions.\n\n.. _global warming potential: https://en.wikipedia.org/wiki/Global_warming_potential\n.. _International Vocabulary of Metrology: https://www.bipm.org/utils/common/documents/jcgm/JCGM_200_2008.pdf\n.. _contexts: https://pint.readthedocs.io/en/latest/contexts.html\n.. _Pint's formatting documentation: https://pint.readthedocs.io/en/latest/tutorial.html#string-formatting\n.. _lewisjared/scmdata: https://github.com/lewisjared/scmdata/tree/v0.4.0/src/scmdata/data\n.. _this source: https://www.ghgprotocol.org/sites/default/files/ghgp/Global-Warming-Potential-Values%20%28Feb%2016%202016%29_1.pdf\n\n\nTests and development\n=====================\n\nUse ``pytest iam_units --verbose`` to run the test suite included in the submodule ``iam_units.test_all``.\nSee `<DEVELOPING.rst>`_ for further details.\n\n.. _IAM-units authors: ./AUTHORS\n.. _GNU GPL version 3: ./LICENSE\n.. _definitions.txt: ./iam_units/data/definitions.txt\n.. _emissions.txt: ./iam_units/data/emissions/emissions.txt\n.. _species.txt: ./iam_units/data/emissions/species.txt\n.. _checks.csv: ./iam_units/data/checks.csv\n.. _Pint: https://pint.readthedocs.io\n.. _default_en.txt: https://github.com/hgrecco/pint/blob/master/pint/default_en.txt\n.. _MESSAGEix-GLOBIOM: https://message.iiasa.ac.at\n.. _pyam: https://pyam-iamc.readthedocs.io\n.. _pyam.IamDataFrame.convert_unit(): https://pyam-iamc.readthedocs.io/en/stable/api/iamdataframe.html#pyam.IamDataFrame.convert_unit\n.. _issue: https://github.com/IAMconsortium/units/issues\n.. _pull request: https://github.com/IAMconsortium/units/pulls\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/IAMconsortium/units", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "iam-units", "package_url": "https://pypi.org/project/iam-units/", "platform": "", "project_url": "https://pypi.org/project/iam-units/", "project_urls": {"Homepage": "https://github.com/IAMconsortium/units"}, "release_url": "https://pypi.org/project/iam-units/2020.4.21/", "requires_dist": ["pint (>=0.11)", "setuptools (>=41)"], "requires_python": "", "summary": "Unit definitions for integrated-assessment research", "version": "2020.4.21", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>\u00a9 2020 <a href=\"./AUTHORS\" rel=\"nofollow\">IAM-units authors</a>; licensed under the <a href=\"./LICENSE\" rel=\"nofollow\">GNU GPL version 3</a>.</p>\n<p>The file <a href=\"./iam_units/data/definitions.txt\" rel=\"nofollow\">definitions.txt</a> gives <a href=\"https://pint.readthedocs.io\" rel=\"nofollow\">Pint</a>-compatible definitions of energy, climate, and related units to supplement the SI and other units included in Pint\u2019s <a href=\"https://github.com/hgrecco/pint/blob/master/pint/default_en.txt\" rel=\"nofollow\">default_en.txt</a>.\nThese definitions are used by:</p>\n<ul>\n<li>the IIASA Energy Program <a href=\"https://message.iiasa.ac.at\" rel=\"nofollow\">MESSAGEix-GLOBIOM</a> integrated assessment model (IAM),</li>\n<li>the Python package <a href=\"https://pyam-iamc.readthedocs.io\" rel=\"nofollow\">pyam</a> for analysis and visualization of integrated-assessment scenarios (see <a href=\"https://pyam-iamc.readthedocs.io/en/stable/api/iamdataframe.html#pyam.IamDataFrame.convert_unit\" rel=\"nofollow\">pyam.IamDataFrame.convert_unit()</a> for details)</li>\n</ul>\n<p>and may be used for research in integrated assessment, energy systems, transportation, or other, related fields.</p>\n<p>Please open a GitHub <a href=\"https://github.com/IAMconsortium/units/issues\" rel=\"nofollow\">issue</a> or <a href=\"https://github.com/IAMconsortium/units/pulls\" rel=\"nofollow\">pull request</a> to:</p>\n<ul>\n<li>Add more units to definitions.txt.</li>\n<li>Add your usage of iam-units to this README.</li>\n<li>Request or contribute additional features.</li>\n</ul>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><tt>iam_units.registry</tt> is a <tt>pint.UnitRegistry</tt> object with the definitions from definitions.txt loaded:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">iam_units</span> <span class=\"kn\">import</span> <span class=\"n\">registry</span>\n\n<span class=\"c1\"># Parse an energy unit defined by iam-units</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">qty</span> <span class=\"o\">=</span> <span class=\"n\">registry</span><span class=\"p\">(</span><span class=\"s1\">'1.2 tce'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">qty</span>\n<span class=\"mf\">1.2</span> <span class=\"o\">&lt;</span><span class=\"n\">Unit</span><span class=\"p\">(</span><span class=\"s1\">'tonne_of_coal_equivalent'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">qty</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"s1\">'GJ'</span><span class=\"p\">)</span>\n<span class=\"mf\">29.308</span> <span class=\"o\">&lt;</span><span class=\"n\">Unit</span><span class=\"p\">(</span><span class=\"s1\">'gigajoule'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n</pre>\n<p>To make the registry from this package the default:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">pint</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">set_application_registry</span><span class=\"p\">(</span><span class=\"n\">registry</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Now used by default for pint top-level classes and methods</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"s1\">'1.2 tce'</span><span class=\"p\">)</span>\n<span class=\"mf\">1.2</span> <span class=\"o\">&lt;</span><span class=\"n\">Unit</span><span class=\"p\">(</span><span class=\"s1\">'tonne_of_coal_equivalent'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n</pre>\n</div>\n<div id=\"warnings\">\n<h2>Warnings</h2>\n<p><tt>iam_units</tt> overwrites Pint\u2019s default definitions in the following cases:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th><tt>pint</tt> default</th>\n<th><tt>iam_units</tt></th>\n<th>Note</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>\u2018kt\u2019 = knot [velocity]</td>\n<td>\u2018kt\u2019 = 1000 metric tons</td>\n<td>\u2018kt\u2019 is commonly used for emissions in the IAM-context.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"technical-details\">\n<h2>Technical details</h2>\n<h2 id=\"emissions-and-gwp\"><span class=\"section-subtitle\">Emissions and GWP</span></h2>\n<p>The function <tt>convert_gwp()</tt> converts from from mass (or mass-related units) of one specific greenhouse gas (GHG) species to an equivalent quantity of second species, based on <a href=\"https://en.wikipedia.org/wiki/Global_warming_potential\" rel=\"nofollow\">global warming potential</a> (GWP) <em>metrics</em>.\nThe supported species are listed in <a href=\"./iam_units/data/emissions/species.txt\" rel=\"nofollow\">species.txt</a> and the variable <tt>iam_units.emissions.SPECIES</tt>.\nThe metrics have names like <tt>&lt;IPCC report&gt;GWP&lt;years&gt;</tt>, where <tt>&lt;years&gt;</tt> is <cite>100</cite> and:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th><tt>&lt;IPCC report&gt;</tt></th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>SAR</tt></td>\n<td>Second Assessment Report (1995)</td>\n</tr>\n<tr><td><tt>AR4</tt></td>\n<td>Fourth Assessment Report (2007)</td>\n</tr>\n<tr><td><tt>AR5</tt></td>\n<td>Fifth Assessment Report (2014)</td>\n</tr>\n</tbody>\n</table>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">qty</span> <span class=\"o\">=</span> <span class=\"n\">registry</span><span class=\"p\">(</span><span class=\"s1\">'3.5e3 t'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"s1\">'Mt'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">qty</span>\n<span class=\"mf\">3.5</span> <span class=\"o\">&lt;</span><span class=\"n\">Unit</span><span class=\"p\">(</span><span class=\"s1\">'megametric_ton'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n\n<span class=\"c1\"># Convert from mass of N2O to GWP-equivalent mass of CO2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">convert_gwp</span><span class=\"p\">(</span><span class=\"s1\">'AR4GWP100'</span><span class=\"p\">,</span> <span class=\"n\">qty</span><span class=\"p\">,</span> <span class=\"s1\">'N2O'</span><span class=\"p\">,</span> <span class=\"s1\">'CO2'</span><span class=\"p\">)</span>\n<span class=\"mf\">0.9275</span> <span class=\"o\">&lt;</span><span class=\"n\">Unit</span><span class=\"p\">(</span><span class=\"s1\">'megametric_ton'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n\n<span class=\"c1\"># Using a different metric</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">convert_gwp</span><span class=\"p\">(</span><span class=\"s1\">'AR5GWP100'</span><span class=\"p\">,</span> <span class=\"n\">qty</span><span class=\"p\">,</span> <span class=\"s1\">'N2O'</span><span class=\"p\">,</span> <span class=\"s1\">'CO2'</span><span class=\"p\">)</span>\n<span class=\"mf\">1.085</span> <span class=\"o\">&lt;</span><span class=\"n\">Unit</span><span class=\"p\">(</span><span class=\"s1\">'megametric_ton'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n</pre>\n<p>The function also accepts input with the commonly-used combination of mass (or related) <em>units</em> <strong>and</strong> the identity of a particular GHG species:</p>\n<pre><span class=\"c1\"># Expression combining magnitude, units, *and* GHG species</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">qty</span> <span class=\"o\">=</span> <span class=\"s1\">'3.5 Mt N2O / year'</span>\n\n<span class=\"c1\"># Input species is determined from *qty*</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">convert_gwp</span><span class=\"p\">(</span><span class=\"s1\">'AR5GWP100'</span><span class=\"p\">,</span> <span class=\"n\">qty</span><span class=\"p\">,</span> <span class=\"s1\">'CO2'</span><span class=\"p\">)</span>\n<span class=\"mf\">1.085</span> <span class=\"o\">&lt;</span><span class=\"n\">Unit</span><span class=\"p\">(</span><span class=\"s1\">'megametric_ton / year'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Strictly, the original species is not a unit but a <em>nominal property</em>; see the <a href=\"https://www.bipm.org/utils/common/documents/jcgm/JCGM_200_2008.pdf\" rel=\"nofollow\">International Vocabulary of Metrology</a> (VIM) used in the SI.\nTo avoid ambiguity, code handling GHG quantities should also track and output these nominal properties, including:</p>\n<ol>\n<li>Original species.</li>\n<li>Species in which GWP-equivalents are expressed (e.g. CO\u2082 or C)</li>\n<li>GWP metric used to convert (1) to (2).</li>\n</ol>\n<p>To aid with this, the function <tt>format_mass()</tt> is provided to re-assemble strings that include the GHG species or other information:</p>\n<pre><span class=\"c1\"># Perform a conversion</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">qty</span> <span class=\"o\">=</span> <span class=\"n\">convert_gwp</span><span class=\"p\">(</span><span class=\"s1\">'AR5GWP100'</span><span class=\"p\">,</span> <span class=\"s1\">'3.5 Mt N2O / year'</span><span class=\"p\">,</span> <span class=\"s1\">'CO2e'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">qty</span>\n<span class=\"mf\">927.5</span> <span class=\"o\">&lt;</span><span class=\"n\">Unit</span><span class=\"p\">(</span><span class=\"s1\">'megametric_ton / year'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n\n<span class=\"c1\"># Format a string with species and metric info after the mass units of *qty*</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">format_mass</span><span class=\"p\">(</span><span class=\"n\">qty</span><span class=\"p\">,</span> <span class=\"s1\">'CO\u2082-e (AR5)'</span><span class=\"p\">,</span> <span class=\"n\">spec</span><span class=\"o\">=</span><span class=\"s1\">':~'</span><span class=\"p\">)</span>\n<span class=\"s1\">'Mt CO\u2082-e (AR5) / a'</span>\n</pre>\n<p>See <a href=\"https://pint.readthedocs.io/en/latest/tutorial.html#string-formatting\" rel=\"nofollow\">Pint\u2019s formatting documentation</a> for values of the <em>spec</em> argument.</p>\n<div id=\"data-sources\">\n<h3>Data sources</h3>\n<p>The GWP unit definitions are generated using the file metric_conversions.csv.\nThe file is copied from <a href=\"https://github.com/lewisjared/scmdata/tree/v0.4.0/src/scmdata/data\" rel=\"nofollow\">lewisjared/scmdata</a> v0.4, authored by <a href=\"https://github.com/lewisjared\" rel=\"nofollow\">@lewisjared</a>, <a href=\"https://github.com/swillner\" rel=\"nofollow\">@swillner</a>, and <a href=\"https://github.com/znicholls\" rel=\"nofollow\">@znicholls</a> and licensed under BSD-3.\nThe version in scmdata was transcribed from <a href=\"https://www.ghgprotocol.org/sites/default/files/ghgp/Global-Warming-Potential-Values%20%28Feb%2016%202016%29_1.pdf\" rel=\"nofollow\">this source</a> (PDF link).</p>\n<p>See <a href=\"DEVELOPING.rst\" rel=\"nofollow\">DEVELOPING.rst</a> for details on updating the definitions.</p>\n</div>\n</div>\n<div id=\"tests-and-development\">\n<h2>Tests and development</h2>\n<p>Use <tt>pytest iam_units <span class=\"pre\">--verbose</span></tt> to run the test suite included in the submodule <tt>iam_units.test_all</tt>.\nSee <a href=\"DEVELOPING.rst\" rel=\"nofollow\">DEVELOPING.rst</a> for further details.</p>\n</div>\n\n          </div>"}, "last_serial": 7067449, "releases": {"2020.4.12": [{"comment_text": "", "digests": {"md5": "c9256ef2f0407c2c174ac78ad9dfbe2f", "sha256": "9312db8c5ee3bc329f418f75cdce7f20348bed677da53f99144e356d1272ec0f"}, "downloads": -1, "filename": "iam_units-2020.4.12-py3-none-any.whl", "has_sig": false, "md5_digest": "c9256ef2f0407c2c174ac78ad9dfbe2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28177, "upload_time": "2020-04-12T20:59:03", "upload_time_iso_8601": "2020-04-12T20:59:03.183967Z", "url": "https://files.pythonhosted.org/packages/25/e6/785aefadc17130b0cc0f0b995e9f274d2585f65fa0e3948115765920afcf/iam_units-2020.4.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "984fc226b09824bdb340d96671af9c47", "sha256": "165ab06c51ddb960f0dfe2f057bc574c0f11b38b7e1a6e998a80c566d9aeb64f"}, "downloads": -1, "filename": "iam_units-2020.4.12.tar.gz", "has_sig": false, "md5_digest": "984fc226b09824bdb340d96671af9c47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27977, "upload_time": "2020-04-12T20:59:05", "upload_time_iso_8601": "2020-04-12T20:59:05.236318Z", "url": "https://files.pythonhosted.org/packages/8f/b6/2219557bdb5fff2c7901ac27217f72314bd86be64568b33081f8817aa0a5/iam_units-2020.4.12.tar.gz", "yanked": false}], "2020.4.21": [{"comment_text": "", "digests": {"md5": "48b4eb7ba8e52f19ca84a9010736b8ae", "sha256": "89f8e274e85767e1984909f6a4ebe1e8c72d740b59290bcce54af54a1bfe32cf"}, "downloads": -1, "filename": "iam_units-2020.4.21-py3-none-any.whl", "has_sig": false, "md5_digest": "48b4eb7ba8e52f19ca84a9010736b8ae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28836, "upload_time": "2020-04-21T11:53:59", "upload_time_iso_8601": "2020-04-21T11:53:59.589894Z", "url": "https://files.pythonhosted.org/packages/95/e3/450a1dd979c0047c81b9bc690017cb7ff5afb80847a9f48b5036a02920ee/iam_units-2020.4.21-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7bfb0037d0a98f2254b0a50abadb131", "sha256": "042f298a86888aa5fe7771b85549c2f90ffc39255c00670c0ec73c058df647b5"}, "downloads": -1, "filename": "iam_units-2020.4.21.tar.gz", "has_sig": false, "md5_digest": "e7bfb0037d0a98f2254b0a50abadb131", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28645, "upload_time": "2020-04-21T11:54:00", "upload_time_iso_8601": "2020-04-21T11:54:00.918915Z", "url": "https://files.pythonhosted.org/packages/74/e9/c9e1d23e17533352ae3555aae4fb7f25a39ec8b5b0c313a68b133a600a94/iam_units-2020.4.21.tar.gz", "yanked": false}], "2020.4.6": [{"comment_text": "", "digests": {"md5": "703bfc830f265263011d67e1e5538620", "sha256": "e0f2c7defe411e031e36bf08cc90572852c40dac1f9762493e855dd5044c2acb"}, "downloads": -1, "filename": "iam_units-2020.4.6-py3-none-any.whl", "has_sig": false, "md5_digest": "703bfc830f265263011d67e1e5538620", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22767, "upload_time": "2020-04-06T08:26:32", "upload_time_iso_8601": "2020-04-06T08:26:32.344679Z", "url": "https://files.pythonhosted.org/packages/fa/9d/b20cc1a809e58cc84635eca2eb2caa8402b59e784aac03b3e3c10370e5c8/iam_units-2020.4.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c64a541629d48a19d04433b967b01bc3", "sha256": "cd23dd8032d62d3ff0ac5f5450da6244ae220c5719f9ba8f761d7cd8db95a6be"}, "downloads": -1, "filename": "iam_units-2020.4.6.tar.gz", "has_sig": false, "md5_digest": "c64a541629d48a19d04433b967b01bc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21379, "upload_time": "2020-04-06T08:26:35", "upload_time_iso_8601": "2020-04-06T08:26:35.309457Z", "url": "https://files.pythonhosted.org/packages/d2/ea/8df0a41922620ea8ccb1cd05b54f450663f7003aea7e00e38f0c7077ba39/iam_units-2020.4.6.tar.gz", "yanked": false}], "2020.4.9": [{"comment_text": "", "digests": {"md5": "4fb18a07b58d97eba67dce6ef7aed618", "sha256": "d24149aa6f81816dca10237c1972a88a5bfc1097584e1e9c7bef19d8fa4f746d"}, "downloads": -1, "filename": "iam_units-2020.4.9-py3-none-any.whl", "has_sig": false, "md5_digest": "4fb18a07b58d97eba67dce6ef7aed618", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23164, "upload_time": "2020-04-09T11:41:37", "upload_time_iso_8601": "2020-04-09T11:41:37.882919Z", "url": "https://files.pythonhosted.org/packages/e0/b1/58177e49baade57014b23f72fc499968bad27b155384f6ffe4b7dfc004c0/iam_units-2020.4.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6bbd56a78b40a600438811128ffe6ad7", "sha256": "6b5ed20ab219cf9b999228ed3e9905f449a181cc3faaea6fa8323d7a0e76841e"}, "downloads": -1, "filename": "iam_units-2020.4.9.tar.gz", "has_sig": false, "md5_digest": "6bbd56a78b40a600438811128ffe6ad7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21823, "upload_time": "2020-04-09T11:41:39", "upload_time_iso_8601": "2020-04-09T11:41:39.498997Z", "url": "https://files.pythonhosted.org/packages/e1/75/379f54997aa42b95fccaacebc104e8a17a6f9bee5d3769fcf2788e2ac5af/iam_units-2020.4.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "48b4eb7ba8e52f19ca84a9010736b8ae", "sha256": "89f8e274e85767e1984909f6a4ebe1e8c72d740b59290bcce54af54a1bfe32cf"}, "downloads": -1, "filename": "iam_units-2020.4.21-py3-none-any.whl", "has_sig": false, "md5_digest": "48b4eb7ba8e52f19ca84a9010736b8ae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28836, "upload_time": "2020-04-21T11:53:59", "upload_time_iso_8601": "2020-04-21T11:53:59.589894Z", "url": "https://files.pythonhosted.org/packages/95/e3/450a1dd979c0047c81b9bc690017cb7ff5afb80847a9f48b5036a02920ee/iam_units-2020.4.21-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7bfb0037d0a98f2254b0a50abadb131", "sha256": "042f298a86888aa5fe7771b85549c2f90ffc39255c00670c0ec73c058df647b5"}, "downloads": -1, "filename": "iam_units-2020.4.21.tar.gz", "has_sig": false, "md5_digest": "e7bfb0037d0a98f2254b0a50abadb131", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28645, "upload_time": "2020-04-21T11:54:00", "upload_time_iso_8601": "2020-04-21T11:54:00.918915Z", "url": "https://files.pythonhosted.org/packages/74/e9/c9e1d23e17533352ae3555aae4fb7f25a39ec8b5b0c313a68b133a600a94/iam_units-2020.4.21.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:18 2020"}