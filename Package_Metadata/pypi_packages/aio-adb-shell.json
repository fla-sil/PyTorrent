{"info": {"author": "Jeff Irion", "author_email": "jefflirion@users.noreply.github.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "aio\\_adb\\_shell\n===============\n\n.. image:: https://travis-ci.com/JeffLIrion/aio_adb_shell.svg?branch=master\n   :target: https://travis-ci.com/JeffLIrion/aio_adb_shell\n\n.. image:: https://coveralls.io/repos/github/JeffLIrion/aio_adb_shell/badge.svg?branch=master\n   :target: https://coveralls.io/github/JeffLIrion/aio_adb_shell?branch=master\n\n\nDocumentation for this package can be found at https://aio-adb-shell.readthedocs.io/.\n\nThis Python package implements ADB shell and FileSync functionality.  It originated from `python-adb <https://github.com/google/python-adb>`_.\n\nInstallation\n------------\n\n.. code-block::\n\n   pip install aio-adb-shell\n\n\nExample Usage\n-------------\n\n(Based on `androidtv/adb_manager.py <https://github.com/JeffLIrion/python-androidtv/blob/133063c8d6793a88259af405d6a69ceb301a0ca0/androidtv/adb_manager.py#L67>`_)\n\n.. code-block:: python\n\n   from aio_adb_shell.adb_device import AdbDeviceTcp\n   from aio_adb_shell.auth.sign_pythonrsa import PythonRSASigner\n\n   # Connect (no authentication necessary)\n   device1 = AdbDeviceTcp('192.168.0.111', 5555, default_timeout_s=9.)\n   await device1.connect(auth_timeout_s=0.1)\n\n   # Connect (authentication required)\n   with open('path/to/adbkey') as f:\n       priv = f.read()\n   signer = PythonRSASigner('', priv)\n   device2 = AdbDeviceTcp('192.168.0.222', 5555, default_timeout_s=9.)\n   await device2.connect(rsa_keys=[signer], auth_timeout_s=0.1)\n\n   # Send a shell command\n   response1 = await device1.shell('echo TEST1')\n   response2 = await device2.shell('echo TEST2')\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JeffLIrion/aio_adb_shell", "keywords": "adb,android", "license": "", "maintainer": "", "maintainer_email": "", "name": "aio-adb-shell", "package_url": "https://pypi.org/project/aio-adb-shell/", "platform": "", "project_url": "https://pypi.org/project/aio-adb-shell/", "project_urls": {"Homepage": "https://github.com/JeffLIrion/aio_adb_shell"}, "release_url": "https://pypi.org/project/aio-adb-shell/0.0.1/", "requires_dist": ["cryptography", "pyasn1", "rsa"], "requires_python": ">=3.6", "summary": "A Python implementation of ADB with shell and FileSync functionality.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.com/JeffLIrion/aio_adb_shell\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/JeffLIrion/aio_adb_shell.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec93ec3d44e86b32cb4a75fba512f6f16ea6a298/68747470733a2f2f7472617669732d63692e636f6d2f4a6566664c4972696f6e2f61696f5f6164625f7368656c6c2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/JeffLIrion/aio_adb_shell?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/JeffLIrion/aio_adb_shell/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac58aee2866d1a505c565cd75be84721f1d953d3/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a6566664c4972696f6e2f61696f5f6164625f7368656c6c2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<p>Documentation for this package can be found at <a href=\"https://aio-adb-shell.readthedocs.io/\" rel=\"nofollow\">https://aio-adb-shell.readthedocs.io/</a>.</p>\n<p>This Python package implements ADB shell and FileSync functionality.  It originated from <a href=\"https://github.com/google/python-adb\" rel=\"nofollow\">python-adb</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install aio-adb-shell\n</pre>\n</div>\n<div id=\"example-usage\">\n<h2>Example Usage</h2>\n<p>(Based on <a href=\"https://github.com/JeffLIrion/python-androidtv/blob/133063c8d6793a88259af405d6a69ceb301a0ca0/androidtv/adb_manager.py#L67\" rel=\"nofollow\">androidtv/adb_manager.py</a>)</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aio_adb_shell.adb_device</span> <span class=\"kn\">import</span> <span class=\"n\">AdbDeviceTcp</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aio_adb_shell.auth.sign_pythonrsa</span> <span class=\"kn\">import</span> <span class=\"n\">PythonRSASigner</span>\n\n<span class=\"c1\"># Connect (no authentication necessary)</span>\n<span class=\"n\">device1</span> <span class=\"o\">=</span> <span class=\"n\">AdbDeviceTcp</span><span class=\"p\">(</span><span class=\"s1\">'192.168.0.111'</span><span class=\"p\">,</span> <span class=\"mi\">5555</span><span class=\"p\">,</span> <span class=\"n\">default_timeout_s</span><span class=\"o\">=</span><span class=\"mf\">9.</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">auth_timeout_s</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Connect (authentication required)</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'path/to/adbkey'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">priv</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"n\">signer</span> <span class=\"o\">=</span> <span class=\"n\">PythonRSASigner</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">priv</span><span class=\"p\">)</span>\n<span class=\"n\">device2</span> <span class=\"o\">=</span> <span class=\"n\">AdbDeviceTcp</span><span class=\"p\">(</span><span class=\"s1\">'192.168.0.222'</span><span class=\"p\">,</span> <span class=\"mi\">5555</span><span class=\"p\">,</span> <span class=\"n\">default_timeout_s</span><span class=\"o\">=</span><span class=\"mf\">9.</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">device2</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">rsa_keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">signer</span><span class=\"p\">],</span> <span class=\"n\">auth_timeout_s</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Send a shell command</span>\n<span class=\"n\">response1</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">shell</span><span class=\"p\">(</span><span class=\"s1\">'echo TEST1'</span><span class=\"p\">)</span>\n<span class=\"n\">response2</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">device2</span><span class=\"o\">.</span><span class=\"n\">shell</span><span class=\"p\">(</span><span class=\"s1\">'echo TEST2'</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7185549, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "98ebc7a6ae5da5a349652863b20d5b70", "sha256": "f4d5eef31ca70b268d8ebc2fb3c3eb618141422e9698455223f018b014eb12da"}, "downloads": -1, "filename": "aio_adb_shell-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "98ebc7a6ae5da5a349652863b20d5b70", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30417, "upload_time": "2020-05-07T05:48:51", "upload_time_iso_8601": "2020-05-07T05:48:51.071898Z", "url": "https://files.pythonhosted.org/packages/a0/2f/f13080110ff522fabdffda645194ab7376df3efc31de99a8b0b210cb6b15/aio_adb_shell-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65881620b18c8f5fe17d1e9da0ff412a", "sha256": "80d66c67fdabe082a9bafd6932b464b505e97e800dbb8934165c4ff0d4a49472"}, "downloads": -1, "filename": "aio_adb_shell-0.0.1.tar.gz", "has_sig": false, "md5_digest": "65881620b18c8f5fe17d1e9da0ff412a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22486, "upload_time": "2020-05-07T05:48:53", "upload_time_iso_8601": "2020-05-07T05:48:53.525872Z", "url": "https://files.pythonhosted.org/packages/7e/c6/a9f813db083427d8946965b7acd9a3e8a31fb48382e805adba0801c92d47/aio_adb_shell-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "98ebc7a6ae5da5a349652863b20d5b70", "sha256": "f4d5eef31ca70b268d8ebc2fb3c3eb618141422e9698455223f018b014eb12da"}, "downloads": -1, "filename": "aio_adb_shell-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "98ebc7a6ae5da5a349652863b20d5b70", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30417, "upload_time": "2020-05-07T05:48:51", "upload_time_iso_8601": "2020-05-07T05:48:51.071898Z", "url": "https://files.pythonhosted.org/packages/a0/2f/f13080110ff522fabdffda645194ab7376df3efc31de99a8b0b210cb6b15/aio_adb_shell-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65881620b18c8f5fe17d1e9da0ff412a", "sha256": "80d66c67fdabe082a9bafd6932b464b505e97e800dbb8934165c4ff0d4a49472"}, "downloads": -1, "filename": "aio_adb_shell-0.0.1.tar.gz", "has_sig": false, "md5_digest": "65881620b18c8f5fe17d1e9da0ff412a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22486, "upload_time": "2020-05-07T05:48:53", "upload_time_iso_8601": "2020-05-07T05:48:53.525872Z", "url": "https://files.pythonhosted.org/packages/7e/c6/a9f813db083427d8946965b7acd9a3e8a31fb48382e805adba0801c92d47/aio_adb_shell-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:50 2020"}