{"info": {"author": "Sam Edwards", "author_email": "CFSworks@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Topic :: Software Development"], "description": "::\n\n    pip install limeade\n\n\nLive module editing and development enhancement supporting hot reloading for\nPython 3.4+.\n\n|Travis| |Coverage| |PyPI| |PyPI Downloads|\n\nUsage\n-----\n\nEquip your app with the ability to call ``limeade.refresh()`` on\ncommand (e.g. via hotkey) and invoke after making edits to your source files!\n\n.. image:: https://github.com/CFSworks/limeade/blob/master/.github/readme/demo.gif?raw=true\n\nFeatures\n--------\n\n- **Speeds up development**: Don't restart your app, refresh your Python code!\n- **Automatic**: Just call to ``limeade.refresh()``; Limeade does the rest!\n- **Thorough**: Updates your classes/functions even if instantiated/referenced!\n- **Object reuse**: Mutable objects are modified in-place; doesn't break **is**!\n- **Good source of vitamin A**\n\nCaveats\n-------\n\nLimeade is still experimental. I would be deeply appreciative if you could use\nit and find ways in which it breaks!\n\nThe API is not yet stable. I will keep ``limeade.refresh()`` working, but\nthat is the extent of the public API for the time being.\n\nSome things which it cannot (even theoretically) handle are:\n\n- **Closures**: These aren't defined at module reload time; even so, it's unsafe\n  to mutate code within instantiated closures. Closures will be updated the\n  next time they are instantiated.\n- **Changes in metaclass**: A class can be mutated if its type (metaclass) isn't\n  changing, but Python does not permit changing the type of an existing class.\n- **Threads**: This is not incompatible with threading, but note that threads\n  may observe the program in an inconsistent state if they're running during a\n  refresh operation. Make sure your threads are out of harm's way!\n\nSome things which it may handle in the future:\n\n- **Renaming functions/classes**: Currently, old and new definitions are matched\n  via the qualified name. Heuristics can be used to match definitions when they\n  are under different names, but this is not yet done.\n- **Changes in __slots__ attribute**: New slot descriptors cannot be created;\n  however, Limeade could invent its own descriptors for new slots and insert\n  those. They wouldn't be as efficient but they would get the job done.\n  Descriptors for deleted slots can be cached in case the slot is brought back\n  in a future mutation.\n- **Changes in base classes**: Initial experiments show that Python is much more\n  picky about this one would expect.\n- **Automatic rollback**: In case of refresh/mutate failure, it would be great\n  to rollback everything to the state it was in before, so that the running app\n  isn't left in a half-updated state.\n\nLicense\n-------\n\nAll code licensed under 3-clause BSD.\n\nLogo licensed under CC-BY-SA 4.0 with attribution to Elizabeth Reedy.\n\n.. |Travis| image:: https://img.shields.io/travis/CFSworks/limeade\n   :alt: Travis (.org)\n.. |Coverage| image:: https://img.shields.io/codecov/c/github/CFSworks/limeade\n   :alt: Codecov\n.. |PyPI| image:: https://img.shields.io/pypi/v/limeade\n   :alt: PyPI\n.. |PyPI Downloads| image:: https://img.shields.io/pypi/dm/limeade\n   :alt: PyPI - Downloads", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CFSworks/limeade", "keywords": "", "license": "BSD 3-Clause License", "maintainer": "", "maintainer_email": "", "name": "limeade", "package_url": "https://pypi.org/project/limeade/", "platform": "", "project_url": "https://pypi.org/project/limeade/", "project_urls": {"Homepage": "https://github.com/CFSworks/limeade"}, "release_url": "https://pypi.org/project/limeade/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Library for hot reloading Python code at runtime", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <pre>pip install limeade\n</pre>\n<p>Live module editing and development enhancement supporting hot reloading for\nPython 3.4+.</p>\n<p><img alt=\"Travis (.org)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5aed0a980d7b52f8e7191e5e7c9e25e903a05142/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f434653776f726b732f6c696d65616465\"> <img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69019ca3b5d6566aae1e3d539bcc58cfb838c4fb/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f434653776f726b732f6c696d65616465\"> <img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7b06fb0b1b1ed1ed126475697efaabb991770fae/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c696d65616465\"> <img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e2260da4d6123e959f23142900eb89058091c86/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6c696d65616465\"></p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Equip your app with the ability to call <tt>limeade.refresh()</tt> on\ncommand (e.g. via hotkey) and invoke after making edits to your source files!</p>\n<img alt=\"https://github.com/CFSworks/limeade/blob/master/.github/readme/demo.gif?raw=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0fe4baa03252d59bdb2b23dffffb625f4326c6de/68747470733a2f2f6769746875622e636f6d2f434653776f726b732f6c696d656164652f626c6f622f6d61737465722f2e6769746875622f726561646d652f64656d6f2e6769663f7261773d74727565\">\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li><strong>Speeds up development</strong>: Don\u2019t restart your app, refresh your Python code!</li>\n<li><strong>Automatic</strong>: Just call to <tt>limeade.refresh()</tt>; Limeade does the rest!</li>\n<li><strong>Thorough</strong>: Updates your classes/functions even if instantiated/referenced!</li>\n<li><strong>Object reuse</strong>: Mutable objects are modified in-place; doesn\u2019t break <strong>is</strong>!</li>\n<li><strong>Good source of vitamin A</strong></li>\n</ul>\n</div>\n<div id=\"caveats\">\n<h2>Caveats</h2>\n<p>Limeade is still experimental. I would be deeply appreciative if you could use\nit and find ways in which it breaks!</p>\n<p>The API is not yet stable. I will keep <tt>limeade.refresh()</tt> working, but\nthat is the extent of the public API for the time being.</p>\n<p>Some things which it cannot (even theoretically) handle are:</p>\n<ul>\n<li><strong>Closures</strong>: These aren\u2019t defined at module reload time; even so, it\u2019s unsafe\nto mutate code within instantiated closures. Closures will be updated the\nnext time they are instantiated.</li>\n<li><strong>Changes in metaclass</strong>: A class can be mutated if its type (metaclass) isn\u2019t\nchanging, but Python does not permit changing the type of an existing class.</li>\n<li><strong>Threads</strong>: This is not incompatible with threading, but note that threads\nmay observe the program in an inconsistent state if they\u2019re running during a\nrefresh operation. Make sure your threads are out of harm\u2019s way!</li>\n</ul>\n<p>Some things which it may handle in the future:</p>\n<ul>\n<li><strong>Renaming functions/classes</strong>: Currently, old and new definitions are matched\nvia the qualified name. Heuristics can be used to match definitions when they\nare under different names, but this is not yet done.</li>\n<li><strong>Changes in __slots__ attribute</strong>: New slot descriptors cannot be created;\nhowever, Limeade could invent its own descriptors for new slots and insert\nthose. They wouldn\u2019t be as efficient but they would get the job done.\nDescriptors for deleted slots can be cached in case the slot is brought back\nin a future mutation.</li>\n<li><strong>Changes in base classes</strong>: Initial experiments show that Python is much more\npicky about this one would expect.</li>\n<li><strong>Automatic rollback</strong>: In case of refresh/mutate failure, it would be great\nto rollback everything to the state it was in before, so that the running app\nisn\u2019t left in a half-updated state.</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>All code licensed under 3-clause BSD.</p>\n<p>Logo licensed under CC-BY-SA 4.0 with attribution to Elizabeth Reedy.</p>\n</div>\n\n          </div>"}, "last_serial": 5900561, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f53f2775e8986fe96fff03e3f2010858", "sha256": "21309fa5001436fe46b783feed7aa264165496fe93394a7ad6a281e59bc546f6"}, "downloads": -1, "filename": "limeade-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f53f2775e8986fe96fff03e3f2010858", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6992, "upload_time": "2019-09-27T15:41:32", "upload_time_iso_8601": "2019-09-27T15:41:32.428057Z", "url": "https://files.pythonhosted.org/packages/46/e2/d8e89607bbd0166037c9f67c43ff93b27e7c75f32d3428c3a42ce9bd1f48/limeade-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "864bb7384d6b7562a2f595ee869b5150", "sha256": "2ae76a8a1f8c65e43d7c0161be4f98bd1c7b4bed83bd3324aecfef786e38d17b"}, "downloads": -1, "filename": "limeade-0.1.1.tar.gz", "has_sig": false, "md5_digest": "864bb7384d6b7562a2f595ee869b5150", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7015, "upload_time": "2019-09-28T20:22:21", "upload_time_iso_8601": "2019-09-28T20:22:21.744877Z", "url": "https://files.pythonhosted.org/packages/9c/1f/e00cb734ef8a834feb8237399045fbfc33d1c1ba3c74849501391adac36f/limeade-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "864bb7384d6b7562a2f595ee869b5150", "sha256": "2ae76a8a1f8c65e43d7c0161be4f98bd1c7b4bed83bd3324aecfef786e38d17b"}, "downloads": -1, "filename": "limeade-0.1.1.tar.gz", "has_sig": false, "md5_digest": "864bb7384d6b7562a2f595ee869b5150", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7015, "upload_time": "2019-09-28T20:22:21", "upload_time_iso_8601": "2019-09-28T20:22:21.744877Z", "url": "https://files.pythonhosted.org/packages/9c/1f/e00cb734ef8a834feb8237399045fbfc33d1c1ba3c74849501391adac36f/limeade-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:54 2020"}