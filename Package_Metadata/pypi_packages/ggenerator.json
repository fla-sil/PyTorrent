{"info": {"author": "Datenworks", "author_email": "contato@datenworks.com", "bugtrack_url": null, "classifiers": [], "description": "# GGenerator\n[![Travis Build Status](https://travis-ci.com/Datenworks/ggenerator.svg?branch=master)](https://travis-ci.com/Datenworks/ggenerator)\n\n## What is it? \n\n**GGenerator** is a command line interface that generates randomic data for tests purposes. It aims to be a easy client for programmers, data scientists, data analysts and data engineers to create a huge amount of data with a variety of complex data using JSON specification and a few commands on terminal.\n\n## Requirements\n\nYou need Python 3.7 or later and [pip](https://github.com/pypa/pip) to install and run **ggenerator** as a command line tool.\n\n## How to install\n\nA easy way to install **ggenerator** cli is to use [pip](https://github.com/pypa/pip):\n\n```bash\npip install ggenerator\n```\n\nAfter that you just have to learn how to use it.\n\n## How to use it\n\nIf you do have a specification file, you just follow the next steps:\n\n```bash\nggenerator generate --spec /file/path/example.json\n```\n\nIf you dont, [click here](https://github.com/datenworks/ggenerator/wiki) and learn how to create a specification.\n\n\n### MAC OS X Users\nIf you use MAC OS X, you need to setup two environment variables, for GGENERATOR be able to get your default language system\n```bash\nexport LC_ALL=en_US.UTF-8\nexport LANG=en_US.UTF-8 \n```\n## How to build it\n\nYou want to use the develop version or something like that?\n\nHere you will have instruction of how to build this command line interface and have it ready for use.\n\nThe first thing you have to do is clone this repository:\n\n```bash\ngit clone git@github.com:Datenworks/ggenerator.git\n```\n\nNow, you will need to create a virtualenv and install all the requirements. If you have [pipenv](https://github.com/pypa/pipenv) installed:\n\n```bash\npipenv install --dev\n```\n\nIf you dont have pipenv, you can learn how to install it by going to pipenv repository: https://github.com/pypa/pipenv\n\nAfter that you can make your updates and fixes, so when you're ready execute:\n\n```\npipenv run python setup.py build\npipenv run python setup.py install\n```\n\nDone, now you have built a new ggenerator client on your OS.\n\n## License\n\n[MIT](LICENSE)\n\n## Contribute\n\nWe dont have it organized yet, but as soon as possible you will be able to contribute.\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://datenworks.com/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ggenerator", "package_url": "https://pypi.org/project/ggenerator/", "platform": "", "project_url": "https://pypi.org/project/ggenerator/", "project_urls": {"Homepage": "https://datenworks.com/", "Source Code": "https://github.com/Datenworks/ggenerator"}, "release_url": "https://pypi.org/project/ggenerator/0.1/", "requires_dist": ["python-dateutil (>=2.8.1)", "pandas (>=1.0.1)", "click (>=7.1.1)", "tabulate (>=0.8.6)", "requests (>=2.23.0)", "gcsfs (>=0.6.0)", "s3fs (>=0.4.0)", "faker (>=4.0.1)"], "requires_python": "", "summary": "A tool capable to generate fake data with a given specification defined as a JSON DSL", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># GGenerator\n[![Travis Build Status](<a href=\"https://travis-ci.com/Datenworks/ggenerator.svg?branch=master)%5D(https://travis-ci.com/Datenworks/ggenerator\" rel=\"nofollow\">https://travis-ci.com/Datenworks/ggenerator.svg?branch=master)](https://travis-ci.com/Datenworks/ggenerator</a>)</p>\n<p>## What is it?</p>\n<p><strong>GGenerator</strong> is a command line interface that generates randomic data for tests purposes. It aims to be a easy client for programmers, data scientists, data analysts and data engineers to create a huge amount of data with a variety of complex data using JSON specification and a few commands on terminal.</p>\n<p>## Requirements</p>\n<p>You need Python 3.7 or later and [pip](<a href=\"https://github.com/pypa/pip\" rel=\"nofollow\">https://github.com/pypa/pip</a>) to install and run <strong>ggenerator</strong> as a command line tool.</p>\n<p>## How to install</p>\n<p>A easy way to install <strong>ggenerator</strong> cli is to use [pip](<a href=\"https://github.com/pypa/pip\" rel=\"nofollow\">https://github.com/pypa/pip</a>):</p>\n<p><tt>`bash\npip install ggenerator\n`</tt></p>\n<p>After that you just have to learn how to use it.</p>\n<p>## How to use it</p>\n<p>If you do have a specification file, you just follow the next steps:</p>\n<p><tt>`bash\nggenerator generate <span class=\"pre\">--spec</span> /file/path/example.json\n`</tt></p>\n<p>If you dont, [click here](<a href=\"https://github.com/datenworks/ggenerator/wiki\" rel=\"nofollow\">https://github.com/datenworks/ggenerator/wiki</a>) and learn how to create a specification.</p>\n<p>### MAC OS X Users\nIf you use MAC OS X, you need to setup two environment variables, for GGENERATOR be able to get your default language system\n<tt>`bash\nexport <span class=\"pre\">LC_ALL=en_US.UTF-8</span>\nexport <span class=\"pre\">LANG=en_US.UTF-8</span>\n`</tt>\n## How to build it</p>\n<p>You want to use the develop version or something like that?</p>\n<p>Here you will have instruction of how to build this command line interface and have it ready for use.</p>\n<p>The first thing you have to do is clone this repository:</p>\n<p><tt>`bash\ngit clone git@github.com:Datenworks/ggenerator.git\n`</tt></p>\n<p>Now, you will need to create a virtualenv and install all the requirements. If you have [pipenv](<a href=\"https://github.com/pypa/pipenv\" rel=\"nofollow\">https://github.com/pypa/pipenv</a>) installed:</p>\n<p><tt>`bash\npipenv install <span class=\"pre\">--dev</span>\n`</tt></p>\n<p>If you dont have pipenv, you can learn how to install it by going to pipenv repository: <a href=\"https://github.com/pypa/pipenv\" rel=\"nofollow\">https://github.com/pypa/pipenv</a></p>\n<p>After that you can make your updates and fixes, so when you\u2019re ready execute:</p>\n<p><tt>`\npipenv run python setup.py build\npipenv run python setup.py install\n`</tt></p>\n<p>Done, now you have built a new ggenerator client on your OS.</p>\n<p>## License</p>\n<p>[MIT](LICENSE)</p>\n<p>## Contribute</p>\n<p>We dont have it organized yet, but as soon as possible you will be able to contribute.</p>\n\n          </div>"}, "last_serial": 6921293, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c5f63085f86ffc46c40a4cfe4f611e56", "sha256": "395fb392264dfc76aa2f9b7effc3d5401d929b1f914b951d236829f661646797"}, "downloads": -1, "filename": "ggenerator-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c5f63085f86ffc46c40a4cfe4f611e56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40445, "upload_time": "2020-03-31T16:24:18", "upload_time_iso_8601": "2020-03-31T16:24:18.226257Z", "url": "https://files.pythonhosted.org/packages/86/87/ee684fcbdc60456e516ff4cd1fa1778872252a26971f19df8b74109b14aa/ggenerator-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ddbc37c93674c0a692e10721c20af12a", "sha256": "42f99ddaa7bf4fc5b53b871a75a7de474965424ea7e03908235c62fa48993739"}, "downloads": -1, "filename": "ggenerator-0.1.tar.gz", "has_sig": false, "md5_digest": "ddbc37c93674c0a692e10721c20af12a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19583, "upload_time": "2020-03-31T16:24:19", "upload_time_iso_8601": "2020-03-31T16:24:19.954568Z", "url": "https://files.pythonhosted.org/packages/54/2f/75fff10dc93a27f2baca21ca091ea6814b97f2def0ef99584fcec9be4158/ggenerator-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c5f63085f86ffc46c40a4cfe4f611e56", "sha256": "395fb392264dfc76aa2f9b7effc3d5401d929b1f914b951d236829f661646797"}, "downloads": -1, "filename": "ggenerator-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c5f63085f86ffc46c40a4cfe4f611e56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40445, "upload_time": "2020-03-31T16:24:18", "upload_time_iso_8601": "2020-03-31T16:24:18.226257Z", "url": "https://files.pythonhosted.org/packages/86/87/ee684fcbdc60456e516ff4cd1fa1778872252a26971f19df8b74109b14aa/ggenerator-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ddbc37c93674c0a692e10721c20af12a", "sha256": "42f99ddaa7bf4fc5b53b871a75a7de474965424ea7e03908235c62fa48993739"}, "downloads": -1, "filename": "ggenerator-0.1.tar.gz", "has_sig": false, "md5_digest": "ddbc37c93674c0a692e10721c20af12a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19583, "upload_time": "2020-03-31T16:24:19", "upload_time_iso_8601": "2020-03-31T16:24:19.954568Z", "url": "https://files.pythonhosted.org/packages/54/2f/75fff10dc93a27f2baca21ca091ea6814b97f2def0ef99584fcec9be4158/ggenerator-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:35 2020"}