{"info": {"author": "Sergey Tikhonov", "author_email": "zimbler@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Console", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Operating System :: POSIX", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Content Management System"], "description": "Django Sitemap Generate\n=======================\n\nBackground sitemap generation for Django.\n\n[![Build Status](https://github.com/just-work/django-sitemap-generate/workflows/build/badge.svg?branch=master&event=push)](https://github.com/just-work/django-sitemap-generate/actions?query=event%3Apush+branch%3Amaster+workflow%3Abuild)\n[![codecov](https://codecov.io/gh/just-work/django-sitemap-generate/branch/master/graph/badge.svg)](https://codecov.io/gh/just-work/django-sitemap-generate)\n[![PyPI version](https://badge.fury.io/py/django-sitemap-generate.svg)](https://badge.fury.io/py/django-sitemap-generate)\n\nUse case\n--------\n\nAlmost every content site has a sitemap. Django provides an application serving\nsitemap views, and it's OK if your website is small. If you have complicate \nlogic in sitemap generation or if you have millions of items in sitemap - you'll\nhave a massive load spikes when Google and another search engines come with \nthousands of there indexer bots. These bots will request same sitemap pages in\nparallel and those requests couldn't be cached because of large index interval \nand small hit rate. \n\nThe solution is to re-generate sitemap files periodically, once per day and not\nonce per search engine indexer. These files could be served as static files \nwhich will not affect backend performance at all.\n\nPrerequisites\n-------------\n\nThese project uses index sitemap view and per-model sitemap views to generate\nsitemap xml files. To provide it you will need following.\n\n1. Add `django.contrib.sitemaps` to installed apps\n    ```python\n    INSTALLED_APPS.append('django.contrib.sitemaps')\n    ```\n2. Configure at least one sitemap\n    ```python\n    from django.contrib.sitemaps import Sitemap\n\n    from testproject.testapp import models\n\n\n    class VideoSitemap(Sitemap):\n        name = 'video'\n        changefreq = 'daily'\n        limit = 50000\n\n        def items(self):\n            return models.Video.objects.order_by('id')\n    ```\n\n    Note that `changefreq` parameter is a hint for search engine indexer, it \n    does not affect sitemap files generation period.\n\n3. Configure sitemap serving\n    ```python\n    from django.contrib.sitemaps import views\n    from django.urls import path\n\n    from testproject.testapp.sitemaps import VideoSitemap, ArticleSitemap\n\n    sitemaps = {\n        VideoSitemap.name: VideoSitemap,\n        ArticleSitemap.name: ArticleSitemap\n    }\n\n    urlpatterns = [\n        path('sitemap.xml', views.index, {'sitemaps': sitemaps},\n             name='sitemap-index'),\n        path('sitemap-<section>.xml', views.sitemap, {'sitemaps': sitemaps},\n             name='django.contrib.sitemaps.views.sitemap'),\n    ]\n    ```\n\nNow your website supports sitemap views.\n\nInstallation\n------------\n\n```shell script\npip install django-sitemap generate\n```   \n\nWorking example is in `testproject.testapp`.\n\n1. Add `sitemap_generate` application to installed apps in django settings:\n    ```python\n    INSTALLED_APPS.append('sitemap_generate')\n    ```\n2. Add a reference to sitemap mapping to django settings:\n    ```python\n    SITEMAP_MAPPING = 'testproject.testapp.urls.sitemaps'\n    ```\n3. You may need to override default sitemap index url name\n    ```python\n    SITEMAP_INDEX_URL = 'sitemap-index'\n    ```\n4. Also you may need to setup forwarded protocol handling in django settings:\n    ```python\n    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\n    ```\n5. Note that django paginates sitemap with `p` query parameter, but \n    corresponding sitemap files are named `sitemap-video.xml`, \n    `sitemap-video-2.xml` and so on. You'll need to configure some \"rewrites\".\n\nUsage\n-----\n\nWhen you request sitemap over http, django substitutes website domain name from\nrequest to links in sitemap xml. In background, you'll need some environment \nvariables. By defaults link are generated for `localhost` over HTTPS.\n\n```shell script\nexport \\\n  SITEMAP_PROTO=https \\\n  SITEMAP_HOST=github.com \\\n  SITEMAP_PORT=443\n\n# generate all sitemaps\npython manage.py generate_sitemap\n\n# generate sitemap for single model\npython manage.py generate_sitemap video\n```\n\nYou may run sitemap generation from crontab:\n\n```\n0 0 * * * python manage.py generate_sitemap\n```\n\nYou may run sitemap generation from celery:\n\n```python \n@celery.task\ndef generate_sitemap():\n    generator = SitemapGenerator(sitemaps={'video': VideoSitema[})\n    generator.generate()\n```\n\nAnd you will need to configure xml files static responses, i.e. in nginx:\n\n```\nlocation ~* /sitemaps/(?<fn>sitemap(-(article|video)).xml {\n    try_files /media/sitemaps/$fn$arg_p.xml @backend;\n}\n\nlocation /media/ {\n    alias /app/media/;\n}\n\nlocation @backend {\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    set $app http://app:8000;\n    proxy_pass $app;\n}\n``` \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/just-work/django-sitemap-generate", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-sitemap-generate", "package_url": "https://pypi.org/project/django-sitemap-generate/", "platform": "", "project_url": "https://pypi.org/project/django-sitemap-generate/", "project_urls": {"Homepage": "https://github.com/just-work/django-sitemap-generate"}, "release_url": "https://pypi.org/project/django-sitemap-generate/0.0.2/", "requires_dist": ["Django"], "requires_python": "", "summary": "Background sitemap generation for Django", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django Sitemap Generate</h1>\n<p>Background sitemap generation for Django.</p>\n<p><a href=\"https://github.com/just-work/django-sitemap-generate/actions?query=event%3Apush+branch%3Amaster+workflow%3Abuild\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/42604631d663168b55b4f48db271ea618f4e25b4/68747470733a2f2f6769746875622e636f6d2f6a7573742d776f726b2f646a616e676f2d736974656d61702d67656e65726174652f776f726b666c6f77732f6275696c642f62616467652e7376673f6272616e63683d6d6173746572266576656e743d70757368\"></a>\n<a href=\"https://codecov.io/gh/just-work/django-sitemap-generate\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2f54fcd9d957437df3bb9b989946d9de289730a9/68747470733a2f2f636f6465636f762e696f2f67682f6a7573742d776f726b2f646a616e676f2d736974656d61702d67656e65726174652f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/django-sitemap-generate\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/06b9ba55b12259038f972cd7c31a466f00ab23c3/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d736974656d61702d67656e65726174652e737667\"></a></p>\n<h2>Use case</h2>\n<p>Almost every content site has a sitemap. Django provides an application serving\nsitemap views, and it's OK if your website is small. If you have complicate\nlogic in sitemap generation or if you have millions of items in sitemap - you'll\nhave a massive load spikes when Google and another search engines come with\nthousands of there indexer bots. These bots will request same sitemap pages in\nparallel and those requests couldn't be cached because of large index interval\nand small hit rate.</p>\n<p>The solution is to re-generate sitemap files periodically, once per day and not\nonce per search engine indexer. These files could be served as static files\nwhich will not affect backend performance at all.</p>\n<h2>Prerequisites</h2>\n<p>These project uses index sitemap view and per-model sitemap views to generate\nsitemap xml files. To provide it you will need following.</p>\n<ol>\n<li>\n<p>Add <code>django.contrib.sitemaps</code> to installed apps</p>\n<pre><span class=\"n\">INSTALLED_APPS</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">'django.contrib.sitemaps'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>Configure at least one sitemap</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.sitemaps</span> <span class=\"kn\">import</span> <span class=\"n\">Sitemap</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">testproject.testapp</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">VideoSitemap</span><span class=\"p\">(</span><span class=\"n\">Sitemap</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'video'</span>\n    <span class=\"n\">changefreq</span> <span class=\"o\">=</span> <span class=\"s1\">'daily'</span>\n    <span class=\"n\">limit</span> <span class=\"o\">=</span> <span class=\"mi\">50000</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">items</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Video</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">)</span>\n</pre>\n<p>Note that <code>changefreq</code> parameter is a hint for search engine indexer, it\ndoes not affect sitemap files generation period.</p>\n</li>\n<li>\n<p>Configure sitemap serving</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.sitemaps</span> <span class=\"kn\">import</span> <span class=\"n\">views</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">testproject.testapp.sitemaps</span> <span class=\"kn\">import</span> <span class=\"n\">VideoSitemap</span><span class=\"p\">,</span> <span class=\"n\">ArticleSitemap</span>\n\n<span class=\"n\">sitemaps</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"n\">VideoSitemap</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">VideoSitemap</span><span class=\"p\">,</span>\n    <span class=\"n\">ArticleSitemap</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">ArticleSitemap</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">'sitemap.xml'</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'sitemaps'</span><span class=\"p\">:</span> <span class=\"n\">sitemaps</span><span class=\"p\">},</span>\n         <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'sitemap-index'</span><span class=\"p\">),</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">'sitemap-&lt;section&gt;.xml'</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"o\">.</span><span class=\"n\">sitemap</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'sitemaps'</span><span class=\"p\">:</span> <span class=\"n\">sitemaps</span><span class=\"p\">},</span>\n         <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'django.contrib.sitemaps.views.sitemap'</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n</pre>\n</li>\n</ol>\n<p>Now your website supports sitemap views.</p>\n<h2>Installation</h2>\n<pre>pip install django-sitemap generate\n</pre>\n<p>Working example is in <code>testproject.testapp</code>.</p>\n<ol>\n<li>Add <code>sitemap_generate</code> application to installed apps in django settings:\n<pre><span class=\"n\">INSTALLED_APPS</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">'sitemap_generate'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>Add a reference to sitemap mapping to django settings:\n<pre><span class=\"n\">SITEMAP_MAPPING</span> <span class=\"o\">=</span> <span class=\"s1\">'testproject.testapp.urls.sitemaps'</span>\n</pre>\n</li>\n<li>You may need to override default sitemap index url name\n<pre><span class=\"n\">SITEMAP_INDEX_URL</span> <span class=\"o\">=</span> <span class=\"s1\">'sitemap-index'</span>\n</pre>\n</li>\n<li>Also you may need to setup forwarded protocol handling in django settings:\n<pre><span class=\"n\">SECURE_PROXY_SSL_HEADER</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'HTTP_X_FORWARDED_PROTO'</span><span class=\"p\">,</span> <span class=\"s1\">'https'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>Note that django paginates sitemap with <code>p</code> query parameter, but\ncorresponding sitemap files are named <code>sitemap-video.xml</code>,\n<code>sitemap-video-2.xml</code> and so on. You'll need to configure some \"rewrites\".</li>\n</ol>\n<h2>Usage</h2>\n<p>When you request sitemap over http, django substitutes website domain name from\nrequest to links in sitemap xml. In background, you'll need some environment\nvariables. By defaults link are generated for <code>localhost</code> over HTTPS.</p>\n<pre><span class=\"nb\">export</span> <span class=\"se\">\\</span>\n  <span class=\"nv\">SITEMAP_PROTO</span><span class=\"o\">=</span>https <span class=\"se\">\\</span>\n  <span class=\"nv\">SITEMAP_HOST</span><span class=\"o\">=</span>github.com <span class=\"se\">\\</span>\n  <span class=\"nv\">SITEMAP_PORT</span><span class=\"o\">=</span><span class=\"m\">443</span>\n\n<span class=\"c1\"># generate all sitemaps</span>\npython manage.py generate_sitemap\n\n<span class=\"c1\"># generate sitemap for single model</span>\npython manage.py generate_sitemap video\n</pre>\n<p>You may run sitemap generation from crontab:</p>\n<pre><code>0 0 * * * python manage.py generate_sitemap\n</code></pre>\n<p>You may run sitemap generation from celery:</p>\n<pre><span class=\"nd\">@celery</span><span class=\"o\">.</span><span class=\"n\">task</span>\n<span class=\"k\">def</span> <span class=\"nf\">generate_sitemap</span><span class=\"p\">():</span>\n    <span class=\"n\">generator</span> <span class=\"o\">=</span> <span class=\"n\">SitemapGenerator</span><span class=\"p\">(</span><span class=\"n\">sitemaps</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'video'</span><span class=\"p\">:</span> <span class=\"n\">VideoSitema</span><span class=\"p\">[})</span>\n    <span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">()</span>\n</pre>\n<p>And you will need to configure xml files static responses, i.e. in nginx:</p>\n<pre><code>location ~* /sitemaps/(?&lt;fn&gt;sitemap(-(article|video)).xml {\n    try_files /media/sitemaps/$fn$arg_p.xml @backend;\n}\n\nlocation /media/ {\n    alias /app/media/;\n}\n\nlocation @backend {\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    set $app http://app:8000;\n    proxy_pass $app;\n}\n</code></pre>\n\n          </div>"}, "last_serial": 6962781, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3578fff95df3bc6eb30e3faf60a81605", "sha256": "ab523dba0054805891ebc7e5ccdb71a5e9b3b0baf42d4ba942c0e0deb067f962"}, "downloads": -1, "filename": "django_sitemap_generate-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3578fff95df3bc6eb30e3faf60a81605", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13673, "upload_time": "2020-04-06T10:35:41", "upload_time_iso_8601": "2020-04-06T10:35:41.615640Z", "url": "https://files.pythonhosted.org/packages/9d/17/735d02eb948ceec661742c7d5e23a679975ae9ae7f24eed223a3ef06c358/django_sitemap_generate-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02b0736a0980b1afc9a4c1fbc962a58d", "sha256": "242d966c5ff8a63225d7023e05940dca14ee27ba882e5619ece13578c8a3ce83"}, "downloads": -1, "filename": "django-sitemap-generate-0.0.1.tar.gz", "has_sig": false, "md5_digest": "02b0736a0980b1afc9a4c1fbc962a58d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10120, "upload_time": "2020-04-06T10:35:43", "upload_time_iso_8601": "2020-04-06T10:35:43.765769Z", "url": "https://files.pythonhosted.org/packages/69/92/b92b48dd5632c8f106a26502fecec9d4468ec6fa10d4ff839bfe8db3a903/django-sitemap-generate-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "1f76cc8788be4f1bedef90877dc115ee", "sha256": "071def46071e511416febc6ba63caf6112f0d1777f52aa5d2aa8d5e6ff372f51"}, "downloads": -1, "filename": "django_sitemap_generate-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1f76cc8788be4f1bedef90877dc115ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13680, "upload_time": "2020-04-06T16:06:49", "upload_time_iso_8601": "2020-04-06T16:06:49.891844Z", "url": "https://files.pythonhosted.org/packages/01/48/3d8d30e4f0ed01c9d4b1fae0ffd750c2ae5293117ddfea61f2efc25cd488/django_sitemap_generate-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3335dece35031d6ccfef15a7893d26b", "sha256": "7e549c787ddb08fb7d16d3384f79b6a8abab000978da73f5240c1ecf80e31c3d"}, "downloads": -1, "filename": "django-sitemap-generate-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b3335dece35031d6ccfef15a7893d26b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10098, "upload_time": "2020-04-06T16:06:51", "upload_time_iso_8601": "2020-04-06T16:06:51.022283Z", "url": "https://files.pythonhosted.org/packages/e4/ac/65ffb15d80e289e20f1fb5de77ca17dbf9173d7b516710815b08b0600e1f/django-sitemap-generate-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1f76cc8788be4f1bedef90877dc115ee", "sha256": "071def46071e511416febc6ba63caf6112f0d1777f52aa5d2aa8d5e6ff372f51"}, "downloads": -1, "filename": "django_sitemap_generate-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1f76cc8788be4f1bedef90877dc115ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13680, "upload_time": "2020-04-06T16:06:49", "upload_time_iso_8601": "2020-04-06T16:06:49.891844Z", "url": "https://files.pythonhosted.org/packages/01/48/3d8d30e4f0ed01c9d4b1fae0ffd750c2ae5293117ddfea61f2efc25cd488/django_sitemap_generate-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3335dece35031d6ccfef15a7893d26b", "sha256": "7e549c787ddb08fb7d16d3384f79b6a8abab000978da73f5240c1ecf80e31c3d"}, "downloads": -1, "filename": "django-sitemap-generate-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b3335dece35031d6ccfef15a7893d26b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10098, "upload_time": "2020-04-06T16:06:51", "upload_time_iso_8601": "2020-04-06T16:06:51.022283Z", "url": "https://files.pythonhosted.org/packages/e4/ac/65ffb15d80e289e20f1fb5de77ca17dbf9173d7b516710815b08b0600e1f/django-sitemap-generate-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:17 2020"}