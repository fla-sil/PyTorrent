{"info": {"author": "Paul Greenberg", "author_email": "greenpau@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "Intended Audience :: Telecommunications Industry", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Topic :: System :: Networking", "Topic :: System :: Networking :: Monitoring", "Topic :: System :: Systems Administration", "Topic :: Utilities"], "description": "Network Discovery and Management Toolkit\n========================================\n\n|GitHub version| |CircleCI| |PyPI version| |Documentation Status|\n\nNetwork Discovery and Management Toolkit (``ndmtk``) makes Ansible\n\"work\" for both Traditional and Software-Defined Network (SDN) network\nmanagement.\n\nTable of Contents\n-----------------\n\n1. `Overview <https://github.com/greenpau/ndmtk#overview>`__\n2. `Workflow\n   Diagram <https://github.com/greenpau/ndmtk#workflow-diagram>`__\n3. `Getting\n   Started <https://github.com/greenpau/ndmtk#getting-started>`__\n4. `Documentation <https://github.com/greenpau/ndmtk#documentation>`__\n5. `Questions <https://github.com/greenpau/ndmtk#questions>`__\n6. `Contribution <https://github.com/greenpau/ndmtk#contribution>`__\n\nOverview\n--------\n\nThe future of network management lies in the area of Artificial\nIntelligence. Any network-enabled device will be able to build\nconnectivity to a remote peer on-demand, without human intervention. The\nrestraint on that ability are the AI-enabled systems acting as\ngatekeepers. AI is impossible without ongoing data collection, data\nanalysis, probing, and modeling. As such, networks of the future need\ntools to perform the above tasks.\n\nThis toolkit is designed to accomplish the data collection piece of the\nAI puzzle. Specifically, the toolkit is designed to:\n\n-  discover data on network devices and capture the entirety of\n   available data\n-  configure network devices via SSH, telnet, console, or terminal\n   server\n-  collect, analyze, and store the data via command-line interactions;\n   it performs data analysisn and, if necessary, it performs additional\n   data collection and/or device configuration tasks.\n\nThe intended audience of this toolkit are system and network engineers\nand designers, as well as the researchers dealing with AI.\n\nThe toolkit is delivered in a form of an Ansible plugin. However, it\ncould work well with Chef, or any other orchestration tool. The reason\nAnsible became a framework of choice is its modularity. The toolkit\nitself is modular. It allows extended existing functionality. For\nexample, the plugin does not blindly run pre-defined commands. Rather,\nit first collects all of the commands forming the understanding of the\nfunction of a particular device in a network. Once the plugin receives\nthe data, it runs it through its algorithms and determines whether there\nare any additional command required to further gather data. That process\ncontinues until the algorithms determine that the collection is\ncomplete.\n\nImportantly, once the plugin completes its tasks it produces a number of\nreports in JSON, YAML, and JUnit formats. These reports provide a map of\nwhat was done, where the collected data reside, and what that data is.\n\nThe plugin has no required arguments and parameters, because there are a\nnumber of default commands available for various operating systems, e.g.\nCisco Nexus OS, Arista EOS, Linux, etc.\n\n`Back to Top <#table-of-contents>`__\n\n--------------\n\nWorkflow Diagram\n----------------\n\n|Plugin Workflow|\n\n`Back to Top <#table-of-contents>`__\n\n--------------\n\nGetting Started\n---------------\n\nFirst, a user installs ``ndmtk`` with ``pip``:\n\n::\n\n    pip install ndmtk\n\nSecond, the user creates Ansible playbook, e.g.\n``playbooks/collect_all.yml``:\n\n::\n\n    ---\n    - name: generic data collection\n      hosts:\n      - ny-fw01\n      - ny-sw01\n      - ny-sw02\n      gather_facts: no\n      tasks:\n      - name: data collection from three network devices\n        action: ndmtk output=\"/tmp/ndmtk-%Y%m%d%H%M%S\" debug=no no_host_key_check=yes on_error=continue\n\nThe above playbook collect the data from three devices: ``ny-fw01``,\n``ny-sw01``, and ``ny-sw02``.\n\nThird, the user must create a hosts file:\n\n::\n\n    controller ansible_connection=local\n\n    [test:children]\n    cisco-asa-firewalls\n    arista-eos-switches\n\n    [arista-eos-switches]\n    ny-sw01 os=arista_eos host_overwrite=localhost host_port=8224\n    ny-sw02 os=arista_eos host_overwrite=localhost host_port=8225\n\n    [cisco-asa-firewalls]\n    ny-fw01 os=cisco_asa host_overwrite=192.168.1.1\n\n    [all:vars]\n    ansible_connection=local\n\nThe switches are Arista vEOS switches running on top of Virtual Box. The\nfirewall is a physical Cisco ASA 5505.\n\nAdditionally, the user must create Ansible configuration file in either:\n\n-  ``.ansible.cfg`` in the user's home directory, or\n-  ``ansible.cfg`` in the user's current directory\n\nThe configuration file contains the following directives:\n\n::\n\n    [defaults]\n    inventory             = ./hosts\n    forks                 = 100\n    local_tmp             = $HOME/.ansible/tmp\n    retry_files_enabled   = True\n    retry_files_save_path = $HOME/.ansible/retries/\n    log_path              = $HOME/.ansible/log/ansible.log\n    transport             = local\n\nFourth, the user must create Ansible Vault ``~/.ansible.vault.yml`` and\nstructure it according to ``ndmtk``'s documentation. Then, for\nconvinience, the user may store the password to the vault in\n``~/.ansible.vault.key`` plain-text file.\n\nFor example ``.ansible.vault.key`` has a single line for the password:\n\n::\n\n    NX23nKz!\n\nWhile the vault itself has the following content:\n\n::\n\n    --\n    credentials:\n    - regex: ny-fw0[1-9]\n      username: admin\n      password: 'NX23nKz!'\n      password_enable: '3nKz!NX2'\n      priority: 1\n      description: NY-FW01 password\n    - default: yes\n      username: greenpau\n      password: 'My#DefaultPass'\n      password_enable: 'Enabled#By$Default'\n      priority: 1\n      description: my default password\n\nThe toolkit accesses ``ny-fw01`` with the first set of credentials\nbecause its name matches the regular expression in that set. For the\nwitches, the later, default password is used.\n\nAt any point of time, the user could edit or view the vault using the\nfollowing commands:\n\n::\n\n    ansible-vault edit ~/.ansible.vault.yml --vault-password ~/.ansible.vault.key\n    ansible-vault view ~/.ansible.vault.yml --vault-password ~/.ansible.vault.key\n\nFinally, the user runs the playbook:\n\n::\n\n    ansible-playbook playbooks/collect_all.yml\n\n`Back to Top <#table-of-contents>`__\n\n--------------\n\nDocumentation\n-------------\n\nPlease read the toolkit's documentation at `Read the\nDocs <http://ndmtk.readthedocs.io/>`__ and review the\n`demo <https://github.com/greenpau/ndmtk/tree/master/demo/firewall>`__\ndirectory containing sample configuration files.\n\n-  `User\n   Guide <https://github.com/greenpau/ndmtk/blob/master/docs/userguide.md>`__\n-  `Rules\n   Engine <https://github.com/greenpau/ndmtk/blob/master/docs/rules.md>`__\n-  `Reports and Structured\n   Data <https://github.com/greenpau/ndmtk/blob/master/docs/reports.md>`__\n-  `Access Credentials\n   Management <https://github.com/greenpau/ndmtk/blob/master/docs/auth.md>`__\n-  `Frequently Asked\n   Questions <https://github.com/greenpau/ndmtk/blob/master/docs/faqs.md>`__\n\n`Back to Top <#table-of-contents>`__\n\n--------------\n\nQuestions\n---------\n\nPlease open issues and ask questions in `Github\nIssues <https://github.com/greenpau/ndmtk/issues>`__.\n\n`Back to Top <#table-of-contents>`__\n\n--------------\n\nContribution\n------------\n\nPlease contribute using the following\n`Guidelines <https://github.com/greenpau/ndmtk/tree/master/CONTRIBUTING.md>`__.\n\n`Back to Top <#table-of-contents>`__\n\n--------------\n\n.. |GitHub version| image:: https://badge.fury.io/gh/greenpau%2Fndmtk.svg\n   :target: https://badge.fury.io/gh/greenpau%2Fndmtk\n.. |CircleCI| image:: https://circleci.com/gh/greenpau/ndmtk.svg?style=svg\n   :target: https://circleci.com/gh/greenpau/ndmtk\n.. |PyPI version| image:: https://badge.fury.io/py/ndmtk.png\n   :target: https://badge.fury.io/py/ndmtk\n.. |Documentation Status| image:: https://readthedocs.org/projects/ndmtk/badge/?version=latest\n   :target: http://ndmtk.readthedocs.io/\n.. |Plugin Workflow| image:: https://raw.githubusercontent.com/greenpau/ndmtk/master/docs/_static/images/ndmtk_pypi.png\n   :target: https://raw.githubusercontent.com/greenpau/ndmtk/master/docs/_static/images/ndmtk_pypi.png", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/greenpau/ndmtk/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/greenpau/ndmtk", "keywords": "ansible,ansible plugin,network,ssh,telnet,console,automation,network automation,network discovery", "license": "OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "maintainer": "", "maintainer_email": "", "name": "ndmtk", "package_url": "https://pypi.org/project/ndmtk/", "platform": "any", "project_url": "https://pypi.org/project/ndmtk/", "project_urls": {"Download": "https://github.com/greenpau/ndmtk/archive/master.zip", "Homepage": "https://github.com/greenpau/ndmtk"}, "release_url": "https://pypi.org/project/ndmtk/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Network Discovery and Management Toolkit packaged as Ansible Plugin", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://badge.fury.io/gh/greenpau%2Fndmtk\" rel=\"nofollow\"><img alt=\"GitHub version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f9c077da2d784e7d1901c762907d2a65985ad7b/68747470733a2f2f62616467652e667572792e696f2f67682f677265656e7061752532466e646d746b2e737667\"></a> <a href=\"https://circleci.com/gh/greenpau/ndmtk\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/26b46caddf287c5869f7fd70e818a4574fa72ecf/68747470733a2f2f636972636c6563692e636f6d2f67682f677265656e7061752f6e646d746b2e7376673f7374796c653d737667\"></a> <a href=\"https://badge.fury.io/py/ndmtk\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9aad3b5fcb1f9ea7f28a3ca70bfe3a3fc759a996/68747470733a2f2f62616467652e667572792e696f2f70792f6e646d746b2e706e67\"></a> <a href=\"http://ndmtk.readthedocs.io/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c3242322520016d0182e5357c610529706761f6/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6e646d746b2f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p>Network Discovery and Management Toolkit (<tt>ndmtk</tt>) makes Ansible\n\u201cwork\u201d for both Traditional and Software-Defined Network (SDN) network\nmanagement.</p>\n<div id=\"table-of-contents\">\n<h2>Table of Contents</h2>\n<ol>\n<li><a href=\"https://github.com/greenpau/ndmtk#overview\" rel=\"nofollow\">Overview</a></li>\n<li><a href=\"https://github.com/greenpau/ndmtk#workflow-diagram\" rel=\"nofollow\">Workflow\nDiagram</a></li>\n<li><a href=\"https://github.com/greenpau/ndmtk#getting-started\" rel=\"nofollow\">Getting\nStarted</a></li>\n<li><a href=\"https://github.com/greenpau/ndmtk#documentation\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"https://github.com/greenpau/ndmtk#questions\" rel=\"nofollow\">Questions</a></li>\n<li><a href=\"https://github.com/greenpau/ndmtk#contribution\" rel=\"nofollow\">Contribution</a></li>\n</ol>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>The future of network management lies in the area of Artificial\nIntelligence. Any network-enabled device will be able to build\nconnectivity to a remote peer on-demand, without human intervention. The\nrestraint on that ability are the AI-enabled systems acting as\ngatekeepers. AI is impossible without ongoing data collection, data\nanalysis, probing, and modeling. As such, networks of the future need\ntools to perform the above tasks.</p>\n<p>This toolkit is designed to accomplish the data collection piece of the\nAI puzzle. Specifically, the toolkit is designed to:</p>\n<ul>\n<li>discover data on network devices and capture the entirety of\navailable data</li>\n<li>configure network devices via SSH, telnet, console, or terminal\nserver</li>\n<li>collect, analyze, and store the data via command-line interactions;\nit performs data analysisn and, if necessary, it performs additional\ndata collection and/or device configuration tasks.</li>\n</ul>\n<p>The intended audience of this toolkit are system and network engineers\nand designers, as well as the researchers dealing with AI.</p>\n<p>The toolkit is delivered in a form of an Ansible plugin. However, it\ncould work well with Chef, or any other orchestration tool. The reason\nAnsible became a framework of choice is its modularity. The toolkit\nitself is modular. It allows extended existing functionality. For\nexample, the plugin does not blindly run pre-defined commands. Rather,\nit first collects all of the commands forming the understanding of the\nfunction of a particular device in a network. Once the plugin receives\nthe data, it runs it through its algorithms and determines whether there\nare any additional command required to further gather data. That process\ncontinues until the algorithms determine that the collection is\ncomplete.</p>\n<p>Importantly, once the plugin completes its tasks it produces a number of\nreports in JSON, YAML, and JUnit formats. These reports provide a map of\nwhat was done, where the collected data reside, and what that data is.</p>\n<p>The plugin has no required arguments and parameters, because there are a\nnumber of default commands available for various operating systems, e.g.\nCisco Nexus OS, Arista EOS, Linux, etc.</p>\n<p><a href=\"#table-of-contents\" rel=\"nofollow\">Back to Top</a></p>\n</div>\n<hr class=\"docutils\">\n<div id=\"workflow-diagram\">\n<h2>Workflow Diagram</h2>\n<p><a href=\"https://raw.githubusercontent.com/greenpau/ndmtk/master/docs/_static/images/ndmtk_pypi.png\" rel=\"nofollow\"><img alt=\"Plugin Workflow\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91b3e41d050db6363c1c8e00787ee6cdfd3180e5/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f677265656e7061752f6e646d746b2f6d61737465722f646f63732f5f7374617469632f696d616765732f6e646d746b5f707970692e706e67\"></a></p>\n<p><a href=\"#table-of-contents\" rel=\"nofollow\">Back to Top</a></p>\n</div>\n<hr class=\"docutils\">\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>First, a user installs <tt>ndmtk</tt> with <tt>pip</tt>:</p>\n<pre>pip install ndmtk\n</pre>\n<p>Second, the user creates Ansible playbook, e.g.\n<tt>playbooks/collect_all.yml</tt>:</p>\n<pre>---\n- name: generic data collection\n  hosts:\n  - ny-fw01\n  - ny-sw01\n  - ny-sw02\n  gather_facts: no\n  tasks:\n  - name: data collection from three network devices\n    action: ndmtk output=\"/tmp/ndmtk-%Y%m%d%H%M%S\" debug=no no_host_key_check=yes on_error=continue\n</pre>\n<p>The above playbook collect the data from three devices: <tt><span class=\"pre\">ny-fw01</span></tt>,\n<tt><span class=\"pre\">ny-sw01</span></tt>, and <tt><span class=\"pre\">ny-sw02</span></tt>.</p>\n<p>Third, the user must create a hosts file:</p>\n<pre>controller ansible_connection=local\n\n[test:children]\ncisco-asa-firewalls\narista-eos-switches\n\n[arista-eos-switches]\nny-sw01 os=arista_eos host_overwrite=localhost host_port=8224\nny-sw02 os=arista_eos host_overwrite=localhost host_port=8225\n\n[cisco-asa-firewalls]\nny-fw01 os=cisco_asa host_overwrite=192.168.1.1\n\n[all:vars]\nansible_connection=local\n</pre>\n<p>The switches are Arista vEOS switches running on top of Virtual Box. The\nfirewall is a physical Cisco ASA 5505.</p>\n<p>Additionally, the user must create Ansible configuration file in either:</p>\n<ul>\n<li><tt>.ansible.cfg</tt> in the user\u2019s home directory, or</li>\n<li><tt>ansible.cfg</tt> in the user\u2019s current directory</li>\n</ul>\n<p>The configuration file contains the following directives:</p>\n<pre>[defaults]\ninventory             = ./hosts\nforks                 = 100\nlocal_tmp             = $HOME/.ansible/tmp\nretry_files_enabled   = True\nretry_files_save_path = $HOME/.ansible/retries/\nlog_path              = $HOME/.ansible/log/ansible.log\ntransport             = local\n</pre>\n<p>Fourth, the user must create Ansible Vault <tt><span class=\"pre\">~/.ansible.vault.yml</span></tt> and\nstructure it according to <tt>ndmtk</tt>\u2019s documentation. Then, for\nconvinience, the user may store the password to the vault in\n<tt><span class=\"pre\">~/.ansible.vault.key</span></tt> plain-text file.</p>\n<p>For example <tt>.ansible.vault.key</tt> has a single line for the password:</p>\n<pre>NX23nKz!\n</pre>\n<p>While the vault itself has the following content:</p>\n<pre>--\ncredentials:\n- regex: ny-fw0[1-9]\n  username: admin\n  password: 'NX23nKz!'\n  password_enable: '3nKz!NX2'\n  priority: 1\n  description: NY-FW01 password\n- default: yes\n  username: greenpau\n  password: 'My#DefaultPass'\n  password_enable: 'Enabled#By$Default'\n  priority: 1\n  description: my default password\n</pre>\n<p>The toolkit accesses <tt><span class=\"pre\">ny-fw01</span></tt> with the first set of credentials\nbecause its name matches the regular expression in that set. For the\nwitches, the later, default password is used.</p>\n<p>At any point of time, the user could edit or view the vault using the\nfollowing commands:</p>\n<pre>ansible-vault edit ~/.ansible.vault.yml --vault-password ~/.ansible.vault.key\nansible-vault view ~/.ansible.vault.yml --vault-password ~/.ansible.vault.key\n</pre>\n<p>Finally, the user runs the playbook:</p>\n<pre>ansible-playbook playbooks/collect_all.yml\n</pre>\n<p><a href=\"#table-of-contents\" rel=\"nofollow\">Back to Top</a></p>\n</div>\n<hr class=\"docutils\">\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Please read the toolkit\u2019s documentation at <a href=\"http://ndmtk.readthedocs.io/\" rel=\"nofollow\">Read the\nDocs</a> and review the\n<a href=\"https://github.com/greenpau/ndmtk/tree/master/demo/firewall\" rel=\"nofollow\">demo</a>\ndirectory containing sample configuration files.</p>\n<ul>\n<li><a href=\"https://github.com/greenpau/ndmtk/blob/master/docs/userguide.md\" rel=\"nofollow\">User\nGuide</a></li>\n<li><a href=\"https://github.com/greenpau/ndmtk/blob/master/docs/rules.md\" rel=\"nofollow\">Rules\nEngine</a></li>\n<li><a href=\"https://github.com/greenpau/ndmtk/blob/master/docs/reports.md\" rel=\"nofollow\">Reports and Structured\nData</a></li>\n<li><a href=\"https://github.com/greenpau/ndmtk/blob/master/docs/auth.md\" rel=\"nofollow\">Access Credentials\nManagement</a></li>\n<li><a href=\"https://github.com/greenpau/ndmtk/blob/master/docs/faqs.md\" rel=\"nofollow\">Frequently Asked\nQuestions</a></li>\n</ul>\n<p><a href=\"#table-of-contents\" rel=\"nofollow\">Back to Top</a></p>\n</div>\n<hr class=\"docutils\">\n<div id=\"questions\">\n<h2>Questions</h2>\n<p>Please open issues and ask questions in <a href=\"https://github.com/greenpau/ndmtk/issues\" rel=\"nofollow\">Github\nIssues</a>.</p>\n<p><a href=\"#table-of-contents\" rel=\"nofollow\">Back to Top</a></p>\n</div>\n<hr class=\"docutils\">\n<div id=\"contribution\">\n<h2>Contribution</h2>\n<p>Please contribute using the following\n<a href=\"https://github.com/greenpau/ndmtk/tree/master/CONTRIBUTING.md\" rel=\"nofollow\">Guidelines</a>.</p>\n<p><a href=\"#table-of-contents\" rel=\"nofollow\">Back to Top</a></p>\n<hr class=\"docutils\">\n</div>\n\n          </div>"}, "last_serial": 4021618, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "be55642bd241516e5547a8ef13aad46e", "sha256": "467f42590ecc4049e5511825e04108e91d138e84f441ac411eab9f2a6af9ffb7"}, "downloads": -1, "filename": "ndmtk-0.2.0.tar.gz", "has_sig": false, "md5_digest": "be55642bd241516e5547a8ef13aad46e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71042, "upload_time": "2018-07-02T04:35:36", "upload_time_iso_8601": "2018-07-02T04:35:36.955947Z", "url": "https://files.pythonhosted.org/packages/5d/12/649225c25b943b495e4b4c890542699fd68cbdc678ae5abbc1d4d883e35f/ndmtk-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be55642bd241516e5547a8ef13aad46e", "sha256": "467f42590ecc4049e5511825e04108e91d138e84f441ac411eab9f2a6af9ffb7"}, "downloads": -1, "filename": "ndmtk-0.2.0.tar.gz", "has_sig": false, "md5_digest": "be55642bd241516e5547a8ef13aad46e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71042, "upload_time": "2018-07-02T04:35:36", "upload_time_iso_8601": "2018-07-02T04:35:36.955947Z", "url": "https://files.pythonhosted.org/packages/5d/12/649225c25b943b495e4b4c890542699fd68cbdc678ae5abbc1d4d883e35f/ndmtk-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:41 2020"}