{"info": {"author": "Nathan Zilora", "author_email": "zwork101@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3 :: Only", "Topic :: System :: Archiving :: Packaging"], "description": "# rimp\nA hacky project that lets you import repls from https://repl.it into your project\n\n## How to install\n```\npip install rimp\n```\n\nWow, that was easy wasn't it?\n\n## How to use\n\nThere's only 1 command you'll need to know how to use, `load_repl`.\n\n*load_repl*(name: `str`, project: `str`, force_reinstall: `bool`=False, verbose: `bool`=True):\n\n**name**: The name of the repl.it user you're installing from (eg.\n[https://repl.it/@**21natzil**/Permissions](https://repl.it/@21natzil/Permissions))\n**project**: The name of the repl you're installing (eg. [https://repl.it/@21natzil/**Permissions**]((https://repl.it/@21natzil/Permissions)))\n**force_reinstall**: If True, rimp will install the repl again, even if it's already downloaded\n**verbose**: If False, it will *not* print anything to stdout with installation information\n\nIt's advised you checkout the `test.py` file for examples of this being used. ***PLEASE NOTE***, you can only import\nrepls with a proper `setup.py` file. If you want an example on the most minimal `setup.py` file you can make:\n\n* See [this link](https://repl.it/@21natzil/Permissions) if you only wish to make *files* importable\n* See [this link](https://repl.it/@21natzil/discordy) if you wish to make a whole directory importable\n\nFrom here, it's just a matter of figuring out what you must import, which depends on the repl you're installing and should look at those docs.\n\n## Things to note\n1. The `name` option in the `setup.py` is required but can be anything\n2. Downloading huge repls is slow, but only needs to be done once, so only set force_reinstall to True when necessary.\n3. I have not tested on Mac, however it should work on Windows + Linux\n4. This project installs repls to a .rimp file in the current working directory.\n\n### Change Log\n**0.0.0** - Project Creation\n\n**0.0.1** - PyPi Stuff\n\n**0.0.2** - Look, PyPi is tricky ok?\n\n**0.0.3** - I'm too lazy to test these things locally", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Zwork101/rimp", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rimp", "package_url": "https://pypi.org/project/rimp/", "platform": "", "project_url": "https://pypi.org/project/rimp/", "project_urls": {"Homepage": "https://github.com/Zwork101/rimp"}, "release_url": "https://pypi.org/project/rimp/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "A hacky project that lets you import repls from https://repl.it into your project", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # rimp<br>A hacky project that lets you import repls from https://repl.it into your project<br><br>## How to install<br>```<br>pip install rimp<br>```<br><br>Wow, that was easy wasn't it?<br><br>## How to use<br><br>There's only 1 command you'll need to know how to use, `load_repl`.<br><br>*load_repl*(name: `str`, project: `str`, force_reinstall: `bool`=False, verbose: `bool`=True):<br><br>**name**: The name of the repl.it user you're installing from (eg.<br>[https://repl.it/@**21natzil**/Permissions](https://repl.it/@21natzil/Permissions))<br>**project**: The name of the repl you're installing (eg. [https://repl.it/@21natzil/**Permissions**]((https://repl.it/@21natzil/Permissions)))<br>**force_reinstall**: If True, rimp will install the repl again, even if it's already downloaded<br>**verbose**: If False, it will *not* print anything to stdout with installation information<br><br>It's advised you checkout the `test.py` file for examples of this being used. ***PLEASE NOTE***, you can only import<br>repls with a proper `setup.py` file. If you want an example on the most minimal `setup.py` file you can make:<br><br>* See [this link](https://repl.it/@21natzil/Permissions) if you only wish to make *files* importable<br>* See [this link](https://repl.it/@21natzil/discordy) if you wish to make a whole directory importable<br><br>From here, it's just a matter of figuring out what you must import, which depends on the repl you're installing and should look at those docs.<br><br>## Things to note<br>1. The `name` option in the `setup.py` is required but can be anything<br>2. Downloading huge repls is slow, but only needs to be done once, so only set force_reinstall to True when necessary.<br>3. I have not tested on Mac, however it should work on Windows + Linux<br>4. This project installs repls to a .rimp file in the current working directory.<br><br>### Change Log<br>**0.0.0** - Project Creation<br><br>**0.0.1** - PyPi Stuff<br><br>**0.0.2** - Look, PyPi is tricky ok?<br><br>**0.0.3** - I'm too lazy to test these things locally\n          </div>"}, "last_serial": 4635866, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a43ac8a760d4fb03e14e28cd17ef3ccb", "sha256": "a50a6a7186b094946b132d84b5ca4e29dfb33b4cebb984c993d848dffcb75cb8"}, "downloads": -1, "filename": "rimp-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a43ac8a760d4fb03e14e28cd17ef3ccb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3138, "upload_time": "2018-12-26T18:15:14", "upload_time_iso_8601": "2018-12-26T18:15:14.831125Z", "url": "https://files.pythonhosted.org/packages/78/cc/c05f52e83d5e7d2f5c8718beb76d95f391e36966b45bf31d3de0b56b1257/rimp-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "76eaa1b24a02913d9fc3f29b68068360", "sha256": "9923201c1cc364a216e5f892c5e62d72f44b3cba4d1649994cde966d3d59bc28"}, "downloads": -1, "filename": "rimp-0.0.2.tar.gz", "has_sig": false, "md5_digest": "76eaa1b24a02913d9fc3f29b68068360", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2814, "upload_time": "2018-12-26T18:29:12", "upload_time_iso_8601": "2018-12-26T18:29:12.990892Z", "url": "https://files.pythonhosted.org/packages/28/1a/a0571fa592998193d69207ed5d6e57ae4d87a19921b8e52f1c4f2f2d2f5d/rimp-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "d6fd04b04d69703a3d96594dd74870b1", "sha256": "2544060bb2c3a71329c8e62dea18462adc3240b9435591bee5e776298e889d36"}, "downloads": -1, "filename": "rimp-0.0.3.tar.gz", "has_sig": false, "md5_digest": "d6fd04b04d69703a3d96594dd74870b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4508, "upload_time": "2018-12-26T18:33:34", "upload_time_iso_8601": "2018-12-26T18:33:34.808211Z", "url": "https://files.pythonhosted.org/packages/2e/16/7d54ff2eb73f86bfc968271543480baec8dd2f66a8980bce291b3a648dea/rimp-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d6fd04b04d69703a3d96594dd74870b1", "sha256": "2544060bb2c3a71329c8e62dea18462adc3240b9435591bee5e776298e889d36"}, "downloads": -1, "filename": "rimp-0.0.3.tar.gz", "has_sig": false, "md5_digest": "d6fd04b04d69703a3d96594dd74870b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4508, "upload_time": "2018-12-26T18:33:34", "upload_time_iso_8601": "2018-12-26T18:33:34.808211Z", "url": "https://files.pythonhosted.org/packages/2e/16/7d54ff2eb73f86bfc968271543480baec8dd2f66a8980bce291b3a648dea/rimp-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:38 2020"}