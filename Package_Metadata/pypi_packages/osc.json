{"info": {"author": "openSUSE project", "author_email": "opensuse-buildservice@opensuse.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Software Development :: Build Tools", "Topic :: System :: Archiving :: Packaging"], "description": "osc -- opensuse-commander with svn like handling\n\n\nPatches can be submitted via\n * mail to opensuse-buildservice@opensuse.org\n * Bugzilla: https://bugzilla.novell.com/enter_bug.cgi?product=openSUSE.org&component=BuildService\n * or the official Git repository on Github:\n   https://github.com/openSUSE/osc\n\n\nINSTALLATION:\n\nRPM packages are here (rpm-md repository):\nhttp://download.opensuse.org/repositories/openSUSE:/Tools/\n\nTo install from git, do\n\n        python setup.py build\n        python setup.py install\n        # create a symlink 'osc' in your path pointing to osc.py.\n        ln -s osc-wrapper.py /usr/bin/osc\n\nAlternatively, you can directly use osc-wrapper.py from the source dir\n(which is easier if you develop on osc).\n\n\nThe program needs the cElementTree python module installed. On SUSE, the\nrespective package is called python-elementtree (before 10.2: python-xml).\n\n\n\nCONFIGURATION:\n\nWhen you use it for the first time, it will ask you for your username and\npassword, and store it in ~/.oscrc.\n\n\nCONFIGURATION MIGRATION (only affects versions >= 0.114):\n\nVersion 0.114 got some cleanups for the configfile handling and therefore some\noptions are now deprecated, namely:\n* apisrv\n* scheme\n\nOne new option was added:\n* apiurl = <protocol>://<somehost> # use this as the default apiurl. If this\noption isn't specified the default (https://api.opensuse.org) is used.\n\nSo far osc still has some backward compatibility for these options but it might\nget removed in the future that's why it issues a deprecation warning in case\none of those options is still in use.\n\nThe new configuration scheme looks like the following:\n # entry for an apiurl\n [<protocol>://<apiurl>]\n user = <username>\n password = <password>\n ...\n\n'''Before starting the migration please save your ~/.oscrc file!'''\n\nIf the migration doesn't work for whatever reason feel free to send me an email\nor ask on the opensuse-buildservice mailinglist or in the #opensuse-buildservice\nirc channel.\n\n=== Migration case I (apisrv only) ===\nThe apisrv option is used to specify the default apihost. If apisrv isn't\nspecified at all the default (\"api.opensuse.org\") is used.\nThe current [general] section looks like this:\n [general]\n ...\n apisrv = <somehost>\n # or\n apisrv = <protocol>://<somehost>\n\napisrv got superseded by the new apiurl option which looks like this:\n [general]\n ...\n apiurl = <protocol>://<somehost>\n\nIf apisrv has no \"<protocol>\" https is used. Make sure all apiurl sections have\nthe new format which is described above. Afterwards apisrv can be removed.\n\n=== Migration case II (scheme only) ===\nThe current [general] section looks like this:\n [general]\n ...\n scheme = <protocol>\n\nThis means every apiurl section which don't have the new format which is\ndescribed above for instance\n [<somehost>]\n user = <username>\n password = <password>\n ...\n\nhas to be converted to\n [<protocol>://<somehost>]\n user = <username>\n password = <password>\n ...\n\nAfterwards the scheme option can be removed from the [general] section (it\nmight be the case that some sections already have the correct format).\n\n=== Migration case III (apisrv and scheme) ===\nThe current [general] section looks like this:\n [general]\n ...\n apisrv = <somehost>\n scheme = <protocol>\n\nBoth options can be removed if all apiurl sections have the new format which is\ndescribed above. So basically just adjust all apiurl sections (it might be the\ncase that some sections already have the correct format).\n\n\nKEYRING USAGE\n\nOsc now can store passwords in keyrings instead of ~/.oscrc. To use it,\nyou need python-keyring and either python-keyring-kde or -gnome.\n\nIf you want to switch to using a keyring you need to delete apiurl section\nfrom ~/.oscrc and you will be asked for credentials again, which will be then\nstored in the keyring application.\n\n\nWORKING COPY INCONSISTENT (only affects version >= 0.130)\n\nosc's working copy handling was rewritten in 0.130. Thus some\nconsistency checks were added. As a result osc might complain\nthat some old working copies are in an inconsistent state:\n Your working copy '.' is in an inconsistent state.\n Please run 'osc repairwc .' (Note this might _remove_\n files from the .osc/ dir). Please check the state\n of the working copy afterwards (via 'osc status .')\nTo fix this simply run \"osc repairwc .\" as suggested in the\nerror message. Note that \"osc repairwc .\" might need to contact\nthe api in order to fetch some missing files. Also it might remove\nsome files from the storedir (.osc/) but it won't touch any locally\nmodified files.\nIf it DOES NOT fix the problem please create a bug report and attach\nyour working copy to the bug (if possible).\n\n\nUSAGE EXAMPLES:\n(online at http://en.opensuse.org/openSUSE:OSC )\n\nTo list existing content on the server\n osc ls                                # list projects\n osc ls Apache                         # list packages in a project\n osc ls Apache subversion              # list files of package of a project\n\nCheck out content\n osc co Apache                         # entire project\n osc co Apache subversion              # a package\n osc co Apache subversion foo          # single file\n\nUpdate a working copy\n osc up\n osc up [pac_dir]                      # update a single package by its path\n osc up *                              # from within a project dir, update all packages\n osc up                                # from within a project dir, update all packages\n                                       #   AND check out all newly added packages\n\nIf an update can't be merged automatically, a file is in 'C' (conflict)\nstate, and conflicts are marked with special <<<<<<< and >>>>>>> lines.\nAfter manually resolving the problem, use\n osc resolved foo\n\nUpload change content\n osc ci                                # current dir\n osc ci <dir>\n osc ci file1 file2 ...\n\nShow the status (which files have been changed locally)\n osc st\n osc st <directory>\n osc st file1 file2 ...\n\nMark files to be added or removed on the next 'checkin'\n osc add file1 file2 ...\n osc rm file1 file2 ...\n\nAdds all new files in local copy and removes all disappeared files.\n osc addremove\n\nGenerates a diff, to view the changes\n osc diff                              # current dir\n osc diff file1 file2 ...\n\nShows the build results of the package\n osc results\n osc results [repository]\n\nShows the log file of a package (you need to be inside a package directory)\n osc log <repository> <arch>\n\nShows the URLs of .repo files which are packages sources for Yum/YaST/smart\n osc repourls [dir]\n\nTriggers a package rebuild for all repositories/architectures of a package\n osc rebuildpac [dir]\n\nShows available repository/build targets\n osc repository\n\nShows the configured repository/build targets of a project\n osc repository <project>\n\nShows meta information\n osc meta Apache\n osc meta Apache subversion\n osc id username\n\nEdit meta information\n(Creates new package/project if it doesn't exist)\n osc editmeta Apache\n osc editmeta Apache subversion\n\nUpdate package meta data with metadata taken from spec file\n osc updatepacmetafromspec <dir>\n\n\nThere are other commands, which you may not need (they may be useful in scripts):\n osc repos\n osc buildconfig\n osc buildinfo\n\n\nLocally build a package (see 'osc help build' for more info):\n osc build <repo> <arch> specfile [--clean|--noinit]\n\n\nUpdate a package to a different sources (directory foo_package_source):\n cp -a foo_package_source foo; cd foo; osc init <prj> <pac>; osc addremove; osc ci; cd $OLDPWD; rm -r foo\n\n\n\nHINT FOR W3M USERS\n\nPutting the following in the file ~/.w3m/passwd will make\nw3m know the credentials for the buildservice servers:\n\n\"\"\"\nhost api.opensuse.org\n  port 80\n  realm Authentication required\n  login foo\n  password bar\n\nhost build.opensuse.org\n  port 80\n  realm openSUSE Build Service\n  login foo\n  password bar\n\"\"\"\n\nchmod 0600 ~/.w3m/passwd\n\n\nNOTES about the testsuite\n\nA new test suite has been created and should run via doing\n# cd tests\n# python suite.py", "description_content_type": "text/plain", "docs_url": null, "download_url": "https://github.com/openSUSE/osc", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://en.opensuse.org/openSUSE:OSC", "keywords": "openSUSE,SUSE,RPM,build,buildservice", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "osc", "package_url": "https://pypi.org/project/osc/", "platform": "Linux", "project_url": "https://pypi.org/project/osc/", "project_urls": {"Download": "https://github.com/openSUSE/osc", "Homepage": "http://en.opensuse.org/openSUSE:OSC"}, "release_url": "https://pypi.org/project/osc/0.167.2/", "requires_dist": null, "requires_python": "", "summary": "openSUSE commander", "version": "0.167.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            osc -- opensuse-commander with svn like handling<br><br><br>Patches can be submitted via<br> * mail to opensuse-buildservice@opensuse.org<br> * Bugzilla: https://bugzilla.novell.com/enter_bug.cgi?product=openSUSE.org&amp;component=BuildService<br> * or the official Git repository on Github:<br>   https://github.com/openSUSE/osc<br><br><br>INSTALLATION:<br><br>RPM packages are here (rpm-md repository):<br>http://download.opensuse.org/repositories/openSUSE:/Tools/<br><br>To install from git, do<br><br>        python setup.py build<br>        python setup.py install<br>        # create a symlink 'osc' in your path pointing to osc.py.<br>        ln -s osc-wrapper.py /usr/bin/osc<br><br>Alternatively, you can directly use osc-wrapper.py from the source dir<br>(which is easier if you develop on osc).<br><br><br>The program needs the cElementTree python module installed. On SUSE, the<br>respective package is called python-elementtree (before 10.2: python-xml).<br><br><br><br>CONFIGURATION:<br><br>When you use it for the first time, it will ask you for your username and<br>password, and store it in ~/.oscrc.<br><br><br>CONFIGURATION MIGRATION (only affects versions &gt;= 0.114):<br><br>Version 0.114 got some cleanups for the configfile handling and therefore some<br>options are now deprecated, namely:<br>* apisrv<br>* scheme<br><br>One new option was added:<br>* apiurl = &lt;protocol&gt;://&lt;somehost&gt; # use this as the default apiurl. If this<br>option isn't specified the default (https://api.opensuse.org) is used.<br><br>So far osc still has some backward compatibility for these options but it might<br>get removed in the future that's why it issues a deprecation warning in case<br>one of those options is still in use.<br><br>The new configuration scheme looks like the following:<br> # entry for an apiurl<br> [&lt;protocol&gt;://&lt;apiurl&gt;]<br> user = &lt;username&gt;<br> password = &lt;password&gt;<br> ...<br><br>'''Before starting the migration please save your ~/.oscrc file!'''<br><br>If the migration doesn't work for whatever reason feel free to send me an email<br>or ask on the opensuse-buildservice mailinglist or in the #opensuse-buildservice<br>irc channel.<br><br>=== Migration case I (apisrv only) ===<br>The apisrv option is used to specify the default apihost. If apisrv isn't<br>specified at all the default (\"api.opensuse.org\") is used.<br>The current [general] section looks like this:<br> [general]<br> ...<br> apisrv = &lt;somehost&gt;<br> # or<br> apisrv = &lt;protocol&gt;://&lt;somehost&gt;<br><br>apisrv got superseded by the new apiurl option which looks like this:<br> [general]<br> ...<br> apiurl = &lt;protocol&gt;://&lt;somehost&gt;<br><br>If apisrv has no \"&lt;protocol&gt;\" https is used. Make sure all apiurl sections have<br>the new format which is described above. Afterwards apisrv can be removed.<br><br>=== Migration case II (scheme only) ===<br>The current [general] section looks like this:<br> [general]<br> ...<br> scheme = &lt;protocol&gt;<br><br>This means every apiurl section which don't have the new format which is<br>described above for instance<br> [&lt;somehost&gt;]<br> user = &lt;username&gt;<br> password = &lt;password&gt;<br> ...<br><br>has to be converted to<br> [&lt;protocol&gt;://&lt;somehost&gt;]<br> user = &lt;username&gt;<br> password = &lt;password&gt;<br> ...<br><br>Afterwards the scheme option can be removed from the [general] section (it<br>might be the case that some sections already have the correct format).<br><br>=== Migration case III (apisrv and scheme) ===<br>The current [general] section looks like this:<br> [general]<br> ...<br> apisrv = &lt;somehost&gt;<br> scheme = &lt;protocol&gt;<br><br>Both options can be removed if all apiurl sections have the new format which is<br>described above. So basically just adjust all apiurl sections (it might be the<br>case that some sections already have the correct format).<br><br><br>KEYRING USAGE<br><br>Osc now can store passwords in keyrings instead of ~/.oscrc. To use it,<br>you need python-keyring and either python-keyring-kde or -gnome.<br><br>If you want to switch to using a keyring you need to delete apiurl section<br>from ~/.oscrc and you will be asked for credentials again, which will be then<br>stored in the keyring application.<br><br><br>WORKING COPY INCONSISTENT (only affects version &gt;= 0.130)<br><br>osc's working copy handling was rewritten in 0.130. Thus some<br>consistency checks were added. As a result osc might complain<br>that some old working copies are in an inconsistent state:<br> Your working copy '.' is in an inconsistent state.<br> Please run 'osc repairwc .' (Note this might _remove_<br> files from the .osc/ dir). Please check the state<br> of the working copy afterwards (via 'osc status .')<br>To fix this simply run \"osc repairwc .\" as suggested in the<br>error message. Note that \"osc repairwc .\" might need to contact<br>the api in order to fetch some missing files. Also it might remove<br>some files from the storedir (.osc/) but it won't touch any locally<br>modified files.<br>If it DOES NOT fix the problem please create a bug report and attach<br>your working copy to the bug (if possible).<br><br><br>USAGE EXAMPLES:<br>(online at http://en.opensuse.org/openSUSE:OSC )<br><br>To list existing content on the server<br> osc ls                                # list projects<br> osc ls Apache                         # list packages in a project<br> osc ls Apache subversion              # list files of package of a project<br><br>Check out content<br> osc co Apache                         # entire project<br> osc co Apache subversion              # a package<br> osc co Apache subversion foo          # single file<br><br>Update a working copy<br> osc up<br> osc up [pac_dir]                      # update a single package by its path<br> osc up *                              # from within a project dir, update all packages<br> osc up                                # from within a project dir, update all packages<br>                                       #   AND check out all newly added packages<br><br>If an update can't be merged automatically, a file is in 'C' (conflict)<br>state, and conflicts are marked with special &lt;&lt;&lt;&lt;&lt;&lt;&lt; and &gt;&gt;&gt;&gt;&gt;&gt;&gt; lines.<br>After manually resolving the problem, use<br> osc resolved foo<br><br>Upload change content<br> osc ci                                # current dir<br> osc ci &lt;dir&gt;<br> osc ci file1 file2 ...<br><br>Show the status (which files have been changed locally)<br> osc st<br> osc st &lt;directory&gt;<br> osc st file1 file2 ...<br><br>Mark files to be added or removed on the next 'checkin'<br> osc add file1 file2 ...<br> osc rm file1 file2 ...<br><br>Adds all new files in local copy and removes all disappeared files.<br> osc addremove<br><br>Generates a diff, to view the changes<br> osc diff                              # current dir<br> osc diff file1 file2 ...<br><br>Shows the build results of the package<br> osc results<br> osc results [repository]<br><br>Shows the log file of a package (you need to be inside a package directory)<br> osc log &lt;repository&gt; &lt;arch&gt;<br><br>Shows the URLs of .repo files which are packages sources for Yum/YaST/smart<br> osc repourls [dir]<br><br>Triggers a package rebuild for all repositories/architectures of a package<br> osc rebuildpac [dir]<br><br>Shows available repository/build targets<br> osc repository<br><br>Shows the configured repository/build targets of a project<br> osc repository &lt;project&gt;<br><br>Shows meta information<br> osc meta Apache<br> osc meta Apache subversion<br> osc id username<br><br>Edit meta information<br>(Creates new package/project if it doesn't exist)<br> osc editmeta Apache<br> osc editmeta Apache subversion<br><br>Update package meta data with metadata taken from spec file<br> osc updatepacmetafromspec &lt;dir&gt;<br><br><br>There are other commands, which you may not need (they may be useful in scripts):<br> osc repos<br> osc buildconfig<br> osc buildinfo<br><br><br>Locally build a package (see 'osc help build' for more info):<br> osc build &lt;repo&gt; &lt;arch&gt; specfile [--clean|--noinit]<br><br><br>Update a package to a different sources (directory foo_package_source):<br> cp -a foo_package_source foo; cd foo; osc init &lt;prj&gt; &lt;pac&gt;; osc addremove; osc ci; cd $OLDPWD; rm -r foo<br><br><br><br>HINT FOR W3M USERS<br><br>Putting the following in the file ~/.w3m/passwd will make<br>w3m know the credentials for the buildservice servers:<br><br>\"\"\"<br>host api.opensuse.org<br>  port 80<br>  realm Authentication required<br>  login foo<br>  password bar<br><br>host build.opensuse.org<br>  port 80<br>  realm openSUSE Build Service<br>  login foo<br>  password bar<br>\"\"\"<br><br>chmod 0600 ~/.w3m/passwd<br><br><br>NOTES about the testsuite<br><br>A new test suite has been created and should run via doing<br># cd tests<br># python suite.py\n          </div>"}, "last_serial": 6623559, "releases": {"0.0": [], "0.167.2": [{"comment_text": "", "digests": {"md5": "403161c9920e46b0ae843ad974643b34", "sha256": "7a2a99099e78d7809233585f80b3550789d2b94c9180430fb2e358e802471f5a"}, "downloads": -1, "filename": "osc-0.167.2.tar.gz", "has_sig": false, "md5_digest": "403161c9920e46b0ae843ad974643b34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 261990, "upload_time": "2020-02-13T14:02:00", "upload_time_iso_8601": "2020-02-13T14:02:00.702106Z", "url": "https://files.pythonhosted.org/packages/6e/b4/1dc683d12ceb555046a68e11f04eb2e59b8c8e21086006d815231e528c8a/osc-0.167.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "403161c9920e46b0ae843ad974643b34", "sha256": "7a2a99099e78d7809233585f80b3550789d2b94c9180430fb2e358e802471f5a"}, "downloads": -1, "filename": "osc-0.167.2.tar.gz", "has_sig": false, "md5_digest": "403161c9920e46b0ae843ad974643b34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 261990, "upload_time": "2020-02-13T14:02:00", "upload_time_iso_8601": "2020-02-13T14:02:00.702106Z", "url": "https://files.pythonhosted.org/packages/6e/b4/1dc683d12ceb555046a68e11f04eb2e59b8c8e21086006d815231e528c8a/osc-0.167.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:24 2020"}