{"info": {"author": "Christoph Fink", "author_email": "christoph.fink@helsinki.fi", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Download YouTube metadata for videos relating to a search query\n\nThis is a Python script that can download metadata (including comments and likes) for YouTube videos relating to a search query. Uses the [Youtube Data API v3](https://developers.google.com/youtube/v3/docs). Metadata is saved in a PostgreSQL database.\n\n*Metatube* is conceived in a fashion that it pauses retrieval once your daily quota is used up (the default as of this writing is 10.000 requests per day) and waits until quota refill.\n\nIf you use *metatube* for scientific research, please cite it in your publication: <br />\nFink, C. (2020): *metatube: Python script to download YouTube metadata*. [doi:10.5281/zenodo.3773302](https://doi.org/10.5281/zenodo.3773302).\n\n\n### Dependencies\n\nThe script is written in Python 3 and depends on the Python modules [dateparser](https://dateparser.readthedocs.io/), [psycopg2](https://www.psycopg.org/), [PyYaml](https://pyyaml.org/) and [Requests](https://2.python-requests.org/en/master/).\n\nTo install dependencies on a Debian-based system, run:\n\n```shell\napt-get update -y &&\napt-get install -y python3-dev python3-pip python3-virtualenv\n```\n\n(There\u2019s an Archlinux AUR package pulling in all dependencies, see further down)\n\n\n### Installation\n\n- *using `pip` or similar:*\n\n```shell\npip3 install metatube\n```\n\n- *OR: manually:*\n\n    - Clone this repository\n\n    ```shell\n    git clone https://gitlab.com/helics-lab/metatube.git\n    ```\n\n    - Change to the cloned directory    \n    - Use the Python `setuptools` to install the package:\n\n    ```shell\n    cd metatube\n    python3 ./setup.py install\n    ```\n\n- *OR: (Arch Linux only) from [AUR](https://aur.archlinux.org/packages/python-metatube):*\n\n```shell\n# e.g. using yay\nyay python-metatube\n```\n\n### Configuration\n\nCopy the example configuration file [metatube.yml.example](https://gitlab.com/helics-lab/metatube/-/raw/master/metatube.yml.example) to a suitable location, depending on your operating system: \n\n- on Linux systems:\n    - system-wide configuration: `/etc/metatube.yml`\n    - per-user configuration: \n        - `~/.config/metatube.yml` OR\n        - `${XDG_CONFIG_HOME}/metatube.yml`\n- on MacOS systems:\n    - per-user configuration:\n        - `${XDG_CONFIG_HOME}/metatube.yml`\n- on Microsoft Windows systems:\n    - per-user configuration:\n        `%APPDATA%\\metatube.yml`\n\nAdapt the configuration:\n\n- Configure a PostgreSQL connection string (`connection_string`), pointing to an existing database\n- Configure an API [access key](https://developers.google.com/youtube/registering_an_application) to the Youtube Data API v3 (`youtube_api_key`).\n- Define search terms (`search_terms`)\n\nAll of these configuration options can alternatively be supplied as command line arguments to `metatube` (see [Usage](#command-line-executable)) or as a `config` `dict` directly to the constructor of `YoutubeVideoMetadataDownloader`. Command line options (see `metatube --help`) or `config` `dict` both override config file.\n\n### Usage\n\n#### Command line executable\n\n```shell\nmetatube \\\n    --postgresql-connection-string \"dbname=metatube\" \\\n    --youtube-api-key \"abcdefghijklmn\" \\\n    \"how to build a tallbike\"\n\n```\n\n#### Python\n\nImport the `metatube` module. Instantiate a `YoutubeVideoMetadataDownloader`, optionally supply a `config` dictionary. Then run the instance\u2019s `download()` method.\n\n```python\nimport metatube\n\n# config from config file\ndownloader = YoutubeVideoDownloader()\ndownloader.download()\n\n# config from config file, \n# overriding `search_terms`\ndownloader = YoutubeVideoDownloader({\n    \"search_terms\": \"Critical Mass Vladivostok\"\n})\ndownloader.download()\n\n# entire config from dictionary\ndownloader = YoutubeVideoDownloader({\n    \"youtube_api_key\": \"opqrstuvwxyz\",\n    \"connection_string\": \"dbname=metatube host=server1 user=bicyclelover123\",\n    \"search_terms\": \"dashcam bicycle commute albuquerque\"\n})\ndownloader.download()\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/helics-lab/metatube", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "metatube", "package_url": "https://pypi.org/project/metatube/", "platform": "", "project_url": "https://pypi.org/project/metatube/", "project_urls": {"Homepage": "https://gitlab.com/helics-lab/metatube"}, "release_url": "https://pypi.org/project/metatube/0.1.1/", "requires_dist": ["dateparser", "psycopg2", "pyaml", "requests"], "requires_python": "", "summary": "Download YouTube metadata for videos relating to a search query", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Download YouTube metadata for videos relating to a search query</h1>\n<p>This is a Python script that can download metadata (including comments and likes) for YouTube videos relating to a search query. Uses the <a href=\"https://developers.google.com/youtube/v3/docs\" rel=\"nofollow\">Youtube Data API v3</a>. Metadata is saved in a PostgreSQL database.</p>\n<p><em>Metatube</em> is conceived in a fashion that it pauses retrieval once your daily quota is used up (the default as of this writing is 10.000 requests per day) and waits until quota refill.</p>\n<p>If you use <em>metatube</em> for scientific research, please cite it in your publication: <br>\nFink, C. (2020): <em>metatube: Python script to download YouTube metadata</em>. <a href=\"https://doi.org/10.5281/zenodo.3773302\" rel=\"nofollow\">doi:10.5281/zenodo.3773302</a>.</p>\n<h3>Dependencies</h3>\n<p>The script is written in Python 3 and depends on the Python modules <a href=\"https://dateparser.readthedocs.io/\" rel=\"nofollow\">dateparser</a>, <a href=\"https://www.psycopg.org/\" rel=\"nofollow\">psycopg2</a>, <a href=\"https://pyyaml.org/\" rel=\"nofollow\">PyYaml</a> and <a href=\"https://2.python-requests.org/en/master/\" rel=\"nofollow\">Requests</a>.</p>\n<p>To install dependencies on a Debian-based system, run:</p>\n<pre>apt-get update -y <span class=\"o\">&amp;&amp;</span>\napt-get install -y python3-dev python3-pip python3-virtualenv\n</pre>\n<p>(There\u2019s an Archlinux AUR package pulling in all dependencies, see further down)</p>\n<h3>Installation</h3>\n<ul>\n<li><em>using <code>pip</code> or similar:</em></li>\n</ul>\n<pre>pip3 install metatube\n</pre>\n<ul>\n<li>\n<p><em>OR: manually:</em></p>\n<ul>\n<li>Clone this repository</li>\n</ul>\n<pre>git clone https://gitlab.com/helics-lab/metatube.git\n</pre>\n<ul>\n<li>Change to the cloned directory</li>\n<li>Use the Python <code>setuptools</code> to install the package:</li>\n</ul>\n<pre><span class=\"nb\">cd</span> metatube\npython3 ./setup.py install\n</pre>\n</li>\n<li>\n<p><em>OR: (Arch Linux only) from <a href=\"https://aur.archlinux.org/packages/python-metatube\" rel=\"nofollow\">AUR</a>:</em></p>\n</li>\n</ul>\n<pre><span class=\"c1\"># e.g. using yay</span>\nyay python-metatube\n</pre>\n<h3>Configuration</h3>\n<p>Copy the example configuration file <a href=\"https://gitlab.com/helics-lab/metatube/-/raw/master/metatube.yml.example\" rel=\"nofollow\">metatube.yml.example</a> to a suitable location, depending on your operating system:</p>\n<ul>\n<li>on Linux systems:\n<ul>\n<li>system-wide configuration: <code>/etc/metatube.yml</code></li>\n<li>per-user configuration:\n<ul>\n<li><code>~/.config/metatube.yml</code> OR</li>\n<li><code>${XDG_CONFIG_HOME}/metatube.yml</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>on MacOS systems:\n<ul>\n<li>per-user configuration:\n<ul>\n<li><code>${XDG_CONFIG_HOME}/metatube.yml</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>on Microsoft Windows systems:\n<ul>\n<li>per-user configuration:\n<code>%APPDATA%\\metatube.yml</code></li>\n</ul>\n</li>\n</ul>\n<p>Adapt the configuration:</p>\n<ul>\n<li>Configure a PostgreSQL connection string (<code>connection_string</code>), pointing to an existing database</li>\n<li>Configure an API <a href=\"https://developers.google.com/youtube/registering_an_application\" rel=\"nofollow\">access key</a> to the Youtube Data API v3 (<code>youtube_api_key</code>).</li>\n<li>Define search terms (<code>search_terms</code>)</li>\n</ul>\n<p>All of these configuration options can alternatively be supplied as command line arguments to <code>metatube</code> (see <a href=\"#command-line-executable\" rel=\"nofollow\">Usage</a>) or as a <code>config</code> <code>dict</code> directly to the constructor of <code>YoutubeVideoMetadataDownloader</code>. Command line options (see <code>metatube --help</code>) or <code>config</code> <code>dict</code> both override config file.</p>\n<h3>Usage</h3>\n<h4>Command line executable</h4>\n<pre>metatube <span class=\"se\">\\</span>\n    --postgresql-connection-string <span class=\"s2\">\"dbname=metatube\"</span> <span class=\"se\">\\</span>\n    --youtube-api-key <span class=\"s2\">\"abcdefghijklmn\"</span> <span class=\"se\">\\</span>\n    <span class=\"s2\">\"how to build a tallbike\"</span>\n</pre>\n<h4>Python</h4>\n<p>Import the <code>metatube</code> module. Instantiate a <code>YoutubeVideoMetadataDownloader</code>, optionally supply a <code>config</code> dictionary. Then run the instance\u2019s <code>download()</code> method.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">metatube</span>\n\n<span class=\"c1\"># config from config file</span>\n<span class=\"n\">downloader</span> <span class=\"o\">=</span> <span class=\"n\">YoutubeVideoDownloader</span><span class=\"p\">()</span>\n<span class=\"n\">downloader</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># config from config file, </span>\n<span class=\"c1\"># overriding `search_terms`</span>\n<span class=\"n\">downloader</span> <span class=\"o\">=</span> <span class=\"n\">YoutubeVideoDownloader</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"search_terms\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Critical Mass Vladivostok\"</span>\n<span class=\"p\">})</span>\n<span class=\"n\">downloader</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># entire config from dictionary</span>\n<span class=\"n\">downloader</span> <span class=\"o\">=</span> <span class=\"n\">YoutubeVideoDownloader</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"youtube_api_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"opqrstuvwxyz\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"connection_string\"</span><span class=\"p\">:</span> <span class=\"s2\">\"dbname=metatube host=server1 user=bicyclelover123\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"search_terms\"</span><span class=\"p\">:</span> <span class=\"s2\">\"dashcam bicycle commute albuquerque\"</span>\n<span class=\"p\">})</span>\n<span class=\"n\">downloader</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 7136043, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "3238b1a6cdbee7c45553687edf91f8df", "sha256": "7ea41c21111f2c3c44f477a22fcfd429b6b43e18dbcb14e892b5ba01149db600"}, "downloads": -1, "filename": "metatube-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3238b1a6cdbee7c45553687edf91f8df", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 43249, "upload_time": "2020-04-28T11:33:30", "upload_time_iso_8601": "2020-04-28T11:33:30.662600Z", "url": "https://files.pythonhosted.org/packages/ce/14/448dc70398037adaff0f7b741df489329b5730f0e6247b9eeb942c4d124b/metatube-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e4fc6f3871e64bd0f6426fbc4827e0d", "sha256": "f72a6b93507051443a1ef1baaf8aaee7f375f4a33591f6b872f72fc713b18985"}, "downloads": -1, "filename": "metatube-0.0.4.tar.gz", "has_sig": false, "md5_digest": "8e4fc6f3871e64bd0f6426fbc4827e0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42824, "upload_time": "2020-04-28T11:33:32", "upload_time_iso_8601": "2020-04-28T11:33:32.596420Z", "url": "https://files.pythonhosted.org/packages/3f/0a/bf2c27c0eed15709f2614b9f06110e5abd35503788ecd28260184b608b76/metatube-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "1e08b1c728a2eb2b8aff3673943b0c4e", "sha256": "c9ae7083422b2c17df4bb0c916db0a9ffad497d1a09e278b23e90196791d06cc"}, "downloads": -1, "filename": "metatube-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "1e08b1c728a2eb2b8aff3673943b0c4e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 43340, "upload_time": "2020-04-28T11:53:04", "upload_time_iso_8601": "2020-04-28T11:53:04.639610Z", "url": "https://files.pythonhosted.org/packages/21/d7/c5ac4bb5464a7835ab52e92fddb3e4071a7b3984ee2ac99f7305e9ad961b/metatube-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9344f59c82c5ad6cb51c701a96dd54e", "sha256": "f89ce4ba705a73882cc0df47404fa3e2e515b63c45421aba262bed9e30bedc81"}, "downloads": -1, "filename": "metatube-0.0.5.tar.gz", "has_sig": false, "md5_digest": "d9344f59c82c5ad6cb51c701a96dd54e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42991, "upload_time": "2020-04-28T11:53:06", "upload_time_iso_8601": "2020-04-28T11:53:06.279926Z", "url": "https://files.pythonhosted.org/packages/7b/2c/5167b930363a9b430403ea4530b1dae27709bc1ce651b6672fce499f6a47/metatube-0.0.5.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "28352574c2edb75b6f9ac5ef9bdc856a", "sha256": "925b1bede0f53212b5390e749c94cef8b56b6f950a8ad9cc22dadcaabca99184"}, "downloads": -1, "filename": "metatube-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "28352574c2edb75b6f9ac5ef9bdc856a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 43305, "upload_time": "2020-04-29T08:45:18", "upload_time_iso_8601": "2020-04-29T08:45:18.338553Z", "url": "https://files.pythonhosted.org/packages/56/3a/98335d87bf3cc3285e51114f627f8165c32cb043dbbc43338994e68fc5fc/metatube-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c18852cb1cd2c5950d42cf83a1133308", "sha256": "53fdcc8161687b6a0a11677b7025998d39888f3eb3af1be44d889b8a960c4dc2"}, "downloads": -1, "filename": "metatube-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c18852cb1cd2c5950d42cf83a1133308", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42972, "upload_time": "2020-04-29T08:45:19", "upload_time_iso_8601": "2020-04-29T08:45:19.415717Z", "url": "https://files.pythonhosted.org/packages/6b/21/63af9fc9208f483fbc3be48629b14d6f2af787f057a3d8f8586871fd61e3/metatube-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6c5757e31dd962f89c3d5af25d77edf2", "sha256": "26424b81729d91bfad5e824445605d52cae8224c948fe2807d6f78ba98d31057"}, "downloads": -1, "filename": "metatube-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6c5757e31dd962f89c3d5af25d77edf2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 43313, "upload_time": "2020-04-30T09:17:28", "upload_time_iso_8601": "2020-04-30T09:17:28.883747Z", "url": "https://files.pythonhosted.org/packages/0d/de/94af0f8796fc6312ff6ce7ea3c902ea928cb42845a55b7864d105d3adb3b/metatube-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f114277541e1100ac774744d3c2c5e8", "sha256": "e3ebe343a70fc625adacb9b6dc41ed3fc90a19795f3697f848313e456b4d3ff4"}, "downloads": -1, "filename": "metatube-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3f114277541e1100ac774744d3c2c5e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42984, "upload_time": "2020-04-30T09:17:29", "upload_time_iso_8601": "2020-04-30T09:17:29.933550Z", "url": "https://files.pythonhosted.org/packages/88/72/76a81642afd8ac0c28c1bbb12c559220ea8a97ec62b9026ee2b6d56f110f/metatube-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6c5757e31dd962f89c3d5af25d77edf2", "sha256": "26424b81729d91bfad5e824445605d52cae8224c948fe2807d6f78ba98d31057"}, "downloads": -1, "filename": "metatube-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6c5757e31dd962f89c3d5af25d77edf2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 43313, "upload_time": "2020-04-30T09:17:28", "upload_time_iso_8601": "2020-04-30T09:17:28.883747Z", "url": "https://files.pythonhosted.org/packages/0d/de/94af0f8796fc6312ff6ce7ea3c902ea928cb42845a55b7864d105d3adb3b/metatube-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f114277541e1100ac774744d3c2c5e8", "sha256": "e3ebe343a70fc625adacb9b6dc41ed3fc90a19795f3697f848313e456b4d3ff4"}, "downloads": -1, "filename": "metatube-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3f114277541e1100ac774744d3c2c5e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42984, "upload_time": "2020-04-30T09:17:29", "upload_time_iso_8601": "2020-04-30T09:17:29.933550Z", "url": "https://files.pythonhosted.org/packages/88/72/76a81642afd8ac0c28c1bbb12c559220ea8a97ec62b9026ee2b6d56f110f/metatube-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:46 2020"}