{"info": {"author": "SimLeek", "author_email": "josh.miklos@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "# GangliPy\n\nGangliPy is a collection of neural networks evaluated to be the best for certain types of tasks.\n\n# In Progress\n\n\n## Auto OCR\n\nThe first project here is an attempt to recognize all 60,000 unicode characters using a single hidden layer.\n\nFully connected input and output layers have proven sufficient for recognizing 16x16 unicode images, and can even \npredict never before seen characters.\n\n![OCR example](https://i.imgur.com/2mwf7XQ.jpg)\n\nHowever, 'predicting never before seen characters' fades to noise when enough characters are seen, so another layer is \n needed to make this 'variational' and keep realistic guesses when failing to perfectly predict.\n\n## Unicode Regognition Tests\n\nThe unicode recognition tests I'm using for Auto OCR will need to be pulled out and placed into a seperate testing and \nevaluation repository.\n\n# Installation\n\nThere is currently no pip repository available. Once Auto OCR is finished, it will be pulled out into its own repo and \nwill be added as a requirement to this one.\n\n#License\n\nGangliPy is distributed under the terms of \n[GNU AGPL V3.0](https://choosealicense.com/licenses/agpl-3.0)", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SimLeek/GangliPy", "keywords": "", "license": "MIT", "maintainer": "SimLeek", "maintainer_email": "josh.miklos@gmail.com", "name": "GangliPy", "package_url": "https://pypi.org/project/GangliPy/", "platform": "", "project_url": "https://pypi.org/project/GangliPy/", "project_urls": {"Homepage": "https://github.com/SimLeek/GangliPy"}, "release_url": "https://pypi.org/project/GangliPy/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># GangliPy</p>\n<p>GangliPy is a collection of neural networks evaluated to be the best for certain types of tasks.</p>\n<p># In Progress</p>\n<p>## Auto OCR</p>\n<p>The first project here is an attempt to recognize all 60,000 unicode characters using a single hidden layer.</p>\n<p>Fully connected input and output layers have proven sufficient for recognizing 16x16 unicode images, and can even\npredict never before seen characters.</p>\n<p>![OCR example](<a href=\"https://i.imgur.com/2mwf7XQ.jpg\" rel=\"nofollow\">https://i.imgur.com/2mwf7XQ.jpg</a>)</p>\n<dl>\n<dt>However, \u2018predicting never before seen characters\u2019 fades to noise when enough characters are seen, so another layer is</dt>\n<dd>needed to make this \u2018variational\u2019 and keep realistic guesses when failing to perfectly predict.</dd>\n</dl>\n<p>## Unicode Regognition Tests</p>\n<p>The unicode recognition tests I\u2019m using for Auto OCR will need to be pulled out and placed into a seperate testing and\nevaluation repository.</p>\n<p># Installation</p>\n<p>There is currently no pip repository available. Once Auto OCR is finished, it will be pulled out into its own repo and\nwill be added as a requirement to this one.</p>\n<p>#License</p>\n<p>GangliPy is distributed under the terms of\n[GNU AGPL V3.0](<a href=\"https://choosealicense.com/licenses/agpl-3.0\" rel=\"nofollow\">https://choosealicense.com/licenses/agpl-3.0</a>)</p>\n\n          </div>"}, "last_serial": 5153506, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "35b59203838b2a60ae5ef176188a01f6", "sha256": "a43d6d508c0df6ab60a62467def187b7e59465d515b5c3905b5a3010d7a176c5"}, "downloads": -1, "filename": "GangliPy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "35b59203838b2a60ae5ef176188a01f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20934, "upload_time": "2019-04-17T06:34:22", "upload_time_iso_8601": "2019-04-17T06:34:22.116900Z", "url": "https://files.pythonhosted.org/packages/e7/0c/2cf8335c9bd9e8f19811efc1cb61f863ec67f6fc921add8bb794470a280e/GangliPy-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "35b59203838b2a60ae5ef176188a01f6", "sha256": "a43d6d508c0df6ab60a62467def187b7e59465d515b5c3905b5a3010d7a176c5"}, "downloads": -1, "filename": "GangliPy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "35b59203838b2a60ae5ef176188a01f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20934, "upload_time": "2019-04-17T06:34:22", "upload_time_iso_8601": "2019-04-17T06:34:22.116900Z", "url": "https://files.pythonhosted.org/packages/e7/0c/2cf8335c9bd9e8f19811efc1cb61f863ec67f6fc921add8bb794470a280e/GangliPy-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:10 2020"}