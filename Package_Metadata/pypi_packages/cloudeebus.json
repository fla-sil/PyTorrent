{"info": {"author": "Luc Yriarte, Christophe Guiraud, Frederic Paut", "author_email": "luc.yriarte@intel.com, christophe.guiraud@intel.com, frederic.paut@intel.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet", "Topic :: Software Development :: Libraries"], "description": "\nCloudeebus\n==========\n\nCloudeebus - DBus for the Cloud - is a component which enables calling DBus\n methods and registering on DBus signals from Javascript.\n\n\nInstall\n-------\n\n### Installing Cloudeebus from the project root directory:\n\nCloudeebus will install itself in Python's dist-packages folder. The\n cloudeebus.py wrapper shell goes in the executables path.\n\n\tsudo python setup.py install\n\nSee the [Getting Started](https://github.com/01org/cloudeebus/wiki/Getting-started)\n section of the [Cloudeebus wiki](https://github.com/01org/cloudeebus/wiki)\n for a list of dependencies to install.\n\n\n### Running Cloudeebus:\n\nThe Cloudeebus server must be run either with credentials and a whitelist to\n restrict access to DBus services, or in opendoor mode.\n\n\tusage: cloudeebus.py [-h] [-v] [-d] [-o] [-p PORT] [-c CREDENTIALS]\n\t\t             [-w WHITELIST] [-s SERVICELIST] [-n NETMASK]\n\n\tJavascript DBus bridge.\n\n\toptional arguments:\n\t  -h, --help            show this help message and exit\n\t  -v, --version         print version and exit\n\t  -d, --debug           log debug info on standard output\n\t  -o, --opendoor        allow anonymous access to all services\n\t  -p PORT, --port PORT  port number\n\t  -c CREDENTIALS, --credentials CREDENTIALS\n\t\t                path to credentials file\n\t  -w WHITELIST, --whitelist WHITELIST\n\t\t                path to whitelist file (DBus services to use)\n\t  -s SERVICELIST, --servicelist SERVICELIST\n\t\t                path to servicelist file (DBus services to export)\n\t  -n NETMASK, --netmask NETMASK\n\t\t                netmask,IP filter (comma separated.) eg. : -n\n\t\t                127.0.0.1,192.168.2.0/24,10.12.16.0/255.255.255.0\n\n\nDocumentation\n-------------\n\n  * [Cloudeebus](http://01.org/cloudeebus) project home page on [01.org](http://01.org)\n  * [Javascript API](https://github.com/01org/cloudeebus/wiki/API) reference.\n  * [Architecture](https://github.com/01org/cloudeebus/wiki/Architecture) block diagram.\n\n\nExamples\n--------\n\n### dbus-tools\n\nThe /doc/dbus-tools folder contains dbus-send and dbus-register test pages.\nCloudeebus runs in opendoor mode, the dbus-tools pages have no manifest.\n\n\tcloudeebus.py --debug --opendoor --port=9001 &\n\tfirefox ./doc/dbus-tools/dbus-register.html ./doc/dbus-tools/dbus-send.html &\n\n### sample\n\nThe /doc/sample folder contains a working sample using credentials, whitelist and manifest.\nCloudeebus runs with credentials and a whitelist that are matched by the\n sample page manifest.\n\n\tcloudeebus.py --debug --credentials=./doc/sample/CREDENTIALS --whitelist=./doc/sample/WHITELIST &\n\tfirefox ./doc/sample/cloudeebus.html &\n\nThe sample page is also online as a [live demo](http://01org.github.com/cloudeebus/).\n\n### agent\n\nThe /doc/agent folder contains a working client sample using credentials, whitelist and manifest and\na working service sample using credentials, servicelist and manifest.\nOne instance of cloudeebus runs with credentials and a whitelist that are matched by the \nclient page manifest.\n\n\tcloudeebus.py --debug --credentials=./doc/agent/CREDENTIALS --whitelist=./doc/agent/SAMPLELIST -p 9002 &\n\tfirefox ./doc/agent/client.html &\n\nThe other instance of cloudeebus runs with credentials and a servicelist that are matched by the \nserver page manifest.\n\n\tcloudeebus.py --debug --credentials=./doc/agent/CREDENTIALS --servicelist=./doc/agent/SAMPLELIST -p 9003 &\n\tfirefox ./doc/agent/server.html &\n\n\nAcknowledgements\n----------------\n\nCloudeebus uses code from the following open-source projects:\n\n  * [AutobahnJS](http://autobahn.ws/js) ([MIT](http://opensource.org/licenses/MIT) License)\n  * [AutobahnPython](http://autobahn.ws/python) ([Apache 2.0](http://opensource.org/licenses/Apache-2.0) License)\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/01org/cloudeebus/wiki", "keywords": "cloudeebus autobahn websocket dbus javascript bridge", "license": "http://www.apache.org/licenses/LICENSE-2.0", "maintainer": null, "maintainer_email": null, "name": "cloudeebus", "package_url": "https://pypi.org/project/cloudeebus/", "platform": "Any", "project_url": "https://pypi.org/project/cloudeebus/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/01org/cloudeebus/wiki"}, "release_url": "https://pypi.org/project/cloudeebus/0.6.0/", "requires_dist": null, "requires_python": null, "summary": "Javascript-DBus bridge", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <br>Cloudeebus<br>==========<br><br>Cloudeebus - DBus for the Cloud - is a component which enables calling DBus<br> methods and registering on DBus signals from Javascript.<br><br><br>Install<br>-------<br><br>### Installing Cloudeebus from the project root directory:<br><br>Cloudeebus will install itself in Python's dist-packages folder. The<br> cloudeebus.py wrapper shell goes in the executables path.<br><br>\tsudo python setup.py install<br><br>See the [Getting Started](https://github.com/01org/cloudeebus/wiki/Getting-started)<br> section of the [Cloudeebus wiki](https://github.com/01org/cloudeebus/wiki)<br> for a list of dependencies to install.<br><br><br>### Running Cloudeebus:<br><br>The Cloudeebus server must be run either with credentials and a whitelist to<br> restrict access to DBus services, or in opendoor mode.<br><br>\tusage: cloudeebus.py [-h] [-v] [-d] [-o] [-p PORT] [-c CREDENTIALS]<br>\t\t             [-w WHITELIST] [-s SERVICELIST] [-n NETMASK]<br><br>\tJavascript DBus bridge.<br><br>\toptional arguments:<br>\t  -h, --help            show this help message and exit<br>\t  -v, --version         print version and exit<br>\t  -d, --debug           log debug info on standard output<br>\t  -o, --opendoor        allow anonymous access to all services<br>\t  -p PORT, --port PORT  port number<br>\t  -c CREDENTIALS, --credentials CREDENTIALS<br>\t\t                path to credentials file<br>\t  -w WHITELIST, --whitelist WHITELIST<br>\t\t                path to whitelist file (DBus services to use)<br>\t  -s SERVICELIST, --servicelist SERVICELIST<br>\t\t                path to servicelist file (DBus services to export)<br>\t  -n NETMASK, --netmask NETMASK<br>\t\t                netmask,IP filter (comma separated.) eg. : -n<br>\t\t                127.0.0.1,192.168.2.0/24,10.12.16.0/255.255.255.0<br><br><br>Documentation<br>-------------<br><br>  * [Cloudeebus](http://01.org/cloudeebus) project home page on [01.org](http://01.org)<br>  * [Javascript API](https://github.com/01org/cloudeebus/wiki/API) reference.<br>  * [Architecture](https://github.com/01org/cloudeebus/wiki/Architecture) block diagram.<br><br><br>Examples<br>--------<br><br>### dbus-tools<br><br>The /doc/dbus-tools folder contains dbus-send and dbus-register test pages.<br>Cloudeebus runs in opendoor mode, the dbus-tools pages have no manifest.<br><br>\tcloudeebus.py --debug --opendoor --port=9001 &amp;<br>\tfirefox ./doc/dbus-tools/dbus-register.html ./doc/dbus-tools/dbus-send.html &amp;<br><br>### sample<br><br>The /doc/sample folder contains a working sample using credentials, whitelist and manifest.<br>Cloudeebus runs with credentials and a whitelist that are matched by the<br> sample page manifest.<br><br>\tcloudeebus.py --debug --credentials=./doc/sample/CREDENTIALS --whitelist=./doc/sample/WHITELIST &amp;<br>\tfirefox ./doc/sample/cloudeebus.html &amp;<br><br>The sample page is also online as a [live demo](http://01org.github.com/cloudeebus/).<br><br>### agent<br><br>The /doc/agent folder contains a working client sample using credentials, whitelist and manifest and<br>a working service sample using credentials, servicelist and manifest.<br>One instance of cloudeebus runs with credentials and a whitelist that are matched by the <br>client page manifest.<br><br>\tcloudeebus.py --debug --credentials=./doc/agent/CREDENTIALS --whitelist=./doc/agent/SAMPLELIST -p 9002 &amp;<br>\tfirefox ./doc/agent/client.html &amp;<br><br>The other instance of cloudeebus runs with credentials and a servicelist that are matched by the <br>server page manifest.<br><br>\tcloudeebus.py --debug --credentials=./doc/agent/CREDENTIALS --servicelist=./doc/agent/SAMPLELIST -p 9003 &amp;<br>\tfirefox ./doc/agent/server.html &amp;<br><br><br>Acknowledgements<br>----------------<br><br>Cloudeebus uses code from the following open-source projects:<br><br>  * [AutobahnJS](http://autobahn.ws/js) ([MIT](http://opensource.org/licenses/MIT) License)<br>  * [AutobahnPython](http://autobahn.ws/python) ([Apache 2.0](http://opensource.org/licenses/Apache-2.0) License)<br>\n          </div>"}, "last_serial": 1010763, "releases": {"0.2": [], "0.2.1": [], "0.3.0": [], "0.3.1": [], "0.3.2": [], "0.4.0": [], "0.5.0": [], "0.5.1": [], "0.6.0": [{"comment_text": "", "digests": {"md5": "b849ff5f3ab861abbacf04adb67046fc", "sha256": "ade028910c9e75f1dffaa37d37b305d5fb7910781d3f7c8899ade8869bf3934d"}, "downloads": -1, "filename": "cloudeebus-0.6.0-py2.7.egg", "has_sig": false, "md5_digest": "b849ff5f3ab861abbacf04adb67046fc", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 31405, "upload_time": "2014-02-24T21:58:37", "upload_time_iso_8601": "2014-02-24T21:58:37.896607Z", "url": "https://files.pythonhosted.org/packages/2d/7a/9cd5bee1b85c9cc12868f9d7823b056cd5265b49b71926416cd471852706/cloudeebus-0.6.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d431ff9f9150cf7ba0f6f89980789a32", "sha256": "a19662d52a4c756d1be6e5bae7134b34676695fdf9266da6509c686d831300d7"}, "downloads": -1, "filename": "cloudeebus-0.6.0.tar.gz", "has_sig": false, "md5_digest": "d431ff9f9150cf7ba0f6f89980789a32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8605, "upload_time": "2014-02-24T21:58:56", "upload_time_iso_8601": "2014-02-24T21:58:56.124563Z", "url": "https://files.pythonhosted.org/packages/82/e3/388d271bdd79951a5aceb44cf05ab75c95c06a49e6e2a96b3e0562bf45f8/cloudeebus-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b849ff5f3ab861abbacf04adb67046fc", "sha256": "ade028910c9e75f1dffaa37d37b305d5fb7910781d3f7c8899ade8869bf3934d"}, "downloads": -1, "filename": "cloudeebus-0.6.0-py2.7.egg", "has_sig": false, "md5_digest": "b849ff5f3ab861abbacf04adb67046fc", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 31405, "upload_time": "2014-02-24T21:58:37", "upload_time_iso_8601": "2014-02-24T21:58:37.896607Z", "url": "https://files.pythonhosted.org/packages/2d/7a/9cd5bee1b85c9cc12868f9d7823b056cd5265b49b71926416cd471852706/cloudeebus-0.6.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d431ff9f9150cf7ba0f6f89980789a32", "sha256": "a19662d52a4c756d1be6e5bae7134b34676695fdf9266da6509c686d831300d7"}, "downloads": -1, "filename": "cloudeebus-0.6.0.tar.gz", "has_sig": false, "md5_digest": "d431ff9f9150cf7ba0f6f89980789a32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8605, "upload_time": "2014-02-24T21:58:56", "upload_time_iso_8601": "2014-02-24T21:58:56.124563Z", "url": "https://files.pythonhosted.org/packages/82/e3/388d271bdd79951a5aceb44cf05ab75c95c06a49e6e2a96b3e0562bf45f8/cloudeebus-0.6.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:51 2020"}