{"info": {"author": "Wiktor Grochal", "author_email": "wiktor.grochal@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Utilities"], "description": "# django-microframework\n\nDjango microframework allows you for easy synchronization of database entities between multiple django instances.\n\n# Requirements\n\n* Python (3.6, 3.7, 3.8)\n* Django (1.11, 2.0, 2.1, 2.2)\n\n# Installation\n    pip install django-microframework\n    python manage.py migrate\n\n# Usage\n### Sender\nIn your models.py file:\n```python\nfrom microframework.sender import connect_signals\nconnect_signals([RegularModel, JSONModel, TreeModel, ForeignKeyModel], 'example_sender')\n```\nIn your settings.py:\n```python\nMICROFRAMEWORK_AMQP_URI = 'pyamqp://guest:guest@172.17.0.5'\n```\n\n### Listener\nCreate service.py file:\n```python\nfrom microframework.handler import DjangoObjectHandler, NamekoHandlerMeta\nfrom example.models import RegularModel, JSONModel, TreeModel, ForeignKeyModel\n\n\nclass ListenerService(DjangoObjectHandler, metaclass=NamekoHandlerMeta):\n    name = \"listener_service\"\n    sender_name = \"example_sender\"\n    synced_save_models = [RegularModel, JSONModel, TreeModel, ForeignKeyModel]\n```\nIn your settings.py:\n```python\nMICROFRAMEWORK_SERVICE_CLASS = \"example.service:ListenerService\"\nMICROFRAMEWORK_AMQP_URI = 'pyamqp://guest:guest@172.17.0.5'\n```\n\nAnd add `'microframework'` to your `INSTALLED_APPS` setting.\n\n    INSTALLED_APPS = [\n        ...\n        'microframework',\n    ]\nIn your manage.py - this needs to be put before anything else in your code:\n```python\nimport eventlet\neventlet.monkey_patch()\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wiktor-grochal/django-microframework", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "django-microframework", "package_url": "https://pypi.org/project/django-microframework/", "platform": "", "project_url": "https://pypi.org/project/django-microframework/", "project_urls": {"Homepage": "https://github.com/wiktor-grochal/django-microframework"}, "release_url": "https://pypi.org/project/django-microframework/0.1.0/", "requires_dist": ["django", "python-dateutil", "nameko"], "requires_python": ">=3.6", "summary": "Django microframework allows you for easy synchronization of database entities between multiple django instances.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-microframework</h1>\n<p>Django microframework allows you for easy synchronization of database entities between multiple django instances.</p>\n<h1>Requirements</h1>\n<ul>\n<li>Python (3.6, 3.7, 3.8)</li>\n<li>Django (1.11, 2.0, 2.1, 2.2)</li>\n</ul>\n<h1>Installation</h1>\n<pre><code>pip install django-microframework\npython manage.py migrate\n</code></pre>\n<h1>Usage</h1>\n<h3>Sender</h3>\n<p>In your models.py file:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">microframework.sender</span> <span class=\"kn\">import</span> <span class=\"n\">connect_signals</span>\n<span class=\"n\">connect_signals</span><span class=\"p\">([</span><span class=\"n\">RegularModel</span><span class=\"p\">,</span> <span class=\"n\">JSONModel</span><span class=\"p\">,</span> <span class=\"n\">TreeModel</span><span class=\"p\">,</span> <span class=\"n\">ForeignKeyModel</span><span class=\"p\">],</span> <span class=\"s1\">'example_sender'</span><span class=\"p\">)</span>\n</pre>\n<p>In your settings.py:</p>\n<pre><span class=\"n\">MICROFRAMEWORK_AMQP_URI</span> <span class=\"o\">=</span> <span class=\"s1\">'pyamqp://guest:guest@172.17.0.5'</span>\n</pre>\n<h3>Listener</h3>\n<p>Create service.py file:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">microframework.handler</span> <span class=\"kn\">import</span> <span class=\"n\">DjangoObjectHandler</span><span class=\"p\">,</span> <span class=\"n\">NamekoHandlerMeta</span>\n<span class=\"kn\">from</span> <span class=\"nn\">example.models</span> <span class=\"kn\">import</span> <span class=\"n\">RegularModel</span><span class=\"p\">,</span> <span class=\"n\">JSONModel</span><span class=\"p\">,</span> <span class=\"n\">TreeModel</span><span class=\"p\">,</span> <span class=\"n\">ForeignKeyModel</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ListenerService</span><span class=\"p\">(</span><span class=\"n\">DjangoObjectHandler</span><span class=\"p\">,</span> <span class=\"n\">metaclass</span><span class=\"o\">=</span><span class=\"n\">NamekoHandlerMeta</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"listener_service\"</span>\n    <span class=\"n\">sender_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"example_sender\"</span>\n    <span class=\"n\">synced_save_models</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">RegularModel</span><span class=\"p\">,</span> <span class=\"n\">JSONModel</span><span class=\"p\">,</span> <span class=\"n\">TreeModel</span><span class=\"p\">,</span> <span class=\"n\">ForeignKeyModel</span><span class=\"p\">]</span>\n</pre>\n<p>In your settings.py:</p>\n<pre><span class=\"n\">MICROFRAMEWORK_SERVICE_CLASS</span> <span class=\"o\">=</span> <span class=\"s2\">\"example.service:ListenerService\"</span>\n<span class=\"n\">MICROFRAMEWORK_AMQP_URI</span> <span class=\"o\">=</span> <span class=\"s1\">'pyamqp://guest:guest@172.17.0.5'</span>\n</pre>\n<p>And add <code>'microframework'</code> to your <code>INSTALLED_APPS</code> setting.</p>\n<pre><code>INSTALLED_APPS = [\n    ...\n    'microframework',\n]\n</code></pre>\n<p>In your manage.py - this needs to be put before anything else in your code:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">eventlet</span>\n<span class=\"n\">eventlet</span><span class=\"o\">.</span><span class=\"n\">monkey_patch</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6152706, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "83aa439315724066baad21fd33df9e14", "sha256": "941f064a263df3bb6e6ed191ff74e0844112a0ddafb281c1442c3bca5861996a"}, "downloads": -1, "filename": "django_microframework-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "83aa439315724066baad21fd33df9e14", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8144, "upload_time": "2019-11-18T02:05:41", "upload_time_iso_8601": "2019-11-18T02:05:41.838697Z", "url": "https://files.pythonhosted.org/packages/c1/d3/54f589e30220079906d9f6339f68a9935f465e9b04c4fb2f8aff101a3125/django_microframework-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3cf8eff628fef2a8f2fc0aeedf911ef", "sha256": "9bc757b9ddc91a0d96b0b8a63f86a7754cf77091ab5d7649c589bf0ee0fc107d"}, "downloads": -1, "filename": "django-microframework-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e3cf8eff628fef2a8f2fc0aeedf911ef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4987, "upload_time": "2019-11-18T02:05:44", "upload_time_iso_8601": "2019-11-18T02:05:44.118680Z", "url": "https://files.pythonhosted.org/packages/46/4f/84b2dee04b163ac24975ebf13f24936903d73ebcd13a281ccf3f191a32a9/django-microframework-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "83aa439315724066baad21fd33df9e14", "sha256": "941f064a263df3bb6e6ed191ff74e0844112a0ddafb281c1442c3bca5861996a"}, "downloads": -1, "filename": "django_microframework-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "83aa439315724066baad21fd33df9e14", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8144, "upload_time": "2019-11-18T02:05:41", "upload_time_iso_8601": "2019-11-18T02:05:41.838697Z", "url": "https://files.pythonhosted.org/packages/c1/d3/54f589e30220079906d9f6339f68a9935f465e9b04c4fb2f8aff101a3125/django_microframework-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3cf8eff628fef2a8f2fc0aeedf911ef", "sha256": "9bc757b9ddc91a0d96b0b8a63f86a7754cf77091ab5d7649c589bf0ee0fc107d"}, "downloads": -1, "filename": "django-microframework-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e3cf8eff628fef2a8f2fc0aeedf911ef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4987, "upload_time": "2019-11-18T02:05:44", "upload_time_iso_8601": "2019-11-18T02:05:44.118680Z", "url": "https://files.pythonhosted.org/packages/46/4f/84b2dee04b163ac24975ebf13f24936903d73ebcd13a281ccf3f191a32a9/django-microframework-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:05 2020"}