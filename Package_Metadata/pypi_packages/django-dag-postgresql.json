{"info": {"author": "Rajiv Subrahmanyam", "author_email": "rajiv.public@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "Django Dag for Postgresql\n\nDirected Acyclic Graphs for Django/Postgres.\n\nThe main distinghishing factor for this project is that it can retrieve entire\nsections of a graph in a single query. The trade off is portability: it uses\nPostgres Common Table Expressions (CTE) to achieve this and is therefore not\ncompatible with other databases.\n\nExample:\n\n\nCredits:\n\n1. [This excellent blog post](https://www.fusionbox.com/blog/detail/graph-algorithms-in-a-database-recursive-ctes-and-topological-sort-with-postgres/620/)\n2. [django-dag](https://pypi.org/project/django-dag/)\n3. [django-treebeard-dag](https://pypi.org/project/django-treebeard-dag/)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/worsht/django-dag-postgresql", "keywords": "", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "django-dag-postgresql", "package_url": "https://pypi.org/project/django-dag-postgresql/", "platform": "", "project_url": "https://pypi.org/project/django-dag-postgresql/", "project_urls": {"Homepage": "https://github.com/worsht/django-dag-postgresql"}, "release_url": "https://pypi.org/project/django-dag-postgresql/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Directed Acyclic Graph implementation for Django / Postgresql", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django Dag for Postgresql</p>\n<p>Directed Acyclic Graphs for Django/Postgres.</p>\n<p>The main distinghishing factor for this project is that it can retrieve entire\nsections of a graph in a single query. The trade off is portability: it uses\nPostgres Common Table Expressions (CTE) to achieve this and is therefore not\ncompatible with other databases.</p>\n<p>Example:</p>\n<p>Credits:</p>\n<ol>\n<li>[This excellent blog post](<a href=\"https://www.fusionbox.com/blog/detail/graph-algorithms-in-a-database-recursive-ctes-and-topological-sort-with-postgres/620/\" rel=\"nofollow\">https://www.fusionbox.com/blog/detail/graph-algorithms-in-a-database-recursive-ctes-and-topological-sort-with-postgres/620/</a>)</li>\n<li>[django-dag](<a href=\"https://pypi.org/project/django-dag/\" rel=\"nofollow\">https://pypi.org/project/django-dag/</a>)</li>\n<li>[django-treebeard-dag](<a href=\"https://pypi.org/project/django-treebeard-dag/\" rel=\"nofollow\">https://pypi.org/project/django-treebeard-dag/</a>)</li>\n</ol>\n\n          </div>"}, "last_serial": 4417768, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3591698451ff889ede2d2668defd12dd", "sha256": "ec29625b9d0352f5935042fb0d1d20b9cb02aaa6cc4d67801871002d1c09b7dd"}, "downloads": -1, "filename": "django_dag_postgresql-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3591698451ff889ede2d2668defd12dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7977, "upload_time": "2018-10-26T04:03:48", "upload_time_iso_8601": "2018-10-26T04:03:48.602347Z", "url": "https://files.pythonhosted.org/packages/2a/ed/81e230ac79f4ea7b5c5434f5f94ef3a7bf1afe2f647cf4ced71b2fc4900d/django_dag_postgresql-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3bd569580038b4f22a207c84ee4fce97", "sha256": "66440248ca794b7bfb0ecb22a5b88d7a78f4a52c34ff1f5246e2acafe7bb2ddc"}, "downloads": -1, "filename": "django-dag-postgresql-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3bd569580038b4f22a207c84ee4fce97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7511, "upload_time": "2018-10-26T04:03:50", "upload_time_iso_8601": "2018-10-26T04:03:50.114257Z", "url": "https://files.pythonhosted.org/packages/11/0e/47842e1636610227a3aa30f10c235c4ed6b2bccb3f303826900bd7e1ba6b/django-dag-postgresql-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3591698451ff889ede2d2668defd12dd", "sha256": "ec29625b9d0352f5935042fb0d1d20b9cb02aaa6cc4d67801871002d1c09b7dd"}, "downloads": -1, "filename": "django_dag_postgresql-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3591698451ff889ede2d2668defd12dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7977, "upload_time": "2018-10-26T04:03:48", "upload_time_iso_8601": "2018-10-26T04:03:48.602347Z", "url": "https://files.pythonhosted.org/packages/2a/ed/81e230ac79f4ea7b5c5434f5f94ef3a7bf1afe2f647cf4ced71b2fc4900d/django_dag_postgresql-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3bd569580038b4f22a207c84ee4fce97", "sha256": "66440248ca794b7bfb0ecb22a5b88d7a78f4a52c34ff1f5246e2acafe7bb2ddc"}, "downloads": -1, "filename": "django-dag-postgresql-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3bd569580038b4f22a207c84ee4fce97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7511, "upload_time": "2018-10-26T04:03:50", "upload_time_iso_8601": "2018-10-26T04:03:50.114257Z", "url": "https://files.pythonhosted.org/packages/11/0e/47842e1636610227a3aa30f10c235c4ed6b2bccb3f303826900bd7e1ba6b/django-dag-postgresql-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:43 2020"}