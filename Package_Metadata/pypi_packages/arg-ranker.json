{"info": {"author": "An-Ni Zhang", "author_email": "anniz44@mit.edu", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "# arg_ranker\n\n## Install\n`pip install arg_ranker`\n\n`conda install -c caozhichongchong arg_ranker`\n\n## Test (download examples and use any of these commands)\n`arg_ranker -i example/ARGprofile_example_1.txt -m example/metadata.txt`\\\n`arg_ranker -i example/ARGprofile_example_2.txt -m example/metadata.txt`\\\n`arg_ranker -i test`\n\n## How to use it\n### Prepare your ARG profile\n\narg_ranker is suitable for the units of ppm, gene copy per 16S or gene copy per cell\n\n#### Option 1: Use our pipeline\n\n1. Use my traits_finder to search ARGs in genomes and metagenomes (in preparation)\\\nNow we have both nucleotides and amino acids databases!\\\nhttps://github.com/caozhichongchong/traits_finder\n\n2. Run\\\n`arg_ranker -i ARG.profile.txt -m metadata.txt`\\\n`arg_ranker -i ARG.profile.txt`\n\n#### Option 2: Run your own pipeline using our database\n\n1. Search ARGs-OAP v1.0 database (amino acids) in your data using diamond or blast\\\nhttps://github.com/caozhichongchong/arg_ranker/tree/master/arg_ranker/data/SARG.db.fasta*\n\n2. Format your results into example/ARGprofile_example_1.txt or example/ARGprofile_example_2.txt\n\n3. Run\\\n`arg_ranker -i ARG.profile.txt -m metadata.txt`\\\n`arg_ranker -i ARG.profile.txt`\\\nIf you see a lot of errors saying: \"ARGs in mothertable do not match with the ARGs in ARG_rank.txt.\\\nPlease check something something in ARG.summary.cell.txt!\"\\\nIt means that the samples are placed as row names instead of colomn names (which arg_ranker expects).\\\nDon't worry, please try: `arg_ranker -i ARG.profile.txt.t`\\\nAs we automatically transpose your table to make it work.\n\n#### Option 3: Use results from ARGs-OAP v1.0 (not recommended)\n\n1. If you have already run the ARGs-OAP v1.0 pipeline\\\n    https://github.com/biofuture/Ublastx_stageone/archive/Ublastx_stageone.tar.gz\\\n    https://github.com/biofuture/Ublastx_stageone/archive/Ublastx_stageone.zip\n\n2. Check the \"extracted.fa.blast6out.txt\" and \"meta_data_online.txt\" in the output_dir\n\n3. Run\\\n`arg_ranker -f True -fo output_dir`\\\n`arg_ranker -i formated_table.normalize_cellnumber.gene.tab -m metadata.txt`\n\n### Prepare your metadata for your samples (optional)\n\nFormat your metadata of metagenomic samples into example/metadata.txt (not necessarily the same)\\\nFirst column matches the sample ID in your ARG profile;\\\nOther columns contain the metadata of your samples (such as habitat/eco-type, accession number, group...)\n\n## Introduction\nARG_ranker evaluates the risk of antibiotic resistance in metagenomes.\\\nWe designed a framework to rank the risk of ARGs based on three factors: \u201canthropogenic enrichment\u201d, \u201cmobility\u201d, and \u201chost pathogenicity\u201d, informed by all available bacterial genomes, plasmids, integrons, and 850 metagenomes covering diverse global eco-habitats. The framework prioritizes 3% of ARGs in Rank I (the most at risk of dissemination among pathogens) and 0.3% of ARGs in Rank II (high potential emergence of new resistance in pathogens). \n\nRequirement: python packages (pandas, argparse)\n\nRequirement: a mothertable of the ARG abundance in all your samples\nannotated by ARGs-OAP v1.0 \\\n(see example/All_sample_cellnumber.txt).\n\nOptimal: a table of the metadata of your samples \\\n(see example/All_sample_metadata.txt).\n\n## Copyright\nDr. An-Ni Zhang (MIT), Prof. Eric Alm (MIT), Prof. Tong Zhang* (University of Hong Kong)\n\n## Citation\n1. Zhang AN, ..., Alm EJ, Zhang T: Choosing Your Battles: Which Resistance Genes Warrant Global Action? (bioRxiv coming soon)\n2. Yang Y, ..., Tiedje JM, Zhang T: ARGs-OAP: online analysis pipeline for antibiotic resistance genes detection from metagenomic data using an integrated structured ARG-database. Bioinformatics 2016.\n\n## Contact\nanniz44@mit.edu or caozhichongchong@gmail.com", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/caozhichongchong/ARG_Ranker", "keywords": "antibiotic resistance,risk,one health,clinical AMR,mobile AMR", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "arg-ranker", "package_url": "https://pypi.org/project/arg-ranker/", "platform": "", "project_url": "https://pypi.org/project/arg-ranker/", "project_urls": {"Homepage": "https://github.com/caozhichongchong/ARG_Ranker"}, "release_url": "https://pypi.org/project/arg-ranker/2.3/", "requires_dist": null, "requires_python": "", "summary": "Ranking the risk of antibiotic resistance for metagenomes", "version": "2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>arg_ranker</h1>\n<h2>Install</h2>\n<p><code>pip install arg_ranker</code></p>\n<p><code>conda install -c caozhichongchong arg_ranker</code></p>\n<h2>Test (download examples and use any of these commands)</h2>\n<p><code>arg_ranker -i example/ARGprofile_example_1.txt -m example/metadata.txt</code><br>\n<code>arg_ranker -i example/ARGprofile_example_2.txt -m example/metadata.txt</code><br>\n<code>arg_ranker -i test</code></p>\n<h2>How to use it</h2>\n<h3>Prepare your ARG profile</h3>\n<p>arg_ranker is suitable for the units of ppm, gene copy per 16S or gene copy per cell</p>\n<h4>Option 1: Use our pipeline</h4>\n<ol>\n<li>\n<p>Use my traits_finder to search ARGs in genomes and metagenomes (in preparation)<br>\nNow we have both nucleotides and amino acids databases!<br>\n<a href=\"https://github.com/caozhichongchong/traits_finder\" rel=\"nofollow\">https://github.com/caozhichongchong/traits_finder</a></p>\n</li>\n<li>\n<p>Run<br>\n<code>arg_ranker -i ARG.profile.txt -m metadata.txt</code><br>\n<code>arg_ranker -i ARG.profile.txt</code></p>\n</li>\n</ol>\n<h4>Option 2: Run your own pipeline using our database</h4>\n<ol>\n<li>\n<p>Search ARGs-OAP v1.0 database (amino acids) in your data using diamond or blast<br>\n<a href=\"https://github.com/caozhichongchong/arg_ranker/tree/master/arg_ranker/data/SARG.db.fasta\" rel=\"nofollow\">https://github.com/caozhichongchong/arg_ranker/tree/master/arg_ranker/data/SARG.db.fasta</a>*</p>\n</li>\n<li>\n<p>Format your results into example/ARGprofile_example_1.txt or example/ARGprofile_example_2.txt</p>\n</li>\n<li>\n<p>Run<br>\n<code>arg_ranker -i ARG.profile.txt -m metadata.txt</code><br>\n<code>arg_ranker -i ARG.profile.txt</code><br>\nIf you see a lot of errors saying: \"ARGs in mothertable do not match with the ARGs in ARG_rank.txt.<br>\nPlease check something something in ARG.summary.cell.txt!\"<br>\nIt means that the samples are placed as row names instead of colomn names (which arg_ranker expects).<br>\nDon't worry, please try: <code>arg_ranker -i ARG.profile.txt.t</code><br>\nAs we automatically transpose your table to make it work.</p>\n</li>\n</ol>\n<h4>Option 3: Use results from ARGs-OAP v1.0 (not recommended)</h4>\n<ol>\n<li>\n<p>If you have already run the ARGs-OAP v1.0 pipeline<br>\n<a href=\"https://github.com/biofuture/Ublastx_stageone/archive/Ublastx_stageone.tar.gz%5C\" rel=\"nofollow\">https://github.com/biofuture/Ublastx_stageone/archive/Ublastx_stageone.tar.gz\\</a>\n<a href=\"https://github.com/biofuture/Ublastx_stageone/archive/Ublastx_stageone.zip\" rel=\"nofollow\">https://github.com/biofuture/Ublastx_stageone/archive/Ublastx_stageone.zip</a></p>\n</li>\n<li>\n<p>Check the \"extracted.fa.blast6out.txt\" and \"meta_data_online.txt\" in the output_dir</p>\n</li>\n<li>\n<p>Run<br>\n<code>arg_ranker -f True -fo output_dir</code><br>\n<code>arg_ranker -i formated_table.normalize_cellnumber.gene.tab -m metadata.txt</code></p>\n</li>\n</ol>\n<h3>Prepare your metadata for your samples (optional)</h3>\n<p>Format your metadata of metagenomic samples into example/metadata.txt (not necessarily the same)<br>\nFirst column matches the sample ID in your ARG profile;<br>\nOther columns contain the metadata of your samples (such as habitat/eco-type, accession number, group...)</p>\n<h2>Introduction</h2>\n<p>ARG_ranker evaluates the risk of antibiotic resistance in metagenomes.<br>\nWe designed a framework to rank the risk of ARGs based on three factors: \u201canthropogenic enrichment\u201d, \u201cmobility\u201d, and \u201chost pathogenicity\u201d, informed by all available bacterial genomes, plasmids, integrons, and 850 metagenomes covering diverse global eco-habitats. The framework prioritizes 3% of ARGs in Rank I (the most at risk of dissemination among pathogens) and 0.3% of ARGs in Rank II (high potential emergence of new resistance in pathogens).</p>\n<p>Requirement: python packages (pandas, argparse)</p>\n<p>Requirement: a mothertable of the ARG abundance in all your samples\nannotated by ARGs-OAP v1.0 <br>\n(see example/All_sample_cellnumber.txt).</p>\n<p>Optimal: a table of the metadata of your samples <br>\n(see example/All_sample_metadata.txt).</p>\n<h2>Copyright</h2>\n<p>Dr. An-Ni Zhang (MIT), Prof. Eric Alm (MIT), Prof. Tong Zhang* (University of Hong Kong)</p>\n<h2>Citation</h2>\n<ol>\n<li>Zhang AN, ..., Alm EJ, Zhang T: Choosing Your Battles: Which Resistance Genes Warrant Global Action? (bioRxiv coming soon)</li>\n<li>Yang Y, ..., Tiedje JM, Zhang T: ARGs-OAP: online analysis pipeline for antibiotic resistance genes detection from metagenomic data using an integrated structured ARG-database. Bioinformatics 2016.</li>\n</ol>\n<h2>Contact</h2>\n<p><a href=\"mailto:anniz44@mit.edu\">anniz44@mit.edu</a> or <a href=\"mailto:caozhichongchong@gmail.com\">caozhichongchong@gmail.com</a></p>\n\n          </div>"}, "last_serial": 6922293, "releases": {"1.0.4": [{"comment_text": "", "digests": {"md5": "ad6809c145bbbebe20b01e44d21abb53", "sha256": "0224e980d36ce2c607e855526e2c98d6a660be613341afadd790a56d4f52ed44"}, "downloads": -1, "filename": "arg_ranker-1.0.4.tar.gz", "has_sig": false, "md5_digest": "ad6809c145bbbebe20b01e44d21abb53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5329, "upload_time": "2019-03-13T16:10:24", "upload_time_iso_8601": "2019-03-13T16:10:24.630402Z", "url": "https://files.pythonhosted.org/packages/61/4f/254b5c202360437022a58ba2dcbfc8b44fc981b16aee81fc58d97d35c88c/arg_ranker-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "4fe2f51d2f61450b2874afe4e6ded007", "sha256": "3be3a820412f22fe10f8e8bafa1c9f1859c515eb580eed25aba8a5922dc99c16"}, "downloads": -1, "filename": "arg_ranker-1.0.5-py3.7.egg", "has_sig": false, "md5_digest": "4fe2f51d2f61450b2874afe4e6ded007", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 1579763, "upload_time": "2019-06-19T14:53:44", "upload_time_iso_8601": "2019-06-19T14:53:44.669489Z", "url": "https://files.pythonhosted.org/packages/c0/0d/850fb1e9d4858f809523f53ba67475327864bc60fbf1677f706a174aaeeb/arg_ranker-1.0.5-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "61fafca156fe98b6efa051c2fb97c361", "sha256": "446b8a47d8e251bfe0319446816b2993a5362378eb190881ab8e7e62e6262fe6"}, "downloads": -1, "filename": "arg_ranker-1.0.5.tar.gz", "has_sig": false, "md5_digest": "61fafca156fe98b6efa051c2fb97c361", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5629, "upload_time": "2019-06-19T14:53:47", "upload_time_iso_8601": "2019-06-19T14:53:47.271191Z", "url": "https://files.pythonhosted.org/packages/56/f3/59d0dc9bd8f6f797050a792ac6c2d3192b03100d862a6b4a88275122d42b/arg_ranker-1.0.5.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "cd3a2c39e07a12e58f8fe2622c7670b3", "sha256": "89456d9fa0c500cc6cf7761b2d729aa7ff38bb5788c2259338261eda0e159156"}, "downloads": -1, "filename": "arg_ranker-2.0.tar.gz", "has_sig": false, "md5_digest": "cd3a2c39e07a12e58f8fe2622c7670b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5569, "upload_time": "2019-09-26T14:06:02", "upload_time_iso_8601": "2019-09-26T14:06:02.398780Z", "url": "https://files.pythonhosted.org/packages/b1/c2/b5b69ed8b68e4c2b8b3e39ec1fccb3365f5fe06aa2fb4bc25d3b2abd3c55/arg_ranker-2.0.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "de49777a6d25202e0fc1137a6e7dc75a", "sha256": "a05773970f32d969292db8fff7fbe2cfcaa95bded689eeccf4c7edb47f65535f"}, "downloads": -1, "filename": "arg_ranker-2.1-py3.6.egg", "has_sig": false, "md5_digest": "de49777a6d25202e0fc1137a6e7dc75a", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 1611964, "upload_time": "2020-03-31T17:48:02", "upload_time_iso_8601": "2020-03-31T17:48:02.542034Z", "url": "https://files.pythonhosted.org/packages/44/2b/f3a64fef4e485e65ea338ca6da28496db34583e639ec31c91e7c7e482daf/arg_ranker-2.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "812c5a45436b74a0acd247fe9a45af30", "sha256": "63ad651a4b9acec3f033c3dd1e5bca5a8bcb888f31c7a3627c387b295d212859"}, "downloads": -1, "filename": "arg_ranker-2.1.tar.gz", "has_sig": false, "md5_digest": "812c5a45436b74a0acd247fe9a45af30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5570, "upload_time": "2020-03-31T17:48:03", "upload_time_iso_8601": "2020-03-31T17:48:03.959383Z", "url": "https://files.pythonhosted.org/packages/7a/a2/2b5a502657d921188a3311877ef51ba7d013864bb81a55c63238455649ef/arg_ranker-2.1.tar.gz", "yanked": false}], "2.2": [{"comment_text": "", "digests": {"md5": "148f43b7fa430265e4112b6312c30a60", "sha256": "b1c2b5f6a37bfbc559aaa5af85339a8bd0d8c7098ba55ad31441ad48505b42cb"}, "downloads": -1, "filename": "arg_ranker-2.2-py3.6.egg", "has_sig": false, "md5_digest": "148f43b7fa430265e4112b6312c30a60", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 1611966, "upload_time": "2020-03-31T18:06:09", "upload_time_iso_8601": "2020-03-31T18:06:09.674648Z", "url": "https://files.pythonhosted.org/packages/0c/6b/c78c38ff6a75db62422a386daa69ae905563bfd727f96a58d211fdc2d55b/arg_ranker-2.2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "33f6a07158b02adb3ecbe5713bc7ae1d", "sha256": "5721877cab9ab474d97e1962df6474a14bd024483656e4a87d9ea48176c06430"}, "downloads": -1, "filename": "arg_ranker-2.2.tar.gz", "has_sig": false, "md5_digest": "33f6a07158b02adb3ecbe5713bc7ae1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5572, "upload_time": "2020-03-31T18:06:11", "upload_time_iso_8601": "2020-03-31T18:06:11.461718Z", "url": "https://files.pythonhosted.org/packages/90/c3/95cfcdc9bfab0689db860c244b6107557d968f5f2a287890f18d96bd0e78/arg_ranker-2.2.tar.gz", "yanked": false}], "2.3": [{"comment_text": "", "digests": {"md5": "931c87202acf90ce65252516321eadb5", "sha256": "725327868e41689edcb3f58fe614d7aabc4deeb527154f43222486073a29ec40"}, "downloads": -1, "filename": "arg_ranker-2.3-py3.6.egg", "has_sig": false, "md5_digest": "931c87202acf90ce65252516321eadb5", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 1611960, "upload_time": "2020-03-31T19:14:35", "upload_time_iso_8601": "2020-03-31T19:14:35.931082Z", "url": "https://files.pythonhosted.org/packages/ae/b0/2b56eacd56446b0e0c0eef446a835b9a321594bed16bef93cbf0dde38b7e/arg_ranker-2.3-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "be40a16b1160e05d2dc8243720ab13de", "sha256": "2575d4901c00f274ba7f87b658cece6bc605f8ddb3d1b8ea36580b71a82642ce"}, "downloads": -1, "filename": "arg_ranker-2.3.tar.gz", "has_sig": false, "md5_digest": "be40a16b1160e05d2dc8243720ab13de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5570, "upload_time": "2020-03-31T19:14:37", "upload_time_iso_8601": "2020-03-31T19:14:37.269386Z", "url": "https://files.pythonhosted.org/packages/c8/60/38bddf58e63782904b2380ac5372d076ddd04a5c93afea93190089e248c8/arg_ranker-2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "931c87202acf90ce65252516321eadb5", "sha256": "725327868e41689edcb3f58fe614d7aabc4deeb527154f43222486073a29ec40"}, "downloads": -1, "filename": "arg_ranker-2.3-py3.6.egg", "has_sig": false, "md5_digest": "931c87202acf90ce65252516321eadb5", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 1611960, "upload_time": "2020-03-31T19:14:35", "upload_time_iso_8601": "2020-03-31T19:14:35.931082Z", "url": "https://files.pythonhosted.org/packages/ae/b0/2b56eacd56446b0e0c0eef446a835b9a321594bed16bef93cbf0dde38b7e/arg_ranker-2.3-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "be40a16b1160e05d2dc8243720ab13de", "sha256": "2575d4901c00f274ba7f87b658cece6bc605f8ddb3d1b8ea36580b71a82642ce"}, "downloads": -1, "filename": "arg_ranker-2.3.tar.gz", "has_sig": false, "md5_digest": "be40a16b1160e05d2dc8243720ab13de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5570, "upload_time": "2020-03-31T19:14:37", "upload_time_iso_8601": "2020-03-31T19:14:37.269386Z", "url": "https://files.pythonhosted.org/packages/c8/60/38bddf58e63782904b2380ac5372d076ddd04a5c93afea93190089e248c8/arg_ranker-2.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:17 2020"}