{"info": {"author": "Will Clark", "author_email": "will8clark@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Lnproxy\n\nProxy connections from a patched C-Lightning.\n\nProxy removes onion (1300B) before HTLC transmission and receiver dynamically re-generates them upon receipt.\n\n\n### Requirements\n\n* Python >= 3.7\n\n* C-Lightning compiled with `noencrypt_final.patch` and `gossip_disabled_and_300s_HTLC_timeout.patch` applied.\n\n* [jq](https://stedolan.github.io/jq/download/) for your system (for the helper scripts)\n\n\n### libsecp256k1 installation\n\nFirst install libsecp256k1 from source as per the [project installation instructions](https://github.com/bitcoin-core/secp256k1)\n\nOn Debian? See this [comment](https://github.com/ludbb/secp256k1-py/issues/24#issuecomment-397505150) on issue 24.\n\n### C Lightning installation\n\nClone the C-Lightning branch below. This branch includes two plugins by default:\n\n1. Lnproxy (this plugin)\n1. [Sauron](https://github.com/lightningd/plugins/tree/master/sauron) (fetches blocks from blockstream.info, no need for bitcoind on testnet)\n\n```bash\ngit clone https://github.com/willcl-ark/lightning.git\ncd lightning\ngit checkout lnproxy\n\n# Setup and activate a virtualenv for the lightning branch (with e.g. pyenv) and install lnproxy and C-lightning requirements\npip install --upgrade pip\npip install lnproxy\npip install -r requirements.txt\npip install -r plugins/sauron/requirements.txt\n```\n\nFollow the remaining compilation instructions for your OS as found at [install C-Lightning](https://github.com/willcl-ark/lightning/blob/lnproxy/doc/INSTALL.md) making sure to follow the `./configure` step using `--enable-developer` flag. We need this flag to disable gossip, minimising bandwidth used. If you've already compiled C-Lightning before on your system, this will likely be enough:\n\n```bash\n./configure --enable developer && make\n```\n\n## Quick run, testnet, single local node:\n\n```bash\n# Let's start by sourcing the helper scripts\nsource contrib/startup_testnet1.sh\n\n# Start up C-Lightning\nstart_ln\n\n# You can tail the logs in a second terminal window with\ntail -f -n 50 /tmp/l1-testnet/log | cut -c26-\n\n# Fund the wallet as usual, e.g.:\nl1-cli newaddr\n# Send tBTC to the address\n```\n\nNext we are going to add a node to the lnproxy routing table. We can set some variables to help us:\n\n1. `LISTEN_PORT`: the port *you* will listen for incoming connections from the remote node. Open this port in any firewall you have.\n2. `REMOTE_PUBKEY`: the remote node's pubkey\n\n```bash\nexport LISTEN_PORT=\"<local_open_port>\"\n\n# Let's also export their pubkey for convenience\nexport REMOTE_PUBKEY=\"<their_node_pubkey>\"  \n```\n\nNow we can add the node to the Lnproxy router and make the connection:\n\n```bash\n# Add a remote node to lnproxy plugin router\nl1-cli add-node <remote_pubkey>@<remote_host>:<remote_port> $LISTEN_PORT\n\n# Make a connection to the remote node\nl1-cli proxy-connect $REMOTE_PUBKEY\n```\n\nAfter successful connection, we can fund a channel in the usual way:\n\n```bash\n# Open a private outbound channel with remote node\nl1-cli fundchannel id=$REMOTE_PUBKEY amount=100000 feerate=10000 announce=false\n\n# You can check the status of the channel with\nl1-cli listfunds\n```\n\nAfter the channel reaches status `CHANNELD_NORMAL`, we can begin to make a payment, two different payment types shown below:\n\n```bash\n# Pay a regular invoice without transmitting onion\n# First obtain a bolt11 invoice out-of-band\nl1-cli pay <bolt11_invoice>\n\n# Send a \"message\"/spontaneous payment/sphinx-send to remote node\nl1-cli waitsendpay $(l1-cli message $REMOTE_PUBKEY \"<your_message_goes_here>\" 100000 | jq -r '.payment_hash')\n```\n\n## Quick run, testnet, two local nodes:\n\nUsing the helper functions in the `~/src/lightning/contrib/startup_testnet2.sh` let you get set up faster. Run in approximately this sequence as necessary:\n\n```bash\n# Start 2x C-Lightning\nstart_ln\n\n# Add each node to the other node's router\nadd_nodes\n```\n\nThe `add_nodes` command will echo the listening port that the remote node (or radio device e.g. fldigi-proxy) should connect in to to make an inbound connection\n\nTo make an outbound connection from node 1, use the `proxy-connect` command with the port your transport connection is listening on, e.g.:\n\n```bash\n# Now begin outbound connection from l1 to l2. If you are using alternative transport (e.g. fldigi), use the fldigi listening tcp_port\n\nl1-cli proxy-connect $(l2-cli getinfo | jq -r .id)\n```\n\nThe connection should occur automatically from here, you will need to fund the wallet and open a channel as normal.\n\nAfter these commands have completed, you can move right onto the [payments](#invoice-payment) or [spontaneous sends](#spontaneous-sends) sections below to start making payments.\n\n\n## Manual mode\n\nSee [manual_operation.md](manual_operation.md) for a more manual approach.\n\n\n## Invoice payment\n\nNow we have seen the `channel_update` messages for the channel, if you have, you can try a simple single hop pay:\n\n```bash\n# First get a BOLT11 invoice from the remote node...\nlcli pay <bolt11_invoice>\n```\n\n## Spontaneous sends\n\nTo attempt a \"spontaneous send\" payment with encrypted message, use the \"message\" command added to C-Lightning by the lnproxy plugin:\n\n```bash\n# First lets generate a 12 digit random hex message which we'll use as the message to send\nexport MESSAGE=\"$(openssl rand -hex 12)\"\n\n# Using waitsendpay will wait synchronously until payment succeeds or fails\nlcli waitsendpay $(lcli message <remote_pubkey> $MESSAGE 100000 | jq -r .payment_hash)\n```\n\nThe \"message\" RPC implements a keysend-like functionality: we know about the (final) recipient in our plugin routing table, even though C-Lightning doesn't know about them (no gossip exchanged via l2). This means we can send them a message encrypted with their pubkey (using ECIES where `nonce=payment_hash[0:16]`) and where only recipient can decrypt the preimage `(sha256(decrypted_message).digest())`.\n\nSee [encryption.md](encryption.md) for more information on this.\n\n\n# Troubleshooting\n\n* There are some currently known issues with running on Debian via Qubes OS, so currently this OS config is not supported.\n\n## TODO:\n\nCan be found [here](TODO.md)\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/willcl-ark/lnproxy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "lnproxy", "package_url": "https://pypi.org/project/lnproxy/", "platform": "", "project_url": "https://pypi.org/project/lnproxy/", "project_urls": {"Homepage": "https://github.com/willcl-ark/lnproxy"}, "release_url": "https://pypi.org/project/lnproxy/0.3.6/", "requires_dist": ["trio (>=0.13.0)", "pyln.client (>=0.8.0)", "hkdf (>=0.0.3)", "coincurve (>=13.0.0)", "eciespy (>=0.3.5)"], "requires_python": ">=3.7", "summary": "A C-Lightning transport proxy", "version": "0.3.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Lnproxy</h1>\n<p>Proxy connections from a patched C-Lightning.</p>\n<p>Proxy removes onion (1300B) before HTLC transmission and receiver dynamically re-generates them upon receipt.</p>\n<h3>Requirements</h3>\n<ul>\n<li>\n<p>Python &gt;= 3.7</p>\n</li>\n<li>\n<p>C-Lightning compiled with <code>noencrypt_final.patch</code> and <code>gossip_disabled_and_300s_HTLC_timeout.patch</code> applied.</p>\n</li>\n<li>\n<p><a href=\"https://stedolan.github.io/jq/download/\" rel=\"nofollow\">jq</a> for your system (for the helper scripts)</p>\n</li>\n</ul>\n<h3>libsecp256k1 installation</h3>\n<p>First install libsecp256k1 from source as per the <a href=\"https://github.com/bitcoin-core/secp256k1\" rel=\"nofollow\">project installation instructions</a></p>\n<p>On Debian? See this <a href=\"https://github.com/ludbb/secp256k1-py/issues/24#issuecomment-397505150\" rel=\"nofollow\">comment</a> on issue 24.</p>\n<h3>C Lightning installation</h3>\n<p>Clone the C-Lightning branch below. This branch includes two plugins by default:</p>\n<ol>\n<li>Lnproxy (this plugin)</li>\n<li><a href=\"https://github.com/lightningd/plugins/tree/master/sauron\" rel=\"nofollow\">Sauron</a> (fetches blocks from blockstream.info, no need for bitcoind on testnet)</li>\n</ol>\n<pre>git clone https://github.com/willcl-ark/lightning.git\n<span class=\"nb\">cd</span> lightning\ngit checkout lnproxy\n\n<span class=\"c1\"># Setup and activate a virtualenv for the lightning branch (with e.g. pyenv) and install lnproxy and C-lightning requirements</span>\npip install --upgrade pip\npip install lnproxy\npip install -r requirements.txt\npip install -r plugins/sauron/requirements.txt\n</pre>\n<p>Follow the remaining compilation instructions for your OS as found at <a href=\"https://github.com/willcl-ark/lightning/blob/lnproxy/doc/INSTALL.md\" rel=\"nofollow\">install C-Lightning</a> making sure to follow the <code>./configure</code> step using <code>--enable-developer</code> flag. We need this flag to disable gossip, minimising bandwidth used. If you've already compiled C-Lightning before on your system, this will likely be enough:</p>\n<pre>./configure --enable developer <span class=\"o\">&amp;&amp;</span> make\n</pre>\n<h2>Quick run, testnet, single local node:</h2>\n<pre><span class=\"c1\"># Let's start by sourcing the helper scripts</span>\n<span class=\"nb\">source</span> contrib/startup_testnet1.sh\n\n<span class=\"c1\"># Start up C-Lightning</span>\nstart_ln\n\n<span class=\"c1\"># You can tail the logs in a second terminal window with</span>\ntail -f -n <span class=\"m\">50</span> /tmp/l1-testnet/log <span class=\"p\">|</span> cut -c26-\n\n<span class=\"c1\"># Fund the wallet as usual, e.g.:</span>\nl1-cli newaddr\n<span class=\"c1\"># Send tBTC to the address</span>\n</pre>\n<p>Next we are going to add a node to the lnproxy routing table. We can set some variables to help us:</p>\n<ol>\n<li><code>LISTEN_PORT</code>: the port <em>you</em> will listen for incoming connections from the remote node. Open this port in any firewall you have.</li>\n<li><code>REMOTE_PUBKEY</code>: the remote node's pubkey</li>\n</ol>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">LISTEN_PORT</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;local_open_port&gt;\"</span>\n\n<span class=\"c1\"># Let's also export their pubkey for convenience</span>\n<span class=\"nb\">export</span> <span class=\"nv\">REMOTE_PUBKEY</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;their_node_pubkey&gt;\"</span>  \n</pre>\n<p>Now we can add the node to the Lnproxy router and make the connection:</p>\n<pre><span class=\"c1\"># Add a remote node to lnproxy plugin router</span>\nl1-cli add-node &lt;remote_pubkey&gt;@&lt;remote_host&gt;:&lt;remote_port&gt; <span class=\"nv\">$LISTEN_PORT</span>\n\n<span class=\"c1\"># Make a connection to the remote node</span>\nl1-cli proxy-connect <span class=\"nv\">$REMOTE_PUBKEY</span>\n</pre>\n<p>After successful connection, we can fund a channel in the usual way:</p>\n<pre><span class=\"c1\"># Open a private outbound channel with remote node</span>\nl1-cli fundchannel <span class=\"nv\">id</span><span class=\"o\">=</span><span class=\"nv\">$REMOTE_PUBKEY</span> <span class=\"nv\">amount</span><span class=\"o\">=</span><span class=\"m\">100000</span> <span class=\"nv\">feerate</span><span class=\"o\">=</span><span class=\"m\">10000</span> <span class=\"nv\">announce</span><span class=\"o\">=</span><span class=\"nb\">false</span>\n\n<span class=\"c1\"># You can check the status of the channel with</span>\nl1-cli listfunds\n</pre>\n<p>After the channel reaches status <code>CHANNELD_NORMAL</code>, we can begin to make a payment, two different payment types shown below:</p>\n<pre><span class=\"c1\"># Pay a regular invoice without transmitting onion</span>\n<span class=\"c1\"># First obtain a bolt11 invoice out-of-band</span>\nl1-cli pay &lt;bolt11_invoice&gt;\n\n<span class=\"c1\"># Send a \"message\"/spontaneous payment/sphinx-send to remote node</span>\nl1-cli waitsendpay <span class=\"k\">$(</span>l1-cli message <span class=\"nv\">$REMOTE_PUBKEY</span> <span class=\"s2\">\"&lt;your_message_goes_here&gt;\"</span> <span class=\"m\">100000</span> <span class=\"p\">|</span> jq -r <span class=\"s1\">'.payment_hash'</span><span class=\"k\">)</span>\n</pre>\n<h2>Quick run, testnet, two local nodes:</h2>\n<p>Using the helper functions in the <code>~/src/lightning/contrib/startup_testnet2.sh</code> let you get set up faster. Run in approximately this sequence as necessary:</p>\n<pre><span class=\"c1\"># Start 2x C-Lightning</span>\nstart_ln\n\n<span class=\"c1\"># Add each node to the other node's router</span>\nadd_nodes\n</pre>\n<p>The <code>add_nodes</code> command will echo the listening port that the remote node (or radio device e.g. fldigi-proxy) should connect in to to make an inbound connection</p>\n<p>To make an outbound connection from node 1, use the <code>proxy-connect</code> command with the port your transport connection is listening on, e.g.:</p>\n<pre><span class=\"c1\"># Now begin outbound connection from l1 to l2. If you are using alternative transport (e.g. fldigi), use the fldigi listening tcp_port</span>\n\nl1-cli proxy-connect <span class=\"k\">$(</span>l2-cli getinfo <span class=\"p\">|</span> jq -r .id<span class=\"k\">)</span>\n</pre>\n<p>The connection should occur automatically from here, you will need to fund the wallet and open a channel as normal.</p>\n<p>After these commands have completed, you can move right onto the <a href=\"#invoice-payment\" rel=\"nofollow\">payments</a> or <a href=\"#spontaneous-sends\" rel=\"nofollow\">spontaneous sends</a> sections below to start making payments.</p>\n<h2>Manual mode</h2>\n<p>See <a href=\"manual_operation.md\" rel=\"nofollow\">manual_operation.md</a> for a more manual approach.</p>\n<h2>Invoice payment</h2>\n<p>Now we have seen the <code>channel_update</code> messages for the channel, if you have, you can try a simple single hop pay:</p>\n<pre><span class=\"c1\"># First get a BOLT11 invoice from the remote node...</span>\nlcli pay &lt;bolt11_invoice&gt;\n</pre>\n<h2>Spontaneous sends</h2>\n<p>To attempt a \"spontaneous send\" payment with encrypted message, use the \"message\" command added to C-Lightning by the lnproxy plugin:</p>\n<pre><span class=\"c1\"># First lets generate a 12 digit random hex message which we'll use as the message to send</span>\n<span class=\"nb\">export</span> <span class=\"nv\">MESSAGE</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">$(</span>openssl rand -hex <span class=\"m\">12</span><span class=\"k\">)</span><span class=\"s2\">\"</span>\n\n<span class=\"c1\"># Using waitsendpay will wait synchronously until payment succeeds or fails</span>\nlcli waitsendpay <span class=\"k\">$(</span>lcli message &lt;remote_pubkey&gt; <span class=\"nv\">$MESSAGE</span> <span class=\"m\">100000</span> <span class=\"p\">|</span> jq -r .payment_hash<span class=\"k\">)</span>\n</pre>\n<p>The \"message\" RPC implements a keysend-like functionality: we know about the (final) recipient in our plugin routing table, even though C-Lightning doesn't know about them (no gossip exchanged via l2). This means we can send them a message encrypted with their pubkey (using ECIES where <code>nonce=payment_hash[0:16]</code>) and where only recipient can decrypt the preimage <code>(sha256(decrypted_message).digest())</code>.</p>\n<p>See <a href=\"encryption.md\" rel=\"nofollow\">encryption.md</a> for more information on this.</p>\n<h1>Troubleshooting</h1>\n<ul>\n<li>There are some currently known issues with running on Debian via Qubes OS, so currently this OS config is not supported.</li>\n</ul>\n<h2>TODO:</h2>\n<p>Can be found <a href=\"TODO.md\" rel=\"nofollow\">here</a></p>\n\n          </div>"}, "last_serial": 7106823, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "bd53f8864b99dd36e375d3f51a8f9371", "sha256": "113311604f7d3dd43ff6eaa53789b9e120a9ac8d13e679b3f7f750651f92d788"}, "downloads": -1, "filename": "lnproxy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bd53f8864b99dd36e375d3f51a8f9371", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 22360, "upload_time": "2020-04-17T09:09:04", "upload_time_iso_8601": "2020-04-17T09:09:04.785086Z", "url": "https://files.pythonhosted.org/packages/58/72/988cf5431eeb11cb7c1469eee92162e995d6cac7234a220cd34d56809e44/lnproxy-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c44101aa3382b47eb472d77ab6ba7e00", "sha256": "46d29e9e593b74d2df655aafadc0f16d743faf613dc2db9e7a2f5df1709a0960"}, "downloads": -1, "filename": "lnproxy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c44101aa3382b47eb472d77ab6ba7e00", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 22029, "upload_time": "2020-04-17T09:09:08", "upload_time_iso_8601": "2020-04-17T09:09:08.499594Z", "url": "https://files.pythonhosted.org/packages/29/fb/131ecbc3888abfe9fb07c462c73454cec3ec2ed9add87206a710977f0df2/lnproxy-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "a472ec3e9db6c16c7726441c6e99c1b4", "sha256": "81fbea35d77767e3679b1fdc3a43b0e6ae22a6fabd29d1e934020eed41b2aafd"}, "downloads": -1, "filename": "lnproxy-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a472ec3e9db6c16c7726441c6e99c1b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 22332, "upload_time": "2020-04-17T09:09:06", "upload_time_iso_8601": "2020-04-17T09:09:06.019945Z", "url": "https://files.pythonhosted.org/packages/1e/fc/497a819759637bdb7e11de74a71bf58426b8f7bb7b7fd0075cb7b314a8cd/lnproxy-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f0495b1a2889c9d924c9fd45234ef2b", "sha256": "5caabf1a5ec4f73699f5e52d42c818698efc1ef374c9a1c48a61d82fa1e06376"}, "downloads": -1, "filename": "lnproxy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6f0495b1a2889c9d924c9fd45234ef2b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 22007, "upload_time": "2020-04-17T09:09:09", "upload_time_iso_8601": "2020-04-17T09:09:09.659915Z", "url": "https://files.pythonhosted.org/packages/79/1d/be3829912391cecc83f657c1a1616546d6e232c270fb996a423772fb1636/lnproxy-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e73aedcf4ef71244753954fc4221a1a0", "sha256": "b2c0031c79bd975c2fea589298be322d9dfa3dfaa4f0326740d8f9198f6d1850"}, "downloads": -1, "filename": "lnproxy-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e73aedcf4ef71244753954fc4221a1a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 22362, "upload_time": "2020-04-17T09:09:07", "upload_time_iso_8601": "2020-04-17T09:09:07.126796Z", "url": "https://files.pythonhosted.org/packages/90/1a/bb0387df62d56bfae915d10f010e54ab37e232a2abaec000f3fea8243012/lnproxy-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "86008ec6338fbd6dfe2fd4587b53ad1a", "sha256": "23477cb14e4ff5fd262c3e85eeb21a030ca699b9c2e4378875f3653ff1419315"}, "downloads": -1, "filename": "lnproxy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "86008ec6338fbd6dfe2fd4587b53ad1a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 22032, "upload_time": "2020-04-17T09:09:10", "upload_time_iso_8601": "2020-04-17T09:09:10.966785Z", "url": "https://files.pythonhosted.org/packages/43/0a/d9997e5f9e396d4b67895ab278fcff26305a56ad0512f50b540dd9a5ba5e/lnproxy-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "0525f9ce8d1059b6ae7454b410871aa0", "sha256": "415c286da1629550878dd079657d2df15e6070b73f529ea27eefe1e404355170"}, "downloads": -1, "filename": "lnproxy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0525f9ce8d1059b6ae7454b410871aa0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 486547, "upload_time": "2019-11-19T13:30:09", "upload_time_iso_8601": "2019-11-19T13:30:09.710976Z", "url": "https://files.pythonhosted.org/packages/72/76/079f91e12ceed7cf3a3bb5efe41abbfd7de1d166b66d0d40a1bd900d2342/lnproxy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebed63f600b741596d4913da86989564", "sha256": "15fe25060f990b934be82c9b0a063fa3ce09f1a2883cc435a5e9db8006a56929"}, "downloads": -1, "filename": "lnproxy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ebed63f600b741596d4913da86989564", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 481697, "upload_time": "2019-11-19T13:30:13", "upload_time_iso_8601": "2019-11-19T13:30:13.429967Z", "url": "https://files.pythonhosted.org/packages/1a/b2/51f69fa3e8d9f1437a1414bfd2649e3d088c60524b87efa5e64acb4d373b/lnproxy-0.1.0.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "b21df28889b529c56133625b323a373d", "sha256": "463079f35bfc9a76a525124e8d2dabc4d794310a6447c79431581ddaf66f2cc2"}, "downloads": -1, "filename": "lnproxy-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b21df28889b529c56133625b323a373d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 488872, "upload_time": "2019-11-19T20:59:22", "upload_time_iso_8601": "2019-11-19T20:59:22.544578Z", "url": "https://files.pythonhosted.org/packages/f1/83/69e7f7e0e1187be9596796f7946e745f49a61ad79ad2abab83185136ba82/lnproxy-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a89ee44f3c10feb63124bc7f3de35ea", "sha256": "58d336de3ad801b1d7c2f240ec3cb9feff9dd036fc3e2e99a8cf5881c9ef524b"}, "downloads": -1, "filename": "lnproxy-0.1.4.tar.gz", "has_sig": false, "md5_digest": "9a89ee44f3c10feb63124bc7f3de35ea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 486323, "upload_time": "2019-11-19T20:59:24", "upload_time_iso_8601": "2019-11-19T20:59:24.736754Z", "url": "https://files.pythonhosted.org/packages/5e/df/fa29050840899d9bffa897a6df61ab605f95d2bc732cd37f1abb45ab1314/lnproxy-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "cea0f698b1cd316e45c155aa4eb34613", "sha256": "0e23474daad8628d71624a004017ed137185b7e23e868cce43ce40b71f29fffb"}, "downloads": -1, "filename": "lnproxy-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "cea0f698b1cd316e45c155aa4eb34613", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 489810, "upload_time": "2019-11-19T21:20:32", "upload_time_iso_8601": "2019-11-19T21:20:32.595808Z", "url": "https://files.pythonhosted.org/packages/26/9f/a5fa34ff0c018147cf4c7fdc85579ea0c3b4bd0a76318ffb1c38de211cbc/lnproxy-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7947eca2e60531bff3f564520b211ccd", "sha256": "2c8404f85bfea6421f72505b61551ff12153f1de29c085f1d7281bb4f135ee86"}, "downloads": -1, "filename": "lnproxy-0.1.5.tar.gz", "has_sig": false, "md5_digest": "7947eca2e60531bff3f564520b211ccd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 487286, "upload_time": "2019-11-19T21:20:34", "upload_time_iso_8601": "2019-11-19T21:20:34.313154Z", "url": "https://files.pythonhosted.org/packages/75/ef/54ccb4dfde3f82f2b5bb6a9c4a92b625da45cf17c9259c85b03842cd24e2/lnproxy-0.1.5.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "86b74e4eb4f0d52bfde70d9d4d5c06a1", "sha256": "e03ffa4761ffaa57673d4983f00715572dab4137160c3f4679becebd92680ce7"}, "downloads": -1, "filename": "lnproxy-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "86b74e4eb4f0d52bfde70d9d4d5c06a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 14014, "upload_time": "2019-11-19T22:24:13", "upload_time_iso_8601": "2019-11-19T22:24:13.770456Z", "url": "https://files.pythonhosted.org/packages/df/3e/813944abb4101f6f158f659e08c9528aaf9c690195a683f15902c1755acf/lnproxy-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43f18189ad30d79278bc2a5d2d203c92", "sha256": "7f0c0211ddccbff05c7db530fdf5af97d94a46e9736440c6eacae1e5e9f82953"}, "downloads": -1, "filename": "lnproxy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "43f18189ad30d79278bc2a5d2d203c92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 14121, "upload_time": "2019-11-19T22:24:14", "upload_time_iso_8601": "2019-11-19T22:24:14.992854Z", "url": "https://files.pythonhosted.org/packages/5a/c9/3a9cb46e98e6e922220c5e085908ee122a8496d4ca6e99d59c219b032171/lnproxy-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "a6816ad0ae5c10793407b1bcdec0ae3a", "sha256": "4dd07e8b9b5dea4fc01fa57ac69de4c40c9722aae1db4b7a27e8dd2d358f9fec"}, "downloads": -1, "filename": "lnproxy-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a6816ad0ae5c10793407b1bcdec0ae3a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 14435, "upload_time": "2019-11-20T10:26:41", "upload_time_iso_8601": "2019-11-20T10:26:41.097296Z", "url": "https://files.pythonhosted.org/packages/14/53/f7a27910dd309953d428e745a4d7b91d818ad35b54feb63cfea24833208f/lnproxy-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ac7e936a2972417fb5a152af59787f6", "sha256": "3c7e157a0dcebb6ae32251005d6e48cd5deff3f5980ae347f145593f050f7083"}, "downloads": -1, "filename": "lnproxy-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0ac7e936a2972417fb5a152af59787f6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 14584, "upload_time": "2019-11-20T10:26:42", "upload_time_iso_8601": "2019-11-20T10:26:42.734862Z", "url": "https://files.pythonhosted.org/packages/13/8a/7f575efdc9610be96de8c2e057c8c7a97c644d886faeb9a4ccc17dd1f959/lnproxy-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "2e21a1c73f22ee7cf11a23cf3a4a7914", "sha256": "7d6b26f29d04182e84193ed09c1e1d9f0638b1e1df04fc22340d7b9229079b80"}, "downloads": -1, "filename": "lnproxy-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2e21a1c73f22ee7cf11a23cf3a4a7914", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 22360, "upload_time": "2020-04-17T09:10:11", "upload_time_iso_8601": "2020-04-17T09:10:11.398500Z", "url": "https://files.pythonhosted.org/packages/85/09/55d3f92b5bea3ac0ebfb847224ab092e8ec5b54b62ec5fb8c0f567da82d7/lnproxy-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04ee9f1b0bb195694a055ce433b07f06", "sha256": "e848386b202604a26b793e062a138b4bbdcae23f321af21ac6ec8259b11b32d4"}, "downloads": -1, "filename": "lnproxy-0.3.0.tar.gz", "has_sig": false, "md5_digest": "04ee9f1b0bb195694a055ce433b07f06", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 22029, "upload_time": "2020-04-17T09:10:14", "upload_time_iso_8601": "2020-04-17T09:10:14.626119Z", "url": "https://files.pythonhosted.org/packages/2f/9a/c8dea2d4bff87d9d2864576e1876fe919e0fc07ab22e58bb8275df4a8909/lnproxy-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "1c236f23bf76cb3ab0dd11fdb5d03c88", "sha256": "81ecedb2fd090924844089072e8a93659717dbfdcc4af899a6e6e8c38e9d41b6"}, "downloads": -1, "filename": "lnproxy-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1c236f23bf76cb3ab0dd11fdb5d03c88", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 39652, "upload_time": "2020-04-17T14:25:11", "upload_time_iso_8601": "2020-04-17T14:25:11.936195Z", "url": "https://files.pythonhosted.org/packages/6e/be/7d67638a2323bfc222bf5db2295401df4f7208a1c9b4df716b8caac8df13/lnproxy-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3cbb1404673c26b0058e9a345bbe768b", "sha256": "2d2197db2990e80f31d17df7219bd3563e705d846a7913c4f046e0315cdcf4f4"}, "downloads": -1, "filename": "lnproxy-0.3.1.tar.gz", "has_sig": false, "md5_digest": "3cbb1404673c26b0058e9a345bbe768b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 19115, "upload_time": "2020-04-17T14:25:15", "upload_time_iso_8601": "2020-04-17T14:25:15.638611Z", "url": "https://files.pythonhosted.org/packages/0f/10/fb3983a60d51f167019291b0f4d4bb1eb0cab2707f2a0317c029c00efd16/lnproxy-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "d97451bb8295a18389c97bcfed73db48", "sha256": "9a72023bcf93f08898fd2ea268e0123d7e1c2312e7487a63c10a9193304ca02f"}, "downloads": -1, "filename": "lnproxy-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d97451bb8295a18389c97bcfed73db48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 39750, "upload_time": "2020-04-17T21:22:04", "upload_time_iso_8601": "2020-04-17T21:22:04.375262Z", "url": "https://files.pythonhosted.org/packages/2c/3c/8d63ff2c994c1669b9307f104eddcc653965b2bdca12d654dc7bd9bc340b/lnproxy-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "597ef97a9fb0967e8a487b6c0f510a56", "sha256": "9f4172f362e6e83f9e0daeca2ddf058191f5c3ef970ef52489e08fe4d7377c60"}, "downloads": -1, "filename": "lnproxy-0.3.2.tar.gz", "has_sig": false, "md5_digest": "597ef97a9fb0967e8a487b6c0f510a56", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 18948, "upload_time": "2020-04-17T21:22:09", "upload_time_iso_8601": "2020-04-17T21:22:09.274679Z", "url": "https://files.pythonhosted.org/packages/81/1b/8f446bbdf860d232268f6d08486acc1a665dfeb5ffe58bb38f2fe5aa0644/lnproxy-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "0c764fe835be6e8d513ae07551b7db2b", "sha256": "e5546d53a912dd94bf2582192262fad2b41e154d3e866a6064de11a9a20dbe83"}, "downloads": -1, "filename": "lnproxy-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0c764fe835be6e8d513ae07551b7db2b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 39703, "upload_time": "2020-04-18T20:55:10", "upload_time_iso_8601": "2020-04-18T20:55:10.731938Z", "url": "https://files.pythonhosted.org/packages/a9/3d/1f6c8dff1617a76e4420e1fa272ce330152098498646e8a2e07e46228d1b/lnproxy-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8346512b6ce49e5574f73e67315de5e2", "sha256": "5bf763404e6d618769bea71ab7ff539a4923599b3ea3a2dea575989ab70d9c8a"}, "downloads": -1, "filename": "lnproxy-0.3.3.tar.gz", "has_sig": false, "md5_digest": "8346512b6ce49e5574f73e67315de5e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 18855, "upload_time": "2020-04-18T20:55:15", "upload_time_iso_8601": "2020-04-18T20:55:15.237148Z", "url": "https://files.pythonhosted.org/packages/81/fe/ff2e1f5679e01ad7077a022380f6eb8ddb459a38fec96f53674012857206/lnproxy-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "6f427e4f37d5da17c736093d62781545", "sha256": "95355127e53fb4d3a28ecb7c57ac61ad5305d4a062f89284edc58804502484c1"}, "downloads": -1, "filename": "lnproxy-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6f427e4f37d5da17c736093d62781545", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 39511, "upload_time": "2020-04-22T14:48:38", "upload_time_iso_8601": "2020-04-22T14:48:38.762740Z", "url": "https://files.pythonhosted.org/packages/bd/cb/570dd2270d574e6801fd1e5337d87bcf21658043ed420f21466e6eb1e07c/lnproxy-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c663a71b0123f070229b701ab82187d1", "sha256": "fb8cfb790f670521b624c378aba577a6e464e46c16763c2b12dcb71d117eb80f"}, "downloads": -1, "filename": "lnproxy-0.3.4.tar.gz", "has_sig": false, "md5_digest": "c663a71b0123f070229b701ab82187d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 18384, "upload_time": "2020-04-22T14:48:44", "upload_time_iso_8601": "2020-04-22T14:48:44.222745Z", "url": "https://files.pythonhosted.org/packages/a9/db/251b43dfe851676c2cd40a025f0ad7ff91a5f5ac76e064bef945ff78319b/lnproxy-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "0c221ffd10445d5424131ad32760ad59", "sha256": "63ce77b036cc049e2becb86eabe88be3d7060dab62c9235d47274229db76bb3d"}, "downloads": -1, "filename": "lnproxy-0.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0c221ffd10445d5424131ad32760ad59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 39539, "upload_time": "2020-04-26T14:37:39", "upload_time_iso_8601": "2020-04-26T14:37:39.035139Z", "url": "https://files.pythonhosted.org/packages/b8/63/1fe5889ecff85048f64bcec6ad63cc271308786d1e1471161ee5a8ac0bb7/lnproxy-0.3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "146448a4f5b8aeb8f8ce969fbaf95251", "sha256": "33235d0b8eee0fbb69ece0d56d3efc9a0cb61a5ea26c4625ffa4167acfd62b02"}, "downloads": -1, "filename": "lnproxy-0.3.5.tar.gz", "has_sig": false, "md5_digest": "146448a4f5b8aeb8f8ce969fbaf95251", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 18420, "upload_time": "2020-04-26T14:37:44", "upload_time_iso_8601": "2020-04-26T14:37:44.156568Z", "url": "https://files.pythonhosted.org/packages/e0/68/98f30a71252fb10eac78409b37e0562b19e757065f76cf52a654fa8f19f8/lnproxy-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "4588ecdc8ac84f60b73c5a48c1d0a7ea", "sha256": "296fc5c447019ffb049bff4059b48d7652d1b21b546a2f60b6a8b89418a119b1"}, "downloads": -1, "filename": "lnproxy-0.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "4588ecdc8ac84f60b73c5a48c1d0a7ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 39066, "upload_time": "2020-04-26T20:43:16", "upload_time_iso_8601": "2020-04-26T20:43:16.850597Z", "url": "https://files.pythonhosted.org/packages/ba/c6/7864d1cc17e14afea2494fe7596492b6af0246438341c80e555c78509dc2/lnproxy-0.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e1c943f6c2f4d9344a0779959dfc775", "sha256": "b102806a87f3bd225e324685977923f82a9c74d7839aa061dc99f9e6274c000f"}, "downloads": -1, "filename": "lnproxy-0.3.6.tar.gz", "has_sig": false, "md5_digest": "7e1c943f6c2f4d9344a0779959dfc775", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 17953, "upload_time": "2020-04-26T20:43:23", "upload_time_iso_8601": "2020-04-26T20:43:23.185412Z", "url": "https://files.pythonhosted.org/packages/87/63/1213e2337da6febfaba6133138a82a0e74d0d694d21b7030dd8ae4a5a706/lnproxy-0.3.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4588ecdc8ac84f60b73c5a48c1d0a7ea", "sha256": "296fc5c447019ffb049bff4059b48d7652d1b21b546a2f60b6a8b89418a119b1"}, "downloads": -1, "filename": "lnproxy-0.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "4588ecdc8ac84f60b73c5a48c1d0a7ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 39066, "upload_time": "2020-04-26T20:43:16", "upload_time_iso_8601": "2020-04-26T20:43:16.850597Z", "url": "https://files.pythonhosted.org/packages/ba/c6/7864d1cc17e14afea2494fe7596492b6af0246438341c80e555c78509dc2/lnproxy-0.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e1c943f6c2f4d9344a0779959dfc775", "sha256": "b102806a87f3bd225e324685977923f82a9c74d7839aa061dc99f9e6274c000f"}, "downloads": -1, "filename": "lnproxy-0.3.6.tar.gz", "has_sig": false, "md5_digest": "7e1c943f6c2f4d9344a0779959dfc775", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 17953, "upload_time": "2020-04-26T20:43:23", "upload_time_iso_8601": "2020-04-26T20:43:23.185412Z", "url": "https://files.pythonhosted.org/packages/87/63/1213e2337da6febfaba6133138a82a0e74d0d694d21b7030dd8ae4a5a706/lnproxy-0.3.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:43 2020"}