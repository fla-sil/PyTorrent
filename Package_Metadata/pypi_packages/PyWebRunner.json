{"info": {"author": "Scott Blevins", "author_email": "scott@britecore.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Testing", "Topic :: Software Development :: User Interfaces"], "description": ".. figure:: http://iws-public.s3.amazonaws.com/Media/PyWebRunner.png\n   :alt: PyWebRunner\n\n   PyWebRunner\n\nA supercharged Python wrapper for Selenium\n\n|Build Status| |PyPI version|\n\nDocumentation\n-------------\n\nFull documentation can be located here:\nhttps://intuitivewebsolutions.github.io/PyWebRunner\n\nUses\n----\n\nYou could use WebRunner to scrape a website, automate web tasks, or\nanything else you could imagine. It is easy to initialize and use. It's\nalso compatible with\n`BrowserStack <https://www.browserstack.com/automate/python>`__ using\nthe command\\_executor and remote\\_capabilities examples on that page.\n\n(Please note that you will need a subscription, username, and API key to\nmake it work.)\n\nInstalling\n----------\n\n.. code:: bash\n\n    pip install PyWebRunner\n\nBasic Examples\n--------------\n\n.. code:: python\n\n    # Import WebRunner if you aren't going to assert anything.\n    # WebTester is a sub-class of WebRunner\n    from PyWebRunner import WebRunner\n\n    # Running headless FireFox is the default.\n    wr = WebRunner() # Defaults to xvfb=True, driver=FireFox\n    # If xvfb is not installed, it will be bypassed automatically.\n\n    # Start the browser instance.\n    wr.start()\n\n    # Navigate to a page.\n    wr.go('https://www.google.com/')\n\n    # Fill in a text field.\n    wr.set_value('#lst-ib', 'PyWebRunner')\n    wr.send_key('#lst-ib', 'ENTER')\n\n    # Click the link based on a (gross) CSS selector.\n    wr.click('#rso > div:nth-child(1) > div:nth-child(1) > div > h3 > a')\n\n    # Wait for the page to load.\n    wr.wait_for_presence('div.document')\n\n    # Are we there yet?\n    wr.is_text_on_page('A helpful wrapper for Selenium') # True\n\n    # Take a screenshot!\n    wr.screenshot('/tmp/screenshot1.png')\n\n    # Stop the browser instance.\n    wr.stop()\n\nYAML Scripts\n------------\n\nPyWebRunner supports running YAML scripts and includes the ``webrunner``\ncommand.\n\nLet's say we made a YAML script for the above example and we called it\n``script.yml``\n\n.. code:: yaml\n\n    - go: https://www.google.com/\n    - set_value:\n      - \"#lst-ib\"\n      - PyWebRunner\n    - send_key:\n      - \"#lst-ib\"\n      - \"ENTER\"\n    - click: \"#rso > div:nth-child(1) > div:nth-child(1) > div > h3 > a\"\n    - wait_for_presence: div.document\n    - assert_text_on_page: A helpful wrapper for Selenium\n    - screenshot: /tmp/screenshot1.png\n\nWe can run it like so:\n\n.. code:: bash\n\n    webrunner script.yml\n\n...and it will behave identically to the Python-based example above.\n\nAdvanced YAML Features\n~~~~~~~~~~~~~~~~~~~~~~\n\nYAML supports the use of the fake-factory library (if it is installed)\nas well as evals and python function calls. Though the YAML is not\nintended as a complete replacement for Python scripts, this does enable\nsome pretty flexible scripts to run.\n\nYou might be asking yourself, what's the purpose of parsing YAML like\nthis if you can just write Python and have access to all these things by\ndefault?\n\nThe answer is that I wanted a way to write purely data-driven, front-end\ntests. The benefits could be summarized as:\n\n-  It makes it possible to write a single loader script that grabs all\n   the YAML files in a folder and runs them one at a time (or in\n   parallel).\n-  The tests themselves could be served up from a single, remote\n   web-server.\n-  Tests could be written by non-programmers with minimal training and\n   effort.\n-  GUI tools can easily be created to write tests/automated tasks\n   without needing any programming knowledge.\n\nConsider the following example of registering an account:\n\n.. code:: yaml\n\n    # Go to the page.\n    - go: https://somesite/page.html\n    # Click the register link.\n    - click: \"#register\"\n    # Wait for the registration form.\n    - wait_for_presence: \"#email\"\n    # Set the email field to a freshly-generated fake email address:\n    - set_value:\n      - \"#email\"\n      - (( fake-email ))\n    # Create a fake password string.\n    - set_value:\n      - \"#password\"\n      - (( fake-password ))\n    # Reference the fake password we already generated.\n    - set_value:\n      - \"#password-verify\"\n      - (( vars|password ))\n    # Click the register button.\n    - click: \"#register\"\n    # Wait for the redirect and the confirmation div.\n    - wait_for_presence: \"#confirmation-div\"\n    # Assert that the registration was successful.\n    - assert_text_in_page: Your registration was successful!\n\n**Fake** **Data**\n\nThis example makes use of the fake-factory/faker library to generate a\nfake email address as well as a password. Any data that is created using\nthe (( )) syntax is automatically assigned to a variable list for\nreference later.\n\n**Installing** **Faker**\n\nTo install prior to September 15th, 2016: ``pip install fake-factory``\n\nTo install after September 15th, 2016: ``pip install faker``\n\nfake-factory / faker need only be installed for the YAML to support\n``(( fake-* ))`` tags.\n\n``*`` can be any of the methods on the faker class. This list is\nextensive and is under active development. For more information, go to\nthe fake-factory website:\n\nhttps://faker.readthedocs.io/en/latest/\n\n**((** **special** **))**\n\nItems enclosed in double parentheses (( )) will be parsed in this\nspecial way upon the execution of the script.\n\n**Examples**\n\n.. code:: yaml\n\n    - include: basic_setup.yml\n    - import: random.randint\n    - set_value:\n      - \"#someinput\"\n      - (( randint|1,2 ))\n\nThe previous example will import random.randint and use it to generate a\nvalue of either 1 or 2 and insert it into the #someinput element.\n\n--------------\n\n.. code:: yaml\n\n    - import: random.choice\n    - set_value:\n      - \"#someinput\"\n      - (( choice|['frog','cat','bird'] ))\n\nAs you can see, the choice function doesn't take positional arguments\nlike the randint function does. It needs a list of options.\n\n--------------\n\nWhat happens when we run a function more than once and we need to\nreference the second or third output?\n\n.. code:: yaml\n\n    - import: random.choice\n    - set_value:\n      - \"#someinput-a\"\n      - (( choice|['frog','cat','bird'] )) # bird\n    - set_value:\n      - \"#someinput-b\"\n      - (( choice|['frog','cat','bird'] )) # cat\n    - set_value:\n      - \"#someinput-c\"\n      - (( choice|['frog','cat','bird'] )) # cat (again)\n    - assert_value_of_element:\n      - \"#someinput-a\"\n      - (( vars|choice )) # The \"choice\" array. Defaults to index 0.\n    - assert_value_of_element:\n      - \"#someinput-b\"\n      - (( vars|choice|1 )) # The \"choice\" array index 1.\n    - assert_value_of_element:\n      - \"#someinput-c\"\n      - (( vars|choice|2 )) # The \"choice\" array index 2.\n\n--------------\n\nOK, how about values on the page itself? Is there any way to obtain and\nreference them from inside a YAML WebRunner script?\n\n.. code:: yaml\n\n    - value_of: \"#my-input-element\" # Set the value.\n    - set_value:\n      - \"#someinput-a\"\n      - (( vars|value_of|0 )) # Use the value at index 0.\n    - text_of: \"#my-div-element\" # Set the text to a variable.\n    - set_value:\n      - \"#someinput-b\"\n      - (( vars|text_of|0 )) # Use the text value at index 0.\n\nBrowserStack example:\n---------------------\n\nThis library also has first-class support for BrowserStack. Using it is\nnot much different than the examples above.\n\n.. code:: python\n\n    from PyWebRunner import WebRunner\n    # Change any of these values to valid ones.\n    desired = {\n        'browser': 'Edge',\n        'browser_version': '13.0',\n        'os': 'Windows',\n        'os_version': '10',\n        'resolution': '1440x900'\n    }\n    # Make sure you plug in your own USERNAME and API_KEY values here.\n    wr = WebRunner(desired_capabilities=desired,\n                   command_executor='http://USERNAME:API_KEY@hub.browserstack.com:80/wd/hub',\n                                 driver='Remote')\n    wr.start()\n    wr.go('http://google.com')\n    # ... Etc.\n\n--------------\n\nTesting\n-------\n\nWebTester\n---------\n\nWebTester inherits WebRunner so it has all the same methods that\nWebRunner has but it adds some additional methods that are useful for\ntesting.\n\nTesting Asserts\n~~~~~~~~~~~~~~~\n\n-  assert\\_alert\\_not\\_present\n-  assert\\_alert\\_present\n-  assert\\_checked\n-  assert\\_element\\_contains\\_text\n-  assert\\_element\\_has\\_class\n-  assert\\_element\\_not\\_has\\_class\n-  assert\\_exists\n-  assert\\_found\n-  assert\\_not\\_checked\n-  assert\\_not\\_found\n-  assert\\_not\\_visible\n-  assert\\_text\\_in\\_element\n-  assert\\_text\\_in\\_elements\n-  assert\\_text\\_in\\_page\n-  assert\\_text\\_not\\_in\\_page\n-  assert\\_url\n-  assert\\_value\\_of\\_element\n-  assert\\_visible\n\n.. |Build Status| image:: https://travis-ci.org/IntuitiveWebSolutions/PyWebRunner.svg?branch=master\n   :target: https://travis-ci.org/IntuitiveWebSolutions/PyWebRunner\n.. |PyPI version| image:: https://badge.fury.io/py/PyWebRunner.svg\n   :target: https://badge.fury.io/py/PyWebRunner\n\nFile 'CHANGES' not found.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/IntuitiveWebSolutions/PyWebRunner", "keywords": "Selenium,Testing", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "PyWebRunner", "package_url": "https://pypi.org/project/PyWebRunner/", "platform": "OS Independent", "project_url": "https://pypi.org/project/PyWebRunner/", "project_urls": {"Homepage": "http://github.com/IntuitiveWebSolutions/PyWebRunner"}, "release_url": "https://pypi.org/project/PyWebRunner/2.0.4/", "requires_dist": ["xvfbwrapper", "selenium", "pyaml"], "requires_python": "", "summary": "A library that extends and improves the Selenium python library.", "version": "2.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<img alt=\"PyWebRunner\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f5dd42250963bb22e05b3bbf249f9e9f7dde2bc/687474703a2f2f6977732d7075626c69632e73332e616d617a6f6e6177732e636f6d2f4d656469612f507957656252756e6e65722e706e67\">\n<p>PyWebRunner</p>\n</div>\n<p>A supercharged Python wrapper for Selenium</p>\n<p><a href=\"https://travis-ci.org/IntuitiveWebSolutions/PyWebRunner\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/007f2f7cedfb026070f6d17dcf0a26b7592b5191/68747470733a2f2f7472617669732d63692e6f72672f496e74756974697665576562536f6c7574696f6e732f507957656252756e6e65722e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://badge.fury.io/py/PyWebRunner\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f6a1c54262832e61e979e34caba191f1154da91a/68747470733a2f2f62616467652e667572792e696f2f70792f507957656252756e6e65722e737667\"></a></p>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Full documentation can be located here:\n<a href=\"https://intuitivewebsolutions.github.io/PyWebRunner\" rel=\"nofollow\">https://intuitivewebsolutions.github.io/PyWebRunner</a></p>\n</div>\n<div id=\"uses\">\n<h2>Uses</h2>\n<p>You could use WebRunner to scrape a website, automate web tasks, or\nanything else you could imagine. It is easy to initialize and use. It\u2019s\nalso compatible with\n<a href=\"https://www.browserstack.com/automate/python\" rel=\"nofollow\">BrowserStack</a> using\nthe command_executor and remote_capabilities examples on that page.</p>\n<p>(Please note that you will need a subscription, username, and API key to\nmake it work.)</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<pre>pip install PyWebRunner\n</pre>\n</div>\n<div id=\"basic-examples\">\n<h2>Basic Examples</h2>\n<pre><span class=\"c1\"># Import WebRunner if you aren't going to assert anything.</span>\n<span class=\"c1\"># WebTester is a sub-class of WebRunner</span>\n<span class=\"kn\">from</span> <span class=\"nn\">PyWebRunner</span> <span class=\"kn\">import</span> <span class=\"n\">WebRunner</span>\n\n<span class=\"c1\"># Running headless FireFox is the default.</span>\n<span class=\"n\">wr</span> <span class=\"o\">=</span> <span class=\"n\">WebRunner</span><span class=\"p\">()</span> <span class=\"c1\"># Defaults to xvfb=True, driver=FireFox</span>\n<span class=\"c1\"># If xvfb is not installed, it will be bypassed automatically.</span>\n\n<span class=\"c1\"># Start the browser instance.</span>\n<span class=\"n\">wr</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Navigate to a page.</span>\n<span class=\"n\">wr</span><span class=\"o\">.</span><span class=\"n\">go</span><span class=\"p\">(</span><span class=\"s1\">'https://www.google.com/'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Fill in a text field.</span>\n<span class=\"n\">wr</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"s1\">'#lst-ib'</span><span class=\"p\">,</span> <span class=\"s1\">'PyWebRunner'</span><span class=\"p\">)</span>\n<span class=\"n\">wr</span><span class=\"o\">.</span><span class=\"n\">send_key</span><span class=\"p\">(</span><span class=\"s1\">'#lst-ib'</span><span class=\"p\">,</span> <span class=\"s1\">'ENTER'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Click the link based on a (gross) CSS selector.</span>\n<span class=\"n\">wr</span><span class=\"o\">.</span><span class=\"n\">click</span><span class=\"p\">(</span><span class=\"s1\">'#rso &gt; div:nth-child(1) &gt; div:nth-child(1) &gt; div &gt; h3 &gt; a'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Wait for the page to load.</span>\n<span class=\"n\">wr</span><span class=\"o\">.</span><span class=\"n\">wait_for_presence</span><span class=\"p\">(</span><span class=\"s1\">'div.document'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Are we there yet?</span>\n<span class=\"n\">wr</span><span class=\"o\">.</span><span class=\"n\">is_text_on_page</span><span class=\"p\">(</span><span class=\"s1\">'A helpful wrapper for Selenium'</span><span class=\"p\">)</span> <span class=\"c1\"># True</span>\n\n<span class=\"c1\"># Take a screenshot!</span>\n<span class=\"n\">wr</span><span class=\"o\">.</span><span class=\"n\">screenshot</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/screenshot1.png'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Stop the browser instance.</span>\n<span class=\"n\">wr</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"yaml-scripts\">\n<h2>YAML Scripts</h2>\n<p>PyWebRunner supports running YAML scripts and includes the <tt>webrunner</tt>\ncommand.</p>\n<p>Let\u2019s say we made a YAML script for the above example and we called it\n<tt>script.yml</tt></p>\n<pre><span class=\"p-Indicator\">-</span> <span class=\"nt\">go</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">https://www.google.com/</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">set_value</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"#lst-ib\"</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">PyWebRunner</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">send_key</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"#lst-ib\"</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"ENTER\"</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">click</span><span class=\"p\">:</span> <span class=\"s\">\"#rso</span><span class=\"nv\"> </span><span class=\"s\">&gt;</span><span class=\"nv\"> </span><span class=\"s\">div:nth-child(1)</span><span class=\"nv\"> </span><span class=\"s\">&gt;</span><span class=\"nv\"> </span><span class=\"s\">div:nth-child(1)</span><span class=\"nv\"> </span><span class=\"s\">&gt;</span><span class=\"nv\"> </span><span class=\"s\">div</span><span class=\"nv\"> </span><span class=\"s\">&gt;</span><span class=\"nv\"> </span><span class=\"s\">h3</span><span class=\"nv\"> </span><span class=\"s\">&gt;</span><span class=\"nv\"> </span><span class=\"s\">a\"</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">wait_for_presence</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">div.document</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">assert_text_on_page</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">A helpful wrapper for Selenium</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">screenshot</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">/tmp/screenshot1.png</span>\n</pre>\n<p>We can run it like so:</p>\n<pre>webrunner script.yml\n</pre>\n<p>\u2026and it will behave identically to the Python-based example above.</p>\n<div id=\"advanced-yaml-features\">\n<h3>Advanced YAML Features</h3>\n<p>YAML supports the use of the fake-factory library (if it is installed)\nas well as evals and python function calls. Though the YAML is not\nintended as a complete replacement for Python scripts, this does enable\nsome pretty flexible scripts to run.</p>\n<p>You might be asking yourself, what\u2019s the purpose of parsing YAML like\nthis if you can just write Python and have access to all these things by\ndefault?</p>\n<p>The answer is that I wanted a way to write purely data-driven, front-end\ntests. The benefits could be summarized as:</p>\n<ul>\n<li>It makes it possible to write a single loader script that grabs all\nthe YAML files in a folder and runs them one at a time (or in\nparallel).</li>\n<li>The tests themselves could be served up from a single, remote\nweb-server.</li>\n<li>Tests could be written by non-programmers with minimal training and\neffort.</li>\n<li>GUI tools can easily be created to write tests/automated tasks\nwithout needing any programming knowledge.</li>\n</ul>\n<p>Consider the following example of registering an account:</p>\n<pre><span class=\"c1\"># Go to the page.</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">go</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">https://somesite/page.html</span>\n<span class=\"c1\"># Click the register link.</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">click</span><span class=\"p\">:</span> <span class=\"s\">\"#register\"</span>\n<span class=\"c1\"># Wait for the registration form.</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">wait_for_presence</span><span class=\"p\">:</span> <span class=\"s\">\"#email\"</span>\n<span class=\"c1\"># Set the email field to a freshly-generated fake email address:</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">set_value</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"#email\"</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">(( fake-email ))</span>\n<span class=\"c1\"># Create a fake password string.</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">set_value</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"#password\"</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">(( fake-password ))</span>\n<span class=\"c1\"># Reference the fake password we already generated.</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">set_value</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"#password-verify\"</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">(( vars|password ))</span>\n<span class=\"c1\"># Click the register button.</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">click</span><span class=\"p\">:</span> <span class=\"s\">\"#register\"</span>\n<span class=\"c1\"># Wait for the redirect and the confirmation div.</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">wait_for_presence</span><span class=\"p\">:</span> <span class=\"s\">\"#confirmation-div\"</span>\n<span class=\"c1\"># Assert that the registration was successful.</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">assert_text_in_page</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Your registration was successful!</span>\n</pre>\n<p><strong>Fake</strong> <strong>Data</strong></p>\n<p>This example makes use of the fake-factory/faker library to generate a\nfake email address as well as a password. Any data that is created using\nthe (( )) syntax is automatically assigned to a variable list for\nreference later.</p>\n<p><strong>Installing</strong> <strong>Faker</strong></p>\n<p>To install prior to September 15th, 2016: <tt>pip install <span class=\"pre\">fake-factory</span></tt></p>\n<p>To install after September 15th, 2016: <tt>pip install faker</tt></p>\n<p>fake-factory / faker need only be installed for the YAML to support\n<tt>(( <span class=\"pre\">fake-*</span> ))</tt> tags.</p>\n<p><tt>*</tt> can be any of the methods on the faker class. This list is\nextensive and is under active development. For more information, go to\nthe fake-factory website:</p>\n<p><a href=\"https://faker.readthedocs.io/en/latest/\" rel=\"nofollow\">https://faker.readthedocs.io/en/latest/</a></p>\n<p><strong>((</strong> <strong>special</strong> <strong>))</strong></p>\n<p>Items enclosed in double parentheses (( )) will be parsed in this\nspecial way upon the execution of the script.</p>\n<p><strong>Examples</strong></p>\n<pre><span class=\"p-Indicator\">-</span> <span class=\"nt\">include</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">basic_setup.yml</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">import</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">random.randint</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">set_value</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"#someinput\"</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">(( randint|1,2 ))</span>\n</pre>\n<p>The previous example will import random.randint and use it to generate a\nvalue of either 1 or 2 and insert it into the #someinput element.</p>\n<hr class=\"docutils\">\n<pre><span class=\"p-Indicator\">-</span> <span class=\"nt\">import</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">random.choice</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">set_value</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"#someinput\"</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">(( choice|['frog','cat','bird'] ))</span>\n</pre>\n<p>As you can see, the choice function doesn\u2019t take positional arguments\nlike the randint function does. It needs a list of options.</p>\n<hr class=\"docutils\">\n<p>What happens when we run a function more than once and we need to\nreference the second or third output?</p>\n<pre><span class=\"p-Indicator\">-</span> <span class=\"nt\">import</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">random.choice</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">set_value</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"#someinput-a\"</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">(( choice|['frog','cat','bird'] ))</span> <span class=\"c1\"># bird</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">set_value</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"#someinput-b\"</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">(( choice|['frog','cat','bird'] ))</span> <span class=\"c1\"># cat</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">set_value</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"#someinput-c\"</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">(( choice|['frog','cat','bird'] ))</span> <span class=\"c1\"># cat (again)</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">assert_value_of_element</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"#someinput-a\"</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">(( vars|choice ))</span> <span class=\"c1\"># The \"choice\" array. Defaults to index 0.</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">assert_value_of_element</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"#someinput-b\"</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">(( vars|choice|1 ))</span> <span class=\"c1\"># The \"choice\" array index 1.</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">assert_value_of_element</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"#someinput-c\"</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">(( vars|choice|2 ))</span> <span class=\"c1\"># The \"choice\" array index 2.</span>\n</pre>\n<hr class=\"docutils\">\n<p>OK, how about values on the page itself? Is there any way to obtain and\nreference them from inside a YAML WebRunner script?</p>\n<pre><span class=\"p-Indicator\">-</span> <span class=\"nt\">value_of</span><span class=\"p\">:</span> <span class=\"s\">\"#my-input-element\"</span> <span class=\"c1\"># Set the value.</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">set_value</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"#someinput-a\"</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">(( vars|value_of|0 ))</span> <span class=\"c1\"># Use the value at index 0.</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">text_of</span><span class=\"p\">:</span> <span class=\"s\">\"#my-div-element\"</span> <span class=\"c1\"># Set the text to a variable.</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">set_value</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"s\">\"#someinput-b\"</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">(( vars|text_of|0 ))</span> <span class=\"c1\"># Use the text value at index 0.</span>\n</pre>\n</div>\n</div>\n<div id=\"browserstack-example\">\n<h2>BrowserStack example:</h2>\n<p>This library also has first-class support for BrowserStack. Using it is\nnot much different than the examples above.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">PyWebRunner</span> <span class=\"kn\">import</span> <span class=\"n\">WebRunner</span>\n<span class=\"c1\"># Change any of these values to valid ones.</span>\n<span class=\"n\">desired</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'browser'</span><span class=\"p\">:</span> <span class=\"s1\">'Edge'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'browser_version'</span><span class=\"p\">:</span> <span class=\"s1\">'13.0'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'os'</span><span class=\"p\">:</span> <span class=\"s1\">'Windows'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'os_version'</span><span class=\"p\">:</span> <span class=\"s1\">'10'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'resolution'</span><span class=\"p\">:</span> <span class=\"s1\">'1440x900'</span>\n<span class=\"p\">}</span>\n<span class=\"c1\"># Make sure you plug in your own USERNAME and API_KEY values here.</span>\n<span class=\"n\">wr</span> <span class=\"o\">=</span> <span class=\"n\">WebRunner</span><span class=\"p\">(</span><span class=\"n\">desired_capabilities</span><span class=\"o\">=</span><span class=\"n\">desired</span><span class=\"p\">,</span>\n               <span class=\"n\">command_executor</span><span class=\"o\">=</span><span class=\"s1\">'http://USERNAME:API_KEY@hub.browserstack.com:80/wd/hub'</span><span class=\"p\">,</span>\n                             <span class=\"n\">driver</span><span class=\"o\">=</span><span class=\"s1\">'Remote'</span><span class=\"p\">)</span>\n<span class=\"n\">wr</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">wr</span><span class=\"o\">.</span><span class=\"n\">go</span><span class=\"p\">(</span><span class=\"s1\">'http://google.com'</span><span class=\"p\">)</span>\n<span class=\"c1\"># ... Etc.</span>\n</pre>\n</div>\n<hr class=\"docutils\">\n<div id=\"testing\">\n<h2>Testing</h2>\n</div>\n<div id=\"webtester\">\n<h2>WebTester</h2>\n<p>WebTester inherits WebRunner so it has all the same methods that\nWebRunner has but it adds some additional methods that are useful for\ntesting.</p>\n<div id=\"testing-asserts\">\n<h3>Testing Asserts</h3>\n<ul>\n<li>assert_alert_not_present</li>\n<li>assert_alert_present</li>\n<li>assert_checked</li>\n<li>assert_element_contains_text</li>\n<li>assert_element_has_class</li>\n<li>assert_element_not_has_class</li>\n<li>assert_exists</li>\n<li>assert_found</li>\n<li>assert_not_checked</li>\n<li>assert_not_found</li>\n<li>assert_not_visible</li>\n<li>assert_text_in_element</li>\n<li>assert_text_in_elements</li>\n<li>assert_text_in_page</li>\n<li>assert_text_not_in_page</li>\n<li>assert_url</li>\n<li>assert_value_of_element</li>\n<li>assert_visible</li>\n</ul>\n<p>File \u2018CHANGES\u2019 not found.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6762406, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "84e34132e14a0179365b28ba95ac3fa7", "sha256": "87498eeade04395ce3ccadc5a409aefb9c88c90ba5254ac31736a1bbd272a457"}, "downloads": -1, "filename": "PyWebRunner-1.0.0.tar.gz", "has_sig": false, "md5_digest": "84e34132e14a0179365b28ba95ac3fa7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9893, "upload_time": "2016-06-23T15:37:25", "upload_time_iso_8601": "2016-06-23T15:37:25.017548Z", "url": "https://files.pythonhosted.org/packages/16/ad/1fc940638a85ff3f9ed308b4c059854d87136e33ee2c8ed480c377c2b998/PyWebRunner-1.0.0.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "3eb66f4f20a268ef54d3535624020dca", "sha256": "f96f7bd117a185e87ba98179004875312def7d87235294b24fde107812d3fdb7"}, "downloads": -1, "filename": "PyWebRunner-1.0.2.tar.gz", "has_sig": false, "md5_digest": "3eb66f4f20a268ef54d3535624020dca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9946, "upload_time": "2016-06-23T15:51:50", "upload_time_iso_8601": "2016-06-23T15:51:50.072366Z", "url": "https://files.pythonhosted.org/packages/87/82/995977ae90f5fd1068152bba3368e9f758fe1e42096eb6a4f0a2b373c3a1/PyWebRunner-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "20f5352a8301030050571cb8e8dd67de", "sha256": "2981b44d9020447de741d65294b7925655e8c15abdbefc3f44364f94f9001704"}, "downloads": -1, "filename": "PyWebRunner-1.1.0.tar.gz", "has_sig": false, "md5_digest": "20f5352a8301030050571cb8e8dd67de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9927, "upload_time": "2016-06-23T15:59:47", "upload_time_iso_8601": "2016-06-23T15:59:47.806597Z", "url": "https://files.pythonhosted.org/packages/cc/2f/a3769f94ef94f40793e92091b15f479f784ac0447ff82a05bd0e6ca9cdea/PyWebRunner-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "bc61a4a60d57c4a64851f5a68afa3590", "sha256": "1ac426a4aaee24dbdcd694d3231b0b02007f2897b97881ceee449614a2410b35"}, "downloads": -1, "filename": "PyWebRunner-1.2.0.tar.gz", "has_sig": false, "md5_digest": "bc61a4a60d57c4a64851f5a68afa3590", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11393, "upload_time": "2016-06-23T17:21:08", "upload_time_iso_8601": "2016-06-23T17:21:08.548914Z", "url": "https://files.pythonhosted.org/packages/1d/b9/9b399291125fd20053a0a80e3b15ec6b104584559dcccf17ef761f27f2fc/PyWebRunner-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "025dd40a14dcb1911b2b5433a26c502b", "sha256": "8f0b94bcc59d3dde17ab2fa1474353abfb6934f239ec11d5ab6f5b21751719ce"}, "downloads": -1, "filename": "PyWebRunner-1.3.0.tar.gz", "has_sig": false, "md5_digest": "025dd40a14dcb1911b2b5433a26c502b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10579, "upload_time": "2016-06-24T03:06:23", "upload_time_iso_8601": "2016-06-24T03:06:23.482275Z", "url": "https://files.pythonhosted.org/packages/45/42/5751034ba9a3ae3d525942c3abc35f86e4f1ff607d9962a8400784df18d6/PyWebRunner-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "07bd482ab1762037074d7fa468aa6989", "sha256": "7e57655f92a64625d2a8b6c7c1a75d3a8cf3234ad5f2e165a6c51e42d5cfdca6"}, "downloads": -1, "filename": "PyWebRunner-1.3.1.tar.gz", "has_sig": false, "md5_digest": "07bd482ab1762037074d7fa468aa6989", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10563, "upload_time": "2016-06-24T04:23:21", "upload_time_iso_8601": "2016-06-24T04:23:21.782757Z", "url": "https://files.pythonhosted.org/packages/bf/3a/89f6eb4d55e127a7466de1d7713b8a5250da86ae788c1607d9938afbdbd4/PyWebRunner-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "42156b3e640ee04d3b1a219302cc0410", "sha256": "d4c82245f16d05638e8fce8cc9fa9ce84c94cb51fd6418b61b847ae213549828"}, "downloads": -1, "filename": "PyWebRunner-1.3.2.tar.gz", "has_sig": false, "md5_digest": "42156b3e640ee04d3b1a219302cc0410", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10565, "upload_time": "2016-06-24T04:31:17", "upload_time_iso_8601": "2016-06-24T04:31:17.732351Z", "url": "https://files.pythonhosted.org/packages/0c/98/9d3b18983019ce8f05fd05c5bde0eee1dfc4383f32f9f2c4e924bb993f13/PyWebRunner-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "58b6f21841116058dbccba827eecb3a8", "sha256": "227dc5440703ebe41fabee7f114b9f5ffbc45a96d217bda1a49f1f449f06080b"}, "downloads": -1, "filename": "PyWebRunner-1.3.3.tar.gz", "has_sig": false, "md5_digest": "58b6f21841116058dbccba827eecb3a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14848, "upload_time": "2016-06-24T20:22:08", "upload_time_iso_8601": "2016-06-24T20:22:08.401823Z", "url": "https://files.pythonhosted.org/packages/83/d3/db9009a3233d771a41049aad15fcb07996288a3794302634f3551835d60a/PyWebRunner-1.3.3.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "126f9bc4e1d0476259c73b754c9d2dd3", "sha256": "485ae017668c8093cc800d49b7b6059878a3fe2f205f52d5f57e3a1f834e370b"}, "downloads": -1, "filename": "PyWebRunner-1.4.0.tar.gz", "has_sig": false, "md5_digest": "126f9bc4e1d0476259c73b754c9d2dd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15930, "upload_time": "2016-06-25T03:07:44", "upload_time_iso_8601": "2016-06-25T03:07:44.675301Z", "url": "https://files.pythonhosted.org/packages/66/c7/6ad3a2437d548afd61665efe9a1be9e88815ac1d36013fb4d8f244abd9af/PyWebRunner-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "a24612baba150ec07e3cb99b305e8441", "sha256": "0b6056dff549a70b650a7e896129229d10eb2c252ef2a66abc193a8f7b548f1e"}, "downloads": -1, "filename": "PyWebRunner-1.4.1.tar.gz", "has_sig": false, "md5_digest": "a24612baba150ec07e3cb99b305e8441", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15968, "upload_time": "2016-06-30T18:33:54", "upload_time_iso_8601": "2016-06-30T18:33:54.059772Z", "url": "https://files.pythonhosted.org/packages/a5/75/77d8ced197dd9692a5fc232a702a616870fda2549d539bd0182ac2592d64/PyWebRunner-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "dbbf4433403668433107f6cc0a6003b4", "sha256": "6f76cfe268d797a521321e7bcba6926453d31ba0af3dfce788c20d96be0d61e0"}, "downloads": -1, "filename": "PyWebRunner-1.4.2.tar.gz", "has_sig": false, "md5_digest": "dbbf4433403668433107f6cc0a6003b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16130, "upload_time": "2016-07-01T03:10:36", "upload_time_iso_8601": "2016-07-01T03:10:36.032139Z", "url": "https://files.pythonhosted.org/packages/27/bd/12530da432c7daa70f426ed94f58f37ec302784a266e33ed1ebcac4c8594/PyWebRunner-1.4.2.tar.gz", "yanked": false}], "1.4.3": [{"comment_text": "", "digests": {"md5": "cb583ee32c41b0b98d9839991c445d45", "sha256": "8cc2f1d882a550a91838827f868e297e549bc916dc38a91f68bc366da497e2a1"}, "downloads": -1, "filename": "PyWebRunner-1.4.3.tar.gz", "has_sig": false, "md5_digest": "cb583ee32c41b0b98d9839991c445d45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16234, "upload_time": "2016-07-05T17:04:49", "upload_time_iso_8601": "2016-07-05T17:04:49.765150Z", "url": "https://files.pythonhosted.org/packages/8a/80/55ccc1c44695f3f87e75ca8298a4a122df1ed5c6e4beaef44a391367240c/PyWebRunner-1.4.3.tar.gz", "yanked": false}], "1.4.4": [{"comment_text": "", "digests": {"md5": "1589f42b702af7422ad926de1b7915c9", "sha256": "44592cc8027d0832d798affd062d42456f4961c1ea924abd62da613cbfa317c8"}, "downloads": -1, "filename": "PyWebRunner-1.4.4.tar.gz", "has_sig": false, "md5_digest": "1589f42b702af7422ad926de1b7915c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17086, "upload_time": "2016-07-08T01:17:51", "upload_time_iso_8601": "2016-07-08T01:17:51.404339Z", "url": "https://files.pythonhosted.org/packages/3d/c5/6707235bd2a3ac3e1656099d7d10a3b866816ad0b27fa49464247f7dc5b0/PyWebRunner-1.4.4.tar.gz", "yanked": false}], "1.4.5": [{"comment_text": "", "digests": {"md5": "f7958ff1de0ce1a7ce03c1e3460c7d3a", "sha256": "b42d8dee3188b707acd6460967648c2de893913b968f980fae8e9cb9e848ef31"}, "downloads": -1, "filename": "PyWebRunner-1.4.5.tar.gz", "has_sig": false, "md5_digest": "f7958ff1de0ce1a7ce03c1e3460c7d3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19574, "upload_time": "2016-07-14T21:24:50", "upload_time_iso_8601": "2016-07-14T21:24:50.581470Z", "url": "https://files.pythonhosted.org/packages/c8/0a/92c9f29a38990abe0b82aa67d3c033cc8b34548df748d148e070babb8312/PyWebRunner-1.4.5.tar.gz", "yanked": false}], "1.4.6": [{"comment_text": "", "digests": {"md5": "6d010342dc7d82f5409c432a9108329b", "sha256": "5a5fe4f799660c32c9099ebce1fd0c071dbd783ffb12728288d70495e5d37813"}, "downloads": -1, "filename": "PyWebRunner-1.4.6.tar.gz", "has_sig": false, "md5_digest": "6d010342dc7d82f5409c432a9108329b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19591, "upload_time": "2016-07-14T21:47:14", "upload_time_iso_8601": "2016-07-14T21:47:14.782719Z", "url": "https://files.pythonhosted.org/packages/b1/fd/7f267462123a1789404276339d8685cba770f4042bee29c32e8750ee7432/PyWebRunner-1.4.6.tar.gz", "yanked": false}], "1.4.7": [{"comment_text": "", "digests": {"md5": "b9b651f7ada2c2a2918a4197ecbaff82", "sha256": "5167cb0beaea7f4a3a650f4cce2d7955e9885ef9fd572323da9463d680422322"}, "downloads": -1, "filename": "PyWebRunner-1.4.7.tar.gz", "has_sig": false, "md5_digest": "b9b651f7ada2c2a2918a4197ecbaff82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19715, "upload_time": "2016-07-19T00:38:50", "upload_time_iso_8601": "2016-07-19T00:38:50.403797Z", "url": "https://files.pythonhosted.org/packages/63/9b/fa0d444c66c9ac3de52c632d60ba57a6b7a3718c7ca1dc71668ba636f6ba/PyWebRunner-1.4.7.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "69416cdc81a2bdd77a046536323e71d1", "sha256": "d63e0aa0b84abc76ff80250c627dc6e9861d41a972c1fbd2205a983ceba615b3"}, "downloads": -1, "filename": "PyWebRunner-1.5.0.tar.gz", "has_sig": false, "md5_digest": "69416cdc81a2bdd77a046536323e71d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10865, "upload_time": "2016-08-04T16:42:09", "upload_time_iso_8601": "2016-08-04T16:42:09.966529Z", "url": "https://files.pythonhosted.org/packages/4e/6f/b17551dcfcbc80a37916a85cbef2d4e36d281ba5c3e85b33217b13bb0c35/PyWebRunner-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "0ff352bb715002695cd358ef7f048ebe", "sha256": "2a94e0f921d1119bd19821c349282c7494e94eeeda7f6e6679e5d68c151a8d63"}, "downloads": -1, "filename": "PyWebRunner-1.5.1.tar.gz", "has_sig": false, "md5_digest": "0ff352bb715002695cd358ef7f048ebe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22909, "upload_time": "2016-08-04T16:55:56", "upload_time_iso_8601": "2016-08-04T16:55:56.989816Z", "url": "https://files.pythonhosted.org/packages/f8/31/510323ae63a97b6cc8881ff7e1228591b97bc4e9f4a8b5320e5de61f5515/PyWebRunner-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "a093ed8005d12ad50a35e63338215f37", "sha256": "33ad1a40aa939de5f5f54f28d5002eff859da720d26007932ef6efaf89105121"}, "downloads": -1, "filename": "PyWebRunner-1.5.2.tar.gz", "has_sig": false, "md5_digest": "a093ed8005d12ad50a35e63338215f37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21120, "upload_time": "2016-08-04T17:52:52", "upload_time_iso_8601": "2016-08-04T17:52:52.135469Z", "url": "https://files.pythonhosted.org/packages/2b/4f/9f46eacc8ebbe7d65b6bd27120ede881c254fe74a0213453a4e34a556622/PyWebRunner-1.5.2.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "af64c6b9c7fd469ee7c70242387cab9d", "sha256": "690138606e5005ec8a77194a8f7ec322571832825bb39f6069710e0ff7f1198e"}, "downloads": -1, "filename": "PyWebRunner-1.6.0.tar.gz", "has_sig": false, "md5_digest": "af64c6b9c7fd469ee7c70242387cab9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20037, "upload_time": "2016-08-20T13:55:14", "upload_time_iso_8601": "2016-08-20T13:55:14.265921Z", "url": "https://files.pythonhosted.org/packages/99/3c/81129175410fbbbad0b89d971939e9ef7d422e52c7ae190901ea6132b6f6/PyWebRunner-1.6.0.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "9b6cc7647f0b1ee40ecef9f2f353a1b7", "sha256": "be14ad536f8d189c72c563f9d6942c0f0e1e4eab832aa6366b59c5670c6ec0ac"}, "downloads": -1, "filename": "PyWebRunner-1.6.1.tar.gz", "has_sig": false, "md5_digest": "9b6cc7647f0b1ee40ecef9f2f353a1b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20128, "upload_time": "2016-08-20T14:52:36", "upload_time_iso_8601": "2016-08-20T14:52:36.706807Z", "url": "https://files.pythonhosted.org/packages/a0/89/1f81986aa9aa822a51d7a3fefe004e05af2d739274376c0e49fe267e2757/PyWebRunner-1.6.1.tar.gz", "yanked": false}], "1.6.2": [{"comment_text": "", "digests": {"md5": "d719d1645a52ace066b589653c605c42", "sha256": "38256c64a994ee5e101575dbb4f692560e7d1c8b699415c9cbcf7ee59f408b87"}, "downloads": -1, "filename": "PyWebRunner-1.6.2.tar.gz", "has_sig": false, "md5_digest": "d719d1645a52ace066b589653c605c42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23716, "upload_time": "2016-08-21T15:19:26", "upload_time_iso_8601": "2016-08-21T15:19:26.055016Z", "url": "https://files.pythonhosted.org/packages/42/5b/d734e76b57fbc44c1f3667d996ea58f9a629276a853ce76bbd58ea7a1333/PyWebRunner-1.6.2.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "9edcc0a51b14c4315f4c6896e4e06709", "sha256": "0ac6cf1e3da64674bad28606a7c7c3ed8860612e80250e907e7198ff64f47dbd"}, "downloads": -1, "filename": "PyWebRunner-1.7.0.tar.gz", "has_sig": false, "md5_digest": "9edcc0a51b14c4315f4c6896e4e06709", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24328, "upload_time": "2016-08-21T16:57:33", "upload_time_iso_8601": "2016-08-21T16:57:33.151091Z", "url": "https://files.pythonhosted.org/packages/f4/36/4648caf9d1cd63fcbfdff7672638f078d95f36877bc5f1cd01a8e0490d13/PyWebRunner-1.7.0.tar.gz", "yanked": false}], "1.7.1": [{"comment_text": "", "digests": {"md5": "2552e8dd6110ae7fee0550da239e6e05", "sha256": "de4e9455ddbdbf2f912cc21994f293ad1f1fc87a3f5a78215bf846221e42ea18"}, "downloads": -1, "filename": "PyWebRunner-1.7.1.tar.gz", "has_sig": false, "md5_digest": "2552e8dd6110ae7fee0550da239e6e05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31537, "upload_time": "2016-08-21T17:37:00", "upload_time_iso_8601": "2016-08-21T17:37:00.781570Z", "url": "https://files.pythonhosted.org/packages/80/b5/3dffdccb207cec3368a0059305a7158bd1719997ea38c50dcce13f8f4e69/PyWebRunner-1.7.1.tar.gz", "yanked": false}], "1.7.3": [{"comment_text": "", "digests": {"md5": "8ad61f4c34ff60812f49f9dba446e243", "sha256": "6645be3eb7654d04a929ee99e3717e02fdbb5a866acc6d898bc2894147b4010e"}, "downloads": -1, "filename": "PyWebRunner-1.7.3.tar.gz", "has_sig": false, "md5_digest": "8ad61f4c34ff60812f49f9dba446e243", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31602, "upload_time": "2016-08-21T17:51:30", "upload_time_iso_8601": "2016-08-21T17:51:30.175642Z", "url": "https://files.pythonhosted.org/packages/c8/59/0ac6d11968bfd8c50f3854a9951afb283357512a3f0712ac79d4da328bc3/PyWebRunner-1.7.3.tar.gz", "yanked": false}], "1.7.4": [{"comment_text": "", "digests": {"md5": "0d7e38384f4924aaf895a2eaa470c011", "sha256": "4f5a3834f4411c5f6b2194431bec512bea456aed915b76d9f395a6e57f1fc23c"}, "downloads": -1, "filename": "PyWebRunner-1.7.4.tar.gz", "has_sig": false, "md5_digest": "0d7e38384f4924aaf895a2eaa470c011", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31613, "upload_time": "2016-08-21T18:24:03", "upload_time_iso_8601": "2016-08-21T18:24:03.514897Z", "url": "https://files.pythonhosted.org/packages/f2/a3/312c4360a0737f48353cee0d05c2a417648f2a657604bfc5877ab5970fa5/PyWebRunner-1.7.4.tar.gz", "yanked": false}], "1.7.5": [{"comment_text": "", "digests": {"md5": "3f7dad161f1e6ddc0c5b7642085b02d0", "sha256": "3b5826a9f866a2c37b3413b2b56f3cba81f87a10a0af157efe9979813c79dbd6"}, "downloads": -1, "filename": "PyWebRunner-1.7.5.tar.gz", "has_sig": false, "md5_digest": "3f7dad161f1e6ddc0c5b7642085b02d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31639, "upload_time": "2016-08-21T19:31:37", "upload_time_iso_8601": "2016-08-21T19:31:37.325551Z", "url": "https://files.pythonhosted.org/packages/ed/78/065088514b23ff6b62afb0282731d94c178a3472049cfe14d713907853ed/PyWebRunner-1.7.5.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "eafcd0872abb92ad4a902ea3f53cdd59", "sha256": "5deacc338edf54ac47ce4a52434a602834b07fc8c69e573f3756e73abb072519"}, "downloads": -1, "filename": "PyWebRunner-1.8.0.tar.gz", "has_sig": false, "md5_digest": "eafcd0872abb92ad4a902ea3f53cdd59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34398, "upload_time": "2016-09-08T02:06:43", "upload_time_iso_8601": "2016-09-08T02:06:43.245164Z", "url": "https://files.pythonhosted.org/packages/19/4a/1d768445ecdf2c0d8495e559437cf49aa3a5598708da3425e3bc3e7d40fc/PyWebRunner-1.8.0.tar.gz", "yanked": false}], "1.8.1": [{"comment_text": "", "digests": {"md5": "a85bc7596a73f11d8b7e46d31f3275ce", "sha256": "246a2f8757093b06c4eea76c5e3f7241186143cb797233335db45e8bec99fa8e"}, "downloads": -1, "filename": "PyWebRunner-1.8.1.tar.gz", "has_sig": false, "md5_digest": "a85bc7596a73f11d8b7e46d31f3275ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35108, "upload_time": "2016-09-08T19:41:48", "upload_time_iso_8601": "2016-09-08T19:41:48.230151Z", "url": "https://files.pythonhosted.org/packages/eb/34/bf1ad256e6303d36435d54c842a0660ee6e8a0c2de93cbed738a612583b9/PyWebRunner-1.8.1.tar.gz", "yanked": false}], "1.8.2": [{"comment_text": "", "digests": {"md5": "f7ca9945f9ddfdd6c0caffdfc97f9d46", "sha256": "fde4956f32afc61fa6ed310acee5b0981fab1755cdad1554321cbfdc2889cc32"}, "downloads": -1, "filename": "PyWebRunner-1.8.2.tar.gz", "has_sig": false, "md5_digest": "f7ca9945f9ddfdd6c0caffdfc97f9d46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35338, "upload_time": "2016-09-12T18:59:57", "upload_time_iso_8601": "2016-09-12T18:59:57.006788Z", "url": "https://files.pythonhosted.org/packages/5b/76/17a624055616769744d0c794d764b14a50c37a82f625fe92ca4f2cc546f7/PyWebRunner-1.8.2.tar.gz", "yanked": false}], "1.8.3": [{"comment_text": "", "digests": {"md5": "8415c2157e660b26c2ab9b4f9006f56c", "sha256": "830d06da838767ccd517916fbe7cba4e2b69748cdec2768ed452f88190d0bf92"}, "downloads": -1, "filename": "PyWebRunner-1.8.3.tar.gz", "has_sig": false, "md5_digest": "8415c2157e660b26c2ab9b4f9006f56c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35467, "upload_time": "2016-09-12T19:20:07", "upload_time_iso_8601": "2016-09-12T19:20:07.794715Z", "url": "https://files.pythonhosted.org/packages/45/12/10e083dc6e80ab8993a87be64fb09fe8d5ea34f14a0569d856f38626fcb1/PyWebRunner-1.8.3.tar.gz", "yanked": false}], "1.8.4": [{"comment_text": "", "digests": {"md5": "5a8270ef4e495465df691adeae7e9af8", "sha256": "5d9620dd360b85fc679475fe9adc2218f5b1537daa5ad9c37adc6b5957fe7c83"}, "downloads": -1, "filename": "PyWebRunner-1.8.4.tar.gz", "has_sig": false, "md5_digest": "5a8270ef4e495465df691adeae7e9af8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35464, "upload_time": "2016-09-12T19:26:39", "upload_time_iso_8601": "2016-09-12T19:26:39.433541Z", "url": "https://files.pythonhosted.org/packages/64/a2/d6c2ceeaebc4e5a4dbe6f5f1c458d87fb13b7c1941aef5954fd2f2446f06/PyWebRunner-1.8.4.tar.gz", "yanked": false}], "1.8.5": [{"comment_text": "", "digests": {"md5": "5d10e2de7367e2cf8ce0394e2c39f424", "sha256": "790dc9e30bb044621ba145670523a25a620b6e22e3105bcd1bc1291ded3ea1f1"}, "downloads": -1, "filename": "PyWebRunner-1.8.5.tar.gz", "has_sig": false, "md5_digest": "5d10e2de7367e2cf8ce0394e2c39f424", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35587, "upload_time": "2016-09-13T02:39:37", "upload_time_iso_8601": "2016-09-13T02:39:37.509552Z", "url": "https://files.pythonhosted.org/packages/05/34/adfc004cc5dc3d9a4a7206cbacfc7cb5f7fc6d556b97bef4fcfeae17b2f1/PyWebRunner-1.8.5.tar.gz", "yanked": false}], "1.8.6": [{"comment_text": "", "digests": {"md5": "f4feba4eaba4d8aca4249dbcde0593ab", "sha256": "901620a380b07001b9641a42fee0801c1d3fe09fcc7e2995bb05d1bb7cd962f8"}, "downloads": -1, "filename": "PyWebRunner-1.8.6.tar.gz", "has_sig": false, "md5_digest": "f4feba4eaba4d8aca4249dbcde0593ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35681, "upload_time": "2016-09-16T20:54:52", "upload_time_iso_8601": "2016-09-16T20:54:52.517693Z", "url": "https://files.pythonhosted.org/packages/e4/b5/88190c10c67849c6340fe7862fc90215229844f201a24ef7b34537213fbd/PyWebRunner-1.8.6.tar.gz", "yanked": false}], "1.8.7": [{"comment_text": "", "digests": {"md5": "c5376ae41d619f89679fc20077365d36", "sha256": "53158da71871891c47302e55c87683d9773c8c1f207ed29feed00a774bcd89a4"}, "downloads": -1, "filename": "PyWebRunner-1.8.7.tar.gz", "has_sig": false, "md5_digest": "c5376ae41d619f89679fc20077365d36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35577, "upload_time": "2016-09-19T14:51:19", "upload_time_iso_8601": "2016-09-19T14:51:19.176998Z", "url": "https://files.pythonhosted.org/packages/44/89/47b042d202bc87184877d055f88b34d20bab7ea4ffa09103ad31d6dec9a9/PyWebRunner-1.8.7.tar.gz", "yanked": false}], "1.8.8": [{"comment_text": "", "digests": {"md5": "0d1484520e1abfd96ccda172b34339f4", "sha256": "5e60b5e8113297965bea6321d4bde2970e3d905cbea8fe0121130c0e1c434096"}, "downloads": -1, "filename": "PyWebRunner-1.8.8.tar.gz", "has_sig": false, "md5_digest": "0d1484520e1abfd96ccda172b34339f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35599, "upload_time": "2016-09-23T15:40:54", "upload_time_iso_8601": "2016-09-23T15:40:54.101748Z", "url": "https://files.pythonhosted.org/packages/a7/83/109aadb29493e76a507dd170cac58f8c3ddbbe8e07b413e0beaac667ed61/PyWebRunner-1.8.8.tar.gz", "yanked": false}], "1.8.9": [{"comment_text": "", "digests": {"md5": "bde61290b24dd89af17cd19419e414bb", "sha256": "01b24b3aa89c6cc78033543a51f1e472face8d5ad580213987ff4ce8fdf248f1"}, "downloads": -1, "filename": "PyWebRunner-1.8.9.tar.gz", "has_sig": false, "md5_digest": "bde61290b24dd89af17cd19419e414bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35740, "upload_time": "2016-12-20T15:51:46", "upload_time_iso_8601": "2016-12-20T15:51:46.808870Z", "url": "https://files.pythonhosted.org/packages/ee/5e/de1bdbc211857ba8d49b7c5a40b7db0d80d437d2bd3cd042c29d616f3f5b/PyWebRunner-1.8.9.tar.gz", "yanked": false}], "1.9.0": [{"comment_text": "", "digests": {"md5": "156dbef595ed294331f52010a7e2ed45", "sha256": "4d5bf1e54590c30a8bb29b1ec12ffe5a693a9a79be7571aef58b4d312c6aca98"}, "downloads": -1, "filename": "PyWebRunner-1.9.0.tar.gz", "has_sig": false, "md5_digest": "156dbef595ed294331f52010a7e2ed45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35869, "upload_time": "2016-12-21T02:40:41", "upload_time_iso_8601": "2016-12-21T02:40:41.405481Z", "url": "https://files.pythonhosted.org/packages/7b/16/8d8856aeb320bd3201a4817bba84b94cf139c35713d7945f78591621c989/PyWebRunner-1.9.0.tar.gz", "yanked": false}], "1.9.1": [{"comment_text": "", "digests": {"md5": "78de5022d519c7641769bdc86e4d6e61", "sha256": "1833312875c806df4a8accfa3cee3bf9870dbdc6e68d89d2546884a02e7d5b61"}, "downloads": -1, "filename": "PyWebRunner-1.9.1.tar.gz", "has_sig": false, "md5_digest": "78de5022d519c7641769bdc86e4d6e61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35953, "upload_time": "2017-08-03T01:32:42", "upload_time_iso_8601": "2017-08-03T01:32:42.367401Z", "url": "https://files.pythonhosted.org/packages/dc/55/b9127f5f6fb81dbd3fd2c02c379c4ba9cb5b8595ffa82f114edc013dbdf5/PyWebRunner-1.9.1.tar.gz", "yanked": false}], "1.9.2": [{"comment_text": "", "digests": {"md5": "570c57acc3c0494453b6c57dc23e13b1", "sha256": "76407933598dd417dfc8b5c8bce447e06ec0b9fb65fffe3a6e099fcdb974d066"}, "downloads": -1, "filename": "PyWebRunner-1.9.2.tar.gz", "has_sig": false, "md5_digest": "570c57acc3c0494453b6c57dc23e13b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36092, "upload_time": "2017-08-03T01:58:32", "upload_time_iso_8601": "2017-08-03T01:58:32.646608Z", "url": "https://files.pythonhosted.org/packages/6b/75/4080e094ebe4a77d83a61568289a7cb2fca01f8bd85f0afc7f177750ee07/PyWebRunner-1.9.2.tar.gz", "yanked": false}], "1.9.3": [{"comment_text": "", "digests": {"md5": "5e79747395f265359679cf6a8154fb78", "sha256": "76e7a35364cd2755e5e2f35b0f3f1130b31a887947942aaeabe2f1863c17922c"}, "downloads": -1, "filename": "PyWebRunner-1.9.3.tar.gz", "has_sig": false, "md5_digest": "5e79747395f265359679cf6a8154fb78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36728, "upload_time": "2017-08-04T18:04:30", "upload_time_iso_8601": "2017-08-04T18:04:30.379890Z", "url": "https://files.pythonhosted.org/packages/60/71/7b327adc597fba8cf1ff394a00c6f9822923ea2287cacff2136d9c07b857/PyWebRunner-1.9.3.tar.gz", "yanked": false}], "1.9.4": [{"comment_text": "", "digests": {"md5": "903bdd7fcfc67638802005dc29c932d0", "sha256": "99e9245962616f62c3c9f608e3384a6a84fc869026199a2f2540d063922975ae"}, "downloads": -1, "filename": "PyWebRunner-1.9.4.tar.gz", "has_sig": false, "md5_digest": "903bdd7fcfc67638802005dc29c932d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37252, "upload_time": "2017-08-26T16:18:36", "upload_time_iso_8601": "2017-08-26T16:18:36.050165Z", "url": "https://files.pythonhosted.org/packages/d6/b0/cfffd8d0d9009b7e00a88cdb2d9ab8112982f1feb21ef93a914f123fca08/PyWebRunner-1.9.4.tar.gz", "yanked": false}], "1.9.5": [{"comment_text": "", "digests": {"md5": "1ea005fbacffe85ec85315708e7412ce", "sha256": "f9d98f68f412d3196c6c15698aa477ea05738dca11578982fdb5126d07187dbb"}, "downloads": -1, "filename": "PyWebRunner-1.9.5.tar.gz", "has_sig": false, "md5_digest": "1ea005fbacffe85ec85315708e7412ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37254, "upload_time": "2017-08-26T16:20:30", "upload_time_iso_8601": "2017-08-26T16:20:30.110771Z", "url": "https://files.pythonhosted.org/packages/8d/4e/4850793c75a907337689a0b0c0162f3301203047b651a8f8e88376558393/PyWebRunner-1.9.5.tar.gz", "yanked": false}], "1.9.6": [{"comment_text": "", "digests": {"md5": "b07877e507f135ad64f1699acb8a0b02", "sha256": "370e8e38d0a53198347c67f306c62f4d04dec767eef7c2016120581ac3510527"}, "downloads": -1, "filename": "PyWebRunner-1.9.6.tar.gz", "has_sig": false, "md5_digest": "b07877e507f135ad64f1699acb8a0b02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37276, "upload_time": "2017-08-26T16:27:47", "upload_time_iso_8601": "2017-08-26T16:27:47.636422Z", "url": "https://files.pythonhosted.org/packages/00/2a/6383f9264e28461d0fb29586d34703e75179d9f002660a09c17a8f4c07d7/PyWebRunner-1.9.6.tar.gz", "yanked": false}], "1.9.7": [{"comment_text": "", "digests": {"md5": "0e7b68d3f6cb0d3c4b94a35de0cc7880", "sha256": "14381d50a447622e1c041902bcd50c5703320af5e31db70a02bc052730ee0861"}, "downloads": -1, "filename": "PyWebRunner-1.9.7.tar.gz", "has_sig": false, "md5_digest": "0e7b68d3f6cb0d3c4b94a35de0cc7880", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37551, "upload_time": "2017-10-07T18:26:31", "upload_time_iso_8601": "2017-10-07T18:26:31.122827Z", "url": "https://files.pythonhosted.org/packages/74/fe/fda417ffaf076d3cc7d30c4139ebdbc3f40642cd87aa09e4d78bf1f826cd/PyWebRunner-1.9.7.tar.gz", "yanked": false}], "1.9.8": [{"comment_text": "", "digests": {"md5": "62d2d8a7fe246c8112bb37a344d667df", "sha256": "714153e1bb1f199b49b44cda68517828ddb4a64733af7a1280ab0c1ab627954f"}, "downloads": -1, "filename": "PyWebRunner-1.9.8.tar.gz", "has_sig": false, "md5_digest": "62d2d8a7fe246c8112bb37a344d667df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37524, "upload_time": "2017-10-08T16:58:33", "upload_time_iso_8601": "2017-10-08T16:58:33.091909Z", "url": "https://files.pythonhosted.org/packages/58/fe/10efa37dbd62ca2750c57858cce3efd7bcbbad4c226dba7e1a3cbac50776/PyWebRunner-1.9.8.tar.gz", "yanked": false}], "1.9.9": [{"comment_text": "", "digests": {"md5": "11938cfd6f985179079f60762f1f3516", "sha256": "80437304b5fab62e1902e6ac6dbb40cce106c94ca138a1ac7bc3c85a86a22c67"}, "downloads": -1, "filename": "PyWebRunner-1.9.9.tar.gz", "has_sig": false, "md5_digest": "11938cfd6f985179079f60762f1f3516", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37534, "upload_time": "2017-10-08T17:12:57", "upload_time_iso_8601": "2017-10-08T17:12:57.755698Z", "url": "https://files.pythonhosted.org/packages/3b/9a/e499e5f941ad959e1bc16739cef7fa0819db384fb09e92830c2c39ea1ee6/PyWebRunner-1.9.9.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "2fa8d60485a4dd7c1a7ab09701288598", "sha256": "88074c0b08c31ed55029f6538623e9203e02cb48921bee85e870e4c9e104ab53"}, "downloads": -1, "filename": "PyWebRunner-2.0.0.tar.gz", "has_sig": false, "md5_digest": "2fa8d60485a4dd7c1a7ab09701288598", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37521, "upload_time": "2017-10-08T17:18:30", "upload_time_iso_8601": "2017-10-08T17:18:30.851880Z", "url": "https://files.pythonhosted.org/packages/24/27/5719ffc37578efdb8a3722959cfa130e5a533aecbdabba55e912789fcf17/PyWebRunner-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "10e62daa80ab8eb2fc5ec32d0eb35133", "sha256": "aae06c67af4128c27dc055a61c32384a86735f47f94ed9398bb8636e0ad53071"}, "downloads": -1, "filename": "PyWebRunner-2.0.1.tar.gz", "has_sig": false, "md5_digest": "10e62daa80ab8eb2fc5ec32d0eb35133", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37563, "upload_time": "2017-10-08T17:43:42", "upload_time_iso_8601": "2017-10-08T17:43:42.745866Z", "url": "https://files.pythonhosted.org/packages/4d/17/11a734876dc88e50682b9954dc8257532f5e5dffddd3c30579251a411e5c/PyWebRunner-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "9846002e8d71a9d5f9b908b21f02a570", "sha256": "7fce316e4b714f01e9ff3b2aff872ed5ca3b4b27f9faef3ad635e00176a80319"}, "downloads": -1, "filename": "PyWebRunner-2.0.2.tar.gz", "has_sig": false, "md5_digest": "9846002e8d71a9d5f9b908b21f02a570", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37568, "upload_time": "2017-10-08T17:53:31", "upload_time_iso_8601": "2017-10-08T17:53:31.003353Z", "url": "https://files.pythonhosted.org/packages/f9/62/a8a0a95241930ae7a1270efc2282b7c341aae539d42403bbfd5b332c9d90/PyWebRunner-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "744308c8e5b3ed7a47911fcb97a7c7af", "sha256": "1b53915f99fbfeebd26a548af8f031cbc1bc01102b600e1ed8d6bc0efd55d6ca"}, "downloads": -1, "filename": "PyWebRunner-2.0.3.tar.gz", "has_sig": false, "md5_digest": "744308c8e5b3ed7a47911fcb97a7c7af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38910, "upload_time": "2017-11-13T19:10:18", "upload_time_iso_8601": "2017-11-13T19:10:18.647091Z", "url": "https://files.pythonhosted.org/packages/d1/88/06c8a3a00e24d861e28542d238dcbec38f7fc18f4cc82272dec41d23d415/PyWebRunner-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "3c2a0a701688bb26f50449a726df40ec", "sha256": "45e2bda52ae223a5aacb6d6f3def4255a1595af03fb587d7a40b4ad96f8ebb6a"}, "downloads": -1, "filename": "PyWebRunner-2.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3c2a0a701688bb26f50449a726df40ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35702, "upload_time": "2020-03-06T14:46:07", "upload_time_iso_8601": "2020-03-06T14:46:07.092332Z", "url": "https://files.pythonhosted.org/packages/46/5d/51adf02f08b146b8dbc44e77a61fe3c4df8b644e16e6ee8a71ef7ec7a2c8/PyWebRunner-2.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67725301601a72764a9a2cbdafcc91a8", "sha256": "fcda4c90bb5ec58e6ed2ef3c08054b1e9d18655540073972127ae740e1e329a6"}, "downloads": -1, "filename": "PyWebRunner-2.0.4.tar.gz", "has_sig": false, "md5_digest": "67725301601a72764a9a2cbdafcc91a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36911, "upload_time": "2020-03-06T14:46:08", "upload_time_iso_8601": "2020-03-06T14:46:08.797538Z", "url": "https://files.pythonhosted.org/packages/07/09/898f27bc3abf590a285350c92c930e33f10ab84133ddf2d5ea4b01ca96ff/PyWebRunner-2.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3c2a0a701688bb26f50449a726df40ec", "sha256": "45e2bda52ae223a5aacb6d6f3def4255a1595af03fb587d7a40b4ad96f8ebb6a"}, "downloads": -1, "filename": "PyWebRunner-2.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3c2a0a701688bb26f50449a726df40ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35702, "upload_time": "2020-03-06T14:46:07", "upload_time_iso_8601": "2020-03-06T14:46:07.092332Z", "url": "https://files.pythonhosted.org/packages/46/5d/51adf02f08b146b8dbc44e77a61fe3c4df8b644e16e6ee8a71ef7ec7a2c8/PyWebRunner-2.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67725301601a72764a9a2cbdafcc91a8", "sha256": "fcda4c90bb5ec58e6ed2ef3c08054b1e9d18655540073972127ae740e1e329a6"}, "downloads": -1, "filename": "PyWebRunner-2.0.4.tar.gz", "has_sig": false, "md5_digest": "67725301601a72764a9a2cbdafcc91a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36911, "upload_time": "2020-03-06T14:46:08", "upload_time_iso_8601": "2020-03-06T14:46:08.797538Z", "url": "https://files.pythonhosted.org/packages/07/09/898f27bc3abf590a285350c92c930e33f10ab84133ddf2d5ea4b01ca96ff/PyWebRunner-2.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:31 2020"}