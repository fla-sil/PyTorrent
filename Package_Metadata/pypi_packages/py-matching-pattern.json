{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# Python Pattern Matching\n\nInspired by [pampy](https://github.com/santinic/pampy) and [core.match](https://github.com/clojure/core.match), this is a pattern matching library for dynamic list of patterns.\n\nRight now it only supports matching lists of same sizes.\n\n## Usage\n\nImport the lib\n\n```python\nimport PatternMatchStore from py_matching_pattern\n```\n\nFirst you will add initialize a `PatternMatchStore` with a fixed size of keys to match (size of the list).\n\n```python\npmdb = PatternMatchStore(keysize=3)\n```\n\nAfter that you can add the patterns. Every value is valid match, including `None`.\n\nThe \"catch all\" value is `default` attribute of the instance.\n\n```python\n_ = pmdb.default\npmdb.put(keys=[\"a\",\"b\",\"c\"],value=1)\npmdb.put(keys=[\"a\",\"b\",\"b\"],value=2)\npmdb.put(keys=[\"a\",\"b\",_],value=3)\npmdb.put(keys=[\"a\",_,_],value=4)\npmdb.put(keys=[\"a\",None,\"c\"],value=5)\npmdb.put(keys=[\"a\",_,\"d\"],value=6)\n```\n\nThese patterns are staged for the DB. This is useful if you reload the patterns from another thread.\n\nTo make the pattern live, you commit it.\n\n```python\npmdb.commit()\n```\n\nNow you can finally start matching values:\n\n```python\npmdb.get(keys=[\"a\",\"b\",\"c\"])==1\npmdb.get(keys=[\"a\",\"b\",\"b\"])==2\npmdb.get(keys=[\"a\",\"b\",\"d\"])==3\npmdb.get(keys=[\"a\",\"c\",\"d\"])==4\npmdb.get(keys=[\"a\",None,\"c\"])==5\npmdb.get(keys=[\"a\",\"e\",\"d\"])==6\npmdb.get(keys=[\"e\",\"e\",\"e\"])==None\n```\n\nThe staged patterns are kept between commits, so you can add or override to it later.\n\nBut in case you want to clean it:\n\n```python\npmdb.clean()\n```\n\nIt can also raise an exception if not found, but by default it will return `None`:\n\n```python\npmdb = core.PatternMatchStore(keysize=3,raise_on_notfound=True)\npmdb.get(keys=[\"e\",\"e\",\"e\"]) # raise KeyNotFound\n```\n\n## License\n\nMIT\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/diogok/py_matching_pattern", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "py-matching-pattern", "package_url": "https://pypi.org/project/py-matching-pattern/", "platform": "", "project_url": "https://pypi.org/project/py-matching-pattern/", "project_urls": {"Homepage": "https://github.com/diogok/py_matching_pattern"}, "release_url": "https://pypi.org/project/py-matching-pattern/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Dynamic Pattern Matching Library", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python Pattern Matching</h1>\n<p>Inspired by <a href=\"https://github.com/santinic/pampy\" rel=\"nofollow\">pampy</a> and <a href=\"https://github.com/clojure/core.match\" rel=\"nofollow\">core.match</a>, this is a pattern matching library for dynamic list of patterns.</p>\n<p>Right now it only supports matching lists of same sizes.</p>\n<h2>Usage</h2>\n<p>Import the lib</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">PatternMatchStore</span> <span class=\"kn\">from</span> <span class=\"nn\">py_matching_pattern</span>\n</pre>\n<p>First you will add initialize a <code>PatternMatchStore</code> with a fixed size of keys to match (size of the list).</p>\n<pre><span class=\"n\">pmdb</span> <span class=\"o\">=</span> <span class=\"n\">PatternMatchStore</span><span class=\"p\">(</span><span class=\"n\">keysize</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p>After that you can add the patterns. Every value is valid match, including <code>None</code>.</p>\n<p>The \"catch all\" value is <code>default</code> attribute of the instance.</p>\n<pre><span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">default</span>\n<span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span><span class=\"s2\">\"c\"</span><span class=\"p\">],</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span><span class=\"s2\">\"b\"</span><span class=\"p\">],</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span><span class=\"n\">_</span><span class=\"p\">],</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"n\">_</span><span class=\"p\">],</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span><span class=\"kc\">None</span><span class=\"p\">,</span><span class=\"s2\">\"c\"</span><span class=\"p\">],</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"s2\">\"d\"</span><span class=\"p\">],</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n</pre>\n<p>These patterns are staged for the DB. This is useful if you reload the patterns from another thread.</p>\n<p>To make the pattern live, you commit it.</p>\n<pre><span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n</pre>\n<p>Now you can finally start matching values:</p>\n<pre><span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span><span class=\"s2\">\"c\"</span><span class=\"p\">])</span><span class=\"o\">==</span><span class=\"mi\">1</span>\n<span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span><span class=\"s2\">\"b\"</span><span class=\"p\">])</span><span class=\"o\">==</span><span class=\"mi\">2</span>\n<span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span><span class=\"s2\">\"d\"</span><span class=\"p\">])</span><span class=\"o\">==</span><span class=\"mi\">3</span>\n<span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span><span class=\"s2\">\"c\"</span><span class=\"p\">,</span><span class=\"s2\">\"d\"</span><span class=\"p\">])</span><span class=\"o\">==</span><span class=\"mi\">4</span>\n<span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span><span class=\"kc\">None</span><span class=\"p\">,</span><span class=\"s2\">\"c\"</span><span class=\"p\">])</span><span class=\"o\">==</span><span class=\"mi\">5</span>\n<span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span><span class=\"s2\">\"e\"</span><span class=\"p\">,</span><span class=\"s2\">\"d\"</span><span class=\"p\">])</span><span class=\"o\">==</span><span class=\"mi\">6</span>\n<span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"e\"</span><span class=\"p\">,</span><span class=\"s2\">\"e\"</span><span class=\"p\">,</span><span class=\"s2\">\"e\"</span><span class=\"p\">])</span><span class=\"o\">==</span><span class=\"kc\">None</span>\n</pre>\n<p>The staged patterns are kept between commits, so you can add or override to it later.</p>\n<p>But in case you want to clean it:</p>\n<pre><span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">()</span>\n</pre>\n<p>It can also raise an exception if not found, but by default it will return <code>None</code>:</p>\n<pre><span class=\"n\">pmdb</span> <span class=\"o\">=</span> <span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">PatternMatchStore</span><span class=\"p\">(</span><span class=\"n\">keysize</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"n\">raise_on_notfound</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">pmdb</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"e\"</span><span class=\"p\">,</span><span class=\"s2\">\"e\"</span><span class=\"p\">,</span><span class=\"s2\">\"e\"</span><span class=\"p\">])</span> <span class=\"c1\"># raise KeyNotFound</span>\n</pre>\n<h2>License</h2>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 6436897, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5317a490e4ef6b758c3a4fe349b7394e", "sha256": "30ed16a8e5f3b47fae715b53f4df64bb63e0c3cd05d6c6129f67f2cfe1aa2261"}, "downloads": -1, "filename": "py_matching_pattern-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5317a490e4ef6b758c3a4fe349b7394e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1905, "upload_time": "2019-12-08T22:24:33", "upload_time_iso_8601": "2019-12-08T22:24:33.016103Z", "url": "https://files.pythonhosted.org/packages/c8/49/67ad9ed349eb64a14fb90a95192c087cebe3f02178975d9c21b877bd4fec/py_matching_pattern-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "419e74935f96618efcb634a0a83c9c31", "sha256": "ba1e422c05434417a6148b01d52c924cc63662787883f04c0599cbd433a101a5"}, "downloads": -1, "filename": "py_matching_pattern-0.0.1.tar.gz", "has_sig": false, "md5_digest": "419e74935f96618efcb634a0a83c9c31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1867, "upload_time": "2019-12-08T22:24:35", "upload_time_iso_8601": "2019-12-08T22:24:35.419898Z", "url": "https://files.pythonhosted.org/packages/7d/e7/8bf0b6e6ed7c512e0e425a95f63f96004e4abc33c31bcfc8d15b43f41c84/py_matching_pattern-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "b80f15076cb6eeeba60a3cc174b42818", "sha256": "c621d92a05b1253d15393f60dca167c54d39056eafadff2b41b5af1ed53f9556"}, "downloads": -1, "filename": "py_matching_pattern-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b80f15076cb6eeeba60a3cc174b42818", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2069, "upload_time": "2019-12-12T23:49:55", "upload_time_iso_8601": "2019-12-12T23:49:55.708506Z", "url": "https://files.pythonhosted.org/packages/bb/ad/9a6ee3e2a106ac8ebecc75076c1f6fbfc35381e8057673995ec6415212bf/py_matching_pattern-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bea76aa8bc0b260d814412cf97e56644", "sha256": "a40c3663d8c24e7822961315ee3b377499c9c2ec022e0e2d6c1eb7d73af63ebf"}, "downloads": -1, "filename": "py_matching_pattern-0.0.2.tar.gz", "has_sig": false, "md5_digest": "bea76aa8bc0b260d814412cf97e56644", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2117, "upload_time": "2019-12-12T23:49:57", "upload_time_iso_8601": "2019-12-12T23:49:57.358776Z", "url": "https://files.pythonhosted.org/packages/70/18/d2c17c37dbf6f1b75a42b2a559cc39870260ec778db5d7d94cefc7cb77f3/py_matching_pattern-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "f5c6b3c1d09cfd7335b0f2a35c3afef0", "sha256": "dfd91641f8ad6eaa0121075806d2f3ddf139c1c708e7a3a36c6ae935808bf3c7"}, "downloads": -1, "filename": "py_matching_pattern-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f5c6b3c1d09cfd7335b0f2a35c3afef0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3009, "upload_time": "2020-01-11T16:37:51", "upload_time_iso_8601": "2020-01-11T16:37:51.133961Z", "url": "https://files.pythonhosted.org/packages/e3/fd/528c992377fa48a5f48fe7ea0d3e56205b0d2db0c84b843a8e9e8b9cd5b3/py_matching_pattern-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9686e86aedf3072a5e79a5fc77ae612", "sha256": "943b3fb49bbc29535a3746b1237626fb4c3f64b35ef1840988ee7c269b901de0"}, "downloads": -1, "filename": "py_matching_pattern-0.0.3.tar.gz", "has_sig": false, "md5_digest": "d9686e86aedf3072a5e79a5fc77ae612", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2753, "upload_time": "2020-01-11T16:37:53", "upload_time_iso_8601": "2020-01-11T16:37:53.730784Z", "url": "https://files.pythonhosted.org/packages/f4/37/777ee10a7424ed71222934f34b7b57a321722e17a20a63b47b06bd8e8bfa/py_matching_pattern-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f5c6b3c1d09cfd7335b0f2a35c3afef0", "sha256": "dfd91641f8ad6eaa0121075806d2f3ddf139c1c708e7a3a36c6ae935808bf3c7"}, "downloads": -1, "filename": "py_matching_pattern-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f5c6b3c1d09cfd7335b0f2a35c3afef0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3009, "upload_time": "2020-01-11T16:37:51", "upload_time_iso_8601": "2020-01-11T16:37:51.133961Z", "url": "https://files.pythonhosted.org/packages/e3/fd/528c992377fa48a5f48fe7ea0d3e56205b0d2db0c84b843a8e9e8b9cd5b3/py_matching_pattern-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9686e86aedf3072a5e79a5fc77ae612", "sha256": "943b3fb49bbc29535a3746b1237626fb4c3f64b35ef1840988ee7c269b901de0"}, "downloads": -1, "filename": "py_matching_pattern-0.0.3.tar.gz", "has_sig": false, "md5_digest": "d9686e86aedf3072a5e79a5fc77ae612", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2753, "upload_time": "2020-01-11T16:37:53", "upload_time_iso_8601": "2020-01-11T16:37:53.730784Z", "url": "https://files.pythonhosted.org/packages/f4/37/777ee10a7424ed71222934f34b7b57a321722e17a20a63b47b06bd8e8bfa/py_matching_pattern-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:29 2020"}