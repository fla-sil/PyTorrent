{"info": {"author": "Greenmon", "author_email": "greenmon@kaist.ac.kr", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Search Based Test Input Generation\n\nA Python implementation of automated test data generation.\n\nCurrently, it works only for the subset of Python functions satisfying these conditions:\n\n- takes only integer arguments\n\n- had only integer type local variables\n\n- contains predicates that only involve relational operators (==, !=, <, >, <=, >=), integer variables, and calls to functions with integer return type\n\n\n## Run from Source\n\nIf directly clone the source and run package, run below command on project root directory.\n\n```\npython -m covgen <file>\n```\n\nAdditional options can be given (you can remain it as default value):\n\n```\n--function (-f) <target_function_name> \n\n--method (-m) <avm or hillclimbing> \n\n--retry-count (-r) <retry count> \n\n--int-min <minimum value of initial arguments for heuristic methods> \n\n--int-max <maximum value of initial arguments for heuristic methods>\n```\n\nFor example:\n```\npython -m covgen target/triangle.py -m avm --retry-count 10 --int-min 0 --int-max 1000\n```\n\nprints out list of generated inputs that cover detected branches,\nfrom each function defined in the target file.\n\n\n## Using pip\n\nThis input generator package is available on PyPI of name `covgen`. \n\nAfter installing the dependencies:\n\n```\npip install anytree\npip install astor\n```\n\nYou can install this package with below command:\n\n```\npip install covgen\n```\n\nThen run it anywhere with your python.\n\n```\npython -m covgen <target file location>\n```\n\nOr, you can build your own program using generated inputs.\n\n```python\nfrom covgen.run.inputgenerator import InputGenerator\n\ngenerator = InputGenerator('target/triangle.py', function_name='triangle')\n\ninputs = generator.generate_all_inputs()\n\nprint(inputs['triangle'])\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/greenmonn/sbst-input-generator", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "covgen", "package_url": "https://pypi.org/project/covgen/", "platform": "", "project_url": "https://pypi.org/project/covgen/", "project_urls": {"Homepage": "https://github.com/greenmonn/sbst-input-generator"}, "release_url": "https://pypi.org/project/covgen/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "Tool for search based test data generation", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Search Based Test Input Generation</h1>\n<p>A Python implementation of automated test data generation.</p>\n<p>Currently, it works only for the subset of Python functions satisfying these conditions:</p>\n<ul>\n<li>\n<p>takes only integer arguments</p>\n</li>\n<li>\n<p>had only integer type local variables</p>\n</li>\n<li>\n<p>contains predicates that only involve relational operators (==, !=, &lt;, &gt;, &lt;=, &gt;=), integer variables, and calls to functions with integer return type</p>\n</li>\n</ul>\n<h2>Run from Source</h2>\n<p>If directly clone the source and run package, run below command on project root directory.</p>\n<pre><code>python -m covgen &lt;file&gt;\n</code></pre>\n<p>Additional options can be given (you can remain it as default value):</p>\n<pre><code>--function (-f) &lt;target_function_name&gt; \n\n--method (-m) &lt;avm or hillclimbing&gt; \n\n--retry-count (-r) &lt;retry count&gt; \n\n--int-min &lt;minimum value of initial arguments for heuristic methods&gt; \n\n--int-max &lt;maximum value of initial arguments for heuristic methods&gt;\n</code></pre>\n<p>For example:</p>\n<pre><code>python -m covgen target/triangle.py -m avm --retry-count 10 --int-min 0 --int-max 1000\n</code></pre>\n<p>prints out list of generated inputs that cover detected branches,\nfrom each function defined in the target file.</p>\n<h2>Using pip</h2>\n<p>This input generator package is available on PyPI of name <code>covgen</code>.</p>\n<p>After installing the dependencies:</p>\n<pre><code>pip install anytree\npip install astor\n</code></pre>\n<p>You can install this package with below command:</p>\n<pre><code>pip install covgen\n</code></pre>\n<p>Then run it anywhere with your python.</p>\n<pre><code>python -m covgen &lt;target file location&gt;\n</code></pre>\n<p>Or, you can build your own program using generated inputs.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">covgen.run.inputgenerator</span> <span class=\"kn\">import</span> <span class=\"n\">InputGenerator</span>\n\n<span class=\"n\">generator</span> <span class=\"o\">=</span> <span class=\"n\">InputGenerator</span><span class=\"p\">(</span><span class=\"s1\">'target/triangle.py'</span><span class=\"p\">,</span> <span class=\"n\">function_name</span><span class=\"o\">=</span><span class=\"s1\">'triangle'</span><span class=\"p\">)</span>\n\n<span class=\"n\">inputs</span> <span class=\"o\">=</span> <span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">generate_all_inputs</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"p\">[</span><span class=\"s1\">'triangle'</span><span class=\"p\">])</span>\n</pre>\n\n          </div>"}, "last_serial": 5266277, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "12e9cffbea9b79112e12fbfbc04b7b4d", "sha256": "2bc2f28646fb1d126a474150a73b309b54dee042c1e55f292114aa5b59d891d9"}, "downloads": -1, "filename": "covgen-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "12e9cffbea9b79112e12fbfbc04b7b4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14609, "upload_time": "2019-05-14T08:21:18", "upload_time_iso_8601": "2019-05-14T08:21:18.880764Z", "url": "https://files.pythonhosted.org/packages/1f/ca/ccce68795d5b5b4b2fa4c3150ee3492cb4c7ff4ceba6919cfe1f13f7b4b5/covgen-0.0.4-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "12e9cffbea9b79112e12fbfbc04b7b4d", "sha256": "2bc2f28646fb1d126a474150a73b309b54dee042c1e55f292114aa5b59d891d9"}, "downloads": -1, "filename": "covgen-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "12e9cffbea9b79112e12fbfbc04b7b4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14609, "upload_time": "2019-05-14T08:21:18", "upload_time_iso_8601": "2019-05-14T08:21:18.880764Z", "url": "https://files.pythonhosted.org/packages/1f/ca/ccce68795d5b5b4b2fa4c3150ee3492cb4c7ff4ceba6919cfe1f13f7b4b5/covgen-0.0.4-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:42:46 2020"}