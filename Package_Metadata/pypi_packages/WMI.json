{"info": {"author": "Tim Golden", "author_email": "mail@timgolden.me.uk", "bugtrack_url": null, "classifiers": [], "description": "WMI - Windows Management Instrumentation\n========================================\n\nWhat is it?\n-----------\n\nWindows Management Instrumentation (WMI) is Microsoft's implementation of\nWeb-Based Enterprise Management (WBEM), an industry initiative to provide\na Common Information Model (CIM) for pretty much any information about a\ncomputer system.\n\nThe Python WMI module is a lightweight wrapper on top of the pywin32\nextensions, and hides some of the messy plumbing needed to get Python to\ntalk to the WMI API. It's pure Python and has been tested against all\nversions of Python from 2.5 to 3.4. It should work with any recent\nversion of pywin32.\n\n\nWhere do I get it?\n------------------\n\n* **PyPI**: https://pypi.python.org/pypi/WMI/\n* **Github**: https://github.com/tjguk/wmi\n\n\nHow do I install it?\n--------------------\n\n::\n\n    pip install wmi\n\n\nHow do I use it?\n----------------\n\nHave a look at the `tutorial` or the `cookbook`. As a quick\ntaster, try this, to find all Automatic services which are not running\nand offer the option to restart each one::\n\n    import wmi\n\n    c = wmi.WMI()\n    for s in c.Win32_Service(StartMode=\"Auto\", State=\"Stopped\"):\n        if raw_input(\"Restart %s? \" % s.Caption).upper() == \"Y\":\n            s.StartService()\n\nWhat's Changed?\n---------------\n\nSee the `changes` document\n\nCopyright & License?\n--------------------\n\n* Copyright Tim Golden <mail@timgolden.me.uk> 2003 - 2015\n\n* Licensed under the (GPL-compatible) MIT License:\n  http://www.opensource.org/licenses/mit-license.php\n\nPrerequisites\n-------------\n\nIf you're running a recent Python (2.5+) on a recent Windows (2k, 2k3, 2012, XP, Vista, 7, 8.x)\nand you have Mark Hammond's win32 extensions installed, you're probably\nup-and-running already. Otherwise...\n\n\nPython\n~~~~~~\nhttp://www.python.org/\n\npywin32 (was win32all)\n~~~~~~~~~~~~~~~~~~~~~~\nhttp://sourceforge.net/projects/pywin32/files/\n\nSpecifically, builds 154/155 fixed a problem which affected the WMI\nmoniker construction. You can still work without this fix, but some\nmore complex monikers will fail. (The current build is 219 so you're\nprobably ok unless you have some very stringent backwards-compatible\nrequirement).\n\nmakepy\n~~~~~~\n(NB my own experience over several systems is that this\nstep isn't necessary. However, if you have problems...)\nYou may have to compile makepy support for some typelibs. The following\nare reported to be significant:\n\n* Microsoft WMI Scripting Library\n* WMI ADSI Extension Type Library\n* WMICntl Type Library\n\nIf you've not done this before, start the PythonWin environment, select\nTools > Com Makepy utility from the menu, select the library by name, and\nclick [OK].\n\n\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://timgolden.me.uk/python/wmi.html", "keywords": "", "license": "http://www.opensource.org/licenses/mit-license.php", "maintainer": "", "maintainer_email": "", "name": "WMI", "package_url": "https://pypi.org/project/WMI/", "platform": "", "project_url": "https://pypi.org/project/WMI/", "project_urls": {"Homepage": "http://timgolden.me.uk/python/wmi.html"}, "release_url": "https://pypi.org/project/WMI/1.5.1/", "requires_dist": ["pywin32", "pytest ; extra == 'all'", "wheel ; extra == 'all'", "twine ; extra == 'all'", "sphinx ; extra == 'all'", "pytest ; extra == 'dev'", "sphinx ; extra == 'dev'", "wheel ; extra == 'dev'", "twine ; extra == 'dev'", "sphinx ; extra == 'docs'", "wheel ; extra == 'package'", "twine ; extra == 'package'", "pytest ; extra == 'tests'"], "requires_python": "", "summary": "Windows Management Instrumentation", "version": "1.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-is-it\">\n<h2>What is it?</h2>\n<p>Windows Management Instrumentation (WMI) is Microsoft\u2019s implementation of\nWeb-Based Enterprise Management (WBEM), an industry initiative to provide\na Common Information Model (CIM) for pretty much any information about a\ncomputer system.</p>\n<p>The Python WMI module is a lightweight wrapper on top of the pywin32\nextensions, and hides some of the messy plumbing needed to get Python to\ntalk to the WMI API. It\u2019s pure Python and has been tested against all\nversions of Python from 2.5 to 3.4. It should work with any recent\nversion of pywin32.</p>\n</div>\n<div id=\"where-do-i-get-it\">\n<h2>Where do I get it?</h2>\n<ul>\n<li><strong>PyPI</strong>: <a href=\"https://pypi.python.org/pypi/WMI/\" rel=\"nofollow\">https://pypi.python.org/pypi/WMI/</a></li>\n<li><strong>Github</strong>: <a href=\"https://github.com/tjguk/wmi\" rel=\"nofollow\">https://github.com/tjguk/wmi</a></li>\n</ul>\n</div>\n<div id=\"how-do-i-install-it\">\n<h2>How do I install it?</h2>\n<pre>pip install wmi\n</pre>\n</div>\n<div id=\"how-do-i-use-it\">\n<h2>How do I use it?</h2>\n<p>Have a look at the <cite>tutorial</cite> or the <cite>cookbook</cite>. As a quick\ntaster, try this, to find all Automatic services which are not running\nand offer the option to restart each one:</p>\n<pre>import wmi\n\nc = wmi.WMI()\nfor s in c.Win32_Service(StartMode=\"Auto\", State=\"Stopped\"):\n    if raw_input(\"Restart %s? \" % s.Caption).upper() == \"Y\":\n        s.StartService()\n</pre>\n</div>\n<div id=\"what-s-changed\">\n<h2>What\u2019s Changed?</h2>\n<p>See the <cite>changes</cite> document</p>\n</div>\n<div id=\"copyright-license\">\n<h2>Copyright &amp; License?</h2>\n<ul>\n<li>Copyright Tim Golden &lt;<a href=\"mailto:mail%40timgolden.me.uk\">mail<span>@</span>timgolden<span>.</span>me<span>.</span>uk</a>&gt; 2003 - 2015</li>\n<li>Licensed under the (GPL-compatible) MIT License:\n<a href=\"http://www.opensource.org/licenses/mit-license.php\" rel=\"nofollow\">http://www.opensource.org/licenses/mit-license.php</a></li>\n</ul>\n</div>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<p>If you\u2019re running a recent Python (2.5+) on a recent Windows (2k, 2k3, 2012, XP, Vista, 7, 8.x)\nand you have Mark Hammond\u2019s win32 extensions installed, you\u2019re probably\nup-and-running already. Otherwise\u2026</p>\n<div id=\"python\">\n<h3>Python</h3>\n<p><a href=\"http://www.python.org/\" rel=\"nofollow\">http://www.python.org/</a></p>\n</div>\n<div id=\"pywin32-was-win32all\">\n<h3>pywin32 (was win32all)</h3>\n<p><a href=\"http://sourceforge.net/projects/pywin32/files/\" rel=\"nofollow\">http://sourceforge.net/projects/pywin32/files/</a></p>\n<p>Specifically, builds 154/155 fixed a problem which affected the WMI\nmoniker construction. You can still work without this fix, but some\nmore complex monikers will fail. (The current build is 219 so you\u2019re\nprobably ok unless you have some very stringent backwards-compatible\nrequirement).</p>\n</div>\n<div id=\"makepy\">\n<h3>makepy</h3>\n<p>(NB my own experience over several systems is that this\nstep isn\u2019t necessary. However, if you have problems\u2026)\nYou may have to compile makepy support for some typelibs. The following\nare reported to be significant:</p>\n<ul>\n<li>Microsoft WMI Scripting Library</li>\n<li>WMI ADSI Extension Type Library</li>\n<li>WMICntl Type Library</li>\n</ul>\n<p>If you\u2019ve not done this before, start the PythonWin environment, select\nTools &gt; Com Makepy utility from the menu, select the library by name, and\nclick [OK].</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7118131, "releases": {"0.3": [], "0.5": [], "0.6": [], "1.0": [], "1.0rc1": [], "1.0rc3": [], "1.0rc4": [], "1.1": [], "1.2": [], "1.3": [], "1.3.2": [], "1.4.6": [], "1.4.7": [], "1.4.8": [{"comment_text": "", "digests": {"md5": "d360cbf8c68bd17dac622bf1e531c125", "sha256": "e9d7fb0278b0a8365d363fcbeb63832ad3991441d89e06f6d7b48d435af6ee26"}, "downloads": -1, "filename": "WMI-1.4.8.win32.exe", "has_sig": false, "md5_digest": "d360cbf8c68bd17dac622bf1e531c125", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 221726, "upload_time": "2011-04-12T16:46:10", "upload_time_iso_8601": "2011-04-12T16:46:10.868132Z", "url": "https://files.pythonhosted.org/packages/e8/b4/cd81e6120b077e8f6fa28d71d0eedc2e46ffd5a2549a4318868b841d6292/WMI-1.4.8.win32.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "32deb54b8268ec26587a36e5fcb791ac", "sha256": "15beee6238f366496840f6c8e584216a876578a89e9a0f73a9d4630e7e216c32"}, "downloads": -1, "filename": "WMI-1.4.8.zip", "has_sig": false, "md5_digest": "32deb54b8268ec26587a36e5fcb791ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25674, "upload_time": "2011-04-12T16:46:10", "upload_time_iso_8601": "2011-04-12T16:46:10.114506Z", "url": "https://files.pythonhosted.org/packages/f7/50/082055d3a6fe0afdfa23ad142c15fc91c016b6039395f160b4301b905766/WMI-1.4.8.zip", "yanked": false}], "1.4.9": [{"comment_text": "", "digests": {"md5": "31ef47dc10ff13a81a0cb8e6a98a0819", "sha256": "b1c57a5c7e27596736026ec7dd9a7c5318dad8248e7638f40c60c33cb33ac935"}, "downloads": -1, "filename": "WMI-1.4.9.win32.exe", "has_sig": false, "md5_digest": "31ef47dc10ff13a81a0cb8e6a98a0819", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 225679, "upload_time": "2011-04-13T10:41:22", "upload_time_iso_8601": "2011-04-13T10:41:22.289016Z", "url": "https://files.pythonhosted.org/packages/f6/6b/3c15ef280e2a6244ff0635f763b86fdc113654afc1192fcea8a0109f47f8/WMI-1.4.9.win32.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "e883e155ed5a63b742686816ec762053", "sha256": "192ccfad3d7bb3ef43116d753f4d5cf85c0a6b738f832cc131e928fd93cdd400"}, "downloads": -1, "filename": "WMI-1.4.9.zip", "has_sig": false, "md5_digest": "e883e155ed5a63b742686816ec762053", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26942, "upload_time": "2011-04-13T10:41:21", "upload_time_iso_8601": "2011-04-13T10:41:21.521193Z", "url": "https://files.pythonhosted.org/packages/03/2d/cbf13257c0115bef37b6b743758411cec70c565405cbd08d0f7059bc715f/WMI-1.4.9.zip", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "718e6008e60b5508190cadf4eb7af7f7", "sha256": "cddedfbf850a75eea1664fa572e841df858bffc51072051e0ebd46471c8c31b4"}, "downloads": -1, "filename": "WMI-1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "718e6008e60b5508190cadf4eb7af7f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28867, "upload_time": "2020-04-26T20:13:12", "upload_time_iso_8601": "2020-04-26T20:13:12.931152Z", "url": "https://files.pythonhosted.org/packages/85/3a/5f1fcc9449e1f418eac21a20a601d8e4a5fe937e0680d945cc4304fc3eda/WMI-1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e5deffd973f12df41466240fc3f9ea4", "sha256": "cd658bb98567f8c147233143b4a082169cac2cc07f410e69499c55ae98bb6c92"}, "downloads": -1, "filename": "WMI-1.5.tar.gz", "has_sig": false, "md5_digest": "9e5deffd973f12df41466240fc3f9ea4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26234, "upload_time": "2020-04-26T20:13:14", "upload_time_iso_8601": "2020-04-26T20:13:14.387141Z", "url": "https://files.pythonhosted.org/packages/cd/4e/2e1112db249db0f2f5e9d43c261d6698a478793c49dfd905251823946b19/WMI-1.5.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "a584abbab7941b9b847c1b1d346a76a3", "sha256": "1d6b085e5c445141c475476000b661f60fff1aaa19f76bf82b7abb92e0ff4942"}, "downloads": -1, "filename": "WMI-1.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a584abbab7941b9b847c1b1d346a76a3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28912, "upload_time": "2020-04-28T08:22:56", "upload_time_iso_8601": "2020-04-28T08:22:56.055746Z", "url": "https://files.pythonhosted.org/packages/ee/b9/a80d1ed4d115dac8e2ac08d16af046a77ab58e3d186e22395bf2add24090/WMI-1.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "25dd34f962186508be4fe728eb05b80a", "sha256": "b6a6be5711b1b6c8d55bda7a8befd75c48c12b770b9d227d31c1737dbf0d40a6"}, "downloads": -1, "filename": "WMI-1.5.1.tar.gz", "has_sig": false, "md5_digest": "25dd34f962186508be4fe728eb05b80a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26254, "upload_time": "2020-04-28T08:22:58", "upload_time_iso_8601": "2020-04-28T08:22:58.096738Z", "url": "https://files.pythonhosted.org/packages/d4/66/6364deb0a03415f96c66803d8c4379f808f2401da3bdb183348487b10510/WMI-1.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a584abbab7941b9b847c1b1d346a76a3", "sha256": "1d6b085e5c445141c475476000b661f60fff1aaa19f76bf82b7abb92e0ff4942"}, "downloads": -1, "filename": "WMI-1.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a584abbab7941b9b847c1b1d346a76a3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28912, "upload_time": "2020-04-28T08:22:56", "upload_time_iso_8601": "2020-04-28T08:22:56.055746Z", "url": "https://files.pythonhosted.org/packages/ee/b9/a80d1ed4d115dac8e2ac08d16af046a77ab58e3d186e22395bf2add24090/WMI-1.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "25dd34f962186508be4fe728eb05b80a", "sha256": "b6a6be5711b1b6c8d55bda7a8befd75c48c12b770b9d227d31c1737dbf0d40a6"}, "downloads": -1, "filename": "WMI-1.5.1.tar.gz", "has_sig": false, "md5_digest": "25dd34f962186508be4fe728eb05b80a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26254, "upload_time": "2020-04-28T08:22:58", "upload_time_iso_8601": "2020-04-28T08:22:58.096738Z", "url": "https://files.pythonhosted.org/packages/d4/66/6364deb0a03415f96c66803d8c4379f808f2401da3bdb183348487b10510/WMI-1.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:23 2020"}