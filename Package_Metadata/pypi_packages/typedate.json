{"info": {"author": "righ", "author_email": "righ.m9@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Topic :: Software Development"], "description": ".. image:: https://circleci.com/gh/righ/typedate.svg?style=svg\n    :target: https://circleci.com/gh/righ/typedate\n\nRequirements\n============\n\n- Python 2.7\n- Python 3.3 or later\n\n- Tested with 2.7, 3.7\n\nInstallation\n============\n\n.. code-block:: sh\n\n  $ pip install typedate\n\nTypes\n=====\nThis library provides 3 classes parsing string, and outputting object related to time.\n\n:TypeDate: Date (and time) parser parses string. Time format, timezone and timedelta are specified when it is made.\n:TypeDelta: Delta parser parses numbers with time units separeted a space. It will be interpreted as delta function arguments.\n:TypeZone: Timezone parser parses timezone string. \n\nUsage\n=====\nFor example, use the classes with `argparse` as follows:\n\n.. code-block:: python\n\n  #!/usr/bin/env python\n  from datetime import datetime\n  from typedate import TypeDate, TypeDelta, TypeZone\n  \n  if __name__ == '__main__':\n      import argparse\n      parser = argparse.ArgumentParser()\n\n      # datetime parsing\n      parser.add_argument(\"--datetime1\", type=TypeDate('%Y%m%d'))\n      parser.add_argument(\"--datetime2\", type=TypeDate(timezone='Asia/Tokyo'))\n      parser.add_argument(\"--datetime3\", type=TypeDate(timezone='+09:00'))\n      parser.add_argument(\"--datetime4\", type=TypeDate(timedelta='1years -2months 3days 4hours 5minute 6seconds'))\n\n      # timezone parsing\n      parser.add_argument(\"--timezone1\", type=TypeZone())\n      parser.add_argument(\"--timezone2\", type=TypeZone())\n      parser.add_argument(\"--timezone3\", type=TypeZone(callback=lambda tz: datetime(2018, 7, 14, tzinfo=tz)))\n\n      # timedelta parsing\n      ## if python-dateutil installed, used automatically dateutil.relativedelta.relativedelta else datetime.timedelta.\n      parser.add_argument(\"--defaultdelta\", type=TypeDelta())\n\n      ## it can be specified by cls argument.\n      from datetime import timedelta\n      from dateutil.relativedelta import relativedelta\n      parser.add_argument(\"--timedelta\", type=TypeDelta(cls=timedelta))\n      parser.add_argument(\"--relativedelta\", type=TypeDelta(cls=relativedelta))\n\n      args = parser.parse_args()\n      print('datetime1:\\t', args.datetime1, type(args.datetime1))\n      print('datetime2:\\t', args.datetime2, type(args.datetime2))\n      print('datetime3:\\t', args.datetime3, type(args.datetime3))\n      print('datetime4:\\t', args.datetime4, type(args.datetime4))\n\n      print('timezone1:\\t', args.timezone1, type(args.timezone1))\n      print('timezone2:\\t', args.timezone2, type(args.timezone2))\n      print('dt with tz3:\\t', args.timezone3, type(args.timezone3))\n\n      print('defaultdelta:\\t', args.defaultdelta, type(args.defaultdelta))\n      print('timedelta:\\t', args.timedelta, type(args.timedelta))\n      print('relativedelta:\\t', args.relativedelta, type(args.relativedelta))\n\nSaving a file like above as `command.py`, and execute it as follows.\n\n.. code-block:: sh\n\n  $ python command.py \\\n    --datetime1='19880522' \\\n    --datetime2='2016-01-01' \\\n    --datetime3='2016/01/01' \\\n    --datetime4='01/01 00:00 2016' \\\n    --timezone1='-0500' \\\n    --timezone2='Asia/Tokyo'  \\\n    --timezone3='04:00' \\\n    --defaultdelta='1years -2months 3days 4hours 5minutes 6seconds' \\\n    --timedelta='3days 4hours 5minutes 6seconds' \\\n    --relativedelta='1years -2months 3days 4hours 5minutes 6seconds'\n\n  datetime1:       1988-05-22 00:00:00 <class 'datetime.datetime'>\n  datetime2:       2016-01-01 00:00:00+09:00 <class 'datetime.datetime'>\n  datetime3:       2016-01-01 00:00:00+09:00 <class 'datetime.datetime'>\n  datetime4:       2016-11-04 04:05:06 <class 'datetime.datetime'>\n  timezone1:       -05:00 <class 'typedate.type.zone.TzInfo'>\n  timezone2:       Asia/Tokyo <class 'pytz.tzfile.Asia/Tokyo'>\n  dt with tz3:     2018-07-14 00:00:00+04:00 <class 'datetime.datetime'>\n  defaultdelta:    relativedelta(years=+1, months=-2, days=+3, hours=+4, minutes=+5, seconds=+6) <class 'dateutil.relativedelta.relativedelta'>\n  timedelta:       3 days, 4:05:06 <class 'datetime.timedelta'>\n  relativedelta:   relativedelta(years=+1, months=-2, days=+3, hours=+4, minutes=+5, seconds=+6) <class 'dateutil.relativedelta.relativedelta'>\n\nHistory\n==========\n1.1.x\n-----\nAdded a callback argument to each types. \n\nIt is able to return other values using originally value.\n\n1.0.x\n-----\n* first release", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/righ/typedate", "keywords": "argparse,date,datetime,timedelta,timezone", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "typedate", "package_url": "https://pypi.org/project/typedate/", "platform": "", "project_url": "https://pypi.org/project/typedate/", "project_urls": {"Homepage": "https://github.com/righ/typedate"}, "release_url": "https://pypi.org/project/typedate/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "Parsers related time for argparse", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://circleci.com/gh/righ/typedate\" rel=\"nofollow\"><img alt=\"https://circleci.com/gh/righ/typedate.svg?style=svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05b571b4c8730165fcb350826af6dbec715b6dcd/68747470733a2f2f636972636c6563692e636f6d2f67682f726967682f74797065646174652e7376673f7374796c653d737667\"></a>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 2.7</li>\n<li>Python 3.3 or later</li>\n<li>Tested with 2.7, 3.7</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install typedate\n</pre>\n</div>\n<div id=\"types\">\n<h2>Types</h2>\n<p>This library provides 3 classes parsing string, and outputting object related to time.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>TypeDate:</th><td>Date (and time) parser parses string. Time format, timezone and timedelta are specified when it is made.</td>\n</tr>\n<tr><th>TypeDelta:</th><td>Delta parser parses numbers with time units separeted a space. It will be interpreted as delta function arguments.</td>\n</tr>\n<tr><th>TypeZone:</th><td>Timezone parser parses timezone string.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>For example, use the classes with <cite>argparse</cite> as follows:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typedate</span> <span class=\"kn\">import</span> <span class=\"n\">TypeDate</span><span class=\"p\">,</span> <span class=\"n\">TypeDelta</span><span class=\"p\">,</span> <span class=\"n\">TypeZone</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># datetime parsing</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"--datetime1\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">TypeDate</span><span class=\"p\">(</span><span class=\"s1\">'%Y%m</span><span class=\"si\">%d</span><span class=\"s1\">'</span><span class=\"p\">))</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"--datetime2\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">TypeDate</span><span class=\"p\">(</span><span class=\"n\">timezone</span><span class=\"o\">=</span><span class=\"s1\">'Asia/Tokyo'</span><span class=\"p\">))</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"--datetime3\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">TypeDate</span><span class=\"p\">(</span><span class=\"n\">timezone</span><span class=\"o\">=</span><span class=\"s1\">'+09:00'</span><span class=\"p\">))</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"--datetime4\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">TypeDate</span><span class=\"p\">(</span><span class=\"n\">timedelta</span><span class=\"o\">=</span><span class=\"s1\">'1years -2months 3days 4hours 5minute 6seconds'</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># timezone parsing</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"--timezone1\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">TypeZone</span><span class=\"p\">())</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"--timezone2\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">TypeZone</span><span class=\"p\">())</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"--timezone3\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">TypeZone</span><span class=\"p\">(</span><span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tz</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">tz</span><span class=\"p\">)))</span>\n\n    <span class=\"c1\"># timedelta parsing</span>\n    <span class=\"c1\">## if python-dateutil installed, used automatically dateutil.relativedelta.relativedelta else datetime.timedelta.</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"--defaultdelta\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">TypeDelta</span><span class=\"p\">())</span>\n\n    <span class=\"c1\">## it can be specified by cls argument.</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">timedelta</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">dateutil.relativedelta</span> <span class=\"kn\">import</span> <span class=\"n\">relativedelta</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"--timedelta\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">TypeDelta</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"n\">timedelta</span><span class=\"p\">))</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"--relativedelta\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">TypeDelta</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"n\">relativedelta</span><span class=\"p\">))</span>\n\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'datetime1:</span><span class=\"se\">\\t</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">datetime1</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">datetime1</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'datetime2:</span><span class=\"se\">\\t</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">datetime2</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">datetime2</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'datetime3:</span><span class=\"se\">\\t</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">datetime3</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">datetime3</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'datetime4:</span><span class=\"se\">\\t</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">datetime4</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">datetime4</span><span class=\"p\">))</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'timezone1:</span><span class=\"se\">\\t</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">timezone1</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">timezone1</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'timezone2:</span><span class=\"se\">\\t</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">timezone2</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">timezone2</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'dt with tz3:</span><span class=\"se\">\\t</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">timezone3</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">timezone3</span><span class=\"p\">))</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'defaultdelta:</span><span class=\"se\">\\t</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">defaultdelta</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">defaultdelta</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'timedelta:</span><span class=\"se\">\\t</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'relativedelta:</span><span class=\"se\">\\t</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">relativedelta</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">relativedelta</span><span class=\"p\">))</span>\n</pre>\n<p>Saving a file like above as <cite>command.py</cite>, and execute it as follows.</p>\n<pre>$ python command.py <span class=\"se\">\\\n</span>  --datetime1<span class=\"o\">=</span><span class=\"s1\">'19880522'</span> <span class=\"se\">\\\n</span>  --datetime2<span class=\"o\">=</span><span class=\"s1\">'2016-01-01'</span> <span class=\"se\">\\\n</span>  --datetime3<span class=\"o\">=</span><span class=\"s1\">'2016/01/01'</span> <span class=\"se\">\\\n</span>  --datetime4<span class=\"o\">=</span><span class=\"s1\">'01/01 00:00 2016'</span> <span class=\"se\">\\\n</span>  --timezone1<span class=\"o\">=</span><span class=\"s1\">'-0500'</span> <span class=\"se\">\\\n</span>  --timezone2<span class=\"o\">=</span><span class=\"s1\">'Asia/Tokyo'</span>  <span class=\"se\">\\\n</span>  --timezone3<span class=\"o\">=</span><span class=\"s1\">'04:00'</span> <span class=\"se\">\\\n</span>  --defaultdelta<span class=\"o\">=</span><span class=\"s1\">'1years -2months 3days 4hours 5minutes 6seconds'</span> <span class=\"se\">\\\n</span>  --timedelta<span class=\"o\">=</span><span class=\"s1\">'3days 4hours 5minutes 6seconds'</span> <span class=\"se\">\\\n</span>  --relativedelta<span class=\"o\">=</span><span class=\"s1\">'1years -2months 3days 4hours 5minutes 6seconds'</span>\n\ndatetime1:       <span class=\"m\">1988</span>-05-22 <span class=\"m\">00</span>:00:00 &lt;class <span class=\"s1\">'datetime.datetime'</span>&gt;\ndatetime2:       <span class=\"m\">2016</span>-01-01 <span class=\"m\">00</span>:00:00+09:00 &lt;class <span class=\"s1\">'datetime.datetime'</span>&gt;\ndatetime3:       <span class=\"m\">2016</span>-01-01 <span class=\"m\">00</span>:00:00+09:00 &lt;class <span class=\"s1\">'datetime.datetime'</span>&gt;\ndatetime4:       <span class=\"m\">2016</span>-11-04 <span class=\"m\">04</span>:05:06 &lt;class <span class=\"s1\">'datetime.datetime'</span>&gt;\ntimezone1:       -05:00 &lt;class <span class=\"s1\">'typedate.type.zone.TzInfo'</span>&gt;\ntimezone2:       Asia/Tokyo &lt;class <span class=\"s1\">'pytz.tzfile.Asia/Tokyo'</span>&gt;\ndt with tz3:     <span class=\"m\">2018</span>-07-14 <span class=\"m\">00</span>:00:00+04:00 &lt;class <span class=\"s1\">'datetime.datetime'</span>&gt;\ndefaultdelta:    relativedelta<span class=\"o\">(</span><span class=\"nv\">years</span><span class=\"o\">=</span>+1, <span class=\"nv\">months</span><span class=\"o\">=</span>-2, <span class=\"nv\">days</span><span class=\"o\">=</span>+3, <span class=\"nv\">hours</span><span class=\"o\">=</span>+4, <span class=\"nv\">minutes</span><span class=\"o\">=</span>+5, <span class=\"nv\">seconds</span><span class=\"o\">=</span>+6<span class=\"o\">)</span> &lt;class <span class=\"s1\">'dateutil.relativedelta.relativedelta'</span>&gt;\ntimedelta:       <span class=\"m\">3</span> days, <span class=\"m\">4</span>:05:06 &lt;class <span class=\"s1\">'datetime.timedelta'</span>&gt;\nrelativedelta:   relativedelta<span class=\"o\">(</span><span class=\"nv\">years</span><span class=\"o\">=</span>+1, <span class=\"nv\">months</span><span class=\"o\">=</span>-2, <span class=\"nv\">days</span><span class=\"o\">=</span>+3, <span class=\"nv\">hours</span><span class=\"o\">=</span>+4, <span class=\"nv\">minutes</span><span class=\"o\">=</span>+5, <span class=\"nv\">seconds</span><span class=\"o\">=</span>+6<span class=\"o\">)</span> &lt;class <span class=\"s1\">'dateutil.relativedelta.relativedelta'</span>&gt;\n</pre>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"x\">\n<h3>1.1.x</h3>\n<p>Added a callback argument to each types.</p>\n<p>It is able to return other values using originally value.</p>\n</div>\n<div id=\"id1\">\n<h3>1.0.x</h3>\n<ul>\n<li>first release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4061534, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a4a921d4e5fdbc998a5a04c131730e3f", "sha256": "b5a13a81fb2c9c34fdd463020fe8f96920421d2b1db5dc817ee4c25f3d296c2a"}, "downloads": -1, "filename": "typedate-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a4a921d4e5fdbc998a5a04c131730e3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3934, "upload_time": "2016-05-05T06:48:50", "upload_time_iso_8601": "2016-05-05T06:48:50.679820Z", "url": "https://files.pythonhosted.org/packages/1e/ce/041a6cd8e2f06a996570bfea356fc3a9d26cbc26019184293b1a8d910ef9/typedate-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "739f796df606a9307ccafbc45143c4ed", "sha256": "372ce17fc9f73d20b547feb5b6d81b5ba994b40635d5d07d48d81a00991d7575"}, "downloads": -1, "filename": "typedate-1.0.1.tar.gz", "has_sig": false, "md5_digest": "739f796df606a9307ccafbc45143c4ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4100, "upload_time": "2018-07-13T17:31:21", "upload_time_iso_8601": "2018-07-13T17:31:21.415356Z", "url": "https://files.pythonhosted.org/packages/21/8a/810300596cd503e86a192cfdac3b39d02c69c5dadef2f8513199375e2d6f/typedate-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "00c39fb326673b373b8f38d182a64c4f", "sha256": "f1e4603c061a357620a51864d10d5fd6c544ae8f785e389f2e800f8c0e4e4e48"}, "downloads": -1, "filename": "typedate-1.1.0.tar.gz", "has_sig": false, "md5_digest": "00c39fb326673b373b8f38d182a64c4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4374, "upload_time": "2018-07-14T17:04:55", "upload_time_iso_8601": "2018-07-14T17:04:55.976390Z", "url": "https://files.pythonhosted.org/packages/ed/92/e1565749410ecd0dd42f9abe7c4b29b42c3c64cc3dfc5b153df66911dc30/typedate-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "dbe998cf8695f5592adf9f528be320ca", "sha256": "21d55dd01065203c7011a8caccd9414b4ee2059e084fb618e4535ba3547d8ad7"}, "downloads": -1, "filename": "typedate-1.1.1.tar.gz", "has_sig": false, "md5_digest": "dbe998cf8695f5592adf9f528be320ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4432, "upload_time": "2018-07-14T17:08:08", "upload_time_iso_8601": "2018-07-14T17:08:08.027801Z", "url": "https://files.pythonhosted.org/packages/f8/ee/3a5ba343c017c747915843fc61cef5464753a707f010f8ac0553c26e0434/typedate-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dbe998cf8695f5592adf9f528be320ca", "sha256": "21d55dd01065203c7011a8caccd9414b4ee2059e084fb618e4535ba3547d8ad7"}, "downloads": -1, "filename": "typedate-1.1.1.tar.gz", "has_sig": false, "md5_digest": "dbe998cf8695f5592adf9f528be320ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4432, "upload_time": "2018-07-14T17:08:08", "upload_time_iso_8601": "2018-07-14T17:08:08.027801Z", "url": "https://files.pythonhosted.org/packages/f8/ee/3a5ba343c017c747915843fc61cef5464753a707f010f8ac0553c26e0434/typedate-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:42:53 2020"}