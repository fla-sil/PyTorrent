{"info": {"author": "Silvio Luis", "author_email": "silviolleite@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.11", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "django-pwa\n==========\n\n|Build Status| |Maintainability| |codecov| |PyPI - Downloads| |PyPI -\nDownloads| |PyPI - Downloads|\n\nThis Django app turns your project into a `progressive web\napp <https://developers.google.com/web/progressive-web-apps/>`__.\nNavigating to your site on an Android phone will prompt you to add the\napp to your home screen.\n\n.. figure:: https://github.com/silviolleite/django-pwa/raw/master/images/screenshot1.png\n   :alt: Prompt for install\n\n   Prompt for install\n\nLaunching the app from your home screen will display your app `without\nbrowser\nchrome <https://github.com/silviolleite/django-pwa/raw/master/images/screenshot2.png>`__.\nAs such, it\u2019s critical that your application provides all navigation\nwithin the HTML (no reliance on the browser back or forward button).\n\nRequirements\n============\n\nProgressive Web Apps require HTTPS unless being served from localhost.\nIf you\u2019re not already using HTTPS on your site, check out `Let\u2019s\nEncrypt <https://letsencrypt.org/>`__ and\n`ZeroSSL <https://zerossl.com/>`__.\n\nInstallation\n============\n\nInstall from PyPI:\n\n::\n\n   pip install django-pwa\n\nConfiguration\n=============\n\nAdd ``pwa`` to your list of ``INSTALLED_APPS`` in settings.py:\n\n.. code:: python\n\n   INSTALLED_APPS = [\n       ...\n       'pwa',\n       ...\n   ]\n\nDefine STATICFILES_DIRS for your custom PWA_APP_ICONS\n\n.. code:: python\n\n   STATICFILES_DIRS = [\n       os.path.join(BASE_DIR, 'static'),\n   ]\n\nConfigure your app name, description, icons and splash screen images in\nsettings.py:\n\n.. code:: python\n\n\n   PWA_APP_NAME = 'My App'\n   PWA_APP_DESCRIPTION = \"My app description\"\n   PWA_APP_THEME_COLOR = '#0A0302'\n   PWA_APP_BACKGROUND_COLOR = '#ffffff'\n   PWA_APP_DISPLAY = 'standalone'\n   PWA_APP_SCOPE = '/'\n   PWA_APP_ORIENTATION = 'any'\n   PWA_APP_START_URL = '/'\n   PWA_APP_ICONS = [\n       {\n           'src': '/static/images/my_app_icon.png',\n           'sizes': '160x160'\n       }\n   ]\n   PWA_APP_ICONS_APPLE = [\n       {\n           'src': '/static/images/my_apple_icon.png',\n           'sizes': '160x160'\n       }\n   ]\n   PWA_APP_SPLASH_SCREEN = [\n       {\n           'src': '/static/images/icons/splash-640x1136.png',\n           'media': '(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)'\n       }\n   ]\n   PWA_APP_DIR = 'ltr'\n   PWA_APP_LANG = 'en-US'\n\nShow console.log\n^^^^^^^^^^^^^^^^\n\nSet the ``PWA_APP_DEBUG_MODE = False`` to disable the the\n``console.log`` on browser.\n\nAll settings are optional, and the app will work fine with its internal\ndefaults. Highly recommend setting at least ``PWA_APP_NAME``,\n``PWA_APP_DESCRIPTION``, ``PWA_APP_ICONS`` and\n``PWA_APP_SPLASH_SCREEN``.\n\nAdd the progressive web app URLs to urls.py:\n\n.. code:: python\n\n   from django.urls import url, include\n\n   urlpatterns = [\n       ...\n       url('', include('pwa.urls')),  # You MUST use an empty string as the URL prefix\n       ...\n   ]\n\nInject the required meta tags in your base.html (or wherever your HTML\n<head> is defined):\n\n.. code:: html\n\n   {% load pwa %}\n\n   <head>\n       ...\n       {% progressive_web_app_meta %}\n       ...\n   </head>\n\nTroubleshooting\n===============\n\nWhile running the Django test server:\n\n1. Verify that ``/manifest.json`` is being served\n2. Verify that ``/serviceworker.js`` is being served\n3. Verify that ``/offline`` is being served\n4. Use the Application tab in the Chrome Developer Tools to verify the\n   progressive web app is configured correctly.\n5. Use the \u201cAdd to homescreen\u201d link on the Application Tab to verify you\n   can add the app successfully.\n\nThe Service Worker\n==================\n\nBy default, the service worker implemented by this app is:\n\n.. code:: js\n\n   // Base Service Worker implementation.  To use your own Service Worker, set the PWA_SERVICE_WORKER_PATH variable in settings.py\n\n   var staticCacheName = \"django-pwa-v\" + new Date().getTime();\n   var filesToCache = [\n       '/offline',\n       '/css/django-pwa-app.css',\n       '/images/icons/icon-72x72.png',\n       '/images/icons/icon-96x96.png',\n       '/images/icons/icon-128x128.png',\n       '/images/icons/icon-144x144.png',\n       '/images/icons/icon-152x152.png',\n       '/images/icons/icon-192x192.png',\n       '/images/icons/icon-384x384.png',\n       '/images/icons/icon-512x512.png',\n       '/static/images/icons/splash-640x1136.png',\n       '/static/images/icons/splash-750x1334.png',\n       '/static/images/icons/splash-1242x2208.png',\n       '/static/images/icons/splash-1125x2436.png',\n       '/static/images/icons/splash-828x1792.png',\n       '/static/images/icons/splash-1242x2688.png',\n       '/static/images/icons/splash-1536x2048.png',\n       '/static/images/icons/splash-1668x2224.png',\n       '/static/images/icons/splash-1668x2388.png',\n       '/static/images/icons/splash-2048x2732.png'\n   ];\n\n   // Cache on install\n   self.addEventListener(\"install\", event => {\n       this.skipWaiting();\n       event.waitUntil(\n           caches.open(staticCacheName)\n               .then(cache => {\n                   return cache.addAll(filesToCache);\n               })\n       )\n   });\n\n   // Clear cache on activate\n   self.addEventListener('activate', event => {\n       event.waitUntil(\n           caches.keys().then(cacheNames => {\n               return Promise.all(\n                   cacheNames\n                       .filter(cacheName => (cacheName.startsWith(\"django-pwa-\")))\n                       .filter(cacheName => (cacheName !== staticCacheName))\n                       .map(cacheName => caches.delete(cacheName))\n               );\n           })\n       );\n   });\n\n   // Serve from Cache\n   self.addEventListener(\"fetch\", event => {\n       event.respondWith(\n           caches.match(event.request)\n               .then(response => {\n                   return response || fetch(event.request);\n               })\n               .catch(() => {\n                   return caches.match('offline');\n               })\n       )\n   });\n\nAdding Your Own Service Worker\n==============================\n\nTo add service worker functionality, you\u2019ll want to create a\n``serviceworker.js`` or similarly named template in a template\ndirectory, and then point at it using the PWA_SERVICE_WORKER_PATH\nvariable (PWA_APP_FETCH_URL is passed through).\n\n.. code:: python\n\n   PWA_SERVICE_WORKER_PATH = os.path.join(BASE_DIR, 'my_app', 'serviceworker.js')\n\nThe offline view\n================\n\nBy default, the offline view is implemented in\n``templates/offline.html`` You can overwrite it in a template directory\nif you continue using the default ``serviceworker.js``.\n\nFeedback\n========\n\nI welcome your feedback and pull requests. Enjoy!\n\nLicense\n=======\n\nAll files in this repository are distributed under the MIT license.\n\n.. |Build Status| image:: https://travis-ci.org/silviolleite/django-pwa.svg\n   :target: https://travis-ci.org/silviolleite/django-pwa\n.. |Maintainability| image:: https://api.codeclimate.com/v1/badges/246542ea921058c4f76f/maintainability\n   :target: https://codeclimate.com/github/silviolleite/django-pwa/maintainability\n.. |codecov| image:: https://codecov.io/gh/silviolleite/django-pwa/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/silviolleite/django-pwa\n.. |PyPI - Downloads| image:: https://img.shields.io/pypi/dm/django-pwa.svg\n   :target: https://pypi.org/project/django-pwa/\n.. |PyPI - Downloads| image:: https://img.shields.io/pypi/v/django-pwa.svg\n   :target: https://pypi.org/project/django-pwa\n.. |PyPI - Downloads| image:: https://img.shields.io/pypi/djversions/django-pwa.svg\n   :target: https://pypi.org/project/django-pwa\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/silviolleite/django-pwa", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-pwa", "package_url": "https://pypi.org/project/django-pwa/", "platform": "", "project_url": "https://pypi.org/project/django-pwa/", "project_urls": {"Homepage": "http://github.com/silviolleite/django-pwa"}, "release_url": "https://pypi.org/project/django-pwa/1.0.8/", "requires_dist": ["django (>=1.8)"], "requires_python": "", "summary": "A Django app to include a manifest.json and Service Worker instance to enable progressive web app behavior", "version": "1.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-pwa</h1>\n<p>|Build Status| |Maintainability| |codecov| |PyPI - Downloads| |PyPI -\nDownloads| |PyPI - Downloads|</p>\n<p>This Django app turns your project into a <code>progressive web app &lt;https://developers.google.com/web/progressive-web-apps/&gt;</code>__.\nNavigating to your site on an Android phone will prompt you to add the\napp to your home screen.</p>\n<p>.. figure:: <a href=\"https://github.com/silviolleite/django-pwa/raw/master/images/screenshot1.png\" rel=\"nofollow\">https://github.com/silviolleite/django-pwa/raw/master/images/screenshot1.png</a>\n:alt: Prompt for install</p>\n<p>Prompt for install</p>\n<p>Launching the app from your home screen will display your app <code>without browser chrome &lt;https://github.com/silviolleite/django-pwa/raw/master/images/screenshot2.png&gt;</code>__.\nAs such, it\u2019s critical that your application provides all navigation\nwithin the HTML (no reliance on the browser back or forward button).</p>\n<h1>Requirements</h1>\n<p>Progressive Web Apps require HTTPS unless being served from localhost.\nIf you\u2019re not already using HTTPS on your site, check out <code>Let\u2019s Encrypt &lt;https://letsencrypt.org/&gt;</code>__ and\n<code>ZeroSSL &lt;https://zerossl.com/&gt;</code>__.</p>\n<h1>Installation</h1>\n<p>Install from PyPI:</p>\n<p>::</p>\n<p>pip install django-pwa</p>\n<h1>Configuration</h1>\n<p>Add <code>pwa</code> to your list of <code>INSTALLED_APPS</code> in settings.py:</p>\n<p>.. code:: python</p>\n<p>INSTALLED_APPS = [\n...\n'pwa',\n...\n]</p>\n<p>Define STATICFILES_DIRS for your custom PWA_APP_ICONS</p>\n<p>.. code:: python</p>\n<p>STATICFILES_DIRS = [\nos.path.join(BASE_DIR, 'static'),\n]</p>\n<p>Configure your app name, description, icons and splash screen images in\nsettings.py:</p>\n<p>.. code:: python</p>\n<p>PWA_APP_NAME = 'My App'\nPWA_APP_DESCRIPTION = \"My app description\"\nPWA_APP_THEME_COLOR = '#0A0302'\nPWA_APP_BACKGROUND_COLOR = '#ffffff'\nPWA_APP_DISPLAY = 'standalone'\nPWA_APP_SCOPE = '/'\nPWA_APP_ORIENTATION = 'any'\nPWA_APP_START_URL = '/'\nPWA_APP_ICONS = [\n{\n'src': '/static/images/my_app_icon.png',\n'sizes': '160x160'\n}\n]\nPWA_APP_ICONS_APPLE = [\n{\n'src': '/static/images/my_apple_icon.png',\n'sizes': '160x160'\n}\n]\nPWA_APP_SPLASH_SCREEN = [\n{\n'src': '/static/images/icons/splash-640x1136.png',\n'media': '(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)'\n}\n]\nPWA_APP_DIR = 'ltr'\nPWA_APP_LANG = 'en-US'</p>\n<p>Show console.log\n^^^^^^^^^^^^^^^^</p>\n<p>Set the <code>PWA_APP_DEBUG_MODE = False</code> to disable the the\n<code>console.log</code> on browser.</p>\n<p>All settings are optional, and the app will work fine with its internal\ndefaults. Highly recommend setting at least <code>PWA_APP_NAME</code>,\n<code>PWA_APP_DESCRIPTION</code>, <code>PWA_APP_ICONS</code> and\n<code>PWA_APP_SPLASH_SCREEN</code>.</p>\n<p>Add the progressive web app URLs to urls.py:</p>\n<p>.. code:: python</p>\n<p>from django.urls import url, include</p>\n<p>urlpatterns = [\n...\nurl('', include('pwa.urls')),  # You MUST use an empty string as the URL prefix\n...\n]</p>\n<p>Inject the required meta tags in your base.html (or wherever your HTML</p>\n&lt;head&gt; is defined):\n<p>.. code:: html</p>\n<p>{% load pwa %}</p>\n   &lt;head&gt;\n       ...\n       {% progressive_web_app_meta %}\n       ...\n   &lt;/head&gt;\n<h1>Troubleshooting</h1>\n<p>While running the Django test server:</p>\n<ol>\n<li>Verify that <code>/manifest.json</code> is being served</li>\n<li>Verify that <code>/serviceworker.js</code> is being served</li>\n<li>Verify that <code>/offline</code> is being served</li>\n<li>Use the Application tab in the Chrome Developer Tools to verify the\nprogressive web app is configured correctly.</li>\n<li>Use the \u201cAdd to homescreen\u201d link on the Application Tab to verify you\ncan add the app successfully.</li>\n</ol>\n<h1>The Service Worker</h1>\n<p>By default, the service worker implemented by this app is:</p>\n<p>.. code:: js</p>\n<p>// Base Service Worker implementation.  To use your own Service Worker, set the PWA_SERVICE_WORKER_PATH variable in settings.py</p>\n<p>var staticCacheName = \"django-pwa-v\" + new Date().getTime();\nvar filesToCache = [\n'/offline',\n'/css/django-pwa-app.css',\n'/images/icons/icon-72x72.png',\n'/images/icons/icon-96x96.png',\n'/images/icons/icon-128x128.png',\n'/images/icons/icon-144x144.png',\n'/images/icons/icon-152x152.png',\n'/images/icons/icon-192x192.png',\n'/images/icons/icon-384x384.png',\n'/images/icons/icon-512x512.png',\n'/static/images/icons/splash-640x1136.png',\n'/static/images/icons/splash-750x1334.png',\n'/static/images/icons/splash-1242x2208.png',\n'/static/images/icons/splash-1125x2436.png',\n'/static/images/icons/splash-828x1792.png',\n'/static/images/icons/splash-1242x2688.png',\n'/static/images/icons/splash-1536x2048.png',\n'/static/images/icons/splash-1668x2224.png',\n'/static/images/icons/splash-1668x2388.png',\n'/static/images/icons/splash-2048x2732.png'\n];</p>\n<p>// Cache on install\nself.addEventListener(\"install\", event =&gt; {\nthis.skipWaiting();\nevent.waitUntil(\ncaches.open(staticCacheName)\n.then(cache =&gt; {\nreturn cache.addAll(filesToCache);\n})\n)\n});</p>\n<p>// Clear cache on activate\nself.addEventListener('activate', event =&gt; {\nevent.waitUntil(\ncaches.keys().then(cacheNames =&gt; {\nreturn Promise.all(\ncacheNames\n.filter(cacheName =&gt; (cacheName.startsWith(\"django-pwa-\")))\n.filter(cacheName =&gt; (cacheName !== staticCacheName))\n.map(cacheName =&gt; caches.delete(cacheName))\n);\n})\n);\n});</p>\n<p>// Serve from Cache\nself.addEventListener(\"fetch\", event =&gt; {\nevent.respondWith(\ncaches.match(event.request)\n.then(response =&gt; {\nreturn response || fetch(event.request);\n})\n.catch(() =&gt; {\nreturn caches.match('offline');\n})\n)\n});</p>\n<h1>Adding Your Own Service Worker</h1>\n<p>To add service worker functionality, you\u2019ll want to create a\n<code>serviceworker.js</code> or similarly named template in a template\ndirectory, and then point at it using the PWA_SERVICE_WORKER_PATH\nvariable (PWA_APP_FETCH_URL is passed through).</p>\n<p>.. code:: python</p>\n<p>PWA_SERVICE_WORKER_PATH = os.path.join(BASE_DIR, 'my_app', 'serviceworker.js')</p>\n<h1>The offline view</h1>\n<p>By default, the offline view is implemented in\n<code>templates/offline.html</code> You can overwrite it in a template directory\nif you continue using the default <code>serviceworker.js</code>.</p>\n<h1>Feedback</h1>\n<p>I welcome your feedback and pull requests. Enjoy!</p>\n<h1>License</h1>\n<p>All files in this repository are distributed under the MIT license.</p>\n<p>.. |Build Status| image:: <a href=\"https://travis-ci.org/silviolleite/django-pwa.svg\" rel=\"nofollow\">https://travis-ci.org/silviolleite/django-pwa.svg</a>\n:target: <a href=\"https://travis-ci.org/silviolleite/django-pwa\" rel=\"nofollow\">https://travis-ci.org/silviolleite/django-pwa</a>\n.. |Maintainability| image:: <a href=\"https://api.codeclimate.com/v1/badges/246542ea921058c4f76f/maintainability\" rel=\"nofollow\">https://api.codeclimate.com/v1/badges/246542ea921058c4f76f/maintainability</a>\n:target: <a href=\"https://codeclimate.com/github/silviolleite/django-pwa/maintainability\" rel=\"nofollow\">https://codeclimate.com/github/silviolleite/django-pwa/maintainability</a>\n.. |codecov| image:: <a href=\"https://codecov.io/gh/silviolleite/django-pwa/branch/master/graph/badge.svg\" rel=\"nofollow\">https://codecov.io/gh/silviolleite/django-pwa/branch/master/graph/badge.svg</a>\n:target: <a href=\"https://codecov.io/gh/silviolleite/django-pwa\" rel=\"nofollow\">https://codecov.io/gh/silviolleite/django-pwa</a>\n.. |PyPI - Downloads| image:: <a href=\"https://img.shields.io/pypi/dm/django-pwa.svg\" rel=\"nofollow\">https://img.shields.io/pypi/dm/django-pwa.svg</a>\n:target: <a href=\"https://pypi.org/project/django-pwa/\" rel=\"nofollow\">https://pypi.org/project/django-pwa/</a>\n.. |PyPI - Downloads| image:: <a href=\"https://img.shields.io/pypi/v/django-pwa.svg\" rel=\"nofollow\">https://img.shields.io/pypi/v/django-pwa.svg</a>\n:target: <a href=\"https://pypi.org/project/django-pwa\" rel=\"nofollow\">https://pypi.org/project/django-pwa</a>\n.. |PyPI - Downloads| image:: <a href=\"https://img.shields.io/pypi/djversions/django-pwa.svg\" rel=\"nofollow\">https://img.shields.io/pypi/djversions/django-pwa.svg</a>\n:target: <a href=\"https://pypi.org/project/django-pwa\" rel=\"nofollow\">https://pypi.org/project/django-pwa</a></p>\n\n          </div>"}, "last_serial": 6563903, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a64c94094e305ff5e29ffabd9722d75c", "sha256": "bbcf1ce4323d5dc23ed91b48c30634556a9e7e6c4b15bcfacb6900dec1c88201"}, "downloads": -1, "filename": "django-pwa-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a64c94094e305ff5e29ffabd9722d75c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6655, "upload_time": "2018-11-17T12:29:24", "upload_time_iso_8601": "2018-11-17T12:29:24.790334Z", "url": "https://files.pythonhosted.org/packages/83/bd/4660447eddf98db7994b1b304a4d8730fe5fadd5ee5666833458c2aafbaa/django-pwa-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "ac11a00a371774932c9ac1b651dffa44", "sha256": "db653b7eb23369e2e415969283de6245a94c2702f1cfaec8caaff1d1106a6f92"}, "downloads": -1, "filename": "django_pwa-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ac11a00a371774932c9ac1b651dffa44", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 189693, "upload_time": "2018-11-30T22:30:04", "upload_time_iso_8601": "2018-11-30T22:30:04.514429Z", "url": "https://files.pythonhosted.org/packages/1a/52/246266d8441545740b92b87723f1bacf64f971f4ef8c1a3bad506f3c4f40/django_pwa-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02dc1bdb15d2bbf326c1c997bcfc981d", "sha256": "db42d5cea842a608e7522e9abb54de0eb958e4ea2fd1cf445da4249a38fe9b83"}, "downloads": -1, "filename": "django-pwa-1.0.1.tar.gz", "has_sig": false, "md5_digest": "02dc1bdb15d2bbf326c1c997bcfc981d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 189015, "upload_time": "2018-11-30T22:30:07", "upload_time_iso_8601": "2018-11-30T22:30:07.616482Z", "url": "https://files.pythonhosted.org/packages/dd/29/b09a0bb5b39f3ea6376db26885d4d1564d0d52e2dd3109ac69226f00a58a/django-pwa-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "fca27d4872eff2fe2b2999d639d18a9f", "sha256": "e25b3a5a6dedd739d61e9360a7e6ca788319873390f7187d8ae47dc8394448b7"}, "downloads": -1, "filename": "django_pwa-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "fca27d4872eff2fe2b2999d639d18a9f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 343279, "upload_time": "2019-01-23T13:57:58", "upload_time_iso_8601": "2019-01-23T13:57:58.554314Z", "url": "https://files.pythonhosted.org/packages/37/e1/3d54444deed9261a627005b3af163e6f555681f9c58a14b7f2a4283932f2/django_pwa-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45172963e758dd1c8926a87095f22e3b", "sha256": "ec1cf9ae9766b41f4a91d619c04f99a1afb36982527f59b68eaf2bbf36b055a1"}, "downloads": -1, "filename": "django-pwa-1.0.2.tar.gz", "has_sig": false, "md5_digest": "45172963e758dd1c8926a87095f22e3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 336786, "upload_time": "2019-01-23T13:58:01", "upload_time_iso_8601": "2019-01-23T13:58:01.014855Z", "url": "https://files.pythonhosted.org/packages/f3/5f/e1e7bc197454bdfb79ea12139158e2b17e9e445dd331f6607d238746dcf8/django-pwa-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "bc5db0eabd8407ad01c69711479d34f7", "sha256": "d592505fcde87a9fb1684ed1550b2f3704cdf0c54b952f669e02ed9db09ebdab"}, "downloads": -1, "filename": "django_pwa-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "bc5db0eabd8407ad01c69711479d34f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 343320, "upload_time": "2019-02-01T12:17:32", "upload_time_iso_8601": "2019-02-01T12:17:32.029477Z", "url": "https://files.pythonhosted.org/packages/8b/a0/ee17640f73293d4e19585a76b39f946141ced443b44c031766e1f361ffa5/django_pwa-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1094327678f28fdb497f065da6524171", "sha256": "8f8a4157181433b321be6a7aef5bb63898778fd8af2ea1a96e39b26581913767"}, "downloads": -1, "filename": "django-pwa-1.0.3.tar.gz", "has_sig": false, "md5_digest": "1094327678f28fdb497f065da6524171", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 336808, "upload_time": "2019-02-01T12:17:34", "upload_time_iso_8601": "2019-02-01T12:17:34.430071Z", "url": "https://files.pythonhosted.org/packages/bc/8b/8c99479db3bf2fd0e7542058de4da311000a7e140d7f867b60c81137676e/django-pwa-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "60627bb3d2cabd780e56d554946ddb20", "sha256": "49eaa4f0ce3d1ea6ad9f67ff907773274e806bcb87dc81e04e0fdf9fbe9dde8b"}, "downloads": -1, "filename": "django_pwa-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "60627bb3d2cabd780e56d554946ddb20", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 343321, "upload_time": "2019-02-11T09:45:02", "upload_time_iso_8601": "2019-02-11T09:45:02.301586Z", "url": "https://files.pythonhosted.org/packages/35/de/4027fd6e60b96bbbd20e6c3975ff3aaff32f36dd8a5a495515b097ca84a8/django_pwa-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e2d250f96cbd25f65cd4867a362a29a", "sha256": "228a5a6e758a3b36cff29b4005989cf65f30b58ad26b4d49f524db72f98ad069"}, "downloads": -1, "filename": "django-pwa-1.0.4.tar.gz", "has_sig": false, "md5_digest": "3e2d250f96cbd25f65cd4867a362a29a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 336864, "upload_time": "2019-02-11T09:45:05", "upload_time_iso_8601": "2019-02-11T09:45:05.373304Z", "url": "https://files.pythonhosted.org/packages/72/bb/8f47232b70e310656d6d8b39ac276621dd8780e6add23b8661d28f217554/django-pwa-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "bb5c2f9150eaef2bb66473bcab925889", "sha256": "ef093fda3028bdc99853cdd09844914fc223e64b0a98be4d4da2f44ba72b2761"}, "downloads": -1, "filename": "django_pwa-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "bb5c2f9150eaef2bb66473bcab925889", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 343367, "upload_time": "2019-03-07T10:55:24", "upload_time_iso_8601": "2019-03-07T10:55:24.766426Z", "url": "https://files.pythonhosted.org/packages/db/fb/f07e4565429a6436da001c2c08fd7a5d3399eb639bcba69ffe8e578004db/django_pwa-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ede35ab0df23a571c98726a008ca646c", "sha256": "50384d068e16e9b1c45c591603cbf5cb8e9fc01cb70147a6ada2858c733d60be"}, "downloads": -1, "filename": "django-pwa-1.0.5.tar.gz", "has_sig": false, "md5_digest": "ede35ab0df23a571c98726a008ca646c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 336959, "upload_time": "2019-03-07T10:55:27", "upload_time_iso_8601": "2019-03-07T10:55:27.238778Z", "url": "https://files.pythonhosted.org/packages/cb/69/764f85b8df02feaf2c6f52f11ef494fb71ac94e3a0788227521645099b3d/django-pwa-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "20b8c006266474906037b479a4e54303", "sha256": "9306105fcb637ae16fea6527be4b147d45fd53db85efb1d4f61dfea6bf793e56"}, "downloads": -1, "filename": "django_pwa-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "20b8c006266474906037b479a4e54303", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 456231, "upload_time": "2019-12-08T20:52:21", "upload_time_iso_8601": "2019-12-08T20:52:21.526261Z", "url": "https://files.pythonhosted.org/packages/ee/3b/a3f099a702e2b81abf57e285c8f814e8cd69606fb87eaad78c6129ce0213/django_pwa-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66abc0648f81efde6ed6085ca92ac4ae", "sha256": "b3f1ad0c5241fae4c7505423540de4db93077d7c88416ff6d2af545ffe209f34"}, "downloads": -1, "filename": "django-pwa-1.0.6.tar.gz", "has_sig": false, "md5_digest": "66abc0648f81efde6ed6085ca92ac4ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 450977, "upload_time": "2019-12-08T20:52:23", "upload_time_iso_8601": "2019-12-08T20:52:23.629380Z", "url": "https://files.pythonhosted.org/packages/99/99/c70ebd3c9e1f2600f454b9dab5bae6251b61f852fb4b74227c9ca7d77dc2/django-pwa-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "548bac66c79122add06769b8066d433a", "sha256": "a972283a6befc67560ab35d118d12b487976c34812dcab13b219e76f9232a530"}, "downloads": -1, "filename": "django_pwa-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "548bac66c79122add06769b8066d433a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 456363, "upload_time": "2020-01-23T10:47:43", "upload_time_iso_8601": "2020-01-23T10:47:43.492221Z", "url": "https://files.pythonhosted.org/packages/4f/48/994a153f6f85dc0241b04c8ab993fa9e886a68f68c631c9726785f93a1dd/django_pwa-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5bfd35b72c4b060939511fa189ce4895", "sha256": "a7670949036f627ae702805aee9c184c1319b377a3cc763a348e5f03c9bf2e37"}, "downloads": -1, "filename": "django-pwa-1.0.7.tar.gz", "has_sig": false, "md5_digest": "5bfd35b72c4b060939511fa189ce4895", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 451189, "upload_time": "2020-01-23T10:47:46", "upload_time_iso_8601": "2020-01-23T10:47:46.630994Z", "url": "https://files.pythonhosted.org/packages/8d/a9/a09a0f21350395a49d39837f3674f21030e8b4a10e025799e2fbff1b26eb/django-pwa-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "05c0e71d7b5e817d1136961555de676c", "sha256": "88a844095ec3dc38ec8edc8d1f95247eccaebefeb41484fb94c10631881b0eb7"}, "downloads": -1, "filename": "django_pwa-1.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "05c0e71d7b5e817d1136961555de676c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 456430, "upload_time": "2020-02-03T17:21:29", "upload_time_iso_8601": "2020-02-03T17:21:29.826206Z", "url": "https://files.pythonhosted.org/packages/28/39/2d99eae7983538cc4ee5ca86865137eb580f05baee313d5ac62dc60d4992/django_pwa-1.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08a8c13fb7e93c9bd9d79a6f581fac74", "sha256": "caf9d6e2a792def272e6cb496f594a9821c4d73cb5117d33560bc7b7b82d6132"}, "downloads": -1, "filename": "django-pwa-1.0.8.tar.gz", "has_sig": false, "md5_digest": "08a8c13fb7e93c9bd9d79a6f581fac74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 451253, "upload_time": "2020-02-03T17:21:33", "upload_time_iso_8601": "2020-02-03T17:21:33.030861Z", "url": "https://files.pythonhosted.org/packages/7c/d1/3b1e3a8cfd96cdc6236623026d5661cbefa073a2a806da13a2b1faf7bf6a/django-pwa-1.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "05c0e71d7b5e817d1136961555de676c", "sha256": "88a844095ec3dc38ec8edc8d1f95247eccaebefeb41484fb94c10631881b0eb7"}, "downloads": -1, "filename": "django_pwa-1.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "05c0e71d7b5e817d1136961555de676c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 456430, "upload_time": "2020-02-03T17:21:29", "upload_time_iso_8601": "2020-02-03T17:21:29.826206Z", "url": "https://files.pythonhosted.org/packages/28/39/2d99eae7983538cc4ee5ca86865137eb580f05baee313d5ac62dc60d4992/django_pwa-1.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08a8c13fb7e93c9bd9d79a6f581fac74", "sha256": "caf9d6e2a792def272e6cb496f594a9821c4d73cb5117d33560bc7b7b82d6132"}, "downloads": -1, "filename": "django-pwa-1.0.8.tar.gz", "has_sig": false, "md5_digest": "08a8c13fb7e93c9bd9d79a6f581fac74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 451253, "upload_time": "2020-02-03T17:21:33", "upload_time_iso_8601": "2020-02-03T17:21:33.030861Z", "url": "https://files.pythonhosted.org/packages/7c/d1/3b1e3a8cfd96cdc6236623026d5661cbefa073a2a806da13a2b1faf7bf6a/django-pwa-1.0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:35 2020"}