{"info": {"author": "G. Young", "author_email": "None - use the home-page instead!", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Topic :: Software Development :: Interpreters"], "description": "Package Overview\n================\n\nYou thought **Brainfuck** was bad? Think again. Get ready to meet...\n\nEPIC BRAINFUCK\n==============\n\n|\n\nMotivation\n==========\n\nContrary to many other codebases, this repository is not just about writing yet \n\n**another** Brainfuck compiler. Just search \"brainfuck\" on GitHub, and you'll see\n\njust how many people have already written compilers, and how many different languages\n\nit has been written in. It's incredible for a language so basic and rudimentary, how\n\nmuch attention it has garnered over the years. Indeed, it is quite the brainteaser to\n\nwrite stuff using only eight characters.\n\n|\n\nHowever, \"brainteaser\" is perhaps a euphemism for the language's actual name, so I began \n\nto think: how can I crank up the \"brain-teasing\" if you'd like and make this language even \n\nmore difficult to work with? The answer? Who said that ``>`` means ``++ptr``, where ``ptr`` points\n\nto an \"infinitely long\" ``char`` array? Why can't we use other characters to signify that? And who\n\nsaid we needed to have concrete aliases for these bits of C code? This is where this \n\nBrainfuck package deviates from most. Not only did I write an interpreter for \n\n\"traditional\" Brainfuck code, but I also wrote **several** variants in which the syntax of\n\nBrainfuck changes from interpretation to interpretation. Toss in some unexpected behaviors \n\n(e.g. massive file write out of nowhere), and there you have it: **EPIC** Brainfuck shenanigans!\n\n|\n\nDocumentation\n=============\nFor more information about documentation, please click `here \n<https://github.com/gfyoung/brainfuck/blob/master/README.md/>`_. In addition, every provided Python\n\nmodule has extensive documentation for each class and function defined.   \n\n|\n\nBugs and Features\n=================\nFind a bug in the code? Want another feature added to the codebase? Submit an issue **OR** \n\nfeature request at this `link <https://github.com/gfyoung/brainfuck/issues>`_ here!", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/gfyoung/brainfuck", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gfyoung/brainfuck", "keywords": "brainfuck interpreter epic console", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "brainfuck", "package_url": "https://pypi.org/project/brainfuck/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/brainfuck/", "project_urls": {"Download": "https://github.com/gfyoung/brainfuck", "Homepage": "https://github.com/gfyoung/brainfuck"}, "release_url": "https://pypi.org/project/brainfuck/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Epic Brainfuck Interpreter", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"package-overview\">\n<h2>Package Overview</h2>\n<p>You thought <strong>Brainfuck</strong> was bad? Think again. Get ready to meet\u2026</p>\n</div>\n<div id=\"epic-brainfuck\">\n<h2>EPIC BRAINFUCK</h2>\n<div>\n<div><br></div>\n</div>\n</div>\n<div id=\"motivation\">\n<h2>Motivation</h2>\n<p>Contrary to many other codebases, this repository is not just about writing yet</p>\n<p><strong>another</strong> Brainfuck compiler. Just search \u201cbrainfuck\u201d on GitHub, and you\u2019ll see</p>\n<p>just how many people have already written compilers, and how many different languages</p>\n<p>it has been written in. It\u2019s incredible for a language so basic and rudimentary, how</p>\n<p>much attention it has garnered over the years. Indeed, it is quite the brainteaser to</p>\n<p>write stuff using only eight characters.</p>\n<div>\n<div><br></div>\n</div>\n<p>However, \u201cbrainteaser\u201d is perhaps a euphemism for the language\u2019s actual name, so I began</p>\n<p>to think: how can I crank up the \u201cbrain-teasing\u201d if you\u2019d like and make this language even</p>\n<p>more difficult to work with? The answer? Who said that <tt>&gt;</tt> means <tt>++ptr</tt>, where <tt>ptr</tt> points</p>\n<p>to an \u201cinfinitely long\u201d <tt>char</tt> array? Why can\u2019t we use other characters to signify that? And who</p>\n<p>said we needed to have concrete aliases for these bits of C code? This is where this</p>\n<p>Brainfuck package deviates from most. Not only did I write an interpreter for</p>\n<p>\u201ctraditional\u201d Brainfuck code, but I also wrote <strong>several</strong> variants in which the syntax of</p>\n<p>Brainfuck changes from interpretation to interpretation. Toss in some unexpected behaviors</p>\n<p>(e.g. massive file write out of nowhere), and there you have it: <strong>EPIC</strong> Brainfuck shenanigans!</p>\n<div>\n<div><br></div>\n</div>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>For more information about documentation, please click <a href=\"https://github.com/gfyoung/brainfuck/blob/master/README.md/\" rel=\"nofollow\">here</a>. In addition, every provided Python</p>\n<p>module has extensive documentation for each class and function defined.</p>\n<div>\n<div><br></div>\n</div>\n</div>\n<div id=\"bugs-and-features\">\n<h2>Bugs and Features</h2>\n<p>Find a bug in the code? Want another feature added to the codebase? Submit an issue <strong>OR</strong></p>\n<p>feature request at this <a href=\"https://github.com/gfyoung/brainfuck/issues\" rel=\"nofollow\">link</a> here!</p>\n</div>\n\n          </div>"}, "last_serial": 1942318, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "1f85b339e396894522d2ae346cf03c35", "sha256": "1140f5355c346ce163c3431d8217d6fd6c491fb69f0d6c7397ed765d36035546"}, "downloads": -1, "filename": "brainfuck-1.0.0.zip", "has_sig": false, "md5_digest": "1f85b339e396894522d2ae346cf03c35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24284, "upload_time": "2016-01-17T17:01:11", "upload_time_iso_8601": "2016-01-17T17:01:11.191367Z", "url": "https://files.pythonhosted.org/packages/6e/0f/f989a42cd1297ab4ffa09576e5f022cfd41d5cd406f47f14b43481fd5d85/brainfuck-1.0.0.zip", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "769b10aa51e477fa8e1c6becd9bf4435", "sha256": "827396759489e97d70365fe4c1e6c875f17eff8bfc12336b2f338efdc2afabd8"}, "downloads": -1, "filename": "brainfuck-1.0.1.zip", "has_sig": false, "md5_digest": "769b10aa51e477fa8e1c6becd9bf4435", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16028, "upload_time": "2016-01-29T07:48:50", "upload_time_iso_8601": "2016-01-29T07:48:50.031089Z", "url": "https://files.pythonhosted.org/packages/47/cd/611a3391e788aacc9c32f7a4ea0ae7f63ac675469efcaaf9367406adaa09/brainfuck-1.0.1.zip", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "ae6ee603ddf201c114ab4b1045e13bc3", "sha256": "489ec8595f04118ada6f452ce2a72ed789470c9c019c00932511cf50b59a8606"}, "downloads": -1, "filename": "brainfuck-1.0.2.zip", "has_sig": false, "md5_digest": "ae6ee603ddf201c114ab4b1045e13bc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16032, "upload_time": "2016-02-05T21:29:30", "upload_time_iso_8601": "2016-02-05T21:29:30.407667Z", "url": "https://files.pythonhosted.org/packages/f2/72/f0e046a50eb04a735c4ece4496bf03443bac2c87d86aad850293961eef11/brainfuck-1.0.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ae6ee603ddf201c114ab4b1045e13bc3", "sha256": "489ec8595f04118ada6f452ce2a72ed789470c9c019c00932511cf50b59a8606"}, "downloads": -1, "filename": "brainfuck-1.0.2.zip", "has_sig": false, "md5_digest": "ae6ee603ddf201c114ab4b1045e13bc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16032, "upload_time": "2016-02-05T21:29:30", "upload_time_iso_8601": "2016-02-05T21:29:30.407667Z", "url": "https://files.pythonhosted.org/packages/f2/72/f0e046a50eb04a735c4ece4496bf03443bac2c87d86aad850293961eef11/brainfuck-1.0.2.zip", "yanked": false}], "timestamp": "Thu May  7 22:36:25 2020"}