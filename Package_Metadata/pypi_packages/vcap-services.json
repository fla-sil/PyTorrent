{"info": {"author": "Mamoon Raja", "author_email": "mamoon.raja@ibm.com", "bugtrack_url": null, "classifiers": [], "description": "vcap\\_service\\_python\n=====================\n\n|Build Status| |Coverage Status|\n\nParse and return service credentials from environment variables that\n`IBM Cloud <http://console.bluemix.net/>`__ provides.\n\nInstallation\n------------\n\n.. code:: sh\n\n    $ pip install vcap_services\n\nUsage\n-----\n\n.. code:: sh\n\n    from vcap_services import load_from_vcap_services\n    credentials = load_from_vcap_services('personality_insights')\n    print(credentials);\n\nIf ``VCAP_SERVICES`` is:\n\n.. code:: json\n\n    {\n      \"personality_insights\": [{\n          \"credentials\": {\n            \"password\": \"<password>\",\n            \"url\": \"<url>\",\n            \"username\": \"<username>\"\n          },\n        \"label\": \"personality_insights\",\n        \"name\": \"personality-insights-service\",\n        \"plan\": \"standard\"\n      }]\n    }\n\nOutput:\n\n.. code:: json\n\n    {\n      \"password\": \"<password>\",\n      \"url\": \"<url>\",\n      \"username\": \"<username>\"\n    }\n\nGetting credentials for a specific plan\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nGet credentials that match a specific service plan (only for\n``VCAP_SERVICES``).\n\n.. code:: sh\n\n    from vcap_services import load_from_vcap_services\n    credentials = load_from_vcap_services('personality_insights', 'standard')\n    print(credentials);\n\nGetting credentials for a specific instance\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nGet credentials that match a specific service instance (replace \"YOUR\nNLC NAME\" with the name of your service instance).\n\n.. code:: sh\n\n    from vcap_services import load_from_vcap_services\n    credentials = load_from_vcap_services('natural_language_classifier', None, 'YOUR NLC NAME')\n    print(credentials);\n\nGetting credentials for a specific plan and instance\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nGet credentials that match a specific service plan and instance (replace\n\"YOUR NLC NAME\" with the name of your service instance).\n\n.. code:: sh\n\n    from vcap_services import load_from_vcap_services\n    credentials = load_from_vcap_services('natural_language_classifier', 'standard', 'YOUR NLC NAME')\n    print(credentials);\n\nTests\n-----\n\nRunning all the tests:\n\n.. code:: sh\n\n    $ pip install -r requirements.txt\n    $ cp .env.mock .env\n    $ pytest --cov=vcap_services\n\nLicense\n-------\n\nMIT.\n\nContributing\n------------\n\nSee\n`CONTRIBUTING <https://github.com/mamoonraja/vcap-services-python/blob/master/CONTRIBUTING.md>`__.\n\n.. |Build Status| image:: https://travis-ci.org/mamoonraja/vcap-services-python.svg?branch=master\n   :target: https://travis-ci.org/mamoonraja/vcap-services-python/\n.. |Coverage Status| image:: https://coveralls.io/repos/mamoonraja/vcap-services-python/badge.svg?branch=master&service=github\n   :target: https://coveralls.io/github/mamoonraja/vcap-services-python?branch=master", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mamoonraja/vcap-services-python", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "vcap-services", "package_url": "https://pypi.org/project/vcap-services/", "platform": "", "project_url": "https://pypi.org/project/vcap-services/", "project_urls": {"Homepage": "https://github.com/mamoonraja/vcap-services-python"}, "release_url": "https://pypi.org/project/vcap-services/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Client library to parse and return service credentials from environment variables that IBM Cloud provides.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/mamoonraja/vcap-services-python/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94ed726adeebe29c106f0a0e8b994069143f620e/68747470733a2f2f7472617669732d63692e6f72672f6d616d6f6f6e72616a612f766361702d73657276696365732d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/mamoonraja/vcap-services-python?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1910425b5f1a487e1afce071e271b37e2daf6c1d/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d616d6f6f6e72616a612f766361702d73657276696365732d707974686f6e2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a></p>\n<p>Parse and return service credentials from environment variables that\n<a href=\"http://console.bluemix.net/\" rel=\"nofollow\">IBM Cloud</a> provides.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install vcap_services\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>from vcap_services import load_from_vcap_services\n<span class=\"nv\">credentials</span> <span class=\"o\">=</span> load_from_vcap_services<span class=\"o\">(</span><span class=\"s1\">'personality_insights'</span><span class=\"o\">)</span>\nprint<span class=\"o\">(</span>credentials<span class=\"o\">)</span><span class=\"p\">;</span>\n</pre>\n<p>If <tt>VCAP_SERVICES</tt> is:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"personality_insights\"</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n      <span class=\"nt\">\"credentials\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"password\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;password&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;url&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"username\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;username&gt;\"</span>\n      <span class=\"p\">},</span>\n    <span class=\"nt\">\"label\"</span><span class=\"p\">:</span> <span class=\"s2\">\"personality_insights\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"personality-insights-service\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"plan\"</span><span class=\"p\">:</span> <span class=\"s2\">\"standard\"</span>\n  <span class=\"p\">}]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Output:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"password\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;password&gt;\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;url&gt;\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"username\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;username&gt;\"</span>\n<span class=\"p\">}</span>\n</pre>\n<div id=\"getting-credentials-for-a-specific-plan\">\n<h3>Getting credentials for a specific plan</h3>\n<p>Get credentials that match a specific service plan (only for\n<tt>VCAP_SERVICES</tt>).</p>\n<pre>from vcap_services import load_from_vcap_services\n<span class=\"nv\">credentials</span> <span class=\"o\">=</span> load_from_vcap_services<span class=\"o\">(</span><span class=\"s1\">'personality_insights'</span>, <span class=\"s1\">'standard'</span><span class=\"o\">)</span>\nprint<span class=\"o\">(</span>credentials<span class=\"o\">)</span><span class=\"p\">;</span>\n</pre>\n</div>\n<div id=\"getting-credentials-for-a-specific-instance\">\n<h3>Getting credentials for a specific instance</h3>\n<p>Get credentials that match a specific service instance (replace \u201cYOUR\nNLC NAME\u201d with the name of your service instance).</p>\n<pre>from vcap_services import load_from_vcap_services\n<span class=\"nv\">credentials</span> <span class=\"o\">=</span> load_from_vcap_services<span class=\"o\">(</span><span class=\"s1\">'natural_language_classifier'</span>, None, <span class=\"s1\">'YOUR NLC NAME'</span><span class=\"o\">)</span>\nprint<span class=\"o\">(</span>credentials<span class=\"o\">)</span><span class=\"p\">;</span>\n</pre>\n</div>\n<div id=\"getting-credentials-for-a-specific-plan-and-instance\">\n<h3>Getting credentials for a specific plan and instance</h3>\n<p>Get credentials that match a specific service plan and instance (replace\n\u201cYOUR NLC NAME\u201d with the name of your service instance).</p>\n<pre>from vcap_services import load_from_vcap_services\n<span class=\"nv\">credentials</span> <span class=\"o\">=</span> load_from_vcap_services<span class=\"o\">(</span><span class=\"s1\">'natural_language_classifier'</span>, <span class=\"s1\">'standard'</span>, <span class=\"s1\">'YOUR NLC NAME'</span><span class=\"o\">)</span>\nprint<span class=\"o\">(</span>credentials<span class=\"o\">)</span><span class=\"p\">;</span>\n</pre>\n</div>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>Running all the tests:</p>\n<pre>$ pip install -r requirements.txt\n$ cp .env.mock .env\n$ pytest --cov<span class=\"o\">=</span>vcap_services\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>See\n<a href=\"https://github.com/mamoonraja/vcap-services-python/blob/master/CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 4134067, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "43a1d550338c1b79a861579825d782ee", "sha256": "71f73983282f7f89a859fb550c2624b1e7438c89164a3c99b4d4d6edf9eb19fd"}, "downloads": -1, "filename": "vcap_services-0.0.1.tar.gz", "has_sig": false, "md5_digest": "43a1d550338c1b79a861579825d782ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4199, "upload_time": "2018-08-03T20:55:43", "upload_time_iso_8601": "2018-08-03T20:55:43.518715Z", "url": "https://files.pythonhosted.org/packages/11/c3/4ceaa71faab90c5edbc0aff24a901ca7ca08264e9aeacd5f16f2549f4567/vcap_services-0.0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "684a62aa404a8d35e356edd5fdc41c94", "sha256": "1b856576ce0290c717022e0b76d5e5d448cd1bee94985affcca22cde6a11905e"}, "downloads": -1, "filename": "vcap_services-1.0.0.tar.gz", "has_sig": false, "md5_digest": "684a62aa404a8d35e356edd5fdc41c94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4191, "upload_time": "2018-08-03T20:56:03", "upload_time_iso_8601": "2018-08-03T20:56:03.166450Z", "url": "https://files.pythonhosted.org/packages/36/41/34f21399a1100de41a3e8763160efe3ecda51c5a8fefedbe60ba29d596fa/vcap_services-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "684a62aa404a8d35e356edd5fdc41c94", "sha256": "1b856576ce0290c717022e0b76d5e5d448cd1bee94985affcca22cde6a11905e"}, "downloads": -1, "filename": "vcap_services-1.0.0.tar.gz", "has_sig": false, "md5_digest": "684a62aa404a8d35e356edd5fdc41c94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4191, "upload_time": "2018-08-03T20:56:03", "upload_time_iso_8601": "2018-08-03T20:56:03.166450Z", "url": "https://files.pythonhosted.org/packages/36/41/34f21399a1100de41a3e8763160efe3ecda51c5a8fefedbe60ba29d596fa/vcap_services-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:33 2020"}