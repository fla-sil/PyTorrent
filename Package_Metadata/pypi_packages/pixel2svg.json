{"info": {"author": "Florian Berger", "author_email": "fberger@florian-berger.de", "bugtrack_url": null, "classifiers": [], "description": "About\n-----\n\npixel2svg converts pixel art to SVG - pixel by pixel.\n\nPrerequisites\n-------------\n\nPython 2.x `http://www.python.org <http://www.python.org>`_\n\nPython Imaging Library (PIL)\n`http://www.pythonware.com/products/pil/ <http://www.pythonware.com/products/pil/>`_\n\nsvgwrite\n`http://pypi.python.org/pypi/svgwrite/ <http://pypi.python.org/pypi/svgwrite/>`_\n\nInstallation\n------------\n\nUnzip the file, then at the command line run\n\n::\n\n    python setup.py install\n\nUsage\n-----\n\n::\n\n    Usage: pixel2svg [--overlap] IMAGEFILE\n\n    Options:\n      --version             show program's version number and exit\n      -h, --help            show this help message and exit\n      --squaresize=SQUARESIZE\n                            Width and heigt of vector squares in pixels, default: 40\n      --overlap             If given, overlap vector squares by 1px\n\nRunning\n\n::\n\n    pixel2svg.py IMAGE.EXT\n\nwill process IMAGE.EXT and create IMAGE.svg.\n\nEXT can be any format (png, jpg etc.) that can be read by the Python\nImaging Library.\n\nLicense\n-------\n\npixel2svg is licensed under the GPL. See the file COPYING for details.\n\nAuthor\n------\n\n(c) Florian Berger", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://florian-berger.de/en/software/pixel2svg/", "keywords": null, "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "pixel2svg", "package_url": "https://pypi.org/project/pixel2svg/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pixel2svg/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://florian-berger.de/en/software/pixel2svg/"}, "release_url": "https://pypi.org/project/pixel2svg/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "pixel2svg - Convert pixel art to SVG", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p>pixel2svg converts pixel art to SVG - pixel by pixel.</p>\n</div>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<p>Python 2.x <a href=\"http://www.python.org\" rel=\"nofollow\">http://www.python.org</a></p>\n<p>Python Imaging Library (PIL)\n<a href=\"http://www.pythonware.com/products/pil/\" rel=\"nofollow\">http://www.pythonware.com/products/pil/</a></p>\n<p>svgwrite\n<a href=\"http://pypi.python.org/pypi/svgwrite/\" rel=\"nofollow\">http://pypi.python.org/pypi/svgwrite/</a></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Unzip the file, then at the command line run</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>Usage: pixel2svg [--overlap] IMAGEFILE\n\nOptions:\n  --version             show program's version number and exit\n  -h, --help            show this help message and exit\n  --squaresize=SQUARESIZE\n                        Width and heigt of vector squares in pixels, default: 40\n  --overlap             If given, overlap vector squares by 1px\n</pre>\n<p>Running</p>\n<pre>pixel2svg.py IMAGE.EXT\n</pre>\n<p>will process IMAGE.EXT and create IMAGE.svg.</p>\n<p>EXT can be any format (png, jpg etc.) that can be read by the Python\nImaging Library.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>pixel2svg is licensed under the GPL. See the file COPYING for details.</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<ol>\n<li>Florian Berger</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 319462, "releases": {"0.1.0": [], "0.2.0": [], "0.3.0": []}, "urls": [], "timestamp": "Fri May  8 02:53:56 2020"}