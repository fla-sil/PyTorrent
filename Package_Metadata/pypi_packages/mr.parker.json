{"info": {"author": "Matthew Wilkes", "author_email": "matthew@matthewwilkes.co.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Topic :: Software Development", "Topic :: System :: Software Distribution", "Topic :: Utilities"], "description": "Mr. Parker\n==========\n\n\"With great power comes great responsibility\" - Uncle Ben\n\nBus Factor\n----------\n\nAt the 2009 Plone Conference the quote \"we usually think of buses as things that\nkill programmers\" was overheard. A few days later, at the sprint, it was noticed\nthat a few core packages for Plone 4.0 could only be released by one person.\nThis package is designed to combat this by ensuring that a given package has\nmore than a certain number of authorised admins on PyPI.\n\nSyntax\n------\n\nThis creates a console script called ``parker`` as follows:\n\n::\n\n    parker [--factor=2] \n           [--versions-cfg <configfile>] \n           [--repository=http://pypi.python.org/pypi] [packagename(s)]\n\n:--factor: (also -f) This determines the minimum number of people that have access before an error is raised.  The default is 2.\n:--versions-cfg: (also -c) If this option is provided a ``zc.buildout`` versions file will be parsed for the package names\n:--repository: (also -r) A repository URL that follows the baroque lookup logic assumptions\n:packagename(s): Required if --versions-cfg isn't specified.  Contains one or more packages to check, space separated.\n\nBaroque Lookup Logic\n--------------------\n\nUnfortunately, the API doesn't allow us to find what users have access to a\npackage, so we need to screen scrape. We expect HTML of the following format:\n\n::\n\n     <li>\n      <strong>Package Index Owner:</strong>\n      <span>deo, smcmahon, MatthewWilkes</span>\n     </li>\n\n     <li>\n      <strong>Package Index Maintainer:</strong>\n      <span>JoeBob</span>\n     </li>\n\nThat is, a list element that contains Package Index <rolename>: and a comma\nseparated list, once the tags have been removed.\n\nFirst, the li tags are extracted\n\n::\n\n    (?<=li\\>)[\\S\\s]*?(?=\\<\\/li\\>)\n\nThen, the role name is extracted:\n\n::\n\n    \"Package Index ([a-zA-Z]*)\"\n\nand the names are found with:\n\n::\n\n    set(a[0] for a in re.compile(\"([a-zA-Z]+,?)+?\").findall(li) \n             if a[0] not in ['Package','Index',rolename,'span','strong'])\n\nYes, it is ugly. I know. I wish there was an API for this, or that the markup\nwas easily scrape-able. For now, this will do.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://dev.plone.org/collective/browser/mr.parker", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "mr.parker", "package_url": "https://pypi.org/project/mr.parker/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mr.parker/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://dev.plone.org/collective/browser/mr.parker"}, "release_url": "https://pypi.org/project/mr.parker/1.0/", "requires_dist": null, "requires_python": null, "summary": "Ensures that the PyPI bus factor for a package is above a certain threshold.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>\u201cWith great power comes great responsibility\u201d - Uncle Ben</p>\n<div id=\"bus-factor\">\n<h2>Bus Factor</h2>\n<p>At the 2009 Plone Conference the quote \u201cwe usually think of buses as things that\nkill programmers\u201d was overheard. A few days later, at the sprint, it was noticed\nthat a few core packages for Plone 4.0 could only be released by one person.\nThis package is designed to combat this by ensuring that a given package has\nmore than a certain number of authorised admins on PyPI.</p>\n</div>\n<div id=\"syntax\">\n<h2>Syntax</h2>\n<p>This creates a console script called <tt>parker</tt> as follows:</p>\n<pre>parker [--factor=2]\n       [--versions-cfg &lt;configfile&gt;]\n       [--repository=http://pypi.python.org/pypi] [packagename(s)]\n</pre>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>\u2013factor:</th><td>(also -f) This determines the minimum number of people that have access before an error is raised.  The default is 2.</td>\n</tr>\n<tr><th>\u2013versions-cfg:</th><td>(also -c) If this option is provided a <tt>zc.buildout</tt> versions file will be parsed for the package names</td>\n</tr>\n<tr><th>\u2013repository:</th><td>(also -r) A repository URL that follows the baroque lookup logic assumptions</td>\n</tr>\n<tr><th>packagename(s):</th><td>Required if \u2013versions-cfg isn\u2019t specified.  Contains one or more packages to check, space separated.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"baroque-lookup-logic\">\n<h2>Baroque Lookup Logic</h2>\n<p>Unfortunately, the API doesn\u2019t allow us to find what users have access to a\npackage, so we need to screen scrape. We expect HTML of the following format:</p>\n<pre>&lt;li&gt;\n &lt;strong&gt;Package Index Owner:&lt;/strong&gt;\n &lt;span&gt;deo, smcmahon, MatthewWilkes&lt;/span&gt;\n&lt;/li&gt;\n\n&lt;li&gt;\n &lt;strong&gt;Package Index Maintainer:&lt;/strong&gt;\n &lt;span&gt;JoeBob&lt;/span&gt;\n&lt;/li&gt;\n</pre>\n<p>That is, a list element that contains Package Index &lt;rolename&gt;: and a comma\nseparated list, once the tags have been removed.</p>\n<p>First, the li tags are extracted</p>\n<pre>(?&lt;=li\\&gt;)[\\S\\s]*?(?=\\&lt;\\/li\\&gt;)\n</pre>\n<p>Then, the role name is extracted:</p>\n<pre>\"Package Index ([a-zA-Z]*)\"\n</pre>\n<p>and the names are found with:</p>\n<pre>set(a[0] for a in re.compile(\"([a-zA-Z]+,?)+?\").findall(li)\n         if a[0] not in ['Package','Index',rolename,'span','strong'])\n</pre>\n<p>Yes, it is ugly. I know. I wish there was an API for this, or that the markup\nwas easily scrape-able. For now, this will do.</p>\n</div>\n\n          </div>"}, "last_serial": 795046, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "6cbc8cbf8db2f802aa1f1013544f028a", "sha256": "8c24d9b81ae4aa5b64d4dece1ae28d3f1a104cc728c15b876363db0ff2d95b69"}, "downloads": -1, "filename": "mr.parker-1.0.zip", "has_sig": true, "md5_digest": "6cbc8cbf8db2f802aa1f1013544f028a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9297, "upload_time": "2009-10-31T15:43:29", "upload_time_iso_8601": "2009-10-31T15:43:29.415185Z", "url": "https://files.pythonhosted.org/packages/be/c0/a59ac031546ec19a694f858ebab319aebb5884618aeb631fb716b7971474/mr.parker-1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6cbc8cbf8db2f802aa1f1013544f028a", "sha256": "8c24d9b81ae4aa5b64d4dece1ae28d3f1a104cc728c15b876363db0ff2d95b69"}, "downloads": -1, "filename": "mr.parker-1.0.zip", "has_sig": true, "md5_digest": "6cbc8cbf8db2f802aa1f1013544f028a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9297, "upload_time": "2009-10-31T15:43:29", "upload_time_iso_8601": "2009-10-31T15:43:29.415185Z", "url": "https://files.pythonhosted.org/packages/be/c0/a59ac031546ec19a694f858ebab319aebb5884618aeb631fb716b7971474/mr.parker-1.0.zip", "yanked": false}], "timestamp": "Fri May  8 00:50:59 2020"}