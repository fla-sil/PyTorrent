{"info": {"author": "Luke Stebbing", "author_email": "luke@lukestebbing.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "ScopeFormatter allows Python's string formatting to be used with names\r\ndrawn from the current scope, similar to the variable interpolation\r\nfound in languages such as Ruby and Perl.\r\n\r\n\r\n.. contents::\r\n\r\n\r\nExamples\r\n--------\r\n>>> from scopeformatter import F\r\n>>> greeting = 'Hello'\r\n>>> def greet(name):\r\n...     return F('{greeting}, {name}!')\r\n>>> greet('world')\r\n'Hello, world!'\r\n\r\nPositional and keyword arguments are accepted:\r\n\r\n>>> F('{greeting} {0} times, {name}!', len(greeting), name='world')\r\n'Hello 5 times, world!'\r\n\r\n\r\nRequirements\r\n------------\r\nThe stack inspection requires a Python VM that provides\r\n``sys._getframe()``, such as CPython.\r\n\r\n\r\nLimitations\r\n-----------\r\nNon-global names from enclosing scopes will not be found unless\r\nthey are referenced in the local scope.\r\n\r\n>>> def outer():\r\n...     non_local = 'non-local'\r\n...     def inner():\r\n...         return F('{non_local} is not referenced locally')\r\n...     return inner()\r\n>>> outer()\r\nTraceback (most recent call last):\r\n    ...\r\nKeyError: 'non_local'\r\n\r\n>>> def outer():\r\n...     non_local = 'non-local'\r\n...     def inner():\r\n...         non_local\r\n...         return F('{non_local} is referenced locally')\r\n...     return inner()\r\n>>> outer()\r\n'non-local is referenced locally'\r\n\r\n\r\nHistory\r\n-------\r\n\r\n\r\n1.0.3 -- 2009 Oct 22\r\n====================\r\n- Added history to the project page.\r\n- Added additional documentation files.\r\n\r\n\r\n1.0.2 -- 2009 Oct 22\r\n====================\r\n- Reorganized metadata.\r\n- Removed dependencies on setuptools and nose.\r\n\r\n\r\n1.0.1 -- 2009 Oct 3\r\n===================\r\n- Made minor additions to metadata.\r\n\r\n\r\n1.0 -- 2009 Sept 25\r\n===================\r\n- Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/ScopeFormatter", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ScopeFormatter", "package_url": "https://pypi.org/project/ScopeFormatter/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ScopeFormatter/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/ScopeFormatter"}, "release_url": "https://pypi.org/project/ScopeFormatter/1.0.3/", "requires_dist": null, "requires_python": null, "summary": "Format a string using names in the current scope.", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>ScopeFormatter allows Python\u2019s string formatting to be used with names\ndrawn from the current scope, similar to the variable interpolation\nfound in languages such as Ruby and Perl.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#examples\" id=\"id2\" rel=\"nofollow\">Examples</a></li>\n<li><a href=\"#requirements\" id=\"id3\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#limitations\" id=\"id4\" rel=\"nofollow\">Limitations</a></li>\n<li><a href=\"#history\" id=\"id5\" rel=\"nofollow\">History</a><ul>\n<li><a href=\"#oct-22\" id=\"id6\" rel=\"nofollow\">1.0.3 \u2013 2009 Oct 22</a></li>\n<li><a href=\"#id1\" id=\"id7\" rel=\"nofollow\">1.0.2 \u2013 2009 Oct 22</a></li>\n<li><a href=\"#oct-3\" id=\"id8\" rel=\"nofollow\">1.0.1 \u2013 2009 Oct 3</a></li>\n<li><a href=\"#sept-25\" id=\"id9\" rel=\"nofollow\">1.0 \u2013 2009 Sept 25</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"examples\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Examples</a></h2>\n<pre>&gt;&gt;&gt; from scopeformatter import F\n&gt;&gt;&gt; greeting = 'Hello'\n&gt;&gt;&gt; def greet(name):\n...     return F('{greeting}, {name}!')\n&gt;&gt;&gt; greet('world')\n'Hello, world!'\n</pre>\n<p>Positional and keyword arguments are accepted:</p>\n<pre>&gt;&gt;&gt; F('{greeting} {0} times, {name}!', len(greeting), name='world')\n'Hello 5 times, world!'\n</pre>\n</div>\n<div id=\"requirements\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Requirements</a></h2>\n<p>The stack inspection requires a Python VM that provides\n<tt>sys._getframe()</tt>, such as CPython.</p>\n</div>\n<div id=\"limitations\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Limitations</a></h2>\n<p>Non-global names from enclosing scopes will not be found unless\nthey are referenced in the local scope.</p>\n<pre>&gt;&gt;&gt; def outer():\n...     non_local = 'non-local'\n...     def inner():\n...         return F('{non_local} is not referenced locally')\n...     return inner()\n&gt;&gt;&gt; outer()\nTraceback (most recent call last):\n    ...\nKeyError: 'non_local'\n</pre>\n<pre>&gt;&gt;&gt; def outer():\n...     non_local = 'non-local'\n...     def inner():\n...         non_local\n...         return F('{non_local} is referenced locally')\n...     return inner()\n&gt;&gt;&gt; outer()\n'non-local is referenced locally'\n</pre>\n</div>\n<div id=\"history\">\n<h2><a href=\"#id5\" rel=\"nofollow\">History</a></h2>\n<div id=\"oct-22\">\n<h3><a href=\"#id6\" rel=\"nofollow\">1.0.3 \u2013 2009 Oct 22</a></h3>\n<ul>\n<li>Added history to the project page.</li>\n<li>Added additional documentation files.</li>\n</ul>\n</div>\n<div id=\"id1\">\n<h3><a href=\"#id7\" rel=\"nofollow\">1.0.2 \u2013 2009 Oct 22</a></h3>\n<ul>\n<li>Reorganized metadata.</li>\n<li>Removed dependencies on setuptools and nose.</li>\n</ul>\n</div>\n<div id=\"oct-3\">\n<h3><a href=\"#id8\" rel=\"nofollow\">1.0.1 \u2013 2009 Oct 3</a></h3>\n<ul>\n<li>Made minor additions to metadata.</li>\n</ul>\n</div>\n<div id=\"sept-25\">\n<h3><a href=\"#id9\" rel=\"nofollow\">1.0 \u2013 2009 Sept 25</a></h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 743274, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "c5495edb54272f6a59c841acfb59e677", "sha256": "9a28088a9cd79718f47a19e22900006dec1ab7e450ea080a9ec50478c925d115"}, "downloads": -1, "filename": "ScopeFormatter-1.0.tar.gz", "has_sig": true, "md5_digest": "c5495edb54272f6a59c841acfb59e677", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2745, "upload_time": "2009-09-25T01:06:30", "upload_time_iso_8601": "2009-09-25T01:06:30.015626Z", "url": "https://files.pythonhosted.org/packages/e8/8c/8dfed20a1709c34694376317bb76b28f3ea1bde71cff763f5156fa86eb1e/ScopeFormatter-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "885205cc25470770a243d90053de0aef", "sha256": "736cb77fb033de9532408032d012f6c4fb7232f1557c876912060a3d3da1747c"}, "downloads": -1, "filename": "ScopeFormatter-1.0.1.tar.gz", "has_sig": true, "md5_digest": "885205cc25470770a243d90053de0aef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2803, "upload_time": "2009-10-03T04:50:05", "upload_time_iso_8601": "2009-10-03T04:50:05.435356Z", "url": "https://files.pythonhosted.org/packages/86/03/e565d129a737be4613d90220b21bca8bfbfec9d107cb1501a141af55e880/ScopeFormatter-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "359ac2ad3e024d801988744b56a7c824", "sha256": "cf2a855fa03443c8b3659171de3ea8108e5073c0c701fb5ddea752edca600209"}, "downloads": -1, "filename": "ScopeFormatter-1.0.2.tar.gz", "has_sig": true, "md5_digest": "359ac2ad3e024d801988744b56a7c824", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1910, "upload_time": "2009-10-23T05:11:47", "upload_time_iso_8601": "2009-10-23T05:11:47.721813Z", "url": "https://files.pythonhosted.org/packages/8b/03/bca2ed1aec8ac480a0c5ac1e3574666bdbdcaa4e4df1c4dfbb4a463e6a28/ScopeFormatter-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "1603fa0edea650b63f71f464d8485b98", "sha256": "73b60fb05eb93e71bef119840b70d88c358136450a466bfd5d471b8b148598a8"}, "downloads": -1, "filename": "ScopeFormatter-1.0.3.tar.gz", "has_sig": true, "md5_digest": "1603fa0edea650b63f71f464d8485b98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3068, "upload_time": "2009-10-23T06:43:34", "upload_time_iso_8601": "2009-10-23T06:43:34.714993Z", "url": "https://files.pythonhosted.org/packages/2f/a7/238ff037ae2be90a1cf77db1962a318287e6e0f610a4e9847c704e25f395/ScopeFormatter-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1603fa0edea650b63f71f464d8485b98", "sha256": "73b60fb05eb93e71bef119840b70d88c358136450a466bfd5d471b8b148598a8"}, "downloads": -1, "filename": "ScopeFormatter-1.0.3.tar.gz", "has_sig": true, "md5_digest": "1603fa0edea650b63f71f464d8485b98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3068, "upload_time": "2009-10-23T06:43:34", "upload_time_iso_8601": "2009-10-23T06:43:34.714993Z", "url": "https://files.pythonhosted.org/packages/2f/a7/238ff037ae2be90a1cf77db1962a318287e6e0f610a4e9847c704e25f395/ScopeFormatter-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:06 2020"}