{"info": {"author": "eht", "author_email": "jared@e.ht", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "License :: Public Domain", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3"], "description": "#  Safeword : a generator of words, characters, and slugs\n[![](/ext/round1.jpg)](/)\n\n![image](https://img.shields.io/badge/license-Unlicense-orange.svg)\n\n## Predictable and fun slug generation\n\n//WIP\n\nReturns mutable objects as requested\n\n\nTODO:\n- Words, ~~nouns~~, ~~adjectives~~, ~~verbs~~, animals, names\n    - camelCase, medial capitals, camel caps\n    - snake_case, machine safe \n- Hashes, input based md5+, ~~UUID~~ / CUID\n- append and prepend (useful for hash + file extension)\n- return int\n    - even/odd numbers\n- machine safe\n- ~~return backwards/forwards~~\n- integrate with princetonparser when it makes sense to generate/update lists on the fly\n    - importable word lists?\n- [FEATURE] Emoji returns\n- [FEATURE] return url combos\n- optimize list creation and availability. currently created during class init\n    - should be tested to see if JSON or CSV is faster to generate lists\n- [IMPORTANT] refactor request and response flow\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/e-ht/safeword", "keywords": "", "license": "Unlicense", "maintainer": "", "maintainer_email": "", "name": "safeword", "package_url": "https://pypi.org/project/safeword/", "platform": "", "project_url": "https://pypi.org/project/safeword/", "project_urls": {"Homepage": "https://github.com/e-ht/safeword"}, "release_url": "https://pypi.org/project/safeword/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "A small utility for generating character slugs on demand.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Safeword : a generator of words, characters, and slugs</h1>\n<p><a href=\"/\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9132eb5d143d20c0de58a3d0353693eec80cd325/2f6578742f726f756e64312e6a7067\"></a></p>\n<p><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6039ba3410f5cd6856a63261295d6e76fc86bbda/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d556e6c6963656e73652d6f72616e67652e737667\"></p>\n<h2>Predictable and fun slug generation</h2>\n<p>//WIP</p>\n<p>Returns mutable objects as requested</p>\n<p>TODO:</p>\n<ul>\n<li>Words, <del>nouns</del>, <del>adjectives</del>, <del>verbs</del>, animals, names\n<ul>\n<li>camelCase, medial capitals, camel caps</li>\n<li>snake_case, machine safe</li>\n</ul>\n</li>\n<li>Hashes, input based md5+, <del>UUID</del> / CUID</li>\n<li>append and prepend (useful for hash + file extension)</li>\n<li>return int\n<ul>\n<li>even/odd numbers</li>\n</ul>\n</li>\n<li>machine safe</li>\n<li><del>return backwards/forwards</del></li>\n<li>integrate with princetonparser when it makes sense to generate/update lists on the fly\n<ul>\n<li>importable word lists?</li>\n</ul>\n</li>\n<li>[FEATURE] Emoji returns</li>\n<li>[FEATURE] return url combos</li>\n<li>optimize list creation and availability. currently created during class init\n<ul>\n<li>should be tested to see if JSON or CSV is faster to generate lists</li>\n</ul>\n</li>\n<li>[IMPORTANT] refactor request and response flow</li>\n</ul>\n\n          </div>"}, "last_serial": 4504870, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "928ddc02ea3fd0a994b25b5c75328e29", "sha256": "6be44308ea67248258591623eb26fa2cb7d62b51b5f739cdaf4c03401e78bac4"}, "downloads": -1, "filename": "safeword-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "928ddc02ea3fd0a994b25b5c75328e29", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33441, "upload_time": "2018-11-19T22:36:58", "upload_time_iso_8601": "2018-11-19T22:36:58.391918Z", "url": "https://files.pythonhosted.org/packages/9f/7f/625ecf1e46e2db1e0929def02058405d898228574ea159b9f184b95f58aa/safeword-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d0251de182860beb737b98ececbcfd8", "sha256": "956c9902c5e0a21b0eea468148980b09d805e6a8cd9bd5dfbd925efff4a1d0f1"}, "downloads": -1, "filename": "safeword-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0d0251de182860beb737b98ececbcfd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31749, "upload_time": "2018-11-19T22:37:00", "upload_time_iso_8601": "2018-11-19T22:37:00.622051Z", "url": "https://files.pythonhosted.org/packages/51/35/55c86094a39d7b6939103d12b2e27caf26c426c01b495dde5a6906a01e14/safeword-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "928ddc02ea3fd0a994b25b5c75328e29", "sha256": "6be44308ea67248258591623eb26fa2cb7d62b51b5f739cdaf4c03401e78bac4"}, "downloads": -1, "filename": "safeword-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "928ddc02ea3fd0a994b25b5c75328e29", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33441, "upload_time": "2018-11-19T22:36:58", "upload_time_iso_8601": "2018-11-19T22:36:58.391918Z", "url": "https://files.pythonhosted.org/packages/9f/7f/625ecf1e46e2db1e0929def02058405d898228574ea159b9f184b95f58aa/safeword-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d0251de182860beb737b98ececbcfd8", "sha256": "956c9902c5e0a21b0eea468148980b09d805e6a8cd9bd5dfbd925efff4a1d0f1"}, "downloads": -1, "filename": "safeword-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0d0251de182860beb737b98ececbcfd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31749, "upload_time": "2018-11-19T22:37:00", "upload_time_iso_8601": "2018-11-19T22:37:00.622051Z", "url": "https://files.pythonhosted.org/packages/51/35/55c86094a39d7b6939103d12b2e27caf26c426c01b495dde5a6906a01e14/safeword-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:21 2020"}