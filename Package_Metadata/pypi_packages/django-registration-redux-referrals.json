{"info": {"author": "Aurlus Wedava", "author_email": "ismaelwedava@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "This is a fork of django-registration(redux) that provides basic support for email referrals.\n\nInstallation\n************\n\npip install django-registration-redux-referrals\n\nor simply download the zip, extract it and copy the 'registration' directory into PYTHONPATH\n\nConfiguration\n*************\n\nConfiguration instructions remains similar to django-registration-redux. Here is the full\ndocumentation: http://django-registration-redux.readthedocs.org\n\nAfter installation and configuration, all you need is to write the view to send referral emails.\n\nExample: ::\n\n\n    # Import the ReferCodes and Refer models.\n    # The ReferCodes model holds refer codes generated by users.\n    # The Refer model holds referred users and the referees. Both are instances of django.contrib.auth.models.User\n\n    from registration.models import ReferCodes, Refer\n\n    # The ReferForm is a simple form with only an email field. You can implement your own if you like.\n\n    from registration.forms import ReferForm\n\n    # gen_code is a utility for generating the 20-character refer code\n\n    from registration.utils import gen_code\n\n    from django.core.mail import send_mail\n    from django.conf import settings\n    from django.contrib.sites.shortcuts import get_current_site\n    from django.core.urlresolvers import reverse\n\n\n    def refer(request):\n        form = ReferForm()\n        if request.POST:\n            code = gen_code()\n            obj, new = ReferCodes.objects.get_or_create(code=code, user=request.user)\n            if new:\n                # Generation of the refer URL\n                # registration_register is the name of the registration url\n                # Please note the structure of the URL\n                url = 'http://' + get_current_site(request) + reverse('registration_register') + code + '/'\n                # The refer email message\n                message = \"Hello, \\n Please register for the writing service here {0}\".format(url)\n                # Sending the refer email.\n                send_mail('Subject here', message, settings.EMAIL_HOST_USER,\n                          [request.POST['email']], fail_silently=False)\n\n            ...\n\n\nReferred users who register will now be saved to the Refers table and you will be able to query them and their\nreferees.", "description_content_type": null, "docs_url": null, "download_url": "https://pypi.python.org/packages/source/d/django-registration-redux-referrals/django-registration-redux-referrals.zip#md5=1cd3bc73647648f94820dc53e70ba107", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Wedava/django-registration-redux-referrals", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-registration-redux-referrals", "package_url": "https://pypi.org/project/django-registration-redux-referrals/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-registration-redux-referrals/", "project_urls": {"Download": "https://pypi.python.org/packages/source/d/django-registration-redux-referrals/django-registration-redux-referrals.zip#md5=1cd3bc73647648f94820dc53e70ba107", "Homepage": "https://github.com/Wedava/django-registration-redux-referrals"}, "release_url": "https://pypi.org/project/django-registration-redux-referrals/1.3a0/", "requires_dist": null, "requires_python": null, "summary": "An extensible user-registration application for Django with basic support for email user referrals", "version": "1.3a0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a fork of django-registration(redux) that provides basic support for email referrals.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>pip install django-registration-redux-referrals</p>\n<p>or simply download the zip, extract it and copy the \u2018registration\u2019 directory into PYTHONPATH</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Configuration instructions remains similar to django-registration-redux. Here is the full\ndocumentation: <a href=\"http://django-registration-redux.readthedocs.org\" rel=\"nofollow\">http://django-registration-redux.readthedocs.org</a></p>\n<p>After installation and configuration, all you need is to write the view to send referral emails.</p>\n<p>Example:</p>\n<pre># Import the ReferCodes and Refer models.\n# The ReferCodes model holds refer codes generated by users.\n# The Refer model holds referred users and the referees. Both are instances of django.contrib.auth.models.User\n\nfrom registration.models import ReferCodes, Refer\n\n# The ReferForm is a simple form with only an email field. You can implement your own if you like.\n\nfrom registration.forms import ReferForm\n\n# gen_code is a utility for generating the 20-character refer code\n\nfrom registration.utils import gen_code\n\nfrom django.core.mail import send_mail\nfrom django.conf import settings\nfrom django.contrib.sites.shortcuts import get_current_site\nfrom django.core.urlresolvers import reverse\n\n\ndef refer(request):\n    form = ReferForm()\n    if request.POST:\n        code = gen_code()\n        obj, new = ReferCodes.objects.get_or_create(code=code, user=request.user)\n        if new:\n            # Generation of the refer URL\n            # registration_register is the name of the registration url\n            # Please note the structure of the URL\n            url = 'http://' + get_current_site(request) + reverse('registration_register') + code + '/'\n            # The refer email message\n            message = \"Hello, \\n Please register for the writing service here {0}\".format(url)\n            # Sending the refer email.\n            send_mail('Subject here', message, settings.EMAIL_HOST_USER,\n                      [request.POST['email']], fail_silently=False)\n\n        ...\n</pre>\n<p>Referred users who register will now be saved to the Refers table and you will be able to query them and their\nreferees.</p>\n</div>\n\n          </div>"}, "last_serial": 1713985, "releases": {"1.3a0": []}, "urls": [], "timestamp": "Fri May  8 00:54:19 2020"}