{"info": {"author": "Jukka Ojaniemi", "author_email": "jukka.ojaniemi@jyu.fi", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "RSS Listing\n===========\n\n**RSS Listing** is a content type, which displays an RSS feed in the\nsame way as the default **RSS Portlet** does.\n\n.. contents::\n\nPublic resources\n----------------\n\n**RSS Listing** installs a public resource ``++resource++jyu.rsslisting.images/rsslisting_icon.gif`` for its content type icon::\n\n    >>> from Products.Five.testbrowser import Browser\n    >>> browser = Browser(); portal_url = self.portal.absolute_url()\n    >>> browser.open(portal_url + \"/++resource++jyu.rsslisting.images/rsslisting_icon.gif\")\n\nand ``++resource++jyu.rsslisting.styles/rsslisting.css`` for its stylesheet::\n\n    >>> browser.open(portal_url + \"/++resource++jyu.rsslisting.styles/rsslisting.css\")\n\nCreating content\n----------------\n\nBy default, adding **RSS Listing** is not allowed globally. Let's\nallow it to make it easier to test::\n\n    >>> from Products.CMFCore.utils import getToolByName\n    >>> portal_types = getToolByName(self.portal, \"portal_types\")\n    >>> rss_listing = portal_types.get(\"RSS Listing\")\n    >>> rss_listing\n    <DynamicViewTypeInformation at /plone/portal_types/RSS Listing>\n\n    >>> rss_listing.global_allow = True\n    >>> rss_listing.global_allow\n    True\n\nNow **RSS Listing** is addable by any *contributor*. Let's\n\n1. open the front page::\n\n    >>> browser.open(portal_url)\n\n2. enter the log in details::\n\n    >>> browser.getControl(name='__ac_name').value = 'contributor'\n    >>> browser.getControl(name='__ac_password').value = 'secret'\n\n3. and log in::\n\n    >>> browser.getControl(name='submit').click()\n    >>> \"You are now logged in\" in browser.contents\n    True\n\nNow we should be able to see **RSS Listing** in the *add item* menu::\n\n    >>> browser.getLink(id='rss-listing').url.endswith(\"createObject?type_name=RSS+Listing\")\n    True\n\nTo add a single **RSS Listing**\n\n1. click it from the *add item* menu::\n\n    >>> browser.getLink(id='rss-listing').click()\n\n2. enter RSS information::\n\n    >>> browser.getControl(name='title').value = \"Slashdot\"\n    >>> browser.getControl(name='description').value = \"Yesterday's news!\"\n    >>> browser.getControl(name='url').value = \"http://rss.slashdot.org/Slashdot/slashdot\"\n    >>> browser.getControl(name='count').value = \"10\"\n    >>> browser.getControl(name='timeout').value = \"100\"\n\n3. and submit the form::\n\n    >>> browser.getControl(name='form_submit').click()\n\nNow a new **RSS Listing** has been created::\n\n    >>> 'slashdot' in self.portal.objectIds()\n    True\n\nPublishing content\n------------------\n\nBy default, **RSS Listing** can be published by any *reviewer*. Let's\n\n1. log out::\n\n    >>> browser.getLink('Log out').click()\n\n2. open the front page::\n\n    >>> browser.open(portal_url)\n\n3. enter the log in details::\n\n    >>> browser.getControl(name='__ac_name').value = 'reviewer'\n    >>> browser.getControl(name='__ac_password').value = 'secret'\n\n4. and log in::\n\n    >>> browser.getControl(name='submit').click()\n    >>> \"You are now logged in\" in browser.contents\n    True\n\nTo publish the **RSS Listing**\n\n1. navigate to the content::\n \n    >>> browser.open(portal_url + \"/slashdot\")\n\n2. and publish it::\n\n    >>> browser.getLink('Publish').click()\n\nViewing content\n---------------\n\nPublished **RSS Listing** should be visible to everybody. Let's\n\n1. log out::\n\n    >>> browser.getLink('Log out').click()\n\n2. navigate to the content::\n\n    >>> browser.open(\"%(portal_url)s/slashdot\" % vars())\n\n**RSS Listing** is being rendered::\n\n    >>> \"Yesterday's news!\" in browser.contents\n    True\n\nWith required 10 feed items::\n\n    >>> browser.contents.count(\"<a href=\\\"http://rss.slashdot.org/\")\n    10", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://svn.plone.org/svn/collective/jyu.rsslisting", "keywords": "plone rss listing view", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "jyu.rsslisting", "package_url": "https://pypi.org/project/jyu.rsslisting/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/jyu.rsslisting/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://svn.plone.org/svn/collective/jyu.rsslisting"}, "release_url": "https://pypi.org/project/jyu.rsslisting/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "A page, which displays an RSS feeds (or aggregation of several feeds) in the same way as RSS portlet does", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>RSS Listing</strong> is a content type, which displays an RSS feed in the\nsame way as the default <strong>RSS Portlet</strong> does.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#public-resources\" id=\"id1\" rel=\"nofollow\">Public resources</a></li>\n<li><a href=\"#creating-content\" id=\"id2\" rel=\"nofollow\">Creating content</a></li>\n<li><a href=\"#publishing-content\" id=\"id3\" rel=\"nofollow\">Publishing content</a></li>\n<li><a href=\"#viewing-content\" id=\"id4\" rel=\"nofollow\">Viewing content</a></li>\n</ul>\n</div>\n<div id=\"public-resources\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Public resources</a></h2>\n<p><strong>RSS Listing</strong> installs a public resource <tt><span class=\"pre\">++resource++jyu.rsslisting.images/rsslisting_icon.gif</span></tt> for its content type icon:</p>\n<pre>&gt;&gt;&gt; from Products.Five.testbrowser import Browser\n&gt;&gt;&gt; browser = Browser(); portal_url = self.portal.absolute_url()\n&gt;&gt;&gt; browser.open(portal_url + \"/++resource++jyu.rsslisting.images/rsslisting_icon.gif\")\n</pre>\n<p>and <tt><span class=\"pre\">++resource++jyu.rsslisting.styles/rsslisting.css</span></tt> for its stylesheet:</p>\n<pre>&gt;&gt;&gt; browser.open(portal_url + \"/++resource++jyu.rsslisting.styles/rsslisting.css\")\n</pre>\n</div>\n<div id=\"creating-content\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Creating content</a></h2>\n<p>By default, adding <strong>RSS Listing</strong> is not allowed globally. Let\u2019s\nallow it to make it easier to test:</p>\n<pre>&gt;&gt;&gt; from Products.CMFCore.utils import getToolByName\n&gt;&gt;&gt; portal_types = getToolByName(self.portal, \"portal_types\")\n&gt;&gt;&gt; rss_listing = portal_types.get(\"RSS Listing\")\n&gt;&gt;&gt; rss_listing\n&lt;DynamicViewTypeInformation at /plone/portal_types/RSS Listing&gt;\n\n&gt;&gt;&gt; rss_listing.global_allow = True\n&gt;&gt;&gt; rss_listing.global_allow\nTrue\n</pre>\n<p>Now <strong>RSS Listing</strong> is addable by any <em>contributor</em>. Let\u2019s</p>\n<ol>\n<li><p>open the front page:</p>\n<pre>&gt;&gt;&gt; browser.open(portal_url)\n</pre>\n</li>\n<li><p>enter the log in details:</p>\n<pre>&gt;&gt;&gt; browser.getControl(name='__ac_name').value = 'contributor'\n&gt;&gt;&gt; browser.getControl(name='__ac_password').value = 'secret'\n</pre>\n</li>\n<li><p>and log in:</p>\n<pre>&gt;&gt;&gt; browser.getControl(name='submit').click()\n&gt;&gt;&gt; \"You are now logged in\" in browser.contents\nTrue\n</pre>\n</li>\n</ol>\n<p>Now we should be able to see <strong>RSS Listing</strong> in the <em>add item</em> menu:</p>\n<pre>&gt;&gt;&gt; browser.getLink(id='rss-listing').url.endswith(\"createObject?type_name=RSS+Listing\")\nTrue\n</pre>\n<p>To add a single <strong>RSS Listing</strong></p>\n<ol>\n<li><p>click it from the <em>add item</em> menu:</p>\n<pre>&gt;&gt;&gt; browser.getLink(id='rss-listing').click()\n</pre>\n</li>\n<li><p>enter RSS information:</p>\n<pre>&gt;&gt;&gt; browser.getControl(name='title').value = \"Slashdot\"\n&gt;&gt;&gt; browser.getControl(name='description').value = \"Yesterday's news!\"\n&gt;&gt;&gt; browser.getControl(name='url').value = \"http://rss.slashdot.org/Slashdot/slashdot\"\n&gt;&gt;&gt; browser.getControl(name='count').value = \"10\"\n&gt;&gt;&gt; browser.getControl(name='timeout').value = \"100\"\n</pre>\n</li>\n<li><p>and submit the form:</p>\n<pre>&gt;&gt;&gt; browser.getControl(name='form_submit').click()\n</pre>\n</li>\n</ol>\n<p>Now a new <strong>RSS Listing</strong> has been created:</p>\n<pre>&gt;&gt;&gt; 'slashdot' in self.portal.objectIds()\nTrue\n</pre>\n</div>\n<div id=\"publishing-content\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Publishing content</a></h2>\n<p>By default, <strong>RSS Listing</strong> can be published by any <em>reviewer</em>. Let\u2019s</p>\n<ol>\n<li><p>log out:</p>\n<pre>&gt;&gt;&gt; browser.getLink('Log out').click()\n</pre>\n</li>\n<li><p>open the front page:</p>\n<pre>&gt;&gt;&gt; browser.open(portal_url)\n</pre>\n</li>\n<li><p>enter the log in details:</p>\n<pre>&gt;&gt;&gt; browser.getControl(name='__ac_name').value = 'reviewer'\n&gt;&gt;&gt; browser.getControl(name='__ac_password').value = 'secret'\n</pre>\n</li>\n<li><p>and log in:</p>\n<pre>&gt;&gt;&gt; browser.getControl(name='submit').click()\n&gt;&gt;&gt; \"You are now logged in\" in browser.contents\nTrue\n</pre>\n</li>\n</ol>\n<p>To publish the <strong>RSS Listing</strong></p>\n<ol>\n<li><p>navigate to the content:</p>\n<pre>&gt;&gt;&gt; browser.open(portal_url + \"/slashdot\")\n</pre>\n</li>\n<li><p>and publish it:</p>\n<pre>&gt;&gt;&gt; browser.getLink('Publish').click()\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"viewing-content\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Viewing content</a></h2>\n<p>Published <strong>RSS Listing</strong> should be visible to everybody. Let\u2019s</p>\n<ol>\n<li><p>log out:</p>\n<pre>&gt;&gt;&gt; browser.getLink('Log out').click()\n</pre>\n</li>\n<li><p>navigate to the content:</p>\n<pre>&gt;&gt;&gt; browser.open(\"%(portal_url)s/slashdot\" % vars())\n</pre>\n</li>\n</ol>\n<p><strong>RSS Listing</strong> is being rendered:</p>\n<pre>&gt;&gt;&gt; \"Yesterday's news!\" in browser.contents\nTrue\n</pre>\n<p>With required 10 feed items:</p>\n<pre>&gt;&gt;&gt; browser.contents.count(\"&lt;a href=\\\"http://rss.slashdot.org/\")\n10\n</pre>\n</div>\n\n          </div>"}, "last_serial": 706035, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "9bd42898c855096950fe1e0e6230fe30", "sha256": "a3185c81c490c0f6b7d8c1c301c125fa3a17d08bdd292279842af82166f72fb8"}, "downloads": -1, "filename": "jyu.rsslisting-1.0.1.tar.gz", "has_sig": false, "md5_digest": "9bd42898c855096950fe1e0e6230fe30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15486, "upload_time": "2009-11-07T11:37:48", "upload_time_iso_8601": "2009-11-07T11:37:48.907134Z", "url": "https://files.pythonhosted.org/packages/d0/cf/0e0fa708633ea0bce7bb206b66e5d16277615dbfb7905763c4159449fd8c/jyu.rsslisting-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9bd42898c855096950fe1e0e6230fe30", "sha256": "a3185c81c490c0f6b7d8c1c301c125fa3a17d08bdd292279842af82166f72fb8"}, "downloads": -1, "filename": "jyu.rsslisting-1.0.1.tar.gz", "has_sig": false, "md5_digest": "9bd42898c855096950fe1e0e6230fe30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15486, "upload_time": "2009-11-07T11:37:48", "upload_time_iso_8601": "2009-11-07T11:37:48.907134Z", "url": "https://files.pythonhosted.org/packages/d0/cf/0e0fa708633ea0bce7bb206b66e5d16277615dbfb7905763c4159449fd8c/jyu.rsslisting-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:57 2020"}