{"info": {"author": "Carlos Montecinos Geisse", "author_email": "carlos.w.montecinos@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "=============================\ncoo: Schedule Twitter updates\n=============================\n\n.. image:: https://badge.fury.io/py/coo.svg\n    :target: https://badge.fury.io/py/coo\n.. image:: https://travis-ci.org/wilfredinni/coo.svg?branch=master\n    :target: https://travis-ci.org/wilfredinni/coo\n.. image:: https://codecov.io/gh/wilfredinni/coo/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/wilfredinni/coo\n.. image:: https://readthedocs.org/projects/coo/badge/?version=latest\n    :target: https://coo.readthedocs.io/en/latest/?badge=latest\n.. image:: https://img.shields.io/badge/License-Apache%202.0-blue.svg\n    :target: https://opensource.org/licenses/Apache-2.0\n\nCoo is an easy to use Python library for scheduling Twitter updates. To use it, you need\nto first apply for a developer account in the\n`Twitter Developers Platform <https://developer.twitter.com/>`_ and generate the Keys and\nAccess Tokens.\n\n.. code-block:: python\n\n    pip install coo\n\nInitializing\n\n.. code-block:: python\n\n    from coo import Coo\n\n    at = Coo(\n        \"consumer_key\",\n        \"consumer_secret\",\n        \"access_token\",\n        \"access_token_secret\",\n        preview=False,\n    )\n\nAlternatively, you can set ``preview=True`` and print your tweets in the terminal instead\nto post them on Twitter.\n\nScheduling Twitter updates:\n\n\n.. code-block:: python\n\n    from coo import Coo\n\n    at = Coo(\n        \"consumer_key\",\n        \"consumer_secret\",\n        \"access_token\",\n        \"access_token_secret\"\n    )\n\n    tweets = [\n        (\"2030-12-05 16:30\", template, \"Awesome Twitter update.\"),\n        (\"2030-10-28 18:50\", template, \"Another awesome Twitter update.\"),\n        (\"2030-10-29 18:15\", template2, \"One more update.\"),\n        (\"2030-11-01 13:45\", None, \"Twitter update without a template.\"),\n\n    at.schedule(tweets, time_zone=\"America/Santiago\")\n\nOr you can use a list of strings and add a ``delay``, ``interval`` and a ``template``:\n\n.. code-block:: python\n\n    tweets = [\n        \"My first awesome Twitter Update\",\n        \"My second awesome Twitter Update\",\n        \"My third awesome Twitter Update\",\n        \"My fourth awesome Twitter Update\",\n        \"My fifth awesome Twitter Update\",\n        \"My sixth awesome Twitter Update\",\n    ]\n\n    at.tweet(tweets, delay=\"13:45\", interval=\"four_hours\", template=my_template)\n\nSchedule Twitter Updates\n========================\n\nSchedule updates with `datetime` strings or integers and use custom a `Template`_ if needed.\n\n.. code-block:: python\n\n    Coo.schedule(updates, time_zone)\n\nFull example:\n\n.. code-block:: python\n\n    from coo import Coo\n\n    at = Coo(\n        \"consumer_key\",\n        \"consumer_secret\",\n        \"access_token\",\n        \"access_token_secret\"\n    )\n\n    tweets = [\n        # datetime with and without templates\n        (\"2030-10-28 18:50\", template, \"My Twitter update with a template.\"),\n        (\"2030-10-29 18:15\", template2, \"Update with a different template.\"),\n        (\"2030-11-01 13:45\", None, \"Twitter update without a template.\"),\n\n        # date with and without templates\n        (\"2030-12-25\", template3, \"Merry christmas!\"),\n        (\"2031-01-01\", None, \"And a happy new year!\"),\n\n        # time with and without templates\n        (\"18:46\", template2, \"Will be post today at 18:46.\"),\n        (\"23:00\", None, \"A tweet for today at 23:00.\"),\n\n        # integer (seconds) with and without templates\n        (3600, template, \"This tweet will be posted in an hour.\"),\n        (86400, None, \"This one, tomorrow at the same hour.\"),\n    ]\n\n    at.schedule(tweets, time_zone=\"America/Santiago\")\n\nParsing DateTime strings\n^^^^^^^^^^^^^^^^^^^^^^^^\n\n- If a time zone is not specified, it will set to `local`.\n- The time will be set to 00:00:00 if it's not specified.\n- When passing only time information the date will default to today.\n- A future date is needed, otherwise a `ScheduleError` is raised.\n\nHere you can find all the\n`Time Zones <https://en.wikipedia.org/wiki/List_of_tz_database_time_zones>`_.\n\nMedia Files\n^^^^^^^^^^^\n\nThere are two ways to add media files to your tweets. The first and easiest is to use one global file for all the updates:\n\n.. code-block:: python\n\n    at.schedule(tweets, time_zone=\"America/Santiago\", media=\"path/to/file.png\")\n\nAlso, an individual file can be set for each one of the updates:\n\n.. code-block:: python\n\n    tweets = [\n        (\"2030-10-28 18:50\", template, \"Update with an image.\", \"pics/owl.png\"),\n        (\"2030-10-29 18:15\", template, \"Update with other media.\", \"videos/funny_video.mp4\"),\n        (\"2030-11-01 13:45\", template, \"Tweet without media.\"),\n    ]\n\nFinally, it is possible to combine these to ways. For example, if most of the tweets are gonna use the same media and just a few will have a different or none:\n\n.. code-block:: python\n\n    tweets = [\n        (\"2030-11-01 13:45\", template, \"Tweet with global media.\"),\n        (\"2030-11-02 13:45\", template, \"Tweet with global media.\"),\n        (\"2030-11-03 13:45\", template, \"Tweet with global media.\"),\n        (\"2030-11-04 13:45\", template, \"Tweet with global media.\"),\n        (\"2030-11-05 13:45\", template, \"Tweet with global media.\"),\n        (\"2030-11-06 13:45\", template, \"Tweet with global media.\"),\n        (\"2030-11-07 13:45\", template, \"Tweet with global media.\"),\n        (\"2030-11-08 13:45\", template, \"Tweet without media.\", None),\n        (\"2030-11-09 13:45\", template, \"Tweet without media.\", None),\n        (\"2030-12-10 18:50\", template, \"Update with an image.\", \"pics/owl.png\"),\n        (\"2030-12-11 18:15\", template, \"Update with other media.\", \"videos/funny_video.mp4\"),\n    ]\n\n    at.schedule(tweets, time_zone=\"America/Santiago\", media=\"path/to/global_media.png\")\n\n\nTweet an ordered list of strings\n================================\n\nPost ordered updates with `Delay`_, `Interval`_, and a `Template`_ if needed.\n\n.. code-block:: python\n\n    Coo.tweet(updates, delay, interval, template, time_zone)\n\n.. code-block:: python\n\n    from coo import Coo\n\n    at = Coo(\n        \"consumer_key\",\n        \"consumer_secret\",\n        \"access_token\",\n        \"access_token_secret\"\n    )\n\n    tweets = [\n        \"My first awesome Twitter Update\",\n        \"My second awesome Twitter Update\",\n        \"My third awesome Twitter Update\",\n        \"My fourth awesome Twitter Update\",\n        \"My fifth awesome Twitter Update\",\n        \"My sixth awesome Twitter Update\",\n    ]\n\n    # post the twitter updates\n    at.tweet(tweets)\n\nDelay\n^^^^^\n\nYou can use ``datetime``, ``date`` and ``time`` strings, integers as seconds and some\n`Keywords`_: ``half_hour``, ``one_hour``, ``one_day`` and ``one_week`` between others to\ndelay the post of your first update.\n\n.. code-block:: python\n\n    # datetime, date and time strings\n    at.tweet(tweets, delay=\"2030-11-24 13:45\", time_zone=\"America/Santiago\")\n    at.tweet(tweets, delay=\"2030-11-24\", time_zone=\"Australia/Sydney\")\n    at.tweet(tweets, delay=\"13:45\", time_zone=\"America/New_York\")\n\n    # \"keywords\"\n    at.tweet(tweets, delay=\"one_week\")\n\n    # integer\n    at.tweet(tweets, delay=604800)\n\nWhen parsing DateTime strings:\n\n- If a time zone is not specified, it will set to `local`.\n- The time will be set to 00:00:00 if it's not specified.\n- When passing only time information the date will default to today.\n- A future date is needed, otherwise a `ScheduleError` is raised.\n\nHere you can find all the `Time Zones <https://en.wikipedia.org/wiki/List_of_tz_database_time_zones>`_.\n\nInterval\n^^^^^^^^\n\nUse integers as seconds or some strings as `Keywords`_: ``half_hour``, ``one_hour``,\n``one_day`` and ``one_week`` between others.\n\n.. code-block:: python\n\n    # \"keywords\"\n    at.tweet(tweets, interval=\"four_hours\")\n\n    # integers\n    at.tweet(tweets, interval=14400)\n\nMedia files\n^^^^^^^^^^^\n\nUse one media file for all of your updates:\n\n.. code-block:: python\n\n    at.tweet(tweets, media=\"path/to/media.jpeg\")\n\nRandom updates\n^^^^^^^^^^^^^^\n\nTo tweet your updates randomly:\n\n.. code-block:: python\n\n    at.tweet(tweets, aleatory=True)\n\nKeywords\n^^^^^^^^\n\n================ =======\nKeyword          Seconds\n================ =======\nnow              0\nhalf_hour        1800\none_hour         3600\ntwo_hours        7200\nfour_hours       14400\nsix_hours        21600\neight_hours      28800\nten_hours        36000\ntwelve_hours     43200\nfourteen_hours   50400\nsixteen_hours    57600\neighteen_hours   64800\ntwenty_hours     72000\ntwenty_two_hours 79200\none_day          86400\ntwo_days         172800\nthree_days       259200\nfour_days        345600\nfive_days        432000\nsix_days         518400\none_week         604800\n================ =======\n\nTemplate\n========\n\nTemplates are very simple, just use a multiline string and add a ``$message``\nwhere you want your message to appear.\n\n.. code-block:: python\n\n    template = \"\"\"My awesome header\n\n    $message\n\n    #python #coding #coo\n    \"\"\"\n\nThe Twitter API\n===============\n\nCoo is written using the `Python Twitter <https://github.com/bear/python-twitter/>`_\nwrapper, and through `Coo.api` you gain access to all of his models:\n\n.. code-block:: python\n\n    # get your followers\n    followers = at.api.GetFollowers()\n\n    # get your direct messages\n    d_messages = at.api.GetDirectMessages()\n\n    # favorited tweets\n    favorites = at.api.GetFavorites()\n\n    # mentions\n    mentions = at.api.GetMentions()\n\n    # retweets\n    retweets = at.api.GetRetweets()\n\nAnd a lot more. If you are interested, check their `documentation <https://python-twitter.readthedocs.io/en/latest/index.html>`_.\n\nDocumentation\n=============\n\nDocumentation available at `readthedocs.org <https://coo.readthedocs.io/en/latest/>`_.\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wilfredinni/coo", "keywords": "coo", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "coo", "package_url": "https://pypi.org/project/coo/", "platform": "", "project_url": "https://pypi.org/project/coo/", "project_urls": {"Homepage": "https://github.com/wilfredinni/coo"}, "release_url": "https://pypi.org/project/coo/0.1.3/", "requires_dist": ["python-twitter", "pendulum"], "requires_python": "", "summary": "Schedule Twitter Updates with Easy", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/coo\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/coo.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/07143b8f7686c43f6fbda1803832063bca300eea/68747470733a2f2f62616467652e667572792e696f2f70792f636f6f2e737667\"></a>\n<a href=\"https://travis-ci.org/wilfredinni/coo\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/wilfredinni/coo.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd6218cb2123960eed51a67b4e4927c0f30fa33d/68747470733a2f2f7472617669732d63692e6f72672f77696c66726564696e6e692f636f6f2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/wilfredinni/coo\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/wilfredinni/coo/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/20e36c76d1809d5af0af608e9fac594dc460daa8/68747470733a2f2f636f6465636f762e696f2f67682f77696c66726564696e6e692f636f6f2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://coo.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/coo/badge/?version=latest\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b140dd52949e5c9d249de1ced77ca2b7ded21b2/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f636f6f2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://opensource.org/licenses/Apache-2.0\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/License-Apache%202.0-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b97ca76cf5d8fd16c7bc4731270e0bbe53df7aa1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667\"></a>\n<p>Coo is an easy to use Python library for scheduling Twitter updates. To use it, you need\nto first apply for a developer account in the\n<a href=\"https://developer.twitter.com/\" rel=\"nofollow\">Twitter Developers Platform</a> and generate the Keys and\nAccess Tokens.</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">coo</span>\n</pre>\n<p>Initializing</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">coo</span> <span class=\"kn\">import</span> <span class=\"n\">Coo</span>\n\n<span class=\"n\">at</span> <span class=\"o\">=</span> <span class=\"n\">Coo</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"consumer_key\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"consumer_secret\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"access_token\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"access_token_secret\"</span><span class=\"p\">,</span>\n    <span class=\"n\">preview</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Alternatively, you can set <tt>preview=True</tt> and print your tweets in the terminal instead\nto post them on Twitter.</p>\n<p>Scheduling Twitter updates:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">coo</span> <span class=\"kn\">import</span> <span class=\"n\">Coo</span>\n\n<span class=\"n\">at</span> <span class=\"o\">=</span> <span class=\"n\">Coo</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"consumer_key\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"consumer_secret\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"access_token\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"access_token_secret\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">tweets</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-12-05 16:30\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Awesome Twitter update.\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-10-28 18:50\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Another awesome Twitter update.\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-10-29 18:15\"</span><span class=\"p\">,</span> <span class=\"n\">template2</span><span class=\"p\">,</span> <span class=\"s2\">\"One more update.\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-11-01 13:45\"</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s2\">\"Twitter update without a template.\"</span><span class=\"p\">),</span>\n\n<span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">schedule</span><span class=\"p\">(</span><span class=\"n\">tweets</span><span class=\"p\">,</span> <span class=\"n\">time_zone</span><span class=\"o\">=</span><span class=\"s2\">\"America/Santiago\"</span><span class=\"p\">)</span>\n</pre>\n<p>Or you can use a list of strings and add a <tt>delay</tt>, <tt>interval</tt> and a <tt>template</tt>:</p>\n<pre><span class=\"n\">tweets</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"My first awesome Twitter Update\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"My second awesome Twitter Update\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"My third awesome Twitter Update\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"My fourth awesome Twitter Update\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"My fifth awesome Twitter Update\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"My sixth awesome Twitter Update\"</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">tweet</span><span class=\"p\">(</span><span class=\"n\">tweets</span><span class=\"p\">,</span> <span class=\"n\">delay</span><span class=\"o\">=</span><span class=\"s2\">\"13:45\"</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"four_hours\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">my_template</span><span class=\"p\">)</span>\n</pre>\n<div id=\"schedule-twitter-updates\">\n<h2>Schedule Twitter Updates</h2>\n<p>Schedule updates with <cite>datetime</cite> strings or integers and use custom a <a href=\"#template\" rel=\"nofollow\">Template</a> if needed.</p>\n<pre><span class=\"n\">Coo</span><span class=\"o\">.</span><span class=\"n\">schedule</span><span class=\"p\">(</span><span class=\"n\">updates</span><span class=\"p\">,</span> <span class=\"n\">time_zone</span><span class=\"p\">)</span>\n</pre>\n<p>Full example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">coo</span> <span class=\"kn\">import</span> <span class=\"n\">Coo</span>\n\n<span class=\"n\">at</span> <span class=\"o\">=</span> <span class=\"n\">Coo</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"consumer_key\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"consumer_secret\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"access_token\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"access_token_secret\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">tweets</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># datetime with and without templates</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-10-28 18:50\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"My Twitter update with a template.\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-10-29 18:15\"</span><span class=\"p\">,</span> <span class=\"n\">template2</span><span class=\"p\">,</span> <span class=\"s2\">\"Update with a different template.\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-11-01 13:45\"</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s2\">\"Twitter update without a template.\"</span><span class=\"p\">),</span>\n\n    <span class=\"c1\"># date with and without templates</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-12-25\"</span><span class=\"p\">,</span> <span class=\"n\">template3</span><span class=\"p\">,</span> <span class=\"s2\">\"Merry christmas!\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2031-01-01\"</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s2\">\"And a happy new year!\"</span><span class=\"p\">),</span>\n\n    <span class=\"c1\"># time with and without templates</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"18:46\"</span><span class=\"p\">,</span> <span class=\"n\">template2</span><span class=\"p\">,</span> <span class=\"s2\">\"Will be post today at 18:46.\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"23:00\"</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s2\">\"A tweet for today at 23:00.\"</span><span class=\"p\">),</span>\n\n    <span class=\"c1\"># integer (seconds) with and without templates</span>\n    <span class=\"p\">(</span><span class=\"mi\">3600</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"This tweet will be posted in an hour.\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mi\">86400</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s2\">\"This one, tomorrow at the same hour.\"</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">schedule</span><span class=\"p\">(</span><span class=\"n\">tweets</span><span class=\"p\">,</span> <span class=\"n\">time_zone</span><span class=\"o\">=</span><span class=\"s2\">\"America/Santiago\"</span><span class=\"p\">)</span>\n</pre>\n<div id=\"parsing-datetime-strings\">\n<h3>Parsing DateTime strings</h3>\n<ul>\n<li>If a time zone is not specified, it will set to <cite>local</cite>.</li>\n<li>The time will be set to 00:00:00 if it\u2019s not specified.</li>\n<li>When passing only time information the date will default to today.</li>\n<li>A future date is needed, otherwise a <cite>ScheduleError</cite> is raised.</li>\n</ul>\n<p>Here you can find all the\n<a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" rel=\"nofollow\">Time Zones</a>.</p>\n</div>\n<div id=\"media-files\">\n<h3>Media Files</h3>\n<p>There are two ways to add media files to your tweets. The first and easiest is to use one global file for all the updates:</p>\n<pre><span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">schedule</span><span class=\"p\">(</span><span class=\"n\">tweets</span><span class=\"p\">,</span> <span class=\"n\">time_zone</span><span class=\"o\">=</span><span class=\"s2\">\"America/Santiago\"</span><span class=\"p\">,</span> <span class=\"n\">media</span><span class=\"o\">=</span><span class=\"s2\">\"path/to/file.png\"</span><span class=\"p\">)</span>\n</pre>\n<p>Also, an individual file can be set for each one of the updates:</p>\n<pre><span class=\"n\">tweets</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-10-28 18:50\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Update with an image.\"</span><span class=\"p\">,</span> <span class=\"s2\">\"pics/owl.png\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-10-29 18:15\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Update with other media.\"</span><span class=\"p\">,</span> <span class=\"s2\">\"videos/funny_video.mp4\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-11-01 13:45\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Tweet without media.\"</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Finally, it is possible to combine these to ways. For example, if most of the tweets are gonna use the same media and just a few will have a different or none:</p>\n<pre><span class=\"n\">tweets</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-11-01 13:45\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Tweet with global media.\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-11-02 13:45\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Tweet with global media.\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-11-03 13:45\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Tweet with global media.\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-11-04 13:45\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Tweet with global media.\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-11-05 13:45\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Tweet with global media.\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-11-06 13:45\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Tweet with global media.\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-11-07 13:45\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Tweet with global media.\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-11-08 13:45\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Tweet without media.\"</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-11-09 13:45\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Tweet without media.\"</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-12-10 18:50\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Update with an image.\"</span><span class=\"p\">,</span> <span class=\"s2\">\"pics/owl.png\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"2030-12-11 18:15\"</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"s2\">\"Update with other media.\"</span><span class=\"p\">,</span> <span class=\"s2\">\"videos/funny_video.mp4\"</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">schedule</span><span class=\"p\">(</span><span class=\"n\">tweets</span><span class=\"p\">,</span> <span class=\"n\">time_zone</span><span class=\"o\">=</span><span class=\"s2\">\"America/Santiago\"</span><span class=\"p\">,</span> <span class=\"n\">media</span><span class=\"o\">=</span><span class=\"s2\">\"path/to/global_media.png\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"tweet-an-ordered-list-of-strings\">\n<h2>Tweet an ordered list of strings</h2>\n<p>Post ordered updates with <a href=\"#delay\" rel=\"nofollow\">Delay</a>, <a href=\"#interval\" rel=\"nofollow\">Interval</a>, and a <a href=\"#template\" rel=\"nofollow\">Template</a> if needed.</p>\n<pre><span class=\"n\">Coo</span><span class=\"o\">.</span><span class=\"n\">tweet</span><span class=\"p\">(</span><span class=\"n\">updates</span><span class=\"p\">,</span> <span class=\"n\">delay</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"n\">time_zone</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">coo</span> <span class=\"kn\">import</span> <span class=\"n\">Coo</span>\n\n<span class=\"n\">at</span> <span class=\"o\">=</span> <span class=\"n\">Coo</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"consumer_key\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"consumer_secret\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"access_token\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"access_token_secret\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">tweets</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"My first awesome Twitter Update\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"My second awesome Twitter Update\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"My third awesome Twitter Update\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"My fourth awesome Twitter Update\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"My fifth awesome Twitter Update\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"My sixth awesome Twitter Update\"</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n\n<span class=\"c1\"># post the twitter updates</span>\n<span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">tweet</span><span class=\"p\">(</span><span class=\"n\">tweets</span><span class=\"p\">)</span>\n</pre>\n<div id=\"delay\">\n<h3>Delay</h3>\n<p>You can use <tt>datetime</tt>, <tt>date</tt> and <tt>time</tt> strings, integers as seconds and some\n<a href=\"#keywords\" rel=\"nofollow\">Keywords</a>: <tt>half_hour</tt>, <tt>one_hour</tt>, <tt>one_day</tt> and <tt>one_week</tt> between others to\ndelay the post of your first update.</p>\n<pre><span class=\"c1\"># datetime, date and time strings</span>\n<span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">tweet</span><span class=\"p\">(</span><span class=\"n\">tweets</span><span class=\"p\">,</span> <span class=\"n\">delay</span><span class=\"o\">=</span><span class=\"s2\">\"2030-11-24 13:45\"</span><span class=\"p\">,</span> <span class=\"n\">time_zone</span><span class=\"o\">=</span><span class=\"s2\">\"America/Santiago\"</span><span class=\"p\">)</span>\n<span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">tweet</span><span class=\"p\">(</span><span class=\"n\">tweets</span><span class=\"p\">,</span> <span class=\"n\">delay</span><span class=\"o\">=</span><span class=\"s2\">\"2030-11-24\"</span><span class=\"p\">,</span> <span class=\"n\">time_zone</span><span class=\"o\">=</span><span class=\"s2\">\"Australia/Sydney\"</span><span class=\"p\">)</span>\n<span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">tweet</span><span class=\"p\">(</span><span class=\"n\">tweets</span><span class=\"p\">,</span> <span class=\"n\">delay</span><span class=\"o\">=</span><span class=\"s2\">\"13:45\"</span><span class=\"p\">,</span> <span class=\"n\">time_zone</span><span class=\"o\">=</span><span class=\"s2\">\"America/New_York\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># \"keywords\"</span>\n<span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">tweet</span><span class=\"p\">(</span><span class=\"n\">tweets</span><span class=\"p\">,</span> <span class=\"n\">delay</span><span class=\"o\">=</span><span class=\"s2\">\"one_week\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># integer</span>\n<span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">tweet</span><span class=\"p\">(</span><span class=\"n\">tweets</span><span class=\"p\">,</span> <span class=\"n\">delay</span><span class=\"o\">=</span><span class=\"mi\">604800</span><span class=\"p\">)</span>\n</pre>\n<p>When parsing DateTime strings:</p>\n<ul>\n<li>If a time zone is not specified, it will set to <cite>local</cite>.</li>\n<li>The time will be set to 00:00:00 if it\u2019s not specified.</li>\n<li>When passing only time information the date will default to today.</li>\n<li>A future date is needed, otherwise a <cite>ScheduleError</cite> is raised.</li>\n</ul>\n<p>Here you can find all the <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" rel=\"nofollow\">Time Zones</a>.</p>\n</div>\n<div id=\"interval\">\n<h3>Interval</h3>\n<p>Use integers as seconds or some strings as <a href=\"#keywords\" rel=\"nofollow\">Keywords</a>: <tt>half_hour</tt>, <tt>one_hour</tt>,\n<tt>one_day</tt> and <tt>one_week</tt> between others.</p>\n<pre><span class=\"c1\"># \"keywords\"</span>\n<span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">tweet</span><span class=\"p\">(</span><span class=\"n\">tweets</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"four_hours\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># integers</span>\n<span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">tweet</span><span class=\"p\">(</span><span class=\"n\">tweets</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"mi\">14400</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"id2\">\n<h3>Media files</h3>\n<p>Use one media file for all of your updates:</p>\n<pre><span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">tweet</span><span class=\"p\">(</span><span class=\"n\">tweets</span><span class=\"p\">,</span> <span class=\"n\">media</span><span class=\"o\">=</span><span class=\"s2\">\"path/to/media.jpeg\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"random-updates\">\n<h3>Random updates</h3>\n<p>To tweet your updates randomly:</p>\n<pre><span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">tweet</span><span class=\"p\">(</span><span class=\"n\">tweets</span><span class=\"p\">,</span> <span class=\"n\">aleatory</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"keywords\">\n<h3>Keywords</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Keyword</th>\n<th>Seconds</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>now</td>\n<td>0</td>\n</tr>\n<tr><td>half_hour</td>\n<td>1800</td>\n</tr>\n<tr><td>one_hour</td>\n<td>3600</td>\n</tr>\n<tr><td>two_hours</td>\n<td>7200</td>\n</tr>\n<tr><td>four_hours</td>\n<td>14400</td>\n</tr>\n<tr><td>six_hours</td>\n<td>21600</td>\n</tr>\n<tr><td>eight_hours</td>\n<td>28800</td>\n</tr>\n<tr><td>ten_hours</td>\n<td>36000</td>\n</tr>\n<tr><td>twelve_hours</td>\n<td>43200</td>\n</tr>\n<tr><td>fourteen_hours</td>\n<td>50400</td>\n</tr>\n<tr><td>sixteen_hours</td>\n<td>57600</td>\n</tr>\n<tr><td>eighteen_hours</td>\n<td>64800</td>\n</tr>\n<tr><td>twenty_hours</td>\n<td>72000</td>\n</tr>\n<tr><td>twenty_two_hours</td>\n<td>79200</td>\n</tr>\n<tr><td>one_day</td>\n<td>86400</td>\n</tr>\n<tr><td>two_days</td>\n<td>172800</td>\n</tr>\n<tr><td>three_days</td>\n<td>259200</td>\n</tr>\n<tr><td>four_days</td>\n<td>345600</td>\n</tr>\n<tr><td>five_days</td>\n<td>432000</td>\n</tr>\n<tr><td>six_days</td>\n<td>518400</td>\n</tr>\n<tr><td>one_week</td>\n<td>604800</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"template\">\n<h2>Template</h2>\n<p>Templates are very simple, just use a multiline string and add a <tt>$message</tt>\nwhere you want your message to appear.</p>\n<pre><span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"My awesome header\n\n$message\n\n#python #coding #coo\n\"\"\"</span>\n</pre>\n</div>\n<div id=\"the-twitter-api\">\n<h2>The Twitter API</h2>\n<p>Coo is written using the <a href=\"https://github.com/bear/python-twitter/\" rel=\"nofollow\">Python Twitter</a>\nwrapper, and through <cite>Coo.api</cite> you gain access to all of his models:</p>\n<pre><span class=\"c1\"># get your followers</span>\n<span class=\"n\">followers</span> <span class=\"o\">=</span> <span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">GetFollowers</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># get your direct messages</span>\n<span class=\"n\">d_messages</span> <span class=\"o\">=</span> <span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">GetDirectMessages</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># favorited tweets</span>\n<span class=\"n\">favorites</span> <span class=\"o\">=</span> <span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">GetFavorites</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># mentions</span>\n<span class=\"n\">mentions</span> <span class=\"o\">=</span> <span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">GetMentions</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># retweets</span>\n<span class=\"n\">retweets</span> <span class=\"o\">=</span> <span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">GetRetweets</span><span class=\"p\">()</span>\n</pre>\n<p>And a lot more. If you are interested, check their <a href=\"https://python-twitter.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">documentation</a>.</p>\n</div>\n<div id=\"id3\">\n<h2>Documentation</h2>\n<p>Documentation available at <a href=\"https://coo.readthedocs.io/en/latest/\" rel=\"nofollow\">readthedocs.org</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 4594817, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c03562cbe29a0161bdf238474f2028e7", "sha256": "5250969510b423e3f927bae9cf2e7bef3b05fcd9dd14321bc90b92eb82eff443"}, "downloads": -1, "filename": "coo-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c03562cbe29a0161bdf238474f2028e7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7461, "upload_time": "2018-11-20T00:28:20", "upload_time_iso_8601": "2018-11-20T00:28:20.784657Z", "url": "https://files.pythonhosted.org/packages/19/37/7709891546a39f99adc264c476f757db60e802588646bd7f5245a539daa1/coo-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "033509f34248549f1d0ded876d6b08c0", "sha256": "86928b902cf4cbc1a59a89cbbbdf8bcbf8e20d2812906c3721b6cc7b0c0e9c41"}, "downloads": -1, "filename": "coo-0.1.0.tar.gz", "has_sig": false, "md5_digest": "033509f34248549f1d0ded876d6b08c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4643, "upload_time": "2018-11-20T00:28:24", "upload_time_iso_8601": "2018-11-20T00:28:24.002102Z", "url": "https://files.pythonhosted.org/packages/4e/58/5fbbb7628aef391ad39d9790f28f7e13a276e95c5e011f831dd549bcef5a/coo-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "01daf917588ecdeb28c9cc0c1c196dc4", "sha256": "c0884155b4d6674c8d79ded7190766bc37b3739bc30a8525351bf06909786251"}, "downloads": -1, "filename": "coo-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "01daf917588ecdeb28c9cc0c1c196dc4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11566, "upload_time": "2018-11-20T00:36:24", "upload_time_iso_8601": "2018-11-20T00:36:24.874723Z", "url": "https://files.pythonhosted.org/packages/30/e4/74cab8e5c02f5cd10828887ed99d66aa3e697e5609f5e1b14aca1bbf5eb7/coo-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4022852df076e636a1f3307f86f5050", "sha256": "c137edefa530cd2095c924af95ec4c6859fc9d11c2d39c63af89a938891e5adf"}, "downloads": -1, "filename": "coo-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f4022852df076e636a1f3307f86f5050", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8636, "upload_time": "2018-11-20T00:36:26", "upload_time_iso_8601": "2018-11-20T00:36:26.322165Z", "url": "https://files.pythonhosted.org/packages/7c/66/883b3f3d002ed00c22dba9cc7435a6e2ebf0edc856b78fd2723e23611754/coo-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7854f009670980c47676e2ff1434fbfd", "sha256": "e7886ada840211dcc9eebcba759b9e54b4ddf924013a09a5b7288248bf1e85da"}, "downloads": -1, "filename": "coo-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7854f009670980c47676e2ff1434fbfd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11704, "upload_time": "2018-11-29T22:35:52", "upload_time_iso_8601": "2018-11-29T22:35:52.550064Z", "url": "https://files.pythonhosted.org/packages/b3/9a/90754c51ed1302c1e870e4380ce30fdb0c029a287d70bebc5081907a1b4d/coo-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd5ea80a082ab92eb92f7058f6e753c2", "sha256": "fe7a50e5a23aaf73d8544faa6ecf77a30efa0b90971d236cd11cdb11c14739f1"}, "downloads": -1, "filename": "coo-0.1.2.tar.gz", "has_sig": false, "md5_digest": "cd5ea80a082ab92eb92f7058f6e753c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8751, "upload_time": "2018-11-29T22:35:54", "upload_time_iso_8601": "2018-11-29T22:35:54.882075Z", "url": "https://files.pythonhosted.org/packages/3b/47/71f27c21733b64e07c701e19c4038968b69554f4e8aeef653a2743ec107a/coo-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "89d3fed05183726f79a851be46bba196", "sha256": "a651838166f6c72d5e4482746b420a2bdb38c8266b24c8a5147e9ce17c4bdbcb"}, "downloads": -1, "filename": "coo-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "89d3fed05183726f79a851be46bba196", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12430, "upload_time": "2018-12-13T15:35:06", "upload_time_iso_8601": "2018-12-13T15:35:06.917217Z", "url": "https://files.pythonhosted.org/packages/92/72/f370bf72150eac135449cd58034c8abd7ba51bbc02023251d95762dda1fe/coo-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81f658be37fe37db698225740a3c44d1", "sha256": "63f7196307ec708f204bbf696ed032310b7cf15069dfcf2df239526fd64a7235"}, "downloads": -1, "filename": "coo-0.1.3.tar.gz", "has_sig": false, "md5_digest": "81f658be37fe37db698225740a3c44d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10109, "upload_time": "2018-12-13T15:35:09", "upload_time_iso_8601": "2018-12-13T15:35:09.982492Z", "url": "https://files.pythonhosted.org/packages/a5/9e/a6bc262c9832b3df14c3803d4be9bd29187eff87c7823b92e3e51c0d2542/coo-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "89d3fed05183726f79a851be46bba196", "sha256": "a651838166f6c72d5e4482746b420a2bdb38c8266b24c8a5147e9ce17c4bdbcb"}, "downloads": -1, "filename": "coo-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "89d3fed05183726f79a851be46bba196", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12430, "upload_time": "2018-12-13T15:35:06", "upload_time_iso_8601": "2018-12-13T15:35:06.917217Z", "url": "https://files.pythonhosted.org/packages/92/72/f370bf72150eac135449cd58034c8abd7ba51bbc02023251d95762dda1fe/coo-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81f658be37fe37db698225740a3c44d1", "sha256": "63f7196307ec708f204bbf696ed032310b7cf15069dfcf2df239526fd64a7235"}, "downloads": -1, "filename": "coo-0.1.3.tar.gz", "has_sig": false, "md5_digest": "81f658be37fe37db698225740a3c44d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10109, "upload_time": "2018-12-13T15:35:09", "upload_time_iso_8601": "2018-12-13T15:35:09.982492Z", "url": "https://files.pythonhosted.org/packages/a5/9e/a6bc262c9832b3df14c3803d4be9bd29187eff87c7823b92e3e51c0d2542/coo-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:25 2020"}