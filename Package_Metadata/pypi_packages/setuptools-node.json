{"info": {"author": "Dan Johnson", "author_email": "dj51d@warbirdsurvivors.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Build Tools"], "description": "# setuptools extensions for working with Node.js\n\nThe setuptools_node package contains a number of useful setuptools extensions\nfor working with Node.js, many useful web development tools can be found in the\nnpm ecosystem.\n\n## General Use\n\nIn general custom setuptools command are used by registering the custom command\nin the `cmdclass` argument to the `setup()` function\n\n```python\nsetup(cmdclass={ 'my_command': MyCommand })\n```\n\n### General options\n\nBy default all paths are relative to the directory containing `setup.py`.  Node\nwill be in the `node` directory and node modules in `node_modules`\n\n* `--node-dir` Specify an alternate directory where node may be found\n* `--node-modules-dir` Specify an alternate directory for node modules\n\n## InstallNode\n\nThe `InstallNode` command is used to fetch a copy of node.js and install it\nin the project directory.  The download will be cached in the `cache` directory\nto facilitate a quick reinstall.\n\n### InstallNode Options\n\n* `--node-dist-url` Specify the URL from which to fetch node\n* `--node-version` Specify the version of node to fetch\n* `--cache-dir` Specify the directory in which to store the node download\n\nsetup.py:\n\n```python\nfrom setuptools_node import InstallNode\n\n\nsetup(cmdclass={ 'install_node': InstallNode })\n```\n\nUse:\n\n```sh\nuser@host $ python setup.py install_node\n```\n\n## NpmInstall\n\nThe `NpmInstall` command is used to install modules from npm.  By default\n`npm install` is used, `npm ci` may be specified with `--use-ci`\n\n### NpmInstall Options\n\n* `--use-ci` Use `npm ci` to install modules instead of `npm install`\n\nsetup.py:\n\n```python\nfrom setuptools_node import NpmInstall\n\n\nsetup(cmdclass={ 'npm_install': NpmInstall })\n```\n\nUse:\n\n```sh\nuser@host $ python setup.py npm_install  # or\nuser@host $ python setup.py npm_install --use-ci\n```\n\n## Gulp\n\nThe `Gulp` command runs the gulp build tool\n\n### Gulp Options\n\n* `--task` Specify the task to run insteaed of the default.  Multiple tasks may\n  be specified as a comma separated list.\n\nsetup.py:\n\n```python\nfrom setuptools_node import Gulp\n\n\nsetup(cmdclass={ 'gulp': Gulp })\n```\n\nUse:\n\n```sh\nuser@host $ python setup.py gulp  # run default task\nuser@host $ python setup.py gulp --task foo  # run the 'foo' task\nuser@host $ python setup.py gupl --task clean,foo # run 'clean' and 'foo' tasks\n```\n\n## GulpBuild\n\nThe `GulpBuild` command provides a version of `build_py` that executes gulp\nbefore proceeding with the normal `build_py` process, this allows you to\nbuild/transform static files for a web application before they are included\nin the package built by `build_py`.\n\nNode will be installed if it is not found, and modules will be\ninstalled/updated.\n\n### GulpBuild Options\n\n* `--task` Specify the task to run insteaed of the default.  Multiple tasks may\n  be specified as a comma separated list.\n\nSince you don't generally run `build_py` directly, you will need to add any\narguments to the setup.cfg:\n\n```ini\n[build_py]\ntask=myGulpTask\n```\n\nsetup.py:\n\n```python\nfrom setuptools_node import GulpBuild\n\n\nsetup(cmdclass={ 'build_py': GulpBuild })\n```\n\nUse:\n\n```sh\nuser@host $ python setup.py bdist_wheel\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dj51d/setuptools-node", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "setuptools-node", "package_url": "https://pypi.org/project/setuptools-node/", "platform": "", "project_url": "https://pypi.org/project/setuptools-node/", "project_urls": {"Homepage": "https://github.com/dj51d/setuptools-node"}, "release_url": "https://pypi.org/project/setuptools-node/0.2.0/", "requires_dist": ["setuptools (>=40.0.0)"], "requires_python": ">=3.6", "summary": "Setuptools extensions for working with node", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>setuptools extensions for working with Node.js</h1>\n<p>The setuptools_node package contains a number of useful setuptools extensions\nfor working with Node.js, many useful web development tools can be found in the\nnpm ecosystem.</p>\n<h2>General Use</h2>\n<p>In general custom setuptools command are used by registering the custom command\nin the <code>cmdclass</code> argument to the <code>setup()</code> function</p>\n<pre><span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"n\">cmdclass</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"s1\">'my_command'</span><span class=\"p\">:</span> <span class=\"n\">MyCommand</span> <span class=\"p\">})</span>\n</pre>\n<h3>General options</h3>\n<p>By default all paths are relative to the directory containing <code>setup.py</code>.  Node\nwill be in the <code>node</code> directory and node modules in <code>node_modules</code></p>\n<ul>\n<li><code>--node-dir</code> Specify an alternate directory where node may be found</li>\n<li><code>--node-modules-dir</code> Specify an alternate directory for node modules</li>\n</ul>\n<h2>InstallNode</h2>\n<p>The <code>InstallNode</code> command is used to fetch a copy of node.js and install it\nin the project directory.  The download will be cached in the <code>cache</code> directory\nto facilitate a quick reinstall.</p>\n<h3>InstallNode Options</h3>\n<ul>\n<li><code>--node-dist-url</code> Specify the URL from which to fetch node</li>\n<li><code>--node-version</code> Specify the version of node to fetch</li>\n<li><code>--cache-dir</code> Specify the directory in which to store the node download</li>\n</ul>\n<p>setup.py:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">setuptools_node</span> <span class=\"kn\">import</span> <span class=\"n\">InstallNode</span>\n\n\n<span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"n\">cmdclass</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"s1\">'install_node'</span><span class=\"p\">:</span> <span class=\"n\">InstallNode</span> <span class=\"p\">})</span>\n</pre>\n<p>Use:</p>\n<pre>user@host $ python setup.py install_node\n</pre>\n<h2>NpmInstall</h2>\n<p>The <code>NpmInstall</code> command is used to install modules from npm.  By default\n<code>npm install</code> is used, <code>npm ci</code> may be specified with <code>--use-ci</code></p>\n<h3>NpmInstall Options</h3>\n<ul>\n<li><code>--use-ci</code> Use <code>npm ci</code> to install modules instead of <code>npm install</code></li>\n</ul>\n<p>setup.py:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">setuptools_node</span> <span class=\"kn\">import</span> <span class=\"n\">NpmInstall</span>\n\n\n<span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"n\">cmdclass</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"s1\">'npm_install'</span><span class=\"p\">:</span> <span class=\"n\">NpmInstall</span> <span class=\"p\">})</span>\n</pre>\n<p>Use:</p>\n<pre>user@host $ python setup.py npm_install  <span class=\"c1\"># or</span>\nuser@host $ python setup.py npm_install --use-ci\n</pre>\n<h2>Gulp</h2>\n<p>The <code>Gulp</code> command runs the gulp build tool</p>\n<h3>Gulp Options</h3>\n<ul>\n<li><code>--task</code> Specify the task to run insteaed of the default.  Multiple tasks may\nbe specified as a comma separated list.</li>\n</ul>\n<p>setup.py:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">setuptools_node</span> <span class=\"kn\">import</span> <span class=\"n\">Gulp</span>\n\n\n<span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"n\">cmdclass</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"s1\">'gulp'</span><span class=\"p\">:</span> <span class=\"n\">Gulp</span> <span class=\"p\">})</span>\n</pre>\n<p>Use:</p>\n<pre>user@host $ python setup.py gulp  <span class=\"c1\"># run default task</span>\nuser@host $ python setup.py gulp --task foo  <span class=\"c1\"># run the 'foo' task</span>\nuser@host $ python setup.py gupl --task clean,foo <span class=\"c1\"># run 'clean' and 'foo' tasks</span>\n</pre>\n<h2>GulpBuild</h2>\n<p>The <code>GulpBuild</code> command provides a version of <code>build_py</code> that executes gulp\nbefore proceeding with the normal <code>build_py</code> process, this allows you to\nbuild/transform static files for a web application before they are included\nin the package built by <code>build_py</code>.</p>\n<p>Node will be installed if it is not found, and modules will be\ninstalled/updated.</p>\n<h3>GulpBuild Options</h3>\n<ul>\n<li><code>--task</code> Specify the task to run insteaed of the default.  Multiple tasks may\nbe specified as a comma separated list.</li>\n</ul>\n<p>Since you don't generally run <code>build_py</code> directly, you will need to add any\narguments to the setup.cfg:</p>\n<pre><span class=\"k\">[build_py]</span>\n<span class=\"na\">task</span><span class=\"o\">=</span><span class=\"s\">myGulpTask</span>\n</pre>\n<p>setup.py:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">setuptools_node</span> <span class=\"kn\">import</span> <span class=\"n\">GulpBuild</span>\n\n\n<span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"n\">cmdclass</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"s1\">'build_py'</span><span class=\"p\">:</span> <span class=\"n\">GulpBuild</span> <span class=\"p\">})</span>\n</pre>\n<p>Use:</p>\n<pre>user@host $ python setup.py bdist_wheel\n</pre>\n\n          </div>"}, "last_serial": 6708333, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "231f7eed60669ee11d184b9f2553864d", "sha256": "6c34f9e29e4072e2c824d1252aab1747785bb2903e60f0aec7587c19cd19a244"}, "downloads": -1, "filename": "setuptools_node-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "231f7eed60669ee11d184b9f2553864d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6586, "upload_time": "2020-01-23T02:35:47", "upload_time_iso_8601": "2020-01-23T02:35:47.183446Z", "url": "https://files.pythonhosted.org/packages/9e/89/18371716173432b184e341a685757fa9468ede0a61a396b4b03e52ff3ea3/setuptools_node-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc03303a2fd38c0e368f981605ffe4dd", "sha256": "64752f61702ad17e2dfd888b4e218a6f0c1dc9586827aa214486d82330eaf51d"}, "downloads": -1, "filename": "setuptools_node-0.1.2.tar.gz", "has_sig": false, "md5_digest": "dc03303a2fd38c0e368f981605ffe4dd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5343, "upload_time": "2020-01-23T02:35:49", "upload_time_iso_8601": "2020-01-23T02:35:49.568513Z", "url": "https://files.pythonhosted.org/packages/85/26/2b04f9034810a67026c718906f19a9015e7479482277c0d50d169039721e/setuptools_node-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "abb66ce7f0ea556ccb7dba89296a0d05", "sha256": "3cb6b9ed20b6278a9a5545c4cfe01588abafa83774cd882265fdcf784562e6e9"}, "downloads": -1, "filename": "setuptools_node-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "abb66ce7f0ea556ccb7dba89296a0d05", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6811, "upload_time": "2020-01-27T01:54:13", "upload_time_iso_8601": "2020-01-27T01:54:13.496080Z", "url": "https://files.pythonhosted.org/packages/b4/5f/fca39ea324edc2d07c67de1c0c4f18c09e6d48e47d031bfd3ae2655b9225/setuptools_node-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48a2fb7eebb49ef7c42d46f375fde436", "sha256": "78b16b85a239d42f505dfb20ddfa56f5aec32067912288c61d47bbd6ea925d7c"}, "downloads": -1, "filename": "setuptools_node-0.1.3.tar.gz", "has_sig": false, "md5_digest": "48a2fb7eebb49ef7c42d46f375fde436", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5718, "upload_time": "2020-01-27T01:54:14", "upload_time_iso_8601": "2020-01-27T01:54:14.992699Z", "url": "https://files.pythonhosted.org/packages/a4/e5/d2df747a315271783da47249b44a96a63b370b31cc94232b1de40f5f8f17/setuptools_node-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "583be671be2d56d024a64ac8dddfac6e", "sha256": "31b1837cecad4415571456bb3e1b57a9bc88297c26a57c79d4553eedfe8e51d9"}, "downloads": -1, "filename": "setuptools_node-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "583be671be2d56d024a64ac8dddfac6e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6812, "upload_time": "2020-01-27T02:11:10", "upload_time_iso_8601": "2020-01-27T02:11:10.246799Z", "url": "https://files.pythonhosted.org/packages/44/92/35cc3a422a39b35eecd8282a86a5ef68ae18b906bdac27231018f907f222/setuptools_node-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "463a453e081ba7fc89e8995a8fd44c0c", "sha256": "e03ce6fd95ba08361f642eaa416d86b5ade48246f7383ba87b798a6662022e03"}, "downloads": -1, "filename": "setuptools_node-0.1.4.tar.gz", "has_sig": false, "md5_digest": "463a453e081ba7fc89e8995a8fd44c0c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5724, "upload_time": "2020-01-27T02:11:11", "upload_time_iso_8601": "2020-01-27T02:11:11.355081Z", "url": "https://files.pythonhosted.org/packages/df/38/d98588763a2ebaff330ac91d4da2fd81f61881963dba451f6618d24bb20e/setuptools_node-0.1.4.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "cd029a0cfdf94f3a55cb8531da4aeb3c", "sha256": "2e8ebdd2c403a3c26018e8daae4f009a4394a29357d220fa4a61776470bc0599"}, "downloads": -1, "filename": "setuptools_node-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cd029a0cfdf94f3a55cb8531da4aeb3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6981, "upload_time": "2020-02-27T02:00:45", "upload_time_iso_8601": "2020-02-27T02:00:45.356510Z", "url": "https://files.pythonhosted.org/packages/cd/be/98766eabd5e870f3978e19e81b3ee4440e4451c89c24bc3c3c7756efe5a4/setuptools_node-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8133487a50ef8139cdc142f90d41a3f6", "sha256": "afc22633d384d349ff5240b45d8f86758950b1e7bada0e6dcb7dfd9c7fa4b4cd"}, "downloads": -1, "filename": "setuptools_node-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8133487a50ef8139cdc142f90d41a3f6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5803, "upload_time": "2020-02-27T02:00:46", "upload_time_iso_8601": "2020-02-27T02:00:46.771917Z", "url": "https://files.pythonhosted.org/packages/d7/00/291896601d70e7c96eb2222aaa51ca13add315edb6f3129cf46200c94be5/setuptools_node-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cd029a0cfdf94f3a55cb8531da4aeb3c", "sha256": "2e8ebdd2c403a3c26018e8daae4f009a4394a29357d220fa4a61776470bc0599"}, "downloads": -1, "filename": "setuptools_node-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cd029a0cfdf94f3a55cb8531da4aeb3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6981, "upload_time": "2020-02-27T02:00:45", "upload_time_iso_8601": "2020-02-27T02:00:45.356510Z", "url": "https://files.pythonhosted.org/packages/cd/be/98766eabd5e870f3978e19e81b3ee4440e4451c89c24bc3c3c7756efe5a4/setuptools_node-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8133487a50ef8139cdc142f90d41a3f6", "sha256": "afc22633d384d349ff5240b45d8f86758950b1e7bada0e6dcb7dfd9c7fa4b4cd"}, "downloads": -1, "filename": "setuptools_node-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8133487a50ef8139cdc142f90d41a3f6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5803, "upload_time": "2020-02-27T02:00:46", "upload_time_iso_8601": "2020-02-27T02:00:46.771917Z", "url": "https://files.pythonhosted.org/packages/d7/00/291896601d70e7c96eb2222aaa51ca13add315edb6f3129cf46200c94be5/setuptools_node-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:29 2020"}