{"info": {"author": "Stephen Moore", "author_email": "delfick755@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "GPGLib2\n=======\n\nThis is a Python3 compatible fork of the gpglib library with support for AES\nsecret keys and the mdc packet types.\n\nHistory\n-------\n\nBack in 2012 we couldn't find a library for decrypting gpg that didn't shell out\nto gpg.\n\nAnd shelling out to gpg is slow when you do it for many small files.\n\nSo, with the help of http://pypi.python.org/pypi/OpenPGP and PyCrypto we created\nthis, which is more performant than shelling out.\n\nThen in 2017 a friend needed this library for a task, but the library wasn't\ncompatible with python3. Unfortunately we couldn't get write access back to the\noriginal gpglib, so we have created a fork.\n\nChangeLog\n---------\n\n0.3.1\n  * Update pycryptodome for CVE-2018-15560\n  * Remove use of a private method in pycryptodome when decrypting session keys\n\n0.3\n  * Migrated from pycrypto to pycryptodome\n\nInstalling\n==========\n\nTo install, just use pip::\n\n    $ pip install gpglib2\n\nOr download from pypi: http://pypi.python.org/pypi/gpglib2.\n\nOr clone the git repo: https://github.com/delfick/gpglib2.\n\nMaking test data\n================\n\nThis is what I did to get the data in tests/data.\n\nFrom within tests/data::\n\n    $ gpg --full-gen-key --homedir ./gpg\n    # Once with RSA encrypt and sign, username Stephen and password \"password25\"\n    # And again with DSA/Elgamal, username Bobby and password \"password25\"\n\nThen find the keyid::\n\n    $ gpg --homedir ./gpg --list-keys\n      ------------------------------------------------------------------------\n      pub   rsa2048 2018-08-03 [SC]\n            F93E6E1B45D1C037B42650DE52320610E94B004B\n      uid           [ultimate] Stephen <stephen@stephen.com>\n      sub   rsa2048 2018-08-03 [E]\n\n      pub   dsa2048 2018-08-03 [SC]\n            A02F07AF335D3212FEB29C44FF5D18CBDBE4C62B\n      uid           [ultimate] Bobby <bobby@bobby.com>\n      sub   elg2048 2018-08-03 [E]\n\n    # Here, the key we want is \"F93E6E1B45D1C037B42650DE52320610E94B004B\"\n\nThen with that keyid export the secret and public keys for both the rsa and dsa keys::\n\n    $ export KEY=F93E6E1B45D1C037B42650DE52320610E94B004B\n    $ gpg --export $KEY > keys/key.public.rsa.gpg\n    $ gpg --export-secret-key $KEY > keys/key.secret.rsa.gpg\n\nI then created dump.small and dump.big as random json structures (the big on is from http://json.org/example.html).\n\nThen run ``./tests/data/generate_test_data.sh`` to generate messages in the\n``tests/encrypted`` folder. \n\nNote that this is only necessary if you are editing ``generate_test_data.sh`` to\naccommodate different options. If you are doing this then you will also need\nto do the same to ``tests/test_decryption.py`` to take the different data into\naccount.\n\nTests\n=====\n\nInstall the pip requirements::\n\n    $ pip install -e \".[tests]\"\n\nAnd then run::\n\n    $ ./test.sh\n\nCurrently not much is tested.\n\nNote that if you also do a ``pip install tox`` then you may run the tests with\ndifferent python versions by running ``tox``\n\nDocs\n====\n\nYou can build the docs yourself by going into the docs directory and running\n``./build.sh`` and then run ``python3 -m http.server`` and navigate to\n``localhost:8000/sphinx/_build/html/``\n\nGenerated documentation is also available at: http://gpglib2.readthedocs.org/en/latest/", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "gpg decrypt", "license": "LGPLv2", "maintainer": "", "maintainer_email": "", "name": "gpglib2", "package_url": "https://pypi.org/project/gpglib2/", "platform": "", "project_url": "https://pypi.org/project/gpglib2/", "project_urls": null, "release_url": "https://pypi.org/project/gpglib2/0.3.1/", "requires_dist": null, "requires_python": "", "summary": "A python3 compatible fork of gpglib, a Library for decrypting gpg that doesn't shell out to gpg", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"gpglib2\">\n<h2>GPGLib2</h2>\n<p>This is a Python3 compatible fork of the gpglib library with support for AES\nsecret keys and the mdc packet types.</p>\n<div id=\"history\">\n<h3>History</h3>\n<p>Back in 2012 we couldn\u2019t find a library for decrypting gpg that didn\u2019t shell out\nto gpg.</p>\n<p>And shelling out to gpg is slow when you do it for many small files.</p>\n<p>So, with the help of <a href=\"http://pypi.python.org/pypi/OpenPGP\" rel=\"nofollow\">http://pypi.python.org/pypi/OpenPGP</a> and PyCrypto we created\nthis, which is more performant than shelling out.</p>\n<p>Then in 2017 a friend needed this library for a task, but the library wasn\u2019t\ncompatible with python3. Unfortunately we couldn\u2019t get write access back to the\noriginal gpglib, so we have created a fork.</p>\n</div>\n<div id=\"changelog\">\n<h3>ChangeLog</h3>\n<dl>\n<dt>0.3.1</dt>\n<dd><ul>\n<li>Update pycryptodome for CVE-2018-15560</li>\n<li>Remove use of a private method in pycryptodome when decrypting session keys</li>\n</ul>\n</dd>\n<dt>0.3</dt>\n<dd><ul>\n<li>Migrated from pycrypto to pycryptodome</li>\n</ul>\n</dd>\n</dl>\n</div>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>To install, just use pip:</p>\n<pre>$ pip install gpglib2\n</pre>\n<p>Or download from pypi: <a href=\"http://pypi.python.org/pypi/gpglib2\" rel=\"nofollow\">http://pypi.python.org/pypi/gpglib2</a>.</p>\n<p>Or clone the git repo: <a href=\"https://github.com/delfick/gpglib2\" rel=\"nofollow\">https://github.com/delfick/gpglib2</a>.</p>\n</div>\n<div id=\"making-test-data\">\n<h2>Making test data</h2>\n<p>This is what I did to get the data in tests/data.</p>\n<p>From within tests/data:</p>\n<pre>$ gpg --full-gen-key --homedir ./gpg\n# Once with RSA encrypt and sign, username Stephen and password \"password25\"\n# And again with DSA/Elgamal, username Bobby and password \"password25\"\n</pre>\n<p>Then find the keyid:</p>\n<pre>$ gpg --homedir ./gpg --list-keys\n  ------------------------------------------------------------------------\n  pub   rsa2048 2018-08-03 [SC]\n        F93E6E1B45D1C037B42650DE52320610E94B004B\n  uid           [ultimate] Stephen &lt;stephen@stephen.com&gt;\n  sub   rsa2048 2018-08-03 [E]\n\n  pub   dsa2048 2018-08-03 [SC]\n        A02F07AF335D3212FEB29C44FF5D18CBDBE4C62B\n  uid           [ultimate] Bobby &lt;bobby@bobby.com&gt;\n  sub   elg2048 2018-08-03 [E]\n\n# Here, the key we want is \"F93E6E1B45D1C037B42650DE52320610E94B004B\"\n</pre>\n<p>Then with that keyid export the secret and public keys for both the rsa and dsa keys:</p>\n<pre>$ export KEY=F93E6E1B45D1C037B42650DE52320610E94B004B\n$ gpg --export $KEY &gt; keys/key.public.rsa.gpg\n$ gpg --export-secret-key $KEY &gt; keys/key.secret.rsa.gpg\n</pre>\n<p>I then created dump.small and dump.big as random json structures (the big on is from <a href=\"http://json.org/example.html\" rel=\"nofollow\">http://json.org/example.html</a>).</p>\n<p>Then run <tt>./tests/data/generate_test_data.sh</tt> to generate messages in the\n<tt>tests/encrypted</tt> folder.</p>\n<p>Note that this is only necessary if you are editing <tt>generate_test_data.sh</tt> to\naccommodate different options. If you are doing this then you will also need\nto do the same to <tt>tests/test_decryption.py</tt> to take the different data into\naccount.</p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>Install the pip requirements:</p>\n<pre>$ pip install -e \".[tests]\"\n</pre>\n<p>And then run:</p>\n<pre>$ ./test.sh\n</pre>\n<p>Currently not much is tested.</p>\n<p>Note that if you also do a <tt>pip install tox</tt> then you may run the tests with\ndifferent python versions by running <tt>tox</tt></p>\n</div>\n<div id=\"docs\">\n<h2>Docs</h2>\n<p>You can build the docs yourself by going into the docs directory and running\n<tt>./build.sh</tt> and then run <tt>python3 <span class=\"pre\">-m</span> http.server</tt> and navigate to\n<tt>localhost:8000/sphinx/_build/html/</tt></p>\n<p>Generated documentation is also available at: <a href=\"http://gpglib2.readthedocs.org/en/latest/\" rel=\"nofollow\">http://gpglib2.readthedocs.org/en/latest/</a></p>\n</div>\n\n          </div>"}, "last_serial": 4228462, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "4e447595d0632001e2fba4ead3a4bc72", "sha256": "b4e71446d26921c22974d7a3da93da33d763c40bf16963a60c358a9b6c83d6d3"}, "downloads": -1, "filename": "gpglib2-0.2.tar.gz", "has_sig": false, "md5_digest": "4e447595d0632001e2fba4ead3a4bc72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14257, "upload_time": "2018-01-28T02:21:17", "upload_time_iso_8601": "2018-01-28T02:21:17.092230Z", "url": "https://files.pythonhosted.org/packages/c8/f5/b29b053ec1f129da4d4de1e10e6301a8c586b2cd45f6cffeb97b1de93d16/gpglib2-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "51da06ae8a845aa31f5b94995bad75ff", "sha256": "0bfc104b0729b7e2a3bc8bdc082841b0301e7a9c5a85e36532ba29d46052320a"}, "downloads": -1, "filename": "gpglib2-0.2.1.tar.gz", "has_sig": false, "md5_digest": "51da06ae8a845aa31f5b94995bad75ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14060, "upload_time": "2018-02-07T04:11:14", "upload_time_iso_8601": "2018-02-07T04:11:14.610800Z", "url": "https://files.pythonhosted.org/packages/26/82/f104bf4c8c3900654ba079442d8f2f532f42fafef2b5c3136ed6f461e23a/gpglib2-0.2.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "4cbd8dba814491deace4db313da3150b", "sha256": "047921202dd91a63e1289b72fabc7d22934be735b3c6462c4242f9fe5c73c261"}, "downloads": -1, "filename": "gpglib2-0.3.tar.gz", "has_sig": false, "md5_digest": "4cbd8dba814491deace4db313da3150b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14709, "upload_time": "2018-08-04T05:45:49", "upload_time_iso_8601": "2018-08-04T05:45:49.259464Z", "url": "https://files.pythonhosted.org/packages/96/ca/f3250f8c08eb1054adcb405eda5da6fe0e3ecabf5a488615bfdbd8d26bb2/gpglib2-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "d1508169525ce5ac4f305f319b6587c7", "sha256": "96ef8fe9c35925b62610d26e2ce40f29944cb628fb6611707f9caef9674fefbd"}, "downloads": -1, "filename": "gpglib2-0.3.1.tar.gz", "has_sig": false, "md5_digest": "d1508169525ce5ac4f305f319b6587c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16665, "upload_time": "2018-09-01T05:05:48", "upload_time_iso_8601": "2018-09-01T05:05:48.852170Z", "url": "https://files.pythonhosted.org/packages/27/bd/b29275fe6171aea34b3891db4267ebaf3096577f9e10e5e3f551ef4abc5a/gpglib2-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d1508169525ce5ac4f305f319b6587c7", "sha256": "96ef8fe9c35925b62610d26e2ce40f29944cb628fb6611707f9caef9674fefbd"}, "downloads": -1, "filename": "gpglib2-0.3.1.tar.gz", "has_sig": false, "md5_digest": "d1508169525ce5ac4f305f319b6587c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16665, "upload_time": "2018-09-01T05:05:48", "upload_time_iso_8601": "2018-09-01T05:05:48.852170Z", "url": "https://files.pythonhosted.org/packages/27/bd/b29275fe6171aea34b3891db4267ebaf3096577f9e10e5e3f551ef4abc5a/gpglib2-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:19 2020"}