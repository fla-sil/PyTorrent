{"info": {"author": "Charles Tapley Hoyt", "author_email": "cthoyt@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Chemistry"], "description": "BEL Commons |build| |docs|\n==========================\nAn environment for curating, validating, and exploring knowledge assemblies\nencoded in Biological Expression Language (BEL) to support elucidating\ndisease-specific, mechanistic insight.\n\nInstallation\n~~~~~~~~~~~~\nBEL Commons can be installed easily from `PyPI <https://pypi.python.org/pypi/bel_commons>`_ with the following code in\nyour favorite shell:\n\n.. code-block:: sh\n\n    $ pip install bel_commons\n\nGet the latest code on `GitHub <https://github.com/bel-commons/bel-commons>`_\nwith:\n\n.. code-block:: sh\n\n    $ python3 -m pip install git+https://github.com/bel-commons/bel-commons.git\n\nIt's also suggested to use a relational database management system like PostgreSQL\nand install their corresponding connectors:\n\n.. code-block:: sh\n\n    $ python3 -m pip install psycopg2-binary\n\nUsage\n-----\nRun BEL Commons\n~~~~~~~~~~~~~~~\nA test server can be easily run with:\n\n.. code-block:: sh\n\n    $ bel-commons run\n\nA more powerful server like ``gunicorn`` can also be used like:\n\n.. code-block:: sh\n\n    $ gunicorn bel_commons.wsgi:flask_app\n\nRunning with the Parser\n~~~~~~~~~~~~~~~~~~~~~~~\nTo run the parser, you'll need an instance of a message queue like `RabbitMQ <https://www.rabbitmq.com>`_ (or\nany other message queue supported by `Celery <https://pypi.python.org/pypi/celery>`_), a results backend like\n`Redis <https://redis.io/>`_, and a worker. It's best to run in docker if you want to do this.\n\nRun with Docker\n~~~~~~~~~~~~~~~\nClone this repo from GitHub\n\n.. code-block:: sh\n\n   $ git clone https://github.com/bel-commons/bel-commons.git\n   $ cd bel-commons\n\nCreate a file called ``.env`` and generate both ``SECRET_KEY`` and ``SECURITY_PASSWORD_SALT``.\n\n.. code-block:: sh\n\n    SECRET_KEY=mypassword\n    SECURITY_PASSWORD_SALT=mypassword\n    BUTLER_NAME=\"BEL Commons Butler\"\n    BUTLER_EMAIL=bel@example.com\n    BUTLER_PASSWORD=butlerpassword\n\nRun docker compose:\n\n.. code-block:: sh\n\n    $ docker-compose up\n\nPorts exposed:\n\n- 5002: BEL Commons web application\n- 5432: PostgreSQL database\n\n\nReset the Database\n~~~~~~~~~~~~~~~~~~\nFor the times when you just have to burn it down and start over:\n\n1. ``bel-commons manage drop`` will nuke the database and output a user list\n2. ``bel-commons manage load`` will automatically add the most recently exported\n   user list\n3. ``bel-commons manage examples load`` will automatically load some example\n   networks and data sets\n\nCitation\n--------\nIf you find BEL Commons useful in your work, please consider citing [Hoyt2018]_ and [Hoyt2017]_:\n\n.. [Hoyt2018] Hoyt, C. T., Domingo-Fern\u00e1ndez, D., & Hofmann-Apitius, M. (2018). `BEL Commons: an environment for\n              exploration and analysis of networks encoded in Biological Expression Language\n              <https://doi.org/10.1093/database/bay126>`_. *Database*, 2018(3), 1\u201311.\n.. [Hoyt2017] Hoyt, C. T., Konotopez, A., & Ebeling, C., (2017). `PyBEL: a computational framework for Biological\n              Expression Language <https://doi.org/10.1093/bioinformatics/btx660>`_. *Bioinformatics*,\n              34(4), 703\u2013704.\n\nAcknowledgements\n----------------\nSupporters\n~~~~~~~~~~\nThis project has been supported by several organizations:\n\n- `University of Bonn <https://www.uni-bonn.de>`_\n- `Bonn Aachen International Center for IT <http://www.b-it-center.de>`_\n- `Fraunhofer Institute for Algorithms and Scientific Computing <https://www.scai.fraunhofer.de>`_\n- `Fraunhofer Center for Machine Learning <https://www.cit.fraunhofer.de/de/zentren/maschinelles-lernen.html>`_\n- `IMI <https://www.imi.europa.eu/>`_ (in the `AETIONOMY <http://www.aetionomy.eu/>`_ project)\n\nLogo\n~~~~\nThe BEL Commons `logo <https://github.com/pybel/pybel-art>`_ was designed by `Scott Colby <https://github.com/scolby33>`_.\n\n.. |build| image:: https://travis-ci.com/bel-commons/bel-commons.svg?branch=master\n    :target: https://travis-ci.com/bel-commons/bel-commons\n    :alt: Travis-CI Build Status\n\n.. |docs| image:: https://readthedocs.org/projects/bel-commons/badge/?version=latest\n    :target: https://bel-commons.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/bel-commons/bel-commons/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bel-commons/bel-commons", "keywords": "Biological Expression Language,BEL,Systems Biology,Networks Biology", "license": "MIT", "maintainer": "Charles Tapley Hoyt", "maintainer_email": "cthoyt@gmail.com", "name": "bel-commons", "package_url": "https://pypi.org/project/bel-commons/", "platform": "", "project_url": "https://pypi.org/project/bel-commons/", "project_urls": {"Bug Tracker": "https://github.com/bel-commons/bel-commons/issues", "Download": "https://github.com/bel-commons/bel-commons/releases", "Homepage": "https://github.com/bel-commons/bel-commons", "Source Code": "https://github.com/bel-commons/bel-commons"}, "release_url": "https://pypi.org/project/bel-commons/0.3.1/", "requires_dist": ["pybel (<0.15.0,>=0.14.9)", "pybel-tools (<0.9.0,>=0.8.0)", "bio2bel (<0.4.0,>=0.3.0)", "requests", "click", "tqdm", "easy-config", "dataclasses-json", "ols-client", "networkx (>=2.1)", "pandas", "scikit-learn", "numpy", "sqlalchemy", "celery[redis]", "psycopg2-binary", "flask (>=1.0.0)", "flask-bootstrap", "flask-wtf", "flask-security", "flask-admin", "flask-sqlalchemy", "email-validator", "werkzeug", "jsonschema", "flasgger", "raven", "gunicorn", "bio2bel-hgnc ; extra == 'bio2bel'", "bio2bel-chebi ; extra == 'bio2bel'", "bio2bel-mirtarbase ; extra == 'bio2bel'", "bio2bel-entrez ; extra == 'bio2bel'", "bio2bel-expasy ; extra == 'bio2bel'", "bio2bel-interpro ; extra == 'bio2bel'", "bio2bel-go ; extra == 'bio2bel'", "sphinx ; extra == 'docs'", "sphinx-rtd-theme ; extra == 'docs'", "sphinx-click ; extra == 'docs'", "sphinx-autodoc-typehints ; extra == 'docs'"], "requires_python": ">=3.7", "summary": "A web application exposing core PyBEL functionalities", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An environment for curating, validating, and exploring knowledge assemblies\nencoded in Biological Expression Language (BEL) to support elucidating\ndisease-specific, mechanistic insight.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>BEL Commons can be installed easily from <a href=\"https://pypi.python.org/pypi/bel_commons\" rel=\"nofollow\">PyPI</a> with the following code in\nyour favorite shell:</p>\n<pre>$ pip install bel_commons\n</pre>\n<p>Get the latest code on <a href=\"https://github.com/bel-commons/bel-commons\" rel=\"nofollow\">GitHub</a>\nwith:</p>\n<pre>$ python3 -m pip install git+https://github.com/bel-commons/bel-commons.git\n</pre>\n<p>It\u2019s also suggested to use a relational database management system like PostgreSQL\nand install their corresponding connectors:</p>\n<pre>$ python3 -m pip install psycopg2-binary\n</pre>\n<div id=\"usage\">\n<h3>Usage</h3>\n</div>\n</div>\n<div id=\"run-bel-commons\">\n<h2>Run BEL Commons</h2>\n<p>A test server can be easily run with:</p>\n<pre>$ bel-commons run\n</pre>\n<p>A more powerful server like <tt>gunicorn</tt> can also be used like:</p>\n<pre>$ gunicorn bel_commons.wsgi:flask_app\n</pre>\n</div>\n<div id=\"running-with-the-parser\">\n<h2>Running with the Parser</h2>\n<p>To run the parser, you\u2019ll need an instance of a message queue like <a href=\"https://www.rabbitmq.com\" rel=\"nofollow\">RabbitMQ</a> (or\nany other message queue supported by <a href=\"https://pypi.python.org/pypi/celery\" rel=\"nofollow\">Celery</a>), a results backend like\n<a href=\"https://redis.io/\" rel=\"nofollow\">Redis</a>, and a worker. It\u2019s best to run in docker if you want to do this.</p>\n</div>\n<div id=\"run-with-docker\">\n<h2>Run with Docker</h2>\n<p>Clone this repo from GitHub</p>\n<pre>$ git clone https://github.com/bel-commons/bel-commons.git\n$ <span class=\"nb\">cd</span> bel-commons\n</pre>\n<p>Create a file called <tt>.env</tt> and generate both <tt>SECRET_KEY</tt> and <tt>SECURITY_PASSWORD_SALT</tt>.</p>\n<pre><span class=\"nv\">SECRET_KEY</span><span class=\"o\">=</span>mypassword\n<span class=\"nv\">SECURITY_PASSWORD_SALT</span><span class=\"o\">=</span>mypassword\n<span class=\"nv\">BUTLER_NAME</span><span class=\"o\">=</span><span class=\"s2\">\"BEL Commons Butler\"</span>\n<span class=\"nv\">BUTLER_EMAIL</span><span class=\"o\">=</span>bel@example.com\n<span class=\"nv\">BUTLER_PASSWORD</span><span class=\"o\">=</span>butlerpassword\n</pre>\n<p>Run docker compose:</p>\n<pre>$ docker-compose up\n</pre>\n<p>Ports exposed:</p>\n<ul>\n<li>5002: BEL Commons web application</li>\n<li>5432: PostgreSQL database</li>\n</ul>\n</div>\n<div id=\"reset-the-database\">\n<h2>Reset the Database</h2>\n<p>For the times when you just have to burn it down and start over:</p>\n<ol>\n<li><tt><span class=\"pre\">bel-commons</span> manage drop</tt> will nuke the database and output a user list</li>\n<li><tt><span class=\"pre\">bel-commons</span> manage load</tt> will automatically add the most recently exported\nuser list</li>\n<li><tt><span class=\"pre\">bel-commons</span> manage examples load</tt> will automatically load some example\nnetworks and data sets</li>\n</ol>\n<div id=\"citation\">\n<h3>Citation</h3>\n<p>If you find BEL Commons useful in your work, please consider citing <a href=\"#hoyt2018\" id=\"id1\" rel=\"nofollow\">[Hoyt2018]</a> and <a href=\"#hoyt2017\" id=\"id2\" rel=\"nofollow\">[Hoyt2017]</a>:</p>\n<table id=\"hoyt2018\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[Hoyt2018]</a></td><td>Hoyt, C. T., Domingo-Fern\u00e1ndez, D., &amp; Hofmann-Apitius, M. (2018). <a href=\"https://doi.org/10.1093/database/bay126\" rel=\"nofollow\">BEL Commons: an environment for\nexploration and analysis of networks encoded in Biological Expression Language</a>. <em>Database</em>, 2018(3), 1\u201311.</td></tr>\n</tbody>\n</table>\n<table id=\"hoyt2017\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id2\" rel=\"nofollow\">[Hoyt2017]</a></td><td>Hoyt, C. T., Konotopez, A., &amp; Ebeling, C., (2017). <a href=\"https://doi.org/10.1093/bioinformatics/btx660\" rel=\"nofollow\">PyBEL: a computational framework for Biological\nExpression Language</a>. <em>Bioinformatics</em>,\n34(4), 703\u2013704.</td></tr>\n</tbody>\n</table>\n</div>\n<div id=\"acknowledgements\">\n<h3>Acknowledgements</h3>\n</div>\n</div>\n<div id=\"supporters\">\n<h2>Supporters</h2>\n<p>This project has been supported by several organizations:</p>\n<ul>\n<li><a href=\"https://www.uni-bonn.de\" rel=\"nofollow\">University of Bonn</a></li>\n<li><a href=\"http://www.b-it-center.de\" rel=\"nofollow\">Bonn Aachen International Center for IT</a></li>\n<li><a href=\"https://www.scai.fraunhofer.de\" rel=\"nofollow\">Fraunhofer Institute for Algorithms and Scientific Computing</a></li>\n<li><a href=\"https://www.cit.fraunhofer.de/de/zentren/maschinelles-lernen.html\" rel=\"nofollow\">Fraunhofer Center for Machine Learning</a></li>\n<li><a href=\"https://www.imi.europa.eu/\" rel=\"nofollow\">IMI</a> (in the <a href=\"http://www.aetionomy.eu/\" rel=\"nofollow\">AETIONOMY</a> project)</li>\n</ul>\n</div>\n<div id=\"logo\">\n<h2>Logo</h2>\n<p>The BEL Commons <a href=\"https://github.com/pybel/pybel-art\" rel=\"nofollow\">logo</a> was designed by <a href=\"https://github.com/scolby33\" rel=\"nofollow\">Scott Colby</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 7116169, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "045ac6b03f21b51077bda76fa175ecfa", "sha256": "3dd5e78aff58098dc1ca3617132a08887567bbafe04830faa30d56e3dee71cc4"}, "downloads": -1, "filename": "bel_commons-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "045ac6b03f21b51077bda76fa175ecfa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 3681514, "upload_time": "2020-04-25T17:28:28", "upload_time_iso_8601": "2020-04-25T17:28:28.961312Z", "url": "https://files.pythonhosted.org/packages/38/89/61311e0ea20ad05f3a0350cf470d6fbe602a1f94c751a66187032c3800b3/bel_commons-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf08525736ef573419ad9af92cc481a4", "sha256": "d243d06a1bb5dbbd7532ca283088ebf6593bd05f4210f7032d2f5a5d3d082c1c"}, "downloads": -1, "filename": "bel_commons-0.3.0.tar.gz", "has_sig": false, "md5_digest": "bf08525736ef573419ad9af92cc481a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3636798, "upload_time": "2020-04-25T17:28:37", "upload_time_iso_8601": "2020-04-25T17:28:37.449019Z", "url": "https://files.pythonhosted.org/packages/4f/59/1e68b1565d8114a04358921fe88802cef403858a005d9d0c627efa50a005/bel_commons-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "57543a794f01b5bdc6b449455ea9739b", "sha256": "3a0439c81c4e0177aa58e7826b9804feb68a0b003a022008f6e10bbab977abf7"}, "downloads": -1, "filename": "bel_commons-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "57543a794f01b5bdc6b449455ea9739b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 3681624, "upload_time": "2020-04-28T00:25:07", "upload_time_iso_8601": "2020-04-28T00:25:07.184259Z", "url": "https://files.pythonhosted.org/packages/c2/98/b6bc7c4ab40724b982076d2599d7afb2010c1a3edec9db7ca435c26c7917/bel_commons-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "218ed1aef41c77484853824fc58f6f69", "sha256": "afcf13298326cc8c0d63fad80dd015d3da7c31b672225c3310882a647c47cfbd"}, "downloads": -1, "filename": "bel_commons-0.3.1.tar.gz", "has_sig": false, "md5_digest": "218ed1aef41c77484853824fc58f6f69", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3637026, "upload_time": "2020-04-28T00:25:09", "upload_time_iso_8601": "2020-04-28T00:25:09.374051Z", "url": "https://files.pythonhosted.org/packages/c3/9b/fb1cce7201a1be685d20352388789873512e95934ae321f6cefd948fc64b/bel_commons-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "57543a794f01b5bdc6b449455ea9739b", "sha256": "3a0439c81c4e0177aa58e7826b9804feb68a0b003a022008f6e10bbab977abf7"}, "downloads": -1, "filename": "bel_commons-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "57543a794f01b5bdc6b449455ea9739b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 3681624, "upload_time": "2020-04-28T00:25:07", "upload_time_iso_8601": "2020-04-28T00:25:07.184259Z", "url": "https://files.pythonhosted.org/packages/c2/98/b6bc7c4ab40724b982076d2599d7afb2010c1a3edec9db7ca435c26c7917/bel_commons-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "218ed1aef41c77484853824fc58f6f69", "sha256": "afcf13298326cc8c0d63fad80dd015d3da7c31b672225c3310882a647c47cfbd"}, "downloads": -1, "filename": "bel_commons-0.3.1.tar.gz", "has_sig": false, "md5_digest": "218ed1aef41c77484853824fc58f6f69", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3637026, "upload_time": "2020-04-28T00:25:09", "upload_time_iso_8601": "2020-04-28T00:25:09.374051Z", "url": "https://files.pythonhosted.org/packages/c3/9b/fb1cce7201a1be685d20352388789873512e95934ae321f6cefd948fc64b/bel_commons-0.3.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:50 2020"}