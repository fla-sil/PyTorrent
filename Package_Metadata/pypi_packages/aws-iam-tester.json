{"info": {"author": "Gerco Grandia", "author_email": "gerco.grandia@4synergy.nl", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Testing AWS IAM policies\n\n## Introduction\n\nAWS IAM policies are notouriously complex, it is too easy to add some unintended permissions and it is surprisingly difficult to identify these in heavily used AWS accounts.\n\nEven more surprisingly I couldn't find a ready-to-use utility that I could leverage.\n\nHence I created one myself.\n\n## Testing approach\n\nThe testing leverages AWS' [IAM simulator (api)](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html), that basically includes the same IAM evaluation logic that is applied when working in the console or using the cli. The beneits of this approach are:\n\n- It takes all different levels of policies into account. Think about permission boundaries, service control policies and so on.\n- It is an official service from AWS, so you can expect this to kept up to date over time.\n- The actual actions are evaluated, but NOT executed. Hence no need for cleaning up resources after testing.\n\n## Configuration\n\nIn order to run, a configuration of the tests to run is required.\n\nA sample configuration (with only one test) is shown, in various steps.\n\nFirst there is a global section where you define settings which are applied to all tests (unless overruled, more on that later).\n\n```yaml\n---\nuser_landing_account: 0123456789 # ID of AWS Account that is allowed to assume roles in the test account\nglobal_exemptions: # The roles and/or users below will be ignored in all tests. Regular expressions are supported\n- \"^arn:aws:iam::(\\\\d{12}):user/(.*)(ADMIN|admin)(.*)$\"\n- \"^arn:aws:iam::(\\\\d{12}):role/(.*)(ADMIN|admin)(.*)$\"\n- \"^arn:aws:iam::(\\\\d{12}):role/AWSCloudFormationStackSetExecutionRole$\"\n```\n\nThen you define a list of tests, each consisting at least of a set of:\n- actions\n- resources\n- the expected result (should it fail or succeed)\n\n```yaml\n# List of tests to execute. In general the configurations follow the rules of the AWS IAM Policy Simulator.\n# For more information: https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html\ntests: \n- actions: # list of actions to validate\n  - \"*:*\"\n  - iam:*\n  - iam:AddUser*\n  - iam:Attach*\n  - iam:Create*\n  - iam:Delete*\n  - iam:Detach*\n  - iam:Pass*\n  - iam:Put*\n  - iam:Remove*\n  - iam:UpdateAccountPasswordPolicy\n  - sts:AssumeRole\n  - sts:AssumeRoleWithSAML\n  expected_result: fail # 'fail' or 'succeed'\n  resources: # list of resources to validate against\n  - \"*\"\n```\n\nRather than using all users and roles (without exemptions) you can also limit your test to a particular set of users and roles.\n\nThe test below does that, including defining a custom context that specifies multi factor authentication is disabled when running the test. By default the context under which the simulations are run assumes MFA is enabled, but you can override that with the `custom_context` element. For more information see the [AWS documentation](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html).\n\n```yaml\n- actions: # Same list of actions, but now check (with a custom context) whether\n  - \"*:*\"\n  - iam:*\n  - iam:AddUser*\n  - iam:Attach*\n  - iam:Create*\n  - iam:Delete*\n  - iam:Detach*\n  - iam:Pass*\n  - iam:Put*\n  - iam:Remove*\n  - iam:UpdateAccountPasswordPolicy\n  - sts:AssumeRole\n  - sts:AssumeRoleWithSAML\n  expected_result: fail # 'fail' or 'succeed'\n  resources: # list of resources to validate against\n  - \"*\"\n  limit_to: # check this list for the admin users\n  - \"^arn:aws:iam::(\\\\d*):user/(.*)(ADMIN|admin)(.*)$\"\n  - \"^arn:aws:iam::(\\\\d*):role/(.*)(ADMIN|admin)(.*)$\"\n  # test if the admins are required to use multi factor authentication\n  custom_context: \n    - context_key_name: aws:MultiFactorAuthPresent\n      context_key_values: false\n      context_key_type: boolean\n```\n\nBelow an example where an additional set of roles is exempt from testing:\n\n```yaml\n- actions: # list of data centric actions\n  - redshift:GetClusterCredentials\n  - redshift:JoinGroup\n  - rds:Create*\n  - rds:Delete*\n  - rds:Modify*\n  - rds-db:connect\n  - s3:BypassGovernanceRetention\n  - s3:CreateBucket\n  - s3:DeleteBucket\n  - s3:DeleteBucketPolicy\n  - s3:PutBucketAcl\n  - s3:PutBucketPolicy\n  - s3:PutEncryptionConfiguration\n  - s3:ReplicateDelete\n  expected_result: fail # 'fail' or 'succeed'\n  resources: # list of resources to validate against\n  - \"*\"\n  exemptions: [\n  - \"^arn:aws:iam::(\\\\d{12}):role/(.*)_worker$\" # ignore this for the worker roles\n  ]\n```\n\nIf you want to run positive tests (i.e. tests that you need to succeed rather than fail), these `exemptions` don't work that well.\n\nIn that case you can limit your tests to a set of roles and users:\n\n```yaml\n- actions:\n  - s3:PutObject\n  expected_result: succeed\n  resources:\n  - \"arn:aws:s3:::my_bucket/xyz/*\"\n  limit_to: # if you specify this, test will only be performed for the sources below\n  - \"^arn:aws:iam::(\\\\d{12}):role/my_worker$\"\n```\n\n> Note that the exemptions are ignored when using a `limit_to` list.\n\n## How to use\n\nAssuming you have define a config.yml in your local directory, then to run and write the outputs to the local `./results` directory:\n\n```bash\naws-iam-tester --write-to-file\n```\n\nUsing a specific config file:\n\n```bash\naws-iam-tester --config-file my-config.yml\n```\n\nUsing a specific output location:\n\n```bash\naws-iam-tester --output-location /tmp\n```\n\nOr write to s3:\n\n```bash\naws-iam-tester --output-location s3://my-bucket/my-prefix\n```\n\nInclude only roles that can be assumed by human beings:\n\n```bash\naws-iam-tester --no-include-system-roles\n```\n\n> Note: including system roles does NOT include the aws service roles.\n\nOr print debug output:\n\n```bash\naws-iam-tester --debug\n```\n\nTo run a limited number of evaluations (which helps speeding things up, and avoiding API throttling issues):\n\n```bash\naws-iam-tester --number-of-runs 10\n```\n\nFor more information, run `aws-iam-tester --help` for more instructions.\n\n## Unit testing\n\n`pytest` is being used for testing the various options.\n\nAs long as the `aws-iam-tester` module is installed, you can run the [tests](./tests).\n\nAfter installing `tox`, you can also simply run `$ tox`.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gercograndia/aws-iam-tester", "keywords": "AWS,IAM,Policy,Tester,Evaluation,Simulator", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aws-iam-tester", "package_url": "https://pypi.org/project/aws-iam-tester/", "platform": "", "project_url": "https://pypi.org/project/aws-iam-tester/", "project_urls": {"Documentation": "https://github.com/gercograndia/aws-iam-tester/blob/master/README.md", "Homepage": "https://github.com/gercograndia/aws-iam-tester", "Repository": "https://github.com/gercograndia/aws-iam-tester", "issues": "https://github.com/gercograndia/aws-iam-tester/issues"}, "release_url": "https://pypi.org/project/aws-iam-tester/0.1.3/", "requires_dist": ["boto3 (>=1.12.22,<2.0.0)", "pyyaml (>=5.3,<6.0)", "click (>=7.1.1,<8.0.0)", "termcolor (>=1.1.0,<2.0.0)", "toml (>=0.10.0,<0.11.0)", "outdated (>=0.2.0,<0.3.0)"], "requires_python": ">=3.7,<4.0", "summary": "AWS IAM tester - simple command-line tool to check permissions handed out to IAM users and roles.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Testing AWS IAM policies</h1>\n<h2>Introduction</h2>\n<p>AWS IAM policies are notouriously complex, it is too easy to add some unintended permissions and it is surprisingly difficult to identify these in heavily used AWS accounts.</p>\n<p>Even more surprisingly I couldn't find a ready-to-use utility that I could leverage.</p>\n<p>Hence I created one myself.</p>\n<h2>Testing approach</h2>\n<p>The testing leverages AWS' <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html\" rel=\"nofollow\">IAM simulator (api)</a>, that basically includes the same IAM evaluation logic that is applied when working in the console or using the cli. The beneits of this approach are:</p>\n<ul>\n<li>It takes all different levels of policies into account. Think about permission boundaries, service control policies and so on.</li>\n<li>It is an official service from AWS, so you can expect this to kept up to date over time.</li>\n<li>The actual actions are evaluated, but NOT executed. Hence no need for cleaning up resources after testing.</li>\n</ul>\n<h2>Configuration</h2>\n<p>In order to run, a configuration of the tests to run is required.</p>\n<p>A sample configuration (with only one test) is shown, in various steps.</p>\n<p>First there is a global section where you define settings which are applied to all tests (unless overruled, more on that later).</p>\n<pre><span class=\"nn\">---</span>\n<span class=\"nt\">user_landing_account</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">0123456789</span> <span class=\"c1\"># ID of AWS Account that is allowed to assume roles in the test account</span>\n<span class=\"nt\">global_exemptions</span><span class=\"p\">:</span> <span class=\"c1\"># The roles and/or users below will be ignored in all tests. Regular expressions are supported</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"s\">\"^arn:aws:iam::(\\\\d{12}):user/(.*)(ADMIN|admin)(.*)$\"</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"s\">\"^arn:aws:iam::(\\\\d{12}):role/(.*)(ADMIN|admin)(.*)$\"</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"s\">\"^arn:aws:iam::(\\\\d{12}):role/AWSCloudFormationStackSetExecutionRole$\"</span>\n</pre>\n<p>Then you define a list of tests, each consisting at least of a set of:</p>\n<ul>\n<li>actions</li>\n<li>resources</li>\n<li>the expected result (should it fail or succeed)</li>\n</ul>\n<pre><span class=\"c1\"># List of tests to execute. In general the configurations follow the rules of the AWS IAM Policy Simulator.</span>\n<span class=\"c1\"># For more information: https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html</span>\n<span class=\"nt\">tests</span><span class=\"p\">:</span> \n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">actions</span><span class=\"p\">:</span> <span class=\"c1\"># list of actions to validate</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"*:*\"</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:AddUser*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:Attach*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:Create*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:Delete*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:Detach*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:Pass*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:Put*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:Remove*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:UpdateAccountPasswordPolicy</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">sts:AssumeRole</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">sts:AssumeRoleWithSAML</span>\n  <span class=\"nt\">expected_result</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">fail</span> <span class=\"c1\"># 'fail' or 'succeed'</span>\n  <span class=\"nt\">resources</span><span class=\"p\">:</span> <span class=\"c1\"># list of resources to validate against</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"*\"</span>\n</pre>\n<p>Rather than using all users and roles (without exemptions) you can also limit your test to a particular set of users and roles.</p>\n<p>The test below does that, including defining a custom context that specifies multi factor authentication is disabled when running the test. By default the context under which the simulations are run assumes MFA is enabled, but you can override that with the <code>custom_context</code> element. For more information see the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html\" rel=\"nofollow\">AWS documentation</a>.</p>\n<pre><span class=\"p p-Indicator\">-</span> <span class=\"nt\">actions</span><span class=\"p\">:</span> <span class=\"c1\"># Same list of actions, but now check (with a custom context) whether</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"*:*\"</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:AddUser*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:Attach*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:Create*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:Delete*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:Detach*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:Pass*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:Put*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:Remove*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iam:UpdateAccountPasswordPolicy</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">sts:AssumeRole</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">sts:AssumeRoleWithSAML</span>\n  <span class=\"nt\">expected_result</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">fail</span> <span class=\"c1\"># 'fail' or 'succeed'</span>\n  <span class=\"nt\">resources</span><span class=\"p\">:</span> <span class=\"c1\"># list of resources to validate against</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"*\"</span>\n  <span class=\"nt\">limit_to</span><span class=\"p\">:</span> <span class=\"c1\"># check this list for the admin users</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"^arn:aws:iam::(\\\\d*):user/(.*)(ADMIN|admin)(.*)$\"</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"^arn:aws:iam::(\\\\d*):role/(.*)(ADMIN|admin)(.*)$\"</span>\n  <span class=\"c1\"># test if the admins are required to use multi factor authentication</span>\n  <span class=\"nt\">custom_context</span><span class=\"p\">:</span> \n    <span class=\"p p-Indicator\">-</span> <span class=\"nt\">context_key_name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">aws:MultiFactorAuthPresent</span>\n      <span class=\"nt\">context_key_values</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">false</span>\n      <span class=\"nt\">context_key_type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">boolean</span>\n</pre>\n<p>Below an example where an additional set of roles is exempt from testing:</p>\n<pre><span class=\"p p-Indicator\">-</span> <span class=\"nt\">actions</span><span class=\"p\">:</span> <span class=\"c1\"># list of data centric actions</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">redshift:GetClusterCredentials</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">redshift:JoinGroup</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">rds:Create*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">rds:Delete*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">rds:Modify*</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">rds-db:connect</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">s3:BypassGovernanceRetention</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">s3:CreateBucket</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">s3:DeleteBucket</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">s3:DeleteBucketPolicy</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">s3:PutBucketAcl</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">s3:PutBucketPolicy</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">s3:PutEncryptionConfiguration</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">s3:ReplicateDelete</span>\n  <span class=\"nt\">expected_result</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">fail</span> <span class=\"c1\"># 'fail' or 'succeed'</span>\n  <span class=\"nt\">resources</span><span class=\"p\">:</span> <span class=\"c1\"># list of resources to validate against</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"*\"</span>\n  <span class=\"nt\">exemptions</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">[</span>\n  <span class=\"nv\">- \"^arn</span><span class=\"p p-Indicator\">:</span><span class=\"nv\">aws</span><span class=\"p p-Indicator\">:</span><span class=\"nv\">iam</span><span class=\"p p-Indicator\">::</span><span class=\"nv\">(\\\\d</span><span class=\"p p-Indicator\">{</span><span class=\"nv\">12</span><span class=\"p p-Indicator\">}</span><span class=\"nv\">)</span><span class=\"p p-Indicator\">:</span><span class=\"nv\">role/(.*)_worker$\"</span> <span class=\"c1\"># ignore this for the worker roles</span>\n  <span class=\"p p-Indicator\">]</span>\n</pre>\n<p>If you want to run positive tests (i.e. tests that you need to succeed rather than fail), these <code>exemptions</code> don't work that well.</p>\n<p>In that case you can limit your tests to a set of roles and users:</p>\n<pre><span class=\"p p-Indicator\">-</span> <span class=\"nt\">actions</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">s3:PutObject</span>\n  <span class=\"nt\">expected_result</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">succeed</span>\n  <span class=\"nt\">resources</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"arn:aws:s3:::my_bucket/xyz/*\"</span>\n  <span class=\"nt\">limit_to</span><span class=\"p\">:</span> <span class=\"c1\"># if you specify this, test will only be performed for the sources below</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"^arn:aws:iam::(\\\\d{12}):role/my_worker$\"</span>\n</pre>\n<blockquote>\n<p>Note that the exemptions are ignored when using a <code>limit_to</code> list.</p>\n</blockquote>\n<h2>How to use</h2>\n<p>Assuming you have define a config.yml in your local directory, then to run and write the outputs to the local <code>./results</code> directory:</p>\n<pre>aws-iam-tester --write-to-file\n</pre>\n<p>Using a specific config file:</p>\n<pre>aws-iam-tester --config-file my-config.yml\n</pre>\n<p>Using a specific output location:</p>\n<pre>aws-iam-tester --output-location /tmp\n</pre>\n<p>Or write to s3:</p>\n<pre>aws-iam-tester --output-location s3://my-bucket/my-prefix\n</pre>\n<p>Include only roles that can be assumed by human beings:</p>\n<pre>aws-iam-tester --no-include-system-roles\n</pre>\n<blockquote>\n<p>Note: including system roles does NOT include the aws service roles.</p>\n</blockquote>\n<p>Or print debug output:</p>\n<pre>aws-iam-tester --debug\n</pre>\n<p>To run a limited number of evaluations (which helps speeding things up, and avoiding API throttling issues):</p>\n<pre>aws-iam-tester --number-of-runs <span class=\"m\">10</span>\n</pre>\n<p>For more information, run <code>aws-iam-tester --help</code> for more instructions.</p>\n<h2>Unit testing</h2>\n<p><code>pytest</code> is being used for testing the various options.</p>\n<p>As long as the <code>aws-iam-tester</code> module is installed, you can run the <a href=\"./tests\" rel=\"nofollow\">tests</a>.</p>\n<p>After installing <code>tox</code>, you can also simply run <code>$ tox</code>.</p>\n\n          </div>"}, "last_serial": 7024153, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1900bae7569ddc225a7bd30842208a63", "sha256": "8af0d42e464aaf93a5ef2c3d1b7af74c147894b15542e6a2c1a16530e8764e8d"}, "downloads": -1, "filename": "aws_iam_tester-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1900bae7569ddc225a7bd30842208a63", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7363, "upload_time": "2020-03-16T08:15:48", "upload_time_iso_8601": "2020-03-16T08:15:48.519962Z", "url": "https://files.pythonhosted.org/packages/77/4d/9738746dd88978a03f75dded0ad7adcecfe0824c35d43671b34f89d63928/aws_iam_tester-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16fe8e333d527e0e3420a4f578bd1417", "sha256": "be7bdb372a33cf49c64d26e4351b7b6b245cdc9ef15dde6c1472767d7f45e90d"}, "downloads": -1, "filename": "aws-iam-tester-0.0.1.tar.gz", "has_sig": false, "md5_digest": "16fe8e333d527e0e3420a4f578bd1417", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6256, "upload_time": "2020-03-16T08:15:50", "upload_time_iso_8601": "2020-03-16T08:15:50.654064Z", "url": "https://files.pythonhosted.org/packages/35/ec/afcff42f5b02897c12666fe267bdf6b0dd97d00315737e38f7ef70f2f41a/aws-iam-tester-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6167913dd61a636539df128280c3f27d", "sha256": "229e026a4c1ba84901976403e033236fd804df149ff9c05271bcc32eb5fb0f7c"}, "downloads": -1, "filename": "aws_iam_tester-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6167913dd61a636539df128280c3f27d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7550, "upload_time": "2020-03-17T13:33:45", "upload_time_iso_8601": "2020-03-17T13:33:45.910245Z", "url": "https://files.pythonhosted.org/packages/88/b5/c1e9319652571266a62adbcad602723e29e6a3e7d1d549dd5d9412e13b21/aws_iam_tester-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abd36e8c4b028812c76f18d256425366", "sha256": "5d1eeb59eb47902ae5038b0dae528a97b577983ed6027ecfd32bf56bd97c8a10"}, "downloads": -1, "filename": "aws-iam-tester-0.0.2.tar.gz", "has_sig": false, "md5_digest": "abd36e8c4b028812c76f18d256425366", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6427, "upload_time": "2020-03-17T13:33:47", "upload_time_iso_8601": "2020-03-17T13:33:47.719508Z", "url": "https://files.pythonhosted.org/packages/3d/94/f71b594e88d8bc1960a14b4244d5dec801340007cc0c109a24c6a087ef64/aws-iam-tester-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e81871e637b261b6a95b293f4f62370d", "sha256": "3cc900af71e37565c722600df6367d36fd3c4a1883ab6cfa5b1b3320b3136c81"}, "downloads": -1, "filename": "aws_iam_tester-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e81871e637b261b6a95b293f4f62370d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 6725, "upload_time": "2020-03-18T12:31:37", "upload_time_iso_8601": "2020-03-18T12:31:37.376873Z", "url": "https://files.pythonhosted.org/packages/5b/de/f2142bfc8a353dd1ac97814f5b46f29a5c1daba31b84c7bf23549b430e17/aws_iam_tester-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0ba858179b8d30f5060fb586235e2a4", "sha256": "166c5ebfb37fbf600915eea82056423e6990705cbace32012bf8c7d172510d91"}, "downloads": -1, "filename": "aws-iam-tester-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f0ba858179b8d30f5060fb586235e2a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 5589, "upload_time": "2020-03-18T12:31:36", "upload_time_iso_8601": "2020-03-18T12:31:36.301153Z", "url": "https://files.pythonhosted.org/packages/61/d3/30c4a5cf18dcb18f6c109242425a253c5fc79fd95e95df94f379f5d7e766/aws-iam-tester-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "ce6dc3e9dbfb7a784be8b802009aa0df", "sha256": "01e03ea683c598f010e636e6eb9b1e7ad93bb6a7a4d67423c956234f6f707372"}, "downloads": -1, "filename": "aws_iam_tester-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ce6dc3e9dbfb7a784be8b802009aa0df", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 8371, "upload_time": "2020-03-18T12:53:47", "upload_time_iso_8601": "2020-03-18T12:53:47.308244Z", "url": "https://files.pythonhosted.org/packages/21/65/69251b336f49a536c004d61214bdf5ecdadae3a00d16cbc1e12059d6a0a3/aws_iam_tester-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a23eb97176bf719976da5ef6d393e0d6", "sha256": "65c7f759a522809334ffe1dce66cfdd9e4786c77f0d5002989753264d96f7691"}, "downloads": -1, "filename": "aws-iam-tester-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a23eb97176bf719976da5ef6d393e0d6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 7645, "upload_time": "2020-03-18T12:53:45", "upload_time_iso_8601": "2020-03-18T12:53:45.914781Z", "url": "https://files.pythonhosted.org/packages/42/95/5bde5c0c566da80a7009e27d4c182737eee181255804d2b1da8164dd599c/aws-iam-tester-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "5b02b559ed82d563c86856ee391e4946", "sha256": "fe594bed78cdde62aa3b7b00bdf7ab1f721cf1557c96b2f5e23366351eb20d19"}, "downloads": -1, "filename": "aws_iam_tester-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "5b02b559ed82d563c86856ee391e4946", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 8948, "upload_time": "2020-03-18T15:47:23", "upload_time_iso_8601": "2020-03-18T15:47:23.018632Z", "url": "https://files.pythonhosted.org/packages/aa/0d/dbfd00129bfe56a50609cbc14c7a7b0804c62e349d98f93693780831e7d6/aws_iam_tester-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a922023005b464e5d0ddd3c124f9c9b", "sha256": "6802711cd66112ba783903ab4d35f6185670307e84e1b633c9331764251680ee"}, "downloads": -1, "filename": "aws-iam-tester-0.0.5.tar.gz", "has_sig": false, "md5_digest": "4a922023005b464e5d0ddd3c124f9c9b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 8244, "upload_time": "2020-03-18T15:47:21", "upload_time_iso_8601": "2020-03-18T15:47:21.586218Z", "url": "https://files.pythonhosted.org/packages/31/41/2bef95afcb9d86817641efb7229e26be8c7d9b30e905848df2f747219530/aws-iam-tester-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "a57337564ffba965a4215341befe223b", "sha256": "4b6cba4970e545f82102641bd6bf7484b9723f0099a2c183378895c916d0be8c"}, "downloads": -1, "filename": "aws_iam_tester-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a57337564ffba965a4215341befe223b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 9543, "upload_time": "2020-03-20T15:41:40", "upload_time_iso_8601": "2020-03-20T15:41:40.178785Z", "url": "https://files.pythonhosted.org/packages/d1/5d/1e87a7c0564cfa96b15f2a68367e25eb035859bc96d38297f56ea8d01de1/aws_iam_tester-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf08f438606f2aace8333f11643a515b", "sha256": "eb9394670d71c6dc9b9921474724b1c2b89b2c0b16b2a4fba1936cda028ef214"}, "downloads": -1, "filename": "aws-iam-tester-0.0.6.tar.gz", "has_sig": false, "md5_digest": "cf08f438606f2aace8333f11643a515b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 9123, "upload_time": "2020-03-20T15:41:38", "upload_time_iso_8601": "2020-03-20T15:41:38.999704Z", "url": "https://files.pythonhosted.org/packages/85/1e/7baa1fb9760fc0232f94bddc0f8cf0eb6627227117e0dab407ea4845c568/aws-iam-tester-0.0.6.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "605e70044a8a2be825a4719a71268413", "sha256": "8e188260cdcb5d3f9e6351e5e6d13982f5bbec29fa3515151622c9367f08fd74"}, "downloads": -1, "filename": "aws_iam_tester-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "605e70044a8a2be825a4719a71268413", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 10045, "upload_time": "2020-03-29T20:19:39", "upload_time_iso_8601": "2020-03-29T20:19:39.077604Z", "url": "https://files.pythonhosted.org/packages/30/07/6e51a8c77d6b8086b3747a0d1d062bd3a4d1418cdb9965598c7d92777eb5/aws_iam_tester-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "692dd9a7249d16a63fe91823fbaa8f1d", "sha256": "04eb5cec2a2e075f40a3cc020efabe5dbed80c7098042bbbfbb4dd36eb1d0591"}, "downloads": -1, "filename": "aws-iam-tester-0.1.0.tar.gz", "has_sig": false, "md5_digest": "692dd9a7249d16a63fe91823fbaa8f1d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 10737, "upload_time": "2020-03-29T20:19:37", "upload_time_iso_8601": "2020-03-29T20:19:37.503040Z", "url": "https://files.pythonhosted.org/packages/3c/cd/3d63e395a50a7258e084a5245ba897c2a4aeb4868eb9c98585b717601f61/aws-iam-tester-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8f9f94f96284074a54d95a4d9fffaa56", "sha256": "c297378e2498e27b9149ab8e4f4e0577125a209adb13e32339df36f5986b2ba8"}, "downloads": -1, "filename": "aws_iam_tester-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8f9f94f96284074a54d95a4d9fffaa56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 10008, "upload_time": "2020-03-30T15:38:17", "upload_time_iso_8601": "2020-03-30T15:38:17.588418Z", "url": "https://files.pythonhosted.org/packages/09/b4/4262332c7021d4a159c1f4590f89f66ecff21deefed3d9010e4c3c8166f5/aws_iam_tester-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93241b6f6d5dc169092d5bc02a6f382f", "sha256": "de88dfe65db5272193f37759e013b1f090479036fe41d5c9679cc7c19f9f5428"}, "downloads": -1, "filename": "aws-iam-tester-0.1.1.tar.gz", "has_sig": false, "md5_digest": "93241b6f6d5dc169092d5bc02a6f382f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 10701, "upload_time": "2020-03-30T15:38:15", "upload_time_iso_8601": "2020-03-30T15:38:15.740618Z", "url": "https://files.pythonhosted.org/packages/8d/28/c9ff88e1512740c24e9e70a6ad6d9fef550442a2b47dadfd7d0030e9a7ee/aws-iam-tester-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "f1614a7f58d73ad6a9ea63d387a95c56", "sha256": "8577b389f3193f0fea04b9271b0936cb995beec8981076102b903fa64cabe96c"}, "downloads": -1, "filename": "aws_iam_tester-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f1614a7f58d73ad6a9ea63d387a95c56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 10871, "upload_time": "2020-04-01T11:27:38", "upload_time_iso_8601": "2020-04-01T11:27:38.423704Z", "url": "https://files.pythonhosted.org/packages/69/f2/e5032b3d7f02c4b7c5c6d8ec98b3b8ca6de2a8df0a7360924837c47bcb64/aws_iam_tester-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4a8ca2a6eb6d6d27f92ae56c52f7265", "sha256": "d9cd4486b08739ba2a52080fc1ebe4c7f17edb76fa3269d57b6b3bb069efcfb2"}, "downloads": -1, "filename": "aws-iam-tester-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b4a8ca2a6eb6d6d27f92ae56c52f7265", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 12035, "upload_time": "2020-04-01T11:27:37", "upload_time_iso_8601": "2020-04-01T11:27:37.135840Z", "url": "https://files.pythonhosted.org/packages/79/5d/8603c4dc08623c6b302f5edb10e3cd46791814cc030ca97fe46d6f3e2331/aws-iam-tester-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "1dca4e9ef0653a0c40fb7d67adbfd792", "sha256": "bba8dab3ce7b6f02b30a0e8303b1ea7a07bd282e4e45d13af1928a6c38efff65"}, "downloads": -1, "filename": "aws_iam_tester-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1dca4e9ef0653a0c40fb7d67adbfd792", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 11025, "upload_time": "2020-04-15T11:51:26", "upload_time_iso_8601": "2020-04-15T11:51:26.735286Z", "url": "https://files.pythonhosted.org/packages/92/7d/b8494ec55726c3f9d7e18b38baeab7631aa0882f821bde7f85a07b6181fd/aws_iam_tester-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67c5a4cf55c0f8c3a36ea40d3d4e2ea3", "sha256": "cd221458a452b701cf6912fa8a57ca146125b1a7477d222de5c9873278af9867"}, "downloads": -1, "filename": "aws-iam-tester-0.1.3.tar.gz", "has_sig": false, "md5_digest": "67c5a4cf55c0f8c3a36ea40d3d4e2ea3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 12217, "upload_time": "2020-04-15T11:51:25", "upload_time_iso_8601": "2020-04-15T11:51:25.214102Z", "url": "https://files.pythonhosted.org/packages/76/ff/a901a139daaf07df79cd30e0dd22faefbbdfc3e797fb6858ddc762b54cf7/aws-iam-tester-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1dca4e9ef0653a0c40fb7d67adbfd792", "sha256": "bba8dab3ce7b6f02b30a0e8303b1ea7a07bd282e4e45d13af1928a6c38efff65"}, "downloads": -1, "filename": "aws_iam_tester-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1dca4e9ef0653a0c40fb7d67adbfd792", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 11025, "upload_time": "2020-04-15T11:51:26", "upload_time_iso_8601": "2020-04-15T11:51:26.735286Z", "url": "https://files.pythonhosted.org/packages/92/7d/b8494ec55726c3f9d7e18b38baeab7631aa0882f821bde7f85a07b6181fd/aws_iam_tester-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67c5a4cf55c0f8c3a36ea40d3d4e2ea3", "sha256": "cd221458a452b701cf6912fa8a57ca146125b1a7477d222de5c9873278af9867"}, "downloads": -1, "filename": "aws-iam-tester-0.1.3.tar.gz", "has_sig": false, "md5_digest": "67c5a4cf55c0f8c3a36ea40d3d4e2ea3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 12217, "upload_time": "2020-04-15T11:51:25", "upload_time_iso_8601": "2020-04-15T11:51:25.214102Z", "url": "https://files.pythonhosted.org/packages/76/ff/a901a139daaf07df79cd30e0dd22faefbbdfc3e797fb6858ddc762b54cf7/aws-iam-tester-0.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:40 2020"}