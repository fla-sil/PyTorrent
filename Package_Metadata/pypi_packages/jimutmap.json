{"info": {"author": "Jimut Bahan Pal", "author_email": "jimutbahanpal@yahoo.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# jimutmap \n[![DOI](https://zenodo.org/badge/169246557.svg)](https://zenodo.org/badge/latestdoi/169246557)\n[![PyPI version](https://d25lcipzij17d.cloudfront.net/badge.svg?id=py&type=6&v=1.2.4)](https://pypi.org/project/jimutmap/)\n![Contribute](https://img.shields.io/badge/-contribute-0a0a0a.svg?style=flat&colorA=0a0a0a)\n[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0) \n![Ask Me Anything !](https://img.shields.io/badge/Ask%20me-anything-1abc9c.svg)\n![Open Source Love png1](https://badges.frapsoft.com/os/v1/open-source.png?v=103)\n\n\n#### Purpose \n\nThis manually brute forces [apple-map](https://satellites.pro/#32.916485,62.578125,4). It Then scraps all the tiles as given by the \nparameters provided by the user.\n\n#### YouTube video : \nIf you are confused with the documentation, please see this video, to see the scraping in action [Apple Maps API to get enormous amount of satellite data for free using Python3](https://www.youtube.com/watch?v=voH0qhGXfsU).\n\n#### Installation\n\n```\nsudo pip install jimutmap\n```\n\n#### Pypi\n*   [jimutmap](https://pypi.org/project/jimutmap/)\n\n#### Works in Colab too!\n\n[colab-notebook](maps_scraper.ipynb)\n\n\n#### Image\n\n<center>\n<img src=\"satellite_data/scrn.png\" alt=\"img of sat dat\" width=85% height=85%>\n</center>\n\n\nNote :\n\nThe api acess-key (which can be found out by selecting one tile from Apple Map, through chrome/firefox by going Developer->Network and then it is this part of the link &accessKey...dark) is valid for a period of 10-15 mins. You need to manually go to [apple-map](https://satellites.pro/#32.916485,62.578125,4), get the API access key by pressing ctrl+shift+E and going to the network area. I tried to reverse engineer this thing\nbut couldn't. First part of the key is time in sec from 1970, but other part is some output of complex function which needs time\nto decipher. If anyone finds it, let me know, I'll add you to the contributor's section and may make this API fully automatic.\n\n\n#### Need for hacking and scraping satellite data\n\nWell it's good (best in the world) satellite images, we just need to give the coordinates (Lat,Lon, and zoom) to get your dataset\nof high resolution satellite images! Create your own dataset and apply ML algorithms :')\n\n#### Some of the example images downloaded :\n\n| | | |\n|:-------------------------:|:-------------------------:|:-------------------------:|\n|<img width=\"1604\" alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"satellite_data/133478_203289.jpeg\">  |  <img width=\"1604\" alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"satellite_data/390804_228426.jpeg\">|<img width=\"1604\" alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"satellite_data/390804_228429.jpeg\">|\n|<img width=\"1604\" alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"satellite_data/390814_228427.jpeg\">  |  <img width=\"1604\" alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"satellite_data/390814_228428.jpeg\">|<img width=\"1604\" alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"satellite_data/390814_228429.jpeg\">|\n|<img width=\"1604\" alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"satellite_data/390815_228435.jpeg\">  |  <img width=\"1604\" alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"satellite_data/390827_228428.jpeg\">|<img width=\"1604\" alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"satellite_data/133479_203290.jpeg\">|\n\n\nThe scraping API is present, call it and download it.\n```python\n>>from jimutmap import api\n>>a=api('&api-access-key',min_lat_deg,max_lat_deg,min_lon_deg,max_lon_deg,zoom=19,verbose=False,threads_=110)\n\n# Change the access key here\n# give the (min_lat,max_lat,min_lon,max_lon,access_key) in this function\n# note the access key is manually changed all the time here!\n\n>>a.download_images()\n\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                     | 1000/10000000 [00:02<00:00, 3913.19it/s\n\n```\n\n#### Perks \n\nWell I'm not that bad. This is done through parallel proccessing, so this will take all the thread in your CPU, change the \ncode to your own requirements! This is done so that you could download about **40K** images in **30 mins!** (That's fuckin fast!!!)\n\nDo this :\n\n```\n$ mv *.jpeg satellite_data\n```\n\nPlease move this data after every fetch request done! Else you won't get the updated information (tiles) of satellite data after\nthat tile. It is calculated automatically so that all the progress remains saved!\n\n#### Note\nThis also uses multithreading, which may overload your computer, so set the parameters in the API, minimise the pool else your PC may hang! \n\nAuthor:\n* [Jimut Bahan Pal](https://jimut123.github.io/)\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Jimut123/jimutmap", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "jimutmap", "package_url": "https://pypi.org/project/jimutmap/", "platform": "", "project_url": "https://pypi.org/project/jimutmap/", "project_urls": {"Homepage": "https://github.com/Jimut123/jimutmap"}, "release_url": "https://pypi.org/project/jimutmap/1.2.5/", "requires_dist": ["wget", "bs4", "numpy", "tqdm"], "requires_python": "", "summary": "To get enormous amount of Apple Maps tile with ease", "version": "1.2.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>jimutmap</h1>\n<p><a href=\"https://zenodo.org/badge/latestdoi/169246557\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be4b4dae4f82a05815800fc00285e43667790a2c/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3136393234363535372e737667\"></a>\n<a href=\"https://pypi.org/project/jimutmap/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e01320267f65586f4df30b4474551c3a99eb10b5/68747470733a2f2f6432356c6369707a696a3137642e636c6f756466726f6e742e6e65742f62616467652e7376673f69643d707926747970653d3626763d312e322e34\"></a>\n<img alt=\"Contribute\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a782b4606f8fbb5ca57d85b128844f528369e97/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d636f6e747269627574652d3061306130612e7376673f7374796c653d666c617426636f6c6f72413d306130613061\">\n<a href=\"https://www.gnu.org/licenses/gpl-3.0\" rel=\"nofollow\"><img alt=\"License: GPL v3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b8e7bd0619920735e058483fd428ecbeb267eb7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c25323076332d626c75652e737667\"></a>\n<img alt=\"Ask Me Anything !\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e0b9eb17e703b59a8d52789d632dbbd15dbaca1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f41736b2532306d652d616e797468696e672d3161626339632e737667\">\n<img alt=\"Open Source Love png1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9cb30ed3807c6d4b3dc6439bbb3960364b88984c/68747470733a2f2f6261646765732e66726170736f66742e636f6d2f6f732f76312f6f70656e2d736f757263652e706e673f763d313033\"></p>\n<h4>Purpose</h4>\n<p>This manually brute forces <a href=\"https://satellites.pro/#32.916485,62.578125,4\" rel=\"nofollow\">apple-map</a>. It Then scraps all the tiles as given by the\nparameters provided by the user.</p>\n<h4>YouTube video :</h4>\n<p>If you are confused with the documentation, please see this video, to see the scraping in action <a href=\"https://www.youtube.com/watch?v=voH0qhGXfsU\" rel=\"nofollow\">Apple Maps API to get enormous amount of satellite data for free using Python3</a>.</p>\n<h4>Installation</h4>\n<pre><code>sudo pip install jimutmap\n</code></pre>\n<h4>Pypi</h4>\n<ul>\n<li><a href=\"https://pypi.org/project/jimutmap/\" rel=\"nofollow\">jimutmap</a></li>\n</ul>\n<h4>Works in Colab too!</h4>\n<p><a href=\"maps_scraper.ipynb\" rel=\"nofollow\">colab-notebook</a></p>\n<h4>Image</h4>\n&lt;center&gt;\n<img alt=\"img of sat dat\" height=\"85%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8942597e72fae0c4550f3e512d71e5f5b577a4e/736174656c6c6974655f646174612f7363726e2e706e67\" width=\"85%\">\n&lt;/center&gt;\n<p>Note :</p>\n<p>The api acess-key (which can be found out by selecting one tile from Apple Map, through chrome/firefox by going Developer-&gt;Network and then it is this part of the link &amp;accessKey...dark) is valid for a period of 10-15 mins. You need to manually go to <a href=\"https://satellites.pro/#32.916485,62.578125,4\" rel=\"nofollow\">apple-map</a>, get the API access key by pressing ctrl+shift+E and going to the network area. I tried to reverse engineer this thing\nbut couldn't. First part of the key is time in sec from 1970, but other part is some output of complex function which needs time\nto decipher. If anyone finds it, let me know, I'll add you to the contributor's section and may make this API fully automatic.</p>\n<h4>Need for hacking and scraping satellite data</h4>\n<p>Well it's good (best in the world) satellite images, we just need to give the coordinates (Lat,Lon, and zoom) to get your dataset\nof high resolution satellite images! Create your own dataset and apply ML algorithms :')</p>\n<h4>Some of the example images downloaded :</h4>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\"></th>\n<th align=\"center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><img alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db71a94fc92d3c442a5344f2464339e2ad166774/736174656c6c6974655f646174612f3133333437385f3230333238392e6a706567\" width=\"1604\"></td>\n<td align=\"center\"><img alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e3094930d233e1aba57dab8cd78dec1530e23b5b/736174656c6c6974655f646174612f3339303830345f3232383432362e6a706567\" width=\"1604\"></td>\n<td align=\"center\"><img alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a870318b1e99b48e872ff57d2a958a97cd63c528/736174656c6c6974655f646174612f3339303830345f3232383432392e6a706567\" width=\"1604\"></td>\n</tr>\n<tr>\n<td align=\"center\"><img alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58cec0e0f687d7db9be4aea658f2442c524e7031/736174656c6c6974655f646174612f3339303831345f3232383432372e6a706567\" width=\"1604\"></td>\n<td align=\"center\"><img alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f67f1367204bb461abe817667958733133467775/736174656c6c6974655f646174612f3339303831345f3232383432382e6a706567\" width=\"1604\"></td>\n<td align=\"center\"><img alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0a4a56d4f326ed75447c3f4740e830eddd0139d/736174656c6c6974655f646174612f3339303831345f3232383432392e6a706567\" width=\"1604\"></td>\n</tr>\n<tr>\n<td align=\"center\"><img alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a0d9098cd1778f99a146e8d84fb96ae15f402241/736174656c6c6974655f646174612f3339303831355f3232383433352e6a706567\" width=\"1604\"></td>\n<td align=\"center\"><img alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90686d33a91af28786bedfa5e14165c03c7fdbd2/736174656c6c6974655f646174612f3339303832375f3232383432382e6a706567\" width=\"1604\"></td>\n<td align=\"center\"><img alt=\"screen shot 2017-08-07 at 12 18 15 pm\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/33ce2dd4be6fbbe34b522d2401f188e326ea7688/736174656c6c6974655f646174612f3133333437395f3230333239302e6a706567\" width=\"1604\"></td>\n</tr></tbody></table>\n<p>The scraping API is present, call it and download it.</p>\n<pre><span class=\"o\">&gt;&gt;</span><span class=\"kn\">from</span> <span class=\"nn\">jimutmap</span> <span class=\"kn\">import</span> <span class=\"n\">api</span>\n<span class=\"o\">&gt;&gt;</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"n\">api</span><span class=\"p\">(</span><span class=\"s1\">'&amp;api-access-key'</span><span class=\"p\">,</span><span class=\"n\">min_lat_deg</span><span class=\"p\">,</span><span class=\"n\">max_lat_deg</span><span class=\"p\">,</span><span class=\"n\">min_lon_deg</span><span class=\"p\">,</span><span class=\"n\">max_lon_deg</span><span class=\"p\">,</span><span class=\"n\">zoom</span><span class=\"o\">=</span><span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span><span class=\"n\">threads_</span><span class=\"o\">=</span><span class=\"mi\">110</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Change the access key here</span>\n<span class=\"c1\"># give the (min_lat,max_lat,min_lon,max_lon,access_key) in this function</span>\n<span class=\"c1\"># note the access key is manually changed all the time here!</span>\n\n<span class=\"o\">&gt;&gt;</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">download_images</span><span class=\"p\">()</span>\n\n<span class=\"mi\">100</span><span class=\"o\">%|</span><span class=\"err\">\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588</span>                     <span class=\"o\">|</span> <span class=\"mi\">1000</span><span class=\"o\">/</span><span class=\"mi\">10000000</span> <span class=\"p\">[</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">02</span><span class=\"o\">&lt;</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"mf\">3913.19</span><span class=\"n\">it</span><span class=\"o\">/</span><span class=\"n\">s</span>\n</pre>\n<h4>Perks</h4>\n<p>Well I'm not that bad. This is done through parallel proccessing, so this will take all the thread in your CPU, change the\ncode to your own requirements! This is done so that you could download about <strong>40K</strong> images in <strong>30 mins!</strong> (That's fuckin fast!!!)</p>\n<p>Do this :</p>\n<pre><code>$ mv *.jpeg satellite_data\n</code></pre>\n<p>Please move this data after every fetch request done! Else you won't get the updated information (tiles) of satellite data after\nthat tile. It is calculated automatically so that all the progress remains saved!</p>\n<h4>Note</h4>\n<p>This also uses multithreading, which may overload your computer, so set the parameters in the API, minimise the pool else your PC may hang!</p>\n<p>Author:</p>\n<ul>\n<li><a href=\"https://jimut123.github.io/\" rel=\"nofollow\">Jimut Bahan Pal</a></li>\n</ul>\n\n          </div>"}, "last_serial": 5563629, "releases": {"1.2.4": [{"comment_text": "", "digests": {"md5": "948285c1ca691587036966d6ed2a679b", "sha256": "374c1829665123eeb474552ab33b07fb5a145fd5cbc70b0b2cc026a748c99aae"}, "downloads": -1, "filename": "jimutmap-1.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "948285c1ca691587036966d6ed2a679b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17454, "upload_time": "2019-05-04T12:05:10", "upload_time_iso_8601": "2019-05-04T12:05:10.502794Z", "url": "https://files.pythonhosted.org/packages/5f/46/d844e45c53b0105b88c9f2f1280144e15c8b4bfc841fb7fafb69279f2e21/jimutmap-1.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "119a040eae6bcffecfabc46edc3587f8", "sha256": "af87cf7f88c7ca2c94faa16df9f54ac162a6b2c847c9da683f0e13ae053368a5"}, "downloads": -1, "filename": "jimutmap-1.2.4.tar.gz", "has_sig": false, "md5_digest": "119a040eae6bcffecfabc46edc3587f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4802, "upload_time": "2019-05-04T12:05:12", "upload_time_iso_8601": "2019-05-04T12:05:12.093356Z", "url": "https://files.pythonhosted.org/packages/b3/ca/5b1dbe6784cd502b58f53e91993da107a10368b4a8ad7106d67df7308e04/jimutmap-1.2.4.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "eba4a440713be1a7a1a6048db14dfc91", "sha256": "0d920fec75ff07f8ca7444949415fa432dd7b65d92db8b8e9b1be297c43b0dbc"}, "downloads": -1, "filename": "jimutmap-1.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "eba4a440713be1a7a1a6048db14dfc91", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17769, "upload_time": "2019-07-21T14:48:11", "upload_time_iso_8601": "2019-07-21T14:48:11.011935Z", "url": "https://files.pythonhosted.org/packages/c3/98/c9b9173e235d6e388209c79fecfae29903079763890bac36d4f06b08e121/jimutmap-1.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "147440e1c1fa2b0273897cfdbb5d70cf", "sha256": "c7f8d90c0159785f1aef613ff5fefa786ff6f179e0dca4efb98fa32bdac12f2a"}, "downloads": -1, "filename": "jimutmap-1.2.5.tar.gz", "has_sig": false, "md5_digest": "147440e1c1fa2b0273897cfdbb5d70cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5144, "upload_time": "2019-07-21T14:48:12", "upload_time_iso_8601": "2019-07-21T14:48:12.921059Z", "url": "https://files.pythonhosted.org/packages/2b/f0/3a24c1fb9d4ecb381d50e56de02a94bc63558e0c2a7874fd1d508df93af4/jimutmap-1.2.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eba4a440713be1a7a1a6048db14dfc91", "sha256": "0d920fec75ff07f8ca7444949415fa432dd7b65d92db8b8e9b1be297c43b0dbc"}, "downloads": -1, "filename": "jimutmap-1.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "eba4a440713be1a7a1a6048db14dfc91", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17769, "upload_time": "2019-07-21T14:48:11", "upload_time_iso_8601": "2019-07-21T14:48:11.011935Z", "url": "https://files.pythonhosted.org/packages/c3/98/c9b9173e235d6e388209c79fecfae29903079763890bac36d4f06b08e121/jimutmap-1.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "147440e1c1fa2b0273897cfdbb5d70cf", "sha256": "c7f8d90c0159785f1aef613ff5fefa786ff6f179e0dca4efb98fa32bdac12f2a"}, "downloads": -1, "filename": "jimutmap-1.2.5.tar.gz", "has_sig": false, "md5_digest": "147440e1c1fa2b0273897cfdbb5d70cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5144, "upload_time": "2019-07-21T14:48:12", "upload_time_iso_8601": "2019-07-21T14:48:12.921059Z", "url": "https://files.pythonhosted.org/packages/2b/f0/3a24c1fb9d4ecb381d50e56de02a94bc63558e0c2a7874fd1d508df93af4/jimutmap-1.2.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:40 2020"}