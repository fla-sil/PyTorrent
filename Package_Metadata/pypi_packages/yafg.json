{"info": {"author": "Philipp Trommler", "author_email": "yafg@philipp-trommler.me", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Plugins", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Documentation", "Topic :: Text Processing :: Markup"], "description": "# yafg - Yet Another Figure Generator\n\n*yafg* is yet another figure generator plugin for Python's Markdown. It's\nwritten and tested with Python 2.7 and Python 3.6 as well as Markdown 3.1.1, but\naims at supporting as many versions as possible. If you encounter any problems\nwith the given versions or find yourself using *yafg* without problems with any\nothers, please give me a hint using the e-mail address listed below.\n\nIt uses the `title` attribute given to an image within Markdown to generate a\n`<figure>` environment with a `<figcaption>` containing the `title`'s text,\ne.g.:\n\n```markdown\n![Alt text](/path/to/image.png \"This is the title of the image.\")\n```\n\nbecomes\n\n```html\n<figure>\n<img alt=\"Alt text\" src=\"/path/to/image.png\" title=\"This is the title of the image.\" />\n<figcaption>This is the title of the image.</figcaption>\n</figure>\n```\n\n## How?\n\n### Install\n\n*yafg* can be installed via PyPI using:\n\n```\npip install yafg\n```\n\n### Standard Usage\n\nWhen parsing your input, you can add *yafg* to Markdown as follows:\n\n```python\nimport yafg\n\n# ...\n\noutputString = markdown.markdown(inputString, extensions = [yafg.YafgExtension(stripTitle=False)])\n```\n\n### Pelican\n\nPelican users can add *yafg* to their generator process by adding it to the\n`MARKDOWN` variable in the `pelicanconf.py` as follows:\n\n```python\nMARKDOWN = {\n    'extensions_configs': {\n        'yafg': {\n            'stripTitle': 'False',\n        },\n    },\n}\n```\n\n### Options\n\nCurrently supported options are listed below:\n\n* `stripTitle` (default: `False`):\n\n    Removes the original `title` attribute from the `<img />` element. Since its\n    usage is discouraged anyways (see below), this may be an option worth\n    considering.\n\n* `figureClass` (default: `\"\"`):\n\n    The CSS class to add to the generated `<figure />` element.\n\n* `figcaptionClass` (default: `\"\"`):\n\n    The CSS class to add to the generated `<figcaption />` element.\n\n## Why?\n\nyafg arose from the dissatisfaction with the existing solutions, namely:\n\n* [markdown\\_captions](https://github.com/evidlo/markdown_captions) which uses\n  the `alt` attribute for the `<figcaption>`.\n* [markdown-figcap](https://github.com/funk1d/markdown-figcap) which uses a\n  cryptic syntax that doesn't integrate well into Markdown, IMHO.\n* [figureAltCaption](https://github.com/jdittrich/figureAltCaption) which\n  cannot handle multi-line descriptions and uses the `alt` attribute for the\n  `<figcaption>`.\n\nUsing the `alt` attribute to fill the `<figcaption>` is not correct, because [as\nthe standard states](https://www.w3.org/wiki/Html/Elements/img)\n\n> [...] the alternative text is a replacement for the image, not a description\n> [...]\n\nfor the most common case of a text accompanied by an augmenting image. It should\nbe used for an exact reproduction of what can be seen on the image for those who\ncannot see it, for example because they're blind or their internet connection is\ntoo slow. A figure's caption in turn should provide a description helping to\nunderstand the content of the image.\n\nThe `title` attribute on the other hand should contain \"[a]dvisory information\nassociated with the element ([W3C Core Attribute\nList](https://www.w3.org/wiki/Html/Attributes/_Global)). This is rather vague\nand often used by browser vendors to show tooltips containing the title. Since\ntooltips are highly problematic for a11y reasons and the browser support varies,\n\"[r]elying on the title attribute is currently discouraged\" ([HTML Living\nStandard](https://html.spec.whatwg.org/multipage/dom.html#the-title-attribute)).\nThis makes it an ideal candidate to store the wanted `figcaption` inside of the\nstandard Markdown syntax.\n\n## Author\n\n*yafg* has been written by:\n\n* Philipp Trommler <yafg@philipp-trommler.me>\n\n## License\n\n*yafg* has been published under a GPL 3.0 or later license. See the `LICENSE`\nfile for more information.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://git.sr.ht/~ferruck/yafg", "keywords": "markdown image figure caption html a11y", "license": "GPLv3+", "maintainer": "Philipp Trommler", "maintainer_email": "yafg@philipp-trommler.me", "name": "yafg", "package_url": "https://pypi.org/project/yafg/", "platform": "", "project_url": "https://pypi.org/project/yafg/", "project_urls": {"Homepage": "https://git.sr.ht/~ferruck/yafg"}, "release_url": "https://pypi.org/project/yafg/0.2/", "requires_dist": ["Markdown (==3.1.1)"], "requires_python": ">=2.7.15, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4", "summary": "Figure and figcaption generator markdown extension", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>yafg - Yet Another Figure Generator</h1>\n<p><em>yafg</em> is yet another figure generator plugin for Python's Markdown. It's\nwritten and tested with Python 2.7 and Python 3.6 as well as Markdown 3.1.1, but\naims at supporting as many versions as possible. If you encounter any problems\nwith the given versions or find yourself using <em>yafg</em> without problems with any\nothers, please give me a hint using the e-mail address listed below.</p>\n<p>It uses the <code>title</code> attribute given to an image within Markdown to generate a\n<code>&lt;figure&gt;</code> environment with a <code>&lt;figcaption&gt;</code> containing the <code>title</code>'s text,\ne.g.:</p>\n<pre>![Alt text](/path/to/image.png \"This is the title of the image.\")\n</pre>\n<p>becomes</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">figure</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">img</span> <span class=\"na\">alt</span><span class=\"o\">=</span><span class=\"s\">\"Alt text\"</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"/path/to/image.png\"</span> <span class=\"na\">title</span><span class=\"o\">=</span><span class=\"s\">\"This is the title of the image.\"</span> <span class=\"p\">/&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">figcaption</span><span class=\"p\">&gt;</span>This is the title of the image.<span class=\"p\">&lt;/</span><span class=\"nt\">figcaption</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">figure</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>How?</h2>\n<h3>Install</h3>\n<p><em>yafg</em> can be installed via PyPI using:</p>\n<pre><code>pip install yafg\n</code></pre>\n<h3>Standard Usage</h3>\n<p>When parsing your input, you can add <em>yafg</em> to Markdown as follows:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">yafg</span>\n\n<span class=\"c1\"># ...</span>\n\n<span class=\"n\">outputString</span> <span class=\"o\">=</span> <span class=\"n\">markdown</span><span class=\"o\">.</span><span class=\"n\">markdown</span><span class=\"p\">(</span><span class=\"n\">inputString</span><span class=\"p\">,</span> <span class=\"n\">extensions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">yafg</span><span class=\"o\">.</span><span class=\"n\">YafgExtension</span><span class=\"p\">(</span><span class=\"n\">stripTitle</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)])</span>\n</pre>\n<h3>Pelican</h3>\n<p>Pelican users can add <em>yafg</em> to their generator process by adding it to the\n<code>MARKDOWN</code> variable in the <code>pelicanconf.py</code> as follows:</p>\n<pre><span class=\"n\">MARKDOWN</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'extensions_configs'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'yafg'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'stripTitle'</span><span class=\"p\">:</span> <span class=\"s1\">'False'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Options</h3>\n<p>Currently supported options are listed below:</p>\n<ul>\n<li>\n<p><code>stripTitle</code> (default: <code>False</code>):</p>\n<p>Removes the original <code>title</code> attribute from the <code>&lt;img /&gt;</code> element. Since its\nusage is discouraged anyways (see below), this may be an option worth\nconsidering.</p>\n</li>\n<li>\n<p><code>figureClass</code> (default: <code>\"\"</code>):</p>\n<p>The CSS class to add to the generated <code>&lt;figure /&gt;</code> element.</p>\n</li>\n<li>\n<p><code>figcaptionClass</code> (default: <code>\"\"</code>):</p>\n<p>The CSS class to add to the generated <code>&lt;figcaption /&gt;</code> element.</p>\n</li>\n</ul>\n<h2>Why?</h2>\n<p>yafg arose from the dissatisfaction with the existing solutions, namely:</p>\n<ul>\n<li><a href=\"https://github.com/evidlo/markdown_captions\" rel=\"nofollow\">markdown_captions</a> which uses\nthe <code>alt</code> attribute for the <code>&lt;figcaption&gt;</code>.</li>\n<li><a href=\"https://github.com/funk1d/markdown-figcap\" rel=\"nofollow\">markdown-figcap</a> which uses a\ncryptic syntax that doesn't integrate well into Markdown, IMHO.</li>\n<li><a href=\"https://github.com/jdittrich/figureAltCaption\" rel=\"nofollow\">figureAltCaption</a> which\ncannot handle multi-line descriptions and uses the <code>alt</code> attribute for the\n<code>&lt;figcaption&gt;</code>.</li>\n</ul>\n<p>Using the <code>alt</code> attribute to fill the <code>&lt;figcaption&gt;</code> is not correct, because <a href=\"https://www.w3.org/wiki/Html/Elements/img\" rel=\"nofollow\">as\nthe standard states</a></p>\n<blockquote>\n<p>[...] the alternative text is a replacement for the image, not a description\n[...]</p>\n</blockquote>\n<p>for the most common case of a text accompanied by an augmenting image. It should\nbe used for an exact reproduction of what can be seen on the image for those who\ncannot see it, for example because they're blind or their internet connection is\ntoo slow. A figure's caption in turn should provide a description helping to\nunderstand the content of the image.</p>\n<p>The <code>title</code> attribute on the other hand should contain \"[a]dvisory information\nassociated with the element (<a href=\"https://www.w3.org/wiki/Html/Attributes/_Global\" rel=\"nofollow\">W3C Core Attribute\nList</a>). This is rather vague\nand often used by browser vendors to show tooltips containing the title. Since\ntooltips are highly problematic for a11y reasons and the browser support varies,\n\"[r]elying on the title attribute is currently discouraged\" (<a href=\"https://html.spec.whatwg.org/multipage/dom.html#the-title-attribute\" rel=\"nofollow\">HTML Living\nStandard</a>).\nThis makes it an ideal candidate to store the wanted <code>figcaption</code> inside of the\nstandard Markdown syntax.</p>\n<h2>Author</h2>\n<p><em>yafg</em> has been written by:</p>\n<ul>\n<li>Philipp Trommler <a href=\"mailto:yafg@philipp-trommler.me\">yafg@philipp-trommler.me</a></li>\n</ul>\n<h2>License</h2>\n<p><em>yafg</em> has been published under a GPL 3.0 or later license. See the <code>LICENSE</code>\nfile for more information.</p>\n\n          </div>"}, "last_serial": 5982120, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a8248f520b15129b0c45ee165e210f64", "sha256": "28f2ffb383f3f9148497fc46d48c19ed1952fdb92299d02d89d276b940763c35"}, "downloads": -1, "filename": "yafg-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "a8248f520b15129b0c45ee165e210f64", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7.15", "size": 17565, "upload_time": "2019-09-12T10:40:55", "upload_time_iso_8601": "2019-09-12T10:40:55.783551Z", "url": "https://files.pythonhosted.org/packages/e0/83/867f05ac03686a57611d133c9378f149c203b3f910df43a4fa916a2ff297/yafg-0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7101aca535d2557c3f6429fb1b3a0947", "sha256": "56d5015d66ca5e7b146e295ebaaddf13d7c9c6e80f660c4fa0412711adf9faf2"}, "downloads": -1, "filename": "yafg-0.1.tar.gz", "has_sig": false, "md5_digest": "7101aca535d2557c3f6429fb1b3a0947", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.15", "size": 4435, "upload_time": "2019-09-12T10:40:58", "upload_time_iso_8601": "2019-09-12T10:40:58.918778Z", "url": "https://files.pythonhosted.org/packages/f0/6e/2b4297e5199cafd401cac18b2f425121550fa880aa59d290e33b40f7ab76/yafg-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "f9120db9dfe8c7b40c3c1b5c59c568f9", "sha256": "5f4a549fceff843ecac41252e6de46a767c4b18796bfdaf6e6c55501786a8b0c"}, "downloads": -1, "filename": "yafg-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f9120db9dfe8c7b40c3c1b5c59c568f9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7.15, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4", "size": 17945, "upload_time": "2019-10-16T09:09:48", "upload_time_iso_8601": "2019-10-16T09:09:48.364159Z", "url": "https://files.pythonhosted.org/packages/2c/fb/55ff724b96ab3d4d664a4947a269ee78fc0aacd635561a29a06d0f9c181b/yafg-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85722a19b918c7e5eadbf0cbb4e89fec", "sha256": "d730d5fb35a3e4cc197bfa0c18694bb69801d513fc561033838a0e6887183b50"}, "downloads": -1, "filename": "yafg-0.2.tar.gz", "has_sig": false, "md5_digest": "85722a19b918c7e5eadbf0cbb4e89fec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.15, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4", "size": 4899, "upload_time": "2019-10-16T09:09:49", "upload_time_iso_8601": "2019-10-16T09:09:49.862782Z", "url": "https://files.pythonhosted.org/packages/e9/61/763d8dccefc14bcd6629df553d99ef084e9c064c99fd0b037ec6bd50be5f/yafg-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f9120db9dfe8c7b40c3c1b5c59c568f9", "sha256": "5f4a549fceff843ecac41252e6de46a767c4b18796bfdaf6e6c55501786a8b0c"}, "downloads": -1, "filename": "yafg-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f9120db9dfe8c7b40c3c1b5c59c568f9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7.15, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4", "size": 17945, "upload_time": "2019-10-16T09:09:48", "upload_time_iso_8601": "2019-10-16T09:09:48.364159Z", "url": "https://files.pythonhosted.org/packages/2c/fb/55ff724b96ab3d4d664a4947a269ee78fc0aacd635561a29a06d0f9c181b/yafg-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85722a19b918c7e5eadbf0cbb4e89fec", "sha256": "d730d5fb35a3e4cc197bfa0c18694bb69801d513fc561033838a0e6887183b50"}, "downloads": -1, "filename": "yafg-0.2.tar.gz", "has_sig": false, "md5_digest": "85722a19b918c7e5eadbf0cbb4e89fec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.15, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4", "size": 4899, "upload_time": "2019-10-16T09:09:49", "upload_time_iso_8601": "2019-10-16T09:09:49.862782Z", "url": "https://files.pythonhosted.org/packages/e9/61/763d8dccefc14bcd6629df553d99ef084e9c064c99fd0b037ec6bd50be5f/yafg-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:23:43 2020"}