{"info": {"author": "Ankush Bhatia", "author_email": "ankushbhatia02@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License"], "description": "community-detect\r\n\r\nCommunity detection using attribute and structural similarities.\r\n\r\nInstallation:\r\n\r\npip install community_detect\r\n\r\nDependencies:\r\n\r\nNetworkX\r\n\r\nMatplotlib\r\n\r\nUsage:\r\n\r\nImport:\r\n\r\nfrom community_detect import Community\r\n\r\nInitialize:\r\n\r\ncom = Community(alpha_weight = 0.5) #You can add your own value for Alpha\r\n\r\nFunctions:\r\n\r\nMain method: get_communities(Graph, #Your Graph\r\n\r\n                         Vertices, #List of Vertices\r\n\r\n                         Similarity Matrix, #Similarity matrix for attribute similarities (It should be a N X N matrix where N is the number of vertices\r\n\r\n                         Similarity Matrix Type #Types : cosine, euclidean etc\r\n\r\n                         )\r\n\r\n        Returns a dictionary with each key containing all the nodes in that community\r\nTo View Communities : view_communities(Communities, #Output of above function\r\n\r\n                                   Graph, #Your Graph\r\n\r\n                                   Vertices, #List of Vertices\r\n\r\n                                   Similarity Matrix, #Similarity matrix for attribute similarities (It should be a N X N matrix where N is the number of vertices\r\n\r\n                                   Similarity Matrix Type #Types : cosine, euclidean etc\r\n\r\n                                   )", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/asshatter/community-detect/tarball/1.0.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/asshatter/community-detect", "keywords": "Graph Clustering, Community detection", "license": "Apache License 2.0", "maintainer": "Ankush Bhatia", "maintainer_email": "ankushbhatia02@gmail.com", "name": "community_detect", "package_url": "https://pypi.org/project/community_detect/", "platform": "Python 3.5", "project_url": "https://pypi.org/project/community_detect/", "project_urls": {"Download": "https://github.com/asshatter/community-detect/tarball/1.0.0", "Homepage": "https://github.com/asshatter/community-detect"}, "release_url": "https://pypi.org/project/community_detect/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Community Detector based on algorithm for community detection using structural and attribute similarities", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            community-detect\n<br>\n<br>Community detection using attribute and structural similarities.\n<br>\n<br>Installation:\n<br>\n<br>pip install community_detect\n<br>\n<br>Dependencies:\n<br>\n<br>NetworkX\n<br>\n<br>Matplotlib\n<br>\n<br>Usage:\n<br>\n<br>Import:\n<br>\n<br>from community_detect import Community\n<br>\n<br>Initialize:\n<br>\n<br>com = Community(alpha_weight = 0.5) #You can add your own value for Alpha\n<br>\n<br>Functions:\n<br>\n<br>Main method: get_communities(Graph, #Your Graph\n<br>\n<br>                         Vertices, #List of Vertices\n<br>\n<br>                         Similarity Matrix, #Similarity matrix for attribute similarities (It should be a N X N matrix where N is the number of vertices\n<br>\n<br>                         Similarity Matrix Type #Types : cosine, euclidean etc\n<br>\n<br>                         )\n<br>\n<br>        Returns a dictionary with each key containing all the nodes in that community\n<br>To View Communities : view_communities(Communities, #Output of above function\n<br>\n<br>                                   Graph, #Your Graph\n<br>\n<br>                                   Vertices, #List of Vertices\n<br>\n<br>                                   Similarity Matrix, #Similarity matrix for attribute similarities (It should be a N X N matrix where N is the number of vertices\n<br>\n<br>                                   Similarity Matrix Type #Types : cosine, euclidean etc\n<br>\n<br>                                   )\n          </div>"}, "last_serial": 2304163, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "89667f4aadee549f992f93a1e2bddca5", "sha256": "f03e01a0375b55e8041e1f0624801d5e64063a5f541ae8b56e47d5dd3d39fd17"}, "downloads": -1, "filename": "community_detect-1.0.0.zip", "has_sig": false, "md5_digest": "89667f4aadee549f992f93a1e2bddca5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4702, "upload_time": "2016-08-21T17:40:18", "upload_time_iso_8601": "2016-08-21T17:40:18.894695Z", "url": "https://files.pythonhosted.org/packages/57/c9/eab7d6c58c263ab4234b51ce7e2a6bc2836ece7152a839f28828c9d40c80/community_detect-1.0.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "89667f4aadee549f992f93a1e2bddca5", "sha256": "f03e01a0375b55e8041e1f0624801d5e64063a5f541ae8b56e47d5dd3d39fd17"}, "downloads": -1, "filename": "community_detect-1.0.0.zip", "has_sig": false, "md5_digest": "89667f4aadee549f992f93a1e2bddca5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4702, "upload_time": "2016-08-21T17:40:18", "upload_time_iso_8601": "2016-08-21T17:40:18.894695Z", "url": "https://files.pythonhosted.org/packages/57/c9/eab7d6c58c263ab4234b51ce7e2a6bc2836ece7152a839f28828c9d40c80/community_detect-1.0.0.zip", "yanked": false}], "timestamp": "Fri May  8 00:44:19 2020"}