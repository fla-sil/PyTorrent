{"info": {"author": "Marcnuth", "author_email": "hxianxian@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Software Development :: Libraries"], "description": "# Keras Models Hub\n\n![PyPI - Downloads](https://img.shields.io/pypi/dm/keras-models?label=PyPI)\n\nThis repo aims at providing both **reusable** Keras Models and **pre-trained** models, which could easily integrated into your projects.\n\n## Install\n\n```shell\npip install keras-models\n```\n\nIf you will using the NLP models, you need run one more command:\n```shell\npython -m spacy download xx_ent_wiki_sm\n```\n\n## Usage Guide\n\n### Import\n\n```\nimport kearasmodels\n```\n\n\n### Examples\n\n#### Reusable Models\n\n__LinearModel__\n\n__DNN__\n\n__CNN__\n\n```python\nfrom keras_models.models import CNN\n\n# fake data\nX = np.random.normal(0, 1.0, size=500 * 100 * 100 * 3).reshape(500, 100, 100, 3)\nw1 = np.random.normal(0, 1.0, size=100)\nw2 = np.random.normal(0, 1.0, size=3)\nY = np.dot(np.dot(np.dot(X, w2), w1), w1) + np.random.randint(1)\n\n# initialize & train model\nmodel = CNN(input_shape=X.shape[1:], filters=[32, 64], kernel_size=(2, 2), pool_size=(3, 3), padding='same', r_dropout=0.25, num_classes=1)\nmodel.compile(optimizer='adam', loss=mean_squared_error, metrics=['mae', 'mse'])\nmodel.summary()\n\nmodel.fit(X, Y, batch_size=16, epochs=100, validation_split=0.1)\n```\n\n__SkipGram__\n\n__WideDeep__\n\n#### Pre-trained Models\n\n__VGG16_Places365__\n> This model is forked from [GKalliatakis/Keras-VGG16-places365](https://github.com/GKalliatakis/Keras-VGG16-places365) and [CSAILVision/places365](https://github.com/CSAILVision/places365)\n\n```python\nfrom keras_models.models.pretrained import vgg16_places365\nlabels = vgg16_places365.predict(['your_image_file_pathname.jpg', 'another.jpg'], n_top=3)\n\n# Example Result: labels = [['cafeteria', 'food_court', 'restaurant_patio'], ['beach', 'sand']]\n```\n\n\n## Models\n\n- LinearModel\n- DNN\n- WideDeep\n- TextCNN\n- TextDNN\n- SkipGram\n- ResNet\n- VGG16_Places365 [pre-trained]\n- working on more models\n\n## Citation\n\n__WideDeep__\n\n```\nCheng H T, Koc L, Harmsen J, et al. \nWide & deep learning for recommender systems[C]\nProceedings of the 1st workshop on deep learning for recommender systems. ACM, 2016: 7-10.\n```\n\n__TextCNN__\n\n```\nKim Y. \nConvolutional neural networks for sentence classification[J]. \narXiv preprint arXiv:1408.5882, 2014.\n```\n\n__SkipGram__\n\n```\nMikolov T, Chen K, Corrado G, et al. \nEfficient estimation of word representations in vector space[J]. \narXiv preprint arXiv:1301.3781, 2013.\n```\n\n\n__VGG16_Places365__\n```\nZhou, B., Lapedriza, A., Khosla, A., Oliva, A., & Torralba, A.\nPlaces: A 10 million Image Database for Scene Recognition\nIEEE Transactions on Pattern Analysis and Machine Intelligence\n```\n\n__ResNet__\n```\nHe K, Zhang X, Ren S, et al. \nDeep residual learning for image recognition[C]\nProceedings of the IEEE conference on computer vision and pattern recognition. 2016: 770-778.\n\n```\n\n## Contribution\n\nPlease submit PR if you want to contribute, or submit issues for new model requirements.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Marcnuth/Keras-Models", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "keras-models", "package_url": "https://pypi.org/project/keras-models/", "platform": "", "project_url": "https://pypi.org/project/keras-models/", "project_urls": {"Homepage": "https://github.com/Marcnuth/Keras-Models"}, "release_url": "https://pypi.org/project/keras-models/0.0.7/", "requires_dist": ["keras", "numpy", "spacy", "Pillow", "opencv-python", "pathlib"], "requires_python": "", "summary": "Keras Models Hub", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Keras Models Hub</h1>\n<p><img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9626a6932cdf23fe57374881b42739b67cee06a1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6b657261732d6d6f64656c733f6c6162656c3d50795049\"></p>\n<p>This repo aims at providing both <strong>reusable</strong> Keras Models and <strong>pre-trained</strong> models, which could easily integrated into your projects.</p>\n<h2>Install</h2>\n<pre>pip install keras-models\n</pre>\n<p>If you will using the NLP models, you need run one more command:</p>\n<pre>python -m spacy download xx_ent_wiki_sm\n</pre>\n<h2>Usage Guide</h2>\n<h3>Import</h3>\n<pre><code>import kearasmodels\n</code></pre>\n<h3>Examples</h3>\n<h4>Reusable Models</h4>\n<p><strong>LinearModel</strong></p>\n<p><strong>DNN</strong></p>\n<p><strong>CNN</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">keras_models.models</span> <span class=\"kn\">import</span> <span class=\"n\">CNN</span>\n\n<span class=\"c1\"># fake data</span>\n<span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">500</span> <span class=\"o\">*</span> <span class=\"mi\">100</span> <span class=\"o\">*</span> <span class=\"mi\">100</span> <span class=\"o\">*</span> <span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">w1</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">w2</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">Y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">w2</span><span class=\"p\">),</span> <span class=\"n\">w1</span><span class=\"p\">),</span> <span class=\"n\">w1</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># initialize &amp; train model</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">CNN</span><span class=\"p\">(</span><span class=\"n\">input_shape</span><span class=\"o\">=</span><span class=\"n\">X</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:],</span> <span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">],</span> <span class=\"n\">kernel_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">pool_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"s1\">'same'</span><span class=\"p\">,</span> <span class=\"n\">r_dropout</span><span class=\"o\">=</span><span class=\"mf\">0.25</span><span class=\"p\">,</span> <span class=\"n\">num_classes</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"s1\">'adam'</span><span class=\"p\">,</span> <span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"n\">mean_squared_error</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'mae'</span><span class=\"p\">,</span> <span class=\"s1\">'mse'</span><span class=\"p\">])</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">()</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">validation_split</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n</pre>\n<p><strong>SkipGram</strong></p>\n<p><strong>WideDeep</strong></p>\n<h4>Pre-trained Models</h4>\n<p><strong>VGG16_Places365</strong></p>\n<blockquote>\n<p>This model is forked from <a href=\"https://github.com/GKalliatakis/Keras-VGG16-places365\" rel=\"nofollow\">GKalliatakis/Keras-VGG16-places365</a> and <a href=\"https://github.com/CSAILVision/places365\" rel=\"nofollow\">CSAILVision/places365</a></p>\n</blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">keras_models.models.pretrained</span> <span class=\"kn\">import</span> <span class=\"n\">vgg16_places365</span>\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">vgg16_places365</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">([</span><span class=\"s1\">'your_image_file_pathname.jpg'</span><span class=\"p\">,</span> <span class=\"s1\">'another.jpg'</span><span class=\"p\">],</span> <span class=\"n\">n_top</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Example Result: labels = [['cafeteria', 'food_court', 'restaurant_patio'], ['beach', 'sand']]</span>\n</pre>\n<h2>Models</h2>\n<ul>\n<li>LinearModel</li>\n<li>DNN</li>\n<li>WideDeep</li>\n<li>TextCNN</li>\n<li>TextDNN</li>\n<li>SkipGram</li>\n<li>ResNet</li>\n<li>VGG16_Places365 [pre-trained]</li>\n<li>working on more models</li>\n</ul>\n<h2>Citation</h2>\n<p><strong>WideDeep</strong></p>\n<pre><code>Cheng H T, Koc L, Harmsen J, et al. \nWide &amp; deep learning for recommender systems[C]\nProceedings of the 1st workshop on deep learning for recommender systems. ACM, 2016: 7-10.\n</code></pre>\n<p><strong>TextCNN</strong></p>\n<pre><code>Kim Y. \nConvolutional neural networks for sentence classification[J]. \narXiv preprint arXiv:1408.5882, 2014.\n</code></pre>\n<p><strong>SkipGram</strong></p>\n<pre><code>Mikolov T, Chen K, Corrado G, et al. \nEfficient estimation of word representations in vector space[J]. \narXiv preprint arXiv:1301.3781, 2013.\n</code></pre>\n<p><strong>VGG16_Places365</strong></p>\n<pre><code>Zhou, B., Lapedriza, A., Khosla, A., Oliva, A., &amp; Torralba, A.\nPlaces: A 10 million Image Database for Scene Recognition\nIEEE Transactions on Pattern Analysis and Machine Intelligence\n</code></pre>\n<p><strong>ResNet</strong></p>\n<pre><code>He K, Zhang X, Ren S, et al. \nDeep residual learning for image recognition[C]\nProceedings of the IEEE conference on computer vision and pattern recognition. 2016: 770-778.\n\n</code></pre>\n<h2>Contribution</h2>\n<p>Please submit PR if you want to contribute, or submit issues for new model requirements.</p>\n\n          </div>"}, "last_serial": 5801486, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "49650c7b7dcdd5f648ab274374bbcaa1", "sha256": "eca8d27f98c1615172df9132495e544abb78dca07e8a996cc8c8dfc5c9909b9b"}, "downloads": -1, "filename": "keras_models-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "49650c7b7dcdd5f648ab274374bbcaa1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7148, "upload_time": "2019-07-22T09:15:54", "upload_time_iso_8601": "2019-07-22T09:15:54.657984Z", "url": "https://files.pythonhosted.org/packages/9f/98/db145ec67f20dfef6d3add566ed7a48d6451196c75a5e5d092de9c439ceb/keras_models-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c2b4aab935c953f72075720c273fc7a", "sha256": "934d09229209398a7b61922216ab2108f91565d1924cb541ac12ffc3a99f53a1"}, "downloads": -1, "filename": "keras-models-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4c2b4aab935c953f72075720c273fc7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2052, "upload_time": "2019-07-22T09:15:57", "upload_time_iso_8601": "2019-07-22T09:15:57.242782Z", "url": "https://files.pythonhosted.org/packages/b3/d9/1eab584941e406daed8435c5831d881061a1d8915039b8c0840d02af2c2c/keras-models-0.0.2.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "206818ac90c13304d52942fb030ea7d6", "sha256": "f72cd724f8e9e4d31b81e9195f112ec8b2558818fb309af15c08e55dc9cf2892"}, "downloads": -1, "filename": "keras_models-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "206818ac90c13304d52942fb030ea7d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17328, "upload_time": "2019-09-06T16:16:51", "upload_time_iso_8601": "2019-09-06T16:16:51.232053Z", "url": "https://files.pythonhosted.org/packages/1c/5e/e173345a06afe88c1ec3a5f27b75a8bd42e714de46f88c78b96e5e6cfe0d/keras_models-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3ec4d02f29209e65b57424af0de1702", "sha256": "a6e4ec87e18f79ed54a1e2c4e16acbc4a216daa4031608828bc2123ea9dbbbc6"}, "downloads": -1, "filename": "keras-models-0.0.5.tar.gz", "has_sig": false, "md5_digest": "b3ec4d02f29209e65b57424af0de1702", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10182, "upload_time": "2019-09-06T16:16:52", "upload_time_iso_8601": "2019-09-06T16:16:52.806789Z", "url": "https://files.pythonhosted.org/packages/d0/8d/a50eacaceff14bbbb371de4a01a855db3289c602a9db5b76e136b559e25f/keras-models-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "a733fe3e14aa76c09b006ff270e8f9f8", "sha256": "ddc2fecad6f4511cb0ed4c8dca9da26f9fe0c3f21fe69abdd3d03ee05b70fd03"}, "downloads": -1, "filename": "keras_models-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a733fe3e14aa76c09b006ff270e8f9f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17398, "upload_time": "2019-09-07T07:49:55", "upload_time_iso_8601": "2019-09-07T07:49:55.210744Z", "url": "https://files.pythonhosted.org/packages/02/45/6a0437da33e406e64931149fbeb820cddf1c7663fdd253ce6cede41de538/keras_models-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56a1f8b33871f1a9eff7e92aaee1fe5e", "sha256": "f5b98a524d3a5c8b7746b37d5492499343bb150eeb4832469bcd15e95f27b682"}, "downloads": -1, "filename": "keras-models-0.0.6.tar.gz", "has_sig": false, "md5_digest": "56a1f8b33871f1a9eff7e92aaee1fe5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10211, "upload_time": "2019-09-07T07:49:56", "upload_time_iso_8601": "2019-09-07T07:49:56.965484Z", "url": "https://files.pythonhosted.org/packages/50/cb/6f36398743f256f997eeb08d99e930a7aa8d8271281d4932677bcb948ed5/keras-models-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "ac39992b21418e1cebaabbb268c81fee", "sha256": "5983ea2caf98611b079b3bb8d1cc43382ba6d8b337f326246d600286299a1e67"}, "downloads": -1, "filename": "keras_models-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "ac39992b21418e1cebaabbb268c81fee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18614, "upload_time": "2019-09-09T03:21:58", "upload_time_iso_8601": "2019-09-09T03:21:58.199537Z", "url": "https://files.pythonhosted.org/packages/25/b9/b97f7202081346923af692be7c926faf7b10c4ed432f99dca416786fec1e/keras_models-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "86d9269547c8a13a8c668e33c5ec3ca9", "sha256": "6aad06ffc82dc1adf0d319c557e0963c2e9f7932536a1addbca4a539bc33c189"}, "downloads": -1, "filename": "keras-models-0.0.7.tar.gz", "has_sig": false, "md5_digest": "86d9269547c8a13a8c668e33c5ec3ca9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12464, "upload_time": "2019-09-09T03:21:59", "upload_time_iso_8601": "2019-09-09T03:21:59.933122Z", "url": "https://files.pythonhosted.org/packages/d4/a5/4d1dd4a1d31c56a28e32441404c01694faa13d384f7d679987eb16a0456e/keras-models-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ac39992b21418e1cebaabbb268c81fee", "sha256": "5983ea2caf98611b079b3bb8d1cc43382ba6d8b337f326246d600286299a1e67"}, "downloads": -1, "filename": "keras_models-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "ac39992b21418e1cebaabbb268c81fee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18614, "upload_time": "2019-09-09T03:21:58", "upload_time_iso_8601": "2019-09-09T03:21:58.199537Z", "url": "https://files.pythonhosted.org/packages/25/b9/b97f7202081346923af692be7c926faf7b10c4ed432f99dca416786fec1e/keras_models-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "86d9269547c8a13a8c668e33c5ec3ca9", "sha256": "6aad06ffc82dc1adf0d319c557e0963c2e9f7932536a1addbca4a539bc33c189"}, "downloads": -1, "filename": "keras-models-0.0.7.tar.gz", "has_sig": false, "md5_digest": "86d9269547c8a13a8c668e33c5ec3ca9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12464, "upload_time": "2019-09-09T03:21:59", "upload_time_iso_8601": "2019-09-09T03:21:59.933122Z", "url": "https://files.pythonhosted.org/packages/d4/a5/4d1dd4a1d31c56a28e32441404c01694faa13d384f7d679987eb16a0456e/keras-models-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:11 2020"}