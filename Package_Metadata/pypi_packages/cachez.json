{"info": {"author": "Cedric Zhuang", "author_email": "jealous@163.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Utilities"], "description": "Cache Decorator\n===============\n\n.. image:: https://travis-ci.org/jealous/cachez.svg\n    :target: https://travis-ci.org/jealous/cachez\n    \n.. image:: https://coveralls.io/repos/jealous/cachez/badge.svg\n    :target: https://coveralls.io/github/jealous/cachez\n\n.. image:: https://img.shields.io/pypi/v/cachez.svg\n    :target: https://pypi.python.org/pypi/cachez\n\n\nVERSION: 0.1.2\n\nIntroduction\n------------\n\nFunction decorator that helps to cache/memoize the result of a function/method.\n\nThis package contains following decorators.\n\n- cache: cache the result of the function globally.\n- instance_cache: cache the result of a method in the instance (``self``)\n- clear_instance_cache: clear the method results cached on the instance.\n\nAnd one function.\n\n- clear_cache: clear the global function cache.\n\nTested on python 2.7 and python 3.4.\n\nFor quick start, check the tutorial section of this page.\nCheck `cachez_test.py`_ for detail examples.\n\nInstallation\n------------\n\n``pip install cachez``\n\n\nLicense\n-------\n\n`Apache License version 2`_\n\nTutorial\n--------\n\n- To cache the result of the a function globally, decorate the function\n  with ``cache``.\n\n.. code-block:: python\n\n    @cache\n    def foo(x, y):\n        ...\n\n\n- To clear the global cache, call ``clear_cache()``.\n\n.. code-block:: python\n\n    clear_cache()\n\n\n- To cache the result of the method in the instance, decorate the method\n  with ``instance_cache``.\n  To clear the method cache on the instance, decorate your clear method\n  with ``clear_instance_cache``.\n\n.. code-block:: python\n\n    class Foo(object):\n        @instance_cache\n        def bar(a, b):\n            ...\n\n        @clear_instance_cache\n        def clear():\n            ...\n\n\n- To persist the function return value, use ``persisted`` decorator.\n  This decorator takes input parameter which specify when the cache\n  will expire.  The default value for cache expiration is set to 1 day.\n\n.. code-block:: python\n\n    class Foo(object):\n        @persisted()\n        def default_persist_for_1_day(x):\n            ...\n\n        @persisted(seconds=5)\n        def persist_return_value_for_5_seconds(y):\n            ...\n\n\n- The default persist folder is set to ``~/.cachez``.  You could customize\n  it by calling ``set_persist_folder``.\n\n\nTo file issue, please visit:\n\nhttps://github.com/jealous/cachez\n\n\nContact author:\n\n- Cedric Zhuang <jealous@163.com>\n\nContributors:\n\n- Ryan Liang <menglei.leung@gmail.com>\n\n.. _Apache License version 2: LICENSE.txt\n.. _cachez_test.py: cachez_test.py\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jealous/cachez", "keywords": "cache decorator", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "cachez", "package_url": "https://pypi.org/project/cachez/", "platform": "any", "project_url": "https://pypi.org/project/cachez/", "project_urls": {"Homepage": "http://github.com/jealous/cachez"}, "release_url": "https://pypi.org/project/cachez/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Cache decorator for global or instance level memoize.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/jealous/cachez\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jealous/cachez.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a4598dcc2f5184e94f4cc0788d1dc4253e8cd5b4/68747470733a2f2f7472617669732d63692e6f72672f6a65616c6f75732f63616368657a2e737667\"></a>\n<a href=\"https://coveralls.io/github/jealous/cachez\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/jealous/cachez/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7877ea036a7b4849adcff840197b066f8a839050/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6a65616c6f75732f63616368657a2f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/cachez\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/cachez.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2d74e7f5c92c247e1ef96b94c6bcc101269acdd4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f63616368657a2e737667\"></a>\n<p>VERSION: 0.1.2</p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Function decorator that helps to cache/memoize the result of a function/method.</p>\n<p>This package contains following decorators.</p>\n<ul>\n<li>cache: cache the result of the function globally.</li>\n<li>instance_cache: cache the result of a method in the instance (<tt>self</tt>)</li>\n<li>clear_instance_cache: clear the method results cached on the instance.</li>\n</ul>\n<p>And one function.</p>\n<ul>\n<li>clear_cache: clear the global function cache.</li>\n</ul>\n<p>Tested on python 2.7 and python 3.4.</p>\n<p>For quick start, check the tutorial section of this page.\nCheck <a href=\"cachez_test.py\" rel=\"nofollow\">cachez_test.py</a> for detail examples.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pip install cachez</tt></p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><a href=\"LICENSE.txt\" rel=\"nofollow\">Apache License version 2</a></p>\n</div>\n<div id=\"tutorial\">\n<h2>Tutorial</h2>\n<ul>\n<li>To cache the result of the a function globally, decorate the function\nwith <tt>cache</tt>.</li>\n</ul>\n<pre><span class=\"nd\">@cache</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>To clear the global cache, call <tt>clear_cache()</tt>.</li>\n</ul>\n<pre><span class=\"n\">clear_cache</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>To cache the result of the method in the instance, decorate the method\nwith <tt>instance_cache</tt>.\nTo clear the method cache on the instance, decorate your clear method\nwith <tt>clear_instance_cache</tt>.</li>\n</ul>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"nd\">@instance_cache</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@clear_instance_cache</span>\n    <span class=\"k\">def</span> <span class=\"nf\">clear</span><span class=\"p\">():</span>\n        <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>To persist the function return value, use <tt>persisted</tt> decorator.\nThis decorator takes input parameter which specify when the cache\nwill expire.  The default value for cache expiration is set to 1 day.</li>\n</ul>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"nd\">@persisted</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">default_persist_for_1_day</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@persisted</span><span class=\"p\">(</span><span class=\"n\">seconds</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">persist_return_value_for_5_seconds</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>The default persist folder is set to <tt><span class=\"pre\">~/.cachez</span></tt>.  You could customize\nit by calling <tt>set_persist_folder</tt>.</li>\n</ul>\n<p>To file issue, please visit:</p>\n<p><a href=\"https://github.com/jealous/cachez\" rel=\"nofollow\">https://github.com/jealous/cachez</a></p>\n<p>Contact author:</p>\n<ul>\n<li>Cedric Zhuang &lt;<a href=\"mailto:jealous%40163.com\">jealous<span>@</span>163<span>.</span>com</a>&gt;</li>\n</ul>\n<p>Contributors:</p>\n<ul>\n<li>Ryan Liang &lt;<a href=\"mailto:menglei.leung%40gmail.com\">menglei<span>.</span>leung<span>@</span>gmail<span>.</span>com</a>&gt;</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2877496, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c3be2add28dc7c9810789bf023de053a", "sha256": "98c8ae3af30963f39dd1f51a5a2a81866a9aa02051a3b4292f28cc428addbc8d"}, "downloads": -1, "filename": "cachez-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c3be2add28dc7c9810789bf023de053a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6318, "upload_time": "2016-05-27T10:09:58", "upload_time_iso_8601": "2016-05-27T10:09:58.658070Z", "url": "https://files.pythonhosted.org/packages/32/bd/d84c4cad7fdb0ae265c4249f80a6c5d7a776d83e4abc6cd77684eb7ddc15/cachez-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "caa5108ffcd9194cf69a315d5c44bbaa", "sha256": "43016507200ce6361edb4256339f4e17ce09693f42a3944eb34460651507766f"}, "downloads": -1, "filename": "cachez-0.1.0.zip", "has_sig": false, "md5_digest": "caa5108ffcd9194cf69a315d5c44bbaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12531, "upload_time": "2017-02-01T12:27:21", "upload_time_iso_8601": "2017-02-01T12:27:21.155039Z", "url": "https://files.pythonhosted.org/packages/2d/84/58be622dfe626e722da1f99b0c7143020799c5662ccfe5a38483a5073d5c/cachez-0.1.0.zip", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f2572f6b22bc5d19c816795081890b2b", "sha256": "7577673c1bb781ddb631430b12e1a5a998f660faa5df6ad04d02ee6dd21df30a"}, "downloads": -1, "filename": "cachez-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f2572f6b22bc5d19c816795081890b2b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7984, "upload_time": "2017-02-07T03:43:06", "upload_time_iso_8601": "2017-02-07T03:43:06.411572Z", "url": "https://files.pythonhosted.org/packages/60/d9/3bd41eec3c0abec55db8b5c5894d8154fdd851ce9164bf8b93a97c83c465/cachez-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c3616ad285781f4d97a4e3323d6770d", "sha256": "7cc6350cd0beb2b6100815a63f5ba23429ec1f579f29d9e0a3efc751336cb6ee"}, "downloads": -1, "filename": "cachez-0.1.1.zip", "has_sig": false, "md5_digest": "4c3616ad285781f4d97a4e3323d6770d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14197, "upload_time": "2017-02-07T03:43:01", "upload_time_iso_8601": "2017-02-07T03:43:01.514505Z", "url": "https://files.pythonhosted.org/packages/bd/ed/293f193ed33ba5cf3c1a89069cc80d97b548de2f8745602c4bc74f0e53b9/cachez-0.1.1.zip", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "65be88b0091046b6cefefe9b4e2bd9c7", "sha256": "0322d0032d6ed02b83b64a947ee10c7848e98261af5f9d7846a89e6abdc49b22"}, "downloads": -1, "filename": "cachez-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "65be88b0091046b6cefefe9b4e2bd9c7", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 8377, "upload_time": "2017-05-16T07:51:10", "upload_time_iso_8601": "2017-05-16T07:51:10.181828Z", "url": "https://files.pythonhosted.org/packages/4c/e7/3ebd5990d7d2140a138f70ce2ff5bfdc9f813ba545fbd0cd9a6857940784/cachez-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd097c80ff73d17fbe47b91d00c21ddd", "sha256": "3ebc0b052d56755902b8068a4ed0d642325f96b0070862288abaad77c9d3c282"}, "downloads": -1, "filename": "cachez-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fd097c80ff73d17fbe47b91d00c21ddd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11214, "upload_time": "2017-05-16T07:51:07", "upload_time_iso_8601": "2017-05-16T07:51:07.149063Z", "url": "https://files.pythonhosted.org/packages/c5/3e/67c7ce94d258cf0070f62aed6ef705ce83314e7e72eb40d881b5cc90642a/cachez-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "65be88b0091046b6cefefe9b4e2bd9c7", "sha256": "0322d0032d6ed02b83b64a947ee10c7848e98261af5f9d7846a89e6abdc49b22"}, "downloads": -1, "filename": "cachez-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "65be88b0091046b6cefefe9b4e2bd9c7", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 8377, "upload_time": "2017-05-16T07:51:10", "upload_time_iso_8601": "2017-05-16T07:51:10.181828Z", "url": "https://files.pythonhosted.org/packages/4c/e7/3ebd5990d7d2140a138f70ce2ff5bfdc9f813ba545fbd0cd9a6857940784/cachez-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd097c80ff73d17fbe47b91d00c21ddd", "sha256": "3ebc0b052d56755902b8068a4ed0d642325f96b0070862288abaad77c9d3c282"}, "downloads": -1, "filename": "cachez-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fd097c80ff73d17fbe47b91d00c21ddd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11214, "upload_time": "2017-05-16T07:51:07", "upload_time_iso_8601": "2017-05-16T07:51:07.149063Z", "url": "https://files.pythonhosted.org/packages/c5/3e/67c7ce94d258cf0070f62aed6ef705ce83314e7e72eb40d881b5cc90642a/cachez-0.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:42 2020"}