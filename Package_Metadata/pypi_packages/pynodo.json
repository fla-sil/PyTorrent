{"info": {"author": "Taavi P\u00e4ll", "author_email": "tapa741@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "\n![](https://github.com/tpall/pynodo/workflows/CI/badge.svg)[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=tpall_zenapi&metric=alert_status)](https://sonarcloud.io/dashboard?id=tpall_zenapi)[![DOI](https://zenodo.org/badge/231588382.svg)](https://zenodo.org/badge/latestdoi/231588382)\n\n# Pynodo -- manage your Zenodo depositions\n\nPython wrapper for Zenodo REST API for working with Zenodo depositions and files.\n\n## Installation\n\n```python\npip install pynodo\n```\n\n## Usage\n\n[Zenodo](https://zenodo.org) access token with write scope is necessary to access depositions and files.\nSeparate token is neccessary for [zenodo sandbox](https://sandbox.zenodo.org) environment.\nSandbox can be switched by setting `sandbox=True` when initiating *pynodo* instance.\n\n- Depositions can be accessed using *pynodo.Depositions* class. \n\n- Files in a deposition can be accessed using *pynodo.DepositionFiles* class.\n\n- *Depositions.create* and *DepositionFiles.files* return namedtuple and list of namedtuples, respectively.\nOther functions return either json response or status code (delete).\n\n- Actions (e.g. publish, new version, edit) are not implemented.\n\n### Working with Depositions\n\npynodo allows listing, creating, retrieving, updating and deleting of depostions.\n\n- Create zenodo (sandbox) instance\n\n```python\nimport pynodo\nimport os\n\nzen = pynodo.Depositions(access_token=os.environ[\"ZENODO_SANDBOX_PAT\"], sandbox=True)\n```\n\n- List user depositions\n\n```python\ndepos = zen.list(params={\"size\": 50})\n```\n\n- Create a new deposition with some metadata\n\n```python\ndata = {\n    \"metadata\": {\n        \"title\": \"My first upload\",\n        \"upload_type\": \"poster\",\n        \"description\": \"This is my first upload\",\n        \"creators\": [{\"name\": \"P\u00e4ll, Taavi\", \"affiliation\": \"UT\"}],\n    }\n}\nnew_depo = zen.create(data=data)\n```\n\n- Retrieve deposition info\n\n```python\nret_depo = zen.retrieve(deposition=new_depo.id)\n```\n\n- Update deposition metadata\n\n```python\nupdates = {\n    \"metadata\": {\n        \"title\": \"Modified upload\",\n        \"upload_type\": \"dataset\",\n        \"description\": \"This is updated upload\",\n        \"creators\": [\n            {\"name\": \"P\u00e4ll, Taavi\", \"affiliation\": \"UT\"},\n            {\"name\": \"Sus, Scrofa\", \"affiliation\": \"Mets\"},\n        ],\n    }\n}\nupdated_depo = zen.update(deposition=new_depo.id, data=updates)\n```\n\n- Delete deposition (status code 204 shows success)\n\n```python\nzen.delete(new_depo.id)\n```\n\n### Working with DepositionFiles\n\npynodo allows listing, uploading, downloading and deleting of files in a deposition.\n\n- Create zenodo (sandbox) instance\n\n```python\nimport pynodo\nimport os\nzen = pynodo.Depositions(access_token=os.environ[\"ZENODO_SANDBOX_PAT\"], sandbox=True)\n```\n\n- Create new deposition\n\n```python\nnew_depo = zen.create()\n```\n\n- Retrive deposition\n\n```python\nret_depo = zen.retrieve(deposition=new_depo.id)\n```\n\n- Create new instance for listing files\n\n```python\nzen_files = pynodo.DepositionFiles(\n    deposition=new_depo.id,\n    access_token=os.environ[\"ZENODO_SANDBOX_PAT\"],\n    sandbox=True,\n)\n```\n\n- Upload file (second argument with new file name is optional)\n\n```python\nzen_files.upload(\"tests/upload.txt\", \"uploaded_file.txt\")\n```\n\n- List files in deposition\n\n```python\nfiles = zen_files.files\n```\n\n- Download file from deposition (second argument with download folder is optional)\n\n```python\nzen_files.download(\"uploaded_file.txt\", \"tmp\")\n```\n\n- Delete file (status code 204 shows success)\n\n```python\nzen_files.delete(\"uploaded_file.txt\")\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tpall/zenapi", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pynodo", "package_url": "https://pypi.org/project/pynodo/", "platform": "", "project_url": "https://pypi.org/project/pynodo/", "project_urls": {"Homepage": "https://github.com/tpall/zenapi"}, "release_url": "https://pypi.org/project/pynodo/0.2.2/", "requires_dist": ["requests"], "requires_python": ">=3.5", "summary": "Python wrapper for Zenodo REST API", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/603f2d1f928d1d1276a705e4a7942b8e6d868fc0/68747470733a2f2f6769746875622e636f6d2f7470616c6c2f70796e6f646f2f776f726b666c6f77732f43492f62616467652e737667\"><a href=\"https://sonarcloud.io/dashboard?id=tpall_zenapi\" rel=\"nofollow\"><img alt=\"Quality Gate Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85fffe2b9f6d8ab267a95fc90a7f094ad28464d7/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d7470616c6c5f7a656e617069266d65747269633d616c6572745f737461747573\"></a><a href=\"https://zenodo.org/badge/latestdoi/231588382\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/943c81f46a6c53be0e0ea563b1914fd037f88e45/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3233313538383338322e737667\"></a></p>\n<h1>Pynodo -- manage your Zenodo depositions</h1>\n<p>Python wrapper for Zenodo REST API for working with Zenodo depositions and files.</p>\n<h2>Installation</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">pynodo</span>\n</pre>\n<h2>Usage</h2>\n<p><a href=\"https://zenodo.org\" rel=\"nofollow\">Zenodo</a> access token with write scope is necessary to access depositions and files.\nSeparate token is neccessary for <a href=\"https://sandbox.zenodo.org\" rel=\"nofollow\">zenodo sandbox</a> environment.\nSandbox can be switched by setting <code>sandbox=True</code> when initiating <em>pynodo</em> instance.</p>\n<ul>\n<li>\n<p>Depositions can be accessed using <em>pynodo.Depositions</em> class.</p>\n</li>\n<li>\n<p>Files in a deposition can be accessed using <em>pynodo.DepositionFiles</em> class.</p>\n</li>\n<li>\n<p><em>Depositions.create</em> and <em>DepositionFiles.files</em> return namedtuple and list of namedtuples, respectively.\nOther functions return either json response or status code (delete).</p>\n</li>\n<li>\n<p>Actions (e.g. publish, new version, edit) are not implemented.</p>\n</li>\n</ul>\n<h3>Working with Depositions</h3>\n<p>pynodo allows listing, creating, retrieving, updating and deleting of depostions.</p>\n<ul>\n<li>Create zenodo (sandbox) instance</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pynodo</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"n\">zen</span> <span class=\"o\">=</span> <span class=\"n\">pynodo</span><span class=\"o\">.</span><span class=\"n\">Depositions</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"ZENODO_SANDBOX_PAT\"</span><span class=\"p\">],</span> <span class=\"n\">sandbox</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>List user depositions</li>\n</ul>\n<pre><span class=\"n\">depos</span> <span class=\"o\">=</span> <span class=\"n\">zen</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"size\"</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">})</span>\n</pre>\n<ul>\n<li>Create a new deposition with some metadata</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"metadata\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"My first upload\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"upload_type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"poster\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"This is my first upload\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"creators\"</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"P\u00e4ll, Taavi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"affiliation\"</span><span class=\"p\">:</span> <span class=\"s2\">\"UT\"</span><span class=\"p\">}],</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"n\">new_depo</span> <span class=\"o\">=</span> <span class=\"n\">zen</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Retrieve deposition info</li>\n</ul>\n<pre><span class=\"n\">ret_depo</span> <span class=\"o\">=</span> <span class=\"n\">zen</span><span class=\"o\">.</span><span class=\"n\">retrieve</span><span class=\"p\">(</span><span class=\"n\">deposition</span><span class=\"o\">=</span><span class=\"n\">new_depo</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Update deposition metadata</li>\n</ul>\n<pre><span class=\"n\">updates</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"metadata\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Modified upload\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"upload_type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"dataset\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"This is updated upload\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"creators\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"P\u00e4ll, Taavi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"affiliation\"</span><span class=\"p\">:</span> <span class=\"s2\">\"UT\"</span><span class=\"p\">},</span>\n            <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Sus, Scrofa\"</span><span class=\"p\">,</span> <span class=\"s2\">\"affiliation\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Mets\"</span><span class=\"p\">},</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"n\">updated_depo</span> <span class=\"o\">=</span> <span class=\"n\">zen</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">deposition</span><span class=\"o\">=</span><span class=\"n\">new_depo</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">updates</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Delete deposition (status code 204 shows success)</li>\n</ul>\n<pre><span class=\"n\">zen</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">new_depo</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n</pre>\n<h3>Working with DepositionFiles</h3>\n<p>pynodo allows listing, uploading, downloading and deleting of files in a deposition.</p>\n<ul>\n<li>Create zenodo (sandbox) instance</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pynodo</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"n\">zen</span> <span class=\"o\">=</span> <span class=\"n\">pynodo</span><span class=\"o\">.</span><span class=\"n\">Depositions</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"ZENODO_SANDBOX_PAT\"</span><span class=\"p\">],</span> <span class=\"n\">sandbox</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Create new deposition</li>\n</ul>\n<pre><span class=\"n\">new_depo</span> <span class=\"o\">=</span> <span class=\"n\">zen</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>Retrive deposition</li>\n</ul>\n<pre><span class=\"n\">ret_depo</span> <span class=\"o\">=</span> <span class=\"n\">zen</span><span class=\"o\">.</span><span class=\"n\">retrieve</span><span class=\"p\">(</span><span class=\"n\">deposition</span><span class=\"o\">=</span><span class=\"n\">new_depo</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Create new instance for listing files</li>\n</ul>\n<pre><span class=\"n\">zen_files</span> <span class=\"o\">=</span> <span class=\"n\">pynodo</span><span class=\"o\">.</span><span class=\"n\">DepositionFiles</span><span class=\"p\">(</span>\n    <span class=\"n\">deposition</span><span class=\"o\">=</span><span class=\"n\">new_depo</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n    <span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"ZENODO_SANDBOX_PAT\"</span><span class=\"p\">],</span>\n    <span class=\"n\">sandbox</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Upload file (second argument with new file name is optional)</li>\n</ul>\n<pre><span class=\"n\">zen_files</span><span class=\"o\">.</span><span class=\"n\">upload</span><span class=\"p\">(</span><span class=\"s2\">\"tests/upload.txt\"</span><span class=\"p\">,</span> <span class=\"s2\">\"uploaded_file.txt\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>List files in deposition</li>\n</ul>\n<pre><span class=\"n\">files</span> <span class=\"o\">=</span> <span class=\"n\">zen_files</span><span class=\"o\">.</span><span class=\"n\">files</span>\n</pre>\n<ul>\n<li>Download file from deposition (second argument with download folder is optional)</li>\n</ul>\n<pre><span class=\"n\">zen_files</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"s2\">\"uploaded_file.txt\"</span><span class=\"p\">,</span> <span class=\"s2\">\"tmp\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Delete file (status code 204 shows success)</li>\n</ul>\n<pre><span class=\"n\">zen_files</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s2\">\"uploaded_file.txt\"</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6401965, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "cf50575f47b1454961b9a364b05805b8", "sha256": "90379d0285adb63e3bcab85dbbe03e1de1f3f573cab749a74f486ae108f159f3"}, "downloads": -1, "filename": "pynodo-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cf50575f47b1454961b9a364b05805b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6891, "upload_time": "2020-01-05T15:14:48", "upload_time_iso_8601": "2020-01-05T15:14:48.134374Z", "url": "https://files.pythonhosted.org/packages/52/cd/3ee3cddb9bbd7eba3aa2890924760e3f2d56b8164bc9c7d6180ef12dd551/pynodo-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebf17ec41a66b7918eb4335657e150fa", "sha256": "4b348eef6c185df0a1670f647d97e917787ca512da4fc4a71a9926878d8f464c"}, "downloads": -1, "filename": "pynodo-0.1.tar.gz", "has_sig": false, "md5_digest": "ebf17ec41a66b7918eb4335657e150fa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4095, "upload_time": "2020-01-05T15:14:50", "upload_time_iso_8601": "2020-01-05T15:14:50.679568Z", "url": "https://files.pythonhosted.org/packages/69/24/a30430f9b201bd5eee1caac6a311a1e6a09a295b9fbe1bcdf5972d8b1061/pynodo-0.1.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "7d4d6640c74d36fffe0148434ef516d3", "sha256": "e59645182df6fa0e59b85ac3cfd8aff6820837bf48c183cafe573755934d23a9"}, "downloads": -1, "filename": "pynodo-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7d4d6640c74d36fffe0148434ef516d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6968, "upload_time": "2020-01-06T11:17:18", "upload_time_iso_8601": "2020-01-06T11:17:18.286338Z", "url": "https://files.pythonhosted.org/packages/85/11/80f0cc4e160c6f699ad1ce023ba54c97dfdc7d080d69dbaec7e1499a50f1/pynodo-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fb338407ff3accb56e2ff13961452ff", "sha256": "daa0d9734a03951a8b79fb7ef7f8a406e312cf282b547d7a4a591f3d62013631"}, "downloads": -1, "filename": "pynodo-0.2.1.tar.gz", "has_sig": false, "md5_digest": "4fb338407ff3accb56e2ff13961452ff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4182, "upload_time": "2020-01-06T11:17:19", "upload_time_iso_8601": "2020-01-06T11:17:19.809036Z", "url": "https://files.pythonhosted.org/packages/39/f7/5c168d7543b25f79a0c354f1968ffe159dda82118bb77678e13165a43502/pynodo-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "5f37d1cca7c4402c382885cb6d39c8f7", "sha256": "345982ab3c3265757dbe15989f8d6f77fe4b6fa12ec4b8376411bcc173289af6"}, "downloads": -1, "filename": "pynodo-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5f37d1cca7c4402c382885cb6d39c8f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6981, "upload_time": "2020-01-06T11:49:28", "upload_time_iso_8601": "2020-01-06T11:49:28.342630Z", "url": "https://files.pythonhosted.org/packages/cd/e6/ac0062c7fda3d68bf4febfa2ffb2c0c42b40582abdda1e7cd2ddcc72b132/pynodo-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a414ec20e2f04d2a2d0560789dba6720", "sha256": "76c75e824f570edad803272c25a11192c8b8189a575885b53bf4fe162798e655"}, "downloads": -1, "filename": "pynodo-0.2.2.tar.gz", "has_sig": false, "md5_digest": "a414ec20e2f04d2a2d0560789dba6720", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4451, "upload_time": "2020-01-06T11:49:29", "upload_time_iso_8601": "2020-01-06T11:49:29.987939Z", "url": "https://files.pythonhosted.org/packages/82/15/f1771c6854b60473ea3e10ffb17ccfe45d13056552f2a65c829ed58c82a7/pynodo-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f37d1cca7c4402c382885cb6d39c8f7", "sha256": "345982ab3c3265757dbe15989f8d6f77fe4b6fa12ec4b8376411bcc173289af6"}, "downloads": -1, "filename": "pynodo-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5f37d1cca7c4402c382885cb6d39c8f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6981, "upload_time": "2020-01-06T11:49:28", "upload_time_iso_8601": "2020-01-06T11:49:28.342630Z", "url": "https://files.pythonhosted.org/packages/cd/e6/ac0062c7fda3d68bf4febfa2ffb2c0c42b40582abdda1e7cd2ddcc72b132/pynodo-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a414ec20e2f04d2a2d0560789dba6720", "sha256": "76c75e824f570edad803272c25a11192c8b8189a575885b53bf4fe162798e655"}, "downloads": -1, "filename": "pynodo-0.2.2.tar.gz", "has_sig": false, "md5_digest": "a414ec20e2f04d2a2d0560789dba6720", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4451, "upload_time": "2020-01-06T11:49:29", "upload_time_iso_8601": "2020-01-06T11:49:29.987939Z", "url": "https://files.pythonhosted.org/packages/82/15/f1771c6854b60473ea3e10ffb17ccfe45d13056552f2a65c829ed58c82a7/pynodo-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:06 2020"}