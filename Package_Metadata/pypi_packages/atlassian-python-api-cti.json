{"info": {"author": "Matt Harasymczuk", "author_email": "matt@astrotech.io", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: OS Independent", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "============================\nAtlassian Python API wrapper\n============================\n|Build Status| |PyPI version| |PyPI - Downloads| |License| |Codacy Badge|\n\nDocumentation\n-------------\n\n`Documentation (beta)`_\n\n.. _Documentation (beta): https://atlassian-python-api.readthedocs.io/en/latest/index.html\n\nExamples\n--------\n\nFor everyday normal use, just install package using pip\n\n::\n\n   pip install atlassian-python-api\n\nHere's a short example how to create a Confluence page:\n\n.. code-block:: python\n\n    from atlassian import Confluence\n\n    confluence = Confluence(\n        url='http://localhost:8090',\n        username='admin',\n        password='admin')\n\n    status = confluence.create_page(\n        space='DEMO',\n        title='This is the title',\n        body='This is the body. You can use <strong>HTML tags</strong>!')\n\n    print(status)\n\nAnd here's another example how to get issues from Jira using JQL Query:\n\n.. code-block:: python\n\n    from atlassian import Jira\n\n    jira = Jira(\n        url='http://localhost:8080',\n        username='admin',\n        password='admin')\n\n    JQL = 'project = DEMO AND status NOT IN (Closed, Resolved) ORDER BY issuekey'\n    data = jira.jql(JQL)\n    print(data)\n\nAlso, you can use the Bitbucket module e.g. for get project list\n\n.. code-block:: python\n\n    from atlassian import Bitbucket\n\n    bitbucket = Bitbucket(\n            url='http://localhost:7990',\n            username='admin',\n            password='admin')\n    data = bitbucket.project_list()\n    print(data)\n\nNow you can use Jira Service Desk module. See docs.\nExample to get your requests:\n\n.. code-block:: python\n\n    from atlassian import ServiceDesk\n\n    sd = ServiceDesk(\n            url='http://localhost:7990',\n            username='admin',\n            password='admin')\n    my_requests = sd.get_my_customer_requests()\n    print(my_requests)\n\nPlease make sure, you've checked ``examples/`` directory on how to build scripts using the API.\nIf you want to see response in pretty print format json. Feel free for use construction like:\n\n.. code-block:: python\n\n    from pprint import pprint\n    # you code here\n    # and then print using pprint(result) instead of print(result)\n    pprint(response)\n\nDevelopment and Deployment (For contributors)\n---------------------------------------------\n\nSee the `Contribution guidelines for this project`_ for details on how to make changes to this library.\n\n.. _Contribution guidelines for this project: CONTRIBUTING.rst\n.. |Build Status| image:: https://travis-ci.org/atlassian-api/atlassian-python-api.svg?branch=master\n   :target: https://pypi.python.org/pypi/atlassian-python-api\n   :alt: Build status\n.. |PyPI version| image:: https://badge.fury.io/py/atlassian-python-api.svg\n   :target: https://badge.fury.io/py/atlassian-python-api\n   :alt: PyPI version\n.. |License| image:: https://img.shields.io/pypi/l/atlassian-python-api.svg\n   :target: https://pypi.python.org/pypi/atlassian-python-api\n   :alt: License\n.. |Codacy Badge| image:: https://api.codacy.com/project/badge/Grade/c822908f507544fe98ae37b25518ae3d\n   :target: https://www.codacy.com/project/gonchik/atlassian-python-api/dashboard\n   :alt: Codacy Badge\n.. |PyPI - Downloads| image:: https://img.shields.io/pypi/dm/atlassian-python-api.svg\n   :alt: PyPI - Downloads\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/atlassian-api/atlassian-python-api", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/atlassian-api/atlassian-python-api", "keywords": "atlassian jira confluence bitbucket bamboo crowd portfolio servicedesk jsd rest api", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "atlassian-python-api-cti", "package_url": "https://pypi.org/project/atlassian-python-api-cti/", "platform": "Platform Independent", "project_url": "https://pypi.org/project/atlassian-python-api-cti/", "project_urls": {"Download": "https://github.com/atlassian-api/atlassian-python-api", "Homepage": "https://github.com/atlassian-api/atlassian-python-api"}, "release_url": "https://pypi.org/project/atlassian-python-api-cti/1.12.0/", "requires_dist": ["requests", "six"], "requires_python": "", "summary": "Python Atlassian REST API Wrapper", "version": "1.12.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/atlassian-python-api\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1af55bc9e36be92087e6670a2f3e73743bcc1d0a/68747470733a2f2f7472617669732d63692e6f72672f61746c61737369616e2d6170692f61746c61737369616e2d707974686f6e2d6170692e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://badge.fury.io/py/atlassian-python-api\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3603867f98dc0aa12f637c42fcc41a2d522fd2d3/68747470733a2f2f62616467652e667572792e696f2f70792f61746c61737369616e2d707974686f6e2d6170692e737667\"></a> <img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b186f4c841b2e5884153949d21d64e6efb0cc0a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f61746c61737369616e2d707974686f6e2d6170692e737667\"> <a href=\"https://pypi.python.org/pypi/atlassian-python-api\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9eb8296abdccefd06a5b4be940d2ef5a06407788/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f61746c61737369616e2d707974686f6e2d6170692e737667\"></a> <a href=\"https://www.codacy.com/project/gonchik/atlassian-python-api/dashboard\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c3b3e0044753c34fb4d2b15dd7b58129f3ab895/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6338323239303866353037353434666539386165333762323535313861653364\"></a></p>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p><a href=\"https://atlassian-python-api.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">Documentation (beta)</a></p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>For everyday normal use, just install package using pip</p>\n<pre>pip install atlassian-python-api\n</pre>\n<p>Here\u2019s a short example how to create a Confluence page:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">atlassian</span> <span class=\"kn\">import</span> <span class=\"n\">Confluence</span>\n\n<span class=\"n\">confluence</span> <span class=\"o\">=</span> <span class=\"n\">Confluence</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'http://localhost:8090'</span><span class=\"p\">,</span>\n    <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">,</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">)</span>\n\n<span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">confluence</span><span class=\"o\">.</span><span class=\"n\">create_page</span><span class=\"p\">(</span>\n    <span class=\"n\">space</span><span class=\"o\">=</span><span class=\"s1\">'DEMO'</span><span class=\"p\">,</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'This is the title'</span><span class=\"p\">,</span>\n    <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s1\">'This is the body. You can use &lt;strong&gt;HTML tags&lt;/strong&gt;!'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">)</span>\n</pre>\n<p>And here\u2019s another example how to get issues from Jira using JQL Query:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">atlassian</span> <span class=\"kn\">import</span> <span class=\"n\">Jira</span>\n\n<span class=\"n\">jira</span> <span class=\"o\">=</span> <span class=\"n\">Jira</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'http://localhost:8080'</span><span class=\"p\">,</span>\n    <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">,</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">)</span>\n\n<span class=\"n\">JQL</span> <span class=\"o\">=</span> <span class=\"s1\">'project = DEMO AND status NOT IN (Closed, Resolved) ORDER BY issuekey'</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">jira</span><span class=\"o\">.</span><span class=\"n\">jql</span><span class=\"p\">(</span><span class=\"n\">JQL</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<p>Also, you can use the Bitbucket module e.g. for get project list</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">atlassian</span> <span class=\"kn\">import</span> <span class=\"n\">Bitbucket</span>\n\n<span class=\"n\">bitbucket</span> <span class=\"o\">=</span> <span class=\"n\">Bitbucket</span><span class=\"p\">(</span>\n        <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'http://localhost:7990'</span><span class=\"p\">,</span>\n        <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">,</span>\n        <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">bitbucket</span><span class=\"o\">.</span><span class=\"n\">project_list</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<p>Now you can use Jira Service Desk module. See docs.\nExample to get your requests:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">atlassian</span> <span class=\"kn\">import</span> <span class=\"n\">ServiceDesk</span>\n\n<span class=\"n\">sd</span> <span class=\"o\">=</span> <span class=\"n\">ServiceDesk</span><span class=\"p\">(</span>\n        <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'http://localhost:7990'</span><span class=\"p\">,</span>\n        <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">,</span>\n        <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">)</span>\n<span class=\"n\">my_requests</span> <span class=\"o\">=</span> <span class=\"n\">sd</span><span class=\"o\">.</span><span class=\"n\">get_my_customer_requests</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_requests</span><span class=\"p\">)</span>\n</pre>\n<p>Please make sure, you\u2019ve checked <tt>examples/</tt> directory on how to build scripts using the API.\nIf you want to see response in pretty print format json. Feel free for use construction like:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n<span class=\"c1\"># you code here</span>\n<span class=\"c1\"># and then print using pprint(result) instead of print(result)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"development-and-deployment-for-contributors\">\n<h2>Development and Deployment (For contributors)</h2>\n<p>See the <a href=\"CONTRIBUTING.rst\" rel=\"nofollow\">Contribution guidelines for this project</a> for details on how to make changes to this library.</p>\n</div>\n\n          </div>"}, "last_serial": 4826891, "releases": {"1.12.0": [{"comment_text": "", "digests": {"md5": "e3ec6f0ee6a9ccb5530a5e04c6c5a80e", "sha256": "f7d1a4cf9ca2675fde0f1a162d9bc670755a8fe44b51602ee1448255cde51144"}, "downloads": -1, "filename": "atlassian_python_api_cti-1.12.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e3ec6f0ee6a9ccb5530a5e04c6c5a80e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38304, "upload_time": "2019-02-15T20:42:14", "upload_time_iso_8601": "2019-02-15T20:42:14.754555Z", "url": "https://files.pythonhosted.org/packages/dc/5e/f67f864df6817d8f898ed98ce725f8185ba7d7016ab659b584fa2cd6072c/atlassian_python_api_cti-1.12.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49687784cc9f11c044492a58726ed914", "sha256": "1aeba5365e906d32cec4a072dcd86225a11211e18e664e30d12923bd7f1d1a04"}, "downloads": -1, "filename": "atlassian-python-api-cti-1.12.0.tar.gz", "has_sig": false, "md5_digest": "49687784cc9f11c044492a58726ed914", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34979, "upload_time": "2019-02-15T20:42:17", "upload_time_iso_8601": "2019-02-15T20:42:17.146142Z", "url": "https://files.pythonhosted.org/packages/7a/e1/9b174d9c13a42b9c7b5ba04e6fedc6ad610c9f770161c8169e035eb8377d/atlassian-python-api-cti-1.12.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e3ec6f0ee6a9ccb5530a5e04c6c5a80e", "sha256": "f7d1a4cf9ca2675fde0f1a162d9bc670755a8fe44b51602ee1448255cde51144"}, "downloads": -1, "filename": "atlassian_python_api_cti-1.12.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e3ec6f0ee6a9ccb5530a5e04c6c5a80e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38304, "upload_time": "2019-02-15T20:42:14", "upload_time_iso_8601": "2019-02-15T20:42:14.754555Z", "url": "https://files.pythonhosted.org/packages/dc/5e/f67f864df6817d8f898ed98ce725f8185ba7d7016ab659b584fa2cd6072c/atlassian_python_api_cti-1.12.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49687784cc9f11c044492a58726ed914", "sha256": "1aeba5365e906d32cec4a072dcd86225a11211e18e664e30d12923bd7f1d1a04"}, "downloads": -1, "filename": "atlassian-python-api-cti-1.12.0.tar.gz", "has_sig": false, "md5_digest": "49687784cc9f11c044492a58726ed914", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34979, "upload_time": "2019-02-15T20:42:17", "upload_time_iso_8601": "2019-02-15T20:42:17.146142Z", "url": "https://files.pythonhosted.org/packages/7a/e1/9b174d9c13a42b9c7b5ba04e6fedc6ad610c9f770161c8169e035eb8377d/atlassian-python-api-cti-1.12.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:35 2020"}