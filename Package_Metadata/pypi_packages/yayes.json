{"info": {"author": "Greg Yannett & Josh Hayes", "author_email": "gsyann@berkeley.edu, hayesjosh@alumni.stanford.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python"], "description": "# Yayes Data Patching\n\n### Overview:\nYayes patching was designed to repair erroneous entries in data streams while maintaining accuracy of overall trends. The yayes package is most powerful in situations where users see sudden, temporary drops in variables' values that then return to correct variable values (i.e. discrepancies in variable values that may be caused by missing data or data input errors). This method was inspired by the logic behind max-pooling insofar as high values of data often contain more meaningful information and that lower values of data may more often be discarded without losing relevant information. \n\nYayes is not intended to resolve all data errors and should only be applied intentionally to those specific contexts where it defensibly improves subsequent analyses. \n\n\n### Example Code\n\n> import yayes \n\n> df[yayes_col] = yayes(col_to_yayes)\n\n\n#### Inputs:\n\n* x: a pandas Series or numpy array on which yayes will be applied.\n\n* continue_walk_thresh: a float between 0 and 1 that determines whether to continue walking along trough or not.  If the function sees an increase that is larger than continue_walk_thresh * (the initial difference that triggered the process), the walk stops.\n\n* max_walk_range: an (optional) integer > 0 that stops the walking process if the function has traversed at least max_walk_range steps.\n\n* final_entry_lift: a boolean that determines whether whether to apply the yayes process to the last entry in the array.\n\n* final_entry_lift_thresh: a float between 0 and 1.  If final_entry_lift_thresh * (the second to last value in the array) is greater than or equal to the amount\n                                 dropped at the final entry, apply the yayes process.\n\n#### Output:\n\n* x: The input (numpy) array after the yayes process has been applied\n\n### Data Patching Logic\nThe Yayes patcher takes in an array and calculates a difference array. The patcher then traverses the array and only activates once a negative difference occurs. If a second negative difference occurs, the walker deactivates. Otherwise, the walker continues navigating the array for as long as the values do not differ significantly. Once a significant increase is observed, the walker determines the magnitude of the increase and either marks the gap to be patched or deactivates. Patching is done by calling a separate function that applied a linear transformation between two points of the array. After patching, the walker restarts traversing the array after the point of initial activation.  \n\n\n## Contact\n\nCorrespondences can be direct to gsyann@berkeley.edu and hayesjosh@alumni.stanford.edu. \n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hayesjosh/yayes", "keywords": "yayes smoothing data error fill patching trend Greg Yannett Josh Hayes", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "yayes", "package_url": "https://pypi.org/project/yayes/", "platform": "", "project_url": "https://pypi.org/project/yayes/", "project_urls": {"Homepage": "https://github.com/hayesjosh/yayes"}, "release_url": "https://pypi.org/project/yayes/1.0.6/", "requires_dist": ["numpy", "pandas"], "requires_python": "", "summary": "Repair erroneous entries in data streams while maintaining accuracy of overall trends.", "version": "1.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Yayes Data Patching</p>\n<p>### Overview:\nYayes patching was designed to repair erroneous entries in data streams while maintaining accuracy of overall trends. The yayes package is most powerful in situations where users see sudden, temporary drops in variables\u2019 values that then return to correct variable values (i.e. discrepancies in variable values that may be caused by missing data or data input errors). This method was inspired by the logic behind max-pooling insofar as high values of data often contain more meaningful information and that lower values of data may more often be discarded without losing relevant information.</p>\n<p>Yayes is not intended to resolve all data errors and should only be applied intentionally to those specific contexts where it defensibly improves subsequent analyses.</p>\n<p>### Example Code</p>\n<p>&gt; import yayes</p>\n<p>&gt; df[yayes_col] = yayes(col_to_yayes)</p>\n<p>#### Inputs:</p>\n<ul>\n<li>x: a pandas Series or numpy array on which yayes will be applied.</li>\n<li>continue_walk_thresh: a float between 0 and 1 that determines whether to continue walking along trough or not.  If the function sees an increase that is larger than continue_walk_thresh * (the initial difference that triggered the process), the walk stops.</li>\n<li>max_walk_range: an (optional) integer &gt; 0 that stops the walking process if the function has traversed at least max_walk_range steps.</li>\n<li>final_entry_lift: a boolean that determines whether whether to apply the yayes process to the last entry in the array.</li>\n<li><dl>\n<dt>final_entry_lift_thresh: a float between 0 and 1.  If final_entry_lift_thresh * (the second to last value in the array) is greater than or equal to the amount</dt>\n<dd>dropped at the final entry, apply the yayes process.</dd>\n</dl>\n</li>\n</ul>\n<p>#### Output:</p>\n<ul>\n<li>x: The input (numpy) array after the yayes process has been applied</li>\n</ul>\n<p>### Data Patching Logic\nThe Yayes patcher takes in an array and calculates a difference array. The patcher then traverses the array and only activates once a negative difference occurs. If a second negative difference occurs, the walker deactivates. Otherwise, the walker continues navigating the array for as long as the values do not differ significantly. Once a significant increase is observed, the walker determines the magnitude of the increase and either marks the gap to be patched or deactivates. Patching is done by calling a separate function that applied a linear transformation between two points of the array. After patching, the walker restarts traversing the array after the point of initial activation.</p>\n<p>## Contact</p>\n<p>Correspondences can be direct to <a href=\"mailto:gsyann%40berkeley.edu\">gsyann<span>@</span>berkeley<span>.</span>edu</a> and <a href=\"mailto:hayesjosh%40alumni.stanford.edu\">hayesjosh<span>@</span>alumni<span>.</span>stanford<span>.</span>edu</a>.</p>\n\n          </div>"}, "last_serial": 5936561, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "1c07e1b8390aa2a4ff8856e07cc96efd", "sha256": "fb6043dd94560c0579ff311a066af86799d0d1e5069e92916b1a6826d6db2419"}, "downloads": -1, "filename": "yayes-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1c07e1b8390aa2a4ff8856e07cc96efd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5603, "upload_time": "2019-09-19T06:24:02", "upload_time_iso_8601": "2019-09-19T06:24:02.887981Z", "url": "https://files.pythonhosted.org/packages/9e/79/d0341ef6901f013ed97e348ca97d0ae80c57c7c46cded64b2aa938915420/yayes-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3e10cc9e512c066cfbb79cdd36a4db6", "sha256": "d57f6d0a5d8f8a30ffa90c931f343ad1bd96e2d637d1bd213b79f6b6347a86ea"}, "downloads": -1, "filename": "yayes-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f3e10cc9e512c066cfbb79cdd36a4db6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3305, "upload_time": "2019-09-19T05:51:33", "upload_time_iso_8601": "2019-09-19T05:51:33.888537Z", "url": "https://files.pythonhosted.org/packages/b8/80/8d98cfdb8cd28cb23086a9496db67149e8135986605847fc46dd9bcc9111/yayes-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50e26db78c4eeff5e87c33d1f30a250a", "sha256": "703d90296aef3d77cd24eefc589b2a968b491b6b9a936f35baee060cf96365b8"}, "downloads": -1, "filename": "yayes-1.0.tar.gz", "has_sig": false, "md5_digest": "50e26db78c4eeff5e87c33d1f30a250a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2022, "upload_time": "2019-09-19T05:51:36", "upload_time_iso_8601": "2019-09-19T05:51:36.232224Z", "url": "https://files.pythonhosted.org/packages/75/1a/6e67f8c2683e554db0b9c64f8079ad0ca0e5e18ec455539d2b4cb79e11bf/yayes-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4939ec2a5f0b75c67cb543c454f6fee7", "sha256": "dce046172c5ca3625d4298beb0c614662e0eaa8c4a2224d9cde3c6f92df2a79e"}, "downloads": -1, "filename": "yayes-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4939ec2a5f0b75c67cb543c454f6fee7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3243, "upload_time": "2019-09-19T05:59:44", "upload_time_iso_8601": "2019-09-19T05:59:44.293225Z", "url": "https://files.pythonhosted.org/packages/22/95/da14f304d8e8a08eaaddbd253664cb79ab11fac0069447ca33394d58a55d/yayes-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0eb5558e112c1b735cf720c48b08fc3f", "sha256": "5692c0725585ff67ec44136a53a84f61cd3455911091ee76b2ca4772ba7f31ce"}, "downloads": -1, "filename": "yayes-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0eb5558e112c1b735cf720c48b08fc3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2031, "upload_time": "2019-09-19T05:59:45", "upload_time_iso_8601": "2019-09-19T05:59:45.790199Z", "url": "https://files.pythonhosted.org/packages/40/67/fa918c8ad43c09f6c369a89f3961b0a6d9f7f4cdbbe9d0e3ff3bcfe0192a/yayes-1.0.1.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "f5c5f91031d4be652c8375fa70293e89", "sha256": "63d0f8941dcc0ed3b214b9a902238a7d85180b1e96c42e8ae5f07c2679876679"}, "downloads": -1, "filename": "yayes-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f5c5f91031d4be652c8375fa70293e89", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5601, "upload_time": "2019-09-19T06:32:26", "upload_time_iso_8601": "2019-09-19T06:32:26.143379Z", "url": "https://files.pythonhosted.org/packages/ef/6d/9210a78f0079d35fba8e922b78f1603b259804ca64a510c37207182271df/yayes-1.0.5-py3-none-any.whl", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "8a1289a4496548e4739527a034411d5a", "sha256": "c54c331543fdb16c3979fa1d7e2687ed9e82493779a7e19936e68cd708167ea9"}, "downloads": -1, "filename": "yayes-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "8a1289a4496548e4739527a034411d5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5601, "upload_time": "2019-10-07T01:28:50", "upload_time_iso_8601": "2019-10-07T01:28:50.933614Z", "url": "https://files.pythonhosted.org/packages/c0/75/e910b7c60cf60f2c792b8b8b982cf45154de44ebc3bc2d3331f1f5eeb22a/yayes-1.0.6-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8a1289a4496548e4739527a034411d5a", "sha256": "c54c331543fdb16c3979fa1d7e2687ed9e82493779a7e19936e68cd708167ea9"}, "downloads": -1, "filename": "yayes-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "8a1289a4496548e4739527a034411d5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5601, "upload_time": "2019-10-07T01:28:50", "upload_time_iso_8601": "2019-10-07T01:28:50.933614Z", "url": "https://files.pythonhosted.org/packages/c0/75/e910b7c60cf60f2c792b8b8b982cf45154de44ebc3bc2d3331f1f5eeb22a/yayes-1.0.6-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:22:35 2020"}