{"info": {"author": "Rob Howley", "author_email": "howley.robert@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "[![PyPI version](https://badge.fury.io/py/lambda-warmer-py.svg)](https://badge.fury.io/py/lambda-warmer-py)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT) [![Build Status](https://travis-ci.com/robhowley/lambda-warmer-py.svg?branch=master)](https://travis-ci.com/robhowley/lambda-warmer-py)\n\n# lambda-warmer-py: taking care of aws lambda cold starts\nThe `lambda-warmer-py` package contains a single decorator that makes it easy to minimize the drag of aws lambda cold \nstarts. Just ...\n\n  1. wrap your lambdas in the `@lambdawarmer.warmer` decorator and\n  2. ping your lambda once every 5 minutes\n\nand you'll cut your cold starts way down. \n\nConfiguration options are also available that ...\n* allow for keeping many *concurrent* lambdas warm\n* sending [CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/working_with_metrics.html) \n  tracking the number of cold and warm starts by lambda function name \n\nThe warming logic is a python adaption* of the `js` [package](https://github.com/jeremydaly/lambda-warmer), `lambda-warmer`. Read more about the background to this approach on his site [here](https://www.jeremydaly.com/lambda-warmer-optimize-aws-lambda-function-cold-starts/)\nand some best practices on lambda optimization [here](https://www.jeremydaly.com/15-key-takeaways-from-the-serverless-talk-at-aws-startup-day/).\n\n\\* In addition to supporting CloudWatch Metrics, there are some small differences in parameterization. See [configuration](#configuration).\n\n\n## Install\n\n```bash\npip install lambda-warmer-py\n```\n\n## Using the lambda warmer\n\n### The basics\nIncorporating the lambda warmer into your existing lambdas only requires adding a single decorator.\n```python\nimport lambdawarmer\n\n\n@lambdawarmer.warmer\ndef your_lambda_function(event, context):\n    pass\n```\n\n### Concurrent warming\nTo leverage the concurrency options, the package will invoke your lambda multiple times. This means that the deployed\nlambda will need the following permissions\n```yaml\n- Effect: Allow\n  Action: lambda:InvokeFunction\n  Resource: [your-lambdas-arn]\n```\n\n### Enabling ColdStart/WarmStart CloudWatch Metrics\nIn order for the lambda warmer to track cold and warm start metrics, the lambda execution role will need permissions\nto send metric data to CloudWatch. The required policy action is \n```yaml\n- Effect: Allow\n  Action: cloudwatch:PutMetricData\n```\n\n## Warming your lambdas\nCreate a [CloudWatch Rule](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/RunLambdaSchedule.html) that \nperiodically invokes your lambda directly and passes the following json as the event\n```python\n{\n    \"warmer\": true,\n    \"concurrency\": (int, defaults to 1)\n}\n```\nIt is possible to change the `warmer` and `concurrency` names by overriding parameters in the `warmer` decorator. See\n[configuration](#configuration) for details.\n\n## Configuration\nThe lambda warmer is configured via the function parameters for the `@warmer` decorator. It takes the following ...\n\n### `flag (string, default = 'warmer')`\nName of the field used to indicate that it is a warm up event.\n\n### `concurrency (string, default = 'concurrency')`\nName of the field used to set the number of concurrent lambdas to invoke and keep warm.\n\n### `delay (int, default = 75)`\nNumber of millis a concurrent warm up invocation should sleep. This helps avoid under delivering on\n  the concurrency target.\n\n### `send_metric (bool, default = False)`\nWhether or not CloudWatch Metrics for the number of cold/warm starts will be sent at each invocation. The metrics names\nare `ColdStart` and `WarmStart`, are recorded under `LambdaWarmer` namespace, and can be filtered by lambda function name.\n\n#### Example: warmer configuration overrides\nUsing alternative event and delay configurations is straightforward.\n```python\n@lambdawarmer.warmer(flag='am_i_a_warmer', concurrency='how_many_lambdas', delay=150)\ndef your_lambda_function(event, context):\n    pass\n```\nThis implementation will expect events of the form\n```python\n{\"am_i_a_warmer\": true, \"how_many_lambdas\": (int)}\n```\nand all concurrent executions will delay for 150 milliseconds.\n\n#### Example: sending metrics\nIf you want to track metrics on number of warm/cold starts activate that functionality in the decorator.\n```python\n@lambdawarmer.warmer(send_metric=True)\ndef your_lambda_function(event, context):\n    pass\n```\n\n*Note*: Configuration options that are *excluded* from this implementation but can be found in the `js` version are \n* `test`: Testing is handled in the unittests using mocks/fakes instead of flagged invocations\n* `log`: Logging levels of imported python  packages should be handled via the stdlib `logging` module. \n* `correlationId`. This has been made into the snake cased `correlation_id` since we're in python and is always set to \nthe current lambda's `aws_request_id` field as is recommended in the original `lambda-warmer` package.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/robhowley/lambda-warmer-py", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "lambda-warmer-py", "package_url": "https://pypi.org/project/lambda-warmer-py/", "platform": "", "project_url": "https://pypi.org/project/lambda-warmer-py/", "project_urls": {"Homepage": "https://github.com/robhowley/lambda-warmer-py"}, "release_url": "https://pypi.org/project/lambda-warmer-py/0.6.0/", "requires_dist": null, "requires_python": "", "summary": "keep lambdas warm and monitor cold starts with a simple decorator", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://badge.fury.io/py/lambda-warmer-py\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c69756200dbadb1174ba56297915c7b573b4462f/68747470733a2f2f62616467652e667572792e696f2f70792f6c616d6264612d7761726d65722d70792e737667\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a> <a href=\"https://travis-ci.com/robhowley/lambda-warmer-py\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1123ff46382ef374ef608f4ffc6ef04507b493f/68747470733a2f2f7472617669732d63692e636f6d2f726f62686f776c65792f6c616d6264612d7761726d65722d70792e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>lambda-warmer-py: taking care of aws lambda cold starts</h1>\n<p>The <code>lambda-warmer-py</code> package contains a single decorator that makes it easy to minimize the drag of aws lambda cold\nstarts. Just ...</p>\n<ol>\n<li>wrap your lambdas in the <code>@lambdawarmer.warmer</code> decorator and</li>\n<li>ping your lambda once every 5 minutes</li>\n</ol>\n<p>and you'll cut your cold starts way down.</p>\n<p>Configuration options are also available that ...</p>\n<ul>\n<li>allow for keeping many <em>concurrent</em> lambdas warm</li>\n<li>sending <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/working_with_metrics.html\" rel=\"nofollow\">CloudWatch metrics</a>\ntracking the number of cold and warm starts by lambda function name</li>\n</ul>\n<p>The warming logic is a python adaption* of the <code>js</code> <a href=\"https://github.com/jeremydaly/lambda-warmer\" rel=\"nofollow\">package</a>, <code>lambda-warmer</code>. Read more about the background to this approach on his site <a href=\"https://www.jeremydaly.com/lambda-warmer-optimize-aws-lambda-function-cold-starts/\" rel=\"nofollow\">here</a>\nand some best practices on lambda optimization <a href=\"https://www.jeremydaly.com/15-key-takeaways-from-the-serverless-talk-at-aws-startup-day/\" rel=\"nofollow\">here</a>.</p>\n<p>* In addition to supporting CloudWatch Metrics, there are some small differences in parameterization. See <a href=\"#configuration\" rel=\"nofollow\">configuration</a>.</p>\n<h2>Install</h2>\n<pre>pip install lambda-warmer-py\n</pre>\n<h2>Using the lambda warmer</h2>\n<h3>The basics</h3>\n<p>Incorporating the lambda warmer into your existing lambdas only requires adding a single decorator.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">lambdawarmer</span>\n\n\n<span class=\"nd\">@lambdawarmer</span><span class=\"o\">.</span><span class=\"n\">warmer</span>\n<span class=\"k\">def</span> <span class=\"nf\">your_lambda_function</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<h3>Concurrent warming</h3>\n<p>To leverage the concurrency options, the package will invoke your lambda multiple times. This means that the deployed\nlambda will need the following permissions</p>\n<pre><span class=\"p p-Indicator\">-</span> <span class=\"nt\">Effect</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Allow</span>\n  <span class=\"nt\">Action</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">lambda:InvokeFunction</span>\n  <span class=\"nt\">Resource</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">[</span><span class=\"nv\">your-lambdas-arn</span><span class=\"p p-Indicator\">]</span>\n</pre>\n<h3>Enabling ColdStart/WarmStart CloudWatch Metrics</h3>\n<p>In order for the lambda warmer to track cold and warm start metrics, the lambda execution role will need permissions\nto send metric data to CloudWatch. The required policy action is</p>\n<pre><span class=\"p p-Indicator\">-</span> <span class=\"nt\">Effect</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Allow</span>\n  <span class=\"nt\">Action</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">cloudwatch:PutMetricData</span>\n</pre>\n<h2>Warming your lambdas</h2>\n<p>Create a <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/RunLambdaSchedule.html\" rel=\"nofollow\">CloudWatch Rule</a> that\nperiodically invokes your lambda directly and passes the following json as the event</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"warmer\"</span><span class=\"p\">:</span> <span class=\"n\">true</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"concurrency\"</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">defaults</span> <span class=\"n\">to</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre>\n<p>It is possible to change the <code>warmer</code> and <code>concurrency</code> names by overriding parameters in the <code>warmer</code> decorator. See\n<a href=\"#configuration\" rel=\"nofollow\">configuration</a> for details.</p>\n<h2>Configuration</h2>\n<p>The lambda warmer is configured via the function parameters for the <code>@warmer</code> decorator. It takes the following ...</p>\n<h3><code>flag (string, default = 'warmer')</code></h3>\n<p>Name of the field used to indicate that it is a warm up event.</p>\n<h3><code>concurrency (string, default = 'concurrency')</code></h3>\n<p>Name of the field used to set the number of concurrent lambdas to invoke and keep warm.</p>\n<h3><code>delay (int, default = 75)</code></h3>\n<p>Number of millis a concurrent warm up invocation should sleep. This helps avoid under delivering on\nthe concurrency target.</p>\n<h3><code>send_metric (bool, default = False)</code></h3>\n<p>Whether or not CloudWatch Metrics for the number of cold/warm starts will be sent at each invocation. The metrics names\nare <code>ColdStart</code> and <code>WarmStart</code>, are recorded under <code>LambdaWarmer</code> namespace, and can be filtered by lambda function name.</p>\n<h4>Example: warmer configuration overrides</h4>\n<p>Using alternative event and delay configurations is straightforward.</p>\n<pre><span class=\"nd\">@lambdawarmer</span><span class=\"o\">.</span><span class=\"n\">warmer</span><span class=\"p\">(</span><span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"s1\">'am_i_a_warmer'</span><span class=\"p\">,</span> <span class=\"n\">concurrency</span><span class=\"o\">=</span><span class=\"s1\">'how_many_lambdas'</span><span class=\"p\">,</span> <span class=\"n\">delay</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">your_lambda_function</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>This implementation will expect events of the form</p>\n<pre><span class=\"p\">{</span><span class=\"s2\">\"am_i_a_warmer\"</span><span class=\"p\">:</span> <span class=\"n\">true</span><span class=\"p\">,</span> <span class=\"s2\">\"how_many_lambdas\"</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">)}</span>\n</pre>\n<p>and all concurrent executions will delay for 150 milliseconds.</p>\n<h4>Example: sending metrics</h4>\n<p>If you want to track metrics on number of warm/cold starts activate that functionality in the decorator.</p>\n<pre><span class=\"nd\">@lambdawarmer</span><span class=\"o\">.</span><span class=\"n\">warmer</span><span class=\"p\">(</span><span class=\"n\">send_metric</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">your_lambda_function</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p><em>Note</em>: Configuration options that are <em>excluded</em> from this implementation but can be found in the <code>js</code> version are</p>\n<ul>\n<li><code>test</code>: Testing is handled in the unittests using mocks/fakes instead of flagged invocations</li>\n<li><code>log</code>: Logging levels of imported python  packages should be handled via the stdlib <code>logging</code> module.</li>\n<li><code>correlationId</code>. This has been made into the snake cased <code>correlation_id</code> since we're in python and is always set to\nthe current lambda's <code>aws_request_id</code> field as is recommended in the original <code>lambda-warmer</code> package.</li>\n</ul>\n\n          </div>"}, "last_serial": 6184988, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "794ed38dd586b387a61b1a47779dca38", "sha256": "b0ed1e0f99736fc7d4042aaa98222900801a54bdea062c06c8123ef8a10e7807"}, "downloads": -1, "filename": "lambda_warmer_py-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "794ed38dd586b387a61b1a47779dca38", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4924, "upload_time": "2019-02-27T03:49:30", "upload_time_iso_8601": "2019-02-27T03:49:30.085608Z", "url": "https://files.pythonhosted.org/packages/fb/83/0012c4223d1b4e75ffc5a4817982168afe0b10d19e2e3abe0b0c18a28118/lambda_warmer_py-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e6d082eee573b5916752e9704992c0b", "sha256": "50b390c4f43621243df81c1f08ad6b84099f07ff342a8b692ecab8cdc9b72bf3"}, "downloads": -1, "filename": "lambda-warmer-py-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3e6d082eee573b5916752e9704992c0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3173, "upload_time": "2019-02-27T03:49:31", "upload_time_iso_8601": "2019-02-27T03:49:31.877599Z", "url": "https://files.pythonhosted.org/packages/ca/02/5d66c1c3a5585a9300538d898e0d4909f720930dca0ce78aa6f4cac2c2f9/lambda-warmer-py-0.1.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "05b37004ae3d5c3ca80f361e2ab08611", "sha256": "2452605f2d16b2dc77bdd295380f1ffe3e5db45cfb6de221d865ccb95b374f6c"}, "downloads": -1, "filename": "lambda_warmer_py-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "05b37004ae3d5c3ca80f361e2ab08611", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6580, "upload_time": "2019-02-27T20:02:39", "upload_time_iso_8601": "2019-02-27T20:02:39.396980Z", "url": "https://files.pythonhosted.org/packages/0b/b9/88d05ddac58754726159d883adf6c77d092be9d70912b19073b36e183a04/lambda_warmer_py-0.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "afab94302e866747f880c693dad7cb96", "sha256": "e44a07cec41a416dcfb6cd421305ac0f1130f721f9024b5c857510e8ad65073b"}, "downloads": -1, "filename": "lambda-warmer-py-0.2.1.tar.gz", "has_sig": false, "md5_digest": "afab94302e866747f880c693dad7cb96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5648, "upload_time": "2019-02-27T20:02:41", "upload_time_iso_8601": "2019-02-27T20:02:41.424588Z", "url": "https://files.pythonhosted.org/packages/db/0c/867bdd0df6e15a27868afe771ba0fbef4a0fe30447553a5684690b57d506/lambda-warmer-py-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b379ac0a1096a619d46940d30ac4647c", "sha256": "9b33280092bd86f014c01814c6160342fe3cb3b3fac32c494c5209bb73d9774d"}, "downloads": -1, "filename": "lambda_warmer_py-0.3.0-py2-none-any.whl", "has_sig": false, "md5_digest": "b379ac0a1096a619d46940d30ac4647c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6640, "upload_time": "2019-04-03T01:36:05", "upload_time_iso_8601": "2019-04-03T01:36:05.716922Z", "url": "https://files.pythonhosted.org/packages/fa/2a/1c6b2fa4e4c380f569b8194ee75ec4dc4a97361a0318200f21da7b21b3fb/lambda_warmer_py-0.3.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d630f0e1348f07c9e83ec81aa055b1d", "sha256": "7911695ed6e359d2568ae5ea7802b3aa05d2e271eedb20ea624d94e3b8d7f158"}, "downloads": -1, "filename": "lambda-warmer-py-0.3.0.tar.gz", "has_sig": false, "md5_digest": "5d630f0e1348f07c9e83ec81aa055b1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5709, "upload_time": "2019-04-03T01:36:08", "upload_time_iso_8601": "2019-04-03T01:36:08.274944Z", "url": "https://files.pythonhosted.org/packages/f7/02/bee1f2410cbdd07e817bd0a60ca525f4084e11e5577bda16ee10326cdeb5/lambda-warmer-py-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "af9e3cbdd95d4d9fd2f1d04c713d2d3f", "sha256": "015de9db2bde15dc831940473d5830614d3b90bddb9c57adfdafd69812603158"}, "downloads": -1, "filename": "lambda_warmer_py-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "af9e3cbdd95d4d9fd2f1d04c713d2d3f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7462, "upload_time": "2019-04-29T13:31:22", "upload_time_iso_8601": "2019-04-29T13:31:22.998782Z", "url": "https://files.pythonhosted.org/packages/f3/83/73d7782281a8b17617977c98a43ab1a58e82cad60073a11d5f7c12b4cc9f/lambda_warmer_py-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35f28c12ec2241a748361bc501e8ff88", "sha256": "d6fb417c128277603fb43a6ff7daf4c46e43955b86a117cfdcfc70dafb3299e8"}, "downloads": -1, "filename": "lambda-warmer-py-0.3.1.tar.gz", "has_sig": false, "md5_digest": "35f28c12ec2241a748361bc501e8ff88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5713, "upload_time": "2019-04-29T13:31:35", "upload_time_iso_8601": "2019-04-29T13:31:35.586802Z", "url": "https://files.pythonhosted.org/packages/23/c9/1d44a67fb068b0096b37111977eb8772c0e041f8d646369a06bab589c0b8/lambda-warmer-py-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "71dc9bf0a70ff312729d5bdeb6644478", "sha256": "6f681c76c4f831fef94803a0ac61c76fe19d2cf39070a5e51dcc40c7435a9f7a"}, "downloads": -1, "filename": "lambda_warmer_py-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "71dc9bf0a70ff312729d5bdeb6644478", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7578, "upload_time": "2019-08-15T22:57:29", "upload_time_iso_8601": "2019-08-15T22:57:29.406779Z", "url": "https://files.pythonhosted.org/packages/86/2c/e22d4b67892010642bf57f9eb57a87af86464859e766d3bb3e1e8cb4e349/lambda_warmer_py-0.4.0-py3-none-any.whl", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "e7dbfc545048b458c9cb257348444241", "sha256": "a5b5078748eeccf9d098a70ddac6fb3625be519695419c213483a6a028337426"}, "downloads": -1, "filename": "lambda_warmer_py-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e7dbfc545048b458c9cb257348444241", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7629, "upload_time": "2019-09-25T00:37:54", "upload_time_iso_8601": "2019-09-25T00:37:54.636660Z", "url": "https://files.pythonhosted.org/packages/6e/87/b3dcf97d98e777334e9b615110d350b3e987eb5d1b77e550bccb7f3cd7b2/lambda_warmer_py-0.5.0-py3-none-any.whl", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "cf028bd642714cf33b2a94652154c20e", "sha256": "73c2e00242b7265cf6d315a41b3cf8c6018c1f4e862fed6d89b8d5ced17d84f0"}, "downloads": -1, "filename": "lambda_warmer_py-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cf028bd642714cf33b2a94652154c20e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7742, "upload_time": "2019-11-13T04:15:19", "upload_time_iso_8601": "2019-11-13T04:15:19.814824Z", "url": "https://files.pythonhosted.org/packages/6d/b4/c336a5c18bec15c489f7c0d8d64ecf7895a343f528f6c0d2bb93a7e733a4/lambda_warmer_py-0.5.1-py3-none-any.whl", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "ad34b7623ee13e566abe3e7e029274b3", "sha256": "881ca23f2678abf22a56edd8328d7b2a0423f5e391052fdf931067cd1430512b"}, "downloads": -1, "filename": "lambda_warmer_py-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ad34b7623ee13e566abe3e7e029274b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7876, "upload_time": "2019-11-23T02:07:37", "upload_time_iso_8601": "2019-11-23T02:07:37.305528Z", "url": "https://files.pythonhosted.org/packages/b1/3f/cf6c59d2392a7a2e52feda0fbef2832a2c95cf92cb01e3c46925281e1147/lambda_warmer_py-0.6.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ad34b7623ee13e566abe3e7e029274b3", "sha256": "881ca23f2678abf22a56edd8328d7b2a0423f5e391052fdf931067cd1430512b"}, "downloads": -1, "filename": "lambda_warmer_py-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ad34b7623ee13e566abe3e7e029274b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7876, "upload_time": "2019-11-23T02:07:37", "upload_time_iso_8601": "2019-11-23T02:07:37.305528Z", "url": "https://files.pythonhosted.org/packages/b1/3f/cf6c59d2392a7a2e52feda0fbef2832a2c95cf92cb01e3c46925281e1147/lambda_warmer_py-0.6.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:48:03 2020"}