{"info": {"author": "Masato Kokubo", "author_email": "masatokokubo@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "#################\nDebugTrace-python\n#################\n\n**DebugTrace-python** is a library that outputs trace logs\nwhen debugging your Python programs.\nIt supports Python 3.5 or later.\nBy embedding \"``_ = debugtrace.enter()``\" at the start of the method,\nyou can output the execution status of the program under development.\n\n1. Features\n===========\n\n* Automatically outputs the method name, source file name and line number\n  of callers of ``debugtrace.enter`` function.\n* Also outputs end logs when the scope ends.\n* Indents logs automatically with nested methods and objects.\n* Automatically line breaks in value output.\n* Uses reflection to output content even for objects of classes\n  that do not implement the ``__str__`` method.\n* You can customize output contents by setting ``debugtrace.ini`` file.\n* You can select sys.stdout, sys.stderr or logging.Logger to output.\n\n2. Install\n==========\n\n``pip install debugtrace``\n\n3. How to use\n=============\n\nDo the following for the debuggee and related functions or methods:\n\n* Insert \"``_ = debugtrace.enter()``\" at the beginning of functions and methods.\n* Insert \"``debugtrace.print('foo', foo)``\" to output variables to the log if necessary.\n\nThe following is an example of a Python program using DebugTrace-python and a log when it is executed.\n\n::\n\n    # ReadmeExample.py\n    import datetime\n    import debugtrace # for Debugging\n\n    # Contact class\n    class Contact(object):\n        def __init__(self, id: int, firstName: str, lastName: str, birthday: datetime.date) -> None:\n            _ = debugtrace.enter(self) # for Debugging\n            self.id = id\n            self.firstName = firstName\n            self.lastName  = lastName\n            self.birthday  = birthday\n\n    def func2():\n        _ = debugtrace.enter() # for Debugging\n        contact = [\n            Contact(1, 'Akane' , 'Apple', datetime.date(1991, 2, 3)),\n            Contact(2, 'Yukari', 'Apple', datetime.date(1992, 3, 4))\n        ]\n        debugtrace.print('contact', contact) # for Debugging\n\n    def func1():\n        _ = debugtrace.enter() # for Debugging\n        func2()\n\n    func1()\n\nLog output contents:\n::\n\n    2020-02-11 20:53:08.082640 DebugTrace-python 1.0.0b10 -> sys.stderr\n    2020-02-11 20:53:08.082744 \n    2020-02-11 20:53:08.085611 Enter func1 (ReadmeExample.py:23)\n    2020-02-11 20:53:08.085774 |   Enter func2 (ReadmeExample.py:15)\n    2020-02-11 20:53:08.085896 |   |   Enter Contact.__init__ (ReadmeExample.py:8)\n    2020-02-11 20:53:08.085958 |   |   Leave Contact.__init__ (ReadmeExample.py:8) time: 0:00:00.000008\n    2020-02-11 20:53:08.086038 |   |   \n    2020-02-11 20:53:08.086077 |   |   Enter Contact.__init__ (ReadmeExample.py:8)\n    2020-02-11 20:53:08.086123 |   |   Leave Contact.__init__ (ReadmeExample.py:8) time: 0:00:00.000004\n    2020-02-11 20:53:08.086474 |   |   contact = (list)[\n    2020-02-11 20:53:08.086516 |   |     (__main__.Contact){\n    2020-02-11 20:53:08.086533 |   |       birthday: 1991-02-03, firstName: (length:5)'Akane', id: 1, lastName: (length:5)'Apple'\n    2020-02-11 20:53:08.086560 |   |     }, \n    2020-02-11 20:53:08.086591 |   |     (__main__.Contact){\n    2020-02-11 20:53:08.086605 |   |       birthday: 1992-03-04, firstName: (length:6)'Yukari', id: 2, lastName: (length:5)'Apple'\n    2020-02-11 20:53:08.086613 |   |     }\n    2020-02-11 20:53:08.086638 |   |   ]\n    2020-02-11 20:53:08.086680 |   Leave func2 (ReadmeExample.py:15) time: 0:00:00.000851\n    2020-02-11 20:53:08.086724 Leave func1 (ReadmeExample.py:23) time: 0:00:00.001032\n\n4. Functions\n============\n\nThere are mainly the following functions.\n\n.. list-table:: Function list\n    :widths: 10, 45, 45\n    :header-rows: 1\n\n    * - Name\n      - Arguments\n      - Discription\n    * - ``enter``\n      - **invoker** (object): Pass the self or cls of the invoker. (Optional)\n      - | Outputs an entering log.\n        | Also outputs a leaving log at the end of the code block.\n        |\n        | *Examples*:\n        | ``_ = debugtrace.enter(self)``\n        | ``_ = debugtrace.enter(cls)``\n        | ``_ = debugtrace.enter()``\n    * - ``print``\n      - | **name** (str): Variable name, etc.\n        | **value** (object): Output value\n        | **output_private** (bool): Output private member if True (default: False)\n        | **output_method** (bool): Output method if True (default: False)\n      - | Outputs the variable name and value.\n        |\n        | *Examples*:\n        | ``debugtrace.print('Hellow')``\n        | ``debugtrace.print('foo', foo)``\n\n\n5. Options that can be specified in the **debugtrace.ini** file\n===============================================================\n\nDebugTrace-python reads the ``debugtrace.ini`` file\nin the current directory for initialization.\nThe section is ``[debugtrace]``.\n\nYou can specify the following options in the ``debugtrace.ini`` file.\n\n.. list-table:: ``debugtrace.ini``\n    :widths: 30, 50, 20\n    :header-rows: 1\n\n    * - Option Name\n      - Description\n      - Default Value\n    * - ``logger``\n      - | Logger used by debugtrace\n        | ``StdOut: Output to sys.stdout``\n        | ``StdErr: Output to sys.stderr``\n        | ``Logger: Output using logging package``\n      - ``StdErr``\n    * - ``logging_config_file``\n      - Configuration file name specified in logging package\n      - ``logging.conf``\n    * - ``logging_logger_name``\n      - Logger name when using the logging package\n      - ``debugtrace``\n    * - ``logging_level``\n      - Log level when using the logging package\n      - ``DEBUG``\n    * - ``is_enabled``\n      - | ``False: Log output is disabled``\n        | ``True: Log output is enabled``\n      - ``True``\n    * - ``enter_format``\n      - | Format of the log output when entering function or method\n        | ``{0}: the function or method name``\n        | ``{1}: the file name``\n        | ``{2}: the line number``\n      - ``Enter {0} ({1}:{2})``\n    * - ``leave_format``\n      - | Format of log output when leaving function or method\n        | ``{0}: function or method name``\n        | ``{1}: the file name``\n        | ``{2}: the line number``\n        | ``{3}: the time from entering``\n      - ``Leave {0} ({1}:{2}) time: {3}``\n    * - ``limit_string``\n      - String output when limit is exceeded\n      - ``...``\n    * - ``maximum_indents``\n      - Maximum number of indents\n      - ``20``\n    * - ``code_indent_string``\n      - Indentation string for code\n      - \uff5c\u2420\u2420\u2420\n    * - ``data_indent_string``\n      - Indentation string for data\n      - | \u2420\u2420\n        | (2 spaces)\n    * - ``non_output_string``\n      - String to be output instead of not outputting value\n      - ``...``\n    * - ``cyclic_reference_string``\n      - String to be output when referring to a cycle\n      - ``*** Cyclic Reference ***``\n    * - ``varname_value_separator``\n      - String separating variable name and value\n      - ``\u2420=\u2420``\n    * - ``key_value_separator``\n      - | String separating the dictionary key and value\n        | And separating the attribute name and value\n      - ``:\u2420``\n    * - ``log_datetime_format``\n      - Log date and time format when ``logger`` is ``StdOut`` or ``StdErr``\n      - ``%Y-%m-%d %H:%M:%S.%f``\n    * - ``count_format``\n      - Output format of the number of elements such as ``list``, ``tuple`` and ``dict``\n      - ``count:{}``\n    * - ``minimum_output_count``\n      - Minimum value to output the number of elements such as ``list``, ``tuple`` and ``dict``\n      - ``5``\n    * - ``length_format``\n      - Output format of the length of string and ``bytes``\n      - ``length:{}``\n    * - ``minimum_output_length``\n      - Minimum value to output the length of string and ``bytes``\n      - ``5``\n    * - ``maximum_data_output_width``\n      - Maximum output width of data\n      - ``80``\n    * - ``bytes_count_in_line``\n      - Count in line of ``bytes``\n      - ``16``\n    * - ``collection_limit``\n      - Output limit of elements such as ``list``, ``tuple``, ``dict``\n      - ``256``\n    * - ``string_limit``\n      - Output limit of string elements\n      - ``2048``\n    * - ``bytes_limit``\n      - Output limit of ``bytes`` elements\n      - ``512``\n    * - ``reflection_nest_limit``\n      - Limit of reflection nests\n      - ``4``\n\n6. License\n==========\n\nMIT License (MIT)\n\n7. Release notes\n================\n\n``DebugTrace-python 1.0.0b11 - Mar. 1, 2020``\n------------------------------------------------\n\n* Improvements and Bug fixes\n\n``DebugTrace-python 1.0.0b10 - Feb. 11, 2020``\n------------------------------------------------\n\n* Improvements and Bug fixes\n\n``DebugTrace-python 1.0.0b9 - Feb. 9, 2020``\n------------------------------------------------\n\n* Improvements and Bug fixes\n\n``DebugTrace-python 1.0.0b8 - Feb. 7, 2020``\n------------------------------------------------\n\n* Improvements and Bug fixes\n\n``DebugTrace-python 1.0.0b7 - Feb. 5, 2020``\n------------------------------------------------\n\n* Improvements and Bug fixes\n\n``DebugTrace-python 1.0.0b6 - Feb. 4, 2020``\n------------------------------------------------\n\n* Improvements and Bug fixes\n\n``DebugTrace-python 1.0.0b5 - Feb. 3, 2020``\n------------------------------------------------\n\n* Improvements and Bug fixes\n\n``DebugTrace-python 1.0.0b4 - Jan. 31, 2020``\n------------------------------------------------\n\n* Change ``print_`` function name to ``print``.\n\n``DebugTrace-python 1.0.0b2 - Jan. 13, 2020``\n------------------------------------------------\n\n* First release (beta version)\n\n*(C) 2020 Masato Kokubo*\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MasatoKokubo/DebugTrace-py", "keywords": "", "license": "MIT", "maintainer": "Masato Kokubo", "maintainer_email": "masatokokubo@gmail.com", "name": "debugtrace", "package_url": "https://pypi.org/project/debugtrace/", "platform": "", "project_url": "https://pypi.org/project/debugtrace/", "project_urls": {"Homepage": "https://github.com/MasatoKokubo/DebugTrace-py"}, "release_url": "https://pypi.org/project/debugtrace/1.0.0b11/", "requires_dist": null, "requires_python": "", "summary": "Output trace logs when debugging Python programs", "version": "1.0.0b11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>DebugTrace-python</strong> is a library that outputs trace logs\nwhen debugging your Python programs.\nIt supports Python 3.5 or later.\nBy embedding \u201c<tt>_ = debugtrace.enter()</tt>\u201d at the start of the method,\nyou can output the execution status of the program under development.</p>\n<div id=\"features\">\n<h2>1. Features</h2>\n<ul>\n<li>Automatically outputs the method name, source file name and line number\nof callers of <tt>debugtrace.enter</tt> function.</li>\n<li>Also outputs end logs when the scope ends.</li>\n<li>Indents logs automatically with nested methods and objects.</li>\n<li>Automatically line breaks in value output.</li>\n<li>Uses reflection to output content even for objects of classes\nthat do not implement the <tt>__str__</tt> method.</li>\n<li>You can customize output contents by setting <tt>debugtrace.ini</tt> file.</li>\n<li>You can select sys.stdout, sys.stderr or logging.Logger to output.</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>2. Install</h2>\n<p><tt>pip install debugtrace</tt></p>\n</div>\n<div id=\"how-to-use\">\n<h2>3. How to use</h2>\n<p>Do the following for the debuggee and related functions or methods:</p>\n<ul>\n<li>Insert \u201c<tt>_ = debugtrace.enter()</tt>\u201d at the beginning of functions and methods.</li>\n<li>Insert \u201c<tt><span class=\"pre\">debugtrace.print('foo',</span> foo)</tt>\u201d to output variables to the log if necessary.</li>\n</ul>\n<p>The following is an example of a Python program using DebugTrace-python and a log when it is executed.</p>\n<pre># ReadmeExample.py\nimport datetime\nimport debugtrace # for Debugging\n\n# Contact class\nclass Contact(object):\n    def __init__(self, id: int, firstName: str, lastName: str, birthday: datetime.date) -&gt; None:\n        _ = debugtrace.enter(self) # for Debugging\n        self.id = id\n        self.firstName = firstName\n        self.lastName  = lastName\n        self.birthday  = birthday\n\ndef func2():\n    _ = debugtrace.enter() # for Debugging\n    contact = [\n        Contact(1, 'Akane' , 'Apple', datetime.date(1991, 2, 3)),\n        Contact(2, 'Yukari', 'Apple', datetime.date(1992, 3, 4))\n    ]\n    debugtrace.print('contact', contact) # for Debugging\n\ndef func1():\n    _ = debugtrace.enter() # for Debugging\n    func2()\n\nfunc1()\n</pre>\n<p>Log output contents:</p>\n<pre>2020-02-11 20:53:08.082640 DebugTrace-python 1.0.0b10 -&gt; sys.stderr\n2020-02-11 20:53:08.082744\n2020-02-11 20:53:08.085611 Enter func1 (ReadmeExample.py:23)\n2020-02-11 20:53:08.085774 |   Enter func2 (ReadmeExample.py:15)\n2020-02-11 20:53:08.085896 |   |   Enter Contact.__init__ (ReadmeExample.py:8)\n2020-02-11 20:53:08.085958 |   |   Leave Contact.__init__ (ReadmeExample.py:8) time: 0:00:00.000008\n2020-02-11 20:53:08.086038 |   |\n2020-02-11 20:53:08.086077 |   |   Enter Contact.__init__ (ReadmeExample.py:8)\n2020-02-11 20:53:08.086123 |   |   Leave Contact.__init__ (ReadmeExample.py:8) time: 0:00:00.000004\n2020-02-11 20:53:08.086474 |   |   contact = (list)[\n2020-02-11 20:53:08.086516 |   |     (__main__.Contact){\n2020-02-11 20:53:08.086533 |   |       birthday: 1991-02-03, firstName: (length:5)'Akane', id: 1, lastName: (length:5)'Apple'\n2020-02-11 20:53:08.086560 |   |     },\n2020-02-11 20:53:08.086591 |   |     (__main__.Contact){\n2020-02-11 20:53:08.086605 |   |       birthday: 1992-03-04, firstName: (length:6)'Yukari', id: 2, lastName: (length:5)'Apple'\n2020-02-11 20:53:08.086613 |   |     }\n2020-02-11 20:53:08.086638 |   |   ]\n2020-02-11 20:53:08.086680 |   Leave func2 (ReadmeExample.py:15) time: 0:00:00.000851\n2020-02-11 20:53:08.086724 Leave func1 (ReadmeExample.py:23) time: 0:00:00.001032\n</pre>\n</div>\n<div id=\"functions\">\n<h2>4. Functions</h2>\n<p>There are mainly the following functions.</p>\n<table>\n<caption>Function list</caption>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Name</th>\n<th>Arguments</th>\n<th>Discription</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>enter</tt></td>\n<td><strong>invoker</strong> (object): Pass the self or cls of the invoker. (Optional)</td>\n<td><div>\n<div>Outputs an entering log.</div>\n<div>Also outputs a leaving log at the end of the code block.</div>\n<div><br></div>\n<div><em>Examples</em>:</div>\n<div><tt>_ = debugtrace.enter(self)</tt></div>\n<div><tt>_ = debugtrace.enter(cls)</tt></div>\n<div><tt>_ = debugtrace.enter()</tt></div>\n</div>\n</td>\n</tr>\n<tr><td><tt>print</tt></td>\n<td><div>\n<div><strong>name</strong> (str): Variable name, etc.</div>\n<div><strong>value</strong> (object): Output value</div>\n<div><strong>output_private</strong> (bool): Output private member if True (default: False)</div>\n<div><strong>output_method</strong> (bool): Output method if True (default: False)</div>\n</div>\n</td>\n<td><div>\n<div>Outputs the variable name and value.</div>\n<div><br></div>\n<div><em>Examples</em>:</div>\n<div><tt><span class=\"pre\">debugtrace.print('Hellow')</span></tt></div>\n<div><tt><span class=\"pre\">debugtrace.print('foo',</span> foo)</tt></div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"options-that-can-be-specified-in-the-debugtrace-ini-file\">\n<h2>5. Options that can be specified in the <strong>debugtrace.ini</strong> file</h2>\n<p>DebugTrace-python reads the <tt>debugtrace.ini</tt> file\nin the current directory for initialization.\nThe section is <tt>[debugtrace]</tt>.</p>\n<p>You can specify the following options in the <tt>debugtrace.ini</tt> file.</p>\n<table>\n<caption><tt>debugtrace.ini</tt></caption>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Option Name</th>\n<th>Description</th>\n<th>Default Value</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>logger</tt></td>\n<td><div>\n<div>Logger used by debugtrace</div>\n<div><tt>StdOut: Output to sys.stdout</tt></div>\n<div><tt>StdErr: Output to sys.stderr</tt></div>\n<div><tt>Logger: Output using logging package</tt></div>\n</div>\n</td>\n<td><tt>StdErr</tt></td>\n</tr>\n<tr><td><tt>logging_config_file</tt></td>\n<td>Configuration file name specified in logging package</td>\n<td><tt>logging.conf</tt></td>\n</tr>\n<tr><td><tt>logging_logger_name</tt></td>\n<td>Logger name when using the logging package</td>\n<td><tt>debugtrace</tt></td>\n</tr>\n<tr><td><tt>logging_level</tt></td>\n<td>Log level when using the logging package</td>\n<td><tt>DEBUG</tt></td>\n</tr>\n<tr><td><tt>is_enabled</tt></td>\n<td><div>\n<div><tt>False: Log output is disabled</tt></div>\n<div><tt>True: Log output is enabled</tt></div>\n</div>\n</td>\n<td><tt>True</tt></td>\n</tr>\n<tr><td><tt>enter_format</tt></td>\n<td><div>\n<div>Format of the log output when entering function or method</div>\n<div><tt>{0}: the function or method name</tt></div>\n<div><tt>{1}: the file name</tt></div>\n<div><tt>{2}: the line number</tt></div>\n</div>\n</td>\n<td><tt>Enter {0} <span class=\"pre\">({1}:{2})</span></tt></td>\n</tr>\n<tr><td><tt>leave_format</tt></td>\n<td><div>\n<div>Format of log output when leaving function or method</div>\n<div><tt>{0}: function or method name</tt></div>\n<div><tt>{1}: the file name</tt></div>\n<div><tt>{2}: the line number</tt></div>\n<div><tt>{3}: the time from entering</tt></div>\n</div>\n</td>\n<td><tt>Leave {0} <span class=\"pre\">({1}:{2})</span> time: {3}</tt></td>\n</tr>\n<tr><td><tt>limit_string</tt></td>\n<td>String output when limit is exceeded</td>\n<td><tt>...</tt></td>\n</tr>\n<tr><td><tt>maximum_indents</tt></td>\n<td>Maximum number of indents</td>\n<td><tt>20</tt></td>\n</tr>\n<tr><td><tt>code_indent_string</tt></td>\n<td>Indentation string for code</td>\n<td>\uff5c\u2420\u2420\u2420</td>\n</tr>\n<tr><td><tt>data_indent_string</tt></td>\n<td>Indentation string for data</td>\n<td><div>\n<div>\u2420\u2420</div>\n<div>(2 spaces)</div>\n</div>\n</td>\n</tr>\n<tr><td><tt>non_output_string</tt></td>\n<td>String to be output instead of not outputting value</td>\n<td><tt>...</tt></td>\n</tr>\n<tr><td><tt>cyclic_reference_string</tt></td>\n<td>String to be output when referring to a cycle</td>\n<td><tt>*** Cyclic Reference ***</tt></td>\n</tr>\n<tr><td><tt>varname_value_separator</tt></td>\n<td>String separating variable name and value</td>\n<td><tt>\u2420=\u2420</tt></td>\n</tr>\n<tr><td><tt>key_value_separator</tt></td>\n<td><div>\n<div>String separating the dictionary key and value</div>\n<div>And separating the attribute name and value</div>\n</div>\n</td>\n<td><tt>:\u2420</tt></td>\n</tr>\n<tr><td><tt>log_datetime_format</tt></td>\n<td>Log date and time format when <tt>logger</tt> is <tt>StdOut</tt> or <tt>StdErr</tt></td>\n<td><tt><span class=\"pre\">%Y-%m-%d</span> <span class=\"pre\">%H:%M:%S.%f</span></tt></td>\n</tr>\n<tr><td><tt>count_format</tt></td>\n<td>Output format of the number of elements such as <tt>list</tt>, <tt>tuple</tt> and <tt>dict</tt></td>\n<td><tt><span class=\"pre\">count:{}</span></tt></td>\n</tr>\n<tr><td><tt>minimum_output_count</tt></td>\n<td>Minimum value to output the number of elements such as <tt>list</tt>, <tt>tuple</tt> and <tt>dict</tt></td>\n<td><tt>5</tt></td>\n</tr>\n<tr><td><tt>length_format</tt></td>\n<td>Output format of the length of string and <tt>bytes</tt></td>\n<td><tt><span class=\"pre\">length:{}</span></tt></td>\n</tr>\n<tr><td><tt>minimum_output_length</tt></td>\n<td>Minimum value to output the length of string and <tt>bytes</tt></td>\n<td><tt>5</tt></td>\n</tr>\n<tr><td><tt>maximum_data_output_width</tt></td>\n<td>Maximum output width of data</td>\n<td><tt>80</tt></td>\n</tr>\n<tr><td><tt>bytes_count_in_line</tt></td>\n<td>Count in line of <tt>bytes</tt></td>\n<td><tt>16</tt></td>\n</tr>\n<tr><td><tt>collection_limit</tt></td>\n<td>Output limit of elements such as <tt>list</tt>, <tt>tuple</tt>, <tt>dict</tt></td>\n<td><tt>256</tt></td>\n</tr>\n<tr><td><tt>string_limit</tt></td>\n<td>Output limit of string elements</td>\n<td><tt>2048</tt></td>\n</tr>\n<tr><td><tt>bytes_limit</tt></td>\n<td>Output limit of <tt>bytes</tt> elements</td>\n<td><tt>512</tt></td>\n</tr>\n<tr><td><tt>reflection_nest_limit</tt></td>\n<td>Limit of reflection nests</td>\n<td><tt>4</tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"license\">\n<h2>6. License</h2>\n<p>MIT License (MIT)</p>\n</div>\n<div id=\"release-notes\">\n<h2>7. Release notes</h2>\n<div id=\"debugtrace-python-1-0-0b11-mar-1-2020\">\n<h3><tt><span class=\"pre\">DebugTrace-python</span> 1.0.0b11 - Mar. 1, 2020</tt></h3>\n<ul>\n<li>Improvements and Bug fixes</li>\n</ul>\n</div>\n<div id=\"debugtrace-python-1-0-0b10-feb-11-2020\">\n<h3><tt><span class=\"pre\">DebugTrace-python</span> 1.0.0b10 - Feb. 11, 2020</tt></h3>\n<ul>\n<li>Improvements and Bug fixes</li>\n</ul>\n</div>\n<div id=\"debugtrace-python-1-0-0b9-feb-9-2020\">\n<h3><tt><span class=\"pre\">DebugTrace-python</span> 1.0.0b9 - Feb. 9, 2020</tt></h3>\n<ul>\n<li>Improvements and Bug fixes</li>\n</ul>\n</div>\n<div id=\"debugtrace-python-1-0-0b8-feb-7-2020\">\n<h3><tt><span class=\"pre\">DebugTrace-python</span> 1.0.0b8 - Feb. 7, 2020</tt></h3>\n<ul>\n<li>Improvements and Bug fixes</li>\n</ul>\n</div>\n<div id=\"debugtrace-python-1-0-0b7-feb-5-2020\">\n<h3><tt><span class=\"pre\">DebugTrace-python</span> 1.0.0b7 - Feb. 5, 2020</tt></h3>\n<ul>\n<li>Improvements and Bug fixes</li>\n</ul>\n</div>\n<div id=\"debugtrace-python-1-0-0b6-feb-4-2020\">\n<h3><tt><span class=\"pre\">DebugTrace-python</span> 1.0.0b6 - Feb. 4, 2020</tt></h3>\n<ul>\n<li>Improvements and Bug fixes</li>\n</ul>\n</div>\n<div id=\"debugtrace-python-1-0-0b5-feb-3-2020\">\n<h3><tt><span class=\"pre\">DebugTrace-python</span> 1.0.0b5 - Feb. 3, 2020</tt></h3>\n<ul>\n<li>Improvements and Bug fixes</li>\n</ul>\n</div>\n<div id=\"debugtrace-python-1-0-0b4-jan-31-2020\">\n<h3><tt><span class=\"pre\">DebugTrace-python</span> 1.0.0b4 - Jan. 31, 2020</tt></h3>\n<ul>\n<li>Change <tt>print_</tt> function name to <tt>print</tt>.</li>\n</ul>\n</div>\n<div id=\"debugtrace-python-1-0-0b2-jan-13-2020\">\n<h3><tt><span class=\"pre\">DebugTrace-python</span> 1.0.0b2 - Jan. 13, 2020</tt></h3>\n<ul>\n<li>First release (beta version)</li>\n</ul>\n<p><em>(C) 2020 Masato Kokubo</em></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6728340, "releases": {"1.0.0b10": [{"comment_text": "", "digests": {"md5": "2833b95dd94c8cd3ae9689079f6ec096", "sha256": "f8dbec886dce5db9330084397e740d8c4b10ab0368e7da1f06980af887781764"}, "downloads": -1, "filename": "debugtrace-1.0.0b10-py3-none-any.whl", "has_sig": false, "md5_digest": "2833b95dd94c8cd3ae9689079f6ec096", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11064, "upload_time": "2020-02-11T11:56:08", "upload_time_iso_8601": "2020-02-11T11:56:08.617613Z", "url": "https://files.pythonhosted.org/packages/96/5c/cafed7a754d2554ad025937e213ab7299e86a2e86ff86b8cd02ab2daada5/debugtrace-1.0.0b10-py3-none-any.whl", "yanked": false}], "1.0.0b11": [{"comment_text": "", "digests": {"md5": "5fd2789dc957da5717332fd34c119d12", "sha256": "0c66ca0844b68988c70c027071d0cfdc1e5ed01088a966ddaa88f0bd6e5161c8"}, "downloads": -1, "filename": "debugtrace-1.0.0b11-py3-none-any.whl", "has_sig": false, "md5_digest": "5fd2789dc957da5717332fd34c119d12", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11355, "upload_time": "2020-03-01T13:22:56", "upload_time_iso_8601": "2020-03-01T13:22:56.867100Z", "url": "https://files.pythonhosted.org/packages/1b/29/69662797092f44c94294d37227a724247ee2f38c07aa36b4d8f947dc10ff/debugtrace-1.0.0b11-py3-none-any.whl", "yanked": false}], "1.0.0b2": [{"comment_text": "", "digests": {"md5": "7cc7722ca240bc6940b4243ea09107cb", "sha256": "94da0639fd117b73707da1338d8301d01d6e4afd0745dd9d91bed9f9ff3b5178"}, "downloads": -1, "filename": "debugtrace-1.0.0b2-py3-none-any.whl", "has_sig": false, "md5_digest": "7cc7722ca240bc6940b4243ea09107cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9535, "upload_time": "2020-01-13T13:12:48", "upload_time_iso_8601": "2020-01-13T13:12:48.584508Z", "url": "https://files.pythonhosted.org/packages/f3/17/40c08333bd4bbd17e95ac61fa8102adab1f59cbc49a152bc698421a22de1/debugtrace-1.0.0b2-py3-none-any.whl", "yanked": false}], "1.0.0b4": [{"comment_text": "", "digests": {"md5": "ea41d454835dedaf035d7cdf191e5322", "sha256": "6b42516cee503e2b438e94d2b225f3d72de881c0233ed792d9b48edd290b6b6a"}, "downloads": -1, "filename": "debugtrace-1.0.0b4-py3-none-any.whl", "has_sig": false, "md5_digest": "ea41d454835dedaf035d7cdf191e5322", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9856, "upload_time": "2020-01-30T15:44:54", "upload_time_iso_8601": "2020-01-30T15:44:54.895455Z", "url": "https://files.pythonhosted.org/packages/70/e1/571074645a340fc2602c1ce1e3187e43c1c0f1a0d9ed77273f74912f6a0a/debugtrace-1.0.0b4-py3-none-any.whl", "yanked": false}], "1.0.0b5": [{"comment_text": "", "digests": {"md5": "e1fff3aadde58415fb46823b021b9317", "sha256": "fe1ebfb3cd42475b816a826909e629611a03601c1dc290694d34ff0e16484079"}, "downloads": -1, "filename": "debugtrace-1.0.0b5-py3-none-any.whl", "has_sig": false, "md5_digest": "e1fff3aadde58415fb46823b021b9317", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10050, "upload_time": "2020-02-02T15:06:24", "upload_time_iso_8601": "2020-02-02T15:06:24.603184Z", "url": "https://files.pythonhosted.org/packages/41/61/d2a21b5bb6a01a7a579853fad597df7357cc62e2ddb289ae641656cbda4e/debugtrace-1.0.0b5-py3-none-any.whl", "yanked": false}], "1.0.0b6": [{"comment_text": "", "digests": {"md5": "6bc690e4025cc0b246d21fcd2608f1b5", "sha256": "42d78fecfbedb1c2c5eb07ca5cccf357978219443517de0aa88614e44935f2f3"}, "downloads": -1, "filename": "debugtrace-1.0.0b6-py3-none-any.whl", "has_sig": false, "md5_digest": "6bc690e4025cc0b246d21fcd2608f1b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10234, "upload_time": "2020-02-03T16:24:55", "upload_time_iso_8601": "2020-02-03T16:24:55.567429Z", "url": "https://files.pythonhosted.org/packages/19/4d/d7a6dffe9fae3e0876486ae87a05d1204642aa82cfa1fcf7b85fc3070247/debugtrace-1.0.0b6-py3-none-any.whl", "yanked": false}], "1.0.0b7": [{"comment_text": "", "digests": {"md5": "bb35aca2c56d82594270943c33388052", "sha256": "36ee4fab2b1177739c57541b4a600719287fa0b3dc5d51da74fa8d7f8eca8379"}, "downloads": -1, "filename": "debugtrace-1.0.0b7-py3-none-any.whl", "has_sig": false, "md5_digest": "bb35aca2c56d82594270943c33388052", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10477, "upload_time": "2020-02-04T15:40:18", "upload_time_iso_8601": "2020-02-04T15:40:18.253074Z", "url": "https://files.pythonhosted.org/packages/d9/0f/4ead541a558b72f88c785bd8de0abc0519cdff890a949fc206c160968b02/debugtrace-1.0.0b7-py3-none-any.whl", "yanked": false}], "1.0.0b8": [{"comment_text": "", "digests": {"md5": "65e61287a569cb7d27a09eba79fdd161", "sha256": "342c96c8f57e4a89c742d2908093e2bf4a5904ecacdfbcf5f3bd175b69a95b7f"}, "downloads": -1, "filename": "debugtrace-1.0.0b8-py3-none-any.whl", "has_sig": false, "md5_digest": "65e61287a569cb7d27a09eba79fdd161", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10555, "upload_time": "2020-02-06T16:03:32", "upload_time_iso_8601": "2020-02-06T16:03:32.277904Z", "url": "https://files.pythonhosted.org/packages/e8/e9/700f1c676bcef0e727380195c3047461ba63090002848a618fcc118a725c/debugtrace-1.0.0b8-py3-none-any.whl", "yanked": false}], "1.0.0b9": [{"comment_text": "", "digests": {"md5": "2720112492f59cfbb900f62a301869c6", "sha256": "0f3e83f37a95faeee1df59ce9b8a18b3197710cf458f2b16edafa99e7b7298e0"}, "downloads": -1, "filename": "debugtrace-1.0.0b9-py3-none-any.whl", "has_sig": false, "md5_digest": "2720112492f59cfbb900f62a301869c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11086, "upload_time": "2020-02-09T11:53:21", "upload_time_iso_8601": "2020-02-09T11:53:21.464551Z", "url": "https://files.pythonhosted.org/packages/00/e2/0680fd1c3e385873131009ef56fdfc8872350c7683e9da259f6de6d0e651/debugtrace-1.0.0b9-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5fd2789dc957da5717332fd34c119d12", "sha256": "0c66ca0844b68988c70c027071d0cfdc1e5ed01088a966ddaa88f0bd6e5161c8"}, "downloads": -1, "filename": "debugtrace-1.0.0b11-py3-none-any.whl", "has_sig": false, "md5_digest": "5fd2789dc957da5717332fd34c119d12", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11355, "upload_time": "2020-03-01T13:22:56", "upload_time_iso_8601": "2020-03-01T13:22:56.867100Z", "url": "https://files.pythonhosted.org/packages/1b/29/69662797092f44c94294d37227a724247ee2f38c07aa36b4d8f947dc10ff/debugtrace-1.0.0b11-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:39:38 2020"}