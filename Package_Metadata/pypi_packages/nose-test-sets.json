{"info": {"author": "Michael Williamson", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": [], "description": "nose-test-sets\n==============\n\nInstallation\n------------\n\n``$ pip install nose-test-sets``\n\nUsage\n-----\n\nTo define your set of common tests, create a ``TestSetBuilder``, and use\n``add_test`` to add tests. Each test should accept the same name of\narguments. Say you define some tests for an adder in the module\n``adder_test_set``:\n\n::\n\n    from nose_test_sets import TestSetBuilder\n\n    test_set_builder = TestSetBuilder()\n    test = test_set_builder.add_test\n\n    @test\n    def adding_zero_to_zero_returns_zero(adder):\n        assert adder.add(0, 0) == 0\n        \n    @test\n    def adding_one_to_two_returns_three(adder):\n        assert adder.add(1, 2) == 3\n        \n    create = test_set_builder.create\n\nTo run the tests against a specific implementation, you create a set of\ntests using the ``create`` function that we defined above:\n\n::\n\n    import adder_test_set\n\n    def _run_test_with_standard_adder(test_func):\n        adder = StandardAdder()\n        return test_func(adder)\n        \n    StandardAdderTests = adder_test_set.create(\n        \"StandardAdderTests\",\n        _run_test_with_standard_adder\n    )\n\nThe first argument to ``create`` should be the name of the concrete test\nset. The second argument is a function that can run each of the test\nfunctions. In the example above, to run the tests in\n``StandardAdderTests``, nose-test-sets ends up calling\n``_run_test_with_standard_adder(adding_zero_to_zero_returns_zero)`` and\n``_run_test_with_standard_adder(adding_one_to_two_returns_three)``.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mwilliamson/spur.py", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "nose-test-sets", "package_url": "https://pypi.org/project/nose-test-sets/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/nose-test-sets/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/mwilliamson/spur.py"}, "release_url": "https://pypi.org/project/nose-test-sets/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Create test sets to test different implementations of the same interface", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>$ pip install <span class=\"pre\">nose-test-sets</span></tt></p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To define your set of common tests, create a <tt>TestSetBuilder</tt>, and use\n<tt>add_test</tt> to add tests. Each test should accept the same name of\narguments. Say you define some tests for an adder in the module\n<tt>adder_test_set</tt>:</p>\n<pre>from nose_test_sets import TestSetBuilder\n\ntest_set_builder = TestSetBuilder()\ntest = test_set_builder.add_test\n\n@test\ndef adding_zero_to_zero_returns_zero(adder):\n    assert adder.add(0, 0) == 0\n\n@test\ndef adding_one_to_two_returns_three(adder):\n    assert adder.add(1, 2) == 3\n\ncreate = test_set_builder.create\n</pre>\n<p>To run the tests against a specific implementation, you create a set of\ntests using the <tt>create</tt> function that we defined above:</p>\n<pre>import adder_test_set\n\ndef _run_test_with_standard_adder(test_func):\n    adder = StandardAdder()\n    return test_func(adder)\n\nStandardAdderTests = adder_test_set.create(\n    \"StandardAdderTests\",\n    _run_test_with_standard_adder\n)\n</pre>\n<p>The first argument to <tt>create</tt> should be the name of the concrete test\nset. The second argument is a function that can run each of the test\nfunctions. In the example above, to run the tests in\n<tt>StandardAdderTests</tt>, nose-test-sets ends up calling\n<tt>_run_test_with_standard_adder(adding_zero_to_zero_returns_zero)</tt> and\n<tt>_run_test_with_standard_adder(adding_one_to_two_returns_three)</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 795522, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4074a659bfb211754068da36d83de04c", "sha256": "d7cc655c9935d4bf49949ab0b708ad3775fab239525d3b0e402fccc5359037ab"}, "downloads": -1, "filename": "nose-test-sets-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4074a659bfb211754068da36d83de04c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1379, "upload_time": "2013-01-10T20:45:08", "upload_time_iso_8601": "2013-01-10T20:45:08.991791Z", "url": "https://files.pythonhosted.org/packages/f3/27/89b8d8b558f5137b9e4ef280f951dd23be0972673d833488b2a09b385374/nose-test-sets-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8d86816e006db2a7c1c0cf71f6a9d453", "sha256": "c863ca89dfef6efa447aa71219767422b4b7059d4d5a085f50a116e743669890"}, "downloads": -1, "filename": "nose-test-sets-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8d86816e006db2a7c1c0cf71f6a9d453", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1317, "upload_time": "2013-02-17T19:05:29", "upload_time_iso_8601": "2013-02-17T19:05:29.969672Z", "url": "https://files.pythonhosted.org/packages/7a/50/d50aacdf0210eae6286023d9fd54a6f4181914a2f33ffe533f5edefda3c6/nose-test-sets-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "2c935d230cce29a0c93601d2d0c49e94", "sha256": "5c33257dabd07b42811b05a6349fcc60483b9694c3c54bcb45504785e4a1654e"}, "downloads": -1, "filename": "nose-test-sets-0.2.1.tar.gz", "has_sig": false, "md5_digest": "2c935d230cce29a0c93601d2d0c49e94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1386, "upload_time": "2013-02-17T22:16:52", "upload_time_iso_8601": "2013-02-17T22:16:52.929808Z", "url": "https://files.pythonhosted.org/packages/d0/58/296511e2518f814892b0f1c8899141f09ea4798e9d4c4f4303bd64717325/nose-test-sets-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2c935d230cce29a0c93601d2d0c49e94", "sha256": "5c33257dabd07b42811b05a6349fcc60483b9694c3c54bcb45504785e4a1654e"}, "downloads": -1, "filename": "nose-test-sets-0.2.1.tar.gz", "has_sig": false, "md5_digest": "2c935d230cce29a0c93601d2d0c49e94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1386, "upload_time": "2013-02-17T22:16:52", "upload_time_iso_8601": "2013-02-17T22:16:52.929808Z", "url": "https://files.pythonhosted.org/packages/d0/58/296511e2518f814892b0f1c8899141f09ea4798e9d4c4f4303bd64717325/nose-test-sets-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:44 2020"}