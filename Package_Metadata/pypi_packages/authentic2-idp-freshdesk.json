{"info": {"author": "Jocelyn Delalande", "author_email": "jdelalande@oasiswork.fr", "bugtrack_url": null, "classifiers": [], "description": "Authentic2 Freshdesk login\n==========================\n\nThis plugin allows Authentic2 IDP to log your users to freshdesk through\nfreshdesk simple SSO mechanism.\n\nInstall\n-------\n\nYou just have to install the package in your virtualenv and relaunch, it will\nbe automatically loaded by authentic2.\n\n### Freshdesk configuration\n\n- Go to https://yourcompany.freshdesk.com/admin/security\n- enable *SSO simple*\n- In *Remote login URL* put something like\n  `https://myidp.example.com/idp/freshdesk/login/`\n- In *Remote logout URL* put something like\n  `https://myidp.example.com/idp/logout/`\n- Note down the shared secret\n\n### Authentic configuration\n\nSet in your *local_settings.py* the following settings according to your\nfresdhesk site.\n\n    FRESHDESK_URL = 'http://yourcompany.freshdesk.com'\n    FRESHDESK_SECRET_KEY = 'XXXXXXXXXXXX'\n\n\n### Diverting some users to somewhere else\n\nYou may need to authorize freshdesk access only for a subset of your users,\nwilling to redirect others to a custom URL (ex: custom error page). There is the\n`FRESHDESK_DIVERT` setting for that.\n\n    you should point it to an object instance with two methods :\n    should_divert(email) and divert_url(email), for ex:\n\n    class TestDiverter():\n        def should_divert(self, user):\n            \"\"\"\n            :returns True if the user should be diverted out of FD false else\n            if user.email == 'foobar@example.com':\n                return True\n            else:\n                return False\n\n        def divert_url(self, user, request):\n            \"\"\"\n            :returns an url, the diversion path, the system will HTTP 302 there.\n            \"\"\"\n            return 'http://example.com/{}'.format(user.email)\n\nAnd in your `local_settings.py`\n\n    FRESHDESK_DIVERT='mymodule.TestDiverter'", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "AGPLv3", "maintainer": null, "maintainer_email": null, "name": "authentic2-idp-freshdesk", "package_url": "https://pypi.org/project/authentic2-idp-freshdesk/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/authentic2-idp-freshdesk/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/authentic2-idp-freshdesk/0.2/", "requires_dist": null, "requires_python": null, "summary": "Freshdesk simple SSO support for Authentic2", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            Authentic2 Freshdesk login<br>==========================<br><br>This plugin allows Authentic2 IDP to log your users to freshdesk through<br>freshdesk simple SSO mechanism.<br><br>Install<br>-------<br><br>You just have to install the package in your virtualenv and relaunch, it will<br>be automatically loaded by authentic2.<br><br>### Freshdesk configuration<br><br>- Go to https://yourcompany.freshdesk.com/admin/security<br>- enable *SSO simple*<br>- In *Remote login URL* put something like<br>  `https://myidp.example.com/idp/freshdesk/login/`<br>- In *Remote logout URL* put something like<br>  `https://myidp.example.com/idp/logout/`<br>- Note down the shared secret<br><br>### Authentic configuration<br><br>Set in your *local_settings.py* the following settings according to your<br>fresdhesk site.<br><br>    FRESHDESK_URL = 'http://yourcompany.freshdesk.com'<br>    FRESHDESK_SECRET_KEY = 'XXXXXXXXXXXX'<br><br><br>### Diverting some users to somewhere else<br><br>You may need to authorize freshdesk access only for a subset of your users,<br>willing to redirect others to a custom URL (ex: custom error page). There is the<br>`FRESHDESK_DIVERT` setting for that.<br><br>    you should point it to an object instance with two methods :<br>    should_divert(email) and divert_url(email), for ex:<br><br>    class TestDiverter():<br>        def should_divert(self, user):<br>            \"\"\"<br>            :returns True if the user should be diverted out of FD false else<br>            if user.email == 'foobar@example.com':<br>                return True<br>            else:<br>                return False<br><br>        def divert_url(self, user, request):<br>            \"\"\"<br>            :returns an url, the diversion path, the system will HTTP 302 there.<br>            \"\"\"<br>            return 'http://example.com/{}'.format(user.email)<br><br>And in your `local_settings.py`<br><br>    FRESHDESK_DIVERT='mymodule.TestDiverter'\n          </div>"}, "last_serial": 1329996, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4e11fdfa023b5eab1af671c0d2614ea9", "sha256": "d00304c6b3b8f57220cdd4495fecf6d05046cb921749c9e2fcae1bda999944ee"}, "downloads": -1, "filename": "authentic2-idp-freshdesk-0.1.tar.gz", "has_sig": false, "md5_digest": "4e11fdfa023b5eab1af671c0d2614ea9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15364, "upload_time": "2014-11-18T10:53:51", "upload_time_iso_8601": "2014-11-18T10:53:51.130891Z", "url": "https://files.pythonhosted.org/packages/dc/96/523d427bc2b41c60ba7f4addd9044f8e3bb48e466c9c3f10273aed28d6ab/authentic2-idp-freshdesk-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "0f4457454dee16e749840fd76d0fffde", "sha256": "bf6fc1c61a3f4aa71e0edc356d5dc6c661d13df5b3ae0840f046ccce12e99be9"}, "downloads": -1, "filename": "authentic2-idp-freshdesk-0.2.tar.gz", "has_sig": false, "md5_digest": "0f4457454dee16e749840fd76d0fffde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16801, "upload_time": "2014-12-03T17:37:18", "upload_time_iso_8601": "2014-12-03T17:37:18.149533Z", "url": "https://files.pythonhosted.org/packages/4b/74/d89ba26edc0ed88bb017d33954c6bfa00342520227741c90e1a8a4b2b3e4/authentic2-idp-freshdesk-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0f4457454dee16e749840fd76d0fffde", "sha256": "bf6fc1c61a3f4aa71e0edc356d5dc6c661d13df5b3ae0840f046ccce12e99be9"}, "downloads": -1, "filename": "authentic2-idp-freshdesk-0.2.tar.gz", "has_sig": false, "md5_digest": "0f4457454dee16e749840fd76d0fffde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16801, "upload_time": "2014-12-03T17:37:18", "upload_time_iso_8601": "2014-12-03T17:37:18.149533Z", "url": "https://files.pythonhosted.org/packages/4b/74/d89ba26edc0ed88bb017d33954c6bfa00342520227741c90e1a8a4b2b3e4/authentic2-idp-freshdesk-0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:23 2020"}