{"info": {"author": "Lucian Cooper", "author_email": "", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Topic :: Terminals", "Topic :: Utilities"], "description": "\n# cmdprogress\n\n[![PyPI version shields.io](https://img.shields.io/pypi/v/cmdprogress.svg)](https://pypi.python.org/pypi/cmdprogress/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/cmdprogress.svg)](https://pypi.python.org/pypi/cmdprogress/)\n[![PyPI license](https://img.shields.io/pypi/l/cmdprogress.svg)](https://pypi.python.org/pypi/cmdprogress/)\n\nCross Platform Python Command Line Progress Bars\n\n**MacOS**\n\n![Multi Bar](https://raw.githubusercontent.com/luciancooper/cmdprogress/master/multi_demo.gif)\n\n**Windows**\n\n**Linux**\n\n### Contents\n* [Installation](#installation)\n* [ProgBar](#ProgBar)\n* [MultiBar](#MultiBar)\n* [Acknowledgements](#Acknowledgements)\n\n# Installation\n\nUse `pip` via [PyPi](https://pypi.org)\n\n```bash\npip install cmdprogress\n```\n\n**Or** use `git`\n\n```bash\ngit clone git://github.com/luciancooper/cmdprogress.git cmdprogress\ncd cmdprogress\npython setup.py install\n```\n\n## Usage\n\nthis project consists of two instantiatable classes: `ProgBar` and `MultiBar`\n\n# ProgBar\n\nThere are two ways to use a `ProgBar`\n\nEither give it a length when you instantiate the object, and then directly loop through it\n\n```python\nfrom cmdprogress.bar import ProgBar\n\nbar = ProgBar(max=5)\nfor x in bar:\n    # x = (0 .. 5)\n    # do some work\n```\n\nOr do not provide it a length when you instantiate it, instead provide it an iterable to wrap\n\n```python\nfrom cmdprogress.bar import ProgBar\n\nbar = ProgBar()\nfor x in bar.iter(range(5)):\n    # x = (0 .. 5)\n    # do some work\n```\n\n\n# MultiBar\n\nThere are 3 ways to use a `MultiBar`.\n\n```python\nfrom cmdprogress.multi import MultiBar\n\nbar = MultiBar(lvl=2)\nfor i in bar.iter(range(5)):\n    for j in bar.iter(range(10)):\n        # do some work\n\n```\n\n\n```python\nfrom cmdprogress.multi import MultiBar\n\nbar = MultiBar(5,lvl=2)\nfor x in range(5):\n    for i in bar.iter(range(10)):\n        # do some work\n\n```\n\n\n```python\nfrom cmdprogress.multi import MultiBar\n\nbar = MultiBar(5,10)\nfor x in bar:\n    # x will be the tuple (i,j)\n    # do some work\n\n```\n\n\n## Acknowledgements\n\n - This project depends on [colorama](https://pypi.org/project/colorama/) to work in the Windows Command Line\n - Shoutout to this [stack overflow answer](https://stackoverflow.com/a/10455937)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/luciancooper/cmdprogress", "keywords": "progress bar utility", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cmdprogress", "package_url": "https://pypi.org/project/cmdprogress/", "platform": "", "project_url": "https://pypi.org/project/cmdprogress/", "project_urls": {"Homepage": "https://github.com/luciancooper/cmdprogress"}, "release_url": "https://pypi.org/project/cmdprogress/1.2/", "requires_dist": ["colorama ; platform_system == \"Windows\""], "requires_python": "", "summary": "Command Line Progress Bars", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>cmdprogress</h1>\n<p><a href=\"https://pypi.python.org/pypi/cmdprogress/\" rel=\"nofollow\"><img alt=\"PyPI version shields.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e5add1962e14338c4f2746d39dc1b3c14d4d49d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636d6470726f67726573732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/cmdprogress/\" rel=\"nofollow\"><img alt=\"PyPI pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/92550e766a100b72560a91c7f4c706444ce51e08/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f636d6470726f67726573732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/cmdprogress/\" rel=\"nofollow\"><img alt=\"PyPI license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8cead436d245e95fb1fc3ea9ee129a59f465ea9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f636d6470726f67726573732e737667\"></a></p>\n<p>Cross Platform Python Command Line Progress Bars</p>\n<p><strong>MacOS</strong></p>\n<p><img alt=\"Multi Bar\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d79993affb7b4c2578afab1a575109772e66d333/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c756369616e636f6f7065722f636d6470726f67726573732f6d61737465722f6d756c74695f64656d6f2e676966\"></p>\n<p><strong>Windows</strong></p>\n<p><strong>Linux</strong></p>\n<h3>Contents</h3>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#ProgBar\" rel=\"nofollow\">ProgBar</a></li>\n<li><a href=\"#MultiBar\" rel=\"nofollow\">MultiBar</a></li>\n<li><a href=\"#Acknowledgements\" rel=\"nofollow\">Acknowledgements</a></li>\n</ul>\n<h1>Installation</h1>\n<p>Use <code>pip</code> via <a href=\"https://pypi.org\" rel=\"nofollow\">PyPi</a></p>\n<pre>pip install cmdprogress\n</pre>\n<p><strong>Or</strong> use <code>git</code></p>\n<pre>git clone git://github.com/luciancooper/cmdprogress.git cmdprogress\n<span class=\"nb\">cd</span> cmdprogress\npython setup.py install\n</pre>\n<h2>Usage</h2>\n<p>this project consists of two instantiatable classes: <code>ProgBar</code> and <code>MultiBar</code></p>\n<h1>ProgBar</h1>\n<p>There are two ways to use a <code>ProgBar</code></p>\n<p>Either give it a length when you instantiate the object, and then directly loop through it</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cmdprogress.bar</span> <span class=\"kn\">import</span> <span class=\"n\">ProgBar</span>\n\n<span class=\"n\">bar</span> <span class=\"o\">=</span> <span class=\"n\">ProgBar</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">bar</span><span class=\"p\">:</span>\n    <span class=\"c1\"># x = (0 .. 5)</span>\n    <span class=\"c1\"># do some work</span>\n</pre>\n<p>Or do not provide it a length when you instantiate it, instead provide it an iterable to wrap</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cmdprogress.bar</span> <span class=\"kn\">import</span> <span class=\"n\">ProgBar</span>\n\n<span class=\"n\">bar</span> <span class=\"o\">=</span> <span class=\"n\">ProgBar</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">iter</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)):</span>\n    <span class=\"c1\"># x = (0 .. 5)</span>\n    <span class=\"c1\"># do some work</span>\n</pre>\n<h1>MultiBar</h1>\n<p>There are 3 ways to use a <code>MultiBar</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cmdprogress.multi</span> <span class=\"kn\">import</span> <span class=\"n\">MultiBar</span>\n\n<span class=\"n\">bar</span> <span class=\"o\">=</span> <span class=\"n\">MultiBar</span><span class=\"p\">(</span><span class=\"n\">lvl</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">iter</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)):</span>\n    <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">iter</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)):</span>\n        <span class=\"c1\"># do some work</span>\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cmdprogress.multi</span> <span class=\"kn\">import</span> <span class=\"n\">MultiBar</span>\n\n<span class=\"n\">bar</span> <span class=\"o\">=</span> <span class=\"n\">MultiBar</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"n\">lvl</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">iter</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)):</span>\n        <span class=\"c1\"># do some work</span>\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cmdprogress.multi</span> <span class=\"kn\">import</span> <span class=\"n\">MultiBar</span>\n\n<span class=\"n\">bar</span> <span class=\"o\">=</span> <span class=\"n\">MultiBar</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">bar</span><span class=\"p\">:</span>\n    <span class=\"c1\"># x will be the tuple (i,j)</span>\n    <span class=\"c1\"># do some work</span>\n</pre>\n<h2>Acknowledgements</h2>\n<ul>\n<li>This project depends on <a href=\"https://pypi.org/project/colorama/\" rel=\"nofollow\">colorama</a> to work in the Windows Command Line</li>\n<li>Shoutout to this <a href=\"https://stackoverflow.com/a/10455937\" rel=\"nofollow\">stack overflow answer</a></li>\n</ul>\n\n          </div>"}, "last_serial": 4570486, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "ead7412fb7650f9c63b4e2ad9c3f22f1", "sha256": "9e54a3cb0d36e18b2a7464f8438bf9fccaba91cb81d68a1c03416fcc025f5ae0"}, "downloads": -1, "filename": "cmdprogress-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ead7412fb7650f9c63b4e2ad9c3f22f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7302, "upload_time": "2018-12-06T15:17:22", "upload_time_iso_8601": "2018-12-06T15:17:22.388129Z", "url": "https://files.pythonhosted.org/packages/12/90/da294bbceee1fc1bd4ed4d60184d91cdea15b2bd902d1a392e45f9b6ac0e/cmdprogress-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f819b6408f23c8b22c3d28cc7f3fb7e", "sha256": "d466845195c0a9563bb01f56daf0857d7f400485823e08677eed976438a744ff"}, "downloads": -1, "filename": "cmdprogress-1.1.tar.gz", "has_sig": false, "md5_digest": "1f819b6408f23c8b22c3d28cc7f3fb7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4846, "upload_time": "2018-12-06T15:17:09", "upload_time_iso_8601": "2018-12-06T15:17:09.432744Z", "url": "https://files.pythonhosted.org/packages/73/22/c25dbea9846ff693cffa1f82f6e21ca80179281962b7bf4da23c8fd04799/cmdprogress-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "1b4bafb1c4de4fcc6959537d9f0ace9d", "sha256": "730b6e6758d6f3fcb5c95279e8698fab76fcdce698fa8da9d4161a1c529d4c0d"}, "downloads": -1, "filename": "cmdprogress-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1b4bafb1c4de4fcc6959537d9f0ace9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7493, "upload_time": "2018-12-07T04:29:01", "upload_time_iso_8601": "2018-12-07T04:29:01.351948Z", "url": "https://files.pythonhosted.org/packages/c0/39/9d73d7e37ba5300d0cd38040de4db278c5207fb408aa3f574cc7b3cfb02f/cmdprogress-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0340a2e558254f54070f9c03299fb730", "sha256": "4c536b62d771339a61d5c70872ceaa6f18c6477fe2f5b5f6d85bd85a52a8d491"}, "downloads": -1, "filename": "cmdprogress-1.2.tar.gz", "has_sig": false, "md5_digest": "0340a2e558254f54070f9c03299fb730", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5438, "upload_time": "2018-12-07T04:29:02", "upload_time_iso_8601": "2018-12-07T04:29:02.562125Z", "url": "https://files.pythonhosted.org/packages/66/8a/c91ca7b9f2d98353558858c0ce0a517cf40ac4530fe6df9ae97fb765cae5/cmdprogress-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1b4bafb1c4de4fcc6959537d9f0ace9d", "sha256": "730b6e6758d6f3fcb5c95279e8698fab76fcdce698fa8da9d4161a1c529d4c0d"}, "downloads": -1, "filename": "cmdprogress-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1b4bafb1c4de4fcc6959537d9f0ace9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7493, "upload_time": "2018-12-07T04:29:01", "upload_time_iso_8601": "2018-12-07T04:29:01.351948Z", "url": "https://files.pythonhosted.org/packages/c0/39/9d73d7e37ba5300d0cd38040de4db278c5207fb408aa3f574cc7b3cfb02f/cmdprogress-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0340a2e558254f54070f9c03299fb730", "sha256": "4c536b62d771339a61d5c70872ceaa6f18c6477fe2f5b5f6d85bd85a52a8d491"}, "downloads": -1, "filename": "cmdprogress-1.2.tar.gz", "has_sig": false, "md5_digest": "0340a2e558254f54070f9c03299fb730", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5438, "upload_time": "2018-12-07T04:29:02", "upload_time_iso_8601": "2018-12-07T04:29:02.562125Z", "url": "https://files.pythonhosted.org/packages/66/8a/c91ca7b9f2d98353558858c0ce0a517cf40ac4530fe6df9ae97fb765cae5/cmdprogress-1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:34 2020"}