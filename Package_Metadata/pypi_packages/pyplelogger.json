{"info": {"author": "KeisukeYamashita", "author_email": "19yamashita15@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6"], "description": "# pyplelogger\n\n[![Open Source Love](https://badges.frapsoft.com/os/v1/open-source.svg?v=103)](https://github.com/ellerbrock/open-source-badges/)\n[![Build Status](https://travis-ci.com/KeisukeYamashita/pylogger.svg?branch=master)](https://travis-ci.com/KeisukeYamashita/pylogger)\n[![Python 3.3](https://img.shields.io/badge/python->3.3-blue.svg)](https://www.python.org/downloads/release/python-330/)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n[![Maintainability](https://api.codeclimate.com/v1/badges/a489ad892561ae5ece20/maintainability)](https://codeclimate.com/github/KeisukeYamashita/pyplelogger/maintainability)\n[![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)](https://github.com/dwyl/esta/issues)\n\n> Simple logger written in python mostly for command line interface tools.  \n\n\n## Install\n\n```shell\npip install pyplelogger\n```\n\n## Usage\n\n### Simple usage\n\nThis is the atomic usage. Import this and print it out.\n\n```python\nfrom pyplelogger import Logger\n\nlog = Logger(__name__).build()\nlog.info(\"hogehoge\")\n\nINFO 2018-11-26 23:11:15,109 test.py:main in line 4: hogehoge\n```\n\nThe default log level is `INFO` and you have to pass unique name for each handler. \n\n### Change default logger level\n\nYou can change logger level entire the project.\n\n```python\nimport logging\nfrom pyplelogger import Logger\n\nLogger.set_default_log_level(logging.WARNING)\n\nlog = Logger(__name__).build()\nlog.info(\"hogehoge\")\n\n#=> Nothing is pritted out\n```\n\nAnd once you set teh default log level, it is valid in entire project.\n\nThe logger levels are defined in `logging` library.\n\n| level | number |\n|:----|:----|\n| CRITICAL | 50 |\n| ERROR | 40 |\n| WARNING | 30 |\n| INFO | 20 |\n| DEBUG | 10 |\n| NOTSET | 0 |\n\nLet's say you have a `script1.py` and `script2.py`.\n\nIf you change defaul log level in `script1.py` like this,\n\n```python\nimport logging\nfrom pyplelogger import Logger\n\nLogger.set_default_log_level(logging.WARNING)\n```\n\nit is valid in `script2.py` too.\n\n```python\nimport logging\nfrom pyplelogger import Logger\n\nlog = Logger(__name__).build()\nlog.info(\"hogehoge\")\n\n#=> Nothing is pritted out\n```\n\n### Change logger level\n\nThis is similier to changing default log level but this method changes log level for one logger.\n\nFuthermore, the method to change default log level is a class method but, this method is a instance method, so it will only effect the instance.\n\n```python\nimport logging\nfrom pyplelogger import Logger\n\nlog = Logger(__name__).set_log_level(logging.WARNING).build()\nlog.info(\"hogehoge\")\n\n#=> Nothing is pritted out\n```\n\n### Change default format\n\nYou can change default format of every instance of Logger by this method. Pass string object describing logging format.\n\n```python\nformat = '%(levelname)s %(asctime)s %(message)s'\nLogger.set_default_format(format)\n\nlog = Logger(__name__).build()\nlog.info(\"hogehoge\")\n```\n\nThis will print out this logs.\n\n```shell\nINFO 2018-11-28 18:11:15,109 hogehoge\n```\n\n### Change format\n\nSpecify format in string. The default format is `'%(levelname)s %(asctime)s %(module)s.py:%(funcName)s in line %(lineno)d: %(message)s'`.\n\n```python\nfrom pyplelogger import Logger\n\nlog_before = Logger(__name__).build()\nlog_after = Logger(__name__ + \"after\").set_format('%(levelname)s %(message)s').build()\n\nlog_before.info(\"before\")\nlog_after.info(\"after\")\n```\n\nHere is the output.\n\n```shell\nINFO 2018-11-26 23:11:15,109 test.py:main in line 4: before\nINFO after\n``` \n\n## With Argparse\n\nThis has good integration with [argparse](https://docs.python.jp/3/library/argparse.html), a library for creating cli tool.\n\n### Verbose flag\n\nThis is just a simple example of the verbose flag.\n\n```python\nimport argparse\n\nparser = argparse.ArgumentParser()\nparser.add_argument('--verbose', '-v', action='count')\n\nargs = parser.parse_args()\n```\n\nNow you can get number of `v` flags like \n\n- `-v`: 1\n- `-vvv`: 3\n\nYou can convert to log level by Using `IncrementalLoggerLevel` IntEnum Class.\n\n```python\n# 1 is debug level\n\ncount = 1\n\nlog_level = IncrementalLoggerLevel.convert_logger_level(1)\n\nlog = Logger().set_log_level(log_level)\nlog.DEBUG(\"hoge\")\n```\n\nThen you will see\n\n```\n#=> \nDEBUG 2018-11-26 23:11:15,109 test.py:main in line 3: hoge\n```\n\nThe default level of logging is `INFO` in current version.\n\n| level | number | count |\n|:----|:----|:---|\n| CRITICAL | 50 | - |\n| ERROR | 40 | - |\n| WARNING | 30 | - |\n| INFO | 20 | 0 |\n| DEBUG | 10 | 1 | \n| NOTSET | 0 | 2 |\n\n## To contribute\n\nWe welcome for your contribution.\n\n1. Fork this project\n2. Run `just` to install dependencies.\n3. Give us a pull request\n\n## Member\n\n- KeisukeYamashita: Maintainer and creater\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "logger cli logging", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyplelogger", "package_url": "https://pypi.org/project/pyplelogger/", "platform": "", "project_url": "https://pypi.org/project/pyplelogger/", "project_urls": null, "release_url": "https://pypi.org/project/pyplelogger/0.1.8/", "requires_dist": null, "requires_python": "", "summary": "Simple logger in python mainly used for CLI tool like argparse", "version": "0.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyplelogger</h1>\n<p><a href=\"https://github.com/ellerbrock/open-source-badges/\" rel=\"nofollow\"><img alt=\"Open Source Love\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea11ef8e3555f34bbe9bb393e03601a4f30ad600/68747470733a2f2f6261646765732e66726170736f66742e636f6d2f6f732f76312f6f70656e2d736f757263652e7376673f763d313033\"></a>\n<a href=\"https://travis-ci.com/KeisukeYamashita/pylogger\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2e142a1ba217fbad77e1befcbb6f92283bc982f/68747470733a2f2f7472617669732d63692e636f6d2f4b656973756b6559616d6173686974612f70796c6f676765722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://www.python.org/downloads/release/python-330/\" rel=\"nofollow\"><img alt=\"Python 3.3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c23762f01d6260cecaa8e6e5c8608cc265e959de/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d253345332e332d626c75652e737667\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a></p>\n<p><a href=\"https://codeclimate.com/github/KeisukeYamashita/pyplelogger/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cecae418df842eba8fa075a777d0624cd8349284/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f61343839616438393235363161653565636532302f6d61696e7461696e6162696c697479\"></a>\n<a href=\"https://github.com/dwyl/esta/issues\" rel=\"nofollow\"><img alt=\"contributions welcome\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/793ef3fadef48113e66f3c652ebc9b591bcb1745/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c6174\"></a></p>\n<blockquote>\n<p>Simple logger written in python mostly for command line interface tools.</p>\n</blockquote>\n<h2>Install</h2>\n<pre>pip install pyplelogger\n</pre>\n<h2>Usage</h2>\n<h3>Simple usage</h3>\n<p>This is the atomic usage. Import this and print it out.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyplelogger</span> <span class=\"kn\">import</span> <span class=\"n\">Logger</span>\n\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">Logger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"hogehoge\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">INFO</span> <span class=\"mi\">2018</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"o\">-</span><span class=\"mi\">26</span> <span class=\"mi\">23</span><span class=\"p\">:</span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"mi\">109</span> <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"n\">main</span> <span class=\"ow\">in</span> <span class=\"n\">line</span> <span class=\"mi\">4</span><span class=\"p\">:</span> <span class=\"n\">hogehoge</span>\n</pre>\n<p>The default log level is <code>INFO</code> and you have to pass unique name for each handler.</p>\n<h3>Change default logger level</h3>\n<p>You can change logger level entire the project.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyplelogger</span> <span class=\"kn\">import</span> <span class=\"n\">Logger</span>\n\n<span class=\"n\">Logger</span><span class=\"o\">.</span><span class=\"n\">set_default_log_level</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">WARNING</span><span class=\"p\">)</span>\n\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">Logger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"hogehoge\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#=&gt; Nothing is pritted out</span>\n</pre>\n<p>And once you set teh default log level, it is valid in entire project.</p>\n<p>The logger levels are defined in <code>logging</code> library.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">level</th>\n<th align=\"left\">number</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">CRITICAL</td>\n<td align=\"left\">50</td>\n</tr>\n<tr>\n<td align=\"left\">ERROR</td>\n<td align=\"left\">40</td>\n</tr>\n<tr>\n<td align=\"left\">WARNING</td>\n<td align=\"left\">30</td>\n</tr>\n<tr>\n<td align=\"left\">INFO</td>\n<td align=\"left\">20</td>\n</tr>\n<tr>\n<td align=\"left\">DEBUG</td>\n<td align=\"left\">10</td>\n</tr>\n<tr>\n<td align=\"left\">NOTSET</td>\n<td align=\"left\">0</td>\n</tr></tbody></table>\n<p>Let's say you have a <code>script1.py</code> and <code>script2.py</code>.</p>\n<p>If you change defaul log level in <code>script1.py</code> like this,</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyplelogger</span> <span class=\"kn\">import</span> <span class=\"n\">Logger</span>\n\n<span class=\"n\">Logger</span><span class=\"o\">.</span><span class=\"n\">set_default_log_level</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">WARNING</span><span class=\"p\">)</span>\n</pre>\n<p>it is valid in <code>script2.py</code> too.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyplelogger</span> <span class=\"kn\">import</span> <span class=\"n\">Logger</span>\n\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">Logger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"hogehoge\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#=&gt; Nothing is pritted out</span>\n</pre>\n<h3>Change logger level</h3>\n<p>This is similier to changing default log level but this method changes log level for one logger.</p>\n<p>Futhermore, the method to change default log level is a class method but, this method is a instance method, so it will only effect the instance.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyplelogger</span> <span class=\"kn\">import</span> <span class=\"n\">Logger</span>\n\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">Logger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_log_level</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">WARNING</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"hogehoge\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#=&gt; Nothing is pritted out</span>\n</pre>\n<h3>Change default format</h3>\n<p>You can change default format of every instance of Logger by this method. Pass string object describing logging format.</p>\n<pre><span class=\"nb\">format</span> <span class=\"o\">=</span> <span class=\"s1\">'</span><span class=\"si\">%(levelname)s</span><span class=\"s1\"> </span><span class=\"si\">%(asctime)s</span><span class=\"s1\"> </span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span>\n<span class=\"n\">Logger</span><span class=\"o\">.</span><span class=\"n\">set_default_format</span><span class=\"p\">(</span><span class=\"nb\">format</span><span class=\"p\">)</span>\n\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">Logger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"hogehoge\"</span><span class=\"p\">)</span>\n</pre>\n<p>This will print out this logs.</p>\n<pre>INFO <span class=\"m\">2018</span>-11-28 <span class=\"m\">18</span>:11:15,109 hogehoge\n</pre>\n<h3>Change format</h3>\n<p>Specify format in string. The default format is <code>'%(levelname)s %(asctime)s %(module)s.py:%(funcName)s in line %(lineno)d: %(message)s'</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyplelogger</span> <span class=\"kn\">import</span> <span class=\"n\">Logger</span>\n\n<span class=\"n\">log_before</span> <span class=\"o\">=</span> <span class=\"n\">Logger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"n\">log_after</span> <span class=\"o\">=</span> <span class=\"n\">Logger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span> <span class=\"o\">+</span> <span class=\"s2\">\"after\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_format</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">%(levelname)s</span><span class=\"s1\"> </span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n\n<span class=\"n\">log_before</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"before\"</span><span class=\"p\">)</span>\n<span class=\"n\">log_after</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"after\"</span><span class=\"p\">)</span>\n</pre>\n<p>Here is the output.</p>\n<pre>INFO <span class=\"m\">2018</span>-11-26 <span class=\"m\">23</span>:11:15,109 test.py:main in line <span class=\"m\">4</span>: before\nINFO after\n</pre>\n<h2>With Argparse</h2>\n<p>This has good integration with <a href=\"https://docs.python.jp/3/library/argparse.html\" rel=\"nofollow\">argparse</a>, a library for creating cli tool.</p>\n<h3>Verbose flag</h3>\n<p>This is just a simple example of the verbose flag.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">()</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s1\">'--verbose'</span><span class=\"p\">,</span> <span class=\"s1\">'-v'</span><span class=\"p\">,</span> <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s1\">'count'</span><span class=\"p\">)</span>\n\n<span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n</pre>\n<p>Now you can get number of <code>v</code> flags like</p>\n<ul>\n<li><code>-v</code>: 1</li>\n<li><code>-vvv</code>: 3</li>\n</ul>\n<p>You can convert to log level by Using <code>IncrementalLoggerLevel</code> IntEnum Class.</p>\n<pre><span class=\"c1\"># 1 is debug level</span>\n\n<span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">log_level</span> <span class=\"o\">=</span> <span class=\"n\">IncrementalLoggerLevel</span><span class=\"o\">.</span><span class=\"n\">convert_logger_level</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">Logger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_log_level</span><span class=\"p\">(</span><span class=\"n\">log_level</span><span class=\"p\">)</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">(</span><span class=\"s2\">\"hoge\"</span><span class=\"p\">)</span>\n</pre>\n<p>Then you will see</p>\n<pre><code>#=&gt; \nDEBUG 2018-11-26 23:11:15,109 test.py:main in line 3: hoge\n</code></pre>\n<p>The default level of logging is <code>INFO</code> in current version.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">level</th>\n<th align=\"left\">number</th>\n<th align=\"left\">count</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">CRITICAL</td>\n<td align=\"left\">50</td>\n<td align=\"left\">-</td>\n</tr>\n<tr>\n<td align=\"left\">ERROR</td>\n<td align=\"left\">40</td>\n<td align=\"left\">-</td>\n</tr>\n<tr>\n<td align=\"left\">WARNING</td>\n<td align=\"left\">30</td>\n<td align=\"left\">-</td>\n</tr>\n<tr>\n<td align=\"left\">INFO</td>\n<td align=\"left\">20</td>\n<td align=\"left\">0</td>\n</tr>\n<tr>\n<td align=\"left\">DEBUG</td>\n<td align=\"left\">10</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\">NOTSET</td>\n<td align=\"left\">0</td>\n<td align=\"left\">2</td>\n</tr></tbody></table>\n<h2>To contribute</h2>\n<p>We welcome for your contribution.</p>\n<ol>\n<li>Fork this project</li>\n<li>Run <code>just</code> to install dependencies.</li>\n<li>Give us a pull request</li>\n</ol>\n<h2>Member</h2>\n<ul>\n<li>KeisukeYamashita: Maintainer and creater</li>\n</ul>\n\n          </div>"}, "last_serial": 4552424, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7248581f342e9d6b771adce91dd69d05", "sha256": "9c3475418a1b96dba946cac5ba369d825af4eaf5369b1e3c2986eda27dbab026"}, "downloads": -1, "filename": "pyplelogger-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7248581f342e9d6b771adce91dd69d05", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1966, "upload_time": "2018-11-26T17:05:08", "upload_time_iso_8601": "2018-11-26T17:05:08.075472Z", "url": "https://files.pythonhosted.org/packages/a2/c8/9137ef04ae64bb2bf7fecfb5ff5d97d4b62abeb6e1751a758ce88791e673/pyplelogger-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "21b82808f9485babf05682c4cca65044", "sha256": "fd5412f5575a787ff9abbc79d9d536ea4a83db186242c20e874eaa9ca6a5ed78"}, "downloads": -1, "filename": "pyplelogger-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "21b82808f9485babf05682c4cca65044", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1989, "upload_time": "2018-11-26T17:06:41", "upload_time_iso_8601": "2018-11-26T17:06:41.798665Z", "url": "https://files.pythonhosted.org/packages/bf/71/8af51404311387a6ecdfcc1b3f630d05e60d3ed8c7d3b5993b9159274e7f/pyplelogger-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a80795567933168d1c441569df21ca90", "sha256": "2a0b98b55ceea40eabee4928d1274044df45db6b164eac56f0efa17e578df356"}, "downloads": -1, "filename": "pyplelogger-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a80795567933168d1c441569df21ca90", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4162, "upload_time": "2018-11-26T17:18:44", "upload_time_iso_8601": "2018-11-26T17:18:44.861443Z", "url": "https://files.pythonhosted.org/packages/7f/55/55883a600cb85a8be525ff16d8e935dfd64d9e86742e02ae41edc630db62/pyplelogger-0.1.2-py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "1518362bc1503fc646f8e374cf1b0a23", "sha256": "765eb7c1b4c6aacb2174c6d25dd10f247cf06c37e71086a718c2c3a185716e20"}, "downloads": -1, "filename": "pyplelogger-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1518362bc1503fc646f8e374cf1b0a23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4507, "upload_time": "2018-11-26T18:03:00", "upload_time_iso_8601": "2018-11-26T18:03:00.247301Z", "url": "https://files.pythonhosted.org/packages/ae/e4/0611f36ca362c78e41a21279bd65bf01250de5dc49ed6989c3b0a1e56366/pyplelogger-0.1.3-py3-none-any.whl", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "d9827df4f75dffb7189b01f71e18abcc", "sha256": "45a8502d075c9d6a94c8f1fc0738687e981f78aaf4541b51a70de32c34db8480"}, "downloads": -1, "filename": "pyplelogger-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d9827df4f75dffb7189b01f71e18abcc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4564, "upload_time": "2018-11-28T09:35:55", "upload_time_iso_8601": "2018-11-28T09:35:55.834787Z", "url": "https://files.pythonhosted.org/packages/26/2f/7377f381b7f4369bc779178ffbd5ebe4bc3c3dc26a3b74f85dfe2f0d66ad/pyplelogger-0.1.4-py3-none-any.whl", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "b3445093b537d691a6ab663b3e7b5170", "sha256": "c8592fec85b83be09357338087d552fbc689b7107a14e75cf806da66a6fd5a06"}, "downloads": -1, "filename": "pyplelogger-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "b3445093b537d691a6ab663b3e7b5170", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4566, "upload_time": "2018-11-28T18:55:06", "upload_time_iso_8601": "2018-11-28T18:55:06.131615Z", "url": "https://files.pythonhosted.org/packages/8b/7f/cfb3311976505f8a8f90ac58ebe83adfcfa93d3b720c212e85f6c08c879c/pyplelogger-0.1.5-py3-none-any.whl", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "e1383533704a667a9e63f6f4d332c213", "sha256": "1dee083f77c6e8e6928e8b188fdd32ddc1fc922416741a20140c5c9694b63ee6"}, "downloads": -1, "filename": "pyplelogger-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "e1383533704a667a9e63f6f4d332c213", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4564, "upload_time": "2018-12-02T12:32:29", "upload_time_iso_8601": "2018-12-02T12:32:29.803747Z", "url": "https://files.pythonhosted.org/packages/c7/6e/2a1b46fbaad148ef2a5e47f9edce9dc937fea6ac507dd03f159aeb6c24f9/pyplelogger-0.1.6-py3-none-any.whl", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "1037a6e7ecfdf4e5690db7883592cf23", "sha256": "fb607f226f2679c88ded5e7a2897f4dfe743d2c37c469734f6ab5ddfd1a580ea"}, "downloads": -1, "filename": "pyplelogger-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "1037a6e7ecfdf4e5690db7883592cf23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6269, "upload_time": "2018-12-02T12:44:42", "upload_time_iso_8601": "2018-12-02T12:44:42.472653Z", "url": "https://files.pythonhosted.org/packages/e2/51/3c1b9dc3859f4da86e786b420e8976d41c0777ad4f4d7be1310f7cf1bc4f/pyplelogger-0.1.7-py3-none-any.whl", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "9e73e14a6d846c960781f0b4abd19152", "sha256": "6bdc16e314ed63c0e6ab6b1d010491cd82d04aa40db0033e8cc794b47ba68eee"}, "downloads": -1, "filename": "pyplelogger-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "9e73e14a6d846c960781f0b4abd19152", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6293, "upload_time": "2018-12-02T12:45:56", "upload_time_iso_8601": "2018-12-02T12:45:56.232457Z", "url": "https://files.pythonhosted.org/packages/02/4c/d6cc5e47f98be6dad1b3cef874aa47b1308fc94466ccfb7bafa9c3cc88cf/pyplelogger-0.1.8-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9e73e14a6d846c960781f0b4abd19152", "sha256": "6bdc16e314ed63c0e6ab6b1d010491cd82d04aa40db0033e8cc794b47ba68eee"}, "downloads": -1, "filename": "pyplelogger-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "9e73e14a6d846c960781f0b4abd19152", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6293, "upload_time": "2018-12-02T12:45:56", "upload_time_iso_8601": "2018-12-02T12:45:56.232457Z", "url": "https://files.pythonhosted.org/packages/02/4c/d6cc5e47f98be6dad1b3cef874aa47b1308fc94466ccfb7bafa9c3cc88cf/pyplelogger-0.1.8-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:59:23 2020"}