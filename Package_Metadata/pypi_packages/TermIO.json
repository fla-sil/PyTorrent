{"info": {"author": "jakobst1n", "author_email": "jakob.stendahl@outlook.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# TermIO\nSimple library that makes it easier to manipulate the terminal using escape\nsequences.\n\nIt does not work in all terminal and terminal-emulators. But i have generally\nhad good with bash.\n\n```\nimport TermIO\n```\n\n## func `TermIO.TermSize.Rows(Update=True)`\nReturns rows in terminal as an int.\n```\nUpdate : BOOL, should you check the terminal size again, or just [True]\n                assume that it hasn't changed since last check.\n```\n\n## func `TermIO.TermSize.Columns(Update=True)`\nReturns Columns in terminal as an int.\n```\nUpdate : BOOL, should you check the terminal size again, or just [True]\n                assume that it hasn't changed since last check.\n```\n\n## func `TermIO.Cursor.SetPos(col, row, flush=True)`\nSet cursor to a spesific column and row in the terminal.\n```\ncol   : The column number to put the cursor.\nrow   : The row number to put the cursor.\nflush : Wether or not to flush the codes printed (Default is true).\n```\n\n## func `TermIO.Cursor.Left(n, flush=True)`\nMove the cursor `n` characters to the left.\n```\nn     : number\nflush : Wether or not to flush the codes printed (Default is true).\n```\n\n## func `TermIO.Cursor.Right(n, flush=True)`\nMove the cursor `n` characters to the right.\n```\nn     : number\nflush : Wether or not to flush the codes printed (Default is true).\n```\n\n## func `TermIO.Cursor.Up(n, flush=True)`\nMove the cursor `n` characters up.\n```\nn     : number\nflush : Wether or not to flush the codes printed (Default is true).\n```\n\n## func `TermIO.Cursor.Down(n, flush=True)`\nMove the cursor `n` characters to the down.\n```\nn     : number\nflush : Wether or not to flush the codes printed (Default is true).\n```\n\n## func `TermIO.Screen.Clear(flush=True)`\nClear the screen.\n```\nflush : Wether or not to flush the codes printed (Default is true).\n```\n\n## func `TermIO.Screen.Flush()`\nFlushes printed content to screen.\n\n## func `TermIO.Screen.Decorate(fg=None, bg=None, dec=None, flush=True)`\nClear the screen\n```\nfg    : Number between 0 and 255. No logical color math... [None]\nbg    : Number between 0 and 255. No logical color math... [None]\ndec   : Either a string or a list of strings. [None]\n            The three possible decorations is\n            reversed, underline, bold\n            eg:\n                TermIO.Screen.Decorate(dec=\"reversed\")\n            or\n                TermIO.Screen.Decorate(dec=[\"bold\", \"reversed\"])\nflush : Wether or not to flush the codes printed. [True]\n```\n\nIf you want to print `ESC[0M`, to remove all decorations. Just call this function with `fg=bg=dec=None`.\n\n## func `TermIO.Screen.Write(outStr, flush=True)`\nWrites a string to stdout.\n```\noutStr : string to be printed\nflush  : Wether or not to flush the codes printed (Default is true).\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jakobst1n/TermIO-python-package", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "TermIO", "package_url": "https://pypi.org/project/TermIO/", "platform": "", "project_url": "https://pypi.org/project/TermIO/", "project_urls": {"Homepage": "https://github.com/jakobst1n/TermIO-python-package"}, "release_url": "https://pypi.org/project/TermIO/0.1.6/", "requires_dist": null, "requires_python": "", "summary": "Simple terminal manipulator", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TermIO</h1>\n<p>Simple library that makes it easier to manipulate the terminal using escape\nsequences.</p>\n<p>It does not work in all terminal and terminal-emulators. But i have generally\nhad good with bash.</p>\n<pre><code>import TermIO\n</code></pre>\n<h2>func <code>TermIO.TermSize.Rows(Update=True)</code></h2>\n<p>Returns rows in terminal as an int.</p>\n<pre><code>Update : BOOL, should you check the terminal size again, or just [True]\n                assume that it hasn't changed since last check.\n</code></pre>\n<h2>func <code>TermIO.TermSize.Columns(Update=True)</code></h2>\n<p>Returns Columns in terminal as an int.</p>\n<pre><code>Update : BOOL, should you check the terminal size again, or just [True]\n                assume that it hasn't changed since last check.\n</code></pre>\n<h2>func <code>TermIO.Cursor.SetPos(col, row, flush=True)</code></h2>\n<p>Set cursor to a spesific column and row in the terminal.</p>\n<pre><code>col   : The column number to put the cursor.\nrow   : The row number to put the cursor.\nflush : Wether or not to flush the codes printed (Default is true).\n</code></pre>\n<h2>func <code>TermIO.Cursor.Left(n, flush=True)</code></h2>\n<p>Move the cursor <code>n</code> characters to the left.</p>\n<pre><code>n     : number\nflush : Wether or not to flush the codes printed (Default is true).\n</code></pre>\n<h2>func <code>TermIO.Cursor.Right(n, flush=True)</code></h2>\n<p>Move the cursor <code>n</code> characters to the right.</p>\n<pre><code>n     : number\nflush : Wether or not to flush the codes printed (Default is true).\n</code></pre>\n<h2>func <code>TermIO.Cursor.Up(n, flush=True)</code></h2>\n<p>Move the cursor <code>n</code> characters up.</p>\n<pre><code>n     : number\nflush : Wether or not to flush the codes printed (Default is true).\n</code></pre>\n<h2>func <code>TermIO.Cursor.Down(n, flush=True)</code></h2>\n<p>Move the cursor <code>n</code> characters to the down.</p>\n<pre><code>n     : number\nflush : Wether or not to flush the codes printed (Default is true).\n</code></pre>\n<h2>func <code>TermIO.Screen.Clear(flush=True)</code></h2>\n<p>Clear the screen.</p>\n<pre><code>flush : Wether or not to flush the codes printed (Default is true).\n</code></pre>\n<h2>func <code>TermIO.Screen.Flush()</code></h2>\n<p>Flushes printed content to screen.</p>\n<h2>func <code>TermIO.Screen.Decorate(fg=None, bg=None, dec=None, flush=True)</code></h2>\n<p>Clear the screen</p>\n<pre><code>fg    : Number between 0 and 255. No logical color math... [None]\nbg    : Number between 0 and 255. No logical color math... [None]\ndec   : Either a string or a list of strings. [None]\n            The three possible decorations is\n            reversed, underline, bold\n            eg:\n                TermIO.Screen.Decorate(dec=\"reversed\")\n            or\n                TermIO.Screen.Decorate(dec=[\"bold\", \"reversed\"])\nflush : Wether or not to flush the codes printed. [True]\n</code></pre>\n<p>If you want to print <code>ESC[0M</code>, to remove all decorations. Just call this function with <code>fg=bg=dec=None</code>.</p>\n<h2>func <code>TermIO.Screen.Write(outStr, flush=True)</code></h2>\n<p>Writes a string to stdout.</p>\n<pre><code>outStr : string to be printed\nflush  : Wether or not to flush the codes printed (Default is true).\n</code></pre>\n\n          </div>"}, "last_serial": 5683959, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f77ef4488d8846912c539b9f0aab06b6", "sha256": "eb0dc14e93bca6798a661466ace09df76d112f30071fc11686daab7f17e8d3e9"}, "downloads": -1, "filename": "TermIO-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "f77ef4488d8846912c539b9f0aab06b6", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 2925, "upload_time": "2019-08-15T13:10:26", "upload_time_iso_8601": "2019-08-15T13:10:26.989130Z", "url": "https://files.pythonhosted.org/packages/24/69/234407d9d686ac3b16de68a7cc6273e23d6644994d97464c1858b50175f5/TermIO-0.1-py2-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8118118bb6f5196420ad6d885e892321", "sha256": "fd98085bd60217d849aea0206ff41a474de2bed728b7b37fc1376218762a79f3"}, "downloads": -1, "filename": "TermIO-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8118118bb6f5196420ad6d885e892321", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3007, "upload_time": "2019-08-15T13:50:56", "upload_time_iso_8601": "2019-08-15T13:50:56.949351Z", "url": "https://files.pythonhosted.org/packages/99/da/72c9a1b95949ed20f7d9de96a99623c3a9908ecb5b4a15584e253d76a622/TermIO-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4cc8ccaaf2de61655cc7047a1023f51", "sha256": "c4c4033c00bbc85bbb26ac898fc9b05e0637bbc617cfa10ed782b63f8b6c10cd"}, "downloads": -1, "filename": "TermIO-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f4cc8ccaaf2de61655cc7047a1023f51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2720, "upload_time": "2019-08-15T13:50:58", "upload_time_iso_8601": "2019-08-15T13:50:58.443767Z", "url": "https://files.pythonhosted.org/packages/c5/d0/7f9df6d476d55733db5bbcd1e33d455c62d913c6781d8f4e7cb051d4bdb5/TermIO-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "4c8e2649004dffa98f1f0c4496d20a83", "sha256": "9181563254e11d1319b0879fde0f7a9d882a047e7de055c48ee92d69eb0b75a5"}, "downloads": -1, "filename": "TermIO-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4c8e2649004dffa98f1f0c4496d20a83", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16874, "upload_time": "2019-08-15T19:43:35", "upload_time_iso_8601": "2019-08-15T19:43:35.277628Z", "url": "https://files.pythonhosted.org/packages/35/31/1699e422bd9e9a54a053f0c7428d5d433e37e41b733d89a518288a99497c/TermIO-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9732478c3af2f5eee1e5146d6d8c36c5", "sha256": "6cd1dc7c0bb502e53148a6883758f303fb7081188289671644c66ccc15e0f1dd"}, "downloads": -1, "filename": "TermIO-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9732478c3af2f5eee1e5146d6d8c36c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2908, "upload_time": "2019-08-15T19:35:37", "upload_time_iso_8601": "2019-08-15T19:35:37.911847Z", "url": "https://files.pythonhosted.org/packages/18/5d/40436fdf36a1cdc4bcb73b83abea9cc0acf2c142b2041ec50c5bde6a5e91/TermIO-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "577d40bf9a5667532ccbcf1ec1a24890", "sha256": "83408d9bff7ce25ddef5a4d59a1035f9ef3d27f079c4781ca3a7e4fc16c0101c"}, "downloads": -1, "filename": "TermIO-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "577d40bf9a5667532ccbcf1ec1a24890", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16874, "upload_time": "2019-08-15T19:43:36", "upload_time_iso_8601": "2019-08-15T19:43:36.866051Z", "url": "https://files.pythonhosted.org/packages/7e/70/9c91b2a5761eb14b1fc8bfb98c9657f19a301885c9fd3486cc9a34d7891e/TermIO-0.1.4-py3-none-any.whl", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "477f2cbadd60397033ce39bb96c5d7a2", "sha256": "abce6ae3cbfea88cbf0d5614191343ec5cf532b9c3bcbe12a8706d9aaffc41d0"}, "downloads": -1, "filename": "TermIO-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "477f2cbadd60397033ce39bb96c5d7a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16877, "upload_time": "2019-08-15T19:46:46", "upload_time_iso_8601": "2019-08-15T19:46:46.235773Z", "url": "https://files.pythonhosted.org/packages/ba/ea/4f128b8d2ce9d7ae1c4ca762794a07e32c4829206ba56e801a2de152955c/TermIO-0.1.5-py3-none-any.whl", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "6ca809ace0a024b6ee09782b56c627d3", "sha256": "315a924b9676af59f213c5555cb42da57928743221fcd56a6de3abdc3aa15b6b"}, "downloads": -1, "filename": "TermIO-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "6ca809ace0a024b6ee09782b56c627d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16927, "upload_time": "2019-08-15T19:58:36", "upload_time_iso_8601": "2019-08-15T19:58:36.753863Z", "url": "https://files.pythonhosted.org/packages/8f/2b/1c61885b5b50ec82d61baa3ae62ae0c959a40627637a65c09be5928fee11/TermIO-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cdee6f9d1a7bc17aa95b3cbd3079614", "sha256": "4fbfacde7440c920074a9bd5f5e4bd799c88c920883f54524ff4247ebda79afc"}, "downloads": -1, "filename": "TermIO-0.1.6.tar.gz", "has_sig": false, "md5_digest": "1cdee6f9d1a7bc17aa95b3cbd3079614", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2920, "upload_time": "2019-08-15T19:58:38", "upload_time_iso_8601": "2019-08-15T19:58:38.309018Z", "url": "https://files.pythonhosted.org/packages/5b/2c/1ddb6b319133714be6ba72cd9ad5e3a0703bf74013c0664a9741c6bbf62a/TermIO-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6ca809ace0a024b6ee09782b56c627d3", "sha256": "315a924b9676af59f213c5555cb42da57928743221fcd56a6de3abdc3aa15b6b"}, "downloads": -1, "filename": "TermIO-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "6ca809ace0a024b6ee09782b56c627d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16927, "upload_time": "2019-08-15T19:58:36", "upload_time_iso_8601": "2019-08-15T19:58:36.753863Z", "url": "https://files.pythonhosted.org/packages/8f/2b/1c61885b5b50ec82d61baa3ae62ae0c959a40627637a65c09be5928fee11/TermIO-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cdee6f9d1a7bc17aa95b3cbd3079614", "sha256": "4fbfacde7440c920074a9bd5f5e4bd799c88c920883f54524ff4247ebda79afc"}, "downloads": -1, "filename": "TermIO-0.1.6.tar.gz", "has_sig": false, "md5_digest": "1cdee6f9d1a7bc17aa95b3cbd3079614", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2920, "upload_time": "2019-08-15T19:58:38", "upload_time_iso_8601": "2019-08-15T19:58:38.309018Z", "url": "https://files.pythonhosted.org/packages/5b/2c/1ddb6b319133714be6ba72cd9ad5e3a0703bf74013c0664a9741c6bbf62a/TermIO-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:54 2020"}