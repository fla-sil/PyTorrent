{"info": {"author": "PyPcDeV", "author_email": "pypcdev@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "This is a small library for _windows OS_ to work with _clipboard data storage_. winclip32 is based on _pywin32_ module.\nhttps://github.com/PyPcDeV/winclip32\n\n## _**Installation**_\n**Only Windows OS**  \n\n**_`pip install winclip32`_**\n\n\n## _**Code Examples**_\n\n#### _**Example 1**_\n`import winclip32`  \n`winclip32.set_clipboard_data(\"unicode_std_text\", \"Python is beautiful!!!\")`  \n`print(winclip32.get_clipboard_data(\"unicode_std_text\"))  # >>> Python is beautiful!!!`\n#### _**Example 2**_\n`import winclip32`  \n`winclip32.set_clipboard_data(\"unicode_std_text\", \"Python is beautiful!!!\")`  \n`print(winclip32.is_clipboard_data_type_available(\"bitmapinfo_std_structure\"))  # >>> False`  \n`print(winclip32.is_clipboard_data_type_available(13))  # >>> True`\n#### _**Example 3**_\n`import winclip32`   \n`winclip32.get_clipboard_data_types_info()  # >>> ...`\n\n## _**API**_\n\n\n_winclip32.get_clipboard_formats_info()_ >> print all informations about winclip32 clipboard formats\n\n_winclip32.get_clipboard_data(**_format_**)_ >> **_format_**: **_str_** / **_int_**; return data or error if something went wrong\n\n_winclip32.set_clipboard_data(**_format_**, **_data_**)_ >> **_format_**: _**str**_ / _**int**_; _**data**_: **_int_**/_**str**_/_**unicode**_/any _**object**_ that supports the **_buffer interface_**; return data or error if something went wrong\n\n_winclip32.is_clipboard_format_available(**_format_**)_ >> **_format_**: _**str**_ / _**int**_; return True if format is available, False if not, and error if something went wrong\n\n_winclip32.count_clipboard_formats()_ >> return the number of different formats currently on the clipboard.\n\n_winclip32.empty_clipboard()_ >> empty the clipboard\n\n_winclip32.Recorder(**_format_**=13, **_mark_**=None)_ >> **_format_**: _**str**_ / _**int**_; _**mark**_: _**str**_; create a recorder for clipboard changes\n\n_winclip32.Recorder().record(**_record_interval_**=0.1)_ >> **_record_interval_**: _**int**_; record the clipboard changes and add them to the recording list or dict\n\n_winclip32.Recorder().get_recording()_ >> return the recorded list or dict\n\n_winclip32.Recorder().clear_recorder()_ >> clear the recording list or dict. use this for new records\n\n_winclip32.Recorder().set_format(**_format_**)_ >> **_format_**: **_str_** / **_int_**; set the main record format\n\n_winclip32.Recorder().set_mark(**_mark_**)_ >> **_mark_**: **_str_**; set the main record mark  \n\n\n\n### __**Constants**__\n* winclip32.ANSI_STD_TEXT\n* winclip32.ANSI_MSL_TEXT\n* winclip32.ANCII_DIF_TEXT\n* winclip32.BIT8_DOS_TEXT\n* winclip32.UNICODE_STD_TEXT\n* winclip32.ANSI_DSP_TEXT\n* winclip32.HBITMAP_GDI_STD_OBJECT\n* winclip32.HBITMAP_GDI_DSP_OBJECT\n* winclip32.BITMAPINFO_STD_STRUCTURE\n* winclip32.METAFILEPICT_STD_STRUCTURE\n* winclip32.METAFILEPICT_DSP_STRUCTURE\n* winclip32.TIFF_STD_IMAGE\n* winclip32.HPALETTE_GDI_STD_OBJECT\n* winclip32.PENDATA_STD_DATA \n* winclip32.RIFF_STD_AUDIO\n* winclip32.WAVE_STD_AUDIO\n* winclip32.HENHMETAFILE_STD_HANDLE\n* winclip32.HENHMETAFILE_DSP_HANDLE \n* winclip32.DROPFILES_STD_LIST\n* winclip32.DWORD_STD_LCID\n* winclip32.BITMAPV5HEADER_STD_STRUCTURE\n* winclip32.NUMERIC_MARK\n* winclip32.STIME_MARK\n* winclip32.DTTIME_MARK\n\n\n## _**Update v0.6.0 --Recorder update--**_\nStable version of 0.6.0a\n\n## _**Update v0.6.0a --Recorder update--**_\n* Added Recorder() - record the clipboard changes and add them to the list or dict.\n    * _winclip32.Recorder(**_format_**=13, **_mark_**=None)_ >> **_format_**: _**str**_ / _**int**_; _**mark**_: _**str**_; create a recorder for clipboard changes \n\n    * _winclip32.Recorder().record(**_record_interval_**=0.1)_ >> **_record_interval_**: _**int**_; record the clipboard changes and add them to the recording list or dict  \n\n    * _winclip32.Recorder().get_recording()_ >> return the recorded list or dict\n\n    * _winclip32.Recorder().clear_recorder()_ >> clear the recording list or dict. use this for new records\n\n    * _winclip32.Recorder().set_format(**_format_**)_ >> **_format_**: **_str_** / **_int_**; set the main record format\n\n    * _winclip32.Recorder().set_mark(**_mark_**)_ >> **_mark_**: **_str_**; set the main record mark\n\n* Added mark-constants\n    * winclip32.NUMERIC_MARK\n    * winclip32.STIME_MARK\n    * winclip32.DTTIME_MARK\n\n* Added new errors\n    * winclip32.invalid_mark(m)\n    * winclip32.invalid_format_type(f)\n\n\n## _**Update v0.5.4**_\n- Renamed   \n    * winclip32.get_clipboad_data_types_info() to winclip32.get_clipboard_formats_info()\n    * winclip32.get_clipboard_data(type_key) to winclip32.get_clipboard_data(format) \n    * winclip32.set_clipboard_data(type_key, data) to winclip32.set_clipboard_data(format, data)\n    * winclip32.is_clipboard_data_type_available(type_key) to winclip32.is_clipboard_format_available(format)\n    * winclip32.count_clipboard_data_types() to winclip32.count_clipboard_formats()\n\n\n- Added format constants\n    * winclip32.ANSI_STD_TEXT\n    * winclip32.ANSI_MSL_TEXT\n    * winclip32.ANCII_DIF_TEXT\n    * winclip32.BIT8_DOS_TEXT\n    * winclip32.UNICODE_STD_TEXT\n    * winclip32.ANSI_DSP_TEXT\n    * winclip32.HBITMAP_GDI_STD_OBJECT\n    * winclip32.HBITMAP_GDI_DSP_OBJECT\n    * winclip32.BITMAPINFO_STD_STRUCTURE\n    * winclip32.METAFILEPICT_STD_STRUCTURE\n    * winclip32.METAFILEPICT_DSP_STRUCTURE\n    * winclip32.TIFF_STD_IMAGE\n    * winclip32.HPALETTE_GDI_STD_OBJECT\n    * winclip32.PENDATA_STD_DATA \n    * winclip32.RIFF_STD_AUDIO\n    * winclip32.WAVE_STD_AUDIO\n    * winclip32.HENHMETAFILE_STD_HANDLE\n    * winclip32.HENHMETAFILE_DSP_HANDLE \n    * winclip32.DROPFILES_STD_LIST\n    * winclip32.DWORD_STD_LCID\n    * winclip32.BITMAPV5HEADER_STD_STRUCTURE\n\n\n- Renamed errors. Current:\n    * winclip32.invalid_clipboard_format_given(f)\n    * winclip32.unknown_clipboard_format_given(f)\n    * winclip32.clipboard_format_is_not_available(f)\n    * winclip32.something_went_wrong\n    * winclip32.invalid_clipboard_format_or_data_given\n\n\n\n\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PyPcDeV/winclip32", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "winclip32", "package_url": "https://pypi.org/project/winclip32/", "platform": "", "project_url": "https://pypi.org/project/winclip32/", "project_urls": {"Homepage": "https://github.com/PyPcDeV/winclip32"}, "release_url": "https://pypi.org/project/winclip32/0.6.0/", "requires_dist": ["pywin32"], "requires_python": ">=3.6", "summary": "This is a small library for windows OS to work with clipboard data storage", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a small library for <em>windows OS</em> to work with <em>clipboard data storage</em>. winclip32 is based on <em>pywin32</em> module.\n<a href=\"https://github.com/PyPcDeV/winclip32\" rel=\"nofollow\">https://github.com/PyPcDeV/winclip32</a></p>\n<h2><em><strong>Installation</strong></em></h2>\n<p><strong>Only Windows OS</strong></p>\n<p><strong><em><code>pip install winclip32</code></em></strong></p>\n<h2><em><strong>Code Examples</strong></em></h2>\n<h4><em><strong>Example 1</strong></em></h4>\n<p><code>import winclip32</code><br>\n<code>winclip32.set_clipboard_data(\"unicode_std_text\", \"Python is beautiful!!!\")</code><br>\n<code>print(winclip32.get_clipboard_data(\"unicode_std_text\")) # &gt;&gt;&gt; Python is beautiful!!!</code></p>\n<h4><em><strong>Example 2</strong></em></h4>\n<p><code>import winclip32</code><br>\n<code>winclip32.set_clipboard_data(\"unicode_std_text\", \"Python is beautiful!!!\")</code><br>\n<code>print(winclip32.is_clipboard_data_type_available(\"bitmapinfo_std_structure\")) # &gt;&gt;&gt; False</code><br>\n<code>print(winclip32.is_clipboard_data_type_available(13)) # &gt;&gt;&gt; True</code></p>\n<h4><em><strong>Example 3</strong></em></h4>\n<p><code>import winclip32</code><br>\n<code>winclip32.get_clipboard_data_types_info() # &gt;&gt;&gt; ...</code></p>\n<h2><em><strong>API</strong></em></h2>\n<p><em>winclip32.get_clipboard_formats_info()</em> &gt;&gt; print all informations about winclip32 clipboard formats</p>\n<p><em>winclip32.get_clipboard_data(<strong><em>format</em></strong>)</em> &gt;&gt; <strong><em>format</em></strong>: <strong><em>str</em></strong> / <strong><em>int</em></strong>; return data or error if something went wrong</p>\n<p><em>winclip32.set_clipboard_data(<strong><em>format</em></strong>, <strong><em>data</em></strong>)</em> &gt;&gt; <strong><em>format</em></strong>: <em><strong>str</strong></em> / <em><strong>int</strong></em>; <em><strong>data</strong></em>: <strong><em>int</em></strong>/<em><strong>str</strong></em>/<em><strong>unicode</strong></em>/any <em><strong>object</strong></em> that supports the <strong><em>buffer interface</em></strong>; return data or error if something went wrong</p>\n<p><em>winclip32.is_clipboard_format_available(<strong><em>format</em></strong>)</em> &gt;&gt; <strong><em>format</em></strong>: <em><strong>str</strong></em> / <em><strong>int</strong></em>; return True if format is available, False if not, and error if something went wrong</p>\n<p><em>winclip32.count_clipboard_formats()</em> &gt;&gt; return the number of different formats currently on the clipboard.</p>\n<p><em>winclip32.empty_clipboard()</em> &gt;&gt; empty the clipboard</p>\n<p><em>winclip32.Recorder(<strong><em>format</em></strong>=13, <strong><em>mark</em></strong>=None)</em> &gt;&gt; <strong><em>format</em></strong>: <em><strong>str</strong></em> / <em><strong>int</strong></em>; <em><strong>mark</strong></em>: <em><strong>str</strong></em>; create a recorder for clipboard changes</p>\n<p><em>winclip32.Recorder().record(<strong><em>record_interval</em></strong>=0.1)</em> &gt;&gt; <strong><em>record_interval</em></strong>: <em><strong>int</strong></em>; record the clipboard changes and add them to the recording list or dict</p>\n<p><em>winclip32.Recorder().get_recording()</em> &gt;&gt; return the recorded list or dict</p>\n<p><em>winclip32.Recorder().clear_recorder()</em> &gt;&gt; clear the recording list or dict. use this for new records</p>\n<p><em>winclip32.Recorder().set_format(<strong><em>format</em></strong>)</em> &gt;&gt; <strong><em>format</em></strong>: <strong><em>str</em></strong> / <strong><em>int</em></strong>; set the main record format</p>\n<p><em>winclip32.Recorder().set_mark(<strong><em>mark</em></strong>)</em> &gt;&gt; <strong><em>mark</em></strong>: <strong><em>str</em></strong>; set the main record mark</p>\n<h3><strong><strong>Constants</strong></strong></h3>\n<ul>\n<li>winclip32.ANSI_STD_TEXT</li>\n<li>winclip32.ANSI_MSL_TEXT</li>\n<li>winclip32.ANCII_DIF_TEXT</li>\n<li>winclip32.BIT8_DOS_TEXT</li>\n<li>winclip32.UNICODE_STD_TEXT</li>\n<li>winclip32.ANSI_DSP_TEXT</li>\n<li>winclip32.HBITMAP_GDI_STD_OBJECT</li>\n<li>winclip32.HBITMAP_GDI_DSP_OBJECT</li>\n<li>winclip32.BITMAPINFO_STD_STRUCTURE</li>\n<li>winclip32.METAFILEPICT_STD_STRUCTURE</li>\n<li>winclip32.METAFILEPICT_DSP_STRUCTURE</li>\n<li>winclip32.TIFF_STD_IMAGE</li>\n<li>winclip32.HPALETTE_GDI_STD_OBJECT</li>\n<li>winclip32.PENDATA_STD_DATA</li>\n<li>winclip32.RIFF_STD_AUDIO</li>\n<li>winclip32.WAVE_STD_AUDIO</li>\n<li>winclip32.HENHMETAFILE_STD_HANDLE</li>\n<li>winclip32.HENHMETAFILE_DSP_HANDLE</li>\n<li>winclip32.DROPFILES_STD_LIST</li>\n<li>winclip32.DWORD_STD_LCID</li>\n<li>winclip32.BITMAPV5HEADER_STD_STRUCTURE</li>\n<li>winclip32.NUMERIC_MARK</li>\n<li>winclip32.STIME_MARK</li>\n<li>winclip32.DTTIME_MARK</li>\n</ul>\n<h2><em><strong>Update v0.6.0 --Recorder update--</strong></em></h2>\n<p>Stable version of 0.6.0a</p>\n<h2><em><strong>Update v0.6.0a --Recorder update--</strong></em></h2>\n<ul>\n<li>\n<p>Added Recorder() - record the clipboard changes and add them to the list or dict.</p>\n<ul>\n<li>\n<p><em>winclip32.Recorder(<strong><em>format</em></strong>=13, <strong><em>mark</em></strong>=None)</em> &gt;&gt; <strong><em>format</em></strong>: <em><strong>str</strong></em> / <em><strong>int</strong></em>; <em><strong>mark</strong></em>: <em><strong>str</strong></em>; create a recorder for clipboard changes</p>\n</li>\n<li>\n<p><em>winclip32.Recorder().record(<strong><em>record_interval</em></strong>=0.1)</em> &gt;&gt; <strong><em>record_interval</em></strong>: <em><strong>int</strong></em>; record the clipboard changes and add them to the recording list or dict</p>\n</li>\n<li>\n<p><em>winclip32.Recorder().get_recording()</em> &gt;&gt; return the recorded list or dict</p>\n</li>\n<li>\n<p><em>winclip32.Recorder().clear_recorder()</em> &gt;&gt; clear the recording list or dict. use this for new records</p>\n</li>\n<li>\n<p><em>winclip32.Recorder().set_format(<strong><em>format</em></strong>)</em> &gt;&gt; <strong><em>format</em></strong>: <strong><em>str</em></strong> / <strong><em>int</em></strong>; set the main record format</p>\n</li>\n<li>\n<p><em>winclip32.Recorder().set_mark(<strong><em>mark</em></strong>)</em> &gt;&gt; <strong><em>mark</em></strong>: <strong><em>str</em></strong>; set the main record mark</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Added mark-constants</p>\n<ul>\n<li>winclip32.NUMERIC_MARK</li>\n<li>winclip32.STIME_MARK</li>\n<li>winclip32.DTTIME_MARK</li>\n</ul>\n</li>\n<li>\n<p>Added new errors</p>\n<ul>\n<li>winclip32.invalid_mark(m)</li>\n<li>winclip32.invalid_format_type(f)</li>\n</ul>\n</li>\n</ul>\n<h2><em><strong>Update v0.5.4</strong></em></h2>\n<ul>\n<li>\n<p>Renamed</p>\n<ul>\n<li>winclip32.get_clipboad_data_types_info() to winclip32.get_clipboard_formats_info()</li>\n<li>winclip32.get_clipboard_data(type_key) to winclip32.get_clipboard_data(format)</li>\n<li>winclip32.set_clipboard_data(type_key, data) to winclip32.set_clipboard_data(format, data)</li>\n<li>winclip32.is_clipboard_data_type_available(type_key) to winclip32.is_clipboard_format_available(format)</li>\n<li>winclip32.count_clipboard_data_types() to winclip32.count_clipboard_formats()</li>\n</ul>\n</li>\n<li>\n<p>Added format constants</p>\n<ul>\n<li>winclip32.ANSI_STD_TEXT</li>\n<li>winclip32.ANSI_MSL_TEXT</li>\n<li>winclip32.ANCII_DIF_TEXT</li>\n<li>winclip32.BIT8_DOS_TEXT</li>\n<li>winclip32.UNICODE_STD_TEXT</li>\n<li>winclip32.ANSI_DSP_TEXT</li>\n<li>winclip32.HBITMAP_GDI_STD_OBJECT</li>\n<li>winclip32.HBITMAP_GDI_DSP_OBJECT</li>\n<li>winclip32.BITMAPINFO_STD_STRUCTURE</li>\n<li>winclip32.METAFILEPICT_STD_STRUCTURE</li>\n<li>winclip32.METAFILEPICT_DSP_STRUCTURE</li>\n<li>winclip32.TIFF_STD_IMAGE</li>\n<li>winclip32.HPALETTE_GDI_STD_OBJECT</li>\n<li>winclip32.PENDATA_STD_DATA</li>\n<li>winclip32.RIFF_STD_AUDIO</li>\n<li>winclip32.WAVE_STD_AUDIO</li>\n<li>winclip32.HENHMETAFILE_STD_HANDLE</li>\n<li>winclip32.HENHMETAFILE_DSP_HANDLE</li>\n<li>winclip32.DROPFILES_STD_LIST</li>\n<li>winclip32.DWORD_STD_LCID</li>\n<li>winclip32.BITMAPV5HEADER_STD_STRUCTURE</li>\n</ul>\n</li>\n<li>\n<p>Renamed errors. Current:</p>\n<ul>\n<li>winclip32.invalid_clipboard_format_given(f)</li>\n<li>winclip32.unknown_clipboard_format_given(f)</li>\n<li>winclip32.clipboard_format_is_not_available(f)</li>\n<li>winclip32.something_went_wrong</li>\n<li>winclip32.invalid_clipboard_format_or_data_given</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6785543, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1c95d7b377d09d9654b4891c31cedea2", "sha256": "1d113c734db809d9d32492e8350ea317a6b016fb3f8f5e9983e49db30862a751"}, "downloads": -1, "filename": "winclip32-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1c95d7b377d09d9654b4891c31cedea2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8331, "upload_time": "2020-03-01T19:17:04", "upload_time_iso_8601": "2020-03-01T19:17:04.406089Z", "url": "https://files.pythonhosted.org/packages/c4/b2/6506852b6bf39e9770cfd683fa0b7df5d75c1b9e5f2159e41bd2b0af5bea/winclip32-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6ac5208951ddb97d85024fe8bfb718b6", "sha256": "67763237296c4d47acdd43657f67022b8bef603efb63805493042ef553199568"}, "downloads": -1, "filename": "winclip32-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6ac5208951ddb97d85024fe8bfb718b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5275, "upload_time": "2020-03-01T19:18:24", "upload_time_iso_8601": "2020-03-01T19:18:24.312585Z", "url": "https://files.pythonhosted.org/packages/ea/c8/879c443c2624ba4f0b66a9e87093bfd1d16a14a2538171cc44e9c940aacd/winclip32-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e126899be581d256cf82ea2d91c4faf", "sha256": "ccd278f2df7581d38f3d1379182604ad4b5be620cdbdbc1f8442e55c4af06d0e"}, "downloads": -1, "filename": "winclip32-0.0.2.tar.gz", "has_sig": false, "md5_digest": "3e126899be581d256cf82ea2d91c4faf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3664, "upload_time": "2020-03-01T19:18:25", "upload_time_iso_8601": "2020-03-01T19:18:25.714904Z", "url": "https://files.pythonhosted.org/packages/2e/95/9bf62dd222e005f2faa216ca25857c2683d4ee772c742cc09d2637cec934/winclip32-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "5ceb67c54700fdbb31b20188c8575a24", "sha256": "21ecdc8948f84ec752251c0667c1f2780e9cd516de9a068d2b983cf6ad0f7006"}, "downloads": -1, "filename": "winclip32-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5ceb67c54700fdbb31b20188c8575a24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5303, "upload_time": "2020-03-01T19:23:39", "upload_time_iso_8601": "2020-03-01T19:23:39.770612Z", "url": "https://files.pythonhosted.org/packages/d3/5b/68d39973a3894aa35704af495e6d0beef2ff87857e4d95b7e2de759d126d/winclip32-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "732ae3690074eaa1f01a0bc4d17a7445", "sha256": "e99b635547d2ac44129a0dc0170b32d64d0140b5c838f14551d78c253751a561"}, "downloads": -1, "filename": "winclip32-0.0.3.tar.gz", "has_sig": false, "md5_digest": "732ae3690074eaa1f01a0bc4d17a7445", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3668, "upload_time": "2020-03-01T19:23:41", "upload_time_iso_8601": "2020-03-01T19:23:41.471756Z", "url": "https://files.pythonhosted.org/packages/84/ae/d5c2435f6d189ac1e8d681acdfcef2ed0baee3e54f1d67362eb90cf430c5/winclip32-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "f46c3391a08268e45340dd3771843e4b", "sha256": "e5c5f318cf084f55fd4d046130537373020dab844cd9e998976823f49b76c372"}, "downloads": -1, "filename": "winclip32-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "f46c3391a08268e45340dd3771843e4b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5305, "upload_time": "2020-03-01T19:26:50", "upload_time_iso_8601": "2020-03-01T19:26:50.168341Z", "url": "https://files.pythonhosted.org/packages/c3/8f/027c0947551a0b7d70027723698b3411a39e7f85a896898bac20376391da/winclip32-0.0.4-py3-none-any.whl", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "16828748bc37d6e669126b9770bcfce2", "sha256": "182f966eeaa6e2e3aded7374ef488a1c415ad0e2ecb180238182984c5b6752f5"}, "downloads": -1, "filename": "winclip32-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "16828748bc37d6e669126b9770bcfce2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5237, "upload_time": "2020-03-02T16:38:50", "upload_time_iso_8601": "2020-03-02T16:38:50.006176Z", "url": "https://files.pythonhosted.org/packages/c8/1e/09a8c44b027b4d26b7123420b1979cc9ba7ba5514e1e6a2d129b02676e49/winclip32-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24b6e011afa648282fe672c15c85198c", "sha256": "6ffa5e1325edd882f3d057995303ae81a74b277610526ae0243fdf2708276303"}, "downloads": -1, "filename": "winclip32-0.5.0.tar.gz", "has_sig": false, "md5_digest": "24b6e011afa648282fe672c15c85198c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3590, "upload_time": "2020-03-02T16:38:51", "upload_time_iso_8601": "2020-03-02T16:38:51.068317Z", "url": "https://files.pythonhosted.org/packages/d2/5f/a22f5fcd90d86b9969facb4f0c964a572125726cc76c2883e710ddef5af1/winclip32-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "1d2f8c59e0be55c362c469edb76386db", "sha256": "903e16b8491d7d932f8049e4435b72eb9fe3205d4a213826dabec2315b9c23b4"}, "downloads": -1, "filename": "winclip32-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1d2f8c59e0be55c362c469edb76386db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5235, "upload_time": "2020-03-02T16:42:38", "upload_time_iso_8601": "2020-03-02T16:42:38.423735Z", "url": "https://files.pythonhosted.org/packages/a9/f0/6fc1a4180a7b95420b4354304c5573fc5e40a7a9272968b911ae3788fb53/winclip32-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a220c9fb25da1983cdf5cc0b269da00e", "sha256": "81311bd16c386c3e88a8bd4942f261256552d05146bd8b3772a0f192b157612a"}, "downloads": -1, "filename": "winclip32-0.5.1.tar.gz", "has_sig": false, "md5_digest": "a220c9fb25da1983cdf5cc0b269da00e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3586, "upload_time": "2020-03-02T16:42:39", "upload_time_iso_8601": "2020-03-02T16:42:39.842789Z", "url": "https://files.pythonhosted.org/packages/9d/1a/5d600c61de07c70fdd50bf41f52316b8778152a51f6c1b09ea4b22b5a290/winclip32-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "1487d558c241542140845bf09aab5448", "sha256": "359081b166bc092d93a5b8417f4e059b0710cbe64914a32f8ced366bd0ac6b80"}, "downloads": -1, "filename": "winclip32-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1487d558c241542140845bf09aab5448", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5332, "upload_time": "2020-03-04T17:21:53", "upload_time_iso_8601": "2020-03-04T17:21:53.427814Z", "url": "https://files.pythonhosted.org/packages/c0/1e/d8bfa129eca0c959c4506dc1ea19dca938234815054d5c5ea47016d44b25/winclip32-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ceae894989f0bb36b541b59af257a69", "sha256": "6e638008a626afdb5d230a70153dabddf09fe697d15ee02232f908d1f8d5413d"}, "downloads": -1, "filename": "winclip32-0.5.2.tar.gz", "has_sig": false, "md5_digest": "2ceae894989f0bb36b541b59af257a69", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3799, "upload_time": "2020-03-04T17:21:54", "upload_time_iso_8601": "2020-03-04T17:21:54.814230Z", "url": "https://files.pythonhosted.org/packages/b5/da/77788c90ac6e21082c7fbb6c65ed52a024c10bf5ee073bdec93aab36147b/winclip32-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "6decbf9bad704c6ff29de970925bc923", "sha256": "81203c30cae9163d9839e8ab96b63e08d4d03b166c9bda8a86249109508be193"}, "downloads": -1, "filename": "winclip32-0.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6decbf9bad704c6ff29de970925bc923", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5321, "upload_time": "2020-03-04T17:28:11", "upload_time_iso_8601": "2020-03-04T17:28:11.641965Z", "url": "https://files.pythonhosted.org/packages/8d/b4/d999bebaea9198c0a96bcc48d199dc82e7f1bec119aeb12b86c1f0067ebe/winclip32-0.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "248e86484704c42c1c24156244a3b7a7", "sha256": "bd68dca4ef62a30635dd2027b2a7cdcdd5214e42e5a20a41da4de016b0db0214"}, "downloads": -1, "filename": "winclip32-0.5.3.tar.gz", "has_sig": false, "md5_digest": "248e86484704c42c1c24156244a3b7a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3786, "upload_time": "2020-03-04T17:28:12", "upload_time_iso_8601": "2020-03-04T17:28:12.680929Z", "url": "https://files.pythonhosted.org/packages/41/a4/39ccc39529d4ee32b856f1a1492149c290d2135260e9d778f3d30b85a372/winclip32-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "42bcc9ba958e1cd447eff078727eff12", "sha256": "1af89dc335ba5b3d45923cee6241c2ba27cfd2bef77b13a413afe42993013740"}, "downloads": -1, "filename": "winclip32-0.5.4-py3-none-any.whl", "has_sig": false, "md5_digest": "42bcc9ba958e1cd447eff078727eff12", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5795, "upload_time": "2020-03-07T15:52:59", "upload_time_iso_8601": "2020-03-07T15:52:59.456407Z", "url": "https://files.pythonhosted.org/packages/08/33/242f4a691c395726a6a2fe67aa6197bf848b1273bf8021854744f7adcc67/winclip32-0.5.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "958e22b91f337f22b1a9f0bd2df5c5b6", "sha256": "da8880eb082daa4e79c21fb8df0a5f7e2a90b010312d0089e1f8204c4109b50b"}, "downloads": -1, "filename": "winclip32-0.5.4.tar.gz", "has_sig": false, "md5_digest": "958e22b91f337f22b1a9f0bd2df5c5b6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4266, "upload_time": "2020-03-07T15:53:00", "upload_time_iso_8601": "2020-03-07T15:53:00.677749Z", "url": "https://files.pythonhosted.org/packages/71/b0/4aedae93839f4864ad18e77106f794864388c012ff10769c271c89ee6bdd/winclip32-0.5.4.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "015b1fcb09215367d2e68042ea693ed8", "sha256": "ae6ab3df67fef71b772a7566e4feb5bc4a3ec0610ad6a72c0cc2d438cb2dbe1b"}, "downloads": -1, "filename": "winclip32-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "015b1fcb09215367d2e68042ea693ed8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6890, "upload_time": "2020-03-10T14:52:45", "upload_time_iso_8601": "2020-03-10T14:52:45.456910Z", "url": "https://files.pythonhosted.org/packages/eb/b9/efb5df2d4500fc740900090458b35e15e2c38a80c9a4e80ae74b2f2ceba8/winclip32-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44039cdf8b581baa59b7bee965495023", "sha256": "18f7f5ad1df2db0cf72c583eb6cfd6f8f6aa33c6c77fc4d1de3bdfbc78611ddd"}, "downloads": -1, "filename": "winclip32-0.6.0.tar.gz", "has_sig": false, "md5_digest": "44039cdf8b581baa59b7bee965495023", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6048, "upload_time": "2020-03-10T14:52:46", "upload_time_iso_8601": "2020-03-10T14:52:46.891160Z", "url": "https://files.pythonhosted.org/packages/02/e2/6bbc25fdde7a4a848694e63eb0b152103ea2787297b74500c4d35692e940/winclip32-0.6.0.tar.gz", "yanked": false}], "0.6.0a0": [{"comment_text": "", "digests": {"md5": "08bced87ad3124c93ed4e3fab450a1c2", "sha256": "9c2d89c80ed81873330e141bbbd4aa5bed8f10c86a31dd4f124bfc1d9ab982c4"}, "downloads": -1, "filename": "winclip32-0.6.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "08bced87ad3124c93ed4e3fab450a1c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6894, "upload_time": "2020-03-09T16:11:07", "upload_time_iso_8601": "2020-03-09T16:11:07.390786Z", "url": "https://files.pythonhosted.org/packages/6e/87/d9cab91fd4778701d0e9fc642a0b484cee3b7e49d85c59fda7415dbcf47e/winclip32-0.6.0a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11212eb79ebf18c0db85d3f0abe61b9c", "sha256": "2c5726875d4852a2ea7b546db55eecb4402ce8f1b15a5cff7debbc21e9040575"}, "downloads": -1, "filename": "winclip32-0.6.0a0.tar.gz", "has_sig": false, "md5_digest": "11212eb79ebf18c0db85d3f0abe61b9c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6013, "upload_time": "2020-03-09T16:11:08", "upload_time_iso_8601": "2020-03-09T16:11:08.561416Z", "url": "https://files.pythonhosted.org/packages/dd/93/0dfa8ed216102c41f34b02301734164025e0ff7ff79a8453af3fed70b9c9/winclip32-0.6.0a0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "015b1fcb09215367d2e68042ea693ed8", "sha256": "ae6ab3df67fef71b772a7566e4feb5bc4a3ec0610ad6a72c0cc2d438cb2dbe1b"}, "downloads": -1, "filename": "winclip32-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "015b1fcb09215367d2e68042ea693ed8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6890, "upload_time": "2020-03-10T14:52:45", "upload_time_iso_8601": "2020-03-10T14:52:45.456910Z", "url": "https://files.pythonhosted.org/packages/eb/b9/efb5df2d4500fc740900090458b35e15e2c38a80c9a4e80ae74b2f2ceba8/winclip32-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44039cdf8b581baa59b7bee965495023", "sha256": "18f7f5ad1df2db0cf72c583eb6cfd6f8f6aa33c6c77fc4d1de3bdfbc78611ddd"}, "downloads": -1, "filename": "winclip32-0.6.0.tar.gz", "has_sig": false, "md5_digest": "44039cdf8b581baa59b7bee965495023", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6048, "upload_time": "2020-03-10T14:52:46", "upload_time_iso_8601": "2020-03-10T14:52:46.891160Z", "url": "https://files.pythonhosted.org/packages/02/e2/6bbc25fdde7a4a848694e63eb0b152103ea2787297b74500c4d35692e940/winclip32-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:29:00 2020"}