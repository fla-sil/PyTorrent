{"info": {"author": "F\u00e1bio Mac\u00eado Mendes", "author_email": "fabiomacedomendes@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries"], "description": ".. image:: https://readthedocs.org/projects/bricks/badge/?version=latest\n    :target: http://bricks.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n.. image:: https://travis-ci.org/fabiommendes/django-bricks.svg?branch=master\n    :target: https://travis-ci.org/fabiommendes/django-bricks\n    :alt: Build status\n.. image:: https://codeclimate.com/github/fabiommendes/django-bricks/badges/gpa.svg\n    :target: https://codeclimate.com/github/fabiommendes/django-bricks\n    :alt: Code Climate\n.. image:: https://codecov.io/gh/fabiommendes/django-bricks/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/fabiommendes/django-bricks\n    :alt: Code coverage\n.. image:: https://www.quantifiedcode.com/api/v1/project/ee91ade50a344c87ac99638670c76580/badge.svg\n    :target: https://www.quantifiedcode.com/app/project/ee91ade50a344c87ac99638670c76580\n    :alt: Code issues\n\n\nDjango web components\n---------------------\n\nDjango-brick is a library that implements server-side web components for\nyour Django application. The goal is to reuse code by building simple pluggable\npieces. Think of Lego bricks for the web.\n\n.. image:: media/legos.jpg\n:alt: https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/Lego_Color_Bricks.jpg/1024px-Lego_Color_Bricks.jpg\n\nClient-side programming has plenty responses for this task: React, Polymer,\nVue.js, X-tag etc. Django Bricks provides a server-side alternative that\ncan free you from writing some JavaScript and HTML ;).\n\n\nEnter the brick\n---------------\n\nA brick is a Python component with a a well defined interface to present itself\nfor the client. Usually this means that it can render itself as HTML5 (but\nsometimes we may need more complicated behaviors). Pehaps the most\nsimple brick that you can use is just a HTML5 tag. Django-bricks implement these\nbuilding blocks in the :mod:`bricks.html5` module. The most important action a\n:class:`bricks.Tag` brick can make is to render itself as HTML:\n\n>>> from bricks.html5 import p\n>>> elem = p(\"Hello World!\", class_='hello')\n\nThis can be converted to HTML by calling ``str()`` on the element:\n\n>>> print(str(elem))\n<p class=\"hello\">Hello World!</p>\n\nPython and HTML have very different semantics. HTML's syntax gravitates\naround tag attributes + children nodes and does not have a very natural\ncounterpart in most programming languages. Of course we can build a tag in a\nimperative style, but the end result often feels awkward. We introduce a\nmini-language to declare HTML fragments in a more natural way:\n\n>>> from bricks.html5 import div, p, h1\n>>> fragment = \\\n...     div(class_=\"alert-box\")[\n...         h1('Hello Python'),\n...         p('Now you can write HTML in Python!'),\n...     ]\n\nBy default, bricks convert it to a very compact HTML; we insert no indentation\nand only a minimum whitespace. We can pretty print the fragment using the\n``.pretty`` method:\n\n>>> print(fragment.pretty())\n<div class=\"alert-box\">\n  <h1>Hello Python</h1>\n  <p>Now you can write HTML in Python!</p>\n</div>\n\nThis is useful for debugging but, it is recommend to never output prettified\nHTML in production. This just stresses the rendering engine and produces larger\nfiles for no real gain for our end users and developers.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fabiommendes/django-bricks/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "django-bricks", "package_url": "https://pypi.org/project/django-bricks/", "platform": "any", "project_url": "https://pypi.org/project/django-bricks/", "project_urls": {"Homepage": "https://github.com/fabiommendes/django-bricks/"}, "release_url": "https://pypi.org/project/django-bricks/0.2.3/", "requires_dist": null, "requires_python": "", "summary": "A short description for your project.", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            .. image:: https://readthedocs.org/projects/bricks/badge/?version=latest<br>    :target: http://bricks.readthedocs.io/en/latest/?badge=latest<br>    :alt: Documentation Status<br>.. image:: https://travis-ci.org/fabiommendes/django-bricks.svg?branch=master<br>    :target: https://travis-ci.org/fabiommendes/django-bricks<br>    :alt: Build status<br>.. image:: https://codeclimate.com/github/fabiommendes/django-bricks/badges/gpa.svg<br>    :target: https://codeclimate.com/github/fabiommendes/django-bricks<br>    :alt: Code Climate<br>.. image:: https://codecov.io/gh/fabiommendes/django-bricks/branch/master/graph/badge.svg<br>    :target: https://codecov.io/gh/fabiommendes/django-bricks<br>    :alt: Code coverage<br>.. image:: https://www.quantifiedcode.com/api/v1/project/ee91ade50a344c87ac99638670c76580/badge.svg<br>    :target: https://www.quantifiedcode.com/app/project/ee91ade50a344c87ac99638670c76580<br>    :alt: Code issues<br><br><br>Django web components<br>---------------------<br><br>Django-brick is a library that implements server-side web components for<br>your Django application. The goal is to reuse code by building simple pluggable<br>pieces. Think of Lego bricks for the web.<br><br>.. image:: media/legos.jpg<br>:alt: https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/Lego_Color_Bricks.jpg/1024px-Lego_Color_Bricks.jpg<br><br>Client-side programming has plenty responses for this task: React, Polymer,<br>Vue.js, X-tag etc. Django Bricks provides a server-side alternative that<br>can free you from writing some JavaScript and HTML ;).<br><br><br>Enter the brick<br>---------------<br><br>A brick is a Python component with a a well defined interface to present itself<br>for the client. Usually this means that it can render itself as HTML5 (but<br>sometimes we may need more complicated behaviors). Pehaps the most<br>simple brick that you can use is just a HTML5 tag. Django-bricks implement these<br>building blocks in the :mod:`bricks.html5` module. The most important action a<br>:class:`bricks.Tag` brick can make is to render itself as HTML:<br><br>&gt;&gt;&gt; from bricks.html5 import p<br>&gt;&gt;&gt; elem = p(\"Hello World!\", class_='hello')<br><br>This can be converted to HTML by calling ``str()`` on the element:<br><br>&gt;&gt;&gt; print(str(elem))<br>&lt;p class=\"hello\"&gt;Hello World!&lt;/p&gt;<br><br>Python and HTML have very different semantics. HTML's syntax gravitates<br>around tag attributes + children nodes and does not have a very natural<br>counterpart in most programming languages. Of course we can build a tag in a<br>imperative style, but the end result often feels awkward. We introduce a<br>mini-language to declare HTML fragments in a more natural way:<br><br>&gt;&gt;&gt; from bricks.html5 import div, p, h1<br>&gt;&gt;&gt; fragment = \\<br>...     div(class_=\"alert-box\")[<br>...         h1('Hello Python'),<br>...         p('Now you can write HTML in Python!'),<br>...     ]<br><br>By default, bricks convert it to a very compact HTML; we insert no indentation<br>and only a minimum whitespace. We can pretty print the fragment using the<br>``.pretty`` method:<br><br>&gt;&gt;&gt; print(fragment.pretty())<br>&lt;div class=\"alert-box\"&gt;<br>  &lt;h1&gt;Hello Python&lt;/h1&gt;<br>  &lt;p&gt;Now you can write HTML in Python!&lt;/p&gt;<br>&lt;/div&gt;<br><br>This is useful for debugging but, it is recommend to never output prettified<br>HTML in production. This just stresses the rendering engine and produces larger<br>files for no real gain for our end users and developers.<br>\n          </div>"}, "last_serial": 2848107, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "38e28158237d6fa18274545407fc417c", "sha256": "245011607e20361f8adc77463d9dcf9a595b81c0774c8b83a3215981908bf37d"}, "downloads": -1, "filename": "django-bricks-0.1.0.tar.gz", "has_sig": false, "md5_digest": "38e28158237d6fa18274545407fc417c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41557, "upload_time": "2017-04-03T17:41:29", "upload_time_iso_8601": "2017-04-03T17:41:29.196951Z", "url": "https://files.pythonhosted.org/packages/94/ba/f3e3abbe4733aed3debb314e33a5ebf3a30b1c9f7e00ae2dbc7710f93e61/django-bricks-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "01db58d52eb42b021bd2c49c2d734be5", "sha256": "b7b4ade479f34f8285fb040e4208c421761dca46bb2ad849799f9aded8171e27"}, "downloads": -1, "filename": "django-bricks-0.1.1.tar.gz", "has_sig": false, "md5_digest": "01db58d52eb42b021bd2c49c2d734be5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44064, "upload_time": "2017-04-11T12:44:16", "upload_time_iso_8601": "2017-04-11T12:44:16.512924Z", "url": "https://files.pythonhosted.org/packages/c3/74/f8337c5eb0655a9f0fe728a49e6e09fc2594c9605c534f1f0096cc14ee36/django-bricks-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "4474233f1c490506cc58f81cdfea4e1e", "sha256": "2445ac9a44a9110a5effcac6e10aed0eceb0af0c857a80bc19f5f224babd3b3c"}, "downloads": -1, "filename": "django-bricks-0.1.2.tar.gz", "has_sig": false, "md5_digest": "4474233f1c490506cc58f81cdfea4e1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45580, "upload_time": "2017-04-26T02:34:32", "upload_time_iso_8601": "2017-04-26T02:34:32.766133Z", "url": "https://files.pythonhosted.org/packages/3b/3a/b6615fd23d90b42360fbc7ee80a78565afa0b0a0133dffd14606c0e2939b/django-bricks-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "5eeb60a42550539ac6d86efd6bd7e4fb", "sha256": "7bccd3a6923fe9f9673eac4fa3cf532abcff3413d6d1b053d6d62d7eace61dce"}, "downloads": -1, "filename": "django-bricks-0.1.3.tar.gz", "has_sig": false, "md5_digest": "5eeb60a42550539ac6d86efd6bd7e4fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54734, "upload_time": "2017-04-28T06:29:19", "upload_time_iso_8601": "2017-04-28T06:29:19.221309Z", "url": "https://files.pythonhosted.org/packages/d1/c3/8903683cf841a2a295a5e780ed3b1045741108dc03cff9b8e1047c984195/django-bricks-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d37884640bb5a95905842b213dac0ac8", "sha256": "42b6d443d49474d6566f08654bd2d25ca8639dccb77ac70c2752bce4390e3f70"}, "downloads": -1, "filename": "django-bricks-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d37884640bb5a95905842b213dac0ac8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54701, "upload_time": "2017-04-28T06:30:21", "upload_time_iso_8601": "2017-04-28T06:30:21.369023Z", "url": "https://files.pythonhosted.org/packages/6a/e2/85daaeaea3f305842d9fa6819fb3b1af5b86e8eed89b4d2b22cc0846d0f7/django-bricks-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "24f5c1b7879d6af2674ff986976490c5", "sha256": "695d6ba4b696a5b576a6f9360f4865c21a879c39a1676192267d8347123ab7af"}, "downloads": -1, "filename": "django-bricks-0.2.1.tar.gz", "has_sig": false, "md5_digest": "24f5c1b7879d6af2674ff986976490c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53518, "upload_time": "2017-04-29T18:43:06", "upload_time_iso_8601": "2017-04-29T18:43:06.791811Z", "url": "https://files.pythonhosted.org/packages/bc/90/dab502f1cbc9f14e61fd14f6779cf50eb983f4ef7d9358d74d149cd1d829/django-bricks-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "4c970396468f4f6249ec1be4ed143f6a", "sha256": "44501c6c3ac9f69357afac38d52e8f6d1bbe07dbbe98164a56cba7faea3adf77"}, "downloads": -1, "filename": "django-bricks-0.2.2.tar.gz", "has_sig": false, "md5_digest": "4c970396468f4f6249ec1be4ed143f6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54862, "upload_time": "2017-05-02T23:11:26", "upload_time_iso_8601": "2017-05-02T23:11:26.268926Z", "url": "https://files.pythonhosted.org/packages/7a/ff/b609953af1d5423e7974f06b375eeb6ec115ba7fd3b71ec994c627fc52da/django-bricks-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "d9cde8f1b2df4a0e0ad2371e4c7b3e94", "sha256": "505d0c329b5a75c20af523c772773e85ea304d555fac53f76feea1f383f3e239"}, "downloads": -1, "filename": "django-bricks-0.2.3.tar.gz", "has_sig": false, "md5_digest": "d9cde8f1b2df4a0e0ad2371e4c7b3e94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61639, "upload_time": "2017-05-03T03:24:51", "upload_time_iso_8601": "2017-05-03T03:24:51.118426Z", "url": "https://files.pythonhosted.org/packages/2b/70/a740b43ffa8d74ce7976d9ed3cf78a142708e5809d5c7f384478b4c97394/django-bricks-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d9cde8f1b2df4a0e0ad2371e4c7b3e94", "sha256": "505d0c329b5a75c20af523c772773e85ea304d555fac53f76feea1f383f3e239"}, "downloads": -1, "filename": "django-bricks-0.2.3.tar.gz", "has_sig": false, "md5_digest": "d9cde8f1b2df4a0e0ad2371e4c7b3e94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61639, "upload_time": "2017-05-03T03:24:51", "upload_time_iso_8601": "2017-05-03T03:24:51.118426Z", "url": "https://files.pythonhosted.org/packages/2b/70/a740b43ffa8d74ce7976d9ed3cf78a142708e5809d5c7f384478b4c97394/django-bricks-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:20 2020"}