{"info": {"author": "Fabian Schuh", "author_email": "<Fabian@BitShares.eu>", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# AirSign for BitShares\n\nA command line tool to interface with the BitShares network.\n\n## Installation\n\n### Install with `pip`:\n\n```\npip3 install airsign\n```\n\n### Manual installation:\n\n```\ngit clone https://github.com/xeroc/airsign\ncd airsign\npython3 setup.py install --user\n```\n\n### Upgrade\n\n```\n$ pip install --user --upgrade airsign\n```\n\n## Usage\n\nYou can get a full length help by running:\n\n\n    usage: airsign [-h] [--node NODE] [--rpcuser RPCUSER] [--rpcpassword RPCPASSWORD] [--nobroadcast] {set,addkey,listkeys,listaccounts,getbalance,transfer,approve} ...\n\n    Command line tool to interact with the BitShares network\n\n    positional arguments:\n      {set,addkey,listkeys,listaccounts,getbalance,transfer,approve}\n                            sub-command help\n        set                 Set configuration\n        addkey              Add a new key to the wallet\n        listkeys            List available keys in your wallet\n        listaccounts        List available accounts in your wallet\n        getbalance          Get balances of available account(s)\n        transfer            Transfer funds from your wallet to someone else\n        approve             approve funds from your wallet to someone else\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --node NODE           Websocket URL for public BitShares API (default: \"wss://bitshares.openledger.info/ws\")\n      --rpcuser RPCUSER     Websocket user if authentication is required\n      --rpcpassword RPCPASSWORD\n                            Websocket password if authentication is required\n      --nobroadcast         Do not broadcast anything\n\n### Adding keys\n\nairsign comes with its own encrypted wallet to which keys need to be added:\n\n    airsign addkey <posting-wif-key>\n\nOn first run, you will be asked to provide a new passphrase that you\nwill need to provide every time you want to post on the BitShares network.\nIf you chose an *empty* password, your keys will be stored in plain text\nwhich allows automated posting but exposes your private key to your\nlocal user.\n\n### List available Keys and accounts\n\n    airsign listkeys\n\nThis command will give the list of public keys to which the private keys\nare available.\n\n    airsign listaccounts\n\nThis command tries to resolve the public keys into account names registered\non the network (experimental).\n\n### Get Balances\n\nThe command `getbalance` only takes optional arguments if you want to\nsee the balance of a specific account, else it will show all balances\nfor which a key has been added to the wallet (see above)\n\n    $ airsign getbalance\n    Please unlock your existing wallet!\n    Passphrase: \n    wallet.xeroc:\n    +-------------+----------+\n    | Amount      | Asset    |\n    +-------------+----------+\n    | 61557.53766 | BTS      |\n    | 1e-07       | OPEN.BTC |\n    | 107.5035    | MKR      |\n    +-------------+----------+\n    live-coding:\n    +------------+-------+\n    | Amount     | Asset |\n    +------------+-------+\n    | 9993.84531 | BTS   |\n    +------------+-------+\n\n### Transfer\n\nTransfers can be initiated from any account for which the *active key*\nis installed. The `--amount` parameter can be applied several times to\nsend different assets from the same origin to the same recepient. The\ncommand supports encrypted memos. If your account has a distinct memo\nkey (usually identical to the active key), then you need to add that key\nto your wallet aswell.\n\n    airsign transfer --from <fromaccount> --to <recepient> --amount \"1 USD\" --amount \"2 BTS\" --memo <Text>\n\nThe global `--nobroadcast` flag can be added before `transfer` to\nprevent airsign to broadcast the transaction to the BitShares network:\n\n    airsign --nobroadcast transfer --from <fromaccount> --to <recepient> --amount \"1 USD\" --amount \"2 BTS\" --memo <Text>\n\n### Approval of Proposals\n\nAny proposal can be approved using airsign:\n\n    airsign approve <proposal-id>\n\nThe default account will be used, unless stated otherwise with\nan `--account` parameter. The proposal-id must habe the form `1.10.x`.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/xeroc/airsign/tarball/0.0.2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.github.com/xeroc/airsign", "keywords": "bitshares,library,api,rpc,cli", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "airsign", "package_url": "https://pypi.org/project/airsign/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/airsign/", "project_urls": {"Download": "https://github.com/xeroc/airsign/tarball/0.0.2", "Homepage": "http://www.github.com/xeroc/airsign"}, "release_url": "https://pypi.org/project/airsign/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Command line tool to interface with the BitShares network", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # AirSign for BitShares<br><br>A command line tool to interface with the BitShares network.<br><br>## Installation<br><br>### Install with `pip`:<br><br>```<br>pip3 install airsign<br>```<br><br>### Manual installation:<br><br>```<br>git clone https://github.com/xeroc/airsign<br>cd airsign<br>python3 setup.py install --user<br>```<br><br>### Upgrade<br><br>```<br>$ pip install --user --upgrade airsign<br>```<br><br>## Usage<br><br>You can get a full length help by running:<br><br><br>    usage: airsign [-h] [--node NODE] [--rpcuser RPCUSER] [--rpcpassword RPCPASSWORD] [--nobroadcast] {set,addkey,listkeys,listaccounts,getbalance,transfer,approve} ...<br><br>    Command line tool to interact with the BitShares network<br><br>    positional arguments:<br>      {set,addkey,listkeys,listaccounts,getbalance,transfer,approve}<br>                            sub-command help<br>        set                 Set configuration<br>        addkey              Add a new key to the wallet<br>        listkeys            List available keys in your wallet<br>        listaccounts        List available accounts in your wallet<br>        getbalance          Get balances of available account(s)<br>        transfer            Transfer funds from your wallet to someone else<br>        approve             approve funds from your wallet to someone else<br><br>    optional arguments:<br>      -h, --help            show this help message and exit<br>      --node NODE           Websocket URL for public BitShares API (default: \"wss://bitshares.openledger.info/ws\")<br>      --rpcuser RPCUSER     Websocket user if authentication is required<br>      --rpcpassword RPCPASSWORD<br>                            Websocket password if authentication is required<br>      --nobroadcast         Do not broadcast anything<br><br>### Adding keys<br><br>airsign comes with its own encrypted wallet to which keys need to be added:<br><br>    airsign addkey &lt;posting-wif-key&gt;<br><br>On first run, you will be asked to provide a new passphrase that you<br>will need to provide every time you want to post on the BitShares network.<br>If you chose an *empty* password, your keys will be stored in plain text<br>which allows automated posting but exposes your private key to your<br>local user.<br><br>### List available Keys and accounts<br><br>    airsign listkeys<br><br>This command will give the list of public keys to which the private keys<br>are available.<br><br>    airsign listaccounts<br><br>This command tries to resolve the public keys into account names registered<br>on the network (experimental).<br><br>### Get Balances<br><br>The command `getbalance` only takes optional arguments if you want to<br>see the balance of a specific account, else it will show all balances<br>for which a key has been added to the wallet (see above)<br><br>    $ airsign getbalance<br>    Please unlock your existing wallet!<br>    Passphrase: <br>    wallet.xeroc:<br>    +-------------+----------+<br>    | Amount      | Asset    |<br>    +-------------+----------+<br>    | 61557.53766 | BTS      |<br>    | 1e-07       | OPEN.BTC |<br>    | 107.5035    | MKR      |<br>    +-------------+----------+<br>    live-coding:<br>    +------------+-------+<br>    | Amount     | Asset |<br>    +------------+-------+<br>    | 9993.84531 | BTS   |<br>    +------------+-------+<br><br>### Transfer<br><br>Transfers can be initiated from any account for which the *active key*<br>is installed. The `--amount` parameter can be applied several times to<br>send different assets from the same origin to the same recepient. The<br>command supports encrypted memos. If your account has a distinct memo<br>key (usually identical to the active key), then you need to add that key<br>to your wallet aswell.<br><br>    airsign transfer --from &lt;fromaccount&gt; --to &lt;recepient&gt; --amount \"1 USD\" --amount \"2 BTS\" --memo &lt;Text&gt;<br><br>The global `--nobroadcast` flag can be added before `transfer` to<br>prevent airsign to broadcast the transaction to the BitShares network:<br><br>    airsign --nobroadcast transfer --from &lt;fromaccount&gt; --to &lt;recepient&gt; --amount \"1 USD\" --amount \"2 BTS\" --memo &lt;Text&gt;<br><br>### Approval of Proposals<br><br>Any proposal can be approved using airsign:<br><br>    airsign approve &lt;proposal-id&gt;<br><br>The default account will be used, unless stated otherwise with<br>an `--account` parameter. The proposal-id must habe the form `1.10.x`.\n          </div>"}, "last_serial": 2110073, "releases": {"0.0.1": [{"comment_text": "built for Linux-4.4.5-1-ARCH-x86_64-with-glibc2.3.4", "digests": {"md5": "ca213f45cab27a58c778812636d993e0", "sha256": "06ab83ddbdafe8a65515be4bd113d972ea9e5da4a62e68f2053b4cbd89e5179f"}, "downloads": -1, "filename": "airsign-0.0.1.linux-x86_64.zip", "has_sig": false, "md5_digest": "ca213f45cab27a58c778812636d993e0", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 15413, "upload_time": "2016-04-26T12:41:18", "upload_time_iso_8601": "2016-04-26T12:41:18.701973Z", "url": "https://files.pythonhosted.org/packages/1c/e7/1cdd39ff93ab8adac6890e098bd4d8e5776b48af2cf4996231db086b44a2/airsign-0.0.1.linux-x86_64.zip", "yanked": false}, {"comment_text": "", "digests": {"md5": "705f280a54ffcf69d98a0acc2e8d1f63", "sha256": "94ac94c29343fda837ff72e1682a94d5d9582026a6ba8a0a31b6705d237b99ef"}, "downloads": -1, "filename": "airsign-0.0.1.tar.gz", "has_sig": false, "md5_digest": "705f280a54ffcf69d98a0acc2e8d1f63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6298, "upload_time": "2016-04-26T12:41:01", "upload_time_iso_8601": "2016-04-26T12:41:01.127912Z", "url": "https://files.pythonhosted.org/packages/2b/e9/3e0bdb630b0df8ac0a8ba32a3779c8a2d61ae12bda3284326b884c99a509/airsign-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "built for Linux-4.5.1-1-ARCH-x86_64-with-glibc2.3.4", "digests": {"md5": "b0416dd6057c8fec5c70ed75d4359a00", "sha256": "ba4a24021fd19e3ec869ffc3e81d59be0cb286e0bbebc5c94db12bf37c49a4b2"}, "downloads": -1, "filename": "airsign-0.0.2.linux-x86_64.zip", "has_sig": false, "md5_digest": "b0416dd6057c8fec5c70ed75d4359a00", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 19191, "upload_time": "2016-05-11T09:13:58", "upload_time_iso_8601": "2016-05-11T09:13:58.502026Z", "url": "https://files.pythonhosted.org/packages/7f/12/ada47e6ee07a790980b973ffb9e0935882b7c6d7a6f55650c813ce7ddd3c/airsign-0.0.2.linux-x86_64.zip", "yanked": false}, {"comment_text": "", "digests": {"md5": "c878a825bf3fa0871ce862ec29c8b8b9", "sha256": "a9226376b02016c8bf3884bccc923c80e9dd8a450552a77ff36c29b79dd48f66"}, "downloads": -1, "filename": "airsign-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c878a825bf3fa0871ce862ec29c8b8b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7783, "upload_time": "2016-05-11T09:13:40", "upload_time_iso_8601": "2016-05-11T09:13:40.874407Z", "url": "https://files.pythonhosted.org/packages/2a/5a/e863808e770efed75aaf86e535e831a881f04354644dc60ce544e50bb54b/airsign-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "built for Linux-4.5.1-1-ARCH-x86_64-with-glibc2.3.4", "digests": {"md5": "b0416dd6057c8fec5c70ed75d4359a00", "sha256": "ba4a24021fd19e3ec869ffc3e81d59be0cb286e0bbebc5c94db12bf37c49a4b2"}, "downloads": -1, "filename": "airsign-0.0.2.linux-x86_64.zip", "has_sig": false, "md5_digest": "b0416dd6057c8fec5c70ed75d4359a00", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 19191, "upload_time": "2016-05-11T09:13:58", "upload_time_iso_8601": "2016-05-11T09:13:58.502026Z", "url": "https://files.pythonhosted.org/packages/7f/12/ada47e6ee07a790980b973ffb9e0935882b7c6d7a6f55650c813ce7ddd3c/airsign-0.0.2.linux-x86_64.zip", "yanked": false}, {"comment_text": "", "digests": {"md5": "c878a825bf3fa0871ce862ec29c8b8b9", "sha256": "a9226376b02016c8bf3884bccc923c80e9dd8a450552a77ff36c29b79dd48f66"}, "downloads": -1, "filename": "airsign-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c878a825bf3fa0871ce862ec29c8b8b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7783, "upload_time": "2016-05-11T09:13:40", "upload_time_iso_8601": "2016-05-11T09:13:40.874407Z", "url": "https://files.pythonhosted.org/packages/2a/5a/e863808e770efed75aaf86e535e831a881f04354644dc60ce544e50bb54b/airsign-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:26 2020"}