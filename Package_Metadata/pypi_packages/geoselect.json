{"info": {"author": "Freek Kalter", "author_email": "freek@kalteronline.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 2.7", "Topic :: Multimedia", "Topic :: Utilities"], "description": "geoselect\n=========\n\nA script to select photos from a set, based on geographical location.\nEither via a decimal latitude/longitude point. Or a photo taken in the\ndesired location, it will look for exif standerized gps lat- and\nlongitude tags.\n\nInstalling\n----------\n\nPip\n~~~\n\nThe easiest way is to use pip to download and install the script.\n\n::\n\n    pip install geoselect\n\nGet (latest) source\n~~~~~~~~~~~~~~~~~~~\n\n::\n\n    # clone this repo\n    clone https://github.com/FreekKalter/geoselect.git\n    cd geoselect\n\n    # initialize virtual environment (optional, but recommended)\n    virtualenv venv\n    source venv/bin/activate\n\n    # install (--editable to hack on code whithout running pip install again)\n    pip install --editable .\n\nUsing\n-----\n\nThere are 2 ways to specify the location to select on. LOCATION can be a\n\"latitude,longitude\" specified in decimal degrees like: \"41.40338,\n2.17403\". Or it can be a path to a photo with exif gps coordinates, it\nwill then search for photos taken at the same location. It will search\nwithin a specified radius (default: 1 km).\n\nIf ``--path`` is set, geoselect will look at that location for images\nwith common file extensions (jpg, jpeg, gif, bmp, png). This can be set\nto something else with the ``--extensions`` parameter. If ``--path`` is\nnot set, paths to pictures are taken from stdinput. This way it can be\nused as a stream filter, like most unix/linux commandline utils. For\nexample take the following pipeline:\n``find /home/fkalter/photos -name '*holiday*' | geoselect --radius 10 \"40.783068, -73.965350\" | wc -l``\nTo count the number of pictures taken in/around central park wich have\n'holiday' in the filename.\n\nA (expiremental) feature uses the time a picture is taken to *gues* at\nwich location it is made. Sometimes the device used to make the picture\ntakes a while to get a 'gps fix'. So it might not register the gps\ncoordinates for the first picture in a series. The ``-- time-based``\noption looks for any pictures taken in a short time before or after a\npicture with the specified location is taken. Because it is very likely\npictures taken very shortly after each ohter are taken at roughly the\nsame location.\n\n::\n\n    usage: geoselect.py [-h] [--path PATH] [--extentions EXTENTIONS] [--copy-to COPYTO] [--time-based] [--radius RADIUS]\n                        [-V]\n                        location\n\n    A script to select photos from a set, based on geographical location. Either via a decimal latitude/longitude point.\n    Or a photo taken in the desired location, it will look for exif standerized gps lat- and longitude tags.\n\n    positional arguments:\n      location              location given in decimal degrees like: \"40.783068, -73.965350\", or a path to a photo with\n                            exif gps info\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --path PATH           path to look for image files, if not set files will be taken from stdin\n      --extentions EXTENTIONS\n                            comma separated list of extension to look for in PATH\n      --copy-to COPYTO      path where found photos should be copied\n      --time-based          also add photos wich themselfs dont have gps information, but are taken in a short time\n                            before or after one that has (in the right location)\n      --radius RADIUS       radius of area (in kilometers) to select photos from\n      -V, --version         show program's version number and exit", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FreekKalter/geoselect", "keywords": "gps photos filter", "license": "GPL v3", "maintainer": null, "maintainer_email": null, "name": "geoselect", "package_url": "https://pypi.org/project/geoselect/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/geoselect/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/FreekKalter/geoselect"}, "release_url": "https://pypi.org/project/geoselect/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "A script to select photos from a set, based on geographical location.", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A script to select photos from a set, based on geographical location.\nEither via a decimal latitude/longitude point. Or a photo taken in the\ndesired location, it will look for exif standerized gps lat- and\nlongitude tags.</p>\n<div id=\"installing\">\n<h2>Installing</h2>\n<div id=\"pip\">\n<h3>Pip</h3>\n<p>The easiest way is to use pip to download and install the script.</p>\n<pre>pip install geoselect\n</pre>\n</div>\n<div id=\"get-latest-source\">\n<h3>Get (latest) source</h3>\n<pre># clone this repo\nclone https://github.com/FreekKalter/geoselect.git\ncd geoselect\n\n# initialize virtual environment (optional, but recommended)\nvirtualenv venv\nsource venv/bin/activate\n\n# install (--editable to hack on code whithout running pip install again)\npip install --editable .\n</pre>\n</div>\n</div>\n<div id=\"using\">\n<h2>Using</h2>\n<p>There are 2 ways to specify the location to select on. LOCATION can be a\n\u201clatitude,longitude\u201d specified in decimal degrees like: \u201c41.40338,\n2.17403\u201d. Or it can be a path to a photo with exif gps coordinates, it\nwill then search for photos taken at the same location. It will search\nwithin a specified radius (default: 1 km).</p>\n<p>If <tt><span class=\"pre\">--path</span></tt> is set, geoselect will look at that location for images\nwith common file extensions (jpg, jpeg, gif, bmp, png). This can be set\nto something else with the <tt><span class=\"pre\">--extensions</span></tt> parameter. If <tt><span class=\"pre\">--path</span></tt> is\nnot set, paths to pictures are taken from stdinput. This way it can be\nused as a stream filter, like most unix/linux commandline utils. For\nexample take the following pipeline:\n<tt>find /home/fkalter/photos <span class=\"pre\">-name</span> '*holiday*' | geoselect <span class=\"pre\">--radius</span> 10 \"40.783068, <span class=\"pre\">-73.965350\"</span> | wc <span class=\"pre\">-l</span></tt>\nTo count the number of pictures taken in/around central park wich have\n\u2018holiday\u2019 in the filename.</p>\n<p>A (expiremental) feature uses the time a picture is taken to <em>gues</em> at\nwich location it is made. Sometimes the device used to make the picture\ntakes a while to get a \u2018gps fix\u2019. So it might not register the gps\ncoordinates for the first picture in a series. The <tt><span class=\"pre\">--</span> <span class=\"pre\">time-based</span></tt>\noption looks for any pictures taken in a short time before or after a\npicture with the specified location is taken. Because it is very likely\npictures taken very shortly after each ohter are taken at roughly the\nsame location.</p>\n<pre>usage: geoselect.py [-h] [--path PATH] [--extentions EXTENTIONS] [--copy-to COPYTO] [--time-based] [--radius RADIUS]\n                    [-V]\n                    location\n\nA script to select photos from a set, based on geographical location. Either via a decimal latitude/longitude point.\nOr a photo taken in the desired location, it will look for exif standerized gps lat- and longitude tags.\n\npositional arguments:\n  location              location given in decimal degrees like: \"40.783068, -73.965350\", or a path to a photo with\n                        exif gps info\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --path PATH           path to look for image files, if not set files will be taken from stdin\n  --extentions EXTENTIONS\n                        comma separated list of extension to look for in PATH\n  --copy-to COPYTO      path where found photos should be copied\n  --time-based          also add photos wich themselfs dont have gps information, but are taken in a short time\n                        before or after one that has (in the right location)\n  --radius RADIUS       radius of area (in kilometers) to select photos from\n  -V, --version         show program's version number and exit\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1779753, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c2f61cc8d368ef455c5faf93652e635b", "sha256": "64b4be5186d9e8279d823b52c4b9c327b78dbe6ad6455cbe5254a47196ccd53b"}, "downloads": -1, "filename": "geoselect-0.1-py2.7.egg", "has_sig": true, "md5_digest": "c2f61cc8d368ef455c5faf93652e635b", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 7669, "upload_time": "2015-10-18T18:34:58", "upload_time_iso_8601": "2015-10-18T18:34:58.353073Z", "url": "https://files.pythonhosted.org/packages/8c/86/68dd6bfdd529d69af973b5537a3679ee292e5e5425796628eebe2a626136/geoselect-0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b6e0d12c308df837fd67082d1f94f19", "sha256": "162caffd93daf0bb7024dc81050aacfbf2343f390929e404aa2b66a56a0d4429"}, "downloads": -1, "filename": "geoselect-0.1.tar.gz", "has_sig": true, "md5_digest": "4b6e0d12c308df837fd67082d1f94f19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3517, "upload_time": "2015-10-18T18:34:53", "upload_time_iso_8601": "2015-10-18T18:34:53.126639Z", "url": "https://files.pythonhosted.org/packages/bf/b0/5a264fb8f938d8023561d1366dcad798003e2bdd405d939e1161f96238cd/geoselect-0.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1ea7788479daa788d2640bd0cd2b0e4c", "sha256": "969fec06a1bcff579ca0bea064eddf8d07b137634b29bbd331ac896a06f0bddb"}, "downloads": -1, "filename": "geoselect-0.2.0-py2.7.egg", "has_sig": true, "md5_digest": "1ea7788479daa788d2640bd0cd2b0e4c", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 9723, "upload_time": "2015-10-19T18:42:47", "upload_time_iso_8601": "2015-10-19T18:42:47.303600Z", "url": "https://files.pythonhosted.org/packages/02/d8/c5aee1084703b525eacf4adb54a343fca5d471007b2cb3f9d121522ba647/geoselect-0.2.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2404189fa0b0a2de270d9449083e3888", "sha256": "ef610ab86acd62c766cae88244f204df9e7f8ae8d470db443b5df2b3dba9af4b"}, "downloads": -1, "filename": "geoselect-0.2.0.tar.gz", "has_sig": true, "md5_digest": "2404189fa0b0a2de270d9449083e3888", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5101, "upload_time": "2015-10-19T18:42:43", "upload_time_iso_8601": "2015-10-19T18:42:43.882211Z", "url": "https://files.pythonhosted.org/packages/c2/3d/b1bc8a7e081d759947e99006301265174293d235342b9fb8913b6eadfd10/geoselect-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8db8993d1b7617f16fb079ce68036c1b", "sha256": "173189d5a6811d962d26258a0fced5f46c0f68853ea70ec02688df705025154c"}, "downloads": -1, "filename": "geoselect-0.2.1-py2.7.egg", "has_sig": true, "md5_digest": "8db8993d1b7617f16fb079ce68036c1b", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 9798, "upload_time": "2015-10-19T19:02:47", "upload_time_iso_8601": "2015-10-19T19:02:47.547398Z", "url": "https://files.pythonhosted.org/packages/5d/27/59fbd0ef186a0a59fbb14116bb58d00984ffca6e68903d89f2bf0b003d9a/geoselect-0.2.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6b622077b8ecfcbcd64238af25225f7", "sha256": "a65b499209a35fe16b8cc754ff9807fc6f8993a47f53209520691d6a01cc5741"}, "downloads": -1, "filename": "geoselect-0.2.1.tar.gz", "has_sig": true, "md5_digest": "a6b622077b8ecfcbcd64238af25225f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5233, "upload_time": "2015-10-19T19:02:34", "upload_time_iso_8601": "2015-10-19T19:02:34.264351Z", "url": "https://files.pythonhosted.org/packages/bd/b5/0511281de8526903c028362a2d33e91d1511b9d9123bfcf0ba5a6d08f003/geoselect-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "30a667d2b7cb23a566ace2ba582110f2", "sha256": "1ea1152de2137283fc6f2546f6c7113cbafbac8f6ca5789892c13eba00931cb8"}, "downloads": -1, "filename": "geoselect-0.2.2-py2.7.egg", "has_sig": true, "md5_digest": "30a667d2b7cb23a566ace2ba582110f2", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 9823, "upload_time": "2015-10-21T10:38:20", "upload_time_iso_8601": "2015-10-21T10:38:20.406151Z", "url": "https://files.pythonhosted.org/packages/0b/c2/a10cc35a707c860881cee1300279a3e29ce41d8ed3b8dd2186b5f0731f76/geoselect-0.2.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "19abbf9d037f271a65b2d770fcbfe9af", "sha256": "fe3d55f349228a781417019b7258489df8453ef868c07e16e7c3f88621bac586"}, "downloads": -1, "filename": "geoselect-0.2.2.tar.gz", "has_sig": true, "md5_digest": "19abbf9d037f271a65b2d770fcbfe9af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5532, "upload_time": "2015-10-21T10:38:13", "upload_time_iso_8601": "2015-10-21T10:38:13.887570Z", "url": "https://files.pythonhosted.org/packages/27/19/2f140a0bc33bcc64ee9534fc6713a9b1fd8576525b9c05aa792e3d51b319/geoselect-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "30a667d2b7cb23a566ace2ba582110f2", "sha256": "1ea1152de2137283fc6f2546f6c7113cbafbac8f6ca5789892c13eba00931cb8"}, "downloads": -1, "filename": "geoselect-0.2.2-py2.7.egg", "has_sig": true, "md5_digest": "30a667d2b7cb23a566ace2ba582110f2", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 9823, "upload_time": "2015-10-21T10:38:20", "upload_time_iso_8601": "2015-10-21T10:38:20.406151Z", "url": "https://files.pythonhosted.org/packages/0b/c2/a10cc35a707c860881cee1300279a3e29ce41d8ed3b8dd2186b5f0731f76/geoselect-0.2.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "19abbf9d037f271a65b2d770fcbfe9af", "sha256": "fe3d55f349228a781417019b7258489df8453ef868c07e16e7c3f88621bac586"}, "downloads": -1, "filename": "geoselect-0.2.2.tar.gz", "has_sig": true, "md5_digest": "19abbf9d037f271a65b2d770fcbfe9af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5532, "upload_time": "2015-10-21T10:38:13", "upload_time_iso_8601": "2015-10-21T10:38:13.887570Z", "url": "https://files.pythonhosted.org/packages/27/19/2f140a0bc33bcc64ee9534fc6713a9b1fd8576525b9c05aa792e3d51b319/geoselect-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:56 2020"}