{"info": {"author": "Emanuele Ruffaldi", "author_email": "emanuele ruffaldi", "bugtrack_url": null, "classifiers": [], "description": "# pyoni\nPure python tool for manipulating OpenNI recorded files (oni). This tool supports extraction of data, time rescaling and fix of broken files.\n\nOptions\n=======================\n```\nusage: pyonitool.py [-h] [--info] [--times] [--seeks] [--dump] [--copy]\n                    [--rescale RESCALE] [--fixcut] [--checkcut]\n                    [--dupframes DUPFRAMES] [--stripcolor] [--stripdepth]\n                    [--stripir] [--registercolor] [--registerdepth] [--mjpeg]\n                    [--extractcolor EXTRACTCOLOR]\n                    [--extractdepth EXTRACTDEPTH] [--extractir EXTRACTIR]\n                    [--fseek FSEEK] [--fduration FDURATION]\n                    [--skipframes SKIPFRAMES] [--coloreddepth]\n                    [--output OUTPUT] [--cutbytime CUTBYTIME]\n                    [--cutbyframe CUTBYFRAME]\n                    file\n\nScan OpenNI ONI files\n\npositional arguments:\n  file                  ONI filename\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --info\n  --times               print times of each frame\n  --seeks               print seeks\n  --dump\n  --copy                simply copies the content of the ONI via parsing\n                        (rebuilds the seektable only)\n  --rescale RESCALE     rescale timings\n  --fixcut              fixes cut file NOT TESTED HERE\n  --checkcut            checks if file was cut NOT TESTED HERE\n  --dupframes DUPFRAMES\n                        duplicate frames\n  --stripcolor\n  --stripdepth\n  --stripir             removes IR\n  --registercolor       registers color over depth\n  --registerdepth       registers depth over color\n  --mjpeg               extract the color stream as motion jpeg\n  --extractcolor EXTRACTCOLOR\n                        extract the color stream single jpeg or png images.\n                        This option specifies the target path, numbering is\n                        the frame number\n  --extractdepth EXTRACTDEPTH\n                        extract the depth stream single png images. This\n                        option specifies the target path, numbering is the\n                        frame number\n  --extractir EXTRACTIR\n                        extract the depth stream single png images. This\n                        option specifies the target path, numbering is the\n                        frame number\n  --fseek FSEEK         seek frame for extract\n  --fduration FDURATION\n                        duration of extraction in frames\n  --skipframes SKIPFRAMES\n                        skip n frames\n  --coloreddepth        colored depth\n  --output OUTPUT\n  --cutbytime CUTBYTIME\n                        cut by specifing time in seconds:\n                        startseconds,endseconds\n  --cutbyframe CUTBYFRAME\n                        cut by specifing time in frames: startframe,endframe\n```\n  \nBuild\n=======================\n\nTwo C++ codes require manual steps using cmake and then the resulting shared libraries needs to be visible to python at startup (PATH under Windows, LD_LIBRARY_PATH under Linux, DYLD_LIBRARY_PATH under OSX)\n\n1) make sure that Eigen3 is available http://eigen.tuxfamily.org\n2) go top level\n3) mkdir build\n   cd build\n   cmake ..\n4) make\n5) make the output DLL/SO visible\n\nIn the next version I will package everything \n\nReferences\n=======================\n\nhttps://github.com/OpenNI/OpenNI2/blob/master/Source/Drivers/OniFile/DataRecords.cpp\nhttps://github.com/OpenNI/OpenNI2/blob/master/Source/Core/OniRecorder.cpp\nhttps://github.com/OpenNI/OpenNI2/blob/master/Source/Core/OniDataRecords.cpp\nCODECS: https://github.com/OpenNI/OpenNI2/blob/5b88c95e4f8d19b95713e3c873c7d07e48e5605b/Source/Drivers/OniFile/Formats/Xn16zEmbTablesCodec.h\nhttps://github.com/OpenNI/OpenNI2/blob/5b88c95e4f8d19b95713e3c873c7d07e48e5605b/Source/Drivers/OniFile/Formats/XnStreamCompression.cpp\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/eruffaldi/pyoni", "keywords": "rgbd,tool,oni,openni", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "pyoni", "package_url": "https://pypi.org/project/pyoni/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyoni/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/eruffaldi/pyoni"}, "release_url": "https://pypi.org/project/pyoni/0.6.1/", "requires_dist": null, "requires_python": null, "summary": "Python OpenNI ONI tool", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # pyoni<br>Pure python tool for manipulating OpenNI recorded files (oni). This tool supports extraction of data, time rescaling and fix of broken files.<br><br>Options<br>=======================<br>```<br>usage: pyonitool.py [-h] [--info] [--times] [--seeks] [--dump] [--copy]<br>                    [--rescale RESCALE] [--fixcut] [--checkcut]<br>                    [--dupframes DUPFRAMES] [--stripcolor] [--stripdepth]<br>                    [--stripir] [--registercolor] [--registerdepth] [--mjpeg]<br>                    [--extractcolor EXTRACTCOLOR]<br>                    [--extractdepth EXTRACTDEPTH] [--extractir EXTRACTIR]<br>                    [--fseek FSEEK] [--fduration FDURATION]<br>                    [--skipframes SKIPFRAMES] [--coloreddepth]<br>                    [--output OUTPUT] [--cutbytime CUTBYTIME]<br>                    [--cutbyframe CUTBYFRAME]<br>                    file<br><br>Scan OpenNI ONI files<br><br>positional arguments:<br>  file                  ONI filename<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  --info<br>  --times               print times of each frame<br>  --seeks               print seeks<br>  --dump<br>  --copy                simply copies the content of the ONI via parsing<br>                        (rebuilds the seektable only)<br>  --rescale RESCALE     rescale timings<br>  --fixcut              fixes cut file NOT TESTED HERE<br>  --checkcut            checks if file was cut NOT TESTED HERE<br>  --dupframes DUPFRAMES<br>                        duplicate frames<br>  --stripcolor<br>  --stripdepth<br>  --stripir             removes IR<br>  --registercolor       registers color over depth<br>  --registerdepth       registers depth over color<br>  --mjpeg               extract the color stream as motion jpeg<br>  --extractcolor EXTRACTCOLOR<br>                        extract the color stream single jpeg or png images.<br>                        This option specifies the target path, numbering is<br>                        the frame number<br>  --extractdepth EXTRACTDEPTH<br>                        extract the depth stream single png images. This<br>                        option specifies the target path, numbering is the<br>                        frame number<br>  --extractir EXTRACTIR<br>                        extract the depth stream single png images. This<br>                        option specifies the target path, numbering is the<br>                        frame number<br>  --fseek FSEEK         seek frame for extract<br>  --fduration FDURATION<br>                        duration of extraction in frames<br>  --skipframes SKIPFRAMES<br>                        skip n frames<br>  --coloreddepth        colored depth<br>  --output OUTPUT<br>  --cutbytime CUTBYTIME<br>                        cut by specifing time in seconds:<br>                        startseconds,endseconds<br>  --cutbyframe CUTBYFRAME<br>                        cut by specifing time in frames: startframe,endframe<br>```<br>  <br>Build<br>=======================<br><br>Two C++ codes require manual steps using cmake and then the resulting shared libraries needs to be visible to python at startup (PATH under Windows, LD_LIBRARY_PATH under Linux, DYLD_LIBRARY_PATH under OSX)<br><br>1) make sure that Eigen3 is available http://eigen.tuxfamily.org<br>2) go top level<br>3) mkdir build<br>   cd build<br>   cmake ..<br>4) make<br>5) make the output DLL/SO visible<br><br>In the next version I will package everything <br><br>References<br>=======================<br><br>https://github.com/OpenNI/OpenNI2/blob/master/Source/Drivers/OniFile/DataRecords.cpp<br>https://github.com/OpenNI/OpenNI2/blob/master/Source/Core/OniRecorder.cpp<br>https://github.com/OpenNI/OpenNI2/blob/master/Source/Core/OniDataRecords.cpp<br>CODECS: https://github.com/OpenNI/OpenNI2/blob/5b88c95e4f8d19b95713e3c873c7d07e48e5605b/Source/Drivers/OniFile/Formats/Xn16zEmbTablesCodec.h<br>https://github.com/OpenNI/OpenNI2/blob/5b88c95e4f8d19b95713e3c873c7d07e48e5605b/Source/Drivers/OniFile/Formats/XnStreamCompression.cpp<br>\n          </div>"}, "last_serial": 2221123, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "fca3624fb45f0bb9e74ecf341ab56c6d", "sha256": "0ef48a9a506598e5ffab6384533cb008c647850d7531413641a9ab4c7650ee73"}, "downloads": -1, "filename": "pyoni-0.5.tar.gz", "has_sig": false, "md5_digest": "fca3624fb45f0bb9e74ecf341ab56c6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37617, "upload_time": "2015-12-22T18:18:27", "upload_time_iso_8601": "2015-12-22T18:18:27.506855Z", "url": "https://files.pythonhosted.org/packages/ec/b7/ad15c10db43fcb2dfc4dfa8e4eeb7cd7f93eaabfec54b8927fac33b91532/pyoni-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "c30a413a0f82358b09e535c63d89c377", "sha256": "3a1cb1e779da2d7c3a6ed7c59d664a6be08461973a00ef644834d0b3ca6737aa"}, "downloads": -1, "filename": "pyoni-0.5.1.tar.gz", "has_sig": false, "md5_digest": "c30a413a0f82358b09e535c63d89c377", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37638, "upload_time": "2015-12-22T18:24:06", "upload_time_iso_8601": "2015-12-22T18:24:06.712456Z", "url": "https://files.pythonhosted.org/packages/3b/61/3aab7ac4e6bdaaece95c6a1e14a945515f5e42efbcdcf39612dc8ee133a5/pyoni-0.5.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "32309f900d77266fbf26d91135f17bb6", "sha256": "6dfc4c6f13b97f840bb9003c7d07ff228a08e9385411eeb451b076d36ee68092"}, "downloads": -1, "filename": "pyoni-0.5.1.win32-py2.7.exe", "has_sig": false, "md5_digest": "32309f900d77266fbf26d91135f17bb6", "packagetype": "bdist_wininst", "python_version": "2.7", "requires_python": null, "size": 559442, "upload_time": "2015-12-22T18:26:48", "upload_time_iso_8601": "2015-12-22T18:26:48.049913Z", "url": "https://files.pythonhosted.org/packages/3e/6d/7e4cfded772bca55f196ca9767e335d9fec85f0321e961805e029af671aa/pyoni-0.5.1.win32-py2.7.exe", "yanked": false}], "0.6.0": [{"comment_text": "built for Darwin-14.5.0", "digests": {"md5": "ee7132fb06c5be6139c54f90ad14c18a", "sha256": "2ffd4bc2ed9fee3cb5cd29b0472772b20f48c59bbf24ca96cb7d6fd760e01db0"}, "downloads": -1, "filename": "pyoni-0.6.0.macosx-10.10-intel.tar.gz", "has_sig": false, "md5_digest": "ee7132fb06c5be6139c54f90ad14c18a", "packagetype": "bdist_dumb", "python_version": "2.7", "requires_python": null, "size": 100614, "upload_time": "2016-07-11T05:42:43", "upload_time_iso_8601": "2016-07-11T05:42:43.929084Z", "url": "https://files.pythonhosted.org/packages/da/21/fa54dcb6bed1d0ef2ac8d8b2c3482623a2f589773d217a4cbb55eee3a103/pyoni-0.6.0.macosx-10.10-intel.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "594fb553b74b36cf12225a442183b93a", "sha256": "6e20cfb379fa4e06f18f1a505a1dcea73493d687f2f5c93e134d52eb72ee167e"}, "downloads": -1, "filename": "pyoni-0.6.0.tar.gz", "has_sig": false, "md5_digest": "594fb553b74b36cf12225a442183b93a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31470, "upload_time": "2016-07-11T05:42:38", "upload_time_iso_8601": "2016-07-11T05:42:38.568100Z", "url": "https://files.pythonhosted.org/packages/f8/31/f2e957333a84d8ac3740943c1011f6efb816e52c4ac29cf2d4b393bcca23/pyoni-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "built for Darwin-14.5.0", "digests": {"md5": "e9aeea3098101ce60287597ad5e9ae27", "sha256": "389c7447ab6527d3cea5a698c2c7c511e513bb446ad6a2bf5e43500f8b4c6ce9"}, "downloads": -1, "filename": "pyoni-0.6.1.macosx-10.10-intel.tar.gz", "has_sig": false, "md5_digest": "e9aeea3098101ce60287597ad5e9ae27", "packagetype": "bdist_dumb", "python_version": "2.7", "requires_python": null, "size": 100617, "upload_time": "2016-07-14T14:19:03", "upload_time_iso_8601": "2016-07-14T14:19:03.730711Z", "url": "https://files.pythonhosted.org/packages/df/12/27513a525919acf888a83c6ba6b83b927dd0edcf59c923fb271f84bb0286/pyoni-0.6.1.macosx-10.10-intel.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "508ac3f33b84465a4f39e523ae19368a", "sha256": "6ada1de948e2477d13324ec63604e4cc5ae5d620013b25f44e5aec73a2e71cd6"}, "downloads": -1, "filename": "pyoni-0.6.1.tar.gz", "has_sig": false, "md5_digest": "508ac3f33b84465a4f39e523ae19368a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31487, "upload_time": "2016-07-14T14:19:00", "upload_time_iso_8601": "2016-07-14T14:19:00.530763Z", "url": "https://files.pythonhosted.org/packages/17/f8/a1d4025f9437bbd11e8b77f13ec53321459821be28cf1e2480c8b112c84d/pyoni-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "built for Darwin-14.5.0", "digests": {"md5": "e9aeea3098101ce60287597ad5e9ae27", "sha256": "389c7447ab6527d3cea5a698c2c7c511e513bb446ad6a2bf5e43500f8b4c6ce9"}, "downloads": -1, "filename": "pyoni-0.6.1.macosx-10.10-intel.tar.gz", "has_sig": false, "md5_digest": "e9aeea3098101ce60287597ad5e9ae27", "packagetype": "bdist_dumb", "python_version": "2.7", "requires_python": null, "size": 100617, "upload_time": "2016-07-14T14:19:03", "upload_time_iso_8601": "2016-07-14T14:19:03.730711Z", "url": "https://files.pythonhosted.org/packages/df/12/27513a525919acf888a83c6ba6b83b927dd0edcf59c923fb271f84bb0286/pyoni-0.6.1.macosx-10.10-intel.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "508ac3f33b84465a4f39e523ae19368a", "sha256": "6ada1de948e2477d13324ec63604e4cc5ae5d620013b25f44e5aec73a2e71cd6"}, "downloads": -1, "filename": "pyoni-0.6.1.tar.gz", "has_sig": false, "md5_digest": "508ac3f33b84465a4f39e523ae19368a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31487, "upload_time": "2016-07-14T14:19:00", "upload_time_iso_8601": "2016-07-14T14:19:00.530763Z", "url": "https://files.pythonhosted.org/packages/17/f8/a1d4025f9437bbd11e8b77f13ec53321459821be28cf1e2480c8b112c84d/pyoni-0.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:15 2020"}