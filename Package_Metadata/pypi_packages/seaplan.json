{"info": {"author": "Wayne Crawford", "author_email": "crawford@ipgp.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Physics"], "description": "===================\nseaplan\n===================\n\nSeagoing mission planning based on station positions and occupation times\n\nOverview\n======================\n\nReads in a parameter file  (YAML format) containing variables \nand a list of actions to perform.\n\nThe parameter file can also specify a \"station file\" containing the names, latitudes\nand longitudes of the stations.  All of these stations will be plotted on the map and\nif an action has the same name and no specified latitude and longitude, this station's\nposition will be used.\n\nOutputs a table of actions with predicted (or specified) times.  The table is in\nMultiMarkdown format, it can be printed as is or converted to HTML, LaTeX etc for pretty\nprinting.\n\nParameter file\n======================\n\nVariables that can be provided in the parameter files are (default in [braces]):\n\n- ``station_file``: A CSV file containing station information.  Its first line\n  is a header that specifies the field order using the names ``\"Name\", \"Lat\",\n  \"Lon\", \"Type\" and \"Comment\"``\n\n  - ``name: Name`` of CSV file\n  - ``field_separator``: [``';'``]\n\n\n- ``printout``:\n\n  - ``show_comments`` : Show comments in output [``False``]\n  - ``print_past`` :    Print out past events [``False``]\n\n- ``timing``:\n\n  - ``ignore_depart_arrive_times``: Ignore ``'arrive_time'`` and \n    ``'depart_time'`` in events (allows you to test time predictions)\n    [``False``]\n  - ``ship_speed.kn_i``:     Cruising speed of the ship in knots [``10.``]\n  - ``ship_latency.h``:      Hours lost getting to speed from stopped [``0.5``]\n  - ``action_times.h``:   Default hours for each action/station type::\n\n      action_times.h:\n          \"{action_type1}\":\n              \"{station_type1}\": *float*\n              \"{station_type2}\": *float*\n              default: *float*\n          \"{action_type2}\":\n              default: *float*\n\n- ``map``:\n\n  - ``grid``: grid spacing in decimal degrees [``x:1; y:1``]\n  - ``bounds``: plot bounds in Decimal degrees  (MANDATORY if plot_map==True)\n  - bathy_map: Map background image [False].  Three possibilities:\n\n    * ``{string}``: Name of a netCDF file to plot as background image on the map\n    * ``True``: Plot an etopo image as background\n    * ``False``: No background map\n\n  - ``plot_past_tracks``: Plot past ship tracks [``True``]\n  - ``show_plot``: Plot the the screen as well as a file [``False``]\n\n- ``events``:  Sequential list of \"events\" [MANDATORY].  \n           If the \"station\" key corresponds to a \"Name\" in the station file,\n           then the station position, type and comments\n           are taken from that file.  If not, you must specify at least the\n           lat and lon the first time you name the station. The\n           keys are:\n\n  - ``station (str)``:     station name [MANDATORY]\n  - ``lat (float)``:       station latitude  [station.lat or 0.]\n  - ``lon (float)``:       station longitude [station.lat or 0.]\n  - ``arrive_time (ISO)``: [previous depart_time+transit+latency]\n  - ``depart_time (ISO)``: [arrive_time + hours]\n  - ``hours (float)``:     hours expected for operation \n    [``action_time.h['{action_type}']['{station_type}']``, \n    ``action_time.h['{action_type}']['default']``, or 0.]\n  - ``comment (str)``:     comments\n  - ``speed (float)``:     speed between previous and given site [ship_speed_knots] \n\nMiscellaneous features\n---------------------------------\n\n- Puts name of stations/actions on plot UNLESS they have no \"hours\" (just a\n  waypoint) \n\n- Crosses out stations that have already been visited (departure_time entered\n  and before UTCDateTime.now() \n\n- Changes the color of the ship's track every time you use the action name \"NEWLEG\"\n\nOther subdirectories\n======================\n\n`seaplan/_examples/`\n------------------------------------------------------------\n\nExample files and scripts:\n\nUse `reStructuredText\n<http://docutils.sourceforge.net/rst.html>`_ to modify this file.\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pypa/seaplan", "keywords": "oceanography,marine,OBS", "license": "", "maintainer": "", "maintainer_email": "", "name": "seaplan", "package_url": "https://pypi.org/project/seaplan/", "platform": "", "project_url": "https://pypi.org/project/seaplan/", "project_urls": {"Homepage": "https://github.com/pypa/seaplan"}, "release_url": "https://pypi.org/project/seaplan/0.4.4/", "requires_dist": ["numpy", "scipy (>)", "matplotlib", "basemap (>=1.0)", "pyyaml (>=3.0)", "jsonschema (>=2.6)", "jsonref (>=0.2)"], "requires_python": ">=3", "summary": "Sea-going mission planning", "version": "0.4.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Seagoing mission planning based on station positions and occupation times</p>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>Reads in a parameter file  (YAML format) containing variables\nand a list of actions to perform.</p>\n<p>The parameter file can also specify a \u201cstation file\u201d containing the names, latitudes\nand longitudes of the stations.  All of these stations will be plotted on the map and\nif an action has the same name and no specified latitude and longitude, this station\u2019s\nposition will be used.</p>\n<p>Outputs a table of actions with predicted (or specified) times.  The table is in\nMultiMarkdown format, it can be printed as is or converted to HTML, LaTeX etc for pretty\nprinting.</p>\n</div>\n<div id=\"parameter-file\">\n<h2>Parameter file</h2>\n<p>Variables that can be provided in the parameter files are (default in [braces]):</p>\n<ul>\n<li><p><tt>station_file</tt>: A CSV file containing station information.  Its first line\nis a header that specifies the field order using the names <tt>\"Name\", \"Lat\",\n\"Lon\", \"Type\" and \"Comment\"</tt></p>\n<ul>\n<li><tt>name: Name</tt> of CSV file</li>\n<li><tt>field_separator</tt>: [<tt>';'</tt>]</li>\n</ul>\n</li>\n<li><p><tt>printout</tt>:</p>\n<ul>\n<li><tt>show_comments</tt> : Show comments in output [<tt>False</tt>]</li>\n<li><tt>print_past</tt> :    Print out past events [<tt>False</tt>]</li>\n</ul>\n</li>\n<li><p><tt>timing</tt>:</p>\n<ul>\n<li><p><tt>ignore_depart_arrive_times</tt>: Ignore <tt>'arrive_time'</tt> and\n<tt>'depart_time'</tt> in events (allows you to test time predictions)\n[<tt>False</tt>]</p>\n</li>\n<li><p><tt>ship_speed.kn_i</tt>:     Cruising speed of the ship in knots [<tt>10.</tt>]</p>\n</li>\n<li><p><tt>ship_latency.h</tt>:      Hours lost getting to speed from stopped [<tt>0.5</tt>]</p>\n</li>\n<li><p><tt>action_times.h</tt>:   Default hours for each action/station type:</p>\n<pre>action_times.h:\n    \"{action_type1}\":\n        \"{station_type1}\": *float*\n        \"{station_type2}\": *float*\n        default: *float*\n    \"{action_type2}\":\n        default: *float*\n</pre>\n</li>\n</ul>\n</li>\n<li><p><tt>map</tt>:</p>\n<ul>\n<li><tt>grid</tt>: grid spacing in decimal degrees [<tt>x:1; y:1</tt>]</li>\n<li><tt>bounds</tt>: plot bounds in Decimal degrees  (MANDATORY if plot_map==True)</li>\n<li>bathy_map: Map background image [False].  Three possibilities:<ul>\n<li><tt>{string}</tt>: Name of a netCDF file to plot as background image on the map</li>\n<li><tt>True</tt>: Plot an etopo image as background</li>\n<li><tt>False</tt>: No background map</li>\n</ul>\n</li>\n<li><tt>plot_past_tracks</tt>: Plot past ship tracks [<tt>True</tt>]</li>\n<li><tt>show_plot</tt>: Plot the the screen as well as a file [<tt>False</tt>]</li>\n</ul>\n</li>\n<li><dl>\n<dt><tt>events</tt>:  Sequential list of \u201cevents\u201d [MANDATORY].</dt>\n<dd><p>If the \u201cstation\u201d key corresponds to a \u201cName\u201d in the station file,\nthen the station position, type and comments\nare taken from that file.  If not, you must specify at least the\nlat and lon the first time you name the station. The\nkeys are:</p>\n</dd>\n</dl>\n<ul>\n<li><tt>station (str)</tt>:     station name [MANDATORY]</li>\n<li><tt>lat (float)</tt>:       station latitude  [station.lat or 0.]</li>\n<li><tt>lon (float)</tt>:       station longitude [station.lat or 0.]</li>\n<li><tt>arrive_time (ISO)</tt>: [previous depart_time+transit+latency]</li>\n<li><tt>depart_time (ISO)</tt>: [arrive_time + hours]</li>\n<li><tt>hours (float)</tt>:     hours expected for operation\n[<tt><span class=\"pre\">action_time.h['{action_type}']['{station_type}']</span></tt>,\n<tt><span class=\"pre\">action_time.h['{action_type}']['default']</span></tt>, or 0.]</li>\n<li><tt>comment (str)</tt>:     comments</li>\n<li><tt>speed (float)</tt>:     speed between previous and given site [ship_speed_knots]</li>\n</ul>\n</li>\n</ul>\n<div id=\"miscellaneous-features\">\n<h3>Miscellaneous features</h3>\n<ul>\n<li>Puts name of stations/actions on plot UNLESS they have no \u201chours\u201d (just a\nwaypoint)</li>\n<li>Crosses out stations that have already been visited (departure_time entered\nand before UTCDateTime.now()</li>\n<li>Changes the color of the ship\u2019s track every time you use the action name \u201cNEWLEG\u201d</li>\n</ul>\n</div>\n</div>\n<div id=\"other-subdirectories\">\n<h2>Other subdirectories</h2>\n<h2 id=\"seaplan-examples\"><span class=\"section-subtitle\"><cite>seaplan/_examples/</cite></span></h2>\n<p>Example files and scripts:</p>\n<p>Use <a href=\"http://docutils.sourceforge.net/rst.html\" rel=\"nofollow\">reStructuredText</a> to modify this file.</p>\n</div>\n\n          </div>"}, "last_serial": 5556472, "releases": {"0.4.4": [{"comment_text": "", "digests": {"md5": "489ddc1eedc03211b57f641b3e4c6b47", "sha256": "c321da2a9cc8fbc49f40d8c07ee59eef2b4b253a24978e525172cbc5c57d4f98"}, "downloads": -1, "filename": "seaplan-0.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "489ddc1eedc03211b57f641b3e4c6b47", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 21496, "upload_time": "2019-07-19T13:28:49", "upload_time_iso_8601": "2019-07-19T13:28:49.514773Z", "url": "https://files.pythonhosted.org/packages/34/9a/ce4e4d8cfffe7d6b4ad77d2d5f0cecc29466bd7e2076c723e3184cd98191/seaplan-0.4.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "408a6802e68a4a8e10a738cdaa3693ed", "sha256": "261ca5a1ef79a168823d36ab760aa28a4a5e3109d966218a0ec3ededd161e1e6"}, "downloads": -1, "filename": "seaplan-0.4.4.tar.gz", "has_sig": false, "md5_digest": "408a6802e68a4a8e10a738cdaa3693ed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 17699, "upload_time": "2019-07-19T13:28:52", "upload_time_iso_8601": "2019-07-19T13:28:52.197973Z", "url": "https://files.pythonhosted.org/packages/d7/42/797727ce4f6279598e87fee02fb7e628880508617ce44ce41d2bc6aae408/seaplan-0.4.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "489ddc1eedc03211b57f641b3e4c6b47", "sha256": "c321da2a9cc8fbc49f40d8c07ee59eef2b4b253a24978e525172cbc5c57d4f98"}, "downloads": -1, "filename": "seaplan-0.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "489ddc1eedc03211b57f641b3e4c6b47", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 21496, "upload_time": "2019-07-19T13:28:49", "upload_time_iso_8601": "2019-07-19T13:28:49.514773Z", "url": "https://files.pythonhosted.org/packages/34/9a/ce4e4d8cfffe7d6b4ad77d2d5f0cecc29466bd7e2076c723e3184cd98191/seaplan-0.4.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "408a6802e68a4a8e10a738cdaa3693ed", "sha256": "261ca5a1ef79a168823d36ab760aa28a4a5e3109d966218a0ec3ededd161e1e6"}, "downloads": -1, "filename": "seaplan-0.4.4.tar.gz", "has_sig": false, "md5_digest": "408a6802e68a4a8e10a738cdaa3693ed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 17699, "upload_time": "2019-07-19T13:28:52", "upload_time_iso_8601": "2019-07-19T13:28:52.197973Z", "url": "https://files.pythonhosted.org/packages/d7/42/797727ce4f6279598e87fee02fb7e628880508617ce44ce41d2bc6aae408/seaplan-0.4.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:06 2020"}