{"info": {"author": "Niels Reuter", "author_email": "niels.reuter@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# CBPtools\n\n## Connectivity-Based Parcellation Tools\nRegional **connectivity-based parcellation** (CBP) is a procedure for regional mapping by long-range connectivity\nprofiles (Eickhoff et al., 2015), revealing brain organization within a region-of-interest (ROI).\n\nFor a complete overview of the software and a setup guide, visit \n[documentation](https://cbptools.readthedocs.io/en/latest/).\n\nThe procedure clusters ROI voxels/vertices based on similarity in their profile of connection strengths to a set of\ntarget voxels/vertices, referred to as a connectivity profile. The connectivity profile for each ROI voxel/vertex\nreflects that voxel/vertex's connectivity to a target space, for instance all gray matter voxels/vertices within the\nbrain for functional data. Voxels/vertices are clustered using the\n[k-means clustering](http://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html) algorithm, which\nis optimized such that within-group similarity of profiles is high and between-group similarity is low. The resulting\nclusters form units of homogeneity within an ROI delineated by differences in connectivity, with the units being\nspatially consistent due to neighboring voxels/vertices having more similar patterns in connectivity than those further\naway. This provides the CBP procedure with the ability to map distinct brain regions, useful for localizing\n(dys)function or outlining functional or structural subdivisions/clusters within a particular ROI. Group results are\ngenerated by applying a [hierarchical clustering](https://docs.scipy.org/doc/scipy/reference/cluster.hierarchy.html)\nalgorithm on the individual clustering results. Further processing options can configured by the user.\n\nThe type of connectivity depends crucially on the imaging modality, where connectivity means the patterns of anatomical\nlinks for structural data through diffusion-weighted imaging (DWI), and statistical dependencies for functional data.\nCBPtools currently supports two neuroimaging modalities: resting-state bloox-oxygen-level dependent (BOLD) time-series\ntypically used to measure task-independent functional connectivity, and probabilistic diffusion tractography to\nestimate anatomical fiber-connectivity.\n\n## Installation instructions\nIt is recommended to use a dedicated virtual environment (see\n[virtualenv documentation](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments)):\n\n    python3 -m venv ~/.venv/cbptools\n    source ~/.venv/cbptools/bin/activate\n\nCBPtools can be installed using pip by running the following terminal command:\n\n    pip install cbptools\n\n\n## Usage example\nAfter installing CBPtools, an example configuration file can be obtained.\n\n    cbptools example --get <data type>\n\nWhere <data type> is replaced by the data you intend to give as input, either rsfmri, dmri, or connectivity. A\nconfiguration file with default and placeholder settings will now appear in your current working directory. Edit this\nfile so that it correctly points to the input data and all parameters are set accordingly.\n\nA CBP project can now be created by specifying the location to the configuration file and the working directory in\nwhich the project will be created.\n\n    cbptools create --config /path/to/config_file.yaml --workdir /path/to/workdir\n\nIf any errors appear project creation will fail, and an error log will appear inside of the working directory. If no\nerrors occur, the project will be created. Change directory to the project directory and execute the `Snakefile` using\nsnakemake, which is installed as a dependency of CBPtools.\n\n    cd /path/to/workdir\n    snakemake\n\nFor more customizability on snakemake (K\u00f6ster and Rahmann, 2012), visit the\n[snakemake documentation](https://snakemake.readthedocs.io/en/stable/).\n\n## Licensing\nThe copyright and all other rights related to the hereby provided products are held by Forschungszentrum J\u00fclich GmbH. \nThe use of the products is only permitted for own educational, scientific or private purposes. The source of the \nproducts must be quoted correctly. It is not allowed to revise or amend the provided products or extract only parts \nof it without the explicit permission of Forschungszentrum J\u00fclich GmbH. Likewise it is not allowed to grant \nsublicences to third partys.\n\n## Acknowledgements\nThis open source software code was developed in part or in whole in the Human Brain Project, funded from the European \nUnion\u2019s Horizon 2020 Framework Programme for Research and Innovation under the Specific Grant Agreement No. 785907 \n(Human Brain Project SGA2).\n\n## References\nEickhoff SB, Thirion B, Varoquaux G, Bzdok D (2015): Connectivity-based parcellation: Critique and implications.\nHum Brain Mapp 36:4771\u20134792.\n\nK\u00f6ster J, Rahmann S (2012): Snakemake--a scalable bioinformatics workflow engine. Bioinformatics 28:2520\u20132522.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/inm7/cbptools", "keywords": "", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "cbptools", "package_url": "https://pypi.org/project/cbptools/", "platform": "", "project_url": "https://pypi.org/project/cbptools/", "project_urls": {"Homepage": "https://github.com/inm7/cbptools"}, "release_url": "https://pypi.org/project/cbptools/1.1.4/", "requires_dist": ["matplotlib (==3.0.3)", "nibabel (>=2.5.0)", "numpy (>=1.17.0)", "pandas (>=0.25.0)", "pyyaml (>=5.1.1)", "scikit-learn (>=0.21.3)", "scipy (>=1.3.0)", "seaborn (>=0.9.0)", "snakemake (>=5.5.4)", "pypandoc ; extra == 'devel-docs'"], "requires_python": ">=3.5.0", "summary": "Regional Connectivity-Based Parcellation tool for Python", "version": "1.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># CBPtools</p>\n<p>## Connectivity-Based Parcellation Tools\nRegional <strong>connectivity-based parcellation</strong> (CBP) is a procedure for regional mapping by long-range connectivity\nprofiles (Eickhoff et al., 2015), revealing brain organization within a region-of-interest (ROI).</p>\n<p>For a complete overview of the software and a setup guide, visit\n[documentation](<a href=\"https://cbptools.readthedocs.io/en/latest/\" rel=\"nofollow\">https://cbptools.readthedocs.io/en/latest/</a>).</p>\n<p>The procedure clusters ROI voxels/vertices based on similarity in their profile of connection strengths to a set of\ntarget voxels/vertices, referred to as a connectivity profile. The connectivity profile for each ROI voxel/vertex\nreflects that voxel/vertex\u2019s connectivity to a target space, for instance all gray matter voxels/vertices within the\nbrain for functional data. Voxels/vertices are clustered using the\n[k-means clustering](<a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html\" rel=\"nofollow\">http://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html</a>) algorithm, which\nis optimized such that within-group similarity of profiles is high and between-group similarity is low. The resulting\nclusters form units of homogeneity within an ROI delineated by differences in connectivity, with the units being\nspatially consistent due to neighboring voxels/vertices having more similar patterns in connectivity than those further\naway. This provides the CBP procedure with the ability to map distinct brain regions, useful for localizing\n(dys)function or outlining functional or structural subdivisions/clusters within a particular ROI. Group results are\ngenerated by applying a [hierarchical clustering](<a href=\"https://docs.scipy.org/doc/scipy/reference/cluster.hierarchy.html\" rel=\"nofollow\">https://docs.scipy.org/doc/scipy/reference/cluster.hierarchy.html</a>)\nalgorithm on the individual clustering results. Further processing options can configured by the user.</p>\n<p>The type of connectivity depends crucially on the imaging modality, where connectivity means the patterns of anatomical\nlinks for structural data through diffusion-weighted imaging (DWI), and statistical dependencies for functional data.\nCBPtools currently supports two neuroimaging modalities: resting-state bloox-oxygen-level dependent (BOLD) time-series\ntypically used to measure task-independent functional connectivity, and probabilistic diffusion tractography to\nestimate anatomical fiber-connectivity.</p>\n<p>## Installation instructions\nIt is recommended to use a dedicated virtual environment (see\n[virtualenv documentation](<a href=\"https://packaging.python.org/guides/installing-using-pip-and-virtual-environments\" rel=\"nofollow\">https://packaging.python.org/guides/installing-using-pip-and-virtual-environments</a>)):</p>\n<blockquote>\npython3 -m venv ~/.venv/cbptools\nsource ~/.venv/cbptools/bin/activate</blockquote>\n<p>CBPtools can be installed using pip by running the following terminal command:</p>\n<blockquote>\npip install cbptools</blockquote>\n<p>## Usage example\nAfter installing CBPtools, an example configuration file can be obtained.</p>\n<blockquote>\ncbptools example \u2013get &lt;data type&gt;</blockquote>\n<p>Where &lt;data type&gt; is replaced by the data you intend to give as input, either rsfmri, dmri, or connectivity. A\nconfiguration file with default and placeholder settings will now appear in your current working directory. Edit this\nfile so that it correctly points to the input data and all parameters are set accordingly.</p>\n<p>A CBP project can now be created by specifying the location to the configuration file and the working directory in\nwhich the project will be created.</p>\n<blockquote>\ncbptools create \u2013config /path/to/config_file.yaml \u2013workdir /path/to/workdir</blockquote>\n<p>If any errors appear project creation will fail, and an error log will appear inside of the working directory. If no\nerrors occur, the project will be created. Change directory to the project directory and execute the <cite>Snakefile</cite> using\nsnakemake, which is installed as a dependency of CBPtools.</p>\n<blockquote>\ncd /path/to/workdir\nsnakemake</blockquote>\n<p>For more customizability on snakemake (K\u00f6ster and Rahmann, 2012), visit the\n[snakemake documentation](<a href=\"https://snakemake.readthedocs.io/en/stable/\" rel=\"nofollow\">https://snakemake.readthedocs.io/en/stable/</a>).</p>\n<p>## Licensing\nThe copyright and all other rights related to the hereby provided products are held by Forschungszentrum J\u00fclich GmbH.\nThe use of the products is only permitted for own educational, scientific or private purposes. The source of the\nproducts must be quoted correctly. It is not allowed to revise or amend the provided products or extract only parts\nof it without the explicit permission of Forschungszentrum J\u00fclich GmbH. Likewise it is not allowed to grant\nsublicences to third partys.</p>\n<p>## Acknowledgements\nThis open source software code was developed in part or in whole in the Human Brain Project, funded from the European\nUnion\u2019s Horizon 2020 Framework Programme for Research and Innovation under the Specific Grant Agreement No. 785907\n(Human Brain Project SGA2).</p>\n<p>## References\nEickhoff SB, Thirion B, Varoquaux G, Bzdok D (2015): Connectivity-based parcellation: Critique and implications.\nHum Brain Mapp 36:4771\u20134792.</p>\n<p>K\u00f6ster J, Rahmann S (2012): Snakemake\u2013a scalable bioinformatics workflow engine. Bioinformatics 28:2520\u20132522.</p>\n\n          </div>"}, "last_serial": 7106726, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "be45a6773457f563cb3100ed7c64ae3d", "sha256": "6a34763fbecf265b24e95d3288141de223fd0da1d2d25d7ca0bb7c735cede20b"}, "downloads": -1, "filename": "cbptools-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "be45a6773457f563cb3100ed7c64ae3d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 161438, "upload_time": "2019-09-06T18:18:29", "upload_time_iso_8601": "2019-09-06T18:18:29.868312Z", "url": "https://files.pythonhosted.org/packages/52/b2/be029e1478743c94b8c0ec12cfcda46b9c9dbcab2dda1accf55355de1b9b/cbptools-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a64639263074efc1f3e6f709641a670", "sha256": "78a01dc391f3a2d9fc9dd172cbaa426bdccd562b5d1c5cbf3aab833993800532"}, "downloads": -1, "filename": "cbptools-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7a64639263074efc1f3e6f709641a670", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 110466, "upload_time": "2019-09-06T18:18:33", "upload_time_iso_8601": "2019-09-06T18:18:33.099085Z", "url": "https://files.pythonhosted.org/packages/7c/e5/6a381a3ac038db3441ce40ca34a48d87982a0724bb93703a4ce11b428b36/cbptools-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "844900abfb1517dbdbcf135bf4cceb6c", "sha256": "3380d0a0d7a6f2095fd209c827e3b6781bf8361b4ce01b84c7a6017b19c501e1"}, "downloads": -1, "filename": "cbptools-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "844900abfb1517dbdbcf135bf4cceb6c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 178967, "upload_time": "2019-12-19T12:39:57", "upload_time_iso_8601": "2019-12-19T12:39:57.598783Z", "url": "https://files.pythonhosted.org/packages/4c/58/e65a6c372f5770659253514cd6b316531d8b301b3784e6044d616d0bf253/cbptools-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80dc8fb602e074ba7201ffb12f0cb974", "sha256": "ca2939370030472f825d9693efe527d7f4e68a5d5ad4d723fe520543ac499dd9"}, "downloads": -1, "filename": "cbptools-1.1.0.tar.gz", "has_sig": false, "md5_digest": "80dc8fb602e074ba7201ffb12f0cb974", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 125014, "upload_time": "2019-12-19T12:40:00", "upload_time_iso_8601": "2019-12-19T12:40:00.438787Z", "url": "https://files.pythonhosted.org/packages/1b/af/8abd67d12e6826242e05fd6a609c7f89d45311d11871e19de6db49b32e90/cbptools-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "644ad46bb0943729c06003ab4f3ac1ae", "sha256": "c0d81b4d0330ffd960117659103b0c591937cd6bee7fe15bf4f2ce4e062135bb"}, "downloads": -1, "filename": "cbptools-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "644ad46bb0943729c06003ab4f3ac1ae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 179781, "upload_time": "2020-01-14T12:19:05", "upload_time_iso_8601": "2020-01-14T12:19:05.181208Z", "url": "https://files.pythonhosted.org/packages/7f/5b/0d18abde171dcb061d56052c0294bbd40aedd5b6bfa44630ad095e9c5d97/cbptools-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eda3fd39696c4d22117d052c592f0111", "sha256": "a159241eb97a6b27d521f8cb28c8220dc1567b6d417edddae1c74a54c4bb0665"}, "downloads": -1, "filename": "cbptools-1.1.1.tar.gz", "has_sig": false, "md5_digest": "eda3fd39696c4d22117d052c592f0111", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 125934, "upload_time": "2020-01-14T12:19:08", "upload_time_iso_8601": "2020-01-14T12:19:08.627531Z", "url": "https://files.pythonhosted.org/packages/35/da/90391ac63a0cc67956fe7171e494b4b8fd3eba20338b25381ec91b6d930e/cbptools-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "6eda8c6b1f3ac10a9299467127780e5a", "sha256": "44f052e4c8cdfd798a3d20dd7241f6f4b3d14aa8ae5d96bb9d0c378f13168532"}, "downloads": -1, "filename": "cbptools-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6eda8c6b1f3ac10a9299467127780e5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 128685, "upload_time": "2020-03-13T12:44:54", "upload_time_iso_8601": "2020-03-13T12:44:54.444441Z", "url": "https://files.pythonhosted.org/packages/c2/42/50a82b8de6f97a55e3ef03a6f031c9e410bc456d0c05bcaee405756d383f/cbptools-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3869f30ce7a7788c6dbbf3aedee6ce20", "sha256": "124b012f7ef8dcc7b6b59f0cdeeaa6b885bfc85c3eef88e4ae1b227ec4af5856"}, "downloads": -1, "filename": "cbptools-1.1.2.tar.gz", "has_sig": false, "md5_digest": "3869f30ce7a7788c6dbbf3aedee6ce20", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 125987, "upload_time": "2020-03-13T12:44:56", "upload_time_iso_8601": "2020-03-13T12:44:56.338893Z", "url": "https://files.pythonhosted.org/packages/b9/b5/a00d54d19cfaf5956c97fd95d092f1ca7a1a03d9e71ff27419947cd36cb1/cbptools-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "29f55e2cfe85a3c7add665797312f1bc", "sha256": "3f303f25a909c334ebeb742527762112042776182b9ee5160b34270ea03bd558"}, "downloads": -1, "filename": "cbptools-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "29f55e2cfe85a3c7add665797312f1bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 128735, "upload_time": "2020-04-22T14:03:25", "upload_time_iso_8601": "2020-04-22T14:03:25.023957Z", "url": "https://files.pythonhosted.org/packages/f6/f2/80b00fe07dedd3f10f4403409543913d6d8ad0652f10bba6a44a397295b2/cbptools-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5f27d5818b3190ac50380976850326e", "sha256": "fea0c575dc8a8831db773eba32b492ee548361027125794aa27c3d19a9c00f18"}, "downloads": -1, "filename": "cbptools-1.1.3.tar.gz", "has_sig": false, "md5_digest": "c5f27d5818b3190ac50380976850326e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 123398, "upload_time": "2020-04-22T14:03:27", "upload_time_iso_8601": "2020-04-22T14:03:27.031556Z", "url": "https://files.pythonhosted.org/packages/94/1d/6006008b9ca1c821528c86aa822b0a1d8e9951d0d96e9e4f8155db376a53/cbptools-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "99bd79304720ef2d6497f50b5483661f", "sha256": "b346e42f6156000810e54d708530cc677ea1ac46698517b0d504ef97b284d540"}, "downloads": -1, "filename": "cbptools-1.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "99bd79304720ef2d6497f50b5483661f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 128736, "upload_time": "2020-04-26T20:20:39", "upload_time_iso_8601": "2020-04-26T20:20:39.642840Z", "url": "https://files.pythonhosted.org/packages/6a/84/c67d3d2d0a146b877a86d53da5681d547fc8754344a783d2ceb264a89541/cbptools-1.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e90f0b4b4dbec1850db1a5f98bf8b054", "sha256": "f1d46a0609438c4a3894c330abff50ead2c79dbe880dee5367fc6e0c14a76477"}, "downloads": -1, "filename": "cbptools-1.1.4.tar.gz", "has_sig": false, "md5_digest": "e90f0b4b4dbec1850db1a5f98bf8b054", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 123414, "upload_time": "2020-04-26T20:20:42", "upload_time_iso_8601": "2020-04-26T20:20:42.905264Z", "url": "https://files.pythonhosted.org/packages/a4/03/5987401ad94ab9d8b4269bae3b45be2760536241eacbf18b8b63673e8088/cbptools-1.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "99bd79304720ef2d6497f50b5483661f", "sha256": "b346e42f6156000810e54d708530cc677ea1ac46698517b0d504ef97b284d540"}, "downloads": -1, "filename": "cbptools-1.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "99bd79304720ef2d6497f50b5483661f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 128736, "upload_time": "2020-04-26T20:20:39", "upload_time_iso_8601": "2020-04-26T20:20:39.642840Z", "url": "https://files.pythonhosted.org/packages/6a/84/c67d3d2d0a146b877a86d53da5681d547fc8754344a783d2ceb264a89541/cbptools-1.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e90f0b4b4dbec1850db1a5f98bf8b054", "sha256": "f1d46a0609438c4a3894c330abff50ead2c79dbe880dee5367fc6e0c14a76477"}, "downloads": -1, "filename": "cbptools-1.1.4.tar.gz", "has_sig": false, "md5_digest": "e90f0b4b4dbec1850db1a5f98bf8b054", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 123414, "upload_time": "2020-04-26T20:20:42", "upload_time_iso_8601": "2020-04-26T20:20:42.905264Z", "url": "https://files.pythonhosted.org/packages/a4/03/5987401ad94ab9d8b4269bae3b45be2760536241eacbf18b8b63673e8088/cbptools-1.1.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:09 2020"}