{"info": {"author": "Balazs Gibizer", "author_email": "gibizer@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "A tool that applies the [Black](https://github.com/psf/black) python source\ncode formatter to a single piece of python source code instead of a whole\nfile or project.\n\nUsage\n-----\n``` schell script\n$ pip install blacken-selection\n$ blacken-selection -h\nusage: Apply the black code formatter for a piece of python source code\n\npositional arguments:\n  SOURCE                The python source code to be formatted. If not\n                        provided then source is read from stdin.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -l LINE_LENGTH, --line-length LINE_LENGTH\n                        How many characters per line to allow. [default: 88]\n$ blacken-selection \"def main(): pass\"\ndef main():\n    pass\n```\n\n\nUsage from PyCharm on linux\n---------------------------\nUnfortunately PyCharm External Tools cannot be used directly. The\n$SelectedText$ macro passes the selection as a command line argument to the\ntool but there is no way to properly quote a python string using double\nquotes.\n\nBut there is a solution:\n* Install the ```xclip``` command line tool, we will use it to grab the\ncode selection in PyCharm via the clipboard\n* Install blacken_selection as described above\n* Grab the simple shell script [blacken-selection-xclip.sh](https://raw.githubusercontent.com/gibizer/blacken_selection/master/blacken-selection-xclip.sh)\n\nSetup ```blacken-selection-xclip.sh``` as an external tool in PyCharm:\n```\nFile -> Settings -> Tools -> External Tools\n```\n\nClick the + icon to add a new external tool with the following values:\n```\n    Name: blacken\n    Description: Blacken a piece of python code\n    Program: <absolute path for your blacken-selection-xclip.sh>\n    Arguments:\n```\nSelect a piece of python source code in your editor and from the right click\ncontext menu select:\n```\nExternal Tools -> blacken\n```\nOr you can confiugre a shortcut (e.g. Shift+Alt+B) to trigger the tool in:\n```\nSettings -> Keymap-> External Tools -> blacken\n```\n\nThe tool will grab the selected text form the clipboard, format it with black,\nand the copy the formatted code back to the clipboard. So you can basically do\nthe ```select```, ```shift+alt+B```, ```insert``` in PyCharm to format a piece\nof python code with black.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gibizer/blacken_selection", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "blacken-selection", "package_url": "https://pypi.org/project/blacken-selection/", "platform": "", "project_url": "https://pypi.org/project/blacken-selection/", "project_urls": {"Homepage": "https://github.com/gibizer/blacken_selection"}, "release_url": "https://pypi.org/project/blacken-selection/0.2.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Apply black formatter for a piece of python source code", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A tool that applies the <a href=\"https://github.com/psf/black\" rel=\"nofollow\">Black</a> python source\ncode formatter to a single piece of python source code instead of a whole\nfile or project.</p>\n<h2>Usage</h2>\n<pre>$ pip install blacken-selection\n$ blacken-selection -h\nusage: Apply the black code formatter for a piece of python source code\n\npositional arguments:\n  SOURCE                The python source code to be formatted. If not\n                        provided then source is read from stdin.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -l LINE_LENGTH, --line-length LINE_LENGTH\n                        How many characters per line to allow. [default: 88]\n$ blacken-selection \"def main(): pass\"\ndef main():\n    pass\n</pre>\n<h2>Usage from PyCharm on linux</h2>\n<p>Unfortunately PyCharm External Tools cannot be used directly. The\n$SelectedText$ macro passes the selection as a command line argument to the\ntool but there is no way to properly quote a python string using double\nquotes.</p>\n<p>But there is a solution:</p>\n<ul>\n<li>Install the <code>xclip</code> command line tool, we will use it to grab the\ncode selection in PyCharm via the clipboard</li>\n<li>Install blacken_selection as described above</li>\n<li>Grab the simple shell script <a href=\"https://raw.githubusercontent.com/gibizer/blacken_selection/master/blacken-selection-xclip.sh\" rel=\"nofollow\">blacken-selection-xclip.sh</a></li>\n</ul>\n<p>Setup <code>blacken-selection-xclip.sh</code> as an external tool in PyCharm:</p>\n<pre><code>File -&gt; Settings -&gt; Tools -&gt; External Tools\n</code></pre>\n<p>Click the + icon to add a new external tool with the following values:</p>\n<pre><code>    Name: blacken\n    Description: Blacken a piece of python code\n    Program: &lt;absolute path for your blacken-selection-xclip.sh&gt;\n    Arguments:\n</code></pre>\n<p>Select a piece of python source code in your editor and from the right click\ncontext menu select:</p>\n<pre><code>External Tools -&gt; blacken\n</code></pre>\n<p>Or you can confiugre a shortcut (e.g. Shift+Alt+B) to trigger the tool in:</p>\n<pre><code>Settings -&gt; Keymap-&gt; External Tools -&gt; blacken\n</code></pre>\n<p>The tool will grab the selected text form the clipboard, format it with black,\nand the copy the formatted code back to the clipboard. So you can basically do\nthe <code>select</code>, <code>shift+alt+B</code>, <code>insert</code> in PyCharm to format a piece\nof python code with black.</p>\n\n          </div>"}, "last_serial": 6683701, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f85f8773ef654882609c4c03ada0d01c", "sha256": "6a1eb59ccc1877d2aeb775aefdb7a24946f87bdcc1e22b1bd1b2d34ea7afb66b"}, "downloads": -1, "filename": "blacken_selection-0.1.tar.gz", "has_sig": false, "md5_digest": "f85f8773ef654882609c4c03ada0d01c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2732, "upload_time": "2020-02-22T14:27:03", "upload_time_iso_8601": "2020-02-22T14:27:03.189227Z", "url": "https://files.pythonhosted.org/packages/10/ad/6ac6deed43a3b316866586a7156af55ae81d7c0d17d9389d5d55b8f196ad/blacken_selection-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f515d96644e907f2f0733fed3785a286", "sha256": "3fa028c3d99b33575dd78228fd17d2b4545f3a2109caf9393fb3de394994e4f8"}, "downloads": -1, "filename": "blacken_selection-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f515d96644e907f2f0733fed3785a286", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2757, "upload_time": "2020-02-22T14:35:16", "upload_time_iso_8601": "2020-02-22T14:35:16.250365Z", "url": "https://files.pythonhosted.org/packages/21/81/ee930ba18c479b6672b1e4b8cc627e83def81ac14ba49326406a85d8fca5/blacken_selection-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "518b45f48be8b209bc1f89de2a400046", "sha256": "d38027f7aa014f6c1babd58d7841672b63e7786a44785bffebcc923bdfd397a9"}, "downloads": -1, "filename": "blacken-selection-0.1.2.tar.gz", "has_sig": false, "md5_digest": "518b45f48be8b209bc1f89de2a400046", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3030, "upload_time": "2020-02-23T09:42:00", "upload_time_iso_8601": "2020-02-23T09:42:00.691654Z", "url": "https://files.pythonhosted.org/packages/b2/f4/6a9c61855e5cf3eca9fb4c591929b046de2e3c848251b0392a8f077eb1c1/blacken-selection-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c907bf73a6344285742ce2987bd8bd0e", "sha256": "2934b8bde75e604a863cc25d067303393acfbf6dafbbb73bfcd0dd32e5cef059"}, "downloads": -1, "filename": "blacken-selection-0.1.3.tar.gz", "has_sig": false, "md5_digest": "c907bf73a6344285742ce2987bd8bd0e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3009, "upload_time": "2020-02-23T10:10:09", "upload_time_iso_8601": "2020-02-23T10:10:09.704218Z", "url": "https://files.pythonhosted.org/packages/46/88/f71114495de8e3583501dd101496a576d0adc226ff85ca7969c7d97de53e/blacken-selection-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "52e462cde58094da24ad9dd726d8e369", "sha256": "2fc8ea108374da75cb648834d0731c713e1b33fb9eee26540150d04d4acc2e05"}, "downloads": -1, "filename": "blacken-selection-0.2.0.tar.gz", "has_sig": false, "md5_digest": "52e462cde58094da24ad9dd726d8e369", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3402, "upload_time": "2020-02-23T11:35:27", "upload_time_iso_8601": "2020-02-23T11:35:27.852033Z", "url": "https://files.pythonhosted.org/packages/eb/9b/5d3df571a9fec41878f287b91443565f9d7308c1518e7158c84086c8a532/blacken-selection-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "52e462cde58094da24ad9dd726d8e369", "sha256": "2fc8ea108374da75cb648834d0731c713e1b33fb9eee26540150d04d4acc2e05"}, "downloads": -1, "filename": "blacken-selection-0.2.0.tar.gz", "has_sig": false, "md5_digest": "52e462cde58094da24ad9dd726d8e369", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3402, "upload_time": "2020-02-23T11:35:27", "upload_time_iso_8601": "2020-02-23T11:35:27.852033Z", "url": "https://files.pythonhosted.org/packages/eb/9b/5d3df571a9fec41878f287b91443565f9d7308c1518e7158c84086c8a532/blacken-selection-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:10 2020"}