{"info": {"author": "Anas Mohamed", "author_email": "amohamed@ualberta.ca", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Streamable API Wrapper (SPAW)\nSPAW is an **Unoffical**   Streamable API wrapper for Python.  \n\n## Streamable API Documentation\nhttps://streamable.com/documentation\n\n## Requirments\nPython 3.5+  \n\nThe following modules are also used:\n```\nrequests\njson\n```\n\n## Usage\nInstall through pip  \n```\npip3 install spaw\n```  \nTo initialize an instance:  \n``` \nimport spaw  \n\nspaw.SPAW() \n```\n\n### Authentication\nStreamable uses Basic Auth for their API.  \n**As such the Streamable API requires Authentication to Upload/Import a video or to Retrieve a video in raw mp4 embed format.  \nOnly Retrieving a video in oEmbed format is allowed without Authentication.**  \nTo authenticate:\n```\nSPAW.auth(email, password)\n```  \nWhere the arguments are the email and password of your Streamable account.\n### Import a Video\nTakes in given URL of a video and imports/uploads it onto Streamable.  \n```\nSPAW.videoImport(url)\n```\nReturns JSON with Shortcode and Status\n```\n{'status': 1, 'shortcode': 'code'}\n```\nThe link to the video will be https://streamable.com/code\n\n### Upload a Video\nTakes in given filename for a video and uploads it onto Streamable.\n```\nSPAW.videoUpload(filename)\n```\nReturns JSON with Shortcode and Status just like importVideo()\n\n### Retrieve a Video\nRetrieves a Streamable video as embed code given the shortcode of video URL.  \nThe embed video can be retrieved as oEmbed or a raw mp4. by default set to 'raw'. \n```\nSPAW.retrieve(shortcode,format)\n```\nReturns JSON for the embed code for the video.  \nfor e.g.  \n`SPAW.retrieve('moo', 'oEmbed')`  \nReturns\n```\n{\"provider_url\": \"https://streamable.com\", \"html\": \"<iframe class=\\\"streamable-embed\\\" src=\\\"https://streamable.com/o/moo\\\" frameborder=\\\"0\\\" scrolling=\\\"no\\\" width=\\\"852\\\" height=\\\"480\\\" allowfullscreen></iframe>\", \"version\": \"1.0\", \"title\": \"\\\"Please don't eat me!\\\"\", \"type\": \"video\", \"provider_name\": \"Streamable\", \"thumbnail_url\": \"//images.streamable.com/west/image/f6441ae0c84311e4af010bc47400a0a4.jpg?height=100\", \"width\": 852, \"height\": 480}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/amohamed11/StreamablePythonAPIWrapper", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "spaw", "package_url": "https://pypi.org/project/spaw/", "platform": "", "project_url": "https://pypi.org/project/spaw/", "project_urls": {"Homepage": "https://github.com/amohamed11/StreamablePythonAPIWrapper"}, "release_url": "https://pypi.org/project/spaw/0.2/", "requires_dist": null, "requires_python": "", "summary": "SPAW is an Unofficial Streamable API Wrapper for Python", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Streamable API Wrapper (SPAW)</h1>\n<p>SPAW is an <strong>Unoffical</strong>   Streamable API wrapper for Python.</p>\n<h2>Streamable API Documentation</h2>\n<p><a href=\"https://streamable.com/documentation\" rel=\"nofollow\">https://streamable.com/documentation</a></p>\n<h2>Requirments</h2>\n<p>Python 3.5+</p>\n<p>The following modules are also used:</p>\n<pre><code>requests\njson\n</code></pre>\n<h2>Usage</h2>\n<p>Install through pip</p>\n<pre><code>pip3 install spaw\n</code></pre>\n<p>To initialize an instance:</p>\n<pre><code>import spaw  \n\nspaw.SPAW() \n</code></pre>\n<h3>Authentication</h3>\n<p>Streamable uses Basic Auth for their API.<br>\n<strong>As such the Streamable API requires Authentication to Upload/Import a video or to Retrieve a video in raw mp4 embed format.<br>\nOnly Retrieving a video in oEmbed format is allowed without Authentication.</strong><br>\nTo authenticate:</p>\n<pre><code>SPAW.auth(email, password)\n</code></pre>\n<p>Where the arguments are the email and password of your Streamable account.</p>\n<h3>Import a Video</h3>\n<p>Takes in given URL of a video and imports/uploads it onto Streamable.</p>\n<pre><code>SPAW.videoImport(url)\n</code></pre>\n<p>Returns JSON with Shortcode and Status</p>\n<pre><code>{'status': 1, 'shortcode': 'code'}\n</code></pre>\n<p>The link to the video will be <a href=\"https://streamable.com/code\" rel=\"nofollow\">https://streamable.com/code</a></p>\n<h3>Upload a Video</h3>\n<p>Takes in given filename for a video and uploads it onto Streamable.</p>\n<pre><code>SPAW.videoUpload(filename)\n</code></pre>\n<p>Returns JSON with Shortcode and Status just like importVideo()</p>\n<h3>Retrieve a Video</h3>\n<p>Retrieves a Streamable video as embed code given the shortcode of video URL.<br>\nThe embed video can be retrieved as oEmbed or a raw mp4. by default set to 'raw'.</p>\n<pre><code>SPAW.retrieve(shortcode,format)\n</code></pre>\n<p>Returns JSON for the embed code for the video.<br>\nfor e.g.<br>\n<code>SPAW.retrieve('moo', 'oEmbed')</code><br>\nReturns</p>\n<pre><code>{\"provider_url\": \"https://streamable.com\", \"html\": \"&lt;iframe class=\\\"streamable-embed\\\" src=\\\"https://streamable.com/o/moo\\\" frameborder=\\\"0\\\" scrolling=\\\"no\\\" width=\\\"852\\\" height=\\\"480\\\" allowfullscreen&gt;&lt;/iframe&gt;\", \"version\": \"1.0\", \"title\": \"\\\"Please don't eat me!\\\"\", \"type\": \"video\", \"provider_name\": \"Streamable\", \"thumbnail_url\": \"//images.streamable.com/west/image/f6441ae0c84311e4af010bc47400a0a4.jpg?height=100\", \"width\": 852, \"height\": 480}\n</code></pre>\n\n          </div>"}, "last_serial": 3950658, "releases": {"0.1.6": [{"comment_text": "", "digests": {"md5": "af02867c25407215122a3f48eeb390bd", "sha256": "9b1bcfc040bd323258f9c4555bde12d9271980c35b76923294dfcbcd8880685d"}, "downloads": -1, "filename": "spaw-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "af02867c25407215122a3f48eeb390bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3547, "upload_time": "2018-06-09T16:54:05", "upload_time_iso_8601": "2018-06-09T16:54:05.814232Z", "url": "https://files.pythonhosted.org/packages/fe/3e/54785db28fd3c1685e942d0be0e731df6fff9176803392c20165a5efaa5d/spaw-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bca403f48750b40c370f1aca324a8fec", "sha256": "9a26cc3fef23adad81ab5d7d5bac72f82ff88a9524175fc59e7928b5fb7743ad"}, "downloads": -1, "filename": "spaw-0.1.6.tar.gz", "has_sig": false, "md5_digest": "bca403f48750b40c370f1aca324a8fec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3030, "upload_time": "2018-06-09T16:54:08", "upload_time_iso_8601": "2018-06-09T16:54:08.289757Z", "url": "https://files.pythonhosted.org/packages/f4/c5/8737132024b35c19c7c1bd76074bb783ab39c24214dbd202a7669c171b90/spaw-0.1.6.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "06b0b5e9e008ae811a6e0245cd90e540", "sha256": "1464a85cd3d076f93cd2614c0bf008f13efb8afce6eae31c21567fddeb5fb55e"}, "downloads": -1, "filename": "spaw-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "06b0b5e9e008ae811a6e0245cd90e540", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3556, "upload_time": "2018-06-11T15:08:59", "upload_time_iso_8601": "2018-06-11T15:08:59.821682Z", "url": "https://files.pythonhosted.org/packages/26/9f/1e53dd544c78fb620e805a2c5a83192cd58c4897436ea00bf3f7c51d3e20/spaw-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a0a5dc0206d117ff8bada6c9ace676c", "sha256": "46533aecd210792011a630492b0ec640aac80585423175205f67079152a12333"}, "downloads": -1, "filename": "spaw-0.2.tar.gz", "has_sig": false, "md5_digest": "3a0a5dc0206d117ff8bada6c9ace676c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3038, "upload_time": "2018-06-11T15:09:00", "upload_time_iso_8601": "2018-06-11T15:09:00.579033Z", "url": "https://files.pythonhosted.org/packages/1c/aa/238ae79dec330da6258681b15a299d086deaadb77525421e89c46e95f63c/spaw-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "06b0b5e9e008ae811a6e0245cd90e540", "sha256": "1464a85cd3d076f93cd2614c0bf008f13efb8afce6eae31c21567fddeb5fb55e"}, "downloads": -1, "filename": "spaw-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "06b0b5e9e008ae811a6e0245cd90e540", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3556, "upload_time": "2018-06-11T15:08:59", "upload_time_iso_8601": "2018-06-11T15:08:59.821682Z", "url": "https://files.pythonhosted.org/packages/26/9f/1e53dd544c78fb620e805a2c5a83192cd58c4897436ea00bf3f7c51d3e20/spaw-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a0a5dc0206d117ff8bada6c9ace676c", "sha256": "46533aecd210792011a630492b0ec640aac80585423175205f67079152a12333"}, "downloads": -1, "filename": "spaw-0.2.tar.gz", "has_sig": false, "md5_digest": "3a0a5dc0206d117ff8bada6c9ace676c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3038, "upload_time": "2018-06-11T15:09:00", "upload_time_iso_8601": "2018-06-11T15:09:00.579033Z", "url": "https://files.pythonhosted.org/packages/1c/aa/238ae79dec330da6258681b15a299d086deaadb77525421e89c46e95f63c/spaw-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:45 2020"}