{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha"], "description": "=====\r\nImger\r\n=====\r\n\r\nImger is a client side resizing and placement tool for images.\r\nImages are stored in the settings.MEDIA_ROOT so settings.py needs to include:\r\nMEDIA_ROOT and MEDIA_URL\r\n\r\nQuick start\r\n-----------\r\n\r\n1. Add MEDIA_ROOT and MEDIA_URL to settings.py. something like::\r\n\r\n\tMEDIA_URL = '/media/'\r\n\tMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\r\n\r\n2. Make sure imger static files are in your static directory::\r\n\r\n\t/static/imger\r\n\r\n3. Add \"imger\" to your INSTALLED_APPS setting like this::\r\n\r\n    INSTALLED_APPS = (\r\n        ...\r\n        'imger',\r\n    )\r\n\r\n4. Import ImgerField into your model and create an ImgerField a model class::\r\n\r\n    from imger.fields import ImgerField\r\n\r\n\t...\r\n\timage_path = ImgerField(upload_to='testing', width=400, height=300, mime='image/jpg', quality=80)\r\n\r\n\tAll parameters are optional and default as follows:\r\n\r\n\tupload_to: settings.MEDIA_ROOT\r\n\twidth: 300\r\n\theight: 200\r\n\tmime: image/jpg\r\n\tquality: 100\r\n\r\n5. Start the development server and visit http://127.0.0.1:8000/admin/\r\n   Navigate to your model with the imger field and upolad an image\r\n   (you'll need the Admin app enabled).", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "django-imger", "package_url": "https://pypi.org/project/django-imger/", "platform": "", "project_url": "https://pypi.org/project/django-imger/", "project_urls": null, "release_url": "https://pypi.org/project/django-imger/1.1/", "requires_dist": null, "requires_python": null, "summary": "", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Imger is a client side resizing and placement tool for images.\nImages are stored in the settings.MEDIA_ROOT so settings.py needs to include:\nMEDIA_ROOT and MEDIA_URL</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li><p>Add MEDIA_ROOT and MEDIA_URL to settings.py. something like:</p>\n<pre>MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n</pre>\n</li>\n<li><p>Make sure imger static files are in your static directory:</p>\n<pre>/static/imger\n</pre>\n</li>\n<li><p>Add \u201cimger\u201d to your INSTALLED_APPS setting like this:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'imger',\n)\n</pre>\n</li>\n<li><p>Import ImgerField into your model and create an ImgerField a model class:</p>\n<pre>from imger.fields import ImgerField\n\n    ...\n    image_path = ImgerField(upload_to='testing', width=400, height=300, mime='image/jpg', quality=80)\n\n    All parameters are optional and default as follows:\n\n    upload_to: settings.MEDIA_ROOT\n    width: 300\n    height: 200\n    mime: image/jpg\n    quality: 100\n</pre>\n</li>\n<li><p>Start the development server and visit <a href=\"http://127.0.0.1:8000/admin/\" rel=\"nofollow\">http://127.0.0.1:8000/admin/</a>\nNavigate to your model with the imger field and upolad an image\n(you\u2019ll need the Admin app enabled).</p>\n</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 1469592, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "98d2a650726d6d891ddc3eff41fd2b7e", "sha256": "f8ea63a7722e121a6c7c9d67ac9ef5e82af8b8316281b9231eea25ac4082780d"}, "downloads": -1, "filename": "django-imger-0.1.tar.gz", "has_sig": false, "md5_digest": "98d2a650726d6d891ddc3eff41fd2b7e", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 173423, "upload_time": "2015-03-16T21:26:04", "upload_time_iso_8601": "2015-03-16T21:26:04.799528Z", "url": "https://files.pythonhosted.org/packages/78/ae/a16247578114c02fcb0ea57900ab8b8571b551408a63c157adc3551862f2/django-imger-0.1.tar.gz", "yanked": false}], "0.1": [], "0.2": [{"comment_text": "", "digests": {"md5": "9e290a97d9715c3265ffcd212c75a4c0", "sha256": "46005dca820adbbc76577cbb85c42082d54b048a3bb343a26508f68fdc177199"}, "downloads": -1, "filename": "django-imger-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9e290a97d9715c3265ffcd212c75a4c0", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 172899, "upload_time": "2015-03-17T18:49:34", "upload_time_iso_8601": "2015-03-17T18:49:34.510300Z", "url": "https://files.pythonhosted.org/packages/31/b6/1fe88def1f4742b0075e27e0ff1881d4712f77d3bba3c203f19980407d02/django-imger-0.2.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fc60d8a45efd11f49822a122f6e3435", "sha256": "524658030844bd66de8860b00327dc090e5535209f3c170c4ec64e63e447692f"}, "downloads": -1, "filename": "django-imger-0.2.2.tar.gz", "has_sig": false, "md5_digest": "8fc60d8a45efd11f49822a122f6e3435", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 174787, "upload_time": "2015-03-18T21:25:00", "upload_time_iso_8601": "2015-03-18T21:25:00.739418Z", "url": "https://files.pythonhosted.org/packages/0e/d9/146103146cd3b21a961f3055f3991cd31a4426a54bdb7c4443a408c7acb8/django-imger-0.2.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "50df1b2390d7304e096f8903d0296d4b", "sha256": "0df46c0cfb8ce7edb24b6499fd14ed68889003938df213af7a69d578c63d49dd"}, "downloads": -1, "filename": "django-imger-0.2.3.tar.gz", "has_sig": false, "md5_digest": "50df1b2390d7304e096f8903d0296d4b", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 176018, "upload_time": "2015-03-20T09:09:32", "upload_time_iso_8601": "2015-03-20T09:09:32.407993Z", "url": "https://files.pythonhosted.org/packages/b9/04/20dcb3ab2fc8eefe6552e735a928f5291cdc179a0d4abe900886a5edba61/django-imger-0.2.3.tar.gz", "yanked": false}], "1.1": []}, "urls": [], "timestamp": "Fri May  8 00:35:37 2020"}