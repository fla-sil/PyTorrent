{"info": {"author": "Ricardo Santos", "author_email": "ricardo.santos.diaz@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "==============\nAuth connector\n==============\n\nThe goal of this project is to have a reusable component that allow us to authenticate against a\nmicroservice for user management. This will take the JWT token that was send in the request\nAuthorization header and it will use it to retrieve the user information and store it in the\nlocal user database.\n\n\nQuick start\n-----------\n\n1. Install the project by doing ``pip install authconnector``\n2. Install the usual django migrations.\n3. Add the app to the django INSTALLED_APPS:\n    'remoteauth'\n\n3. Add the next configuration on the django settings:\n\nINMOBILIO_AUTHENTICATION_SERVICE = {\n'JWT_VALIDATION_URL': 'http://localhost:9000/auth/user'\n}\n\n4. Done :D\n\nYou can now retrieve the user within the request to your API endpoints.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Tibiritabara/django-auth-connector.git", "keywords": "", "license": "GNU Public License", "maintainer": "", "maintainer_email": "", "name": "authconnector", "package_url": "https://pypi.org/project/authconnector/", "platform": "", "project_url": "https://pypi.org/project/authconnector/", "project_urls": {"Homepage": "https://github.com/Tibiritabara/django-auth-connector.git"}, "release_url": "https://pypi.org/project/authconnector/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "This project contains the basic authentication against the remote JWT service.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The goal of this project is to have a reusable component that allow us to authenticate against a\nmicroservice for user management. This will take the JWT token that was send in the request\nAuthorization header and it will use it to retrieve the user information and store it in the\nlocal user database.</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li>Install the project by doing <tt>pip install authconnector</tt></li>\n<li>Install the usual django migrations.</li>\n<li><dl>\n<dt>Add the app to the django INSTALLED_APPS:</dt>\n<dd>\u2018remoteauth\u2019</dd>\n</dl>\n</li>\n</ol>\n<ol>\n<li>Add the next configuration on the django settings:</li>\n</ol>\n<p>INMOBILIO_AUTHENTICATION_SERVICE = {\n\u2018JWT_VALIDATION_URL\u2019: \u2018<a href=\"http://localhost:9000/auth/user\" rel=\"nofollow\">http://localhost:9000/auth/user</a>\u2019\n}</p>\n<ol>\n<li>Done :D</li>\n</ol>\n<p>You can now retrieve the user within the request to your API endpoints.</p>\n</div>\n\n          </div>"}, "last_serial": 5040882, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "46102a9ba9ba234fa7cf33adcdf11feb", "sha256": "dd8cef8b705a41c6e5baab28ca9659e5a5f71a5603d61fa334f145790dc30388"}, "downloads": -1, "filename": "authconnector-1.0.0.tar.gz", "has_sig": false, "md5_digest": "46102a9ba9ba234fa7cf33adcdf11feb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3678, "upload_time": "2019-04-01T20:03:10", "upload_time_iso_8601": "2019-04-01T20:03:10.694821Z", "url": "https://files.pythonhosted.org/packages/ab/82/5318836f91baf85c492c688fa49093bb8aeade37b42ad06397b7ca8a037e/authconnector-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "7237076e11d40b4fb70abfd87b3baafe", "sha256": "31a4c83426a74f9a6b644f7ee589a431ef60b92a17051ff76fe576e2ed9b0b4b"}, "downloads": -1, "filename": "authconnector-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7237076e11d40b4fb70abfd87b3baafe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3822, "upload_time": "2019-04-01T20:21:07", "upload_time_iso_8601": "2019-04-01T20:21:07.178746Z", "url": "https://files.pythonhosted.org/packages/a0/c2/dd1de8759ba9ed8086d8df8d4928a86e185ad4d95db5741b921810abcb34/authconnector-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7237076e11d40b4fb70abfd87b3baafe", "sha256": "31a4c83426a74f9a6b644f7ee589a431ef60b92a17051ff76fe576e2ed9b0b4b"}, "downloads": -1, "filename": "authconnector-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7237076e11d40b4fb70abfd87b3baafe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3822, "upload_time": "2019-04-01T20:21:07", "upload_time_iso_8601": "2019-04-01T20:21:07.178746Z", "url": "https://files.pythonhosted.org/packages/a0/c2/dd1de8759ba9ed8086d8df8d4928a86e185ad4d95db5741b921810abcb34/authconnector-1.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:23 2020"}