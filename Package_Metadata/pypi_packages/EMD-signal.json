{"info": {"author": "Dawid Laszuk", "author_email": "pyemd@dawid.lasz.uk", "bugtrack_url": null, "classifiers": ["Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Mathematics"], "description": "[![codecov](https://codecov.io/gh/laszukdawid/PyEMD/branch/master/graph/badge.svg)](https://codecov.io/gh/laszukdawid/PyEMD)\n[![BuildStatus](https://travis-ci.org/laszukdawid/PyEMD.png?branch=master)](https://travis-ci.org/laszukdawid/PyEMD)\n[![DocStatus](https://readthedocs.org/projects/pyemd/badge/?version=latest)](https://pyemd.readthedocs.io/)\n[![Codacy](https://api.codacy.com/project/badge/Grade/5385d5ddc8e84908bd4e38f325443a21)](https://www.codacy.com/app/laszukdawid/PyEMD?utm_source=github.com&utm_medium=referral&utm_content=laszukdawid/PyEMD&utm_campaign=badger)\n[![ko-fi](https://www.ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/A0A110NUD)\n\n# PyEMD\n\n## Links\n\n-   HTML documentation: <https://pyemd.readthedocs.org>\n-   Issue tracker: <https://github.com/laszukdawid/pyemd/issues>\n-   Source code repository: <https://github.com/laszukdawid/pyemd>\n\n## Introduction\n\nThis is yet another Python implementation of Empirical Mode\nDecomposition (EMD). The package contains many EMD variations and\nintends to deliver more in time.\n\n### EMD variations:\n* Ensemble EMD (EEMD),\n* \"Complete Ensemble EMD\" (CEEMDAN)\n* different settings and configurations of vanilla EMD.\n* Image decomposition (EMD2D & BEMD) (experimental, no support)\n\n*PyEMD* allows to use different splines for envelopes, stopping criteria\nand extrema interpolation.\n\n### Available splines:\n* Natural cubic [default]\n* Pointwise cubic\n* Akima\n* Linear\n\n### Available stopping criteria:\n* Cauchy convergence [default]\n* Fixed number of iterations\n* Number of consecutive proto-imfs\n\n### Extrema detection:\n* Discrete extrema [default]\n* Parabolic interpolation\n\n## Installation\n\n### Recommended\n\nSimply download this directory either directly from GitHub, or using\ncommand line:\n\n> \\$ git clone <https://github.com/laszukdawid/PyEMD>\n\nThen go into the downloaded project and run from command line:\n\n> \\$ python setup.py install\n\n### PyPi\n\nPackaged obtained from PyPi is/will be slightly behind this project, so\nsome features might not be the same. However, it seems to be the\neasiest/nicest way of installing any Python packages, so why not this\none?\n\n> \\$ pip install EMD-signal\n\n## Example\n\nMore detailed examples are included in the\n[documentation](https://pyemd.readthedocs.io/en/latest/examples.html) or\nin the\n[PyEMD/examples](https://github.com/laszukdawid/PyEMD/tree/master/example).\n\n### EMD\n\nIn most cases default settings are enough. Simply import `EMD` and pass\nyour signal to instance or to `emd()` method.\n\n```python\nfrom PyEMD import EMD\nimport numpy as np\n\ns = np.random.random(100)\nemd = EMD()\nIMFs = emd(s)\n```\n\nThe Figure below was produced with input:\n$S(t) = cos(22 \\pi t^2) + 6t^2$\n\n![simpleExample](https://github.com/laszukdawid/PyEMD/raw/master/example/simple_example.png?raw=true)\n\n### EEMD\n\nSimplest case of using Ensemble EMD (EEMD) is by importing `EEMD` and\npassing your signal to the instance or `eemd()` method.\n\n**Windows**: Please don't skip the `if __name__ == \"__main__\"` section. \n\n```python\nfrom PyEMD import EEMD\nimport numpy as np\n\nif __name__ == \"__main__\":\n    s = np.random.random(100)\n    eemd = EEMD()\n    eIMFs = eemd(s)\n```\n\n### CEEMDAN\n\nAs with previous methods, there is also simple way to use `CEEMDAN`.\n\n**Windows**: Please don't skip the `if __name__ == \"__main__\"` section. \n\n```python\nfrom PyEMD import CEEMDAN\nimport numpy as np\n\nif __name__ == \"__main__\":\n    s = np.random.random(100)\n    ceemdan = CEEMDAN()\n    cIMFs = ceemdan(s)\n```\n\n### Visualisation\n\nThe package contain a simple visualisation helper that can help, e.g., with time series and instantaneous frequencies.\n\n```python\nimport numpy as np\nfrom PyEMD import EMD, Visualisation\n\nt = np.arange(0, 3, 0.01)\nS = np.sin(13*t + 0.2*t**1.4) - np.cos(3*t)\n\n# Extract imfs and residue\n# In case of EMD\nemd = EMD()\nemd.emd(S)\nimfs, res = emd.get_imfs_and_residue()\n\n# In general:\n#components = EEMD()(S)\n#imfs, res = components[:-1], components[-1]\n\nvis = Visualisation()\nvis.plot_imfs(imfs=imfs, residue=res, t=t, include_residue=True)\nvis.plot_instant_freq(t, imfs=imfs)\nvis.show()\n```\n\n### EMD2D/BEMD\n\n*Unfortunately, this is Experimental and we can't guarantee that the output is meaningful.*\nThe simplest use is to pass image as monochromatic numpy 2D array. Sample as\nwith the other modules one can use the default setting of an instance or, more explicitly,\nuse the `emd2d()` method.\n\n```python\nfrom PyEMD.EMD2d import EMD2D  #, BEMD\nimport numpy as np\n\nx, y = np.arange(128), np.arange(128).reshape((-1,1))\nimg = np.sin(0.1*x)*np.cos(0.2*y)\nemd2d = EMD2D()  # BEMD() also works\nIMFs_2D = emd2d(img)\n```\n\n## F.A.Q\n\n### Why is EEMD/CEEMDAN so slow?\nUnfortunately, that's their nature. They execute EMD multiple times every time with slightly modified version. Added noise can cause a creation of many extrema which will decrease performance of the natural cubic spline. For some tweaks on how to deal with that please see [Speedup tricks](https://pyemd.readthedocs.io/en/latest/speedup_eemd.html) in the documentation.\n\n\n\n## Contact\n\nFeel free to contact me with any questions, requests or simply to say *hi*.\nIt's always nice to know that I've helped someone or made their work easier. \nContributing to the project is also acceptable and warmly welcomed.\n\nContact me either through gmail (laszukdawid @ gmail) or search me through your\nfavourite web search.\n\n### Citation\n\nIf you found this package useful and would like to cite it in your work\nplease use following structure:\n\nDawid Laszuk (2017-), **Python implementation of Empirical Mode\nDecomposition algorithm**. <http://www.laszukdawid.com/codes>.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/laszukdawid/PyEMD", "keywords": "signal decomposition data analysis", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "EMD-signal", "package_url": "https://pypi.org/project/EMD-signal/", "platform": "", "project_url": "https://pypi.org/project/EMD-signal/", "project_urls": {"Homepage": "https://github.com/laszukdawid/PyEMD"}, "release_url": "https://pypi.org/project/EMD-signal/0.2.9/", "requires_dist": ["numpy (>=1.12)", "numpydoc", "pathos (>=0.2.1)", "scipy (>=0.19)"], "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "summary": "Implementation of the Empirical Mode Decomposition (EMD) and its variations", "version": "0.2.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://codecov.io/gh/laszukdawid/PyEMD\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b7772d5be1ee4ea41bf7afff53ee4f058f969ae3/68747470733a2f2f636f6465636f762e696f2f67682f6c61737a756b64617769642f5079454d442f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://travis-ci.org/laszukdawid/PyEMD\" rel=\"nofollow\"><img alt=\"BuildStatus\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9250ecce3507240e084c20f522a6788796a5ecbc/68747470733a2f2f7472617669732d63692e6f72672f6c61737a756b64617769642f5079454d442e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pyemd.readthedocs.io/\" rel=\"nofollow\"><img alt=\"DocStatus\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/63cf53aa7fe64bc8914e49eb29905aadff4243e5/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7079656d642f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://www.codacy.com/app/laszukdawid/PyEMD?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=laszukdawid/PyEMD&amp;utm_campaign=badger\" rel=\"nofollow\"><img alt=\"Codacy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d9184e7a2dfeaced644fec4bd82e93c238b43aa/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3533383564356464633865383439303862643465333866333235343433613231\"></a>\n<a href=\"https://ko-fi.com/A0A110NUD\" rel=\"nofollow\"><img alt=\"ko-fi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/739b1f359fc797305c21d85dbf65d00930070b1e/68747470733a2f2f7777772e6b6f2d66692e636f6d2f696d672f676974687562627574746f6e5f736d2e737667\"></a></p>\n<h1>PyEMD</h1>\n<h2>Links</h2>\n<ul>\n<li>HTML documentation: <a href=\"https://pyemd.readthedocs.org\" rel=\"nofollow\">https://pyemd.readthedocs.org</a></li>\n<li>Issue tracker: <a href=\"https://github.com/laszukdawid/pyemd/issues\" rel=\"nofollow\">https://github.com/laszukdawid/pyemd/issues</a></li>\n<li>Source code repository: <a href=\"https://github.com/laszukdawid/pyemd\" rel=\"nofollow\">https://github.com/laszukdawid/pyemd</a></li>\n</ul>\n<h2>Introduction</h2>\n<p>This is yet another Python implementation of Empirical Mode\nDecomposition (EMD). The package contains many EMD variations and\nintends to deliver more in time.</p>\n<h3>EMD variations:</h3>\n<ul>\n<li>Ensemble EMD (EEMD),</li>\n<li>\"Complete Ensemble EMD\" (CEEMDAN)</li>\n<li>different settings and configurations of vanilla EMD.</li>\n<li>Image decomposition (EMD2D &amp; BEMD) (experimental, no support)</li>\n</ul>\n<p><em>PyEMD</em> allows to use different splines for envelopes, stopping criteria\nand extrema interpolation.</p>\n<h3>Available splines:</h3>\n<ul>\n<li>Natural cubic [default]</li>\n<li>Pointwise cubic</li>\n<li>Akima</li>\n<li>Linear</li>\n</ul>\n<h3>Available stopping criteria:</h3>\n<ul>\n<li>Cauchy convergence [default]</li>\n<li>Fixed number of iterations</li>\n<li>Number of consecutive proto-imfs</li>\n</ul>\n<h3>Extrema detection:</h3>\n<ul>\n<li>Discrete extrema [default]</li>\n<li>Parabolic interpolation</li>\n</ul>\n<h2>Installation</h2>\n<h3>Recommended</h3>\n<p>Simply download this directory either directly from GitHub, or using\ncommand line:</p>\n<blockquote>\n<p>$ git clone <a href=\"https://github.com/laszukdawid/PyEMD\" rel=\"nofollow\">https://github.com/laszukdawid/PyEMD</a></p>\n</blockquote>\n<p>Then go into the downloaded project and run from command line:</p>\n<blockquote>\n<p>$ python setup.py install</p>\n</blockquote>\n<h3>PyPi</h3>\n<p>Packaged obtained from PyPi is/will be slightly behind this project, so\nsome features might not be the same. However, it seems to be the\neasiest/nicest way of installing any Python packages, so why not this\none?</p>\n<blockquote>\n<p>$ pip install EMD-signal</p>\n</blockquote>\n<h2>Example</h2>\n<p>More detailed examples are included in the\n<a href=\"https://pyemd.readthedocs.io/en/latest/examples.html\" rel=\"nofollow\">documentation</a> or\nin the\n<a href=\"https://github.com/laszukdawid/PyEMD/tree/master/example\" rel=\"nofollow\">PyEMD/examples</a>.</p>\n<h3>EMD</h3>\n<p>In most cases default settings are enough. Simply import <code>EMD</code> and pass\nyour signal to instance or to <code>emd()</code> method.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">PyEMD</span> <span class=\"kn\">import</span> <span class=\"n\">EMD</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">emd</span> <span class=\"o\">=</span> <span class=\"n\">EMD</span><span class=\"p\">()</span>\n<span class=\"n\">IMFs</span> <span class=\"o\">=</span> <span class=\"n\">emd</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n</pre>\n<p>The Figure below was produced with input:\n$S(t) = cos(22 \\pi t^2) + 6t^2$</p>\n<p><img alt=\"simpleExample\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12192cbfbf804e19ba902257233cbea019167229/68747470733a2f2f6769746875622e636f6d2f6c61737a756b64617769642f5079454d442f7261772f6d61737465722f6578616d706c652f73696d706c655f6578616d706c652e706e673f7261773d74727565\"></p>\n<h3>EEMD</h3>\n<p>Simplest case of using Ensemble EMD (EEMD) is by importing <code>EEMD</code> and\npassing your signal to the instance or <code>eemd()</code> method.</p>\n<p><strong>Windows</strong>: Please don't skip the <code>if __name__ == \"__main__\"</code> section.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">PyEMD</span> <span class=\"kn\">import</span> <span class=\"n\">EEMD</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">eemd</span> <span class=\"o\">=</span> <span class=\"n\">EEMD</span><span class=\"p\">()</span>\n    <span class=\"n\">eIMFs</span> <span class=\"o\">=</span> <span class=\"n\">eemd</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n</pre>\n<h3>CEEMDAN</h3>\n<p>As with previous methods, there is also simple way to use <code>CEEMDAN</code>.</p>\n<p><strong>Windows</strong>: Please don't skip the <code>if __name__ == \"__main__\"</code> section.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">PyEMD</span> <span class=\"kn\">import</span> <span class=\"n\">CEEMDAN</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">ceemdan</span> <span class=\"o\">=</span> <span class=\"n\">CEEMDAN</span><span class=\"p\">()</span>\n    <span class=\"n\">cIMFs</span> <span class=\"o\">=</span> <span class=\"n\">ceemdan</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n</pre>\n<h3>Visualisation</h3>\n<p>The package contain a simple visualisation helper that can help, e.g., with time series and instantaneous frequencies.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">PyEMD</span> <span class=\"kn\">import</span> <span class=\"n\">EMD</span><span class=\"p\">,</span> <span class=\"n\">Visualisation</span>\n\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">)</span>\n<span class=\"n\">S</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"o\">*</span><span class=\"n\">t</span> <span class=\"o\">+</span> <span class=\"mf\">0.2</span><span class=\"o\">*</span><span class=\"n\">t</span><span class=\"o\">**</span><span class=\"mf\">1.4</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"n\">t</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Extract imfs and residue</span>\n<span class=\"c1\"># In case of EMD</span>\n<span class=\"n\">emd</span> <span class=\"o\">=</span> <span class=\"n\">EMD</span><span class=\"p\">()</span>\n<span class=\"n\">emd</span><span class=\"o\">.</span><span class=\"n\">emd</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">)</span>\n<span class=\"n\">imfs</span><span class=\"p\">,</span> <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">emd</span><span class=\"o\">.</span><span class=\"n\">get_imfs_and_residue</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># In general:</span>\n<span class=\"c1\">#components = EEMD()(S)</span>\n<span class=\"c1\">#imfs, res = components[:-1], components[-1]</span>\n\n<span class=\"n\">vis</span> <span class=\"o\">=</span> <span class=\"n\">Visualisation</span><span class=\"p\">()</span>\n<span class=\"n\">vis</span><span class=\"o\">.</span><span class=\"n\">plot_imfs</span><span class=\"p\">(</span><span class=\"n\">imfs</span><span class=\"o\">=</span><span class=\"n\">imfs</span><span class=\"p\">,</span> <span class=\"n\">residue</span><span class=\"o\">=</span><span class=\"n\">res</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"o\">=</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">include_residue</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">vis</span><span class=\"o\">.</span><span class=\"n\">plot_instant_freq</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">imfs</span><span class=\"o\">=</span><span class=\"n\">imfs</span><span class=\"p\">)</span>\n<span class=\"n\">vis</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<h3>EMD2D/BEMD</h3>\n<p><em>Unfortunately, this is Experimental and we can't guarantee that the output is meaningful.</em>\nThe simplest use is to pass image as monochromatic numpy 2D array. Sample as\nwith the other modules one can use the default setting of an instance or, more explicitly,\nuse the <code>emd2d()</code> method.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">PyEMD.EMD2d</span> <span class=\"kn\">import</span> <span class=\"n\">EMD2D</span>  <span class=\"c1\">#, BEMD</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"o\">*</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"o\">*</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">emd2d</span> <span class=\"o\">=</span> <span class=\"n\">EMD2D</span><span class=\"p\">()</span>  <span class=\"c1\"># BEMD() also works</span>\n<span class=\"n\">IMFs_2D</span> <span class=\"o\">=</span> <span class=\"n\">emd2d</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">)</span>\n</pre>\n<h2>F.A.Q</h2>\n<h3>Why is EEMD/CEEMDAN so slow?</h3>\n<p>Unfortunately, that's their nature. They execute EMD multiple times every time with slightly modified version. Added noise can cause a creation of many extrema which will decrease performance of the natural cubic spline. For some tweaks on how to deal with that please see <a href=\"https://pyemd.readthedocs.io/en/latest/speedup_eemd.html\" rel=\"nofollow\">Speedup tricks</a> in the documentation.</p>\n<h2>Contact</h2>\n<p>Feel free to contact me with any questions, requests or simply to say <em>hi</em>.\nIt's always nice to know that I've helped someone or made their work easier.\nContributing to the project is also acceptable and warmly welcomed.</p>\n<p>Contact me either through gmail (laszukdawid @ gmail) or search me through your\nfavourite web search.</p>\n<h3>Citation</h3>\n<p>If you found this package useful and would like to cite it in your work\nplease use following structure:</p>\n<p>Dawid Laszuk (2017-), <strong>Python implementation of Empirical Mode\nDecomposition algorithm</strong>. <a href=\"http://www.laszukdawid.com/codes\" rel=\"nofollow\">http://www.laszukdawid.com/codes</a>.</p>\n\n          </div>"}, "last_serial": 6997061, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "5865d60fd0e49a46bff535324d6a33e7", "sha256": "60dbb7dca1fbb57e138dd26317f2020846cb9f4c96859d63895ad71e5487639e"}, "downloads": -1, "filename": "EMD_signal-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5865d60fd0e49a46bff535324d6a33e7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30988, "upload_time": "2017-04-28T19:54:59", "upload_time_iso_8601": "2017-04-28T19:54:59.862614Z", "url": "https://files.pythonhosted.org/packages/d3/61/a0d0e941bc094f6510161652235c844e2ea87806ef2d021262d42078c809/EMD_signal-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29d8be804ce2a6d0dae82cc2d4028a1b", "sha256": "8568481e381bacfb2d6f1df7679b372005904267c8f2d9295bdf196a0119f5c6"}, "downloads": -1, "filename": "EMD-signal-0.1.1.tar.gz", "has_sig": false, "md5_digest": "29d8be804ce2a6d0dae82cc2d4028a1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29511, "upload_time": "2017-04-28T19:55:04", "upload_time_iso_8601": "2017-04-28T19:55:04.791773Z", "url": "https://files.pythonhosted.org/packages/a0/6b/4b6c83eb24ec7412ae8b12004e79152a7997ccf0877e0396a50b748dbd59/EMD-signal-0.1.1.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "cb23f19e71716eeec43e5a20aca98f31", "sha256": "4a089b8bd0879a600f5d0a0a04b28b0548039a67a2227ae8adf960b1fb5dc0d0"}, "downloads": -1, "filename": "EMD-signal-0.1.11.tar.gz", "has_sig": false, "md5_digest": "cb23f19e71716eeec43e5a20aca98f31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29431, "upload_time": "2017-05-10T09:31:08", "upload_time_iso_8601": "2017-05-10T09:31:08.609007Z", "url": "https://files.pythonhosted.org/packages/0c/ea/299f6383a2fda9088e28506a4a98a48f1b1385f7923ccb4bdceef121470f/EMD-signal-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "d5474f0648dcb6a48c01cbbc48651e83", "sha256": "f90fe96e4bff54bd41ca6cde667013ade9e66e7fdd61a3bab6e19f9974e746af"}, "downloads": -1, "filename": "EMD-signal-0.1.12.tar.gz", "has_sig": false, "md5_digest": "d5474f0648dcb6a48c01cbbc48651e83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29595, "upload_time": "2017-05-10T09:42:40", "upload_time_iso_8601": "2017-05-10T09:42:40.385863Z", "url": "https://files.pythonhosted.org/packages/31/bb/2403454defcf2a1acea9f9f169a6b71b0b93b9a565f983a758c3434c18fd/EMD-signal-0.1.12.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "3bae265cf7a8fbe7072efa420e278e26", "sha256": "5bae32364d8f4eb9cbc203ede8aec0f61e65696fd8bf4fd993fd3e16c31c8e18"}, "downloads": -1, "filename": "EMD_signal-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3bae265cf7a8fbe7072efa420e278e26", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36294, "upload_time": "2017-07-07T16:42:22", "upload_time_iso_8601": "2017-07-07T16:42:22.773119Z", "url": "https://files.pythonhosted.org/packages/9a/fb/b8e05f1d076c1d88ea004dbdc7121d575222ccd1ff5991451083d999e773/EMD_signal-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "422de24bb1b5e61ae35be5fef284c0de", "sha256": "10f0f53c4b402ae55d2ea0ebcf25a73a18965ccba8b4790ae9da6085c57bfcc4"}, "downloads": -1, "filename": "EMD-signal-0.2.1.tar.gz", "has_sig": false, "md5_digest": "422de24bb1b5e61ae35be5fef284c0de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34828, "upload_time": "2017-07-07T16:42:24", "upload_time_iso_8601": "2017-07-07T16:42:24.494919Z", "url": "https://files.pythonhosted.org/packages/dc/d2/e5f1c82d0800fbc6ac8d00c4d96314362b8f4ef5fc38c822cd51224eb18f/EMD-signal-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "9dfe6e01c96dc36ec7ca83a2bf72435e", "sha256": "5ecc2f2b1745a351c8bb4556467e6db057b5551eecd81199c9c13cb3ee6c6b4a"}, "downloads": -1, "filename": "EMD_signal-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9dfe6e01c96dc36ec7ca83a2bf72435e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36325, "upload_time": "2017-07-07T19:28:53", "upload_time_iso_8601": "2017-07-07T19:28:53.735667Z", "url": "https://files.pythonhosted.org/packages/49/86/7f317b04478e27d1ee062dce0ee6f131d10a5d3c29e5ed15d9bb714d4749/EMD_signal-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ba933dde5b9ce9fa4ade24eb56cf77d", "sha256": "9c117505448162176fa579e113a6901e1b9e53d44f4c09cb46e9f73d4468c303"}, "downloads": -1, "filename": "EMD-signal-0.2.2.tar.gz", "has_sig": false, "md5_digest": "5ba933dde5b9ce9fa4ade24eb56cf77d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34880, "upload_time": "2017-07-07T19:28:54", "upload_time_iso_8601": "2017-07-07T19:28:54.923272Z", "url": "https://files.pythonhosted.org/packages/3a/10/2ea7d2e082695847dd1505c3a57d9d8a40f15bb4000a8dd5cbed31a4fcd6/EMD-signal-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "16cde53646a31647cbec8bf39641a31b", "sha256": "c947c17dc952621c686529fc24c3f0d844f5dc44d0e98ec833d8268ea282daee"}, "downloads": -1, "filename": "EMD-signal-0.2.3.tar.gz", "has_sig": false, "md5_digest": "16cde53646a31647cbec8bf39641a31b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37004, "upload_time": "2017-10-21T16:54:00", "upload_time_iso_8601": "2017-10-21T16:54:00.670902Z", "url": "https://files.pythonhosted.org/packages/37/03/55d83cc2e1052bb352b4450ec41aad1e58aaddbadc32b8bbb28a99b2d011/EMD-signal-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "7498992fe451802115ba11a8a29dcfd1", "sha256": "4b1c9371b4f93e31c21c49746a56a36360f1c69cc8b8d3cb8fc18d0e610fe2de"}, "downloads": -1, "filename": "EMD-signal-0.2.4.tar.gz", "has_sig": false, "md5_digest": "7498992fe451802115ba11a8a29dcfd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41291, "upload_time": "2017-11-17T03:09:07", "upload_time_iso_8601": "2017-11-17T03:09:07.181520Z", "url": "https://files.pythonhosted.org/packages/e9/4b/869b30f74006fadc0c0190bed84acc19e0e96b757034b80c712d708439f9/EMD-signal-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "72913c3b786a1f6141eac4424ba63c04", "sha256": "ab2ac775eeaff4458f19fa07bf9b8fb689649eecfe05d6f1cc52d57c60dba19c"}, "downloads": -1, "filename": "EMD_signal-0.2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "72913c3b786a1f6141eac4424ba63c04", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 33218, "upload_time": "2018-05-08T04:25:22", "upload_time_iso_8601": "2018-05-08T04:25:22.319272Z", "url": "https://files.pythonhosted.org/packages/02/c1/01529164755df43a96e7bb08e06129aea27846efab4cc825f2bc8fa01f0c/EMD_signal-0.2.5-py2.py3-none-any.whl", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "30363d3f8e583a0e3846f50bea978f84", "sha256": "967a035bdfcb6836b6f84fe39feb11b09a9e76edbd2a6fb45dcdbd67c0722002"}, "downloads": -1, "filename": "EMD_signal-0.2.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "30363d3f8e583a0e3846f50bea978f84", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 35954, "upload_time": "2018-12-16T18:30:50", "upload_time_iso_8601": "2018-12-16T18:30:50.722404Z", "url": "https://files.pythonhosted.org/packages/10/8d/74c8737f76478852510ef7f83f7431266fc100344c2f6eeaa27be7e938fb/EMD_signal-0.2.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d596056aec8f9df94e423cdd4286018", "sha256": "ee32bf978fb61aa02e3b68d89b9eefabc8674eb9bb68bc32e50fce14b25e9da5"}, "downloads": -1, "filename": "EMD-signal-0.2.6.tar.gz", "has_sig": false, "md5_digest": "4d596056aec8f9df94e423cdd4286018", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 40912, "upload_time": "2018-12-16T18:32:22", "upload_time_iso_8601": "2018-12-16T18:32:22.986661Z", "url": "https://files.pythonhosted.org/packages/8f/08/9313243c9aff32f6778163a3cfdc3aa8d943c927797432f0a0a8f52ad821/EMD-signal-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "fd6e66e4ae2273ca6192a2eedf62b364", "sha256": "0c2e77115fff120c19cd33ef245afde0abd5bf9fd1dca9e42a844b40e678d824"}, "downloads": -1, "filename": "EMD_signal-0.2.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fd6e66e4ae2273ca6192a2eedf62b364", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 36307, "upload_time": "2019-05-25T03:06:08", "upload_time_iso_8601": "2019-05-25T03:06:08.532023Z", "url": "https://files.pythonhosted.org/packages/86/eb/b979a2e9f0b6eed816913731defaaaf5e9e26985dce9d33570dc08e94db9/EMD_signal-0.2.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83e67a4ec25c55893d2ca75ba2d47654", "sha256": "7e02fb3a1b2b1e5ef91766203688e5f890f9410741296f425dd743ea88123462"}, "downloads": -1, "filename": "EMD-signal-0.2.7.tar.gz", "has_sig": false, "md5_digest": "83e67a4ec25c55893d2ca75ba2d47654", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 41689, "upload_time": "2019-05-25T03:06:10", "upload_time_iso_8601": "2019-05-25T03:06:10.306670Z", "url": "https://files.pythonhosted.org/packages/64/5b/1722c387b7e89b2995dff058b5816fcc670858a126ccf739ba21e22971db/EMD-signal-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "af00257ce7e914596b3dab14106d8692", "sha256": "31462db52bdaef1ad5b7034991cf73483b79ddb09523266b657c1ff18cb9d690"}, "downloads": -1, "filename": "EMD_signal-0.2.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "af00257ce7e914596b3dab14106d8692", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 36557, "upload_time": "2020-02-22T17:20:34", "upload_time_iso_8601": "2020-02-22T17:20:34.411267Z", "url": "https://files.pythonhosted.org/packages/9e/71/f4aa64a1f2bba58f42aa6826e22329fbf38a3afc06d86b2eec2235eda3b2/EMD_signal-0.2.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7050396148c364240855b8f250abf48c", "sha256": "bdb8c114f20061462e48bcc4cfffc0bc93810b6bcc4f32b70775e5b9f8e7554d"}, "downloads": -1, "filename": "EMD-signal-0.2.8.tar.gz", "has_sig": false, "md5_digest": "7050396148c364240855b8f250abf48c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 41590, "upload_time": "2020-02-22T17:20:36", "upload_time_iso_8601": "2020-02-22T17:20:36.248454Z", "url": "https://files.pythonhosted.org/packages/f2/5b/766baa654fde048b2c5a5642ef4683a42e3173929e616a1013e9e74388bf/EMD-signal-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "161cb2c92ac07f7b83ac954fb2ad0940", "sha256": "589e4031c0845225918a7ab278b201f2ad09b24ecb08bf319b91203b495ddaab"}, "downloads": -1, "filename": "EMD_signal-0.2.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "161cb2c92ac07f7b83ac954fb2ad0940", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 39018, "upload_time": "2020-04-10T22:55:22", "upload_time_iso_8601": "2020-04-10T22:55:22.193840Z", "url": "https://files.pythonhosted.org/packages/a3/1b/1be9d4001e38897d105628b718a954430b63fb7472ba48dcc8f29f34e812/EMD_signal-0.2.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c781820cdbf3b8d4b44c11931ea784ed", "sha256": "1a7030b547c407b7aa9fe69763a9c11b8f1b690a0ecf000ecf9904847dd5bd01"}, "downloads": -1, "filename": "EMD-signal-0.2.9.tar.gz", "has_sig": false, "md5_digest": "c781820cdbf3b8d4b44c11931ea784ed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 45830, "upload_time": "2020-04-10T22:55:23", "upload_time_iso_8601": "2020-04-10T22:55:23.758108Z", "url": "https://files.pythonhosted.org/packages/04/9d/dcb6eba142e9a6cff10976aed16fb8b32819edbd74fadae7b3a64a5868ba/EMD-signal-0.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "161cb2c92ac07f7b83ac954fb2ad0940", "sha256": "589e4031c0845225918a7ab278b201f2ad09b24ecb08bf319b91203b495ddaab"}, "downloads": -1, "filename": "EMD_signal-0.2.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "161cb2c92ac07f7b83ac954fb2ad0940", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 39018, "upload_time": "2020-04-10T22:55:22", "upload_time_iso_8601": "2020-04-10T22:55:22.193840Z", "url": "https://files.pythonhosted.org/packages/a3/1b/1be9d4001e38897d105628b718a954430b63fb7472ba48dcc8f29f34e812/EMD_signal-0.2.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c781820cdbf3b8d4b44c11931ea784ed", "sha256": "1a7030b547c407b7aa9fe69763a9c11b8f1b690a0ecf000ecf9904847dd5bd01"}, "downloads": -1, "filename": "EMD-signal-0.2.9.tar.gz", "has_sig": false, "md5_digest": "c781820cdbf3b8d4b44c11931ea784ed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 45830, "upload_time": "2020-04-10T22:55:23", "upload_time_iso_8601": "2020-04-10T22:55:23.758108Z", "url": "https://files.pythonhosted.org/packages/04/9d/dcb6eba142e9a6cff10976aed16fb8b32819edbd74fadae7b3a64a5868ba/EMD-signal-0.2.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:39 2020"}