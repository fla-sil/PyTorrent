{"info": {"author": "Marc Brinkmann", "author_email": "git@marcbrinkmann.de", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "sqlacfg\n=======\n\nAllows you to store configuration in an SQLAlchemy_ database instead of\nconfiguration files. The API is close, but not exactly like ``configparser``\nand it plugs right into any application that is already using a declarative\nSQLAlchemy_ model:\n\n.. code-block::\n\n   # create a new model to hold the configuration items\n   class ConfigSetting(Base, ConfigSettingMixin):\n       __tablename__ = 'configuration'\n\n   # instantiate the model with your session\n   config = Config(ConfigSetting, session)\n\n   # now config sections will work like a regular dict\n   config['section_foo']['bar'] = 123\n\n   # values will be json-encoded before being stored (this can be changed)\n   # to persist changes, simply commit the session\n   session.commit()\n\n\nA full, minimal example is a bit more verbose due to the required initial\nsetup:\n\n\n.. code-block::\n\n   from sqlacfg import ConfigSettingMixin, Config\n   from sqlalchemy import create_engine\n   from sqlalchemy.ext.declarative import declarative_base\n   from sqlalchemy.orm import sessionmaker\n\n   Base = declarative_base()\n   Session = sessionmaker()\n\n   class ConfigSetting(Base, ConfigSettingMixin):\n       __tablename__ = 'configuration'\n\n\n   # for this demonstration, we just create the db in memory\n   eng = create_engine('sqlite:///:memory:', echo=True)\n   Base.metadata.create_all(eng)\n\n   session = sessionmaker(bind=eng)()\n\n   config = Config(ConfigSetting, session)\n\n   config['base']['foo'] = 'bar'\n   config['base']['baz'] = 'baz'\n\n   print dict(config['base'].iteritems())\n\n\n\n.. _SQLAlchemy: http://www.sqlalchemy.org/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mbr/sqlacfg", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "sqlacfg", "package_url": "https://pypi.org/project/sqlacfg/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/sqlacfg/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/mbr/sqlacfg"}, "release_url": "https://pypi.org/project/sqlacfg/0.3/", "requires_dist": null, "requires_python": null, "summary": "Stores configurations in a database instead of a file", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Allows you to store configuration in an <a href=\"http://www.sqlalchemy.org/\" rel=\"nofollow\">SQLAlchemy</a> database instead of\nconfiguration files. The API is close, but not exactly like <tt>configparser</tt>\nand it plugs right into any application that is already using a declarative\n<a href=\"http://www.sqlalchemy.org/\" rel=\"nofollow\">SQLAlchemy</a> model:</p>\n<pre># create a new model to hold the configuration items\nclass ConfigSetting(Base, ConfigSettingMixin):\n    __tablename__ = 'configuration'\n\n# instantiate the model with your session\nconfig = Config(ConfigSetting, session)\n\n# now config sections will work like a regular dict\nconfig['section_foo']['bar'] = 123\n\n# values will be json-encoded before being stored (this can be changed)\n# to persist changes, simply commit the session\nsession.commit()\n</pre>\n<p>A full, minimal example is a bit more verbose due to the required initial\nsetup:</p>\n<pre>from sqlacfg import ConfigSettingMixin, Config\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\n\nBase = declarative_base()\nSession = sessionmaker()\n\nclass ConfigSetting(Base, ConfigSettingMixin):\n    __tablename__ = 'configuration'\n\n\n# for this demonstration, we just create the db in memory\neng = create_engine('sqlite:///:memory:', echo=True)\nBase.metadata.create_all(eng)\n\nsession = sessionmaker(bind=eng)()\n\nconfig = Config(ConfigSetting, session)\n\nconfig['base']['foo'] = 'bar'\nconfig['base']['baz'] = 'baz'\n\nprint dict(config['base'].iteritems())\n</pre>\n\n          </div>"}, "last_serial": 1567671, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "2d214ac48bb8b96b743ae01b5f935583", "sha256": "2e565a9345e461bf3f22f59c90249912c9fc54403687cb047cef584236c4530c"}, "downloads": -1, "filename": "sqlacfg-0.2.tar.gz", "has_sig": true, "md5_digest": "2d214ac48bb8b96b743ae01b5f935583", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2549, "upload_time": "2015-05-28T22:02:35", "upload_time_iso_8601": "2015-05-28T22:02:35.181209Z", "url": "https://files.pythonhosted.org/packages/89/40/84c4d74c22d5cdd5d97ca74d6d878487e0cf974d3b6d8328b2982c4c07eb/sqlacfg-0.2.tar.gz", "yanked": false}], "0.2.dev1": [], "0.3": [{"comment_text": "", "digests": {"md5": "6e10b230b213e1b591f7a16549a36a89", "sha256": "595e3a6610fe29d6c31958eac39485335b57ecf890b07a7339cb9a199b5dd712"}, "downloads": -1, "filename": "sqlacfg-0.3.tar.gz", "has_sig": true, "md5_digest": "6e10b230b213e1b591f7a16549a36a89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3042, "upload_time": "2015-05-29T11:01:53", "upload_time_iso_8601": "2015-05-29T11:01:53.575754Z", "url": "https://files.pythonhosted.org/packages/b5/e2/ab90c015d58a33836dd3d13e3ce6328e98c324a34fbabfd1ee5d01b1df28/sqlacfg-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6e10b230b213e1b591f7a16549a36a89", "sha256": "595e3a6610fe29d6c31958eac39485335b57ecf890b07a7339cb9a199b5dd712"}, "downloads": -1, "filename": "sqlacfg-0.3.tar.gz", "has_sig": true, "md5_digest": "6e10b230b213e1b591f7a16549a36a89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3042, "upload_time": "2015-05-29T11:01:53", "upload_time_iso_8601": "2015-05-29T11:01:53.575754Z", "url": "https://files.pythonhosted.org/packages/b5/e2/ab90c015d58a33836dd3d13e3ce6328e98c324a34fbabfd1ee5d01b1df28/sqlacfg-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:02 2020"}