{"info": {"author": "Laurin Steidle", "author_email": "laurin.steidle@uni-hamburg.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering"], "description": "# General Ecosystem Modeling Framework\n\nGEMF is a ecosystem modelling framework written in python.\nIt is designed to offer an easy to use method for modelling ecosystems with low- to intermediate complexity.  \nThe framework offers the functionality to handle non-equilibrium, non-linear interactions.\nFor the typical use-cases, user do need to write any code but only provide a model configuration.\nThe use-cases can easily be extended with simple user written functions without needing to change any of the framework code.  \nThe framework offers an easy to use method that fits any parameter of the model to mimic the studied system.\nFor simplicity, the current version of the framework is limited to non-spatially resolved models (box-models).\n\n\n## Installation\n\n``` bash\npip install gemf\n```\n\n## Quick Start\n\nSee examples.py. For a set of exemplary framework configurations see [configuration_files](configuration_files/)\n\n\n## Usage\n\n\n``` python\nimport gemf as \n\n# A model configuration is defined in a yaml file. To read this file:\nmodel_config = gemf.load_configuration('path/to/model_configuration.yml')\n\n# To solve the time integration of this model call:\nforward_results = gemf.forward_model(model_config)\n# To also solve the inverse problem as defined in the configuration, call:\ninverse_results = gemf.inverse_model(model_config)\n\n# To plot the results call \ngemf.plot.output_summary(inverse_results)\n```\n\nFor details on the yaml configuration file, see [README_YAML.md](README_YAML.md)  \nThe presented functions offer many (crucial) options, which are discussed in the [documentation](doc/index.md).\n\n\n## How does it work?\n\nFor a conceptual description of the internals of this library, see [README_concept.md](README_concept.md)\n\n\n## Example\n\nA simple example might be a simple NPZD model as presented below:\n![interaction graph](doc/figures/network_diagram.svg \"Exemplary interaction graph\")\n\nThe user needs to define the compartments and interactions between them.\nIf the model should be fitted, they also need to provide some constraints and some data to fit it to.  \nAfter that the model automatically generates a graph to visualize the system and to find potential errors in the configuration.\n\nOnce the model is configured the framework handles the time integration as well as the fitting without any further required user-interaction.\n\n\nThe results of such a run might then look like the following:\n![exemplary results](doc/figures/exemplary_results.svg \"exemplary fit results\")\n\nTop left shows the cost of the current model configuration. The cost is a quadratic measure of distance of the current model to the desired model.\nTop right shows a output of the model after it reached its steady state for every parameter set tested.\nBottom left shows the all tested parameters sets.\nBottom right shows the full model output of the best fitted model found.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/465b/General-Ecosystem-Modeling-Framework/", "keywords": "ecosystem modelling framework inverse-modelling", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "gemf", "package_url": "https://pypi.org/project/gemf/", "platform": "", "project_url": "https://pypi.org/project/gemf/", "project_urls": {"Homepage": "https://github.com/465b/General-Ecosystem-Modeling-Framework/"}, "release_url": "https://pypi.org/project/gemf/0.2.3/", "requires_dist": null, "requires_python": "", "summary": "General Ecosystem Modelling Framework", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>General Ecosystem Modeling Framework</h1>\n<p>GEMF is a ecosystem modelling framework written in python.\nIt is designed to offer an easy to use method for modelling ecosystems with low- to intermediate complexity.<br>\nThe framework offers the functionality to handle non-equilibrium, non-linear interactions.\nFor the typical use-cases, user do need to write any code but only provide a model configuration.\nThe use-cases can easily be extended with simple user written functions without needing to change any of the framework code.<br>\nThe framework offers an easy to use method that fits any parameter of the model to mimic the studied system.\nFor simplicity, the current version of the framework is limited to non-spatially resolved models (box-models).</p>\n<h2>Installation</h2>\n<pre>pip install gemf\n</pre>\n<h2>Quick Start</h2>\n<p>See examples.py. For a set of exemplary framework configurations see <a href=\"configuration_files/\" rel=\"nofollow\">configuration_files</a></p>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">gemf</span> <span class=\"k\">as</span> \n\n<span class=\"c1\"># A model configuration is defined in a yaml file. To read this file:</span>\n<span class=\"n\">model_config</span> <span class=\"o\">=</span> <span class=\"n\">gemf</span><span class=\"o\">.</span><span class=\"n\">load_configuration</span><span class=\"p\">(</span><span class=\"s1\">'path/to/model_configuration.yml'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># To solve the time integration of this model call:</span>\n<span class=\"n\">forward_results</span> <span class=\"o\">=</span> <span class=\"n\">gemf</span><span class=\"o\">.</span><span class=\"n\">forward_model</span><span class=\"p\">(</span><span class=\"n\">model_config</span><span class=\"p\">)</span>\n<span class=\"c1\"># To also solve the inverse problem as defined in the configuration, call:</span>\n<span class=\"n\">inverse_results</span> <span class=\"o\">=</span> <span class=\"n\">gemf</span><span class=\"o\">.</span><span class=\"n\">inverse_model</span><span class=\"p\">(</span><span class=\"n\">model_config</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># To plot the results call </span>\n<span class=\"n\">gemf</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"o\">.</span><span class=\"n\">output_summary</span><span class=\"p\">(</span><span class=\"n\">inverse_results</span><span class=\"p\">)</span>\n</pre>\n<p>For details on the yaml configuration file, see <a href=\"README_YAML.md\" rel=\"nofollow\">README_YAML.md</a><br>\nThe presented functions offer many (crucial) options, which are discussed in the <a href=\"doc/index.md\" rel=\"nofollow\">documentation</a>.</p>\n<h2>How does it work?</h2>\n<p>For a conceptual description of the internals of this library, see <a href=\"README_concept.md\" rel=\"nofollow\">README_concept.md</a></p>\n<h2>Example</h2>\n<p>A simple example might be a simple NPZD model as presented below:\n<img alt=\"interaction graph\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7156cedbfbf6e0d2937cd97ec972e84b423f4b96/646f632f666967757265732f6e6574776f726b5f6469616772616d2e737667\"></p>\n<p>The user needs to define the compartments and interactions between them.\nIf the model should be fitted, they also need to provide some constraints and some data to fit it to.<br>\nAfter that the model automatically generates a graph to visualize the system and to find potential errors in the configuration.</p>\n<p>Once the model is configured the framework handles the time integration as well as the fitting without any further required user-interaction.</p>\n<p>The results of such a run might then look like the following:\n<img alt=\"exemplary results\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a872f35ea2ec19af097c74175c04bdf53f8da1c1/646f632f666967757265732f6578656d706c6172795f726573756c74732e737667\"></p>\n<p>Top left shows the cost of the current model configuration. The cost is a quadratic measure of distance of the current model to the desired model.\nTop right shows a output of the model after it reached its steady state for every parameter set tested.\nBottom left shows the all tested parameters sets.\nBottom right shows the full model output of the best fitted model found.</p>\n\n          </div>"}, "last_serial": 7109986, "releases": {"0.2.3": [{"comment_text": "", "digests": {"md5": "f70c331443cbdf6033a545185ed2e39a", "sha256": "0bae480e3c51bdf058199a111849167e48b19b548a6686835406e179b256cee4"}, "downloads": -1, "filename": "gemf-0.2.3a.tar.gz", "has_sig": false, "md5_digest": "f70c331443cbdf6033a545185ed2e39a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20402, "upload_time": "2020-04-27T08:58:00", "upload_time_iso_8601": "2020-04-27T08:58:00.844955Z", "url": "https://files.pythonhosted.org/packages/95/ba/a4e9c0067c308a0423d70de87b409510d6b7f153501f32eed5215a63338f/gemf-0.2.3a.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f70c331443cbdf6033a545185ed2e39a", "sha256": "0bae480e3c51bdf058199a111849167e48b19b548a6686835406e179b256cee4"}, "downloads": -1, "filename": "gemf-0.2.3a.tar.gz", "has_sig": false, "md5_digest": "f70c331443cbdf6033a545185ed2e39a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20402, "upload_time": "2020-04-27T08:58:00", "upload_time_iso_8601": "2020-04-27T08:58:00.844955Z", "url": "https://files.pythonhosted.org/packages/95/ba/a4e9c0067c308a0423d70de87b409510d6b7f153501f32eed5215a63338f/gemf-0.2.3a.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:31 2020"}