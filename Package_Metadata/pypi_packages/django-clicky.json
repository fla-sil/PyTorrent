{"info": {"author": "Joost Cassee", "author_email": "joost@cassee.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=============================\nClicky integration for Django\n=============================\n\nThe django-clicky application integrates Clicky_ analytics into a\nDjango_ project.\n\n.. _Clicky: http://getclicky.com/\n.. _Django: http://www.djangoproject.com\n\nOverview\n========\n\nClicky is an online web analytics tool.  It is similar to Google\nAnalytics in that it provides statistics on who is visiting your website\nand what they are doing.  Clicky provides its data in real time and is\ndesigned to be very easy to use.  This Django application provides a\ntemplate tag to add the tracking code to HTML templates.\n\n\nInstallation\n============\n\nTo install django-clicky, simply place the ``django_clicky``\npackage somewhere on the Python path.  The application is configured in\nthe project ``settings.py`` file.  In order to use the template tags,\nthe ``django_clicky`` package must be present in the\n``INSTALLED_APPS`` list::\n\n    INSTALLED_APPS = [\n        ...\n        'django_clicky',\n        ...\n    ]\n\nYou set your Clicky Site ID in the ``CLICKY_SITE_ID`` setting::\n\n    CLICKY_SITE_ID = '12345678'\n\n(You can find the Site ID in the Info tab of the website Preferences\npage on your Clicky account.)\n\n\nUsage\n=====\n\nThe django-clicky application currently provides one template tags that\ntracks visitor clicks.  In order to use the tag in a template, first\nload the django-clicky template library by adding\n``{% load clicky %}`` at the top.\n\n\nTracking visitor clicks\n-----------------------\n\nClicky uses Javascript to track every visitor click. The\n``track_clicky`` tag inserts the tracking code in the HTML page.  The\nClicky web pages recommend adding the code directly before the\nclosing ``</body>`` HTML tag::\n\n        ...\n        {% track_clicky %}\n    </body>\n    </html>\n\nThe Javascript code added by the template tag is asynchronous and works\non both plain HTTP and secure HTTPS pages.  It also contains\nfallback HTML code that uses ``<a>`` and ``<img>`` tags to track\nbrowsers with Javascript disabled.  If you want to skip this fallback\ncode (for example, if you want to add it to the HTML head section) you\ncan use the ``CLICKY_RENDER_NON_JS_CODE`` setting::\n\n    CLICKY_RENDER_NON_JS_CODE = False\n\nClicky data can be annotated with `custom properties`_.  The most\nobviously useful information is whether the visitor is a logged in user.\nThe ``track_clicky`` template tag will automatically provide Clicky with\nthe visitor username if a user has logged into Django.\n\n.. _`custom properties`: http://getclicky.com/help/customization\n\n.. note::\n\n    The template tag can only access the visitor username if the\n    Django user is present in the template context as the ``user``\n    variable.  You must either use a ``RequestContext`` and have the\n    ``django.contrib.auth.context_processors.auth`` context processor in\n    the ``TEMPLATE_CONTEXT_PROCESSORS`` setting (which is default), or\n    add this variable to the context yourself when you render the\n    template.\n\n\nIgnoring internal visitors\n--------------------------\n\nOften you do not want to track clicks from your development or internal\nIP addresses.  For this reason you can set the ``CLICKY_INTERNAL_IPS``\nto a list or tuple of addresses that the template tag will not be\nrendered on::\n\n    CLICKY_INTERNAL_IPS = ['192.168.45.2', '192.168.45.5']\n\nIf you already use the ``INTERNAL_IPS`` setting, you could set the\nclicky internal addreses to this value.  This will be the default from\nversion 2.0.0 upwards.\n\n.. note::\n\n    The template tag can only access the visitor IP address if the\n    HTTP request is present in the template context as the ``request``\n    variable.  For this reason, the ``CLICKY_INTERNAL_IPS`` settings\n    only works if you add this variable to the context yourself when you\n    render the template, or you use the ``RequestContext`` and add the\n    ``django.core.context_processors.request`` context processor to the\n    ``TEMPLATE_CONTEXT_PROCESSORS`` setting::\n\n        TEMPLATE_CONTEXT_PROCESSORS = [\n            ...\n            'django.core.context_processors.request',\n            ...\n        ]\n\n\nChangelog\n=========\n\n1.2.1\n    Stopped development.  Use the Clicky module in django-analytical_.\n\n1.2.0\n    Automatically track logged in users.\n\n1.1.0\n    Added the ``CLICKY_INTERNAL_IPS`` setting.\n\n1.0.0\n    Initial release.\n\n.. _django-analytical: http://packages.python.org/django-analytical", "description_content_type": null, "docs_url": null, "download_url": "http://github.com/jcassee/django-clicky/archives/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jcassee/django-clicky", "keywords": "django,analytics,clicky", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "django-clicky", "package_url": "https://pypi.org/project/django-clicky/", "platform": "any", "project_url": "https://pypi.org/project/django-clicky/", "project_urls": {"Download": "http://github.com/jcassee/django-clicky/archives/master", "Homepage": "http://github.com/jcassee/django-clicky"}, "release_url": "https://pypi.org/project/django-clicky/1.2.1/", "requires_dist": null, "requires_python": null, "summary": "Clicky analytics for Django projects", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The django-clicky application integrates <a href=\"http://getclicky.com/\" rel=\"nofollow\">Clicky</a> analytics into a\n<a href=\"http://www.djangoproject.com\" rel=\"nofollow\">Django</a> project.</p>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>Clicky is an online web analytics tool.  It is similar to Google\nAnalytics in that it provides statistics on who is visiting your website\nand what they are doing.  Clicky provides its data in real time and is\ndesigned to be very easy to use.  This Django application provides a\ntemplate tag to add the tracking code to HTML templates.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install django-clicky, simply place the <tt>django_clicky</tt>\npackage somewhere on the Python path.  The application is configured in\nthe project <tt>settings.py</tt> file.  In order to use the template tags,\nthe <tt>django_clicky</tt> package must be present in the\n<tt>INSTALLED_APPS</tt> list:</p>\n<pre>INSTALLED_APPS = [\n    ...\n    'django_clicky',\n    ...\n]\n</pre>\n<p>You set your Clicky Site ID in the <tt>CLICKY_SITE_ID</tt> setting:</p>\n<pre>CLICKY_SITE_ID = '12345678'\n</pre>\n<p>(You can find the Site ID in the Info tab of the website Preferences\npage on your Clicky account.)</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The django-clicky application currently provides one template tags that\ntracks visitor clicks.  In order to use the tag in a template, first\nload the django-clicky template library by adding\n<tt>{% load clicky %}</tt> at the top.</p>\n<div id=\"tracking-visitor-clicks\">\n<h3>Tracking visitor clicks</h3>\n<p>Clicky uses Javascript to track every visitor click. The\n<tt>track_clicky</tt> tag inserts the tracking code in the HTML page.  The\nClicky web pages recommend adding the code directly before the\nclosing <tt>&lt;/body&gt;</tt> HTML tag:</p>\n<pre>    ...\n    {% track_clicky %}\n&lt;/body&gt;\n&lt;/html&gt;\n</pre>\n<p>The Javascript code added by the template tag is asynchronous and works\non both plain HTTP and secure HTTPS pages.  It also contains\nfallback HTML code that uses <tt>&lt;a&gt;</tt> and <tt>&lt;img&gt;</tt> tags to track\nbrowsers with Javascript disabled.  If you want to skip this fallback\ncode (for example, if you want to add it to the HTML head section) you\ncan use the <tt>CLICKY_RENDER_NON_JS_CODE</tt> setting:</p>\n<pre>CLICKY_RENDER_NON_JS_CODE = False\n</pre>\n<p>Clicky data can be annotated with <a href=\"http://getclicky.com/help/customization\" rel=\"nofollow\">custom properties</a>.  The most\nobviously useful information is whether the visitor is a logged in user.\nThe <tt>track_clicky</tt> template tag will automatically provide Clicky with\nthe visitor username if a user has logged into Django.</p>\n<div>\n<p>Note</p>\n<p>The template tag can only access the visitor username if the\nDjango user is present in the template context as the <tt>user</tt>\nvariable.  You must either use a <tt>RequestContext</tt> and have the\n<tt>django.contrib.auth.context_processors.auth</tt> context processor in\nthe <tt>TEMPLATE_CONTEXT_PROCESSORS</tt> setting (which is default), or\nadd this variable to the context yourself when you render the\ntemplate.</p>\n</div>\n</div>\n<div id=\"ignoring-internal-visitors\">\n<h3>Ignoring internal visitors</h3>\n<p>Often you do not want to track clicks from your development or internal\nIP addresses.  For this reason you can set the <tt>CLICKY_INTERNAL_IPS</tt>\nto a list or tuple of addresses that the template tag will not be\nrendered on:</p>\n<pre>CLICKY_INTERNAL_IPS = ['192.168.45.2', '192.168.45.5']\n</pre>\n<p>If you already use the <tt>INTERNAL_IPS</tt> setting, you could set the\nclicky internal addreses to this value.  This will be the default from\nversion 2.0.0 upwards.</p>\n<div>\n<p>Note</p>\n<p>The template tag can only access the visitor IP address if the\nHTTP request is present in the template context as the <tt>request</tt>\nvariable.  For this reason, the <tt>CLICKY_INTERNAL_IPS</tt> settings\nonly works if you add this variable to the context yourself when you\nrender the template, or you use the <tt>RequestContext</tt> and add the\n<tt>django.core.context_processors.request</tt> context processor to the\n<tt>TEMPLATE_CONTEXT_PROCESSORS</tt> setting:</p>\n<pre>TEMPLATE_CONTEXT_PROCESSORS = [\n    ...\n    'django.core.context_processors.request',\n    ...\n]\n</pre>\n</div>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<dl>\n<dt>1.2.1</dt>\n<dd>Stopped development.  Use the Clicky module in <a href=\"http://packages.python.org/django-analytical\" rel=\"nofollow\">django-analytical</a>.</dd>\n<dt>1.2.0</dt>\n<dd>Automatically track logged in users.</dd>\n<dt>1.1.0</dt>\n<dd>Added the <tt>CLICKY_INTERNAL_IPS</tt> setting.</dd>\n<dt>1.0.0</dt>\n<dd>Initial release.</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 752887, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "373562c6f75f8bcaa220403fd4bd7486", "sha256": "c0415e80ca6dda139ce22403e37f638aee64027c384809b1c7d0a3045c07d605"}, "downloads": -1, "filename": "django-clicky-1.0.0.tar.gz", "has_sig": false, "md5_digest": "373562c6f75f8bcaa220403fd4bd7486", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4986, "upload_time": "2011-01-12T22:52:35", "upload_time_iso_8601": "2011-01-12T22:52:35.978220Z", "url": "https://files.pythonhosted.org/packages/bc/f2/5c9796673538ff1fc0fe544a879550a1671ff26faf6bab986632a10e5e1e/django-clicky-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "0dfce20f34272100fffd06702dbed34e", "sha256": "6b94d17163e4c9e99675e6b0fef2f797c6a415affb943b3267eb2007a28ab2fd"}, "downloads": -1, "filename": "django-clicky-1.1.0.tar.gz", "has_sig": false, "md5_digest": "0dfce20f34272100fffd06702dbed34e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5691, "upload_time": "2011-01-14T07:28:58", "upload_time_iso_8601": "2011-01-14T07:28:58.327280Z", "url": "https://files.pythonhosted.org/packages/ab/ee/dbf7a4aaf2de66d1f6e34da9ecc8875eb1d8d62c5b3b741f85b295136057/django-clicky-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "48e3fc85fe36e147a30efe60fee48dbf", "sha256": "96293575a971c74a6b89c76183c97a3e28ea836852c34ae972905a06d6f6f773"}, "downloads": -1, "filename": "django-clicky-1.2.0.tar.gz", "has_sig": false, "md5_digest": "48e3fc85fe36e147a30efe60fee48dbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6650, "upload_time": "2011-01-15T14:58:27", "upload_time_iso_8601": "2011-01-15T14:58:27.878503Z", "url": "https://files.pythonhosted.org/packages/81/38/ed981754a61105769525d78010af16c908c4352327bb5e490faddc726aa6/django-clicky-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "06b75abd1eefd239956f5740e93b5c84", "sha256": "366152da85f453c293f9d53ba750d4d6d4781f42bf956ad5fcf4823a85e8c5f7"}, "downloads": -1, "filename": "django-clicky-1.2.1.tar.gz", "has_sig": false, "md5_digest": "06b75abd1eefd239956f5740e93b5c84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6714, "upload_time": "2011-02-18T12:36:32", "upload_time_iso_8601": "2011-02-18T12:36:32.463556Z", "url": "https://files.pythonhosted.org/packages/ee/db/6710c06720dbc7bb45ea7930359789ebe344b69330185c0482df44aecac5/django-clicky-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "06b75abd1eefd239956f5740e93b5c84", "sha256": "366152da85f453c293f9d53ba750d4d6d4781f42bf956ad5fcf4823a85e8c5f7"}, "downloads": -1, "filename": "django-clicky-1.2.1.tar.gz", "has_sig": false, "md5_digest": "06b75abd1eefd239956f5740e93b5c84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6714, "upload_time": "2011-02-18T12:36:32", "upload_time_iso_8601": "2011-02-18T12:36:32.463556Z", "url": "https://files.pythonhosted.org/packages/ee/db/6710c06720dbc7bb45ea7930359789ebe344b69330185c0482df44aecac5/django-clicky-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:07 2020"}