{"info": {"author": "Alen Mujezinovic", "author_email": "flashingpumpkin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Environment :: MacOS X", "Environment :: Other Environment", "Environment :: Web Environment", "Environment :: X11 Applications", "Framework :: Django", "Framework :: Paste", "Framework :: Pylons", "Framework :: TurboGears", "Framework :: Twisted", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Communications", "Topic :: Communications :: Email", "Topic :: Database", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "====\nyell\n====\n\nPluggable notifications for your Python apps. \n\n`yell` is not a notification storage or delivery backend but a set of APIs that make it easy to add your own delivery mechanisms. \n\nThe full documentation is available `here <http://yell.readthedocs.org/en/latest/index.html>`_.\n\n\nUsing notification decorators\n-----------------------------\n\n::\n\n    from yell import notify\n    from yell.decorators import notification\n    \n    @notification(name = 'buffalo')\n    def buffalo_printer(message):\n        print message\n    \n    @notification(name = 'buffalo')\n    def buffalo_saver(message):\n        save(message)\n        \n    notify(\"buffalo\", _(\"Buffalo buffalo Buffalo buffalo buffalo buffalo Buffalo buffalo\"))\n\n\nUsing notification classes\n--------------------------\n\n::\n\n    from yell import Notification, notify\n\n    class Buffalo(Notification):\n        name = \"buffalo\"\n        message = _(\"Buffalo buffalo Buffalo buffalo buffalo buffalo Buffalo buffalo\")\n        \n        def notify(self, *args, **kwargs):\n            print self.message\n        \n    class BuffaloEmail(Buffalo):\n        def notify(self, *args, **kwargs):\n            send_mail(\"Buffalo\", self.message, 'buffalo@example.com', [kwargs.get('user').email])\n\n    class BuffaloDatabase(Buffalo):\n        def notify(self, *args, **kwargs):\n            BuffaloModel.objects.create(user = kwargs.get('user'))\n\n    # The default behaviour is to use every notification backend with the same \n    # name \n    notify(\"buffalo\", user = User.objects.get(id=1))\n\n    # Only send emails\n    notify(\"buffalo\", user = User.objects.get(id=1), backends = [BuffaloEmail])\n\n\nChangelog\n---------\n\n**v0.3**\n\n* *backwards incompatible* Guessing the file extension with the\n  ``mimetypes`` package proved to be inconsistent across systems.\n  ``TemplatedEmailBackend`` now makes use of explicitly declared file\n  extensions.\n\n**v0.2**\n\n* Made the API saner to use (*backwards incompatible*):  \n\n  - ``yell.Yell`` became ``yell.Notification``\n  - ``yell.yell`` became ``yell.notify``\n  - ``yell.decorators.yelling`` became ``yell.decorators.notification``", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/caffeinehit/yell", "keywords": "django flask celery user notifications yell buffalo", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "yell", "package_url": "https://pypi.org/project/yell/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/yell/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/caffeinehit/yell"}, "release_url": "https://pypi.org/project/yell/0.3.2/", "requires_dist": null, "requires_python": null, "summary": "User notification library with pluggable backends. Compatible with popular frameworks such as Django, Flask, Celery.", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Pluggable notifications for your Python apps.</p>\n<p><cite>yell</cite> is not a notification storage or delivery backend but a set of APIs that make it easy to add your own delivery mechanisms.</p>\n<p>The full documentation is available <a href=\"http://yell.readthedocs.org/en/latest/index.html\" rel=\"nofollow\">here</a>.</p>\n<div id=\"using-notification-decorators\">\n<h2>Using notification decorators</h2>\n<pre>from yell import notify\nfrom yell.decorators import notification\n\n@notification(name = 'buffalo')\ndef buffalo_printer(message):\n    print message\n\n@notification(name = 'buffalo')\ndef buffalo_saver(message):\n    save(message)\n\nnotify(\"buffalo\", _(\"Buffalo buffalo Buffalo buffalo buffalo buffalo Buffalo buffalo\"))\n</pre>\n</div>\n<div id=\"using-notification-classes\">\n<h2>Using notification classes</h2>\n<pre>from yell import Notification, notify\n\nclass Buffalo(Notification):\n    name = \"buffalo\"\n    message = _(\"Buffalo buffalo Buffalo buffalo buffalo buffalo Buffalo buffalo\")\n\n    def notify(self, *args, **kwargs):\n        print self.message\n\nclass BuffaloEmail(Buffalo):\n    def notify(self, *args, **kwargs):\n        send_mail(\"Buffalo\", self.message, 'buffalo@example.com', [kwargs.get('user').email])\n\nclass BuffaloDatabase(Buffalo):\n    def notify(self, *args, **kwargs):\n        BuffaloModel.objects.create(user = kwargs.get('user'))\n\n# The default behaviour is to use every notification backend with the same\n# name\nnotify(\"buffalo\", user = User.objects.get(id=1))\n\n# Only send emails\nnotify(\"buffalo\", user = User.objects.get(id=1), backends = [BuffaloEmail])\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p><strong>v0.3</strong></p>\n<ul>\n<li><em>backwards incompatible</em> Guessing the file extension with the\n<tt>mimetypes</tt> package proved to be inconsistent across systems.\n<tt>TemplatedEmailBackend</tt> now makes use of explicitly declared file\nextensions.</li>\n</ul>\n<p><strong>v0.2</strong></p>\n<ul>\n<li>Made the API saner to use (<em>backwards incompatible</em>):<ul>\n<li><tt>yell.Yell</tt> became <tt>yell.Notification</tt></li>\n<li><tt>yell.yell</tt> became <tt>yell.notify</tt></li>\n<li><tt>yell.decorators.yelling</tt> became <tt>yell.decorators.notification</tt></li>\n</ul>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 801950, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4bae276a4e002086d4c2dfa214e88b43", "sha256": "31f94fa5494141b087bf498933159c7671e7c8abae92f5aa1c342215e1fc379a"}, "downloads": -1, "filename": "yell-0.1.tar.gz", "has_sig": false, "md5_digest": "4bae276a4e002086d4c2dfa214e88b43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5933, "upload_time": "2012-04-05T15:23:01", "upload_time_iso_8601": "2012-04-05T15:23:01.192004Z", "url": "https://files.pythonhosted.org/packages/85/92/9ef2716664fab304eac40223468b5e29512615a46f34e9e310105b33b19e/yell-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "501c79eb08b2e0815f9186f2606771bf", "sha256": "1b0f87e49946d739030c29b24b4fe5e7e3c03a7434eee20e27594ef39dbcbd56"}, "downloads": -1, "filename": "yell-0.2.tar.gz", "has_sig": false, "md5_digest": "501c79eb08b2e0815f9186f2606771bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5499, "upload_time": "2012-06-29T17:18:07", "upload_time_iso_8601": "2012-06-29T17:18:07.033952Z", "url": "https://files.pythonhosted.org/packages/c6/e7/657d7e39bf8dfd38d6dc84289d080b16cd15836abf6950a5ec85f7ceb20a/yell-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "8f4f383b87304b479582fc2a39961d87", "sha256": "7fb838d5e1442fb76c172c735bca62a434cf7b9e762871b1f4e45b9b20120fe1"}, "downloads": -1, "filename": "yell-0.3.tar.gz", "has_sig": false, "md5_digest": "8f4f383b87304b479582fc2a39961d87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5802, "upload_time": "2012-07-02T15:49:36", "upload_time_iso_8601": "2012-07-02T15:49:36.188113Z", "url": "https://files.pythonhosted.org/packages/b7/c0/29a7a1c36a825a9e1ea7c8450d4c526fe26e4302445cc5ed51664074849a/yell-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "82ff3ae83834344d261267360b59ba3b", "sha256": "ac86247075d694e4192d17dc40f911646e8789725680e64d586f3a5acb7fc6ba"}, "downloads": -1, "filename": "yell-0.3.1.tar.gz", "has_sig": false, "md5_digest": "82ff3ae83834344d261267360b59ba3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5857, "upload_time": "2013-02-26T14:49:47", "upload_time_iso_8601": "2013-02-26T14:49:47.283080Z", "url": "https://files.pythonhosted.org/packages/74/06/54a7886e3d874d28ec320aecfd22eda01900dee903bae1e84d9b666af9a5/yell-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "c89b6cf3a68cfc56184bbd97c55c355d", "sha256": "5452b3b6470725716c1ab8f414e731cf570720e98c1c007c8b7b2dd6e6d6b785"}, "downloads": -1, "filename": "yell-0.3.2.tar.gz", "has_sig": false, "md5_digest": "c89b6cf3a68cfc56184bbd97c55c355d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5930, "upload_time": "2013-02-26T15:21:34", "upload_time_iso_8601": "2013-02-26T15:21:34.334630Z", "url": "https://files.pythonhosted.org/packages/c0/fb/6f703d73788adfba5294433b2693dc4fb5a1dfeb8ed80cdbb2cc44d9dfa8/yell-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c89b6cf3a68cfc56184bbd97c55c355d", "sha256": "5452b3b6470725716c1ab8f414e731cf570720e98c1c007c8b7b2dd6e6d6b785"}, "downloads": -1, "filename": "yell-0.3.2.tar.gz", "has_sig": false, "md5_digest": "c89b6cf3a68cfc56184bbd97c55c355d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5930, "upload_time": "2013-02-26T15:21:34", "upload_time_iso_8601": "2013-02-26T15:21:34.334630Z", "url": "https://files.pythonhosted.org/packages/c0/fb/6f703d73788adfba5294433b2693dc4fb5a1dfeb8ed80cdbb2cc44d9dfa8/yell-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:22:26 2020"}