{"info": {"author": "Chase Kelly", "author_email": "chase@microsearch.net", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# Chart Compare\n\n\nThis is meant to be a distributed package for use in allowing chart and graphical comparisons from numerically based django models.\n\nDetailed documentation is in the \"docs\" directory.\n\n## Quick start\n\n\n\n### Imports\n\n\n1. `from django_chart_compare import Utils`\n\nor:\n\n2. `from django_chart_compare import Compare`\n\n\n### Uses\n\n\nFor comparing base data from multiple parent models, you can use the compare module.\n\nImplementation example:\n\nviews.py:\n```python\nfrom django_chart_compare import Compare\nfrom django.views import generic\nfrom .models import Schedule\n...\nclass ComparisonGraphs(generic.TemplateView):\n\n    model = Schedule # your matrix model\n    template_name = 'app/multi.html'\n    context_object_name = 'chart'\n\n    def get_context_data(self, **kwargs):\n        context = super(ComparisonGraphs, self).get_context_data(**kwargs)\n        comp = Compare(Schedule, self.request, **kwargs)\n        script, div = comp.lane_comp_plotter()\n        context['html'] = comp.df.to_html()\n        context['col_dict'] = comp.col_dict\n        context['name_dict'] = comp.name_dict\n        context['script'] = script\n        context['div'] = div\n        context['schedule'] = Schedule.objects.get(pk=self.kwargs['pk'])\n        return context\n```\nurls.py:\n The view above needs   self.get_context_data() to receive kwargs of pk and slug, where pk is the id of the primary model\n and the slug is a string with dashes (\"-\") separating the id's of the comparison models.\n```python\n\nurl_patterns = [\n\n    ...\n\n    url(r'^schedule/(?P<pk>[0-9_]+)/compare/(?P<slug>[0-9]+(-[0-9]+)*)/more-reports/$',\n        views.ComparisonGraphs.as_view(), name='more-reports'),\n\n    # or if using path in django 2\n\n    path('test/<int:pk>/<slug:slug>/', ComparisonGraphs.as_view(), name='test'),\n\n    ]\n\n\n```\n\n\n\nAnd in app/multi.html:\n\n```djangotemplate\n<form action=\"\" method=\"GET\" class=\"form-horizontal\">\n    <!-- iterate through column values to list all possible selections for comparison -->\n    {% for pk, sched_columns in col_dict.items %}\n        <div class=\"ColumnLists\" >\n            {{ name_dict|get_item:pk }} <br>\n            <select class=\"ColumnLists\" size=\"{{ sched_columns|length }}\" name=\"{{ pk }}\">\n                {% for key, col in sched_columns.items %}\n                <option value=\"{{ key }}\" >\n                    <td>{{ col }}</td>\n                </option>\n                {% endfor %}\n            </select>\n        </div>\n    {% endfor %}\n</form>\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/chasek23/xml2pandas/archive/0.0.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chasek23/django-chart-compare", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-chart-compare", "package_url": "https://pypi.org/project/django-chart-compare/", "platform": "", "project_url": "https://pypi.org/project/django-chart-compare/", "project_urls": {"Documentation": "https://github.com/chasek23/django-chart-compare", "Download": "https://github.com/chasek23/xml2pandas/archive/0.0.0.tar.gz", "Funding": "https://microsearch.cloud/", "Homepage": "https://github.com/chasek23/django-chart-compare", "Say Thanks!": "http://chasekel.ly/", "Source": "https://github.com/chasek23/django-chart-compare", "Tracker": "https://github.com/chasek23/django-chart-compare/issues"}, "release_url": "https://pypi.org/project/django-chart-compare/1.0.4/", "requires_dist": ["pandas", "bokeh"], "requires_python": "", "summary": "Compare matrices in a django app", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Chart Compare</h1>\n<p>This is meant to be a distributed package for use in allowing chart and graphical comparisons from numerically based django models.</p>\n<p>Detailed documentation is in the \"docs\" directory.</p>\n<h2>Quick start</h2>\n<h3>Imports</h3>\n<ol>\n<li><code>from django_chart_compare import Utils</code></li>\n</ol>\n<p>or:</p>\n<ol>\n<li><code>from django_chart_compare import Compare</code></li>\n</ol>\n<h3>Uses</h3>\n<p>For comparing base data from multiple parent models, you can use the compare module.</p>\n<p>Implementation example:</p>\n<p>views.py:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_chart_compare</span> <span class=\"kn\">import</span> <span class=\"n\">Compare</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.views</span> <span class=\"kn\">import</span> <span class=\"n\">generic</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Schedule</span>\n<span class=\"o\">...</span>\n<span class=\"k\">class</span> <span class=\"nc\">ComparisonGraphs</span><span class=\"p\">(</span><span class=\"n\">generic</span><span class=\"o\">.</span><span class=\"n\">TemplateView</span><span class=\"p\">):</span>\n\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Schedule</span> <span class=\"c1\"># your matrix model</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s1\">'app/multi.html'</span>\n    <span class=\"n\">context_object_name</span> <span class=\"o\">=</span> <span class=\"s1\">'chart'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_context_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">ComparisonGraphs</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_context_data</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">comp</span> <span class=\"o\">=</span> <span class=\"n\">Compare</span><span class=\"p\">(</span><span class=\"n\">Schedule</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">script</span><span class=\"p\">,</span> <span class=\"n\">div</span> <span class=\"o\">=</span> <span class=\"n\">comp</span><span class=\"o\">.</span><span class=\"n\">lane_comp_plotter</span><span class=\"p\">()</span>\n        <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s1\">'html'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">comp</span><span class=\"o\">.</span><span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">to_html</span><span class=\"p\">()</span>\n        <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s1\">'col_dict'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">comp</span><span class=\"o\">.</span><span class=\"n\">col_dict</span>\n        <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s1\">'name_dict'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">comp</span><span class=\"o\">.</span><span class=\"n\">name_dict</span>\n        <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s1\">'script'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">script</span>\n        <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s1\">'div'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">div</span>\n        <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s1\">'schedule'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Schedule</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">pk</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s1\">'pk'</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">context</span>\n</pre>\n<p>urls.py:\nThe view above needs   self.get_context_data() to receive kwargs of pk and slug, where pk is the id of the primary model\nand the slug is a string with dashes (\"-\") separating the id's of the comparison models.</p>\n<pre><span class=\"n\">url_patterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n\n    <span class=\"o\">...</span>\n\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^schedule/(?P&lt;pk&gt;[0-9_]+)/compare/(?P&lt;slug&gt;[0-9]+(-[0-9]+)*)/more-reports/$'</span><span class=\"p\">,</span>\n        <span class=\"n\">views</span><span class=\"o\">.</span><span class=\"n\">ComparisonGraphs</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'more-reports'</span><span class=\"p\">),</span>\n\n    <span class=\"c1\"># or if using path in django 2</span>\n\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">'test/&lt;int:pk&gt;/&lt;slug:slug&gt;/'</span><span class=\"p\">,</span> <span class=\"n\">ComparisonGraphs</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">),</span>\n\n    <span class=\"p\">]</span>\n</pre>\n<p>And in app/multi.html:</p>\n<pre>&lt;form action=\"\" method=\"GET\" class=\"form-horizontal\"&gt;\n    &lt;!-- iterate through column values to list all possible selections for comparison --&gt;\n    {% for pk, sched_columns in col_dict.items %}\n        &lt;div class=\"ColumnLists\" &gt;\n            {{ name_dict|get_item:pk }} &lt;br&gt;\n            &lt;select class=\"ColumnLists\" size=\"{{ sched_columns|length }}\" name=\"{{ pk }}\"&gt;\n                {% for key, col in sched_columns.items %}\n                &lt;option value=\"{{ key }}\" &gt;\n                    &lt;td&gt;{{ col }}&lt;/td&gt;\n                &lt;/option&gt;\n                {% endfor %}\n            &lt;/select&gt;\n        &lt;/div&gt;\n    {% endfor %}\n&lt;/form&gt;\n</pre>\n\n          </div>"}, "last_serial": 5709240, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "44c83ea0faac3a30c1cc21ba955d906f", "sha256": "70302a7e4650b0fd37eec3af741a6b195c6efe91cd25ced66753472f139081dd"}, "downloads": -1, "filename": "django_chart_compare-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "44c83ea0faac3a30c1cc21ba955d906f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9771, "upload_time": "2019-07-11T11:59:39", "upload_time_iso_8601": "2019-07-11T11:59:39.778779Z", "url": "https://files.pythonhosted.org/packages/84/19/b98cd9c78f1bb6a718693ac90a99bf798418147d431771e4dee0eb636c53/django_chart_compare-1.0.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "5d651a9640370481e5f741439ead0e79", "sha256": "7ace338078714abe36b4bef44844b57d2d56842b7e387d467e042a5f57d75462"}, "downloads": -1, "filename": "django_chart_compare-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5d651a9640370481e5f741439ead0e79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9785, "upload_time": "2019-07-11T11:59:42", "upload_time_iso_8601": "2019-07-11T11:59:42.230991Z", "url": "https://files.pythonhosted.org/packages/45/6a/075941843c8539ce4b71d06993c4e8dfeaa50c33d25a91aeaccef03753c4/django_chart_compare-1.0.1-py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "e792ba1ded21f764825b14868850e890", "sha256": "7e2b7e7028534d28a9a7050fadc3195f54b783a4a66cdb0c3e6fce48d710b270"}, "downloads": -1, "filename": "django_chart_compare-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e792ba1ded21f764825b14868850e890", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4979, "upload_time": "2019-08-19T14:52:52", "upload_time_iso_8601": "2019-08-19T14:52:52.221902Z", "url": "https://files.pythonhosted.org/packages/52/54/9c348dd5e41b17f45b78b39f3efc890f45ec94169cdbe64c922099540f6b/django_chart_compare-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b78ad052f15754cf60946895a86efa82", "sha256": "9969b683cf11fecacfa6921070348d52bef214ec4e8e08b9176b9f779df07821"}, "downloads": -1, "filename": "django-chart-compare-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b78ad052f15754cf60946895a86efa82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4529, "upload_time": "2019-08-19T14:52:53", "upload_time_iso_8601": "2019-08-19T14:52:53.341532Z", "url": "https://files.pythonhosted.org/packages/2a/44/9eeefd79782e5e4f78c708f90fcaf8480986c0ec7b9debad5d38124fd516/django-chart-compare-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "cd576e33c265e6f7f0459a636df189ab", "sha256": "0ca55dfce45918bc6e3b2f2cb4fdfc720558fe67b21d9eb3ee005f48b90fbb12"}, "downloads": -1, "filename": "django_chart_compare-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "cd576e33c265e6f7f0459a636df189ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5818, "upload_time": "2019-08-19T15:34:15", "upload_time_iso_8601": "2019-08-19T15:34:15.321361Z", "url": "https://files.pythonhosted.org/packages/4e/1b/efa3e5a0a7f02f90a1edc75410658d62dd1f9d591836f48fea8175eb8d91/django_chart_compare-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "877c501ed6a22a98ec7e0641717d23ff", "sha256": "7a12c57e5fd9167bd0c95371d760e485d4d85d367293c3ff2a16bec58fb2d6ba"}, "downloads": -1, "filename": "django-chart-compare-1.0.3.tar.gz", "has_sig": false, "md5_digest": "877c501ed6a22a98ec7e0641717d23ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5563, "upload_time": "2019-08-19T15:34:16", "upload_time_iso_8601": "2019-08-19T15:34:16.892363Z", "url": "https://files.pythonhosted.org/packages/ca/0d/016a7cbdcda58ec33f0d899fe739e303bc70b18eafd7d41d033b08b2a815/django-chart-compare-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "25fd44aa100cdf9b5fed28b7e20dd372", "sha256": "fa10d64d60e6f61f5d2bb7352fad05a44d032a6aaedf64b726588ecd53dd4def"}, "downloads": -1, "filename": "django_chart_compare-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "25fd44aa100cdf9b5fed28b7e20dd372", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5818, "upload_time": "2019-08-21T11:59:05", "upload_time_iso_8601": "2019-08-21T11:59:05.541497Z", "url": "https://files.pythonhosted.org/packages/26/ec/477f1224af32ae4777daaf13f1272b390e82c27bed0d389f9e2514b6ccea/django_chart_compare-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c98ae95b32c30f632e2898e6f9636a3", "sha256": "3bc9c142bc2177b7aab614d33f3a8c0a74603a9580e71aadb38016b34e06da9b"}, "downloads": -1, "filename": "django-chart-compare-1.0.4.tar.gz", "has_sig": false, "md5_digest": "8c98ae95b32c30f632e2898e6f9636a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5555, "upload_time": "2019-08-21T11:59:07", "upload_time_iso_8601": "2019-08-21T11:59:07.108703Z", "url": "https://files.pythonhosted.org/packages/54/4e/f3b0ddfb4a15e72581b13cfe9b45433286999725214de3bd93a3b46f7932/django-chart-compare-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "25fd44aa100cdf9b5fed28b7e20dd372", "sha256": "fa10d64d60e6f61f5d2bb7352fad05a44d032a6aaedf64b726588ecd53dd4def"}, "downloads": -1, "filename": "django_chart_compare-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "25fd44aa100cdf9b5fed28b7e20dd372", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5818, "upload_time": "2019-08-21T11:59:05", "upload_time_iso_8601": "2019-08-21T11:59:05.541497Z", "url": "https://files.pythonhosted.org/packages/26/ec/477f1224af32ae4777daaf13f1272b390e82c27bed0d389f9e2514b6ccea/django_chart_compare-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c98ae95b32c30f632e2898e6f9636a3", "sha256": "3bc9c142bc2177b7aab614d33f3a8c0a74603a9580e71aadb38016b34e06da9b"}, "downloads": -1, "filename": "django-chart-compare-1.0.4.tar.gz", "has_sig": false, "md5_digest": "8c98ae95b32c30f632e2898e6f9636a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5555, "upload_time": "2019-08-21T11:59:07", "upload_time_iso_8601": "2019-08-21T11:59:07.108703Z", "url": "https://files.pythonhosted.org/packages/54/4e/f3b0ddfb4a15e72581b13cfe9b45433286999725214de3bd93a3b46f7932/django-chart-compare-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:11 2020"}