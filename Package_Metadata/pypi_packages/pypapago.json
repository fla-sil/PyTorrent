{"info": {"author": "Junbum Lee", "author_email": "jun@beomi.net", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pypapago [![codecov](https://codecov.io/gh/Beomi/pypapago/branch/master/graph/badge.svg)](https://codecov.io/gh/Beomi/pypapago)\n\nUnofficial python wrapper for [papago translate service](https://papago.naver.com).\n\n## Install\n\n```bash\npip install -U pypapago\n```\n\n## Usage\n\n### Basic usage (English to Korean)\n\n```python\nfrom pypapago import Translator\n\ntranslator = Translator()\n\nresult = translator.translate('I am GROOT')\nprint(result) # \ub098\ub294 \uadf8\ub8e8\ud2b8\ub2e4\n```\n\n### Set Source/Target Language\n\n```python\nfrom pypapago import Translator\n\ntranslator = Translator()\n\nresult = translator.translate(\n    '\uce74\uce74\uc624\ub294 \ud30c\ud30c\uace0\ub97c \uc88b\uc544\ud574',\n    source='ko',\n    target='en',\n)\nprint(result) # Kakao likes papago.\n```\n\n#### Supported Language Codes\n\nCode | Desc \n--|--\nko | Korean\nen | English\nja | Japanese\nzh-CN | Chinese\nzh-TW | Chinese traditional\nes | Spanish\nfr | French\nvi | Vietnamese\nth | Thai\nid | Indonesia\n\n\n### Bulk Translation\n\nParallel bulk translation with Multiprocessing.\n\n```python\nfrom pypapago import Translator\n\ntranslator = Translator()\n\nresult = translator.bulk_translate(['apple', 'banana'])\nprint(result) # ['\uc0ac\uacfc', '\ubc14\ub098\ub098']\n```\n\nYou can also set how many workers to run manually.\n\n(The more workers make your code faster but requires more system resources.)\n\nDefault to CPU Cores (HyperThreading = x2)\n\n- ex) Run with 2cores\n\n```python\nfrom pypapago import Translator\n\ntranslator = Translator()\n\nresult = translator.bulk_translate(\n    ['apple', 'banana'], \n    workers=2\n)\nprint(result) # ['\uc0ac\uacfc', '\ubc14\ub098\ub098']\n```\n\n### Verbose output\n\nIf you need raw result from papago API, you can set `verbose` to `True`.\n\n```python\nfrom pypapago import Translator\n\ntranslator = Translator()\n\nresult = translator.translate('I am GROOT', verbose=True)\nprint(result) # RAW JSON Result\n#{'delay': 400,\n# 'delaySmt': 400,\n# 'dict': {'items': [{'entry': '<b>I</b>',\n# ...\n# 'translatedText': '\ub098\ub294 \uadf8\ub8e8\ud2b8\ub2e4'}\n#}\n```\n\nDetail results may change.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Beomi/pypapago", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pypapago", "package_url": "https://pypi.org/project/pypapago/", "platform": "", "project_url": "https://pypi.org/project/pypapago/", "project_urls": {"Homepage": "https://github.com/Beomi/pypapago"}, "release_url": "https://pypi.org/project/pypapago/0.1.1.1/", "requires_dist": ["requests (<3)", "tqdm (<5)"], "requires_python": "", "summary": "[Unofficial] Python wrapper for Papago translation service", "version": "0.1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pypapago <a href=\"https://codecov.io/gh/Beomi/pypapago\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ceba032fad12f35dafd2d11105e62f85c1242a96/68747470733a2f2f636f6465636f762e696f2f67682f42656f6d692f707970617061676f2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></h1>\n<p>Unofficial python wrapper for <a href=\"https://papago.naver.com\" rel=\"nofollow\">papago translate service</a>.</p>\n<h2>Install</h2>\n<pre>pip install -U pypapago\n</pre>\n<h2>Usage</h2>\n<h3>Basic usage (English to Korean)</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pypapago</span> <span class=\"kn\">import</span> <span class=\"n\">Translator</span>\n\n<span class=\"n\">translator</span> <span class=\"o\">=</span> <span class=\"n\">Translator</span><span class=\"p\">()</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">translator</span><span class=\"o\">.</span><span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"s1\">'I am GROOT'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"c1\"># \ub098\ub294 \uadf8\ub8e8\ud2b8\ub2e4</span>\n</pre>\n<h3>Set Source/Target Language</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pypapago</span> <span class=\"kn\">import</span> <span class=\"n\">Translator</span>\n\n<span class=\"n\">translator</span> <span class=\"o\">=</span> <span class=\"n\">Translator</span><span class=\"p\">()</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">translator</span><span class=\"o\">.</span><span class=\"n\">translate</span><span class=\"p\">(</span>\n    <span class=\"s1\">'\uce74\uce74\uc624\ub294 \ud30c\ud30c\uace0\ub97c \uc88b\uc544\ud574'</span><span class=\"p\">,</span>\n    <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s1\">'ko'</span><span class=\"p\">,</span>\n    <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"s1\">'en'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"c1\"># Kakao likes papago.</span>\n</pre>\n<h4>Supported Language Codes</h4>\n<table>\n<thead>\n<tr>\n<th>Code</th>\n<th>Desc</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ko</td>\n<td>Korean</td>\n</tr>\n<tr>\n<td>en</td>\n<td>English</td>\n</tr>\n<tr>\n<td>ja</td>\n<td>Japanese</td>\n</tr>\n<tr>\n<td>zh-CN</td>\n<td>Chinese</td>\n</tr>\n<tr>\n<td>zh-TW</td>\n<td>Chinese traditional</td>\n</tr>\n<tr>\n<td>es</td>\n<td>Spanish</td>\n</tr>\n<tr>\n<td>fr</td>\n<td>French</td>\n</tr>\n<tr>\n<td>vi</td>\n<td>Vietnamese</td>\n</tr>\n<tr>\n<td>th</td>\n<td>Thai</td>\n</tr>\n<tr>\n<td>id</td>\n<td>Indonesia</td>\n</tr></tbody></table>\n<h3>Bulk Translation</h3>\n<p>Parallel bulk translation with Multiprocessing.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pypapago</span> <span class=\"kn\">import</span> <span class=\"n\">Translator</span>\n\n<span class=\"n\">translator</span> <span class=\"o\">=</span> <span class=\"n\">Translator</span><span class=\"p\">()</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">translator</span><span class=\"o\">.</span><span class=\"n\">bulk_translate</span><span class=\"p\">([</span><span class=\"s1\">'apple'</span><span class=\"p\">,</span> <span class=\"s1\">'banana'</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"c1\"># ['\uc0ac\uacfc', '\ubc14\ub098\ub098']</span>\n</pre>\n<p>You can also set how many workers to run manually.</p>\n<p>(The more workers make your code faster but requires more system resources.)</p>\n<p>Default to CPU Cores (HyperThreading = x2)</p>\n<ul>\n<li>ex) Run with 2cores</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pypapago</span> <span class=\"kn\">import</span> <span class=\"n\">Translator</span>\n\n<span class=\"n\">translator</span> <span class=\"o\">=</span> <span class=\"n\">Translator</span><span class=\"p\">()</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">translator</span><span class=\"o\">.</span><span class=\"n\">bulk_translate</span><span class=\"p\">(</span>\n    <span class=\"p\">[</span><span class=\"s1\">'apple'</span><span class=\"p\">,</span> <span class=\"s1\">'banana'</span><span class=\"p\">],</span> \n    <span class=\"n\">workers</span><span class=\"o\">=</span><span class=\"mi\">2</span>\n<span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"c1\"># ['\uc0ac\uacfc', '\ubc14\ub098\ub098']</span>\n</pre>\n<h3>Verbose output</h3>\n<p>If you need raw result from papago API, you can set <code>verbose</code> to <code>True</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pypapago</span> <span class=\"kn\">import</span> <span class=\"n\">Translator</span>\n\n<span class=\"n\">translator</span> <span class=\"o\">=</span> <span class=\"n\">Translator</span><span class=\"p\">()</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">translator</span><span class=\"o\">.</span><span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"s1\">'I am GROOT'</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"c1\"># RAW JSON Result</span>\n<span class=\"c1\">#{'delay': 400,</span>\n<span class=\"c1\"># 'delaySmt': 400,</span>\n<span class=\"c1\"># 'dict': {'items': [{'entry': '&lt;b&gt;I&lt;/b&gt;',</span>\n<span class=\"c1\"># ...</span>\n<span class=\"c1\"># 'translatedText': '\ub098\ub294 \uadf8\ub8e8\ud2b8\ub2e4'}</span>\n<span class=\"c1\">#}</span>\n</pre>\n<p>Detail results may change.</p>\n\n          </div>"}, "last_serial": 5501554, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e7028d147006b4c84a9f3ce505b8a339", "sha256": "ecb3e7993a29cbcdebbc031a84268431f7d2c990a30bf9ce8451e13d9203ffd1"}, "downloads": -1, "filename": "pypapago-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e7028d147006b4c84a9f3ce505b8a339", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3583, "upload_time": "2019-07-08T12:42:02", "upload_time_iso_8601": "2019-07-08T12:42:02.905577Z", "url": "https://files.pythonhosted.org/packages/8c/29/56382f4209641494ab6d9f863722c5be8ac4b98f834aab1e1005b295fcfe/pypapago-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "2109bae657838ab961ef75e54b02a4f3", "sha256": "a6d76ee1e8b11ca1ebdaf4576d501134923c05accf5e6dc47904828db3b76ca5"}, "downloads": -1, "filename": "pypapago-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2109bae657838ab961ef75e54b02a4f3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4501, "upload_time": "2019-07-08T14:53:06", "upload_time_iso_8601": "2019-07-08T14:53:06.707709Z", "url": "https://files.pythonhosted.org/packages/83/45/3381492fddc13a47fffc49374731414638d5e7312b0d9806361c8bcc45f7/pypapago-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.1.1": [{"comment_text": "", "digests": {"md5": "1143db02be2758ad6fc94dd5741752aa", "sha256": "b9ebf9fbfac27564206214f0d97c35e650b448511a7281952879d285c2e168c1"}, "downloads": -1, "filename": "pypapago-0.1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1143db02be2758ad6fc94dd5741752aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4529, "upload_time": "2019-07-08T15:00:18", "upload_time_iso_8601": "2019-07-08T15:00:18.398307Z", "url": "https://files.pythonhosted.org/packages/be/f1/49e134c97e03ad5b1161b8000624d85c3199c2d20f6f48a183a0767e6c2c/pypapago-0.1.1.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1143db02be2758ad6fc94dd5741752aa", "sha256": "b9ebf9fbfac27564206214f0d97c35e650b448511a7281952879d285c2e168c1"}, "downloads": -1, "filename": "pypapago-0.1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1143db02be2758ad6fc94dd5741752aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4529, "upload_time": "2019-07-08T15:00:18", "upload_time_iso_8601": "2019-07-08T15:00:18.398307Z", "url": "https://files.pythonhosted.org/packages/be/f1/49e134c97e03ad5b1161b8000624d85c3199c2d20f6f48a183a0767e6c2c/pypapago-0.1.1.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:59:57 2020"}