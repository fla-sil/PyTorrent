{"info": {"author": "W. Trevor King", "author_email": "wking@drexel.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Database", "Topic :: Scientific/Engineering :: Chemistry"], "description": ".. -*- coding: utf-8 -*-\n\nChemdb is a chemical inventory system written in Python_ using the\nDjango_ framework.  It makes it easy for us to keep track of what we\nhave in the lab.  It also generates the required safety information\nautomatically (door warnings and inventories).\n\nInstallation\n============\n\nPackages\n--------\n\nGentoo\n~~~~~~\n\nI've packaged chemdb for Gentoo_.  You need layman_ and my `wtk\noverlay`_.  Install with::\n\n    # emerge -av app-portage/layman\n    # layman --add wtk\n    # emerge -av dev-python/chemdb\n\nDependencies\n------------\n\nIf you're installing by hand or packaging calibcant for another\ndistribution, you'll need the following dependencies:\n\n===========  =================  ===================================\nPackage      Debian_            Gentoo_\n===========  =================  ===================================\nDjango_      python-django      dev-python/django\nGrappelli_                      dev-python/django-grappelli [#wtk]_\n===========  =================  ===================================\n\n.. [#wtk] In the `wtk overlay`_.\n\nInstalling by hand\n------------------\n\nChemdb is available as a Git_ repository::\n\n    $ git clone git://tremily.us/chemdb.git\n\nSee the homepage_ for details.  To install the checkout, run the\nstandard::\n\n    $ python setup.py install\n\nUsage\n=====\n\nSetup\n-----\n\nIf you don't have a Django project and you just want to run chemdb as\na stand-alone service, you can use the example project written up in\n``example``.  Set up the project (once)::\n\n  $ python example/manage.py syncdb\n\nSee the `Django documentation`_ for more details.\n\nYou may also want to load some example data, to make your initial\nbrowsing more interesting::\n\n  $ python example/manage.py loaddata example_data\n\nRunning\n-------\n\nRun the app on your local host (as many times as you like)::\n\n  $ python example/manage.py runserver\n\nYou may need to add the current directory to ``PYTHONPATH`` so\n``python`` can find the ``chemdb`` package.  If you're running\n``bash``, that will look like::\n\n  $ PYTHONPATH=\".:$PYTHONPATH\" python example/manage.py runserver\n\nHacking\n=======\n\nThis project was largely build following the `Django tutorial`_.\nThat's a good place to start if you're new to Django.\n\nOther resources\n===============\n\nYou can `search CAS Registry numbers`_ at NIST.  This is useful for\ndecoding MSDS information.\n\nNFPA fire diamond\n-----------------\n\nThese are the meanings of the various NFPA warnings:\n\n* Blue: Health Hazard\n\n  0. Hazard no greater than ordinary material\n  1. May cause irritation; minimal residual injury\n  2. Intense or prolonged exposure may cause incapacitation;\n     Residual injury may occur if not treated\n  3. Exposure could cause serious injury even if treated\n  4. Exposure may cause death\n\n* Red: Fire Hazard\n\n  0. Will not burn\n  1. Must be preheated for ignition; flashpoint above 200\u00b0F (93\u00b0C)\n  2. Must be moderately heated for ignition, flashpoint above 100\u00b0F (38\u00b0C)\n  3. Ignition may occur under most ambient conditions,\n     Flashpoint below 100\u00b0F (38\u00b0C)\n  4. Extremely flammable and will readily disperse through air under\n     standard conditions, flashpoint below 73\u00b0F (23\u00b0C)\n\n* Reactivity hazards:\n\n  0. Stable\n  1. May become unstable at elevated temperatures and pressures.\n     May be mildly water reactive\n  2. Unstable; may undergo violent decomposition, but will not detonate.\n     May form explosive mixtures with water\n  3. Detonates with strong ignition source\n  4. Readily detonates\n\n* Special Hazards have the following codes:\n\n  * OX   strong oxidizer\n  * W\u0336    water reactive\n  * SA   simple asphyxiants (The only gases for which this symbol is\n    permitted are nitrogen, helium, neon, argon, krypton, and xenon.)\n\nLicence\n=======\n\nThis project is distributed under the `GNU General Public License\nVersion 3`_ or greater.\n\nAuthor\n======\n\nW. Trevor King\nwking@drexel.edu\n\n.. _Python: http://www.python.org/\n.. _Django: https://www.djangoproject.com/\n.. _Gentoo: http://www.gentoo.org/\n.. _layman: http://layman.sourceforge.net/\n.. _wtk overlay: http://blog.tremily.us/posts/Gentoo_overlay/\n.. _Debian: http://www.debian.org/\n.. _Grappelli: https://github.com/sehmaschine/django-grappelli\n.. _Git: http://git-scm.com/\n.. _homepage: http://blog.tremily.us/posts/ChemDB/\n.. _Django documentation: https://docs.djangoproject.com/\n.. _Django tutorial: https://docs.djangoproject.com/en/1.3/intro/tutorial01/\n.. _search CAS Registry numbers:\n  http://webbook.nist.gov/chemistry/casf-ser.html\n.. _GNU General Public License Version 3: http://www.gnu.org/licenses/gpl.txt", "description_content_type": null, "docs_url": null, "download_url": "http://git.tremily.us/?p=chemdb.git;a=snapshot;h=0.5;sf=tgz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://blog.tremily.us/posts/ChemDB/", "keywords": null, "license": "GNU General Public License (GPL)", "maintainer": null, "maintainer_email": null, "name": "chemdb", "package_url": "https://pypi.org/project/chemdb/", "platform": "all", "project_url": "https://pypi.org/project/chemdb/", "project_urls": {"Download": "http://git.tremily.us/?p=chemdb.git;a=snapshot;h=0.5;sf=tgz", "Homepage": "http://blog.tremily.us/posts/ChemDB/"}, "release_url": "https://pypi.org/project/chemdb/0.5/", "requires_dist": null, "requires_python": null, "summary": "Track chemical inventories and produce inventories and door warnings.", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Chemdb is a chemical inventory system written in <a href=\"http://www.python.org/\" rel=\"nofollow\">Python</a> using the\n<a href=\"https://www.djangoproject.com/\" rel=\"nofollow\">Django</a> framework.  It makes it easy for us to keep track of what we\nhave in the lab.  It also generates the required safety information\nautomatically (door warnings and inventories).</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"packages\">\n<h3>Packages</h3>\n<h3 id=\"gentoo\"><span class=\"section-subtitle\">Gentoo</span></h3>\n<p>I\u2019ve packaged chemdb for <a href=\"http://www.gentoo.org/\" rel=\"nofollow\">Gentoo</a>.  You need <a href=\"http://layman.sourceforge.net/\" rel=\"nofollow\">layman</a> and my <a href=\"http://blog.tremily.us/posts/Gentoo_overlay/\" rel=\"nofollow\">wtk\noverlay</a>.  Install with:</p>\n<pre># emerge -av app-portage/layman\n# layman --add wtk\n# emerge -av dev-python/chemdb\n</pre>\n</div>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<p>If you\u2019re installing by hand or packaging calibcant for another\ndistribution, you\u2019ll need the following dependencies:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Package</th>\n<th><a href=\"http://www.debian.org/\" rel=\"nofollow\">Debian</a></th>\n<th><a href=\"http://www.gentoo.org/\" rel=\"nofollow\">Gentoo</a></th>\n</tr>\n</thead>\n<tbody>\n<tr><td><a href=\"https://www.djangoproject.com/\" rel=\"nofollow\">Django</a></td>\n<td>python-django</td>\n<td>dev-python/django</td>\n</tr>\n<tr><td><a href=\"https://github.com/sehmaschine/django-grappelli\" rel=\"nofollow\">Grappelli</a></td>\n<td>\u00a0</td>\n<td>dev-python/django-grappelli <a href=\"#wtk\" id=\"id1\" rel=\"nofollow\">[1]</a></td>\n</tr>\n</tbody>\n</table>\n<table id=\"wtk\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[1]</a></td><td>In the <a href=\"http://blog.tremily.us/posts/Gentoo_overlay/\" rel=\"nofollow\">wtk overlay</a>.</td></tr>\n</tbody>\n</table>\n</div>\n<div id=\"installing-by-hand\">\n<h3>Installing by hand</h3>\n<p>Chemdb is available as a <a href=\"http://git-scm.com/\" rel=\"nofollow\">Git</a> repository:</p>\n<pre>$ git clone git://tremily.us/chemdb.git\n</pre>\n<p>See the <a href=\"http://blog.tremily.us/posts/ChemDB/\" rel=\"nofollow\">homepage</a> for details.  To install the checkout, run the\nstandard:</p>\n<pre>$ python setup.py install\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"setup\">\n<h3>Setup</h3>\n<p>If you don\u2019t have a Django project and you just want to run chemdb as\na stand-alone service, you can use the example project written up in\n<tt>example</tt>.  Set up the project (once):</p>\n<pre>$ python example/manage.py syncdb\n</pre>\n<p>See the <a href=\"https://docs.djangoproject.com/\" rel=\"nofollow\">Django documentation</a> for more details.</p>\n<p>You may also want to load some example data, to make your initial\nbrowsing more interesting:</p>\n<pre>$ python example/manage.py loaddata example_data\n</pre>\n</div>\n<div id=\"running\">\n<h3>Running</h3>\n<p>Run the app on your local host (as many times as you like):</p>\n<pre>$ python example/manage.py runserver\n</pre>\n<p>You may need to add the current directory to <tt>PYTHONPATH</tt> so\n<tt>python</tt> can find the <tt>chemdb</tt> package.  If you\u2019re running\n<tt>bash</tt>, that will look like:</p>\n<pre>$ PYTHONPATH=\".:$PYTHONPATH\" python example/manage.py runserver\n</pre>\n</div>\n</div>\n<div id=\"hacking\">\n<h2>Hacking</h2>\n<p>This project was largely build following the <a href=\"https://docs.djangoproject.com/en/1.3/intro/tutorial01/\" rel=\"nofollow\">Django tutorial</a>.\nThat\u2019s a good place to start if you\u2019re new to Django.</p>\n</div>\n<div id=\"other-resources\">\n<h2>Other resources</h2>\n<p>You can <a href=\"http://webbook.nist.gov/chemistry/casf-ser.html\" rel=\"nofollow\">search CAS Registry numbers</a> at NIST.  This is useful for\ndecoding MSDS information.</p>\n<div id=\"nfpa-fire-diamond\">\n<h3>NFPA fire diamond</h3>\n<p>These are the meanings of the various NFPA warnings:</p>\n<ul>\n<li>Blue: Health Hazard<ol>\n<li>Hazard no greater than ordinary material</li>\n<li>May cause irritation; minimal residual injury</li>\n<li>Intense or prolonged exposure may cause incapacitation;\nResidual injury may occur if not treated</li>\n<li>Exposure could cause serious injury even if treated</li>\n<li>Exposure may cause death</li>\n</ol>\n</li>\n<li>Red: Fire Hazard<ol>\n<li>Will not burn</li>\n<li>Must be preheated for ignition; flashpoint above 200\u00b0F (93\u00b0C)</li>\n<li>Must be moderately heated for ignition, flashpoint above 100\u00b0F (38\u00b0C)</li>\n<li>Ignition may occur under most ambient conditions,\nFlashpoint below 100\u00b0F (38\u00b0C)</li>\n<li>Extremely flammable and will readily disperse through air under\nstandard conditions, flashpoint below 73\u00b0F (23\u00b0C)</li>\n</ol>\n</li>\n<li>Reactivity hazards:<ol>\n<li>Stable</li>\n<li>May become unstable at elevated temperatures and pressures.\nMay be mildly water reactive</li>\n<li>Unstable; may undergo violent decomposition, but will not detonate.\nMay form explosive mixtures with water</li>\n<li>Detonates with strong ignition source</li>\n<li>Readily detonates</li>\n</ol>\n</li>\n<li>Special Hazards have the following codes:<ul>\n<li>OX   strong oxidizer</li>\n<li>W\u0336    water reactive</li>\n<li>SA   simple asphyxiants (The only gases for which this symbol is\npermitted are nitrogen, helium, neon, argon, krypton, and xenon.)</li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p>This project is distributed under the <a href=\"http://www.gnu.org/licenses/gpl.txt\" rel=\"nofollow\">GNU General Public License\nVersion 3</a> or greater.</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>W. Trevor King\n<a href=\"mailto:wking%40drexel.edu\">wking<span>@</span>drexel<span>.</span>edu</a></p>\n</div>\n\n          </div>"}, "last_serial": 399200, "releases": {"0.5": []}, "urls": [], "timestamp": "Thu May  7 22:19:40 2020"}