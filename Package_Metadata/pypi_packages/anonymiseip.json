{"info": {"author": "Robert Collins", "author_email": "robert.collins@canonical.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "****************************************************\nanonymiseip: A web service to anonymise IP addresses\n****************************************************\n\n    Copyright (c) 2011, Canonical Ltd\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  \nanonymiseip anonymises IPv4 addresses using the MaxMind GeoIP database. Source\naddresses are mapped to country level, then assigned a different address from\nwithin that pool. To avoid known address back-mapping, the source address is\nhashed, and the hash taken mod pool-size to pick the new address. As IPv4\naddress space is very small, this is still vulnerable to brute forcing - its\nfeasible to generate every single mapping, and if a single mapping is found it\nwould be possible to cater for salted hashes as well. As such, this is not\nsuitable for protecting against malicious attacks, it is however suitable to\nuse when ensuring employees do not have casual access to the IP address from\nweblogs, which count as personally identifying information, while still\ngiving employees access to the same logs so they can look at usage patterns\nand troubleshoot slow requests etc.\n\nTo anonymise an IPv4 address, perform a GET to /ipv4/x.y.z.a, the response\nwill be a 200 OK + the new ip address, or a 5xx error.\n\nDependencies\n============\n\n* Python 2.6+\n\n* Maxmind GeoIP Python library and a country level database.\n\nInstallation\n============\n\nRun python -m anonymiseip.main in an environment with all the dependencies\navailable. Alternatively run ./bootstrap.py to create bin/buildout, then\nbin/buildout to create a bin/py and finally bin/py -m gpverify.main.\n\nNote that the GeoIP Python library and database may have to be installed by\nhand. On Ubuntu systems they are available in the python-geoip and\ngeoip-database packages respectively. Anonymiseip looks for the database in\n'/usr/share/GeoIP/GeoIP.dat'.\n\nTesting\n=======\n\nanonymiseip is stateless and fast, so just use it directly for testing.\n\nPass --host 0.0.0.0 --port 0 will cause a port to be dynamically allocated and\nprinted out, which your test driver can then use.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://launchpad.net/anonymiseip", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "anonymiseip", "package_url": "https://pypi.org/project/anonymiseip/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/anonymiseip/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://launchpad.net/anonymiseip"}, "release_url": "https://pypi.org/project/anonymiseip/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Web service for IP anonymisation.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\n<p>Copyright (c) 2011, Canonical Ltd</p>\n<p>This program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.</p>\n<p>This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.</p>\n<p>You should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see &lt;<a href=\"http://www.gnu.org/licenses/\" rel=\"nofollow\">http://www.gnu.org/licenses/</a>&gt;.</p>\n</blockquote>\n<p>anonymiseip anonymises IPv4 addresses using the MaxMind GeoIP database. Source\naddresses are mapped to country level, then assigned a different address from\nwithin that pool. To avoid known address back-mapping, the source address is\nhashed, and the hash taken mod pool-size to pick the new address. As IPv4\naddress space is very small, this is still vulnerable to brute forcing - its\nfeasible to generate every single mapping, and if a single mapping is found it\nwould be possible to cater for salted hashes as well. As such, this is not\nsuitable for protecting against malicious attacks, it is however suitable to\nuse when ensuring employees do not have casual access to the IP address from\nweblogs, which count as personally identifying information, while still\ngiving employees access to the same logs so they can look at usage patterns\nand troubleshoot slow requests etc.</p>\n<p>To anonymise an IPv4 address, perform a GET to /ipv4/x.y.z.a, the response\nwill be a 200 OK + the new ip address, or a 5xx error.</p>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>Python 2.6+</li>\n<li>Maxmind GeoIP Python library and a country level database.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Run python -m anonymiseip.main in an environment with all the dependencies\navailable. Alternatively run ./bootstrap.py to create bin/buildout, then\nbin/buildout to create a bin/py and finally bin/py -m gpverify.main.</p>\n<p>Note that the GeoIP Python library and database may have to be installed by\nhand. On Ubuntu systems they are available in the python-geoip and\ngeoip-database packages respectively. Anonymiseip looks for the database in\n\u2018/usr/share/GeoIP/GeoIP.dat\u2019.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>anonymiseip is stateless and fast, so just use it directly for testing.</p>\n<p>Pass \u2013host 0.0.0.0 \u2013port 0 will cause a port to be dynamically allocated and\nprinted out, which your test driver can then use.</p>\n</div>\n\n          </div>"}, "last_serial": 786288, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "72f4b51be93c59c34dc45a91127886b4", "sha256": "b65d23cc4be638b3e425cd9e1148960e6698ef02f0583cb314d26d2c423df275"}, "downloads": -1, "filename": "anonymiseip-0.0.1.tar.gz", "has_sig": true, "md5_digest": "72f4b51be93c59c34dc45a91127886b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3334, "upload_time": "2012-08-03T10:48:50", "upload_time_iso_8601": "2012-08-03T10:48:50.172339Z", "url": "https://files.pythonhosted.org/packages/d9/c7/a382ce43dd7c0da645ce42d921b028251405dac31bb03042e6df7e6d2b9a/anonymiseip-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "72f4b51be93c59c34dc45a91127886b4", "sha256": "b65d23cc4be638b3e425cd9e1148960e6698ef02f0583cb314d26d2c423df275"}, "downloads": -1, "filename": "anonymiseip-0.0.1.tar.gz", "has_sig": true, "md5_digest": "72f4b51be93c59c34dc45a91127886b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3334, "upload_time": "2012-08-03T10:48:50", "upload_time_iso_8601": "2012-08-03T10:48:50.172339Z", "url": "https://files.pythonhosted.org/packages/d9/c7/a382ce43dd7c0da645ce42d921b028251405dac31bb03042e6df7e6d2b9a/anonymiseip-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:06 2020"}