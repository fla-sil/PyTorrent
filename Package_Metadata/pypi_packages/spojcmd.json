{"info": {"author": "Rachit Nimavat", "author_email": "iamrachiit@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Customer Service", "Topic :: Education", "Topic :: Utilities"], "description": "spojcmd  (Rachit Nimavat)\n=========================\n\nCredits\n---------------\nI have taken [spoj](https://github.com/nyamba/spoj) by [Nyambayar Turbat](https://github.com/nyamba) as the seed.\n\n\nConfig File (optional)\n---------------\n\tCreate a file named .spojcmdrc  in your home folder, with the following  contents -\n\n\t[user]\n\tuser_name = YOUR_USERNAME\n\tpassword = YOUR_PASSWORD\n\twait_time = 4\t(time interval in seconds for querying status of your submission)\n\tpyver = 2.7\t(version for python compiler - 2.7 / 3.2.3 / nbc )\n\tcppver = 4.3.2\t(version for gcc cpp compiler - 4.3.2 / 4.0.0.0-8 )\n\tcver = 4.3.2\t(version for gcc c compiler - 4.3.2 / 99 )\n\tpasver = fpc\t(version for pascal compiler - fpc / gpc )\n\n\tNote that, all these options are optional except [user] section line\n\n\nSetup Instructions\n--------------\n\nFirst, get python-pip. Then install spojcmd by it. Resolve unsatisfied dependencies, if any.\n\n    sudo apt-get install python-pip\n    sudo pip install spojcmd\n\n\nLogin to SPOJ\n---------------\n\nLogin to SPOJ like this:\n\n\tspojcmd login <username>\n\tpassword: <password>\n\n\nUser Status\n---------------------\n\nTo get any user's solved/unsolved problems:\n\n\tspojcmd status <username>\n\nFor your own stats:\n\n\tspojcmd status\n\t\n\n\nSubmit problem on SPOJ (The most fun part)\n--------------\n\ntackle is your command. The problem name should match its id on SPOJ (case insensitive). The compiler will be guessed by looking at the extention, but you should add the entry in ~/.spojcmdrc if you are using non-default compilers (like python 3.2.3). If you leave the problem name blank, the most recent code will be submitted, (it would ignore input/output/exec files (hopefully :P ))\n\n\tspojcmd tackle problem_id.cpp\n\nAfter submitting, wait till a flashing green (well, upto terminal standards) ACCEPTED is displayed.\n\n\nList problems\n---------\n\nJust for the sake of completeness, list argument lists the problems based on some filters. --sort option denoted on which column the list should be sorted. If it is positive, ascending order else descending. Available options: \n\n\t1 - problem id\n\t2 - problem name\n\t5 - solution id\n\t6 - users count who solved it\n\t7 - percentage of valid solutions\n\nUse the option like this:\n\n    spojcmd list --page=2 --sort=1 --problem_set=classical\n\n\nGet problem statemnt (Beta)\n--------------------\n\nGet problem statement by desc argument.\n\n    spojcmd desc problem_id", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/tvanicraath/spojcmd", "keywords": "spoj problems command line algorithmic problems", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "spojcmd", "package_url": "https://pypi.org/project/spojcmd/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/spojcmd/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/tvanicraath/spojcmd"}, "release_url": "https://pypi.org/project/spojcmd/0.3/", "requires_dist": null, "requires_python": null, "summary": "command line tool for spoj.com", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            spojcmd  (Rachit Nimavat)<br>=========================<br><br>Credits<br>---------------<br>I have taken [spoj](https://github.com/nyamba/spoj) by [Nyambayar Turbat](https://github.com/nyamba) as the seed.<br><br><br>Config File (optional)<br>---------------<br>\tCreate a file named .spojcmdrc  in your home folder, with the following  contents -<br><br>\t[user]<br>\tuser_name = YOUR_USERNAME<br>\tpassword = YOUR_PASSWORD<br>\twait_time = 4\t(time interval in seconds for querying status of your submission)<br>\tpyver = 2.7\t(version for python compiler - 2.7 / 3.2.3 / nbc )<br>\tcppver = 4.3.2\t(version for gcc cpp compiler - 4.3.2 / 4.0.0.0-8 )<br>\tcver = 4.3.2\t(version for gcc c compiler - 4.3.2 / 99 )<br>\tpasver = fpc\t(version for pascal compiler - fpc / gpc )<br><br>\tNote that, all these options are optional except [user] section line<br><br><br>Setup Instructions<br>--------------<br><br>First, get python-pip. Then install spojcmd by it. Resolve unsatisfied dependencies, if any.<br><br>    sudo apt-get install python-pip<br>    sudo pip install spojcmd<br><br><br>Login to SPOJ<br>---------------<br><br>Login to SPOJ like this:<br><br>\tspojcmd login &lt;username&gt;<br>\tpassword: &lt;password&gt;<br><br><br>User Status<br>---------------------<br><br>To get any user's solved/unsolved problems:<br><br>\tspojcmd status &lt;username&gt;<br><br>For your own stats:<br><br>\tspojcmd status<br>\t<br><br><br>Submit problem on SPOJ (The most fun part)<br>--------------<br><br>tackle is your command. The problem name should match its id on SPOJ (case insensitive). The compiler will be guessed by looking at the extention, but you should add the entry in ~/.spojcmdrc if you are using non-default compilers (like python 3.2.3). If you leave the problem name blank, the most recent code will be submitted, (it would ignore input/output/exec files (hopefully :P ))<br><br>\tspojcmd tackle problem_id.cpp<br><br>After submitting, wait till a flashing green (well, upto terminal standards) ACCEPTED is displayed.<br><br><br>List problems<br>---------<br><br>Just for the sake of completeness, list argument lists the problems based on some filters. --sort option denoted on which column the list should be sorted. If it is positive, ascending order else descending. Available options: <br><br>\t1 - problem id<br>\t2 - problem name<br>\t5 - solution id<br>\t6 - users count who solved it<br>\t7 - percentage of valid solutions<br><br>Use the option like this:<br><br>    spojcmd list --page=2 --sort=1 --problem_set=classical<br><br><br>Get problem statemnt (Beta)<br>--------------------<br><br>Get problem statement by desc argument.<br><br>    spojcmd desc problem_id\n          </div>"}, "last_serial": 1021514, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "3659e635f81bae753b0976ccbdd4da78", "sha256": "875e54ca3531a2b132a7228dd26473e38f65f990afc11c93dac033e2ea9616e1"}, "downloads": -1, "filename": "spojcmd-0.3.tar.gz", "has_sig": false, "md5_digest": "3659e635f81bae753b0976ccbdd4da78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8691, "upload_time": "2014-03-06T19:57:44", "upload_time_iso_8601": "2014-03-06T19:57:44.026469Z", "url": "https://files.pythonhosted.org/packages/54/6f/3a4d4604478b0050aa9ad46ea6f246c404047e534b09486efcc3deb35a73/spojcmd-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3659e635f81bae753b0976ccbdd4da78", "sha256": "875e54ca3531a2b132a7228dd26473e38f65f990afc11c93dac033e2ea9616e1"}, "downloads": -1, "filename": "spojcmd-0.3.tar.gz", "has_sig": false, "md5_digest": "3659e635f81bae753b0976ccbdd4da78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8691, "upload_time": "2014-03-06T19:57:44", "upload_time_iso_8601": "2014-03-06T19:57:44.026469Z", "url": "https://files.pythonhosted.org/packages/54/6f/3a4d4604478b0050aa9ad46ea6f246c404047e534b09486efcc3deb35a73/spojcmd-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:38 2020"}