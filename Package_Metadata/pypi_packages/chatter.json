{"info": {"author": "Steve Winton", "author_email": "steve.winton@nixonmcinnes.co.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: CGI Tools/Libraries", "Topic :: Utilities"], "description": "Python Chatter Client\n=====================\n\nThe minimalist yet fully featured Chatter API class, heavily inspired by Python Twitter Tools (https://github.com/sixohsix/twitter/).\n\nInstallation\n------------\n\nSimply:\n\n\t$ easy_install chatter\n\nEven better:\n\n\t$ pip install chatter\n\nChatter API overview\n--------------------\n\nSee this quickstart tutorial: http://www.salesforce.com/us/developer/docs/chatterapi/Content/quickstart.htm from Salesforce.\n\nUsage\n-----\n\nInstantiation:\n\n    client_id = \"YOUR_CHATTER_CLIENT_ID\"\n    client_secret = \"YOUR_CHATTER_CLIENT_SECRET\"\n    auth = chatter.ChatterAuth(client_id, client_secret)\n\n    instance_url = \"YOUR_USER_INSTANCE_URL\"\n    access_token = \"YOUR_USER_ACCESS_TOKEN\"\n    refresh_token = \"YOUR_USER_REFRESH_TOKEN\"\n\n    chatter = chatter.Chatter(auth=auth, instance_url=instance_url, \n                              access_token=access_token, refresh_token=refresh_token)\n            \nGet authenticated user's details:\n\n    me = chatter.users.me.get()\n\nNote 'GET' is implied, so you can reduce the above to:\n\n    me = chatter.users.me()\n\nGet another user's details\n\n    other_user = chatter.users[\"005E0000000FpoxIAC\"].get()\n\nAgain, this can be reduced:\n\n    other_user = chatter.users[\"005E0000000FpoxIAC\"]()\n\nAnother way to achieve this, using the '_' magic method:\n\n    other_user = chatter.users._(\"005E0000000FpoxIAC\").get()\n\nUpdating the authenticated user's Chatter status:\n\n    chatter.feeds.news.me.feed_items.post(text=\"Hello world!\")\n\nOccassionally it is necessary to refresh the user's access token, due to session expiration. The underlying ChatterCall class will handle this automatically, however you may wish to be notified of access token changes so you can reflect this in your user model.\n\nIt's possible to do this via the access_token_refreshed_callback, pass in  a callable, and your callback will get called with the refreshed access token.\n \ne.g.\n\n    def my_callback(access_token):\n        print \"New access_token\", access_token\n    chatter = chatter.Chatter(auth=auth, instance_url=instance_url, \n                              access_token=access_token, refresh_token=refresh_token,\n                              access_token_refreshed_callback=my_callback)\n\n\nThe rest is hopefully self-explanatory! :)\n\nFeedback\n--------\n\nSend feedback / questions etc. to:\n\n* Email: steve.winton[at]nixonmcinnes.co.uk.\n* Twitter: @steveWINton (http://twitter.com/steveWINton).", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nixmc/chatter", "keywords": "chatter api salesforce", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "chatter", "package_url": "https://pypi.org/project/chatter/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/chatter/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/nixmc/chatter"}, "release_url": "https://pypi.org/project/chatter/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "('The minimalist yet fully featured Chatter API class, heavily inspired by Python Twitter Tools.',)", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The minimalist yet fully featured Chatter API class, heavily inspired by Python Twitter Tools (<a href=\"https://github.com/sixohsix/twitter/\" rel=\"nofollow\">https://github.com/sixohsix/twitter/</a>).</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Simply:</p>\n<blockquote>\n$ easy_install chatter</blockquote>\n<p>Even better:</p>\n<blockquote>\n$ pip install chatter</blockquote>\n</div>\n<div id=\"chatter-api-overview\">\n<h2>Chatter API overview</h2>\n<p>See this quickstart tutorial: <a href=\"http://www.salesforce.com/us/developer/docs/chatterapi/Content/quickstart.htm\" rel=\"nofollow\">http://www.salesforce.com/us/developer/docs/chatterapi/Content/quickstart.htm</a> from Salesforce.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Instantiation:</p>\n<blockquote>\n<p>client_id = \u201cYOUR_CHATTER_CLIENT_ID\u201d\nclient_secret = \u201cYOUR_CHATTER_CLIENT_SECRET\u201d\nauth = chatter.ChatterAuth(client_id, client_secret)</p>\n<p>instance_url = \u201cYOUR_USER_INSTANCE_URL\u201d\naccess_token = \u201cYOUR_USER_ACCESS_TOKEN\u201d\nrefresh_token = \u201cYOUR_USER_REFRESH_TOKEN\u201d</p>\n<dl>\n<dt>chatter = chatter.Chatter(auth=auth, instance_url=instance_url,</dt>\n<dd>access_token=access_token, refresh_token=refresh_token)</dd>\n</dl>\n</blockquote>\n<p>Get authenticated user\u2019s details:</p>\n<blockquote>\nme = chatter.users.me.get()</blockquote>\n<p>Note \u2018GET\u2019 is implied, so you can reduce the above to:</p>\n<blockquote>\nme = chatter.users.me()</blockquote>\n<p>Get another user\u2019s details</p>\n<blockquote>\nother_user = chatter.users[\u201c005E0000000FpoxIAC\u201d].get()</blockquote>\n<p>Again, this can be reduced:</p>\n<blockquote>\nother_user = chatter.users[\u201c005E0000000FpoxIAC\u201d]()</blockquote>\n<p>Another way to achieve this, using the \u2018_\u2019 magic method:</p>\n<blockquote>\nother_user = chatter.users._(\u201c005E0000000FpoxIAC\u201d).get()</blockquote>\n<p>Updating the authenticated user\u2019s Chatter status:</p>\n<blockquote>\nchatter.feeds.news.me.feed_items.post(text=\u201dHello world!\u201d)</blockquote>\n<p>Occassionally it is necessary to refresh the user\u2019s access token, due to session expiration. The underlying ChatterCall class will handle this automatically, however you may wish to be notified of access token changes so you can reflect this in your user model.</p>\n<p>It\u2019s possible to do this via the access_token_refreshed_callback, pass in  a callable, and your callback will get called with the refreshed access token.</p>\n<p>e.g.</p>\n<blockquote>\n<dl>\n<dt>def my_callback(access_token):</dt>\n<dd>print \u201cNew access_token\u201d, access_token</dd>\n<dt>chatter = chatter.Chatter(auth=auth, instance_url=instance_url,</dt>\n<dd>access_token=access_token, refresh_token=refresh_token,\naccess_token_refreshed_callback=my_callback)</dd>\n</dl>\n</blockquote>\n<p>The rest is hopefully self-explanatory! :)</p>\n</div>\n<div id=\"feedback\">\n<h2>Feedback</h2>\n<p>Send feedback / questions etc. to:</p>\n<ul>\n<li>Email: steve.winton[at]nixonmcinnes.co.uk.</li>\n<li>Twitter: @steveWINton (<a href=\"http://twitter.com/steveWINton\" rel=\"nofollow\">http://twitter.com/steveWINton</a>).</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 787350, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c8aed9392be7f9bd3099a874e21e4d46", "sha256": "64e61da588cc11c344a9f1cbed53c9a775b2d944d53af88c3762b5827fe79fb5"}, "downloads": -1, "filename": "chatter-0.1.tar.gz", "has_sig": false, "md5_digest": "c8aed9392be7f9bd3099a874e21e4d46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4261, "upload_time": "2012-05-31T13:22:19", "upload_time_iso_8601": "2012-05-31T13:22:19.231637Z", "url": "https://files.pythonhosted.org/packages/3f/64/69c6d77d3fdb793f5ba38d99219d24561926c7d380dcafd914c63cb2497f/chatter-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c86e913a81a434657954bec633697802", "sha256": "165070a6bbba6890cef6c99c53c99cc16e7530bb122bf2216ec03f1b41fd08d6"}, "downloads": -1, "filename": "chatter-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c86e913a81a434657954bec633697802", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4406, "upload_time": "2012-05-31T13:33:46", "upload_time_iso_8601": "2012-05-31T13:33:46.617431Z", "url": "https://files.pythonhosted.org/packages/a3/42/a61cc63e6871881002ae3820457fb8c4cb588ac6425e591a1cedd8907972/chatter-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "74831f392be6fcd590591c22096cf2d9", "sha256": "723393e0485cc22248ec0ac706d1dc2ad6f321949f3a4fc9eb71663ecd85c622"}, "downloads": -1, "filename": "chatter-0.1.2.tar.gz", "has_sig": false, "md5_digest": "74831f392be6fcd590591c22096cf2d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4405, "upload_time": "2012-05-31T13:35:57", "upload_time_iso_8601": "2012-05-31T13:35:57.164274Z", "url": "https://files.pythonhosted.org/packages/c0/5a/b799d557c5345edb0d009f396fff5a79a004d8f3a87789982bc56848498c/chatter-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e15f1c3a52d8e21091abcc5bfa7fb563", "sha256": "6177b20623beb5b838bdca3a1b1b3feef1f97394421344a2b65ebd44a290171e"}, "downloads": -1, "filename": "chatter-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e15f1c3a52d8e21091abcc5bfa7fb563", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4462, "upload_time": "2012-05-31T13:50:31", "upload_time_iso_8601": "2012-05-31T13:50:31.491477Z", "url": "https://files.pythonhosted.org/packages/79/dc/edf04c85a1938b61efa1fed6c791acdcea11c630482291890be32a2054a2/chatter-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e15f1c3a52d8e21091abcc5bfa7fb563", "sha256": "6177b20623beb5b838bdca3a1b1b3feef1f97394421344a2b65ebd44a290171e"}, "downloads": -1, "filename": "chatter-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e15f1c3a52d8e21091abcc5bfa7fb563", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4462, "upload_time": "2012-05-31T13:50:31", "upload_time_iso_8601": "2012-05-31T13:50:31.491477Z", "url": "https://files.pythonhosted.org/packages/79/dc/edf04c85a1938b61efa1fed6c791acdcea11c630482291890be32a2054a2/chatter-0.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:22 2020"}