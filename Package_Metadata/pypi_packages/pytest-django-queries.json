{"info": {"author": "NyanKiyoshi", "author_email": "hello@vanille.bid", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "<div align='center'>\n  <h1>pytest-django-queries</h1>\n  <p>Generate performance rapports from your django database performance tests\n  (inspired by <a href='https://coverage.readthedocs.io/en/v4.5.x/'>coverage.py</a>).</p>\n  <p>\n    <a href='https://travis-ci.org/NyanKiyoshi/pytest-django-queries/'>\n      <img src='https://travis-ci.org/NyanKiyoshi/pytest-django-queries.svg?branch=master' alt='Requirement Status' />\n    </a>\n    <a href='https://codecov.io/gh/NyanKiyoshi/pytest-django-queries'>\n      <img src='https://codecov.io/gh/NyanKiyoshi/pytest-django-queries/branch/master/graph/badge.svg' alt='Coverage Status' />\n    </a>\n    <a href='https://pytest-django-queries.readthedocs.io/en/latest/?badge=latest'>\n      <img src='https://readthedocs.org/projects/pytest-django-queries/badge/?version=latest' alt='Documentation Status' />\n    </a>\n    <a href='https://pypi.python.org/pypi/pytest-django-queries'>\n      <img src='https://img.shields.io/pypi/v/pytest-django-queries.svg' alt='Version' />\n    </a>\n    <a href=\"https://pypi.org/project/pytest-django-queries/1.1.0/\">\n      <img src=\"https://img.shields.io/badge/pypi%20unstable-v1.1.0-FF0000.svg\" alt=\"Latest Unstable on pypi\">\n    </a>\n  </p>\n  <p>\n    <a href='https://github.com/NyanKiyoshi/pytest-django-queries/compare/v1.1.0...master'>\n      <img src='https://img.shields.io/github/commits-since/NyanKiyoshi/pytest-django-queries/v1.1.0.svg' alt='Commits since latest release' />\n    </a>\n    <a href='https://pypi.python.org/pypi/pytest-django-queries'>\n      <img src='https://img.shields.io/pypi/pyversions/pytest-django-queries.svg' alt='Supported versions' />\n    </a>\n    <a href='https://pypi.python.org/pypi/pytest-django-queries'>\n      <img src='https://img.shields.io/pypi/implementation/pytest-django-queries.svg' alt='Supported implementations' />\n    </a>\n  </p>\n</div>\n\n## Usage\nInstall `pytest-django-queries`, write your pytest tests and mark any\ntest that should be counted or use the `count_queries` fixture.\n\nNote: to use the latest development build, use `pip install --pre pytest-django-queries`\n\n```python\nimport pytest\n\n\n@pytest.mark.count_queries\ndef test_query_performances():\n    Model.objects.all()\n\n\n# Or...\ndef test_another_query_performances(count_queries):\n    Model.objects.all()\n```\n\nEach test file and/or package is considered as a category. Each test inside a \"category\"\ncompose its data, see [Visualising Results](#visualising-results) for more details.\n\nYou will find the [full documentation here](https://pytest-django-queries.readthedocs.io/).\n\n<!-- TODO: insert a graphic here to explain how it works -->\n\n## Recommendation when Using Fixtures\nYou might end up in the case where you want to add fixtures that are generating queries\nthat you don't want to be counted in the results\u2013or simply, you want to use the\n`pytest-django` plugin alongside of `pytest-django-queries`, which will generate\nunwanted queries in your results.\n\nFor that, you will want to put the `count_queries` fixture as the last fixture to execute.\n\nBut at the same time, you might want to use the the power of pytest markers, to separate\nthe queries counting tests from other tests. In that case, you might want to do something\nlike this to tell the marker to not automatically inject the `count_queries` fixture into\nyour test:\n\n```python\nimport pytest\n\n\n@pytest.mark.count_queries(autouse=False)\ndef test_retrieve_main_menu(fixture_making_queries, count_queries):\n    pass\n```\n\nNotice the usage of the keyword argument `autouse=False` and the `count_queries` fixture\nbeing placed last.\n\n## Using pytest-django alongside of pytest-django-queries\nWe recommend you to do the following when using `pytest-django`:\n\n```python\nimport pytest\n\n\n@pytest.mark.django_db\n@pytest.mark.count_queries(autouse=False)\ndef test_retrieve_main_menu(any_fixture, other_fixture, count_queries):\n    pass\n```\n\n\n## Integrating with GitHub\n\nTBA.\n\n## Testing Locally\nSimply install `pytest-django-queries` through pip and run your\ntests using `pytest`. A report should have been generated in your\ncurrent working directory in a file called with `.pytest-queries`.\n\nNote: to override the save path, pass the `--django-db-bench PATH` option to pytest.\n\n## Visualising Results\nYou can generate a table from the tests results by using the `show` command:\n```shell\ndjango-queries show\n```\n\nYou will get something like this to represent the results:\n```shell\n+---------+--------------------------------------+\n| Module  |          Tests                       |\n+---------+--------------------------------------+\n| module1 | +-----------+---------+------------+ |\n|         | | Test Name | Queries | Duplicated | |\n|         | +-----------+---------+------------+ |\n|         | |   test1   |    0    |     0      | |\n|         | +-----------+---------+------------+ |\n|         | |   test2   |    1    |     0      | |\n|         | +-----------+---------+------------+ |\n+---------+--------------------------------------+\n| module2 | +-----------+---------+------------+ |\n|         | | Test Name | Queries | Duplicated | |\n|         | +-----------+---------+------------+ |\n|         | |   test1   |   123   |     0      | |\n|         | +-----------+---------+------------+ |\n+---------+--------------------------------------+\n```\n\n## Exporting the Results (HTML)\nFor a nicer presentation, use the `html` command, to export the results as HTML.\n```shell\ndjango-queries html\n```\n\nIt will generate something [like this](https://pytest-django-queries.readthedocs.io/en/latest/html_export_results.html).\n\n## Comparing Results\n\nYou can run `django-queries backup` (can take a path, optionally) after\nrunning your tests then rerun them. After that, you can run `django-queries diff`\nto generate results looking like this:\n\n<a href='./docs/_static/diff_results.png'>\n  <img src='./docs/_static/diff_results.png' alt='screenshot' width='500px' />\n</a>\n\n## Development\nFirst of all, clone the project locally. Then, install it using the below command.\n\n```shell\n./setup.py develop\n```\n\nAfter that, you need to install the development requirements. For that,\nrun the below command.\n\n```shell\npip install -e .[dev]\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/NyanKiyoshi/pytest-django-queries/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pytest-django-queries", "package_url": "https://pypi.org/project/pytest-django-queries/", "platform": "", "project_url": "https://pypi.org/project/pytest-django-queries/", "project_urls": {"Homepage": "https://github.com/NyanKiyoshi/pytest-django-queries/"}, "release_url": "https://pypi.org/project/pytest-django-queries/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Generate performance reports from your django database performance tests.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n  <h1>pytest-django-queries</h1>\n  <p>Generate performance rapports from your django database performance tests\n  (inspired by <a href=\"https://coverage.readthedocs.io/en/v4.5.x/\" rel=\"nofollow\">coverage.py</a>).</p>\n  <p>\n    <a href=\"https://travis-ci.org/NyanKiyoshi/pytest-django-queries/\" rel=\"nofollow\">\n      <img alt=\"Requirement Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b7c878f5812d048240725bdfa2a5bb15c7ee3ae3/68747470733a2f2f7472617669732d63692e6f72672f4e79616e4b69796f7368692f7079746573742d646a616e676f2d717565726965732e7376673f6272616e63683d6d6173746572\">\n    </a>\n    <a href=\"https://codecov.io/gh/NyanKiyoshi/pytest-django-queries\" rel=\"nofollow\">\n      <img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/049f5a52a247a8512f5007c89c1fe081237d416d/68747470733a2f2f636f6465636f762e696f2f67682f4e79616e4b69796f7368692f7079746573742d646a616e676f2d717565726965732f6272616e63682f6d61737465722f67726170682f62616467652e737667\">\n    </a>\n    <a href=\"https://pytest-django-queries.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\">\n      <img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/41f8159155bbd285c6864bc7b05989d734a00c88/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7079746573742d646a616e676f2d717565726965732f62616467652f3f76657273696f6e3d6c6174657374\">\n    </a>\n    <a href=\"https://pypi.python.org/pypi/pytest-django-queries\" rel=\"nofollow\">\n      <img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43d3264c22fee3d6eed8582386af20d7de8a939d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079746573742d646a616e676f2d717565726965732e737667\">\n    </a>\n    <a href=\"https://pypi.org/project/pytest-django-queries/1.1.0/\" rel=\"nofollow\">\n      <img alt=\"Latest Unstable on pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/65519ff422d052630bb1a3dab03f84c8e1a1f855/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70797069253230756e737461626c652d76312e312e302d4646303030302e737667\">\n    </a>\n  </p>\n  <p>\n    <a href=\"https://github.com/NyanKiyoshi/pytest-django-queries/compare/v1.1.0...master\" rel=\"nofollow\">\n      <img alt=\"Commits since latest release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c5ce45dcb6bc6e72a9067b42f1ed28c558afd938/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d6974732d73696e63652f4e79616e4b69796f7368692f7079746573742d646a616e676f2d717565726965732f76312e312e302e737667\">\n    </a>\n    <a href=\"https://pypi.python.org/pypi/pytest-django-queries\" rel=\"nofollow\">\n      <img alt=\"Supported versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/496a20014f30f5b79b44f4308acf0cee8de14892/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079746573742d646a616e676f2d717565726965732e737667\">\n    </a>\n    <a href=\"https://pypi.python.org/pypi/pytest-django-queries\" rel=\"nofollow\">\n      <img alt=\"Supported implementations\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49498be26851b39ff53a8572f942846d773c69b2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f696d706c656d656e746174696f6e2f7079746573742d646a616e676f2d717565726965732e737667\">\n    </a>\n  </p>\n</div>\n<h2>Usage</h2>\n<p>Install <code>pytest-django-queries</code>, write your pytest tests and mark any\ntest that should be counted or use the <code>count_queries</code> fixture.</p>\n<p>Note: to use the latest development build, use <code>pip install --pre pytest-django-queries</code></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">count_queries</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_query_performances</span><span class=\"p\">():</span>\n    <span class=\"n\">Model</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># Or...</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_another_query_performances</span><span class=\"p\">(</span><span class=\"n\">count_queries</span><span class=\"p\">):</span>\n    <span class=\"n\">Model</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n</pre>\n<p>Each test file and/or package is considered as a category. Each test inside a \"category\"\ncompose its data, see <a href=\"#visualising-results\" rel=\"nofollow\">Visualising Results</a> for more details.</p>\n<p>You will find the <a href=\"https://pytest-django-queries.readthedocs.io/\" rel=\"nofollow\">full documentation here</a>.</p>\n\n<h2>Recommendation when Using Fixtures</h2>\n<p>You might end up in the case where you want to add fixtures that are generating queries\nthat you don't want to be counted in the results\u2013or simply, you want to use the\n<code>pytest-django</code> plugin alongside of <code>pytest-django-queries</code>, which will generate\nunwanted queries in your results.</p>\n<p>For that, you will want to put the <code>count_queries</code> fixture as the last fixture to execute.</p>\n<p>But at the same time, you might want to use the the power of pytest markers, to separate\nthe queries counting tests from other tests. In that case, you might want to do something\nlike this to tell the marker to not automatically inject the <code>count_queries</code> fixture into\nyour test:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">count_queries</span><span class=\"p\">(</span><span class=\"n\">autouse</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_retrieve_main_menu</span><span class=\"p\">(</span><span class=\"n\">fixture_making_queries</span><span class=\"p\">,</span> <span class=\"n\">count_queries</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>Notice the usage of the keyword argument <code>autouse=False</code> and the <code>count_queries</code> fixture\nbeing placed last.</p>\n<h2>Using pytest-django alongside of pytest-django-queries</h2>\n<p>We recommend you to do the following when using <code>pytest-django</code>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">django_db</span>\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">count_queries</span><span class=\"p\">(</span><span class=\"n\">autouse</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_retrieve_main_menu</span><span class=\"p\">(</span><span class=\"n\">any_fixture</span><span class=\"p\">,</span> <span class=\"n\">other_fixture</span><span class=\"p\">,</span> <span class=\"n\">count_queries</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<h2>Integrating with GitHub</h2>\n<p>TBA.</p>\n<h2>Testing Locally</h2>\n<p>Simply install <code>pytest-django-queries</code> through pip and run your\ntests using <code>pytest</code>. A report should have been generated in your\ncurrent working directory in a file called with <code>.pytest-queries</code>.</p>\n<p>Note: to override the save path, pass the <code>--django-db-bench PATH</code> option to pytest.</p>\n<h2>Visualising Results</h2>\n<p>You can generate a table from the tests results by using the <code>show</code> command:</p>\n<pre>django-queries show\n</pre>\n<p>You will get something like this to represent the results:</p>\n<pre>+---------+--------------------------------------+\n<span class=\"p\">|</span> Module  <span class=\"p\">|</span>          Tests                       <span class=\"p\">|</span>\n+---------+--------------------------------------+\n<span class=\"p\">|</span> module1 <span class=\"p\">|</span> +-----------+---------+------------+ <span class=\"p\">|</span>\n<span class=\"p\">|</span>         <span class=\"p\">|</span> <span class=\"p\">|</span> Test Name <span class=\"p\">|</span> Queries <span class=\"p\">|</span> Duplicated <span class=\"p\">|</span> <span class=\"p\">|</span>\n<span class=\"p\">|</span>         <span class=\"p\">|</span> +-----------+---------+------------+ <span class=\"p\">|</span>\n<span class=\"p\">|</span>         <span class=\"p\">|</span> <span class=\"p\">|</span>   test1   <span class=\"p\">|</span>    <span class=\"m\">0</span>    <span class=\"p\">|</span>     <span class=\"m\">0</span>      <span class=\"p\">|</span> <span class=\"p\">|</span>\n<span class=\"p\">|</span>         <span class=\"p\">|</span> +-----------+---------+------------+ <span class=\"p\">|</span>\n<span class=\"p\">|</span>         <span class=\"p\">|</span> <span class=\"p\">|</span>   test2   <span class=\"p\">|</span>    <span class=\"m\">1</span>    <span class=\"p\">|</span>     <span class=\"m\">0</span>      <span class=\"p\">|</span> <span class=\"p\">|</span>\n<span class=\"p\">|</span>         <span class=\"p\">|</span> +-----------+---------+------------+ <span class=\"p\">|</span>\n+---------+--------------------------------------+\n<span class=\"p\">|</span> module2 <span class=\"p\">|</span> +-----------+---------+------------+ <span class=\"p\">|</span>\n<span class=\"p\">|</span>         <span class=\"p\">|</span> <span class=\"p\">|</span> Test Name <span class=\"p\">|</span> Queries <span class=\"p\">|</span> Duplicated <span class=\"p\">|</span> <span class=\"p\">|</span>\n<span class=\"p\">|</span>         <span class=\"p\">|</span> +-----------+---------+------------+ <span class=\"p\">|</span>\n<span class=\"p\">|</span>         <span class=\"p\">|</span> <span class=\"p\">|</span>   test1   <span class=\"p\">|</span>   <span class=\"m\">123</span>   <span class=\"p\">|</span>     <span class=\"m\">0</span>      <span class=\"p\">|</span> <span class=\"p\">|</span>\n<span class=\"p\">|</span>         <span class=\"p\">|</span> +-----------+---------+------------+ <span class=\"p\">|</span>\n+---------+--------------------------------------+\n</pre>\n<h2>Exporting the Results (HTML)</h2>\n<p>For a nicer presentation, use the <code>html</code> command, to export the results as HTML.</p>\n<pre>django-queries html\n</pre>\n<p>It will generate something <a href=\"https://pytest-django-queries.readthedocs.io/en/latest/html_export_results.html\" rel=\"nofollow\">like this</a>.</p>\n<h2>Comparing Results</h2>\n<p>You can run <code>django-queries backup</code> (can take a path, optionally) after\nrunning your tests then rerun them. After that, you can run <code>django-queries diff</code>\nto generate results looking like this:</p>\n<a href=\"./docs/_static/diff_results.png\" rel=\"nofollow\">\n  <img alt=\"screenshot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d3b59f159cd538e42390d1d0f50ee1ed690c2b1/2e2f646f63732f5f7374617469632f646966665f726573756c74732e706e67\" width=\"500px\">\n</a>\n<h2>Development</h2>\n<p>First of all, clone the project locally. Then, install it using the below command.</p>\n<pre>./setup.py develop\n</pre>\n<p>After that, you need to install the development requirements. For that,\nrun the below command.</p>\n<pre>pip install -e .<span class=\"o\">[</span>dev<span class=\"o\">]</span>\n</pre>\n\n          </div>"}, "last_serial": 5470705, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "0f56aec8aad522d65345857876809628", "sha256": "865619a3becd80b81a065f0f21618d2fa7471855ed0912cc37580afdff02364f"}, "downloads": -1, "filename": "pytest-django-queries-0.0.0.tar.gz", "has_sig": false, "md5_digest": "0f56aec8aad522d65345857876809628", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2350, "upload_time": "2019-05-07T14:54:30", "upload_time_iso_8601": "2019-05-07T14:54:30.122191Z", "url": "https://files.pythonhosted.org/packages/1e/64/ad2bec40df586f2a9f8c40dc9a8a691d53a39d66e80c9400854fa21dcefd/pytest-django-queries-0.0.0.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "d33148aacd6dc37d63f8467fc3066f7f", "sha256": "8761cc7af68575a3e333ff52cb929f98727574c3275f8767e71985141d2557f5"}, "downloads": -1, "filename": "pytest-django-queries-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d33148aacd6dc37d63f8467fc3066f7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3584, "upload_time": "2019-05-10T16:39:35", "upload_time_iso_8601": "2019-05-10T16:39:35.712165Z", "url": "https://files.pythonhosted.org/packages/56/4f/e976b2400cd0afd574d232e65b4fa565ab46e2452c715ab98923e81eac2f/pytest-django-queries-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "ba34e7c3c63235f808b385353a443726", "sha256": "34836b51a8b621a278347edb42b92f6d43779500f94d897a95f40723cc9d5d92"}, "downloads": -1, "filename": "pytest-django-queries-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ba34e7c3c63235f808b385353a443726", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13672, "upload_time": "2019-06-07T10:19:39", "upload_time_iso_8601": "2019-06-07T10:19:39.737855Z", "url": "https://files.pythonhosted.org/packages/90/5a/0da3f94359a6ab2f948014c9a05b47246751e18c39138da89c20a8df6baa/pytest-django-queries-1.0.0.tar.gz", "yanked": false}], "1.0.0.dev1": [{"comment_text": "", "digests": {"md5": "ca91f4140b9a880474aed624b488dfc1", "sha256": "b49aaecef6cd27d1062ac1f4f43f20b1261272034111a2ee1ee27ab8883bf315"}, "downloads": -1, "filename": "pytest-django-queries-1.0.0.dev1.tar.gz", "has_sig": false, "md5_digest": "ca91f4140b9a880474aed624b488dfc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6572, "upload_time": "2019-05-12T16:40:57", "upload_time_iso_8601": "2019-05-12T16:40:57.722009Z", "url": "https://files.pythonhosted.org/packages/af/d7/1530be549e64a03e679f619a9132a2cc4363d8cca2199de35632c614e7f1/pytest-django-queries-1.0.0.dev1.tar.gz", "yanked": false}], "1.0.0a1": [{"comment_text": "", "digests": {"md5": "edd4bf23ce180e802d8aa50f33dc2432", "sha256": "b13ef58e49862fec65d3c87399bae29cec54ed64f91ee2c7e29c66e8ccf2c530"}, "downloads": -1, "filename": "pytest-django-queries-1.0.0a1.tar.gz", "has_sig": false, "md5_digest": "edd4bf23ce180e802d8aa50f33dc2432", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6613, "upload_time": "2019-05-13T16:34:53", "upload_time_iso_8601": "2019-05-13T16:34:53.946156Z", "url": "https://files.pythonhosted.org/packages/39/f8/2ef2847d6bbdcf5182bb4d9375c18eabc60a7dffe774e20593e35a713a78/pytest-django-queries-1.0.0a1.tar.gz", "yanked": false}], "1.0.0a2": [{"comment_text": "", "digests": {"md5": "e922834e99da2851ca1f9716f40672e1", "sha256": "517ba0e0d4580c40a1a48ff72441b7044d34f380b9b677c5ab4e1a9327c2bba7"}, "downloads": -1, "filename": "pytest-django-queries-1.0.0a2.tar.gz", "has_sig": false, "md5_digest": "e922834e99da2851ca1f9716f40672e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8026, "upload_time": "2019-05-17T12:00:57", "upload_time_iso_8601": "2019-05-17T12:00:57.848549Z", "url": "https://files.pythonhosted.org/packages/4a/bc/70a8967203a89b7c2f705b17faaebc7d23be554989df7f12ae7888095348/pytest-django-queries-1.0.0a2.tar.gz", "yanked": false}], "1.0.0a3": [{"comment_text": "", "digests": {"md5": "b6bfb35740f35ef3dd0f581aa3536dfb", "sha256": "a93cc8b26c1c8081995f5f52cd368e767d0f69241af39827c660abdc9c0f8aee"}, "downloads": -1, "filename": "pytest-django-queries-1.0.0a3.tar.gz", "has_sig": false, "md5_digest": "b6bfb35740f35ef3dd0f581aa3536dfb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8230, "upload_time": "2019-05-17T12:09:53", "upload_time_iso_8601": "2019-05-17T12:09:53.844275Z", "url": "https://files.pythonhosted.org/packages/ae/50/d7fc2e86f96050d3d5a8a0700ba20f733c8e000439f836f8d3ef1bc4d5ef/pytest-django-queries-1.0.0a3.tar.gz", "yanked": false}], "1.0.0b1": [{"comment_text": "", "digests": {"md5": "e54ff2bab9f8d67fdd07aa3dc3893cbc", "sha256": "1b94e26aa0ce8590d14398e6369a140c2f4c86c9b56749907e8170cd670c9463"}, "downloads": -1, "filename": "pytest-django-queries-1.0.0b1.tar.gz", "has_sig": false, "md5_digest": "e54ff2bab9f8d67fdd07aa3dc3893cbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11134, "upload_time": "2019-05-24T17:41:53", "upload_time_iso_8601": "2019-05-24T17:41:53.622260Z", "url": "https://files.pythonhosted.org/packages/ba/b5/7e77ae0da66a3edf9257158d652b3d68759d12bbbb060e035a63ca57d6a2/pytest-django-queries-1.0.0b1.tar.gz", "yanked": false}], "1.0.0rc1": [{"comment_text": "", "digests": {"md5": "fb71fbafc2d2940c4a28bf274995d371", "sha256": "03e76e458062d2e7335c87b719d0eb74f7257abbe54f49fb96a28ef2d3fbc602"}, "downloads": -1, "filename": "pytest-django-queries-1.0.0rc1.tar.gz", "has_sig": false, "md5_digest": "fb71fbafc2d2940c4a28bf274995d371", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12104, "upload_time": "2019-05-27T15:45:21", "upload_time_iso_8601": "2019-05-27T15:45:21.676978Z", "url": "https://files.pythonhosted.org/packages/03/f6/ff2026c35567948c0033f3184154bcff976b8f36c62a78ec315d41e27a25/pytest-django-queries-1.0.0rc1.tar.gz", "yanked": false}], "1.0.0rc2": [{"comment_text": "", "digests": {"md5": "0c6385693e25fff26cb5d446925926f3", "sha256": "5627f299de128a3e0574ecc2604d1b7d1c57f349e058c1251f878e60a7ffa935"}, "downloads": -1, "filename": "pytest-django-queries-1.0.0rc2.tar.gz", "has_sig": false, "md5_digest": "0c6385693e25fff26cb5d446925926f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13348, "upload_time": "2019-06-05T15:03:30", "upload_time_iso_8601": "2019-06-05T15:03:30.876327Z", "url": "https://files.pythonhosted.org/packages/80/6d/6168d993703bc248a478080009796398a93789e9a8eac459d65980b34a7e/pytest-django-queries-1.0.0rc2.tar.gz", "yanked": false}], "1.0.0rc3": [{"comment_text": "", "digests": {"md5": "3ed07e95847ed0be48155e979b3744f8", "sha256": "5cc13639401c4c7a49408fbc2fbe32b68a83221f6931018d24710659130b1fb6"}, "downloads": -1, "filename": "pytest-django-queries-1.0.0rc3.tar.gz", "has_sig": false, "md5_digest": "3ed07e95847ed0be48155e979b3744f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13671, "upload_time": "2019-06-06T16:21:28", "upload_time_iso_8601": "2019-06-06T16:21:28.071842Z", "url": "https://files.pythonhosted.org/packages/e2/c7/aba29f089f4a41045c7b102352be77d8861f820f05f7e5b0fad64505936f/pytest-django-queries-1.0.0rc3.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "32545176e4167ab8d789a25f8d8536e0", "sha256": "16f4dffa5a4c95bb2e10e6f4289796503578bc46ea69a81b2f4ed8376f7c75b5"}, "downloads": -1, "filename": "pytest-django-queries-1.1.0.tar.gz", "has_sig": false, "md5_digest": "32545176e4167ab8d789a25f8d8536e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13869, "upload_time": "2019-07-01T11:44:08", "upload_time_iso_8601": "2019-07-01T11:44:08.017143Z", "url": "https://files.pythonhosted.org/packages/a3/ff/74f9876e51feeaa555b91e6a387843724c8f0c294bc699a746d3cacb8910/pytest-django-queries-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "32545176e4167ab8d789a25f8d8536e0", "sha256": "16f4dffa5a4c95bb2e10e6f4289796503578bc46ea69a81b2f4ed8376f7c75b5"}, "downloads": -1, "filename": "pytest-django-queries-1.1.0.tar.gz", "has_sig": false, "md5_digest": "32545176e4167ab8d789a25f8d8536e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13869, "upload_time": "2019-07-01T11:44:08", "upload_time_iso_8601": "2019-07-01T11:44:08.017143Z", "url": "https://files.pythonhosted.org/packages/a3/ff/74f9876e51feeaa555b91e6a387843724c8f0c294bc699a746d3cacb8910/pytest-django-queries-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:14 2020"}