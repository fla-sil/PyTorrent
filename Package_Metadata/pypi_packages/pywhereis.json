{"info": {"author": "Mouad Benchchaoui", "author_email": "mouadino@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "Summary\n=======\nLocate a python object (package, module, function, class ...) source file.\n\nUsage\n=====\n\n   ``pywhereis [-v] [-s] dotted_name...``\n\nCMD line Examples\n=================\n\n- The ``pywhereis`` script accept a package, module, function or a class ::\n\n    $ pywhereis shlex\n    shlex: /usr/lib/python2.7/shlex.py\n    $ pywhereis os.path.abspath\n    os.path.abspath: /usr/lib/python2.7/posixpath.py  337\n\n- You can pass more than one dotted-name to it ::\n\n    $ pywhereis shlex inspect.ismodule\n    shlex: /usr/lib/python2.7/shlex.py\n    inspect.ismodule: /usr/lib/python2.7/inspect.py  51\n\n- If the name is a function, class or method the result will contain the line\n  number where the object is defined ::\n\n    $ pywhereis unittest.TestCase.assertEqual\n    unittest.TestCase.assertEqual: /usr/lib/python2.7/unittest.py  344\n\n- It will **fail** localizing object that are not pure python ::\n\n    $ pywhereis.py sys\n    sys:\n\n- For more info about why the localization fail you can use the verbose\n  mode ::\n\n    $ pywhereis -v sys\n    sys: Error: <module 'sys' (built-in)> is not pure python.\n\n- If it's run with -s, --site-packages option the script will check first in\n  site-packages instead of the default which is to check in the current dir\n  first ::\n\n    $ cd ~ ; touch os.py\n    $ pywhereis os\n    os: /home/mouad/os.py\n    $ pywhereis -s os\n    os: /usr/lib/python2.7/os.py\n\n  **Note:** Option only available for python3.2 and below !\n\n- For python2.7 and above you can also do ::\n\n    $ python2.7 -mpywhereis subprocess.Popen\n    subprocess.Popen: /usr/local/lib/python2.7/subprocess.py 33\n\n  **Note:** The above will only work if pywhereis was installed in that python version.\n\n- Of course you can still search in a different python version by running this\n  script using that python ::\n\n    $ python3.4 $(which pywhereis) html\n    html: /usr/local/lib/python3.4/html/__init__.py\n\n\nCode Examples\n=============\n\nThis package come also with a python package ``whereis`` that can be used like\nso ::\n\n    >>> import whereis\n    >>> whereis.resolve('sys')\n    <module 'sys' (built-in)>\n    >>> whereis.locate('os')\n    '/usr/lib/python2.7/os.py'\n\n\nCHANGES\n=======\n\n0.3\n---\n\n- Fixing bug _issue#2: https://bitbucket.org/mouad/pywhereis/issue/2, This mean that\n  user can install pywhereis once in any Python version, and use it everywhere i.e.\n  with other python versions or inside virtualenv ... , This work for now with\n  only POSIX compliant system.\n- BUGFIX: Fix locating not pure Python modules, bug noticed when trying to\n  locate lxml.etree.XPath.\n- Add support to Python3.4 and Python3.3.\n- Change versioning instead of 0.0.2 now it's 0.3.\n- **Backward incompatibilty change**: pywhereis return now the real path instead of symlink.\n\n0.0.2\n-----\n\n- Add support to locating zip archive and eggs modules.\n- Add a new argument -s, --site-packages that enable looking in\n  site-packages directory before current directory.\n- BUGFIX: Fix ``whereis.resolve`` to always raise ImportError even if the\n  module that we are searching for is broken (SyntaxError ...), the same\n  with ``whereis.locate``.\n\n0.0.1\n-----\n\nFirst release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/mouad/pywhereis", "keywords": "file source object dotted name automatic discovery", "license": "BSD Licence", "maintainer": null, "maintainer_email": null, "name": "pywhereis", "package_url": "https://pypi.org/project/pywhereis/", "platform": "Cross Platform", "project_url": "https://pypi.org/project/pywhereis/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/mouad/pywhereis"}, "release_url": "https://pypi.org/project/pywhereis/0.3/", "requires_dist": null, "requires_python": null, "summary": "Unix whereis-like python script and package to find the source file of python object (package, module, function, class ...).", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"summary\">\n<h2>Summary</h2>\n<p>Locate a python object (package, module, function, class \u2026) source file.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<blockquote>\n<tt>pywhereis <span class=\"pre\">[-v]</span> <span class=\"pre\">[-s]</span> <span class=\"pre\">dotted_name...</span></tt></blockquote>\n</div>\n<div id=\"cmd-line-examples\">\n<h2>CMD line Examples</h2>\n<ul>\n<li><p>The <tt>pywhereis</tt> script accept a package, module, function or a class</p>\n<pre>$ pywhereis shlex\nshlex: /usr/lib/python2.7/shlex.py\n$ pywhereis os.path.abspath\nos.path.abspath: /usr/lib/python2.7/posixpath.py  337\n</pre>\n</li>\n<li><p>You can pass more than one dotted-name to it</p>\n<pre>$ pywhereis shlex inspect.ismodule\nshlex: /usr/lib/python2.7/shlex.py\ninspect.ismodule: /usr/lib/python2.7/inspect.py  51\n</pre>\n</li>\n<li><p>If the name is a function, class or method the result will contain the line\nnumber where the object is defined</p>\n<pre>$ pywhereis unittest.TestCase.assertEqual\nunittest.TestCase.assertEqual: /usr/lib/python2.7/unittest.py  344\n</pre>\n</li>\n<li><p>It will <strong>fail</strong> localizing object that are not pure python</p>\n<pre>$ pywhereis.py sys\nsys:\n</pre>\n</li>\n<li><p>For more info about why the localization fail you can use the verbose\nmode</p>\n<pre>$ pywhereis -v sys\nsys: Error: &lt;module 'sys' (built-in)&gt; is not pure python.\n</pre>\n</li>\n<li><p>If it\u2019s run with -s, \u2013site-packages option the script will check first in\nsite-packages instead of the default which is to check in the current dir\nfirst</p>\n<pre>$ cd ~ ; touch os.py\n$ pywhereis os\nos: /home/mouad/os.py\n$ pywhereis -s os\nos: /usr/lib/python2.7/os.py\n</pre>\n<p><strong>Note:</strong> Option only available for python3.2 and below !</p>\n</li>\n<li><p>For python2.7 and above you can also do</p>\n<pre>$ python2.7 -mpywhereis subprocess.Popen\nsubprocess.Popen: /usr/local/lib/python2.7/subprocess.py 33\n</pre>\n<p><strong>Note:</strong> The above will only work if pywhereis was installed in that python version.</p>\n</li>\n<li><p>Of course you can still search in a different python version by running this\nscript using that python</p>\n<pre>$ python3.4 $(which pywhereis) html\nhtml: /usr/local/lib/python3.4/html/__init__.py\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"code-examples\">\n<h2>Code Examples</h2>\n<p>This package come also with a python package <tt>whereis</tt> that can be used like\nso</p>\n<pre>&gt;&gt;&gt; import whereis\n&gt;&gt;&gt; whereis.resolve('sys')\n&lt;module 'sys' (built-in)&gt;\n&gt;&gt;&gt; whereis.locate('os')\n'/usr/lib/python2.7/os.py'\n</pre>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>0.3</h3>\n<ul>\n<li>Fixing bug _issue#2: <a href=\"https://bitbucket.org/mouad/pywhereis/issue/2\" rel=\"nofollow\">https://bitbucket.org/mouad/pywhereis/issue/2</a>, This mean that\nuser can install pywhereis once in any Python version, and use it everywhere i.e.\nwith other python versions or inside virtualenv \u2026 , This work for now with\nonly POSIX compliant system.</li>\n<li>BUGFIX: Fix locating not pure Python modules, bug noticed when trying to\nlocate lxml.etree.XPath.</li>\n<li>Add support to Python3.4 and Python3.3.</li>\n<li>Change versioning instead of 0.0.2 now it\u2019s 0.3.</li>\n<li><strong>Backward incompatibilty change</strong>: pywhereis return now the real path instead of symlink.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.0.2</h3>\n<ul>\n<li>Add support to locating zip archive and eggs modules.</li>\n<li>Add a new argument -s, \u2013site-packages that enable looking in\nsite-packages directory before current directory.</li>\n<li>BUGFIX: Fix <tt>whereis.resolve</tt> to always raise ImportError even if the\nmodule that we are searching for is broken (SyntaxError \u2026), the same\nwith <tt>whereis.locate</tt>.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.0.1</h3>\n<p>First release.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1170273, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b1394c39c89fee11f93456c011493ac3", "sha256": "020c38901e3225630bb78a41647d36c4cae39dce376312d6e6f98fd4cfb6d95f"}, "downloads": -1, "filename": "pywhereis-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b1394c39c89fee11f93456c011493ac3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5187, "upload_time": "2011-10-27T02:29:08", "upload_time_iso_8601": "2011-10-27T02:29:08.484729Z", "url": "https://files.pythonhosted.org/packages/57/29/a444abdc1a96c777e8a205885db2ba741aa50a83fb261d236ae2dc259c25/pywhereis-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "5a2a800269e985bffcb8db00ac9e977a", "sha256": "f04abbcfe3e85027441e61e72d3da16e734e02a9a375e5976375be5accd01eab"}, "downloads": -1, "filename": "pywhereis-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5a2a800269e985bffcb8db00ac9e977a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7539, "upload_time": "2011-11-01T17:22:59", "upload_time_iso_8601": "2011-11-01T17:22:59.747753Z", "url": "https://files.pythonhosted.org/packages/cc/a8/ccce4e06b1d3a456716b5ade3dc3d7a0189a1911e22a9ccc677842769c9d/pywhereis-0.0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "3cc1a1e41bdd7a4a42af650aa48f0265", "sha256": "78ec3d1e46053742fcb0290e2108997cc18ada4e0bb8cb0d927a5919550779f0"}, "downloads": -1, "filename": "pywhereis-0.3.tar.gz", "has_sig": false, "md5_digest": "3cc1a1e41bdd7a4a42af650aa48f0265", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8403, "upload_time": "2014-07-26T19:34:40", "upload_time_iso_8601": "2014-07-26T19:34:40.929316Z", "url": "https://files.pythonhosted.org/packages/51/09/5a199c967a01323ea955f287270d7b8da6ef796229829e7998bf557e1678/pywhereis-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3cc1a1e41bdd7a4a42af650aa48f0265", "sha256": "78ec3d1e46053742fcb0290e2108997cc18ada4e0bb8cb0d927a5919550779f0"}, "downloads": -1, "filename": "pywhereis-0.3.tar.gz", "has_sig": false, "md5_digest": "3cc1a1e41bdd7a4a42af650aa48f0265", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8403, "upload_time": "2014-07-26T19:34:40", "upload_time_iso_8601": "2014-07-26T19:34:40.929316Z", "url": "https://files.pythonhosted.org/packages/51/09/5a199c967a01323ea955f287270d7b8da6ef796229829e7998bf557e1678/pywhereis-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:24 2020"}