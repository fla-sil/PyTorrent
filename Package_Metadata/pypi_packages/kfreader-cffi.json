{"info": {"author": "Maxim Stolyarchuk", "author_email": "maxim.stolyarchuk@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "kfreader-cffi\n===================\n\n.. image:: https://travis-ci.org/mstolyarchuk/kfreader-cffi.svg?branch=master\n    :target: https://travis-ci.org/mstolyarchuk/kfreader-cffi\n\nkfreader-cffi is a Python package for reading binary result files produced by\nthe Amsterdam Density Functional (ADF) program suite (http://scm.com). Instead of kf.py_, this package does not require working ADF installation.\n\nIt uses CFFI_ to interface with the original C library KFReader_.\n\nInstallation\n------------\n\n*Note that kfreader-cffi currently is only tested under Python 3.x on Ubuntu*\n\nFirst we need to install some prerequisites:\n\n.. code:: sh\n\n  apt-get update\n  apt-get install build-essential gcc libffi-dev python3-dev\n\nThen to install the package, simply:\n\n.. code:: sh\n\n  pip install kfreader-cffi\n  \nOr for development:\n\n.. code:: sh\n  \n  git clone https://github.com/mstolyarchuk/kfreader-cffi\n  pip install -e kfreader-cffi\n\nShared library ``libkfreader.so`` will be *automatically* built from C source files\nprovided in /vendor directory during the installation process\n(see ``Makefile`` for details).\n  \nNow you are ready to go!\n\nGetting started\n---------------\n\nBefore attempting to use this package, you might find the official\ndocumentation_ on TAPE21 useful.\n\nUsage\n^^^^^\n\n.. code:: python\n\n\t>>> from kfreader import KFReader, kfropen\n\t\n\t# Open a TAPE21 file.\n\t>>> kfr = KFReader('file.t21')\n\t# Get the value of a variable given its section and name.\n\t>>> kfr.get_data('General', 'file-ident')\n\t'TAPE21'\n\t>>> kfr.close()\n\t\n\t# We can also seamlessly use the with-statement.\n\t# Let's simplify the above example:\n\t>>> with kfropen('file.t21') as kfr:\n\t>>>\t# Use the reader as regular. The file will be closed\n\t>>>     # when the block ends.\n\t>>>     print(kfr.get_data('General', 'termination status'))\n\t'NORMAL TERMINATION'\n\nAcknowledgments\n---------------\n\nMany thanks to Alexei Yakovlev and all the other developers (http://scm.com) of the original C routines.\nThis package would not exist without their work.\n\n.. _kf.py: http://www.scm.com/Downloads/2014/\n.. _CFFI: https://cffi.readthedocs.org/\n.. _KFReader: http://www.scm.com/Downloads/2014/\n.. _documentation: https://www.scm.com/documentation/ADF/Appendices/TAPE21/\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mstolyarchuk/kfreader-cffi", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "kfreader-cffi", "package_url": "https://pypi.org/project/kfreader-cffi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/kfreader-cffi/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mstolyarchuk/kfreader-cffi"}, "release_url": "https://pypi.org/project/kfreader-cffi/0.2.4/", "requires_dist": null, "requires_python": null, "summary": "Python bindings for KFReader, a library from the ADF computational chemistry package", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/mstolyarchuk/kfreader-cffi\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/mstolyarchuk/kfreader-cffi.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/664ef6387b2a82cf90c74c3eb98848ae2f49ca2f/68747470733a2f2f7472617669732d63692e6f72672f6d73746f6c7961726368756b2f6b667265616465722d636666692e7376673f6272616e63683d6d6173746572\"></a>\n<p>kfreader-cffi is a Python package for reading binary result files produced by\nthe Amsterdam Density Functional (ADF) program suite (<a href=\"http://scm.com\" rel=\"nofollow\">http://scm.com</a>). Instead of <a href=\"http://www.scm.com/Downloads/2014/\" rel=\"nofollow\">kf.py</a>, this package does not require working ADF installation.</p>\n<p>It uses <a href=\"https://cffi.readthedocs.org/\" rel=\"nofollow\">CFFI</a> to interface with the original C library <a href=\"http://www.scm.com/Downloads/2014/\" rel=\"nofollow\">KFReader</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><em>Note that kfreader-cffi currently is only tested under Python 3.x on Ubuntu</em></p>\n<p>First we need to install some prerequisites:</p>\n<pre>apt-get update\napt-get install build-essential gcc libffi-dev python3-dev\n</pre>\n<p>Then to install the package, simply:</p>\n<pre>pip install kfreader-cffi\n</pre>\n<p>Or for development:</p>\n<pre>git clone https://github.com/mstolyarchuk/kfreader-cffi\npip install -e kfreader-cffi\n</pre>\n<p>Shared library <tt>libkfreader.so</tt> will be <em>automatically</em> built from C source files\nprovided in /vendor directory during the installation process\n(see <tt>Makefile</tt> for details).</p>\n<p>Now you are ready to go!</p>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<p>Before attempting to use this package, you might find the official\n<a href=\"https://www.scm.com/documentation/ADF/Appendices/TAPE21/\" rel=\"nofollow\">documentation</a> on TAPE21 useful.</p>\n<div id=\"usage\">\n<h3>Usage</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">kfreader</span> <span class=\"kn\">import</span> <span class=\"n\">KFReader</span><span class=\"p\">,</span> <span class=\"n\">kfropen</span>\n\n<span class=\"c1\"># Open a TAPE21 file.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">kfr</span> <span class=\"o\">=</span> <span class=\"n\">KFReader</span><span class=\"p\">(</span><span class=\"s1\">'file.t21'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get the value of a variable given its section and name.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">kfr</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">(</span><span class=\"s1\">'General'</span><span class=\"p\">,</span> <span class=\"s1\">'file-ident'</span><span class=\"p\">)</span>\n<span class=\"s1\">'TAPE21'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">kfr</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># We can also seamlessly use the with-statement.</span>\n<span class=\"c1\"># Let's simplify the above example:</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"n\">kfropen</span><span class=\"p\">(</span><span class=\"s1\">'file.t21'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">kfr</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"c1\"># Use the reader as regular. The file will be closed</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"c1\"># when the block ends.</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">kfr</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">(</span><span class=\"s1\">'General'</span><span class=\"p\">,</span> <span class=\"s1\">'termination status'</span><span class=\"p\">))</span>\n<span class=\"s1\">'NORMAL TERMINATION'</span>\n</pre>\n</div>\n</div>\n<div id=\"acknowledgments\">\n<h2>Acknowledgments</h2>\n<p>Many thanks to Alexei Yakovlev and all the other developers (<a href=\"http://scm.com\" rel=\"nofollow\">http://scm.com</a>) of the original C routines.\nThis package would not exist without their work.</p>\n</div>\n\n          </div>"}, "last_serial": 2204422, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "b271ebf955f3d384dc5f180a0547a3f9", "sha256": "e10718947e94078c0fc0c8538fc078b74d12f953bb76dfa6abd572552ee1d9d8"}, "downloads": -1, "filename": "kfreader-cffi-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b271ebf955f3d384dc5f180a0547a3f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3085, "upload_time": "2015-07-19T01:21:06", "upload_time_iso_8601": "2015-07-19T01:21:06.943921Z", "url": "https://files.pythonhosted.org/packages/85/5a/d62a8c68930dae847f798548d36f90b9300c63177cd3bf6a569d442f8250/kfreader-cffi-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "ec6ac65417590bb0e6470f7fc6b24ac7", "sha256": "d800b5eca8a9a984dea29e63481e5a04385976c8e0c24426c6b9feb63feffe1b"}, "downloads": -1, "filename": "kfreader-cffi-0.2.2.tar.gz", "has_sig": false, "md5_digest": "ec6ac65417590bb0e6470f7fc6b24ac7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21686, "upload_time": "2015-07-19T20:14:17", "upload_time_iso_8601": "2015-07-19T20:14:17.623085Z", "url": "https://files.pythonhosted.org/packages/32/39/ac655df234f48fb14b33ddb73db454709d274a38b23589d7e22e5e8d9032/kfreader-cffi-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "83bb2accc3bca5bb07046c73a86010a1", "sha256": "35876925838fd6a4a83a3de612d155cfae08a7f7854e93b606470afed6bff68a"}, "downloads": -1, "filename": "kfreader-cffi-0.2.3.tar.gz", "has_sig": false, "md5_digest": "83bb2accc3bca5bb07046c73a86010a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21760, "upload_time": "2015-07-21T11:22:08", "upload_time_iso_8601": "2015-07-21T11:22:08.524793Z", "url": "https://files.pythonhosted.org/packages/94/bc/9d6f548ee88b99626a2abae516d96f171df73fc85675a9ad44248ef55e4d/kfreader-cffi-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "b07e0f56c3bc0b72f1d0497326f62b5b", "sha256": "8f33165ab1269fa78fd2dc976b3238199396b6db3f490089280fdcc7a47d7f53"}, "downloads": -1, "filename": "kfreader-cffi-0.2.4.tar.gz", "has_sig": false, "md5_digest": "b07e0f56c3bc0b72f1d0497326f62b5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22177, "upload_time": "2016-07-05T20:42:06", "upload_time_iso_8601": "2016-07-05T20:42:06.707982Z", "url": "https://files.pythonhosted.org/packages/d0/fe/243eae18a5e6b6bd400bd4349a774dd930b2dc3b96aeb4dfee1ff0619adf/kfreader-cffi-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b07e0f56c3bc0b72f1d0497326f62b5b", "sha256": "8f33165ab1269fa78fd2dc976b3238199396b6db3f490089280fdcc7a47d7f53"}, "downloads": -1, "filename": "kfreader-cffi-0.2.4.tar.gz", "has_sig": false, "md5_digest": "b07e0f56c3bc0b72f1d0497326f62b5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22177, "upload_time": "2016-07-05T20:42:06", "upload_time_iso_8601": "2016-07-05T20:42:06.707982Z", "url": "https://files.pythonhosted.org/packages/d0/fe/243eae18a5e6b6bd400bd4349a774dd930b2dc3b96aeb4dfee1ff0619adf/kfreader-cffi-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:52 2020"}