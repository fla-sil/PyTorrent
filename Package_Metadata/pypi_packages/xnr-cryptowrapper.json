{"info": {"author": "xnr-k", "author_email": "xnr.k@protonmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# CryptoWrapper\n\n> Python 3.7+<br/>\n\n> PEP8<br/>\n\n> Async support (without cache)<br/>\n\n> Handles configurable requests cache, retries and general request errors.\n\n<br/>\n\n### Installation:\n\n`pip install xnr-cryptowrapper` <br/>\n\n### Functions:\n\nBuild around raw API commands, in order to allow users to more freely implement their own logic.<br/>\nEach APIs endpoints are made directly available by the CryptoWrapper class.<br/>\nMore detailed informations contained in the docs below:<br/>\n\n|                                                |            Description            |\n|------------------------------------------------|:---------------------------------:|\n| [CoinMarketCap.md](/bin/docs/CoinMarketCap.md) | Wrapper for the CoinMarketCap API |\n| [CryptoCompare.md](/bin/docs/CryptoCompare.md) | Wrapper for the CryptoCompare API |\n|               [BitMEX.md](/bin/docs/BitMEX.md) | Wrapper for the BitMEX REST API   |\n|             [Binance.md](/bin/docs/Binance.md) | Wrapper for the Binance APIs      |\n|       [BinanceDEX.md](/bin/docs/BinanceDEX.md) | Wrapper for the Binance DEX API   |\n|           [Bitfinex.md](/bin/docs/Bitfinex.md) | Wrapper for the Bitfinex API      |\n|             [Deribit.md](/bin/docs/Deribit.md) | Wrapper for the Deribit API       |\n\n<br/>\n\n### Examples:\n\nIf unspecified, result will not be cached.<br/>\nRetries avoided for errors (400, 401, 403, 404, 429, 500).<br/>\nRate limits informations generally present in responses to simplify the implementation of back off strategies.<br/>\n\nCoinMarketCap.global_aggregate_metrics_latest_GET()\n```python\n>>> from cryptowrapper import CryptoWrapper\n>>> api_key = \"Declare you API key\"\n>>> cmc = CryptoWrapper(api=\"CMC\", api_key=api_key, cache_expire=240)\n>>> cmc_wrapper = cmc.wrapper\n>>> cmc_wrapper.global_aggregate_metrics_latest_GET(convert=\"GBP\")\n{\n  'status': {\n      'timestamp': '2019-02-02T10:36:40.928Z',\n      'error_code': 0,\n      'error_message': None,\n      'elapsed': 6,\n      'credit_count': 1\n  },\n  'data': {\n      'active_cryptocurrencies': 2104,\n      'active_market_pairs': 15817,\n      'active_exchanges': 235,\n      'eth_dominance': 9.87368,\n      'btc_dominance': 53.2881,\n      'quote': {\n          'GBP': {\n              'total_market_cap': 87645952771.31316,\n              'total_volume_24h': 12135287028.006516,\n              'last_updated': '2019-02-02T10:36:00.000Z'\n          }\n      },\n      'last_updated': '2019-02-02T10:27:00.000Z'\n  },\n  'cached': False\n}\n```\n\n<br/>\n\nBitMEX.chat_GET()\n```python\n>>> from cryptowrapper import CryptoWrapper\n>>> api_key = \"Declare you API key\"\n>>> api_secret = \"Declare you API secret\"\n>>> bitmex = CryptoWrapper(api=\"BitMEX\", api_key=api_key, api_secret=api_secret)\n>>> bitmex_wrapper = bitmex.wrapper\n>>> bitmex_wrapper.chat_GET(count=2)\n[\n    {\n        'id': 1,\n        'date': '2014-11-24T12:00:21.539Z',\n        'user': 'BitMEX_Sam',\n        'message': 'Welcome to BitMEX! We are live.',\n        'html': 'Welcome to BitMEX! We are live.',\n        'fromBot': False,\n        'channelID': 1,\n        'cached': False\n    },\n    {\n        'id': 2,\n        'date': '2014-11-24T12:20:29.073Z',\n        'user': 'BitMEX_Arthur',\n        'message': 'Hello World',\n        'html': 'Hello World',\n        'fromBot': False,\n        'channelID': 1,\n        'cached': False\n    },\n    {\n        'ratelimit': {\n            'limit': '150',\n            'remaining': '149',\n            'reset': '1549626408'\n        }\n    }\n]\n```\n\n<br/>\n\nBinance.ping_GET()\n```python\n>>> from cryptowrapper import CryptoWrapper\n>>> binance = CryptoWrapper(api=\"Binance\")\n>>> binance_wrapper = binance.wrapper\n>>> binance_wrapper.ping_GET()\n{\n    'cached': False\n}\n```\n\n<br/>\n\nBinanceDEX.__getfunctions__()\n```python\n>>> from cryptowrapper import CryptoWrapper\n>>> binance_dex = CryptoWrapper(api=\"BinanceDEX\")\n>>> binance_dex_wrapper = binance_dex.wrapper\n>>> binance_dex_wrapper.__getfunctions__()\n[\n    'account_GET',\n    'account_sequence_GET',\n    'block_exchange_fee_GET',\n    'broadcast_POST',\n    'depth_GET',\n    'fees_GET',\n    'klines_GET',\n    'markets_GET',\n    'node_info_GET',\n    'orders_closed_GET',\n    'orders_id_GET',\n    'orders_open_GET',\n    'peers_GET',\n    'ticker_24h_GET',\n    'time_GET',\n    'tokens_GET',\n    'trades_GET',\n    'transaction_GET',\n    'transactions_GET',\n    'transactions_in_block_GET',\n    'validators_GET'\n]\n```\n\n<br/>\n\nFor a quick combined example see: [example.py](/test/example.py)<br/>\nFor the async version see: [async_example.py](/test/async_example.py)\n\n<br/>\n\n### Feedback:\n\nConstructive feedback & bug reports are welcome. <br/>\nContact informations:\n* <a href=\"https://github.com/xnr-k\"> github </a>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/xnr-k/cryptowrapper", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "xnr-cryptowrapper", "package_url": "https://pypi.org/project/xnr-cryptowrapper/", "platform": "", "project_url": "https://pypi.org/project/xnr-cryptowrapper/", "project_urls": {"Homepage": "https://github.com/xnr-k/cryptowrapper"}, "release_url": "https://pypi.org/project/xnr-cryptowrapper/0.1.1/", "requires_dist": ["requests (>=2.22.0)", "requests-async (>=0.6.2)", "requests-cache (>=0.5.2)"], "requires_python": "", "summary": "Wrapper around Cryptocurrency related APIs", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>CryptoWrapper</h1>\n<blockquote>\n<p>Python 3.7+<br></p>\n</blockquote>\n<blockquote>\n<p>PEP8<br></p>\n</blockquote>\n<blockquote>\n<p>Async support (without cache)<br></p>\n</blockquote>\n<blockquote>\n<p>Handles configurable requests cache, retries and general request errors.</p>\n</blockquote>\n<br>\n<h3>Installation:</h3>\n<p><code>pip install xnr-cryptowrapper</code> <br></p>\n<h3>Functions:</h3>\n<p>Build around raw API commands, in order to allow users to more freely implement their own logic.<br>\nEach APIs endpoints are made directly available by the CryptoWrapper class.<br>\nMore detailed informations contained in the docs below:<br></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"center\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"/bin/docs/CoinMarketCap.md\" rel=\"nofollow\">CoinMarketCap.md</a></td>\n<td align=\"center\">Wrapper for the CoinMarketCap API</td>\n</tr>\n<tr>\n<td><a href=\"/bin/docs/CryptoCompare.md\" rel=\"nofollow\">CryptoCompare.md</a></td>\n<td align=\"center\">Wrapper for the CryptoCompare API</td>\n</tr>\n<tr>\n<td><a href=\"/bin/docs/BitMEX.md\" rel=\"nofollow\">BitMEX.md</a></td>\n<td align=\"center\">Wrapper for the BitMEX REST API</td>\n</tr>\n<tr>\n<td><a href=\"/bin/docs/Binance.md\" rel=\"nofollow\">Binance.md</a></td>\n<td align=\"center\">Wrapper for the Binance APIs</td>\n</tr>\n<tr>\n<td><a href=\"/bin/docs/BinanceDEX.md\" rel=\"nofollow\">BinanceDEX.md</a></td>\n<td align=\"center\">Wrapper for the Binance DEX API</td>\n</tr>\n<tr>\n<td><a href=\"/bin/docs/Bitfinex.md\" rel=\"nofollow\">Bitfinex.md</a></td>\n<td align=\"center\">Wrapper for the Bitfinex API</td>\n</tr>\n<tr>\n<td><a href=\"/bin/docs/Deribit.md\" rel=\"nofollow\">Deribit.md</a></td>\n<td align=\"center\">Wrapper for the Deribit API</td>\n</tr></tbody></table>\n<br>\n<h3>Examples:</h3>\n<p>If unspecified, result will not be cached.<br>\nRetries avoided for errors (400, 401, 403, 404, 429, 500).<br>\nRate limits informations generally present in responses to simplify the implementation of back off strategies.<br></p>\n<p>CoinMarketCap.global_aggregate_metrics_latest_GET()</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cryptowrapper</span> <span class=\"kn\">import</span> <span class=\"n\">CryptoWrapper</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"Declare you API key\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cmc</span> <span class=\"o\">=</span> <span class=\"n\">CryptoWrapper</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"o\">=</span><span class=\"s2\">\"CMC\"</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"n\">cache_expire</span><span class=\"o\">=</span><span class=\"mi\">240</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cmc_wrapper</span> <span class=\"o\">=</span> <span class=\"n\">cmc</span><span class=\"o\">.</span><span class=\"n\">wrapper</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cmc_wrapper</span><span class=\"o\">.</span><span class=\"n\">global_aggregate_metrics_latest_GET</span><span class=\"p\">(</span><span class=\"n\">convert</span><span class=\"o\">=</span><span class=\"s2\">\"GBP\"</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s1\">'timestamp'</span><span class=\"p\">:</span> <span class=\"s1\">'2019-02-02T10:36:40.928Z'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'error_code'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n      <span class=\"s1\">'error_message'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n      <span class=\"s1\">'elapsed'</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span>\n      <span class=\"s1\">'credit_count'</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n  <span class=\"p\">},</span>\n  <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s1\">'active_cryptocurrencies'</span><span class=\"p\">:</span> <span class=\"mi\">2104</span><span class=\"p\">,</span>\n      <span class=\"s1\">'active_market_pairs'</span><span class=\"p\">:</span> <span class=\"mi\">15817</span><span class=\"p\">,</span>\n      <span class=\"s1\">'active_exchanges'</span><span class=\"p\">:</span> <span class=\"mi\">235</span><span class=\"p\">,</span>\n      <span class=\"s1\">'eth_dominance'</span><span class=\"p\">:</span> <span class=\"mf\">9.87368</span><span class=\"p\">,</span>\n      <span class=\"s1\">'btc_dominance'</span><span class=\"p\">:</span> <span class=\"mf\">53.2881</span><span class=\"p\">,</span>\n      <span class=\"s1\">'quote'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"s1\">'GBP'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n              <span class=\"s1\">'total_market_cap'</span><span class=\"p\">:</span> <span class=\"mf\">87645952771.31316</span><span class=\"p\">,</span>\n              <span class=\"s1\">'total_volume_24h'</span><span class=\"p\">:</span> <span class=\"mf\">12135287028.006516</span><span class=\"p\">,</span>\n              <span class=\"s1\">'last_updated'</span><span class=\"p\">:</span> <span class=\"s1\">'2019-02-02T10:36:00.000Z'</span>\n          <span class=\"p\">}</span>\n      <span class=\"p\">},</span>\n      <span class=\"s1\">'last_updated'</span><span class=\"p\">:</span> <span class=\"s1\">'2019-02-02T10:27:00.000Z'</span>\n  <span class=\"p\">},</span>\n  <span class=\"s1\">'cached'</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n<span class=\"p\">}</span>\n</pre>\n<br>\n<p>BitMEX.chat_GET()</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cryptowrapper</span> <span class=\"kn\">import</span> <span class=\"n\">CryptoWrapper</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"Declare you API key\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api_secret</span> <span class=\"o\">=</span> <span class=\"s2\">\"Declare you API secret\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bitmex</span> <span class=\"o\">=</span> <span class=\"n\">CryptoWrapper</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"o\">=</span><span class=\"s2\">\"BitMEX\"</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"n\">api_secret</span><span class=\"o\">=</span><span class=\"n\">api_secret</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bitmex_wrapper</span> <span class=\"o\">=</span> <span class=\"n\">bitmex</span><span class=\"o\">.</span><span class=\"n\">wrapper</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bitmex_wrapper</span><span class=\"o\">.</span><span class=\"n\">chat_GET</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"s1\">'date'</span><span class=\"p\">:</span> <span class=\"s1\">'2014-11-24T12:00:21.539Z'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'user'</span><span class=\"p\">:</span> <span class=\"s1\">'BitMEX_Sam'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'message'</span><span class=\"p\">:</span> <span class=\"s1\">'Welcome to BitMEX! We are live.'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'html'</span><span class=\"p\">:</span> <span class=\"s1\">'Welcome to BitMEX! We are live.'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'fromBot'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"s1\">'channelID'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"s1\">'cached'</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n        <span class=\"s1\">'date'</span><span class=\"p\">:</span> <span class=\"s1\">'2014-11-24T12:20:29.073Z'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'user'</span><span class=\"p\">:</span> <span class=\"s1\">'BitMEX_Arthur'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'message'</span><span class=\"p\">:</span> <span class=\"s1\">'Hello World'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'html'</span><span class=\"p\">:</span> <span class=\"s1\">'Hello World'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'fromBot'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"s1\">'channelID'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"s1\">'cached'</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'ratelimit'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'limit'</span><span class=\"p\">:</span> <span class=\"s1\">'150'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'remaining'</span><span class=\"p\">:</span> <span class=\"s1\">'149'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'reset'</span><span class=\"p\">:</span> <span class=\"s1\">'1549626408'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<br>\n<p>Binance.ping_GET()</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cryptowrapper</span> <span class=\"kn\">import</span> <span class=\"n\">CryptoWrapper</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binance</span> <span class=\"o\">=</span> <span class=\"n\">CryptoWrapper</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"o\">=</span><span class=\"s2\">\"Binance\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binance_wrapper</span> <span class=\"o\">=</span> <span class=\"n\">binance</span><span class=\"o\">.</span><span class=\"n\">wrapper</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binance_wrapper</span><span class=\"o\">.</span><span class=\"n\">ping_GET</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n    <span class=\"s1\">'cached'</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n<span class=\"p\">}</span>\n</pre>\n<br>\n<p>BinanceDEX.<strong>getfunctions</strong>()</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cryptowrapper</span> <span class=\"kn\">import</span> <span class=\"n\">CryptoWrapper</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binance_dex</span> <span class=\"o\">=</span> <span class=\"n\">CryptoWrapper</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"o\">=</span><span class=\"s2\">\"BinanceDEX\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binance_dex_wrapper</span> <span class=\"o\">=</span> <span class=\"n\">binance_dex</span><span class=\"o\">.</span><span class=\"n\">wrapper</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binance_dex_wrapper</span><span class=\"o\">.</span><span class=\"n\">__getfunctions__</span><span class=\"p\">()</span>\n<span class=\"p\">[</span>\n    <span class=\"s1\">'account_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'account_sequence_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'block_exchange_fee_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'broadcast_POST'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'depth_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'fees_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'klines_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'markets_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'node_info_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'orders_closed_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'orders_id_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'orders_open_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'peers_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'ticker_24h_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'time_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'tokens_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'trades_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'transaction_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'transactions_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'transactions_in_block_GET'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'validators_GET'</span>\n<span class=\"p\">]</span>\n</pre>\n<br>\n<p>For a quick combined example see: <a href=\"/test/example.py\" rel=\"nofollow\">example.py</a><br>\nFor the async version see: <a href=\"/test/async_example.py\" rel=\"nofollow\">async_example.py</a></p>\n<br>\n<h3>Feedback:</h3>\n<p>Constructive feedback &amp; bug reports are welcome. <br>\nContact informations:</p>\n<ul>\n<li><a href=\"https://github.com/xnr-k\" rel=\"nofollow\"> github </a></li>\n</ul>\n\n          </div>"}, "last_serial": 5782573, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "71589cafa46696ef15a72968b75ed225", "sha256": "715867a3b4911f502676a0e9def338e468a8d30a41f34334ec41ef3bb35c413a"}, "downloads": -1, "filename": "xnr_cryptowrapper-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "71589cafa46696ef15a72968b75ed225", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11388, "upload_time": "2019-04-16T17:00:03", "upload_time_iso_8601": "2019-04-16T17:00:03.501457Z", "url": "https://files.pythonhosted.org/packages/2b/a8/2e23ad9e2920d859cf4c80ec02a8dfed6274344099bb34d4232d4a26da43/xnr_cryptowrapper-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9fcc2a63a17462499ab553185b92ca2a", "sha256": "6c44904b1a4f675346621c74e94f543181e4a2e1f53cc64c7519b8f968c7494e"}, "downloads": -1, "filename": "xnr_cryptowrapper-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9fcc2a63a17462499ab553185b92ca2a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12490, "upload_time": "2019-09-04T17:12:23", "upload_time_iso_8601": "2019-09-04T17:12:23.804012Z", "url": "https://files.pythonhosted.org/packages/42/3f/7cd7b7eb17a0b54daa26a9bc9936e81a72a104c16e11b0ee8f6e15ef50d4/xnr_cryptowrapper-0.1.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9fcc2a63a17462499ab553185b92ca2a", "sha256": "6c44904b1a4f675346621c74e94f543181e4a2e1f53cc64c7519b8f968c7494e"}, "downloads": -1, "filename": "xnr_cryptowrapper-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9fcc2a63a17462499ab553185b92ca2a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12490, "upload_time": "2019-09-04T17:12:23", "upload_time_iso_8601": "2019-09-04T17:12:23.804012Z", "url": "https://files.pythonhosted.org/packages/42/3f/7cd7b7eb17a0b54daa26a9bc9936e81a72a104c16e11b0ee8f6e15ef50d4/xnr_cryptowrapper-0.1.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:24:49 2020"}