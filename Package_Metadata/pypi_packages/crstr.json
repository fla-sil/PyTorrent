{"info": {"author": "li-zyang", "author_email": "K_AEIx@163.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# crstr\nshell wrapper for [rstr](https://pypi.org/project/rstr/)\n\n## installation\n```\npip install crstr\n```\n\n## usage\n### Simple usage\nGennerate a string of random length between 1-255\n```\npython -m crstr -c <--CHARSET-->\n# e.g. \n# python -m crstr -c 'abcdefg'\n```\n### Advanced usage\nThe extra options are actually pre-defined charsets\n```\npython -m crstr [-h] [--version] [-l strlength]\n                [-B | -x | -X | -o | -b | -d | -a | -A | --lower-case | -w | --lower-word | --upper-word | -c charset]\n                [-v | -p | -r regex]\n\n  -l strlength, --length strlength\n                        The length of the output string\n  -B, --64, --base64    use base64 charset\n  -x, --16, --hexadecimal\n                        use lower-case hexadecimal charset\n  -X, --16U, --HEXADECIMAL\n                        use upper-case hexadecimal charset\n  -o, --8, --octal      use octal charset\n  -b, --2, --binary     use binary charset\n  -d, --10, --decimal   use decimal charset\n  -a, --alpha           use alphabet (both upper-case & lower-case) charset\n  -A, --ALPHA           use upper-case alphabet charset\n  --lower-case          use lower-case alphabet charset\n  -w, --word            use word charset (alphabet & number)\n  --lower-word          use lower-case word charset\n  --upper-word          use upper-case word charset\n  -c charset, --charset charset\n                        use customized charset\n  -v, --variable        generate python variable-name-allowed string\n  -p, --package         generate common package-name-styled string\n  -r regex, --regex regex\n                        use customized regex\n```\nYou can give this command an alias to simplify the it:   \nAdd the following line to you bashrc  \n> Usually `~/.bashrc` (current user) or `/etc/bashrc` (global); if you use Git \nFor Windows, it's `/etc/bash.bashrc`\n```\nalias crstr='python -m crstr'\n```\nThen you can use the command\n```\ncrstr [options]\n```\n\n## CAUTIONS\n1. An error would occur when attempting to generate a random string longer than \n101 characters using regex, this is a known bug of `rstr` which is the core \nlibrary of this program\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/li-zyang/zTools/tree/master/crstr", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "crstr", "package_url": "https://pypi.org/project/crstr/", "platform": "", "project_url": "https://pypi.org/project/crstr/", "project_urls": {"Homepage": "https://github.com/li-zyang/zTools/tree/master/crstr"}, "release_url": "https://pypi.org/project/crstr/1.0.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "shell wrapper for rstr (https://pypi.org/project/rstr/)", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>crstr</h1>\n<p>shell wrapper for <a href=\"https://pypi.org/project/rstr/\" rel=\"nofollow\">rstr</a></p>\n<h2>installation</h2>\n<pre><code>pip install crstr\n</code></pre>\n<h2>usage</h2>\n<h3>Simple usage</h3>\n<p>Gennerate a string of random length between 1-255</p>\n<pre><code>python -m crstr -c &lt;--CHARSET--&gt;\n# e.g. \n# python -m crstr -c 'abcdefg'\n</code></pre>\n<h3>Advanced usage</h3>\n<p>The extra options are actually pre-defined charsets</p>\n<pre><code>python -m crstr [-h] [--version] [-l strlength]\n                [-B | -x | -X | -o | -b | -d | -a | -A | --lower-case | -w | --lower-word | --upper-word | -c charset]\n                [-v | -p | -r regex]\n\n  -l strlength, --length strlength\n                        The length of the output string\n  -B, --64, --base64    use base64 charset\n  -x, --16, --hexadecimal\n                        use lower-case hexadecimal charset\n  -X, --16U, --HEXADECIMAL\n                        use upper-case hexadecimal charset\n  -o, --8, --octal      use octal charset\n  -b, --2, --binary     use binary charset\n  -d, --10, --decimal   use decimal charset\n  -a, --alpha           use alphabet (both upper-case &amp; lower-case) charset\n  -A, --ALPHA           use upper-case alphabet charset\n  --lower-case          use lower-case alphabet charset\n  -w, --word            use word charset (alphabet &amp; number)\n  --lower-word          use lower-case word charset\n  --upper-word          use upper-case word charset\n  -c charset, --charset charset\n                        use customized charset\n  -v, --variable        generate python variable-name-allowed string\n  -p, --package         generate common package-name-styled string\n  -r regex, --regex regex\n                        use customized regex\n</code></pre>\n<p>You can give this command an alias to simplify the it:<br>\nAdd the following line to you bashrc</p>\n<blockquote>\n<p>Usually <code>~/.bashrc</code> (current user) or <code>/etc/bashrc</code> (global); if you use Git\nFor Windows, it's <code>/etc/bash.bashrc</code></p>\n</blockquote>\n<pre><code>alias crstr='python -m crstr'\n</code></pre>\n<p>Then you can use the command</p>\n<pre><code>crstr [options]\n</code></pre>\n<h2>CAUTIONS</h2>\n<ol>\n<li>An error would occur when attempting to generate a random string longer than\n101 characters using regex, this is a known bug of <code>rstr</code> which is the core\nlibrary of this program</li>\n</ol>\n\n          </div>"}, "last_serial": 6790174, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "1005922b04126e678a13329801b390ee", "sha256": "c21715f3b0ea9396b2296d6e113bb5e46a5af8718db4ed6021cd375b25ed2d52"}, "downloads": -1, "filename": "crstr-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1005922b04126e678a13329801b390ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4638, "upload_time": "2020-03-11T07:04:59", "upload_time_iso_8601": "2020-03-11T07:04:59.564181Z", "url": "https://files.pythonhosted.org/packages/98/35/d80f9dfec1bdee929286d69f3056fc3d790f3ff7bc047476e6fead647e6f/crstr-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb6f0157d57fa55c0923a1be330443b8", "sha256": "1d0937ca3c9bbedfd615ed79d9e8f2e3879e12c2a288c0c237ae78780bbe3ec5"}, "downloads": -1, "filename": "crstr-1.0.0.tar.gz", "has_sig": false, "md5_digest": "fb6f0157d57fa55c0923a1be330443b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3527, "upload_time": "2020-03-11T07:05:01", "upload_time_iso_8601": "2020-03-11T07:05:01.776254Z", "url": "https://files.pythonhosted.org/packages/34/09/1db65c28753c52c7769d9cddb4386926f9e99dab24915a2160c0f17929ff/crstr-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1005922b04126e678a13329801b390ee", "sha256": "c21715f3b0ea9396b2296d6e113bb5e46a5af8718db4ed6021cd375b25ed2d52"}, "downloads": -1, "filename": "crstr-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1005922b04126e678a13329801b390ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4638, "upload_time": "2020-03-11T07:04:59", "upload_time_iso_8601": "2020-03-11T07:04:59.564181Z", "url": "https://files.pythonhosted.org/packages/98/35/d80f9dfec1bdee929286d69f3056fc3d790f3ff7bc047476e6fead647e6f/crstr-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb6f0157d57fa55c0923a1be330443b8", "sha256": "1d0937ca3c9bbedfd615ed79d9e8f2e3879e12c2a288c0c237ae78780bbe3ec5"}, "downloads": -1, "filename": "crstr-1.0.0.tar.gz", "has_sig": false, "md5_digest": "fb6f0157d57fa55c0923a1be330443b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3527, "upload_time": "2020-03-11T07:05:01", "upload_time_iso_8601": "2020-03-11T07:05:01.776254Z", "url": "https://files.pythonhosted.org/packages/34/09/1db65c28753c52c7769d9cddb4386926f9e99dab24915a2160c0f17929ff/crstr-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:08 2020"}