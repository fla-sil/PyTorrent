{"info": {"author": "Matt Cooper", "author_email": "vtbassmatt@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 7 - Inactive", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Internet :: WWW/HTTP :: WSGI :: Server"], "description": "# azf-wsgi - WSGI apps on Azure Functions\n\n**DEPRECATION NOTICE**: The Azure Functions team has built [first-class support for WSGI](https://github.com/Azure/azure-functions-python-library/pull/45) on Azure Functions.\nI recommend you switch to their implementation.\n\n---\n\nThis was an adapter package to let you run WSGI apps (Django, Flask, etc.) on Azure Functions.\n\nExample:\n```python\nimport azure.functions as func\n\n# note that the package is \"azf-wsgi\" but the import is \"azf_wsgi\"\nfrom azf_wsgi import AzureFunctionsWsgi\n# Django, for example, but works with any WSGI app\nfrom my_django_app.wsgi import application\n\n\ndef main(req: func.HttpRequest, context: func.Context) -> func.HttpResponse:\n    return AzureFunctionsWsgi(application).main(req, context)\n```\n\n## Usage\n\n### Install Azure Functions\nFollow the instructions [here](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python) to get set up locally.\nI created a Function called \"DjangoTrigger\", but you can call yours whatever.\n\n### Install your WSGI app\nI found it's easiest if you package your WSGI app using a setup.py script, then `pip install` it.\nIf you don't want to do that, you'll have to make sure your WSGI entrypoint is importable from the module where you define your Azure Function.\nI'm no Python imports expert, so I just added `sys.path.insert(0, './my_proj')` right before I try to import the package.\n\n### Install this package\n`pip install azf-wsgi` - no need to put this in Django's `INSTALLED_APPS` or anything like that.\nBe sure to update `requirements.txt` to include `azf-wsgi` as a requirement.\n\n### Configure Azure Functions to hand off to your WSGI app\nFirst, we want to delegate routing to your WSGI app. Edit your `function.json` to include a catch-all route called \"{*route}\":\n\n```json\n{\n  \"scriptFile\": \"__init__.py\",\n  \"bindings\": [\n    {\n      \"authLevel\": \"anonymous\",\n      \"type\": \"httpTrigger\",\n      \"direction\": \"in\",\n      \"name\": \"req\",\n      \"methods\": [\n        \"get\",\n        \"post\"\n      ],\n      \"route\": \"app/{*route}\"\n    },\n    {\n      \"type\": \"http\",\n      \"direction\": \"out\",\n      \"name\": \"$return\"\n    }\n  ]\n}\n```\n\nI also didn't want the default 'api/' path on all my routes, so I fixed my `host.json` to look like this:\n\n```json\n{\n    \"version\":  \"2.0\",\n    \"extensions\": {\n        \"http\": {\n            \"routePrefix\": \"\"\n        }\n    }\n}\n```\n\nWithout this configuration, the only paths your WSGI app would ever see would start with \"api/\\<FunctionName\\>/\".\nThat works, but it would require you to repeat those boilerplate prefixes on every route you configured.\n**However**, you don't want to completely take over all routes (by having an empty `routePrefix` _and_ a catch-all route in your function) because this disables important Azure machinery.\n\nFinally, setup your Function's `__init__.py` to delegate to the WSGI adapter:\n\n```python\nimport azure.functions as func\n\nfrom azf_wsgi import AzureFunctionsWsgi\nfrom my_django_app.wsgi import application\n\n\ndef main(req: func.HttpRequest) -> func.HttpResponse:\n    return AzureFunctionsWsgi(application).main(req)\n```\n\nThe adapter optionally takes the `Context` object as well:\n\n```python\ndef main(req: func.HttpRequest, context: func.Context) -> func.HttpResponse:\n    return AzureFunctionsWsgi(application).main(req, context)\n```\n\n\nThe adapter will stuff in the OS's environment block much like a CGI request. If for some reason you don't want that, you can pass `False` to `include_os_environ`:\n\n```python\ndef main(req: func.HttpRequest, context: func.Context) -> func.HttpResponse:\n    return AzureFunctionsWsgi(application, False).main(req, context)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vtbassmatt/azf-wsgi", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "azf-wsgi", "package_url": "https://pypi.org/project/azf-wsgi/", "platform": "", "project_url": "https://pypi.org/project/azf-wsgi/", "project_urls": {"Homepage": "https://github.com/vtbassmatt/azf-wsgi"}, "release_url": "https://pypi.org/project/azf-wsgi/0.3.1/", "requires_dist": ["azure-functions"], "requires_python": "", "summary": "Azure Functions WSGI implementation [deprecated]", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>azf-wsgi - WSGI apps on Azure Functions</h1>\n<p><strong>DEPRECATION NOTICE</strong>: The Azure Functions team has built <a href=\"https://github.com/Azure/azure-functions-python-library/pull/45\" rel=\"nofollow\">first-class support for WSGI</a> on Azure Functions.\nI recommend you switch to their implementation.</p>\n<hr>\n<p>This was an adapter package to let you run WSGI apps (Django, Flask, etc.) on Azure Functions.</p>\n<p>Example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">azure.functions</span> <span class=\"k\">as</span> <span class=\"nn\">func</span>\n\n<span class=\"c1\"># note that the package is \"azf-wsgi\" but the import is \"azf_wsgi\"</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azf_wsgi</span> <span class=\"kn\">import</span> <span class=\"n\">AzureFunctionsWsgi</span>\n<span class=\"c1\"># Django, for example, but works with any WSGI app</span>\n<span class=\"kn\">from</span> <span class=\"nn\">my_django_app.wsgi</span> <span class=\"kn\">import</span> <span class=\"n\">application</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">:</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">HttpRequest</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">HttpResponse</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">AzureFunctionsWsgi</span><span class=\"p\">(</span><span class=\"n\">application</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n</pre>\n<h2>Usage</h2>\n<h3>Install Azure Functions</h3>\n<p>Follow the instructions <a href=\"https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python\" rel=\"nofollow\">here</a> to get set up locally.\nI created a Function called \"DjangoTrigger\", but you can call yours whatever.</p>\n<h3>Install your WSGI app</h3>\n<p>I found it's easiest if you package your WSGI app using a setup.py script, then <code>pip install</code> it.\nIf you don't want to do that, you'll have to make sure your WSGI entrypoint is importable from the module where you define your Azure Function.\nI'm no Python imports expert, so I just added <code>sys.path.insert(0, './my_proj')</code> right before I try to import the package.</p>\n<h3>Install this package</h3>\n<p><code>pip install azf-wsgi</code> - no need to put this in Django's <code>INSTALLED_APPS</code> or anything like that.\nBe sure to update <code>requirements.txt</code> to include <code>azf-wsgi</code> as a requirement.</p>\n<h3>Configure Azure Functions to hand off to your WSGI app</h3>\n<p>First, we want to delegate routing to your WSGI app. Edit your <code>function.json</code> to include a catch-all route called \"{*route}\":</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"scriptFile\"</span><span class=\"p\">:</span> <span class=\"s2\">\"__init__.py\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"bindings\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"authLevel\"</span><span class=\"p\">:</span> <span class=\"s2\">\"anonymous\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"httpTrigger\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"direction\"</span><span class=\"p\">:</span> <span class=\"s2\">\"in\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"req\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"methods\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"get\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"post\"</span>\n      <span class=\"p\">],</span>\n      <span class=\"nt\">\"route\"</span><span class=\"p\">:</span> <span class=\"s2\">\"app/{*route}\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"direction\"</span><span class=\"p\">:</span> <span class=\"s2\">\"out\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"$return\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>I also didn't want the default 'api/' path on all my routes, so I fixed my <code>host.json</code> to look like this:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"version\"</span><span class=\"p\">:</span>  <span class=\"s2\">\"2.0\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"extensions\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"http\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"routePrefix\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Without this configuration, the only paths your WSGI app would ever see would start with \"api/&lt;FunctionName&gt;/\".\nThat works, but it would require you to repeat those boilerplate prefixes on every route you configured.\n<strong>However</strong>, you don't want to completely take over all routes (by having an empty <code>routePrefix</code> <em>and</em> a catch-all route in your function) because this disables important Azure machinery.</p>\n<p>Finally, setup your Function's <code>__init__.py</code> to delegate to the WSGI adapter:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">azure.functions</span> <span class=\"k\">as</span> <span class=\"nn\">func</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">azf_wsgi</span> <span class=\"kn\">import</span> <span class=\"n\">AzureFunctionsWsgi</span>\n<span class=\"kn\">from</span> <span class=\"nn\">my_django_app.wsgi</span> <span class=\"kn\">import</span> <span class=\"n\">application</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">:</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">HttpRequest</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">HttpResponse</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">AzureFunctionsWsgi</span><span class=\"p\">(</span><span class=\"n\">application</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n</pre>\n<p>The adapter optionally takes the <code>Context</code> object as well:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">:</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">HttpRequest</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">HttpResponse</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">AzureFunctionsWsgi</span><span class=\"p\">(</span><span class=\"n\">application</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n</pre>\n<p>The adapter will stuff in the OS's environment block much like a CGI request. If for some reason you don't want that, you can pass <code>False</code> to <code>include_os_environ</code>:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">:</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">HttpRequest</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">HttpResponse</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">AzureFunctionsWsgi</span><span class=\"p\">(</span><span class=\"n\">application</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6771552, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1b730fffb0f1d8ab224d64b527f19392", "sha256": "10992476ba0f60f7d21ec0e488b461f97a5982ce29a15d6b7e2566e7576eeef2"}, "downloads": -1, "filename": "azf_wsgi-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1b730fffb0f1d8ab224d64b527f19392", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4904, "upload_time": "2018-12-26T13:28:46", "upload_time_iso_8601": "2018-12-26T13:28:46.447451Z", "url": "https://files.pythonhosted.org/packages/7c/a4/eabe1f6677dcbb947450a8cf97eb3a5bf3227f23e3a3ce7d3238cc11906b/azf_wsgi-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d044eb657c4afa59abd3671ec180d27", "sha256": "2db88b8c4c70c938b4bec70edc0651dc9ff1eecfc80607a5a1c3cdd01f450268"}, "downloads": -1, "filename": "azf-wsgi-0.1.tar.gz", "has_sig": false, "md5_digest": "0d044eb657c4afa59abd3671ec180d27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3589, "upload_time": "2018-12-26T13:28:48", "upload_time_iso_8601": "2018-12-26T13:28:48.278515Z", "url": "https://files.pythonhosted.org/packages/a4/b1/1ce30adba5e0e8d41bc5b2120713d42819ecce2b1e1ad9f01bd227eac7f6/azf-wsgi-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "45f680e64573dd2b69c50c531a6106e6", "sha256": "1f116e99b910cf1d3ee03bb2aaceb9ad818b1734161dd25835e15152a832dced"}, "downloads": -1, "filename": "azf_wsgi-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "45f680e64573dd2b69c50c531a6106e6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5045, "upload_time": "2018-12-28T22:38:23", "upload_time_iso_8601": "2018-12-28T22:38:23.298256Z", "url": "https://files.pythonhosted.org/packages/ff/2a/39c8c8f26c91ce70487b944356fe39e09d89dae65d076a0c233ef390dd66/azf_wsgi-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db493d5ad491fd340c4a1193b55e1e04", "sha256": "a6d3e392636210d177d39c599c90935dd38c45d5608b89f83f64a55e4a48c76c"}, "downloads": -1, "filename": "azf-wsgi-0.1.1.tar.gz", "has_sig": false, "md5_digest": "db493d5ad491fd340c4a1193b55e1e04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3724, "upload_time": "2018-12-28T22:38:24", "upload_time_iso_8601": "2018-12-28T22:38:24.687853Z", "url": "https://files.pythonhosted.org/packages/28/8a/c836bc915b12eb30dcca216208f621f8b7894d913cf6061b31723badf420/azf-wsgi-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e66a6cc2d34845e28800b1c1048fae2c", "sha256": "ce8fa8a21286e71038073307462a9cdaab4709b372afebaa82e0d146d1891ef8"}, "downloads": -1, "filename": "azf_wsgi-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e66a6cc2d34845e28800b1c1048fae2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5064, "upload_time": "2018-12-28T22:46:40", "upload_time_iso_8601": "2018-12-28T22:46:40.264280Z", "url": "https://files.pythonhosted.org/packages/f9/a9/516a935f17dd1c202d7e0dc77d56eb1175f7c1c5893bfc1f2281b8550758/azf_wsgi-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d0d0b3d510ae3a685968e8f7dbde35e", "sha256": "5a7378315d2d3b775cc52086e19c1adf0e67fa1e9d9d157754035745cd7004e5"}, "downloads": -1, "filename": "azf-wsgi-0.1.2.tar.gz", "has_sig": false, "md5_digest": "0d0d0b3d510ae3a685968e8f7dbde35e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3742, "upload_time": "2018-12-28T22:46:41", "upload_time_iso_8601": "2018-12-28T22:46:41.582999Z", "url": "https://files.pythonhosted.org/packages/7a/9e/c8ca32d95d77bd1060ab12eeb00777401dfd26c08110911fdf06af338042/azf-wsgi-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "a837a5eff0e34a3d6f5c192473b10f77", "sha256": "47feef1e883c3a721f35b7b4b022df263ae58b0cd3b08891876da2b0685ca3b7"}, "downloads": -1, "filename": "azf_wsgi-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a837a5eff0e34a3d6f5c192473b10f77", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5085, "upload_time": "2018-12-28T22:51:11", "upload_time_iso_8601": "2018-12-28T22:51:11.606605Z", "url": "https://files.pythonhosted.org/packages/ac/8e/c179c1d4e3261e1a3374f042761773a236ec0d3c99f5e15cd789f9af6ee4/azf_wsgi-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cfd32fe2613f05132c794f57c1483204", "sha256": "68155f72eb285312fd5e1bd0f8b25609106563356c5f5ce9020a0df9d3f03d41"}, "downloads": -1, "filename": "azf-wsgi-0.1.3.tar.gz", "has_sig": false, "md5_digest": "cfd32fe2613f05132c794f57c1483204", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3766, "upload_time": "2018-12-28T22:51:12", "upload_time_iso_8601": "2018-12-28T22:51:12.878338Z", "url": "https://files.pythonhosted.org/packages/67/71/68633ea29e5ab997174895994daf3a49c4d792154cd2ffd503890d8930c9/azf-wsgi-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1b714345d905a189bea236e02e59051f", "sha256": "a371f30098af373d2cded646ad8b3627e043d8d60f19352104c52d8b5fcdb6c5"}, "downloads": -1, "filename": "azf_wsgi-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1b714345d905a189bea236e02e59051f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5101, "upload_time": "2018-12-28T23:10:22", "upload_time_iso_8601": "2018-12-28T23:10:22.640428Z", "url": "https://files.pythonhosted.org/packages/8b/c9/deeee7f67ec21fe18fa1bb4896caee186992769dbee2d53860b46666dcd8/azf_wsgi-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "918de3df3b8c9dc6a24065b74799ba8b", "sha256": "50a7f41454a02c0f0058fc66d016486a0912b29bd0dede81b5e7d40a1f88e263"}, "downloads": -1, "filename": "azf-wsgi-0.2.0.tar.gz", "has_sig": false, "md5_digest": "918de3df3b8c9dc6a24065b74799ba8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3778, "upload_time": "2018-12-28T23:10:23", "upload_time_iso_8601": "2018-12-28T23:10:23.997049Z", "url": "https://files.pythonhosted.org/packages/d2/c6/7399436a7ccd4da34092e042707a2e587c06235e20cf86352bad3cd5928e/azf-wsgi-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c30f5cf411802a033c4c7ce74effd0d0", "sha256": "d1254ff4a74c19a7ff71369d4c6c51e40947475857b4349a315c70cc88341837"}, "downloads": -1, "filename": "azf_wsgi-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c30f5cf411802a033c4c7ce74effd0d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5179, "upload_time": "2019-02-23T18:31:23", "upload_time_iso_8601": "2019-02-23T18:31:23.680767Z", "url": "https://files.pythonhosted.org/packages/63/22/5988edeb38ad523936de1b13a130ac4fe7335b808f593c91c9512436c908/azf_wsgi-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84e77e34219c3d783841803f1e7c5d67", "sha256": "c63dcb841222065ef979ba054bcdbdd185e8c91f3d06749ab62be178c806ac0e"}, "downloads": -1, "filename": "azf-wsgi-0.3.0.tar.gz", "has_sig": false, "md5_digest": "84e77e34219c3d783841803f1e7c5d67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3854, "upload_time": "2019-02-23T18:31:25", "upload_time_iso_8601": "2019-02-23T18:31:25.529685Z", "url": "https://files.pythonhosted.org/packages/d6/72/ca30e6062f3a79643c265dd9aa8e2e3a4317ea5b3d082a5a55dc92c722f2/azf-wsgi-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "84e7e4bea823dc96a7fe3c0cebab32aa", "sha256": "c271d982ebc1589399de04b2c35dc35c0dc9dda581bb7bfa851ac93947e16cd0"}, "downloads": -1, "filename": "azf_wsgi-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "84e7e4bea823dc96a7fe3c0cebab32aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5306, "upload_time": "2020-03-08T11:43:02", "upload_time_iso_8601": "2020-03-08T11:43:02.161604Z", "url": "https://files.pythonhosted.org/packages/63/41/541bfa89ee3431b91337cc1ce59c7cee034d2f49bb4530a2363573db79ee/azf_wsgi-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba8e83207b9b535777ba1261003ccf6e", "sha256": "85e508efe1d58e42ad4c4a3993d5a37608648fbb67f5525b7de6c91a64a08c17"}, "downloads": -1, "filename": "azf-wsgi-0.3.1.tar.gz", "has_sig": false, "md5_digest": "ba8e83207b9b535777ba1261003ccf6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3991, "upload_time": "2020-03-08T11:43:04", "upload_time_iso_8601": "2020-03-08T11:43:04.118183Z", "url": "https://files.pythonhosted.org/packages/41/2a/839c624faee7d740e5d9f25da5dc61e98c3bd4a5f1cccca53121e48938be/azf-wsgi-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "84e7e4bea823dc96a7fe3c0cebab32aa", "sha256": "c271d982ebc1589399de04b2c35dc35c0dc9dda581bb7bfa851ac93947e16cd0"}, "downloads": -1, "filename": "azf_wsgi-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "84e7e4bea823dc96a7fe3c0cebab32aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5306, "upload_time": "2020-03-08T11:43:02", "upload_time_iso_8601": "2020-03-08T11:43:02.161604Z", "url": "https://files.pythonhosted.org/packages/63/41/541bfa89ee3431b91337cc1ce59c7cee034d2f49bb4530a2363573db79ee/azf_wsgi-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba8e83207b9b535777ba1261003ccf6e", "sha256": "85e508efe1d58e42ad4c4a3993d5a37608648fbb67f5525b7de6c91a64a08c17"}, "downloads": -1, "filename": "azf-wsgi-0.3.1.tar.gz", "has_sig": false, "md5_digest": "ba8e83207b9b535777ba1261003ccf6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3991, "upload_time": "2020-03-08T11:43:04", "upload_time_iso_8601": "2020-03-08T11:43:04.118183Z", "url": "https://files.pythonhosted.org/packages/41/2a/839c624faee7d740e5d9f25da5dc61e98c3bd4a5f1cccca53121e48938be/azf-wsgi-0.3.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:29 2020"}