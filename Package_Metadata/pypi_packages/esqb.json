{"info": {"author": "Santiago Saavedra", "author_email": "ssaavedra@openshine.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": ".. image:: https://travis-ci.org/openshine/python-esqb.svg?branch=master\n    :target: https://travis-ci.org/openshine/python-esqb\n\n===========================\nElasticSearch Query Builder\n===========================\n\nA Query Builder to build queries specially suited for ElasticSearch queries\n\nExamples\n--------\n\nBasic example\n+++++++++++++\n\nThis code show how to define a simple query.\n\n.. code-block:: python\n\n    from esqb.query import BaseQuery\n\n\n    class SimpleQuery():\n        size = 0\n        query = {\n            \"bool\": {\n                \"must\": [\n                    {\n                        \"term\": {\n                            \"name\": {\n                                \"value\": \"esqb\"\n                            }\n                        }\n                    }\n                ]\n            }\n        }\n        aggs = {\n            \"by_logtime\": {\n                \"date_histogram\": {\n                    \"field\": \"time\",\n                    \"interval\": \"day\",\n                    \"order\": {\n                        \"_key\": \"desc\"\n                    }\n                }\n            }\n        }\n\nand this is the generated query.\n\n.. code-block:: json\n\n    {\n      \"query\": {\n        \"bool\": {\n          \"must\": [\n            {\n              \"term\": {\n                \"name\": {\n                  \"value\": \"esqb\"\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"size\": 0,\n      \"aggs\": {\n        \"by_logtime\": {\n          \"date_histogram\": {\n            \"field\": \"time\",\n            \"interval\": \"day\",\n            \"order\": {\n              \"_key\": \"desc\"\n            }\n          }\n        }\n      },\n      \"sort\": []\n    }\n\nVariables and filters\n+++++++++++++++++++++\n\nExample to create a query to show the the last **N** documents ordered by a **sort_field** between two dates (**ts** and **te**)\n\nv.py\n^^^^\n\nThis file show how to define the query variables.\n\n.. code-block:: python\n\n    from esqb.variable import Variable\n\n\n    ts = Variable('ts', None, str, True, 'Time start')\n    te = Variable('te', '2017-12-01', str, True, 'Time end')\n    size = Variable('query_size', 10, str, False, 'Term size')\n    sort_field = Variable('sort_field', '', str, True,\n                          'Field to do the ordination')\n    sort_order = Variable('sort_order', '', str, True, 'asc or desc')\n    variables = {\n        v.name: v.name for v in [\n            ts,\n            te,\n            size,\n            sort_field,\n            sort_order\n        ]\n    }\n\nfilters.py\n^^^^^^^^^^\n\nThis file show how to define a esqb query filter to add a date range.\n\n.. code-block:: python\n\n    from esqb.queryfilter import QueryFilter\n\n\n    class time_range_filter(QueryFilter):\n        \"\"\"\n        Query filter to filter between two dates.\n        \"\"\"\n\n        def __init__(self, field, ts, te):\n            self.field = field\n            self.variables = {\n                'ts': ts,\n                'te': te,\n            }\n\n        def apply(self, query, data):\n            query.setdefault(\n                'bool', {}\n            ).setdefault(\n                'must', []\n            ).append(\n                {\n                    'range': {\n                        self.field: {\n                            'gte': self.variables['ts'],\n                            'lte': self.variables['te'],\n                        }\n                    }\n                }\n            )\n            return query\n\nlast_docs.py\n^^^^^^^^^^^^\n\nThis file show how to define a parameterized elasticsearch query using the filters and variables previously defined.\n\n.. code-block:: python\n\n    from esqb.query import BaseQuery\n    from filters import time_range_filter\n    from v import (\n        size,\n        sort_field,\n        sort_order,\n        ts,\n        te\n    )\n\n\n    class LastDocs(BaseQuery):\n\n        size = size\n        sort = [\n            {\n                sort_field: {\n                    \"unmapped_type\": \"float\",\n                    \"missing\": \"_last\",\n                    \"order\": sort_order\n                }\n            }\n        ]\n\n        def __init__(self):\n            BaseQuery.__init__(self)\n            self.filters = [\n                time_range_filter('timestamp', ts, te)\n            ]\n\n        def result(self, response):\n            return [r.get('_source', {}) for r in self.dotget(response, 'hits.hits')]\n\n\n    __doc__ = LastDocs().docs(variables)\n\nexample.py\n^^^^^^^^^^\n\nThis file show how to create a complete query ready to be used by elasticsearch.\n\n.. code-block:: python\n\n    from last_docs import LastDocs\n\n\n    if __name__ == '__main__':\n        q = LastDocs().get_es_query(\n            {\n                'ts': '1980',\n                'te': '1990',\n                'query_size': 3,\n                'sort_order': 'asc',\n                'sort_field': 'age'\n            }\n        )\n        print(q)\n\nAnd this is the query.\n\n.. code-block:: sh\n\n    $> python example.py\n\n    {\n      \"query\": {\n        \"bool\": {\n          \"must\": [\n            {\n              \"range\": {\n                \"timestamp\": {\n                  \"gte\": \"1980\",\n                  \"lte\": \"1990\"\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"size\": 3,\n      \"aggs\": {},\n      \"sort\": [\n        {\n          \"age\": {\n            \"unmapped_type\": \"float\",\n            \"missing\": \"_last\",\n            \"order\": \"asc\"\n          }\n        }\n      ]\n    }\n\n\nFeatures\n--------\n\n* TODO\n\nCredits\n---------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/openshine/python-esqb", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "esqb", "package_url": "https://pypi.org/project/esqb/", "platform": "", "project_url": "https://pypi.org/project/esqb/", "project_urls": {"Homepage": "https://github.com/openshine/python-esqb"}, "release_url": "https://pypi.org/project/esqb/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "A Query Builder to build queries specially suited for ElasticSearch queries", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/openshine/python-esqb\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/openshine/python-esqb.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2db6f1972674d40b2c65ab73973335b0b2cdd032/68747470733a2f2f7472617669732d63692e6f72672f6f70656e7368696e652f707974686f6e2d657371622e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"elasticsearch-query-builder\">\n<h2>ElasticSearch Query Builder</h2>\n<p>A Query Builder to build queries specially suited for ElasticSearch queries</p>\n<div id=\"examples\">\n<h3>Examples</h3>\n<div id=\"basic-example\">\n<h4>Basic example</h4>\n<p>This code show how to define a simple query.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">esqb.query</span> <span class=\"kn\">import</span> <span class=\"n\">BaseQuery</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">SimpleQuery</span><span class=\"p\">():</span>\n    <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"bool\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"must\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">\"term\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                        <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                            <span class=\"s2\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"esqb\"</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">aggs</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"by_logtime\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"date_histogram\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"field\"</span><span class=\"p\">:</span> <span class=\"s2\">\"time\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"interval\"</span><span class=\"p\">:</span> <span class=\"s2\">\"day\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"order\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">\"_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"desc\"</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n</pre>\n<p>and this is the generated query.</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"query\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"bool\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"must\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"term\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n              <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"esqb\"</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"size\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"aggs\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"by_logtime\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"date_histogram\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"field\"</span><span class=\"p\">:</span> <span class=\"s2\">\"time\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"interval\"</span><span class=\"p\">:</span> <span class=\"s2\">\"day\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"order\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"nt\">\"_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"desc\"</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"sort\"</span><span class=\"p\">:</span> <span class=\"p\">[]</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"variables-and-filters\">\n<h4>Variables and filters</h4>\n<p>Example to create a query to show the the last <strong>N</strong> documents ordered by a <strong>sort_field</strong> between two dates (<strong>ts</strong> and <strong>te</strong>)</p>\n<div id=\"v-py\">\n<h5>v.py</h5>\n<p>This file show how to define the query variables.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">esqb.variable</span> <span class=\"kn\">import</span> <span class=\"n\">Variable</span>\n\n\n<span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"s1\">'ts'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">'Time start'</span><span class=\"p\">)</span>\n<span class=\"n\">te</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"s1\">'te'</span><span class=\"p\">,</span> <span class=\"s1\">'2017-12-01'</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">'Time end'</span><span class=\"p\">)</span>\n<span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"s1\">'query_size'</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">'Term size'</span><span class=\"p\">)</span>\n<span class=\"n\">sort_field</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"s1\">'sort_field'</span><span class=\"p\">,</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                      <span class=\"s1\">'Field to do the ordination'</span><span class=\"p\">)</span>\n<span class=\"n\">sort_order</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"s1\">'sort_order'</span><span class=\"p\">,</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">'asc or desc'</span><span class=\"p\">)</span>\n<span class=\"n\">variables</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"p\">[</span>\n        <span class=\"n\">ts</span><span class=\"p\">,</span>\n        <span class=\"n\">te</span><span class=\"p\">,</span>\n        <span class=\"n\">size</span><span class=\"p\">,</span>\n        <span class=\"n\">sort_field</span><span class=\"p\">,</span>\n        <span class=\"n\">sort_order</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"filters-py\">\n<h5>filters.py</h5>\n<p>This file show how to define a esqb query filter to add a date range.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">esqb.queryfilter</span> <span class=\"kn\">import</span> <span class=\"n\">QueryFilter</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">time_range_filter</span><span class=\"p\">(</span><span class=\"n\">QueryFilter</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"\n    Query filter to filter between two dates.\n    \"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">ts</span><span class=\"p\">,</span> <span class=\"n\">te</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span> <span class=\"o\">=</span> <span class=\"n\">field</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">variables</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'ts'</span><span class=\"p\">:</span> <span class=\"n\">ts</span><span class=\"p\">,</span>\n            <span class=\"s1\">'te'</span><span class=\"p\">:</span> <span class=\"n\">te</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">apply</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">(</span>\n            <span class=\"s1\">'bool'</span><span class=\"p\">,</span> <span class=\"p\">{}</span>\n        <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">(</span>\n            <span class=\"s1\">'must'</span><span class=\"p\">,</span> <span class=\"p\">[]</span>\n        <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'range'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                        <span class=\"s1\">'gte'</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">variables</span><span class=\"p\">[</span><span class=\"s1\">'ts'</span><span class=\"p\">],</span>\n                        <span class=\"s1\">'lte'</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">variables</span><span class=\"p\">[</span><span class=\"s1\">'te'</span><span class=\"p\">],</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">query</span>\n</pre>\n</div>\n<div id=\"last-docs-py\">\n<h5>last_docs.py</h5>\n<p>This file show how to define a parameterized elasticsearch query using the filters and variables previously defined.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">esqb.query</span> <span class=\"kn\">import</span> <span class=\"n\">BaseQuery</span>\n<span class=\"kn\">from</span> <span class=\"nn\">filters</span> <span class=\"kn\">import</span> <span class=\"n\">time_range_filter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">v</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">size</span><span class=\"p\">,</span>\n    <span class=\"n\">sort_field</span><span class=\"p\">,</span>\n    <span class=\"n\">sort_order</span><span class=\"p\">,</span>\n    <span class=\"n\">ts</span><span class=\"p\">,</span>\n    <span class=\"n\">te</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">LastDocs</span><span class=\"p\">(</span><span class=\"n\">BaseQuery</span><span class=\"p\">):</span>\n\n    <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">size</span>\n    <span class=\"n\">sort</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">sort_field</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"unmapped_type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"float\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"missing\"</span><span class=\"p\">:</span> <span class=\"s2\">\"_last\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"order\"</span><span class=\"p\">:</span> <span class=\"n\">sort_order</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">BaseQuery</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">filters</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">time_range_filter</span><span class=\"p\">(</span><span class=\"s1\">'timestamp'</span><span class=\"p\">,</span> <span class=\"n\">ts</span><span class=\"p\">,</span> <span class=\"n\">te</span><span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">result</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'_source'</span><span class=\"p\">,</span> <span class=\"p\">{})</span> <span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dotget</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"s1\">'hits.hits'</span><span class=\"p\">)]</span>\n\n\n<span class=\"vm\">__doc__</span> <span class=\"o\">=</span> <span class=\"n\">LastDocs</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">docs</span><span class=\"p\">(</span><span class=\"n\">variables</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"example-py\">\n<h5>example.py</h5>\n<p>This file show how to create a complete query ready to be used by elasticsearch.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">last_docs</span> <span class=\"kn\">import</span> <span class=\"n\">LastDocs</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">LastDocs</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_es_query</span><span class=\"p\">(</span>\n        <span class=\"p\">{</span>\n            <span class=\"s1\">'ts'</span><span class=\"p\">:</span> <span class=\"s1\">'1980'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'te'</span><span class=\"p\">:</span> <span class=\"s1\">'1990'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'query_size'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n            <span class=\"s1\">'sort_order'</span><span class=\"p\">:</span> <span class=\"s1\">'asc'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'sort_field'</span><span class=\"p\">:</span> <span class=\"s1\">'age'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"p\">)</span>\n</pre>\n<p>And this is the query.</p>\n<pre>$&gt; python example.py\n\n<span class=\"o\">{</span>\n  <span class=\"s2\">\"query\"</span>: <span class=\"o\">{</span>\n    <span class=\"s2\">\"bool\"</span>: <span class=\"o\">{</span>\n      <span class=\"s2\">\"must\"</span>: <span class=\"o\">[</span>\n        <span class=\"o\">{</span>\n          <span class=\"s2\">\"range\"</span>: <span class=\"o\">{</span>\n            <span class=\"s2\">\"timestamp\"</span>: <span class=\"o\">{</span>\n              <span class=\"s2\">\"gte\"</span>: <span class=\"s2\">\"1980\"</span>,\n              <span class=\"s2\">\"lte\"</span>: <span class=\"s2\">\"1990\"</span>\n            <span class=\"o\">}</span>\n          <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n      <span class=\"o\">]</span>\n    <span class=\"o\">}</span>\n  <span class=\"o\">}</span>,\n  <span class=\"s2\">\"size\"</span>: <span class=\"m\">3</span>,\n  <span class=\"s2\">\"aggs\"</span>: <span class=\"o\">{}</span>,\n  <span class=\"s2\">\"sort\"</span>: <span class=\"o\">[</span>\n    <span class=\"o\">{</span>\n      <span class=\"s2\">\"age\"</span>: <span class=\"o\">{</span>\n        <span class=\"s2\">\"unmapped_type\"</span>: <span class=\"s2\">\"float\"</span>,\n        <span class=\"s2\">\"missing\"</span>: <span class=\"s2\">\"_last\"</span>,\n        <span class=\"s2\">\"order\"</span>: <span class=\"s2\">\"asc\"</span>\n      <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n  <span class=\"o\">]</span>\n<span class=\"o\">}</span>\n</pre>\n</div>\n</div>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>TODO</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3868216, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "cea34589e5975a03e88803b6ea919843", "sha256": "b6b03f6bfbe4c83190f5e36ac84dd4c5b6c90f1a23de08293f7bf392714261e9"}, "downloads": -1, "filename": "esqb-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cea34589e5975a03e88803b6ea919843", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23305, "upload_time": "2018-05-16T10:59:28", "upload_time_iso_8601": "2018-05-16T10:59:28.270145Z", "url": "https://files.pythonhosted.org/packages/36/e9/a3c0369785f67c081dfa6e17a16a8ca621f9b7ab3564f631ec54a701995c/esqb-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cea34589e5975a03e88803b6ea919843", "sha256": "b6b03f6bfbe4c83190f5e36ac84dd4c5b6c90f1a23de08293f7bf392714261e9"}, "downloads": -1, "filename": "esqb-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cea34589e5975a03e88803b6ea919843", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23305, "upload_time": "2018-05-16T10:59:28", "upload_time_iso_8601": "2018-05-16T10:59:28.270145Z", "url": "https://files.pythonhosted.org/packages/36/e9/a3c0369785f67c081dfa6e17a16a8ca621f9b7ab3564f631ec54a701995c/esqb-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:36 2020"}