{"info": {"author": "Jose Augusto Bolina", "author_email": "joseaugusto.bolina@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: Portuguese (Brazilian)", "Programming Language :: Python :: 3.6", "Topic :: Communications :: Chat"], "description": "=========\nRattledin\n=========\n\nA Python library to communicate with Linkedin using an asynchronous interface\n\n-------------\nEnvironment\n-------------\n\n.............\nDependencies\n.............\nNecessary for use:\n\n* Python >= 3.6\n* Pip\n* Git (development)\n* Make (development)\n* Python Venv (development)\n\nIt's recommended the use of Python virtual environments, to use only needed dependencies.\nWith the `python venv` installed, to create an environment, just do:\n\n    $ python3.6 -m venv venv\n\n    $ . venv /bin/activate\n\nThe bash will start using the virtual environment for now on.\n\n.............\nBuild\n.............\n\nThis library can be imported to be used in another applications. So, after the git clone\nto install the library inside the virtual environment:\n\n  $ make deploy\n\n\nThis way, the application will be completely installed, and all it's dependencies.\nWhen finished, the library can be imported inside `python` or a `.py` file with:\n\n    from rattledin import LinkedinCore\n\nThis library depends on `Linkedin API`, that can be found [here](https://github.com/jabolina/linkedin-api),\nso it's recommended to install this before Rattledin installation, it's better to clone the repo\nbecause the PyPi version will not always be in the latest version. Install the `Linkedin API` inside\nthe same virtual environment. With `make deploy` the library will be cloned and installed.\n\n-------------\nExamples\n-------------\n\nIn the `examples` folder exists and example on how to use the library to communicate with Linkedin.\nAt the moment only exists message methods, but someday, I'll extends this. If you want to create more\nmethods, fell free to contribute and create a pull request.\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jabolina/rattledin.git", "keywords": "Chat Bot Linkedin Asynchronous", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rattledin", "package_url": "https://pypi.org/project/rattledin/", "platform": "", "project_url": "https://pypi.org/project/rattledin/", "project_urls": {"Homepage": "https://github.com/jabolina/rattledin.git"}, "release_url": "https://pypi.org/project/rattledin/0.0.1/", "requires_dist": ["aiohttp (==3.5.4)", "async-timeout (==3.0.1)", "attrs (==18.2.0)", "certifi (==2018.8.24)", "chardet (==3.0.4)", "idna (==2.7)", "idna-ssl (==1.1.0)", "multidict (==4.5.2)", "requests (==2.19.1)", "typing-extensions (==3.7.2)", "urllib3 (==1.23)", "yarl (==1.3.0)", "linkedin-api ; extra == 'linkedin'"], "requires_python": "", "summary": "A asynchronous library to communicate with Linkedin", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Python library to communicate with Linkedin using an asynchronous interface</p>\n<div id=\"environment\">\n<h2>Environment</h2>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<p>Necessary for use:</p>\n<ul>\n<li>Python &gt;= 3.6</li>\n<li>Pip</li>\n<li>Git (development)</li>\n<li>Make (development)</li>\n<li>Python Venv (development)</li>\n</ul>\n<p>It\u2019s recommended the use of Python virtual environments, to use only needed dependencies.\nWith the <cite>python venv</cite> installed, to create an environment, just do:</p>\n<blockquote>\n<p>$ python3.6 -m venv venv</p>\n<p>$ . venv /bin/activate</p>\n</blockquote>\n<p>The bash will start using the virtual environment for now on.</p>\n</div>\n<div id=\"build\">\n<h3>Build</h3>\n<p>This library can be imported to be used in another applications. So, after the git clone\nto install the library inside the virtual environment:</p>\n<blockquote>\n$ make deploy</blockquote>\n<p>This way, the application will be completely installed, and all it\u2019s dependencies.\nWhen finished, the library can be imported inside <cite>python</cite> or a <cite>.py</cite> file with:</p>\n<blockquote>\nfrom rattledin import LinkedinCore</blockquote>\n<p>This library depends on <cite>Linkedin API</cite>, that can be found [here](<a href=\"https://github.com/jabolina/linkedin-api\" rel=\"nofollow\">https://github.com/jabolina/linkedin-api</a>),\nso it\u2019s recommended to install this before Rattledin installation, it\u2019s better to clone the repo\nbecause the PyPi version will not always be in the latest version. Install the <cite>Linkedin API</cite> inside\nthe same virtual environment. With <cite>make deploy</cite> the library will be cloned and installed.</p>\n</div>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>In the <cite>examples</cite> folder exists and example on how to use the library to communicate with Linkedin.\nAt the moment only exists message methods, but someday, I\u2019ll extends this. If you want to create more\nmethods, fell free to contribute and create a pull request.</p>\n</div>\n\n          </div>"}, "last_serial": 4792198, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "717ff5f1a7663d9a351922cb707bd848", "sha256": "a3b08152a4601ee04e19d47c3a2ba340abfed7e6602730220f7c0b2e35ecebf8"}, "downloads": -1, "filename": "rattledin-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "717ff5f1a7663d9a351922cb707bd848", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21483, "upload_time": "2019-02-07T17:34:47", "upload_time_iso_8601": "2019-02-07T17:34:47.369663Z", "url": "https://files.pythonhosted.org/packages/4c/c0/2a3099be5dacb43f3041e39a6d5da6e4493837852e5cc147b39416431ac4/rattledin-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f86d08a6cad54a743c3d3b16db5d6ff9", "sha256": "6f4f9f0a14ec5c020fcf50601bcd2e6f274e79875a76cda46a11a376d51da97c"}, "downloads": -1, "filename": "rattledin-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f86d08a6cad54a743c3d3b16db5d6ff9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8608, "upload_time": "2019-02-07T17:34:49", "upload_time_iso_8601": "2019-02-07T17:34:49.596270Z", "url": "https://files.pythonhosted.org/packages/ae/ec/a3adf514d6dfd97cd4eb51bc3419a1dd598f0cfed4a617b6fe020ef71af3/rattledin-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "717ff5f1a7663d9a351922cb707bd848", "sha256": "a3b08152a4601ee04e19d47c3a2ba340abfed7e6602730220f7c0b2e35ecebf8"}, "downloads": -1, "filename": "rattledin-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "717ff5f1a7663d9a351922cb707bd848", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21483, "upload_time": "2019-02-07T17:34:47", "upload_time_iso_8601": "2019-02-07T17:34:47.369663Z", "url": "https://files.pythonhosted.org/packages/4c/c0/2a3099be5dacb43f3041e39a6d5da6e4493837852e5cc147b39416431ac4/rattledin-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f86d08a6cad54a743c3d3b16db5d6ff9", "sha256": "6f4f9f0a14ec5c020fcf50601bcd2e6f274e79875a76cda46a11a376d51da97c"}, "downloads": -1, "filename": "rattledin-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f86d08a6cad54a743c3d3b16db5d6ff9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8608, "upload_time": "2019-02-07T17:34:49", "upload_time_iso_8601": "2019-02-07T17:34:49.596270Z", "url": "https://files.pythonhosted.org/packages/ae/ec/a3adf514d6dfd97cd4eb51bc3419a1dd598f0cfed4a617b6fe020ef71af3/rattledin-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:04 2020"}