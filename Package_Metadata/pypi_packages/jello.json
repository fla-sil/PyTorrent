{"info": {"author": "Kelly Brazil", "author_email": "kellyjonbrazil@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "![Tests](https://github.com/kellyjonbrazil/jello/workflows/Tests/badge.svg?branch=master)\n![Pypi](https://img.shields.io/pypi/v/jello.svg)\n\n# jello\nFilter JSON and JSON Lines data with Python syntax\n\n`jello` is similar to `jq` in that it processes JSON and JSON Lines data except `jello` uses standard python dict and list syntax.\n\nJSON or JSON Lines can be piped into `jello` (JSON Lines are automatically slurped into a list of dictionaries) and are available as the variable `_`. Processed data can be output as JSON, JSON Lines, bash array lines, or a grep-able schema.\n\nFor more information on the motivations for this project, see my [blog post](https://blog.kellybrazil.com/2020/03/25/jello-the-jq-alternative-for-pythonistas/).\n\n## Install\n```\npip3 install --upgrade jello\n```\n\n### Usage\n```\n<JSON Data> | jello [OPTIONS] [QUERY]\n``` \n`QUERY` is optional and can be most any valid python code. `_` is the sanitized JSON from STDIN presented as a python dict or list of dicts. If `QUERY` is omitted then the original JSON input will simply be pretty printed.\n\nA simple query:\n```\n$ cat data.json | jello '_[\"foo\"]'\n```\n\n#### Options\n- `-c` compact print JSON output instead of pretty printing\n- `-i` initialize environment with a custom config file\n- `-l` lines output (suitable for bash array assignment)\n- `-m` monochrome output\n- `-n` print selected `null` values\n- `-r` raw output of selected strings (no quotes)\n- `-s` print the JSON schema in grep-able format\n- `-h` help\n- `-v` version info\n\n#### Assigning Results to a Bash Array\n\nUse the `-l` option to print JSON array output in a manner suitable to be assigned to a bash array. The `-r` option can be used to remove quotation marks around strings. If you want `null` values to be printed as `null`, use the `-n` option, otherwise they are skipped.\n```\nvariable=($(cat data.json | jello -rl '_[\"foo\"]'))\n```\n\n#### Custom Configuration File\n\nYou can use the `-i` option to initialize the `jello` environment with your own configuration file. The configuration file accepts valid python code where you can set the `jello` options you would like enabled or disabled, customize your colors, add `import` statements for your favorite modules, and define your own functions.\n\nThe file must be named `.jelloconf.py` and must be located in the proper directory based on the OS platform:\n- Linux, unix, macOS: `~/`\n- Windows: `%appdata%/`\n\n##### Setting Options\nTo set `jello` options in the `.jelloconf.py` file, add any of the following and set to `True` or `False`:\n```\nmono = True            # -m option\ncompact = True         # -c option\nlines = True           # -l option\nraw = True             # -r option\nnulls = True           # -n option\nschema = True          # -s option\n```\n##### Setting Colors\nYou can customize the colors by setting the following variables to one of the following string values: `'black'`, `'red'`, `'green'`, `'yellow'`, `'blue'`, `'magenta'`, `'cyan'`, `'gray'`, `'brightblack'`, `'brightred'`, `'brightgreen'`, `'brightyellow'`, `'brightblue'`, `'brightmagenta'`, `'brightcyan'`, or `'white'`.\n```\nkeyname_color = 'blue'            # Key names\nkeyword_color = 'brightblack'     # true, false, null\nnumber_color = 'magenta'          # integers, floats\nstring_color = 'green'            # strings\narrayid_color = 'red'             # array IDs in Schema view\narraybracket_color = 'magenta'    # array brackets in Schema view\n```\n> Note: Any colors set via the `JELLO_COLORS` environment variable will take precedence over any color values set in the `.jelloconf.py` configuration file\n\n##### Importing Modules\nTo import a module (e.g. `glom`) during initialization, just add the `import` statement to your `.jelloconf.py` file:\n```\nfrom glom import *\n```\nThen you can use `glom` in your `jello` filters without importing:\n```\n$ jc -a | jello -i 'glom(_, \"parsers.25.name\")'\n\n\"lsblk\"\n```\n\n##### Adding Functions\nYou can also add functions to your initialization file.  For example, you could simplify `glom` use by adding the following function to `.jelloconf.py`:\n```\ndef g(q, data=_):\n    import glom\n    return glom.glom(data, q)\n```\nThen you can use the following syntax to filter the JSON data:\n```\n$ jc -a | jello -i 'g(\"parsers.6.compatible\")'\n\n[\n  \"linux\",\n  \"darwin\",\n  \"cygwin\",\n  \"win32\",\n  \"aix\",\n  \"freebsd\"\n]\n```\n## Setting Custom Colors via Environment Variable\nIn addition to setting custom colors in the `.jelloconf.py` intialization file, you can also set them via the `JELLO_COLORS` environment variable. Any colors set in the environment variable will take precedence over any colors set in the initialization file.\n\nThe `JELLO_COLORS` environment variable takes six comma separated string values in the following format:\n```\nJELLO_COLORS=<keyname_color>,<keyword_color>,<number_color>,<string_color>,<arrayid_color>,<arraybracket_color>\n```\nWhere colors are: `black`, `red`, `green`, `yellow`, `blue`, `magenta`, `cyan`, `gray`, `brightblack`, `brightred`, `brightgreen`, `brightyellow`, `brightblue`, `brightmagenta`, `brightcyan`, `white`, or  `default`\n\nFor example, to set to the default colors:\n```\nJELLO_COLORS=blue,brightblack,magenta,green,red,magenta\n```\nor\n```\nJELLO_COLORS=default,default,default,default,default,default\n```\n\n## Examples:\n### Printing the Grep-able Schema\n```\n$ jc -a | jello -s\n\n.name = \"jc\";\n.version = \"1.10.2\";\n.description = \"jc cli output JSON conversion tool\";\n.author = \"Kelly Brazil\";\n.author_email = \"kellyjonbrazil@gmail.com\";\n.parser_count = 50;\n.parsers[0].name = \"airport\";\n.parsers[0].argument = \"--airport\";\n.parsers[0].version = \"1.0\";\n.parsers[0].description = \"airport -I command parser\";\n.parsers[0].author = \"Kelly Brazil\";\n.parsers[0].author_email = \"kellyjonbrazil@gmail.com\";\n.parsers[0].compatible[0] = \"darwin\";\n.parsers[0].magic_commands[0] = \"airport -I\";\n.parsers[1].name = \"airport_s\";\n.parsers[1].argument = \"--airport-s\";\n.parsers[1].version = \"1.0\";\n...\n```\n### Lambda Functions and Math\n```\n$ echo '{\"t1\":-30, \"t2\":-20, \"t3\":-10, \"t4\":0}' | jello '\\\nkeys = _.keys()\nvals = _.values()\ncel = list(map(lambda x: (float(5)/9)*(x-32), vals))\ndict(zip(keys, cel))'\n\n{\n  \"t1\": -34.44444444444444,\n  \"t2\": -28.88888888888889,\n  \"t3\": -23.333333333333336,\n  \"t4\": -17.77777777777778\n}\n\n```\n```\n$ jc -a | jello 'len([entry for entry in _[\"parsers\"] if \"darwin\" in entry[\"compatible\"]])'\n\n32\n```\n### For Loops\nOutput as JSON array\n```\n$ jc -a | jello '\\\nresult = []\nfor entry in _[\"parsers\"]:\n  if \"darwin\" in entry[\"compatible\"]:\n    result.append(entry[\"name\"])\nresult'\n\n[\n  \"airport\",\n  \"airport_s\",\n  \"arp\",\n  \"crontab\",\n  \"crontab_u\",\n  ...\n]\n```\nOutput as bash array\n```\n$ jc -a | jello -rl '\\\nresult = []\nfor entry in _[\"parsers\"]:\n  if \"darwin\" in entry[\"compatible\"]:\n    result.append(entry[\"name\"])\nresult'\n\nairport\nairport_s\narp\ncrontab\ncrontab_u\n...\n```\n### List and Dictionary Comprehension\nOutput as JSON array\n```\n$ jc -a | jello '[entry[\"name\"] for entry in _[\"parsers\"] if \"darwin\" in entry[\"compatible\"]]'\n\n[\n  \"airport\",\n  \"airport_s\",\n  \"arp\",\n  \"crontab\",\n  \"crontab_u\",\n  ...\n]\n```\nOutput as bash array\n```\n$ jc -a | jello -rl '[entry[\"name\"] for entry in _[\"parsers\"] if \"darwin\" in entry[\"compatible\"]]'\n\nairport\nairport_s\narp\ncrontab\ncrontab_u\n...\n```\n### Environment Variables\n```\n$ echo '{\"login_name\": \"joeuser\"}' | jello '\\\nTrue if os.getenv(\"LOGNAME\") == _[\"login_name\"] else False'\n\ntrue\n```\n### Using 3rd Party Modules\nYou can import and use your favorite modules to manipulate the data.  For example, using `glom`:\n```\n$ jc -a | jello '\\\nfrom glom import *\nglom(_, (\"parsers\", [\"name\"]))'\n\n[\n  \"airport\",\n  \"airport_s\",\n  \"arp\",\n  \"blkid\",\n  \"crontab\",\n  \"crontab_u\",\n  \"csv\",\n  ...\n]\n```\n### Advanced JSON Manipulation\nThe data from this example comes from https://programminghistorian.org/assets/jq_twitter.json\n\nUnder **Grouping and Counting**, Matthew describes an advanced `jq` filter against a sample Twitter dataset that includes JSON Lines data. There he describes the following query:\n\n*\u201cWe can now create a table of users. Let\u2019s create a table with columns for the user id, user name, followers count, and a column of their tweet ids separated by a semicolon.\u201d*\n\nhttps://programminghistorian.org/en/lessons/json-and-jq\n\nHere is a simple solution using `jello`:\n```\n$ cat jq_twitter.json | jello -l '\\\nuser_ids = set()\nfor tweet in _:\n    user_ids.add(tweet[\"user\"][\"id\"])\nresult = []\nfor user in user_ids:\n    user_profile = {}\n    tweet_ids = []\n    for tweet in _:\n        if tweet[\"user\"][\"id\"] == user:\n            user_profile.update({\n                \"user_id\": user,\n                \"user_name\": tweet[\"user\"][\"screen_name\"],\n                \"user_followers\": tweet[\"user\"][\"followers_count\"]})\n            tweet_ids.append(str(tweet[\"id\"]))\n    user_profile[\"tweet_ids\"] = \";\".join(tweet_ids)\n    result.append(user_profile)\nresult'\n\n...\n{\"user_id\": 2696111005, \"user_name\": \"EGEVER142\", \"user_followers\": 1433, \"tweet_ids\": \"619172303654518784\"}\n{\"user_id\": 42226593, \"user_name\": \"shirleycolleen\", \"user_followers\": 2114, \"tweet_ids\": \"619172281294655488;619172179960328192\"}\n{\"user_id\": 106948003, \"user_name\": \"MrKneeGrow\", \"user_followers\": 172, \"tweet_ids\": \"501064228627705857\"}\n{\"user_id\": 18270633, \"user_name\": \"ahhthatswhy\", \"user_followers\": 559, \"tweet_ids\": \"501064204661850113\"}\n{\"user_id\": 14331818, \"user_name\": \"edsu\", \"user_followers\": 4220, \"tweet_ids\": \"615973042443956225;618602288781860864\"}\n{\"user_id\": 2569107372, \"user_name\": \"SlavinOleg\", \"user_followers\": 35, \"tweet_ids\": \"501064198973960192;501064202794971136;501064214467731457;501064215759568897;501064220121632768\"}\n{\"user_id\": 22668719, \"user_name\": \"nodehyena\", \"user_followers\": 294, \"tweet_ids\": \"501064222772445187\"}\n...\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kellyjonbrazil/jello", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "jello", "package_url": "https://pypi.org/project/jello/", "platform": "", "project_url": "https://pypi.org/project/jello/", "project_urls": {"Homepage": "https://github.com/kellyjonbrazil/jello"}, "release_url": "https://pypi.org/project/jello/1.2.5/", "requires_dist": ["Pygments (>=2.5.2)"], "requires_python": ">=3.6", "summary": "Filter JSON and JSON Lines data with Python syntax.", "version": "1.2.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ca7d698cde3890ad67e8de9ad9425591e90b521/68747470733a2f2f6769746875622e636f6d2f6b656c6c796a6f6e6272617a696c2f6a656c6c6f2f776f726b666c6f77732f54657374732f62616467652e7376673f6272616e63683d6d6173746572\">\n<img alt=\"Pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb7924e2466c0d7a64e00aa8a210e65f49b82e6e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6a656c6c6f2e737667\"></p>\n<h1>jello</h1>\n<p>Filter JSON and JSON Lines data with Python syntax</p>\n<p><code>jello</code> is similar to <code>jq</code> in that it processes JSON and JSON Lines data except <code>jello</code> uses standard python dict and list syntax.</p>\n<p>JSON or JSON Lines can be piped into <code>jello</code> (JSON Lines are automatically slurped into a list of dictionaries) and are available as the variable <code>_</code>. Processed data can be output as JSON, JSON Lines, bash array lines, or a grep-able schema.</p>\n<p>For more information on the motivations for this project, see my <a href=\"https://blog.kellybrazil.com/2020/03/25/jello-the-jq-alternative-for-pythonistas/\" rel=\"nofollow\">blog post</a>.</p>\n<h2>Install</h2>\n<pre><code>pip3 install --upgrade jello\n</code></pre>\n<h3>Usage</h3>\n<pre><code>&lt;JSON Data&gt; | jello [OPTIONS] [QUERY]\n</code></pre>\n<p><code>QUERY</code> is optional and can be most any valid python code. <code>_</code> is the sanitized JSON from STDIN presented as a python dict or list of dicts. If <code>QUERY</code> is omitted then the original JSON input will simply be pretty printed.</p>\n<p>A simple query:</p>\n<pre><code>$ cat data.json | jello '_[\"foo\"]'\n</code></pre>\n<h4>Options</h4>\n<ul>\n<li><code>-c</code> compact print JSON output instead of pretty printing</li>\n<li><code>-i</code> initialize environment with a custom config file</li>\n<li><code>-l</code> lines output (suitable for bash array assignment)</li>\n<li><code>-m</code> monochrome output</li>\n<li><code>-n</code> print selected <code>null</code> values</li>\n<li><code>-r</code> raw output of selected strings (no quotes)</li>\n<li><code>-s</code> print the JSON schema in grep-able format</li>\n<li><code>-h</code> help</li>\n<li><code>-v</code> version info</li>\n</ul>\n<h4>Assigning Results to a Bash Array</h4>\n<p>Use the <code>-l</code> option to print JSON array output in a manner suitable to be assigned to a bash array. The <code>-r</code> option can be used to remove quotation marks around strings. If you want <code>null</code> values to be printed as <code>null</code>, use the <code>-n</code> option, otherwise they are skipped.</p>\n<pre><code>variable=($(cat data.json | jello -rl '_[\"foo\"]'))\n</code></pre>\n<h4>Custom Configuration File</h4>\n<p>You can use the <code>-i</code> option to initialize the <code>jello</code> environment with your own configuration file. The configuration file accepts valid python code where you can set the <code>jello</code> options you would like enabled or disabled, customize your colors, add <code>import</code> statements for your favorite modules, and define your own functions.</p>\n<p>The file must be named <code>.jelloconf.py</code> and must be located in the proper directory based on the OS platform:</p>\n<ul>\n<li>Linux, unix, macOS: <code>~/</code></li>\n<li>Windows: <code>%appdata%/</code></li>\n</ul>\n<h5>Setting Options</h5>\n<p>To set <code>jello</code> options in the <code>.jelloconf.py</code> file, add any of the following and set to <code>True</code> or <code>False</code>:</p>\n<pre><code>mono = True            # -m option\ncompact = True         # -c option\nlines = True           # -l option\nraw = True             # -r option\nnulls = True           # -n option\nschema = True          # -s option\n</code></pre>\n<h5>Setting Colors</h5>\n<p>You can customize the colors by setting the following variables to one of the following string values: <code>'black'</code>, <code>'red'</code>, <code>'green'</code>, <code>'yellow'</code>, <code>'blue'</code>, <code>'magenta'</code>, <code>'cyan'</code>, <code>'gray'</code>, <code>'brightblack'</code>, <code>'brightred'</code>, <code>'brightgreen'</code>, <code>'brightyellow'</code>, <code>'brightblue'</code>, <code>'brightmagenta'</code>, <code>'brightcyan'</code>, or <code>'white'</code>.</p>\n<pre><code>keyname_color = 'blue'            # Key names\nkeyword_color = 'brightblack'     # true, false, null\nnumber_color = 'magenta'          # integers, floats\nstring_color = 'green'            # strings\narrayid_color = 'red'             # array IDs in Schema view\narraybracket_color = 'magenta'    # array brackets in Schema view\n</code></pre>\n<blockquote>\n<p>Note: Any colors set via the <code>JELLO_COLORS</code> environment variable will take precedence over any color values set in the <code>.jelloconf.py</code> configuration file</p>\n</blockquote>\n<h5>Importing Modules</h5>\n<p>To import a module (e.g. <code>glom</code>) during initialization, just add the <code>import</code> statement to your <code>.jelloconf.py</code> file:</p>\n<pre><code>from glom import *\n</code></pre>\n<p>Then you can use <code>glom</code> in your <code>jello</code> filters without importing:</p>\n<pre><code>$ jc -a | jello -i 'glom(_, \"parsers.25.name\")'\n\n\"lsblk\"\n</code></pre>\n<h5>Adding Functions</h5>\n<p>You can also add functions to your initialization file.  For example, you could simplify <code>glom</code> use by adding the following function to <code>.jelloconf.py</code>:</p>\n<pre><code>def g(q, data=_):\n    import glom\n    return glom.glom(data, q)\n</code></pre>\n<p>Then you can use the following syntax to filter the JSON data:</p>\n<pre><code>$ jc -a | jello -i 'g(\"parsers.6.compatible\")'\n\n[\n  \"linux\",\n  \"darwin\",\n  \"cygwin\",\n  \"win32\",\n  \"aix\",\n  \"freebsd\"\n]\n</code></pre>\n<h2>Setting Custom Colors via Environment Variable</h2>\n<p>In addition to setting custom colors in the <code>.jelloconf.py</code> intialization file, you can also set them via the <code>JELLO_COLORS</code> environment variable. Any colors set in the environment variable will take precedence over any colors set in the initialization file.</p>\n<p>The <code>JELLO_COLORS</code> environment variable takes six comma separated string values in the following format:</p>\n<pre><code>JELLO_COLORS=&lt;keyname_color&gt;,&lt;keyword_color&gt;,&lt;number_color&gt;,&lt;string_color&gt;,&lt;arrayid_color&gt;,&lt;arraybracket_color&gt;\n</code></pre>\n<p>Where colors are: <code>black</code>, <code>red</code>, <code>green</code>, <code>yellow</code>, <code>blue</code>, <code>magenta</code>, <code>cyan</code>, <code>gray</code>, <code>brightblack</code>, <code>brightred</code>, <code>brightgreen</code>, <code>brightyellow</code>, <code>brightblue</code>, <code>brightmagenta</code>, <code>brightcyan</code>, <code>white</code>, or  <code>default</code></p>\n<p>For example, to set to the default colors:</p>\n<pre><code>JELLO_COLORS=blue,brightblack,magenta,green,red,magenta\n</code></pre>\n<p>or</p>\n<pre><code>JELLO_COLORS=default,default,default,default,default,default\n</code></pre>\n<h2>Examples:</h2>\n<h3>Printing the Grep-able Schema</h3>\n<pre><code>$ jc -a | jello -s\n\n.name = \"jc\";\n.version = \"1.10.2\";\n.description = \"jc cli output JSON conversion tool\";\n.author = \"Kelly Brazil\";\n.author_email = \"kellyjonbrazil@gmail.com\";\n.parser_count = 50;\n.parsers[0].name = \"airport\";\n.parsers[0].argument = \"--airport\";\n.parsers[0].version = \"1.0\";\n.parsers[0].description = \"airport -I command parser\";\n.parsers[0].author = \"Kelly Brazil\";\n.parsers[0].author_email = \"kellyjonbrazil@gmail.com\";\n.parsers[0].compatible[0] = \"darwin\";\n.parsers[0].magic_commands[0] = \"airport -I\";\n.parsers[1].name = \"airport_s\";\n.parsers[1].argument = \"--airport-s\";\n.parsers[1].version = \"1.0\";\n...\n</code></pre>\n<h3>Lambda Functions and Math</h3>\n<pre><code>$ echo '{\"t1\":-30, \"t2\":-20, \"t3\":-10, \"t4\":0}' | jello '\\\nkeys = _.keys()\nvals = _.values()\ncel = list(map(lambda x: (float(5)/9)*(x-32), vals))\ndict(zip(keys, cel))'\n\n{\n  \"t1\": -34.44444444444444,\n  \"t2\": -28.88888888888889,\n  \"t3\": -23.333333333333336,\n  \"t4\": -17.77777777777778\n}\n\n</code></pre>\n<pre><code>$ jc -a | jello 'len([entry for entry in _[\"parsers\"] if \"darwin\" in entry[\"compatible\"]])'\n\n32\n</code></pre>\n<h3>For Loops</h3>\n<p>Output as JSON array</p>\n<pre><code>$ jc -a | jello '\\\nresult = []\nfor entry in _[\"parsers\"]:\n  if \"darwin\" in entry[\"compatible\"]:\n    result.append(entry[\"name\"])\nresult'\n\n[\n  \"airport\",\n  \"airport_s\",\n  \"arp\",\n  \"crontab\",\n  \"crontab_u\",\n  ...\n]\n</code></pre>\n<p>Output as bash array</p>\n<pre><code>$ jc -a | jello -rl '\\\nresult = []\nfor entry in _[\"parsers\"]:\n  if \"darwin\" in entry[\"compatible\"]:\n    result.append(entry[\"name\"])\nresult'\n\nairport\nairport_s\narp\ncrontab\ncrontab_u\n...\n</code></pre>\n<h3>List and Dictionary Comprehension</h3>\n<p>Output as JSON array</p>\n<pre><code>$ jc -a | jello '[entry[\"name\"] for entry in _[\"parsers\"] if \"darwin\" in entry[\"compatible\"]]'\n\n[\n  \"airport\",\n  \"airport_s\",\n  \"arp\",\n  \"crontab\",\n  \"crontab_u\",\n  ...\n]\n</code></pre>\n<p>Output as bash array</p>\n<pre><code>$ jc -a | jello -rl '[entry[\"name\"] for entry in _[\"parsers\"] if \"darwin\" in entry[\"compatible\"]]'\n\nairport\nairport_s\narp\ncrontab\ncrontab_u\n...\n</code></pre>\n<h3>Environment Variables</h3>\n<pre><code>$ echo '{\"login_name\": \"joeuser\"}' | jello '\\\nTrue if os.getenv(\"LOGNAME\") == _[\"login_name\"] else False'\n\ntrue\n</code></pre>\n<h3>Using 3rd Party Modules</h3>\n<p>You can import and use your favorite modules to manipulate the data.  For example, using <code>glom</code>:</p>\n<pre><code>$ jc -a | jello '\\\nfrom glom import *\nglom(_, (\"parsers\", [\"name\"]))'\n\n[\n  \"airport\",\n  \"airport_s\",\n  \"arp\",\n  \"blkid\",\n  \"crontab\",\n  \"crontab_u\",\n  \"csv\",\n  ...\n]\n</code></pre>\n<h3>Advanced JSON Manipulation</h3>\n<p>The data from this example comes from <a href=\"https://programminghistorian.org/assets/jq_twitter.json\" rel=\"nofollow\">https://programminghistorian.org/assets/jq_twitter.json</a></p>\n<p>Under <strong>Grouping and Counting</strong>, Matthew describes an advanced <code>jq</code> filter against a sample Twitter dataset that includes JSON Lines data. There he describes the following query:</p>\n<p><em>\u201cWe can now create a table of users. Let\u2019s create a table with columns for the user id, user name, followers count, and a column of their tweet ids separated by a semicolon.\u201d</em></p>\n<p><a href=\"https://programminghistorian.org/en/lessons/json-and-jq\" rel=\"nofollow\">https://programminghistorian.org/en/lessons/json-and-jq</a></p>\n<p>Here is a simple solution using <code>jello</code>:</p>\n<pre><code>$ cat jq_twitter.json | jello -l '\\\nuser_ids = set()\nfor tweet in _:\n    user_ids.add(tweet[\"user\"][\"id\"])\nresult = []\nfor user in user_ids:\n    user_profile = {}\n    tweet_ids = []\n    for tweet in _:\n        if tweet[\"user\"][\"id\"] == user:\n            user_profile.update({\n                \"user_id\": user,\n                \"user_name\": tweet[\"user\"][\"screen_name\"],\n                \"user_followers\": tweet[\"user\"][\"followers_count\"]})\n            tweet_ids.append(str(tweet[\"id\"]))\n    user_profile[\"tweet_ids\"] = \";\".join(tweet_ids)\n    result.append(user_profile)\nresult'\n\n...\n{\"user_id\": 2696111005, \"user_name\": \"EGEVER142\", \"user_followers\": 1433, \"tweet_ids\": \"619172303654518784\"}\n{\"user_id\": 42226593, \"user_name\": \"shirleycolleen\", \"user_followers\": 2114, \"tweet_ids\": \"619172281294655488;619172179960328192\"}\n{\"user_id\": 106948003, \"user_name\": \"MrKneeGrow\", \"user_followers\": 172, \"tweet_ids\": \"501064228627705857\"}\n{\"user_id\": 18270633, \"user_name\": \"ahhthatswhy\", \"user_followers\": 559, \"tweet_ids\": \"501064204661850113\"}\n{\"user_id\": 14331818, \"user_name\": \"edsu\", \"user_followers\": 4220, \"tweet_ids\": \"615973042443956225;618602288781860864\"}\n{\"user_id\": 2569107372, \"user_name\": \"SlavinOleg\", \"user_followers\": 35, \"tweet_ids\": \"501064198973960192;501064202794971136;501064214467731457;501064215759568897;501064220121632768\"}\n{\"user_id\": 22668719, \"user_name\": \"nodehyena\", \"user_followers\": 294, \"tweet_ids\": \"501064222772445187\"}\n...\n</code></pre>\n\n          </div>"}, "last_serial": 7006141, "releases": {"0.1.5": [{"comment_text": "", "digests": {"md5": "80fe427238885ec6d0528f63d88597af", "sha256": "bc59471296720a7a75c57472b46e610aaeb7e5308ef27468fd1674524a71150b"}, "downloads": -1, "filename": "jello-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "80fe427238885ec6d0528f63d88597af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3120, "upload_time": "2020-03-24T18:16:30", "upload_time_iso_8601": "2020-03-24T18:16:30.860168Z", "url": "https://files.pythonhosted.org/packages/27/23/53bbd1c4b68dca0667584111469beeb77d31ebcb675bfa455d59930cb116/jello-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "681e5549ccb1f357793399a3c019255a", "sha256": "44591f4c6dc0c133d62ba75122b67817423e642ae8bdc23f19d9b10efdcdc1a8"}, "downloads": -1, "filename": "jello-0.1.5.tar.gz", "has_sig": false, "md5_digest": "681e5549ccb1f357793399a3c019255a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2324, "upload_time": "2020-03-24T18:16:32", "upload_time_iso_8601": "2020-03-24T18:16:32.834013Z", "url": "https://files.pythonhosted.org/packages/69/08/c3bbe2ff036136057689da9f1a518a91907b0e8d9e86ac7f2139f379995c/jello-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "dd6d23b846b408ba5dc9e95a9f3db5a0", "sha256": "bccaa555ca52b7e0e41d35ea4a3bb4de445a0a7832e9abb07dc8594e1f6a7a1a"}, "downloads": -1, "filename": "jello-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "dd6d23b846b408ba5dc9e95a9f3db5a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4928, "upload_time": "2020-03-24T18:26:52", "upload_time_iso_8601": "2020-03-24T18:26:52.318866Z", "url": "https://files.pythonhosted.org/packages/c2/c0/c5e87a520a21407cf0e8e405ed13df2d0036eecfbd0ff95b79b89b0b8cf1/jello-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42783708607b4b2d861148a36869885d", "sha256": "628cd8d94b4cc02bd28155f9037b35950ed8e58c2e3dbf13807e02323b541583"}, "downloads": -1, "filename": "jello-0.1.6.tar.gz", "has_sig": false, "md5_digest": "42783708607b4b2d861148a36869885d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3759, "upload_time": "2020-03-24T18:26:53", "upload_time_iso_8601": "2020-03-24T18:26:53.794386Z", "url": "https://files.pythonhosted.org/packages/24/49/3bd747af5020ab0dfc98225ca0c0d3a7e453a66b54bc4cbd5d6dee566dca/jello-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "9dc6debcb76b48481e3d673eee4c9f95", "sha256": "a3708b055717b5f0e4257468ae3120cbed11305bdd667460fc5237a0b6e33c96"}, "downloads": -1, "filename": "jello-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "9dc6debcb76b48481e3d673eee4c9f95", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4923, "upload_time": "2020-03-24T19:04:49", "upload_time_iso_8601": "2020-03-24T19:04:49.107341Z", "url": "https://files.pythonhosted.org/packages/02/78/241811ffdebb3af3ddf22fdb3fe0f5a1e13ec70393ff2d68067532081314/jello-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f261bc9c143be45f809b5cfb5d52f2d9", "sha256": "8a9ed579e588f2155253bd58d3dbd40657bf86a2bdf7e71801152a8775d77510"}, "downloads": -1, "filename": "jello-0.1.7.tar.gz", "has_sig": false, "md5_digest": "f261bc9c143be45f809b5cfb5d52f2d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3759, "upload_time": "2020-03-24T19:04:50", "upload_time_iso_8601": "2020-03-24T19:04:50.204186Z", "url": "https://files.pythonhosted.org/packages/24/e6/570cea3dace890ad9cf8b0844412b83e8fa3b38bce6cbfba91d712c046ce/jello-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "a4e2f553d9e0d0eae11e23e0463401f0", "sha256": "278bc2cae9c92f098219da3420086e0ca2b2f7b4ac785f42f99b38924a41b93a"}, "downloads": -1, "filename": "jello-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "a4e2f553d9e0d0eae11e23e0463401f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4981, "upload_time": "2020-03-24T20:02:12", "upload_time_iso_8601": "2020-03-24T20:02:12.876958Z", "url": "https://files.pythonhosted.org/packages/57/ef/1b8ce26af003993fc3b6e2d226eb118705ba6387beb27c412fe9e531e377/jello-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2a03571223f166ff3faf245e53d660d", "sha256": "f55a1d45a15afc71450cb69d95419011251864b84a0c5f6d6e27e774e40b254b"}, "downloads": -1, "filename": "jello-0.1.8.tar.gz", "has_sig": false, "md5_digest": "c2a03571223f166ff3faf245e53d660d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3809, "upload_time": "2020-03-24T20:02:14", "upload_time_iso_8601": "2020-03-24T20:02:14.330655Z", "url": "https://files.pythonhosted.org/packages/d3/87/a012758760755fa3085cac9cb94afba99da51674220a9d5194e2a65dba70/jello-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "8079526c0c95f097f63fd518fc37a7cb", "sha256": "3bb44c538d6b2176ab5b69ba7226659fbdaf52bc6f9e81cec8bd96849e732a03"}, "downloads": -1, "filename": "jello-0.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "8079526c0c95f097f63fd518fc37a7cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5005, "upload_time": "2020-03-24T22:56:59", "upload_time_iso_8601": "2020-03-24T22:56:59.635766Z", "url": "https://files.pythonhosted.org/packages/e3/9c/7265d695983c8d8981b55496cbeac6607d69015bdf70c400e4ff3bea2052/jello-0.1.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea46202faed49fdf7ddae14ed8d681df", "sha256": "c8e35b66587fb0eaac23ce896056286f50eae826c5cf9df11aba523fbee34efb"}, "downloads": -1, "filename": "jello-0.1.9.tar.gz", "has_sig": false, "md5_digest": "ea46202faed49fdf7ddae14ed8d681df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3826, "upload_time": "2020-03-24T22:57:01", "upload_time_iso_8601": "2020-03-24T22:57:01.062732Z", "url": "https://files.pythonhosted.org/packages/de/b9/e4cf2f4fdf6de605c0fc4f96be339c0766a5e5a04fedc51ea53c74012cba/jello-0.1.9.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "79892fd272ae6ad21b8f4807a2f0f1e3", "sha256": "a373210ab0908be582ad69533dfab3d0339deec888b383af38eb1bc94a88158b"}, "downloads": -1, "filename": "jello-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "79892fd272ae6ad21b8f4807a2f0f1e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5081, "upload_time": "2020-03-25T18:11:57", "upload_time_iso_8601": "2020-03-25T18:11:57.694004Z", "url": "https://files.pythonhosted.org/packages/bb/33/3a8aa42e3a3633639becbcb35736317f4009ec3d836744a30386027d774d/jello-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cbafcd834b9ef7b7b7d76defde0534e", "sha256": "d992d6f5200cf6173c5ba3eb984e665d9e45c85b9531647e1fcd7639b7fe6e85"}, "downloads": -1, "filename": "jello-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5cbafcd834b9ef7b7b7d76defde0534e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3896, "upload_time": "2020-03-25T18:11:58", "upload_time_iso_8601": "2020-03-25T18:11:58.900881Z", "url": "https://files.pythonhosted.org/packages/ca/eb/1a37a52c9838b0f876d0af2f6e373453b30e0bfad77c210d8815074e2461/jello-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "a24bd80739b731ccf533c7bc18f3aeec", "sha256": "20b0c99c508e8d831a292031112eee92cfd625c027755f5328bf3bb34a9b8bcc"}, "downloads": -1, "filename": "jello-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a24bd80739b731ccf533c7bc18f3aeec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5511, "upload_time": "2020-03-26T03:29:04", "upload_time_iso_8601": "2020-03-26T03:29:04.431471Z", "url": "https://files.pythonhosted.org/packages/f9/33/9a3dbed48b6ff9b57a08ccb31c7ec9b04d3da863e70d8976773f1609c34c/jello-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4bb1ac624eaef2e6684d96307210f5d9", "sha256": "55e43620ec5b340cfbde972b5f1bf97f665e33920c59b67212ba34e3a53c70a5"}, "downloads": -1, "filename": "jello-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4bb1ac624eaef2e6684d96307210f5d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4314, "upload_time": "2020-03-26T03:29:05", "upload_time_iso_8601": "2020-03-26T03:29:05.770234Z", "url": "https://files.pythonhosted.org/packages/47/1e/687ef88ce40935c4059b0250fc9275ba16ddfb9c2e94419b8bd0c6fee899/jello-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "73a1df35c20e1a0efa5f75a17ccd1bc3", "sha256": "1eec758aa0cb5b88978c000dde08a82a8083a921a0b8d37c3c3f3ca3dc511a1e"}, "downloads": -1, "filename": "jello-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "73a1df35c20e1a0efa5f75a17ccd1bc3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5587, "upload_time": "2020-03-26T04:12:24", "upload_time_iso_8601": "2020-03-26T04:12:24.253038Z", "url": "https://files.pythonhosted.org/packages/02/b4/ede02eeb2f3a1d6e749fbfcbb628fcbb3c1c56fde266c2fb21cc492d04cd/jello-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e30df451493171e57e547fdb3376c7fb", "sha256": "35d7ffbbd5fb22c22455283a20e5c6c31cf2b2f5061955a0f9fea3c897d5eed7"}, "downloads": -1, "filename": "jello-0.3.1.tar.gz", "has_sig": false, "md5_digest": "e30df451493171e57e547fdb3376c7fb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4386, "upload_time": "2020-03-26T04:12:25", "upload_time_iso_8601": "2020-03-26T04:12:25.717624Z", "url": "https://files.pythonhosted.org/packages/7c/6d/e82172c62f31f39df5fbf3fbcf64a9c1e926c6a02c79986c1f64c0978945/jello-0.3.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "8ef5de933230a3e0662f7eaf7fc86a35", "sha256": "1958324ffc03ff0058e9be0f912659e8350a43a208f8ad74830fd2815a3aa20c"}, "downloads": -1, "filename": "jello-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8ef5de933230a3e0662f7eaf7fc86a35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 117291, "upload_time": "2020-03-31T22:41:58", "upload_time_iso_8601": "2020-03-31T22:41:58.119068Z", "url": "https://files.pythonhosted.org/packages/42/aa/28ec37b4996ac09766410f689e6599c164336c23160ae51d443c56a946b1/jello-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe5531e0676436307073a4af0583040b", "sha256": "e77a5e8b6e2a2b848b6f641c76b5b328b4e3233c975d452ee6bfca0a7fb60978"}, "downloads": -1, "filename": "jello-0.5.0.tar.gz", "has_sig": false, "md5_digest": "fe5531e0676436307073a4af0583040b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 112720, "upload_time": "2020-03-31T22:41:59", "upload_time_iso_8601": "2020-03-31T22:41:59.418545Z", "url": "https://files.pythonhosted.org/packages/ce/ea/3dc241ae8dda032d4f8aa1c946d83e61d52ea9345ab1bd5a125e1014542d/jello-0.5.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "6211aef52c23d41688f394935162dfd7", "sha256": "dd1d350838b3361910f2596265a8776006d660e6246f671125e16d63a5565dbb"}, "downloads": -1, "filename": "jello-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6211aef52c23d41688f394935162dfd7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 231398, "upload_time": "2020-04-01T22:31:26", "upload_time_iso_8601": "2020-04-01T22:31:26.670116Z", "url": "https://files.pythonhosted.org/packages/6c/1a/27776deb99164d7c96de1ec74eaeca734b15d406103af9412efee67bb7e4/jello-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b3395e84a9473c717b82557459e0cc8", "sha256": "1660ec70e7da7a300bf59dbb9c07985beccca3c45ab04a258b6b2a551907fbe5"}, "downloads": -1, "filename": "jello-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8b3395e84a9473c717b82557459e0cc8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 218234, "upload_time": "2020-04-01T22:31:28", "upload_time_iso_8601": "2020-04-01T22:31:28.244584Z", "url": "https://files.pythonhosted.org/packages/d1/a4/c49c8f954d5f2165f9d5bc7df03692659fa61038985f7caa4e8030fa2fe0/jello-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "c603acfeb1ca2c43b8094193ecd95d4f", "sha256": "d0d7f1fa94a3e5a3fb12b0258892181e01d93d4a8cb38007f6b5b4acc26113f4"}, "downloads": -1, "filename": "jello-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c603acfeb1ca2c43b8094193ecd95d4f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 231810, "upload_time": "2020-04-02T23:51:13", "upload_time_iso_8601": "2020-04-02T23:51:13.834181Z", "url": "https://files.pythonhosted.org/packages/f7/0e/92afbb7cf67000f023581797ab559321d83ceb6e8158d262fb060f426815/jello-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b4b79e47e304fcd87a5284b545632c1", "sha256": "35a4934ee7706a0bd55dbb2448712adaf8e098f70d19cb393bd908b6a5dcaa40"}, "downloads": -1, "filename": "jello-1.1.0.tar.gz", "has_sig": false, "md5_digest": "0b4b79e47e304fcd87a5284b545632c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 218645, "upload_time": "2020-04-02T23:51:15", "upload_time_iso_8601": "2020-04-02T23:51:15.130226Z", "url": "https://files.pythonhosted.org/packages/57/a7/e42f26062ba025d5ad2902c1eae2022d5daab19cc483a2e626e227ea2c65/jello-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "3d1459b755ade35901d11ed9eacf5616", "sha256": "d65a2b3676fd820939f996f5a0f9ff161e7324d70236e39a2fe76d91e155cc78"}, "downloads": -1, "filename": "jello-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3d1459b755ade35901d11ed9eacf5616", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 232214, "upload_time": "2020-04-03T21:29:16", "upload_time_iso_8601": "2020-04-03T21:29:16.352972Z", "url": "https://files.pythonhosted.org/packages/8a/92/8a527832ea84d774cd79dc40d4e996f180a93a90a22a97466f551d830ae5/jello-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00e8934e469c406f6b613fd5af43181f", "sha256": "9a01a82614337fa8c340d0a36793459369ceb9ddbdcb73e978d6e4ba6ccb885c"}, "downloads": -1, "filename": "jello-1.1.1.tar.gz", "has_sig": false, "md5_digest": "00e8934e469c406f6b613fd5af43181f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 219122, "upload_time": "2020-04-03T21:29:17", "upload_time_iso_8601": "2020-04-03T21:29:17.627075Z", "url": "https://files.pythonhosted.org/packages/03/c1/76d1bb77d27f0372bf1fbd763c713cf886b238bbb4bcdfd31161c2def88a/jello-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "90aeeb5c859d3eddfcd5fd9bfdb3051b", "sha256": "3ed3a29949c5c51cbcc5090a0cf862d823994dee196cdad302c75267f0b24e28"}, "downloads": -1, "filename": "jello-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "90aeeb5c859d3eddfcd5fd9bfdb3051b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 232184, "upload_time": "2020-04-05T00:56:40", "upload_time_iso_8601": "2020-04-05T00:56:40.716333Z", "url": "https://files.pythonhosted.org/packages/ba/5a/d7eda168e37d553774827de388498d55009a5d9c022c489c00d8f9079d44/jello-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ecc92ed9a3abf0843c5079ecbbb1937", "sha256": "7e5e42f35c8c883b292a7cbc07e794061061bd473262a16acab639cfb7b6b93a"}, "downloads": -1, "filename": "jello-1.1.2.tar.gz", "has_sig": false, "md5_digest": "3ecc92ed9a3abf0843c5079ecbbb1937", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 219094, "upload_time": "2020-04-05T00:56:42", "upload_time_iso_8601": "2020-04-05T00:56:42.593463Z", "url": "https://files.pythonhosted.org/packages/46/50/3d4da8fdf76946179724dc7ab6f84a5b5b0fabe712015174c648f253f55f/jello-1.1.2.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "c024012fb6277710cc181bc7ade5bcba", "sha256": "3eae2b24978f2dbb0989e7fcfafcb89853eb64a2d4908eef89cc032e0ac70812"}, "downloads": -1, "filename": "jello-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c024012fb6277710cc181bc7ade5bcba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 232548, "upload_time": "2020-04-08T21:40:47", "upload_time_iso_8601": "2020-04-08T21:40:47.234769Z", "url": "https://files.pythonhosted.org/packages/18/7a/13d4153a6697c1e0756d7095ba1887c67664a0bf9d994498d6ef503f8679/jello-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efed0ea9e55cb4c231ae12fc2f641671", "sha256": "be37e84da7b22453cc309f2401d849e4547f08d040f294f34dc3527554c7f344"}, "downloads": -1, "filename": "jello-1.2.0.tar.gz", "has_sig": false, "md5_digest": "efed0ea9e55cb4c231ae12fc2f641671", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 220468, "upload_time": "2020-04-08T21:40:50", "upload_time_iso_8601": "2020-04-08T21:40:50.512918Z", "url": "https://files.pythonhosted.org/packages/77/ad/e53f1f64ede714e557c140965f8d28b75f4267afc93315e0e370435bb7e5/jello-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "a5b091edfbe27ecb3771afee67a833cd", "sha256": "705224089389ff9adaa50b6a21ce72acade22c3be6099cf3a6b15ea4522ebe74"}, "downloads": -1, "filename": "jello-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a5b091edfbe27ecb3771afee67a833cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 232791, "upload_time": "2020-04-09T14:11:39", "upload_time_iso_8601": "2020-04-09T14:11:39.415260Z", "url": "https://files.pythonhosted.org/packages/8b/e2/fb117582ab1cb46051b69ec3489423a36e05748d85d639f65e1d92812dc0/jello-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23b3b6924dcfc38bbae3e50bd5b9f036", "sha256": "cd0efaf671b07289499a5a6c58c2abcd784bc489b3d1feb6cb734f8114bc0a25"}, "downloads": -1, "filename": "jello-1.2.1.tar.gz", "has_sig": false, "md5_digest": "23b3b6924dcfc38bbae3e50bd5b9f036", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 220722, "upload_time": "2020-04-09T14:11:40", "upload_time_iso_8601": "2020-04-09T14:11:40.728695Z", "url": "https://files.pythonhosted.org/packages/94/2a/b63ce609ebc2a28999db8b6f4e6932c59a639978005e8884af0b5ab6b3c2/jello-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "3a0a181256bcadfaf8b982d0eed3e46d", "sha256": "1c3cf5f86b53bc78a0df73a929e9af4f3b3aae8cc0a253caaaf9dedb8a8692c6"}, "downloads": -1, "filename": "jello-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3a0a181256bcadfaf8b982d0eed3e46d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 232821, "upload_time": "2020-04-09T18:03:22", "upload_time_iso_8601": "2020-04-09T18:03:22.316134Z", "url": "https://files.pythonhosted.org/packages/94/c4/f4b4c604d44ba3d3466e667f850cb2f10f39bcb9fc5538a081b363ad4344/jello-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e982bef88cbdaf531bf16d0540b604a", "sha256": "2e245fcdb0b769d7f8a099d252f2b29bcbf264ddfec0fa5439f637f3c92953ee"}, "downloads": -1, "filename": "jello-1.2.2.tar.gz", "has_sig": false, "md5_digest": "1e982bef88cbdaf531bf16d0540b604a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 220753, "upload_time": "2020-04-09T18:03:24", "upload_time_iso_8601": "2020-04-09T18:03:24.171857Z", "url": "https://files.pythonhosted.org/packages/4f/98/342deef6529e953899652463692cc30f29c8c24cf32ccaf38761ffbc73bd/jello-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "4d416f666af02b2a35df20918fa0f243", "sha256": "6cfc9739850a1db078d27ab635529acd857d3066c597e7fca7375c8177664c82"}, "downloads": -1, "filename": "jello-1.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4d416f666af02b2a35df20918fa0f243", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 232817, "upload_time": "2020-04-09T18:34:07", "upload_time_iso_8601": "2020-04-09T18:34:07.322211Z", "url": "https://files.pythonhosted.org/packages/25/e3/f49112be559a982f186cb27184541fc1bbf7f7b13693f79d3a0c48dcd1bd/jello-1.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d0bec43c430d3f5434f346bab216830", "sha256": "a283b89b9a32a75395f552e20907d2cf6308dd5b1fd7aa18665421366b89142d"}, "downloads": -1, "filename": "jello-1.2.3.tar.gz", "has_sig": false, "md5_digest": "6d0bec43c430d3f5434f346bab216830", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 220753, "upload_time": "2020-04-09T18:34:09", "upload_time_iso_8601": "2020-04-09T18:34:09.019427Z", "url": "https://files.pythonhosted.org/packages/38/30/e22c848cd29b517a44b87415d86f46f2956f603406e8631451056430c4f9/jello-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "6a78ca902c2124eaf6368a8b1be21bf3", "sha256": "5aa3a81ef5c7d077f598f08f071116b0c571313a74ddf4c1fc8f1177d9928637"}, "downloads": -1, "filename": "jello-1.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6a78ca902c2124eaf6368a8b1be21bf3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 232850, "upload_time": "2020-04-09T18:46:59", "upload_time_iso_8601": "2020-04-09T18:46:59.896122Z", "url": "https://files.pythonhosted.org/packages/a2/11/32310af78fd1d2e9fb4cb8f9499c363657ea55252848b3e98a0379338111/jello-1.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "398ff6899f6cd27254042c66c4bb1423", "sha256": "60ff3d6ea8c62325ca46cb27710a092ffb431afb248eec6395be116e035b79e3"}, "downloads": -1, "filename": "jello-1.2.4.tar.gz", "has_sig": false, "md5_digest": "398ff6899f6cd27254042c66c4bb1423", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 220779, "upload_time": "2020-04-09T18:47:01", "upload_time_iso_8601": "2020-04-09T18:47:01.524895Z", "url": "https://files.pythonhosted.org/packages/99/7c/2c2249c0c890c9fb5dbfe99a2dc0b126be901bd65f7e5bc3e435662f874d/jello-1.2.4.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "7496881e4cb4da3b7ceb479a5ed716a8", "sha256": "31b6f13ed532e666c5604bb408edc5ef89952ad2a3bdf5ca147bbe17184c95b8"}, "downloads": -1, "filename": "jello-1.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "7496881e4cb4da3b7ceb479a5ed716a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 235094, "upload_time": "2020-04-12T20:34:24", "upload_time_iso_8601": "2020-04-12T20:34:24.687659Z", "url": "https://files.pythonhosted.org/packages/15/78/74752bba69aa781651647edd88875854052ef20afb5030d5cd20c049b1ca/jello-1.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2db662cd66db353d29f7845ce1f3b5b2", "sha256": "b4c9d6ecceaf0b2b81f24382f5c862b5c04a9020f447927c8539c4caa90b76f6"}, "downloads": -1, "filename": "jello-1.2.5.tar.gz", "has_sig": false, "md5_digest": "2db662cd66db353d29f7845ce1f3b5b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 225407, "upload_time": "2020-04-12T20:34:25", "upload_time_iso_8601": "2020-04-12T20:34:25.982164Z", "url": "https://files.pythonhosted.org/packages/ed/18/4ba91588e90699c9feed6d8b55cbdbcd9466ae9ff5dbb9ee398e7358e56f/jello-1.2.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7496881e4cb4da3b7ceb479a5ed716a8", "sha256": "31b6f13ed532e666c5604bb408edc5ef89952ad2a3bdf5ca147bbe17184c95b8"}, "downloads": -1, "filename": "jello-1.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "7496881e4cb4da3b7ceb479a5ed716a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 235094, "upload_time": "2020-04-12T20:34:24", "upload_time_iso_8601": "2020-04-12T20:34:24.687659Z", "url": "https://files.pythonhosted.org/packages/15/78/74752bba69aa781651647edd88875854052ef20afb5030d5cd20c049b1ca/jello-1.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2db662cd66db353d29f7845ce1f3b5b2", "sha256": "b4c9d6ecceaf0b2b81f24382f5c862b5c04a9020f447927c8539c4caa90b76f6"}, "downloads": -1, "filename": "jello-1.2.5.tar.gz", "has_sig": false, "md5_digest": "2db662cd66db353d29f7845ce1f3b5b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 225407, "upload_time": "2020-04-12T20:34:25", "upload_time_iso_8601": "2020-04-12T20:34:25.982164Z", "url": "https://files.pythonhosted.org/packages/ed/18/4ba91588e90699c9feed6d8b55cbdbcd9466ae9ff5dbb9ee398e7358e56f/jello-1.2.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:54 2020"}