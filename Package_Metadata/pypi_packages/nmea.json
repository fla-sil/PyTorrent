{"info": {"author": "Felix Pageau", "author_email": "pageau@robonation.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# nmeaserver\nPython framework for a NMEA 0183 TCP Server inspired by Flask developer API\n\nCreate your first NMEA Server\n------------------\nThe nmeaserver framework is inspired from the Flask interface to make it straight-forward to setup server.\n\nTo create your first server, all you need to do is:\n```python\nfrom nmea import server, formatter\n\n# Creates a nmeaserver\nnmeaserver = server.NMEAServer()\n\n# Create a message handler that receives all messages with the sentence ID: 'RXTST'\n@nmeaserver.message('RXTST')\ndef tst_handler(self, context, message):\n    return formatter.format('TXTST,Message Received!')\n\n# Starts the server\nnmeaserver.start()\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/robonation/nmea/archive/v0.1.4.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/robonation/nmea", "keywords": "NMEA,SERVER,FRAMEWORK", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "nmea", "package_url": "https://pypi.org/project/nmea/", "platform": "", "project_url": "https://pypi.org/project/nmea/", "project_urls": {"Download": "https://github.com/robonation/nmea/archive/v0.1.4.tar.gz", "Homepage": "https://github.com/robonation/nmea"}, "release_url": "https://pypi.org/project/nmea/0.1.4/", "requires_dist": null, "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "summary": "Python framework for a NMEA 0183 TCP Server inspired by Flask developer API", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>nmeaserver</h1>\n<p>Python framework for a NMEA 0183 TCP Server inspired by Flask developer API</p>\n<h2>Create your first NMEA Server</h2>\n<p>The nmeaserver framework is inspired from the Flask interface to make it straight-forward to setup server.</p>\n<p>To create your first server, all you need to do is:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nmea</span> <span class=\"kn\">import</span> <span class=\"n\">server</span><span class=\"p\">,</span> <span class=\"n\">formatter</span>\n\n<span class=\"c1\"># Creates a nmeaserver</span>\n<span class=\"n\">nmeaserver</span> <span class=\"o\">=</span> <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">NMEAServer</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Create a message handler that receives all messages with the sentence ID: 'RXTST'</span>\n<span class=\"nd\">@nmeaserver</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">(</span><span class=\"s1\">'RXTST'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">tst_handler</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">formatter</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"s1\">'TXTST,Message Received!'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Starts the server</span>\n<span class=\"n\">nmeaserver</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 5374784, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "fc7ce4fbb8677cb8035dcc60c3b34c1e", "sha256": "3ce860b6caa90ac4288e0b19f0a58f7781e7cc380ba86816eaa38d465ddfc7c6"}, "downloads": -1, "filename": "nmea-0.1.3.tar.gz", "has_sig": false, "md5_digest": "fc7ce4fbb8677cb8035dcc60c3b34c1e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 5455, "upload_time": "2019-06-08T08:19:05", "upload_time_iso_8601": "2019-06-08T08:19:05.027336Z", "url": "https://files.pythonhosted.org/packages/94/a8/6de22302f9ddeeedf3bb5c8f38bf82b3b4457c77c6484ad64e2664ad99f8/nmea-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "071a5e399ba12e627c86af298e4d72dc", "sha256": "1e51ec6bc623bff331c7166d70c9c174e9faddd55bc041c01976987b3605e48e"}, "downloads": -1, "filename": "nmea-0.1.4.tar.gz", "has_sig": false, "md5_digest": "071a5e399ba12e627c86af298e4d72dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 5461, "upload_time": "2019-06-08T08:24:04", "upload_time_iso_8601": "2019-06-08T08:24:04.967619Z", "url": "https://files.pythonhosted.org/packages/26/a5/d90c97ce8b45a60f27235f55b0d54188a9a676818ae2dd869108a97854ad/nmea-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "071a5e399ba12e627c86af298e4d72dc", "sha256": "1e51ec6bc623bff331c7166d70c9c174e9faddd55bc041c01976987b3605e48e"}, "downloads": -1, "filename": "nmea-0.1.4.tar.gz", "has_sig": false, "md5_digest": "071a5e399ba12e627c86af298e4d72dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 5461, "upload_time": "2019-06-08T08:24:04", "upload_time_iso_8601": "2019-06-08T08:24:04.967619Z", "url": "https://files.pythonhosted.org/packages/26/a5/d90c97ce8b45a60f27235f55b0d54188a9a676818ae2dd869108a97854ad/nmea-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:08 2020"}