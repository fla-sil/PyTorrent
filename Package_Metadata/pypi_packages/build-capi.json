{"info": {"author": "Danilo Horta", "author_email": "horta@ebi.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "build-capi\n==========\n\n|PyPIl| |PyPIv| |Anaconda-Server Badge|\n\nBuild and distribute C/C++ static libraries via Python packages.\n\nGetting Started\n---------------\n\nYou can have a ``setup.py`` similar to\n\n.. code:: python\n\n    from os.path import join\n    from setuptools import setup\n\n    def get_lib():\n      from build_capi import CApiLib\n\n      mylib = CApiLib('pkg_name.lib.nmylib',\n                      sources=[join('pkg_name', 'sources', 'example.c')],\n                      include_dirs=[join('pkg_name', 'include')])\n\n    setup(\n          name='pkg_name',\n          # ...\n          setup_requires=['build_capi'],\n          capi_libs=[get_lib],\n          include_package_data=True,\n          data_files=[(join('pkg_name', 'include'), join('pkg_name', 'include',\n                                                         'example.h'))],\n          package_data={'': [join('pkg_name', 'lib', '*.*')]})\n\nand then have a ``pkg_name/__init__.py``\n\n.. code:: python\n\n    def get_include():\n      import pkg_name\n      from os.path import join, dirname\n      return join(dirname(pkg_name.__file__), 'include')\n\n    def get_lib():\n      import pkg_name\n      from os.path import join, dirname\n      return join(dirname(pkg_name.__file__), 'lib')\n\nPlease, refer to\n`build\\_capi/example/prj\\_name <build_capi/example/prj_name>`__ for a\nminimal example of project using ``build_capi``.\n\nInstall\n-------\n\nThe recommended way of installing it is via\n`conda <http://conda.pydata.org/docs/index.html>`__\n\n.. code:: bash\n\n    conda install -c conda-forge build-capi\n\nAn alternative way would be via pip\n\n.. code:: bash\n\n    pip install build-capi\n\nAuthors\n-------\n\n-  **Danilo Horta** - https://github.com/Horta\n\nLicense\n-------\n\nThis project is licensed under the MIT License - see the\n`LICENSE <LICENSE>`__ file for details\n\n.. |PyPIl| image:: https://img.shields.io/pypi/l/build-capi.svg?style=flat-square\n   :target: https://pypi.python.org/pypi/build-capi/\n.. |PyPIv| image:: https://img.shields.io/pypi/v/build-capi.svg?style=flat-square\n   :target: https://pypi.python.org/pypi/build-capi/\n.. |Anaconda-Server Badge| image:: https://anaconda.org/conda-forge/build-capi/badges/version.svg\n   :target: https://anaconda.org/conda-forge/build-capi", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/glimix/build-capi", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "build-capi", "package_url": "https://pypi.org/project/build-capi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/build-capi/", "project_urls": {"Homepage": "http://github.com/glimix/build-capi"}, "release_url": "https://pypi.org/project/build-capi/1.1.10/", "requires_dist": null, "requires_python": "", "summary": "Build and distribute C/C++ static libraries", "version": "1.1.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/build-capi/\" rel=\"nofollow\"><img alt=\"PyPIl\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/09b2e2a531b736c7aa933a2b5e60ac00359fcda1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6275696c642d636170692e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://pypi.python.org/pypi/build-capi/\" rel=\"nofollow\"><img alt=\"PyPIv\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea4966c16c8cb102e1221824ce1fcd45f28eba22/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6275696c642d636170692e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://anaconda.org/conda-forge/build-capi\" rel=\"nofollow\"><img alt=\"Anaconda-Server Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7af49c373595bbc161804e0a6b1c3b86a2f1dadb/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f6275696c642d636170692f6261646765732f76657273696f6e2e737667\"></a></p>\n<p>Build and distribute C/C++ static libraries via Python packages.</p>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>You can have a <tt>setup.py</tt> similar to</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">os.path</span> <span class=\"kn\">import</span> <span class=\"n\">join</span>\n<span class=\"kn\">from</span> <span class=\"nn\">setuptools</span> <span class=\"kn\">import</span> <span class=\"n\">setup</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_lib</span><span class=\"p\">():</span>\n  <span class=\"kn\">from</span> <span class=\"nn\">build_capi</span> <span class=\"kn\">import</span> <span class=\"n\">CApiLib</span>\n\n  <span class=\"n\">mylib</span> <span class=\"o\">=</span> <span class=\"n\">CApiLib</span><span class=\"p\">(</span><span class=\"s1\">'pkg_name.lib.nmylib'</span><span class=\"p\">,</span>\n                  <span class=\"n\">sources</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">'pkg_name'</span><span class=\"p\">,</span> <span class=\"s1\">'sources'</span><span class=\"p\">,</span> <span class=\"s1\">'example.c'</span><span class=\"p\">)],</span>\n                  <span class=\"n\">include_dirs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">'pkg_name'</span><span class=\"p\">,</span> <span class=\"s1\">'include'</span><span class=\"p\">)])</span>\n\n<span class=\"n\">setup</span><span class=\"p\">(</span>\n      <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'pkg_name'</span><span class=\"p\">,</span>\n      <span class=\"c1\"># ...</span>\n      <span class=\"n\">setup_requires</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'build_capi'</span><span class=\"p\">],</span>\n      <span class=\"n\">capi_libs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">get_lib</span><span class=\"p\">],</span>\n      <span class=\"n\">include_package_data</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n      <span class=\"n\">data_files</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">'pkg_name'</span><span class=\"p\">,</span> <span class=\"s1\">'include'</span><span class=\"p\">),</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">'pkg_name'</span><span class=\"p\">,</span> <span class=\"s1\">'include'</span><span class=\"p\">,</span>\n                                                     <span class=\"s1\">'example.h'</span><span class=\"p\">))],</span>\n      <span class=\"n\">package_data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">''</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">'pkg_name'</span><span class=\"p\">,</span> <span class=\"s1\">'lib'</span><span class=\"p\">,</span> <span class=\"s1\">'*.*'</span><span class=\"p\">)]})</span>\n</pre>\n<p>and then have a <tt>pkg_name/__init__.py</tt></p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">get_include</span><span class=\"p\">():</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">pkg_name</span>\n  <span class=\"kn\">from</span> <span class=\"nn\">os.path</span> <span class=\"kn\">import</span> <span class=\"n\">join</span><span class=\"p\">,</span> <span class=\"n\">dirname</span>\n  <span class=\"k\">return</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">pkg_name</span><span class=\"o\">.</span><span class=\"vm\">__file__</span><span class=\"p\">),</span> <span class=\"s1\">'include'</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_lib</span><span class=\"p\">():</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">pkg_name</span>\n  <span class=\"kn\">from</span> <span class=\"nn\">os.path</span> <span class=\"kn\">import</span> <span class=\"n\">join</span><span class=\"p\">,</span> <span class=\"n\">dirname</span>\n  <span class=\"k\">return</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">pkg_name</span><span class=\"o\">.</span><span class=\"vm\">__file__</span><span class=\"p\">),</span> <span class=\"s1\">'lib'</span><span class=\"p\">)</span>\n</pre>\n<p>Please, refer to\n<a href=\"build_capi/example/prj_name\" rel=\"nofollow\">build_capi/example/prj_name</a> for a\nminimal example of project using <tt>build_capi</tt>.</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>The recommended way of installing it is via\n<a href=\"http://conda.pydata.org/docs/index.html\" rel=\"nofollow\">conda</a></p>\n<pre>conda install -c conda-forge build-capi\n</pre>\n<p>An alternative way would be via pip</p>\n<pre>pip install build-capi\n</pre>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li><strong>Danilo Horta</strong> - <a href=\"https://github.com/Horta\" rel=\"nofollow\">https://github.com/Horta</a></li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the\n<a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file for details</p>\n</div>\n\n          </div>"}, "last_serial": 2847484, "releases": {"1.1.10": [{"comment_text": "", "digests": {"md5": "7dcba1adbb927cdbaad80ee3997aa3ee", "sha256": "b4048fe3a1fa34e390eeae507c089499ab81cf9f34d8babfe229da20c0c2810a"}, "downloads": -1, "filename": "build-capi-1.1.10.tar.gz", "has_sig": false, "md5_digest": "7dcba1adbb927cdbaad80ee3997aa3ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6285, "upload_time": "2017-01-23T18:35:24", "upload_time_iso_8601": "2017-01-23T18:35:24.455415Z", "url": "https://files.pythonhosted.org/packages/b5/16/8c3b75d481c98af68a4ad5b03f6d14ed3a7e03216950c084c28b3d3d8e2a/build-capi-1.1.10.tar.gz", "yanked": false}], "1.1.9": [{"comment_text": "", "digests": {"md5": "b2e4a9ae432f66ab66b8e2dcd7e08179", "sha256": "bd4f3be7847646fbc004ae93958f7d7820b304f276b28a126182e0ab3995f334"}, "downloads": -1, "filename": "build-capi-1.1.9.tar.gz", "has_sig": false, "md5_digest": "b2e4a9ae432f66ab66b8e2dcd7e08179", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6364, "upload_time": "2016-12-09T19:16:11", "upload_time_iso_8601": "2016-12-09T19:16:11.038319Z", "url": "https://files.pythonhosted.org/packages/fa/c6/8f7b031c31ca89980f3f3e141039af2ca28fde0f264618ca2531eddad481/build-capi-1.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7dcba1adbb927cdbaad80ee3997aa3ee", "sha256": "b4048fe3a1fa34e390eeae507c089499ab81cf9f34d8babfe229da20c0c2810a"}, "downloads": -1, "filename": "build-capi-1.1.10.tar.gz", "has_sig": false, "md5_digest": "7dcba1adbb927cdbaad80ee3997aa3ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6285, "upload_time": "2017-01-23T18:35:24", "upload_time_iso_8601": "2017-01-23T18:35:24.455415Z", "url": "https://files.pythonhosted.org/packages/b5/16/8c3b75d481c98af68a4ad5b03f6d14ed3a7e03216950c084c28b3d3d8e2a/build-capi-1.1.10.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:04 2020"}