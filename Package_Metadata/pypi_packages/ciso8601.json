{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "========\nciso8601\n========\n\n.. image:: https://img.shields.io/circleci/project/github/closeio/ciso8601.svg\n    :target: https://circleci.com/gh/closeio/ciso8601/tree/master\n\n.. image:: https://img.shields.io/pypi/v/ciso8601.svg\n    :target: https://pypi.org/project/ciso8601/\n\n.. image:: https://img.shields.io/pypi/pyversions/ciso8601.svg\n    :target: https://pypi.org/project/ciso8601/\n\n``ciso8601`` converts `ISO 8601`_ or `RFC 3339`_ date time strings into Python datetime objects.\n\nSince it's written as a C module, it is much faster than other Python libraries.\nTested with Python 2.7, 3.4, 3.5, 3.6, 3.7, 3.8.\n\n**Note:** ciso8601 doesn't support the entirety of the ISO 8601 spec, `only a popular subset`_.\n\n.. _ISO 8601: https://en.wikipedia.org/wiki/ISO_8601\n.. _RFC 3339: https://tools.ietf.org/html/rfc3339\n\n.. _`only a popular subset`: https://github.com/closeio/ciso8601#supported-subset-of-iso-8601\n\n(Interested in working on projects like this? `Close`_ is looking for `great engineers`_ to join our team)\n\n.. _Close: https://close.com\n.. _great engineers: https://jobs.close.com\n\n\n.. contents:: Contents\n\n\nQuick Start\n-----------\n\n.. code:: bash\n\n  % pip install ciso8601\n\n.. code:: python\n\n  In [1]: import ciso8601\n\n  In [2]: ciso8601.parse_datetime('2014-12-05T12:30:45.123456-05:30')\n  Out[2]: datetime.datetime(2014, 12, 5, 12, 30, 45, 123456, tzinfo=pytz.FixedOffset(330))\n\n  In [3]: ciso8601.parse_datetime('20141205T123045')\n  Out[3]: datetime.datetime(2014, 12, 5, 12, 30, 45)\n\nMigration to v2\n---------------\n\nVersion 2.0.0 of ``ciso8601`` changed the core implementation. This was not entirely backwards compatible, and care should be taken when migrating\nSee `CHANGELOG`_ for the Migration Guide.\n\n.. _CHANGELOG: https://github.com/closeio/ciso8601/blob/master/CHANGELOG.md\n\nError Handling\n--------------\n\nStarting in v2.0.0, ``ciso8601`` offers strong guarantees when it comes to parsing strings.\n\n``parse_datetime(dt: String): datetime`` is a function that takes a string and either:\n\n* Returns a properly parsed Python datetime, **if and only if** the **entire** string conforms to the supported subset of ISO 8601\n* Raises a ``ValueError`` with a description of the reason why the string doesn't conform to the supported subset of ISO 8601\n\nIf time zone information is provided, an aware datetime object will be returned. Otherwise, a naive datetime is returned.\n\nBenchmark\n---------\n\nParsing a timestamp with no time zone information (ex. ``2014-01-09T21:48:00``):\n\n.. <include:benchmark_with_no_time_zone.rst>\n\n.. table:: \n\n    +---------------+----------+----------+----------+----------+----------+-------------------------------+-----------------------------------------------+\n    |    Module     |Python 3.8|Python 3.7|Python 3.6|Python 3.5|Python 3.4|          Python 2.7           |Relative Slowdown (versus ciso8601, Python 3.8)|\n    +===============+==========+==========+==========+==========+==========+===============================+===============================================+\n    |ciso8601       |201 nsec  |157 nsec  |160 nsec  |139 nsec  |148 nsec  |147 nsec                       |N/A                                            |\n    +---------------+----------+----------+----------+----------+----------+-------------------------------+-----------------------------------------------+\n    |pendulum       |215 nsec  |232 nsec  |234 nsec  |205 nsec  |192 nsec  |9.44 usec                      |1.1x                                           |\n    +---------------+----------+----------+----------+----------+----------+-------------------------------+-----------------------------------------------+\n    |udatetime      |906 nsec  |1.06 usec |767 nsec  |702 nsec  |819 nsec  |923 nsec                       |4.5x                                           |\n    +---------------+----------+----------+----------+----------+----------+-------------------------------+-----------------------------------------------+\n    |str2date       |5.96 usec |7.75 usec |7.27 usec |6.84 usec |7.6 usec  |**Incorrect Result** (``None``)|29.7x                                          |\n    +---------------+----------+----------+----------+----------+----------+-------------------------------+-----------------------------------------------+\n    |isodate        |10.3 usec |10 usec   |11.1 usec |11.9 usec |12.3 usec |43.6 usec                      |51.3x                                          |\n    +---------------+----------+----------+----------+----------+----------+-------------------------------+-----------------------------------------------+\n    |iso8601utils   |10.3 usec |8.63 usec |9.16 usec |10.3 usec |9.58 usec |11.1 usec                      |51.5x                                          |\n    +---------------+----------+----------+----------+----------+----------+-------------------------------+-----------------------------------------------+\n    |iso8601        |10.9 usec |11.1 usec |10.5 usec |11.2 usec |11.5 usec |25.6 usec                      |54.2x                                          |\n    +---------------+----------+----------+----------+----------+----------+-------------------------------+-----------------------------------------------+\n    |PySO8601       |13.9 usec |21.9 usec |20.2 usec |15.9 usec |23.7 usec |16.4 usec                      |69.4x                                          |\n    +---------------+----------+----------+----------+----------+----------+-------------------------------+-----------------------------------------------+\n    |aniso8601      |14.5 usec |15 usec   |15.8 usec |15.9 usec |16.1 usec |17.2 usec                      |72.5x                                          |\n    +---------------+----------+----------+----------+----------+----------+-------------------------------+-----------------------------------------------+\n    |zulu           |25.3 usec |29.9 usec |28.2 usec |27.4 usec |33 usec   |N/A                            |126.3x                                         |\n    +---------------+----------+----------+----------+----------+----------+-------------------------------+-----------------------------------------------+\n    |maya           |42.9 usec |57.4 usec |58.2 usec |67.5 usec |87.6 usec |100 usec                       |213.7x                                         |\n    +---------------+----------+----------+----------+----------+----------+-------------------------------+-----------------------------------------------+\n    |arrow          |85.7 usec |81.8 usec |75.7 usec |78.7 usec |N/A       |93.9 usec                      |427.1x                                         |\n    +---------------+----------+----------+----------+----------+----------+-------------------------------+-----------------------------------------------+\n    |python-dateutil|122 usec  |82.7 usec |72.2 usec |77.1 usec |74.4 usec |131 usec                       |609.5x                                         |\n    +---------------+----------+----------+----------+----------+----------+-------------------------------+-----------------------------------------------+\n    |moment         |3.81 msec |4.46 msec |3.12 msec |3.66 msec |N/A       |3.59 msec                      |19011.9x                                       |\n    +---------------+----------+----------+----------+----------+----------+-------------------------------+-----------------------------------------------+\n\nciso8601 takes 201 nsec, which is **1.1x faster than pendulum**, the next fastest ISO 8601 parser in this comparison.\n\n.. </include:benchmark_with_no_time_zone.rst>\n\nParsing a timestamp with time zone information (ex. ``2014-01-09T21:48:00-05:30``):\n\n.. <include:benchmark_with_time_zone.rst>\n\n.. table:: \n\n    +---------------+-------------------------------+-------------------------------+-------------------------------+-------------------------------+----------+-------------------------------+-----------------------------------------------+\n    |    Module     |          Python 3.8           |          Python 3.7           |          Python 3.6           |          Python 3.5           |Python 3.4|          Python 2.7           |Relative Slowdown (versus ciso8601, Python 3.8)|\n    +===============+===============================+===============================+===============================+===============================+==========+===============================+===============================================+\n    |ciso8601       |207 nsec                       |219 nsec                       |282 nsec                       |262 nsec                       |264 nsec  |360 nsec                       |N/A                                            |\n    +---------------+-------------------------------+-------------------------------+-------------------------------+-------------------------------+----------+-------------------------------+-----------------------------------------------+\n    |pendulum       |249 nsec                       |225 nsec                       |209 nsec                       |212 nsec                       |209 nsec  |12.9 usec                      |1.2x                                           |\n    +---------------+-------------------------------+-------------------------------+-------------------------------+-------------------------------+----------+-------------------------------+-----------------------------------------------+\n    |udatetime      |806 nsec                       |866 nsec                       |817 nsec                       |827 nsec                       |792 nsec  |835 nsec                       |3.9x                                           |\n    +---------------+-------------------------------+-------------------------------+-------------------------------+-------------------------------+----------+-------------------------------+-----------------------------------------------+\n    |str2date       |7.57 usec                      |10.7 usec                      |7.98 usec                      |8.48 usec                      |9.06 usec |**Incorrect Result** (``None``)|36.7x                                          |\n    +---------------+-------------------------------+-------------------------------+-------------------------------+-------------------------------+----------+-------------------------------+-----------------------------------------------+\n    |isodate        |12 usec                        |13.5 usec                      |14.7 usec                      |15.4 usec                      |18.8 usec |47.6 usec                      |58.3x                                          |\n    +---------------+-------------------------------+-------------------------------+-------------------------------+-------------------------------+----------+-------------------------------+-----------------------------------------------+\n    |iso8601        |12.8 usec                      |14.6 usec                      |14.6 usec                      |15.2 usec                      |17.7 usec |30 usec                        |61.8x                                          |\n    +---------------+-------------------------------+-------------------------------+-------------------------------+-------------------------------+----------+-------------------------------+-----------------------------------------------+\n    |aniso8601      |19.4 usec                      |30.4 usec                      |22.1 usec                      |20.5 usec                      |21.9 usec |20.1 usec                      |94.0x                                          |\n    +---------------+-------------------------------+-------------------------------+-------------------------------+-------------------------------+----------+-------------------------------+-----------------------------------------------+\n    |iso8601utils   |22.5 usec                      |25.3 usec                      |26.4 usec                      |25.7 usec                      |27 usec   |26.9 usec                      |108.9x                                         |\n    +---------------+-------------------------------+-------------------------------+-------------------------------+-------------------------------+----------+-------------------------------+-----------------------------------------------+\n    |zulu           |25.6 usec                      |31.2 usec                      |30 usec                        |32.3 usec                      |30.7 usec |N/A                            |124.1x                                         |\n    +---------------+-------------------------------+-------------------------------+-------------------------------+-------------------------------+----------+-------------------------------+-----------------------------------------------+\n    |PySO8601       |25.9 usec                      |35.4 usec                      |25.6 usec                      |29.5 usec                      |27.7 usec |25.7 usec                      |125.2x                                         |\n    +---------------+-------------------------------+-------------------------------+-------------------------------+-------------------------------+----------+-------------------------------+-----------------------------------------------+\n    |maya           |48.5 usec                      |46.6 usec                      |51.3 usec                      |63.2 usec                      |68.1 usec |125 usec                       |234.9x                                         |\n    +---------------+-------------------------------+-------------------------------+-------------------------------+-------------------------------+----------+-------------------------------+-----------------------------------------------+\n    |python-dateutil|79.3 usec                      |88.5 usec                      |101 usec                       |89.8 usec                      |91.9 usec |160 usec                       |384.2x                                         |\n    +---------------+-------------------------------+-------------------------------+-------------------------------+-------------------------------+----------+-------------------------------+-----------------------------------------------+\n    |arrow          |86.2 usec                      |95.2 usec                      |95 usec                        |101 usec                       |N/A       |103 usec                       |417.2x                                         |\n    +---------------+-------------------------------+-------------------------------+-------------------------------+-------------------------------+----------+-------------------------------+-----------------------------------------------+\n    |moment         |**Incorrect Result** (``None``)|**Incorrect Result** (``None``)|**Incorrect Result** (``None``)|**Incorrect Result** (``None``)|N/A       |**Incorrect Result** (``None``)|3442935.3x                                     |\n    +---------------+-------------------------------+-------------------------------+-------------------------------+-------------------------------+----------+-------------------------------+-----------------------------------------------+\n\nciso8601 takes 207 nsec, which is **1.2x faster than pendulum**, the next fastest ISO 8601 parser in this comparison.\n\n.. </include:benchmark_with_time_zone.rst>\n\n.. <include:benchmark_module_versions.rst>\n\nTested on Darwin 18.7.0 using the following modules:\n\n.. code:: python\n\n  aniso8601==8.0.0\n  arrow==0.15.2\n  ciso8601==2.1.2\n  iso8601==0.1.12\n  iso8601utils==0.1.2\n  isodate==0.6.0\n  maya==0.6.1\n  moment==0.8.2\n  pendulum==2.0.5\n  PySO8601==0.2.0\n  python-dateutil==2.8.0\n  str2date==0.905\n  udatetime==0.0.16\n  zulu==1.1.1\n\n.. </include:benchmark_module_versions.rst>\n\n**Note:** ciso8601 doesn't support the entirety of the ISO 8601 spec, `only a popular subset`_.\n\nFor full benchmarking details (or to run the benchmark yourself), see `benchmarking/README.rst`_\n\n.. _`benchmarking/README.rst`: https://github.com/closeio/ciso8601/blob/master/benchmarking/README.rst\n\nDependency on pytz (Python 2)\n-----------------------------\n\nIn Python 2, ``ciso8601`` uses the `pytz`_ library while parsing timestamps with time zone information. This means that if you wish to parse such timestamps, you must first install ``pytz``:\n\n.. _pytz: http://pytz.sourceforge.net/\n\n.. code:: python\n  \n  pip install pytz\n\nOtherwise, ``ciso8601`` will raise an exception when you try to parse a timestamp with time zone information:\n\n.. code:: python\n  \n  In [2]: ciso8601.parse_datetime('2014-12-05T12:30:45.123456-05:30')\n  Out[2]: ImportError: Cannot parse a timestamp with time zone information without the pytz dependency. Install it with `pip install pytz`.\n\n``pytz`` is intentionally not an explicit dependency of ``ciso8601``. This is because many users use ``ciso8601`` to parse only naive timestamps, and therefore don't need this extra dependency.\nIn Python 3, ``ciso8601`` makes use of the built-in `datetime.timezone`_ class instead, so ``pytz`` is not necessary.\n\n.. _datetime.timezone: https://docs.python.org/3/library/datetime.html#timezone-objects\n\nSupported Subset of ISO 8601\n----------------------------\n\n``ciso8601`` only supports the most common subset of ISO 8601.\n\nDate Formats\n^^^^^^^^^^^^\n\nThe following date formats are supported:\n\n.. table::\n   :widths: auto\n\n   ============================= ============== ==================\n   Format                        Example        Supported\n   ============================= ============== ==================\n   ``YYYY-MM-DD``                ``2018-04-29`` \u2705\n   ``YYYY-MM``                   ``2018-04``    \u2705\n   ``YYYYMMDD``                  ``2018-04``    \u2705\n   ``--MM-DD`` (omitted year)    ``--04-29``    \u274c              \n   ``--MMDD`` (omitted year)     ``--0429``     \u274c\n   ``\u00b1YYYYY-MM`` (>4 digit year) ``+10000-04``  \u274c   \n   ``+YYYY-MM`` (leading +)      ``+2018-04``   \u274c   \n   ``-YYYY-MM`` (negative -)     ``-2018-04``   \u274c   \n   ============================= ============== ==================\n\nWeek dates or ordinal dates are not currently supported.\n\n.. table::\n   :widths: auto\n\n   ============================= ============== ==================\n   Format                        Example        Supported\n   ============================= ============== ==================\n   ``YYYY-Www`` (week date)      ``2009-W01``   \u274c\n   ``YYYYWww`` (week date)       ``2009W01``    \u274c\n   ``YYYY-Www-D`` (week date)    ``2009-W01-1`` \u274c\n   ``YYYYWwwD`` (week date)      ``2009-W01-1`` \u274c\n   ``YYYY-DDD`` (ordinal date)   ``1981-095``   \u274c\n   ``YYYYDDD`` (ordinal date)    ``1981095``    \u274c \n   ============================= ============== ==================\n\nTime Formats\n^^^^^^^^^^^^\n\nTimes are optional and are separated from the date by the letter ``T``.\n\nConsistent with `RFC 3339`__, ``ciso860`` also allows either a space character, or a lower-case ``t``, to be used instead of a ``T``.\n\n__ https://stackoverflow.com/questions/522251/whats-the-difference-between-iso-8601-and-rfc-3339-date-formats\n\nThe following time formats are supported:\n\n.. table::\n   :widths: auto\n\n   =================================== =================== ==============  \n   Format                              Example             Supported          \n   =================================== =================== ============== \n   ``hh``                              ``11``              \u2705 \n   ``hhmm``                            ``1130``            \u2705 \n   ``hh:mm``                           ``11:30``           \u2705 \n   ``hhmmss``                          ``113059``          \u2705 \n   ``hh:mm:ss``                        ``11:30:59``        \u2705 \n   ``hhmmss.ssssss``                   ``113059.123456``   \u2705 \n   ``hh:mm:ss.ssssss``                 ``11:30:59.123456`` \u2705 \n   ``hhmmss,ssssss``                   ``113059,123456``   \u2705 \n   ``hh:mm:ss,ssssss``                 ``11:30:59,123456`` \u2705 \n   Midnight (special case)             ``24:00:00``        \u2705               \n   ``hh.hhh`` (fractional hours)       ``11.5``            \u274c               \n   ``hh:mm.mmm`` (fractional minutes)  ``11:30.5``         \u274c               \n   =================================== =================== ============== \n\n**Note:** Python datetime objects only have microsecond precision (6 digits). Any additional precision will be truncated.\n\nTime Zone Information\n^^^^^^^^^^^^^^^^^^^^^\n\nTime zone information may be provided in one of the following formats:\n\n.. table::\n   :widths: auto\n\n   ========== ========== =========== \n   Format     Example    Supported          \n   ========== ========== =========== \n   ``Z``      ``Z``      \u2705\n   ``z``      ``z``      \u2705\n   ``\u00b1hh``    ``+11``    \u2705\n   ``\u00b1hhmm``  ``+1130``  \u2705\n   ``\u00b1hh:mm`` ``+11:30`` \u2705\n   ========== ========== ===========\n\nWhile the ISO 8601 specification allows the use of MINUS SIGN (U+2212) in the time zone separator, ``ciso8601`` only supports the use of the HYPHEN-MINUS (U+002D) character.\n\nConsistent with `RFC 3339`_, ``ciso860`` also allows a lower-case ``z`` to be used instead of a ``Z``.\n\nStrict RFC 3339 Parsing\n-----------------------\n\n``ciso8601`` parses ISO 8601 datetimes, which can be thought of as a superset of `RFC 3339`_ (`roughly`_). In cases where you might want strict RFC 3339 parsing, ``ciso8601`` offers a ``parse_rfc3339`` method, which behaves in a similar manner to ``parse_datetime``:\n\n.. _roughly: https://stackoverflow.com/questions/522251/whats-the-difference-between-iso-8601-and-rfc-3339-date-formats\n\n``parse_rfc3339(dt: String): datetime`` is a function that takes a string and either:\n\n* Returns a properly parsed Python datetime, **if and only if** the **entire** string conforms to RFC 3339.\n* Raises a ``ValueError`` with a description of the reason why the string doesn't conform to RFC 3339.\n\nIgnoring Timezone Information While Parsing\n-------------------------------------------\n\nIt takes more time to parse timestamps with time zone information, especially if they're not in UTC. However, there are times when you don't care about time zone information, and wish to produce naive datetimes instead.\nFor example, if you are certain that your program will only parse timestamps from a single time zone, you might want to strip the time zone information and only output naive datetimes.\n\nIn these limited cases, there is a second function provided.\n``parse_datetime_as_naive`` will ignore any time zone information it finds and, as a result, is faster for timestamps containing time zone information.\n\n.. code:: python\n\n  In [1]: import ciso8601\n\n  In [2]: ciso8601.parse_datetime_as_naive('2014-12-05T12:30:45.123456-05:30')\n  Out[2]: datetime.datetime(2014, 12, 5, 12, 30, 45, 123456)\n\nNOTE: ``parse_datetime_as_naive`` is only useful in the case where your timestamps have time zone information, but you want to ignore it. This is somewhat unusual.\nIf your timestamps don't have time zone information (i.e. are naive), simply use ``parse_datetime``. It is just as fast.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/closeio/ciso8601", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ciso8601", "package_url": "https://pypi.org/project/ciso8601/", "platform": "", "project_url": "https://pypi.org/project/ciso8601/", "project_urls": {"Homepage": "https://github.com/closeio/ciso8601"}, "release_url": "https://pypi.org/project/ciso8601/2.1.3/", "requires_dist": null, "requires_python": "", "summary": "Fast ISO8601 date time parser for Python written in C", "version": "2.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://circleci.com/gh/closeio/ciso8601/tree/master\" rel=\"nofollow\"><img alt=\"https://img.shields.io/circleci/project/github/closeio/ciso8601.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d8c038f85bc1d9f192d461de87a14f5756e93171/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f636c6f7365696f2f6369736f383630312e737667\"></a>\n<a href=\"https://pypi.org/project/ciso8601/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/ciso8601.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c617b0b150933b5dc50e82047811daea8c28510f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6369736f383630312e737667\"></a>\n<a href=\"https://pypi.org/project/ciso8601/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/ciso8601.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f24db6b2cc704d187a5cc8a869d971f1fcafc40/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6369736f383630312e737667\"></a>\n<p><tt>ciso8601</tt> converts <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" rel=\"nofollow\">ISO 8601</a> or <a href=\"https://tools.ietf.org/html/rfc3339\" rel=\"nofollow\">RFC 3339</a> date time strings into Python datetime objects.</p>\n<p>Since it\u2019s written as a C module, it is much faster than other Python libraries.\nTested with Python 2.7, 3.4, 3.5, 3.6, 3.7, 3.8.</p>\n<p><strong>Note:</strong> ciso8601 doesn\u2019t support the entirety of the ISO 8601 spec, <a href=\"https://github.com/closeio/ciso8601#supported-subset-of-iso-8601\" rel=\"nofollow\">only a popular subset</a>.</p>\n<p>(Interested in working on projects like this? <a href=\"https://close.com\" rel=\"nofollow\">Close</a> is looking for <a href=\"https://jobs.close.com\" rel=\"nofollow\">great engineers</a> to join our team)</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#quick-start\" id=\"id2\" rel=\"nofollow\">Quick Start</a></li>\n<li><a href=\"#migration-to-v2\" id=\"id3\" rel=\"nofollow\">Migration to v2</a></li>\n<li><a href=\"#error-handling\" id=\"id4\" rel=\"nofollow\">Error Handling</a></li>\n<li><a href=\"#benchmark\" id=\"id5\" rel=\"nofollow\">Benchmark</a></li>\n<li><a href=\"#dependency-on-pytz-python-2\" id=\"id6\" rel=\"nofollow\">Dependency on pytz (Python 2)</a></li>\n<li><a href=\"#supported-subset-of-iso-8601\" id=\"id7\" rel=\"nofollow\">Supported Subset of ISO 8601</a><ul>\n<li><a href=\"#date-formats\" id=\"id8\" rel=\"nofollow\">Date Formats</a></li>\n<li><a href=\"#time-formats\" id=\"id9\" rel=\"nofollow\">Time Formats</a></li>\n<li><a href=\"#time-zone-information\" id=\"id10\" rel=\"nofollow\">Time Zone Information</a></li>\n</ul>\n</li>\n<li><a href=\"#strict-rfc-3339-parsing\" id=\"id11\" rel=\"nofollow\">Strict RFC 3339 Parsing</a></li>\n<li><a href=\"#ignoring-timezone-information-while-parsing\" id=\"id12\" rel=\"nofollow\">Ignoring Timezone Information While Parsing</a></li>\n</ul>\n</div>\n<div id=\"quick-start\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Quick Start</a></h2>\n<pre>% pip install ciso8601\n</pre>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">ciso8601</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">ciso8601</span><span class=\"o\">.</span><span class=\"n\">parse_datetime</span><span class=\"p\">(</span><span class=\"s1\">'2014-12-05T12:30:45.123456-05:30'</span><span class=\"p\">)</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">45</span><span class=\"p\">,</span> <span class=\"mi\">123456</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">pytz</span><span class=\"o\">.</span><span class=\"n\">FixedOffset</span><span class=\"p\">(</span><span class=\"mi\">330</span><span class=\"p\">))</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">ciso8601</span><span class=\"o\">.</span><span class=\"n\">parse_datetime</span><span class=\"p\">(</span><span class=\"s1\">'20141205T123045'</span><span class=\"p\">)</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">45</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"migration-to-v2\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Migration to v2</a></h2>\n<p>Version 2.0.0 of <tt>ciso8601</tt> changed the core implementation. This was not entirely backwards compatible, and care should be taken when migrating\nSee <a href=\"https://github.com/closeio/ciso8601/blob/master/CHANGELOG.md\" rel=\"nofollow\">CHANGELOG</a> for the Migration Guide.</p>\n</div>\n<div id=\"error-handling\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Error Handling</a></h2>\n<p>Starting in v2.0.0, <tt>ciso8601</tt> offers strong guarantees when it comes to parsing strings.</p>\n<p><tt>parse_datetime(dt: String): datetime</tt> is a function that takes a string and either:</p>\n<ul>\n<li>Returns a properly parsed Python datetime, <strong>if and only if</strong> the <strong>entire</strong> string conforms to the supported subset of ISO 8601</li>\n<li>Raises a <tt>ValueError</tt> with a description of the reason why the string doesn\u2019t conform to the supported subset of ISO 8601</li>\n</ul>\n<p>If time zone information is provided, an aware datetime object will be returned. Otherwise, a naive datetime is returned.</p>\n</div>\n<div id=\"benchmark\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Benchmark</a></h2>\n<p>Parsing a timestamp with no time zone information (ex. <tt><span class=\"pre\">2014-01-09T21:48:00</span></tt>):</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Module</th>\n<th>Python 3.8</th>\n<th>Python 3.7</th>\n<th>Python 3.6</th>\n<th>Python 3.5</th>\n<th>Python 3.4</th>\n<th>Python 2.7</th>\n<th>Relative Slowdown (versus ciso8601, Python 3.8)</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>ciso8601</td>\n<td>201 nsec</td>\n<td>157 nsec</td>\n<td>160 nsec</td>\n<td>139 nsec</td>\n<td>148 nsec</td>\n<td>147 nsec</td>\n<td>N/A</td>\n</tr>\n<tr><td>pendulum</td>\n<td>215 nsec</td>\n<td>232 nsec</td>\n<td>234 nsec</td>\n<td>205 nsec</td>\n<td>192 nsec</td>\n<td>9.44 usec</td>\n<td>1.1x</td>\n</tr>\n<tr><td>udatetime</td>\n<td>906 nsec</td>\n<td>1.06 usec</td>\n<td>767 nsec</td>\n<td>702 nsec</td>\n<td>819 nsec</td>\n<td>923 nsec</td>\n<td>4.5x</td>\n</tr>\n<tr><td>str2date</td>\n<td>5.96 usec</td>\n<td>7.75 usec</td>\n<td>7.27 usec</td>\n<td>6.84 usec</td>\n<td>7.6 usec</td>\n<td><strong>Incorrect Result</strong> (<tt>None</tt>)</td>\n<td>29.7x</td>\n</tr>\n<tr><td>isodate</td>\n<td>10.3 usec</td>\n<td>10 usec</td>\n<td>11.1 usec</td>\n<td>11.9 usec</td>\n<td>12.3 usec</td>\n<td>43.6 usec</td>\n<td>51.3x</td>\n</tr>\n<tr><td>iso8601utils</td>\n<td>10.3 usec</td>\n<td>8.63 usec</td>\n<td>9.16 usec</td>\n<td>10.3 usec</td>\n<td>9.58 usec</td>\n<td>11.1 usec</td>\n<td>51.5x</td>\n</tr>\n<tr><td>iso8601</td>\n<td>10.9 usec</td>\n<td>11.1 usec</td>\n<td>10.5 usec</td>\n<td>11.2 usec</td>\n<td>11.5 usec</td>\n<td>25.6 usec</td>\n<td>54.2x</td>\n</tr>\n<tr><td>PySO8601</td>\n<td>13.9 usec</td>\n<td>21.9 usec</td>\n<td>20.2 usec</td>\n<td>15.9 usec</td>\n<td>23.7 usec</td>\n<td>16.4 usec</td>\n<td>69.4x</td>\n</tr>\n<tr><td>aniso8601</td>\n<td>14.5 usec</td>\n<td>15 usec</td>\n<td>15.8 usec</td>\n<td>15.9 usec</td>\n<td>16.1 usec</td>\n<td>17.2 usec</td>\n<td>72.5x</td>\n</tr>\n<tr><td>zulu</td>\n<td>25.3 usec</td>\n<td>29.9 usec</td>\n<td>28.2 usec</td>\n<td>27.4 usec</td>\n<td>33 usec</td>\n<td>N/A</td>\n<td>126.3x</td>\n</tr>\n<tr><td>maya</td>\n<td>42.9 usec</td>\n<td>57.4 usec</td>\n<td>58.2 usec</td>\n<td>67.5 usec</td>\n<td>87.6 usec</td>\n<td>100 usec</td>\n<td>213.7x</td>\n</tr>\n<tr><td>arrow</td>\n<td>85.7 usec</td>\n<td>81.8 usec</td>\n<td>75.7 usec</td>\n<td>78.7 usec</td>\n<td>N/A</td>\n<td>93.9 usec</td>\n<td>427.1x</td>\n</tr>\n<tr><td>python-dateutil</td>\n<td>122 usec</td>\n<td>82.7 usec</td>\n<td>72.2 usec</td>\n<td>77.1 usec</td>\n<td>74.4 usec</td>\n<td>131 usec</td>\n<td>609.5x</td>\n</tr>\n<tr><td>moment</td>\n<td>3.81 msec</td>\n<td>4.46 msec</td>\n<td>3.12 msec</td>\n<td>3.66 msec</td>\n<td>N/A</td>\n<td>3.59 msec</td>\n<td>19011.9x</td>\n</tr>\n</tbody>\n</table>\n<p>ciso8601 takes 201 nsec, which is <strong>1.1x faster than pendulum</strong>, the next fastest ISO 8601 parser in this comparison.</p>\n<p>Parsing a timestamp with time zone information (ex. <tt><span class=\"pre\">2014-01-09T21:48:00-05:30</span></tt>):</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Module</th>\n<th>Python 3.8</th>\n<th>Python 3.7</th>\n<th>Python 3.6</th>\n<th>Python 3.5</th>\n<th>Python 3.4</th>\n<th>Python 2.7</th>\n<th>Relative Slowdown (versus ciso8601, Python 3.8)</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>ciso8601</td>\n<td>207 nsec</td>\n<td>219 nsec</td>\n<td>282 nsec</td>\n<td>262 nsec</td>\n<td>264 nsec</td>\n<td>360 nsec</td>\n<td>N/A</td>\n</tr>\n<tr><td>pendulum</td>\n<td>249 nsec</td>\n<td>225 nsec</td>\n<td>209 nsec</td>\n<td>212 nsec</td>\n<td>209 nsec</td>\n<td>12.9 usec</td>\n<td>1.2x</td>\n</tr>\n<tr><td>udatetime</td>\n<td>806 nsec</td>\n<td>866 nsec</td>\n<td>817 nsec</td>\n<td>827 nsec</td>\n<td>792 nsec</td>\n<td>835 nsec</td>\n<td>3.9x</td>\n</tr>\n<tr><td>str2date</td>\n<td>7.57 usec</td>\n<td>10.7 usec</td>\n<td>7.98 usec</td>\n<td>8.48 usec</td>\n<td>9.06 usec</td>\n<td><strong>Incorrect Result</strong> (<tt>None</tt>)</td>\n<td>36.7x</td>\n</tr>\n<tr><td>isodate</td>\n<td>12 usec</td>\n<td>13.5 usec</td>\n<td>14.7 usec</td>\n<td>15.4 usec</td>\n<td>18.8 usec</td>\n<td>47.6 usec</td>\n<td>58.3x</td>\n</tr>\n<tr><td>iso8601</td>\n<td>12.8 usec</td>\n<td>14.6 usec</td>\n<td>14.6 usec</td>\n<td>15.2 usec</td>\n<td>17.7 usec</td>\n<td>30 usec</td>\n<td>61.8x</td>\n</tr>\n<tr><td>aniso8601</td>\n<td>19.4 usec</td>\n<td>30.4 usec</td>\n<td>22.1 usec</td>\n<td>20.5 usec</td>\n<td>21.9 usec</td>\n<td>20.1 usec</td>\n<td>94.0x</td>\n</tr>\n<tr><td>iso8601utils</td>\n<td>22.5 usec</td>\n<td>25.3 usec</td>\n<td>26.4 usec</td>\n<td>25.7 usec</td>\n<td>27 usec</td>\n<td>26.9 usec</td>\n<td>108.9x</td>\n</tr>\n<tr><td>zulu</td>\n<td>25.6 usec</td>\n<td>31.2 usec</td>\n<td>30 usec</td>\n<td>32.3 usec</td>\n<td>30.7 usec</td>\n<td>N/A</td>\n<td>124.1x</td>\n</tr>\n<tr><td>PySO8601</td>\n<td>25.9 usec</td>\n<td>35.4 usec</td>\n<td>25.6 usec</td>\n<td>29.5 usec</td>\n<td>27.7 usec</td>\n<td>25.7 usec</td>\n<td>125.2x</td>\n</tr>\n<tr><td>maya</td>\n<td>48.5 usec</td>\n<td>46.6 usec</td>\n<td>51.3 usec</td>\n<td>63.2 usec</td>\n<td>68.1 usec</td>\n<td>125 usec</td>\n<td>234.9x</td>\n</tr>\n<tr><td>python-dateutil</td>\n<td>79.3 usec</td>\n<td>88.5 usec</td>\n<td>101 usec</td>\n<td>89.8 usec</td>\n<td>91.9 usec</td>\n<td>160 usec</td>\n<td>384.2x</td>\n</tr>\n<tr><td>arrow</td>\n<td>86.2 usec</td>\n<td>95.2 usec</td>\n<td>95 usec</td>\n<td>101 usec</td>\n<td>N/A</td>\n<td>103 usec</td>\n<td>417.2x</td>\n</tr>\n<tr><td>moment</td>\n<td><strong>Incorrect Result</strong> (<tt>None</tt>)</td>\n<td><strong>Incorrect Result</strong> (<tt>None</tt>)</td>\n<td><strong>Incorrect Result</strong> (<tt>None</tt>)</td>\n<td><strong>Incorrect Result</strong> (<tt>None</tt>)</td>\n<td>N/A</td>\n<td><strong>Incorrect Result</strong> (<tt>None</tt>)</td>\n<td>3442935.3x</td>\n</tr>\n</tbody>\n</table>\n<p>ciso8601 takes 207 nsec, which is <strong>1.2x faster than pendulum</strong>, the next fastest ISO 8601 parser in this comparison.</p>\n<p>Tested on Darwin 18.7.0 using the following modules:</p>\n<pre><span class=\"n\">aniso8601</span><span class=\"o\">==</span><span class=\"mf\">8.0</span><span class=\"o\">.</span><span class=\"mi\">0</span>\n<span class=\"n\">arrow</span><span class=\"o\">==</span><span class=\"mf\">0.15</span><span class=\"o\">.</span><span class=\"mi\">2</span>\n<span class=\"n\">ciso8601</span><span class=\"o\">==</span><span class=\"mf\">2.1</span><span class=\"o\">.</span><span class=\"mi\">2</span>\n<span class=\"n\">iso8601</span><span class=\"o\">==</span><span class=\"mf\">0.1</span><span class=\"o\">.</span><span class=\"mi\">12</span>\n<span class=\"n\">iso8601utils</span><span class=\"o\">==</span><span class=\"mf\">0.1</span><span class=\"o\">.</span><span class=\"mi\">2</span>\n<span class=\"n\">isodate</span><span class=\"o\">==</span><span class=\"mf\">0.6</span><span class=\"o\">.</span><span class=\"mi\">0</span>\n<span class=\"n\">maya</span><span class=\"o\">==</span><span class=\"mf\">0.6</span><span class=\"o\">.</span><span class=\"mi\">1</span>\n<span class=\"n\">moment</span><span class=\"o\">==</span><span class=\"mf\">0.8</span><span class=\"o\">.</span><span class=\"mi\">2</span>\n<span class=\"n\">pendulum</span><span class=\"o\">==</span><span class=\"mf\">2.0</span><span class=\"o\">.</span><span class=\"mi\">5</span>\n<span class=\"n\">PySO8601</span><span class=\"o\">==</span><span class=\"mf\">0.2</span><span class=\"o\">.</span><span class=\"mi\">0</span>\n<span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">dateutil</span><span class=\"o\">==</span><span class=\"mf\">2.8</span><span class=\"o\">.</span><span class=\"mi\">0</span>\n<span class=\"n\">str2date</span><span class=\"o\">==</span><span class=\"mf\">0.905</span>\n<span class=\"n\">udatetime</span><span class=\"o\">==</span><span class=\"mf\">0.0</span><span class=\"o\">.</span><span class=\"mi\">16</span>\n<span class=\"n\">zulu</span><span class=\"o\">==</span><span class=\"mf\">1.1</span><span class=\"o\">.</span><span class=\"mi\">1</span>\n</pre>\n<p><strong>Note:</strong> ciso8601 doesn\u2019t support the entirety of the ISO 8601 spec, <a href=\"https://github.com/closeio/ciso8601#supported-subset-of-iso-8601\" rel=\"nofollow\">only a popular subset</a>.</p>\n<p>For full benchmarking details (or to run the benchmark yourself), see <a href=\"https://github.com/closeio/ciso8601/blob/master/benchmarking/README.rst\" rel=\"nofollow\">benchmarking/README.rst</a></p>\n</div>\n<div id=\"dependency-on-pytz-python-2\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Dependency on pytz (Python 2)</a></h2>\n<p>In Python 2, <tt>ciso8601</tt> uses the <a href=\"http://pytz.sourceforge.net/\" rel=\"nofollow\">pytz</a> library while parsing timestamps with time zone information. This means that if you wish to parse such timestamps, you must first install <tt>pytz</tt>:</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">pytz</span>\n</pre>\n<p>Otherwise, <tt>ciso8601</tt> will raise an exception when you try to parse a timestamp with time zone information:</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">ciso8601</span><span class=\"o\">.</span><span class=\"n\">parse_datetime</span><span class=\"p\">(</span><span class=\"s1\">'2014-12-05T12:30:45.123456-05:30'</span><span class=\"p\">)</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span> <span class=\"n\">Cannot</span> <span class=\"n\">parse</span> <span class=\"n\">a</span> <span class=\"n\">timestamp</span> <span class=\"k\">with</span> <span class=\"n\">time</span> <span class=\"n\">zone</span> <span class=\"n\">information</span> <span class=\"n\">without</span> <span class=\"n\">the</span> <span class=\"n\">pytz</span> <span class=\"n\">dependency</span><span class=\"o\">.</span> <span class=\"n\">Install</span> <span class=\"n\">it</span> <span class=\"k\">with</span> <span class=\"err\">`</span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">pytz</span><span class=\"err\">`</span><span class=\"o\">.</span>\n</pre>\n<p><tt>pytz</tt> is intentionally not an explicit dependency of <tt>ciso8601</tt>. This is because many users use <tt>ciso8601</tt> to parse only naive timestamps, and therefore don\u2019t need this extra dependency.\nIn Python 3, <tt>ciso8601</tt> makes use of the built-in <a href=\"https://docs.python.org/3/library/datetime.html#timezone-objects\" rel=\"nofollow\">datetime.timezone</a> class instead, so <tt>pytz</tt> is not necessary.</p>\n</div>\n<div id=\"supported-subset-of-iso-8601\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Supported Subset of ISO 8601</a></h2>\n<p><tt>ciso8601</tt> only supports the most common subset of ISO 8601.</p>\n<div id=\"date-formats\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Date Formats</a></h3>\n<p>The following date formats are supported:</p>\n<table>\n<thead>\n<tr><th>Format</th>\n<th>Example</th>\n<th>Supported</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt><span class=\"pre\">YYYY-MM-DD</span></tt></td>\n<td><tt><span class=\"pre\">2018-04-29</span></tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt><span class=\"pre\">YYYY-MM</span></tt></td>\n<td><tt><span class=\"pre\">2018-04</span></tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt>YYYYMMDD</tt></td>\n<td><tt><span class=\"pre\">2018-04</span></tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt><span class=\"pre\">--MM-DD</span></tt> (omitted year)</td>\n<td><tt><span class=\"pre\">--04-29</span></tt></td>\n<td>\u274c</td>\n</tr>\n<tr><td><tt><span class=\"pre\">--MMDD</span></tt> (omitted year)</td>\n<td><tt><span class=\"pre\">--0429</span></tt></td>\n<td>\u274c</td>\n</tr>\n<tr><td><tt><span class=\"pre\">\u00b1YYYYY-MM</span></tt> (&gt;4 digit year)</td>\n<td><tt><span class=\"pre\">+10000-04</span></tt></td>\n<td>\u274c</td>\n</tr>\n<tr><td><tt><span class=\"pre\">+YYYY-MM</span></tt> (leading +)</td>\n<td><tt><span class=\"pre\">+2018-04</span></tt></td>\n<td>\u274c</td>\n</tr>\n<tr><td><tt><span class=\"pre\">-YYYY-MM</span></tt> (negative -)</td>\n<td><tt><span class=\"pre\">-2018-04</span></tt></td>\n<td>\u274c</td>\n</tr>\n</tbody>\n</table>\n<p>Week dates or ordinal dates are not currently supported.</p>\n<table>\n<thead>\n<tr><th>Format</th>\n<th>Example</th>\n<th>Supported</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt><span class=\"pre\">YYYY-Www</span></tt> (week date)</td>\n<td><tt><span class=\"pre\">2009-W01</span></tt></td>\n<td>\u274c</td>\n</tr>\n<tr><td><tt>YYYYWww</tt> (week date)</td>\n<td><tt>2009W01</tt></td>\n<td>\u274c</td>\n</tr>\n<tr><td><tt><span class=\"pre\">YYYY-Www-D</span></tt> (week date)</td>\n<td><tt><span class=\"pre\">2009-W01-1</span></tt></td>\n<td>\u274c</td>\n</tr>\n<tr><td><tt>YYYYWwwD</tt> (week date)</td>\n<td><tt><span class=\"pre\">2009-W01-1</span></tt></td>\n<td>\u274c</td>\n</tr>\n<tr><td><tt><span class=\"pre\">YYYY-DDD</span></tt> (ordinal date)</td>\n<td><tt><span class=\"pre\">1981-095</span></tt></td>\n<td>\u274c</td>\n</tr>\n<tr><td><tt>YYYYDDD</tt> (ordinal date)</td>\n<td><tt>1981095</tt></td>\n<td>\u274c</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"time-formats\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Time Formats</a></h3>\n<p>Times are optional and are separated from the date by the letter <tt>T</tt>.</p>\n<p>Consistent with <a href=\"https://stackoverflow.com/questions/522251/whats-the-difference-between-iso-8601-and-rfc-3339-date-formats\" rel=\"nofollow\">RFC 3339</a>, <tt>ciso860</tt> also allows either a space character, or a lower-case <tt>t</tt>, to be used instead of a <tt>T</tt>.</p>\n<p>The following time formats are supported:</p>\n<table>\n<thead>\n<tr><th>Format</th>\n<th>Example</th>\n<th>Supported</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>hh</tt></td>\n<td><tt>11</tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt>hhmm</tt></td>\n<td><tt>1130</tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt>hh:mm</tt></td>\n<td><tt>11:30</tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt>hhmmss</tt></td>\n<td><tt>113059</tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt>hh:mm:ss</tt></td>\n<td><tt>11:30:59</tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt>hhmmss.ssssss</tt></td>\n<td><tt>113059.123456</tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt>hh:mm:ss.ssssss</tt></td>\n<td><tt>11:30:59.123456</tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt>hhmmss,ssssss</tt></td>\n<td><tt>113059,123456</tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt>hh:mm:ss,ssssss</tt></td>\n<td><tt>11:30:59,123456</tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td>Midnight (special case)</td>\n<td><tt>24:00:00</tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt>hh.hhh</tt> (fractional hours)</td>\n<td><tt>11.5</tt></td>\n<td>\u274c</td>\n</tr>\n<tr><td><tt>hh:mm.mmm</tt> (fractional minutes)</td>\n<td><tt>11:30.5</tt></td>\n<td>\u274c</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Note:</strong> Python datetime objects only have microsecond precision (6 digits). Any additional precision will be truncated.</p>\n</div>\n<div id=\"time-zone-information\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Time Zone Information</a></h3>\n<p>Time zone information may be provided in one of the following formats:</p>\n<table>\n<thead>\n<tr><th>Format</th>\n<th>Example</th>\n<th>Supported</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>Z</tt></td>\n<td><tt>Z</tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt>z</tt></td>\n<td><tt>z</tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt>\u00b1hh</tt></td>\n<td><tt>+11</tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt>\u00b1hhmm</tt></td>\n<td><tt>+1130</tt></td>\n<td>\u2705</td>\n</tr>\n<tr><td><tt>\u00b1hh:mm</tt></td>\n<td><tt>+11:30</tt></td>\n<td>\u2705</td>\n</tr>\n</tbody>\n</table>\n<p>While the ISO 8601 specification allows the use of MINUS SIGN (U+2212) in the time zone separator, <tt>ciso8601</tt> only supports the use of the HYPHEN-MINUS (U+002D) character.</p>\n<p>Consistent with <a href=\"https://tools.ietf.org/html/rfc3339\" rel=\"nofollow\">RFC 3339</a>, <tt>ciso860</tt> also allows a lower-case <tt>z</tt> to be used instead of a <tt>Z</tt>.</p>\n</div>\n</div>\n<div id=\"strict-rfc-3339-parsing\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Strict RFC 3339 Parsing</a></h2>\n<p><tt>ciso8601</tt> parses ISO 8601 datetimes, which can be thought of as a superset of <a href=\"https://tools.ietf.org/html/rfc3339\" rel=\"nofollow\">RFC 3339</a> (<a href=\"https://stackoverflow.com/questions/522251/whats-the-difference-between-iso-8601-and-rfc-3339-date-formats\" rel=\"nofollow\">roughly</a>). In cases where you might want strict RFC 3339 parsing, <tt>ciso8601</tt> offers a <tt>parse_rfc3339</tt> method, which behaves in a similar manner to <tt>parse_datetime</tt>:</p>\n<p><tt>parse_rfc3339(dt: String): datetime</tt> is a function that takes a string and either:</p>\n<ul>\n<li>Returns a properly parsed Python datetime, <strong>if and only if</strong> the <strong>entire</strong> string conforms to RFC 3339.</li>\n<li>Raises a <tt>ValueError</tt> with a description of the reason why the string doesn\u2019t conform to RFC 3339.</li>\n</ul>\n</div>\n<div id=\"ignoring-timezone-information-while-parsing\">\n<h2><a href=\"#id12\" rel=\"nofollow\">Ignoring Timezone Information While Parsing</a></h2>\n<p>It takes more time to parse timestamps with time zone information, especially if they\u2019re not in UTC. However, there are times when you don\u2019t care about time zone information, and wish to produce naive datetimes instead.\nFor example, if you are certain that your program will only parse timestamps from a single time zone, you might want to strip the time zone information and only output naive datetimes.</p>\n<p>In these limited cases, there is a second function provided.\n<tt>parse_datetime_as_naive</tt> will ignore any time zone information it finds and, as a result, is faster for timestamps containing time zone information.</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">ciso8601</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">ciso8601</span><span class=\"o\">.</span><span class=\"n\">parse_datetime_as_naive</span><span class=\"p\">(</span><span class=\"s1\">'2014-12-05T12:30:45.123456-05:30'</span><span class=\"p\">)</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">45</span><span class=\"p\">,</span> <span class=\"mi\">123456</span><span class=\"p\">)</span>\n</pre>\n<p>NOTE: <tt>parse_datetime_as_naive</tt> is only useful in the case where your timestamps have time zone information, but you want to ignore it. This is somewhat unusual.\nIf your timestamps don\u2019t have time zone information (i.e. are naive), simply use <tt>parse_datetime</tt>. It is just as fast.</p>\n</div>\n\n          </div>"}, "last_serial": 6580987, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "bd54d1d933d560a7b805c23a8c480d66", "sha256": "2dd660279bd71b266238d0eaef4b728f55f9136e2ffa6ff5cb993baa47932b94"}, "downloads": -1, "filename": "ciso8601-1.0.tar.gz", "has_sig": false, "md5_digest": "bd54d1d933d560a7b805c23a8c480d66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2066, "upload_time": "2014-06-09T04:21:27", "upload_time_iso_8601": "2014-06-09T04:21:27.508001Z", "url": "https://files.pythonhosted.org/packages/0e/f9/f70bc655a7c9e06140b2612868a511ebc29a8d1e41e0ded02f227807b1c4/ciso8601-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "feb9bf324a903daeeee40d28d20960cb", "sha256": "62fb5f89e57d67352a0c93a8556512d6dfb5d0996ecd3d568032f9826c7bd888"}, "downloads": -1, "filename": "ciso8601-1.0.1.tar.gz", "has_sig": false, "md5_digest": "feb9bf324a903daeeee40d28d20960cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3589, "upload_time": "2014-06-09T21:28:43", "upload_time_iso_8601": "2014-06-09T21:28:43.464246Z", "url": "https://files.pythonhosted.org/packages/92/ba/5e40dac58cf5f40e19140b62549e1d79ffd2c71b8e1f5ba9875987c094b4/ciso8601-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "bbb6d042d07427a507b66884e93c538b", "sha256": "5e086720d56883caf0e5365b62549bf819ed5dba11e873cc8942f47cb2536b1a"}, "downloads": -1, "filename": "ciso8601-1.0.2.tar.gz", "has_sig": false, "md5_digest": "bbb6d042d07427a507b66884e93c538b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4694, "upload_time": "2016-05-26T00:23:05", "upload_time_iso_8601": "2016-05-26T00:23:05.112084Z", "url": "https://files.pythonhosted.org/packages/e7/ed/1c2cf6fa3c99807d1f2cd3760e1685580e49d256d825321e937c9e53e9b5/ciso8601-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "eb6c38a8a9cc734b311594d57258cba7", "sha256": "c2a6b94a7e69338a6a17d04f6a68536fc9a4721bd98d68b61b5c519c3e061ec7"}, "downloads": -1, "filename": "ciso8601-1.0.3.tar.gz", "has_sig": false, "md5_digest": "eb6c38a8a9cc734b311594d57258cba7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5089, "upload_time": "2016-12-21T20:24:26", "upload_time_iso_8601": "2016-12-21T20:24:26.536313Z", "url": "https://files.pythonhosted.org/packages/5e/0a/8fb9492aa17d29a3525c622cbe477bc6016bf53e666ca5a4f63ce7b11d9c/ciso8601-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "b7597cb5a9d1d2080d38cce040e1f017", "sha256": "7dfcc1dfec70cff2e836ab4c9777f5a59bf4dc30c70429d4475424170d301282"}, "downloads": -1, "filename": "ciso8601-1.0.4.tar.gz", "has_sig": false, "md5_digest": "b7597cb5a9d1d2080d38cce040e1f017", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4992, "upload_time": "2017-08-31T23:00:16", "upload_time_iso_8601": "2017-08-31T23:00:16.270965Z", "url": "https://files.pythonhosted.org/packages/4a/e0/b5c69a7e60bdc35e3f748377885c22162d71ff02841705af6bde9f8966dd/ciso8601-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "831bbf799722d34a5e60d91e1fd63cd6", "sha256": "f678e35a839941e94ad0007267768e24b29ff53240fd17f6ab8a7017fd5016db"}, "downloads": -1, "filename": "ciso8601-1.0.5.tar.gz", "has_sig": false, "md5_digest": "831bbf799722d34a5e60d91e1fd63cd6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5485, "upload_time": "2017-08-31T23:12:44", "upload_time_iso_8601": "2017-08-31T23:12:44.303919Z", "url": "https://files.pythonhosted.org/packages/06/2e/2d7b09bb667bd7d862838c1ab7d0dd06be1de27ff60a7c1b0fb0db53fc93/ciso8601-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "b7a6df199b7aa6e17f673a680e89ebcb", "sha256": "292287a5ee353734e67225bdc762b964ebc42f3f5f0bd539ee176631491b36be"}, "downloads": -1, "filename": "ciso8601-1.0.6.tar.gz", "has_sig": false, "md5_digest": "b7a6df199b7aa6e17f673a680e89ebcb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5556, "upload_time": "2018-01-04T22:02:31", "upload_time_iso_8601": "2018-01-04T22:02:31.973643Z", "url": "https://files.pythonhosted.org/packages/ea/6a/59bcb117c72ea65306c248a3d559d45849c411a279c29ba38cd30ae70186/ciso8601-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "39699e17f8c74515c1794e833eb8e827", "sha256": "417887f3ffd4918d758ee1e49de25c55eeb702b0f5983f84c2916aadc3071ab3"}, "downloads": -1, "filename": "ciso8601-1.0.7.tar.gz", "has_sig": false, "md5_digest": "39699e17f8c74515c1794e833eb8e827", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5565, "upload_time": "2018-01-30T18:20:41", "upload_time_iso_8601": "2018-01-30T18:20:41.849691Z", "url": "https://files.pythonhosted.org/packages/66/51/a735b89ebe8711d285dd703b6ad92f9efba004f466f20e69bae66959ae7a/ciso8601-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "15dc6b5d5e4d6d293242fc29f9025c0f", "sha256": "9530790a7b4eeefdec77970966acec0c6fdfd7a4ea1a78ac470b671f98622586"}, "downloads": -1, "filename": "ciso8601-1.0.8.tar.gz", "has_sig": false, "md5_digest": "15dc6b5d5e4d6d293242fc29f9025c0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5610, "upload_time": "2018-05-14T00:35:04", "upload_time_iso_8601": "2018-05-14T00:35:04.069370Z", "url": "https://files.pythonhosted.org/packages/0e/56/a53056e276c1e77f96131f1e8ca8963d6a593cebd880af493ddf308e509c/ciso8601-1.0.8.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "1092668fcd6a93b2f86472b1327957a0", "sha256": "0e5266ef6cbbca0348a548189f8514947e4f94182f726d9b658aa97bae2a7d17"}, "downloads": -1, "filename": "ciso8601-2.0.0.tar.gz", "has_sig": false, "md5_digest": "1092668fcd6a93b2f86472b1327957a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13608, "upload_time": "2018-06-01T08:19:25", "upload_time_iso_8601": "2018-06-01T08:19:25.407888Z", "url": "https://files.pythonhosted.org/packages/dd/9d/e462d6e2501151b3fc172eb72cb137fac35d6b6b6d14525d2a2eec8e7188/ciso8601-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "ee911c56c18a037838f9f333dc49352b", "sha256": "ceb646fd371549ca90b4d925127b35a1efcd572a53ee25dc126009ad828fe3cc"}, "downloads": -1, "filename": "ciso8601-2.0.1.tar.gz", "has_sig": false, "md5_digest": "ee911c56c18a037838f9f333dc49352b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13640, "upload_time": "2018-06-04T06:17:14", "upload_time_iso_8601": "2018-06-04T06:17:14.686799Z", "url": "https://files.pythonhosted.org/packages/61/d8/e17159b6037a26e3facdfeec8750dd17312284a915c5e0da79562b982035/ciso8601-2.0.1.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "8dee8a28d2de431e38f3e67ec573e132", "sha256": "2ada06859b981825a8ccbaa74977cd7c25815f5d32a8d19200054d0e3a6468d7"}, "downloads": -1, "filename": "ciso8601-2.1.0.tar.gz", "has_sig": false, "md5_digest": "8dee8a28d2de431e38f3e67ec573e132", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12769, "upload_time": "2018-10-03T11:21:35", "upload_time_iso_8601": "2018-10-03T11:21:35.507416Z", "url": "https://files.pythonhosted.org/packages/11/01/c9906f095f74a9d3108db526cc716fec434d3da9ec2683ec05c0f3eaafb5/ciso8601-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "87632a8539c8c5d8b07bf9782186ccec", "sha256": "01c44f93addee3cfd599ba6ae8d1b772ed642b89132e504c629feb57cc63a177"}, "downloads": -1, "filename": "ciso8601-2.1.1.tar.gz", "has_sig": false, "md5_digest": "87632a8539c8c5d8b07bf9782186ccec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12850, "upload_time": "2018-10-03T22:09:10", "upload_time_iso_8601": "2018-10-03T22:09:10.015261Z", "url": "https://files.pythonhosted.org/packages/1a/c5/1f2426cdf29a40d2c22e847fe40157ed9b1d74fb3b8ef7cb4afffc4ebc6e/ciso8601-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "a561f8c4635fe16099a45d671be87386", "sha256": "307342e8bb362ae41a3f3a089c11b374116823bce6fbe5d784e2a2dc37f2c753"}, "downloads": -1, "filename": "ciso8601-2.1.2.tar.gz", "has_sig": false, "md5_digest": "a561f8c4635fe16099a45d671be87386", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15404, "upload_time": "2019-10-18T07:23:17", "upload_time_iso_8601": "2019-10-18T07:23:17.891868Z", "url": "https://files.pythonhosted.org/packages/20/67/b813f9c56f9c854edb2855f0bbcb06f354fb3d7ca17c55204d6cdb347dd4/ciso8601-2.1.2.tar.gz", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "5d6434ad5ba5d54167aaa96b3503d81e", "sha256": "bdbb5b366058b1c87735603b23060962c439ac9be66f1ae91e8c7dbd7d59e262"}, "downloads": -1, "filename": "ciso8601-2.1.3.tar.gz", "has_sig": false, "md5_digest": "5d6434ad5ba5d54167aaa96b3503d81e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15726, "upload_time": "2020-02-06T09:32:29", "upload_time_iso_8601": "2020-02-06T09:32:29.943004Z", "url": "https://files.pythonhosted.org/packages/2c/da/626910cf8aca7ed2d5b34355eee8aeaaeb6ddd4e16f98d00a9e2ddad3a08/ciso8601-2.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5d6434ad5ba5d54167aaa96b3503d81e", "sha256": "bdbb5b366058b1c87735603b23060962c439ac9be66f1ae91e8c7dbd7d59e262"}, "downloads": -1, "filename": "ciso8601-2.1.3.tar.gz", "has_sig": false, "md5_digest": "5d6434ad5ba5d54167aaa96b3503d81e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15726, "upload_time": "2020-02-06T09:32:29", "upload_time_iso_8601": "2020-02-06T09:32:29.943004Z", "url": "https://files.pythonhosted.org/packages/2c/da/626910cf8aca7ed2d5b34355eee8aeaaeb6ddd4e16f98d00a9e2ddad3a08/ciso8601-2.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:17 2020"}