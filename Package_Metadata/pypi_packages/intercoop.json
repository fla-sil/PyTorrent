{"info": {"author": "Som Energia SCCL", "author_email": "info@somenergia.coop", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "python-intercoop\n================\n\n|Build Status|\n\nA Python implementation of the intercoop protocol.\n\nPurpose\n-------\n\nIn the context of intercooperation among social economy entities, these\nlibraries implement a protocol to enable a user of a given entity to use\nservices provided by other entities having a bilateral agreement. This\nis done keeping the users in control of which are the enabled services\nand, most important, which entities will be transferred their personal\ndata to.\n\nSome intended goals:\n\n-  Ease extending intercooperation to new entities by sharing a common\n   protocol,\n\n   -  single implementation for our users to use services from many\n      other entities,\n   -  single implementation to offer our services to users of many other\n      entities\n\n-  Be certain that the services request comes from the source entity\n-  Users control how and whom their personal data is transferred to\n-  Still avoid the user from having to type personal data again and\n   again\n\nInstall\n-------\n\n.. code:: bash\n\n    $ pip install .\n\nModules\n-------\n\n-  Examples:\n\n   -  ``portalexample``: Flask based example of a source entity portal\n   -  ``apiexample``: Flask based example of a target entity api\n\n-  Fully reusable modules:\n\n   -  ``catalog``: functions to manage a service catalog in a portal\n   -  ``apiclient``: encapsulates remote acces to the target API\n   -  ``package``: encapsulates package marshalling/umarshalling,\n      signing/verification\n   -  ``crypto``: cryptography primitives:\n\n      -  hides actual algorithms compexity under simple action names\n\n-  Data sources: You normally want to rewrite those, for example to take\n   data from a database or similar. Reference implementation use a\n   directory full of YAML files.\n\n   -  Source Portal:\n\n      -  ``peerinfo``: access yaml info provided by the available\n         targets\n      -  ``userinfo``: access source user personal data\n\n   -  Target API:\n\n      -  ``keyring``: gives access to peers public keys (relies on\n         ``peerinfo``)\n      -  ``remoteuserinfo``: temporary stores the transferred data\n\n-  Utilities:\n\n   -  ``translator``: rewrites yamls by picking language on translatable\n      strings\n   -  ``perfume``: a Flask wrapper to enable dependency injection on\n      Flask apps\n\nExample scripts\n---------------\n\n-  ``portal-example-somillusio.py``: *somillusio* portal\n-  ``api-example-somacme.py``: *somacme* api and service form\n\nOther scripts\n-------------\n\n-  ``validate-intercoop.py``: Validates a peer info yaml\n\n.. |Build Status| image:: https://travis-ci.org/Som-Energia/intercoop.svg?branch=master\n   :target: https://travis-ci.org/Som-Energia/intercoop\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Som-Energia/intercoop", "keywords": "", "license": "GNU Affero General Public License v3 or later (AGPLv3+)", "maintainer": "", "maintainer_email": "", "name": "intercoop", "package_url": "https://pypi.org/project/intercoop/", "platform": "", "project_url": "https://pypi.org/project/intercoop/", "project_urls": {"Homepage": "https://github.com/Som-Energia/intercoop"}, "release_url": "https://pypi.org/project/intercoop/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Intercooperation library", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/Som-Energia/intercoop\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9e1d1fc9ce6ce63789b3e30252c5406ead2c6bf2/68747470733a2f2f7472617669732d63692e6f72672f536f6d2d456e65726769612f696e746572636f6f702e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>A Python implementation of the intercoop protocol.</p>\n<div id=\"purpose\">\n<h2>Purpose</h2>\n<p>In the context of intercooperation among social economy entities, these\nlibraries implement a protocol to enable a user of a given entity to use\nservices provided by other entities having a bilateral agreement. This\nis done keeping the users in control of which are the enabled services\nand, most important, which entities will be transferred their personal\ndata to.</p>\n<p>Some intended goals:</p>\n<ul>\n<li>Ease extending intercooperation to new entities by sharing a common\nprotocol,<ul>\n<li>single implementation for our users to use services from many\nother entities,</li>\n<li>single implementation to offer our services to users of many other\nentities</li>\n</ul>\n</li>\n<li>Be certain that the services request comes from the source entity</li>\n<li>Users control how and whom their personal data is transferred to</li>\n<li>Still avoid the user from having to type personal data again and\nagain</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>$ pip install .\n</pre>\n</div>\n<div id=\"modules\">\n<h2>Modules</h2>\n<ul>\n<li>Examples:<ul>\n<li><tt>portalexample</tt>: Flask based example of a source entity portal</li>\n<li><tt>apiexample</tt>: Flask based example of a target entity api</li>\n</ul>\n</li>\n<li>Fully reusable modules:<ul>\n<li><tt>catalog</tt>: functions to manage a service catalog in a portal</li>\n<li><tt>apiclient</tt>: encapsulates remote acces to the target API</li>\n<li><tt>package</tt>: encapsulates package marshalling/umarshalling,\nsigning/verification</li>\n<li><tt>crypto</tt>: cryptography primitives:<ul>\n<li>hides actual algorithms compexity under simple action names</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Data sources: You normally want to rewrite those, for example to take\ndata from a database or similar. Reference implementation use a\ndirectory full of YAML files.<ul>\n<li>Source Portal:<ul>\n<li><tt>peerinfo</tt>: access yaml info provided by the available\ntargets</li>\n<li><tt>userinfo</tt>: access source user personal data</li>\n</ul>\n</li>\n<li>Target API:<ul>\n<li><tt>keyring</tt>: gives access to peers public keys (relies on\n<tt>peerinfo</tt>)</li>\n<li><tt>remoteuserinfo</tt>: temporary stores the transferred data</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Utilities:<ul>\n<li><tt>translator</tt>: rewrites yamls by picking language on translatable\nstrings</li>\n<li><tt>perfume</tt>: a Flask wrapper to enable dependency injection on\nFlask apps</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"example-scripts\">\n<h2>Example scripts</h2>\n<ul>\n<li><tt><span class=\"pre\">portal-example-somillusio.py</span></tt>: <em>somillusio</em> portal</li>\n<li><tt><span class=\"pre\">api-example-somacme.py</span></tt>: <em>somacme</em> api and service form</li>\n</ul>\n</div>\n<div id=\"other-scripts\">\n<h2>Other scripts</h2>\n<ul>\n<li><tt><span class=\"pre\">validate-intercoop.py</span></tt>: Validates a peer info yaml</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4220663, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "19ff47deb510fc269f714e04d09cbcd8", "sha256": "ea091970989fa5c684b834731b59d8b2638ad20be076d8f271ebf65cb6ab3f0e"}, "downloads": -1, "filename": "intercoop-0.2.tar.gz", "has_sig": false, "md5_digest": "19ff47deb510fc269f714e04d09cbcd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27899, "upload_time": "2018-08-29T22:10:38", "upload_time_iso_8601": "2018-08-29T22:10:38.799147Z", "url": "https://files.pythonhosted.org/packages/68/0f/72decb893e1f5612109366bf4987d713f490f433916a94a80e3061241d69/intercoop-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "7c86d67b9943b9c8012af51ef00d1248", "sha256": "2d3e008e98d95b8f92714efc170dd4fe3085909f5125883e8ea7028bc927fa8a"}, "downloads": -1, "filename": "intercoop-0.2.1.tar.gz", "has_sig": false, "md5_digest": "7c86d67b9943b9c8012af51ef00d1248", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28569, "upload_time": "2018-08-29T22:34:29", "upload_time_iso_8601": "2018-08-29T22:34:29.475104Z", "url": "https://files.pythonhosted.org/packages/63/6a/9ef326190031aa0959c668d0fe4cb2fa4745eea8b92b77d601e3730b43e9/intercoop-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7c86d67b9943b9c8012af51ef00d1248", "sha256": "2d3e008e98d95b8f92714efc170dd4fe3085909f5125883e8ea7028bc927fa8a"}, "downloads": -1, "filename": "intercoop-0.2.1.tar.gz", "has_sig": false, "md5_digest": "7c86d67b9943b9c8012af51ef00d1248", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28569, "upload_time": "2018-08-29T22:34:29", "upload_time_iso_8601": "2018-08-29T22:34:29.475104Z", "url": "https://files.pythonhosted.org/packages/63/6a/9ef326190031aa0959c668d0fe4cb2fa4745eea8b92b77d601e3730b43e9/intercoop-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:29 2020"}