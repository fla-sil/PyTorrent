{"info": {"author": "\u00c2ngelo G. Lovatto", "author_email": "angelolovatto@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Industrial Benchmark for Gym\n\n`gym-industrial` is a standalone Python re-implementation of the [Industrial Benchmark](https://github.com/siemens/industrialbenchmark) (IB) for OpenAI Gym.\n> D. Hein et al., 2017 <br>\n> [**A benchmark environment motivated by industrial control problems.**](https://arxiv.org/abs/1709.09480) <br>\n> In IEEE Symposium Series on Computational Intelligence (SSCI) (pp. 1-8).\n\n## Installation\n\n```bash\npip install gym-industrial\n```\n\n## Environments\n\nTo register the environments in Gym, simply import the package at any point before calling `gym.make`.\n```python\nimport gym\nimport gym_industrial\n\nenv = gym.make(<environment id>, **kwargs)\n```\n\nThe main environment is registered in Gym as `IndustrialBenchmark-v0`. The IB's sub-dynamics have also been implemented as Gym environments. Each contributes with different challenges to the overall task.\n\n| System | Environment ID | Features |\n| -------- | -------- | ------ |\n| Industrial Benchmark | IndustrialBenchmark-v0 | All of the following\n| Operational Cost | IBOperationalCost-v0 | Delayed, blurred, nonlinear rewards |\n| Mis-calibration | IBMisCalibration-v0 | Partial observability, non-stationary dynamics |\n| Fatigue | IBFatigue-v0 | Heteroscedatisc noise, self-amplifying processes\n\n\n## Dynamics as Stochastic Computation Graphs\nThe following are views of the Industrial Benchmark sub-dynamics, plus the reward function, as stochastic computation graphs (SCG).\n\nThe graphical notation used and the SCG definition are taken from [Gradient Estimation Using Stochastic Computation Graphs](http://papers.nips.cc/paper/5899-gradient-estimation-using-stochastic-computation-graphs).\n> Definition 1 (Stochastic Computation Graph). A directed, acyclic graph, with three types of nodes:\n> 1. Input nodes, which are set externally, including the parameters we differentiate with respect to.\n> 2. Deterministic nodes, which are functions of their parents.\n> 3. Stochastic nodes, which are distributed conditionally on their parents.\nEach parent v of a non-input node w is connected to it by a directed edge (v, w).\n\nSquares denote deterministic nodes and circles, stochastic nodes. A special type of deterministic node, denoted by diamonds, indicates that a variable is a cost/reward and thus not part of the observation/state.\n\nNode labels use the notation from the Industrial Benchmark [paper](https://arxiv.org/abs/1709.09480) and correspond to the variables in the equations therein.\n\n### Operational cost\n> The sub-dynamics of operational cost are influenced by the external driver setpoint p and two of the three steerings, velocity v and gain g.\n\nThe observation of operational cost is delayed and blurred by a convolution of past operational costs. In the graph below, ![\\overrightarrow{\\theta}](https://render.githubusercontent.com/render/math?math=%5Coverrightarrow%7B%5Ctheta%7D) denotes a vector of the past 10 values of the hidden operational cost, ![\\theta](https://render.githubusercontent.com/render/math?math=%5Ctheta).\n\n> The motivation for this dynamical behavior is that it is non-linear, it depends on more than one influence, and it is delayed and blurred. All those effects have been observed in industrial applications, like the heating process observable during combustion.\n\n<center><img src=https://i.imgur.com/ZKHaVGD.png width=400></center>\n\n<!-- ![](https://i.imgur.com/ZKHaVGD.png =400x)\n -->\n\n### Mis-calibration dynamics\n> The sub-dynamics of mis-calibration are influenced by external driver setpoint p and steering shift h. The goal is to reward an agent to oscillate in h in a pre-defined frequency around a specific operation point determined by setpoint p. Thereby, the reward topology is inspired by an example from quantum physics, namely Goldstone\u2019s \u201dMexican hat\u201d potential.\n\nThe Goldstone potential-inspired reward is denoted below by the ![m_{t+1}](https://render.githubusercontent.com/render/math?math=m_%7Bt%2B1%7D) node for ease of presentation. Details of the function can be found in the [implementation](gym_industrial/envs/mis_calibration/goldstone.py) or in Appendix B of the paper.\n\n![](https://i.imgur.com/VwS8RV9.png)\n\nBelow is a visual description, taken from the paper, of the penalty landscape and oscillating dynamics.\n\n<center><img src=https://i.imgur.com/SiDalwC.png width=500></center>\n\n<!-- ![](https://i.imgur.com/SiDalwC.png =500x)\n -->\n### Fatigue dynamics\n> The sub-dynamics of fatigue are influenced by the same variables as the sub-dynamics of operational cost, i.e., setpoint p, velocity v, and gain g. The IB is designed in such a way that, when changing the steerings velocity v and gain g as to reduce the operational cost, fatigue will be increased, leading to the desired multi-criterial task, with two reward components showing opposite dependencies on the actions.\n\nThe following SCG highlights the complex stochasticity of the Fatigue dynamics. The random variables don't have dedicated equations in the paper, but are sampled as follows (![\\exp](https://render.githubusercontent.com/render/math?math=%5Cexp) denotes the [exponential](https://en.wikipedia.org/wiki/Exponential_distribution) distribution and ![\\sigma](https://render.githubusercontent.com/render/math?math=%5Csigma), the [logistic](https://en.wikipedia.org/wiki/Sigmoid_function) function).\n\n<center><img src=https://i.imgur.com/GT8nngO.png width=300></center>\n<!-- $$\n\\begin{gather*}\n\\eta^{ve}, \\eta^{ge} \\sim \\sigma(\\exp(\\lambda)) \\\\\n\\eta^{vb}/\\eta^{gb} \\sim {\\rm Binom}(1, v^e)/{\\rm Binom}(1, g^e) \\\\\n\\eta^{vu}, \\eta^{gu} \\sim \\mathcal{U}(0, 1) \\\\\n\\xi \\sim \\mathcal{N}(2.4, 0.4)\n\\end{gather*}\n$$\n -->\n\n![](https://i.imgur.com/9hoVxh7.png)\n\n\n### Reward function\n> In the real-world tasks that motivated the IB, the reward function has always been known explicitly. In some cases it itself was subject to optimization and had to be adjusted to properly express the optimization goal. For the IB we therefore assume that the reward function is known and all variables influencing it are observable.\n\n<center><img src=https://i.imgur.com/E9Vx5yO.png width=400x></center>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/angelolovatto/gym-industrial", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "gym-industrial", "package_url": "https://pypi.org/project/gym-industrial/", "platform": "", "project_url": "https://pypi.org/project/gym-industrial/", "project_urls": {"Homepage": "https://github.com/angelolovatto/gym-industrial"}, "release_url": "https://pypi.org/project/gym-industrial/0.0.4/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Industrial Benchmark for OpenAI Gym", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Industrial Benchmark for Gym</h1>\n<p><code>gym-industrial</code> is a standalone Python re-implementation of the <a href=\"https://github.com/siemens/industrialbenchmark\" rel=\"nofollow\">Industrial Benchmark</a> (IB) for OpenAI Gym.</p>\n<blockquote>\n<p>D. Hein et al., 2017 <br>\n<a href=\"https://arxiv.org/abs/1709.09480\" rel=\"nofollow\"><strong>A benchmark environment motivated by industrial control problems.</strong></a> <br>\nIn IEEE Symposium Series on Computational Intelligence (SSCI) (pp. 1-8).</p>\n</blockquote>\n<h2>Installation</h2>\n<pre>pip install gym-industrial\n</pre>\n<h2>Environments</h2>\n<p>To register the environments in Gym, simply import the package at any point before calling <code>gym.make</code>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">gym</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gym_industrial</span>\n\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">gym</span><span class=\"o\">.</span><span class=\"n\">make</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">environment</span> <span class=\"nb\">id</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<p>The main environment is registered in Gym as <code>IndustrialBenchmark-v0</code>. The IB's sub-dynamics have also been implemented as Gym environments. Each contributes with different challenges to the overall task.</p>\n<table>\n<thead>\n<tr>\n<th>System</th>\n<th>Environment ID</th>\n<th>Features</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Industrial Benchmark</td>\n<td>IndustrialBenchmark-v0</td>\n<td>All of the following</td>\n</tr>\n<tr>\n<td>Operational Cost</td>\n<td>IBOperationalCost-v0</td>\n<td>Delayed, blurred, nonlinear rewards</td>\n</tr>\n<tr>\n<td>Mis-calibration</td>\n<td>IBMisCalibration-v0</td>\n<td>Partial observability, non-stationary dynamics</td>\n</tr>\n<tr>\n<td>Fatigue</td>\n<td>IBFatigue-v0</td>\n<td>Heteroscedatisc noise, self-amplifying processes</td>\n</tr></tbody></table>\n<h2>Dynamics as Stochastic Computation Graphs</h2>\n<p>The following are views of the Industrial Benchmark sub-dynamics, plus the reward function, as stochastic computation graphs (SCG).</p>\n<p>The graphical notation used and the SCG definition are taken from <a href=\"http://papers.nips.cc/paper/5899-gradient-estimation-using-stochastic-computation-graphs\" rel=\"nofollow\">Gradient Estimation Using Stochastic Computation Graphs</a>.</p>\n<blockquote>\n<p>Definition 1 (Stochastic Computation Graph). A directed, acyclic graph, with three types of nodes:</p>\n<ol>\n<li>Input nodes, which are set externally, including the parameters we differentiate with respect to.</li>\n<li>Deterministic nodes, which are functions of their parents.</li>\n<li>Stochastic nodes, which are distributed conditionally on their parents.\nEach parent v of a non-input node w is connected to it by a directed edge (v, w).</li>\n</ol>\n</blockquote>\n<p>Squares denote deterministic nodes and circles, stochastic nodes. A special type of deterministic node, denoted by diamonds, indicates that a variable is a cost/reward and thus not part of the observation/state.</p>\n<p>Node labels use the notation from the Industrial Benchmark <a href=\"https://arxiv.org/abs/1709.09480\" rel=\"nofollow\">paper</a> and correspond to the variables in the equations therein.</p>\n<h3>Operational cost</h3>\n<blockquote>\n<p>The sub-dynamics of operational cost are influenced by the external driver setpoint p and two of the three steerings, velocity v and gain g.</p>\n</blockquote>\n<p>The observation of operational cost is delayed and blurred by a convolution of past operational costs. In the graph below, <img alt=\"\\overrightarrow{\\theta}\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9bfd0ef915668d54abb7a126bc9c164728d62a47/68747470733a2f2f72656e6465722e67697468756275736572636f6e74656e742e636f6d2f72656e6465722f6d6174683f6d6174683d2535436f76657272696768746172726f772537422535437468657461253744\"> denotes a vector of the past 10 values of the hidden operational cost, <img alt=\"\\theta\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ba821e81c3a2dd9df68032266c2e7d88f32e0ae2/68747470733a2f2f72656e6465722e67697468756275736572636f6e74656e742e636f6d2f72656e6465722f6d6174683f6d6174683d2535437468657461\">.</p>\n<blockquote>\n<p>The motivation for this dynamical behavior is that it is non-linear, it depends on more than one influence, and it is delayed and blurred. All those effects have been observed in industrial applications, like the heating process observable during combustion.</p>\n</blockquote>\n&lt;center&gt;<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ee5e8711048f4de44e1b847d8c269e26181be1a/68747470733a2f2f692e696d6775722e636f6d2f5a4b48615647442e706e67\" width=\"400\">&lt;/center&gt;\n\n<h3>Mis-calibration dynamics</h3>\n<blockquote>\n<p>The sub-dynamics of mis-calibration are influenced by external driver setpoint p and steering shift h. The goal is to reward an agent to oscillate in h in a pre-defined frequency around a specific operation point determined by setpoint p. Thereby, the reward topology is inspired by an example from quantum physics, namely Goldstone\u2019s \u201dMexican hat\u201d potential.</p>\n</blockquote>\n<p>The Goldstone potential-inspired reward is denoted below by the <img alt=\"m_{t+1}\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/681f7921a1ccc326642c757e4e625583ee790865/68747470733a2f2f72656e6465722e67697468756275736572636f6e74656e742e636f6d2f72656e6465722f6d6174683f6d6174683d6d5f2537427425324231253744\"> node for ease of presentation. Details of the function can be found in the <a href=\"gym_industrial/envs/mis_calibration/goldstone.py\" rel=\"nofollow\">implementation</a> or in Appendix B of the paper.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d70c35f16ce79eb8af592b964481ead5373a31b5/68747470733a2f2f692e696d6775722e636f6d2f567753385256392e706e67\"></p>\n<p>Below is a visual description, taken from the paper, of the penalty landscape and oscillating dynamics.</p>\n&lt;center&gt;<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a78b46554e50e4a53b0fcd156516f48cfeb09513/68747470733a2f2f692e696d6775722e636f6d2f536944616c77432e706e67\" width=\"500\">&lt;/center&gt;\n\n<h3>Fatigue dynamics</h3>\n<blockquote>\n<p>The sub-dynamics of fatigue are influenced by the same variables as the sub-dynamics of operational cost, i.e., setpoint p, velocity v, and gain g. The IB is designed in such a way that, when changing the steerings velocity v and gain g as to reduce the operational cost, fatigue will be increased, leading to the desired multi-criterial task, with two reward components showing opposite dependencies on the actions.</p>\n</blockquote>\n<p>The following SCG highlights the complex stochasticity of the Fatigue dynamics. The random variables don't have dedicated equations in the paper, but are sampled as follows (<img alt=\"\\exp\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e737460fadfe3c55604dcf1573d4335f20faca83/68747470733a2f2f72656e6465722e67697468756275736572636f6e74656e742e636f6d2f72656e6465722f6d6174683f6d6174683d253543657870\"> denotes the <a href=\"https://en.wikipedia.org/wiki/Exponential_distribution\" rel=\"nofollow\">exponential</a> distribution and <img alt=\"\\sigma\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7b01e2cf42d715575bfddde9eb0c938fb1a8d63/68747470733a2f2f72656e6465722e67697468756275736572636f6e74656e742e636f6d2f72656e6465722f6d6174683f6d6174683d2535437369676d61\">, the <a href=\"https://en.wikipedia.org/wiki/Sigmoid_function\" rel=\"nofollow\">logistic</a> function).</p>\n&lt;center&gt;<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a43d95b3a0e7f4423a0ee282f118195b0960ca8c/68747470733a2f2f692e696d6775722e636f6d2f4754386e6e674f2e706e67\" width=\"300\">&lt;/center&gt;\n\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f61821d6cf341b24746a34464191a021cb0e4736/68747470733a2f2f692e696d6775722e636f6d2f39686f567868372e706e67\"></p>\n<h3>Reward function</h3>\n<blockquote>\n<p>In the real-world tasks that motivated the IB, the reward function has always been known explicitly. In some cases it itself was subject to optimization and had to be adjusted to properly express the optimization goal. For the IB we therefore assume that the reward function is known and all variables influencing it are observable.</p>\n</blockquote>\n&lt;center&gt;<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0336b28ae329d2dc9a669febf58f6d18e9e64ce3/68747470733a2f2f692e696d6775722e636f6d2f4539567835794f2e706e67\" width=\"400x\">&lt;/center&gt;\n\n          </div>"}, "last_serial": 7186534, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "23104de0117f040096ceec0fd7348c26", "sha256": "03b60254aa0fa704aa3e62c54410d7c611d08dcafa4420d4a4758f66f6dbe8f4"}, "downloads": -1, "filename": "gym_industrial-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "23104de0117f040096ceec0fd7348c26", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 18744, "upload_time": "2020-05-04T20:30:00", "upload_time_iso_8601": "2020-05-04T20:30:00.318426Z", "url": "https://files.pythonhosted.org/packages/eb/cd/f4c7c548316de6e33bee84563494c120afd84e258073df3ce570a346cea6/gym_industrial-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd86e835e073b9fdefc142e0c779017c", "sha256": "8c2656b2790fc5d592c1f9143790011e9a17ec8ee9a49a4dd2997f43f640b840"}, "downloads": -1, "filename": "gym-industrial-0.0.1.tar.gz", "has_sig": false, "md5_digest": "bd86e835e073b9fdefc142e0c779017c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 10942, "upload_time": "2020-05-04T20:30:02", "upload_time_iso_8601": "2020-05-04T20:30:02.691711Z", "url": "https://files.pythonhosted.org/packages/bb/99/97d048050ac5caeb8d2754eba1de93479731d85fa0596fc45e51cadaf500/gym-industrial-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f0278c9039ba31096287f2feea6d9d63", "sha256": "9f0e9d146848cc5915b4d083e467ef2b6aecb5a8cc9fcd048522a7bcb6363eb1"}, "downloads": -1, "filename": "gym-industrial-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f0278c9039ba31096287f2feea6d9d63", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11776, "upload_time": "2020-05-06T12:58:05", "upload_time_iso_8601": "2020-05-06T12:58:05.904230Z", "url": "https://files.pythonhosted.org/packages/12/f6/1c1217e8b8f9b29c5cb378442c935f67b092f4a2cdaa0a7e70bbeb1f03cc/gym-industrial-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "1309c01077624079e92c15d6a2cdaf4e", "sha256": "90ed0f27657bbd7eb408519d28922d8245462ca647b524a09ac45afe7d25cd5d"}, "downloads": -1, "filename": "gym-industrial-0.0.3.tar.gz", "has_sig": false, "md5_digest": "1309c01077624079e92c15d6a2cdaf4e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 14485, "upload_time": "2020-05-07T00:32:11", "upload_time_iso_8601": "2020-05-07T00:32:11.168695Z", "url": "https://files.pythonhosted.org/packages/92/81/d6005d108e67ad167c647d9a574856bfc4b7178de3b243a1c553d8f559c2/gym-industrial-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "9c74cebd4c889d16ab77e8c64afee703", "sha256": "6a738aa66e90229a9a99b010a690091efd0973c83785c08bc166244390b4f071"}, "downloads": -1, "filename": "gym-industrial-0.0.4.tar.gz", "has_sig": false, "md5_digest": "9c74cebd4c889d16ab77e8c64afee703", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 14879, "upload_time": "2020-05-07T08:42:35", "upload_time_iso_8601": "2020-05-07T08:42:35.352867Z", "url": "https://files.pythonhosted.org/packages/12/b3/7ca87a1058bb0837d9609dfb4f3ee44a009a674f159b6eac7e46cee42746/gym-industrial-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c74cebd4c889d16ab77e8c64afee703", "sha256": "6a738aa66e90229a9a99b010a690091efd0973c83785c08bc166244390b4f071"}, "downloads": -1, "filename": "gym-industrial-0.0.4.tar.gz", "has_sig": false, "md5_digest": "9c74cebd4c889d16ab77e8c64afee703", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 14879, "upload_time": "2020-05-07T08:42:35", "upload_time_iso_8601": "2020-05-07T08:42:35.352867Z", "url": "https://files.pythonhosted.org/packages/12/b3/7ca87a1058bb0837d9609dfb4f3ee44a009a674f159b6eac7e46cee42746/gym-industrial-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:00 2020"}