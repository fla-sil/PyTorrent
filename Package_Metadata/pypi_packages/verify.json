{"info": {"author": "Derrick Gilland", "author_email": "dgilland@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Testing", "Topic :: Utilities"], "description": "******\nverify\n******\n\n|version| |travis| |coveralls| |license|\n\nVerify is a painless assertion library for Python.\n\n\nLinks\n=====\n\n- Project: https://github.com/dgilland/verify\n- Documentation: http://verify.readthedocs.org\n- PyPI: https://pypi.python.org/pypi/verify/\n- TravisCI: https://travis-ci.org/dgilland/verify\n\n\nQuickstart\n==========\n\nInstall using pip:\n\n\n::\n\n    pip install verify\n\n\nVerify some value using multiple assertions:\n\n\n.. code-block:: python\n\n    from verify import expect, Not, Truthy, Falsy, Less, Greater\n\n    expect(5 * 5,\n           Truthy(),\n           Not(Falsy),\n           Greater(15),\n           Less(30))\n\n\nVerify using your own assert functions:\n\n\n.. code-block:: python\n\n    def is_just_right(value):\n        assert value == 'just right', 'Not just right!'\n\n    # Passes\n    expect('just right', is_just_right)\n\n    # Fails\n    try:\n        expect('too cold', is_just_right)\n    except AssertionError:\n        raise\n\n**NOTE:** The assert function should return a truthy value, otherwise, ``expect`` will treat the falsy return from the function as an indication that it failed and subsequently raise it's own ``AssertionError``.\n\n\nVerify using your own predicate functions:\n\n\n.. code-block:: python\n\n    def is_awesome(value):\n        return 'awesome' in value\n\n    def is_more_awesome(value):\n        return value > 'awesome'\n\n    expect('so awesome', is_awesome, is_more_awesome)\n\n\nVerify using chaining syntax:\n\n\n.. code-block:: python\n\n    expect(1).Truthy().Number().NotBoolean().Not(is_awesome)\n\n\nVerify without ``expect`` since the ``verify`` assertions can be used on their own:\n\n\n.. code-block:: python\n\n    import verify\n\n    # These would pass.\n    verify.Truthy(1)\n    verify.Equal(2, 2)\n    verify.Greater(3, 2)\n\n    # These would fail with an AssertionError\n    verify.Truthy(0)\n    verify.Equal(2, 3)\n    verify.Greater(2, 3)\n\n\nIf you'd prefer to see ``assert`` being used, all ``verify`` assertions will return ``True`` if no ``AssertionError`` is raised:\n\n\n.. code-block:: python\n\n    assert Truthy(1)\n    assert expect(1, Truthy(), Number())\n\n\nMultiple Syntax Styles\n======================\n\nThere are several syntax styles available to help construct more natural sounding assertion chains.\n\n\nExpect...To Be\n--------------\n\nUse ``expect`` with the ``to_be`` aliases. All Pascal case assertions have ``to_be_*`` and ``to_not_be_*`` prefixes (with a few expections).\n\n.. code-block:: python\n\n    expect(something).to_be_int().to_be_less_or_equal(5).to_be_greater_or_equal(1)\n    expect(something_else).to_not_be_float().to_be_number()\n\n\nEnsure...Is\n-----------\n\nUse ``ensure`` with ``is`` aliases. All Pascal case assertions have ``is_*`` and ``is_not_*`` prefixes (with a few expections).\n\n\n.. code-block:: python\n\n    ensure(something).is_int().is_less_or_equal(5).is_greater_or_equal(1)\n    ensure(something_else).is_not_float().is_number()\n\n\nClassical\n---------\n\nUse ``expect`` or ``ensure`` with the Pascal case assertions.\n\n.. code-block:: python\n\n    ensure(something).Int().LessOrEqual(5).GreaterOrEqual(1)\n    expect(something_else).Float().Number()\n\n\n**NOTE:** While it's suggested to not mix styles, each of the assertion syntaxes are available with both ``expect`` and ``ensure``. So you can call ``expect(..).is_int()`` as well as ``ensure(..).to_be_int()``.\n\n\nNaming Convention Exceptions\n----------------------------\n\nAs mentioned above, there are some assertions that have nonstandard aliases:\n\n- ``Not``:  ``not_``, ``does_not``, ``to_fail``, and ``fails``\n- ``Predicate``: ``does``, ``to_pass``, and ``passes``\n- ``All``: ``all_``, ``does_all``, and ``passes_all``\n- ``NotAll``: ``not_all``, ``does_not_all``, and ``fails_all``\n- ``Any``: ``any_``, ``does_any``, and ``passes_any``\n- ``NotAny``: ``not_any``, ``does_not_any``, and ``fails_any``\n- ``Match``: ``to_match``, ``is_match`` and ``matches``\n- ``NotMatch``: ``to_not_match``, ``is_not_match`` and ``does_not_match``\n- ``Is``: ``to_be`` and ``is_``\n- ``Contains``: ``to_contain`` and ``contains``\n- ``NotContains``: ``to_not_contain`` and ``does_not_contain``\n- ``ContainsOnly``: ``to_contain_only`` and ``contains_only``\n- ``NotContainsOnly``: ``to_not_contain_only`` and ``does_not_contain_only``\n- ``Length``: ``to_have_length`` and ``has_length``\n- ``NotLength``: ``to_not_have_length`` and ``does_not_have_length``\n\n\nValidators\n==========\n\nAll of the validators in ``verify`` are callables that can be used in two contexts:\n\n1. By themselves as in ``Equal(a, b)`` which will raise an ``AssertionError`` if false.\n2. In combination with ``expect`` as in ``expect(a, Equal(b))`` which could also raise an ``AssertionError``.\n\nThe available validators are:\n\n=================================== ===========\nValidator                           Description\n=================================== ===========\n``Truthy``                          Assert that ``bool(a)``.\n``Falsy``                           Assert that ``not bool(a)``.\n``Not``                             Assert that a callable doesn't raise an ``AssertionError``.\n``Predicate``                       Assert that ``predicate(a)``.\n``All``                             Assert that all of the list of predicates evaluate ``a`` as truthy.\n``NotAll``                          Assert ``not All``.\n``Any``                             Assert that any of the list of predicates evaluate ``a`` as truthy.\n``NotAny``                          Assert ``not Any``.\n``Equal``                           Assert that ``a == b``.\n``NotEqual``                        Assert ``not Equal``.\n``Match``                           Assert that ``a`` matches regular expression ``b``.\n``NotMatch``                        Assert ``not Match``.\n``Is``                              Assert that ``a is b``.\n``IsNot``                           Assert ``not Is``.\n``IsTrue``                          Assert that ``a is True``.\n``IsNotTrue``                       Assert ``not IsTrue``.\n``IsFalse``                         Assert that ``a is False``.\n``IsNotFalse``                      Assert ``not IsFalse``.\n``IsNone``                          Assert that ``a is None``.\n``IsNotNone``                       Assert ``not IsNone``.\n``Type``                            Assert that ``isinstance(a, b)``.\n``NotType``                         Assert ``not Type``.\n``Boolean``                         Assert that ``isinstance(a, bool)``.\n``NotBoolean``                      Assert ``not Boolean``.\n``String``                          Assert that ``isinstance(a, (str, unicode))``.\n``NotString``                       Assert ``not String``.\n``Dict``                            Assert that ``isinstance(a, dict)``.\n``NotDict``                         Assert ``not Dict``.\n``List``                            Assert that ``isinstance(a, list)``.\n``NotList``                         Assert ``not List``.\n``Tuple``                           Assert that ``isinstance(a, tuple)``.\n``NotTuple``                        Assert ``not Tuple``.\n``Date``                            Assert that ``isinstance(a, datetime.date)``.\n``NotDate``                         Assert ``not Date``.\n``DateString``                      Assert that ``a`` matches the datetime format string ``b``.\n``NotDateString``                   Assert ``not DateString``.\n``Int``                             Assert that ``isinstance(a, int)``.\n``NotInt``                          Assert ``not Int``.\n``Float``                           Assert that ``isinstance(a, float)``.\n``NotFloat``                        Assert ``not Float``.\n``Number``                          Assert that ``isinstance(a, (int, float, Decimal, long))``.\n``NotNumber``                       Assert ``not Number``.\n``In``                              Assert that ``a in b``.\n``NotIn``                           Assert ``not In``.\n``Contains``                        Assert that ``b in a``.\n``NotContains``                     Assert ``not Contains``.\n``ContainsOnly``                    Assert that values from ``b`` are the only ones contained in ``a``.\n``NotContainsOnly``                 Assert ``not ContainsOnly``.\n``Subset``                          Assert that ``a`` is a subset of ``b``.\n``NotSubset``                       Assert ``not Subset``.\n``Superset``                        Assert that ``a`` is a superset of ``b``.\n``NotSuperset``                     Assert ``not Superset``.\n``Unique``                          Assert that ``a`` contains unique items.\n``NotUnique``                       Assert ``not Unique``.\n``Length``                          Assert that ``b <= len(a) <= c``.\n``NotLength``                       Assert that ``not Length``.\n``Greater``/``GreaterThan``         Assert that ``a > b``.\n``GreaterEqual``/``GreaterOrEqual`` Assert that ``a >= b``.\n``Less``/``LessThan``               Assert that ``a < b``.\n``LessEqual``/``LessOrEqual``       Assert that ``a <= b``.\n``Between``                         Assert that ``b <= a <= c``.\n``NotBetween``                      Assert ``not Between``.\n``Positive``                        Assert that ``a > 0``.\n``Negative``                        Assert that ``a < 0``.\n``Even``                            Assert that ``a % 2 == 0``.\n``Odd``                             Assert that ``a % 2 != 1``.\n``Monotone``                        Assert that ``a`` is monotonic with respect to ``b()``.\n``Increasing``                      Assert that ``a`` is monotonically increasing.\n``StrictlyIncreasing``              Assert that ``a`` is strictly increasing.\n``Decreasing``                      Assert that ``a`` is monotonically decreasing.\n``StrictlyDecreasing``              Assert that ``a`` is strictly decreasing.\n=================================== ===========\n\n\nFor more details, please see the full documentation at http://verify.readthedocs.org.\n\n\n.. |version| image:: https://img.shields.io/pypi/v/verify.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/verify/\n\n.. |travis| image:: https://img.shields.io/travis/dgilland/verify/master.svg?style=flat-square\n    :target: https://travis-ci.org/dgilland/verify\n\n.. |coveralls| image:: https://img.shields.io/coveralls/dgilland/verify/master.svg?style=flat-square\n    :target: https://coveralls.io/r/dgilland/verify\n\n.. |license| image:: https://img.shields.io/pypi/l/verify.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/verify/", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dgilland/verify", "keywords": "test testing assert assertion validation unittest", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "verify", "package_url": "https://pypi.org/project/verify/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/verify/", "project_urls": {"Homepage": "https://github.com/dgilland/verify"}, "release_url": "https://pypi.org/project/verify/1.1.1/", "requires_dist": ["pydash (>=4.0.3)"], "requires_python": null, "summary": "A painless assertion and validation library for Python.", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/verify/\" rel=\"nofollow\"><img alt=\"version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2083311330bca5795b6f27ae4ab55ff0f62d93d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7665726966792e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://travis-ci.org/dgilland/verify\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8085b6aa5de663513fa08777c0daf1c4b2c4f30/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6467696c6c616e642f7665726966792f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://coveralls.io/r/dgilland/verify\" rel=\"nofollow\"><img alt=\"coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4633328b5d19729b7274f3a646d80ce7b20bb57e/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6467696c6c616e642f7665726966792f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://pypi.python.org/pypi/verify/\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cae2c8959e6a592605b4de504e353ab0a43c2430/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7665726966792e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<p>Verify is a painless assertion library for Python.</p>\n<div id=\"links\">\n<h2>Links</h2>\n<ul>\n<li>Project: <a href=\"https://github.com/dgilland/verify\" rel=\"nofollow\">https://github.com/dgilland/verify</a></li>\n<li>Documentation: <a href=\"http://verify.readthedocs.org\" rel=\"nofollow\">http://verify.readthedocs.org</a></li>\n<li>PyPI: <a href=\"https://pypi.python.org/pypi/verify/\" rel=\"nofollow\">https://pypi.python.org/pypi/verify/</a></li>\n<li>TravisCI: <a href=\"https://travis-ci.org/dgilland/verify\" rel=\"nofollow\">https://travis-ci.org/dgilland/verify</a></li>\n</ul>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Install using pip:</p>\n<pre>pip install verify\n</pre>\n<p>Verify some value using multiple assertions:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">verify</span> <span class=\"kn\">import</span> <span class=\"n\">expect</span><span class=\"p\">,</span> <span class=\"n\">Not</span><span class=\"p\">,</span> <span class=\"n\">Truthy</span><span class=\"p\">,</span> <span class=\"n\">Falsy</span><span class=\"p\">,</span> <span class=\"n\">Less</span><span class=\"p\">,</span> <span class=\"n\">Greater</span>\n\n<span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"mi\">5</span> <span class=\"o\">*</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n       <span class=\"n\">Truthy</span><span class=\"p\">(),</span>\n       <span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">Falsy</span><span class=\"p\">),</span>\n       <span class=\"n\">Greater</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">),</span>\n       <span class=\"n\">Less</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">))</span>\n</pre>\n<p>Verify using your own assert functions:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">is_just_right</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"k\">assert</span> <span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"s1\">'just right'</span><span class=\"p\">,</span> <span class=\"s1\">'Not just right!'</span>\n\n<span class=\"c1\"># Passes</span>\n<span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s1\">'just right'</span><span class=\"p\">,</span> <span class=\"n\">is_just_right</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Fails</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s1\">'too cold'</span><span class=\"p\">,</span> <span class=\"n\">is_just_right</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">AssertionError</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span>\n</pre>\n<p><strong>NOTE:</strong> The assert function should return a truthy value, otherwise, <tt>expect</tt> will treat the falsy return from the function as an indication that it failed and subsequently raise it\u2019s own <tt>AssertionError</tt>.</p>\n<p>Verify using your own predicate functions:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">is_awesome</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'awesome'</span> <span class=\"ow\">in</span> <span class=\"n\">value</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">is_more_awesome</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">value</span> <span class=\"o\">&gt;</span> <span class=\"s1\">'awesome'</span>\n\n<span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s1\">'so awesome'</span><span class=\"p\">,</span> <span class=\"n\">is_awesome</span><span class=\"p\">,</span> <span class=\"n\">is_more_awesome</span><span class=\"p\">)</span>\n</pre>\n<p>Verify using chaining syntax:</p>\n<pre><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Truthy</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Number</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">NotBoolean</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Not</span><span class=\"p\">(</span><span class=\"n\">is_awesome</span><span class=\"p\">)</span>\n</pre>\n<p>Verify without <tt>expect</tt> since the <tt>verify</tt> assertions can be used on their own:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">verify</span>\n\n<span class=\"c1\"># These would pass.</span>\n<span class=\"n\">verify</span><span class=\"o\">.</span><span class=\"n\">Truthy</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">verify</span><span class=\"o\">.</span><span class=\"n\">Equal</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">verify</span><span class=\"o\">.</span><span class=\"n\">Greater</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># These would fail with an AssertionError</span>\n<span class=\"n\">verify</span><span class=\"o\">.</span><span class=\"n\">Truthy</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">verify</span><span class=\"o\">.</span><span class=\"n\">Equal</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">verify</span><span class=\"o\">.</span><span class=\"n\">Greater</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p>If you\u2019d prefer to see <tt>assert</tt> being used, all <tt>verify</tt> assertions will return <tt>True</tt> if no <tt>AssertionError</tt> is raised:</p>\n<pre><span class=\"k\">assert</span> <span class=\"n\">Truthy</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">Truthy</span><span class=\"p\">(),</span> <span class=\"n\">Number</span><span class=\"p\">())</span>\n</pre>\n</div>\n<div id=\"multiple-syntax-styles\">\n<h2>Multiple Syntax Styles</h2>\n<p>There are several syntax styles available to help construct more natural sounding assertion chains.</p>\n<div id=\"expect-to-be\">\n<h3>Expect\u2026To Be</h3>\n<p>Use <tt>expect</tt> with the <tt>to_be</tt> aliases. All Pascal case assertions have <tt>to_be_*</tt> and <tt>to_not_be_*</tt> prefixes (with a few expections).</p>\n<pre><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"n\">something</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_be_int</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">to_be_less_or_equal</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_be_greater_or_equal</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"n\">something_else</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_not_be_float</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">to_be_number</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"ensure-is\">\n<h3>Ensure\u2026Is</h3>\n<p>Use <tt>ensure</tt> with <tt>is</tt> aliases. All Pascal case assertions have <tt>is_*</tt> and <tt>is_not_*</tt> prefixes (with a few expections).</p>\n<pre><span class=\"n\">ensure</span><span class=\"p\">(</span><span class=\"n\">something</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_int</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">is_less_or_equal</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_greater_or_equal</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">ensure</span><span class=\"p\">(</span><span class=\"n\">something_else</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_not_float</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">is_number</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"classical\">\n<h3>Classical</h3>\n<p>Use <tt>expect</tt> or <tt>ensure</tt> with the Pascal case assertions.</p>\n<pre><span class=\"n\">ensure</span><span class=\"p\">(</span><span class=\"n\">something</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Int</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">LessOrEqual</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GreaterOrEqual</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"n\">something_else</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Float</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Number</span><span class=\"p\">()</span>\n</pre>\n<p><strong>NOTE:</strong> While it\u2019s suggested to not mix styles, each of the assertion syntaxes are available with both <tt>expect</tt> and <tt>ensure</tt>. So you can call <tt><span class=\"pre\">expect(..).is_int()</span></tt> as well as <tt><span class=\"pre\">ensure(..).to_be_int()</span></tt>.</p>\n</div>\n<div id=\"naming-convention-exceptions\">\n<h3>Naming Convention Exceptions</h3>\n<p>As mentioned above, there are some assertions that have nonstandard aliases:</p>\n<ul>\n<li><tt>Not</tt>:  <tt>not_</tt>, <tt>does_not</tt>, <tt>to_fail</tt>, and <tt>fails</tt></li>\n<li><tt>Predicate</tt>: <tt>does</tt>, <tt>to_pass</tt>, and <tt>passes</tt></li>\n<li><tt>All</tt>: <tt>all_</tt>, <tt>does_all</tt>, and <tt>passes_all</tt></li>\n<li><tt>NotAll</tt>: <tt>not_all</tt>, <tt>does_not_all</tt>, and <tt>fails_all</tt></li>\n<li><tt>Any</tt>: <tt>any_</tt>, <tt>does_any</tt>, and <tt>passes_any</tt></li>\n<li><tt>NotAny</tt>: <tt>not_any</tt>, <tt>does_not_any</tt>, and <tt>fails_any</tt></li>\n<li><tt>Match</tt>: <tt>to_match</tt>, <tt>is_match</tt> and <tt>matches</tt></li>\n<li><tt>NotMatch</tt>: <tt>to_not_match</tt>, <tt>is_not_match</tt> and <tt>does_not_match</tt></li>\n<li><tt>Is</tt>: <tt>to_be</tt> and <tt>is_</tt></li>\n<li><tt>Contains</tt>: <tt>to_contain</tt> and <tt>contains</tt></li>\n<li><tt>NotContains</tt>: <tt>to_not_contain</tt> and <tt>does_not_contain</tt></li>\n<li><tt>ContainsOnly</tt>: <tt>to_contain_only</tt> and <tt>contains_only</tt></li>\n<li><tt>NotContainsOnly</tt>: <tt>to_not_contain_only</tt> and <tt>does_not_contain_only</tt></li>\n<li><tt>Length</tt>: <tt>to_have_length</tt> and <tt>has_length</tt></li>\n<li><tt>NotLength</tt>: <tt>to_not_have_length</tt> and <tt>does_not_have_length</tt></li>\n</ul>\n</div>\n</div>\n<div id=\"validators\">\n<h2>Validators</h2>\n<p>All of the validators in <tt>verify</tt> are callables that can be used in two contexts:</p>\n<ol>\n<li>By themselves as in <tt>Equal(a, b)</tt> which will raise an <tt>AssertionError</tt> if false.</li>\n<li>In combination with <tt>expect</tt> as in <tt>expect(a, Equal(b))</tt> which could also raise an <tt>AssertionError</tt>.</li>\n</ol>\n<p>The available validators are:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Validator</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>Truthy</tt></td>\n<td>Assert that <tt>bool(a)</tt>.</td>\n</tr>\n<tr><td><tt>Falsy</tt></td>\n<td>Assert that <tt>not bool(a)</tt>.</td>\n</tr>\n<tr><td><tt>Not</tt></td>\n<td>Assert that a callable doesn\u2019t raise an <tt>AssertionError</tt>.</td>\n</tr>\n<tr><td><tt>Predicate</tt></td>\n<td>Assert that <tt>predicate(a)</tt>.</td>\n</tr>\n<tr><td><tt>All</tt></td>\n<td>Assert that all of the list of predicates evaluate <tt>a</tt> as truthy.</td>\n</tr>\n<tr><td><tt>NotAll</tt></td>\n<td>Assert <tt>not All</tt>.</td>\n</tr>\n<tr><td><tt>Any</tt></td>\n<td>Assert that any of the list of predicates evaluate <tt>a</tt> as truthy.</td>\n</tr>\n<tr><td><tt>NotAny</tt></td>\n<td>Assert <tt>not Any</tt>.</td>\n</tr>\n<tr><td><tt>Equal</tt></td>\n<td>Assert that <tt>a == b</tt>.</td>\n</tr>\n<tr><td><tt>NotEqual</tt></td>\n<td>Assert <tt>not Equal</tt>.</td>\n</tr>\n<tr><td><tt>Match</tt></td>\n<td>Assert that <tt>a</tt> matches regular expression <tt>b</tt>.</td>\n</tr>\n<tr><td><tt>NotMatch</tt></td>\n<td>Assert <tt>not Match</tt>.</td>\n</tr>\n<tr><td><tt>Is</tt></td>\n<td>Assert that <tt>a is b</tt>.</td>\n</tr>\n<tr><td><tt>IsNot</tt></td>\n<td>Assert <tt>not Is</tt>.</td>\n</tr>\n<tr><td><tt>IsTrue</tt></td>\n<td>Assert that <tt>a is True</tt>.</td>\n</tr>\n<tr><td><tt>IsNotTrue</tt></td>\n<td>Assert <tt>not IsTrue</tt>.</td>\n</tr>\n<tr><td><tt>IsFalse</tt></td>\n<td>Assert that <tt>a is False</tt>.</td>\n</tr>\n<tr><td><tt>IsNotFalse</tt></td>\n<td>Assert <tt>not IsFalse</tt>.</td>\n</tr>\n<tr><td><tt>IsNone</tt></td>\n<td>Assert that <tt>a is None</tt>.</td>\n</tr>\n<tr><td><tt>IsNotNone</tt></td>\n<td>Assert <tt>not IsNone</tt>.</td>\n</tr>\n<tr><td><tt>Type</tt></td>\n<td>Assert that <tt>isinstance(a, b)</tt>.</td>\n</tr>\n<tr><td><tt>NotType</tt></td>\n<td>Assert <tt>not Type</tt>.</td>\n</tr>\n<tr><td><tt>Boolean</tt></td>\n<td>Assert that <tt>isinstance(a, bool)</tt>.</td>\n</tr>\n<tr><td><tt>NotBoolean</tt></td>\n<td>Assert <tt>not Boolean</tt>.</td>\n</tr>\n<tr><td><tt>String</tt></td>\n<td>Assert that <tt>isinstance(a, (str, unicode))</tt>.</td>\n</tr>\n<tr><td><tt>NotString</tt></td>\n<td>Assert <tt>not String</tt>.</td>\n</tr>\n<tr><td><tt>Dict</tt></td>\n<td>Assert that <tt>isinstance(a, dict)</tt>.</td>\n</tr>\n<tr><td><tt>NotDict</tt></td>\n<td>Assert <tt>not Dict</tt>.</td>\n</tr>\n<tr><td><tt>List</tt></td>\n<td>Assert that <tt>isinstance(a, list)</tt>.</td>\n</tr>\n<tr><td><tt>NotList</tt></td>\n<td>Assert <tt>not List</tt>.</td>\n</tr>\n<tr><td><tt>Tuple</tt></td>\n<td>Assert that <tt>isinstance(a, tuple)</tt>.</td>\n</tr>\n<tr><td><tt>NotTuple</tt></td>\n<td>Assert <tt>not Tuple</tt>.</td>\n</tr>\n<tr><td><tt>Date</tt></td>\n<td>Assert that <tt>isinstance(a, datetime.date)</tt>.</td>\n</tr>\n<tr><td><tt>NotDate</tt></td>\n<td>Assert <tt>not Date</tt>.</td>\n</tr>\n<tr><td><tt>DateString</tt></td>\n<td>Assert that <tt>a</tt> matches the datetime format string <tt>b</tt>.</td>\n</tr>\n<tr><td><tt>NotDateString</tt></td>\n<td>Assert <tt>not DateString</tt>.</td>\n</tr>\n<tr><td><tt>Int</tt></td>\n<td>Assert that <tt>isinstance(a, int)</tt>.</td>\n</tr>\n<tr><td><tt>NotInt</tt></td>\n<td>Assert <tt>not Int</tt>.</td>\n</tr>\n<tr><td><tt>Float</tt></td>\n<td>Assert that <tt>isinstance(a, float)</tt>.</td>\n</tr>\n<tr><td><tt>NotFloat</tt></td>\n<td>Assert <tt>not Float</tt>.</td>\n</tr>\n<tr><td><tt>Number</tt></td>\n<td>Assert that <tt>isinstance(a, (int, float, Decimal, long))</tt>.</td>\n</tr>\n<tr><td><tt>NotNumber</tt></td>\n<td>Assert <tt>not Number</tt>.</td>\n</tr>\n<tr><td><tt>In</tt></td>\n<td>Assert that <tt>a in b</tt>.</td>\n</tr>\n<tr><td><tt>NotIn</tt></td>\n<td>Assert <tt>not In</tt>.</td>\n</tr>\n<tr><td><tt>Contains</tt></td>\n<td>Assert that <tt>b in a</tt>.</td>\n</tr>\n<tr><td><tt>NotContains</tt></td>\n<td>Assert <tt>not Contains</tt>.</td>\n</tr>\n<tr><td><tt>ContainsOnly</tt></td>\n<td>Assert that values from <tt>b</tt> are the only ones contained in <tt>a</tt>.</td>\n</tr>\n<tr><td><tt>NotContainsOnly</tt></td>\n<td>Assert <tt>not ContainsOnly</tt>.</td>\n</tr>\n<tr><td><tt>Subset</tt></td>\n<td>Assert that <tt>a</tt> is a subset of <tt>b</tt>.</td>\n</tr>\n<tr><td><tt>NotSubset</tt></td>\n<td>Assert <tt>not Subset</tt>.</td>\n</tr>\n<tr><td><tt>Superset</tt></td>\n<td>Assert that <tt>a</tt> is a superset of <tt>b</tt>.</td>\n</tr>\n<tr><td><tt>NotSuperset</tt></td>\n<td>Assert <tt>not Superset</tt>.</td>\n</tr>\n<tr><td><tt>Unique</tt></td>\n<td>Assert that <tt>a</tt> contains unique items.</td>\n</tr>\n<tr><td><tt>NotUnique</tt></td>\n<td>Assert <tt>not Unique</tt>.</td>\n</tr>\n<tr><td><tt>Length</tt></td>\n<td>Assert that <tt>b &lt;= len(a) &lt;= c</tt>.</td>\n</tr>\n<tr><td><tt>NotLength</tt></td>\n<td>Assert that <tt>not Length</tt>.</td>\n</tr>\n<tr><td><tt>Greater</tt>/<tt>GreaterThan</tt></td>\n<td>Assert that <tt>a &gt; b</tt>.</td>\n</tr>\n<tr><td><tt>GreaterEqual</tt>/<tt>GreaterOrEqual</tt></td>\n<td>Assert that <tt>a &gt;= b</tt>.</td>\n</tr>\n<tr><td><tt>Less</tt>/<tt>LessThan</tt></td>\n<td>Assert that <tt>a &lt; b</tt>.</td>\n</tr>\n<tr><td><tt>LessEqual</tt>/<tt>LessOrEqual</tt></td>\n<td>Assert that <tt>a &lt;= b</tt>.</td>\n</tr>\n<tr><td><tt>Between</tt></td>\n<td>Assert that <tt>b &lt;= a &lt;= c</tt>.</td>\n</tr>\n<tr><td><tt>NotBetween</tt></td>\n<td>Assert <tt>not Between</tt>.</td>\n</tr>\n<tr><td><tt>Positive</tt></td>\n<td>Assert that <tt>a &gt; 0</tt>.</td>\n</tr>\n<tr><td><tt>Negative</tt></td>\n<td>Assert that <tt>a &lt; 0</tt>.</td>\n</tr>\n<tr><td><tt>Even</tt></td>\n<td>Assert that <tt>a % 2 == 0</tt>.</td>\n</tr>\n<tr><td><tt>Odd</tt></td>\n<td>Assert that <tt>a % 2 != 1</tt>.</td>\n</tr>\n<tr><td><tt>Monotone</tt></td>\n<td>Assert that <tt>a</tt> is monotonic with respect to <tt>b()</tt>.</td>\n</tr>\n<tr><td><tt>Increasing</tt></td>\n<td>Assert that <tt>a</tt> is monotonically increasing.</td>\n</tr>\n<tr><td><tt>StrictlyIncreasing</tt></td>\n<td>Assert that <tt>a</tt> is strictly increasing.</td>\n</tr>\n<tr><td><tt>Decreasing</tt></td>\n<td>Assert that <tt>a</tt> is monotonically decreasing.</td>\n</tr>\n<tr><td><tt>StrictlyDecreasing</tt></td>\n<td>Assert that <tt>a</tt> is strictly decreasing.</td>\n</tr>\n</tbody>\n</table>\n<p>For more details, please see the full documentation at <a href=\"http://verify.readthedocs.org\" rel=\"nofollow\">http://verify.readthedocs.org</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 2861916, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6c68a4ac5d3c708b8a2db298e9da51f2", "sha256": "9449c721bdae222ade50e7d486bdb1222e9c0b240d12c56d5eb35827604bd628"}, "downloads": -1, "filename": "verify-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6c68a4ac5d3c708b8a2db298e9da51f2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6203, "upload_time": "2015-05-08T03:19:11", "upload_time_iso_8601": "2015-05-08T03:19:11.079196Z", "url": "https://files.pythonhosted.org/packages/d5/ce/17bef81d706c639540b0ef54aa6ebc74ba496cc98969841ba1fe12df1583/verify-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "736da49f7a99e48c4e4d1d3daa270cb4", "sha256": "c9c5ff77ff76eec4a11cd3b3387cd98de43bbecae360b83f35116957791b74ec"}, "downloads": -1, "filename": "verify-0.0.1.tar.gz", "has_sig": false, "md5_digest": "736da49f7a99e48c4e4d1d3daa270cb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5319, "upload_time": "2015-05-08T03:19:14", "upload_time_iso_8601": "2015-05-08T03:19:14.065980Z", "url": "https://files.pythonhosted.org/packages/d8/fe/e5686d4d73dde85bb7a733aaf808bb03b22175235d4616f239c2c9fe4a11/verify-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "ab7f64f6e10564877ea01ec2a955ee13", "sha256": "4713bd5c8fcf3c5452033a40924d08e9f7a8938b59bb881e5635ae51a8f44278"}, "downloads": -1, "filename": "verify-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ab7f64f6e10564877ea01ec2a955ee13", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7830, "upload_time": "2015-05-09T00:07:19", "upload_time_iso_8601": "2015-05-09T00:07:19.645406Z", "url": "https://files.pythonhosted.org/packages/35/59/3c091c90b0354d77fb9faebff7f084e29ce97a461681c5832452e5ddade8/verify-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd344b12953ba6486693301dec006f13", "sha256": "54580d20259f784c5c36d3daef158d3d2b1cfeed4da0eceedd5411989175b13d"}, "downloads": -1, "filename": "verify-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fd344b12953ba6486693301dec006f13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6753, "upload_time": "2015-05-09T00:07:22", "upload_time_iso_8601": "2015-05-09T00:07:22.314263Z", "url": "https://files.pythonhosted.org/packages/01/4a/222b0139c2355169e1c1755086f7d59d34c116e2b0bfbcd5a4c7073509c9/verify-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9fcf9610766b268638d1cd9bf927d5b7", "sha256": "feb0745c9fccc183d8615d3000ddfdb3d5958e00eb0ba7c43757fe8fd4831161"}, "downloads": -1, "filename": "verify-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9fcf9610766b268638d1cd9bf927d5b7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7860, "upload_time": "2015-05-09T04:09:56", "upload_time_iso_8601": "2015-05-09T04:09:56.379983Z", "url": "https://files.pythonhosted.org/packages/16/48/07838db81d41106d8aa00519e8078a0a0f8e0330be0828606eccacc460ad/verify-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba58fe3929226c6bd6c9aa3ae12de878", "sha256": "7a5ec5ec2ec8b935683afdb4dd494f8949ea508b27dab557827d4f869492aa2b"}, "downloads": -1, "filename": "verify-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ba58fe3929226c6bd6c9aa3ae12de878", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6866, "upload_time": "2015-05-09T04:09:59", "upload_time_iso_8601": "2015-05-09T04:09:59.107743Z", "url": "https://files.pythonhosted.org/packages/85/25/c1152003af414aabda9d9d3fa8976420cca2732dab9df4d378abcd64d0f5/verify-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "41cde75265f047da76c9150d8647b481", "sha256": "5de5979a4325dc2fa41df740110c2f3003b2fecd1e8d7cfd956fa1b6cde96d91"}, "downloads": -1, "filename": "verify-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "41cde75265f047da76c9150d8647b481", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8619, "upload_time": "2015-05-11T20:14:26", "upload_time_iso_8601": "2015-05-11T20:14:26.628479Z", "url": "https://files.pythonhosted.org/packages/1f/66/2a76b7d10a4f74d997fece52fc7cfd6a152ea0af396610014dda9c50f1cd/verify-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0fabcedb1940cc26cb6cdeafe2b21d9f", "sha256": "317e87cd7ed404858ec57cf90fb2ccc10d8c1b8e4813e3d131e7d64c682eff2a"}, "downloads": -1, "filename": "verify-0.2.0.tar.gz", "has_sig": false, "md5_digest": "0fabcedb1940cc26cb6cdeafe2b21d9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7668, "upload_time": "2015-05-11T20:14:29", "upload_time_iso_8601": "2015-05-11T20:14:29.051376Z", "url": "https://files.pythonhosted.org/packages/99/80/c9d7e1e79a99bec0305b08540a2181b47de473654178d7828ba18c21e4dd/verify-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "83e5873aa23c4d7692a4a5644b062bcc", "sha256": "bb328b566193779c5e598034dda4aa612aceee9e249d9caa6eeb39349c9956dc"}, "downloads": -1, "filename": "verify-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "83e5873aa23c4d7692a4a5644b062bcc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9621, "upload_time": "2015-05-12T00:32:11", "upload_time_iso_8601": "2015-05-12T00:32:11.154163Z", "url": "https://files.pythonhosted.org/packages/51/15/656d28188055f5510424feb748b0a155396aa6c34749b77cd3a5b3369409/verify-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb4a7173daee3ed83eeb46594c9e250c", "sha256": "e94dd5a40d2da6eb20aa9e3b19856acae36e5b21239c19bfb2f26e0899b970cf"}, "downloads": -1, "filename": "verify-0.3.0.tar.gz", "has_sig": false, "md5_digest": "eb4a7173daee3ed83eeb46594c9e250c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8594, "upload_time": "2015-05-12T00:32:13", "upload_time_iso_8601": "2015-05-12T00:32:13.697021Z", "url": "https://files.pythonhosted.org/packages/5c/ae/ce8428beb580e18b82ecc58b204342a5b48cffea96557f9b6696c4dff417/verify-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "a92bfa293419696d12112a6ecf43a984", "sha256": "f7c7cd1455451ac11c1f4d283e67c76c03703b0858b46c55b48f51904a7179ca"}, "downloads": -1, "filename": "verify-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a92bfa293419696d12112a6ecf43a984", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10286, "upload_time": "2015-05-12T16:37:45", "upload_time_iso_8601": "2015-05-12T16:37:45.976916Z", "url": "https://files.pythonhosted.org/packages/dd/72/bd0573c50dfac34a57ccc72774c43de753a4f439bbcf02ec12758217f025/verify-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de838883fe360b6297d6fa1108608212", "sha256": "f1c53d7f2ad4b18e668deaafd348df808e01ccc02fe70829795a05161de6e18f"}, "downloads": -1, "filename": "verify-0.4.0.tar.gz", "has_sig": false, "md5_digest": "de838883fe360b6297d6fa1108608212", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9323, "upload_time": "2015-05-12T16:37:48", "upload_time_iso_8601": "2015-05-12T16:37:48.434918Z", "url": "https://files.pythonhosted.org/packages/1d/10/b80b947edd77457ba034f04b62d9add786d54d8268a1b778ec348bdae1c4/verify-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "6602648700274bb2ff96685b1ad531db", "sha256": "9c4f1064411ceea114382bba9cbfa3ea823d9da8c0dc2f9ec44e8fe2a6351da1"}, "downloads": -1, "filename": "verify-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6602648700274bb2ff96685b1ad531db", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11428, "upload_time": "2015-05-12T20:44:04", "upload_time_iso_8601": "2015-05-12T20:44:04.472941Z", "url": "https://files.pythonhosted.org/packages/e8/2b/6271f7630533dbd9e26c14db888ebb6973614779386d50eaf5357fcdea43/verify-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d916aa00e388713e7273327b50b34ba", "sha256": "2852de0f7c6c2922300b947c86c5a4d58d73f12fe009b07d2b584bd5c7833f64"}, "downloads": -1, "filename": "verify-0.5.0.tar.gz", "has_sig": false, "md5_digest": "8d916aa00e388713e7273327b50b34ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10659, "upload_time": "2015-05-12T20:44:07", "upload_time_iso_8601": "2015-05-12T20:44:07.475312Z", "url": "https://files.pythonhosted.org/packages/40/6c/4bf051c5e448d6ef9f79a6a55da75764018d64a00940cf0a7d534e0e4c79/verify-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "14d219fb11b57ebede55aa56b7d9ba87", "sha256": "b71c3f26e9caf62ef4275c062801eb1f4211f476c5f534d2fddc7907c5fdf421"}, "downloads": -1, "filename": "verify-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "14d219fb11b57ebede55aa56b7d9ba87", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17009, "upload_time": "2015-05-14T16:49:55", "upload_time_iso_8601": "2015-05-14T16:49:55.218336Z", "url": "https://files.pythonhosted.org/packages/dc/a8/4b944259c4bd354f30777d56bd5e36be01a97708a35ce8fa11321ed93f95/verify-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c857f27cdac546a4a29375bcb1cc86d", "sha256": "69403762391e8033136c544815fffaa9a8d601226f23a0d19de864227702f3bd"}, "downloads": -1, "filename": "verify-0.6.0.tar.gz", "has_sig": false, "md5_digest": "9c857f27cdac546a4a29375bcb1cc86d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13656, "upload_time": "2015-05-14T16:49:58", "upload_time_iso_8601": "2015-05-14T16:49:58.860760Z", "url": "https://files.pythonhosted.org/packages/ba/8d/af6f4fcf2eb1d58b22278374447711d46532e471bbbbc874d21684c3ba53/verify-0.6.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "484b5d9b92cd1b28dfbb8689c82119b0", "sha256": "7f77be6a7bc9b8826289e288d01c8f65666a621e41f65c24afeb9c75395a6741"}, "downloads": -1, "filename": "verify-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "484b5d9b92cd1b28dfbb8689c82119b0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17327, "upload_time": "2015-05-16T01:11:59", "upload_time_iso_8601": "2015-05-16T01:11:59.084049Z", "url": "https://files.pythonhosted.org/packages/77/34/57b4f935ec1dc0d21cdb1b8b84e6efb942527e2e76d7bbade04350480432/verify-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09bd976da9f0a3a0e7b399e63587978a", "sha256": "9b46709680deed3a2b002a80a3ebda5b8b557ec438c455f3d6620e80242019c2"}, "downloads": -1, "filename": "verify-1.0.0.tar.gz", "has_sig": false, "md5_digest": "09bd976da9f0a3a0e7b399e63587978a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14083, "upload_time": "2015-05-16T01:12:01", "upload_time_iso_8601": "2015-05-16T01:12:01.700458Z", "url": "https://files.pythonhosted.org/packages/9b/65/a3b7400df6e7bddaabc5f0a70da377efe609236f879ae57041dc71b8938a/verify-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "57f70886ff738bfdb801bf7d7899b496", "sha256": "c272d64eaf0ce5b2e65d3c14bc141e8c8c0d4e29485dd37ee6d4b94ca8718af1"}, "downloads": -1, "filename": "verify-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "57f70886ff738bfdb801bf7d7899b496", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20903, "upload_time": "2015-07-23T16:01:00", "upload_time_iso_8601": "2015-07-23T16:01:00.745377Z", "url": "https://files.pythonhosted.org/packages/51/d5/667195852d611d34579593dbafd29e1cf365bb927a8e53b28e18505ca37f/verify-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ab55de5966412d7e61385a145d00dec", "sha256": "834625c53899242a707c2f559453985816898efcd288f05d6206dce1653cf5fe"}, "downloads": -1, "filename": "verify-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4ab55de5966412d7e61385a145d00dec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17541, "upload_time": "2015-07-23T16:01:03", "upload_time_iso_8601": "2015-07-23T16:01:03.830240Z", "url": "https://files.pythonhosted.org/packages/8a/70/9f5072e525e26cf975da8552023573ced4d5ed4925b14995bd24eebfd90a/verify-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "ac966f3956cafdb0ae4659adef580905", "sha256": "87b8ea7db88ae8006db3aff27cff6159301168aea99fc7ca73938249fe12e3bb"}, "downloads": -1, "filename": "verify-1.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "ac966f3956cafdb0ae4659adef580905", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 20898, "upload_time": "2017-05-09T15:30:54", "upload_time_iso_8601": "2017-05-09T15:30:54.742516Z", "url": "https://files.pythonhosted.org/packages/08/96/06d3be3705f43e4c30261ae8bf9577b4594163d8ff53f77f46be9d497a29/verify-1.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18dbf41b66ee20eb0ea7c4a1339a962e", "sha256": "a64b55d6a51c9395defdaa4a9a5efa917241bd944c7a8f63500775820b72ca75"}, "downloads": -1, "filename": "verify-1.1.1.tar.gz", "has_sig": false, "md5_digest": "18dbf41b66ee20eb0ea7c4a1339a962e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17617, "upload_time": "2017-05-09T15:30:56", "upload_time_iso_8601": "2017-05-09T15:30:56.749977Z", "url": "https://files.pythonhosted.org/packages/e0/eb/67f0d115dec1cba8e1371eb5d13d87e7cf277572b90a9b9fdaa2682ea706/verify-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ac966f3956cafdb0ae4659adef580905", "sha256": "87b8ea7db88ae8006db3aff27cff6159301168aea99fc7ca73938249fe12e3bb"}, "downloads": -1, "filename": "verify-1.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "ac966f3956cafdb0ae4659adef580905", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 20898, "upload_time": "2017-05-09T15:30:54", "upload_time_iso_8601": "2017-05-09T15:30:54.742516Z", "url": "https://files.pythonhosted.org/packages/08/96/06d3be3705f43e4c30261ae8bf9577b4594163d8ff53f77f46be9d497a29/verify-1.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18dbf41b66ee20eb0ea7c4a1339a962e", "sha256": "a64b55d6a51c9395defdaa4a9a5efa917241bd944c7a8f63500775820b72ca75"}, "downloads": -1, "filename": "verify-1.1.1.tar.gz", "has_sig": false, "md5_digest": "18dbf41b66ee20eb0ea7c4a1339a962e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17617, "upload_time": "2017-05-09T15:30:56", "upload_time_iso_8601": "2017-05-09T15:30:56.749977Z", "url": "https://files.pythonhosted.org/packages/e0/eb/67f0d115dec1cba8e1371eb5d13d87e7cf277572b90a9b9fdaa2682ea706/verify-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:36:51 2020"}