{"info": {"author": "Gaurav Sood, Suriyan Laohaprapanon", "author_email": "gsood07@gmail.com, suriyant@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "outkast: estimate caste by last name, year, and state\n-----------------------------------------------------\n\n.. image:: https://travis-ci.org/appeler/outkast.svg?branch=master\n    :target: https://travis-ci.org/appeler/outkast\n.. image:: https://ci.appveyor.com/api/projects/status/uh8be9gytjo88d6f/branch/master?svg=true\n    :target: https://ci.appveyor.com/project/appeler/outkast\n.. image:: https://img.shields.io/pypi/v/outkast.svg\n    :target: https://pypi.python.org/pypi/outkast\n.. image:: https://pepy.tech/badge/outkast\n    :target: https://pepy.tech/project/outkast\n\n\nUsing data on more than 420M Indians from the `Socio-Economic Caste Census <https://github.com/in-rolls/secc>`__ (parsed data `here <https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/LIIBNB>`__), we estimate the proportion lower-caste for a particular last name, year, and state.\n\nWhy?\n====\n\nWe provide this package so that people can find ways to assess, highlight, and fight unfairness. \n\nHow is the underlying data produced?\n====================================\n\nWe split name into first name and last name and then aggregated per state, year.\n\nThis is used to provide the base prediction.\n\n\nBase Classifier\n~~~~~~~~~~~~~~~\n\nWe start by providing a base model for last\\_name that gives the Bayes\noptimal solution providing the proportion of `SC, ST, and Other` with that last name. \nWe also provide a series of base models where the state of\nresidence is known.\n\nInstallation\n~~~~~~~~~~~~\n\nWe strongly recommend installing `outkast` inside a Python virtual environment (see `venv documentation <https://docs.python.org/3/library/venv.html#creating-virtual-environments>`__)\n\n::\n\n    pip install outkast\n\n\nUsage\n~~~~~\n\n::\n\n    usage: secc_caste [-h] -l LAST_NAME\n                    [-s {arunachal pradesh,assam,bihar,chhattisgarh,gujarat,haryana,kerala,madhya pradesh,maharashtra,mizoram,odisha,nagaland,punjab,rajasthan,sikkim,tamilnadu,uttar pradesh,uttarakhand,west bengal}]\n                    [-y YEAR] [-o OUTPUT]\n                    input\n\n    Appends SECC 2011 data columns for sc, st, and other by last name\n\n    positional arguments:\n    input                 Input file\n\n    optional arguments:\n    -h, --help            show this help message and exit\n    -l LAST_NAME, --last-name LAST_NAME\n                            Name or index location of column contains the last\n                            name\n    -s {arunachal pradesh,assam,bihar,chhattisgarh,gujarat,haryana,kerala,madhya pradesh,maharashtra,mizoram,odisha,nagaland,punjab,rajasthan,sikkim,tamilnadu,uttar pradesh,uttarakhand,west bengal}, --state {arunachal pradesh,assam,bihar,chhattisgarh,gujarat,haryana,kerala,madhya pradesh,maharashtra,mizoram,odisha,nagaland,punjab,rajasthan,sikkim,tamilnadu,uttar pradesh,uttarakhand,west bengal}\n                            State name of SECC data (default=all)\n    -y YEAR, --year YEAR  Birth year in SECC data (default=all)\n    -o OUTPUT, --output OUTPUT\n                            Output file with SECC data columns\n\n\n\nUsing outkast\n~~~~~~~~~~~~~\n\n::\n\n    >>> import pandas as pd\n    >>> from outkast import secc_caste\n    >>>\n    >>> names = [{'name': 'patel'},\n    ...          {'name': 'kohli'},\n    ...          {'name': 'lal'},\n    ...          {'name': 'agarwal'}]\n    >>>\n    >>> df = pd.DataFrame(names)\n    >>>\n    >>> secc_caste(df, 'name')\n        name     n_sc    n_st  n_other   prop_sc   prop_st  prop_other\n    0    patel    17043  336909  1894248  0.007581  0.149857    0.842562\n    1    kohli      468      57      552  0.434540  0.052925    0.512535\n    2      lal  2111632  725713  3943494  0.311412  0.107024    0.581564\n    3  agarwal      117      36    13125  0.008812  0.002711    0.988477\n    >>>\n    >>> help(secc_caste)\n    Help on method secc_caste in module outkast.secc_caste_ln:\n\n    secc_caste(df, namecol, state=None, year=None) method of builtins.type instance\n        Appends additional columns from SECC data to the input DataFrame\n        based on the last name.\n\n        Removes extra space. Checks if the name is the SECC data.\n        If it is, outputs data from that row.\n\n        Args:\n            df (:obj:`DataFrame`): Pandas DataFrame containing the last name\n                column.\n            namecol (str or int): Column's name or location of the name in\n                DataFrame.\n            state (str): The state name of SECC data to be used.\n                (default is None for all states)\n            year (int): The year of SECC data to be used.\n                (default is None for all years)\n\n        Returns:\n            DataFrame: Pandas DataFrame with additional columns:-\n                'n_sc', 'n_st', 'n_other',\n                'prop_sc', 'prop_st', 'prop_other' by last name\n\n\nAuthors\n~~~~~~~\n\nSuriyan Laohaprapanon and Gaurav Sood\n\nLicense\n~~~~~~~\n\nThe package is released under the `MIT\nLicense <https://opensource.org/licenses/MIT>`__.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/appeler/outkast", "keywords": "caste names india", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "outkast", "package_url": "https://pypi.org/project/outkast/", "platform": "", "project_url": "https://pypi.org/project/outkast/", "project_urls": {"Homepage": "https://github.com/appeler/outkast"}, "release_url": "https://pypi.org/project/outkast/0.1.0/", "requires_dist": ["pandas (>=0.19.2)", "check-manifest; extra == 'dev'", "coverage; extra == 'test'"], "requires_python": "", "summary": "Infer Caste from Indian Names", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/appeler/outkast\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/appeler/outkast.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e85902341c5af13e6ba80854f3fe9e62ee095466/68747470733a2f2f7472617669732d63692e6f72672f617070656c65722f6f75746b6173742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/appeler/outkast\" rel=\"nofollow\"><img alt=\"https://ci.appveyor.com/api/projects/status/uh8be9gytjo88d6f/branch/master?svg=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d176df45aab6bd3e76ac58ff1617a09961bebe4/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7568386265396779746a6f38386436662f6272616e63682f6d61737465723f7376673d74727565\"></a>\n<a href=\"https://pypi.python.org/pypi/outkast\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/outkast.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/92259da653be123871841bc452d45d846f03f749/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f75746b6173742e737667\"></a>\n<a href=\"https://pepy.tech/project/outkast\" rel=\"nofollow\"><img alt=\"https://pepy.tech/badge/outkast\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db7d233e2cb1c0d4293d842dc28a74ed40d40665/68747470733a2f2f706570792e746563682f62616467652f6f75746b617374\"></a>\n<p>Using data on more than 420M Indians from the <a href=\"https://github.com/in-rolls/secc\" rel=\"nofollow\">Socio-Economic Caste Census</a> (parsed data <a href=\"https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/LIIBNB\" rel=\"nofollow\">here</a>), we estimate the proportion lower-caste for a particular last name, year, and state.</p>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>We provide this package so that people can find ways to assess, highlight, and fight unfairness.</p>\n</div>\n<div id=\"how-is-the-underlying-data-produced\">\n<h2>How is the underlying data produced?</h2>\n<p>We split name into first name and last name and then aggregated per state, year.</p>\n<p>This is used to provide the base prediction.</p>\n<div id=\"base-classifier\">\n<h3>Base Classifier</h3>\n<p>We start by providing a base model for last_name that gives the Bayes\noptimal solution providing the proportion of <cite>SC, ST, and Other</cite> with that last name.\nWe also provide a series of base models where the state of\nresidence is known.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>We strongly recommend installing <cite>outkast</cite> inside a Python virtual environment (see <a href=\"https://docs.python.org/3/library/venv.html#creating-virtual-environments\" rel=\"nofollow\">venv documentation</a>)</p>\n<pre>pip install outkast\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<pre>usage: secc_caste [-h] -l LAST_NAME\n                [-s {arunachal pradesh,assam,bihar,chhattisgarh,gujarat,haryana,kerala,madhya pradesh,maharashtra,mizoram,odisha,nagaland,punjab,rajasthan,sikkim,tamilnadu,uttar pradesh,uttarakhand,west bengal}]\n                [-y YEAR] [-o OUTPUT]\n                input\n\nAppends SECC 2011 data columns for sc, st, and other by last name\n\npositional arguments:\ninput                 Input file\n\noptional arguments:\n-h, --help            show this help message and exit\n-l LAST_NAME, --last-name LAST_NAME\n                        Name or index location of column contains the last\n                        name\n-s {arunachal pradesh,assam,bihar,chhattisgarh,gujarat,haryana,kerala,madhya pradesh,maharashtra,mizoram,odisha,nagaland,punjab,rajasthan,sikkim,tamilnadu,uttar pradesh,uttarakhand,west bengal}, --state {arunachal pradesh,assam,bihar,chhattisgarh,gujarat,haryana,kerala,madhya pradesh,maharashtra,mizoram,odisha,nagaland,punjab,rajasthan,sikkim,tamilnadu,uttar pradesh,uttarakhand,west bengal}\n                        State name of SECC data (default=all)\n-y YEAR, --year YEAR  Birth year in SECC data (default=all)\n-o OUTPUT, --output OUTPUT\n                        Output file with SECC data columns\n</pre>\n</div>\n<div id=\"using-outkast\">\n<h3>Using outkast</h3>\n<pre>&gt;&gt;&gt; import pandas as pd\n&gt;&gt;&gt; from outkast import secc_caste\n&gt;&gt;&gt;\n&gt;&gt;&gt; names = [{'name': 'patel'},\n...          {'name': 'kohli'},\n...          {'name': 'lal'},\n...          {'name': 'agarwal'}]\n&gt;&gt;&gt;\n&gt;&gt;&gt; df = pd.DataFrame(names)\n&gt;&gt;&gt;\n&gt;&gt;&gt; secc_caste(df, 'name')\n    name     n_sc    n_st  n_other   prop_sc   prop_st  prop_other\n0    patel    17043  336909  1894248  0.007581  0.149857    0.842562\n1    kohli      468      57      552  0.434540  0.052925    0.512535\n2      lal  2111632  725713  3943494  0.311412  0.107024    0.581564\n3  agarwal      117      36    13125  0.008812  0.002711    0.988477\n&gt;&gt;&gt;\n&gt;&gt;&gt; help(secc_caste)\nHelp on method secc_caste in module outkast.secc_caste_ln:\n\nsecc_caste(df, namecol, state=None, year=None) method of builtins.type instance\n    Appends additional columns from SECC data to the input DataFrame\n    based on the last name.\n\n    Removes extra space. Checks if the name is the SECC data.\n    If it is, outputs data from that row.\n\n    Args:\n        df (:obj:`DataFrame`): Pandas DataFrame containing the last name\n            column.\n        namecol (str or int): Column's name or location of the name in\n            DataFrame.\n        state (str): The state name of SECC data to be used.\n            (default is None for all states)\n        year (int): The year of SECC data to be used.\n            (default is None for all years)\n\n    Returns:\n        DataFrame: Pandas DataFrame with additional columns:-\n            'n_sc', 'n_st', 'n_other',\n            'prop_sc', 'prop_st', 'prop_other' by last name\n</pre>\n</div>\n<div id=\"authors\">\n<h3>Authors</h3>\n<p>Suriyan Laohaprapanon and Gaurav Sood</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>The package is released under the <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT\nLicense</a>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6656341, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5f892965d232a5549406451b4d850ac7", "sha256": "c2aa4e2d51e0b64875cbae0546efd18eb09dcc922a6da4dd015ba1a63d55bbca"}, "downloads": -1, "filename": "outkast-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5f892965d232a5549406451b4d850ac7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25592236, "upload_time": "2020-02-16T22:33:31", "upload_time_iso_8601": "2020-02-16T22:33:31.085871Z", "url": "https://files.pythonhosted.org/packages/3d/a7/9980bbb70a2fb5c343655065394e42f0a77e0f4851432c935184d4fdbb62/outkast-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3836dc566edb0d247de23774651b986", "sha256": "9bf450fcec422d410599a01b37ba7fcd4e60adfdbe63210cc273c525691cd972"}, "downloads": -1, "filename": "outkast-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b3836dc566edb0d247de23774651b986", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25591809, "upload_time": "2020-02-16T22:33:36", "upload_time_iso_8601": "2020-02-16T22:33:36.648534Z", "url": "https://files.pythonhosted.org/packages/50/aa/820737dc4e41524248eafaaf3b43d43252fe0c1eff5f9ae3aa2985f84d17/outkast-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f892965d232a5549406451b4d850ac7", "sha256": "c2aa4e2d51e0b64875cbae0546efd18eb09dcc922a6da4dd015ba1a63d55bbca"}, "downloads": -1, "filename": "outkast-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5f892965d232a5549406451b4d850ac7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25592236, "upload_time": "2020-02-16T22:33:31", "upload_time_iso_8601": "2020-02-16T22:33:31.085871Z", "url": "https://files.pythonhosted.org/packages/3d/a7/9980bbb70a2fb5c343655065394e42f0a77e0f4851432c935184d4fdbb62/outkast-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3836dc566edb0d247de23774651b986", "sha256": "9bf450fcec422d410599a01b37ba7fcd4e60adfdbe63210cc273c525691cd972"}, "downloads": -1, "filename": "outkast-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b3836dc566edb0d247de23774651b986", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25591809, "upload_time": "2020-02-16T22:33:36", "upload_time_iso_8601": "2020-02-16T22:33:36.648534Z", "url": "https://files.pythonhosted.org/packages/50/aa/820737dc4e41524248eafaaf3b43d43252fe0c1eff5f9ae3aa2985f84d17/outkast-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:42 2020"}