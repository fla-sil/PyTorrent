{"info": {"author": "Maple.Liu", "author_email": "fjliufeng@163.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP"], "description": "# [ Django base bridge ]\n\n# \u529f\u80fd\u6982\u8ff0\n\n\u653e\u5728\u6211\u4eec\u5e94\u7528\u548cdjango\u5185\u90e8\u6846\u67b6\u4e4b\u95f4\u7684\u6865\u63a5\u57fa\u7c7b\uff0c\u76ee\u7684\u662f\u5728\u4e0d\u4fee\u6539django\u6e90\u7801\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5b9a\u5236\u67d0\u4e9b\u6a21\u5757\u3002\n\n# \u4f9d\u8d56\n\n* Python (2.7.X)\n* Django (1.7+)\n\n# \u5b89\u88c5\n\n    # \u514b\u9686\u4ee3\u7801\u5230\u672c\u5730\n        \n        git clone https://github.com/evilloop/django-base-bridge\n        \n    # \u8fdb\u5165\u76ee\u5f55\n        \n        cd django-base-bridge\n        \n    # \u4e09\u6b65\u5b89\u88c5\u6cd5\n        python setup.py config\n        python setup.py build\n        python setup.py install\n\n# \u7528\u6cd5\n\n    db\n    ===\n    \u91cd\u65b0\u5c01\u88c5\u4e86\u4e00\u5c42\u539f\u6765\u7684Model\u548cfields\uff0c\u4fbf\u4e8e\u5b9a\u5236\n    \n    from base_bridge.db import models\n\n\n    class Project(models.Model):\n        class Meta:\n            verbose_name = verbose_name_plural = u'Project'\n    \n        name = models.CharField(verbose_name=u'\u540d\u79f0')\n        desc = models.TextField(verbose_name=u'\u63cf\u8ff0')\n\n    views\n    ===\n    \u89c6\u56fe\u88c5\u9970\u5668\uff0c\u8bb0\u5f55\u65e5\u5fd7\u548c\u5f02\u5e38\u5904\u7406\n    \n    View\u88c5\u9970\u5668\uff0c\u8c03\u7528\u4e4b\u524d\u9700\u8981\u91cd\u5199\u4ee5\u4e0b\u51fd\u6570\uff1a\n    - request_pre_process\n    - request_exception_process\n\n    from base_bridge.views.decorators import BaseDecorator\n    class BeforeView(BaseDecorator):\n        @classmethod\n        def request_pre_process(cls, request):\n            '''\n            Do something\n            '''\n            pass\n\n        @classmethod\n        def request_exception_process(cls, request, e):\n            '''\n            Do something\n            '''\n            pass\n\n    @BeforeView.catch_exception_without_parameters\n    def some_view(request):\n        pass\n        \n    utils\n    =====\n    \u5de5\u5177\u51fd\u6570\n    \n    from base_bridge.utils.settings import get_settings\n    get_settings() \u76f4\u63a5\u8fd4\u56desettings\u6a21\u5757\u5bf9\u8c61\n    \n    from base_bridge.utils.http import response_as_json\n    response_as_json(request, obj, headers, before_response) \u6784\u9020json\u8fd4\u56de\u5ba2\u6237\u7aef\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/evilloop/django-base-bridge", "keywords": "django base bridge model field db", "license": "GNU General Public License v2 (GPLv2)", "maintainer": "", "maintainer_email": "", "name": "base_bridge", "package_url": "https://pypi.org/project/base_bridge/", "platform": "", "project_url": "https://pypi.org/project/base_bridge/", "project_urls": {"Homepage": "https://github.com/evilloop/django-base-bridge"}, "release_url": "https://pypi.org/project/base_bridge/1.0/", "requires_dist": null, "requires_python": "", "summary": "A base bridge between django framework and our private application.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # [ Django base bridge ]<br><br># \u529f\u80fd\u6982\u8ff0<br><br>\u653e\u5728\u6211\u4eec\u5e94\u7528\u548cdjango\u5185\u90e8\u6846\u67b6\u4e4b\u95f4\u7684\u6865\u63a5\u57fa\u7c7b\uff0c\u76ee\u7684\u662f\u5728\u4e0d\u4fee\u6539django\u6e90\u7801\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5b9a\u5236\u67d0\u4e9b\u6a21\u5757\u3002<br><br># \u4f9d\u8d56<br><br>* Python (2.7.X)<br>* Django (1.7+)<br><br># \u5b89\u88c5<br><br>    # \u514b\u9686\u4ee3\u7801\u5230\u672c\u5730<br>        <br>        git clone https://github.com/evilloop/django-base-bridge<br>        <br>    # \u8fdb\u5165\u76ee\u5f55<br>        <br>        cd django-base-bridge<br>        <br>    # \u4e09\u6b65\u5b89\u88c5\u6cd5<br>        python setup.py config<br>        python setup.py build<br>        python setup.py install<br><br># \u7528\u6cd5<br><br>    db<br>    ===<br>    \u91cd\u65b0\u5c01\u88c5\u4e86\u4e00\u5c42\u539f\u6765\u7684Model\u548cfields\uff0c\u4fbf\u4e8e\u5b9a\u5236<br>    <br>    from base_bridge.db import models<br><br><br>    class Project(models.Model):<br>        class Meta:<br>            verbose_name = verbose_name_plural = u'Project'<br>    <br>        name = models.CharField(verbose_name=u'\u540d\u79f0')<br>        desc = models.TextField(verbose_name=u'\u63cf\u8ff0')<br><br>    views<br>    ===<br>    \u89c6\u56fe\u88c5\u9970\u5668\uff0c\u8bb0\u5f55\u65e5\u5fd7\u548c\u5f02\u5e38\u5904\u7406<br>    <br>    View\u88c5\u9970\u5668\uff0c\u8c03\u7528\u4e4b\u524d\u9700\u8981\u91cd\u5199\u4ee5\u4e0b\u51fd\u6570\uff1a<br>    - request_pre_process<br>    - request_exception_process<br><br>    from base_bridge.views.decorators import BaseDecorator<br>    class BeforeView(BaseDecorator):<br>        @classmethod<br>        def request_pre_process(cls, request):<br>            '''<br>            Do something<br>            '''<br>            pass<br><br>        @classmethod<br>        def request_exception_process(cls, request, e):<br>            '''<br>            Do something<br>            '''<br>            pass<br><br>    @BeforeView.catch_exception_without_parameters<br>    def some_view(request):<br>        pass<br>        <br>    utils<br>    =====<br>    \u5de5\u5177\u51fd\u6570<br>    <br>    from base_bridge.utils.settings import get_settings<br>    get_settings() \u76f4\u63a5\u8fd4\u56desettings\u6a21\u5757\u5bf9\u8c61<br>    <br>    from base_bridge.utils.http import response_as_json<br>    response_as_json(request, obj, headers, before_response) \u6784\u9020json\u8fd4\u56de\u5ba2\u6237\u7aef<br>\n          </div>"}, "last_serial": 2656992, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "9712e7edf980456c1ffca1e226cded99", "sha256": "e91b6f55acdac4fd55b41621caa4b7c26807b555dcd5505df051a78334d6ae7f"}, "downloads": -1, "filename": "base_bridge-1.0.tar.gz", "has_sig": false, "md5_digest": "9712e7edf980456c1ffca1e226cded99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7151, "upload_time": "2017-02-21T07:37:43", "upload_time_iso_8601": "2017-02-21T07:37:43.545787Z", "url": "https://files.pythonhosted.org/packages/e2/fd/31bace8f0bdc0b4a93d34f696139fc88156938e5b92082203e0a3648b212/base_bridge-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9712e7edf980456c1ffca1e226cded99", "sha256": "e91b6f55acdac4fd55b41621caa4b7c26807b555dcd5505df051a78334d6ae7f"}, "downloads": -1, "filename": "base_bridge-1.0.tar.gz", "has_sig": false, "md5_digest": "9712e7edf980456c1ffca1e226cded99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7151, "upload_time": "2017-02-21T07:37:43", "upload_time_iso_8601": "2017-02-21T07:37:43.545787Z", "url": "https://files.pythonhosted.org/packages/e2/fd/31bace8f0bdc0b4a93d34f696139fc88156938e5b92082203e0a3648b212/base_bridge-1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:50 2020"}