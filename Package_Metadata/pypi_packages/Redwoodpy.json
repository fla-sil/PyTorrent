{"info": {"author": "William Farmer", "author_email": "willzfarmer@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "=====================================================\n        |     _ __ ___  __| |_      _____   ___   __| |     |\n        |    | '__/ _ \\/ _` \\ \\ /\\ / / _ \\ / _ \\ / _` |     |\n        |    | | |  __/ (_| |\\ V  V / (_) | (_) | (_| |     |\n        |    |_|  \\___|\\__,_| \\_/\\_/ \\___/ \\___/ \\__,_|     |\n        |                  William Farmer                   |\n        =====================================================\n\nRedwood is a tool for users to check, document, and delete files in directory\ntrees based on age. Redwood will log every step that the process completes as\nwell as every file that is older (or newer) than a user specified age.\n\nRedwood will generate two files as it's run, a logfile as well as a report. The\nlogfile is appended each time redwood is run unless the -c argument is present.\nThe report is generated at the end of each program iteration. The purpose of the\nreport is to identify which files were flagged the last time redwood was run\nwithough having to parse the logfile. Be careful though, unless the report is\nsaved to a different location, redwood will overwrite it the next time it's run.\n\nUSAGE\n=====\nFor help at the command line:\n\nUsage: ./redwood.py <options>\n\nOptions:\n  -h, --help            show this help message and exit\n  -c, --clean           Clean logfile first?\n  -d DIRECTORY, --directory=DIRECTORY\n                        Target Directory(s). If you wish\n                        to include multiple directories, seperate\n                        them using multiple -d arguments\n  -e, --empty           Flag empty directories as well?\n  --delete              Delete flagged files?\n  --force               Whether or not to ask for confirmation when\n                        deleting files. If this flag is included,\n                        it will NOT ask for confirmation.\n  -l LOGFILE, --logfile=LOGFILE\n                        Directory for the logfile\n  -o OPTIONFILE, --optionfile=OPTIONFILE\n                        Which config file to use\n  -r REPORT, --report=REPORT\n                        Directory for the report\n  --reverse             Whether or not to pick files that are newer\n                        or older than the specified time. If this\n                        option is included, any files that are newer\n                        than the time set in .redwoodrc will be flagged\n                        or deleted, depending on other options.\n  -t TRASH, --trash=TRASH\n                        Location for trash. If this flag is present\n                        redwood will move old files to this directory\n                        instead of deleting them.\n\n\nCONFIGURATION\n=============\nThe file .redwoodrc provides two main functions in configuring redwood's\nbehavior. The first function is that of setting the age of files. This is done\nthrough the first line of the file which should look something like this:\n\n    23d\n\nAny line after this will act as a filter for redwood, i.e. any directories\nlisted here will be ignored. The way this works is through the program\ndetermining if the current working directory for the program starts with the\nline from .redwoodrc These lines should look like this:\n\n    /usr/share/\n    /bin\n    /var\n\nKeep in mind that absolute paths need to be used, relative paths will NOT work.\n\nThe config file will also ignore any lines starting with #, so feel free to\ncomment\n\n\nTESTING\n=======\nA test harness is provided with redwood to ensure program functionality.\nTo run,\n    $ ./test_redwood.py\n\nTo see a demonstration of how it works, enter:\n\n    $ ./dir_creation\n    $ ./redwood.py -d /<FULL PATH>/redwood/bin/level0/ -e --delete --force -t /<FULL PATH>/redwood/bin/trash/\n\nThis will generate files, and then scan/delete the old ones. In this example,\nthe files will actually end up in the trash directory under bin/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/Redwoodpy", "keywords": null, "license": "LICENSE", "maintainer": null, "maintainer_email": null, "name": "Redwoodpy", "package_url": "https://pypi.org/project/Redwoodpy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Redwoodpy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/Redwoodpy"}, "release_url": "https://pypi.org/project/Redwoodpy/1.2/", "requires_dist": null, "requires_python": null, "summary": "Identifies files with improper age", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            =====================================================<br>        |     _ __ ___  __| |_      _____   ___   __| |     |<br>        |    | '__/ _ \\/ _` \\ \\ /\\ / / _ \\ / _ \\ / _` |     |<br>        |    | | |  __/ (_| |\\ V  V / (_) | (_) | (_| |     |<br>        |    |_|  \\___|\\__,_| \\_/\\_/ \\___/ \\___/ \\__,_|     |<br>        |                  William Farmer                   |<br>        =====================================================<br><br>Redwood is a tool for users to check, document, and delete files in directory<br>trees based on age. Redwood will log every step that the process completes as<br>well as every file that is older (or newer) than a user specified age.<br><br>Redwood will generate two files as it's run, a logfile as well as a report. The<br>logfile is appended each time redwood is run unless the -c argument is present.<br>The report is generated at the end of each program iteration. The purpose of the<br>report is to identify which files were flagged the last time redwood was run<br>withough having to parse the logfile. Be careful though, unless the report is<br>saved to a different location, redwood will overwrite it the next time it's run.<br><br>USAGE<br>=====<br>For help at the command line:<br><br>Usage: ./redwood.py &lt;options&gt;<br><br>Options:<br>  -h, --help            show this help message and exit<br>  -c, --clean           Clean logfile first?<br>  -d DIRECTORY, --directory=DIRECTORY<br>                        Target Directory(s). If you wish<br>                        to include multiple directories, seperate<br>                        them using multiple -d arguments<br>  -e, --empty           Flag empty directories as well?<br>  --delete              Delete flagged files?<br>  --force               Whether or not to ask for confirmation when<br>                        deleting files. If this flag is included,<br>                        it will NOT ask for confirmation.<br>  -l LOGFILE, --logfile=LOGFILE<br>                        Directory for the logfile<br>  -o OPTIONFILE, --optionfile=OPTIONFILE<br>                        Which config file to use<br>  -r REPORT, --report=REPORT<br>                        Directory for the report<br>  --reverse             Whether or not to pick files that are newer<br>                        or older than the specified time. If this<br>                        option is included, any files that are newer<br>                        than the time set in .redwoodrc will be flagged<br>                        or deleted, depending on other options.<br>  -t TRASH, --trash=TRASH<br>                        Location for trash. If this flag is present<br>                        redwood will move old files to this directory<br>                        instead of deleting them.<br><br><br>CONFIGURATION<br>=============<br>The file .redwoodrc provides two main functions in configuring redwood's<br>behavior. The first function is that of setting the age of files. This is done<br>through the first line of the file which should look something like this:<br><br>    23d<br><br>Any line after this will act as a filter for redwood, i.e. any directories<br>listed here will be ignored. The way this works is through the program<br>determining if the current working directory for the program starts with the<br>line from .redwoodrc These lines should look like this:<br><br>    /usr/share/<br>    /bin<br>    /var<br><br>Keep in mind that absolute paths need to be used, relative paths will NOT work.<br><br>The config file will also ignore any lines starting with #, so feel free to<br>comment<br><br><br>TESTING<br>=======<br>A test harness is provided with redwood to ensure program functionality.<br>To run,<br>    $ ./test_redwood.py<br><br>To see a demonstration of how it works, enter:<br><br>    $ ./dir_creation<br>    $ ./redwood.py -d /&lt;FULL PATH&gt;/redwood/bin/level0/ -e --delete --force -t /&lt;FULL PATH&gt;/redwood/bin/trash/<br><br>This will generate files, and then scan/delete the old ones. In this example,<br>the files will actually end up in the trash directory under bin/\n          </div>"}, "last_serial": 785521, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "21a4a1e162305153594a58f900a009ee", "sha256": "98fd36782d17b4fbcc23869c9c805b45f79d8b0e5693c5dde11253f3373cd1c1"}, "downloads": -1, "filename": "Redwoodpy-1.0.tar.gz", "has_sig": false, "md5_digest": "21a4a1e162305153594a58f900a009ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6142, "upload_time": "2012-09-19T21:43:44", "upload_time_iso_8601": "2012-09-19T21:43:44.868995Z", "url": "https://files.pythonhosted.org/packages/92/cc/0c3b1a6b27588bbf45f4ce04dcd85c2ead0e5bdbfa2e8c7499ceff9e0fba/Redwoodpy-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "c58ef2c7ad52c169f1ee8f7213f82848", "sha256": "4a0e429c1cfba80dea90884cc336a055ce71c779d81b8048b9b73a737a2a0dee"}, "downloads": -1, "filename": "Redwoodpy-1.1.tar.gz", "has_sig": false, "md5_digest": "c58ef2c7ad52c169f1ee8f7213f82848", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6159, "upload_time": "2012-09-19T21:47:01", "upload_time_iso_8601": "2012-09-19T21:47:01.451062Z", "url": "https://files.pythonhosted.org/packages/8b/e1/c635413f698b32f1f00beb4a5a99a880e47b3029e9aafcd9da99d0a2ae71/Redwoodpy-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "36bb340634c274d38436bba7fb3fd0d0", "sha256": "99ad4e8af23398deb49173143e7c7ba7d55098fa31db866472d783c9681a86c3"}, "downloads": -1, "filename": "Redwoodpy-1.2.tar.gz", "has_sig": false, "md5_digest": "36bb340634c274d38436bba7fb3fd0d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6161, "upload_time": "2012-09-20T05:14:01", "upload_time_iso_8601": "2012-09-20T05:14:01.344915Z", "url": "https://files.pythonhosted.org/packages/ef/ca/3d6733702b251d943b636a67dc9c11b09f3b33d42200e37c77cc19646799/Redwoodpy-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "36bb340634c274d38436bba7fb3fd0d0", "sha256": "99ad4e8af23398deb49173143e7c7ba7d55098fa31db866472d783c9681a86c3"}, "downloads": -1, "filename": "Redwoodpy-1.2.tar.gz", "has_sig": false, "md5_digest": "36bb340634c274d38436bba7fb3fd0d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6161, "upload_time": "2012-09-20T05:14:01", "upload_time_iso_8601": "2012-09-20T05:14:01.344915Z", "url": "https://files.pythonhosted.org/packages/ef/ca/3d6733702b251d943b636a67dc9c11b09f3b33d42200e37c77cc19646799/Redwoodpy-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:29 2020"}