{"info": {"author": "Franck Barbenoire", "author_email": "contact@franck-barbenoire.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Topic :: Multimedia :: Graphics :: Graphics Conversion"], "description": "Author\r\n======\r\n\r\nFranck Barbenoire <contact@franck-barbenoire.fr>\r\n\r\nSoftware version\r\n================\r\n\r\nVersion 0.0.2, June 18th, 2014.\r\n\r\nLicense\r\n=======\r\n\r\nThis software is released under GPL v3 license :\r\n\r\nhttp://www.gnu.org/licenses/gpl-3.0.html \r\n\r\nIntroduction\r\n============\r\n\r\nThis module is intended for recovering an image from the tiles generated from\r\nthis image.\r\n\r\nThis program is based on this article from Daniel Gasienica :\r\n\r\nhttp://www.gasi.ch/blog/inside-deep-zoom-2/\r\n\r\nAPI description\r\n===============\r\n\r\nProperties :\r\n\r\n- maximum_level : get the maximum level of the image tree\r\n\r\nMethods :\r\n\r\n- Roofer(xml_url, dir_suffix='_files', mode='RGB') : constructor\r\n\r\n- image_size(level) : get the size of the final image for a given level\r\n\r\n- get_level_size(level) : returns a tuple (width, height, columns, rows) for a level\r\n\r\n- get_tile_image(level, column, row) : returns a tile image from a level at given coordinates (row, column)\r\n\r\n- get_level_image(level) : builds and returns the whole image corresponding to a level\r\n\r\n- get_level_image_t(level, tasks=2) : same as get_level_image but using threads (experimental)\r\n\r\nRequired packages\r\n=================\r\n\r\n* Pillow is required", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/franckinux/roofer", "keywords": "", "license": "GPL3", "maintainer": "", "maintainer_email": "", "name": "roofer", "package_url": "https://pypi.org/project/roofer/", "platform": "", "project_url": "https://pypi.org/project/roofer/", "project_urls": {"Homepage": "https://github.com/franckinux/roofer"}, "release_url": "https://pypi.org/project/roofer/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Recover an image from the tiles (deep zoom format) generated from this image.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"author\">\n<h2>Author</h2>\n<p>Franck Barbenoire &lt;<a href=\"mailto:contact%40franck-barbenoire.fr\">contact<span>@</span>franck-barbenoire<span>.</span>fr</a>&gt;</p>\n</div>\n<div id=\"software-version\">\n<h2>Software version</h2>\n<p>Version 0.0.2, June 18th, 2014.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This software is released under GPL v3 license :</p>\n<p><a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" rel=\"nofollow\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n</div>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This module is intended for recovering an image from the tiles generated from\nthis image.</p>\n<p>This program is based on this article from Daniel Gasienica :</p>\n<p><a href=\"http://www.gasi.ch/blog/inside-deep-zoom-2/\" rel=\"nofollow\">http://www.gasi.ch/blog/inside-deep-zoom-2/</a></p>\n</div>\n<div id=\"api-description\">\n<h2>API description</h2>\n<p>Properties :</p>\n<ul>\n<li>maximum_level : get the maximum level of the image tree</li>\n</ul>\n<p>Methods :</p>\n<ul>\n<li>Roofer(xml_url, dir_suffix=\u2019_files\u2019, mode=\u2019RGB\u2019) : constructor</li>\n<li>image_size(level) : get the size of the final image for a given level</li>\n<li>get_level_size(level) : returns a tuple (width, height, columns, rows) for a level</li>\n<li>get_tile_image(level, column, row) : returns a tile image from a level at given coordinates (row, column)</li>\n<li>get_level_image(level) : builds and returns the whole image corresponding to a level</li>\n<li>get_level_image_t(level, tasks=2) : same as get_level_image but using threads (experimental)</li>\n</ul>\n</div>\n<div id=\"required-packages\">\n<h2>Required packages</h2>\n<ul>\n<li>Pillow is required</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1129622, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "935c54e8670cc7f2b66ff87240e3b25f", "sha256": "37c8f700263a3969c3dc7dec846bddac68a6a0ff2fa8d846f0f9fe9bc3061e97"}, "downloads": -1, "filename": "roofer-0.0.2.tar.gz", "has_sig": false, "md5_digest": "935c54e8670cc7f2b66ff87240e3b25f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15706, "upload_time": "2014-06-18T20:52:37", "upload_time_iso_8601": "2014-06-18T20:52:37.647227Z", "url": "https://files.pythonhosted.org/packages/b1/bd/c618fd9383e022f8d12da99670192c2ce22a7df5d4a30643e148e3494f09/roofer-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "935c54e8670cc7f2b66ff87240e3b25f", "sha256": "37c8f700263a3969c3dc7dec846bddac68a6a0ff2fa8d846f0f9fe9bc3061e97"}, "downloads": -1, "filename": "roofer-0.0.2.tar.gz", "has_sig": false, "md5_digest": "935c54e8670cc7f2b66ff87240e3b25f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15706, "upload_time": "2014-06-18T20:52:37", "upload_time_iso_8601": "2014-06-18T20:52:37.647227Z", "url": "https://files.pythonhosted.org/packages/b1/bd/c618fd9383e022f8d12da99670192c2ce22a7df5d4a30643e148e3494f09/roofer-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:22 2020"}