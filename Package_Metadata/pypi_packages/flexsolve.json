{"info": {"author": "Yoel Cortes-Pena", "author_email": "yoelcortes@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Mathematics"], "description": "========================================================\nflexsolve: Flexible function solvers\n========================================================\n.. image:: http://img.shields.io/badge/license-MIT-blue.svg?style=flat\n   :target: https://github.com/yoelcortes/flexsolve/blob/master/LICENSE.txt\n   :alt: license\n.. image:: http://img.shields.io/pypi/v/flexsolve.svg?style=flat\n   :target: https://pypi.python.org/pypi/flexsolve\n   :alt: Version_status\n\n.. contents::\n\nWhat is flexsolve?\n------------------\n\nflexsolve presents a flexible set of function solvers by defining alternative\ntolerance conditions for accepting a solution. These solvers also implement\nmethods like Wegstein and Aitken-Steffensen acceleration to reach solutions\nquicker.\n\nInstallation\n------------\n\nGet the latest version of flexsolve from `PyPI <https://pypi.python.org/pypi/flexsolve/>`__. If you have an installation of Python with pip, simple install it with:\n\n    $ pip install flexsolve\n\nTo get the git version, run:\n\n    $ git clone git://github.com/yoelcortes/flexsolve\n\nDocumentation\n-------------\n\nFlexsolve solvers can solve a variety of specifications:\n\n* Solve x where f(x) = x:\n\n  * **fixed_point**: Simple fixed point iteration.\n\n  * **wegstein**: Wegstein's accelerated iteration method.\n\n  * **aitken**: Aitken-Steffensen accelerated iteration method.\n\n* Solve x where f(x) = 0 and x0 < x < x1:\n\n  * **bisection**: Simple bisection method\n\n  * **false_position**: Simple false position method.\n\n  * **IQ_interpolation**: Quadratic interpolation solver (similar to `scipy.optimize.brentq <https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.optimize.brentq.html>`__)\n\n  * **bounded_wegstein**: False position method with Wegstein acceleration.\n\n  * **bounded_aitken**: False position method with Aitken-Steffensen acceleration.\n\n* Solve x where f(x) = 0:\n\n  * **secant**: Simple secant method.\n\n  * **wegstein_secant**: Secant method with Wegstein acceleration.\n\n  * **aitken_secant**: Secant method with Aitken acceleration.\n\nParameters for each solver are pretty consitent and straight forward:\n\n* **f**: objective function in the form of `f(x, *args)`.\n* **x**: Root guess. Solver begins the iteration by evaluating `f(x)`.\n* **x0, x1**: Root bracket. Solution must lie within `x0` and `x1`.\n* **xtol=1e-8**: Solver stops when the root lies within `xtol`.\n* **ytol=5e-8**: Solver stops when the f(x) lies within `ytol` of the root.\n* **yval=0**: Root offset. Solver will find x where f(x) = `yval`.\n* **args=()**: Arguments to pass to `f`.\n\nHere are some exmples using flexsolve's Profiler object to test and compare\ndifferent solvers. In the graphs, the points are the solver iterations and \nthe lines represent f(x). The lines and points are offset to make them more visible\n(so all the points are actually on the same curve!). The shaded area is just to \nhelp us relate the points to the curve (not an actual interval):\n\n.. code-block:: python\n\n    >>> import flexsolve as flx \n    >>> from scipy import optimize as opt\n    >>> x0, x1 = [-5, 5]\n    >>> f = lambda x: x**3 - 40 + 2*x \n    >>> p = flx.Profiler(f) # When called, it returns f(x) and saves the results.\n    >>> opt.brentq(p, x0, x1, xtol=1e-8)\n    3.225240462778411\n    >>> p.archive('[Scipy] Brent-Q') # Save/archive results with given name\n    >>> opt.brenth(p, x0, x1)\n    3.2252404627917794\n    >>> p.archive('[Scipy] Brent-H')\n    >>> flx.IQ_interpolation(p, x0, x1)\n    3.225240462796626\n    >>> p.archive('IQ-interpolation')\n    >>> flx.bounded_wegstein(p, x0, x1)\n    3.225240462790051\n    >>> p.archive('Wegstein')\n    >>> x_aitken = flx.bounded_aitken(p, x0, x1)\n    3.2252404627883218\n    >>> p.archive('Aitken')\n    >>> flx.false_position(p, x0, x1)\n    3.225240462687035\n    >>> p.archive('False position')\n    >>> p.plot(r'$f(x) = 0 = x^3 + 2 \\cdot x - 40$ where $-5 < x < 5$')\n\n.. image:: https://raw.githubusercontent.com/yoelcortes/flexsolve/master/docs/images/bounded_solvers_example.png\n\n.. code-block:: python\n\n    >>> p = flx.Profiler(f)\n    >>> x_guess = -5\n    >>> flx.wegstein_secant(p, x_guess)\n    3.22524046279178\n    >>> p.archive('Wegstein')\n    >>> flx.aitken_secant(p, x_guess)\n    3.22524046279178\n    >>> p.archive('Aitken')\n    >>> flx.secant(p, x_guess)\n    3.2252404627918057\n    >>> p.archive('Secant')\n    >>> opt.newton(p, x_guess)\n    3.2252404627918065\n    >>> p.archive('[Scipy] Newton')\n    >>> p.plot(r'$f(x) = 0 = x^3 + 2 \\cdot x - 40$')\n\n.. image:: https://raw.githubusercontent.com/yoelcortes/flexsolve/master/docs/images/general_solvers_example.png\n\n.. code-block:: python\n\n    >>> # Note that x = 40/x^2 - 2/x is the same\n    >>> # objective function as x**3 - 40 + 2*x = 0\n    >>> f = lambda x: 40/x**2 - 2/x\n    >>> p = flx.Profiler(f)\n    >>> x_guess = 5.\n    >>> flx.wegstein(p, x_guess)\n    3.2252404626726996\n    >>> p.archive('Wegstein')\n    >>> flx.aitken(p, x_guess)\n    3.2252404627250075\n    >>> p.archive('Aitken')\n    >>> p.plot(r'$f(x) = x = \\frac{40}{x^2} - \\frac{2}{x}$',\n    ...        markbounds=False)\n    >>> # Fixed-point iteration is non-convergent for this equation,\n    >>> # so we do not include it here\n\n.. image:: https://raw.githubusercontent.com/yoelcortes/flexsolve/master/docs/images/fixed_point_solvers_example.png\n\nIf your project is need for speed, you can speed up calculations in flexsolve\nusing the **speed_up()** method, which works by `jit <https://numba.pydata.org/numba-doc/dev/index.html>`__\ncompiling computationally-heavy algorithms in flexsolve. The following example benchmarks flexsolve's speed\nwith and without compiling:\n\n.. code-block:: python\n\n    >>> import flexsolve as flx\n    >>> f = lambda x: x**3 - 40 + 2*x \n    >>> # Time solver without compiling\n    >>> %timeit flx.IQ_interpolation(f, -5, 5)\n    38.3 \u00c2\u00b5s \u00c2\u00b1 4.7 \u00c2\u00b5s per loop (mean \u00c2\u00b1 std. dev. of 7 runs, 10000 loops each)\n    >>> flx.speed_up() # This is the only line we need to run to speed up flexsolve\n    >>> # First run is slower because it need to compile\n    >>> x = flx.IQ_interpolation(f, -5, 5) \n    >>> # Time solver after compiling\n    >>> %timeit flx.IQ_interpolation(f, -5, 5)\n    11.3 \u00c2\u00b5s \u00c2\u00b1 156 ns per loop (mean \u00c2\u00b1 std. dev. of 7 runs, 100000 loops each)\n    \nThe iterative methods for solving f(x) = x (e.g. fixed-point, Wegstain, Aitken) are \ncapable of solving multi-dimensional problems. Simply make sure x is an array \nand f(x) returns an array with the same dimensions. In fact, the\n`The Biorefinery Simulation and Techno-Economic Analysis Modules (BioSTEAM) <https://biosteam.readthedocs.io/en/latest/>`_ \nuses flexsolve to solve many chemical engineering problems, including \nprocess recycle stream flow rates and vapor-liquid equilibrium compositions.\n\nBug reports\n-----------\n\nTo report bugs, please use the eqsolvers's Bug Tracker at:\n\n    https://github.com/yoelcortes/flexsolve\n\n\nLicense information\n-------------------\n\nSee ``LICENSE.txt`` for information on the terms & conditions for usage\nof this software, and a DISCLAIMER OF ALL WARRANTIES.\n\nAlthough not required by the eqsolvers license, if it is convenient for you,\nplease cite eqsolvers if used in your work. Please also consider contributing\nany changes you make back, and benefit the community.\n\n\nCitation\n--------\n\nTo cite eqsolvers in publications use:\n\n    Yoel Cortes-Pena (2019). flexsolve: Flexible function solvers.\n    https://github.com/yoelcortes/flexsolve\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/yoelcortes/flexsolve.git", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yoelcortes/flexsolve", "keywords": "solve equation function flexible", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flexsolve", "package_url": "https://pypi.org/project/flexsolve/", "platform": "Windows", "project_url": "https://pypi.org/project/flexsolve/", "project_urls": {"Download": "https://github.com/yoelcortes/flexsolve.git", "Homepage": "https://github.com/yoelcortes/flexsolve"}, "release_url": "https://pypi.org/project/flexsolve/0.3.3/", "requires_dist": null, "requires_python": "", "summary": "Flexible function solvers", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://github.com/yoelcortes/flexsolve/blob/master/LICENSE.txt\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9f8168092fab8a1e348f4b089c1ff9cc0c137bf/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://pypi.python.org/pypi/flexsolve\" rel=\"nofollow\"><img alt=\"Version_status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/035bd38e088f75862525284b74724214d78a31cf/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f666c6578736f6c76652e7376673f7374796c653d666c6174\"></a>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#what-is-flexsolve\" id=\"id1\" rel=\"nofollow\">What is flexsolve?</a></li>\n<li><a href=\"#installation\" id=\"id2\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#documentation\" id=\"id3\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"#bug-reports\" id=\"id4\" rel=\"nofollow\">Bug reports</a></li>\n<li><a href=\"#license-information\" id=\"id5\" rel=\"nofollow\">License information</a></li>\n<li><a href=\"#citation\" id=\"id6\" rel=\"nofollow\">Citation</a></li>\n</ul>\n</div>\n<div id=\"what-is-flexsolve\">\n<h2><a href=\"#id1\" rel=\"nofollow\">What is flexsolve?</a></h2>\n<p>flexsolve presents a flexible set of function solvers by defining alternative\ntolerance conditions for accepting a solution. These solvers also implement\nmethods like Wegstein and Aitken-Steffensen acceleration to reach solutions\nquicker.</p>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Installation</a></h2>\n<p>Get the latest version of flexsolve from <a href=\"https://pypi.python.org/pypi/flexsolve/\" rel=\"nofollow\">PyPI</a>. If you have an installation of Python with pip, simple install it with:</p>\n<blockquote>\n$ pip install flexsolve</blockquote>\n<p>To get the git version, run:</p>\n<blockquote>\n$ git clone git://github.com/yoelcortes/flexsolve</blockquote>\n</div>\n<div id=\"documentation\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Documentation</a></h2>\n<p>Flexsolve solvers can solve a variety of specifications:</p>\n<ul>\n<li>Solve x where f(x) = x:<ul>\n<li><strong>fixed_point</strong>: Simple fixed point iteration.</li>\n<li><strong>wegstein</strong>: Wegstein\u2019s accelerated iteration method.</li>\n<li><strong>aitken</strong>: Aitken-Steffensen accelerated iteration method.</li>\n</ul>\n</li>\n<li>Solve x where f(x) = 0 and x0 &lt; x &lt; x1:<ul>\n<li><strong>bisection</strong>: Simple bisection method</li>\n<li><strong>false_position</strong>: Simple false position method.</li>\n<li><strong>IQ_interpolation</strong>: Quadratic interpolation solver (similar to <a href=\"https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.optimize.brentq.html\" rel=\"nofollow\">scipy.optimize.brentq</a>)</li>\n<li><strong>bounded_wegstein</strong>: False position method with Wegstein acceleration.</li>\n<li><strong>bounded_aitken</strong>: False position method with Aitken-Steffensen acceleration.</li>\n</ul>\n</li>\n<li>Solve x where f(x) = 0:<ul>\n<li><strong>secant</strong>: Simple secant method.</li>\n<li><strong>wegstein_secant</strong>: Secant method with Wegstein acceleration.</li>\n<li><strong>aitken_secant</strong>: Secant method with Aitken acceleration.</li>\n</ul>\n</li>\n</ul>\n<p>Parameters for each solver are pretty consitent and straight forward:</p>\n<ul>\n<li><strong>f</strong>: objective function in the form of <cite>f(x, *args)</cite>.</li>\n<li><strong>x</strong>: Root guess. Solver begins the iteration by evaluating <cite>f(x)</cite>.</li>\n<li><strong>x0, x1</strong>: Root bracket. Solution must lie within <cite>x0</cite> and <cite>x1</cite>.</li>\n<li><strong>xtol=1e-8</strong>: Solver stops when the root lies within <cite>xtol</cite>.</li>\n<li><strong>ytol=5e-8</strong>: Solver stops when the f(x) lies within <cite>ytol</cite> of the root.</li>\n<li><strong>yval=0</strong>: Root offset. Solver will find x where f(x) = <cite>yval</cite>.</li>\n<li><strong>args=()</strong>: Arguments to pass to <cite>f</cite>.</li>\n</ul>\n<p>Here are some exmples using flexsolve\u2019s Profiler object to test and compare\ndifferent solvers. In the graphs, the points are the solver iterations and\nthe lines represent f(x). The lines and points are offset to make them more visible\n(so all the points are actually on the same curve!). The shaded area is just to\nhelp us relate the points to the curve (not an actual interval):</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">flexsolve</span> <span class=\"k\">as</span> <span class=\"nn\">flx</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">scipy</span> <span class=\"kn\">import</span> <span class=\"n\">optimize</span> <span class=\"k\">as</span> <span class=\"n\">opt</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">x1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">3</span> <span class=\"o\">-</span> <span class=\"mi\">40</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">x</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">Profiler</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span> <span class=\"c1\"># When called, it returns f(x) and saves the results.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">opt</span><span class=\"o\">.</span><span class=\"n\">brentq</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">xtol</span><span class=\"o\">=</span><span class=\"mf\">1e-8</span><span class=\"p\">)</span>\n<span class=\"mf\">3.225240462778411</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span><span class=\"s1\">'[Scipy] Brent-Q'</span><span class=\"p\">)</span> <span class=\"c1\"># Save/archive results with given name</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">opt</span><span class=\"o\">.</span><span class=\"n\">brenth</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">x1</span><span class=\"p\">)</span>\n<span class=\"mf\">3.2252404627917794</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span><span class=\"s1\">'[Scipy] Brent-H'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">IQ_interpolation</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">x1</span><span class=\"p\">)</span>\n<span class=\"mf\">3.225240462796626</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span><span class=\"s1\">'IQ-interpolation'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">bounded_wegstein</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">x1</span><span class=\"p\">)</span>\n<span class=\"mf\">3.225240462790051</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span><span class=\"s1\">'Wegstein'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x_aitken</span> <span class=\"o\">=</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">bounded_aitken</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">x1</span><span class=\"p\">)</span>\n<span class=\"mf\">3.2252404627883218</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span><span class=\"s1\">'Aitken'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">false_position</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">x1</span><span class=\"p\">)</span>\n<span class=\"mf\">3.225240462687035</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span><span class=\"s1\">'False position'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'$f(x) = 0 = x^3 + 2 \\cdot x - 40$ where $-5 &lt; x &lt; 5$'</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"https://raw.githubusercontent.com/yoelcortes/flexsolve/master/docs/images/bounded_solvers_example.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/023948742e38a89b6c96c2fd7fb5bf68ade66187/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f796f656c636f727465732f666c6578736f6c76652f6d61737465722f646f63732f696d616765732f626f756e6465645f736f6c766572735f6578616d706c652e706e67\">\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">Profiler</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x_guess</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">5</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">wegstein_secant</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">x_guess</span><span class=\"p\">)</span>\n<span class=\"mf\">3.22524046279178</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span><span class=\"s1\">'Wegstein'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">aitken_secant</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">x_guess</span><span class=\"p\">)</span>\n<span class=\"mf\">3.22524046279178</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span><span class=\"s1\">'Aitken'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">secant</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">x_guess</span><span class=\"p\">)</span>\n<span class=\"mf\">3.2252404627918057</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span><span class=\"s1\">'Secant'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">opt</span><span class=\"o\">.</span><span class=\"n\">newton</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">x_guess</span><span class=\"p\">)</span>\n<span class=\"mf\">3.2252404627918065</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span><span class=\"s1\">'[Scipy] Newton'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'$f(x) = 0 = x^3 + 2 \\cdot x - 40$'</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"https://raw.githubusercontent.com/yoelcortes/flexsolve/master/docs/images/general_solvers_example.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d38faf4abf9f7103c53987f78caca872ca133f82/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f796f656c636f727465732f666c6578736f6c76652f6d61737465722f646f63732f696d616765732f67656e6572616c5f736f6c766572735f6578616d706c652e706e67\">\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Note that x = 40/x^2 - 2/x is the same</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># objective function as x**3 - 40 + 2*x = 0</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"mi\">40</span><span class=\"o\">/</span><span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"o\">/</span><span class=\"n\">x</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">Profiler</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x_guess</span> <span class=\"o\">=</span> <span class=\"mf\">5.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">wegstein</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">x_guess</span><span class=\"p\">)</span>\n<span class=\"mf\">3.2252404626726996</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span><span class=\"s1\">'Wegstein'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">aitken</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">x_guess</span><span class=\"p\">)</span>\n<span class=\"mf\">3.2252404627250075</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span><span class=\"s1\">'Aitken'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'$f(x) = x = \\frac</span><span class=\"si\">{40}</span><span class=\"s1\">{x^2} - \\frac</span><span class=\"si\">{2}{x}</span><span class=\"s1\">$'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>        <span class=\"n\">markbounds</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Fixed-point iteration is non-convergent for this equation,</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># so we do not include it here</span>\n</pre>\n<img alt=\"https://raw.githubusercontent.com/yoelcortes/flexsolve/master/docs/images/fixed_point_solvers_example.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a079727b905925d84337be048b0ecb70fc4e0bdc/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f796f656c636f727465732f666c6578736f6c76652f6d61737465722f646f63732f696d616765732f66697865645f706f696e745f736f6c766572735f6578616d706c652e706e67\">\n<p>If your project is need for speed, you can speed up calculations in flexsolve\nusing the <strong>speed_up()</strong> method, which works by <a href=\"https://numba.pydata.org/numba-doc/dev/index.html\" rel=\"nofollow\">jit</a>\ncompiling computationally-heavy algorithms in flexsolve. The following example benchmarks flexsolve\u2019s speed\nwith and without compiling:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">flexsolve</span> <span class=\"k\">as</span> <span class=\"nn\">flx</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">3</span> <span class=\"o\">-</span> <span class=\"mi\">40</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">x</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Time solver without compiling</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">%</span><span class=\"n\">timeit</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">IQ_interpolation</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"mf\">38.3</span> <span class=\"n\">\u00c2\u00b5s</span> <span class=\"n\">\u00c2</span><span class=\"err\">\u00b1</span> <span class=\"mf\">4.7</span> <span class=\"n\">\u00c2\u00b5s</span> <span class=\"n\">per</span> <span class=\"n\">loop</span> <span class=\"p\">(</span><span class=\"n\">mean</span> <span class=\"n\">\u00c2</span><span class=\"err\">\u00b1</span> <span class=\"n\">std</span><span class=\"o\">.</span> <span class=\"n\">dev</span><span class=\"o\">.</span> <span class=\"n\">of</span> <span class=\"mi\">7</span> <span class=\"n\">runs</span><span class=\"p\">,</span> <span class=\"mi\">10000</span> <span class=\"n\">loops</span> <span class=\"n\">each</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">speed_up</span><span class=\"p\">()</span> <span class=\"c1\"># This is the only line we need to run to speed up flexsolve</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># First run is slower because it need to compile</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">IQ_interpolation</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Time solver after compiling</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">%</span><span class=\"n\">timeit</span> <span class=\"n\">flx</span><span class=\"o\">.</span><span class=\"n\">IQ_interpolation</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"mf\">11.3</span> <span class=\"n\">\u00c2\u00b5s</span> <span class=\"n\">\u00c2</span><span class=\"err\">\u00b1</span> <span class=\"mi\">156</span> <span class=\"n\">ns</span> <span class=\"n\">per</span> <span class=\"n\">loop</span> <span class=\"p\">(</span><span class=\"n\">mean</span> <span class=\"n\">\u00c2</span><span class=\"err\">\u00b1</span> <span class=\"n\">std</span><span class=\"o\">.</span> <span class=\"n\">dev</span><span class=\"o\">.</span> <span class=\"n\">of</span> <span class=\"mi\">7</span> <span class=\"n\">runs</span><span class=\"p\">,</span> <span class=\"mi\">100000</span> <span class=\"n\">loops</span> <span class=\"n\">each</span><span class=\"p\">)</span>\n</pre>\n<p>The iterative methods for solving f(x) = x (e.g. fixed-point, Wegstain, Aitken) are\ncapable of solving multi-dimensional problems. Simply make sure x is an array\nand f(x) returns an array with the same dimensions. In fact, the\n<a href=\"https://biosteam.readthedocs.io/en/latest/\" rel=\"nofollow\">The Biorefinery Simulation and Techno-Economic Analysis Modules (BioSTEAM)</a>\nuses flexsolve to solve many chemical engineering problems, including\nprocess recycle stream flow rates and vapor-liquid equilibrium compositions.</p>\n</div>\n<div id=\"bug-reports\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Bug reports</a></h2>\n<p>To report bugs, please use the eqsolvers\u2019s Bug Tracker at:</p>\n<blockquote>\n<a href=\"https://github.com/yoelcortes/flexsolve\" rel=\"nofollow\">https://github.com/yoelcortes/flexsolve</a></blockquote>\n</div>\n<div id=\"license-information\">\n<h2><a href=\"#id5\" rel=\"nofollow\">License information</a></h2>\n<p>See <tt>LICENSE.txt</tt> for information on the terms &amp; conditions for usage\nof this software, and a DISCLAIMER OF ALL WARRANTIES.</p>\n<p>Although not required by the eqsolvers license, if it is convenient for you,\nplease cite eqsolvers if used in your work. Please also consider contributing\nany changes you make back, and benefit the community.</p>\n</div>\n<div id=\"citation\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Citation</a></h2>\n<p>To cite eqsolvers in publications use:</p>\n<blockquote>\nYoel Cortes-Pena (2019). flexsolve: Flexible function solvers.\n<a href=\"https://github.com/yoelcortes/flexsolve\" rel=\"nofollow\">https://github.com/yoelcortes/flexsolve</a></blockquote>\n</div>\n\n          </div>"}, "last_serial": 7160354, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "45e9fcb1388052eecb077c713fe9e795", "sha256": "51a963a3a39de49597c79bccfe080df2d1f673cff3ef35abf0c00f62c5049f43"}, "downloads": -1, "filename": "flexsolve-0.1.tar.gz", "has_sig": false, "md5_digest": "45e9fcb1388052eecb077c713fe9e795", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4123, "upload_time": "2019-11-20T05:55:18", "upload_time_iso_8601": "2019-11-20T05:55:18.666732Z", "url": "https://files.pythonhosted.org/packages/09/64/2152f7ec8ac7bee09093bc0031715c6e629003a9f2c6d09c9ecf16ae9620/flexsolve-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6f7382be831427ae82df1409eb099b94", "sha256": "cd6f22a67cf104904492b9f8899b010b1bef042ab2c29dbde270a385f2e6380e"}, "downloads": -1, "filename": "flexsolve-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6f7382be831427ae82df1409eb099b94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4061, "upload_time": "2019-11-20T05:59:00", "upload_time_iso_8601": "2019-11-20T05:59:00.368194Z", "url": "https://files.pythonhosted.org/packages/21/ac/c9e321e60271cd96e06f19d4e8caf5ff02fdbe14c9fa48f186a412fe6c2a/flexsolve-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b0ac2c5a4d293224ee7eff49f17b1c56", "sha256": "a433f9678eb8e0284210cea6854a4d2180b5ca25c8763ae456ebdfa6e79102c6"}, "downloads": -1, "filename": "flexsolve-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b0ac2c5a4d293224ee7eff49f17b1c56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4537, "upload_time": "2020-02-06T15:50:12", "upload_time_iso_8601": "2020-02-06T15:50:12.947126Z", "url": "https://files.pythonhosted.org/packages/9b/54/8d7451d5f2ab32c78c7b82a6c0c86e733d23d447197a2a67f14050ba45a9/flexsolve-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4a18a45594f194a13f01e05559a13884", "sha256": "920de44bba8501af6b2e70370cd82b8838e833754120ec7911c1372136f562ba"}, "downloads": -1, "filename": "flexsolve-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4a18a45594f194a13f01e05559a13884", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4827, "upload_time": "2020-03-22T08:15:09", "upload_time_iso_8601": "2020-03-22T08:15:09.549969Z", "url": "https://files.pythonhosted.org/packages/c9/98/db71c6365f3f6e753665c528431b1f851bb6dfd61388136233fecd104e05/flexsolve-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "bd455490882560564f684519b0544dd9", "sha256": "b3409a1b8fe85ea06ff9cfaed3a8daff016080f8350203f74af3a3e8ac061377"}, "downloads": -1, "filename": "flexsolve-0.2.1.tar.gz", "has_sig": false, "md5_digest": "bd455490882560564f684519b0544dd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4722, "upload_time": "2020-03-24T08:44:45", "upload_time_iso_8601": "2020-03-24T08:44:45.101194Z", "url": "https://files.pythonhosted.org/packages/ff/c1/d69ebd04462cdec84e5dfb455a084e342d03198cc08a85c3202a8af32037/flexsolve-0.2.1.tar.gz", "yanked": false}], "0.2.10": [{"comment_text": "", "digests": {"md5": "234ac93f7ebd31d4c70159a21f7163ff", "sha256": "a47fd64dc246adf6f6bcbedbe36833f6dba0ae0fe61978dbb3a9767afcd434e6"}, "downloads": -1, "filename": "flexsolve-0.2.10.tar.gz", "has_sig": false, "md5_digest": "234ac93f7ebd31d4c70159a21f7163ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12010, "upload_time": "2020-04-24T15:15:39", "upload_time_iso_8601": "2020-04-24T15:15:39.531474Z", "url": "https://files.pythonhosted.org/packages/7b/2c/d654bd7416c29b7dc353079e65b20902e5bcaf4e45e576be5174c553bd9f/flexsolve-0.2.10.tar.gz", "yanked": false}], "0.2.11": [{"comment_text": "", "digests": {"md5": "1c8c51fc1d9607fc20ab1249d7d64173", "sha256": "555621973c66b10018008d497bc7f750ddded459256679c715897233662da96b"}, "downloads": -1, "filename": "flexsolve-0.2.11.tar.gz", "has_sig": false, "md5_digest": "1c8c51fc1d9607fc20ab1249d7d64173", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12042, "upload_time": "2020-04-26T02:39:12", "upload_time_iso_8601": "2020-04-26T02:39:12.943425Z", "url": "https://files.pythonhosted.org/packages/bb/7e/ea404fe573d439f581f20cc4ea5b58e249289117e023f0baa15617e6e24b/flexsolve-0.2.11.tar.gz", "yanked": false}], "0.2.12": [{"comment_text": "", "digests": {"md5": "1b13440a5ef0617029557a65f892f895", "sha256": "2037ffff82cbe02fec13a68f2df29c97d812dac42e56dd852702aecb1d618a0d"}, "downloads": -1, "filename": "flexsolve-0.2.12.tar.gz", "has_sig": false, "md5_digest": "1b13440a5ef0617029557a65f892f895", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12238, "upload_time": "2020-04-27T03:03:34", "upload_time_iso_8601": "2020-04-27T03:03:34.472286Z", "url": "https://files.pythonhosted.org/packages/cb/16/29318f65fe474ebeb3dab087788cd438596c2e43b22941b0b24f5077c3d2/flexsolve-0.2.12.tar.gz", "yanked": false}], "0.2.13": [{"comment_text": "", "digests": {"md5": "613cecd89e2f9ce4d697bc27aa9b132e", "sha256": "9e1dde79022e1cfe410f869fd3b00866a7954acbc5d4f1ea75eca0cd6347e94a"}, "downloads": -1, "filename": "flexsolve-0.2.13.tar.gz", "has_sig": false, "md5_digest": "613cecd89e2f9ce4d697bc27aa9b132e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12632, "upload_time": "2020-04-29T05:50:20", "upload_time_iso_8601": "2020-04-29T05:50:20.094009Z", "url": "https://files.pythonhosted.org/packages/94/a0/bcb9c9ba91a6a2b760398ae479a403c53665048b42b0064bb3ba1a686742/flexsolve-0.2.13.tar.gz", "yanked": false}], "0.2.14": [{"comment_text": "", "digests": {"md5": "30336eb83f778ba157ba4fff04e6ca64", "sha256": "0df6c48b1c774aba885dc195b734ad0aeaed5c9dbbe2db9462bec4bda8b635ed"}, "downloads": -1, "filename": "flexsolve-0.2.14.tar.gz", "has_sig": false, "md5_digest": "30336eb83f778ba157ba4fff04e6ca64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12643, "upload_time": "2020-04-29T17:09:48", "upload_time_iso_8601": "2020-04-29T17:09:48.129031Z", "url": "https://files.pythonhosted.org/packages/e5/e4/f6ce1354dd5969f44bc8ff7bfbd5aa7a49d1b832e1a60e716fda8847d864/flexsolve-0.2.14.tar.gz", "yanked": false}], "0.2.16": [{"comment_text": "", "digests": {"md5": "6ddf7e54f0b41931729ddafb990a19f8", "sha256": "869329e7bfd08047301123112b0944a964430eb42c51bfca4dc67a6ea64dfdf4"}, "downloads": -1, "filename": "flexsolve-0.2.16.tar.gz", "has_sig": false, "md5_digest": "6ddf7e54f0b41931729ddafb990a19f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12615, "upload_time": "2020-04-30T05:32:25", "upload_time_iso_8601": "2020-04-30T05:32:25.883645Z", "url": "https://files.pythonhosted.org/packages/31/1b/80d54778df436158788b7de78869a64f840c81303925833f0ef6f30ed7f0/flexsolve-0.2.16.tar.gz", "yanked": false}], "0.2.19": [{"comment_text": "", "digests": {"md5": "100ffe4e592388bf4e453056178ea4b3", "sha256": "e3107f61e4d430a181755aff1d84c8d5be7e6e68614f9986281be1907dedc234"}, "downloads": -1, "filename": "flexsolve-0.2.19.tar.gz", "has_sig": false, "md5_digest": "100ffe4e592388bf4e453056178ea4b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12677, "upload_time": "2020-04-30T05:58:12", "upload_time_iso_8601": "2020-04-30T05:58:12.885801Z", "url": "https://files.pythonhosted.org/packages/64/9f/49add2bcc5dc36453d74a78d5b723e2848a31d31497687281d90c5bc0174/flexsolve-0.2.19.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "be0f629df435c6d269290d3222d6e7f7", "sha256": "20534e0f63bb73977e86990cf200c4ec6dab0a88055a19d9c1fef43d86cbb6a1"}, "downloads": -1, "filename": "flexsolve-0.2.2.tar.gz", "has_sig": false, "md5_digest": "be0f629df435c6d269290d3222d6e7f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4937, "upload_time": "2020-03-25T22:45:37", "upload_time_iso_8601": "2020-03-25T22:45:37.442816Z", "url": "https://files.pythonhosted.org/packages/30/dd/ce128957e704b20d97b1a1ff460e6ee945d095557100b756eead4d519b3d/flexsolve-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "5649b8d608b8324d9f0afe880597e9b8", "sha256": "962c7cd02904c1bbabdbb57a4983c3a19474d528f785f9b31c895f0668902cdf"}, "downloads": -1, "filename": "flexsolve-0.2.3.tar.gz", "has_sig": false, "md5_digest": "5649b8d608b8324d9f0afe880597e9b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4939, "upload_time": "2020-03-27T04:24:54", "upload_time_iso_8601": "2020-03-27T04:24:54.465638Z", "url": "https://files.pythonhosted.org/packages/7b/69/c0554c59370b7f26f51ff7c5e470661e6a824dce87193b13ca603847be1e/flexsolve-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "a4600e4e483bc36aab3fd85ea2ae881b", "sha256": "e6bb50bfda7935529272b9e9e2a0971fa291c66f0c6edc501c413e44da79e6d6"}, "downloads": -1, "filename": "flexsolve-0.2.4.tar.gz", "has_sig": false, "md5_digest": "a4600e4e483bc36aab3fd85ea2ae881b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4937, "upload_time": "2020-04-16T05:36:45", "upload_time_iso_8601": "2020-04-16T05:36:45.258600Z", "url": "https://files.pythonhosted.org/packages/07/2f/4aa1442859cc08664cbeb24fc772be1a4d36cc2628fd72dd2178be655d49/flexsolve-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "d9e144f4602cb5df1efd68f8c1d2bf65", "sha256": "cd548d215bc45b2a60d006536415b6ecf930334d7a999a375951ea9f6a33eace"}, "downloads": -1, "filename": "flexsolve-0.2.5.tar.gz", "has_sig": false, "md5_digest": "d9e144f4602cb5df1efd68f8c1d2bf65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4974, "upload_time": "2020-04-16T20:57:33", "upload_time_iso_8601": "2020-04-16T20:57:33.514763Z", "url": "https://files.pythonhosted.org/packages/3a/83/ef698541d5f99d85d508022b96ceefda87a940a284d5f773b7addbff4732/flexsolve-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "7315105f50921d34dad4f4ab9b7631c5", "sha256": "64431eadcee22cb4e4b1321e1adb5d94732d8250c6e6ec9200032452247bef6e"}, "downloads": -1, "filename": "flexsolve-0.2.6.tar.gz", "has_sig": false, "md5_digest": "7315105f50921d34dad4f4ab9b7631c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5572, "upload_time": "2020-04-20T02:33:06", "upload_time_iso_8601": "2020-04-20T02:33:06.653616Z", "url": "https://files.pythonhosted.org/packages/aa/ca/398e7ce4741ff32d239341114d53948ceeb5b8e6625c3a50f0de69a1a918/flexsolve-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "d6d1fc70ec6f8c4f7ddd5a9c02b85860", "sha256": "340350139ff1367ced0cd7d64d03652d8bb529f638b7ab0a51d1437dc2245565"}, "downloads": -1, "filename": "flexsolve-0.2.7.tar.gz", "has_sig": false, "md5_digest": "d6d1fc70ec6f8c4f7ddd5a9c02b85860", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6045, "upload_time": "2020-04-20T20:16:24", "upload_time_iso_8601": "2020-04-20T20:16:24.995451Z", "url": "https://files.pythonhosted.org/packages/16/04/e9cba5f8b4bf842725726b0ede989d9f634751301b1267d7b87fe8b7d813/flexsolve-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "3966c1626bf6a4d85e1d35723b8840e4", "sha256": "1d2a2a10f3b0b18e4a2d50c6c9d5394e2795bb1f70dac6f5d661bdbdec0ba10d"}, "downloads": -1, "filename": "flexsolve-0.2.8.tar.gz", "has_sig": false, "md5_digest": "3966c1626bf6a4d85e1d35723b8840e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10345, "upload_time": "2020-04-21T00:49:01", "upload_time_iso_8601": "2020-04-21T00:49:01.270532Z", "url": "https://files.pythonhosted.org/packages/6c/a5/9dd81218273378f35d91975b56d536d341592ce068a8b9a979b51744f7a9/flexsolve-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "291446bf4a5d4a8c38bddb372e0fa4f5", "sha256": "70acd491373bfc6c1cfd2923d105eab76d784deca95724ff45743a35988afbe3"}, "downloads": -1, "filename": "flexsolve-0.2.9.tar.gz", "has_sig": false, "md5_digest": "291446bf4a5d4a8c38bddb372e0fa4f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11418, "upload_time": "2020-04-21T15:08:47", "upload_time_iso_8601": "2020-04-21T15:08:47.894587Z", "url": "https://files.pythonhosted.org/packages/8c/d6/c00d33c4908de0794fd771a15b659c99527329b53219dc96a7925b2a15e2/flexsolve-0.2.9.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "eb21592faaaf503bee32e86f0611a541", "sha256": "b3a207aa0fcbfb57d298d77dad1cff9fa746123868965f526baf8b0179f57b42"}, "downloads": -1, "filename": "flexsolve-0.3.0.tar.gz", "has_sig": false, "md5_digest": "eb21592faaaf503bee32e86f0611a541", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12838, "upload_time": "2020-04-30T20:50:08", "upload_time_iso_8601": "2020-04-30T20:50:08.676348Z", "url": "https://files.pythonhosted.org/packages/86/5a/2affaaae5579d4ed3ad72711086049e287800704749ecc2e766d632711af/flexsolve-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "ddd497c83ff1625cae3ffbdcba50ae53", "sha256": "fa8eab2d188cb24ca183c5145ea6ae2a388dea8966983139a34653a8b5b6cfc3"}, "downloads": -1, "filename": "flexsolve-0.3.1.tar.gz", "has_sig": false, "md5_digest": "ddd497c83ff1625cae3ffbdcba50ae53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13109, "upload_time": "2020-05-01T08:07:35", "upload_time_iso_8601": "2020-05-01T08:07:35.908863Z", "url": "https://files.pythonhosted.org/packages/e4/78/b9679b0eab1ef08bb2b13fbf50a9061ba39c6e37784854124154f9378444/flexsolve-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "c388c2092e9283919d81c729eac5dd41", "sha256": "a73d3905fae084304217e4a569d7e8e1ac77aee6a9acf2f2b4a2e0f82674a36e"}, "downloads": -1, "filename": "flexsolve-0.3.2.tar.gz", "has_sig": false, "md5_digest": "c388c2092e9283919d81c729eac5dd41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13117, "upload_time": "2020-05-01T08:11:02", "upload_time_iso_8601": "2020-05-01T08:11:02.571423Z", "url": "https://files.pythonhosted.org/packages/f4/48/dd74c4faa6336a32260b047ef0375cff9296ae17381d4c8ad166fb8eef8c/flexsolve-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "1fbdeadaaf913096c017da0d0610a92b", "sha256": "9d85113735e86fd59ebcfe35c4887f69287830ed20ddcb81cdd1f52b2c1a858d"}, "downloads": -1, "filename": "flexsolve-0.3.3.tar.gz", "has_sig": false, "md5_digest": "1fbdeadaaf913096c017da0d0610a92b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13120, "upload_time": "2020-05-03T23:26:55", "upload_time_iso_8601": "2020-05-03T23:26:55.647557Z", "url": "https://files.pythonhosted.org/packages/ed/a4/9aa7ca3f26c53fa676ea89f1d2e6a92649d39a9a0c85de24e5bb42b068f5/flexsolve-0.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1fbdeadaaf913096c017da0d0610a92b", "sha256": "9d85113735e86fd59ebcfe35c4887f69287830ed20ddcb81cdd1f52b2c1a858d"}, "downloads": -1, "filename": "flexsolve-0.3.3.tar.gz", "has_sig": false, "md5_digest": "1fbdeadaaf913096c017da0d0610a92b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13120, "upload_time": "2020-05-03T23:26:55", "upload_time_iso_8601": "2020-05-03T23:26:55.647557Z", "url": "https://files.pythonhosted.org/packages/ed/a4/9aa7ca3f26c53fa676ea89f1d2e6a92649d39a9a0c85de24e5bb42b068f5/flexsolve-0.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:01:54 2020"}