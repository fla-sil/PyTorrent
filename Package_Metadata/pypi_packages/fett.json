{"info": {"author": "Andrew Aldridge", "author_email": "i80and@foxquill.com", "bugtrack_url": null, "classifiers": [], "description": ".. |travis| image:: https://travis-ci.org/i80and/fett.svg?branch=master\n            :target: https://travis-ci.org/i80and/fett\n\n=============\nFett |travis|\n=============\n\nOverview\n--------\n\nExample\n-------\n\n.. code-block:: python\n\n   import fett\n\n   fett.Template('''{{ for customer in customers }}\n   {{ if i even }}\n   Even: {{ customer.name }}\n   {{ else }}\n   Odd: {{ customer.name }}\n   {{ end }}\n   {{ else }}\n   No customers :(\n   {{ end }}''').render({'customers': [\n       {'name': 'Bob'},\n       {'name': 'Elvis'},\n       {'name': 'Judy'}\n   ]})\n\nSyntax\n------\n\n==========================================   ===========\nTag Format                                   Description\n==========================================   ===========\n``{{ <expression> }}``                       Substitutions_\n``{{ `foo` <expression> }}``                 Substitutions_\n``{{ format <name> }}``                      Metaformatting_\n``{{ if <expression> }}``                    Conditionals_\n``{{ for <name> in <expression> }}``         Loops_\n``{{ else }}``\n``{{ end }}``                                Block termination\n``{{ # <comment> }}``                        Comments_\n==========================================   ===========\n\nSpaces between tag opening/closing delimiters are optional.\n\nExpressions\n~~~~~~~~~~~\n\nAn **expression** is given for Substitutions_, Conditionals_, and Loops_.\n\nExpressions take the following form:\n\n    <name>[.<subfield>...] [<filter> [<filter2>...]]\n\nInstead of specifying a field path, you can start an expression using\na string literal:\n\n    `<literal>` [<filter> [<filter2>...]]\n\nYou can use **filters** to modify a single value in simple ways. For example,\nthe loop iteration counter ``i`` counts from ``0``, but users often wish to\ncount from ``1``. You can obtain a count-from-1 value with the expression\n``i inc``.\n\nThe full list of filters:\n\n===========  ======\nFilter Name  Effect\n===========  ======\ncar          Returns the first element of a list.\ncdr          Returns all but the first element of a list.\ndec          Decrements a value representable as an integer by one.\neven         Returns true iff its input is representable as an even integer.\nescape       Encodes `&`, `<`, `>`, `\"`, and `'` characters with HTML entities.\ninc          Increments a value representable as an integer by one.\nlen          Returns the length of a list.\nnot          Returns the inverse of a boolean.\nodd          Returns true iff its input is representable as an odd integer.\nnegative     Returns true iff its input is representable as an integer < 0.\npositive     Returns true iff its input is representable as an integer > 0.\nsplit        Splits a value into a list by whitespace.\nstrip        Returns the input string with surrounding whitespace removed.\nstriptags    Remove HTML tags from a value.\ntimesNegOne  Returns int(input) * -1\nzero         Returns true iff the input is zero\n===========  ======\n\n===========  ======\nFilter Name  Effect\n===========  ======\nupperCase    Returns a Unicode-aware uppercase version of the input.\nlowerCase    Returns a Unicode-aware lowercase version of the input.\n===========  ======\n\n=====================  ======\nFilter Name            Effect\n=====================  ======\nadd(n)                 Increments a value representable as an integer by `n`.\nminus(n)               Decrements a value representable as an integer by `n`.\nequal(value)           Returns true iff a value equals the given value.\nlessThan(n)            Returns true iff n < the given value.\nlessThanOrEqual(n)     Returns true iff n <= the given value.\ngreaterThan(n)         Returns true iff n > the given value.\ngreaterThanOrEqual(n)  Returns true iff n >= the given value.\n=====================  ======\n\nSubstitutions\n~~~~~~~~~~~~~\n\nMetaformatting\n~~~~~~~~~~~~~~\n\nConditionals\n~~~~~~~~~~~~\n\nLoops\n~~~~~\n\nComments\n~~~~~~~~", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/i80and/fett", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "fett", "package_url": "https://pypi.org/project/fett/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fett/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/i80and/fett"}, "release_url": "https://pypi.org/project/fett/0.3.2/", "requires_dist": null, "requires_python": null, "summary": "A fast indentation-preserving template engine.", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fett</span>\n\n<span class=\"n\">fett</span><span class=\"o\">.</span><span class=\"n\">Template</span><span class=\"p\">(</span><span class=\"s1\">'''{{ for customer in customers }}\n{{ if i even }}\nEven: {{ customer.name }}\n{{ else }}\nOdd: {{ customer.name }}\n{{ end }}\n{{ else }}\nNo customers :(\n{{ end }}'''</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">({</span><span class=\"s1\">'customers'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Bob'</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Elvis'</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Judy'</span><span class=\"p\">}</span>\n<span class=\"p\">]})</span>\n</pre>\n</div>\n<div id=\"syntax\">\n<h2>Syntax</h2>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Tag Format</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>{{ &lt;expression&gt; }}</tt></td>\n<td><a href=\"#substitutions\" rel=\"nofollow\">Substitutions</a></td>\n</tr>\n<tr><td><tt>{{ `foo` &lt;expression&gt; }}</tt></td>\n<td><a href=\"#substitutions\" rel=\"nofollow\">Substitutions</a></td>\n</tr>\n<tr><td><tt>{{ format &lt;name&gt; }}</tt></td>\n<td><a href=\"#metaformatting\" rel=\"nofollow\">Metaformatting</a></td>\n</tr>\n<tr><td><tt>{{ if &lt;expression&gt; }}</tt></td>\n<td><a href=\"#conditionals\" rel=\"nofollow\">Conditionals</a></td>\n</tr>\n<tr><td><tt>{{ for &lt;name&gt; in &lt;expression&gt; }}</tt></td>\n<td><a href=\"#loops\" rel=\"nofollow\">Loops</a></td>\n</tr>\n<tr><td><tt>{{ else }}</tt></td>\n<td>\u00a0</td>\n</tr>\n<tr><td><tt>{{ end }}</tt></td>\n<td>Block termination</td>\n</tr>\n<tr><td><tt>{{ # &lt;comment&gt; }}</tt></td>\n<td><a href=\"#comments\" rel=\"nofollow\">Comments</a></td>\n</tr>\n</tbody>\n</table>\n<p>Spaces between tag opening/closing delimiters are optional.</p>\n<div id=\"expressions\">\n<h3>Expressions</h3>\n<p>An <strong>expression</strong> is given for <a href=\"#substitutions\" rel=\"nofollow\">Substitutions</a>, <a href=\"#conditionals\" rel=\"nofollow\">Conditionals</a>, and <a href=\"#loops\" rel=\"nofollow\">Loops</a>.</p>\n<p>Expressions take the following form:</p>\n<blockquote>\n&lt;name&gt;[.&lt;subfield&gt;\u2026] [&lt;filter&gt; [&lt;filter2&gt;\u2026]]</blockquote>\n<p>Instead of specifying a field path, you can start an expression using\na string literal:</p>\n<blockquote>\n<cite>&lt;literal&gt;</cite> [&lt;filter&gt; [&lt;filter2&gt;\u2026]]</blockquote>\n<p>You can use <strong>filters</strong> to modify a single value in simple ways. For example,\nthe loop iteration counter <tt>i</tt> counts from <tt>0</tt>, but users often wish to\ncount from <tt>1</tt>. You can obtain a count-from-1 value with the expression\n<tt>i inc</tt>.</p>\n<p>The full list of filters:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Filter Name</th>\n<th>Effect</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>car</td>\n<td>Returns the first element of a list.</td>\n</tr>\n<tr><td>cdr</td>\n<td>Returns all but the first element of a list.</td>\n</tr>\n<tr><td>dec</td>\n<td>Decrements a value representable as an integer by one.</td>\n</tr>\n<tr><td>even</td>\n<td>Returns true iff its input is representable as an even integer.</td>\n</tr>\n<tr><td>escape</td>\n<td>Encodes <cite>&amp;</cite>, <cite>&lt;</cite>, <cite>&gt;</cite>, <cite>\u201c</cite>, and <cite>\u2018</cite> characters with HTML entities.</td>\n</tr>\n<tr><td>inc</td>\n<td>Increments a value representable as an integer by one.</td>\n</tr>\n<tr><td>len</td>\n<td>Returns the length of a list.</td>\n</tr>\n<tr><td>not</td>\n<td>Returns the inverse of a boolean.</td>\n</tr>\n<tr><td>odd</td>\n<td>Returns true iff its input is representable as an odd integer.</td>\n</tr>\n<tr><td>negative</td>\n<td>Returns true iff its input is representable as an integer &lt; 0.</td>\n</tr>\n<tr><td>positive</td>\n<td>Returns true iff its input is representable as an integer &gt; 0.</td>\n</tr>\n<tr><td>split</td>\n<td>Splits a value into a list by whitespace.</td>\n</tr>\n<tr><td>strip</td>\n<td>Returns the input string with surrounding whitespace removed.</td>\n</tr>\n<tr><td>striptags</td>\n<td>Remove HTML tags from a value.</td>\n</tr>\n<tr><td>timesNegOne</td>\n<td>Returns int(input) * -1</td>\n</tr>\n<tr><td>zero</td>\n<td>Returns true iff the input is zero</td>\n</tr>\n</tbody>\n</table>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Filter Name</th>\n<th>Effect</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>upperCase</td>\n<td>Returns a Unicode-aware uppercase version of the input.</td>\n</tr>\n<tr><td>lowerCase</td>\n<td>Returns a Unicode-aware lowercase version of the input.</td>\n</tr>\n</tbody>\n</table>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Filter Name</th>\n<th>Effect</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>add(n)</td>\n<td>Increments a value representable as an integer by <cite>n</cite>.</td>\n</tr>\n<tr><td>minus(n)</td>\n<td>Decrements a value representable as an integer by <cite>n</cite>.</td>\n</tr>\n<tr><td>equal(value)</td>\n<td>Returns true iff a value equals the given value.</td>\n</tr>\n<tr><td>lessThan(n)</td>\n<td>Returns true iff n &lt; the given value.</td>\n</tr>\n<tr><td>lessThanOrEqual(n)</td>\n<td>Returns true iff n &lt;= the given value.</td>\n</tr>\n<tr><td>greaterThan(n)</td>\n<td>Returns true iff n &gt; the given value.</td>\n</tr>\n<tr><td>greaterThanOrEqual(n)</td>\n<td>Returns true iff n &gt;= the given value.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"substitutions\">\n<h3>Substitutions</h3>\n</div>\n<div id=\"metaformatting\">\n<h3>Metaformatting</h3>\n</div>\n<div id=\"conditionals\">\n<h3>Conditionals</h3>\n</div>\n<div id=\"loops\">\n<h3>Loops</h3>\n</div>\n<div id=\"comments\">\n<h3>Comments</h3>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2764260, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c39247efd065e7f4563e2391635d703b", "sha256": "5a05f2bb664135e43a96bffe63a832aa53a78b82f1785b76f7d74790840a8213"}, "downloads": -1, "filename": "fett-0.1.0.tar.gz", "has_sig": true, "md5_digest": "c39247efd065e7f4563e2391635d703b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5787, "upload_time": "2016-10-25T01:23:00", "upload_time_iso_8601": "2016-10-25T01:23:00.173600Z", "url": "https://files.pythonhosted.org/packages/23/0f/66171dd41b93326104ffc244c05182b56363e3ff519f2afc0f893350c5a5/fett-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "052066b85f060699eed9063285ba08e6", "sha256": "fdee4a669e7577c75fac5e62e125fe826ace314b2873a66b0411c925c090afe2"}, "downloads": -1, "filename": "fett-0.1.1.tar.gz", "has_sig": true, "md5_digest": "052066b85f060699eed9063285ba08e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5824, "upload_time": "2016-10-25T16:16:33", "upload_time_iso_8601": "2016-10-25T16:16:33.506824Z", "url": "https://files.pythonhosted.org/packages/48/4a/1e052be97f06b4002330f48b0fea87bce28788eb24d218b897434496a4aa/fett-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "6ba7db66a73164c08052e72454768233", "sha256": "a6fe2e02bec0c3e21a6eb2148dcabd9f2f4eb3c7936cd91a555be3910698945c"}, "downloads": -1, "filename": "fett-0.2.0.tar.gz", "has_sig": true, "md5_digest": "6ba7db66a73164c08052e72454768233", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6185, "upload_time": "2016-10-27T22:56:30", "upload_time_iso_8601": "2016-10-27T22:56:30.387080Z", "url": "https://files.pythonhosted.org/packages/b0/d9/1fd1e855c24c437deedb47f0a298c85ba7eef4e80724b4a4316dac06f66c/fett-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ef73dba008d64a1fa19c817c633eb5e0", "sha256": "36d07a2ee2f7cf5e537084bfda3320a010a5da2f4e2528972d9976264b5a0913"}, "downloads": -1, "filename": "fett-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ef73dba008d64a1fa19c817c633eb5e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6429, "upload_time": "2017-02-09T06:45:45", "upload_time_iso_8601": "2017-02-09T06:45:45.913120Z", "url": "https://files.pythonhosted.org/packages/01/23/01238fa3211c67f195026ff843b05bfb81f5137e8a1bcf2c35b4c7309ba1/fett-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "58f175bb87c7bfaf7e409107f3d9a2b8", "sha256": "62d7164c8cef12ecc045e7ea7f90f37703fd051c99cb92714754dbf3f9412421"}, "downloads": -1, "filename": "fett-0.3.0.tar.gz", "has_sig": false, "md5_digest": "58f175bb87c7bfaf7e409107f3d9a2b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7017, "upload_time": "2017-03-10T20:06:27", "upload_time_iso_8601": "2017-03-10T20:06:27.266939Z", "url": "https://files.pythonhosted.org/packages/ea/41/e0bf3291a7eedfea28f1d5b80b80c77ab643fec38e57cabf5473b8c6f090/fett-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "27aae6140c33e3a9657d610413b4615b", "sha256": "551e5d7d3fd5a4e1c6b1e6fb46efc81ba5128b3a788b2c2838240f8c162f7c81"}, "downloads": -1, "filename": "fett-0.3.1.tar.gz", "has_sig": false, "md5_digest": "27aae6140c33e3a9657d610413b4615b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7095, "upload_time": "2017-04-09T16:51:17", "upload_time_iso_8601": "2017-04-09T16:51:17.288517Z", "url": "https://files.pythonhosted.org/packages/de/01/7d7e4a08627cf5dcddfa8b2651110db7e6e7892a8a4271383c45eebc33b7/fett-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "811cad5ca9fbff4d1c9229eae3138606", "sha256": "f06a819ac7caba01f1c84c4b8132671d1d289d17becea7747448e271b05be0a1"}, "downloads": -1, "filename": "fett-0.3.2.tar.gz", "has_sig": false, "md5_digest": "811cad5ca9fbff4d1c9229eae3138606", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7181, "upload_time": "2017-04-09T17:13:27", "upload_time_iso_8601": "2017-04-09T17:13:27.021919Z", "url": "https://files.pythonhosted.org/packages/a6/fb/d4f8e22ea58cfb4a86f617982f037d3fd057491b50d8f0fe81495c2f6f64/fett-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "811cad5ca9fbff4d1c9229eae3138606", "sha256": "f06a819ac7caba01f1c84c4b8132671d1d289d17becea7747448e271b05be0a1"}, "downloads": -1, "filename": "fett-0.3.2.tar.gz", "has_sig": false, "md5_digest": "811cad5ca9fbff4d1c9229eae3138606", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7181, "upload_time": "2017-04-09T17:13:27", "upload_time_iso_8601": "2017-04-09T17:13:27.021919Z", "url": "https://files.pythonhosted.org/packages/a6/fb/d4f8e22ea58cfb4a86f617982f037d3fd057491b50d8f0fe81495c2f6f64/fett-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:50 2020"}