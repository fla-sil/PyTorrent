{"info": {"author": "Kevin Leahy", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": ".. comment\n\nWTPHM\n*****\n\nThe **W**\\ind **T**\\urbine **P**\\rognostics and **H**\\ealth **M**\\anagement library\nprocesses wind turbine events (also called alarms or status) data, as well as\noperational SCADA data (the usually 10-minute data coming off of wind turbines)\nfor easier fault detection, prognostics or reliability research.\n\nTurbine alarms often appear in high numbers during fault events, and significant\neffort can be involved in processing these alarms in order to find what actually\nhappened, what the root cause was, and when the turbine came back online.\nThis module solves this by automatically identifying stoppages and fault periods\nin the data and assigning a high-level \"stoppage category\" to each.\nIt also provides functionality to use this info to label SCADA data for training\npredictive maintenance algorithms.\n\nAlthough there are commercial packages that can perform this task, this library\naims to be an open-source alternative for use by the research community.\n\nPlease reference this repo if used in any research. Any bugs, questions or\nfeature requests can be raised on GitHub. Can also reach me on twitter\n@leahykev.\n\nInstallation\n============\n\nInstall using pip! ::\n\n  pip install wtphm\n\n\nIs my Data Compatible?\n======================\n\nThe data manipulated in this library are turbine events/status/alarms data and\n10-minute operational SCADA data.\nThey must be in the formats described below.\n\nEvent Data\n----------\n\n.. start event comment\n\nThe ``event_data`` is related to any fault or information messages generated by\nthe turbine. This is instantaneous, and records information like faults that have\noccurred, or status messages like low- or no- wind, or turbine shutting down due\nto storm winds.\n\nThe data must have the following column headers and information available:\n\n* ``turbine_num``: The turbine the data applies to\n* ``code``: There are a set list of events which can occur on the\n  turbine. Each one of these has an event code\n* ``description``: Each event code also has an associated description\n* ``time_on``: The start time of the event\n* ``stop_cat``: This is a category for events which cause the turbine to come to\n  a stop. It could be the functional location of where in the turbine the event\n  originated (e.g. pitch system), a category for grid-related events,\n  that the turbine is down for testing or maintenance, in curtailment due to\n  shadow flicker, etc.\n* In addition, there must be a specific event ``code`` which signifies return to\n  normal operation after any downtime or abnormal operating period.\n\n.. end event comment\n\nSCADA/Operational data\n----------------------\n\n.. start scada comment\n\nThe ``scada_data`` is typically recorded in 10-minute intervals and has attributes like\naverage power output, maximum, minimum and average windspeeds, etc. over the previous\n10-minute period.\n\nFor the purposes of this library, it must have the following column headers and\ndata:\n\n* ``turbine_num``: The turbine the data applies to\n* ``time``: The 10-minute period the data belongs to\n* availability counters: Some of the functions for giving the batches a stop\n  category rely on availability counters. These are sometimes stored as part of\n  scada data, and sometimes in separate availability data. They count the portion\n  of time the turbine was in some mode of operation in each 10-minute period,\n  for availability calculations. For example, maintenance time, fault time, etc.\n  In order to be used in this library, the availability counters are\n  assumed to range between 0 and\n  *n* in each period, where *n* is some arbitrary maximum (typically 600, for\n  the 600 seconds in the 10-minute period).\n\n.. end scada comment\n\nDocumentation\n=============\n\nDocumentation and user guide can be found on readthedocs\n`here <https://wtphm.readthedocs.io/en/latest/>`_. A local copy of the docs can\nbe built by running `<docs/build_docs.bat>`_ with sphinx installed.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lkev/wtphm", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "wtphm", "package_url": "https://pypi.org/project/wtphm/", "platform": "", "project_url": "https://pypi.org/project/wtphm/", "project_urls": {"Homepage": "https://github.com/lkev/wtphm"}, "release_url": "https://pypi.org/project/wtphm/0.1.3/", "requires_dist": ["pandas", "numpy", "scipy", "matplotlib", "sklearn"], "requires_python": ">=3.6", "summary": "SCADA data pre-processing library for prognostics and healthmanagement and fault detection of wind turbines", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The <strong>W</strong>ind <strong>T</strong>urbine <strong>P</strong>rognostics and <strong>H</strong>ealth <strong>M</strong>anagement library\nprocesses wind turbine events (also called alarms or status) data, as well as\noperational SCADA data (the usually 10-minute data coming off of wind turbines)\nfor easier fault detection, prognostics or reliability research.</p>\n<p>Turbine alarms often appear in high numbers during fault events, and significant\neffort can be involved in processing these alarms in order to find what actually\nhappened, what the root cause was, and when the turbine came back online.\nThis module solves this by automatically identifying stoppages and fault periods\nin the data and assigning a high-level \u201cstoppage category\u201d to each.\nIt also provides functionality to use this info to label SCADA data for training\npredictive maintenance algorithms.</p>\n<p>Although there are commercial packages that can perform this task, this library\naims to be an open-source alternative for use by the research community.</p>\n<p>Please reference this repo if used in any research. Any bugs, questions or\nfeature requests can be raised on GitHub. Can also reach me on twitter\n@leahykev.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using pip!</p>\n<pre>pip install wtphm\n</pre>\n</div>\n<div id=\"is-my-data-compatible\">\n<h2>Is my Data Compatible?</h2>\n<p>The data manipulated in this library are turbine events/status/alarms data and\n10-minute operational SCADA data.\nThey must be in the formats described below.</p>\n<div id=\"event-data\">\n<h3>Event Data</h3>\n<p>The <tt>event_data</tt> is related to any fault or information messages generated by\nthe turbine. This is instantaneous, and records information like faults that have\noccurred, or status messages like low- or no- wind, or turbine shutting down due\nto storm winds.</p>\n<p>The data must have the following column headers and information available:</p>\n<ul>\n<li><tt>turbine_num</tt>: The turbine the data applies to</li>\n<li><tt>code</tt>: There are a set list of events which can occur on the\nturbine. Each one of these has an event code</li>\n<li><tt>description</tt>: Each event code also has an associated description</li>\n<li><tt>time_on</tt>: The start time of the event</li>\n<li><tt>stop_cat</tt>: This is a category for events which cause the turbine to come to\na stop. It could be the functional location of where in the turbine the event\noriginated (e.g. pitch system), a category for grid-related events,\nthat the turbine is down for testing or maintenance, in curtailment due to\nshadow flicker, etc.</li>\n<li>In addition, there must be a specific event <tt>code</tt> which signifies return to\nnormal operation after any downtime or abnormal operating period.</li>\n</ul>\n</div>\n<div id=\"scada-operational-data\">\n<h3>SCADA/Operational data</h3>\n<p>The <tt>scada_data</tt> is typically recorded in 10-minute intervals and has attributes like\naverage power output, maximum, minimum and average windspeeds, etc. over the previous\n10-minute period.</p>\n<p>For the purposes of this library, it must have the following column headers and\ndata:</p>\n<ul>\n<li><tt>turbine_num</tt>: The turbine the data applies to</li>\n<li><tt>time</tt>: The 10-minute period the data belongs to</li>\n<li>availability counters: Some of the functions for giving the batches a stop\ncategory rely on availability counters. These are sometimes stored as part of\nscada data, and sometimes in separate availability data. They count the portion\nof time the turbine was in some mode of operation in each 10-minute period,\nfor availability calculations. For example, maintenance time, fault time, etc.\nIn order to be used in this library, the availability counters are\nassumed to range between 0 and\n<em>n</em> in each period, where <em>n</em> is some arbitrary maximum (typically 600, for\nthe 600 seconds in the 10-minute period).</li>\n</ul>\n</div>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Documentation and user guide can be found on readthedocs\n<a href=\"https://wtphm.readthedocs.io/en/latest/\" rel=\"nofollow\">here</a>. A local copy of the docs can\nbe built by running <a href=\"docs/build_docs.bat\" rel=\"nofollow\">docs/build_docs.bat</a> with sphinx installed.</p>\n</div>\n\n          </div>"}, "last_serial": 6961345, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "97320c0a672137750bde00c437937ee4", "sha256": "ec375ad306d64cffaaf5585f5cb26fc862913a55876ae4f2ac6bd01dee1e4d97"}, "downloads": -1, "filename": "wtphm-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "97320c0a672137750bde00c437937ee4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 33635, "upload_time": "2020-04-06T01:17:40", "upload_time_iso_8601": "2020-04-06T01:17:40.205069Z", "url": "https://files.pythonhosted.org/packages/4e/5a/1f78091de18c5b91ba0f089a2a98d5b0ff4b02d53e08b3e94103da2f8ab4/wtphm-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0bb948e1b085c7e61b9d81455d4926e5", "sha256": "e6183e3efb4daf2ec55cf5bea451dcff7c218b57d62a15b39785130a8e659c06"}, "downloads": -1, "filename": "wtphm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0bb948e1b085c7e61b9d81455d4926e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33296, "upload_time": "2020-04-06T01:17:42", "upload_time_iso_8601": "2020-04-06T01:17:42.451472Z", "url": "https://files.pythonhosted.org/packages/a8/59/c3520543d8a4eb525d48d5105e58144eae5594824a25a2c3645a5e5140e9/wtphm-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "cec7ad476c3f3201c4f5c2728a0d03c9", "sha256": "01c71183a16699a4a4cf6e761e7cefe6b44854ff05fc5b8c7b3f112e6089b60f"}, "downloads": -1, "filename": "wtphm-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cec7ad476c3f3201c4f5c2728a0d03c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 33645, "upload_time": "2020-04-06T02:07:47", "upload_time_iso_8601": "2020-04-06T02:07:47.444540Z", "url": "https://files.pythonhosted.org/packages/3f/19/988d64121274f492ea1d57a26bfc162c8905f28d3bcf9a3429762a723780/wtphm-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c81f7201a8e5e6f4c57d991456c6a00c", "sha256": "ef8d3d37ebc78637de2b7b5a071ced0d699a3404bfd6708879c649b186f68ec6"}, "downloads": -1, "filename": "wtphm-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c81f7201a8e5e6f4c57d991456c6a00c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33340, "upload_time": "2020-04-06T02:07:49", "upload_time_iso_8601": "2020-04-06T02:07:49.971186Z", "url": "https://files.pythonhosted.org/packages/18/61/6f77846217f1fba02cb651d2afcf90accbbc5da909ef6d669411421f233a/wtphm-0.1.1.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f2b4721a296f004288a772f1d86d8c6e", "sha256": "bd4eef077c25c5e1565ed015d420a3283d84e25ddd950dd04a7203505cea8a29"}, "downloads": -1, "filename": "wtphm-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f2b4721a296f004288a772f1d86d8c6e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 33657, "upload_time": "2020-04-06T12:42:53", "upload_time_iso_8601": "2020-04-06T12:42:53.587094Z", "url": "https://files.pythonhosted.org/packages/ae/d0/13af8c30e4d467f58ca374d60d9d01959cdd481bb697431350021bee8bea/wtphm-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58513f9fbd583f44690cc9f9f06413ac", "sha256": "037a50df8597d847fe90a25d8a744364df459ba76347707f6d6d48c2600a5462"}, "downloads": -1, "filename": "wtphm-0.1.3.tar.gz", "has_sig": false, "md5_digest": "58513f9fbd583f44690cc9f9f06413ac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33620, "upload_time": "2020-04-06T12:42:54", "upload_time_iso_8601": "2020-04-06T12:42:54.727117Z", "url": "https://files.pythonhosted.org/packages/a2/bb/060588a976541cd3ce2da612ef1a719e870615f2b422959a00c51f4d41c3/wtphm-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f2b4721a296f004288a772f1d86d8c6e", "sha256": "bd4eef077c25c5e1565ed015d420a3283d84e25ddd950dd04a7203505cea8a29"}, "downloads": -1, "filename": "wtphm-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f2b4721a296f004288a772f1d86d8c6e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 33657, "upload_time": "2020-04-06T12:42:53", "upload_time_iso_8601": "2020-04-06T12:42:53.587094Z", "url": "https://files.pythonhosted.org/packages/ae/d0/13af8c30e4d467f58ca374d60d9d01959cdd481bb697431350021bee8bea/wtphm-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58513f9fbd583f44690cc9f9f06413ac", "sha256": "037a50df8597d847fe90a25d8a744364df459ba76347707f6d6d48c2600a5462"}, "downloads": -1, "filename": "wtphm-0.1.3.tar.gz", "has_sig": false, "md5_digest": "58513f9fbd583f44690cc9f9f06413ac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33620, "upload_time": "2020-04-06T12:42:54", "upload_time_iso_8601": "2020-04-06T12:42:54.727117Z", "url": "https://files.pythonhosted.org/packages/a2/bb/060588a976541cd3ce2da612ef1a719e870615f2b422959a00c51f4d41c3/wtphm-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:26:48 2020"}