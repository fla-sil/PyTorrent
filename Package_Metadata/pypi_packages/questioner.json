{"info": {"author": "Lars Yencken", "author_email": "lars@yencken.org", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "==========\nQuestioner\n==========\n\n\n.. image:: https://img.shields.io/pypi/v/questioner.svg\n        :target: https://pypi.python.org/pypi/questioner\n\n.. image:: https://img.shields.io/travis/larsyencken/questioner.svg\n        :target: https://travis-ci.org/larsyencken/questioner\n\n.. image:: https://readthedocs.org/projects/questioner/badge/?version=latest\n        :target: https://questioner.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n\nA human-friendly Python library for asking people questions on the command-line.\n\nMotivation\n----------\n\nData often needs a human eye. I found myself writing over and over the code to help me investigate data manually on the command-line; ``questioner`` is my attempt to make this tool the right way once.\n\nIt's suitable for:\n\n- **Labelling data manually** faster than you can in excel spreadsheets or similar setups\n- **Active learning loops** where you and a machine-learnining agent collaborate, reducing the need for training data\n- **Short question-based UIs** on the command-line where you need a user's input to continue\n\nUsage\n-----\n\nPython API\n~~~~~~~~~~~\n\nYou write a simple Python api that asks you things.\n\n.. code-block:: python\n\n    import questioner\n\n    with questioner.Cli() as c:\n        is_hurt = c.yes_or_no('Are you hurt')\n\n        symptom_set = c.choose_many(\n            'What symptoms do you have?',\n            ['pain', 'nausea', 'anxiety'],\n        )\n\n        rating = c.give_an_int(\n            'How would you rate this experience (1-5)', 1, 5\n        )\n\n        choice = c.choose_one('Which do you like best',\n                              ['dogs', 'cats', 'horses'])\n\n\nOn the terminal\n~~~~~~~~~~~~~~~\n\nWhen run, the experience on the terminal looks like the following:\n\n.. code-block::\n\n    $ python -m questioner.demo\n    Are you hurt? (y/n) n\n\n    What symptoms do you have?\n      pain? (y/n) y\n      nausea? (y/n) n\n      anxiety? (y/n) n\n\n    How would you rate this experience (1-5)\n    3\n\n    Which do you like best\n      0. dogs\n      1. cats\n      2. horses\n    1\n\nThe user can by default skip a question (raising ``QuestionSkipped``) by pressing enter, or quit the entire cli by pressing ``q`` (raising ``QuitCli``).\n\n\nFeatures\n--------\n\n* Support for boolean, numeric, single-choice and multiple-choice questions\n* Uses single-keystroke input where possible\n\nLicense\n-------\n\nMIT licensed.\n\n\n=======\nHistory\n=======\n\n0.1.0 (2019-02-15)\n------------------\n\n* First release on PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/larsyencken/questioner", "keywords": "questioner", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "questioner", "package_url": "https://pypi.org/project/questioner/", "platform": "", "project_url": "https://pypi.org/project/questioner/", "project_urls": {"Homepage": "https://github.com/larsyencken/questioner"}, "release_url": "https://pypi.org/project/questioner/0.1.0/", "requires_dist": ["readchar", "blessings"], "requires_python": "", "summary": "A lightweight  Python interface for annotating things.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"questioner\">\n<h2>Questioner</h2>\n<a href=\"https://pypi.python.org/pypi/questioner\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/questioner.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6a88355c753f50392b164a02bf0483ff365a8c9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7175657374696f6e65722e737667\"></a>\n<a href=\"https://travis-ci.org/larsyencken/questioner\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/larsyencken/questioner.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/158c2d5d58cac0c2bd0506c174884887a099f247/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6c61727379656e636b656e2f7175657374696f6e65722e737667\"></a>\n<a href=\"https://questioner.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b77d698eeaa1612791571715e4d60edae5695228/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7175657374696f6e65722f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p>A human-friendly Python library for asking people questions on the command-line.</p>\n<div id=\"motivation\">\n<h3>Motivation</h3>\n<p>Data often needs a human eye. I found myself writing over and over the code to help me investigate data manually on the command-line; <tt>questioner</tt> is my attempt to make this tool the right way once.</p>\n<p>It\u2019s suitable for:</p>\n<ul>\n<li><strong>Labelling data manually</strong> faster than you can in excel spreadsheets or similar setups</li>\n<li><strong>Active learning loops</strong> where you and a machine-learnining agent collaborate, reducing the need for training data</li>\n<li><strong>Short question-based UIs</strong> on the command-line where you need a user\u2019s input to continue</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<div id=\"python-api\">\n<h4>Python API</h4>\n<p>You write a simple Python api that asks you things.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">questioner</span>\n\n<span class=\"k\">with</span> <span class=\"n\">questioner</span><span class=\"o\">.</span><span class=\"n\">Cli</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">c</span><span class=\"p\">:</span>\n    <span class=\"n\">is_hurt</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">yes_or_no</span><span class=\"p\">(</span><span class=\"s1\">'Are you hurt'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">symptom_set</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">choose_many</span><span class=\"p\">(</span>\n        <span class=\"s1\">'What symptoms do you have?'</span><span class=\"p\">,</span>\n        <span class=\"p\">[</span><span class=\"s1\">'pain'</span><span class=\"p\">,</span> <span class=\"s1\">'nausea'</span><span class=\"p\">,</span> <span class=\"s1\">'anxiety'</span><span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">rating</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">give_an_int</span><span class=\"p\">(</span>\n        <span class=\"s1\">'How would you rate this experience (1-5)'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">choice</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">choose_one</span><span class=\"p\">(</span><span class=\"s1\">'Which do you like best'</span><span class=\"p\">,</span>\n                          <span class=\"p\">[</span><span class=\"s1\">'dogs'</span><span class=\"p\">,</span> <span class=\"s1\">'cats'</span><span class=\"p\">,</span> <span class=\"s1\">'horses'</span><span class=\"p\">])</span>\n</pre>\n</div>\n<div id=\"on-the-terminal\">\n<h4>On the terminal</h4>\n<p>When run, the experience on the terminal looks like the following:</p>\n<pre>$ python -m questioner.demo\nAre you hurt? (y/n) n\n\nWhat symptoms do you have?\n  pain? (y/n) y\n  nausea? (y/n) n\n  anxiety? (y/n) n\n\nHow would you rate this experience (1-5)\n3\n\nWhich do you like best\n  0. dogs\n  1. cats\n  2. horses\n1\n</pre>\n<p>The user can by default skip a question (raising <tt>QuestionSkipped</tt>) by pressing enter, or quit the entire cli by pressing <tt>q</tt> (raising <tt>QuitCli</tt>).</p>\n</div>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Support for boolean, numeric, single-choice and multiple-choice questions</li>\n<li>Uses single-keystroke input where possible</li>\n</ul>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>MIT licensed.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2019-02-15)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4831677, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b88c7dfefb9e295060caab069d059cd7", "sha256": "3aecfc3ce751a8cd04b2273349e65d19f1502b125d9867e14723cb9021dcb0db"}, "downloads": -1, "filename": "questioner-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b88c7dfefb9e295060caab069d059cd7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6042, "upload_time": "2019-02-17T15:00:53", "upload_time_iso_8601": "2019-02-17T15:00:53.707500Z", "url": "https://files.pythonhosted.org/packages/dd/24/05a68eea43eacf57341f8a358f526d176f77d77bd960b7ead16623dcff19/questioner-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78c0374e43168cacd9efcb2ef0c455c6", "sha256": "4328bd3ab701aa94edbe8cadff8f5309e6a25fbfe7e417c1826e0807a71a0f80"}, "downloads": -1, "filename": "questioner-0.1.0.tar.gz", "has_sig": false, "md5_digest": "78c0374e43168cacd9efcb2ef0c455c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10887, "upload_time": "2019-02-17T15:00:55", "upload_time_iso_8601": "2019-02-17T15:00:55.776547Z", "url": "https://files.pythonhosted.org/packages/68/06/b1fc58c9fca1a6b3f687e9cce12ecf9ae46915ec871e473a12834c1664d6/questioner-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b88c7dfefb9e295060caab069d059cd7", "sha256": "3aecfc3ce751a8cd04b2273349e65d19f1502b125d9867e14723cb9021dcb0db"}, "downloads": -1, "filename": "questioner-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b88c7dfefb9e295060caab069d059cd7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6042, "upload_time": "2019-02-17T15:00:53", "upload_time_iso_8601": "2019-02-17T15:00:53.707500Z", "url": "https://files.pythonhosted.org/packages/dd/24/05a68eea43eacf57341f8a358f526d176f77d77bd960b7ead16623dcff19/questioner-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78c0374e43168cacd9efcb2ef0c455c6", "sha256": "4328bd3ab701aa94edbe8cadff8f5309e6a25fbfe7e417c1826e0807a71a0f80"}, "downloads": -1, "filename": "questioner-0.1.0.tar.gz", "has_sig": false, "md5_digest": "78c0374e43168cacd9efcb2ef0c455c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10887, "upload_time": "2019-02-17T15:00:55", "upload_time_iso_8601": "2019-02-17T15:00:55.776547Z", "url": "https://files.pythonhosted.org/packages/68/06/b1fc58c9fca1a6b3f687e9cce12ecf9ae46915ec871e473a12834c1664d6/questioner-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:36 2020"}