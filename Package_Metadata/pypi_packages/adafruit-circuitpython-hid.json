{"info": {"author": "Adafruit Industries", "author_email": "circuitpython@adafruit.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: System :: Hardware"], "description": "Introduction\n============\n\n.. image:: https://readthedocs.org/projects/adafruit-circuitpython-hid/badge/?version=latest\n    :target: https://circuitpython.readthedocs.io/projects/hid/en/latest/\n    :alt: Documentation Status\n\n.. image :: https://img.shields.io/discord/327254708534116352.svg\n    :target: https://discord.gg/nBQh6qu\n    :alt: Discord\n\n.. image:: https://github.com/adafruit/Adafruit_CircuitPython_HID/workflows/Build%20CI/badge.svg\n    :target: https://github.com/adafruit/Adafruit_CircuitPython_HID/actions/\n    :alt: Build Status\n\n\nThis driver simulates USB HID devices. Currently keyboard and mouse are implemented.\n\nDependencies\n=============\nThis driver depends on:\n\n* `Adafruit CircuitPython <https://github.com/adafruit/circuitpython>`_\n\nPlease ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n`the Adafruit library and driver bundle <https://github.com/adafruit/Adafruit_CircuitPython_Bundle>`_.\n\nUsage Example\n=============\n\nThe ``Keyboard`` class sends keypress reports for a USB keyboard device to the host.\n\nThe ``Keycode`` class defines USB HID keycodes to send using ``Keyboard``.\n\n.. code-block:: python\n\n    import usb_hid\n    from adafruit_hid.keyboard import Keyboard\n    from adafruit_hid.keycode import Keycode\n\n    # Set up a keyboard device.\n    kbd = Keyboard(usb_hid.devices)\n\n    # Type lowercase 'a'. Presses the 'a' key and releases it.\n    kbd.send(Keycode.A)\n\n    # Type capital 'A'.\n    kbd.send(Keycode.SHIFT, Keycode.A)\n\n    # Type control-x.\n    kbd.send(Keycode.CONTROL, Keycode.X)\n\n    # You can also control press and release actions separately.\n    kbd.press(Keycode.CONTROL, Keycode.X)\n    kbd.release_all()\n\n    # Press and hold the shifted '1' key to get '!' (exclamation mark).\n    kbd.press(Keycode.SHIFT, Keycode.ONE)\n    # Release the ONE key and send another report.\n    kbd.release(Keycode.ONE)\n    # Press shifted '2' to get '@'.\n    kbd.press(Keycode.TWO)\n    # Release all keys.\n    kbd.release_all()\n\nThe ``KeyboardLayoutUS`` sends ASCII characters using keypresses. It assumes\nthe host is set to accept keypresses from a US keyboard.\n\nIf the host is expecting a non-US keyboard, the character to key mapping provided by\n``KeyboardLayoutUS`` will not always be correct.\nDifferent keypresses will be needed in some cases. For instance, to type an ``'A'`` on\na French keyboard (AZERTY instead of QWERTY), ``Keycode.Q`` should be pressed.\n\nCurrently this package provides only ``KeyboardLayoutUS``. More ``KeyboardLayout``\nclasses could be added to handle non-US keyboards and the different input methods provided\nby various operating systems.\n\n.. code-block:: python\n\n    import usb_hid\n    from adafruit_hid.keyboard import Keyboard\n    from adafruit_hid.keyboard_layout_us import KeyboardLayoutUS\n\n    kbd = Keyboard(usb_hid.devices)\n    layout = KeyboardLayoutUS(kbd)\n\n    # Type 'abc' followed by Enter (a newline).\n    layout.write('abc\\n')\n\n    # Get the keycodes needed to type a '$'.\n    # The method will return (Keycode.SHIFT, Keycode.FOUR).\n    keycodes = layout.keycodes('$')\n\nThe ``Mouse`` class simulates a three-button mouse with a scroll wheel.\n\n.. code-block:: python\n\n    import usb_hid\n    from adafruit_hid.mouse import Mouse\n\n    m = Mouse(usb_hid.devices)\n\n    # Click the left mouse button.\n    m.click(Mouse.LEFT_BUTTON)\n\n    # Move the mouse diagonally to the upper left.\n    m.move(-100, -100, 0)\n\n    # Roll the mouse wheel away from the user one unit.\n    # Amount scrolled depends on the host.\n    m.move(0, 0, -1)\n\n    # Keyword arguments may also be used. Omitted arguments default to 0.\n    m.move(x=-100, y=-100)\n    m.move(wheel=-1)\n\n    # Move the mouse while holding down the left button. (click-drag).\n    m.press(Mouse.LEFT_BUTTON)\n    m.move(x=50, y=20)\n    m.release_all()       # or m.release(Mouse.LEFT_BUTTON)\n\nThe ``ConsumerControl`` class emulates consumer control devices such as\nremote controls, or the multimedia keys on certain keyboards.\n\n*New in CircuitPython 3.0.*\n\n.. code-block:: python\n\n    import usb_hid\n    from adafruit_hid.consumer_control import ConsumerControl\n    from adafruit_hid.consumer_control_code import ConsumerControlCode\n\n    cc = ConsumerControl(usb_hid.devices)\n\n    # Raise volume.\n    cc.send(ConsumerControlCode.VOLUME_INCREMENT)\n\n    # Pause or resume playback.\n    cc.send(ConsumerControlCode.PLAY_PAUSE)\n\nThe ``Gamepad`` class emulates a two-joystick gamepad with 16 buttons.\n\n*New in CircuitPython 3.0.*\n\n.. code-block:: python\n\n    import usb_hid\n    from adafruit_hid.gamepad import Gamepad\n\n    gp = Gamepad(usb_hid.devices)\n\n    # Click gamepad buttons.\n    gp.click_buttons(1, 7)\n\n    # Move joysticks.\n    gp.move_joysticks(x=2, y=0, z=-20)\n\nContributing\n============\n\nContributions are welcome! Please read our `Code of Conduct\n<https://github.com/adafruit/Adafruit_CircuitPython_hid/blob/master/CODE_OF_CONDUCT.md>`_\nbefore contributing to help this project stay welcoming.\n\nDocumentation\n=============\n\nFor information on building library documentation, please check out `this guide <https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1>`_.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adafruit/Adafruit_CircuitPython_HID", "keywords": "adafruit hid human interface device keyboard mouse keycode keypadhardware micropython circuitpython", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "adafruit-circuitpython-hid", "package_url": "https://pypi.org/project/adafruit-circuitpython-hid/", "platform": "", "project_url": "https://pypi.org/project/adafruit-circuitpython-hid/", "project_urls": {"Homepage": "https://github.com/adafruit/Adafruit_CircuitPython_HID"}, "release_url": "https://pypi.org/project/adafruit-circuitpython-hid/4.1.2/", "requires_dist": null, "requires_python": "", "summary": "CircuitPython helper library for simulating HID devices.", "version": "4.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<a href=\"https://circuitpython.readthedocs.io/projects/hid/en/latest/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/150774148286a24e489ebf022b8ec252262e9033/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61646166727569742d63697263756974707974686f6e2d6869642f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://discord.gg/nBQh6qu\" rel=\"nofollow\"><img alt=\"Discord\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2973e7de9caf359680953316fa3b541f702086c/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3332373235343730383533343131363335322e737667\"></a>\n<a href=\"https://github.com/adafruit/Adafruit_CircuitPython_HID/actions/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb2486cc00042a8e0a5da8793083fa8cf3fa3c72/68747470733a2f2f6769746875622e636f6d2f61646166727569742f41646166727569745f43697263756974507974686f6e5f4849442f776f726b666c6f77732f4275696c6425323043492f62616467652e737667\"></a>\n<p>This driver simulates USB HID devices. Currently keyboard and mouse are implemented.</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>This driver depends on:</p>\n<ul>\n<li><a href=\"https://github.com/adafruit/circuitpython\" rel=\"nofollow\">Adafruit CircuitPython</a></li>\n</ul>\n<p>Please ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n<a href=\"https://github.com/adafruit/Adafruit_CircuitPython_Bundle\" rel=\"nofollow\">the Adafruit library and driver bundle</a>.</p>\n</div>\n<div id=\"usage-example\">\n<h2>Usage Example</h2>\n<p>The <tt>Keyboard</tt> class sends keypress reports for a USB keyboard device to the host.</p>\n<p>The <tt>Keycode</tt> class defines USB HID keycodes to send using <tt>Keyboard</tt>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">usb_hid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_hid.keyboard</span> <span class=\"kn\">import</span> <span class=\"n\">Keyboard</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_hid.keycode</span> <span class=\"kn\">import</span> <span class=\"n\">Keycode</span>\n\n<span class=\"c1\"># Set up a keyboard device.</span>\n<span class=\"n\">kbd</span> <span class=\"o\">=</span> <span class=\"n\">Keyboard</span><span class=\"p\">(</span><span class=\"n\">usb_hid</span><span class=\"o\">.</span><span class=\"n\">devices</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Type lowercase 'a'. Presses the 'a' key and releases it.</span>\n<span class=\"n\">kbd</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">Keycode</span><span class=\"o\">.</span><span class=\"n\">A</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Type capital 'A'.</span>\n<span class=\"n\">kbd</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">Keycode</span><span class=\"o\">.</span><span class=\"n\">SHIFT</span><span class=\"p\">,</span> <span class=\"n\">Keycode</span><span class=\"o\">.</span><span class=\"n\">A</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Type control-x.</span>\n<span class=\"n\">kbd</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">Keycode</span><span class=\"o\">.</span><span class=\"n\">CONTROL</span><span class=\"p\">,</span> <span class=\"n\">Keycode</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can also control press and release actions separately.</span>\n<span class=\"n\">kbd</span><span class=\"o\">.</span><span class=\"n\">press</span><span class=\"p\">(</span><span class=\"n\">Keycode</span><span class=\"o\">.</span><span class=\"n\">CONTROL</span><span class=\"p\">,</span> <span class=\"n\">Keycode</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"p\">)</span>\n<span class=\"n\">kbd</span><span class=\"o\">.</span><span class=\"n\">release_all</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Press and hold the shifted '1' key to get '!' (exclamation mark).</span>\n<span class=\"n\">kbd</span><span class=\"o\">.</span><span class=\"n\">press</span><span class=\"p\">(</span><span class=\"n\">Keycode</span><span class=\"o\">.</span><span class=\"n\">SHIFT</span><span class=\"p\">,</span> <span class=\"n\">Keycode</span><span class=\"o\">.</span><span class=\"n\">ONE</span><span class=\"p\">)</span>\n<span class=\"c1\"># Release the ONE key and send another report.</span>\n<span class=\"n\">kbd</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">(</span><span class=\"n\">Keycode</span><span class=\"o\">.</span><span class=\"n\">ONE</span><span class=\"p\">)</span>\n<span class=\"c1\"># Press shifted '2' to get '@'.</span>\n<span class=\"n\">kbd</span><span class=\"o\">.</span><span class=\"n\">press</span><span class=\"p\">(</span><span class=\"n\">Keycode</span><span class=\"o\">.</span><span class=\"n\">TWO</span><span class=\"p\">)</span>\n<span class=\"c1\"># Release all keys.</span>\n<span class=\"n\">kbd</span><span class=\"o\">.</span><span class=\"n\">release_all</span><span class=\"p\">()</span>\n</pre>\n<p>The <tt>KeyboardLayoutUS</tt> sends ASCII characters using keypresses. It assumes\nthe host is set to accept keypresses from a US keyboard.</p>\n<p>If the host is expecting a non-US keyboard, the character to key mapping provided by\n<tt>KeyboardLayoutUS</tt> will not always be correct.\nDifferent keypresses will be needed in some cases. For instance, to type an <tt>'A'</tt> on\na French keyboard (AZERTY instead of QWERTY), <tt>Keycode.Q</tt> should be pressed.</p>\n<p>Currently this package provides only <tt>KeyboardLayoutUS</tt>. More <tt>KeyboardLayout</tt>\nclasses could be added to handle non-US keyboards and the different input methods provided\nby various operating systems.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">usb_hid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_hid.keyboard</span> <span class=\"kn\">import</span> <span class=\"n\">Keyboard</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_hid.keyboard_layout_us</span> <span class=\"kn\">import</span> <span class=\"n\">KeyboardLayoutUS</span>\n\n<span class=\"n\">kbd</span> <span class=\"o\">=</span> <span class=\"n\">Keyboard</span><span class=\"p\">(</span><span class=\"n\">usb_hid</span><span class=\"o\">.</span><span class=\"n\">devices</span><span class=\"p\">)</span>\n<span class=\"n\">layout</span> <span class=\"o\">=</span> <span class=\"n\">KeyboardLayoutUS</span><span class=\"p\">(</span><span class=\"n\">kbd</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Type 'abc' followed by Enter (a newline).</span>\n<span class=\"n\">layout</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'abc</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the keycodes needed to type a '$'.</span>\n<span class=\"c1\"># The method will return (Keycode.SHIFT, Keycode.FOUR).</span>\n<span class=\"n\">keycodes</span> <span class=\"o\">=</span> <span class=\"n\">layout</span><span class=\"o\">.</span><span class=\"n\">keycodes</span><span class=\"p\">(</span><span class=\"s1\">'$'</span><span class=\"p\">)</span>\n</pre>\n<p>The <tt>Mouse</tt> class simulates a three-button mouse with a scroll wheel.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">usb_hid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_hid.mouse</span> <span class=\"kn\">import</span> <span class=\"n\">Mouse</span>\n\n<span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">Mouse</span><span class=\"p\">(</span><span class=\"n\">usb_hid</span><span class=\"o\">.</span><span class=\"n\">devices</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Click the left mouse button.</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">click</span><span class=\"p\">(</span><span class=\"n\">Mouse</span><span class=\"o\">.</span><span class=\"n\">LEFT_BUTTON</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Move the mouse diagonally to the upper left.</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Roll the mouse wheel away from the user one unit.</span>\n<span class=\"c1\"># Amount scrolled depends on the host.</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Keyword arguments may also be used. Omitted arguments default to 0.</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=-</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=-</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">wheel</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Move the mouse while holding down the left button. (click-drag).</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">press</span><span class=\"p\">(</span><span class=\"n\">Mouse</span><span class=\"o\">.</span><span class=\"n\">LEFT_BUTTON</span><span class=\"p\">)</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">release_all</span><span class=\"p\">()</span>       <span class=\"c1\"># or m.release(Mouse.LEFT_BUTTON)</span>\n</pre>\n<p>The <tt>ConsumerControl</tt> class emulates consumer control devices such as\nremote controls, or the multimedia keys on certain keyboards.</p>\n<p><em>New in CircuitPython 3.0.</em></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">usb_hid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_hid.consumer_control</span> <span class=\"kn\">import</span> <span class=\"n\">ConsumerControl</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_hid.consumer_control_code</span> <span class=\"kn\">import</span> <span class=\"n\">ConsumerControlCode</span>\n\n<span class=\"n\">cc</span> <span class=\"o\">=</span> <span class=\"n\">ConsumerControl</span><span class=\"p\">(</span><span class=\"n\">usb_hid</span><span class=\"o\">.</span><span class=\"n\">devices</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Raise volume.</span>\n<span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">ConsumerControlCode</span><span class=\"o\">.</span><span class=\"n\">VOLUME_INCREMENT</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Pause or resume playback.</span>\n<span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">ConsumerControlCode</span><span class=\"o\">.</span><span class=\"n\">PLAY_PAUSE</span><span class=\"p\">)</span>\n</pre>\n<p>The <tt>Gamepad</tt> class emulates a two-joystick gamepad with 16 buttons.</p>\n<p><em>New in CircuitPython 3.0.</em></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">usb_hid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_hid.gamepad</span> <span class=\"kn\">import</span> <span class=\"n\">Gamepad</span>\n\n<span class=\"n\">gp</span> <span class=\"o\">=</span> <span class=\"n\">Gamepad</span><span class=\"p\">(</span><span class=\"n\">usb_hid</span><span class=\"o\">.</span><span class=\"n\">devices</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Click gamepad buttons.</span>\n<span class=\"n\">gp</span><span class=\"o\">.</span><span class=\"n\">click_buttons</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Move joysticks.</span>\n<span class=\"n\">gp</span><span class=\"o\">.</span><span class=\"n\">move_joysticks</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"o\">=-</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions are welcome! Please read our <a href=\"https://github.com/adafruit/Adafruit_CircuitPython_hid/blob/master/CODE_OF_CONDUCT.md\" rel=\"nofollow\">Code of Conduct</a>\nbefore contributing to help this project stay welcoming.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>For information on building library documentation, please check out <a href=\"https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1\" rel=\"nofollow\">this guide</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 7035433, "releases": {"3.2.0": [{"comment_text": "", "digests": {"md5": "62b4f909dd1a31fd9310532ad7362a26", "sha256": "123e9ed56bbe398651d48aac468e33c17252e28d71f778541907797188ec7893"}, "downloads": -1, "filename": "adafruit-circuitpython-hid-3.2.0.tar.gz", "has_sig": false, "md5_digest": "62b4f909dd1a31fd9310532ad7362a26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31937, "upload_time": "2018-08-09T16:04:56", "upload_time_iso_8601": "2018-08-09T16:04:56.974936Z", "url": "https://files.pythonhosted.org/packages/75/57/e121696176adf89265c496404040903e69c478b2174e98732ca202ef5596/adafruit-circuitpython-hid-3.2.0.tar.gz", "yanked": false}], "3.3.0": [{"comment_text": "", "digests": {"md5": "b48a07c046ba572fb44d2f8f94d02a29", "sha256": "78b30f932fc4009c6f9ff2ab4deca7ec4f32ad3c6f32d97e2b53e083704bd0f3"}, "downloads": -1, "filename": "adafruit-circuitpython-hid-3.3.0.tar.gz", "has_sig": false, "md5_digest": "b48a07c046ba572fb44d2f8f94d02a29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32013, "upload_time": "2018-11-01T17:48:53", "upload_time_iso_8601": "2018-11-01T17:48:53.099985Z", "url": "https://files.pythonhosted.org/packages/d0/d5/f877335ece349c5cc69b3e4f42e456bfc9ca79780707da6b215745c57e9c/adafruit-circuitpython-hid-3.3.0.tar.gz", "yanked": false}], "3.3.1": [{"comment_text": "", "digests": {"md5": "10b37899e58f65956dfdf75f7d174033", "sha256": "0ba97cc7f9c2ebd375478803ee19c1d64d4d626304e1a47a038713d8ff2d0f9f"}, "downloads": -1, "filename": "adafruit-circuitpython-hid-3.3.1.tar.gz", "has_sig": false, "md5_digest": "10b37899e58f65956dfdf75f7d174033", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32033, "upload_time": "2018-12-03T21:16:46", "upload_time_iso_8601": "2018-12-03T21:16:46.839161Z", "url": "https://files.pythonhosted.org/packages/62/b2/964d5ee061b38ab30caac7807b83f0e46aae1ca762f99e10b5d81cc5d085/adafruit-circuitpython-hid-3.3.1.tar.gz", "yanked": false}], "3.3.2": [{"comment_text": "", "digests": {"md5": "b25b47c14026b83791a79d4281ae76f2", "sha256": "f3a7aec642c063fbcc309af03c242d2ab42299322e93fb898a3db2591dd801e0"}, "downloads": -1, "filename": "adafruit-circuitpython-hid-3.3.2.tar.gz", "has_sig": false, "md5_digest": "b25b47c14026b83791a79d4281ae76f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31670, "upload_time": "2019-01-16T02:23:12", "upload_time_iso_8601": "2019-01-16T02:23:12.500469Z", "url": "https://files.pythonhosted.org/packages/79/bc/f7203748a316b80a8ceaa467918580dcb0bb3d0f9aaf521a9a43f9d310a6/adafruit-circuitpython-hid-3.3.2.tar.gz", "yanked": false}], "3.3.3": [{"comment_text": "", "digests": {"md5": "48d0b971a77e2cdd522e4670574e0091", "sha256": "39d382fa5aa781da291bc73a011fc5f2000862100ba9580d132072aea1502ab7"}, "downloads": -1, "filename": "adafruit-circuitpython-hid-3.3.3.tar.gz", "has_sig": false, "md5_digest": "48d0b971a77e2cdd522e4670574e0091", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31674, "upload_time": "2019-03-20T22:10:57", "upload_time_iso_8601": "2019-03-20T22:10:57.227866Z", "url": "https://files.pythonhosted.org/packages/47/43/0e9888705fe272f7d79f3e79ad6f9e88aad14e241d251b9dc3d95d9a0449/adafruit-circuitpython-hid-3.3.3.tar.gz", "yanked": false}], "3.3.4": [{"comment_text": "", "digests": {"md5": "d5030e7a214ac1fbd9b2cb3eb27cc736", "sha256": "8e62128333a30bacfe5e56a505876b20569d84afc288ac24e694ff068f07748f"}, "downloads": -1, "filename": "adafruit-circuitpython-hid-3.3.4.tar.gz", "has_sig": false, "md5_digest": "d5030e7a214ac1fbd9b2cb3eb27cc736", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31731, "upload_time": "2019-05-23T18:29:36", "upload_time_iso_8601": "2019-05-23T18:29:36.727679Z", "url": "https://files.pythonhosted.org/packages/79/94/34f387a1462cde614e41bc67b0687fd4462636271a06e25d4780c28d8404/adafruit-circuitpython-hid-3.3.4.tar.gz", "yanked": false}], "3.3.5": [{"comment_text": "", "digests": {"md5": "6f9a35d0daac20a0100e8eeeb96f6b98", "sha256": "cb93d7758bd49e74750b30042b164186f5c7a9a404d14797c4f023da7d6d6393"}, "downloads": -1, "filename": "adafruit-circuitpython-hid-3.3.5.tar.gz", "has_sig": false, "md5_digest": "6f9a35d0daac20a0100e8eeeb96f6b98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31833, "upload_time": "2019-06-21T21:26:32", "upload_time_iso_8601": "2019-06-21T21:26:32.574848Z", "url": "https://files.pythonhosted.org/packages/fd/69/8d0d7a466025c06abc50ff9ea672040b27f72e85c2891d40fc6518a078d0/adafruit-circuitpython-hid-3.3.5.tar.gz", "yanked": false}], "3.3.6": [{"comment_text": "", "digests": {"md5": "4cb1582b432727dbdf3c4515807c3a68", "sha256": "feb245ac98c04542021eb04742fd8604b231225473755eda9bd7f275f3c47fee"}, "downloads": -1, "filename": "adafruit-circuitpython-hid-3.3.6.tar.gz", "has_sig": false, "md5_digest": "4cb1582b432727dbdf3c4515807c3a68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31194, "upload_time": "2019-11-18T21:59:46", "upload_time_iso_8601": "2019-11-18T21:59:46.124409Z", "url": "https://files.pythonhosted.org/packages/f8/58/dcbbf6e406a73657a1abfeeb7982bf8e1722aaa9fb7b8792154de14d79b4/adafruit-circuitpython-hid-3.3.6.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "7142a812c582a0a19b61bdff6c4d39a3", "sha256": "7a8d693c58f06c1c8b23d9a0a9f259c73d7a2a848a2469500203c8586529dd31"}, "downloads": -1, "filename": "adafruit-circuitpython-hid-4.0.0.tar.gz", "has_sig": false, "md5_digest": "7142a812c582a0a19b61bdff6c4d39a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30633, "upload_time": "2020-01-07T22:12:19", "upload_time_iso_8601": "2020-01-07T22:12:19.065912Z", "url": "https://files.pythonhosted.org/packages/5f/9c/5c98a26775e5457306ad374c30a1051141a4b43e812416a851f980d2770b/adafruit-circuitpython-hid-4.0.0.tar.gz", "yanked": false}], "4.0.1": [{"comment_text": "", "digests": {"md5": "e8469b5357cafd783f0464abda2bc25b", "sha256": "f8604470da85c48b1149348fe89a8b8ae0f04af342a6cf7d58539a3be88f5d53"}, "downloads": -1, "filename": "adafruit-circuitpython-hid-4.0.1.tar.gz", "has_sig": false, "md5_digest": "e8469b5357cafd783f0464abda2bc25b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30634, "upload_time": "2020-01-24T01:43:21", "upload_time_iso_8601": "2020-01-24T01:43:21.579048Z", "url": "https://files.pythonhosted.org/packages/61/9a/e2cf815191574302bf33db65c422ccaa0ca1c750263577f66757f8a36edd/adafruit-circuitpython-hid-4.0.1.tar.gz", "yanked": false}], "4.1.0": [{"comment_text": "", "digests": {"md5": "0a0d7af931685b563286ec00d9e757d1", "sha256": "062852b098c3e7a1f9283a469908d8e5ec4cf3e9b3ccc0ff96153882faa5cbbb"}, "downloads": -1, "filename": "adafruit-circuitpython-hid-4.1.0.tar.gz", "has_sig": false, "md5_digest": "0a0d7af931685b563286ec00d9e757d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30840, "upload_time": "2020-03-20T15:24:54", "upload_time_iso_8601": "2020-03-20T15:24:54.370405Z", "url": "https://files.pythonhosted.org/packages/21/14/9bacbd630423200d12eb991f9524028abafe4176a08909695924a8277e8d/adafruit-circuitpython-hid-4.1.0.tar.gz", "yanked": false}], "4.1.1": [{"comment_text": "", "digests": {"md5": "1c5cf79692b41a039beebce634c830bc", "sha256": "f57f2a59d311f993bc773006162f831ed17a8d7c255a90ac57fd03861ceedc4d"}, "downloads": -1, "filename": "adafruit-circuitpython-hid-4.1.1.tar.gz", "has_sig": false, "md5_digest": "1c5cf79692b41a039beebce634c830bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30855, "upload_time": "2020-04-10T18:17:27", "upload_time_iso_8601": "2020-04-10T18:17:27.652390Z", "url": "https://files.pythonhosted.org/packages/f2/9e/739bebec40f4ddf74d403fb282f02e52a779e15ac2e7bcf890038ade49b0/adafruit-circuitpython-hid-4.1.1.tar.gz", "yanked": false}], "4.1.2": [{"comment_text": "", "digests": {"md5": "4e67e30df8490bc8920ca224fbea0ab6", "sha256": "340b908431baee4c23dd396f4f0c3b5b6899c4567ed041e26bccd8b270578ac1"}, "downloads": -1, "filename": "adafruit-circuitpython-hid-4.1.2.tar.gz", "has_sig": false, "md5_digest": "4e67e30df8490bc8920ca224fbea0ab6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30857, "upload_time": "2020-04-16T20:39:24", "upload_time_iso_8601": "2020-04-16T20:39:24.288480Z", "url": "https://files.pythonhosted.org/packages/69/c8/cb0a71822c6c9448629d74a4f29d402df84cd989e9eee079278669837707/adafruit-circuitpython-hid-4.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4e67e30df8490bc8920ca224fbea0ab6", "sha256": "340b908431baee4c23dd396f4f0c3b5b6899c4567ed041e26bccd8b270578ac1"}, "downloads": -1, "filename": "adafruit-circuitpython-hid-4.1.2.tar.gz", "has_sig": false, "md5_digest": "4e67e30df8490bc8920ca224fbea0ab6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30857, "upload_time": "2020-04-16T20:39:24", "upload_time_iso_8601": "2020-04-16T20:39:24.288480Z", "url": "https://files.pythonhosted.org/packages/69/c8/cb0a71822c6c9448629d74a4f29d402df84cd989e9eee079278669837707/adafruit-circuitpython-hid-4.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:02 2020"}