{"info": {"author": "Jannis Leidel", "author_email": "jannis@leidel.info", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "=============\ndjango-ticker\n=============\n\ndjango-ticker is a reusable Django_ application that provides a ticker like\nnews section including row level permissions. What does this mean?\n\nIn django-ticker you have a fine grained permission control what the\n(administrative) user can do and what not. Besides the default Django\npermissions -- add, change, delete -- there are some extra permissions:\n\n- change_foreign\n- publish\n\nOriginally this was created for the news section of the `German Django community`_ \nwhere foreign users could add articles but had no permission to publish\nthem, cause a moderator must check these articles first. \n\nIt's easy to create a pressroom like workflow, assumed we have different\npeople with different permissions:\n\nThe freelance journalist:\n    Granted permissions: add, change\n    \n    - can add articles\n    - can change his articles (only his own)\n    - can not delete his articles\n    - can set the status of the article to \"closed\" or \"draft\". Draft means,\n      that the article is ready for check by a moderator.\n    - in the admin list of articles, they see only they own\n\nThe journalist:\n    Granted permissions: add, change, delete, publish\n    \n    - can add articles\n    - can change and delete his articles (only his own)\n    - can set the status of the article to \"closed\", \"draft\" or \"published\"\n    - in the admin list of articles, they see only their own\n\nThe chief editor (or moderator):\n    Granted permissions: add, change, delete, publish, change_foreign\n    \n    - can add articles\n    - can change and delete all (!) articles\n    - can set the status of the article to \"closed\", \"draft\" or \"published\"\n    - in the admin list of articles, they see all articles\n    \nThe proofreader (or subject specialist):\n    Granted permissions: change, change_foreign\n    \n    - can not add articles\n    - can not delete articles\n    - can not publish articles\n    - can change all articles (e.g. for correction)\n    - in the admin list of articles, they see all articles\n    \nSo, you can mix these permissions and create a workflow that perfectly \nfits your needs.\n\n.. _`Django`: http://www.djangoproject.com/\n.. _`German Django Community`: http://django-de.org/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jezdez/django-ticker/tree/master", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-ticker", "package_url": "https://pypi.org/project/django-ticker/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-ticker/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/jezdez/django-ticker/tree/master"}, "release_url": "https://pypi.org/project/django-ticker/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "A simple Django app for newsticker with a row level permission based workflow.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>django-ticker is a reusable <a href=\"http://www.djangoproject.com/\" rel=\"nofollow\">Django</a> application that provides a ticker like\nnews section including row level permissions. What does this mean?</p>\n<p>In django-ticker you have a fine grained permission control what the\n(administrative) user can do and what not. Besides the default Django\npermissions \u2013 add, change, delete \u2013 there are some extra permissions:</p>\n<ul>\n<li>change_foreign</li>\n<li>publish</li>\n</ul>\n<p>Originally this was created for the news section of the <a href=\"http://django-de.org/\" rel=\"nofollow\">German Django community</a>\nwhere foreign users could add articles but had no permission to publish\nthem, cause a moderator must check these articles first.</p>\n<p>It\u2019s easy to create a pressroom like workflow, assumed we have different\npeople with different permissions:</p>\n<dl>\n<dt>The freelance journalist:</dt>\n<dd><p>Granted permissions: add, change</p>\n<ul>\n<li>can add articles</li>\n<li>can change his articles (only his own)</li>\n<li>can not delete his articles</li>\n<li>can set the status of the article to \u201cclosed\u201d or \u201cdraft\u201d. Draft means,\nthat the article is ready for check by a moderator.</li>\n<li>in the admin list of articles, they see only they own</li>\n</ul>\n</dd>\n<dt>The journalist:</dt>\n<dd><p>Granted permissions: add, change, delete, publish</p>\n<ul>\n<li>can add articles</li>\n<li>can change and delete his articles (only his own)</li>\n<li>can set the status of the article to \u201cclosed\u201d, \u201cdraft\u201d or \u201cpublished\u201d</li>\n<li>in the admin list of articles, they see only their own</li>\n</ul>\n</dd>\n<dt>The chief editor (or moderator):</dt>\n<dd><p>Granted permissions: add, change, delete, publish, change_foreign</p>\n<ul>\n<li>can add articles</li>\n<li>can change and delete all (!) articles</li>\n<li>can set the status of the article to \u201cclosed\u201d, \u201cdraft\u201d or \u201cpublished\u201d</li>\n<li>in the admin list of articles, they see all articles</li>\n</ul>\n</dd>\n<dt>The proofreader (or subject specialist):</dt>\n<dd><p>Granted permissions: change, change_foreign</p>\n<ul>\n<li>can not add articles</li>\n<li>can not delete articles</li>\n<li>can not publish articles</li>\n<li>can change all articles (e.g. for correction)</li>\n<li>in the admin list of articles, they see all articles</li>\n</ul>\n</dd>\n</dl>\n<p>So, you can mix these permissions and create a workflow that perfectly\nfits your needs.</p>\n\n          </div>"}, "last_serial": 790877, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9f291a301d01e042639cd31ee1a21b2c", "sha256": "a5dc74af7c175582ebd160662304042c9f9a9ecdde06bd66884d5c2a837668b3"}, "downloads": -1, "filename": "django-ticker-0.1.0.tar.gz", "has_sig": true, "md5_digest": "9f291a301d01e042639cd31ee1a21b2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53148, "upload_time": "2009-03-12T18:33:41", "upload_time_iso_8601": "2009-03-12T18:33:41.388459Z", "url": "https://files.pythonhosted.org/packages/c7/f9/7bd8f883069b16aa79f3eefc80677e5fdf2f87bdbc9e6d745eae7edf3088/django-ticker-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "85c0299f664bc135b06286cca200331a", "sha256": "6d4e13b7f394e1ff79d3c3faf3ab5ad5a9b334d084ddc7614dae4940cd43bc6e"}, "downloads": -1, "filename": "django-ticker-0.1.1.tar.gz", "has_sig": true, "md5_digest": "85c0299f664bc135b06286cca200331a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53042, "upload_time": "2009-03-16T01:57:04", "upload_time_iso_8601": "2009-03-16T01:57:04.057317Z", "url": "https://files.pythonhosted.org/packages/47/be/7e1d8d7a2d84f7d499a34501994c95024439bd9fa7b6e97db8957db395b5/django-ticker-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8ccf0bce9af34328e55959c991dc42b4", "sha256": "06f960b57a1ff7698501b3b829d12e0d4065d2a44af340eea196c28ea78a5a41"}, "downloads": -1, "filename": "django-ticker-0.1.2.tar.gz", "has_sig": true, "md5_digest": "8ccf0bce9af34328e55959c991dc42b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53029, "upload_time": "2009-03-18T13:02:19", "upload_time_iso_8601": "2009-03-18T13:02:19.436463Z", "url": "https://files.pythonhosted.org/packages/4e/fc/fa69e262d30d19ba9dbec7ece9cb869242c90a735724f0603e0fa7b399c3/django-ticker-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f1e5a4e11d975bfd640bde301adec783", "sha256": "8882bafa3e9004d7bc8ae9518267d6303a87b51d3263438c03de4f0ff2c1e09e"}, "downloads": -1, "filename": "django-ticker-0.2.0.tar.gz", "has_sig": true, "md5_digest": "f1e5a4e11d975bfd640bde301adec783", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7969, "upload_time": "2009-03-20T16:31:54", "upload_time_iso_8601": "2009-03-20T16:31:54.476200Z", "url": "https://files.pythonhosted.org/packages/70/d4/070c726e579a4040f50d3fbf1a27ea345dc6093eb032da5a9355653f5d4b/django-ticker-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "244b737b8b04f0ee22796561edf77e55", "sha256": "11eae5ffce0b421232ce1f9e50a5c9a164d6c31bd15f4ba6a2c2c264370b7b13"}, "downloads": -1, "filename": "django-ticker-0.2.1.tar.gz", "has_sig": true, "md5_digest": "244b737b8b04f0ee22796561edf77e55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8012, "upload_time": "2009-03-23T01:59:27", "upload_time_iso_8601": "2009-03-23T01:59:27.207177Z", "url": "https://files.pythonhosted.org/packages/ce/26/15b4015f81508079700015e87ca49134e19dd4da8e2d7e4e8afac83c8f2a/django-ticker-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "244b737b8b04f0ee22796561edf77e55", "sha256": "11eae5ffce0b421232ce1f9e50a5c9a164d6c31bd15f4ba6a2c2c264370b7b13"}, "downloads": -1, "filename": "django-ticker-0.2.1.tar.gz", "has_sig": true, "md5_digest": "244b737b8b04f0ee22796561edf77e55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8012, "upload_time": "2009-03-23T01:59:27", "upload_time_iso_8601": "2009-03-23T01:59:27.207177Z", "url": "https://files.pythonhosted.org/packages/ce/26/15b4015f81508079700015e87ca49134e19dd4da8e2d7e4e8afac83c8f2a/django-ticker-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:28 2020"}