{"info": {"author": "Daniel Strigl", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Manufacturing", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Communications", "Topic :: Home Automation", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: HTTP Servers", "Topic :: Scientific/Engineering", "Topic :: Terminals :: Serial"], "description": "# HtREST\n\n[![PyPI version](https://img.shields.io/pypi/v/HtREST.svg)](https://pypi.org/project/HtREST)\n[![Python versions](https://img.shields.io/pypi/pyversions/HtREST.svg)](https://pypi.org/project/HtREST)\n[![License](https://img.shields.io/pypi/l/HtREST.svg)](https://pypi.org/project/HtREST)\n[![Build status](https://img.shields.io/travis/dstrigl/HtREST/master?logo=travis)](https://travis-ci.org/dstrigl/HtREST)\n[![Updates](https://pyup.io/repos/github/dstrigl/HtREST/shield.svg)](https://pyup.io/repos/github/dstrigl/HtREST)\n\n\n[Heliotherm](http://www.heliotherm.com/) heat pump HTTP/REST API server for Python 3.5, 3.6, 3.7 and 3.8.\n\n* GitHub repo: https://github.com/dstrigl/HtREST\n* Free software: [GNU General Public License v3](https://www.gnu.org/licenses/gpl-3.0.en.html)\n\n\n> **Warning:**\n>\n> Please note that any incorrect or careless usage of this application as well as\n> errors in the implementation can damage your heat pump!\n>\n> Therefore, the author does not provide any guarantee or warranty concerning\n> to correctness, functionality or performance and does not accept any liability\n> for damage caused by this application, examples or mentioned information.\n>\n> **Thus, use it on your own risk!**\n\n\n### Wanna support me?\n\n[![Buy Me A Coffee](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/N362PLZ)\n\n\n## API\n\nThe following table describes the HTTP/REST API exposed by this server application for the\n[Heliotherm](http://www.heliotherm.com/) heat pump.\n\n| URI                                             | GET   | PUT   | description                                                                                   |\n| :---------------------------------------------- | :---: | :---: | :-------------------------------------------------------------------------------------------- |\n| `/api/v1/device`                                |   X   |       | Delivers information about the connected heat pump.                                           |\n| `/api/v1/datetime`                              |   X   |   X   | Returns or sets the current date and time of the heat pump.                                   |\n| `/api/v1/faultlist`                             |   X   |       | Returns the fault list of the heat pump.                                                      |\n| `/api/v1/faultlist/size`                        |   X   |       | Returns the fault list size of the heat pump.                                                 |\n| `/api/v1/faultlist/<int:id>`                    |   X   |       | Returns the fault list entry with the given index.                                            |\n| `/api/v1/faultlist/last`                        |   X   |       | Returns the last fault list entry of the heat pump.                                           |\n| `/api/v1/timeprog`                              |   X   |       | Returns a list of all available time programs of the heat pump.                               |\n| `/api/v1/timeprog/<int:id>`                     |   X   |   X   | Returns or sets the time program with the given index of the heat pump.                       |\n| `/api/v1/timeprog/<int:id>/<int:day>/<int:num>` |   X   |   X   | Returns or sets a specific time program entry of the heat pump.                               |\n| `/api/v1/param`                                 |   X   |   X   | Returns or sets the current value of several heat pump parameters.                            |\n| `/api/v1/param/<string:name>`                   |   X   |   X   | Returns or sets the current value of a specific heat pump parameter.                          |\n| `/api/v1/fastquery`                             |   X   |       | Performs a fast query of a subset or all heat pump parameters representing a 'MP' data point. |\n| `/api/v1/fastquery/<string:name>`               |   X   |       | Performs a fast query of a specific heat pump parameter which represents a 'MP' data point.   |\n\n\n### GET /api/v1/device\n\nDelivers information about the connected heat pump.\n\n**Sample Curl:**\n\n```\ncurl -X GET \"http://localhost:8777/api/v1/device/\" -H \"accept: application/json\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/device/\n```\n\n**Sample Response:**\n\n```\n{\n  \"property_id\": 123456,\n  \"serial_number\": 123456,\n  \"software_version\": \"3.0.20\"\n}\n```\n\n\n### GET /api/v1/datetime\n\nReturns the current date and time of the heat pump.\n\n**Sample Curl:**\n\n```\ncurl -X GET \"http://localhost:8777/api/v1/datetime/\" -H \"accept: application/json\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/datetime/\n```\n\n**Sample Response:**\n\n```\n{\n  \"datetime\": \"2020-01-29T13:11:35\"\n}\n```\n\n\n### PUT /api/v1/datetime\n\nSets the current date and time of the heat pump.\n\n**Sample Payload:**\n\n```\n{\n  \"datetime\": \"2020-01-29T13:12:07\"\n}\n```\n\n*Remark: If the value of \"datetime\" is an empty string (\"\") current date and time of the host will be used.*\n\n**Sample Curl:**\n\n```\ncurl -X PUT \"http://localhost:8777/api/v1/datetime/\" -H \"accept: application/json\" -H \"Content-Type: application/json\" -d \"{  \\\"datetime\\\": \\\"2020-01-29T13:12:07\\\"}\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/datetime/\n```\n\n**Sample Response:**\n\n```\n{\n  \"datetime\": \"2020-01-29T13:12:07\"\n}\n```\n\n\n### GET /api/v1/faultlist\n\nReturns the fault list of the heat pump.\n\n**Sample Curl:**\n\n```\ncurl -X GET \"http://localhost:8777/api/v1/faultlist/\" -H \"accept: application/json\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/faultlist/\n```\n\n**Sample Response:**\n\n```\n[\n  {\n    \"index\": 0,\n    \"error\": 65534,\n    \"datetime\": \"2000-01-01T00:00:00\",\n    \"message\": \"Keine Stoerung\"\n  },\n  {\n    \"index\": 1,\n    \"error\": 65286,\n    \"datetime\": \"2000-01-01T00:00:00\",\n    \"message\": \"Info: Programmupdate 1\"\n  },\n  {\n    \"index\": 2,\n    \"error\": 65285,\n    \"datetime\": \"2000-01-01T00:00:00\",\n    \"message\": \"Info: Initialisiert\"\n  },\n  {\n    \"index\": 3,\n    \"error\": 19,\n    \"datetime\": \"2014-09-14T02:08:56\",\n    \"message\": \"EQ_Spreizung\"\n  }\n]\n```\n\n\n### GET /api/v1/faultlist/size\n\nReturns the fault list size of the heat pump.\n\n```\ncurl -X GET \"http://localhost:8777/api/v1/faultlist/size\" -H \"accept: application/json\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/faultlist/size\n```\n\n**Sample Response:**\n\n```\n{\n  \"size\": 4\n}\n```\n\n\n### GET /api/v1/faultlist/\\<int:id\\>\n\nReturns the fault list entry with the given index.\n\n**Parameter:**\n\n* **\\<int:id\\>**: The fault list index.\n\n**Sample Curl:**\n\n```\ncurl -X GET \"http://localhost:8777/api/v1/faultlist/3\" -H \"accept: application/json\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/faultlist/3\n```\n\n**Sample Response:**\n\n```\n{\n  \"index\": 3,\n  \"error\": 19,\n  \"datetime\": \"2014-09-14T02:08:56\",\n  \"message\": \"EQ_Spreizung\"\n}\n```\n\n\n### GET /api/v1/faultlist/last\n\nReturns the last fault list entry of the heat pump.\n\n```\ncurl -X GET \"http://localhost:8777/api/v1/faultlist/last\" -H \"accept: application/json\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/faultlist/last\n```\n\n**Sample Response:**\n\n```\n{\n  \"index\": 3,\n  \"error\": 19,\n  \"datetime\": \"2014-09-14T02:08:56\",\n  \"message\": \"EQ_Spreizung\"\n}\n```\n\n\n### GET /api/v1/timeprog\n\nReturns a list of all available time programs of the heat pump.\n\n**Sample Curl:**\n\n```\ncurl -X GET \"http://localhost:8777/api/v1/timeprog/\" -H \"accept: application/json\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/timeprog/\n```\n\n**Sample Response:**\n\n```\n[\n  {\n    \"index\": 0,\n    \"name\": \"Warmwasser\",\n    \"ead\": 7,\n    \"nos\": 2,\n    \"ste\": 15,\n    \"nod\": 7\n  },\n  {\n    \"index\": 1,\n    \"name\": \"Zirkulationspumpe\",\n    \"ead\": 7,\n    \"nos\": 2,\n    \"ste\": 15,\n    \"nod\": 7\n  },\n  {\n    \"index\": 2,\n    \"name\": \"Heizung\",\n    \"ead\": 7,\n    \"nos\": 3,\n    \"ste\": 15,\n    \"nod\": 7\n  },\n  {...},\n  {...}\n]\n```\n\n\n### GET /api/v1/timeprog/\\<int:id\\>\n\nReturns the time program with the given index of the heat pump.\n\n**Parameter:**\n\n* **\\<int:id\\>**: The time program index.\n\n**Sample Curl:**\n\n```\ncurl -X GET \"http://localhost:8777/api/v1/timeprog/1\" -H \"accept: application/json\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/timeprog/1\n```\n\n**Sample Response:**\n\n```\n{\n  \"index\": 1,\n  \"name\": \"Zirkulationspumpe\",\n  \"ead\": 7,\n  \"nos\": 2,\n  \"ste\": 15,\n  \"nod\": 7,\n  \"entries\": [\n    [\n      {\n        \"state\": 0,\n        \"start\": \"00:00\",\n        \"end\": \"05:15\"\n      },\n      {\n        \"state\": 1,\n        \"start\": \"05:15\",\n        \"end\": \"08:00\"\n      },\n      {...},\n      {...},\n      {...},\n      {...},\n      {...}\n    ],\n    [...],\n    [...],\n    [...],\n    [...],\n    [...],\n    [...]\n  ]\n}\n```\n\n\n### PUT /api/v1/timeprog/\\<int:id\\>\n\nSets all time program entries of a specific time program of the heat pump.\n\n**Parameter:**\n\n* **\\<int:id\\>**: The time program index.\n\n**Sample Payload:**\n\n```\n{\n  \"index\": 1,\n  \"name\": \"Zirkulationspumpe\",\n  \"ead\": 7,\n  \"nos\": 2,\n  \"ste\": 15,\n  \"nod\": 7,\n  \"entries\": [\n    [\n      {\n        \"state\": 0,\n        \"start\": \"00:00\",\n        \"end\": \"06:00\"\n      },\n      {\n        \"state\": 1,\n        \"start\": \"06:00\",\n        \"end\": \"09:00\"\n      },\n      {...},\n      {...},\n      {...},\n      {...},\n      {...}\n    ],\n    [...],\n    [...],\n    [...],\n    [...],\n    [...],\n    [...]\n  ]\n}\n```\n\n**Sample Curl:**\n\n```\ncurl -X PUT \"http://localhost:8777/api/v1/timeprog/1\" -H \"accept: application/json\" -H \"Content-Type: application/json\" -d \"{  \\\"index\\\": 1,  \\\"name\\\": \\\"Zirkulationspumpe\\\",  ... }\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/timeprog/1\n```\n\n**Sample Response:**\n\n```\n{\n  \"index\": 1,\n  \"name\": \"Zirkulationspumpe\",\n  \"ead\": 7,\n  \"nos\": 2,\n  \"ste\": 15,\n  \"nod\": 7,\n  \"entries\": [\n    [\n      {\n        \"state\": 0,\n        \"start\": \"00:00\",\n        \"end\": \"06:00\"\n      },\n      {\n        \"state\": 1,\n        \"start\": \"06:00\",\n        \"end\": \"09:00\"\n      },\n      {...},\n      {...},\n      {...},\n      {...},\n      {...}\n    ],\n    [...],\n    [...],\n    [...],\n    [...],\n    [...],\n    [...]\n  ]\n}\n```\n\n\n#### GET /api/v1/timeprog/\\<int:id\\>/\\<int:day\\>/\\<int:num\\>\n\nReturns a specific time program entry of the heat pump.\n\n**Parameter:**\n\n* **\\<int:num\\>**: The number of the time program entry (of the specified day).\n* **\\<int:day\\>**: The day of the time program entry (inside the specified time program).\n* **\\<int:id\\>**:  The time program index.\n\n**Sample Curl:**\n\n```\ncurl -X GET \"http://localhost:8777/api/v1/timeprog/1/1/1\" -H \"accept: application/json\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/timeprog/1/1/1\n```\n\n**Sample Response:**\n\n```\n{\n  \"state\": 1,\n  \"start\": \"06:00\",\n  \"end\": \"08:00\"\n}\n```\n\n\n### PUT /api/v1/timeprog/\\<int:id\\>/\\<int:day\\>/\\<int:num\\>\n\nSets a specific time program entry of the heat pump.\n\n**Parameter:**\n\n* **\\<int:num\\>**: The number of the time program entry (of the specified day).\n* **\\<int:day\\>**: The day of the time program entry (inside the specified time program).\n* **\\<int:id\\>**:  The time program index.\n\n**Sample Payload:**\n\n```\n{\n  \"state\": 1,\n  \"start\": \"06:00\",\n  \"end\": \"08:00\"\n}\n```\n\n**Sample Curl:**\n\n```\ncurl -X PUT \"http://localhost:8777/api/v1/timeprog/1/1/1\" -H \"accept: application/json\" -H \"Content-Type: application/json\" -d \"{  \\\"state\\\": 1,  \\\"start\\\": \\\"06:00\\\",  \\\"end\\\": \\\"08:00\\\"}\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/timeprog/1/1/1\n```\n\n**Sample Response:**\n\n```\n{\n  \"state\": 1,\n  \"start\": \"06:00\",\n  \"end\": \"08:00\"\n}\n```\n\n\n### GET /api/v1/param\n\nReturns the current value of a subset or all known heat pump parameters.\n\n**Sample Curl:**\n\nComplete list of all known heat pump parameters:\n```\ncurl -X GET \"http://localhost:8777/api/v1/param/\" -H \"accept: application/json\"\n```\nSubset of the known heat pump parameters:\n```\ncurl -X GET \"http://localhost:8777/api/v1/param/?HKR%20Soll_Raum&Temp.%20Aussen&Stoerung\" -H \"accept: application/json\"\n```\n\n**Sample Request URL:**\n\nComplete list of all known heat pump parameters:\n```\nhttp://localhost:8777/api/v1/param/\n```\nSubset of the known heat pump parameters:\n```\nhttp://localhost:8777/api/v1/param/?HKR%20Soll_Raum&Temp.%20Aussen&Stoerung\n```\n\n**Sample Response:**\n\n```\n{\n  \"HKR Soll_Raum\": 23,\n  \"Stoerung\": false,\n  \"Temp. EQ_Austritt\": 4.7,\n  \"Temp. EQ_Eintritt\": 6.1,\n  \"Temp. Ruecklauf\": 27.7,\n  \"Temp. Vorlauf\": 27.8,\n  \"Temp. Brauchwasser\": 50.1,\n  \"Temp. Aussen verzoegert\": 4.9,\n  \"Temp. Aussen\": 4.9,\n  ...\n}\n```\n\n*Remark: A list of available Heliotherm heat pump parameters can be found\n[here](https://htheatpump.readthedocs.io/en/latest/htparams.html).*\n\n\n### PUT /api/v1/param\n\nSets the current value of several heat pump parameters.\n\n**Sample Payload:**\n\n```\n{\n  \"Betriebsart\": 1,\n  \"HKR Soll_Raum\": 21.5,\n  \"HKR Aufheiztemp. (K)\": 3,\n  \"HKR Absenktemp. (K)\": -3,\n  \"WW Minimaltemp.\": 15,\n  \"WW Normaltemp.\": 50\n}\n```\n\n**Sample Curl:**\n\n```\ncurl -X PUT \"http://localhost:8777/api/v1/param/\" -H \"accept: application/json\" -H \"Content-Type: application/json\" -d \"{  \\\"Betriebsart\\\": 1,  \\\"HKR Soll_Raum\\\": 21.5,  ... }\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/param/\n```\n\n**Sample Response:**\n\n```\n{\n  \"Betriebsart\": 1,\n  \"HKR Soll_Raum\": 21.5,\n  \"HKR Aufheiztemp. (K)\": 3,\n  \"HKR Absenktemp. (K)\": -3,\n  \"WW Minimaltemp.\": 15,\n  \"WW Normaltemp.\": 50\n}\n```\n\n*Remark: A list of available Heliotherm heat pump parameters can be found\n[here](https://htheatpump.readthedocs.io/en/latest/htparams.html).*\n\n\n### GET /api/v1/param/\\<string:name\\>\n\nReturns the current value of a specific heat pump parameter.\n\n**Parameter:**\n\n* **\\<string:name\\>**: The parameter name.\n\n**Sample Curl:**\n\n```\ncurl -X GET \"http://localhost:8777/api/v1/param/Temp.%20Aussen\" -H \"accept: application/json\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/param/Temp.%20Aussen\n```\n\n**Sample Response:**\n\n```\n{\n  \"value\": 4.9\n}\n```\n\n*Remark: A list of available Heliotherm heat pump parameters can be found\n[here](https://htheatpump.readthedocs.io/en/latest/htparams.html).*\n\n\n### PUT /api/v1/param/\\<string:name\\>\n\nSets the current value of a specific heat pump parameter.\n\n**Parameter:**\n\n* **\\<string:name\\>**: The parameter name.\n\n**Sample Payload:**\n\n```\n{\n  \"value\": 22.5\n}\n```\n\n**Sample Curl:**\n\n```\ncurl -X PUT \"http://localhost:8777/api/v1/param/HKR%20Soll_Raum\" -H \"accept: application/json\" -H \"Content-Type: application/json\" -d \"{  \\\"value\\\": 22.5}\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/param/HKR%20Soll_Raum\n```\n\n**Sample Response:**\n\n```\n{\n  \"value\": 22.5\n}\n```\n\n*Remark: A list of available Heliotherm heat pump parameters can be found\n[here](https://htheatpump.readthedocs.io/en/latest/htparams.html).*\n\n\n### GET /api/v1/fastquery\n\nPerforms a fast query of a subset or all heat pump parameters representing a \"MP\" data point.\n\n**Sample Curl:**\n\nComplete list of all known heat pump parameters representing a \"MP\" data point:\n```\ncurl -X GET \"http://localhost:8777/api/v1/fastquery/\" -H \"accept: application/json\"\n```\nSubset of the known heat pump parameters representing a \"MP\" data point:\n```\ncurl -X GET \"http://localhost:8777/api/v1/fastquery/?Stoerung&Temp.%20Vorlauf&Warmwasservorrang\" -H \"accept: application/json\"\n```\n\n**Sample Request URL:**\n\nComplete list of all known heat pump parameters representing a \"MP\" data point:\n```\nhttp://localhost:8777/api/v1/fastquery/\n```\nSubset of the known heat pump parameters representing a \"MP\" data point:\n```\nhttp://localhost:8777/api/v1/fastquery/?Stoerung&Temp.%20Vorlauf&Warmwasservorrang\n```\n\n**Sample Response:**\n\n```\n{\n  \"HKR_Sollwert\": 32.2,\n  \"Verdichteranforderung\": 3,\n  \"Frischwasserpumpe\": 0,\n  \"FWS Stroemungsschalter\": false,\n  \"Stoerung\": false,\n  \"Verdichter\": true,\n  \"Zirkulationspumpe WW\": false,\n  ...\n}\n```\n\n*Remark: A list of available Heliotherm heat pump parameters can be found\n[here](https://htheatpump.readthedocs.io/en/latest/htparams.html).*\n\n\n### GET /api/v1/fastquery/\\<string:name\\>\n\nPerforms a fast query of a specific heat pump parameter which represents a \"MP\" data point.\n\n**Parameter:**\n\n* **\\<string:name\\>**: The parameter name (representing a \"MP\" data point).\n\n**Sample Curl:**\n\n```\ncurl -X GET \"http://localhost:8777/api/v1/fastquery/Verdichter\" -H \"accept: application/json\"\n```\n\n**Sample Request URL:**\n\n```\nhttp://localhost:8777/api/v1/fastquery/Verdichter\n```\n\n**Sample Response:**\n\n```\n{\n  \"value\": true\n}\n```\n\n*Remark: A list of available Heliotherm heat pump parameters can be found\n[here](https://htheatpump.readthedocs.io/en/latest/htparams.html).*\n\n\n## Installation\n\nYou can install or upgrade `HtREST` with:\n\n```\n$ pip install HtREST --upgrade\n```\n\nOr you can install from source with:\n\n```\n$ git clone https://github.com/dstrigl/HtREST.git\n$ cd HtREST\n$ python setup.py install\n```\n\n\n## Usage\n\n```\nusage: htrest [-h] [-d DEVICE] [-b {9600,19200,38400,57600,115200}]\n              [--host HOST] [--port PORT] [--user USER] [--bool-as-int]\n              [--logging-config LOGGING_CONFIG] [--debug] [--read-only]\n              [--no-param-verification]\n\nHeliotherm heat pump REST API server\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d DEVICE, --device DEVICE\n                        the serial device on which the heat pump is connected,\n                        default: /dev/ttyUSB0\n  -b {9600,19200,38400,57600,115200}, --baudrate {9600,19200,38400,57600,115200}\n                        baudrate of the serial connection (same as configured\n                        on the heat pump), default: 115200\n  --host HOST           the hostname to listen on, set to \"0.0.0.0\" to have\n                        the server available externally as well, default:\n                        127.0.0.1\n  --port PORT           the port of the web server, default: 8777\n  --user USER           the username and password for the basic access\n                        authentication in the form \"<username>:<password>\",\n                        default:\n  --bool-as-int         boolean values are treated as integers (with false\n                        equivalent to 0 and true equivalent to 1)\n  --logging-config LOGGING_CONFIG\n                        the filename under which the logging configuration can\n                        be found, default:\n                        /home/pi/prog/HtREST/htrest/logging.conf\n  --debug               enable Flask debug mode\n  --read-only           disable write access to the heat pump\n  --no-param-verification\n                        disable all parameter verification actions\n```\n\n\n### Example\n\n```\n$ htrest -d /dev/ttyUSB0 -b 115200 --host 192.168.11.99 --port 8777 --read-only\nHTHEATPUMP: load parameter definitions from: /home/pi/venv/htrest/lib/python3.7/site-packages/htheatpump-1.2.4-py3.7.egg/htheatpump/htparams.csv\nStart Heliotherm heat pump REST API server v0.1.8.\nNamespace(baudrate=115200, bool_as_int=False, debug=False, device='/dev/ttyUSB0', host='192.168.11.99', logging_config='/home/pi/prog/HtREST/htrest/logging.conf', no_param_verification=False, port=8777, read_only=True, user='')\n2020-04-18 12:36:15,834 INFO [htrest.app] open connection to heat pump (<htheatpump.htheatpump.HtHeatpump object at 0xb5dd61f0>)\n2020-04-18 12:36:15,873 INFO [htrest.app] successfully connected to heat pump #123456\n2020-04-18 12:36:15,904 INFO [htrest.app] software version = 3.0.20 (273)\n2020-04-18 12:36:15,950 INFO [htrest.app] *** created Flask app <Flask 'htrest.app'> with config <Config {'ENV': 'production', 'DEBUG': False, 'TESTING': False, 'PROPAGATE_EXCEPTIONS': None, 'PRESERVE_CONTEXT_ON_EXCEPTION': None, 'SECRET_KEY': None, 'PERMANENT_SESSION_LIFETIME': datetime.timedelta(days=31), 'USE_X_SENDFILE': False, 'SERVER_NAME': None, 'APPLICATION_ROOT': '/', 'SESSION_COOKIE_NAME': 'session', 'SESSION_COOKIE_DOMAIN': None, 'SESSION_COOKIE_PATH': None, 'SESSION_COOKIE_HTTPONLY': True, 'SESSION_COOKIE_SECURE': False, 'SESSION_COOKIE_SAMESITE': None, 'SESSION_REFRESH_EACH_REQUEST': True, 'MAX_CONTENT_LENGTH': None, 'SEND_FILE_MAX_AGE_DEFAULT': datetime.timedelta(seconds=43200), 'TRAP_BAD_REQUEST_ERRORS': None, 'TRAP_HTTP_EXCEPTIONS': False, 'EXPLAIN_TEMPLATE_LOADING': False, 'PREFERRED_URL_SCHEME': 'http', 'JSON_AS_ASCII': True, 'JSON_SORT_KEYS': True, 'JSONIFY_PRETTYPRINT_REGULAR': False, 'JSONIFY_MIMETYPE': 'application/json', 'TEMPLATES_AUTO_RELOAD': None, 'MAX_COOKIE_SIZE': 4093, 'SWAGGER_UI_DOC_EXPANSION': 'list', 'RESTX_VALIDATE': True, 'RESTX_MASK_SWAGGER': False, 'ERROR_404_HELP': False, 'BUNDLE_ERRORS': True}>\nMap([<Rule '/api/v1/faultlist/size' (OPTIONS, HEAD, GET) -> api.faultlist_fault_list_size>,\n <Rule '/api/v1/faultlist/last' (OPTIONS, HEAD, GET) -> api.faultlist_last_fault>,\n <Rule '/api/v1/swagger.json' (OPTIONS, HEAD, GET) -> api.specs>,\n <Rule '/api/v1/faultlist/' (OPTIONS, HEAD, GET) -> api.faultlist_fault_list>,\n <Rule '/api/v1/fastquery/' (OPTIONS, HEAD, GET) -> api.fastquery_fast_query_list>,\n <Rule '/api/v1/datetime/' (PUT, OPTIONS, HEAD, GET) -> api.datetime_date_time>,\n <Rule '/api/v1/timeprog/' (OPTIONS, HEAD, GET) -> api.timeprog_time_progs>,\n <Rule '/api/v1/device/' (OPTIONS, HEAD, GET) -> api.device_device>,\n <Rule '/api/v1/param/' (PUT, OPTIONS, HEAD, GET) -> api.param_param_list>,\n <Rule '/api/v1/' (OPTIONS, HEAD, GET) -> api.doc>,\n <Rule '/api/v1/' (OPTIONS, HEAD, GET) -> api.root>,\n <Rule '/api/v1/faultlist/<id>' (OPTIONS, HEAD, GET) -> api.faultlist_fault_entry>,\n <Rule '/api/v1/fastquery/<name>' (OPTIONS, HEAD, GET) -> api.fastquery_fast_query>,\n <Rule '/api/v1/timeprog/<id>/<day>/<num>' (PUT, OPTIONS, HEAD, GET) -> api.timeprog_time_prog_entry>,\n <Rule '/api/v1/timeprog/<id>' (PUT, OPTIONS, HEAD, GET) -> api.timeprog_time_prog>,\n <Rule '/api/v1/param/<name>' (PUT, OPTIONS, HEAD, GET) -> api.param_param>,\n <Rule '/swaggerui/<filename>' (OPTIONS, HEAD, GET) -> restx_doc.static>,\n <Rule '/static/<filename>' (OPTIONS, HEAD, GET) -> static>])\n * Serving Flask app \"htrest.app\" (lazy loading)\n * Environment: production\n   WARNING: This is a development server. Do not use it in a production deployment.\n   Use a production WSGI server instead.\n * Debug mode: off\n2020-03-31 12:58:12,047 INFO [htrest.apis.param] *** [GET] http://192.168.11.99:8777/api/v1/param/HKR%20Soll_Raum -- name='HKR Soll_Raum'\n2020-03-31 12:58:12,174 INFO [htrest.apis.param] *** [GET] http://192.168.11.99:8777/api/v1/param/Betriebsart -- name='Betriebsart'\n...\n```\n\n\n## License\n\nDistributed under the terms of the [GNU General Public License v3](https://www.gnu.org/licenses/gpl-3.0.en.html).\n\n\n# History\n\n## 0.1.9 (2020-04-20)\n\n* Fixed *flake8* errors.\n\n## 0.1.8 (2020-04-20)\n\n* Added support for Python 3.8.\n* Bumped `htheatpump` from `1.2.3` to `1.1.4`.\n* Some minor cleanup and improvements.\n* Changed default port of the HtREST application to `8777`.\n* Resource `/api/v1/param` and `/api/v1/fastquery` are now supports the possibility to request\n  for a specific subset of parameters.\n* Resource `/api/v1/fastquery` now also supports the possibility to treat boolean values as\n  integers (arg `--bool-as-int`).\n* Changed log statements to the form with the preferred and well-known `%s` (and `%d`, `%f`, etc.)\n  string formatting indicators (due to performance reasons).\n\n## 0.1.7 (2020-04-01)\n\n* Fixed wrong uploaded package on PyPi.\n\n## 0.1.6 (2020-03-31)\n\n* Updated to `htheatpump v1.2.3`, which now includes several helper scripts (e.g. `htcomplparams`).\n* Added possibility to disable all parameter verification actions (arg `--no-param-verification`).\n* Changed behaviour: No reconnect of the serial connection will be performed for each request,\n  because each `login()` call during a request will automatically try a reconnect on failure.\n* Clean-up of `setup.py` and `MANIFEST.in`.\n\n## 0.1.5 (2020-03-29)\n\n* Adapted logging statements and default log levels.\n* Python code reformatting using *Black*.\n* Added possibility so that boolean values can be treated as integers (arg `--bool-as-int`).\n* Fixed unsynchronized access to `HtHeatpump`, which results in a serial communication error.\n* Changed package requirements structure; some changes in `setup.py`, `setup.cfg`, `tox.ini`, etc.\n\n## 0.1.4 (2020-03-17)\n\n* Fixed wrong uploaded package on PyPi.\n\n## 0.1.3 (2020-03-17)\n\n* Fixed missing file `logging.conf`.\n* Corrected usage of host and port for the web server.\n\n## 0.1.2 (2020-02-18)\n\n* Fixed wrong version definition.\n\n## 0.1.1 (2020-02-18)\n\n* Fixed some errors in the project packaging.\n\n## 0.1.0 (2020-02-18)\n\n* First release on PyPI.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dstrigl/HtREST", "keywords": "python python3 heatpump Heliotherm rest restful api flask swagger", "license": "GNU General Public License v3", "maintainer": "", "maintainer_email": "", "name": "htrest", "package_url": "https://pypi.org/project/htrest/", "platform": "Linux", "project_url": "https://pypi.org/project/htrest/", "project_urls": {"Homepage": "https://github.com/dstrigl/HtREST"}, "release_url": "https://pypi.org/project/htrest/0.1.9/", "requires_dist": null, "requires_python": "", "summary": "Heliotherm heat pump REST API", "version": "0.1.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>HtREST</h1>\n<p><a href=\"https://pypi.org/project/HtREST\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/61f430bc62c827586ef45d32de7911c32c381cb8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f4874524553542e737667\"></a>\n<a href=\"https://pypi.org/project/HtREST\" rel=\"nofollow\"><img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2156762ea247d32c1ffe453679bb031e68eb2617/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f4874524553542e737667\"></a>\n<a href=\"https://pypi.org/project/HtREST\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45f26de4b28951ee5b27137b2c7478b217f85766/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f4874524553542e737667\"></a>\n<a href=\"https://travis-ci.org/dstrigl/HtREST\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8be329d0ff81f444b1ba01c95a9d4056a695cb16/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6473747269676c2f4874524553542f6d61737465723f6c6f676f3d747261766973\"></a>\n<a href=\"https://pyup.io/repos/github/dstrigl/HtREST\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3278ac053e9cc740bb40545992d9f85c8baea61d/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f6473747269676c2f4874524553542f736869656c642e737667\"></a></p>\n<p><a href=\"http://www.heliotherm.com/\" rel=\"nofollow\">Heliotherm</a> heat pump HTTP/REST API server for Python 3.5, 3.6, 3.7 and 3.8.</p>\n<ul>\n<li>GitHub repo: <a href=\"https://github.com/dstrigl/HtREST\" rel=\"nofollow\">https://github.com/dstrigl/HtREST</a></li>\n<li>Free software: <a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\" rel=\"nofollow\">GNU General Public License v3</a></li>\n</ul>\n<blockquote>\n<p><strong>Warning:</strong></p>\n<p>Please note that any incorrect or careless usage of this application as well as\nerrors in the implementation can damage your heat pump!</p>\n<p>Therefore, the author does not provide any guarantee or warranty concerning\nto correctness, functionality or performance and does not accept any liability\nfor damage caused by this application, examples or mentioned information.</p>\n<p><strong>Thus, use it on your own risk!</strong></p>\n</blockquote>\n<h3>Wanna support me?</h3>\n<p><a href=\"https://www.buymeacoffee.com/N362PLZ\" rel=\"nofollow\"><img alt=\"Buy Me A Coffee\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/320bf793359f29544369a3f1ecd7ec6a07a5dcd6/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67\"></a></p>\n<h2>API</h2>\n<p>The following table describes the HTTP/REST API exposed by this server application for the\n<a href=\"http://www.heliotherm.com/\" rel=\"nofollow\">Heliotherm</a> heat pump.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">URI</th>\n<th align=\"center\">GET</th>\n<th align=\"center\">PUT</th>\n<th align=\"left\">description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>/api/v1/device</code></td>\n<td align=\"center\">X</td>\n<td align=\"center\"></td>\n<td align=\"left\">Delivers information about the connected heat pump.</td>\n</tr>\n<tr>\n<td align=\"left\"><code>/api/v1/datetime</code></td>\n<td align=\"center\">X</td>\n<td align=\"center\">X</td>\n<td align=\"left\">Returns or sets the current date and time of the heat pump.</td>\n</tr>\n<tr>\n<td align=\"left\"><code>/api/v1/faultlist</code></td>\n<td align=\"center\">X</td>\n<td align=\"center\"></td>\n<td align=\"left\">Returns the fault list of the heat pump.</td>\n</tr>\n<tr>\n<td align=\"left\"><code>/api/v1/faultlist/size</code></td>\n<td align=\"center\">X</td>\n<td align=\"center\"></td>\n<td align=\"left\">Returns the fault list size of the heat pump.</td>\n</tr>\n<tr>\n<td align=\"left\"><code>/api/v1/faultlist/&lt;int:id&gt;</code></td>\n<td align=\"center\">X</td>\n<td align=\"center\"></td>\n<td align=\"left\">Returns the fault list entry with the given index.</td>\n</tr>\n<tr>\n<td align=\"left\"><code>/api/v1/faultlist/last</code></td>\n<td align=\"center\">X</td>\n<td align=\"center\"></td>\n<td align=\"left\">Returns the last fault list entry of the heat pump.</td>\n</tr>\n<tr>\n<td align=\"left\"><code>/api/v1/timeprog</code></td>\n<td align=\"center\">X</td>\n<td align=\"center\"></td>\n<td align=\"left\">Returns a list of all available time programs of the heat pump.</td>\n</tr>\n<tr>\n<td align=\"left\"><code>/api/v1/timeprog/&lt;int:id&gt;</code></td>\n<td align=\"center\">X</td>\n<td align=\"center\">X</td>\n<td align=\"left\">Returns or sets the time program with the given index of the heat pump.</td>\n</tr>\n<tr>\n<td align=\"left\"><code>/api/v1/timeprog/&lt;int:id&gt;/&lt;int:day&gt;/&lt;int:num&gt;</code></td>\n<td align=\"center\">X</td>\n<td align=\"center\">X</td>\n<td align=\"left\">Returns or sets a specific time program entry of the heat pump.</td>\n</tr>\n<tr>\n<td align=\"left\"><code>/api/v1/param</code></td>\n<td align=\"center\">X</td>\n<td align=\"center\">X</td>\n<td align=\"left\">Returns or sets the current value of several heat pump parameters.</td>\n</tr>\n<tr>\n<td align=\"left\"><code>/api/v1/param/&lt;string:name&gt;</code></td>\n<td align=\"center\">X</td>\n<td align=\"center\">X</td>\n<td align=\"left\">Returns or sets the current value of a specific heat pump parameter.</td>\n</tr>\n<tr>\n<td align=\"left\"><code>/api/v1/fastquery</code></td>\n<td align=\"center\">X</td>\n<td align=\"center\"></td>\n<td align=\"left\">Performs a fast query of a subset or all heat pump parameters representing a 'MP' data point.</td>\n</tr>\n<tr>\n<td align=\"left\"><code>/api/v1/fastquery/&lt;string:name&gt;</code></td>\n<td align=\"center\">X</td>\n<td align=\"center\"></td>\n<td align=\"left\">Performs a fast query of a specific heat pump parameter which represents a 'MP' data point.</td>\n</tr></tbody></table>\n<h3>GET /api/v1/device</h3>\n<p>Delivers information about the connected heat pump.</p>\n<p><strong>Sample Curl:</strong></p>\n<pre><code>curl -X GET \"http://localhost:8777/api/v1/device/\" -H \"accept: application/json\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/device/\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"property_id\": 123456,\n  \"serial_number\": 123456,\n  \"software_version\": \"3.0.20\"\n}\n</code></pre>\n<h3>GET /api/v1/datetime</h3>\n<p>Returns the current date and time of the heat pump.</p>\n<p><strong>Sample Curl:</strong></p>\n<pre><code>curl -X GET \"http://localhost:8777/api/v1/datetime/\" -H \"accept: application/json\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/datetime/\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"datetime\": \"2020-01-29T13:11:35\"\n}\n</code></pre>\n<h3>PUT /api/v1/datetime</h3>\n<p>Sets the current date and time of the heat pump.</p>\n<p><strong>Sample Payload:</strong></p>\n<pre><code>{\n  \"datetime\": \"2020-01-29T13:12:07\"\n}\n</code></pre>\n<p><em>Remark: If the value of \"datetime\" is an empty string (\"\") current date and time of the host will be used.</em></p>\n<p><strong>Sample Curl:</strong></p>\n<pre><code>curl -X PUT \"http://localhost:8777/api/v1/datetime/\" -H \"accept: application/json\" -H \"Content-Type: application/json\" -d \"{  \\\"datetime\\\": \\\"2020-01-29T13:12:07\\\"}\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/datetime/\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"datetime\": \"2020-01-29T13:12:07\"\n}\n</code></pre>\n<h3>GET /api/v1/faultlist</h3>\n<p>Returns the fault list of the heat pump.</p>\n<p><strong>Sample Curl:</strong></p>\n<pre><code>curl -X GET \"http://localhost:8777/api/v1/faultlist/\" -H \"accept: application/json\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/faultlist/\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>[\n  {\n    \"index\": 0,\n    \"error\": 65534,\n    \"datetime\": \"2000-01-01T00:00:00\",\n    \"message\": \"Keine Stoerung\"\n  },\n  {\n    \"index\": 1,\n    \"error\": 65286,\n    \"datetime\": \"2000-01-01T00:00:00\",\n    \"message\": \"Info: Programmupdate 1\"\n  },\n  {\n    \"index\": 2,\n    \"error\": 65285,\n    \"datetime\": \"2000-01-01T00:00:00\",\n    \"message\": \"Info: Initialisiert\"\n  },\n  {\n    \"index\": 3,\n    \"error\": 19,\n    \"datetime\": \"2014-09-14T02:08:56\",\n    \"message\": \"EQ_Spreizung\"\n  }\n]\n</code></pre>\n<h3>GET /api/v1/faultlist/size</h3>\n<p>Returns the fault list size of the heat pump.</p>\n<pre><code>curl -X GET \"http://localhost:8777/api/v1/faultlist/size\" -H \"accept: application/json\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/faultlist/size\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"size\": 4\n}\n</code></pre>\n<h3>GET /api/v1/faultlist/&lt;int:id&gt;</h3>\n<p>Returns the fault list entry with the given index.</p>\n<p><strong>Parameter:</strong></p>\n<ul>\n<li><strong>&lt;int:id&gt;</strong>: The fault list index.</li>\n</ul>\n<p><strong>Sample Curl:</strong></p>\n<pre><code>curl -X GET \"http://localhost:8777/api/v1/faultlist/3\" -H \"accept: application/json\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/faultlist/3\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"index\": 3,\n  \"error\": 19,\n  \"datetime\": \"2014-09-14T02:08:56\",\n  \"message\": \"EQ_Spreizung\"\n}\n</code></pre>\n<h3>GET /api/v1/faultlist/last</h3>\n<p>Returns the last fault list entry of the heat pump.</p>\n<pre><code>curl -X GET \"http://localhost:8777/api/v1/faultlist/last\" -H \"accept: application/json\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/faultlist/last\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"index\": 3,\n  \"error\": 19,\n  \"datetime\": \"2014-09-14T02:08:56\",\n  \"message\": \"EQ_Spreizung\"\n}\n</code></pre>\n<h3>GET /api/v1/timeprog</h3>\n<p>Returns a list of all available time programs of the heat pump.</p>\n<p><strong>Sample Curl:</strong></p>\n<pre><code>curl -X GET \"http://localhost:8777/api/v1/timeprog/\" -H \"accept: application/json\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/timeprog/\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>[\n  {\n    \"index\": 0,\n    \"name\": \"Warmwasser\",\n    \"ead\": 7,\n    \"nos\": 2,\n    \"ste\": 15,\n    \"nod\": 7\n  },\n  {\n    \"index\": 1,\n    \"name\": \"Zirkulationspumpe\",\n    \"ead\": 7,\n    \"nos\": 2,\n    \"ste\": 15,\n    \"nod\": 7\n  },\n  {\n    \"index\": 2,\n    \"name\": \"Heizung\",\n    \"ead\": 7,\n    \"nos\": 3,\n    \"ste\": 15,\n    \"nod\": 7\n  },\n  {...},\n  {...}\n]\n</code></pre>\n<h3>GET /api/v1/timeprog/&lt;int:id&gt;</h3>\n<p>Returns the time program with the given index of the heat pump.</p>\n<p><strong>Parameter:</strong></p>\n<ul>\n<li><strong>&lt;int:id&gt;</strong>: The time program index.</li>\n</ul>\n<p><strong>Sample Curl:</strong></p>\n<pre><code>curl -X GET \"http://localhost:8777/api/v1/timeprog/1\" -H \"accept: application/json\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/timeprog/1\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"index\": 1,\n  \"name\": \"Zirkulationspumpe\",\n  \"ead\": 7,\n  \"nos\": 2,\n  \"ste\": 15,\n  \"nod\": 7,\n  \"entries\": [\n    [\n      {\n        \"state\": 0,\n        \"start\": \"00:00\",\n        \"end\": \"05:15\"\n      },\n      {\n        \"state\": 1,\n        \"start\": \"05:15\",\n        \"end\": \"08:00\"\n      },\n      {...},\n      {...},\n      {...},\n      {...},\n      {...}\n    ],\n    [...],\n    [...],\n    [...],\n    [...],\n    [...],\n    [...]\n  ]\n}\n</code></pre>\n<h3>PUT /api/v1/timeprog/&lt;int:id&gt;</h3>\n<p>Sets all time program entries of a specific time program of the heat pump.</p>\n<p><strong>Parameter:</strong></p>\n<ul>\n<li><strong>&lt;int:id&gt;</strong>: The time program index.</li>\n</ul>\n<p><strong>Sample Payload:</strong></p>\n<pre><code>{\n  \"index\": 1,\n  \"name\": \"Zirkulationspumpe\",\n  \"ead\": 7,\n  \"nos\": 2,\n  \"ste\": 15,\n  \"nod\": 7,\n  \"entries\": [\n    [\n      {\n        \"state\": 0,\n        \"start\": \"00:00\",\n        \"end\": \"06:00\"\n      },\n      {\n        \"state\": 1,\n        \"start\": \"06:00\",\n        \"end\": \"09:00\"\n      },\n      {...},\n      {...},\n      {...},\n      {...},\n      {...}\n    ],\n    [...],\n    [...],\n    [...],\n    [...],\n    [...],\n    [...]\n  ]\n}\n</code></pre>\n<p><strong>Sample Curl:</strong></p>\n<pre><code>curl -X PUT \"http://localhost:8777/api/v1/timeprog/1\" -H \"accept: application/json\" -H \"Content-Type: application/json\" -d \"{  \\\"index\\\": 1,  \\\"name\\\": \\\"Zirkulationspumpe\\\",  ... }\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/timeprog/1\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"index\": 1,\n  \"name\": \"Zirkulationspumpe\",\n  \"ead\": 7,\n  \"nos\": 2,\n  \"ste\": 15,\n  \"nod\": 7,\n  \"entries\": [\n    [\n      {\n        \"state\": 0,\n        \"start\": \"00:00\",\n        \"end\": \"06:00\"\n      },\n      {\n        \"state\": 1,\n        \"start\": \"06:00\",\n        \"end\": \"09:00\"\n      },\n      {...},\n      {...},\n      {...},\n      {...},\n      {...}\n    ],\n    [...],\n    [...],\n    [...],\n    [...],\n    [...],\n    [...]\n  ]\n}\n</code></pre>\n<h4>GET /api/v1/timeprog/&lt;int:id&gt;/&lt;int:day&gt;/&lt;int:num&gt;</h4>\n<p>Returns a specific time program entry of the heat pump.</p>\n<p><strong>Parameter:</strong></p>\n<ul>\n<li><strong>&lt;int:num&gt;</strong>: The number of the time program entry (of the specified day).</li>\n<li><strong>&lt;int:day&gt;</strong>: The day of the time program entry (inside the specified time program).</li>\n<li><strong>&lt;int:id&gt;</strong>:  The time program index.</li>\n</ul>\n<p><strong>Sample Curl:</strong></p>\n<pre><code>curl -X GET \"http://localhost:8777/api/v1/timeprog/1/1/1\" -H \"accept: application/json\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/timeprog/1/1/1\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"state\": 1,\n  \"start\": \"06:00\",\n  \"end\": \"08:00\"\n}\n</code></pre>\n<h3>PUT /api/v1/timeprog/&lt;int:id&gt;/&lt;int:day&gt;/&lt;int:num&gt;</h3>\n<p>Sets a specific time program entry of the heat pump.</p>\n<p><strong>Parameter:</strong></p>\n<ul>\n<li><strong>&lt;int:num&gt;</strong>: The number of the time program entry (of the specified day).</li>\n<li><strong>&lt;int:day&gt;</strong>: The day of the time program entry (inside the specified time program).</li>\n<li><strong>&lt;int:id&gt;</strong>:  The time program index.</li>\n</ul>\n<p><strong>Sample Payload:</strong></p>\n<pre><code>{\n  \"state\": 1,\n  \"start\": \"06:00\",\n  \"end\": \"08:00\"\n}\n</code></pre>\n<p><strong>Sample Curl:</strong></p>\n<pre><code>curl -X PUT \"http://localhost:8777/api/v1/timeprog/1/1/1\" -H \"accept: application/json\" -H \"Content-Type: application/json\" -d \"{  \\\"state\\\": 1,  \\\"start\\\": \\\"06:00\\\",  \\\"end\\\": \\\"08:00\\\"}\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/timeprog/1/1/1\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"state\": 1,\n  \"start\": \"06:00\",\n  \"end\": \"08:00\"\n}\n</code></pre>\n<h3>GET /api/v1/param</h3>\n<p>Returns the current value of a subset or all known heat pump parameters.</p>\n<p><strong>Sample Curl:</strong></p>\n<p>Complete list of all known heat pump parameters:</p>\n<pre><code>curl -X GET \"http://localhost:8777/api/v1/param/\" -H \"accept: application/json\"\n</code></pre>\n<p>Subset of the known heat pump parameters:</p>\n<pre><code>curl -X GET \"http://localhost:8777/api/v1/param/?HKR%20Soll_Raum&amp;Temp.%20Aussen&amp;Stoerung\" -H \"accept: application/json\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<p>Complete list of all known heat pump parameters:</p>\n<pre><code>http://localhost:8777/api/v1/param/\n</code></pre>\n<p>Subset of the known heat pump parameters:</p>\n<pre><code>http://localhost:8777/api/v1/param/?HKR%20Soll_Raum&amp;Temp.%20Aussen&amp;Stoerung\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"HKR Soll_Raum\": 23,\n  \"Stoerung\": false,\n  \"Temp. EQ_Austritt\": 4.7,\n  \"Temp. EQ_Eintritt\": 6.1,\n  \"Temp. Ruecklauf\": 27.7,\n  \"Temp. Vorlauf\": 27.8,\n  \"Temp. Brauchwasser\": 50.1,\n  \"Temp. Aussen verzoegert\": 4.9,\n  \"Temp. Aussen\": 4.9,\n  ...\n}\n</code></pre>\n<p><em>Remark: A list of available Heliotherm heat pump parameters can be found\n<a href=\"https://htheatpump.readthedocs.io/en/latest/htparams.html\" rel=\"nofollow\">here</a>.</em></p>\n<h3>PUT /api/v1/param</h3>\n<p>Sets the current value of several heat pump parameters.</p>\n<p><strong>Sample Payload:</strong></p>\n<pre><code>{\n  \"Betriebsart\": 1,\n  \"HKR Soll_Raum\": 21.5,\n  \"HKR Aufheiztemp. (K)\": 3,\n  \"HKR Absenktemp. (K)\": -3,\n  \"WW Minimaltemp.\": 15,\n  \"WW Normaltemp.\": 50\n}\n</code></pre>\n<p><strong>Sample Curl:</strong></p>\n<pre><code>curl -X PUT \"http://localhost:8777/api/v1/param/\" -H \"accept: application/json\" -H \"Content-Type: application/json\" -d \"{  \\\"Betriebsart\\\": 1,  \\\"HKR Soll_Raum\\\": 21.5,  ... }\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/param/\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"Betriebsart\": 1,\n  \"HKR Soll_Raum\": 21.5,\n  \"HKR Aufheiztemp. (K)\": 3,\n  \"HKR Absenktemp. (K)\": -3,\n  \"WW Minimaltemp.\": 15,\n  \"WW Normaltemp.\": 50\n}\n</code></pre>\n<p><em>Remark: A list of available Heliotherm heat pump parameters can be found\n<a href=\"https://htheatpump.readthedocs.io/en/latest/htparams.html\" rel=\"nofollow\">here</a>.</em></p>\n<h3>GET /api/v1/param/&lt;string:name&gt;</h3>\n<p>Returns the current value of a specific heat pump parameter.</p>\n<p><strong>Parameter:</strong></p>\n<ul>\n<li><strong>&lt;string:name&gt;</strong>: The parameter name.</li>\n</ul>\n<p><strong>Sample Curl:</strong></p>\n<pre><code>curl -X GET \"http://localhost:8777/api/v1/param/Temp.%20Aussen\" -H \"accept: application/json\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/param/Temp.%20Aussen\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"value\": 4.9\n}\n</code></pre>\n<p><em>Remark: A list of available Heliotherm heat pump parameters can be found\n<a href=\"https://htheatpump.readthedocs.io/en/latest/htparams.html\" rel=\"nofollow\">here</a>.</em></p>\n<h3>PUT /api/v1/param/&lt;string:name&gt;</h3>\n<p>Sets the current value of a specific heat pump parameter.</p>\n<p><strong>Parameter:</strong></p>\n<ul>\n<li><strong>&lt;string:name&gt;</strong>: The parameter name.</li>\n</ul>\n<p><strong>Sample Payload:</strong></p>\n<pre><code>{\n  \"value\": 22.5\n}\n</code></pre>\n<p><strong>Sample Curl:</strong></p>\n<pre><code>curl -X PUT \"http://localhost:8777/api/v1/param/HKR%20Soll_Raum\" -H \"accept: application/json\" -H \"Content-Type: application/json\" -d \"{  \\\"value\\\": 22.5}\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/param/HKR%20Soll_Raum\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"value\": 22.5\n}\n</code></pre>\n<p><em>Remark: A list of available Heliotherm heat pump parameters can be found\n<a href=\"https://htheatpump.readthedocs.io/en/latest/htparams.html\" rel=\"nofollow\">here</a>.</em></p>\n<h3>GET /api/v1/fastquery</h3>\n<p>Performs a fast query of a subset or all heat pump parameters representing a \"MP\" data point.</p>\n<p><strong>Sample Curl:</strong></p>\n<p>Complete list of all known heat pump parameters representing a \"MP\" data point:</p>\n<pre><code>curl -X GET \"http://localhost:8777/api/v1/fastquery/\" -H \"accept: application/json\"\n</code></pre>\n<p>Subset of the known heat pump parameters representing a \"MP\" data point:</p>\n<pre><code>curl -X GET \"http://localhost:8777/api/v1/fastquery/?Stoerung&amp;Temp.%20Vorlauf&amp;Warmwasservorrang\" -H \"accept: application/json\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<p>Complete list of all known heat pump parameters representing a \"MP\" data point:</p>\n<pre><code>http://localhost:8777/api/v1/fastquery/\n</code></pre>\n<p>Subset of the known heat pump parameters representing a \"MP\" data point:</p>\n<pre><code>http://localhost:8777/api/v1/fastquery/?Stoerung&amp;Temp.%20Vorlauf&amp;Warmwasservorrang\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"HKR_Sollwert\": 32.2,\n  \"Verdichteranforderung\": 3,\n  \"Frischwasserpumpe\": 0,\n  \"FWS Stroemungsschalter\": false,\n  \"Stoerung\": false,\n  \"Verdichter\": true,\n  \"Zirkulationspumpe WW\": false,\n  ...\n}\n</code></pre>\n<p><em>Remark: A list of available Heliotherm heat pump parameters can be found\n<a href=\"https://htheatpump.readthedocs.io/en/latest/htparams.html\" rel=\"nofollow\">here</a>.</em></p>\n<h3>GET /api/v1/fastquery/&lt;string:name&gt;</h3>\n<p>Performs a fast query of a specific heat pump parameter which represents a \"MP\" data point.</p>\n<p><strong>Parameter:</strong></p>\n<ul>\n<li><strong>&lt;string:name&gt;</strong>: The parameter name (representing a \"MP\" data point).</li>\n</ul>\n<p><strong>Sample Curl:</strong></p>\n<pre><code>curl -X GET \"http://localhost:8777/api/v1/fastquery/Verdichter\" -H \"accept: application/json\"\n</code></pre>\n<p><strong>Sample Request URL:</strong></p>\n<pre><code>http://localhost:8777/api/v1/fastquery/Verdichter\n</code></pre>\n<p><strong>Sample Response:</strong></p>\n<pre><code>{\n  \"value\": true\n}\n</code></pre>\n<p><em>Remark: A list of available Heliotherm heat pump parameters can be found\n<a href=\"https://htheatpump.readthedocs.io/en/latest/htparams.html\" rel=\"nofollow\">here</a>.</em></p>\n<h2>Installation</h2>\n<p>You can install or upgrade <code>HtREST</code> with:</p>\n<pre><code>$ pip install HtREST --upgrade\n</code></pre>\n<p>Or you can install from source with:</p>\n<pre><code>$ git clone https://github.com/dstrigl/HtREST.git\n$ cd HtREST\n$ python setup.py install\n</code></pre>\n<h2>Usage</h2>\n<pre><code>usage: htrest [-h] [-d DEVICE] [-b {9600,19200,38400,57600,115200}]\n              [--host HOST] [--port PORT] [--user USER] [--bool-as-int]\n              [--logging-config LOGGING_CONFIG] [--debug] [--read-only]\n              [--no-param-verification]\n\nHeliotherm heat pump REST API server\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d DEVICE, --device DEVICE\n                        the serial device on which the heat pump is connected,\n                        default: /dev/ttyUSB0\n  -b {9600,19200,38400,57600,115200}, --baudrate {9600,19200,38400,57600,115200}\n                        baudrate of the serial connection (same as configured\n                        on the heat pump), default: 115200\n  --host HOST           the hostname to listen on, set to \"0.0.0.0\" to have\n                        the server available externally as well, default:\n                        127.0.0.1\n  --port PORT           the port of the web server, default: 8777\n  --user USER           the username and password for the basic access\n                        authentication in the form \"&lt;username&gt;:&lt;password&gt;\",\n                        default:\n  --bool-as-int         boolean values are treated as integers (with false\n                        equivalent to 0 and true equivalent to 1)\n  --logging-config LOGGING_CONFIG\n                        the filename under which the logging configuration can\n                        be found, default:\n                        /home/pi/prog/HtREST/htrest/logging.conf\n  --debug               enable Flask debug mode\n  --read-only           disable write access to the heat pump\n  --no-param-verification\n                        disable all parameter verification actions\n</code></pre>\n<h3>Example</h3>\n<pre><code>$ htrest -d /dev/ttyUSB0 -b 115200 --host 192.168.11.99 --port 8777 --read-only\nHTHEATPUMP: load parameter definitions from: /home/pi/venv/htrest/lib/python3.7/site-packages/htheatpump-1.2.4-py3.7.egg/htheatpump/htparams.csv\nStart Heliotherm heat pump REST API server v0.1.8.\nNamespace(baudrate=115200, bool_as_int=False, debug=False, device='/dev/ttyUSB0', host='192.168.11.99', logging_config='/home/pi/prog/HtREST/htrest/logging.conf', no_param_verification=False, port=8777, read_only=True, user='')\n2020-04-18 12:36:15,834 INFO [htrest.app] open connection to heat pump (&lt;htheatpump.htheatpump.HtHeatpump object at 0xb5dd61f0&gt;)\n2020-04-18 12:36:15,873 INFO [htrest.app] successfully connected to heat pump #123456\n2020-04-18 12:36:15,904 INFO [htrest.app] software version = 3.0.20 (273)\n2020-04-18 12:36:15,950 INFO [htrest.app] *** created Flask app &lt;Flask 'htrest.app'&gt; with config &lt;Config {'ENV': 'production', 'DEBUG': False, 'TESTING': False, 'PROPAGATE_EXCEPTIONS': None, 'PRESERVE_CONTEXT_ON_EXCEPTION': None, 'SECRET_KEY': None, 'PERMANENT_SESSION_LIFETIME': datetime.timedelta(days=31), 'USE_X_SENDFILE': False, 'SERVER_NAME': None, 'APPLICATION_ROOT': '/', 'SESSION_COOKIE_NAME': 'session', 'SESSION_COOKIE_DOMAIN': None, 'SESSION_COOKIE_PATH': None, 'SESSION_COOKIE_HTTPONLY': True, 'SESSION_COOKIE_SECURE': False, 'SESSION_COOKIE_SAMESITE': None, 'SESSION_REFRESH_EACH_REQUEST': True, 'MAX_CONTENT_LENGTH': None, 'SEND_FILE_MAX_AGE_DEFAULT': datetime.timedelta(seconds=43200), 'TRAP_BAD_REQUEST_ERRORS': None, 'TRAP_HTTP_EXCEPTIONS': False, 'EXPLAIN_TEMPLATE_LOADING': False, 'PREFERRED_URL_SCHEME': 'http', 'JSON_AS_ASCII': True, 'JSON_SORT_KEYS': True, 'JSONIFY_PRETTYPRINT_REGULAR': False, 'JSONIFY_MIMETYPE': 'application/json', 'TEMPLATES_AUTO_RELOAD': None, 'MAX_COOKIE_SIZE': 4093, 'SWAGGER_UI_DOC_EXPANSION': 'list', 'RESTX_VALIDATE': True, 'RESTX_MASK_SWAGGER': False, 'ERROR_404_HELP': False, 'BUNDLE_ERRORS': True}&gt;\nMap([&lt;Rule '/api/v1/faultlist/size' (OPTIONS, HEAD, GET) -&gt; api.faultlist_fault_list_size&gt;,\n &lt;Rule '/api/v1/faultlist/last' (OPTIONS, HEAD, GET) -&gt; api.faultlist_last_fault&gt;,\n &lt;Rule '/api/v1/swagger.json' (OPTIONS, HEAD, GET) -&gt; api.specs&gt;,\n &lt;Rule '/api/v1/faultlist/' (OPTIONS, HEAD, GET) -&gt; api.faultlist_fault_list&gt;,\n &lt;Rule '/api/v1/fastquery/' (OPTIONS, HEAD, GET) -&gt; api.fastquery_fast_query_list&gt;,\n &lt;Rule '/api/v1/datetime/' (PUT, OPTIONS, HEAD, GET) -&gt; api.datetime_date_time&gt;,\n &lt;Rule '/api/v1/timeprog/' (OPTIONS, HEAD, GET) -&gt; api.timeprog_time_progs&gt;,\n &lt;Rule '/api/v1/device/' (OPTIONS, HEAD, GET) -&gt; api.device_device&gt;,\n &lt;Rule '/api/v1/param/' (PUT, OPTIONS, HEAD, GET) -&gt; api.param_param_list&gt;,\n &lt;Rule '/api/v1/' (OPTIONS, HEAD, GET) -&gt; api.doc&gt;,\n &lt;Rule '/api/v1/' (OPTIONS, HEAD, GET) -&gt; api.root&gt;,\n &lt;Rule '/api/v1/faultlist/&lt;id&gt;' (OPTIONS, HEAD, GET) -&gt; api.faultlist_fault_entry&gt;,\n &lt;Rule '/api/v1/fastquery/&lt;name&gt;' (OPTIONS, HEAD, GET) -&gt; api.fastquery_fast_query&gt;,\n &lt;Rule '/api/v1/timeprog/&lt;id&gt;/&lt;day&gt;/&lt;num&gt;' (PUT, OPTIONS, HEAD, GET) -&gt; api.timeprog_time_prog_entry&gt;,\n &lt;Rule '/api/v1/timeprog/&lt;id&gt;' (PUT, OPTIONS, HEAD, GET) -&gt; api.timeprog_time_prog&gt;,\n &lt;Rule '/api/v1/param/&lt;name&gt;' (PUT, OPTIONS, HEAD, GET) -&gt; api.param_param&gt;,\n &lt;Rule '/swaggerui/&lt;filename&gt;' (OPTIONS, HEAD, GET) -&gt; restx_doc.static&gt;,\n &lt;Rule '/static/&lt;filename&gt;' (OPTIONS, HEAD, GET) -&gt; static&gt;])\n * Serving Flask app \"htrest.app\" (lazy loading)\n * Environment: production\n   WARNING: This is a development server. Do not use it in a production deployment.\n   Use a production WSGI server instead.\n * Debug mode: off\n2020-03-31 12:58:12,047 INFO [htrest.apis.param] *** [GET] http://192.168.11.99:8777/api/v1/param/HKR%20Soll_Raum -- name='HKR Soll_Raum'\n2020-03-31 12:58:12,174 INFO [htrest.apis.param] *** [GET] http://192.168.11.99:8777/api/v1/param/Betriebsart -- name='Betriebsart'\n...\n</code></pre>\n<h2>License</h2>\n<p>Distributed under the terms of the <a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\" rel=\"nofollow\">GNU General Public License v3</a>.</p>\n<h1>History</h1>\n<h2>0.1.9 (2020-04-20)</h2>\n<ul>\n<li>Fixed <em>flake8</em> errors.</li>\n</ul>\n<h2>0.1.8 (2020-04-20)</h2>\n<ul>\n<li>Added support for Python 3.8.</li>\n<li>Bumped <code>htheatpump</code> from <code>1.2.3</code> to <code>1.1.4</code>.</li>\n<li>Some minor cleanup and improvements.</li>\n<li>Changed default port of the HtREST application to <code>8777</code>.</li>\n<li>Resource <code>/api/v1/param</code> and <code>/api/v1/fastquery</code> are now supports the possibility to request\nfor a specific subset of parameters.</li>\n<li>Resource <code>/api/v1/fastquery</code> now also supports the possibility to treat boolean values as\nintegers (arg <code>--bool-as-int</code>).</li>\n<li>Changed log statements to the form with the preferred and well-known <code>%s</code> (and <code>%d</code>, <code>%f</code>, etc.)\nstring formatting indicators (due to performance reasons).</li>\n</ul>\n<h2>0.1.7 (2020-04-01)</h2>\n<ul>\n<li>Fixed wrong uploaded package on PyPi.</li>\n</ul>\n<h2>0.1.6 (2020-03-31)</h2>\n<ul>\n<li>Updated to <code>htheatpump v1.2.3</code>, which now includes several helper scripts (e.g. <code>htcomplparams</code>).</li>\n<li>Added possibility to disable all parameter verification actions (arg <code>--no-param-verification</code>).</li>\n<li>Changed behaviour: No reconnect of the serial connection will be performed for each request,\nbecause each <code>login()</code> call during a request will automatically try a reconnect on failure.</li>\n<li>Clean-up of <code>setup.py</code> and <code>MANIFEST.in</code>.</li>\n</ul>\n<h2>0.1.5 (2020-03-29)</h2>\n<ul>\n<li>Adapted logging statements and default log levels.</li>\n<li>Python code reformatting using <em>Black</em>.</li>\n<li>Added possibility so that boolean values can be treated as integers (arg <code>--bool-as-int</code>).</li>\n<li>Fixed unsynchronized access to <code>HtHeatpump</code>, which results in a serial communication error.</li>\n<li>Changed package requirements structure; some changes in <code>setup.py</code>, <code>setup.cfg</code>, <code>tox.ini</code>, etc.</li>\n</ul>\n<h2>0.1.4 (2020-03-17)</h2>\n<ul>\n<li>Fixed wrong uploaded package on PyPi.</li>\n</ul>\n<h2>0.1.3 (2020-03-17)</h2>\n<ul>\n<li>Fixed missing file <code>logging.conf</code>.</li>\n<li>Corrected usage of host and port for the web server.</li>\n</ul>\n<h2>0.1.2 (2020-02-18)</h2>\n<ul>\n<li>Fixed wrong version definition.</li>\n</ul>\n<h2>0.1.1 (2020-02-18)</h2>\n<ul>\n<li>Fixed some errors in the project packaging.</li>\n</ul>\n<h2>0.1.0 (2020-02-18)</h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n\n          </div>"}, "last_serial": 7061098, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "de3930153797fe1273b515bd6c573994", "sha256": "f3d06bdd6828ccf86c5820bafa93f975be9312d9b01a413b47822d4ad5c90f00"}, "downloads": -1, "filename": "htrest-0.1.2.tar.gz", "has_sig": false, "md5_digest": "de3930153797fe1273b515bd6c573994", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19091, "upload_time": "2020-02-18T19:44:19", "upload_time_iso_8601": "2020-02-18T19:44:19.422871Z", "url": "https://files.pythonhosted.org/packages/e5/6b/9f4d6afab0cba28f7acfcae1bbef4e3e34c5a5588483bd421302266cb04d/htrest-0.1.2.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "0d8ebe3a6c61eb6cf19587c8f16dfdb8", "sha256": "6601c0c051aa2e867c1fbea5deabc54299b109b0fe8621e885e381a1f5a1760e"}, "downloads": -1, "filename": "htrest-0.1.4.tar.gz", "has_sig": false, "md5_digest": "0d8ebe3a6c61eb6cf19587c8f16dfdb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20030, "upload_time": "2020-03-17T15:57:09", "upload_time_iso_8601": "2020-03-17T15:57:09.834431Z", "url": "https://files.pythonhosted.org/packages/6b/60/7fe077799d1e5370150127dbd9981e3d860088febcf1682a1339d1fa3dda/htrest-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "70a151bb9e5fdb0760cd86cea8058f12", "sha256": "0807df340b849f9557c02a68c56ed2ddd22afb00a18a1492279439ccdef36f59"}, "downloads": -1, "filename": "htrest-0.1.5.tar.gz", "has_sig": false, "md5_digest": "70a151bb9e5fdb0760cd86cea8058f12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22567, "upload_time": "2020-03-29T15:05:20", "upload_time_iso_8601": "2020-03-29T15:05:20.611172Z", "url": "https://files.pythonhosted.org/packages/0e/8f/b7a345ac1719002aef8ded778707ad1963b2b5ba816e6c9de521299acc66/htrest-0.1.5.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "09256afdad4ec192ae11cf73bfb2ce21", "sha256": "5155b70428f01bc86ad10f20f9555b9166b0e970eab29318d1cc5cc71fe9ace6"}, "downloads": -1, "filename": "htrest-0.1.7.tar.gz", "has_sig": false, "md5_digest": "09256afdad4ec192ae11cf73bfb2ce21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25755, "upload_time": "2020-04-01T06:05:03", "upload_time_iso_8601": "2020-04-01T06:05:03.380181Z", "url": "https://files.pythonhosted.org/packages/45/00/24e293dfa6b417f5aa319e276048b570e1e9ae87b9c7f4ee75c7e7d78839/htrest-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "df5fee1c05249a1c1622f8e0db7d791d", "sha256": "64ffc870db3a4e6d94a73534f123449edd299e9f5efe54e50c4ce0a9a7c2bbb4"}, "downloads": -1, "filename": "htrest-0.1.8.tar.gz", "has_sig": false, "md5_digest": "df5fee1c05249a1c1622f8e0db7d791d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27316, "upload_time": "2020-04-20T15:34:54", "upload_time_iso_8601": "2020-04-20T15:34:54.017366Z", "url": "https://files.pythonhosted.org/packages/93/d1/e974715b7c383a48bdb30a3104fde1ab0aa903255a6c02f7f880c2e78ecd/htrest-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "3e3c97bd38cce1c15a7d880ea9aef5fb", "sha256": "30c8a55aecaff5309cd1e1c67f812e8a3dff7d1eb1ebdbdfd20ed41eb2b3bca2"}, "downloads": -1, "filename": "htrest-0.1.9.tar.gz", "has_sig": false, "md5_digest": "3e3c97bd38cce1c15a7d880ea9aef5fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27416, "upload_time": "2020-04-20T15:50:58", "upload_time_iso_8601": "2020-04-20T15:50:58.372919Z", "url": "https://files.pythonhosted.org/packages/f9/7d/ab3e3b8a8270eea652cd058c583c8c5967b2d5ee26804a0695bf81c5ad53/htrest-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3e3c97bd38cce1c15a7d880ea9aef5fb", "sha256": "30c8a55aecaff5309cd1e1c67f812e8a3dff7d1eb1ebdbdfd20ed41eb2b3bca2"}, "downloads": -1, "filename": "htrest-0.1.9.tar.gz", "has_sig": false, "md5_digest": "3e3c97bd38cce1c15a7d880ea9aef5fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27416, "upload_time": "2020-04-20T15:50:58", "upload_time_iso_8601": "2020-04-20T15:50:58.372919Z", "url": "https://files.pythonhosted.org/packages/f9/7d/ab3e3b8a8270eea652cd058c583c8c5967b2d5ee26804a0695bf81c5ad53/htrest-0.1.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:12 2020"}