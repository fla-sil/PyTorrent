{"info": {"author": "UNKNOWN", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": [], "description": "# Mapillary: Python API\r\n\r\n***\r\n\r\nA big thanks to the guys at [@Mapillary] for publishing many great [Python tools for Mapillary].\r\n\r\n## Install\r\n\r\nLatest version from **Github Repo**\r\n\r\n```bash\r\n$ git clone https://github.com/DenisCarriere/mapillary.git\r\n$ cd mapillary_tools\r\n$ python setup.py install\r\n```\r\n\r\nStable version from **PyPi**\r\n\r\n```bash\r\n$ pip install mapillary\r\n```\r\n\r\n## Compatibility\r\n\r\nMapillary API is tested on the following Python versions:\r\n\r\n- 2.7\r\n\r\n## Command Line Interface\r\n\r\n```bash\r\n$ mapillary -h\r\n```\r\n\r\n|    Parameter       |     Description      |\r\n|:-------------------|:---------------------|\r\n| `command`          | Mapillary API        |\r\n| `input`            | Input: File Path     |\r\n| `-o`, `--out`      | Output: File Path    |\r\n| `-e`, `--email`    | Mapillary: Email     |\r\n| `-u`, `--username` | Mapillary: Username  |\r\n| `-p`, `--password` | Mapillary: Password  |\r\n| `-g`, `--gpx`      | GPX Track: File Path |\r\n| `-b`, `--bearing`  | GPX: Bearing offset  |\r\n| `-t`, `--time`     | GPX: Time offset     |\r\n| `-h`, `--help`     | Help File            |\r\n\r\n***\r\n\r\n## Geotag Photos\r\n\r\nThis process will add GPS information to all photos inside a folder correlated from a GPX Track.\r\n\r\n**WARNING** This will overwrite any existing GPS EXIF to the existing files \r\n\r\n```bash\r\n$ mapillary geotag \"<File Path>\" --gpx \"<GPX File Path>\"\r\n```\r\n\r\n### Bearing Offset\r\n\r\nIf your camera was pointed to the right (90 Degrees), you can include a `bearing` offset to correct the **GPSImageDirection**\r\n\r\n```bash\r\n$ mapillary geotag \"<File Path>\" --gpx \"<GPX File Path>\" --bearing 90\r\n```\r\n\r\n### Time Offset\r\n\r\nIf the **Timestamp** of your GPS and camera are not in sync, you can include a `time` offset (Seconds) to adjust the **GPSDateTime**.\r\n\r\n```bash\r\n$ mapillary geotag \"<File Path>\" --gpx \"<GPX File Path>\" --time 2\r\n```\r\n\r\n### Successful GeoTag\r\n\r\nA typical output for a successful Geotag process\r\n\r\n```bash\r\n$ mapillary geotag \"100GOPRO\" -g \"GoPro 4.gpx\"\r\nSaving file: 100GOPRO/G0018624.JPG\r\nSaving file: 100GOPRO/G0028783.JPG\r\nSaving file: 100GOPRO/G0018600.JPG\r\nSaving file: 100GOPRO/G0028752.JPG\r\n...\r\n```\r\n***\r\n\r\n## Manual Uploads\r\n\r\nThe Standard manual upload method requires your Mapillary credential\r\n\r\n```bash\r\n$ mapillary upload \"<File Path>\" -u \"<Username>\" \\\r\n-e \"<your@email.com>\" -p \"<Password>\"\r\n```\r\n\r\n### Using Environment Variables\r\n\r\nUsing environment variables you can send your Mapillary credentials safely.\r\n\r\n1. Connect the the following URL for to retrieve the **Hashes**.\r\n\r\n http://api.mapillary.com/v1/u/uploadhashes\r\n\r\n2. Export env variables `MAPILLARY_PERMISSION_HASH` & `MAPILLARY_SIGNATURE_HASH`, you can edit `~/.bashrc` to store them to your terminal.\r\n\r\n3. Use the Mapillary `upload` command with your `Username`.\r\n\r\n```bash\r\n$ export $MAPILLARY_PERMISSION_HASH=<permission_hash>\r\n$ export $MAPILLARY_SIGNATURE_HASH=<signature_hash>\r\n$ mapillary upload \"<File Path>\" -u \"<Username>\"\r\n```\r\n\r\n### Successful Upload\r\n\r\nA typical successful upload will look like the following:\r\n\r\n```bash\r\n$ mapillary upload \"GoPro\" -u \"deniscarriere\"\r\n\r\n[SUCCESS] Mapillary connection established.\r\nUploading sequence 3e41e334-3a50-4e41-8206-dae2a4d24e5a.\r\nUploading: G0047731.JPG\r\nUploading: G0047747.JPG\r\n Uploading: G0047736.JPG\r\nUploading: G0047742.JPG\r\nSuccess: G0047736.JPG\r\n...\r\nSuccess: G0047768.JPG\r\nSuccess: G0047751.JPG\r\n===\r\nFinalizing upload will submit all successful uploads and ignore all failed.\r\nIf all files were marked as successful, everything is fine, just press 'y'.\r\nFinalize upload? [y/n]: y\r\nUpload a DONE file to tell the backend that the sequence \r\nis all uploaded and ready to submit.\r\nUploading: DONE\r\nSuccess: DONE\r\nDone uploading.\r\n```\r\n\r\n[Python tools for Mapillary]: https://github.com/mapillary/mapillary_tools/tree/master/python\r\n[@Mapillary]: https://twitter.com/mapillary", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/mapillary/mapillary_tools/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mapillary/mapillary_tools", "keywords": "mapillary", "license": "The MIT License (MIT)\r\n\r\nCopyright (c) 2015 Denis\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.", "maintainer": "", "maintainer_email": "", "name": "mapillary", "package_url": "https://pypi.org/project/mapillary/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mapillary/", "project_urls": {"Download": "https://github.com/mapillary/mapillary_tools/tarball/master", "Homepage": "https://github.com/mapillary/mapillary_tools"}, "release_url": "https://pypi.org/project/mapillary/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Useful tools and scripts related to Mapillary", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Mapillary: Python API\n<br>\n<br>***\n<br>\n<br>A big thanks to the guys at [@Mapillary] for publishing many great [Python tools for Mapillary].\n<br>\n<br>## Install\n<br>\n<br>Latest version from **Github Repo**\n<br>\n<br>```bash\n<br>$ git clone https://github.com/DenisCarriere/mapillary.git\n<br>$ cd mapillary_tools\n<br>$ python setup.py install\n<br>```\n<br>\n<br>Stable version from **PyPi**\n<br>\n<br>```bash\n<br>$ pip install mapillary\n<br>```\n<br>\n<br>## Compatibility\n<br>\n<br>Mapillary API is tested on the following Python versions:\n<br>\n<br>- 2.7\n<br>\n<br>## Command Line Interface\n<br>\n<br>```bash\n<br>$ mapillary -h\n<br>```\n<br>\n<br>|    Parameter       |     Description      |\n<br>|:-------------------|:---------------------|\n<br>| `command`          | Mapillary API        |\n<br>| `input`            | Input: File Path     |\n<br>| `-o`, `--out`      | Output: File Path    |\n<br>| `-e`, `--email`    | Mapillary: Email     |\n<br>| `-u`, `--username` | Mapillary: Username  |\n<br>| `-p`, `--password` | Mapillary: Password  |\n<br>| `-g`, `--gpx`      | GPX Track: File Path |\n<br>| `-b`, `--bearing`  | GPX: Bearing offset  |\n<br>| `-t`, `--time`     | GPX: Time offset     |\n<br>| `-h`, `--help`     | Help File            |\n<br>\n<br>***\n<br>\n<br>## Geotag Photos\n<br>\n<br>This process will add GPS information to all photos inside a folder correlated from a GPX Track.\n<br>\n<br>**WARNING** This will overwrite any existing GPS EXIF to the existing files \n<br>\n<br>```bash\n<br>$ mapillary geotag \"&lt;File Path&gt;\" --gpx \"&lt;GPX File Path&gt;\"\n<br>```\n<br>\n<br>### Bearing Offset\n<br>\n<br>If your camera was pointed to the right (90 Degrees), you can include a `bearing` offset to correct the **GPSImageDirection**\n<br>\n<br>```bash\n<br>$ mapillary geotag \"&lt;File Path&gt;\" --gpx \"&lt;GPX File Path&gt;\" --bearing 90\n<br>```\n<br>\n<br>### Time Offset\n<br>\n<br>If the **Timestamp** of your GPS and camera are not in sync, you can include a `time` offset (Seconds) to adjust the **GPSDateTime**.\n<br>\n<br>```bash\n<br>$ mapillary geotag \"&lt;File Path&gt;\" --gpx \"&lt;GPX File Path&gt;\" --time 2\n<br>```\n<br>\n<br>### Successful GeoTag\n<br>\n<br>A typical output for a successful Geotag process\n<br>\n<br>```bash\n<br>$ mapillary geotag \"100GOPRO\" -g \"GoPro 4.gpx\"\n<br>Saving file: 100GOPRO/G0018624.JPG\n<br>Saving file: 100GOPRO/G0028783.JPG\n<br>Saving file: 100GOPRO/G0018600.JPG\n<br>Saving file: 100GOPRO/G0028752.JPG\n<br>...\n<br>```\n<br>***\n<br>\n<br>## Manual Uploads\n<br>\n<br>The Standard manual upload method requires your Mapillary credential\n<br>\n<br>```bash\n<br>$ mapillary upload \"&lt;File Path&gt;\" -u \"&lt;Username&gt;\" \\\n<br>-e \"&lt;your@email.com&gt;\" -p \"&lt;Password&gt;\"\n<br>```\n<br>\n<br>### Using Environment Variables\n<br>\n<br>Using environment variables you can send your Mapillary credentials safely.\n<br>\n<br>1. Connect the the following URL for to retrieve the **Hashes**.\n<br>\n<br> http://api.mapillary.com/v1/u/uploadhashes\n<br>\n<br>2. Export env variables `MAPILLARY_PERMISSION_HASH` &amp; `MAPILLARY_SIGNATURE_HASH`, you can edit `~/.bashrc` to store them to your terminal.\n<br>\n<br>3. Use the Mapillary `upload` command with your `Username`.\n<br>\n<br>```bash\n<br>$ export $MAPILLARY_PERMISSION_HASH=&lt;permission_hash&gt;\n<br>$ export $MAPILLARY_SIGNATURE_HASH=&lt;signature_hash&gt;\n<br>$ mapillary upload \"&lt;File Path&gt;\" -u \"&lt;Username&gt;\"\n<br>```\n<br>\n<br>### Successful Upload\n<br>\n<br>A typical successful upload will look like the following:\n<br>\n<br>```bash\n<br>$ mapillary upload \"GoPro\" -u \"deniscarriere\"\n<br>\n<br>[SUCCESS] Mapillary connection established.\n<br>Uploading sequence 3e41e334-3a50-4e41-8206-dae2a4d24e5a.\n<br>Uploading: G0047731.JPG\n<br>Uploading: G0047747.JPG\n<br> Uploading: G0047736.JPG\n<br>Uploading: G0047742.JPG\n<br>Success: G0047736.JPG\n<br>...\n<br>Success: G0047768.JPG\n<br>Success: G0047751.JPG\n<br>===\n<br>Finalizing upload will submit all successful uploads and ignore all failed.\n<br>If all files were marked as successful, everything is fine, just press 'y'.\n<br>Finalize upload? [y/n]: y\n<br>Upload a DONE file to tell the backend that the sequence \n<br>is all uploaded and ready to submit.\n<br>Uploading: DONE\n<br>Success: DONE\n<br>Done uploading.\n<br>```\n<br>\n<br>[Python tools for Mapillary]: https://github.com/mapillary/mapillary_tools/tree/master/python\n<br>[@Mapillary]: https://twitter.com/mapillary\n          </div>"}, "last_serial": 1415289, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "fcba91c559e6f4c355e45376a2718d8a", "sha256": "ebe1b6bd980b054ba9eac447cb2af9463f4e0255e78f14e24afb5916410de5a4"}, "downloads": -1, "filename": "mapillary-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fcba91c559e6f4c355e45376a2718d8a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 18576, "upload_time": "2015-02-08T00:44:15", "upload_time_iso_8601": "2015-02-08T00:44:15.626114Z", "url": "https://files.pythonhosted.org/packages/9b/c3/3948ffd67b4b58618e675b52f125815a9bf88c29a4dff5a23453fce438d1/mapillary-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee208ef343b61e6d5c99a6a72765ac6d", "sha256": "4f5c76fb745cb38765b8561392ff9bd067228ecfa35875de1dc2473282938f74"}, "downloads": -1, "filename": "mapillary-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ee208ef343b61e6d5c99a6a72765ac6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8582, "upload_time": "2015-02-08T00:44:13", "upload_time_iso_8601": "2015-02-08T00:44:13.475431Z", "url": "https://files.pythonhosted.org/packages/a0/7d/0ed4667ea0091ba894fe5af962b35e91c74155294a628bec411fc620dfce/mapillary-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "26661bd41df7730a052800fcdc1baa13", "sha256": "bda8591a7b646f46a8d47d64c862d9335cd46a2fad3629c1d63439ddfe5fe527"}, "downloads": -1, "filename": "mapillary-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "26661bd41df7730a052800fcdc1baa13", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 28840, "upload_time": "2015-02-08T19:12:44", "upload_time_iso_8601": "2015-02-08T19:12:44.759033Z", "url": "https://files.pythonhosted.org/packages/2c/29/0e7a1d89f87cbda825b13a4995bb5bc35dce805ca06799fa591ba7afc90d/mapillary-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39f1eabb6f06e2b8a46d46e23297e134", "sha256": "30aeb13b6aea0890a04103c23d008b22cf43eee66c615f94a4dc0ed1fc07b6ab"}, "downloads": -1, "filename": "mapillary-0.0.2.tar.gz", "has_sig": false, "md5_digest": "39f1eabb6f06e2b8a46d46e23297e134", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24666, "upload_time": "2015-02-08T19:12:42", "upload_time_iso_8601": "2015-02-08T19:12:42.617530Z", "url": "https://files.pythonhosted.org/packages/4d/19/ef8aaf2021e44a8c9a65265d6a752308ef6f92bdb5bcebae6b8b2ef1ae8f/mapillary-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "26661bd41df7730a052800fcdc1baa13", "sha256": "bda8591a7b646f46a8d47d64c862d9335cd46a2fad3629c1d63439ddfe5fe527"}, "downloads": -1, "filename": "mapillary-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "26661bd41df7730a052800fcdc1baa13", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 28840, "upload_time": "2015-02-08T19:12:44", "upload_time_iso_8601": "2015-02-08T19:12:44.759033Z", "url": "https://files.pythonhosted.org/packages/2c/29/0e7a1d89f87cbda825b13a4995bb5bc35dce805ca06799fa591ba7afc90d/mapillary-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39f1eabb6f06e2b8a46d46e23297e134", "sha256": "30aeb13b6aea0890a04103c23d008b22cf43eee66c615f94a4dc0ed1fc07b6ab"}, "downloads": -1, "filename": "mapillary-0.0.2.tar.gz", "has_sig": false, "md5_digest": "39f1eabb6f06e2b8a46d46e23297e134", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24666, "upload_time": "2015-02-08T19:12:42", "upload_time_iso_8601": "2015-02-08T19:12:42.617530Z", "url": "https://files.pythonhosted.org/packages/4d/19/ef8aaf2021e44a8c9a65265d6a752308ef6f92bdb5bcebae6b8b2ef1ae8f/mapillary-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:55 2020"}