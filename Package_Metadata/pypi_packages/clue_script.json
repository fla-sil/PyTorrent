{"info": {"author": "Rocky Burt", "author_email": "rocky@serverzen.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: WSGI"], "description": ".. -*-rst-*-\n\n=============\n clue_script\n=============\n\nOverview\n========\n\nclue_script is used for defining subcommands with a special focus on\nweb-style apps.  The functionality is inspired by the Django ``manage.py``\nscript.\n\nRequirements\n============\n\n  * Python 2.6 or 2.7 (not tested with Python 3.x)\n\n\nrunserver support (optional)\n----------------------------\n\n  * Paste\n  * argparse *(if deploying on Python < 2.7)*\n\n\nUsage\n=====\n\nA simple example to add a command that prints \"hello world\"::\n\n  from clue_script import command, Commander\n\n  @command\n  def helloworld():\n      print 'hello world'\n\n  if __name__ == '__main__':\n      Commander.scan(globals()).run()\n\nTo do a more complicated command you can use something similar to\nPython 2.7's ``argparse`` (also available on 2.6).\n::\n\n  import argparse\n  from clue_script import command, Commander\n\n  @command\n  def foo(*argv):\n      parser = argparse.ArgumentParser()\n      parser.add_argument('-x', help='simple test',\n                          default='yes', metavar='x')\n      ns = parser.parse_args(argv)\n      # do something\n\n  if __name__ == '__main__':\n      Commander.scan(globals()).run()\n\nProvided Commands\n=================\n\nThere are currently two provided command factories.\n\n  1. ``make_reloadable_server_command`` *(see above note about requirements for runserver)*\n\n  2. ``make_syncdb_command``\n\nA typical web app could use these commands as follows::\n\n  if __name__ == '__main__':\n      def createtables(session):\n          models.Base.metadata.create_all(session.bind)\n  \n      settings = init_settings()\n      commander = script.Commander([script.make_reloadable_server_command(make_app),\n                                    script.make_syncdb_command(settings['spitter.db_session_factory'],\n                                                               createtables)])\n      commander.scan(globals())\n      commander.run()\n\nRunning the script with no args will yield something similar to::\n\n  Commands:\n      runserver     Run a reloadable development web server.\n      syncdb        Update the database.\n\nCredits\n=======\n\n  * Developed and maintained by Rocky Burt <rocky AT serverzen DOT com>\n\n\n.. -*-rst-*-\n\nChanges\n=======\n\n0.3.1 (Jul-27-2011)\n-------------------\n\n  * Fixed silly bug where print_usage() was being called wrong\n\n0.3 (Jul-10-2011)\n-----------------\n\n  * Added rfoo support for launching a shell to connect with live-running\n    server\n    http://code.google.com/p/rfoo/\n\n  * Improved formatting of command usage\n\n  * Removed mostly useless make_syncdb command\n\n  * Made Commander.commands a little more exposed\n\n0.2.4 (Mar-3-2011)\n------------------\n\n  * Fixed problem where the non-reloader portion would shut down the\n    app if code was changed\n\n0.2.3 (Feb-20-2011)\n-------------------\n\n  * Renamed from ``Khufu-Script`` to ``clue_script``\n\n0.2.2 (Feb-16-2011)\n-------------------\n\n  * Updated project urls\n\n0.2.1 (Jan-26-2011)\n-------------------\n\n  * Fixed scan() method to return commander instance\n\n0.2 (Jan-3-2011)\n----------------\n\n  * first release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/clueproject/clue_script", "keywords": "web", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "clue_script", "package_url": "https://pypi.org/project/clue_script/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/clue_script/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/clueproject/clue_script"}, "release_url": "https://pypi.org/project/clue_script/0.3.1/", "requires_dist": null, "requires_python": null, "summary": "Easy utils for creating a script runner", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>clue_script is used for defining subcommands with a special focus on\nweb-style apps.  The functionality is inspired by the Django <tt>manage.py</tt>\nscript.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<blockquote>\n<ul>\n<li>Python 2.6 or 2.7 (not tested with Python 3.x)</li>\n</ul>\n</blockquote>\n<div id=\"runserver-support-optional\">\n<h3>runserver support (optional)</h3>\n<blockquote>\n<ul>\n<li>Paste</li>\n<li>argparse <em>(if deploying on Python &lt; 2.7)</em></li>\n</ul>\n</blockquote>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>A simple example to add a command that prints \u201chello world\u201d:</p>\n<pre>from clue_script import command, Commander\n\n@command\ndef helloworld():\n    print 'hello world'\n\nif __name__ == '__main__':\n    Commander.scan(globals()).run()\n</pre>\n<p>To do a more complicated command you can use something similar to\nPython 2.7\u2019s <tt>argparse</tt> (also available on 2.6).</p>\n<pre>import argparse\nfrom clue_script import command, Commander\n\n@command\ndef foo(*argv):\n    parser = argparse.ArgumentParser()\n    parser.add_argument('-x', help='simple test',\n                        default='yes', metavar='x')\n    ns = parser.parse_args(argv)\n    # do something\n\nif __name__ == '__main__':\n    Commander.scan(globals()).run()\n</pre>\n</div>\n<div id=\"provided-commands\">\n<h2>Provided Commands</h2>\n<p>There are currently two provided command factories.</p>\n<blockquote>\n<ol>\n<li><tt>make_reloadable_server_command</tt> <em>(see above note about requirements for runserver)</em></li>\n<li><tt>make_syncdb_command</tt></li>\n</ol>\n</blockquote>\n<p>A typical web app could use these commands as follows:</p>\n<pre>if __name__ == '__main__':\n    def createtables(session):\n        models.Base.metadata.create_all(session.bind)\n\n    settings = init_settings()\n    commander = script.Commander([script.make_reloadable_server_command(make_app),\n                                  script.make_syncdb_command(settings['spitter.db_session_factory'],\n                                                             createtables)])\n    commander.scan(globals())\n    commander.run()\n</pre>\n<p>Running the script with no args will yield something similar to:</p>\n<pre>Commands:\n    runserver     Run a reloadable development web server.\n    syncdb        Update the database.\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<blockquote>\n<ul>\n<li>Developed and maintained by Rocky Burt &lt;rocky AT serverzen DOT com&gt;</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"jul-27-2011\">\n<h3>0.3.1 (Jul-27-2011)</h3>\n<blockquote>\n<ul>\n<li>Fixed silly bug where print_usage() was being called wrong</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"jul-10-2011\">\n<h3>0.3 (Jul-10-2011)</h3>\n<blockquote>\n<ul>\n<li>Added rfoo support for launching a shell to connect with live-running\nserver\n<a href=\"http://code.google.com/p/rfoo/\" rel=\"nofollow\">http://code.google.com/p/rfoo/</a></li>\n<li>Improved formatting of command usage</li>\n<li>Removed mostly useless make_syncdb command</li>\n<li>Made Commander.commands a little more exposed</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"mar-3-2011\">\n<h3>0.2.4 (Mar-3-2011)</h3>\n<blockquote>\n<ul>\n<li>Fixed problem where the non-reloader portion would shut down the\napp if code was changed</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"feb-20-2011\">\n<h3>0.2.3 (Feb-20-2011)</h3>\n<blockquote>\n<ul>\n<li>Renamed from <tt><span class=\"pre\">Khufu-Script</span></tt> to <tt>clue_script</tt></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"feb-16-2011\">\n<h3>0.2.2 (Feb-16-2011)</h3>\n<blockquote>\n<ul>\n<li>Updated project urls</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"jan-26-2011\">\n<h3>0.2.1 (Jan-26-2011)</h3>\n<blockquote>\n<ul>\n<li>Fixed scan() method to return commander instance</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"jan-3-2011\">\n<h3>0.2 (Jan-3-2011)</h3>\n<blockquote>\n<ul>\n<li>first release</li>\n</ul>\n</blockquote>\n</div>\n</div>\n\n          </div>"}, "last_serial": 787518, "releases": {"0.2.3": [{"comment_text": "", "digests": {"md5": "aa02c115dbf218e9d601cdb680fa9d1a", "sha256": "2f91beec247b152a8405f5b91655bc2fae9771e806c0296ec09f924be9c7718c"}, "downloads": -1, "filename": "clue_script-0.2.3.tar.gz", "has_sig": false, "md5_digest": "aa02c115dbf218e9d601cdb680fa9d1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6290, "upload_time": "2011-02-21T01:28:48", "upload_time_iso_8601": "2011-02-21T01:28:48.671189Z", "url": "https://files.pythonhosted.org/packages/0d/13/8d360956892ffd6b3a07e9951225883d15855dfd4c3fdfa9bb3d432ec3df/clue_script-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "0096da7ba2ae8bffaa4033dd3ea72196", "sha256": "85a8f5258505514ecef8fd27c807deaa06b8d4460695759d67080e4dc9bf00bc"}, "downloads": -1, "filename": "clue_script-0.2.4.tar.gz", "has_sig": false, "md5_digest": "0096da7ba2ae8bffaa4033dd3ea72196", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6380, "upload_time": "2011-03-03T20:30:04", "upload_time_iso_8601": "2011-03-03T20:30:04.191311Z", "url": "https://files.pythonhosted.org/packages/2f/99/d63116f3006d79e23cfc25193c399985b82a5bed849b1e7068ed16aca8de/clue_script-0.2.4.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "6bb49c9e7fb3d83ec5af4a487ffa06a7", "sha256": "e1531c6321cdda4178c2b053c9e985e47f90e06083493e5c931b36cd2dbf40c0"}, "downloads": -1, "filename": "clue_script-0.3.tar.gz", "has_sig": false, "md5_digest": "6bb49c9e7fb3d83ec5af4a487ffa06a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7442, "upload_time": "2011-07-10T18:22:16", "upload_time_iso_8601": "2011-07-10T18:22:16.808707Z", "url": "https://files.pythonhosted.org/packages/eb/5c/ce4490afaf0b1daf71c64dd8f6141c48360617ff7287cdfe4f35ad5cae59/clue_script-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "a5b09c456ceddbab47c0f1a19f673b38", "sha256": "6cf32c97e18b9347428a9fb825baa63fe99d63f7fcd335d346d49ff66ef97e54"}, "downloads": -1, "filename": "clue_script-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a5b09c456ceddbab47c0f1a19f673b38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7495, "upload_time": "2011-07-27T13:54:32", "upload_time_iso_8601": "2011-07-27T13:54:32.496861Z", "url": "https://files.pythonhosted.org/packages/ba/1e/9f9bf0d3f0f2b70f8817a4240fd5fdcc567dee3b956768a15a0620cc59a7/clue_script-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a5b09c456ceddbab47c0f1a19f673b38", "sha256": "6cf32c97e18b9347428a9fb825baa63fe99d63f7fcd335d346d49ff66ef97e54"}, "downloads": -1, "filename": "clue_script-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a5b09c456ceddbab47c0f1a19f673b38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7495, "upload_time": "2011-07-27T13:54:32", "upload_time_iso_8601": "2011-07-27T13:54:32.496861Z", "url": "https://files.pythonhosted.org/packages/ba/1e/9f9bf0d3f0f2b70f8817a4240fd5fdcc567dee3b956768a15a0620cc59a7/clue_script-0.3.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:40 2020"}