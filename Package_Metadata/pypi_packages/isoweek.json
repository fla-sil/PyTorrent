{"info": {"author": "Gisle Aas", "author_email": "gisle@aas.no", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "ISO Week\n========\n\nThe isoweek module provide the class *Week*.  Instances represent specific weeks\nspanning Monday to Sunday.  There are 52 or 53 numbered weeks in a year.  Week\n1 is defined to be the first week with 4 or more days in January.\n\nIt's called isoweek because this is the week definition of ISO 8601.  This\nstandard also define a notation for identifying weeks; yyyyWww (where the \"W\"\nis a literal).  An example is \"2011W08\" which denotes the 8th week of year\n2011.  *Week* instances stringify to this form.\n\nSee also http://en.wikipedia.org/wiki/ISO_week_date\n\nThe *Week* instances are light weight and immutable with an interface similar\nto the datetime.date objects.  Example code::\n\n    from isoweek import Week\n    w = Week(2011, 20)\n    print \"Week %s starts on %s\" % (w, w.monday())\n\n    print \"Current week number is\", Week.thisweek().week\n    print \"Next week is\", Week.thisweek() + 1\n\nReference\n----------\n\nConstructor:\n\n*class* isoweek.Week(*year*, *week*)\n    All arguments are required.  Arguments should be ints.\n\n    If the week number isn't within the range of the given year,\n    the year is adjusted to make week number within range.  The\n    final year must be within range 1 to 9999.  If not ValueError\n    is raised.\n\nOther constructors, all class methods:\n\n*classmethod* Week.thisweek()\n    Return the current week (local time).\n\n*classmethod* Week.fromordinal(*ordinal*)\n    Return the week corresponding to the proleptic Gregorian ordinal,\n    where January 1 of year 1 starts the week with ordinal 1.\n\n*classmethod* Week.fromstring(*isostring*)\n    Return a week initialized from an ISO formatted string like \"2011W08\"\n    or \"2011-W08\".  Note that weeks always stringify back in the former\n    and more compact format.\n\n*classmethod* Week.withdate(*date*)\n    Return the week that contains the given datetime.date.\n\n*classmethod* Week.weeks_of_year(*year*)\n    Return an iterator over the weeks of the given year.\n\n*classmethod* Week.last_week_of_year(*year*)\n    Return the last week of the given year.\n\nInstance attributes (read-only):\n\nWeek.year\n    Between 1 and 9999 inclusive.\n\nWeek.week\n    Between 1 and 53 inclusive (52 for most years).\n\nSupported operations:\n\n     ====================     ==========================================================\n     Operation                Result\n     ====================     ==========================================================\n     week1 = week2 + int      week2 is int weeks removed from week1.\n     week1 = week2 - int      Computes week2 such that week2 + int == week1\n     int = week1 - week2      Computes int such that week2 + int == week1\n     week1 < week2            week1 is considered less than week2 when week1 precedes week2 in time.\n     ====================     ==========================================================\n\nInstance methods:\n\nWeek.replace(*year*, *week*)\n    Return a Week with the same value, except for those parameters\n    given new values by whichever keyword arguments are specified.\n\nWeek.toordinal()\n    Return the proleptic Gregorian ordinal the week, where January 1 of year 1\n    starts the first week.\n\nWeek.day(*num*)\n    Return the given day of week as a datetime.date object.\n    Day 0 is Monday.\n\nWeek.monday(), Week.tuesday(),.. Week.sunday()\n    Return the given day of week as a datetime.date object.\n\nWeek.days()\n    Return the 7 days of the week as a list.\n\nWeek.contains(day)\n    Check if the given datetime.date falls within the week.\n\nWeek.isoformat()\n    Return a string representing the week in ISO 8601 format; \"yyyyWww\".\n    For example Week(2011, 8).isoformat() == '2011W08'.\n\nWeek.__str__()\n    For a Week w, str(w) is equivalent to w.isoformat()\n\nWeek.__repr__()\n    Return a string like \"isoweek.Week(2011, 2)\".\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/gisle/isoweek", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "isoweek", "package_url": "https://pypi.org/project/isoweek/", "platform": "", "project_url": "https://pypi.org/project/isoweek/", "project_urls": {"Homepage": "http://github.com/gisle/isoweek"}, "release_url": "https://pypi.org/project/isoweek/1.3.3/", "requires_dist": null, "requires_python": "", "summary": "Objects representing a week", "version": "1.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The isoweek module provide the class <em>Week</em>.  Instances represent specific weeks\nspanning Monday to Sunday.  There are 52 or 53 numbered weeks in a year.  Week\n1 is defined to be the first week with 4 or more days in January.</p>\n<p>It\u2019s called isoweek because this is the week definition of ISO 8601.  This\nstandard also define a notation for identifying weeks; yyyyWww (where the \u201cW\u201d\nis a literal).  An example is \u201c2011W08\u201d which denotes the 8th week of year\n2011.  <em>Week</em> instances stringify to this form.</p>\n<p>See also <a href=\"http://en.wikipedia.org/wiki/ISO_week_date\" rel=\"nofollow\">http://en.wikipedia.org/wiki/ISO_week_date</a></p>\n<p>The <em>Week</em> instances are light weight and immutable with an interface similar\nto the datetime.date objects.  Example code:</p>\n<pre>from isoweek import Week\nw = Week(2011, 20)\nprint \"Week %s starts on %s\" % (w, w.monday())\n\nprint \"Current week number is\", Week.thisweek().week\nprint \"Next week is\", Week.thisweek() + 1\n</pre>\n<div id=\"reference\">\n<h2>Reference</h2>\n<p>Constructor:</p>\n<dl>\n<dt><em>class</em> isoweek.Week(<em>year</em>, <em>week</em>)</dt>\n<dd><p>All arguments are required.  Arguments should be ints.</p>\n<p>If the week number isn\u2019t within the range of the given year,\nthe year is adjusted to make week number within range.  The\nfinal year must be within range 1 to 9999.  If not ValueError\nis raised.</p>\n</dd>\n</dl>\n<p>Other constructors, all class methods:</p>\n<dl>\n<dt><em>classmethod</em> Week.thisweek()</dt>\n<dd>Return the current week (local time).</dd>\n<dt><em>classmethod</em> Week.fromordinal(<em>ordinal</em>)</dt>\n<dd>Return the week corresponding to the proleptic Gregorian ordinal,\nwhere January 1 of year 1 starts the week with ordinal 1.</dd>\n<dt><em>classmethod</em> Week.fromstring(<em>isostring</em>)</dt>\n<dd>Return a week initialized from an ISO formatted string like \u201c2011W08\u201d\nor \u201c2011-W08\u201d.  Note that weeks always stringify back in the former\nand more compact format.</dd>\n<dt><em>classmethod</em> Week.withdate(<em>date</em>)</dt>\n<dd>Return the week that contains the given datetime.date.</dd>\n<dt><em>classmethod</em> Week.weeks_of_year(<em>year</em>)</dt>\n<dd>Return an iterator over the weeks of the given year.</dd>\n<dt><em>classmethod</em> Week.last_week_of_year(<em>year</em>)</dt>\n<dd>Return the last week of the given year.</dd>\n</dl>\n<p>Instance attributes (read-only):</p>\n<dl>\n<dt>Week.year</dt>\n<dd>Between 1 and 9999 inclusive.</dd>\n<dt>Week.week</dt>\n<dd>Between 1 and 53 inclusive (52 for most years).</dd>\n</dl>\n<p>Supported operations:</p>\n<blockquote>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Operation</th>\n<th>Result</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>week1 = week2 + int</td>\n<td>week2 is int weeks removed from week1.</td>\n</tr>\n<tr><td>week1 = week2 - int</td>\n<td>Computes week2 such that week2 + int == week1</td>\n</tr>\n<tr><td>int = week1 - week2</td>\n<td>Computes int such that week2 + int == week1</td>\n</tr>\n<tr><td>week1 &lt; week2</td>\n<td>week1 is considered less than week2 when week1 precedes week2 in time.</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>Instance methods:</p>\n<dl>\n<dt>Week.replace(<em>year</em>, <em>week</em>)</dt>\n<dd>Return a Week with the same value, except for those parameters\ngiven new values by whichever keyword arguments are specified.</dd>\n<dt>Week.toordinal()</dt>\n<dd>Return the proleptic Gregorian ordinal the week, where January 1 of year 1\nstarts the first week.</dd>\n<dt>Week.day(<em>num</em>)</dt>\n<dd>Return the given day of week as a datetime.date object.\nDay 0 is Monday.</dd>\n<dt>Week.monday(), Week.tuesday(),.. Week.sunday()</dt>\n<dd>Return the given day of week as a datetime.date object.</dd>\n<dt>Week.days()</dt>\n<dd>Return the 7 days of the week as a list.</dd>\n<dt>Week.contains(day)</dt>\n<dd>Check if the given datetime.date falls within the week.</dd>\n<dt>Week.isoformat()</dt>\n<dd>Return a string representing the week in ISO 8601 format; \u201cyyyyWww\u201d.\nFor example Week(2011, 8).isoformat() == \u20182011W08\u2019.</dd>\n<dt>Week.__str__()</dt>\n<dd>For a Week w, str(w) is equivalent to w.isoformat()</dd>\n<dt>Week.__repr__()</dt>\n<dd>Return a string like \u201cisoweek.Week(2011, 2)\u201d.</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 2553758, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "e3d967643f8f0a939f3e29e103eb4ba2", "sha256": "d3ce21cbe54745044c5e19d011a74fe01abaaace0bcd4f172c2a078c70cd0eca"}, "downloads": -1, "filename": "isoweek-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e3d967643f8f0a939f3e29e103eb4ba2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5266, "upload_time": "2011-10-07T14:38:17", "upload_time_iso_8601": "2011-10-07T14:38:17.877153Z", "url": "https://files.pythonhosted.org/packages/a4/0d/8838c8506e2b6a5e1dcbb9b6627a9633dbc9205e6275b1b997e3f46eb741/isoweek-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "0e454572612cec57e0e1fdaad1caba8b", "sha256": "bdb8d700e578d36db8405c075288d1c0d25050bcf46da946d79b902dfa60734e"}, "downloads": -1, "filename": "isoweek-1.1.0.tar.gz", "has_sig": false, "md5_digest": "0e454572612cec57e0e1fdaad1caba8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5806, "upload_time": "2011-10-10T16:30:04", "upload_time_iso_8601": "2011-10-10T16:30:04.862258Z", "url": "https://files.pythonhosted.org/packages/37/66/54a36d7bec6f0b92f58eb583b5bb9318eccec5d5278c0bcc3ef86141002a/isoweek-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "72c6659b4afbfa055c6045a844deafb8", "sha256": "266e45537e5f4cfd9177f7af7904c665f11f10671803ccbf620f18739263bffa"}, "downloads": -1, "filename": "isoweek-1.2.0.tar.gz", "has_sig": false, "md5_digest": "72c6659b4afbfa055c6045a844deafb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5965, "upload_time": "2011-10-20T09:25:13", "upload_time_iso_8601": "2011-10-20T09:25:13.629952Z", "url": "https://files.pythonhosted.org/packages/df/19/2b8b5de196310d2ce1c0b5409a99e0cb30146dab800a0ce2cbc504e67a20/isoweek-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "1bc50d52d78bbe5e2764741970ff9df6", "sha256": "e7c7625e093df53a37321f98d9d6ea08e7a78d977e7db0933eb66569eda1a179"}, "downloads": -1, "filename": "isoweek-1.3.0.tar.gz", "has_sig": false, "md5_digest": "1bc50d52d78bbe5e2764741970ff9df6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6417, "upload_time": "2014-01-28T19:38:09", "upload_time_iso_8601": "2014-01-28T19:38:09.306630Z", "url": "https://files.pythonhosted.org/packages/f0/b5/266cda833e87b9b7356e25f5b28ed8340e603248108323316f73ac48d94c/isoweek-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "66d8fa2cceded5b6b10fe75e57dab72a", "sha256": "86e61b427db570d2f753a6dbdbbabfb16170ad30b53ee43992892b009c5f3e5c"}, "downloads": -1, "filename": "isoweek-1.3.1.tar.gz", "has_sig": false, "md5_digest": "66d8fa2cceded5b6b10fe75e57dab72a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6436, "upload_time": "2016-10-10T22:10:18", "upload_time_iso_8601": "2016-10-10T22:10:18.838225Z", "url": "https://files.pythonhosted.org/packages/0f/86/257ea30dab9494978ec4a26fdf8c3626ee03a4776eccabae16457e9328dc/isoweek-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "057e7ed71ffe4f3c97701ce511f0f6e1", "sha256": "10a2e828c7f3676f94acc36d8abefe2c8833bd206dca98f51db8f122636fbe45"}, "downloads": -1, "filename": "isoweek-1.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "057e7ed71ffe4f3c97701ce511f0f6e1", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 7134, "upload_time": "2017-01-04T14:50:10", "upload_time_iso_8601": "2017-01-04T14:50:10.926443Z", "url": "https://files.pythonhosted.org/packages/09/4c/ff7d7d3b26ca26f7ef4cdd34d98159a2e195007cfc3c72cc81187ae9b747/isoweek-1.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b620e6512877bcfc95cc72ab8d2b58f9", "sha256": "1df3379f6f07601a9c687c01de1f221b2aff0cff4a607b9899024b80bfbdc370"}, "downloads": -1, "filename": "isoweek-1.3.2.tar.gz", "has_sig": false, "md5_digest": "b620e6512877bcfc95cc72ab8d2b58f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6797, "upload_time": "2017-01-04T14:50:08", "upload_time_iso_8601": "2017-01-04T14:50:08.340732Z", "url": "https://files.pythonhosted.org/packages/57/26/493f35ea50dd3cf64324cf8a5c8ba7204bfcef29ccb21f2e442626a627b5/isoweek-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "460c10b0a72951abad50375d07efd191", "sha256": "d3324c497d97f1534669de225ec877964222e4cc773a4a99063086f7a4e342b6"}, "downloads": -1, "filename": "isoweek-1.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "460c10b0a72951abad50375d07efd191", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 7138, "upload_time": "2017-01-04T15:16:33", "upload_time_iso_8601": "2017-01-04T15:16:33.969782Z", "url": "https://files.pythonhosted.org/packages/c2/d4/fe7e2637975c476734fcbf53776e650a29680194eb0dd21dbdc020ca92de/isoweek-1.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a34b0dd43fc48f35abd752fe22a5e037", "sha256": "73f3f7bac443e05a3ab45c32a72048b0c4f26d53d81462ec4b142c7581d3ffe8"}, "downloads": -1, "filename": "isoweek-1.3.3.tar.gz", "has_sig": false, "md5_digest": "a34b0dd43fc48f35abd752fe22a5e037", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6847, "upload_time": "2017-01-04T15:16:31", "upload_time_iso_8601": "2017-01-04T15:16:31.072254Z", "url": "https://files.pythonhosted.org/packages/9a/79/68c68f92d8d55b3b790224bdba879a8fe77756a42c0b719e2e695756eb34/isoweek-1.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "460c10b0a72951abad50375d07efd191", "sha256": "d3324c497d97f1534669de225ec877964222e4cc773a4a99063086f7a4e342b6"}, "downloads": -1, "filename": "isoweek-1.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "460c10b0a72951abad50375d07efd191", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 7138, "upload_time": "2017-01-04T15:16:33", "upload_time_iso_8601": "2017-01-04T15:16:33.969782Z", "url": "https://files.pythonhosted.org/packages/c2/d4/fe7e2637975c476734fcbf53776e650a29680194eb0dd21dbdc020ca92de/isoweek-1.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a34b0dd43fc48f35abd752fe22a5e037", "sha256": "73f3f7bac443e05a3ab45c32a72048b0c4f26d53d81462ec4b142c7581d3ffe8"}, "downloads": -1, "filename": "isoweek-1.3.3.tar.gz", "has_sig": false, "md5_digest": "a34b0dd43fc48f35abd752fe22a5e037", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6847, "upload_time": "2017-01-04T15:16:31", "upload_time_iso_8601": "2017-01-04T15:16:31.072254Z", "url": "https://files.pythonhosted.org/packages/9a/79/68c68f92d8d55b3b790224bdba879a8fe77756a42c0b719e2e695756eb34/isoweek-1.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:55 2020"}