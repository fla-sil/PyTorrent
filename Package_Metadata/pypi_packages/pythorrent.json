{"info": {"author": "Matt Copperwaite", "author_email": "mattcopp@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "PYTHorrent\n==========\n\nThis is a BitTorrent client written entirely in Python so that it can be\neasily used for experiments. It is a fully working BitTorrent client so\nyou can use it below as an example. There is no intelligence in this\nsuch as getting rarest peice first. Everything is random.\n\nIt doesn't use ``thread`` or ``multiprocessing`` as it's designed to be\nused for experiments, and I don't know how someone may want to use it,\nwhile also making it impractical for general use, but I'd like to\neventually support the most common schemes such as DHT, Magnet URLs, PHE\ntDP, and UPnP so it is possible to accept incoming connections.\n\nInstallation\n------------\n\nPIP\n~~~\n\n::\n\n    pip install pythorrent\n\nFrom Source\n~~~~~~~~~~~\n\n::\n\n    pip install -r requirements.txt\n    python setup.py install\n\nUsage\n-----\n\nDepending on how you installed PYTHorrent you may need to go to the root\nof the source of the PYTHorrent directory.\n\n::\n\n    cd python-pythorrent\n\nGetting commands\n~~~~~~~~~~~~~~~~\n\n::\n\n    python -m pythorrent -h\n\nDownloading a Torrent using a torrent file\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    python -m pythorrent --file ubuntu-16.04-desktop-amd64.iso.torrent --path . --log=info\n\nOverview\n--------\n\nDocumentation for the BitTorrent protocol is poor but these sources have\nbeen immensely helpful: -\nhttp://jonas.nitro.dk/bittorrent/bittorrent-rfc.html -\nhttps://wiki.theory.org/BitTorrentSpecification -\nhttp://www.kristenwidman.com/blog/33/how-to-write-a-bittorrent-client-part-1/\n-\nhttp://www.kristenwidman.com/blog/71/how-to-write-a-bittorrent-client-part-2/\n\nLicense\n-------\n\nAGPLv3\n~~~~~~\n\n::\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nTo Do\n-----\n\nTidy up documentation\n~~~~~~~~~~~~~~~~~~~~~\n\nMemory efficiency\n~~~~~~~~~~~~~~~~~\n\n-  Only load piece data in to memory when it is needed.\n\nMagnet URL Scheme\n~~~~~~~~~~~~~~~~~\n\n-  https://en.wikipedia.org/wiki/Magnet\\_URI\\_scheme\n\nDHT\n~~~\n\nOptions? - https://github.com/drxzcl/lightdht/ - I like this one best -\nSeems to lock out when finding peers - https://github.com/gsko/mdht\n\nEncryption? PHE\n~~~~~~~~~~~~~~~\n\n-  https://wiki.vuze.com/w/Message\\_Stream\\_Encryption\n\nUPnP\n~~~~\n\n-  https://code.google.com/archive/p/miranda-upnp/\n-  Entirely Python code\n-  http://www.gniibe.org/memo/system/dynamic-ip/upnp.html\n-  Has dependency on GNUPnP\n-  https://github.com/miniupnp/miniupnp\n\n\\*\\* **Always download legal torrents** \\*\\*\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yamatt/python-pythorrent", "keywords": "", "license": "AGPLv3", "maintainer": "", "maintainer_email": "", "name": "pythorrent", "package_url": "https://pypi.org/project/pythorrent/", "platform": "", "project_url": "https://pypi.org/project/pythorrent/", "project_urls": {"Homepage": "https://github.com/yamatt/python-pythorrent"}, "release_url": "https://pypi.org/project/pythorrent/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "A BitTorrent client written entirely in Python so that you can get to the depths of the protocol", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a BitTorrent client written entirely in Python so that it can be\neasily used for experiments. It is a fully working BitTorrent client so\nyou can use it below as an example. There is no intelligence in this\nsuch as getting rarest peice first. Everything is random.</p>\n<p>It doesn\u2019t use <tt>thread</tt> or <tt>multiprocessing</tt> as it\u2019s designed to be\nused for experiments, and I don\u2019t know how someone may want to use it,\nwhile also making it impractical for general use, but I\u2019d like to\neventually support the most common schemes such as DHT, Magnet URLs, PHE\ntDP, and UPnP so it is possible to accept incoming connections.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"pip\">\n<h3>PIP</h3>\n<pre>pip install pythorrent\n</pre>\n</div>\n<div id=\"from-source\">\n<h3>From Source</h3>\n<pre>pip install -r requirements.txt\npython setup.py install\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Depending on how you installed PYTHorrent you may need to go to the root\nof the source of the PYTHorrent directory.</p>\n<pre>cd python-pythorrent\n</pre>\n<div id=\"getting-commands\">\n<h3>Getting commands</h3>\n<pre>python -m pythorrent -h\n</pre>\n</div>\n<div id=\"downloading-a-torrent-using-a-torrent-file\">\n<h3>Downloading a Torrent using a torrent file</h3>\n<pre>python -m pythorrent --file ubuntu-16.04-desktop-amd64.iso.torrent --path . --log=info\n</pre>\n</div>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>Documentation for the BitTorrent protocol is poor but these sources have\nbeen immensely helpful: -\n<a href=\"http://jonas.nitro.dk/bittorrent/bittorrent-rfc.html\" rel=\"nofollow\">http://jonas.nitro.dk/bittorrent/bittorrent-rfc.html</a> -\n<a href=\"https://wiki.theory.org/BitTorrentSpecification\" rel=\"nofollow\">https://wiki.theory.org/BitTorrentSpecification</a> -\n<a href=\"http://www.kristenwidman.com/blog/33/how-to-write-a-bittorrent-client-part-1/\" rel=\"nofollow\">http://www.kristenwidman.com/blog/33/how-to-write-a-bittorrent-client-part-1/</a>\n-\n<a href=\"http://www.kristenwidman.com/blog/71/how-to-write-a-bittorrent-client-part-2/\" rel=\"nofollow\">http://www.kristenwidman.com/blog/71/how-to-write-a-bittorrent-client-part-2/</a></p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<h2 id=\"agplv3\"><span class=\"section-subtitle\">AGPLv3</span></h2>\n<pre>This program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n</pre>\n</div>\n<div id=\"to-do\">\n<h2>To Do</h2>\n<div id=\"tidy-up-documentation\">\n<h3>Tidy up documentation</h3>\n</div>\n<div id=\"memory-efficiency\">\n<h3>Memory efficiency</h3>\n<ul>\n<li>Only load piece data in to memory when it is needed.</li>\n</ul>\n</div>\n<div id=\"magnet-url-scheme\">\n<h3>Magnet URL Scheme</h3>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Magnet_URI_scheme\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Magnet_URI_scheme</a></li>\n</ul>\n</div>\n<div id=\"dht\">\n<h3>DHT</h3>\n<p>Options? - <a href=\"https://github.com/drxzcl/lightdht/\" rel=\"nofollow\">https://github.com/drxzcl/lightdht/</a> - I like this one best -\nSeems to lock out when finding peers - <a href=\"https://github.com/gsko/mdht\" rel=\"nofollow\">https://github.com/gsko/mdht</a></p>\n</div>\n<div id=\"encryption-phe\">\n<h3>Encryption? PHE</h3>\n<ul>\n<li><a href=\"https://wiki.vuze.com/w/Message_Stream_Encryption\" rel=\"nofollow\">https://wiki.vuze.com/w/Message_Stream_Encryption</a></li>\n</ul>\n</div>\n<div id=\"upnp\">\n<h3>UPnP</h3>\n<ul>\n<li><a href=\"https://code.google.com/archive/p/miranda-upnp/\" rel=\"nofollow\">https://code.google.com/archive/p/miranda-upnp/</a></li>\n<li>Entirely Python code</li>\n<li><a href=\"http://www.gniibe.org/memo/system/dynamic-ip/upnp.html\" rel=\"nofollow\">http://www.gniibe.org/memo/system/dynamic-ip/upnp.html</a></li>\n<li>Has dependency on GNUPnP</li>\n<li><a href=\"https://github.com/miniupnp/miniupnp\" rel=\"nofollow\">https://github.com/miniupnp/miniupnp</a></li>\n</ul>\n<p>** <strong>Always download legal torrents</strong> **</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2758784, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "aa079f826cd49f1b0cc339258a6c48f5", "sha256": "4f49ca921d96b9d1d4462e04903ca66463ef6c16d5b2ffd5240be44fe1152b4f"}, "downloads": -1, "filename": "PYTHorrent-0.1.0.tar.gz", "has_sig": false, "md5_digest": "aa079f826cd49f1b0cc339258a6c48f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14990, "upload_time": "2017-04-06T21:23:17", "upload_time_iso_8601": "2017-04-06T21:23:17.016276Z", "url": "https://files.pythonhosted.org/packages/cb/99/7becf64a505625c219e142571d2c656e5a9f897a4579ac9ba6abfccdfa24/PYTHorrent-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aa079f826cd49f1b0cc339258a6c48f5", "sha256": "4f49ca921d96b9d1d4462e04903ca66463ef6c16d5b2ffd5240be44fe1152b4f"}, "downloads": -1, "filename": "PYTHorrent-0.1.0.tar.gz", "has_sig": false, "md5_digest": "aa079f826cd49f1b0cc339258a6c48f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14990, "upload_time": "2017-04-06T21:23:17", "upload_time_iso_8601": "2017-04-06T21:23:17.016276Z", "url": "https://files.pythonhosted.org/packages/cb/99/7becf64a505625c219e142571d2c656e5a9f897a4579ac9ba6abfccdfa24/PYTHorrent-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:26 2020"}