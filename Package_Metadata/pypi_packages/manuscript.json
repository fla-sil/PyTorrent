{"info": {"author": "Georges Dubus", "author_email": "georges.dubus@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3"], "description": "===============================\nManuscript\n===============================\n\n.. image:: https://badge.fury.io/py/manuscript.png\n    :target: http://badge.fury.io/py/manuscript\n    \n.. image:: https://pypip.in/d/manuscript/badge.png\n        :target: https://crate.io/packages/manuscript?version=latest\n\n\nManuscript helps you manage your python scripts and their dependencies\n\nPython still is a scripting language, and it is awesome for\nthis. Moreover, we now have some great libraries that make writing\nscripts even easier, like requests, docopt or pathlib. However, having\nto install them system-wide, or start worrying about virtualenv for\njust one script is annoying. Manuscript is here to help you handle that.\n\nJust add a line of the form ``#deps: requests docopt pathlib`` to your script,\nand manuscript will install them in a virtualenv and create a wrapper for you.\n\nInstall\n-------\n\nYou can get it on `pypi`_ with the usual ``pip install manuscript``.\n\nYou can also install manuscript using manuscript! For this, use this line get manuscript and its dependencies, and use manuscript to install itself::\n\n    cd /tmp && wget https://bitbucket.org/pitrou/pathlib/raw/e39c980b59a9705fe60f24e36cb202771af88256/pathlib.py https://raw.github.com/docopt/docopt/0.6.1/docopt.py https://raw.github.com/madjar/manuscript/master/manuscript.py && python3 manuscript.py install -c manuscript.py\n\nOnce it's done, I recommend you add ``~/.manuscript/bin/`` to your path, to make it easier to access installed scripts.\n\nManuscript requires python 3.\n\n.. _`pypi`: https://pypi.python.org/pypi/manuscript\n\nUsage\n-----\n\nYou just wrote ``some_awesome_script.py`` that uses ``requests`` and ``docopt``, and you want to use it on your system without worrying about the dependencies. Just add this line somewhere in your script::\n\n  #deps requests docopt\n\nThen run manuscript::\n\n  manuscript install some_awesome_script.py\n\nThis will install all the dependencies in a virtualenv and create a wrapper around the script as ``~/.manuscript/bin/some_awesome_script``.\n\nThe virtualenv will use the interpreter mentioned in the script's shebang, falling back to ``python`` if none is found. You can force an interpreter with the ``-i`` option, like so::\n\n  manuscript install some_awesome_script.py -i pypy\n\nIf you don't want a script to share the default virtualenv with other scripts, you can specify a virtualenv name in which to install the script's dependencies (it will be created if needed)::\n\n  manuscript install some_awesome_script.py -e awesome-venv\n\nIf you want to reuse an env created by virtualenv-wrapper, you can pass ``workon:NAME`` as the environment name. Manuscript will use the ``WORKON_HOME`` environment variable to find it. If it does not exist, manuscript will not create it.\n\nIf you edit you script to add more dependencies, just run::\n\n  manuscript check-deps\n\nThis will install all missing dependencies for all the scripts.\n\n\nFinally, if you want to use manuscript on a script that won't last (something downloaded from the internet that sits on your ``/tmp`` for example), just add the `-c` argument: manuscript will first copy the script to a safe place, then do the whole dance.\n\nContribute\n----------\n\nThe source code is available on `github`_.\n\nBug reports and pull requests welcomed !\n\n.. _`github`: https://github.com/madjar/manuscript\n\nAuthor\n------\n\nThis project is made by Georges Dubus <georges.dubus@gmail.com>.\nYou can find me on twitter: `@georgesdubus`_.\n\n.. _`@georgesdubus`: https://twitter.com/georgesdubus\n\n\n\n\nHistory\n-------\n\n0.2.0 (201-01-08)\n+++++++++++++++++\n\n* Added an option to choose the name of the env. If it begins with \"workon:\", use a virtualenv-wrapper env.\n\n0.1.0 (2013-11-11)\n++++++++++++++++++\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/madjar/manuscript", "keywords": "manuscript", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "manuscript", "package_url": "https://pypi.org/project/manuscript/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/manuscript/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/madjar/manuscript"}, "release_url": "https://pypi.org/project/manuscript/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Manuscript helps you manage your python scripts and their dependencies", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/manuscript\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/manuscript.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/adb587141e64db6890b933c5ebcfe1cd9d925cb6/68747470733a2f2f62616467652e667572792e696f2f70792f6d616e757363726970742e706e67\"></a>\n<a href=\"https://crate.io/packages/manuscript?version=latest\" rel=\"nofollow\"><img alt=\"https://pypip.in/d/manuscript/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5c644fc7ef715d4323d44d197ecd6e6727752866/68747470733a2f2f70797069702e696e2f642f6d616e757363726970742f62616467652e706e67\"></a>\n<p>Manuscript helps you manage your python scripts and their dependencies</p>\n<p>Python still is a scripting language, and it is awesome for\nthis. Moreover, we now have some great libraries that make writing\nscripts even easier, like requests, docopt or pathlib. However, having\nto install them system-wide, or start worrying about virtualenv for\njust one script is annoying. Manuscript is here to help you handle that.</p>\n<p>Just add a line of the form <tt>#deps: requests docopt pathlib</tt> to your script,\nand manuscript will install them in a virtualenv and create a wrapper for you.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<p>You can get it on <a href=\"https://pypi.python.org/pypi/manuscript\" rel=\"nofollow\">pypi</a> with the usual <tt>pip install manuscript</tt>.</p>\n<p>You can also install manuscript using manuscript! For this, use this line get manuscript and its dependencies, and use manuscript to install itself:</p>\n<pre>cd /tmp &amp;&amp; wget https://bitbucket.org/pitrou/pathlib/raw/e39c980b59a9705fe60f24e36cb202771af88256/pathlib.py https://raw.github.com/docopt/docopt/0.6.1/docopt.py https://raw.github.com/madjar/manuscript/master/manuscript.py &amp;&amp; python3 manuscript.py install -c manuscript.py\n</pre>\n<p>Once it\u2019s done, I recommend you add <tt><span class=\"pre\">~/.manuscript/bin/</span></tt> to your path, to make it easier to access installed scripts.</p>\n<p>Manuscript requires python 3.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You just wrote <tt>some_awesome_script.py</tt> that uses <tt>requests</tt> and <tt>docopt</tt>, and you want to use it on your system without worrying about the dependencies. Just add this line somewhere in your script:</p>\n<pre>#deps requests docopt\n</pre>\n<p>Then run manuscript:</p>\n<pre>manuscript install some_awesome_script.py\n</pre>\n<p>This will install all the dependencies in a virtualenv and create a wrapper around the script as <tt><span class=\"pre\">~/.manuscript/bin/some_awesome_script</span></tt>.</p>\n<p>The virtualenv will use the interpreter mentioned in the script\u2019s shebang, falling back to <tt>python</tt> if none is found. You can force an interpreter with the <tt><span class=\"pre\">-i</span></tt> option, like so:</p>\n<pre>manuscript install some_awesome_script.py -i pypy\n</pre>\n<p>If you don\u2019t want a script to share the default virtualenv with other scripts, you can specify a virtualenv name in which to install the script\u2019s dependencies (it will be created if needed):</p>\n<pre>manuscript install some_awesome_script.py -e awesome-venv\n</pre>\n<p>If you want to reuse an env created by virtualenv-wrapper, you can pass <tt>workon:NAME</tt> as the environment name. Manuscript will use the <tt>WORKON_HOME</tt> environment variable to find it. If it does not exist, manuscript will not create it.</p>\n<p>If you edit you script to add more dependencies, just run:</p>\n<pre>manuscript check-deps\n</pre>\n<p>This will install all missing dependencies for all the scripts.</p>\n<p>Finally, if you want to use manuscript on a script that won\u2019t last (something downloaded from the internet that sits on your <tt>/tmp</tt> for example), just add the <cite>-c</cite> argument: manuscript will first copy the script to a safe place, then do the whole dance.</p>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>The source code is available on <a href=\"https://github.com/madjar/manuscript\" rel=\"nofollow\">github</a>.</p>\n<p>Bug reports and pull requests welcomed !</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>This project is made by Georges Dubus &lt;<a href=\"mailto:georges.dubus%40gmail.com\">georges<span>.</span>dubus<span>@</span>gmail<span>.</span>com</a>&gt;.\nYou can find me on twitter: <a href=\"https://twitter.com/georgesdubus\" rel=\"nofollow\">@georgesdubus</a>.</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.2.0 (201-01-08)</h3>\n<ul>\n<li>Added an option to choose the name of the env. If it begins with \u201cworkon:\u201d, use a virtualenv-wrapper env.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.0 (2013-11-11)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 963608, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "67b2af17b3965e44bd9c8bd41e02bec8", "sha256": "f75581c53ee4a9509de5cd2c807d6fe63c3680b18ea60d1f2a4c286cda9c85db"}, "downloads": -1, "filename": "manuscript-0.1.0.tar.gz", "has_sig": false, "md5_digest": "67b2af17b3965e44bd9c8bd41e02bec8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5313, "upload_time": "2013-11-11T14:43:45", "upload_time_iso_8601": "2013-11-11T14:43:45.759633Z", "url": "https://files.pythonhosted.org/packages/8e/c3/2fa1e90a65c286700b11d8573be711de60ac6f5507492d869c98b7b07670/manuscript-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9c641fe53a1473bae2ef162fe2d20019", "sha256": "7509f16bdc8770ec43f2bacaca21115d05c348d5d181b694294a9bb60bcc7be8"}, "downloads": -1, "filename": "manuscript-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9c641fe53a1473bae2ef162fe2d20019", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5966, "upload_time": "2014-01-08T16:14:58", "upload_time_iso_8601": "2014-01-08T16:14:58.967907Z", "url": "https://files.pythonhosted.org/packages/c3/28/a0e720d4a997250c5253c0fe17c1865fa88d55b686a6880cf54ac376cf5a/manuscript-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c641fe53a1473bae2ef162fe2d20019", "sha256": "7509f16bdc8770ec43f2bacaca21115d05c348d5d181b694294a9bb60bcc7be8"}, "downloads": -1, "filename": "manuscript-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9c641fe53a1473bae2ef162fe2d20019", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5966, "upload_time": "2014-01-08T16:14:58", "upload_time_iso_8601": "2014-01-08T16:14:58.967907Z", "url": "https://files.pythonhosted.org/packages/c3/28/a0e720d4a997250c5253c0fe17c1865fa88d55b686a6880cf54ac376cf5a/manuscript-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:28 2020"}