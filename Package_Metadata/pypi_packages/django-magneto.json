{"info": {"author": "Preston Timmons", "author_email": "prestontimmons@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python"], "description": "Overview\n========\n\nMagneto is a content and template management application built for the\n`Django`_ framework.\n\nA ``Template`` represents a web page on your site. Within the template\ncan be used any built-in `Template Tags`_, as well as custom installed ones.\nBeyond HTML pages, a ``Template`` can also represent content types such as\nCSS, Javascript, JSON, and XML. When using template inheritance, templates\ncan be marked for use strictly by the template loader and not for display\nas a web page.\n\nKey Features\n------------\n\n- Because templates and web pages are synonymous you can use template tags\n  and filters in your pages.\n- Manage content types like html, css, javascript, xml, json, and text.\n- Database queries can be minimized with the use of a cached template loader\n  that caches pre-rendered templates.\n- Use CodeMirror in the admin for template editing.\n- Know who changed what and when with built-in support for `Reversion`_.\n  Easily go back to older versions of the content.\n- Group related templates with ``Template Groups``. Useful when you have a\n  large number of templates.\n- `HTML5 Boilerplate`_ fixtures included to get started quickly.\n- Support for `South`_ migrations.\n\nAdmin Pages\n-----------\n\n.. image:: http://imgur.com/OcKX3.png\n.. image:: http://imgur.com/OltdC.png\n.. image:: http://imgur.com/7fYnB.png\n\n\nSandbox Installation\n====================\n\nAn example application is provided to make this application easy to download\nand demo in a sandboxed environment. Use the following commands to run it::\n\n    $ hg clone http://bitbucket.org/prestontimmons/django-magneto\n    $ cd django-magneto\n    $ python bootstrap.py\n    $ bin/buildout\n    $ cp -r magneto/media/ example/media/magneto\n    $ bin/django syncdb\n    $ bin/django migrate\n    $ bin/django loaddata html5boilerplate.json\n    $ bin/django runserver 0.0.0.0:8000\n\nVisit http://localhost:8000/admin/ and update your domain in ``Site``\nsettings to match the server your running on. Now you can view and edit\nthe templates that were loaded in.\n\n\nSite Installation\n=================\n\nConfigure your ``settings.py``\n------------------------------\n\n#) Make sure ``django.contrib.sites`` and ``django.contrib.admin`` are\n   installed. Add ``magneto`` and ``reversion`` to ``INSTALLED_APPS``.\n   Optionally add ``south`` for migration support.\n\n    Example::\n\n        INSTALLED_APPS = (\n            'django.contrib.admin',\n            'django.contrib.admindocs',\n            'django.contrib.auth',\n            'django.contrib.contenttypes',\n            'django.contrib.sessions',\n            'django.contrib.sites',\n\n              ...\n\n            'magneto',\n            'reversion',\n\n              ...\n\n            'south', # optional for migrations\n        )\n\n#) Add ``magneto.loader.CachedTemplateLoader`` to ``TEMPLATE_LOADERS``.\n\n    Example::\n\n        TEMPLATE_LOADERS = (\n            'magneto.loader.CachedTemplateLoader',\n\n              ...\n\n            'django.template.loaders.filesystem.load_template_source',\n            'django.template.loaders.app_directories.load_template_source',\n        )\n\n#) Copy media files to where they can be found by the admin pages.\n   * See the notes on the MAGNETO_MEDIA_DIRECTORY setting below for more\n   information.\n\n#) Add a url entry in your site urls.py.\n\n    Example::\n\n        urlpatterns = patterns('',\n            (r'^admin/', include(admin.site.urls)),\n            (r'^accounts/login/$', 'django.contrib.auth.views.login'),\n\n              ...\n\n            # Mount it at a specific url\n            (r'^pages/', include('magneto.urls')),\n\n            # Or mount it at your root url\n            (r'^', include('magneto.urls')),\n        )\n\n#) Run ``python manage.py syncdb``.\n\n#) Run ``python manage.py runserver 0.0.0.0:8000`` to start the\n   Django devserver.\n\n\nConfigurable Settings\n=====================\n\n``MAGNETO_MEDIA_DIRECTORY``\n\n    The url of the root folder where the magneto media files are.\n    This defaults to a folder called ``magneto`` in the directory specified\n    by the ``MEDIA_URL`` setting.\n\n\nNotes\n=====\n\nBuilt for Python 2.6, Django 1.2 according to `PEP8`_ and the\n`Django Style Guide`_. If you're using previous versions of Python or\nDjango your mileage may vary. Let me know if anything doesn't work.\n\nStanding on the shoulders of giants\n-----------------------------------\nThis application is like a combined version of Django `DB Templates`_ and\nthe built-in `Flatpages` application. Thanks to `Jannis Leidel`_ for\nopen-sourcing the `DB Templates` app and for everyone who contributed to\nDjango.\n\n\n.. _`DB Templates`: http://pypi.python.org/pypi/django-dbtemplates/\n.. _`Django`: http://djangoproject.com/\n.. _`Django Style Guide`: http://docs.djangoproject.com/en/dev/internals/contributing/\n.. _`Flatpages`: http://docs.djangoproject.com/en/dev/ref/contrib/flatpages/\n.. _`Gospel`: http://fm.thevillagechurch.net/resource_files/audio/20070224BA01S_MattChandler_Gospel.mp3\n.. _`HTML5 Boilerplate`: http://html5boilerplate.com/\n.. _`Jannis Leidel`: http://github.com/jezdez\n.. _`Jesus Christ`: http://www.youtube.com/watch?v=xMxRWd9sgGI\n.. _`PEP8`: http://www.python.org/dev/peps/pep-0008/\n.. _`Reversion`: http://pypi.python.org/pypi/django-reversion\n.. _`South`: http://south.aeracode.org/\n.. _`Template Tags`: http://docs.djangoproject.com/en/dev/ref/templates/builtins/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/prestontimmons/django-magneto/src", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-magneto", "package_url": "https://pypi.org/project/django-magneto/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-magneto/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://bitbucket.org/prestontimmons/django-magneto/src"}, "release_url": "https://pypi.org/project/django-magneto/0.9.0/", "requires_dist": null, "requires_python": null, "summary": "A content and template management application for Django.", "version": "0.9.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>Magneto is a content and template management application built for the\n<a href=\"http://djangoproject.com/\" rel=\"nofollow\">Django</a> framework.</p>\n<p>A <tt>Template</tt> represents a web page on your site. Within the template\ncan be used any built-in <a href=\"http://docs.djangoproject.com/en/dev/ref/templates/builtins/\" rel=\"nofollow\">Template Tags</a>, as well as custom installed ones.\nBeyond HTML pages, a <tt>Template</tt> can also represent content types such as\nCSS, Javascript, JSON, and XML. When using template inheritance, templates\ncan be marked for use strictly by the template loader and not for display\nas a web page.</p>\n<div id=\"key-features\">\n<h3>Key Features</h3>\n<ul>\n<li>Because templates and web pages are synonymous you can use template tags\nand filters in your pages.</li>\n<li>Manage content types like html, css, javascript, xml, json, and text.</li>\n<li>Database queries can be minimized with the use of a cached template loader\nthat caches pre-rendered templates.</li>\n<li>Use CodeMirror in the admin for template editing.</li>\n<li>Know who changed what and when with built-in support for <a href=\"http://pypi.python.org/pypi/django-reversion\" rel=\"nofollow\">Reversion</a>.\nEasily go back to older versions of the content.</li>\n<li>Group related templates with <tt>Template Groups</tt>. Useful when you have a\nlarge number of templates.</li>\n<li><a href=\"http://html5boilerplate.com/\" rel=\"nofollow\">HTML5 Boilerplate</a> fixtures included to get started quickly.</li>\n<li>Support for <a href=\"http://south.aeracode.org/\" rel=\"nofollow\">South</a> migrations.</li>\n</ul>\n</div>\n<div id=\"admin-pages\">\n<h3>Admin Pages</h3>\n<img alt=\"http://imgur.com/OcKX3.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/134e36e13372d5e471aca5b8d07c73c4eb3a2c7a/687474703a2f2f696d6775722e636f6d2f4f634b58332e706e67\">\n<img alt=\"http://imgur.com/OltdC.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/afb9d21af284030d4d33a2fa897c7eaed22930fa/687474703a2f2f696d6775722e636f6d2f4f6c7464432e706e67\">\n<img alt=\"http://imgur.com/7fYnB.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/926467efc184e04b79732d72870bce43bdaa3a54/687474703a2f2f696d6775722e636f6d2f3766596e422e706e67\">\n</div>\n</div>\n<div id=\"sandbox-installation\">\n<h2>Sandbox Installation</h2>\n<p>An example application is provided to make this application easy to download\nand demo in a sandboxed environment. Use the following commands to run it:</p>\n<pre>$ hg clone http://bitbucket.org/prestontimmons/django-magneto\n$ cd django-magneto\n$ python bootstrap.py\n$ bin/buildout\n$ cp -r magneto/media/ example/media/magneto\n$ bin/django syncdb\n$ bin/django migrate\n$ bin/django loaddata html5boilerplate.json\n$ bin/django runserver 0.0.0.0:8000\n</pre>\n<p>Visit <a href=\"http://localhost:8000/admin/\" rel=\"nofollow\">http://localhost:8000/admin/</a> and update your domain in <tt>Site</tt>\nsettings to match the server your running on. Now you can view and edit\nthe templates that were loaded in.</p>\n</div>\n<div id=\"site-installation\">\n<h2>Site Installation</h2>\n<h2 id=\"configure-your-settings-py\"><span class=\"section-subtitle\">Configure your <tt>settings.py</tt></span></h2>\n<ol>\n<li><p>Make sure <tt>django.contrib.sites</tt> and <tt>django.contrib.admin</tt> are\ninstalled. Add <tt>magneto</tt> and <tt>reversion</tt> to <tt>INSTALLED_APPS</tt>.\nOptionally add <tt>south</tt> for migration support.</p>\n<blockquote>\n<p>Example:</p>\n<pre>INSTALLED_APPS = (\n    'django.contrib.admin',\n    'django.contrib.admindocs',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.sites',\n\n      ...\n\n    'magneto',\n    'reversion',\n\n      ...\n\n    'south', # optional for migrations\n)\n</pre>\n</blockquote>\n</li>\n<li><p>Add <tt>magneto.loader.CachedTemplateLoader</tt> to <tt>TEMPLATE_LOADERS</tt>.</p>\n<blockquote>\n<p>Example:</p>\n<pre>TEMPLATE_LOADERS = (\n    'magneto.loader.CachedTemplateLoader',\n\n      ...\n\n    'django.template.loaders.filesystem.load_template_source',\n    'django.template.loaders.app_directories.load_template_source',\n)\n</pre>\n</blockquote>\n</li>\n<li><p>Copy media files to where they can be found by the admin pages.\n* See the notes on the MAGNETO_MEDIA_DIRECTORY setting below for more\ninformation.</p>\n</li>\n<li><p>Add a url entry in your site urls.py.</p>\n<blockquote>\n<p>Example:</p>\n<pre>urlpatterns = patterns('',\n    (r'^admin/', include(admin.site.urls)),\n    (r'^accounts/login/$', 'django.contrib.auth.views.login'),\n\n      ...\n\n    # Mount it at a specific url\n    (r'^pages/', include('magneto.urls')),\n\n    # Or mount it at your root url\n    (r'^', include('magneto.urls')),\n)\n</pre>\n</blockquote>\n</li>\n<li><p>Run <tt>python manage.py syncdb</tt>.</p>\n</li>\n<li><p>Run <tt>python manage.py runserver 0.0.0.0:8000</tt> to start the\nDjango devserver.</p>\n</li>\n</ol>\n</div>\n<div id=\"configurable-settings\">\n<h2>Configurable Settings</h2>\n<p><tt>MAGNETO_MEDIA_DIRECTORY</tt></p>\n<blockquote>\nThe url of the root folder where the magneto media files are.\nThis defaults to a folder called <tt>magneto</tt> in the directory specified\nby the <tt>MEDIA_URL</tt> setting.</blockquote>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<p>Built for Python 2.6, Django 1.2 according to <a href=\"http://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP8</a> and the\n<a href=\"http://docs.djangoproject.com/en/dev/internals/contributing/\" rel=\"nofollow\">Django Style Guide</a>. If you\u2019re using previous versions of Python or\nDjango your mileage may vary. Let me know if anything doesn\u2019t work.</p>\n<div id=\"standing-on-the-shoulders-of-giants\">\n<h3>Standing on the shoulders of giants</h3>\n<p>This application is like a combined version of Django <a href=\"http://pypi.python.org/pypi/django-dbtemplates/\" rel=\"nofollow\">DB Templates</a> and\nthe built-in <cite>Flatpages</cite> application. Thanks to <a href=\"http://github.com/jezdez\" rel=\"nofollow\">Jannis Leidel</a> for\nopen-sourcing the <cite>DB Templates</cite> app and for everyone who contributed to\nDjango.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 790017, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "6323861c04052ee2fc99186f16df1522", "sha256": "f138e9f8559e26354c71abf426487ec8de0af875b19ac3c8f53a6207d52bd99d"}, "downloads": -1, "filename": "django-magneto-0.9.0.tar.gz", "has_sig": false, "md5_digest": "6323861c04052ee2fc99186f16df1522", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48278, "upload_time": "2010-10-14T01:24:33", "upload_time_iso_8601": "2010-10-14T01:24:33.266541Z", "url": "https://files.pythonhosted.org/packages/20/f5/28d4a71f369e477b37d4b7bf1379e909fa6f8f254a2f791f53b3f40f5936/django-magneto-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6323861c04052ee2fc99186f16df1522", "sha256": "f138e9f8559e26354c71abf426487ec8de0af875b19ac3c8f53a6207d52bd99d"}, "downloads": -1, "filename": "django-magneto-0.9.0.tar.gz", "has_sig": false, "md5_digest": "6323861c04052ee2fc99186f16df1522", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48278, "upload_time": "2010-10-14T01:24:33", "upload_time_iso_8601": "2010-10-14T01:24:33.266541Z", "url": "https://files.pythonhosted.org/packages/20/f5/28d4a71f369e477b37d4b7bf1379e909fa6f8f254a2f791f53b3f40f5936/django-magneto-0.9.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:14 2020"}