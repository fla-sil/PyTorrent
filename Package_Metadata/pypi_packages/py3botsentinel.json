{"info": {"author": "Plant Daddy", "author_email": "CqP5TZ77NYBf5uQt@protonmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Py3BotSentinel\n\nPyBotSentinel is an API wrapper for [BotSentinel](https://botsentinel.com). It's simple in functionality as at this point,\nit only provides you a rating, and the description of what that rating means to\nBotSentinel.\n\n### Requirements\n\nThis requires Python 3.6 and above, and was built on Python 3.8. It requires\nrequests, ScraPy\n\n### Installation\nI recommend you install this via pip3 ([PyPi](https://pip.pypa.io/en/stable/installing/))\n\n```bash\n$ pip3 install py3botsentinel\n```\n\n### Getting Started and Finished\n\n```python\nimport pybotsentinel\nquery = pybotsentinel.PyBotSentinel()\n\n\nrating = query.get_bot_rating('realdonaldtrump')\n>>> rating\n[True, 30, 'Moderate', 'Our analysis has concluded realdonaldtrump exhibits moderate tweet activity and is not a trollbot account.']\n```\n\n### Troubleshooting\n\nIf you end up getting an occasional 403 while querying, it's most likely due to a race condition\nas a result of making the GET request to the page to get the one-time-key\nfor BotSentinel's backend API, the next key generates before the POST call is made,\nthe POST call to the API is made, and the API returns a JSON object of {'success': False,\n'bot_rating': 'INCORRECT_DATA'} with a HTTP status code code of 403. If a\n subsequent query is made for the same user, it will succeed and return the user's bot\n rating.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PlantDaddy/pyBotSentinel", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "py3botsentinel", "package_url": "https://pypi.org/project/py3botsentinel/", "platform": "", "project_url": "https://pypi.org/project/py3botsentinel/", "project_urls": {"Homepage": "https://github.com/PlantDaddy/pyBotSentinel"}, "release_url": "https://pypi.org/project/py3botsentinel/0.0.1/", "requires_dist": ["requests", "scrapy", "time", "re"], "requires_python": ">=3.6", "summary": "A package to programmatically query a twitter user on BotSentinel", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Py3BotSentinel</h1>\n<p>PyBotSentinel is an API wrapper for <a href=\"https://botsentinel.com\" rel=\"nofollow\">BotSentinel</a>. It's simple in functionality as at this point,\nit only provides you a rating, and the description of what that rating means to\nBotSentinel.</p>\n<h3>Requirements</h3>\n<p>This requires Python 3.6 and above, and was built on Python 3.8. It requires\nrequests, ScraPy</p>\n<h3>Installation</h3>\n<p>I recommend you install this via pip3 (<a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\">PyPi</a>)</p>\n<pre>$ pip3 install py3botsentinel\n</pre>\n<h3>Getting Started and Finished</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pybotsentinel</span>\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">pybotsentinel</span><span class=\"o\">.</span><span class=\"n\">PyBotSentinel</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">rating</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">get_bot_rating</span><span class=\"p\">(</span><span class=\"s1\">'realdonaldtrump'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rating</span>\n<span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"s1\">'Moderate'</span><span class=\"p\">,</span> <span class=\"s1\">'Our analysis has concluded realdonaldtrump exhibits moderate tweet activity and is not a trollbot account.'</span><span class=\"p\">]</span>\n</pre>\n<h3>Troubleshooting</h3>\n<p>If you end up getting an occasional 403 while querying, it's most likely due to a race condition\nas a result of making the GET request to the page to get the one-time-key\nfor BotSentinel's backend API, the next key generates before the POST call is made,\nthe POST call to the API is made, and the API returns a JSON object of {'success': False,\n'bot_rating': 'INCORRECT_DATA'} with a HTTP status code code of 403. If a\nsubsequent query is made for the same user, it will succeed and return the user's bot\nrating.</p>\n\n          </div>"}, "last_serial": 6830501, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "de7276af25c001ae10d32ab2b376e3c9", "sha256": "1e5a8ab5fe73b10dafc741221108a35246ee55ec3b1a323faf1272b9e4847ca8"}, "downloads": -1, "filename": "py3botsentinel-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "de7276af25c001ae10d32ab2b376e3c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14480, "upload_time": "2020-03-17T18:57:26", "upload_time_iso_8601": "2020-03-17T18:57:26.507221Z", "url": "https://files.pythonhosted.org/packages/2d/bc/2cccffc65c8e09efa57e69abd005e3aafecf6096ba54fbc462c8f23d09ba/py3botsentinel-0.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "de7276af25c001ae10d32ab2b376e3c9", "sha256": "1e5a8ab5fe73b10dafc741221108a35246ee55ec3b1a323faf1272b9e4847ca8"}, "downloads": -1, "filename": "py3botsentinel-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "de7276af25c001ae10d32ab2b376e3c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14480, "upload_time": "2020-03-17T18:57:26", "upload_time_iso_8601": "2020-03-17T18:57:26.507221Z", "url": "https://files.pythonhosted.org/packages/2d/bc/2cccffc65c8e09efa57e69abd005e3aafecf6096ba54fbc462c8f23d09ba/py3botsentinel-0.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:12:25 2020"}