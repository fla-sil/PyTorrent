{"info": {"author": "Disruptive Labs", "author_email": "oss+monkeytype_sqlalchemy@comanage.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "## Monkeytype SQLAlchemy\n\nA SQLAlchemy-backed store for use with [monkeytype](https://github.com/Instagram/MonkeyType) by Instagram.\n\nThis store is schema-compatible with the default SQLite-backend store, merely using SQLAlchemy for database \n interactions. This allows easy use of any \n [database dialect supported by SQLAlchemy](https://docs.sqlalchemy.org/en/13/dialects/index.html)\n \n### Usage\n\nCreate a `monkeytype_config.py` in your project folder as suggested by the MonkeyType docs\n\n```python\nfrom monkeytype_sqlalchemy import SQLAlchemyConfig\n\nCONFIG = SQLAlchemyConfig()\n```\n\nAlternately, modify your Config class to return an instance of the `SQLAlchemyStore` call trace store\n\n```python\nfrom monkeytype.config import Config\nfrom monkeytype.db.base import CallTraceStore\nfrom monkeytype_sqlalchemy import SQLAlchemyStore\n\nclass MyConfig(Config):\n    def trace_store(self) -> CallTraceStore:\n        return SQLAlchemyStore.make_store(\"postgresql+psycopg:///localhost/my_database\")\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DisruptiveLabs/MonkeyType_SQLAlchemy", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "monkeytype-sqlalchemy", "package_url": "https://pypi.org/project/monkeytype-sqlalchemy/", "platform": "", "project_url": "https://pypi.org/project/monkeytype-sqlalchemy/", "project_urls": {"Homepage": "https://github.com/DisruptiveLabs/MonkeyType_SQLAlchemy"}, "release_url": "https://pypi.org/project/monkeytype-sqlalchemy/0.1/", "requires_dist": null, "requires_python": "", "summary": "A SQLAlchemy backed call trace store for MonkeyType", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Monkeytype SQLAlchemy</h2>\n<p>A SQLAlchemy-backed store for use with <a href=\"https://github.com/Instagram/MonkeyType\" rel=\"nofollow\">monkeytype</a> by Instagram.</p>\n<p>This store is schema-compatible with the default SQLite-backend store, merely using SQLAlchemy for database\ninteractions. This allows easy use of any\n<a href=\"https://docs.sqlalchemy.org/en/13/dialects/index.html\" rel=\"nofollow\">database dialect supported by SQLAlchemy</a></p>\n<h3>Usage</h3>\n<p>Create a <code>monkeytype_config.py</code> in your project folder as suggested by the MonkeyType docs</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">monkeytype_sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">SQLAlchemyConfig</span>\n\n<span class=\"n\">CONFIG</span> <span class=\"o\">=</span> <span class=\"n\">SQLAlchemyConfig</span><span class=\"p\">()</span>\n</pre>\n<p>Alternately, modify your Config class to return an instance of the <code>SQLAlchemyStore</code> call trace store</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">monkeytype.config</span> <span class=\"kn\">import</span> <span class=\"n\">Config</span>\n<span class=\"kn\">from</span> <span class=\"nn\">monkeytype.db.base</span> <span class=\"kn\">import</span> <span class=\"n\">CallTraceStore</span>\n<span class=\"kn\">from</span> <span class=\"nn\">monkeytype_sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">SQLAlchemyStore</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyConfig</span><span class=\"p\">(</span><span class=\"n\">Config</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">trace_store</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">CallTraceStore</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">SQLAlchemyStore</span><span class=\"o\">.</span><span class=\"n\">make_store</span><span class=\"p\">(</span><span class=\"s2\">\"postgresql+psycopg:///localhost/my_database\"</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5294626, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4b622413fb83a8c53ab3e98c63e7be72", "sha256": "3ce5ee193ddc2f712ec74848687ad734b22a5f4f1cf11f950aa8dea9f1a9e988"}, "downloads": -1, "filename": "monkeytype_sqlalchemy-0.1.tar.gz", "has_sig": false, "md5_digest": "4b622413fb83a8c53ab3e98c63e7be72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2711, "upload_time": "2019-05-20T23:27:36", "upload_time_iso_8601": "2019-05-20T23:27:36.973115Z", "url": "https://files.pythonhosted.org/packages/e7/42/1eb7daaaddbe16bd504b5e748630d0393f1fcef1bcfec03275a80428536d/monkeytype_sqlalchemy-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4b622413fb83a8c53ab3e98c63e7be72", "sha256": "3ce5ee193ddc2f712ec74848687ad734b22a5f4f1cf11f950aa8dea9f1a9e988"}, "downloads": -1, "filename": "monkeytype_sqlalchemy-0.1.tar.gz", "has_sig": false, "md5_digest": "4b622413fb83a8c53ab3e98c63e7be72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2711, "upload_time": "2019-05-20T23:27:36", "upload_time_iso_8601": "2019-05-20T23:27:36.973115Z", "url": "https://files.pythonhosted.org/packages/e7/42/1eb7daaaddbe16bd504b5e748630d0393f1fcef1bcfec03275a80428536d/monkeytype_sqlalchemy-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:09 2020"}