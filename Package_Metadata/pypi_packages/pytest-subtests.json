{"info": {"author": "Bruno Oliveira", "author_email": "nicoddemus@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Testing"], "description": "===============\npytest-subtests\n===============\n\nunittest ``subTest()`` support and ``subtests`` fixture.\n\n.. image:: https://img.shields.io/pypi/v/pytest-subtests.svg\n    :target: https://pypi.org/project/pytest-subtests\n    :alt: PyPI version\n\n.. image:: https://img.shields.io/conda/vn/conda-forge/pytest-subtests.svg\n    :target: https://anaconda.org/conda-forge/pytest-subtests\n\n.. image:: https://img.shields.io/pypi/pyversions/pytest-subtests.svg\n    :target: https://pypi.org/project/pytest-subtests\n    :alt: Python versions\n\n.. image:: https://github.com/pytest-dev/pytest-subtests/workflows/build/badge.svg\n  :target: https://github.com/pytest-dev/pytest-subtests/actions\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n\n----\n\nThis `pytest`_ plugin was generated with `Cookiecutter`_ along with `@hackebrot`_'s `cookiecutter-pytest-plugin`_ template.\n\n\nFeatures\n--------\n\n* Adds support for `TestCase.subTest <https://docs.python.org/3/library/unittest.html#distinguishing-test-iterations-using-subtests>`__.\n\n* New ``subtests`` fixture, providing similar functionality for pure pytest tests.\n\n\nRequirements\n------------\n\n* ``Python`` >= 3.5.\n* ``pytest`` >= 4.4.\n\nInstallation\n------------\n\nYou can install ``pytest-subtests`` via `pip`_ from `PyPI`_::\n\n    $ pip install pytest-subtests\n\n\n\nUsage\n-----\n\nunittest subTest() example\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    import unittest\n\n\n    class T(unittest.TestCase):\n        def test_foo(self):\n            for i in range(5):\n                with self.subTest(\"custom message\", i=i):\n                    self.assertEqual(i % 2, 0)\n\n\n    if __name__ == \"__main__\":\n        unittest.main()\n\n\n**Output**\n\n.. code-block::\n\n    \u03bb pytest .tmp\\test-unit-subtest.py\n    ======================== test session starts ========================\n    ...\n    collected 1 item\n\n    .tmp\\test-unit-subtest.py FF.                                  [100%]\n\n    ============================= FAILURES ==============================\n    _________________ T.test_foo [custom message] (i=1) _________________\n\n    self = <test-unit-subtest.T testMethod=test_foo>\n\n        def test_foo(self):\n            for i in range(5):\n                with self.subTest('custom message', i=i):\n    >               self.assertEqual(i % 2, 0)\n    E               AssertionError: 1 != 0\n\n    .tmp\\test-unit-subtest.py:9: AssertionError\n    _________________ T.test_foo [custom message] (i=3) _________________\n\n    self = <test-unit-subtest.T testMethod=test_foo>\n\n        def test_foo(self):\n            for i in range(5):\n                with self.subTest('custom message', i=i):\n    >               self.assertEqual(i % 2, 0)\n    E               AssertionError: 1 != 0\n\n    .tmp\\test-unit-subtest.py:9: AssertionError\n    ================ 2 failed, 1 passed in 0.07 seconds =================\n\n\n``subtests`` fixture example\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    def test(subtests):\n        for i in range(5):\n            with subtests.test(msg=\"custom message\", i=i):\n                assert i % 2 == 0\n\n\n**Output**\n\n.. code-block::\n\n    \u03bb pytest .tmp\\test-subtest.py\n    ======================== test session starts ========================\n    ...\n    collected 1 item\n\n    .tmp\\test-subtest.py .F.F..                                    [100%]\n\n    ============================= FAILURES ==============================\n    ____________________ test [custom message] (i=1) ____________________\n\n        def test(subtests):\n            for i in range(5):\n                with subtests.test(msg='custom message', i=i):\n    >               assert i % 2 == 0\n    E               assert (1 % 2) == 0\n\n    .tmp\\test-subtest.py:4: AssertionError\n    ____________________ test [custom message] (i=3) ____________________\n\n        def test(subtests):\n            for i in range(5):\n                with subtests.test(msg='custom message', i=i):\n    >               assert i % 2 == 0\n    E               assert (3 % 2) == 0\n\n    .tmp\\test-subtest.py:4: AssertionError\n    ================ 2 failed, 1 passed in 0.07 seconds =================\n\nContributing\n------------\nContributions are very welcome. Tests can be run with `tox`_:\n\n.. code-block::\n\n    tox -e py37,linting\n\nLicense\n-------\n\nDistributed under the terms of the `MIT`_ license, \"pytest-subtests\" is free and open source software\n\n\nIssues\n------\n\nIf you encounter any problems, please `file an issue`_ along with a detailed description.\n\n.. _`Cookiecutter`: https://github.com/audreyr/cookiecutter\n.. _`@hackebrot`: https://github.com/hackebrot\n.. _`MIT`: http://opensource.org/licenses/MIT\n.. _`BSD-3`: http://opensource.org/licenses/BSD-3-Clause\n.. _`GNU GPL v3.0`: http://www.gnu.org/licenses/gpl-3.0.txt\n.. _`Apache Software License 2.0`: http://www.apache.org/licenses/LICENSE-2.0\n.. _`cookiecutter-pytest-plugin`: https://github.com/pytest-dev/cookiecutter-pytest-plugin\n.. _`file an issue`: https://github.com/nicoddemus/pytest-subtests/issues\n.. _`pytest`: https://github.com/pytest-dev/pytest\n.. _`tox`: https://tox.readthedocs.io/en/latest/\n.. _`pip`: https://pypi.org/project/pip/\n.. _`PyPI`: https://pypi.org/project\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pytest-dev/pytest-subtests", "keywords": "", "license": "MIT", "maintainer": "Bruno Oliveira", "maintainer_email": "nicoddemus@gmail.com", "name": "pytest-subtests", "package_url": "https://pypi.org/project/pytest-subtests/", "platform": "", "project_url": "https://pypi.org/project/pytest-subtests/", "project_urls": {"Homepage": "https://github.com/pytest-dev/pytest-subtests"}, "release_url": "https://pypi.org/project/pytest-subtests/0.3.0/", "requires_dist": ["pytest (>=4.4.0)"], "requires_python": ">=3.5", "summary": "unittest subTest() support and subtests fixture", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>unittest <tt>subTest()</tt> support and <tt>subtests</tt> fixture.</p>\n<a href=\"https://pypi.org/project/pytest-subtests\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6216e401e6daeacc29b712dd2eb3619c3653767f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079746573742d73756274657374732e737667\"></a>\n<a href=\"https://anaconda.org/conda-forge/pytest-subtests\" rel=\"nofollow\"><img alt=\"https://img.shields.io/conda/vn/conda-forge/pytest-subtests.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cf1f3e991ab851374b7c4f503f9ece1b1f65332c/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f766e2f636f6e64612d666f7267652f7079746573742d73756274657374732e737667\"></a>\n<a href=\"https://pypi.org/project/pytest-subtests\" rel=\"nofollow\"><img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f46a075e924987b5ee8c1d587a3dbcfc4c4e74f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079746573742d73756274657374732e737667\"></a>\n<a href=\"https://github.com/pytest-dev/pytest-subtests/actions\" rel=\"nofollow\"><img alt=\"https://github.com/pytest-dev/pytest-subtests/workflows/build/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0f5e4e995ecae3092d3f9dfd25122f67a3415fef/68747470733a2f2f6769746875622e636f6d2f7079746573742d6465762f7079746573742d73756274657374732f776f726b666c6f77732f6275696c642f62616467652e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/code%20style-black-000000.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<hr class=\"docutils\">\n<p>This <a href=\"https://github.com/pytest-dev/pytest\" rel=\"nofollow\">pytest</a> plugin was generated with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> along with <a href=\"https://github.com/hackebrot\" rel=\"nofollow\">@hackebrot</a>\u2019s <a href=\"https://github.com/pytest-dev/cookiecutter-pytest-plugin\" rel=\"nofollow\">cookiecutter-pytest-plugin</a> template.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Adds support for <a href=\"https://docs.python.org/3/library/unittest.html#distinguishing-test-iterations-using-subtests\" rel=\"nofollow\">TestCase.subTest</a>.</li>\n<li>New <tt>subtests</tt> fixture, providing similar functionality for pure pytest tests.</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><tt>Python</tt> &gt;= 3.5.</li>\n<li><tt>pytest</tt> &gt;= 4.4.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install <tt><span class=\"pre\">pytest-subtests</span></tt> via <a href=\"https://pypi.org/project/pip/\" rel=\"nofollow\">pip</a> from <a href=\"https://pypi.org/project\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>$ pip install pytest-subtests\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"unittest-subtest-example\">\n<h3>unittest subTest() example</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">unittest</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">T</span><span class=\"p\">(</span><span class=\"n\">unittest</span><span class=\"o\">.</span><span class=\"n\">TestCase</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_foo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n            <span class=\"k\">with</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">subTest</span><span class=\"p\">(</span><span class=\"s2\">\"custom message\"</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">unittest</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<p><strong>Output</strong></p>\n<pre>\u03bb pytest .tmp\\test-unit-subtest.py\n======================== test session starts ========================\n...\ncollected 1 item\n\n.tmp\\test-unit-subtest.py FF.                                  [100%]\n\n============================= FAILURES ==============================\n_________________ T.test_foo [custom message] (i=1) _________________\n\nself = &lt;test-unit-subtest.T testMethod=test_foo&gt;\n\n    def test_foo(self):\n        for i in range(5):\n            with self.subTest('custom message', i=i):\n&gt;               self.assertEqual(i % 2, 0)\nE               AssertionError: 1 != 0\n\n.tmp\\test-unit-subtest.py:9: AssertionError\n_________________ T.test_foo [custom message] (i=3) _________________\n\nself = &lt;test-unit-subtest.T testMethod=test_foo&gt;\n\n    def test_foo(self):\n        for i in range(5):\n            with self.subTest('custom message', i=i):\n&gt;               self.assertEqual(i % 2, 0)\nE               AssertionError: 1 != 0\n\n.tmp\\test-unit-subtest.py:9: AssertionError\n================ 2 failed, 1 passed in 0.07 seconds =================\n</pre>\n</div>\n<div id=\"subtests-fixture-example\">\n<h3><tt>subtests</tt> fixture example</h3>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test</span><span class=\"p\">(</span><span class=\"n\">subtests</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"n\">subtests</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"o\">=</span><span class=\"s2\">\"custom message\"</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">):</span>\n            <span class=\"k\">assert</span> <span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n</pre>\n<p><strong>Output</strong></p>\n<pre>\u03bb pytest .tmp\\test-subtest.py\n======================== test session starts ========================\n...\ncollected 1 item\n\n.tmp\\test-subtest.py .F.F..                                    [100%]\n\n============================= FAILURES ==============================\n____________________ test [custom message] (i=1) ____________________\n\n    def test(subtests):\n        for i in range(5):\n            with subtests.test(msg='custom message', i=i):\n&gt;               assert i % 2 == 0\nE               assert (1 % 2) == 0\n\n.tmp\\test-subtest.py:4: AssertionError\n____________________ test [custom message] (i=3) ____________________\n\n    def test(subtests):\n        for i in range(5):\n            with subtests.test(msg='custom message', i=i):\n&gt;               assert i % 2 == 0\nE               assert (3 % 2) == 0\n\n.tmp\\test-subtest.py:4: AssertionError\n================ 2 failed, 1 passed in 0.07 seconds =================\n</pre>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions are very welcome. Tests can be run with <a href=\"https://tox.readthedocs.io/en/latest/\" rel=\"nofollow\">tox</a>:</p>\n<pre>tox -e py37,linting\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Distributed under the terms of the <a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT</a> license, \u201cpytest-subtests\u201d is free and open source software</p>\n</div>\n<div id=\"issues\">\n<h2>Issues</h2>\n<p>If you encounter any problems, please <a href=\"https://github.com/nicoddemus/pytest-subtests/issues\" rel=\"nofollow\">file an issue</a> along with a detailed description.</p>\n</div>\n\n          </div>"}, "last_serial": 6503230, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "20f26037cc21164a2fe9ad353e9ceacc", "sha256": "75220550e04b26343a617082fea1e50069682b23534cff47e7511292f82f0e2e"}, "downloads": -1, "filename": "pytest_subtests-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "20f26037cc21164a2fe9ad353e9ceacc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 4886, "upload_time": "2019-04-02T00:52:44", "upload_time_iso_8601": "2019-04-02T00:52:44.377857Z", "url": "https://files.pythonhosted.org/packages/6f/69/842b96540d53cd5993a60687c41d3f7e2bb05de6fd46769a44730eabfb53/pytest_subtests-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "802405c24bbffdfed2c4236f46fdc2cf", "sha256": "75b6e0e2a71aa641e47c171a09591290b9ad5de47d722687a68d7e887a65b133"}, "downloads": -1, "filename": "pytest-subtests-0.1.0.tar.gz", "has_sig": false, "md5_digest": "802405c24bbffdfed2c4236f46fdc2cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 9056, "upload_time": "2019-04-02T00:52:46", "upload_time_iso_8601": "2019-04-02T00:52:46.352552Z", "url": "https://files.pythonhosted.org/packages/54/1e/170fa1453f37d75a8b9cefd1c6076f7b445da9d0efad63b25b072433cde0/pytest-subtests-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "26c91df7cd2352d3d4e3bffd613dd286", "sha256": "e760f3aa9b467a33ca5c55ece0f94ad2521e62898a88ad2e5b64a6a2286014cf"}, "downloads": -1, "filename": "pytest_subtests-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "26c91df7cd2352d3d4e3bffd613dd286", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 5053, "upload_time": "2019-04-03T23:25:27", "upload_time_iso_8601": "2019-04-03T23:25:27.929862Z", "url": "https://files.pythonhosted.org/packages/e2/72/3fe18be1bd0824f4fdeb70598ca42c428759630de59f08fefe9d21745f39/pytest_subtests-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ade8c0a1cd89fbb7e1da90ccf80a051", "sha256": "0e48038a83c23c7cf60cde5b2f7d8bd61572c0292a9ca6da1c83ccfc88de38fa"}, "downloads": -1, "filename": "pytest-subtests-0.2.0.tar.gz", "has_sig": false, "md5_digest": "7ade8c0a1cd89fbb7e1da90ccf80a051", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 9322, "upload_time": "2019-04-03T23:25:29", "upload_time_iso_8601": "2019-04-03T23:25:29.339348Z", "url": "https://files.pythonhosted.org/packages/39/4e/3981610ed656928d5eb182187d7d0fe1f533491b7312d8a865dde1817c70/pytest-subtests-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "9e83de4a364c91bb24443b7401b20962", "sha256": "3842459a43e9a40c0ee388891b198847ea0a93649b88957efd8fc4c140ed458b"}, "downloads": -1, "filename": "pytest_subtests-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9e83de4a364c91bb24443b7401b20962", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 5266, "upload_time": "2019-04-04T22:08:31", "upload_time_iso_8601": "2019-04-04T22:08:31.773321Z", "url": "https://files.pythonhosted.org/packages/62/81/863d99c007f6649b9e3a04f3eb48b5b0cdcd534903b591e742bd38ef9009/pytest_subtests-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b9b396fdc2b9e6a01f701b36e5e16ea", "sha256": "9c0480d4a44dbff5c6ad8ecb283ac66e5bc5ef951c6ba838d51e2548376b3a00"}, "downloads": -1, "filename": "pytest-subtests-0.2.1.tar.gz", "has_sig": false, "md5_digest": "7b9b396fdc2b9e6a01f701b36e5e16ea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 9872, "upload_time": "2019-04-04T22:08:33", "upload_time_iso_8601": "2019-04-04T22:08:33.070279Z", "url": "https://files.pythonhosted.org/packages/6c/da/d2dd79625b8bbc19dace569c24dcd29a37df2381259948a179ba1db6a778/pytest-subtests-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "53865717430472f1e5b61fec69150759", "sha256": "b82d326d0530f8cd576015a5785a13dcea2eb6e045f7b0d0730a0942baa1a68f"}, "downloads": -1, "filename": "pytest_subtests-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "53865717430472f1e5b61fec69150759", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 5557, "upload_time": "2020-01-23T00:01:46", "upload_time_iso_8601": "2020-01-23T00:01:46.661070Z", "url": "https://files.pythonhosted.org/packages/93/2d/71f730bc881884ce878f4d1a2d8b56f8290c47dd2208e9d38a0ff1552cc7/pytest_subtests-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1098d06f97297cc0c033a959e7afe045", "sha256": "a5e837d6395bd3a1b11494ca1e0b41ea15a448e7d9d5d053b9beee7633b580b8"}, "downloads": -1, "filename": "pytest-subtests-0.3.0.tar.gz", "has_sig": false, "md5_digest": "1098d06f97297cc0c033a959e7afe045", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9399, "upload_time": "2020-01-23T00:01:48", "upload_time_iso_8601": "2020-01-23T00:01:48.198341Z", "url": "https://files.pythonhosted.org/packages/7e/22/66c019d24414fe8d47197780407aa1205ce8220384e318f0503b63034d75/pytest-subtests-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "53865717430472f1e5b61fec69150759", "sha256": "b82d326d0530f8cd576015a5785a13dcea2eb6e045f7b0d0730a0942baa1a68f"}, "downloads": -1, "filename": "pytest_subtests-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "53865717430472f1e5b61fec69150759", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 5557, "upload_time": "2020-01-23T00:01:46", "upload_time_iso_8601": "2020-01-23T00:01:46.661070Z", "url": "https://files.pythonhosted.org/packages/93/2d/71f730bc881884ce878f4d1a2d8b56f8290c47dd2208e9d38a0ff1552cc7/pytest_subtests-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1098d06f97297cc0c033a959e7afe045", "sha256": "a5e837d6395bd3a1b11494ca1e0b41ea15a448e7d9d5d053b9beee7633b580b8"}, "downloads": -1, "filename": "pytest-subtests-0.3.0.tar.gz", "has_sig": false, "md5_digest": "1098d06f97297cc0c033a959e7afe045", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9399, "upload_time": "2020-01-23T00:01:48", "upload_time_iso_8601": "2020-01-23T00:01:48.198341Z", "url": "https://files.pythonhosted.org/packages/7e/22/66c019d24414fe8d47197780407aa1205ce8220384e318f0503b63034d75/pytest-subtests-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:39 2020"}