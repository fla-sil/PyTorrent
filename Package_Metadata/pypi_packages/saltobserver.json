{"info": {"author": "Daniel N\u00e4gele", "author_email": "saltobserver@danieln.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Flask", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "Salt Observer |img|\n===================\n.. |img| image:: https://circleci.com/gh/analogbyte/saltobserver/tree/master.svg?style=svg\n       :target: https://circleci.com/gh/analogbyte/saltobserver/tree/master\n\nThis is a simple webapp for presenting data as offered by `Salt's Redis\nReturner`_ written in `Flask`_.\n\nA static demo is available `here`_.\n\n.. _`Salt's Redis Returner`: https://github.com/saltstack/salt/blob/develop/salt/returners/redis_return.py\n.. _`Flask`: http://flask.pocoo.org/\n.. _`here`: http://analogbyte.github.io/saltobserver/\n\n.. image:: http://files.danieln.de/public/saltobserver-v0.9.0.png\n   :alt: Screenshot of Saltobserver (17-12-2014)\n   :width: 1000 px\n   :target: http://files.danieln.de/public/saltobserver.png\n\nFeatures\n~~~~~~~~\n\n- a simple and responsive interface based on `purecss`_ (and their example\n  `email layout`_ to be exact)\n- three main views:\n    * a function view showing all minions that ran a particular function (as\n      shown on the screenshot)\n    * a history view for looking at a minion's history with a specific function\n    * a job view listing all minions which ran a specific job\n- a customizable navbar, which links to function views\n- searchpages for everything\n- live updates for the function view using websockets and `Redis' Keyspace Notifications`_\n- a collapsible representation of raw job data using the awesome `renderjson`_\n\n.. _`purecss`: http://purecss.io/\n.. _`email layout`: http://purecss.io/layouts/email/\n.. _`Redis' Keyspace Notifications`: http://redis.io/topics/notifications\n.. _`renderjson`: https://github.com/caldwell/renderjson\n\nRunning it from PyPI\n~~~~~~~~~~~~~~~~~~~~\n\nJust install it using ``pip install saltobserver``. As always, it is\nrecommended to do so in a virtualenv. After that, the command\n``run_saltobserver`` will be available within this virtualenv. If you want to\nuse non-default settings (at least look at the `defaults`_) prefix the command\nwith ``export SALTOBSERVER_SETTINGS=/path/to/config``. Other than that, you may\npass gunicorn options to the ``run_saltobserver`` command, they will be passed\non so that you can configure gunicorn for use with a proxy server.\n\n.. _`defaults`: https://raw.githubusercontent.com/analogbyte/saltobserver/master/saltobserver/config.py\n\nA typical deployment could use this command with supervisord:\n\n::\n\n  $ export SALTOBSERVER_SETTINGS=/home/saltobserver/config.cfg run_saltobserver -u saltobserver --bind unix:/var/run/saltobserver/socket\n\nRunning it with Docker\n~~~~~~~~~~~~~~~~~~~~~~\n\nInstall a recent docker version (at least 1.2) and run\n\n::\n\n  git clone https://github.com/analogbyte/saltobserver.git\n  cd saltobserver\n  docker build -t saltobserver .\n  docker run -d --restart=always --name=saltobserver -p 8000:8000 -e REDIS_HOST=redis.example.org saltobserver\n\nThis exposes saltobserver to port 8000 and it tries to connect to redis.example.org as redis host. Change the env var or use docker links as suits your needs.\nInstead of building it yourself, feel free to use automated build from Docker Hub: ``docker pull analogbyte/saltobserver``\n\nRunning it from Source\n~~~~~~~~~~~~~~~~~~~~~~\n\nIf your minions return their data to some Redis instance, it is as\nsimple as cloning this repo running ``scripts/run_saltobserver`` (and putting\nthat behind a reverse proxy, if needed). This uses `Gunicorn`_, which is pretty\nflexible and can be configured for pretty much any setup.\n\n.. _`Gunicorn`: http://gunicorn.org/\n\nNote that your Redis instance has to have a version greater than v2.8.0\nfor the live updates to work.\n\nAlso look at the configuration in ``saltobserver/config.py``.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/analogbyte/saltobserver", "keywords": "saltstack redis returner salt states", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "saltobserver", "package_url": "https://pypi.org/project/saltobserver/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/saltobserver/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/analogbyte/saltobserver"}, "release_url": "https://pypi.org/project/saltobserver/0.9.4/", "requires_dist": null, "requires_python": null, "summary": "A simple webapp for presenting data as offered by SaltStack's Redis Returner", "version": "0.9.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a simple webapp for presenting data as offered by <a href=\"https://github.com/saltstack/salt/blob/develop/salt/returners/redis_return.py\" rel=\"nofollow\">Salt\u2019s Redis\nReturner</a> written in <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a>.</p>\n<p>A static demo is available <a href=\"http://analogbyte.github.io/saltobserver/\" rel=\"nofollow\">here</a>.</p>\n<a href=\"http://files.danieln.de/public/saltobserver.png\" rel=\"nofollow\"><img alt=\"Screenshot of Saltobserver (17-12-2014)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fcb1a9165dd8f59e071eefb99c79c45de98ed21d/687474703a2f2f66696c65732e64616e69656c6e2e64652f7075626c69632f73616c746f627365727665722d76302e392e302e706e67\" width=\"1000px\"></a>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>a simple and responsive interface based on <a href=\"http://purecss.io/\" rel=\"nofollow\">purecss</a> (and their example\n<a href=\"http://purecss.io/layouts/email/\" rel=\"nofollow\">email layout</a> to be exact)</li>\n<li><dl>\n<dt>three main views:</dt>\n<dd><ul>\n<li>a function view showing all minions that ran a particular function (as\nshown on the screenshot)</li>\n<li>a history view for looking at a minion\u2019s history with a specific function</li>\n<li>a job view listing all minions which ran a specific job</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>a customizable navbar, which links to function views</li>\n<li>searchpages for everything</li>\n<li>live updates for the function view using websockets and <a href=\"http://redis.io/topics/notifications\" rel=\"nofollow\">Redis\u2019 Keyspace Notifications</a></li>\n<li>a collapsible representation of raw job data using the awesome <a href=\"https://github.com/caldwell/renderjson\" rel=\"nofollow\">renderjson</a></li>\n</ul>\n</div>\n<div id=\"running-it-from-pypi\">\n<h2>Running it from PyPI</h2>\n<p>Just install it using <tt>pip install saltobserver</tt>. As always, it is\nrecommended to do so in a virtualenv. After that, the command\n<tt>run_saltobserver</tt> will be available within this virtualenv. If you want to\nuse non-default settings (at least look at the <a href=\"https://raw.githubusercontent.com/analogbyte/saltobserver/master/saltobserver/config.py\" rel=\"nofollow\">defaults</a>) prefix the command\nwith <tt>export <span class=\"pre\">SALTOBSERVER_SETTINGS=/path/to/config</span></tt>. Other than that, you may\npass gunicorn options to the <tt>run_saltobserver</tt> command, they will be passed\non so that you can configure gunicorn for use with a proxy server.</p>\n<p>A typical deployment could use this command with supervisord:</p>\n<pre>$ export SALTOBSERVER_SETTINGS=/home/saltobserver/config.cfg run_saltobserver -u saltobserver --bind unix:/var/run/saltobserver/socket\n</pre>\n</div>\n<div id=\"running-it-with-docker\">\n<h2>Running it with Docker</h2>\n<p>Install a recent docker version (at least 1.2) and run</p>\n<pre>git clone https://github.com/analogbyte/saltobserver.git\ncd saltobserver\ndocker build -t saltobserver .\ndocker run -d --restart=always --name=saltobserver -p 8000:8000 -e REDIS_HOST=redis.example.org saltobserver\n</pre>\n<p>This exposes saltobserver to port 8000 and it tries to connect to redis.example.org as redis host. Change the env var or use docker links as suits your needs.\nInstead of building it yourself, feel free to use automated build from Docker Hub: <tt>docker pull analogbyte/saltobserver</tt></p>\n</div>\n<div id=\"running-it-from-source\">\n<h2>Running it from Source</h2>\n<p>If your minions return their data to some Redis instance, it is as\nsimple as cloning this repo running <tt>scripts/run_saltobserver</tt> (and putting\nthat behind a reverse proxy, if needed). This uses <a href=\"http://gunicorn.org/\" rel=\"nofollow\">Gunicorn</a>, which is pretty\nflexible and can be configured for pretty much any setup.</p>\n<p>Note that your Redis instance has to have a version greater than v2.8.0\nfor the live updates to work.</p>\n<p>Also look at the configuration in <tt>saltobserver/config.py</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 1392445, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "6a0949b26c26df70d5f668ed58e17e06", "sha256": "3de5749ad5c1b3647d88f447825aea8b702e82a1888fa953b9784c6f0b7346de"}, "downloads": -1, "filename": "saltobserver-0.9.0.tar.gz", "has_sig": false, "md5_digest": "6a0949b26c26df70d5f668ed58e17e06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10033, "upload_time": "2014-12-22T22:35:20", "upload_time_iso_8601": "2014-12-22T22:35:20.532471Z", "url": "https://files.pythonhosted.org/packages/bd/e4/d483d17e7429e4bed7e930169cb1c3464da64dfcbeafaeaae68552a42986/saltobserver-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "54f9464db1e56ca4910c232f6a8826af", "sha256": "bbe18aa20468228678a95fb14dd246bf643eb37e1e2ff6c7dd84246dcb82a50f"}, "downloads": -1, "filename": "saltobserver-0.9.1.tar.gz", "has_sig": false, "md5_digest": "54f9464db1e56ca4910c232f6a8826af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10082, "upload_time": "2015-01-13T11:00:01", "upload_time_iso_8601": "2015-01-13T11:00:01.467331Z", "url": "https://files.pythonhosted.org/packages/95/2a/721d23169a703a829d9a432e99aa144f6f76d2c39633cabd372bcce0dddc/saltobserver-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "6c168ed1845a3538dd0b014277d8a623", "sha256": "659ad2a833d47ddcd89b57a7fbdd582858c3bfe406ba43ee867478e85f90ab17"}, "downloads": -1, "filename": "saltobserver-0.9.2.tar.gz", "has_sig": false, "md5_digest": "6c168ed1845a3538dd0b014277d8a623", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10229, "upload_time": "2015-01-13T13:44:48", "upload_time_iso_8601": "2015-01-13T13:44:48.002088Z", "url": "https://files.pythonhosted.org/packages/b6/64/55bc6f8bac028c197004f7fa0a4bb853462eab89403aff2ddefd153d5a93/saltobserver-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "f3fe373860d7db9d337662208f6e7384", "sha256": "4d1b537d0e4c55b31fa2ce0c380d67ab1b9e6f050be12b638a78f9f0bffa4148"}, "downloads": -1, "filename": "saltobserver-0.9.3.tar.gz", "has_sig": false, "md5_digest": "f3fe373860d7db9d337662208f6e7384", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10752, "upload_time": "2015-01-18T16:01:45", "upload_time_iso_8601": "2015-01-18T16:01:45.408150Z", "url": "https://files.pythonhosted.org/packages/42/a2/2209e9019a99a3bdf91031be65230447c1172f1324db2ab7a880692c8682/saltobserver-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "54fa77bec6d39fdaadd9cf83ddb3a5ca", "sha256": "41d777378c449b7dd22e22bfebcea8fc337a382d029ee815218c4d8e35ddd623"}, "downloads": -1, "filename": "saltobserver-0.9.4.tar.gz", "has_sig": false, "md5_digest": "54fa77bec6d39fdaadd9cf83ddb3a5ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11254, "upload_time": "2015-01-22T22:09:26", "upload_time_iso_8601": "2015-01-22T22:09:26.532093Z", "url": "https://files.pythonhosted.org/packages/74/47/3a3e2d2fd9dd80cbe0eb2943d0f8fdd657a911cab287a1e6a0b7ec34a199/saltobserver-0.9.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "54fa77bec6d39fdaadd9cf83ddb3a5ca", "sha256": "41d777378c449b7dd22e22bfebcea8fc337a382d029ee815218c4d8e35ddd623"}, "downloads": -1, "filename": "saltobserver-0.9.4.tar.gz", "has_sig": false, "md5_digest": "54fa77bec6d39fdaadd9cf83ddb3a5ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11254, "upload_time": "2015-01-22T22:09:26", "upload_time_iso_8601": "2015-01-22T22:09:26.532093Z", "url": "https://files.pythonhosted.org/packages/74/47/3a3e2d2fd9dd80cbe0eb2943d0f8fdd657a911cab287a1e6a0b7ec34a199/saltobserver-0.9.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:03 2020"}