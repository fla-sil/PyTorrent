{"info": {"author": "fiefdx", "author_email": "fiefdx@163.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# LiteDFS\n\nA distributed file system, based on Python3, tornado, inspired by HDFS.\n\nIt's for data processing cache, not for permanent storage!\n\nAll code based on Python3, do not use Python2!\n\nIt still under development, so, maybe have some bugs or not stable enough!\n\nSee more details at https://github.com/fiefdx/LiteDFS\n\n# Features\n\n1. per file replica settings, support dynamic replica change, not data resharding functions, currently\n\n2. scalable with add / remove node\n\n3. lightweight, pure python implementation\n\n4. support command line interface\n\n# Conceptions\n\n1. name node(litename): the central node of the cluster, manage all files & directories index.\n\n2. data node(litedata): the data node of the cluster, store real file's blocks data.\n\n3. command line client(litedfs): the command line tool for communicate with the cluster.\n\n# Deployment\n\n## Install LiteDFS\n```bash\n# this will install 3 commands: litename, litedata, litedfs\n$ pip3 install litedfs\n```\n\n## Run Name Node\n\n### Configuration\n```yaml\nlog_level: NOSET                        # NOSET, DEBUG, INFO, WARNING, ERROR, CRITICAL\nlog_path: /home/pi/litename_data/logs   # log file directory, can auto generate by litename\nhttp_host: 0.0.0.0                      # name node's http host\nhttp_port: 9000                         # name node's http port\ntcp_host: 0.0.0.0                       # name node's tcp host\ntcp_port: 6061                          # name node's tcp port\nblock_size: 67108864                    # 67108864 = 64M, file block size\ndata_path: /home/pi/litename_data/data  # name node data store directory, can auto generate by litename\n```\n\n### Run\n```bash\n# generate configuration file & scripts\nmkdir ./litename_data\ncd ./litename_data\n# this will generate configuration.yml and other scripts\nlitename -g ./\n\n# run manually\nlitename -c ./configuration.yml or nohup litename -c ./configuration.yml > /dev/null 2>&1 &\n\n# install systemd service, user and group set to use which user and group to run litename\nsudo ./install_systemd_service.sh user group\n\n# start\nsystemctl start litedfs-name\n\n# stop\nsystemctl stop litedfs-name\n\n# uninstall systemd service\nsudo ./uninstall_systemd_service.sh\n\n# test\n$ curl localhost:9000\n{\"message\": \"LiteDFS name service\"}\n```\n\n## Run Node\n\n### Configuration\n```yaml\nlog_level: NOSET                        # NOSET, DEBUG, INFO, WARNING, ERROR, CRITICAL\nlog_path: /home/pi/litedata_data/logs   # log file directory, can auto generate by litedata\nhttp_host: 0.0.0.0                      # data node's http host\nhttp_port: 8002                         # data node's http port\nmanager_http_host: 127.0.0.1            # name node's http host\nmanager_http_port: 9000                 # name node's http port\nmanager_tcp_host: 127.0.0.1             # name node's tcp host\nmanager_tcp_port: 6061                  # name node's tcp port\nheartbeat_interval: 1                   # heartbeat interval, 1 seconds\nheartbeat_timeout: 30                   # heartbeat timeout, 30 seconds\nretry_interval: 5                       # retry to connect name node interval, when lost connection, 5 seconds\ndata_path: /home/pi/litedata_data/data  # data node data store directory, can auto generate by litedata\n```\n\n### Run\n```bash\n# generate configuration file & scripts\nmkdir ./litedata_data\ncd ./litedata_data\n# this will generate configuration.yml and other scripts\nlitedata -g ./\n\n# run manually\nlitedata -c ./configuration.yml or nohup litedata -c ./configuration.yml > /dev/null 2>&1 &\n\n# install systemd service, user and group set to use which user and group to run litedata\nsudo ./install_systemd_service.sh user group\n\n# start\nsystemctl start litedfs-data\n\n# stop\nsystemctl stop litedfs-data\n\n# uninstall systemd service\nsudo ./uninstall_systemd_service.sh\n\n# test\n$ curl localhost:8002\n{\"message\": \"LiteDFS data service\"}\n```\n\n## Operate With LiteDFS Cluster\n```bash\n# list root directory\n$ litedfs localhost:9000 directory list -r /\n# | id | type | size | name\n\n# create test directory\n$ litedfs localhost:9000 directory create -r /test\ncreate directory[/test] success\n\n# list root directory again\n$ litedfs localhost:9000 directory list -r /\n# | id | type      | size | name\n1 |    | directory | 0    | test\n\n# create a file\n$ litedfs localhost:9000 file create -r /test/test.tar.gz -l ./examples.tar.gz \ncreate file[/test/test.tar.gz] success\n\n# list test directory\n$ litedfs localhost:9000 directory list -r /test\n# | id                                   | type | size      | name       \n1 | 878b17d4-cc11-4bba-88b0-2186b77ef552 | file | 110237727 | test.tar.gz\n\n# create test2 directory\n$ litedfs localhost:9000 directory create -r /test2\ncreate directory[/test2] success\n\n# list root directory again\n$ litedfs localhost:9000 directory list -r /\n# | id | type      | size | name \n1 |    | directory | 0    | test \n2 |    | directory | 0    | test2\n\n# move test.tar.gz into test2 directory\n$ litedfs localhost:9000 file move -s /test/test.tar.gz -t /test2\nmove file[/test/test.tar.gz] to /test2 success\n\n# list test directory again\n$ litedfs localhost:9000 directory list -r /test\n# | id | type | size | name\n\n# list test2 directory again\n$ litedfs localhost:9000 directory list -r /test2\n# | id                                   | type | size      | name       \n1 | 878b17d4-cc11-4bba-88b0-2186b77ef552 | file | 110237727 | test.tar.gz\n\n# create file with replica 2\n$ litedfs localhost:9000 file create -r /test/test.tar.gz -l ./examples.tar.gz -R 2\ncreate file[/test/test.tar.gz] success\n\n# update file replica 3\n$ litedfs localhost:9000 file create -r /test/test.tar.gz -l ./examples.tar.gz -R 3\nupdate file[/test/test.tar.gz] success\n\n# download /test/test.tar.gz to local file ./test.tar.gz\n$ litedfs localhost:9000 file download -r /test/test.tar.gz -l ./test.tar.gz\ndownload file[/test/test.tar.gz => ./test.tar.gz] success\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fiefdx/LiteDFS", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "litedfs", "package_url": "https://pypi.org/project/litedfs/", "platform": "", "project_url": "https://pypi.org/project/litedfs/", "project_urls": {"Homepage": "https://github.com/fiefdx/LiteDFS"}, "release_url": "https://pypi.org/project/litedfs/0.0.3/", "requires_dist": ["requests (>=2.22.0)", "tornado", "pyYAML", "tinydb", "sqlalchemy", "tornado-discovery"], "requires_python": "", "summary": "LiteDFS: distributed file system", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>LiteDFS</h1>\n<p>A distributed file system, based on Python3, tornado, inspired by HDFS.</p>\n<p>It's for data processing cache, not for permanent storage!</p>\n<p>All code based on Python3, do not use Python2!</p>\n<p>It still under development, so, maybe have some bugs or not stable enough!</p>\n<p>See more details at <a href=\"https://github.com/fiefdx/LiteDFS\" rel=\"nofollow\">https://github.com/fiefdx/LiteDFS</a></p>\n<h1>Features</h1>\n<ol>\n<li>\n<p>per file replica settings, support dynamic replica change, not data resharding functions, currently</p>\n</li>\n<li>\n<p>scalable with add / remove node</p>\n</li>\n<li>\n<p>lightweight, pure python implementation</p>\n</li>\n<li>\n<p>support command line interface</p>\n</li>\n</ol>\n<h1>Conceptions</h1>\n<ol>\n<li>\n<p>name node(litename): the central node of the cluster, manage all files &amp; directories index.</p>\n</li>\n<li>\n<p>data node(litedata): the data node of the cluster, store real file's blocks data.</p>\n</li>\n<li>\n<p>command line client(litedfs): the command line tool for communicate with the cluster.</p>\n</li>\n</ol>\n<h1>Deployment</h1>\n<h2>Install LiteDFS</h2>\n<pre><span class=\"c1\"># this will install 3 commands: litename, litedata, litedfs</span>\n$ pip3 install litedfs\n</pre>\n<h2>Run Name Node</h2>\n<h3>Configuration</h3>\n<pre><span class=\"nt\">log_level</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">NOSET</span>                        <span class=\"c1\"># NOSET, DEBUG, INFO, WARNING, ERROR, CRITICAL</span>\n<span class=\"nt\">log_path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">/home/pi/litename_data/logs</span>   <span class=\"c1\"># log file directory, can auto generate by litename</span>\n<span class=\"nt\">http_host</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">0.0.0.0</span>                      <span class=\"c1\"># name node's http host</span>\n<span class=\"nt\">http_port</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">9000</span>                         <span class=\"c1\"># name node's http port</span>\n<span class=\"nt\">tcp_host</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">0.0.0.0</span>                       <span class=\"c1\"># name node's tcp host</span>\n<span class=\"nt\">tcp_port</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">6061</span>                          <span class=\"c1\"># name node's tcp port</span>\n<span class=\"nt\">block_size</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">67108864</span>                    <span class=\"c1\"># 67108864 = 64M, file block size</span>\n<span class=\"nt\">data_path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">/home/pi/litename_data/data</span>  <span class=\"c1\"># name node data store directory, can auto generate by litename</span>\n</pre>\n<h3>Run</h3>\n<pre><span class=\"c1\"># generate configuration file &amp; scripts</span>\nmkdir ./litename_data\n<span class=\"nb\">cd</span> ./litename_data\n<span class=\"c1\"># this will generate configuration.yml and other scripts</span>\nlitename -g ./\n\n<span class=\"c1\"># run manually</span>\nlitename -c ./configuration.yml or nohup litename -c ./configuration.yml &gt; /dev/null <span class=\"m\">2</span>&gt;<span class=\"p\">&amp;</span><span class=\"m\">1</span> <span class=\"p\">&amp;</span>\n\n<span class=\"c1\"># install systemd service, user and group set to use which user and group to run litename</span>\nsudo ./install_systemd_service.sh user group\n\n<span class=\"c1\"># start</span>\nsystemctl start litedfs-name\n\n<span class=\"c1\"># stop</span>\nsystemctl stop litedfs-name\n\n<span class=\"c1\"># uninstall systemd service</span>\nsudo ./uninstall_systemd_service.sh\n\n<span class=\"c1\"># test</span>\n$ curl localhost:9000\n<span class=\"o\">{</span><span class=\"s2\">\"message\"</span>: <span class=\"s2\">\"LiteDFS name service\"</span><span class=\"o\">}</span>\n</pre>\n<h2>Run Node</h2>\n<h3>Configuration</h3>\n<pre><span class=\"nt\">log_level</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">NOSET</span>                        <span class=\"c1\"># NOSET, DEBUG, INFO, WARNING, ERROR, CRITICAL</span>\n<span class=\"nt\">log_path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">/home/pi/litedata_data/logs</span>   <span class=\"c1\"># log file directory, can auto generate by litedata</span>\n<span class=\"nt\">http_host</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">0.0.0.0</span>                      <span class=\"c1\"># data node's http host</span>\n<span class=\"nt\">http_port</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">8002</span>                         <span class=\"c1\"># data node's http port</span>\n<span class=\"nt\">manager_http_host</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">127.0.0.1</span>            <span class=\"c1\"># name node's http host</span>\n<span class=\"nt\">manager_http_port</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">9000</span>                 <span class=\"c1\"># name node's http port</span>\n<span class=\"nt\">manager_tcp_host</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">127.0.0.1</span>             <span class=\"c1\"># name node's tcp host</span>\n<span class=\"nt\">manager_tcp_port</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">6061</span>                  <span class=\"c1\"># name node's tcp port</span>\n<span class=\"nt\">heartbeat_interval</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">1</span>                   <span class=\"c1\"># heartbeat interval, 1 seconds</span>\n<span class=\"nt\">heartbeat_timeout</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">30</span>                   <span class=\"c1\"># heartbeat timeout, 30 seconds</span>\n<span class=\"nt\">retry_interval</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">5</span>                       <span class=\"c1\"># retry to connect name node interval, when lost connection, 5 seconds</span>\n<span class=\"nt\">data_path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">/home/pi/litedata_data/data</span>  <span class=\"c1\"># data node data store directory, can auto generate by litedata</span>\n</pre>\n<h3>Run</h3>\n<pre><span class=\"c1\"># generate configuration file &amp; scripts</span>\nmkdir ./litedata_data\n<span class=\"nb\">cd</span> ./litedata_data\n<span class=\"c1\"># this will generate configuration.yml and other scripts</span>\nlitedata -g ./\n\n<span class=\"c1\"># run manually</span>\nlitedata -c ./configuration.yml or nohup litedata -c ./configuration.yml &gt; /dev/null <span class=\"m\">2</span>&gt;<span class=\"p\">&amp;</span><span class=\"m\">1</span> <span class=\"p\">&amp;</span>\n\n<span class=\"c1\"># install systemd service, user and group set to use which user and group to run litedata</span>\nsudo ./install_systemd_service.sh user group\n\n<span class=\"c1\"># start</span>\nsystemctl start litedfs-data\n\n<span class=\"c1\"># stop</span>\nsystemctl stop litedfs-data\n\n<span class=\"c1\"># uninstall systemd service</span>\nsudo ./uninstall_systemd_service.sh\n\n<span class=\"c1\"># test</span>\n$ curl localhost:8002\n<span class=\"o\">{</span><span class=\"s2\">\"message\"</span>: <span class=\"s2\">\"LiteDFS data service\"</span><span class=\"o\">}</span>\n</pre>\n<h2>Operate With LiteDFS Cluster</h2>\n<pre><span class=\"c1\"># list root directory</span>\n$ litedfs localhost:9000 directory list -r /\n<span class=\"c1\"># | id | type | size | name</span>\n\n<span class=\"c1\"># create test directory</span>\n$ litedfs localhost:9000 directory create -r /test\ncreate directory<span class=\"o\">[</span>/test<span class=\"o\">]</span> success\n\n<span class=\"c1\"># list root directory again</span>\n$ litedfs localhost:9000 directory list -r /\n<span class=\"c1\"># | id | type      | size | name</span>\n<span class=\"m\">1</span> <span class=\"p\">|</span>    <span class=\"p\">|</span> directory <span class=\"p\">|</span> <span class=\"m\">0</span>    <span class=\"p\">|</span> <span class=\"nb\">test</span>\n\n<span class=\"c1\"># create a file</span>\n$ litedfs localhost:9000 file create -r /test/test.tar.gz -l ./examples.tar.gz \ncreate file<span class=\"o\">[</span>/test/test.tar.gz<span class=\"o\">]</span> success\n\n<span class=\"c1\"># list test directory</span>\n$ litedfs localhost:9000 directory list -r /test\n<span class=\"c1\"># | id                                   | type | size      | name       </span>\n<span class=\"m\">1</span> <span class=\"p\">|</span> 878b17d4-cc11-4bba-88b0-2186b77ef552 <span class=\"p\">|</span> file <span class=\"p\">|</span> <span class=\"m\">110237727</span> <span class=\"p\">|</span> test.tar.gz\n\n<span class=\"c1\"># create test2 directory</span>\n$ litedfs localhost:9000 directory create -r /test2\ncreate directory<span class=\"o\">[</span>/test2<span class=\"o\">]</span> success\n\n<span class=\"c1\"># list root directory again</span>\n$ litedfs localhost:9000 directory list -r /\n<span class=\"c1\"># | id | type      | size | name </span>\n<span class=\"m\">1</span> <span class=\"p\">|</span>    <span class=\"p\">|</span> directory <span class=\"p\">|</span> <span class=\"m\">0</span>    <span class=\"p\">|</span> <span class=\"nb\">test</span> \n<span class=\"m\">2</span> <span class=\"p\">|</span>    <span class=\"p\">|</span> directory <span class=\"p\">|</span> <span class=\"m\">0</span>    <span class=\"p\">|</span> test2\n\n<span class=\"c1\"># move test.tar.gz into test2 directory</span>\n$ litedfs localhost:9000 file move -s /test/test.tar.gz -t /test2\nmove file<span class=\"o\">[</span>/test/test.tar.gz<span class=\"o\">]</span> to /test2 success\n\n<span class=\"c1\"># list test directory again</span>\n$ litedfs localhost:9000 directory list -r /test\n<span class=\"c1\"># | id | type | size | name</span>\n\n<span class=\"c1\"># list test2 directory again</span>\n$ litedfs localhost:9000 directory list -r /test2\n<span class=\"c1\"># | id                                   | type | size      | name       </span>\n<span class=\"m\">1</span> <span class=\"p\">|</span> 878b17d4-cc11-4bba-88b0-2186b77ef552 <span class=\"p\">|</span> file <span class=\"p\">|</span> <span class=\"m\">110237727</span> <span class=\"p\">|</span> test.tar.gz\n\n<span class=\"c1\"># create file with replica 2</span>\n$ litedfs localhost:9000 file create -r /test/test.tar.gz -l ./examples.tar.gz -R <span class=\"m\">2</span>\ncreate file<span class=\"o\">[</span>/test/test.tar.gz<span class=\"o\">]</span> success\n\n<span class=\"c1\"># update file replica 3</span>\n$ litedfs localhost:9000 file create -r /test/test.tar.gz -l ./examples.tar.gz -R <span class=\"m\">3</span>\nupdate file<span class=\"o\">[</span>/test/test.tar.gz<span class=\"o\">]</span> success\n\n<span class=\"c1\"># download /test/test.tar.gz to local file ./test.tar.gz</span>\n$ litedfs localhost:9000 file download -r /test/test.tar.gz -l ./test.tar.gz\ndownload file<span class=\"o\">[</span>/test/test.tar.gz <span class=\"o\">=</span>&gt; ./test.tar.gz<span class=\"o\">]</span> success\n</pre>\n\n          </div>"}, "last_serial": 7032472, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b7c495e273b85f506ec6812dfb05f11a", "sha256": "e137de090c279cc55e868e1cf824e2a7bb4cc88cde33145cedca5fc59a48d173"}, "downloads": -1, "filename": "litedfs-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b7c495e273b85f506ec6812dfb05f11a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42764, "upload_time": "2020-04-12T00:42:04", "upload_time_iso_8601": "2020-04-12T00:42:04.174368Z", "url": "https://files.pythonhosted.org/packages/14/5e/504d25fe2d12b44b12a7326fb116e4da09d46089520cd28c890cf8976581/litedfs-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89879f0203093b6c25dd51ee46de7a46", "sha256": "3eb0ad17c3a82aa477e518bcb7cf173ff1158af09ea3e04f5d029fc43cdf67b0"}, "downloads": -1, "filename": "litedfs-0.0.1.tar.gz", "has_sig": false, "md5_digest": "89879f0203093b6c25dd51ee46de7a46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32160, "upload_time": "2020-04-12T00:42:07", "upload_time_iso_8601": "2020-04-12T00:42:07.194991Z", "url": "https://files.pythonhosted.org/packages/4e/3e/3f5bbb36114383302786001afe450f48cd0305c7761cf8e6fe05dff9031e/litedfs-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e13ca39ccda32bbf34051bf4d2ade5b8", "sha256": "1d9b4db410cb86d58420f3b6cdc11b3ef3e0b5cce02c7463b31754f60b004d59"}, "downloads": -1, "filename": "litedfs-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e13ca39ccda32bbf34051bf4d2ade5b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 44230, "upload_time": "2020-04-13T13:58:01", "upload_time_iso_8601": "2020-04-13T13:58:01.684979Z", "url": "https://files.pythonhosted.org/packages/1c/e2/f1a975dbbce1a13f2af0b0ac7be0ab77085e77a8b298e61b9cfa681cd329/litedfs-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "871a071226aa71dc0a8f56bae485a217", "sha256": "f8195fc594f5816c6524e75fcadc54ec503d619b6bc7f9143786f4a26434edba"}, "downloads": -1, "filename": "litedfs-0.0.2.tar.gz", "has_sig": false, "md5_digest": "871a071226aa71dc0a8f56bae485a217", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33101, "upload_time": "2020-04-13T13:58:03", "upload_time_iso_8601": "2020-04-13T13:58:03.458417Z", "url": "https://files.pythonhosted.org/packages/b4/48/708ca6e35804a60471765cd531366372bb91c53e561bf33c2b77530a7270/litedfs-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "8dcda1a27c0e8629089510fd6c229389", "sha256": "84d320b524529363ca856be62c760bc5165e94694afae34c9ddd72914ba61bb1"}, "downloads": -1, "filename": "litedfs-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8dcda1a27c0e8629089510fd6c229389", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46773, "upload_time": "2020-04-16T14:19:25", "upload_time_iso_8601": "2020-04-16T14:19:25.504616Z", "url": "https://files.pythonhosted.org/packages/b1/9e/c4dd8c9356224877cd04f91959b04428872968c9928b95263c787fb7e2d7/litedfs-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "029e20cca6ed9ad8e0979b929672a53d", "sha256": "0872212aa2b6839838d62d49a0413df5c7299af961098c4a78ed4ba7f912ada9"}, "downloads": -1, "filename": "litedfs-0.0.3.tar.gz", "has_sig": false, "md5_digest": "029e20cca6ed9ad8e0979b929672a53d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35285, "upload_time": "2020-04-16T14:19:28", "upload_time_iso_8601": "2020-04-16T14:19:28.808441Z", "url": "https://files.pythonhosted.org/packages/16/88/f3e175bc041e25aa93b57c437ac16cce75fe11153341a7ab8e44e7ba8252/litedfs-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8dcda1a27c0e8629089510fd6c229389", "sha256": "84d320b524529363ca856be62c760bc5165e94694afae34c9ddd72914ba61bb1"}, "downloads": -1, "filename": "litedfs-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8dcda1a27c0e8629089510fd6c229389", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46773, "upload_time": "2020-04-16T14:19:25", "upload_time_iso_8601": "2020-04-16T14:19:25.504616Z", "url": "https://files.pythonhosted.org/packages/b1/9e/c4dd8c9356224877cd04f91959b04428872968c9928b95263c787fb7e2d7/litedfs-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "029e20cca6ed9ad8e0979b929672a53d", "sha256": "0872212aa2b6839838d62d49a0413df5c7299af961098c4a78ed4ba7f912ada9"}, "downloads": -1, "filename": "litedfs-0.0.3.tar.gz", "has_sig": false, "md5_digest": "029e20cca6ed9ad8e0979b929672a53d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35285, "upload_time": "2020-04-16T14:19:28", "upload_time_iso_8601": "2020-04-16T14:19:28.808441Z", "url": "https://files.pythonhosted.org/packages/16/88/f3e175bc041e25aa93b57c437ac16cce75fe11153341a7ab8e44e7ba8252/litedfs-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:14 2020"}