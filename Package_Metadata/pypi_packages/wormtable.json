{"info": {"author": "Jerome Kelleher, Dan Halligan, Rob Ness", "author_email": "jerome.kelleher@ed.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Other Environment", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Operating System :: POSIX", "Programming Language :: C", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "===============================================\nWormtable\n===============================================\n\nWormtable is a write-once read-many table for large scale datasets.\nIt provides Python programmers with a simple and efficient method of\nstoring, processing and searching datasets of essentially unlimited\nsize. A wormtable consists of a set of rows, each of which contains\nvalues belonging to a fixed number of columns. Rows are encoded\nin a custom binary format, designed to be flexible, compact and\nportable. Rows are stored in a data file, and the offsets and lengths\nof these rows are stored in a Berkeley DB database\nto support efficient random access.  Wormtable also\nsupports efficient searching and retrieval of rows with particular\nvalues through the use of indexes, also based on Berkeley DB.\n\nThe Variant Call Format (VCF) is supported directly by wormtable\nthrough a command line conversion program, vcf2wt. There is also a\ncommand line utility wtadmin to manage wormtables, including the ability to\ndump values and add, remove and view indexes.\n\nIf you use wormtable in your work, please cite the BMC Bioinformatics\n`article <http://www.biomedcentral.com/1471-2105/14/356>`_. See\nthe ``CITATION.txt`` file for details.\n\n-------------\nDocumentation\n-------------\n\nFull documentation for ``wormtable`` is available at\n`<http://pythonhosted.org/wormtable>`_.\n\n------------\nInstallation\n------------\n\n*******************************\nQuick install for Debian/Ubuntu\n*******************************\n\nIf you are running Debian or Ubuntu, this should get you up and running quickly::\n\n        $ sudo apt-get install python-dev libdb-dev\n        $ sudo pip install wormtable\n\nFor Python 3, use ``python3-dev`` and ``pip3``.\n\n********************\nGeneral instructions\n********************\n\nOnce Berkeley DB has been installed (see below) we can build the ``wormtable`` module using the\nstandard Python `methods <http://docs.python.org/install/index.html>`_. For\nexample, using pip we have ::\n\n        $ sudo pip install wormtable\n\nOr, we can manually download the package, unpack it and then run::\n\n        $ python setup.py build\n        $ sudo python setup.py install\n\nMost of the time this will compile and install the module without difficulty.\n\nIt is also possible to download the latest development version of\n``wormtable`` from `github <https://github.com/wormtable/wormtable>`_.\n\n\n**************\nPython 2.6/3.1\n**************\n\nWormtable requires the ``argparse`` package, which was introduced to the\nstandard library for version 3.2 (it is also included in 2.7). For users\nof older Python versions, the ``argparse`` module must be installed for\nthe command line utilities to work::\n\n        $ sudo pip install argparse\n\nThis is not necessary for recent versions of Python.\n\n----------------------\nInstalling Berkeley DB\n----------------------\n\nWormtable requires Berkeley DB (version 4.8 or later),\nwhich is available for all major platforms.\n\n*****\nLinux\n*****\n\nInstalling Berkeley DB is very easy on Linux distributions.\n\nOn Debian/Ubuntu use::\n\n        $ sudo apt-get install libdb-dev\n\nand on Red Hat/Fedora use::\n\n        # yum install libdb-devel\n\nOther distributions and package managers should provide a similarly easy\noption to install the DB development files.\n\n********\nMac OS X\n********\n\nBerkeley DB can be installed from source on a mac, via\n`macports <https://www.macports.org/>`_ or\n`homebrew <http://mxcl.github.io/homebrew/>`_.\n\nFor MacPorts, to install e.g. v5.3 ::\n\n    $ sudo port install db53\n\nThen, to build/install wormtable, we need to set the CFLAGS and LDFLAGS environment\nvariables to use the headers and libraries in /opt::\n\n    $ CFLAGS=-I/opt/local/include/db53 LDFLAGS=-L/opt/local/lib/db53/ python setup.py build\n    $ sudo python setup.py install\n\nFor Homebrew, get the current Berkeley DB version and again build wormtable\nafter setting CFLAGS and LDFLAGS appropriately::\n\n    $ brew install berkeley-db\n    $ CFLAGS=-I/usr/local/Cellar/berkeley-db/5.3.21/include/ LDFLAGS=-I/usr/local/Cellar/berkeley-db/5.3.21/lib/ python setup.py build\n    $ sudo python setup.py install\n\nFor more details of Berkely DB versions, see here: https://www.macports.org/ports.php?by=category&substr=databases\n\n\n***************\nOther Platforms\n***************\n\nOn platforms that Berkeley DB is not available as part of the native packaging\nsystem (or DB was installed locally because of non-root access)\nthere can be issues with finding the correct headers and libraries\nwhen compiling ``wormtable``. For example,\nif we add the DB 4.8 package on FreeBSD using::\n\n        # pkg_add -r db48\n\nwe get the following errors when we try to install wormtable::\n\n        $ python setup.py build\n        ... [Messages cut for brevity] ...\n        _wormtablemodule.c:3727: error: 'DB_NEXT_NODUP' undeclared (first use in this function)\n        _wormtablemodule.c:3733: error: 'DB_NOTFOUND' undeclared (first use in this function)\n        _wormtablemodule.c:3739: error: 'DistinctValueIterator' has no member named 'cursor'\n        _wormtablemodule.c:3739: error: 'DistinctValueIterator' has no member named 'cursor'\n        _wormtablemodule.c:3740: error: 'DistinctValueIterator' has no member named 'cursor'\n        error: command 'cc' failed with exit status 1\n\nThis is because the compiler does not know where to find the headers and library\nfiles for Berkeley DB.\nTo remedy this we must set the\n``LDFLAGS`` and ``CFLAGS`` environment variables to\ntheir correct values. Unfortunately there is no simple method to do this\nand some knowledge of where your system keeps headers and libraries\nis needed. To complete the installation for the FreeBSD example above,\nwe can do the following::\n\n         $ CFLAGS=-I/usr/local/include/db48 LDFLAGS=-L/usr/local/lib/db48 python setup.py build\n         $ sudo python setup.py install\n\n--------------------------------\nInstallation without root access\n--------------------------------\n\nIf you need to install wormtable on a system where Berkeley DB is not\ninstalled (and your system administrator refuses to install it, for\nsome reason), we can still compile and install it locally.\nHere is a recipe that worked on a Debian squeeze machine; however, this is not guaranteed\nto work on any given system and you may need to tweak things a little to suit\nyour environment::\n\n        $ mkdir -p $HOME/.local\n        $ wget http://download.oracle.com/berkeley-db/db-4.8.30.tar.gz\n        $ tar -zxf db-4.8.30.tar.gz\n        $ cd db-4.8.30/build_unix/\n        $ ../dist/configure --prefix=$HOME/.local\n        $ make install\n\nThis downloads a version of Berkeley DB from Oracle, compiles and\nthen installs it to the directory $HOME/.local. (The version of Berkeley DB\nyou use doesn't really matter once it's at least 4.8.)\nNow, download\nthe latest version of wormtable, untar it and `cd` to the new directory.\nWe can then install it locally::\n\n        $ CFLAGS=-I$HOME/.local/include LDFLAGS=-L$HOME/.local/lib/ python setup.py install --user\n\nNow we need to set up some paths so that we can use this at run time. Put the following\nlines into your $HOME/.bashrc (or equivalent if you use another shell)::\n\n        export LD_LIBRARY_PATH=$HOME/.local/lib:$LD_LIBRARY_PATH\n        export PATH=$HOME/.local/bin:$PATH\n\nThen, log out, log back in, and you should be able to use wormtable.\n\n\n----------\nTest suite\n----------\n\nWormtable has an extensive suite of tests to ensure that data\nis stored correctly.\nIt is a good idea to run these immediately after installation::\n\n        $ python tests.py\n\n\n****************\nTested platforms\n****************\n\nWormtable is highly portable, and\nhas been successfully built and tested\non the following platforms:\n\n====================    ========        ======          ===========\nOperating system        Platform        Python          Compiler\n====================    ========        ======          ===========\nUbuntu 13.04            x86-64          2.7.4           gcc 4.7.3\nUbuntu 13.04            x86-64          3.3.1           gcc 4.7.3\nUbuntu 13.04            x86-64          2.7.4           clang 3.2.1\nDebian squeeze          x86-64          2.6.6           gcc 4.4.5\nDebian squeeze          x86-64          3.1.3           gcc 4.4.5\nDebian squeeze          x86-64          3.1.3           clang 1.1\nDebian squeeze          ppc64           2.6.6           gcc 4.4.5\nDebian squeeze          ppc64           3.1.3           gcc 4.4.5\nDebian wheezy           armv6l          2.7.3           gcc 4.6.3\nFedora 17               i386            2.7.3           gcc 4.7.2\nFedora 17               i386            3.2.3           gcc 4.7.2\nFreeBSD 9.0             i386            3.2.2           gcc 4.2.2\nFreeBSD 9.0             i386            2.7.2           gcc 4.2.2\nFreeBSD 9.0             i386            3.1.4           clang 3.0\nOS X 10.8.4             x86-64          2.7.2           clang 4.2\nSolaris 10              SPARC           3.3.2           gcc 4.8.0\nSolaris 11.1            SPARC           2.6.8           gcc 4.5.2\nSolaris 11.1            SPARC           2.6.8           Sun C 5.12\nScientific Linux 6.2    x86-64          2.6.6           icc 12.0.0\n====================    ========        ======          ===========", "description_content_type": null, "docs_url": "https://pythonhosted.org/wormtable/", "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/wormtable", "keywords": "Berkeley DB,VCF,Variant Call Format,Bioinformatics", "license": "GNU LGPLv3+", "maintainer": null, "maintainer_email": null, "name": "wormtable", "package_url": "https://pypi.org/project/wormtable/", "platform": "POSIX", "project_url": "https://pypi.org/project/wormtable/", "project_urls": {"Homepage": "http://pypi.python.org/pypi/wormtable"}, "release_url": "https://pypi.org/project/wormtable/0.1.5/", "requires_dist": null, "requires_python": null, "summary": "Write-once read-many data sets using Berkeley DB.", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Wormtable is a write-once read-many table for large scale datasets.\nIt provides Python programmers with a simple and efficient method of\nstoring, processing and searching datasets of essentially unlimited\nsize. A wormtable consists of a set of rows, each of which contains\nvalues belonging to a fixed number of columns. Rows are encoded\nin a custom binary format, designed to be flexible, compact and\nportable. Rows are stored in a data file, and the offsets and lengths\nof these rows are stored in a Berkeley DB database\nto support efficient random access.  Wormtable also\nsupports efficient searching and retrieval of rows with particular\nvalues through the use of indexes, also based on Berkeley DB.</p>\n<p>The Variant Call Format (VCF) is supported directly by wormtable\nthrough a command line conversion program, vcf2wt. There is also a\ncommand line utility wtadmin to manage wormtables, including the ability to\ndump values and add, remove and view indexes.</p>\n<p>If you use wormtable in your work, please cite the BMC Bioinformatics\n<a href=\"http://www.biomedcentral.com/1471-2105/14/356\" rel=\"nofollow\">article</a>. See\nthe <tt>CITATION.txt</tt> file for details.</p>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Full documentation for <tt>wormtable</tt> is available at\n<a href=\"http://pythonhosted.org/wormtable\" rel=\"nofollow\">http://pythonhosted.org/wormtable</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"quick-install-for-debian-ubuntu\">\n<h3>Quick install for Debian/Ubuntu</h3>\n<p>If you are running Debian or Ubuntu, this should get you up and running quickly:</p>\n<pre>$ sudo apt-get install python-dev libdb-dev\n$ sudo pip install wormtable\n</pre>\n<p>For Python 3, use <tt><span class=\"pre\">python3-dev</span></tt> and <tt>pip3</tt>.</p>\n</div>\n<div id=\"general-instructions\">\n<h3>General instructions</h3>\n<p>Once Berkeley DB has been installed (see below) we can build the <tt>wormtable</tt> module using the\nstandard Python <a href=\"http://docs.python.org/install/index.html\" rel=\"nofollow\">methods</a>. For\nexample, using pip we have</p>\n<pre>$ sudo pip install wormtable\n</pre>\n<p>Or, we can manually download the package, unpack it and then run:</p>\n<pre>$ python setup.py build\n$ sudo python setup.py install\n</pre>\n<p>Most of the time this will compile and install the module without difficulty.</p>\n<p>It is also possible to download the latest development version of\n<tt>wormtable</tt> from <a href=\"https://github.com/wormtable/wormtable\" rel=\"nofollow\">github</a>.</p>\n</div>\n<div id=\"python-2-6-3-1\">\n<h3>Python 2.6/3.1</h3>\n<p>Wormtable requires the <tt>argparse</tt> package, which was introduced to the\nstandard library for version 3.2 (it is also included in 2.7). For users\nof older Python versions, the <tt>argparse</tt> module must be installed for\nthe command line utilities to work:</p>\n<pre>$ sudo pip install argparse\n</pre>\n<p>This is not necessary for recent versions of Python.</p>\n</div>\n</div>\n<div id=\"installing-berkeley-db\">\n<h2>Installing Berkeley DB</h2>\n<p>Wormtable requires Berkeley DB (version 4.8 or later),\nwhich is available for all major platforms.</p>\n<div id=\"linux\">\n<h3>Linux</h3>\n<p>Installing Berkeley DB is very easy on Linux distributions.</p>\n<p>On Debian/Ubuntu use:</p>\n<pre>$ sudo apt-get install libdb-dev\n</pre>\n<p>and on Red Hat/Fedora use:</p>\n<pre># yum install libdb-devel\n</pre>\n<p>Other distributions and package managers should provide a similarly easy\noption to install the DB development files.</p>\n</div>\n<div id=\"mac-os-x\">\n<h3>Mac OS X</h3>\n<p>Berkeley DB can be installed from source on a mac, via\n<a href=\"https://www.macports.org/\" rel=\"nofollow\">macports</a> or\n<a href=\"http://mxcl.github.io/homebrew/\" rel=\"nofollow\">homebrew</a>.</p>\n<p>For MacPorts, to install e.g. v5.3</p>\n<pre>$ sudo port install db53\n</pre>\n<p>Then, to build/install wormtable, we need to set the CFLAGS and LDFLAGS environment\nvariables to use the headers and libraries in /opt:</p>\n<pre>$ CFLAGS=-I/opt/local/include/db53 LDFLAGS=-L/opt/local/lib/db53/ python setup.py build\n$ sudo python setup.py install\n</pre>\n<p>For Homebrew, get the current Berkeley DB version and again build wormtable\nafter setting CFLAGS and LDFLAGS appropriately:</p>\n<pre>$ brew install berkeley-db\n$ CFLAGS=-I/usr/local/Cellar/berkeley-db/5.3.21/include/ LDFLAGS=-I/usr/local/Cellar/berkeley-db/5.3.21/lib/ python setup.py build\n$ sudo python setup.py install\n</pre>\n<p>For more details of Berkely DB versions, see here: <a href=\"https://www.macports.org/ports.php?by=category&amp;substr=databases\" rel=\"nofollow\">https://www.macports.org/ports.php?by=category&amp;substr=databases</a></p>\n</div>\n<div id=\"other-platforms\">\n<h3>Other Platforms</h3>\n<p>On platforms that Berkeley DB is not available as part of the native packaging\nsystem (or DB was installed locally because of non-root access)\nthere can be issues with finding the correct headers and libraries\nwhen compiling <tt>wormtable</tt>. For example,\nif we add the DB 4.8 package on FreeBSD using:</p>\n<pre># pkg_add -r db48\n</pre>\n<p>we get the following errors when we try to install wormtable:</p>\n<pre>$ python setup.py build\n... [Messages cut for brevity] ...\n_wormtablemodule.c:3727: error: 'DB_NEXT_NODUP' undeclared (first use in this function)\n_wormtablemodule.c:3733: error: 'DB_NOTFOUND' undeclared (first use in this function)\n_wormtablemodule.c:3739: error: 'DistinctValueIterator' has no member named 'cursor'\n_wormtablemodule.c:3739: error: 'DistinctValueIterator' has no member named 'cursor'\n_wormtablemodule.c:3740: error: 'DistinctValueIterator' has no member named 'cursor'\nerror: command 'cc' failed with exit status 1\n</pre>\n<p>This is because the compiler does not know where to find the headers and library\nfiles for Berkeley DB.\nTo remedy this we must set the\n<tt>LDFLAGS</tt> and <tt>CFLAGS</tt> environment variables to\ntheir correct values. Unfortunately there is no simple method to do this\nand some knowledge of where your system keeps headers and libraries\nis needed. To complete the installation for the FreeBSD example above,\nwe can do the following:</p>\n<pre>$ CFLAGS=-I/usr/local/include/db48 LDFLAGS=-L/usr/local/lib/db48 python setup.py build\n$ sudo python setup.py install\n</pre>\n</div>\n</div>\n<div id=\"installation-without-root-access\">\n<h2>Installation without root access</h2>\n<p>If you need to install wormtable on a system where Berkeley DB is not\ninstalled (and your system administrator refuses to install it, for\nsome reason), we can still compile and install it locally.\nHere is a recipe that worked on a Debian squeeze machine; however, this is not guaranteed\nto work on any given system and you may need to tweak things a little to suit\nyour environment:</p>\n<pre>$ mkdir -p $HOME/.local\n$ wget http://download.oracle.com/berkeley-db/db-4.8.30.tar.gz\n$ tar -zxf db-4.8.30.tar.gz\n$ cd db-4.8.30/build_unix/\n$ ../dist/configure --prefix=$HOME/.local\n$ make install\n</pre>\n<p>This downloads a version of Berkeley DB from Oracle, compiles and\nthen installs it to the directory $HOME/.local. (The version of Berkeley DB\nyou use doesn\u2019t really matter once it\u2019s at least 4.8.)\nNow, download\nthe latest version of wormtable, untar it and <cite>cd</cite> to the new directory.\nWe can then install it locally:</p>\n<pre>$ CFLAGS=-I$HOME/.local/include LDFLAGS=-L$HOME/.local/lib/ python setup.py install --user\n</pre>\n<p>Now we need to set up some paths so that we can use this at run time. Put the following\nlines into your $HOME/.bashrc (or equivalent if you use another shell):</p>\n<pre>export LD_LIBRARY_PATH=$HOME/.local/lib:$LD_LIBRARY_PATH\nexport PATH=$HOME/.local/bin:$PATH\n</pre>\n<p>Then, log out, log back in, and you should be able to use wormtable.</p>\n</div>\n<div id=\"test-suite\">\n<h2>Test suite</h2>\n<p>Wormtable has an extensive suite of tests to ensure that data\nis stored correctly.\nIt is a good idea to run these immediately after installation:</p>\n<pre>$ python tests.py\n</pre>\n<div id=\"tested-platforms\">\n<h3>Tested platforms</h3>\n<p>Wormtable is highly portable, and\nhas been successfully built and tested\non the following platforms:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Operating system</th>\n<th>Platform</th>\n<th>Python</th>\n<th>Compiler</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Ubuntu 13.04</td>\n<td>x86-64</td>\n<td>2.7.4</td>\n<td>gcc 4.7.3</td>\n</tr>\n<tr><td>Ubuntu 13.04</td>\n<td>x86-64</td>\n<td>3.3.1</td>\n<td>gcc 4.7.3</td>\n</tr>\n<tr><td>Ubuntu 13.04</td>\n<td>x86-64</td>\n<td>2.7.4</td>\n<td>clang 3.2.1</td>\n</tr>\n<tr><td>Debian squeeze</td>\n<td>x86-64</td>\n<td>2.6.6</td>\n<td>gcc 4.4.5</td>\n</tr>\n<tr><td>Debian squeeze</td>\n<td>x86-64</td>\n<td>3.1.3</td>\n<td>gcc 4.4.5</td>\n</tr>\n<tr><td>Debian squeeze</td>\n<td>x86-64</td>\n<td>3.1.3</td>\n<td>clang 1.1</td>\n</tr>\n<tr><td>Debian squeeze</td>\n<td>ppc64</td>\n<td>2.6.6</td>\n<td>gcc 4.4.5</td>\n</tr>\n<tr><td>Debian squeeze</td>\n<td>ppc64</td>\n<td>3.1.3</td>\n<td>gcc 4.4.5</td>\n</tr>\n<tr><td>Debian wheezy</td>\n<td>armv6l</td>\n<td>2.7.3</td>\n<td>gcc 4.6.3</td>\n</tr>\n<tr><td>Fedora 17</td>\n<td>i386</td>\n<td>2.7.3</td>\n<td>gcc 4.7.2</td>\n</tr>\n<tr><td>Fedora 17</td>\n<td>i386</td>\n<td>3.2.3</td>\n<td>gcc 4.7.2</td>\n</tr>\n<tr><td>FreeBSD 9.0</td>\n<td>i386</td>\n<td>3.2.2</td>\n<td>gcc 4.2.2</td>\n</tr>\n<tr><td>FreeBSD 9.0</td>\n<td>i386</td>\n<td>2.7.2</td>\n<td>gcc 4.2.2</td>\n</tr>\n<tr><td>FreeBSD 9.0</td>\n<td>i386</td>\n<td>3.1.4</td>\n<td>clang 3.0</td>\n</tr>\n<tr><td>OS X 10.8.4</td>\n<td>x86-64</td>\n<td>2.7.2</td>\n<td>clang 4.2</td>\n</tr>\n<tr><td>Solaris 10</td>\n<td>SPARC</td>\n<td>3.3.2</td>\n<td>gcc 4.8.0</td>\n</tr>\n<tr><td>Solaris 11.1</td>\n<td>SPARC</td>\n<td>2.6.8</td>\n<td>gcc 4.5.2</td>\n</tr>\n<tr><td>Solaris 11.1</td>\n<td>SPARC</td>\n<td>2.6.8</td>\n<td>Sun C 5.12</td>\n</tr>\n<tr><td>Scientific Linux 6.2</td>\n<td>x86-64</td>\n<td>2.6.6</td>\n<td>icc 12.0.0</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2088183, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8da3938e3e40d895941de19b98b396e7", "sha256": "61d1faa10bbf9a53143054ce8240e0b3ecbcd087ef2da6b683961b2aa60ff977"}, "downloads": -1, "filename": "wormtable-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8da3938e3e40d895941de19b98b396e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93329, "upload_time": "2013-11-27T12:49:43", "upload_time_iso_8601": "2013-11-27T12:49:43.735293Z", "url": "https://files.pythonhosted.org/packages/56/ce/a5d415583094c713490a288803a878f81ba5b30baf5c52b37628ad550669/wormtable-0.1.0.tar.gz", "yanked": false}], "0.1.0a1": [{"comment_text": "", "digests": {"md5": "72845cf2dfe755b3770b0a7f3f026353", "sha256": "393632b8e9fef4faee1b8914b62af2a8f170ee4bf3a1016ca6a1e581a483b41f"}, "downloads": -1, "filename": "wormtable-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "72845cf2dfe755b3770b0a7f3f026353", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61154, "upload_time": "2013-06-14T11:51:33", "upload_time_iso_8601": "2013-06-14T11:51:33.402371Z", "url": "https://files.pythonhosted.org/packages/20/bc/dee70510509b78d53116282756063848fd615cdee60b141204a0a1363e2c/wormtable-0.1.0a1.tar.gz", "yanked": false}], "0.1.0b1": [{"comment_text": "", "digests": {"md5": "f7e991a1a207f4dbc75ba3452aa02c53", "sha256": "ec8760b527dd13fb69459100d2521ce7302dd0b6c20bfe16430e252e9d51b85e"}, "downloads": -1, "filename": "wormtable-0.1.0b1.tar.gz", "has_sig": false, "md5_digest": "f7e991a1a207f4dbc75ba3452aa02c53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67807, "upload_time": "2013-07-07T15:25:37", "upload_time_iso_8601": "2013-07-07T15:25:37.194874Z", "url": "https://files.pythonhosted.org/packages/59/cd/40dcaeb47a7f2eba1e9a189f1d9728abace6b99634313250a000c964fc1e/wormtable-0.1.0b1.tar.gz", "yanked": false}], "0.1.0b2": [{"comment_text": "", "digests": {"md5": "7c6ddf79c4ddd3ec4d0f5e05ef06bafe", "sha256": "e02ad3c80828129ea421be6b76654496d32fe1befebeb6ec2173cafdbab2c725"}, "downloads": -1, "filename": "wormtable-0.1.0b2.tar.gz", "has_sig": false, "md5_digest": "7c6ddf79c4ddd3ec4d0f5e05ef06bafe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84630, "upload_time": "2013-08-07T20:00:43", "upload_time_iso_8601": "2013-08-07T20:00:43.386697Z", "url": "https://files.pythonhosted.org/packages/49/b6/05c71bd81d9edebbf07a874ff05a88c85cae1dcdc0c2556529add79bf565/wormtable-0.1.0b2.tar.gz", "yanked": false}], "0.1.0b3": [{"comment_text": "", "digests": {"md5": "d31059d69506b03e29ceeb3935cc9126", "sha256": "9d13c6b6b099575bdf1e163cc6ab57bc7734d05cdbdd9e7d94a2e37e5c4b3b5f"}, "downloads": -1, "filename": "wormtable-0.1.0b3.tar.gz", "has_sig": false, "md5_digest": "d31059d69506b03e29ceeb3935cc9126", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86999, "upload_time": "2013-08-21T13:44:18", "upload_time_iso_8601": "2013-08-21T13:44:18.008681Z", "url": "https://files.pythonhosted.org/packages/85/58/92077718319d1182559ebf48f47e28202bbeb41c7b4539f5d6b49f9a8dfe/wormtable-0.1.0b3.tar.gz", "yanked": false}], "0.1.0b4": [{"comment_text": "", "digests": {"md5": "7a58cdd9b2a6a4714d5f292f0f4a4d4b", "sha256": "f3479e632c4f577edaced65cd73bf68def1ccbbf43686a2358e108ada4aba9e3"}, "downloads": -1, "filename": "wormtable-0.1.0b4.tar.gz", "has_sig": false, "md5_digest": "7a58cdd9b2a6a4714d5f292f0f4a4d4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86010, "upload_time": "2013-08-26T17:02:41", "upload_time_iso_8601": "2013-08-26T17:02:41.281219Z", "url": "https://files.pythonhosted.org/packages/b5/30/a9f9f5f1fd685665086fc3ae580da5933ae14bbcc67da4716a6770c4a0f0/wormtable-0.1.0b4.tar.gz", "yanked": false}], "0.1.0b5": [{"comment_text": "", "digests": {"md5": "68d0c29085e45fec5252f3fb779e357e", "sha256": "f2ace8477d1d92ea779c721f21e7d115cc955762b35028e78ad2c1b5b0131ed4"}, "downloads": -1, "filename": "wormtable-0.1.0b5.tar.gz", "has_sig": false, "md5_digest": "68d0c29085e45fec5252f3fb779e357e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89594, "upload_time": "2013-11-19T16:39:16", "upload_time_iso_8601": "2013-11-19T16:39:16.297720Z", "url": "https://files.pythonhosted.org/packages/3b/6f/826bad7173e9bf0ed9784225cc4164e4947808d304a2db206c67fd14878e/wormtable-0.1.0b5.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9a774842f91ce0e2be7df2396786cb78", "sha256": "c93a27fddbf0b6d8eac46e8ffef9c34cf85700164d1e3041661c01748e1acc2c"}, "downloads": -1, "filename": "wormtable-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9a774842f91ce0e2be7df2396786cb78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89818, "upload_time": "2014-08-01T08:48:40", "upload_time_iso_8601": "2014-08-01T08:48:40.216407Z", "url": "https://files.pythonhosted.org/packages/c9/07/cb8bf012a02fbafabc888ff66d0b731da51d23f22377767a2910187cdcf6/wormtable-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "4e1d9c63cc91e7d6d75ed60d8d92cc9c", "sha256": "29e8d7c1dbcd505124c0bafc21e60230ae2ab5b53ee8cdd0c9b90057ace97d91"}, "downloads": -1, "filename": "wormtable-0.1.2.tar.gz", "has_sig": false, "md5_digest": "4e1d9c63cc91e7d6d75ed60d8d92cc9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90166, "upload_time": "2014-11-12T18:26:20", "upload_time_iso_8601": "2014-11-12T18:26:20.105377Z", "url": "https://files.pythonhosted.org/packages/e0/00/4952881db4cf20f7749b5f72392170bbcb55ec051348f5cbd1c7a16c79e8/wormtable-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "53ad83d705fee7b790bac8ea5f2a8fa3", "sha256": "0ce6a194a79a7c053901f90bb81b484318f927a24e97a1dea1d2641c916c85f0"}, "downloads": -1, "filename": "wormtable-0.1.3.tar.gz", "has_sig": false, "md5_digest": "53ad83d705fee7b790bac8ea5f2a8fa3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90692, "upload_time": "2014-12-19T10:24:51", "upload_time_iso_8601": "2014-12-19T10:24:51.047360Z", "url": "https://files.pythonhosted.org/packages/51/32/7f619291448c5e3df545b21dad3f14a2c7d65243ee56cb12a3dd771d0b07/wormtable-0.1.3.tar.gz", "yanked": false}], "0.1.4a1": [{"comment_text": "", "digests": {"md5": "bda444e3781b901898f4a7bf21647c97", "sha256": "68bbf5995ac849a128d67db9c016005151f326398712fb8f737cc85112848b5e"}, "downloads": -1, "filename": "wormtable-0.1.4a1.tar.gz", "has_sig": false, "md5_digest": "bda444e3781b901898f4a7bf21647c97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90955, "upload_time": "2015-04-08T13:01:25", "upload_time_iso_8601": "2015-04-08T13:01:25.025855Z", "url": "https://files.pythonhosted.org/packages/b3/b0/5727f8628a48196e9729bc822031c66e3cb7ed335ac5a5310da0427bfdd3/wormtable-0.1.4a1.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "9884ecc1364fe757d0a93ab3e980d7bd", "sha256": "4767a98a560a072075c72560cfcc8675ab747376fa2008fc71b749d5dbeecce9"}, "downloads": -1, "filename": "wormtable-0.1.5.tar.gz", "has_sig": false, "md5_digest": "9884ecc1364fe757d0a93ab3e980d7bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93184, "upload_time": "2016-04-28T08:06:57", "upload_time_iso_8601": "2016-04-28T08:06:57.938581Z", "url": "https://files.pythonhosted.org/packages/18/e3/f8ca696cd7365c1104bee49a003bb5c12869cab6365adae40f6e51cd0e90/wormtable-0.1.5.tar.gz", "yanked": false}], "0.1.5a1": [{"comment_text": "", "digests": {"md5": "5b5de5de2a2fa0ecbc085c5a75302d24", "sha256": "2ea7645d213500b9edbbed1259fb3e4ad10656f0d1d2f5f8a77b1f1fc3e48c84"}, "downloads": -1, "filename": "wormtable-0.1.5a1.tar.gz", "has_sig": false, "md5_digest": "5b5de5de2a2fa0ecbc085c5a75302d24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91774, "upload_time": "2015-12-10T13:21:39", "upload_time_iso_8601": "2015-12-10T13:21:39.070201Z", "url": "https://files.pythonhosted.org/packages/07/88/7ca71662a64da4cd7d97d7b1e0be95ae21b2271d52301e921077f98562a7/wormtable-0.1.5a1.tar.gz", "yanked": false}], "0.1.5a2": [{"comment_text": "", "digests": {"md5": "b21ab59903d334049b413fd60075c6f2", "sha256": "648f4b0f92db664af637849c7918a209470a646e4dbf35824b2927901f61d110"}, "downloads": -1, "filename": "wormtable-0.1.5a2.tar.gz", "has_sig": false, "md5_digest": "b21ab59903d334049b413fd60075c6f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91961, "upload_time": "2015-12-10T13:46:32", "upload_time_iso_8601": "2015-12-10T13:46:32.318321Z", "url": "https://files.pythonhosted.org/packages/58/ae/48a66193d2d98c5732a9fa7a4fe2d4b690a2bab518f6d6c6c43d6a5d8516/wormtable-0.1.5a2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9884ecc1364fe757d0a93ab3e980d7bd", "sha256": "4767a98a560a072075c72560cfcc8675ab747376fa2008fc71b749d5dbeecce9"}, "downloads": -1, "filename": "wormtable-0.1.5.tar.gz", "has_sig": false, "md5_digest": "9884ecc1364fe757d0a93ab3e980d7bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93184, "upload_time": "2016-04-28T08:06:57", "upload_time_iso_8601": "2016-04-28T08:06:57.938581Z", "url": "https://files.pythonhosted.org/packages/18/e3/f8ca696cd7365c1104bee49a003bb5c12869cab6365adae40f6e51cd0e90/wormtable-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:45 2020"}