{"info": {"author": "Daniel Paquin", "author_email": "dpaq34@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# coinbasepro-python\n[![Build Status](https://travis-ci.org/yiwensong/coinbasepro-python.svg?branch=master)](https://travis-ci.org/yiwensong/coinbasepro-python)\n[![Coverage Status](https://coveralls.io/repos/github/yiwensong/coinbasepro-python/badge.svg?branch=master)](https://coveralls.io/github/yiwensong/coinbasepro-python?branch=master)\n[![Documentation Status](https://readthedocs.org/projects/cbpro2/badge/?version=master&style=flat)](https://cbpro2.readthedocs.io/en/master/)\n[![PyPI version](https://badge.fury.io/py/cbpro2.svg)](https://pypi.org/project/cbpro2/)\n\nThe Python client for the [Coinbase Pro API](https://docs.pro.coinbase.com/) (formerly known as\nthe GDAX)\n\n### Note\nThis is a fork of the original [cbpro project](https://github.com/danpaquin/coinbasepro-python).\nI created this fork because between September and October of 2018, the maintainers of\nthat project seemed to be inactive in reviewing and merging pull requests. The goal of\nthis fork is as follows:\n- Keep reasonably up-to-date with upstream\n- Improve developer workflow and style\n- Surface coverage stats to encourage unit testing\n\n## Benefits\n- A simple to use python wrapper for both public and authenticated endpoints.\n- In about 10 minutes, you could be programmatically trading on one of the\nlargest Bitcoin exchanges in the *world*!\n- Do not worry about handling the nuances of the API with easy-to-use methods\nfor every API endpoint.\n- Gain an advantage in the market by getting under the hood of CB Pro to learn\nwhat and who is behind every tick.\n\n## Under Development\n- Test Scripts\n- Additional Functionality for the real-time order book\n- FIX API Client **Looking for assistance**\n\n## Getting Started\nThis README is documentation on the syntax of the python client presented in\nthis repository. See function docstrings for full syntax details.  \n**This API attempts to present a clean interface to CB Pro, but in order to use it\nto its full potential, you must familiarize yourself with the official CB Pro\ndocumentation.**\n\n- https://docs.pro.coinbase.com/\n\n- You may manually install the project or use ```pip```:\n```python\npip install cbpro2\n#or\npip install git+git://github.com/yiwensong/coinbasepro-python.git\n```\n\n### Public Client\nOnly some endpoints in the API are available to everyone.  The public endpoints\ncan be reached using ```PublicClient```\n\n```python\nimport cbpro\npublic_client = cbpro.PublicClient()\n```\n\n### PublicClient Methods\n- [get_products](https://docs.pro.coinbase.com//#get-products)\n```python\npublic_client.get_products()\n```\n\n- [get_product_order_book](https://docs.pro.coinbase.com/#get-product-order-book)\n```python\n# Get the order book at the default level.\npublic_client.get_product_order_book('BTC-USD')\n# Get the order book at a specific level.\npublic_client.get_product_order_book('BTC-USD', level=1)\n```\n\n- [get_product_ticker](https://docs.pro.coinbase.com/#get-product-ticker)\n```python\n# Get the product ticker for a specific product.\npublic_client.get_product_ticker(product_id='ETH-USD')\n```\n\n- [get_product_trades](https://docs.pro.coinbase.com/#get-trades) (paginated)\n```python\n# Get the product trades for a specific product.\n# Returns a generator\npublic_client.get_product_trades(product_id='ETH-USD')\n```\n\n- [get_product_historic_rates](https://docs.pro.coinbase.com/#get-historic-rates)\n```python\npublic_client.get_product_historic_rates('ETH-USD')\n# To include other parameters, see function docstring:\npublic_client.get_product_historic_rates('ETH-USD', granularity=3000)\n```\n\n- [get_product_24hr_stats](https://docs.pro.coinbase.com/#get-24hr-stats)\n```python\npublic_client.get_product_24hr_stats('ETH-USD')\n```\n\n- [get_currencies](https://docs.pro.coinbase.com/#get-currencies)\n```python\npublic_client.get_currencies()\n```\n\n- [get_time](https://docs.pro.coinbase.com/#time)\n```python\npublic_client.get_time()\n```\n\n### Authenticated Client\n\nNot all API endpoints are available to everyone.\nThose requiring user authentication can be reached using `AuthenticatedClient`.\nYou must setup API access within your\n[account settings](https://www.pro.coinbase.com/settings/api).\nThe `AuthenticatedClient` inherits all methods from the `PublicClient`\nclass, so you will only need to initialize one if you are planning to\nintegrate both into your script.\n\n```python\nimport cbpro\nauth_client = cbpro.AuthenticatedClient(key, b64secret, passphrase)\n# Use the sandbox API (requires a different set of API access credentials)\nauth_client = cbpro.AuthenticatedClient(key, b64secret, passphrase,\n                                  api_url=\"https://api-public.sandbox.pro.coinbase.com\")\n```\n\n### Pagination\nSome calls are [paginated](https://docs.pro.coinbase.com/#pagination), meaning multiple\ncalls must be made to receive the full set of data. The CB Pro Python API provides\nan abstraction for paginated endpoints in the form of generators which provide a\nclean interface for iteration but may make multiple HTTP requests behind the\nscenes. The pagination options `before`, `after`, and `limit` may be supplied as\nkeyword arguments if desired, but aren't necessary for typical use cases.\n```python\nfills_gen = auth_client.get_fills()\n# Get all fills (will possibly make multiple HTTP requests)\nall_fills = list(fills_gen)\n```\nOne use case for pagination parameters worth pointing out is retrieving only\nnew data since the previous request. For the case of `get_fills()`, the\n`trade_id` is the parameter used for indexing. By passing\n`before=some_trade_id`, only fills more recent than that `trade_id` will be\nreturned. Note that when using `before`, a maximum of 100 entries will be\nreturned - this is a limitation of CB Pro.\n```python\nfrom itertools import islice\n# Get 5 most recent fills\nrecent_fills = islice(auth_client.get_fills(), 5)\n# Only fetch new fills since last call by utilizing `before` parameter.\nnew_fills = auth_client.get_fills(before=recent_fills[0]['trade_id'])\n```\n\n### AuthenticatedClient Methods\n- [get_accounts](https://docs.pro.coinbase.com/#list-accounts)\n```python\nauth_client.get_accounts()\n```\n\n- [get_account](https://docs.pro.coinbase.com/#get-an-account)\n```python\nauth_client.get_account(\"7d0f7d8e-dd34-4d9c-a846-06f431c381ba\")\n```\n\n- [get_account_history](https://docs.pro.coinbase.com/#get-account-history) (paginated)\n```python\n# Returns generator:\nauth_client.get_account_history(\"7d0f7d8e-dd34-4d9c-a846-06f431c381ba\")\n```\n\n- [get_account_holds](https://docs.pro.coinbase.com/#get-holds) (paginated)\n```python\n# Returns generator:\nauth_client.get_account_holds(\"7d0f7d8e-dd34-4d9c-a846-06f431c381ba\")\n```\n\n- [buy & sell](https://docs.pro.coinbase.com/#place-a-new-order)\n```python\n# Buy 0.01 BTC @ 100 USD\nauth_client.buy(price='100.00', #USD\n               size='0.01', #BTC\n               order_type='limit',\n               product_id='BTC-USD')\n```\n```python\n# Sell 0.01 BTC @ 200 USD\nauth_client.sell(price='200.00', #USD\n                size='0.01', #BTC\n                order_type='limit',\n                product_id='BTC-USD')\n```\n```python\n# Limit order-specific method\nauth_client.place_limit_order(product_id='BTC-USD',\n                              side='buy',\n                              price='200.00',\n                              size='0.01')\n```\n```python\n# Place a market order by specifying amount of USD to use.\n# Alternatively, `size` could be used to specify quantity in BTC amount.\nauth_client.place_market_order(product_id='BTC-USD',\n                               side='buy',\n                               funds='100.00')\n```\n```python\n# Stop order. `funds` can be used instead of `size` here.\nauth_client.place_stop_order(product_id='BTC-USD',\n                              side='buy',\n                              price='200.00',\n                              size='0.01')\n```\n\n- [cancel_order](https://docs.pro.coinbase.com/#cancel-an-order)\n```python\nauth_client.cancel_order(\"d50ec984-77a8-460a-b958-66f114b0de9b\")\n```\n- [cancel_all](https://docs.pro.coinbase.com/#cancel-all)\n```python\nauth_client.cancel_all(product_id='BTC-USD')\n```\n\n- [get_orders](https://docs.pro.coinbase.com/#list-orders) (paginated)\n```python\n# Returns generator:\nauth_client.get_orders()\n```\n\n- [get_order](https://docs.pro.coinbase.com/#get-an-order)\n```python\nauth_client.get_order(\"d50ec984-77a8-460a-b958-66f114b0de9b\")\n```\n\n- [get_fills](https://docs.pro.coinbase.com/#list-fills) (paginated)\n```python\n# All return generators\nauth_client.get_fills()\n# Get fills for a specific order\nauth_client.get_fills(order_id=\"d50ec984-77a8-460a-b958-66f114b0de9b\")\n# Get fills for a specific product\nauth_client.get_fills(product_id=\"ETH-BTC\")\n```\n\n- [deposit & withdraw](https://docs.pro.coinbase.com/#depositwithdraw)\n```python\ndepositParams = {\n        'amount': '25.00', # Currency determined by account specified\n        'coinbase_account_id': '60680c98bfe96c2601f27e9c'\n}\nauth_client.deposit(depositParams)\n```\n```python\n# Withdraw from CB Pro into Coinbase Wallet\nwithdrawParams = {\n        'amount': '1.00', # Currency determined by account specified\n        'coinbase_account_id': '536a541fa9393bb3c7000023'\n}\nauth_client.withdraw(withdrawParams)\n```\n\n### WebsocketClient\nIf you would like to receive real-time market updates, you must subscribe to the\n[websocket feed](https://docs.pro.coinbase.com/#websocket-feed).\n\n#### Subscribe to a single product\n```python\nimport cbpro\n# Paramters are optional\nwsClient = cbpro.WebsocketClient(url=\"wss://ws-feed.pro.coinbase.com\", products=\"BTC-USD\")\n# Do other stuff...\nwsClient.close()\n```\n\n#### Subscribe to multiple products\n```python\nimport cbpro\n# Paramaters are optional\nwsClient = cbpro.WebsocketClient(url=\"wss://ws-feed.pro.coinbase.com\",\n                                products=[\"BTC-USD\", \"ETH-USD\"])\n# Do other stuff...\nwsClient.close()\n```\n\n### WebsocketClient + Mongodb\nThe ```WebsocketClient``` now supports data gathering via MongoDB. Given a\nMongoDB collection, the ```WebsocketClient``` will stream results directly into\nthe database collection.\n```python\n# import PyMongo and connect to a local, running Mongo instance\nfrom pymongo import MongoClient\nimport cbpro\nmongo_client = MongoClient('mongodb://localhost:27017/')\n\n# specify the database and collection\ndb = mongo_client.cryptocurrency_database\nBTC_collection = db.BTC_collection\n\n# instantiate a WebsocketClient instance, with a Mongo collection as a parameter\nwsClient = cbpro.WebsocketClient(url=\"wss://ws-feed.pro.coinbase.com\", products=\"BTC-USD\",\n    mongo_collection=BTC_collection, should_print=False)\nwsClient.start()\n```\n\n### WebsocketClient Methods\nThe ```WebsocketClient``` subscribes in a separate thread upon initialization.\nThere are three methods which you could overwrite (before initialization) so it\ncan react to the data streaming in.  The current client is a template used for\nillustration purposes only.\n\n- onOpen - called once, *immediately before* the socket connection is made, this\nis where you want to add initial parameters.\n- onMessage - called once for every message that arrives and accepts one\nargument that contains the message of dict type.\n- on_close - called once after the websocket has been closed.\n- close - call this method to close the websocket connection (do not overwrite).\n```python\nimport cbpro, time\nclass myWebsocketClient(cbpro.WebsocketClient):\n    def on_open(self):\n        self.url = \"wss://ws-feed.pro.coinbase.com/\"\n        self.products = [\"LTC-USD\"]\n        self.message_count = 0\n        print(\"Lets count the messages!\")\n    def on_message(self, msg):\n        self.message_count += 1\n        if 'price' in msg and 'type' in msg:\n            print (\"Message type:\", msg[\"type\"],\n                   \"\\t@ {:.3f}\".format(float(msg[\"price\"])))\n    def on_close(self):\n        print(\"-- Goodbye! --\")\n\nwsClient = myWebsocketClient()\nwsClient.start()\nprint(wsClient.url, wsClient.products)\nwhile (wsClient.message_count < 500):\n    print (\"\\nmessage_count =\", \"{} \\n\".format(wsClient.message_count))\n    time.sleep(1)\nwsClient.close()\n```\n\n### Real-time OrderBook\nThe ```OrderBook``` subscribes to a websocket and keeps a real-time record of\nthe orderbook for the product_id input.  Please provide your feedback for future\nimprovements.\n\n```python\nimport cbpro, time\norder_book = cbpro.OrderBook(product_id='BTC-USD')\norder_book.start()\ntime.sleep(10)\norder_book.close()\n```\n\n## Development\n\n### Development Environment\nA development environment can be created and activated with the commands\n```bash\nmake venv && . venv/bin/activate\n```\n\n### Automated Testing\nUnit test framework uses pytest, coverage, and tox. A test suite is under development,\nplease contribute to the coverage. Tests for the authenticated client require a\nset of sandbox API credentials. To provide them, rename\n`api_config.json.example` in the tests folder to `api_config.json` and edit the\nfile accordingly. To run the tests, start in the project directory and run\n\n```bash\nmake test\n```\n\n### Pre-commit\nThis project uses pre-commit to enforce coding style. You can run pre-commit with\nthe following command (after activating the venv)\n```bash\npre-commit run --files [FILES]\n```\nYou can also run\n```bash\npre-commit run --all-files\n```\nbut that is guaranteed to fail because of legacy code that has yet to be linted.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yiwensong/coinbasepro-python", "keywords": "gdax,gdax-api,orderbook,trade,bitcoin,ethereum,BTC,ETH,client,api,wrapper,exchange,crypto,currency,trading,trading-api,coinbase,pro,prime,coinbasepro", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cbpro2", "package_url": "https://pypi.org/project/cbpro2/", "platform": "", "project_url": "https://pypi.org/project/cbpro2/", "project_urls": {"Homepage": "https://github.com/yiwensong/coinbasepro-python"}, "release_url": "https://pypi.org/project/cbpro2/1.0.4/", "requires_dist": null, "requires_python": "", "summary": "The unofficial Python client for the Coinbase Pro API", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>coinbasepro-python</h1>\n<p><a href=\"https://travis-ci.org/yiwensong/coinbasepro-python\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc15b0cea6c3c4d87a200f5b5427011da31517f8/68747470733a2f2f7472617669732d63692e6f72672f796977656e736f6e672f636f696e6261736570726f2d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/yiwensong/coinbasepro-python?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9151095f1f3ab982244829e511b851f8d673933/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f796977656e736f6e672f636f696e6261736570726f2d707974686f6e2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://cbpro2.readthedocs.io/en/master/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f88ac225a56a0bb6ce6787397c12124d1cdee2e5/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f636270726f322f62616467652f3f76657273696f6e3d6d6173746572267374796c653d666c6174\"></a>\n<a href=\"https://pypi.org/project/cbpro2/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c77c20a56498bf53d1daee48f0edc6b3c0e2ce4/68747470733a2f2f62616467652e667572792e696f2f70792f636270726f322e737667\"></a></p>\n<p>The Python client for the <a href=\"https://docs.pro.coinbase.com/\" rel=\"nofollow\">Coinbase Pro API</a> (formerly known as\nthe GDAX)</p>\n<h3>Note</h3>\n<p>This is a fork of the original <a href=\"https://github.com/danpaquin/coinbasepro-python\" rel=\"nofollow\">cbpro project</a>.\nI created this fork because between September and October of 2018, the maintainers of\nthat project seemed to be inactive in reviewing and merging pull requests. The goal of\nthis fork is as follows:</p>\n<ul>\n<li>Keep reasonably up-to-date with upstream</li>\n<li>Improve developer workflow and style</li>\n<li>Surface coverage stats to encourage unit testing</li>\n</ul>\n<h2>Benefits</h2>\n<ul>\n<li>A simple to use python wrapper for both public and authenticated endpoints.</li>\n<li>In about 10 minutes, you could be programmatically trading on one of the\nlargest Bitcoin exchanges in the <em>world</em>!</li>\n<li>Do not worry about handling the nuances of the API with easy-to-use methods\nfor every API endpoint.</li>\n<li>Gain an advantage in the market by getting under the hood of CB Pro to learn\nwhat and who is behind every tick.</li>\n</ul>\n<h2>Under Development</h2>\n<ul>\n<li>Test Scripts</li>\n<li>Additional Functionality for the real-time order book</li>\n<li>FIX API Client <strong>Looking for assistance</strong></li>\n</ul>\n<h2>Getting Started</h2>\n<p>This README is documentation on the syntax of the python client presented in\nthis repository. See function docstrings for full syntax details.<br>\n<strong>This API attempts to present a clean interface to CB Pro, but in order to use it\nto its full potential, you must familiarize yourself with the official CB Pro\ndocumentation.</strong></p>\n<ul>\n<li>\n<p><a href=\"https://docs.pro.coinbase.com/\" rel=\"nofollow\">https://docs.pro.coinbase.com/</a></p>\n</li>\n<li>\n<p>You may manually install the project or use <code>pip</code>:</p>\n</li>\n</ul>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">cbpro2</span>\n<span class=\"c1\">#or</span>\n<span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">git</span><span class=\"o\">+</span><span class=\"n\">git</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">yiwensong</span><span class=\"o\">/</span><span class=\"n\">coinbasepro</span><span class=\"o\">-</span><span class=\"n\">python</span><span class=\"o\">.</span><span class=\"n\">git</span>\n</pre>\n<h3>Public Client</h3>\n<p>Only some endpoints in the API are available to everyone.  The public endpoints\ncan be reached using <code>PublicClient</code></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cbpro</span>\n<span class=\"n\">public_client</span> <span class=\"o\">=</span> <span class=\"n\">cbpro</span><span class=\"o\">.</span><span class=\"n\">PublicClient</span><span class=\"p\">()</span>\n</pre>\n<h3>PublicClient Methods</h3>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com//#get-products\" rel=\"nofollow\">get_products</a></li>\n</ul>\n<pre><span class=\"n\">public_client</span><span class=\"o\">.</span><span class=\"n\">get_products</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#get-product-order-book\" rel=\"nofollow\">get_product_order_book</a></li>\n</ul>\n<pre><span class=\"c1\"># Get the order book at the default level.</span>\n<span class=\"n\">public_client</span><span class=\"o\">.</span><span class=\"n\">get_product_order_book</span><span class=\"p\">(</span><span class=\"s1\">'BTC-USD'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get the order book at a specific level.</span>\n<span class=\"n\">public_client</span><span class=\"o\">.</span><span class=\"n\">get_product_order_book</span><span class=\"p\">(</span><span class=\"s1\">'BTC-USD'</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#get-product-ticker\" rel=\"nofollow\">get_product_ticker</a></li>\n</ul>\n<pre><span class=\"c1\"># Get the product ticker for a specific product.</span>\n<span class=\"n\">public_client</span><span class=\"o\">.</span><span class=\"n\">get_product_ticker</span><span class=\"p\">(</span><span class=\"n\">product_id</span><span class=\"o\">=</span><span class=\"s1\">'ETH-USD'</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#get-trades\" rel=\"nofollow\">get_product_trades</a> (paginated)</li>\n</ul>\n<pre><span class=\"c1\"># Get the product trades for a specific product.</span>\n<span class=\"c1\"># Returns a generator</span>\n<span class=\"n\">public_client</span><span class=\"o\">.</span><span class=\"n\">get_product_trades</span><span class=\"p\">(</span><span class=\"n\">product_id</span><span class=\"o\">=</span><span class=\"s1\">'ETH-USD'</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#get-historic-rates\" rel=\"nofollow\">get_product_historic_rates</a></li>\n</ul>\n<pre><span class=\"n\">public_client</span><span class=\"o\">.</span><span class=\"n\">get_product_historic_rates</span><span class=\"p\">(</span><span class=\"s1\">'ETH-USD'</span><span class=\"p\">)</span>\n<span class=\"c1\"># To include other parameters, see function docstring:</span>\n<span class=\"n\">public_client</span><span class=\"o\">.</span><span class=\"n\">get_product_historic_rates</span><span class=\"p\">(</span><span class=\"s1\">'ETH-USD'</span><span class=\"p\">,</span> <span class=\"n\">granularity</span><span class=\"o\">=</span><span class=\"mi\">3000</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#get-24hr-stats\" rel=\"nofollow\">get_product_24hr_stats</a></li>\n</ul>\n<pre><span class=\"n\">public_client</span><span class=\"o\">.</span><span class=\"n\">get_product_24hr_stats</span><span class=\"p\">(</span><span class=\"s1\">'ETH-USD'</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#get-currencies\" rel=\"nofollow\">get_currencies</a></li>\n</ul>\n<pre><span class=\"n\">public_client</span><span class=\"o\">.</span><span class=\"n\">get_currencies</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#time\" rel=\"nofollow\">get_time</a></li>\n</ul>\n<pre><span class=\"n\">public_client</span><span class=\"o\">.</span><span class=\"n\">get_time</span><span class=\"p\">()</span>\n</pre>\n<h3>Authenticated Client</h3>\n<p>Not all API endpoints are available to everyone.\nThose requiring user authentication can be reached using <code>AuthenticatedClient</code>.\nYou must setup API access within your\n<a href=\"https://www.pro.coinbase.com/settings/api\" rel=\"nofollow\">account settings</a>.\nThe <code>AuthenticatedClient</code> inherits all methods from the <code>PublicClient</code>\nclass, so you will only need to initialize one if you are planning to\nintegrate both into your script.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cbpro</span>\n<span class=\"n\">auth_client</span> <span class=\"o\">=</span> <span class=\"n\">cbpro</span><span class=\"o\">.</span><span class=\"n\">AuthenticatedClient</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">b64secret</span><span class=\"p\">,</span> <span class=\"n\">passphrase</span><span class=\"p\">)</span>\n<span class=\"c1\"># Use the sandbox API (requires a different set of API access credentials)</span>\n<span class=\"n\">auth_client</span> <span class=\"o\">=</span> <span class=\"n\">cbpro</span><span class=\"o\">.</span><span class=\"n\">AuthenticatedClient</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">b64secret</span><span class=\"p\">,</span> <span class=\"n\">passphrase</span><span class=\"p\">,</span>\n                                  <span class=\"n\">api_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://api-public.sandbox.pro.coinbase.com\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Pagination</h3>\n<p>Some calls are <a href=\"https://docs.pro.coinbase.com/#pagination\" rel=\"nofollow\">paginated</a>, meaning multiple\ncalls must be made to receive the full set of data. The CB Pro Python API provides\nan abstraction for paginated endpoints in the form of generators which provide a\nclean interface for iteration but may make multiple HTTP requests behind the\nscenes. The pagination options <code>before</code>, <code>after</code>, and <code>limit</code> may be supplied as\nkeyword arguments if desired, but aren't necessary for typical use cases.</p>\n<pre><span class=\"n\">fills_gen</span> <span class=\"o\">=</span> <span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">get_fills</span><span class=\"p\">()</span>\n<span class=\"c1\"># Get all fills (will possibly make multiple HTTP requests)</span>\n<span class=\"n\">all_fills</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">fills_gen</span><span class=\"p\">)</span>\n</pre>\n<p>One use case for pagination parameters worth pointing out is retrieving only\nnew data since the previous request. For the case of <code>get_fills()</code>, the\n<code>trade_id</code> is the parameter used for indexing. By passing\n<code>before=some_trade_id</code>, only fills more recent than that <code>trade_id</code> will be\nreturned. Note that when using <code>before</code>, a maximum of 100 entries will be\nreturned - this is a limitation of CB Pro.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">itertools</span> <span class=\"kn\">import</span> <span class=\"n\">islice</span>\n<span class=\"c1\"># Get 5 most recent fills</span>\n<span class=\"n\">recent_fills</span> <span class=\"o\">=</span> <span class=\"n\">islice</span><span class=\"p\">(</span><span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">get_fills</span><span class=\"p\">(),</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"c1\"># Only fetch new fills since last call by utilizing `before` parameter.</span>\n<span class=\"n\">new_fills</span> <span class=\"o\">=</span> <span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">get_fills</span><span class=\"p\">(</span><span class=\"n\">before</span><span class=\"o\">=</span><span class=\"n\">recent_fills</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'trade_id'</span><span class=\"p\">])</span>\n</pre>\n<h3>AuthenticatedClient Methods</h3>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#list-accounts\" rel=\"nofollow\">get_accounts</a></li>\n</ul>\n<pre><span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">get_accounts</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#get-an-account\" rel=\"nofollow\">get_account</a></li>\n</ul>\n<pre><span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">get_account</span><span class=\"p\">(</span><span class=\"s2\">\"7d0f7d8e-dd34-4d9c-a846-06f431c381ba\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#get-account-history\" rel=\"nofollow\">get_account_history</a> (paginated)</li>\n</ul>\n<pre><span class=\"c1\"># Returns generator:</span>\n<span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">get_account_history</span><span class=\"p\">(</span><span class=\"s2\">\"7d0f7d8e-dd34-4d9c-a846-06f431c381ba\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#get-holds\" rel=\"nofollow\">get_account_holds</a> (paginated)</li>\n</ul>\n<pre><span class=\"c1\"># Returns generator:</span>\n<span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">get_account_holds</span><span class=\"p\">(</span><span class=\"s2\">\"7d0f7d8e-dd34-4d9c-a846-06f431c381ba\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#place-a-new-order\" rel=\"nofollow\">buy &amp; sell</a></li>\n</ul>\n<pre><span class=\"c1\"># Buy 0.01 BTC @ 100 USD</span>\n<span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">buy</span><span class=\"p\">(</span><span class=\"n\">price</span><span class=\"o\">=</span><span class=\"s1\">'100.00'</span><span class=\"p\">,</span> <span class=\"c1\">#USD</span>\n               <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"s1\">'0.01'</span><span class=\"p\">,</span> <span class=\"c1\">#BTC</span>\n               <span class=\"n\">order_type</span><span class=\"o\">=</span><span class=\"s1\">'limit'</span><span class=\"p\">,</span>\n               <span class=\"n\">product_id</span><span class=\"o\">=</span><span class=\"s1\">'BTC-USD'</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Sell 0.01 BTC @ 200 USD</span>\n<span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">sell</span><span class=\"p\">(</span><span class=\"n\">price</span><span class=\"o\">=</span><span class=\"s1\">'200.00'</span><span class=\"p\">,</span> <span class=\"c1\">#USD</span>\n                <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"s1\">'0.01'</span><span class=\"p\">,</span> <span class=\"c1\">#BTC</span>\n                <span class=\"n\">order_type</span><span class=\"o\">=</span><span class=\"s1\">'limit'</span><span class=\"p\">,</span>\n                <span class=\"n\">product_id</span><span class=\"o\">=</span><span class=\"s1\">'BTC-USD'</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Limit order-specific method</span>\n<span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">place_limit_order</span><span class=\"p\">(</span><span class=\"n\">product_id</span><span class=\"o\">=</span><span class=\"s1\">'BTC-USD'</span><span class=\"p\">,</span>\n                              <span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s1\">'buy'</span><span class=\"p\">,</span>\n                              <span class=\"n\">price</span><span class=\"o\">=</span><span class=\"s1\">'200.00'</span><span class=\"p\">,</span>\n                              <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"s1\">'0.01'</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Place a market order by specifying amount of USD to use.</span>\n<span class=\"c1\"># Alternatively, `size` could be used to specify quantity in BTC amount.</span>\n<span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">place_market_order</span><span class=\"p\">(</span><span class=\"n\">product_id</span><span class=\"o\">=</span><span class=\"s1\">'BTC-USD'</span><span class=\"p\">,</span>\n                               <span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s1\">'buy'</span><span class=\"p\">,</span>\n                               <span class=\"n\">funds</span><span class=\"o\">=</span><span class=\"s1\">'100.00'</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Stop order. `funds` can be used instead of `size` here.</span>\n<span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">place_stop_order</span><span class=\"p\">(</span><span class=\"n\">product_id</span><span class=\"o\">=</span><span class=\"s1\">'BTC-USD'</span><span class=\"p\">,</span>\n                              <span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s1\">'buy'</span><span class=\"p\">,</span>\n                              <span class=\"n\">price</span><span class=\"o\">=</span><span class=\"s1\">'200.00'</span><span class=\"p\">,</span>\n                              <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"s1\">'0.01'</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#cancel-an-order\" rel=\"nofollow\">cancel_order</a></li>\n</ul>\n<pre><span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">cancel_order</span><span class=\"p\">(</span><span class=\"s2\">\"d50ec984-77a8-460a-b958-66f114b0de9b\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#cancel-all\" rel=\"nofollow\">cancel_all</a></li>\n</ul>\n<pre><span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">cancel_all</span><span class=\"p\">(</span><span class=\"n\">product_id</span><span class=\"o\">=</span><span class=\"s1\">'BTC-USD'</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#list-orders\" rel=\"nofollow\">get_orders</a> (paginated)</li>\n</ul>\n<pre><span class=\"c1\"># Returns generator:</span>\n<span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">get_orders</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#get-an-order\" rel=\"nofollow\">get_order</a></li>\n</ul>\n<pre><span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">get_order</span><span class=\"p\">(</span><span class=\"s2\">\"d50ec984-77a8-460a-b958-66f114b0de9b\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#list-fills\" rel=\"nofollow\">get_fills</a> (paginated)</li>\n</ul>\n<pre><span class=\"c1\"># All return generators</span>\n<span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">get_fills</span><span class=\"p\">()</span>\n<span class=\"c1\"># Get fills for a specific order</span>\n<span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">get_fills</span><span class=\"p\">(</span><span class=\"n\">order_id</span><span class=\"o\">=</span><span class=\"s2\">\"d50ec984-77a8-460a-b958-66f114b0de9b\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get fills for a specific product</span>\n<span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">get_fills</span><span class=\"p\">(</span><span class=\"n\">product_id</span><span class=\"o\">=</span><span class=\"s2\">\"ETH-BTC\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><a href=\"https://docs.pro.coinbase.com/#depositwithdraw\" rel=\"nofollow\">deposit &amp; withdraw</a></li>\n</ul>\n<pre><span class=\"n\">depositParams</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'amount'</span><span class=\"p\">:</span> <span class=\"s1\">'25.00'</span><span class=\"p\">,</span> <span class=\"c1\"># Currency determined by account specified</span>\n        <span class=\"s1\">'coinbase_account_id'</span><span class=\"p\">:</span> <span class=\"s1\">'60680c98bfe96c2601f27e9c'</span>\n<span class=\"p\">}</span>\n<span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">deposit</span><span class=\"p\">(</span><span class=\"n\">depositParams</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Withdraw from CB Pro into Coinbase Wallet</span>\n<span class=\"n\">withdrawParams</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'amount'</span><span class=\"p\">:</span> <span class=\"s1\">'1.00'</span><span class=\"p\">,</span> <span class=\"c1\"># Currency determined by account specified</span>\n        <span class=\"s1\">'coinbase_account_id'</span><span class=\"p\">:</span> <span class=\"s1\">'536a541fa9393bb3c7000023'</span>\n<span class=\"p\">}</span>\n<span class=\"n\">auth_client</span><span class=\"o\">.</span><span class=\"n\">withdraw</span><span class=\"p\">(</span><span class=\"n\">withdrawParams</span><span class=\"p\">)</span>\n</pre>\n<h3>WebsocketClient</h3>\n<p>If you would like to receive real-time market updates, you must subscribe to the\n<a href=\"https://docs.pro.coinbase.com/#websocket-feed\" rel=\"nofollow\">websocket feed</a>.</p>\n<h4>Subscribe to a single product</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cbpro</span>\n<span class=\"c1\"># Paramters are optional</span>\n<span class=\"n\">wsClient</span> <span class=\"o\">=</span> <span class=\"n\">cbpro</span><span class=\"o\">.</span><span class=\"n\">WebsocketClient</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">\"wss://ws-feed.pro.coinbase.com\"</span><span class=\"p\">,</span> <span class=\"n\">products</span><span class=\"o\">=</span><span class=\"s2\">\"BTC-USD\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Do other stuff...</span>\n<span class=\"n\">wsClient</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h4>Subscribe to multiple products</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cbpro</span>\n<span class=\"c1\"># Paramaters are optional</span>\n<span class=\"n\">wsClient</span> <span class=\"o\">=</span> <span class=\"n\">cbpro</span><span class=\"o\">.</span><span class=\"n\">WebsocketClient</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">\"wss://ws-feed.pro.coinbase.com\"</span><span class=\"p\">,</span>\n                                <span class=\"n\">products</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"BTC-USD\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ETH-USD\"</span><span class=\"p\">])</span>\n<span class=\"c1\"># Do other stuff...</span>\n<span class=\"n\">wsClient</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h3>WebsocketClient + Mongodb</h3>\n<p>The <code>WebsocketClient</code> now supports data gathering via MongoDB. Given a\nMongoDB collection, the <code>WebsocketClient</code> will stream results directly into\nthe database collection.</p>\n<pre><span class=\"c1\"># import PyMongo and connect to a local, running Mongo instance</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pymongo</span> <span class=\"kn\">import</span> <span class=\"n\">MongoClient</span>\n<span class=\"kn\">import</span> <span class=\"nn\">cbpro</span>\n<span class=\"n\">mongo_client</span> <span class=\"o\">=</span> <span class=\"n\">MongoClient</span><span class=\"p\">(</span><span class=\"s1\">'mongodb://localhost:27017/'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># specify the database and collection</span>\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">mongo_client</span><span class=\"o\">.</span><span class=\"n\">cryptocurrency_database</span>\n<span class=\"n\">BTC_collection</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">BTC_collection</span>\n\n<span class=\"c1\"># instantiate a WebsocketClient instance, with a Mongo collection as a parameter</span>\n<span class=\"n\">wsClient</span> <span class=\"o\">=</span> <span class=\"n\">cbpro</span><span class=\"o\">.</span><span class=\"n\">WebsocketClient</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">\"wss://ws-feed.pro.coinbase.com\"</span><span class=\"p\">,</span> <span class=\"n\">products</span><span class=\"o\">=</span><span class=\"s2\">\"BTC-USD\"</span><span class=\"p\">,</span>\n    <span class=\"n\">mongo_collection</span><span class=\"o\">=</span><span class=\"n\">BTC_collection</span><span class=\"p\">,</span> <span class=\"n\">should_print</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">wsClient</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n<h3>WebsocketClient Methods</h3>\n<p>The <code>WebsocketClient</code> subscribes in a separate thread upon initialization.\nThere are three methods which you could overwrite (before initialization) so it\ncan react to the data streaming in.  The current client is a template used for\nillustration purposes only.</p>\n<ul>\n<li>onOpen - called once, <em>immediately before</em> the socket connection is made, this\nis where you want to add initial parameters.</li>\n<li>onMessage - called once for every message that arrives and accepts one\nargument that contains the message of dict type.</li>\n<li>on_close - called once after the websocket has been closed.</li>\n<li>close - call this method to close the websocket connection (do not overwrite).</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cbpro</span><span class=\"o\">,</span> <span class=\"nn\">time</span>\n<span class=\"k\">class</span> <span class=\"nc\">myWebsocketClient</span><span class=\"p\">(</span><span class=\"n\">cbpro</span><span class=\"o\">.</span><span class=\"n\">WebsocketClient</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">on_open</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"wss://ws-feed.pro.coinbase.com/\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">products</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"LTC-USD\"</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">message_count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Lets count the messages!\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">on_message</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">message_count</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">if</span> <span class=\"s1\">'price'</span> <span class=\"ow\">in</span> <span class=\"n\">msg</span> <span class=\"ow\">and</span> <span class=\"s1\">'type'</span> <span class=\"ow\">in</span> <span class=\"n\">msg</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Message type:\"</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">[</span><span class=\"s2\">\"type\"</span><span class=\"p\">],</span>\n                   <span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">@ </span><span class=\"si\">{:.3f}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">[</span><span class=\"s2\">\"price\"</span><span class=\"p\">])))</span>\n    <span class=\"k\">def</span> <span class=\"nf\">on_close</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"-- Goodbye! --\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">wsClient</span> <span class=\"o\">=</span> <span class=\"n\">myWebsocketClient</span><span class=\"p\">()</span>\n<span class=\"n\">wsClient</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wsClient</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">wsClient</span><span class=\"o\">.</span><span class=\"n\">products</span><span class=\"p\">)</span>\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">wsClient</span><span class=\"o\">.</span><span class=\"n\">message_count</span> <span class=\"o\">&lt;</span> <span class=\"mi\">500</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">message_count =\"</span><span class=\"p\">,</span> <span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">wsClient</span><span class=\"o\">.</span><span class=\"n\">message_count</span><span class=\"p\">))</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">wsClient</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h3>Real-time OrderBook</h3>\n<p>The <code>OrderBook</code> subscribes to a websocket and keeps a real-time record of\nthe orderbook for the product_id input.  Please provide your feedback for future\nimprovements.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cbpro</span><span class=\"o\">,</span> <span class=\"nn\">time</span>\n<span class=\"n\">order_book</span> <span class=\"o\">=</span> <span class=\"n\">cbpro</span><span class=\"o\">.</span><span class=\"n\">OrderBook</span><span class=\"p\">(</span><span class=\"n\">product_id</span><span class=\"o\">=</span><span class=\"s1\">'BTC-USD'</span><span class=\"p\">)</span>\n<span class=\"n\">order_book</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">order_book</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h2>Development</h2>\n<h3>Development Environment</h3>\n<p>A development environment can be created and activated with the commands</p>\n<pre>make venv <span class=\"o\">&amp;&amp;</span> . venv/bin/activate\n</pre>\n<h3>Automated Testing</h3>\n<p>Unit test framework uses pytest, coverage, and tox. A test suite is under development,\nplease contribute to the coverage. Tests for the authenticated client require a\nset of sandbox API credentials. To provide them, rename\n<code>api_config.json.example</code> in the tests folder to <code>api_config.json</code> and edit the\nfile accordingly. To run the tests, start in the project directory and run</p>\n<pre>make <span class=\"nb\">test</span>\n</pre>\n<h3>Pre-commit</h3>\n<p>This project uses pre-commit to enforce coding style. You can run pre-commit with\nthe following command (after activating the venv)</p>\n<pre>pre-commit run --files <span class=\"o\">[</span>FILES<span class=\"o\">]</span>\n</pre>\n<p>You can also run</p>\n<pre>pre-commit run --all-files\n</pre>\n<p>but that is guaranteed to fail because of legacy code that has yet to be linted.</p>\n\n          </div>"}, "last_serial": 4434437, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "fd25ca6d1e6e210d12c0f37d4acd1dac", "sha256": "0928ddf6c159d5d5ab96a34aa1a27af59cb6d3c0d46cc8a2b141d1b944e2f1d0"}, "downloads": -1, "filename": "cbpro2-1.0.0.tar.gz", "has_sig": false, "md5_digest": "fd25ca6d1e6e210d12c0f37d4acd1dac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23525, "upload_time": "2018-10-17T06:10:58", "upload_time_iso_8601": "2018-10-17T06:10:58.917673Z", "url": "https://files.pythonhosted.org/packages/75/5a/9ff0afcf94d60931937cc965b00557eefd3d952948019fe5fe91ff5fca06/cbpro2-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "65df893ea9684819ea99069c7c45c779", "sha256": "4a34d01bc400b3a87892375aa9edb651faa8a935cfdc23dd8a52eb2626811e2c"}, "downloads": -1, "filename": "cbpro2-1.0.1.tar.gz", "has_sig": false, "md5_digest": "65df893ea9684819ea99069c7c45c779", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23542, "upload_time": "2018-10-17T06:13:38", "upload_time_iso_8601": "2018-10-17T06:13:38.846670Z", "url": "https://files.pythonhosted.org/packages/16/8f/6f7b17fc7b50ba31e8cef42959138b7aad23f84643ede46da16814788261/cbpro2-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "512701365fd88d30eb3703f572b31218", "sha256": "083f81f1f739d829facb9bfdcbad5e097058094f0fc791fefc23f100085efe87"}, "downloads": -1, "filename": "cbpro2-1.0.2.tar.gz", "has_sig": false, "md5_digest": "512701365fd88d30eb3703f572b31218", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22869, "upload_time": "2018-10-17T06:55:27", "upload_time_iso_8601": "2018-10-17T06:55:27.568523Z", "url": "https://files.pythonhosted.org/packages/d0/a7/db234dda1ed09a65199625faba39f8fbcbcaaa87c41bffd6fe006f97f6c8/cbpro2-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "07c7c6ee9dfcd079a19185e65105e499", "sha256": "b556a6678fcf47382b66a747ddebed2a05312f1e74bdd9ef7aa3a2691bd10c10"}, "downloads": -1, "filename": "cbpro2-1.0.3.tar.gz", "has_sig": false, "md5_digest": "07c7c6ee9dfcd079a19185e65105e499", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22938, "upload_time": "2018-10-17T08:09:17", "upload_time_iso_8601": "2018-10-17T08:09:17.421586Z", "url": "https://files.pythonhosted.org/packages/d2/30/66a1895189ec2bca046a224bca8e96070ed30b15157fe98400aaf1aeb4ca/cbpro2-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "eafb575a62f9cbbd917b779edfa5f806", "sha256": "4e985b85a45d771fd1ea5e40b2c54dd583882ec0b5ba1792728615e5d1aa9cfd"}, "downloads": -1, "filename": "cbpro2-1.0.4.tar.gz", "has_sig": false, "md5_digest": "eafb575a62f9cbbd917b779edfa5f806", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23029, "upload_time": "2018-10-31T05:13:13", "upload_time_iso_8601": "2018-10-31T05:13:13.784831Z", "url": "https://files.pythonhosted.org/packages/9a/36/239e798d76ea20d699e1aa823497558461d621cc5d2c35feb8bfffaf9b84/cbpro2-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eafb575a62f9cbbd917b779edfa5f806", "sha256": "4e985b85a45d771fd1ea5e40b2c54dd583882ec0b5ba1792728615e5d1aa9cfd"}, "downloads": -1, "filename": "cbpro2-1.0.4.tar.gz", "has_sig": false, "md5_digest": "eafb575a62f9cbbd917b779edfa5f806", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23029, "upload_time": "2018-10-31T05:13:13", "upload_time_iso_8601": "2018-10-31T05:13:13.784831Z", "url": "https://files.pythonhosted.org/packages/9a/36/239e798d76ea20d699e1aa823497558461d621cc5d2c35feb8bfffaf9b84/cbpro2-1.0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:09 2020"}