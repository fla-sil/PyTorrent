{"info": {"author": "Hussein Hazimeh, Rahul Mazumder, Ali Saab", "author_email": "alikassemsaab@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# L0BnB: Sparse Regression at Scale [![Build Status](https://travis-ci.com/alisaab/l0bnb.svg?branch=master)](https://travis-ci.com/alisaab/l0bnb)\n### Hussein Hazimeh, Rahul Mazumder, and Ali Saab\n### Massachusetts Institute of Technology\n\n## Introduction\nL0BnB is a scalable global optimization framework for solving linear regression problems penalized with a combination of the L0 and L2 norms. More concretely, given a data matrix X (with n samples and p features) and a response vector y, L0BnB solves the following problem to optimality:\n\n<img src=\"https://raw.githubusercontent.com/alisaab/l0bnb/master/formulation.png\" width = 300>\n\nwhere the L0 norm counts the number of nonzeros in the coefficients vector B. Here the L0 norm performs variable selection, while the L2 norm adds shrinkage which can be effective in low-signal settings. L0BnB implements a custom branch-and-bound (BnB) framework that leverages a highly specialized first-order method to solve the node subproblems. It achieves over 3600x speed-ups compared to the state-of-the-art mixed integer programming (MIP) solvers, and can scale to problems where the number of features p ~ 10^7. For more details, check out our paper *Sparse Regression at Scale: Branch-and-Bound rooted in First Order Optimization* ([arXiv link](https://arxiv.org/abs/2004.06152)).\n\n## Installation\nThe toolkit is implemented in Python 3. To install it, run the following command:\n```bash\npip install l0bnb\n```\n\n## A Quick Start in Python\n```python\nimport numpy as np\nfrom l0bnb import fit_path\nfrom l0bnb import gen_synthetic\n\n\"\"\"\nFor demonstration, we first generate a synthetic regression dataset (X,y)\nas follows: y = X*b + epsilon, where the true vector of coefficients b\nis sparse and has only 10 nonzero entries.\nWe set the number of samples n=1000 and number of features p=10,000.\n\"\"\"\nX, y, b = gen_synthetic(n=1000, p=10000, supp_size=10)\nprint(\"Nonzero indices in b: \", np.nonzero(b)[0])\n\n\"\"\"\nRun L0BnB to solve the problem for a sequence of lambda_0's.\nBy default, the sequence of lambda_0's is automatically chosen by the toolkit.\nUse max_nonzeros=10 to stop the regularization path when it exceeds 10 nonzeros.\nHere we fix lambda_2 = 0.01 (generally, this is data-dependent).\n\"\"\"\nsols = fit_path(X, y, lambda_2 = 0.01, max_nonzeros = 10)\n\n\"\"\"\nsols is a list of solutions, each corresponding to a different lambda_0.\nBelow we inspect the solution with index 4.\nThe estimated coefficients vector \"b_estimated\" and the intercept term can be accessed as follows:\n\"\"\"\nb_estimated = sols[4][\"B\"] # a numpy array.\nintercept = sols[4][\"B0\"]\n\n# To check the nonzero indices in b_estimated:\nprint(\"Nonzero indices in b_estimated: \", np.nonzero(b_estimated)[0])\n# The nonzero indices in b_estimated match that of b.\n\n# Predictions on the training data can be made as follows:\ny_estimated = np.dot(X, b_estimated) + intercept\n\n# For more advanced usage, check the documentation of fit_path:\nprint(fit_path.__doc__)\n```\n\n## References\nIf you find L0BnB useful in your research, please consider citing the following paper:\n```\n@article{hazimeh2020sparse,\n  title={Sparse Regression at Scale: Branch-and-Bound rooted in First-Order Optimization},\n  author={Hazimeh, Hussein and Mazumder, Rahul and Saab, Ali},\n  journal={arXiv preprint arXiv:2004.06152},\n  year={2020}\n}\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/alisaab/l0bnb/archive/0.0.6.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alisaab/l0bnb", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "l0bnb", "package_url": "https://pypi.org/project/l0bnb/", "platform": "", "project_url": "https://pypi.org/project/l0bnb/", "project_urls": {"Download": "https://github.com/alisaab/l0bnb/archive/0.0.6.tar.gz", "Homepage": "https://github.com/alisaab/l0bnb"}, "release_url": "https://pypi.org/project/l0bnb/0.0.6/", "requires_dist": null, "requires_python": "", "summary": "Scalable algorithms for L0 L2-regularized regression", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>L0BnB: Sparse Regression at Scale <a href=\"https://travis-ci.com/alisaab/l0bnb\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6863917daf2d8e5810206d92b1040113619562d7/68747470733a2f2f7472617669732d63692e636f6d2f616c69736161622f6c30626e622e7376673f6272616e63683d6d6173746572\"></a></h1>\n<h3>Hussein Hazimeh, Rahul Mazumder, and Ali Saab</h3>\n<h3>Massachusetts Institute of Technology</h3>\n<h2>Introduction</h2>\n<p>L0BnB is a scalable global optimization framework for solving linear regression problems penalized with a combination of the L0 and L2 norms. More concretely, given a data matrix X (with n samples and p features) and a response vector y, L0BnB solves the following problem to optimality:</p>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ced60e9e158f38f726b14cb82c7ff3027a736eb/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616c69736161622f6c30626e622f6d61737465722f666f726d756c6174696f6e2e706e67\" width=\"300\">\n<p>where the L0 norm counts the number of nonzeros in the coefficients vector B. Here the L0 norm performs variable selection, while the L2 norm adds shrinkage which can be effective in low-signal settings. L0BnB implements a custom branch-and-bound (BnB) framework that leverages a highly specialized first-order method to solve the node subproblems. It achieves over 3600x speed-ups compared to the state-of-the-art mixed integer programming (MIP) solvers, and can scale to problems where the number of features p ~ 10^7. For more details, check out our paper <em>Sparse Regression at Scale: Branch-and-Bound rooted in First Order Optimization</em> (<a href=\"https://arxiv.org/abs/2004.06152\" rel=\"nofollow\">arXiv link</a>).</p>\n<h2>Installation</h2>\n<p>The toolkit is implemented in Python 3. To install it, run the following command:</p>\n<pre>pip install l0bnb\n</pre>\n<h2>A Quick Start in Python</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">l0bnb</span> <span class=\"kn\">import</span> <span class=\"n\">fit_path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">l0bnb</span> <span class=\"kn\">import</span> <span class=\"n\">gen_synthetic</span>\n\n<span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">For demonstration, we first generate a synthetic regression dataset (X,y)</span>\n<span class=\"sd\">as follows: y = X*b + epsilon, where the true vector of coefficients b</span>\n<span class=\"sd\">is sparse and has only 10 nonzero entries.</span>\n<span class=\"sd\">We set the number of samples n=1000 and number of features p=10,000.</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">gen_synthetic</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">,</span> <span class=\"n\">supp_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Nonzero indices in b: \"</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">Run L0BnB to solve the problem for a sequence of lambda_0's.</span>\n<span class=\"sd\">By default, the sequence of lambda_0's is automatically chosen by the toolkit.</span>\n<span class=\"sd\">Use max_nonzeros=10 to stop the regularization path when it exceeds 10 nonzeros.</span>\n<span class=\"sd\">Here we fix lambda_2 = 0.01 (generally, this is data-dependent).</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"n\">sols</span> <span class=\"o\">=</span> <span class=\"n\">fit_path</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">lambda_2</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"n\">max_nonzeros</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">sols is a list of solutions, each corresponding to a different lambda_0.</span>\n<span class=\"sd\">Below we inspect the solution with index 4.</span>\n<span class=\"sd\">The estimated coefficients vector \"b_estimated\" and the intercept term can be accessed as follows:</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"n\">b_estimated</span> <span class=\"o\">=</span> <span class=\"n\">sols</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">][</span><span class=\"s2\">\"B\"</span><span class=\"p\">]</span> <span class=\"c1\"># a numpy array.</span>\n<span class=\"n\">intercept</span> <span class=\"o\">=</span> <span class=\"n\">sols</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">][</span><span class=\"s2\">\"B0\"</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># To check the nonzero indices in b_estimated:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Nonzero indices in b_estimated: \"</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">(</span><span class=\"n\">b_estimated</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"c1\"># The nonzero indices in b_estimated match that of b.</span>\n\n<span class=\"c1\"># Predictions on the training data can be made as follows:</span>\n<span class=\"n\">y_estimated</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">b_estimated</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">intercept</span>\n\n<span class=\"c1\"># For more advanced usage, check the documentation of fit_path:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">fit_path</span><span class=\"o\">.</span><span class=\"vm\">__doc__</span><span class=\"p\">)</span>\n</pre>\n<h2>References</h2>\n<p>If you find L0BnB useful in your research, please consider citing the following paper:</p>\n<pre><code>@article{hazimeh2020sparse,\n  title={Sparse Regression at Scale: Branch-and-Bound rooted in First-Order Optimization},\n  author={Hazimeh, Hussein and Mazumder, Rahul and Saab, Ali},\n  journal={arXiv preprint arXiv:2004.06152},\n  year={2020}\n}\n</code></pre>\n\n          </div>"}, "last_serial": 7162517, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "98c8da3cf58b5d98afdec1291356e568", "sha256": "631491d24737e317eeed07cc36fe6785119c3b3bdd40cffc713de499ad79e118"}, "downloads": -1, "filename": "l0bnb-0.0.2.tar.gz", "has_sig": false, "md5_digest": "98c8da3cf58b5d98afdec1291356e568", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11972, "upload_time": "2020-04-15T01:25:27", "upload_time_iso_8601": "2020-04-15T01:25:27.780340Z", "url": "https://files.pythonhosted.org/packages/3c/ff/0fcb8d9e08ebbc347b5c05e4d1150d602ba7eaaa9040dde9ce65bc6b0f0f/l0bnb-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "70001d8cf99be62f766b0b6e64a755b4", "sha256": "c9440107ccca4a0c3d711ba17feb2d059d756d863e0cbffde2fc61b59ae38628"}, "downloads": -1, "filename": "l0bnb-0.0.3.tar.gz", "has_sig": false, "md5_digest": "70001d8cf99be62f766b0b6e64a755b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13642, "upload_time": "2020-04-15T01:30:48", "upload_time_iso_8601": "2020-04-15T01:30:48.250984Z", "url": "https://files.pythonhosted.org/packages/19/6f/7559506d9c0611fd7eeff867f6c19e95132761a7e20a8865d52b558f668e/l0bnb-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "6712242b4055713a95f18994d5495315", "sha256": "6c91fa24496becc31508fce351579c0b95628584649b5dd75bc0c1fe4e586ac5"}, "downloads": -1, "filename": "l0bnb-0.0.4.tar.gz", "has_sig": false, "md5_digest": "6712242b4055713a95f18994d5495315", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75683, "upload_time": "2020-04-15T01:53:23", "upload_time_iso_8601": "2020-04-15T01:53:23.857078Z", "url": "https://files.pythonhosted.org/packages/ab/77/873253c61ce1d14c57bc6b04bdb030a5ffa5bc0ecaeb9e3f4c17b0982c2d/l0bnb-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "c3fa8a82b6d5c7a17b0141ee0d7ab88e", "sha256": "1fffbb7fcce3634abe6073ea1ab1cc3cd90f14f8ce04f259853a3adefe031fae"}, "downloads": -1, "filename": "l0bnb-0.0.5.tar.gz", "has_sig": false, "md5_digest": "c3fa8a82b6d5c7a17b0141ee0d7ab88e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75776, "upload_time": "2020-04-15T02:39:21", "upload_time_iso_8601": "2020-04-15T02:39:21.006890Z", "url": "https://files.pythonhosted.org/packages/06/57/8efdd4497a0d2e504a998aefae28a7941087deccbeb3261620bafd3f122c/l0bnb-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "638b314158e1d9b259ea5d70be27eef1", "sha256": "92e2a67bc1242b9250c91c611529ec2317944a7fb117c75f58de61355c9ccc0e"}, "downloads": -1, "filename": "l0bnb-0.0.6.tar.gz", "has_sig": false, "md5_digest": "638b314158e1d9b259ea5d70be27eef1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78502, "upload_time": "2020-05-04T09:38:00", "upload_time_iso_8601": "2020-05-04T09:38:00.567555Z", "url": "https://files.pythonhosted.org/packages/6b/ca/b576c0ca69229f34dab525c5621b8346df6edd1f22dbab857ac9feb3a22f/l0bnb-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "638b314158e1d9b259ea5d70be27eef1", "sha256": "92e2a67bc1242b9250c91c611529ec2317944a7fb117c75f58de61355c9ccc0e"}, "downloads": -1, "filename": "l0bnb-0.0.6.tar.gz", "has_sig": false, "md5_digest": "638b314158e1d9b259ea5d70be27eef1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78502, "upload_time": "2020-05-04T09:38:00", "upload_time_iso_8601": "2020-05-04T09:38:00.567555Z", "url": "https://files.pythonhosted.org/packages/6b/ca/b576c0ca69229f34dab525c5621b8346df6edd1f22dbab857ac9feb3a22f/l0bnb-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:24 2020"}