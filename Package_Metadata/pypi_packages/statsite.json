{"info": {"author": "Kiip", "author_email": "biz@kiip.me", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: System :: Monitoring", "Topic :: System :: Systems Administration"], "description": "Statsite\n========\n\nThis is a stats aggregation server. By default, Statsite flushes data\nto `Graphite <http://graphite.wikidot.com/>`_. Statsite is based heavily\non `Etsy's StatsD <https://github.com/etsy/statsd>`_.\n\nFeatures\n--------\n\n* Basic key/value metrics\n* Send timer data, Statsite will calculate:\n  - Mean\n  - Min/Max\n  - Standard deviation\n  - All the above metrics for a specific percentile of information\n* Send counters that Statsite will aggregate\n* Send a sample rate with counters and Statsite will take that into\n  account when aggregating.\n\nInstall\n-------\n\nInstall Statsite from PyPi::\n\n    pip install statsite\n\nOr download and install from source::\n\n    python setup.py install\n\nUsage\n-----\n\nStatsite preferably should be configured using a file, although all\nconfiguration parameters can be set via the command line as well.\nHere is an example configuration file:\n\n::\n\n    # Settings for the \"collector\" which is the UDP listener\n    [collector]\n    host = 0.0.0.0\n    port = 8125\n\n    # Specify settings for the metrics \"store\" which is where graphite is\n    [store]\n    host = 0.0.0.0\n    port = 2003\n\nThen run statsite, pointing it to that file (assuming `/etc` right now)::\n\n    statsite -c /etc/statsite.conf\n\nProtocol\n--------\n\nBy default, Statsite will listen for UDP packets, which makes it extremely\ncheap for your application to fire and forget packets to the server. A message\nlooks like the following (where the flag is optional)::\n\n    key:value|type[|@flag]\n\nMessages should be separated by newlines (`\\n`) if multiple are sent in the\nsame packet.\n\nCurrently supported message types:\n\n* `kv` - Simple Key/Value. If a flag is given, it is considered the timestamp\n  of the key/value pair.\n* `ms` - Timer. If a flag is given, it is considered the sampling rate of the\n  timer.\n* `c` - Counter. After the flush interval, the counters of the same key are\n  aggregated and this is sent to the store.\n\nExamples:\n\nThe following is a simple key/value pair, in this case reporting how many\nqueries we've seen in the last second on MySQL::\n\n    mysql.queries:1381|kv|@1313107325\n\nThe following is a timer, timing the response speed of an API call::\n\n    api.session_created:114|ms\n\nThe following is another timer, but this time saying we sample this data in\n1/10th of the API requests.\n\n::\n\n    api.session_created:114|ms|@0.1\n\nThe next example is increments the \"rewards\" counter by 1::\n\n    rewards:1|c\n\nAnd this example decrements the \"inventory\" counter by 7::\n\n    inventory:-7|c\n\nAs said earlier, multiple messages can be joined together by newlines.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kiip/statsite", "keywords": "statsite,graphite,graph,metrics", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "statsite", "package_url": "https://pypi.org/project/statsite/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/statsite/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/kiip/statsite"}, "release_url": "https://pypi.org/project/statsite/0.4.0/", "requires_dist": null, "requires_python": null, "summary": "Statistics server which sends data to Graphite.", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a stats aggregation server. By default, Statsite flushes data\nto <a href=\"http://graphite.wikidot.com/\" rel=\"nofollow\">Graphite</a>. Statsite is based heavily\non <a href=\"https://github.com/etsy/statsd\" rel=\"nofollow\">Etsy\u2019s StatsD</a>.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Basic key/value metrics</li>\n<li>Send timer data, Statsite will calculate:\n- Mean\n- Min/Max\n- Standard deviation\n- All the above metrics for a specific percentile of information</li>\n<li>Send counters that Statsite will aggregate</li>\n<li>Send a sample rate with counters and Statsite will take that into\naccount when aggregating.</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Install Statsite from PyPi:</p>\n<pre>pip install statsite\n</pre>\n<p>Or download and install from source:</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Statsite preferably should be configured using a file, although all\nconfiguration parameters can be set via the command line as well.\nHere is an example configuration file:</p>\n<pre># Settings for the \"collector\" which is the UDP listener\n[collector]\nhost = 0.0.0.0\nport = 8125\n\n# Specify settings for the metrics \"store\" which is where graphite is\n[store]\nhost = 0.0.0.0\nport = 2003\n</pre>\n<p>Then run statsite, pointing it to that file (assuming <cite>/etc</cite> right now):</p>\n<pre>statsite -c /etc/statsite.conf\n</pre>\n</div>\n<div id=\"protocol\">\n<h2>Protocol</h2>\n<p>By default, Statsite will listen for UDP packets, which makes it extremely\ncheap for your application to fire and forget packets to the server. A message\nlooks like the following (where the flag is optional):</p>\n<pre>key:value|type[|@flag]\n</pre>\n<p>Messages should be separated by newlines (<cite>n</cite>) if multiple are sent in the\nsame packet.</p>\n<p>Currently supported message types:</p>\n<ul>\n<li><cite>kv</cite> - Simple Key/Value. If a flag is given, it is considered the timestamp\nof the key/value pair.</li>\n<li><cite>ms</cite> - Timer. If a flag is given, it is considered the sampling rate of the\ntimer.</li>\n<li><cite>c</cite> - Counter. After the flush interval, the counters of the same key are\naggregated and this is sent to the store.</li>\n</ul>\n<p>Examples:</p>\n<p>The following is a simple key/value pair, in this case reporting how many\nqueries we\u2019ve seen in the last second on MySQL:</p>\n<pre>mysql.queries:1381|kv|@1313107325\n</pre>\n<p>The following is a timer, timing the response speed of an API call:</p>\n<pre>api.session_created:114|ms\n</pre>\n<p>The following is another timer, but this time saying we sample this data in\n1/10th of the API requests.</p>\n<pre>api.session_created:114|ms|@0.1\n</pre>\n<p>The next example is increments the \u201crewards\u201d counter by 1:</p>\n<pre>rewards:1|c\n</pre>\n<p>And this example decrements the \u201cinventory\u201d counter by 7:</p>\n<pre>inventory:-7|c\n</pre>\n<p>As said earlier, multiple messages can be joined together by newlines.</p>\n</div>\n\n          </div>"}, "last_serial": 800105, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "da59d44626893821bb34b3115eefde49", "sha256": "60192b0340ca963027e3d609c4332eeb2b047576f979d67c3f881d4b4d3da222"}, "downloads": -1, "filename": "statsite-0.1.0.tar.gz", "has_sig": false, "md5_digest": "da59d44626893821bb34b3115eefde49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11850, "upload_time": "2011-08-16T19:47:47", "upload_time_iso_8601": "2011-08-16T19:47:47.402196Z", "url": "https://files.pythonhosted.org/packages/06/70/2c4330b386daa4238b0981a2f5ad625caf19e72a28bee94ac16e835fcd27/statsite-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c9fb7c1529d20eb98e1e99b5ab85c81f", "sha256": "37c9f28a11962e4de43f366ac82a942c462f19fd802ac7964f1d1532b582766e"}, "downloads": -1, "filename": "statsite-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c9fb7c1529d20eb98e1e99b5ab85c81f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12876, "upload_time": "2011-09-01T01:48:15", "upload_time_iso_8601": "2011-09-01T01:48:15.344158Z", "url": "https://files.pythonhosted.org/packages/04/fe/5aba0403e9845c33a72e5557ffe79331a68994000a37ff2cff627537cf3d/statsite-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c3ec8e52c2256c001886349710944cf2", "sha256": "66eaa93665f3cce9210a62157fd0d2ec7c5edf50a3e36a857d548a6e52049a48"}, "downloads": -1, "filename": "statsite-0.3.0.tar.gz", "has_sig": false, "md5_digest": "c3ec8e52c2256c001886349710944cf2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13259, "upload_time": "2011-09-02T01:38:58", "upload_time_iso_8601": "2011-09-02T01:38:58.155432Z", "url": "https://files.pythonhosted.org/packages/d3/aa/34ad9269641d633512e90911055ca4939964cb5082840aa38a63d4413535/statsite-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "25d16cb1c9a163e1f9dccdd9a7913d6d", "sha256": "269890233d23b752bce86568ee4e75082f66052339593744ef4946799d193df5"}, "downloads": -1, "filename": "statsite-0.4.0.tar.gz", "has_sig": false, "md5_digest": "25d16cb1c9a163e1f9dccdd9a7913d6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13565, "upload_time": "2011-10-26T20:36:08", "upload_time_iso_8601": "2011-10-26T20:36:08.341515Z", "url": "https://files.pythonhosted.org/packages/5c/a9/02a3f16b7c86328510706f90775d1115e0cc27d368231dcb5cd2dd2145d2/statsite-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "25d16cb1c9a163e1f9dccdd9a7913d6d", "sha256": "269890233d23b752bce86568ee4e75082f66052339593744ef4946799d193df5"}, "downloads": -1, "filename": "statsite-0.4.0.tar.gz", "has_sig": false, "md5_digest": "25d16cb1c9a163e1f9dccdd9a7913d6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13565, "upload_time": "2011-10-26T20:36:08", "upload_time_iso_8601": "2011-10-26T20:36:08.341515Z", "url": "https://files.pythonhosted.org/packages/5c/a9/02a3f16b7c86328510706f90775d1115e0cc27d368231dcb5cd2dd2145d2/statsite-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:21 2020"}