{"info": {"author": "Michael Elliott", "author_email": "robotzapa@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Robot Framework", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator"], "description": "# Machine IO\n\nUnified GPIO functor interface engine.\n\n## What is machineio?\n Interface Engine/Protocol Translator \nWant to use functional programming that's specific to your machine/robot?\n\nMachineio is a library to help you create a single unified interface for all your GPIO!\nfor your machines that use one or more micro controllers.\nIt helps you quickly create your own functions (functors) for interfacing with hardware.\nThe specific micro controller(s) you choose to use can later be swapped out with simple\nmodifications of your functor library. Devices can be added and controlled over a network\nwith a few simple additions to your functor library. Translations and groups allow complete\ncustomizations.\n\n\n# Pin and Group functor model\n\nEvery motion control system is different in design and implementation.\nTherefor every motion control system must have a different set of functions that create its library.\nA huge majority of these systems use the same protocols and are fundamentally based on I/O pins.\nA single pin almost never does all of what you need, groups of pins perform complex actions together.\nThis is a way to overcome both of these problems in a very elegant manner.\nYou create your own function interface library for your machine based on Pins, \nand Groups of Pins, and Groups of Groups.\nThis is done by creating a Device, Pin and Group objects and specifying a few modifying functions.\nThe only blocking call in a pin input. It waits to return it's value and should only take a \nfraction of a second even over a network. Pins in groups and can have time delays and\ninput pins can have callbacks added with keyword arguments. Controlling a device over a network\ncan be added by creating a Network object and passing it as a parameter to a device.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RobotZapa/machineio", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "machineio", "package_url": "https://pypi.org/project/machineio/", "platform": "", "project_url": "https://pypi.org/project/machineio/", "project_urls": {"Homepage": "https://github.com/RobotZapa/machineio"}, "release_url": "https://pypi.org/project/machineio/0.8.0/", "requires_dist": null, "requires_python": "", "summary": "Machine and robotics gpio hardware interface creation toolkit.", "version": "0.8.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Machine IO</h1>\n<p>Unified GPIO functor interface engine.</p>\n<h2>What is machineio?</h2>\n<p>Interface Engine/Protocol Translator\nWant to use functional programming that's specific to your machine/robot?</p>\n<p>Machineio is a library to help you create a single unified interface for all your GPIO!\nfor your machines that use one or more micro controllers.\nIt helps you quickly create your own functions (functors) for interfacing with hardware.\nThe specific micro controller(s) you choose to use can later be swapped out with simple\nmodifications of your functor library. Devices can be added and controlled over a network\nwith a few simple additions to your functor library. Translations and groups allow complete\ncustomizations.</p>\n<h1>Pin and Group functor model</h1>\n<p>Every motion control system is different in design and implementation.\nTherefor every motion control system must have a different set of functions that create its library.\nA huge majority of these systems use the same protocols and are fundamentally based on I/O pins.\nA single pin almost never does all of what you need, groups of pins perform complex actions together.\nThis is a way to overcome both of these problems in a very elegant manner.\nYou create your own function interface library for your machine based on Pins,\nand Groups of Pins, and Groups of Groups.\nThis is done by creating a Device, Pin and Group objects and specifying a few modifying functions.\nThe only blocking call in a pin input. It waits to return it's value and should only take a\nfraction of a second even over a network. Pins in groups and can have time delays and\ninput pins can have callbacks added with keyword arguments. Controlling a device over a network\ncan be added by creating a Network object and passing it as a parameter to a device.</p>\n\n          </div>"}, "last_serial": 5513070, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "92b0a1bc2bd68db900c701c4e9b5db9f", "sha256": "d91bcba75be61b211f961220a27e62210a872236e0a208a5ee7d3c7bc5150e8f"}, "downloads": -1, "filename": "machineio-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "92b0a1bc2bd68db900c701c4e9b5db9f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10564, "upload_time": "2018-07-19T20:48:17", "upload_time_iso_8601": "2018-07-19T20:48:17.934232Z", "url": "https://files.pythonhosted.org/packages/e7/61/86314ec1d2d27846683770ee074ac90194ae2ca9eb86c5e7ebb42a97fffe/machineio-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d47ccb1c4d94e6708ddc0cc035c99d5", "sha256": "06a6fd7c8f3f6b0fd859239d8cbc2a934011945142cb99f7906211c3815d0595"}, "downloads": -1, "filename": "machineio-0.0.2.tar.gz", "has_sig": false, "md5_digest": "7d47ccb1c4d94e6708ddc0cc035c99d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8849, "upload_time": "2018-07-19T20:48:18", "upload_time_iso_8601": "2018-07-19T20:48:18.742711Z", "url": "https://files.pythonhosted.org/packages/6c/e1/0dc39f3fb09fe33ff22e49481723ff7d3a7dfb8a0f891b0dbd93c0f344d0/machineio-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "47d70f1980bf0d24d021f2f6a6f57a7e", "sha256": "357f6c0efd9ffec02ceab63944a87afd86d54525c941210eb4c708e6cf96293e"}, "downloads": -1, "filename": "machineio-0.1.0.tar.gz", "has_sig": false, "md5_digest": "47d70f1980bf0d24d021f2f6a6f57a7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12598, "upload_time": "2018-08-14T22:09:30", "upload_time_iso_8601": "2018-08-14T22:09:30.647045Z", "url": "https://files.pythonhosted.org/packages/2b/f9/c6ad1a99fd051a8d19406448ae23d18cd56f4faa88a5c1c129f2597c113b/machineio-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3273c9af9ccd2866522a6707c0331469", "sha256": "24b9e003f6d85241b6573a183d7d9f256642c9c4bca2fc33d4a80bf3f2c51e61"}, "downloads": -1, "filename": "machineio-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3273c9af9ccd2866522a6707c0331469", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12611, "upload_time": "2018-08-22T18:12:48", "upload_time_iso_8601": "2018-08-22T18:12:48.915137Z", "url": "https://files.pythonhosted.org/packages/53/2c/86b63d16314abe432519009b8387155c6b5b56f0c3149fc2839c6c6f434c/machineio-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "3507547dfaf86c28b85ece1aca76527e", "sha256": "d0feef3283af216f8595fdc035cb373df7fa5e9533e02bc400f709c57b3bd710"}, "downloads": -1, "filename": "machineio-0.2.0.tar.gz", "has_sig": false, "md5_digest": "3507547dfaf86c28b85ece1aca76527e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9777, "upload_time": "2018-08-31T04:54:37", "upload_time_iso_8601": "2018-08-31T04:54:37.038247Z", "url": "https://files.pythonhosted.org/packages/62/32/0ac1330045c332046d71fb9310c5e26eb8ef5d0ce1ac2557466123d58b1f/machineio-0.2.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "d07ce74d9de8ab4390df360770654848", "sha256": "8290dc67908a531e88d403a79cfe6a8147f908657793c4375bc5f626ef1f3d40"}, "downloads": -1, "filename": "machineio-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d07ce74d9de8ab4390df360770654848", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12424, "upload_time": "2019-07-10T16:55:31", "upload_time_iso_8601": "2019-07-10T16:55:31.906439Z", "url": "https://files.pythonhosted.org/packages/44/47/68d112cc5e928cae768d13ed24228d3f983ed0643719889b3e1155665e87/machineio-0.8.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d07ce74d9de8ab4390df360770654848", "sha256": "8290dc67908a531e88d403a79cfe6a8147f908657793c4375bc5f626ef1f3d40"}, "downloads": -1, "filename": "machineio-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d07ce74d9de8ab4390df360770654848", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12424, "upload_time": "2019-07-10T16:55:31", "upload_time_iso_8601": "2019-07-10T16:55:31.906439Z", "url": "https://files.pythonhosted.org/packages/44/47/68d112cc5e928cae768d13ed24228d3f983ed0643719889b3e1155665e87/machineio-0.8.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:42:20 2020"}