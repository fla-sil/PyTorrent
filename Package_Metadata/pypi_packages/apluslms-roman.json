{"info": {"author": "Jaakko Kantoj\u00e4rvi <jaakko.kantojarvi@aalto.fi>", "author_email": "apluslms@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Roman\n=====\n\n|build status| |download release|\n\n:Abstract: Course material builder for online learning systems\n:Author: Jaakko Kantoj\u00e4rvi <jaakko.kantojarvi@aalto.fi>\n\nRoman is course material builder for A+ and other learning management systems.\nRoman uses docker_ to run different build steps.\nCourse building steps are configure in :code:`course.yml`, which is read by roman.\n\n.. _docker: https://www.docker.com/\n\n**Roman is in experimental development state**\n\nCheck out :code:`Ariel`.\nIt is an extension to sphinx build process that is used to build RST course material to HTML and YAML files.\nIt can simple be used by adding :code:`apluslms/ariel` to build steps.\n\n\nCourse configuration\n--------------------\n\nRoman reads configuration file :code:`course.yml`, :code:`course.yaml` or :code:`course.json` and then\nruns course build steps defined in :code:`steps` list.\nSteps can be strings describing docker image or objects containing at least :code:`img`.\nHere is small example:\n\n.. code-block:: yaml\n\n  # course.yml\n  ---\n  version: 2\n  theme: aplus\n\n  steps:\n    - hello-world\n    - img: apluslms/compile-rst\n      cmd: make touchrst html\n      mnt: /compile\n      env:\n        STATIC_CONTENT_HOST: \"http://localhost:8080/static/default\"\n\n\nInstallation\n------------\n\nYou can use prebuild binaries with graphical user inteface from `releases page`_.\nAlternatively, you can install cli version via pip ``pip3 install --user apluslms-roman[docker]``, which will add ``$HOME/.local/bin/roman``.\nPresuming you have that in your ``PATH``, then you can execute ``roman --help`` to get started.\n\n.. _releases page: https://github.com/apluslms/roman/releases\n\n\nList of graphical user inteface binaries\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* ``*-linux.AppImage`` is an AppImage_ package of Roman.\n  Download, mark file executable and run it.\n  Requires FUSE_ (installed on typical linux desktop).\n* ``*-linux.zip`` contains a single-file executable.\n  Download, extract, run ``roman``.\n  Requires that files in ``/tmp/`` can be executed.\n* ``*-mac.dmg`` contains *Roman.app* in a disk image.\n  Download, open, drag *Roman.app* to e.g. *Applications*, run.\n  **Note**: On the first time you need to right or control-click the app, select *open* in the menu and finally *open* in the dialog.\n* ``*-mac.zip`` contains *Roman.app* in a zip.\n  Same prosess as with above version.\n\nIf you are not sure what file to use, then use the first one for your operating system.\n\n*Documentation on how these files are build, can be found under ``packaging`` in the source repo.*\n\n.. _AppImage: https://appimage.org/\n.. _FUSE: https://en.wikipedia.org/wiki/Filesystem_in_Userspace\n\n\nDeveloping\n----------\n\nThis repository curently holds few different python packages, which makes things problematic.\nThere is set of scripts under ``./scripts/`` to make this ok.\n\nFor example, you can setup development environment for you:\n\n.. code-block:: sh\n\n    # install venv (you can skip this part)\n    python3 -m venv venv\n    # or\n    python3 -m virtualenv -p python3 venv\n    # activate\n    . ./venv/bin/activate\n\n    # install roman packages\n    ./scripts/install_for_development.sh\n\nTo run tests:\n\n.. code-block:: sh\n\n    # run all tests in the repo\n    #  creates virtual env, if none is active\n    ./scripts/run_all_tests.sh\n\n    # run all tests for a package\n    python3 setup.py test\n    python3 -m unittest discover -t . -s tests\n\n    # run a single test file\n    python3 -m unittest tests.test_cli\n\n    # run a single test class\n    python3 -m unittest tests.test_cli.TestGetConfig\n\n\n\n\n\n.. badges: http://shields.io/\n\n.. |build status| image:: https://travis-ci.com/apluslms/roman.svg?branch=master\n   :target: https://travis-ci.com/apluslms/roman\n\n.. |download release| image:: https://img.shields.io/github/release/apluslms/roman.svg\n   :target: https://github.com/apluslms/roman/releases\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/apluslms/roman", "keywords": "apluslms material", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "apluslms-roman", "package_url": "https://pypi.org/project/apluslms-roman/", "platform": "any", "project_url": "https://pypi.org/project/apluslms-roman/", "project_urls": {"Homepage": "https://github.com/apluslms/roman"}, "release_url": "https://pypi.org/project/apluslms-roman/0.3.0rc1/", "requires_dist": ["apluslms-yamlidator (==0.3.0rc1)", "appdirs (<2,>=1.4.0)", "colorama (~=0.4.1)", "Docker (<4,>=3.0.0) ; extra == 'docker'"], "requires_python": "", "summary": "Course material builder for online learning systems", "version": "0.3.0rc1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.com/apluslms/roman\" rel=\"nofollow\"><img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50a8499a4203517579f7e4bdbc8d1a09a8414940/68747470733a2f2f7472617669732d63692e636f6d2f61706c75736c6d732f726f6d616e2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://github.com/apluslms/roman/releases\" rel=\"nofollow\"><img alt=\"download release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f146d1a5219c1fc0238c7cdbf3b34e2c61b402e2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f61706c75736c6d732f726f6d616e2e737667\"></a></p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Abstract:</th><td>Course material builder for online learning systems</td>\n</tr>\n<tr><th>Author:</th><td>Jaakko Kantoj\u00e4rvi &lt;<a href=\"mailto:jaakko.kantojarvi%40aalto.fi\">jaakko<span>.</span>kantojarvi<span>@</span>aalto<span>.</span>fi</a>&gt;</td>\n</tr>\n</tbody>\n</table>\n<p>Roman is course material builder for A+ and other learning management systems.\nRoman uses <a href=\"https://www.docker.com/\" rel=\"nofollow\">docker</a> to run different build steps.\nCourse building steps are configure in <code>course.yml</code>, which is read by roman.</p>\n<p><strong>Roman is in experimental development state</strong></p>\n<p>Check out <code>Ariel</code>.\nIt is an extension to sphinx build process that is used to build RST course material to HTML and YAML files.\nIt can simple be used by adding <code>apluslms/ariel</code> to build steps.</p>\n<div id=\"course-configuration\">\n<h2>Course configuration</h2>\n<p>Roman reads configuration file <code>course.yml</code>, <code>course.yaml</code> or <code>course.json</code> and then\nruns course build steps defined in <code>steps</code> list.\nSteps can be strings describing docker image or objects containing at least <code>img</code>.\nHere is small example:</p>\n<pre><span class=\"c1\"># course.yml</span>\n<span class=\"nn\">---</span>\n<span class=\"nt\">version</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">2</span>\n<span class=\"nt\">theme</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">aplus</span>\n\n<span class=\"nt\">steps</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">hello-world</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"nt\">img</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">apluslms/compile-rst</span>\n    <span class=\"nt\">cmd</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">make touchrst html</span>\n    <span class=\"nt\">mnt</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">/compile</span>\n    <span class=\"nt\">env</span><span class=\"p\">:</span>\n      <span class=\"nt\">STATIC_CONTENT_HOST</span><span class=\"p\">:</span> <span class=\"s\">\"http://localhost:8080/static/default\"</span>\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can use prebuild binaries with graphical user inteface from <a href=\"https://github.com/apluslms/roman/releases\" rel=\"nofollow\">releases page</a>.\nAlternatively, you can install cli version via pip <tt>pip3 install <span class=\"pre\">--user</span> <span class=\"pre\">apluslms-roman[docker]</span></tt>, which will add <tt><span class=\"pre\">$HOME/.local/bin/roman</span></tt>.\nPresuming you have that in your <tt>PATH</tt>, then you can execute <tt>roman <span class=\"pre\">--help</span></tt> to get started.</p>\n<div id=\"list-of-graphical-user-inteface-binaries\">\n<h3>List of graphical user inteface binaries</h3>\n<ul>\n<li><tt><span class=\"pre\">*-linux.AppImage</span></tt> is an <a href=\"https://appimage.org/\" rel=\"nofollow\">AppImage</a> package of Roman.\nDownload, mark file executable and run it.\nRequires <a href=\"https://en.wikipedia.org/wiki/Filesystem_in_Userspace\" rel=\"nofollow\">FUSE</a> (installed on typical linux desktop).</li>\n<li><tt><span class=\"pre\">*-linux.zip</span></tt> contains a single-file executable.\nDownload, extract, run <tt>roman</tt>.\nRequires that files in <tt>/tmp/</tt> can be executed.</li>\n<li><tt><span class=\"pre\">*-mac.dmg</span></tt> contains <em>Roman.app</em> in a disk image.\nDownload, open, drag <em>Roman.app</em> to e.g. <em>Applications</em>, run.\n<strong>Note</strong>: On the first time you need to right or control-click the app, select <em>open</em> in the menu and finally <em>open</em> in the dialog.</li>\n<li><tt><span class=\"pre\">*-mac.zip</span></tt> contains <em>Roman.app</em> in a zip.\nSame prosess as with above version.</li>\n</ul>\n<p>If you are not sure what file to use, then use the first one for your operating system.</p>\n<p><em>Documentation on how these files are build, can be found under ``packaging`` in the source repo.</em></p>\n</div>\n</div>\n<div id=\"developing\">\n<h2>Developing</h2>\n<p>This repository curently holds few different python packages, which makes things problematic.\nThere is set of scripts under <tt>./scripts/</tt> to make this ok.</p>\n<p>For example, you can setup development environment for you:</p>\n<pre><span class=\"c1\"># install venv (you can skip this part)\n</span>python3 -m venv venv\n<span class=\"c1\"># or\n</span>python3 -m virtualenv -p python3 venv\n<span class=\"c1\"># activate\n</span>. ./venv/bin/activate\n\n<span class=\"c1\"># install roman packages\n</span>./scripts/install_for_development.sh\n</pre>\n<p>To run tests:</p>\n<pre><span class=\"c1\"># run all tests in the repo\n#  creates virtual env, if none is active\n</span>./scripts/run_all_tests.sh\n\n<span class=\"c1\"># run all tests for a package\n</span>python3 setup.py <span class=\"nb\">test</span>\npython3 -m unittest discover -t . -s tests\n\n<span class=\"c1\"># run a single test file\n</span>python3 -m unittest tests.test_cli\n\n<span class=\"c1\"># run a single test class\n</span>python3 -m unittest tests.test_cli.TestGetConfig\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6654593, "releases": {"0.2.1rc4": [{"comment_text": "", "digests": {"md5": "2caf347090f6faa688bd2368f2c9f79a", "sha256": "e455c07531476cbcfe0709e3c6408c3b3e129a6ccdbb5e32561cdf62eea4184f"}, "downloads": -1, "filename": "apluslms_roman-0.2.1rc4-py3-none-any.whl", "has_sig": false, "md5_digest": "2caf347090f6faa688bd2368f2c9f79a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12939, "upload_time": "2018-02-21T20:23:08", "upload_time_iso_8601": "2018-02-21T20:23:08.311050Z", "url": "https://files.pythonhosted.org/packages/8f/17/aa27d9e53bc133f109d5d1d39e5c2fe0ea8c0791cc9e3264d30c5a36ce77/apluslms_roman-0.2.1rc4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da515f96a6853afea67f0cfc7ce68135", "sha256": "6a26db4554d15e8518de5e96b6e02c162ea77ca6c3887ce2954026a18daebce8"}, "downloads": -1, "filename": "apluslms-roman-0.2.1rc4.tar.gz", "has_sig": false, "md5_digest": "da515f96a6853afea67f0cfc7ce68135", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8586, "upload_time": "2018-02-21T20:23:09", "upload_time_iso_8601": "2018-02-21T20:23:09.295609Z", "url": "https://files.pythonhosted.org/packages/34/6f/338cd49ec42159c6b35bfd5f01e79b4118be80b7c24a8cebf55f7dad4cba/apluslms-roman-0.2.1rc4.tar.gz", "yanked": false}], "0.3.0rc1": [{"comment_text": "", "digests": {"md5": "c1a86534fe75391efcf273bdb03ea962", "sha256": "b9592a92317afe966c0aefe50815762e3c0a924e0529aac1ae3d22cdc8954582"}, "downloads": -1, "filename": "apluslms_roman-0.3.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "c1a86534fe75391efcf273bdb03ea962", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31692, "upload_time": "2020-02-18T16:58:36", "upload_time_iso_8601": "2020-02-18T16:58:36.122257Z", "url": "https://files.pythonhosted.org/packages/da/b8/f21ad57bb89b22e43a84a56acdf21eca5d7b2d7d1a1ce18240c75c3059b1/apluslms_roman-0.3.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1760964508013ac26619d21116367f74", "sha256": "bf896bd35479d25a4bd0b69223f6729aa80f495deaba9a26e2fd033571505ad8"}, "downloads": -1, "filename": "apluslms-roman-0.3.0rc1.tar.gz", "has_sig": false, "md5_digest": "1760964508013ac26619d21116367f74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30111, "upload_time": "2020-02-18T16:58:38", "upload_time_iso_8601": "2020-02-18T16:58:38.442783Z", "url": "https://files.pythonhosted.org/packages/2c/c7/0bb141fb4bc47d94d2257e44eae74e12a155c0a8be632ff0f477e9a0f316/apluslms-roman-0.3.0rc1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c1a86534fe75391efcf273bdb03ea962", "sha256": "b9592a92317afe966c0aefe50815762e3c0a924e0529aac1ae3d22cdc8954582"}, "downloads": -1, "filename": "apluslms_roman-0.3.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "c1a86534fe75391efcf273bdb03ea962", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31692, "upload_time": "2020-02-18T16:58:36", "upload_time_iso_8601": "2020-02-18T16:58:36.122257Z", "url": "https://files.pythonhosted.org/packages/da/b8/f21ad57bb89b22e43a84a56acdf21eca5d7b2d7d1a1ce18240c75c3059b1/apluslms_roman-0.3.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1760964508013ac26619d21116367f74", "sha256": "bf896bd35479d25a4bd0b69223f6729aa80f495deaba9a26e2fd033571505ad8"}, "downloads": -1, "filename": "apluslms-roman-0.3.0rc1.tar.gz", "has_sig": false, "md5_digest": "1760964508013ac26619d21116367f74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30111, "upload_time": "2020-02-18T16:58:38", "upload_time_iso_8601": "2020-02-18T16:58:38.442783Z", "url": "https://files.pythonhosted.org/packages/2c/c7/0bb141fb4bc47d94d2257e44eae74e12a155c0a8be632ff0f477e9a0f316/apluslms-roman-0.3.0rc1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:43 2020"}