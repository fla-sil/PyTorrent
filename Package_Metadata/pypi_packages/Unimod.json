{"info": {"author": "David Martin", "author_email": "d.m.a.martin@dundee.ac.uk", "bugtrack_url": null, "classifiers": [], "description": "David's useful Unimod Wrapper\r\n=============================\r\n\r\n\r\nThis is a simple python module to wrap the Unimod XML file in a readily \r\naccessible form for python programemrs. \r\nA copy of the unimod.xml file is included.\r\n\r\nDependencies\r\n============\r\nNo dependencies that are not in a standard >2.4 python distribution.\r\n\r\nUsage\r\n=====\r\n\r\n1. simple usage. Use the built in file. \r\n\r\n>>> import Unimod.unimod\r\n>>> db=Unimod.unimod.database\r\n\r\n2. Use your own file\r\n>>> import Unimod.Database\r\n>>> db=Unimod.Database.Database(file=\"my unimod file\")\r\n\r\n3.  Getting element info\r\nUse the get_element(label) method and a dictionary is returned.\r\n>>> db.get_element('H')\r\n{'avge_mass': '1.00794', 'title': 'H', 'full_name': 'Hydrogen', 'mono_mass': '1.007825035'}\r\n\r\nAll labels are supported, and additionally the common isotopes as labels as well\r\n\r\n>>> db.get_element('O')\r\n{'avge_mass': '15.9994', 'title': 'O', 'full_name': 'Oxygen', 'mono_mass': '15.99491463'}\r\n>>> db.get_element('18O')\r\n{'avge_mass': '17.9991603', 'title': '18O', 'full_name': 'Oxygen18', 'mono_mass': '17.9991603'}\r\n>>> db.get_element('16O')\r\n{'avge_mass': '15.9994', 'title': 'O', 'full_name': 'Oxygen', 'mono_mass': '15.99491463'}\r\n\r\n4. getting modification info\r\n\r\nUse the get_label(modification) method\r\n>>> db.get_label('Phospho')\r\n{'delta_mono_mass': '79.966331',\r\n'group_of_poster': 'admin', \r\n'delta_avge_mass': '79.9799', \r\n'username_of_poster': 'unimod', \r\n'title': 'Phospho', \r\n'delta_composition': 'H O(3) P', \r\n'sites': {\r\n    'C': {'position': 'Anywhere', 'hidden': 'true', 'site': 'C', 'classification': 'Post-translational', 'spec_group': '5'}, \r\n    'D': {'position': 'Anywhere', 'hidden': 'true', 'site': 'D', 'classification': 'Post-translational', 'spec_group': '3'}, \r\n    'H': {'position': 'Anywhere', 'hidden': 'true', 'site': 'H', 'classification': 'Post-translational', 'spec_group': '4'}, \r\n    'K': {'position': 'Anywhere', 'hidden': 'true', 'site': 'K', 'classification': 'Other', 'spec_group': '7'}, \r\n    'S': {'position': 'Anywhere', 'hidden': 'false', 'site': 'S', 'classification': 'Post-translational', 'spec_group': '1'}, \r\n    'R': {'position': 'Anywhere', 'hidden': 'true', 'site': 'R', 'classification': 'Post-translational', 'spec_group': '6'}, \r\n    'T': {'position': 'Anywhere', 'hidden': 'false', 'site': 'T', 'classification': 'Post-translational', 'spec_group': '1'}, \r\n    'Y': {'position': 'Anywhere', 'hidden': 'false', 'site': 'Y', 'classification': 'Post-translational', 'spec_group': '2'}\r\n}, \r\n'spec_group': {\r\n    '1': ['T', 'S'], \r\n    '3': ['D'], \r\n    '2': ['Y'], \r\n    '5': ['C'], \r\n    '4': ['H'], \r\n    '7': ['K'], \r\n    '6': ['R']\r\n}, \r\n'date_time_posted': '2002-08-19 19:17:11', \r\n'date_time_modified': '2011-11-25 10:55:54', \r\n'full_name': 'Phosphorylation', \r\n'record_id': '21', \r\n'approved': 'true'\r\n}\r\n\r\nIn this dictionary are two fields, 'sites' which contains info for each amino acid, and 'spec_group' which contains the specificity grouping for the modification.\r\n\r\n5. Searching for labels\r\nPass a regular expression in text form to the list_labels method.\r\n\r\n>>> db.list_labels('.*Phospho.*')\r\n['Phosphoguanosine', 'Phosphopantetheine', 'PhosphoHex', 'Phosphopropargyl', 'PhosphoribosyldephosphoCoA', 'PhosphoHexNAc', 'Phosphoadenosine', 'PhosphoUridine', 'Phosphogluconoylation', 'Label:13C(9)+Phospho', 'Phospho'] \r\n\r\nAuthor\r\n======\r\n\r\nDr David Martin, University of Dundee, UK. d.m.a.martin@dundee.ac.uk\r\n\r\nCopyright\r\n=========\r\n\r\n(c) David Martin 2012\r\n\r\nLicense\r\n=======\r\n\r\nUnimod data is redistributed under the terms of the licensing described on the \r\nUnimod website http://www.unimod.org - in short you can redistribute the data \r\nincluded as long as you permit unrestricted subsequent redistribution.\r\n\r\nThe software code is licensed under the Creative Commons Attribution License \r\nhttp://creativecommons.org/licenses/by/3.0/ You may use, alter and publish work\r\nbased on the code as long as you acknowledge the use of the code with an \r\nappropriate statement such as this in the copyright/attribution/help text: \"Includes the python Unimod wrapper by Dr David Martin, University of Dundee\".\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/davidmam/MStools", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "Unimod", "package_url": "https://pypi.org/project/Unimod/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Unimod/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/davidmam/MStools"}, "release_url": "https://pypi.org/project/Unimod/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "simple wrapper around the Unimod amino acid modificatins database", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            David's useful Unimod Wrapper\n<br>=============================\n<br>\n<br>\n<br>This is a simple python module to wrap the Unimod XML file in a readily \n<br>accessible form for python programemrs. \n<br>A copy of the unimod.xml file is included.\n<br>\n<br>Dependencies\n<br>============\n<br>No dependencies that are not in a standard &gt;2.4 python distribution.\n<br>\n<br>Usage\n<br>=====\n<br>\n<br>1. simple usage. Use the built in file. \n<br>\n<br>&gt;&gt;&gt; import Unimod.unimod\n<br>&gt;&gt;&gt; db=Unimod.unimod.database\n<br>\n<br>2. Use your own file\n<br>&gt;&gt;&gt; import Unimod.Database\n<br>&gt;&gt;&gt; db=Unimod.Database.Database(file=\"my unimod file\")\n<br>\n<br>3.  Getting element info\n<br>Use the get_element(label) method and a dictionary is returned.\n<br>&gt;&gt;&gt; db.get_element('H')\n<br>{'avge_mass': '1.00794', 'title': 'H', 'full_name': 'Hydrogen', 'mono_mass': '1.007825035'}\n<br>\n<br>All labels are supported, and additionally the common isotopes as labels as well\n<br>\n<br>&gt;&gt;&gt; db.get_element('O')\n<br>{'avge_mass': '15.9994', 'title': 'O', 'full_name': 'Oxygen', 'mono_mass': '15.99491463'}\n<br>&gt;&gt;&gt; db.get_element('18O')\n<br>{'avge_mass': '17.9991603', 'title': '18O', 'full_name': 'Oxygen18', 'mono_mass': '17.9991603'}\n<br>&gt;&gt;&gt; db.get_element('16O')\n<br>{'avge_mass': '15.9994', 'title': 'O', 'full_name': 'Oxygen', 'mono_mass': '15.99491463'}\n<br>\n<br>4. getting modification info\n<br>\n<br>Use the get_label(modification) method\n<br>&gt;&gt;&gt; db.get_label('Phospho')\n<br>{'delta_mono_mass': '79.966331',\n<br>'group_of_poster': 'admin', \n<br>'delta_avge_mass': '79.9799', \n<br>'username_of_poster': 'unimod', \n<br>'title': 'Phospho', \n<br>'delta_composition': 'H O(3) P', \n<br>'sites': {\n<br>    'C': {'position': 'Anywhere', 'hidden': 'true', 'site': 'C', 'classification': 'Post-translational', 'spec_group': '5'}, \n<br>    'D': {'position': 'Anywhere', 'hidden': 'true', 'site': 'D', 'classification': 'Post-translational', 'spec_group': '3'}, \n<br>    'H': {'position': 'Anywhere', 'hidden': 'true', 'site': 'H', 'classification': 'Post-translational', 'spec_group': '4'}, \n<br>    'K': {'position': 'Anywhere', 'hidden': 'true', 'site': 'K', 'classification': 'Other', 'spec_group': '7'}, \n<br>    'S': {'position': 'Anywhere', 'hidden': 'false', 'site': 'S', 'classification': 'Post-translational', 'spec_group': '1'}, \n<br>    'R': {'position': 'Anywhere', 'hidden': 'true', 'site': 'R', 'classification': 'Post-translational', 'spec_group': '6'}, \n<br>    'T': {'position': 'Anywhere', 'hidden': 'false', 'site': 'T', 'classification': 'Post-translational', 'spec_group': '1'}, \n<br>    'Y': {'position': 'Anywhere', 'hidden': 'false', 'site': 'Y', 'classification': 'Post-translational', 'spec_group': '2'}\n<br>}, \n<br>'spec_group': {\n<br>    '1': ['T', 'S'], \n<br>    '3': ['D'], \n<br>    '2': ['Y'], \n<br>    '5': ['C'], \n<br>    '4': ['H'], \n<br>    '7': ['K'], \n<br>    '6': ['R']\n<br>}, \n<br>'date_time_posted': '2002-08-19 19:17:11', \n<br>'date_time_modified': '2011-11-25 10:55:54', \n<br>'full_name': 'Phosphorylation', \n<br>'record_id': '21', \n<br>'approved': 'true'\n<br>}\n<br>\n<br>In this dictionary are two fields, 'sites' which contains info for each amino acid, and 'spec_group' which contains the specificity grouping for the modification.\n<br>\n<br>5. Searching for labels\n<br>Pass a regular expression in text form to the list_labels method.\n<br>\n<br>&gt;&gt;&gt; db.list_labels('.*Phospho.*')\n<br>['Phosphoguanosine', 'Phosphopantetheine', 'PhosphoHex', 'Phosphopropargyl', 'PhosphoribosyldephosphoCoA', 'PhosphoHexNAc', 'Phosphoadenosine', 'PhosphoUridine', 'Phosphogluconoylation', 'Label:13C(9)+Phospho', 'Phospho'] \n<br>\n<br>Author\n<br>======\n<br>\n<br>Dr David Martin, University of Dundee, UK. d.m.a.martin@dundee.ac.uk\n<br>\n<br>Copyright\n<br>=========\n<br>\n<br>(c) David Martin 2012\n<br>\n<br>License\n<br>=======\n<br>\n<br>Unimod data is redistributed under the terms of the licensing described on the \n<br>Unimod website http://www.unimod.org - in short you can redistribute the data \n<br>included as long as you permit unrestricted subsequent redistribution.\n<br>\n<br>The software code is licensed under the Creative Commons Attribution License \n<br>http://creativecommons.org/licenses/by/3.0/ You may use, alter and publish work\n<br>based on the code as long as you acknowledge the use of the code with an \n<br>appropriate statement such as this in the copyright/attribution/help text: \"Includes the python Unimod wrapper by Dr David Martin, University of Dundee\".\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n          </div>"}, "last_serial": 785939, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "bb204772746ac24332f83a19d620a7d6", "sha256": "c252aedb9c29b672d88ec0c5b993b37160b96f000656542f0edbe2ca0cf82d1a"}, "downloads": -1, "filename": "Unimod-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bb204772746ac24332f83a19d620a7d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 227391, "upload_time": "2012-11-20T15:47:13", "upload_time_iso_8601": "2012-11-20T15:47:13.956007Z", "url": "https://files.pythonhosted.org/packages/60/d6/b98ce77f1d3363afcc86ca836e988ba2ef5360dfcdff7298b32432392c5d/Unimod-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6a21e10aa4884a7d6981924f02ffc89b", "sha256": "691cf560d2b58baa388732339c0af840847e31a3b06faaf90a88f78648702da0"}, "downloads": -1, "filename": "Unimod-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6a21e10aa4884a7d6981924f02ffc89b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 227638, "upload_time": "2012-12-07T11:38:13", "upload_time_iso_8601": "2012-12-07T11:38:13.216364Z", "url": "https://files.pythonhosted.org/packages/93/fb/17aa30760564dc1fd5a8c1c367f8a9bedec42ee9e0090862eea86fd9242c/Unimod-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6a21e10aa4884a7d6981924f02ffc89b", "sha256": "691cf560d2b58baa388732339c0af840847e31a3b06faaf90a88f78648702da0"}, "downloads": -1, "filename": "Unimod-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6a21e10aa4884a7d6981924f02ffc89b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 227638, "upload_time": "2012-12-07T11:38:13", "upload_time_iso_8601": "2012-12-07T11:38:13.216364Z", "url": "https://files.pythonhosted.org/packages/93/fb/17aa30760564dc1fd5a8c1c367f8a9bedec42ee9e0090862eea86fd9242c/Unimod-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:40:30 2020"}