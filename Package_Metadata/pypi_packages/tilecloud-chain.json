{"info": {"author": "St\u00e9phane Brunner", "author_email": "stephane.brunner@camptocamp.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: GIS"], "description": "TileCloud Chain\n===============\n\n.. image:: https://secure.travis-ci.org/camptocamp/tilecloud-chain.svg?branch=master\n.. image:: https://coveralls.io/repos/camptocamp/tilecloud-chain/badge.png?branch=master\n\nThe goal of TileCloud Chain is to provide tools around tile generation on a chain like:\n\nSource: WMS, Mapnik.\n\nOptionally using an SQS queue, AWS host, SNS topic.\n\nDestination in WMTS layout, on S3, on Berkley DB (``bsddb``), on MBTiles, or on local filesystem.\n\nFeatures:\n\n- Generate tiles.\n- Drop empty tiles.\n- Drop tiles outside a geometry or a bbox.\n- Use MetaTiles.\n- Generate the legend images.\n- Generate GetCapabilities.\n- Generate OpenLayers example page.\n- Generate the Apache configuration.\n- Obtain the hash of an empty tile.\n- In future, measure tile generation speed.\n- Calculate cost and generation time.\n- In future, manage the AWS hosts that generate tiles.\n- Delete empty tiles.\n- Copy files between caches.\n- Be able to use an SQS queue to dispatch the generation.\n- Post processing the generated tiles.\n- ...\n\n\n.. contents:: Table of contents\n\n\n------\nGet it\n------\n\nWith Docker\n-----------\n\n.. code:: bash\n\n   # Login to docker hub\n   docker login\n   docker pull camptocamp/tilecloud-chain\n\n   # Initialize the project\n   docker run -ti \\\n        --volume .:/project \\\n        camptocamp/tilecloud-chain \\\n        pcreate -s tilecloud_chain .\n\n   # Run the commands\n   DOCKER_ADRS=`ifconfig docker0 | head -n 2 | tail -n 1 | awk -F : '{print $2}' | awk '{print $1}'`\n   docker run -ti \\\n        --volume .:/project \\\n        --add-host=db:${DOCKER_ADRS} \\\n        --add-host=mapserver:${DOCKER_ADRS} \\\n        --env=USER_NAME=`whoami` \\\n        --env=USER_ID=`id -u` \\\n        --env=GROUP_ID=`id -g` \\\n        --env=UMASK=`umask` \\\n        camptocamp/tilecloud-chain \\\n        run <a command>\n\nTo share the home folder you should add the arguments:\n\n.. code:: bash\n\n    --volume=${HOME}:${HOME} \\\n    --env=HOME=${HOME} \\\n\nThe image also contains some tools needed to render OSM data like: ``fonts-dejavu``, ``node-carto`` and ``osm2pgsql``.\n\nWith pip\n--------\n\nRequirements::\n\n    pg_config and a build environment.\n\nInstall::\n\n    pip install tilecloud-chain\n    pcreate -s tilecloud_chain .\n\nEdit your layers configuration in ``./tilegeneration/config.yaml``.\n\n`Default configuration file <https://github.com/camptocamp/tilecloud-chain/blob/master/tilecloud_chain/scaffolds/create/tilegeneration/config.yaml.mako_tmpl>`_.\n\n---------\nConfigure\n---------\n\nConfigure grids\n---------------\n\nThe ``grid`` describes how the tiles are arranged.\n\nEspecially on ``s3`` be careful to choose every of the grid settings before generating the tiles.\nIf you change one of them you must regenerate all the tiles.\n\nThe ``resolutions`` in [px/m] describes all the resolutions available for this layer.\nFor a raster layer, have a look to the maximum resolution of the source files. It is not needed\nto generate tiles at smaller resolutions than the sources, it is preferable to use the OpenLayers client zoom.\nNote that you can add a resolution in the end without regenerating all the tiles.\n\nThe ``bbox`` should match the resolution of the extent. **CAREFUL: you will have big issue if you\nuse this parameter to generate the tile on a restricted area**: use the ``bbox`` on the layer instead.\n\nThe ``srs`` specifies the code of the projection.\n\nThe ``unit`` is the unit used by the projection.\n\nThe ``tile_size`` is the tile size in [px], defaults to 256.\n\nThe ``matrix_identifier`` is ``zoom`` by default and can also be set to ``resolution``. It specifies how the z index is build to store\nthe tiles, for example, for the resolutions ``[2, 1, 0.5]`` the used values are ``[0, 1, 2]`` based on the zoom\nand ``[2, 1, 0_5]`` based on the resolution. The second has the advantage of allowing to add a new\nresolution without regenerating all the tiles, but it does not work with MapCache.\n\n\nConfigure caches\n----------------\n\nThe available tile caches are: ``s3``, ``bsddb``, ``mbtile`` and ``filesystem``.\n\nThe best solution to store the tiles, ``s3``, ``mbtiles`` and ``bsddb``, have the advantage of using only one file per\nlayer - style  dimensions. To serve the ``mbtile`` and the ``bsddb`` see `Distribute the tiles`_.\n\n``s3`` needs a ``bucket`` and a ``folder`` (defaults to '').\n\n``mbtiles``, ``bsddb`` and ``filesystem`` just need a ``folder``.\n\nOn all the caches we can add some information to generate the URL where the tiles are available.\nThis is needed to generate the capabilities. We can specify:\n\n* ``http_url`` direct url to the tiles root.\n* ``http_urls`` (array) urls to the tiles root.\n* ``http_url`` and ``hosts`` (array), where each value of ``hosts`` is used to replace ``%(host)s`` in ``http_url``.\n\nIn all case ``http_url`` or ``http_urls`` can include all attributes of this cache as ``%(attribute)s``.\n\nMBTiles vs Berkley DB (``bsddb``)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Read performance: similar, eventually the MBTiles is 10% faster.\n* Write performance: The Berkley DB is largely faster, about 10 times.\n* List the tiles: the MBTiles is largely faster but we usually don't need it.\n\n\nConfigure layers\n----------------\n\nFirst of all, all the attributes in ``layer_default`` are copied in all the layers to define the default values.\n\nWe have two ``type`` of layer: ``wms`` or ``mapnik``.\n\nTo start the common attributes are:\n\n``min_resolution_seed`` the minimum resolution that is seeded, other resolutions are served by MapCache.\n\n``bbox`` used to limit the tiles generation.\n\n``px_buffer`` a buffer in px around the object area (geoms or extent).\n\n\nWMTS layout\n~~~~~~~~~~~\n\nTo generate the file paths and the WMTS capabilities we need additional information:\n\nThe ``mime_type`` of the tiles, it's also used by the WMS GetMap and to upload the tiles.\n\nThe ``wmts_style`` defaults to 'default'.\n\nThe ``extension`` is used to end the filename.\n\nThe ``dimensions`` (defaults to  []) is an array of objects that have a ``name``,\na ``default`` value specified in the capabilities,\na ``value`` to generate the tiles (it can be overwritten by an argument),\nand an array of ``values`` that contains all the possible values available in the capabilities.\n\nFor example if you generate the tiles and capabilities with the following configuration:\n\n.. code:: yaml\n\n    dimensions:\n        -   name: DATE\n            default: 2012\n            value: 2012\n            values: [2012]\n\nthen with the following configuration:\n\n.. code:: yaml\n\n    dimensions:\n        -   name: DATE\n            default: 2012\n            value: 2013\n            values: [2012, 2013]\n\nWe will have two set of tiles ``2012`` and ``2013``, both accessible by the capabilities, and by default we will see the first set of tiles.\n\n\nMetatiles\n~~~~~~~~~\n\nThe metatiles are activated by setting ``meta`` to ``on`` (by default it's ``off``).\n\nThe metatiles are used for two things: first to generate multiple tiles with only one WMS query.\nBy setting ``meta_size`` to 8 we will generate a square of 8 by 8 tiles in one shot.\n\nThe second usage of metatiles is prevent cut label names: this is solved by getting a bigger image\nand cutting the borders. The ``meta_buffer`` should be set to a bigger value than half the size of the longest label.\n\n\nConfigure hash\n~~~~~~~~~~~~~~\n\nWe can filter tiles and metatiles by using an hash.\n\nThe configuration of this hash is in the layer like this:\n\n.. code:: yaml\n\n    empty_metatile_detection:\n        size: 740\n        hash: 3237839c217b51b8a9644d596982f342f8041546\n    empty_tile_detection:\n        size: 921\n        hash: 1e3da153be87a493c4c71198366485f290cad43c\n\nTo easily generate this configuration we can use the following command::\n\n    generate_tiles --get-hash <z/x/y> -l <layer_name>\n\nWhere ``<z/x/y>`` should refer to an empty tile/metatile. Generally it's a good\nidea to use z as the maximum zoom, x and y as 0.\n\n\nConfigure geom/sql\n~~~~~~~~~~~~~~~~~~\n\nWe can generate the tiles only on some geometries stored in PostGis.\n\nThe configuration is in the layer like this:\n\n.. code:: yaml\n\n    geoms:\n    -   connection: user=www-data password=www-data dbname=<db> host=localhost\n        sql: <column> AS geom FROM <table>\n        min_resolution: <resolution> # included, optional, last win\n        max_resolution: <resolution> # included, optional, last win\n\nExample:\n\n.. code:: yaml\n\n    geoms:\n    -   connection: user=postgres password=postgres dbname=tests host=localhost\n        sql: the_geom AS geom FROM tests.polygon\n    -   connection: user=postgres password=postgres dbname=tests host=localhost\n        sql: the_geom AS geom FROM tests.point\n        min_resolution: 10\n        max_resolution: 20\n\nIt's preferable to use simple geometries, too complex geometries can slow down the generation.\n\nLegends\n~~~~~~~\n\nTo be able to generate legends with ``generate_controller --generate-legend-images``\nyou should have ``legend_mime`` and ``legend_extention`` in the layer configuration.\n\nfor example:\n\n.. code:: yaml\n\n   legend_mime: image/png\n   legend_extention: png\n\nThen it will create a legend image per layer and per zoom level named\n``.../1.0.0/{{layer}}/{{wmts_style}}/legend{{zoom}}.{{legend_extention}}``\nonly if she is different than the previous zoom level. If we have only one legend image\nit still stores in the file named ``legend0.{{legend_extention}}``.\n\nWhen we do ``generate_controller --generate-wmts-capabilities`` we will at first\nparse the legend images to generate a layer configuration like this:\n\n.. code:: yaml\n\n    legends:\n    -   mime_type: image/png\n        href: http://host/tiles/layer/style/legend0.png\n        min_resolution: 500 # optional, [m/px]\n        max_resolution: 2000 # optional, [m/px]\n        min_scale: # if define overwrite the min_resolution [m/m]\n        max_scale: # if define overwrite the max_resolution [m/m]\n\nIf you define a legends array in the layer configuration it is directly used to generate the capabilities.\n\n\nWMS layers\n~~~~~~~~~~\n\nThe additional value needed by the WMS is the URL of the server and the ``layers``.\n\nThe previously defined ``mime_type`` is also used in the WMS requests.\n\nTo customise the request you also have the attributes ``params``, ``headers``\nand ``generate_salt``.\nIn ``params`` you can specify additional parameter of the WMS request,\nin ``headers`` you can modify the request headers. In ``version``, you can change the WMS version. See the\n`Proxy/cache issue`_ for additional informations.\n\n\nMapnik layers\n~~~~~~~~~~~~~\n\nWe need to specify the ``mapfile`` path.\n\nWith Mapnik we have the possibility to specify a ``data_buffer`` then we should set the unneeded ``meta_buffer`` to 0.\n\nAnd the ``output_format`` used for the Mapnik renderer, can be ``png``, ``png256``, ``jpeg``, ``grid`` (grid_renderer).\n\n\n~~~~~~~~~~~~~~~~~~\nMapnik grid layers\n~~~~~~~~~~~~~~~~~~\n\nWith Mapnik we can generate UTFGrid tiles (JSON format that describes the tiles present on a corresponding tile)\nby using the ``output_format`` 'grid', see also: https://github.com/mapnik/mapnik/wiki/MapnikRenderers#grid_renderer.\n\nSpecific configuration:\n\nWe have a specific way to ``drop_empty_utfgrid`` by using the ``on`` value.\n\nWe should specify the pseudo pixel size [px] with the ``resolution``.\n\nAnd the ``layers_fields`` that we want to get the attributes.\nObject with the layer name as key and the values in an array as value.\n\nIn fact the Mapnik documentation says that's working only for one layer.\n\nAnd don't forget to change the ``extension`` to ``json``, and the ``mime_type`` to ``application/utfgrid``\nand the ``meta`` to ``off`` (not supported).\n\nConfiguration example:\n\n.. code:: yaml\n\n    grid:\n        type: mapnik\n        mapfile: style.mapnik\n        output_format: grid\n        extension: json\n        mime_type: application/utfgrid\n        drop_empty_utfgrid: on\n        resolution: 4\n        meta: off\n        data_buffer: 128\n        layers_fields:\n            buildings: [name, street]\n\n\nProcess\n-------\n\nWe can configure some tile commands to process the tiles.\nThey can be automatically be called in the tile generation it we set the property\n``post_process`` or ``pre_hash_post_process`` in the layer configuration.\n\nThe process is a set of names processes, and each one has a list of commands declared like this:\n\n.. code:: yaml\n\n    process:  # root process config\n        optipng:  # the process command\n        -   cmd: optipng %(args)s -q -zc9 -zm8 -zs3 -f5 -o %(out)s %(in)s  # the command line\n            need_out: true  # if false the command rewrite the input file, default to false\n            arg:  # argument used with the defferant log switches, all default to ''\n                default: '-q' # the argument used by default\n                quiet: '-q' # the arbument used in quiet mode\n                verbose: '-v' # the argument used in verbose mode\n                debug: '-log /tmp/optipng.log' # the argument user in debug mode\n\nThe ``cmd`` can have the following optional argument:\n\n* ``args`` the argument configured in the `arg` section.\n* ``in``, ``out`` the input and output files.\n* ``x``, ``y``, ``z`` the tile coordinates.\n\n\nLogging\n-------\n\nTile logs can be saved to a PostgresQL database with this configuration:\n\n..code:: yaml\n\n    logging:\n        database:\n            dbname: my_db\n            host: db\n            port: 5432\n            table: tilecloud_logs\n\nPostgresQL authentication can be specified with the ``PGUSER`` and ``PGPASSWORD`` environment variables.\nIf the database is not reachable, the process will wait until it is.\n\n\nConfigure Apache\n----------------\n\nTo generate the Apache configuration we use the command::\n\n    generate_controller --generate-apache-config\n\nThe Apache configuration look like this (default values):\n\n.. code:: yaml\n\n    apache:\n        # Generated file\n        config_file: apache/tiles.conf\n        # Serve tiles location, default is /tiles\n        location: /${instanceid}/tiles\n        # Expires header in hours\n        expires: 8\n\n        # Headers added to the ressponces\n        headers:\n            Cache-Control: max-age=864000, public\n\nIf we use a proxy to access to the tiles we can specify a different URL to access\nto the tiles by adding the parameter ``tiles_url`` in the cache.\n\nConfigure MapCache\n------------------\n\nFor the last zoom levels we can use MapCache.\n\nTo select the levels we generate the tiles an witch one we serve them using MapCache\nwe have an option 'min_resolution_seed' in the layer configuration.\n\nThe MapCache configuration look like this (default values):\n\n.. code:: yaml\n\n    mapcache:\n        # The generated file\n        config_file: apache/mapcache.xml\n        # The memcache host\n        memcache_host: localhost\n        # The memcache port\n        memcache_port: 11211\n        # The mapcache location, default is /mapcache\n        location: /${instanceid}/mapcache\n\n\nTo generate the MapCache configuration we use the command::\n\n    generate_controller --generate-mapcache-config\n\nTiles error file\n----------------\n\nIf we set a file path in configuration file:\n\n.. code:: yaml\n\n    generation:\n        error_file: <path>\n\nThe tiles that in error will be append to the file, ant the tiles can be regenerated with\n``generate_tiles --layer <layer> --tiles <path>``.\n\nThe ``<path>`` can be ``/tmp/error_{layer}_{datetime:%Y-%m-%d_%H:%M:%S}``\nto have one file per layer and per run.\n\nThe tiles file looks like:\n\n.. code::\n\n    # [time] some comments\n    z/x/y # [time] the error\n    z/x/y:+m/+m # [time] the error\n\nThe first line is just a comment, the second, is for an error on a tile,\nand the third is for an error on a metatile.\n\nProxy/cache issue\n-----------------\n\nIn general we shouldn't generate tiles throw a proxy, to do that you\nshould configure the layers as this:\n\n.. code:: yaml\n\n    layers_name:\n        url: http://localhost/wms\n        headers:\n            Host: the_host_name\n\nThe idea is to get the WMS server on ``localhost`` and use the ``Host`` header\nto select the right Apache VirtualHost.\n\nTo don't have cache we use the as default the headers:\n\n.. code:: yaml\n\n    headers:\n        Cache-Control: no-cache, no-store\n        Pragma: no-cache\n\nAnd if you steal have issue you can add a ``SALT`` random argument by setting\nthe layer parameter ``generate_salt`` to ``true``.\n\n\nAlternate mime type\n-------------------\n\nBy default TileCloud support only the ``image/jpeg`` and ``image/png`` mime type.\n\n\n----------------\nAmazon services\n----------------\n\nAuthentication\n--------------\n\nTo be authenticated by Amazon you should set those environment variable before running a command::\n\n    export AWS_ACCESS_KEY_ID=...\n    export AWS_SECRET_ACCESS_KEY=...\n\nConfigure S3\n------------\n\nThe cache configuration is like this:\n\n.. code:: yaml\n\n    s3:\n        type: s3\n        # the s3 bucket name\n        bucket: tiles\n        # the used folder in the bucket [default to '']\n        folder: ''\n        # for GetCapabilities\n        http_url: https://%(host)s/%(bucket)s/%(folder)s/\n        cache_control: 'public, max-age=14400'\n        hosts:\n        - wmts0.<host>\n\nThe bucket should already exists. If you don't use Amazon's S3, you must specify the ``host`` and\nthe ``tiles_url`` configuration parameter.\n\nConfigure SQS\n-------------\n\nThe configuration in layer is like this:\n\n.. code:: yaml\n\n    sqs:\n        # The region where the SQS queue is\n        region: eu-west-1\n        # The SQS queue name, it should already exists\n        queue: the_name\n\nThe queue should be used only by one layer.\n\nTo use the SQS queue we should first fill the queue::\n\n    generate_tiles --role master --layer <a_layer>\n\nAnd then generate the tiles present in the SQS queue::\n\n    generate_tiles --role slave --layer <a_layer>\n\nFor the slave to keep listening when the queue is empty and be able to support more than one layer, you must\nenable the daemon mode and must not specify the layer::\n\n    generate_tiles --role slave --daemon\n\n\nConfigure SNS\n-------------\n\nSNS can be used to send a message when the generation ends.\n\nThe configuration is like this:\n\n.. code:: yaml\n\n    sns:\n        topic: arn:aws:sns:eu-west-1:your-account-id:tilecloud\n        region: eu-west-1\n\nThe topic should already exists.\n\nAmazon tool\n-----------\n\nAmazon has a command line tool (`homepage <http://aws.amazon.com/fr/cli/>`_).\n\nTo use it, add in the ``setup.py``:\n\n* ``awscli`` as an ``install_requires``,\n* ``'aws = awscli.clidriver:main',`` in the ``console_scripts``.\n\nThan install it:\n\n.. code:: bash\n\n    pip install awscli\n\nAnd use it:\n\n.. code:: bash\n\n    aws help\n\nFor example to delete many tiles do:\n\n.. code:: bash\n\n    aws s3 rm --recursive s3://your_bucket_name/folder\n\n---------------------------\nOther related configuration\n---------------------------\n\nOpenlayers pink tiles\n---------------------\n\nTo avoid the OpenLayers red tiles on missing empty tiles we can add the following CSS rule:\n\n.. code:: css\n\n    .olImageLoadError {\n        display: none;\n    }\n\nTo completely hide the missing tiles, useful for a transparent layer,\nor for an opaque layer:\n\n.. code:: css\n\n    .olImageLoadError {\n        background-color: white;\n    }\n\n\n--------------------\nDistribute the tiles\n--------------------\n\nThere two ways to serve the tiles, with Apache configuration, or with an internal server.\n\nThe advantage of the internal server are:\n\n* Can distribute Mbtiles or Berkley DB.\n* Return ``204 No Content`` HTTP code in place of ``404 Not Found`` (or ``403 Forbidden`` for s3).\n* Can be used in `KVP` mode.\n* Can have zone per layer where are the tiles, otherwise it redirect on mapcache.\n\nTo generate the Apache configuration we use the command::\n\n    generate_controller --generate-apache-config\n\nThe server can be configure as it:\n\n.. code:: yaml\n\n    server:\n        layers: a_layer # Restrict to serve an certain number of layers [default to all]\n        cache: mbtiles # The used cache [default use generation/default_cache]\n        # the URL without location to MapCache, [default to http://localhost/]\n        mapcache_base: http://localhost/\n        mapcache_headers: # headers, can be used to access to an other Apache vhost [default to {}]\n            Host: localhost\n        geoms_redirect: true # use the geoms to redirect to MapCache [default to false]\n        # allowed extension in the static path (default value), not used for s3.\n        static_allow_extension: [jpeg, png, xml, js, html, css]\n\nThe minimal configuration is to enable it:\n\n.. code:: yaml\n\n    server: {}\n\nYou should also configure the ``http_url`` of the used `cache`, to something like\n``https://%(host)s/${instanceid}/tiles`` or like\n``https://%(host)s/${instanceid}/wsgi/tiles`` if you use the Pyramid view.\n\nPyramid view\n------------\n\nTo use the pyramid view use the following configuration:\n\n.. code:: python\n\n    config.get_settings().update({\n        'tilegeneration_configfile': '<the configuration file>',\n    })\n    config.add_route('tiles', '/tiles/\\*path')\n    config.add_view('tilecloud_chain.server:PyramidView', route_name='tiles')\n\n\nInternal WSGI server\n--------------------\n\nin ``production.ini``::\n\n    [app:tiles]\n    use = egg:tilecloud_chain#server\n    configfile = %(here)s/tilegeneration/config.yaml\n\nwith the Apache configuration::\n\n    WSGIDaemonProcess tiles:${instanceid} display-name=%{GROUP} user=${modwsgi_user}\n    WSGIScriptAlias /${instanceid}/tiles ${directory}/apache/wmts.wsgi\n    <Location /${instanceid}/tiles>\n        WSGIProcessGroup tiles:${instanceid}\n        WSGIApplicationGroup %{GLOBAL}\n    </Location>\n\n\n--------\nCommands\n--------\n\nAvailable commands\n------------------\n\n* ``generate_controller`` generate the annexe files like capabilities, legend, OpenLayers test page, MapCache configuration, Apache configuration.\n* ``generate_tiles`` generate the tiles.\n* ``generate_copy`` copy the tiles from a cache to an other.\n* ``generate_process`` process the tiles using a configured process.\n* ``generate_cost`` estimate the cost.\n* ``import_expiretiles`` import the osm2pgsql expire-tiles file as geoms in the database.\n\nEach commands have a ``--help`` option to give a full arguments help.\n\n\nGenerate tiles\n--------------\n\nGenerate all the tiles::\n\n    generate_tiles\n\nGenerate a specific layer::\n\n    generate_tiles --layer <a_layer>\n\nGenerate a specific zoom::\n\n    generate_tiles --zoom 5\n\nGenerate a specific zoom range::\n\n    generate_tiles --zoom 2-8\n\nGenerate a specific some zoom levels::\n\n    generate_tiles --zoom 2,4,7\n\nGenerate tiles from an (error) tiles file::\n\n    generate_tiles --layer <a_layer> --tiles <a_file.tiles>\n\nGenerate tiles on a bbox::\n\n    generate_tiles --bbox <MINX> <MINY> <MAXX> <MAXY>\n\nGenerate a tiles near a tile coordinate (useful for test)::\n\n    generate_tiles --near <X> <Y>\n\nGenerate a tiles in a different cache than the default one::\n\n    generate_tiles --cache <a_cache>\n\nAnd don't forget to generate the WMTS Capabilities::\n\n    generate_controller --capabilities\n\n\nOpenLayers test page\n--------------------\n\nTo generate a test page use::\n\n    generate_controller --openlayers\n\n\n------------\nExplain cost\n------------\n\nConfiguration (default values):\n\n.. code:: yaml\n\n    cost:\n        # [nb/month]\n        request_per_layers: 10000000\n        cloudfront:\n            download: 0.12,\n            get: 0.009\n        request_per_layers: 10000000\n        s3:\n            download: 0.12,\n            get: 0.01,\n            put: 0.01,\n            storage: 0.125\n        sqs:\n            request: 0.01\n\n\nLayer configuration (default values):\n\n.. code:: yaml\n\n    cost:\n        metatile_generation_time: 30.0,\n        tile_generation_time: 30.0,\n        tile_size: 20.0,\n        tileonly_generation_time: 60.0\n\nThe following commands can be used to know the time and cost to do generation::\n\n    generate_controller --cost\n\nUseful options\n--------------\n\n``--quiet`` or ``-q``: used to display only errors.\n\n``--verbose`` or ``-v``: used to display info messages.\n\n``--debug`` or ``-d``: used to display debug message, pleas use this option to report issue.\nWith the debug mode we don't catch exceptions, and we don't log time messages.\n\n``--test <n>`` or ``-t <n>``: used to generate only ``<n>`` tiles, useful for test.\n\nThe logging format is configurable in the``config.yaml`` - ``generation/log_format``,\n`See <http://docs.python.org/2/library/logging.html#logrecord-attributes>`_.\n\n\n-----------------\nImportant remarks\n-----------------\n\nEspecially on S3 the grid name, the layer name, the dimensions, can't be changed\n(understand if we want to change them we should regenerate all the tiles).\n\nBy default we also can't insert a zoom level, if you think that you need it we can\nset the grid property ``matrix_identifier: resolution``, bit it don't work with MapCache.\n\nPlease use the ``--debug`` to report issue.\n\n\n------------\nFrom sources\n------------\n\nBuild it:\n\n.. code:: bash\n\n   git submodule update --recursive\n   virtualenv --python=python3 .build/venv\n   .build/venv/bin/pip install -e .\n   .build/venv/bin/pip install -r dev-requirements.txt\n\n\n-------------\nRun the tests\n-------------\n\nSetup your environment:\n\n.. code:: bash\n\n   docker build --tag camptocamp/tilecloud-chain:latest .\n   docker-compose -p tilecloud up\n\nTo run the tests:\n\n.. code:: bash\n\n   docker-compose -p tilecloud exec test python setup.py nosetests --logging-filter=tilecloud,tilecloud_chain --attr '!'nopy3\n\n\nChangelog\n=========\n\n-----------\nRelease 1.4\n-----------\n\n1. Add optional ``metadata`` section to the config file. See the scaffolds for example.\n\n-----------\nRelease 0.9\n-----------\n\n1. Correct some error with slash.\n\n2. Better error handling.\n\n3. Be able to have one error file per layer.\n\n-----------\nRelease 0.8\n-----------\n\n1. Correct some error with slash.\n\n2. Add ``pre_hash_post_process`` and ``post_process``.\n\n3. Add copy command.\n\n-----------\nRelease 0.7\n-----------\n\n1. Support of deferent geoms per layers, requires configuration changes, old version:\n\n    .. code:: yaml\n\n        connection: user=www-data password=www-data dbname=<db> host=localhost\n        sql: <column> AS geom FROM <table>\n\n    to new version:\n\n    .. code:: yaml\n\n        connection: user=www-data password=www-data dbname=<db> host=localhost\n        geoms:\n        -   sql: <column> AS geom FROM <table>\n\n    More informations in the **Configure geom/sql** chapter.\n\n2. Update from ``optparse`` to ``argparse``, and some argument refactoring, use ``--help`` to see the new version.\n\n3. Add support of Blackbery DB (``bsddb``).\n\n4. The tile ``server`` is completely rewrite, now it support all cache,\n   ``REST`` and ``KVP`` interface, ``GetFeatureInfo`` request,\n   and it can be used as a pyramid view or as a ``WSGI`` server.\n   More informations in the **istribute the tiles** chapter.\n\n5. Add three strategy to bypass the proxy/cache: Use the headers\n   ``Cache-Control: no-cache, no-store``, ``Pragma: no-cache`` (default).\n   Use localhost in the URL and the header ``Host: <host_name>`` (recommended).\n   Add a ``SALT`` random argument (if the above don't work).\n   More informations in the **Proxy/cache issue** chapter.\n\n6. Improve the dimensions usage by adding it ti the WMS requests,\n   And add a ``--dimensions`` argument of ``generate_tiles`` to change the dimensions values.\n\n7. Extract generate_cost and generate_amazon from generate_controler.\n\n8. Now we can creates legends, see the **Legends** chapter.\n\n9. Now the tiles generation display generation statistics at the ends.\n\n10. The EC2 configuration is moved in a separate structure, see README for more informations.\n\n\n-----------\nRelease 0.6\n-----------\n\n1. Now the apache configuration can be generated with ``.build/venv/bin/generate_controller --generate-apache-config``,\n   it support ``filesystem`` ``cache`` and ``MapCache``.\n\n2. Windows fixes.\n\n3. Use console rewrite (\\r) to log generated tiles coordinates.\n\n4. Now if no layers is specified in ``generation:default_layers`` we generate all layers by default.\n\n5. Now bbox to be floats.\n\n6. New ``--get-bbox`` option to get the bbox of a tile.\n\n7. Add coveralls support (https://coveralls.io/r/camptocamp/tilecloud-chain).\n\n8. Add an config option ``generation:error_file`` and a command option ``--tiles``\n   to store and regenerate errored tiles.\n\n\n-----------\nRelease 0.5\n-----------\n\n1. SQS config change:\n\n.. code:: yaml\n\n    layers:\n        layer_name:\n            sqs:\n                # The region where the SQS queue is\n                region: eu-west-1\n                # The SQS queue name, it should already exists\n                queue: the_name\n\n2. Add debug option (``--debug``), please use it to report issue.\n\n3. Now the ``sql`` request can return a set of geometries in a column names geom\n   but the syntax change a little bit => ``<column> AS geom FROM <table>``\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/camptocamp/tilecloud-chain", "keywords": "gis tilecloud chain", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "tilecloud-chain", "package_url": "https://pypi.org/project/tilecloud-chain/", "platform": "", "project_url": "https://pypi.org/project/tilecloud-chain/", "project_urls": {"Homepage": "http://github.com/camptocamp/tilecloud-chain"}, "release_url": "https://pypi.org/project/tilecloud-chain/1.13.9/", "requires_dist": ["c2cwsgiutils", "Jinja2", "pykwalify", "pyramid-mako", "PyYAML", "Shapely", "tilecloud (>=1.3.0)"], "requires_python": "", "summary": "Tools to generate tiles from WMS or Mapnik, to S3, Berkley DB, MBTiles, or local filesystem in WMTS layout using Amazon cloud services.", "version": "1.13.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"tilecloud-chain\">\n<h2><a href=\"#id1\" rel=\"nofollow\">TileCloud Chain</a></h2>\n<img alt=\"https://secure.travis-ci.org/camptocamp/tilecloud-chain.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ec5224163e4932e26e045b5fc4663d809208338/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f63616d70746f63616d702f74696c65636c6f75642d636861696e2e7376673f6272616e63683d6d6173746572\">\n<img alt=\"https://coveralls.io/repos/camptocamp/tilecloud-chain/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90ceb370ef20893ae47720fa5a06f9aff2a03070/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f63616d70746f63616d702f74696c65636c6f75642d636861696e2f62616467652e706e673f6272616e63683d6d6173746572\">\n<p>The goal of TileCloud Chain is to provide tools around tile generation on a chain like:</p>\n<p>Source: WMS, Mapnik.</p>\n<p>Optionally using an SQS queue, AWS host, SNS topic.</p>\n<p>Destination in WMTS layout, on S3, on Berkley DB (<tt>bsddb</tt>), on MBTiles, or on local filesystem.</p>\n<p>Features:</p>\n<ul>\n<li>Generate tiles.</li>\n<li>Drop empty tiles.</li>\n<li>Drop tiles outside a geometry or a bbox.</li>\n<li>Use MetaTiles.</li>\n<li>Generate the legend images.</li>\n<li>Generate GetCapabilities.</li>\n<li>Generate OpenLayers example page.</li>\n<li>Generate the Apache configuration.</li>\n<li>Obtain the hash of an empty tile.</li>\n<li>In future, measure tile generation speed.</li>\n<li>Calculate cost and generation time.</li>\n<li>In future, manage the AWS hosts that generate tiles.</li>\n<li>Delete empty tiles.</li>\n<li>Copy files between caches.</li>\n<li>Be able to use an SQS queue to dispatch the generation.</li>\n<li>Post processing the generated tiles.</li>\n<li>\u2026</li>\n</ul>\n<div id=\"table-of-contents\">\n<p>Table of contents</p>\n<ul>\n<li><a href=\"#tilecloud-chain\" id=\"id1\" rel=\"nofollow\">TileCloud Chain</a><ul>\n<li><a href=\"#get-it\" id=\"id2\" rel=\"nofollow\">Get it</a><ul>\n<li><a href=\"#with-docker\" id=\"id3\" rel=\"nofollow\">With Docker</a></li>\n<li><a href=\"#with-pip\" id=\"id4\" rel=\"nofollow\">With pip</a></li>\n</ul>\n</li>\n<li><a href=\"#configure\" id=\"id5\" rel=\"nofollow\">Configure</a><ul>\n<li><a href=\"#configure-grids\" id=\"id6\" rel=\"nofollow\">Configure grids</a></li>\n<li><a href=\"#configure-caches\" id=\"id7\" rel=\"nofollow\">Configure caches</a><ul>\n<li><a href=\"#mbtiles-vs-berkley-db-bsddb\" id=\"id8\" rel=\"nofollow\">MBTiles vs Berkley DB (<tt>bsddb</tt>)</a></li>\n</ul>\n</li>\n<li><a href=\"#configure-layers\" id=\"id9\" rel=\"nofollow\">Configure layers</a><ul>\n<li><a href=\"#wmts-layout\" id=\"id10\" rel=\"nofollow\">WMTS layout</a></li>\n<li><a href=\"#metatiles\" id=\"id11\" rel=\"nofollow\">Metatiles</a></li>\n<li><a href=\"#configure-hash\" id=\"id12\" rel=\"nofollow\">Configure hash</a></li>\n<li><a href=\"#configure-geom-sql\" id=\"id13\" rel=\"nofollow\">Configure geom/sql</a></li>\n<li><a href=\"#legends\" id=\"id14\" rel=\"nofollow\">Legends</a></li>\n<li><a href=\"#wms-layers\" id=\"id15\" rel=\"nofollow\">WMS layers</a></li>\n<li><a href=\"#mapnik-layers\" id=\"id16\" rel=\"nofollow\">Mapnik layers</a><ul>\n<li><a href=\"#mapnik-grid-layers\" id=\"id17\" rel=\"nofollow\">Mapnik grid layers</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#process\" id=\"id18\" rel=\"nofollow\">Process</a></li>\n<li><a href=\"#logging\" id=\"id19\" rel=\"nofollow\">Logging</a></li>\n<li><a href=\"#configure-apache\" id=\"id20\" rel=\"nofollow\">Configure Apache</a></li>\n<li><a href=\"#configure-mapcache\" id=\"id21\" rel=\"nofollow\">Configure MapCache</a></li>\n<li><a href=\"#tiles-error-file\" id=\"id22\" rel=\"nofollow\">Tiles error file</a></li>\n<li><a href=\"#proxy-cache-issue\" id=\"id23\" rel=\"nofollow\">Proxy/cache issue</a></li>\n<li><a href=\"#alternate-mime-type\" id=\"id24\" rel=\"nofollow\">Alternate mime type</a></li>\n</ul>\n</li>\n<li><a href=\"#amazon-services\" id=\"id25\" rel=\"nofollow\">Amazon services</a><ul>\n<li><a href=\"#authentication\" id=\"id26\" rel=\"nofollow\">Authentication</a></li>\n<li><a href=\"#configure-s3\" id=\"id27\" rel=\"nofollow\">Configure S3</a></li>\n<li><a href=\"#configure-sqs\" id=\"id28\" rel=\"nofollow\">Configure SQS</a></li>\n<li><a href=\"#configure-sns\" id=\"id29\" rel=\"nofollow\">Configure SNS</a></li>\n<li><a href=\"#amazon-tool\" id=\"id30\" rel=\"nofollow\">Amazon tool</a></li>\n</ul>\n</li>\n<li><a href=\"#other-related-configuration\" id=\"id31\" rel=\"nofollow\">Other related configuration</a></li>\n<li><a href=\"#distribute-the-tiles\" id=\"id32\" rel=\"nofollow\">Distribute the tiles</a><ul>\n<li><a href=\"#pyramid-view\" id=\"id33\" rel=\"nofollow\">Pyramid view</a></li>\n<li><a href=\"#internal-wsgi-server\" id=\"id34\" rel=\"nofollow\">Internal WSGI server</a></li>\n</ul>\n</li>\n<li><a href=\"#commands\" id=\"id35\" rel=\"nofollow\">Commands</a><ul>\n<li><a href=\"#available-commands\" id=\"id36\" rel=\"nofollow\">Available commands</a></li>\n<li><a href=\"#generate-tiles\" id=\"id37\" rel=\"nofollow\">Generate tiles</a></li>\n<li><a href=\"#openlayers-test-page\" id=\"id38\" rel=\"nofollow\">OpenLayers test page</a></li>\n</ul>\n</li>\n<li><a href=\"#explain-cost\" id=\"id39\" rel=\"nofollow\">Explain cost</a><ul>\n<li><a href=\"#useful-options\" id=\"id40\" rel=\"nofollow\">Useful options</a></li>\n</ul>\n</li>\n<li><a href=\"#important-remarks\" id=\"id41\" rel=\"nofollow\">Important remarks</a></li>\n<li><a href=\"#from-sources\" id=\"id42\" rel=\"nofollow\">From sources</a></li>\n<li><a href=\"#run-the-tests\" id=\"id43\" rel=\"nofollow\">Run the tests</a></li>\n</ul>\n</li>\n<li><a href=\"#changelog\" id=\"id44\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#release-1-4\" id=\"id45\" rel=\"nofollow\">Release 1.4</a></li>\n<li><a href=\"#release-0-9\" id=\"id46\" rel=\"nofollow\">Release 0.9</a></li>\n<li><a href=\"#release-0-8\" id=\"id47\" rel=\"nofollow\">Release 0.8</a></li>\n<li><a href=\"#release-0-7\" id=\"id48\" rel=\"nofollow\">Release 0.7</a></li>\n<li><a href=\"#release-0-6\" id=\"id49\" rel=\"nofollow\">Release 0.6</a></li>\n<li><a href=\"#release-0-5\" id=\"id50\" rel=\"nofollow\">Release 0.5</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"get-it\">\n<h3><a href=\"#id2\" rel=\"nofollow\">Get it</a></h3>\n<div id=\"with-docker\">\n<h4><a href=\"#id3\" rel=\"nofollow\">With Docker</a></h4>\n<pre><span class=\"c1\"># Login to docker hub\n</span>docker login\ndocker pull camptocamp/tilecloud-chain\n\n<span class=\"c1\"># Initialize the project\n</span>docker run -ti <span class=\"se\">\\\n</span>     --volume .:/project <span class=\"se\">\\\n</span>     camptocamp/tilecloud-chain <span class=\"se\">\\\n</span>     pcreate -s tilecloud_chain .\n\n<span class=\"c1\"># Run the commands\n</span><span class=\"nv\">DOCKER_ADRS</span><span class=\"o\">=</span><span class=\"sb\">`</span>ifconfig docker0 <span class=\"p\">|</span> head -n <span class=\"m\">2</span> <span class=\"p\">|</span> tail -n <span class=\"m\">1</span> <span class=\"p\">|</span> awk -F : <span class=\"s1\">'{print $2}'</span> <span class=\"p\">|</span> awk <span class=\"s1\">'{print $1}'</span><span class=\"sb\">`</span>\ndocker run -ti <span class=\"se\">\\\n</span>     --volume .:/project <span class=\"se\">\\\n</span>     --add-host<span class=\"o\">=</span>db:<span class=\"si\">${</span><span class=\"nv\">DOCKER_ADRS</span><span class=\"si\">}</span> <span class=\"se\">\\\n</span>     --add-host<span class=\"o\">=</span>mapserver:<span class=\"si\">${</span><span class=\"nv\">DOCKER_ADRS</span><span class=\"si\">}</span> <span class=\"se\">\\\n</span>     --env<span class=\"o\">=</span><span class=\"nv\">USER_NAME</span><span class=\"o\">=</span><span class=\"sb\">`</span>whoami<span class=\"sb\">`</span> <span class=\"se\">\\\n</span>     --env<span class=\"o\">=</span><span class=\"nv\">USER_ID</span><span class=\"o\">=</span><span class=\"sb\">`</span>id -u<span class=\"sb\">`</span> <span class=\"se\">\\\n</span>     --env<span class=\"o\">=</span><span class=\"nv\">GROUP_ID</span><span class=\"o\">=</span><span class=\"sb\">`</span>id -g<span class=\"sb\">`</span> <span class=\"se\">\\\n</span>     --env<span class=\"o\">=</span><span class=\"nv\">UMASK</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">umask</span><span class=\"sb\">`</span> <span class=\"se\">\\\n</span>     camptocamp/tilecloud-chain <span class=\"se\">\\\n</span>     run &lt;a command&gt;\n</pre>\n<p>To share the home folder you should add the arguments:</p>\n<pre>--volume<span class=\"o\">=</span><span class=\"si\">${</span><span class=\"nv\">HOME</span><span class=\"si\">}</span>:<span class=\"si\">${</span><span class=\"nv\">HOME</span><span class=\"si\">}</span> <span class=\"se\">\\\n</span>--env<span class=\"o\">=</span><span class=\"nv\">HOME</span><span class=\"o\">=</span><span class=\"si\">${</span><span class=\"nv\">HOME</span><span class=\"si\">}</span> <span class=\"se\">\\</span>\n</pre>\n<p>The image also contains some tools needed to render OSM data like: <tt><span class=\"pre\">fonts-dejavu</span></tt>, <tt><span class=\"pre\">node-carto</span></tt> and <tt>osm2pgsql</tt>.</p>\n</div>\n<div id=\"with-pip\">\n<h4><a href=\"#id4\" rel=\"nofollow\">With pip</a></h4>\n<p>Requirements:</p>\n<pre>pg_config and a build environment.\n</pre>\n<p>Install:</p>\n<pre>pip install tilecloud-chain\npcreate -s tilecloud_chain .\n</pre>\n<p>Edit your layers configuration in <tt>./tilegeneration/config.yaml</tt>.</p>\n<p><a href=\"https://github.com/camptocamp/tilecloud-chain/blob/master/tilecloud_chain/scaffolds/create/tilegeneration/config.yaml.mako_tmpl\" rel=\"nofollow\">Default configuration file</a>.</p>\n</div>\n</div>\n<div id=\"configure\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Configure</a></h3>\n<div id=\"configure-grids\">\n<h4><a href=\"#id6\" rel=\"nofollow\">Configure grids</a></h4>\n<p>The <tt>grid</tt> describes how the tiles are arranged.</p>\n<p>Especially on <tt>s3</tt> be careful to choose every of the grid settings before generating the tiles.\nIf you change one of them you must regenerate all the tiles.</p>\n<p>The <tt>resolutions</tt> in [px/m] describes all the resolutions available for this layer.\nFor a raster layer, have a look to the maximum resolution of the source files. It is not needed\nto generate tiles at smaller resolutions than the sources, it is preferable to use the OpenLayers client zoom.\nNote that you can add a resolution in the end without regenerating all the tiles.</p>\n<p>The <tt>bbox</tt> should match the resolution of the extent. <strong>CAREFUL: you will have big issue if you\nuse this parameter to generate the tile on a restricted area</strong>: use the <tt>bbox</tt> on the layer instead.</p>\n<p>The <tt>srs</tt> specifies the code of the projection.</p>\n<p>The <tt>unit</tt> is the unit used by the projection.</p>\n<p>The <tt>tile_size</tt> is the tile size in [px], defaults to 256.</p>\n<p>The <tt>matrix_identifier</tt> is <tt>zoom</tt> by default and can also be set to <tt>resolution</tt>. It specifies how the z index is build to store\nthe tiles, for example, for the resolutions <tt>[2, 1, 0.5]</tt> the used values are <tt>[0, 1, 2]</tt> based on the zoom\nand <tt>[2, 1, 0_5]</tt> based on the resolution. The second has the advantage of allowing to add a new\nresolution without regenerating all the tiles, but it does not work with MapCache.</p>\n</div>\n<div id=\"configure-caches\">\n<h4><a href=\"#id7\" rel=\"nofollow\">Configure caches</a></h4>\n<p>The available tile caches are: <tt>s3</tt>, <tt>bsddb</tt>, <tt>mbtile</tt> and <tt>filesystem</tt>.</p>\n<p>The best solution to store the tiles, <tt>s3</tt>, <tt>mbtiles</tt> and <tt>bsddb</tt>, have the advantage of using only one file per\nlayer - style  dimensions. To serve the <tt>mbtile</tt> and the <tt>bsddb</tt> see <a href=\"#distribute-the-tiles\" rel=\"nofollow\">Distribute the tiles</a>.</p>\n<p><tt>s3</tt> needs a <tt>bucket</tt> and a <tt>folder</tt> (defaults to \u2018\u2019).</p>\n<p><tt>mbtiles</tt>, <tt>bsddb</tt> and <tt>filesystem</tt> just need a <tt>folder</tt>.</p>\n<p>On all the caches we can add some information to generate the URL where the tiles are available.\nThis is needed to generate the capabilities. We can specify:</p>\n<ul>\n<li><tt>http_url</tt> direct url to the tiles root.</li>\n<li><tt>http_urls</tt> (array) urls to the tiles root.</li>\n<li><tt>http_url</tt> and <tt>hosts</tt> (array), where each value of <tt>hosts</tt> is used to replace <tt>%(host)s</tt> in <tt>http_url</tt>.</li>\n</ul>\n<p>In all case <tt>http_url</tt> or <tt>http_urls</tt> can include all attributes of this cache as <tt>%(attribute)s</tt>.</p>\n<div id=\"mbtiles-vs-berkley-db-bsddb\">\n<h5><a href=\"#id8\" rel=\"nofollow\">MBTiles vs Berkley DB (<tt>bsddb</tt>)</a></h5>\n<ul>\n<li>Read performance: similar, eventually the MBTiles is 10% faster.</li>\n<li>Write performance: The Berkley DB is largely faster, about 10 times.</li>\n<li>List the tiles: the MBTiles is largely faster but we usually don\u2019t need it.</li>\n</ul>\n</div>\n</div>\n<div id=\"configure-layers\">\n<h4><a href=\"#id9\" rel=\"nofollow\">Configure layers</a></h4>\n<p>First of all, all the attributes in <tt>layer_default</tt> are copied in all the layers to define the default values.</p>\n<p>We have two <tt>type</tt> of layer: <tt>wms</tt> or <tt>mapnik</tt>.</p>\n<p>To start the common attributes are:</p>\n<p><tt>min_resolution_seed</tt> the minimum resolution that is seeded, other resolutions are served by MapCache.</p>\n<p><tt>bbox</tt> used to limit the tiles generation.</p>\n<p><tt>px_buffer</tt> a buffer in px around the object area (geoms or extent).</p>\n<div id=\"wmts-layout\">\n<h5><a href=\"#id10\" rel=\"nofollow\">WMTS layout</a></h5>\n<p>To generate the file paths and the WMTS capabilities we need additional information:</p>\n<p>The <tt>mime_type</tt> of the tiles, it\u2019s also used by the WMS GetMap and to upload the tiles.</p>\n<p>The <tt>wmts_style</tt> defaults to \u2018default\u2019.</p>\n<p>The <tt>extension</tt> is used to end the filename.</p>\n<p>The <tt>dimensions</tt> (defaults to  []) is an array of objects that have a <tt>name</tt>,\na <tt>default</tt> value specified in the capabilities,\na <tt>value</tt> to generate the tiles (it can be overwritten by an argument),\nand an array of <tt>values</tt> that contains all the possible values available in the capabilities.</p>\n<p>For example if you generate the tiles and capabilities with the following configuration:</p>\n<pre><span class=\"nt\">dimensions</span><span class=\"p\">:</span>\n    <span class=\"p-Indicator\">-</span>   <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">DATE</span>\n        <span class=\"nt\">default</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">2012</span>\n        <span class=\"nt\">value</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">2012</span>\n        <span class=\"nt\">values</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">2012</span><span class=\"p-Indicator\">]</span>\n</pre>\n<p>then with the following configuration:</p>\n<pre><span class=\"nt\">dimensions</span><span class=\"p\">:</span>\n    <span class=\"p-Indicator\">-</span>   <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">DATE</span>\n        <span class=\"nt\">default</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">2012</span>\n        <span class=\"nt\">value</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">2013</span>\n        <span class=\"nt\">values</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">2012</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">2013</span><span class=\"p-Indicator\">]</span>\n</pre>\n<p>We will have two set of tiles <tt>2012</tt> and <tt>2013</tt>, both accessible by the capabilities, and by default we will see the first set of tiles.</p>\n</div>\n<div id=\"metatiles\">\n<h5><a href=\"#id11\" rel=\"nofollow\">Metatiles</a></h5>\n<p>The metatiles are activated by setting <tt>meta</tt> to <tt>on</tt> (by default it\u2019s <tt>off</tt>).</p>\n<p>The metatiles are used for two things: first to generate multiple tiles with only one WMS query.\nBy setting <tt>meta_size</tt> to 8 we will generate a square of 8 by 8 tiles in one shot.</p>\n<p>The second usage of metatiles is prevent cut label names: this is solved by getting a bigger image\nand cutting the borders. The <tt>meta_buffer</tt> should be set to a bigger value than half the size of the longest label.</p>\n</div>\n<div id=\"configure-hash\">\n<h5><a href=\"#id12\" rel=\"nofollow\">Configure hash</a></h5>\n<p>We can filter tiles and metatiles by using an hash.</p>\n<p>The configuration of this hash is in the layer like this:</p>\n<pre><span class=\"nt\">empty_metatile_detection</span><span class=\"p\">:</span>\n    <span class=\"nt\">size</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">740</span>\n    <span class=\"nt\">hash</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">3237839c217b51b8a9644d596982f342f8041546</span>\n<span class=\"nt\">empty_tile_detection</span><span class=\"p\">:</span>\n    <span class=\"nt\">size</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">921</span>\n    <span class=\"nt\">hash</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">1e3da153be87a493c4c71198366485f290cad43c</span>\n</pre>\n<p>To easily generate this configuration we can use the following command:</p>\n<pre>generate_tiles --get-hash &lt;z/x/y&gt; -l &lt;layer_name&gt;\n</pre>\n<p>Where <tt>&lt;z/x/y&gt;</tt> should refer to an empty tile/metatile. Generally it\u2019s a good\nidea to use z as the maximum zoom, x and y as 0.</p>\n</div>\n<div id=\"configure-geom-sql\">\n<h5><a href=\"#id13\" rel=\"nofollow\">Configure geom/sql</a></h5>\n<p>We can generate the tiles only on some geometries stored in PostGis.</p>\n<p>The configuration is in the layer like this:</p>\n<pre><span class=\"nt\">geoms</span><span class=\"p\">:</span>\n<span class=\"p-Indicator\">-</span>   <span class=\"nt\">connection</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">user=www-data password=www-data dbname=&lt;db&gt; host=localhost</span>\n    <span class=\"nt\">sql</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">&lt;column&gt; AS geom FROM &lt;table&gt;</span>\n    <span class=\"nt\">min_resolution</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">&lt;resolution&gt;</span> <span class=\"c1\"># included, optional, last win</span>\n    <span class=\"nt\">max_resolution</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">&lt;resolution&gt;</span> <span class=\"c1\"># included, optional, last win</span>\n</pre>\n<p>Example:</p>\n<pre><span class=\"nt\">geoms</span><span class=\"p\">:</span>\n<span class=\"p-Indicator\">-</span>   <span class=\"nt\">connection</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">user=postgres password=postgres dbname=tests host=localhost</span>\n    <span class=\"nt\">sql</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">the_geom AS geom FROM tests.polygon</span>\n<span class=\"p-Indicator\">-</span>   <span class=\"nt\">connection</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">user=postgres password=postgres dbname=tests host=localhost</span>\n    <span class=\"nt\">sql</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">the_geom AS geom FROM tests.point</span>\n    <span class=\"nt\">min_resolution</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">10</span>\n    <span class=\"nt\">max_resolution</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">20</span>\n</pre>\n<p>It\u2019s preferable to use simple geometries, too complex geometries can slow down the generation.</p>\n</div>\n<div id=\"legends\">\n<h5><a href=\"#id14\" rel=\"nofollow\">Legends</a></h5>\n<p>To be able to generate legends with <tt>generate_controller <span class=\"pre\">--generate-legend-images</span></tt>\nyou should have <tt>legend_mime</tt> and <tt>legend_extention</tt> in the layer configuration.</p>\n<p>for example:</p>\n<pre><span class=\"nt\">legend_mime</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">image/png</span>\n<span class=\"nt\">legend_extention</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">png</span>\n</pre>\n<p>Then it will create a legend image per layer and per zoom level named\n<tt><span class=\"pre\">.../1.0.0/{{layer}}/{{wmts_style}}/legend{{zoom}}.{{legend_extention}}</span></tt>\nonly if she is different than the previous zoom level. If we have only one legend image\nit still stores in the file named <tt><span class=\"pre\">legend0.{{legend_extention}}</span></tt>.</p>\n<p>When we do <tt>generate_controller <span class=\"pre\">--generate-wmts-capabilities</span></tt> we will at first\nparse the legend images to generate a layer configuration like this:</p>\n<pre><span class=\"nt\">legends</span><span class=\"p\">:</span>\n<span class=\"p-Indicator\">-</span>   <span class=\"nt\">mime_type</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">image/png</span>\n    <span class=\"nt\">href</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">http://host/tiles/layer/style/legend0.png</span>\n    <span class=\"nt\">min_resolution</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">500</span> <span class=\"c1\"># optional, [m/px]</span>\n    <span class=\"nt\">max_resolution</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">2000</span> <span class=\"c1\"># optional, [m/px]</span>\n    <span class=\"nt\">min_scale</span><span class=\"p\">:</span> <span class=\"c1\"># if define overwrite the min_resolution [m/m]</span>\n    <span class=\"nt\">max_scale</span><span class=\"p\">:</span> <span class=\"c1\"># if define overwrite the max_resolution [m/m]</span>\n</pre>\n<p>If you define a legends array in the layer configuration it is directly used to generate the capabilities.</p>\n</div>\n<div id=\"wms-layers\">\n<h5><a href=\"#id15\" rel=\"nofollow\">WMS layers</a></h5>\n<p>The additional value needed by the WMS is the URL of the server and the <tt>layers</tt>.</p>\n<p>The previously defined <tt>mime_type</tt> is also used in the WMS requests.</p>\n<p>To customise the request you also have the attributes <tt>params</tt>, <tt>headers</tt>\nand <tt>generate_salt</tt>.\nIn <tt>params</tt> you can specify additional parameter of the WMS request,\nin <tt>headers</tt> you can modify the request headers. In <tt>version</tt>, you can change the WMS version. See the\n<a href=\"#proxy-cache-issue\" rel=\"nofollow\">Proxy/cache issue</a> for additional informations.</p>\n</div>\n<div id=\"mapnik-layers\">\n<h5><a href=\"#id16\" rel=\"nofollow\">Mapnik layers</a></h5>\n<p>We need to specify the <tt>mapfile</tt> path.</p>\n<p>With Mapnik we have the possibility to specify a <tt>data_buffer</tt> then we should set the unneeded <tt>meta_buffer</tt> to 0.</p>\n<p>And the <tt>output_format</tt> used for the Mapnik renderer, can be <tt>png</tt>, <tt>png256</tt>, <tt>jpeg</tt>, <tt>grid</tt> (grid_renderer).</p>\n<div id=\"mapnik-grid-layers\">\n<h6><a href=\"#id17\" rel=\"nofollow\">Mapnik grid layers</a></h6>\n<p>With Mapnik we can generate UTFGrid tiles (JSON format that describes the tiles present on a corresponding tile)\nby using the <tt>output_format</tt> \u2018grid\u2019, see also: <a href=\"https://github.com/mapnik/mapnik/wiki/MapnikRenderers#grid_renderer\" rel=\"nofollow\">https://github.com/mapnik/mapnik/wiki/MapnikRenderers#grid_renderer</a>.</p>\n<p>Specific configuration:</p>\n<p>We have a specific way to <tt>drop_empty_utfgrid</tt> by using the <tt>on</tt> value.</p>\n<p>We should specify the pseudo pixel size [px] with the <tt>resolution</tt>.</p>\n<p>And the <tt>layers_fields</tt> that we want to get the attributes.\nObject with the layer name as key and the values in an array as value.</p>\n<p>In fact the Mapnik documentation says that\u2019s working only for one layer.</p>\n<p>And don\u2019t forget to change the <tt>extension</tt> to <tt>json</tt>, and the <tt>mime_type</tt> to <tt>application/utfgrid</tt>\nand the <tt>meta</tt> to <tt>off</tt> (not supported).</p>\n<p>Configuration example:</p>\n<pre><span class=\"nt\">grid</span><span class=\"p\">:</span>\n    <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">mapnik</span>\n    <span class=\"nt\">mapfile</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">style.mapnik</span>\n    <span class=\"nt\">output_format</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">grid</span>\n    <span class=\"nt\">extension</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">json</span>\n    <span class=\"nt\">mime_type</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">application/utfgrid</span>\n    <span class=\"nt\">drop_empty_utfgrid</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">on</span>\n    <span class=\"nt\">resolution</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">4</span>\n    <span class=\"nt\">meta</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">off</span>\n    <span class=\"nt\">data_buffer</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">128</span>\n    <span class=\"nt\">layers_fields</span><span class=\"p\">:</span>\n        <span class=\"nt\">buildings</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">name</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">street</span><span class=\"p-Indicator\">]</span>\n</pre>\n</div>\n</div>\n</div>\n<div id=\"process\">\n<h4><a href=\"#id18\" rel=\"nofollow\">Process</a></h4>\n<p>We can configure some tile commands to process the tiles.\nThey can be automatically be called in the tile generation it we set the property\n<tt>post_process</tt> or <tt>pre_hash_post_process</tt> in the layer configuration.</p>\n<p>The process is a set of names processes, and each one has a list of commands declared like this:</p>\n<pre><span class=\"nt\">process</span><span class=\"p\">:</span>  <span class=\"c1\"># root process config</span>\n    <span class=\"nt\">optipng</span><span class=\"p\">:</span>  <span class=\"c1\"># the process command</span>\n    <span class=\"p-Indicator\">-</span>   <span class=\"nt\">cmd</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">optipng %(args)s -q -zc9 -zm8 -zs3 -f5 -o %(out)s %(in)s</span>  <span class=\"c1\"># the command line</span>\n        <span class=\"nt\">need_out</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">true</span>  <span class=\"c1\"># if false the command rewrite the input file, default to false</span>\n        <span class=\"nt\">arg</span><span class=\"p\">:</span>  <span class=\"c1\"># argument used with the defferant log switches, all default to ''</span>\n            <span class=\"nt\">default</span><span class=\"p\">:</span> <span class=\"s\">'-q'</span> <span class=\"c1\"># the argument used by default</span>\n            <span class=\"nt\">quiet</span><span class=\"p\">:</span> <span class=\"s\">'-q'</span> <span class=\"c1\"># the arbument used in quiet mode</span>\n            <span class=\"nt\">verbose</span><span class=\"p\">:</span> <span class=\"s\">'-v'</span> <span class=\"c1\"># the argument used in verbose mode</span>\n            <span class=\"nt\">debug</span><span class=\"p\">:</span> <span class=\"s\">'-log</span><span class=\"nv\"> </span><span class=\"s\">/tmp/optipng.log'</span> <span class=\"c1\"># the argument user in debug mode</span>\n</pre>\n<p>The <tt>cmd</tt> can have the following optional argument:</p>\n<ul>\n<li><tt>args</tt> the argument configured in the <cite>arg</cite> section.</li>\n<li><tt>in</tt>, <tt>out</tt> the input and output files.</li>\n<li><tt>x</tt>, <tt>y</tt>, <tt>z</tt> the tile coordinates.</li>\n</ul>\n</div>\n<div id=\"logging\">\n<h4><a href=\"#id19\" rel=\"nofollow\">Logging</a></h4>\n<p>Tile logs can be saved to a PostgresQL database with this configuration:</p>\n<p>..code:: yaml</p>\n<blockquote>\n<dl>\n<dt>logging:</dt>\n<dd><dl>\n<dt>database:</dt>\n<dd>dbname: my_db\nhost: db\nport: 5432\ntable: tilecloud_logs</dd>\n</dl>\n</dd>\n</dl>\n</blockquote>\n<p>PostgresQL authentication can be specified with the <tt>PGUSER</tt> and <tt>PGPASSWORD</tt> environment variables.\nIf the database is not reachable, the process will wait until it is.</p>\n</div>\n<div id=\"configure-apache\">\n<h4><a href=\"#id20\" rel=\"nofollow\">Configure Apache</a></h4>\n<p>To generate the Apache configuration we use the command:</p>\n<pre>generate_controller --generate-apache-config\n</pre>\n<p>The Apache configuration look like this (default values):</p>\n<pre><span class=\"nt\">apache</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Generated file</span>\n    <span class=\"nt\">config_file</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">apache/tiles.conf</span>\n    <span class=\"c1\"># Serve tiles location, default is /tiles</span>\n    <span class=\"nt\">location</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">/${instanceid}/tiles</span>\n    <span class=\"c1\"># Expires header in hours</span>\n    <span class=\"nt\">expires</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">8</span>\n\n    <span class=\"c1\"># Headers added to the ressponces</span>\n    <span class=\"nt\">headers</span><span class=\"p\">:</span>\n        <span class=\"nt\">Cache-Control</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">max-age=864000, public</span>\n</pre>\n<p>If we use a proxy to access to the tiles we can specify a different URL to access\nto the tiles by adding the parameter <tt>tiles_url</tt> in the cache.</p>\n</div>\n<div id=\"configure-mapcache\">\n<h4><a href=\"#id21\" rel=\"nofollow\">Configure MapCache</a></h4>\n<p>For the last zoom levels we can use MapCache.</p>\n<p>To select the levels we generate the tiles an witch one we serve them using MapCache\nwe have an option \u2018min_resolution_seed\u2019 in the layer configuration.</p>\n<p>The MapCache configuration look like this (default values):</p>\n<pre><span class=\"nt\">mapcache</span><span class=\"p\">:</span>\n    <span class=\"c1\"># The generated file</span>\n    <span class=\"nt\">config_file</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">apache/mapcache.xml</span>\n    <span class=\"c1\"># The memcache host</span>\n    <span class=\"nt\">memcache_host</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">localhost</span>\n    <span class=\"c1\"># The memcache port</span>\n    <span class=\"nt\">memcache_port</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">11211</span>\n    <span class=\"c1\"># The mapcache location, default is /mapcache</span>\n    <span class=\"nt\">location</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">/${instanceid}/mapcache</span>\n</pre>\n<p>To generate the MapCache configuration we use the command:</p>\n<pre>generate_controller --generate-mapcache-config\n</pre>\n</div>\n<div id=\"tiles-error-file\">\n<h4><a href=\"#id22\" rel=\"nofollow\">Tiles error file</a></h4>\n<p>If we set a file path in configuration file:</p>\n<pre><span class=\"nt\">generation</span><span class=\"p\">:</span>\n    <span class=\"nt\">error_file</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">&lt;path&gt;</span>\n</pre>\n<p>The tiles that in error will be append to the file, ant the tiles can be regenerated with\n<tt>generate_tiles <span class=\"pre\">--layer</span> &lt;layer&gt; <span class=\"pre\">--tiles</span> &lt;path&gt;</tt>.</p>\n<p>The <tt>&lt;path&gt;</tt> can be <tt><span class=\"pre\">/tmp/error_{layer}_{datetime:%Y-%m-%d_%H:%M:%S}</span></tt>\nto have one file per layer and per run.</p>\n<p>The tiles file looks like:</p>\n<pre># [time] some comments\nz/x/y # [time] the error\nz/x/y:+m/+m # [time] the error\n</pre>\n<p>The first line is just a comment, the second, is for an error on a tile,\nand the third is for an error on a metatile.</p>\n</div>\n<div id=\"proxy-cache-issue\">\n<h4><a href=\"#id23\" rel=\"nofollow\">Proxy/cache issue</a></h4>\n<p>In general we shouldn\u2019t generate tiles throw a proxy, to do that you\nshould configure the layers as this:</p>\n<pre><span class=\"nt\">layers_name</span><span class=\"p\">:</span>\n    <span class=\"nt\">url</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">http://localhost/wms</span>\n    <span class=\"nt\">headers</span><span class=\"p\">:</span>\n        <span class=\"nt\">Host</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">the_host_name</span>\n</pre>\n<p>The idea is to get the WMS server on <tt>localhost</tt> and use the <tt>Host</tt> header\nto select the right Apache VirtualHost.</p>\n<p>To don\u2019t have cache we use the as default the headers:</p>\n<pre><span class=\"nt\">headers</span><span class=\"p\">:</span>\n    <span class=\"nt\">Cache-Control</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">no-cache, no-store</span>\n    <span class=\"nt\">Pragma</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">no-cache</span>\n</pre>\n<p>And if you steal have issue you can add a <tt>SALT</tt> random argument by setting\nthe layer parameter <tt>generate_salt</tt> to <tt>true</tt>.</p>\n</div>\n<div id=\"alternate-mime-type\">\n<h4><a href=\"#id24\" rel=\"nofollow\">Alternate mime type</a></h4>\n<p>By default TileCloud support only the <tt>image/jpeg</tt> and <tt>image/png</tt> mime type.</p>\n</div>\n</div>\n<div id=\"amazon-services\">\n<h3><a href=\"#id25\" rel=\"nofollow\">Amazon services</a></h3>\n<div id=\"authentication\">\n<h4><a href=\"#id26\" rel=\"nofollow\">Authentication</a></h4>\n<p>To be authenticated by Amazon you should set those environment variable before running a command:</p>\n<pre>export AWS_ACCESS_KEY_ID=...\nexport AWS_SECRET_ACCESS_KEY=...\n</pre>\n</div>\n<div id=\"configure-s3\">\n<h4><a href=\"#id27\" rel=\"nofollow\">Configure S3</a></h4>\n<p>The cache configuration is like this:</p>\n<pre><span class=\"nt\">s3</span><span class=\"p\">:</span>\n    <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">s3</span>\n    <span class=\"c1\"># the s3 bucket name</span>\n    <span class=\"nt\">bucket</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">tiles</span>\n    <span class=\"c1\"># the used folder in the bucket [default to '']</span>\n    <span class=\"nt\">folder</span><span class=\"p\">:</span> <span class=\"s\">''</span>\n    <span class=\"c1\"># for GetCapabilities</span>\n    <span class=\"nt\">http_url</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">https://%(host)s/%(bucket)s/%(folder)s/</span>\n    <span class=\"nt\">cache_control</span><span class=\"p\">:</span> <span class=\"s\">'public,</span><span class=\"nv\"> </span><span class=\"s\">max-age=14400'</span>\n    <span class=\"nt\">hosts</span><span class=\"p\">:</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">wmts0.&lt;host&gt;</span>\n</pre>\n<p>The bucket should already exists. If you don\u2019t use Amazon\u2019s S3, you must specify the <tt>host</tt> and\nthe <tt>tiles_url</tt> configuration parameter.</p>\n</div>\n<div id=\"configure-sqs\">\n<h4><a href=\"#id28\" rel=\"nofollow\">Configure SQS</a></h4>\n<p>The configuration in layer is like this:</p>\n<pre><span class=\"nt\">sqs</span><span class=\"p\">:</span>\n    <span class=\"c1\"># The region where the SQS queue is</span>\n    <span class=\"nt\">region</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">eu-west-1</span>\n    <span class=\"c1\"># The SQS queue name, it should already exists</span>\n    <span class=\"nt\">queue</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">the_name</span>\n</pre>\n<p>The queue should be used only by one layer.</p>\n<p>To use the SQS queue we should first fill the queue:</p>\n<pre>generate_tiles --role master --layer &lt;a_layer&gt;\n</pre>\n<p>And then generate the tiles present in the SQS queue:</p>\n<pre>generate_tiles --role slave --layer &lt;a_layer&gt;\n</pre>\n<p>For the slave to keep listening when the queue is empty and be able to support more than one layer, you must\nenable the daemon mode and must not specify the layer:</p>\n<pre>generate_tiles --role slave --daemon\n</pre>\n</div>\n<div id=\"configure-sns\">\n<h4><a href=\"#id29\" rel=\"nofollow\">Configure SNS</a></h4>\n<p>SNS can be used to send a message when the generation ends.</p>\n<p>The configuration is like this:</p>\n<pre><span class=\"nt\">sns</span><span class=\"p\">:</span>\n    <span class=\"nt\">topic</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">arn:aws:sns:eu-west-1:your-account-id:tilecloud</span>\n    <span class=\"nt\">region</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">eu-west-1</span>\n</pre>\n<p>The topic should already exists.</p>\n</div>\n<div id=\"amazon-tool\">\n<h4><a href=\"#id30\" rel=\"nofollow\">Amazon tool</a></h4>\n<p>Amazon has a command line tool (<a href=\"http://aws.amazon.com/fr/cli/\" rel=\"nofollow\">homepage</a>).</p>\n<p>To use it, add in the <tt>setup.py</tt>:</p>\n<ul>\n<li><tt>awscli</tt> as an <tt>install_requires</tt>,</li>\n<li><tt>'aws = awscli.clidriver:main',</tt> in the <tt>console_scripts</tt>.</li>\n</ul>\n<p>Than install it:</p>\n<pre>pip install awscli\n</pre>\n<p>And use it:</p>\n<pre>aws <span class=\"nb\">help</span>\n</pre>\n<p>For example to delete many tiles do:</p>\n<pre>aws s3 rm --recursive s3://your_bucket_name/folder\n</pre>\n</div>\n</div>\n<div id=\"other-related-configuration\">\n<h3><a href=\"#id31\" rel=\"nofollow\">Other related configuration</a></h3>\n<h3 id=\"openlayers-pink-tiles\"><span class=\"section-subtitle\">Openlayers pink tiles</span></h3>\n<p>To avoid the OpenLayers red tiles on missing empty tiles we can add the following CSS rule:</p>\n<pre><span class=\"p\">.</span><span class=\"nc\">olImageLoadError</span> <span class=\"p\">{</span>\n    <span class=\"k\">display</span><span class=\"p\">:</span> <span class=\"kc\">none</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre>\n<p>To completely hide the missing tiles, useful for a transparent layer,\nor for an opaque layer:</p>\n<pre><span class=\"p\">.</span><span class=\"nc\">olImageLoadError</span> <span class=\"p\">{</span>\n    <span class=\"k\">background-color</span><span class=\"p\">:</span> <span class=\"kc\">white</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"distribute-the-tiles\">\n<h3><a href=\"#id32\" rel=\"nofollow\">Distribute the tiles</a></h3>\n<p>There two ways to serve the tiles, with Apache configuration, or with an internal server.</p>\n<p>The advantage of the internal server are:</p>\n<ul>\n<li>Can distribute Mbtiles or Berkley DB.</li>\n<li>Return <tt>204 No Content</tt> HTTP code in place of <tt>404 Not Found</tt> (or <tt>403 Forbidden</tt> for s3).</li>\n<li>Can be used in <cite>KVP</cite> mode.</li>\n<li>Can have zone per layer where are the tiles, otherwise it redirect on mapcache.</li>\n</ul>\n<p>To generate the Apache configuration we use the command:</p>\n<pre>generate_controller --generate-apache-config\n</pre>\n<p>The server can be configure as it:</p>\n<pre><span class=\"nt\">server</span><span class=\"p\">:</span>\n    <span class=\"nt\">layers</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">a_layer</span> <span class=\"c1\"># Restrict to serve an certain number of layers [default to all]</span>\n    <span class=\"nt\">cache</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">mbtiles</span> <span class=\"c1\"># The used cache [default use generation/default_cache]</span>\n    <span class=\"c1\"># the URL without location to MapCache, [default to http://localhost/]</span>\n    <span class=\"nt\">mapcache_base</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">http://localhost/</span>\n    <span class=\"nt\">mapcache_headers</span><span class=\"p\">:</span> <span class=\"c1\"># headers, can be used to access to an other Apache vhost [default to {}]</span>\n        <span class=\"nt\">Host</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">localhost</span>\n    <span class=\"nt\">geoms_redirect</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">true</span> <span class=\"c1\"># use the geoms to redirect to MapCache [default to false]</span>\n    <span class=\"c1\"># allowed extension in the static path (default value), not used for s3.</span>\n    <span class=\"nt\">static_allow_extension</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">jpeg</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">png</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">xml</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">js</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">html</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">css</span><span class=\"p-Indicator\">]</span>\n</pre>\n<p>The minimal configuration is to enable it:</p>\n<pre><span class=\"nt\">server</span><span class=\"p\">:</span> <span class=\"p-Indicator\">{}</span>\n</pre>\n<p>You should also configure the <tt>http_url</tt> of the used <cite>cache</cite>, to something like\n<tt><span class=\"pre\">https://%(host)s/${instanceid}/tiles</span></tt> or like\n<tt><span class=\"pre\">https://%(host)s/${instanceid}/wsgi/tiles</span></tt> if you use the Pyramid view.</p>\n<div id=\"pyramid-view\">\n<h4><a href=\"#id33\" rel=\"nofollow\">Pyramid view</a></h4>\n<p>To use the pyramid view use the following configuration:</p>\n<pre><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get_settings</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span>\n    <span class=\"s1\">'tilegeneration_configfile'</span><span class=\"p\">:</span> <span class=\"s1\">'&lt;the configuration file&gt;'</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">add_route</span><span class=\"p\">(</span><span class=\"s1\">'tiles'</span><span class=\"p\">,</span> <span class=\"s1\">'/tiles/\\*path'</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">add_view</span><span class=\"p\">(</span><span class=\"s1\">'tilecloud_chain.server:PyramidView'</span><span class=\"p\">,</span> <span class=\"n\">route_name</span><span class=\"o\">=</span><span class=\"s1\">'tiles'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"internal-wsgi-server\">\n<h4><a href=\"#id34\" rel=\"nofollow\">Internal WSGI server</a></h4>\n<p>in <tt>production.ini</tt>:</p>\n<pre>[app:tiles]\nuse = egg:tilecloud_chain#server\nconfigfile = %(here)s/tilegeneration/config.yaml\n</pre>\n<p>with the Apache configuration:</p>\n<pre>WSGIDaemonProcess tiles:${instanceid} display-name=%{GROUP} user=${modwsgi_user}\nWSGIScriptAlias /${instanceid}/tiles ${directory}/apache/wmts.wsgi\n&lt;Location /${instanceid}/tiles&gt;\n    WSGIProcessGroup tiles:${instanceid}\n    WSGIApplicationGroup %{GLOBAL}\n&lt;/Location&gt;\n</pre>\n</div>\n</div>\n<div id=\"commands\">\n<h3><a href=\"#id35\" rel=\"nofollow\">Commands</a></h3>\n<div id=\"available-commands\">\n<h4><a href=\"#id36\" rel=\"nofollow\">Available commands</a></h4>\n<ul>\n<li><tt>generate_controller</tt> generate the annexe files like capabilities, legend, OpenLayers test page, MapCache configuration, Apache configuration.</li>\n<li><tt>generate_tiles</tt> generate the tiles.</li>\n<li><tt>generate_copy</tt> copy the tiles from a cache to an other.</li>\n<li><tt>generate_process</tt> process the tiles using a configured process.</li>\n<li><tt>generate_cost</tt> estimate the cost.</li>\n<li><tt>import_expiretiles</tt> import the osm2pgsql expire-tiles file as geoms in the database.</li>\n</ul>\n<p>Each commands have a <tt><span class=\"pre\">--help</span></tt> option to give a full arguments help.</p>\n</div>\n<div id=\"generate-tiles\">\n<h4><a href=\"#id37\" rel=\"nofollow\">Generate tiles</a></h4>\n<p>Generate all the tiles:</p>\n<pre>generate_tiles\n</pre>\n<p>Generate a specific layer:</p>\n<pre>generate_tiles --layer &lt;a_layer&gt;\n</pre>\n<p>Generate a specific zoom:</p>\n<pre>generate_tiles --zoom 5\n</pre>\n<p>Generate a specific zoom range:</p>\n<pre>generate_tiles --zoom 2-8\n</pre>\n<p>Generate a specific some zoom levels:</p>\n<pre>generate_tiles --zoom 2,4,7\n</pre>\n<p>Generate tiles from an (error) tiles file:</p>\n<pre>generate_tiles --layer &lt;a_layer&gt; --tiles &lt;a_file.tiles&gt;\n</pre>\n<p>Generate tiles on a bbox:</p>\n<pre>generate_tiles --bbox &lt;MINX&gt; &lt;MINY&gt; &lt;MAXX&gt; &lt;MAXY&gt;\n</pre>\n<p>Generate a tiles near a tile coordinate (useful for test):</p>\n<pre>generate_tiles --near &lt;X&gt; &lt;Y&gt;\n</pre>\n<p>Generate a tiles in a different cache than the default one:</p>\n<pre>generate_tiles --cache &lt;a_cache&gt;\n</pre>\n<p>And don\u2019t forget to generate the WMTS Capabilities:</p>\n<pre>generate_controller --capabilities\n</pre>\n</div>\n<div id=\"openlayers-test-page\">\n<h4><a href=\"#id38\" rel=\"nofollow\">OpenLayers test page</a></h4>\n<p>To generate a test page use:</p>\n<pre>generate_controller --openlayers\n</pre>\n</div>\n</div>\n<div id=\"explain-cost\">\n<h3><a href=\"#id39\" rel=\"nofollow\">Explain cost</a></h3>\n<p>Configuration (default values):</p>\n<pre><span class=\"nt\">cost</span><span class=\"p\">:</span>\n    <span class=\"c1\"># [nb/month]</span>\n    <span class=\"nt\">request_per_layers</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">10000000</span>\n    <span class=\"nt\">cloudfront</span><span class=\"p\">:</span>\n        <span class=\"nt\">download</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">0.12,</span>\n        <span class=\"nt\">get</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">0.009</span>\n    <span class=\"nt\">request_per_layers</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">10000000</span>\n    <span class=\"nt\">s3</span><span class=\"p\">:</span>\n        <span class=\"nt\">download</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">0.12,</span>\n        <span class=\"nt\">get</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">0.01,</span>\n        <span class=\"nt\">put</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">0.01,</span>\n        <span class=\"nt\">storage</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">0.125</span>\n    <span class=\"nt\">sqs</span><span class=\"p\">:</span>\n        <span class=\"nt\">request</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">0.01</span>\n</pre>\n<p>Layer configuration (default values):</p>\n<pre><span class=\"nt\">cost</span><span class=\"p\">:</span>\n    <span class=\"nt\">metatile_generation_time</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">30.0,</span>\n    <span class=\"nt\">tile_generation_time</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">30.0,</span>\n    <span class=\"nt\">tile_size</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">20.0,</span>\n    <span class=\"nt\">tileonly_generation_time</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">60.0</span>\n</pre>\n<p>The following commands can be used to know the time and cost to do generation:</p>\n<pre>generate_controller --cost\n</pre>\n<div id=\"useful-options\">\n<h4><a href=\"#id40\" rel=\"nofollow\">Useful options</a></h4>\n<p><tt><span class=\"pre\">--quiet</span></tt> or <tt><span class=\"pre\">-q</span></tt>: used to display only errors.</p>\n<p><tt><span class=\"pre\">--verbose</span></tt> or <tt><span class=\"pre\">-v</span></tt>: used to display info messages.</p>\n<p><tt><span class=\"pre\">--debug</span></tt> or <tt><span class=\"pre\">-d</span></tt>: used to display debug message, pleas use this option to report issue.\nWith the debug mode we don\u2019t catch exceptions, and we don\u2019t log time messages.</p>\n<p><tt><span class=\"pre\">--test</span> &lt;n&gt;</tt> or <tt><span class=\"pre\">-t</span> &lt;n&gt;</tt>: used to generate only <tt>&lt;n&gt;</tt> tiles, useful for test.</p>\n<p>The logging format is configurable in the``config.yaml`` - <tt>generation/log_format</tt>,\n<a href=\"http://docs.python.org/2/library/logging.html#logrecord-attributes\" rel=\"nofollow\">See</a>.</p>\n</div>\n</div>\n<div id=\"important-remarks\">\n<h3><a href=\"#id41\" rel=\"nofollow\">Important remarks</a></h3>\n<p>Especially on S3 the grid name, the layer name, the dimensions, can\u2019t be changed\n(understand if we want to change them we should regenerate all the tiles).</p>\n<p>By default we also can\u2019t insert a zoom level, if you think that you need it we can\nset the grid property <tt>matrix_identifier: resolution</tt>, bit it don\u2019t work with MapCache.</p>\n<p>Please use the <tt><span class=\"pre\">--debug</span></tt> to report issue.</p>\n</div>\n<div id=\"from-sources\">\n<h3><a href=\"#id42\" rel=\"nofollow\">From sources</a></h3>\n<p>Build it:</p>\n<pre>git submodule update --recursive\nvirtualenv --python<span class=\"o\">=</span>python3 .build/venv\n.build/venv/bin/pip install -e .\n.build/venv/bin/pip install -r dev-requirements.txt\n</pre>\n</div>\n<div id=\"run-the-tests\">\n<h3><a href=\"#id43\" rel=\"nofollow\">Run the tests</a></h3>\n<p>Setup your environment:</p>\n<pre>docker build --tag camptocamp/tilecloud-chain:latest .\ndocker-compose -p tilecloud up\n</pre>\n<p>To run the tests:</p>\n<pre>docker-compose -p tilecloud <span class=\"nb\">exec</span> <span class=\"nb\">test</span> python setup.py nosetests --logging-filter<span class=\"o\">=</span>tilecloud,tilecloud_chain --attr <span class=\"s1\">'!'</span>nopy3\n</pre>\n</div>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id44\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"release-1-4\">\n<h3><a href=\"#id45\" rel=\"nofollow\">Release 1.4</a></h3>\n<ol>\n<li>Add optional <tt>metadata</tt> section to the config file. See the scaffolds for example.</li>\n</ol>\n</div>\n<div id=\"release-0-9\">\n<h3><a href=\"#id46\" rel=\"nofollow\">Release 0.9</a></h3>\n<ol>\n<li>Correct some error with slash.</li>\n<li>Better error handling.</li>\n<li>Be able to have one error file per layer.</li>\n</ol>\n</div>\n<div id=\"release-0-8\">\n<h3><a href=\"#id47\" rel=\"nofollow\">Release 0.8</a></h3>\n<ol>\n<li>Correct some error with slash.</li>\n<li>Add <tt>pre_hash_post_process</tt> and <tt>post_process</tt>.</li>\n<li>Add copy command.</li>\n</ol>\n</div>\n<div id=\"release-0-7\">\n<h3><a href=\"#id48\" rel=\"nofollow\">Release 0.7</a></h3>\n<ol>\n<li><p>Support of deferent geoms per layers, requires configuration changes, old version:</p>\n<blockquote>\n<pre><span class=\"nt\">connection</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">user=www-data password=www-data dbname=&lt;db&gt; host=localhost</span>\n<span class=\"nt\">sql</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">&lt;column&gt; AS geom FROM &lt;table&gt;</span>\n</pre>\n<p>to new version:</p>\n<pre><span class=\"nt\">connection</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">user=www-data password=www-data dbname=&lt;db&gt; host=localhost</span>\n<span class=\"nt\">geoms</span><span class=\"p\">:</span>\n<span class=\"p-Indicator\">-</span>   <span class=\"nt\">sql</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">&lt;column&gt; AS geom FROM &lt;table&gt;</span>\n</pre>\n<p>More informations in the <strong>Configure geom/sql</strong> chapter.</p>\n</blockquote>\n</li>\n<li><p>Update from <tt>optparse</tt> to <tt>argparse</tt>, and some argument refactoring, use <tt><span class=\"pre\">--help</span></tt> to see the new version.</p>\n</li>\n<li><p>Add support of Blackbery DB (<tt>bsddb</tt>).</p>\n</li>\n<li><p>The tile <tt>server</tt> is completely rewrite, now it support all cache,\n<tt>REST</tt> and <tt>KVP</tt> interface, <tt>GetFeatureInfo</tt> request,\nand it can be used as a pyramid view or as a <tt>WSGI</tt> server.\nMore informations in the <strong>istribute the tiles</strong> chapter.</p>\n</li>\n<li><p>Add three strategy to bypass the proxy/cache: Use the headers\n<tt><span class=\"pre\">Cache-Control:</span> <span class=\"pre\">no-cache,</span> <span class=\"pre\">no-store</span></tt>, <tt>Pragma: <span class=\"pre\">no-cache</span></tt> (default).\nUse localhost in the URL and the header <tt>Host: &lt;host_name&gt;</tt> (recommended).\nAdd a <tt>SALT</tt> random argument (if the above don\u2019t work).\nMore informations in the <strong>Proxy/cache issue</strong> chapter.</p>\n</li>\n<li><p>Improve the dimensions usage by adding it ti the WMS requests,\nAnd add a <tt><span class=\"pre\">--dimensions</span></tt> argument of <tt>generate_tiles</tt> to change the dimensions values.</p>\n</li>\n<li><p>Extract generate_cost and generate_amazon from generate_controler.</p>\n</li>\n<li><p>Now we can creates legends, see the <strong>Legends</strong> chapter.</p>\n</li>\n<li><p>Now the tiles generation display generation statistics at the ends.</p>\n</li>\n<li><p>The EC2 configuration is moved in a separate structure, see README for more informations.</p>\n</li>\n</ol>\n</div>\n<div id=\"release-0-6\">\n<h3><a href=\"#id49\" rel=\"nofollow\">Release 0.6</a></h3>\n<ol>\n<li>Now the apache configuration can be generated with <tt>.build/venv/bin/generate_controller <span class=\"pre\">--generate-apache-config</span></tt>,\nit support <tt>filesystem</tt> <tt>cache</tt> and <tt>MapCache</tt>.</li>\n<li>Windows fixes.</li>\n<li>Use console rewrite (r) to log generated tiles coordinates.</li>\n<li>Now if no layers is specified in <tt>generation:default_layers</tt> we generate all layers by default.</li>\n<li>Now bbox to be floats.</li>\n<li>New <tt><span class=\"pre\">--get-bbox</span></tt> option to get the bbox of a tile.</li>\n<li>Add coveralls support (<a href=\"https://coveralls.io/r/camptocamp/tilecloud-chain\" rel=\"nofollow\">https://coveralls.io/r/camptocamp/tilecloud-chain</a>).</li>\n<li>Add an config option <tt>generation:error_file</tt> and a command option <tt><span class=\"pre\">--tiles</span></tt>\nto store and regenerate errored tiles.</li>\n</ol>\n</div>\n<div id=\"release-0-5\">\n<h3><a href=\"#id50\" rel=\"nofollow\">Release 0.5</a></h3>\n<ol>\n<li>SQS config change:</li>\n</ol>\n<pre><span class=\"nt\">layers</span><span class=\"p\">:</span>\n    <span class=\"nt\">layer_name</span><span class=\"p\">:</span>\n        <span class=\"nt\">sqs</span><span class=\"p\">:</span>\n            <span class=\"c1\"># The region where the SQS queue is</span>\n            <span class=\"nt\">region</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">eu-west-1</span>\n            <span class=\"c1\"># The SQS queue name, it should already exists</span>\n            <span class=\"nt\">queue</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">the_name</span>\n</pre>\n<ol>\n<li>Add debug option (<tt><span class=\"pre\">--debug</span></tt>), please use it to report issue.</li>\n<li>Now the <tt>sql</tt> request can return a set of geometries in a column names geom\nbut the syntax change a little bit =&gt; <tt>&lt;column&gt; AS geom FROM &lt;table&gt;</tt></li>\n</ol>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6473044, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3eeffbfdef21d3846d198290228ebab6", "sha256": "5dd556cee674f4e885c6758f5d3c78602722b2f78bd320a7b020f0dd0ce90d01"}, "downloads": -1, "filename": "tilecloud-chain-0.1.tar.gz", "has_sig": false, "md5_digest": "3eeffbfdef21d3846d198290228ebab6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72168, "upload_time": "2012-10-22T15:37:55", "upload_time_iso_8601": "2012-10-22T15:37:55.891209Z", "url": "https://files.pythonhosted.org/packages/fe/fa/078f689d85644267e5966633d476b0233cc9f01ae8a44f8051c0d1f19a0e/tilecloud-chain-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "61ac3cda54c4d1a9a10246a9b761a315", "sha256": "fa5ef42dbbe6ee034cc2adbb52f965dd73a05579fdb740f28cd416efccdff485"}, "downloads": -1, "filename": "tilecloud-chain-0.2.tar.gz", "has_sig": false, "md5_digest": "61ac3cda54c4d1a9a10246a9b761a315", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86429, "upload_time": "2013-01-07T10:21:57", "upload_time_iso_8601": "2013-01-07T10:21:57.595654Z", "url": "https://files.pythonhosted.org/packages/1f/39/626a5a4b47de7b6202aaffcf2cf7d1171a2c907677157f1bf02e074443d3/tilecloud-chain-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "91679cd7a6adfe699ed80f8635b99f6d", "sha256": "4fdea2412989a4cbbf146e36ee9ae2eda68af9dee3be21ff99901587c9552b7e"}, "downloads": -1, "filename": "tilecloud-chain-0.3.tar.gz", "has_sig": false, "md5_digest": "91679cd7a6adfe699ed80f8635b99f6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90057, "upload_time": "2013-02-05T08:45:24", "upload_time_iso_8601": "2013-02-05T08:45:24.867325Z", "url": "https://files.pythonhosted.org/packages/a6/50/09ac85359e443f7e6bca424cee0146891f28493a9fcaffdcae9592180b86/tilecloud-chain-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "9f081534b6fc82e1fef49e3c69a78245", "sha256": "543e8269853718ce6b7de90c0665fc576a15d944fc2d75e663d16dee1c8de8fd"}, "downloads": -1, "filename": "tilecloud-chain-0.4.tar.gz", "has_sig": false, "md5_digest": "9f081534b6fc82e1fef49e3c69a78245", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90578, "upload_time": "2013-03-06T08:46:05", "upload_time_iso_8601": "2013-03-06T08:46:05.786869Z", "url": "https://files.pythonhosted.org/packages/93/99/c8140db72895ce929edba2cbd98dfe8d28a80a9491b210e7c3c4f3cda778/tilecloud-chain-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "5ade48e52388ecbfc15e36edc1f04cf4", "sha256": "f446bd61a3d77a57794e78ef699ff5c898ba2e55e7049f6056bf9ea9b159f46a"}, "downloads": -1, "filename": "tilecloud-chain-0.4.1.tar.gz", "has_sig": false, "md5_digest": "5ade48e52388ecbfc15e36edc1f04cf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90602, "upload_time": "2013-03-12T16:24:39", "upload_time_iso_8601": "2013-03-12T16:24:39.312691Z", "url": "https://files.pythonhosted.org/packages/9b/7b/4e0d8d838ba4e99191a38b86402cc58300636ae0e07b9786236fbbb56d15/tilecloud-chain-0.4.1.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "11b1d1829d3b408de1b7c46d13fb9ad6", "sha256": "47e268f0b528f752b1b1d6fd9ad561f80286adb69bd2afc4238f76a68aeaf607"}, "downloads": -1, "filename": "tilecloud-chain-0.5.tar.gz", "has_sig": false, "md5_digest": "11b1d1829d3b408de1b7c46d13fb9ad6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 198517, "upload_time": "2013-04-11T06:29:37", "upload_time_iso_8601": "2013-04-11T06:29:37.594311Z", "url": "https://files.pythonhosted.org/packages/52/9a/4eb7b515c9ae55547e00b483a8c4acbec1cc7867d54ce2146e02be89f8ae/tilecloud-chain-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "7b16432d4392be5d9055615c997dba51", "sha256": "d88d0ec26c105f57407b1eb945247777b655da0abb360e35a682561c729c3e1c"}, "downloads": -1, "filename": "tilecloud-chain-0.6.tar.gz", "has_sig": false, "md5_digest": "7b16432d4392be5d9055615c997dba51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54275, "upload_time": "2013-07-28T12:23:03", "upload_time_iso_8601": "2013-07-28T12:23:03.862992Z", "url": "https://files.pythonhosted.org/packages/60/6c/e98abd35eb7ce0b05ff99dbf6e9837174e2e96b353ea322e3e3af7a94ef2/tilecloud-chain-0.6.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "303067f2a3322a31581c8f5066001f6c", "sha256": "f41dda6001d19c5e0ae14b722199e8a1fef60e9f68ddbacd9c7f6fd95fe35550"}, "downloads": -1, "filename": "tilecloud-chain-0.7.0.tar.gz", "has_sig": false, "md5_digest": "303067f2a3322a31581c8f5066001f6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 128192, "upload_time": "2013-10-29T18:18:01", "upload_time_iso_8601": "2013-10-29T18:18:01.767054Z", "url": "https://files.pythonhosted.org/packages/29/67/872809e73480304c66b9dfdbd0f12cfcf0de1707f1f458c0bc70a6a8ff42/tilecloud-chain-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "b2b3d0065562ff637925d4c952e17f54", "sha256": "35e427c7ab957a24f92e06e14c9dd2d1e8cbf28d2e5c2b7160c35516b904755b"}, "downloads": -1, "filename": "tilecloud-chain-0.7.1.tar.gz", "has_sig": false, "md5_digest": "b2b3d0065562ff637925d4c952e17f54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 128410, "upload_time": "2013-12-11T17:13:16", "upload_time_iso_8601": "2013-12-11T17:13:16.593375Z", "url": "https://files.pythonhosted.org/packages/2b/55/3919b0093cdf73fc4740f6c33a19e313e4199c41d5a38d69e3e385412f54/tilecloud-chain-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "f7484472c640c17e53a9a0716116c66e", "sha256": "1557b10a76c9abe4049c48208545faf73518eb7f852c0c779587fde9b90db275"}, "downloads": -1, "filename": "tilecloud-chain-0.7.2.tar.gz", "has_sig": false, "md5_digest": "f7484472c640c17e53a9a0716116c66e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 133394, "upload_time": "2014-05-09T11:22:42", "upload_time_iso_8601": "2014-05-09T11:22:42.347409Z", "url": "https://files.pythonhosted.org/packages/17/cb/b69772f6cc62c6db36f443da21c25f0be97987bd7e2210ed2f6f553dd73e/tilecloud-chain-0.7.2.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "ab56b5900fe4b58f218d3270ca0aa5b2", "sha256": "69c5e47f53bb86e48fbd4b3005b38f19d9f03233300dea1951aec9152921f307"}, "downloads": -1, "filename": "tilecloud-chain-0.8.0.tar.gz", "has_sig": false, "md5_digest": "ab56b5900fe4b58f218d3270ca0aa5b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138524, "upload_time": "2014-07-02T15:49:08", "upload_time_iso_8601": "2014-07-02T15:49:08.900018Z", "url": "https://files.pythonhosted.org/packages/23/25/22ad9925778f24116cb3de49df815745c2fe7c4287b7261c1e5d854f4067/tilecloud-chain-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "db5ecef63bd9eed793e797ef5ae2b30f", "sha256": "bc9bd2899c85ad20e99146859e3048860448e65c611718611c63e3070948f571"}, "downloads": -1, "filename": "tilecloud-chain-0.8.1.tar.gz", "has_sig": false, "md5_digest": "db5ecef63bd9eed793e797ef5ae2b30f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138575, "upload_time": "2014-07-03T06:58:00", "upload_time_iso_8601": "2014-07-03T06:58:00.030485Z", "url": "https://files.pythonhosted.org/packages/91/46/0464d7275271ad85869e5f360d971e0a2c2efd42f8293d2c29526263bc8b/tilecloud-chain-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "90b2453d0bfb7b8c331f53920493e1de", "sha256": "b3e261016d2b059df7ad95fa085b293bf3ed49edc5b591b243536074e3590229"}, "downloads": -1, "filename": "tilecloud-chain-0.8.2.tar.gz", "has_sig": false, "md5_digest": "90b2453d0bfb7b8c331f53920493e1de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138555, "upload_time": "2014-07-03T08:34:21", "upload_time_iso_8601": "2014-07-03T08:34:21.570549Z", "url": "https://files.pythonhosted.org/packages/40/c1/e8eaec904b69f2f779b138528802f48ad5d98e437fe25a0e2f79edc0e2c7/tilecloud-chain-0.8.2.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "7bdf8bfe3d19d51e7219af78f53e7e76", "sha256": "a9db58c599a3a3b8dcd51ed2951eafd22ee60511d397474cae2558d217e7563b"}, "downloads": -1, "filename": "tilecloud-chain-0.9.0.tar.gz", "has_sig": false, "md5_digest": "7bdf8bfe3d19d51e7219af78f53e7e76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 139633, "upload_time": "2014-08-19T08:15:31", "upload_time_iso_8601": "2014-08-19T08:15:31.414819Z", "url": "https://files.pythonhosted.org/packages/95/59/86348bf9e03945bf4a42dd57619971fb0735fa76b9fb7cd15a6de3fcb407/tilecloud-chain-0.9.0.tar.gz", "yanked": false}], "0.9.0dev-20141105": [], "0.9.0dev1": [{"comment_text": "", "digests": {"md5": "58330be7da4b28b296695f6b7a172b63", "sha256": "473b8ac015a75132e97066ad0c6da6a9b04655e7e50ac7ec79b84468730f6f98"}, "downloads": -1, "filename": "tilecloud-chain-0.9.0dev1.tar.gz", "has_sig": false, "md5_digest": "58330be7da4b28b296695f6b7a172b63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138600, "upload_time": "2014-07-03T07:59:35", "upload_time_iso_8601": "2014-07-03T07:59:35.915857Z", "url": "https://files.pythonhosted.org/packages/c2/c8/254d7687d8c95b236b0a9b7303c9feab3d5ca49f6a6f90aaab966f2afc8f/tilecloud-chain-0.9.0dev1.tar.gz", "yanked": false}], "0.9.0dev2": [{"comment_text": "", "digests": {"md5": "ef04626077b89ce3591a23a7b7165213", "sha256": "30f6a3518cad324dab7a22a11098290a2f4923a774b2acd6436ef7f85f0ff2f0"}, "downloads": -1, "filename": "tilecloud-chain-0.9.0dev2.tar.gz", "has_sig": false, "md5_digest": "ef04626077b89ce3591a23a7b7165213", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138566, "upload_time": "2014-07-03T08:20:19", "upload_time_iso_8601": "2014-07-03T08:20:19.061553Z", "url": "https://files.pythonhosted.org/packages/18/71/831a4bee0a5bfd2163f42874eee802a64f6bc0f0cca30878a0831910677b/tilecloud-chain-0.9.0dev2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "aa49aee27e59e0c05c1b52af293a63c6", "sha256": "03ff84ecc31b70a09f98970791181d29555b995e87c4753ec500f64d23293995"}, "downloads": -1, "filename": "tilecloud_chain-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "aa49aee27e59e0c05c1b52af293a63c6", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 123965, "upload_time": "2015-11-12T08:48:15", "upload_time_iso_8601": "2015-11-12T08:48:15.897572Z", "url": "https://files.pythonhosted.org/packages/a5/86/a13b349101374cb5641c0e52336aee5b1e0ace351f16543f3f79bf188fde/tilecloud_chain-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "835bbeb3b3eb1c022ce4e7bfeb74ffa9", "sha256": "4ee1f58db1d2bc7e2b83d663c6d322848c187682a050c9fbae51f90eed0d7754"}, "downloads": -1, "filename": "tilecloud-chain-1.0.0.tar.gz", "has_sig": false, "md5_digest": "835bbeb3b3eb1c022ce4e7bfeb74ffa9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 120189, "upload_time": "2015-11-12T08:48:09", "upload_time_iso_8601": "2015-11-12T08:48:09.600811Z", "url": "https://files.pythonhosted.org/packages/ba/69/54b17b587fbf75b122f33bf6aa79f4be3ae093bc35127391b975452ec620/tilecloud-chain-1.0.0.tar.gz", "yanked": false}], "1.0.0dev1": [{"comment_text": "", "digests": {"md5": "5931889af8fcac958918f7adcf098f75", "sha256": "b8a2c799986df22ad6268feec111cf08e670241803eab0d1753dd1507c380116"}, "downloads": -1, "filename": "tilecloud-chain-1.0.0dev1.tar.gz", "has_sig": false, "md5_digest": "5931889af8fcac958918f7adcf098f75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140446, "upload_time": "2014-12-16T17:38:25", "upload_time_iso_8601": "2014-12-16T17:38:25.471583Z", "url": "https://files.pythonhosted.org/packages/90/82/b5b46459b9d53a9fd8c3cbf812935bb574cb0b1f638a1afaca02a127df33/tilecloud-chain-1.0.0dev1.tar.gz", "yanked": false}], "1.0.0dev2": [{"comment_text": "", "digests": {"md5": "2dc16f9733b4ccfd2f3c8d8608fc0864", "sha256": "c4aedb5940c5dd24d6d3cded7a1b3272f99fcdf8033a4c747a60cc17d275e33f"}, "downloads": -1, "filename": "tilecloud-chain-1.0.0dev2.tar.gz", "has_sig": false, "md5_digest": "2dc16f9733b4ccfd2f3c8d8608fc0864", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140466, "upload_time": "2015-04-10T11:44:30", "upload_time_iso_8601": "2015-04-10T11:44:30.745095Z", "url": "https://files.pythonhosted.org/packages/d8/ea/45c51a1d628faf926cb3b11d3fea83d4091899ff26d6c37f72c1d651d2eb/tilecloud-chain-1.0.0dev2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "779a4f5e75827b9d05dc01abf5e95179", "sha256": "265165dea2a023bf6c622835051e15ca9fdacae8fc03d0ae51433d065e0e0cab"}, "downloads": -1, "filename": "tilecloud_chain-1.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "779a4f5e75827b9d05dc01abf5e95179", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 476611, "upload_time": "2016-03-23T16:05:59", "upload_time_iso_8601": "2016-03-23T16:05:59.171102Z", "url": "https://files.pythonhosted.org/packages/5d/8b/1007a69b589fe11a9b3b54ae5af0860c51f03c644529141e2ddaa96087a0/tilecloud_chain-1.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "051145694e4a4a0fd5f76e28db8e22e0", "sha256": "e31c98087ae96b3d9c15582f41897c922a3265d9f5861fb002393ebf381a522b"}, "downloads": -1, "filename": "tilecloud-chain-1.1.0.tar.gz", "has_sig": false, "md5_digest": "051145694e4a4a0fd5f76e28db8e22e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119699, "upload_time": "2016-03-23T16:05:48", "upload_time_iso_8601": "2016-03-23T16:05:48.935223Z", "url": "https://files.pythonhosted.org/packages/3c/85/defea5d4efa7c269c214cc73a3efb5bbb642d25a4c4d339f85aba2974605/tilecloud-chain-1.1.0.tar.gz", "yanked": false}], "1.1.0.dev20160323": [{"comment_text": "", "digests": {"md5": "18987dbba2a8e4114019df6d582bfe92", "sha256": "39f9b16101e6af1ce9d0126bc880001d371dab199ae8c5ca31fd0991b7f3aa7a"}, "downloads": -1, "filename": "tilecloud-chain-1.1.0.dev20160323.tar.gz", "has_sig": false, "md5_digest": "18987dbba2a8e4114019df6d582bfe92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119800, "upload_time": "2016-03-23T16:04:23", "upload_time_iso_8601": "2016-03-23T16:04:23.363773Z", "url": "https://files.pythonhosted.org/packages/a2/63/24e91f71d9301098ba8e92d776e4591f82c5c508061193107f9314bc32ca/tilecloud-chain-1.1.0.dev20160323.tar.gz", "yanked": false}], "1.10.0": [{"comment_text": "", "digests": {"md5": "2cc63d2c0ac9afbafacacd96249f1e29", "sha256": "c02929f139bb67a1926b040f7cb9879fa06b63ffb5fdb62846ea4ada1cced73b"}, "downloads": -1, "filename": "tilecloud_chain-1.10.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2cc63d2c0ac9afbafacacd96249f1e29", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 63689, "upload_time": "2019-03-18T09:33:14", "upload_time_iso_8601": "2019-03-18T09:33:14.032908Z", "url": "https://files.pythonhosted.org/packages/7d/fd/e807a5f28805eab6aea625a4872a4896e58a9bcdf3a1f84e2a4d281ba820/tilecloud_chain-1.10.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1a41dc5042fa5a5a12f7cccfee7ca41", "sha256": "eaf827a110d3182a956359366ffb792e30b0af6aeeee5d15f0b830193418c93f"}, "downloads": -1, "filename": "tilecloud-chain-1.10.0.tar.gz", "has_sig": false, "md5_digest": "f1a41dc5042fa5a5a12f7cccfee7ca41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73756, "upload_time": "2019-03-18T09:33:15", "upload_time_iso_8601": "2019-03-18T09:33:15.811800Z", "url": "https://files.pythonhosted.org/packages/25/78/22e526d45bd0ea8a6b3b9f1218cb4943c6df7f68327c4315da4bee3299c6/tilecloud-chain-1.10.0.tar.gz", "yanked": false}], "1.10.1": [{"comment_text": "", "digests": {"md5": "228c05b9e382ca1eee1f94ba6e67087c", "sha256": "4672cdb56edf31567176ce6adabd255cf2ae351278c9c424e2bd9d082263500a"}, "downloads": -1, "filename": "tilecloud_chain-1.10.1-py3-none-any.whl", "has_sig": false, "md5_digest": "228c05b9e382ca1eee1f94ba6e67087c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 63681, "upload_time": "2019-03-21T12:50:22", "upload_time_iso_8601": "2019-03-21T12:50:22.938772Z", "url": "https://files.pythonhosted.org/packages/08/a1/2e2915e174872802a93988469e4731ebba7c50dac1dcb1666adc2bfc967f/tilecloud_chain-1.10.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c86d61a320bb6e0e589a219114130d1", "sha256": "598d37ea4c5f10f3629fc2e7c70b1918399c01290c0ae6a4a1fc7b012215c81f"}, "downloads": -1, "filename": "tilecloud-chain-1.10.1.tar.gz", "has_sig": false, "md5_digest": "7c86d61a320bb6e0e589a219114130d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73757, "upload_time": "2019-03-21T12:50:24", "upload_time_iso_8601": "2019-03-21T12:50:24.580843Z", "url": "https://files.pythonhosted.org/packages/2b/30/b60722cca47482913fd1b04f5fdaabda82961cf252c9b4032195d44be4aa/tilecloud-chain-1.10.1.tar.gz", "yanked": false}], "1.11.0": [{"comment_text": "", "digests": {"md5": "bb09ae6a8d1ca55bfc8c5597f334d395", "sha256": "d0af2a7d8471ed2f7f6f777c9391166b89ef40a37c1022efae271be6212bed2e"}, "downloads": -1, "filename": "tilecloud_chain-1.11.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bb09ae6a8d1ca55bfc8c5597f334d395", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 63518, "upload_time": "2019-04-17T12:27:45", "upload_time_iso_8601": "2019-04-17T12:27:45.858785Z", "url": "https://files.pythonhosted.org/packages/45/82/926b5a4af92b49e8791290d5a96a83e01b2f63f074d05aa4c48af96ea7f7/tilecloud_chain-1.11.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06331fa8803751ade2ca84655d84e1d3", "sha256": "337b4b0d7cbcb975e70ae6c6a53e60e270d241bc2212922575468a28ddb3f141"}, "downloads": -1, "filename": "tilecloud-chain-1.11.0.tar.gz", "has_sig": false, "md5_digest": "06331fa8803751ade2ca84655d84e1d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75715, "upload_time": "2019-04-17T12:27:48", "upload_time_iso_8601": "2019-04-17T12:27:48.466957Z", "url": "https://files.pythonhosted.org/packages/56/ae/991bd8b3e04c3251486aeb34b395c248a41433653fab7b1145a90d74d33c/tilecloud-chain-1.11.0.tar.gz", "yanked": false}], "1.11.1": [{"comment_text": "", "digests": {"md5": "7965d28fff2da6d30cb9eef82627b0b1", "sha256": "022c1ba07e93658c8ba041f84fb1dc90a4540173c1ad2d70e7783e7aecbc338e"}, "downloads": -1, "filename": "tilecloud_chain-1.11.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7965d28fff2da6d30cb9eef82627b0b1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 63509, "upload_time": "2019-04-17T14:57:49", "upload_time_iso_8601": "2019-04-17T14:57:49.643890Z", "url": "https://files.pythonhosted.org/packages/98/86/bffd6519aed46750a35dcfbc74e412f7b60176808cc42aadeab90d6363e7/tilecloud_chain-1.11.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58ca420fc1beb55b3304aed2110acab5", "sha256": "82ffc73ceb670955d00dd645c8c4778b2ca1aaa5e0206f418b79dd62c215259d"}, "downloads": -1, "filename": "tilecloud-chain-1.11.1.tar.gz", "has_sig": false, "md5_digest": "58ca420fc1beb55b3304aed2110acab5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75712, "upload_time": "2019-04-17T14:57:51", "upload_time_iso_8601": "2019-04-17T14:57:51.202645Z", "url": "https://files.pythonhosted.org/packages/21/6b/7e01252b848608803a6793413bab3e0ec85ca791fc5254b7e3e9deef170b/tilecloud-chain-1.11.1.tar.gz", "yanked": false}], "1.11.2": [{"comment_text": "", "digests": {"md5": "12558a7708538eec6a17459ee3d91902", "sha256": "5914a60d5fb096822ed977a36eb017a7381bad3ccd0b24533e3a5697bccf130e"}, "downloads": -1, "filename": "tilecloud_chain-1.11.2-py3-none-any.whl", "has_sig": false, "md5_digest": "12558a7708538eec6a17459ee3d91902", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 63488, "upload_time": "2019-05-16T09:51:30", "upload_time_iso_8601": "2019-05-16T09:51:30.461535Z", "url": "https://files.pythonhosted.org/packages/ec/b9/8eaa0e802001383525888b412bff0c6f59bccf0efe08cbdf04786a20e810/tilecloud_chain-1.11.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8285ff06d77857944bb8781d87878510", "sha256": "38d41b31fd3c89274756bfd54b3b6f791c8ec0ed3d02f3f2c6eeaef59e74d11f"}, "downloads": -1, "filename": "tilecloud-chain-1.11.2.tar.gz", "has_sig": false, "md5_digest": "8285ff06d77857944bb8781d87878510", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75634, "upload_time": "2019-05-16T09:51:33", "upload_time_iso_8601": "2019-05-16T09:51:33.053994Z", "url": "https://files.pythonhosted.org/packages/5d/ab/04667d0e1ee106e38fb4be33aa77c017a34b0f20089873b4f916204b765a/tilecloud-chain-1.11.2.tar.gz", "yanked": false}], "1.12.0": [{"comment_text": "", "digests": {"md5": "6f01512bfb2e87a75f678e576dcd1af7", "sha256": "1fdc9755669f1b69d34a10d065cf532b120537347f838a78a37d695c65694863"}, "downloads": -1, "filename": "tilecloud_chain-1.12.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6f01512bfb2e87a75f678e576dcd1af7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76414, "upload_time": "2019-06-12T15:55:25", "upload_time_iso_8601": "2019-06-12T15:55:25.035282Z", "url": "https://files.pythonhosted.org/packages/5a/8c/74977555eb9116704fd122d2ffca2a9518541a206f348c5359ca2d37a4ee/tilecloud_chain-1.12.0-py3-none-any.whl", "yanked": false}], "1.12.1": [{"comment_text": "", "digests": {"md5": "bedc59b10fca52b150924fe8fb085e79", "sha256": "4874060ef0428449d7b8bea2e2ad4f09c87a22ecf24a5554ed81bb15186414bb"}, "downloads": -1, "filename": "tilecloud_chain-1.12.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bedc59b10fca52b150924fe8fb085e79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76421, "upload_time": "2019-06-19T11:25:55", "upload_time_iso_8601": "2019-06-19T11:25:55.542101Z", "url": "https://files.pythonhosted.org/packages/17/1a/be066c7509f58d9ed590648504d4a34a0b44896638742d2cc75728af0960/tilecloud_chain-1.12.1-py3-none-any.whl", "yanked": false}], "1.12.2": [{"comment_text": "", "digests": {"md5": "35f93b1776290e3259b3353d9167f9a8", "sha256": "87cddd0e445cdfe2fa9ecdd79022827f9ff96ea74384985ef61184c0e11e9b0b"}, "downloads": -1, "filename": "tilecloud_chain-1.12.2-py3-none-any.whl", "has_sig": false, "md5_digest": "35f93b1776290e3259b3353d9167f9a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76421, "upload_time": "2019-06-28T12:24:41", "upload_time_iso_8601": "2019-06-28T12:24:41.328358Z", "url": "https://files.pythonhosted.org/packages/3c/01/9fd8e7813871f7ef75aee0dd80fa48d93d6b57f81283d1fb3dbbe8c9b89b/tilecloud_chain-1.12.2-py3-none-any.whl", "yanked": false}], "1.12.3": [{"comment_text": "", "digests": {"md5": "5319dea50307a8e1d8573d2300392481", "sha256": "3cc516894460dc3d12e630c1559c7f975378d6f86a4999a6016796e351101c12"}, "downloads": -1, "filename": "tilecloud_chain-1.12.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5319dea50307a8e1d8573d2300392481", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76451, "upload_time": "2019-07-03T09:07:36", "upload_time_iso_8601": "2019-07-03T09:07:36.227105Z", "url": "https://files.pythonhosted.org/packages/4e/e1/861395e621a8f4f124f5b08354df8601c7b3256e6d086001cce13bb5d840/tilecloud_chain-1.12.3-py3-none-any.whl", "yanked": false}], "1.13.0": [{"comment_text": "", "digests": {"md5": "1e72ff1f3812d660629bed46fd29f669", "sha256": "93dd1bcd6e6df06f93e5bae098dfe05b89e29564086b573440da24c663851bad"}, "downloads": -1, "filename": "tilecloud_chain-1.13.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1e72ff1f3812d660629bed46fd29f669", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76415, "upload_time": "2019-09-03T07:02:43", "upload_time_iso_8601": "2019-09-03T07:02:43.454341Z", "url": "https://files.pythonhosted.org/packages/39/d1/2c212777a34cbfb7b5a06ac163a7a5408cdf1e240660979c167a2e9d342c/tilecloud_chain-1.13.0-py3-none-any.whl", "yanked": false}], "1.13.1": [{"comment_text": "", "digests": {"md5": "87edd083a889072366cd543d24119b20", "sha256": "6394a93270ae0ed7683fd2487ec880a0ca01fb2dc732db9238ec638e25a41997"}, "downloads": -1, "filename": "tilecloud_chain-1.13.1-py3-none-any.whl", "has_sig": false, "md5_digest": "87edd083a889072366cd543d24119b20", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76416, "upload_time": "2019-09-03T12:58:33", "upload_time_iso_8601": "2019-09-03T12:58:33.561729Z", "url": "https://files.pythonhosted.org/packages/ba/4f/1d6185ec77af4b267098cdc9da7026684126e85ef34bbb68400ef8ae0995/tilecloud_chain-1.13.1-py3-none-any.whl", "yanked": false}], "1.13.2": [{"comment_text": "", "digests": {"md5": "67abbeab0db713571198a374c2096e1a", "sha256": "a4c76b9ead58cd0d4bd53ab21019f9094e2c5bf2a589ddf25d190da92e7ee264"}, "downloads": -1, "filename": "tilecloud_chain-1.13.2-py3-none-any.whl", "has_sig": false, "md5_digest": "67abbeab0db713571198a374c2096e1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76455, "upload_time": "2019-10-28T08:48:20", "upload_time_iso_8601": "2019-10-28T08:48:20.883788Z", "url": "https://files.pythonhosted.org/packages/9c/5a/28214f88e2d4d5706663632c50f7c56dff96626337be5612705b196a9826/tilecloud_chain-1.13.2-py3-none-any.whl", "yanked": false}], "1.13.3": [{"comment_text": "", "digests": {"md5": "502e2468677782e8ae56f4c42719fbf6", "sha256": "3816b5c3e362c1b668ccf42d04a9f353606b9b95921bcc2e0fddeeeb0099bbda"}, "downloads": -1, "filename": "tilecloud_chain-1.13.3-py3-none-any.whl", "has_sig": false, "md5_digest": "502e2468677782e8ae56f4c42719fbf6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76500, "upload_time": "2019-10-28T15:26:33", "upload_time_iso_8601": "2019-10-28T15:26:33.889437Z", "url": "https://files.pythonhosted.org/packages/73/67/5337d965083e3c46e53fcf1d4bda620eb9c1721107cd3dbfd413a17e625c/tilecloud_chain-1.13.3-py3-none-any.whl", "yanked": false}], "1.13.4": [{"comment_text": "", "digests": {"md5": "9e1c3af6fa52336f0f2d6b2b21247a35", "sha256": "0b596cc276ff3467b5e90bf38d03135afc3cd95219f48b5cb31af3d7cf83a5d3"}, "downloads": -1, "filename": "tilecloud_chain-1.13.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9e1c3af6fa52336f0f2d6b2b21247a35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76461, "upload_time": "2019-11-06T16:33:31", "upload_time_iso_8601": "2019-11-06T16:33:31.928361Z", "url": "https://files.pythonhosted.org/packages/cf/59/a49f9312e04576eed24ca94c6c15184b4be4ea9a08463644b9c3507efe10/tilecloud_chain-1.13.4-py3-none-any.whl", "yanked": false}], "1.13.5": [{"comment_text": "", "digests": {"md5": "8ef2c4442a599dc82a3b36f53e3d9b99", "sha256": "43c9b55c7b6a2c76ba2cfd93b4fda4292c8f5018adcb9585964d8934ff95b878"}, "downloads": -1, "filename": "tilecloud_chain-1.13.5-py3-none-any.whl", "has_sig": false, "md5_digest": "8ef2c4442a599dc82a3b36f53e3d9b99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76460, "upload_time": "2019-11-06T16:55:04", "upload_time_iso_8601": "2019-11-06T16:55:04.696676Z", "url": "https://files.pythonhosted.org/packages/e1/65/e0d11e7f6ef5db7ebf31833e86794573b33738157618ac5ad11f71a5c9f5/tilecloud_chain-1.13.5-py3-none-any.whl", "yanked": false}], "1.13.6": [{"comment_text": "", "digests": {"md5": "288f285a3af380876c1a5178ada21986", "sha256": "10f38572eaf9f6dd50cd8b9a1cce8e01716b2c36303af12871d681838abadea8"}, "downloads": -1, "filename": "tilecloud_chain-1.13.6-py3-none-any.whl", "has_sig": false, "md5_digest": "288f285a3af380876c1a5178ada21986", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76457, "upload_time": "2019-11-06T17:12:42", "upload_time_iso_8601": "2019-11-06T17:12:42.713064Z", "url": "https://files.pythonhosted.org/packages/c8/34/7c7e04a66987ecf91b6ab50e300ec14cee221ac112450a295d281657df18/tilecloud_chain-1.13.6-py3-none-any.whl", "yanked": false}], "1.13.7": [{"comment_text": "", "digests": {"md5": "1a858b7f4c47406123472c063322182f", "sha256": "c6c1f2bf9343bbf3a9feeb54551869b763e1e922bacadb5e291ba17d3b9a472b"}, "downloads": -1, "filename": "tilecloud_chain-1.13.7-py3-none-any.whl", "has_sig": false, "md5_digest": "1a858b7f4c47406123472c063322182f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76464, "upload_time": "2019-11-07T08:25:24", "upload_time_iso_8601": "2019-11-07T08:25:24.886189Z", "url": "https://files.pythonhosted.org/packages/e9/f5/d4fb2a0ca2b2352a681af45752e0a136efaee80f95ec17fcacec0e76494a/tilecloud_chain-1.13.7-py3-none-any.whl", "yanked": false}], "1.13.8": [{"comment_text": "", "digests": {"md5": "5722ae828c53ca645218762a449c60b6", "sha256": "80ed9151d1f15483e4e2311b219ae610429f8c48e17d8633d0127fb09f1669ce"}, "downloads": -1, "filename": "tilecloud_chain-1.13.8-py3-none-any.whl", "has_sig": false, "md5_digest": "5722ae828c53ca645218762a449c60b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76469, "upload_time": "2019-11-08T08:46:52", "upload_time_iso_8601": "2019-11-08T08:46:52.362785Z", "url": "https://files.pythonhosted.org/packages/57/76/0a1c4549c0f107254fa7e163f9f81a144fdec1c0b5dc9da693e0e4922348/tilecloud_chain-1.13.8-py3-none-any.whl", "yanked": false}], "1.13.9": [{"comment_text": "", "digests": {"md5": "e7070e980eee13655d981fe3abebb850", "sha256": "f3a259ab8d4f3a2b819b25135575122fb2694a01af7744a0622a0b67bcd74bc1"}, "downloads": -1, "filename": "tilecloud_chain-1.13.9-py3-none-any.whl", "has_sig": false, "md5_digest": "e7070e980eee13655d981fe3abebb850", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76547, "upload_time": "2019-11-28T13:34:12", "upload_time_iso_8601": "2019-11-28T13:34:12.144620Z", "url": "https://files.pythonhosted.org/packages/8f/23/61f46658770f3b77bcb083160e929680bf6089d85ddd61ac916f70ef24dc/tilecloud_chain-1.13.9-py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "3816beeb8efd4bcc83e1e0342e404c1c", "sha256": "08a299c0ed3b9dc54144aadf67497a1026f15369b4a9106df87c6c6a776190e1"}, "downloads": -1, "filename": "tilecloud_chain-1.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "3816beeb8efd4bcc83e1e0342e404c1c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 69232, "upload_time": "2016-07-29T12:36:55", "upload_time_iso_8601": "2016-07-29T12:36:55.648396Z", "url": "https://files.pythonhosted.org/packages/6c/37/bc6bf2f2133a1b9fbb71b5fb0b131538738d1a0cc251c26bc18a72c1a4a0/tilecloud_chain-1.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea26b23d642507ca439574a3c828ce0a", "sha256": "c958a940b1ec69cc5f11eb10b14ec1516b2c7e7efb700bc426ba5f9e819e9c51"}, "downloads": -1, "filename": "tilecloud-chain-1.2.0.tar.gz", "has_sig": false, "md5_digest": "ea26b23d642507ca439574a3c828ce0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67436, "upload_time": "2016-07-29T12:36:58", "upload_time_iso_8601": "2016-07-29T12:36:58.412821Z", "url": "https://files.pythonhosted.org/packages/b2/38/1508097807522c1cecfb56dcac51f2abe3928b3c7ccfb22c15b49676a0af/tilecloud-chain-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "17cc9c32a2fcf524897af09e5d111463", "sha256": "f02ec41b5487a36ca0224b5cc6f1a0c155eea4e2b2829ce92d96ec171e2b01b7"}, "downloads": -1, "filename": "tilecloud_chain-1.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "17cc9c32a2fcf524897af09e5d111463", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 69227, "upload_time": "2016-09-28T13:28:05", "upload_time_iso_8601": "2016-09-28T13:28:05.676850Z", "url": "https://files.pythonhosted.org/packages/05/33/db00645a6438ad7fd93291a0813baaf32729d571c1c8a3f98ae45b8cfc2c/tilecloud_chain-1.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93ee18f82b6349d8c432ac685ff4feb5", "sha256": "2d0d307cccd0dfa8020b62e76f726bdf8378e152ee962c1401cf777c2afdcd27"}, "downloads": -1, "filename": "tilecloud-chain-1.2.1.tar.gz", "has_sig": false, "md5_digest": "93ee18f82b6349d8c432ac685ff4feb5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67896, "upload_time": "2016-09-28T13:28:08", "upload_time_iso_8601": "2016-09-28T13:28:08.087197Z", "url": "https://files.pythonhosted.org/packages/02/a9/751e647f52304728ee558e61739318912038334d9b90d9ba310872f86f62/tilecloud-chain-1.2.1.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "e8601ac5a8a12eda246308cdbdba303f", "sha256": "4a6625f290d0f483daaf89bde88fae71308fb545d83b1c41d5cb5192b3d988cb"}, "downloads": -1, "filename": "tilecloud_chain-1.3.0-py2-none-any.whl", "has_sig": false, "md5_digest": "e8601ac5a8a12eda246308cdbdba303f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 64610, "upload_time": "2017-03-07T17:00:16", "upload_time_iso_8601": "2017-03-07T17:00:16.327258Z", "url": "https://files.pythonhosted.org/packages/8e/2d/0ddf26a215aa2eaa189a9ff2195c11a45c3da14d9a031dc4187d1e4f83ad/tilecloud_chain-1.3.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2e4287f8bbe11d7e09eb7d8db715107", "sha256": "d79bed1335fdff93ea69885a4eb462bd946c3bdd9b6cd1bce587d89db51f9c18"}, "downloads": -1, "filename": "tilecloud-chain-1.3.0.tar.gz", "has_sig": false, "md5_digest": "e2e4287f8bbe11d7e09eb7d8db715107", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65951, "upload_time": "2017-03-07T17:00:18", "upload_time_iso_8601": "2017-03-07T17:00:18.857799Z", "url": "https://files.pythonhosted.org/packages/e9/6b/fe9dda1726c5ecc8ebab21e63188358ffb0d30032c0f25a4bb809b65b6c8/tilecloud-chain-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "67e35fcf8eae52b7cde34c92aaced3a8", "sha256": "e0d984cb571c02cfc3f6493df6ea9bd302e956987fda062704a70cc03b8d58f8"}, "downloads": -1, "filename": "tilecloud_chain-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "67e35fcf8eae52b7cde34c92aaced3a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 71674, "upload_time": "2018-02-21T07:51:44", "upload_time_iso_8601": "2018-02-21T07:51:44.988894Z", "url": "https://files.pythonhosted.org/packages/c4/79/1336e70590872098f7474ed65e405382a9092509f644edf391167ee2aa41/tilecloud_chain-1.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ed2f8705166bda58e0559749c7625d0", "sha256": "1e30c47bf89f3dafb2345a20b9f496f6c83a3a828a7ec63193ff2656ee37f9f9"}, "downloads": -1, "filename": "tilecloud-chain-1.4.0.tar.gz", "has_sig": false, "md5_digest": "4ed2f8705166bda58e0559749c7625d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71784, "upload_time": "2018-02-21T07:52:09", "upload_time_iso_8601": "2018-02-21T07:52:09.156096Z", "url": "https://files.pythonhosted.org/packages/86/89/12195d5b819a4716973cd9624da551646b90663bbf056fe3401a7d50706f/tilecloud-chain-1.4.0.tar.gz", "yanked": false}], "1.4.0.dev1": [{"comment_text": "", "digests": {"md5": "603c16d04c9be1a3cfac114a0f5ce15b", "sha256": "199f1a8d19d89add6b684146342ba06e8d6d98e33ef560ccfb25f2ed335933ee"}, "downloads": -1, "filename": "tilecloud_chain-1.4.0.dev1-py2-none-any.whl", "has_sig": false, "md5_digest": "603c16d04c9be1a3cfac114a0f5ce15b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 66749, "upload_time": "2017-05-15T10:00:32", "upload_time_iso_8601": "2017-05-15T10:00:32.766969Z", "url": "https://files.pythonhosted.org/packages/5f/52/d46929ee0adf33c0a937aa7837d13762e8e149762339f7a30c44a5e6ebed/tilecloud_chain-1.4.0.dev1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98b5685f7a1ce08321f93a95dbc1318b", "sha256": "fced2a59cadd1fef8272b7d46549d25afd9e8cf19a4c5128a1b0c371d11a8382"}, "downloads": -1, "filename": "tilecloud-chain-1.4.0.dev1.tar.gz", "has_sig": false, "md5_digest": "98b5685f7a1ce08321f93a95dbc1318b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67957, "upload_time": "2017-05-15T10:00:34", "upload_time_iso_8601": "2017-05-15T10:00:34.602672Z", "url": "https://files.pythonhosted.org/packages/50/34/58528213dbde0d519aa22ad6d9cdde4f7dac737fda7135cdd9b8bf70e815/tilecloud-chain-1.4.0.dev1.tar.gz", "yanked": false}], "1.4.0.dev10": [{"comment_text": "", "digests": {"md5": "1fdba477f243bebfc0f6267e0860330d", "sha256": "24febe1f359870db0a22a47aba42a8c9de5760535f851fbb7ea9e0b713066f45"}, "downloads": -1, "filename": "tilecloud_chain-1.4.0.dev10-py3-none-any.whl", "has_sig": false, "md5_digest": "1fdba477f243bebfc0f6267e0860330d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 69946, "upload_time": "2017-11-22T16:20:41", "upload_time_iso_8601": "2017-11-22T16:20:41.360095Z", "url": "https://files.pythonhosted.org/packages/18/21/28be9c44b9cc5cc204929eb4202e52eb8cabd3bc246b91035c1cc7d18918/tilecloud_chain-1.4.0.dev10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3620c380f6777894d58f5b572134120d", "sha256": "f9ff0f8758c2c6da67817c9733cf3bf7a202f78b43fb43f62d6ca36939185dc4"}, "downloads": -1, "filename": "tilecloud-chain-1.4.0.dev10.tar.gz", "has_sig": false, "md5_digest": "3620c380f6777894d58f5b572134120d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71000, "upload_time": "2017-11-22T16:20:43", "upload_time_iso_8601": "2017-11-22T16:20:43.379940Z", "url": "https://files.pythonhosted.org/packages/60/1e/7a1d29f116e4a7f9339ad57664f94b6a97340cf2f50639f70a295b037b3c/tilecloud-chain-1.4.0.dev10.tar.gz", "yanked": false}], "1.4.0.dev11": [{"comment_text": "", "digests": {"md5": "e2cba7c5be86dd69b5de201b60a90914", "sha256": "c9c1de6ee17e272ba64972665adef1e816d789b2800fadbec345e2649c036ddf"}, "downloads": -1, "filename": "tilecloud_chain-1.4.0.dev11-py3-none-any.whl", "has_sig": false, "md5_digest": "e2cba7c5be86dd69b5de201b60a90914", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 71773, "upload_time": "2018-02-09T09:06:57", "upload_time_iso_8601": "2018-02-09T09:06:57.470019Z", "url": "https://files.pythonhosted.org/packages/ff/49/5126abcd6ab42a928b6eeb0e429f908f21124239675a509d74d64554d8c8/tilecloud_chain-1.4.0.dev11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f351f2454c877407f06074365dc8ef90", "sha256": "03775a17d5a78645122f17e19dd18f85d9a9d6a7fa97715de6c98bc838311372"}, "downloads": -1, "filename": "tilecloud-chain-1.4.0.dev11.tar.gz", "has_sig": false, "md5_digest": "f351f2454c877407f06074365dc8ef90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71803, "upload_time": "2018-02-09T09:07:02", "upload_time_iso_8601": "2018-02-09T09:07:02.150884Z", "url": "https://files.pythonhosted.org/packages/cf/2a/7679681efce754cbca5683e6238bcc6817e297536c2d43cb0f9d67b00af5/tilecloud-chain-1.4.0.dev11.tar.gz", "yanked": false}], "1.4.0.dev2": [{"comment_text": "", "digests": {"md5": "024d90d350e71a7f2f8f8622f9574dc7", "sha256": "21ea875e5a408c70e12c463f2c0299a52be6b17ca0a5d097c42282ab5fdef20c"}, "downloads": -1, "filename": "tilecloud_chain-1.4.0.dev2-py2-none-any.whl", "has_sig": false, "md5_digest": "024d90d350e71a7f2f8f8622f9574dc7", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 68794, "upload_time": "2017-06-12T11:17:40", "upload_time_iso_8601": "2017-06-12T11:17:40.462266Z", "url": "https://files.pythonhosted.org/packages/57/1c/eea0754a31cbb2199a89071bbfcd2c0afa5c32c8fe1347df50019f19a5d8/tilecloud_chain-1.4.0.dev2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "571b986e0926a3d6621e62b3a55fec29", "sha256": "e68594c9bb6d26f85fd2b1e6dc6da59692d06523add5799feb3a133a26819ab5"}, "downloads": -1, "filename": "tilecloud-chain-1.4.0.dev2.tar.gz", "has_sig": false, "md5_digest": "571b986e0926a3d6621e62b3a55fec29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69737, "upload_time": "2017-06-12T11:17:42", "upload_time_iso_8601": "2017-06-12T11:17:42.394349Z", "url": "https://files.pythonhosted.org/packages/34/fd/e896b4cecc3227b42a5c7bf084b6840f4e4550b94470b1ad3c314d51eb12/tilecloud-chain-1.4.0.dev2.tar.gz", "yanked": false}], "1.4.0.dev3": [{"comment_text": "", "digests": {"md5": "82f74dcd5de84ee021cd8de24d5ed4d0", "sha256": "de97985a67c8bfccf38817086bb976a2a964c4c60a49e232df479a3891947bb3"}, "downloads": -1, "filename": "tilecloud_chain-1.4.0.dev3-py2-none-any.whl", "has_sig": false, "md5_digest": "82f74dcd5de84ee021cd8de24d5ed4d0", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 68807, "upload_time": "2017-06-19T07:44:19", "upload_time_iso_8601": "2017-06-19T07:44:19.369627Z", "url": "https://files.pythonhosted.org/packages/41/61/a42f7a28288f658d297eef4b44df1c026955e54b2b325012bc3c058f4971/tilecloud_chain-1.4.0.dev3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f04d8528feddc504e78437cb30584e82", "sha256": "a9de7e8d1a864cc9e4cf7829e0f70f63f01fa6c501fc6eaee98981317c8ab192"}, "downloads": -1, "filename": "tilecloud-chain-1.4.0.dev3.tar.gz", "has_sig": false, "md5_digest": "f04d8528feddc504e78437cb30584e82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69719, "upload_time": "2017-06-19T07:44:21", "upload_time_iso_8601": "2017-06-19T07:44:21.687870Z", "url": "https://files.pythonhosted.org/packages/4d/d5/54fcf3bfc6ff9e8f1477f296974b23aa98c2d0cd36aacf117773bcec2ec0/tilecloud-chain-1.4.0.dev3.tar.gz", "yanked": false}], "1.4.0.dev4": [{"comment_text": "", "digests": {"md5": "ba34a7102057a999a3ef3443f2d79bbc", "sha256": "b003cf953fc11691a9a024ddbb591d84425d5e02384d148b5bcfb8772bee93d7"}, "downloads": -1, "filename": "tilecloud_chain-1.4.0.dev4-py2-none-any.whl", "has_sig": false, "md5_digest": "ba34a7102057a999a3ef3443f2d79bbc", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 68946, "upload_time": "2017-06-22T10:28:54", "upload_time_iso_8601": "2017-06-22T10:28:54.779604Z", "url": "https://files.pythonhosted.org/packages/77/b1/b0c2f243e0950855636580951d834ef2eecc542cc8f47796af1f58dd70aa/tilecloud_chain-1.4.0.dev4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7307b309730d280b151263ff4d321926", "sha256": "415120f895ae0d1723291852fe01c4dfc6a49235f7b47fbec4f69e8a1ce04918"}, "downloads": -1, "filename": "tilecloud-chain-1.4.0.dev4.tar.gz", "has_sig": false, "md5_digest": "7307b309730d280b151263ff4d321926", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63355, "upload_time": "2017-06-22T10:28:56", "upload_time_iso_8601": "2017-06-22T10:28:56.668289Z", "url": "https://files.pythonhosted.org/packages/bc/25/5d318f2c0ae4d420265f7b32656e4db895c8c00d65cbf1e52306a41e491a/tilecloud-chain-1.4.0.dev4.tar.gz", "yanked": false}], "1.4.0.dev5": [{"comment_text": "", "digests": {"md5": "ac696ea0f3d0a0b105284e670b721438", "sha256": "e690308f5f6a4f0ac59f407950559c955c5c54fa9290230844f5bccb8a5fac6f"}, "downloads": -1, "filename": "tilecloud_chain-1.4.0.dev5-py2-none-any.whl", "has_sig": false, "md5_digest": "ac696ea0f3d0a0b105284e670b721438", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 68983, "upload_time": "2017-06-26T06:26:46", "upload_time_iso_8601": "2017-06-26T06:26:46.570013Z", "url": "https://files.pythonhosted.org/packages/5c/db/0e40e2d84b5ebfd6ef2346f2d427168a95ade4ae5e779631ace804ff518e/tilecloud_chain-1.4.0.dev5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba47581f91853b8416281f2971d74119", "sha256": "4357ace7772b15060f7653df71be849667060d2255e27273a0f20f889181c165"}, "downloads": -1, "filename": "tilecloud-chain-1.4.0.dev5.tar.gz", "has_sig": false, "md5_digest": "ba47581f91853b8416281f2971d74119", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69241, "upload_time": "2017-06-26T06:26:48", "upload_time_iso_8601": "2017-06-26T06:26:48.297714Z", "url": "https://files.pythonhosted.org/packages/98/4c/ee40b1cf02d33a3a2916497625a17b9898a39b905d6ef1abbb4f181453cd/tilecloud-chain-1.4.0.dev5.tar.gz", "yanked": false}], "1.4.0.dev6": [{"comment_text": "", "digests": {"md5": "ac1522c078dfbdd26f6caaa67e422798", "sha256": "83a26c1ac11ec073d7d248ab1158fe338a5fe1b996d3dc88cab7068e1119bd2d"}, "downloads": -1, "filename": "tilecloud_chain-1.4.0.dev6-py2-none-any.whl", "has_sig": false, "md5_digest": "ac1522c078dfbdd26f6caaa67e422798", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 68952, "upload_time": "2017-06-28T13:38:10", "upload_time_iso_8601": "2017-06-28T13:38:10.734084Z", "url": "https://files.pythonhosted.org/packages/37/d7/fc7bfc5521a6e132f21c36aeb142c8e7c8882db49f884c65318e5b72913b/tilecloud_chain-1.4.0.dev6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93dca21253ce5d3746d12915dfb26feb", "sha256": "8e9631234914eae8e80a9f3186a74098545c66b53259d161afc8f311cc3e9865"}, "downloads": -1, "filename": "tilecloud-chain-1.4.0.dev6.tar.gz", "has_sig": false, "md5_digest": "93dca21253ce5d3746d12915dfb26feb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69233, "upload_time": "2017-06-28T13:38:12", "upload_time_iso_8601": "2017-06-28T13:38:12.819228Z", "url": "https://files.pythonhosted.org/packages/8e/7c/de0da8acf4990acc06d8719c525ba45473c31ae4da2452560cbf15757502/tilecloud-chain-1.4.0.dev6.tar.gz", "yanked": false}], "1.4.0.dev7": [{"comment_text": "", "digests": {"md5": "fe17b968d802feb283355449001483e8", "sha256": "cec29f1fbc0a1630abd04b1f3525a8d65da0eafe2f9a15c42bb54946306290ff"}, "downloads": -1, "filename": "tilecloud_chain-1.4.0.dev7-py2-none-any.whl", "has_sig": false, "md5_digest": "fe17b968d802feb283355449001483e8", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 69045, "upload_time": "2017-07-18T13:50:17", "upload_time_iso_8601": "2017-07-18T13:50:17.440862Z", "url": "https://files.pythonhosted.org/packages/a8/f8/546697e85d02ea3dbdc850d518d4a47eddd3e9fedededd59fd13532b0a93/tilecloud_chain-1.4.0.dev7-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19abf832f852dd80e44db86e64d64e8c", "sha256": "00be1d66d321d1de6e9b570d663a13bd3b68c406fa1ddef5712fc9fbe538afd3"}, "downloads": -1, "filename": "tilecloud-chain-1.4.0.dev7.tar.gz", "has_sig": false, "md5_digest": "19abf832f852dd80e44db86e64d64e8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69358, "upload_time": "2017-07-18T13:50:20", "upload_time_iso_8601": "2017-07-18T13:50:20.903835Z", "url": "https://files.pythonhosted.org/packages/ce/e0/edc2af8016710367f61efdede3c225a5255d78394cb29ab538d8e5cb3b18/tilecloud-chain-1.4.0.dev7.tar.gz", "yanked": false}], "1.4.0.dev8": [{"comment_text": "", "digests": {"md5": "4a8b06b2b8bd566e7168e659f2eede8e", "sha256": "585c4356764715d3ab8e3bfdb1a78b7c27799ec84c46790df5f91f5c7aba4475"}, "downloads": -1, "filename": "tilecloud_chain-1.4.0.dev8-py3-none-any.whl", "has_sig": false, "md5_digest": "4a8b06b2b8bd566e7168e659f2eede8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 69601, "upload_time": "2017-09-26T13:03:31", "upload_time_iso_8601": "2017-09-26T13:03:31.648730Z", "url": "https://files.pythonhosted.org/packages/ff/8b/3dc846a0be5e653f3d3946979e196b848ac211efcb3f5614715d99a26c08/tilecloud_chain-1.4.0.dev8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "daa02361139db63ea3298ff22adcc92a", "sha256": "5a34ba70c99f1ba9244a0cd13aa3782414724fb0cf58fe31b09e093b0d70c70b"}, "downloads": -1, "filename": "tilecloud-chain-1.4.0.dev8.tar.gz", "has_sig": false, "md5_digest": "daa02361139db63ea3298ff22adcc92a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70544, "upload_time": "2017-09-26T13:03:32", "upload_time_iso_8601": "2017-09-26T13:03:32.928207Z", "url": "https://files.pythonhosted.org/packages/04/28/6a3fa4ff01d81a3a88dc582f563c14fc8dcdb411416fc2e569c61e85bf5d/tilecloud-chain-1.4.0.dev8.tar.gz", "yanked": false}], "1.4.0.dev9": [{"comment_text": "", "digests": {"md5": "5bd3cdab97bea2f87ee1c1087cc3b040", "sha256": "4b6a9fa8d4106f90d585e81f359e264d65458118bce68f45f21b8bb219b4fa38"}, "downloads": -1, "filename": "tilecloud_chain-1.4.0.dev9-py3-none-any.whl", "has_sig": false, "md5_digest": "5bd3cdab97bea2f87ee1c1087cc3b040", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 69911, "upload_time": "2017-10-19T14:12:15", "upload_time_iso_8601": "2017-10-19T14:12:15.356218Z", "url": "https://files.pythonhosted.org/packages/9a/41/e33ee81b12a22b7f8cd195ea9f8af3eb4200a871680bca79a5415bf5734e/tilecloud_chain-1.4.0.dev9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "469b399ab71e22767cd1db416bb80278", "sha256": "3539738b1d78e5d84e19994181655bcbf723624304bc3962decf6b98529c9c4c"}, "downloads": -1, "filename": "tilecloud-chain-1.4.0.dev9.tar.gz", "has_sig": false, "md5_digest": "469b399ab71e22767cd1db416bb80278", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70988, "upload_time": "2017-10-19T14:12:16", "upload_time_iso_8601": "2017-10-19T14:12:16.754157Z", "url": "https://files.pythonhosted.org/packages/fe/cd/c645b8e1e2fef23b52348aa9d90a66eb1a1f7787227f7877b0849a83e28b/tilecloud-chain-1.4.0.dev9.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "9f590cb07e2fad44ecd2ec853328a181", "sha256": "fb535d144ab69dc158dad1c603452c2b7266da42febbc3093e96b6491039318c"}, "downloads": -1, "filename": "tilecloud_chain-1.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9f590cb07e2fad44ecd2ec853328a181", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 71646, "upload_time": "2018-02-21T11:13:27", "upload_time_iso_8601": "2018-02-21T11:13:27.956598Z", "url": "https://files.pythonhosted.org/packages/84/64/43c767861d26a94971e680ab97f2b291cea14722bb33ce33f8e9b73f4633/tilecloud_chain-1.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f71204461ebf09b3c26844741c4ead6e", "sha256": "e83af7c93bb94a34abc89cc3f70a7bbe748aa33a52dd6f59a321fe024d6bbcfa"}, "downloads": -1, "filename": "tilecloud-chain-1.4.1.tar.gz", "has_sig": false, "md5_digest": "f71204461ebf09b3c26844741c4ead6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71769, "upload_time": "2018-02-21T11:13:30", "upload_time_iso_8601": "2018-02-21T11:13:30.587627Z", "url": "https://files.pythonhosted.org/packages/d6/85/03476541b5693ac7b064faf3c994e14c25e116546198f8187af1920e8278/tilecloud-chain-1.4.1.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "9c1e6fa1759f5c119a580bf5dcab5214", "sha256": "cbd04560b74b064843b7b6c89bfac520c416ecc176028cd6c2d726ab35f4099f"}, "downloads": -1, "filename": "tilecloud_chain-1.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9c1e6fa1759f5c119a580bf5dcab5214", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 60776, "upload_time": "2018-04-13T06:24:00", "upload_time_iso_8601": "2018-04-13T06:24:00.254570Z", "url": "https://files.pythonhosted.org/packages/3f/c4/e716b80355036cb92e6cce48bae2957f1cc18b331d08b8626a153d25250b/tilecloud_chain-1.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b476969d36bf325bb3f0c7d61953225d", "sha256": "9e04dc155b41ab24e0835835726460c559631dd751088b64580b8cb13784b22d"}, "downloads": -1, "filename": "tilecloud-chain-1.5.0.tar.gz", "has_sig": false, "md5_digest": "b476969d36bf325bb3f0c7d61953225d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71804, "upload_time": "2018-04-13T06:24:01", "upload_time_iso_8601": "2018-04-13T06:24:01.309883Z", "url": "https://files.pythonhosted.org/packages/22/ee/c1685f615b5dc4265ff27397f6f004b65f4f36d13ff866146769ba6273d9/tilecloud-chain-1.5.0.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "7c48e0142ef4ad9e4787bd89a5e5fb8a", "sha256": "0eb60e6b042dc3fabb172da9599089bac857cf43ed3e512c2d749fc413985608"}, "downloads": -1, "filename": "tilecloud_chain-1.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7c48e0142ef4ad9e4787bd89a5e5fb8a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 60762, "upload_time": "2018-05-30T07:43:37", "upload_time_iso_8601": "2018-05-30T07:43:37.076099Z", "url": "https://files.pythonhosted.org/packages/f6/38/77d7011682973b61bbe037092f75dd0894c197226e8cb0e333cfb15b27a6/tilecloud_chain-1.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "513f8b7a35e7e2e6ba8400896e316c41", "sha256": "80de881f9718f7942abcbc309440560d792f5b3fc7d4b40b684749d8752add14"}, "downloads": -1, "filename": "tilecloud-chain-1.5.2.tar.gz", "has_sig": false, "md5_digest": "513f8b7a35e7e2e6ba8400896e316c41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71941, "upload_time": "2018-05-30T07:43:38", "upload_time_iso_8601": "2018-05-30T07:43:38.503663Z", "url": "https://files.pythonhosted.org/packages/93/1a/2ba3b488121bd58b7119b35c51923282594a3a29e854a3690dc6d65a3f2c/tilecloud-chain-1.5.2.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "789bdd568b35f1c1819c5129abada8b6", "sha256": "40c9a1e1d908b3d1efb40ee58d58a59933e9c082e26f8821817b013774951d0c"}, "downloads": -1, "filename": "tilecloud_chain-1.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "789bdd568b35f1c1819c5129abada8b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 60860, "upload_time": "2018-08-06T13:19:11", "upload_time_iso_8601": "2018-08-06T13:19:11.401419Z", "url": "https://files.pythonhosted.org/packages/d0/99/17c484ba8a3318b984b005e5f5099e626f70abcd62a427572d1826dc214a/tilecloud_chain-1.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b30ab261fa50ffa557a7e27b7c4bec3e", "sha256": "4ff597c4b7f8cc06e6585f0d2c243272e6d7671289edcf30e633bf4a6429221f"}, "downloads": -1, "filename": "tilecloud-chain-1.6.0.tar.gz", "has_sig": false, "md5_digest": "b30ab261fa50ffa557a7e27b7c4bec3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72000, "upload_time": "2018-08-06T13:19:13", "upload_time_iso_8601": "2018-08-06T13:19:13.174464Z", "url": "https://files.pythonhosted.org/packages/31/9d/bf534720d9f6fc503ba7093a9b48910ad57ff28bab501b12eaf220938172/tilecloud-chain-1.6.0.tar.gz", "yanked": false}], "1.6.0.dev1": [{"comment_text": "", "digests": {"md5": "89d3531023648d5c534cba6eaf09692b", "sha256": "cfadb573edd11c35dc9984bf902032298d80ccaae5b82332505118e125e58b0c"}, "downloads": -1, "filename": "tilecloud_chain-1.6.0.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "89d3531023648d5c534cba6eaf09692b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 60856, "upload_time": "2018-06-07T08:51:11", "upload_time_iso_8601": "2018-06-07T08:51:11.485466Z", "url": "https://files.pythonhosted.org/packages/73/b4/366c3635b3a124d030791a9e32f19b33ee143f1e0b75c76adf337d23481a/tilecloud_chain-1.6.0.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56ac07745e9933c82c59db1cabc81be6", "sha256": "984a9fc38361862cfb63e298edb162b6c55767ab7646f36adb7e21ae77a01e8f"}, "downloads": -1, "filename": "tilecloud-chain-1.6.0.dev1.tar.gz", "has_sig": false, "md5_digest": "56ac07745e9933c82c59db1cabc81be6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72000, "upload_time": "2018-06-07T08:51:12", "upload_time_iso_8601": "2018-06-07T08:51:12.905804Z", "url": "https://files.pythonhosted.org/packages/ca/45/954cf6080a1381e59b303dfe12e9fe7b4b8e46fbc17939f936e6aba51eec/tilecloud-chain-1.6.0.dev1.tar.gz", "yanked": false}], "1.6.0.dev2": [{"comment_text": "", "digests": {"md5": "dbd9aebab8b5388b7eff58279d4abe35", "sha256": "fcba24c4cd14d47aeeb362cc72da76391c566fffa4da46aa815aaef0155f8cfe"}, "downloads": -1, "filename": "tilecloud_chain-1.6.0.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "dbd9aebab8b5388b7eff58279d4abe35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 60865, "upload_time": "2018-06-07T15:19:32", "upload_time_iso_8601": "2018-06-07T15:19:32.836849Z", "url": "https://files.pythonhosted.org/packages/ff/bc/bde098117dd73712c49d2d057119e716f174e620b240dfb180cf3f927af5/tilecloud_chain-1.6.0.dev2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9880681de55751217fb82734d30f091", "sha256": "41ca67310e876d6bcfbb85505d45d2e506dd983b851817646314530c36b80d8d"}, "downloads": -1, "filename": "tilecloud-chain-1.6.0.dev2.tar.gz", "has_sig": false, "md5_digest": "a9880681de55751217fb82734d30f091", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71984, "upload_time": "2018-06-07T15:19:34", "upload_time_iso_8601": "2018-06-07T15:19:34.167759Z", "url": "https://files.pythonhosted.org/packages/8e/e6/705ed606b593180234ebfc52ed1de28cc6a574cbcc779c3299473c525519/tilecloud-chain-1.6.0.dev2.tar.gz", "yanked": false}], "1.6.0.dev3": [{"comment_text": "", "digests": {"md5": "30ccfe9e6b048f8bbe5f0011e935236c", "sha256": "31df14a06ee762182deb5a02dac47f632ba0eeb7ba286a60caaee6cd8c309b4c"}, "downloads": -1, "filename": "tilecloud_chain-1.6.0.dev3-py3-none-any.whl", "has_sig": false, "md5_digest": "30ccfe9e6b048f8bbe5f0011e935236c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 60923, "upload_time": "2018-06-12T09:15:40", "upload_time_iso_8601": "2018-06-12T09:15:40.977609Z", "url": "https://files.pythonhosted.org/packages/1a/8b/702b6aace98e0ef5787ef71504dae10048cd0062a86576b5ec1992761427/tilecloud_chain-1.6.0.dev3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dee08d8a034dd2c6626ddc22ac29881d", "sha256": "7e17bb12e80b74bb42f85e52cbfbfcf6362aa1123a4bda8b7e37cca278f61b0b"}, "downloads": -1, "filename": "tilecloud-chain-1.6.0.dev3.tar.gz", "has_sig": false, "md5_digest": "dee08d8a034dd2c6626ddc22ac29881d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72031, "upload_time": "2018-06-12T09:15:42", "upload_time_iso_8601": "2018-06-12T09:15:42.226819Z", "url": "https://files.pythonhosted.org/packages/dc/c1/9826c3dadf97b436767655ee3b99c7d73006e8dd7fecbb94bced9da5f295/tilecloud-chain-1.6.0.dev3.tar.gz", "yanked": false}], "1.6.0.dev4": [{"comment_text": "", "digests": {"md5": "2470b03b2fdf00834114fbf02be92820", "sha256": "e7f4d2e5e7faf5ae26b218bb7c1947554731c0c4d7654abd85d6ee7badad9142"}, "downloads": -1, "filename": "tilecloud_chain-1.6.0.dev4-py3-none-any.whl", "has_sig": false, "md5_digest": "2470b03b2fdf00834114fbf02be92820", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 60923, "upload_time": "2018-06-13T06:49:04", "upload_time_iso_8601": "2018-06-13T06:49:04.540952Z", "url": "https://files.pythonhosted.org/packages/df/bb/40903747663383016cb078d1c17fa4013c351ba84cb4001db8e387cbfb41/tilecloud_chain-1.6.0.dev4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1a1ecc873c056165b7e276c0611e30f", "sha256": "9f58af5f8eeb5c1f2952b960b3a14dc7cd4681553e560b3ef9b8e2343705e75a"}, "downloads": -1, "filename": "tilecloud-chain-1.6.0.dev4.tar.gz", "has_sig": false, "md5_digest": "a1a1ecc873c056165b7e276c0611e30f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72031, "upload_time": "2018-06-13T06:49:05", "upload_time_iso_8601": "2018-06-13T06:49:05.811809Z", "url": "https://files.pythonhosted.org/packages/1f/36/7bcf1040489ace957ac57a4713cfbbd5ebaa39fdf506701a835c9f6d41f3/tilecloud-chain-1.6.0.dev4.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "7d1eafe77c45966264c41e7cb7206fe4", "sha256": "949146271d6bd7b808a3285b789688ff2091e6eab7a9f808c2bddc6b3a296419"}, "downloads": -1, "filename": "tilecloud_chain-1.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7d1eafe77c45966264c41e7cb7206fe4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 61004, "upload_time": "2018-08-08T07:36:38", "upload_time_iso_8601": "2018-08-08T07:36:38.262316Z", "url": "https://files.pythonhosted.org/packages/c0/70/5fd9f8d5478fde7f4c52d5bf194185a2a8662ef75f9b5ff7cefa07e0730f/tilecloud_chain-1.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c16dfe82239b4bd5d1692f938bd6afa6", "sha256": "b7bc08c4c57a5f861a264203c3b6f306e05aaab252ae368d1c74a4e05e2b7406"}, "downloads": -1, "filename": "tilecloud-chain-1.7.0.tar.gz", "has_sig": false, "md5_digest": "c16dfe82239b4bd5d1692f938bd6afa6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72202, "upload_time": "2018-08-08T07:36:39", "upload_time_iso_8601": "2018-08-08T07:36:39.754573Z", "url": "https://files.pythonhosted.org/packages/81/60/cfab7fb19825bca8c001d43fa2011160a14bebd23ddd1cdad6899300dc39/tilecloud-chain-1.7.0.tar.gz", "yanked": false}], "1.7.1": [{"comment_text": "", "digests": {"md5": "9f59926a8e2b49a4008c831d92feb13b", "sha256": "de04d47bea79ee3d8589aa92677ca6f4dca6b2f6b4ef69a3f52d024d4891330c"}, "downloads": -1, "filename": "tilecloud_chain-1.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9f59926a8e2b49a4008c831d92feb13b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 60998, "upload_time": "2018-08-08T10:15:45", "upload_time_iso_8601": "2018-08-08T10:15:45.088059Z", "url": "https://files.pythonhosted.org/packages/e0/db/29b2336ddb3b3048c4e777cc7025dfa037ddc5ef5c970f1d58ae0f5e9942/tilecloud_chain-1.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce3e9bd88ff4f15c1fa4ba55068ec446", "sha256": "84a885a8a940e41a6080ca91097a4840f23127b1e965c70421b1a9c3e40084b1"}, "downloads": -1, "filename": "tilecloud-chain-1.7.1.tar.gz", "has_sig": false, "md5_digest": "ce3e9bd88ff4f15c1fa4ba55068ec446", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72195, "upload_time": "2018-08-08T10:15:46", "upload_time_iso_8601": "2018-08-08T10:15:46.437188Z", "url": "https://files.pythonhosted.org/packages/93/06/94c2f3d30308e21586b26803f079c4135a97d9e7ca630c343f9277e1c50a/tilecloud-chain-1.7.1.tar.gz", "yanked": false}], "1.7.2": [{"comment_text": "", "digests": {"md5": "ad22109022bfb0e78ccf5326be5ee899", "sha256": "1f009fda81488757bdefb10b9e1d76b14555af5b7f8d22429dfabedb0732fea4"}, "downloads": -1, "filename": "tilecloud_chain-1.7.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ad22109022bfb0e78ccf5326be5ee899", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 61148, "upload_time": "2018-08-13T07:49:11", "upload_time_iso_8601": "2018-08-13T07:49:11.231145Z", "url": "https://files.pythonhosted.org/packages/f8/5a/fb2964f9d06b7c3c9f467444eb59d11703a29c3b94b508e6df4287c4847e/tilecloud_chain-1.7.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fde974a4f9d7b5004f409e2a7da3f30a", "sha256": "d142da643062bbe53f9ef1dba9510c70610a43c9bad2518c6d543950bc87382c"}, "downloads": -1, "filename": "tilecloud-chain-1.7.2.tar.gz", "has_sig": false, "md5_digest": "fde974a4f9d7b5004f409e2a7da3f30a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72344, "upload_time": "2018-08-13T07:49:12", "upload_time_iso_8601": "2018-08-13T07:49:12.492157Z", "url": "https://files.pythonhosted.org/packages/14/3c/4a61fb49ce168d744ff9edefb2a44fa4798e71821f8d5222c7a77a17fe42/tilecloud-chain-1.7.2.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "f06e91ce16de64df69e83848ea0c356f", "sha256": "9b292e931a3f0cbda5ee6702d5a0314b221cdce0697fa29749d5adedad2b673f"}, "downloads": -1, "filename": "tilecloud_chain-1.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f06e91ce16de64df69e83848ea0c356f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 61183, "upload_time": "2018-09-12T07:07:56", "upload_time_iso_8601": "2018-09-12T07:07:56.160199Z", "url": "https://files.pythonhosted.org/packages/bc/65/32323d8a71045f9c12a44bab7b267fc41b57e035048f1c67d4cfb35ff826/tilecloud_chain-1.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5c258f67c8a3485638b2b07f7106d99", "sha256": "b023701b15f7d26d815f92410b3f70e442b87abf18a00240847f2c68bd33473a"}, "downloads": -1, "filename": "tilecloud-chain-1.8.0.tar.gz", "has_sig": false, "md5_digest": "a5c258f67c8a3485638b2b07f7106d99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72348, "upload_time": "2018-09-12T07:07:57", "upload_time_iso_8601": "2018-09-12T07:07:57.587539Z", "url": "https://files.pythonhosted.org/packages/89/bd/a3f910baf2483d32d5c41f1f7bdf2286aa3464264bf017706cb1902fe6a0/tilecloud-chain-1.8.0.tar.gz", "yanked": false}], "1.8.1": [{"comment_text": "", "digests": {"md5": "065fb5e1856a281e31b1ee9727ccdbec", "sha256": "d98d4570f8f5b35f269ddfa85143ca234f0cc2883d76ac1416cc98acd407780c"}, "downloads": -1, "filename": "tilecloud_chain-1.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "065fb5e1856a281e31b1ee9727ccdbec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 61331, "upload_time": "2018-09-24T07:02:18", "upload_time_iso_8601": "2018-09-24T07:02:18.277108Z", "url": "https://files.pythonhosted.org/packages/2a/1d/ecc685a724c6fb1c35ee882db62baa898c9bc5a4993977e8a44a7aec2e10/tilecloud_chain-1.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a899d5c83ebdb15c22146bdc280ebbb8", "sha256": "6034956801bf4762d6bfd75c3c3989c7d649ffcdfa24262b0142209a68fdbc10"}, "downloads": -1, "filename": "tilecloud-chain-1.8.1.tar.gz", "has_sig": false, "md5_digest": "a899d5c83ebdb15c22146bdc280ebbb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72489, "upload_time": "2018-09-24T07:02:19", "upload_time_iso_8601": "2018-09-24T07:02:19.702610Z", "url": "https://files.pythonhosted.org/packages/ad/00/41bd64dd4c4b405c70e9a5bcef904374cd5abcbf1ea3e9869624aa24ae98/tilecloud-chain-1.8.1.tar.gz", "yanked": false}], "1.8.2": [{"comment_text": "", "digests": {"md5": "c780aee9ae9cafeb8fae5f9fc8866500", "sha256": "3af3398afbfe518e0465d965f8b5bf33f5a49d922f43e0024027ffe8715a9408"}, "downloads": -1, "filename": "tilecloud_chain-1.8.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c780aee9ae9cafeb8fae5f9fc8866500", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 61345, "upload_time": "2018-11-06T12:58:23", "upload_time_iso_8601": "2018-11-06T12:58:23.087098Z", "url": "https://files.pythonhosted.org/packages/c9/28/7c9cd656d53c6bec0161e8859acd8d0484db23c0f0f55becadfcf52549a0/tilecloud_chain-1.8.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd04b4de48887d2266fc01f9bb074fcb", "sha256": "b798811796fe414430314a69a32ba44d0f954a8bd746fee266fe9111683bf8a6"}, "downloads": -1, "filename": "tilecloud-chain-1.8.2.tar.gz", "has_sig": false, "md5_digest": "fd04b4de48887d2266fc01f9bb074fcb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72511, "upload_time": "2018-11-06T12:58:24", "upload_time_iso_8601": "2018-11-06T12:58:24.448135Z", "url": "https://files.pythonhosted.org/packages/ab/33/def037ae3b9c4305f11ee86428226c3f592f9f4b38896ccf1910d693bccc/tilecloud-chain-1.8.2.tar.gz", "yanked": false}], "1.8.3": [{"comment_text": "", "digests": {"md5": "40115823402f20e211b1958471c07fab", "sha256": "126d4898a11dcf73c0a8cf6224dec0d02f0b7177161d2100d24a2538af5a53af"}, "downloads": -1, "filename": "tilecloud_chain-1.8.3-py3-none-any.whl", "has_sig": false, "md5_digest": "40115823402f20e211b1958471c07fab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 61430, "upload_time": "2018-11-13T09:36:58", "upload_time_iso_8601": "2018-11-13T09:36:58.972003Z", "url": "https://files.pythonhosted.org/packages/18/ac/efb0994416a77306e8d82d54f3cb951cf5aeb2335898e3f82b6a33e2e497/tilecloud_chain-1.8.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69c0db238635e0b329e4d8b225827631", "sha256": "0ff178a1b01cab29efd70495d40caad9642a0999c0e68a921ca7e7eb947e519b"}, "downloads": -1, "filename": "tilecloud-chain-1.8.3.tar.gz", "has_sig": false, "md5_digest": "69c0db238635e0b329e4d8b225827631", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72608, "upload_time": "2018-11-13T09:37:00", "upload_time_iso_8601": "2018-11-13T09:37:00.680576Z", "url": "https://files.pythonhosted.org/packages/d1/2a/6d17c77d16dee0efedc12848a3d900c4547a9d3ad624d173274b31de75bc/tilecloud-chain-1.8.3.tar.gz", "yanked": false}], "1.9.0": [{"comment_text": "", "digests": {"md5": "fc1c0bd4c2742cbb47909bcdff1518e4", "sha256": "1c874e280d5cd952438ac74babee46d392b4096448ff10e1f5f31a5c74b7310d"}, "downloads": -1, "filename": "tilecloud_chain-1.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fc1c0bd4c2742cbb47909bcdff1518e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 63636, "upload_time": "2018-11-21T08:59:11", "upload_time_iso_8601": "2018-11-21T08:59:11.767936Z", "url": "https://files.pythonhosted.org/packages/69/9c/aae7f8184b643a43d3a3984905a6022fc432f1fd75d69c315ab14e0fa401/tilecloud_chain-1.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bed649c804eefe3358478032347f4fec", "sha256": "67da99a4b7b070854cc386f4b1e3d86e89642744421b2c5dc32ea70dad0f85b0"}, "downloads": -1, "filename": "tilecloud-chain-1.9.0.tar.gz", "has_sig": false, "md5_digest": "bed649c804eefe3358478032347f4fec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73700, "upload_time": "2018-11-21T08:59:13", "upload_time_iso_8601": "2018-11-21T08:59:13.507007Z", "url": "https://files.pythonhosted.org/packages/e1/72/8790bc020b77dfd774e0d1387bb6243afe11089a9080a846c372a6d9d883/tilecloud-chain-1.9.0.tar.gz", "yanked": false}], "1.9.1": [{"comment_text": "", "digests": {"md5": "6cf4f8e000b23b4d4200039bea733c56", "sha256": "54f2c898bb25c215ebc8040dbeadf2189ed3ac807dae6ac2440cc1947df93a70"}, "downloads": -1, "filename": "tilecloud_chain-1.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6cf4f8e000b23b4d4200039bea733c56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 63654, "upload_time": "2018-12-10T14:24:10", "upload_time_iso_8601": "2018-12-10T14:24:10.206862Z", "url": "https://files.pythonhosted.org/packages/85/c6/4cd60d366fd6eae7a7343d21805b7d1051addf0d87a479ec8f75e2669813/tilecloud_chain-1.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a39323f7341f1c109af5118971d6d49", "sha256": "3ac40b987448c987d9da78da8f24c5bfb0dddff63a4c2d2adaf330b7812f72cf"}, "downloads": -1, "filename": "tilecloud-chain-1.9.1.tar.gz", "has_sig": false, "md5_digest": "6a39323f7341f1c109af5118971d6d49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73731, "upload_time": "2018-12-10T14:24:11", "upload_time_iso_8601": "2018-12-10T14:24:11.987260Z", "url": "https://files.pythonhosted.org/packages/0c/d1/38c7e0199931225497a395d7a4ca4e340f129ba61e9f62bd5939e794b778/tilecloud-chain-1.9.1.tar.gz", "yanked": false}], "1.9.2": [{"comment_text": "", "digests": {"md5": "77034eef36faa7af8ae94fba80824b64", "sha256": "2e925578fa097e8ce4f2927d30ca71fe628a27cc1901b86101686af423bd2ea5"}, "downloads": -1, "filename": "tilecloud_chain-1.9.2-py3-none-any.whl", "has_sig": false, "md5_digest": "77034eef36faa7af8ae94fba80824b64", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 63655, "upload_time": "2018-12-10T16:02:23", "upload_time_iso_8601": "2018-12-10T16:02:23.042382Z", "url": "https://files.pythonhosted.org/packages/9d/94/7b07ddd596578c7d9dcc5a600a0814e1b7ab1139c446fcd1a87a4b52dd89/tilecloud_chain-1.9.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6f2e567d5c947bb31b0a4b169c67360", "sha256": "a3400256379e7a765f096579abcdc711bc0d6ec4f0c5e49aabce5c1923fd9bb4"}, "downloads": -1, "filename": "tilecloud-chain-1.9.2.tar.gz", "has_sig": false, "md5_digest": "c6f2e567d5c947bb31b0a4b169c67360", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73737, "upload_time": "2018-12-10T16:02:24", "upload_time_iso_8601": "2018-12-10T16:02:24.719462Z", "url": "https://files.pythonhosted.org/packages/f3/57/17471deca7143086ec77ab1bea96f9cddec948e7156869813c182c300fab/tilecloud-chain-1.9.2.tar.gz", "yanked": false}], "1.9.3": [{"comment_text": "", "digests": {"md5": "88c26816d1b3f68015ff80a77956defb", "sha256": "beffecef9d8e67294f674959bb1eaa567ea0f9e9f5d04c2fd191375fd72ca340"}, "downloads": -1, "filename": "tilecloud_chain-1.9.3-py3-none-any.whl", "has_sig": false, "md5_digest": "88c26816d1b3f68015ff80a77956defb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 63649, "upload_time": "2019-01-22T14:33:24", "upload_time_iso_8601": "2019-01-22T14:33:24.522590Z", "url": "https://files.pythonhosted.org/packages/05/54/c1bcdfff07a3171455fada376da99a0fa9ee67d2d51f8cc77687220ef8e6/tilecloud_chain-1.9.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dda3bab1c021a1c5f5b1aabe48d5a42", "sha256": "1338cad1d8b655167dcc1a89fc59288e626189f9e31660b2cb959a7b3e9a90e7"}, "downloads": -1, "filename": "tilecloud-chain-1.9.3.tar.gz", "has_sig": false, "md5_digest": "6dda3bab1c021a1c5f5b1aabe48d5a42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73729, "upload_time": "2019-01-22T14:33:26", "upload_time_iso_8601": "2019-01-22T14:33:26.310964Z", "url": "https://files.pythonhosted.org/packages/c6/d6/7abb1026dea7d85530bfc3c070bbc23adb1cd492497d83db6c76ee55f279/tilecloud-chain-1.9.3.tar.gz", "yanked": false}], "1.9.4": [{"comment_text": "", "digests": {"md5": "1b4bb5fb6346eec16de1b29e76c4e044", "sha256": "8a0c2454df69d2132badbe907563174aed789549efa21a2a0783b6994149f06b"}, "downloads": -1, "filename": "tilecloud_chain-1.9.4-py3-none-any.whl", "has_sig": false, "md5_digest": "1b4bb5fb6346eec16de1b29e76c4e044", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 63654, "upload_time": "2019-01-23T05:57:17", "upload_time_iso_8601": "2019-01-23T05:57:17.992164Z", "url": "https://files.pythonhosted.org/packages/a3/51/c36f9c2ddaefd0df27f85c0f739adb9d8fce3810320b39c3510a66df345b/tilecloud_chain-1.9.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d18f0b27811a4073178fde54483da872", "sha256": "66cf81941004ec9f38103c6f2983df3b422bd36516d240abea1d9af848aeb6ad"}, "downloads": -1, "filename": "tilecloud-chain-1.9.4.tar.gz", "has_sig": false, "md5_digest": "d18f0b27811a4073178fde54483da872", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73724, "upload_time": "2019-01-23T05:57:19", "upload_time_iso_8601": "2019-01-23T05:57:19.706583Z", "url": "https://files.pythonhosted.org/packages/a5/14/f8d10f33a8f5201892f1eb2a806ac93604e215b91c0f7c82d7fc68e33bda/tilecloud-chain-1.9.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e7070e980eee13655d981fe3abebb850", "sha256": "f3a259ab8d4f3a2b819b25135575122fb2694a01af7744a0622a0b67bcd74bc1"}, "downloads": -1, "filename": "tilecloud_chain-1.13.9-py3-none-any.whl", "has_sig": false, "md5_digest": "e7070e980eee13655d981fe3abebb850", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 76547, "upload_time": "2019-11-28T13:34:12", "upload_time_iso_8601": "2019-11-28T13:34:12.144620Z", "url": "https://files.pythonhosted.org/packages/8f/23/61f46658770f3b77bcb083160e929680bf6089d85ddd61ac916f70ef24dc/tilecloud_chain-1.13.9-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:53:43 2020"}