{"info": {"author": "Henry Leung", "author_email": "henrysky.leung@utoronto.ca", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Astronomy"], "description": "mw_plot\n========\n\nA handy python package to do plotting on a face-on/edge-on milkyway/skymap with matplotlib.\nYou can set the center and radius of the plot anywhere on a milkyway galaxy image with galactic or\ngalactocentric coordinates.\n\nBoth ``MW_bg_annotate.jpg`` and ``MW_bg_unannotate.jpg`` are modified from an images by **NASA/JPL-Caltech/R. Hurt (SSC/Caltech)**\nBoth images are 5600x5600px with resolution of 24.2 light years per pixel.\n\n``MW_edgeon_unannotate.jpg`` is modified from an images by **ESA/Gaia/DPAC**.\nThe image is 6500x6500px with resolution of 15.38 light years per pixel taken by ESA Gaia DR2.\n\n``mw_plot`` will fill black pixel for region outside the pre-compiled images. No acknowledgement to ``mw_plot``\nis required if you generate plots for your non-commerical publication, but you **must acknowledgement the origin of\nthe background images** provided above.\n\nAuthor\n---------------\n\n-  | **Henry Leung** - *Initial work and developer* - henrysky_\n   | Contact Henry: henrysky.leung [at] utoronto.ca\n\n.. _henrysky: https://github.com/henrysky\n\nSystem Requirement\n---------------------\n\n-  | **Python** 3.6 or above\n-  | **astropy** 3.0 or above\n-  | **Numpy** 1.16.0 or above\n-  | **Matplotlib** 3.1.0 above\n-  | **Pillow** 5.0.0 above\n\nMatplotlib 2.2.3 has trouble to save pdf plot with this package. Please use Matplotlib >3.0 if you experience issue\n\nInstall\n---------------------\n\nTo install via ``pip``\n\n.. code-block:: bash\n\n   $ pip install mw_plot\n\nIf something is not working properly, try to upgrade first and then report it as an issue\n\n.. code-block:: bash\n\n   $ pip install mw_plot --upgrade\n\nOR clone the latest commit of mw_plot from github and install\n\n.. code-block:: bash\n\n   $ git clone --depth=1 git://github.com/henrysky/milkyway_plot\n   $ python setup.py install\n\nBasic Usage\n---------------------\n\nThis python package consists of two classes - `MWPlot` and `MWSkyMap`. `MWPlot` is used to plot things on a face-on/edge-on milkyway\nwith galactic/galactocentric coordinates. `MWSkyMap` is used to plot skymap with milkyway background with RA/DEC.\n\nFor `MWPlot`:\n\n.. code:: python\n\n   from astropy import units as u\n   from mw_plot import MWPlot\n\n   # setup MWPlot instance, you have to specify center, radius, unit with astropy unit and choice of coord\n   # or not specifying any to use default value shown below\n   # center: Coordinates of the center of the plot, you cannot change this after creating the instance\n   # radius: Radius of the plot, you cannot change this after creating the instance\n   # coord: can be 'galactocentric' or 'galactic'\n   # annotation: whether use a milkyway background with annotation\n   # mode: can be 'face-on' or 'edge-on'\n   # rot180: whether to rotate the plot by 180degree, putting Earth location from left hand (-8, 0)kpc to right side (8, 0)kpc\n   # grayscale: whether to turn the background image to grayscale\n\n   plot_instance = MWPlot(mode='face-on', center=(0, 0)*u.kpc, radius=90750*u.lyr,\n                          unit=u.kpc, coord='galactic', annotation=True, rot180=False, grayscale=False)\n\n   # Here are some setting you can set after setting up a MWPlot instance\n   plot_instance.title = 'you title here'  # plot title, or it can be None to show no title\n   plot_instance.fontsize = 35  # fontsize for matplotlib plotting\n   plot_instance.figsize = (20, 20)  # figsize for matplotlib plotting\n   plot_instance.dpi = 200  # dpi for matplotlib plotting\n   plot_instance.cmap = 'viridis'  # matplotlib cmap: https://matplotlib.org/examples/color/colormaps_reference.html\n   plot_instance.clim = (vmin, vmax) # colorbar range\n   plot_instance.imalpha = 0.85  # alpha value for the milkyway image\n   plot_instance.s = 50.0  # make the scatter points bigger\n   plot_instance.tight_layout = True # whether plt.tight_layout() will be run\n\n   # Here is the mw_scatter if you have an array to color the point\n   # x and y must both carry astropy unit\n   plot_instance.mw_scatter(x, y, [z, 'colorbar_title'])\n\n   # To show\n   plot_instance.show()\n\n   # To save\n   plot_instance.savefig('name.png')\n\nFor `MWSkyMap`:\n\n.. code:: python\n\n   from astropy import units as u\n   from mw_plot import MWSkyMap\n\n   # setup MWSkyMap instance, you have to specify projection: [\"equirectangular\", \"aitoff\", \"hammer\", \"lambert\", \"mollweide\"]\n   plot_instance = MWSkyMap(projection='equirectangular', center=(0, 0) * u.deg, radius = (180, 90) * u.deg)\n\n   # Here are some setting you can set after setting up a MWPlot instance\n   plot_instance.title = 'you title here'  # plot title, or it can be None to show no title\n   plot_instance.fontsize = 35  # fontsize for matplotlib plotting\n   plot_instance.figsize = (20, 20)  # figsize for matplotlib plotting\n   plot_instance.dpi = 200  # dpi for matplotlib plotting\n   plot_instance.cmap = 'viridis'  # matplotlib cmap: https://matplotlib.org/examples/color/colormaps_reference.html\n   plot_instance.clim = (vmin, vmax) # colorbar range\n   plot_instance.imalpha = 0.85  # alpha value for the milkyway image\n   plot_instance.s = 50.0  # make the scatter points bigger\n   plot_instance.tight_layout = True # whether plt.tight_layout() will be run\n\n   # Here is the mw_scatter if you have an array to color the point\n   # ra and dec must both carry astropy unit\n   plot_instance.mw_scatter(ra, dec, [z, 'colorbar_title'])\n\n   # To show\n   plot_instance.show()\n\n   # To save\n   plot_instance.savefig('name.png')\n\nThere are also some handy constants you can import\n\n.. code:: python\n\n   from mw_plot import center_coord, anti_center_coord\n   # center_coord refers to the [RA, DEC] of galactic center in deg\n   # anti_center_coord refers to the [RA, DEC] of galactic anti-center in deg\n\nExample 1: Plot Gaia DR1 and DR2 Observation with astroNN in Galactic coordinates\n------------------------------------------------------------------------------------\n\n.. image:: https://github.com/henrysky/milkyway_plot/blob/master/readme_images/example_plot_gaia.png?raw=true\n\nYou can set the coord to ``galactic`` to plot observation from Gaia. Please notice if you are using astropy's\ncoordinates transformation, they will transform under left handed frame, you have to set x = -x to flip it to\nright handed which is also the expectation of ``mw_plot``\n\n.. code:: python\n\n    from mw_plot import MWPlot\n\n    from astropy import units as  u\n    import astropy.coordinates as apycoords\n    import numpy as np\n\n    from astroNN.gaia import gaiadr2_parallax\n    from astroNN.gaia import tgas_load\n\n    # To load Gaia DR2 - APOGEE DR14 matches, indices corresponds to APOGEE allstar DR14 file\n    ra, dec, parallax, parallax_error = gaiadr2_parallax(cuts=True, keepdims=False)\n    distance = 1 / parallax * u.kpc\n    ra = ra * u.deg\n    dec = dec * u.deg\n    distance_err = parallax_error / parallax\n    c = apycoords.SkyCoord(ra=ra, dec=dec, distance=distance, frame='icrs')\n\n    # Gaia DR1\n    # To load the tgas DR1 files and return a dictionary of ra(J2015), dec(J2015), pmra, pmdec,\n    # parallax, parallax error, g-band mag\n    # cuts=True to cut bad data (negative parallax and percentage error more than 20%)\n    output = tgas_load(cuts=True)\n    ra1 = output['ra'] * u.deg  # ra(J2015)\n    dec1 = output['dec'] * u.deg  # dec(J2015)\n    distance1 = 1 / output['parallax'] * u.kpc\n    distance_err1 = output['parallax_err'] / output['parallax']\n    c_dr1 = apycoords.SkyCoord(ra=ra1, dec=dec1, distance=distance1, frame='icrs')\n\n    # setup a MWPlot instance\n    plot_instance = MWPlot(radius=12 * u.kpc, unit=u.kpc, coord='galactic')\n\n    # so that the colorbar will has a better contract\n    plot_instance.clim = (5., 15.)\n\n    # alpha value for the milkyway image\n    plot_instance.imalpha = 0.5\n\n    # set up plot title\n    plot_instance.title = 'Gaia DR2-APOGEE DR14 matches Distance with 20% error cuts'\n\n    # use mw_scatter instead of scatter because we want a colorbar\n    # need to flip the sign of x because astropy is left-handed but mw_plot is right-handed\n    plot_instance.mw_scatter(-c.galactic.cartesian.x, c.galactic.cartesian.y,\n                             [distance_err * 100, 'Gaia DR2 Distance Precentage Error'])\n\n    # On top of the main plot for DR2, plot DR1 too, need to flip the sign of x because astropy is l\n    # eft-handed but mw_plot is right-handed\n    plot_instance.scatter(-c_dr1.galactic.cartesian.x, c_dr1.galactic.cartesian.y, c='r',\n                          label='Gaia DR1 with 20% distances error cut (Red)')\n\n    # Save the figure\n    plot_instance.savefig(file='gaia.png')\n\nOr plotting with Gaia Source with RV catalog (No code is provided but you should be able to modify the code above to do that)\n\n.. image:: https://github.com/henrysky/milkyway_plot/blob/master/readme_images/gaiadr2_rv_combined.png?raw=true\n\nExample 2: Plot Dynamical Modeling of Tidal Stream using galpy\n-----------------------------------------------------------------\n\n.. image:: https://github.com/henrysky/milkyway_plot/blob/master/readme_images/tidal_streams_plot.png?raw=true\n\nYou can plot the orbit which are some scatter points on a edge-on milkyway\n\n.. code:: python\n\n    from mw_plot import MWPlot\n\n    from galpy.df import streamdf\n    from galpy.orbit import Orbit\n    from galpy.potential import LogarithmicHaloPotential\n    from galpy.actionAngle import actionAngleIsochroneApprox\n    from galpy.util import bovy_conversion  # for unit conversions\n    from astropy import units as u\n\n    # setup potential\n    lp = LogarithmicHaloPotential(normalize=1., q=0.9)\n\n    # galpy tidal streams modeling\n    aAI = actionAngleIsochroneApprox(pot=lp, b=0.8)\n    obs = Orbit([0.16148083, 0.35081535, -0.15481504, 0.48719443, -0.27713334, 0.12019596])\n    sigv = 0.365  # km/s\n    sdf = streamdf(sigv / 220., progenitor=obs, pot=lp, aA=aAI, leading=True, nTrackChunks=11,\n                   tdisrupt=40. / bovy_conversion.time_in_Gyr(220., 8.))\n\n    x = sdf._parse_track_dim('x', interp=True, phys=True)\n    y = sdf._parse_track_dim('y', interp=True, phys=True) * u.kpc\n    z = sdf._parse_track_dim('z', interp=True, phys=True) * u.kpc\n\n    # setup a MWPlot instance\n    plot_instance = MWPlot(mode='edge-on', radius=8. * u.kpc, unit=u.kpc, coord='galactocentric')\n    plot_instance.s = 10.  # make the scatter points bigger\n    plot_instance.imalpha = 1.0\n\n    # set up plot title\n    plot_instance.title = 'Orbit of Sun in 20Gyr using galpy colored by kpc above galactic plane'\n\n    # plot line of the orbit with red color and thicker line\n    plot_instance.plot(y, z, c='r', linewidth=4.0)\n\n    # Save the figure\n    plot_instance.savefig(file='tidal_streams_plot.png')\n\nExample 3: Plot Orbit of Sun Integrated by galpy\n-------------------------------------------------------\n\n.. image:: https://github.com/henrysky/milkyway_plot/blob/master/readme_images/example_plot_1.png?raw=true\n\nYou can plot the orbit which are some scatter points on a face-on milkyway\n\n.. code:: python\n\n    from mw_plot import MWPlot\n\n    from galpy.potential import MWPotential2014\n    from galpy.orbit import Orbit\n    import numpy as np\n    from astropy import units as u\n\n    # Orbit Integration using galpy for the Sun\n    op = Orbit([0., 0., 0., 0., 0., 0.], radec=True, ro=8., vo=220.)\n    ts = np.linspace(0, 5, 10000) * u.Gyr\n    op.integrate(ts, MWPotential2014)\n    x = op.x(ts) * u.kpc\n    y = op.y(ts) * u.kpc\n    z = op.z(ts)\n\n    # setup a MWPlot instance\n    plot_instance = MWPlot(radius=20 * u.kpc, unit=u.kpc, coord='galactocentric', annotation=True)\n    plot_instance.imalpha = 1.0\n    plot_instance.s = 10  # make the scatter points bigger\n\n    # set up plot title\n    plot_instance.title = 'Orbit of Sun in 5Gyr using galpy colored by kpc above galactic plane'\n\n    # use mw_scatter instead of scatter because we want a colorbar\n    plot_instance.mw_scatter(x, y, [z, 'kpc above galactic plane'])\n\n    # Save the figure\n    plot_instance.savefig(file='mw_plot.png')\n\n    # Show the figure\n    plot_instance.show()\n\nYou can turn off the annotation by putting ``annotation=False`` when creating an instance\n\n.. image:: https://github.com/henrysky/milkyway_plot/blob/master/readme_images/example_plot_1_unannotation.png?raw=true\n\nYou can also turn the background image to grayscale by ``grayscale=True`` when creating an instance\n\n.. image:: https://github.com/henrysky/milkyway_plot/blob/master/readme_images/example_plot_1_unannotation_grayscale.png?raw=true\n\nExample 4: Change the Center and Radius of the Plot\n---------------------------------------------------------\n\n.. image:: https://github.com/henrysky/milkyway_plot/blob/master/readme_images/example_plot_2.png?raw=true\n\nYou can set the center point and radius of the plot. In this case, we set (-16, -2.5) in galactic coordinates\nsuch that the plot centered at the Sun at the end of 10Gyr orbit, and set the radius as 6 kpc to close up. We will\njust set the color to red without color bar title because there is no color bar needed. Please notice the plot assumed\nthe milkyway is not moving.\n\n.. code:: python\n\n    from mw_plot import MWPlot\n\n    from galpy.potential import MWPotential2014\n    from galpy.orbit import Orbit\n    import numpy as np\n    from astropy import units as u\n\n    # Orbit Integration using galpy for the Sun\n    op = Orbit([0., 0., 0., 0., 0., 0.], radec=True, ro=8., vo=220.)\n    ts = np.linspace(0, 0.5, 10000) * u.Gyr\n    op.integrate(ts, MWPotential2014)\n    x = op.x(ts) * u.kpc\n    y = op.y(ts) * u.kpc\n    z = op.z(ts)\n\n    # setup a MWPlot instance with a certain center and radius\n    plot_instance = MWPlot(center=(-16, -2.5) * u.kpc, radius=5 * u.kpc)\n\n    # set up plot title\n    plot_instance.title = 'Orbit of Sun in 0.5 Gyr using galpy'\n\n    # plot, need to subtract 8kpc to shift to galactic coordinates in right hands frame\n    plot_instance.plot(x - 8. * u.kpc, y, c='r', linewidth=8.0)\n\n    # Save the figure\n    plot_instance.savefig(file='mw_plot_zoomed.png')\n\n    # Show the figure\n    plot_instance.show()\n\nExample 5: Plot all sky map\n---------------------------------------------------------\n\n.. image:: https://github.com/henrysky/milkyway_plot/blob/master/readme_images/adr14_gdr2_skymap.png?raw=true\n\nYou can also plot all sky map with mw_plot's MWSkyMap class\n\n.. code:: python\n\n    from mw_plot import MWSkyMap\n\n    import numpy as np\n    from astropy import units as  u\n    import astropy.coordinates as apycoords\n    from astroNN.gaia import gaiadr2_parallax\n\n    ra, dec, parallax, parallax_error = gaiadr2_parallax(cuts=.20, keepdims=False, offset=0.00)\n\n    # setup a MWSkyMap instance\n    plot_instance = MWSkyMap(projection='equirectangular')\n\n    parallax[parallax>1] = 1.\n\n    # so that the colorbar will has a better contract\n    # plot_instance.clim = (5., 15.)\n\n    # alpha value for the milkyway image\n    plot_instance.imalpha = 1.\n\n    # setup colormap\n    plot_instance.cmap='jet'\n\n    # set up plot title\n    plot_instance.title = 'APOGEE DR14 coloured by 20% error cuts Gaia Parallax'\n\n    # use mw_scatter instead of scatter because we want a colorbar\n    plot_instance.mw_scatter(ra * u.degree, dec * u.degree, [parallax, 'Gaia DR2 Parallax'])\n\n    plot_instance.savefig(file='adr14_gdr2_skymap.png')\n\n    # Show the figure\n    plot_instance.show()\n\nExample 6: Change the Center and Radius of the all sky map\n-------------------------------------------------------------\n\nYou can set the center point and radius of the plot. In this case, we set galactic longitude and latitude to kepler field\nand galactic center.\n\n.. image:: https://github.com/henrysky/milkyway_plot/blob/master/readme_images/adr14_gdr2_skymap_kepler.png?raw=true\n\n.. code:: python\n\n    from mw_plot import MWSkyMap\n\n    import numpy as np\n    from astropy import units as  u\n    import astropy.coordinates as apycoords\n    from astroNN.gaia import gaiadr2_parallax\n\n    ra, dec, parallax, parallax_error = gaiadr2_parallax(cuts=.20, keepdims=False, offset=0.00)\n\n    # setup a MWSkyMap instance\n    plot_instance = MWSkyMap(projection='equirectangular', center=(-76, 13) * u.deg, radius = (40, 20) * u.deg)\n\n    parallax[parallax>1] = 1.\n\n    # so that the colorbar will has a better contract\n    # plot_instance.clim = (5., 15.)\n\n    # alpha value for the milkyway image\n    plot_instance.imalpha = 1.\n    plot_instance.s = 10.  # make the scatter points bigger\n\n    # setup colormap\n    plot_instance.cmap='jet'\n\n    # set up plot title\n    plot_instance.title = 'APOGEE DR14 coloured by 20% error cuts Gaia Parallax'\n\n    # use mw_scatter instead of scatter because we want a colorbar\n    plot_instance.mw_scatter(ra * u.degree, dec * u.degree, [parallax, 'Gaia DR2 Parallax'])\n\n    plot_instance.savefig(file='adr14_gdr2_skymap_kepler.png')\n\n    # Show the figure\n    plot_instance.show()\n\n.. image:: https://github.com/henrysky/milkyway_plot/blob/master/readme_images/adr14_gdr2_skymap_core.png?raw=true\n\n.. code:: python\n\n    from mw_plot import MWSkyMap\n\n    import numpy as np\n    from astropy import units as  u\n    import astropy.coordinates as apycoords\n    from astroNN.gaia import gaiadr2_parallax\n\n    ra, dec, parallax, parallax_error = gaiadr2_parallax(cuts=.20, keepdims=False, offset=0.00)\n\n    # setup a MWSkyMap instance\n    plot_instance = MWSkyMap(projection='equirectangular', center=(0, 0) * u.deg, radius = (30, 30) * u.deg)\n    plot_instance.figsize = (20, 20)\n\n    parallax[parallax>1] = 1.\n\n    # so that the colorbar will has a better contract\n    # plot_instance.clim = (5., 15.)\n\n    # alpha value for the milkyway image\n    plot_instance.imalpha = 0.6\n    plot_instance.s = 10.  # make the scatter points bigger\n\n    # setup colormap\n    plot_instance.cmap='jet'\n\n    # set up plot title\n    plot_instance.title = 'APOGEE DR14 coloured by 20% error cuts Gaia Parallax'\n\n    # use mw_scatter instead of scatter because we want a colorbar\n    plot_instance.mw_scatter(ra * u.degree, dec * u.degree, [parallax, 'Gaia DR2 Parallax'])\n\n    plot_instance.savefig(file='adr14_gdr2_skymap_core.png')\n\n    # Show the figure\n    plot_instance.show()\n\nExample 7: Plot all sky map with projection\n---------------------------------------------------------\n\nYou can also plot all sky map with mw_plot's MWSkyMap class with projection\n\n.. image:: https://github.com/henrysky/milkyway_plot/blob/master/readme_images/lmc_smc_projection.png?raw=true\n\n.. code:: python\n\n    import numpy as np\n    from astropy import units as  u\n    import astropy.coordinates as apycoords\n    from galpy.orbit import Orbit\n    from mw_plot import MWSkyMap\n\n    # setup a MWSkyMap instance with projection, other projection can be 'hammer', 'mollweide' etc\n    # grayscale: whether to turn the background image to grayscale\n    plot_instance = MWSkyMap(projection='aitoff', grayscale=False)\n\n    # so that the colorbar will has a better contract\n    # plot_instance.clim = (5., 15.)\n\n    # alpha value for the milkyway image\n    plot_instance.imalpha = 1.\n\n    # set up plot title\n    plot_instance.title = 'LMC and SMC in red dots'\n    plot_instance.s = 200\n\n    # LMC and SMC coordinates, get coordinates with galpy from_name\n    lsmc_ra = [Orbit.from_name('LMC').ra(), Orbit.from_name('SMC').ra()] * u.degree\n    lsmc_dec = [Orbit.from_name('LMC').dec(), Orbit.from_name('SMC').dec()] * u.degree\n\n    # use mw_scatter instead of scatter\n    plot_instance.mw_scatter(lsmc_ra, lsmc_dec, 'r')\n\n    plot_instance.savefig(file='lmc_smc_projection.png')\n\n    # Show the figure\n    plot_instance.show()\n\nLicense\n---------------------------------------------------------\n\nThis project is licensed under the MIT License - see the `LICENSE`_ file for details\n\n.. _LICENSE: LICENSE", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/henrysky/milkyway_plot", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mw-plot", "package_url": "https://pypi.org/project/mw-plot/", "platform": "", "project_url": "https://pypi.org/project/mw-plot/", "project_urls": {"Bug Tracker": "https://github.com/henrysky/milkyway_plot/issues", "Documentation": "https://github.com/henrysky/milkyway_plot", "Homepage": "https://github.com/henrysky/milkyway_plot", "Source Code": "https://github.com/henrysky/milkyway_plot/"}, "release_url": "https://pypi.org/project/mw-plot/0.6.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A handy python package to do plotting on a face-on/edge-on/allsky map milkyway with matplotlib", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A handy python package to do plotting on a face-on/edge-on milkyway/skymap with matplotlib.\nYou can set the center and radius of the plot anywhere on a milkyway galaxy image with galactic or\ngalactocentric coordinates.</p>\n<p>Both <tt>MW_bg_annotate.jpg</tt> and <tt>MW_bg_unannotate.jpg</tt> are modified from an images by <strong>NASA/JPL-Caltech/R. Hurt (SSC/Caltech)</strong>\nBoth images are 5600x5600px with resolution of 24.2 light years per pixel.</p>\n<p><tt>MW_edgeon_unannotate.jpg</tt> is modified from an images by <strong>ESA/Gaia/DPAC</strong>.\nThe image is 6500x6500px with resolution of 15.38 light years per pixel taken by ESA Gaia DR2.</p>\n<p><tt>mw_plot</tt> will fill black pixel for region outside the pre-compiled images. No acknowledgement to <tt>mw_plot</tt>\nis required if you generate plots for your non-commerical publication, but you <strong>must acknowledgement the origin of\nthe background images</strong> provided above.</p>\n<div id=\"author\">\n<h2>Author</h2>\n<ul>\n<li><div>\n<div><strong>Henry Leung</strong> - <em>Initial work and developer</em> - <a href=\"https://github.com/henrysky\" rel=\"nofollow\">henrysky</a></div>\n<div>Contact Henry: henrysky.leung [at] utoronto.ca</div>\n</div>\n</li>\n</ul>\n</div>\n<div id=\"system-requirement\">\n<h2>System Requirement</h2>\n<ul>\n<li><div>\n<div><strong>Python</strong> 3.6 or above</div>\n</div>\n</li>\n<li><div>\n<div><strong>astropy</strong> 3.0 or above</div>\n</div>\n</li>\n<li><div>\n<div><strong>Numpy</strong> 1.16.0 or above</div>\n</div>\n</li>\n<li><div>\n<div><strong>Matplotlib</strong> 3.1.0 above</div>\n</div>\n</li>\n<li><div>\n<div><strong>Pillow</strong> 5.0.0 above</div>\n</div>\n</li>\n</ul>\n<p>Matplotlib 2.2.3 has trouble to save pdf plot with this package. Please use Matplotlib &gt;3.0 if you experience issue</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>To install via <tt>pip</tt></p>\n<pre>$ pip install mw_plot\n</pre>\n<p>If something is not working properly, try to upgrade first and then report it as an issue</p>\n<pre>$ pip install mw_plot --upgrade\n</pre>\n<p>OR clone the latest commit of mw_plot from github and install</p>\n<pre>$ git clone --depth<span class=\"o\">=</span><span class=\"m\">1</span> git://github.com/henrysky/milkyway_plot\n$ python setup.py install\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<p>This python package consists of two classes - <cite>MWPlot</cite> and <cite>MWSkyMap</cite>. <cite>MWPlot</cite> is used to plot things on a face-on/edge-on milkyway\nwith galactic/galactocentric coordinates. <cite>MWSkyMap</cite> is used to plot skymap with milkyway background with RA/DEC.</p>\n<p>For <cite>MWPlot</cite>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">astropy</span> <span class=\"kn\">import</span> <span class=\"n\">units</span> <span class=\"k\">as</span> <span class=\"n\">u</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mw_plot</span> <span class=\"kn\">import</span> <span class=\"n\">MWPlot</span>\n\n<span class=\"c1\"># setup MWPlot instance, you have to specify center, radius, unit with astropy unit and choice of coord</span>\n<span class=\"c1\"># or not specifying any to use default value shown below</span>\n<span class=\"c1\"># center: Coordinates of the center of the plot, you cannot change this after creating the instance</span>\n<span class=\"c1\"># radius: Radius of the plot, you cannot change this after creating the instance</span>\n<span class=\"c1\"># coord: can be 'galactocentric' or 'galactic'</span>\n<span class=\"c1\"># annotation: whether use a milkyway background with annotation</span>\n<span class=\"c1\"># mode: can be 'face-on' or 'edge-on'</span>\n<span class=\"c1\"># rot180: whether to rotate the plot by 180degree, putting Earth location from left hand (-8, 0)kpc to right side (8, 0)kpc</span>\n<span class=\"c1\"># grayscale: whether to turn the background image to grayscale</span>\n\n<span class=\"n\">plot_instance</span> <span class=\"o\">=</span> <span class=\"n\">MWPlot</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'face-on'</span><span class=\"p\">,</span> <span class=\"n\">center</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"mi\">90750</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">lyr</span><span class=\"p\">,</span>\n                       <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span><span class=\"p\">,</span> <span class=\"n\">coord</span><span class=\"o\">=</span><span class=\"s1\">'galactic'</span><span class=\"p\">,</span> <span class=\"n\">annotation</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">rot180</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">grayscale</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Here are some setting you can set after setting up a MWPlot instance</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">'you title here'</span>  <span class=\"c1\"># plot title, or it can be None to show no title</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">fontsize</span> <span class=\"o\">=</span> <span class=\"mi\">35</span>  <span class=\"c1\"># fontsize for matplotlib plotting</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">figsize</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>  <span class=\"c1\"># figsize for matplotlib plotting</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">dpi</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>  <span class=\"c1\"># dpi for matplotlib plotting</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">cmap</span> <span class=\"o\">=</span> <span class=\"s1\">'viridis'</span>  <span class=\"c1\"># matplotlib cmap: https://matplotlib.org/examples/color/colormaps_reference.html</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">clim</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">vmin</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"p\">)</span> <span class=\"c1\"># colorbar range</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">imalpha</span> <span class=\"o\">=</span> <span class=\"mf\">0.85</span>  <span class=\"c1\"># alpha value for the milkyway image</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"mf\">50.0</span>  <span class=\"c1\"># make the scatter points bigger</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">tight_layout</span> <span class=\"o\">=</span> <span class=\"kc\">True</span> <span class=\"c1\"># whether plt.tight_layout() will be run</span>\n\n<span class=\"c1\"># Here is the mw_scatter if you have an array to color the point</span>\n<span class=\"c1\"># x and y must both carry astropy unit</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">mw_scatter</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"s1\">'colorbar_title'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># To show</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># To save</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">'name.png'</span><span class=\"p\">)</span>\n</pre>\n<p>For <cite>MWSkyMap</cite>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">astropy</span> <span class=\"kn\">import</span> <span class=\"n\">units</span> <span class=\"k\">as</span> <span class=\"n\">u</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mw_plot</span> <span class=\"kn\">import</span> <span class=\"n\">MWSkyMap</span>\n\n<span class=\"c1\"># setup MWSkyMap instance, you have to specify projection: [\"equirectangular\", \"aitoff\", \"hammer\", \"lambert\", \"mollweide\"]</span>\n<span class=\"n\">plot_instance</span> <span class=\"o\">=</span> <span class=\"n\">MWSkyMap</span><span class=\"p\">(</span><span class=\"n\">projection</span><span class=\"o\">=</span><span class=\"s1\">'equirectangular'</span><span class=\"p\">,</span> <span class=\"n\">center</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">deg</span><span class=\"p\">,</span> <span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">deg</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Here are some setting you can set after setting up a MWPlot instance</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">'you title here'</span>  <span class=\"c1\"># plot title, or it can be None to show no title</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">fontsize</span> <span class=\"o\">=</span> <span class=\"mi\">35</span>  <span class=\"c1\"># fontsize for matplotlib plotting</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">figsize</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>  <span class=\"c1\"># figsize for matplotlib plotting</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">dpi</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>  <span class=\"c1\"># dpi for matplotlib plotting</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">cmap</span> <span class=\"o\">=</span> <span class=\"s1\">'viridis'</span>  <span class=\"c1\"># matplotlib cmap: https://matplotlib.org/examples/color/colormaps_reference.html</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">clim</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">vmin</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"p\">)</span> <span class=\"c1\"># colorbar range</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">imalpha</span> <span class=\"o\">=</span> <span class=\"mf\">0.85</span>  <span class=\"c1\"># alpha value for the milkyway image</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"mf\">50.0</span>  <span class=\"c1\"># make the scatter points bigger</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">tight_layout</span> <span class=\"o\">=</span> <span class=\"kc\">True</span> <span class=\"c1\"># whether plt.tight_layout() will be run</span>\n\n<span class=\"c1\"># Here is the mw_scatter if you have an array to color the point</span>\n<span class=\"c1\"># ra and dec must both carry astropy unit</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">mw_scatter</span><span class=\"p\">(</span><span class=\"n\">ra</span><span class=\"p\">,</span> <span class=\"n\">dec</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"s1\">'colorbar_title'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># To show</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># To save</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">'name.png'</span><span class=\"p\">)</span>\n</pre>\n<p>There are also some handy constants you can import</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mw_plot</span> <span class=\"kn\">import</span> <span class=\"n\">center_coord</span><span class=\"p\">,</span> <span class=\"n\">anti_center_coord</span>\n<span class=\"c1\"># center_coord refers to the [RA, DEC] of galactic center in deg</span>\n<span class=\"c1\"># anti_center_coord refers to the [RA, DEC] of galactic anti-center in deg</span>\n</pre>\n</div>\n<div id=\"example-1-plot-gaia-dr1-and-dr2-observation-with-astronn-in-galactic-coordinates\">\n<h2>Example 1: Plot Gaia DR1 and DR2 Observation with astroNN in Galactic coordinates</h2>\n<img alt=\"https://github.com/henrysky/milkyway_plot/blob/master/readme_images/example_plot_gaia.png?raw=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd147190293b576b826a18b3e96b53b4f3b3181f/68747470733a2f2f6769746875622e636f6d2f68656e7279736b792f6d696c6b797761795f706c6f742f626c6f622f6d61737465722f726561646d655f696d616765732f6578616d706c655f706c6f745f676169612e706e673f7261773d74727565\">\n<p>You can set the coord to <tt>galactic</tt> to plot observation from Gaia. Please notice if you are using astropy\u2019s\ncoordinates transformation, they will transform under left handed frame, you have to set x = -x to flip it to\nright handed which is also the expectation of <tt>mw_plot</tt></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mw_plot</span> <span class=\"kn\">import</span> <span class=\"n\">MWPlot</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">astropy</span> <span class=\"kn\">import</span> <span class=\"n\">units</span> <span class=\"k\">as</span>  <span class=\"n\">u</span>\n<span class=\"kn\">import</span> <span class=\"nn\">astropy.coordinates</span> <span class=\"k\">as</span> <span class=\"nn\">apycoords</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">astroNN.gaia</span> <span class=\"kn\">import</span> <span class=\"n\">gaiadr2_parallax</span>\n<span class=\"kn\">from</span> <span class=\"nn\">astroNN.gaia</span> <span class=\"kn\">import</span> <span class=\"n\">tgas_load</span>\n\n<span class=\"c1\"># To load Gaia DR2 - APOGEE DR14 matches, indices corresponds to APOGEE allstar DR14 file</span>\n<span class=\"n\">ra</span><span class=\"p\">,</span> <span class=\"n\">dec</span><span class=\"p\">,</span> <span class=\"n\">parallax</span><span class=\"p\">,</span> <span class=\"n\">parallax_error</span> <span class=\"o\">=</span> <span class=\"n\">gaiadr2_parallax</span><span class=\"p\">(</span><span class=\"n\">cuts</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">keepdims</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">distance</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"n\">parallax</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span>\n<span class=\"n\">ra</span> <span class=\"o\">=</span> <span class=\"n\">ra</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">deg</span>\n<span class=\"n\">dec</span> <span class=\"o\">=</span> <span class=\"n\">dec</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">deg</span>\n<span class=\"n\">distance_err</span> <span class=\"o\">=</span> <span class=\"n\">parallax_error</span> <span class=\"o\">/</span> <span class=\"n\">parallax</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">apycoords</span><span class=\"o\">.</span><span class=\"n\">SkyCoord</span><span class=\"p\">(</span><span class=\"n\">ra</span><span class=\"o\">=</span><span class=\"n\">ra</span><span class=\"p\">,</span> <span class=\"n\">dec</span><span class=\"o\">=</span><span class=\"n\">dec</span><span class=\"p\">,</span> <span class=\"n\">distance</span><span class=\"o\">=</span><span class=\"n\">distance</span><span class=\"p\">,</span> <span class=\"n\">frame</span><span class=\"o\">=</span><span class=\"s1\">'icrs'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Gaia DR1</span>\n<span class=\"c1\"># To load the tgas DR1 files and return a dictionary of ra(J2015), dec(J2015), pmra, pmdec,</span>\n<span class=\"c1\"># parallax, parallax error, g-band mag</span>\n<span class=\"c1\"># cuts=True to cut bad data (negative parallax and percentage error more than 20%)</span>\n<span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">tgas_load</span><span class=\"p\">(</span><span class=\"n\">cuts</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">ra1</span> <span class=\"o\">=</span> <span class=\"n\">output</span><span class=\"p\">[</span><span class=\"s1\">'ra'</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">deg</span>  <span class=\"c1\"># ra(J2015)</span>\n<span class=\"n\">dec1</span> <span class=\"o\">=</span> <span class=\"n\">output</span><span class=\"p\">[</span><span class=\"s1\">'dec'</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">deg</span>  <span class=\"c1\"># dec(J2015)</span>\n<span class=\"n\">distance1</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"n\">output</span><span class=\"p\">[</span><span class=\"s1\">'parallax'</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span>\n<span class=\"n\">distance_err1</span> <span class=\"o\">=</span> <span class=\"n\">output</span><span class=\"p\">[</span><span class=\"s1\">'parallax_err'</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">output</span><span class=\"p\">[</span><span class=\"s1\">'parallax'</span><span class=\"p\">]</span>\n<span class=\"n\">c_dr1</span> <span class=\"o\">=</span> <span class=\"n\">apycoords</span><span class=\"o\">.</span><span class=\"n\">SkyCoord</span><span class=\"p\">(</span><span class=\"n\">ra</span><span class=\"o\">=</span><span class=\"n\">ra1</span><span class=\"p\">,</span> <span class=\"n\">dec</span><span class=\"o\">=</span><span class=\"n\">dec1</span><span class=\"p\">,</span> <span class=\"n\">distance</span><span class=\"o\">=</span><span class=\"n\">distance1</span><span class=\"p\">,</span> <span class=\"n\">frame</span><span class=\"o\">=</span><span class=\"s1\">'icrs'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># setup a MWPlot instance</span>\n<span class=\"n\">plot_instance</span> <span class=\"o\">=</span> <span class=\"n\">MWPlot</span><span class=\"p\">(</span><span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"mi\">12</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span><span class=\"p\">,</span> <span class=\"n\">coord</span><span class=\"o\">=</span><span class=\"s1\">'galactic'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># so that the colorbar will has a better contract</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">clim</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">5.</span><span class=\"p\">,</span> <span class=\"mf\">15.</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># alpha value for the milkyway image</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">imalpha</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>\n\n<span class=\"c1\"># set up plot title</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">'Gaia DR2-APOGEE DR14 matches Distance with 20</span><span class=\"si\">% e</span><span class=\"s1\">rror cuts'</span>\n\n<span class=\"c1\"># use mw_scatter instead of scatter because we want a colorbar</span>\n<span class=\"c1\"># need to flip the sign of x because astropy is left-handed but mw_plot is right-handed</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">mw_scatter</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">galactic</span><span class=\"o\">.</span><span class=\"n\">cartesian</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">galactic</span><span class=\"o\">.</span><span class=\"n\">cartesian</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">,</span>\n                         <span class=\"p\">[</span><span class=\"n\">distance_err</span> <span class=\"o\">*</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"s1\">'Gaia DR2 Distance Precentage Error'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># On top of the main plot for DR2, plot DR1 too, need to flip the sign of x because astropy is l</span>\n<span class=\"c1\"># eft-handed but mw_plot is right-handed</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">c_dr1</span><span class=\"o\">.</span><span class=\"n\">galactic</span><span class=\"o\">.</span><span class=\"n\">cartesian</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">c_dr1</span><span class=\"o\">.</span><span class=\"n\">galactic</span><span class=\"o\">.</span><span class=\"n\">cartesian</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">'r'</span><span class=\"p\">,</span>\n                      <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">'Gaia DR1 with 20</span><span class=\"si\">% d</span><span class=\"s1\">istances error cut (Red)'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Save the figure</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">=</span><span class=\"s1\">'gaia.png'</span><span class=\"p\">)</span>\n</pre>\n<p>Or plotting with Gaia Source with RV catalog (No code is provided but you should be able to modify the code above to do that)</p>\n<img alt=\"https://github.com/henrysky/milkyway_plot/blob/master/readme_images/gaiadr2_rv_combined.png?raw=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/30f02cb6df0e7d47eca46dc67abd3a77d9f27547/68747470733a2f2f6769746875622e636f6d2f68656e7279736b792f6d696c6b797761795f706c6f742f626c6f622f6d61737465722f726561646d655f696d616765732f676169616472325f72765f636f6d62696e65642e706e673f7261773d74727565\">\n</div>\n<div id=\"example-2-plot-dynamical-modeling-of-tidal-stream-using-galpy\">\n<h2>Example 2: Plot Dynamical Modeling of Tidal Stream using galpy</h2>\n<img alt=\"https://github.com/henrysky/milkyway_plot/blob/master/readme_images/tidal_streams_plot.png?raw=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c81e9e3e9a38580c18543967ae116143deacbcfc/68747470733a2f2f6769746875622e636f6d2f68656e7279736b792f6d696c6b797761795f706c6f742f626c6f622f6d61737465722f726561646d655f696d616765732f746964616c5f73747265616d735f706c6f742e706e673f7261773d74727565\">\n<p>You can plot the orbit which are some scatter points on a edge-on milkyway</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mw_plot</span> <span class=\"kn\">import</span> <span class=\"n\">MWPlot</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">galpy.df</span> <span class=\"kn\">import</span> <span class=\"n\">streamdf</span>\n<span class=\"kn\">from</span> <span class=\"nn\">galpy.orbit</span> <span class=\"kn\">import</span> <span class=\"n\">Orbit</span>\n<span class=\"kn\">from</span> <span class=\"nn\">galpy.potential</span> <span class=\"kn\">import</span> <span class=\"n\">LogarithmicHaloPotential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">galpy.actionAngle</span> <span class=\"kn\">import</span> <span class=\"n\">actionAngleIsochroneApprox</span>\n<span class=\"kn\">from</span> <span class=\"nn\">galpy.util</span> <span class=\"kn\">import</span> <span class=\"n\">bovy_conversion</span>  <span class=\"c1\"># for unit conversions</span>\n<span class=\"kn\">from</span> <span class=\"nn\">astropy</span> <span class=\"kn\">import</span> <span class=\"n\">units</span> <span class=\"k\">as</span> <span class=\"n\">u</span>\n\n<span class=\"c1\"># setup potential</span>\n<span class=\"n\">lp</span> <span class=\"o\">=</span> <span class=\"n\">LogarithmicHaloPotential</span><span class=\"p\">(</span><span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"n\">q</span><span class=\"o\">=</span><span class=\"mf\">0.9</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># galpy tidal streams modeling</span>\n<span class=\"n\">aAI</span> <span class=\"o\">=</span> <span class=\"n\">actionAngleIsochroneApprox</span><span class=\"p\">(</span><span class=\"n\">pot</span><span class=\"o\">=</span><span class=\"n\">lp</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mf\">0.8</span><span class=\"p\">)</span>\n<span class=\"n\">obs</span> <span class=\"o\">=</span> <span class=\"n\">Orbit</span><span class=\"p\">([</span><span class=\"mf\">0.16148083</span><span class=\"p\">,</span> <span class=\"mf\">0.35081535</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.15481504</span><span class=\"p\">,</span> <span class=\"mf\">0.48719443</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.27713334</span><span class=\"p\">,</span> <span class=\"mf\">0.12019596</span><span class=\"p\">])</span>\n<span class=\"n\">sigv</span> <span class=\"o\">=</span> <span class=\"mf\">0.365</span>  <span class=\"c1\"># km/s</span>\n<span class=\"n\">sdf</span> <span class=\"o\">=</span> <span class=\"n\">streamdf</span><span class=\"p\">(</span><span class=\"n\">sigv</span> <span class=\"o\">/</span> <span class=\"mf\">220.</span><span class=\"p\">,</span> <span class=\"n\">progenitor</span><span class=\"o\">=</span><span class=\"n\">obs</span><span class=\"p\">,</span> <span class=\"n\">pot</span><span class=\"o\">=</span><span class=\"n\">lp</span><span class=\"p\">,</span> <span class=\"n\">aA</span><span class=\"o\">=</span><span class=\"n\">aAI</span><span class=\"p\">,</span> <span class=\"n\">leading</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">nTrackChunks</span><span class=\"o\">=</span><span class=\"mi\">11</span><span class=\"p\">,</span>\n               <span class=\"n\">tdisrupt</span><span class=\"o\">=</span><span class=\"mf\">40.</span> <span class=\"o\">/</span> <span class=\"n\">bovy_conversion</span><span class=\"o\">.</span><span class=\"n\">time_in_Gyr</span><span class=\"p\">(</span><span class=\"mf\">220.</span><span class=\"p\">,</span> <span class=\"mf\">8.</span><span class=\"p\">))</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">sdf</span><span class=\"o\">.</span><span class=\"n\">_parse_track_dim</span><span class=\"p\">(</span><span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"n\">interp</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">phys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">sdf</span><span class=\"o\">.</span><span class=\"n\">_parse_track_dim</span><span class=\"p\">(</span><span class=\"s1\">'y'</span><span class=\"p\">,</span> <span class=\"n\">interp</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">phys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span>\n<span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">sdf</span><span class=\"o\">.</span><span class=\"n\">_parse_track_dim</span><span class=\"p\">(</span><span class=\"s1\">'z'</span><span class=\"p\">,</span> <span class=\"n\">interp</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">phys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span>\n\n<span class=\"c1\"># setup a MWPlot instance</span>\n<span class=\"n\">plot_instance</span> <span class=\"o\">=</span> <span class=\"n\">MWPlot</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'edge-on'</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"mf\">8.</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span><span class=\"p\">,</span> <span class=\"n\">coord</span><span class=\"o\">=</span><span class=\"s1\">'galactocentric'</span><span class=\"p\">)</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"mf\">10.</span>  <span class=\"c1\"># make the scatter points bigger</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">imalpha</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n\n<span class=\"c1\"># set up plot title</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">'Orbit of Sun in 20Gyr using galpy colored by kpc above galactic plane'</span>\n\n<span class=\"c1\"># plot line of the orbit with red color and thicker line</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">'r'</span><span class=\"p\">,</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">4.0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Save the figure</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">=</span><span class=\"s1\">'tidal_streams_plot.png'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"example-3-plot-orbit-of-sun-integrated-by-galpy\">\n<h2>Example 3: Plot Orbit of Sun Integrated by galpy</h2>\n<img alt=\"https://github.com/henrysky/milkyway_plot/blob/master/readme_images/example_plot_1.png?raw=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cde460be9514f87adc1370dad1f9a16be8d54790/68747470733a2f2f6769746875622e636f6d2f68656e7279736b792f6d696c6b797761795f706c6f742f626c6f622f6d61737465722f726561646d655f696d616765732f6578616d706c655f706c6f745f312e706e673f7261773d74727565\">\n<p>You can plot the orbit which are some scatter points on a face-on milkyway</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mw_plot</span> <span class=\"kn\">import</span> <span class=\"n\">MWPlot</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">galpy.potential</span> <span class=\"kn\">import</span> <span class=\"n\">MWPotential2014</span>\n<span class=\"kn\">from</span> <span class=\"nn\">galpy.orbit</span> <span class=\"kn\">import</span> <span class=\"n\">Orbit</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">astropy</span> <span class=\"kn\">import</span> <span class=\"n\">units</span> <span class=\"k\">as</span> <span class=\"n\">u</span>\n\n<span class=\"c1\"># Orbit Integration using galpy for the Sun</span>\n<span class=\"n\">op</span> <span class=\"o\">=</span> <span class=\"n\">Orbit</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span> <span class=\"n\">radec</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">ro</span><span class=\"o\">=</span><span class=\"mf\">8.</span><span class=\"p\">,</span> <span class=\"n\">vo</span><span class=\"o\">=</span><span class=\"mf\">220.</span><span class=\"p\">)</span>\n<span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">Gyr</span>\n<span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">integrate</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">,</span> <span class=\"n\">MWPotential2014</span><span class=\"p\">)</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span>\n<span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">z</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># setup a MWPlot instance</span>\n<span class=\"n\">plot_instance</span> <span class=\"o\">=</span> <span class=\"n\">MWPlot</span><span class=\"p\">(</span><span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"mi\">20</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span><span class=\"p\">,</span> <span class=\"n\">coord</span><span class=\"o\">=</span><span class=\"s1\">'galactocentric'</span><span class=\"p\">,</span> <span class=\"n\">annotation</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">imalpha</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>  <span class=\"c1\"># make the scatter points bigger</span>\n\n<span class=\"c1\"># set up plot title</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">'Orbit of Sun in 5Gyr using galpy colored by kpc above galactic plane'</span>\n\n<span class=\"c1\"># use mw_scatter instead of scatter because we want a colorbar</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">mw_scatter</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"s1\">'kpc above galactic plane'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Save the figure</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">=</span><span class=\"s1\">'mw_plot.png'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Show the figure</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p>You can turn off the annotation by putting <tt>annotation=False</tt> when creating an instance</p>\n<img alt=\"https://github.com/henrysky/milkyway_plot/blob/master/readme_images/example_plot_1_unannotation.png?raw=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0fb3880045decb259df6b0eaab401a4292e58605/68747470733a2f2f6769746875622e636f6d2f68656e7279736b792f6d696c6b797761795f706c6f742f626c6f622f6d61737465722f726561646d655f696d616765732f6578616d706c655f706c6f745f315f756e616e6e6f746174696f6e2e706e673f7261773d74727565\">\n<p>You can also turn the background image to grayscale by <tt>grayscale=True</tt> when creating an instance</p>\n<img alt=\"https://github.com/henrysky/milkyway_plot/blob/master/readme_images/example_plot_1_unannotation_grayscale.png?raw=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/07aacd85d00b8a79b57f739321ea56e4321362ad/68747470733a2f2f6769746875622e636f6d2f68656e7279736b792f6d696c6b797761795f706c6f742f626c6f622f6d61737465722f726561646d655f696d616765732f6578616d706c655f706c6f745f315f756e616e6e6f746174696f6e5f677261797363616c652e706e673f7261773d74727565\">\n</div>\n<div id=\"example-4-change-the-center-and-radius-of-the-plot\">\n<h2>Example 4: Change the Center and Radius of the Plot</h2>\n<img alt=\"https://github.com/henrysky/milkyway_plot/blob/master/readme_images/example_plot_2.png?raw=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/552e973a76bb99349890b7373ff9a031dbfbb625/68747470733a2f2f6769746875622e636f6d2f68656e7279736b792f6d696c6b797761795f706c6f742f626c6f622f6d61737465722f726561646d655f696d616765732f6578616d706c655f706c6f745f322e706e673f7261773d74727565\">\n<p>You can set the center point and radius of the plot. In this case, we set (-16, -2.5) in galactic coordinates\nsuch that the plot centered at the Sun at the end of 10Gyr orbit, and set the radius as 6 kpc to close up. We will\njust set the color to red without color bar title because there is no color bar needed. Please notice the plot assumed\nthe milkyway is not moving.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mw_plot</span> <span class=\"kn\">import</span> <span class=\"n\">MWPlot</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">galpy.potential</span> <span class=\"kn\">import</span> <span class=\"n\">MWPotential2014</span>\n<span class=\"kn\">from</span> <span class=\"nn\">galpy.orbit</span> <span class=\"kn\">import</span> <span class=\"n\">Orbit</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">astropy</span> <span class=\"kn\">import</span> <span class=\"n\">units</span> <span class=\"k\">as</span> <span class=\"n\">u</span>\n\n<span class=\"c1\"># Orbit Integration using galpy for the Sun</span>\n<span class=\"n\">op</span> <span class=\"o\">=</span> <span class=\"n\">Orbit</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span> <span class=\"n\">radec</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">ro</span><span class=\"o\">=</span><span class=\"mf\">8.</span><span class=\"p\">,</span> <span class=\"n\">vo</span><span class=\"o\">=</span><span class=\"mf\">220.</span><span class=\"p\">)</span>\n<span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">Gyr</span>\n<span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">integrate</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">,</span> <span class=\"n\">MWPotential2014</span><span class=\"p\">)</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span>\n<span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">z</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># setup a MWPlot instance with a certain center and radius</span>\n<span class=\"n\">plot_instance</span> <span class=\"o\">=</span> <span class=\"n\">MWPlot</span><span class=\"p\">(</span><span class=\"n\">center</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">2.5</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"mi\">5</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set up plot title</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">'Orbit of Sun in 0.5 Gyr using galpy'</span>\n\n<span class=\"c1\"># plot, need to subtract 8kpc to shift to galactic coordinates in right hands frame</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"mf\">8.</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kpc</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">'r'</span><span class=\"p\">,</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">8.0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Save the figure</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">=</span><span class=\"s1\">'mw_plot_zoomed.png'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Show the figure</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"example-5-plot-all-sky-map\">\n<h2>Example 5: Plot all sky map</h2>\n<img alt=\"https://github.com/henrysky/milkyway_plot/blob/master/readme_images/adr14_gdr2_skymap.png?raw=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8eb9f98d00e940235723be7fe1a79a3adae63d3/68747470733a2f2f6769746875622e636f6d2f68656e7279736b792f6d696c6b797761795f706c6f742f626c6f622f6d61737465722f726561646d655f696d616765732f61647231345f676472325f736b796d61702e706e673f7261773d74727565\">\n<p>You can also plot all sky map with mw_plot\u2019s MWSkyMap class</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mw_plot</span> <span class=\"kn\">import</span> <span class=\"n\">MWSkyMap</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">astropy</span> <span class=\"kn\">import</span> <span class=\"n\">units</span> <span class=\"k\">as</span>  <span class=\"n\">u</span>\n<span class=\"kn\">import</span> <span class=\"nn\">astropy.coordinates</span> <span class=\"k\">as</span> <span class=\"nn\">apycoords</span>\n<span class=\"kn\">from</span> <span class=\"nn\">astroNN.gaia</span> <span class=\"kn\">import</span> <span class=\"n\">gaiadr2_parallax</span>\n\n<span class=\"n\">ra</span><span class=\"p\">,</span> <span class=\"n\">dec</span><span class=\"p\">,</span> <span class=\"n\">parallax</span><span class=\"p\">,</span> <span class=\"n\">parallax_error</span> <span class=\"o\">=</span> <span class=\"n\">gaiadr2_parallax</span><span class=\"p\">(</span><span class=\"n\">cuts</span><span class=\"o\">=.</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">keepdims</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"mf\">0.00</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># setup a MWSkyMap instance</span>\n<span class=\"n\">plot_instance</span> <span class=\"o\">=</span> <span class=\"n\">MWSkyMap</span><span class=\"p\">(</span><span class=\"n\">projection</span><span class=\"o\">=</span><span class=\"s1\">'equirectangular'</span><span class=\"p\">)</span>\n\n<span class=\"n\">parallax</span><span class=\"p\">[</span><span class=\"n\">parallax</span><span class=\"o\">&gt;</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">1.</span>\n\n<span class=\"c1\"># so that the colorbar will has a better contract</span>\n<span class=\"c1\"># plot_instance.clim = (5., 15.)</span>\n\n<span class=\"c1\"># alpha value for the milkyway image</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">imalpha</span> <span class=\"o\">=</span> <span class=\"mf\">1.</span>\n\n<span class=\"c1\"># setup colormap</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">'jet'</span>\n\n<span class=\"c1\"># set up plot title</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">'APOGEE DR14 coloured by 20</span><span class=\"si\">% e</span><span class=\"s1\">rror cuts Gaia Parallax'</span>\n\n<span class=\"c1\"># use mw_scatter instead of scatter because we want a colorbar</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">mw_scatter</span><span class=\"p\">(</span><span class=\"n\">ra</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">degree</span><span class=\"p\">,</span> <span class=\"n\">dec</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">degree</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">parallax</span><span class=\"p\">,</span> <span class=\"s1\">'Gaia DR2 Parallax'</span><span class=\"p\">])</span>\n\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">=</span><span class=\"s1\">'adr14_gdr2_skymap.png'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Show the figure</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"example-6-change-the-center-and-radius-of-the-all-sky-map\">\n<h2>Example 6: Change the Center and Radius of the all sky map</h2>\n<p>You can set the center point and radius of the plot. In this case, we set galactic longitude and latitude to kepler field\nand galactic center.</p>\n<img alt=\"https://github.com/henrysky/milkyway_plot/blob/master/readme_images/adr14_gdr2_skymap_kepler.png?raw=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5da95fc8ce967d7e10cf2f9e5e2f9e06b35f75c3/68747470733a2f2f6769746875622e636f6d2f68656e7279736b792f6d696c6b797761795f706c6f742f626c6f622f6d61737465722f726561646d655f696d616765732f61647231345f676472325f736b796d61705f6b65706c65722e706e673f7261773d74727565\">\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mw_plot</span> <span class=\"kn\">import</span> <span class=\"n\">MWSkyMap</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">astropy</span> <span class=\"kn\">import</span> <span class=\"n\">units</span> <span class=\"k\">as</span>  <span class=\"n\">u</span>\n<span class=\"kn\">import</span> <span class=\"nn\">astropy.coordinates</span> <span class=\"k\">as</span> <span class=\"nn\">apycoords</span>\n<span class=\"kn\">from</span> <span class=\"nn\">astroNN.gaia</span> <span class=\"kn\">import</span> <span class=\"n\">gaiadr2_parallax</span>\n\n<span class=\"n\">ra</span><span class=\"p\">,</span> <span class=\"n\">dec</span><span class=\"p\">,</span> <span class=\"n\">parallax</span><span class=\"p\">,</span> <span class=\"n\">parallax_error</span> <span class=\"o\">=</span> <span class=\"n\">gaiadr2_parallax</span><span class=\"p\">(</span><span class=\"n\">cuts</span><span class=\"o\">=.</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">keepdims</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"mf\">0.00</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># setup a MWSkyMap instance</span>\n<span class=\"n\">plot_instance</span> <span class=\"o\">=</span> <span class=\"n\">MWSkyMap</span><span class=\"p\">(</span><span class=\"n\">projection</span><span class=\"o\">=</span><span class=\"s1\">'equirectangular'</span><span class=\"p\">,</span> <span class=\"n\">center</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">76</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">deg</span><span class=\"p\">,</span> <span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">deg</span><span class=\"p\">)</span>\n\n<span class=\"n\">parallax</span><span class=\"p\">[</span><span class=\"n\">parallax</span><span class=\"o\">&gt;</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">1.</span>\n\n<span class=\"c1\"># so that the colorbar will has a better contract</span>\n<span class=\"c1\"># plot_instance.clim = (5., 15.)</span>\n\n<span class=\"c1\"># alpha value for the milkyway image</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">imalpha</span> <span class=\"o\">=</span> <span class=\"mf\">1.</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"mf\">10.</span>  <span class=\"c1\"># make the scatter points bigger</span>\n\n<span class=\"c1\"># setup colormap</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">'jet'</span>\n\n<span class=\"c1\"># set up plot title</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">'APOGEE DR14 coloured by 20</span><span class=\"si\">% e</span><span class=\"s1\">rror cuts Gaia Parallax'</span>\n\n<span class=\"c1\"># use mw_scatter instead of scatter because we want a colorbar</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">mw_scatter</span><span class=\"p\">(</span><span class=\"n\">ra</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">degree</span><span class=\"p\">,</span> <span class=\"n\">dec</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">degree</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">parallax</span><span class=\"p\">,</span> <span class=\"s1\">'Gaia DR2 Parallax'</span><span class=\"p\">])</span>\n\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">=</span><span class=\"s1\">'adr14_gdr2_skymap_kepler.png'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Show the figure</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<img alt=\"https://github.com/henrysky/milkyway_plot/blob/master/readme_images/adr14_gdr2_skymap_core.png?raw=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a3a0fc9ee82f66cfd8d7bbbca9d68e0bb8d9748/68747470733a2f2f6769746875622e636f6d2f68656e7279736b792f6d696c6b797761795f706c6f742f626c6f622f6d61737465722f726561646d655f696d616765732f61647231345f676472325f736b796d61705f636f72652e706e673f7261773d74727565\">\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mw_plot</span> <span class=\"kn\">import</span> <span class=\"n\">MWSkyMap</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">astropy</span> <span class=\"kn\">import</span> <span class=\"n\">units</span> <span class=\"k\">as</span>  <span class=\"n\">u</span>\n<span class=\"kn\">import</span> <span class=\"nn\">astropy.coordinates</span> <span class=\"k\">as</span> <span class=\"nn\">apycoords</span>\n<span class=\"kn\">from</span> <span class=\"nn\">astroNN.gaia</span> <span class=\"kn\">import</span> <span class=\"n\">gaiadr2_parallax</span>\n\n<span class=\"n\">ra</span><span class=\"p\">,</span> <span class=\"n\">dec</span><span class=\"p\">,</span> <span class=\"n\">parallax</span><span class=\"p\">,</span> <span class=\"n\">parallax_error</span> <span class=\"o\">=</span> <span class=\"n\">gaiadr2_parallax</span><span class=\"p\">(</span><span class=\"n\">cuts</span><span class=\"o\">=.</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">keepdims</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"mf\">0.00</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># setup a MWSkyMap instance</span>\n<span class=\"n\">plot_instance</span> <span class=\"o\">=</span> <span class=\"n\">MWSkyMap</span><span class=\"p\">(</span><span class=\"n\">projection</span><span class=\"o\">=</span><span class=\"s1\">'equirectangular'</span><span class=\"p\">,</span> <span class=\"n\">center</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">deg</span><span class=\"p\">,</span> <span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">deg</span><span class=\"p\">)</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">figsize</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n\n<span class=\"n\">parallax</span><span class=\"p\">[</span><span class=\"n\">parallax</span><span class=\"o\">&gt;</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">1.</span>\n\n<span class=\"c1\"># so that the colorbar will has a better contract</span>\n<span class=\"c1\"># plot_instance.clim = (5., 15.)</span>\n\n<span class=\"c1\"># alpha value for the milkyway image</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">imalpha</span> <span class=\"o\">=</span> <span class=\"mf\">0.6</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"mf\">10.</span>  <span class=\"c1\"># make the scatter points bigger</span>\n\n<span class=\"c1\"># setup colormap</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">'jet'</span>\n\n<span class=\"c1\"># set up plot title</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">'APOGEE DR14 coloured by 20</span><span class=\"si\">% e</span><span class=\"s1\">rror cuts Gaia Parallax'</span>\n\n<span class=\"c1\"># use mw_scatter instead of scatter because we want a colorbar</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">mw_scatter</span><span class=\"p\">(</span><span class=\"n\">ra</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">degree</span><span class=\"p\">,</span> <span class=\"n\">dec</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">degree</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">parallax</span><span class=\"p\">,</span> <span class=\"s1\">'Gaia DR2 Parallax'</span><span class=\"p\">])</span>\n\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">=</span><span class=\"s1\">'adr14_gdr2_skymap_core.png'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Show the figure</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"example-7-plot-all-sky-map-with-projection\">\n<h2>Example 7: Plot all sky map with projection</h2>\n<p>You can also plot all sky map with mw_plot\u2019s MWSkyMap class with projection</p>\n<img alt=\"https://github.com/henrysky/milkyway_plot/blob/master/readme_images/lmc_smc_projection.png?raw=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/122646ccca7e7d38a8125908482acdfc8b8346d4/68747470733a2f2f6769746875622e636f6d2f68656e7279736b792f6d696c6b797761795f706c6f742f626c6f622f6d61737465722f726561646d655f696d616765732f6c6d635f736d635f70726f6a656374696f6e2e706e673f7261773d74727565\">\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">astropy</span> <span class=\"kn\">import</span> <span class=\"n\">units</span> <span class=\"k\">as</span>  <span class=\"n\">u</span>\n<span class=\"kn\">import</span> <span class=\"nn\">astropy.coordinates</span> <span class=\"k\">as</span> <span class=\"nn\">apycoords</span>\n<span class=\"kn\">from</span> <span class=\"nn\">galpy.orbit</span> <span class=\"kn\">import</span> <span class=\"n\">Orbit</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mw_plot</span> <span class=\"kn\">import</span> <span class=\"n\">MWSkyMap</span>\n\n<span class=\"c1\"># setup a MWSkyMap instance with projection, other projection can be 'hammer', 'mollweide' etc</span>\n<span class=\"c1\"># grayscale: whether to turn the background image to grayscale</span>\n<span class=\"n\">plot_instance</span> <span class=\"o\">=</span> <span class=\"n\">MWSkyMap</span><span class=\"p\">(</span><span class=\"n\">projection</span><span class=\"o\">=</span><span class=\"s1\">'aitoff'</span><span class=\"p\">,</span> <span class=\"n\">grayscale</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># so that the colorbar will has a better contract</span>\n<span class=\"c1\"># plot_instance.clim = (5., 15.)</span>\n\n<span class=\"c1\"># alpha value for the milkyway image</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">imalpha</span> <span class=\"o\">=</span> <span class=\"mf\">1.</span>\n\n<span class=\"c1\"># set up plot title</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">'LMC and SMC in red dots'</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n\n<span class=\"c1\"># LMC and SMC coordinates, get coordinates with galpy from_name</span>\n<span class=\"n\">lsmc_ra</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">Orbit</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"s1\">'LMC'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ra</span><span class=\"p\">(),</span> <span class=\"n\">Orbit</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"s1\">'SMC'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ra</span><span class=\"p\">()]</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">degree</span>\n<span class=\"n\">lsmc_dec</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">Orbit</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"s1\">'LMC'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dec</span><span class=\"p\">(),</span> <span class=\"n\">Orbit</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"s1\">'SMC'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dec</span><span class=\"p\">()]</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">degree</span>\n\n<span class=\"c1\"># use mw_scatter instead of scatter</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">mw_scatter</span><span class=\"p\">(</span><span class=\"n\">lsmc_ra</span><span class=\"p\">,</span> <span class=\"n\">lsmc_dec</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">)</span>\n\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">=</span><span class=\"s1\">'lmc_smc_projection.png'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Show the figure</span>\n<span class=\"n\">plot_instance</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file for details</p>\n</div>\n\n          </div>"}, "last_serial": 6841246, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "a4cfaaa6ae0b8ebf7eeb9be2c4ea3d03", "sha256": "9a99a54ffb9a78d8f2f5945e2297e5b77e9da1e893f4ec6e6aa3e86798a2ae6a"}, "downloads": -1, "filename": "mw_plot-0.3.0.tar.gz", "has_sig": false, "md5_digest": "a4cfaaa6ae0b8ebf7eeb9be2c4ea3d03", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 40108333, "upload_time": "2018-05-06T00:09:56", "upload_time_iso_8601": "2018-05-06T00:09:56.824724Z", "url": "https://files.pythonhosted.org/packages/0c/72/f9974becb648fc79eb7f09f32f3def90087ef789bd5e3a24770e389389ed/mw_plot-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "d1753cbc69afebc57d88b3115c1a5e80", "sha256": "173bdd45b92bb3ca90dd424a1d17174af4160921d9d2e960249f2f1fde7b9729"}, "downloads": -1, "filename": "mw_plot-0.4.0.tar.gz", "has_sig": false, "md5_digest": "d1753cbc69afebc57d88b3115c1a5e80", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36600355, "upload_time": "2018-06-29T20:45:10", "upload_time_iso_8601": "2018-06-29T20:45:10.699584Z", "url": "https://files.pythonhosted.org/packages/fd/c2/6c4912cf7f3b2bc79ed879b789b4d326ece4f6e205b0b3b2725cb85d2f4d/mw_plot-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "f8b17f354d40360b113b3b0d4c4873a5", "sha256": "93ed44cc3efdf4a57edbc8c509502580d2009faf0687474c14fa3c0261c2d077"}, "downloads": -1, "filename": "mw_plot-0.4.1.tar.gz", "has_sig": false, "md5_digest": "f8b17f354d40360b113b3b0d4c4873a5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36601107, "upload_time": "2018-06-30T02:47:34", "upload_time_iso_8601": "2018-06-30T02:47:34.670078Z", "url": "https://files.pythonhosted.org/packages/c9/41/8d0715bb321b90c149f1a86eb411ec2af017be2df4ff5645af9447925f48/mw_plot-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "dc7117f509f426733891ed2ea6b8ac21", "sha256": "39071634b632da1575c23b34296d395e04d373e4256e1fa9e9bdfe8dd2379066"}, "downloads": -1, "filename": "mw_plot-0.4.2.tar.gz", "has_sig": false, "md5_digest": "dc7117f509f426733891ed2ea6b8ac21", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36601383, "upload_time": "2018-07-23T03:05:56", "upload_time_iso_8601": "2018-07-23T03:05:56.787649Z", "url": "https://files.pythonhosted.org/packages/69/76/f8bbf0cc6e9720073d7152f88ff05d644addd9e87ee7d644329c899de5cc/mw_plot-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "ed10b54447ec734bfc1c44cbf2415c1b", "sha256": "629705480a77419da2a083ba80ac7649e8ac98514052980fc472399e5e570e1b"}, "downloads": -1, "filename": "mw_plot-0.4.3.tar.gz", "has_sig": false, "md5_digest": "ed10b54447ec734bfc1c44cbf2415c1b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36601344, "upload_time": "2018-07-25T20:41:33", "upload_time_iso_8601": "2018-07-25T20:41:33.858652Z", "url": "https://files.pythonhosted.org/packages/62/d6/6ddd008b98b5640a310b6c2d9f05e096b78a9539598ceef5b669ba3b537e/mw_plot-0.4.3.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "a220bf3fda3140b53507e7d1800d5935", "sha256": "84d7942f7f878e66443c9a015e36a3ffa2c3e91f6f31c5fba725b1ac50892ff8"}, "downloads": -1, "filename": "mw_plot-0.5.0.tar.gz", "has_sig": false, "md5_digest": "a220bf3fda3140b53507e7d1800d5935", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36602198, "upload_time": "2018-08-12T23:41:51", "upload_time_iso_8601": "2018-08-12T23:41:51.999509Z", "url": "https://files.pythonhosted.org/packages/e5/60/3eb2acf8be5bd3602b3715028e1e810b4197c0953291c1fb57ba92b2b639/mw_plot-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "15ec937e66d39e4b1db6283012462b8a", "sha256": "da5767b4fb7847d6c1ad274508a20814028d3aa1a340125e90e98af7b08dd3cd"}, "downloads": -1, "filename": "mw_plot-0.5.1.tar.gz", "has_sig": false, "md5_digest": "15ec937e66d39e4b1db6283012462b8a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36606915, "upload_time": "2018-10-16T00:10:35", "upload_time_iso_8601": "2018-10-16T00:10:35.815745Z", "url": "https://files.pythonhosted.org/packages/f5/66/d0b5cdec069b28222961bdcbfd0126fc92fda438365fe60c52c1360056d9/mw_plot-0.5.1.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "7abf9034e50e0c9723cfbed6ac92d449", "sha256": "e1edaa873b1696813566e5236e3ec12993168add4c22d3bab41a143145a4e8cb"}, "downloads": -1, "filename": "mw_plot-0.5.3.tar.gz", "has_sig": false, "md5_digest": "7abf9034e50e0c9723cfbed6ac92d449", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36607686, "upload_time": "2018-12-11T03:44:24", "upload_time_iso_8601": "2018-12-11T03:44:24.252496Z", "url": "https://files.pythonhosted.org/packages/41/98/078cb45378433d33448b646746804d741736a319bd428695fc78942005f0/mw_plot-0.5.3.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "e8f67cf514ef7a77514260ba6c4a793e", "sha256": "aad3bf6ccd481fcca71d13259362a108e8d7357d6a8a1fef444063cc76d510a5"}, "downloads": -1, "filename": "mw_plot-0.6.0.tar.gz", "has_sig": false, "md5_digest": "e8f67cf514ef7a77514260ba6c4a793e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36608202, "upload_time": "2020-03-19T05:19:49", "upload_time_iso_8601": "2020-03-19T05:19:49.251303Z", "url": "https://files.pythonhosted.org/packages/24/67/b7e6f3bbf704791a19272edd6231302069c2816e13cc2a9f5b596ffd0a4d/mw_plot-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e8f67cf514ef7a77514260ba6c4a793e", "sha256": "aad3bf6ccd481fcca71d13259362a108e8d7357d6a8a1fef444063cc76d510a5"}, "downloads": -1, "filename": "mw_plot-0.6.0.tar.gz", "has_sig": false, "md5_digest": "e8f67cf514ef7a77514260ba6c4a793e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36608202, "upload_time": "2020-03-19T05:19:49", "upload_time_iso_8601": "2020-03-19T05:19:49.251303Z", "url": "https://files.pythonhosted.org/packages/24/67/b7e6f3bbf704791a19272edd6231302069c2816e13cc2a9f5b596ffd0a4d/mw_plot-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:56 2020"}