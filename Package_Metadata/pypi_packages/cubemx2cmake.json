{"info": {"author": "Yevhenii Babichenko", "author_email": "eugene.babichenko@gmail.com", "bugtrack_url": null, "classifiers": ["Topic :: Software Development :: Code Generators", "Topic :: Utilities"], "description": "=================\nSTM32CubeMX2CMake\n=================\n\nInstallation\n------------\nFrom this repository:\n\n*git clone https://github.com/eugene-babichenko/cubemx2cmake.git*\n\n*cd cubemx2cmake*\n\n*pip install .*\n\nOr you can install it from PyPI:\n\n*pip install cubemx2cmake*\n\nUsage\n-----\n\nGenerate your initialization code from STM32CubeMX with the following Code Generation Options:\n\n* Toolchain: SW4STM32\n* [X] Generate under root\n\nThen open your project directory and run *cubemx2cmake <your_cube_mx_file>.ioc*. If your working directory contains only one CubeMX project file (*.ioc), you can simply run *cubemx2cmake* and it will find your project file automatically. This will generate CMakeLists.txt, STM32Toolchain.cmake, openocd_debug.cfg and openocd_flash.cfg files.\n\nTo get all the things done right use *-DCMAKE_TOOLCHAIN_FILE=STM32Toolchain.cmake* command line option with CMake.\n\nCMakeLists contains the separate target called *flash*, which compiles your code and then flashes it to the target processor with OpenOCD. By default stlink-v2 is specified as the debugging interface. You can specify any other interface with *--interface* command line option. You can also specify flash memory start address with *--memory_start* option (0x08000000 by default). Telnet and GDB ports can be changed with *--telnet-port* and *--gdb-port* (4444 and 3333 are the defaults).\n\nThis scripts also generates a bunch of shell script files:\n* openocd_flash.sh - flashes the target MCU;\n* openocd_debug.sh - open debugging port for the target MCU;\n* gdb.sh - connect to the target MCU after openocd_debug.sh was started.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/eugene-babichenko/cubemx2cmake", "keywords": "st stm32 cube cubemx stm32cubemx cmake code generator", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cubemx2cmake", "package_url": "https://pypi.org/project/cubemx2cmake/", "platform": "", "project_url": "https://pypi.org/project/cubemx2cmake/", "project_urls": {"Homepage": "https://github.com/eugene-babichenko/cubemx2cmake"}, "release_url": "https://pypi.org/project/cubemx2cmake/1.2/", "requires_dist": null, "requires_python": "", "summary": "Command line tool to generate CMakeLists.txt from STM32CubeMX projects.", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"installation\">\n<h2>Installation</h2>\n<p>From this repository:</p>\n<p><em>git clone https://github.com/eugene-babichenko/cubemx2cmake.git</em></p>\n<p><em>cd cubemx2cmake</em></p>\n<p><em>pip install .</em></p>\n<p>Or you can install it from PyPI:</p>\n<p><em>pip install cubemx2cmake</em></p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Generate your initialization code from STM32CubeMX with the following Code Generation Options:</p>\n<ul>\n<li>Toolchain: SW4STM32</li>\n<li>[X] Generate under root</li>\n</ul>\n<p>Then open your project directory and run <em>cubemx2cmake &lt;your_cube_mx_file&gt;.ioc</em>. If your working directory contains only one CubeMX project file (<em>.ioc), you can simply run *cubemx2cmake</em> and it will find your project file automatically. This will generate CMakeLists.txt, STM32Toolchain.cmake, openocd_debug.cfg and openocd_flash.cfg files.</p>\n<p>To get all the things done right use <em>-DCMAKE_TOOLCHAIN_FILE=STM32Toolchain.cmake</em> command line option with CMake.</p>\n<p>CMakeLists contains the separate target called <em>flash</em>, which compiles your code and then flashes it to the target processor with OpenOCD. By default stlink-v2 is specified as the debugging interface. You can specify any other interface with <em>\u2013interface</em> command line option. You can also specify flash memory start address with <em>\u2013memory_start</em> option (0x08000000 by default). Telnet and GDB ports can be changed with <em>\u2013telnet-port</em> and <em>\u2013gdb-port</em> (4444 and 3333 are the defaults).</p>\n<p>This scripts also generates a bunch of shell script files:\n* openocd_flash.sh - flashes the target MCU;\n* openocd_debug.sh - open debugging port for the target MCU;\n* gdb.sh - connect to the target MCU after openocd_debug.sh was started.</p>\n</div>\n\n          </div>"}, "last_serial": 2457863, "releases": {"1.0": [], "1.0.1": [], "1.1": [{"comment_text": "", "digests": {"md5": "65c16cbe186fc790f8a8496cd2d71544", "sha256": "c5c9153f0a0cfe1981a004c0a17a77273ba1d3910828b5c5e15b978170aa7e0c"}, "downloads": -1, "filename": "cubemx2cmake-1.1.tar.gz", "has_sig": false, "md5_digest": "65c16cbe186fc790f8a8496cd2d71544", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4608, "upload_time": "2016-11-03T19:13:41", "upload_time_iso_8601": "2016-11-03T19:13:41.369816Z", "url": "https://files.pythonhosted.org/packages/10/e3/51620ceeff41955ff8cde0955f082ccd9aebf48e723daab1d2b751283120/cubemx2cmake-1.1.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "a1d47a5beff134e44a0a63f3b0a06cd6", "sha256": "27ebbbc90ef08eec934ecbf94cccb5f3dd3406363d5d6690dfcc5a1314bf8774"}, "downloads": -1, "filename": "cubemx2cmake-1.1.1.tar.gz", "has_sig": false, "md5_digest": "a1d47a5beff134e44a0a63f3b0a06cd6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4657, "upload_time": "2016-11-10T16:44:11", "upload_time_iso_8601": "2016-11-10T16:44:11.851332Z", "url": "https://files.pythonhosted.org/packages/b6/c2/2a7cf28e8cb00b906a59024ec2bfb4302f5afe6333a2b7be72b12bfc0d8c/cubemx2cmake-1.1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "3bb9fc796cfa9c921da4916cd8b78725", "sha256": "dead384726cffbb568ed33fa1777e8409ebc48aa34ab147a70f9b1ce4c5f13bd"}, "downloads": -1, "filename": "cubemx2cmake-1.2.tar.gz", "has_sig": false, "md5_digest": "3bb9fc796cfa9c921da4916cd8b78725", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4848, "upload_time": "2016-11-13T13:54:52", "upload_time_iso_8601": "2016-11-13T13:54:52.267521Z", "url": "https://files.pythonhosted.org/packages/fc/61/c298105aa590dcfc6e69ebde2806f6764f72734fd96fc71ab61d51fec2ea/cubemx2cmake-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3bb9fc796cfa9c921da4916cd8b78725", "sha256": "dead384726cffbb568ed33fa1777e8409ebc48aa34ab147a70f9b1ce4c5f13bd"}, "downloads": -1, "filename": "cubemx2cmake-1.2.tar.gz", "has_sig": false, "md5_digest": "3bb9fc796cfa9c921da4916cd8b78725", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4848, "upload_time": "2016-11-13T13:54:52", "upload_time_iso_8601": "2016-11-13T13:54:52.267521Z", "url": "https://files.pythonhosted.org/packages/fc/61/c298105aa590dcfc6e69ebde2806f6764f72734fd96fc71ab61d51fec2ea/cubemx2cmake-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:31 2020"}