{"info": {"author": "Scott Furlan", "author_email": "scottfurlan@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "[![PyPI](https://img.shields.io/pypi/v/simplesam.svg?)](https://pypi.org/project/piperna/)\n<!-- [![Build Status](https://travis-ci.org/mdshw5/simplesam.svg?branch=master)](https://travis-ci.org/mdshw5/simplesam) -->\n[![Documentation Status](https://readthedocs.org/projects/piperna/badge/?version=latest)](https://piperna.readthedocs.io/en/latest/?badge=latest)\n\n# piperna\n==========\n\nversion 0.5\n\nA python wrapper for processing of bulk RNA seq data\n\n## Requirements\n\n1. Python > 3.5 (piperna uses the 'six' package but will attempt to install if not already installed)\n2. Computing cluster with PBS or SLURM\n3. Modules installed for python, STAR or kallisto, \n4. R Modules for GenomicAlignments, rtracklayer, and Rsamtools if running SUMMARIZE\n\n## Installation\n\nInstallation can probably be done correctly many different ways.  Here are the methods that have worked for us.  We recommend that piperna be installed with pipx.\n\n**At SCRI do the following**\n```bash\nmodule load python\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\npipx install --include-deps --pip-args '--trusted-host pypi.org --trusted-host files.pythonhosted.org' piperna\n```\n\n\n**At the FHCRC do the following...**\n```bash\nmodule load Python/3.6.7-foss-2016b-fh1\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\npipx install --include-deps piperna\n```\n\nYou should then be able to test installation by calling piperna.  After running the folllowing, you should see the help screen displayed.\n\n```bash\npiperna\n```\n\n\n\n## Usage\n\n```bash\npiperna usage: A wrapper for running RNASeq Alignment [-h]\n                                              [--fastq_folder FASTQ_FOLDER]\n                                              [--genome_key GENOME_KEY]\n                                              [--sample_flag SAMPLE_FLAG]\n                                              [--runsheet RUNSHEET]\n                                              [--typeofseq {single,pe}]\n                                              [--software {STAR,kallisto}]\n                                              [--output OUTPUT] [--debug]\n                                              [--cluster {PBS,SLURM}]\n                                              [--user USER]\n                                              [--threads THREADS] [--mfl MFL]\n                                              [--sfl SFL] [--count]\n                                              [--outSAMtype OUTSAMTYPE]\n                                              [--addSTARstring ADDSTARSTRING]\n                                              [--log_prefix LOG_PREFIX]\n                                              [--verbose]\n                                              {MAKERUNSHEET,ALIGN,SUMMARIZE}\n\npositional arguments:\n  {MAKERUNSHEET,ALIGN,SUMMARIZE}\n                        a required string denoting segment of pipeline to run.\n                        1) \"MAKERUNSHEET\" - to parse a folder of fastqs; 2)\n                        \"ALIGN\" - to perform alignment; 3) \"SUMMARIZE\" - to\n                        summarize and count reads\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --fastq_folder FASTQ_FOLDER, -fq FASTQ_FOLDER\n                        For MAKERUNSHEET only: Pathname of fastq folder (files\n                        must be organized in folders named by sample)\n  --genome_key GENOME_KEY, -gk GENOME_KEY\n                        For MAKERUNSHEET only: abbreviation to use \"installed\"\n                        genomes in the runsheet (See README.md for more\n                        details\n  --sample_flag SAMPLE_FLAG, -f SAMPLE_FLAG\n                        FOR MAKERUNSHEET only string to identify samples of\n                        interest in a fastq folder\n  --runsheet RUNSHEET, -r RUNSHEET\n                        tab-delim file with sample fields as defined in the\n                        script. - REQUIRED for all jobs except MAKERUNSHEET\n  --typeofseq {single,pe}, -t {single,pe}\n                        Type of sequencing performed - REQUIRED for\n                        MAKERUNSHEET\n  --software {STAR,kallisto}, -s {STAR,kallisto}\n                        To set desired software, required and used for\n                        MAKERUNSHEET only\n  --output OUTPUT, -o OUTPUT\n                        To set output path, required for MAKERUNSHEET\n  --debug, -d           To print commands (For testing flow)\n  --cluster {PBS,SLURM}, -c {PBS,SLURM}\n                        Cluster software. OPTIONAL Currently supported: PBS\n                        and SLURM\n  --user USER, -u USER  user for submitting jobs - defaults to username.\n                        OPTIONAL\n  --threads THREADS, -th THREADS\n                        To set number of cores\n  --mfl MFL, -mf MFL    Mean fragment length (kallisto ONLY)\n  --sfl SFL, -sf SFL    SD fragment length (kallisto ONLY)\n  --count, -co          Run Count (STAR Only)\n  --outSAMtype OUTSAMTYPE, -st OUTSAMTYPE\n                        To define type of SAM/BAM output (STAR Only)\n  --addSTARstring ADDSTARSTRING, -a ADDSTARSTRING\n                        Additional STAR arguments to be run on all jobs in\n                        runsheet (STAR Only)\n  --log_prefix LOG_PREFIX, -l LOG_PREFIX\n                        Prefix specifying log files for henipipe output from\n                        henipipe calls. OPTIONAL\n  --verbose, -v         Run with some additional ouput - not much though...\n                        OPTIONAL\n```\n\n\n## Runsheet\n\nThe runsheet is the brains of the piperna workflow.  You can make a runsheet using the MAKERUNSHEET command.  This command will parse a directory of fastq folder (specified using the -fq flag; fastq files should be organized in subfolders named by sample) and will find fastq mates (R1 and R2 - Currently only PE sequencing is supported).  Running piperna MAKERUNSHEET will find and pair these fastqs for you and populate the runsheet with genome index locations (see below) and output filenames with locations as specified using the -o flag.  Note that piperna output will default to the current working directory if no location is otherwise specified.  There is an option for selecting only folders that contain a specific string (using the -sf flag).  *After generation of a runsheet (csv file), you should take a look at it in Excel or Numbers to make sure things look okay...*  Here are the columns that you can include.  Order is irrelevant.  Column names (headers) exactly as written below are required.\n\n### Example Runsheet \n\n**absolute pathnames are required for runsheets**\n\n| sample | index | fastq1 | fastq2 | output |  software  |     gtf    |\n|--------|-------|--------|--------|--------|------------|------------|\n|  mys1  |  path |  path  |  path  |  path  |   STAR     |    path    |\n|  mys2  |  path |  path  |  path  |  path  |   STAR     |    path    |\n\n\n* 'sample' name of the sample REQUIRED.  \n* 'index' location of the indexed fasta file REQUIRED.  \n* 'fastq1' a tab seperated string of filenames denoting location of all R1 files for a sample REQUIRED if paired end.  \n* 'fastq2' a tab seperated string of filenames denoting location of all R2 files for a sample REQUIRED if paired end.  \n* 'fastqs' a tab seperated string of filenames can be used for single end reads REQUIRED if single end.  \n* 'output' name of the location for the aligned and sorted bam file.  \n* 'software' either 'STAR' or 'kallisto'.  REQUIRED\n* 'gtf' a location for annotation file in gtf format.  REQUIRED for SUMMARIZE.  \n\n## Genomes and adding genome locations\n\nyou should have a previously indexed (by the software package of your choosing) location of your genome accessible to piperna.  This location is referred to in piperna as the 'index'.\n\npiperna provides an easy way to add these locations to your system for repeated use using the --genome_key (-gk) option during MAKERUNSHEET commands.  A file called genomes.json can be found in the 'data' directory of the piperna install folder.  This file can be edited to include those locations you want to regularly put in the runsheet.  The following shows an example of a genomes.json file.  The files \"top level\" is a name that can be used in the --genome_key field (-gk) during runsheet generation to populate the columns of the runsheet with locations associated with that genome_key.  The 'default' key will be used when no genome_key is specified.\n\n```json\n{\n    \"default\": {\n      \"index\": \"/path/path/hg38/STAR_index\",\n      \"gtf\": \"/path/path/hg38/hg38.gtf\"\n    },\n    \"default_kallisto\": {\n        \"index\": \"/path/path/hg38/kallisto_index\",\n        \"gtf\": \"/path/path/hg38/hg38.gtf\"\n    }\n}\n```\n\n## Doing a piperna run\n\nSay your fastqs live within within subfolders of a folder 'fastq' in the folder 'data'.  So if you were to...\n```bash\ncd /data/fastq\nls\n```\n... you'd get a bunch of folders, each of which would be filled with fastqs.  Each folder name should correspond to a sample name.\n\n\n**To run piperna, do the following...**\n1. Make a new output directory 'piperna'.\n2. Go into that directory and make a runsheet pointing to the fastq folder i.e. the folder level above.  (at the command line, piperna is cool with either relative or absolute pathnames; but as stated earlier, absolute pathnames are required for the runsheet.)\n3.  Optionally you can only select directories of fastq files that contain in their name the string denoted using the -sf flag.\n4. After inspecting and completing the runsheet, run ALIGN, NORM, and SEACR.  \n5. Sit back have a cocktail.\n\n```bash\ncd ..\nmkdir piperna\ncd piperna\npiperna MAKERUNSHEET -fq ../fastq -sf MySampleDirectoriesStartWithThisString -o .\npiperna ALIGN -r runsheet.csv\npiperna SUMMARIZE -r runsheet.csv -o SummarizedExperiment.RDS\n```\n\n\n## Interfacing with DESeq2\n\n**After running piperna, the SummarizedExperiment.RDS file can be input directly into DESeq2 like this**\n\n```R\n\n```\n\n\n## Acknowledgements\n\nWritten by Scott Furlan with code inspiration from Andrew Hill's cellwrapper.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scfurl/piperna.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "piperna", "package_url": "https://pypi.org/project/piperna/", "platform": "", "project_url": "https://pypi.org/project/piperna/", "project_urls": {"Homepage": "https://github.com/scfurl/piperna.git"}, "release_url": "https://pypi.org/project/piperna/1.41/", "requires_dist": null, "requires_python": ">=2.5", "summary": "A python wrapper for fast and parallel processing of bulk RNA Seq data", "version": "1.41", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/piperna/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/baa1978ec3829db2413de2d70dfec2fdb3be8464/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73696d706c6573616d2e7376673f\"></a></p>\n\n<p><a href=\"https://piperna.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/237e375b5fb2ccd353e1089639d123e5baf5ddc8/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70697065726e612f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<h1>piperna</h1>\n<p>==========</p>\n<p>version 0.5</p>\n<p>A python wrapper for processing of bulk RNA seq data</p>\n<h2>Requirements</h2>\n<ol>\n<li>Python &gt; 3.5 (piperna uses the 'six' package but will attempt to install if not already installed)</li>\n<li>Computing cluster with PBS or SLURM</li>\n<li>Modules installed for python, STAR or kallisto,</li>\n<li>R Modules for GenomicAlignments, rtracklayer, and Rsamtools if running SUMMARIZE</li>\n</ol>\n<h2>Installation</h2>\n<p>Installation can probably be done correctly many different ways.  Here are the methods that have worked for us.  We recommend that piperna be installed with pipx.</p>\n<p><strong>At SCRI do the following</strong></p>\n<pre>module load python\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\npipx install --include-deps --pip-args <span class=\"s1\">'--trusted-host pypi.org --trusted-host files.pythonhosted.org'</span> piperna\n</pre>\n<p><strong>At the FHCRC do the following...</strong></p>\n<pre>module load Python/3.6.7-foss-2016b-fh1\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\npipx install --include-deps piperna\n</pre>\n<p>You should then be able to test installation by calling piperna.  After running the folllowing, you should see the help screen displayed.</p>\n<pre>piperna\n</pre>\n<h2>Usage</h2>\n<pre>piperna usage: A wrapper <span class=\"k\">for</span> running RNASeq Alignment <span class=\"o\">[</span>-h<span class=\"o\">]</span>\n                                              <span class=\"o\">[</span>--fastq_folder FASTQ_FOLDER<span class=\"o\">]</span>\n                                              <span class=\"o\">[</span>--genome_key GENOME_KEY<span class=\"o\">]</span>\n                                              <span class=\"o\">[</span>--sample_flag SAMPLE_FLAG<span class=\"o\">]</span>\n                                              <span class=\"o\">[</span>--runsheet RUNSHEET<span class=\"o\">]</span>\n                                              <span class=\"o\">[</span>--typeofseq <span class=\"o\">{</span>single,pe<span class=\"o\">}]</span>\n                                              <span class=\"o\">[</span>--software <span class=\"o\">{</span>STAR,kallisto<span class=\"o\">}]</span>\n                                              <span class=\"o\">[</span>--output OUTPUT<span class=\"o\">]</span> <span class=\"o\">[</span>--debug<span class=\"o\">]</span>\n                                              <span class=\"o\">[</span>--cluster <span class=\"o\">{</span>PBS,SLURM<span class=\"o\">}]</span>\n                                              <span class=\"o\">[</span>--user USER<span class=\"o\">]</span>\n                                              <span class=\"o\">[</span>--threads THREADS<span class=\"o\">]</span> <span class=\"o\">[</span>--mfl MFL<span class=\"o\">]</span>\n                                              <span class=\"o\">[</span>--sfl SFL<span class=\"o\">]</span> <span class=\"o\">[</span>--count<span class=\"o\">]</span>\n                                              <span class=\"o\">[</span>--outSAMtype OUTSAMTYPE<span class=\"o\">]</span>\n                                              <span class=\"o\">[</span>--addSTARstring ADDSTARSTRING<span class=\"o\">]</span>\n                                              <span class=\"o\">[</span>--log_prefix LOG_PREFIX<span class=\"o\">]</span>\n                                              <span class=\"o\">[</span>--verbose<span class=\"o\">]</span>\n                                              <span class=\"o\">{</span>MAKERUNSHEET,ALIGN,SUMMARIZE<span class=\"o\">}</span>\n\npositional arguments:\n  <span class=\"o\">{</span>MAKERUNSHEET,ALIGN,SUMMARIZE<span class=\"o\">}</span>\n                        a required string denoting segment of pipeline to run.\n                        <span class=\"m\">1</span><span class=\"o\">)</span> <span class=\"s2\">\"MAKERUNSHEET\"</span> - to parse a folder of fastqs<span class=\"p\">;</span> <span class=\"m\">2</span><span class=\"o\">)</span>\n                        <span class=\"s2\">\"ALIGN\"</span> - to perform alignment<span class=\"p\">;</span> <span class=\"m\">3</span><span class=\"o\">)</span> <span class=\"s2\">\"SUMMARIZE\"</span> - to\n                        summarize and count reads\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --fastq_folder FASTQ_FOLDER, -fq FASTQ_FOLDER\n                        For MAKERUNSHEET only: Pathname of fastq folder <span class=\"o\">(</span>files\n                        must be organized in folders named by sample<span class=\"o\">)</span>\n  --genome_key GENOME_KEY, -gk GENOME_KEY\n                        For MAKERUNSHEET only: abbreviation to use <span class=\"s2\">\"installed\"</span>\n                        genomes in the runsheet <span class=\"o\">(</span>See README.md <span class=\"k\">for</span> more\n                        details\n  --sample_flag SAMPLE_FLAG, -f SAMPLE_FLAG\n                        FOR MAKERUNSHEET only string to identify samples of\n                        interest in a fastq folder\n  --runsheet RUNSHEET, -r RUNSHEET\n                        tab-delim file with sample fields as defined in the\n                        script. - REQUIRED <span class=\"k\">for</span> all <span class=\"nb\">jobs</span> except MAKERUNSHEET\n  --typeofseq <span class=\"o\">{</span>single,pe<span class=\"o\">}</span>, -t <span class=\"o\">{</span>single,pe<span class=\"o\">}</span>\n                        Type of sequencing performed - REQUIRED <span class=\"k\">for</span>\n                        MAKERUNSHEET\n  --software <span class=\"o\">{</span>STAR,kallisto<span class=\"o\">}</span>, -s <span class=\"o\">{</span>STAR,kallisto<span class=\"o\">}</span>\n                        To <span class=\"nb\">set</span> desired software, required and used <span class=\"k\">for</span>\n                        MAKERUNSHEET only\n  --output OUTPUT, -o OUTPUT\n                        To <span class=\"nb\">set</span> output path, required <span class=\"k\">for</span> MAKERUNSHEET\n  --debug, -d           To print commands <span class=\"o\">(</span>For testing flow<span class=\"o\">)</span>\n  --cluster <span class=\"o\">{</span>PBS,SLURM<span class=\"o\">}</span>, -c <span class=\"o\">{</span>PBS,SLURM<span class=\"o\">}</span>\n                        Cluster software. OPTIONAL Currently supported: PBS\n                        and SLURM\n  --user USER, -u USER  user <span class=\"k\">for</span> submitting <span class=\"nb\">jobs</span> - defaults to username.\n                        OPTIONAL\n  --threads THREADS, -th THREADS\n                        To <span class=\"nb\">set</span> number of cores\n  --mfl MFL, -mf MFL    Mean fragment length <span class=\"o\">(</span>kallisto ONLY<span class=\"o\">)</span>\n  --sfl SFL, -sf SFL    SD fragment length <span class=\"o\">(</span>kallisto ONLY<span class=\"o\">)</span>\n  --count, -co          Run Count <span class=\"o\">(</span>STAR Only<span class=\"o\">)</span>\n  --outSAMtype OUTSAMTYPE, -st OUTSAMTYPE\n                        To define <span class=\"nb\">type</span> of SAM/BAM output <span class=\"o\">(</span>STAR Only<span class=\"o\">)</span>\n  --addSTARstring ADDSTARSTRING, -a ADDSTARSTRING\n                        Additional STAR arguments to be run on all <span class=\"nb\">jobs</span> in\n                        runsheet <span class=\"o\">(</span>STAR Only<span class=\"o\">)</span>\n  --log_prefix LOG_PREFIX, -l LOG_PREFIX\n                        Prefix specifying log files <span class=\"k\">for</span> henipipe output from\n                        henipipe calls. OPTIONAL\n  --verbose, -v         Run with some additional ouput - not much though...\n                        OPTIONAL\n</pre>\n<h2>Runsheet</h2>\n<p>The runsheet is the brains of the piperna workflow.  You can make a runsheet using the MAKERUNSHEET command.  This command will parse a directory of fastq folder (specified using the -fq flag; fastq files should be organized in subfolders named by sample) and will find fastq mates (R1 and R2 - Currently only PE sequencing is supported).  Running piperna MAKERUNSHEET will find and pair these fastqs for you and populate the runsheet with genome index locations (see below) and output filenames with locations as specified using the -o flag.  Note that piperna output will default to the current working directory if no location is otherwise specified.  There is an option for selecting only folders that contain a specific string (using the -sf flag).  <em>After generation of a runsheet (csv file), you should take a look at it in Excel or Numbers to make sure things look okay...</em>  Here are the columns that you can include.  Order is irrelevant.  Column names (headers) exactly as written below are required.</p>\n<h3>Example Runsheet</h3>\n<p><strong>absolute pathnames are required for runsheets</strong></p>\n<table>\n<thead>\n<tr>\n<th>sample</th>\n<th>index</th>\n<th>fastq1</th>\n<th>fastq2</th>\n<th>output</th>\n<th>software</th>\n<th>gtf</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mys1</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>STAR</td>\n<td>path</td>\n</tr>\n<tr>\n<td>mys2</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>STAR</td>\n<td>path</td>\n</tr></tbody></table>\n<ul>\n<li>'sample' name of the sample REQUIRED.</li>\n<li>'index' location of the indexed fasta file REQUIRED.</li>\n<li>'fastq1' a tab seperated string of filenames denoting location of all R1 files for a sample REQUIRED if paired end.</li>\n<li>'fastq2' a tab seperated string of filenames denoting location of all R2 files for a sample REQUIRED if paired end.</li>\n<li>'fastqs' a tab seperated string of filenames can be used for single end reads REQUIRED if single end.</li>\n<li>'output' name of the location for the aligned and sorted bam file.</li>\n<li>'software' either 'STAR' or 'kallisto'.  REQUIRED</li>\n<li>'gtf' a location for annotation file in gtf format.  REQUIRED for SUMMARIZE.</li>\n</ul>\n<h2>Genomes and adding genome locations</h2>\n<p>you should have a previously indexed (by the software package of your choosing) location of your genome accessible to piperna.  This location is referred to in piperna as the 'index'.</p>\n<p>piperna provides an easy way to add these locations to your system for repeated use using the --genome_key (-gk) option during MAKERUNSHEET commands.  A file called genomes.json can be found in the 'data' directory of the piperna install folder.  This file can be edited to include those locations you want to regularly put in the runsheet.  The following shows an example of a genomes.json file.  The files \"top level\" is a name that can be used in the --genome_key field (-gk) during runsheet generation to populate the columns of the runsheet with locations associated with that genome_key.  The 'default' key will be used when no genome_key is specified.</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"default\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"index\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/path/path/hg38/STAR_index\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"gtf\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/path/path/hg38/hg38.gtf\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"default_kallisto\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"index\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/path/path/hg38/kallisto_index\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"gtf\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/path/path/hg38/hg38.gtf\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Doing a piperna run</h2>\n<p>Say your fastqs live within within subfolders of a folder 'fastq' in the folder 'data'.  So if you were to...</p>\n<pre><span class=\"nb\">cd</span> /data/fastq\nls\n</pre>\n<p>... you'd get a bunch of folders, each of which would be filled with fastqs.  Each folder name should correspond to a sample name.</p>\n<p><strong>To run piperna, do the following...</strong></p>\n<ol>\n<li>Make a new output directory 'piperna'.</li>\n<li>Go into that directory and make a runsheet pointing to the fastq folder i.e. the folder level above.  (at the command line, piperna is cool with either relative or absolute pathnames; but as stated earlier, absolute pathnames are required for the runsheet.)</li>\n<li>Optionally you can only select directories of fastq files that contain in their name the string denoted using the -sf flag.</li>\n<li>After inspecting and completing the runsheet, run ALIGN, NORM, and SEACR.</li>\n<li>Sit back have a cocktail.</li>\n</ol>\n<pre><span class=\"nb\">cd</span> ..\nmkdir piperna\n<span class=\"nb\">cd</span> piperna\npiperna MAKERUNSHEET -fq ../fastq -sf MySampleDirectoriesStartWithThisString -o .\npiperna ALIGN -r runsheet.csv\npiperna SUMMARIZE -r runsheet.csv -o SummarizedExperiment.RDS\n</pre>\n<h2>Interfacing with DESeq2</h2>\n<p><strong>After running piperna, the SummarizedExperiment.RDS file can be input directly into DESeq2 like this</strong></p>\n<pre></pre>\n<h2>Acknowledgements</h2>\n<p>Written by Scott Furlan with code inspiration from Andrew Hill's cellwrapper.</p>\n\n          </div>"}, "last_serial": 6916913, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "c6777d3706f12b3305d54f7b98672431", "sha256": "d29c0892d3aaf67c605d222fe255ae68513a2f63e74ec63cdb7bb8aefd4d60ad"}, "downloads": -1, "filename": "piperna-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c6777d3706f12b3305d54f7b98672431", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 5477, "upload_time": "2019-09-18T21:37:26", "upload_time_iso_8601": "2019-09-18T21:37:26.414736Z", "url": "https://files.pythonhosted.org/packages/99/1e/b07ee818ce4f97a588d700e54a905c334e286a4f7d845f0e7dbe854a6d70/piperna-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52b266ed424ee0bdeb1f7e45596c100e", "sha256": "5e82bb7b6b0470abff37ebca7d26b7891cd61bece5303f7768c34e411e129240"}, "downloads": -1, "filename": "piperna-0.4.tar.gz", "has_sig": false, "md5_digest": "52b266ed424ee0bdeb1f7e45596c100e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 7254, "upload_time": "2019-09-18T21:37:30", "upload_time_iso_8601": "2019-09-18T21:37:30.014543Z", "url": "https://files.pythonhosted.org/packages/4f/a6/f4b0ce18849165b1c35dec36bca3b190c0dbafec0f313f4f939237788482/piperna-0.4.tar.gz", "yanked": false}], "0.41": [{"comment_text": "", "digests": {"md5": "160cd49ba91ebad737e05b2cf895caff", "sha256": "608edcfb5b5640953b3fae5c79a486cd8ac5a8b44e35173792a043e82a5f8352"}, "downloads": -1, "filename": "piperna-0.41-py3-none-any.whl", "has_sig": false, "md5_digest": "160cd49ba91ebad737e05b2cf895caff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 12510, "upload_time": "2019-09-18T21:41:29", "upload_time_iso_8601": "2019-09-18T21:41:29.886121Z", "url": "https://files.pythonhosted.org/packages/4d/29/16b37be652d494aee745ea738b76d78d0d85835a34046c733cf583105fc1/piperna-0.41-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac261b07853491174c625183f4ba61b1", "sha256": "0dfbdf00d7aacec02c4331671167e19a92d103cbe6e08bfb4734acf1316e91a4"}, "downloads": -1, "filename": "piperna-0.41.tar.gz", "has_sig": false, "md5_digest": "ac261b07853491174c625183f4ba61b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 15827, "upload_time": "2019-09-18T21:41:31", "upload_time_iso_8601": "2019-09-18T21:41:31.493326Z", "url": "https://files.pythonhosted.org/packages/0e/e6/50e16f4831eba01d09993bfcaef7d77aadf0acfc03a6bb6064f002bc3e08/piperna-0.41.tar.gz", "yanked": false}], "0.42": [{"comment_text": "", "digests": {"md5": "b3ea317988638763a03164077a26beae", "sha256": "773c93d1a242d8a2e042a2c96b13a79cbca3bfd7d9f996bc8b94c52f9f93e41a"}, "downloads": -1, "filename": "piperna-0.42-py3-none-any.whl", "has_sig": false, "md5_digest": "b3ea317988638763a03164077a26beae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 12502, "upload_time": "2019-09-19T00:09:38", "upload_time_iso_8601": "2019-09-19T00:09:38.786154Z", "url": "https://files.pythonhosted.org/packages/d6/29/64d55577231e0963c6b70b08de1699d860fde01f27e33493c2c80064a9d7/piperna-0.42-py3-none-any.whl", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "95ec0abdac8c799b13be5470b751b22e", "sha256": "9064c471e3226977078e987a7d7a8642284b70517d3e46aeb7efc6ed34442cff"}, "downloads": -1, "filename": "piperna-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "95ec0abdac8c799b13be5470b751b22e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 13439, "upload_time": "2019-09-19T21:53:38", "upload_time_iso_8601": "2019-09-19T21:53:38.755829Z", "url": "https://files.pythonhosted.org/packages/b5/17/52403dc07e0527a1510f4862efd2bbd7fb56cdd6c5b02af1ddfb3a5563c8/piperna-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00f224c3b02e98aae7b8aa8930a1de0d", "sha256": "e67922d004e39176bf061e7b6b826dc4853a59ff88764f3f7ad1b78210297f0f"}, "downloads": -1, "filename": "piperna-0.6.tar.gz", "has_sig": false, "md5_digest": "00f224c3b02e98aae7b8aa8930a1de0d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 15444, "upload_time": "2019-09-19T21:53:40", "upload_time_iso_8601": "2019-09-19T21:53:40.449899Z", "url": "https://files.pythonhosted.org/packages/93/d9/5a4054af9807722232895c768187a8f3d09f6349b6aa22500cc19adac479/piperna-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "db832b9aff98cd8a4a5dec2e5c106063", "sha256": "4671432648eb3ce7a88c341af6efbb39cab087c257b0920c495e7372f664086c"}, "downloads": -1, "filename": "piperna-0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "db832b9aff98cd8a4a5dec2e5c106063", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 14599, "upload_time": "2019-11-28T20:29:27", "upload_time_iso_8601": "2019-11-28T20:29:27.659506Z", "url": "https://files.pythonhosted.org/packages/b7/fb/95a427fc2bc739c9623f1eff3bca7dd4e510e221869fce944b64ddb5dad6/piperna-0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bdd1a7de49d2bed4f47e7e45cd86a3af", "sha256": "a09fdb90d845b7b4a1f2330f7fc25f24ca551dd3933181c5d61675dbeb2f3247"}, "downloads": -1, "filename": "piperna-0.7.tar.gz", "has_sig": false, "md5_digest": "bdd1a7de49d2bed4f47e7e45cd86a3af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 16899, "upload_time": "2019-11-28T20:29:29", "upload_time_iso_8601": "2019-11-28T20:29:29.011760Z", "url": "https://files.pythonhosted.org/packages/9a/b8/89d583ea4b8460d6e49a7415917c052ee73d45eae2f56ebcab3a8934477d/piperna-0.7.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "a9dd8090d75b9d161e2802833b0da7fb", "sha256": "c1426edecea010d68bad06c084a7502aaa6c0e829cb9bf9893516fb13b5f4f90"}, "downloads": -1, "filename": "piperna-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a9dd8090d75b9d161e2802833b0da7fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 15897, "upload_time": "2020-02-09T06:54:36", "upload_time_iso_8601": "2020-02-09T06:54:36.851664Z", "url": "https://files.pythonhosted.org/packages/af/56/862cd3a09a51bfc1852bd04ddb282896f63e47799b32c4b1ad8a0b9eabcf/piperna-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59ff50327683860153253326f54e1e7a", "sha256": "5744eb2ede94d648cd7538cd427bf65e6ec964d6ff3e05d82ce4fd7a32514261"}, "downloads": -1, "filename": "piperna-1.0.tar.gz", "has_sig": false, "md5_digest": "59ff50327683860153253326f54e1e7a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 18039, "upload_time": "2020-02-09T06:54:38", "upload_time_iso_8601": "2020-02-09T06:54:38.695220Z", "url": "https://files.pythonhosted.org/packages/60/46/a7d3898d0969359f467cf193089762be5ce44b4c0eb48e991a7ecaeb87a4/piperna-1.0.tar.gz", "yanked": false}], "1.11": [{"comment_text": "", "digests": {"md5": "6237856963a6230790b16e5711b0aaeb", "sha256": "0f0d09c689e5e26cacc15c2584540aabffc51a08a2d52fce2fdd5b30944d6748"}, "downloads": -1, "filename": "piperna-1.11-py3-none-any.whl", "has_sig": false, "md5_digest": "6237856963a6230790b16e5711b0aaeb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 16246, "upload_time": "2020-02-26T02:35:51", "upload_time_iso_8601": "2020-02-26T02:35:51.614413Z", "url": "https://files.pythonhosted.org/packages/16/08/2749f6ec205094d972aa66d1ac719cffc7b59497261dc267fc0a1ea61380/piperna-1.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7f424cee7b23375df397fcf6f60ede6", "sha256": "f8cb6a8ec6f2d7297a992097de926b9928bde894b45e1cb4cdb5f9b081b9c4ca"}, "downloads": -1, "filename": "piperna-1.11.tar.gz", "has_sig": false, "md5_digest": "f7f424cee7b23375df397fcf6f60ede6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 18409, "upload_time": "2020-02-26T02:35:52", "upload_time_iso_8601": "2020-02-26T02:35:52.978421Z", "url": "https://files.pythonhosted.org/packages/27/be/29627665f8b31b16b8cd5b97fb2ccbc38d2e5e0400d630917ce321e8b3c0/piperna-1.11.tar.gz", "yanked": false}], "1.12": [{"comment_text": "", "digests": {"md5": "fe29ef572ec9fbcc330e7bb1deca9e4b", "sha256": "a453bdace1adfe964de4b4ef47a3cad0034cf07051d796afccdd3e096e239998"}, "downloads": -1, "filename": "piperna-1.12-py3-none-any.whl", "has_sig": false, "md5_digest": "fe29ef572ec9fbcc330e7bb1deca9e4b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 16253, "upload_time": "2020-02-26T02:37:50", "upload_time_iso_8601": "2020-02-26T02:37:50.358396Z", "url": "https://files.pythonhosted.org/packages/d5/fc/9c60ed511c232df34816fcd9a80b063d038ea64aa90cd8f7655dd8b4311b/piperna-1.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9aea0d8edd91dee3234772bffb865062", "sha256": "d7b627f9a8c4a4e0326057d9c3c55871d23133fbc81d58cf310108abd912b791"}, "downloads": -1, "filename": "piperna-1.12.tar.gz", "has_sig": false, "md5_digest": "9aea0d8edd91dee3234772bffb865062", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 18408, "upload_time": "2020-02-26T02:37:51", "upload_time_iso_8601": "2020-02-26T02:37:51.622787Z", "url": "https://files.pythonhosted.org/packages/8b/d2/330760ed88cd147b14aa6e01b8752ab189482184d19d4e14cb311e847f96/piperna-1.12.tar.gz", "yanked": false}], "1.13": [{"comment_text": "", "digests": {"md5": "1bef123b1ef25cfd43df4fd60502eaf6", "sha256": "a1180740df08e6ad9ae53395fa26b453bd40921237020a58bdef4a3ffa6935e0"}, "downloads": -1, "filename": "piperna-1.13-py3-none-any.whl", "has_sig": false, "md5_digest": "1bef123b1ef25cfd43df4fd60502eaf6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 16250, "upload_time": "2020-02-26T02:39:31", "upload_time_iso_8601": "2020-02-26T02:39:31.655465Z", "url": "https://files.pythonhosted.org/packages/1c/14/ae8dc938dfd04030223e6abe4dd2c91136c40210050be4890554916e7452/piperna-1.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6df7feadb65ed9676a5838f2abc113e", "sha256": "81b4fdad08b71c81c7720c1ecd99560c96950130c370587ebb627f8037b72b45"}, "downloads": -1, "filename": "piperna-1.13.tar.gz", "has_sig": false, "md5_digest": "c6df7feadb65ed9676a5838f2abc113e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 18415, "upload_time": "2020-02-26T02:39:33", "upload_time_iso_8601": "2020-02-26T02:39:33.756799Z", "url": "https://files.pythonhosted.org/packages/5b/0f/8ff4ca0d6d74d39344a80712ccb071f11482b130b03fd0873ebf9051f293/piperna-1.13.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "a7355edd4e76fb62fe8a5abb925b59d3", "sha256": "444ab3e2a4f90c0085fe554399bcb53f14e409367336dec6203bc3562ba49a4a"}, "downloads": -1, "filename": "piperna-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a7355edd4e76fb62fe8a5abb925b59d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 16328, "upload_time": "2020-02-26T05:01:00", "upload_time_iso_8601": "2020-02-26T05:01:00.761908Z", "url": "https://files.pythonhosted.org/packages/a3/44/8d155b4397bb99681f15b38bcf2c5c28086899e48f7c32ba308cf2ff6ba9/piperna-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c75260a2c75e9bf0b512132011c853a", "sha256": "ec38b071840f72196bb9a78ca0d26f2bb1985dd0735163e874267406b2c38f83"}, "downloads": -1, "filename": "piperna-1.2.tar.gz", "has_sig": false, "md5_digest": "3c75260a2c75e9bf0b512132011c853a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 18496, "upload_time": "2020-02-26T05:01:02", "upload_time_iso_8601": "2020-02-26T05:01:02.269966Z", "url": "https://files.pythonhosted.org/packages/36/7b/10efd74018c62be437ff586bf8563bee36242c104e284cc3f84e4aa09f7d/piperna-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "1da56fc755c55b0cc29ae85968566474", "sha256": "7b0073591d7d5e117c360783d809d5f59102ffec548e2ac9ebc8dd181b27c4a8"}, "downloads": -1, "filename": "piperna-1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1da56fc755c55b0cc29ae85968566474", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 16337, "upload_time": "2020-02-26T05:51:38", "upload_time_iso_8601": "2020-02-26T05:51:38.504008Z", "url": "https://files.pythonhosted.org/packages/99/53/188c98d4f749920c376c8fb25b01d6949eb9beb1c0c03a8616b6dedd9904/piperna-1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dcdbf380caa58490f782c49f2948ebef", "sha256": "3f22a57f958684191df8b2e80a9620920d5e638cf3f52247ecfad4d7a4f70caf"}, "downloads": -1, "filename": "piperna-1.3.tar.gz", "has_sig": false, "md5_digest": "dcdbf380caa58490f782c49f2948ebef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 18505, "upload_time": "2020-02-26T05:51:40", "upload_time_iso_8601": "2020-02-26T05:51:40.530377Z", "url": "https://files.pythonhosted.org/packages/82/70/54fc898d28ef785a3dffd2c513620ce6f36c4c8a2e85283f6fb92ebb19ce/piperna-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "3addc06c30fc1ea7e3bc5bd96efbced2", "sha256": "34ea9912a93314f9fa519027d293d3a89064b15db2e8fe55be178c7147979d7f"}, "downloads": -1, "filename": "piperna-1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3addc06c30fc1ea7e3bc5bd96efbced2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 16344, "upload_time": "2020-03-06T05:16:33", "upload_time_iso_8601": "2020-03-06T05:16:33.096949Z", "url": "https://files.pythonhosted.org/packages/68/a8/e2092da89882377903dfeba72a5d7eb73a9e8c46ac94d0867c09cf480d13/piperna-1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "004ea390443e294e3a04e621d3b689d3", "sha256": "01efd4f303b1053631c0f3a4792bed0e00c91bbc8158ac8c9b48bafbcaaa10c1"}, "downloads": -1, "filename": "piperna-1.4.tar.gz", "has_sig": false, "md5_digest": "004ea390443e294e3a04e621d3b689d3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 18547, "upload_time": "2020-03-06T05:16:35", "upload_time_iso_8601": "2020-03-06T05:16:35.140521Z", "url": "https://files.pythonhosted.org/packages/bd/31/34b58c0cb7c881d0ee5114a8151d4a31c8c4fe1d4165fcecd5a6ff46c6ac/piperna-1.4.tar.gz", "yanked": false}], "1.41": [{"comment_text": "", "digests": {"md5": "fc4958191f0b123607207913e75908dd", "sha256": "3841dec3ff344b27ec509280a3fcc6689744078f5c54106bde853bea453d819b"}, "downloads": -1, "filename": "piperna-1.41-py3-none-any.whl", "has_sig": false, "md5_digest": "fc4958191f0b123607207913e75908dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 16425, "upload_time": "2020-03-21T02:51:06", "upload_time_iso_8601": "2020-03-21T02:51:06.440587Z", "url": "https://files.pythonhosted.org/packages/c5/03/8119eaee585c67fa9a9448b771a1852f6f75e9b10a9ee5d638dcf86c598c/piperna-1.41-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26ba5597891b7b3f2d50f30d592a0c8b", "sha256": "8b18530e2c3b29dff2d38e6e59c9dbbbd45316b697e15bc95427feee717ec01c"}, "downloads": -1, "filename": "piperna-1.41.tar.gz", "has_sig": false, "md5_digest": "26ba5597891b7b3f2d50f30d592a0c8b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 18621, "upload_time": "2020-03-21T02:51:08", "upload_time_iso_8601": "2020-03-21T02:51:08.150111Z", "url": "https://files.pythonhosted.org/packages/0a/74/ba949ac06197ce1429963202d841508bdbf1d4a62775378018dd5cc017ec/piperna-1.41.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "e1929ab310434067bbff818e4346bb98", "sha256": "798ebd44a56c3d635c8c219498c510e38b0a23bf87f8e7d84dd4429b7c249d22"}, "downloads": -1, "filename": "piperna-1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "e1929ab310434067bbff818e4346bb98", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 17166, "upload_time": "2020-03-30T23:48:27", "upload_time_iso_8601": "2020-03-30T23:48:27.633603Z", "url": "https://files.pythonhosted.org/packages/f8/fb/3ea6b5c07f9cc1b7edd50ce3eda162539e90784a02195cc00b03261fda94/piperna-1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdcfe6bbb343be7471bda834f428dfa9", "sha256": "85e9746c771a3d94cc0dee6b80147503b0c47c828c1fef7c2556535d22905895"}, "downloads": -1, "filename": "piperna-1.5.tar.gz", "has_sig": false, "md5_digest": "fdcfe6bbb343be7471bda834f428dfa9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 19315, "upload_time": "2020-03-30T23:48:28", "upload_time_iso_8601": "2020-03-30T23:48:28.631965Z", "url": "https://files.pythonhosted.org/packages/3a/46/db2e907691a8e44595d0488e46a22c5902694a70246b53f449f4d841397b/piperna-1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fc4958191f0b123607207913e75908dd", "sha256": "3841dec3ff344b27ec509280a3fcc6689744078f5c54106bde853bea453d819b"}, "downloads": -1, "filename": "piperna-1.41-py3-none-any.whl", "has_sig": false, "md5_digest": "fc4958191f0b123607207913e75908dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 16425, "upload_time": "2020-03-21T02:51:06", "upload_time_iso_8601": "2020-03-21T02:51:06.440587Z", "url": "https://files.pythonhosted.org/packages/c5/03/8119eaee585c67fa9a9448b771a1852f6f75e9b10a9ee5d638dcf86c598c/piperna-1.41-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26ba5597891b7b3f2d50f30d592a0c8b", "sha256": "8b18530e2c3b29dff2d38e6e59c9dbbbd45316b697e15bc95427feee717ec01c"}, "downloads": -1, "filename": "piperna-1.41.tar.gz", "has_sig": false, "md5_digest": "26ba5597891b7b3f2d50f30d592a0c8b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 18621, "upload_time": "2020-03-21T02:51:08", "upload_time_iso_8601": "2020-03-21T02:51:08.150111Z", "url": "https://files.pythonhosted.org/packages/0a/74/ba949ac06197ce1429963202d841508bdbf1d4a62775378018dd5cc017ec/piperna-1.41.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:16 2020"}