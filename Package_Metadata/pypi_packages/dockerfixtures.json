{"info": {"author": "Nicolas CANIART", "author_email": "nicolas@caniart.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules", "Typing :: Typed"], "description": "============================================\nDocker containers as test fixtures made easy\n============================================\n\n.. image:: https://travis-ci.com/cans/python-docker-fixtures.svg?branch=master\n    :target: https://travis-ci.com/cans/python-docker-fixtures\n.. image:: https://circleci.com/gh/cans/python-docker-fixtures.svg?style=svg\n    :target: https://circleci.com/gh/cans/python-docker-fixtures\n.. image:: https://codecov.io/gh/cans/python-docker-fixtures/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/cans/python-docker-fixtures\n\n\nThis package was inspired by others, but was written from\nscratch. But after trying to make heads and tails of them\nwhen faced with bugs, I ended-up finding simpler to start\nover.\n\nUsing dockerfixtures with pytest\n================================\n\nTo spawn a container in your tests, proceed as follow:\n\n\n.. code-block:: Python\n\n    from dockerfixtures import image, container\n    import pytest\n\n\n    @pytest.fixture(scope='session')\n    def pg_image() -> image.Image:\n        return image.Image('postgres', tags='12')\n\n    @pytest.fixture(scope='function')\n    def pg_container(pg_image: image.Image) -> container.Container:\n        yield from container.fixture(some_image)\n\n    # If you don't need to reuse the image\n\n    @pytest.fixture(scope='session')\n    def pg_container() -> container.Container:\n        some_image = image.Image('postgres', tags='12')\n        yield from container.fixture(some_image)\n\n\nWhy not a pytest plugin ?\n=========================\n\nOther implementation of this have been provinding a pytest\nplugin, so you might wonder why this one doesn't ?\n\nFirst reason is I have not looked into it that much, yet.\n\nBut anyhow, you would still need to import the\n``dockerfixtures.image`` module. So I am not very sure what the\nbenefits would be ?\n\nAlso I found those plugins to provide somewhat bizarre API, for\nexample to define the fixtures' scope. I haven't looked into\nwhy they do that, yet. Here there are no surprises, a container\nfixture looks like any other fixture.\n\nPytest plugins are global: they have to be imported in your\n`top-level`_ ``conftest.py`` (see note). I think it is good\npractice to keep your tests properly partitioned based on their\nexternal dependencies. It can help split workload if the need\narises. In a collaborative environment, having to import\n``dockerfixtures``, may help prevent breaking that partitioning\nduring reviews.\n\n\n.. _top-level: https://docs.pytest.org/en/latest/writing_plugins.html#requiring-loading-plugins-in-a-test-module-or-conftest-file\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cans/docker-fixtures", "keywords": "docker,testing,fixtures", "license": "GPLv2", "maintainer": "", "maintainer_email": "", "name": "dockerfixtures", "package_url": "https://pypi.org/project/dockerfixtures/", "platform": "any", "project_url": "https://pypi.org/project/dockerfixtures/", "project_urls": {"Homepage": "https://github.com/cans/docker-fixtures"}, "release_url": "https://pypi.org/project/dockerfixtures/0.1.0/", "requires_dist": ["docker (~=4.1)", "coverage ; extra == 'dev'", "pdbpp ; extra == 'dev'", "pre-commit ; extra == 'dev'", "pytest ; extra == 'dev'", "pytest-cov ; extra == 'dev'", "pytest-mock ; extra == 'dev'", "setuptools-scm (~=3.4.0) ; extra == 'dev'", "Sphinx ; extra == 'dev'", "twine ; extra == 'dev'", "kafka-python ; extra == 'dev'"], "requires_python": ">= 3.6, <3.9", "summary": "Cointainers as Pytest fixture made easy", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.com/cans/python-docker-fixtures\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/cans/python-docker-fixtures.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/75ba36d85cd06b0ed5a41b28638800a65f1c0af2/68747470733a2f2f7472617669732d63692e636f6d2f63616e732f707974686f6e2d646f636b65722d66697874757265732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://circleci.com/gh/cans/python-docker-fixtures\" rel=\"nofollow\"><img alt=\"https://circleci.com/gh/cans/python-docker-fixtures.svg?style=svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f2f896dc3219ee90a1e9ec34e22b44fdd2a6445a/68747470733a2f2f636972636c6563692e636f6d2f67682f63616e732f707974686f6e2d646f636b65722d66697874757265732e7376673f7374796c653d737667\"></a>\n<a href=\"https://codecov.io/gh/cans/python-docker-fixtures\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/cans/python-docker-fixtures/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2c1d832d3fd5750649353695d8da0a4876574328/68747470733a2f2f636f6465636f762e696f2f67682f63616e732f707974686f6e2d646f636b65722d66697874757265732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p>This package was inspired by others, but was written from\nscratch. But after trying to make heads and tails of them\nwhen faced with bugs, I ended-up finding simpler to start\nover.</p>\n<div id=\"using-dockerfixtures-with-pytest\">\n<h2>Using dockerfixtures with pytest</h2>\n<p>To spawn a container in your tests, proceed as follow:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dockerfixtures</span> <span class=\"kn\">import</span> <span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">container</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">fixture</span><span class=\"p\">(</span><span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"s1\">'session'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">pg_image</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">Image</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"s1\">'postgres'</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"s1\">'12'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">fixture</span><span class=\"p\">(</span><span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"s1\">'function'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">pg_container</span><span class=\"p\">(</span><span class=\"n\">pg_image</span><span class=\"p\">:</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">Image</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">Container</span><span class=\"p\">:</span>\n    <span class=\"k\">yield from</span> <span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">fixture</span><span class=\"p\">(</span><span class=\"n\">some_image</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If you don't need to reuse the image</span>\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">fixture</span><span class=\"p\">(</span><span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"s1\">'session'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">pg_container</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">Container</span><span class=\"p\">:</span>\n    <span class=\"n\">some_image</span> <span class=\"o\">=</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"s1\">'postgres'</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"s1\">'12'</span><span class=\"p\">)</span>\n    <span class=\"k\">yield from</span> <span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">fixture</span><span class=\"p\">(</span><span class=\"n\">some_image</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"why-not-a-pytest-plugin\">\n<h2>Why not a pytest plugin ?</h2>\n<p>Other implementation of this have been provinding a pytest\nplugin, so you might wonder why this one doesn\u2019t ?</p>\n<p>First reason is I have not looked into it that much, yet.</p>\n<p>But anyhow, you would still need to import the\n<tt>dockerfixtures.image</tt> module. So I am not very sure what the\nbenefits would be ?</p>\n<p>Also I found those plugins to provide somewhat bizarre API, for\nexample to define the fixtures\u2019 scope. I haven\u2019t looked into\nwhy they do that, yet. Here there are no surprises, a container\nfixture looks like any other fixture.</p>\n<p>Pytest plugins are global: they have to be imported in your\n<a href=\"https://docs.pytest.org/en/latest/writing_plugins.html#requiring-loading-plugins-in-a-test-module-or-conftest-file\" rel=\"nofollow\">top-level</a> <tt>conftest.py</tt> (see note). I think it is good\npractice to keep your tests properly partitioned based on their\nexternal dependencies. It can help split workload if the need\narises. In a collaborative environment, having to import\n<tt>dockerfixtures</tt>, may help prevent breaking that partitioning\nduring reviews.</p>\n</div>\n\n          </div>"}, "last_serial": 6521787, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "d71d4f1264e856333d42ac6edaf67c2f", "sha256": "6586872504dfcc1c68dd6bc5c404d9145009c9ff0492b662ff5f6bef9192a039"}, "downloads": -1, "filename": "dockerfixtures-0.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d71d4f1264e856333d42ac6edaf67c2f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">= 3.6, <3.9", "size": 17059, "upload_time": "2020-01-26T11:11:50", "upload_time_iso_8601": "2020-01-26T11:11:50.072545Z", "url": "https://files.pythonhosted.org/packages/11/9f/6ebaeb67ba54e89f07ea5eb22c7a8117c8c2678c816db4daa595f7c52d30/dockerfixtures-0.0.0-py2.py3-none-any.whl", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "afea024dfeac0dd8700048295304ff74", "sha256": "2e8a3aa7a86bd9bf29826434357c68679b916f08559148a1b30b698b9b4e856a"}, "downloads": -1, "filename": "dockerfixtures-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "afea024dfeac0dd8700048295304ff74", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">= 3.6, <3.9", "size": 17062, "upload_time": "2020-01-26T12:55:11", "upload_time_iso_8601": "2020-01-26T12:55:11.546146Z", "url": "https://files.pythonhosted.org/packages/8d/08/65f8144cdd6d8b26d05b9cbbe288689b4c4fddb9d46ca1f62029e6f2e654/dockerfixtures-0.1.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "afea024dfeac0dd8700048295304ff74", "sha256": "2e8a3aa7a86bd9bf29826434357c68679b916f08559148a1b30b698b9b4e856a"}, "downloads": -1, "filename": "dockerfixtures-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "afea024dfeac0dd8700048295304ff74", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">= 3.6, <3.9", "size": 17062, "upload_time": "2020-01-26T12:55:11", "upload_time_iso_8601": "2020-01-26T12:55:11.546146Z", "url": "https://files.pythonhosted.org/packages/8d/08/65f8144cdd6d8b26d05b9cbbe288689b4c4fddb9d46ca1f62029e6f2e654/dockerfixtures-0.1.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:50:52 2020"}