{"info": {"author": "Example Author", "author_email": "ishumili@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# triangle-grid-merge\n\n## Why this project is useful\n\n1. It helps to generate finite element triangular grid in tecplot format (.dat).\n\n2. It's easy to read such a grid from tecplot (.dat) file.\n\n3. Works for a multizone grids.\n\n4. Able to merge multizone grids and write them as a single grid.\n\n**The main advantage is that with tgm it's easy to read tecplot (.dat) format with multizone triangular grid inside and\nconnect zones basing on the coordinates of the nodes.**\n\n## Quickstart\n\nTo **create** a grid\n```\nfrom triangular_grid_merge.grid import Grid\n```\nIn order to initialize the grid with elements use:\n```\ngrid.init(4, 5, (0, 60), (0, 100))\n```\nThe code above creates a grid with 4 points by x-axis and 5 point by y-axis.\nThe points are distributed inside the rectangular given by the 2 points - `(x1, x2) (y1, y2)`\n\nThe area is devided according to the number of points by each axis.\n\nTo **print** the grid inside the tgm's grids directory, use\n```\nfrom triangular_grid_merge.tecplot import print_tecplot\nprint_tecplot(grid, 'name.dat')\n```\nIf the grid is multizone you can print it as a single zone giving:\n```\nprint_tecplot(grid, 'name.dat', merge=True)\n```\n![threezones](docs/threezones.png)\n![threezones](docs/singlezone.png)\n\n\nTo **read** a grid. use\n```\nfrom triangular_grid_merge.tecplot import read_tecplot\nread_tecplot(grid, 'name.dat')\n```\n\n## Details\n\nTriangular grid is the one where each face is set by three nodes. \nIt consists of nodes, faces and edges.\n![grid_view](docs/grid_view.png)\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/SergeiShumilin/triangle-grid-merge/archive/v1.0.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SergeiShumilin/triangle-grid-merge", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "triangular-grid-merge", "package_url": "https://pypi.org/project/triangular-grid-merge/", "platform": "", "project_url": "https://pypi.org/project/triangular-grid-merge/", "project_urls": {"Download": "https://github.com/SergeiShumilin/triangle-grid-merge/archive/v1.0.0.tar.gz", "Homepage": "https://github.com/SergeiShumilin/triangle-grid-merge"}, "release_url": "https://pypi.org/project/triangular-grid-merge/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Easy generate, read, merge and print tecplot triangular grids.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>triangle-grid-merge</h1>\n<h2>Why this project is useful</h2>\n<ol>\n<li>\n<p>It helps to generate finite element triangular grid in tecplot format (.dat).</p>\n</li>\n<li>\n<p>It's easy to read such a grid from tecplot (.dat) file.</p>\n</li>\n<li>\n<p>Works for a multizone grids.</p>\n</li>\n<li>\n<p>Able to merge multizone grids and write them as a single grid.</p>\n</li>\n</ol>\n<p><strong>The main advantage is that with tgm it's easy to read tecplot (.dat) format with multizone triangular grid inside and\nconnect zones basing on the coordinates of the nodes.</strong></p>\n<h2>Quickstart</h2>\n<p>To <strong>create</strong> a grid</p>\n<pre><code>from triangular_grid_merge.grid import Grid\n</code></pre>\n<p>In order to initialize the grid with elements use:</p>\n<pre><code>grid.init(4, 5, (0, 60), (0, 100))\n</code></pre>\n<p>The code above creates a grid with 4 points by x-axis and 5 point by y-axis.\nThe points are distributed inside the rectangular given by the 2 points - <code>(x1, x2) (y1, y2)</code></p>\n<p>The area is devided according to the number of points by each axis.</p>\n<p>To <strong>print</strong> the grid inside the tgm's grids directory, use</p>\n<pre><code>from triangular_grid_merge.tecplot import print_tecplot\nprint_tecplot(grid, 'name.dat')\n</code></pre>\n<p>If the grid is multizone you can print it as a single zone giving:</p>\n<pre><code>print_tecplot(grid, 'name.dat', merge=True)\n</code></pre>\n<p><img alt=\"threezones\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/732b9b442f850cfd2560e35977ce1eeab9192e60/646f63732f74687265657a6f6e65732e706e67\">\n<img alt=\"threezones\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f53677b3288c113f79fa23299316544d00721ea6/646f63732f73696e676c657a6f6e652e706e67\"></p>\n<p>To <strong>read</strong> a grid. use</p>\n<pre><code>from triangular_grid_merge.tecplot import read_tecplot\nread_tecplot(grid, 'name.dat')\n</code></pre>\n<h2>Details</h2>\n<p>Triangular grid is the one where each face is set by three nodes.\nIt consists of nodes, faces and edges.\n<img alt=\"grid_view\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f50d47ec0d5c75615e19bc7a2d1683481263fd10/646f63732f677269645f766965772e706e67\"></p>\n\n          </div>"}, "last_serial": 5578088, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ddc80d35da2307298d9ec77c9e7914ee", "sha256": "cd24a0eaa0b74d5a3123acd6ed945d256b792b62d08c35a66af7012ec44e8911"}, "downloads": -1, "filename": "triangular_grid_merge-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ddc80d35da2307298d9ec77c9e7914ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21588, "upload_time": "2019-07-24T15:06:49", "upload_time_iso_8601": "2019-07-24T15:06:49.859034Z", "url": "https://files.pythonhosted.org/packages/4d/cf/3a96f9515eefc903b7dd0389833d4d3ec78287b3036f4c332ff3302b6030/triangular_grid_merge-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16600d0351459ea689f4e92a27251bb2", "sha256": "ba21de10f282ef9c83a15d393172bcf28b894a971b89680b46251142dc8dfd18"}, "downloads": -1, "filename": "triangular-grid-merge-1.0.0.tar.gz", "has_sig": false, "md5_digest": "16600d0351459ea689f4e92a27251bb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7599, "upload_time": "2019-07-24T15:06:52", "upload_time_iso_8601": "2019-07-24T15:06:52.621273Z", "url": "https://files.pythonhosted.org/packages/01/63/3edc196d91fea644ba5a3ecbc1d244cb655f605c72f61d3de63c864195cc/triangular-grid-merge-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ddc80d35da2307298d9ec77c9e7914ee", "sha256": "cd24a0eaa0b74d5a3123acd6ed945d256b792b62d08c35a66af7012ec44e8911"}, "downloads": -1, "filename": "triangular_grid_merge-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ddc80d35da2307298d9ec77c9e7914ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21588, "upload_time": "2019-07-24T15:06:49", "upload_time_iso_8601": "2019-07-24T15:06:49.859034Z", "url": "https://files.pythonhosted.org/packages/4d/cf/3a96f9515eefc903b7dd0389833d4d3ec78287b3036f4c332ff3302b6030/triangular_grid_merge-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16600d0351459ea689f4e92a27251bb2", "sha256": "ba21de10f282ef9c83a15d393172bcf28b894a971b89680b46251142dc8dfd18"}, "downloads": -1, "filename": "triangular-grid-merge-1.0.0.tar.gz", "has_sig": false, "md5_digest": "16600d0351459ea689f4e92a27251bb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7599, "upload_time": "2019-07-24T15:06:52", "upload_time_iso_8601": "2019-07-24T15:06:52.621273Z", "url": "https://files.pythonhosted.org/packages/01/63/3edc196d91fea644ba5a3ecbc1d244cb655f605c72f61d3de63c864195cc/triangular-grid-merge-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:47:20 2020"}