{"info": {"author": "James Lan", "author_email": "jameslan@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# setuptools-cmd-deps\n\n![Continuous Integration](https://github.com/jameslan/setuptools-cmd-deps/workflows/Continuous%20Integration/badge.svg)\n![pypi](https://img.shields.io/pypi/v/setuptools-cmd-deps)\n\nConfigure `setuptools` command dependencies easily.\n\n## Why I need this plugin\nOnce a custom `setuptools` command is defined and needs to be run before some build-in command,\ntraditionally, there's no simple way and the solution is to override the build-in command,\nto call the new custom command before the command implemented in the super class.\n\nIn this way, having an additional class and digging into `setuptools`,\nare just to configure the command order or dependency.\n\nThis could be simplified by using `setuptools-cmd-deps`:\nenable the plugin and add custom configuration.\n\n## Command dependency in the project\n\nIf your command is just for the project and it won't be reused,\nyou could use new setup keyword `cmd_deps` to define the dependencies.\n\n### Enable setuptools-cmd-deps\n\n- If your `setup.py` will run only after all depending packages are installed,\nadd `setuptools-cmd-deps` in your dependency list,\nsuch as `requirements.txt`, or `Pipfile`.\n\n- If your `setup.py` supports running out of venv,\nyou may not want these packages to be installed in the system.\nThen add `setuptools-cmd-deps` in the `setup_requires` option of your `setuptools`.\n\n### Define dependency\n\n```python\nsetuptools.setup(\n    cmdclass={'generate_py': GenereatePy},\n    cmd_deps={'build_py': ['generate_py']},\n)\n```\n\n## Command dependency to be shared\n\nIf you are developing a `setuptools` plugin,\nand want the command definition to be used by other project and run before some command,\nspecify the dependency in the `setuptools.cmd_deps` section in your `entry_points`.\n\n### Enable setuptools-cmd-deps for the target\n\nAdd `setuptools-cmd-deps` in the `install_requires` option of your `setuptools`,\nso that any project uses your package, will automatically uses `setuptools-cmd-deps`.\n\n### Define dependency\n\nGenerally speaking, you already have `distutils.commands` in your `entry_points`.\n\nFor example, you defined `gernate_py` command in the `entry_points` as follows,\n\n```\ndistutils.commands =\n    generate_py = command:GeneratePy\n```\n\nand want it always run before `build_py`.\nSimply add `setuptools.cmd_deps` in the `entry_points` as follows,\n\n```\nsetuptools.cmd_deps =\n    build_py_dep = build_py:generate_py\n```\n\nNote that the name `build_py_dep` is not used here.\nIt is just for the TOML syntax.\nFor the same reason, if there are multiple dependencies for one command,\nit should use dot `.` as delimiter,\n\n```\nsetuptools.cmd_deps =\n    command_dep = command:cmd1.cmd2\n```\n\nBoth `cmd1` and `cmd2` will be run before `command`.\n\nOr you can have multiple rules,\n\n```\nsetuptools.cmd_deps =\n    command_dep1 = command:cmd1\n    command_dep2 = command:cmd2\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jameslan/setuptools-cmd-deps", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "setuptools-cmd-deps", "package_url": "https://pypi.org/project/setuptools-cmd-deps/", "platform": "", "project_url": "https://pypi.org/project/setuptools-cmd-deps/", "project_urls": {"Homepage": "https://github.com/jameslan/setuptools-cmd-deps"}, "release_url": "https://pypi.org/project/setuptools-cmd-deps/1.0.1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "setuptools plugin to configure the dependency among commands", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>setuptools-cmd-deps</h1>\n<p><img alt=\"Continuous Integration\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3294d74d9cd3e037e733494df2fc0b783fa1b838/68747470733a2f2f6769746875622e636f6d2f6a616d65736c616e2f7365747570746f6f6c732d636d642d646570732f776f726b666c6f77732f436f6e74696e756f7573253230496e746567726174696f6e2f62616467652e737667\">\n<img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/920578150cd46ca58f13f1825e8a79935d1f224a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7365747570746f6f6c732d636d642d64657073\"></p>\n<p>Configure <code>setuptools</code> command dependencies easily.</p>\n<h2>Why I need this plugin</h2>\n<p>Once a custom <code>setuptools</code> command is defined and needs to be run before some build-in command,\ntraditionally, there's no simple way and the solution is to override the build-in command,\nto call the new custom command before the command implemented in the super class.</p>\n<p>In this way, having an additional class and digging into <code>setuptools</code>,\nare just to configure the command order or dependency.</p>\n<p>This could be simplified by using <code>setuptools-cmd-deps</code>:\nenable the plugin and add custom configuration.</p>\n<h2>Command dependency in the project</h2>\n<p>If your command is just for the project and it won't be reused,\nyou could use new setup keyword <code>cmd_deps</code> to define the dependencies.</p>\n<h3>Enable setuptools-cmd-deps</h3>\n<ul>\n<li>\n<p>If your <code>setup.py</code> will run only after all depending packages are installed,\nadd <code>setuptools-cmd-deps</code> in your dependency list,\nsuch as <code>requirements.txt</code>, or <code>Pipfile</code>.</p>\n</li>\n<li>\n<p>If your <code>setup.py</code> supports running out of venv,\nyou may not want these packages to be installed in the system.\nThen add <code>setuptools-cmd-deps</code> in the <code>setup_requires</code> option of your <code>setuptools</code>.</p>\n</li>\n</ul>\n<h3>Define dependency</h3>\n<pre><span class=\"n\">setuptools</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">(</span>\n    <span class=\"n\">cmdclass</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'generate_py'</span><span class=\"p\">:</span> <span class=\"n\">GenereatePy</span><span class=\"p\">},</span>\n    <span class=\"n\">cmd_deps</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'build_py'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'generate_py'</span><span class=\"p\">]},</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Command dependency to be shared</h2>\n<p>If you are developing a <code>setuptools</code> plugin,\nand want the command definition to be used by other project and run before some command,\nspecify the dependency in the <code>setuptools.cmd_deps</code> section in your <code>entry_points</code>.</p>\n<h3>Enable setuptools-cmd-deps for the target</h3>\n<p>Add <code>setuptools-cmd-deps</code> in the <code>install_requires</code> option of your <code>setuptools</code>,\nso that any project uses your package, will automatically uses <code>setuptools-cmd-deps</code>.</p>\n<h3>Define dependency</h3>\n<p>Generally speaking, you already have <code>distutils.commands</code> in your <code>entry_points</code>.</p>\n<p>For example, you defined <code>gernate_py</code> command in the <code>entry_points</code> as follows,</p>\n<pre><code>distutils.commands =\n    generate_py = command:GeneratePy\n</code></pre>\n<p>and want it always run before <code>build_py</code>.\nSimply add <code>setuptools.cmd_deps</code> in the <code>entry_points</code> as follows,</p>\n<pre><code>setuptools.cmd_deps =\n    build_py_dep = build_py:generate_py\n</code></pre>\n<p>Note that the name <code>build_py_dep</code> is not used here.\nIt is just for the TOML syntax.\nFor the same reason, if there are multiple dependencies for one command,\nit should use dot <code>.</code> as delimiter,</p>\n<pre><code>setuptools.cmd_deps =\n    command_dep = command:cmd1.cmd2\n</code></pre>\n<p>Both <code>cmd1</code> and <code>cmd2</code> will be run before <code>command</code>.</p>\n<p>Or you can have multiple rules,</p>\n<pre><code>setuptools.cmd_deps =\n    command_dep1 = command:cmd1\n    command_dep2 = command:cmd2\n</code></pre>\n\n          </div>"}, "last_serial": 7177444, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0c3e0df52fe12d0fa175f07c8ef7d27a", "sha256": "e1e5b5e84d93017922e36f5184c5a192ad72b9a9a549b24d87218d4ac29d9755"}, "downloads": -1, "filename": "setuptools_cmd_deps-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0c3e0df52fe12d0fa175f07c8ef7d27a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7311, "upload_time": "2020-04-24T05:33:21", "upload_time_iso_8601": "2020-04-24T05:33:21.345697Z", "url": "https://files.pythonhosted.org/packages/5d/11/7e897e8aca6f972169494bed4ad2d08242530e9b5ce4e416106ac05bfddf/setuptools_cmd_deps-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "827db52c1b80ef60c12f88620ec2275e", "sha256": "41bd0894dd61fdd3dafecde07c24e7e2813f66505f020dc5258c1095878de769"}, "downloads": -1, "filename": "setuptools-cmd-deps-1.0.0.tar.gz", "has_sig": false, "md5_digest": "827db52c1b80ef60c12f88620ec2275e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13007, "upload_time": "2020-04-24T07:02:45", "upload_time_iso_8601": "2020-04-24T07:02:45.290431Z", "url": "https://files.pythonhosted.org/packages/d7/be/440b9d49f7f452d1a0e6b18a59dbffbe874ac5f3dbe924291941fec6d9c2/setuptools-cmd-deps-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "98ef13110795054935e718987d72c27f", "sha256": "0e883071e161d4fabbbfc510a31aa94441e83b995553a7e45c7611fd317e7ab2"}, "downloads": -1, "filename": "setuptools_cmd_deps-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "98ef13110795054935e718987d72c27f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7384, "upload_time": "2020-05-05T02:45:36", "upload_time_iso_8601": "2020-05-05T02:45:36.272895Z", "url": "https://files.pythonhosted.org/packages/30/6c/9fb32399d2e22ac7cfd6f3db5133f5d29a81713d2325388a4c7646007bc8/setuptools_cmd_deps-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b923ae0652b7bdc30c86c2325bec12c", "sha256": "6001a8a5bb4f417e239f1ed86180bad77ccac4aa37232e9371c47c40a63e8f1f"}, "downloads": -1, "filename": "setuptools-cmd-deps-1.0.1.tar.gz", "has_sig": false, "md5_digest": "5b923ae0652b7bdc30c86c2325bec12c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12978, "upload_time": "2020-05-06T04:25:04", "upload_time_iso_8601": "2020-05-06T04:25:04.686059Z", "url": "https://files.pythonhosted.org/packages/b7/04/bbf89e7f50fbd55fd0f54692fcde4c33f297a3af7cb3ffd60fe3051c9975/setuptools-cmd-deps-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "98ef13110795054935e718987d72c27f", "sha256": "0e883071e161d4fabbbfc510a31aa94441e83b995553a7e45c7611fd317e7ab2"}, "downloads": -1, "filename": "setuptools_cmd_deps-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "98ef13110795054935e718987d72c27f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7384, "upload_time": "2020-05-05T02:45:36", "upload_time_iso_8601": "2020-05-05T02:45:36.272895Z", "url": "https://files.pythonhosted.org/packages/30/6c/9fb32399d2e22ac7cfd6f3db5133f5d29a81713d2325388a4c7646007bc8/setuptools_cmd_deps-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b923ae0652b7bdc30c86c2325bec12c", "sha256": "6001a8a5bb4f417e239f1ed86180bad77ccac4aa37232e9371c47c40a63e8f1f"}, "downloads": -1, "filename": "setuptools-cmd-deps-1.0.1.tar.gz", "has_sig": false, "md5_digest": "5b923ae0652b7bdc30c86c2325bec12c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12978, "upload_time": "2020-05-06T04:25:04", "upload_time_iso_8601": "2020-05-06T04:25:04.686059Z", "url": "https://files.pythonhosted.org/packages/b7/04/bbf89e7f50fbd55fd0f54692fcde4c33f297a3af7cb3ffd60fe3051c9975/setuptools-cmd-deps-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:31 2020"}