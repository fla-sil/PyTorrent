{"info": {"author": "hannahsim", "author_email": "hsim13372@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "\n=========\nQCompress\n=========\n\n\nDescription\n===========\n\nQCompress is a Python framework for the quantum autoencoder (QAE) algorithm. Using the code, the user can execute instances of the algorithm on either a quantum simulator or a quantum processor provided by Rigetti Computing's `Quantum Cloud Services <https://www.rigetti.com/qcs>`__. For a more in-depth description of QCompress (including the naming convention for the types of qubits involved in the QAE circuit), click `here <https://github.com/hsim13372/QCompress/blob/master/examples/intro.rst>`__. \n\nFor more information about the algorithm, see `Romero et al <https://arxiv.org/abs/1612.02806>`__. Note that we deviate from the training technique used in the original paper and instead introduce two alternative autoencoder training schemes that require lower-depth circuits (see `Sim et al <https://arxiv.org/abs/1810.10576>`__).\n\nFeatures\n--------\n\nThis code is based on an older `version <https://github.com/hsim13372/QCompress-1>`__ written during Rigetti Computing's hackathon in April 2018. Since then, we've updated and enhanced the code, supporting the following features:\n\n* Executability on Rigetti's quantum processor(s)\n* Several training schemes for the autoencoder\n* Use of the ``RESET`` operation for the encoding qubits (lowers qubit requirement)\n* User-definable training circuit and/or classical optimization routine\n\n\nInstallation\n============\n\nThere are a few options for installing QCompress:\n\n1. To install QCompress using ``pip``, execute:\n\n.. code-block:: bash\n\n\tpip install qcompress\n\n\n2. To install QCompress using ``conda``, execute:\n\n.. code-block:: bash\n\n\tconda install -c rigetti -c hsim13372 qcompress\n\n\n3. To instead install QCompress from source, clone this repository, ``cd`` into it, and run:\n\n.. code-block:: bash\n\n\tgit clone https://github.com/hsim13372/QCompress\n\tcd QCompress\n\tpython -m pip install -e .\n\n\nTry executing ``import qcompress`` to test the installation in your terminal.\n\nNote that the pyQuil version used requires Python 3.6 or later. For installation on a user QMI, please click `here <https://github.com/hsim13372/QCompress/blob/master/qmi_instructions.rst>`__.\n\n\nExamples\n========\n\nWe provide several Jupyter notebooks to demonstrate the utility of QCompress. We recommend going through the notebooks in the order shown in the table (top-down).\n\n.. csv-table::\n   :header: Notebook, Feature(s)\n\n   `qae_h2_demo.ipynb <https://github.com/hsim13372/QCompress/blob/master/examples/qae_h2_demo.ipynb>`__, Simulates the compression of the ground states of the hydrogen molecule. Uses OpenFermion and grove to generate data. Demonstrates the \"halfway\" training scheme.\n   `qae_two_qubit_demo.ipynb <https://github.com/hsim13372/QCompress/blob/master/examples/qae_two_qubit_demo.ipynb>`__, Simulates the compression of a two-qubit data set. Outlines how to run an instance on an actual device. Demonstrates the \"full with reset\" training scheme.\n   `run_landscape_scan.ipynb <https://github.com/hsim13372/QCompress/blob/master/examples/run_landscape_scan.ipynb>`__, Shows user how to run landscape scans for small (few-parameter) instances. Demonstrates setup of the \"full with no reset\" training scheme.\n\n\nDisclaimer\n==========\n\nWe note that there is a lot of room for improvement and fixes. Please feel free to submit issues and/or pull requests!\n\n\nHow to cite\n===========\n\nWhen using QCompress for research projects, please cite:\n\n\tSukin Sim, Yudong Cao, Jonathan Romero, Peter D. Johnson and Al\u00e1n Aspuru-Guzik.\n\t*A framework for algorithm deployment on cloud-based quantum computers*.\n\t`arXiv:1810.10576 <https://arxiv.org/abs/1810.10576>`__. 2018.\n\n\nAuthors\n=======\n\n`Sukin (Hannah) Sim <https://github.com/hsim13372>`__ (Harvard), `Zapata Computing, Inc. <https://zapatacomputing.com/>`__\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hsim13372/QCompress", "keywords": "", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "qcompress", "package_url": "https://pypi.org/project/qcompress/", "platform": "", "project_url": "https://pypi.org/project/qcompress/", "project_urls": {"Homepage": "https://github.com/hsim13372/QCompress"}, "release_url": "https://pypi.org/project/qcompress/0.0.1.dev12/", "requires_dist": ["pytest", "jupyter", "pyquil (>=2.0.0b1)", "openfermion (>=0.7)"], "requires_python": ">=3.6", "summary": "A Python framework for the quantum autoencoder algorithm", "version": "0.0.1.dev12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"description\">\n<h2>Description</h2>\n<p>QCompress is a Python framework for the quantum autoencoder (QAE) algorithm. Using the code, the user can execute instances of the algorithm on either a quantum simulator or a quantum processor provided by Rigetti Computing\u2019s <a href=\"https://www.rigetti.com/qcs\" rel=\"nofollow\">Quantum Cloud Services</a>. For a more in-depth description of QCompress (including the naming convention for the types of qubits involved in the QAE circuit), click <a href=\"https://github.com/hsim13372/QCompress/blob/master/examples/intro.rst\" rel=\"nofollow\">here</a>.</p>\n<p>For more information about the algorithm, see <a href=\"https://arxiv.org/abs/1612.02806\" rel=\"nofollow\">Romero et al</a>. Note that we deviate from the training technique used in the original paper and instead introduce two alternative autoencoder training schemes that require lower-depth circuits (see <a href=\"https://arxiv.org/abs/1810.10576\" rel=\"nofollow\">Sim et al</a>).</p>\n<div id=\"features\">\n<h3>Features</h3>\n<p>This code is based on an older <a href=\"https://github.com/hsim13372/QCompress-1\" rel=\"nofollow\">version</a> written during Rigetti Computing\u2019s hackathon in April 2018. Since then, we\u2019ve updated and enhanced the code, supporting the following features:</p>\n<ul>\n<li>Executability on Rigetti\u2019s quantum processor(s)</li>\n<li>Several training schemes for the autoencoder</li>\n<li>Use of the <tt>RESET</tt> operation for the encoding qubits (lowers qubit requirement)</li>\n<li>User-definable training circuit and/or classical optimization routine</li>\n</ul>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>There are a few options for installing QCompress:</p>\n<ol>\n<li>To install QCompress using <tt>pip</tt>, execute:</li>\n</ol>\n<pre>pip install qcompress\n</pre>\n<ol>\n<li>To install QCompress using <tt>conda</tt>, execute:</li>\n</ol>\n<pre>conda install -c rigetti -c hsim13372 qcompress\n</pre>\n<ol>\n<li>To instead install QCompress from source, clone this repository, <tt>cd</tt> into it, and run:</li>\n</ol>\n<pre>git clone https://github.com/hsim13372/QCompress\n<span class=\"nb\">cd</span> QCompress\npython -m pip install -e .\n</pre>\n<p>Try executing <tt>import qcompress</tt> to test the installation in your terminal.</p>\n<p>Note that the pyQuil version used requires Python 3.6 or later. For installation on a user QMI, please click <a href=\"https://github.com/hsim13372/QCompress/blob/master/qmi_instructions.rst\" rel=\"nofollow\">here</a>.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>We provide several Jupyter notebooks to demonstrate the utility of QCompress. We recommend going through the notebooks in the order shown in the table (top-down).</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Notebook</th>\n<th>Feature(s)</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><a href=\"https://github.com/hsim13372/QCompress/blob/master/examples/qae_h2_demo.ipynb\" rel=\"nofollow\">qae_h2_demo.ipynb</a></td>\n<td>Simulates the compression of the ground states of the hydrogen molecule. Uses OpenFermion and grove to generate data. Demonstrates the \u201chalfway\u201d training scheme.</td>\n</tr>\n<tr><td><a href=\"https://github.com/hsim13372/QCompress/blob/master/examples/qae_two_qubit_demo.ipynb\" rel=\"nofollow\">qae_two_qubit_demo.ipynb</a></td>\n<td>Simulates the compression of a two-qubit data set. Outlines how to run an instance on an actual device. Demonstrates the \u201cfull with reset\u201d training scheme.</td>\n</tr>\n<tr><td><a href=\"https://github.com/hsim13372/QCompress/blob/master/examples/run_landscape_scan.ipynb\" rel=\"nofollow\">run_landscape_scan.ipynb</a></td>\n<td>Shows user how to run landscape scans for small (few-parameter) instances. Demonstrates setup of the \u201cfull with no reset\u201d training scheme.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"disclaimer\">\n<h2>Disclaimer</h2>\n<p>We note that there is a lot of room for improvement and fixes. Please feel free to submit issues and/or pull requests!</p>\n</div>\n<div id=\"how-to-cite\">\n<h2>How to cite</h2>\n<p>When using QCompress for research projects, please cite:</p>\n<blockquote>\nSukin Sim, Yudong Cao, Jonathan Romero, Peter D. Johnson and Al\u00e1n Aspuru-Guzik.\n<em>A framework for algorithm deployment on cloud-based quantum computers</em>.\n<a href=\"https://arxiv.org/abs/1810.10576\" rel=\"nofollow\">arXiv:1810.10576</a>. 2018.</blockquote>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p><a href=\"https://github.com/hsim13372\" rel=\"nofollow\">Sukin (Hannah) Sim</a> (Harvard), <a href=\"https://zapatacomputing.com/\" rel=\"nofollow\">Zapata Computing, Inc.</a></p>\n</div>\n\n          </div>"}, "last_serial": 4728749, "releases": {"0.0.1.dev10": [{"comment_text": "", "digests": {"md5": "2d21bde0b15d41cb622c069a7616e20d", "sha256": "34a2e93410ad5af6d4fdc44b10d57091ef4b5528c774d012f1d6a0e10fd14632"}, "downloads": -1, "filename": "qcompress-0.0.1.dev10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2d21bde0b15d41cb622c069a7616e20d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 18194, "upload_time": "2018-11-29T16:20:08", "upload_time_iso_8601": "2018-11-29T16:20:08.017792Z", "url": "https://files.pythonhosted.org/packages/10/35/d6de814aaabf50e3a294268f5f54b29009e1d06f7ffa0ec5f604636ed391/qcompress-0.0.1.dev10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "737bb7a8300af84d5c76c7b3890c858a", "sha256": "8421c21a1d5c686272a2c1d437657c150a024ea21bb4f8351d1df2c5a6ccd42c"}, "downloads": -1, "filename": "qcompress-0.0.1.dev10-py3-none-any.whl", "has_sig": false, "md5_digest": "737bb7a8300af84d5c76c7b3890c858a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18562, "upload_time": "2018-11-23T20:45:06", "upload_time_iso_8601": "2018-11-23T20:45:06.246906Z", "url": "https://files.pythonhosted.org/packages/b7/73/3075fdd352242c622284dc9b627503709406571acb32ce2bf1296efd4e83/qcompress-0.0.1.dev10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "952962d917d92834cb67772da7b5da8f", "sha256": "780d7fb3415ab43fe86d6eaa37579efb2066ea790bff7b2be340ffb9a32fd44c"}, "downloads": -1, "filename": "qcompress-0.0.1.dev10.tar.gz", "has_sig": false, "md5_digest": "952962d917d92834cb67772da7b5da8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 106798, "upload_time": "2018-11-29T16:20:09", "upload_time_iso_8601": "2018-11-29T16:20:09.930664Z", "url": "https://files.pythonhosted.org/packages/ac/46/484c25ace8bb2ab0796e88bec7a5041862e0ce7786e9213b1dbc923d9bb4/qcompress-0.0.1.dev10.tar.gz", "yanked": false}], "0.0.1.dev11": [{"comment_text": "", "digests": {"md5": "c3118d1c265795a3d4b7e077125e01b1", "sha256": "27b78c094f038576c97dab60aca10604976f6108ccda3544e3498f9332112000"}, "downloads": -1, "filename": "qcompress-0.0.1.dev11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c3118d1c265795a3d4b7e077125e01b1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 114797, "upload_time": "2018-12-03T23:55:02", "upload_time_iso_8601": "2018-12-03T23:55:02.733482Z", "url": "https://files.pythonhosted.org/packages/c5/b6/71533562976c2512e9543763138c98e4c18166d78509e77df843fad73ec9/qcompress-0.0.1.dev11-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "825278dedf79d2a7ded81bb23b8d0dec", "sha256": "0070e293b8d4e23a7162d485debf0764f79ea2ab22e93e771ff55a11eba49501"}, "downloads": -1, "filename": "qcompress-0.0.1.dev11.tar.gz", "has_sig": false, "md5_digest": "825278dedf79d2a7ded81bb23b8d0dec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 193750, "upload_time": "2018-12-03T23:55:04", "upload_time_iso_8601": "2018-12-03T23:55:04.864293Z", "url": "https://files.pythonhosted.org/packages/cc/58/c586cf8138b9a6c565ab1605db9ecfbc5b5b8c4068141df1f57d2704dd1e/qcompress-0.0.1.dev11.tar.gz", "yanked": false}], "0.0.1.dev12": [{"comment_text": "", "digests": {"md5": "ce2a849f43b708418c98070dc18cb563", "sha256": "c2fce18a5ff49f24752d95b31809227e941aaaf472d04ea80301d58815ea4b28"}, "downloads": -1, "filename": "qcompress-0.0.1.dev12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ce2a849f43b708418c98070dc18cb563", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 114063, "upload_time": "2019-01-23T02:24:31", "upload_time_iso_8601": "2019-01-23T02:24:31.959205Z", "url": "https://files.pythonhosted.org/packages/98/fe/4609fb919a3b00bbf74a81fbb63a1e233aae6b51f350f00054a597de55c3/qcompress-0.0.1.dev12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f6a8e146e4a7ddc5c89976af0e5d6e2", "sha256": "eb5d97377a1bcbf3af252d2ae63027aadc37fe4ffe9f3b9e15368d1d8a141cb7"}, "downloads": -1, "filename": "qcompress-0.0.1.dev12.tar.gz", "has_sig": false, "md5_digest": "0f6a8e146e4a7ddc5c89976af0e5d6e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 180600, "upload_time": "2019-01-23T02:24:34", "upload_time_iso_8601": "2019-01-23T02:24:34.377567Z", "url": "https://files.pythonhosted.org/packages/d9/9a/ffa5d48da7e77276ed3318e520d24994d35b44ffc56da01a95dbad0e6739/qcompress-0.0.1.dev12.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce2a849f43b708418c98070dc18cb563", "sha256": "c2fce18a5ff49f24752d95b31809227e941aaaf472d04ea80301d58815ea4b28"}, "downloads": -1, "filename": "qcompress-0.0.1.dev12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ce2a849f43b708418c98070dc18cb563", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 114063, "upload_time": "2019-01-23T02:24:31", "upload_time_iso_8601": "2019-01-23T02:24:31.959205Z", "url": "https://files.pythonhosted.org/packages/98/fe/4609fb919a3b00bbf74a81fbb63a1e233aae6b51f350f00054a597de55c3/qcompress-0.0.1.dev12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f6a8e146e4a7ddc5c89976af0e5d6e2", "sha256": "eb5d97377a1bcbf3af252d2ae63027aadc37fe4ffe9f3b9e15368d1d8a141cb7"}, "downloads": -1, "filename": "qcompress-0.0.1.dev12.tar.gz", "has_sig": false, "md5_digest": "0f6a8e146e4a7ddc5c89976af0e5d6e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 180600, "upload_time": "2019-01-23T02:24:34", "upload_time_iso_8601": "2019-01-23T02:24:34.377567Z", "url": "https://files.pythonhosted.org/packages/d9/9a/ffa5d48da7e77276ed3318e520d24994d35b44ffc56da01a95dbad0e6739/qcompress-0.0.1.dev12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:58 2020"}