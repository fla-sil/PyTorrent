{"info": {"author": "Matthew Casserly", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# Burnlight\nBurnlight is a server and client for automating the control \nof the GPIO pins on a Raspberry Pi.\n\n## Features\n- Run custom schedules controlling one or more GPIO pins.\n- Web API for remote management and monitoring.\n- Paired input and output for feedback on controlled systems.\n\n## Requirements\n* [Flask](http://flask.pocoo.org/) - Serves the API.\n* [gevent](http://www.gevent.org/) - Runs the scheduling threads.\n* [Lark parser](https://github.com/lark-parser/lark) - Parses BSL programs.\n* [gpiozero](https://gpiozero.readthedocs.io) - Controls GPIO outputs on Raspberry Pi computers.\n\n## Getting started on Raspbian\nInstall Burnlight using pip:\n```\n$ pip install burnlight\n```\nStart the server:\n```\n$ burnlightd\n```\nCreate a file `schedule.bsl` with the following contents:\n```\n{\n    loop 10: {\n        (On,1),\n        (Off,1)\n    }\n}\n```\nAdd and start the schedule using the client\n```\n$ burnlight schedules add schedule.bsl --start_time now\n```\n\n\n## Burnlight Scheduling Language (BSL)\nSchedules are described with a simple language.\n\nThe following program will turn the on output for one second each minute for one hour.\n\n```\n{\n    loop 60: {\n        (On,1),\n        (Off,59)\n    }\n}\n```\n\nBSL currently supports programs consisting of sequences of output statements\nand loops.\n\nThe simplest program possible is `{}`, which will do absolutely nothing.\nWe can make it slightly more interesting by using _output statements_.\nAn output statement takes the for `(<state>,<duration>)` where `<state>` is\nthe desired output state, `On` or `Off`, and `<duration>` is the duration\nthe output should be in that state in seconds.\n\nThe following program turns the output on for ten seconds:\n```\n{\n    (On, 10),\n    (Off, 1)\n}\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wailashi/burnlight", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "burnlight", "package_url": "https://pypi.org/project/burnlight/", "platform": "", "project_url": "https://pypi.org/project/burnlight/", "project_urls": {"Homepage": "https://github.com/wailashi/burnlight"}, "release_url": "https://pypi.org/project/burnlight/0.2.0/", "requires_dist": ["flask (>=1.0.0)", "lark-parser", "gevent", "click", "gpiozero", "requests"], "requires_python": "", "summary": "GPIO scheduler for Raspberry Pis", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Burnlight</h1>\n<p>Burnlight is a server and client for automating the control\nof the GPIO pins on a Raspberry Pi.</p>\n<h2>Features</h2>\n<ul>\n<li>Run custom schedules controlling one or more GPIO pins.</li>\n<li>Web API for remote management and monitoring.</li>\n<li>Paired input and output for feedback on controlled systems.</li>\n</ul>\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a> - Serves the API.</li>\n<li><a href=\"http://www.gevent.org/\" rel=\"nofollow\">gevent</a> - Runs the scheduling threads.</li>\n<li><a href=\"https://github.com/lark-parser/lark\" rel=\"nofollow\">Lark parser</a> - Parses BSL programs.</li>\n<li><a href=\"https://gpiozero.readthedocs.io\" rel=\"nofollow\">gpiozero</a> - Controls GPIO outputs on Raspberry Pi computers.</li>\n</ul>\n<h2>Getting started on Raspbian</h2>\n<p>Install Burnlight using pip:</p>\n<pre><code>$ pip install burnlight\n</code></pre>\n<p>Start the server:</p>\n<pre><code>$ burnlightd\n</code></pre>\n<p>Create a file <code>schedule.bsl</code> with the following contents:</p>\n<pre><code>{\n    loop 10: {\n        (On,1),\n        (Off,1)\n    }\n}\n</code></pre>\n<p>Add and start the schedule using the client</p>\n<pre><code>$ burnlight schedules add schedule.bsl --start_time now\n</code></pre>\n<h2>Burnlight Scheduling Language (BSL)</h2>\n<p>Schedules are described with a simple language.</p>\n<p>The following program will turn the on output for one second each minute for one hour.</p>\n<pre><code>{\n    loop 60: {\n        (On,1),\n        (Off,59)\n    }\n}\n</code></pre>\n<p>BSL currently supports programs consisting of sequences of output statements\nand loops.</p>\n<p>The simplest program possible is <code>{}</code>, which will do absolutely nothing.\nWe can make it slightly more interesting by using <em>output statements</em>.\nAn output statement takes the for <code>(&lt;state&gt;,&lt;duration&gt;)</code> where <code>&lt;state&gt;</code> is\nthe desired output state, <code>On</code> or <code>Off</code>, and <code>&lt;duration&gt;</code> is the duration\nthe output should be in that state in seconds.</p>\n<p>The following program turns the output on for ten seconds:</p>\n<pre><code>{\n    (On, 10),\n    (Off, 1)\n}\n</code></pre>\n\n          </div>"}, "last_serial": 4881251, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "4306bce013a57d837210e3a5b737b663", "sha256": "ca306d8a0adb2b42fce452b341462e75ebc4461460ee425a54636d5ffd017b5d"}, "downloads": -1, "filename": "burnlight-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4306bce013a57d837210e3a5b737b663", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12551, "upload_time": "2019-02-28T21:39:35", "upload_time_iso_8601": "2019-02-28T21:39:35.435936Z", "url": "https://files.pythonhosted.org/packages/76/02/ee707d96741b9376e0573d36eac11918472fcae493d5fdbba501f69e4463/burnlight-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c324e912c0477c04acd79976d9acdb0f", "sha256": "937e30fed12cb50be68037046d1fedf78f7bfe9670cfe04b12c603803cf6f5bd"}, "downloads": -1, "filename": "burnlight-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c324e912c0477c04acd79976d9acdb0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7606, "upload_time": "2019-02-28T21:39:40", "upload_time_iso_8601": "2019-02-28T21:39:40.243230Z", "url": "https://files.pythonhosted.org/packages/1e/31/fa29040a307ecd496c94c74385bb2f814cbe6c980ddb2ed7a58fd81974c1/burnlight-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4306bce013a57d837210e3a5b737b663", "sha256": "ca306d8a0adb2b42fce452b341462e75ebc4461460ee425a54636d5ffd017b5d"}, "downloads": -1, "filename": "burnlight-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4306bce013a57d837210e3a5b737b663", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12551, "upload_time": "2019-02-28T21:39:35", "upload_time_iso_8601": "2019-02-28T21:39:35.435936Z", "url": "https://files.pythonhosted.org/packages/76/02/ee707d96741b9376e0573d36eac11918472fcae493d5fdbba501f69e4463/burnlight-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c324e912c0477c04acd79976d9acdb0f", "sha256": "937e30fed12cb50be68037046d1fedf78f7bfe9670cfe04b12c603803cf6f5bd"}, "downloads": -1, "filename": "burnlight-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c324e912c0477c04acd79976d9acdb0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7606, "upload_time": "2019-02-28T21:39:40", "upload_time_iso_8601": "2019-02-28T21:39:40.243230Z", "url": "https://files.pythonhosted.org/packages/1e/31/fa29040a307ecd496c94c74385bb2f814cbe6c980ddb2ed7a58fd81974c1/burnlight-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:57 2020"}