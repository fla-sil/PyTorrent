{"info": {"author": "Nikolay Novik", "author_email": "nickolainovik@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: AsyncIO", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "aiozipkin\n=========\n.. image:: https://travis-ci.com/aio-libs/aiozipkin.svg?branch=master\n    :target: https://travis-ci.com/aio-libs/aiozipkin\n.. image:: https://codecov.io/gh/aio-libs/aiozipkin/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/aio-libs/aiozipkin\n.. image:: https://api.codeclimate.com/v1/badges/1ff813d5cad2d702cbf1/maintainability\n   :target: https://codeclimate.com/github/aio-libs/aiozipkin/maintainability\n   :alt: Maintainability\n.. image:: https://img.shields.io/pypi/v/aiozipkin.svg\n    :target: https://pypi.python.org/pypi/aiozipkin\n.. image:: https://readthedocs.org/projects/aiozipkin/badge/?version=latest\n    :target: http://aiozipkin.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n    :target: https://gitter.im/aio-libs/Lobby\n    :alt: Chat on Gitter\n\n**aiozipkin** is Python 3.5+ module that adds distributed tracing capabilities\nfrom asyncio_ applications with zipkin (http://zipkin.io) server instrumentation.\n\nzipkin_ is a distributed tracing system. It helps gather timing data needed\nto troubleshoot latency problems in microservice architectures. It manages\nboth the collection and lookup of this data. Zipkin\u2019s design is based on\nthe Google Dapper paper.\n\nApplications are instrumented with  **aiozipkin** report timing data to zipkin_.\nThe Zipkin UI also presents a Dependency diagram showing how many traced\nrequests went through each application. If you are troubleshooting latency\nproblems or errors, you can filter or sort all traces based on the\napplication, length of trace, annotation, or timestamp.\n\n.. image:: https://raw.githubusercontent.com/aio-libs/aiozipkin/master/docs/zipkin_animation2.gif\n    :alt: zipkin ui animation\n\n\nFeatures\n========\n* Distributed tracing capabilities to **asyncio** applications.\n* Support zipkin_ ``v2`` protocol.\n* Easy to use API.\n* Explicit context handling, no thread local variables.\n* Can work with jaeger_ and stackdriver_ through zipkin compatible API.\n\n\nzipkin vocabulary\n-----------------\nBefore code lets learn important zipkin_ vocabulary, for more detailed\ninformation please visit https://zipkin.io/pages/instrumenting\n\n.. image:: https://raw.githubusercontent.com/aio-libs/aiozipkin/master/docs/zipkin_glossary.png\n    :alt: zipkin ui glossary\n\n* **Span** represents one specific method (RPC) call\n* **Annotation** string data associated with a particular timestamp in span\n* **Tag** - key and value associated with given span\n* **Trace** - collection of spans, related to serving particular request\n\n\nSimple example\n--------------\n\n.. code:: python\n\n    import asyncio\n    import aiozipkin as az\n\n\n    async def run():\n        # setup zipkin client\n        zipkin_address = 'http://127.0.0.1:9411/api/v2/spans'\n        endpoint = az.create_endpoint(\n            \"simple_service\", ipv4=\"127.0.0.1\", port=8080)\n        tracer = await az.create(zipkin_address, endpoint, sample_rate=1.0)\n\n        # create and setup new trace\n        with tracer.new_trace(sampled=True) as span:\n            # give a name for the span\n            span.name(\"Slow SQL\")\n            # tag with relevant information\n            span.tag(\"span_type\", \"root\")\n            # indicate that this is client span\n            span.kind(az.CLIENT)\n            # make timestamp and name it with START SQL query\n            span.annotate(\"START SQL SELECT * FROM\")\n            # imitate long SQL query\n            await asyncio.sleep(0.1)\n            # make other timestamp and name it \"END SQL\"\n            span.annotate(\"END SQL\")\n\n        await tracer.close()\n\n    if __name__ == \"__main__\":\n        loop = asyncio.get_event_loop()\n        loop.run_until_complete(run())\n\n\naiohttp example\n---------------\n\n*aiozipkin* includes *aiohttp* server instrumentation, for this create\n`web.Application()` as usual and install aiozipkin plugin:\n\n\n.. code:: python\n\n    import aiozipkin as az\n\n    def init_app():\n        host, port = \"127.0.0.1\", 8080\n        app = web.Application()\n        endpoint = az.create_endpoint(\"AIOHTTP_SERVER\", ipv4=host, port=port)\n        tracer = await az.create(zipkin_address, endpoint, sample_rate=1.0)\n        az.setup(app, tracer)\n\n\nThat is it, plugin adds middleware that tries to fetch context from headers,\nand create/join new trace. Optionally on client side you can add propagation\nheaders in order to force tracing and to see network latency between client and\nserver.\n\n.. code:: python\n\n    import aiozipkin as az\n\n    endpoint = az.create_endpoint(\"AIOHTTP_CLIENT\")\n    tracer = await az.create(zipkin_address, endpoint)\n\n    with tracer.new_trace() as span:\n        span.kind(az.CLIENT)\n        headers = span.context.make_headers()\n        host = \"http://127.0.0.1:8080/api/v1/posts/{}\".format(i)\n        resp = await session.get(host, headers=headers)\n        await resp.text()\n\n\nDocumentation\n-------------\nhttp://aiozipkin.readthedocs.io/\n\n\nInstallation\n------------\nInstallation process is simple, just::\n\n    $ pip install aiozipkin\n\n\nSupport of other collectors\n===========================\n**aiozipkin** can work with any other zipkin_ compatible service, currently we\ntested it with jaeger_ and stackdriver_.\n\n\nJaeger support\n--------------\njaeger_ supports zipkin_ span format as result it is possible to use *aiozipkin*\nwith jaeger_ server. You just need to specify *jaeger* server address and it\nshould work out of the box. Not need to run local zipkin server.\nFor more informations see tests and jaeger_ documentation.\n\n.. image:: https://raw.githubusercontent.com/aio-libs/aiozipkin/master/docs/jaeger.png\n    :alt: jaeger ui animation\n\n\nStackdriver support\n-------------------\nGoogle stackdriver_ supports zipkin_ span format as result it is possible to\nuse *aiozipkin* with this google_ service. In order to make this work you\nneed to setup zipkin service locally, that will send trace to the cloud. See\ngoogle_ cloud documentation how to setup make zipkin collector:\n\n.. image:: https://raw.githubusercontent.com/aio-libs/aiozipkin/master/docs/stackdriver.png\n    :alt: jaeger ui animation\n\n\nRequirements\n------------\n\n* Python_ 3.6+\n* aiohttp_\n\n\n.. _PEP492: https://www.python.org/dev/peps/pep-0492/\n.. _Python: https://www.python.org\n.. _aiohttp: https://github.com/KeepSafe/aiohttp\n.. _asyncio: http://docs.python.org/3.5/library/asyncio.html\n.. _uvloop: https://github.com/MagicStack/uvloop\n.. _zipkin: http://zipkin.io\n.. _jaeger: http://jaeger.readthedocs.io/en/latest/\n.. _stackdriver: https://cloud.google.com/stackdriver/\n.. _google: https://cloud.google.com/trace/docs/zipkin\n\nCHANGES\n=======\n\n0.6.0 (2019-10-12)\n------------------\n* Add context var support for python3.7 aiohttp instrumentation #187\n* Single header tracing support #189\n* Add retries and batches to transport (thanks @konstantin-stepanov)\n* Drop python3.5 support #238\n* Use new typing syntax in codebase #237\n\n\n0.5.0 (2018-12-25)\n------------------\n* More strict typing configuration is used #147\n* Fixed bunch of typos in code and docs #151 #153 (thanks @deejay1)\n* Added interface for Transport #155 (thanks @deejay1)\n* Added create_custom helper for easer tracer configuration #160 (thanks @deejay1)\n* Added interface for Sampler #160 (thanks @deejay1)\n* Added py.typed marker\n\n\n0.4.0 (2018-07-11)\n------------------\n* Add more coverage with typing #147\n* Breaking change: typo send_inteval => send_interval #144 (thanks @gugu)\n* Breaking change: do not append api/v2/spans to the zipkin dress #150\n\n\n0.3.0 (2018-06-13)\n------------------\n* Add support http.route tag for aiohttp #138\n* Make zipkin address builder more permissive #141 (thanks @dsantosfff)\n\n\n0.2.0 (2018-03-03)\n------------------\n* Breaking change: az.create is coroutine now #114\n* Added context manger for tracer object #114\n* Added more mypy types #117\n\n\n0.1.1 (2018-01-26)\n------------------\n* Added new_child helper method #83\n\n\n0.1.0 (2018-01-21)\n------------------\nAfter few months of work and beta releases here are basic features:\n\n* Initial release.\n* Implemented zipkin v2 protocol with HTTP transport\n* Added jaeger support\n* Added stackdriver support\n* Added aiohttp server support\n* Added aiohttp 3.0.0 client tracing support\n* Added examples and demos\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://pypi.python.org/pypi/aiozipkin", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aio-libs/aiozipkin", "keywords": "zipkin,distributed-tracing,tracing", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "aiozipkin", "package_url": "https://pypi.org/project/aiozipkin/", "platform": "POSIX", "project_url": "https://pypi.org/project/aiozipkin/", "project_urls": {"Download": "https://pypi.python.org/pypi/aiozipkin", "Homepage": "https://github.com/aio-libs/aiozipkin"}, "release_url": "https://pypi.org/project/aiozipkin/0.6.0/", "requires_dist": ["aiohttp (>=3.0.0)"], "requires_python": "", "summary": "Distributed tracing instrumentation for asyncio application with zipkin", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"aiozipkin\">\n<h2>aiozipkin</h2>\n<a href=\"https://travis-ci.com/aio-libs/aiozipkin\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/aio-libs/aiozipkin.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9008ffa33397ac9f96077266c7a33a7e56043667/68747470733a2f2f7472617669732d63692e636f6d2f61696f2d6c6962732f61696f7a69706b696e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/aio-libs/aiozipkin\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/aio-libs/aiozipkin/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0cce187726372fa0f6f32bcd50aa528b4f09fd9/68747470733a2f2f636f6465636f762e696f2f67682f61696f2d6c6962732f61696f7a69706b696e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://codeclimate.com/github/aio-libs/aiozipkin/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dca2ede2b0175d37006369e0cd1ec6c602946065/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f31666638313364356361643264373032636266312f6d61696e7461696e6162696c697479\"></a>\n<a href=\"https://pypi.python.org/pypi/aiozipkin\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/aiozipkin.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/445fb934340d57b9db919e9e918bea23c6097597/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f7a69706b696e2e737667\"></a>\n<a href=\"http://aiozipkin.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/edda284281615d2541dcf807df0ad0f77f68cd33/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61696f7a69706b696e2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://gitter.im/aio-libs/Lobby\" rel=\"nofollow\"><img alt=\"Chat on Gitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/454be82554a06af0fd3393415ef17b59d8550498/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\"></a>\n<p><strong>aiozipkin</strong> is Python 3.5+ module that adds distributed tracing capabilities\nfrom <a href=\"http://docs.python.org/3.5/library/asyncio.html\" rel=\"nofollow\">asyncio</a> applications with zipkin (<a href=\"http://zipkin.io\" rel=\"nofollow\">http://zipkin.io</a>) server instrumentation.</p>\n<p><a href=\"http://zipkin.io\" rel=\"nofollow\">zipkin</a> is a distributed tracing system. It helps gather timing data needed\nto troubleshoot latency problems in microservice architectures. It manages\nboth the collection and lookup of this data. Zipkin\u2019s design is based on\nthe Google Dapper paper.</p>\n<p>Applications are instrumented with  <strong>aiozipkin</strong> report timing data to <a href=\"http://zipkin.io\" rel=\"nofollow\">zipkin</a>.\nThe Zipkin UI also presents a Dependency diagram showing how many traced\nrequests went through each application. If you are troubleshooting latency\nproblems or errors, you can filter or sort all traces based on the\napplication, length of trace, annotation, or timestamp.</p>\n<img alt=\"zipkin ui animation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d468cdccadcf1a78c9aeb78101e0c975d7c10b03/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f61696f2d6c6962732f61696f7a69706b696e2f6d61737465722f646f63732f7a69706b696e5f616e696d6174696f6e322e676966\">\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Distributed tracing capabilities to <strong>asyncio</strong> applications.</li>\n<li>Support <a href=\"http://zipkin.io\" rel=\"nofollow\">zipkin</a> <tt>v2</tt> protocol.</li>\n<li>Easy to use API.</li>\n<li>Explicit context handling, no thread local variables.</li>\n<li>Can work with <a href=\"http://jaeger.readthedocs.io/en/latest/\" rel=\"nofollow\">jaeger</a> and <a href=\"https://cloud.google.com/stackdriver/\" rel=\"nofollow\">stackdriver</a> through zipkin compatible API.</li>\n</ul>\n<div id=\"zipkin-vocabulary\">\n<h3>zipkin vocabulary</h3>\n<p>Before code lets learn important <a href=\"http://zipkin.io\" rel=\"nofollow\">zipkin</a> vocabulary, for more detailed\ninformation please visit <a href=\"https://zipkin.io/pages/instrumenting\" rel=\"nofollow\">https://zipkin.io/pages/instrumenting</a></p>\n<img alt=\"zipkin ui glossary\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cbb75b5ca44dee11c815190702094a36afe89a31/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f61696f2d6c6962732f61696f7a69706b696e2f6d61737465722f646f63732f7a69706b696e5f676c6f73736172792e706e67\">\n<ul>\n<li><strong>Span</strong> represents one specific method (RPC) call</li>\n<li><strong>Annotation</strong> string data associated with a particular timestamp in span</li>\n<li><strong>Tag</strong> - key and value associated with given span</li>\n<li><strong>Trace</strong> - collection of spans, related to serving particular request</li>\n</ul>\n</div>\n<div id=\"simple-example\">\n<h3>Simple example</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiozipkin</span> <span class=\"k\">as</span> <span class=\"nn\">az</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">():</span>\n    <span class=\"c1\"># setup zipkin client</span>\n    <span class=\"n\">zipkin_address</span> <span class=\"o\">=</span> <span class=\"s1\">'http://127.0.0.1:9411/api/v2/spans'</span>\n    <span class=\"n\">endpoint</span> <span class=\"o\">=</span> <span class=\"n\">az</span><span class=\"o\">.</span><span class=\"n\">create_endpoint</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"simple_service\"</span><span class=\"p\">,</span> <span class=\"n\">ipv4</span><span class=\"o\">=</span><span class=\"s2\">\"127.0.0.1\"</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8080</span><span class=\"p\">)</span>\n    <span class=\"n\">tracer</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">az</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">zipkin_address</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">sample_rate</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># create and setup new trace</span>\n    <span class=\"k\">with</span> <span class=\"n\">tracer</span><span class=\"o\">.</span><span class=\"n\">new_trace</span><span class=\"p\">(</span><span class=\"n\">sampled</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">span</span><span class=\"p\">:</span>\n        <span class=\"c1\"># give a name for the span</span>\n        <span class=\"n\">span</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">(</span><span class=\"s2\">\"Slow SQL\"</span><span class=\"p\">)</span>\n        <span class=\"c1\"># tag with relevant information</span>\n        <span class=\"n\">span</span><span class=\"o\">.</span><span class=\"n\">tag</span><span class=\"p\">(</span><span class=\"s2\">\"span_type\"</span><span class=\"p\">,</span> <span class=\"s2\">\"root\"</span><span class=\"p\">)</span>\n        <span class=\"c1\"># indicate that this is client span</span>\n        <span class=\"n\">span</span><span class=\"o\">.</span><span class=\"n\">kind</span><span class=\"p\">(</span><span class=\"n\">az</span><span class=\"o\">.</span><span class=\"n\">CLIENT</span><span class=\"p\">)</span>\n        <span class=\"c1\"># make timestamp and name it with START SQL query</span>\n        <span class=\"n\">span</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"s2\">\"START SQL SELECT * FROM\"</span><span class=\"p\">)</span>\n        <span class=\"c1\"># imitate long SQL query</span>\n        <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n        <span class=\"c1\"># make other timestamp and name it \"END SQL\"</span>\n        <span class=\"n\">span</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"s2\">\"END SQL\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">tracer</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">run</span><span class=\"p\">())</span>\n</pre>\n</div>\n<div id=\"aiohttp-example\">\n<h3>aiohttp example</h3>\n<p><em>aiozipkin</em> includes <em>aiohttp</em> server instrumentation, for this create\n<cite>web.Application()</cite> as usual and install aiozipkin plugin:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">aiozipkin</span> <span class=\"k\">as</span> <span class=\"nn\">az</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">init_app</span><span class=\"p\">():</span>\n    <span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"s2\">\"127.0.0.1\"</span><span class=\"p\">,</span> <span class=\"mi\">8080</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">()</span>\n    <span class=\"n\">endpoint</span> <span class=\"o\">=</span> <span class=\"n\">az</span><span class=\"o\">.</span><span class=\"n\">create_endpoint</span><span class=\"p\">(</span><span class=\"s2\">\"AIOHTTP_SERVER\"</span><span class=\"p\">,</span> <span class=\"n\">ipv4</span><span class=\"o\">=</span><span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"n\">port</span><span class=\"p\">)</span>\n    <span class=\"n\">tracer</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">az</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">zipkin_address</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">sample_rate</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n    <span class=\"n\">az</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">tracer</span><span class=\"p\">)</span>\n</pre>\n<p>That is it, plugin adds middleware that tries to fetch context from headers,\nand create/join new trace. Optionally on client side you can add propagation\nheaders in order to force tracing and to see network latency between client and\nserver.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">aiozipkin</span> <span class=\"k\">as</span> <span class=\"nn\">az</span>\n\n<span class=\"n\">endpoint</span> <span class=\"o\">=</span> <span class=\"n\">az</span><span class=\"o\">.</span><span class=\"n\">create_endpoint</span><span class=\"p\">(</span><span class=\"s2\">\"AIOHTTP_CLIENT\"</span><span class=\"p\">)</span>\n<span class=\"n\">tracer</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">az</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">zipkin_address</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">tracer</span><span class=\"o\">.</span><span class=\"n\">new_trace</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">span</span><span class=\"p\">:</span>\n    <span class=\"n\">span</span><span class=\"o\">.</span><span class=\"n\">kind</span><span class=\"p\">(</span><span class=\"n\">az</span><span class=\"o\">.</span><span class=\"n\">CLIENT</span><span class=\"p\">)</span>\n    <span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"n\">span</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">make_headers</span><span class=\"p\">()</span>\n    <span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://127.0.0.1:8080/api/v1/posts/</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p><a href=\"http://aiozipkin.readthedocs.io/\" rel=\"nofollow\">http://aiozipkin.readthedocs.io/</a></p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Installation process is simple, just:</p>\n<pre>$ pip install aiozipkin\n</pre>\n</div>\n</div>\n<div id=\"support-of-other-collectors\">\n<h2>Support of other collectors</h2>\n<p><strong>aiozipkin</strong> can work with any other <a href=\"http://zipkin.io\" rel=\"nofollow\">zipkin</a> compatible service, currently we\ntested it with <a href=\"http://jaeger.readthedocs.io/en/latest/\" rel=\"nofollow\">jaeger</a> and <a href=\"https://cloud.google.com/stackdriver/\" rel=\"nofollow\">stackdriver</a>.</p>\n<div id=\"jaeger-support\">\n<h3>Jaeger support</h3>\n<p><a href=\"http://jaeger.readthedocs.io/en/latest/\" rel=\"nofollow\">jaeger</a> supports <a href=\"http://zipkin.io\" rel=\"nofollow\">zipkin</a> span format as result it is possible to use <em>aiozipkin</em>\nwith <a href=\"http://jaeger.readthedocs.io/en/latest/\" rel=\"nofollow\">jaeger</a> server. You just need to specify <em>jaeger</em> server address and it\nshould work out of the box. Not need to run local zipkin server.\nFor more informations see tests and <a href=\"http://jaeger.readthedocs.io/en/latest/\" rel=\"nofollow\">jaeger</a> documentation.</p>\n<img alt=\"jaeger ui animation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d5d3bf30fa3a8468e14cc1ecbc08b29dfd50dc91/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f61696f2d6c6962732f61696f7a69706b696e2f6d61737465722f646f63732f6a61656765722e706e67\">\n</div>\n<div id=\"stackdriver-support\">\n<h3>Stackdriver support</h3>\n<p>Google <a href=\"https://cloud.google.com/stackdriver/\" rel=\"nofollow\">stackdriver</a> supports <a href=\"http://zipkin.io\" rel=\"nofollow\">zipkin</a> span format as result it is possible to\nuse <em>aiozipkin</em> with this <a href=\"https://cloud.google.com/trace/docs/zipkin\" rel=\"nofollow\">google</a> service. In order to make this work you\nneed to setup zipkin service locally, that will send trace to the cloud. See\n<a href=\"https://cloud.google.com/trace/docs/zipkin\" rel=\"nofollow\">google</a> cloud documentation how to setup make zipkin collector:</p>\n<img alt=\"jaeger ui animation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d04700ba0d60d1b9af50d3de04751eb2ebc5fe28/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f61696f2d6c6962732f61696f7a69706b696e2f6d61737465722f646f63732f737461636b6472697665722e706e67\">\n</div>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li><a href=\"https://www.python.org\" rel=\"nofollow\">Python</a> 3.6+</li>\n<li><a href=\"https://github.com/KeepSafe/aiohttp\" rel=\"nofollow\">aiohttp</a></li>\n</ul>\n</div>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>0.6.0 (2019-10-12)</h3>\n<ul>\n<li>Add context var support for python3.7 aiohttp instrumentation #187</li>\n<li>Single header tracing support #189</li>\n<li>Add retries and batches to transport (thanks @konstantin-stepanov)</li>\n<li>Drop python3.5 support #238</li>\n<li>Use new typing syntax in codebase #237</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.5.0 (2018-12-25)</h3>\n<ul>\n<li>More strict typing configuration is used #147</li>\n<li>Fixed bunch of typos in code and docs #151 #153 (thanks @deejay1)</li>\n<li>Added interface for Transport #155 (thanks @deejay1)</li>\n<li>Added create_custom helper for easer tracer configuration #160 (thanks @deejay1)</li>\n<li>Added interface for Sampler #160 (thanks @deejay1)</li>\n<li>Added py.typed marker</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.4.0 (2018-07-11)</h3>\n<ul>\n<li>Add more coverage with typing #147</li>\n<li>Breaking change: typo send_inteval =&gt; send_interval #144 (thanks @gugu)</li>\n<li>Breaking change: do not append api/v2/spans to the zipkin dress #150</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.3.0 (2018-06-13)</h3>\n<ul>\n<li>Add support http.route tag for aiohttp #138</li>\n<li>Make zipkin address builder more permissive #141 (thanks @dsantosfff)</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.2.0 (2018-03-03)</h3>\n<ul>\n<li>Breaking change: az.create is coroutine now #114</li>\n<li>Added context manger for tracer object #114</li>\n<li>Added more mypy types #117</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.1.1 (2018-01-26)</h3>\n<ul>\n<li>Added new_child helper method #83</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.1.0 (2018-01-21)</h3>\n<p>After few months of work and beta releases here are basic features:</p>\n<ul>\n<li>Initial release.</li>\n<li>Implemented zipkin v2 protocol with HTTP transport</li>\n<li>Added jaeger support</li>\n<li>Added stackdriver support</li>\n<li>Added aiohttp server support</li>\n<li>Added aiohttp 3.0.0 client tracing support</li>\n<li>Added examples and demos</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5965753, "releases": {"0.0.1a0": [{"comment_text": "", "digests": {"md5": "ff339d9b6e074e3de64738076d755f5c", "sha256": "33db7262055c7a900c5b62fbecf8780b867a5c66295c4e7befe07d9828191b71"}, "downloads": -1, "filename": "aiozipkin-0.0.1a0.tar.gz", "has_sig": false, "md5_digest": "ff339d9b6e074e3de64738076d755f5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10419, "upload_time": "2017-10-09T19:53:18", "upload_time_iso_8601": "2017-10-09T19:53:18.593617Z", "url": "https://files.pythonhosted.org/packages/9e/7e/a35d2b7c5ef5cdcf0423d5e83a20aafeb6f35adf76744dbc9c30c48af727/aiozipkin-0.0.1a0.tar.gz", "yanked": false}], "0.0.1a1": [{"comment_text": "", "digests": {"md5": "7347718a9a3bd36e4d5f17b4121a570c", "sha256": "0434004eec38e9f4c89e1f2d0785fd7308e567ed1869a4cedfe4891388e4a582"}, "downloads": -1, "filename": "aiozipkin-0.0.1a1.tar.gz", "has_sig": false, "md5_digest": "7347718a9a3bd36e4d5f17b4121a570c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12238, "upload_time": "2017-10-20T18:23:34", "upload_time_iso_8601": "2017-10-20T18:23:34.468592Z", "url": "https://files.pythonhosted.org/packages/89/48/dc10fb73920a6a7a76447571f8ee21be95593af099909833bd4ecd55273f/aiozipkin-0.0.1a1.tar.gz", "yanked": false}], "0.0.1a2": [{"comment_text": "", "digests": {"md5": "ac151ee89b667156735fae89ebb51ed6", "sha256": "bd95defadf6f88847010a9b3aded00f866eaa32215d2b1ae1ae205ad1f395672"}, "downloads": -1, "filename": "aiozipkin-0.0.1a2.tar.gz", "has_sig": false, "md5_digest": "ac151ee89b667156735fae89ebb51ed6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12387, "upload_time": "2017-10-23T19:24:59", "upload_time_iso_8601": "2017-10-23T19:24:59.834971Z", "url": "https://files.pythonhosted.org/packages/a2/58/15571d737bbba0b3910d2b83596793003d036fe5412374b9db1ee1b8edf8/aiozipkin-0.0.1a2.tar.gz", "yanked": false}], "0.0.1b1": [{"comment_text": "", "digests": {"md5": "15cb6e41ba7a2b237f177766df93b253", "sha256": "d67ea60c8f88aff2d07d4707dbfdd74be1c887721612b804f35ba5fa4e2cc133"}, "downloads": -1, "filename": "aiozipkin-0.0.1b1.tar.gz", "has_sig": false, "md5_digest": "15cb6e41ba7a2b237f177766df93b253", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12399, "upload_time": "2017-11-18T18:55:45", "upload_time_iso_8601": "2017-11-18T18:55:45.583858Z", "url": "https://files.pythonhosted.org/packages/60/1f/ad9fb792e0e7a8fc4596965e4ae42b1215e287a16826474af3c394922fe7/aiozipkin-0.0.1b1.tar.gz", "yanked": false}], "0.0.1b2": [{"comment_text": "", "digests": {"md5": "2baf82698700617978dd0ad521575eb2", "sha256": "0ac960d75a6df90f8ec22e0d0042a7857f1dd4e7cbfd33f2c1b2d65fce3adf96"}, "downloads": -1, "filename": "aiozipkin-0.0.1b2.tar.gz", "has_sig": false, "md5_digest": "2baf82698700617978dd0ad521575eb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12567, "upload_time": "2017-11-27T21:15:02", "upload_time_iso_8601": "2017-11-27T21:15:02.318538Z", "url": "https://files.pythonhosted.org/packages/79/d8/27c8970bcea2d907f9cfa374ca180849a458cc32cfaf1fd9995a91e30129/aiozipkin-0.0.1b2.tar.gz", "yanked": false}], "0.0.1b3": [{"comment_text": "", "digests": {"md5": "59cf0b824acde57b77258b1f547212d2", "sha256": "55b5e8e2c6bb3d4f29084964ee8943721623ef219bbd3572e74a55997d5981e7"}, "downloads": -1, "filename": "aiozipkin-0.0.1b3.tar.gz", "has_sig": false, "md5_digest": "59cf0b824acde57b77258b1f547212d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12979, "upload_time": "2017-12-07T14:07:21", "upload_time_iso_8601": "2017-12-07T14:07:21.613816Z", "url": "https://files.pythonhosted.org/packages/93/6a/aad8145076e398b0900d9bded225a67c8a8fac48a11ac4302c7f52316feb/aiozipkin-0.0.1b3.tar.gz", "yanked": false}], "0.0.1b4": [{"comment_text": "", "digests": {"md5": "012fd1b2c41af596fecfd088d4c2ae40", "sha256": "b1c3e4ea69826d6743ab6d7bc04e683e3db04d30fcf6459bd166684db079e828"}, "downloads": -1, "filename": "aiozipkin-0.0.1b4-py3-none-any.whl", "has_sig": false, "md5_digest": "012fd1b2c41af596fecfd088d4c2ae40", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13557, "upload_time": "2017-12-10T16:56:58", "upload_time_iso_8601": "2017-12-10T16:56:58.387664Z", "url": "https://files.pythonhosted.org/packages/9b/ac/a9f721d7448b5e7a816bdaba31c97806d8f64eb1990cc1c15c7bfea8e395/aiozipkin-0.0.1b4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94eac5557bb5908bb2b1203b79d45749", "sha256": "46b33366bd5b4563c8b2831f3f3983e350ccb69a01f7f9a4148194b2fa4cf210"}, "downloads": -1, "filename": "aiozipkin-0.0.1b4.tar.gz", "has_sig": false, "md5_digest": "94eac5557bb5908bb2b1203b79d45749", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13969, "upload_time": "2017-12-10T16:57:01", "upload_time_iso_8601": "2017-12-10T16:57:01.666578Z", "url": "https://files.pythonhosted.org/packages/a9/db/341f50e5df471ef1fe5e448aaeb6e62a72dd53fac8bc7d39e07dc84a712b/aiozipkin-0.0.1b4.tar.gz", "yanked": false}], "0.0.1b5": [{"comment_text": "", "digests": {"md5": "8c33b123ce07cf7f85a468f7e9621772", "sha256": "13c30467993a9376b8700a6ea4ee40690e4a2337c6800c629f404ff5ba43aabe"}, "downloads": -1, "filename": "aiozipkin-0.0.1b5-py3-none-any.whl", "has_sig": false, "md5_digest": "8c33b123ce07cf7f85a468f7e9621772", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14776, "upload_time": "2017-12-12T20:50:34", "upload_time_iso_8601": "2017-12-12T20:50:34.967252Z", "url": "https://files.pythonhosted.org/packages/c1/4f/35d5562896a653fbbf5b60889abb9ebf80fe6257cb6e4aaa2eb60eb98b8f/aiozipkin-0.0.1b5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f31e80f3b93b3bb27d5abe5fe03fd699", "sha256": "d76cdc838fc2886d4a8e8901b9b250c755b79e45ecf821d9bfb37181e442a922"}, "downloads": -1, "filename": "aiozipkin-0.0.1b5.tar.gz", "has_sig": false, "md5_digest": "f31e80f3b93b3bb27d5abe5fe03fd699", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13730, "upload_time": "2017-12-12T20:50:37", "upload_time_iso_8601": "2017-12-12T20:50:37.043681Z", "url": "https://files.pythonhosted.org/packages/17/bc/598dbe2617cb86708f6df5aad9262cddd08059740811fff110acf3afb24d/aiozipkin-0.0.1b5.tar.gz", "yanked": false}], "0.0.1b6": [{"comment_text": "", "digests": {"md5": "fd139124beb92f7a3597f0a871006c41", "sha256": "95b9a02f4ffc7fd1554ef7e0b52c85d9fc8706313a1e16dda1ea1d4a0a839aad"}, "downloads": -1, "filename": "aiozipkin-0.0.1b6-py3-none-any.whl", "has_sig": false, "md5_digest": "fd139124beb92f7a3597f0a871006c41", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16891, "upload_time": "2017-12-29T22:17:53", "upload_time_iso_8601": "2017-12-29T22:17:53.195765Z", "url": "https://files.pythonhosted.org/packages/4a/8e/2f21b08e3f35ed40f96dff5732246b5b0556e4fe890e395071c05893640d/aiozipkin-0.0.1b6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48d73c9c94d59c847da42c4fcf89338b", "sha256": "38e4f336b7433b972a1564c2ba26bdc69b4369f1b03f97867d29749d6f161cdf"}, "downloads": -1, "filename": "aiozipkin-0.0.1b6.tar.gz", "has_sig": false, "md5_digest": "48d73c9c94d59c847da42c4fcf89338b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15191, "upload_time": "2017-12-29T22:17:54", "upload_time_iso_8601": "2017-12-29T22:17:54.746137Z", "url": "https://files.pythonhosted.org/packages/c0/a0/a07666ebcc8137071875b2d3960ef2d453064d73ffee3ebc1c01f2f013b3/aiozipkin-0.0.1b6.tar.gz", "yanked": false}], "0.0.1b7": [{"comment_text": "", "digests": {"md5": "62fbe4ec13225fad350307ed802a7b7a", "sha256": "ffda7624a2d307ff95fbf49a1440b863b677a7a9bd4aa8eb803ecf392f5afc1d"}, "downloads": -1, "filename": "aiozipkin-0.0.1b7-py3-none-any.whl", "has_sig": false, "md5_digest": "62fbe4ec13225fad350307ed802a7b7a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17477, "upload_time": "2018-01-04T22:53:58", "upload_time_iso_8601": "2018-01-04T22:53:58.905565Z", "url": "https://files.pythonhosted.org/packages/eb/f9/1be2a1b16ae6d762aa3dfa681cd732640721e53d11aa879f0b9fa04c5944/aiozipkin-0.0.1b7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16879e58f0564a4f09babee9568aebc7", "sha256": "9fb2362ab1875a25a4a11f3a414e66d7f43b4c9dbbfc595704779bf39ba34803"}, "downloads": -1, "filename": "aiozipkin-0.0.1b7.tar.gz", "has_sig": false, "md5_digest": "16879e58f0564a4f09babee9568aebc7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15667, "upload_time": "2018-01-04T22:54:00", "upload_time_iso_8601": "2018-01-04T22:54:00.391474Z", "url": "https://files.pythonhosted.org/packages/27/46/9fd8f81663aaf8597c33e8d4577d2d918cc1bebabb7892df5981eda27cbc/aiozipkin-0.0.1b7.tar.gz", "yanked": false}], "0.0.1b8": [{"comment_text": "", "digests": {"md5": "7168a467e6455620d114b5cbee04229b", "sha256": "38653f8e517bad8fd0e58430a6ec3411092603e4dccfb3573061a1dfa1143d82"}, "downloads": -1, "filename": "aiozipkin-0.0.1b8.tar.gz", "has_sig": false, "md5_digest": "7168a467e6455620d114b5cbee04229b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17557, "upload_time": "2018-01-10T07:45:28", "upload_time_iso_8601": "2018-01-10T07:45:28.695110Z", "url": "https://files.pythonhosted.org/packages/01/39/0e0d073307a67c5f922c2cd71ee6c2caa0ac211d2597b487a82809e7ef4d/aiozipkin-0.0.1b8.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "f533f8a15bc3fc5207e9598daacc645e", "sha256": "3fb11dc17594526944a9efabecae23d7d3da90e8018a7688da0ca657ab034a64"}, "downloads": -1, "filename": "aiozipkin-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f533f8a15bc3fc5207e9598daacc645e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17929, "upload_time": "2018-01-21T19:31:14", "upload_time_iso_8601": "2018-01-21T19:31:14.489582Z", "url": "https://files.pythonhosted.org/packages/f6/cd/a65cf8be7bc877cfb8b7e2957aede2e171fd65da77987d129efea57cddec/aiozipkin-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10e939f15812f00a2377244b4b28d2a3", "sha256": "39a51a2e04e6d371a2f6dfe9f9ebbde75ac7210fe0c135eca3eef9a5a0d6becf"}, "downloads": -1, "filename": "aiozipkin-0.1.0.tar.gz", "has_sig": false, "md5_digest": "10e939f15812f00a2377244b4b28d2a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16017, "upload_time": "2018-01-21T19:31:15", "upload_time_iso_8601": "2018-01-21T19:31:15.791857Z", "url": "https://files.pythonhosted.org/packages/66/18/c04f63f95a07cb54a773d234598943fefe0605be8d0cd5e3ee194fe8a23b/aiozipkin-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7b0822d6e2e52abc480808f0ec93759f", "sha256": "e6c1f81ba736092e2a075746a1cc7f6ba1cc835dee0a17d53fb84468c0989553"}, "downloads": -1, "filename": "aiozipkin-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7b0822d6e2e52abc480808f0ec93759f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18100, "upload_time": "2018-01-26T21:59:18", "upload_time_iso_8601": "2018-01-26T21:59:18.243190Z", "url": "https://files.pythonhosted.org/packages/6b/2c/10a0e83bc1e32812c29699855417b98eac67fa988df3b8e4d39ff05af4e8/aiozipkin-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b37075553a578ade2418616a0f7e01f8", "sha256": "9250713045bbb5fcf3172de7856b2b1911862103cf5bc08ef10ecf1addd4fb8a"}, "downloads": -1, "filename": "aiozipkin-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b37075553a578ade2418616a0f7e01f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16150, "upload_time": "2018-01-26T21:59:20", "upload_time_iso_8601": "2018-01-26T21:59:20.005991Z", "url": "https://files.pythonhosted.org/packages/de/4a/fe6adb64fb35e06adb409f68d884c3d35b8ab3d7c955c5d0864bd4b768b3/aiozipkin-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f2ed0f8ed6d2509d07b02257da534bb0", "sha256": "4be05231358cecc5fa55fac62d74c34e39893e98f45127bfa05cded40037c296"}, "downloads": -1, "filename": "aiozipkin-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f2ed0f8ed6d2509d07b02257da534bb0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19117, "upload_time": "2018-03-03T19:35:01", "upload_time_iso_8601": "2018-03-03T19:35:01.893175Z", "url": "https://files.pythonhosted.org/packages/05/ba/dc147335a2ff143c6fafa74a54a5dbda24bb7b7d999ee9ce0455743afe9c/aiozipkin-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d10420a2f4b63340679d18c2a4bef56", "sha256": "07d5ffcb2f75b41d05a3f9679593f11792ffd0313f6df92d6667f0bdd52de0d1"}, "downloads": -1, "filename": "aiozipkin-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8d10420a2f4b63340679d18c2a4bef56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16773, "upload_time": "2018-03-03T19:35:03", "upload_time_iso_8601": "2018-03-03T19:35:03.873174Z", "url": "https://files.pythonhosted.org/packages/2d/8e/b166c66396db7b50e9025753ae561089dd3df5f30044022ac33195664ede/aiozipkin-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "060f2c0c935e2a1aa165837c839e10c9", "sha256": "571c59d9a4f292d9152892a25afe2859c6f21d8ddda74f2b215e69ca620b5c09"}, "downloads": -1, "filename": "aiozipkin-0.3.0.tar.gz", "has_sig": false, "md5_digest": "060f2c0c935e2a1aa165837c839e10c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19127, "upload_time": "2018-06-13T17:37:03", "upload_time_iso_8601": "2018-06-13T17:37:03.776907Z", "url": "https://files.pythonhosted.org/packages/7a/fd/7668a043aea560f93fcd964e7d761600a9ac9910712f4389bb840b7bf1b7/aiozipkin-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "dd7f7c4ebb1fabb2b387b7813427b93f", "sha256": "95d6db1a5754a70aac4eaf667967dd06bcdc6267ee07e912c7b3f758d421b012"}, "downloads": -1, "filename": "aiozipkin-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dd7f7c4ebb1fabb2b387b7813427b93f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16117, "upload_time": "2018-07-11T20:27:41", "upload_time_iso_8601": "2018-07-11T20:27:41.102836Z", "url": "https://files.pythonhosted.org/packages/24/26/04de4f5d17fa206dc033fdf551a86f1df44486721d9eb1f59433d116e136/aiozipkin-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7fc989b6110bf7bbfd26288be6c576fd", "sha256": "a8adf4bfb66daf7f6bda00b143af4d4f15129a037df68c274ef4b97b953f7e9e"}, "downloads": -1, "filename": "aiozipkin-0.4.0.tar.gz", "has_sig": false, "md5_digest": "7fc989b6110bf7bbfd26288be6c576fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17321, "upload_time": "2018-07-11T20:27:42", "upload_time_iso_8601": "2018-07-11T20:27:42.677334Z", "url": "https://files.pythonhosted.org/packages/5a/d3/6ef6e8e8dfa3cb3414ea9cc2099df295dbc9864e1d1b81b5a3787cecf307/aiozipkin-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "0eec6a67b06c8b5ab5ad81dbd887f6a6", "sha256": "3816308f7e9349b6a261985d023dc25139942a1bc65a6b14edaa10e1d9d87c2d"}, "downloads": -1, "filename": "aiozipkin-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0eec6a67b06c8b5ab5ad81dbd887f6a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21303, "upload_time": "2018-12-25T19:00:52", "upload_time_iso_8601": "2018-12-25T19:00:52.226839Z", "url": "https://files.pythonhosted.org/packages/0b/fc/f6cddd6c131f4c93b7b150b35670ddc55e9157ea7b07b38598ec4ab91ba1/aiozipkin-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1d0b4069499b97c1ffeff3069d2bea4", "sha256": "46479a7b4110bdc69d6f673e816ebd392de65f75562eebe8c4b008f84d29d3ae"}, "downloads": -1, "filename": "aiozipkin-0.5.0.tar.gz", "has_sig": false, "md5_digest": "c1d0b4069499b97c1ffeff3069d2bea4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21155, "upload_time": "2018-12-25T19:00:53", "upload_time_iso_8601": "2018-12-25T19:00:53.501406Z", "url": "https://files.pythonhosted.org/packages/cf/44/fe650165a2c347165cf0c3621083b932076fa0b4b29eb460b8a5d83e0288/aiozipkin-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "a39c28715c24ee7817db3671453d2642", "sha256": "2755d8656ee5836906b1359a1659c5360c84ae110f03ed1fcd62f999fdf9df1f"}, "downloads": -1, "filename": "aiozipkin-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a39c28715c24ee7817db3671453d2642", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22827, "upload_time": "2019-10-12T23:14:38", "upload_time_iso_8601": "2019-10-12T23:14:38.294118Z", "url": "https://files.pythonhosted.org/packages/65/c9/c62c2d813dd0b2b2d33d864c3f99e48eb7fc51d7006f8ac738f32be7b546/aiozipkin-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01766aa607ae121d2cbb3ebf15a8cd0b", "sha256": "7270cdaff81f4a6ea70de48b3e4597629c3beef76740bfe6f7c9b58b45b67c73"}, "downloads": -1, "filename": "aiozipkin-0.6.0.tar.gz", "has_sig": false, "md5_digest": "01766aa607ae121d2cbb3ebf15a8cd0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22861, "upload_time": "2019-10-12T23:14:40", "upload_time_iso_8601": "2019-10-12T23:14:40.415192Z", "url": "https://files.pythonhosted.org/packages/8d/14/33c79497c3082dd93172f834e4f3d1d6d0eb9b957b6885c919ca73462ed6/aiozipkin-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a39c28715c24ee7817db3671453d2642", "sha256": "2755d8656ee5836906b1359a1659c5360c84ae110f03ed1fcd62f999fdf9df1f"}, "downloads": -1, "filename": "aiozipkin-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a39c28715c24ee7817db3671453d2642", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22827, "upload_time": "2019-10-12T23:14:38", "upload_time_iso_8601": "2019-10-12T23:14:38.294118Z", "url": "https://files.pythonhosted.org/packages/65/c9/c62c2d813dd0b2b2d33d864c3f99e48eb7fc51d7006f8ac738f32be7b546/aiozipkin-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01766aa607ae121d2cbb3ebf15a8cd0b", "sha256": "7270cdaff81f4a6ea70de48b3e4597629c3beef76740bfe6f7c9b58b45b67c73"}, "downloads": -1, "filename": "aiozipkin-0.6.0.tar.gz", "has_sig": false, "md5_digest": "01766aa607ae121d2cbb3ebf15a8cd0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22861, "upload_time": "2019-10-12T23:14:40", "upload_time_iso_8601": "2019-10-12T23:14:40.415192Z", "url": "https://files.pythonhosted.org/packages/8d/14/33c79497c3082dd93172f834e4f3d1d6d0eb9b957b6885c919ca73462ed6/aiozipkin-0.6.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:35 2020"}