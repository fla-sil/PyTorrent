{"info": {"author": "Ahmed Arslan", "author_email": "ahmed.arslan@kuleuven.be", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Education"], "description": "# yMap - Yeast Genotype to Phenotype Map (release year 2016)\r\n\r\nyMap is a python based fast and robust automated method to map large yeast variants data to \r\n            \r\n            - proteins post-translational modifications \r\n                            \r\n            - proteins domains, \r\n                            \r\n            - proteins-nucleotide binding domains, \r\n                        \r\n            - proteins structural regions, \r\n                \r\n            - proteins active and binding sites \r\n                \r\n            - proteins networks visualisation. \r\n\r\n\r\nThe post-translational modifications in yMap are collected from different repositories like UniProt and sources \r\nwith annotated PTMs like PTMcode 2.0 and PTMfunc, for more details, see below.\r\n\r\nIn a user friendly three steps, it generates a \"final-report\" file to report all the non-synonymous \r\nmutations that overlaps or falls inside the above mentioned proteins functional regions.\r\nThe final-report is complemented with two other files; enrichment and visualsation id file\r\n\r\n#Dependencies\r\n\r\nyMap depends on:\r\n\r\n        python 2.6.x\r\n\r\n        python 3.x\r\n\r\n        Orange bioinformatics (http://pythonhosted.org/Orange-Bioinformatics/#installation)\r\n\r\n#Video demo \r\nhttps://www.youtube.com/watch?v=pcmkuWvLRzI \r\n\r\n#Installation\r\n\r\n            pip install ymap\r\n\r\n#Usage\r\n    \r\n            step1: $ ydata       \t#download all the data needed for proper execution of ymap\r\n            \r\n            step2: copy and paste the \"mutation file\" to the present directory\r\n\r\n            step3: $ yproteins  \t#if starting file contains the mutations at proteins level \r\n                                        (SEE example_mutation_file/mutation.txt).\r\n            \r\n            step3: $ ygenes        \t#if starting file contains the mutations at chromosomes leve with genetic                                                    coordinates (SEE example_mutation_file/mutated_proteins.txt).\r\n            \r\n            step4: $ yweb\t\t # generates the html based visualization of mutated proteins on BioGrid db.\r\n\t\t\t\t\t(NOTE: a user will required to specify the 'path/to/biog.txt' as input, when asked)\r\n\t\t\t\t\t\r\n\r\n*To run from source code:\r\n\r\n\t\tChange path to directory containing ymap.py\r\n\t\t\r\n\t\t$python ymap.py -d ydata (step1)\r\n\t\t\r\n\t\t$pyhton ymap.py -p yproteins (step3)\r\n\t\t\r\n\t\t$pyhton ymap.py -g ygenes (step3)\r\n\t\t\r\n\t\t$pyhton ymap.py -w yweb (step4)\r\n\r\n#Contents:\r\nIntroduction to different types of data (generated/provided in yMap)\r\nIntroduction to all the methods\r\nResults (introduction to results data)\r\nTroubleshoots\r\n\r\n#Introduction to data:\r\n\r\n\t\u2014\u2014\u2014\u2014\u2014input\u2014\u2014\u2014\r\n\r\nA - mutation (tab separated txt \"mutated_proteins.txt\") file contains proteins common names and mutated residues positions\r\n(please following the exact naming convention of input files as in example data, for proper execution of ymap; see example data))\r\n\r\n\r\n\t\u2014\u2014\u2014output\u2014\u2014\u2014(Pre-analysis data needed for ymap execution)\r\n\r\n\r\n(i)\tRaw files downloaded from UniProt and stored in the present dir.by executing step2.  \t\r\n\r\n\r\n1 - uniprot_mod_raw.txt\t# Uniprot data in raw format \r\n\r\n\r\n2 - yeastID.txt\t\t\t# Yeast id containing file\r\n\r\n\r\n3 - PTMs.txt\t\t\t# contains yeast proteins, PTMs position and PTM types\r\n\r\n\r\n4 - PTM_id_file.txt\t\t# combined file of 2 and 3.\r\n\r\n\r\n5 - domains.txt\t\t\t# yeast proteins, domains start, end and names\r\n\r\n\r\n6 - id_domain.txt\t\t# combined file of 2 and 5.\r\n\r\n\r\n7 - bact.txt\t\t\t# contains proteins id, and binding and active sites \r\n\t\t\t\t  positions\r\n\r\n8 - sites_id.txt\t\t# combined file of 2 and 7.\r\n\r\n\r\n9 - uniprot_bioGrid.txt\t\t# contains all the yeast proteins with BioGrid ids\r\n\r\n\r\n(i-B)\tPre downloaded files from PTMcode and PTMfunc\r\n\r\n(PTMfunc)\r\n\r\n3DID_aceksites_interfaceRes_sc.txt\r\n\r\n3DID_phosphosites_interfaceRes_sc.txt\r\n\r\n3DID_ubisites_interfaceRessc_sc.txt\r\n\r\nSC_psites_interactions_sc.txt\r\n\r\nSC_ubi_interactions_sc.txt\r\n\r\nSC_acet_interactions.txt\r\n\r\n(PTMcode)\r\n\r\nschotspot.txt\r\n\r\nsc_btw_proteins.txt\r\n\r\nsc_within_proteins.txt\r\n\r\n\r\n\r\n(ii)\tProcessed data from UniProt and other resources by executing step2.  \r\n\r\nA number of files germinated from the original UniProt file for further analyses:\r\n\r\nPTMs.txt\t\t\t\r\n\t\tcontains Post-translational modifications\r\n\r\nPTM_id_file.txt\t\t\t\r\n\t\tPTMs.txt with all the proteins ids\r\n\r\nPDB.txt\t\t\t\t\r\n\t\tcontains PDB structural data from UniProt\r\n\r\nnucleotide.txt\t\t\t\r\n\t\tcontains DNA-Protein binding motifs \r\n\r\nback.txt\t\t\t\r\n\t\tcontains Proteins active and binding positions\r\n\r\nd_id_map.txt\t\t\t\r\n\t\tcontains protein domains with all the ids\t\r\n\r\nid_domain.txt\t\t\t\r\n\t\tgff data from frmt.txt with all the ids\r\n\r\ndomains.txt\t\t\t\r\n\t\tdomains data from UniProt\r\n\r\nfrmt.txt\t\t\t\r\n\t\tformatted gff file for further process\r\n\r\nsites_id.xt\t\t\t\r\n\t\tActive/binding sites with all ids\r\n\r\nunipro_bioGrid.txt\t\t\r\n\t\tcontains BioGrid ids of all yeast proteins\r\n\r\nnucleotide.txt\t\t\t\r\n\t\tproteins (uniprot) id with DNA binding motifs\r\n\r\nid_nucleotide.txt\t\t\r\n\t\tcontains data from nucleotide with all the protein ids for processing\r\n\r\n#Results\r\n\r\n(inside ymap-results folder, each subfolder contains three files, one with mutations analysis file, which includes mutated proteins, mutation positions, mutated functional region and source of data, pvalue.txt of pathways enrichments and biog.txt, a biogrid id corresponding to mutated proteins)\r\n\r\n\t/PTMs/mutated_proteins.txt\t\r\n\t\tcontains proteins ids mutated at PTMs sites\r\n\r\n\t/Domains/domains_mapped.txt\t\r\n\t\tcontains proteins ids mutated for protein domains\r\n\r\n\t/A-B_binding/ab_mutation_file.txt\t\r\n\t\tcontains proteins ids mutated at active and binding \r\n\r\n\r\n\tPPI - PTMfunc data\r\n\r\n\t\tPPI/acetylation\r\n\t\tPTM-type containing residue is important in PPI\r\n\r\n\t\tPPI/Phosphorylation\r\n\t\tPTM-type containing residue is important in PPI\r\n\r\n\t\tPPI/ubiquitination\r\n\t\tPTM-type containing residue is important in PPI\r\n\r\n\tInterface\r\n\r\n\t\tInterface/ubiquitination\r\n\t\tPTM-type containing residue present at protein interface \r\n\r\n\t\tInterface/acetylation\r\n\t\tPTM-type containing residue present at protein interface \r\n\r\n\t\tInterface/Phosphorylation\r\n\t\tPTM-type containing residue present at protein interface \r\n\r\n\tPTMs_hotSpot\r\n\t\tPTMs concentrated in a small motif known as hopspot by Beltrao et al. Cell 2012.\r\n\r\n\tPTMs_between_proteins - PTMcode2.0 data\r\n\t\tPTMs present between two proteins and involvined in crosstalk. \r\n\r\n\tPTMs_witnin_proteins\r\n\t\tPTMs present within a protein and involvined in crosstalk.\r\n\t\r\n\tbiog.txt\t\t\t\r\n\t\tcontains proteins BioGrid ids for -w web function (this file present in each subfolder).\r\n\r\n\tp-value.txt\t\t\t\r\n\t\tcontains pathways enrichments for each type of mutation observed (this file present in each subfolder).\r\n\r\n\tfinal_report.txt\t\t\r\n\t\tits a refined version of summary.txt and contains, protein UniProt id, common names, amino acid mutation position, wild type amino acid, mutated amino acid, type of mutation (non-synonymous/stop codon), mutation feature types (i.e. PTM-type or domain-name etc), mutation feature (i.e. PTMs, domain or another) and source of data (e.g. UnProt)\r\n\r\n\r\n\r\n#Introduction to all the methods \r\n\t\t(How individual methods work in ymap)\r\n\r\nNOTE: change the name of the mutations containing file to \u2018mutated_proteins.txt\u2019 (see example data) and copy to the cd path/to/ymap\r\n\r\n\r\nFunctions name\t\t\tDescription\r\n\r\nmutation_types_file()\tmutation type and amino acid change calculation (where ref. and mutant base known)\r\n\r\npTMdata()\t\t\r\n\t\tDownloads UpiProt data as a raw txt file (uniprot_mod_raw.txt)\r\n\r\nclean()\t\t\t\r\n\t\tcleans file 'uniprot_mod_raw.txt' into a tab separated\u2019PTMs.txt'\r\n\r\niD()\t\t\t\r\n\t\tThis method retrieves the different ID types for maping (yeastID.txt)\r\n\r\npmap()\t\t\t\r\n\t\tif proteins ids are not SDG or uniprot or common names, this method maps the ids \r\n\r\nptm_map()\t\t\r\n\t\tThis method maps the overlap between mutated codons from previous method to the PTM sites \r\n\r\ndclean()\t\t\r\n\t\tdomain data needed to be filters from UniProt file, before mapping domains \r\nd_map()\t\t\t\r\n\t\tmaps mutations to the yeast domains (id_domain.txt)\r\n\r\ndmap()\t\t\t\r\n\t\tmap mutations to proteins domains (domains_mapped.txt)\r\n\r\nenrich()\t\t\r\n\t\tThis method performed enrichment analysis of mutated proteins and return the p value of functional enrichment \r\n\t\tof mutated proteins at different functional regions/residues; see main text for how pvalue is calculated. \r\nab()\t\t\t\r\n\t\tprepares raw Uniprot data (uniprot_mod_raw.txt) for yeast active and binding sites mutation analysis (bact.txt)\r\n\r\nid()\t\t\t\r\n\t\tmaps proteins ids to active and binding sites containing proteins (sites_id.txt)\r\n\r\nmmap()\t\t\t\r\n\t\tmap mutations to proteins active and bindings sites (ab_mutation_file.txt)\r\n\r\nnucleotide()\t\t\r\n\t\tprepares the UniProt data for the nucleotide motifs mapping to mutations\r\n\r\nn_map()\t\t\r\n\t\tmaps different proteins ids to nucleotides data\r\n\r\nnucleotide_map()\t\r\n\t\tmaps mutations to the nucleotide binding motifs\r\n\r\nbioGrid()\t\t\r\n\t\tDownloads BioGrid ids of yeast proteins from UniProt for further processing including mapping and web browsing\r\n        WARNING: requires powerful machines to work with as its expensive to open in machines with low memory.\r\n\r\npreWeb()\r\n\t\tmaps mutations to BioGrid ids (biog.txt)\r\n\r\nbweb()\t\topens the BioGrid db in browser with as many tabs as mutated proteins\r\n\r\npdb_c()\t\tStructure data filtration from UniProt\r\n\r\nmu_map()\tmutations proteins mapped to the yeastID file\r\n\r\npdb()\t\tThis code maps mutations to the proteins structural regions\r\n\r\ninterface()\tPTM present at the interface of two proteins and known to play role in interaction (Beltrao et al. Cell 2012)\r\n\r\nppi()\t\tPTM present at the interface of two proteins and known to play role in interaction (Beltrao et al. Cell 2012)\r\n\r\nwithinPro()\tPTMs (predicted) involved in the crosstalk within a given protein at baker's years (Minguez el 2012)\r\n\r\nbetweenPro()\tPTMs (predicted) involved in the crosstalk in different proteins at baker's years (PTMcode 2.0; Minguez el 2012)\r\n\r\nhotspot()\tPTMs containing motifs in a close proximity are named hotspots (Beltrao et al. Cell 2012)\r\n\r\n#Troubleshoots\r\n\r\n\r\n1 - The files of annotated PTMs are missing or less them nine.\r\n\r\nReason: unzip the data/PTMcode+PTMfunc_data/sc_btw_proteins.txt.zip did not worked in $ ydata command.\r\nhow to correct: manually unzip the sc_btw_proteins.txt.zip file and run $ ydata (normally this will not needed)\r\n\r\n2 - $ ygenes gives an error message: \r\n\r\n\u201cIndexError: string index out of range\u201d\r\n\r\n2(b) - The same reason (below) leads to the unsuccessful mapping of mutations to different functional regions like domains:\r\n\r\n\"Error: input file contains error position forBRR2protein\"\r\n\r\nReason: the mutations positions fall outside the start and end of the respective proteins (NOTE: to analyse\r\nthe proteins in starting file with correct mutation positions, user can use individual methods uniprot_data()\r\nand functional_data(), to get all the analyses done, than execute the command-line step3)\r\n\r\nhow to correct: Look at the positions of mutations and compare them manually if they correspond to start and end \r\npositions of a protein, if not, correct the problem and re-run $ ygenes command.\r\n\r\n3 - yweb fails to locate the directory.\r\n\r\nhow to correct: In python 2.x, the path should be given as \u201cpath/to/biog.txt\u201d but in python 3.x it\u2019s without inverted commas, \r\npath/to/biog.txt\r\n\r\n\r\n# Contributors\r\n\r\n            http://www.biw.kuleuven.be/CSB/\r\n            \r\nThis work in supported by KU Leuven research fund.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CSB-KUL/yMap", "keywords": "Biofinformatics,Proteins variants,PostTransational-Modifications (PTMs),Proteins domains,Secondary Structures,Protein-Protein Interactions,Genomics,Proteomics,Gene Ontology,yMap", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ymap", "package_url": "https://pypi.org/project/ymap/", "platform": "", "project_url": "https://pypi.org/project/ymap/", "project_urls": {"Homepage": "https://github.com/CSB-KUL/yMap"}, "release_url": "https://pypi.org/project/ymap/2.0.8/", "requires_dist": null, "requires_python": "", "summary": "An automated method to map yeast variants to protein modifications and functional regions", "version": "2.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            # yMap - Yeast Genotype to Phenotype Map (release year 2016)\n<br>\n<br>yMap is a python based fast and robust automated method to map large yeast variants data to \n<br>            \n<br>            - proteins post-translational modifications \n<br>                            \n<br>            - proteins domains, \n<br>                            \n<br>            - proteins-nucleotide binding domains, \n<br>                        \n<br>            - proteins structural regions, \n<br>                \n<br>            - proteins active and binding sites \n<br>                \n<br>            - proteins networks visualisation. \n<br>\n<br>\n<br>The post-translational modifications in yMap are collected from different repositories like UniProt and sources \n<br>with annotated PTMs like PTMcode 2.0 and PTMfunc, for more details, see below.\n<br>\n<br>In a user friendly three steps, it generates a \"final-report\" file to report all the non-synonymous \n<br>mutations that overlaps or falls inside the above mentioned proteins functional regions.\n<br>The final-report is complemented with two other files; enrichment and visualsation id file\n<br>\n<br>#Dependencies\n<br>\n<br>yMap depends on:\n<br>\n<br>        python 2.6.x\n<br>\n<br>        python 3.x\n<br>\n<br>        Orange bioinformatics (http://pythonhosted.org/Orange-Bioinformatics/#installation)\n<br>\n<br>#Video demo \n<br>https://www.youtube.com/watch?v=pcmkuWvLRzI \n<br>\n<br>#Installation\n<br>\n<br>            pip install ymap\n<br>\n<br>#Usage\n<br>    \n<br>            step1: $ ydata       \t#download all the data needed for proper execution of ymap\n<br>            \n<br>            step2: copy and paste the \"mutation file\" to the present directory\n<br>\n<br>            step3: $ yproteins  \t#if starting file contains the mutations at proteins level \n<br>                                        (SEE example_mutation_file/mutation.txt).\n<br>            \n<br>            step3: $ ygenes        \t#if starting file contains the mutations at chromosomes leve with genetic                                                    coordinates (SEE example_mutation_file/mutated_proteins.txt).\n<br>            \n<br>            step4: $ yweb\t\t # generates the html based visualization of mutated proteins on BioGrid db.\n<br>\t\t\t\t\t(NOTE: a user will required to specify the 'path/to/biog.txt' as input, when asked)\n<br>\t\t\t\t\t\n<br>\n<br>*To run from source code:\n<br>\n<br>\t\tChange path to directory containing ymap.py\n<br>\t\t\n<br>\t\t$python ymap.py -d ydata (step1)\n<br>\t\t\n<br>\t\t$pyhton ymap.py -p yproteins (step3)\n<br>\t\t\n<br>\t\t$pyhton ymap.py -g ygenes (step3)\n<br>\t\t\n<br>\t\t$pyhton ymap.py -w yweb (step4)\n<br>\n<br>#Contents:\n<br>Introduction to different types of data (generated/provided in yMap)\n<br>Introduction to all the methods\n<br>Results (introduction to results data)\n<br>Troubleshoots\n<br>\n<br>#Introduction to data:\n<br>\n<br>\t\u2014\u2014\u2014\u2014\u2014input\u2014\u2014\u2014\n<br>\n<br>A - mutation (tab separated txt \"mutated_proteins.txt\") file contains proteins common names and mutated residues positions\n<br>(please following the exact naming convention of input files as in example data, for proper execution of ymap; see example data))\n<br>\n<br>\n<br>\t\u2014\u2014\u2014output\u2014\u2014\u2014(Pre-analysis data needed for ymap execution)\n<br>\n<br>\n<br>(i)\tRaw files downloaded from UniProt and stored in the present dir.by executing step2.  \t\n<br>\n<br>\n<br>1 - uniprot_mod_raw.txt\t# Uniprot data in raw format \n<br>\n<br>\n<br>2 - yeastID.txt\t\t\t# Yeast id containing file\n<br>\n<br>\n<br>3 - PTMs.txt\t\t\t# contains yeast proteins, PTMs position and PTM types\n<br>\n<br>\n<br>4 - PTM_id_file.txt\t\t# combined file of 2 and 3.\n<br>\n<br>\n<br>5 - domains.txt\t\t\t# yeast proteins, domains start, end and names\n<br>\n<br>\n<br>6 - id_domain.txt\t\t# combined file of 2 and 5.\n<br>\n<br>\n<br>7 - bact.txt\t\t\t# contains proteins id, and binding and active sites \n<br>\t\t\t\t  positions\n<br>\n<br>8 - sites_id.txt\t\t# combined file of 2 and 7.\n<br>\n<br>\n<br>9 - uniprot_bioGrid.txt\t\t# contains all the yeast proteins with BioGrid ids\n<br>\n<br>\n<br>(i-B)\tPre downloaded files from PTMcode and PTMfunc\n<br>\n<br>(PTMfunc)\n<br>\n<br>3DID_aceksites_interfaceRes_sc.txt\n<br>\n<br>3DID_phosphosites_interfaceRes_sc.txt\n<br>\n<br>3DID_ubisites_interfaceRessc_sc.txt\n<br>\n<br>SC_psites_interactions_sc.txt\n<br>\n<br>SC_ubi_interactions_sc.txt\n<br>\n<br>SC_acet_interactions.txt\n<br>\n<br>(PTMcode)\n<br>\n<br>schotspot.txt\n<br>\n<br>sc_btw_proteins.txt\n<br>\n<br>sc_within_proteins.txt\n<br>\n<br>\n<br>\n<br>(ii)\tProcessed data from UniProt and other resources by executing step2.  \n<br>\n<br>A number of files germinated from the original UniProt file for further analyses:\n<br>\n<br>PTMs.txt\t\t\t\n<br>\t\tcontains Post-translational modifications\n<br>\n<br>PTM_id_file.txt\t\t\t\n<br>\t\tPTMs.txt with all the proteins ids\n<br>\n<br>PDB.txt\t\t\t\t\n<br>\t\tcontains PDB structural data from UniProt\n<br>\n<br>nucleotide.txt\t\t\t\n<br>\t\tcontains DNA-Protein binding motifs \n<br>\n<br>back.txt\t\t\t\n<br>\t\tcontains Proteins active and binding positions\n<br>\n<br>d_id_map.txt\t\t\t\n<br>\t\tcontains protein domains with all the ids\t\n<br>\n<br>id_domain.txt\t\t\t\n<br>\t\tgff data from frmt.txt with all the ids\n<br>\n<br>domains.txt\t\t\t\n<br>\t\tdomains data from UniProt\n<br>\n<br>frmt.txt\t\t\t\n<br>\t\tformatted gff file for further process\n<br>\n<br>sites_id.xt\t\t\t\n<br>\t\tActive/binding sites with all ids\n<br>\n<br>unipro_bioGrid.txt\t\t\n<br>\t\tcontains BioGrid ids of all yeast proteins\n<br>\n<br>nucleotide.txt\t\t\t\n<br>\t\tproteins (uniprot) id with DNA binding motifs\n<br>\n<br>id_nucleotide.txt\t\t\n<br>\t\tcontains data from nucleotide with all the protein ids for processing\n<br>\n<br>#Results\n<br>\n<br>(inside ymap-results folder, each subfolder contains three files, one with mutations analysis file, which includes mutated proteins, mutation positions, mutated functional region and source of data, pvalue.txt of pathways enrichments and biog.txt, a biogrid id corresponding to mutated proteins)\n<br>\n<br>\t/PTMs/mutated_proteins.txt\t\n<br>\t\tcontains proteins ids mutated at PTMs sites\n<br>\n<br>\t/Domains/domains_mapped.txt\t\n<br>\t\tcontains proteins ids mutated for protein domains\n<br>\n<br>\t/A-B_binding/ab_mutation_file.txt\t\n<br>\t\tcontains proteins ids mutated at active and binding \n<br>\n<br>\n<br>\tPPI - PTMfunc data\n<br>\n<br>\t\tPPI/acetylation\n<br>\t\tPTM-type containing residue is important in PPI\n<br>\n<br>\t\tPPI/Phosphorylation\n<br>\t\tPTM-type containing residue is important in PPI\n<br>\n<br>\t\tPPI/ubiquitination\n<br>\t\tPTM-type containing residue is important in PPI\n<br>\n<br>\tInterface\n<br>\n<br>\t\tInterface/ubiquitination\n<br>\t\tPTM-type containing residue present at protein interface \n<br>\n<br>\t\tInterface/acetylation\n<br>\t\tPTM-type containing residue present at protein interface \n<br>\n<br>\t\tInterface/Phosphorylation\n<br>\t\tPTM-type containing residue present at protein interface \n<br>\n<br>\tPTMs_hotSpot\n<br>\t\tPTMs concentrated in a small motif known as hopspot by Beltrao et al. Cell 2012.\n<br>\n<br>\tPTMs_between_proteins - PTMcode2.0 data\n<br>\t\tPTMs present between two proteins and involvined in crosstalk. \n<br>\n<br>\tPTMs_witnin_proteins\n<br>\t\tPTMs present within a protein and involvined in crosstalk.\n<br>\t\n<br>\tbiog.txt\t\t\t\n<br>\t\tcontains proteins BioGrid ids for -w web function (this file present in each subfolder).\n<br>\n<br>\tp-value.txt\t\t\t\n<br>\t\tcontains pathways enrichments for each type of mutation observed (this file present in each subfolder).\n<br>\n<br>\tfinal_report.txt\t\t\n<br>\t\tits a refined version of summary.txt and contains, protein UniProt id, common names, amino acid mutation position, wild type amino acid, mutated amino acid, type of mutation (non-synonymous/stop codon), mutation feature types (i.e. PTM-type or domain-name etc), mutation feature (i.e. PTMs, domain or another) and source of data (e.g. UnProt)\n<br>\n<br>\n<br>\n<br>#Introduction to all the methods \n<br>\t\t(How individual methods work in ymap)\n<br>\n<br>NOTE: change the name of the mutations containing file to \u2018mutated_proteins.txt\u2019 (see example data) and copy to the cd path/to/ymap\n<br>\n<br>\n<br>Functions name\t\t\tDescription\n<br>\n<br>mutation_types_file()\tmutation type and amino acid change calculation (where ref. and mutant base known)\n<br>\n<br>pTMdata()\t\t\n<br>\t\tDownloads UpiProt data as a raw txt file (uniprot_mod_raw.txt)\n<br>\n<br>clean()\t\t\t\n<br>\t\tcleans file 'uniprot_mod_raw.txt' into a tab separated\u2019PTMs.txt'\n<br>\n<br>iD()\t\t\t\n<br>\t\tThis method retrieves the different ID types for maping (yeastID.txt)\n<br>\n<br>pmap()\t\t\t\n<br>\t\tif proteins ids are not SDG or uniprot or common names, this method maps the ids \n<br>\n<br>ptm_map()\t\t\n<br>\t\tThis method maps the overlap between mutated codons from previous method to the PTM sites \n<br>\n<br>dclean()\t\t\n<br>\t\tdomain data needed to be filters from UniProt file, before mapping domains \n<br>d_map()\t\t\t\n<br>\t\tmaps mutations to the yeast domains (id_domain.txt)\n<br>\n<br>dmap()\t\t\t\n<br>\t\tmap mutations to proteins domains (domains_mapped.txt)\n<br>\n<br>enrich()\t\t\n<br>\t\tThis method performed enrichment analysis of mutated proteins and return the p value of functional enrichment \n<br>\t\tof mutated proteins at different functional regions/residues; see main text for how pvalue is calculated. \n<br>ab()\t\t\t\n<br>\t\tprepares raw Uniprot data (uniprot_mod_raw.txt) for yeast active and binding sites mutation analysis (bact.txt)\n<br>\n<br>id()\t\t\t\n<br>\t\tmaps proteins ids to active and binding sites containing proteins (sites_id.txt)\n<br>\n<br>mmap()\t\t\t\n<br>\t\tmap mutations to proteins active and bindings sites (ab_mutation_file.txt)\n<br>\n<br>nucleotide()\t\t\n<br>\t\tprepares the UniProt data for the nucleotide motifs mapping to mutations\n<br>\n<br>n_map()\t\t\n<br>\t\tmaps different proteins ids to nucleotides data\n<br>\n<br>nucleotide_map()\t\n<br>\t\tmaps mutations to the nucleotide binding motifs\n<br>\n<br>bioGrid()\t\t\n<br>\t\tDownloads BioGrid ids of yeast proteins from UniProt for further processing including mapping and web browsing\n<br>        WARNING: requires powerful machines to work with as its expensive to open in machines with low memory.\n<br>\n<br>preWeb()\n<br>\t\tmaps mutations to BioGrid ids (biog.txt)\n<br>\n<br>bweb()\t\topens the BioGrid db in browser with as many tabs as mutated proteins\n<br>\n<br>pdb_c()\t\tStructure data filtration from UniProt\n<br>\n<br>mu_map()\tmutations proteins mapped to the yeastID file\n<br>\n<br>pdb()\t\tThis code maps mutations to the proteins structural regions\n<br>\n<br>interface()\tPTM present at the interface of two proteins and known to play role in interaction (Beltrao et al. Cell 2012)\n<br>\n<br>ppi()\t\tPTM present at the interface of two proteins and known to play role in interaction (Beltrao et al. Cell 2012)\n<br>\n<br>withinPro()\tPTMs (predicted) involved in the crosstalk within a given protein at baker's years (Minguez el 2012)\n<br>\n<br>betweenPro()\tPTMs (predicted) involved in the crosstalk in different proteins at baker's years (PTMcode 2.0; Minguez el 2012)\n<br>\n<br>hotspot()\tPTMs containing motifs in a close proximity are named hotspots (Beltrao et al. Cell 2012)\n<br>\n<br>#Troubleshoots\n<br>\n<br>\n<br>1 - The files of annotated PTMs are missing or less them nine.\n<br>\n<br>Reason: unzip the data/PTMcode+PTMfunc_data/sc_btw_proteins.txt.zip did not worked in $ ydata command.\n<br>how to correct: manually unzip the sc_btw_proteins.txt.zip file and run $ ydata (normally this will not needed)\n<br>\n<br>2 - $ ygenes gives an error message: \n<br>\n<br>\u201cIndexError: string index out of range\u201d\n<br>\n<br>2(b) - The same reason (below) leads to the unsuccessful mapping of mutations to different functional regions like domains:\n<br>\n<br>\"Error: input file contains error position forBRR2protein\"\n<br>\n<br>Reason: the mutations positions fall outside the start and end of the respective proteins (NOTE: to analyse\n<br>the proteins in starting file with correct mutation positions, user can use individual methods uniprot_data()\n<br>and functional_data(), to get all the analyses done, than execute the command-line step3)\n<br>\n<br>how to correct: Look at the positions of mutations and compare them manually if they correspond to start and end \n<br>positions of a protein, if not, correct the problem and re-run $ ygenes command.\n<br>\n<br>3 - yweb fails to locate the directory.\n<br>\n<br>how to correct: In python 2.x, the path should be given as \u201cpath/to/biog.txt\u201d but in python 3.x it\u2019s without inverted commas, \n<br>path/to/biog.txt\n<br>\n<br>\n<br># Contributors\n<br>\n<br>            http://www.biw.kuleuven.be/CSB/\n<br>            \n<br>This work in supported by KU Leuven research fund.\n          </div>"}, "last_serial": 2367733, "releases": {"2": [{"comment_text": "", "digests": {"md5": "f30b966d19293ee527151f47a80850d7", "sha256": "1e2750d049bbafaee8a475ab4b99a1af503eabfb3ca9998e35822736868be0ed"}, "downloads": -1, "filename": "ymap-2.tar.gz", "has_sig": false, "md5_digest": "f30b966d19293ee527151f47a80850d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11934555, "upload_time": "2016-08-17T07:42:36", "upload_time_iso_8601": "2016-08-17T07:42:36.041495Z", "url": "https://files.pythonhosted.org/packages/8a/e0/90fb0be2783e32450cba67a3ac474842f8c920c493169dcc866461e92e70/ymap-2.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "1dd0959bf72afe4a70f319c97d394177", "sha256": "066aa7b7f1f3a9b9d5aae3bee8e94db2791093255217e5cea3af03c4a9c66dfb"}, "downloads": -1, "filename": "ymap-2.0.1.tar.gz", "has_sig": false, "md5_digest": "1dd0959bf72afe4a70f319c97d394177", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11934566, "upload_time": "2016-08-17T08:16:00", "upload_time_iso_8601": "2016-08-17T08:16:00.386569Z", "url": "https://files.pythonhosted.org/packages/7a/85/b053dc3ac6524f4c792aa2f846f0cf39eaa85358532b138a60d910680e7b/ymap-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "0b86694c08c44df5d3fca835f6dd2ffc", "sha256": "080830993da2dc0ab50495fdd4b24d1be9eeaad97208f21087b04745e30b5c7c"}, "downloads": -1, "filename": "ymap-2.0.2.tar.gz", "has_sig": false, "md5_digest": "0b86694c08c44df5d3fca835f6dd2ffc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11941222, "upload_time": "2016-08-24T11:11:34", "upload_time_iso_8601": "2016-08-24T11:11:34.890223Z", "url": "https://files.pythonhosted.org/packages/e0/ea/a62e459b80133baa9be1020ea84ea5e0e4955b0428bb62b47a3f00bf6e28/ymap-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "7dfecba7a0e46d2a0969e4650751a9ec", "sha256": "3fdc3e90d4dec28f2194230b3493d2b6fb957bf21779ae6f4cedb708b9719588"}, "downloads": -1, "filename": "ymap-2.0.3.tar.gz", "has_sig": false, "md5_digest": "7dfecba7a0e46d2a0969e4650751a9ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11941228, "upload_time": "2016-08-24T12:56:05", "upload_time_iso_8601": "2016-08-24T12:56:05.105549Z", "url": "https://files.pythonhosted.org/packages/36/12/f5e7c9e797771d62a551a5b857f2dae502ab4c08e11dc4e21ccab7acfae4/ymap-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "53a5d52b82a50acfe26cbc5da368c332", "sha256": "130da15f0e428bbde21c4c8aff02e1451c034e866c4038ba00e3a4db61cb2ca1"}, "downloads": -1, "filename": "ymap-2.0.4.tar.gz", "has_sig": false, "md5_digest": "53a5d52b82a50acfe26cbc5da368c332", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11948982, "upload_time": "2016-08-24T19:29:27", "upload_time_iso_8601": "2016-08-24T19:29:27.107100Z", "url": "https://files.pythonhosted.org/packages/da/eb/77534e926e558fad3d472a10053205a0c99380625b820e4c175049d7b1d9/ymap-2.0.4.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "0760027d64fe4758f64700bdc05aee3e", "sha256": "d97e5e5cdda59096252a70b95a39b4fd975d6c67a756a6f17bf1562db200491e"}, "downloads": -1, "filename": "ymap-2.0.5.tar.gz", "has_sig": false, "md5_digest": "0760027d64fe4758f64700bdc05aee3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11945799, "upload_time": "2016-08-24T20:08:17", "upload_time_iso_8601": "2016-08-24T20:08:17.834953Z", "url": "https://files.pythonhosted.org/packages/03/f6/4599b0306e30abd43c4abfb29dc1d9889eb543bc42a948851f78377206c4/ymap-2.0.5.tar.gz", "yanked": false}], "2.0.6": [{"comment_text": "", "digests": {"md5": "5f8a7fe6348c5e78598cadb2bf52849c", "sha256": "b91b071dc94d98f8af15cc832dfbcbd6521c00b4493dd42c8706de77b72a7740"}, "downloads": -1, "filename": "ymap-2.0.6.tar.gz", "has_sig": false, "md5_digest": "5f8a7fe6348c5e78598cadb2bf52849c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11945787, "upload_time": "2016-08-24T20:20:23", "upload_time_iso_8601": "2016-08-24T20:20:23.248204Z", "url": "https://files.pythonhosted.org/packages/fe/84/a2f72c343383aa94724c512dc7855219b41ada30d056db685520cc91369d/ymap-2.0.6.tar.gz", "yanked": false}], "2.0.6.1": [{"comment_text": "", "digests": {"md5": "c198d97ed922176a2026d7e7fa353e31", "sha256": "e067614852969eeefcda5988ef695ea14a6ff0561cfdfa9757d10e62b50ac84d"}, "downloads": -1, "filename": "ymap-2.0.6.1.tar.gz", "has_sig": false, "md5_digest": "c198d97ed922176a2026d7e7fa353e31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11946196, "upload_time": "2016-08-28T13:58:41", "upload_time_iso_8601": "2016-08-28T13:58:41.094855Z", "url": "https://files.pythonhosted.org/packages/dd/3b/f705acde2e6f2eb675f8ad604f9b246853f85da7147c943cd650c8e631ff/ymap-2.0.6.1.tar.gz", "yanked": false}], "2.0.6a0": [{"comment_text": "", "digests": {"md5": "aad85fc12efde07242cbe8c5b9a50846", "sha256": "99df898bc9a995f03824bd74aee73959321101d8e4940bf21df4457a78bc626b"}, "downloads": -1, "filename": "ymap-2.0.6a0.tar.gz", "has_sig": false, "md5_digest": "aad85fc12efde07242cbe8c5b9a50846", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11945865, "upload_time": "2016-08-28T12:45:08", "upload_time_iso_8601": "2016-08-28T12:45:08.066032Z", "url": "https://files.pythonhosted.org/packages/be/01/4f48b22482b12f0906cde69f0e95753998bc0d27d85eafe757f680b38c37/ymap-2.0.6a0.tar.gz", "yanked": false}], "2.0.7": [{"comment_text": "", "digests": {"md5": "12dff917aa81fd68378ca58b84774271", "sha256": "5aef918208bc9ba2280b63791a3de20f1adfa811d76654bfcc4499de4b833401"}, "downloads": -1, "filename": "ymap-2.0.7.tar.gz", "has_sig": false, "md5_digest": "12dff917aa81fd68378ca58b84774271", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11945841, "upload_time": "2016-08-29T09:40:49", "upload_time_iso_8601": "2016-08-29T09:40:49.857599Z", "url": "https://files.pythonhosted.org/packages/ef/82/1983bd49432d1ef5f5f34004c41ae0b9197f9eecd400c9676b1884d1224c/ymap-2.0.7.tar.gz", "yanked": false}], "2.0.8": [{"comment_text": "", "digests": {"md5": "5617cd6f1b0e68f39740d05e72a961bf", "sha256": "557fb6cc0bf40098f877fb5d5ab49c893a74fc0447b55c895b89e1c2bae63eed"}, "downloads": -1, "filename": "ymap-2.0.8.tar.gz", "has_sig": false, "md5_digest": "5617cd6f1b0e68f39740d05e72a961bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11945855, "upload_time": "2016-09-22T13:43:31", "upload_time_iso_8601": "2016-09-22T13:43:31.674437Z", "url": "https://files.pythonhosted.org/packages/61/d5/2a3eb9f562f54a9982cccf9bdf52152f57d1630205fe889ccd779545e74f/ymap-2.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5617cd6f1b0e68f39740d05e72a961bf", "sha256": "557fb6cc0bf40098f877fb5d5ab49c893a74fc0447b55c895b89e1c2bae63eed"}, "downloads": -1, "filename": "ymap-2.0.8.tar.gz", "has_sig": false, "md5_digest": "5617cd6f1b0e68f39740d05e72a961bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11945855, "upload_time": "2016-09-22T13:43:31", "upload_time_iso_8601": "2016-09-22T13:43:31.674437Z", "url": "https://files.pythonhosted.org/packages/61/d5/2a3eb9f562f54a9982cccf9bdf52152f57d1630205fe889ccd779545e74f/ymap-2.0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:22:10 2020"}