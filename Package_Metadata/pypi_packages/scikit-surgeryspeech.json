{"info": {"author": "Matt Clarkson", "author_email": "YOUR-EMAIL@ucl.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Healthcare Industry", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Medical Science Apps."], "description": "scikit-surgeryspeech\n===============================\n\n.. image:: https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech/raw/master/project-icon.png\n   :height: 128px\n   :width: 128px\n   :target: https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech\n   :alt: Logo\n\n.. image:: https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech/badges/master/pipeline.svg\n   :target: https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech/pipelines\n   :alt: GitLab-CI test status\n\n.. image:: https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech/badges/master/coverage.svg\n    :target: https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech/commits/master\n    :alt: Test coverage\n\n\n\nAuthor: Kim-Celine Kahl\n\nscikit-surgeryspeech is part of the `SNAPPY`_ software project, developed at the `Wellcome EPSRC Centre for Interventional and Surgical Sciences`_, part of `University College London (UCL)`_.\n\nscikit-surgeryspeech supports Python 3.6.\n\nscikit-surgeryspeech is a project which runs the `Python Speech Recognition API`_ in the background listening\nfor a specific command. After saying the keyword you can say different commands, which get\nconverted to QT Signals.\n\nThe speech recognition is done by the `Google Cloud API`_, you have to get the credentials to use it or change the recognition service.\n\nKeyword detection is done by the `Porcupine API`_. This should be have been installed automatically via the pvporcupine dependency\n\nPlease explore the project structure, and implement your own functionality.\n\nExample usage\n-------------\n\nTo run an example, just start\n\n::\n\n    sksurgeryspeech.py -c example_config.json\n\n\nThe config file should define the paths for the porcupine library and the Google Cloud API if you are using it.\n\nYou can then say the keyword depending on the Porcupine keyword file you chose and afterwards a command. The command \"quit\" exits the application.\n\nNote: each time you have already entered a command, you need to say the keyword again to trigger the listening to commands.\n\nDeveloping\n----------\n\nCloning\n^^^^^^^\n\nYou can clone the repository using the following command:\n\n::\n\n    git clone https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech\n\nIf you have problems running the application, you might need to install portaudio\n\nMac\n::\n\n    brew install portaudio\n\nUbuntu\n::\n\n    sudo apt-get install libasound-dev portaudio19-dev\n\nIf you're going to try sphinx might need to install pulseaudo-dev\n\nUbuntu\n::\n\n    sudo apt-get install swig libpulse-dev\n\n\nSet up the Porcupine keyword detection\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThen, you have to set the following variables in the configuration file\n\n::\n\n   \"porcupine dynamic library path\" : \".tox/py37/lib/python3.7/site-packages/pvporcupine/lib/linux/x86_64/libpv_porcupine.so\",\n\t\"porcupine model file path\" : \".tox/py37/lib/python3.7/site-packages/pvporcupine/lib/common/porcupine_params.pv\",\n\t\"porcupine keyword file\" : [\".tox/py37/lib/python3.7/site-packages/pvporcupine/resources/keyword_files/linux/jarvis_linux.ppn\"],\n\n\nYou can also `generate your own keyword files`_\n\nIf you are using the speech recognition service within your own application, you have to start a background thread which calls the method to listen to the keyword over and over again.\n\nYou can find an example how to create such a thread in the sksurgeryspech_demo.py\n\nUse the Google Cloud speech recognition service\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.. _`Google Cloud API is set up correctly`:\n\nTo use the Google Cloud speech recognition service, you need to `get the credentials`_ first. After signing up, you\nshould get a json file with your credentials. Download this file and add add it to the configuration file\n\n::\n\n    \"google credentials file\" : \"snappy-speech-6ff24bf3e262.json\",\n\nTo the path of your json file. You should then be able to run the application.\n\n\nChange speech recognition service\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nYou can try different speech recognition services by changing the recogniser entry in the config file. \nsphinx, google and google_cloud have all been tested, other options are possible but may not be implemented yet.\n\n::\n\n    \"recogniser\" : \"sphinx\"\n    \"recogniser\" : \"google\" \n    \"recogniser\" : \"google_cloud\"\n    \"recogniser\" : \"wit\"\n    \"recogniser\" : \"bing\"\n    \"recogniser\" : \"azure\"\n    \"recogniser\" : \"houndify\"\n    \"recogniser\" : \"ibm\"\n\nPython development\n^^^^^^^^^^^^^^^^^^\n\nThis project uses tox. Start with a clean python environment, then do:\n\n::\n\n    pip install tox\n    tox\n\nand the commands that are run can be found in tox.ini.\n\n\nInstalling\n----------\n\nYou can pip install directly from the repository as follows:\n\n::\n\n    pip install git+https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech\n\n\n\nContributing\n^^^^^^^^^^^^\n\nPlease see the `contributing guidelines`_.\n\n\nUseful links\n^^^^^^^^^^^^\n\n* `Source code repository`_\n\n\nLicensing and copyright\n-----------------------\n\nCopyright 2019 University College London.\nscikit-surgeryspeech is released under the BSD-3 license. Please see the `license file`_ for details.\n\n\nAcknowledgements\n----------------\n\nSupported by `Wellcome`_ and `EPSRC`_.\n\n\n.. _`Wellcome EPSRC Centre for Interventional and Surgical Sciences`: http://www.ucl.ac.uk/weiss\n.. _`source code repository`: https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech\n.. _`SNAPPY`: https://weisslab.cs.ucl.ac.uk/WEISS/PlatformManagement/SNAPPY/wikis/home\n.. _`University College London (UCL)`: http://www.ucl.ac.uk/\n.. _`Wellcome`: https://wellcome.ac.uk/\n.. _`EPSRC`: https://www.epsrc.ac.uk/\n.. _`contributing guidelines`: https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech/blob/master/CONTRIBUTING.rst\n.. _`license file`: https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech/blob/master/LICENSE\n.. _`Python Speech Recognition API`: https://pypi.org/project/SpeechRecognition/\n.. _`Google Cloud API`: https://cloud.google.com/speech-to-text/\n.. _`Porcupine API`: https://github.com/Picovoice/Porcupine\n.. _`generate your own keyword files`: https://github.com/Picovoice/Porcupine/tree/master/tools/optimizer\n.. _`get the credentials`: https://console.cloud.google.com/freetrial/signup/tos?_ga=2.263649484.-1718611742.1562839990\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech", "keywords": "medical imaging", "license": "BSD-3 license", "maintainer": "", "maintainer_email": "", "name": "scikit-surgeryspeech", "package_url": "https://pypi.org/project/scikit-surgeryspeech/", "platform": "", "project_url": "https://pypi.org/project/scikit-surgeryspeech/", "project_urls": {"Homepage": "https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech"}, "release_url": "https://pypi.org/project/scikit-surgeryspeech/0.2.0/", "requires_dist": ["pyaudio", "SpeechRecognition", "google-api-python-client", "oauth2client", "PySide2", "scikit-surgerycore", "pvporcupine"], "requires_python": "", "summary": "Interface to speech services for image-guided surgery.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech\" rel=\"nofollow\"><img alt=\"Logo\" height=\"128px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5393398701c72641108e90f9a86dc420365ea22f/68747470733a2f2f77656973736c61622e63732e75636c2e61632e756b2f57454953532f536f6674776172655265706f7369746f726965732f534e415050592f7363696b69742d737572676572797370656563682f7261772f6d61737465722f70726f6a6563742d69636f6e2e706e67\" width=\"128px\"></a>\n<a href=\"https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech/pipelines\" rel=\"nofollow\"><img alt=\"GitLab-CI test status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c10c709ed6af7a54c9e44183cf492b57be6b7187/68747470733a2f2f77656973736c61622e63732e75636c2e61632e756b2f57454953532f536f6674776172655265706f7369746f726965732f534e415050592f7363696b69742d737572676572797370656563682f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<a href=\"https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech/commits/master\" rel=\"nofollow\"><img alt=\"Test coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e7d9684646e8bf4725be005f16c16d50f16438c0/68747470733a2f2f77656973736c61622e63732e75636c2e61632e756b2f57454953532f536f6674776172655265706f7369746f726965732f534e415050592f7363696b69742d737572676572797370656563682f6261646765732f6d61737465722f636f7665726167652e737667\"></a>\n<p>Author: Kim-Celine Kahl</p>\n<p>scikit-surgeryspeech is part of the <a href=\"https://weisslab.cs.ucl.ac.uk/WEISS/PlatformManagement/SNAPPY/wikis/home\" rel=\"nofollow\">SNAPPY</a> software project, developed at the <a href=\"http://www.ucl.ac.uk/weiss\" rel=\"nofollow\">Wellcome EPSRC Centre for Interventional and Surgical Sciences</a>, part of <a href=\"http://www.ucl.ac.uk/\" rel=\"nofollow\">University College London (UCL)</a>.</p>\n<p>scikit-surgeryspeech supports Python 3.6.</p>\n<p>scikit-surgeryspeech is a project which runs the <a href=\"https://pypi.org/project/SpeechRecognition/\" rel=\"nofollow\">Python Speech Recognition API</a> in the background listening\nfor a specific command. After saying the keyword you can say different commands, which get\nconverted to QT Signals.</p>\n<p>The speech recognition is done by the <a href=\"https://cloud.google.com/speech-to-text/\" rel=\"nofollow\">Google Cloud API</a>, you have to get the credentials to use it or change the recognition service.</p>\n<p>Keyword detection is done by the <a href=\"https://github.com/Picovoice/Porcupine\" rel=\"nofollow\">Porcupine API</a>. This should be have been installed automatically via the pvporcupine dependency</p>\n<p>Please explore the project structure, and implement your own functionality.</p>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<p>To run an example, just start</p>\n<pre>sksurgeryspeech.py -c example_config.json\n</pre>\n<p>The config file should define the paths for the porcupine library and the Google Cloud API if you are using it.</p>\n<p>You can then say the keyword depending on the Porcupine keyword file you chose and afterwards a command. The command \u201cquit\u201d exits the application.</p>\n<p>Note: each time you have already entered a command, you need to say the keyword again to trigger the listening to commands.</p>\n</div>\n<div id=\"developing\">\n<h2>Developing</h2>\n<div id=\"cloning\">\n<h3>Cloning</h3>\n<p>You can clone the repository using the following command:</p>\n<pre>git clone https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech\n</pre>\n<p>If you have problems running the application, you might need to install portaudio</p>\n<p>Mac</p>\n<pre>brew install portaudio\n</pre>\n<p>Ubuntu</p>\n<pre>sudo apt-get install libasound-dev portaudio19-dev\n</pre>\n<p>If you\u2019re going to try sphinx might need to install pulseaudo-dev</p>\n<p>Ubuntu</p>\n<pre>sudo apt-get install swig libpulse-dev\n</pre>\n</div>\n<div id=\"set-up-the-porcupine-keyword-detection\">\n<h3>Set up the Porcupine keyword detection</h3>\n<p>Then, you have to set the following variables in the configuration file</p>\n<pre>\"porcupine dynamic library path\" : \".tox/py37/lib/python3.7/site-packages/pvporcupine/lib/linux/x86_64/libpv_porcupine.so\",\n     \"porcupine model file path\" : \".tox/py37/lib/python3.7/site-packages/pvporcupine/lib/common/porcupine_params.pv\",\n     \"porcupine keyword file\" : [\".tox/py37/lib/python3.7/site-packages/pvporcupine/resources/keyword_files/linux/jarvis_linux.ppn\"],\n</pre>\n<p>You can also <a href=\"https://github.com/Picovoice/Porcupine/tree/master/tools/optimizer\" rel=\"nofollow\">generate your own keyword files</a></p>\n<p>If you are using the speech recognition service within your own application, you have to start a background thread which calls the method to listen to the keyword over and over again.</p>\n<p>You can find an example how to create such a thread in the sksurgeryspech_demo.py</p>\n</div>\n<div id=\"use-the-google-cloud-speech-recognition-service\">\n<h3>Use the Google Cloud speech recognition service</h3>\n<p id=\"google-cloud-api-is-set-up-correctly\">To use the Google Cloud speech recognition service, you need to <a href=\"https://console.cloud.google.com/freetrial/signup/tos?_ga=2.263649484.-1718611742.1562839990\" rel=\"nofollow\">get the credentials</a> first. After signing up, you\nshould get a json file with your credentials. Download this file and add add it to the configuration file</p>\n<pre>\"google credentials file\" : \"snappy-speech-6ff24bf3e262.json\",\n</pre>\n<p>To the path of your json file. You should then be able to run the application.</p>\n</div>\n<div id=\"change-speech-recognition-service\">\n<h3>Change speech recognition service</h3>\n<p>You can try different speech recognition services by changing the recogniser entry in the config file.\nsphinx, google and google_cloud have all been tested, other options are possible but may not be implemented yet.</p>\n<pre>\"recogniser\" : \"sphinx\"\n\"recogniser\" : \"google\"\n\"recogniser\" : \"google_cloud\"\n\"recogniser\" : \"wit\"\n\"recogniser\" : \"bing\"\n\"recogniser\" : \"azure\"\n\"recogniser\" : \"houndify\"\n\"recogniser\" : \"ibm\"\n</pre>\n</div>\n<div id=\"python-development\">\n<h3>Python development</h3>\n<p>This project uses tox. Start with a clean python environment, then do:</p>\n<pre>pip install tox\ntox\n</pre>\n<p>and the commands that are run can be found in tox.ini.</p>\n</div>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>You can pip install directly from the repository as follows:</p>\n<pre>pip install git+https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech\n</pre>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<p>Please see the <a href=\"https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech/blob/master/CONTRIBUTING.rst\" rel=\"nofollow\">contributing guidelines</a>.</p>\n</div>\n<div id=\"useful-links\">\n<h3>Useful links</h3>\n<ul>\n<li><a href=\"https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech\" rel=\"nofollow\">Source code repository</a></li>\n</ul>\n</div>\n</div>\n<div id=\"licensing-and-copyright\">\n<h2>Licensing and copyright</h2>\n<p>Copyright 2019 University College London.\nscikit-surgeryspeech is released under the BSD-3 license. Please see the <a href=\"https://weisslab.cs.ucl.ac.uk/WEISS/SoftwareRepositories/SNAPPY/scikit-surgeryspeech/blob/master/LICENSE\" rel=\"nofollow\">license file</a> for details.</p>\n</div>\n<div id=\"acknowledgements\">\n<h2>Acknowledgements</h2>\n<p>Supported by <a href=\"https://wellcome.ac.uk/\" rel=\"nofollow\">Wellcome</a> and <a href=\"https://www.epsrc.ac.uk/\" rel=\"nofollow\">EPSRC</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6896028, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "625ccf898795baaa22d0139ba58858b8", "sha256": "84f4cf35b5938fc6bbda10fa8b9a1a2f21734b16f0464531f6c8756d2186ea35"}, "downloads": -1, "filename": "scikit_surgeryspeech-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "625ccf898795baaa22d0139ba58858b8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14742, "upload_time": "2019-07-19T14:20:24", "upload_time_iso_8601": "2019-07-19T14:20:24.298863Z", "url": "https://files.pythonhosted.org/packages/2c/1e/e03bd8ef8539f671097ffd4a9ce6e3232c2d14f83f5996c5515bfe26ac24/scikit_surgeryspeech-0.0.1-py2.py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "25b6f6608319eabeb730d0c3a0afae0d", "sha256": "966ad26d365c320deace7d4acfe4080fb48b6867d5e143473285b9b81aa615de"}, "downloads": -1, "filename": "scikit_surgeryspeech-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "25b6f6608319eabeb730d0c3a0afae0d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15182, "upload_time": "2019-07-25T14:29:04", "upload_time_iso_8601": "2019-07-25T14:29:04.940681Z", "url": "https://files.pythonhosted.org/packages/13/ae/c4eb5f50374ffab2110096188fda39c51e818545e102cc7a3ad180f7baaf/scikit_surgeryspeech-0.0.2-py2.py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ecde6f78b75ae1de5d458143e09056db", "sha256": "4b98a816be5e65276e376ecdf2475ff724d88e752b520f54de9c0a8baed99ddd"}, "downloads": -1, "filename": "scikit_surgeryspeech-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ecde6f78b75ae1de5d458143e09056db", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15632, "upload_time": "2019-07-29T13:22:20", "upload_time_iso_8601": "2019-07-29T13:22:20.401662Z", "url": "https://files.pythonhosted.org/packages/9e/f1/d08ab3f3799a9990e371f0b34395eee08171316bd730c95ec8136d93a1ed/scikit_surgeryspeech-0.0.3-py2.py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "5112edbc0492f790491d89471f2a0439", "sha256": "7bfd935dcd25683e64c8db9f4f34987a3be964c47d5c1c3eafcf25716fbf46a9"}, "downloads": -1, "filename": "scikit_surgeryspeech-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5112edbc0492f790491d89471f2a0439", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15770, "upload_time": "2019-07-30T09:37:49", "upload_time_iso_8601": "2019-07-30T09:37:49.832331Z", "url": "https://files.pythonhosted.org/packages/64/06/7303dbdb8311a3b98d4e9f23c2110a387e8c8ca797bada3ddc1d017c4234/scikit_surgeryspeech-0.0.4-py2.py3-none-any.whl", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "42775ca1c2f57d60cda00ecdcac84d55", "sha256": "af2fb40d3963c629d86332069c2952a9e7bf265ffe952f16cf494902549bf1b9"}, "downloads": -1, "filename": "scikit_surgeryspeech-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "42775ca1c2f57d60cda00ecdcac84d55", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15772, "upload_time": "2019-07-31T09:57:45", "upload_time_iso_8601": "2019-07-31T09:57:45.581350Z", "url": "https://files.pythonhosted.org/packages/97/62/5d8aae9071600d3faff63a59f15d917363a7cadc71d1565681461168bde8/scikit_surgeryspeech-0.0.5-py2.py3-none-any.whl", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "07d9b3d2a01d8506d66d7fd6822c1416", "sha256": "36c8cfcbe755939c2bcd6e89e343ef683fa71167f272c11e2b932909cf88b146"}, "downloads": -1, "filename": "scikit_surgeryspeech-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "07d9b3d2a01d8506d66d7fd6822c1416", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15968, "upload_time": "2019-08-05T09:49:13", "upload_time_iso_8601": "2019-08-05T09:49:13.277022Z", "url": "https://files.pythonhosted.org/packages/29/e7/911bc346cd413a2495419bc01edb0e37961d5a4db0beb44ed31132d2e9e3/scikit_surgeryspeech-0.0.6-py2.py3-none-any.whl", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "9e40fdf013b2f93055ea82cba7bcaeaa", "sha256": "12e660cd52ecb0efc50599246f3573ec2fc049f41bb062aceec75f3f566827ac"}, "downloads": -1, "filename": "scikit_surgeryspeech-0.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9e40fdf013b2f93055ea82cba7bcaeaa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16120, "upload_time": "2019-09-18T08:43:21", "upload_time_iso_8601": "2019-09-18T08:43:21.362777Z", "url": "https://files.pythonhosted.org/packages/f1/cf/8b5de7c55a8117c548bbddcfe6bb8c7547f80b9fe7d43db22e96c5fb0bb4/scikit_surgeryspeech-0.0.7-py2.py3-none-any.whl", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "e8f69c57cdd12ea8630f129eb9f113c4", "sha256": "6efe780a072d0e8c6cb392955eeb35987ca4cceb105608763c9b3bbe5a84bd1b"}, "downloads": -1, "filename": "scikit_surgeryspeech-0.0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e8f69c57cdd12ea8630f129eb9f113c4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16147, "upload_time": "2019-09-20T19:01:07", "upload_time_iso_8601": "2019-09-20T19:01:07.219260Z", "url": "https://files.pythonhosted.org/packages/39/e0/8e5f87d97e0431aab79e547b897ccc559efbcee9008bd74e3adc65e29045/scikit_surgeryspeech-0.0.8-py2.py3-none-any.whl", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "165e9106a858e0fcf6d438247ec86987", "sha256": "daa368056dfa2522c289b7c5025723ee66e8d298d5c95cfb573407f090940039"}, "downloads": -1, "filename": "scikit_surgeryspeech-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "165e9106a858e0fcf6d438247ec86987", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16408, "upload_time": "2020-03-26T17:36:47", "upload_time_iso_8601": "2020-03-26T17:36:47.548219Z", "url": "https://files.pythonhosted.org/packages/ff/57/c0782b93eb8855e966bb396079fb6b755bfe0822f2812475cf3da4e3fca8/scikit_surgeryspeech-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "73fc14c4e4e26e1fa9aa1e20d22a17c6", "sha256": "7a96c3c05ab2ec1a01d620ac7ba733dd7a9413cb26db891be0f356e025f633cb"}, "downloads": -1, "filename": "scikit_surgeryspeech-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "73fc14c4e4e26e1fa9aa1e20d22a17c6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16315, "upload_time": "2020-03-27T13:19:47", "upload_time_iso_8601": "2020-03-27T13:19:47.418782Z", "url": "https://files.pythonhosted.org/packages/53/a7/8887415af684a5235ba09d9f8509652c40f6dfb8637ba9c61d42c980a2e2/scikit_surgeryspeech-0.2.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "73fc14c4e4e26e1fa9aa1e20d22a17c6", "sha256": "7a96c3c05ab2ec1a01d620ac7ba733dd7a9413cb26db891be0f356e025f633cb"}, "downloads": -1, "filename": "scikit_surgeryspeech-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "73fc14c4e4e26e1fa9aa1e20d22a17c6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16315, "upload_time": "2020-03-27T13:19:47", "upload_time_iso_8601": "2020-03-27T13:19:47.418782Z", "url": "https://files.pythonhosted.org/packages/53/a7/8887415af684a5235ba09d9f8509652c40f6dfb8637ba9c61d42c980a2e2/scikit_surgeryspeech-0.2.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:57:24 2020"}