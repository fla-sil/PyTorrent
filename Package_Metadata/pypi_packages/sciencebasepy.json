{"info": {"author": "USGS ScienceBase Development Team", "author_email": "sciencebase@usgs.gov", "bugtrack_url": null, "classifiers": ["License :: Public Domain", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "Python ScienceBase Utilities\n============================\nThis Python module provides some basic services for interacting with ScienceBase.  It requires the \"requests\"\nmodule to be installed, which can be found at\n[http://docs.python-requests.org/en/latest/](http://docs.python-requests.org/en/latest/).\nIf you get security errors also install requests[security]\n\nQuick Start\n-----------\nsciencebasepy can be installed with pip:\n\n    `pip install sciencebasepy`\n\nOtherwise, download the contents of this repository, and install the sciencebasepy libraries into \nyour python installation by running `python setup.py install`.  Example usage is contained \nin `demo.py`.\n\nModule Contents\n---------------\nThe SbSession class provides the following methods:\n\n### Login\n* `login(username, password)`\nLog into ScienceBase using the username and password.  This causes a cookie to be added to the session\nto be used by subsequent calls.\n\n* `loginc(username)`\nLog into ScienceBase using the given username, and prompt for the password.  The password is not\nechoed to the console.  Provided as a convenience for interactive scripts.\n\n* `is_logged_in()`\nReturn whether the SbSession is logged in and active in ScienceBase\n\n* `get_session_info()`\nReturn ScienceBase Josso session info\n\n* `ping()`\nPing ScienceBase.  A very low-cost operation to determine whether ScienceBase is available.\n\n* `logout()`\nLog out of ScienceBase\n\n### Create\nNote: When uploading associated files, such as the various files making up a shapefile, or a \nraster and its associated SLD, be sure to upload them with a single call to \n`upload_files_and_create_item`. Otherwise, ScienceBase will not create the appropriate facets, \nand services will not be created.\n\n* `create_item(sb_json)`\nCreate a new ScienceBase item.  Documentation on the sb_json format can be found at\nhttps://my.usgs.gov/confluence/display/sciencebase/ScienceBase+Item+Core+Model\n\n* `create_items(sb_json)`\nCreate multiple new Items in ScienceBase. sb_json: JSON list representing the ScienceBase Catalog items to create.\n\n* `create_hidden_property(item_id, sb_json)`\nCreate a new Hidden Property for a Sciencebase item : POST /catalog/item/<item_id>/hiddenProperties\nDocumentation of the json can be found at https://code.chs.usgs.gov/sciencebase/dev-docs/wikis/APIs/Catalog/Item-Hidden-Properties\n\n* `upload_file_and_create_item(parent_id, filename)`\nUpload a file and create a ScienceBase item. Add the parameter `scrape_file=False` to bypass ScienceBase metadata\nprocessing.\n\n* `upload_files_and_create_item(parent_id, [filename,...])`\nUpload a set of files and create a ScienceBase item. Add the parameter `scrape_file=False` to bypass ScienceBase\nmetadata processing.\n\n### Read\n* `get_item(id, params)`\nGet the JSON for the ScienceBase item with the given ID.  \nparams argument is optional and allows you to specify query params, so params={'fields':'title,ancestors'} is for ?fields=title,ancestors \nsimilar to find_items.\n\n* `get_my_items_id()`\nGet the ID of the logged in user's \"My Items\"\n\n* `get_hidden_properties(item_id)`\nList All Hidden Properties for a given Item: GET /catalog/item/<item_id>/hiddenProperties\n\n* `get_hidden_property(item_id, hiddenpropertyid)`\nGet a specific Hidden Property for a given Item : GET /catalog/item/<item_id>/hiddenProperties/<ID>\n\n* `get_item_ids_by_hidden_property(hidden_property)`\nGet the ScienceBase IDs of Items associated with the given hidden property. Hidden property JSON\n(for the hidden_property parameter) contains two fields, \"type\" and \"value\" both of which are\noptional.\n\n* `get_child_ids(parent_id)`\nGet the IDs of all immediate children of the ScienceBase item with the given ID (does not follow shortcuts).\n\n* `get_ancestor_ids(parent_id)`\nGet IDs of all descendants of given item excluding those which are linked in (short-cutted). \n(That is, this finds items by ancestorsExcludingLinks=<parent_id> and builds a list of their IDs).\n\n* `get(url)`\nGet the text response of the given URL.\n\n* `get_json(url)`\nGet the JSON response of the given URL.\n\n* `get_item_files_zip(sb_json, destination)`\nGet a zip of all files attached to the ScienceBase item and place it in the destination\nfolder.  Destination defaults to the current directory.  If specified, the destination folder\nmust exist.  This creates the zip file server-side and then streams it to the client.\n\n* `get_item_files(sb_json, destination)`\nDownload all files attached to the ScienceBase item and place them in the destination folder.\nDestination defaults to the current directory.  If specified, the destination folder must\nexist.  The files are streamed individually.\n\n* `get_item_file_info(sb_json)`\nGet information about all files attached to a ScienceBase item.  Returns a list of\ndictionaries containing url, name and size of each file.\n\n* `download_file(url, local_filename, destination)`\nDownload an individual file.  Destination defaults to the current directory.  If specified,\nthe destination folder must exist.\n\n### Update\nNote: When uploading associated files, such as the various files making up a shapefile, or a \nraster and its associated SLD, be sure to upload them with a single call to one of the `upload_files*` methods.\nOtherwise, ScienceBase will not create the appropriate facets, and services will not be created.\n\n* `update_item(sb_json)`\nUpdates an existing ScienceBase item.\n\n* `update_items(sb_json)`\nUpdate multiple Items in ScienceBase. sb_json: JSON list representing the ScienceBase Catalog items to update.\n\n* `update_hidden_property(item_id, hiddenpropertyid, sb_json)`\nUpdates an existing ScienceBase Item's Hidden Property.\n\n* `upload_file_to_item(sb_json, filename)`\nUpload a file to an existing ScienceBase item. Add the parameter `scrape_file=False` to bypass ScienceBase \nmetadata processing.\n\n* `upload_files_and_update_item(item, [filename,...])`\nUpload a set of files and update an existing ScienceBase item. Add the parameter `scrape_file=False` to bypass\nScienceBase metadata processing.\n\n* `upload_files_and_upsert_item(item, [filename,...])`\nUpload multiple files and create or update a ScienceBase item. Add the parameter `scrape_file=False` to bypass\nScienceBase metadata processing.\n\n* `replace_file(filename, item)`\nReplace a file on a ScienceBase Item.  This method will replace all files named the same as the new file,\nwhether they are in the files list or in a facet.\n\n* `upload_file(filename, mimetype)`\n(Advanced usage) Upload a file to ScienceBase.  The file will be staged in a temporary area.  In order\nto attach it to an Item, the pathOnDisk must be added to an Item files entry, or one of a facet's file entries.\n\n* `add_extent(item_id, feature_geojson)`\nAdd features to the item footprint from Feature or FeatureCollection geojson.\n\n### Item Permissions\n* `get_permissions(item_id)`\nGet permission JSON for the item identified by item_id.\n\n* `set_permissions(item_id, acls)`\nSet permissions for the item identified by item_id. WARNING: Advanced use only. ACL JSON must be created properly. \nUse one of the ACL helper methods if possible (below).\n\n* `add_acl_user_read(user_name, item_id)`\nAdd a READ ACL for the given user on the specified item.\n\n* `remove_acl_user_read(user_name, item_id)`\nRemove the READ ACL for the given user on the specified item.\n\n* `add_acl_user_write(user_name, item_id)`\nAdd a WRITE ACL for the given user on the specified item.\n\n* `remove_acl_user_write(user_name, item_id)`\nRemove a WRITE ACL for the given user on the specified item.\n\n* `add_acl_role_read(role_name, item_id)`\nAdd a READ ACL for the given role on the specified item.\n\n* `remove_acl_role_read(role_name, item_id)`\nRemove a READ ACL for the given role on the specified item.\n\n* `add_acl_role_write(role_name, item_id)`\nAdd a WRITE ACL for the given role on the specified item.\n\n* `remove_acl_role_write(role_name, item_id)`\nRemove a WRITE ACL for the given role on the specified item.\n\n* `set_acls_inherit(read_write, item_id)`\nSet the item to inherit ACLs from its parent item.\n\n* `set_acls_inherit_read(item_id)`\nSet the item to inherit READ ACLs from its parent item.\n\n* `set_acls_inherit_write(item_id)`\nSet the item to inherit WRITE ACLs from its parent item.\n\n* `publish_item(item_id)`\nPublish the item, adding PUBLIC read permisisons. User must be USGS or in the publisher role.\n\n* `unpublish_item(item_id)`\nUnpublish the item, removing PUBLIC read permisisons.\n\n* `has_public_read(acls)`\nReturn whether the given ACLs include public READ permissions.\n\n* `print_acls(acls)`\nPretty print the given ACL JSON.\n\n### Delete\n* `delete_item(sb_json)`\nDelete an existing ScienceBase item.\n\n* `delete_items(item_ids)`\nDelete multiple ScienceBase Items.  This is much more efficient than using delete_item() for multiple deletions, as it\nperforms the action server-side in one call to ScienceBase.\n\n* `delete_hidden_property(item_id, hiddenpropertyid)`\nDelete an existing Item's specific Hidden Property item.\n\n* `undelete_item(item_id)`\nUndelete a ScienceBase item.\n\n### Move\n* `move_item(item_id, parent_id)`\nMove the ScienceBase Item with the given item_id under the ScienceBase Item with the given parent_id.\n\n* `move_items(item_ids, parent_id)`\nMove all of the ScienceBase Items with the given item_ids under the ScienceBase Item with the given parent_id.\n\n### Search\nFor more in-depth search examples, see the `Searching ScienceBase with sciencebasepy.ipynb` notebook in this repo.\n\n* `find_items_by_any_text(text)`\nFind items containing the given text somewhere in the item.\n\n* `find_items_by_title(text)`\nFind items containing the given text in the title of the item.\n\n* `find_items(params)`\nFind items meeting the criteria in the specified search parameters.  These are the same parameters that you pass\nto ScienceBase in an advanced search.\n\n* `find_hidden_property(hidden_property)`\nFind ScienceBase Items by hidden property value. hidden_property: ScienceBase Item Hidden Property JSON: \n`{\"type\": ..., \"value\": ...}`. Returns Item Hidden Property JSON containing the first page of matching \nScienceBase Items. Use the next() method for subsequent pages.\n\n* `find_items_by_filter_and_hidden_property(params, hidden_property)`\nFind items meeting the criteria in the specified search parameters and hidden property JSON. Hidden property JSON contains\ntwo fields, \"type\" and \"value\" both of which are optional. **Warning**: Because of the way hidden property results must be \njoined to ScienceBase Catalog search results, this method returns all matching items. Queries returning too many items may \nbe blocked by ScienceBase.\n\n* `next(items)`\nGet the next page of results, where *items* is the current search results.\n\n* `previous(items)`\nGet the previous page of results, where *items* is the current search results.\n\n### Shortcuts\n* `get_shortcut_ids(item_id)`\nGet the IDs of all ScienceBase Items shortcutted from a given item.\n\n* `create_shortcut(item_id, parent_id)`\nCreate a shortcut on the ScienceBase Item with the id parent_id to another Item with id item_id.\n\n* `remove_shortcut(item_id, parent_id)`\nRemove a shortcut from the ScienceBase Item with the id parent_id to another Item with id item_id.\n\n### Relationships (ItemLinks)\n* `get_item_link_types()`\nGet ItemLink type JSON list from the vocabulary server.\n\n* `get_item_link_type_by_name(link_type_name)`\nGet ItemLink type JSON object from the vocabulary server for the given type.\n\n* `get_item_links(item_id)`\nGet ItemLink (relationship) JSON describing relationships involving the Item with the given ID.\n\n* `create_item_link(from_item_id, to_item_id, link_type_id, reverse=False)`\nCreate an ItemLink between the two items of the specified type.\n\n* `create_related_item_link(from_item_id, to_item_id)`\nCreate a 'related' ItemLink between the two items.\n\n### Helpers\n* `get_directory_contact(party_id)`\nGet the Directory Contact JSON for the contact with the given party ID.\n\n* `get_sbcontact_from_directory_contact(directory_contact, sbcontact_type)`\nConvert the given Directory Contact JSON into valid ScienceBase Item contact JSON.\n\nExample Usage\n-------------\n\n````python\n    import sciencebasepy\n    import os\n\n    sb = sciencebasepy.SbSession()\n\n    # Get a public item.  No need to log in.\n    item_json = sb.get_item('505bc673e4b08c986b32bf81')\n    print \"Public Item: \" + str(item_json)\n\n    # Get a private item.  Need to log in first.\n    username = raw_input(\"Username:  \")\n    sb.loginc(str(username))\n    # Need to wait a bit after the login or errors can occur\n    time.sleep(5)\n    item_json = sb.get_item(sb.get_my_items_id())\n    print \"My Items: \" + str(item_json)\n\n    # Create a new item.  The minimum required is a title for the new item, and the parent ID\n    new_item = {'title': 'This is a new test item',\n        'parentId': sb.get_my_items_id(),\n        'provenance': {'annotation': 'Python ScienceBase REST test script'}}\n    new_item = sb.create_item(new_item)\n    print \"NEW ITEM: \" + str(new_item)\n\n    # Upload a file to the newly created item\n    new_item = sb.upload_file_to_item(new_item, 'sciencebasepy.py')\n    print \"FILE UPDATE: \" + str(new_item)\n\n    # List file info from the newly created item\n    ret = sb.get_item_file_info(new_item)\n    for fileinfo in ret:\n        print \"File \" + fileinfo[\"name\"] + \", \" + str(fileinfo[\"size\"]) + \"bytes, download URL \" + fileinfo[\"url\"]\n\n    # Download zip of files from the newly created item\n    ret = sb.get_item_files_zip(new_item)\n    print \"Downloaded zip file \" + str(ret)\n\n    # Download all files attached to the item as individual files, and place them in the\n    # tmp directory under the current directory.\n    path = \"./tmp\"\n    if not os.path.exists(path):\n        os.makedirs(path)\n    ret = sb.get_item_files(new_item, path)\n    print \"Downloaded files \" + str(ret)\n\n    # Delete the newly created item\n    ret = sb.delete_item(new_item)\n    print \"DELETE: \" + str(ret)\n\n    # Upload multiple files to create a new item\n    ret = sb.upload_files_and_create_item(sb.get_my_items_id(), ['sciencebasepy.py','readme.md'])\n    print str(ret)\n\n    # Search\n    items = sb.find_items_by_any_text(username)\n    while items and 'items' in items:\n        for item in items['items']:\n            print item['title']\n        items = sb.next(items)\n\n    # Logout\n    sb.logout()\n````\n\n# Developer Notes\n\nTo publish to pypi, follow the instructions [here](https://packaging.python.org/tutorials/packaging-projects/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/usgs/sciencebasepy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sciencebasepy", "package_url": "https://pypi.org/project/sciencebasepy/", "platform": "", "project_url": "https://pypi.org/project/sciencebasepy/", "project_urls": {"Homepage": "https://github.com/usgs/sciencebasepy"}, "release_url": "https://pypi.org/project/sciencebasepy/1.6.9/", "requires_dist": ["requests"], "requires_python": "", "summary": "Python ScienceBase Utilities", "version": "1.6.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python ScienceBase Utilities</h1>\n<p>This Python module provides some basic services for interacting with ScienceBase.  It requires the \"requests\"\nmodule to be installed, which can be found at\n<a href=\"http://docs.python-requests.org/en/latest/\" rel=\"nofollow\">http://docs.python-requests.org/en/latest/</a>.\nIf you get security errors also install requests[security]</p>\n<h2>Quick Start</h2>\n<p>sciencebasepy can be installed with pip:</p>\n<pre><code>`pip install sciencebasepy`\n</code></pre>\n<p>Otherwise, download the contents of this repository, and install the sciencebasepy libraries into\nyour python installation by running <code>python setup.py install</code>.  Example usage is contained\nin <code>demo.py</code>.</p>\n<h2>Module Contents</h2>\n<p>The SbSession class provides the following methods:</p>\n<h3>Login</h3>\n<ul>\n<li>\n<p><code>login(username, password)</code>\nLog into ScienceBase using the username and password.  This causes a cookie to be added to the session\nto be used by subsequent calls.</p>\n</li>\n<li>\n<p><code>loginc(username)</code>\nLog into ScienceBase using the given username, and prompt for the password.  The password is not\nechoed to the console.  Provided as a convenience for interactive scripts.</p>\n</li>\n<li>\n<p><code>is_logged_in()</code>\nReturn whether the SbSession is logged in and active in ScienceBase</p>\n</li>\n<li>\n<p><code>get_session_info()</code>\nReturn ScienceBase Josso session info</p>\n</li>\n<li>\n<p><code>ping()</code>\nPing ScienceBase.  A very low-cost operation to determine whether ScienceBase is available.</p>\n</li>\n<li>\n<p><code>logout()</code>\nLog out of ScienceBase</p>\n</li>\n</ul>\n<h3>Create</h3>\n<p>Note: When uploading associated files, such as the various files making up a shapefile, or a\nraster and its associated SLD, be sure to upload them with a single call to\n<code>upload_files_and_create_item</code>. Otherwise, ScienceBase will not create the appropriate facets,\nand services will not be created.</p>\n<ul>\n<li>\n<p><code>create_item(sb_json)</code>\nCreate a new ScienceBase item.  Documentation on the sb_json format can be found at\n<a href=\"https://my.usgs.gov/confluence/display/sciencebase/ScienceBase+Item+Core+Model\" rel=\"nofollow\">https://my.usgs.gov/confluence/display/sciencebase/ScienceBase+Item+Core+Model</a></p>\n</li>\n<li>\n<p><code>create_items(sb_json)</code>\nCreate multiple new Items in ScienceBase. sb_json: JSON list representing the ScienceBase Catalog items to create.</p>\n</li>\n<li>\n<p><code>create_hidden_property(item_id, sb_json)</code>\nCreate a new Hidden Property for a Sciencebase item : POST /catalog/item/&lt;item_id&gt;/hiddenProperties\nDocumentation of the json can be found at <a href=\"https://code.chs.usgs.gov/sciencebase/dev-docs/wikis/APIs/Catalog/Item-Hidden-Properties\" rel=\"nofollow\">https://code.chs.usgs.gov/sciencebase/dev-docs/wikis/APIs/Catalog/Item-Hidden-Properties</a></p>\n</li>\n<li>\n<p><code>upload_file_and_create_item(parent_id, filename)</code>\nUpload a file and create a ScienceBase item. Add the parameter <code>scrape_file=False</code> to bypass ScienceBase metadata\nprocessing.</p>\n</li>\n<li>\n<p><code>upload_files_and_create_item(parent_id, [filename,...])</code>\nUpload a set of files and create a ScienceBase item. Add the parameter <code>scrape_file=False</code> to bypass ScienceBase\nmetadata processing.</p>\n</li>\n</ul>\n<h3>Read</h3>\n<ul>\n<li>\n<p><code>get_item(id, params)</code>\nGet the JSON for the ScienceBase item with the given ID.<br>\nparams argument is optional and allows you to specify query params, so params={'fields':'title,ancestors'} is for ?fields=title,ancestors\nsimilar to find_items.</p>\n</li>\n<li>\n<p><code>get_my_items_id()</code>\nGet the ID of the logged in user's \"My Items\"</p>\n</li>\n<li>\n<p><code>get_hidden_properties(item_id)</code>\nList All Hidden Properties for a given Item: GET /catalog/item/&lt;item_id&gt;/hiddenProperties</p>\n</li>\n<li>\n<p><code>get_hidden_property(item_id, hiddenpropertyid)</code>\nGet a specific Hidden Property for a given Item : GET /catalog/item/&lt;item_id&gt;/hiddenProperties/&lt;ID&gt;</p>\n</li>\n<li>\n<p><code>get_item_ids_by_hidden_property(hidden_property)</code>\nGet the ScienceBase IDs of Items associated with the given hidden property. Hidden property JSON\n(for the hidden_property parameter) contains two fields, \"type\" and \"value\" both of which are\noptional.</p>\n</li>\n<li>\n<p><code>get_child_ids(parent_id)</code>\nGet the IDs of all immediate children of the ScienceBase item with the given ID (does not follow shortcuts).</p>\n</li>\n<li>\n<p><code>get_ancestor_ids(parent_id)</code>\nGet IDs of all descendants of given item excluding those which are linked in (short-cutted).\n(That is, this finds items by ancestorsExcludingLinks=&lt;parent_id&gt; and builds a list of their IDs).</p>\n</li>\n<li>\n<p><code>get(url)</code>\nGet the text response of the given URL.</p>\n</li>\n<li>\n<p><code>get_json(url)</code>\nGet the JSON response of the given URL.</p>\n</li>\n<li>\n<p><code>get_item_files_zip(sb_json, destination)</code>\nGet a zip of all files attached to the ScienceBase item and place it in the destination\nfolder.  Destination defaults to the current directory.  If specified, the destination folder\nmust exist.  This creates the zip file server-side and then streams it to the client.</p>\n</li>\n<li>\n<p><code>get_item_files(sb_json, destination)</code>\nDownload all files attached to the ScienceBase item and place them in the destination folder.\nDestination defaults to the current directory.  If specified, the destination folder must\nexist.  The files are streamed individually.</p>\n</li>\n<li>\n<p><code>get_item_file_info(sb_json)</code>\nGet information about all files attached to a ScienceBase item.  Returns a list of\ndictionaries containing url, name and size of each file.</p>\n</li>\n<li>\n<p><code>download_file(url, local_filename, destination)</code>\nDownload an individual file.  Destination defaults to the current directory.  If specified,\nthe destination folder must exist.</p>\n</li>\n</ul>\n<h3>Update</h3>\n<p>Note: When uploading associated files, such as the various files making up a shapefile, or a\nraster and its associated SLD, be sure to upload them with a single call to one of the <code>upload_files*</code> methods.\nOtherwise, ScienceBase will not create the appropriate facets, and services will not be created.</p>\n<ul>\n<li>\n<p><code>update_item(sb_json)</code>\nUpdates an existing ScienceBase item.</p>\n</li>\n<li>\n<p><code>update_items(sb_json)</code>\nUpdate multiple Items in ScienceBase. sb_json: JSON list representing the ScienceBase Catalog items to update.</p>\n</li>\n<li>\n<p><code>update_hidden_property(item_id, hiddenpropertyid, sb_json)</code>\nUpdates an existing ScienceBase Item's Hidden Property.</p>\n</li>\n<li>\n<p><code>upload_file_to_item(sb_json, filename)</code>\nUpload a file to an existing ScienceBase item. Add the parameter <code>scrape_file=False</code> to bypass ScienceBase\nmetadata processing.</p>\n</li>\n<li>\n<p><code>upload_files_and_update_item(item, [filename,...])</code>\nUpload a set of files and update an existing ScienceBase item. Add the parameter <code>scrape_file=False</code> to bypass\nScienceBase metadata processing.</p>\n</li>\n<li>\n<p><code>upload_files_and_upsert_item(item, [filename,...])</code>\nUpload multiple files and create or update a ScienceBase item. Add the parameter <code>scrape_file=False</code> to bypass\nScienceBase metadata processing.</p>\n</li>\n<li>\n<p><code>replace_file(filename, item)</code>\nReplace a file on a ScienceBase Item.  This method will replace all files named the same as the new file,\nwhether they are in the files list or in a facet.</p>\n</li>\n<li>\n<p><code>upload_file(filename, mimetype)</code>\n(Advanced usage) Upload a file to ScienceBase.  The file will be staged in a temporary area.  In order\nto attach it to an Item, the pathOnDisk must be added to an Item files entry, or one of a facet's file entries.</p>\n</li>\n<li>\n<p><code>add_extent(item_id, feature_geojson)</code>\nAdd features to the item footprint from Feature or FeatureCollection geojson.</p>\n</li>\n</ul>\n<h3>Item Permissions</h3>\n<ul>\n<li>\n<p><code>get_permissions(item_id)</code>\nGet permission JSON for the item identified by item_id.</p>\n</li>\n<li>\n<p><code>set_permissions(item_id, acls)</code>\nSet permissions for the item identified by item_id. WARNING: Advanced use only. ACL JSON must be created properly.\nUse one of the ACL helper methods if possible (below).</p>\n</li>\n<li>\n<p><code>add_acl_user_read(user_name, item_id)</code>\nAdd a READ ACL for the given user on the specified item.</p>\n</li>\n<li>\n<p><code>remove_acl_user_read(user_name, item_id)</code>\nRemove the READ ACL for the given user on the specified item.</p>\n</li>\n<li>\n<p><code>add_acl_user_write(user_name, item_id)</code>\nAdd a WRITE ACL for the given user on the specified item.</p>\n</li>\n<li>\n<p><code>remove_acl_user_write(user_name, item_id)</code>\nRemove a WRITE ACL for the given user on the specified item.</p>\n</li>\n<li>\n<p><code>add_acl_role_read(role_name, item_id)</code>\nAdd a READ ACL for the given role on the specified item.</p>\n</li>\n<li>\n<p><code>remove_acl_role_read(role_name, item_id)</code>\nRemove a READ ACL for the given role on the specified item.</p>\n</li>\n<li>\n<p><code>add_acl_role_write(role_name, item_id)</code>\nAdd a WRITE ACL for the given role on the specified item.</p>\n</li>\n<li>\n<p><code>remove_acl_role_write(role_name, item_id)</code>\nRemove a WRITE ACL for the given role on the specified item.</p>\n</li>\n<li>\n<p><code>set_acls_inherit(read_write, item_id)</code>\nSet the item to inherit ACLs from its parent item.</p>\n</li>\n<li>\n<p><code>set_acls_inherit_read(item_id)</code>\nSet the item to inherit READ ACLs from its parent item.</p>\n</li>\n<li>\n<p><code>set_acls_inherit_write(item_id)</code>\nSet the item to inherit WRITE ACLs from its parent item.</p>\n</li>\n<li>\n<p><code>publish_item(item_id)</code>\nPublish the item, adding PUBLIC read permisisons. User must be USGS or in the publisher role.</p>\n</li>\n<li>\n<p><code>unpublish_item(item_id)</code>\nUnpublish the item, removing PUBLIC read permisisons.</p>\n</li>\n<li>\n<p><code>has_public_read(acls)</code>\nReturn whether the given ACLs include public READ permissions.</p>\n</li>\n<li>\n<p><code>print_acls(acls)</code>\nPretty print the given ACL JSON.</p>\n</li>\n</ul>\n<h3>Delete</h3>\n<ul>\n<li>\n<p><code>delete_item(sb_json)</code>\nDelete an existing ScienceBase item.</p>\n</li>\n<li>\n<p><code>delete_items(item_ids)</code>\nDelete multiple ScienceBase Items.  This is much more efficient than using delete_item() for multiple deletions, as it\nperforms the action server-side in one call to ScienceBase.</p>\n</li>\n<li>\n<p><code>delete_hidden_property(item_id, hiddenpropertyid)</code>\nDelete an existing Item's specific Hidden Property item.</p>\n</li>\n<li>\n<p><code>undelete_item(item_id)</code>\nUndelete a ScienceBase item.</p>\n</li>\n</ul>\n<h3>Move</h3>\n<ul>\n<li>\n<p><code>move_item(item_id, parent_id)</code>\nMove the ScienceBase Item with the given item_id under the ScienceBase Item with the given parent_id.</p>\n</li>\n<li>\n<p><code>move_items(item_ids, parent_id)</code>\nMove all of the ScienceBase Items with the given item_ids under the ScienceBase Item with the given parent_id.</p>\n</li>\n</ul>\n<h3>Search</h3>\n<p>For more in-depth search examples, see the <code>Searching ScienceBase with sciencebasepy.ipynb</code> notebook in this repo.</p>\n<ul>\n<li>\n<p><code>find_items_by_any_text(text)</code>\nFind items containing the given text somewhere in the item.</p>\n</li>\n<li>\n<p><code>find_items_by_title(text)</code>\nFind items containing the given text in the title of the item.</p>\n</li>\n<li>\n<p><code>find_items(params)</code>\nFind items meeting the criteria in the specified search parameters.  These are the same parameters that you pass\nto ScienceBase in an advanced search.</p>\n</li>\n<li>\n<p><code>find_hidden_property(hidden_property)</code>\nFind ScienceBase Items by hidden property value. hidden_property: ScienceBase Item Hidden Property JSON:\n<code>{\"type\": ..., \"value\": ...}</code>. Returns Item Hidden Property JSON containing the first page of matching\nScienceBase Items. Use the next() method for subsequent pages.</p>\n</li>\n<li>\n<p><code>find_items_by_filter_and_hidden_property(params, hidden_property)</code>\nFind items meeting the criteria in the specified search parameters and hidden property JSON. Hidden property JSON contains\ntwo fields, \"type\" and \"value\" both of which are optional. <strong>Warning</strong>: Because of the way hidden property results must be\njoined to ScienceBase Catalog search results, this method returns all matching items. Queries returning too many items may\nbe blocked by ScienceBase.</p>\n</li>\n<li>\n<p><code>next(items)</code>\nGet the next page of results, where <em>items</em> is the current search results.</p>\n</li>\n<li>\n<p><code>previous(items)</code>\nGet the previous page of results, where <em>items</em> is the current search results.</p>\n</li>\n</ul>\n<h3>Shortcuts</h3>\n<ul>\n<li>\n<p><code>get_shortcut_ids(item_id)</code>\nGet the IDs of all ScienceBase Items shortcutted from a given item.</p>\n</li>\n<li>\n<p><code>create_shortcut(item_id, parent_id)</code>\nCreate a shortcut on the ScienceBase Item with the id parent_id to another Item with id item_id.</p>\n</li>\n<li>\n<p><code>remove_shortcut(item_id, parent_id)</code>\nRemove a shortcut from the ScienceBase Item with the id parent_id to another Item with id item_id.</p>\n</li>\n</ul>\n<h3>Relationships (ItemLinks)</h3>\n<ul>\n<li>\n<p><code>get_item_link_types()</code>\nGet ItemLink type JSON list from the vocabulary server.</p>\n</li>\n<li>\n<p><code>get_item_link_type_by_name(link_type_name)</code>\nGet ItemLink type JSON object from the vocabulary server for the given type.</p>\n</li>\n<li>\n<p><code>get_item_links(item_id)</code>\nGet ItemLink (relationship) JSON describing relationships involving the Item with the given ID.</p>\n</li>\n<li>\n<p><code>create_item_link(from_item_id, to_item_id, link_type_id, reverse=False)</code>\nCreate an ItemLink between the two items of the specified type.</p>\n</li>\n<li>\n<p><code>create_related_item_link(from_item_id, to_item_id)</code>\nCreate a 'related' ItemLink between the two items.</p>\n</li>\n</ul>\n<h3>Helpers</h3>\n<ul>\n<li>\n<p><code>get_directory_contact(party_id)</code>\nGet the Directory Contact JSON for the contact with the given party ID.</p>\n</li>\n<li>\n<p><code>get_sbcontact_from_directory_contact(directory_contact, sbcontact_type)</code>\nConvert the given Directory Contact JSON into valid ScienceBase Item contact JSON.</p>\n</li>\n</ul>\n<h2>Example Usage</h2>\n<pre>    <span class=\"kn\">import</span> <span class=\"nn\">sciencebasepy</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n    <span class=\"n\">sb</span> <span class=\"o\">=</span> <span class=\"n\">sciencebasepy</span><span class=\"o\">.</span><span class=\"n\">SbSession</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Get a public item.  No need to log in.</span>\n    <span class=\"n\">item_json</span> <span class=\"o\">=</span> <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">get_item</span><span class=\"p\">(</span><span class=\"s1\">'505bc673e4b08c986b32bf81'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"Public Item: \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">item_json</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Get a private item.  Need to log in first.</span>\n    <span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">raw_input</span><span class=\"p\">(</span><span class=\"s2\">\"Username:  \"</span><span class=\"p\">)</span>\n    <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">loginc</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">))</span>\n    <span class=\"c1\"># Need to wait a bit after the login or errors can occur</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"n\">item_json</span> <span class=\"o\">=</span> <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">get_item</span><span class=\"p\">(</span><span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">get_my_items_id</span><span class=\"p\">())</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"My Items: \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">item_json</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Create a new item.  The minimum required is a title for the new item, and the parent ID</span>\n    <span class=\"n\">new_item</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'This is a new test item'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'parentId'</span><span class=\"p\">:</span> <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">get_my_items_id</span><span class=\"p\">(),</span>\n        <span class=\"s1\">'provenance'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'annotation'</span><span class=\"p\">:</span> <span class=\"s1\">'Python ScienceBase REST test script'</span><span class=\"p\">}}</span>\n    <span class=\"n\">new_item</span> <span class=\"o\">=</span> <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">create_item</span><span class=\"p\">(</span><span class=\"n\">new_item</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"NEW ITEM: \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">new_item</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Upload a file to the newly created item</span>\n    <span class=\"n\">new_item</span> <span class=\"o\">=</span> <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">upload_file_to_item</span><span class=\"p\">(</span><span class=\"n\">new_item</span><span class=\"p\">,</span> <span class=\"s1\">'sciencebasepy.py'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"FILE UPDATE: \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">new_item</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># List file info from the newly created item</span>\n    <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">get_item_file_info</span><span class=\"p\">(</span><span class=\"n\">new_item</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">fileinfo</span> <span class=\"ow\">in</span> <span class=\"n\">ret</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span> <span class=\"s2\">\"File \"</span> <span class=\"o\">+</span> <span class=\"n\">fileinfo</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">\", \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">fileinfo</span><span class=\"p\">[</span><span class=\"s2\">\"size\"</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"s2\">\"bytes, download URL \"</span> <span class=\"o\">+</span> <span class=\"n\">fileinfo</span><span class=\"p\">[</span><span class=\"s2\">\"url\"</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># Download zip of files from the newly created item</span>\n    <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">get_item_files_zip</span><span class=\"p\">(</span><span class=\"n\">new_item</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"Downloaded zip file \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Download all files attached to the item as individual files, and place them in the</span>\n    <span class=\"c1\"># tmp directory under the current directory.</span>\n    <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"s2\">\"./tmp\"</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n    <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">get_item_files</span><span class=\"p\">(</span><span class=\"n\">new_item</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"Downloaded files \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Delete the newly created item</span>\n    <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">delete_item</span><span class=\"p\">(</span><span class=\"n\">new_item</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"DELETE: \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Upload multiple files to create a new item</span>\n    <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">upload_files_and_create_item</span><span class=\"p\">(</span><span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">get_my_items_id</span><span class=\"p\">(),</span> <span class=\"p\">[</span><span class=\"s1\">'sciencebasepy.py'</span><span class=\"p\">,</span><span class=\"s1\">'readme.md'</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Search</span>\n    <span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">find_items_by_any_text</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">)</span>\n    <span class=\"k\">while</span> <span class=\"n\">items</span> <span class=\"ow\">and</span> <span class=\"s1\">'items'</span> <span class=\"ow\">in</span> <span class=\"n\">items</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">items</span><span class=\"p\">[</span><span class=\"s1\">'items'</span><span class=\"p\">]:</span>\n            <span class=\"nb\">print</span> <span class=\"n\">item</span><span class=\"p\">[</span><span class=\"s1\">'title'</span><span class=\"p\">]</span>\n        <span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">(</span><span class=\"n\">items</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Logout</span>\n    <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"n\">logout</span><span class=\"p\">()</span>\n</pre>\n<h1>Developer Notes</h1>\n<p>To publish to pypi, follow the instructions <a href=\"https://packaging.python.org/tutorials/packaging-projects/\" rel=\"nofollow\">here</a></p>\n\n          </div>"}, "last_serial": 6705497, "releases": {"1.6.1": [{"comment_text": "", "digests": {"md5": "b536dc9680f8b8f07c3b3ba543173986", "sha256": "f5c38b914b09163fb9bd9335466634cba7b54b44323bfbfc4b780811318ba53d"}, "downloads": -1, "filename": "sciencebasepy-1.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b536dc9680f8b8f07c3b3ba543173986", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27230, "upload_time": "2018-08-16T16:19:23", "upload_time_iso_8601": "2018-08-16T16:19:23.966356Z", "url": "https://files.pythonhosted.org/packages/7d/94/8819e7e6acb9882a39637a49ac86dc9e8c46874790d1be12cda020527961/sciencebasepy-1.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a620dad03cc9466844963f92f4f8e8e", "sha256": "0da895e96e2ab9b2fbd0a932c5741e8f549868ca3ad61e0d2249ae7f002989e0"}, "downloads": -1, "filename": "sciencebasepy-1.6.1.tar.gz", "has_sig": false, "md5_digest": "1a620dad03cc9466844963f92f4f8e8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18432, "upload_time": "2018-08-16T16:19:25", "upload_time_iso_8601": "2018-08-16T16:19:25.503027Z", "url": "https://files.pythonhosted.org/packages/5b/5e/d3e698c2d8cb8da25641d1b8fa3cf18fce9a337c2893fd68fdf8d590d577/sciencebasepy-1.6.1.tar.gz", "yanked": false}], "1.6.2": [{"comment_text": "", "digests": {"md5": "2274cd3bfbc4de3587e4ed5a0beef4d8", "sha256": "12238347f6496873f50a4760ea0dfeeba96a235b7a5ec8ff884bb0c08ef4e0f7"}, "downloads": -1, "filename": "sciencebasepy-1.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2274cd3bfbc4de3587e4ed5a0beef4d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15033, "upload_time": "2018-08-29T21:17:09", "upload_time_iso_8601": "2018-08-29T21:17:09.133469Z", "url": "https://files.pythonhosted.org/packages/6d/d5/300cbaec486e4db4ce9a5fe797a5002c31cf2d90730e2500e1756cf6c91a/sciencebasepy-1.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a3a98aac4eb89d890ec61edad6f7861", "sha256": "a343321151a4131cb4137e6682285e0506a9d00b3cae68c34bfc7c523b49188c"}, "downloads": -1, "filename": "sciencebasepy-1.6.2.tar.gz", "has_sig": false, "md5_digest": "7a3a98aac4eb89d890ec61edad6f7861", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18452, "upload_time": "2018-08-29T21:17:10", "upload_time_iso_8601": "2018-08-29T21:17:10.714647Z", "url": "https://files.pythonhosted.org/packages/7c/dc/8a0726176f222525b24cabaf0f8780c99e8c8f767e8e98682c12cda9c845/sciencebasepy-1.6.2.tar.gz", "yanked": false}], "1.6.3": [{"comment_text": "", "digests": {"md5": "93bc28b9def647017181447bddd948bf", "sha256": "635f6dcfc841f1a3ebbe64b73a32da96d26c887dd9db050e7a0ab1b25c1f9f54"}, "downloads": -1, "filename": "sciencebasepy-1.6.3-py3-none-any.whl", "has_sig": false, "md5_digest": "93bc28b9def647017181447bddd948bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15595, "upload_time": "2019-01-31T21:44:07", "upload_time_iso_8601": "2019-01-31T21:44:07.709271Z", "url": "https://files.pythonhosted.org/packages/11/dd/d4e7d70a703b9058b4de8a36e7eb6658e2b88bef74972e81a9f2ee0bac0f/sciencebasepy-1.6.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f574f309764f247cd120e8339e01634a", "sha256": "99cb70d670e62b9ac37656e9fc981741fcd34b2bcaf97c05b0beb880f116e86b"}, "downloads": -1, "filename": "sciencebasepy-1.6.3.tar.gz", "has_sig": false, "md5_digest": "f574f309764f247cd120e8339e01634a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18702, "upload_time": "2019-01-31T21:44:09", "upload_time_iso_8601": "2019-01-31T21:44:09.089858Z", "url": "https://files.pythonhosted.org/packages/5e/60/7a457dcd5102d4fb4568deaed724eaddb75231e27ba2ab9fcde5ab0d4394/sciencebasepy-1.6.3.tar.gz", "yanked": false}], "1.6.4": [{"comment_text": "", "digests": {"md5": "7cca3119b284d18aa033c02574308b50", "sha256": "e03f0e3db3869a4edfdc5cb7e04b24fae270e47a1f58b55c484612a6eb09088e"}, "downloads": -1, "filename": "sciencebasepy-1.6.4-py3-none-any.whl", "has_sig": false, "md5_digest": "7cca3119b284d18aa033c02574308b50", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16651, "upload_time": "2019-05-09T17:03:01", "upload_time_iso_8601": "2019-05-09T17:03:01.460027Z", "url": "https://files.pythonhosted.org/packages/8d/bb/8098ef0bb3ac7e0337eea3dd2d3c0e3864d070448d2e75d06d0c445b48c6/sciencebasepy-1.6.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e19efcce8208fcb49ecaa1e7d322e1f3", "sha256": "c58292907d52585e45a4be0b9da7ce10de228487d1ae7f8dea873cfad3a6ae50"}, "downloads": -1, "filename": "sciencebasepy-1.6.4.tar.gz", "has_sig": false, "md5_digest": "e19efcce8208fcb49ecaa1e7d322e1f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20040, "upload_time": "2019-05-09T17:03:02", "upload_time_iso_8601": "2019-05-09T17:03:02.992893Z", "url": "https://files.pythonhosted.org/packages/cc/c1/67dfa3b1406add35d60393acf460d7551b2f3915322064f7fec8b7385705/sciencebasepy-1.6.4.tar.gz", "yanked": false}], "1.6.5": [{"comment_text": "", "digests": {"md5": "95431f1e2eee782037d72ad670141b7b", "sha256": "760fc3f80c673d8888f1f68c5a0dd664216f3fc975adc996a36520f37a41c094"}, "downloads": -1, "filename": "sciencebasepy-1.6.5-py3-none-any.whl", "has_sig": false, "md5_digest": "95431f1e2eee782037d72ad670141b7b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16681, "upload_time": "2019-10-24T21:37:44", "upload_time_iso_8601": "2019-10-24T21:37:44.825733Z", "url": "https://files.pythonhosted.org/packages/87/0a/7ca25ce2d550a25d125c2242e7d8c33019ae283e331678e8b4a89a5fac12/sciencebasepy-1.6.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "762312e15ca865f609c4bcda5d1c7779", "sha256": "45900f330d720ac1e72cfa713ab6afc79d19326cbbf9437479c8f11320f0ee9c"}, "downloads": -1, "filename": "sciencebasepy-1.6.5.tar.gz", "has_sig": false, "md5_digest": "762312e15ca865f609c4bcda5d1c7779", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19254, "upload_time": "2019-10-24T21:37:46", "upload_time_iso_8601": "2019-10-24T21:37:46.770466Z", "url": "https://files.pythonhosted.org/packages/e0/54/03cbe1eb5691d6cb4f9a4281e3df5f6427c2b45fd97fc855e392ababdc2a/sciencebasepy-1.6.5.tar.gz", "yanked": false}], "1.6.6": [{"comment_text": "", "digests": {"md5": "07f0d88faf563edc6dba26f48aa6f177", "sha256": "1f5534d96fde8bf05cebc07887ef2c088b5aa9c3cdef57c8b34da7d3bc1af2e6"}, "downloads": -1, "filename": "sciencebasepy-1.6.6-py3-none-any.whl", "has_sig": false, "md5_digest": "07f0d88faf563edc6dba26f48aa6f177", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16695, "upload_time": "2019-12-19T19:22:59", "upload_time_iso_8601": "2019-12-19T19:22:59.270335Z", "url": "https://files.pythonhosted.org/packages/45/21/e14d99150cdf34bb5eb9505344430581e481293c5864e478990c3184f5e8/sciencebasepy-1.6.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ddef2f7cea58bf2c75d43212c618bfc", "sha256": "7a81e91b186519afda002b5d5c17e39d9d4fdccd8e97cb529de4d23b29d513b8"}, "downloads": -1, "filename": "sciencebasepy-1.6.6.tar.gz", "has_sig": false, "md5_digest": "8ddef2f7cea58bf2c75d43212c618bfc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18961, "upload_time": "2019-12-19T19:23:01", "upload_time_iso_8601": "2019-12-19T19:23:01.181244Z", "url": "https://files.pythonhosted.org/packages/3e/8b/961431c5bb53270f3743624a1f3c956952a0553ca5c6e8c6530693913a5c/sciencebasepy-1.6.6.tar.gz", "yanked": false}], "1.6.7": [{"comment_text": "", "digests": {"md5": "8f04cccb6219f973cead44fde3ad01d8", "sha256": "02d7a31157fc7bbaf4c5673918d679348980cafc29084d972920020b73dbe23e"}, "downloads": -1, "filename": "sciencebasepy-1.6.7-py3-none-any.whl", "has_sig": false, "md5_digest": "8f04cccb6219f973cead44fde3ad01d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16910, "upload_time": "2020-01-07T20:27:39", "upload_time_iso_8601": "2020-01-07T20:27:39.708178Z", "url": "https://files.pythonhosted.org/packages/1c/f8/fa93e1a03d6436794fad21a05345494672a92c085d0d9c466817ac7a220f/sciencebasepy-1.6.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88de1c76c69d197a59a8653e5f3860fc", "sha256": "7bc1dc2269e54e697830eeb3fc9313647b93f2e1dbcfe4bf1f0a7bbb702a4c45"}, "downloads": -1, "filename": "sciencebasepy-1.6.7.tar.gz", "has_sig": false, "md5_digest": "88de1c76c69d197a59a8653e5f3860fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19167, "upload_time": "2020-01-07T20:27:41", "upload_time_iso_8601": "2020-01-07T20:27:41.689807Z", "url": "https://files.pythonhosted.org/packages/3f/90/94f7897502796990be1b22f346dc0abe76675dcccef56b666fdc9b81a2ae/sciencebasepy-1.6.7.tar.gz", "yanked": false}], "1.6.8": [{"comment_text": "", "digests": {"md5": "b149264fafd084ff7950a6a599b41eae", "sha256": "d2c03a7e5ecd41dce5c04b98d7e64f74fd33a2c05d3cd8c845fdf90d3b56782d"}, "downloads": -1, "filename": "sciencebasepy-1.6.8-py3-none-any.whl", "has_sig": false, "md5_digest": "b149264fafd084ff7950a6a599b41eae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16899, "upload_time": "2020-01-08T16:42:58", "upload_time_iso_8601": "2020-01-08T16:42:58.166984Z", "url": "https://files.pythonhosted.org/packages/9b/c5/6386ac5171f81e727d0b383fd62ec7955bd45aab55cf00ed577a30c01e42/sciencebasepy-1.6.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b46af8a21400e2019a6e7710da339aef", "sha256": "13374930004d42cfac116c6e2ba4cf49699ccc435bc349a52ae18fdebf183b78"}, "downloads": -1, "filename": "sciencebasepy-1.6.8.tar.gz", "has_sig": false, "md5_digest": "b46af8a21400e2019a6e7710da339aef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19155, "upload_time": "2020-01-08T16:43:00", "upload_time_iso_8601": "2020-01-08T16:43:00.174439Z", "url": "https://files.pythonhosted.org/packages/ed/2b/71651ddd06246e76339373417079011b915edb9b4427fa829f2e3be27c49/sciencebasepy-1.6.8.tar.gz", "yanked": false}], "1.6.9": [{"comment_text": "", "digests": {"md5": "3f82991615f38ba0fbf51e67e03e745b", "sha256": "54986ee5a255b6ad0f1f1f5156f84e98ad67a49c6cd3bc9f462c87fc4b97750f"}, "downloads": -1, "filename": "sciencebasepy-1.6.9-py3-none-any.whl", "has_sig": false, "md5_digest": "3f82991615f38ba0fbf51e67e03e745b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16924, "upload_time": "2020-02-26T18:54:50", "upload_time_iso_8601": "2020-02-26T18:54:50.095894Z", "url": "https://files.pythonhosted.org/packages/1a/8b/3aead3f9d3fa3ea29fdb20b563772f82088c96e4522d9b1980871c862fde/sciencebasepy-1.6.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9dba40eb8225bdebb99e3d44e982fba6", "sha256": "9f0f0c43d1211d885220ff932821763f87712dd4cc79754272b17f5e413ecad5"}, "downloads": -1, "filename": "sciencebasepy-1.6.9.tar.gz", "has_sig": false, "md5_digest": "9dba40eb8225bdebb99e3d44e982fba6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19178, "upload_time": "2020-02-26T18:54:51", "upload_time_iso_8601": "2020-02-26T18:54:51.738055Z", "url": "https://files.pythonhosted.org/packages/2d/ca/63ed4f8d559a04f41cf76d9816054937569f1be21b488bb8bb2ab8abc9b1/sciencebasepy-1.6.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3f82991615f38ba0fbf51e67e03e745b", "sha256": "54986ee5a255b6ad0f1f1f5156f84e98ad67a49c6cd3bc9f462c87fc4b97750f"}, "downloads": -1, "filename": "sciencebasepy-1.6.9-py3-none-any.whl", "has_sig": false, "md5_digest": "3f82991615f38ba0fbf51e67e03e745b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16924, "upload_time": "2020-02-26T18:54:50", "upload_time_iso_8601": "2020-02-26T18:54:50.095894Z", "url": "https://files.pythonhosted.org/packages/1a/8b/3aead3f9d3fa3ea29fdb20b563772f82088c96e4522d9b1980871c862fde/sciencebasepy-1.6.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9dba40eb8225bdebb99e3d44e982fba6", "sha256": "9f0f0c43d1211d885220ff932821763f87712dd4cc79754272b17f5e413ecad5"}, "downloads": -1, "filename": "sciencebasepy-1.6.9.tar.gz", "has_sig": false, "md5_digest": "9dba40eb8225bdebb99e3d44e982fba6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19178, "upload_time": "2020-02-26T18:54:51", "upload_time_iso_8601": "2020-02-26T18:54:51.738055Z", "url": "https://files.pythonhosted.org/packages/2d/ca/63ed4f8d559a04f41cf76d9816054937569f1be21b488bb8bb2ab8abc9b1/sciencebasepy-1.6.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:39 2020"}