{"info": {"author": "Alejandro Ricoveri", "author_email": "alejandroricoveri@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Database"], "description": "m2bk\n====\n.. image:: https://travis-ci.org/axltxl/m2bk.svg?branch=develop\n   :target: https://travis-ci.org/axltxl/m2bk\n.. image:: https://badge.fury.io/py/m2bk.svg\n   :target: http://badge.fury.io/py/m2bk\n.. image:: https://img.shields.io/gratipay/axltxl.svg\n   :target: https://gratipay.com/axltxl\n\nSend your mongodump backups straight to AWS S3\n----------------------------------------------\n\n*m2bk* is command line tool that performs a number of\n**mongodb database backups via mongodump**, compresses them into a\ngzipped tarball and finally sends them to an **AWS S3 bucket**\n(more options are about to be available).\n\n.. image:: http://i.imgur.com/PxqbEPA.gif\n\n-  `Requirements <#requirements>`_\n-  `Contributing <#contributing>`_\n-  `Installation <#installation>`_\n-  `Basic usage <#basic-usage>`_\n-  `Options <#options>`_\n-  `Configuration file <#configuration-file>`_\n\n   -  `Sections and directives <#configuration-file-sections-and-directives>`_\n\n      -  `fs section <#fs-section>`_\n      -  `mongodb section <#mongodb-section>`_\n\n         -  `mongodb.host_defaults section <#mongodbhost_defaults-section>`_\n         -  `mongodb.hosts section <#mongodbhosts-section>`_\n\n      -  `Drivers (driver section) <#drivers-driver-section>`_\n\n         - `dummy <#dummy>`_\n         - `s3 <#s3>`_\n\n-  `Donating <#donating>`_\n-  `Copyright and licensing <#copyright-and-licensing>`_\n\nRequirements\n============\n\n-  `python <http://python.org>`_ >= 3.3\n-  `boto <http://docs.pythonboto.org/en/latest/>`_ >= 2.33\n-  `envoy <https://pypi.python.org/pypi/envoy>`_ >= 0.0.3\n-  `pyyaml <http://pyyaml.org>`_ >= 3.11\n-  `mongodb <http://www.mongodb.org>`_ >= 2.4\n-  `clint <https://github.com/kennethreitz/clint>`_ >= 0.4.1\n\n\nContributing\n============\n\nThere are many ways in which you can contribute to m2bk.\nCode patches are just one thing amongst others that you can submit to help the project.\nWe also welcome feedback, bug reports, feature requests, documentation improvements,\nadvertisement and testing.\n\nFeedback contributions\n----------------------\n\nThis is by far the easiest way to contribute something.\nIf you\u2019re using m2bk for your own benefit, don\u2019t hesitate sharing.\nFeel free to `submit issues and enhancement requests. <https://github.com/axltxl/m2bk/issues>`_\n\nCode contributions\n------------------\n\nCode contributions (patches, new features) are the most obvious way to help with the project\u2019s development.\nSince this is so common we ask you to follow our workflow to most efficiently work with us.\nFor code contributions, we follow the \"fork-and-pull\" Git workflow.\n\n\n1. Fork, then clone your repo on GitHub\n::\n\n  git clone git@github.com:your-username/m2bk.git\n  git add origin upstream https://github.com/axltxl/m2bk.git\n\nIf you already forked the repo, then be sure to merge\nthe most recent changes from \"upstream\" before making a pull request.\n::\n\n  git pull upstream\n\n2. Create a new feature branch in your local repo\n::\n\n  git checkout -b my_feature_branch\n\n3. Make your changes, then make sure the tests passes\n::\n\n  pyvenv m2bk-pyve && source m2bk-pyve/bin/activate\n  python3 setup.py test\n\n4. Commit your changes once done\n::\n\n  git commit -a -m \"My commit message\"\n  git push origin my_feature_branch\n\n5. Submit a `pull request <https://github.com/axltxl/m2bk/compare/>`_ with your feature branch containing your changes.\n\nInstallation\n============\n\nInstallation of m2bk can be made directly from source, via `pip <https://github.com/pypa/pip>`_ or\n`easy_install <http://pythonhosted.org/setuptools/easy_install.html>`_, whichever you prefer.\n\nOption # 1: pip\n---------------\n::\n\n    $ pip install m2bk\n\nOption # 2: from source\n-----------------------\n::\n\n    $ git clone git@github.com:axltxl/m2bk.git\n    $ cd m2bk\n    $ python3 setup.py install\n\nOption # 3: easy_install\n------------------------\n::\n\n    $ easy_install m2bk\n\nFrom this point you can edit your `configuration file <#configuration-file>`_\n::\n\n  $ vi /etc/m2bk/m2bk.yaml\n\nBasic Usage\n===========\nNormal execution\n::\n\n  $ m2bk\n\nQuiet output\n::\n\n  $ m2bk -q\n\nDry run\n::\n\n  $ m2bk -d\n\nSpecify an alternate configuration file\n::\n\n  $ m2bk -c /path/to/my/custom/m2bk.yaml\n\n\nOptions\n=======\n::\n\n    m2bk [options]\n\n\n-  ``--version`` show version number and exit\n-  ``-h | --help`` show a help message and exit\n-  ``-c [file] | --config=[file] | --config [file]`` specify configuration file to use\n-  ``-d | --dry-run`` don't actually do anything\n-  ``-q | --quiet`` quiet output\n-  ``--ll | --log-level=[num]`` set logging output level\n-  ``-l LOG_FILE | --log-file LOG_FILE set log file``\n\nConfiguration file\n------------------\n\nThe configuration is handled through a simple `YAML <http://yaml.org/>`_\nfile including a series of *sections* (which are YAML objects), each one\ncomposed by *directives* (YAML numbers, strings or arrays), these will\ndetermine a corresponding behavior on **m2bk**. If **m2bk** does not receive\nany configuration file on command line, it will try to read ``/etc/m2bk.yaml``.\n**Please note the configuration format is still a work in progress and will most likely change in the early stages of m2bk.**\n\n\nThe following is an example of what a configuration file looks like:\n\n::\n\n  ---\n  driver:\n    name: s3\n    options:\n      aws_access_key_id: \"SDF73HSDF3663KSKDJ\"\n      aws_secret_access_key: \"d577273ff885c3f84dadb8578bb41399\"\n  fs:\n    output_dir: \"/opt/tmp/mydir\"\n  mongodb:\n    mongodump: \"/opt/bin/mongodump\"\n    host_defaults:\n      port: 666\n      user_name: \"satan\"\n      password: \"14mh4x0r\"\n    hosts:\n      foo:\n        address: \"foo.example.local\"\n        port: 34127\n        dbs:\n          - \"app\"\n          - \"sessions\"\n          - \"another_one\"\n      bar:\n        address: \"bar.example.com\"\n        password: \"1AmAn07h3rh4x0r\"\n        auth_db: bar\n        dbs:\n            - customers\n            - sessions\n\nThrough this configuration file, you can set key variables about the\ndatabases you want to backup and the AWS S3 bucket you wish to send them\nto.\n\nConfiguration file: sections and directives\n-------------------------------------------\n\n``fs`` section\n^^^^^^^^^^^^^^\n\nThis section has directives regarding files and directories manipulation\n\nDirectives\n^^^^^^^^^^\n\n``fs.output_dir``\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n-  Type: **string**\n-  Default value : ``/tmp/m2bk``\n-  Role: directory where m2bk is going to temporarily save backup files\n\n\n``mongodb`` section\n^^^^^^^^^^^^^^^^^^^\n\nThis section holds directives regarding mongodb servers **m2bk** is going\nto connect to, including databases that are going to be backed up through *mongodump*.\n\n**Example**:\n::\n\n    mongodb:\n        mongodump: \"/opt/bin/mongodump\"\n        host_defaults:\n            user_name: tom\n            address: db.example.local\n            password: \"457893mnfs3j\"\n            dbs:\n              - halloran\n              - grady\n        hosts:\n            foo:\n                address: db0.example.internal\n                port: 27654\n                user_name: matt\n                password: \"myS3cr37P455w0rd\"\n                dbs:\n                  # This list is going to be merged with dbs at host_defaults, thus\n                  # the resulting dbs will be:\n                  # ['halloran', 'grady', 'jack', 'wendy', 'danny']\n                  - jack\n                  - wendy\n                  - danny\n            bar: {} # This one is going to acquire all host_defaults values\n            host_with_mixed_values:\n                # This host will inherit port, password and dbs from host_defaults\n                address: moloko.example.internal\n                user_name: alex\n                address: localhost\n                auth_db: milk_plus\n\n\nDirectives\n^^^^^^^^^^\n\n``mongodb.mongodump``\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n-  Type: **string**\n-  Default value : ``mongodump``\n-  Role: full path to the ``mongodump`` executable used by m2bk\n\n``mongodb.host_defaults`` section\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nMany directives (such as user name and/or password) could be common\namong the databases that are going to be backed up. For this reason, it\nis best to simply put those common directives under a single section,\nthis is entirely optional but also it is the best for easily manageable\nconfiguration files in order to avoid redundancy, the supported\ndirectives are ``user_name``, ``password``, ``port``, ``dbs`` and ``auth_db`` .\nSee ``hosts`` section.\n\n``mongodb.hosts`` section\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThis is an object/hash, where each element contains a series of\ndirectives relative to a mongodb database located at a server, its\nspecifications and databases themselves held by it, these are\nthe main values used by ``mongodump`` when it does its magic. For each\nentry inside the ``hosts`` section, these are its valid directives:\n\n\nDirectives\n^^^^^^^^^^\n\n``mongodb.hosts.*.address``\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n-  Type: **string**\n-  Required: YES\n-  Role: mongodb server location\n\n``mongodb.hosts.*.port``\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n-  Type: **integer**\n-  Required: NO\n-  Default value : ``mongo.host_defaults.port | 27017``\n-  Role: mongodb server listening port\n\n``mongodb.hosts.*.user_name``\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n-  Type: **string**\n-  Required: NO\n-  Default value : ``mongodb.host_defaults.user_name | m2bk``\n-  Role: user name used for authentication against the mongodb server\n\n``mongodb.hosts.*.password``\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n-  Type: **string**\n-  Required: NO\n-  Default value : ``mongodb.host_defaults.pass | \"pass\"``\n-  Role: password used for authentication against the mongodb server\n\n``mongodb.hosts.*.auth_db``\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n-  Type: **string**\n-  Required: NO\n-  Default value : ``admin``\n-  Role: authentication database\n\n``mongodb.hosts.*.dbs``\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n-  Type: **array**\n-  Required: NO\n-  Default value : ``mongodb.host_defaults.dbs | []``\n-  Role: a list of databases who are expected inside the mongodb server\n\n**NOTE: particular \"dbs\" on one host will be merged with those of \"host_defaults\"**\n\nDrivers (``driver`` section)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nOnce backup files have been generated, they are then handled by a driver, whose\njob is to transfer resulting backup files to some form of storage (depending\non the driver set on configuration). Drivers (and their options) are\nset and configured inside the ``driver`` section like so:\n\n::\n\n    driver:\n        # First of all, you need to tell m2bk which driver to use\n        name: dummy\n\n        # Inside this key, driver options are set\n        options:\n          hello: world\n          another_option: another_value\n\nPer driver, there are a bunch of available ``options`` to tweak them.\nThese options vary among drivers. Though there is only one driver available on\nm2bk, there will be more drivers available with new releases. Current available\ndrivers are the following:\n\n``dummy``\n^^^^^^^^^\n\nThis driver is just a placeholder for testing out the driver interface as\nit won't do a thing on backup files.\n\nOptions\n^^^^^^^\n\nThere are no options for this driver. Any option passed to this driver\nwill be logged at debug level.\n\n``s3``\n^^^^^^\n\nThis driver holds directives regarding AWS credentials that **m2bk**\nis going to use in order to upload the *mongodump* backups to S3.\nIf either ``aws_access_key_id`` or ``aws_secret_access_key`` are not specified,\nthis driver will not try to use them to authenticate against AWS and will rely\non `boto config <http://boto.readthedocs.org/en/latest/boto_config_tut.html>`_ for that matter.\n\n**Example**:\n::\n\n    driver:\n        name: s3\n        options:\n            aws_access_key_id\": \"HAS6NBASD8787SD\"\n            aws_secret_access_key: \"d41d8cd98f00b204e9800998ecf8427e\"\n            s3_bucket: \"mybucket\"\n\nOptions\n^^^^^^^\n\n``aws_access_key_id``\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n-  Type: **string**\n-  Required: NO\n-  Role: AWS access key ID\n\n\n``aws_secret_access_key``\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n-  Type: **string**\n-  Required: NO\n-  Role: AWS access key ID\n\n``s3_bucket``\n\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n-  Type: **string**\n-  Required: NO\n-  Default value: ``m2bk``\n-  Role: name of the main S3 bucket where m2bk is going to upload the compressed backups for each mongodb server specified in ``mongodb`` section\n\nDonating\n========\n\nShow your love and support this project via `gratipay <https://gratipay.com/axltxl>`_\n\n.. image:: https://cdn.rawgit.com/gratipay/gratipay-badge/2.3.0/dist/gratipay.png\n   :target: https://gratipay.com/axltxl\n\nCopyright and Licensing\n=======================\n\nCopyright (c) Alejandro Ricoveri\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/axltxl/m2bk/tarball/0.4.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/axltxl/m2bk", "keywords": "mongodb,aws,backup,s3", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "m2bk", "package_url": "https://pypi.org/project/m2bk/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/m2bk/", "project_urls": {"Download": "https://github.com/axltxl/m2bk/tarball/0.4.0", "Homepage": "https://github.com/axltxl/m2bk"}, "release_url": "https://pypi.org/project/m2bk/0.4.0/", "requires_dist": null, "requires_python": null, "summary": "A command line tool to orchestrate MongoDB backups", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"m2bk\">\n<h2>m2bk</h2>\n<a href=\"https://travis-ci.org/axltxl/m2bk\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/axltxl/m2bk.svg?branch=develop\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0250bdf4d9f2600e9124429c2af847d248ced0f8/68747470733a2f2f7472617669732d63692e6f72672f61786c74786c2f6d32626b2e7376673f6272616e63683d646576656c6f70\"></a>\n<a href=\"http://badge.fury.io/py/m2bk\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/m2bk.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be4c286de48d2761c8177323d227b6ba6dda5be9/68747470733a2f2f62616467652e667572792e696f2f70792f6d32626b2e737667\"></a>\n<a href=\"https://gratipay.com/axltxl\" rel=\"nofollow\"><img alt=\"https://img.shields.io/gratipay/axltxl.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/232c2a622db7eb9c27d7cdffe18da5626d87b637/68747470733a2f2f696d672e736869656c64732e696f2f67726174697061792f61786c74786c2e737667\"></a>\n<div id=\"send-your-mongodump-backups-straight-to-aws-s3\">\n<h3>Send your mongodump backups straight to AWS S3</h3>\n<p><em>m2bk</em> is command line tool that performs a number of\n<strong>mongodb database backups via mongodump</strong>, compresses them into a\ngzipped tarball and finally sends them to an <strong>AWS S3 bucket</strong>\n(more options are about to be available).</p>\n<img alt=\"http://i.imgur.com/PxqbEPA.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7183d88469798b8795864febc9173b8282a1c051/687474703a2f2f692e696d6775722e636f6d2f507871624550412e676966\">\n<ul>\n<li><a href=\"#requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#basic-usage\" rel=\"nofollow\">Basic usage</a></li>\n<li><a href=\"#options\" rel=\"nofollow\">Options</a></li>\n<li><a href=\"#configuration-file\" rel=\"nofollow\">Configuration file</a><ul>\n<li><a href=\"#configuration-file-sections-and-directives\" rel=\"nofollow\">Sections and directives</a><ul>\n<li><a href=\"#fs-section\" rel=\"nofollow\">fs section</a></li>\n<li><a href=\"#mongodb-section\" rel=\"nofollow\">mongodb section</a><ul>\n<li><a href=\"#mongodbhost_defaults-section\" rel=\"nofollow\">mongodb.host_defaults section</a></li>\n<li><a href=\"#mongodbhosts-section\" rel=\"nofollow\">mongodb.hosts section</a></li>\n</ul>\n</li>\n<li><a href=\"#drivers-driver-section\" rel=\"nofollow\">Drivers (driver section)</a><ul>\n<li><a href=\"#dummy\" rel=\"nofollow\">dummy</a></li>\n<li><a href=\"#s3\" rel=\"nofollow\">s3</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#donating\" rel=\"nofollow\">Donating</a></li>\n<li><a href=\"#copyright-and-licensing\" rel=\"nofollow\">Copyright and licensing</a></li>\n</ul>\n</div>\n</div>\n<div id=\"id1\">\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"http://python.org\" rel=\"nofollow\">python</a> &gt;= 3.3</li>\n<li><a href=\"http://docs.pythonboto.org/en/latest/\" rel=\"nofollow\">boto</a> &gt;= 2.33</li>\n<li><a href=\"https://pypi.python.org/pypi/envoy\" rel=\"nofollow\">envoy</a> &gt;= 0.0.3</li>\n<li><a href=\"http://pyyaml.org\" rel=\"nofollow\">pyyaml</a> &gt;= 3.11</li>\n<li><a href=\"http://www.mongodb.org\" rel=\"nofollow\">mongodb</a> &gt;= 2.4</li>\n<li><a href=\"https://github.com/kennethreitz/clint\" rel=\"nofollow\">clint</a> &gt;= 0.4.1</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>Contributing</h2>\n<p>There are many ways in which you can contribute to m2bk.\nCode patches are just one thing amongst others that you can submit to help the project.\nWe also welcome feedback, bug reports, feature requests, documentation improvements,\nadvertisement and testing.</p>\n<div id=\"feedback-contributions\">\n<h3>Feedback contributions</h3>\n<p>This is by far the easiest way to contribute something.\nIf you\u2019re using m2bk for your own benefit, don\u2019t hesitate sharing.\nFeel free to <a href=\"https://github.com/axltxl/m2bk/issues\" rel=\"nofollow\">submit issues and enhancement requests.</a></p>\n</div>\n<div id=\"code-contributions\">\n<h3>Code contributions</h3>\n<p>Code contributions (patches, new features) are the most obvious way to help with the project\u2019s development.\nSince this is so common we ask you to follow our workflow to most efficiently work with us.\nFor code contributions, we follow the \u201cfork-and-pull\u201d Git workflow.</p>\n<p>1. Fork, then clone your repo on GitHub</p>\n<pre>git clone git@github.com:your-username/m2bk.git\ngit add origin upstream https://github.com/axltxl/m2bk.git\n</pre>\n<p>If you already forked the repo, then be sure to merge\nthe most recent changes from \u201cupstream\u201d before making a pull request.</p>\n<pre>git pull upstream\n</pre>\n<p>2. Create a new feature branch in your local repo</p>\n<pre>git checkout -b my_feature_branch\n</pre>\n<p>3. Make your changes, then make sure the tests passes</p>\n<pre>pyvenv m2bk-pyve &amp;&amp; source m2bk-pyve/bin/activate\npython3 setup.py test\n</pre>\n<p>4. Commit your changes once done</p>\n<pre>git commit -a -m \"My commit message\"\ngit push origin my_feature_branch\n</pre>\n<ol>\n<li>Submit a <a href=\"https://github.com/axltxl/m2bk/compare/\" rel=\"nofollow\">pull request</a> with your feature branch containing your changes.</li>\n</ol>\n</div>\n</div>\n<div id=\"id3\">\n<h2>Installation</h2>\n<p>Installation of m2bk can be made directly from source, via <a href=\"https://github.com/pypa/pip\" rel=\"nofollow\">pip</a> or\n<a href=\"http://pythonhosted.org/setuptools/easy_install.html\" rel=\"nofollow\">easy_install</a>, whichever you prefer.</p>\n<div id=\"option-1-pip\">\n<h3>Option # 1: pip</h3>\n<pre>$ pip install m2bk\n</pre>\n</div>\n<div id=\"option-2-from-source\">\n<h3>Option # 2: from source</h3>\n<pre>$ git clone git@github.com:axltxl/m2bk.git\n$ cd m2bk\n$ python3 setup.py install\n</pre>\n</div>\n<div id=\"option-3-easy-install\">\n<h3>Option # 3: easy_install</h3>\n<pre>$ easy_install m2bk\n</pre>\n<p>From this point you can edit your <a href=\"#configuration-file\" rel=\"nofollow\">configuration file</a></p>\n<pre>$ vi /etc/m2bk/m2bk.yaml\n</pre>\n</div>\n</div>\n<div id=\"id5\">\n<h2>Basic Usage</h2>\n<p>Normal execution</p>\n<pre>$ m2bk\n</pre>\n<p>Quiet output</p>\n<pre>$ m2bk -q\n</pre>\n<p>Dry run</p>\n<pre>$ m2bk -d\n</pre>\n<p>Specify an alternate configuration file</p>\n<pre>$ m2bk -c /path/to/my/custom/m2bk.yaml\n</pre>\n</div>\n<div id=\"id6\">\n<h2>Options</h2>\n<pre>m2bk [options]\n</pre>\n<ul>\n<li><tt><span class=\"pre\">--version</span></tt> show version number and exit</li>\n<li><tt><span class=\"pre\">-h</span> | <span class=\"pre\">--help</span></tt> show a help message and exit</li>\n<li><tt><span class=\"pre\">-c</span> [file] | <span class=\"pre\">--config=[file]</span> | <span class=\"pre\">--config</span> [file]</tt> specify configuration file to use</li>\n<li><tt><span class=\"pre\">-d</span> | <span class=\"pre\">--dry-run</span></tt> don\u2019t actually do anything</li>\n<li><tt><span class=\"pre\">-q</span> | <span class=\"pre\">--quiet</span></tt> quiet output</li>\n<li><tt><span class=\"pre\">--ll</span> | <span class=\"pre\">--log-level=[num]</span></tt> set logging output level</li>\n<li><tt><span class=\"pre\">-l</span> LOG_FILE | <span class=\"pre\">--log-file</span> LOG_FILE set log file</tt></li>\n</ul>\n<div id=\"id7\">\n<h3>Configuration file</h3>\n<p>The configuration is handled through a simple <a href=\"http://yaml.org/\" rel=\"nofollow\">YAML</a>\nfile including a series of <em>sections</em> (which are YAML objects), each one\ncomposed by <em>directives</em> (YAML numbers, strings or arrays), these will\ndetermine a corresponding behavior on <strong>m2bk</strong>. If <strong>m2bk</strong> does not receive\nany configuration file on command line, it will try to read <tt>/etc/m2bk.yaml</tt>.\n<strong>Please note the configuration format is still a work in progress and will most likely change in the early stages of m2bk.</strong></p>\n<p>The following is an example of what a configuration file looks like:</p>\n<pre>---\ndriver:\n  name: s3\n  options:\n    aws_access_key_id: \"SDF73HSDF3663KSKDJ\"\n    aws_secret_access_key: \"d577273ff885c3f84dadb8578bb41399\"\nfs:\n  output_dir: \"/opt/tmp/mydir\"\nmongodb:\n  mongodump: \"/opt/bin/mongodump\"\n  host_defaults:\n    port: 666\n    user_name: \"satan\"\n    password: \"14mh4x0r\"\n  hosts:\n    foo:\n      address: \"foo.example.local\"\n      port: 34127\n      dbs:\n        - \"app\"\n        - \"sessions\"\n        - \"another_one\"\n    bar:\n      address: \"bar.example.com\"\n      password: \"1AmAn07h3rh4x0r\"\n      auth_db: bar\n      dbs:\n          - customers\n          - sessions\n</pre>\n<p>Through this configuration file, you can set key variables about the\ndatabases you want to backup and the AWS S3 bucket you wish to send them\nto.</p>\n</div>\n<div id=\"configuration-file-sections-and-directives\">\n<h3>Configuration file: sections and directives</h3>\n<div id=\"id8\">\n<h4><tt>fs</tt> section</h4>\n<p>This section has directives regarding files and directories manipulation</p>\n</div>\n<div id=\"directives\">\n<h4>Directives</h4>\n<h4 id=\"fs-output-dir\"><span class=\"section-subtitle\"><tt>fs.output_dir</tt></span></h4>\n<ul>\n<li>Type: <strong>string</strong></li>\n<li>Default value : <tt>/tmp/m2bk</tt></li>\n<li>Role: directory where m2bk is going to temporarily save backup files</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h4><tt>mongodb</tt> section</h4>\n<p>This section holds directives regarding mongodb servers <strong>m2bk</strong> is going\nto connect to, including databases that are going to be backed up through <em>mongodump</em>.</p>\n<p><strong>Example</strong>:</p>\n<pre>mongodb:\n    mongodump: \"/opt/bin/mongodump\"\n    host_defaults:\n        user_name: tom\n        address: db.example.local\n        password: \"457893mnfs3j\"\n        dbs:\n          - halloran\n          - grady\n    hosts:\n        foo:\n            address: db0.example.internal\n            port: 27654\n            user_name: matt\n            password: \"myS3cr37P455w0rd\"\n            dbs:\n              # This list is going to be merged with dbs at host_defaults, thus\n              # the resulting dbs will be:\n              # ['halloran', 'grady', 'jack', 'wendy', 'danny']\n              - jack\n              - wendy\n              - danny\n        bar: {} # This one is going to acquire all host_defaults values\n        host_with_mixed_values:\n            # This host will inherit port, password and dbs from host_defaults\n            address: moloko.example.internal\n            user_name: alex\n            address: localhost\n            auth_db: milk_plus\n</pre>\n</div>\n<div id=\"id10\">\n<h4>Directives</h4>\n<h4 id=\"mongodb-mongodump\"><span class=\"section-subtitle\"><tt>mongodb.mongodump</tt></span></h4>\n<ul>\n<li>Type: <strong>string</strong></li>\n<li>Default value : <tt>mongodump</tt></li>\n<li>Role: full path to the <tt>mongodump</tt> executable used by m2bk</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h4><tt>mongodb.host_defaults</tt> section</h4>\n<p>Many directives (such as user name and/or password) could be common\namong the databases that are going to be backed up. For this reason, it\nis best to simply put those common directives under a single section,\nthis is entirely optional but also it is the best for easily manageable\nconfiguration files in order to avoid redundancy, the supported\ndirectives are <tt>user_name</tt>, <tt>password</tt>, <tt>port</tt>, <tt>dbs</tt> and <tt>auth_db</tt> .\nSee <tt>hosts</tt> section.</p>\n</div>\n<div id=\"id12\">\n<h4><tt>mongodb.hosts</tt> section</h4>\n<p>This is an object/hash, where each element contains a series of\ndirectives relative to a mongodb database located at a server, its\nspecifications and databases themselves held by it, these are\nthe main values used by <tt>mongodump</tt> when it does its magic. For each\nentry inside the <tt>hosts</tt> section, these are its valid directives:</p>\n</div>\n<div id=\"id13\">\n<h4>Directives</h4>\n<div id=\"mongodb-hosts-address\">\n<h5><tt><span class=\"pre\">mongodb.hosts.*.address</span></tt></h5>\n<ul>\n<li>Type: <strong>string</strong></li>\n<li>Required: YES</li>\n<li>Role: mongodb server location</li>\n</ul>\n</div>\n<div id=\"mongodb-hosts-port\">\n<h5><tt><span class=\"pre\">mongodb.hosts.*.port</span></tt></h5>\n<ul>\n<li>Type: <strong>integer</strong></li>\n<li>Required: NO</li>\n<li>Default value : <tt>mongo.host_defaults.port | 27017</tt></li>\n<li>Role: mongodb server listening port</li>\n</ul>\n</div>\n<div id=\"mongodb-hosts-user-name\">\n<h5><tt><span class=\"pre\">mongodb.hosts.*.user_name</span></tt></h5>\n<ul>\n<li>Type: <strong>string</strong></li>\n<li>Required: NO</li>\n<li>Default value : <tt>mongodb.host_defaults.user_name | m2bk</tt></li>\n<li>Role: user name used for authentication against the mongodb server</li>\n</ul>\n</div>\n<div id=\"mongodb-hosts-password\">\n<h5><tt><span class=\"pre\">mongodb.hosts.*.password</span></tt></h5>\n<ul>\n<li>Type: <strong>string</strong></li>\n<li>Required: NO</li>\n<li>Default value : <tt>mongodb.host_defaults.pass | \"pass\"</tt></li>\n<li>Role: password used for authentication against the mongodb server</li>\n</ul>\n</div>\n<div id=\"mongodb-hosts-auth-db\">\n<h5><tt><span class=\"pre\">mongodb.hosts.*.auth_db</span></tt></h5>\n<ul>\n<li>Type: <strong>string</strong></li>\n<li>Required: NO</li>\n<li>Default value : <tt>admin</tt></li>\n<li>Role: authentication database</li>\n</ul>\n</div>\n<div id=\"mongodb-hosts-dbs\">\n<h5><tt><span class=\"pre\">mongodb.hosts.*.dbs</span></tt></h5>\n<ul>\n<li>Type: <strong>array</strong></li>\n<li>Required: NO</li>\n<li>Default value : <tt>mongodb.host_defaults.dbs | []</tt></li>\n<li>Role: a list of databases who are expected inside the mongodb server</li>\n</ul>\n<p><strong>NOTE: particular \u201cdbs\u201d on one host will be merged with those of \u201chost_defaults\u201d</strong></p>\n</div>\n</div>\n<div id=\"id14\">\n<h4>Drivers (<tt>driver</tt> section)</h4>\n<p>Once backup files have been generated, they are then handled by a driver, whose\njob is to transfer resulting backup files to some form of storage (depending\non the driver set on configuration). Drivers (and their options) are\nset and configured inside the <tt>driver</tt> section like so:</p>\n<pre>driver:\n    # First of all, you need to tell m2bk which driver to use\n    name: dummy\n\n    # Inside this key, driver options are set\n    options:\n      hello: world\n      another_option: another_value\n</pre>\n<p>Per driver, there are a bunch of available <tt>options</tt> to tweak them.\nThese options vary among drivers. Though there is only one driver available on\nm2bk, there will be more drivers available with new releases. Current available\ndrivers are the following:</p>\n</div>\n<div id=\"id15\">\n<h4><tt>dummy</tt></h4>\n<p>This driver is just a placeholder for testing out the driver interface as\nit won\u2019t do a thing on backup files.</p>\n</div>\n<div id=\"id16\">\n<h4>Options</h4>\n<p>There are no options for this driver. Any option passed to this driver\nwill be logged at debug level.</p>\n</div>\n<div id=\"id17\">\n<h4><tt>s3</tt></h4>\n<p>This driver holds directives regarding AWS credentials that <strong>m2bk</strong>\nis going to use in order to upload the <em>mongodump</em> backups to S3.\nIf either <tt>aws_access_key_id</tt> or <tt>aws_secret_access_key</tt> are not specified,\nthis driver will not try to use them to authenticate against AWS and will rely\non <a href=\"http://boto.readthedocs.org/en/latest/boto_config_tut.html\" rel=\"nofollow\">boto config</a> for that matter.</p>\n<p><strong>Example</strong>:</p>\n<pre>driver:\n    name: s3\n    options:\n        aws_access_key_id\": \"HAS6NBASD8787SD\"\n        aws_secret_access_key: \"d41d8cd98f00b204e9800998ecf8427e\"\n        s3_bucket: \"mybucket\"\n</pre>\n</div>\n<div id=\"id18\">\n<h4>Options</h4>\n<div id=\"aws-access-key-id\">\n<h5><tt>aws_access_key_id</tt></h5>\n<ul>\n<li>Type: <strong>string</strong></li>\n<li>Required: NO</li>\n<li>Role: AWS access key ID</li>\n</ul>\n</div>\n<div id=\"aws-secret-access-key\">\n<h5><tt>aws_secret_access_key</tt></h5>\n<ul>\n<li>Type: <strong>string</strong></li>\n<li>Required: NO</li>\n<li>Role: AWS access key ID</li>\n</ul>\n</div>\n<div id=\"s3-bucket\">\n<h5><tt>s3_bucket</tt></h5>\n<ul>\n<li>Type: <strong>string</strong></li>\n<li>Required: NO</li>\n<li>Default value: <tt>m2bk</tt></li>\n<li>Role: name of the main S3 bucket where m2bk is going to upload the compressed backups for each mongodb server specified in <tt>mongodb</tt> section</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div id=\"id19\">\n<h2>Donating</h2>\n<p>Show your love and support this project via <a href=\"https://gratipay.com/axltxl\" rel=\"nofollow\">gratipay</a></p>\n<a href=\"https://gratipay.com/axltxl\" rel=\"nofollow\"><img alt=\"https://cdn.rawgit.com/gratipay/gratipay-badge/2.3.0/dist/gratipay.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a48f2fc3282111b223dccb4d041c0a081caa82e7/68747470733a2f2f63646e2e7261776769742e636f6d2f67726174697061792f67726174697061792d62616467652f322e332e302f646973742f67726174697061792e706e67\"></a>\n</div>\n<div id=\"id20\">\n<h2>Copyright and Licensing</h2>\n<p>Copyright (c) Alejandro Ricoveri</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\u201cSoftware\u201d), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n</div>\n\n          </div>"}, "last_serial": 1665692, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "a456c8889c9065f553843af531386950", "sha256": "be16b62bef4559fab6dee0c7c7108594b794f42182626c18a7cf112eaa227cd2"}, "downloads": -1, "filename": "m2bk-0.3.0.tar.gz", "has_sig": false, "md5_digest": "a456c8889c9065f553843af531386950", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23948, "upload_time": "2015-02-28T13:13:18", "upload_time_iso_8601": "2015-02-28T13:13:18.204318Z", "url": "https://files.pythonhosted.org/packages/30/93/6a232d41fb1b4079dbfe1ec28ddb5054cfcb40f6ed82a29a9f83fb583cdd/m2bk-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "0e23afd5a9b321065b50ab01e47e6bb8", "sha256": "acab85161b06069bd95073f2643124243cc236b33641f5897e6f8988254ea13d"}, "downloads": -1, "filename": "m2bk-0.3.1.tar.gz", "has_sig": false, "md5_digest": "0e23afd5a9b321065b50ab01e47e6bb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25096, "upload_time": "2015-02-28T15:56:03", "upload_time_iso_8601": "2015-02-28T15:56:03.258847Z", "url": "https://files.pythonhosted.org/packages/d9/f3/9faca416a5bff7c518246440ab73016cdb5d6c0df386a205db0295d1f0d8/m2bk-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "087430c2c2fad85e84fb763a85e431f1", "sha256": "992d8f9c3f4f6913e1cb55b9891c8b3fd567c1a7653e54028f422349575704d1"}, "downloads": -1, "filename": "m2bk-0.4.0.tar.gz", "has_sig": false, "md5_digest": "087430c2c2fad85e84fb763a85e431f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31487, "upload_time": "2015-08-04T14:07:35", "upload_time_iso_8601": "2015-08-04T14:07:35.273523Z", "url": "https://files.pythonhosted.org/packages/fe/ab/1a0b5abaf14df57ff5bcbb959fa40d7eb5261901463d7d7df8ddde86dadf/m2bk-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "087430c2c2fad85e84fb763a85e431f1", "sha256": "992d8f9c3f4f6913e1cb55b9891c8b3fd567c1a7653e54028f422349575704d1"}, "downloads": -1, "filename": "m2bk-0.4.0.tar.gz", "has_sig": false, "md5_digest": "087430c2c2fad85e84fb763a85e431f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31487, "upload_time": "2015-08-04T14:07:35", "upload_time_iso_8601": "2015-08-04T14:07:35.273523Z", "url": "https://files.pythonhosted.org/packages/fe/ab/1a0b5abaf14df57ff5bcbb959fa40d7eb5261901463d7d7df8ddde86dadf/m2bk-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:35 2020"}