{"info": {"author": "Apache - SDAP", "author_email": "dev@sdap.apache.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# SDAP manager for ingestion of datasets\n\n## Prerequisites\n\n### python 3\n\nInstall anaconda for python 3. From the graphic install for example for macos:\n\nhttps://www.anaconda.com/distribution/#macos\n\n### git lfs (for development)\n\nGit lfs for the deployment from git, see https://git-lfs.github.com/\n\nIf not available you have to get netcdf files for test, if you do need the tests.\n\n### Deployed nexus on kubernetes cluster\n\nSee project https://github.com/apache/incubator-sdap-nexus\n\n    $ helm install nexus .  --namespace=sdap --dependency-update -f ~/overridden-nexus-values.yml \n\n\n## Install, Configure and run\n\n### Install\n\nStay logged in as user\n\n    $ pip install sdap-ingest-manager\n\n\n### Configure the ingestion system\n\nCatch the message at the end of the installation output\n\n    --------------------------------------------------------------\n    Now, create configuration files in\n    ***/<some path>>/.sdap_ingest_manager***\n     Use templates and examples provided there\n    --------------------------------------------------------------\n\nIf the path does not show in the installation stdout, you can find it with the command:\n\n    python -c \"import sys; print(f'{sys.prefix}/.sdap_ingest_manager')\"\n\n\nUse the path shown in the message and create your own configuration files:\n\n    $ cd /<some path>>/.sdap_ingest_manager\n    $ cp sdap_ingest_manager.ini.default sdap_ingest_manager.ini\n\nEdit and update the newly created files by following instructions in the comments.\n\nNote that the `.ini.default` file will be used if no value is configured in the `.ini` file. So you can have a simplified `.ini` file with only your specific configuration.\nDon't put your specific configuration in the `.ini.default` file, it will be replaced when you upgrade the package.\n\nExample of a simplified `.ini` file:\n\n```yaml\n[COLLECTIONS_YAML_CONFIG]\nyaml_file = collections.yml\n\n[OPTIONS]\n# set to False to actually call the ingestion command for each granule\ndry_run = False\n# set to True to automatically list the granules as seen on the nfs server when they are mounted on the local file system.\ndeconstruct_nfs = True\n# number of parallel ingestion pods on kubernetes (1 per granule)\nparallel_pods = 2\n\n[INGEST]\n# kubernetes namespace where the sdap cluster is deployed\nkubernetes_namespace = nexus-dev\n\n```\n\n\n### Configure the collections\n\nYou can configure it in a local yaml file referenced in the `sdap_ingest_manager.ini` file.\n\nIt can also be in a google spreadsheet.\n\nIf both are configured, the local yaml file will be used.\n\n\n\n### Run the ingestion \n\nOn the list of the configured collections:\n\n    $ run_collections\n\nThe number of parallel jobs can be updated during the process in the `sdap_ingest_manager.ini` file.\n\nIf interrupted (killed) the process will restart where it was.\n\n\n## For developers\n\n### deploy project\n\n    $ bash\n    $ git clone ...\n    $ cd sdap_ingest_manager\n    $ python -m venv venv\n    $ source ./venv/bin/activate\n    $ pip install .\n\nNote the command pip install -e . does not work as it does not deploy the configuration files.\n\n## Update the project\n\nUpdate the code and the test with your favorite IDE (e.g. pyCharm).\n\n### Test and create the package\n\nA package based on the dev branch is automatically published at github release when a push is made. \n\n\nChange version in file setup.py \n\n    $ python setup.py test\n    $ git tag <version>\n    $ git push origin <version>\n\nThe release will be automatically pushed to pypi through github action.\n\n\n\n# Containerization\n\n## Docker\n\n(development version)\n\n    cd containers/docker\n    docker build --no-cache --tag tloubrieu/sdap-ingest-manager:latest .    \n    docker run -it --name sdap-ingest-manager -v sdap_ingest_config:/usr/local/.sdap_ingest_manager tloubrieu/sdap-ingest-manager:latest\n    docker volume inspect sdap_ingest_config\n\nYou can see the configuration files in the directory of the named volume (for example /var/lib/docker/volumes/sdap_ingest_config/_data).\n\nNote on macos, to access this directory, you need to go inside the Virtual Machine which runs docker service. To update the configuration on macos:\n\n    docker run --rm -it -v /:/vm-root alpine:edge /bin/ash\n    cd /vm-root/var/lib/docker/volumes/sdap_ingest_config/_data\n    cp sdap_ingest_manager.ini.default sdap_ingest_manager.ini\n    vi sdap_ingest_manager.ini\n\nTo publish the docker image on dockerhub do (step necessary for kubernetes deployment):\n\n    docker login\n    docker push tloubrieu/sdap-ingest-manager:latest\n\n## Kubernetes\n\n### Create the configMap for your deployment \n\nPrepare a configMap from existing native config files:\n\n    kubectl create configmap collection-ingester-config --from-file=venv/.sdap_ingest_manager -n sdap\n\n#### Optionally you can update the configMap manually if the one you started from is not what you needed: \n\n    kubectl get configmap collection-ingester-config -o yaml -n sdap > containers/kubernetes/sdap_ingester_config.yml\n\nManually edit the yml file to only keep the configuration which is specific to the deployment (if different from the current one)\n\nReplace the configmap:\n\n    kubectl delete configmap collection-ingester-config -n sdap\n    kubectl apply -f containers/kubernetes/sdap_ingester_config.yml -n sdap\n\n\n### Launch the service\n\n    kubectl apply -f containers/kubernetes/job.yml -n sdap\n\nDelete the service: \n\n    kubectl delete jobs --all -n sdap\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tloubrieu-jpl/incubator-sdap-nexus-ingestion-manager", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sdap-ingest-manager", "package_url": "https://pypi.org/project/sdap-ingest-manager/", "platform": "", "project_url": "https://pypi.org/project/sdap-ingest-manager/", "project_urls": {"Homepage": "https://github.com/tloubrieu-jpl/incubator-sdap-nexus-ingestion-manager"}, "release_url": "https://pypi.org/project/sdap-ingest-manager/0.3.0rc3/", "requires_dist": ["google-api-python-client (>=1.7)", "google-auth-oauthlib (>=0.4)", "pystache (>=0.5)", "pyyaml", "pysolr (>=3.8)"], "requires_python": ">=3.6", "summary": "a helper to ingest data in sdap", "version": "0.3.0rc3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SDAP manager for ingestion of datasets</h1>\n<h2>Prerequisites</h2>\n<h3>python 3</h3>\n<p>Install anaconda for python 3. From the graphic install for example for macos:</p>\n<p><a href=\"https://www.anaconda.com/distribution/#macos\" rel=\"nofollow\">https://www.anaconda.com/distribution/#macos</a></p>\n<h3>git lfs (for development)</h3>\n<p>Git lfs for the deployment from git, see <a href=\"https://git-lfs.github.com/\" rel=\"nofollow\">https://git-lfs.github.com/</a></p>\n<p>If not available you have to get netcdf files for test, if you do need the tests.</p>\n<h3>Deployed nexus on kubernetes cluster</h3>\n<p>See project <a href=\"https://github.com/apache/incubator-sdap-nexus\" rel=\"nofollow\">https://github.com/apache/incubator-sdap-nexus</a></p>\n<pre><code>$ helm install nexus .  --namespace=sdap --dependency-update -f ~/overridden-nexus-values.yml \n</code></pre>\n<h2>Install, Configure and run</h2>\n<h3>Install</h3>\n<p>Stay logged in as user</p>\n<pre><code>$ pip install sdap-ingest-manager\n</code></pre>\n<h3>Configure the ingestion system</h3>\n<p>Catch the message at the end of the installation output</p>\n<pre><code>--------------------------------------------------------------\nNow, create configuration files in\n***/&lt;some path&gt;&gt;/.sdap_ingest_manager***\n Use templates and examples provided there\n--------------------------------------------------------------\n</code></pre>\n<p>If the path does not show in the installation stdout, you can find it with the command:</p>\n<pre><code>python -c \"import sys; print(f'{sys.prefix}/.sdap_ingest_manager')\"\n</code></pre>\n<p>Use the path shown in the message and create your own configuration files:</p>\n<pre><code>$ cd /&lt;some path&gt;&gt;/.sdap_ingest_manager\n$ cp sdap_ingest_manager.ini.default sdap_ingest_manager.ini\n</code></pre>\n<p>Edit and update the newly created files by following instructions in the comments.</p>\n<p>Note that the <code>.ini.default</code> file will be used if no value is configured in the <code>.ini</code> file. So you can have a simplified <code>.ini</code> file with only your specific configuration.\nDon't put your specific configuration in the <code>.ini.default</code> file, it will be replaced when you upgrade the package.</p>\n<p>Example of a simplified <code>.ini</code> file:</p>\n<pre><span class=\"p p-Indicator\">[</span><span class=\"nv\">COLLECTIONS_YAML_CONFIG</span><span class=\"p p-Indicator\">]</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">yaml_file = collections.yml</span>\n\n<span class=\"l l-Scalar l-Scalar-Plain\">[OPTIONS]</span>\n<span class=\"l l-Scalar l-Scalar-Plain\"># set to False to actually call the ingestion command for each granule</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">dry_run = False</span>\n<span class=\"l l-Scalar l-Scalar-Plain\"># set to True to automatically list the granules as seen on the nfs server when they are mounted on the local file system.</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">deconstruct_nfs = True</span>\n<span class=\"l l-Scalar l-Scalar-Plain\"># number of parallel ingestion pods on kubernetes (1 per granule)</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">parallel_pods = 2</span>\n\n<span class=\"l l-Scalar l-Scalar-Plain\">[INGEST]</span>\n<span class=\"l l-Scalar l-Scalar-Plain\"># kubernetes namespace where the sdap cluster is deployed</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">kubernetes_namespace = nexus-dev</span>\n</pre>\n<h3>Configure the collections</h3>\n<p>You can configure it in a local yaml file referenced in the <code>sdap_ingest_manager.ini</code> file.</p>\n<p>It can also be in a google spreadsheet.</p>\n<p>If both are configured, the local yaml file will be used.</p>\n<h3>Run the ingestion</h3>\n<p>On the list of the configured collections:</p>\n<pre><code>$ run_collections\n</code></pre>\n<p>The number of parallel jobs can be updated during the process in the <code>sdap_ingest_manager.ini</code> file.</p>\n<p>If interrupted (killed) the process will restart where it was.</p>\n<h2>For developers</h2>\n<h3>deploy project</h3>\n<pre><code>$ bash\n$ git clone ...\n$ cd sdap_ingest_manager\n$ python -m venv venv\n$ source ./venv/bin/activate\n$ pip install .\n</code></pre>\n<p>Note the command pip install -e . does not work as it does not deploy the configuration files.</p>\n<h2>Update the project</h2>\n<p>Update the code and the test with your favorite IDE (e.g. pyCharm).</p>\n<h3>Test and create the package</h3>\n<p>A package based on the dev branch is automatically published at github release when a push is made.</p>\n<p>Change version in file setup.py</p>\n<pre><code>$ python setup.py test\n$ git tag &lt;version&gt;\n$ git push origin &lt;version&gt;\n</code></pre>\n<p>The release will be automatically pushed to pypi through github action.</p>\n<h1>Containerization</h1>\n<h2>Docker</h2>\n<p>(development version)</p>\n<pre><code>cd containers/docker\ndocker build --no-cache --tag tloubrieu/sdap-ingest-manager:latest .    \ndocker run -it --name sdap-ingest-manager -v sdap_ingest_config:/usr/local/.sdap_ingest_manager tloubrieu/sdap-ingest-manager:latest\ndocker volume inspect sdap_ingest_config\n</code></pre>\n<p>You can see the configuration files in the directory of the named volume (for example /var/lib/docker/volumes/sdap_ingest_config/_data).</p>\n<p>Note on macos, to access this directory, you need to go inside the Virtual Machine which runs docker service. To update the configuration on macos:</p>\n<pre><code>docker run --rm -it -v /:/vm-root alpine:edge /bin/ash\ncd /vm-root/var/lib/docker/volumes/sdap_ingest_config/_data\ncp sdap_ingest_manager.ini.default sdap_ingest_manager.ini\nvi sdap_ingest_manager.ini\n</code></pre>\n<p>To publish the docker image on dockerhub do (step necessary for kubernetes deployment):</p>\n<pre><code>docker login\ndocker push tloubrieu/sdap-ingest-manager:latest\n</code></pre>\n<h2>Kubernetes</h2>\n<h3>Create the configMap for your deployment</h3>\n<p>Prepare a configMap from existing native config files:</p>\n<pre><code>kubectl create configmap collection-ingester-config --from-file=venv/.sdap_ingest_manager -n sdap\n</code></pre>\n<h4>Optionally you can update the configMap manually if the one you started from is not what you needed:</h4>\n<pre><code>kubectl get configmap collection-ingester-config -o yaml -n sdap &gt; containers/kubernetes/sdap_ingester_config.yml\n</code></pre>\n<p>Manually edit the yml file to only keep the configuration which is specific to the deployment (if different from the current one)</p>\n<p>Replace the configmap:</p>\n<pre><code>kubectl delete configmap collection-ingester-config -n sdap\nkubectl apply -f containers/kubernetes/sdap_ingester_config.yml -n sdap\n</code></pre>\n<h3>Launch the service</h3>\n<pre><code>kubectl apply -f containers/kubernetes/job.yml -n sdap\n</code></pre>\n<p>Delete the service:</p>\n<pre><code>kubectl delete jobs --all -n sdap\n</code></pre>\n\n          </div>"}, "last_serial": 7168745, "releases": {"0.2.0rc1": [{"comment_text": "", "digests": {"md5": "62aab8026a7b6c9061ecb0d662ac9644", "sha256": "5e8985712b47cedf72de6f7e3c22693820c4365e04d404e523f4b37d57c84e03"}, "downloads": -1, "filename": "sdap_ingest_manager-0.2.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "62aab8026a7b6c9061ecb0d662ac9644", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3872586, "upload_time": "2020-03-25T01:12:25", "upload_time_iso_8601": "2020-03-25T01:12:25.418106Z", "url": "https://files.pythonhosted.org/packages/c0/88/c6e645b604d65911b5a4b8d2a7a4d65dba50260e9ec8b45790975239f7f5/sdap_ingest_manager-0.2.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7604bece463c8f27e2505a2af48d373", "sha256": "669b1a35d038ed0cb17e83f32978d27afa737a67f782c40b5e6487b1801f8bc8"}, "downloads": -1, "filename": "sdap_ingest_manager-0.2.0rc1.tar.gz", "has_sig": false, "md5_digest": "a7604bece463c8f27e2505a2af48d373", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1937276, "upload_time": "2020-03-25T00:59:44", "upload_time_iso_8601": "2020-03-25T00:59:44.454743Z", "url": "https://files.pythonhosted.org/packages/ef/39/bc782818b90aa32fc23b1c2aee66c3586569c0004ecec5c35a077023ceba/sdap_ingest_manager-0.2.0rc1.tar.gz", "yanked": false}], "0.2.0rc2": [{"comment_text": "", "digests": {"md5": "0c40f33c6652a60245dc9bb33962bc04", "sha256": "8a31f02b567ef0991e50739245b19d1ba44489a8f3e385d4decd23b067fe39af"}, "downloads": -1, "filename": "sdap_ingest_manager-0.2.0rc2-py3-none-any.whl", "has_sig": false, "md5_digest": "0c40f33c6652a60245dc9bb33962bc04", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3872949, "upload_time": "2020-03-25T16:41:12", "upload_time_iso_8601": "2020-03-25T16:41:12.410718Z", "url": "https://files.pythonhosted.org/packages/e7/3f/c018f7170be8a62b2c2f702b177340bbea4dceae43edf4f942ecf758101d/sdap_ingest_manager-0.2.0rc2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54717143c6fd0c7833a7f5a899914013", "sha256": "165638b079d6f9183c9426841ca01233bb9950f9af041346bba82bd25646bbd5"}, "downloads": -1, "filename": "sdap_ingest_manager-0.2.0rc2.tar.gz", "has_sig": false, "md5_digest": "54717143c6fd0c7833a7f5a899914013", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1937936, "upload_time": "2020-03-25T16:41:14", "upload_time_iso_8601": "2020-03-25T16:41:14.490850Z", "url": "https://files.pythonhosted.org/packages/24/11/9eec72e16597ced1f714a81e58aa4335eef79b5cde8c1d64f8a9dec994ef/sdap_ingest_manager-0.2.0rc2.tar.gz", "yanked": false}], "0.2.0rc3": [{"comment_text": "", "digests": {"md5": "9803805e7fe305c7b96312be2d18ef17", "sha256": "7cd37786aeb403b00404e3dae22349971f5bdf2f57ac8397109ea9436010f2f6"}, "downloads": -1, "filename": "sdap_ingest_manager-0.2.0rc3-py3-none-any.whl", "has_sig": false, "md5_digest": "9803805e7fe305c7b96312be2d18ef17", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3874415, "upload_time": "2020-04-07T21:40:52", "upload_time_iso_8601": "2020-04-07T21:40:52.088251Z", "url": "https://files.pythonhosted.org/packages/e4/0f/d62d7af55aa2a258d1ce4569e4e907046877abee11dcda1e6d2e715452a3/sdap_ingest_manager-0.2.0rc3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be32cebff975b0c70462eabb4cba21eb", "sha256": "2a53104cda5885e18c9bb22dd0508ed8279ccfbd2a638faa077830b58a69a30a"}, "downloads": -1, "filename": "sdap_ingest_manager-0.2.0rc3.tar.gz", "has_sig": false, "md5_digest": "be32cebff975b0c70462eabb4cba21eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1940046, "upload_time": "2020-04-07T21:40:53", "upload_time_iso_8601": "2020-04-07T21:40:53.426849Z", "url": "https://files.pythonhosted.org/packages/54/58/05eac1ac3e7a1216a92c55b15c062ae12e99ff2f72dce2e51e1b724a93e7/sdap_ingest_manager-0.2.0rc3.tar.gz", "yanked": false}], "0.3.0rc1": [{"comment_text": "", "digests": {"md5": "c8d8941b0775d0ce95fecb94a4229628", "sha256": "8a965567e59ef9a6c14348fffe75bf24c18ae8cf41120496acf0063c1f03b29b"}, "downloads": -1, "filename": "sdap_ingest_manager-0.3.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "c8d8941b0775d0ce95fecb94a4229628", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3881981, "upload_time": "2020-04-24T01:47:14", "upload_time_iso_8601": "2020-04-24T01:47:14.676860Z", "url": "https://files.pythonhosted.org/packages/0f/b5/dd20ff5cc5d1095a052ec5e6097a9fe782baa1687d8de796104115023b5f/sdap_ingest_manager-0.3.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ee856e279d23be1feb3e7095b3ec6d9", "sha256": "e60a3df52a5bd033c7fa326849d59b31591f0796ccbaaafebbcfaf9719ef02fd"}, "downloads": -1, "filename": "sdap_ingest_manager-0.3.0rc1.tar.gz", "has_sig": false, "md5_digest": "7ee856e279d23be1feb3e7095b3ec6d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1945078, "upload_time": "2020-04-24T01:47:16", "upload_time_iso_8601": "2020-04-24T01:47:16.227380Z", "url": "https://files.pythonhosted.org/packages/c8/6b/4ba4a35913ccaebc7de41980fcf46646355c5eb0f2ea1f28aab97db284f6/sdap_ingest_manager-0.3.0rc1.tar.gz", "yanked": false}], "0.3.0rc2": [{"comment_text": "", "digests": {"md5": "c2b2ed51c64306ac04a5ac87e1b52a02", "sha256": "abd3204a1b86c1de4de1c08845be70a1e1723ff7aeaf35d91f7f6d3bdc6183b6"}, "downloads": -1, "filename": "sdap_ingest_manager-0.3.0rc2-py3-none-any.whl", "has_sig": false, "md5_digest": "c2b2ed51c64306ac04a5ac87e1b52a02", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3882672, "upload_time": "2020-04-28T20:46:36", "upload_time_iso_8601": "2020-04-28T20:46:36.819713Z", "url": "https://files.pythonhosted.org/packages/8b/01/1c9ef0a63d57cc0b1474fa6d6a8c8a444690f0895a64eca0e6839133e93c/sdap_ingest_manager-0.3.0rc2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5a3ecb6a0d99a07d14ab97738155d24", "sha256": "d3e67e4b798cb57b0fd8f108d5b92d52820575808742dbf25ad696f66a732cf3"}, "downloads": -1, "filename": "sdap_ingest_manager-0.3.0rc2.tar.gz", "has_sig": false, "md5_digest": "b5a3ecb6a0d99a07d14ab97738155d24", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1945667, "upload_time": "2020-04-28T20:46:38", "upload_time_iso_8601": "2020-04-28T20:46:38.482096Z", "url": "https://files.pythonhosted.org/packages/91/4d/8e626fdc83b802127a36e07ce70da38f2dc40facb4408edb7cf0b6ad191f/sdap_ingest_manager-0.3.0rc2.tar.gz", "yanked": false}], "0.3.0rc3": [{"comment_text": "", "digests": {"md5": "fe98df4d0fa624f6dd4d4129d4812e56", "sha256": "2715511249a76c55851ed70ad0f55a503ab6aab1c495bac573703e69928d76b5"}, "downloads": -1, "filename": "sdap_ingest_manager-0.3.0rc3-py3-none-any.whl", "has_sig": false, "md5_digest": "fe98df4d0fa624f6dd4d4129d4812e56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3883936, "upload_time": "2020-05-05T00:50:38", "upload_time_iso_8601": "2020-05-05T00:50:38.889656Z", "url": "https://files.pythonhosted.org/packages/69/00/d8bb7c1c61f0ab1a96146ed4cdbd2580b580d89d9fb0a8c179fd5be1a6a1/sdap_ingest_manager-0.3.0rc3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f10acfc0dc9be53d1f902a300a38057d", "sha256": "74cc805a44b2506a9442e9b3d636d3ed5a69bc4054672e12e2ea4622f972d58c"}, "downloads": -1, "filename": "sdap_ingest_manager-0.3.0rc3.tar.gz", "has_sig": false, "md5_digest": "f10acfc0dc9be53d1f902a300a38057d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1945815, "upload_time": "2020-05-05T00:50:45", "upload_time_iso_8601": "2020-05-05T00:50:45.229423Z", "url": "https://files.pythonhosted.org/packages/78/ea/1a9fe139dfa12fcd2f1007847153ab45ebe123758719fdbfa633f15bafc5/sdap_ingest_manager-0.3.0rc3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fe98df4d0fa624f6dd4d4129d4812e56", "sha256": "2715511249a76c55851ed70ad0f55a503ab6aab1c495bac573703e69928d76b5"}, "downloads": -1, "filename": "sdap_ingest_manager-0.3.0rc3-py3-none-any.whl", "has_sig": false, "md5_digest": "fe98df4d0fa624f6dd4d4129d4812e56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3883936, "upload_time": "2020-05-05T00:50:38", "upload_time_iso_8601": "2020-05-05T00:50:38.889656Z", "url": "https://files.pythonhosted.org/packages/69/00/d8bb7c1c61f0ab1a96146ed4cdbd2580b580d89d9fb0a8c179fd5be1a6a1/sdap_ingest_manager-0.3.0rc3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f10acfc0dc9be53d1f902a300a38057d", "sha256": "74cc805a44b2506a9442e9b3d636d3ed5a69bc4054672e12e2ea4622f972d58c"}, "downloads": -1, "filename": "sdap_ingest_manager-0.3.0rc3.tar.gz", "has_sig": false, "md5_digest": "f10acfc0dc9be53d1f902a300a38057d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1945815, "upload_time": "2020-05-05T00:50:45", "upload_time_iso_8601": "2020-05-05T00:50:45.229423Z", "url": "https://files.pythonhosted.org/packages/78/ea/1a9fe139dfa12fcd2f1007847153ab45ebe123758719fdbfa633f15bafc5/sdap_ingest_manager-0.3.0rc3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:21 2020"}