{"info": {"author": "Henry Chang", "author_email": "mr.changyuheng@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# aioconfig\n\n`aioconfig` **efficiently** and **thread-safely** stores configurations in the\nbackground (**asynchronously**).\n\n## Installation\n\n```sh\npip install aioconfig\n```\n\n## Usage\n\nThe interface of `aioconfig` is dramatically easy to use.\nFor example, both `set(key, value)` and `await set(key, value)` store a pair of\nkey/value, which the former one is a fire-and-forget asynchronous function call\nwhile the latter one blocks until the data written onto the disk.\n\n### Init\n\n```py\nimport aioconfig\nstorage = aioconfig.get_storage(await aioconfig.attach('example.db'))\nsection = await aioconfig.get('default')\n```\n\n### Delete\n\n```py\nsection.delete(key='foo')\n```\n\n#### Blocking delete (wait until it's done)\n\n```py\nawait section.delete(key='foo')\n```\n\n### Get\n\n```py\nvalue1 = await section.get(key='foo', default='bar')\nvalue2 = await section.get(key='baz', default=12.3)\n```\n\n### Get all\n\n```py\nvalue = await section.get_all()\n```\n\n### Set (fire-and-forget)\n\n```py\nsection.set(key='foo', value='bar')\nsection.set(key='baz', value=12.3)\n```\n\n#### Blocking set (wait until it's done)\n\n```py\nawait section.set(key='foo', value='bar')\nawait section.set(key='baz', value=12.3)\n```\n\n### Batch set (fire-and-forget) (TBD)\n\n```py\nwith storage.transation():\n    storage.set(\n        key='foo', value='bar',\n        section='default_section')\n    storage.set(\n        key='baz', value=12.3,\n        section='default_section')\n```\n\n#### Blocking batch set (wait until it's done) (TBD)\n\n```py\nasync with storage.transation():\n    storage.set(\n        key='foo', value='bar',\n        section='default_section')\n    storage.set(\n        key='baz', value=12.3,\n        section='default_section')\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/changyuheng/aioconfig", "keywords": "", "license": "MPL-2.0", "maintainer": "", "maintainer_email": "", "name": "aioconfig", "package_url": "https://pypi.org/project/aioconfig/", "platform": "", "project_url": "https://pypi.org/project/aioconfig/", "project_urls": {"Homepage": "https://github.com/changyuheng/aioconfig"}, "release_url": "https://pypi.org/project/aioconfig/0.4.6/", "requires_dist": ["dataset (>=1.1.2,<2.0.0)"], "requires_python": ">=3.5,<4.0", "summary": "", "version": "0.4.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aioconfig</h1>\n<p><code>aioconfig</code> <strong>efficiently</strong> and <strong>thread-safely</strong> stores configurations in the\nbackground (<strong>asynchronously</strong>).</p>\n<h2>Installation</h2>\n<pre>pip install aioconfig\n</pre>\n<h2>Usage</h2>\n<p>The interface of <code>aioconfig</code> is dramatically easy to use.\nFor example, both <code>set(key, value)</code> and <code>await set(key, value)</code> store a pair of\nkey/value, which the former one is a fire-and-forget asynchronous function call\nwhile the latter one blocks until the data written onto the disk.</p>\n<h3>Init</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">aioconfig</span>\n<span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"n\">aioconfig</span><span class=\"o\">.</span><span class=\"n\">get_storage</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">aioconfig</span><span class=\"o\">.</span><span class=\"n\">attach</span><span class=\"p\">(</span><span class=\"s1\">'example.db'</span><span class=\"p\">))</span>\n<span class=\"n\">section</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aioconfig</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'default'</span><span class=\"p\">)</span>\n</pre>\n<h3>Delete</h3>\n<pre><span class=\"n\">section</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span>\n</pre>\n<h4>Blocking delete (wait until it's done)</h4>\n<pre><span class=\"k\">await</span> <span class=\"n\">section</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span>\n</pre>\n<h3>Get</h3>\n<pre><span class=\"n\">value1</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">section</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'bar'</span><span class=\"p\">)</span>\n<span class=\"n\">value2</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">section</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'baz'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mf\">12.3</span><span class=\"p\">)</span>\n</pre>\n<h3>Get all</h3>\n<pre><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">section</span><span class=\"o\">.</span><span class=\"n\">get_all</span><span class=\"p\">()</span>\n</pre>\n<h3>Set (fire-and-forget)</h3>\n<pre><span class=\"n\">section</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'bar'</span><span class=\"p\">)</span>\n<span class=\"n\">section</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'baz'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mf\">12.3</span><span class=\"p\">)</span>\n</pre>\n<h4>Blocking set (wait until it's done)</h4>\n<pre><span class=\"k\">await</span> <span class=\"n\">section</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'bar'</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">section</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'baz'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mf\">12.3</span><span class=\"p\">)</span>\n</pre>\n<h3>Batch set (fire-and-forget) (TBD)</h3>\n<pre><span class=\"k\">with</span> <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">transation</span><span class=\"p\">():</span>\n    <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span>\n        <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'bar'</span><span class=\"p\">,</span>\n        <span class=\"n\">section</span><span class=\"o\">=</span><span class=\"s1\">'default_section'</span><span class=\"p\">)</span>\n    <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span>\n        <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'baz'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mf\">12.3</span><span class=\"p\">,</span>\n        <span class=\"n\">section</span><span class=\"o\">=</span><span class=\"s1\">'default_section'</span><span class=\"p\">)</span>\n</pre>\n<h4>Blocking batch set (wait until it's done) (TBD)</h4>\n<pre><span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">transation</span><span class=\"p\">():</span>\n    <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span>\n        <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'bar'</span><span class=\"p\">,</span>\n        <span class=\"n\">section</span><span class=\"o\">=</span><span class=\"s1\">'default_section'</span><span class=\"p\">)</span>\n    <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span>\n        <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'baz'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mf\">12.3</span><span class=\"p\">,</span>\n        <span class=\"n\">section</span><span class=\"o\">=</span><span class=\"s1\">'default_section'</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6345259, "releases": {"0.4.6": [{"comment_text": "", "digests": {"md5": "349e5aff3e8954f6d72f8124f577291e", "sha256": "c544fa51652a96fa2b3384c17e2b35a03803576fa6e348ddd1ff60a78f0378dd"}, "downloads": -1, "filename": "aioconfig-0.4.6-py3-none-any.whl", "has_sig": false, "md5_digest": "349e5aff3e8954f6d72f8124f577291e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 9142, "upload_time": "2019-12-21T18:01:39", "upload_time_iso_8601": "2019-12-21T18:01:39.588013Z", "url": "https://files.pythonhosted.org/packages/3f/69/9f7c6d1a0d8afebfb5c2cd261c2afdf99e51adfc9a2d5e3a99b0dd161e89/aioconfig-0.4.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4149bc3f2d2acdf9459028820519d8f", "sha256": "53c432100540ccc4d7e929b3fc20e72409dea7e856c2e04f32902c57ef3f041a"}, "downloads": -1, "filename": "aioconfig-0.4.6.tar.gz", "has_sig": false, "md5_digest": "e4149bc3f2d2acdf9459028820519d8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 8683, "upload_time": "2019-12-21T18:01:41", "upload_time_iso_8601": "2019-12-21T18:01:41.082296Z", "url": "https://files.pythonhosted.org/packages/9f/76/23710e5167001d6269a0200bdb0d97a41494fc573444e75b91914c7ad010/aioconfig-0.4.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "349e5aff3e8954f6d72f8124f577291e", "sha256": "c544fa51652a96fa2b3384c17e2b35a03803576fa6e348ddd1ff60a78f0378dd"}, "downloads": -1, "filename": "aioconfig-0.4.6-py3-none-any.whl", "has_sig": false, "md5_digest": "349e5aff3e8954f6d72f8124f577291e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 9142, "upload_time": "2019-12-21T18:01:39", "upload_time_iso_8601": "2019-12-21T18:01:39.588013Z", "url": "https://files.pythonhosted.org/packages/3f/69/9f7c6d1a0d8afebfb5c2cd261c2afdf99e51adfc9a2d5e3a99b0dd161e89/aioconfig-0.4.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4149bc3f2d2acdf9459028820519d8f", "sha256": "53c432100540ccc4d7e929b3fc20e72409dea7e856c2e04f32902c57ef3f041a"}, "downloads": -1, "filename": "aioconfig-0.4.6.tar.gz", "has_sig": false, "md5_digest": "e4149bc3f2d2acdf9459028820519d8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 8683, "upload_time": "2019-12-21T18:01:41", "upload_time_iso_8601": "2019-12-21T18:01:41.082296Z", "url": "https://files.pythonhosted.org/packages/9f/76/23710e5167001d6269a0200bdb0d97a41494fc573444e75b91914c7ad010/aioconfig-0.4.6.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:42 2020"}