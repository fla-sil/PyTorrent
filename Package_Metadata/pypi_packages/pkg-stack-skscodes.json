{"info": {"author": "suyog k sethia", "author_email": "ssethia86@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# stack_ops package     #\n### Author: Suyog K Sethia    ###     \n\nI have created documented package 'pkg_stack' which provides feature 'stack' general functionality, with exception handling. I also threw in unittest, which is runnable after installing package, and it checks sanity of package 'pkg_stack'.      \n\n## Install Package 'pkg_stack' via pip:             ##\n```\npip install pkg-stack-skscodes\n```         \n\n## To Import Package 'pkg_stack':           ##\n```\nimport pkg_stack\n```     \n\n## Find Attributes:      ##\n```\n>>>from pkg_stack.mystack import Stack\n>>>dir(Stack)\n>>>dir(Stack())\n```     \n\n## Find Help:  ##\n```\n>>>help(Stack.from_values)        \nHelp on method from_values in module pkg_stack.mystack:    \n\n from_values(*args) method of builtins.type instance    \n     Construct a Stack from given values.    \n\n    Params:    \n    *args: Integer values to be pushed onto the stack being created.    \n\n    Returns: The newly created Stack object\n```    \n\n```\n>>>help(Stack.pop)\nHelp on function pop in module pkg_stack.mystack:\n\npop(self)\n    Pop a value from the stack.\n\n    Returns: The integer value popped from the stack.\n\n    Raises:\n    StackEmptyError: When trying to pop from empty stack.\n```\n\n### Example: ###   \n```\n>>>from pkg_stack.mystack import Stack                   \n>>>s = Stack.from_values(1,2,3,4)           \n>>>print(s)     \n[1, 2, 3, 4]    \n``` \n\n## Exception Handling:    ##           \n### sample case-1:     ###\n```\n>>>from pkg_stack.mystack import Stack                    \n>>>s = Stack()               \n>>>s.pop()      \nstack is empty.       \n```\n\n### sample case-2:  ###       \n```\n>>>s =Stack.from_values(1,2,3,4,5)            \n>>>s.push(5)      \nstack is full.     \n```\n\n### To see full demo of Package 'pkg_stack' operations in video-like manner:    ###\n```\n>>>import pkg_stack.mystack     \n>>>pkg_stack.mystack.main()         \ndemo begins..\n..  \n.. \n```\n\n### Enjoy! ###   \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pypa/sampleproject", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pkg-stack-skscodes", "package_url": "https://pypi.org/project/pkg-stack-skscodes/", "platform": "", "project_url": "https://pypi.org/project/pkg-stack-skscodes/", "project_urls": {"Homepage": "https://github.com/pypa/sampleproject"}, "release_url": "https://pypi.org/project/pkg-stack-skscodes/0.0.64/", "requires_dist": null, "requires_python": "", "summary": "It is documented package 'pkg_stack' which provides feature 'stack' functionality", "version": "0.0.64", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>stack_ops package</h1>\n<h3>Author: Suyog K Sethia</h3>\n<p>I have created documented package 'pkg_stack' which provides feature 'stack' general functionality, with exception handling. I also threw in unittest, which is runnable after installing package, and it checks sanity of package 'pkg_stack'.</p>\n<h2>Install Package 'pkg_stack' via pip:</h2>\n<pre><code>pip install pkg-stack-skscodes\n</code></pre>\n<h2>To Import Package 'pkg_stack':</h2>\n<pre><code>import pkg_stack\n</code></pre>\n<h2>Find Attributes:</h2>\n<pre><code>&gt;&gt;&gt;from pkg_stack.mystack import Stack\n&gt;&gt;&gt;dir(Stack)\n&gt;&gt;&gt;dir(Stack())\n</code></pre>\n<h2>Find Help:</h2>\n<pre><code>&gt;&gt;&gt;help(Stack.from_values)        \nHelp on method from_values in module pkg_stack.mystack:    \n\n from_values(*args) method of builtins.type instance    \n     Construct a Stack from given values.    \n\n    Params:    \n    *args: Integer values to be pushed onto the stack being created.    \n\n    Returns: The newly created Stack object\n</code></pre>\n<pre><code>&gt;&gt;&gt;help(Stack.pop)\nHelp on function pop in module pkg_stack.mystack:\n\npop(self)\n    Pop a value from the stack.\n\n    Returns: The integer value popped from the stack.\n\n    Raises:\n    StackEmptyError: When trying to pop from empty stack.\n</code></pre>\n<h3>Example:</h3>\n<pre><code>&gt;&gt;&gt;from pkg_stack.mystack import Stack                   \n&gt;&gt;&gt;s = Stack.from_values(1,2,3,4)           \n&gt;&gt;&gt;print(s)     \n[1, 2, 3, 4]    \n</code></pre>\n<h2>Exception Handling:</h2>\n<h3>sample case-1:</h3>\n<pre><code>&gt;&gt;&gt;from pkg_stack.mystack import Stack                    \n&gt;&gt;&gt;s = Stack()               \n&gt;&gt;&gt;s.pop()      \nstack is empty.       \n</code></pre>\n<h3>sample case-2:</h3>\n<pre><code>&gt;&gt;&gt;s =Stack.from_values(1,2,3,4,5)            \n&gt;&gt;&gt;s.push(5)      \nstack is full.     \n</code></pre>\n<h3>To see full demo of Package 'pkg_stack' operations in video-like manner:</h3>\n<pre><code>&gt;&gt;&gt;import pkg_stack.mystack     \n&gt;&gt;&gt;pkg_stack.mystack.main()         \ndemo begins..\n..  \n.. \n</code></pre>\n<h3>Enjoy!</h3>\n\n          </div>"}, "last_serial": 5308325, "releases": {"0.0.64": [{"comment_text": "", "digests": {"md5": "89c8032d3a59fe72163cb978958964bf", "sha256": "1b3f3f4c74e0e56934777065741c2bf9746f8d0eca387b0a6729f3ca13c56618"}, "downloads": -1, "filename": "pkg_stack_skscodes-0.0.64-py3-none-any.whl", "has_sig": false, "md5_digest": "89c8032d3a59fe72163cb978958964bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5672, "upload_time": "2019-05-23T16:50:58", "upload_time_iso_8601": "2019-05-23T16:50:58.643182Z", "url": "https://files.pythonhosted.org/packages/f3/0e/8f669df6edb1917b84432d0a1b380483bc0a12d856f3f931d44686440f6f/pkg_stack_skscodes-0.0.64-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33cd9e65f9b7b2a50b6f0ffaa0a68c13", "sha256": "94de01d732e40cd90fec1d37cb6d8bff4c33f81ad4dfd8b557f37e61382c43ce"}, "downloads": -1, "filename": "pkg-stack-skscodes-0.0.64.tar.gz", "has_sig": false, "md5_digest": "33cd9e65f9b7b2a50b6f0ffaa0a68c13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3859, "upload_time": "2019-05-23T16:51:00", "upload_time_iso_8601": "2019-05-23T16:51:00.618700Z", "url": "https://files.pythonhosted.org/packages/01/7b/a05896d796a833264b16ca4d5829b3f3b9f3388cb50033efdaa5a61eb7c5/pkg-stack-skscodes-0.0.64.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "89c8032d3a59fe72163cb978958964bf", "sha256": "1b3f3f4c74e0e56934777065741c2bf9746f8d0eca387b0a6729f3ca13c56618"}, "downloads": -1, "filename": "pkg_stack_skscodes-0.0.64-py3-none-any.whl", "has_sig": false, "md5_digest": "89c8032d3a59fe72163cb978958964bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5672, "upload_time": "2019-05-23T16:50:58", "upload_time_iso_8601": "2019-05-23T16:50:58.643182Z", "url": "https://files.pythonhosted.org/packages/f3/0e/8f669df6edb1917b84432d0a1b380483bc0a12d856f3f931d44686440f6f/pkg_stack_skscodes-0.0.64-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33cd9e65f9b7b2a50b6f0ffaa0a68c13", "sha256": "94de01d732e40cd90fec1d37cb6d8bff4c33f81ad4dfd8b557f37e61382c43ce"}, "downloads": -1, "filename": "pkg-stack-skscodes-0.0.64.tar.gz", "has_sig": false, "md5_digest": "33cd9e65f9b7b2a50b6f0ffaa0a68c13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3859, "upload_time": "2019-05-23T16:51:00", "upload_time_iso_8601": "2019-05-23T16:51:00.618700Z", "url": "https://files.pythonhosted.org/packages/01/7b/a05896d796a833264b16ca4d5829b3f3b9f3388cb50033efdaa5a61eb7c5/pkg-stack-skscodes-0.0.64.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:48 2020"}