{"info": {"author": "Valentin Lab", "author_email": "valentin.lab@kalysto.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=========================\nkids.cmd\n=========================\n\n.. image:: http://img.shields.io/pypi/v/kids.cmd.svg?style=flat\n   :target: https://pypi.python.org/pypi/kids.cmd/\n   :alt: Latest PyPI version\n\n.. image:: http://img.shields.io/travis/0k/kids.cmd/master.svg?style=flat\n   :target: https://travis-ci.org/0k/kids.cmd/\n   :alt: Travis CI build status\n\n.. image:: http://img.shields.io/coveralls/0k/kids.cmd/master.svg?style=flat\n   :target: https://coveralls.io/r/0k/kids.cmd\n   :alt: Test coverage\n\n\n\n``kids.cmd`` is a Python library providing helpers when writing command\nline utilities in python.\n\nIt's part of 'Kids' (for Keep It Dead Simple) library.\n\n\nMaturity\n========\n\nThis code is in alpha stage. It wasn't tested on Windows. API may change.\nThis is more a draft for an ongoing reflection.\n\nAnd I should add this is probably not ready to show. Although, a lot of these\nfunction are used everyday in my projects and I got sick rewritting them for\nevery project.\n\n\nFeatures\n========\n\nusing ``kids.cmd``:\n\n- Leverage `docopt`_ library to let you write once your help and usage\n  doc, and the parsing will be done automatically from this same\n  description.\n- Uses kids.ansi to provide nice colored output.\n- Nice user input, one key press or more, with built-in menus.\n\nThese assumptions are in the code:\n\n- You don't wan't to mess with parsing the command line and will use\n  standard command line compatible with docopt command line.\n- You like having a very simple paradigm with default behavior that\n  you can learn after.\n\n.. _docopt: http://docopt.org/\n\n\nCompatibility\n=============\n\nTis code is python2 and python3 ready. It wasn't tested on windows.\n\n\nInstallation\n============\n\nYou don't need to download the GIT version of the code as ``kids.cmd`` is\navailable on the PyPI. So you should be able to run::\n\n    pip install kids.cmd\n\nIf you have downloaded the GIT sources, then you could add install\nthe current version via traditional::\n\n    python setup.py install\n\nAnd if you don't have the GIT sources but would like to get the latest\nmaster or branch from github, you could also::\n\n    pip install git+https://github.com/0k/kids.cmd\n\nOr even select a specific revision (branch/tag/commit)::\n\n    pip install git+https://github.com/0k/kids.cmd@master\n\n\nUsage\n=====\n\nTBD\n\n\nContributing\n============\n\nAny suggestion or issue is welcome. Push request are very welcome,\nplease check out the guidelines.\n\n\nPush Request Guidelines\n-----------------------\n\nYou can send any code. I'll look at it and will integrate it myself in\nthe code base and leave you as the author. This process can take time and\nit'll take less time if you follow the following guidelines:\n\n- check your code with PEP8 or pylint. Try to stick to 80 columns wide.\n- separate your commits per smallest concern.\n- each commit should pass the tests (to allow easy bisect)\n- each functionality/bugfix commit should contain the code, tests,\n  and doc.\n- prior minor commit with typographic or code cosmetic changes are\n  very welcome. These should be tagged in their commit summary with\n  ``!minor``.\n- the commit message should follow gitchangelog rules (check the git\n  log to get examples)\n- if the commit fixes an issue or finished the implementation of a\n  feature, please mention it in the summary.\n\nIf you have some questions about guidelines which is not answered here,\nplease check the current ``git log``, you might find previous commit that\nwould show you how to deal with your issue.\n\n\nLicense\n=======\n\nCopyright (c) 2018 Valentin Lab.\n\nLicensed under the `BSD License`_.\n\n.. _BSD License: http://raw.github.com/0k/kids.cmd/master/LICENSE\n\nChangelog\n=========\n\n\n0.0.5 (2018-09-25)\n------------------\n\nNew\n~~~\n- Support of complex ``\\*_DEBUG`` values to fine tune logging. [Valentin\n  Lab]\n\n  Environment variable in ``<exname>_DEBUG`` now supports strings like:\n  \"my.module:DEBUG,my.other.module:WARN\". Of course, logging messages\n  should use python ``logging`` module.\n\nFix\n~~~\n- Better namespacing scheme. [Valentin Lab]\n\n  The previous would import ``pkg_resources`` which could take\n  some linear time depending on the number of installed packages.\n\nOther\n~~~~~\n- Pkg: fix: include LICENSE in final package. [Valentin Lab]\n\n\n0.0.4 (2016-03-03)\n------------------\n\nNew\n~~~\n- [cmd] support finding module even when called through command\n  entrypoints. [Valentin Lab]\n- [cmd] support for discovering module commands in ``pkg_resources``\n  eggs. [Valentin Lab]\n\n  Previously, command were not discovered if your command got packaged to\n  a single file zipped egg.\n\n\n0.0.3 (2015-03-12)\n------------------\n\nNew\n~~~\n- [cmd] add ``exname`` to args ``__env__`` sent to sub commands.\n  [Valentin Lab]\n- [cmd] catches uncaught exception and hide the full traceback except if\n  debug environment variable set. [Valentin Lab]\n\nChanges\n~~~~~~~\n- [cmd] ``.cfg`` provides read/write access to config files. [Valentin\n  Lab]\n\nFix\n~~~\n- [menu] line call would fail because of incorrect call to\n  ``kids.ansi``. [Valentin Lab]\n- Fixed bunch of bugs on argument attribution. [Valentin Lab]\n\n  Added thorough tests on the facility.\n\n\n0.0.2 (2015-02-06)\n------------------\n- First import. [Valentin Lab]\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/0k/kids.cmd", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "kids.cmd", "package_url": "https://pypi.org/project/kids.cmd/", "platform": "", "project_url": "https://pypi.org/project/kids.cmd/", "project_urls": {"Homepage": "http://github.com/0k/kids.cmd"}, "release_url": "https://pypi.org/project/kids.cmd/0.0.5/", "requires_dist": ["docopt", "kids.cache", "kids.file", "kids.data", "kids.txt", "kids.cfg>=0.0.3", "kids.ansi", "kids.common"], "requires_python": "", "summary": "Kids python command line library", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/kids.cmd/\" rel=\"nofollow\"><img alt=\"Latest PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c321c295e57275b991c32e128438fc6a1e8e2e8e/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f6b6964732e636d642e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://travis-ci.org/0k/kids.cmd/\" rel=\"nofollow\"><img alt=\"Travis CI build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cbb41503d6d3260bd99311f60a4a8fbfc9714f9d/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f306b2f6b6964732e636d642f6d61737465722e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://coveralls.io/r/0k/kids.cmd\" rel=\"nofollow\"><img alt=\"Test coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cdda1796d14fe2aa7a1aa167956b8e9ccb8487eb/687474703a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f306b2f6b6964732e636d642f6d61737465722e7376673f7374796c653d666c6174\"></a>\n<p><tt>kids.cmd</tt> is a Python library providing helpers when writing command\nline utilities in python.</p>\n<p>It\u2019s part of \u2018Kids\u2019 (for Keep It Dead Simple) library.</p>\n<div id=\"maturity\">\n<h2>Maturity</h2>\n<p>This code is in alpha stage. It wasn\u2019t tested on Windows. API may change.\nThis is more a draft for an ongoing reflection.</p>\n<p>And I should add this is probably not ready to show. Although, a lot of these\nfunction are used everyday in my projects and I got sick rewritting them for\nevery project.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<p>using <tt>kids.cmd</tt>:</p>\n<ul>\n<li>Leverage <a href=\"http://docopt.org/\" rel=\"nofollow\">docopt</a> library to let you write once your help and usage\ndoc, and the parsing will be done automatically from this same\ndescription.</li>\n<li>Uses kids.ansi to provide nice colored output.</li>\n<li>Nice user input, one key press or more, with built-in menus.</li>\n</ul>\n<p>These assumptions are in the code:</p>\n<ul>\n<li>You don\u2019t wan\u2019t to mess with parsing the command line and will use\nstandard command line compatible with docopt command line.</li>\n<li>You like having a very simple paradigm with default behavior that\nyou can learn after.</li>\n</ul>\n</div>\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<p>Tis code is python2 and python3 ready. It wasn\u2019t tested on windows.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You don\u2019t need to download the GIT version of the code as <tt>kids.cmd</tt> is\navailable on the PyPI. So you should be able to run:</p>\n<pre>pip install kids.cmd\n</pre>\n<p>If you have downloaded the GIT sources, then you could add install\nthe current version via traditional:</p>\n<pre>python setup.py install\n</pre>\n<p>And if you don\u2019t have the GIT sources but would like to get the latest\nmaster or branch from github, you could also:</p>\n<pre>pip install git+https://github.com/0k/kids.cmd\n</pre>\n<p>Or even select a specific revision (branch/tag/commit):</p>\n<pre>pip install git+https://github.com/0k/kids.cmd@master\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>TBD</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Any suggestion or issue is welcome. Push request are very welcome,\nplease check out the guidelines.</p>\n<div id=\"push-request-guidelines\">\n<h3>Push Request Guidelines</h3>\n<p>You can send any code. I\u2019ll look at it and will integrate it myself in\nthe code base and leave you as the author. This process can take time and\nit\u2019ll take less time if you follow the following guidelines:</p>\n<ul>\n<li>check your code with PEP8 or pylint. Try to stick to 80 columns wide.</li>\n<li>separate your commits per smallest concern.</li>\n<li>each commit should pass the tests (to allow easy bisect)</li>\n<li>each functionality/bugfix commit should contain the code, tests,\nand doc.</li>\n<li>prior minor commit with typographic or code cosmetic changes are\nvery welcome. These should be tagged in their commit summary with\n<tt>!minor</tt>.</li>\n<li>the commit message should follow gitchangelog rules (check the git\nlog to get examples)</li>\n<li>if the commit fixes an issue or finished the implementation of a\nfeature, please mention it in the summary.</li>\n</ul>\n<p>If you have some questions about guidelines which is not answered here,\nplease check the current <tt>git log</tt>, you might find previous commit that\nwould show you how to deal with your issue.</p>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (c) 2018 Valentin Lab.</p>\n<p>Licensed under the <a href=\"http://raw.github.com/0k/kids.cmd/master/LICENSE\" rel=\"nofollow\">BSD License</a>.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.0.5 (2018-09-25)</h3>\n<div id=\"new\">\n<h4>New</h4>\n<ul>\n<li><p>Support of complex <tt>\\*_DEBUG</tt> values to fine tune logging. [Valentin\nLab]</p>\n<p>Environment variable in <tt>&lt;exname&gt;_DEBUG</tt> now supports strings like:\n\u201cmy.module:DEBUG,my.other.module:WARN\u201d. Of course, logging messages\nshould use python <tt>logging</tt> module.</p>\n</li>\n</ul>\n</div>\n<div id=\"fix\">\n<h4>Fix</h4>\n<ul>\n<li><p>Better namespacing scheme. [Valentin Lab]</p>\n<p>The previous would import <tt>pkg_resources</tt> which could take\nsome linear time depending on the number of installed packages.</p>\n</li>\n</ul>\n</div>\n<div id=\"other\">\n<h4>Other</h4>\n<ul>\n<li>Pkg: fix: include LICENSE in final package. [Valentin Lab]</li>\n</ul>\n</div>\n</div>\n<div id=\"id2\">\n<h3>0.0.4 (2016-03-03)</h3>\n<h3 id=\"id3\"><span class=\"section-subtitle\">New</span></h3>\n<ul>\n<li><p>[cmd] support finding module even when called through command\nentrypoints. [Valentin Lab]</p>\n</li>\n<li><p>[cmd] support for discovering module commands in <tt>pkg_resources</tt>\neggs. [Valentin Lab]</p>\n<p>Previously, command were not discovered if your command got packaged to\na single file zipped egg.</p>\n</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.0.3 (2015-03-12)</h3>\n<div id=\"id5\">\n<h4>New</h4>\n<ul>\n<li>[cmd] add <tt>exname</tt> to args <tt>__env__</tt> sent to sub commands.\n[Valentin Lab]</li>\n<li>[cmd] catches uncaught exception and hide the full traceback except if\ndebug environment variable set. [Valentin Lab]</li>\n</ul>\n</div>\n<div id=\"changes\">\n<h4>Changes</h4>\n<ul>\n<li>[cmd] <tt>.cfg</tt> provides read/write access to config files. [Valentin\nLab]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h4>Fix</h4>\n<ul>\n<li><p>[menu] line call would fail because of incorrect call to\n<tt>kids.ansi</tt>. [Valentin Lab]</p>\n</li>\n<li><p>Fixed bunch of bugs on argument attribution. [Valentin Lab]</p>\n<p>Added thorough tests on the facility.</p>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"id7\">\n<h3>0.0.2 (2015-02-06)</h3>\n<ul>\n<li>First import. [Valentin Lab]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4308504, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7b09f6f225bbd92d7e49d4102e5aa488", "sha256": "a71573861269df652e05613bead8642f32865f430b58289255dabc10df8f1041"}, "downloads": -1, "filename": "kids.cmd-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7b09f6f225bbd92d7e49d4102e5aa488", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9649, "upload_time": "2015-02-05T07:46:22", "upload_time_iso_8601": "2015-02-05T07:46:22.314182Z", "url": "https://files.pythonhosted.org/packages/43/70/de613cceea318ab022a6c9b63447fceb04c832984133dc7cde1a032c12af/kids.cmd-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d50d4ad535a53e8cc7ac2eb99f4f84f5", "sha256": "81c09ceeea849aa194d88f499caf4aa385dc6e7ee4fb23dc829d8c3640d0c2fd"}, "downloads": -1, "filename": "kids.cmd-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d50d4ad535a53e8cc7ac2eb99f4f84f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9634, "upload_time": "2015-02-06T08:36:18", "upload_time_iso_8601": "2015-02-06T08:36:18.759669Z", "url": "https://files.pythonhosted.org/packages/53/1e/40c82e420e43e9953389a2d516127fbafe774e085ecdaadaf77cf91919df/kids.cmd-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "d415492f3f7ebf218c1b0f07d3c10b03", "sha256": "248588186c0910ec3f0d79c85f3816a6cafd004b48e4ab3c079c63318407f4e7"}, "downloads": -1, "filename": "kids.cmd-0.0.3.tar.gz", "has_sig": false, "md5_digest": "d415492f3f7ebf218c1b0f07d3c10b03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10815, "upload_time": "2015-03-12T07:31:17", "upload_time_iso_8601": "2015-03-12T07:31:17.225812Z", "url": "https://files.pythonhosted.org/packages/b8/67/8199c4c3ded14e4ceb37f88b1fc4b495fbcd5956ba5548017a62ca352957/kids.cmd-0.0.3.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "ff009e0675382e19dcca6e8a0931f271", "sha256": "79b773c88aaa0973a7a12474e898c7c704a8600ac2d19b689610aa90e0283e20"}, "downloads": -1, "filename": "kids.cmd-0.0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "ff009e0675382e19dcca6e8a0931f271", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15156, "upload_time": "2018-09-25T13:45:52", "upload_time_iso_8601": "2018-09-25T13:45:52.065574Z", "url": "https://files.pythonhosted.org/packages/13/8b/6708ed137c62a48af528928d16889e03b50ee91e3b7fda3f9ad38156cd03/kids.cmd-0.0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e414e79302589620f12e8e87ab5181c7", "sha256": "80e33ac2e8fd08bac19c5d6ca9271e990ab04491f87fd579337aae2b6519d9b0"}, "downloads": -1, "filename": "kids.cmd-0.0.5.tar.gz", "has_sig": false, "md5_digest": "e414e79302589620f12e8e87ab5181c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14487, "upload_time": "2018-09-25T13:45:53", "upload_time_iso_8601": "2018-09-25T13:45:53.432393Z", "url": "https://files.pythonhosted.org/packages/78/cf/de61c524f69935b2560fa912a0bca559ddcee5a20e05fd859e4cee36e227/kids.cmd-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ff009e0675382e19dcca6e8a0931f271", "sha256": "79b773c88aaa0973a7a12474e898c7c704a8600ac2d19b689610aa90e0283e20"}, "downloads": -1, "filename": "kids.cmd-0.0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "ff009e0675382e19dcca6e8a0931f271", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15156, "upload_time": "2018-09-25T13:45:52", "upload_time_iso_8601": "2018-09-25T13:45:52.065574Z", "url": "https://files.pythonhosted.org/packages/13/8b/6708ed137c62a48af528928d16889e03b50ee91e3b7fda3f9ad38156cd03/kids.cmd-0.0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e414e79302589620f12e8e87ab5181c7", "sha256": "80e33ac2e8fd08bac19c5d6ca9271e990ab04491f87fd579337aae2b6519d9b0"}, "downloads": -1, "filename": "kids.cmd-0.0.5.tar.gz", "has_sig": false, "md5_digest": "e414e79302589620f12e8e87ab5181c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14487, "upload_time": "2018-09-25T13:45:53", "upload_time_iso_8601": "2018-09-25T13:45:53.432393Z", "url": "https://files.pythonhosted.org/packages/78/cf/de61c524f69935b2560fa912a0bca559ddcee5a20e05fd859e4cee36e227/kids.cmd-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:47 2020"}