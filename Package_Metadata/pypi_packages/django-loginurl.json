{"info": {"author": "Fajran Iman Rusadi", "author_email": "fajran@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "================\nDjango Login URL\n================\n\nThis is a simple application for Django that allows an anonymous visitor to\nlog in as a user by only visiting a URL. \n\nBy default, the URL is only valid once and cannot be used multiple times.\nOther schemes that involve the number of visit and/or an expiry date can\nalso be created. For example, it is possible to create a log in URL that\nonly valid for 5 visits before next week using this application.\n\n\nConfiguration\n-------------\n\n1. Add django-loginurl application into your Django project. Modify your\n   ``settings.py`` like the following::\n\n        INSTALLED_APPS = (\n            ...\n            'loginurl',\n            ...\n        )\n\n2. Add the authentication backend of this django-loginurl application to\n   your project's ``settings.py``.\n   ::\n\n        AUTHENTICATION_BACKENDS = (\n            'django.contrib.auth.backends.ModelBackend',\n            'loginurl.backends.LoginUrlBackend',\n        )\n   \n   The first authentication backend is the default and if your project uses\n   the Django's standard authentication mechanism, you will need that.\n\n   Consult the Django documentation for more information regarding the\n   backend. See\n   http://docs.djangoproject.com/en/dev/topics/auth/#other-authentication-sources\n\n\n3. Include the application's ``urls.py`` to your project.\n   ::\n\n        urlpatterns = patterns('',\n            ...\n            (r'^loginurl/', include('loginurl.urls')),\n            ...\n        )\n    \n   This will make requests to ``loginurl/`` are handled by django-loginurl.\n   If the configuration is put inside the project's ``urls.py``, the log in\n   URL will look like the following::\n\n       http://example.com/loginurl/a-secret-key\n\n\nScheduled Task\n--------------\n\nTo keep your database clean from expired secret keys, a scheduled task need\nto be set up. This task should do one of the following.\n\n1. Call ``loginurl_cleanup`` command from the Django's management script, or\n\n2. Open a special URL that will trigger the clean up, ``loginurl/cleanup/``.\n   e.g. http://example.com/loginurl/cleanup/\n\nYou can use crontab or the web based one to set this up. A daily or weekly\ntask should be enough.\n\n\nUsage\n-----\n\nIf your application need to create a one time log in URL, what you need to\ndo is calling ``loginurl.utils.create`` with a user object as the parameter.\nThe resulting object is an instance of ``loginurl.models.Key`` that has a\nproperty called ``key`` that contains a unique key for the log in URL.\n::\n\n    import loginurl.utils\n\n    def create_login_url(user):\n        key = loginurl.utils.create(user)\n        url = 'http://example.com/loginurl/%s' % key.key\n\n        return url\n\n\nAcknowledgement\n---------------\n\nThis code has been developed in the context of the research activities of the\nFET project (Grant agreement no. 231807).\n\n    Epiwork: developing the framework for an epidemic forecast infrastructure.\n\nSee http://www.epiwork.eu/", "description_content_type": null, "docs_url": null, "download_url": "http://github.com/fajran/django-loginurl/tarball/v0.2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/fajran/django-loginurl/", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-loginurl", "package_url": "https://pypi.org/project/django-loginurl/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-loginurl/", "project_urls": {"Download": "http://github.com/fajran/django-loginurl/tarball/v0.2", "Homepage": "http://github.com/fajran/django-loginurl/"}, "release_url": "https://pypi.org/project/django-loginurl/0.2/", "requires_dist": null, "requires_python": null, "summary": "Allowing an anonymous user to log in by only visiting a URL", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a simple application for Django that allows an anonymous visitor to\nlog in as a user by only visiting a URL.</p>\n<p>By default, the URL is only valid once and cannot be used multiple times.\nOther schemes that involve the number of visit and/or an expiry date can\nalso be created. For example, it is possible to create a log in URL that\nonly valid for 5 visits before next week using this application.</p>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<ol>\n<li><p>Add django-loginurl application into your Django project. Modify your\n<tt>settings.py</tt> like the following:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'loginurl',\n    ...\n)\n</pre>\n</li>\n<li><p>Add the authentication backend of this django-loginurl application to\nyour project\u2019s <tt>settings.py</tt>.</p>\n<pre>AUTHENTICATION_BACKENDS = (\n    'django.contrib.auth.backends.ModelBackend',\n    'loginurl.backends.LoginUrlBackend',\n)\n</pre>\n<p>The first authentication backend is the default and if your project uses\nthe Django\u2019s standard authentication mechanism, you will need that.</p>\n<p>Consult the Django documentation for more information regarding the\nbackend. See\n<a href=\"http://docs.djangoproject.com/en/dev/topics/auth/#other-authentication-sources\" rel=\"nofollow\">http://docs.djangoproject.com/en/dev/topics/auth/#other-authentication-sources</a></p>\n</li>\n<li><p>Include the application\u2019s <tt>urls.py</tt> to your project.</p>\n<pre>urlpatterns = patterns('',\n    ...\n    (r'^loginurl/', include('loginurl.urls')),\n    ...\n)\n</pre>\n<p>This will make requests to <tt>loginurl/</tt> are handled by django-loginurl.\nIf the configuration is put inside the project\u2019s <tt>urls.py</tt>, the log in\nURL will look like the following:</p>\n<pre>http://example.com/loginurl/a-secret-key\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"scheduled-task\">\n<h2>Scheduled Task</h2>\n<p>To keep your database clean from expired secret keys, a scheduled task need\nto be set up. This task should do one of the following.</p>\n<ol>\n<li>Call <tt>loginurl_cleanup</tt> command from the Django\u2019s management script, or</li>\n<li>Open a special URL that will trigger the clean up, <tt>loginurl/cleanup/</tt>.\ne.g. <a href=\"http://example.com/loginurl/cleanup/\" rel=\"nofollow\">http://example.com/loginurl/cleanup/</a></li>\n</ol>\n<p>You can use crontab or the web based one to set this up. A daily or weekly\ntask should be enough.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>If your application need to create a one time log in URL, what you need to\ndo is calling <tt>loginurl.utils.create</tt> with a user object as the parameter.\nThe resulting object is an instance of <tt>loginurl.models.Key</tt> that has a\nproperty called <tt>key</tt> that contains a unique key for the log in URL.</p>\n<pre>import loginurl.utils\n\ndef create_login_url(user):\n    key = loginurl.utils.create(user)\n    url = 'http://example.com/loginurl/%s' % key.key\n\n    return url\n</pre>\n</div>\n<div id=\"acknowledgement\">\n<h2>Acknowledgement</h2>\n<p>This code has been developed in the context of the research activities of the\nFET project (Grant agreement no. 231807).</p>\n<blockquote>\nEpiwork: developing the framework for an epidemic forecast infrastructure.</blockquote>\n<p>See <a href=\"http://www.epiwork.eu/\" rel=\"nofollow\">http://www.epiwork.eu/</a></p>\n</div>\n\n          </div>"}, "last_serial": 823845, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "1cf9ec3feb743d48e4e60ea18c0fa06a", "sha256": "10be6cf964bb74e81bc8883667c2e3ab7490541cc8d6fc7b6fa9d40370d9671c"}, "downloads": -1, "filename": "django-loginurl-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1cf9ec3feb743d48e4e60ea18c0fa06a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5974, "upload_time": "2010-01-28T20:23:34", "upload_time_iso_8601": "2010-01-28T20:23:34.907213Z", "url": "https://files.pythonhosted.org/packages/87/00/78159a9d92c8c2095bd87fb0c90945621a37d9b0b916a830a30def9bf4e1/django-loginurl-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "ea842fc8ffd0091b004caa1b7d91b6d9", "sha256": "50acb93b2e6bb63fcac1871daaf1cc4f5bf09a83365aaf819276e6d90414edd8"}, "downloads": -1, "filename": "django-loginurl-0.1.3.tar.gz", "has_sig": false, "md5_digest": "ea842fc8ffd0091b004caa1b7d91b6d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7691, "upload_time": "2010-01-31T12:08:18", "upload_time_iso_8601": "2010-01-31T12:08:18.155773Z", "url": "https://files.pythonhosted.org/packages/db/b8/701a0eac9a20c9161909934e38c8d8bcbbda362210ff84c07c0a60019f47/django-loginurl-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "d83a5c3880051877cc33a8b0df1c6c3b", "sha256": "473e849f963f9c6aa353b8c881fc13e578612ab37b02484de5a65f7a8eba95f5"}, "downloads": -1, "filename": "django-loginurl-0.1.4.tar.gz", "has_sig": false, "md5_digest": "d83a5c3880051877cc33a8b0df1c6c3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7829, "upload_time": "2011-09-02T09:54:55", "upload_time_iso_8601": "2011-09-02T09:54:55.700158Z", "url": "https://files.pythonhosted.org/packages/a0/23/fe0d87fa73eeb305076461d03d4df5f2577bb6a5aae4fcc88100b158f07f/django-loginurl-0.1.4.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "0b9ac5814168c8e2e65ec21f4c216908", "sha256": "69d2e2246ce7219e6a4717bbfea52b77292d0d2f691d814637ed7c584fc81c96"}, "downloads": -1, "filename": "django-loginurl-0.2.tar.gz", "has_sig": false, "md5_digest": "0b9ac5814168c8e2e65ec21f4c216908", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8068, "upload_time": "2013-07-24T11:08:23", "upload_time_iso_8601": "2013-07-24T11:08:23.792709Z", "url": "https://files.pythonhosted.org/packages/0b/6c/b59ac061fbff1c4e38d2261f93b26a74141cbe34fc225366d8df8d603f05/django-loginurl-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0b9ac5814168c8e2e65ec21f4c216908", "sha256": "69d2e2246ce7219e6a4717bbfea52b77292d0d2f691d814637ed7c584fc81c96"}, "downloads": -1, "filename": "django-loginurl-0.2.tar.gz", "has_sig": false, "md5_digest": "0b9ac5814168c8e2e65ec21f4c216908", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8068, "upload_time": "2013-07-24T11:08:23", "upload_time_iso_8601": "2013-07-24T11:08:23.792709Z", "url": "https://files.pythonhosted.org/packages/0b/6c/b59ac061fbff1c4e38d2261f93b26a74141cbe34fc225366d8df8d603f05/django-loginurl-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:16 2020"}