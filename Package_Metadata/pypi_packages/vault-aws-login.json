{"info": {"author": "Ezequiel Rosas", "author_email": "ezequiel.rosas@digitalonus.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# vault-aws-login\nStay authenticated in awscli with vault\nwithout affecting other profiles that you wish to keep un-managed.\n\n## Installation & Running\n\n- Make sure [consul-template](https://github.com/hashicorp/consul-template) is installed and in your `$PATH`\n- Run `pip3 install --upgrade vault-aws-login`\n- Run `wget -O - https://nhtzr.github.io/vault-aws-login/vault-aws-config.tgz | tar -C \"$HOME\" -zxf -`\n- Update `~/.vault-aws/config` with:\n    ```\n    [default]\n    vault_addr = https://vault.engineering.armory.io\n    #      (overrides your current VAULT_ADDR env var.)\n    #      (leave it empty if you dont want such thing to happen)\n    vault_login_method = <your auth type to vault>\n    #      Type of authentication to use such as \"userpass\" or \"ldap\". Note this\n    #      corresponds to the TYPE, not the enabled path. Use -path to specify the\n    #      path where the authentication is enabled. The default is token.\n    #      (leave it empty if you dont want this parameter)\n    #      (use extra_vl_flags = [\"-path\", \"/your/path\"] fort the given example above)\n    vault_login_username = <your vault username>\n    #      The -method flag allows using other auth methods, such as userpass, github, or\n    #      cert. For these, additional \"K=V\" pairs may be required. For example, to\n    #      authenticate to the userpass auth method:\n    #      $ vault login -method=userpass username=my-username\n    #      (vault_login_<K> = <V> is also valid for K=V pairs other than username)\n    ```\n\nAssuming you have aws credentials under the vault secret `/aws/dev/sts/admin` and you\nwant to have them available to you under the aws-profile `dev`, run this command:\n\n```\nvault-aws-login -l dev &\n```\n\nThis will keep consul-template running in the background keeping your `dev` aws-profile credentials\nupdated and valid. `aws --profile dev sts get-caller-identity` can help you double-check this.\n\n## Overrides, Template, and Configs\n\nAs you can see, the `-l`/`--login` flag (login_id) conflates both the resulting aws-profile name and\nthe source vault secret which is a convenient convention, but it is not always ideal.\nYou can override both the aws-profile and vault secret that will correspond to a given login_id by\nadding a `login_override` section in your `~/.vault-aws-login/confg` file:\n\n```\n[login_override dev_as_default]\naws_profile_name = default\nvault_secret_path = /aws/dev/sts/admin\n```\n\nLikewise, the `login_template` describe the generic values that correspond to each login_id:\n\n```\n[login_template]\naws_profile_name = %(login_id)s\nvault_secret_path = /aws/%(login_id)s/sts/admin\n```\n\nBoth the template and overrides are implemented by python3's [ConfigParser.BasicInterpolation](https://docs.python.org/3/library/configparser.html#configparser.BasicInterpolation) and [ConfigParser.get(vars=overrides)](https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.get)\n\nThe above means both that\n* A property in `login_template` can depend on a property in `login_override`, and viceversa.\n* In case of a name clash, the property in `login_override` has higher priority\n\nThis allows the templates to render on arbitrary data, and not just the corresponding login_id\n(Note: `login_id` is populated by the script itself, so it cannot be overridden)\n\nThe `[default]` config profile section contains the properties that the main script will use.\nMost importantly the args given `vault login`, and the `-l`/`--login`/login_ids you want by default.\nYou can choose to take those properties from any other section by using the `-p`/`--profile` flag,\nand you can use a completely different config file with the `-c`/`--config` flag as well.\n\nFor consul-template specific configs, you can modify `~/.vault-aws-config/credentials.hcl`\nif you want to fine-tune its behavior. There's also the `~/.vault-aws-config/config` option named\n`extra_ct_flags` in the config profile section (.i.e `[default]`) in case you want to add extra flags like `-once`.\nIf you want to keep multiple `credentials.hcl` files, you might want to setup `consul_template_hcl`\nto different values in different config profile sections\n\n# Code overview\n\nThe general workflow of this script is:\n0. Log into vault if `vault token lookup` fails.\n1. Generate the following json and invoke consult-template:\n    ```\n    [{ 'aws_profile_name': 'dev'\n       'vault_secret_path': '/aws/sts/admin' }, .. ]\n    ```\n2. consul-template generates the following credentials file and invokes aws_credentials_merge:\n    ```\n    [dev]\n    aws_access_key_id = <info from vault>\n    aws_secret_access_key = <info from vault>\n    aws_session_token = <info from vault>\n    ```\n3. aws_credentials_merge takes this new credentials and merges them into `~/.aws/credentials`.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nhtzr/vault-aws-login", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "vault-aws-login", "package_url": "https://pypi.org/project/vault-aws-login/", "platform": "", "project_url": "https://pypi.org/project/vault-aws-login/", "project_urls": {"Homepage": "https://github.com/nhtzr/vault-aws-login"}, "release_url": "https://pypi.org/project/vault-aws-login/0.0.4/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Stay authenticated in awscli with vault", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>vault-aws-login</h1>\n<p>Stay authenticated in awscli with vault\nwithout affecting other profiles that you wish to keep un-managed.</p>\n<h2>Installation &amp; Running</h2>\n<ul>\n<li>Make sure <a href=\"https://github.com/hashicorp/consul-template\" rel=\"nofollow\">consul-template</a> is installed and in your <code>$PATH</code></li>\n<li>Run <code>pip3 install --upgrade vault-aws-login</code></li>\n<li>Run <code>wget -O - https://nhtzr.github.io/vault-aws-login/vault-aws-config.tgz | tar -C \"$HOME\" -zxf -</code></li>\n<li>Update <code>~/.vault-aws/config</code> with:\n<pre><code>[default]\nvault_addr = https://vault.engineering.armory.io\n#      (overrides your current VAULT_ADDR env var.)\n#      (leave it empty if you dont want such thing to happen)\nvault_login_method = &lt;your auth type to vault&gt;\n#      Type of authentication to use such as \"userpass\" or \"ldap\". Note this\n#      corresponds to the TYPE, not the enabled path. Use -path to specify the\n#      path where the authentication is enabled. The default is token.\n#      (leave it empty if you dont want this parameter)\n#      (use extra_vl_flags = [\"-path\", \"/your/path\"] fort the given example above)\nvault_login_username = &lt;your vault username&gt;\n#      The -method flag allows using other auth methods, such as userpass, github, or\n#      cert. For these, additional \"K=V\" pairs may be required. For example, to\n#      authenticate to the userpass auth method:\n#      $ vault login -method=userpass username=my-username\n#      (vault_login_&lt;K&gt; = &lt;V&gt; is also valid for K=V pairs other than username)\n</code></pre>\n</li>\n</ul>\n<p>Assuming you have aws credentials under the vault secret <code>/aws/dev/sts/admin</code> and you\nwant to have them available to you under the aws-profile <code>dev</code>, run this command:</p>\n<pre><code>vault-aws-login -l dev &amp;\n</code></pre>\n<p>This will keep consul-template running in the background keeping your <code>dev</code> aws-profile credentials\nupdated and valid. <code>aws --profile dev sts get-caller-identity</code> can help you double-check this.</p>\n<h2>Overrides, Template, and Configs</h2>\n<p>As you can see, the <code>-l</code>/<code>--login</code> flag (login_id) conflates both the resulting aws-profile name and\nthe source vault secret which is a convenient convention, but it is not always ideal.\nYou can override both the aws-profile and vault secret that will correspond to a given login_id by\nadding a <code>login_override</code> section in your <code>~/.vault-aws-login/confg</code> file:</p>\n<pre><code>[login_override dev_as_default]\naws_profile_name = default\nvault_secret_path = /aws/dev/sts/admin\n</code></pre>\n<p>Likewise, the <code>login_template</code> describe the generic values that correspond to each login_id:</p>\n<pre><code>[login_template]\naws_profile_name = %(login_id)s\nvault_secret_path = /aws/%(login_id)s/sts/admin\n</code></pre>\n<p>Both the template and overrides are implemented by python3's <a href=\"https://docs.python.org/3/library/configparser.html#configparser.BasicInterpolation\" rel=\"nofollow\">ConfigParser.BasicInterpolation</a> and <a href=\"https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.get\" rel=\"nofollow\">ConfigParser.get(vars=overrides)</a></p>\n<p>The above means both that</p>\n<ul>\n<li>A property in <code>login_template</code> can depend on a property in <code>login_override</code>, and viceversa.</li>\n<li>In case of a name clash, the property in <code>login_override</code> has higher priority</li>\n</ul>\n<p>This allows the templates to render on arbitrary data, and not just the corresponding login_id\n(Note: <code>login_id</code> is populated by the script itself, so it cannot be overridden)</p>\n<p>The <code>[default]</code> config profile section contains the properties that the main script will use.\nMost importantly the args given <code>vault login</code>, and the <code>-l</code>/<code>--login</code>/login_ids you want by default.\nYou can choose to take those properties from any other section by using the <code>-p</code>/<code>--profile</code> flag,\nand you can use a completely different config file with the <code>-c</code>/<code>--config</code> flag as well.</p>\n<p>For consul-template specific configs, you can modify <code>~/.vault-aws-config/credentials.hcl</code>\nif you want to fine-tune its behavior. There's also the <code>~/.vault-aws-config/config</code> option named\n<code>extra_ct_flags</code> in the config profile section (.i.e <code>[default]</code>) in case you want to add extra flags like <code>-once</code>.\nIf you want to keep multiple <code>credentials.hcl</code> files, you might want to setup <code>consul_template_hcl</code>\nto different values in different config profile sections</p>\n<h1>Code overview</h1>\n<p>The general workflow of this script is:\n0. Log into vault if <code>vault token lookup</code> fails.</p>\n<ol>\n<li>Generate the following json and invoke consult-template:\n<pre><code>[{ 'aws_profile_name': 'dev'\n   'vault_secret_path': '/aws/sts/admin' }, .. ]\n</code></pre>\n</li>\n<li>consul-template generates the following credentials file and invokes aws_credentials_merge:\n<pre><code>[dev]\naws_access_key_id = &lt;info from vault&gt;\naws_secret_access_key = &lt;info from vault&gt;\naws_session_token = &lt;info from vault&gt;\n</code></pre>\n</li>\n<li>aws_credentials_merge takes this new credentials and merges them into <code>~/.aws/credentials</code>.</li>\n</ol>\n\n          </div>"}, "last_serial": 6796808, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "e112707e101225c99dd083c5aedc17f8", "sha256": "2301f1dbddfd798186496763111d7090fa8756c9d9ddafafa03745db4cdcc8c8"}, "downloads": -1, "filename": "vault_aws_login-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e112707e101225c99dd083c5aedc17f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6308, "upload_time": "2020-03-11T22:41:40", "upload_time_iso_8601": "2020-03-11T22:41:40.195094Z", "url": "https://files.pythonhosted.org/packages/ba/dd/cf8753925f29da440153f10e876ad7828caa234a41a5d138b0788d98002d/vault_aws_login-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f39e3fd79a8b30b24e519fc70e7db3bd", "sha256": "902f9666c6279100b98ce5f0d508b1966c89cce918e26b6f9c2548f7505954db"}, "downloads": -1, "filename": "vault-aws-login-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f39e3fd79a8b30b24e519fc70e7db3bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5340, "upload_time": "2020-03-11T22:41:41", "upload_time_iso_8601": "2020-03-11T22:41:41.517040Z", "url": "https://files.pythonhosted.org/packages/1c/60/a50e9e44f658007a95c894a617cf8ef688b1fbbe8ffa452589ccfde407cf/vault-aws-login-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "4e550923dbf6ec258f4c1acfb0eeb752", "sha256": "d7606e9c5565ce73b6e7ca9ddd26fe6bf1a7c6401b6f816022bf56343fcaf462"}, "downloads": -1, "filename": "vault_aws_login-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4e550923dbf6ec258f4c1acfb0eeb752", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6302, "upload_time": "2020-03-11T23:07:11", "upload_time_iso_8601": "2020-03-11T23:07:11.469812Z", "url": "https://files.pythonhosted.org/packages/e9/57/2c18cf0e6e0b1eb706dc2f95430a06df589085269e4dd04a19cf7e1edb80/vault_aws_login-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e33d021aacd2a2aacd4395e07e86d20a", "sha256": "d68a489e14e884ea3b56766ee6132435966e4f5e22b821f553408f490a836cda"}, "downloads": -1, "filename": "vault-aws-login-0.0.3.tar.gz", "has_sig": false, "md5_digest": "e33d021aacd2a2aacd4395e07e86d20a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5342, "upload_time": "2020-03-11T23:07:12", "upload_time_iso_8601": "2020-03-11T23:07:12.729547Z", "url": "https://files.pythonhosted.org/packages/5b/06/d7712484941e0f45b714923586e2ba4ad7ad47e7ce856b317c168918b0b7/vault-aws-login-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "e833b0c45a4b8f5619e52d2d589cf530", "sha256": "277879a18d82f5dd175906285611fe8596530f59fa597dcd850989946f0b935e"}, "downloads": -1, "filename": "vault-aws-login-0.0.4.macosx-10.12-x86_64.tar.gz", "has_sig": false, "md5_digest": "e833b0c45a4b8f5619e52d2d589cf530", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7265, "upload_time": "2020-03-12T02:47:19", "upload_time_iso_8601": "2020-03-12T02:47:19.792713Z", "url": "https://files.pythonhosted.org/packages/35/ba/b10f2f787ceb2c764ab69c66488b007000ed8d92acc67c226e530524cc1b/vault-aws-login-0.0.4.macosx-10.12-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf59e491dd1808817577ce692611928d", "sha256": "2989bdd40e2aaf259265d479ef416fd76a34d73d8e36b8d95ed2b5f512a1975a"}, "downloads": -1, "filename": "vault_aws_login-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "bf59e491dd1808817577ce692611928d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7786, "upload_time": "2020-03-12T02:47:18", "upload_time_iso_8601": "2020-03-12T02:47:18.362154Z", "url": "https://files.pythonhosted.org/packages/27/d5/2d8859b0439995ae1cd2ff13bf80374b77d8cb7d6c3254b03dbbbc46bad7/vault_aws_login-0.0.4-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e833b0c45a4b8f5619e52d2d589cf530", "sha256": "277879a18d82f5dd175906285611fe8596530f59fa597dcd850989946f0b935e"}, "downloads": -1, "filename": "vault-aws-login-0.0.4.macosx-10.12-x86_64.tar.gz", "has_sig": false, "md5_digest": "e833b0c45a4b8f5619e52d2d589cf530", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7265, "upload_time": "2020-03-12T02:47:19", "upload_time_iso_8601": "2020-03-12T02:47:19.792713Z", "url": "https://files.pythonhosted.org/packages/35/ba/b10f2f787ceb2c764ab69c66488b007000ed8d92acc67c226e530524cc1b/vault-aws-login-0.0.4.macosx-10.12-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf59e491dd1808817577ce692611928d", "sha256": "2989bdd40e2aaf259265d479ef416fd76a34d73d8e36b8d95ed2b5f512a1975a"}, "downloads": -1, "filename": "vault_aws_login-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "bf59e491dd1808817577ce692611928d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7786, "upload_time": "2020-03-12T02:47:18", "upload_time_iso_8601": "2020-03-12T02:47:18.362154Z", "url": "https://files.pythonhosted.org/packages/27/d5/2d8859b0439995ae1cd2ff13bf80374b77d8cb7d6c3254b03dbbbc46bad7/vault_aws_login-0.0.4-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:37:39 2020"}