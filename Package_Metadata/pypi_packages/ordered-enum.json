{"info": {"author": "William Woodruff", "author_email": "william@yossarian.net", "bugtrack_url": null, "classifiers": [], "description": "ordered_enum\n============\n\n[![Build Status](https://img.shields.io/github/workflow/status/woodruffw/ordered_enum/CI/master)](https://github.com/woodruffw/ordered_enum/actions?query=workflow%3ACI)\n\n**ordered_enum** is a small library for adding (total) orderings to `enum.Enum`s.\n\nIt provides two ordering behaviors:\n\n* `ordered_enum.OrderedEnum`: total ordering by definition\n* `ordered_enum.ValueOrderedEnum`: \"total\" ordering by member values\n\n## Installation\n\n**ordered_enum** requires Python 3.6 or newer.\n\n```bash\npip3 install ordered_enum\n```\n\n## Usage\n\nTo use **ordered_enum**, just use `OrderedEnum` or `ValueOrderedEnum` as your parent class:\n\n```python\nfrom ordered_enum import OrderedEnum\n\n\nclass State(OrderedEnum):\n    Disabled = 4\n    Loaded = 3\n    Waiting = 2\n    Running = 1\n    Dead = 0\n\n\nassert(State.Disabled < State.Loaded)\nassert(sorted([State.Dead, State.Waiting]) == [State.Waiting, State.Dead])\n```\n\n`OrderedEnum` doesn't require `@enum.unique` (or unique values at all); it uses the order of\ndefinition to impose an ordering between members.\n\nIf you'd like to impose an ordering based on member values, you can use `ValueOrderedEnum` instead:\n\n```python\nimport enum\nfrom ordered_enum import ValueOrderedEnum\n\n\n@enum.unique\nclass State(ValueOrderedEnum):\n    Disabled = 4\n    Loaded = 3\n    Waiting = 2\n    Running = 1\n    Dead = 0\n\n\nassert(State.Disabled > State.Loaded)\nassert(sorted([State.Waiting, State.Dead]) == [State.Dead, State.Waiting])\n```\n\n`ValueOrderedEnum` **does** require unique values, which can be enforced via `@enum.unique`.\nFailing to make a `ValueOrderedEnum`'s values unique will result in a silently broken ordering.\n\n## Caveats\n\nAs mentioned above, `ordered_enum.OrderedEnum` provides an ordering of enum values based on their order\nof definition in the class. This means that:\n\n1. Enum values doesn't have to be unique for **ordered_enum** to work\n2. Enum values can be heterogeneously typed\n2. Moving enum values around changes their ordering\n\nTherefore, you should either not depend on a specific ordering **or** ensure that your\norder of definition is the order you'd like.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/woodruffw/ordered_enum", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ordered-enum", "package_url": "https://pypi.org/project/ordered-enum/", "platform": "any", "project_url": "https://pypi.org/project/ordered-enum/", "project_urls": {"Homepage": "https://github.com/woodruffw/ordered_enum"}, "release_url": "https://pypi.org/project/ordered-enum/0.0.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A small library for adding total orderings to enums", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ordered_enum</h1>\n<p><a href=\"https://github.com/woodruffw/ordered_enum/actions?query=workflow%3ACI\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a424e7b70d0e0c5a9afcaede1e800fbea56ed318/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f776f6f6472756666772f6f7264657265645f656e756d2f43492f6d6173746572\"></a></p>\n<p><strong>ordered_enum</strong> is a small library for adding (total) orderings to <code>enum.Enum</code>s.</p>\n<p>It provides two ordering behaviors:</p>\n<ul>\n<li><code>ordered_enum.OrderedEnum</code>: total ordering by definition</li>\n<li><code>ordered_enum.ValueOrderedEnum</code>: \"total\" ordering by member values</li>\n</ul>\n<h2>Installation</h2>\n<p><strong>ordered_enum</strong> requires Python 3.6 or newer.</p>\n<pre>pip3 install ordered_enum\n</pre>\n<h2>Usage</h2>\n<p>To use <strong>ordered_enum</strong>, just use <code>OrderedEnum</code> or <code>ValueOrderedEnum</code> as your parent class:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ordered_enum</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedEnum</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">State</span><span class=\"p\">(</span><span class=\"n\">OrderedEnum</span><span class=\"p\">):</span>\n    <span class=\"n\">Disabled</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n    <span class=\"n\">Loaded</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n    <span class=\"n\">Waiting</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n    <span class=\"n\">Running</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">Dead</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n\n<span class=\"k\">assert</span><span class=\"p\">(</span><span class=\"n\">State</span><span class=\"o\">.</span><span class=\"n\">Disabled</span> <span class=\"o\">&lt;</span> <span class=\"n\">State</span><span class=\"o\">.</span><span class=\"n\">Loaded</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span><span class=\"p\">(</span><span class=\"nb\">sorted</span><span class=\"p\">([</span><span class=\"n\">State</span><span class=\"o\">.</span><span class=\"n\">Dead</span><span class=\"p\">,</span> <span class=\"n\">State</span><span class=\"o\">.</span><span class=\"n\">Waiting</span><span class=\"p\">])</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"n\">State</span><span class=\"o\">.</span><span class=\"n\">Waiting</span><span class=\"p\">,</span> <span class=\"n\">State</span><span class=\"o\">.</span><span class=\"n\">Dead</span><span class=\"p\">])</span>\n</pre>\n<p><code>OrderedEnum</code> doesn't require <code>@enum.unique</code> (or unique values at all); it uses the order of\ndefinition to impose an ordering between members.</p>\n<p>If you'd like to impose an ordering based on member values, you can use <code>ValueOrderedEnum</code> instead:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">enum</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ordered_enum</span> <span class=\"kn\">import</span> <span class=\"n\">ValueOrderedEnum</span>\n\n\n<span class=\"nd\">@enum</span><span class=\"o\">.</span><span class=\"n\">unique</span>\n<span class=\"k\">class</span> <span class=\"nc\">State</span><span class=\"p\">(</span><span class=\"n\">ValueOrderedEnum</span><span class=\"p\">):</span>\n    <span class=\"n\">Disabled</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n    <span class=\"n\">Loaded</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n    <span class=\"n\">Waiting</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n    <span class=\"n\">Running</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">Dead</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n\n<span class=\"k\">assert</span><span class=\"p\">(</span><span class=\"n\">State</span><span class=\"o\">.</span><span class=\"n\">Disabled</span> <span class=\"o\">&gt;</span> <span class=\"n\">State</span><span class=\"o\">.</span><span class=\"n\">Loaded</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span><span class=\"p\">(</span><span class=\"nb\">sorted</span><span class=\"p\">([</span><span class=\"n\">State</span><span class=\"o\">.</span><span class=\"n\">Waiting</span><span class=\"p\">,</span> <span class=\"n\">State</span><span class=\"o\">.</span><span class=\"n\">Dead</span><span class=\"p\">])</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"n\">State</span><span class=\"o\">.</span><span class=\"n\">Dead</span><span class=\"p\">,</span> <span class=\"n\">State</span><span class=\"o\">.</span><span class=\"n\">Waiting</span><span class=\"p\">])</span>\n</pre>\n<p><code>ValueOrderedEnum</code> <strong>does</strong> require unique values, which can be enforced via <code>@enum.unique</code>.\nFailing to make a <code>ValueOrderedEnum</code>'s values unique will result in a silently broken ordering.</p>\n<h2>Caveats</h2>\n<p>As mentioned above, <code>ordered_enum.OrderedEnum</code> provides an ordering of enum values based on their order\nof definition in the class. This means that:</p>\n<ol>\n<li>Enum values doesn't have to be unique for <strong>ordered_enum</strong> to work</li>\n<li>Enum values can be heterogeneously typed</li>\n<li>Moving enum values around changes their ordering</li>\n</ol>\n<p>Therefore, you should either not depend on a specific ordering <strong>or</strong> ensure that your\norder of definition is the order you'd like.</p>\n\n          </div>"}, "last_serial": 6650515, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "529cdc7ed0e3c5b58cd01609c2ec2a86", "sha256": "6be0b6aab56d736dafe00b19338e2e5b1bfdf6d1668b57d57e959045bd272871"}, "downloads": -1, "filename": "ordered_enum-0.0.1.tar.gz", "has_sig": false, "md5_digest": "529cdc7ed0e3c5b58cd01609c2ec2a86", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2815, "upload_time": "2020-02-18T02:43:19", "upload_time_iso_8601": "2020-02-18T02:43:19.867509Z", "url": "https://files.pythonhosted.org/packages/82/1f/62370504a5f06845caf74e5a0c325ce01e5fab136531231da102d0da1f7a/ordered_enum-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d3c3f9681312ecfaa469e2c5d09acc3b", "sha256": "64134326ced603c9c7f5dc801633615a44889bdf2050c242a6e1955851b21ad2"}, "downloads": -1, "filename": "ordered_enum-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d3c3f9681312ecfaa469e2c5d09acc3b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2887, "upload_time": "2020-02-18T02:51:49", "upload_time_iso_8601": "2020-02-18T02:51:49.419461Z", "url": "https://files.pythonhosted.org/packages/3c/56/c2f351e23956017d7fc91c9c8e6e48be4cd73423eb0888cef0174a774602/ordered_enum-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "0eccef58d3fe956335ef0584b8521baf", "sha256": "0f280e945e803c2599bb250bee686b863de00d0674c740ab2d6e9defbf875a3d"}, "downloads": -1, "filename": "ordered_enum-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0eccef58d3fe956335ef0584b8521baf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2877, "upload_time": "2020-02-18T02:55:36", "upload_time_iso_8601": "2020-02-18T02:55:36.324159Z", "url": "https://files.pythonhosted.org/packages/25/fa/72cbb4810eea5faae5b1520445af3a2c6ca8d7c755bef60f71f8c03aa5a5/ordered_enum-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0eccef58d3fe956335ef0584b8521baf", "sha256": "0f280e945e803c2599bb250bee686b863de00d0674c740ab2d6e9defbf875a3d"}, "downloads": -1, "filename": "ordered_enum-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0eccef58d3fe956335ef0584b8521baf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2877, "upload_time": "2020-02-18T02:55:36", "upload_time_iso_8601": "2020-02-18T02:55:36.324159Z", "url": "https://files.pythonhosted.org/packages/25/fa/72cbb4810eea5faae5b1520445af3a2c6ca8d7c755bef60f71f8c03aa5a5/ordered_enum-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:42 2020"}