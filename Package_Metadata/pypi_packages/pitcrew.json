{"info": {"author": "joshbuddy", "author_email": "joshbuddy@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\n# \ud83d\udd27 Pitcrew\n\nAsyncIO-powered python DSL for running commands locally, on docker, or over ssh.\n\n[![CircleCI](https://circleci.com/gh/joshbuddy/pitcrew.svg?style=svg)](https://circleci.com/gh/joshbuddy/pitcrew)\n\n## What does Pitcrew do?\n\n<table>\n    <tr>\n        <td>Pitcrew can run commands</td>\n        <td><code>\n            $ crew sh date\n        </code></td>\n    </tr>\n    <tr>\n        <td>...or over ssh</td>\n        <td><code>\n            $ crew sh -p providers.ssh -P '{\"hosts\": [\"192.168.0.1\"]}' date\n        </code></td>\n    </tr>\n    <tr>\n        <td>on hundreds of hosts!</td>\n        <td><code>\n            $ crew sh -p providers.ssh -P '{\"hosts\": [\"192.168.0.1-100\"]}' date\n        </code></td>\n    </tr>\n    <tr>\n        <td>Crew can also run tasks</td>\n        <td><code>\n            $ crew run install.homebrew\n        </code></td>\n    </tr>\n    <tr>\n        <td>Tasks are either other shell commands, or other tasks, for example,\n        this provisions Cloudfront, SSL and S3 and builds and deploys docs to pitcrew.io</td>\n        <td><code>\n            $ crew run examples.deploy_pitcrew\n        </code></td>\n    </tr>\n    <tr>\n        <td>You can list available tasks</td>\n        <td><code>\n            $ crew list\n        </code></td>\n    </tr>\n    <tr>\n        <td>...edit an existing task</td>\n        <td><code>\n            $ crew edit examples.deploy_pitcrew\n            # opens in $EDITOR\n        </code></td>\n    </tr>\n    <tr>\n        <td>or create a new task!</td>\n        <td><code>\n            $ crew new some.new.task\n        </code></td>\n    </tr>\n</table>\n\n## Installation\n\n### From binary\n\nTo install pitcrew in your home directory, run the following:\n\n```\ncurl -fsSL \"https://github.com/joshbuddy/pitcrew/releases/latest/download/crew-$(uname)\" > crew\nchmod u+x crew\n./crew run crew.install --dest=\"$HOME/crew\"\n```\n\n### From PyPi\n\nTo install from the Python Package Index, run the following:\n\n```\npip install pitcrew\ncrew run crew.install --dest=\"$HOME/crew\"\n```\n\n### From source\n\n```\ngit clone https://github.com/joshbuddy/pitcrew\ncd pitcrew\npython3.6 -m venv env\nsource env/bin/activate\npip install -e .\n```\n\n## Concepts\n\nA command or set of commands is called a **task**. A **context** runs tasks either locally, on docker or over ssh.\nA **provider** generates contexts.\n\n### Tasks\n\nTasks are either composed from other tasks or invoking a command on a shell.\n\nAn example of a *task* might be reading a file. `fs.read(path)` reads a file as bytes and returns it:\n\n### `pitcrew/tasks/fs/read.py`\n\n```python\nimport base64\nfrom pitcrew import task\n\n\n@task.arg(\"path\", desc=\"The file to read\", type=str)\n@task.returns(\"The bytes of the file\")\nclass FsRead(task.BaseTask):\n    \"\"\"Read value of path into bytes\"\"\"\n\n    async def run(self) -> bytes:\n        code, out, err = await self.sh_with_code(f\"cat {self.params.esc_path}\")\n        assert code == 0, \"exitcode was not zero\"\n        return out\n\n```\n\nOther tasks might include writing a file, installing xcode or cloning a git repository. All the currently available\ntasks are listed at [docs/tasks.md](docs/tasks.md). The api available in a task is available at [docs/api.md#crewtask](docs/api.md#crewtask).\n\n### Contexts\n\nAn example of a *context* might be over ssh, or even locally. Learn more about contexts at [docs/api.md#crewcontext](docs/api.md#crewcontext).\n\n### Providers\n\nA *provider* is a task with a specific return type. The return type is an async iterator which returns contexts.\n\n## Usage\n\nFor detailed usage, see [docs/cli.md](docs/cli.md) for more details.\n\n### Run a command\n\nPitcrew allows running a command using `bin/crew sh -- [shell command]`.\n\nFor example `crew sh ls /` will list the \"/\" directory locally.\n\nYou can run this across three hosts via ssh using `crew sh -p providers.ssh -P '{\"hosts\": [\"192.168.0.1\", \"192.168.0.2\", \"192.168.0.3\"]}' ls /`.\n\n### Run a task\n\nPitcrew allows running a task using `crew run [task name] <task args>`. This will normally target your local machine unless you use the `-p` flag to select a different provider.\n\n### See available tasks\n\nTo see all the available tasks run `crew list`. This will show all available tasks which are stored in `crew/tasks`.\n\n### Make a new task\n\nTo see all the available tasks run `crew new [task_name]`. This will create a template of a new task.\n\n### Run tests\n\nTo run an ad-hoc command use . For tasks use `crew run [task-name] <args>`.\n\n### Get CLI help\n\nTo see the whole list of commands available from the command-line, run `crew help`.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pitcrew.io", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pitcrew", "package_url": "https://pypi.org/project/pitcrew/", "platform": "", "project_url": "https://pypi.org/project/pitcrew/", "project_urls": {"Homepage": "http://pitcrew.io"}, "release_url": "https://pypi.org/project/pitcrew/0.0.3/", "requires_dist": ["Click (==7.0)", "Jinja2 (==2.10.1)", "MarkupSafe (==1.1.1)", "asn1crypto (==0.24.0)", "asyncssh (==1.16.1)", "cffi (==1.12.3)", "cryptography (==2.6.1)", "netaddr (==0.7.19)", "pycparser (==2.19)", "six (==1.12.0)"], "requires_python": ">=3.6.0", "summary": "AsyncIO-powered python DSL for running commands locally, on docker, or over ssh.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\ud83d\udd27 Pitcrew</h1>\n<p>AsyncIO-powered python DSL for running commands locally, on docker, or over ssh.</p>\n<p><a href=\"https://circleci.com/gh/joshbuddy/pitcrew\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47b455d54157aa6ee571bc4755d70fb5c73e4453/68747470733a2f2f636972636c6563692e636f6d2f67682f6a6f736862756464792f706974637265772e7376673f7374796c653d737667\"></a></p>\n<h2>What does Pitcrew do?</h2>\n<table>\n    <tr>\n        <td>Pitcrew can run commands</td>\n        <td><code>\n            $ crew sh date\n        </code></td>\n    </tr>\n    <tr>\n        <td>...or over ssh</td>\n        <td><code>\n            $ crew sh -p providers.ssh -P '{\"hosts\": [\"192.168.0.1\"]}' date\n        </code></td>\n    </tr>\n    <tr>\n        <td>on hundreds of hosts!</td>\n        <td><code>\n            $ crew sh -p providers.ssh -P '{\"hosts\": [\"192.168.0.1-100\"]}' date\n        </code></td>\n    </tr>\n    <tr>\n        <td>Crew can also run tasks</td>\n        <td><code>\n            $ crew run install.homebrew\n        </code></td>\n    </tr>\n    <tr>\n        <td>Tasks are either other shell commands, or other tasks, for example,\n        this provisions Cloudfront, SSL and S3 and builds and deploys docs to pitcrew.io</td>\n        <td><code>\n            $ crew run examples.deploy_pitcrew\n        </code></td>\n    </tr>\n    <tr>\n        <td>You can list available tasks</td>\n        <td><code>\n            $ crew list\n        </code></td>\n    </tr>\n    <tr>\n        <td>...edit an existing task</td>\n        <td><code>\n            $ crew edit examples.deploy_pitcrew\n            # opens in $EDITOR\n        </code></td>\n    </tr>\n    <tr>\n        <td>or create a new task!</td>\n        <td><code>\n            $ crew new some.new.task\n        </code></td>\n    </tr>\n</table>\n<h2>Installation</h2>\n<h3>From binary</h3>\n<p>To install pitcrew in your home directory, run the following:</p>\n<pre><code>curl -fsSL \"https://github.com/joshbuddy/pitcrew/releases/latest/download/crew-$(uname)\" &gt; crew\nchmod u+x crew\n./crew run crew.install --dest=\"$HOME/crew\"\n</code></pre>\n<h3>From PyPi</h3>\n<p>To install from the Python Package Index, run the following:</p>\n<pre><code>pip install pitcrew\ncrew run crew.install --dest=\"$HOME/crew\"\n</code></pre>\n<h3>From source</h3>\n<pre><code>git clone https://github.com/joshbuddy/pitcrew\ncd pitcrew\npython3.6 -m venv env\nsource env/bin/activate\npip install -e .\n</code></pre>\n<h2>Concepts</h2>\n<p>A command or set of commands is called a <strong>task</strong>. A <strong>context</strong> runs tasks either locally, on docker or over ssh.\nA <strong>provider</strong> generates contexts.</p>\n<h3>Tasks</h3>\n<p>Tasks are either composed from other tasks or invoking a command on a shell.</p>\n<p>An example of a <em>task</em> might be reading a file. <code>fs.read(path)</code> reads a file as bytes and returns it:</p>\n<h3><code>pitcrew/tasks/fs/read.py</code></h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">base64</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pitcrew</span> <span class=\"kn\">import</span> <span class=\"n\">task</span>\n\n\n<span class=\"nd\">@task</span><span class=\"o\">.</span><span class=\"n\">arg</span><span class=\"p\">(</span><span class=\"s2\">\"path\"</span><span class=\"p\">,</span> <span class=\"n\">desc</span><span class=\"o\">=</span><span class=\"s2\">\"The file to read\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n<span class=\"nd\">@task</span><span class=\"o\">.</span><span class=\"n\">returns</span><span class=\"p\">(</span><span class=\"s2\">\"The bytes of the file\"</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">FsRead</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">BaseTask</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Read value of path into bytes\"\"\"</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bytes</span><span class=\"p\">:</span>\n        <span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sh_with_code</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"cat </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">params</span><span class=\"o\">.</span><span class=\"n\">esc_path</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"n\">code</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"exitcode was not zero\"</span>\n        <span class=\"k\">return</span> <span class=\"n\">out</span>\n</pre>\n<p>Other tasks might include writing a file, installing xcode or cloning a git repository. All the currently available\ntasks are listed at <a href=\"docs/tasks.md\" rel=\"nofollow\">docs/tasks.md</a>. The api available in a task is available at <a href=\"docs/api.md#crewtask\" rel=\"nofollow\">docs/api.md#crewtask</a>.</p>\n<h3>Contexts</h3>\n<p>An example of a <em>context</em> might be over ssh, or even locally. Learn more about contexts at <a href=\"docs/api.md#crewcontext\" rel=\"nofollow\">docs/api.md#crewcontext</a>.</p>\n<h3>Providers</h3>\n<p>A <em>provider</em> is a task with a specific return type. The return type is an async iterator which returns contexts.</p>\n<h2>Usage</h2>\n<p>For detailed usage, see <a href=\"docs/cli.md\" rel=\"nofollow\">docs/cli.md</a> for more details.</p>\n<h3>Run a command</h3>\n<p>Pitcrew allows running a command using <code>bin/crew sh -- [shell command]</code>.</p>\n<p>For example <code>crew sh ls /</code> will list the \"/\" directory locally.</p>\n<p>You can run this across three hosts via ssh using <code>crew sh -p providers.ssh -P '{\"hosts\": [\"192.168.0.1\", \"192.168.0.2\", \"192.168.0.3\"]}' ls /</code>.</p>\n<h3>Run a task</h3>\n<p>Pitcrew allows running a task using <code>crew run [task name] &lt;task args&gt;</code>. This will normally target your local machine unless you use the <code>-p</code> flag to select a different provider.</p>\n<h3>See available tasks</h3>\n<p>To see all the available tasks run <code>crew list</code>. This will show all available tasks which are stored in <code>crew/tasks</code>.</p>\n<h3>Make a new task</h3>\n<p>To see all the available tasks run <code>crew new [task_name]</code>. This will create a template of a new task.</p>\n<h3>Run tests</h3>\n<p>To run an ad-hoc command use . For tasks use <code>crew run [task-name] &lt;args&gt;</code>.</p>\n<h3>Get CLI help</h3>\n<p>To see the whole list of commands available from the command-line, run <code>crew help</code>.</p>\n\n          </div>"}, "last_serial": 5290256, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6ca5cc45c3026586a68a6d9625e99821", "sha256": "85e753003fb8b3249071000f2b4b62c4106c2a1431db24c63fd371f310391d9b"}, "downloads": -1, "filename": "pitcrew-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6ca5cc45c3026586a68a6d9625e99821", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 26434, "upload_time": "2019-04-29T23:14:57", "upload_time_iso_8601": "2019-04-29T23:14:57.878773Z", "url": "https://files.pythonhosted.org/packages/08/cc/7c477411dbc39cf825bfcfeed56192a28c001f352450098e7b5ac182d9d8/pitcrew-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dacbbba4ef2b574eb902382b84fb39e1", "sha256": "f38308ddf6f59073936528392c108cc3d80b4261b7102edcc83a1dccaafd18a8"}, "downloads": -1, "filename": "pitcrew-0.0.1.tar.gz", "has_sig": false, "md5_digest": "dacbbba4ef2b574eb902382b84fb39e1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 17745, "upload_time": "2019-04-29T23:15:16", "upload_time_iso_8601": "2019-04-29T23:15:16.210783Z", "url": "https://files.pythonhosted.org/packages/d2/c3/f6dd61551781bd6e44d2d6854bb23c0e502fe27335e88cc513cecd20dd33/pitcrew-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "4080229f225fe4e2a5c134ccf9810be1", "sha256": "7b1f479f656bc888e4f5b58bd2970f8ccbd81c32bb0cf19688f1ccd495ef5f9d"}, "downloads": -1, "filename": "pitcrew-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4080229f225fe4e2a5c134ccf9810be1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 27089, "upload_time": "2019-04-30T18:16:57", "upload_time_iso_8601": "2019-04-30T18:16:57.362870Z", "url": "https://files.pythonhosted.org/packages/3f/2a/6d376a990c3debe8f906309af1db521301dae6c521c8ede52ca935246113/pitcrew-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e0326273fdccee72324ef6c0d4ed2e1", "sha256": "c72f044846917db706b89f3f79c2ac308f6e6ef9157a62b9de628fd593bd8731"}, "downloads": -1, "filename": "pitcrew-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8e0326273fdccee72324ef6c0d4ed2e1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 18496, "upload_time": "2019-04-30T18:17:00", "upload_time_iso_8601": "2019-04-30T18:17:00.734626Z", "url": "https://files.pythonhosted.org/packages/7a/b3/5239b1c6a6891a484ada9d813091b050c6f0d024b3215e26328e034ad6f8/pitcrew-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "f5aa574df87140c898842e3c01c2e9f0", "sha256": "258a379fb87d1bbecedb4ed6a26a65bd07ec33ff45fcf315358cd69f78420091"}, "downloads": -1, "filename": "pitcrew-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f5aa574df87140c898842e3c01c2e9f0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 26937, "upload_time": "2019-05-20T04:22:49", "upload_time_iso_8601": "2019-05-20T04:22:49.981494Z", "url": "https://files.pythonhosted.org/packages/04/30/4875e0853ad392654390863b75d5e3c9e3801f7580371bcd966d89c55faa/pitcrew-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f4c689e8140e7920d9763b6ecdb5225", "sha256": "5dbeb2a6c609bd3ebc80e2c1cc781327d90040e77a9f13004438df2d81afa082"}, "downloads": -1, "filename": "pitcrew-0.0.3.tar.gz", "has_sig": false, "md5_digest": "2f4c689e8140e7920d9763b6ecdb5225", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 18313, "upload_time": "2019-05-20T04:22:51", "upload_time_iso_8601": "2019-05-20T04:22:51.565783Z", "url": "https://files.pythonhosted.org/packages/5e/5e/02b53ad83abc9160a8e1d3e41b92a107059726267322afdb617a70c9144f/pitcrew-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f5aa574df87140c898842e3c01c2e9f0", "sha256": "258a379fb87d1bbecedb4ed6a26a65bd07ec33ff45fcf315358cd69f78420091"}, "downloads": -1, "filename": "pitcrew-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f5aa574df87140c898842e3c01c2e9f0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 26937, "upload_time": "2019-05-20T04:22:49", "upload_time_iso_8601": "2019-05-20T04:22:49.981494Z", "url": "https://files.pythonhosted.org/packages/04/30/4875e0853ad392654390863b75d5e3c9e3801f7580371bcd966d89c55faa/pitcrew-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f4c689e8140e7920d9763b6ecdb5225", "sha256": "5dbeb2a6c609bd3ebc80e2c1cc781327d90040e77a9f13004438df2d81afa082"}, "downloads": -1, "filename": "pitcrew-0.0.3.tar.gz", "has_sig": false, "md5_digest": "2f4c689e8140e7920d9763b6ecdb5225", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 18313, "upload_time": "2019-05-20T04:22:51", "upload_time_iso_8601": "2019-05-20T04:22:51.565783Z", "url": "https://files.pythonhosted.org/packages/5e/5e/02b53ad83abc9160a8e1d3e41b92a107059726267322afdb617a70c9144f/pitcrew-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:00 2020"}