{"info": {"author": "Raven's Iris", "author_email": "liones121@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# librusapi\n\n![banner](img/banner.svg)\n\n[![license](https://img.shields.io/github/license/ravenirex/librusapi)](LICENSE)\n[![standard-readme compliant](https://img.shields.io/badge/readme%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/RichardLitt/standard-readme)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/librusapi)\n\n> Unofficial API wrapper for synergia.librus.pl\n\nScrape data from synergia.librus.pl and use it in your app.\n\n***Coming soon:***\n- Absences\n- Events\n\n## Table of Contents\n\n- [Features](#features)\n- [Install](#install)\n- [Usage](#usage)\n- [Maintainers](#maintainers)\n- [Contributing](#contributing)\n- [License](#license)\n\n## Features\n| Feature        | Status            |\n| -------------- |:-----------------:|\n| Timetable      | **working**       |\n| Grades         | **working**       |\n| Absences       | ***coming soon*** |\n| Events         | ***coming soon*** |\n\n## Install\n\n```shell\npip install librusapi\n```\n\n## Usage\n### Getting your timetable\n```python\nfrom subprocess import check_output\nfrom librusapi import Timetable, Token, Lesson\nfrom datetime import datetime, timedelta\nfrom os import path\nfrom shutil import get_terminal_size\n\n\n# * Get absolute token storage path\npath = path.expanduser('~/librus_token.json')\n\n# * Load it from path\ntok = Token.load(path)\n\n# * load() automatically checks if file exists or token is valid\nif not tok:\n    # * If token has expired or doesn't exist load from 'pass'\n    # ! Replace with your own method\n    # ! I'm using 'pass' on a unix system to get my librus password\n    # ! I use arch btw\n    pwd, user = check_output('pass librus', shell=True).decode('utf-8').strip().split('\\nusername: ')\n    tok = Token.get(user, pwd)\n\n# * Save token to a file\ntok.store(path)\n\n# * Create a timetable session\ntimetable = Timetable(tok)\n\n# * Load all lessons for current week\ntoday = timetable.get()\n\n# * Load all lessons next week\nweek_from_now = timetable.get(datetime.now()+timedelta(days=7))\n\n# * Combine them to have more things to output\ntdandwfn = today + week_from_now\n\n# * Check terminal columns and lines for fancier output\ncolumns, lines = get_terminal_size()\n\n# * Count amount of lessons in each of loaded weeks\nprint(f'You have {len(today)} lessons this week')\nprint(f'You have {len(week_from_now)} lessons next week')\nprint(f'{len(today) + len(week_from_now)} in total')\n\nfor l in tdandwfn:\n    # * Represents absolute index of a lesson\n    # * Starts from 0\n    print(l.index)\n    # * Name\n    print(l.name)\n    # * Room / can be None\n    print(l.room)\n    # * Teacher\n    print(l.teacher)\n    # * Lesson start\n    print(l.start)\n    # * Lesson end\n    print(l.end)\n    # * Flag\n    # * Flags inform about teacher absences, cancelations, moving(eg. form 1 day to another)\n    # ! Flags do not inform about tests\n    print(l.flag)\n    print('*' * columns)\n\n```\n### Getting your grades\n```python\nfrom subprocess import check_output\nfrom librusapi import Grades, Token\nfrom os import path\n\n\n# * Get absolute token storage path\n# * On Windows\n# * C:/Users/your_username/librus_token.json\npath = path.expanduser('~/librus_token.json')\n\n# * Load it from path\ntok = Token.load(path)\n\n# * load() automatically checks if file exists or token is valid\nif not tok:\n    # * If token has expired or doesn't exist load from 'pass'\n    # ! Replace with your own method\n    # ! I'm using 'pass' on a unix system to get my librus password\n    # ! I use arch btw\n    pwd, user = check_output('pass librus', shell=True).decode(\n        'utf-8').strip().split('\\nusername: ')\n    tok = Token.get(user, pwd)\n\n# * Save token to a file\ntok.store(path)\n\ngrades = Grades(tok)\nlessons = grades.get()\n\nfor lesson in lessons:\n    # * Name\n    print(lesson.name)\n\n    # * Current average for entire year\n    print(lesson.current)\n\n    # * Final grade for a entire year\n    print(lesson.final)\n\n    # * Current average for first semester\n    print(lesson.first_semester.current)\n\n    # * Expected grade for first semester\n    # ! It is always None for second semester\n    print(lesson.first_semester.expected)\n\n    # * Final grade for first semester\n    print(lesson.first_semester.final)\n\n    # * An array of grades for first semester\n    # ! Each grade is a string not a Grade class\n    print(lesson.first_semester.grades)\n\n    for grade in lesson.grades:\n        # * Value\n        # ! It is a string representation\n        # Different schools give different amounts of points for + & -\n        print(grade.value)\n\n        # * String for what type of work is it\n        # eg. \"kartkowka\", \"sprawdzian\"\n        print(grade.category)\n\n        # * When it was added to librus\n        # * Time hh:mm will always be 00:00\n        print(grade.date)\n\n        print(grade.teacher)\n        print(grade.added_by)\n\n        # ! I would suggest not using these\n        print(grade.improved_value)\n        print(grade.comment_url)\n\n```\n\n\n## Maintainers\n\n[@Ravenirex](https://github.com/Ravenirex)\n\n## Contributing\nPRs are not welcome yet as this package lacks basic functionality, which I intend to add first.\n\n## License\n\nMIT \u00a9 2019 Raven&#39;s Iris\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "librusapi", "package_url": "https://pypi.org/project/librusapi/", "platform": "", "project_url": "https://pypi.org/project/librusapi/", "project_urls": null, "release_url": "https://pypi.org/project/librusapi/0.40/", "requires_dist": ["beautifulsoup4 (>=4.8.1)", "bs4 (>=0.0.1)", "certifi (>=2019.9.11)", "chardet (>=3.0.4)", "idna (>=2.8)", "lxml (>=4.4.1)", "requests (>=2.22.0)", "soupsieve (>=1.9.5)", "urllib3 (>=1.25.6)"], "requires_python": ">=3.6", "summary": "Unofficial API wrapper for synergia.librus.pl", "version": "0.40", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>librusapi</h1>\n<p><img alt=\"banner\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/082fa81814b730f5de76be50a4cc337f0e32a044/696d672f62616e6e65722e737667\"></p>\n<p><a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d4d5e68fc44d7e17b5b35a276277b54c9ddc6713/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f726176656e697265782f6c6962727573617069\"></a>\n<a href=\"https://github.com/RichardLitt/standard-readme\" rel=\"nofollow\"><img alt=\"standard-readme compliant\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3c3b55365407d21b7f988f17b6eb8c228b289b8a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f726561646d652532307374796c652d7374616e646172642d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265\"></a>\n<img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d274e8dcbc144b8b951b71f0156fce288b164623/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6c6962727573617069\"></p>\n<blockquote>\n<p>Unofficial API wrapper for synergia.librus.pl</p>\n</blockquote>\n<p>Scrape data from synergia.librus.pl and use it in your app.</p>\n<p><em><strong>Coming soon:</strong></em></p>\n<ul>\n<li>Absences</li>\n<li>Events</li>\n</ul>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#install\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#maintainers\" rel=\"nofollow\">Maintainers</a></li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n</ul>\n<h2>Features</h2>\n<table>\n<thead>\n<tr>\n<th>Feature</th>\n<th align=\"center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Timetable</td>\n<td align=\"center\"><strong>working</strong></td>\n</tr>\n<tr>\n<td>Grades</td>\n<td align=\"center\"><strong>working</strong></td>\n</tr>\n<tr>\n<td>Absences</td>\n<td align=\"center\"><em><strong>coming soon</strong></em></td>\n</tr>\n<tr>\n<td>Events</td>\n<td align=\"center\"><em><strong>coming soon</strong></em></td>\n</tr></tbody></table>\n<h2>Install</h2>\n<pre>pip install librusapi\n</pre>\n<h2>Usage</h2>\n<h3>Getting your timetable</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">subprocess</span> <span class=\"kn\">import</span> <span class=\"n\">check_output</span>\n<span class=\"kn\">from</span> <span class=\"nn\">librusapi</span> <span class=\"kn\">import</span> <span class=\"n\">Timetable</span><span class=\"p\">,</span> <span class=\"n\">Token</span><span class=\"p\">,</span> <span class=\"n\">Lesson</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span><span class=\"p\">,</span> <span class=\"n\">timedelta</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">shutil</span> <span class=\"kn\">import</span> <span class=\"n\">get_terminal_size</span>\n\n\n<span class=\"c1\"># * Get absolute token storage path</span>\n<span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s1\">'~/librus_token.json'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># * Load it from path</span>\n<span class=\"n\">tok</span> <span class=\"o\">=</span> <span class=\"n\">Token</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># * load() automatically checks if file exists or token is valid</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">tok</span><span class=\"p\">:</span>\n    <span class=\"c1\"># * If token has expired or doesn't exist load from 'pass'</span>\n    <span class=\"c1\"># ! Replace with your own method</span>\n    <span class=\"c1\"># ! I'm using 'pass' on a unix system to get my librus password</span>\n    <span class=\"c1\"># ! I use arch btw</span>\n    <span class=\"n\">pwd</span><span class=\"p\">,</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">check_output</span><span class=\"p\">(</span><span class=\"s1\">'pass librus'</span><span class=\"p\">,</span> <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">username: '</span><span class=\"p\">)</span>\n    <span class=\"n\">tok</span> <span class=\"o\">=</span> <span class=\"n\">Token</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">pwd</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># * Save token to a file</span>\n<span class=\"n\">tok</span><span class=\"o\">.</span><span class=\"n\">store</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># * Create a timetable session</span>\n<span class=\"n\">timetable</span> <span class=\"o\">=</span> <span class=\"n\">Timetable</span><span class=\"p\">(</span><span class=\"n\">tok</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># * Load all lessons for current week</span>\n<span class=\"n\">today</span> <span class=\"o\">=</span> <span class=\"n\">timetable</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># * Load all lessons next week</span>\n<span class=\"n\">week_from_now</span> <span class=\"o\">=</span> <span class=\"n\">timetable</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">+</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># * Combine them to have more things to output</span>\n<span class=\"n\">tdandwfn</span> <span class=\"o\">=</span> <span class=\"n\">today</span> <span class=\"o\">+</span> <span class=\"n\">week_from_now</span>\n\n<span class=\"c1\"># * Check terminal columns and lines for fancier output</span>\n<span class=\"n\">columns</span><span class=\"p\">,</span> <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">get_terminal_size</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># * Count amount of lessons in each of loaded weeks</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'You have </span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">today</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s1\"> lessons this week'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'You have </span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">week_from_now</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s1\"> lessons next week'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">today</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">week_from_now</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s1\"> in total'</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">l</span> <span class=\"ow\">in</span> <span class=\"n\">tdandwfn</span><span class=\"p\">:</span>\n    <span class=\"c1\"># * Represents absolute index of a lesson</span>\n    <span class=\"c1\"># * Starts from 0</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">)</span>\n    <span class=\"c1\"># * Name</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"c1\"># * Room / can be None</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">room</span><span class=\"p\">)</span>\n    <span class=\"c1\"># * Teacher</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">teacher</span><span class=\"p\">)</span>\n    <span class=\"c1\"># * Lesson start</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">)</span>\n    <span class=\"c1\"># * Lesson end</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">end</span><span class=\"p\">)</span>\n    <span class=\"c1\"># * Flag</span>\n    <span class=\"c1\"># * Flags inform about teacher absences, cancelations, moving(eg. form 1 day to another)</span>\n    <span class=\"c1\"># ! Flags do not inform about tests</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">flag</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'*'</span> <span class=\"o\">*</span> <span class=\"n\">columns</span><span class=\"p\">)</span>\n</pre>\n<h3>Getting your grades</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">subprocess</span> <span class=\"kn\">import</span> <span class=\"n\">check_output</span>\n<span class=\"kn\">from</span> <span class=\"nn\">librusapi</span> <span class=\"kn\">import</span> <span class=\"n\">Grades</span><span class=\"p\">,</span> <span class=\"n\">Token</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n\n\n<span class=\"c1\"># * Get absolute token storage path</span>\n<span class=\"c1\"># * On Windows</span>\n<span class=\"c1\"># * C:/Users/your_username/librus_token.json</span>\n<span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s1\">'~/librus_token.json'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># * Load it from path</span>\n<span class=\"n\">tok</span> <span class=\"o\">=</span> <span class=\"n\">Token</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># * load() automatically checks if file exists or token is valid</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">tok</span><span class=\"p\">:</span>\n    <span class=\"c1\"># * If token has expired or doesn't exist load from 'pass'</span>\n    <span class=\"c1\"># ! Replace with your own method</span>\n    <span class=\"c1\"># ! I'm using 'pass' on a unix system to get my librus password</span>\n    <span class=\"c1\"># ! I use arch btw</span>\n    <span class=\"n\">pwd</span><span class=\"p\">,</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">check_output</span><span class=\"p\">(</span><span class=\"s1\">'pass librus'</span><span class=\"p\">,</span> <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span>\n        <span class=\"s1\">'utf-8'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">username: '</span><span class=\"p\">)</span>\n    <span class=\"n\">tok</span> <span class=\"o\">=</span> <span class=\"n\">Token</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">pwd</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># * Save token to a file</span>\n<span class=\"n\">tok</span><span class=\"o\">.</span><span class=\"n\">store</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n\n<span class=\"n\">grades</span> <span class=\"o\">=</span> <span class=\"n\">Grades</span><span class=\"p\">(</span><span class=\"n\">tok</span><span class=\"p\">)</span>\n<span class=\"n\">lessons</span> <span class=\"o\">=</span> <span class=\"n\">grades</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n<span class=\"k\">for</span> <span class=\"n\">lesson</span> <span class=\"ow\">in</span> <span class=\"n\">lessons</span><span class=\"p\">:</span>\n    <span class=\"c1\"># * Name</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lesson</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># * Current average for entire year</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lesson</span><span class=\"o\">.</span><span class=\"n\">current</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># * Final grade for a entire year</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lesson</span><span class=\"o\">.</span><span class=\"n\">final</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># * Current average for first semester</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lesson</span><span class=\"o\">.</span><span class=\"n\">first_semester</span><span class=\"o\">.</span><span class=\"n\">current</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># * Expected grade for first semester</span>\n    <span class=\"c1\"># ! It is always None for second semester</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lesson</span><span class=\"o\">.</span><span class=\"n\">first_semester</span><span class=\"o\">.</span><span class=\"n\">expected</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># * Final grade for first semester</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lesson</span><span class=\"o\">.</span><span class=\"n\">first_semester</span><span class=\"o\">.</span><span class=\"n\">final</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># * An array of grades for first semester</span>\n    <span class=\"c1\"># ! Each grade is a string not a Grade class</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lesson</span><span class=\"o\">.</span><span class=\"n\">first_semester</span><span class=\"o\">.</span><span class=\"n\">grades</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">grade</span> <span class=\"ow\">in</span> <span class=\"n\">lesson</span><span class=\"o\">.</span><span class=\"n\">grades</span><span class=\"p\">:</span>\n        <span class=\"c1\"># * Value</span>\n        <span class=\"c1\"># ! It is a string representation</span>\n        <span class=\"c1\"># Different schools give different amounts of points for + &amp; -</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">grade</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># * String for what type of work is it</span>\n        <span class=\"c1\"># eg. \"kartkowka\", \"sprawdzian\"</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">grade</span><span class=\"o\">.</span><span class=\"n\">category</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># * When it was added to librus</span>\n        <span class=\"c1\"># * Time hh:mm will always be 00:00</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">grade</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">)</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">grade</span><span class=\"o\">.</span><span class=\"n\">teacher</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">grade</span><span class=\"o\">.</span><span class=\"n\">added_by</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># ! I would suggest not using these</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">grade</span><span class=\"o\">.</span><span class=\"n\">improved_value</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">grade</span><span class=\"o\">.</span><span class=\"n\">comment_url</span><span class=\"p\">)</span>\n</pre>\n<h2>Maintainers</h2>\n<p><a href=\"https://github.com/Ravenirex\" rel=\"nofollow\">@Ravenirex</a></p>\n<h2>Contributing</h2>\n<p>PRs are not welcome yet as this package lacks basic functionality, which I intend to add first.</p>\n<h2>License</h2>\n<p>MIT \u00a9 2019 Raven's Iris</p>\n\n          </div>"}, "last_serial": 6303752, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "efd8e78f16185bc8178c197a14611871", "sha256": "068e03dd71e72ea5f581e15cbc4f8ae293c5378de8c2e62d717607728519f25e"}, "downloads": -1, "filename": "librusapi-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "efd8e78f16185bc8178c197a14611871", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7956, "upload_time": "2019-11-10T18:47:04", "upload_time_iso_8601": "2019-11-10T18:47:04.167687Z", "url": "https://files.pythonhosted.org/packages/91/a2/d038ac8260695003be09a0cfcdae8a6e3d988ccbde98a4b2a04955e0c668/librusapi-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee3aa179890251c927b20233b33f1a4c", "sha256": "55069b3de40fdd84824ff6858bed03ba6e486d4ef2329012c52860f282c0ebfa"}, "downloads": -1, "filename": "librusapi-0.2.tar.gz", "has_sig": false, "md5_digest": "ee3aa179890251c927b20233b33f1a4c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5941, "upload_time": "2019-11-10T18:47:05", "upload_time_iso_8601": "2019-11-10T18:47:05.731908Z", "url": "https://files.pythonhosted.org/packages/95/61/08edf2757b99f9ccb22433dd6c338dd2b1cdd7a04234d5a0920858392caf/librusapi-0.2.tar.gz", "yanked": false}], "0.31": [{"comment_text": "", "digests": {"md5": "638158aa6d916bf51d8093528653fcc6", "sha256": "09f02f1810bf8b263b33f50c256ca6b4987ba4ed31941a1db42e80e19603751e"}, "downloads": -1, "filename": "librusapi-0.31-py3-none-any.whl", "has_sig": false, "md5_digest": "638158aa6d916bf51d8093528653fcc6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10573, "upload_time": "2019-11-10T23:38:43", "upload_time_iso_8601": "2019-11-10T23:38:43.166712Z", "url": "https://files.pythonhosted.org/packages/19/16/6f1480270bcf785c9ccf7315cecfa1e197de0f7bec608b2db44a8f6faeb3/librusapi-0.31-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b877834757432f35f5bf939e64e7731", "sha256": "92d2efabfc5f3677060732e734c4684d553b33d5f25c6c5836031ba49bbbae8e"}, "downloads": -1, "filename": "librusapi-0.31.tar.gz", "has_sig": false, "md5_digest": "7b877834757432f35f5bf939e64e7731", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8745, "upload_time": "2019-11-10T23:38:45", "upload_time_iso_8601": "2019-11-10T23:38:45.014111Z", "url": "https://files.pythonhosted.org/packages/e5/a3/e9407bd2aa5c4b39d9e52899e0436e04c294e615959216db184dbd8ff821/librusapi-0.31.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "3bf4a3dcfcdc1778b62f7b8a199e79ef", "sha256": "f22f3c14dc1f292a2480f30af360d27e42ea09c63646d7071b61c57e10dc2e93"}, "downloads": -1, "filename": "librusapi-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3bf4a3dcfcdc1778b62f7b8a199e79ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12416, "upload_time": "2019-12-14T18:50:13", "upload_time_iso_8601": "2019-12-14T18:50:13.951083Z", "url": "https://files.pythonhosted.org/packages/75/02/e5753191040e14a5f180d3ddf8d2f402e0a597009ee43469f7abc04d3ee2/librusapi-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58514b71f03505fd194705c87a029450", "sha256": "bb936683ea2640e1411554417699db412cdf3f3737929020077435e554940e7f"}, "downloads": -1, "filename": "librusapi-0.4.tar.gz", "has_sig": false, "md5_digest": "58514b71f03505fd194705c87a029450", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9318, "upload_time": "2019-12-14T18:50:15", "upload_time_iso_8601": "2019-12-14T18:50:15.624372Z", "url": "https://files.pythonhosted.org/packages/1d/99/f2abc5124996e876539cf3a8f20b57a2a40b365c0237989fe64bb4164072/librusapi-0.4.tar.gz", "yanked": false}], "0.40": [{"comment_text": "", "digests": {"md5": "7194543e3a97c780093ff72b4abf8d09", "sha256": "54fb1a247a23ff564633a17d3bed728575bd749efa8f01b6a1fd90035d931e5a"}, "downloads": -1, "filename": "librusapi-0.40-py3-none-any.whl", "has_sig": false, "md5_digest": "7194543e3a97c780093ff72b4abf8d09", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12426, "upload_time": "2019-12-14T18:51:17", "upload_time_iso_8601": "2019-12-14T18:51:17.142675Z", "url": "https://files.pythonhosted.org/packages/2e/4e/bbb6359944168c2702ee178c053e15fec43417a2e55dd709894647ae85ad/librusapi-0.40-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65d754e3fb1d008858b92e9a9276c524", "sha256": "00cba3558f69f8dd101852c265f390c2f025630a61d5da005051bf5462558aff"}, "downloads": -1, "filename": "librusapi-0.40.tar.gz", "has_sig": false, "md5_digest": "65d754e3fb1d008858b92e9a9276c524", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9327, "upload_time": "2019-12-14T18:51:19", "upload_time_iso_8601": "2019-12-14T18:51:19.928890Z", "url": "https://files.pythonhosted.org/packages/0c/9f/3aa05e9561557df852019a7aa851f7093c8662df57b14b0d10dd06071049/librusapi-0.40.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7194543e3a97c780093ff72b4abf8d09", "sha256": "54fb1a247a23ff564633a17d3bed728575bd749efa8f01b6a1fd90035d931e5a"}, "downloads": -1, "filename": "librusapi-0.40-py3-none-any.whl", "has_sig": false, "md5_digest": "7194543e3a97c780093ff72b4abf8d09", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12426, "upload_time": "2019-12-14T18:51:17", "upload_time_iso_8601": "2019-12-14T18:51:17.142675Z", "url": "https://files.pythonhosted.org/packages/2e/4e/bbb6359944168c2702ee178c053e15fec43417a2e55dd709894647ae85ad/librusapi-0.40-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65d754e3fb1d008858b92e9a9276c524", "sha256": "00cba3558f69f8dd101852c265f390c2f025630a61d5da005051bf5462558aff"}, "downloads": -1, "filename": "librusapi-0.40.tar.gz", "has_sig": false, "md5_digest": "65d754e3fb1d008858b92e9a9276c524", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9327, "upload_time": "2019-12-14T18:51:19", "upload_time_iso_8601": "2019-12-14T18:51:19.928890Z", "url": "https://files.pythonhosted.org/packages/0c/9f/3aa05e9561557df852019a7aa851f7093c8662df57b14b0d10dd06071049/librusapi-0.40.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:22 2020"}