{"info": {"author": "Knoema", "author_email": "info@knoema.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Programming Language :: Python :: 3 :: Only"], "description": "========================================\nOfficial Python package for Knoema's API\n========================================\n\nThis is the official documentation for Knoema's Python Package. The package can be used for obtaining data from the datasets from the site knoema.com and uploading data to datasets. This package is compatible with Python v3.x+.\n\n************\nInstallation\n************\n\nThe installation process varies depending on your python version and system used. However, in most cases, the following should work::\n\n        pip install knoema \n\nAlternatively, on some systems, python3 may use a different pip executable and may need to be installed via an alternate pip command. For example::\n\n        pip3 install knoema\n\n*************\nConfiguration\n*************\nBy default the package allows you to work only with public datasets from the site knoema.com.\n\nIf you want work with private datasets, you need to use the next code::\n\n    import knoema\n    apicfg = knoema.ApiConfig()\n    apicfg.host = 'knoema.com'\n    apicfg.app_id = \"some_app_id\"\n    apicfg.app_secret = \"some_app_secret\"\n\nYou can get parameters app_id and app_secret after registering on the site knoema.com, in the section \"My profile - Apps - create new\" (or use existing applications).\n\nAlso, you can use other hosts supported by knoema.\n\n*******************************\nRetrieving series from datasets\n*******************************\nThere are one method for retrieving series from datasets in Python: the **get** method. The method works with knoema datasets.\n\nThe following quick call can be used to retrieve a timeserie from dataset::\n\n   import knoema\n   data_frame = knoema.get('IMFWEO2017Oct', country='914', subject='ngdp')\n\nwhere:\n\n* 'IMFWEO2017Oct' this is a public dataset, that available for all users by reference https://knoema.com/IMFWEO2017Oct.\n* country and subject are dimensions names\n* '914' is id of country *Albania*\n* 'ngdp' is id of subject *Gross domestic product, current prices (U.S. dollars)*\n\nThis example finds all data points for the dataset IMFWEO2017Oct with selection by country = *Albania* and subject =  *Gross domestic product, current prices (U.S. dollars)* and stores this series in a pandas dataframe. You can then view the dataframe with operations *data_frame.head()* or *print(date_frame)*\n\nIf some dimension is not specified, the method will consider all the elements in this dimension. Example::\n\n    data_frame = knoema.get('IMFWEO2017Oct', subject = 'flibor6')\n\nFor multiple selection you can use the next examples::\n\n    import knoema\n    data_frame = knoema.get('IMFWEO2017Oct', country='914;512;111', subject='lp;ngdp')\n\nor::\n\n    import knoema\n    data_frame = knoema.get('IMFWEO2017Oct', country=['914','512','111'], subject=['lp','ngdp'])\n\n\nFor case when the dimensions of dataset that have multi word names use the next example::\n\n    import knoema\n    data_frame = knoema.get('FDI_FLOW_CTRY', **{'Reporting country': 'AUS',\n                                                    'Partner country/territory': 'w0',\n                                                    'Measurement principle': 'DI',\n                                                    'Type of FDI': 'T_FA_F',\n                                                    'Type of entity': 'ALL',\n                                                    'Accounting entry': 'NET',\n                                                    'Level of counterpart': 'IMC',\n                                                    'Currency': 'USD'})\n\nIf specified elements' names contain semicolons you can override default elements separator like that::\n\n    import knoema\n    data_frame = knoema.get('IMFWEO2019Oct',\n        country='Albania',\n        subject='Gross domestic product, constant prices (Percent change)|Gross domestic product per capita, constant prices (Purchasing power parity; 2011 international dollar)',\n        separator='|')\n\n\nIn addition to the required using of the selections for dimensions, you can additionally specify the period and frequencies in the parameters. For more details, see the example below::\n\n    import knoema\n    data_frame = knoema.get('IMFWEO2017Oct', country='914;512;111', subject='lp;ngdp', frequency='A', timerange='2007-2017')\n\n******************************************************\nRetrieving series from datasets including metadata\n******************************************************\nBy default the function knoema.get returns the one dataframe with data. If you want also get information about metadata(attributes, unit, scale, mnemonics), include the additional parameter in your function, like this::\n\n     import knoema\n     data, metadata = knoema.get('IMFWEO2017Oct', True, country=['914','512'], subject='lp')\n\nThe function, in this case, returns two dataframes - one with data, second with metadata.    \n\n********************\nData Transformation\n********************\nYou can use transform parameter to apply transformation to requested data, like this::\n\n\n   import knoema\n   data_frame = knoema.get('IMFWEO2017Oct', country='914', subject='ngdp', transform='PCH')\n\nThe supported values of transform parameter are the following:\n\n* PCH \u2013 % Change, a change from the previous month\n* PCHY \u2013 % Change from a year ago, a change from the same month of the previous year \n* PCHA \u2013 % Change, annualized, a change from the previous month raised by 12 in the case of monthly data, and by 4 in the case of quarterly data.\n* DIFF \u2013 Change, an absolute change from the previous month which represents value in the current month minus the value in the previous month.\n* DIFFY \u2013 Change from a year ago\n* DIFFA \u2013 Change, YTD\n* DIFFYTD \u2013 Change, YTD (year to date), an absolute change from the beginning of the year\n* DLOG \u2013 Log difference, the difference of natural logarithms of the current and previous period which is equivalent to the % change.\n* DLOGY \u2013 Log Difference from a year ago\n* DLOGYTD \u2013 Log Difference, YTD\n* YTD \u2013 Year to date, the sum of values since the start of the year.\n* ABS - the function that returns the absolute value of a number.\n\nIn order to get requested data normalized to specific frequency, you can specify frequency parameter, like this::\n\n    import knoema\n    data_frame = knoema.get('IMFWEO2017Oct', country='914;512;111', subject='lp;ngdp', frequency='M')\n\nWhen the frequency of time-series is different from the value of Frequency parameter aggregation/disaggregation of data is performed.\n\nFor datasets with several date columns you can specify particular column with datecolumn parameter, like this::\n\n    import knoema\n    data_frame = knoema.get('bjxchy', country='Albania', measure='Original Principal Amount ($)', datecolumn='Effective Date (Most Recent)', timerange='2010-2015', frequency='A')\n\n******************\nUploading Dataset\n******************\nIn order to update the dataset, you must have the access rights to do this. For this, you need to specify the appropriate parameters app_id and app_secret. See section *Configuration*.\n\nif you have access rights and file for uploading, use the next code::\n\n    knoema.upload(file_path, dataset=None, public=False)\n\nwhere:\n\n* file_path - the string variable which provides path to the file which will be uploaded to the dataset,\n* dataset - the string variable which provides id of the dataset that is going to be updated from the file. If dataset is None then new dataset will be created  based on the file,\n* public - the boolean variable which makes dataset public if public flag is true. Default value is false.\n\nThe function returns dataset id if upload is succesfull and raise an exception otherwise.\n\n\n******************\nVerifying Dataset\n******************\nIn order to verify the dataset, you must have the access rights to do this. Please check if you are allowed to verify dataset with your Portal administrator and specify the appropriate parameters app_id and app_secret. See section *Configuration*.\n\nif you have access rights, use the next code::\n\n    knoema.verify('dataset_id', 'publication_date', 'source', 'refernce_url')\n\nwhere:\n\n* 'dataset_id' - the string variable which should provide id of the dataset that is going to be verified\n* 'publication_date' - the datetime variable which should provide the date when dataset has been published\n* 'source' - the string variable which should provide the source for the dataset (e.g. IMF)\n* 'refernce_url' - the string variable which should provide URL to the source or a site from where the dataset has been downloaded\n\n\n******************\nDeleting Dataset\n******************\nIn order to delete the dataset, you must have the access rights to do this. For this, you need to specify the appropriate parameters app_id and app_secret. See section *Configuration*.\n\nif you have access rights, use the next code::\n\n    knoema.delete('dataset_id')\n\nwhere:\n\n* 'dataset_id' - the string variable which should provide id of the dataset that is going to be deleted\n\n**********************\nSearching by mnemonics\n**********************\nThe search by mnemonics is implemented in knoema. Mnemonics is a unique identifier of the series. Different datasets can have the same series with the same mnemonics. In this case, in the search results there will be a series that was updated last. The same series can have several mnemonics at once, and you can search for any of them. \nAn example of using the search for mnemonics::\n\n    data_frame = knoema.get('dataset_id', mnemonics = 'mnemonic1;mnemonic2')\n    data_frame, metadata = knoema.get('dataset_id',True, mnemonics = ['mnemonic1','mnemonic2'])\n\nIf you are downloading data by mnemonics without providing dataset id, you can use this example::\n    data_frame = knoema.get(mnemonics = 'mnemonic1;mnemonic2')\n    data_frame = knoema.get(None, mnemonics = 'mnemonic1;mnemonic2')\n    data_frame, metadata = knoema.get(dataset = None, include_metadata = True, mnemonics = ['mnemonic1','mnemonic2'])\n\n*******************************************************\nPossible errors in Knoema package and how to avoid them\n*******************************************************\n1. \"ValueError: Dataset id is not specified\"\n\nThis error appears when you use None instead dataset's Id.\nExample::\n\n    knoema.get(None)\n\n2. \"ValueError: Dimension with id or name some_name_of_dimension is not found\"\n\nThis error appears when you use name that doesn't correspond to any existing dimensions' names or ids.\nExamples::\n\n    knoema.get('IMFWEO2017Oct', dimension_not_exist='914', subject='lp')\n    knoema.get('IMFWEO2017Oct', **{'dimension not exist':'914', 'subject':'lp'})\n\n3. \"ValueError: Selection for dimension dimension_name is empty\"\n\nThis error appears when you use empty selection for dimension .\nExamples::\n\n    knoema.get('IMFWEO2017Oct', country ='', subject='lp')\n    knoema.get('IMFWEO2017Oct', **{'country':'914', 'subject':''})\n\n4. \"ValueError: Requested dataset doesn't exist or you don't have access to it\"\n\nThis error appears when you use dataset that doesn't exist or you don't have access rights to it.\nExample::\n\n    knoema.get('IMFWEO2017Apr1', **{'country':'914', 'subject':'lp;ngdp'})\n\nThis dataset doesn't exist. If your dataset exist, and you have access to it, check that you set api_config with app_id and app_secret.\n\n5. \"ValueError: \"Underlying data is very large. Can't create visualization\"\n\nThis error appears when you use a big selection. Try to decrease the selection.\n\n6. \"The specified host incorect_host doesn't exist\"\n\nThis error appears when you use host that doesn't exist.\nExample::\n\n    apicfg = knoema.ApiConfig()\n    apicfg.host = 'knoema_incorect.com'\n    data_frame = knoema.get('IMFWEO2017Oct', country='914', subject='ngdp')\n\n7. \"HTTPError:  HTTP Error 400: Bad Request\"\n\nThis error appears when you try to delete dataset that doesn't exist or you don't have access rights to it.\nExample::\n\n    knoema.delete('nonexistent_dataset')\n\nIf you have access to it, check that you set api_config with app_id and app_secret.\n\n8. \"HTTPError: HTTP Error 403: The number of requests for /api/meta/dataset/datasetId/dimension/dimensionId exceeds 50\"\n\nThis error appears when you use public user (api_config without app_id and app_secret parameters set) and reached the limit of requests.\nYou can avoid this error, using api_config with app_id and app_secret.\n\n9. \"HTTPError: HTTP Error 403: The number of requests for /api/meta/dataset/datasetId/dimension/dimensionId exceeds 500\"\n\nThis error appears when you use api_config with app_id and app_secret parameters set, and reached the limit of requests.\nYou can avoid this error, using other parameters app_id and app_secret.\n\n10. \"HTTPError: HTTP Error 403: invalid REST authentication credentials\"\n\nThis error appears when you try to use api_config with app_id and app_secret, but they are incorrect. \nYou can avoid this error, using other parameters app_id and app_secret.\n\n11. \"AttributeError: 'str' object has no attribute 'strftime'\"\n\nThis error appears when you use string data instead datetime.\nExample::\n\n    knoema.verify('IMFWEO2017Oct','2017-5-7','IMF','http://knoema.com')\n\nYou can avoid this error using datetime instead string date.\nExample::\n\n    knoema.verify('IMFWEO2017Oct',datetime(2017,5,7),'IMF','http://knoema.com')\n\n12. \"ValueError: The function does not support the simultaneous use of mnemonic and selection\"\nThis error appears when you use mnemonics and selection in one query.\nExample::\n\n    knoema.get('IMFWEO2017Oct', mnemonics = 'some_mnemonic', country ='912', subject='lp')\n    knoema.get(None, mnemonics = 'some_mnemonic', country = 'USA')\n\n13. \"ValueError: Selection for dimension dimension_name contains invalid elements\"\n\nThis error appears when any of the specified elements don't exist.\nExamples::\n\n    knoema.get('IMFWEO2017Oct', **{'country':'914', 'subject':'nonexistent_element1; nonexistent_element2'})\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Knoema/knoema-python-driver", "keywords": "API,knoema", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "knoema", "package_url": "https://pypi.org/project/knoema/", "platform": "", "project_url": "https://pypi.org/project/knoema/", "project_urls": {"Homepage": "https://github.com/Knoema/knoema-python-driver"}, "release_url": "https://pypi.org/project/knoema/1.0.23/", "requires_dist": ["pandas"], "requires_python": "", "summary": "Official Python package for Knoema's API", "version": "1.0.23", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is the official documentation for Knoema\u2019s Python Package. The package can be used for obtaining data from the datasets from the site knoema.com and uploading data to datasets. This package is compatible with Python v3.x+.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The installation process varies depending on your python version and system used. However, in most cases, the following should work:</p>\n<pre>pip install knoema\n</pre>\n<p>Alternatively, on some systems, python3 may use a different pip executable and may need to be installed via an alternate pip command. For example:</p>\n<pre>pip3 install knoema\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>By default the package allows you to work only with public datasets from the site knoema.com.</p>\n<p>If you want work with private datasets, you need to use the next code:</p>\n<pre>import knoema\napicfg = knoema.ApiConfig()\napicfg.host = 'knoema.com'\napicfg.app_id = \"some_app_id\"\napicfg.app_secret = \"some_app_secret\"\n</pre>\n<p>You can get parameters app_id and app_secret after registering on the site knoema.com, in the section \u201cMy profile - Apps - create new\u201d (or use existing applications).</p>\n<p>Also, you can use other hosts supported by knoema.</p>\n</div>\n<div id=\"retrieving-series-from-datasets\">\n<h2>Retrieving series from datasets</h2>\n<p>There are one method for retrieving series from datasets in Python: the <strong>get</strong> method. The method works with knoema datasets.</p>\n<p>The following quick call can be used to retrieve a timeserie from dataset:</p>\n<pre>import knoema\ndata_frame = knoema.get('IMFWEO2017Oct', country='914', subject='ngdp')\n</pre>\n<p>where:</p>\n<ul>\n<li>\u2018IMFWEO2017Oct\u2019 this is a public dataset, that available for all users by reference <a href=\"https://knoema.com/IMFWEO2017Oct\" rel=\"nofollow\">https://knoema.com/IMFWEO2017Oct</a>.</li>\n<li>country and subject are dimensions names</li>\n<li>\u2018914\u2019 is id of country <em>Albania</em></li>\n<li>\u2018ngdp\u2019 is id of subject <em>Gross domestic product, current prices (U.S. dollars)</em></li>\n</ul>\n<p>This example finds all data points for the dataset IMFWEO2017Oct with selection by country = <em>Albania</em> and subject =  <em>Gross domestic product, current prices (U.S. dollars)</em> and stores this series in a pandas dataframe. You can then view the dataframe with operations <em>data_frame.head()</em> or <em>print(date_frame)</em></p>\n<p>If some dimension is not specified, the method will consider all the elements in this dimension. Example:</p>\n<pre>data_frame = knoema.get('IMFWEO2017Oct', subject = 'flibor6')\n</pre>\n<p>For multiple selection you can use the next examples:</p>\n<pre>import knoema\ndata_frame = knoema.get('IMFWEO2017Oct', country='914;512;111', subject='lp;ngdp')\n</pre>\n<p>or:</p>\n<pre>import knoema\ndata_frame = knoema.get('IMFWEO2017Oct', country=['914','512','111'], subject=['lp','ngdp'])\n</pre>\n<p>For case when the dimensions of dataset that have multi word names use the next example:</p>\n<pre>import knoema\ndata_frame = knoema.get('FDI_FLOW_CTRY', **{'Reporting country': 'AUS',\n                                                'Partner country/territory': 'w0',\n                                                'Measurement principle': 'DI',\n                                                'Type of FDI': 'T_FA_F',\n                                                'Type of entity': 'ALL',\n                                                'Accounting entry': 'NET',\n                                                'Level of counterpart': 'IMC',\n                                                'Currency': 'USD'})\n</pre>\n<p>If specified elements\u2019 names contain semicolons you can override default elements separator like that:</p>\n<pre>import knoema\ndata_frame = knoema.get('IMFWEO2019Oct',\n    country='Albania',\n    subject='Gross domestic product, constant prices (Percent change)|Gross domestic product per capita, constant prices (Purchasing power parity; 2011 international dollar)',\n    separator='|')\n</pre>\n<p>In addition to the required using of the selections for dimensions, you can additionally specify the period and frequencies in the parameters. For more details, see the example below:</p>\n<pre>import knoema\ndata_frame = knoema.get('IMFWEO2017Oct', country='914;512;111', subject='lp;ngdp', frequency='A', timerange='2007-2017')\n</pre>\n</div>\n<div id=\"retrieving-series-from-datasets-including-metadata\">\n<h2>Retrieving series from datasets including metadata</h2>\n<p>By default the function knoema.get returns the one dataframe with data. If you want also get information about metadata(attributes, unit, scale, mnemonics), include the additional parameter in your function, like this:</p>\n<pre>import knoema\ndata, metadata = knoema.get('IMFWEO2017Oct', True, country=['914','512'], subject='lp')\n</pre>\n<p>The function, in this case, returns two dataframes - one with data, second with metadata.</p>\n</div>\n<div id=\"data-transformation\">\n<h2>Data Transformation</h2>\n<p>You can use transform parameter to apply transformation to requested data, like this:</p>\n<pre>import knoema\ndata_frame = knoema.get('IMFWEO2017Oct', country='914', subject='ngdp', transform='PCH')\n</pre>\n<p>The supported values of transform parameter are the following:</p>\n<ul>\n<li>PCH \u2013 % Change, a change from the previous month</li>\n<li>PCHY \u2013 % Change from a year ago, a change from the same month of the previous year</li>\n<li>PCHA \u2013 % Change, annualized, a change from the previous month raised by 12 in the case of monthly data, and by 4 in the case of quarterly data.</li>\n<li>DIFF \u2013 Change, an absolute change from the previous month which represents value in the current month minus the value in the previous month.</li>\n<li>DIFFY \u2013 Change from a year ago</li>\n<li>DIFFA \u2013 Change, YTD</li>\n<li>DIFFYTD \u2013 Change, YTD (year to date), an absolute change from the beginning of the year</li>\n<li>DLOG \u2013 Log difference, the difference of natural logarithms of the current and previous period which is equivalent to the % change.</li>\n<li>DLOGY \u2013 Log Difference from a year ago</li>\n<li>DLOGYTD \u2013 Log Difference, YTD</li>\n<li>YTD \u2013 Year to date, the sum of values since the start of the year.</li>\n<li>ABS - the function that returns the absolute value of a number.</li>\n</ul>\n<p>In order to get requested data normalized to specific frequency, you can specify frequency parameter, like this:</p>\n<pre>import knoema\ndata_frame = knoema.get('IMFWEO2017Oct', country='914;512;111', subject='lp;ngdp', frequency='M')\n</pre>\n<p>When the frequency of time-series is different from the value of Frequency parameter aggregation/disaggregation of data is performed.</p>\n<p>For datasets with several date columns you can specify particular column with datecolumn parameter, like this:</p>\n<pre>import knoema\ndata_frame = knoema.get('bjxchy', country='Albania', measure='Original Principal Amount ($)', datecolumn='Effective Date (Most Recent)', timerange='2010-2015', frequency='A')\n</pre>\n</div>\n<div id=\"uploading-dataset\">\n<h2>Uploading Dataset</h2>\n<p>In order to update the dataset, you must have the access rights to do this. For this, you need to specify the appropriate parameters app_id and app_secret. See section <em>Configuration</em>.</p>\n<p>if you have access rights and file for uploading, use the next code:</p>\n<pre>knoema.upload(file_path, dataset=None, public=False)\n</pre>\n<p>where:</p>\n<ul>\n<li>file_path - the string variable which provides path to the file which will be uploaded to the dataset,</li>\n<li>dataset - the string variable which provides id of the dataset that is going to be updated from the file. If dataset is None then new dataset will be created  based on the file,</li>\n<li>public - the boolean variable which makes dataset public if public flag is true. Default value is false.</li>\n</ul>\n<p>The function returns dataset id if upload is succesfull and raise an exception otherwise.</p>\n</div>\n<div id=\"verifying-dataset\">\n<h2>Verifying Dataset</h2>\n<p>In order to verify the dataset, you must have the access rights to do this. Please check if you are allowed to verify dataset with your Portal administrator and specify the appropriate parameters app_id and app_secret. See section <em>Configuration</em>.</p>\n<p>if you have access rights, use the next code:</p>\n<pre>knoema.verify('dataset_id', 'publication_date', 'source', 'refernce_url')\n</pre>\n<p>where:</p>\n<ul>\n<li>\u2018dataset_id\u2019 - the string variable which should provide id of the dataset that is going to be verified</li>\n<li>\u2018publication_date\u2019 - the datetime variable which should provide the date when dataset has been published</li>\n<li>\u2018source\u2019 - the string variable which should provide the source for the dataset (e.g. IMF)</li>\n<li>\u2018refernce_url\u2019 - the string variable which should provide URL to the source or a site from where the dataset has been downloaded</li>\n</ul>\n</div>\n<div id=\"deleting-dataset\">\n<h2>Deleting Dataset</h2>\n<p>In order to delete the dataset, you must have the access rights to do this. For this, you need to specify the appropriate parameters app_id and app_secret. See section <em>Configuration</em>.</p>\n<p>if you have access rights, use the next code:</p>\n<pre>knoema.delete('dataset_id')\n</pre>\n<p>where:</p>\n<ul>\n<li>\u2018dataset_id\u2019 - the string variable which should provide id of the dataset that is going to be deleted</li>\n</ul>\n</div>\n<div id=\"searching-by-mnemonics\">\n<h2>Searching by mnemonics</h2>\n<p>The search by mnemonics is implemented in knoema. Mnemonics is a unique identifier of the series. Different datasets can have the same series with the same mnemonics. In this case, in the search results there will be a series that was updated last. The same series can have several mnemonics at once, and you can search for any of them.\nAn example of using the search for mnemonics:</p>\n<pre>data_frame = knoema.get('dataset_id', mnemonics = 'mnemonic1;mnemonic2')\ndata_frame, metadata = knoema.get('dataset_id',True, mnemonics = ['mnemonic1','mnemonic2'])\n</pre>\n<dl>\n<dt>If you are downloading data by mnemonics without providing dataset id, you can use this example::</dt>\n<dd>data_frame = knoema.get(mnemonics = \u2018mnemonic1;mnemonic2\u2019)\ndata_frame = knoema.get(None, mnemonics = \u2018mnemonic1;mnemonic2\u2019)\ndata_frame, metadata = knoema.get(dataset = None, include_metadata = True, mnemonics = [\u2018mnemonic1\u2019,\u2019mnemonic2\u2019])</dd>\n</dl>\n</div>\n<div id=\"possible-errors-in-knoema-package-and-how-to-avoid-them\">\n<h2>Possible errors in Knoema package and how to avoid them</h2>\n<ol>\n<li>\u201cValueError: Dataset id is not specified\u201d</li>\n</ol>\n<p>This error appears when you use None instead dataset\u2019s Id.\nExample:</p>\n<pre>knoema.get(None)\n</pre>\n<ol>\n<li>\u201cValueError: Dimension with id or name some_name_of_dimension is not found\u201d</li>\n</ol>\n<p>This error appears when you use name that doesn\u2019t correspond to any existing dimensions\u2019 names or ids.\nExamples:</p>\n<pre>knoema.get('IMFWEO2017Oct', dimension_not_exist='914', subject='lp')\nknoema.get('IMFWEO2017Oct', **{'dimension not exist':'914', 'subject':'lp'})\n</pre>\n<ol>\n<li>\u201cValueError: Selection for dimension dimension_name is empty\u201d</li>\n</ol>\n<p>This error appears when you use empty selection for dimension .\nExamples:</p>\n<pre>knoema.get('IMFWEO2017Oct', country ='', subject='lp')\nknoema.get('IMFWEO2017Oct', **{'country':'914', 'subject':''})\n</pre>\n<ol>\n<li>\u201cValueError: Requested dataset doesn\u2019t exist or you don\u2019t have access to it\u201d</li>\n</ol>\n<p>This error appears when you use dataset that doesn\u2019t exist or you don\u2019t have access rights to it.\nExample:</p>\n<pre>knoema.get('IMFWEO2017Apr1', **{'country':'914', 'subject':'lp;ngdp'})\n</pre>\n<p>This dataset doesn\u2019t exist. If your dataset exist, and you have access to it, check that you set api_config with app_id and app_secret.</p>\n<ol>\n<li>\u201cValueError: \u201cUnderlying data is very large. Can\u2019t create visualization\u201d</li>\n</ol>\n<p>This error appears when you use a big selection. Try to decrease the selection.</p>\n<ol>\n<li>\u201cThe specified host incorect_host doesn\u2019t exist\u201d</li>\n</ol>\n<p>This error appears when you use host that doesn\u2019t exist.\nExample:</p>\n<pre>apicfg = knoema.ApiConfig()\napicfg.host = 'knoema_incorect.com'\ndata_frame = knoema.get('IMFWEO2017Oct', country='914', subject='ngdp')\n</pre>\n<ol>\n<li>\u201cHTTPError:  HTTP Error 400: Bad Request\u201d</li>\n</ol>\n<p>This error appears when you try to delete dataset that doesn\u2019t exist or you don\u2019t have access rights to it.\nExample:</p>\n<pre>knoema.delete('nonexistent_dataset')\n</pre>\n<p>If you have access to it, check that you set api_config with app_id and app_secret.</p>\n<ol>\n<li>\u201cHTTPError: HTTP Error 403: The number of requests for /api/meta/dataset/datasetId/dimension/dimensionId exceeds 50\u201d</li>\n</ol>\n<p>This error appears when you use public user (api_config without app_id and app_secret parameters set) and reached the limit of requests.\nYou can avoid this error, using api_config with app_id and app_secret.</p>\n<ol>\n<li>\u201cHTTPError: HTTP Error 403: The number of requests for /api/meta/dataset/datasetId/dimension/dimensionId exceeds 500\u201d</li>\n</ol>\n<p>This error appears when you use api_config with app_id and app_secret parameters set, and reached the limit of requests.\nYou can avoid this error, using other parameters app_id and app_secret.</p>\n<ol>\n<li>\u201cHTTPError: HTTP Error 403: invalid REST authentication credentials\u201d</li>\n</ol>\n<p>This error appears when you try to use api_config with app_id and app_secret, but they are incorrect.\nYou can avoid this error, using other parameters app_id and app_secret.</p>\n<ol>\n<li>\u201cAttributeError: \u2018str\u2019 object has no attribute \u2018strftime\u2019\u201d</li>\n</ol>\n<p>This error appears when you use string data instead datetime.\nExample:</p>\n<pre>knoema.verify('IMFWEO2017Oct','2017-5-7','IMF','http://knoema.com')\n</pre>\n<p>You can avoid this error using datetime instead string date.\nExample:</p>\n<pre>knoema.verify('IMFWEO2017Oct',datetime(2017,5,7),'IMF','http://knoema.com')\n</pre>\n<p>12. \u201cValueError: The function does not support the simultaneous use of mnemonic and selection\u201d\nThis error appears when you use mnemonics and selection in one query.\nExample:</p>\n<pre>knoema.get('IMFWEO2017Oct', mnemonics = 'some_mnemonic', country ='912', subject='lp')\nknoema.get(None, mnemonics = 'some_mnemonic', country = 'USA')\n</pre>\n<ol>\n<li>\u201cValueError: Selection for dimension dimension_name contains invalid elements\u201d</li>\n</ol>\n<p>This error appears when any of the specified elements don\u2019t exist.\nExamples:</p>\n<pre>knoema.get('IMFWEO2017Oct', **{'country':'914', 'subject':'nonexistent_element1; nonexistent_element2'})\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7067174, "releases": {"0.1.10b1": [{"comment_text": "", "digests": {"md5": "f9d7162b0b9d453af04fde0fed42df63", "sha256": "f348ca8bfc88cbaa9fdc47751c5f786ebd2a8ca7e2a3edda2faad8323ee9eca5"}, "downloads": -1, "filename": "knoema-0.1.10b1-py3-none-any.whl", "has_sig": false, "md5_digest": "f9d7162b0b9d453af04fde0fed42df63", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11926, "upload_time": "2017-07-03T12:40:02", "upload_time_iso_8601": "2017-07-03T12:40:02.203826Z", "url": "https://files.pythonhosted.org/packages/25/4b/2e3faf859d1be345bfc62222d92991c7d31827747b94bb630efd099b7e52/knoema-0.1.10b1-py3-none-any.whl", "yanked": false}], "0.1.11b1": [{"comment_text": "", "digests": {"md5": "0176f462ee5e88fce8ca87c9f02bc651", "sha256": "589f0e033be5f290a75929b2b4341d550cbeca0f3902bb483abcf25b94b0618e"}, "downloads": -1, "filename": "knoema-0.1.11b1-py3-none-any.whl", "has_sig": false, "md5_digest": "0176f462ee5e88fce8ca87c9f02bc651", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11975, "upload_time": "2017-07-18T11:09:23", "upload_time_iso_8601": "2017-07-18T11:09:23.283880Z", "url": "https://files.pythonhosted.org/packages/68/49/2f5bde26c4f668f386ad65d74583e0f22de77f1c19234c1929099012d9ac/knoema-0.1.11b1-py3-none-any.whl", "yanked": false}], "0.1.12b1": [{"comment_text": "", "digests": {"md5": "f5d6f4ed7d188b6034068143cd858732", "sha256": "bf11d364c0e6b4abfa331331f855bd98839da7bfba0e41efde2fbe712fd36e85"}, "downloads": -1, "filename": "knoema-0.1.12b1-py3-none-any.whl", "has_sig": false, "md5_digest": "f5d6f4ed7d188b6034068143cd858732", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12006, "upload_time": "2017-08-10T11:41:21", "upload_time_iso_8601": "2017-08-10T11:41:21.648101Z", "url": "https://files.pythonhosted.org/packages/1b/5c/f023af641eb7dc19cf78518c51624d5f20e5cf2f8e8b7d9fac6d24eef405/knoema-0.1.12b1-py3-none-any.whl", "yanked": false}], "0.1.14b1": [{"comment_text": "", "digests": {"md5": "f469700d04bc80db900f3ed27523eede", "sha256": "025897dfdfcbfe9f48dc340ab1015b12a1b6bbb8258e8c352f6d2f7bc60dbbe8"}, "downloads": -1, "filename": "knoema-0.1.14b1-py3-none-any.whl", "has_sig": false, "md5_digest": "f469700d04bc80db900f3ed27523eede", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12764, "upload_time": "2017-08-10T11:41:23", "upload_time_iso_8601": "2017-08-10T11:41:23.038193Z", "url": "https://files.pythonhosted.org/packages/57/35/1518f986efd9b0818eeb22b010a08ca2e22f5f1209e992ef77640b603226/knoema-0.1.14b1-py3-none-any.whl", "yanked": false}], "0.1.15b1": [{"comment_text": "", "digests": {"md5": "0ed534c36cfa47c66e0fb36fcee2ff48", "sha256": "126882e772fa00093332937db10d635db935767a0ec238e084a34ade79f38578"}, "downloads": -1, "filename": "knoema-0.1.15b1-py3-none-any.whl", "has_sig": false, "md5_digest": "0ed534c36cfa47c66e0fb36fcee2ff48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12004, "upload_time": "2017-08-10T11:46:27", "upload_time_iso_8601": "2017-08-10T11:46:27.463520Z", "url": "https://files.pythonhosted.org/packages/1a/72/451b7c398940fd72229d72879fc30aef8e2be8ea623cb7bc4a6275d3da06/knoema-0.1.15b1-py3-none-any.whl", "yanked": false}], "0.1.17b1": [{"comment_text": "", "digests": {"md5": "f40ffb3af4a56614acaeda85922f0da9", "sha256": "0144b21b734c6c5168300bea36edae83bac7fbc9601085b1266351fe874a6057"}, "downloads": -1, "filename": "knoema-0.1.17b1-py3-none-any.whl", "has_sig": false, "md5_digest": "f40ffb3af4a56614acaeda85922f0da9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12858, "upload_time": "2017-08-15T09:36:57", "upload_time_iso_8601": "2017-08-15T09:36:57.539415Z", "url": "https://files.pythonhosted.org/packages/82/58/e3ad82a9997c490d1ac23907deac2273820df33bcb9385de7fb7911ea341/knoema-0.1.17b1-py3-none-any.whl", "yanked": false}], "0.1.19b1": [{"comment_text": "", "digests": {"md5": "eef4f96145542831886eca23b8faa9cd", "sha256": "48dfbf64b979aef75f1a8ee0c076813f2cb49815e7e75628dba1804063db8490"}, "downloads": -1, "filename": "knoema-0.1.19b1-py3-none-any.whl", "has_sig": false, "md5_digest": "eef4f96145542831886eca23b8faa9cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13193, "upload_time": "2017-08-16T12:13:13", "upload_time_iso_8601": "2017-08-16T12:13:13.256646Z", "url": "https://files.pythonhosted.org/packages/40/9e/55648d2ce8bdeac245733da2d87d6c4da6fea801b0276ddbfe1aa913652d/knoema-0.1.19b1-py3-none-any.whl", "yanked": false}], "0.1.7b1": [{"comment_text": "", "digests": {"md5": "1c183c6087c4e42fde7e2245d13ee107", "sha256": "9baacd7a64e0b16d1dbbecda067ec3b96a105de0eb37d04a0facbf41981b5a32"}, "downloads": -1, "filename": "knoema-0.1.7b1-py3-none-any.whl", "has_sig": false, "md5_digest": "1c183c6087c4e42fde7e2245d13ee107", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11687, "upload_time": "2017-06-27T12:20:40", "upload_time_iso_8601": "2017-06-27T12:20:40.522775Z", "url": "https://files.pythonhosted.org/packages/1f/10/5ab252a4af89fdad9f5ff42e23c9130fef9bf85cff22de58d35891b431b7/knoema-0.1.7b1-py3-none-any.whl", "yanked": false}], "0.1.9b1": [{"comment_text": "", "digests": {"md5": "3a3cbcf6e47d2daa53b886fa31bcfbc3", "sha256": "e5680784bb5a6bbd61ae945dd582c848a0a682b0ae8d04ff8a0425b5af0d85b2"}, "downloads": -1, "filename": "knoema-0.1.9b1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a3cbcf6e47d2daa53b886fa31bcfbc3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11898, "upload_time": "2017-06-29T13:55:45", "upload_time_iso_8601": "2017-06-29T13:55:45.779149Z", "url": "https://files.pythonhosted.org/packages/e0/76/fe6544e09d6289eec663e777c4e038297ac8e41099498d2a56afd754a5e2/knoema-0.1.9b1-py3-none-any.whl", "yanked": false}], "1.0.0b1": [{"comment_text": "", "digests": {"md5": "7e05928dc0a93772d0bb9ac962bfe378", "sha256": "dcd357c75a4ca27ab4aa5e03d203de53c66cf6e03191eff892f81c15f080361f"}, "downloads": -1, "filename": "knoema-1.0.0b1-py3-none-any.whl", "has_sig": false, "md5_digest": "7e05928dc0a93772d0bb9ac962bfe378", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13331, "upload_time": "2017-09-07T10:30:48", "upload_time_iso_8601": "2017-09-07T10:30:48.747887Z", "url": "https://files.pythonhosted.org/packages/45/bb/c8b34a2748e38a029453e54d41032400f9bef50756a24d6eb7ce261943aa/knoema-1.0.0b1-py3-none-any.whl", "yanked": false}], "1.0.10b1": [{"comment_text": "", "digests": {"md5": "1a8dbf41e7b578a4876e9f53cb882a19", "sha256": "d4e2eb450494c7dc5c22ed25b2ae323226c94ccf3666901fafbacf10727c7868"}, "downloads": -1, "filename": "knoema-1.0.10b1-py3-none-any.whl", "has_sig": false, "md5_digest": "1a8dbf41e7b578a4876e9f53cb882a19", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17775, "upload_time": "2017-11-10T09:17:29", "upload_time_iso_8601": "2017-11-10T09:17:29.633584Z", "url": "https://files.pythonhosted.org/packages/be/26/568e7ef7ef18165b68e596909bce29e13faa7c893d74a88eff6464207fb4/knoema-1.0.10b1-py3-none-any.whl", "yanked": false}], "1.0.11b1": [{"comment_text": "", "digests": {"md5": "16172dcafac2516ae772db9ff1c0626e", "sha256": "b74488a375b51c7201b48dd82a4ff5678c90856a8a1ae031dfe2a1e9f1e34b09"}, "downloads": -1, "filename": "knoema-1.0.11b1-py3-none-any.whl", "has_sig": false, "md5_digest": "16172dcafac2516ae772db9ff1c0626e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18451, "upload_time": "2017-11-29T07:13:08", "upload_time_iso_8601": "2017-11-29T07:13:08.127131Z", "url": "https://files.pythonhosted.org/packages/30/ed/51204854aa32b278ecadf6f0fee21ed90e95a249d4d2dd5ad54fea5187d2/knoema-1.0.11b1-py3-none-any.whl", "yanked": false}], "1.0.12b1": [{"comment_text": "", "digests": {"md5": "12420c04556850a06bd6ca62becd3ca2", "sha256": "a78a51ec5879c0cd97599edb1fe367034485ef77101f2a55b4b2f2cde678d16b"}, "downloads": -1, "filename": "knoema-1.0.12b1-py3-none-any.whl", "has_sig": false, "md5_digest": "12420c04556850a06bd6ca62becd3ca2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18466, "upload_time": "2017-12-25T12:41:45", "upload_time_iso_8601": "2017-12-25T12:41:45.848813Z", "url": "https://files.pythonhosted.org/packages/c8/db/34a4b6b7eb46443874991e3485d30ddec1edda7f469dd286a360fdf36972/knoema-1.0.12b1-py3-none-any.whl", "yanked": false}], "1.0.13b1": [{"comment_text": "", "digests": {"md5": "787c8343fe87eff733864d73d8932743", "sha256": "7782ef233c7b55c4cde69d681d986a6bc75f316be83883988695f8b1389ee5c9"}, "downloads": -1, "filename": "knoema-1.0.13b1-py3-none-any.whl", "has_sig": false, "md5_digest": "787c8343fe87eff733864d73d8932743", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18344, "upload_time": "2018-01-29T10:04:37", "upload_time_iso_8601": "2018-01-29T10:04:37.375415Z", "url": "https://files.pythonhosted.org/packages/d2/f3/5ebc2db60021843a2cd8bac463a9ffad0417373d6f7a498355d83c9d577b/knoema-1.0.13b1-py3-none-any.whl", "yanked": false}], "1.0.14b1": [{"comment_text": "", "digests": {"md5": "07f8b7c0fcb126a29e6e2fd55be8aa96", "sha256": "a67c77ff5f61468a4b9bc0a74a8575be720c79248fe1791deeac8146d5f0d103"}, "downloads": -1, "filename": "knoema-1.0.14b1-py3-none-any.whl", "has_sig": false, "md5_digest": "07f8b7c0fcb126a29e6e2fd55be8aa96", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18337, "upload_time": "2018-02-27T12:23:42", "upload_time_iso_8601": "2018-02-27T12:23:42.427239Z", "url": "https://files.pythonhosted.org/packages/61/fa/a79b8753b0d616875069f2e206f98ac8ff04def378cdb6124f82ac0adc98/knoema-1.0.14b1-py3-none-any.whl", "yanked": false}], "1.0.15b1": [{"comment_text": "", "digests": {"md5": "b4af64b4cd6cd6bd9450c9755cc2791e", "sha256": "958d437bff7edc009b9428ce086d1df315e70f9bc0cb312c98eb8d07ac7e2713"}, "downloads": -1, "filename": "knoema-1.0.15b1-py3-none-any.whl", "has_sig": false, "md5_digest": "b4af64b4cd6cd6bd9450c9755cc2791e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18338, "upload_time": "2018-03-16T07:02:43", "upload_time_iso_8601": "2018-03-16T07:02:43.068921Z", "url": "https://files.pythonhosted.org/packages/80/ee/6ec7119c3b5c22e0d750021cab8c138f4114fd119a942837b3655e5b01e9/knoema-1.0.15b1-py3-none-any.whl", "yanked": false}], "1.0.16b1": [{"comment_text": "", "digests": {"md5": "110806bd7befdebe9d04114b5074cf01", "sha256": "1035e141322cbbe8ece7d2ca8899ff9813363bf3e7eeebd03ff9b659df48fa1f"}, "downloads": -1, "filename": "knoema-1.0.16b1-py3-none-any.whl", "has_sig": false, "md5_digest": "110806bd7befdebe9d04114b5074cf01", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18413, "upload_time": "2018-03-20T09:57:05", "upload_time_iso_8601": "2018-03-20T09:57:05.510192Z", "url": "https://files.pythonhosted.org/packages/6f/4a/acc63f102fb7ef68d8f1a951041a14504abef2095f912478d02f2898a3f3/knoema-1.0.16b1-py3-none-any.whl", "yanked": false}], "1.0.17b1": [{"comment_text": "", "digests": {"md5": "a271c82b4d4846dd0bed7f01d225477d", "sha256": "7a1ea03db8f9aa56e4815635f7a986065fb631abb7c5e29b6ae6b823a925f0b0"}, "downloads": -1, "filename": "knoema-1.0.17b1-py3-none-any.whl", "has_sig": false, "md5_digest": "a271c82b4d4846dd0bed7f01d225477d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18414, "upload_time": "2018-05-08T07:52:28", "upload_time_iso_8601": "2018-05-08T07:52:28.164645Z", "url": "https://files.pythonhosted.org/packages/19/94/7b0d4932ea5045863661e4e470f608080bea02374c24989f5fa8f4301853/knoema-1.0.17b1-py3-none-any.whl", "yanked": false}], "1.0.18b1": [{"comment_text": "", "digests": {"md5": "d676c73d1be1479201272932ea2505dc", "sha256": "fc995697630f4435e7358bfe3c58b8fdd965205231042b6f82f4af5dddd12dd6"}, "downloads": -1, "filename": "knoema-1.0.18b1-py3-none-any.whl", "has_sig": false, "md5_digest": "d676c73d1be1479201272932ea2505dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15163, "upload_time": "2019-07-09T10:39:26", "upload_time_iso_8601": "2019-07-09T10:39:26.732419Z", "url": "https://files.pythonhosted.org/packages/31/07/7ed7377bd88c5f23ac2d9b8611408f067a8a4320742aa8caf3b262078e29/knoema-1.0.18b1-py3-none-any.whl", "yanked": false}], "1.0.19b1": [{"comment_text": "", "digests": {"md5": "5d38c977d736262838761b5d0b6c1234", "sha256": "b5e7437f0a8e7a46bbf87142c4756f403a3aa8c399ac55cbe32cc1db19a8fb1c"}, "downloads": -1, "filename": "knoema-1.0.19b1-py3-none-any.whl", "has_sig": false, "md5_digest": "5d38c977d736262838761b5d0b6c1234", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15163, "upload_time": "2019-09-03T12:18:13", "upload_time_iso_8601": "2019-09-03T12:18:13.509480Z", "url": "https://files.pythonhosted.org/packages/63/87/b2c550fcc37cc213e84e5b799e3859a93b584315e62e7894b91133a66565/knoema-1.0.19b1-py3-none-any.whl", "yanked": false}], "1.0.20b1": [{"comment_text": "", "digests": {"md5": "45eb2ec86a4801f973cd12afec7ad777", "sha256": "81fd9e5e4b843e98fe22da0973deaaf71dcb22ec32917fefd0f6c4d32ff9d753"}, "downloads": -1, "filename": "knoema-1.0.20b1-py3-none-any.whl", "has_sig": false, "md5_digest": "45eb2ec86a4801f973cd12afec7ad777", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15236, "upload_time": "2020-02-07T13:14:27", "upload_time_iso_8601": "2020-02-07T13:14:27.180686Z", "url": "https://files.pythonhosted.org/packages/f5/d6/bc7d65e02a70a88687fae17e0795964b991b9dc20a6db9feb1c6571d7668/knoema-1.0.20b1-py3-none-any.whl", "yanked": false}], "1.0.21b1": [{"comment_text": "", "digests": {"md5": "a821233760d9522c3265331753e8f992", "sha256": "d7beeb6f1f4ed0309d348bfd4be82ba5aa56861ca8af8b26672825328d629259"}, "downloads": -1, "filename": "knoema-1.0.21b1-py3-none-any.whl", "has_sig": false, "md5_digest": "a821233760d9522c3265331753e8f992", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17116, "upload_time": "2020-02-12T12:45:43", "upload_time_iso_8601": "2020-02-12T12:45:43.794927Z", "url": "https://files.pythonhosted.org/packages/c6/7e/4e179a331728bd4a16cc31d6ec16c89b69bf03a0b9672f1c43983bb6585f/knoema-1.0.21b1-py3-none-any.whl", "yanked": false}], "1.0.22b1": [{"comment_text": "", "digests": {"md5": "831d57f8ad9221632b0bddeb04460a83", "sha256": "e2596497d331d84d2c4d9c1075eb826bb226eec99ec0a1c72d9f17eef8c76c9b"}, "downloads": -1, "filename": "knoema-1.0.22b1-py3-none-any.whl", "has_sig": false, "md5_digest": "831d57f8ad9221632b0bddeb04460a83", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17281, "upload_time": "2020-02-17T11:39:16", "upload_time_iso_8601": "2020-02-17T11:39:16.502081Z", "url": "https://files.pythonhosted.org/packages/0b/94/8e356ba5e9ca0430f09c36eacb460684e2e01e6260268b3b28ae2ac51b82/knoema-1.0.22b1-py3-none-any.whl", "yanked": false}], "1.0.23": [{"comment_text": "", "digests": {"md5": "f083fcea207bce357833304b7201b705", "sha256": "38003991935d821702302bcec6acb2067619373eb99c619227a188a626320859"}, "downloads": -1, "filename": "knoema-1.0.23-py3-none-any.whl", "has_sig": false, "md5_digest": "f083fcea207bce357833304b7201b705", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17226, "upload_time": "2020-04-21T10:52:19", "upload_time_iso_8601": "2020-04-21T10:52:19.860199Z", "url": "https://files.pythonhosted.org/packages/0e/80/654893b7791538d1c5c8975099567b4762f47df175b805cbf611e022bc53/knoema-1.0.23-py3-none-any.whl", "yanked": false}], "1.0.23b1": [{"comment_text": "", "digests": {"md5": "5b0ec1456d1df86b4ebb692785ec090e", "sha256": "d02f1253f6e28e4a8ea4670d338efc76d5c5ab82d901c99e70fef5ee635753d8"}, "downloads": -1, "filename": "knoema-1.0.23b1-py3-none-any.whl", "has_sig": false, "md5_digest": "5b0ec1456d1df86b4ebb692785ec090e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17281, "upload_time": "2020-03-03T07:51:53", "upload_time_iso_8601": "2020-03-03T07:51:53.240835Z", "url": "https://files.pythonhosted.org/packages/75/0d/7f7e155d1ec77242c5e06b26198b4214e2e0c59f556fd1ea9e039b295fd7/knoema-1.0.23b1-py3-none-any.whl", "yanked": false}], "1.0.3b1": [{"comment_text": "", "digests": {"md5": "22edf5153a1a29bdbaea275941ba1767", "sha256": "fd61eba85233e72ef97ec340e8e5b7fe8efc79dde8977521f616a91f41286b9e"}, "downloads": -1, "filename": "knoema-1.0.3b1-py3-none-any.whl", "has_sig": false, "md5_digest": "22edf5153a1a29bdbaea275941ba1767", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14270, "upload_time": "2017-09-12T07:54:46", "upload_time_iso_8601": "2017-09-12T07:54:46.940221Z", "url": "https://files.pythonhosted.org/packages/f6/11/532e88015e681b9a859751aeb7068987b03959f41f48df9021a6e523d318/knoema-1.0.3b1-py3-none-any.whl", "yanked": false}], "1.0.4b1": [{"comment_text": "", "digests": {"md5": "6414036db6c0392d24cb9563d1267359", "sha256": "4e71f097678c8c3276f7470946da47bcd00b6a2bd5a73d12de05bf1f7e789b32"}, "downloads": -1, "filename": "knoema-1.0.4b1-py3-none-any.whl", "has_sig": false, "md5_digest": "6414036db6c0392d24cb9563d1267359", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14397, "upload_time": "2017-09-18T12:28:05", "upload_time_iso_8601": "2017-09-18T12:28:05.565555Z", "url": "https://files.pythonhosted.org/packages/28/82/c0acedb807309d5225d5a3164cd6f3a7ab0a1b6a86c3ba477646520498ef/knoema-1.0.4b1-py3-none-any.whl", "yanked": false}], "1.0.5b1": [{"comment_text": "", "digests": {"md5": "90133373d37a4622b7fbc2e21a4003d2", "sha256": "0cc503fe642d38c9095b0537ddfe9527cbc4aa4c631901ebd51de5a816959c78"}, "downloads": -1, "filename": "knoema-1.0.5b1-py3-none-any.whl", "has_sig": false, "md5_digest": "90133373d37a4622b7fbc2e21a4003d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16374, "upload_time": "2017-09-25T07:34:50", "upload_time_iso_8601": "2017-09-25T07:34:50.609101Z", "url": "https://files.pythonhosted.org/packages/a8/5d/52d0942e20b199b6f0bd670a0663ab7248ffd7aef6d9db61d282685ed4c5/knoema-1.0.5b1-py3-none-any.whl", "yanked": false}], "1.0.7b1": [{"comment_text": "", "digests": {"md5": "9b7ed9d11c2a85d0b3557b3ddfdd889e", "sha256": "3657ff1bb2727a662c9a39dfd7d72f1fdb8ffd10ad134f1fa87139f8904032a5"}, "downloads": -1, "filename": "knoema-1.0.7b1-py3-none-any.whl", "has_sig": false, "md5_digest": "9b7ed9d11c2a85d0b3557b3ddfdd889e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16416, "upload_time": "2017-09-26T10:39:42", "upload_time_iso_8601": "2017-09-26T10:39:42.417905Z", "url": "https://files.pythonhosted.org/packages/7a/a6/125e587573a7c4dc58628b6dd27753c2b3ba09fbcd3663626e459ac0423a/knoema-1.0.7b1-py3-none-any.whl", "yanked": false}], "1.0.8b1": [{"comment_text": "", "digests": {"md5": "3145b2111fba30a9490c7c1b246ed9e6", "sha256": "25c702cfcf76c7aac78cd0c31ce7abf152adc9608d4db16020f86a38938afd1a"}, "downloads": -1, "filename": "knoema-1.0.8b1-py3-none-any.whl", "has_sig": false, "md5_digest": "3145b2111fba30a9490c7c1b246ed9e6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16397, "upload_time": "2017-10-20T12:13:22", "upload_time_iso_8601": "2017-10-20T12:13:22.353023Z", "url": "https://files.pythonhosted.org/packages/be/20/bc1633a9d1742000fb958bc8d815d2489ad71d617e54cbb3cd88989fa45b/knoema-1.0.8b1-py3-none-any.whl", "yanked": false}], "1.0.9b1": [{"comment_text": "", "digests": {"md5": "b586369a2c97e359d42c8391877d9d13", "sha256": "3e5b287b7b90fddd1a8e93d738ba514ec5123f76eddf33d1a13f7a2f504cd4be"}, "downloads": -1, "filename": "knoema-1.0.9b1-py3-none-any.whl", "has_sig": false, "md5_digest": "b586369a2c97e359d42c8391877d9d13", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17056, "upload_time": "2017-11-03T11:42:51", "upload_time_iso_8601": "2017-11-03T11:42:51.616420Z", "url": "https://files.pythonhosted.org/packages/9a/c0/6db2a096fac32130ef7b1655d844a8defd5a94057e16b6110868667dde1b/knoema-1.0.9b1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f083fcea207bce357833304b7201b705", "sha256": "38003991935d821702302bcec6acb2067619373eb99c619227a188a626320859"}, "downloads": -1, "filename": "knoema-1.0.23-py3-none-any.whl", "has_sig": false, "md5_digest": "f083fcea207bce357833304b7201b705", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17226, "upload_time": "2020-04-21T10:52:19", "upload_time_iso_8601": "2020-04-21T10:52:19.860199Z", "url": "https://files.pythonhosted.org/packages/0e/80/654893b7791538d1c5c8975099567b4762f47df175b805cbf611e022bc53/knoema-1.0.23-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:49:13 2020"}