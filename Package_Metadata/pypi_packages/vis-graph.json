{"info": {"author": "Junqi WU", "author_email": "wujunqi@tju.edu.cn", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Information Analysis"], "description": "# Visibility Graph\n>This python package implements the algorithm described in the paper: \n[From time series to complex networks: The visibility graph](http://www.pnas.org/content/105/13/4972.full)\n\n![](example.png)\n\n## Installation\n\n```sh\npip install vis_graph\n```\n\n## Usage example\n\n>Pass time series as a list, visibility_graph will return a [igraph](https://github.com/igraph/python-igraph)\nundirected graph.\n\n```sh\n>>> from vis_graph import visibility_graph\n>>> import igraph as ig\n>>>\n>>> series = [0.87, 0.49, 0.36, 0.83, 0.87, 0.49, 0.36, 0.83]\n>>> g = visibility_graph( series )\n>>> ig.plot(g, './example.png)\n```\n\n# Main idea\n\n>\"In this graph, every node corresponds, in the same order, to series data, and two nodes are connected if visibility exists between the corresponding data, that is to say, if there is a straight line that connects the series data, provided that this \u201cvisibility line\u201d does not intersect any intermediate data height.\"\n\n![](F1.large.jpg)\n\n>\"More formally, we can establish the following visibility criteria: two arbitrary data values (t a, y a) and (t b, y b) will have visibility, and consequently will become two connected nodes of the associated graph, if any other data (t c, y c) placed between them fulfills:\"\n\n![](graphic-2.gif)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/HazardTrigger/visibility_graph.git", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "vis-graph", "package_url": "https://pypi.org/project/vis-graph/", "platform": "", "project_url": "https://pypi.org/project/vis-graph/", "project_urls": {"Homepage": "https://github.com/HazardTrigger/visibility_graph.git"}, "release_url": "https://pypi.org/project/vis-graph/0.0.2/", "requires_dist": ["python-igraph"], "requires_python": "", "summary": "From time series to graph thru visibility algorithm.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Visibility Graph\n&gt;This python package implements the algorithm described in the paper:\n[From time series to complex networks: The visibility graph](<a href=\"http://www.pnas.org/content/105/13/4972.full\" rel=\"nofollow\">http://www.pnas.org/content/105/13/4972.full</a>)</p>\n<p>![](example.png)</p>\n<p>## Installation</p>\n<p><tt>`sh\npip install vis_graph\n`</tt></p>\n<p>## Usage example</p>\n<p>&gt;Pass time series as a list, visibility_graph will return a [igraph](<a href=\"https://github.com/igraph/python-igraph\" rel=\"nofollow\">https://github.com/igraph/python-igraph</a>)\nundirected graph.</p>\n<p><tt>`sh\n&gt;&gt;&gt; from vis_graph import visibility_graph\n&gt;&gt;&gt; import igraph as ig\n&gt;&gt;&gt;\n&gt;&gt;&gt; series = [0.87, 0.49, 0.36, 0.83, 0.87, 0.49, 0.36, 0.83]\n&gt;&gt;&gt; g = visibility_graph( series )\n&gt;&gt;&gt; ig.plot(g, <span class=\"pre\">'./example.png)</span>\n`</tt></p>\n<p># Main idea</p>\n<p>&gt;\u201dIn this graph, every node corresponds, in the same order, to series data, and two nodes are connected if visibility exists between the corresponding data, that is to say, if there is a straight line that connects the series data, provided that this \u201cvisibility line\u201d does not intersect any intermediate data height.\u201d</p>\n<p>![](F1.large.jpg)</p>\n<p>&gt;\u201dMore formally, we can establish the following visibility criteria: two arbitrary data values (t a, y a) and (t b, y b) will have visibility, and consequently will become two connected nodes of the associated graph, if any other data (t c, y c) placed between them fulfills:\u201d</p>\n<p>![](graphic-2.gif)</p>\n\n          </div>"}, "last_serial": 5585466, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d050751e1a20d1c71714fc8f8768be78", "sha256": "4bd8a93d7b0552b1633e8b061186231981654d4a13920ede12bb6a85804fee82"}, "downloads": -1, "filename": "vis_graph-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d050751e1a20d1c71714fc8f8768be78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2802, "upload_time": "2019-07-25T17:30:49", "upload_time_iso_8601": "2019-07-25T17:30:49.902579Z", "url": "https://files.pythonhosted.org/packages/7d/70/85c47ae9970c5773b04dc9977cecd9c859f7ab0ab2c3773d0ee694331fee/vis_graph-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73e5a77947d03469c90a7d7630488539", "sha256": "0177a1466ebbeb6a52d6ec943fe9fb8f70ca7e33a8d2e502c5c8e2aca529ac71"}, "downloads": -1, "filename": "vis_graph-0.0.1.tar.gz", "has_sig": false, "md5_digest": "73e5a77947d03469c90a7d7630488539", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2632, "upload_time": "2019-07-25T17:30:52", "upload_time_iso_8601": "2019-07-25T17:30:52.189478Z", "url": "https://files.pythonhosted.org/packages/06/bd/3e143d476350379a5251da8e4990c38ef748d21733608db4f5cd580df2c4/vis_graph-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "93b1070047032aa25da2ac078347b0a1", "sha256": "3bf8f4aef1c3f056ccc2562787054f0b9278d08b510c0f7d46e291f650f497c0"}, "downloads": -1, "filename": "vis_graph-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "93b1070047032aa25da2ac078347b0a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2819, "upload_time": "2019-07-25T20:20:02", "upload_time_iso_8601": "2019-07-25T20:20:02.344241Z", "url": "https://files.pythonhosted.org/packages/d2/3c/afed90521549416d44e4f64cc90309845dbc45a5a77f53f35e5f88b4af58/vis_graph-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0e95f3e7d4dea29d63284718987537d", "sha256": "02df8a7e339309bb1e60a8cd6ffc7c124e7e56e9eb314d303a02be0515aa1289"}, "downloads": -1, "filename": "vis_graph-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c0e95f3e7d4dea29d63284718987537d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2658, "upload_time": "2019-07-25T20:20:03", "upload_time_iso_8601": "2019-07-25T20:20:03.614755Z", "url": "https://files.pythonhosted.org/packages/a3/8d/91b5b85aa45bab29649441377c064bf891dda9f1c1c8cd25d803ec9c22c3/vis_graph-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "93b1070047032aa25da2ac078347b0a1", "sha256": "3bf8f4aef1c3f056ccc2562787054f0b9278d08b510c0f7d46e291f650f497c0"}, "downloads": -1, "filename": "vis_graph-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "93b1070047032aa25da2ac078347b0a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2819, "upload_time": "2019-07-25T20:20:02", "upload_time_iso_8601": "2019-07-25T20:20:02.344241Z", "url": "https://files.pythonhosted.org/packages/d2/3c/afed90521549416d44e4f64cc90309845dbc45a5a77f53f35e5f88b4af58/vis_graph-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0e95f3e7d4dea29d63284718987537d", "sha256": "02df8a7e339309bb1e60a8cd6ffc7c124e7e56e9eb314d303a02be0515aa1289"}, "downloads": -1, "filename": "vis_graph-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c0e95f3e7d4dea29d63284718987537d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2658, "upload_time": "2019-07-25T20:20:03", "upload_time_iso_8601": "2019-07-25T20:20:03.614755Z", "url": "https://files.pythonhosted.org/packages/a3/8d/91b5b85aa45bab29649441377c064bf891dda9f1c1c8cd25d803ec9c22c3/vis_graph-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:35:18 2020"}