{"info": {"author": "Fusionbox, Inc.", "author_email": "programmers@fusionbox.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "django-adminextraviews\n======================\n\n.. image:: https://travis-ci.org/fusionbox/django-adminextraviews.png?branch=master\n    :target: https://travis-ci.org/fusionbox/django-adminextraviews\n\nMixin for adding class-based views to ModelAdmin.\n\n\nWhy\n---\n\nClass-based views are really useful, but it's difficult to add them to the\nadmin center. This makes it easy to add class-based views to the Django admin.\n\n\nInstallation\n------------\n\nInstall django-adminextraviews::\n\n    pip install django-adminextraviews\n\n\nUsage\n-----\n\nAdd the ``ExtraViewsMixin`` to your ``ModelAdmin`` and define the\n``extra_views`` attribute.\n\n.. code:: python\n\n    from adminextraviews import ExtraViewsMixin\n\n    class MyModelAdmin(ExtraViewsMixin, admin.ModelAdmin):\n        extra_views = [\n            ('login_as_user', r'(?P<pk>\\d+)/login/', LoginAsUserView),\n        ]\n\nNow you can use it like a normal view, you can reverse it.\n\n.. code:: python\n\n    >>> urlresolvers.reverse('admin:myapp_mymodel_login_as_user', kwargs={'pk': 12})\n    '/admin/myapp/mymodel/12/login/'\n\nIf your view is a subclass of ``ModelFormMixin`` (like ``CreateView``,\n``UpdateView``), ``ExtraViewsMixin`` will wrap the form class with the admin\ncenter widgets. It will also set the ``model`` attribute if it's not set.\n\n\n.. :changelog:\n\nChangelog\n=========\n\n1.1.0 (2015-03-24)\n------------------\n\n- Allow for use of different models [#1].\n\n\n1.0.0 (2015-03-19)\n------------------\n\n- First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fusionbox/django-adminextraviews", "keywords": "django-adminextraviews", "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "django-adminextraviews", "package_url": "https://pypi.org/project/django-adminextraviews/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-adminextraviews/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/fusionbox/django-adminextraviews"}, "release_url": "https://pypi.org/project/django-adminextraviews/1.1.0/", "requires_dist": null, "requires_python": null, "summary": "Mixin for adding class-based views to ModelAdmin", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-adminextraviews\">\n<h2>django-adminextraviews</h2>\n<a href=\"https://travis-ci.org/fusionbox/django-adminextraviews\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/fusionbox/django-adminextraviews.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac406a79886bd53ab63bc8f84f3bcd9c51732ed9/68747470733a2f2f7472617669732d63692e6f72672f667573696f6e626f782f646a616e676f2d61646d696e657874726176696577732e706e673f6272616e63683d6d6173746572\"></a>\n<p>Mixin for adding class-based views to ModelAdmin.</p>\n<div id=\"why\">\n<h3>Why</h3>\n<p>Class-based views are really useful, but it\u2019s difficult to add them to the\nadmin center. This makes it easy to add class-based views to the Django admin.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install django-adminextraviews:</p>\n<pre>pip install django-adminextraviews\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Add the <tt>ExtraViewsMixin</tt> to your <tt>ModelAdmin</tt> and define the\n<tt>extra_views</tt> attribute.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">adminextraviews</span> <span class=\"kn\">import</span> <span class=\"n\">ExtraViewsMixin</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModelAdmin</span><span class=\"p\">(</span><span class=\"n\">ExtraViewsMixin</span><span class=\"p\">,</span> <span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">extra_views</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'login_as_user'</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s1\">'(?P&lt;pk&gt;\\d+)/login/'</span><span class=\"p\">,</span> <span class=\"n\">LoginAsUserView</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n</pre>\n<p>Now you can use it like a normal view, you can reverse it.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">urlresolvers</span><span class=\"o\">.</span><span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s1\">'admin:myapp_mymodel_login_as_user'</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'pk'</span><span class=\"p\">:</span> <span class=\"mi\">12</span><span class=\"p\">})</span>\n<span class=\"s1\">'/admin/myapp/mymodel/12/login/'</span>\n</pre>\n<p>If your view is a subclass of <tt>ModelFormMixin</tt> (like <tt>CreateView</tt>,\n<tt>UpdateView</tt>), <tt>ExtraViewsMixin</tt> will wrap the form class with the admin\ncenter widgets. It will also set the <tt>model</tt> attribute if it\u2019s not set.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.1.0 (2015-03-24)</h3>\n<ul>\n<li>Allow for use of different models [#1].</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0.0 (2015-03-19)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1475682, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "212dd44e11c71563441a8ef9a6d50f58", "sha256": "b4b4d431c279d6d80151081c6c1d9d8dc9e4ce65a763cb737eab01b969063a66"}, "downloads": -1, "filename": "django-adminextraviews-1.0.0.tar.gz", "has_sig": false, "md5_digest": "212dd44e11c71563441a8ef9a6d50f58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7142, "upload_time": "2015-03-19T23:35:02", "upload_time_iso_8601": "2015-03-19T23:35:02.886889Z", "url": "https://files.pythonhosted.org/packages/2d/b0/27604a311d265629340b7d69a7ad057ea46e077ef4bf39dd3f6ad6fb43c2/django-adminextraviews-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "44f1c4f2e61c0e07dae668f41798c112", "sha256": "da36fdd1e46816454c7f3c09b0713d90c89265eb76e922203c9ed0e24ea526ee"}, "downloads": -1, "filename": "django-adminextraviews-1.1.0.tar.gz", "has_sig": false, "md5_digest": "44f1c4f2e61c0e07dae668f41798c112", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7730, "upload_time": "2015-03-24T17:42:46", "upload_time_iso_8601": "2015-03-24T17:42:46.008161Z", "url": "https://files.pythonhosted.org/packages/c5/77/b11dddeb8be487db69f41624144e9fa4e912cec10eeb9dc07336b024ea7a/django-adminextraviews-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "44f1c4f2e61c0e07dae668f41798c112", "sha256": "da36fdd1e46816454c7f3c09b0713d90c89265eb76e922203c9ed0e24ea526ee"}, "downloads": -1, "filename": "django-adminextraviews-1.1.0.tar.gz", "has_sig": false, "md5_digest": "44f1c4f2e61c0e07dae668f41798c112", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7730, "upload_time": "2015-03-24T17:42:46", "upload_time_iso_8601": "2015-03-24T17:42:46.008161Z", "url": "https://files.pythonhosted.org/packages/c5/77/b11dddeb8be487db69f41624144e9fa4e912cec10eeb9dc07336b024ea7a/django-adminextraviews-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:50 2020"}