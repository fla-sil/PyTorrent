{"info": {"author": "Pavlo Dmytrenko", "author_email": "mail@pavdmyt.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: MacOS X", "Environment :: Other Environment", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: Other Audience", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: User Interfaces", "Topic :: System :: Logging", "Topic :: System :: Monitoring", "Topic :: System :: Shells", "Topic :: Terminals", "Topic :: Utilities"], "description": "|Logo|\n\n=====================================================================\n``yaspin``: **Y**\\ et **A**\\ nother Terminal **Spin**\\ ner for Python\n=====================================================================\n\n|Build Status| |Coverage| |Codacy| |pyup| |black-fmt|\n\n|pypi| |Versions| |Wheel| |Examples| |Downloads|\n\n\n``Yaspin`` provides a full-featured terminal spinner to show the progress during long-hanging operations.\n\n.. image:: https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/demo.gif\n\nIt is easy to integrate into existing codebase by using it as a `context manager`_\nor as a function `decorator`_:\n\n.. code:: python\n\n    import time\n    from yaspin import yaspin\n\n    # Context manager:\n    with yaspin():\n        time.sleep(3)  # time consuming code\n\n    # Function decorator:\n    @yaspin(text=\"Loading...\")\n    def some_operations():\n        time.sleep(3)  # time consuming code\n\n    some_operations()\n\n\n**Yaspin** also provides an intuitive and powerful API. For example, you can easily summon a shark:\n\n.. code:: python\n\n    import time\n    from yaspin import yaspin\n\n    with yaspin().white.bold.shark.on_blue as sp:\n        sp.text = \"White bold shark in a blue sea\"\n        time.sleep(5)\n\n.. image:: https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/shark.gif\n\n\nFeatures\n--------\n\n- No external dependencies\n- Runs at all major **CPython** versions (*2.7*, *3.4*, *3.5*, *3.6*, *3.7*), **PyPy** and **PyPy3**\n- Supports all (60+) spinners from `cli-spinners`_\n- Supports all *colors*, *highlights*, *attributes* and their mixes from `termcolor`_ library\n- Easy to combine with other command-line libraries, e.g. `prompt-toolkit`_\n- Flexible API, easy to integrate with existing code\n- User-friendly API for handling POSIX `signals`_\n- Safe **pipes** and **redirects**:\n\n.. code-block:: bash\n\n    $ python script_that_uses_yaspin.py > script.log\n    $ python script_that_uses_yaspin.py | grep ERROR\n\n\nInstallation\n------------\n\nFrom `PyPI`_ using ``pip`` package manager:\n\n.. code-block:: bash\n\n    pip install --upgrade yaspin\n\n\nOr install the latest sources from GitHub:\n\n.. code-block:: bash\n\n    pip install https://github.com/pavdmyt/yaspin/archive/master.zip\n\n\nUsage\n-----\n\nBasic Example\n/////////////\n\n.. image:: https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/basic_example.gif\n\n.. code:: python\n\n    # -*- coding: utf-8 -*-\n    import time\n    from random import randint\n    from yaspin import yaspin\n\n    with yaspin(text=\"Loading\", color=\"yellow\") as spinner:\n        time.sleep(2)  # time consuming code\n\n        success = randint(0, 1)\n        if success:\n            spinner.ok(\"\u2705 \")\n        else:\n            spinner.fail(\"\ud83d\udca5 \")\n\n\nIt is also possible to control spinner manually:\n\n.. code:: python\n\n    # -*- coding: utf-8 -*-\n    import time\n    from yaspin import yaspin\n\n    spinner = yaspin()\n    spinner.start()\n\n    time.sleep(3)  # time consuming tasks\n\n    spinner.stop()\n\n\nRun any spinner from `cli-spinners`_\n////////////////////////////////////\n\n.. image:: https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/cli_spinners.gif\n\n.. code:: python\n\n    # -*- coding: utf-8 -*-\n    import time\n    from yaspin import yaspin\n    from yaspin.spinners import Spinners\n\n    with yaspin(Spinners.earth, text=\"Earth\") as sp:\n        time.sleep(2)                # time consuming code\n\n        # change spinner\n        sp.spinner = Spinners.moon\n        sp.text = \"Moon\"\n\n        time.sleep(2)                # time consuming code\n\n\nAny Colour You Like `\ud83c\udf08`_\n/////////////////////////\n\n.. image:: https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/basic_colors.gif\n\n.. code:: python\n\n    # -*- coding: utf-8 -*-\n    import time\n    from yaspin import yaspin\n\n    with yaspin(text=\"Colors!\") as sp:\n        # Support all basic termcolor text colors\n        colors = (\"red\", \"green\", \"yellow\", \"blue\", \"magenta\", \"cyan\", \"white\")\n\n        for color in colors:\n            sp.color, sp.text = color, color\n            time.sleep(1)\n\n\nAdvanced colors usage\n/////////////////////\n\n.. image:: https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/advanced_colors.gif\n\n.. code:: python\n\n    # -*- coding: utf-8 -*-\n    import time\n    from yaspin import yaspin\n    from yaspin.spinners import Spinners\n\n    text = \"Bold blink magenta spinner on cyan color\"\n    with yaspin().bold.blink.magenta.bouncingBall.on_cyan as sp:\n        sp.text = text\n        time.sleep(3)\n\n    # The same result can be achieved by passing arguments directly\n    with yaspin(\n        Spinners.bouncingBall,\n        color=\"magenta\",\n        on_color=\"on_cyan\",\n        attrs=[\"bold\", \"blink\"],\n    ) as sp:\n        sp.text = text\n        time.sleep(3)\n\n\nRun any spinner you want\n////////////////////////\n\n.. image:: https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/custom_spinners.gif\n\n.. code:: python\n\n    # -*- coding: utf-8 -*-\n    import time\n    from yaspin import yaspin, Spinner\n\n    # Compose new spinners with custom frame sequence and interval value\n    sp = Spinner([\"\ud83d\ude38\", \"\ud83d\ude39\", \"\ud83d\ude3a\", \"\ud83d\ude3b\", \"\ud83d\ude3c\", \"\ud83d\ude3d\", \"\ud83d\ude3e\", \"\ud83d\ude3f\", \"\ud83d\ude40\"], 200)\n\n    with yaspin(sp, text=\"Cat!\"):\n        time.sleep(3)  # cat consuming code :)\n\n\nChange spinner properties on the fly\n////////////////////////////////////\n\n.. image:: https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/sp_properties.gif\n\n.. code:: python\n\n    # -*- coding: utf-8 -*-\n    import time\n    from yaspin import yaspin\n    from yaspin.spinners import Spinners\n\n    with yaspin(Spinners.noise, text=\"Noise spinner\") as sp:\n        time.sleep(2)\n\n        sp.spinner = Spinners.arc  # spinner type\n        sp.text = \"Arc spinner\"    # text along with spinner\n        sp.color = \"green\"         # spinner color\n        sp.side = \"right\"          # put spinner to the right\n        sp.reversal = True         # reverse spin direction\n\n        time.sleep(2)\n\n\nWriting messages\n////////////////\n\n.. image:: https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/write_text.gif\n\nYou should not write any message in the terminal using ``print`` while spinner is open.\nTo write messages in the terminal without any collision with ``yaspin`` spinner, a ``.write()`` method is provided:\n\n.. code:: python\n\n    # -*- coding: utf-8 -*-\n    import time\n    from yaspin import yaspin\n\n    with yaspin(text=\"Downloading images\", color=\"cyan\") as sp:\n        # task 1\n        time.sleep(1)\n        sp.write(\"> image 1 download complete\")\n\n        # task 2\n        time.sleep(2)\n        sp.write(\"> image 2 download complete\")\n\n        # finalize\n        sp.ok(\"\u2714\")\n\n\nIntegration with other libraries\n////////////////////////////////\n\n.. image:: https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/hide_show.gif\n\nUtilizing ``hide`` and ``show`` methods it is possible to toggle the display of\nthe spinner in order to call custom methods that write to the terminal. This is\nhelpful for allowing easy usage in other frameworks like `prompt-toolkit`_.\nUsing the powerful ``print_formatted_text`` function allows you even to apply\nHTML formats and CSS styles to the output:\n\n.. code:: python\n\n    # -*- coding: utf-8 -*-\n    from __future__ import print_function\n\n    import sys\n    import time\n\n    from yaspin import yaspin\n    from prompt_toolkit import HTML, print_formatted_text\n    from prompt_toolkit.styles import Style\n\n    # override print with feature-rich ``print_formatted_text`` from prompt_toolkit\n    print = print_formatted_text\n\n    # build a basic prompt_toolkit style for styling the HTML wrapped text\n    style = Style.from_dict({\n        'msg': '#4caf50 bold',\n        'sub-msg': '#616161 italic'\n    })\n\n\n    with yaspin(text='Downloading images') as sp:\n        # task 1\n        time.sleep(1)\n        sp.hide()\n        print(HTML(\n            u'<b>></b> <msg>image 1</msg> <sub-msg>download complete</sub-msg>'\n        ), style=style)\n        sp.show()\n\n        # task 2\n        time.sleep(2)\n        sp.hide()\n        print(HTML(\n            u'<b>></b> <msg>image 2</msg> <sub-msg>download complete</sub-msg>'\n        ), style=style)\n        sp.show()\n\n        # finalize\n        sp.ok()\n\n\nHandling POSIX `signals`_\n/////////////////////////\n\nHandling keyboard interrupts (pressing Control-C):\n\n.. code:: python\n\n    # -*- coding: utf-8 -*-\n    import time\n\n    from yaspin import kbi_safe_yaspin\n\n\n    with kbi_safe_yaspin(text=\"Press Control+C to send SIGINT (Keyboard Interrupt) signal\"):\n        time.sleep(5)  # time consuming code\n\n\nHandling other types of signals:\n\n.. code:: python\n\n    # -*- coding: utf-8 -*-\n    import os\n    import time\n    from signal import SIGTERM, SIGUSR1\n\n    from yaspin import yaspin\n    from yaspin.signal_handlers import default_handler, fancy_handler\n\n\n    sigmap = {SIGUSR1: default_handler, SIGTERM: fancy_handler}\n    with yaspin(sigmap=sigmap, text=\"Handling SIGUSR1 and SIGTERM signals\") as sp:\n        sp.write(\"Send signals using `kill` command\")\n        sp.write(\"E.g. $ kill -USR1 {0}\".format(os.getpid()))\n        time.sleep(20)  # time consuming code\n\n\nMore `examples`_.\n\n\nDevelopment\n-----------\n\nClone the repository:\n\n.. code-block:: bash\n\n    git clone https://github.com/pavdmyt/yaspin.git\n\n\nInstall dev dependencies:\n\n.. code-block:: bash\n\n    pipenv install --dev\n\n\nLint code:\n\n.. code-block:: bash\n\n    make lint\n\n\nFormat code:\n\n.. code-block:: bash\n\n    make black-fmt\n\n\nRun tests:\n\n.. code-block:: bash\n\n    make test\n\n\nContributing\n------------\n\n1. Fork it!\n2. Create your feature branch: ``git checkout -b my-new-feature``\n3. Commit your changes: ``git commit -m 'Add some feature'``\n4. Push to the branch: ``git push origin my-new-feature``\n5. Submit a pull request\n6. Make sure tests are passing\n\n\nLicense\n-------\n\n* MIT - Pavlo Dmytrenko; https://twitter.com/pavdmyt\n* Contains `termcolor`_ package: MIT License, Copyright (c) 2008-2011 Volvox Development Team\n* Contains data from `cli-spinners`_: MIT License, Copyright (c) Sindre Sorhus sindresorhus@gmail.com (sindresorhus.com)\n\n\n.. |Logo| image:: https://raw.githubusercontent.com/pavdmyt/yaspin/master/static/logo_80.png\n   :alt: yaspin Logo\n.. |Build Status| image:: https://travis-ci.org/pavdmyt/yaspin.svg?branch=master\n   :target: https://travis-ci.org/pavdmyt/yaspin\n.. |Coverage| image:: https://coveralls.io/repos/github/pavdmyt/yaspin/badge.svg?branch=master\n   :target: https://coveralls.io/github/pavdmyt/yaspin?branch=master\n.. |Codacy| image:: https://api.codacy.com/project/badge/Grade/797c7772d0d3467c88a5e2e9dc79ec98\n   :target: https://www.codacy.com/app/pavdmyt/yaspin?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=pavdmyt/yaspin&amp;utm_campaign=Badge_Grade\n.. |pypi| image:: https://img.shields.io/pypi/v/yaspin.svg\n   :target: https://pypi.org/project/yaspin/\n.. |Versions| image:: https://img.shields.io/pypi/pyversions/yaspin.svg\n   :target: https://pypi.org/project/yaspin/\n.. |Wheel| image:: https://img.shields.io/pypi/wheel/yaspin.svg\n   :target: https://pypi.org/project/yaspin/\n.. |Examples| image:: https://img.shields.io/badge/learn%20by-examples-0077b3.svg\n   :target: https://github.com/pavdmyt/yaspin/tree/master/examples\n.. |pyup| image:: https://pyup.io/repos/github/pavdmyt/yaspin/shield.svg\n   :target: https://pyup.io/repos/github/pavdmyt/yaspin/\n.. |black-fmt| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/ambv/black\n.. |Downloads| image:: https://pepy.tech/badge/yaspin\n   :target: https://pepy.tech/project/yaspin\n\n\n.. _context manager: https://docs.python.org/3/reference/datamodel.html#context-managers\n.. _decorator: https://www.thecodeship.com/patterns/guide-to-python-function-decorators/\n.. _cli-spinners: https://github.com/sindresorhus/cli-spinners\n.. _termcolor: https://pypi.org/project/termcolor/\n.. _PyPI: https://pypi.org/\n.. _\ud83c\udf08: https://en.wikipedia.org/wiki/Any_Colour_You_Like\n.. _examples: https://github.com/pavdmyt/yaspin/tree/master/examples\n.. _prompt-toolkit: https://github.com/jonathanslenders/python-prompt-toolkit/\n.. _signals: https://www.computerhope.com/unix/signals.htm\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/pavdmyt/yaspin/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pavdmyt/yaspin", "keywords": "progressmeter progress meter rate console terminal console cli loading loader indicator spinner spinners time busy wait idle", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "yaspin", "package_url": "https://pypi.org/project/yaspin/", "platform": "", "project_url": "https://pypi.org/project/yaspin/", "project_urls": {"Download": "https://github.com/pavdmyt/yaspin/archive/master.zip", "Homepage": "https://github.com/pavdmyt/yaspin"}, "release_url": "https://pypi.org/project/yaspin/0.16.0/", "requires_dist": null, "requires_python": "", "summary": "Yet Another Terminal Spinner", "version": "0.16.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"yaspin Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb0780d6939fd07774d2bcb31d7c218ca8d240db/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f706176646d79742f79617370696e2f6d61737465722f7374617469632f6c6f676f5f38302e706e67\"></p>\n<div id=\"yaspin-yet-another-terminal-spinner-for-python\">\n<h2><tt>yaspin</tt>: <strong>Y</strong>et <strong>A</strong>nother Terminal <strong>Spin</strong>ner for Python</h2>\n<p><a href=\"https://travis-ci.org/pavdmyt/yaspin\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fa39110df22e826290d080c6e34ab8847c60a167/68747470733a2f2f7472617669732d63692e6f72672f706176646d79742f79617370696e2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/pavdmyt/yaspin?branch=master\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc12c1074762141198b686040b6ee85171aa3195/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f706176646d79742f79617370696e2f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://www.codacy.com/app/pavdmyt/yaspin?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=pavdmyt/yaspin&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bfbda8a513c9609832d3ea216b351b8b1ac00b6b/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3739376337373732643064333436376338386135653265396463373965633938\"></a> <a href=\"https://pyup.io/repos/github/pavdmyt/yaspin/\" rel=\"nofollow\"><img alt=\"pyup\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f4227b2cf4df8ab92fe77f0987dd81a1ec7c410/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f706176646d79742f79617370696e2f736869656c642e737667\"></a> <a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"black-fmt\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p><a href=\"https://pypi.org/project/yaspin/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05d77a6435895df6f42fad004a44e0e2520b0691/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f79617370696e2e737667\"></a> <a href=\"https://pypi.org/project/yaspin/\" rel=\"nofollow\"><img alt=\"Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d9ca2c4a2eb3cc8ff239645ae6f535bfcbf6a086/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f79617370696e2e737667\"></a> <a href=\"https://pypi.org/project/yaspin/\" rel=\"nofollow\"><img alt=\"Wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/849eeec78fb1bd3549c70c2c1b4cb2a66371a52f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f79617370696e2e737667\"></a> <a href=\"https://github.com/pavdmyt/yaspin/tree/master/examples\" rel=\"nofollow\"><img alt=\"Examples\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e20925d945effc697085eb8ac8a07b53df8db0ff/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6561726e25323062792d6578616d706c65732d3030373762332e737667\"></a> <a href=\"https://pepy.tech/project/yaspin\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/055e17f2502383036e36f9712cae2e6fd202586a/68747470733a2f2f706570792e746563682f62616467652f79617370696e\"></a></p>\n<p><tt>Yaspin</tt> provides a full-featured terminal spinner to show the progress during long-hanging operations.</p>\n<img alt=\"https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/demo.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1bf73e6062750b03a63648f4cab5147b82e4be97/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f706176646d79742f79617370696e2f6d61737465722f676966732f64656d6f2e676966\">\n<p>It is easy to integrate into existing codebase by using it as a <a href=\"https://docs.python.org/3/reference/datamodel.html#context-managers\" rel=\"nofollow\">context manager</a>\nor as a function <a href=\"https://www.thecodeship.com/patterns/guide-to-python-function-decorators/\" rel=\"nofollow\">decorator</a>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin</span> <span class=\"kn\">import</span> <span class=\"n\">yaspin</span>\n\n<span class=\"c1\"># Context manager:</span>\n<span class=\"k\">with</span> <span class=\"n\">yaspin</span><span class=\"p\">():</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>  <span class=\"c1\"># time consuming code</span>\n\n<span class=\"c1\"># Function decorator:</span>\n<span class=\"nd\">@yaspin</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"Loading...\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">some_operations</span><span class=\"p\">():</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>  <span class=\"c1\"># time consuming code</span>\n\n<span class=\"n\">some_operations</span><span class=\"p\">()</span>\n</pre>\n<p><strong>Yaspin</strong> also provides an intuitive and powerful API. For example, you can easily summon a shark:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin</span> <span class=\"kn\">import</span> <span class=\"n\">yaspin</span>\n\n<span class=\"k\">with</span> <span class=\"n\">yaspin</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">white</span><span class=\"o\">.</span><span class=\"n\">bold</span><span class=\"o\">.</span><span class=\"n\">shark</span><span class=\"o\">.</span><span class=\"n\">on_blue</span> <span class=\"k\">as</span> <span class=\"n\">sp</span><span class=\"p\">:</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s2\">\"White bold shark in a blue sea\"</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/shark.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8bee6863acb5b16826402234354ac59792ed46ea/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f706176646d79742f79617370696e2f6d61737465722f676966732f736861726b2e676966\">\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>No external dependencies</li>\n<li>Runs at all major <strong>CPython</strong> versions (<em>2.7</em>, <em>3.4</em>, <em>3.5</em>, <em>3.6</em>, <em>3.7</em>), <strong>PyPy</strong> and <strong>PyPy3</strong></li>\n<li>Supports all (60+) spinners from <a href=\"https://github.com/sindresorhus/cli-spinners\" rel=\"nofollow\">cli-spinners</a></li>\n<li>Supports all <em>colors</em>, <em>highlights</em>, <em>attributes</em> and their mixes from <a href=\"https://pypi.org/project/termcolor/\" rel=\"nofollow\">termcolor</a> library</li>\n<li>Easy to combine with other command-line libraries, e.g. <a href=\"https://github.com/jonathanslenders/python-prompt-toolkit/\" rel=\"nofollow\">prompt-toolkit</a></li>\n<li>Flexible API, easy to integrate with existing code</li>\n<li>User-friendly API for handling POSIX <a href=\"https://www.computerhope.com/unix/signals.htm\" rel=\"nofollow\">signals</a></li>\n<li>Safe <strong>pipes</strong> and <strong>redirects</strong>:</li>\n</ul>\n<pre>$ python script_that_uses_yaspin.py &gt; script.log\n$ python script_that_uses_yaspin.py <span class=\"p\">|</span> grep ERROR\n</pre>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>From <a href=\"https://pypi.org/\" rel=\"nofollow\">PyPI</a> using <tt>pip</tt> package manager:</p>\n<pre>pip install --upgrade yaspin\n</pre>\n<p>Or install the latest sources from GitHub:</p>\n<pre>pip install https://github.com/pavdmyt/yaspin/archive/master.zip\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<div id=\"basic-example\">\n<h4>Basic Example</h4>\n<img alt=\"https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/basic_example.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/710c499ffbdfd18e85f4e0225f1475ea21499c80/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f706176646d79742f79617370696e2f6d61737465722f676966732f62617369635f6578616d706c652e676966\">\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">random</span> <span class=\"kn\">import</span> <span class=\"n\">randint</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin</span> <span class=\"kn\">import</span> <span class=\"n\">yaspin</span>\n\n<span class=\"k\">with</span> <span class=\"n\">yaspin</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"Loading\"</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s2\">\"yellow\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">spinner</span><span class=\"p\">:</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># time consuming code</span>\n\n    <span class=\"n\">success</span> <span class=\"o\">=</span> <span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">success</span><span class=\"p\">:</span>\n        <span class=\"n\">spinner</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"p\">(</span><span class=\"s2\">\"\u2705 \"</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">spinner</span><span class=\"o\">.</span><span class=\"n\">fail</span><span class=\"p\">(</span><span class=\"s2\">\"\ud83d\udca5 \"</span><span class=\"p\">)</span>\n</pre>\n<p>It is also possible to control spinner manually:</p>\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin</span> <span class=\"kn\">import</span> <span class=\"n\">yaspin</span>\n\n<span class=\"n\">spinner</span> <span class=\"o\">=</span> <span class=\"n\">yaspin</span><span class=\"p\">()</span>\n<span class=\"n\">spinner</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>  <span class=\"c1\"># time consuming tasks</span>\n\n<span class=\"n\">spinner</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"run-any-spinner-from-cli-spinners\">\n<h4>Run any spinner from <a href=\"https://github.com/sindresorhus/cli-spinners\" rel=\"nofollow\">cli-spinners</a></h4>\n<img alt=\"https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/cli_spinners.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1eaed02b51af5b295380357d52e381260edd4b0d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f706176646d79742f79617370696e2f6d61737465722f676966732f636c695f7370696e6e6572732e676966\">\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin</span> <span class=\"kn\">import</span> <span class=\"n\">yaspin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin.spinners</span> <span class=\"kn\">import</span> <span class=\"n\">Spinners</span>\n\n<span class=\"k\">with</span> <span class=\"n\">yaspin</span><span class=\"p\">(</span><span class=\"n\">Spinners</span><span class=\"o\">.</span><span class=\"n\">earth</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"Earth\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">sp</span><span class=\"p\">:</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>                <span class=\"c1\"># time consuming code</span>\n\n    <span class=\"c1\"># change spinner</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">spinner</span> <span class=\"o\">=</span> <span class=\"n\">Spinners</span><span class=\"o\">.</span><span class=\"n\">moon</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s2\">\"Moon\"</span>\n\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>                <span class=\"c1\"># time consuming code</span>\n</pre>\n</div>\n<div id=\"any-colour-you-like\">\n<h4>Any Colour You Like <a href=\"https://en.wikipedia.org/wiki/Any_Colour_You_Like\" rel=\"nofollow\">\ud83c\udf08</a></h4>\n<img alt=\"https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/basic_colors.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/783e1952186f695e8000c2e9785a68ebb8e18167/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f706176646d79742f79617370696e2f6d61737465722f676966732f62617369635f636f6c6f72732e676966\">\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin</span> <span class=\"kn\">import</span> <span class=\"n\">yaspin</span>\n\n<span class=\"k\">with</span> <span class=\"n\">yaspin</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"Colors!\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">sp</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Support all basic termcolor text colors</span>\n    <span class=\"n\">colors</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">\"red\"</span><span class=\"p\">,</span> <span class=\"s2\">\"green\"</span><span class=\"p\">,</span> <span class=\"s2\">\"yellow\"</span><span class=\"p\">,</span> <span class=\"s2\">\"blue\"</span><span class=\"p\">,</span> <span class=\"s2\">\"magenta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"cyan\"</span><span class=\"p\">,</span> <span class=\"s2\">\"white\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">color</span> <span class=\"ow\">in</span> <span class=\"n\">colors</span><span class=\"p\">:</span>\n        <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">,</span> <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">color</span><span class=\"p\">,</span> <span class=\"n\">color</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"advanced-colors-usage\">\n<h4>Advanced colors usage</h4>\n<img alt=\"https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/advanced_colors.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/168ccb5ef0aaab121f750e5871b75670b7f30acc/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f706176646d79742f79617370696e2f6d61737465722f676966732f616476616e6365645f636f6c6f72732e676966\">\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin</span> <span class=\"kn\">import</span> <span class=\"n\">yaspin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin.spinners</span> <span class=\"kn\">import</span> <span class=\"n\">Spinners</span>\n\n<span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s2\">\"Bold blink magenta spinner on cyan color\"</span>\n<span class=\"k\">with</span> <span class=\"n\">yaspin</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">bold</span><span class=\"o\">.</span><span class=\"n\">blink</span><span class=\"o\">.</span><span class=\"n\">magenta</span><span class=\"o\">.</span><span class=\"n\">bouncingBall</span><span class=\"o\">.</span><span class=\"n\">on_cyan</span> <span class=\"k\">as</span> <span class=\"n\">sp</span><span class=\"p\">:</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">text</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># The same result can be achieved by passing arguments directly</span>\n<span class=\"k\">with</span> <span class=\"n\">yaspin</span><span class=\"p\">(</span>\n    <span class=\"n\">Spinners</span><span class=\"o\">.</span><span class=\"n\">bouncingBall</span><span class=\"p\">,</span>\n    <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s2\">\"magenta\"</span><span class=\"p\">,</span>\n    <span class=\"n\">on_color</span><span class=\"o\">=</span><span class=\"s2\">\"on_cyan\"</span><span class=\"p\">,</span>\n    <span class=\"n\">attrs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"bold\"</span><span class=\"p\">,</span> <span class=\"s2\">\"blink\"</span><span class=\"p\">],</span>\n<span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">sp</span><span class=\"p\">:</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">text</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"run-any-spinner-you-want\">\n<h4>Run any spinner you want</h4>\n<img alt=\"https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/custom_spinners.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d014c65606d925ca129bb9e7756c46c455514e09/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f706176646d79742f79617370696e2f6d61737465722f676966732f637573746f6d5f7370696e6e6572732e676966\">\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin</span> <span class=\"kn\">import</span> <span class=\"n\">yaspin</span><span class=\"p\">,</span> <span class=\"n\">Spinner</span>\n\n<span class=\"c1\"># Compose new spinners with custom frame sequence and interval value</span>\n<span class=\"n\">sp</span> <span class=\"o\">=</span> <span class=\"n\">Spinner</span><span class=\"p\">([</span><span class=\"s2\">\"\ud83d\ude38\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\ud83d\ude39\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\ud83d\ude3a\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\ud83d\ude3b\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\ud83d\ude3c\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\ud83d\ude3d\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\ud83d\ude3e\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\ud83d\ude3f\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\ud83d\ude40\"</span><span class=\"p\">],</span> <span class=\"mi\">200</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">yaspin</span><span class=\"p\">(</span><span class=\"n\">sp</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"Cat!\"</span><span class=\"p\">):</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>  <span class=\"c1\"># cat consuming code :)</span>\n</pre>\n</div>\n<div id=\"change-spinner-properties-on-the-fly\">\n<h4>Change spinner properties on the fly</h4>\n<img alt=\"https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/sp_properties.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e04449d98f85dd54e5270c5d15bf28c214c8b7fb/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f706176646d79742f79617370696e2f6d61737465722f676966732f73705f70726f706572746965732e676966\">\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin</span> <span class=\"kn\">import</span> <span class=\"n\">yaspin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin.spinners</span> <span class=\"kn\">import</span> <span class=\"n\">Spinners</span>\n\n<span class=\"k\">with</span> <span class=\"n\">yaspin</span><span class=\"p\">(</span><span class=\"n\">Spinners</span><span class=\"o\">.</span><span class=\"n\">noise</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"Noise spinner\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">sp</span><span class=\"p\">:</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">spinner</span> <span class=\"o\">=</span> <span class=\"n\">Spinners</span><span class=\"o\">.</span><span class=\"n\">arc</span>  <span class=\"c1\"># spinner type</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s2\">\"Arc spinner\"</span>    <span class=\"c1\"># text along with spinner</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"s2\">\"green\"</span>         <span class=\"c1\"># spinner color</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">side</span> <span class=\"o\">=</span> <span class=\"s2\">\"right\"</span>          <span class=\"c1\"># put spinner to the right</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">reversal</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>         <span class=\"c1\"># reverse spin direction</span>\n\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"writing-messages\">\n<h4>Writing messages</h4>\n<img alt=\"https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/write_text.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ecfc21a0fa0ce461caa49772a390014b8fa5457b/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f706176646d79742f79617370696e2f6d61737465722f676966732f77726974655f746578742e676966\">\n<p>You should not write any message in the terminal using <tt>print</tt> while spinner is open.\nTo write messages in the terminal without any collision with <tt>yaspin</tt> spinner, a <tt>.write()</tt> method is provided:</p>\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin</span> <span class=\"kn\">import</span> <span class=\"n\">yaspin</span>\n\n<span class=\"k\">with</span> <span class=\"n\">yaspin</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"Downloading images\"</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s2\">\"cyan\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">sp</span><span class=\"p\">:</span>\n    <span class=\"c1\"># task 1</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">\"&gt; image 1 download complete\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># task 2</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">\"&gt; image 2 download complete\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># finalize</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"p\">(</span><span class=\"s2\">\"\u2714\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"integration-with-other-libraries\">\n<h4>Integration with other libraries</h4>\n<img alt=\"https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/hide_show.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eec0233fd37627f2522827c0626a2680d094f039/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f706176646d79742f79617370696e2f6d61737465722f676966732f686964655f73686f772e676966\">\n<p>Utilizing <tt>hide</tt> and <tt>show</tt> methods it is possible to toggle the display of\nthe spinner in order to call custom methods that write to the terminal. This is\nhelpful for allowing easy usage in other frameworks like <a href=\"https://github.com/jonathanslenders/python-prompt-toolkit/\" rel=\"nofollow\">prompt-toolkit</a>.\nUsing the powerful <tt>print_formatted_text</tt> function allows you even to apply\nHTML formats and CSS styles to the output:</p>\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin</span> <span class=\"kn\">import</span> <span class=\"n\">yaspin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">prompt_toolkit</span> <span class=\"kn\">import</span> <span class=\"n\">HTML</span><span class=\"p\">,</span> <span class=\"n\">print_formatted_text</span>\n<span class=\"kn\">from</span> <span class=\"nn\">prompt_toolkit.styles</span> <span class=\"kn\">import</span> <span class=\"n\">Style</span>\n\n<span class=\"c1\"># override print with feature-rich ``print_formatted_text`` from prompt_toolkit</span>\n<span class=\"nb\">print</span> <span class=\"o\">=</span> <span class=\"n\">print_formatted_text</span>\n\n<span class=\"c1\"># build a basic prompt_toolkit style for styling the HTML wrapped text</span>\n<span class=\"n\">style</span> <span class=\"o\">=</span> <span class=\"n\">Style</span><span class=\"o\">.</span><span class=\"n\">from_dict</span><span class=\"p\">({</span>\n    <span class=\"s1\">'msg'</span><span class=\"p\">:</span> <span class=\"s1\">'#4caf50 bold'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'sub-msg'</span><span class=\"p\">:</span> <span class=\"s1\">'#616161 italic'</span>\n<span class=\"p\">})</span>\n\n\n<span class=\"k\">with</span> <span class=\"n\">yaspin</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s1\">'Downloading images'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">sp</span><span class=\"p\">:</span>\n    <span class=\"c1\"># task 1</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">hide</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">HTML</span><span class=\"p\">(</span>\n        <span class=\"sa\">u</span><span class=\"s1\">'&lt;b&gt;&gt;&lt;/b&gt; &lt;msg&gt;image 1&lt;/msg&gt; &lt;sub-msg&gt;download complete&lt;/sub-msg&gt;'</span>\n    <span class=\"p\">),</span> <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"n\">style</span><span class=\"p\">)</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># task 2</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">hide</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">HTML</span><span class=\"p\">(</span>\n        <span class=\"sa\">u</span><span class=\"s1\">'&lt;b&gt;&gt;&lt;/b&gt; &lt;msg&gt;image 2&lt;/msg&gt; &lt;sub-msg&gt;download complete&lt;/sub-msg&gt;'</span>\n    <span class=\"p\">),</span> <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"n\">style</span><span class=\"p\">)</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># finalize</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"handling-posix-signals\">\n<h4>Handling POSIX <a href=\"https://www.computerhope.com/unix/signals.htm\" rel=\"nofollow\">signals</a></h4>\n<p>Handling keyboard interrupts (pressing Control-C):</p>\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin</span> <span class=\"kn\">import</span> <span class=\"n\">kbi_safe_yaspin</span>\n\n\n<span class=\"k\">with</span> <span class=\"n\">kbi_safe_yaspin</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"Press Control+C to send SIGINT (Keyboard Interrupt) signal\"</span><span class=\"p\">):</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>  <span class=\"c1\"># time consuming code</span>\n</pre>\n<p>Handling other types of signals:</p>\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">signal</span> <span class=\"kn\">import</span> <span class=\"n\">SIGTERM</span><span class=\"p\">,</span> <span class=\"n\">SIGUSR1</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin</span> <span class=\"kn\">import</span> <span class=\"n\">yaspin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yaspin.signal_handlers</span> <span class=\"kn\">import</span> <span class=\"n\">default_handler</span><span class=\"p\">,</span> <span class=\"n\">fancy_handler</span>\n\n\n<span class=\"n\">sigmap</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">SIGUSR1</span><span class=\"p\">:</span> <span class=\"n\">default_handler</span><span class=\"p\">,</span> <span class=\"n\">SIGTERM</span><span class=\"p\">:</span> <span class=\"n\">fancy_handler</span><span class=\"p\">}</span>\n<span class=\"k\">with</span> <span class=\"n\">yaspin</span><span class=\"p\">(</span><span class=\"n\">sigmap</span><span class=\"o\">=</span><span class=\"n\">sigmap</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"Handling SIGUSR1 and SIGTERM signals\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">sp</span><span class=\"p\">:</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">\"Send signals using `kill` command\"</span><span class=\"p\">)</span>\n    <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">\"E.g. $ kill -USR1 </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getpid</span><span class=\"p\">()))</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">)</span>  <span class=\"c1\"># time consuming code</span>\n</pre>\n<p>More <a href=\"https://github.com/pavdmyt/yaspin/tree/master/examples\" rel=\"nofollow\">examples</a>.</p>\n</div>\n</div>\n<div id=\"development\">\n<h3>Development</h3>\n<p>Clone the repository:</p>\n<pre>git clone https://github.com/pavdmyt/yaspin.git\n</pre>\n<p>Install dev dependencies:</p>\n<pre>pipenv install --dev\n</pre>\n<p>Lint code:</p>\n<pre>make lint\n</pre>\n<p>Format code:</p>\n<pre>make black-fmt\n</pre>\n<p>Run tests:</p>\n<pre>make <span class=\"nb\">test</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<ol>\n<li>Fork it!</li>\n<li>Create your feature branch: <tt>git checkout <span class=\"pre\">-b</span> <span class=\"pre\">my-new-feature</span></tt></li>\n<li>Commit your changes: <tt>git commit <span class=\"pre\">-m</span> 'Add some feature'</tt></li>\n<li>Push to the branch: <tt>git push origin <span class=\"pre\">my-new-feature</span></tt></li>\n<li>Submit a pull request</li>\n<li>Make sure tests are passing</li>\n</ol>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<ul>\n<li>MIT - Pavlo Dmytrenko; <a href=\"https://twitter.com/pavdmyt\" rel=\"nofollow\">https://twitter.com/pavdmyt</a></li>\n<li>Contains <a href=\"https://pypi.org/project/termcolor/\" rel=\"nofollow\">termcolor</a> package: MIT License, Copyright (c) 2008-2011 Volvox Development Team</li>\n<li>Contains data from <a href=\"https://github.com/sindresorhus/cli-spinners\" rel=\"nofollow\">cli-spinners</a>: MIT License, Copyright (c) Sindre Sorhus <a href=\"mailto:sindresorhus%40gmail.com\">sindresorhus<span>@</span>gmail<span>.</span>com</a> (sindresorhus.com)</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6437631, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c0e2e9e7afbff47d41bdeb8b89868aed", "sha256": "3d21f115ec6e60373d811cc23ac3d6ca0345ad7b272e9483eba00510a386e399"}, "downloads": -1, "filename": "yaspin-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c0e2e9e7afbff47d41bdeb8b89868aed", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4425, "upload_time": "2017-11-02T19:29:46", "upload_time_iso_8601": "2017-11-02T19:29:46.243906Z", "url": "https://files.pythonhosted.org/packages/6f/cd/a51ff046cc4b2b7abc3b92730a57c528568bb89220a9252fc3e3009b74af/yaspin-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c00fbd99f052724c541e5062f778fddc", "sha256": "fc19cf0d2c4c1436f0cd39ba6905198a8e368fe49502915b26729fade3ac8e67"}, "downloads": -1, "filename": "yaspin-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c00fbd99f052724c541e5062f778fddc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4831, "upload_time": "2017-11-02T19:29:09", "upload_time_iso_8601": "2017-11-02T19:29:09.749439Z", "url": "https://files.pythonhosted.org/packages/52/c1/fc13bfe762bb71d7a1fd8f0f61c3d5212b3246d2184a3c2d3e799a2d2a06/yaspin-0.1.0.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "7ba1bbf98ef7cf2990f13fe761e6949b", "sha256": "41ffc7c8cee06714f355aafdead7c6381aaff43ee5d6851ea636b0cfcf526e82"}, "downloads": -1, "filename": "yaspin-0.10.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7ba1bbf98ef7cf2990f13fe761e6949b", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 18498, "upload_time": "2018-03-23T18:50:01", "upload_time_iso_8601": "2018-03-23T18:50:01.074341Z", "url": "https://files.pythonhosted.org/packages/ac/f4/09ed73bb5ca2eda44843d2e24a80286c29c866915abe17901a2b2c35feb4/yaspin-0.10.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "040629f3b5b1d5b6b2e1775e5510de14", "sha256": "204838b717fbf79cee671f29d06884693f5cf39601c962bb85990519ec2d161a"}, "downloads": -1, "filename": "yaspin-0.10.0.tar.gz", "has_sig": false, "md5_digest": "040629f3b5b1d5b6b2e1775e5510de14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25387, "upload_time": "2018-03-23T18:49:58", "upload_time_iso_8601": "2018-03-23T18:49:58.327029Z", "url": "https://files.pythonhosted.org/packages/3e/c1/a8b9d325d19f6da3ea2d207234c28123c04bf5e3a4541271a6aa1db82339/yaspin-0.10.0.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "31db05f6ab57190d0c54c0bdb5563120", "sha256": "d62fd1ad228638b1fbfc29bf97d548edbac43519dd8be42e1fcc53b59539eb2d"}, "downloads": -1, "filename": "yaspin-0.11.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "31db05f6ab57190d0c54c0bdb5563120", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 18603, "upload_time": "2018-06-23T16:39:35", "upload_time_iso_8601": "2018-06-23T16:39:35.658457Z", "url": "https://files.pythonhosted.org/packages/a5/dd/bd2ce313c62726dd59f3385806c8e7dcb40758cc6748fa6c09db8f5370f8/yaspin-0.11.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "150288e98153060b929aab58aad0f9da", "sha256": "40c7f9d023ca30da7cefbcd30b755600c6177cecb97beb893a8f5b09f711497a"}, "downloads": -1, "filename": "yaspin-0.11.0.tar.gz", "has_sig": false, "md5_digest": "150288e98153060b929aab58aad0f9da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25525, "upload_time": "2018-06-23T16:39:32", "upload_time_iso_8601": "2018-06-23T16:39:32.675065Z", "url": "https://files.pythonhosted.org/packages/67/31/63230f740508dc683cfcbf1e961c95bb43f09dc6edba174dbe8be05088a4/yaspin-0.11.0.tar.gz", "yanked": false}], "0.11.1": [{"comment_text": "", "digests": {"md5": "e54da0d4bc7748c961124325b32a51a6", "sha256": "e9c4812d8e9c9436c7907e3ce41276e0d8459cf010c1e12990459a776461ee98"}, "downloads": -1, "filename": "yaspin-0.11.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e54da0d4bc7748c961124325b32a51a6", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 18605, "upload_time": "2018-07-11T08:49:17", "upload_time_iso_8601": "2018-07-11T08:49:17.588192Z", "url": "https://files.pythonhosted.org/packages/de/97/18cbc497ab2354f6ab20bda9a01aed4a83fb54de82c243d68290798cfc56/yaspin-0.11.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7385330779477aa26ae415020afa296e", "sha256": "26cc21eaca8ad32ac7d60f56b4ef1f66db807fd303a7cd68a1ba77c508b3ee94"}, "downloads": -1, "filename": "yaspin-0.11.1.tar.gz", "has_sig": false, "md5_digest": "7385330779477aa26ae415020afa296e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25583, "upload_time": "2018-07-11T08:49:14", "upload_time_iso_8601": "2018-07-11T08:49:14.958693Z", "url": "https://files.pythonhosted.org/packages/15/3b/ea588561425cab302aa2681b5d26376d69c9f73e1f6361ef65d46fbc5d38/yaspin-0.11.1.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "7fdfe47fe2090e90e940328709131a00", "sha256": "036075448d4f87d248327e25836646dd7a2c4bc48bedf0c1fdbb4fd6325ffd58"}, "downloads": -1, "filename": "yaspin-0.12.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7fdfe47fe2090e90e940328709131a00", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 14331, "upload_time": "2018-07-16T13:20:38", "upload_time_iso_8601": "2018-07-16T13:20:38.956326Z", "url": "https://files.pythonhosted.org/packages/f8/48/cc789022ac306ff3f0408d1c002630b048e005ffdf908b3b1acd71ff0119/yaspin-0.12.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "419ddc97e4ef6a32609d424d1c3b6a29", "sha256": "df8e03b6044397b94b0b78fd55a25dd2c7d1c03ae17697c076e7a6421148b0b7"}, "downloads": -1, "filename": "yaspin-0.12.0.tar.gz", "has_sig": false, "md5_digest": "419ddc97e4ef6a32609d424d1c3b6a29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25558, "upload_time": "2018-07-16T13:20:36", "upload_time_iso_8601": "2018-07-16T13:20:36.267362Z", "url": "https://files.pythonhosted.org/packages/b0/1f/3b410015857e26f30f93eb2d29170974178584bf173ae8704e3ad0e75864/yaspin-0.12.0.tar.gz", "yanked": false}], "0.13.0": [{"comment_text": "", "digests": {"md5": "43e9c73920b8a52b6b3170fc7560889d", "sha256": "5d9d8f3d1580ad874e300384acf2bdad8e53fd93c0b9b6535d7c014a1f539a16"}, "downloads": -1, "filename": "yaspin-0.13.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "43e9c73920b8a52b6b3170fc7560889d", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 15845, "upload_time": "2018-08-15T10:41:37", "upload_time_iso_8601": "2018-08-15T10:41:37.159628Z", "url": "https://files.pythonhosted.org/packages/f1/3c/7b5fc22fea265be24cc3486730a26c0470d7c4ba55cf8aff99d9cc560aed/yaspin-0.13.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dda6738199a994dfd94835d0db82ded9", "sha256": "c160bc7bdf451e4b3636405856136f83a8ba7b0dd4caf7bc47f893782617d520"}, "downloads": -1, "filename": "yaspin-0.13.0.tar.gz", "has_sig": false, "md5_digest": "dda6738199a994dfd94835d0db82ded9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28705, "upload_time": "2018-08-15T10:41:33", "upload_time_iso_8601": "2018-08-15T10:41:33.939460Z", "url": "https://files.pythonhosted.org/packages/9b/28/cdd0c6ea0de46c35e8b048a463970a217daaea9cd35c06e7ea8164a67aed/yaspin-0.13.0.tar.gz", "yanked": false}], "0.14.0": [{"comment_text": "", "digests": {"md5": "8868110f2639c088ed1a66226f1eb536", "sha256": "36fdccc5e0637b5baa8892fe2c3d927782df7d504e9020f40eb2c1502518aa5a"}, "downloads": -1, "filename": "yaspin-0.14.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8868110f2639c088ed1a66226f1eb536", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 18028, "upload_time": "2018-09-05T09:45:44", "upload_time_iso_8601": "2018-09-05T09:45:44.621564Z", "url": "https://files.pythonhosted.org/packages/13/0d/d5f80c462f4c00d222616ddab37901ed4a587de5c3f1407a909ea58daf38/yaspin-0.14.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de8c21234f34ad3fc259282fe30432fc", "sha256": "8e52bf8079a48e2a53f3dfeec9e04addb900c101d1591c85df69cf677d3237e7"}, "downloads": -1, "filename": "yaspin-0.14.0.tar.gz", "has_sig": false, "md5_digest": "de8c21234f34ad3fc259282fe30432fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32740, "upload_time": "2018-09-05T09:45:42", "upload_time_iso_8601": "2018-09-05T09:45:42.009324Z", "url": "https://files.pythonhosted.org/packages/fd/a2/2fb522b0d54b278e6ab52a2ffc4d3347668440c06306bb9308667701f4cb/yaspin-0.14.0.tar.gz", "yanked": false}], "0.14.1": [{"comment_text": "", "digests": {"md5": "06ac6bcd00b39f14b62cf8b83608ea74", "sha256": "d3ebcf8162e0ef8bb5484b8751d5b6d2fbf0720112c81f64614c308576a03b1d"}, "downloads": -1, "filename": "yaspin-0.14.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "06ac6bcd00b39f14b62cf8b83608ea74", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 18960, "upload_time": "2019-01-27T22:40:50", "upload_time_iso_8601": "2019-01-27T22:40:50.182020Z", "url": "https://files.pythonhosted.org/packages/ed/64/c726ff76068efc650b08c9c7db026227870e4bd25148cde3c3da0c15182d/yaspin-0.14.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9884273eabc7bb47e9a2cec31c20e8c0", "sha256": "441f8a6761e347652d04614899fd0a9cfda7439e2d5682e664bd31230c656176"}, "downloads": -1, "filename": "yaspin-0.14.1.tar.gz", "has_sig": false, "md5_digest": "9884273eabc7bb47e9a2cec31c20e8c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32665, "upload_time": "2019-01-27T22:40:46", "upload_time_iso_8601": "2019-01-27T22:40:46.448359Z", "url": "https://files.pythonhosted.org/packages/09/5e/13d0b2c03952e357d6e480311b577664d2f64a082fafcbfeb0912face3b2/yaspin-0.14.1.tar.gz", "yanked": false}], "0.14.2": [{"comment_text": "", "digests": {"md5": "b270e47259fa90c7ed356c63eed7fd00", "sha256": "9b76e240123cdc510fb636a1d71b21145fefddfc8a18c7ed64dc6c40e7efe457"}, "downloads": -1, "filename": "yaspin-0.14.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b270e47259fa90c7ed356c63eed7fd00", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 18957, "upload_time": "2019-04-27T21:11:45", "upload_time_iso_8601": "2019-04-27T21:11:45.115165Z", "url": "https://files.pythonhosted.org/packages/69/9d/ddd4fe593735c31540b10101e1898a289b8856ba793b4ae989e7c4f4926a/yaspin-0.14.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae2ed330de75482a483a00b49fca6b48", "sha256": "84bfdea26e7f7a93256a218ec9e2276679fadecb241c128436463116f56276f9"}, "downloads": -1, "filename": "yaspin-0.14.2.tar.gz", "has_sig": false, "md5_digest": "ae2ed330de75482a483a00b49fca6b48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32699, "upload_time": "2019-04-27T21:11:41", "upload_time_iso_8601": "2019-04-27T21:11:41.314779Z", "url": "https://files.pythonhosted.org/packages/15/a4/bfd5e6f66b2c6812264c16042f2cd9607b329dc4a827c9977da000001650/yaspin-0.14.2.tar.gz", "yanked": false}], "0.14.3": [{"comment_text": "", "digests": {"md5": "fef3af0e1d488dd130d64d645a09665a", "sha256": "8e6d2e2b207ba18510f190e04a25273a32d1f192af9c9a77ebe46deaca799dfa"}, "downloads": -1, "filename": "yaspin-0.14.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fef3af0e1d488dd130d64d645a09665a", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 19000, "upload_time": "2019-05-12T13:31:35", "upload_time_iso_8601": "2019-05-12T13:31:35.002152Z", "url": "https://files.pythonhosted.org/packages/d9/2c/c0b8ab9decf35e5770e0b7b20740b9bc114c5880e2af2c8ec6ca95637717/yaspin-0.14.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "788d18054f892254eb6e979e78b79bcf", "sha256": "94b7602f0dc59d26a15e63cefff6aaf644c58dd77fc4e1ef675d3ba2c302ed06"}, "downloads": -1, "filename": "yaspin-0.14.3.tar.gz", "has_sig": false, "md5_digest": "788d18054f892254eb6e979e78b79bcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33032, "upload_time": "2019-05-12T13:31:31", "upload_time_iso_8601": "2019-05-12T13:31:31.597322Z", "url": "https://files.pythonhosted.org/packages/97/bf/bfee911362e41e57dfbe0ea82ac7b8e3c39b92248ec236ab9d81e9d8284c/yaspin-0.14.3.tar.gz", "yanked": false}], "0.15.0": [{"comment_text": "", "digests": {"md5": "824bdcd5d2af600224d8455ded458001", "sha256": "0ee4668936d0053de752c9a4963929faa3a832bd0ba823877d27855592dc80aa"}, "downloads": -1, "filename": "yaspin-0.15.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "824bdcd5d2af600224d8455ded458001", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 19047, "upload_time": "2019-08-09T13:27:56", "upload_time_iso_8601": "2019-08-09T13:27:56.317634Z", "url": "https://files.pythonhosted.org/packages/01/24/27521d29ce5a511c0e4db2a8dea4f888ffd11709bee1878b2e2faa1087e4/yaspin-0.15.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ac950e847f0ac919254eb6dcd9ade72", "sha256": "5a938bdc7bab353fd8942d0619d56c6b5159a80997dc1c387a479b39e6dc9391"}, "downloads": -1, "filename": "yaspin-0.15.0.tar.gz", "has_sig": false, "md5_digest": "2ac950e847f0ac919254eb6dcd9ade72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33124, "upload_time": "2019-08-09T13:27:53", "upload_time_iso_8601": "2019-08-09T13:27:53.496019Z", "url": "https://files.pythonhosted.org/packages/26/bc/bc181157d6a9d50c62fc6f2636aaf25946fc9c5331e34910d4d8857a9244/yaspin-0.15.0.tar.gz", "yanked": false}], "0.16.0": [{"comment_text": "", "digests": {"md5": "cc11d95caf2b35e5b51f751922c72071", "sha256": "e88bf9c9fe4ac588e3620588aadae655dfc20f1f7460338394ef4693bdc2b800"}, "downloads": -1, "filename": "yaspin-0.16.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cc11d95caf2b35e5b51f751922c72071", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 18992, "upload_time": "2020-01-11T20:59:14", "upload_time_iso_8601": "2020-01-11T20:59:14.031419Z", "url": "https://files.pythonhosted.org/packages/dd/fc/a055a415f368696397c0a2360d7321ad8b8f262cc32c4f68efd3ff5ef5bb/yaspin-0.16.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee7acbd5d0b0494a907c8570f9d8c94e", "sha256": "efca3eb7162e575d3ab2e49743cd9bd1f5ec2adc7d85b9489ab145a3f6460ed4"}, "downloads": -1, "filename": "yaspin-0.16.0.tar.gz", "has_sig": false, "md5_digest": "ee7acbd5d0b0494a907c8570f9d8c94e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33110, "upload_time": "2020-01-11T20:59:10", "upload_time_iso_8601": "2020-01-11T20:59:10.423844Z", "url": "https://files.pythonhosted.org/packages/c4/60/f9e9036afb89e2e22fef79bcfbb73f4095826b96e191e6aed411c893dd9d/yaspin-0.16.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "65736c599cfadc606789482f2b87b06b", "sha256": "79c72efee1abf5e04a2834113ec97901f43e07d6ee9f679ecbc3dc1427acf86e"}, "downloads": -1, "filename": "yaspin-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "65736c599cfadc606789482f2b87b06b", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 8269, "upload_time": "2017-11-10T15:57:40", "upload_time_iso_8601": "2017-11-10T15:57:40.763911Z", "url": "https://files.pythonhosted.org/packages/11/e9/020c0af6b2278dbb017d65a2164f8dd77e4596e92ede9c7f9f611dfa00ae/yaspin-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6d3fdcd21b258420463e53898311969", "sha256": "69285efe0d9349eccac8b3800e0eb5182c4f576e0b23b51665a344f8b3d5e867"}, "downloads": -1, "filename": "yaspin-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d6d3fdcd21b258420463e53898311969", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10235, "upload_time": "2017-11-10T15:57:04", "upload_time_iso_8601": "2017-11-10T15:57:04.949530Z", "url": "https://files.pythonhosted.org/packages/ec/7b/4c929edce3b39387283d12eef8bed2956e3781edadc3c0395c602768a93a/yaspin-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "fb55e5c2294ee846c56d5128b16376ac", "sha256": "70e305ee2784f993b57cc55e7a81e0bd5f9fa361b367401f4bfd964044629224"}, "downloads": -1, "filename": "yaspin-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb55e5c2294ee846c56d5128b16376ac", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 8440, "upload_time": "2017-11-14T11:49:37", "upload_time_iso_8601": "2017-11-14T11:49:37.621589Z", "url": "https://files.pythonhosted.org/packages/ab/d9/705e1ebb13d64861cfb530ed71a0876b2b607d717d4de3866efcc04d8ec6/yaspin-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b664c48f052c0ad8767141b230e5714", "sha256": "8659d40d77c03495e7a398479479f5243002120c26d2bd85463474e5f0ff08be"}, "downloads": -1, "filename": "yaspin-0.3.0.tar.gz", "has_sig": false, "md5_digest": "7b664c48f052c0ad8767141b230e5714", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10762, "upload_time": "2017-11-14T11:49:09", "upload_time_iso_8601": "2017-11-14T11:49:09.573869Z", "url": "https://files.pythonhosted.org/packages/f9/74/736119d03516c74e8b65365cb45de7fad73ce15a63712b012dfb80560f13/yaspin-0.3.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "25a0414444dd5e0fbb1c0c379e24ae3f", "sha256": "f8a55b7677ece13de40aa39bc9cc3124c4f345881caad8d51acfd381468717c6"}, "downloads": -1, "filename": "yaspin-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "25a0414444dd5e0fbb1c0c379e24ae3f", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 9601, "upload_time": "2017-11-17T13:19:01", "upload_time_iso_8601": "2017-11-17T13:19:01.603019Z", "url": "https://files.pythonhosted.org/packages/b7/6d/41848ff6b4c5d3392a0079b48d3c08c8338a919909a563bbc46dc7efc92d/yaspin-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c6a517f45ce639c1e0b3cfcc9bb8300", "sha256": "65ee791e4eb853df40d6203fbb09f2e5786df4b30db71f43749b8ca53d5a1e3f"}, "downloads": -1, "filename": "yaspin-0.4.1.tar.gz", "has_sig": false, "md5_digest": "9c6a517f45ce639c1e0b3cfcc9bb8300", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12411, "upload_time": "2017-11-17T13:18:59", "upload_time_iso_8601": "2017-11-17T13:18:59.345868Z", "url": "https://files.pythonhosted.org/packages/d2/85/71d4ab816e71d4f5fedbe73ef7a7d01f1ec69c7ac2ea64740b8c8f515e91/yaspin-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "d1d51254a957d884071caa014a1901e6", "sha256": "9a78f0ccdb47b41720ba7198700a74b06948bea45216f177a11a18f733892d44"}, "downloads": -1, "filename": "yaspin-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d1d51254a957d884071caa014a1901e6", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 9605, "upload_time": "2017-11-17T14:07:24", "upload_time_iso_8601": "2017-11-17T14:07:24.071822Z", "url": "https://files.pythonhosted.org/packages/61/63/1f1f618911efdbafcae1d40e5c67fadfdc9fab1d79da74fdf5e541aa34d5/yaspin-0.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9302eee0dd62bbb5d4730e9f2982a95e", "sha256": "dc479748444bba42062ef9f51759c01cc7672223cb3256912da71cab3f59d60b"}, "downloads": -1, "filename": "yaspin-0.4.2.tar.gz", "has_sig": false, "md5_digest": "9302eee0dd62bbb5d4730e9f2982a95e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12478, "upload_time": "2017-11-17T14:07:21", "upload_time_iso_8601": "2017-11-17T14:07:21.610918Z", "url": "https://files.pythonhosted.org/packages/02/c2/4655f9fe2bfb9c0177c2181681c284c2383e27c3f8d2199e2d0bfb9a7f6d/yaspin-0.4.2.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "c25c093ad855255bf3f78d4f46114b34", "sha256": "bb0e3c0d0ac4bca1d3e11a0c89083beaf113696db76dc1087911a11aca048bed"}, "downloads": -1, "filename": "yaspin-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c25c093ad855255bf3f78d4f46114b34", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 12099, "upload_time": "2017-11-24T12:31:59", "upload_time_iso_8601": "2017-11-24T12:31:59.298927Z", "url": "https://files.pythonhosted.org/packages/40/64/ebd2582c8f38acf02a6b6605e17e09f4b5246cc78eb9fddc71a7be3921bc/yaspin-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26a5636a2e76de7e39262967aa62e051", "sha256": "331c40fe2c8ea0b831bae1565d7a98b3bab2cc74a4f1359f86f7c36a4f879b2a"}, "downloads": -1, "filename": "yaspin-0.5.0.tar.gz", "has_sig": false, "md5_digest": "26a5636a2e76de7e39262967aa62e051", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16453, "upload_time": "2017-11-24T12:31:57", "upload_time_iso_8601": "2017-11-24T12:31:57.107604Z", "url": "https://files.pythonhosted.org/packages/5f/0a/5a2832619eca6714176a564c7aa2f24de8108227db8f848a7d9be2bb3972/yaspin-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "1b602cd85c757700ee5543ec27624c3a", "sha256": "94addecca82c1d4ee39a789386ba89b047cdd76e6f6582e21d9295640ca5e8ab"}, "downloads": -1, "filename": "yaspin-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1b602cd85c757700ee5543ec27624c3a", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 12213, "upload_time": "2017-11-27T11:46:37", "upload_time_iso_8601": "2017-11-27T11:46:37.126390Z", "url": "https://files.pythonhosted.org/packages/84/63/b478f6be6ba8d744c5e5a58a43f87e915d97b868f0666d8b12708634aa48/yaspin-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a785c972d46a461762d0bae86ffbf181", "sha256": "a8e95c05a96fcf4b337f5c9b7f636057437419075ed0ec2924fe8ef25bf98457"}, "downloads": -1, "filename": "yaspin-0.6.0.tar.gz", "has_sig": false, "md5_digest": "a785c972d46a461762d0bae86ffbf181", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16862, "upload_time": "2017-11-27T11:46:34", "upload_time_iso_8601": "2017-11-27T11:46:34.060987Z", "url": "https://files.pythonhosted.org/packages/4f/8b/464cd17ce7de1c1756cd2444834a6abeb6053f4641952a8d293c17761bea/yaspin-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "91a29b4767a080b75d2003fb7e52c277", "sha256": "10c2730deae1986174ec37c73e329dd000b971ab0d7d5524d88300962ba482cf"}, "downloads": -1, "filename": "yaspin-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "91a29b4767a080b75d2003fb7e52c277", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 12481, "upload_time": "2017-11-28T22:23:13", "upload_time_iso_8601": "2017-11-28T22:23:13.283107Z", "url": "https://files.pythonhosted.org/packages/5c/3a/4653f0196259dc93755d4e4c19de4373cde996641dbf7fab988efd03ce94/yaspin-0.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0914f6b893a6312bfd4c540f23bfa44", "sha256": "d0ae61867078d17755fa397f7022f1500521f1237a795f505e683904509877b8"}, "downloads": -1, "filename": "yaspin-0.7.0.tar.gz", "has_sig": false, "md5_digest": "c0914f6b893a6312bfd4c540f23bfa44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17995, "upload_time": "2017-11-28T22:23:10", "upload_time_iso_8601": "2017-11-28T22:23:10.912307Z", "url": "https://files.pythonhosted.org/packages/74/ef/6e35bb470260de1fbd8d1c72f2db1cee348c791a39d1bae4939d612d6cf6/yaspin-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "9f9673f2fedec3bd1e876359e6f0beba", "sha256": "b7ddbb45440b66e7782830019e87cb0fe5abbfca8349d7f605e1f5049cbfa6c6"}, "downloads": -1, "filename": "yaspin-0.7.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9f9673f2fedec3bd1e876359e6f0beba", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 12882, "upload_time": "2017-12-02T12:48:22", "upload_time_iso_8601": "2017-12-02T12:48:22.375153Z", "url": "https://files.pythonhosted.org/packages/5c/c3/cc97798e532b12e290d1e082cfcc17e040f26b400afc9a2d37d579be64a4/yaspin-0.7.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7373785ddd446f729a818e10b4bccc60", "sha256": "ce159b25ece383e15783c15343ea021dd57f7c3108bd7851834348c67f2f1a77"}, "downloads": -1, "filename": "yaspin-0.7.1.tar.gz", "has_sig": false, "md5_digest": "7373785ddd446f729a818e10b4bccc60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18974, "upload_time": "2017-12-02T12:48:19", "upload_time_iso_8601": "2017-12-02T12:48:19.362887Z", "url": "https://files.pythonhosted.org/packages/fd/52/5efbdf642d683bb9b92dd83d3ed6233233b0a8c7f530f4bbf10fd9415e1e/yaspin-0.7.1.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "2c771bad11f0d390c60211faf8d60541", "sha256": "be3634679dc1d564878d82be48b33d098cfcd540ee0184638a7addb0b9f30f48"}, "downloads": -1, "filename": "yaspin-0.8.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2c771bad11f0d390c60211faf8d60541", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 12979, "upload_time": "2017-12-30T22:43:35", "upload_time_iso_8601": "2017-12-30T22:43:35.671362Z", "url": "https://files.pythonhosted.org/packages/c4/1d/1785df4f19b486ea7d1f41623bf16eb4f37407c6016d0d3655e4c0e7434e/yaspin-0.8.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62612f26e544b2acbae37a2cf2fed373", "sha256": "240f962390d9263c7f4d676508e71acafd35a51670d3e13eb8c66008fde4ff35"}, "downloads": -1, "filename": "yaspin-0.8.0.tar.gz", "has_sig": false, "md5_digest": "62612f26e544b2acbae37a2cf2fed373", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19182, "upload_time": "2017-12-30T22:43:32", "upload_time_iso_8601": "2017-12-30T22:43:32.793958Z", "url": "https://files.pythonhosted.org/packages/ba/76/0ae5dde1296564e0d6c8ce23f7df3297fd1ea64b1a99e67767d77b523fa5/yaspin-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "e63fc278533bfbb31d4e093f72a68e8b", "sha256": "38547d77e47b012d2c5ce0939c593d7e7aaf2fe55313f4c78cdaf8b5a6cf1f0a"}, "downloads": -1, "filename": "yaspin-0.9.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e63fc278533bfbb31d4e093f72a68e8b", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 17214, "upload_time": "2018-02-26T11:22:58", "upload_time_iso_8601": "2018-02-26T11:22:58.671586Z", "url": "https://files.pythonhosted.org/packages/60/06/5ff93204228f85dc26f4f9a873459a46f74e3dcf47d774ce0b34eb243ed4/yaspin-0.9.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35a3f771b28a0755b40069b5099b1756", "sha256": "23919bd6951ddda00675f474b4b49112def2f81a92b2d77e1d35b6eaa95a4ada"}, "downloads": -1, "filename": "yaspin-0.9.0.tar.gz", "has_sig": false, "md5_digest": "35a3f771b28a0755b40069b5099b1756", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23148, "upload_time": "2018-02-26T11:22:54", "upload_time_iso_8601": "2018-02-26T11:22:54.620576Z", "url": "https://files.pythonhosted.org/packages/df/2e/8ef7cad088cb7cd4fd668422439f788dd09bdd19e4b4d5f299bc2d73f290/yaspin-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cc11d95caf2b35e5b51f751922c72071", "sha256": "e88bf9c9fe4ac588e3620588aadae655dfc20f1f7460338394ef4693bdc2b800"}, "downloads": -1, "filename": "yaspin-0.16.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cc11d95caf2b35e5b51f751922c72071", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 18992, "upload_time": "2020-01-11T20:59:14", "upload_time_iso_8601": "2020-01-11T20:59:14.031419Z", "url": "https://files.pythonhosted.org/packages/dd/fc/a055a415f368696397c0a2360d7321ad8b8f262cc32c4f68efd3ff5ef5bb/yaspin-0.16.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee7acbd5d0b0494a907c8570f9d8c94e", "sha256": "efca3eb7162e575d3ab2e49743cd9bd1f5ec2adc7d85b9489ab145a3f6460ed4"}, "downloads": -1, "filename": "yaspin-0.16.0.tar.gz", "has_sig": false, "md5_digest": "ee7acbd5d0b0494a907c8570f9d8c94e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33110, "upload_time": "2020-01-11T20:59:10", "upload_time_iso_8601": "2020-01-11T20:59:10.423844Z", "url": "https://files.pythonhosted.org/packages/c4/60/f9e9036afb89e2e22fef79bcfbb73f4095826b96e191e6aed411c893dd9d/yaspin-0.16.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:22:45 2020"}