{"info": {"author": "imtapps", "author_email": "serveradmin@imtapps.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Database", "Topic :: Software Development :: Libraries"], "description": "django_trees\n============\n\n.. image:: https://travis-ci.org/imtapps/django-trees.svg?branch=master\n    :target: https://travis-ci.org/imtapps/django-trees\n\nSimple way to create, persist and manipulate reliable tree structures using Django models.\n\n\nInstallation\n============\n\n``pip install django-trees``\n\n\nAPI Usage\n=========\n\nCreate Model\n------------\n\nTo create a model extend ``AbstractNode`` and add desired fields.\n\n.. code:: python\n\n    from django.db import models\n    from django_trees.models import AbstractNode\n    \n    class Folder(AbstractNode):\n        name = models.CharField(max_length=10)\n\n\nCreate Tree Nodes\n-----------------\n\nTo create a tree node, there is nothing different than creating a normal Django model other than you may specify a parent node.\n\n.. code:: python\n\n    root = Folder.objects.create(name=\"Root\")\n    documents = Folder.objects.create(name=\"Documents\", parent=root)\n    downloads = Folder.objects.create(name=\"Downloads\", parent=root)\n    projects = Folder.objects.create(name=\"Projects\", parent=documents)\n\n\nGet Node Descendants\n--------------------\n\nTo retrieve all of the descendants of a node (including children, grandchildren, great grandchildren, etc) use the ``get_descendants`` method. This method will return a flat list of node objects.\n\n.. code:: python\n\n   root.get_descendants() \n\n\nGet Node Ancestors\n------------------\n\nTo retrieve all of the ancestors of a node (including parents, grandparents, great grandparents, etc) use the ``get_ancestors`` method. This method will return a flat list of node objects.\n\n.. code:: python\n\n   projects.get_ancestors() \n\n\nGet Node Children\n-----------------\n\nTo retrieve all immediate children of the current node use the ``get_children`` method. This method will return a flat list of node objects.\n\n.. code:: python\n\n   projects.get_children() \n\n\nMove Node\n---------\n\nTo move a node to a different position in the tree use the ``move`` method passing the new parent node as an argument.\n\n.. code:: python\n\n   projects.move(root)\n\n\nBifurcate Node\n--------------\n\nTo create a separate tree from a branch of an existing tree use the ``bifurcate`` method. The node object will be removed from the previous tree and it along with its descendants will now be in a new tree.\n\n.. code:: python\n\n   projects.bifurcate()\n\n\nGet ASCII Tree\n--------------\n\nTo get an ascii representation of the tree structure use the ``get_ascii_tree`` method.\n\n.. code:: python\n\n   projects.get_ascii_tree()\n\n\nDemo\n----\n\n.. image:: https://cloud.githubusercontent.com/assets/847632/4188298/1d00fe0a-3771-11e4-8900-ccda9fbb72a1.gif", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/imtapps/django_trees", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django_trees", "package_url": "https://pypi.org/project/django_trees/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django_trees/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/imtapps/django_trees"}, "release_url": "https://pypi.org/project/django_trees/2.0.1/", "requires_dist": null, "requires_python": null, "summary": "Simple way to create, persist and manipulate reliable tree structures using Django models.", "version": "2.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-trees\">\n<h2>django_trees</h2>\n<a href=\"https://travis-ci.org/imtapps/django-trees\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/imtapps/django-trees.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9197c83e8198d260cd54154137f3121206da265c/68747470733a2f2f7472617669732d63692e6f72672f696d74617070732f646a616e676f2d74726565732e7376673f6272616e63683d6d6173746572\"></a>\n<p>Simple way to create, persist and manipulate reliable tree structures using Django models.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pip install <span class=\"pre\">django-trees</span></tt></p>\n</div>\n<div id=\"api-usage\">\n<h2>API Usage</h2>\n<div id=\"create-model\">\n<h3>Create Model</h3>\n<p>To create a model extend <tt>AbstractNode</tt> and add desired fields.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_trees.models</span> <span class=\"kn\">import</span> <span class=\"n\">AbstractNode</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Folder</span><span class=\"p\">(</span><span class=\"n\">AbstractNode</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"create-tree-nodes\">\n<h3>Create Tree Nodes</h3>\n<p>To create a tree node, there is nothing different than creating a normal Django model other than you may specify a parent node.</p>\n<pre><span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">Folder</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Root\"</span><span class=\"p\">)</span>\n<span class=\"n\">documents</span> <span class=\"o\">=</span> <span class=\"n\">Folder</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Documents\"</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">root</span><span class=\"p\">)</span>\n<span class=\"n\">downloads</span> <span class=\"o\">=</span> <span class=\"n\">Folder</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Downloads\"</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">root</span><span class=\"p\">)</span>\n<span class=\"n\">projects</span> <span class=\"o\">=</span> <span class=\"n\">Folder</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Projects\"</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">documents</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"get-node-descendants\">\n<h3>Get Node Descendants</h3>\n<p>To retrieve all of the descendants of a node (including children, grandchildren, great grandchildren, etc) use the <tt>get_descendants</tt> method. This method will return a flat list of node objects.</p>\n<pre><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">get_descendants</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"get-node-ancestors\">\n<h3>Get Node Ancestors</h3>\n<p>To retrieve all of the ancestors of a node (including parents, grandparents, great grandparents, etc) use the <tt>get_ancestors</tt> method. This method will return a flat list of node objects.</p>\n<pre><span class=\"n\">projects</span><span class=\"o\">.</span><span class=\"n\">get_ancestors</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"get-node-children\">\n<h3>Get Node Children</h3>\n<p>To retrieve all immediate children of the current node use the <tt>get_children</tt> method. This method will return a flat list of node objects.</p>\n<pre><span class=\"n\">projects</span><span class=\"o\">.</span><span class=\"n\">get_children</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"move-node\">\n<h3>Move Node</h3>\n<p>To move a node to a different position in the tree use the <tt>move</tt> method passing the new parent node as an argument.</p>\n<pre><span class=\"n\">projects</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"bifurcate-node\">\n<h3>Bifurcate Node</h3>\n<p>To create a separate tree from a branch of an existing tree use the <tt>bifurcate</tt> method. The node object will be removed from the previous tree and it along with its descendants will now be in a new tree.</p>\n<pre><span class=\"n\">projects</span><span class=\"o\">.</span><span class=\"n\">bifurcate</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"get-ascii-tree\">\n<h3>Get ASCII Tree</h3>\n<p>To get an ascii representation of the tree structure use the <tt>get_ascii_tree</tt> method.</p>\n<pre><span class=\"n\">projects</span><span class=\"o\">.</span><span class=\"n\">get_ascii_tree</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"demo\">\n<h3>Demo</h3>\n<img alt=\"https://cloud.githubusercontent.com/assets/847632/4188298/1d00fe0a-3771-11e4-8900-ccda9fbb72a1.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a462b02d7afdfd4202cbf8cbee5f365de72c85a3/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f3834373633322f343138383239382f31643030666530612d333737312d313165342d383930302d6363646139666262373261312e676966\">\n</div>\n</div>\n\n          </div>"}, "last_serial": 1218554, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9c699996508ae9123190a33b5a81017c", "sha256": "c033e26478373510b758b61887dd799615568841259bd28ebbb7938947e0c2b3"}, "downloads": -1, "filename": "django_trees-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9c699996508ae9123190a33b5a81017c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9402, "upload_time": "2014-09-08T16:01:00", "upload_time_iso_8601": "2014-09-08T16:01:00.958272Z", "url": "https://files.pythonhosted.org/packages/56/e2/7b31d964db84c19704317e1f2f3df30533493ea140c6ed5737ddd01edc50/django_trees-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "60f82893799cb66c54a4e0c49b8b07cf", "sha256": "fd356d7a19277bc20c2a851df2e24f151b7a6ce9930eb8a438925a93e2fdcf27"}, "downloads": -1, "filename": "django_trees-2.0.0.tar.gz", "has_sig": false, "md5_digest": "60f82893799cb66c54a4e0c49b8b07cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9352, "upload_time": "2014-09-08T21:02:09", "upload_time_iso_8601": "2014-09-08T21:02:09.970113Z", "url": "https://files.pythonhosted.org/packages/0f/10/4c3c0e35bea2dfbc40e0df891fb9fa6767173f9e99b14fa7c707b01679ab/django_trees-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "d9a6f8d7258678641b0f5285d6479079", "sha256": "954795d223cc7bf6f8218477b2256cbba2cab5bec452433738c01af21c677180"}, "downloads": -1, "filename": "django_trees-2.0.1.tar.gz", "has_sig": false, "md5_digest": "d9a6f8d7258678641b0f5285d6479079", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9366, "upload_time": "2014-09-09T17:51:15", "upload_time_iso_8601": "2014-09-09T17:51:15.497994Z", "url": "https://files.pythonhosted.org/packages/2e/db/f9f7a3ca906a1af576c47f4a9e5e25199214f8a419a036133098d5b76e24/django_trees-2.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d9a6f8d7258678641b0f5285d6479079", "sha256": "954795d223cc7bf6f8218477b2256cbba2cab5bec452433738c01af21c677180"}, "downloads": -1, "filename": "django_trees-2.0.1.tar.gz", "has_sig": false, "md5_digest": "d9a6f8d7258678641b0f5285d6479079", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9366, "upload_time": "2014-09-09T17:51:15", "upload_time_iso_8601": "2014-09-09T17:51:15.497994Z", "url": "https://files.pythonhosted.org/packages/2e/db/f9f7a3ca906a1af576c47f4a9e5e25199214f8a419a036133098d5b76e24/django_trees-2.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:19 2020"}