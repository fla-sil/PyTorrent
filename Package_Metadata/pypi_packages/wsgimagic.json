{"info": {"author": "Kyle Hinton", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "[![Build Status](https://travis-ci.org/kahinton/wsgimagic.svg?branch=master)](https://travis-ci.org/kahinton/wsgimagic)\n\n\n[![codecov](https://codecov.io/gh/kahinton/wsgimagic/branch/master/graph/badge.svg)](https://codecov.io/gh/kahinton/wsgimagic)\n\n\n\nWelcome to WSGIMagic!\n\nThe use of API Gateways backed by Serverless functions is currently expanding at a massive rate, however every provider \nhas their own special way of presenting the HTTP request to the backend. This means a lot of very boring, very tedious \nwork for us developers every time we want to use a new service. The goal of this package is to remove the barrier between \nthe different cloud providers, and allow you to focus on wrting good old Python WSGI APIs.\n\nThe first environment that has been targeted is the combination of the AWS API Gateway ending as a proxy to AWS Lambda. \nBefore you would need to find out how Amazon was structuring the incoming request information, and how to send that \ninformaton back to get a proper response to the client. WSGIMagic allows you to handle everything with a basic decorator. \nThe following example illustrates a very small example using Flask.\n\nfrom flask import Flask\n\nfrom wsgimagic.aws_lambda import lambda_magic\n\n\napp = Flask(__name__)\n\n\n@app.route('/hello', allowed_methods=['GET'])\ndef hello()\n    return 'Hello World'\n\n\n@lambda_magic(app)\ndef event_handler(event, context):\n    pass\n\n\nBy using the lambda_magic decorator, the incoming API Gateway event will automatically be translated to the WSGI format \nand passed off to your application. For basic request handling, this is all you need to do. The lambda_magic decorator \nalso allows you to specify additional response headers that need to be added, define the server name and port that your \napp will be told it is running under, and provide a custom error handler in case something goes really wrong with your \nrequests. I will add more written documentation in the near future, however all of the functions should have decent doc \nstrings that will provide any other available features.\n\nLong term this package will aim to provide similar decorators for other Serverless providers who also do not pass HTTP \nmessages along pre-translated to the WSGI format.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "wsgimagic", "package_url": "https://pypi.org/project/wsgimagic/", "platform": "", "project_url": "https://pypi.org/project/wsgimagic/", "project_urls": null, "release_url": "https://pypi.org/project/wsgimagic/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Serverless WSGI apps made easy", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/kahinton/wsgimagic\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7656150abd37bead64797bd6cf6fe3abc997377d/68747470733a2f2f7472617669732d63692e6f72672f6b6168696e746f6e2f777367696d616769632e7376673f6272616e63683d6d6173746572\"></a></p>\n<p><a href=\"https://codecov.io/gh/kahinton/wsgimagic\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9a136f386cb68182d2c4957abd3bce3ebfa929e/68747470733a2f2f636f6465636f762e696f2f67682f6b6168696e746f6e2f777367696d616769632f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p>Welcome to WSGIMagic!</p>\n<p>The use of API Gateways backed by Serverless functions is currently expanding at a massive rate, however every provider\nhas their own special way of presenting the HTTP request to the backend. This means a lot of very boring, very tedious\nwork for us developers every time we want to use a new service. The goal of this package is to remove the barrier between\nthe different cloud providers, and allow you to focus on wrting good old Python WSGI APIs.</p>\n<p>The first environment that has been targeted is the combination of the AWS API Gateway ending as a proxy to AWS Lambda.\nBefore you would need to find out how Amazon was structuring the incoming request information, and how to send that\ninformaton back to get a proper response to the client. WSGIMagic allows you to handle everything with a basic decorator.\nThe following example illustrates a very small example using Flask.</p>\n<p>from flask import Flask</p>\n<p>from wsgimagic.aws_lambda import lambda_magic</p>\n<p>app = Flask(<strong>name</strong>)</p>\n<p>@app.route('/hello', allowed_methods=['GET'])\ndef hello()\nreturn 'Hello World'</p>\n<p>@lambda_magic(app)\ndef event_handler(event, context):\npass</p>\n<p>By using the lambda_magic decorator, the incoming API Gateway event will automatically be translated to the WSGI format\nand passed off to your application. For basic request handling, this is all you need to do. The lambda_magic decorator\nalso allows you to specify additional response headers that need to be added, define the server name and port that your\napp will be told it is running under, and provide a custom error handler in case something goes really wrong with your\nrequests. I will add more written documentation in the near future, however all of the functions should have decent doc\nstrings that will provide any other available features.</p>\n<p>Long term this package will aim to provide similar decorators for other Serverless providers who also do not pass HTTP\nmessages along pre-translated to the WSGI format.</p>\n\n          </div>"}, "last_serial": 4313511, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "49eb4200f4bd09339f125214d02c6c34", "sha256": "6338926d4d234af8e31441e427ecb20759404ed2a7fbd991f1e1cc49c1a5a8d4"}, "downloads": -1, "filename": "wsgimagic-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "49eb4200f4bd09339f125214d02c6c34", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4758, "upload_time": "2018-09-06T01:44:52", "upload_time_iso_8601": "2018-09-06T01:44:52.100351Z", "url": "https://files.pythonhosted.org/packages/95/f2/ad7b0ed9534fabafcdf3fbe55e38765a6d7104ca834a3ed3685bf37ba625/wsgimagic-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43a1323e458e54fa23c4866e9a5a89da", "sha256": "34305eef97672088b5c239de32e2afbfc4cb5f5854f28ae44ef5632644daed4b"}, "downloads": -1, "filename": "wsgimagic-0.1.0.tar.gz", "has_sig": false, "md5_digest": "43a1323e458e54fa23c4866e9a5a89da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4248, "upload_time": "2018-09-06T01:44:53", "upload_time_iso_8601": "2018-09-06T01:44:53.115702Z", "url": "https://files.pythonhosted.org/packages/b8/35/fada4f6bb6facb8334ffe85c9da9fd03e7676d93604b79a4c06dd2073d8e/wsgimagic-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "04fb36d6085a9e059e858b53ceb8dd7e", "sha256": "4558b8f718171acdda551afea28843fec1c724f630958a35da41c19214d35e78"}, "downloads": -1, "filename": "wsgimagic-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "04fb36d6085a9e059e858b53ceb8dd7e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5866, "upload_time": "2018-09-20T15:06:12", "upload_time_iso_8601": "2018-09-20T15:06:12.575858Z", "url": "https://files.pythonhosted.org/packages/de/73/53b4d6a49b30b74868d0248eac08ff6b2ff68d9313fca0a7bf374635de5d/wsgimagic-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8cbf05e9e8b3f890da52d46fca7e0ae9", "sha256": "6cdc929b3d9d4aab4bc8e9be5479831a0bba2aa3e73af2308c3176d7387ae24c"}, "downloads": -1, "filename": "wsgimagic-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8cbf05e9e8b3f890da52d46fca7e0ae9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4607, "upload_time": "2018-09-20T15:06:13", "upload_time_iso_8601": "2018-09-20T15:06:13.479055Z", "url": "https://files.pythonhosted.org/packages/d2/43/415dff34fa612afd28ad209bf24c7f33d2c1bd58ca1972f70c6dd98b5c66/wsgimagic-0.2.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "974607c815283ccea629bd6363a923dc", "sha256": "843cfebbce54e320ed551b5dcca9df43a182558b2d23f3adba00d420ab427b1a"}, "downloads": -1, "filename": "wsgimagic-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "974607c815283ccea629bd6363a923dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5899, "upload_time": "2018-09-26T18:08:53", "upload_time_iso_8601": "2018-09-26T18:08:53.320087Z", "url": "https://files.pythonhosted.org/packages/c7/9d/af8598bc228b25bf60ef9a7c8fea6d24f8f5a1232b051caed21ec6f644e0/wsgimagic-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc6e34f3bca85e8200bc3a5928c42956", "sha256": "2cc611f45e34bae22a75fc9719b3b12a700e390bd8ede78d82a7e8e59acfdc9e"}, "downloads": -1, "filename": "wsgimagic-1.0.0.tar.gz", "has_sig": false, "md5_digest": "bc6e34f3bca85e8200bc3a5928c42956", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4810, "upload_time": "2018-09-26T18:08:54", "upload_time_iso_8601": "2018-09-26T18:08:54.535749Z", "url": "https://files.pythonhosted.org/packages/c7/fc/727c31f218c3105c97879a877711cbc7bede8d8f4de5e56869e6542dca4d/wsgimagic-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "974607c815283ccea629bd6363a923dc", "sha256": "843cfebbce54e320ed551b5dcca9df43a182558b2d23f3adba00d420ab427b1a"}, "downloads": -1, "filename": "wsgimagic-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "974607c815283ccea629bd6363a923dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5899, "upload_time": "2018-09-26T18:08:53", "upload_time_iso_8601": "2018-09-26T18:08:53.320087Z", "url": "https://files.pythonhosted.org/packages/c7/9d/af8598bc228b25bf60ef9a7c8fea6d24f8f5a1232b051caed21ec6f644e0/wsgimagic-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc6e34f3bca85e8200bc3a5928c42956", "sha256": "2cc611f45e34bae22a75fc9719b3b12a700e390bd8ede78d82a7e8e59acfdc9e"}, "downloads": -1, "filename": "wsgimagic-1.0.0.tar.gz", "has_sig": false, "md5_digest": "bc6e34f3bca85e8200bc3a5928c42956", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4810, "upload_time": "2018-09-26T18:08:54", "upload_time_iso_8601": "2018-09-26T18:08:54.535749Z", "url": "https://files.pythonhosted.org/packages/c7/fc/727c31f218c3105c97879a877711cbc7bede8d8f4de5e56869e6542dca4d/wsgimagic-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:06 2020"}