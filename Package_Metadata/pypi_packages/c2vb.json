{"info": {"author": "Chaigidel", "author_email": "chaigidel@outlook.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# c2vb\n\nA Python program convert simple C / C++ code to Visual Basic 6 code\n\nWarning: only support very little C / C++ grammar\n\n### \u7279\u6027\n\n\u5c06 C / C++ \u8f6c\u6210 AST \u518d\u8f6c\u6210 VB\n\n- \u5b9e\u73b0\u57fa\u672c\u8bed\u6cd5\n- \u7b80\u5355\u7c7b\u578b\u63a8\u65ad\uff08\u533a\u5206 `/` \u548c `\\`\uff09\n- \u53ef\u6253\u5370\u5e26\u7f29\u8fdb AST\n- \u53ef\u751f\u6210 Graphviz dot \u8bed\u8a00 AST\n\n### \u4f7f\u7528\u65b9\u6cd5\n\n```bash\n$ pip install c2vb\n$ c2vb sample.c\n$ c2vb sample.cpp\n```\n\n```python\nimport c2vb\n\nf = open('sample.c', 'r')\nsrc = f.read()\nlex = c2vb.Lexer(src) # \u8bcd\u6cd5\nparser = c2vb.Parser(lex.tokens) # \u8bed\u6cd5\nc2vb.proc(parser.ast) # \u7c7b\u578b\u63a8\u65ad\n\nparser.ast.vb() == c2vb.run(file='sample.c') == c2vb.run(src='sample.c') # \u8fd4\u56de VB \u4ee3\u7801\nparser.ast.dot() # \u8fd4\u56de\u4ee5 dot \u8bed\u8a00\u8868\u793a\u7684 AST\nstr(parser.ast) # \u8fd4\u56de\u5b57\u7b26\u4e32\u5e26\u7f29\u8fdb AST\n```\n\n### \u6ce8\u610f\n\n- \u4e0d\u652f\u6301\u9884\u5904\u7406\u547d\u4ee4(`#include` `#define` ...)\n  - \u53ef\u4ee5\u8bd5\u8bd5 `g++ -E file.cpp` \u6765\u5904\u7406 `#define`\n- `++`  `--` \u662f\u88ab\u770b\u4f5c\u8d4b\u503c\u7684\uff0c\u4e0d\u80fd\u5728\u8868\u8fbe\u5f0f\u4e2d\u51fa\u73b0\u3002\n- \u4e0d\u652f\u6301 `struct` `class`\n- \u4e0d\u652f\u6301\u6570\u7ec4\u521d\u59cb\u5316\n  - \u4e5f\u5c31\u662f\u8bf4 `const` \u6570\u7ec4\u4e0d\u884c\n- \u4e0d\u80fd\u8fde\u8d4b\u503c `a=b=c`\n- \u9ad8\u7ea7\u8bed\u6cd5\u4e00\u4e2a\u90fd\u6ca1\u6709\u5b9e\u73b0\n  - \u6ce8\u610f\u5220\u6389 `cin/cout` \u56e0\u4e3a\u6ca1\u6709\u5b9e\u73b0\u8fd0\u7b97\u7b26\u91cd\u8f7d\n- `for(s1;s2;s3;)` `s1` \u5fc5\u987b\u4e3a\u8d4b\u503c\u6216\u5b9a\u4e49\uff0c`s2` \u5fc5\u987b\u4e3a\u6570\u5b66\u8868\u8fbe\u5f0f\uff0c`s3` \u5fc5\u987b\u4e3a\u8d4b\u503c\n- \u6240\u6709 `for` \u90fd\u5c06\u88ab\u7ffb\u8bd1\u4e3a `Do While ... Loop`\n- \u4e0d\u652f\u6301 `do ... while()`\n- \u8bed\u53e5\u53ea\u6709 if/for/while/return/break/const/\u53d8\u91cf\u5b9a\u4e49/\u51fd\u6570\u8c03\u7528\n  - \u4e5f\u5c31\u662f\u8bf4 \u8868\u8fbe\u5f0f \u52a0 `;` \u5f53\u8bed\u53e5\u662f\u4e0d\u884c\u7684\n- \u7c7b\u578b\u53ea\u6709 `int/float/double/bool/string`\n\n### \u8d21\u732e\n\n\u6b22\u8fce\u63d0 bug, issue, pull request\n\nTODO:\n\n- \u8868\u8fbe\u5f0f\u4e2d\u542b\u6709 `++` `--`\n  - \u8fd9\u4ef6\u4e8b\u6bd4\u8f83\u9ebb\u70e6\u56e0\u4e3a\u8fd9\u4f1a\u628a\u4e00\u4e2a\u8d4b\u503c\u53d8\u6210\u4e24\u4e09\u4e2a\n- \u8fde\u8d4b\u503c `a=b=c`\n- \u7279\u6b8a `for` \u7ffb\u8bd1\u6210 `For` \uff08\u9065\u9065\u65e0\u671f\uff09\n- C / C++ \u4e2d\u5e38\u7528\u51fd\u6570\u5199\u5165\u8bed\u6cd5\u4e4b\u4e2d\u65b9\u4fbf\u8fd0\u884c\n- \u6570\u7ec4\u521d\u59cb\u5316\n\n### \u652f\u6301\u7684\u8bed\u6cd5\n\n```\nstatements   --> statement | statements statement\nstatement    --> if | while | for | const | declare | return | break\n               | \"{\" statements \"}\"\n               | call \";\" | assigns \";\"\nprogram      --> program ( const | declare | func )\nexpr         --> \u652f\u6301\u51fd\u6570\u8c03\u7528, \u6570\u7ec4, `- ! ~ * / % + - < <= > >= == != & ^ | && ||`\n               | \u5b57\u7b26\u4e32\u5e38\u91cf\ntype         --> \"int\" | \"float\" | \"double\" | \"string\" | \"void\" | \"bool\"\nidentifier   --> ID | identifier\"[\"expr\"]\"\ncall         --> identifier \"(\" \")\"\n               | identifier \"(\" expr ( \",\" expr )* \")\"\nassign_opt   --> \"+=\" | \"-=\" | \"*=\" | \"/=\" | \"%=\" \n               | \"&=\" | \"^=\" | \"|=\" | \"=\"\nassign       --> ( \"++\" | \"--\" ) identifier\n               | identifier ( \"++\" | \"--\" )\n               | identifier assign_opt expr\nassigns      --> assign ( \",\" assign )*\narg          --> type identifier\nfunc         --> type identifier \"(\" \")\" statement\n               | type identifier \"(\" arg ( \",\" arg )* \")\" statement\nconst        --> \"const\" declare\nif           --> \"if\" \"(\" expr \")\" statement\n               | \"if\" \"(\" expr \")\" statement \"else\" statement\nfor          --> \"for\" \"(\" (declare | assigns \";\" ) expr \";\" assigns \")\" statement\nwhile        --> \"while\" \"(\" expr \")\" statement\nreturn       --> \"return\"\n               | \"return\" expr \";\"\nbreak        --> \"break\" \";\"\ndeclare_item --> identifier\n               | identifier \"=\" expr\ndeclare      --> type declare_item ( \",\" declare_item )* \";\"\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Chaigidel/c2vb", "keywords": "c,cpp,visualbasic,ast", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "c2vb", "package_url": "https://pypi.org/project/c2vb/", "platform": "", "project_url": "https://pypi.org/project/c2vb/", "project_urls": {"Homepage": "https://github.com/Chaigidel/c2vb"}, "release_url": "https://pypi.org/project/c2vb/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "A program convert simple C / C++ code to Visual Basic 6 code", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>c2vb</h1>\n<p>A Python program convert simple C / C++ code to Visual Basic 6 code</p>\n<p>Warning: only support very little C / C++ grammar</p>\n<h3>\u7279\u6027</h3>\n<p>\u5c06 C / C++ \u8f6c\u6210 AST \u518d\u8f6c\u6210 VB</p>\n<ul>\n<li>\u5b9e\u73b0\u57fa\u672c\u8bed\u6cd5</li>\n<li>\u7b80\u5355\u7c7b\u578b\u63a8\u65ad\uff08\u533a\u5206 <code>/</code> \u548c <code>\\</code>\uff09</li>\n<li>\u53ef\u6253\u5370\u5e26\u7f29\u8fdb AST</li>\n<li>\u53ef\u751f\u6210 Graphviz dot \u8bed\u8a00 AST</li>\n</ul>\n<h3>\u4f7f\u7528\u65b9\u6cd5</h3>\n<pre>$ pip install c2vb\n$ c2vb sample.c\n$ c2vb sample.cpp\n</pre>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">c2vb</span>\n\n<span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'sample.c'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">)</span>\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"n\">lex</span> <span class=\"o\">=</span> <span class=\"n\">c2vb</span><span class=\"o\">.</span><span class=\"n\">Lexer</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">)</span> <span class=\"c1\"># \u8bcd\u6cd5</span>\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">c2vb</span><span class=\"o\">.</span><span class=\"n\">Parser</span><span class=\"p\">(</span><span class=\"n\">lex</span><span class=\"o\">.</span><span class=\"n\">tokens</span><span class=\"p\">)</span> <span class=\"c1\"># \u8bed\u6cd5</span>\n<span class=\"n\">c2vb</span><span class=\"o\">.</span><span class=\"n\">proc</span><span class=\"p\">(</span><span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">ast</span><span class=\"p\">)</span> <span class=\"c1\"># \u7c7b\u578b\u63a8\u65ad</span>\n\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">vb</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">c2vb</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">=</span><span class=\"s1\">'sample.c'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">c2vb</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"o\">=</span><span class=\"s1\">'sample.c'</span><span class=\"p\">)</span> <span class=\"c1\"># \u8fd4\u56de VB \u4ee3\u7801</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">()</span> <span class=\"c1\"># \u8fd4\u56de\u4ee5 dot \u8bed\u8a00\u8868\u793a\u7684 AST</span>\n<span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">ast</span><span class=\"p\">)</span> <span class=\"c1\"># \u8fd4\u56de\u5b57\u7b26\u4e32\u5e26\u7f29\u8fdb AST</span>\n</pre>\n<h3>\u6ce8\u610f</h3>\n<ul>\n<li>\u4e0d\u652f\u6301\u9884\u5904\u7406\u547d\u4ee4(<code>#include</code> <code>#define</code> ...)\n<ul>\n<li>\u53ef\u4ee5\u8bd5\u8bd5 <code>g++ -E file.cpp</code> \u6765\u5904\u7406 <code>#define</code></li>\n</ul>\n</li>\n<li><code>++</code>  <code>--</code> \u662f\u88ab\u770b\u4f5c\u8d4b\u503c\u7684\uff0c\u4e0d\u80fd\u5728\u8868\u8fbe\u5f0f\u4e2d\u51fa\u73b0\u3002</li>\n<li>\u4e0d\u652f\u6301 <code>struct</code> <code>class</code></li>\n<li>\u4e0d\u652f\u6301\u6570\u7ec4\u521d\u59cb\u5316\n<ul>\n<li>\u4e5f\u5c31\u662f\u8bf4 <code>const</code> \u6570\u7ec4\u4e0d\u884c</li>\n</ul>\n</li>\n<li>\u4e0d\u80fd\u8fde\u8d4b\u503c <code>a=b=c</code></li>\n<li>\u9ad8\u7ea7\u8bed\u6cd5\u4e00\u4e2a\u90fd\u6ca1\u6709\u5b9e\u73b0\n<ul>\n<li>\u6ce8\u610f\u5220\u6389 <code>cin/cout</code> \u56e0\u4e3a\u6ca1\u6709\u5b9e\u73b0\u8fd0\u7b97\u7b26\u91cd\u8f7d</li>\n</ul>\n</li>\n<li><code>for(s1;s2;s3;)</code> <code>s1</code> \u5fc5\u987b\u4e3a\u8d4b\u503c\u6216\u5b9a\u4e49\uff0c<code>s2</code> \u5fc5\u987b\u4e3a\u6570\u5b66\u8868\u8fbe\u5f0f\uff0c<code>s3</code> \u5fc5\u987b\u4e3a\u8d4b\u503c</li>\n<li>\u6240\u6709 <code>for</code> \u90fd\u5c06\u88ab\u7ffb\u8bd1\u4e3a <code>Do While ... Loop</code></li>\n<li>\u4e0d\u652f\u6301 <code>do ... while()</code></li>\n<li>\u8bed\u53e5\u53ea\u6709 if/for/while/return/break/const/\u53d8\u91cf\u5b9a\u4e49/\u51fd\u6570\u8c03\u7528\n<ul>\n<li>\u4e5f\u5c31\u662f\u8bf4 \u8868\u8fbe\u5f0f \u52a0 <code>;</code> \u5f53\u8bed\u53e5\u662f\u4e0d\u884c\u7684</li>\n</ul>\n</li>\n<li>\u7c7b\u578b\u53ea\u6709 <code>int/float/double/bool/string</code></li>\n</ul>\n<h3>\u8d21\u732e</h3>\n<p>\u6b22\u8fce\u63d0 bug, issue, pull request</p>\n<p>TODO:</p>\n<ul>\n<li>\u8868\u8fbe\u5f0f\u4e2d\u542b\u6709 <code>++</code> <code>--</code>\n<ul>\n<li>\u8fd9\u4ef6\u4e8b\u6bd4\u8f83\u9ebb\u70e6\u56e0\u4e3a\u8fd9\u4f1a\u628a\u4e00\u4e2a\u8d4b\u503c\u53d8\u6210\u4e24\u4e09\u4e2a</li>\n</ul>\n</li>\n<li>\u8fde\u8d4b\u503c <code>a=b=c</code></li>\n<li>\u7279\u6b8a <code>for</code> \u7ffb\u8bd1\u6210 <code>For</code> \uff08\u9065\u9065\u65e0\u671f\uff09</li>\n<li>C / C++ \u4e2d\u5e38\u7528\u51fd\u6570\u5199\u5165\u8bed\u6cd5\u4e4b\u4e2d\u65b9\u4fbf\u8fd0\u884c</li>\n<li>\u6570\u7ec4\u521d\u59cb\u5316</li>\n</ul>\n<h3>\u652f\u6301\u7684\u8bed\u6cd5</h3>\n<pre><code>statements   --&gt; statement | statements statement\nstatement    --&gt; if | while | for | const | declare | return | break\n               | \"{\" statements \"}\"\n               | call \";\" | assigns \";\"\nprogram      --&gt; program ( const | declare | func )\nexpr         --&gt; \u652f\u6301\u51fd\u6570\u8c03\u7528, \u6570\u7ec4, `- ! ~ * / % + - &lt; &lt;= &gt; &gt;= == != &amp; ^ | &amp;&amp; ||`\n               | \u5b57\u7b26\u4e32\u5e38\u91cf\ntype         --&gt; \"int\" | \"float\" | \"double\" | \"string\" | \"void\" | \"bool\"\nidentifier   --&gt; ID | identifier\"[\"expr\"]\"\ncall         --&gt; identifier \"(\" \")\"\n               | identifier \"(\" expr ( \",\" expr )* \")\"\nassign_opt   --&gt; \"+=\" | \"-=\" | \"*=\" | \"/=\" | \"%=\" \n               | \"&amp;=\" | \"^=\" | \"|=\" | \"=\"\nassign       --&gt; ( \"++\" | \"--\" ) identifier\n               | identifier ( \"++\" | \"--\" )\n               | identifier assign_opt expr\nassigns      --&gt; assign ( \",\" assign )*\narg          --&gt; type identifier\nfunc         --&gt; type identifier \"(\" \")\" statement\n               | type identifier \"(\" arg ( \",\" arg )* \")\" statement\nconst        --&gt; \"const\" declare\nif           --&gt; \"if\" \"(\" expr \")\" statement\n               | \"if\" \"(\" expr \")\" statement \"else\" statement\nfor          --&gt; \"for\" \"(\" (declare | assigns \";\" ) expr \";\" assigns \")\" statement\nwhile        --&gt; \"while\" \"(\" expr \")\" statement\nreturn       --&gt; \"return\"\n               | \"return\" expr \";\"\nbreak        --&gt; \"break\" \";\"\ndeclare_item --&gt; identifier\n               | identifier \"=\" expr\ndeclare      --&gt; type declare_item ( \",\" declare_item )* \";\"\n</code></pre>\n\n          </div>"}, "last_serial": 6563098, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3397b32593a87074d5243bc6f6b77984", "sha256": "d9a5ba995904bcbe10bc0decb671fb8227f86e50efa2909f7b4901c7daec7971"}, "downloads": -1, "filename": "c2vb-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3397b32593a87074d5243bc6f6b77984", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11096, "upload_time": "2020-02-03T14:56:51", "upload_time_iso_8601": "2020-02-03T14:56:51.336019Z", "url": "https://files.pythonhosted.org/packages/57/b9/a7bb4ccac45f4bb605d498ae1ee3dc8917928c0450d4f458a03f748ddf12/c2vb-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b3017e29a3eeaab054098dadc2dcb10", "sha256": "5e0b916e0ed0ea15b717e67862d181edd40fc3972ee8bf0530e97fc7b11dbc90"}, "downloads": -1, "filename": "c2vb-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5b3017e29a3eeaab054098dadc2dcb10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10995, "upload_time": "2020-02-03T14:56:53", "upload_time_iso_8601": "2020-02-03T14:56:53.630219Z", "url": "https://files.pythonhosted.org/packages/73/fd/962408338fbbd62f937eda13aed2bab35b9ad87cbedef80a7ed73455995c/c2vb-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3397b32593a87074d5243bc6f6b77984", "sha256": "d9a5ba995904bcbe10bc0decb671fb8227f86e50efa2909f7b4901c7daec7971"}, "downloads": -1, "filename": "c2vb-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3397b32593a87074d5243bc6f6b77984", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11096, "upload_time": "2020-02-03T14:56:51", "upload_time_iso_8601": "2020-02-03T14:56:51.336019Z", "url": "https://files.pythonhosted.org/packages/57/b9/a7bb4ccac45f4bb605d498ae1ee3dc8917928c0450d4f458a03f748ddf12/c2vb-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b3017e29a3eeaab054098dadc2dcb10", "sha256": "5e0b916e0ed0ea15b717e67862d181edd40fc3972ee8bf0530e97fc7b11dbc90"}, "downloads": -1, "filename": "c2vb-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5b3017e29a3eeaab054098dadc2dcb10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10995, "upload_time": "2020-02-03T14:56:53", "upload_time_iso_8601": "2020-02-03T14:56:53.630219Z", "url": "https://files.pythonhosted.org/packages/73/fd/962408338fbbd62f937eda13aed2bab35b9ad87cbedef80a7ed73455995c/c2vb-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:46 2020"}