{"info": {"author": "Matt Clark", "author_email": "matt@mattclark.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing"], "description": "RDFdict\n=======\n\nA python class for a nested dictionaries representation of RDF quads and triples.\n\nSimple usage:\n\n    >>> from rdfdict import RDFdict\n    >>> some_triples = ( ( 's1', 'p1', 'o1' ), ( 's2', 'p2', 'o2' ) )\n    >>> my_rdfdict = RDFdict(triples=some_triples)\n    >>> my_rdfdict.default_graph()\n    {'s2': {'p2': 'o2'}, 's1': {'p1': 'o1'}}\n    >>> list(my_rdfdict.graphs())\n    [('DEFAULT', {'s2': {'p2': 'o2'}, 's1': {'p1': 'o1'}})]\n\nRDFdict supports quads or triples.  Unless otherwise specified the default graph is called 'DEFAULT'.  When retrieving\nmultiple named graphs they are provided in a list of (name, graph_dictionary ) tuples.  When there are multiple objects\nfor a given subject and predicate, the predicate appears once and the objects appear in a list.\n\nAlthough mainly intended for use with RDF and JSON, RDFdict is actually neutral to either.  It does not attempt to\nmanage conversions from RDF to JSON, but if you use RDFlib URIRefs and Literals as the elements in your graphs, they\nwill be correctly converted by json.dumps.  See test/test_withrdflib.py for examples.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mattclarkdotnet/rdfdict", "keywords": "rdf,json,dict", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "RDFdict", "package_url": "https://pypi.org/project/RDFdict/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/RDFdict/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/mattclarkdotnet/rdfdict"}, "release_url": "https://pypi.org/project/RDFdict/0.1.6/", "requires_dist": null, "requires_python": null, "summary": "A class for creating a nested dictionaries representation of RDF quads or triples", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A python class for a nested dictionaries representation of RDF quads and triples.</p>\n<p>Simple usage:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from rdfdict import RDFdict\n&gt;&gt;&gt; some_triples = ( ( 's1', 'p1', 'o1' ), ( 's2', 'p2', 'o2' ) )\n&gt;&gt;&gt; my_rdfdict = RDFdict(triples=some_triples)\n&gt;&gt;&gt; my_rdfdict.default_graph()\n{'s2': {'p2': 'o2'}, 's1': {'p1': 'o1'}}\n&gt;&gt;&gt; list(my_rdfdict.graphs())\n[('DEFAULT', {'s2': {'p2': 'o2'}, 's1': {'p1': 'o1'}})]\n</pre>\n</blockquote>\n<p>RDFdict supports quads or triples.  Unless otherwise specified the default graph is called \u2018DEFAULT\u2019.  When retrieving\nmultiple named graphs they are provided in a list of (name, graph_dictionary ) tuples.  When there are multiple objects\nfor a given subject and predicate, the predicate appears once and the objects appear in a list.</p>\n<p>Although mainly intended for use with RDF and JSON, RDFdict is actually neutral to either.  It does not attempt to\nmanage conversions from RDF to JSON, but if you use RDFlib URIRefs and Literals as the elements in your graphs, they\nwill be correctly converted by json.dumps.  See test/test_withrdflib.py for examples.</p>\n\n          </div>"}, "last_serial": 1405258, "releases": {"0.1.6": [{"comment_text": "", "digests": {"md5": "18403970917aa461abed5fad9c4b985d", "sha256": "8feb31e6511466c0dd79f24e8bf0087f1883f1644cd433596bcbf66aafe7964b"}, "downloads": -1, "filename": "RDFdict-0.1.6.tar.gz", "has_sig": false, "md5_digest": "18403970917aa461abed5fad9c4b985d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4527, "upload_time": "2014-06-18T11:14:49", "upload_time_iso_8601": "2014-06-18T11:14:49.305359Z", "url": "https://files.pythonhosted.org/packages/6f/cc/d3f40e00e52c77b6994e34e27fdcd9302400b3fd8019fa39865b2d5e4b29/RDFdict-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "18403970917aa461abed5fad9c4b985d", "sha256": "8feb31e6511466c0dd79f24e8bf0087f1883f1644cd433596bcbf66aafe7964b"}, "downloads": -1, "filename": "RDFdict-0.1.6.tar.gz", "has_sig": false, "md5_digest": "18403970917aa461abed5fad9c4b985d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4527, "upload_time": "2014-06-18T11:14:49", "upload_time_iso_8601": "2014-06-18T11:14:49.305359Z", "url": "https://files.pythonhosted.org/packages/6f/cc/d3f40e00e52c77b6994e34e27fdcd9302400b3fd8019fa39865b2d5e4b29/RDFdict-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:39 2020"}