{"info": {"author": "Alex Morega", "author_email": "public@grep.ro", "bugtrack_url": null, "classifiers": [], "description": "MagicFolder\n===========\n\nKeep a folder in sync on several hosts using a central server. Heavily\ninspired by DropBox.\n\nUsage\n-----\nInitialize a server repository::\n\n    ssh server.example.com\n    mkdir repo.mf; cd repo.mf\n    mf init -s\n\nInitialize a client repository::\n\n    mf init server.example.com:repo.mf\n\nSynchronize::\n\n    mf sync\n\nHow it works\n------------\nThe server keeps a list of incremental versions (file metadata) and a\nhashed blob store (file contents). Clients synchronize by uploading\nlocal changes, the server appends them to its version history, and sends\nback a list of changes made by other clients.\n\nSynchronization happens over SSH and is invoked manually. Don't think\nabout touching any file during a sync because you **will** lose your\ndata.\n\nUsually files will be smoothly added and removed by clients, but if\nthere is a conflict, MagicFolder will rename one of the versions. You\nshould best know to solve the conflict; when you're done, simply remove\nthe extra file.\n\nIssues and caveats\n------------------\nWhile MagicFolder is intended to back up data by replicating on several\nhosts, and the author uses it routinely, be warned it's alpha-quality.\nIn particular there is no provision for detecting changes to files\nduring synchronization or recovering from errors. The client-server\nchatter protocol is also in flux, so be sure to use the same version of\nMagicFolder on both client and server.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/alex-morega/MagicFolder", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "MagicFolder", "package_url": "https://pypi.org/project/MagicFolder/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/MagicFolder/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/alex-morega/MagicFolder"}, "release_url": "https://pypi.org/project/MagicFolder/0.2/", "requires_dist": null, "requires_python": null, "summary": "Synchronize local folder with a central repository", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Keep a folder in sync on several hosts using a central server. Heavily\ninspired by DropBox.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Initialize a server repository:</p>\n<pre>ssh server.example.com\nmkdir repo.mf; cd repo.mf\nmf init -s\n</pre>\n<p>Initialize a client repository:</p>\n<pre>mf init server.example.com:repo.mf\n</pre>\n<p>Synchronize:</p>\n<pre>mf sync\n</pre>\n</div>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>The server keeps a list of incremental versions (file metadata) and a\nhashed blob store (file contents). Clients synchronize by uploading\nlocal changes, the server appends them to its version history, and sends\nback a list of changes made by other clients.</p>\n<p>Synchronization happens over SSH and is invoked manually. Don\u2019t think\nabout touching any file during a sync because you <strong>will</strong> lose your\ndata.</p>\n<p>Usually files will be smoothly added and removed by clients, but if\nthere is a conflict, MagicFolder will rename one of the versions. You\nshould best know to solve the conflict; when you\u2019re done, simply remove\nthe extra file.</p>\n</div>\n<div id=\"issues-and-caveats\">\n<h2>Issues and caveats</h2>\n<p>While MagicFolder is intended to back up data by replicating on several\nhosts, and the author uses it routinely, be warned it\u2019s alpha-quality.\nIn particular there is no provision for detecting changes to files\nduring synchronization or recovering from errors. The client-server\nchatter protocol is also in flux, so be sure to use the same version of\nMagicFolder on both client and server.</p>\n</div>\n\n          </div>"}, "last_serial": 737284, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "9217a3b0ccd293664d21b5aa1d1fca25", "sha256": "1e064ae3f8c93eaa8ec80dad263a8916cea5f5ec3c1f36a5093103cf01bef2a9"}, "downloads": -1, "filename": "MagicFolder-0.2.tar.gz", "has_sig": false, "md5_digest": "9217a3b0ccd293664d21b5aa1d1fca25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12187, "upload_time": "2010-07-26T19:19:24", "upload_time_iso_8601": "2010-07-26T19:19:24.424490Z", "url": "https://files.pythonhosted.org/packages/a3/92/7376430346ed475667865a0c4f60a9320f8582db96cb9e1aee82cc726be6/MagicFolder-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9217a3b0ccd293664d21b5aa1d1fca25", "sha256": "1e064ae3f8c93eaa8ec80dad263a8916cea5f5ec3c1f36a5093103cf01bef2a9"}, "downloads": -1, "filename": "MagicFolder-0.2.tar.gz", "has_sig": false, "md5_digest": "9217a3b0ccd293664d21b5aa1d1fca25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12187, "upload_time": "2010-07-26T19:19:24", "upload_time_iso_8601": "2010-07-26T19:19:24.424490Z", "url": "https://files.pythonhosted.org/packages/a3/92/7376430346ed475667865a0c4f60a9320f8582db96cb9e1aee82cc726be6/MagicFolder-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:05 2020"}