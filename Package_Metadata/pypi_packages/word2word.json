{"info": {"author": "Kyubyong Park, Dongwoo Kim, Yo Joong Choe", "author_email": "kbpark.linguist@gmail.com, kimdwkimdw@gmail.com, yjchoe33@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "[![image](https://img.shields.io/pypi/v/word2word.svg)](https://pypi.org/project/word2word/)\n[![image](https://img.shields.io/pypi/l/word2word.svg)](https://pypi.org/project/word2word/)\n[![image](https://img.shields.io/pypi/pyversions/word2word.svg)](https://pypi.org/project/word2word/)\n[![image](https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg)](https://saythanks.io/to/kimdwkimdw)\n\n# word2word\n\nEasy-to-use word translations for 3,564 language pairs.\n\nThis is the official code accompanying [our LREC 2020 paper](https://arxiv.org/abs/1911.12019).\n\n## Summary\n\n* A large collection of freely & publicly available bilingual lexicons\n    **for 3,564 language pairs across 62 unique languages.** \n* Easy-to-use Python interface for accessing top-k word translations and \n    for building a new bilingual lexicon from a custom parallel corpus.\n* Constructed using a simple approach that yields bilingual lexicons with \n    high coverage and competitive translation quality.\n\n## Usage\n\nFirst, install the package using `pip`:\n```shell script\npip install word2word\n```\n\nOR\n\n```shell script\ngit clone https://github.com/kakaobrain/word2word\npython setup.py install\n```\n\nThen, in Python, download the model and retrieve top-5 word translations \nof any given word to the desired language:\n```python\nfrom word2word import Word2word\nen2fr = Word2word(\"en\", \"fr\")\nprint(en2fr(\"apple\"))\n# out: ['pomme', 'pommes', 'pommier', 'tartes', 'fleurs']\n```\n\n![gif](./word2word.gif)\n\n## Supported Languages\n\nWe provide top-k word-to-word translations across all available pairs \n    from [OpenSubtitles2018](http://opus.nlpl.eu/OpenSubtitles2018.php). \nThis amounts to a total of 3,564 language pairs across 62 unique languages. \n\nThe full list is provided [here](word2word/supporting_languages.txt).\n\n## Methodology\n\nOur approach computes top-k word translations based on \nthe co-occurrence statistics between cross-lingual word pairs in a parallel corpus.\nWe additionally introduce a correction term that controls for any confounding effect\ncoming from other source words within the same sentence.\nThe resulting method is an efficient and scalable approach that allows us to\nconstruct large bilingual dictionaries from any given parallel corpus. \n\nFor more details, see the Methodology section of [our paper](https://arxiv.org/abs/1911.12019).\n\n\n## Building a Bilingual Lexicon on a Custom Parallel Corpus\n\nThe `word2word` package also provides interface for \nbuilding a custom bilingual lexicon using a different parallel corpus.\nHere, we show an example of building one from \nthe [Medline English-French dataset](https://drive.google.com/drive/folders/0B3UxRWA52hBjQjZmYlRZWHQ4SUE): \n```python\nfrom word2word import Word2word\n\n# custom parallel data: data/pubmed.en-fr.en, data/pubmed.en-fr.fr\nmy_en2fr = Word2word.make(\"en\", \"fr\", \"data/pubmed.en-fr\")\n# ...building...\nprint(my_en2fr(\"mitochondrial\"))\n# out: ['mitochondriale', 'mitochondriales', 'mitochondrial', \n#       'cytopathies', 'mitochondriaux']\n```\n\nWhen built from source, the bilingual lexicon can also be constructed from the command line as follows:\n```shell script\npython make.py --lang1 en --lang2 fr --datapref data/pubmed.en-fr\n```\n\nIn both cases, the custom lexicon (saved to `datapref/` by default) can be re-loaded in Python:\n```python\nfrom word2word import Word2word\nmy_en2fr = Word2word.load(\"en\", \"fr\", \"data/pubmed.en-fr\")\n# Loaded word2word custom bilingual lexicon from data/pubmed.en-fr/en-fr.pkl\n```\n\n### Multiprocessing\n\nIn both the Python interface and the command line interface, \n`make` uses multiprocessing with 16 CPUs by default.\nThe number of CPU workers can be adjusted by setting \n`num_workers=N` (Python) or `--num_workers N` (command line).\n\n## References\n\nIf you use word2word for research, please cite [our paper](https://arxiv.org/abs/1911.12019):\n```bibtex\n@inproceedings{choe2020word2word,\n author = {Yo Joong Choe and Kyubyong Park and Dongwoo Kim},\n title = {word2word: A Collection of Bilingual Lexicons for 3,564 Language Pairs},\n booktitle = {Proceedings of the 12th International Conference on Language Resources and Evaluation (LREC 2020)},\n year = {2020}\n}\n```\n\nAll of our pre-computed bilingual lexicons were constructed from the publicly available\n    [OpenSubtitles2018](http://opus.nlpl.eu/OpenSubtitles2018.php) dataset:\n```bibtex\n@inproceedings{lison-etal-2018-opensubtitles2018,\n    title = \"{O}pen{S}ubtitles2018: Statistical Rescoring of Sentence Alignments in Large, Noisy Parallel Corpora\",\n    author = {Lison, Pierre  and\n      Tiedemann, J{\\\"o}rg  and\n      Kouylekov, Milen},\n    booktitle = \"Proceedings of the Eleventh International Conference on Language Resources and Evaluation ({LREC} 2018)\",\n    month = may,\n    year = \"2018\",\n    address = \"Miyazaki, Japan\",\n    publisher = \"European Language Resources Association (ELRA)\",\n    url = \"https://www.aclweb.org/anthology/L18-1275\",\n}\n```\n\n## Authors\n\n[Kyubyong Park](https://github.com/Kyubyong), \n[Dongwoo Kim](https://github.com/kimdwkimdw), and \n[YJ Choe](https://github.com/yjchoe)\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kakaobrain/word2word", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "word2word", "package_url": "https://pypi.org/project/word2word/", "platform": "", "project_url": "https://pypi.org/project/word2word/", "project_urls": {"Homepage": "https://github.com/kakaobrain/word2word"}, "release_url": "https://pypi.org/project/word2word/1.0.0/", "requires_dist": ["requests", "wget", "numpy", "tqdm"], "requires_python": ">=3.6", "summary": "Easy-to-use word translations for 3,564 language pairs", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/word2word/\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f33696e1629fd9bac065a33fef33b428c03f0794/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f776f726432776f72642e737667\"></a>\n<a href=\"https://pypi.org/project/word2word/\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d1fcc2841c564c04d72b3ac0bc67ed9133e46f55/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f776f726432776f72642e737667\"></a>\n<a href=\"https://pypi.org/project/word2word/\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a34927b595090a11717d5fe87d4b4df4b26376e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f776f726432776f72642e737667\"></a>\n<a href=\"https://saythanks.io/to/kimdwkimdw\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51b7f145f134a99621f186ddcdb0af646a24c8aa/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5361792532305468616e6b732d212d3145414544422e737667\"></a></p>\n<h1>word2word</h1>\n<p>Easy-to-use word translations for 3,564 language pairs.</p>\n<p>This is the official code accompanying <a href=\"https://arxiv.org/abs/1911.12019\" rel=\"nofollow\">our LREC 2020 paper</a>.</p>\n<h2>Summary</h2>\n<ul>\n<li>A large collection of freely &amp; publicly available bilingual lexicons\n<strong>for 3,564 language pairs across 62 unique languages.</strong></li>\n<li>Easy-to-use Python interface for accessing top-k word translations and\nfor building a new bilingual lexicon from a custom parallel corpus.</li>\n<li>Constructed using a simple approach that yields bilingual lexicons with\nhigh coverage and competitive translation quality.</li>\n</ul>\n<h2>Usage</h2>\n<p>First, install the package using <code>pip</code>:</p>\n<pre>pip install word2word\n</pre>\n<p>OR</p>\n<pre>git clone https://github.com/kakaobrain/word2word\npython setup.py install\n</pre>\n<p>Then, in Python, download the model and retrieve top-5 word translations\nof any given word to the desired language:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">word2word</span> <span class=\"kn\">import</span> <span class=\"n\">Word2word</span>\n<span class=\"n\">en2fr</span> <span class=\"o\">=</span> <span class=\"n\">Word2word</span><span class=\"p\">(</span><span class=\"s2\">\"en\"</span><span class=\"p\">,</span> <span class=\"s2\">\"fr\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">en2fr</span><span class=\"p\">(</span><span class=\"s2\">\"apple\"</span><span class=\"p\">))</span>\n<span class=\"c1\"># out: ['pomme', 'pommes', 'pommier', 'tartes', 'fleurs']</span>\n</pre>\n<p><img alt=\"gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8d5f0cf5c5d3c2bcd5965e20ca9c32aa78b01e6/2e2f776f726432776f72642e676966\"></p>\n<h2>Supported Languages</h2>\n<p>We provide top-k word-to-word translations across all available pairs\nfrom <a href=\"http://opus.nlpl.eu/OpenSubtitles2018.php\" rel=\"nofollow\">OpenSubtitles2018</a>.\nThis amounts to a total of 3,564 language pairs across 62 unique languages.</p>\n<p>The full list is provided <a href=\"word2word/supporting_languages.txt\" rel=\"nofollow\">here</a>.</p>\n<h2>Methodology</h2>\n<p>Our approach computes top-k word translations based on\nthe co-occurrence statistics between cross-lingual word pairs in a parallel corpus.\nWe additionally introduce a correction term that controls for any confounding effect\ncoming from other source words within the same sentence.\nThe resulting method is an efficient and scalable approach that allows us to\nconstruct large bilingual dictionaries from any given parallel corpus.</p>\n<p>For more details, see the Methodology section of <a href=\"https://arxiv.org/abs/1911.12019\" rel=\"nofollow\">our paper</a>.</p>\n<h2>Building a Bilingual Lexicon on a Custom Parallel Corpus</h2>\n<p>The <code>word2word</code> package also provides interface for\nbuilding a custom bilingual lexicon using a different parallel corpus.\nHere, we show an example of building one from\nthe <a href=\"https://drive.google.com/drive/folders/0B3UxRWA52hBjQjZmYlRZWHQ4SUE\" rel=\"nofollow\">Medline English-French dataset</a>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">word2word</span> <span class=\"kn\">import</span> <span class=\"n\">Word2word</span>\n\n<span class=\"c1\"># custom parallel data: data/pubmed.en-fr.en, data/pubmed.en-fr.fr</span>\n<span class=\"n\">my_en2fr</span> <span class=\"o\">=</span> <span class=\"n\">Word2word</span><span class=\"o\">.</span><span class=\"n\">make</span><span class=\"p\">(</span><span class=\"s2\">\"en\"</span><span class=\"p\">,</span> <span class=\"s2\">\"fr\"</span><span class=\"p\">,</span> <span class=\"s2\">\"data/pubmed.en-fr\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># ...building...</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_en2fr</span><span class=\"p\">(</span><span class=\"s2\">\"mitochondrial\"</span><span class=\"p\">))</span>\n<span class=\"c1\"># out: ['mitochondriale', 'mitochondriales', 'mitochondrial', </span>\n<span class=\"c1\">#       'cytopathies', 'mitochondriaux']</span>\n</pre>\n<p>When built from source, the bilingual lexicon can also be constructed from the command line as follows:</p>\n<pre>python make.py --lang1 en --lang2 fr --datapref data/pubmed.en-fr\n</pre>\n<p>In both cases, the custom lexicon (saved to <code>datapref/</code> by default) can be re-loaded in Python:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">word2word</span> <span class=\"kn\">import</span> <span class=\"n\">Word2word</span>\n<span class=\"n\">my_en2fr</span> <span class=\"o\">=</span> <span class=\"n\">Word2word</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"en\"</span><span class=\"p\">,</span> <span class=\"s2\">\"fr\"</span><span class=\"p\">,</span> <span class=\"s2\">\"data/pubmed.en-fr\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Loaded word2word custom bilingual lexicon from data/pubmed.en-fr/en-fr.pkl</span>\n</pre>\n<h3>Multiprocessing</h3>\n<p>In both the Python interface and the command line interface,\n<code>make</code> uses multiprocessing with 16 CPUs by default.\nThe number of CPU workers can be adjusted by setting\n<code>num_workers=N</code> (Python) or <code>--num_workers N</code> (command line).</p>\n<h2>References</h2>\n<p>If you use word2word for research, please cite <a href=\"https://arxiv.org/abs/1911.12019\" rel=\"nofollow\">our paper</a>:</p>\n<pre><span class=\"nc\">@inproceedings</span><span class=\"p\">{</span><span class=\"nl\">choe2020word2word</span><span class=\"p\">,</span>\n <span class=\"na\">author</span> <span class=\"p\">=</span> <span class=\"s\">{Yo Joong Choe and Kyubyong Park and Dongwoo Kim}</span><span class=\"p\">,</span>\n <span class=\"na\">title</span> <span class=\"p\">=</span> <span class=\"s\">{word2word: A Collection of Bilingual Lexicons for 3,564 Language Pairs}</span><span class=\"p\">,</span>\n <span class=\"na\">booktitle</span> <span class=\"p\">=</span> <span class=\"s\">{Proceedings of the 12th International Conference on Language Resources and Evaluation (LREC 2020)}</span><span class=\"p\">,</span>\n <span class=\"na\">year</span> <span class=\"p\">=</span> <span class=\"s\">{2020}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>All of our pre-computed bilingual lexicons were constructed from the publicly available\n<a href=\"http://opus.nlpl.eu/OpenSubtitles2018.php\" rel=\"nofollow\">OpenSubtitles2018</a> dataset:</p>\n<pre><span class=\"nc\">@inproceedings</span><span class=\"p\">{</span><span class=\"nl\">lison-etal-2018-opensubtitles2018</span><span class=\"p\">,</span>\n    <span class=\"na\">title</span> <span class=\"p\">=</span> <span class=\"s\">\"{O}pen{S}ubtitles2018: Statistical Rescoring of Sentence Alignments in Large, Noisy Parallel Corpora\"</span><span class=\"p\">,</span>\n    <span class=\"na\">author</span> <span class=\"p\">=</span> <span class=\"s\">{Lison, Pierre  and</span>\n<span class=\"s\">      Tiedemann, J{\\\"o}rg  and</span>\n<span class=\"s\">      Kouylekov, Milen}</span><span class=\"p\">,</span>\n    <span class=\"na\">booktitle</span> <span class=\"p\">=</span> <span class=\"s\">\"Proceedings of the Eleventh International Conference on Language Resources and Evaluation ({LREC} 2018)\"</span><span class=\"p\">,</span>\n    <span class=\"na\">month</span> <span class=\"p\">=</span> <span class=\"nv\">may</span><span class=\"p\">,</span>\n    <span class=\"na\">year</span> <span class=\"p\">=</span> <span class=\"s\">\"2018\"</span><span class=\"p\">,</span>\n    <span class=\"na\">address</span> <span class=\"p\">=</span> <span class=\"s\">\"Miyazaki, Japan\"</span><span class=\"p\">,</span>\n    <span class=\"na\">publisher</span> <span class=\"p\">=</span> <span class=\"s\">\"European Language Resources Association (ELRA)\"</span><span class=\"p\">,</span>\n    <span class=\"na\">url</span> <span class=\"p\">=</span> <span class=\"s\">\"https://www.aclweb.org/anthology/L18-1275\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Authors</h2>\n<p><a href=\"https://github.com/Kyubyong\" rel=\"nofollow\">Kyubyong Park</a>,\n<a href=\"https://github.com/kimdwkimdw\" rel=\"nofollow\">Dongwoo Kim</a>, and\n<a href=\"https://github.com/yjchoe\" rel=\"nofollow\">YJ Choe</a></p>\n\n          </div>"}, "last_serial": 6820422, "releases": {"0.1.6": [{"comment_text": "", "digests": {"md5": "94ed33e6ad94684f8044d64918b81de8", "sha256": "d8cfe449d713010a3428c37bc2322fbc01b656b6223e65956a752518f27414c4"}, "downloads": -1, "filename": "word2word-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "94ed33e6ad94684f8044d64918b81de8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17770, "upload_time": "2019-04-08T07:34:18", "upload_time_iso_8601": "2019-04-08T07:34:18.091694Z", "url": "https://files.pythonhosted.org/packages/2f/51/0f28402ff8b92be33fd5d9d0a83f1d608b9298d6802bacabd3da283deac7/word2word-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b39f34a1c4656f04ebe49706ebb6cb5", "sha256": "1e7b8b6076f8108c5b399215f6b16594645eb86b7e4f97cf60c8726767f611be"}, "downloads": -1, "filename": "word2word-0.1.6.tar.gz", "has_sig": false, "md5_digest": "2b39f34a1c4656f04ebe49706ebb6cb5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15965, "upload_time": "2019-04-08T07:34:19", "upload_time_iso_8601": "2019-04-08T07:34:19.644041Z", "url": "https://files.pythonhosted.org/packages/3d/57/0b228993a23958778b98ae51a0a8f089c62396e068186747545a0db1280f/word2word-0.1.6.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2416f75979bd0fd33c71339368510925", "sha256": "39bae5315d730f0ea6da6738cee7038757b3e24b6f3a01acbaf227c2a225a32f"}, "downloads": -1, "filename": "word2word-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2416f75979bd0fd33c71339368510925", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 31982, "upload_time": "2019-12-12T09:14:49", "upload_time_iso_8601": "2019-12-12T09:14:49.603553Z", "url": "https://files.pythonhosted.org/packages/ea/ed/778cd3e90c265fbc6e592985ca31467f288774cd788858ba67e5d535e9a1/word2word-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f6aac49b04c2574d31228dd3f657059", "sha256": "3aeca9beaac2b46877589df0e66e875b6f057fab1409cbd06ae8af327d2115ed"}, "downloads": -1, "filename": "word2word-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1f6aac49b04c2574d31228dd3f657059", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21636, "upload_time": "2019-12-12T09:14:51", "upload_time_iso_8601": "2019-12-12T09:14:51.119240Z", "url": "https://files.pythonhosted.org/packages/85/d9/0cc220421fd7d9278510e6d2ee288195a403cdbd60ca345d946119181cf9/word2word-0.2.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "f281ed373f747d18d1c5bafe69f0999a", "sha256": "da90491ada0250b4350ed78baa37f44ea6d1b063ed559b594aafef8e5ef0862e"}, "downloads": -1, "filename": "word2word-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f281ed373f747d18d1c5bafe69f0999a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 31967, "upload_time": "2020-03-16T10:21:30", "upload_time_iso_8601": "2020-03-16T10:21:30.431040Z", "url": "https://files.pythonhosted.org/packages/0b/27/f6e5252e44fbf10678189aa7c03dfaec44942d2cd593cb957263862a650a/word2word-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e2379056df7790c4e117e8e92a9347a", "sha256": "f29ef3e2ae80432250cdea50105e46ed19b9c307f2ec7c264d72da79e526c05f"}, "downloads": -1, "filename": "word2word-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1e2379056df7790c4e117e8e92a9347a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21594, "upload_time": "2020-03-16T10:21:31", "upload_time_iso_8601": "2020-03-16T10:21:31.935599Z", "url": "https://files.pythonhosted.org/packages/1b/c8/6aa4d029236e5e021552ccaa6a01daadaf3d9a4b5b8f9babfb73db589134/word2word-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f281ed373f747d18d1c5bafe69f0999a", "sha256": "da90491ada0250b4350ed78baa37f44ea6d1b063ed559b594aafef8e5ef0862e"}, "downloads": -1, "filename": "word2word-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f281ed373f747d18d1c5bafe69f0999a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 31967, "upload_time": "2020-03-16T10:21:30", "upload_time_iso_8601": "2020-03-16T10:21:30.431040Z", "url": "https://files.pythonhosted.org/packages/0b/27/f6e5252e44fbf10678189aa7c03dfaec44942d2cd593cb957263862a650a/word2word-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e2379056df7790c4e117e8e92a9347a", "sha256": "f29ef3e2ae80432250cdea50105e46ed19b9c307f2ec7c264d72da79e526c05f"}, "downloads": -1, "filename": "word2word-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1e2379056df7790c4e117e8e92a9347a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21594, "upload_time": "2020-03-16T10:21:31", "upload_time_iso_8601": "2020-03-16T10:21:31.935599Z", "url": "https://files.pythonhosted.org/packages/1b/c8/6aa4d029236e5e021552ccaa6a01daadaf3d9a4b5b8f9babfb73db589134/word2word-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:06 2020"}