{"info": {"author": "Daniel Mesejo-Leon", "author_email": "mesejoleon@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering"], "description": "<p align=\"center\">\n<a href=\"https://github.com/mesejo/trex\"><img src=\"https://raw.githubusercontent.com/mesejo/trex/images/trex_logo.png\" width=\"150\" height=\"150\"/></a>\n</p>\n\n\n# Efficient keyword extraction with regex\n\nThis package contains a function for efficiently representing a set of keywords as regex. This regex can be used to replace keywords in sentences or extract keywords \nfrom sentences\n\n[![Build Status](https://travis-ci.com/mesejo/trex.svg?branch=master)](https://travis-ci.com/mesejo/trex) \n[![codecov](https://codecov.io/gh/mesejo/trex/branch/master/graph/badge.svg)](https://codecov.io/gh/mesejo/trex)\n\n## Why use tregex?\n\n- Pure Python, no other dependencies\n- trex is fast, about 300 times faster than a regex union, and about 2.5 times faster than FlashText\n- Plays well with others, can be integrated easily with pandas\n\n## Install trex\n\nUse pip,\n\n```bash\npip install tregex\n```\n\n## Usage\n\n```python\nimport tregex as tx\n\npattern = tx.compile(['baby', 'bat', 'bad'])\nhits = pattern.findall('The baby was scared by the bad bat.')\n# hits = ['baby', 'bat', 'bad']\n```\n\n## Why the name?\n\nNaming is difficult, but as we had to call it something:\n\n* trex: **t**rie to **re**ge**x**\n* trex: [Tyrannosaurus rex](https://en.wikipedia.org/wiki/Tyrannosaurus), a large dinosaur species with small arms  (rex meaning \"king\" in Latin)\n\n## Acknowledgments\n\nThis project is based on the following resources:\n\n- [Speed up regex](https://stackoverflow.com/questions/42742810/speed-up-millions-of-regex-replacements-in-python-3)\n- [Triegex](https://github.com/ZhukovAlexander/triegex) \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mesejo/trex", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tregex", "package_url": "https://pypi.org/project/tregex/", "platform": "", "project_url": "https://pypi.org/project/tregex/", "project_urls": {"Homepage": "https://github.com/mesejo/trex"}, "release_url": "https://pypi.org/project/tregex/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Transform trie to regular expression", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n<a href=\"https://github.com/mesejo/trex\" rel=\"nofollow\"><img height=\"150\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bba341422cdedb6a1324c96aa586bbed82a9e7a5/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d6573656a6f2f747265782f696d616765732f747265785f6c6f676f2e706e67\" width=\"150\"></a>\n</p>\n<h1>Efficient keyword extraction with regex</h1>\n<p>This package contains a function for efficiently representing a set of keywords as regex. This regex can be used to replace keywords in sentences or extract keywords\nfrom sentences</p>\n<p><a href=\"https://travis-ci.com/mesejo/trex\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d6f1a832708bb6dc1ffa8636e4fe3e9c5da0958/68747470733a2f2f7472617669732d63692e636f6d2f6d6573656a6f2f747265782e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/mesejo/trex\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/940ab96c7f385c3a94bf78d9a5758cdd73af4de5/68747470733a2f2f636f6465636f762e696f2f67682f6d6573656a6f2f747265782f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<h2>Why use tregex?</h2>\n<ul>\n<li>Pure Python, no other dependencies</li>\n<li>trex is fast, about 300 times faster than a regex union, and about 2.5 times faster than FlashText</li>\n<li>Plays well with others, can be integrated easily with pandas</li>\n</ul>\n<h2>Install trex</h2>\n<p>Use pip,</p>\n<pre>pip install tregex\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tregex</span> <span class=\"k\">as</span> <span class=\"nn\">tx</span>\n\n<span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">([</span><span class=\"s1\">'baby'</span><span class=\"p\">,</span> <span class=\"s1\">'bat'</span><span class=\"p\">,</span> <span class=\"s1\">'bad'</span><span class=\"p\">])</span>\n<span class=\"n\">hits</span> <span class=\"o\">=</span> <span class=\"n\">pattern</span><span class=\"o\">.</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"s1\">'The baby was scared by the bad bat.'</span><span class=\"p\">)</span>\n<span class=\"c1\"># hits = ['baby', 'bat', 'bad']</span>\n</pre>\n<h2>Why the name?</h2>\n<p>Naming is difficult, but as we had to call it something:</p>\n<ul>\n<li>trex: <strong>t</strong>rie to <strong>re</strong>ge<strong>x</strong></li>\n<li>trex: <a href=\"https://en.wikipedia.org/wiki/Tyrannosaurus\" rel=\"nofollow\">Tyrannosaurus rex</a>, a large dinosaur species with small arms  (rex meaning \"king\" in Latin)</li>\n</ul>\n<h2>Acknowledgments</h2>\n<p>This project is based on the following resources:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/42742810/speed-up-millions-of-regex-replacements-in-python-3\" rel=\"nofollow\">Speed up regex</a></li>\n<li><a href=\"https://github.com/ZhukovAlexander/triegex\" rel=\"nofollow\">Triegex</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7104537, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c21d3d8d97b0e1ac6c7a0dfcd992c415", "sha256": "dd8aecc227c5c79b0995df89ac15cda75eb26d983d2412e2d68da45390889041"}, "downloads": -1, "filename": "tregex-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c21d3d8d97b0e1ac6c7a0dfcd992c415", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5191, "upload_time": "2020-04-26T11:43:06", "upload_time_iso_8601": "2020-04-26T11:43:06.019774Z", "url": "https://files.pythonhosted.org/packages/e0/e7/ea37ca16f3a995823e392662fb515d551e8330b3c26155640b24291dd732/tregex-0.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c21d3d8d97b0e1ac6c7a0dfcd992c415", "sha256": "dd8aecc227c5c79b0995df89ac15cda75eb26d983d2412e2d68da45390889041"}, "downloads": -1, "filename": "tregex-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c21d3d8d97b0e1ac6c7a0dfcd992c415", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5191, "upload_time": "2020-04-26T11:43:06", "upload_time_iso_8601": "2020-04-26T11:43:06.019774Z", "url": "https://files.pythonhosted.org/packages/e0/e7/ea37ca16f3a995823e392662fb515d551e8330b3c26155640b24291dd732/tregex-0.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:47:31 2020"}