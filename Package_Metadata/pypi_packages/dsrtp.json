{"info": {"author": "Mayfield Robotics", "author_email": "dev+dsrtp@mayfieldrobotics.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=====\ndsrtp\n=====\n\n.. image:: https://travis-ci.org/mayfieldrobotics/dsrtp.svg\n   :target: https://travis-ci.org/mayfieldrobotics/dsrtp\n    \n.. image:: https://img.shields.io/pypi/v/dsrtp.svg\n   :target: https://pypi.python.org/pypi/dsrtp\n\nSimple front-end for decrypting captured `SRTP and SRTCP <https://www.ietf.org/rfc/rfc3711.txt>`_ packets using:\n\n- `libsrtp <https://github.com/cisco/libsrtp>`_ and \n- `dpkt <https://github.com/kbandla/dpkt>`_\n\ninstall\n-------\n\nInstall devel `libpcap <https://github.com/the-tcpdump-group/libpcap>`_ and `libsrtp <https://github.com/cisco/libsrtp>`_ if you need to, e.g.:\n\n.. code:: bash\n\n   sudo apt-get install libpcap-dev libsrtp0-dev\n   \nand then:\n\n.. code:: bash\n\n   pip install dsrtp\n\nusage\n-----\n\ncommand\n~~~~~~~\n\nTo e.g. decrypt captured packets and write then back to a capture file:\n\n.. code:: bash\n\n   dsrtp test/fixtures/av.pcap /tmp/rtp.pcap -ld -k test/fixtures/av_material.hex\n\nIf you have a cluttered capture (e.g. multiple SRTP streams) then you can\nselect e.g. the in-bound stream by ``address:port`` like:\n\n.. code:: bash\n\n   dsrtp test/fixtures/av.pcap /tmp/rtp.pcap -k test/fixtures/av_material.hex -l d -i 192.168.121.234:60401\n\nlib\n~~~\n\nTo do the same in code:\n\n.. code:: python\n\n   import dsrtp\n   \n   enc_km = open('test/fixtures/av_material.hex').read()\n   km = dsrtp.KeyingMaterial.unpack_hex(enc_km)\n   p = dsrtp.SRTPPolicy(ssrc_type=dsrtp.SRTPPolicy.SSRC_ANY_INBOUND, key=km.local)\n   \n   with dsrtp.SRTP(p) as ctx, \\\n           open('test/fixtures/av.pcap', 'rb') as srtp_pcap, \\\n           open('/tmp/rtp.pcap', 'wb') as rtp_pcap:\n     pkts = dsrtp.read_packets(srtp_pcap)\n     decrypted_pkts = dsrtp.decrypt_packets(ctx, pkts)\n     dsrtp.write_packets(rtp_pcap, decrypted_pkts)\n\ndev\n---\n\nCreate a `venv <https://virtualenv.pypa.io/en/latest/>`_:\n\n.. code:: bash\n\n   mkvirtualenv dsrtp\n   pip install Cython\n\nthen get it:\n\n.. code:: bash\n\n   git clone git@github.com:mayfieldrobotics/dsrtp.git\n   cd dsrtp\n   workon dsrtp\n   pip install -e .[test]\n\nand test it:\n\n.. code:: bash\n\n   py.test test/ --cov dsrtp --cov-report term-missing --pep8\n\nrelease\n-------\n\nTests pass:\n\n.. code:: bash\n\n   py.test test/ --cov dsrtp --cov-report term-missing --pep8\n\nso update ``__version__`` in:\n\n- ``dsrtp/__init__.py``\n\ncommit and tag it:\n\n.. code:: bash\n\n   git commit -am \"release v{version}\"\n   git tag -a v{version} -m \"release v{version}\"\n   git push --tags\n\nand `travis <https://travis-ci.org/mayfieldrobotics/dsrtp>`_ will publish it to `pypi <https://pypi.python.org/pypi/dsrtp/>`_.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mayfieldrobotics/dsrtp/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dsrtp", "package_url": "https://pypi.org/project/dsrtp/", "platform": "any", "project_url": "https://pypi.org/project/dsrtp/", "project_urls": {"Homepage": "https://github.com/mayfieldrobotics/dsrtp/"}, "release_url": "https://pypi.org/project/dsrtp/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Frontend for decrypting captured SRTP packets.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/mayfieldrobotics/dsrtp\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/mayfieldrobotics/dsrtp.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd23c723f62ba742fe24ac691b89578e7058e075/68747470733a2f2f7472617669732d63692e6f72672f6d61796669656c64726f626f746963732f64737274702e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/dsrtp\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/dsrtp.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/74f3e7eabd5e6a15f4074fc518601a4a3f0ef7bb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f64737274702e737667\"></a>\n<p>Simple front-end for decrypting captured <a href=\"https://www.ietf.org/rfc/rfc3711.txt\" rel=\"nofollow\">SRTP and SRTCP</a> packets using:</p>\n<ul>\n<li><a href=\"https://github.com/cisco/libsrtp\" rel=\"nofollow\">libsrtp</a> and</li>\n<li><a href=\"https://github.com/kbandla/dpkt\" rel=\"nofollow\">dpkt</a></li>\n</ul>\n<div id=\"install\">\n<h2>install</h2>\n<p>Install devel <a href=\"https://github.com/the-tcpdump-group/libpcap\" rel=\"nofollow\">libpcap</a> and <a href=\"https://github.com/cisco/libsrtp\" rel=\"nofollow\">libsrtp</a> if you need to, e.g.:</p>\n<pre>sudo apt-get install libpcap-dev libsrtp0-dev\n</pre>\n<p>and then:</p>\n<pre>pip install dsrtp\n</pre>\n</div>\n<div id=\"usage\">\n<h2>usage</h2>\n<div id=\"command\">\n<h3>command</h3>\n<p>To e.g. decrypt captured packets and write then back to a capture file:</p>\n<pre>dsrtp test/fixtures/av.pcap /tmp/rtp.pcap -ld -k test/fixtures/av_material.hex\n</pre>\n<p>If you have a cluttered capture (e.g. multiple SRTP streams) then you can\nselect e.g. the in-bound stream by <tt>address:port</tt> like:</p>\n<pre>dsrtp test/fixtures/av.pcap /tmp/rtp.pcap -k test/fixtures/av_material.hex -l d -i <span class=\"m\">192</span>.168.121.234:60401\n</pre>\n</div>\n<div id=\"lib\">\n<h3>lib</h3>\n<p>To do the same in code:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">dsrtp</span>\n\n<span class=\"n\">enc_km</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'test/fixtures/av_material.hex'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"n\">km</span> <span class=\"o\">=</span> <span class=\"n\">dsrtp</span><span class=\"o\">.</span><span class=\"n\">KeyingMaterial</span><span class=\"o\">.</span><span class=\"n\">unpack_hex</span><span class=\"p\">(</span><span class=\"n\">enc_km</span><span class=\"p\">)</span>\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">dsrtp</span><span class=\"o\">.</span><span class=\"n\">SRTPPolicy</span><span class=\"p\">(</span><span class=\"n\">ssrc_type</span><span class=\"o\">=</span><span class=\"n\">dsrtp</span><span class=\"o\">.</span><span class=\"n\">SRTPPolicy</span><span class=\"o\">.</span><span class=\"n\">SSRC_ANY_INBOUND</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">km</span><span class=\"o\">.</span><span class=\"n\">local</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">dsrtp</span><span class=\"o\">.</span><span class=\"n\">SRTP</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">ctx</span><span class=\"p\">,</span> \\\n        <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'test/fixtures/av.pcap'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">srtp_pcap</span><span class=\"p\">,</span> \\\n        <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/rtp.pcap'</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">rtp_pcap</span><span class=\"p\">:</span>\n  <span class=\"n\">pkts</span> <span class=\"o\">=</span> <span class=\"n\">dsrtp</span><span class=\"o\">.</span><span class=\"n\">read_packets</span><span class=\"p\">(</span><span class=\"n\">srtp_pcap</span><span class=\"p\">)</span>\n  <span class=\"n\">decrypted_pkts</span> <span class=\"o\">=</span> <span class=\"n\">dsrtp</span><span class=\"o\">.</span><span class=\"n\">decrypt_packets</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"n\">pkts</span><span class=\"p\">)</span>\n  <span class=\"n\">dsrtp</span><span class=\"o\">.</span><span class=\"n\">write_packets</span><span class=\"p\">(</span><span class=\"n\">rtp_pcap</span><span class=\"p\">,</span> <span class=\"n\">decrypted_pkts</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"dev\">\n<h2>dev</h2>\n<p>Create a <a href=\"https://virtualenv.pypa.io/en/latest/\" rel=\"nofollow\">venv</a>:</p>\n<pre>mkvirtualenv dsrtp\npip install Cython\n</pre>\n<p>then get it:</p>\n<pre>git clone git@github.com:mayfieldrobotics/dsrtp.git\n<span class=\"nb\">cd</span> dsrtp\nworkon dsrtp\npip install -e .<span class=\"o\">[</span>test<span class=\"o\">]</span>\n</pre>\n<p>and test it:</p>\n<pre>py.test test/ --cov dsrtp --cov-report term-missing --pep8\n</pre>\n</div>\n<div id=\"release\">\n<h2>release</h2>\n<p>Tests pass:</p>\n<pre>py.test test/ --cov dsrtp --cov-report term-missing --pep8\n</pre>\n<p>so update <tt>__version__</tt> in:</p>\n<ul>\n<li><tt>dsrtp/__init__.py</tt></li>\n</ul>\n<p>commit and tag it:</p>\n<pre>git commit -am <span class=\"s2\">\"release v{version}\"</span>\ngit tag -a v<span class=\"o\">{</span>version<span class=\"o\">}</span> -m <span class=\"s2\">\"release v{version}\"</span>\ngit push --tags\n</pre>\n<p>and <a href=\"https://travis-ci.org/mayfieldrobotics/dsrtp\" rel=\"nofollow\">travis</a> will publish it to <a href=\"https://pypi.python.org/pypi/dsrtp/\" rel=\"nofollow\">pypi</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 1728703, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8e8cf13c0616ad53eabbdf2e2480ce59", "sha256": "bde400cb92cc3a093deb6b762b577810aa1d2036e8da99078b5ddeebc17987c3"}, "downloads": -1, "filename": "dsrtp-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8e8cf13c0616ad53eabbdf2e2480ce59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42902, "upload_time": "2015-09-18T02:07:10", "upload_time_iso_8601": "2015-09-18T02:07:10.389890Z", "url": "https://files.pythonhosted.org/packages/33/57/62b1615d2a35ed34fb9d25ecfd27a39b6a0d7ca3ff4911a9ae632a838c82/dsrtp-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "499339c510cf3299953911bc7ac8c862", "sha256": "d176fff8db75d66ccf7fef2f866469c1ec6909c3d8d1f622cfdd8e93cdde89f6"}, "downloads": -1, "filename": "dsrtp-0.1.1.tar.gz", "has_sig": false, "md5_digest": "499339c510cf3299953911bc7ac8c862", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42434, "upload_time": "2015-09-18T02:17:39", "upload_time_iso_8601": "2015-09-18T02:17:39.716978Z", "url": "https://files.pythonhosted.org/packages/f9/22/c3b71faed6a6ff2304587e68de86f71c8614cdd4d518a969e4202e832d6d/dsrtp-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "149828b27632229754d3420425fb58f3", "sha256": "c42ee62e73b4ad7319fb2f3845fd52e44bd46e284f1cde92a869d6376293c007"}, "downloads": -1, "filename": "dsrtp-0.2.0.tar.gz", "has_sig": false, "md5_digest": "149828b27632229754d3420425fb58f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66607, "upload_time": "2015-09-18T20:53:19", "upload_time_iso_8601": "2015-09-18T20:53:19.746645Z", "url": "https://files.pythonhosted.org/packages/c3/a4/53cf10bd04eafe6beb9330532c2f3ee8c5bac2dff15a724e750d5118b9eb/dsrtp-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "149828b27632229754d3420425fb58f3", "sha256": "c42ee62e73b4ad7319fb2f3845fd52e44bd46e284f1cde92a869d6376293c007"}, "downloads": -1, "filename": "dsrtp-0.2.0.tar.gz", "has_sig": false, "md5_digest": "149828b27632229754d3420425fb58f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66607, "upload_time": "2015-09-18T20:53:19", "upload_time_iso_8601": "2015-09-18T20:53:19.746645Z", "url": "https://files.pythonhosted.org/packages/c3/a4/53cf10bd04eafe6beb9330532c2f3ee8c5bac2dff15a724e750d5118b9eb/dsrtp-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:18 2020"}