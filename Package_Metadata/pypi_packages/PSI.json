{"info": {"author": "Chris Miles, Floris Bruynooghe, Erick Tryzelaar", "author_email": "psi-discuss@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: AIX", "Operating System :: POSIX :: Linux", "Operating System :: POSIX :: SunOS/Solaris", "Programming Language :: C", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Operating System Kernels", "Topic :: System :: Systems Administration"], "description": "-------------------------\nPython System Information\n-------------------------\n\n``psi`` is a Python module providing direct access to real-time system\nand process information.  It is made of of several sub-modules.\n\nThe ``arch`` module gives some information about the system such as\nthe sytem name and version, the machine architecture etc.  It has a\nclass representing each system and a factory function that will return\nan instance of the class which ``psi`` is running on currently.\n\nThe experimental ``mount`` module gives information about the various\nmounted filesystems on the system.  It has a class representing local\nor remote filesystems.\n\nThe ``process`` module provides an interface to information about\nprocesses currently running on the system.  Each process is\nrepresented as an instance of the ``Process`` class and additionally\nthere is a ``ProcessTable`` class which is a dictionary of all running\nprocesses.  To know exactly what attributes are available and what\nthey mean you should look at the docstrings and examples in the\n``REAME`` file and ``examples/`` directory, but important to note is\nthat all the information is collected at instatiation time.  So the\ncontents of ``ProcessTable`` and ``Process`` instances are really\nsnapshots and will still contain all information even after the actual\nprocess has gone.\n\nLastly there are some general functions available directly under the\n``psi`` namespace such as ``loadavg()``, ``getzoneid()`` etc.  Once\nmore see the docstrings for detailed information.\n\nSome information may not be available on all platforms, rather then\ntrying to emulate this information these parts of the API just don't\nexists on those platforms.  Examples of these are:\n``psi.process.Process.pcpu`` which is not available on Linux,\n``psi.getzoneid()`` which is only available on SunOS 10 and above etc.\nIf not all information can be found some attribute descriptors of\nobjects might return subclasses of AttributeError, allowing you to use\ngeneric ``getattr()`` semantics as well as more specifically detect why\nan attribute is not available (insufficient privileges, not\nimplemented, ...).\n\n\nSupported Platforms\n===================\n\nPython: 2.2 and above, including 3.x.\n\nLinux: all 2.4 and 2.6 kernels.\n\nSunOS: Solaris 8 and above, including OpenSolaris (SunOS 11).\n\nAIX: 5.2 and 5.3\n\nDarwin: 10.3 and above.\n\n\nDocumentation\n=============\n\nCare is taken to provide complete and accurate docstrings, so use\nPython's ``pydoc`` tool and the interactive prompt should get you on\nyour way.\n\nWe also have a wiki (http://bitbucket.org/chrismiles/psi/wiki/Home)\nand a mailing list (http://groups.google.com/group/psi-discuss\npsi-discuss@googlegroups.com).  Don't hesitate to ask questions or\ngive feedback.\n\n\nBugs\n====\n\nPlease use our issue tracker:\nhttp://bitbucket.org/chrismiles/psi/issues\n\n\nExtra setup.py features\n=======================\n\nNew ``build_ext`` option: ``--devel``.  This uses ``-Werror`` and\nenables many more warnings as well as disables optimisation.\n\nUsing ``--undef PYMALLOC`` or ``-U PYMALLOC`` to ``build_ext`` will\nuse libc's memory heap for allocation instead of Python's.\n\n\nThe ``test`` command will run the testsuite.  Some tests will only be\nrun when running the test suite as root.  Currently these are the\ntests that try to run a simple test application under specific\nschedulers and priorities to assert psi detects these process\nattributes correctly.\n\n\nThe ``valgrind`` command does run the testsuite under the valgrind\nmemory checker.  For this you need to have a specially compiled\npython::\n\n  ./configure --with-pydebug --without-pymalloc --prefix=/opt/pydebug\n  make\n  make install\n\n\nThe ``tags`` command will build an emacs TAGS file using ``grind``\n(which is a binary of the python grin_ package).\n\n.. _grin: http://pypi.python.org/pypi/grin", "description_content_type": "", "docs_url": null, "download_url": "http://pypi.python.org/pypi/PSI/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://hg.sr.ht/~flub/psi", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "PSI", "package_url": "https://pypi.org/project/PSI/", "platform": "", "project_url": "https://pypi.org/project/PSI/", "project_urls": {"Download": "http://pypi.python.org/pypi/PSI/", "Homepage": "http://hg.sr.ht/~flub/psi"}, "release_url": "https://pypi.org/project/PSI/0.3b3/", "requires_dist": null, "requires_python": "", "summary": "Python System Information", "version": "0.3b3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>psi</tt> is a Python module providing direct access to real-time system\nand process information.  It is made of of several sub-modules.</p>\n<p>The <tt>arch</tt> module gives some information about the system such as\nthe sytem name and version, the machine architecture etc.  It has a\nclass representing each system and a factory function that will return\nan instance of the class which <tt>psi</tt> is running on currently.</p>\n<p>The experimental <tt>mount</tt> module gives information about the various\nmounted filesystems on the system.  It has a class representing local\nor remote filesystems.</p>\n<p>The <tt>process</tt> module provides an interface to information about\nprocesses currently running on the system.  Each process is\nrepresented as an instance of the <tt>Process</tt> class and additionally\nthere is a <tt>ProcessTable</tt> class which is a dictionary of all running\nprocesses.  To know exactly what attributes are available and what\nthey mean you should look at the docstrings and examples in the\n<tt>REAME</tt> file and <tt>examples/</tt> directory, but important to note is\nthat all the information is collected at instatiation time.  So the\ncontents of <tt>ProcessTable</tt> and <tt>Process</tt> instances are really\nsnapshots and will still contain all information even after the actual\nprocess has gone.</p>\n<p>Lastly there are some general functions available directly under the\n<tt>psi</tt> namespace such as <tt>loadavg()</tt>, <tt>getzoneid()</tt> etc.  Once\nmore see the docstrings for detailed information.</p>\n<p>Some information may not be available on all platforms, rather then\ntrying to emulate this information these parts of the API just don\u2019t\nexists on those platforms.  Examples of these are:\n<tt>psi.process.Process.pcpu</tt> which is not available on Linux,\n<tt>psi.getzoneid()</tt> which is only available on SunOS 10 and above etc.\nIf not all information can be found some attribute descriptors of\nobjects might return subclasses of AttributeError, allowing you to use\ngeneric <tt>getattr()</tt> semantics as well as more specifically detect why\nan attribute is not available (insufficient privileges, not\nimplemented, \u2026).</p>\n<div id=\"supported-platforms\">\n<h2>Supported Platforms</h2>\n<p>Python: 2.2 and above, including 3.x.</p>\n<p>Linux: all 2.4 and 2.6 kernels.</p>\n<p>SunOS: Solaris 8 and above, including OpenSolaris (SunOS 11).</p>\n<p>AIX: 5.2 and 5.3</p>\n<p>Darwin: 10.3 and above.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Care is taken to provide complete and accurate docstrings, so use\nPython\u2019s <tt>pydoc</tt> tool and the interactive prompt should get you on\nyour way.</p>\n<p>We also have a wiki (<a href=\"http://bitbucket.org/chrismiles/psi/wiki/Home\" rel=\"nofollow\">http://bitbucket.org/chrismiles/psi/wiki/Home</a>)\nand a mailing list (<a href=\"http://groups.google.com/group/psi-discuss\" rel=\"nofollow\">http://groups.google.com/group/psi-discuss</a>\n<a href=\"mailto:psi-discuss%40googlegroups.com\">psi-discuss<span>@</span>googlegroups<span>.</span>com</a>).  Don\u2019t hesitate to ask questions or\ngive feedback.</p>\n</div>\n<div id=\"bugs\">\n<h2>Bugs</h2>\n<p>Please use our issue tracker:\n<a href=\"http://bitbucket.org/chrismiles/psi/issues\" rel=\"nofollow\">http://bitbucket.org/chrismiles/psi/issues</a></p>\n</div>\n<div id=\"extra-setup-py-features\">\n<h2>Extra setup.py features</h2>\n<p>New <tt>build_ext</tt> option: <tt><span class=\"pre\">--devel</span></tt>.  This uses <tt><span class=\"pre\">-Werror</span></tt> and\nenables many more warnings as well as disables optimisation.</p>\n<p>Using <tt><span class=\"pre\">--undef</span> PYMALLOC</tt> or <tt><span class=\"pre\">-U</span> PYMALLOC</tt> to <tt>build_ext</tt> will\nuse libc\u2019s memory heap for allocation instead of Python\u2019s.</p>\n<p>The <tt>test</tt> command will run the testsuite.  Some tests will only be\nrun when running the test suite as root.  Currently these are the\ntests that try to run a simple test application under specific\nschedulers and priorities to assert psi detects these process\nattributes correctly.</p>\n<p>The <tt>valgrind</tt> command does run the testsuite under the valgrind\nmemory checker.  For this you need to have a specially compiled\npython:</p>\n<pre>./configure --with-pydebug --without-pymalloc --prefix=/opt/pydebug\nmake\nmake install\n</pre>\n<p>The <tt>tags</tt> command will build an emacs TAGS file using <tt>grind</tt>\n(which is a binary of the python <a href=\"http://pypi.python.org/pypi/grin\" rel=\"nofollow\">grin</a> package).</p>\n</div>\n\n          </div>"}, "last_serial": 7052754, "releases": {"0.2a1": [], "0.2a2": [], "0.2a3": [], "0.3b1": [{"comment_text": "", "digests": {"md5": "609d768fe7c81b228d190cea14640ded", "sha256": "93f9780b059fd347e9f7475b75af4d36f5302d0f924b5b2fa8c088fe22b48c28"}, "downloads": -1, "filename": "PSI-0.3b1.tar.gz", "has_sig": false, "md5_digest": "609d768fe7c81b228d190cea14640ded", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54635, "upload_time": "2009-05-20T23:33:52", "upload_time_iso_8601": "2009-05-20T23:33:52.253094Z", "url": "https://files.pythonhosted.org/packages/06/71/3db9d66e61a52998296889687c27ceaeec3b43225971b89be41e5e741a22/PSI-0.3b1.tar.gz", "yanked": false}], "0.3b1.1": [{"comment_text": "", "digests": {"md5": "77e51273d76d0c5f03da5db481392356", "sha256": "80a3c917f108e500e1c4381e81dfb4cb42cfa504a3bef69fc6c34144ced3b744"}, "downloads": -1, "filename": "PSI-0.3b1.1.tar.gz", "has_sig": false, "md5_digest": "77e51273d76d0c5f03da5db481392356", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66544, "upload_time": "2009-05-21T10:58:24", "upload_time_iso_8601": "2009-05-21T10:58:24.307340Z", "url": "https://files.pythonhosted.org/packages/5b/39/1c7d186162db28d9f58cf977bed36fca8277ac4cfe5ea575aaf966929170/PSI-0.3b1.1.tar.gz", "yanked": false}], "0.3b2": [{"comment_text": "", "digests": {"md5": "42f4ba95f5ee0a44b749310ec2de5b9a", "sha256": "40cafe588746191294c46d8cfb010921f66294cf73b55690e412040de0aabb05"}, "downloads": -1, "filename": "PSI-0.3b2.tar.gz", "has_sig": false, "md5_digest": "42f4ba95f5ee0a44b749310ec2de5b9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92681, "upload_time": "2009-11-21T15:41:03", "upload_time_iso_8601": "2009-11-21T15:41:03.533377Z", "url": "https://files.pythonhosted.org/packages/5d/30/3f9192377ee563f92c9bb6e8daf32d2c11fd484cd3efe431686e74edc61d/PSI-0.3b2.tar.gz", "yanked": false}], "0.3b3": [{"comment_text": "", "digests": {"md5": "05a156f6b7375cac9aec174a01f4df7b", "sha256": "f85ec3e6765f247146fbd5f3585d5e16520039580177df05e96b13040009f051"}, "downloads": -1, "filename": "PSI-0.3b3.tar.gz", "has_sig": false, "md5_digest": "05a156f6b7375cac9aec174a01f4df7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92716, "upload_time": "2020-04-19T11:40:53", "upload_time_iso_8601": "2020-04-19T11:40:53.906453Z", "url": "https://files.pythonhosted.org/packages/51/66/9e4e7689bfeb9f863f559e30ce3bab81a339332b299f4dd44095ed37c8fc/PSI-0.3b3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "05a156f6b7375cac9aec174a01f4df7b", "sha256": "f85ec3e6765f247146fbd5f3585d5e16520039580177df05e96b13040009f051"}, "downloads": -1, "filename": "PSI-0.3b3.tar.gz", "has_sig": false, "md5_digest": "05a156f6b7375cac9aec174a01f4df7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92716, "upload_time": "2020-04-19T11:40:53", "upload_time_iso_8601": "2020-04-19T11:40:53.906453Z", "url": "https://files.pythonhosted.org/packages/51/66/9e4e7689bfeb9f863f559e30ce3bab81a339332b299f4dd44095ed37c8fc/PSI-0.3b3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:55 2020"}