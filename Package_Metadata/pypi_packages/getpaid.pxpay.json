{"info": {"author": "getpaid community", "author_email": "getpaid-dev@googlegroups.com", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Framework :: Zope3", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Office/Business :: Financial", "Topic :: Software Development :: Libraries"], "description": "This package contains pxpay for getpaid.\n\n\n=======\nCHANGES\n=======\n\n0.5 (2010-05-07)\n----------------\n\n* fixed bug with timeout setting on ssl connection string\n\n0.4 (2009-10-30)\n----------------\n\n* add an explicit certs.pem and add known CAs that paymentexpress are\n  using.\n\n0.3 (2008-12-31)\n----------------\n\n* put order id into TxnData1 so that exported DPS reports have \n  an order id we can cross check against orders in getpaid order \n  manager [matt.halstead]\n\n0.2 (2008-08-29)\n----------------\n\n* Added buildout files and general text documents to project root.\n* removed setup.cfg\n\n\nDetailed Documentation\n**********************\n\nThis is a Payment Processor for the PaymentExpress PXPay hosted Payments solution\nSEE: http://www.paymentexpress.com/technical_resources/ecommerce_hosted/pxpay.html\n\nInstallation\n------------\n\nYou need to load both the package zcml and the overrides.zcml\n\nIn buildout, make sure you have the egg getpaid.pxpay installed, in\nthe zope instance configuration, add the following:\n\neggs = getpaid.pxpay\n\n\nMechanics\n---------\n\nWe hook into the last checkout and payment step of the checkout so\nthat the user is redirected to the pxpay web interface to fill out\ntheir credit card details and the redirected back to our site where we\nhandle success or failure status of the transaction.\n\nDeferred payment, repeating payments, authorisations, etc, are not yet\nimplemented, but the PXPay interface supports them, so there's no\nreason they can't be added.\n\nOrders and Finance workflow\n---------------------------\n\nAn orders persistence and workflow is managed entirely by this payment\nprocessor. Since we hook into the last step of the checkout, we are\nresponsible for creating the order, storing it in the manager, and\nhandling the finance workflow.\n\nWhen a user selects \"make payment\"\n\n- an order is created and stored in the order manager (i.e. it is now\n  persistent in the zodb)\n\n- finance workflow:  None  -->  REVIEWING\n\n- the order is authorized - which means a payment request is made to\n  pxpay.\n\nIf pxpay returns saying this is ok and here is the url to redirect to,\nthen we update the finance workflow: REVIEWING --> CHARGEABLE -->\nCHARGING (note: CHARGEABLE --> CHARGING is an automatic transition.\n\nThe user is redirected to the pxpay web interface to enter credit card\ndetails. The site then redirects them back to our callback and we\nnegotiate a response message. This tells us whether the payment was\nsuccessful or not.\n\nIf the payment was successful, then we update the finance workflow:\nCHARGING --> CHARGED\n\nIf the payment was unsuccessful, then we update the finance workflow:\nCHARGING --> PAYMENT_DECLINED\n\nIf there is an error in the communication with pxpay, then we update\nthe finance workflow: * --> CANCELLED_BY_PROCESSOR with a comment\nthat this was a communication error. We don't destroy the cart though\nso the user can try again.\n\nThe error handler for a communications error is a utility so that it\ncan be overriden easily, for example to redirect the user to another\nview.\n\nRequirements\n------------\n\n1) A developer account with PaymentExpress\n2) GetPaid core\n3) zc.ssl\n4) elementtree\n5) plone (tested on plone 3.1)\n\n\nContributors\n------------\n\nDarryl Dixon <darryl.dixon@winterhouseconsulting.com>\nMatt Halstead <matt@elyt.com>\n\nDownload\n**********************", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "getpaid pxpay payment", "license": "ZPL", "maintainer": null, "maintainer_email": null, "name": "getpaid.pxpay", "package_url": "https://pypi.org/project/getpaid.pxpay/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/getpaid.pxpay/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/getpaid.pxpay/0.5/", "requires_dist": null, "requires_python": null, "summary": "PXPay payment plugin", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package contains pxpay for getpaid.</p>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>0.5 (2010-05-07)</h3>\n<ul>\n<li>fixed bug with timeout setting on ssl connection string</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.4 (2009-10-30)</h3>\n<ul>\n<li>add an explicit certs.pem and add known CAs that paymentexpress are\nusing.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.3 (2008-12-31)</h3>\n<ul>\n<li>put order id into TxnData1 so that exported DPS reports have\nan order id we can cross check against orders in getpaid order\nmanager [matt.halstead]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.2 (2008-08-29)</h3>\n<ul>\n<li>Added buildout files and general text documents to project root.</li>\n<li>removed setup.cfg</li>\n</ul>\n<div id=\"detailed-documentation\">\n<h4>Detailed Documentation</h4>\n<p>This is a Payment Processor for the PaymentExpress PXPay hosted Payments solution\nSEE: <a href=\"http://www.paymentexpress.com/technical_resources/ecommerce_hosted/pxpay.html\" rel=\"nofollow\">http://www.paymentexpress.com/technical_resources/ecommerce_hosted/pxpay.html</a></p>\n</div>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>You need to load both the package zcml and the overrides.zcml</p>\n<p>In buildout, make sure you have the egg getpaid.pxpay installed, in\nthe zope instance configuration, add the following:</p>\n<p>eggs = getpaid.pxpay</p>\n</div>\n<div id=\"mechanics\">\n<h3>Mechanics</h3>\n<p>We hook into the last checkout and payment step of the checkout so\nthat the user is redirected to the pxpay web interface to fill out\ntheir credit card details and the redirected back to our site where we\nhandle success or failure status of the transaction.</p>\n<p>Deferred payment, repeating payments, authorisations, etc, are not yet\nimplemented, but the PXPay interface supports them, so there\u2019s no\nreason they can\u2019t be added.</p>\n</div>\n<div id=\"orders-and-finance-workflow\">\n<h3>Orders and Finance workflow</h3>\n<p>An orders persistence and workflow is managed entirely by this payment\nprocessor. Since we hook into the last step of the checkout, we are\nresponsible for creating the order, storing it in the manager, and\nhandling the finance workflow.</p>\n<p>When a user selects \u201cmake payment\u201d</p>\n<ul>\n<li>an order is created and stored in the order manager (i.e. it is now\npersistent in the zodb)</li>\n<li>finance workflow:  None  \u2013&gt;  REVIEWING</li>\n<li>the order is authorized - which means a payment request is made to\npxpay.</li>\n</ul>\n<p>If pxpay returns saying this is ok and here is the url to redirect to,\nthen we update the finance workflow: REVIEWING \u2013&gt; CHARGEABLE \u2013&gt;\nCHARGING (note: CHARGEABLE \u2013&gt; CHARGING is an automatic transition.</p>\n<p>The user is redirected to the pxpay web interface to enter credit card\ndetails. The site then redirects them back to our callback and we\nnegotiate a response message. This tells us whether the payment was\nsuccessful or not.</p>\n<p>If the payment was successful, then we update the finance workflow:\nCHARGING \u2013&gt; CHARGED</p>\n<p>If the payment was unsuccessful, then we update the finance workflow:\nCHARGING \u2013&gt; PAYMENT_DECLINED</p>\n<p>If there is an error in the communication with pxpay, then we update\nthe finance workflow: * \u2013&gt; CANCELLED_BY_PROCESSOR with a comment\nthat this was a communication error. We don\u2019t destroy the cart though\nso the user can try again.</p>\n<p>The error handler for a communications error is a utility so that it\ncan be overriden easily, for example to redirect the user to another\nview.</p>\n</div>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ol>\n<li>A developer account with PaymentExpress</li>\n<li>GetPaid core</li>\n<li>zc.ssl</li>\n<li>elementtree</li>\n<li>plone (tested on plone 3.1)</li>\n</ol>\n</div>\n<div id=\"contributors\">\n<h3>Contributors</h3>\n<p>Darryl Dixon &lt;<a href=\"mailto:darryl.dixon%40winterhouseconsulting.com\">darryl<span>.</span>dixon<span>@</span>winterhouseconsulting<span>.</span>com</a>&gt;\nMatt Halstead &lt;<a href=\"mailto:matt%40elyt.com\">matt<span>@</span>elyt<span>.</span>com</a>&gt;</p>\n<div id=\"download\">\n<h4>Download</h4>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 792371, "releases": {"0.1.dev-r1630": [{"comment_text": "", "digests": {"md5": "e2b4f9f2815ccd01331d2b868ca7b83b", "sha256": "78b96b1176577b8b8286fc412dfe1ac22d6fd682f4d9ec64e8cba058b438fba5"}, "downloads": -1, "filename": "getpaid.pxpay-0.1.dev-r1630.tar.gz", "has_sig": false, "md5_digest": "e2b4f9f2815ccd01331d2b868ca7b83b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26460, "upload_time": "2008-06-10T01:16:53", "upload_time_iso_8601": "2008-06-10T01:16:53Z", "url": "https://files.pythonhosted.org/packages/78/a4/859e6360bc569e623d4f77d16408872b26b145d967e011786ffa32b6ea40/getpaid.pxpay-0.1.dev-r1630.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "62bf31731fc5e7135058cb7a2b2194dd", "sha256": "1953c236cbb9af0811ae2545ca0cd2af1b641c6a0e85a639b0f9963928cbcf09"}, "downloads": -1, "filename": "getpaid.pxpay-0.2.tar.gz", "has_sig": false, "md5_digest": "62bf31731fc5e7135058cb7a2b2194dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25832, "upload_time": "2008-09-01T14:03:23", "upload_time_iso_8601": "2008-09-01T14:03:23Z", "url": "https://files.pythonhosted.org/packages/a9/f6/17004b795649737bf1d88654d73dd1341063781bd903773f62e8d370591e/getpaid.pxpay-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "46d3b2eeda07093c560cbf8a4d7b4c83", "sha256": "37c0021c1880518b76094e13ecaaf18f5462e663c476ca1a7921cf3541dca652"}, "downloads": -1, "filename": "getpaid.pxpay-0.3.tar.gz", "has_sig": false, "md5_digest": "46d3b2eeda07093c560cbf8a4d7b4c83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25950, "upload_time": "2008-12-31T14:48:43", "upload_time_iso_8601": "2008-12-31T14:48:43Z", "url": "https://files.pythonhosted.org/packages/c0/fa/c9cfb8593bf543c88a7073822097cc2484f42358dd3345594d513e448989/getpaid.pxpay-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "f26839f49cdce3977ddcd4b8d4cee466", "sha256": "7f4c4b527a501a45cc5fcfcd973d9d64ae265a41ea751b7aa102b7f242df2238"}, "downloads": -1, "filename": "getpaid.pxpay-0.4.tar.gz", "has_sig": false, "md5_digest": "f26839f49cdce3977ddcd4b8d4cee466", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30767, "upload_time": "2009-10-30T03:38:33", "upload_time_iso_8601": "2009-10-30T03:38:33.318198Z", "url": "https://files.pythonhosted.org/packages/38/4c/37d8f5219d9c1766feec826b0dc056f5bded1e75722373ec0947d8d8e4db/getpaid.pxpay-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "6037529083a39febc363347fd9f3adad", "sha256": "c45492cd0e8a89b885453e74c264a5e6151b7f7119aa52efa9376ff54a0ce248"}, "downloads": -1, "filename": "getpaid.pxpay-0.5.tar.gz", "has_sig": false, "md5_digest": "6037529083a39febc363347fd9f3adad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29633, "upload_time": "2010-05-07T05:26:20", "upload_time_iso_8601": "2010-05-07T05:26:20.152107Z", "url": "https://files.pythonhosted.org/packages/35/9a/b7b9bcb4d15c14f07cf3ac2abfdac55884174fa062a1ec96c82d9acfcdce/getpaid.pxpay-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6037529083a39febc363347fd9f3adad", "sha256": "c45492cd0e8a89b885453e74c264a5e6151b7f7119aa52efa9376ff54a0ce248"}, "downloads": -1, "filename": "getpaid.pxpay-0.5.tar.gz", "has_sig": false, "md5_digest": "6037529083a39febc363347fd9f3adad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29633, "upload_time": "2010-05-07T05:26:20", "upload_time_iso_8601": "2010-05-07T05:26:20.152107Z", "url": "https://files.pythonhosted.org/packages/35/9a/b7b9bcb4d15c14f07cf3ac2abfdac55884174fa062a1ec96c82d9acfcdce/getpaid.pxpay-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:44 2020"}