{"info": {"author": "Sheng Zhong", "author_email": "zhsh@umich.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "## Binary Search in Python\n\nBinary search on already sorted sequences (list, tuple) to get the first element `>=` or `>`\na value (similar to C++'s `std::lower_bound` and `std::upper_bound`).\n\nRequires python >=3.5 for the `typing` module and >= 3.4 for the `enum` module, but you can easily\nextract the `search` function from `binary_search/__init__.py` if you need it for a lower version.\n\n## Install\n1. `pip install binary-search`\n\n## Usage\nSee `tests.py` for more sample usage.\n```python\nimport binary_search as bs\n\nsorted_sequence = (2, 5, 7, 9)\na = bs.search(sorted_sequence, 5)\nprint(a) # 1 - the index of the first element >= 5\n\nb = bs.search(sorted_sequence, 6)\nprint(b) # 2 - the index of the first element >= 6 (element 2 with value 7)\n```\n\nYou can also use a custom key in the same way as `sorted`\n```python\nimport binary_search as bs\nimport random\n\n# sequence of 10 random pairs of integers\nsequence = [(random.randint(), random.randint()) for _ in range(10)]\n# sort and search just using the first integer\nkey = lambda pair: pair[0]\n\nsorted_sequence = sorted(sequence, key=key)\nbs.search(sorted_sequence, [5, None], key=key)\n```\n\n## Development and testing\n1. Fork the repository\n2. Clone your fork\n3. Install it in editable mode `pip install -e .`\n4. Make any changes and add new tests to `tests.py`\n5. Run pytest `python -m pytest`\n6. Commit and push to your fork\n7. Make pull request (merge your fork back to main repo)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LemonPi/python_binary_search", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "binary-search", "package_url": "https://pypi.org/project/binary-search/", "platform": "", "project_url": "https://pypi.org/project/binary-search/", "project_urls": {"Homepage": "https://github.com/LemonPi/python_binary_search"}, "release_url": "https://pypi.org/project/binary-search/0.3.0/", "requires_dist": null, "requires_python": ">=3.5.*", "summary": "Binary search on python sorted sequences", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Binary Search in Python</h2>\n<p>Binary search on already sorted sequences (list, tuple) to get the first element <code>&gt;=</code> or <code>&gt;</code>\na value (similar to C++'s <code>std::lower_bound</code> and <code>std::upper_bound</code>).</p>\n<p>Requires python &gt;=3.5 for the <code>typing</code> module and &gt;= 3.4 for the <code>enum</code> module, but you can easily\nextract the <code>search</code> function from <code>binary_search/__init__.py</code> if you need it for a lower version.</p>\n<h2>Install</h2>\n<ol>\n<li><code>pip install binary-search</code></li>\n</ol>\n<h2>Usage</h2>\n<p>See <code>tests.py</code> for more sample usage.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">binary_search</span> <span class=\"k\">as</span> <span class=\"nn\">bs</span>\n\n<span class=\"n\">sorted_sequence</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">)</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">bs</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">sorted_sequence</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"c1\"># 1 - the index of the first element &gt;= 5</span>\n\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">bs</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">sorted_sequence</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"c1\"># 2 - the index of the first element &gt;= 6 (element 2 with value 7)</span>\n</pre>\n<p>You can also use a custom key in the same way as <code>sorted</code></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">binary_search</span> <span class=\"k\">as</span> <span class=\"nn\">bs</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n\n<span class=\"c1\"># sequence of 10 random pairs of integers</span>\n<span class=\"n\">sequence</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(),</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">())</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)]</span>\n<span class=\"c1\"># sort and search just using the first integer</span>\n<span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">pair</span><span class=\"p\">:</span> <span class=\"n\">pair</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"n\">sorted_sequence</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">sequence</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">key</span><span class=\"p\">)</span>\n<span class=\"n\">bs</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">sorted_sequence</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">],</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">key</span><span class=\"p\">)</span>\n</pre>\n<h2>Development and testing</h2>\n<ol>\n<li>Fork the repository</li>\n<li>Clone your fork</li>\n<li>Install it in editable mode <code>pip install -e .</code></li>\n<li>Make any changes and add new tests to <code>tests.py</code></li>\n<li>Run pytest <code>python -m pytest</code></li>\n<li>Commit and push to your fork</li>\n<li>Make pull request (merge your fork back to main repo)</li>\n</ol>\n\n          </div>"}, "last_serial": 4150796, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "b04fa6bfcdc3e1ec8b8e708be77f0705", "sha256": "ed41a3e49a4b0fbb21d8c32c8943f3d220b0eb01db49f89caf5d80efbdd6b298"}, "downloads": -1, "filename": "binary_search-0.3.0.tar.gz", "has_sig": false, "md5_digest": "b04fa6bfcdc3e1ec8b8e708be77f0705", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 2655, "upload_time": "2018-08-08T21:30:52", "upload_time_iso_8601": "2018-08-08T21:30:52.683730Z", "url": "https://files.pythonhosted.org/packages/6a/e8/120de6ce10e8912d4623a5750089a5c17d44f9b3dd60fb89ab5b2e0775a0/binary_search-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b04fa6bfcdc3e1ec8b8e708be77f0705", "sha256": "ed41a3e49a4b0fbb21d8c32c8943f3d220b0eb01db49f89caf5d80efbdd6b298"}, "downloads": -1, "filename": "binary_search-0.3.0.tar.gz", "has_sig": false, "md5_digest": "b04fa6bfcdc3e1ec8b8e708be77f0705", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 2655, "upload_time": "2018-08-08T21:30:52", "upload_time_iso_8601": "2018-08-08T21:30:52.683730Z", "url": "https://files.pythonhosted.org/packages/6a/e8/120de6ce10e8912d4623a5750089a5c17d44f9b3dd60fb89ab5b2e0775a0/binary_search-0.3.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:30 2020"}