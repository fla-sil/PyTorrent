{"info": {"author": "Caktus Consulting Group", "author_email": "solutions@caktusgroup.com", "bugtrack_url": null, "classifiers": [], "description": "django-dependency\n=================\n\nManage external dependencies hosted through any version control system.\n\nInstallation\n============\n\n    1) Download the app add it to your Python path:\n\n    ::\n\n        hg clone https://django-dependency.googlecode.com/hg/ django-dependency\n        cd django-dependency\n        python setup.py install\n\n    2) Add to your INSTALLED_APPS:\n\n    ::\n\n        INSTALLED_APPS = (\n            # ...\n            'deps',\n        )\n\nSetup\n=====\nAdd DEPENDENCIES to your settings file\n\n  \n    * If you're migrating from using svn:externals, there is a script you can use to automatically generate the list of dependencies.  Just run the following command, copy/paste the output into your settings file, and make sure your INSTALLED_APPS is up to date:\n\n    ::\n\n        create_deps.py apps/external_apps libs/external_libs\n\n    * If you're not migrating from svn:externals you can set your DEPENDENCIES and INSTALLED_APPS manually like this:\n\n    ::\n\n        import os\n        import deps\n        # ...\n        PROJECT_PATH = os.path.abspath('%s/..' % path.dirname(__file__))\n        # ...\n        DEPDENDENCY_ROOT = os.path.join(PROJECT_PATH, 'external')\n        DEPENDENCIES = (\n            # subversion\n            deps.SVN(\n                #Uncomment to pin to revision 22\n                #rev=22,\n                'http://code.djangoproject.com/svn/django/trunk/django',\n                root=DEPDENDENCY_ROOT,\n            ),\n            # mercurial\n            deps.HG(\n                #Uncomment to pin to revision 8ed91139be12\n                #rev='8ed91139be12',\n                'http://bitbucket.org/jezdez/django-robots/',\n                app_name='robots',\n                \n                root=DEPDENDENCY_ROOT,\n            ),\n            # git pinned to a SHA1 id with rev can use HEAD or other tags\n            deps.GIT(\n                'git://github.com/howiworkdaily/django-faq.git',\n                app_name='faq',\n                project_name='django-faq',\n                root=DEPDENDENCY_ROOT,\n                rev='85a23e71ba23d4fc5cd92d81a02c1b9073161a21',\n            ),\n        )\n        # ...\n        INSTALLED_APPS = (\n            # ...\n            'robots',\n        )\n\nUpdate manage.py\n================\n\n    * To dynamically add the dependencies to your python path, add this code to manage.py AFTER importing settings but BEFORE importing anything from Django:\n\n    ::\n\n        import deps\n        deps.add_all_to_path(projectname.settings, auto_update=sys.argv[1] == 'up')\n\n    \n    * For example, a complete manage.py might look like this:\n\n    ::\n\n        #!/usr/bin/env python\n\n        import sys\n        import os.path\n        import deps\n\n        # remove '.' from the path (you should use the project package to reference \n        # anything in here)\n        sys.path.pop(0)\n        PROJECT_ROOT = os.path.abspath(os.path.dirname(__file__))\n        sys.path.insert(0, os.path.dirname(PROJECT_ROOT))\n\n        try:\n            import projectname.settings\n        except ImportError:\n            import sys\n            sys.stderr.write(\"Error: Can't find the file 'settings.py' in the directory containing %r.\\ It appears you've customized things.\\nYou'll have to run django-admin.py, passing it your settings module.\\n(If the file settings.py does indeed exist, it's causing an ImportError somehow.)\\n\" % __file__)\n            sys.exit(1)\n\n        if len(sys.argv) > 1 and sys.argv[1] == 'up':\n            deps.add_all_to_path(projectname.settings, auto_update=True)\n        else:\n            deps.add_all_to_path(projectname.settings, auto_update=False)\n\n        from django.core.management import execute_manager\n        if __name__ == \"__main__\":\n            execute_manager(projectname.settings)\n\n\n    * Now you can run \"./manage.py up\" to grab the dependencies!\n\n\nDevelopment sponsored by `Caktus Consulting Group, LLC\n<http://www.caktusgroup.com/services>`_.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.google.com/p/django-dependency/", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "django-dependency", "package_url": "https://pypi.org/project/django-dependency/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-dependency/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://code.google.com/p/django-dependency/"}, "release_url": "https://pypi.org/project/django-dependency/1.1/", "requires_dist": null, "requires_python": null, "summary": "Django app to help manage external dependencies", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-dependency\">\n<h2>django-dependency</h2>\n<p>Manage external dependencies hosted through any version control system.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<blockquote>\n<ol>\n<li>Download the app add it to your Python path:</li>\n</ol>\n<pre>hg clone https://django-dependency.googlecode.com/hg/ django-dependency\ncd django-dependency\npython setup.py install\n</pre>\n<ol>\n<li>Add to your INSTALLED_APPS:</li>\n</ol>\n<pre>INSTALLED_APPS = (\n    # ...\n    'deps',\n)\n</pre>\n</blockquote>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>Add DEPENDENCIES to your settings file</p>\n<blockquote>\n<ul>\n<li>If you\u2019re migrating from using svn:externals, there is a script you can use to automatically generate the list of dependencies.  Just run the following command, copy/paste the output into your settings file, and make sure your INSTALLED_APPS is up to date:</li>\n</ul>\n<pre>create_deps.py apps/external_apps libs/external_libs\n</pre>\n<ul>\n<li>If you\u2019re not migrating from svn:externals you can set your DEPENDENCIES and INSTALLED_APPS manually like this:</li>\n</ul>\n<pre>import os\nimport deps\n# ...\nPROJECT_PATH = os.path.abspath('%s/..' % path.dirname(__file__))\n# ...\nDEPDENDENCY_ROOT = os.path.join(PROJECT_PATH, 'external')\nDEPENDENCIES = (\n    # subversion\n    deps.SVN(\n        #Uncomment to pin to revision 22\n        #rev=22,\n        'http://code.djangoproject.com/svn/django/trunk/django',\n        root=DEPDENDENCY_ROOT,\n    ),\n    # mercurial\n    deps.HG(\n        #Uncomment to pin to revision 8ed91139be12\n        #rev='8ed91139be12',\n        'http://bitbucket.org/jezdez/django-robots/',\n        app_name='robots',\n\n        root=DEPDENDENCY_ROOT,\n    ),\n    # git pinned to a SHA1 id with rev can use HEAD or other tags\n    deps.GIT(\n        'git://github.com/howiworkdaily/django-faq.git',\n        app_name='faq',\n        project_name='django-faq',\n        root=DEPDENDENCY_ROOT,\n        rev='85a23e71ba23d4fc5cd92d81a02c1b9073161a21',\n    ),\n)\n# ...\nINSTALLED_APPS = (\n    # ...\n    'robots',\n)\n</pre>\n</blockquote>\n</div>\n<div id=\"update-manage-py\">\n<h2>Update manage.py</h2>\n<blockquote>\n<ul>\n<li>To dynamically add the dependencies to your python path, add this code to manage.py AFTER importing settings but BEFORE importing anything from Django:</li>\n</ul>\n<pre>import deps\ndeps.add_all_to_path(projectname.settings, auto_update=sys.argv[1] == 'up')\n</pre>\n<ul>\n<li>For example, a complete manage.py might look like this:</li>\n</ul>\n<pre>#!/usr/bin/env python\n\nimport sys\nimport os.path\nimport deps\n\n# remove '.' from the path (you should use the project package to reference\n# anything in here)\nsys.path.pop(0)\nPROJECT_ROOT = os.path.abspath(os.path.dirname(__file__))\nsys.path.insert(0, os.path.dirname(PROJECT_ROOT))\n\ntry:\n    import projectname.settings\nexcept ImportError:\n    import sys\n    sys.stderr.write(\"Error: Can't find the file 'settings.py' in the directory containing %r.\\ It appears you've customized things.\\nYou'll have to run django-admin.py, passing it your settings module.\\n(If the file settings.py does indeed exist, it's causing an ImportError somehow.)\\n\" % __file__)\n    sys.exit(1)\n\nif len(sys.argv) &gt; 1 and sys.argv[1] == 'up':\n    deps.add_all_to_path(projectname.settings, auto_update=True)\nelse:\n    deps.add_all_to_path(projectname.settings, auto_update=False)\n\nfrom django.core.management import execute_manager\nif __name__ == \"__main__\":\n    execute_manager(projectname.settings)\n</pre>\n<ul>\n<li>Now you can run \u201c./manage.py up\u201d to grab the dependencies!</li>\n</ul>\n</blockquote>\n<p>Development sponsored by <a href=\"http://www.caktusgroup.com/services\" rel=\"nofollow\">Caktus Consulting Group, LLC</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 789457, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "d81017b33ee3e314de650b9438062814", "sha256": "244aa2da30d6fc4dc1d605fedaa14883838c0c580ea0f338aefb8e8fb1681848"}, "downloads": -1, "filename": "django-dependency-1.1.tar.gz", "has_sig": false, "md5_digest": "d81017b33ee3e314de650b9438062814", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4440, "upload_time": "2010-03-18T02:57:10", "upload_time_iso_8601": "2010-03-18T02:57:10.370619Z", "url": "https://files.pythonhosted.org/packages/81/a0/c36e5e7a01949ae6cc08efa156acab0b6c1a3126d421f1271d672029de38/django-dependency-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d81017b33ee3e314de650b9438062814", "sha256": "244aa2da30d6fc4dc1d605fedaa14883838c0c580ea0f338aefb8e8fb1681848"}, "downloads": -1, "filename": "django-dependency-1.1.tar.gz", "has_sig": false, "md5_digest": "d81017b33ee3e314de650b9438062814", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4440, "upload_time": "2010-03-18T02:57:10", "upload_time_iso_8601": "2010-03-18T02:57:10.370619Z", "url": "https://files.pythonhosted.org/packages/81/a0/c36e5e7a01949ae6cc08efa156acab0b6c1a3126d421f1271d672029de38/django-dependency-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:36 2020"}