{"info": {"author": "Lia Domide, Paula Popa, Bogdan Valean, Robert Vincze", "author_email": "tvb.admin@thevirtualbrain.org", "bugtrack_url": null, "classifiers": [], "description": "TVB REST client\n===============\n\nThe tvb-rest-client is a helper package built with the intention to simplify the client interaction with TVB REST API.\n\nAll the logic necessary to prepare and send requests towards the REST server, is embeded under a client API.\n\n**GET** requests are sent from this python client using the **requests** library.\n\nFor the **POST** requests, a client has to attach a file with some input configuration.\nSuch a file is usually an **H5** in TVB specific format.\nThus, tvb-rest-client has all the logic for preparing those H5 files and sending requests.\nAlso, the REST server uses a Keycloak client at log in time, so this client will open a browser that allows the user to\nlog in, before attempting to make the requests.\n\nUsage\n=====\nYou should provide the URL towards the TVB REST server.\nFor the following example, we will suppose TVB REST server runs on *http://localhost:9090*\n\nAccessing the client API entrypoint:\n------------------------------------\n\nIf the TVB REST server you want to access runs at another address, change the parameter in the bellow TVBClient instantiation.\n\n.. code-block:: python\n\n    from tvb.interfaces.rest.client.tvb_client import TVBClient\n    tvb_client = TVBClient(\"http://localhost:9090\")\n..\n\n\nAttempt to login and start using the client API to send requests, by calling different types of methods:\n\n- methods that return a list of DTOs\n\n.. code-block:: python\n\n    tvb_client.browser_login()\n    list_of_user_projects = tvb_client.get_project_list()\n    list_of_datatypes_in_project = tvb_client.get_data_in_project(list_of_user_projects[0].gid)\n    list_of_operations_for_datatype = tvb_client.get_operations_for_datatype(list_of_datatypes_in_project[0].gid)\n..\n\n- method that download data files locally, under a folder chosen by the client\n\n.. code-block:: python\n\n    datatype_path = tvb_client.retrieve_datatype(list_of_datatypes_in_project[0].gid, download_folder)\n..\n\n- method that loads in memory the datatype downloaded previously\n\n.. code-block:: python\n\n    datatype = tvb_client.load_datatype_from_file(datatype_path)\n..\n\n- methods that launch operations in the TVB server\n    Such an operation requires the client to prepare the operation configuration and send it in an H5 file together with the requests.\n\n    By using the client API, the user only needs to instantiate the proper Model class and send it as argument to the following method.\n    It wraps the serialization of the Model inside the H5 and the attaching to the POST request.\n\n    The example above launches a Fourier analyzer, we suppose the Fourier AlgorithmDTO is *list_of_operations_for_datatype[0]*.\n\n.. code-block:: python\n\n    from tvb.adapters.analyzers.fourier_adapter import FFTAdapterModel, FourierAdapter\n\n    project_gid = list_of_user_projects[0].gid\n    model = FFTAdapterModel()\n    # logic to fill the model with required attributes\n    operation_gid = tvb_client.launch_operation(project_gid, FourierAdapter, model)\n..\n\n- method to monitor the status of an operation\n\n.. code-block:: python\n\n    monitor_operation(tvb_client, operation_gid)\n..\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/the-virtual-brain/tvb-framework", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.thevirtualbrain.org", "keywords": "tvb rest client brain simulator neuroscience human animal neuronal dynamics models delay", "license": "GPL v3", "maintainer": "", "maintainer_email": "", "name": "tvb-rest-client", "package_url": "https://pypi.org/project/tvb-rest-client/", "platform": "", "project_url": "https://pypi.org/project/tvb-rest-client/", "project_urls": {"Download": "https://github.com/the-virtual-brain/tvb-framework", "Homepage": "http://www.thevirtualbrain.org"}, "release_url": "https://pypi.org/project/tvb-rest-client/2.0.5/", "requires_dist": ["allensdk", "h5py", "networkx", "nibabel", "numpy", "Pillow", "psutil", "requests", "scipy", "simplejson", "sqlalchemy", "sqlalchemy-migrate", "tvb-data", "tvb-gdist", "tvb-library", "werkzeug", "psycopg2 ; extra == 'postgres'", "pytest ; extra == 'test'", "pytest-benchmark ; extra == 'test'"], "requires_python": "", "summary": "A helper package for preparing and sending requests towards the TVB REST API", "version": "2.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"tvb-rest-client\">\n<h2>TVB REST client</h2>\n<p>The tvb-rest-client is a helper package built with the intention to simplify the client interaction with TVB REST API.</p>\n<p>All the logic necessary to prepare and send requests towards the REST server, is embeded under a client API.</p>\n<p><strong>GET</strong> requests are sent from this python client using the <strong>requests</strong> library.</p>\n<p>For the <strong>POST</strong> requests, a client has to attach a file with some input configuration.\nSuch a file is usually an <strong>H5</strong> in TVB specific format.\nThus, tvb-rest-client has all the logic for preparing those H5 files and sending requests.\nAlso, the REST server uses a Keycloak client at log in time, so this client will open a browser that allows the user to\nlog in, before attempting to make the requests.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You should provide the URL towards the TVB REST server.\nFor the following example, we will suppose TVB REST server runs on <em>http://localhost:9090</em></p>\n<div id=\"accessing-the-client-api-entrypoint\">\n<h3>Accessing the client API entrypoint:</h3>\n<p>If the TVB REST server you want to access runs at another address, change the parameter in the bellow TVBClient instantiation.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tvb.interfaces.rest.client.tvb_client</span> <span class=\"kn\">import</span> <span class=\"n\">TVBClient</span>\n<span class=\"n\">tvb_client</span> <span class=\"o\">=</span> <span class=\"n\">TVBClient</span><span class=\"p\">(</span><span class=\"s2\">\"http://localhost:9090\"</span><span class=\"p\">)</span>\n</pre>\n<p>Attempt to login and start using the client API to send requests, by calling different types of methods:</p>\n<ul>\n<li>methods that return a list of DTOs</li>\n</ul>\n<pre><span class=\"n\">tvb_client</span><span class=\"o\">.</span><span class=\"n\">browser_login</span><span class=\"p\">()</span>\n<span class=\"n\">list_of_user_projects</span> <span class=\"o\">=</span> <span class=\"n\">tvb_client</span><span class=\"o\">.</span><span class=\"n\">get_project_list</span><span class=\"p\">()</span>\n<span class=\"n\">list_of_datatypes_in_project</span> <span class=\"o\">=</span> <span class=\"n\">tvb_client</span><span class=\"o\">.</span><span class=\"n\">get_data_in_project</span><span class=\"p\">(</span><span class=\"n\">list_of_user_projects</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">gid</span><span class=\"p\">)</span>\n<span class=\"n\">list_of_operations_for_datatype</span> <span class=\"o\">=</span> <span class=\"n\">tvb_client</span><span class=\"o\">.</span><span class=\"n\">get_operations_for_datatype</span><span class=\"p\">(</span><span class=\"n\">list_of_datatypes_in_project</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">gid</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>method that download data files locally, under a folder chosen by the client</li>\n</ul>\n<pre><span class=\"n\">datatype_path</span> <span class=\"o\">=</span> <span class=\"n\">tvb_client</span><span class=\"o\">.</span><span class=\"n\">retrieve_datatype</span><span class=\"p\">(</span><span class=\"n\">list_of_datatypes_in_project</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">gid</span><span class=\"p\">,</span> <span class=\"n\">download_folder</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>method that loads in memory the datatype downloaded previously</li>\n</ul>\n<pre><span class=\"n\">datatype</span> <span class=\"o\">=</span> <span class=\"n\">tvb_client</span><span class=\"o\">.</span><span class=\"n\">load_datatype_from_file</span><span class=\"p\">(</span><span class=\"n\">datatype_path</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><dl>\n<dt>methods that launch operations in the TVB server</dt>\n<dd><p>Such an operation requires the client to prepare the operation configuration and send it in an H5 file together with the requests.</p>\n<p>By using the client API, the user only needs to instantiate the proper Model class and send it as argument to the following method.\nIt wraps the serialization of the Model inside the H5 and the attaching to the POST request.</p>\n<p>The example above launches a Fourier analyzer, we suppose the Fourier AlgorithmDTO is <em>list_of_operations_for_datatype[0]</em>.</p>\n</dd>\n</dl>\n</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tvb.adapters.analyzers.fourier_adapter</span> <span class=\"kn\">import</span> <span class=\"n\">FFTAdapterModel</span><span class=\"p\">,</span> <span class=\"n\">FourierAdapter</span>\n\n<span class=\"n\">project_gid</span> <span class=\"o\">=</span> <span class=\"n\">list_of_user_projects</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">gid</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">FFTAdapterModel</span><span class=\"p\">()</span>\n<span class=\"c1\"># logic to fill the model with required attributes</span>\n<span class=\"n\">operation_gid</span> <span class=\"o\">=</span> <span class=\"n\">tvb_client</span><span class=\"o\">.</span><span class=\"n\">launch_operation</span><span class=\"p\">(</span><span class=\"n\">project_gid</span><span class=\"p\">,</span> <span class=\"n\">FourierAdapter</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>method to monitor the status of an operation</li>\n</ul>\n<pre><span class=\"n\">monitor_operation</span><span class=\"p\">(</span><span class=\"n\">tvb_client</span><span class=\"p\">,</span> <span class=\"n\">operation_gid</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7146490, "releases": {"2.0.2a2": [{"comment_text": "", "digests": {"md5": "2bfbd24c4f85051339570d98c5da1ce3", "sha256": "f0cdf44a30714d470bd2609d72bcf0784dc7487ba63c99f63f1acefbbf139b27"}, "downloads": -1, "filename": "tvb_rest_client-2.0.2a2-py3-none-any.whl", "has_sig": false, "md5_digest": "2bfbd24c4f85051339570d98c5da1ce3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16109, "upload_time": "2020-02-28T17:04:36", "upload_time_iso_8601": "2020-02-28T17:04:36.729183Z", "url": "https://files.pythonhosted.org/packages/54/87/82b422789c7828c65f5dbb9f0e7fb5b65cdbab62a8b8941dc3a2cf1f85aa/tvb_rest_client-2.0.2a2-py3-none-any.whl", "yanked": false}], "2.0.2a3": [{"comment_text": "", "digests": {"md5": "c5e73f8e55be26ef295e228ee817166e", "sha256": "ba9120691eecb144911ad021a569899341f69837307f7b07954ba58b643b737c"}, "downloads": -1, "filename": "tvb_rest_client-2.0.2a3-py3-none-any.whl", "has_sig": false, "md5_digest": "c5e73f8e55be26ef295e228ee817166e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 747183, "upload_time": "2020-03-11T14:13:05", "upload_time_iso_8601": "2020-03-11T14:13:05.405937Z", "url": "https://files.pythonhosted.org/packages/fa/e4/b67842f25196e5ffb3a51f3008cd5c596ffa391a076d8f95e3ea67bc467d/tvb_rest_client-2.0.2a3-py3-none-any.whl", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "f3c82ffd0f627b76cfbff243b60d9c77", "sha256": "20a037e37f0583017c4106544a25f8b08079ac827b405751f04e210613fe32cb"}, "downloads": -1, "filename": "tvb_rest_client-2.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f3c82ffd0f627b76cfbff243b60d9c77", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 747776, "upload_time": "2020-04-09T14:39:50", "upload_time_iso_8601": "2020-04-09T14:39:50.085124Z", "url": "https://files.pythonhosted.org/packages/a1/68/589da98d3e49fb6e8fcdb7d293202c15bfaee3641a8652da870f181baabd/tvb_rest_client-2.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b57a23fac3d2e816fd29e350a75394e3", "sha256": "d3da61f1903d8194a2f1dcf30846a84c390182e9be7d590cdbb34723c927a4b1"}, "downloads": -1, "filename": "tvb-rest-client-2.0.3.tar.gz", "has_sig": false, "md5_digest": "b57a23fac3d2e816fd29e350a75394e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 378593, "upload_time": "2020-04-09T14:39:52", "upload_time_iso_8601": "2020-04-09T14:39:52.664094Z", "url": "https://files.pythonhosted.org/packages/f7/11/6026841b7c59ca89776ce425c1057429f591a603271323522b47ed151b77/tvb-rest-client-2.0.3.tar.gz", "yanked": false}], "2.0.3a1": [{"comment_text": "", "digests": {"md5": "d4d3ffa289de4947a24ebd49d8d0b95c", "sha256": "0aa4e05ef0afed2ca0a22900318146423aaba9ae5541b1f6b9d743cb4661fad3"}, "downloads": -1, "filename": "tvb_rest_client-2.0.3a1-py3-none-any.whl", "has_sig": false, "md5_digest": "d4d3ffa289de4947a24ebd49d8d0b95c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 747694, "upload_time": "2020-03-31T06:45:02", "upload_time_iso_8601": "2020-03-31T06:45:02.991636Z", "url": "https://files.pythonhosted.org/packages/40/90/74faf049d5ad97c2325e6f3d83303a10c77729ab7e9a385448472cc182fe/tvb_rest_client-2.0.3a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "948c8b355ca4669bb87039982acd04ca", "sha256": "6b3e07089128b2afb6598fd0e222e93cf920dda7329d31cf994879008b943dc8"}, "downloads": -1, "filename": "tvb-rest-client-2.0.3a1.tar.gz", "has_sig": false, "md5_digest": "948c8b355ca4669bb87039982acd04ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 378492, "upload_time": "2020-03-31T06:45:04", "upload_time_iso_8601": "2020-03-31T06:45:04.799492Z", "url": "https://files.pythonhosted.org/packages/d5/8d/74a2959d435188ee67cbd23f3492b27b3ae68944e475fd5d76d957ae1616/tvb-rest-client-2.0.3a1.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "3a98be1b6abac0abd0d04a8f36f1406a", "sha256": "8d3d3c5e97b48d64334ef58ef6081d22e2bef7356b154bf81ac314e35e1cd26e"}, "downloads": -1, "filename": "tvb_rest_client-2.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3a98be1b6abac0abd0d04a8f36f1406a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 746305, "upload_time": "2020-04-17T08:17:01", "upload_time_iso_8601": "2020-04-17T08:17:01.660871Z", "url": "https://files.pythonhosted.org/packages/1e/8b/bb202614f8abcde40cd4a8250ec0f649d79c77c1c0b0f02f6759d97f2b1f/tvb_rest_client-2.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e37078f448b3c69c35b2a1a42bea3a23", "sha256": "3630c6dfa1df10c70e75767fa6ac0376f85123f54ceb81cc6a5df7ee785b0831"}, "downloads": -1, "filename": "tvb-rest-client-2.0.4.tar.gz", "has_sig": false, "md5_digest": "e37078f448b3c69c35b2a1a42bea3a23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 377786, "upload_time": "2020-04-17T08:17:30", "upload_time_iso_8601": "2020-04-17T08:17:30.752394Z", "url": "https://files.pythonhosted.org/packages/cd/4e/353408c88a5285548479bafaaece6c67155f201b3a1fe6b7c75f4323465a/tvb-rest-client-2.0.4.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "04e48e29b68c111dbb01f7a0ab07cdab", "sha256": "da9a54397f20e227c3d8fa5c83c800a6d2fef2cc83b795e532dd00f6642c58b7"}, "downloads": -1, "filename": "tvb_rest_client-2.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "04e48e29b68c111dbb01f7a0ab07cdab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 748853, "upload_time": "2020-05-01T17:04:44", "upload_time_iso_8601": "2020-05-01T17:04:44.905289Z", "url": "https://files.pythonhosted.org/packages/85/dd/2394c9233221bf7979c8c3503f22a11b5a73e31b3de6a19c64617fd4a6ff/tvb_rest_client-2.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc4ecd9b330c861bff98785f526a7bad", "sha256": "fa7901640f534ef65fc8e6a404b17263ded499dca7f408fd9f003eae7012d031"}, "downloads": -1, "filename": "tvb-rest-client-2.0.5.tar.gz", "has_sig": false, "md5_digest": "fc4ecd9b330c861bff98785f526a7bad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 378827, "upload_time": "2020-05-01T17:04:47", "upload_time_iso_8601": "2020-05-01T17:04:47.687614Z", "url": "https://files.pythonhosted.org/packages/86/57/473108dfccf3fd0834793f9e1d41b662b451edfadac676cbfac154101c27/tvb-rest-client-2.0.5.tar.gz", "yanked": false}], "2.0a1": [{"comment_text": "", "digests": {"md5": "d691217eb3554b7de429965f31ea8465", "sha256": "88562bbd76612aa09a01c0c493fb5ad28b16caff779bc98260206e622b62a5a6"}, "downloads": -1, "filename": "tvb_rest_client-2.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "d691217eb3554b7de429965f31ea8465", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 732641, "upload_time": "2020-01-31T15:11:16", "upload_time_iso_8601": "2020-01-31T15:11:16.697733Z", "url": "https://files.pythonhosted.org/packages/9a/78/bd8d2bd18e8bee232560084dcab58e8f750f2d6c01eec72c3f5e0aa3750d/tvb_rest_client-2.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "725f9527bed1e235b4e54daf559b26a3", "sha256": "88a908bbe2f0adaf67b0679f6976719d23e1ecae465862bd1e12c46daaebd540"}, "downloads": -1, "filename": "tvb-rest-client-2.0a1.tar.gz", "has_sig": false, "md5_digest": "725f9527bed1e235b4e54daf559b26a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 370612, "upload_time": "2020-01-31T15:11:19", "upload_time_iso_8601": "2020-01-31T15:11:19.534979Z", "url": "https://files.pythonhosted.org/packages/b1/09/f5d059b5a9300f5d6e255fe5f2c74116c4edd60fcc60a4ef17baf9cbc226/tvb-rest-client-2.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "04e48e29b68c111dbb01f7a0ab07cdab", "sha256": "da9a54397f20e227c3d8fa5c83c800a6d2fef2cc83b795e532dd00f6642c58b7"}, "downloads": -1, "filename": "tvb_rest_client-2.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "04e48e29b68c111dbb01f7a0ab07cdab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 748853, "upload_time": "2020-05-01T17:04:44", "upload_time_iso_8601": "2020-05-01T17:04:44.905289Z", "url": "https://files.pythonhosted.org/packages/85/dd/2394c9233221bf7979c8c3503f22a11b5a73e31b3de6a19c64617fd4a6ff/tvb_rest_client-2.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc4ecd9b330c861bff98785f526a7bad", "sha256": "fa7901640f534ef65fc8e6a404b17263ded499dca7f408fd9f003eae7012d031"}, "downloads": -1, "filename": "tvb-rest-client-2.0.5.tar.gz", "has_sig": false, "md5_digest": "fc4ecd9b330c861bff98785f526a7bad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 378827, "upload_time": "2020-05-01T17:04:47", "upload_time_iso_8601": "2020-05-01T17:04:47.687614Z", "url": "https://files.pythonhosted.org/packages/86/57/473108dfccf3fd0834793f9e1d41b662b451edfadac676cbfac154101c27/tvb-rest-client-2.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:44:23 2020"}