{"info": {"author": "Giorgio Salluzzo", "author_email": "giorgio.salluzzo@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Flask", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development"], "description": "==================\nFlask-Breathalyzer\n==================\n\n.. image:: https://api.travis-ci.org/mindflayer/flask-breathalyzer.png?branch=master\n    :target: http://travis-ci.org/mindflayer/flask-breathalyzer\n\n.. image:: https://coveralls.io/repos/mindflayer/flask-breathalyzer/badge.png?branch=master\n    :target: https://coveralls.io/r/mindflayer/flask-breathalyzer\n\nA Flask module pushing exceptions to Datadog\n--------------------------------------------\n\n.. image:: https://raw.githubusercontent.com/mindflayer/flask-breathalyzer/master/Flask-Breathalyzer.png\n\nFeatures\n========\n- Pushing exceptions to Datadog;\n- Blacklist for `headers` or `data` as list of *XPATH style* strings (you may have some headers you do not want to publish for privacy, or maybe some body fields you do not need to display - e.g.: a base64 blob).\n\nInstallation\n============\nUsing pip::\n\n    $ pip install flask_breathalyzer[datadog]\n\nIssues\n============\nWhen opening an **Issue**, please add few lines of code as failing test, or -better- open its relative **Pull request** adding this test to our test suite.\n\nQuick example\n=============\nLet's create a new virtualenv with all we need::\n\n    $ virtualenv example\n    $ source example/bin/activate\n    $ pip install pytest flask_breathalyzer[datadog]\n\nAs second step, we create a test `example.py` file as the following one:\n\n.. code-block:: python\n\n    from flask import Flask\n    import datadog\n\n    from flask_breathalyzer import Breathalyzer\n\n\n    def test_example():\n\n        app = Flask(__name__)\n\n        @app.route(\"/\")\n        def boom():\n            1/0\n\n        # from http://docs.datadoghq.com/api/\n        options = {\n            'api_key': 'your-datadog-api-key',\n            'app_key': 'your-datadog-app-key'\n        }\n\n        ba = Breathalyzer(app, **options)\n        response = test_client.get('/')\n        assert response.status == '500 INTERNAL SERVER ERROR'\n        assert b'<title>500 Internal Server Error</title>' in response.data\n        assert response.mimetype == 'text/html'\n        assert isinstance(ba.last_event_id, int)  # your exception is now on Datadog with this ID\n\n\nLet's fire our example test::\n\n    $ py.test example.py", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mindflayer/flask-breathalyzer", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "Flask-Breathalyzer", "package_url": "https://pypi.org/project/Flask-Breathalyzer/", "platform": "any", "project_url": "https://pypi.org/project/Flask-Breathalyzer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mindflayer/flask-breathalyzer"}, "release_url": "https://pypi.org/project/Flask-Breathalyzer/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "Flask module for submitting timings and exceptions to Datadog", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/mindflayer/flask-breathalyzer\" rel=\"nofollow\"><img alt=\"https://api.travis-ci.org/mindflayer/flask-breathalyzer.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f21cec0bcfa38be1370e467be5e3a7ebc84fc16/68747470733a2f2f6170692e7472617669732d63692e6f72672f6d696e64666c617965722f666c61736b2d627265617468616c797a65722e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/mindflayer/flask-breathalyzer\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/mindflayer/flask-breathalyzer/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca6ab0ac8e9e0b444aff6e2cb6ed6629d3de31e6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d696e64666c617965722f666c61736b2d627265617468616c797a65722f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<div id=\"a-flask-module-pushing-exceptions-to-datadog\">\n<h2>A Flask module pushing exceptions to Datadog</h2>\n<img alt=\"https://raw.githubusercontent.com/mindflayer/flask-breathalyzer/master/Flask-Breathalyzer.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac37a9e13624776fdc7a1bc4ae14224db4b0c289/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d696e64666c617965722f666c61736b2d627265617468616c797a65722f6d61737465722f466c61736b2d427265617468616c797a65722e706e67\">\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Pushing exceptions to Datadog;</li>\n<li>Blacklist for <cite>headers</cite> or <cite>data</cite> as list of <em>XPATH style</em> strings (you may have some headers you do not want to publish for privacy, or maybe some body fields you do not need to display - e.g.: a base64 blob).</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Using pip:</p>\n<pre>$ pip install flask_breathalyzer[datadog]\n</pre>\n</div>\n<div id=\"issues\">\n<h3>Issues</h3>\n<p>When opening an <strong>Issue</strong>, please add few lines of code as failing test, or -better- open its relative <strong>Pull request</strong> adding this test to our test suite.</p>\n</div>\n<div id=\"quick-example\">\n<h3>Quick example</h3>\n<p>Let\u2019s create a new virtualenv with all we need:</p>\n<pre>$ virtualenv example\n$ source example/bin/activate\n$ pip install pytest flask_breathalyzer[datadog]\n</pre>\n<p>As second step, we create a test <cite>example.py</cite> file as the following one:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datadog</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">flask_breathalyzer</span> <span class=\"kn\">import</span> <span class=\"n\">Breathalyzer</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">test_example</span><span class=\"p\">():</span>\n\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">boom</span><span class=\"p\">():</span>\n        <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">0</span>\n\n    <span class=\"c1\"># from http://docs.datadoghq.com/api/</span>\n    <span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'api_key'</span><span class=\"p\">:</span> <span class=\"s1\">'your-datadog-api-key'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'app_key'</span><span class=\"p\">:</span> <span class=\"s1\">'your-datadog-app-key'</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">ba</span> <span class=\"o\">=</span> <span class=\"n\">Breathalyzer</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">test_client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"s1\">'500 INTERNAL SERVER ERROR'</span>\n    <span class=\"k\">assert</span> <span class=\"sa\">b</span><span class=\"s1\">'&lt;title&gt;500 Internal Server Error&lt;/title&gt;'</span> <span class=\"ow\">in</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">data</span>\n    <span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">mimetype</span> <span class=\"o\">==</span> <span class=\"s1\">'text/html'</span>\n    <span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">ba</span><span class=\"o\">.</span><span class=\"n\">last_event_id</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">)</span>  <span class=\"c1\"># your exception is now on Datadog with this ID</span>\n</pre>\n<p>Let\u2019s fire our example test:</p>\n<pre>$ py.test example.py\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2098738, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "0043974865c11f2d42a87184d3260dd4", "sha256": "469a8c11f0162c99dc8dda5a2682682684be3e2328ffdb0a1f1fce136b192082"}, "downloads": -1, "filename": "Flask-Breathalyzer-0.2.2.tar.gz", "has_sig": false, "md5_digest": "0043974865c11f2d42a87184d3260dd4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6433, "upload_time": "2016-05-04T12:59:35", "upload_time_iso_8601": "2016-05-04T12:59:35.449633Z", "url": "https://files.pythonhosted.org/packages/d2/dc/7c456bc2ca43299c148c7f0fb9639c1105026169faea2d6e420178e6adb0/Flask-Breathalyzer-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0043974865c11f2d42a87184d3260dd4", "sha256": "469a8c11f0162c99dc8dda5a2682682684be3e2328ffdb0a1f1fce136b192082"}, "downloads": -1, "filename": "Flask-Breathalyzer-0.2.2.tar.gz", "has_sig": false, "md5_digest": "0043974865c11f2d42a87184d3260dd4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6433, "upload_time": "2016-05-04T12:59:35", "upload_time_iso_8601": "2016-05-04T12:59:35.449633Z", "url": "https://files.pythonhosted.org/packages/d2/dc/7c456bc2ca43299c148c7f0fb9639c1105026169faea2d6e420178e6adb0/Flask-Breathalyzer-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:03:03 2020"}