{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "=======================\n\nAn OO implementation of Conway's Game of life with a apocalyptic twist\n\n.. image:: resources/worksonmymachine.png\n   :width: 150pt\n\nMain Features\n-------------\n\n* Free software: MIT license\n* Dependency free\n* Winner of the \"Works on my machine\" certificate\n* Game functions as supposed to\n* Most likely all cells will die if enough generations are provided\n* Some cells might come back as zombies\n\nUsage\n-----\n\nDownload from pip\n   ::\n\n      pip install -U game_of_life_pyfection\n\nRun from source\n\n   1) Fetch repo\n\n      ::\n\n\n         git pull https://github.com/Michaelliv/game_of_life_pyfection.git\n\n   2) Move to game directory\n\n      ::\n\n         cd game_of_life_pyfection\n   3) run tests\n\n      ::\n\n         python -m unittest discover -s tests -p \"test_*\"\n   4) run game\n\n      ::\n\n         python main.py [width] [height] [infect_after] [max_generations] [seed...]\n\n         -w width              width of the board\n         -h height             height of the board\n         -i infect_after       generation after which cells are infected\n         -m max_generations    maximal amount of generations\n         -s seed               initial seed of the board\n\n         example:\n\n             python main.py 2 3 3 6 1 0 0 1 1 1\n\nHome-page: https://github.com/Michaelliv/game_of_life_pyfection\nAuthor: Michael Livshits\nAuthor-email: livsmichael@gmail.com\nLicense: MIT\nDescription: Game of life: Pyfection\n        =======================\n        \n        An OO implementation of Conway's Game of life with a apocalyptic twist\n        \n        .. image:: resources/worksonmymachine.png\n           :width: 150pt\n        \n        Main Features\n        -------------\n        \n        * Free software: MIT license\n        * Dependency free\n        * Winner of the \"Works on my machine\" certificate\n        * Game functions as supposed to\n        * Most likely all cells will die if enough generations are provided\n        * Some cells might come back as zombies\n        \n        Usage\n        -----\n        \n        Download from pip\n           ::\n        \n              pip install -U game_of_life_pyfection\n        \n        Run from source\n        \n           1) Fetch repo\n        \n              ::\n        \n        \n                 git pull https://github.com/Michaelliv/game_of_life_pyfection.git\n        \n           2) Move to game directory\n        \n              ::\n        \n                 cd game_of_life_pyfection\n           3) run tests\n        \n              ::\n        \n                 python -m unittest discover -s tests -p \"test_*\"\n           4) run game\n        \n              ::\n        \n                 python main.py [width] [height] [infect_after] [max_generations] [seed...]\n        \n                 -w width              width of the board\n                 -h height             height of the board\n                 -i infect_after       generation after which cells are infected\n                 -m max_generations    maximal amount of generations\n                 -s seed               initial seed of the board\n        \n                 example:\n        \n                     python main.py 2 3 3 6 1 0 0 1 1 1\n        \n        \n        \n        \n        History\n        -------\n        \n        0.1.0 (2018-09-18)\n        ---------------------\n        \n        * First release on PyPI.\n        \nKeywords: game_of_life_pyfection\nPlatform: UNKNOWN\nClassifier: Development Status :: 2 - Pre-Alpha\nClassifier: Intended Audience :: Developers\nClassifier: License :: OSI Approved :: MIT License\nClassifier: Natural Language :: English\nClassifier: Programming Language :: Python :: 3.4\nClassifier: Programming Language :: Python :: 3.5\nClassifier: Programming Language :: Python :: 3.6\nClassifier: Programming Language :: Python :: 3.7\nDescription-Content-Type: text/markdown\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "game-of-life-pyfection", "package_url": "https://pypi.org/project/game-of-life-pyfection/", "platform": "", "project_url": "https://pypi.org/project/game-of-life-pyfection/", "project_urls": null, "release_url": "https://pypi.org/project/game-of-life-pyfection/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Game of life: Pyfection", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            =======================<br><br>An OO implementation of Conway's Game of life with a apocalyptic twist<br><br>.. image:: resources/worksonmymachine.png<br>   :width: 150pt<br><br>Main Features<br>-------------<br><br>* Free software: MIT license<br>* Dependency free<br>* Winner of the \"Works on my machine\" certificate<br>* Game functions as supposed to<br>* Most likely all cells will die if enough generations are provided<br>* Some cells might come back as zombies<br><br>Usage<br>-----<br><br>Download from pip<br>   ::<br><br>      pip install -U game_of_life_pyfection<br><br>Run from source<br><br>   1) Fetch repo<br><br>      ::<br><br><br>         git pull https://github.com/Michaelliv/game_of_life_pyfection.git<br><br>   2) Move to game directory<br><br>      ::<br><br>         cd game_of_life_pyfection<br>   3) run tests<br><br>      ::<br><br>         python -m unittest discover -s tests -p \"test_*\"<br>   4) run game<br><br>      ::<br><br>         python main.py [width] [height] [infect_after] [max_generations] [seed...]<br><br>         -w width              width of the board<br>         -h height             height of the board<br>         -i infect_after       generation after which cells are infected<br>         -m max_generations    maximal amount of generations<br>         -s seed               initial seed of the board<br><br>         example:<br><br>             python main.py 2 3 3 6 1 0 0 1 1 1<br><br>Home-page: https://github.com/Michaelliv/game_of_life_pyfection<br>Author: Michael Livshits<br>Author-email: livsmichael@gmail.com<br>License: MIT<br>Description: Game of life: Pyfection<br>        =======================<br>        <br>        An OO implementation of Conway's Game of life with a apocalyptic twist<br>        <br>        .. image:: resources/worksonmymachine.png<br>           :width: 150pt<br>        <br>        Main Features<br>        -------------<br>        <br>        * Free software: MIT license<br>        * Dependency free<br>        * Winner of the \"Works on my machine\" certificate<br>        * Game functions as supposed to<br>        * Most likely all cells will die if enough generations are provided<br>        * Some cells might come back as zombies<br>        <br>        Usage<br>        -----<br>        <br>        Download from pip<br>           ::<br>        <br>              pip install -U game_of_life_pyfection<br>        <br>        Run from source<br>        <br>           1) Fetch repo<br>        <br>              ::<br>        <br>        <br>                 git pull https://github.com/Michaelliv/game_of_life_pyfection.git<br>        <br>           2) Move to game directory<br>        <br>              ::<br>        <br>                 cd game_of_life_pyfection<br>           3) run tests<br>        <br>              ::<br>        <br>                 python -m unittest discover -s tests -p \"test_*\"<br>           4) run game<br>        <br>              ::<br>        <br>                 python main.py [width] [height] [infect_after] [max_generations] [seed...]<br>        <br>                 -w width              width of the board<br>                 -h height             height of the board<br>                 -i infect_after       generation after which cells are infected<br>                 -m max_generations    maximal amount of generations<br>                 -s seed               initial seed of the board<br>        <br>                 example:<br>        <br>                     python main.py 2 3 3 6 1 0 0 1 1 1<br>        <br>        <br>        <br>        <br>        History<br>        -------<br>        <br>        0.1.0 (2018-09-18)<br>        ---------------------<br>        <br>        * First release on PyPI.<br>        <br>Keywords: game_of_life_pyfection<br>Platform: UNKNOWN<br>Classifier: Development Status :: 2 - Pre-Alpha<br>Classifier: Intended Audience :: Developers<br>Classifier: License :: OSI Approved :: MIT License<br>Classifier: Natural Language :: English<br>Classifier: Programming Language :: Python :: 3.4<br>Classifier: Programming Language :: Python :: 3.5<br>Classifier: Programming Language :: Python :: 3.6<br>Classifier: Programming Language :: Python :: 3.7<br>Description-Content-Type: text/markdown<br>\n          </div>"}, "last_serial": 4300467, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7c33f383c742785acc4f663e2315ee97", "sha256": "97c93811aa266f6a7ca838140b818e310ecea200cc67dd8e61e13c4d5e670e8a"}, "downloads": -1, "filename": "game_of_life_pyfection-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7c33f383c742785acc4f663e2315ee97", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6444, "upload_time": "2018-09-22T20:22:42", "upload_time_iso_8601": "2018-09-22T20:22:42.898285Z", "url": "https://files.pythonhosted.org/packages/31/00/95527982d6f73a9a94ecb18ebc43de733dcdf85a3d09e6e904543a88f435/game_of_life_pyfection-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c19e094b6a14a669c5e448fbe479893", "sha256": "553c79c27b067dda009802f83f5801f95fd9255d3d11906e7a6dd7fa97fc6a2a"}, "downloads": -1, "filename": "game_of_life_pyfection-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5c19e094b6a14a669c5e448fbe479893", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4821, "upload_time": "2018-09-22T20:22:44", "upload_time_iso_8601": "2018-09-22T20:22:44.269788Z", "url": "https://files.pythonhosted.org/packages/9c/e2/e830184aa7e7bd78fdd3510861383ccf3ddf53afa309e1f3c7e800c1eb41/game_of_life_pyfection-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7c33f383c742785acc4f663e2315ee97", "sha256": "97c93811aa266f6a7ca838140b818e310ecea200cc67dd8e61e13c4d5e670e8a"}, "downloads": -1, "filename": "game_of_life_pyfection-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7c33f383c742785acc4f663e2315ee97", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6444, "upload_time": "2018-09-22T20:22:42", "upload_time_iso_8601": "2018-09-22T20:22:42.898285Z", "url": "https://files.pythonhosted.org/packages/31/00/95527982d6f73a9a94ecb18ebc43de733dcdf85a3d09e6e904543a88f435/game_of_life_pyfection-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c19e094b6a14a669c5e448fbe479893", "sha256": "553c79c27b067dda009802f83f5801f95fd9255d3d11906e7a6dd7fa97fc6a2a"}, "downloads": -1, "filename": "game_of_life_pyfection-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5c19e094b6a14a669c5e448fbe479893", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4821, "upload_time": "2018-09-22T20:22:44", "upload_time_iso_8601": "2018-09-22T20:22:44.269788Z", "url": "https://files.pythonhosted.org/packages/9c/e2/e830184aa7e7bd78fdd3510861383ccf3ddf53afa309e1f3c7e800c1eb41/game_of_life_pyfection-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:13 2020"}