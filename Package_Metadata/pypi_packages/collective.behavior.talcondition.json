{"info": {"author": "IMIO", "author_email": "dev@imio.be", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 4.3", "Framework :: Plone :: 5.0", "Framework :: Plone :: 5.1", "Programming Language :: Python", "Programming Language :: Python :: 2.7"], "description": ".. image:: https://travis-ci.org/collective/collective.behavior.talcondition.svg?branch=master\n    :target: https://travis-ci.org/collective/collective.behavior.talcondition\n\n.. image:: https://coveralls.io/repos/collective/collective.behavior.talcondition/badge.png\n  :target: https://coveralls.io/r/collective/collective.behavior.talcondition\n\n\n==========================================================================\ncollective.behavior.talcondition\n==========================================================================\n\nThis package works for dexterity (behavior) and archetypes (schema extender).\n\nIt adds two fields on a content type or class:\n\n* tal_condition : enter a `TAL expression <http://docs.zope.org/zope2/zope2book/AppendixC.html>`_ that once evaluated will return 'True' if content should be available. By default, elements 'member', 'context' and 'portal' are available for the expression but the TAL expression context may be extended using the 'extra_expr_ctx' parameter.\n\n* roles_bypassing_talcondition : choose the different roles for which the TAL condition will not be evaluated and always considered \\'True\\'\n\nIt's then possible to use the 'evaluate' method to test the TAL condition.\n\nHow to use it\n=============\n\nFor AT you have to provide the ITALConditionable on your class (see testing.zcml).\n\nFor DX you just have to activate the behavior on your content type.\n\nPlone versions\n==============\nIt has been developed and tested for Plone 4 and 5.\n\n\nChangelog\n=========\n\n\n0.11 (2019-05-16)\n-----------------\n\n- Added parameter `raise_on_error` to `utils.evaluateExpressionFor` to raise an\n  error when an exception occurs instead returning False.\n  [gbastien]\n- Added method `TALCondition.complete_extra_expr_ctx` to the behavior to\n  formalize the way to get `extra_expr_ctx` to avoid the `evaluate` method\n  to be overrided.\n  [gbastien]\n\n0.10 (2018-11-20)\n-----------------\n\n- Do not break if parameter `expression` passed to\n  `utils._evaluateExpression` is None.\n  [gbastien]\n\n0.9 (2018-10-12)\n----------------\n\n- Added new parameter `error_pattern=WRONG_TAL_CONDITION` to\n  `utils.evaluateExpressionFor` and underlying `utils._evaluateExpression` to\n  be able to log a custom message in case an error occurs during\n  expression evaluation.\n  [gbastien]\n\n0.8 (2018-06-12)\n----------------\n\n- Mark elements using behavior with `ITALConditionable` interface so it behaves\n  like element using the AT extender.\n  [gbastien]\n\n0.7 (2017-03-22)\n----------------\n\n- Use CheckBoxWidget for `ITALCondition.roles_bypassing_talcondition` to ease\n  selection when displaying several elements.\n  [gbastien]\n\n0.6 (2016-01-12)\n----------------\n\n- Added parameter `empty_expr_is_true` to utils._evaluateExpression than may be True\n  or False depending that we want an empty expression to be considered True or False.\n  Previous behavior is kept in utils.evaluateExpressionFor where an empty expression\n  is considered True.  This avoid managing an empty expression in the caller method\n  [gbastien]\n\n\n0.5 (2015-12-17)\n----------------\n\n- Added method utils._evaluateExpression that receives an expression\n  to evaluate, it is called by utils.evaluateExpressionFor.  This way, this\n  method may evaluate a TAL expression without getting it from the `tal_condition`\n  attribute on the context, in case we want to evaluate arbitrary expression\n  [gbastien]\n\n\n0.4 (2015-09-16)\n----------------\n\n- Make the tal_condition field larger (from 30 to 80) for the\n  AT extender as well as for the DX behavior\n  [gbastien]\n- Added possibility to extend TAL expression context by passing\n  an `extra_expr_ctx` dict to utils.evaluateExpressionFor, also\n  integrated to the `evaluate` method of the DX behavior\n  [gbastien]\n\n\n0.3 (2015-07-14)\n----------------\n\n- Corrected default value\n  [sgeulette]\n- Little optimization\n  [sgeulette]\n\n\n0.2 (2015-06-18)\n----------------\n\n- Added field `role_bypassing_talcondition` to define who can bypass the condition\n  [anuyens]\n- Added translations for new field\n  [gbastien]\n\n\n0.1 (2015-06-01)\n----------------\n\n- Initial release.\n  [IMIO]", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/collective.behavior.talcondition", "keywords": "Python Zope Plone", "license": "GPL V2", "maintainer": "", "maintainer_email": "", "name": "collective.behavior.talcondition", "package_url": "https://pypi.org/project/collective.behavior.talcondition/", "platform": "", "project_url": "https://pypi.org/project/collective.behavior.talcondition/", "project_urls": {"Homepage": "http://pypi.python.org/pypi/collective.behavior.talcondition"}, "release_url": "https://pypi.org/project/collective.behavior.talcondition/0.11/", "requires_dist": null, "requires_python": "", "summary": "This package contains a Dexterity behavior and AT schemaextender to add a TAL condition on a content type.", "version": "0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/collective/collective.behavior.talcondition\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/collective/collective.behavior.talcondition.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a6685749a314befbfb81d24755eb9f189811b96/68747470733a2f2f7472617669732d63692e6f72672f636f6c6c6563746976652f636f6c6c6563746976652e6265686176696f722e74616c636f6e646974696f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/collective/collective.behavior.talcondition\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/collective/collective.behavior.talcondition/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a8de472948f3a0cac678ec88ae1ba0f726169f4/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f636f6c6c6563746976652f636f6c6c6563746976652e6265686176696f722e74616c636f6e646974696f6e2f62616467652e706e67\"></a>\n<div id=\"collective-behavior-talcondition\">\n<h2>collective.behavior.talcondition</h2>\n<p>This package works for dexterity (behavior) and archetypes (schema extender).</p>\n<p>It adds two fields on a content type or class:</p>\n<ul>\n<li>tal_condition : enter a <a href=\"http://docs.zope.org/zope2/zope2book/AppendixC.html\" rel=\"nofollow\">TAL expression</a> that once evaluated will return \u2018True\u2019 if content should be available. By default, elements \u2018member\u2019, \u2018context\u2019 and \u2018portal\u2019 are available for the expression but the TAL expression context may be extended using the \u2018extra_expr_ctx\u2019 parameter.</li>\n<li>roles_bypassing_talcondition : choose the different roles for which the TAL condition will not be evaluated and always considered \u2018True\u2019</li>\n</ul>\n<p>It\u2019s then possible to use the \u2018evaluate\u2019 method to test the TAL condition.</p>\n<div id=\"how-to-use-it\">\n<h3>How to use it</h3>\n<p>For AT you have to provide the ITALConditionable on your class (see testing.zcml).</p>\n<p>For DX you just have to activate the behavior on your content type.</p>\n</div>\n<div id=\"plone-versions\">\n<h3>Plone versions</h3>\n<p>It has been developed and tested for Plone 4 and 5.</p>\n</div>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n<div id=\"id1\">\n<h4>0.11 (2019-05-16)</h4>\n<ul>\n<li>Added parameter <cite>raise_on_error</cite> to <cite>utils.evaluateExpressionFor</cite> to raise an\nerror when an exception occurs instead returning False.\n[gbastien]</li>\n<li>Added method <cite>TALCondition.complete_extra_expr_ctx</cite> to the behavior to\nformalize the way to get <cite>extra_expr_ctx</cite> to avoid the <cite>evaluate</cite> method\nto be overrided.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h4>0.10 (2018-11-20)</h4>\n<ul>\n<li>Do not break if parameter <cite>expression</cite> passed to\n<cite>utils._evaluateExpression</cite> is None.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h4>0.9 (2018-10-12)</h4>\n<ul>\n<li>Added new parameter <cite>error_pattern=WRONG_TAL_CONDITION</cite> to\n<cite>utils.evaluateExpressionFor</cite> and underlying <cite>utils._evaluateExpression</cite> to\nbe able to log a custom message in case an error occurs during\nexpression evaluation.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h4>0.8 (2018-06-12)</h4>\n<ul>\n<li>Mark elements using behavior with <cite>ITALConditionable</cite> interface so it behaves\nlike element using the AT extender.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h4>0.7 (2017-03-22)</h4>\n<ul>\n<li>Use CheckBoxWidget for <cite>ITALCondition.roles_bypassing_talcondition</cite> to ease\nselection when displaying several elements.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h4>0.6 (2016-01-12)</h4>\n<ul>\n<li>Added parameter <cite>empty_expr_is_true</cite> to utils._evaluateExpression than may be True\nor False depending that we want an empty expression to be considered True or False.\nPrevious behavior is kept in utils.evaluateExpressionFor where an empty expression\nis considered True.  This avoid managing an empty expression in the caller method\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h4>0.5 (2015-12-17)</h4>\n<ul>\n<li>Added method utils._evaluateExpression that receives an expression\nto evaluate, it is called by utils.evaluateExpressionFor.  This way, this\nmethod may evaluate a TAL expression without getting it from the <cite>tal_condition</cite>\nattribute on the context, in case we want to evaluate arbitrary expression\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h4>0.4 (2015-09-16)</h4>\n<ul>\n<li>Make the tal_condition field larger (from 30 to 80) for the\nAT extender as well as for the DX behavior\n[gbastien]</li>\n<li>Added possibility to extend TAL expression context by passing\nan <cite>extra_expr_ctx</cite> dict to utils.evaluateExpressionFor, also\nintegrated to the <cite>evaluate</cite> method of the DX behavior\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h4>0.3 (2015-07-14)</h4>\n<ul>\n<li>Corrected default value\n[sgeulette]</li>\n<li>Little optimization\n[sgeulette]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h4>0.2 (2015-06-18)</h4>\n<ul>\n<li>Added field <cite>role_bypassing_talcondition</cite> to define who can bypass the condition\n[anuyens]</li>\n<li>Added translations for new field\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h4>0.1 (2015-06-01)</h4>\n<ul>\n<li>Initial release.\n[IMIO]</li>\n</ul>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5277283, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "369e43905b35150bcb0f648f54bdf2e5", "sha256": "80f0754b66163ed9cb242d20f6582cdade47128a7a1a7865e1c1c0202cec0639"}, "downloads": -1, "filename": "collective.behavior.talcondition-0.1.zip", "has_sig": false, "md5_digest": "369e43905b35150bcb0f648f54bdf2e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43375, "upload_time": "2015-06-18T12:53:11", "upload_time_iso_8601": "2015-06-18T12:53:11.843572Z", "url": "https://files.pythonhosted.org/packages/13/e9/4c581eee2cfbc7c8782e776eb2f35a98518e494f785efd207585f912a683/collective.behavior.talcondition-0.1.zip", "yanked": false}], "0.10": [{"comment_text": "", "digests": {"md5": "6a6dedd6f53b71dc9f977e7c353b3e36", "sha256": "a9cb4798cc499ff7ef7954b478467f5138c40785e2352e7a70772b30cce6d321"}, "downloads": -1, "filename": "collective.behavior.talcondition-0.10.tar.gz", "has_sig": false, "md5_digest": "6a6dedd6f53b71dc9f977e7c353b3e36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19692, "upload_time": "2018-11-20T10:24:11", "upload_time_iso_8601": "2018-11-20T10:24:11.527129Z", "url": "https://files.pythonhosted.org/packages/b1/cf/fb276399a665f6dc0737dca0982cee87e4dab92acb76b5b8a5842fb76a92/collective.behavior.talcondition-0.10.tar.gz", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "74b6becc7cc66b5e3ad4275e9baf4fad", "sha256": "252f132767241b22de52551907e845c78ec49bc3b92bd997d2b9d63b8877ca52"}, "downloads": -1, "filename": "collective.behavior.talcondition-0.11.tar.gz", "has_sig": false, "md5_digest": "74b6becc7cc66b5e3ad4275e9baf4fad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19939, "upload_time": "2019-05-16T12:50:27", "upload_time_iso_8601": "2019-05-16T12:50:27.109155Z", "url": "https://files.pythonhosted.org/packages/35/7e/b4f9695a581a97e3783c997fd82fae1e92f4627c4959f6efba1ccc39bc69/collective.behavior.talcondition-0.11.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "4cffda93b3475631dc84ff2ff5c50ec5", "sha256": "349ded14a1f43c63710da3a75fc59b28df50759b1396834c752016c8b2d2ecf6"}, "downloads": -1, "filename": "collective.behavior.talcondition-0.2.zip", "has_sig": false, "md5_digest": "4cffda93b3475631dc84ff2ff5c50ec5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30754, "upload_time": "2015-06-18T12:49:55", "upload_time_iso_8601": "2015-06-18T12:49:55.894477Z", "url": "https://files.pythonhosted.org/packages/90/e3/772618dda1b008b8b1b1a020191e7853e71ed5e77e1c8bba8ebe41f91a31/collective.behavior.talcondition-0.2.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "1c01bf652382fac13b5fdad1dffc5c74", "sha256": "32f0d275aa7aa9743eb1611b540f5d398e9666639837501d52ed7314f0916680"}, "downloads": -1, "filename": "collective.behavior.talcondition-0.3.zip", "has_sig": false, "md5_digest": "1c01bf652382fac13b5fdad1dffc5c74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30932, "upload_time": "2015-09-14T07:39:13", "upload_time_iso_8601": "2015-09-14T07:39:13.910555Z", "url": "https://files.pythonhosted.org/packages/0d/b8/f09030996dc3452907af68f7665e3fe60ca75a1b2a9107f54cc19fb627fb/collective.behavior.talcondition-0.3.zip", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "366d88867dc0651f9f7e3a22eff7bfaf", "sha256": "39096e14581826ddb0f32d2ff1b8bd536b85c2e510f6e4db4dbf8d410f02ee55"}, "downloads": -1, "filename": "collective.behavior.talcondition-0.4.zip", "has_sig": false, "md5_digest": "366d88867dc0651f9f7e3a22eff7bfaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31796, "upload_time": "2015-09-16T14:38:40", "upload_time_iso_8601": "2015-09-16T14:38:40.312787Z", "url": "https://files.pythonhosted.org/packages/7a/e8/73a01aead317b7ac763e6e2a2a0b2b4845713d891c8ec5ef0742052d54cc/collective.behavior.talcondition-0.4.zip", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "74ab8aaaf2ed96fcb62b12f51e23a73d", "sha256": "d0236c1bf1d7e57111231fead3208286e736d1ebf3634ceca7b1678db8c5a6cc"}, "downloads": -1, "filename": "collective.behavior.talcondition-0.6.tar.gz", "has_sig": false, "md5_digest": "74ab8aaaf2ed96fcb62b12f51e23a73d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18522, "upload_time": "2016-01-12T15:56:02", "upload_time_iso_8601": "2016-01-12T15:56:02.700409Z", "url": "https://files.pythonhosted.org/packages/c1/57/27f4fc025f36a94e2d91c81957bae51137c5ffc0ce32a8354de57d11747c/collective.behavior.talcondition-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "5b6ac8816957b7a7f644ac239a67c52a", "sha256": "81eb35265f0dfd7f9539e8a7d6775eb5057e2706c37d8658264c857ada6b36bd"}, "downloads": -1, "filename": "collective.behavior.talcondition-0.7.tar.gz", "has_sig": false, "md5_digest": "5b6ac8816957b7a7f644ac239a67c52a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18709, "upload_time": "2017-03-22T15:09:55", "upload_time_iso_8601": "2017-03-22T15:09:55.412883Z", "url": "https://files.pythonhosted.org/packages/80/19/eeaa851e79469324f9bba883359c35ef16b07751cca5be0b3a68f9c2a76a/collective.behavior.talcondition-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "d8f3360e89c9e1088ee6e0593e0e84fa", "sha256": "676eb5e15725b9d8dc87673ffd61b8f9b3b90ef3f3863de0806df1d0c12e018e"}, "downloads": -1, "filename": "collective.behavior.talcondition-0.8.tar.gz", "has_sig": false, "md5_digest": "d8f3360e89c9e1088ee6e0593e0e84fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19295, "upload_time": "2018-06-12T19:21:44", "upload_time_iso_8601": "2018-06-12T19:21:44.983801Z", "url": "https://files.pythonhosted.org/packages/5d/f9/458492019a7d572e4f49ce99a6b71b82b173532310ac75dd804212ec25d5/collective.behavior.talcondition-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "a61bf3304d50e0aadaf8427cf2c99dc0", "sha256": "2a6fc5aafc1bcfc0b40ef32492f7e80897c80d3987f9be9de8bb171d423cd387"}, "downloads": -1, "filename": "collective.behavior.talcondition-0.9.tar.gz", "has_sig": false, "md5_digest": "a61bf3304d50e0aadaf8427cf2c99dc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19526, "upload_time": "2018-10-12T12:38:15", "upload_time_iso_8601": "2018-10-12T12:38:15.009595Z", "url": "https://files.pythonhosted.org/packages/3a/68/0685d6195ef5aad21e43d1347402539582e7bac1c4a8acdcdb381aca6277/collective.behavior.talcondition-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "74b6becc7cc66b5e3ad4275e9baf4fad", "sha256": "252f132767241b22de52551907e845c78ec49bc3b92bd997d2b9d63b8877ca52"}, "downloads": -1, "filename": "collective.behavior.talcondition-0.11.tar.gz", "has_sig": false, "md5_digest": "74b6becc7cc66b5e3ad4275e9baf4fad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19939, "upload_time": "2019-05-16T12:50:27", "upload_time_iso_8601": "2019-05-16T12:50:27.109155Z", "url": "https://files.pythonhosted.org/packages/35/7e/b4f9695a581a97e3783c997fd82fae1e92f4627c4959f6efba1ccc39bc69/collective.behavior.talcondition-0.11.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:01 2020"}