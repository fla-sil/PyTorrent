{"info": {"author": "Andrey Avdeev", "author_email": "seorazer@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Convolut-Tensorboard\n```shell script\npip install convolut-tensorboard\n```\n![convolut](https://raw.githubusercontent.com/convolut/convolut-tensorboard/master/docs/img/logo.png)\n\n# What you get\n![what you get](https://raw.githubusercontent.com/convolut/convolut-tensorboard/master/docs/img/log_example.png)\n\n# Usage\n## Basic\n```python\n# ...\nfrom convolut import Runner\nfrom convolut_tensorboard import TensorboardLogger\n\n# ...\n\n(Runner(loaders=[train_loader, valid_loader], epochs=epochs)\n    # ...\n    .add(TensorboardLogger(folder=\"YOUR_FOLDER_FOR_TENSORBOARD_LOGS\"))\n    .start()\n)\n```\n\n## Environment variables\n* Telegram logger uses these envs for initialization\n\n```.env\nCONVOLUT_LOGGER_TENSORBOARD_FOLDER=logs/tensorboard # default\nCONVOLUT_LOGGER_TENSORBOARD_MODE=basic # default\n```\n\n* Now you can use it that way:\n```python\n# ...\nfrom convolut import Runner\nfrom convolut_tensorboard import TensorboardLogger\n\n# ...\n\n(Runner(loaders=[train_loader, valid_loader], epochs=epochs)\n    # ...\n    .add(TensorboardLogger())\n    .start()\n)\n```\n\n## Tensorboard Server\n```shell script\ntensorboard --logdir=YOUR_FOLDER_FOR_TENSORBOARD_LOGS\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/convolut/convolut-tensorboard", "keywords": "convolut tensorboard", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "convolut-tensorboard", "package_url": "https://pypi.org/project/convolut-tensorboard/", "platform": "", "project_url": "https://pypi.org/project/convolut-tensorboard/", "project_urls": {"Homepage": "https://github.com/convolut/convolut-tensorboard"}, "release_url": "https://pypi.org/project/convolut-tensorboard/0.0.2/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Tensorboard integrations for convolut framework", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Convolut-Tensorboard</h1>\n<pre>pip install convolut-tensorboard\n</pre>\n<p><img alt=\"convolut\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29daa5e43c65217be8c41e1fc50e4da5b70bc08f/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f636f6e766f6c75742f636f6e766f6c75742d74656e736f72626f6172642f6d61737465722f646f63732f696d672f6c6f676f2e706e67\"></p>\n<h1>What you get</h1>\n<p><img alt=\"what you get\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/44d0262082ac129ca725f3953709cc2634395d8a/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f636f6e766f6c75742f636f6e766f6c75742d74656e736f72626f6172642f6d61737465722f646f63732f696d672f6c6f675f6578616d706c652e706e67\"></p>\n<h1>Usage</h1>\n<h2>Basic</h2>\n<pre><span class=\"c1\"># ...</span>\n<span class=\"kn\">from</span> <span class=\"nn\">convolut</span> <span class=\"kn\">import</span> <span class=\"n\">Runner</span>\n<span class=\"kn\">from</span> <span class=\"nn\">convolut_tensorboard</span> <span class=\"kn\">import</span> <span class=\"n\">TensorboardLogger</span>\n\n<span class=\"c1\"># ...</span>\n\n<span class=\"p\">(</span><span class=\"n\">Runner</span><span class=\"p\">(</span><span class=\"n\">loaders</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">train_loader</span><span class=\"p\">,</span> <span class=\"n\">valid_loader</span><span class=\"p\">],</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"n\">epochs</span><span class=\"p\">)</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">TensorboardLogger</span><span class=\"p\">(</span><span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"s2\">\"YOUR_FOLDER_FOR_TENSORBOARD_LOGS\"</span><span class=\"p\">))</span>\n    <span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Environment variables</h2>\n<ul>\n<li>Telegram logger uses these envs for initialization</li>\n</ul>\n<pre>CONVOLUT_LOGGER_TENSORBOARD_FOLDER=logs/tensorboard # default\nCONVOLUT_LOGGER_TENSORBOARD_MODE=basic # default\n</pre>\n<ul>\n<li>Now you can use it that way:</li>\n</ul>\n<pre><span class=\"c1\"># ...</span>\n<span class=\"kn\">from</span> <span class=\"nn\">convolut</span> <span class=\"kn\">import</span> <span class=\"n\">Runner</span>\n<span class=\"kn\">from</span> <span class=\"nn\">convolut_tensorboard</span> <span class=\"kn\">import</span> <span class=\"n\">TensorboardLogger</span>\n\n<span class=\"c1\"># ...</span>\n\n<span class=\"p\">(</span><span class=\"n\">Runner</span><span class=\"p\">(</span><span class=\"n\">loaders</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">train_loader</span><span class=\"p\">,</span> <span class=\"n\">valid_loader</span><span class=\"p\">],</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"n\">epochs</span><span class=\"p\">)</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">TensorboardLogger</span><span class=\"p\">())</span>\n    <span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Tensorboard Server</h2>\n<pre>tensorboard --logdir<span class=\"o\">=</span>YOUR_FOLDER_FOR_TENSORBOARD_LOGS\n</pre>\n\n          </div>"}, "last_serial": 6400077, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "4cf3d549ebe42394ea3658fb23687f1c", "sha256": "da432b48f51bdef60b23a22952bbf409905151e12382813d01513112d0227e7f"}, "downloads": -1, "filename": "convolut_tensorboard-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4cf3d549ebe42394ea3658fb23687f1c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2944, "upload_time": "2020-01-06T00:51:58", "upload_time_iso_8601": "2020-01-06T00:51:58.598842Z", "url": "https://files.pythonhosted.org/packages/51/1e/121194e5271622438afe332384f59e08f4a0dc283786afd87feef8a0e0e6/convolut_tensorboard-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4cf3d549ebe42394ea3658fb23687f1c", "sha256": "da432b48f51bdef60b23a22952bbf409905151e12382813d01513112d0227e7f"}, "downloads": -1, "filename": "convolut_tensorboard-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4cf3d549ebe42394ea3658fb23687f1c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2944, "upload_time": "2020-01-06T00:51:58", "upload_time_iso_8601": "2020-01-06T00:51:58.598842Z", "url": "https://files.pythonhosted.org/packages/51/1e/121194e5271622438afe332384f59e08f4a0dc283786afd87feef8a0e0e6/convolut_tensorboard-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:26 2020"}