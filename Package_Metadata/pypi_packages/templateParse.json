{"info": {"author": "Ashish Kumar", "author_email": "hi.ashish.kr@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Data extractor for PDF invoices - templateparse\n==============================================\n\nDownload: \n    1. pip install templateparse\n       (Only one time): This will install all the dependency and library to be used later on.\n       \ninvoice.py: It conntans sample function to call template based parsing engine and persist in the database\n(import has to be modified as per the build folder location)\n    Function 1: parse_invoice(org_id, user_id, file_loc, type_of_invoice, template_folder)\n                Create dictionary \"row\" and returns True?false if it parse correctly\n                The function call: dump_data(organization_id, row, type_of_invoice) can be called\n                inside to save data.\n    Function 2: dump_data(organization_id, row, type_of_invoice)   \n\nGive location of template_folder else it will take default template location", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/konigle/templateparser", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "templateParse", "package_url": "https://pypi.org/project/templateParse/", "platform": "", "project_url": "https://pypi.org/project/templateParse/", "project_urls": {"Homepage": "https://github.com/konigle/templateparser"}, "release_url": "https://pypi.org/project/templateParse/0.1.200/", "requires_dist": null, "requires_python": "", "summary": "Python parser to extract data from pdf invoice", "version": "0.1.200", "yanked": false, "html_description": "<div class=\"project-description\">\n            Data extractor for PDF invoices - templateparse<br>==============================================<br><br>Download: <br>    1. pip install templateparse<br>       (Only one time): This will install all the dependency and library to be used later on.<br>       <br>invoice.py: It conntans sample function to call template based parsing engine and persist in the database<br>(import has to be modified as per the build folder location)<br>    Function 1: parse_invoice(org_id, user_id, file_loc, type_of_invoice, template_folder)<br>                Create dictionary \"row\" and returns True?false if it parse correctly<br>                The function call: dump_data(organization_id, row, type_of_invoice) can be called<br>                inside to save data.<br>    Function 2: dump_data(organization_id, row, type_of_invoice)   <br><br>Give location of template_folder else it will take default template location\n          </div>"}, "last_serial": 4230697, "releases": {"0.1.200": [{"comment_text": "", "digests": {"md5": "e12959b3226ad10df8a3280609926023", "sha256": "b4f7520fc15f854fc3b0235314e778a272ec6f410e3196b120eab2b1b8a762eb"}, "downloads": -1, "filename": "templateParse-0.1.200.tar.gz", "has_sig": false, "md5_digest": "e12959b3226ad10df8a3280609926023", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28139, "upload_time": "2018-09-02T07:17:10", "upload_time_iso_8601": "2018-09-02T07:17:10.651629Z", "url": "https://files.pythonhosted.org/packages/bc/8d/3f845b1803f6533b33dc5cb3aa10b4f942240fda9cc876d55069c833325d/templateParse-0.1.200.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e12959b3226ad10df8a3280609926023", "sha256": "b4f7520fc15f854fc3b0235314e778a272ec6f410e3196b120eab2b1b8a762eb"}, "downloads": -1, "filename": "templateParse-0.1.200.tar.gz", "has_sig": false, "md5_digest": "e12959b3226ad10df8a3280609926023", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28139, "upload_time": "2018-09-02T07:17:10", "upload_time_iso_8601": "2018-09-02T07:17:10.651629Z", "url": "https://files.pythonhosted.org/packages/bc/8d/3f845b1803f6533b33dc5cb3aa10b4f942240fda9cc876d55069c833325d/templateParse-0.1.200.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:43 2020"}