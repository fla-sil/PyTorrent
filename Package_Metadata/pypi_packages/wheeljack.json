{"info": {"author": "Jeroen Vloothuis", "author_email": "jeroen.vloothuis@xs4all.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Topic :: Software Development :: Build Tools"], "description": "Description\n===========\n\nWheeljack is an automated build system. It's main focus is\nsimplicity. Especially regarding work needed to setup the system or a\nnew project. To satisfy this requirement it handles configuration\nthrough a web interface. This means that setting up a new project\nshould be a matter of seconds.\n\nSupported version control systems\n=================================\n\nCurrently Wheeljack supports Bazaar_ and Subversion only. This is not\na hard requirement for the software. Support for other version control\nsystems can be added.\n\n.. _Bazaar: http://bazaar-vcs.org/\n\nInstallation\n============\n\nWheeljack can be installed use one of two methods. The first is to\nsetup everything yourself. The other is to use the provided\ninstallation template. People unfamiliar with Django are probably best\noff with an installation using the template. Read the next section on\nhow to use this template. The rest of this section assumes a certain\nfamiliarity with Django.\n\nTo use Wheeljack you can create a Django project. Wheeljack ships with\na pre-configured project you can use to import or copy from. The\napplication itself is a normal Django app. The already setup project\ncan be found under the `src/wheeljack/project` directory.\n\nYou can install the code by running `python2.5 setup.py`. This will\nalso create a script called `wheeljack`. That script is the build\nslave.\n\nThe build slave needs to be executed periodically. You could set it up\nto run uninterrupted or from a cron job. Please look at the options it\nsupports by executing::\n\n  $ wheeljack --help\n\n\nInstalling Wheeljack using the template\n=======================================\n\nTo easiest way to get started is to follow along with the instructions\nin this guide.\n\nDownload the `Wheeljack installation template`__. After extracting the\narchive you need to edit a few files.\n\n__ http://launchpad.net/wheeljack/trunk/0.2/+download/wheeljack-install.tgz\n\nOpen a terminal and execute the following line from within the\ndirectory that contains `buildout.cfg`::\n\n  $ python2.5 bootstrap.py\n\nThis will create a new script which will start with the\ninstallation. The installation can be ran as a normal system user and\nwill not try to install anything outside of it's current directory.\n\n  $ ./bin/buildout\n\nWithin the directory called `autobot` there is a file named\n`settings.py`. Open this file and change the settings for\n`EMAIL_HOST`, `DEFAULT_FROM_EMAIL`, `ADMINS`, `TIME_ZONE`,\n`LANGUAGE_CODE`, `BUILDER_USER` and `BUILDER_PASSWORD`. The last two\nitems should be set to the user you will create in the next section.\n\nCreate an initial database which will store the project info. This\nwill ask you to create a new admin user. Answer yes to this.\n\n  $ ./bin/django syncdb\n\nNow you are ready to start Wheeljack. This example configuration uses\nSupervisord to manage it's processes. Run the following command to\nstart both a builder and the web server.\n\n  $ ./bin/supervisord -c etc/supervisord.conf\n\nThe webserver is automatically started at port 8000. This can be\nchanged from the `etc/supervisord.conf` file.\n\nNow you can visit the Wheeljack-interface_. If everything works\nO.K. there is only one thing left to do. Please reopen\n`settings.py`. Remove or comment the line that says `DEBUG = True`.\n\n.. _Wheeljack-interface: http://localhost:8000\n\n\n0.4 - February 14 2009\n======================\n\n- A builder is started directly by forcing a build of a project. This\n  mean you don't have to wait until a scheduled build takes place.\n\n- Made it possible to specify the configuration as an alternative to\n  entering user name and password for the `wheeljack` command.\n\n- Fixed a problem where a forced build of a wrongly configured\n  repository would crash the builder.\n\n- A notification is send when a build starts working again (after at\n  least one failed build).\n\n- Added a migration system (South) for easier upgrading between\n  versions.\n\n0.3 - January 04 2009\n=====================\n\n- The builder no longer crashes when the server is not available.\n\n- Switched to Paster for the template based deployment. This is a much\n  better server than the default Django development server for\n  production use.\n\n- Fixed an error that caused the builder to crash when terminating a\n  hung build.\n\n- The build info for a project is now updated during a build. This\n  means that you can actually watch the build in progress.\n\n0.2 - January 01 2009\n=====================\n\n- Moved the base template to the project. This makes it easier to\n  override it for specific installations.\n\n- Added support for Subversion.\n\n- Changes to the project's settings will trigger a build regardless of\n  any updates to the version control system.\n\n- Made it possible to force a build from the project detail screen.\n\n0.1 - First release\n===================\n\n- Initial release of Wheeljack.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://launchpad.net/wheeljack", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "wheeljack", "package_url": "https://pypi.org/project/wheeljack/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/wheeljack/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://launchpad.net/wheeljack"}, "release_url": "https://pypi.org/project/wheeljack/0.4/", "requires_dist": null, "requires_python": null, "summary": "Wheeljack is a build system.", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"description\">\n<h2>Description</h2>\n<p>Wheeljack is an automated build system. It\u2019s main focus is\nsimplicity. Especially regarding work needed to setup the system or a\nnew project. To satisfy this requirement it handles configuration\nthrough a web interface. This means that setting up a new project\nshould be a matter of seconds.</p>\n</div>\n<div id=\"supported-version-control-systems\">\n<h2>Supported version control systems</h2>\n<p>Currently Wheeljack supports <a href=\"http://bazaar-vcs.org/\" rel=\"nofollow\">Bazaar</a> and Subversion only. This is not\na hard requirement for the software. Support for other version control\nsystems can be added.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Wheeljack can be installed use one of two methods. The first is to\nsetup everything yourself. The other is to use the provided\ninstallation template. People unfamiliar with Django are probably best\noff with an installation using the template. Read the next section on\nhow to use this template. The rest of this section assumes a certain\nfamiliarity with Django.</p>\n<p>To use Wheeljack you can create a Django project. Wheeljack ships with\na pre-configured project you can use to import or copy from. The\napplication itself is a normal Django app. The already setup project\ncan be found under the <cite>src/wheeljack/project</cite> directory.</p>\n<p>You can install the code by running <cite>python2.5 setup.py</cite>. This will\nalso create a script called <cite>wheeljack</cite>. That script is the build\nslave.</p>\n<p>The build slave needs to be executed periodically. You could set it up\nto run uninterrupted or from a cron job. Please look at the options it\nsupports by executing:</p>\n<pre>$ wheeljack --help\n</pre>\n</div>\n<div id=\"installing-wheeljack-using-the-template\">\n<h2>Installing Wheeljack using the template</h2>\n<p>To easiest way to get started is to follow along with the instructions\nin this guide.</p>\n<p>Download the <a href=\"http://launchpad.net/wheeljack/trunk/0.2/+download/wheeljack-install.tgz\" rel=\"nofollow\">Wheeljack installation template</a>. After extracting the\narchive you need to edit a few files.</p>\n<p>Open a terminal and execute the following line from within the\ndirectory that contains <cite>buildout.cfg</cite>:</p>\n<pre>$ python2.5 bootstrap.py\n</pre>\n<p>This will create a new script which will start with the\ninstallation. The installation can be ran as a normal system user and\nwill not try to install anything outside of it\u2019s current directory.</p>\n<blockquote>\n$ ./bin/buildout</blockquote>\n<p>Within the directory called <cite>autobot</cite> there is a file named\n<cite>settings.py</cite>. Open this file and change the settings for\n<cite>EMAIL_HOST</cite>, <cite>DEFAULT_FROM_EMAIL</cite>, <cite>ADMINS</cite>, <cite>TIME_ZONE</cite>,\n<cite>LANGUAGE_CODE</cite>, <cite>BUILDER_USER</cite> and <cite>BUILDER_PASSWORD</cite>. The last two\nitems should be set to the user you will create in the next section.</p>\n<p>Create an initial database which will store the project info. This\nwill ask you to create a new admin user. Answer yes to this.</p>\n<blockquote>\n$ ./bin/django syncdb</blockquote>\n<p>Now you are ready to start Wheeljack. This example configuration uses\nSupervisord to manage it\u2019s processes. Run the following command to\nstart both a builder and the web server.</p>\n<blockquote>\n$ ./bin/supervisord -c etc/supervisord.conf</blockquote>\n<p>The webserver is automatically started at port 8000. This can be\nchanged from the <cite>etc/supervisord.conf</cite> file.</p>\n<p>Now you can visit the <a href=\"http://localhost:8000\" rel=\"nofollow\">Wheeljack-interface</a>. If everything works\nO.K. there is only one thing left to do. Please reopen\n<cite>settings.py</cite>. Remove or comment the line that says <cite>DEBUG = True</cite>.</p>\n</div>\n<div id=\"february-14-2009\">\n<h2>0.4 - February 14 2009</h2>\n<ul>\n<li>A builder is started directly by forcing a build of a project. This\nmean you don\u2019t have to wait until a scheduled build takes place.</li>\n<li>Made it possible to specify the configuration as an alternative to\nentering user name and password for the <cite>wheeljack</cite> command.</li>\n<li>Fixed a problem where a forced build of a wrongly configured\nrepository would crash the builder.</li>\n<li>A notification is send when a build starts working again (after at\nleast one failed build).</li>\n<li>Added a migration system (South) for easier upgrading between\nversions.</li>\n</ul>\n</div>\n<div id=\"january-04-2009\">\n<h2>0.3 - January 04 2009</h2>\n<ul>\n<li>The builder no longer crashes when the server is not available.</li>\n<li>Switched to Paster for the template based deployment. This is a much\nbetter server than the default Django development server for\nproduction use.</li>\n<li>Fixed an error that caused the builder to crash when terminating a\nhung build.</li>\n<li>The build info for a project is now updated during a build. This\nmeans that you can actually watch the build in progress.</li>\n</ul>\n</div>\n<div id=\"january-01-2009\">\n<h2>0.2 - January 01 2009</h2>\n<ul>\n<li>Moved the base template to the project. This makes it easier to\noverride it for specific installations.</li>\n<li>Added support for Subversion.</li>\n<li>Changes to the project\u2019s settings will trigger a build regardless of\nany updates to the version control system.</li>\n<li>Made it possible to force a build from the project detail screen.</li>\n</ul>\n</div>\n<div id=\"first-release\">\n<h2>0.1 - First release</h2>\n<ul>\n<li>Initial release of Wheeljack.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 89758, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2624a4511aec4bec1d548bf8f0945c0e", "sha256": "0afe24feee798bb6217b1aed7cfbe4081934aafb84d790f38e83dba1e68ac116"}, "downloads": -1, "filename": "wheeljack-0.1.tar.gz", "has_sig": false, "md5_digest": "2624a4511aec4bec1d548bf8f0945c0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23496, "upload_time": "2008-12-26T00:10:27", "upload_time_iso_8601": "2008-12-26T00:10:27Z", "url": "https://files.pythonhosted.org/packages/5c/97/0073d310c2886b479c38b536cf61ca54ca00724c67bad7ec491a275f50cd/wheeljack-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "133b010587ba1b4dcc58514df75aeb85", "sha256": "b896f18c5c983a3c658125f4ab9bcbed8a383c767e525259efb78fff3a7ed1c7"}, "downloads": -1, "filename": "wheeljack-0.2.tar.gz", "has_sig": false, "md5_digest": "133b010587ba1b4dcc58514df75aeb85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32401, "upload_time": "2009-01-01T22:42:31", "upload_time_iso_8601": "2009-01-01T22:42:31Z", "url": "https://files.pythonhosted.org/packages/48/2a/fe617619597616d13afbc6dc9ac769139b8cf462f89f059f1333567befbb/wheeljack-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "1054b0d439795bc3c14899c2719ee58f", "sha256": "aad9ad7f618d4dec782249b6581d42c197eaaaf2ba96f10230bd808c3398aa88"}, "downloads": -1, "filename": "wheeljack-0.3.tar.gz", "has_sig": false, "md5_digest": "1054b0d439795bc3c14899c2719ee58f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56273, "upload_time": "2009-01-04T20:04:04", "upload_time_iso_8601": "2009-01-04T20:04:04Z", "url": "https://files.pythonhosted.org/packages/ed/e9/e05de1ee72bc95d389a28631f28623504d8eb70cb1a0b7b5f9f6d75f89a9/wheeljack-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "5f0911e64a2230ed9d4592497bc192bb", "sha256": "a0ce6db4019bccb4bc902182d5ab59d96e15e8696f643f75b1cc3f90d21137d5"}, "downloads": -1, "filename": "wheeljack-0.4.tar.gz", "has_sig": false, "md5_digest": "5f0911e64a2230ed9d4592497bc192bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62084, "upload_time": "2009-02-14T00:04:59", "upload_time_iso_8601": "2009-02-14T00:04:59.104712Z", "url": "https://files.pythonhosted.org/packages/1d/72/9c6ad008336af0102441d4a9869f11867fb1ec4d5a5fab3a1100d0eda602/wheeljack-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f0911e64a2230ed9d4592497bc192bb", "sha256": "a0ce6db4019bccb4bc902182d5ab59d96e15e8696f643f75b1cc3f90d21137d5"}, "downloads": -1, "filename": "wheeljack-0.4.tar.gz", "has_sig": false, "md5_digest": "5f0911e64a2230ed9d4592497bc192bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62084, "upload_time": "2009-02-14T00:04:59", "upload_time_iso_8601": "2009-02-14T00:04:59.104712Z", "url": "https://files.pythonhosted.org/packages/1d/72/9c6ad008336af0102441d4a9869f11867fb1ec4d5a5fab3a1100d0eda602/wheeljack-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:29:50 2020"}