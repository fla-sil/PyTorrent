{"info": {"author": "Trevor Ba\u010da, Josiah Wolf Oberholtzer, V\u00edctor Ad\u00e1n", "author_email": "trevor.baca@gmail.com, josiah.oberholtzer@gmail.com, contact@victoradan.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Artistic Software"], "description": "#####\nAbjad\n#####\n\nAbjad helps composers build up complex pieces of music notation in an iterative\nand incremental way. Use Abjad to create symbolic representations of all the\nnotes, rests, staves, tuplets, beams and slurs in any score. Because Abjad\nextends the `Python`_ programming language, you can use Abjad to make\nsystematic changes to your music as you work. And because Abjad wraps the\npowerful `LilyPond`_ music notation package, you can use Abjad to control the\ntypographic details of the symbols on the page.\n\n..  _LilyPond: http://lilypond.org/\n..  _Python: https://www.python.org/\n\n`GitHub`_ |\n`PyPI`_ |\n`Documentation <https://abjad.github.io/>`_ |\n`Mailing list <http://groups.google.com/group/abjad-user>`_ |\n`Issue Tracker <https://github.com/Abjad/abjad/issues>`_ |\n`Travis-CI <https://travis-ci.org/Abjad/abjad>`_\n\n..  _GitHub: https://github.com/Abjad/abjad\n..  _PyPI: https://pypi.python.org/pypi/Abjad\n\n..  image:: https://img.shields.io/travis/Abjad/abjad/master.svg?style=flat-square\n    :target: https://travis-ci.org/Abjad/abjad\n\n..  image:: https://img.shields.io/coveralls/Abjad/abjad/master.svg?style=flat-square\n    :target: https://coveralls.io/r/Abjad/abjad\n\n..  image:: https://img.shields.io/pypi/v/abjad.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/abjad\n\n..  image:: https://img.shields.io/pypi/dm/abjad.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/abjad\n\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\nInstallation\n============\n\nAbjad works on Unix/Linux, OSX, and Windows on Python versions 3.6+.\n\nInstall Abjad\n-------------\n\nTo install the most recent official release of Abjad from `PyPI`_, the Python\nPackage Index, via `pip`_:\n\n..  code-block:: bash\n\n    ~$ sudo pip install abjad\n\n**Caution**:\n\n    We strongly encourage you to *not* install Abjad globally via ``sudo pip\n    install``, but to use a virtual environment instead. If you're already\n    working in a virtual environment, simply omit the ``sudo``.\n\n**Note**:\n\n    Abjad supports Python 3.6 and above.\n\nTo install the cutting-edge version Abjad from its `GitHub`_ repository, via\n`git <https://git-scm.com/>`_ and `pip`_:\n\n..  code-block:: bash\n\n    ~$ git clone https://github.com/Abjad/abjad.git \n    ~$ cd abjad\n    abjad$ pip install .\n\nOnce you have Abjad installed, fire up Python and import it:\n\n..  code-block:: bash\n\n    ~$ python\n    Python 3.6.5 (v3.6.5:f59c0932b4, Mar 28 2018, 03:03:55) \n    [GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\n    Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n    >>> import abjad\n    >>> abjad.__version__\n    '3.1.0'\n\nCongratulations!\n\nInstall LilyPond\n````````````````\n\nAbjad uses `LilyPond`_, an open-source automated engraving engine, to produce\nnotational output.\n\nAbjad targets whichever is the most recent version of `LilyPond`_. At the time\nof this writing, that means 2.18-stable or 2.19-development. We recommend\ninstalling directly from `LilyPond`_'s website, rather than using whichever\nversion of `LilyPond`_ your package manager provides, as these packages are\noften out-of-date.\n\nOnce you have installed LilyPond, test if LilyPond is callable from your\ncommand-line by running the following command:\n\n..  code-block:: bash\n\n    ~$ lilypond --version\n\n    GNU LilyPond 2.19.82\n\n    Copyright (c) 1996--2015 by\n      Han-Wen Nienhuys <hanwen@xs4all.nl>\n      Jan Nieuwenhuizen <janneke@gnu.org>\n      and others.\n\n    This program is free software.  It is covered by the GNU General Public\n    License and you are welcome to change it and/or distribute copies of it\n    under certain conditions.  Invoke as `lilypond --warranty` for more\n    information.\n\nIf LilyPond is not callable from your command-line, you should add the location\nof the LilyPond executable to your ``PATH`` environment variable. If you are\nusing OSX, simply run the following line in your terminal:\n\n..  code-block:: bash\n\n    export PATH=\"$PATH:/Applications/LilyPond.app/Contents/Resources/bin/\"\n\nYou can add the above line to your ``~/.profile`` to make the change permanent.\n\nThe `LilyPond`_ documentation also provides instructions for making the\n``lilypond`` command available on the command-line under OSX at\nhttp://www.lilypond.org/macos-x.html.\n\nIf you are new to working with the command-line you should use Google to\nget a basic introduction to navigating in the shell, editing your profile and\nsetting environment variables. There are more tutorials than we can count!\n\nInstall Graphviz (optional)\n```````````````````````````\n\nAbjad uses `Graphviz`_, an open-source graph visualization library, to create\ngraphs of rhythm-trees and other tree structures, and to create visualizations\nof class hierarchies for its documentation. Graphviz is not necessary for\ncreating notation with Abjad.\n\nTo install `Graphviz`_ on Debian and Ubuntu:\n\n..  code-block:: bash\n\n    ~$ sudo apt-get install graphviz\n\nTo install `Graphviz`_ on OSX via `Homebrew`_:\n\n..  code-block:: bash\n\n    ~$ brew install graphviz\n\nOnce you have install `Graphviz`_, test if `Graphviz`_ is callable from your\ncommand-line by running the following command:\n\n..  code-block:: bash\n\n    ~$ dot -V\n    dot - graphviz version 2.38.0 (20140413.2041)\n\nAll of the graph images in Abjad's API documentation were created via\n`graphviz`_. See ``abjad.top.graph`` for more details.\n\nInstall extension packages\n--------------------------\n\nAbjad's extension packages can be installed via the following commands:\n\n..  code-block:: bash\n\n    ~$ pip install abjad[cli]       # score package command-line tools \n    ~$ pip install abjad[ipython]   # ipython integration \n    ~$ pip install abjad[nauert]    # quantization tools\n    ~$ pip install abjad[rmakers]   # rhythm-maker tools\n    ~$ pip install abjad[tonality]  # tonal analysis tools\n\nDevelopment installation\n------------------------\n\nTo perform development on Abjad, run the test suite, or build Abjad's\ndocumentation locally, clone Abjad from the Github repository and install it in\n**edit mode** with its **development extras**:\n\n..  code-block:: bash\n\n    ~$ git clone https://github.com/Abjad/abjad.git\n    ~$ cd abjad\n    abjad$ sudo pip install -e .[test]  # NOTE: no spaces in the string after \"install\"\n\nInstalling Abjad in development mode will install the following `Python`_\npackage dependencies (along with their own dependencies):\n\n-   `pytest`_, for running Abjad's test suite\n\n-   `Sphinx`_, for building Abjad's documentation\n\nSome of `Sphinx`_'s dependencies provide optional optimized `Python`_\nextensions, which must be compiled before they can be used. If your machine\ndoes not have a C compiler available, you may see error message while the ``pip\ninstall -e \".[development]\"`` command runs. These warnings are harmless and will\nnot prevent the dependencies from being installed.\n\nTo install C compilation tools on Debian and Ubuntu:\n\n..  code-block:: bash\n\n    ~$ sudo apt-get install build-essential\n\nTo install C compilation tools on OSX, we recommend simply installing XCode\nfrom the Apple App Store. Alternatively, you can install via `Homebrew`_\nalthough this may take a significant amount of time.\n\nAdditionally, a few non-`Python`_ tools need to be installed in order to\ndevelop Abjad or build its documentation, such as `Graphviz`_ (which was\nexplained above).\n\nAbjad and IPython\n-----------------\n\nAbjad can be used with `IPython`_ to embed notation, graphs and audio into an\n`IPython notebook`_. To work with Abjad in `IPython`_, install Abjad with both\nits **development** and **ipython** extra dependencies:\n\n..  code-block:: bash\n\n    ~$ sudo pip install abjad[ipython]  # NOTE: no spaces in the string after \"install\"\n\nCapturing MIDI files into an `IPython notebook`_ requires the `timidity`_\npackage.\n\nTo install `timidity`_ on Debian or Ubuntu:\n\n..  code-block:: bash\n\n    ~$ apt-get install timidity\n\nTo install `timidity`_ on OSX via `Homebrew`_:\n\n..  code-block:: bash\n\n    ~$ brew install timidity\n\nOnce all dependencies have been installed, create a new `IPython notebook`_ and\nrun the following \"magic\" command in a cell to load Abjad's `IPython`_\nextension::\n\n    %load_ext abjadext.ipython\n\nOnce loaded, notation and MIDI files can be embedded in your notebook whenever\nyou use `show(...)` and `play(...)` on valid Abjad objects.\n\n..  _virtual-environments:\n\nVirtual environments\n--------------------\n\nWe strongly recommend installing Abjad into a virtual environment, especially\nif you intend to hack on Abjad's own source code. Virtual environments allow\nyou to isolate `Python`_ packages from your systems global collection of\npackages. They also allow you to install Python packages without ``sudo``. The\n`virtualenv`_ package provides tools for creating Python virtual environments,\nand the `virtualenvwrapper`_ package provides additional tools which make\nworking with virtual environments incredibly easy.\n\nLet's install `virtualenvwrapper`_:\n\n..  code-block:: bash\n\n    ~$ sudo pip install virtualenvwrapper\n    ...\n\n**Note**:\n\n    On OSX 10.11 (El Capitan) it may be necessary to install\n    `virtualenvwrapper`_ via alternate instructions:\n\n    ..  code-block:: bash\n\n        ~$ pip install virtualenvwrapper --ignore-installed six\n\n    See\n    `here <http://stackoverflow.com/questions/32086631/cant-install-virtualenvwrapper-on-osx-10-11-el-capitan>`_\n    for details.\n\nNext, set an environment variable in your shell naming the directory you want\nthe virtual environment files to be stored in, then create that directory if it\ndoesn't already exist:\n\n..  code-block:: bash\n\n    ~$ export WORKON_HOME=~/.virtualenvs\n    ~$ mkdir -p $WORKON_HOME\n\n**Note**:\n\n    The location your virtual environment files are stored in could be\n    anywhere. Because you are unlikely to need to access them directly, we\n    suggest the `.`-prepended path ``.virtualenvs``.\n\nWith the virtual environment directory created, \"source\" `virtualenvwrapper`_'s\nscript. This script teaches your shell about how to create, activate and delete\nvirtual environments:\n\n..  code-block:: bash\n\n    ~$ source `which virtualenvwrapper.sh`\n\nFinally, you can create a virtual environment via the ``mkvirtualenv`` command.\nThis will both create the fresh environment and \"activate\" it. Once activated,\nyou can install Python packages within that environment, safe in the knowledge\nthat they won't interfere with Python packages installed anywhere else on your\nsystem:\n\n..  code-block:: bash\n\n    ~$ mkvirtualenv abjad\n    ...\n    ~(abjad)$ pip install abjad  # \"(abjad)\" indicates the name of the virtualenv\n    ...\n\nYou can also deactivate the current virtual environment via the ``deactivate``\ncommand, or switch to a different environment via the ``workon <virtualenv\nname>`` command:\n\n..  code-block:: bash\n\n    ~(abjad)$ deactivate\n    ~$ workon my-new-score\n    ~(my-new-score)$\n\nTo make the virtual environment configuration sticky from terminal session to\nterminal session, add the following lines to your ``~/.profile``,\n``~/.bash_profile`` or similar shell configuration file:\n\n..  code-block:: bash\n\n    export WORKON_HOME=$HOME/.virtualenvs\n    source `which virtualenvwrapper.sh`\n\nDevelopment installation within a virtualenv\n````````````````````````````````````````````\n\nTo recap, a complete development installation of Abjad within a virtual\nenvironment requires the following steps:\n\n- Create and activate a new virtual environment\n- Clone Abjad somewhere and ``cd`` into the root of the cloned repository\n- Install Abjad and its development / IPython dependencies\n\n..  code-block:: bash\n\n    ~$ mkvirtualenv abjad\n    ...\n    ~(abjad)$ git clone https://github.com/Abjad/abjad.git\n    ~(abjad)$ cd abjad\n    abjad(abjad)$ pip install -e .[development,ipython]  # NOTE: no spaces between \".\" and \"[development,ipython]\"\n    ...\n\nConfiguring Abjad\n-----------------\n\nAbjad creates a ``~/.abjad`` directory the first time it runs. In the\n``~/.abjad`` directory you will find an ``abjad.cfg`` file. This is the Abjad\nconfiguration file. You can use the Abjad configuration file to tell Abjad\nabout your preferred PDF file viewer, MIDI player, LilyPond language and so on.\n\nYour configuration file will look something like this the first time you open\nit::\n\n    # Abjad configuration file created by Abjad on 31 January 2014 00:08:17.\n    # File is interpreted by ConfigObj and should follow ini syntax.\n\n    # Set to the directory where all Abjad-generated files\n    # (such as PDFs and LilyPond files) should be saved.\n    # Defaults to $HOME.abjad/output/\n    abjad_output_directory = /Users/username/.abjad/output\n\n    # Comma-separated list of LilyPond files that \n    # Abjad will \"\\include\" in all generated *.ly files\n    lilypond_includes = ,\n\n    # Language to use in all generated LilyPond files.\n    lilypond_language = english\n\n    # Lilypond executable path. Set to override dynamic lookup.\n    lilypond_path = lilypond\n\n    # MIDI player to open MIDI files.\n    # When unset your OS should know how to open MIDI files.\n    midi_player = \n\n    # PDF viewer to open PDF files.\n    # When unset your OS should know how to open PDFs.\n    pdf_viewer = \n\n    # Text editor to edit text files.\n    # When unset your OS should know how to open text files.\n    text_editor = \n\nFollow the basics of ``ini`` syntax when editing the Abjad configuration file.\nBackground information is available at http://en.wikipedia.org/wiki/INI_file.\nUnder MacOS you might want to set you ``midi_player`` to iTunes. Under Linux\nyou might want to set your ``pdf_viewer`` to ``evince`` and your\n``midi_player`` to ``tiMIDIty``, and so on.\n\n..  _CPython: http://www.python.org\n..  _GitHub: https://github.com/Abjad/abjad\n..  _Graphviz: http://graphviz.org/\n..  _Homebrew: http://brew.sh/\n..  _IPython notebook: http://ipython.org/notebook.html\n..  _IPython: http://ipython.org/\n..  _LilyPond: http://lilypond.org/\n..  _PyPI: https://pypi.python.org/pypi/Abjad\n..  _Python: https://www.python.org/\n..  _Sphinx: http://sphinx-doc.org/\n..  _timidity: http://timidity.sourceforge.net/\n..  _pip: https://pip.pypa.io/en/stable/\n..  _pytest: http://pytest.org/latest/\n..  _virtualenv: https://readthedocs.org/projects/virtualenv/\n..  _virtualenvwrapper: https://virtualenvwrapper.readthedocs.org/en/latest/", "description_content_type": "text/x-rst", "docs_url": "https://pythonhosted.org/Abjad/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://abjad.github.io", "keywords": "music composition,music notation,formalized score control,lilypond", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Abjad", "package_url": "https://pypi.org/project/Abjad/", "platform": "Any", "project_url": "https://pypi.org/project/Abjad/", "project_urls": {"Homepage": "https://abjad.github.io"}, "release_url": "https://pypi.org/project/Abjad/3.1/", "requires_dist": null, "requires_python": "", "summary": "Abjad is a Python API for Formalized Score Control.", "version": "3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Abjad helps composers build up complex pieces of music notation in an iterative\nand incremental way. Use Abjad to create symbolic representations of all the\nnotes, rests, staves, tuplets, beams and slurs in any score. Because Abjad\nextends the <a href=\"https://www.python.org/\" rel=\"nofollow\">Python</a> programming language, you can use Abjad to make\nsystematic changes to your music as you work. And because Abjad wraps the\npowerful <a href=\"http://lilypond.org/\" rel=\"nofollow\">LilyPond</a> music notation package, you can use Abjad to control the\ntypographic details of the symbols on the page.</p>\n<p><a href=\"https://github.com/Abjad/abjad\" rel=\"nofollow\">GitHub</a> |\n<a href=\"https://pypi.python.org/pypi/Abjad\" rel=\"nofollow\">PyPI</a> |\n<a href=\"https://abjad.github.io/\" rel=\"nofollow\">Documentation</a> |\n<a href=\"http://groups.google.com/group/abjad-user\" rel=\"nofollow\">Mailing list</a> |\n<a href=\"https://github.com/Abjad/abjad/issues\" rel=\"nofollow\">Issue Tracker</a> |\n<a href=\"https://travis-ci.org/Abjad/abjad\" rel=\"nofollow\">Travis-CI</a></p>\n<a href=\"https://travis-ci.org/Abjad/abjad\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/Abjad/abjad/master.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ccb96ce314fc294c39230c175342502b32741a3b/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f41626a61642f61626a61642f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://coveralls.io/r/Abjad/abjad\" rel=\"nofollow\"><img alt=\"https://img.shields.io/coveralls/Abjad/abjad/master.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b7d113ef57bbd7e836b3317f19c08051b8de229d/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f41626a61642f61626a61642f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.python.org/pypi/abjad\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/abjad.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/93d42e46bd33374f03f9b30aeeafe67869cf9795/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61626a61642e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.python.org/pypi/abjad\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/dm/abjad.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40c4a0a005d8d1f3b4192f78a01368e1e4fab104/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f61626a61642e7376673f7374796c653d666c61742d737175617265\"></a>\n<p>[![Code style: black](<a href=\"https://img.shields.io/badge/code%20style-black-000000.svg)%5D(https://github.com/ambv/black\" rel=\"nofollow\">https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black</a>)</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Abjad works on Unix/Linux, OSX, and Windows on Python versions 3.6+.</p>\n<div id=\"install-abjad\">\n<h3>Install Abjad</h3>\n<p>To install the most recent official release of Abjad from <a href=\"https://pypi.python.org/pypi/Abjad\" rel=\"nofollow\">PyPI</a>, the Python\nPackage Index, via <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a>:</p>\n<pre>~$ sudo pip install abjad\n</pre>\n<p><strong>Caution</strong>:</p>\n<blockquote>\nWe strongly encourage you to <em>not</em> install Abjad globally via <tt>sudo pip\ninstall</tt>, but to use a virtual environment instead. If you\u2019re already\nworking in a virtual environment, simply omit the <tt>sudo</tt>.</blockquote>\n<p><strong>Note</strong>:</p>\n<blockquote>\nAbjad supports Python 3.6 and above.</blockquote>\n<p>To install the cutting-edge version Abjad from its <a href=\"https://github.com/Abjad/abjad\" rel=\"nofollow\">GitHub</a> repository, via\n<a href=\"https://git-scm.com/\" rel=\"nofollow\">git</a> and <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a>:</p>\n<pre>~$ git clone https://github.com/Abjad/abjad.git\n~$ <span class=\"nb\">cd</span> abjad\nabjad$ pip install .\n</pre>\n<p>Once you have Abjad installed, fire up Python and import it:</p>\n<pre>~$ python\nPython <span class=\"m\">3</span>.6.5 <span class=\"o\">(</span>v3.6.5:f59c0932b4, Mar <span class=\"m\">28</span> <span class=\"m\">2018</span>, <span class=\"m\">03</span>:03:55<span class=\"o\">)</span>\n<span class=\"o\">[</span>GCC <span class=\"m\">4</span>.2.1 <span class=\"o\">(</span>Apple Inc. build <span class=\"m\">5666</span><span class=\"o\">)</span> <span class=\"o\">(</span>dot <span class=\"m\">3</span><span class=\"o\">)]</span> on darwin\nType <span class=\"s2\">\"help\"</span>, <span class=\"s2\">\"copyright\"</span>, <span class=\"s2\">\"credits\"</span> or <span class=\"s2\">\"license\"</span> <span class=\"k\">for</span> more information.\n&gt;&gt;&gt; import abjad\n&gt;&gt;&gt; abjad.__version__\n<span class=\"s1\">'3.1.0'</span>\n</pre>\n<p>Congratulations!</p>\n<div id=\"install-lilypond\">\n<h4>Install LilyPond</h4>\n<p>Abjad uses <a href=\"http://lilypond.org/\" rel=\"nofollow\">LilyPond</a>, an open-source automated engraving engine, to produce\nnotational output.</p>\n<p>Abjad targets whichever is the most recent version of <a href=\"http://lilypond.org/\" rel=\"nofollow\">LilyPond</a>. At the time\nof this writing, that means 2.18-stable or 2.19-development. We recommend\ninstalling directly from <a href=\"http://lilypond.org/\" rel=\"nofollow\">LilyPond</a>\u2019s website, rather than using whichever\nversion of <a href=\"http://lilypond.org/\" rel=\"nofollow\">LilyPond</a> your package manager provides, as these packages are\noften out-of-date.</p>\n<p>Once you have installed LilyPond, test if LilyPond is callable from your\ncommand-line by running the following command:</p>\n<pre>~$ lilypond --version\n\nGNU LilyPond <span class=\"m\">2</span>.19.82\n\nCopyright <span class=\"o\">(</span>c<span class=\"o\">)</span> <span class=\"m\">1996</span>--2015 by\n  Han-Wen Nienhuys &lt;hanwen@xs4all.nl&gt;\n  Jan Nieuwenhuizen &lt;janneke@gnu.org&gt;\n  and others.\n\nThis program is free software.  It is covered by the GNU General Public\nLicense and you are welcome to change it and/or distribute copies of it\nunder certain conditions.  Invoke as <span class=\"sb\">`</span>lilypond --warranty<span class=\"sb\">`</span> <span class=\"k\">for</span> more\ninformation.\n</pre>\n<p>If LilyPond is not callable from your command-line, you should add the location\nof the LilyPond executable to your <tt>PATH</tt> environment variable. If you are\nusing OSX, simply run the following line in your terminal:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">PATH</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$PATH</span><span class=\"s2\">:/Applications/LilyPond.app/Contents/Resources/bin/\"</span>\n</pre>\n<p>You can add the above line to your <tt><span class=\"pre\">~/.profile</span></tt> to make the change permanent.</p>\n<p>The <a href=\"http://lilypond.org/\" rel=\"nofollow\">LilyPond</a> documentation also provides instructions for making the\n<tt>lilypond</tt> command available on the command-line under OSX at\n<a href=\"http://www.lilypond.org/macos-x.html\" rel=\"nofollow\">http://www.lilypond.org/macos-x.html</a>.</p>\n<p>If you are new to working with the command-line you should use Google to\nget a basic introduction to navigating in the shell, editing your profile and\nsetting environment variables. There are more tutorials than we can count!</p>\n</div>\n<div id=\"install-graphviz-optional\">\n<h4>Install Graphviz (optional)</h4>\n<p>Abjad uses <a href=\"http://graphviz.org/\" rel=\"nofollow\">Graphviz</a>, an open-source graph visualization library, to create\ngraphs of rhythm-trees and other tree structures, and to create visualizations\nof class hierarchies for its documentation. Graphviz is not necessary for\ncreating notation with Abjad.</p>\n<p>To install <a href=\"http://graphviz.org/\" rel=\"nofollow\">Graphviz</a> on Debian and Ubuntu:</p>\n<pre>~$ sudo apt-get install graphviz\n</pre>\n<p>To install <a href=\"http://graphviz.org/\" rel=\"nofollow\">Graphviz</a> on OSX via <a href=\"http://brew.sh/\" rel=\"nofollow\">Homebrew</a>:</p>\n<pre>~$ brew install graphviz\n</pre>\n<p>Once you have install <a href=\"http://graphviz.org/\" rel=\"nofollow\">Graphviz</a>, test if <a href=\"http://graphviz.org/\" rel=\"nofollow\">Graphviz</a> is callable from your\ncommand-line by running the following command:</p>\n<pre>~$ dot -V\ndot - graphviz version <span class=\"m\">2</span>.38.0 <span class=\"o\">(</span><span class=\"m\">20140413</span>.2041<span class=\"o\">)</span>\n</pre>\n<p>All of the graph images in Abjad\u2019s API documentation were created via\n<a href=\"http://graphviz.org/\" rel=\"nofollow\">graphviz</a>. See <tt>abjad.top.graph</tt> for more details.</p>\n</div>\n</div>\n<div id=\"install-extension-packages\">\n<h3>Install extension packages</h3>\n<p>Abjad\u2019s extension packages can be installed via the following commands:</p>\n<pre>~$ pip install abjad<span class=\"o\">[</span>cli<span class=\"o\">]</span>       <span class=\"c1\"># score package command-line tools\n</span>~$ pip install abjad<span class=\"o\">[</span>ipython<span class=\"o\">]</span>   <span class=\"c1\"># ipython integration\n</span>~$ pip install abjad<span class=\"o\">[</span>nauert<span class=\"o\">]</span>    <span class=\"c1\"># quantization tools\n</span>~$ pip install abjad<span class=\"o\">[</span>rmakers<span class=\"o\">]</span>   <span class=\"c1\"># rhythm-maker tools\n</span>~$ pip install abjad<span class=\"o\">[</span>tonality<span class=\"o\">]</span>  <span class=\"c1\"># tonal analysis tools</span>\n</pre>\n</div>\n<div id=\"development-installation\">\n<h3>Development installation</h3>\n<p>To perform development on Abjad, run the test suite, or build Abjad\u2019s\ndocumentation locally, clone Abjad from the Github repository and install it in\n<strong>edit mode</strong> with its <strong>development extras</strong>:</p>\n<pre>~$ git clone https://github.com/Abjad/abjad.git\n~$ <span class=\"nb\">cd</span> abjad\nabjad$ sudo pip install -e .<span class=\"o\">[</span>test<span class=\"o\">]</span>  <span class=\"c1\"># NOTE: no spaces in the string after \"install\"</span>\n</pre>\n<p>Installing Abjad in development mode will install the following <a href=\"https://www.python.org/\" rel=\"nofollow\">Python</a>\npackage dependencies (along with their own dependencies):</p>\n<ul>\n<li><a href=\"http://pytest.org/latest/\" rel=\"nofollow\">pytest</a>, for running Abjad\u2019s test suite</li>\n<li><a href=\"http://sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a>, for building Abjad\u2019s documentation</li>\n</ul>\n<p>Some of <a href=\"http://sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a>\u2019s dependencies provide optional optimized <a href=\"https://www.python.org/\" rel=\"nofollow\">Python</a>\nextensions, which must be compiled before they can be used. If your machine\ndoes not have a C compiler available, you may see error message while the <tt>pip\ninstall <span class=\"pre\">-e</span> <span class=\"pre\">\".[development]\"</span></tt> command runs. These warnings are harmless and will\nnot prevent the dependencies from being installed.</p>\n<p>To install C compilation tools on Debian and Ubuntu:</p>\n<pre>~$ sudo apt-get install build-essential\n</pre>\n<p>To install C compilation tools on OSX, we recommend simply installing XCode\nfrom the Apple App Store. Alternatively, you can install via <a href=\"http://brew.sh/\" rel=\"nofollow\">Homebrew</a>\nalthough this may take a significant amount of time.</p>\n<p>Additionally, a few non-<a href=\"https://www.python.org/\" rel=\"nofollow\">Python</a> tools need to be installed in order to\ndevelop Abjad or build its documentation, such as <a href=\"http://graphviz.org/\" rel=\"nofollow\">Graphviz</a> (which was\nexplained above).</p>\n</div>\n<div id=\"abjad-and-ipython\">\n<h3>Abjad and IPython</h3>\n<p>Abjad can be used with <a href=\"http://ipython.org/\" rel=\"nofollow\">IPython</a> to embed notation, graphs and audio into an\n<a href=\"http://ipython.org/notebook.html\" rel=\"nofollow\">IPython notebook</a>. To work with Abjad in <a href=\"http://ipython.org/\" rel=\"nofollow\">IPython</a>, install Abjad with both\nits <strong>development</strong> and <strong>ipython</strong> extra dependencies:</p>\n<pre>~$ sudo pip install abjad<span class=\"o\">[</span>ipython<span class=\"o\">]</span>  <span class=\"c1\"># NOTE: no spaces in the string after \"install\"</span>\n</pre>\n<p>Capturing MIDI files into an <a href=\"http://ipython.org/notebook.html\" rel=\"nofollow\">IPython notebook</a> requires the <a href=\"http://timidity.sourceforge.net/\" rel=\"nofollow\">timidity</a>\npackage.</p>\n<p>To install <a href=\"http://timidity.sourceforge.net/\" rel=\"nofollow\">timidity</a> on Debian or Ubuntu:</p>\n<pre>~$ apt-get install timidity\n</pre>\n<p>To install <a href=\"http://timidity.sourceforge.net/\" rel=\"nofollow\">timidity</a> on OSX via <a href=\"http://brew.sh/\" rel=\"nofollow\">Homebrew</a>:</p>\n<pre>~$ brew install timidity\n</pre>\n<p>Once all dependencies have been installed, create a new <a href=\"http://ipython.org/notebook.html\" rel=\"nofollow\">IPython notebook</a> and\nrun the following \u201cmagic\u201d command in a cell to load Abjad\u2019s <a href=\"http://ipython.org/\" rel=\"nofollow\">IPython</a>\nextension:</p>\n<pre>%load_ext abjadext.ipython\n</pre>\n<p>Once loaded, notation and MIDI files can be embedded in your notebook whenever\nyou use <cite>show(\u2026)</cite> and <cite>play(\u2026)</cite> on valid Abjad objects.</p>\n</div>\n<div id=\"id1\">\n<span id=\"virtual-environments\"></span><h3>Virtual environments</h3>\n<p>We strongly recommend installing Abjad into a virtual environment, especially\nif you intend to hack on Abjad\u2019s own source code. Virtual environments allow\nyou to isolate <a href=\"https://www.python.org/\" rel=\"nofollow\">Python</a> packages from your systems global collection of\npackages. They also allow you to install Python packages without <tt>sudo</tt>. The\n<a href=\"https://readthedocs.org/projects/virtualenv/\" rel=\"nofollow\">virtualenv</a> package provides tools for creating Python virtual environments,\nand the <a href=\"https://virtualenvwrapper.readthedocs.org/en/latest/\" rel=\"nofollow\">virtualenvwrapper</a> package provides additional tools which make\nworking with virtual environments incredibly easy.</p>\n<p>Let\u2019s install <a href=\"https://virtualenvwrapper.readthedocs.org/en/latest/\" rel=\"nofollow\">virtualenvwrapper</a>:</p>\n<pre>~$ sudo pip install virtualenvwrapper\n...\n</pre>\n<p><strong>Note</strong>:</p>\n<blockquote>\n<p>On OSX 10.11 (El Capitan) it may be necessary to install\n<a href=\"https://virtualenvwrapper.readthedocs.org/en/latest/\" rel=\"nofollow\">virtualenvwrapper</a> via alternate instructions:</p>\n<pre>~$ pip install virtualenvwrapper --ignore-installed six\n</pre>\n<p>See\n<a href=\"http://stackoverflow.com/questions/32086631/cant-install-virtualenvwrapper-on-osx-10-11-el-capitan\" rel=\"nofollow\">here</a>\nfor details.</p>\n</blockquote>\n<p>Next, set an environment variable in your shell naming the directory you want\nthe virtual environment files to be stored in, then create that directory if it\ndoesn\u2019t already exist:</p>\n<pre>~$ <span class=\"nb\">export</span> <span class=\"nv\">WORKON_HOME</span><span class=\"o\">=</span>~/.virtualenvs\n~$ mkdir -p <span class=\"nv\">$WORKON_HOME</span>\n</pre>\n<p><strong>Note</strong>:</p>\n<blockquote>\nThe location your virtual environment files are stored in could be\nanywhere. Because you are unlikely to need to access them directly, we\nsuggest the <cite>.</cite>-prepended path <tt>.virtualenvs</tt>.</blockquote>\n<p>With the virtual environment directory created, \u201csource\u201d <a href=\"https://virtualenvwrapper.readthedocs.org/en/latest/\" rel=\"nofollow\">virtualenvwrapper</a>\u2019s\nscript. This script teaches your shell about how to create, activate and delete\nvirtual environments:</p>\n<pre>~$ <span class=\"nb\">source</span> <span class=\"sb\">`</span>which virtualenvwrapper.sh<span class=\"sb\">`</span>\n</pre>\n<p>Finally, you can create a virtual environment via the <tt>mkvirtualenv</tt> command.\nThis will both create the fresh environment and \u201cactivate\u201d it. Once activated,\nyou can install Python packages within that environment, safe in the knowledge\nthat they won\u2019t interfere with Python packages installed anywhere else on your\nsystem:</p>\n<pre>~$ mkvirtualenv abjad\n...\n~<span class=\"o\">(</span>abjad<span class=\"o\">)</span>$ pip install abjad  <span class=\"c1\"># \"(abjad)\" indicates the name of the virtualenv\n</span>...\n</pre>\n<p>You can also deactivate the current virtual environment via the <tt>deactivate</tt>\ncommand, or switch to a different environment via the <tt>workon &lt;virtualenv\nname&gt;</tt> command:</p>\n<pre>~<span class=\"o\">(</span>abjad<span class=\"o\">)</span>$ deactivate\n~$ workon my-new-score\n~<span class=\"o\">(</span>my-new-score<span class=\"o\">)</span>$\n</pre>\n<p>To make the virtual environment configuration sticky from terminal session to\nterminal session, add the following lines to your <tt><span class=\"pre\">~/.profile</span></tt>,\n<tt><span class=\"pre\">~/.bash_profile</span></tt> or similar shell configuration file:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">WORKON_HOME</span><span class=\"o\">=</span><span class=\"nv\">$HOME</span>/.virtualenvs\n<span class=\"nb\">source</span> <span class=\"sb\">`</span>which virtualenvwrapper.sh<span class=\"sb\">`</span>\n</pre>\n<div id=\"development-installation-within-a-virtualenv\">\n<h4>Development installation within a virtualenv</h4>\n<p>To recap, a complete development installation of Abjad within a virtual\nenvironment requires the following steps:</p>\n<ul>\n<li>Create and activate a new virtual environment</li>\n<li>Clone Abjad somewhere and <tt>cd</tt> into the root of the cloned repository</li>\n<li>Install Abjad and its development / IPython dependencies</li>\n</ul>\n<pre>~$ mkvirtualenv abjad\n...\n~<span class=\"o\">(</span>abjad<span class=\"o\">)</span>$ git clone https://github.com/Abjad/abjad.git\n~<span class=\"o\">(</span>abjad<span class=\"o\">)</span>$ <span class=\"nb\">cd</span> abjad\nabjad<span class=\"o\">(</span>abjad<span class=\"o\">)</span>$ pip install -e .<span class=\"o\">[</span>development,ipython<span class=\"o\">]</span>  <span class=\"c1\"># NOTE: no spaces between \".\" and \"[development,ipython]\"\n</span>...\n</pre>\n</div>\n</div>\n<div id=\"configuring-abjad\">\n<h3>Configuring Abjad</h3>\n<p>Abjad creates a <tt><span class=\"pre\">~/.abjad</span></tt> directory the first time it runs. In the\n<tt><span class=\"pre\">~/.abjad</span></tt> directory you will find an <tt>abjad.cfg</tt> file. This is the Abjad\nconfiguration file. You can use the Abjad configuration file to tell Abjad\nabout your preferred PDF file viewer, MIDI player, LilyPond language and so on.</p>\n<p>Your configuration file will look something like this the first time you open\nit:</p>\n<pre># Abjad configuration file created by Abjad on 31 January 2014 00:08:17.\n# File is interpreted by ConfigObj and should follow ini syntax.\n\n# Set to the directory where all Abjad-generated files\n# (such as PDFs and LilyPond files) should be saved.\n# Defaults to $HOME.abjad/output/\nabjad_output_directory = /Users/username/.abjad/output\n\n# Comma-separated list of LilyPond files that\n# Abjad will \"\\include\" in all generated *.ly files\nlilypond_includes = ,\n\n# Language to use in all generated LilyPond files.\nlilypond_language = english\n\n# Lilypond executable path. Set to override dynamic lookup.\nlilypond_path = lilypond\n\n# MIDI player to open MIDI files.\n# When unset your OS should know how to open MIDI files.\nmidi_player =\n\n# PDF viewer to open PDF files.\n# When unset your OS should know how to open PDFs.\npdf_viewer =\n\n# Text editor to edit text files.\n# When unset your OS should know how to open text files.\ntext_editor =\n</pre>\n<p>Follow the basics of <tt>ini</tt> syntax when editing the Abjad configuration file.\nBackground information is available at <a href=\"http://en.wikipedia.org/wiki/INI_file\" rel=\"nofollow\">http://en.wikipedia.org/wiki/INI_file</a>.\nUnder MacOS you might want to set you <tt>midi_player</tt> to iTunes. Under Linux\nyou might want to set your <tt>pdf_viewer</tt> to <tt>evince</tt> and your\n<tt>midi_player</tt> to <tt>tiMIDIty</tt>, and so on.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6328073, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "2e4efa633e3440fc689b46cd78764045", "sha256": "9413fb075ebdb6b498ec49e65048432881c629585c0d3bb1cbe813b4a73d1682"}, "downloads": -1, "filename": "Abjad-1.1.1.tar.gz", "has_sig": false, "md5_digest": "2e4efa633e3440fc689b46cd78764045", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7739166, "upload_time": "2009-08-07T04:35:07", "upload_time_iso_8601": "2009-08-07T04:35:07.987400Z", "url": "https://files.pythonhosted.org/packages/d8/8e/167698ba935f208a574995a048d1a5b6a19a0a3271758300068b3155bb9c/Abjad-1.1.1.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "27317b1d8c9ffd1569dda36b11927d2e", "sha256": "7462a24411a2af8b5dac72cefd047d165addd0a1892419d08561f0f68604dd16"}, "downloads": -1, "filename": "Abjad-2.0.tar.gz", "has_sig": false, "md5_digest": "27317b1d8c9ffd1569dda36b11927d2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8784298, "upload_time": "2011-08-17T15:44:16", "upload_time_iso_8601": "2011-08-17T15:44:16.366304Z", "url": "https://files.pythonhosted.org/packages/20/ec/b13c69b604005daec73753c6df9b27146400461367f0d649aeb78ec9ec27/Abjad-2.0.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "457d2273c79f0bec423fa9ab1b07db80", "sha256": "4291f75a1ccc6fcc902c8fb033d31148995def1b11a2350707b98115d180bc33"}, "downloads": -1, "filename": "Abjad-2.1.tar.gz", "has_sig": false, "md5_digest": "457d2273c79f0bec423fa9ab1b07db80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8684507, "upload_time": "2011-08-21T21:31:08", "upload_time_iso_8601": "2011-08-21T21:31:08.917746Z", "url": "https://files.pythonhosted.org/packages/73/dd/821a10c6fdf5d7eb893e249e9e5b12d522c90f29fb7cdc6fc142bda7029b/Abjad-2.1.tar.gz", "yanked": false}], "2.10": [{"comment_text": "", "digests": {"md5": "d12323e0bba8a005eeee251bb915247d", "sha256": "bfb59ba5cb0b1f703f3fe6f8be8d01e4c18b9064e2d08ee9a5437f5de792b1b1"}, "downloads": -1, "filename": "Abjad-2.10.tar.gz", "has_sig": false, "md5_digest": "d12323e0bba8a005eeee251bb915247d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17602007, "upload_time": "2012-10-11T17:27:38", "upload_time_iso_8601": "2012-10-11T17:27:38.820390Z", "url": "https://files.pythonhosted.org/packages/64/3a/c40c8042ae6637056bab60fd46242260848ec9ebc7bbaab5b0b41e34b714/Abjad-2.10.tar.gz", "yanked": false}], "2.11": [{"comment_text": "", "digests": {"md5": "13e49c1c0d0e785b22d4f91b72d6a9ef", "sha256": "30d8e5c93b23e917330c0169d1ea12e5b451cc5033fa46c0e91d01402cd27946"}, "downloads": -1, "filename": "Abjad-2.11.tar.gz", "has_sig": false, "md5_digest": "13e49c1c0d0e785b22d4f91b72d6a9ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21391421, "upload_time": "2013-02-11T03:49:57", "upload_time_iso_8601": "2013-02-11T03:49:57.997512Z", "url": "https://files.pythonhosted.org/packages/36/b8/67d43cdf2293be4155f707a3b6fbd9d09f841d0e1b42fff4d86b019a470f/Abjad-2.11.tar.gz", "yanked": false}], "2.12": [{"comment_text": "", "digests": {"md5": "de6c47331c17caf5cd65b55309dc0adf", "sha256": "9cb514a3f6a7ba8c8a00e4f63250c110b4d6323f542b4fdf6aa0d4941fa58206"}, "downloads": -1, "filename": "Abjad-2.12.tar.gz", "has_sig": false, "md5_digest": "de6c47331c17caf5cd65b55309dc0adf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22604846, "upload_time": "2013-03-25T05:05:26", "upload_time_iso_8601": "2013-03-25T05:05:26.619049Z", "url": "https://files.pythonhosted.org/packages/e5/a9/c4d30a19784d8a58b2668cf23853575e891058f182316e60e85648d67513/Abjad-2.12.tar.gz", "yanked": false}], "2.13": [{"comment_text": "", "digests": {"md5": "dc2368f36d99a8c14030643a048e222b", "sha256": "d80ef4899710cbb3ca38b9b620a5e63aace2eba8ca4023f6dd28b868e81e699c"}, "downloads": -1, "filename": "Abjad-2.13.tar.gz", "has_sig": false, "md5_digest": "dc2368f36d99a8c14030643a048e222b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25806546, "upload_time": "2013-10-24T01:14:25", "upload_time_iso_8601": "2013-10-24T01:14:25.606231Z", "url": "https://files.pythonhosted.org/packages/8a/e7/e2e680730b8ab247c161efbde825b9112a4d7fd0f8114c48ca5c6c8d91d7/Abjad-2.13.tar.gz", "yanked": false}], "2.14": [{"comment_text": "", "digests": {"md5": "2f50f1feede5bbed639da613ca1e436c", "sha256": "264e9a1565fd4750b6345c0dabf9a4b47c9acb6d74398b3f65b713dec2acacdc"}, "downloads": -1, "filename": "Abjad-2.14.tar.gz", "has_sig": false, "md5_digest": "2f50f1feede5bbed639da613ca1e436c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23430056, "upload_time": "2013-12-26T23:41:38", "upload_time_iso_8601": "2013-12-26T23:41:38.749013Z", "url": "https://files.pythonhosted.org/packages/73/18/87b8ce0ce3d26ec3396f3ebf98175593798546131c9d3a11564f9d30667d/Abjad-2.14.tar.gz", "yanked": false}], "2.15": [{"comment_text": "", "digests": {"md5": "ec565c47413446abe7ec9b640e6e9e3c", "sha256": "dbe4af491cee58f02b7343aeb77706b06347176485830c667cf9afc6ba1a836f"}, "downloads": -1, "filename": "Abjad-2.15.tar.gz", "has_sig": false, "md5_digest": "ec565c47413446abe7ec9b640e6e9e3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26862932, "upload_time": "2014-08-08T14:36:20", "upload_time_iso_8601": "2014-08-08T14:36:20.973098Z", "url": "https://files.pythonhosted.org/packages/b7/47/f9336b27d7b5b7958d6a8b3faa8955d6bf2bd04243113156e10c19e86ba4/Abjad-2.15.tar.gz", "yanked": false}], "2.16": [{"comment_text": "", "digests": {"md5": "334a10d51460d8f393a1e61761d3de9b", "sha256": "92c5debe9b6175161e2468d2ead3a22a34d01de8c2fe0c07c709f9c35776cae7"}, "downloads": -1, "filename": "Abjad-2.16.tar.gz", "has_sig": false, "md5_digest": "334a10d51460d8f393a1e61761d3de9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27238737, "upload_time": "2015-05-30T05:46:03", "upload_time_iso_8601": "2015-05-30T05:46:03.248651Z", "url": "https://files.pythonhosted.org/packages/e1/12/2fa273a90cf55d2497a0482e06adabb1443575395c2f4928cbf015784751/Abjad-2.16.tar.gz", "yanked": false}], "2.17": [{"comment_text": "", "digests": {"md5": "89b8506732d3f7a5e4761262bac65e0a", "sha256": "45fdf246b89ecdcb9e68837e04292901701104bdade9057e6bd6f34b18510d1b"}, "downloads": -1, "filename": "Abjad-2.17.tar.gz", "has_sig": false, "md5_digest": "89b8506732d3f7a5e4761262bac65e0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24521931, "upload_time": "2016-04-25T20:51:13", "upload_time_iso_8601": "2016-04-25T20:51:13.134277Z", "url": "https://files.pythonhosted.org/packages/e1/0a/fa2a76458829f9b194e754f95e79b29a2479b15a05ac2332b6e0a26a1c0a/Abjad-2.17.tar.gz", "yanked": false}], "2.18": [{"comment_text": "", "digests": {"md5": "cab083f97b755cee3f8d07720609b1fd", "sha256": "2ec2e2da784dafd38afaa4d9415fee38fdc342f2e9cb5cdf4ecfa101df7f3c90"}, "downloads": -1, "filename": "Abjad-2.18.tar.gz", "has_sig": false, "md5_digest": "cab083f97b755cee3f8d07720609b1fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24552961, "upload_time": "2016-07-08T06:15:47", "upload_time_iso_8601": "2016-07-08T06:15:47.352131Z", "url": "https://files.pythonhosted.org/packages/a4/68/ea09a6e691d3908eca3e61eab2c02a6215d2daeeb1498dba5edd376f7193/Abjad-2.18.tar.gz", "yanked": false}], "2.19": [{"comment_text": "", "digests": {"md5": "db6c65ded236cb959219fd852deb712f", "sha256": "16de87397f022600a1e8b72ca777b6827a92ffdc1da471be176797c1800a969b"}, "downloads": -1, "filename": "Abjad-2.19.tar.gz", "has_sig": false, "md5_digest": "db6c65ded236cb959219fd852deb712f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24560543, "upload_time": "2016-10-23T01:47:19", "upload_time_iso_8601": "2016-10-23T01:47:19.157909Z", "url": "https://files.pythonhosted.org/packages/87/0f/5cdbccb2bcae82cf48b5843667c6d0ec34d27ef0c369ecde5a5c0cb53882/Abjad-2.19.tar.gz", "yanked": false}], "2.2": [{"comment_text": "", "digests": {"md5": "c88dfc789dca20da764990cf903d746d", "sha256": "289a2cc05f095005492fe100c98f9f1b51563a2ee19e8b97e132c550be492b3b"}, "downloads": -1, "filename": "Abjad-2.2.tar.gz", "has_sig": false, "md5_digest": "c88dfc789dca20da764990cf903d746d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7362002, "upload_time": "2011-08-30T15:26:48", "upload_time_iso_8601": "2011-08-30T15:26:48.371536Z", "url": "https://files.pythonhosted.org/packages/ac/80/377d51139902fa0fc0d47e60e3acb887e4ba6bd3266f1e63de03772dfbdf/Abjad-2.2.tar.gz", "yanked": false}], "2.20": [{"comment_text": "", "digests": {"md5": "6f0646a3aea177934ea832bbc72d6464", "sha256": "b3427fd3cb2dbab2e21c5f6dff7453106c93165e7b32ee0ae63b2697a80f56d2"}, "downloads": -1, "filename": "Abjad-2.20.tar.gz", "has_sig": false, "md5_digest": "6f0646a3aea177934ea832bbc72d6464", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25144137, "upload_time": "2017-05-04T04:03:31", "upload_time_iso_8601": "2017-05-04T04:03:31.145563Z", "url": "https://files.pythonhosted.org/packages/cf/83/c990b1b25327fa7c3c83a739ce8b8210d91fa0b8e150dca88c862438fc0f/Abjad-2.20.tar.gz", "yanked": false}], "2.21": [{"comment_text": "", "digests": {"md5": "68f1bdf6070159947133a7b938a97201", "sha256": "bdb1fda835658cfbf1b84cd557e50827b78fef37c04dc4d703a7536c31c699d2"}, "downloads": -1, "filename": "Abjad-2.21.tar.gz", "has_sig": false, "md5_digest": "68f1bdf6070159947133a7b938a97201", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24973472, "upload_time": "2017-08-04T00:43:54", "upload_time_iso_8601": "2017-08-04T00:43:54.068126Z", "url": "https://files.pythonhosted.org/packages/f9/3b/72def35a692f9a56f665060566beb4caa3475ec2b1030cc4a2f01b83d28a/Abjad-2.21.tar.gz", "yanked": false}], "2.3": [{"comment_text": "", "digests": {"md5": "1c4038979ded4e85c716ab162a5c57c6", "sha256": "166699beb5e0325a2a8701244f5e33ef47687f68e0d215b1792b9d4b647394e8"}, "downloads": -1, "filename": "Abjad-2.3.tar.gz", "has_sig": false, "md5_digest": "1c4038979ded4e85c716ab162a5c57c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10135248, "upload_time": "2011-09-05T00:06:05", "upload_time_iso_8601": "2011-09-05T00:06:05.140970Z", "url": "https://files.pythonhosted.org/packages/a3/a1/0189a73d955990a438b18aa12f374a4f656d20516606282f65bbce82c854/Abjad-2.3.tar.gz", "yanked": false}], "2.4": [{"comment_text": "", "digests": {"md5": "74622e98ab50c413a94b90487f1cc146", "sha256": "4012aed481d077b14538e4bc9b4d4c037430d023aa546677360b27af8b51920f"}, "downloads": -1, "filename": "Abjad-2.4.tar.gz", "has_sig": false, "md5_digest": "74622e98ab50c413a94b90487f1cc146", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11038497, "upload_time": "2011-09-12T23:02:39", "upload_time_iso_8601": "2011-09-12T23:02:39.001671Z", "url": "https://files.pythonhosted.org/packages/35/fb/eb75f63caf96ad2b08c5ff7abec4d8df45d5dd8534f003c1fd73de585642/Abjad-2.4.tar.gz", "yanked": false}], "2.5": [{"comment_text": "", "digests": {"md5": "06d1c42ecd21cb81ac7bcfa6cfceda77", "sha256": "01dbbf431c73dcd936397cec9bca3012141f73a737aea77a3bcb15c1ded8439a"}, "downloads": -1, "filename": "Abjad-2.5.tar.gz", "has_sig": false, "md5_digest": "06d1c42ecd21cb81ac7bcfa6cfceda77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10545603, "upload_time": "2011-09-22T22:22:40", "upload_time_iso_8601": "2011-09-22T22:22:40.803011Z", "url": "https://files.pythonhosted.org/packages/86/59/e068b031b2f77ee5a5ff0abed951520c08d4b4c8dfacc6f271d54eb03298/Abjad-2.5.tar.gz", "yanked": false}], "2.6": [{"comment_text": "", "digests": {"md5": "5e224a40be39a16df78c8b8938eca007", "sha256": "75cfcca4dd762b266018561b937fe1d73ce5bb04f4d126af42b56ecc2fee1089"}, "downloads": -1, "filename": "Abjad-2.6.tar.gz", "has_sig": false, "md5_digest": "5e224a40be39a16df78c8b8938eca007", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10913584, "upload_time": "2012-01-29T23:52:14", "upload_time_iso_8601": "2012-01-29T23:52:14.607403Z", "url": "https://files.pythonhosted.org/packages/c0/cd/8263ac06a96c9c3363d6f00f7e5603d501cc10f348576a3e362d452c95f5/Abjad-2.6.tar.gz", "yanked": false}], "2.7": [{"comment_text": "", "digests": {"md5": "b2e0d437574de337c41029cecbc2543a", "sha256": "ecf68bf6871b9f6fb9bda96b07966fc18ccc1e7702d61d14c7ce86a119da9791"}, "downloads": -1, "filename": "Abjad-2.7.tar.gz", "has_sig": false, "md5_digest": "b2e0d437574de337c41029cecbc2543a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11270107, "upload_time": "2012-02-28T03:29:44", "upload_time_iso_8601": "2012-02-28T03:29:44.640350Z", "url": "https://files.pythonhosted.org/packages/c5/54/0e4dc5de550a063638f022996790284e2668c69f9691795cf1209bed567f/Abjad-2.7.tar.gz", "yanked": false}], "2.8": [{"comment_text": "", "digests": {"md5": "51b88f1dc4b5414f6ecae0511adb267d", "sha256": "e8d1d36ec8d5d1834a60e34a4439a3321fd62242a5bf7f16888c106e0a3b0ced"}, "downloads": -1, "filename": "Abjad-2.8.tar.gz", "has_sig": false, "md5_digest": "51b88f1dc4b5414f6ecae0511adb267d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18945477, "upload_time": "2012-04-17T01:29:05", "upload_time_iso_8601": "2012-04-17T01:29:05.747910Z", "url": "https://files.pythonhosted.org/packages/fd/bc/6e4cebb7b47c905b0758a3085596ceed9b8f0f6e916ad264027f8b029065/Abjad-2.8.tar.gz", "yanked": false}], "2.9": [{"comment_text": "", "digests": {"md5": "458147dcd1734e08517c67496fbf8cf6", "sha256": "6b381d75674338c41331166c726a9d1f74ab0e69a1e555486eeedd54b94cba45"}, "downloads": -1, "filename": "Abjad-2.9.tar.gz", "has_sig": false, "md5_digest": "458147dcd1734e08517c67496fbf8cf6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17551403, "upload_time": "2012-06-05T21:45:07", "upload_time_iso_8601": "2012-06-05T21:45:07.191096Z", "url": "https://files.pythonhosted.org/packages/38/01/6e4cee8b59fe81d00f3286640961ada3c0d02629fa1c015b0e36103ca15b/Abjad-2.9.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "b8a182158ea1f387cca2de3088e9323f", "sha256": "adeb807bdf6c43312509b01c163677bdfb226f7367589515fdc0a4a90a8cd2b5"}, "downloads": -1, "filename": "Abjad-3.0.0.tar.gz", "has_sig": false, "md5_digest": "b8a182158ea1f387cca2de3088e9323f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 671810, "upload_time": "2018-07-29T04:01:33", "upload_time_iso_8601": "2018-07-29T04:01:33.808852Z", "url": "https://files.pythonhosted.org/packages/c2/49/4b5e566927a20530b878d1425a840262cf57650d16dfa56fd745fba78c02/Abjad-3.0.0.tar.gz", "yanked": false}], "3.0.0rc1": [{"comment_text": "", "digests": {"md5": "3c33db0b45d0dab0ffdd16ceb50b4e9b", "sha256": "da86a4fc7d4841859074d7fd4d38e8d558f2fb4e463ffc30008875ed744a1f03"}, "downloads": -1, "filename": "Abjad-3.0.0rc1.tar.gz", "has_sig": false, "md5_digest": "3c33db0b45d0dab0ffdd16ceb50b4e9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 671850, "upload_time": "2018-07-29T02:57:57", "upload_time_iso_8601": "2018-07-29T02:57:57.400998Z", "url": "https://files.pythonhosted.org/packages/51/a3/ff9acae9d891712c0f02d772753a402ded4b5d4d7887ada31f299cb716b0/Abjad-3.0.0rc1.tar.gz", "yanked": false}], "3.1": [{"comment_text": "", "digests": {"md5": "0a462e3abc06b6a093170ce1e5a2ffb9", "sha256": "09b67f5c6aeade41f9ed1996b84a2c2ca1e1c733bd63a7cc9fb2d7e971a2e08b"}, "downloads": -1, "filename": "Abjad-3.1.tar.gz", "has_sig": false, "md5_digest": "0a462e3abc06b6a093170ce1e5a2ffb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 654616, "upload_time": "2019-12-18T21:11:00", "upload_time_iso_8601": "2019-12-18T21:11:00.155248Z", "url": "https://files.pythonhosted.org/packages/f7/2f/23b14c7ff2ca1a5728e81fc1b5960374ec444efad43b197dca00953d90cc/Abjad-3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a462e3abc06b6a093170ce1e5a2ffb9", "sha256": "09b67f5c6aeade41f9ed1996b84a2c2ca1e1c733bd63a7cc9fb2d7e971a2e08b"}, "downloads": -1, "filename": "Abjad-3.1.tar.gz", "has_sig": false, "md5_digest": "0a462e3abc06b6a093170ce1e5a2ffb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 654616, "upload_time": "2019-12-18T21:11:00", "upload_time_iso_8601": "2019-12-18T21:11:00.155248Z", "url": "https://files.pythonhosted.org/packages/f7/2f/23b14c7ff2ca1a5728e81fc1b5960374ec444efad43b197dca00953d90cc/Abjad-3.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 15:55:12 2020"}