{"info": {"author": "Lilian Besson", "author_email": "naereen@crans.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: User Interfaces", "Topic :: Terminals", "Topic :: Utilities"], "description": "``generatewordcloud.py``\n========================\n\nA simple Python script to generate a square wordcloud from one (or more) text file(s).\nSupporting both Python 2 and 3 (2.7+ and 3.4+).\n|generatewordcloud in pypi|\n\n|generate-word-cloud example meta|\n\nBased on the great `word\\_cloud <https://github.com/amueller/word_cloud/>`__ module by `@amueller <https://github.com/amueller/>`__.\n\n\n|PyPI version|\n|PyPI license|\n|PyPI format|\n|PyPI pyversions|\n|PyPI implementation|\n|PyPI status|\n\n--------------\n\nHow to use it?\n--------------\n\n1. `Requirements <requirements.txt>`__\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe usual module `matplotlib <http://matplotlib.org/>`__ is needed for the plotting,\n`docopt <https://github.com/docopt/docopt>`__ is needed for the command line interface,\nand `word\\_cloud <https://github.com/amueller/word_cloud/>`__ is needed for the actual work (generating the cloud of words after reading the files).\n\nThe required Python (2 or 3) modules can be installed with `pip <http://pip.readthedocs.io/>`__, either directly:\n\n.. code:: bash\n\n    # Directly:\n    sudo pip install matplotlib docopt word_cloud\n\nOr with the `requirements.txt <requirements.txt>`__ file:\n\n.. code:: bash\n\n    sudo pip install -r requirements.txt\n\n\n*Note*: if `ansicolortags <https://pypi.python.org/pypi/ansicolortags>`__ is\navailable, it will be used to print nice colors in the help and during the generation of word clouds.\n\n\n2. Installation\n~~~~~~~~~~~~~~~\n\nClone the repository, copy the `script (generate-word-cloud.py) <./generate-word-cloud.py>`__ somewhere in your ``PATH`` (e.g., ``~/.local/bin/``).\n\nYou can also just download the script itself:\n\n.. code:: bash\n\n    $ wget https://raw.githubusercontent.com/Naereen/generate-word-cloud.py/master/generate-word-cloud.py\n    $ cp generate-word-cloud.py /path/to/a/directory/in/your/PATH/\n\n\nNote: The script is *also* available from `PyPI <https://pypi.python.org/pypi/>`__ : `pypi.python.org/pypi/generatewordcloud <https://pypi.python.org/pypi/generatewordcloud>`_.\nYou can install it using `pip <http://www.pip-installer.org/>`__.\n\n.. code:: bash\n\n    $ sudo pip install generatewordcloud\n\n\n|PyPI version|\n|PyPI license|\n|PyPI format|\n|PyPI pyversions|\n|PyPI implementation|\n|PyPI status|\n\n\n3. Usage\n~~~~~~~~\n\nHelp:\n^^^^^\n\n.. code:: bash\n\n    $ generate-word-cloud.py --help\n\nFrom one or two files\n^^^^^^^^^^^^^^^^^^^^^\n\nGenerate a wordcloud from two ``txt`` files in the current directory,\nsave it to ``wordcloud_txt.png``.\n\n.. code:: bash\n\n    $ generate-word-cloud.py -o ./wordcloud_txt.png ./file1.txt ./file2.txt\n\nGenerate a wordcloud from the textfile ``hamlet.txt`` (~ 8000 lines),\nsaving to ``hamlet.png``:\n\n.. code:: bash\n\n    $ generate-word-cloud.py -o ./hamlet.png ./hamlet.txt\n\n|generate-word-cloud example hamlet|\n\n(It should work on pretty big text files without any issue.)\n\n--------------\n\nOther examples\n--------------\n\nFrom a lot of Python scripts (~ 200)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n|generate-word-cloud example python|\n\nFrom a lot of Bash scripts (~ 150)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n|generate-word-cloud example bash|\n\nFrom a lot of LaTeX files (~ 180)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n|generate-word-cloud example LaTeX|\n\nMeta example\n~~~~~~~~~~~~\n\nGenerate a wordcloud from the `README.md <./README.md>`__ and\n`generate-word-cloud.py <./generate-word-cloud.py>`__ files **of this\nvery project**, save it to ``wordcloud_meta.png``!\n\n.. code:: bash\n\n    $ generate-word-cloud.py -o ./wordcloud_meta.png ./*.md ./*.py\n\n|generate-word-cloud example meta|\n\n--------------\n\nFeatures\n--------\n\n-  [x] Support one or more input file(s), will cleanly skip any file it\n   fails to find or fails to read,\n-  [x] Custom output file, won't be overwritten (except with ``-f``\n   flag),\n-  [x] Nice command line interface\n   (`argparse <https://docs.python.org/2.7/library/argparse.html>`__\n   powered). I switched to `docopt <https://github.com/docopt/docopt>`__\n   after realizing how awesome it is!\n-  [x] Has a command line option for every important parameter (max nb\n   of words, width, height etc).\n-  [x] Input filenames with spaces in their name were seen as several\n   files (e.g. ``this file.txt``), FIXED with the switch to\n   `docopt <https://github.com/docopt/docopt>`__.\n\n--------------\n\nComplete documentation (``--help``)\n-----------------------------------\n\n::\n\n    $ generate-word-cloud.py -h | --help\n    Usage:\n      generate-word-cloud.py [-s | --show] [-f | --force] [-o OUTFILE | --outfile=OUTFILE]\n                             [-t TITLE | --title=TITLE] [-m MAX | --max=MAX]\n                             [-w WIDTH | --width=WIDTH] [-H HEIGHT | --height=HEIGHT]\n                             INFILE...\n      generate-word-cloud.py (-h | --help)\n      generate-word-cloud.py (-v | --version)\n\n    Options:\n      -h --help            Show this help message and exit.\n      -v --version         Show program's version number and exit.\n      -s --show            Show the image but do not save it [default False].\n      -f --force           Force to write the image, even if present (default is to ask before overwriting an existing file) [default False].\n      -o OUTFILE --outfile=OUTFILE\n                           Filename for the generated image [default 'wordcloud.png'].\n      -t TITLE --title=TITLE\n                           Title for the image [default None].\n      -m MAX --max MAX\n                           Max number of words to display on the cloud word [default 150].\n      -w WIDTH --width WIDTH\n                           Width of the generate image [default 400].\n      -H HEIGHT --height HEIGHT\n                           Height of the generate image [default 300].\n      INFILE               A text file to read.\n\n--------------\n\nTODO\n----\n\n-  [x] Start it, from `this example <https://github.com/amueller/word_cloud/blob/master/examples/simple.py>`__,\n-  [x] Run it on some interesting examples, embed them here (as images),\n-  [X] Check on weird encodings? (i.e., not UTF-8). It works fine!\n-  [X] Test it against :closed\\_book: VERY large files (million of line)\n   ? It works fine, slowly but fine.\n-  [X] Test it against LOTS of files (several thousands) ? It\n   works fine, slowly but fine.\n-  [X] Publish it on PyPI: it is available at `pypi.python.org/pypi/generatewordcloud/ <https://pypi.python.org/pypi/generatewordcloud/>`_.\n-  [ ] Write a small article about it for `my blog <http://perso.crans.org/besson/>`__.\n\nKnows issues\n~~~~~~~~~~~~\n\n-  [ ] Only tested on (X)Ubuntu (15.10), but it should work on other\n   GNU/Linux distribution and Mac OS X (and probably Windows), if they\n   support `docopt <https://github.com/docopt/docopt>`__ and has both\n   `docopt <https://github.com/docopt/docopt>`__ and\n   `word\\_cloud <https://github.com/amueller/word_cloud/>`__ installed.\n\n**Unknown issues?**\n~~~~~~~~~~~~~~~~~~~\n\n`Use the issue tracker <https://github.com/Naereen/generate-word-cloud.py/issues/new>`__ to notify me of a bug!\n\n--------------\n\nAbout\n-----\n\n*Why write this script?*\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nThere already is a lot of `good cloud word generator online <https://duckduckgo.com/?q=cloud+word+generator&ia=web>`__, e.g. `wordle.net <http://www.wordle.net/>`__.\n\n#. I wanted a way to visualize the major keywords of Bash and Python (my\n   two `favorite programming languages <https://wakatime.com/@lbesson>`__) and of Markdown/Strapdown, reStructuredText and LaTeX (my favorite typeset documents system),\n#. The original project `word\\_cloud <https://github.com/amueller/word_cloud/>`__ seemed cool. And it is. Great job\n   `@amueller <https://github.com/amueller/>`__ !\n#. `Clouds of words are interesting <https://www.academia.edu/20224642/>`__! And Python is awesome!\n\nAuthor\n~~~~~~\n\n    `Lilian Besson (Naereen) <https://github.com/Naereen/>`__.\n\nLicense ? |GitHub license|\n--------------------------\n\nThis plug-in is published under the terms of the `GPLv3 License <http://www.gnu.org/licenses/gpl.html>`__ (file `LICENSE.txt <LICENSE.txt>`__), \u00a9 `Lilian Besson <https://GitHub.com/Naereen>`__, 2016.\n\n|Maintenance|\n|Ask Me Anything !|\n|Analytics|\n|made-with-python|\n\n|ForTheBadge uses-badges|\n|ForTheBadge uses-git|\n\n|ForTheBadge built-with-love|\n\n\n.. |generatewordcloud in pypi| image:: https://img.shields.io/pypi/v/generatewordcloud.svg\n   :target: https://pypi.python.org/pypi/generatewordcloud\n.. |PyPI version| image:: https://img.shields.io/pypi/v/generatewordcloud.svg\n   :target: https://pypi.python.org/pypi/generatewordcloud/\n.. |PyPI license| image:: https://img.shields.io/pypi/l/generatewordcloud.svg\n   :target: https://pypi.python.org/pypi/generatewordcloud/\n.. |PyPI format| image:: https://img.shields.io/pypi/format/generatewordcloud.svg\n   :target: https://pypi.python.org/pypi/generatewordcloud/\n.. |PyPI pyversions| image:: https://img.shields.io/pypi/pyversions/generatewordcloud.svg\n   :target: https://pypi.python.org/pypi/generatewordcloud/\n.. |PyPI implementation| image:: https://img.shields.io/pypi/implementation/generatewordcloud.svg\n   :target: https://pypi.python.org/pypi/generatewordcloud/\n.. |PyPI status| image:: https://img.shields.io/pypi/status/generatewordcloud.svg\n   :target: https://pypi.python.org/pypi/generatewordcloud/\n.. |generate-word-cloud example meta| image:: https://github.com/Naereen/generate-word-cloud.py/raw/master/wordcloud_meta.png\n.. |generate-word-cloud example hamlet| image:: https://github.com/Naereen/generate-word-cloud.py/raw/master/wordcloud_hamlet.png\n.. |generate-word-cloud example python| image:: https://github.com/Naereen/generate-word-cloud.py/raw/master/wordcloud_python.png\n.. |generate-word-cloud example bash| image:: https://github.com/Naereen/generate-word-cloud.py/raw/master/wordcloud_bash.png\n.. |generate-word-cloud example LaTeX| image:: https://github.com/Naereen/generate-word-cloud.py/raw/master/wordcloud_latex.png\n.. |GitHub license| image:: https://img.shields.io/github/license/Naereen/generate-word-cloud.py.svg\n   :target: https://github.com/Naereen/generate-word-cloud.py/blob/master/LICENSE\n.. |Maintenance| image:: https://img.shields.io/badge/Maintained%3F-yes-green.svg\n   :target: https://GitHub.com/Naereen/generate-word-cloud.py/graphs/commit-activity\n.. |Ask Me Anything !| image:: https://img.shields.io/badge/Ask%20me-anything-1abc9c.svg\n   :target: https://GitHub.com/Naereen/ama\n.. |Analytics| image:: https://ga-beacon.appspot.com/UA-38514290-17/github.com/Naereen/generate-word-cloud.py/README.md?pixel\n   :target: https://GitHub.com/Naereen/generate-word-cloud.py/\n.. |made-with-python| image:: https://img.shields.io/badge/Made%20with-Python-1f425f.svg\n   :target: https://www.python.org/\n.. |ForTheBadge uses-badges| image:: http://ForTheBadge.com/images/badges/uses-badges.svg\n   :target: http://ForTheBadge.com\n.. |ForTheBadge uses-git| image:: http://ForTheBadge.com/images/badges/uses-git.svg\n   :target: https://GitHub.com/\n.. |ForTheBadge built-with-love| image:: http://ForTheBadge.com/images/badges/built-with-love.svg\n   :target: https://GitHub.com/Naereen/", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/Naereen/generate-word-cloud.py", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Naereen/generate-word-cloud.py", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "generatewordcloud", "package_url": "https://pypi.org/project/generatewordcloud/", "platform": "Windows,Windows Cygwin,GNU/Linux,MacOS", "project_url": "https://pypi.org/project/generatewordcloud/", "project_urls": {"Download": "https://github.com/Naereen/generate-word-cloud.py", "Homepage": "https://github.com/Naereen/generate-word-cloud.py"}, "release_url": "https://pypi.org/project/generatewordcloud/0.3/", "requires_dist": null, "requires_python": null, "summary": "A simple Python (2 or 3) script to generate a PNG word-cloud image from a bunch of text files. Based on word_cloud.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple Python script to generate a square wordcloud from one (or more) text file(s).\nSupporting both Python 2 and 3 (2.7+ and 3.4+).\n<a href=\"https://pypi.python.org/pypi/generatewordcloud\" rel=\"nofollow\"><img alt=\"generatewordcloud in pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b35ff913ae4a4c92ad41a24c4d6b4bdb5f619fb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f67656e6572617465776f7264636c6f75642e737667\"></a></p>\n<p><img alt=\"generate-word-cloud example meta\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/927cb06a222f7bc2e0a9469182725cfc453bd55f/68747470733a2f2f6769746875622e636f6d2f4e61657265656e2f67656e65726174652d776f72642d636c6f75642e70792f7261772f6d61737465722f776f7264636c6f75645f6d6574612e706e67\"></p>\n<p>Based on the great <a href=\"https://github.com/amueller/word_cloud/\" rel=\"nofollow\">word_cloud</a> module by <a href=\"https://github.com/amueller/\" rel=\"nofollow\">@amueller</a>.</p>\n<p><a href=\"https://pypi.python.org/pypi/generatewordcloud/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b35ff913ae4a4c92ad41a24c4d6b4bdb5f619fb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f67656e6572617465776f7264636c6f75642e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/generatewordcloud/\" rel=\"nofollow\"><img alt=\"PyPI license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ad301975cb9e445149c11ceaf4afcff1aa4274a1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f67656e6572617465776f7264636c6f75642e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/generatewordcloud/\" rel=\"nofollow\"><img alt=\"PyPI format\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de84825ee43c71860bb01d2326c38b5b1f4bcadd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f666f726d61742f67656e6572617465776f7264636c6f75642e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/generatewordcloud/\" rel=\"nofollow\"><img alt=\"PyPI pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88115e4aa206a37f5be395586a7ad60b6d8ff5c3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f67656e6572617465776f7264636c6f75642e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/generatewordcloud/\" rel=\"nofollow\"><img alt=\"PyPI implementation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3498cd5147069ef4ec965878a3242ee97ffab115/68747470733a2f2f696d672e736869656c64732e696f2f707970692f696d706c656d656e746174696f6e2f67656e6572617465776f7264636c6f75642e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/generatewordcloud/\" rel=\"nofollow\"><img alt=\"PyPI status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd6f23d06e31b05204bb4af659823b5af57cc41b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f67656e6572617465776f7264636c6f75642e737667\"></a></p>\n<hr class=\"docutils\">\n<div id=\"how-to-use-it\">\n<h2>How to use it?</h2>\n<div id=\"requirements\">\n<h3>1. <a href=\"requirements.txt\" rel=\"nofollow\">Requirements</a></h3>\n<p>The usual module <a href=\"http://matplotlib.org/\" rel=\"nofollow\">matplotlib</a> is needed for the plotting,\n<a href=\"https://github.com/docopt/docopt\" rel=\"nofollow\">docopt</a> is needed for the command line interface,\nand <a href=\"https://github.com/amueller/word_cloud/\" rel=\"nofollow\">word_cloud</a> is needed for the actual work (generating the cloud of words after reading the files).</p>\n<p>The required Python (2 or 3) modules can be installed with <a href=\"http://pip.readthedocs.io/\" rel=\"nofollow\">pip</a>, either directly:</p>\n<pre><span class=\"c1\"># Directly:\n</span>sudo pip install matplotlib docopt word_cloud\n</pre>\n<p>Or with the <a href=\"requirements.txt\" rel=\"nofollow\">requirements.txt</a> file:</p>\n<pre>sudo pip install -r requirements.txt\n</pre>\n<p><em>Note</em>: if <a href=\"https://pypi.python.org/pypi/ansicolortags\" rel=\"nofollow\">ansicolortags</a> is\navailable, it will be used to print nice colors in the help and during the generation of word clouds.</p>\n</div>\n<div id=\"installation\">\n<h3>2. Installation</h3>\n<p>Clone the repository, copy the <a href=\"./generate-word-cloud.py\" rel=\"nofollow\">script (generate-word-cloud.py)</a> somewhere in your <tt>PATH</tt> (e.g., <tt><span class=\"pre\">~/.local/bin/</span></tt>).</p>\n<p>You can also just download the script itself:</p>\n<pre>$ wget https://raw.githubusercontent.com/Naereen/generate-word-cloud.py/master/generate-word-cloud.py\n$ cp generate-word-cloud.py /path/to/a/directory/in/your/PATH/\n</pre>\n<p>Note: The script is <em>also</em> available from <a href=\"https://pypi.python.org/pypi/\" rel=\"nofollow\">PyPI</a> : <a href=\"https://pypi.python.org/pypi/generatewordcloud\" rel=\"nofollow\">pypi.python.org/pypi/generatewordcloud</a>.\nYou can install it using <a href=\"http://www.pip-installer.org/\" rel=\"nofollow\">pip</a>.</p>\n<pre>$ sudo pip install generatewordcloud\n</pre>\n<p><a href=\"https://pypi.python.org/pypi/generatewordcloud/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b35ff913ae4a4c92ad41a24c4d6b4bdb5f619fb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f67656e6572617465776f7264636c6f75642e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/generatewordcloud/\" rel=\"nofollow\"><img alt=\"PyPI license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ad301975cb9e445149c11ceaf4afcff1aa4274a1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f67656e6572617465776f7264636c6f75642e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/generatewordcloud/\" rel=\"nofollow\"><img alt=\"PyPI format\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de84825ee43c71860bb01d2326c38b5b1f4bcadd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f666f726d61742f67656e6572617465776f7264636c6f75642e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/generatewordcloud/\" rel=\"nofollow\"><img alt=\"PyPI pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88115e4aa206a37f5be395586a7ad60b6d8ff5c3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f67656e6572617465776f7264636c6f75642e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/generatewordcloud/\" rel=\"nofollow\"><img alt=\"PyPI implementation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3498cd5147069ef4ec965878a3242ee97ffab115/68747470733a2f2f696d672e736869656c64732e696f2f707970692f696d706c656d656e746174696f6e2f67656e6572617465776f7264636c6f75642e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/generatewordcloud/\" rel=\"nofollow\"><img alt=\"PyPI status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd6f23d06e31b05204bb4af659823b5af57cc41b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f67656e6572617465776f7264636c6f75642e737667\"></a></p>\n</div>\n<div id=\"usage\">\n<h3>3. Usage</h3>\n<div id=\"help\">\n<h4>Help:</h4>\n<pre>$ generate-word-cloud.py --help\n</pre>\n</div>\n<div id=\"from-one-or-two-files\">\n<h4>From one or two files</h4>\n<p>Generate a wordcloud from two <tt>txt</tt> files in the current directory,\nsave it to <tt>wordcloud_txt.png</tt>.</p>\n<pre>$ generate-word-cloud.py -o ./wordcloud_txt.png ./file1.txt ./file2.txt\n</pre>\n<p>Generate a wordcloud from the textfile <tt>hamlet.txt</tt> (~ 8000 lines),\nsaving to <tt>hamlet.png</tt>:</p>\n<pre>$ generate-word-cloud.py -o ./hamlet.png ./hamlet.txt\n</pre>\n<p><img alt=\"generate-word-cloud example hamlet\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b47db88e54a5dc8765bb967ea9073158c678bb12/68747470733a2f2f6769746875622e636f6d2f4e61657265656e2f67656e65726174652d776f72642d636c6f75642e70792f7261772f6d61737465722f776f7264636c6f75645f68616d6c65742e706e67\"></p>\n<p>(It should work on pretty big text files without any issue.)</p>\n</div>\n</div>\n</div>\n<hr class=\"docutils\">\n<div id=\"other-examples\">\n<h2>Other examples</h2>\n<div id=\"from-a-lot-of-python-scripts-200\">\n<h3>From a lot of Python scripts (~ 200)</h3>\n<p><img alt=\"generate-word-cloud example python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7722a0ef7ea619882eb0433aa7aadd440d1a261a/68747470733a2f2f6769746875622e636f6d2f4e61657265656e2f67656e65726174652d776f72642d636c6f75642e70792f7261772f6d61737465722f776f7264636c6f75645f707974686f6e2e706e67\"></p>\n</div>\n<div id=\"from-a-lot-of-bash-scripts-150\">\n<h3>From a lot of Bash scripts (~ 150)</h3>\n<p><img alt=\"generate-word-cloud example bash\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/18c7e03e009451c1cc97bf8b7b954d938c5983d7/68747470733a2f2f6769746875622e636f6d2f4e61657265656e2f67656e65726174652d776f72642d636c6f75642e70792f7261772f6d61737465722f776f7264636c6f75645f626173682e706e67\"></p>\n</div>\n<div id=\"from-a-lot-of-latex-files-180\">\n<h3>From a lot of LaTeX files (~ 180)</h3>\n<p><img alt=\"generate-word-cloud example LaTeX\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45349ae054a2cd60fb2558e6e373b355d5bb458d/68747470733a2f2f6769746875622e636f6d2f4e61657265656e2f67656e65726174652d776f72642d636c6f75642e70792f7261772f6d61737465722f776f7264636c6f75645f6c617465782e706e67\"></p>\n</div>\n<div id=\"meta-example\">\n<h3>Meta example</h3>\n<p>Generate a wordcloud from the <a href=\"./README.md\" rel=\"nofollow\">README.md</a> and\n<a href=\"./generate-word-cloud.py\" rel=\"nofollow\">generate-word-cloud.py</a> files <strong>of this\nvery project</strong>, save it to <tt>wordcloud_meta.png</tt>!</p>\n<pre>$ generate-word-cloud.py -o ./wordcloud_meta.png ./*.md ./*.py\n</pre>\n<p><img alt=\"generate-word-cloud example meta\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/927cb06a222f7bc2e0a9469182725cfc453bd55f/68747470733a2f2f6769746875622e636f6d2f4e61657265656e2f67656e65726174652d776f72642d636c6f75642e70792f7261772f6d61737465722f776f7264636c6f75645f6d6574612e706e67\"></p>\n</div>\n</div>\n<hr class=\"docutils\">\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>[x] Support one or more input file(s), will cleanly skip any file it\nfails to find or fails to read,</li>\n<li>[x] Custom output file, won\u2019t be overwritten (except with <tt><span class=\"pre\">-f</span></tt>\nflag),</li>\n<li>[x] Nice command line interface\n(<a href=\"https://docs.python.org/2.7/library/argparse.html\" rel=\"nofollow\">argparse</a>\npowered). I switched to <a href=\"https://github.com/docopt/docopt\" rel=\"nofollow\">docopt</a>\nafter realizing how awesome it is!</li>\n<li>[x] Has a command line option for every important parameter (max nb\nof words, width, height etc).</li>\n<li>[x] Input filenames with spaces in their name were seen as several\nfiles (e.g. <tt>this file.txt</tt>), FIXED with the switch to\n<a href=\"https://github.com/docopt/docopt\" rel=\"nofollow\">docopt</a>.</li>\n</ul>\n</div>\n<hr class=\"docutils\">\n<div id=\"complete-documentation-help\">\n<h2>Complete documentation (<tt><span class=\"pre\">--help</span></tt>)</h2>\n<pre>$ generate-word-cloud.py -h | --help\nUsage:\n  generate-word-cloud.py [-s | --show] [-f | --force] [-o OUTFILE | --outfile=OUTFILE]\n                         [-t TITLE | --title=TITLE] [-m MAX | --max=MAX]\n                         [-w WIDTH | --width=WIDTH] [-H HEIGHT | --height=HEIGHT]\n                         INFILE...\n  generate-word-cloud.py (-h | --help)\n  generate-word-cloud.py (-v | --version)\n\nOptions:\n  -h --help            Show this help message and exit.\n  -v --version         Show program's version number and exit.\n  -s --show            Show the image but do not save it [default False].\n  -f --force           Force to write the image, even if present (default is to ask before overwriting an existing file) [default False].\n  -o OUTFILE --outfile=OUTFILE\n                       Filename for the generated image [default 'wordcloud.png'].\n  -t TITLE --title=TITLE\n                       Title for the image [default None].\n  -m MAX --max MAX\n                       Max number of words to display on the cloud word [default 150].\n  -w WIDTH --width WIDTH\n                       Width of the generate image [default 400].\n  -H HEIGHT --height HEIGHT\n                       Height of the generate image [default 300].\n  INFILE               A text file to read.\n</pre>\n</div>\n<hr class=\"docutils\">\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>[x] Start it, from <a href=\"https://github.com/amueller/word_cloud/blob/master/examples/simple.py\" rel=\"nofollow\">this example</a>,</li>\n<li>[x] Run it on some interesting examples, embed them here (as images),</li>\n<li>[X] Check on weird encodings? (i.e., not UTF-8). It works fine!</li>\n<li>[X] Test it against :closed_book: VERY large files (million of line)\n? It works fine, slowly but fine.</li>\n<li>[X] Test it against LOTS of files (several thousands) ? It\nworks fine, slowly but fine.</li>\n<li>[X] Publish it on PyPI: it is available at <a href=\"https://pypi.python.org/pypi/generatewordcloud/\" rel=\"nofollow\">pypi.python.org/pypi/generatewordcloud/</a>.</li>\n<li>[ ] Write a small article about it for <a href=\"http://perso.crans.org/besson/\" rel=\"nofollow\">my blog</a>.</li>\n</ul>\n<div id=\"knows-issues\">\n<h3>Knows issues</h3>\n<ul>\n<li>[ ] Only tested on (X)Ubuntu (15.10), but it should work on other\nGNU/Linux distribution and Mac OS X (and probably Windows), if they\nsupport <a href=\"https://github.com/docopt/docopt\" rel=\"nofollow\">docopt</a> and has both\n<a href=\"https://github.com/docopt/docopt\" rel=\"nofollow\">docopt</a> and\n<a href=\"https://github.com/amueller/word_cloud/\" rel=\"nofollow\">word_cloud</a> installed.</li>\n</ul>\n</div>\n<div id=\"unknown-issues\">\n<h3><strong>Unknown issues?</strong></h3>\n<p><a href=\"https://github.com/Naereen/generate-word-cloud.py/issues/new\" rel=\"nofollow\">Use the issue tracker</a> to notify me of a bug!</p>\n</div>\n</div>\n<hr class=\"docutils\">\n<div id=\"about\">\n<h2>About</h2>\n<div id=\"why-write-this-script\">\n<h3><em>Why write this script?</em></h3>\n<p>There already is a lot of <a href=\"https://duckduckgo.com/?q=cloud+word+generator&amp;ia=web\" rel=\"nofollow\">good cloud word generator online</a>, e.g. <a href=\"http://www.wordle.net/\" rel=\"nofollow\">wordle.net</a>.</p>\n<ol>\n<li>I wanted a way to visualize the major keywords of Bash and Python (my\ntwo <a href=\"https://wakatime.com/@lbesson\" rel=\"nofollow\">favorite programming languages</a>) and of Markdown/Strapdown, reStructuredText and LaTeX (my favorite typeset documents system),</li>\n<li>The original project <a href=\"https://github.com/amueller/word_cloud/\" rel=\"nofollow\">word_cloud</a> seemed cool. And it is. Great job\n<a href=\"https://github.com/amueller/\" rel=\"nofollow\">@amueller</a> !</li>\n<li><a href=\"https://www.academia.edu/20224642/\" rel=\"nofollow\">Clouds of words are interesting</a>! And Python is awesome!</li>\n</ol>\n</div>\n<div id=\"author\">\n<h3>Author</h3>\n<blockquote>\n<a href=\"https://github.com/Naereen/\" rel=\"nofollow\">Lilian Besson (Naereen)</a>.</blockquote>\n</div>\n</div>\n<div id=\"license-github-license\">\n<h2>License ? <a href=\"https://github.com/Naereen/generate-word-cloud.py/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/54e3e46e0c455e26f395835a39beb0a5ccd7995d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4e61657265656e2f67656e65726174652d776f72642d636c6f75642e70792e737667\"></a></h2>\n<p>This plug-in is published under the terms of the <a href=\"http://www.gnu.org/licenses/gpl.html\" rel=\"nofollow\">GPLv3 License</a> (file <a href=\"LICENSE.txt\" rel=\"nofollow\">LICENSE.txt</a>), \u00a9 <a href=\"https://GitHub.com/Naereen\" rel=\"nofollow\">Lilian Besson</a>, 2016.</p>\n<p><a href=\"https://GitHub.com/Naereen/generate-word-cloud.py/graphs/commit-activity\" rel=\"nofollow\"><img alt=\"Maintenance\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90bf1b2a4d99698c4dffbc494b9734690a777fec/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d61696e7461696e65642533462d7965732d677265656e2e737667\"></a>\n<a href=\"https://GitHub.com/Naereen/ama\" rel=\"nofollow\"><img alt=\"Ask Me Anything !\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e0b9eb17e703b59a8d52789d632dbbd15dbaca1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f41736b2532306d652d616e797468696e672d3161626339632e737667\"></a>\n<a href=\"https://GitHub.com/Naereen/generate-word-cloud.py/\" rel=\"nofollow\"><img alt=\"Analytics\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9d2dcbfa5e11c25f050022b38b34fe72198e9042/68747470733a2f2f67612d626561636f6e2e61707073706f742e636f6d2f55412d33383531343239302d31372f6769746875622e636f6d2f4e61657265656e2f67656e65726174652d776f72642d636c6f75642e70792f524541444d452e6d643f706978656c\"></a>\n<a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"made-with-python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68a99107ffdf24c5fb2cc4bca38b7b662e501b97/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d616465253230776974682d507974686f6e2d3166343235662e737667\"></a></p>\n<p><a href=\"http://ForTheBadge.com\" rel=\"nofollow\"><img alt=\"ForTheBadge uses-badges\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a46638f466b6ead87b2934739aa61b02e8a54569/687474703a2f2f466f7254686542616467652e636f6d2f696d616765732f6261646765732f757365732d6261646765732e737667\"></a>\n<a href=\"https://GitHub.com/\" rel=\"nofollow\"><img alt=\"ForTheBadge uses-git\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fae624a5dfdaa11287995d6492c4b3b2bc16f39e/687474703a2f2f466f7254686542616467652e636f6d2f696d616765732f6261646765732f757365732d6769742e737667\"></a></p>\n<p><a href=\"https://GitHub.com/Naereen/\" rel=\"nofollow\"><img alt=\"ForTheBadge built-with-love\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc49e4f61a7521afb3fe8a9c81cba7e873b7fef6/687474703a2f2f466f7254686542616467652e636f6d2f696d616765732f6261646765732f6275696c742d776974682d6c6f76652e737667\"></a></p>\n</div>\n\n          </div>"}, "last_serial": 2402408, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "b97b841259a6124909c83ad9daca5325", "sha256": "edba7b2994e94d9d9beaf4c79a6e53580aff6ede950cb54c38abf02c3c238e63"}, "downloads": -1, "filename": "generatewordcloud-0.3.tar.gz", "has_sig": true, "md5_digest": "b97b841259a6124909c83ad9daca5325", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7566, "upload_time": "2016-10-16T14:38:43", "upload_time_iso_8601": "2016-10-16T14:38:43.314642Z", "url": "https://files.pythonhosted.org/packages/42/41/5fe8ec846d0e13522ffdf376b616accee85d29d25b62747151bb0df81b29/generatewordcloud-0.3.tar.gz", "yanked": false}], "0.3": []}, "urls": [], "timestamp": "Fri May  8 00:58:24 2020"}