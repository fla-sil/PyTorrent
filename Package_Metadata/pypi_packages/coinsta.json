{"info": {"author": "Bernard Brenyah", "author_email": "bbrenyah@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only"], "description": "# Coinsta\n\nA Python :snake: package for acquiring both historical and current data of crypto-currencies:moneybag:.\n_________________________________________________________________________________________________________\n\n**Author:** Bernard Brenyah\n\n## Project Status\n\n[![Latest Version](https://img.shields.io/pypi/v/coinsta.svg)](https://pypi.python.org/pypi/coinsta/)\n[![Build Status](https://www.travis-ci.org/PyDataBlog/Coinsta.svg?branch=master)](https://www.travis-ci.org/PyDataBlog/Coinsta)\n[![Issues](https://img.shields.io/github/issues/PyDataBlog/coinsta.svg)](https://github.com/PyDataBlog/Coinsta/issues)\n[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://github.com/PyDataBlog/Coinsta/commits/master)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2FPyDataBlog%2FCoinsta.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2FPyDataBlog%2FCoinsta?ref=badge_shield)\n[![License](https://img.shields.io/pypi/l/coinsta.svg?color=green)](https://pypi.python.org/pypi/coinsta/)\n[![Supported Python Version](https://img.shields.io/pypi/pyversions/coinsta.svg)](https://pypi.python.org/pypi/coinsta/)\n[![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/PyDataBlog/Coinsta/master)\n\n## Table of Content\n\n1. [Motivation](#motivation)\n2. [Frameworks Used](#frameworks-used)\n3. [Installation](#installation)\n4. [Features](#features)\n5. [Pending Features](#pending-features)\n6. [How To Use](#how-to-use)\n7. [Release History](#release-history)\n8. [How To Contribute](#how-to-contribute)\n9. [Credits](#credits)\n10. [License](#license)\n\n_________________________________________________________________________________________________________\n\n### Motivation\n\nWhy `coinsta`?\nI spent the past couple of months on a graduate dissertation which required the use of both historical and current data on cryptocurrencies. After browsing the Python Packaging Index (PYPI), I was frustrated by the lack of a Python package that catered for such needs. As far as I know only [cyrptoCMD](https://github.com/guptarohit/cryptoCMD) came close to meeting my needs. The only drawback is the that package only delivers historical data. OK so \"*why not edit that project and make a pull request with your suggestions?*\"\n\nThat was the original plan until I realised that the scraping code could relatively be done quickly with the help of `pandas` package. If I went with the original plan I would have to rewrite the whole code and implementation ideas for `cryptoCMD` project. The only logical conclusion was starting a new project that I wish I had during my data collection process. A project inspired by scripts I generated for my dissertation project.\n\nAs a result, this project is the first Python project that supplies both historical and current data on cryptocurrency markets and assets in one coherent package.\n\n_________________________________________________________________________________________________________\n\n### Frameworks Used\n\nThis package leverages the power of the following packages:\n\n- `pandas`\n- `requests`\n- `lxml`\n- `beautifoulsoup`\n\n_________________________________________________________________________________________________________\n\n### Installation\n\nThe easiest way to install Coinsta is to use the default python package installer `pip`:\n\n```bash\npip install coinsta\n```\n\nand for the few brave ones who like bleeding edge technology, the latest source can be installed via with this command:\n\n```bash\npip install git+git://github.com/PyDataBlog/Coinsta.git\n```\n\n_________________________________________________________________________________________________________\n\n### Features\n\n- Current global information on cryptocurrency markets.\n- Current market information on the top 100 cryptocurrencies.\n- Current data on a specified cryptocurrency.\n- Historical data on all active cryptocurrencies.\n- Get historical snapshots of cryptocurrencies.\n\n### Pending Features\n\n- [X] Migrate the current class to the new CoinMarketCap API.\n- [X] Dropped support for Python 3.5.\n- [X] Added support for Python 3.8.\n- [X] Improve documentation and doc strings.\n- [X] Optimisation of code.\n- [X] Support for CoinMarketCap's historical snapshots.\n\n#### How To Use\n\n**Historical Data**\n\n```python\n# import the Historical class\nfrom coinsta.core import Historical\nfrom datetime import date\n\n# specify dates considered\nstart = date(2018, 3, 1)\nend = date(2018, 6,1)\n\n# get data\ncoin_spec = Historical('btc', start=start, end=end)\nbtc_data = coin_spec.get_data()\nprint(btc_data.head())\n\n\n#by default the end date is set to use the \"today's\" date\n# of the user unless otherwise specified like above\n\n```\n\n**Alternative Constructors for Historical data from dates in the form of strings (YYYY-MM-DD) or (YYYY/MM/DD):**\n\n```python\nfrom coinsta.core import Historical\n\n# default alternative method for \"-\" formatted date strings\nalt_spec = Historical.from_strings('btc', '2018-3-1','2018-6-1', hyphen=True)\n\nalt_btc = alt_spec.get_data()\nprint(alt_btc.head())\n\n# another alternative method for \"/\" formated date strings\nother_spec = Historical.from_strings('btc', '2018/3/1','2018/6/1', hyphen=False)\n\nanother_btc = other_spec.get_data()\nprint(another_btc.head())\n\n```\n\nThe `get_data()` method and the `from_strings` method from the Historical class returns a `pandas` DataFrame object with sorted in an ascending order indexed the dates specified by the user:\n\n```shell\n    Open     High      Low    Close      Volume    Market_cap\nDate\n```\n\nSo what was the top cryptocurrency (in terms of market capitalisation) on date XYZ?\nLuckily, CoinMarketCap delivers periodic snapshots of the this type of rankings. The `HistoricalSnapshot` class taps into data to supply users with such information.\n\nThe Historical Snapshot feature returns a Pandas DataFrame object with the following self describing columns:\n\n```python\nIndex(['Rank', 'Name', 'Symbol', 'Market Cap', 'Price', 'Circulating Supply',\n       'Volume (24h)', '% 1h', '% 24h', '% 7d'],\n      dtype='object')\n```\n\n**Historical Snapshots:**\n\n```python\nfrom coinsta.core import HistoricalSnapshot\nfrom datetime import date\n\nsnap_date = date(2018, 7, 29)\n\njuly_2018 = HistoricalSnapshot(snap_date)\njuly_2018_snapshot = july_2018.get_snapshot()\n\nprint(july_2018_snapshot.info())\n```\n\n**Current Data:**\n\n```python\n# import the Current class and instantiate the current class object with specifications\nfrom coinsta.core import Current\ncur = Current(api_key='YOUR-API-KEY-HERE', currency='eur')  # Default is usd\n\n# get current market information on a specified crypto\nbtc_current = cur.get_current('btc')\nprint(btc_current)\n\n# get the top 100 cryptos (in terms of market cap)\ncurrent_100 = cur.top_100(limit=100)  # Default limit is 100 but can be increased as a user wishes\nprint(current_100.head())\n\n# get global overview of crypto markets\nglo_info = cur.global_info()\nprint(glo_info)\n\n\n```\n\nThe `get_current()` method from the current class returns a `pandas` DataFrame object with one column representing the following named rows of information on the cryptocurrency specified:\n\n```python\ndict_keys(['name', 'symbol', 'rank', 'circulating_supply',\n 'total_supply', 'max_supply', 'price', 'volume_24h',\n  'percent_change_1h', 'percent_change_24h', 'percent_change_7d',\n   'market_cap', 'last_updated'])\n```\n\nThe `top_100` method in the current class returns a `pandas` DataFrame object of the top 100 cryptocurrencies in terms of market capitalization. The following are the columns returned:\n\n```python\n['id', 'name', 'symbol', 'slug', 'num_market_pairs', 'date_added',\n 'tags', 'max_supply', 'circulating_supply', 'total_supply', 'platform',\n 'cmc_rank', 'last_updated', '*currency*.price', '*currency*.volume_24h',\n '*currency*.percent_change_1h', '*currency*.percent_change_24h', '*currency*.percent_change_7d',\n  '*currency*.market_cap', '*currency*.last_updated']\n```\n\nFinally, the `global_info()` method in Current class returns a dictionary with the following keys as an overview of cryptocurrency markets as a whole\n\n```python\ndict_keys(['active_cryptos', 'active_exchanges', 'btc_dominance',\n 'eth_dominance', 'total_market_cap', 'total_volume_24h',\n 'total_volume_24h_reported', 'altcoin_volume_24h',\n 'altcoin_volume_24h_reported', 'altcoin_market_cap', 'last_updated'])\n```\n\n_________________________________________________________________________________________________________\n\n#### Release History\n- 0.1.7 - Trimmed code dependencies.\n- 0.1.6 - Fix compliance with upstream changes, added support for Python 3.8 and dropped support for Python 3.5.\n- 0.1.5 - Updated historical snapshot to suit the new upstream changes from CoinMarketCap\n- 0.1.4 - Re-wrote the Current classes to use the new CoinMarketCap API\n- 0.1.3  - Added Historical Snapshot feature\n- 0.1.2  - Added support for Python 3.5 and 3.7\n- 0.1.1  - Added license info and improved documentation\n- 0.1.0  - Initial Public Release\n\n#### How to Contribute\n\nThis project welcomes contributions from anyone interested in this project. Guidelines for contribution is being drafted but for now a pull request with explanation of the contributions will suffice.\n\n_________________________________________________________________________________________________________\n\n#### Credits\n\nShoutout to [CoinMarketCap](https://coinmarketcap.com/) :heart: for the access to their API as well as allowing projects such as this plug into the datawarehouse.\n\n_________________________________________________________________________________________________________\n\n#### License\n\nLicense: [BSD-3](https://github.com/PyDataBlog/Coinsta/blob/master/LICENSE)\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2FPyDataBlog%2FCoinsta.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2FPyDataBlog%2FCoinsta?ref=badge_large)\n\n_________________________________________________________________________________________________________\n\n[Back to top](#table-of-content)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PyDataBlog/Coinsta", "keywords": "", "license": "BSD 3-Clause License", "maintainer": "", "maintainer_email": "", "name": "coinsta", "package_url": "https://pypi.org/project/coinsta/", "platform": "", "project_url": "https://pypi.org/project/coinsta/", "project_urls": {"Homepage": "https://github.com/PyDataBlog/Coinsta"}, "release_url": "https://pypi.org/project/coinsta/0.1.7/", "requires_dist": ["pandas (==1.0.1)", "lxml (==4.5.0)", "requests (==2.20.0)", "html5lib (==1.0.1)"], "requires_python": "", "summary": "A Python package for acquiring both historical and current data of cryptocurrencies", "version": "0.1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Coinsta</h1>\n<p>A Python :snake: package for acquiring both historical and current data of crypto-currencies:moneybag:.</p>\n<hr>\n<p><strong>Author:</strong> Bernard Brenyah</p>\n<h2>Project Status</h2>\n<p><a href=\"https://pypi.python.org/pypi/coinsta/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2818f3183edbbc380268ca1a1a1d5a81f931b5bd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f696e7374612e737667\"></a>\n<a href=\"https://www.travis-ci.org/PyDataBlog/Coinsta\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/765a4b2bc20794f2dc7d1893af2740f270c0460c/68747470733a2f2f7777772e7472617669732d63692e6f72672f507944617461426c6f672f436f696e7374612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/PyDataBlog/Coinsta/issues\" rel=\"nofollow\"><img alt=\"Issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/124d97bdd20fbceb9fabaf10e3f7890ff1f46086/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f507944617461426c6f672f636f696e7374612e737667\"></a>\n<a href=\"https://github.com/PyDataBlog/Coinsta/commits/master\" rel=\"nofollow\"><img alt=\"Maintenance\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90bf1b2a4d99698c4dffbc494b9734690a777fec/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d61696e7461696e65642533462d7965732d677265656e2e737667\"></a>\n<a href=\"https://app.fossa.io/projects/git%2Bgithub.com%2FPyDataBlog%2FCoinsta?ref=badge_shield\" rel=\"nofollow\"><img alt=\"FOSSA Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/461e1dc3a047d4e3d46076a605165d469d7d420f/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f6769742532426769746875622e636f6d253246507944617461426c6f67253246436f696e7374612e7376673f747970653d736869656c64\"></a>\n<a href=\"https://pypi.python.org/pypi/coinsta/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/440b6a59854d43c35614a821fdc83dec603015e5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f636f696e7374612e7376673f636f6c6f723d677265656e\"></a>\n<a href=\"https://pypi.python.org/pypi/coinsta/\" rel=\"nofollow\"><img alt=\"Supported Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c85383e363d556097b158920354dbf1fb77be024/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f636f696e7374612e737667\"></a>\n<a href=\"https://mybinder.org/v2/gh/PyDataBlog/Coinsta/master\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86eb116bc9e98bea90d9454762d384d9cae5055c/68747470733a2f2f6d7962696e6465722e6f72672f62616467652e737667\"></a></p>\n<h2>Table of Content</h2>\n<ol>\n<li><a href=\"#motivation\" rel=\"nofollow\">Motivation</a></li>\n<li><a href=\"#frameworks-used\" rel=\"nofollow\">Frameworks Used</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#pending-features\" rel=\"nofollow\">Pending Features</a></li>\n<li><a href=\"#how-to-use\" rel=\"nofollow\">How To Use</a></li>\n<li><a href=\"#release-history\" rel=\"nofollow\">Release History</a></li>\n<li><a href=\"#how-to-contribute\" rel=\"nofollow\">How To Contribute</a></li>\n<li><a href=\"#credits\" rel=\"nofollow\">Credits</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n</ol>\n<hr>\n<h3>Motivation</h3>\n<p>Why <code>coinsta</code>?\nI spent the past couple of months on a graduate dissertation which required the use of both historical and current data on cryptocurrencies. After browsing the Python Packaging Index (PYPI), I was frustrated by the lack of a Python package that catered for such needs. As far as I know only <a href=\"https://github.com/guptarohit/cryptoCMD\" rel=\"nofollow\">cyrptoCMD</a> came close to meeting my needs. The only drawback is the that package only delivers historical data. OK so \"<em>why not edit that project and make a pull request with your suggestions?</em>\"</p>\n<p>That was the original plan until I realised that the scraping code could relatively be done quickly with the help of <code>pandas</code> package. If I went with the original plan I would have to rewrite the whole code and implementation ideas for <code>cryptoCMD</code> project. The only logical conclusion was starting a new project that I wish I had during my data collection process. A project inspired by scripts I generated for my dissertation project.</p>\n<p>As a result, this project is the first Python project that supplies both historical and current data on cryptocurrency markets and assets in one coherent package.</p>\n<hr>\n<h3>Frameworks Used</h3>\n<p>This package leverages the power of the following packages:</p>\n<ul>\n<li><code>pandas</code></li>\n<li><code>requests</code></li>\n<li><code>lxml</code></li>\n<li><code>beautifoulsoup</code></li>\n</ul>\n<hr>\n<h3>Installation</h3>\n<p>The easiest way to install Coinsta is to use the default python package installer <code>pip</code>:</p>\n<pre>pip install coinsta\n</pre>\n<p>and for the few brave ones who like bleeding edge technology, the latest source can be installed via with this command:</p>\n<pre>pip install git+git://github.com/PyDataBlog/Coinsta.git\n</pre>\n<hr>\n<h3>Features</h3>\n<ul>\n<li>Current global information on cryptocurrency markets.</li>\n<li>Current market information on the top 100 cryptocurrencies.</li>\n<li>Current data on a specified cryptocurrency.</li>\n<li>Historical data on all active cryptocurrencies.</li>\n<li>Get historical snapshots of cryptocurrencies.</li>\n</ul>\n<h3>Pending Features</h3>\n<ul>\n<li>[X] Migrate the current class to the new CoinMarketCap API.</li>\n<li>[X] Dropped support for Python 3.5.</li>\n<li>[X] Added support for Python 3.8.</li>\n<li>[X] Improve documentation and doc strings.</li>\n<li>[X] Optimisation of code.</li>\n<li>[X] Support for CoinMarketCap's historical snapshots.</li>\n</ul>\n<h4>How To Use</h4>\n<p><strong>Historical Data</strong></p>\n<pre><span class=\"c1\"># import the Historical class</span>\n<span class=\"kn\">from</span> <span class=\"nn\">coinsta.core</span> <span class=\"kn\">import</span> <span class=\"n\">Historical</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span>\n\n<span class=\"c1\"># specify dates considered</span>\n<span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get data</span>\n<span class=\"n\">coin_spec</span> <span class=\"o\">=</span> <span class=\"n\">Historical</span><span class=\"p\">(</span><span class=\"s1\">'btc'</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"n\">end</span><span class=\"p\">)</span>\n<span class=\"n\">btc_data</span> <span class=\"o\">=</span> <span class=\"n\">coin_spec</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">btc_data</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">())</span>\n\n\n<span class=\"c1\">#by default the end date is set to use the \"today's\" date</span>\n<span class=\"c1\"># of the user unless otherwise specified like above</span>\n</pre>\n<p><strong>Alternative Constructors for Historical data from dates in the form of strings (YYYY-MM-DD) or (YYYY/MM/DD):</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">coinsta.core</span> <span class=\"kn\">import</span> <span class=\"n\">Historical</span>\n\n<span class=\"c1\"># default alternative method for \"-\" formatted date strings</span>\n<span class=\"n\">alt_spec</span> <span class=\"o\">=</span> <span class=\"n\">Historical</span><span class=\"o\">.</span><span class=\"n\">from_strings</span><span class=\"p\">(</span><span class=\"s1\">'btc'</span><span class=\"p\">,</span> <span class=\"s1\">'2018-3-1'</span><span class=\"p\">,</span><span class=\"s1\">'2018-6-1'</span><span class=\"p\">,</span> <span class=\"n\">hyphen</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">alt_btc</span> <span class=\"o\">=</span> <span class=\"n\">alt_spec</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">alt_btc</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># another alternative method for \"/\" formated date strings</span>\n<span class=\"n\">other_spec</span> <span class=\"o\">=</span> <span class=\"n\">Historical</span><span class=\"o\">.</span><span class=\"n\">from_strings</span><span class=\"p\">(</span><span class=\"s1\">'btc'</span><span class=\"p\">,</span> <span class=\"s1\">'2018/3/1'</span><span class=\"p\">,</span><span class=\"s1\">'2018/6/1'</span><span class=\"p\">,</span> <span class=\"n\">hyphen</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">another_btc</span> <span class=\"o\">=</span> <span class=\"n\">other_spec</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">another_btc</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">())</span>\n</pre>\n<p>The <code>get_data()</code> method and the <code>from_strings</code> method from the Historical class returns a <code>pandas</code> DataFrame object with sorted in an ascending order indexed the dates specified by the user:</p>\n<pre>    Open     High      Low    Close      Volume    Market_cap\nDate\n</pre>\n<p>So what was the top cryptocurrency (in terms of market capitalisation) on date XYZ?\nLuckily, CoinMarketCap delivers periodic snapshots of the this type of rankings. The <code>HistoricalSnapshot</code> class taps into data to supply users with such information.</p>\n<p>The Historical Snapshot feature returns a Pandas DataFrame object with the following self describing columns:</p>\n<pre><span class=\"n\">Index</span><span class=\"p\">([</span><span class=\"s1\">'Rank'</span><span class=\"p\">,</span> <span class=\"s1\">'Name'</span><span class=\"p\">,</span> <span class=\"s1\">'Symbol'</span><span class=\"p\">,</span> <span class=\"s1\">'Market Cap'</span><span class=\"p\">,</span> <span class=\"s1\">'Price'</span><span class=\"p\">,</span> <span class=\"s1\">'Circulating Supply'</span><span class=\"p\">,</span>\n       <span class=\"s1\">'Volume (24h)'</span><span class=\"p\">,</span> <span class=\"s1\">'% 1h'</span><span class=\"p\">,</span> <span class=\"s1\">'% 24h'</span><span class=\"p\">,</span> <span class=\"s1\">'</span><span class=\"si\">% 7d</span><span class=\"s1\">'</span><span class=\"p\">],</span>\n      <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"s1\">'object'</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Historical Snapshots:</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">coinsta.core</span> <span class=\"kn\">import</span> <span class=\"n\">HistoricalSnapshot</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span>\n\n<span class=\"n\">snap_date</span> <span class=\"o\">=</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">29</span><span class=\"p\">)</span>\n\n<span class=\"n\">july_2018</span> <span class=\"o\">=</span> <span class=\"n\">HistoricalSnapshot</span><span class=\"p\">(</span><span class=\"n\">snap_date</span><span class=\"p\">)</span>\n<span class=\"n\">july_2018_snapshot</span> <span class=\"o\">=</span> <span class=\"n\">july_2018</span><span class=\"o\">.</span><span class=\"n\">get_snapshot</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">july_2018_snapshot</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">())</span>\n</pre>\n<p><strong>Current Data:</strong></p>\n<pre><span class=\"c1\"># import the Current class and instantiate the current class object with specifications</span>\n<span class=\"kn\">from</span> <span class=\"nn\">coinsta.core</span> <span class=\"kn\">import</span> <span class=\"n\">Current</span>\n<span class=\"n\">cur</span> <span class=\"o\">=</span> <span class=\"n\">Current</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">'YOUR-API-KEY-HERE'</span><span class=\"p\">,</span> <span class=\"n\">currency</span><span class=\"o\">=</span><span class=\"s1\">'eur'</span><span class=\"p\">)</span>  <span class=\"c1\"># Default is usd</span>\n\n<span class=\"c1\"># get current market information on a specified crypto</span>\n<span class=\"n\">btc_current</span> <span class=\"o\">=</span> <span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">get_current</span><span class=\"p\">(</span><span class=\"s1\">'btc'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">btc_current</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get the top 100 cryptos (in terms of market cap)</span>\n<span class=\"n\">current_100</span> <span class=\"o\">=</span> <span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">top_100</span><span class=\"p\">(</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>  <span class=\"c1\"># Default limit is 100 but can be increased as a user wishes</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">current_100</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># get global overview of crypto markets</span>\n<span class=\"n\">glo_info</span> <span class=\"o\">=</span> <span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">global_info</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">glo_info</span><span class=\"p\">)</span>\n</pre>\n<p>The <code>get_current()</code> method from the current class returns a <code>pandas</code> DataFrame object with one column representing the following named rows of information on the cryptocurrency specified:</p>\n<pre><span class=\"n\">dict_keys</span><span class=\"p\">([</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'symbol'</span><span class=\"p\">,</span> <span class=\"s1\">'rank'</span><span class=\"p\">,</span> <span class=\"s1\">'circulating_supply'</span><span class=\"p\">,</span>\n <span class=\"s1\">'total_supply'</span><span class=\"p\">,</span> <span class=\"s1\">'max_supply'</span><span class=\"p\">,</span> <span class=\"s1\">'price'</span><span class=\"p\">,</span> <span class=\"s1\">'volume_24h'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'percent_change_1h'</span><span class=\"p\">,</span> <span class=\"s1\">'percent_change_24h'</span><span class=\"p\">,</span> <span class=\"s1\">'percent_change_7d'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'market_cap'</span><span class=\"p\">,</span> <span class=\"s1\">'last_updated'</span><span class=\"p\">])</span>\n</pre>\n<p>The <code>top_100</code> method in the current class returns a <code>pandas</code> DataFrame object of the top 100 cryptocurrencies in terms of market capitalization. The following are the columns returned:</p>\n<pre><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'symbol'</span><span class=\"p\">,</span> <span class=\"s1\">'slug'</span><span class=\"p\">,</span> <span class=\"s1\">'num_market_pairs'</span><span class=\"p\">,</span> <span class=\"s1\">'date_added'</span><span class=\"p\">,</span>\n <span class=\"s1\">'tags'</span><span class=\"p\">,</span> <span class=\"s1\">'max_supply'</span><span class=\"p\">,</span> <span class=\"s1\">'circulating_supply'</span><span class=\"p\">,</span> <span class=\"s1\">'total_supply'</span><span class=\"p\">,</span> <span class=\"s1\">'platform'</span><span class=\"p\">,</span>\n <span class=\"s1\">'cmc_rank'</span><span class=\"p\">,</span> <span class=\"s1\">'last_updated'</span><span class=\"p\">,</span> <span class=\"s1\">'*currency*.price'</span><span class=\"p\">,</span> <span class=\"s1\">'*currency*.volume_24h'</span><span class=\"p\">,</span>\n <span class=\"s1\">'*currency*.percent_change_1h'</span><span class=\"p\">,</span> <span class=\"s1\">'*currency*.percent_change_24h'</span><span class=\"p\">,</span> <span class=\"s1\">'*currency*.percent_change_7d'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'*currency*.market_cap'</span><span class=\"p\">,</span> <span class=\"s1\">'*currency*.last_updated'</span><span class=\"p\">]</span>\n</pre>\n<p>Finally, the <code>global_info()</code> method in Current class returns a dictionary with the following keys as an overview of cryptocurrency markets as a whole</p>\n<pre><span class=\"n\">dict_keys</span><span class=\"p\">([</span><span class=\"s1\">'active_cryptos'</span><span class=\"p\">,</span> <span class=\"s1\">'active_exchanges'</span><span class=\"p\">,</span> <span class=\"s1\">'btc_dominance'</span><span class=\"p\">,</span>\n <span class=\"s1\">'eth_dominance'</span><span class=\"p\">,</span> <span class=\"s1\">'total_market_cap'</span><span class=\"p\">,</span> <span class=\"s1\">'total_volume_24h'</span><span class=\"p\">,</span>\n <span class=\"s1\">'total_volume_24h_reported'</span><span class=\"p\">,</span> <span class=\"s1\">'altcoin_volume_24h'</span><span class=\"p\">,</span>\n <span class=\"s1\">'altcoin_volume_24h_reported'</span><span class=\"p\">,</span> <span class=\"s1\">'altcoin_market_cap'</span><span class=\"p\">,</span> <span class=\"s1\">'last_updated'</span><span class=\"p\">])</span>\n</pre>\n<hr>\n<h4>Release History</h4>\n<ul>\n<li>0.1.7 - Trimmed code dependencies.</li>\n<li>0.1.6 - Fix compliance with upstream changes, added support for Python 3.8 and dropped support for Python 3.5.</li>\n<li>0.1.5 - Updated historical snapshot to suit the new upstream changes from CoinMarketCap</li>\n<li>0.1.4 - Re-wrote the Current classes to use the new CoinMarketCap API</li>\n<li>0.1.3  - Added Historical Snapshot feature</li>\n<li>0.1.2  - Added support for Python 3.5 and 3.7</li>\n<li>0.1.1  - Added license info and improved documentation</li>\n<li>0.1.0  - Initial Public Release</li>\n</ul>\n<h4>How to Contribute</h4>\n<p>This project welcomes contributions from anyone interested in this project. Guidelines for contribution is being drafted but for now a pull request with explanation of the contributions will suffice.</p>\n<hr>\n<h4>Credits</h4>\n<p>Shoutout to <a href=\"https://coinmarketcap.com/\" rel=\"nofollow\">CoinMarketCap</a> :heart: for the access to their API as well as allowing projects such as this plug into the datawarehouse.</p>\n<hr>\n<h4>License</h4>\n<p>License: <a href=\"https://github.com/PyDataBlog/Coinsta/blob/master/LICENSE\" rel=\"nofollow\">BSD-3</a></p>\n<p><a href=\"https://app.fossa.io/projects/git%2Bgithub.com%2FPyDataBlog%2FCoinsta?ref=badge_large\" rel=\"nofollow\"><img alt=\"FOSSA Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c653b8a390e4df78fe64762c06fd4c9c73b06bbf/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f6769742532426769746875622e636f6d253246507944617461426c6f67253246436f696e7374612e7376673f747970653d6c61726765\"></a></p>\n<hr>\n<p><a href=\"#table-of-content\" rel=\"nofollow\">Back to top</a></p>\n\n          </div>"}, "last_serial": 6653138, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "14f965f87bfe87b73ec635a99254ead7", "sha256": "615d5289b433bd97bacec73f3fe50d623b65527f920d6854cd799b7160022cba"}, "downloads": -1, "filename": "coinsta-0.1.0.tar.gz", "has_sig": false, "md5_digest": "14f965f87bfe87b73ec635a99254ead7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6772, "upload_time": "2018-06-30T22:37:59", "upload_time_iso_8601": "2018-06-30T22:37:59.040438Z", "url": "https://files.pythonhosted.org/packages/a6/7f/ea9c28289eaf0738a157200ba5084493e6867ec51cc4dc916c2064088693/coinsta-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f8a3af7b9369532eab49e5d26e946018", "sha256": "cca1e9b9ef17c658cbbb4eb2e44ebb91ac955590fc420299549d4a875b2f8eef"}, "downloads": -1, "filename": "coinsta-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f8a3af7b9369532eab49e5d26e946018", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6933, "upload_time": "2018-07-01T12:06:16", "upload_time_iso_8601": "2018-07-01T12:06:16.916392Z", "url": "https://files.pythonhosted.org/packages/ea/c9/eaaa740c2c055a0087dd6964603d9383906a149a206141283da2def5051d/coinsta-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "35250a8e3af08cc12626a9cd45ba107f", "sha256": "efce17e36d355e90462d8d2e5a73660428bac007ea56d670719374b598f532eb"}, "downloads": -1, "filename": "coinsta-0.1.2.tar.gz", "has_sig": false, "md5_digest": "35250a8e3af08cc12626a9cd45ba107f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7433, "upload_time": "2018-07-10T17:05:09", "upload_time_iso_8601": "2018-07-10T17:05:09.402130Z", "url": "https://files.pythonhosted.org/packages/5f/82/7adf3a5c1bcac44fc20533faab2d7c66f697ce486cf5b87cd0bb075dd721/coinsta-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "dd78a48e01b2373e294f7b73628d6f12", "sha256": "9dc02d4010ba4e9bdf32e012e6d781fc9bbd6b75cac9ca2c8d3835b8f8996e5d"}, "downloads": -1, "filename": "coinsta-0.1.3.tar.gz", "has_sig": false, "md5_digest": "dd78a48e01b2373e294f7b73628d6f12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9770, "upload_time": "2018-08-04T22:21:53", "upload_time_iso_8601": "2018-08-04T22:21:53.749447Z", "url": "https://files.pythonhosted.org/packages/ee/63/3f923ceb9c799292dbb96ba67b00b2059e43da3253b59474d6d7e2e76a5e/coinsta-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "5a68405c8986507282fd966f284eb530", "sha256": "5d6e7204c34535f819d45d01d0fc20ddd3ddeae93826b69d2c264e86d15d7977"}, "downloads": -1, "filename": "coinsta-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5a68405c8986507282fd966f284eb530", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10939, "upload_time": "2019-07-24T11:21:45", "upload_time_iso_8601": "2019-07-24T11:21:45.107989Z", "url": "https://files.pythonhosted.org/packages/3a/a1/565e0eb111e28954a3a849aa5084651504fecb162deb5513ff523c99b91f/coinsta-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5aefddbf4f455580dbee445a26c8e64", "sha256": "2e5e2f788ddcf9e83cec2f876dbf2f2c52c48bf9211a2dce07019509b320d900"}, "downloads": -1, "filename": "coinsta-0.1.4.tar.gz", "has_sig": false, "md5_digest": "a5aefddbf4f455580dbee445a26c8e64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9270, "upload_time": "2019-07-24T11:21:46", "upload_time_iso_8601": "2019-07-24T11:21:46.353294Z", "url": "https://files.pythonhosted.org/packages/52/32/3b82adc7a842d302effd9d63c3b38f96573acc4762aa1724229e3f0c9337/coinsta-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "2614e1d8698cc27816b028f9287414d7", "sha256": "9cb2e44ca37cfd10af6c072a735a31ad102fb55c5d5479812dc35c7bc9f1c16c"}, "downloads": -1, "filename": "coinsta-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "2614e1d8698cc27816b028f9287414d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10936, "upload_time": "2019-11-01T11:02:01", "upload_time_iso_8601": "2019-11-01T11:02:01.897687Z", "url": "https://files.pythonhosted.org/packages/1b/14/654f8443b53699130032576033cde1e5057fc54992d8b058f7437580b981/coinsta-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "446e2667b95460d8add796ca20fb3d86", "sha256": "b84e36317a3d567659f84a19d60aff93401e73db1e011b59c7e1b1ee5cd53076"}, "downloads": -1, "filename": "coinsta-0.1.5.tar.gz", "has_sig": false, "md5_digest": "446e2667b95460d8add796ca20fb3d86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10151, "upload_time": "2019-11-01T11:02:03", "upload_time_iso_8601": "2019-11-01T11:02:03.327826Z", "url": "https://files.pythonhosted.org/packages/66/68/91b0390c44884a7945dfead5c278f6639c64756bdecad1194911f037209d/coinsta-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "d88bec1bfbc809ade651390f825e42a3", "sha256": "fbf67a168160a4e485b29ce99d01de897c7477939d2d7f1ec604159d541d5eca"}, "downloads": -1, "filename": "coinsta-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d88bec1bfbc809ade651390f825e42a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10816, "upload_time": "2020-02-18T10:14:13", "upload_time_iso_8601": "2020-02-18T10:14:13.868396Z", "url": "https://files.pythonhosted.org/packages/05/e3/98bcdf49ff7b5a9eb3304a9732fe0a6d55aeb1554b604e6a327305274976/coinsta-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "193fc22f57651b0a7cb92ee9a81e45a4", "sha256": "b7dc30ebcfbadcde9bc11562472626828d08329b281eee7c17dbdce289028913"}, "downloads": -1, "filename": "coinsta-0.1.6.tar.gz", "has_sig": false, "md5_digest": "193fc22f57651b0a7cb92ee9a81e45a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10026, "upload_time": "2020-02-18T10:14:15", "upload_time_iso_8601": "2020-02-18T10:14:15.608412Z", "url": "https://files.pythonhosted.org/packages/7b/12/0b7f47fb29f50748023e8adefb955afdee7d3ea349cca6a5d90f7c6d4b48/coinsta-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "5cd78f29d54ebd04d8cbc7ea8c9f5b95", "sha256": "4c8a56470f8aeb1e43514e9e24ff4421cf413bff2da9cc631b159c31cb1844d1"}, "downloads": -1, "filename": "coinsta-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "5cd78f29d54ebd04d8cbc7ea8c9f5b95", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10826, "upload_time": "2020-02-18T13:03:22", "upload_time_iso_8601": "2020-02-18T13:03:22.496637Z", "url": "https://files.pythonhosted.org/packages/35/16/3b3f5604787f3402d7820c761e52d0877f9484e53f0b8b0279dccc7f4613/coinsta-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d9e2ca2bf06f8f5995a926d1cb968ca", "sha256": "8ee266224eb6452164153d1082cb64fef61df6aebe1c30d634ca3b96a9cfd6dd"}, "downloads": -1, "filename": "coinsta-0.1.7.tar.gz", "has_sig": false, "md5_digest": "2d9e2ca2bf06f8f5995a926d1cb968ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10015, "upload_time": "2020-02-18T13:03:24", "upload_time_iso_8601": "2020-02-18T13:03:24.222858Z", "url": "https://files.pythonhosted.org/packages/7a/27/2b8b36f406eb318851cfd66908e96472410e00eb442a92776fd7477fbc30/coinsta-0.1.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5cd78f29d54ebd04d8cbc7ea8c9f5b95", "sha256": "4c8a56470f8aeb1e43514e9e24ff4421cf413bff2da9cc631b159c31cb1844d1"}, "downloads": -1, "filename": "coinsta-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "5cd78f29d54ebd04d8cbc7ea8c9f5b95", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10826, "upload_time": "2020-02-18T13:03:22", "upload_time_iso_8601": "2020-02-18T13:03:22.496637Z", "url": "https://files.pythonhosted.org/packages/35/16/3b3f5604787f3402d7820c761e52d0877f9484e53f0b8b0279dccc7f4613/coinsta-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d9e2ca2bf06f8f5995a926d1cb968ca", "sha256": "8ee266224eb6452164153d1082cb64fef61df6aebe1c30d634ca3b96a9cfd6dd"}, "downloads": -1, "filename": "coinsta-0.1.7.tar.gz", "has_sig": false, "md5_digest": "2d9e2ca2bf06f8f5995a926d1cb968ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10015, "upload_time": "2020-02-18T13:03:24", "upload_time_iso_8601": "2020-02-18T13:03:24.222858Z", "url": "https://files.pythonhosted.org/packages/7a/27/2b8b36f406eb318851cfd66908e96472410e00eb442a92776fd7477fbc30/coinsta-0.1.7.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:06 2020"}