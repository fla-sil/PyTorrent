{"info": {"author": "Brian Horn", "author_email": "trycatchhorn@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "CONTENT\n--------------------\n- ABOUT PY_ALG_DAT\n- REQUIREMENTS\n- INSTALLATION\n- UNIT TESTS\n- EXAMPLES\n- DOCUMENTATION\n- LICENSE\n- AUTHOR\n\nABOUT PY_ALG_DAT\n--------------------\npy_alg_dat is a collection of data structures and algorithms written in Python.\nThe purpose of the code is to show how many of the abstract data types (ADTs) and\nalgorithms being thought in Computer Science courses can be realised in Python.\n\nMy primary focus has been to write a library which presents a clear\nimplementation of the various data structures and algorithms and how they can\nbe used. This means that I have made a conscious tradeoff where clarity of the\ncode outweighs subtle and exotic implementation constructs.\n\nThe library has mostly been implemented as a recreational project and should\nas such not be used in production code, since most of the data structures and\nalgorithms are already available in the standard Python library. However,\nwriting software that is robust, performs well, and is easy to maintain requires\nknowledge of data structures and algorithms. Therefore, implementing and\nexperimenting with these provides valuable knowledge about the inner workings\nand implementation details found in such stardard libraries.\n\nFEATURES\n--------------------\nData structures included in the library\n\n- Dynamic array\n- Stack\n- Queue\n- BinaryHeap\n  - MinHeap\n  - MaxHeap\n- LinkedList\n  - Singly linked list\n  - Doubly linked list\n- Partition/Union-Find\n- Graph\n  - Directed\n  - Undirected \n  - Directed weighted\n  - Undirected weighted\n\nAdditionally, the library contains the most common algorithms and operations\nneeded when working with these data structures.\n\nREQUIREMENTS\n--------------------\nThe library is selfcontained and does not have any external dependencies.\npy_alg_dat should run on any platform with Python 2.7 or above.\n\nINSTALLATION\n--------------------\nTo install the py_alg_dat library execute the following command in the raptor\ndirectory:\n\n$ python setup.py install\n\nEXAMPLES\n--------------------\nBesides the unit tests py_alg_dat has a collection of functional test examples\nwhich shows how the library can be used from a client's perspective. \n\nThe examples can be found in the 'examples' folder in the raptor directory.\n\nDOCUMENTATION\n--------------------\nThe py_alg_dat API contains Docstrings for all classes and methods. Additional\ndocumentation about the library can be found in the 'docs' folder in the\nraptor directory.\n\nLICENSE\n--------------------\npy_alg_dat is published under the MIT License. The copyright and license are\nspecified in the file \"LICENSE.txt\" in the raptor directory.\n\nAUTHOR\n--------------------\nBrian Horn, trycatchhorn@gmail.com", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.brianhorn.dk", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "py_alg_dat", "package_url": "https://pypi.org/project/py_alg_dat/", "platform": "any", "project_url": "https://pypi.org/project/py_alg_dat/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.brianhorn.dk"}, "release_url": "https://pypi.org/project/py_alg_dat/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Various data structures and algorithms.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"content\">\n<h2>CONTENT</h2>\n<ul>\n<li>ABOUT PY_ALG_DAT</li>\n<li>REQUIREMENTS</li>\n<li>INSTALLATION</li>\n<li>UNIT TESTS</li>\n<li>EXAMPLES</li>\n<li>DOCUMENTATION</li>\n<li>LICENSE</li>\n<li>AUTHOR</li>\n</ul>\n</div>\n<div id=\"about-py-alg-dat\">\n<h2>ABOUT PY_ALG_DAT</h2>\n<p>py_alg_dat is a collection of data structures and algorithms written in Python.\nThe purpose of the code is to show how many of the abstract data types (ADTs) and\nalgorithms being thought in Computer Science courses can be realised in Python.</p>\n<p>My primary focus has been to write a library which presents a clear\nimplementation of the various data structures and algorithms and how they can\nbe used. This means that I have made a conscious tradeoff where clarity of the\ncode outweighs subtle and exotic implementation constructs.</p>\n<p>The library has mostly been implemented as a recreational project and should\nas such not be used in production code, since most of the data structures and\nalgorithms are already available in the standard Python library. However,\nwriting software that is robust, performs well, and is easy to maintain requires\nknowledge of data structures and algorithms. Therefore, implementing and\nexperimenting with these provides valuable knowledge about the inner workings\nand implementation details found in such stardard libraries.</p>\n</div>\n<div id=\"features\">\n<h2>FEATURES</h2>\n<p>Data structures included in the library</p>\n<ul>\n<li>Dynamic array</li>\n<li>Stack</li>\n<li>Queue</li>\n<li>BinaryHeap\n- MinHeap\n- MaxHeap</li>\n<li>LinkedList\n- Singly linked list\n- Doubly linked list</li>\n<li>Partition/Union-Find</li>\n<li>Graph\n- Directed\n- Undirected\n- Directed weighted\n- Undirected weighted</li>\n</ul>\n<p>Additionally, the library contains the most common algorithms and operations\nneeded when working with these data structures.</p>\n</div>\n<div id=\"requirements\">\n<h2>REQUIREMENTS</h2>\n<p>The library is selfcontained and does not have any external dependencies.\npy_alg_dat should run on any platform with Python 2.7 or above.</p>\n</div>\n<div id=\"installation\">\n<h2>INSTALLATION</h2>\n<p>To install the py_alg_dat library execute the following command in the raptor\ndirectory:</p>\n<p>$ python setup.py install</p>\n</div>\n<div id=\"examples\">\n<h2>EXAMPLES</h2>\n<p>Besides the unit tests py_alg_dat has a collection of functional test examples\nwhich shows how the library can be used from a client\u2019s perspective.</p>\n<p>The examples can be found in the \u2018examples\u2019 folder in the raptor directory.</p>\n</div>\n<div id=\"documentation\">\n<h2>DOCUMENTATION</h2>\n<p>The py_alg_dat API contains Docstrings for all classes and methods. Additional\ndocumentation about the library can be found in the \u2018docs\u2019 folder in the\nraptor directory.</p>\n</div>\n<div id=\"license\">\n<h2>LICENSE</h2>\n<p>py_alg_dat is published under the MIT License. The copyright and license are\nspecified in the file \u201cLICENSE.txt\u201d in the raptor directory.</p>\n</div>\n<div id=\"author\">\n<h2>AUTHOR</h2>\n<p>Brian Horn, <a href=\"mailto:trycatchhorn%40gmail.com\">trycatchhorn<span>@</span>gmail<span>.</span>com</a></p>\n</div>\n\n          </div>"}, "last_serial": 1626945, "releases": {"1.0.1": []}, "urls": [], "timestamp": "Fri May  8 03:10:51 2020"}