{"info": {"author": "MIT ODL Engineering", "author_email": "odl-engineering@mit.edu", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Flask-Log\r\n---------\r\n\r\n.. image:: https://img.shields.io/travis/mitodl/flask-log.svg\r\n    :target: https://travis-ci.org/mitodl/flask-log\r\n.. image:: https://img.shields.io/coveralls/mitodl/flask-log.svg\r\n    :target: https://coveralls.io/r/mitodl/flask-log\r\n.. image:: https://img.shields.io/github/issues/mitodl/flask-log.svg\r\n    :target: https://github.com/mitodl/flask-log/issues\r\n.. image:: https://img.shields.io/badge/license-BSD-blue.svg\r\n    :target: https://github.com/mitodl/flask-log/blob/master/LICENSE\r\n\r\nThis is a handy flask extension for setting up logging for your\r\napplication that is super simple to setup.  A basic example is:\r\n\r\n.. code-block:: python\r\n\r\n  import flask\r\n  from flask.ext.log import Logging\r\n\r\n  app = flask.Flask(__name__)\r\n  app.config['FLASK_LOG_LEVEL'] = 'DEBUG'\r\n  flask_log = Logging(app)\r\n  \r\n\r\n  app.logger.debug('Testing a debug message')\r\n\r\nSo the level of logging is configurable through regular flask\r\nconfiguration methods.  Additionally, since we are setting up the root\r\nlogger, you can use whatever logger you want as you aren't restricted\r\nto the flask application logger. i.e. something like:\r\n\r\n.. code-block:: python\r\n\r\n  import logging\r\n\r\n  log = logging.getLogger('my-special-logger')\r\n  log.critical('Oh my!')\r\n\r\nwill also keep the formatter and level if the extensions has been\r\ninitialized anywhere.\r\n\r\nFeatures\r\n========\r\n\r\n- Sets up syslog handling to either ``/dev/log``, ``/var/run/syslog``,\r\n  or ``127.0.0.1`` on UDP port 514 depending on what is available.\r\n- Adds a log formatter packed with information and by default produces\r\n  output like: ``[2015-03-31 18:10:17,816] CRITICAL 42282 [__main__]\r\n  example.py:7 - [my_hostname] - Hi``\r\n- Full code coverage\r\n- The log formatter can be overidden with something like:\r\n\r\n  .. code-block:: python\r\n\r\n    flask_logger = Logging(app)\r\n    flask_logger.set_formatter('Log message follows: %(message)s')\r\n\r\nLinks\r\n`````\r\n\r\n- `documentation <https://github.com/mitodl/flask-log/blob/master/README.rst>`_\r\n- `development version <https://github.com/mitodl/flask-log/archive/master.tar.gz#egg=flask-log-dev>`_", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mitodl/flask-log", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "flask-log", "package_url": "https://pypi.org/project/flask-log/", "platform": "any", "project_url": "https://pypi.org/project/flask-log/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/mitodl/flask-log"}, "release_url": "https://pypi.org/project/flask-log/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Configure logging in flask applications", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/mitodl/flask-log\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/mitodl/flask-log.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c868a57d86e586f5097bb931c389c04ef74586a/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6d69746f646c2f666c61736b2d6c6f672e737667\"></a>\n<a href=\"https://coveralls.io/r/mitodl/flask-log\" rel=\"nofollow\"><img alt=\"https://img.shields.io/coveralls/mitodl/flask-log.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ef531dec129a7b6ecd0037521bcdacfdf7f62547/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6d69746f646c2f666c61736b2d6c6f672e737667\"></a>\n<a href=\"https://github.com/mitodl/flask-log/issues\" rel=\"nofollow\"><img alt=\"https://img.shields.io/github/issues/mitodl/flask-log.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ab7cd9010e58f38f8bb0e232d9213005adeacc9c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6d69746f646c2f666c61736b2d6c6f672e737667\"></a>\n<a href=\"https://github.com/mitodl/flask-log/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/license-BSD-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9171fec0f2756a39e1306c6dc870bf846e0b4f1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4253442d626c75652e737667\"></a>\n<p>This is a handy flask extension for setting up logging for your\napplication that is super simple to setup.  A basic example is:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask.ext.log</span> <span class=\"kn\">import</span> <span class=\"n\">Logging</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'FLASK_LOG_LEVEL'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'DEBUG'</span>\n<span class=\"n\">flask_log</span> <span class=\"o\">=</span> <span class=\"n\">Logging</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'Testing a debug message'</span><span class=\"p\">)</span>\n</pre>\n<p>So the level of logging is configurable through regular flask\nconfiguration methods.  Additionally, since we are setting up the root\nlogger, you can use whatever logger you want as you aren\u2019t restricted\nto the flask application logger. i.e. something like:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'my-special-logger'</span><span class=\"p\">)</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">critical</span><span class=\"p\">(</span><span class=\"s1\">'Oh my!'</span><span class=\"p\">)</span>\n</pre>\n<p>will also keep the formatter and level if the extensions has been\ninitialized anywhere.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li><p>Sets up syslog handling to either <tt>/dev/log</tt>, <tt>/var/run/syslog</tt>,\nor <tt>127.0.0.1</tt> on UDP port 514 depending on what is available.</p>\n</li>\n<li><p>Adds a log formatter packed with information and by default produces\noutput like: <tt><span class=\"pre\">[2015-03-31</span> 18:10:17,816] CRITICAL 42282 [__main__]\nexample.py:7 - [my_hostname] - Hi</tt></p>\n</li>\n<li><p>Full code coverage</p>\n</li>\n<li><p>The log formatter can be overidden with something like:</p>\n<pre><span class=\"n\">flask_logger</span> <span class=\"o\">=</span> <span class=\"n\">Logging</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">flask_logger</span><span class=\"o\">.</span><span class=\"n\">set_formatter</span><span class=\"p\">(</span><span class=\"s1\">'Log message follows: </span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ul>\n<div id=\"links\">\n<h3>Links</h3>\n<ul>\n<li><a href=\"https://github.com/mitodl/flask-log/blob/master/README.rst\" rel=\"nofollow\">documentation</a></li>\n<li><a href=\"https://github.com/mitodl/flask-log/archive/master.tar.gz#egg=flask-log-dev\" rel=\"nofollow\">development version</a></li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1493397, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1356c1b86e13a48c040bf448d4571584", "sha256": "e708570519f8c50d12b398c0c49a43e1c69b4298dae28c326a7aa4becad5a44c"}, "downloads": -1, "filename": "flask-log-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1356c1b86e13a48c040bf448d4571584", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4042, "upload_time": "2015-04-06T22:11:16", "upload_time_iso_8601": "2015-04-06T22:11:16.235830Z", "url": "https://files.pythonhosted.org/packages/b4/64/b0907045c9cf0f8850118739e3b3061a546dae2a6fafd3e6c26e594eaba8/flask-log-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1356c1b86e13a48c040bf448d4571584", "sha256": "e708570519f8c50d12b398c0c49a43e1c69b4298dae28c326a7aa4becad5a44c"}, "downloads": -1, "filename": "flask-log-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1356c1b86e13a48c040bf448d4571584", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4042, "upload_time": "2015-04-06T22:11:16", "upload_time_iso_8601": "2015-04-06T22:11:16.235830Z", "url": "https://files.pythonhosted.org/packages/b4/64/b0907045c9cf0f8850118739e3b3061a546dae2a6fafd3e6c26e594eaba8/flask-log-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:40 2020"}