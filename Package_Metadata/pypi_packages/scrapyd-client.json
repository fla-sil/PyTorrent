{"info": {"author": "Scrapy developers", "author_email": "info@scrapy.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP"], "description": "==============\nScrapyd-client\n==============\n\n.. image:: https://secure.travis-ci.org/scrapy/scrapyd-client.png?branch=master\n   :target: http://travis-ci.org/scrapy/scrapyd-client\n\nScrapyd-client is a client for `scrapyd <https://github.com/scrapy/scrapyd>`_. It provides the ``scrapyd-deploy`` utility which allows you to deploy your project to a Scrapyd server.\n\n.. _how-it-works:\n\nHow It Works\n------------\n\nDeploying your project to a Scrapyd server typically involves two steps:\n\n1. `Eggifying <http://peak.telecommunity.com/DevCenter/PythonEggs>`_ your project. You'll need to install `setuptools <http://pypi.python.org/pypi/setuptools>`_ for this. See `Egg Caveats`_ below.\n2. Uploading the egg to the Scrapyd server through the `addversion.json <https://scrapyd.readthedocs.org/en/latest/api.html#addversion-json>`_ endpoint.\n\nThe ``scrapyd-deploy`` tool automates the process of building the egg and pushing it to the target Scrapyd server.\n\n.. _targets:\n\nTargets\n-------\n\nYou can define Scrapyd targets in your project's ``scrapy.cfg`` file. Example::\n\n    [deploy:example]\n    url = http://scrapyd.example.com/api/scrapyd\n    username = scrapy\n    password = secret\n\nWhile your target needs to be defined with its URL in ``scrapy.cfg``, you can use `netrc <https://www.gnu.org/software/inetutils/manual/html_node/The-_002enetrc-file.html>`_ for username and password, like so::\n\n    machine scrapyd.example.com\n        username scrapy\n        password secret\n\nIf you want to list all available targets, you can use the ``-l`` option::\n\n    scrapyd-deploy -l\n\nTo list projects available on a specific target, use the ``-L`` option::\n\n    scrapyd-deploy -L example\n\nDeploying a Project\n-------------------\n\nFirst ``cd`` into your project's root, you can then deploy your project with the following::\n\n    scrapyd-deploy <target> -p <project>\n\nThis will eggify your project and upload it to the target. If you have a ``setup.py`` file in your project, it will be used, otherwise one will be created automatically. \n\nIf successful you should see a JSON response similar to the following::\n\n    Deploying myproject-1287453519 to http://localhost:6800/addversion.json\n    Server response (200):\n    {\"status\": \"ok\", \"spiders\": [\"spider1\", \"spider2\"]}\n\nTo save yourself from having to specify the target and project, you can set the defaults in the ``scrapy.cfg`` file::\n\n    [deploy]\n    url = http://scrapyd.example.com/api/scrapyd\n    username = scrapy\n    password = secret\n    project = yourproject\n\n\nYou can now deploy your project with just the following::\n\n    scrapyd-deploy\n    \nIf you have more than one target to deploy, you can deploy your project in all targets with one command::\n\n      scrapyd-deploy -a -p <project>\n\n.. _versioning:\n\nVersioning\n----------\n\nBy default, ``scrapyd-deploy`` uses the current timestamp for generating the project version, as shown above. However, you can pass a custom version using ``--version``::\n\n    scrapyd-deploy <target> -p <project> --version <version>\n\nOr for all targets::\n\n    scrapyd-deploy -a -p <project> --version <version>\n\nThe version must be comparable with `LooseVersion <http://epydoc.sourceforge.net/stdlib/distutils.version.LooseVersion-class.html>`_. Scrapyd will use the greatest version unless specified.\n\nIf you use Mercurial or Git, you can use ``HG`` or ``GIT`` respectively as the argument supplied to ``--version`` to use the current revision as the version. You can save yourself having to specify the version parameter by adding it to your target's entry in ``scrapy.cfg``::\n\n    [deploy:target]\n    ...\n    version = HG\n\n.. _local-settings:\n\nLocal Settings\n--------------\n\nYou may want to keep certain settings local and not have them deployed to Scrapyd. To accomplish this you can create a ``local_settings.py`` file at the root of your project, where your ``scrapy.cfg`` file resides, and add the following to your project's settings::\n\n    try:\n        from local_settings import *\n    except ImportError:\n        pass\n\n``scrapyd-deploy`` doesn't deploy anything outside of the project module, so the ``local_settings.py`` file won't be deployed.\n\n.. _egg-caveats:\n\nEgg Caveats\n-----------\n\nSome things to keep in mind when building eggs for your Scrapy project:\n\n* Make sure no local development settings are included in the egg when you build it. The ``find_packages`` function may be picking up your custom settings. In most cases you want to upload the egg with the default project settings.\n* You should avoid using ``__file__`` in your project code as it doesn't play well with eggs. Consider using `pkgutil.get_data() <http://docs.python.org/library/pkgutil.html#pkgutil.get_data>`_ instead.\n* Be careful when writing to disk in your project, as Scrapyd will most likely be running under a different user which may not have write access to certain directories. If you can, avoiding writing to disk and always use `tempfile <http://docs.python.org/library/tempfile.html>`_ for temporary files.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scrapy/scrapyd-client", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "scrapyd-client", "package_url": "https://pypi.org/project/scrapyd-client/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/scrapyd-client/", "project_urls": {"Homepage": "https://github.com/scrapy/scrapyd-client"}, "release_url": "https://pypi.org/project/scrapyd-client/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "A client for scrapyd", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/scrapy/scrapyd-client\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/scrapy/scrapyd-client.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c44d3b28c0619188d0c10421ac23f8ec494a5938/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f7363726170792f736372617079642d636c69656e742e706e673f6272616e63683d6d6173746572\"></a>\n<p>Scrapyd-client is a client for <a href=\"https://github.com/scrapy/scrapyd\" rel=\"nofollow\">scrapyd</a>. It provides the <tt><span class=\"pre\">scrapyd-deploy</span></tt> utility which allows you to deploy your project to a Scrapyd server.</p>\n<div id=\"id1\">\n<span id=\"how-it-works\"></span><h2>How It Works</h2>\n<p>Deploying your project to a Scrapyd server typically involves two steps:</p>\n<ol>\n<li><a href=\"http://peak.telecommunity.com/DevCenter/PythonEggs\" rel=\"nofollow\">Eggifying</a> your project. You\u2019ll need to install <a href=\"http://pypi.python.org/pypi/setuptools\" rel=\"nofollow\">setuptools</a> for this. See <a href=\"#id5\" rel=\"nofollow\">Egg Caveats</a> below.</li>\n<li>Uploading the egg to the Scrapyd server through the <a href=\"https://scrapyd.readthedocs.org/en/latest/api.html#addversion-json\" rel=\"nofollow\">addversion.json</a> endpoint.</li>\n</ol>\n<p>The <tt><span class=\"pre\">scrapyd-deploy</span></tt> tool automates the process of building the egg and pushing it to the target Scrapyd server.</p>\n</div>\n<div id=\"id2\">\n<span id=\"targets\"></span><h2>Targets</h2>\n<p>You can define Scrapyd targets in your project\u2019s <tt>scrapy.cfg</tt> file. Example:</p>\n<pre>[deploy:example]\nurl = http://scrapyd.example.com/api/scrapyd\nusername = scrapy\npassword = secret\n</pre>\n<p>While your target needs to be defined with its URL in <tt>scrapy.cfg</tt>, you can use <a href=\"https://www.gnu.org/software/inetutils/manual/html_node/The-_002enetrc-file.html\" rel=\"nofollow\">netrc</a> for username and password, like so:</p>\n<pre>machine scrapyd.example.com\n    username scrapy\n    password secret\n</pre>\n<p>If you want to list all available targets, you can use the <tt><span class=\"pre\">-l</span></tt> option:</p>\n<pre>scrapyd-deploy -l\n</pre>\n<p>To list projects available on a specific target, use the <tt><span class=\"pre\">-L</span></tt> option:</p>\n<pre>scrapyd-deploy -L example\n</pre>\n</div>\n<div id=\"deploying-a-project\">\n<h2>Deploying a Project</h2>\n<p>First <tt>cd</tt> into your project\u2019s root, you can then deploy your project with the following:</p>\n<pre>scrapyd-deploy &lt;target&gt; -p &lt;project&gt;\n</pre>\n<p>This will eggify your project and upload it to the target. If you have a <tt>setup.py</tt> file in your project, it will be used, otherwise one will be created automatically.</p>\n<p>If successful you should see a JSON response similar to the following:</p>\n<pre>Deploying myproject-1287453519 to http://localhost:6800/addversion.json\nServer response (200):\n{\"status\": \"ok\", \"spiders\": [\"spider1\", \"spider2\"]}\n</pre>\n<p>To save yourself from having to specify the target and project, you can set the defaults in the <tt>scrapy.cfg</tt> file:</p>\n<pre>[deploy]\nurl = http://scrapyd.example.com/api/scrapyd\nusername = scrapy\npassword = secret\nproject = yourproject\n</pre>\n<p>You can now deploy your project with just the following:</p>\n<pre>scrapyd-deploy\n</pre>\n<p>If you have more than one target to deploy, you can deploy your project in all targets with one command:</p>\n<pre>scrapyd-deploy -a -p &lt;project&gt;\n</pre>\n</div>\n<div id=\"id3\">\n<span id=\"versioning\"></span><h2>Versioning</h2>\n<p>By default, <tt><span class=\"pre\">scrapyd-deploy</span></tt> uses the current timestamp for generating the project version, as shown above. However, you can pass a custom version using <tt><span class=\"pre\">--version</span></tt>:</p>\n<pre>scrapyd-deploy &lt;target&gt; -p &lt;project&gt; --version &lt;version&gt;\n</pre>\n<p>Or for all targets:</p>\n<pre>scrapyd-deploy -a -p &lt;project&gt; --version &lt;version&gt;\n</pre>\n<p>The version must be comparable with <a href=\"http://epydoc.sourceforge.net/stdlib/distutils.version.LooseVersion-class.html\" rel=\"nofollow\">LooseVersion</a>. Scrapyd will use the greatest version unless specified.</p>\n<p>If you use Mercurial or Git, you can use <tt>HG</tt> or <tt>GIT</tt> respectively as the argument supplied to <tt><span class=\"pre\">--version</span></tt> to use the current revision as the version. You can save yourself having to specify the version parameter by adding it to your target\u2019s entry in <tt>scrapy.cfg</tt>:</p>\n<pre>[deploy:target]\n...\nversion = HG\n</pre>\n</div>\n<div id=\"id4\">\n<span id=\"local-settings\"></span><h2>Local Settings</h2>\n<p>You may want to keep certain settings local and not have them deployed to Scrapyd. To accomplish this you can create a <tt>local_settings.py</tt> file at the root of your project, where your <tt>scrapy.cfg</tt> file resides, and add the following to your project\u2019s settings:</p>\n<pre>try:\n    from local_settings import *\nexcept ImportError:\n    pass\n</pre>\n<p><tt><span class=\"pre\">scrapyd-deploy</span></tt> doesn\u2019t deploy anything outside of the project module, so the <tt>local_settings.py</tt> file won\u2019t be deployed.</p>\n</div>\n<div id=\"id5\">\n<span id=\"egg-caveats\"></span><h2>Egg Caveats</h2>\n<p>Some things to keep in mind when building eggs for your Scrapy project:</p>\n<ul>\n<li>Make sure no local development settings are included in the egg when you build it. The <tt>find_packages</tt> function may be picking up your custom settings. In most cases you want to upload the egg with the default project settings.</li>\n<li>You should avoid using <tt>__file__</tt> in your project code as it doesn\u2019t play well with eggs. Consider using <a href=\"http://docs.python.org/library/pkgutil.html#pkgutil.get_data\" rel=\"nofollow\">pkgutil.get_data()</a> instead.</li>\n<li>Be careful when writing to disk in your project, as Scrapyd will most likely be running under a different user which may not have write access to certain directories. If you can, avoiding writing to disk and always use <a href=\"http://docs.python.org/library/tempfile.html\" rel=\"nofollow\">tempfile</a> for temporary files.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3120928, "releases": {"1.0": [], "1.0.1": [{"comment_text": "", "digests": {"md5": "48b45fdd2514c780b64c077042fa46f9", "sha256": "8bd918d389806a7168b33003c16e41bb99f087edbaf4557642c018423dd70c1b"}, "downloads": -1, "filename": "scrapyd-client-1.0.1.tar.gz", "has_sig": false, "md5_digest": "48b45fdd2514c780b64c077042fa46f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5432, "upload_time": "2015-04-09T20:37:14", "upload_time_iso_8601": "2015-04-09T20:37:14.069398Z", "url": "https://files.pythonhosted.org/packages/4f/12/7b6929bd1089733fd1248408125be7e932cc43b397af053b1009a2d1e91e/scrapyd-client-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "614ad1c48b78cd71c931420fa1e93f3b", "sha256": "caa0f5369c2e1efa7b79c309afb9819b2518870c5f4f2caf84d3e474cd6a9890"}, "downloads": -1, "filename": "scrapyd_client-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "614ad1c48b78cd71c931420fa1e93f3b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13196, "upload_time": "2017-02-10T14:21:23", "upload_time_iso_8601": "2017-02-10T14:21:23.311574Z", "url": "https://files.pythonhosted.org/packages/e1/76/3dd5fbe5c98436bb71d7212bf18233ae8519da0a7d03f541dafe0f91be6b/scrapyd_client-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21429a56e9f83e9b1bce97dec1d84318", "sha256": "e547475c5c8dbd811e2cc4141a0e7b4ba47600e9980c59df4f831bb60b94e4cb"}, "downloads": -1, "filename": "scrapyd-client-1.1.0.tar.gz", "has_sig": false, "md5_digest": "21429a56e9f83e9b1bce97dec1d84318", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7823, "upload_time": "2017-02-10T14:21:12", "upload_time_iso_8601": "2017-02-10T14:21:12.249181Z", "url": "https://files.pythonhosted.org/packages/78/5c/cee10ae5ec487a7da96dc6400fe60bd8bc90a8828ca5f50510c0c2b2d377/scrapyd-client-1.1.0.tar.gz", "yanked": false}], "1.2.0a1": [{"comment_text": "", "digests": {"md5": "448679e9b93772cc5a0815cba494d466", "sha256": "c5d742f2f6a551e1ba00b5423197fc1a7c2a09d64871b2c80707cb463d0df605"}, "downloads": -1, "filename": "scrapyd_client-1.2.0a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "448679e9b93772cc5a0815cba494d466", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15121, "upload_time": "2017-08-24T16:43:54", "upload_time_iso_8601": "2017-08-24T16:43:54.173838Z", "url": "https://files.pythonhosted.org/packages/1c/b4/1045eac8200331de05fb5ed548b62d2b2a5a757e73ffa2361e8d8fb33591/scrapyd_client-1.2.0a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54909f6cfa16db84105460db562c1184", "sha256": "9f4fcb8474e21703d7f1dd518d9c73740901e55c07a5311801b891f821931f2f"}, "downloads": -1, "filename": "scrapyd-client-1.2.0a1.tar.gz", "has_sig": false, "md5_digest": "54909f6cfa16db84105460db562c1184", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11311, "upload_time": "2017-08-24T16:43:55", "upload_time_iso_8601": "2017-08-24T16:43:55.519461Z", "url": "https://files.pythonhosted.org/packages/f3/d7/81e212d7e18f5531dcd117faf9e8721fb67c49748046fcfb6c86960184df/scrapyd-client-1.2.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "614ad1c48b78cd71c931420fa1e93f3b", "sha256": "caa0f5369c2e1efa7b79c309afb9819b2518870c5f4f2caf84d3e474cd6a9890"}, "downloads": -1, "filename": "scrapyd_client-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "614ad1c48b78cd71c931420fa1e93f3b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13196, "upload_time": "2017-02-10T14:21:23", "upload_time_iso_8601": "2017-02-10T14:21:23.311574Z", "url": "https://files.pythonhosted.org/packages/e1/76/3dd5fbe5c98436bb71d7212bf18233ae8519da0a7d03f541dafe0f91be6b/scrapyd_client-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21429a56e9f83e9b1bce97dec1d84318", "sha256": "e547475c5c8dbd811e2cc4141a0e7b4ba47600e9980c59df4f831bb60b94e4cb"}, "downloads": -1, "filename": "scrapyd-client-1.1.0.tar.gz", "has_sig": false, "md5_digest": "21429a56e9f83e9b1bce97dec1d84318", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7823, "upload_time": "2017-02-10T14:21:12", "upload_time_iso_8601": "2017-02-10T14:21:12.249181Z", "url": "https://files.pythonhosted.org/packages/78/5c/cee10ae5ec487a7da96dc6400fe60bd8bc90a8828ca5f50510c0c2b2d377/scrapyd-client-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:48 2020"}