{"info": {"author": "Xiaoqi Zheng", "author_email": "zheng.shnu@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: Python Software Foundation License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Operating System :: Unix", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "MethylPurify_v2\n------------------\n\nThis script is used for predicting subclone purity.\n\n\nGet Dependent data\n````````````````````\nGet the version of genome fasta that you mapped your fastqs, \nwe support hg18 and hg19 genome fasta now, take hg19 as an example\n\n.. code:: python\n   \n     ## use built-in script\n     cd methylpurify/db\n     bash genome.sh hg19\n\n\nGet Dependent software\n````````````````````````\n* `samtools <http://samtools.sourceforge.net>`_, version 0.2.0\n* `numpy <http://www.numpy.org>`_, version 1.8.2\n* `pyfasta`, version 0.5.2\n\nEasy to start \n`````````````````````\nInput: BAM file, this should be mapped with BSMap with -R option\n* `BSMap <https://code.google.com/p/bsmap/>`_\n\nCurrently, we only support hg19 and hg18 genome index mapped BAM file.\n\nIf your fastq mapping is done with hg19 index, use following command:\n\n.. code:: python\n\n      MethylPurify -f input.bam -b 300 -c 10 -s 50 -i methylpurify/db/CGI_hg19_slop1000.bed -g /path/to/hg19.fa --cnv\n\n\nThe results would be placed into *input* folder: alpha1.pred, MethylProfile.bed\n\n\nOptions\n````````````````\n* -f: input BAM file\n* -c: coverage level\n* -b: genome bin size\n* -s: sampling times\n* -g: species genome fasta file\n* -i: CG island specified, can use methylpurify/db/CGI_hg19_slop1000.bed for hg19, methylpurify/db/CGI_hg18_slop1000.bed for hg18\n* --cnv: use cnv data or not, only available for hg19, for other assembly, do not use this", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "genomics methylation cancer", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "MethylPurify", "package_url": "https://pypi.org/project/MethylPurify/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/MethylPurify/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/MethylPurify/2.0-20141116/", "requires_dist": null, "requires_python": null, "summary": "Methylation subclone detection", "version": "2.0-20141116", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This script is used for predicting subclone purity.</p>\n<div id=\"get-dependent-data\">\n<h2>Get Dependent data</h2>\n<p>Get the version of genome fasta that you mapped your fastqs,\nwe support hg18 and hg19 genome fasta now, take hg19 as an example</p>\n<pre><span class=\"c1\">## use built-in script</span>\n<span class=\"n\">cd</span> <span class=\"n\">methylpurify</span><span class=\"o\">/</span><span class=\"n\">db</span>\n<span class=\"n\">bash</span> <span class=\"n\">genome</span><span class=\"o\">.</span><span class=\"n\">sh</span> <span class=\"n\">hg19</span>\n</pre>\n</div>\n<div id=\"get-dependent-software\">\n<h2>Get Dependent software</h2>\n<ul>\n<li><a href=\"http://samtools.sourceforge.net\" rel=\"nofollow\">samtools</a>, version 0.2.0</li>\n<li><a href=\"http://www.numpy.org\" rel=\"nofollow\">numpy</a>, version 1.8.2</li>\n<li><cite>pyfasta</cite>, version 0.5.2</li>\n</ul>\n</div>\n<div id=\"easy-to-start\">\n<h2>Easy to start</h2>\n<p>Input: BAM file, this should be mapped with BSMap with -R option\n* <a href=\"https://code.google.com/p/bsmap/\" rel=\"nofollow\">BSMap</a></p>\n<p>Currently, we only support hg19 and hg18 genome index mapped BAM file.</p>\n<p>If your fastq mapping is done with hg19 index, use following command:</p>\n<pre><span class=\"n\">MethylPurify</span> <span class=\"o\">-</span><span class=\"n\">f</span> <span class=\"nb\">input</span><span class=\"o\">.</span><span class=\"n\">bam</span> <span class=\"o\">-</span><span class=\"n\">b</span> <span class=\"mi\">300</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"mi\">10</span> <span class=\"o\">-</span><span class=\"n\">s</span> <span class=\"mi\">50</span> <span class=\"o\">-</span><span class=\"n\">i</span> <span class=\"n\">methylpurify</span><span class=\"o\">/</span><span class=\"n\">db</span><span class=\"o\">/</span><span class=\"n\">CGI_hg19_slop1000</span><span class=\"o\">.</span><span class=\"n\">bed</span> <span class=\"o\">-</span><span class=\"n\">g</span> <span class=\"o\">/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">hg19</span><span class=\"o\">.</span><span class=\"n\">fa</span> <span class=\"o\">--</span><span class=\"n\">cnv</span>\n</pre>\n<p>The results would be placed into <em>input</em> folder: alpha1.pred, MethylProfile.bed</p>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n<ul>\n<li>-f: input BAM file</li>\n<li>-c: coverage level</li>\n<li>-b: genome bin size</li>\n<li>-s: sampling times</li>\n<li>-g: species genome fasta file</li>\n<li>-i: CG island specified, can use methylpurify/db/CGI_hg19_slop1000.bed for hg19, methylpurify/db/CGI_hg18_slop1000.bed for hg18</li>\n<li>\u2013cnv: use cnv data or not, only available for hg19, for other assembly, do not use this</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1309280, "releases": {"2.0": [{"comment_text": "", "digests": {"md5": "95c03a97a22705e03bb637a73d3fec9b", "sha256": "f7726300a2b4808f0b2eb7c2a8707bc479cb2070ff80f3f6b0cded96941acc55"}, "downloads": -1, "filename": "MethylPurify-2.0.tar.gz", "has_sig": false, "md5_digest": "95c03a97a22705e03bb637a73d3fec9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 580644, "upload_time": "2014-03-08T05:50:27", "upload_time_iso_8601": "2014-03-08T05:50:27.271290Z", "url": "https://files.pythonhosted.org/packages/34/85/dae15bf7e7fc75360a4987058fdce76458dc000b1c1450691d0c1db0a24e/MethylPurify-2.0.tar.gz", "yanked": false}], "2.0-20140310": [{"comment_text": "", "digests": {"md5": "7370f9d405af393a719f6669ee231c59", "sha256": "9df1b14a5057099a6a8c346a34421977889564c9b940b0ad743f34fe760dbf66"}, "downloads": -1, "filename": "MethylPurify-2.0-20140310.tar.gz", "has_sig": false, "md5_digest": "7370f9d405af393a719f6669ee231c59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 580496, "upload_time": "2014-03-10T23:16:46", "upload_time_iso_8601": "2014-03-10T23:16:46.548620Z", "url": "https://files.pythonhosted.org/packages/ce/78/bab95559f86a9bb641d856341bf53ad1085a907def335bcfc5f980e9b9d6/MethylPurify-2.0-20140310.tar.gz", "yanked": false}], "2.0-20140819": [{"comment_text": "", "digests": {"md5": "34728ca0e40c13df7628b685220cdd36", "sha256": "a9511e16c7a9a6cfab92bf90565a50b0aa62b8c84677761bccaeed6d4dcaa910"}, "downloads": -1, "filename": "MethylPurify-2.0-20140819.tar.gz", "has_sig": false, "md5_digest": "34728ca0e40c13df7628b685220cdd36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9015, "upload_time": "2014-08-20T01:32:15", "upload_time_iso_8601": "2014-08-20T01:32:15.377488Z", "url": "https://files.pythonhosted.org/packages/42/84/c94e62f37ec18d5a48ae27d7de31c04606a69083ec6d38b15b6a18b79bd3/MethylPurify-2.0-20140819.tar.gz", "yanked": false}], "2.0-20141116": [{"comment_text": "", "digests": {"md5": "2eb38ab215dcede4fdd99798dc68b9db", "sha256": "b1d597b1b570cbca846489e7b187374a7ef07fcfb7fb881d24b5454ef50f2391"}, "downloads": -1, "filename": "MethylPurify-2.0-20141116.tar.gz", "has_sig": false, "md5_digest": "2eb38ab215dcede4fdd99798dc68b9db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 582504, "upload_time": "2014-11-17T01:07:36", "upload_time_iso_8601": "2014-11-17T01:07:36.639455Z", "url": "https://files.pythonhosted.org/packages/d2/ba/eadb6f01b39aa51d250790650f11436eb86af9ca479b3cb39f0204f6f635/MethylPurify-2.0-20141116.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2eb38ab215dcede4fdd99798dc68b9db", "sha256": "b1d597b1b570cbca846489e7b187374a7ef07fcfb7fb881d24b5454ef50f2391"}, "downloads": -1, "filename": "MethylPurify-2.0-20141116.tar.gz", "has_sig": false, "md5_digest": "2eb38ab215dcede4fdd99798dc68b9db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 582504, "upload_time": "2014-11-17T01:07:36", "upload_time_iso_8601": "2014-11-17T01:07:36.639455Z", "url": "https://files.pythonhosted.org/packages/d2/ba/eadb6f01b39aa51d250790650f11436eb86af9ca479b3cb39f0204f6f635/MethylPurify-2.0-20141116.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:42 2020"}