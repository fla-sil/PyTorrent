{"info": {"author": "Viliam Valent", "author_email": "i3bindings@viliamvalent.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# i3bindings\n[![forthebadge](https://forthebadge.com/images/badges/made-with-python.svg)](https://forthebadge.com)\n[![forthebadge](https://forthebadge.com/images/badges/no-ragrets.svg)](https://forthebadge.com)\n\nSuccinct syntax for i3 config\n\n## TL;DR\nCheck out this [example](#Example).\n\n## Installation\n`pip install i3bindings`\n\n## Usage\n1. Create *input_file* using [Concepts](#Concepts) bellow.\n2. Try it with `i3bindings input_file`\n3. Write it to i3 config using `i3bindings --write input_file`\n\nCheck out `i3bindings --help` for more options.\n\n## Concepts\n### Mapping types\n*i3bindings* supports two types of mappings:\n1. Key binding, where `$mod+f -> fullscreen toggle` becomes `bindsym $mod+f fullscreen toggle`\n1. Exec binding, where `$mod+Return #> xterm` becomes `bindsym $mod+Return exec --no-startup-id xterm`\n\n### Alternatives\n*Alternatives* express the idea that the same action should be bound to multiple key-bindings.\n\nFor example:\n\n`$mod+h/Left -> focus left` will create two lines of config:\n\n`bindsym $mod+h focus left` and `bindsym $mod+Left focues left`\n\n### Variables\n*Variables* are shorter way to write bindings that have a similar structure.\n\nE.g.:\n`$mod+{f,s} -> {fullscreen,split} toggle` will create:\n\n`bindsym $mod+f fullscreen toggle`\n`bindsym $mod+s split toggle`\n\n#### Range expansion\nInside variables you can write `1-10` and it will be expanded to `1,2,3...`.\n\n#### Variable reference\nYou can reference current value of the variable using `@n` syntax, where `n` is the variable index.\nEvery variable is numbered (starting from 0) from left to right. E.g.:\n```\nfoo {bar,{foo,bar}} {0-1} ...\n    ^    ^          ^\n    0    1          2\n```\n\nUse it like this:\n`$mod+Control+Shift {1-9,0} -> move container to workspace {1-10}; workspace @1`\n\nOr to avoid repeating long sequences:\n\n`$mod+x -> {[instance=\\\"calculator\\\"]} scratchpad show; @0 move position center`\n\n#### Empty value\nYou can use empty value inside *Variable*, denoted by `_`. E.g. `$mod+{_,Shift+}{h/Left,j/Down,k/Up,l/Right} -> {focus,move} {left,down,up,right}`.\nThis will expand to both `bindsym $mod+h focus left` and `bindsym $mod+Shift+h move left`\n\n### Nesting\nYou can use *Alternatives* and *Variables* inside *Variable* to create many bindings at once.\n\n\n## Additional syntax\n### Parenthesis\nBy default, special characters like space, plus sign, etc. are *token* separators.\n`$mod+p/Print` is therefore expanded to `$mod+p` and `$mod+Print`.\nYou can use parenthesis to modify the behavior:\n`($mod+p/Print) #> scrot` will create two lines of config:\n`bindsym $mod+p exec --no-startup-id scrot` and `bindsym Print exec --no-startup-id scrot`\n\n### Comments\nEmpty lines or lines starting with `#` will be ignored.\n\n## Example\nTo demonstrate the syntax have a look at this input file:\n```config\n    $mod+{_,Shift+}{h/Left,j/Down,k/Up,l/Right}         -> {focus,move} {left,down,up,right}\n    $mod+Control+Shift+{{h/Left,k/Up},{l/Right,j/Down}} -> resize {shrink,grow} {width,height} 5px or 5ppt\n    $mod+{_,Shift+}{1-9,0}                              -> {_,move container to }workspace {1-10}\n    $mod+Control+Shift {1-9,0}                          -> move container to workspace {1-10}; workspace @1\n    # vim:filetype=config\n```\nThe expanded version creates this i3 config:\n```i3\n    bindsym $mod+h focus left\n    bindsym $mod+Left focus left\n    bindsym $mod+j focus down\n    bindsym $mod+Down focus down\n    bindsym $mod+k focus up\n    bindsym $mod+Up focus up\n    bindsym $mod+l focus right\n    bindsym $mod+Right focus right\n    bindsym $mod+Shift+h move left\n    bindsym $mod+Shift+Left move left\n    bindsym $mod+Shift+j move down\n    bindsym $mod+Shift+Down move down\n    bindsym $mod+Shift+k move up\n    bindsym $mod+Shift+Up move up\n    bindsym $mod+Shift+l move right\n    bindsym $mod+Shift+Right move right\n    bindsym $mod+Control+Shift+h resize shrink width 5px or 5ppt\n    bindsym $mod+Control+Shift+Left resize shrink width 5px or 5ppt\n    bindsym $mod+Control+Shift+k resize shrink height 5px or 5ppt\n    bindsym $mod+Control+Shift+Up resize shrink height 5px or 5ppt\n    bindsym $mod+Control+Shift+l resize grow width 5px or 5ppt\n    bindsym $mod+Control+Shift+Right resize grow width 5px or 5ppt\n    bindsym $mod+Control+Shift+j resize grow height 5px or 5ppt\n    bindsym $mod+Control+Shift+Down resize grow height 5px or 5ppt\n    bindsym $mod+1 workspace 1\n    bindsym $mod+2 workspace 2\n    bindsym $mod+3 workspace 3\n    bindsym $mod+4 workspace 4\n    bindsym $mod+5 workspace 5\n    bindsym $mod+6 workspace 6\n    bindsym $mod+7 workspace 7\n    bindsym $mod+8 workspace 8\n    bindsym $mod+9 workspace 9\n    bindsym $mod+0 workspace 10\n    bindsym $mod+Shift+1 move container to workspace 1\n    bindsym $mod+Shift+2 move container to workspace 2\n    bindsym $mod+Shift+3 move container to workspace 3\n    bindsym $mod+Shift+4 move container to workspace 4\n    bindsym $mod+Shift+5 move container to workspace 5\n    bindsym $mod+Shift+6 move container to workspace 6\n    bindsym $mod+Shift+7 move container to workspace 7\n    bindsym $mod+Shift+8 move container to workspace 8\n    bindsym $mod+Shift+9 move container to workspace 9\n    bindsym $mod+Shift+0 move container to workspace 10\n    bindsym $mod+Control+Shift 1 move container to workspace 1; workspace 1\n    bindsym $mod+Control+Shift 2 move container to workspace 2; workspace 2\n    bindsym $mod+Control+Shift 3 move container to workspace 3; workspace 3\n    bindsym $mod+Control+Shift 4 move container to workspace 4; workspace 4\n    bindsym $mod+Control+Shift 5 move container to workspace 5; workspace 5\n    bindsym $mod+Control+Shift 6 move container to workspace 6; workspace 6\n    bindsym $mod+Control+Shift 7 move container to workspace 7; workspace 7\n    bindsym $mod+Control+Shift 8 move container to workspace 8; workspace 8\n    bindsym $mod+Control+Shift 9 move container to workspace 9; workspace 9\n    bindsym $mod+Control+Shift 0 move container to workspace 10; workspace 10\n```\n\n## Background\n[i3](https://i3wm.org/) is a great windows manager but its config is pretty verbose.\nI tried [bspwm](https://github.com/baskerville/bspwm) with its hotkey daemon [sxhkd](https://github.com/baskerville/sxhkd) and I much prefer that syntax.\nThat's why I wrote *i3bindings*.\nIt uses syntax similar to `sxhkd` for expansion of binding parameters, e.g. `$mod+{1-9,0} -> workspace {1-10}` will become `bindsym $mod+1 workspace 1`, `bindsym $mod+2 workspace 2`, and so on.\nIn addition, it has few more features.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ViliamV/i3bindings", "keywords": "i3,bspwm", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "i3bindings", "package_url": "https://pypi.org/project/i3bindings/", "platform": "", "project_url": "https://pypi.org/project/i3bindings/", "project_urls": {"Homepage": "https://github.com/ViliamV/i3bindings", "Repository": "https://github.com/ViliamV/i3bindings"}, "release_url": "https://pypi.org/project/i3bindings/1.0.0a1/", "requires_dist": null, "requires_python": ">=3.7,<4.0", "summary": "", "version": "1.0.0a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>i3bindings</h1>\n<p><a href=\"https://forthebadge.com\" rel=\"nofollow\"><img alt=\"forthebadge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7cefdfa620eb623843291a3c32383f169b6a60e0/68747470733a2f2f666f7274686562616467652e636f6d2f696d616765732f6261646765732f6d6164652d776974682d707974686f6e2e737667\"></a>\n<a href=\"https://forthebadge.com\" rel=\"nofollow\"><img alt=\"forthebadge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/939728425d0273b97bdf2fac7e45cac862aa42ef/68747470733a2f2f666f7274686562616467652e636f6d2f696d616765732f6261646765732f6e6f2d726167726574732e737667\"></a></p>\n<p>Succinct syntax for i3 config</p>\n<h2>TL;DR</h2>\n<p>Check out this <a href=\"#Example\" rel=\"nofollow\">example</a>.</p>\n<h2>Installation</h2>\n<p><code>pip install i3bindings</code></p>\n<h2>Usage</h2>\n<ol>\n<li>Create <em>input_file</em> using <a href=\"#Concepts\" rel=\"nofollow\">Concepts</a> bellow.</li>\n<li>Try it with <code>i3bindings input_file</code></li>\n<li>Write it to i3 config using <code>i3bindings --write input_file</code></li>\n</ol>\n<p>Check out <code>i3bindings --help</code> for more options.</p>\n<h2>Concepts</h2>\n<h3>Mapping types</h3>\n<p><em>i3bindings</em> supports two types of mappings:</p>\n<ol>\n<li>Key binding, where <code>$mod+f -&gt; fullscreen toggle</code> becomes <code>bindsym $mod+f fullscreen toggle</code></li>\n<li>Exec binding, where <code>$mod+Return #&gt; xterm</code> becomes <code>bindsym $mod+Return exec --no-startup-id xterm</code></li>\n</ol>\n<h3>Alternatives</h3>\n<p><em>Alternatives</em> express the idea that the same action should be bound to multiple key-bindings.</p>\n<p>For example:</p>\n<p><code>$mod+h/Left -&gt; focus left</code> will create two lines of config:</p>\n<p><code>bindsym $mod+h focus left</code> and <code>bindsym $mod+Left focues left</code></p>\n<h3>Variables</h3>\n<p><em>Variables</em> are shorter way to write bindings that have a similar structure.</p>\n<p>E.g.:\n<code>$mod+{f,s} -&gt; {fullscreen,split} toggle</code> will create:</p>\n<p><code>bindsym $mod+f fullscreen toggle</code>\n<code>bindsym $mod+s split toggle</code></p>\n<h4>Range expansion</h4>\n<p>Inside variables you can write <code>1-10</code> and it will be expanded to <code>1,2,3...</code>.</p>\n<h4>Variable reference</h4>\n<p>You can reference current value of the variable using <code>@n</code> syntax, where <code>n</code> is the variable index.\nEvery variable is numbered (starting from 0) from left to right. E.g.:</p>\n<pre><code>foo {bar,{foo,bar}} {0-1} ...\n    ^    ^          ^\n    0    1          2\n</code></pre>\n<p>Use it like this:\n<code>$mod+Control+Shift {1-9,0} -&gt; move container to workspace {1-10}; workspace @1</code></p>\n<p>Or to avoid repeating long sequences:</p>\n<p><code>$mod+x -&gt; {[instance=\\\"calculator\\\"]} scratchpad show; @0 move position center</code></p>\n<h4>Empty value</h4>\n<p>You can use empty value inside <em>Variable</em>, denoted by <code>_</code>. E.g. <code>$mod+{_,Shift+}{h/Left,j/Down,k/Up,l/Right} -&gt; {focus,move} {left,down,up,right}</code>.\nThis will expand to both <code>bindsym $mod+h focus left</code> and <code>bindsym $mod+Shift+h move left</code></p>\n<h3>Nesting</h3>\n<p>You can use <em>Alternatives</em> and <em>Variables</em> inside <em>Variable</em> to create many bindings at once.</p>\n<h2>Additional syntax</h2>\n<h3>Parenthesis</h3>\n<p>By default, special characters like space, plus sign, etc. are <em>token</em> separators.\n<code>$mod+p/Print</code> is therefore expanded to <code>$mod+p</code> and <code>$mod+Print</code>.\nYou can use parenthesis to modify the behavior:\n<code>($mod+p/Print) #&gt; scrot</code> will create two lines of config:\n<code>bindsym $mod+p exec --no-startup-id scrot</code> and <code>bindsym Print exec --no-startup-id scrot</code></p>\n<h3>Comments</h3>\n<p>Empty lines or lines starting with <code>#</code> will be ignored.</p>\n<h2>Example</h2>\n<p>To demonstrate the syntax have a look at this input file:</p>\n<pre>    $mod+{_,Shift+}{h/Left,j/Down,k/Up,l/Right}         -&gt; {focus,move} {left,down,up,right}\n    $mod+Control+Shift+{{h/Left,k/Up},{l/Right,j/Down}} -&gt; resize {shrink,grow} {width,height} 5px or 5ppt\n    $mod+{_,Shift+}{1-9,0}                              -&gt; {_,move container to }workspace {1-10}\n    $mod+Control+Shift {1-9,0}                          -&gt; move container to workspace {1-10}; workspace @1\n    # vim:filetype=config\n</pre>\n<p>The expanded version creates this i3 config:</p>\n<pre>    bindsym $mod+h focus left\n    bindsym $mod+Left focus left\n    bindsym $mod+j focus down\n    bindsym $mod+Down focus down\n    bindsym $mod+k focus up\n    bindsym $mod+Up focus up\n    bindsym $mod+l focus right\n    bindsym $mod+Right focus right\n    bindsym $mod+Shift+h move left\n    bindsym $mod+Shift+Left move left\n    bindsym $mod+Shift+j move down\n    bindsym $mod+Shift+Down move down\n    bindsym $mod+Shift+k move up\n    bindsym $mod+Shift+Up move up\n    bindsym $mod+Shift+l move right\n    bindsym $mod+Shift+Right move right\n    bindsym $mod+Control+Shift+h resize shrink width 5px or 5ppt\n    bindsym $mod+Control+Shift+Left resize shrink width 5px or 5ppt\n    bindsym $mod+Control+Shift+k resize shrink height 5px or 5ppt\n    bindsym $mod+Control+Shift+Up resize shrink height 5px or 5ppt\n    bindsym $mod+Control+Shift+l resize grow width 5px or 5ppt\n    bindsym $mod+Control+Shift+Right resize grow width 5px or 5ppt\n    bindsym $mod+Control+Shift+j resize grow height 5px or 5ppt\n    bindsym $mod+Control+Shift+Down resize grow height 5px or 5ppt\n    bindsym $mod+1 workspace 1\n    bindsym $mod+2 workspace 2\n    bindsym $mod+3 workspace 3\n    bindsym $mod+4 workspace 4\n    bindsym $mod+5 workspace 5\n    bindsym $mod+6 workspace 6\n    bindsym $mod+7 workspace 7\n    bindsym $mod+8 workspace 8\n    bindsym $mod+9 workspace 9\n    bindsym $mod+0 workspace 10\n    bindsym $mod+Shift+1 move container to workspace 1\n    bindsym $mod+Shift+2 move container to workspace 2\n    bindsym $mod+Shift+3 move container to workspace 3\n    bindsym $mod+Shift+4 move container to workspace 4\n    bindsym $mod+Shift+5 move container to workspace 5\n    bindsym $mod+Shift+6 move container to workspace 6\n    bindsym $mod+Shift+7 move container to workspace 7\n    bindsym $mod+Shift+8 move container to workspace 8\n    bindsym $mod+Shift+9 move container to workspace 9\n    bindsym $mod+Shift+0 move container to workspace 10\n    bindsym $mod+Control+Shift 1 move container to workspace 1; workspace 1\n    bindsym $mod+Control+Shift 2 move container to workspace 2; workspace 2\n    bindsym $mod+Control+Shift 3 move container to workspace 3; workspace 3\n    bindsym $mod+Control+Shift 4 move container to workspace 4; workspace 4\n    bindsym $mod+Control+Shift 5 move container to workspace 5; workspace 5\n    bindsym $mod+Control+Shift 6 move container to workspace 6; workspace 6\n    bindsym $mod+Control+Shift 7 move container to workspace 7; workspace 7\n    bindsym $mod+Control+Shift 8 move container to workspace 8; workspace 8\n    bindsym $mod+Control+Shift 9 move container to workspace 9; workspace 9\n    bindsym $mod+Control+Shift 0 move container to workspace 10; workspace 10\n</pre>\n<h2>Background</h2>\n<p><a href=\"https://i3wm.org/\" rel=\"nofollow\">i3</a> is a great windows manager but its config is pretty verbose.\nI tried <a href=\"https://github.com/baskerville/bspwm\" rel=\"nofollow\">bspwm</a> with its hotkey daemon <a href=\"https://github.com/baskerville/sxhkd\" rel=\"nofollow\">sxhkd</a> and I much prefer that syntax.\nThat's why I wrote <em>i3bindings</em>.\nIt uses syntax similar to <code>sxhkd</code> for expansion of binding parameters, e.g. <code>$mod+{1-9,0} -&gt; workspace {1-10}</code> will become <code>bindsym $mod+1 workspace 1</code>, <code>bindsym $mod+2 workspace 2</code>, and so on.\nIn addition, it has few more features.</p>\n\n          </div>"}, "last_serial": 6224224, "releases": {"1.0.0a0": [{"comment_text": "", "digests": {"md5": "f8996016ff318a2b33cad90d5359e8d4", "sha256": "46a45d7f76f9251e366cdefbcfa42a23ffc2b559c65804bfee02fc0a7253ace0"}, "downloads": -1, "filename": "i3bindings-1.0.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "f8996016ff318a2b33cad90d5359e8d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 10744, "upload_time": "2019-12-01T12:02:34", "upload_time_iso_8601": "2019-12-01T12:02:34.809394Z", "url": "https://files.pythonhosted.org/packages/fa/38/883de2f83f5af3b67cc000742cc12b6c39deeae0d075423183adf64e952e/i3bindings-1.0.0a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f649736c25bd91167fe254d7185b143", "sha256": "f87d7f5fa253f13955392e1d568b63b90fffa5c9a7b78891761392b6b32ef753"}, "downloads": -1, "filename": "i3bindings-1.0.0a0.tar.gz", "has_sig": false, "md5_digest": "4f649736c25bd91167fe254d7185b143", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 10993, "upload_time": "2019-12-01T12:02:36", "upload_time_iso_8601": "2019-12-01T12:02:36.493457Z", "url": "https://files.pythonhosted.org/packages/10/01/507f71314df6c1e19cdf1d932270b11589098047c29e1fcd91aa9085ed35/i3bindings-1.0.0a0.tar.gz", "yanked": false}], "1.0.0a1": [{"comment_text": "", "digests": {"md5": "888fac02b0f9d41f7a79747a3c6b8cef", "sha256": "43bc87e8a4b104b60fd89affeb0d5f6125e0914e7f6ece73ca8b9a3303754fe8"}, "downloads": -1, "filename": "i3bindings-1.0.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "888fac02b0f9d41f7a79747a3c6b8cef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 10803, "upload_time": "2019-12-01T12:18:35", "upload_time_iso_8601": "2019-12-01T12:18:35.239176Z", "url": "https://files.pythonhosted.org/packages/88/98/2c4453f36e1b328ea2df00993f3617aad44b72acdb5fc07c8344d90c2268/i3bindings-1.0.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efc55f916e5da6a78f24a288691fee48", "sha256": "24889729c316ac6418023f453a44f16ec0f0a804af6dcef1b921d91358631142"}, "downloads": -1, "filename": "i3bindings-1.0.0a1.tar.gz", "has_sig": false, "md5_digest": "efc55f916e5da6a78f24a288691fee48", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 11075, "upload_time": "2019-12-01T12:18:36", "upload_time_iso_8601": "2019-12-01T12:18:36.908855Z", "url": "https://files.pythonhosted.org/packages/05/b2/e49628c415095e254304aed407dea5f539932313723536e224bf6ccb8688/i3bindings-1.0.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "888fac02b0f9d41f7a79747a3c6b8cef", "sha256": "43bc87e8a4b104b60fd89affeb0d5f6125e0914e7f6ece73ca8b9a3303754fe8"}, "downloads": -1, "filename": "i3bindings-1.0.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "888fac02b0f9d41f7a79747a3c6b8cef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 10803, "upload_time": "2019-12-01T12:18:35", "upload_time_iso_8601": "2019-12-01T12:18:35.239176Z", "url": "https://files.pythonhosted.org/packages/88/98/2c4453f36e1b328ea2df00993f3617aad44b72acdb5fc07c8344d90c2268/i3bindings-1.0.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efc55f916e5da6a78f24a288691fee48", "sha256": "24889729c316ac6418023f453a44f16ec0f0a804af6dcef1b921d91358631142"}, "downloads": -1, "filename": "i3bindings-1.0.0a1.tar.gz", "has_sig": false, "md5_digest": "efc55f916e5da6a78f24a288691fee48", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 11075, "upload_time": "2019-12-01T12:18:36", "upload_time_iso_8601": "2019-12-01T12:18:36.908855Z", "url": "https://files.pythonhosted.org/packages/05/b2/e49628c415095e254304aed407dea5f539932313723536e224bf6ccb8688/i3bindings-1.0.0a1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:21 2020"}