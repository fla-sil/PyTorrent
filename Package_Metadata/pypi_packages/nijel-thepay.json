{"info": {"author": "Michal \u010ciha\u0159", "author_email": "michal@cihar.com", "bugtrack_url": null, "classifiers": [], "description": "=======\nThePay\n=======\n\nLibrary for accesing ThePay payment gateway from python\n\n.. image:: https://github.com/nijel/thepay/workflows/Test/badge.svg\n    :target: https://github.com/nijel/thepay/actions?query=workflow%3ATest\n\n.. image:: https://img.shields.io/pypi/v/nijel-thepay.svg\n    :target: https://pypi.org/project/nijel-thepay/\n    :alt: PyPI package\n\n.. image:: https://codecov.io/gh/nijel/thepay/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/nijel/thepay\n\n========\nExample\n========\nConfigure ThePay account\n------------------------\n.. code-block:: python\n\n    from thepay.config import Config\n    config = Config()\n    config.setCredentials(12345, 12345, 'abcdefg12345', 'abcdefg12345')  # Credentials from ThePay account settings\n\nList available payment methods\n------------------------------\n.. code-block:: python\n\n    from thepay.dataApi import DataApi\n    data_api = DataApi(config)\n    payments = data_api.getPaymentMethods()\n\nprint methods as radio buttons with images\n\n.. code-block:: python\n\n    <div>\n        {% for payment in payments %}\n         <div class=\"payment-method\">\n            <input type=\"radio\" name=\"payment_method\" value=\"{{ payment.id }}\" id=\"payment_{{ payment.id }}\">\n            <label for=\"payment_{{ payment.id }}\" title=\"{{ payment.name }}\">\n               <img src='http://www.thepay.cz/gate/images/logos/public/209x127/{{ payment.id }}.png' alt=\"{{ payment.name }}\">\n            </label>\n         </div>\n        {% endfor %}\n    </div>\n\nRedirect user to ThePay - create payment\n----------------------------------------\n.. code-block:: python\n\n    from thepay.payment import Payment\n\n    payment = Payment(config)\n\n    payment.setValue(321)\n    payment.setMethodId(13) # ID of payment method from above\n    payment.setCustomerEmail('test@test.te')\n    payment.setDescription('Order 123 payment')\n    payment.setReturnUrl('https://example.com/payment')  # where to redirect user after payment\n    payment.setMerchantData(123)  # Any custom data - not visible to user\n\n    payment.getCreateUrl()  # Redirect user to this URL to begin payment\n\nCheck incomming payment\n-----------------------\nThis code should be run on `returnUrl` from above code\n\n.. code-block:: python\n\n    from thepay.payment import ReturnPayment\n\n    return_payment = ReturnPayment(config)\n    return_payment.parseData(self.request.GET)  # Pass all GET received data in form of dict()\n\n    if not return_payment.checkSignature():\n        return False  # Invalid payment signature\n\n    return_payment.getMerchantData()  # -> 123, previously saved custom data\n    return_payment.getValue()  # -> 321\n    return_payment.getStatus()  # Order status, see next paragraph\n\nOrder statuses\n - 2 = STATUS_OK\n - 3 = STATUS_CANCELED\n - 4 = STATUS_ERROR\n - 6 = STATUS_UNDERPAID\n - 7 = STATUS_WAITING\n - 9 = STATUS_CARD_DEPOSIT\n\nGet info about payment\n----------------------\n.. code-block:: python\n\n    payment_id = return_payment.getPaymentId()\n    payment = data_api.getPayment(payment_id)  # returns object with all payment data\n\n========\nLicense\n========\nLGPL\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nijel/thepay", "keywords": "payment,thepay", "license": "LGPL", "maintainer": "", "maintainer_email": "", "name": "nijel-thepay", "package_url": "https://pypi.org/project/nijel-thepay/", "platform": "", "project_url": "https://pypi.org/project/nijel-thepay/", "project_urls": {"Homepage": "https://github.com/nijel/thepay"}, "release_url": "https://pypi.org/project/nijel-thepay/0.5/", "requires_dist": ["suds-community", "requests", "six"], "requires_python": ">=3.5", "summary": "ThePay API library", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"thepay\">\n<h2>ThePay</h2>\n<p>Library for accesing ThePay payment gateway from python</p>\n<a href=\"https://github.com/nijel/thepay/actions?query=workflow%3ATest\" rel=\"nofollow\"><img alt=\"https://github.com/nijel/thepay/workflows/Test/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/473d0237717a1fd87f13e90e019fdf0ec1cc72c9/68747470733a2f2f6769746875622e636f6d2f6e696a656c2f7468657061792f776f726b666c6f77732f546573742f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/nijel-thepay/\" rel=\"nofollow\"><img alt=\"PyPI package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f764fcc92d50ed9f94499a425d886430740caff6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6e696a656c2d7468657061792e737667\"></a>\n<a href=\"https://codecov.io/gh/nijel/thepay\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/nijel/thepay/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9a3ee0944cbe5082988c5833ccaa41f17063c625/68747470733a2f2f636f6465636f762e696f2f67682f6e696a656c2f7468657061792f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<div id=\"configure-thepay-account\">\n<h3>Configure ThePay account</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">thepay.config</span> <span class=\"kn\">import</span> <span class=\"n\">Config</span>\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">Config</span><span class=\"p\">()</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">setCredentials</span><span class=\"p\">(</span><span class=\"mi\">12345</span><span class=\"p\">,</span> <span class=\"mi\">12345</span><span class=\"p\">,</span> <span class=\"s1\">'abcdefg12345'</span><span class=\"p\">,</span> <span class=\"s1\">'abcdefg12345'</span><span class=\"p\">)</span>  <span class=\"c1\"># Credentials from ThePay account settings</span>\n</pre>\n</div>\n<div id=\"list-available-payment-methods\">\n<h3>List available payment methods</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">thepay.dataApi</span> <span class=\"kn\">import</span> <span class=\"n\">DataApi</span>\n<span class=\"n\">data_api</span> <span class=\"o\">=</span> <span class=\"n\">DataApi</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"n\">payments</span> <span class=\"o\">=</span> <span class=\"n\">data_api</span><span class=\"o\">.</span><span class=\"n\">getPaymentMethods</span><span class=\"p\">()</span>\n</pre>\n<p>print methods as radio buttons with images</p>\n<pre><span class=\"o\">&lt;</span><span class=\"n\">div</span><span class=\"o\">&gt;</span>\n    <span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"k\">for</span> <span class=\"n\">payment</span> <span class=\"ow\">in</span> <span class=\"n\">payments</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n     <span class=\"o\">&lt;</span><span class=\"n\">div</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s2\">\"payment-method\"</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"nb\">input</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"radio\"</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"payment_method\"</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">\"{{ payment.id }}\"</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"payment_{{ payment.id }}\"</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">label</span> <span class=\"k\">for</span><span class=\"o\">=</span><span class=\"s2\">\"payment_{{ payment.id }}\"</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"{{ payment.name }}\"</span><span class=\"o\">&gt;</span>\n           <span class=\"o\">&lt;</span><span class=\"n\">img</span> <span class=\"n\">src</span><span class=\"o\">=</span><span class=\"s1\">'http://www.thepay.cz/gate/images/logos/public/209x127/{{ payment.id }}.png'</span> <span class=\"n\">alt</span><span class=\"o\">=</span><span class=\"s2\">\"{{ payment.name }}\"</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">label</span><span class=\"o\">&gt;</span>\n     <span class=\"o\">&lt;/</span><span class=\"n\">div</span><span class=\"o\">&gt;</span>\n    <span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"n\">endfor</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">div</span><span class=\"o\">&gt;</span>\n</pre>\n</div>\n<div id=\"redirect-user-to-thepay-create-payment\">\n<h3>Redirect user to ThePay - create payment</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">thepay.payment</span> <span class=\"kn\">import</span> <span class=\"n\">Payment</span>\n\n<span class=\"n\">payment</span> <span class=\"o\">=</span> <span class=\"n\">Payment</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n<span class=\"n\">payment</span><span class=\"o\">.</span><span class=\"n\">setValue</span><span class=\"p\">(</span><span class=\"mi\">321</span><span class=\"p\">)</span>\n<span class=\"n\">payment</span><span class=\"o\">.</span><span class=\"n\">setMethodId</span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"p\">)</span> <span class=\"c1\"># ID of payment method from above</span>\n<span class=\"n\">payment</span><span class=\"o\">.</span><span class=\"n\">setCustomerEmail</span><span class=\"p\">(</span><span class=\"s1\">'test@test.te'</span><span class=\"p\">)</span>\n<span class=\"n\">payment</span><span class=\"o\">.</span><span class=\"n\">setDescription</span><span class=\"p\">(</span><span class=\"s1\">'Order 123 payment'</span><span class=\"p\">)</span>\n<span class=\"n\">payment</span><span class=\"o\">.</span><span class=\"n\">setReturnUrl</span><span class=\"p\">(</span><span class=\"s1\">'https://example.com/payment'</span><span class=\"p\">)</span>  <span class=\"c1\"># where to redirect user after payment</span>\n<span class=\"n\">payment</span><span class=\"o\">.</span><span class=\"n\">setMerchantData</span><span class=\"p\">(</span><span class=\"mi\">123</span><span class=\"p\">)</span>  <span class=\"c1\"># Any custom data - not visible to user</span>\n\n<span class=\"n\">payment</span><span class=\"o\">.</span><span class=\"n\">getCreateUrl</span><span class=\"p\">()</span>  <span class=\"c1\"># Redirect user to this URL to begin payment</span>\n</pre>\n</div>\n<div id=\"check-incomming-payment\">\n<h3>Check incomming payment</h3>\n<p>This code should be run on <cite>returnUrl</cite> from above code</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">thepay.payment</span> <span class=\"kn\">import</span> <span class=\"n\">ReturnPayment</span>\n\n<span class=\"n\">return_payment</span> <span class=\"o\">=</span> <span class=\"n\">ReturnPayment</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"n\">return_payment</span><span class=\"o\">.</span><span class=\"n\">parseData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">GET</span><span class=\"p\">)</span>  <span class=\"c1\"># Pass all GET received data in form of dict()</span>\n\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">return_payment</span><span class=\"o\">.</span><span class=\"n\">checkSignature</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"kc\">False</span>  <span class=\"c1\"># Invalid payment signature</span>\n\n<span class=\"n\">return_payment</span><span class=\"o\">.</span><span class=\"n\">getMerchantData</span><span class=\"p\">()</span>  <span class=\"c1\"># -&gt; 123, previously saved custom data</span>\n<span class=\"n\">return_payment</span><span class=\"o\">.</span><span class=\"n\">getValue</span><span class=\"p\">()</span>  <span class=\"c1\"># -&gt; 321</span>\n<span class=\"n\">return_payment</span><span class=\"o\">.</span><span class=\"n\">getStatus</span><span class=\"p\">()</span>  <span class=\"c1\"># Order status, see next paragraph</span>\n</pre>\n<dl>\n<dt>Order statuses</dt>\n<dd><ul>\n<li>2 = STATUS_OK</li>\n<li>3 = STATUS_CANCELED</li>\n<li>4 = STATUS_ERROR</li>\n<li>6 = STATUS_UNDERPAID</li>\n<li>7 = STATUS_WAITING</li>\n<li>9 = STATUS_CARD_DEPOSIT</li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"get-info-about-payment\">\n<h3>Get info about payment</h3>\n<pre><span class=\"n\">payment_id</span> <span class=\"o\">=</span> <span class=\"n\">return_payment</span><span class=\"o\">.</span><span class=\"n\">getPaymentId</span><span class=\"p\">()</span>\n<span class=\"n\">payment</span> <span class=\"o\">=</span> <span class=\"n\">data_api</span><span class=\"o\">.</span><span class=\"n\">getPayment</span><span class=\"p\">(</span><span class=\"n\">payment_id</span><span class=\"p\">)</span>  <span class=\"c1\"># returns object with all payment data</span>\n</pre>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>LGPL</p>\n</div>\n\n          </div>"}, "last_serial": 6806401, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "86e1ff995604f9575fe9dc8ec417ddd4", "sha256": "b9e7d4013f52e7cbc4d3c82729bec9ded7ff534e7d45cf7fd650ae69953c7543"}, "downloads": -1, "filename": "nijel_thepay-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "86e1ff995604f9575fe9dc8ec417ddd4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11570, "upload_time": "2020-03-13T14:30:06", "upload_time_iso_8601": "2020-03-13T14:30:06.989742Z", "url": "https://files.pythonhosted.org/packages/7f/5a/78b049d730e310f0db4eceae87a119188f513cc12341dfaf5bf15fd79aee/nijel_thepay-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "366c094ecc6d1b074c30410adf813cfd", "sha256": "77dff6e0b6bf5faf80fd7065caf50c1d5cc3d0e37f8640c4a65153808f6b3aca"}, "downloads": -1, "filename": "nijel-thepay-0.5.tar.gz", "has_sig": false, "md5_digest": "366c094ecc6d1b074c30410adf813cfd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9551, "upload_time": "2020-03-13T14:30:08", "upload_time_iso_8601": "2020-03-13T14:30:08.859798Z", "url": "https://files.pythonhosted.org/packages/74/ef/e7843b85bdc5bb8bef65ba2ca734834b537b4a9e8da4d821d7d6885d43f9/nijel-thepay-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "86e1ff995604f9575fe9dc8ec417ddd4", "sha256": "b9e7d4013f52e7cbc4d3c82729bec9ded7ff534e7d45cf7fd650ae69953c7543"}, "downloads": -1, "filename": "nijel_thepay-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "86e1ff995604f9575fe9dc8ec417ddd4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11570, "upload_time": "2020-03-13T14:30:06", "upload_time_iso_8601": "2020-03-13T14:30:06.989742Z", "url": "https://files.pythonhosted.org/packages/7f/5a/78b049d730e310f0db4eceae87a119188f513cc12341dfaf5bf15fd79aee/nijel_thepay-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "366c094ecc6d1b074c30410adf813cfd", "sha256": "77dff6e0b6bf5faf80fd7065caf50c1d5cc3d0e37f8640c4a65153808f6b3aca"}, "downloads": -1, "filename": "nijel-thepay-0.5.tar.gz", "has_sig": false, "md5_digest": "366c094ecc6d1b074c30410adf813cfd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9551, "upload_time": "2020-03-13T14:30:08", "upload_time_iso_8601": "2020-03-13T14:30:08.859798Z", "url": "https://files.pythonhosted.org/packages/74/ef/e7843b85bdc5bb8bef65ba2ca734834b537b4a9e8da4d821d7d6885d43f9/nijel-thepay-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:22 2020"}