{"info": {"author": "Shane R. Spencer", "author_email": "shane@bogomip.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Console", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering :: GIS"], "description": "Aliquoter\n=========\n\nAliquot mogrifier utilizing the BLM PLSS method of quartering/halving sections.\n\nPurpose\n-------\n\nGiven a quad of point pairs (long, lat) return a quad of point pairs for a \nspecific aliquot string.\n\nThis code should work on any quad in any orientation as long as north, south, \neast, west can be defined appropriately.\n\nThis code uses specific points rather than a bounding box set to 0 degrees.\n\nExample\n-------\n\nAliquot string: **E2SW4SW4**\n\nAliquot meaning: **The East half of the South West quarter of the South West quarter**\n\nThis would mean that the quad would be split up into a South West square (SW4) \nand then another South West square (SW4) and then the East half of that square \nwould be returned.\n\n<pre>\n4,0                                           4,4\n+-----------------------+-----------------------+\n|                       |                       |\n|                       |                       |\n|                       |                       |\n|                       |                       |\n|                       |                       |\n|                       |                       |\n|                       |                       |\n|                       |                       |\n|                       |                       |\n|          S-W          |                       |\n|          \\ /          |                       |\n+-----------+-----------+-----------------------+\n|           |           |                       |\n|           |           |                       |\n|           |           |                       |\n|    S-W    |           |                       |\n|    \\ /    |           |                       |\n+-----*******-----------+-----------------------+\n|     *     *           |                       |\n|     *     *           |                       |\n|     *  E  *           |                       |\n|     *     *           |                       |\n|     *     *           |                       |\n+-----*******-----------+-----------------------+\n0,0                                           0,4\n</pre>\n\nUsage\n-----\n\nCheck out 'test.py'.  It represents the above example and outputs the following.\n\nCode:\n\n```python\nfrom aliquoter import aliquot, Quad, Point\n\nprint aliquot(\n            Quad(\n                nw=Point(lat=4, long=0),\n                sw=Point(lat=0, long=0),\n                ne=Point(lat=4, long=4),\n                se=Point(lat=0, long=4),\n            ),\n            ['SW', 'SW', 'E']\n        )\n```\n\nIn the above code the list of aliquot quarters/halves is reversed to make \nprocessing more straight forward.\n\nResult:\n\n```\nQuad(\n    nw=Point(lat=1.0, long=0.5),\n    sw=Point(lat=0.0, long=0.5),\n    ne=Point(lat=1.0, long=1.0),\n    se=Point(lat=0.0, long=1.0)\n)\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/whardier/Aliquoter", "keywords": null, "license": "None", "maintainer": null, "maintainer_email": null, "name": "aliquoter", "package_url": "https://pypi.org/project/aliquoter/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/aliquoter/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/whardier/Aliquoter"}, "release_url": "https://pypi.org/project/aliquoter/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Aliquot Mogrifier", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Aliquoter<br>=========<br><br>Aliquot mogrifier utilizing the BLM PLSS method of quartering/halving sections.<br><br>Purpose<br>-------<br><br>Given a quad of point pairs (long, lat) return a quad of point pairs for a <br>specific aliquot string.<br><br>This code should work on any quad in any orientation as long as north, south, <br>east, west can be defined appropriately.<br><br>This code uses specific points rather than a bounding box set to 0 degrees.<br><br>Example<br>-------<br><br>Aliquot string: **E2SW4SW4**<br><br>Aliquot meaning: **The East half of the South West quarter of the South West quarter**<br><br>This would mean that the quad would be split up into a South West square (SW4) <br>and then another South West square (SW4) and then the East half of that square <br>would be returned.<br><br>&lt;pre&gt;<br>4,0                                           4,4<br>+-----------------------+-----------------------+<br>|                       |                       |<br>|                       |                       |<br>|                       |                       |<br>|                       |                       |<br>|                       |                       |<br>|                       |                       |<br>|                       |                       |<br>|                       |                       |<br>|                       |                       |<br>|          S-W          |                       |<br>|          \\ /          |                       |<br>+-----------+-----------+-----------------------+<br>|           |           |                       |<br>|           |           |                       |<br>|           |           |                       |<br>|    S-W    |           |                       |<br>|    \\ /    |           |                       |<br>+-----*******-----------+-----------------------+<br>|     *     *           |                       |<br>|     *     *           |                       |<br>|     *  E  *           |                       |<br>|     *     *           |                       |<br>|     *     *           |                       |<br>+-----*******-----------+-----------------------+<br>0,0                                           0,4<br>&lt;/pre&gt;<br><br>Usage<br>-----<br><br>Check out 'test.py'.  It represents the above example and outputs the following.<br><br>Code:<br><br>```python<br>from aliquoter import aliquot, Quad, Point<br><br>print aliquot(<br>            Quad(<br>                nw=Point(lat=4, long=0),<br>                sw=Point(lat=0, long=0),<br>                ne=Point(lat=4, long=4),<br>                se=Point(lat=0, long=4),<br>            ),<br>            ['SW', 'SW', 'E']<br>        )<br>```<br><br>In the above code the list of aliquot quarters/halves is reversed to make <br>processing more straight forward.<br><br>Result:<br><br>```<br>Quad(<br>    nw=Point(lat=1.0, long=0.5),<br>    sw=Point(lat=0.0, long=0.5),<br>    ne=Point(lat=1.0, long=1.0),<br>    se=Point(lat=0.0, long=1.0)<br>)<br>```\n          </div>"}, "last_serial": 786233, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "24d27a042a78b6818515abe757be8001", "sha256": "7fecdc07d0cdf366c442cc726467cc073e2ca8ab4a4a28fc6d7150f171841c8e"}, "downloads": -1, "filename": "aliquoter-0.0.1.linux-x86_64.exe", "has_sig": false, "md5_digest": "24d27a042a78b6818515abe757be8001", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 66914, "upload_time": "2013-01-07T22:47:22", "upload_time_iso_8601": "2013-01-07T22:47:22.691204Z", "url": "https://files.pythonhosted.org/packages/96/7b/a004ac94a8a4cfe83e0fe1e044d49728ceed0d042786dc3da1f58ccefed7/aliquoter-0.0.1.linux-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cb915649a8d939efab6fb8471066a39", "sha256": "b14d31216e3c6ce6338681ef273df8ddacb776ad83900390f832e5a488bb1e32"}, "downloads": -1, "filename": "aliquoter-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1cb915649a8d939efab6fb8471066a39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2475, "upload_time": "2013-01-07T22:47:18", "upload_time_iso_8601": "2013-01-07T22:47:18.929317Z", "url": "https://files.pythonhosted.org/packages/16/fa/a77953fb4105492ca8e10b9d50f75a38e1b4026653dd96ed2a685f0c7983/aliquoter-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "24d27a042a78b6818515abe757be8001", "sha256": "7fecdc07d0cdf366c442cc726467cc073e2ca8ab4a4a28fc6d7150f171841c8e"}, "downloads": -1, "filename": "aliquoter-0.0.1.linux-x86_64.exe", "has_sig": false, "md5_digest": "24d27a042a78b6818515abe757be8001", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 66914, "upload_time": "2013-01-07T22:47:22", "upload_time_iso_8601": "2013-01-07T22:47:22.691204Z", "url": "https://files.pythonhosted.org/packages/96/7b/a004ac94a8a4cfe83e0fe1e044d49728ceed0d042786dc3da1f58ccefed7/aliquoter-0.0.1.linux-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cb915649a8d939efab6fb8471066a39", "sha256": "b14d31216e3c6ce6338681ef273df8ddacb776ad83900390f832e5a488bb1e32"}, "downloads": -1, "filename": "aliquoter-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1cb915649a8d939efab6fb8471066a39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2475, "upload_time": "2013-01-07T22:47:18", "upload_time_iso_8601": "2013-01-07T22:47:18.929317Z", "url": "https://files.pythonhosted.org/packages/16/fa/a77953fb4105492ca8e10b9d50f75a38e1b4026653dd96ed2a685f0c7983/aliquoter-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:19:41 2020"}