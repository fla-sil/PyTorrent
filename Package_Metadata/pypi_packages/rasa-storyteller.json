{"info": {"author": "ezhvsalate", "author_email": "ezhvsalate@ya.ru", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# RASA storyteller\n\nWhen working with wonderful library [Rasa Open Source](https://github.com/RasaHQ/rasa) it is rather difficult to create complex stories, especially for people who are not familiar with YAML / Markdown.  \nThis project is a small tool, which helps to make complex stories with lots of negative paths faster.\nThe goal of this project is to help non-technical stuff edit bot's behaviour easily. \n\n## Installation\nInstall package using pip: `pip install rasa-storyteller` and launch `rasa-storyteller`\n\n## How to use it\n\nLet's start a new RASA project in a usual way:\n```\n$ rasa init\nWelcome to Rasa! \u0440\u045f\u00a4\u2013\n\nTo get started quickly, an initial project will be created.\nIf you need some help, check out the documentation at https://rasa.com/docs/rasa.\nNow let's start! \u0440\u045f\u2018\u2021\u0440\u045f\u040f\u0405\n\n? Please enter a path where the project will be created [default: current directory] .\nCreated project directory at '/home/user/rasa-project'.\nFinished creating project structure.\n? Do you want to train an initial model? \u0440\u045f\u2019\u0404\u0440\u045f\u040f\u0405  No\nNo problem \u0440\u045f\u2018\u040c\u0440\u045f\u040f\u0458. You can also train a model later by going to the project directory and running 'rasa train'.\n```\n\nAfter that we should go to the directory with our new project and find three files: `domain.yml`, `data/nlu.md`, `stories.md`.\nLaunch our utility and locate those files in the start window:    \n\n![initial_windows](docs/images/locate_files.png)  \nAfter you load those files a main window with three tabs opens, they are:\n\n - intents:  \n    ![intent_tab](docs/images/intents_window.png)  \n  You can easily add new intents or new nlu examples, update or remove existing intents in this window.\n\n - responses:  \n    ![responses_tab](docs/images/responses_window.png)  \n  Using this window you can do CRUD operations with responses.\n\n - stories:  \n    ![stories_window](docs/images/stories_window.png)  \n  The most interesting tab: here stories are presented as trees. You can link your intents with answers or even create new intent/response in-place using right button menu.\n\n  When you have created some story with complex logic and multiple branchings like this:  \n     ![complex_story](docs/images/complex_story.png)  \n\n  Just press \"export\" button at the bottom of the window and `domain.yml`, `data/nlu.md`, `stories.md` will be generated in `<your_working_directory>/export/`. \n  They will be suffixed with current timestamp so you can push \"export\" multiple times while editing to store different versions.\n  The stories generated from image above will look like this:\n\n  ```\n    ## greet-mood_great\n    * greet\n        - utter_greet\n    * mood_great\n        - utter_happy\n\n    ## greet-mood_unhappy-affirm\n    * greet\n        - utter_greet\n    * mood_unhappy\n        - utter_cheer_up\n        - utter_did_that_help\n    * affirm\n        - utter_happy\n\n    ## greet-mood_unhappy-deny\n    * greet\n        - utter_greet\n    * mood_unhappy\n        - utter_cheer_up\n        - utter_did_that_help\n    * deny\n        - utter_goodbye\n\n    ## greet-mood_neutral-deny\n    * greet\n        - utter_greet\n    * mood_neutral\n        - utter_ask_cheer_up\n    * deny\n        - utter_goodbye\n\n    ## greet-mood_neutral-affirm-affirm\n    * greet\n        - utter_greet\n    * mood_neutral\n        - utter_ask_cheer_up\n    * affirm\n        - utter_cheer_up\n        - utter_did_that_help\n    * affirm\n        - utter_happy\n\n    ## greet-mood_neutral-affirm-deny\n    * greet\n        - utter_greet\n    * mood_neutral\n        - utter_ask_cheer_up\n    * affirm\n        - utter_cheer_up\n        - utter_did_that_help\n    * deny\n        - utter_goodbye\n    ```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Ezhvsalate/rasa-storyteller", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "rasa-storyteller", "package_url": "https://pypi.org/project/rasa-storyteller/", "platform": "", "project_url": "https://pypi.org/project/rasa-storyteller/", "project_urls": {"Homepage": "https://github.com/Ezhvsalate/rasa-storyteller"}, "release_url": "https://pypi.org/project/rasa-storyteller/0.1/", "requires_dist": ["PySimpleGUI (==4.16.0)", "markdown-generator (==0.1.3)", "PyYAML (==5.3.1)", "Pillow (==7.0.0)"], "requires_python": ">=3.6", "summary": "A simple GUI utility to create complex stories for RASA chatbots easily.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>RASA storyteller</h1>\n<p>When working with wonderful library <a href=\"https://github.com/RasaHQ/rasa\" rel=\"nofollow\">Rasa Open Source</a> it is rather difficult to create complex stories, especially for people who are not familiar with YAML / Markdown.<br>\nThis project is a small tool, which helps to make complex stories with lots of negative paths faster.\nThe goal of this project is to help non-technical stuff edit bot's behaviour easily.</p>\n<h2>Installation</h2>\n<p>Install package using pip: <code>pip install rasa-storyteller</code> and launch <code>rasa-storyteller</code></p>\n<h2>How to use it</h2>\n<p>Let's start a new RASA project in a usual way:</p>\n<pre><code>$ rasa init\nWelcome to Rasa! \u0440\u045f\u00a4\u2013\n\nTo get started quickly, an initial project will be created.\nIf you need some help, check out the documentation at https://rasa.com/docs/rasa.\nNow let's start! \u0440\u045f\u2018\u2021\u0440\u045f\u040f\u0405\n\n? Please enter a path where the project will be created [default: current directory] .\nCreated project directory at '/home/user/rasa-project'.\nFinished creating project structure.\n? Do you want to train an initial model? \u0440\u045f\u2019\u0404\u0440\u045f\u040f\u0405  No\nNo problem \u0440\u045f\u2018\u040c\u0440\u045f\u040f\u0458. You can also train a model later by going to the project directory and running 'rasa train'.\n</code></pre>\n<p>After that we should go to the directory with our new project and find three files: <code>domain.yml</code>, <code>data/nlu.md</code>, <code>stories.md</code>.\nLaunch our utility and locate those files in the start window:</p>\n<p><img alt=\"initial_windows\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8cd84a97b86fd368ab5e8ce9dba531ddcc5a8299/646f63732f696d616765732f6c6f636174655f66696c65732e706e67\"><br>\nAfter you load those files a main window with three tabs opens, they are:</p>\n<ul>\n<li>\n<p>intents:<br>\n<img alt=\"intent_tab\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ecf971e36999d55d328beebcfbd4b810c91101b/646f63732f696d616765732f696e74656e74735f77696e646f772e706e67\"><br>\nYou can easily add new intents or new nlu examples, update or remove existing intents in this window.</p>\n</li>\n<li>\n<p>responses:<br>\n<img alt=\"responses_tab\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb3a5c4c1753f22596bfc6f387f4bf157ddc779c/646f63732f696d616765732f726573706f6e7365735f77696e646f772e706e67\"><br>\nUsing this window you can do CRUD operations with responses.</p>\n</li>\n<li>\n<p>stories:<br>\n<img alt=\"stories_window\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b4ea4ab5315751599186a540f4e415abc871fcae/646f63732f696d616765732f73746f726965735f77696e646f772e706e67\"><br>\nThe most interesting tab: here stories are presented as trees. You can link your intents with answers or even create new intent/response in-place using right button menu.</p>\n</li>\n</ul>\n<p>When you have created some story with complex logic and multiple branchings like this:<br>\n<img alt=\"complex_story\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c93ba2d14ec323efb7ab86d81052bf70b6081b49/646f63732f696d616765732f636f6d706c65785f73746f72792e706e67\"></p>\n<p>Just press \"export\" button at the bottom of the window and <code>domain.yml</code>, <code>data/nlu.md</code>, <code>stories.md</code> will be generated in <code>&lt;your_working_directory&gt;/export/</code>.\nThey will be suffixed with current timestamp so you can push \"export\" multiple times while editing to store different versions.\nThe stories generated from image above will look like this:</p>\n<pre><code>  ## greet-mood_great\n  * greet\n      - utter_greet\n  * mood_great\n      - utter_happy\n\n  ## greet-mood_unhappy-affirm\n  * greet\n      - utter_greet\n  * mood_unhappy\n      - utter_cheer_up\n      - utter_did_that_help\n  * affirm\n      - utter_happy\n\n  ## greet-mood_unhappy-deny\n  * greet\n      - utter_greet\n  * mood_unhappy\n      - utter_cheer_up\n      - utter_did_that_help\n  * deny\n      - utter_goodbye\n\n  ## greet-mood_neutral-deny\n  * greet\n      - utter_greet\n  * mood_neutral\n      - utter_ask_cheer_up\n  * deny\n      - utter_goodbye\n\n  ## greet-mood_neutral-affirm-affirm\n  * greet\n      - utter_greet\n  * mood_neutral\n      - utter_ask_cheer_up\n  * affirm\n      - utter_cheer_up\n      - utter_did_that_help\n  * affirm\n      - utter_happy\n\n  ## greet-mood_neutral-affirm-deny\n  * greet\n      - utter_greet\n  * mood_neutral\n      - utter_ask_cheer_up\n  * affirm\n      - utter_cheer_up\n      - utter_did_that_help\n  * deny\n      - utter_goodbye\n  ```\n\n</code></pre>\n\n          </div>"}, "last_serial": 6865451, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9c72e696b57ad1c8f06442edbe272594", "sha256": "c76df30ef413d423bf3dbdd2092bb824925b97e896e1ae48bfe86ffcd621d69a"}, "downloads": -1, "filename": "rasa_storyteller-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9c72e696b57ad1c8f06442edbe272594", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 29774, "upload_time": "2020-03-23T13:42:28", "upload_time_iso_8601": "2020-03-23T13:42:28.231853Z", "url": "https://files.pythonhosted.org/packages/4b/29/1d347d654950b792b04ffb28f343073580974195e49423f22cdfd0e62688/rasa_storyteller-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6067736ca382411ce726b4ab9df5fc8f", "sha256": "3af277afc6935d49147a7925ae590fd55ffb06155725ba225974af3fb7f976c8"}, "downloads": -1, "filename": "rasa-storyteller-0.1.tar.gz", "has_sig": false, "md5_digest": "6067736ca382411ce726b4ab9df5fc8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23980, "upload_time": "2020-03-23T13:42:30", "upload_time_iso_8601": "2020-03-23T13:42:30.388420Z", "url": "https://files.pythonhosted.org/packages/97/b3/36208d5f48270dc3ccd59c385fb88c02ba2bbc14acfd0eb49383a8da7a62/rasa-storyteller-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c72e696b57ad1c8f06442edbe272594", "sha256": "c76df30ef413d423bf3dbdd2092bb824925b97e896e1ae48bfe86ffcd621d69a"}, "downloads": -1, "filename": "rasa_storyteller-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9c72e696b57ad1c8f06442edbe272594", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 29774, "upload_time": "2020-03-23T13:42:28", "upload_time_iso_8601": "2020-03-23T13:42:28.231853Z", "url": "https://files.pythonhosted.org/packages/4b/29/1d347d654950b792b04ffb28f343073580974195e49423f22cdfd0e62688/rasa_storyteller-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6067736ca382411ce726b4ab9df5fc8f", "sha256": "3af277afc6935d49147a7925ae590fd55ffb06155725ba225974af3fb7f976c8"}, "downloads": -1, "filename": "rasa-storyteller-0.1.tar.gz", "has_sig": false, "md5_digest": "6067736ca382411ce726b4ab9df5fc8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23980, "upload_time": "2020-03-23T13:42:30", "upload_time_iso_8601": "2020-03-23T13:42:30.388420Z", "url": "https://files.pythonhosted.org/packages/97/b3/36208d5f48270dc3ccd59c385fb88c02ba2bbc14acfd0eb49383a8da7a62/rasa-storyteller-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:14 2020"}