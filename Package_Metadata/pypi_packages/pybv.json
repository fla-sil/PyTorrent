{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": ".. image:: https://circleci.com/gh/bids-standard/pybv.svg?style=svg\n   :target: https://circleci.com/gh/bids-standard/pybv\n   :alt: CircleCI\n\n.. image:: https://codecov.io/gh/bids-standard/pybv/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/bids-standard/pybv\n   :alt: codecov\n\n.. image:: https://badge.fury.io/py/pybv.svg\n   :target: https://badge.fury.io/py/pybv\n   :alt: pypi\n\n.. image:: https://pepy.tech/badge/pybv\n   :target: https://pepy.tech/project/pybv\n   :alt: Downloads\n\n.. image:: https://readthedocs.org/projects/pybv/badge/?version=stable\n   :target: https://pybv.readthedocs.io/en/stable/?badge=stable\n   :alt: Documentation Status\n\n====\npybv\n====\n\n``pybv`` is a lightweight exporter to the BrainVision data format. It is meant\nfor use with electrophysiology datasets stored in the\n`Brain Imaging Data Structure <https://bids.neuroimaging.io>`_.\n\n\nThe documentation can be found under the following links:\n\n- for the `stable release <https://pybv.rtfd.io/en/stable/>`_\n- for the `latest (development) version <https://pybv.rtfd.io/en/latest/>`_\n\nAbout the BrainVision data format\n=================================\n\nBrainVision is the name of a file format commonly used for storing\nelectrophysiology data. Originally, it was put forward by the\ncompany `Brain Products <https://www.brainproducts.com>`_, however the\nsimplicity of the format has allowed for a diversity of tools reading from and\nwriting to the format.\n\nThe format consists of three separate files:\n\n1. A text header file (``.vhdr``) containing meta data\n2. A text marker file (``.vmrk``) containing information about events in the\n   data\n3. A binary data file (``.eeg``) containing the voltage values of the EEG\n\nBoth text files are based on the\n`Microsoft Windows INI format <https://en.wikipedia.org/wiki/INI_file>`_\nconsisting of:\n\n- sections marked as ``[square brackets]``\n- comments marked as ``; comment``\n- key-value pairs marked as ``key=value``\n\nA documentation for core BrainVision file format is provided by Brain Products.\nYou can `view the specification <https://www.brainproducts.com/productdetails.php?id=21&tab=5>`_\nas hosted by Brain Products.\n\n\nInstallation\n============\n``pybv``'s only dependency is ``numpy``. However, we currently recommend that\nyou install MNE-Python for reading BrainVision data. See their instructions\n`here <https://www.martinos.org/mne/stable/install_mne_python.html>`_.\n\nAfter you have a working installation of MNE-Python (or only ``numpy`` if you\ndon't want to read data and only write it), you can install ``pybv`` through\nthe following: ``pip install -U pybv``\n\nContributing\n============\nThe development of ``pybv`` is taking place on\n`GitHub <https://github.com/bids-standard/pybv>`_.\n\nFor more information, please see\n`CONTRIBUTING.md <https://github.com/bids-standard/pybv/blob/master/CONTRIBUTING.md>`_\n\nUsage\n=====\n\nWriting BrainVision files\n-------------------------\n\nThe primary functionality provided by ``pybv`` is the ``write_brainvision``\nfunction. This writes a numpy array of data and provided metadata into a\ncollection of BrainVision files on disk.\n\n.. code-block:: python\n\n    from pybv import write_brainvision\n\n    # for further parameters see our API documentation in the docs\n    write_brainvision(data, sfreq, ch_names, fname, tmpdir, events,\n                      resolution=1e-6, unit='\u00b5V', fmt='binary_float32')\n\nReading BrainVision files\n-------------------------\n\nCurrently, pybv recommends using\n`MNE-Python <https://martinos.org/mne/stable/index.html>`_\nfor reading BrainVision files written with ``pybv``. This results in a\nnearly-round-trip conversion of the data (up to the numerical precision you\nspecify in the ``resolution`` parameter).\n\nHere is an example of the MNE code required to read in BrainVision data:\n\n.. code-block:: python\n\n    import mne\n\n    # Import the BrainVision data into an MNE Raw object\n    raw = mne.io.read_raw_brainvision('tmp/test.vhdr', preload=True)\n\n    # Read in the event information as MNE annotations\n    annot = mne.read_annotations('tmp/test.vmrk')\n\n    # Add the annotations to our raw object so we can use them with the data\n    raw.set_annotations(annot)\n\n    # Reconstruct the original events from our Raw object\n    events, event_ids = mne.events_from_annotations(raw)\n\nAcknowledgements\n================\n\nThis package was originally adapted from the\n`Philistine package <https://gitlab.com/palday/philistine>`_ by\n`palday <https://palday.bitbucket.io/>`_. It copies much of the BrainVision\nexporting code, removes the dependence on MNE, and focuses the code around\nBrainVision I/O.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://github.com/bids-standard/pybv", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pybv.readthedocs.io", "keywords": "Brain Products BrainVision vhdr vmrk eeg", "license": "BSD (3-clause)", "maintainer": "Stefan Appelhoff", "maintainer_email": "stefan.appelhoff@mailbox.org", "name": "pybv", "package_url": "https://pypi.org/project/pybv/", "platform": "any", "project_url": "https://pypi.org/project/pybv/", "project_urls": {"Bug Reports": "https://github.com/bids-standard/pybv/issues", "Documentation": "https://pybv.readthedocs.io", "Download": "https://github.com/bids-standard/pybv", "Homepage": "https://pybv.readthedocs.io", "Source": "https://github.com/bids-standard/pybv"}, "release_url": "https://pypi.org/project/pybv/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "A lightweight I/O utility for the BrainVision data format.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://circleci.com/gh/bids-standard/pybv\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/82b817da593965f85ee1392ac2d42935490cb636/68747470733a2f2f636972636c6563692e636f6d2f67682f626964732d7374616e646172642f707962762e7376673f7374796c653d737667\"></a>\n<a href=\"https://codecov.io/gh/bids-standard/pybv\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0190551d613910c95341ac7559159ab369047a1a/68747470733a2f2f636f6465636f762e696f2f67682f626964732d7374616e646172642f707962762f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/pybv\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b24bef4860cb16cd8e74018d9c38f2358c8cbbb/68747470733a2f2f62616467652e667572792e696f2f70792f707962762e737667\"></a>\n<a href=\"https://pepy.tech/project/pybv\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9c14e36ee7a8258dec84818bde3c368de2e7d806/68747470733a2f2f706570792e746563682f62616467652f70796276\"></a>\n<a href=\"https://pybv.readthedocs.io/en/stable/?badge=stable\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1e74b281f6ed65a4915fa3ffe6edf2f7ae56d352/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707962762f62616467652f3f76657273696f6e3d737461626c65\"></a>\n<div id=\"pybv\">\n<h2>pybv</h2>\n<p><tt>pybv</tt> is a lightweight exporter to the BrainVision data format. It is meant\nfor use with electrophysiology datasets stored in the\n<a href=\"https://bids.neuroimaging.io\" rel=\"nofollow\">Brain Imaging Data Structure</a>.</p>\n<p>The documentation can be found under the following links:</p>\n<ul>\n<li>for the <a href=\"https://pybv.rtfd.io/en/stable/\" rel=\"nofollow\">stable release</a></li>\n<li>for the <a href=\"https://pybv.rtfd.io/en/latest/\" rel=\"nofollow\">latest (development) version</a></li>\n</ul>\n<div id=\"about-the-brainvision-data-format\">\n<h3>About the BrainVision data format</h3>\n<p>BrainVision is the name of a file format commonly used for storing\nelectrophysiology data. Originally, it was put forward by the\ncompany <a href=\"https://www.brainproducts.com\" rel=\"nofollow\">Brain Products</a>, however the\nsimplicity of the format has allowed for a diversity of tools reading from and\nwriting to the format.</p>\n<p>The format consists of three separate files:</p>\n<ol>\n<li>A text header file (<tt>.vhdr</tt>) containing meta data</li>\n<li>A text marker file (<tt>.vmrk</tt>) containing information about events in the\ndata</li>\n<li>A binary data file (<tt>.eeg</tt>) containing the voltage values of the EEG</li>\n</ol>\n<p>Both text files are based on the\n<a href=\"https://en.wikipedia.org/wiki/INI_file\" rel=\"nofollow\">Microsoft Windows INI format</a>\nconsisting of:</p>\n<ul>\n<li>sections marked as <tt>[square brackets]</tt></li>\n<li>comments marked as <tt>; comment</tt></li>\n<li>key-value pairs marked as <tt>key=value</tt></li>\n</ul>\n<p>A documentation for core BrainVision file format is provided by Brain Products.\nYou can <a href=\"https://www.brainproducts.com/productdetails.php?id=21&amp;tab=5\" rel=\"nofollow\">view the specification</a>\nas hosted by Brain Products.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p><tt>pybv</tt>\u2019s only dependency is <tt>numpy</tt>. However, we currently recommend that\nyou install MNE-Python for reading BrainVision data. See their instructions\n<a href=\"https://www.martinos.org/mne/stable/install_mne_python.html\" rel=\"nofollow\">here</a>.</p>\n<p>After you have a working installation of MNE-Python (or only <tt>numpy</tt> if you\ndon\u2019t want to read data and only write it), you can install <tt>pybv</tt> through\nthe following: <tt>pip install <span class=\"pre\">-U</span> pybv</tt></p>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<p>The development of <tt>pybv</tt> is taking place on\n<a href=\"https://github.com/bids-standard/pybv\" rel=\"nofollow\">GitHub</a>.</p>\n<p>For more information, please see\n<a href=\"https://github.com/bids-standard/pybv/blob/master/CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING.md</a></p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<div id=\"writing-brainvision-files\">\n<h4>Writing BrainVision files</h4>\n<p>The primary functionality provided by <tt>pybv</tt> is the <tt>write_brainvision</tt>\nfunction. This writes a numpy array of data and provided metadata into a\ncollection of BrainVision files on disk.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pybv</span> <span class=\"kn\">import</span> <span class=\"n\">write_brainvision</span>\n\n<span class=\"c1\"># for further parameters see our API documentation in the docs</span>\n<span class=\"n\">write_brainvision</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">sfreq</span><span class=\"p\">,</span> <span class=\"n\">ch_names</span><span class=\"p\">,</span> <span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"n\">tmpdir</span><span class=\"p\">,</span> <span class=\"n\">events</span><span class=\"p\">,</span>\n                  <span class=\"n\">resolution</span><span class=\"o\">=</span><span class=\"mf\">1e-6</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"s1\">'\u00b5V'</span><span class=\"p\">,</span> <span class=\"n\">fmt</span><span class=\"o\">=</span><span class=\"s1\">'binary_float32'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"reading-brainvision-files\">\n<h4>Reading BrainVision files</h4>\n<p>Currently, pybv recommends using\n<a href=\"https://martinos.org/mne/stable/index.html\" rel=\"nofollow\">MNE-Python</a>\nfor reading BrainVision files written with <tt>pybv</tt>. This results in a\nnearly-round-trip conversion of the data (up to the numerical precision you\nspecify in the <tt>resolution</tt> parameter).</p>\n<p>Here is an example of the MNE code required to read in BrainVision data:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">mne</span>\n\n<span class=\"c1\"># Import the BrainVision data into an MNE Raw object</span>\n<span class=\"n\">raw</span> <span class=\"o\">=</span> <span class=\"n\">mne</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">read_raw_brainvision</span><span class=\"p\">(</span><span class=\"s1\">'tmp/test.vhdr'</span><span class=\"p\">,</span> <span class=\"n\">preload</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Read in the event information as MNE annotations</span>\n<span class=\"n\">annot</span> <span class=\"o\">=</span> <span class=\"n\">mne</span><span class=\"o\">.</span><span class=\"n\">read_annotations</span><span class=\"p\">(</span><span class=\"s1\">'tmp/test.vmrk'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Add the annotations to our raw object so we can use them with the data</span>\n<span class=\"n\">raw</span><span class=\"o\">.</span><span class=\"n\">set_annotations</span><span class=\"p\">(</span><span class=\"n\">annot</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Reconstruct the original events from our Raw object</span>\n<span class=\"n\">events</span><span class=\"p\">,</span> <span class=\"n\">event_ids</span> <span class=\"o\">=</span> <span class=\"n\">mne</span><span class=\"o\">.</span><span class=\"n\">events_from_annotations</span><span class=\"p\">(</span><span class=\"n\">raw</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"acknowledgements\">\n<h3>Acknowledgements</h3>\n<p>This package was originally adapted from the\n<a href=\"https://gitlab.com/palday/philistine\" rel=\"nofollow\">Philistine package</a> by\n<a href=\"https://palday.bitbucket.io/\" rel=\"nofollow\">palday</a>. It copies much of the BrainVision\nexporting code, removes the dependence on MNE, and focuses the code around\nBrainVision I/O.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6933901, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "d1d4cee8544cebd18be395a8be0509d0", "sha256": "3d9914401164666caec0a2d1bb51e8b8eca14c9b1d1753c03cd040be263670ae"}, "downloads": -1, "filename": "pybv-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d1d4cee8544cebd18be395a8be0509d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5977, "upload_time": "2018-12-10T07:18:07", "upload_time_iso_8601": "2018-12-10T07:18:07.875282Z", "url": "https://files.pythonhosted.org/packages/d3/ca/badae4cb5be4fd5074e93fe028bcb749db87cf05ffeaadaaf742722494aa/pybv-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a853b836c14be16d36f4188572d5fe9e", "sha256": "06695d55ff4239f2ff1fc1d55d9e53e964094a8957dc7b531fb9b36f4dd71ead"}, "downloads": -1, "filename": "pybv-0.0.0.tar.gz", "has_sig": false, "md5_digest": "a853b836c14be16d36f4188572d5fe9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4817, "upload_time": "2018-12-10T07:18:12", "upload_time_iso_8601": "2018-12-10T07:18:12.194787Z", "url": "https://files.pythonhosted.org/packages/51/db/28f2efe3992bc470e6d0769900dc219968a8f9de3e7014447a17897991f1/pybv-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "4e30be93603b4bc46e403925b74d3bbe", "sha256": "97807ad29c931a676563c1ce9549fe0dc3d8eec986828b11d7ed4d37f4c7ad35"}, "downloads": -1, "filename": "pybv-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4e30be93603b4bc46e403925b74d3bbe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6109, "upload_time": "2018-12-10T07:18:10", "upload_time_iso_8601": "2018-12-10T07:18:10.836234Z", "url": "https://files.pythonhosted.org/packages/f2/a8/7be02e31788c5d34aa396bf556cf6c744b8dc5e6dcb3208bf37dae5d3322/pybv-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cfa0beacff00085dc039483bd8e292e1", "sha256": "fbd090a09779e0373f63af3476fff73a4dc11289ba48ed645449d5a99f662eb5"}, "downloads": -1, "filename": "pybv-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cfa0beacff00085dc039483bd8e292e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4832, "upload_time": "2018-12-10T07:18:13", "upload_time_iso_8601": "2018-12-10T07:18:13.516616Z", "url": "https://files.pythonhosted.org/packages/a6/86/266cc0ff1c32acf36099b174e3c7abb36ee38bd56c294857bcd6c3cc8d78/pybv-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "bf7272e93d7e068788785cc6ca2bfd8c", "sha256": "b46ce9d6dc736e855d88387a670b0399a7943f1eaa2a70c8930585288025d370"}, "downloads": -1, "filename": "pybv-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bf7272e93d7e068788785cc6ca2bfd8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7200, "upload_time": "2019-04-28T11:20:07", "upload_time_iso_8601": "2019-04-28T11:20:07.024930Z", "url": "https://files.pythonhosted.org/packages/e5/8c/26de13d15f9efc13e77e2fe980df11f008f3c54434b81a7de4462c418970/pybv-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b88f90bec1a71c2d240bb8efd7b9ac3", "sha256": "ac587743a1c38414f9dc77cf70e2f45699596ad4e29763c4e938f64a7f69e3f6"}, "downloads": -1, "filename": "pybv-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4b88f90bec1a71c2d240bb8efd7b9ac3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5940, "upload_time": "2019-04-28T11:20:10", "upload_time_iso_8601": "2019-04-28T11:20:10.062892Z", "url": "https://files.pythonhosted.org/packages/f7/5c/814295f1871c8f9f67bcbe3f6e04355fa43a7506aa3b02ca74a74a3e0653/pybv-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "0ca17458d3f61d37e41cd4512b9da6e0", "sha256": "40cfdfb2a8cab3915bac5bafa79f42100392a5a72d15a60abc913dd763ab1141"}, "downloads": -1, "filename": "pybv-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0ca17458d3f61d37e41cd4512b9da6e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8764, "upload_time": "2019-07-23T12:04:56", "upload_time_iso_8601": "2019-07-23T12:04:56.156322Z", "url": "https://files.pythonhosted.org/packages/cd/88/756cabc8931c0dae1d91ccf35d8f31585daaa7e2e8f2f275701865c7ca26/pybv-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58cdf99a3c6b37bdca66b534038bf886", "sha256": "3fd579adde8efc08d436b7b69b02db0e54fd926dc52f3cca118f7c1a12756ff0"}, "downloads": -1, "filename": "pybv-0.1.0.tar.gz", "has_sig": false, "md5_digest": "58cdf99a3c6b37bdca66b534038bf886", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7722, "upload_time": "2019-07-23T12:04:58", "upload_time_iso_8601": "2019-07-23T12:04:58.008281Z", "url": "https://files.pythonhosted.org/packages/04/9c/ca440429ccafe2d19abe157b80d0d050d82b91760dad9c16a0ef6086a5e9/pybv-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "737699437b9f3a98f70e0b1d2429868f", "sha256": "b129b8b126adb1f3c722eecfc45bdc40f6c5ee5c8a557ec6923b4df26adc3e2f"}, "downloads": -1, "filename": "pybv-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "737699437b9f3a98f70e0b1d2429868f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8992, "upload_time": "2019-08-26T13:44:50", "upload_time_iso_8601": "2019-08-26T13:44:50.809151Z", "url": "https://files.pythonhosted.org/packages/56/d5/e79fa4abb3db69a29c6280bf6697caf66df7f0545104cba9f3c15ee80bc1/pybv-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ab91268f146923161724ed2096ddcc4", "sha256": "c932b2e69b2990f1fe4ce2dedd1f086dd277527ebd54504a5c63270a17ec1d7a"}, "downloads": -1, "filename": "pybv-0.2.0.tar.gz", "has_sig": false, "md5_digest": "3ab91268f146923161724ed2096ddcc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7964, "upload_time": "2019-08-26T13:44:52", "upload_time_iso_8601": "2019-08-26T13:44:52.603399Z", "url": "https://files.pythonhosted.org/packages/a8/55/c02fbeab09fa34f6d14dc7be21868891b935274cb93d77b58deb265af53c/pybv-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "06823ca315d3cc9bdf76701c90155aa8", "sha256": "22085b8f7dca90388b1fb00894a07d298ac6aed602aede84b2748ba3d3f719ea"}, "downloads": -1, "filename": "pybv-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "06823ca315d3cc9bdf76701c90155aa8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9156, "upload_time": "2020-04-02T08:12:58", "upload_time_iso_8601": "2020-04-02T08:12:58.260271Z", "url": "https://files.pythonhosted.org/packages/f0/fc/9431e681042609af2878215523f4f82f4c1a1514e890cca1ec4853f06d7c/pybv-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a12f0662bf210c712d17538ac6426f2", "sha256": "f9060eaa7950c94e36653ee68138e4662cd840d40e5c0e981f99240aab28f48a"}, "downloads": -1, "filename": "pybv-0.3.0.tar.gz", "has_sig": false, "md5_digest": "7a12f0662bf210c712d17538ac6426f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8935, "upload_time": "2020-04-02T08:12:59", "upload_time_iso_8601": "2020-04-02T08:12:59.693143Z", "url": "https://files.pythonhosted.org/packages/72/d7/5294e91189d0317da46fb47ca93f6e67041d1a92c3b9bca1f3914592f7f2/pybv-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "06823ca315d3cc9bdf76701c90155aa8", "sha256": "22085b8f7dca90388b1fb00894a07d298ac6aed602aede84b2748ba3d3f719ea"}, "downloads": -1, "filename": "pybv-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "06823ca315d3cc9bdf76701c90155aa8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9156, "upload_time": "2020-04-02T08:12:58", "upload_time_iso_8601": "2020-04-02T08:12:58.260271Z", "url": "https://files.pythonhosted.org/packages/f0/fc/9431e681042609af2878215523f4f82f4c1a1514e890cca1ec4853f06d7c/pybv-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a12f0662bf210c712d17538ac6426f2", "sha256": "f9060eaa7950c94e36653ee68138e4662cd840d40e5c0e981f99240aab28f48a"}, "downloads": -1, "filename": "pybv-0.3.0.tar.gz", "has_sig": false, "md5_digest": "7a12f0662bf210c712d17538ac6426f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8935, "upload_time": "2020-04-02T08:12:59", "upload_time_iso_8601": "2020-04-02T08:12:59.693143Z", "url": "https://files.pythonhosted.org/packages/72/d7/5294e91189d0317da46fb47ca93f6e67041d1a92c3b9bca1f3914592f7f2/pybv-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:53 2020"}