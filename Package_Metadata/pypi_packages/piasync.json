{"info": {"author": "Matt Boyer", "author_email": "mboyer@sdf.org", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: POSIX", "Programming Language :: Python :: 3"], "description": "PIAsync: A simple, respectful management tool for Private Internet Access VPN configs\n=====================================================================================\n\n**PIAsync** aims to be a simple and lightweight tool that automaticaly manages configuration information in the [NetworkManager](https://developer.gnome.org/NetworkManager/stable/NetworkManager.html) data domain for the VPN servers operated by Private Internet Access.\n\nIn addition, **PIAsync** is respectful of your user and system configuration. It will never:\n\n* Execute any external processes\n* Write anything on the filesystem itself\n* Require superuser privileges\n* Require native packages to be installed\n\nAll interactions with NetworkManager are performed using the latter's D-Bus API, the way it should be.\n\n### How Do I Use It?\n\n1. Install **PIAsync** (you'll need Python 3 and ``pip``):\n    ```\n    $ pip3 install piasync\n    ```\n2. Run it:\n    ```\n    $ piasync -h\n    usage: piasync [-h] [-n] [-a] [-v] username cert\n\n    Maintains Network Manager connections for the Private Internet Access VPN\n    servers\n\n    positional arguments:\n      username         Username to use for the VPN connections\n      cert             Path to the PIA root CA\n\n    optional arguments:\n      -h, --help       show this help message and exit\n      -n, --dry-run    Do not manipulate the NetworkManager configuration\n      -a, --all-users  Make the connections available to all users\n      -v, --verbose    Output debug information\n    ```\n\n### But Why?\n\nBecause PIA's [list of servers](https://www.privateinternetaccess.com/pages/network/) is quite large and setting up connections manually for each one would be tedious. There are automated solutions available, but tools that write config files without my informed consent upset me very much, so I wanted a tool that would _not_ do that.\n\n### Shout Outs\n\n* **PIASync** uses [jeepney](https://jeepney.readthedocs.io/en/latest/) for interacting with NetworkManager over D-Bus.\n* The [requests](http://docs.python-requests.org/en/master/) library is used to download fresh configuration information from the PIA website.\n* Lastly, [countrynames](https://pypi.org/project/countrynames/) is used to match the names given by PIA to its servers to a country code for the purpose of injecting a cute Emoji flag in the user-visible connection name.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mattboyer/piasync", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "piasync", "package_url": "https://pypi.org/project/piasync/", "platform": "", "project_url": "https://pypi.org/project/piasync/", "project_urls": {"Homepage": "https://github.com/mattboyer/piasync"}, "release_url": "https://pypi.org/project/piasync/0.10/", "requires_dist": ["countrynames", "jeepney", "requests"], "requires_python": "", "summary": "Maintains Network Manager connections for the Private Internet Access VPN servers", "version": "0.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PIAsync: A simple, respectful management tool for Private Internet Access VPN configs</h1>\n<p><strong>PIAsync</strong> aims to be a simple and lightweight tool that automaticaly manages configuration information in the <a href=\"https://developer.gnome.org/NetworkManager/stable/NetworkManager.html\" rel=\"nofollow\">NetworkManager</a> data domain for the VPN servers operated by Private Internet Access.</p>\n<p>In addition, <strong>PIAsync</strong> is respectful of your user and system configuration. It will never:</p>\n<ul>\n<li>Execute any external processes</li>\n<li>Write anything on the filesystem itself</li>\n<li>Require superuser privileges</li>\n<li>Require native packages to be installed</li>\n</ul>\n<p>All interactions with NetworkManager are performed using the latter's D-Bus API, the way it should be.</p>\n<h3>How Do I Use It?</h3>\n<ol>\n<li>Install <strong>PIAsync</strong> (you'll need Python 3 and <code>pip</code>):\n<pre><code>$ pip3 install piasync\n</code></pre>\n</li>\n<li>Run it:\n<pre><code>$ piasync -h\nusage: piasync [-h] [-n] [-a] [-v] username cert\n\nMaintains Network Manager connections for the Private Internet Access VPN\nservers\n\npositional arguments:\n  username         Username to use for the VPN connections\n  cert             Path to the PIA root CA\n\noptional arguments:\n  -h, --help       show this help message and exit\n  -n, --dry-run    Do not manipulate the NetworkManager configuration\n  -a, --all-users  Make the connections available to all users\n  -v, --verbose    Output debug information\n</code></pre>\n</li>\n</ol>\n<h3>But Why?</h3>\n<p>Because PIA's <a href=\"https://www.privateinternetaccess.com/pages/network/\" rel=\"nofollow\">list of servers</a> is quite large and setting up connections manually for each one would be tedious. There are automated solutions available, but tools that write config files without my informed consent upset me very much, so I wanted a tool that would <em>not</em> do that.</p>\n<h3>Shout Outs</h3>\n<ul>\n<li><strong>PIASync</strong> uses <a href=\"https://jeepney.readthedocs.io/en/latest/\" rel=\"nofollow\">jeepney</a> for interacting with NetworkManager over D-Bus.</li>\n<li>The <a href=\"http://docs.python-requests.org/en/master/\" rel=\"nofollow\">requests</a> library is used to download fresh configuration information from the PIA website.</li>\n<li>Lastly, <a href=\"https://pypi.org/project/countrynames/\" rel=\"nofollow\">countrynames</a> is used to match the names given by PIA to its servers to a country code for the purpose of injecting a cute Emoji flag in the user-visible connection name.</li>\n</ul>\n\n          </div>"}, "last_serial": 4653202, "releases": {"0.10": [{"comment_text": "", "digests": {"md5": "f8c726cc1f5122bc9737853ffd502d2c", "sha256": "dd91f53eada1a75c60f75a48ed5cf247ae06afcd8b98f0a96948895bcdb1218c"}, "downloads": -1, "filename": "piasync-0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "f8c726cc1f5122bc9737853ffd502d2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8371, "upload_time": "2019-01-02T16:04:20", "upload_time_iso_8601": "2019-01-02T16:04:20.192938Z", "url": "https://files.pythonhosted.org/packages/24/d8/834101f5282fa866b6fa8c7040441368a12c2af46dfb76e8deb649be2494/piasync-0.10-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f8c726cc1f5122bc9737853ffd502d2c", "sha256": "dd91f53eada1a75c60f75a48ed5cf247ae06afcd8b98f0a96948895bcdb1218c"}, "downloads": -1, "filename": "piasync-0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "f8c726cc1f5122bc9737853ffd502d2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8371, "upload_time": "2019-01-02T16:04:20", "upload_time_iso_8601": "2019-01-02T16:04:20.192938Z", "url": "https://files.pythonhosted.org/packages/24/d8/834101f5282fa866b6fa8c7040441368a12c2af46dfb76e8deb649be2494/piasync-0.10-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:55:10 2020"}