{"info": {"author": "Mosaab Muhammad", "author_email": "mosaabmuhammed@outlook.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Visualizer:\n**Visualizer** is a Python package that automates the process of visualization and facilitates the plotting of any individual relationship between multiple-columns.\n\n**Visualizer** package allows you to do 2 types of plotting:\n\n1. Visualize by an **individual column**:\n    - Count Plot.\n    - Pie Plot.\n    - Histogram plot.\n    - KDE plot.\n    - WordCloud plot.\n    - Histogram for high cardinality columns.\n    - Line plot with index.\n    - Point plot with index.\n    - Clustered-bar Plot.\n    - Bubble plot.\n    - Scatter plot.\n    - Density plot.\n    - Box plot.\n    - Violin plot.\n    - Ridge plot.\n    - Parallel plot.\n    - Radar plot.\n\n\n2. Visualize by a **relationship** (multiple-columns):\n     - Uni-vairate Target.\n     - Uni-variate Categorical (Cat).\n     - Uni-variate Numerical (Num).\n     - Bi-variate Num with Index.\n     - Bi-variate Cat with Index.\n     - Bi-variate Num with Num.\n     - Bi-variate Num with Cat.\n     - Bi-variate Cat with Cat.\n     - Bi-variate Cat with Target.\n     - Bi-variate Num with Target.\n     - Multi-variate Nums with Cat.\n\n\n## Installation:\n```python\npip install -U visualizer\n```\n\n## Usage:\n\n1. To use the first type **Individual Plotting**, all the methods starts with **create_**, and you can use them as follows:\n```python\n# Import the library\nfrom visualizer import Visualize\n\n# Create a count plot\nVisualizer.create_count_plot(df=df, cat_col=\"bin_3\", annot=True)\n```\n\n![count_plot](./imgs/count_plot.png)\n\nTo see more types of individual plotting, you can see the [docs](https://mosaabmuhammed.github.io/visualizer/testing/Docs.html).\n\n1. To use the second type **Automatic Visualization**, all the methods starts with **visualize_**, and you can them as follows:\n```python\n# Import the library\nfrom visualizer import Visualizer\n\nautoVis = Visualizer(df=df,                    # df: (dataframe)\n                    num_cols=num_cols,         # num_cols: (list) of numerical columns.\n                    cat_cols=cat_cols,         # cat_cols: (list) of categorical columns.\n                    target_col=target_col,     # target_col: (string) your target column.\n                    ignore_cols=ignore_cols,   # ignore_cols: (list) of columns to ignore.\n                    problem_type='classification') # problem_type: (string) ['classification', 'regression']\n\n# Visualize all the relationships between the selected columns,\n# whether it's uni-variate, Bi-variate, or even multi-variate.\n# This methods saves the generated figures into folder named \"visualizer\"\n# into the current directory.\nautoVis.visualize_all()\n```\n\n\nAfter running this command, the output in your notebook will tell you the progress, and when it's finished, it will be like this:\n\n![progress](./imgs/progress.png)\n\nAnd your current directory will have a new folder called \"visualizer\", which contains all the relationships between the columns.\n\nSo you can go to each particular relationship \"folder\", and see the related figures, does it contain any pattern?\n\n![image-20200314105541089](./imgs/folder_structure.png)\n\nTo know more, you can see the [docs](https://mosaabmuhammed.github.io/visualizer/testing/Docs.html).\n\n\n\n## Further Ideas/Developments:\n\nThe following ideas are under construction and it will be added soon in upcoming versions:\n\n1. Visualize **Sparse** Columns, to see if they have a pattern.\n\n2. Visualize **NaN/Infinite/Large numeric** values across the whole dataframe, to see the pattern of the whole dataframe.\n3. Visualize **Text** columns.\n4. Add the functionality to arrange the structure of the folders to be by **columns**, so each column has all the relationships for a specific column.\n\n\n## Contribute:\nIf you've found a bug or something that you would like to improve, don't hesitate to create an issue and create a pull request.\n\n## License:\nMIT License.\n\n## Authors:\n- [Mosaab Muhammad](https://www.linkedin.com/in/mosaabmuhammed/)\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MosaabMuhammed/visualizer", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "visualizer", "package_url": "https://pypi.org/project/visualizer/", "platform": "", "project_url": "https://pypi.org/project/visualizer/", "project_urls": {"Homepage": "https://github.com/MosaabMuhammed/visualizer"}, "release_url": "https://pypi.org/project/visualizer/0.0.10/", "requires_dist": ["matplotlib (>=3.1.2)", "seaborn (>=0.9.0)", "wordcloud (>=1.6.0)", "pandas (>=0.25.3)", "scikit-learn (>=0.21.3)", "termcolor (>=1.1.0)"], "requires_python": ">=3.6", "summary": "Automate the process of visualization", "version": "0.0.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Visualizer:</h1>\n<p><strong>Visualizer</strong> is a Python package that automates the process of visualization and facilitates the plotting of any individual relationship between multiple-columns.</p>\n<p><strong>Visualizer</strong> package allows you to do 2 types of plotting:</p>\n<ol>\n<li>\n<p>Visualize by an <strong>individual column</strong>:</p>\n<ul>\n<li>Count Plot.</li>\n<li>Pie Plot.</li>\n<li>Histogram plot.</li>\n<li>KDE plot.</li>\n<li>WordCloud plot.</li>\n<li>Histogram for high cardinality columns.</li>\n<li>Line plot with index.</li>\n<li>Point plot with index.</li>\n<li>Clustered-bar Plot.</li>\n<li>Bubble plot.</li>\n<li>Scatter plot.</li>\n<li>Density plot.</li>\n<li>Box plot.</li>\n<li>Violin plot.</li>\n<li>Ridge plot.</li>\n<li>Parallel plot.</li>\n<li>Radar plot.</li>\n</ul>\n</li>\n<li>\n<p>Visualize by a <strong>relationship</strong> (multiple-columns):</p>\n<ul>\n<li>Uni-vairate Target.</li>\n<li>Uni-variate Categorical (Cat).</li>\n<li>Uni-variate Numerical (Num).</li>\n<li>Bi-variate Num with Index.</li>\n<li>Bi-variate Cat with Index.</li>\n<li>Bi-variate Num with Num.</li>\n<li>Bi-variate Num with Cat.</li>\n<li>Bi-variate Cat with Cat.</li>\n<li>Bi-variate Cat with Target.</li>\n<li>Bi-variate Num with Target.</li>\n<li>Multi-variate Nums with Cat.</li>\n</ul>\n</li>\n</ol>\n<h2>Installation:</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">U</span> <span class=\"n\">visualizer</span>\n</pre>\n<h2>Usage:</h2>\n<ol>\n<li>To use the first type <strong>Individual Plotting</strong>, all the methods starts with <strong>create_</strong>, and you can use them as follows:</li>\n</ol>\n<pre><span class=\"c1\"># Import the library</span>\n<span class=\"kn\">from</span> <span class=\"nn\">visualizer</span> <span class=\"kn\">import</span> <span class=\"n\">Visualize</span>\n\n<span class=\"c1\"># Create a count plot</span>\n<span class=\"n\">Visualizer</span><span class=\"o\">.</span><span class=\"n\">create_count_plot</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">cat_col</span><span class=\"o\">=</span><span class=\"s2\">\"bin_3\"</span><span class=\"p\">,</span> <span class=\"n\">annot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"count_plot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b6bebaddefc05a06b46a3fd8ebdd9617fc15467/2e2f696d67732f636f756e745f706c6f742e706e67\"></p>\n<p>To see more types of individual plotting, you can see the <a href=\"https://mosaabmuhammed.github.io/visualizer/testing/Docs.html\" rel=\"nofollow\">docs</a>.</p>\n<ol>\n<li>To use the second type <strong>Automatic Visualization</strong>, all the methods starts with <strong>visualize_</strong>, and you can them as follows:</li>\n</ol>\n<pre><span class=\"c1\"># Import the library</span>\n<span class=\"kn\">from</span> <span class=\"nn\">visualizer</span> <span class=\"kn\">import</span> <span class=\"n\">Visualizer</span>\n\n<span class=\"n\">autoVis</span> <span class=\"o\">=</span> <span class=\"n\">Visualizer</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">,</span>                    <span class=\"c1\"># df: (dataframe)</span>\n                    <span class=\"n\">num_cols</span><span class=\"o\">=</span><span class=\"n\">num_cols</span><span class=\"p\">,</span>         <span class=\"c1\"># num_cols: (list) of numerical columns.</span>\n                    <span class=\"n\">cat_cols</span><span class=\"o\">=</span><span class=\"n\">cat_cols</span><span class=\"p\">,</span>         <span class=\"c1\"># cat_cols: (list) of categorical columns.</span>\n                    <span class=\"n\">target_col</span><span class=\"o\">=</span><span class=\"n\">target_col</span><span class=\"p\">,</span>     <span class=\"c1\"># target_col: (string) your target column.</span>\n                    <span class=\"n\">ignore_cols</span><span class=\"o\">=</span><span class=\"n\">ignore_cols</span><span class=\"p\">,</span>   <span class=\"c1\"># ignore_cols: (list) of columns to ignore.</span>\n                    <span class=\"n\">problem_type</span><span class=\"o\">=</span><span class=\"s1\">'classification'</span><span class=\"p\">)</span> <span class=\"c1\"># problem_type: (string) ['classification', 'regression']</span>\n\n<span class=\"c1\"># Visualize all the relationships between the selected columns,</span>\n<span class=\"c1\"># whether it's uni-variate, Bi-variate, or even multi-variate.</span>\n<span class=\"c1\"># This methods saves the generated figures into folder named \"visualizer\"</span>\n<span class=\"c1\"># into the current directory.</span>\n<span class=\"n\">autoVis</span><span class=\"o\">.</span><span class=\"n\">visualize_all</span><span class=\"p\">()</span>\n</pre>\n<p>After running this command, the output in your notebook will tell you the progress, and when it's finished, it will be like this:</p>\n<p><img alt=\"progress\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bad85c488a4f26b0f51e18a0e606b7720dd0ba2d/2e2f696d67732f70726f67726573732e706e67\"></p>\n<p>And your current directory will have a new folder called \"visualizer\", which contains all the relationships between the columns.</p>\n<p>So you can go to each particular relationship \"folder\", and see the related figures, does it contain any pattern?</p>\n<p><img alt=\"image-20200314105541089\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/89aad70ceb0839462377b1a8ba5d2eef15acdb27/2e2f696d67732f666f6c6465725f7374727563747572652e706e67\"></p>\n<p>To know more, you can see the <a href=\"https://mosaabmuhammed.github.io/visualizer/testing/Docs.html\" rel=\"nofollow\">docs</a>.</p>\n<h2>Further Ideas/Developments:</h2>\n<p>The following ideas are under construction and it will be added soon in upcoming versions:</p>\n<ol>\n<li>\n<p>Visualize <strong>Sparse</strong> Columns, to see if they have a pattern.</p>\n</li>\n<li>\n<p>Visualize <strong>NaN/Infinite/Large numeric</strong> values across the whole dataframe, to see the pattern of the whole dataframe.</p>\n</li>\n<li>\n<p>Visualize <strong>Text</strong> columns.</p>\n</li>\n<li>\n<p>Add the functionality to arrange the structure of the folders to be by <strong>columns</strong>, so each column has all the relationships for a specific column.</p>\n</li>\n</ol>\n<h2>Contribute:</h2>\n<p>If you've found a bug or something that you would like to improve, don't hesitate to create an issue and create a pull request.</p>\n<h2>License:</h2>\n<p>MIT License.</p>\n<h2>Authors:</h2>\n<ul>\n<li><a href=\"https://www.linkedin.com/in/mosaabmuhammed/\" rel=\"nofollow\">Mosaab Muhammad</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6843761, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "09701d8f568907c2fa6a5b25133e258e", "sha256": "3edb2b1ac039e927a668c03a5cb34e10ab855dd6a394cbbf189bdabe3af22a1f"}, "downloads": -1, "filename": "visualizer-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "09701d8f568907c2fa6a5b25133e258e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7784, "upload_time": "2020-03-09T09:40:19", "upload_time_iso_8601": "2020-03-09T09:40:19.606525Z", "url": "https://files.pythonhosted.org/packages/4a/4a/5c532b7ddbdf64fe66b6242c011c88c87683243c968b63b62ac6fd6f4ad1/visualizer-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5538596271a89fa4b45552e1bf38809", "sha256": "d1c5e510bc7bd6abf0b8a1cd9805f8d431aa5658f14ff3017bc9dd686ade2c10"}, "downloads": -1, "filename": "visualizer-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d5538596271a89fa4b45552e1bf38809", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1338849, "upload_time": "2020-03-09T09:40:30", "upload_time_iso_8601": "2020-03-09T09:40:30.863729Z", "url": "https://files.pythonhosted.org/packages/1c/03/d38ae07420ba2fa2b4c158373d273f26ffe13a9cf1138a1d95cb23ec9317/visualizer-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "a35a05d600526aba0ef92e8e1655203b", "sha256": "98b396d328b3defd02ccfb3d91d70e930a721161764c258dbab54552f3b3f293"}, "downloads": -1, "filename": "visualizer-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "a35a05d600526aba0ef92e8e1655203b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10201, "upload_time": "2020-03-19T15:08:27", "upload_time_iso_8601": "2020-03-19T15:08:27.145621Z", "url": "https://files.pythonhosted.org/packages/46/7e/9f0752fc97be7df10f5806ef5999c296fd48cd83558d3898d6519e4f5b1e/visualizer-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14229e6578c7c9d0ef169030b9b392b2", "sha256": "0ac364b8f03dd1e7afaac8ca7866df8d412c3db0bb75da921b892dd8f9ab4ece"}, "downloads": -1, "filename": "visualizer-0.0.10.tar.gz", "has_sig": false, "md5_digest": "14229e6578c7c9d0ef169030b9b392b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10060, "upload_time": "2020-03-19T15:08:28", "upload_time_iso_8601": "2020-03-19T15:08:28.505532Z", "url": "https://files.pythonhosted.org/packages/6c/75/a4d541e6e1a627c1e2f59f6e4fbb5c3b7c0f02c23be827315c122ebf2678/visualizer-0.0.10.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "67bf4b9f5a61da57f30dae70eaa16069", "sha256": "73ed39caec38c838bb5c2a7c6f982a8ef2aabc48fe0f861821b7e6c50006826d"}, "downloads": -1, "filename": "visualizer-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "67bf4b9f5a61da57f30dae70eaa16069", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9756, "upload_time": "2020-03-13T15:26:06", "upload_time_iso_8601": "2020-03-13T15:26:06.281275Z", "url": "https://files.pythonhosted.org/packages/ce/f7/aae584162a4e32b0c57c836a9bf738c07d6f4048e09c9f9c375e8270e7ee/visualizer-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "751d95e692a66603b8129d69376b4acc", "sha256": "88606034d3396d1f520c069b1f90d9d458da09c1ef72785f9eeb270b92187a78"}, "downloads": -1, "filename": "visualizer-0.0.5.tar.gz", "has_sig": false, "md5_digest": "751d95e692a66603b8129d69376b4acc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9770, "upload_time": "2020-03-13T15:26:08", "upload_time_iso_8601": "2020-03-13T15:26:08.100108Z", "url": "https://files.pythonhosted.org/packages/9f/08/d7d5c90bdaeef198d9106143fa5d88890c864c6bfcdef7ab63cc0c1e9bdd/visualizer-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "8e47f14a030960d444fe4bebc57f2b06", "sha256": "784d05e76eca8fc0f6214be9ccbec4107983669b303236f36d96a65174c8fbd1"}, "downloads": -1, "filename": "visualizer-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "8e47f14a030960d444fe4bebc57f2b06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8680, "upload_time": "2020-03-13T15:54:39", "upload_time_iso_8601": "2020-03-13T15:54:39.780417Z", "url": "https://files.pythonhosted.org/packages/49/f4/d8703eda8fb0e7450b594bcbbce0a3ce826985b9bb8cd63dadd419a7fbbc/visualizer-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c13d696700812330b92856a40bdb1da3", "sha256": "8f8b9c1e101b2d10f5dd529798f5e4266f43db0f7f4a468777a43bdb0e7d33a5"}, "downloads": -1, "filename": "visualizer-0.0.6.tar.gz", "has_sig": false, "md5_digest": "c13d696700812330b92856a40bdb1da3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8895, "upload_time": "2020-03-13T15:54:41", "upload_time_iso_8601": "2020-03-13T15:54:41.074782Z", "url": "https://files.pythonhosted.org/packages/cf/10/1bce79ae6fad7ab5d202437673a65eee8dc3dcadd2ee479d44fee004004a/visualizer-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "9c3238f20af64d052814a66201a27b69", "sha256": "a1069343cb632ab08912cc1796b248cfa05a53e4fe07722f85fbaeb314dd17ed"}, "downloads": -1, "filename": "visualizer-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "9c3238f20af64d052814a66201a27b69", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9955, "upload_time": "2020-03-13T17:09:14", "upload_time_iso_8601": "2020-03-13T17:09:14.325274Z", "url": "https://files.pythonhosted.org/packages/09/2c/75c6a2eaae5399d2bf3fd433032aae430d74afb566f323ce4d5565ace694/visualizer-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2adac773883b0f418529390bd6135819", "sha256": "4a04c9dc250b06af83c12aa4ea6a84de7bb3a9d0f2aeae141ab6d1b200acb522"}, "downloads": -1, "filename": "visualizer-0.0.7.tar.gz", "has_sig": false, "md5_digest": "2adac773883b0f418529390bd6135819", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9808, "upload_time": "2020-03-13T17:09:15", "upload_time_iso_8601": "2020-03-13T17:09:15.715608Z", "url": "https://files.pythonhosted.org/packages/e9/95/abbf540179616950e074e3d9fed87c47733a84baf6bb3f333e6848b3bf75/visualizer-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "3c61e9230c916977670ab2b4cd17eae9", "sha256": "4d224ffe58eeb907c32829d842d3fcc5bd83f88656b255f48354eab19351d156"}, "downloads": -1, "filename": "visualizer-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "3c61e9230c916977670ab2b4cd17eae9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10213, "upload_time": "2020-03-19T15:00:14", "upload_time_iso_8601": "2020-03-19T15:00:14.480059Z", "url": "https://files.pythonhosted.org/packages/1b/05/9100beee6b0fb5c0a78ea879afaaa5cdb46dcda42050fb5d7ad345274ccb/visualizer-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54cabf1e9a9f336c9d6909d483c44eee", "sha256": "25a4ab04ec93dcf184df15badbdced96c9642cd901211663f5c20b3e9cb13c11"}, "downloads": -1, "filename": "visualizer-0.0.8.tar.gz", "has_sig": false, "md5_digest": "54cabf1e9a9f336c9d6909d483c44eee", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4107014, "upload_time": "2020-03-19T15:00:42", "upload_time_iso_8601": "2020-03-19T15:00:42.575429Z", "url": "https://files.pythonhosted.org/packages/bb/fc/e229326986a2431f277b9e8876330337fc48ee8b8c48951b4960851ff389/visualizer-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "f25c0b7e66c7473ae5cb7b58c3f5639d", "sha256": "cd4e20401a8c5129e29f6b351f591475cb7110c2754d3c644a4b437fd95ff095"}, "downloads": -1, "filename": "visualizer-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "f25c0b7e66c7473ae5cb7b58c3f5639d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10199, "upload_time": "2020-03-19T15:05:06", "upload_time_iso_8601": "2020-03-19T15:05:06.250791Z", "url": "https://files.pythonhosted.org/packages/cd/9d/59193e88a8e2b3b896c4bffd9ea6f942199148e8d904fde2379fb1fd6a9e/visualizer-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4dc8204857841f2b0ffa2ceaaefca68b", "sha256": "298dd24549e349659c8c76b455fb1f8bfc9423021d5c2843af98fb264111234e"}, "downloads": -1, "filename": "visualizer-0.0.9.tar.gz", "has_sig": false, "md5_digest": "4dc8204857841f2b0ffa2ceaaefca68b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10074, "upload_time": "2020-03-19T15:05:07", "upload_time_iso_8601": "2020-03-19T15:05:07.718281Z", "url": "https://files.pythonhosted.org/packages/f0/ac/ac97835ded310f30dae72ccdb1fc6a2a8681e884bcec06763e902b7ed93d/visualizer-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a35a05d600526aba0ef92e8e1655203b", "sha256": "98b396d328b3defd02ccfb3d91d70e930a721161764c258dbab54552f3b3f293"}, "downloads": -1, "filename": "visualizer-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "a35a05d600526aba0ef92e8e1655203b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10201, "upload_time": "2020-03-19T15:08:27", "upload_time_iso_8601": "2020-03-19T15:08:27.145621Z", "url": "https://files.pythonhosted.org/packages/46/7e/9f0752fc97be7df10f5806ef5999c296fd48cd83558d3898d6519e4f5b1e/visualizer-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14229e6578c7c9d0ef169030b9b392b2", "sha256": "0ac364b8f03dd1e7afaac8ca7866df8d412c3db0bb75da921b892dd8f9ab4ece"}, "downloads": -1, "filename": "visualizer-0.0.10.tar.gz", "has_sig": false, "md5_digest": "14229e6578c7c9d0ef169030b9b392b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10060, "upload_time": "2020-03-19T15:08:28", "upload_time_iso_8601": "2020-03-19T15:08:28.505532Z", "url": "https://files.pythonhosted.org/packages/6c/75/a4d541e6e1a627c1e2f59f6e4fbb5c3b7c0f02c23be827315c122ebf2678/visualizer-0.0.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:35:10 2020"}