{"info": {"author": "Kike Fontan (@CosasDePuma)", "author_email": "kikefontanlorenzo@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Polyglot Code!\n==============\n|python| |javascript|\n\nClone me!\n---------------\n\nClone or download the project:\n\n.. code:: sh\n\n    git clone https://github.com/cosasdepuma/polyglot-code.git Polyglot\n      [ or ]\n    git clone https://gitlab.com/cosasdepuma/polyglot-code.git Polyglot\n\n    cd Polyglot\n\nTest it!\n------------------------\n\nRun all the unitary tests through NodeJS:\n\n.. code:: sh\n\n    cd javascript\n    npm i\n    npm test\n\nRun all the unitary tests using Python:\n\n.. code:: sh\n\n    cd python\n    python2 test/test.py\n    python3 test/test.py\n\nRequirements\n-----------------------------\n\nPolyglot does not require anything!\n\nUsage\n--------------\n\nImport **Polyglot** into your NodeJS file:\n\n.. code:: js\n\n    require('polyglot-code')\n\nImport **Polyglot** into your Python file:\n\n.. code:: py\n\n    import polyglot\n\nAvailable Languages!\n--------------------------------------\n\nJavaScript\n-------------------\n\n.. code:: js\n\n    // No new-line logs\n    printf('C')\n    IO.write('Elixir')\n    fmt.Printf('Go')\n    putStr('Haskell')\n    io.write('Lua')\n    fprintf('Matlab')\n    Write('Pascal')\n    write('Pike')\n\n    // New-line logs\n    trace('ActionScript')\n    WriteF('AmigaE')\n    Response.Write('ASP')\n    putschar('B')\n    puts('C')\n    Console.println('C#')\n    Console.WriteLine('C#')\n    writeln('D')\n    std.stdio.writeln('D')\n    print('Dart')\n    Writeln('Delphi')\n    IO.puts('Elixir')\n    fmt.Println('Go')\n    putStrLn('Haskell')\n    System.out.println('Java')\n    console.log('JavaScript')\n    println('Kotlin')\n    disp('Matlab')\n    echo('Nim')\n    NSLog('Objetive-C')\n    writeln('Pascal')\n    writeln('Pike')\n    println('Processing')\n    PrintN('PureBasic')\n    print('Python')\n    p('Ruby')\n\nPython\n--------------\n\n.. code:: py\n\n    # No new-line logs\n    printf(\"C\")\n    cout << \"C++\"\n    IO.write(\"Elixir\")\n    fmt.Print(\"Go\")\n    fmt.Printf(\"Go\")\n    putStr(\"Haskell\")\n    System.out.printf(\"Java\")\n    io.write(\"Lua\")\n    fprintf(\"Matlab\")\n    write(\"Pike\")\n    System.Console.Write(\"VB.NET\")\n\n    # New-line logs\n    print(\"Python\")\n    trace(\"ActionScript\")\n    Ada.Text_IO.Put_Line(\"Ada\")\n    WriteF(\"AmigaE\")\n    Response.Write(\"ASP\")\n    putchar(\"B\")\n    puts(\"C\")\n    Console.println(\"C#\")\n    Console.WriteLine(\"C#\")\n    cout << \"C++\" << endl\n    Qout(\"Clipper\")\n    writeln(\"D\")\n    std.stdio.writeln(\"D\")\n    Writeln(\"Delphi\")\n    IO.puts(\"Elixir\")\n    fmt.Println(\"Go\")\n    putStrLn(\"Haskell\")\n    System.out.println(\"Java\")\n    console.log(\"JavaScript\")\n    println(\"Kotlin\")\n    Print[\"Mathematica\"]\n    disp(\"Matlab\")\n    echo(\"Nim\")\n    NSLog(\"Objetive-C\")\n    writeln(\"Pascal\")\n    writeln(\"Pike\")\n    PrintN(\"PureBasic\")\n    p(\"Ruby\")\n    Debug.Log(\"Unity3D\")\n    System.Console.WriteLine(\"VB.NET\")\n\nSupport the developer!\n--------------------------------\n\nEverything I do and publish can be used for free whenever I receive my\ncorresponding merit.\n\nScheme of contents\n----------------------------------\n\n::\n\n    Polyglot-Code\n     < Repository >\n    |__ .gitignore\n    |__ .repository\n      |__ odd.jpeg\n    |__ LICENSE\n    |__ README.md\n    < JavaScript >\n    |__ javascript\n      |__ package.json\n      |__ lib\n        |__ polyglot.js\n      |__ test\n        |__ test.js\n    < Python >\n    |__ python\n      |__ lib\n        |__ __init__.py\n        |__ polyglot.py\n      |__ test\n        |__ test.py\n\n--------------\n\nPlease contact with `Kike Puma <https://linkedin.com/in/kikepuma>`__ if\nyou need more information.\n\n.. |python| image:: https://img.shields.io/badge/language-python-blue.svg?style=for-the-badge\n.. |javascript| image:: https://img.shields.io/badge/language-javascript-yellow.svg?style=for-the-badge", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cosasdepuma", "keywords": "log,debug,console,anyprint,polyglot", "license": "Apache-2.0", "maintainer": "Kike Fontan (@CosasDePuma)", "maintainer_email": "kikefontanlorenzo@gmail.com", "name": "polyglot-code", "package_url": "https://pypi.org/project/polyglot-code/", "platform": "", "project_url": "https://pypi.org/project/polyglot-code/", "project_urls": {"Homepage": "https://github.com/cosasdepuma"}, "release_url": "https://pypi.org/project/polyglot-code/1.0.10/", "requires_dist": null, "requires_python": "", "summary": "Write console logs in 'any' programming language", "version": "1.0.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5380f3743c87ae2fd001eb3e1b487c6cac36b9f1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e67756167652d707974686f6e2d626c75652e7376673f7374796c653d666f722d7468652d6261646765\"> <img alt=\"javascript\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7dd186f90062035f21e6346406dd12d37176b092/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e67756167652d6a6176617363726970742d79656c6c6f772e7376673f7374796c653d666f722d7468652d6261646765\"></p>\n<div id=\"clone-me\">\n<h2>Clone me!</h2>\n<p>Clone or download the project:</p>\n<pre>git clone https://github.com/cosasdepuma/polyglot-code.git Polyglot\n  <span class=\"o\">[</span> or <span class=\"o\">]</span>\ngit clone https://gitlab.com/cosasdepuma/polyglot-code.git Polyglot\n\n<span class=\"nb\">cd</span> Polyglot\n</pre>\n</div>\n<div id=\"test-it\">\n<h2>Test it!</h2>\n<p>Run all the unitary tests through NodeJS:</p>\n<pre><span class=\"nb\">cd</span> javascript\nnpm i\nnpm <span class=\"nb\">test</span>\n</pre>\n<p>Run all the unitary tests using Python:</p>\n<pre><span class=\"nb\">cd</span> python\npython2 test/test.py\npython3 test/test.py\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Polyglot does not require anything!</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Import <strong>Polyglot</strong> into your NodeJS file:</p>\n<pre><span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'polyglot-code'</span><span class=\"p\">)</span>\n</pre>\n<p>Import <strong>Polyglot</strong> into your Python file:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">polyglot</span>\n</pre>\n</div>\n<div id=\"available-languages\">\n<h2>Available Languages!</h2>\n</div>\n<div id=\"javascript\">\n<h2>JavaScript</h2>\n<pre><span class=\"c1\">// No new-line logs\n</span><span class=\"nx\">printf</span><span class=\"p\">(</span><span class=\"s1\">'C'</span><span class=\"p\">)</span>\n<span class=\"nx\">IO</span><span class=\"p\">.</span><span class=\"nx\">write</span><span class=\"p\">(</span><span class=\"s1\">'Elixir'</span><span class=\"p\">)</span>\n<span class=\"nx\">fmt</span><span class=\"p\">.</span><span class=\"nx\">Printf</span><span class=\"p\">(</span><span class=\"s1\">'Go'</span><span class=\"p\">)</span>\n<span class=\"nx\">putStr</span><span class=\"p\">(</span><span class=\"s1\">'Haskell'</span><span class=\"p\">)</span>\n<span class=\"nx\">io</span><span class=\"p\">.</span><span class=\"nx\">write</span><span class=\"p\">(</span><span class=\"s1\">'Lua'</span><span class=\"p\">)</span>\n<span class=\"nx\">fprintf</span><span class=\"p\">(</span><span class=\"s1\">'Matlab'</span><span class=\"p\">)</span>\n<span class=\"nx\">Write</span><span class=\"p\">(</span><span class=\"s1\">'Pascal'</span><span class=\"p\">)</span>\n<span class=\"nx\">write</span><span class=\"p\">(</span><span class=\"s1\">'Pike'</span><span class=\"p\">)</span>\n\n<span class=\"c1\">// New-line logs\n</span><span class=\"nx\">trace</span><span class=\"p\">(</span><span class=\"s1\">'ActionScript'</span><span class=\"p\">)</span>\n<span class=\"nx\">WriteF</span><span class=\"p\">(</span><span class=\"s1\">'AmigaE'</span><span class=\"p\">)</span>\n<span class=\"nx\">Response</span><span class=\"p\">.</span><span class=\"nx\">Write</span><span class=\"p\">(</span><span class=\"s1\">'ASP'</span><span class=\"p\">)</span>\n<span class=\"nx\">putschar</span><span class=\"p\">(</span><span class=\"s1\">'B'</span><span class=\"p\">)</span>\n<span class=\"nx\">puts</span><span class=\"p\">(</span><span class=\"s1\">'C'</span><span class=\"p\">)</span>\n<span class=\"nx\">Console</span><span class=\"p\">.</span><span class=\"nx\">println</span><span class=\"p\">(</span><span class=\"s1\">'C#'</span><span class=\"p\">)</span>\n<span class=\"nx\">Console</span><span class=\"p\">.</span><span class=\"nx\">WriteLine</span><span class=\"p\">(</span><span class=\"s1\">'C#'</span><span class=\"p\">)</span>\n<span class=\"nx\">writeln</span><span class=\"p\">(</span><span class=\"s1\">'D'</span><span class=\"p\">)</span>\n<span class=\"nx\">std</span><span class=\"p\">.</span><span class=\"nx\">stdio</span><span class=\"p\">.</span><span class=\"nx\">writeln</span><span class=\"p\">(</span><span class=\"s1\">'D'</span><span class=\"p\">)</span>\n<span class=\"nx\">print</span><span class=\"p\">(</span><span class=\"s1\">'Dart'</span><span class=\"p\">)</span>\n<span class=\"nx\">Writeln</span><span class=\"p\">(</span><span class=\"s1\">'Delphi'</span><span class=\"p\">)</span>\n<span class=\"nx\">IO</span><span class=\"p\">.</span><span class=\"nx\">puts</span><span class=\"p\">(</span><span class=\"s1\">'Elixir'</span><span class=\"p\">)</span>\n<span class=\"nx\">fmt</span><span class=\"p\">.</span><span class=\"nx\">Println</span><span class=\"p\">(</span><span class=\"s1\">'Go'</span><span class=\"p\">)</span>\n<span class=\"nx\">putStrLn</span><span class=\"p\">(</span><span class=\"s1\">'Haskell'</span><span class=\"p\">)</span>\n<span class=\"nx\">System</span><span class=\"p\">.</span><span class=\"nx\">out</span><span class=\"p\">.</span><span class=\"nx\">println</span><span class=\"p\">(</span><span class=\"s1\">'Java'</span><span class=\"p\">)</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'JavaScript'</span><span class=\"p\">)</span>\n<span class=\"nx\">println</span><span class=\"p\">(</span><span class=\"s1\">'Kotlin'</span><span class=\"p\">)</span>\n<span class=\"nx\">disp</span><span class=\"p\">(</span><span class=\"s1\">'Matlab'</span><span class=\"p\">)</span>\n<span class=\"nx\">echo</span><span class=\"p\">(</span><span class=\"s1\">'Nim'</span><span class=\"p\">)</span>\n<span class=\"nx\">NSLog</span><span class=\"p\">(</span><span class=\"s1\">'Objetive-C'</span><span class=\"p\">)</span>\n<span class=\"nx\">writeln</span><span class=\"p\">(</span><span class=\"s1\">'Pascal'</span><span class=\"p\">)</span>\n<span class=\"nx\">writeln</span><span class=\"p\">(</span><span class=\"s1\">'Pike'</span><span class=\"p\">)</span>\n<span class=\"nx\">println</span><span class=\"p\">(</span><span class=\"s1\">'Processing'</span><span class=\"p\">)</span>\n<span class=\"nx\">PrintN</span><span class=\"p\">(</span><span class=\"s1\">'PureBasic'</span><span class=\"p\">)</span>\n<span class=\"nx\">print</span><span class=\"p\">(</span><span class=\"s1\">'Python'</span><span class=\"p\">)</span>\n<span class=\"nx\">p</span><span class=\"p\">(</span><span class=\"s1\">'Ruby'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"python\">\n<h2>Python</h2>\n<pre><span class=\"c1\"># No new-line logs</span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s2\">\"C\"</span><span class=\"p\">)</span>\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">\"C++\"</span>\n<span class=\"n\">IO</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">\"Elixir\"</span><span class=\"p\">)</span>\n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s2\">\"Go\"</span><span class=\"p\">)</span>\n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"s2\">\"Go\"</span><span class=\"p\">)</span>\n<span class=\"n\">putStr</span><span class=\"p\">(</span><span class=\"s2\">\"Haskell\"</span><span class=\"p\">)</span>\n<span class=\"n\">System</span><span class=\"o\">.</span><span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s2\">\"Java\"</span><span class=\"p\">)</span>\n<span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">\"Lua\"</span><span class=\"p\">)</span>\n<span class=\"n\">fprintf</span><span class=\"p\">(</span><span class=\"s2\">\"Matlab\"</span><span class=\"p\">)</span>\n<span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">\"Pike\"</span><span class=\"p\">)</span>\n<span class=\"n\">System</span><span class=\"o\">.</span><span class=\"n\">Console</span><span class=\"o\">.</span><span class=\"n\">Write</span><span class=\"p\">(</span><span class=\"s2\">\"VB.NET\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># New-line logs</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Python\"</span><span class=\"p\">)</span>\n<span class=\"n\">trace</span><span class=\"p\">(</span><span class=\"s2\">\"ActionScript\"</span><span class=\"p\">)</span>\n<span class=\"n\">Ada</span><span class=\"o\">.</span><span class=\"n\">Text_IO</span><span class=\"o\">.</span><span class=\"n\">Put_Line</span><span class=\"p\">(</span><span class=\"s2\">\"Ada\"</span><span class=\"p\">)</span>\n<span class=\"n\">WriteF</span><span class=\"p\">(</span><span class=\"s2\">\"AmigaE\"</span><span class=\"p\">)</span>\n<span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">Write</span><span class=\"p\">(</span><span class=\"s2\">\"ASP\"</span><span class=\"p\">)</span>\n<span class=\"n\">putchar</span><span class=\"p\">(</span><span class=\"s2\">\"B\"</span><span class=\"p\">)</span>\n<span class=\"n\">puts</span><span class=\"p\">(</span><span class=\"s2\">\"C\"</span><span class=\"p\">)</span>\n<span class=\"n\">Console</span><span class=\"o\">.</span><span class=\"n\">println</span><span class=\"p\">(</span><span class=\"s2\">\"C#\"</span><span class=\"p\">)</span>\n<span class=\"n\">Console</span><span class=\"o\">.</span><span class=\"n\">WriteLine</span><span class=\"p\">(</span><span class=\"s2\">\"C#\"</span><span class=\"p\">)</span>\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">\"C++\"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">endl</span>\n<span class=\"n\">Qout</span><span class=\"p\">(</span><span class=\"s2\">\"Clipper\"</span><span class=\"p\">)</span>\n<span class=\"n\">writeln</span><span class=\"p\">(</span><span class=\"s2\">\"D\"</span><span class=\"p\">)</span>\n<span class=\"n\">std</span><span class=\"o\">.</span><span class=\"n\">stdio</span><span class=\"o\">.</span><span class=\"n\">writeln</span><span class=\"p\">(</span><span class=\"s2\">\"D\"</span><span class=\"p\">)</span>\n<span class=\"n\">Writeln</span><span class=\"p\">(</span><span class=\"s2\">\"Delphi\"</span><span class=\"p\">)</span>\n<span class=\"n\">IO</span><span class=\"o\">.</span><span class=\"n\">puts</span><span class=\"p\">(</span><span class=\"s2\">\"Elixir\"</span><span class=\"p\">)</span>\n<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s2\">\"Go\"</span><span class=\"p\">)</span>\n<span class=\"n\">putStrLn</span><span class=\"p\">(</span><span class=\"s2\">\"Haskell\"</span><span class=\"p\">)</span>\n<span class=\"n\">System</span><span class=\"o\">.</span><span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">println</span><span class=\"p\">(</span><span class=\"s2\">\"Java\"</span><span class=\"p\">)</span>\n<span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"s2\">\"JavaScript\"</span><span class=\"p\">)</span>\n<span class=\"n\">println</span><span class=\"p\">(</span><span class=\"s2\">\"Kotlin\"</span><span class=\"p\">)</span>\n<span class=\"n\">Print</span><span class=\"p\">[</span><span class=\"s2\">\"Mathematica\"</span><span class=\"p\">]</span>\n<span class=\"n\">disp</span><span class=\"p\">(</span><span class=\"s2\">\"Matlab\"</span><span class=\"p\">)</span>\n<span class=\"n\">echo</span><span class=\"p\">(</span><span class=\"s2\">\"Nim\"</span><span class=\"p\">)</span>\n<span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s2\">\"Objetive-C\"</span><span class=\"p\">)</span>\n<span class=\"n\">writeln</span><span class=\"p\">(</span><span class=\"s2\">\"Pascal\"</span><span class=\"p\">)</span>\n<span class=\"n\">writeln</span><span class=\"p\">(</span><span class=\"s2\">\"Pike\"</span><span class=\"p\">)</span>\n<span class=\"n\">PrintN</span><span class=\"p\">(</span><span class=\"s2\">\"PureBasic\"</span><span class=\"p\">)</span>\n<span class=\"n\">p</span><span class=\"p\">(</span><span class=\"s2\">\"Ruby\"</span><span class=\"p\">)</span>\n<span class=\"n\">Debug</span><span class=\"o\">.</span><span class=\"n\">Log</span><span class=\"p\">(</span><span class=\"s2\">\"Unity3D\"</span><span class=\"p\">)</span>\n<span class=\"n\">System</span><span class=\"o\">.</span><span class=\"n\">Console</span><span class=\"o\">.</span><span class=\"n\">WriteLine</span><span class=\"p\">(</span><span class=\"s2\">\"VB.NET\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"support-the-developer\">\n<h2>Support the developer!</h2>\n<p>Everything I do and publish can be used for free whenever I receive my\ncorresponding merit.</p>\n</div>\n<div id=\"scheme-of-contents\">\n<h2>Scheme of contents</h2>\n<pre>Polyglot-Code\n &lt; Repository &gt;\n|__ .gitignore\n|__ .repository\n  |__ odd.jpeg\n|__ LICENSE\n|__ README.md\n&lt; JavaScript &gt;\n|__ javascript\n  |__ package.json\n  |__ lib\n    |__ polyglot.js\n  |__ test\n    |__ test.js\n&lt; Python &gt;\n|__ python\n  |__ lib\n    |__ __init__.py\n    |__ polyglot.py\n  |__ test\n    |__ test.py\n</pre>\n<hr class=\"docutils\">\n<p>Please contact with <a href=\"https://linkedin.com/in/kikepuma\" rel=\"nofollow\">Kike Puma</a> if\nyou need more information.</p>\n</div>\n\n          </div>"}, "last_serial": 4090775, "releases": {"1.0.10": [{"comment_text": "", "digests": {"md5": "486ec0c63d49959262e88099c6f6be2a", "sha256": "1981d74fcda72e2178116762a006ecef56e99d1ff64b2ba695672a3fb1ebc717"}, "downloads": -1, "filename": "polyglot-code-1.0.10.tar.gz", "has_sig": false, "md5_digest": "486ec0c63d49959262e88099c6f6be2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3659, "upload_time": "2018-07-22T18:31:09", "upload_time_iso_8601": "2018-07-22T18:31:09.640450Z", "url": "https://files.pythonhosted.org/packages/49/61/236fb9f2433f814624c540815bd594700a0756f202f0f73e61b7188846a8/polyglot-code-1.0.10.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "486ec0c63d49959262e88099c6f6be2a", "sha256": "1981d74fcda72e2178116762a006ecef56e99d1ff64b2ba695672a3fb1ebc717"}, "downloads": -1, "filename": "polyglot-code-1.0.10.tar.gz", "has_sig": false, "md5_digest": "486ec0c63d49959262e88099c6f6be2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3659, "upload_time": "2018-07-22T18:31:09", "upload_time_iso_8601": "2018-07-22T18:31:09.640450Z", "url": "https://files.pythonhosted.org/packages/49/61/236fb9f2433f814624c540815bd594700a0756f202f0f73e61b7188846a8/polyglot-code-1.0.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:51:46 2020"}