{"info": {"author": "Daniel Malachov", "author_email": "malachovd@seznam.cz", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Other Environment", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# predictit\nLibrary/framework for making predictions. Choose best of 20 models (ARIMA, regressions, LSTM...) from libraries like statsmodels, sci-kit, tensorflow and some own models. Library also automatically preprocess data and chose optimal parameters of predictions.\n\n## Output\nMost common output is plotly interactive graph, numpy array of results or deploying to database.\n\n<center>\n<img src=\"https://raw.githubusercontent.com/Malachov/predictit/master/output_example.png\" width=\"620\" alt=\"Table of results\"/>\n</center>\n\nIt will also print the table of models errors. There is an example.\n\n<center>\n\n|                      Model                       | Average mape error |          Time         |\n|--------------------------------------------------|--------------------|-----------------------|\n|                Conjugate gradient                | 63.524174977250475 |  0.05654573440551758  |\n|              Bayes ridge regression              | 63.710155929156926 |   0.1469578742980957  |\n|          Passive aggressive regression           | 63.710155929156926 |  0.11465597152709961  |\n|                Gradient boosting                 | 63.710155929156926 |  0.13335371017456055  |\n|          Stochastic gradient regression          |  63.7440614924803  |  0.05531454086303711  |\n|        Autoregressive Linear neural unit         | 64.10576937765468  |   0.1627349853515625  |\n|                Sklearn regression                | 64.14795186243558  |  0.10858750343322754  |\n|             Extreme learning machine             |  67.2954353113517  |  0.20347213745117188  |\n|           Gen Extreme learning machine           |  67.7119926670532  |  0.11354947090148926  |\n| ARIMA (Autoregression integrated moving average) |  72.3343185006233  |  0.04496884346008301  |\n|                       ARMA                       | 72.33836164465275  |  0.13980531692504883  |\n|               AR (Autoregression)                | 81.37002844079231  |   0.2559630870819092  |\n|              KNeighbors regression               | 81.44464325916428  |   0.1639876365661621  |\n|               Compare with average               | 82.80799592765669  | 0.0021245479583740234 |\n|             Decision tree regression             | 88.78427790748702  |  0.14351654052734375  |\n|   Autoregressive Linear neural unit normalized   | 113.76306771909528 |  0.16782641410827637  |\n\n</center>\n\nReturn type of main predict function depends on config. It can return best prediction as array or all predictions array or plot as div string or dictionary or detailed results.\n\n## Oficial repo and documentation links\n\n[Repo on github](https://github.com/Malachov/predictit)\n\n[Official readthedocs documentation](https://predictit.readthedocs.io)\n\n## Installation\n    pip install predictit\n\nSometime you can have issues with installing some libraries from requirements (e.g. numpy because not BLAS / LAPACK). There are also two libraries - Tensorflow and pyodbc not in requirements, because not necessary, but troublesome. If library not installed with pip, check which library don't work, install manually with stackoverflow and repeat...\n\n## How to\nSoftware can be used in three ways. As a python library or with command line arguments or as normal python scripts.\nMain function is predict in `main.py` script.\nThere is also predict_multiple_columns if you want to predict more at once (columns or time frequentions) and also compare_models function that evaluate test data and can tell you which models are best. Then you can use only such a models. It's recommended also to use arguments optimization just once, change initial parameters in config and turn optimization off for performance reasons.\n\nCommand line arguments as well as functions arguments overwrite default `config.py` values. Not all the config options are in function arguments or command line arguments.\n\n### Simple example of predict function with Pypi and function arguments\n```Python\nimport predictit\nimport numpy as np\n\npredictions = predictit.main.predict(np.random.randn(1, 100), predicts=3, plot=1)\n```\n\n### Simple example of using `main.py` script\nOpen `config.py` (only script you need to edit (very simple)), do the setup. Mainly used_function and data or data_source and path. Then just run `main.py`.\n\n### Simple example of using command line arguments\nRun code below in terminal in predictit folder and change csv path (test data are not included in library because of size!). Use `main.py` --help for more parameters info.\n\n```\npython main.py --function predict --data_source 'csv' --csv_full_path 'test_data/daily-minimum-temperatures.csv' --predicted_column 1\n```\n\n### Example of using as a library as a pro with editting `config.py`\n```Python\n\nimport predictit\n\nconfig = predictit.config.config\n\nconfig.update({\n    'data_source': 'csv',  # Data source. ('csv' or 'sql' or 'test')\n    'csv_full_path': r'C:\\Users\\truton\\ownCloud\\Github\\predictit_library\\predictit\\test_data\\5000 Sales Records.csv',  # Full CSV path with suffix\n    'predicted_column': 'Temp',  # Column name that we want to predict\n\n    'predicts': 7,  # Number of predicted values - 7 by default\n    'datalength': 1000,  # The length of the data used for prediction\n    'print_number_of_models': 6,  # Visualize 6 best models\n    'repeatit': 50,  # Repeat calculation times on shifted data to evaluate error criterion\n    'other_columns': 0,  # Whether use other columns or not\n    'debug': 1,  # Whether print details and warnings\n\n    # Chose models that will be computed - remove if you want to use all the models\n    'used_models': {\n        \"AR (Autoregression)\": predictit.models.statsmodels_autoregressive,\n\n        \"ARIMA (Autoregression integrated moving average)\": predictit.models.statsmodels_autoregressive,\n\n        \"Autoregressive Linear neural unit\": predictit.models.autoreg_LNU,\n        \"Conjugate gradient\": predictit.models.conjugate_gradient,\n\n        \"Sklearn regression\": predictit.models.sklearn_regression,\n    },\n\n    # Define parameters of models\n\n    'models_parameters': {\n\n        'AR (Autoregression)': {'model': 'ar', 'method': 'cmle', 'ic': 'aic', 'trend': 'nc', 'solver': 'lbfgs'},\n        'ARIMA (Autoregression integrated moving average)': {'model': 'arima', 'p': 3, 'd': 0, 'q': 0, 'method': 'css', 'ic': 'aic', 'trend': 'nc', 'solver': 'nm'},\n\n        'Autoregressive Linear neural unit': {'mi_multiple': 1, 'mi_linspace': (1e-7, 1e-2, 200), 'epochs': 100, 'w_predict': 0, 'minormit': 0},\n        'Conjugate gradient': {'epochs': 200},\n\n        'Bayes ridge regression': {'regressor': 'bayesianridge', 'n_iter': 300, 'alpha_1': 1.e-6, 'alpha_2': 1.e-6, 'lambda_1': 1.e-6, 'lambda_2': 1.e-6},\n        'Sklearn regression': {'regressor': 'linear', 'alpha': 0.0001, 'n_iter': 100, 'epsilon': 1.35, 'alphas': [0.1, 0.5, 1], 'gcv_mode': 'auto', 'solver': 'auto', 'alpha_1': 1.e-6, 'alpha_2': 1.e-6, 'lambda_1': 1.e-6, 'lambda_2': 1.e-6, 'n_hidden': 20, 'rbf_width': 0, 'activation_func': 'selu'},\n    }\n\n})\n\npredictions = predictit.main.predict()\n```\n\nTo see all the possible values in `config.py` from your IDE, use\n\n```Python\npredictit.config.print_config()\n```\n\nOr if you downloaded it from github and not via pypi, just edit config as you need and run `main.py`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Malachov/predictit", "keywords": "", "license": "mit", "maintainer": "", "maintainer_email": "", "name": "predictit", "package_url": "https://pypi.org/project/predictit/", "platform": "any", "project_url": "https://pypi.org/project/predictit/", "project_urls": {"Homepage": "https://github.com/Malachov/predictit"}, "release_url": "https://pypi.org/project/predictit/1.33/", "requires_dist": ["numpy", "pandas", "matplotlib", "SQLAlchemy", "sklearn-extensions", "cufflinks", "plotly", "prettytable", "scipy", "seaborn", "statsmodels", "scikit-learn", "m2r"], "requires_python": "", "summary": "Library/framework for making predictions.", "version": "1.33", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>predictit</h1>\n<p>Library/framework for making predictions. Choose best of 20 models (ARIMA, regressions, LSTM...) from libraries like statsmodels, sci-kit, tensorflow and some own models. Library also automatically preprocess data and chose optimal parameters of predictions.</p>\n<h2>Output</h2>\n<p>Most common output is plotly interactive graph, numpy array of results or deploying to database.</p>\n&lt;center&gt;\n<img alt=\"Table of results\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f67a74a7d88a17d1f65858e042622d98f0f64378/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4d616c6163686f762f7072656469637469742f6d61737465722f6f75747075745f6578616d706c652e706e67\" width=\"620\">\n&lt;/center&gt;\n<p>It will also print the table of models errors. There is an example.</p>\n&lt;center&gt;\n<table>\n<thead>\n<tr>\n<th>Model</th>\n<th>Average mape error</th>\n<th>Time</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Conjugate gradient</td>\n<td>63.524174977250475</td>\n<td>0.05654573440551758</td>\n</tr>\n<tr>\n<td>Bayes ridge regression</td>\n<td>63.710155929156926</td>\n<td>0.1469578742980957</td>\n</tr>\n<tr>\n<td>Passive aggressive regression</td>\n<td>63.710155929156926</td>\n<td>0.11465597152709961</td>\n</tr>\n<tr>\n<td>Gradient boosting</td>\n<td>63.710155929156926</td>\n<td>0.13335371017456055</td>\n</tr>\n<tr>\n<td>Stochastic gradient regression</td>\n<td>63.7440614924803</td>\n<td>0.05531454086303711</td>\n</tr>\n<tr>\n<td>Autoregressive Linear neural unit</td>\n<td>64.10576937765468</td>\n<td>0.1627349853515625</td>\n</tr>\n<tr>\n<td>Sklearn regression</td>\n<td>64.14795186243558</td>\n<td>0.10858750343322754</td>\n</tr>\n<tr>\n<td>Extreme learning machine</td>\n<td>67.2954353113517</td>\n<td>0.20347213745117188</td>\n</tr>\n<tr>\n<td>Gen Extreme learning machine</td>\n<td>67.7119926670532</td>\n<td>0.11354947090148926</td>\n</tr>\n<tr>\n<td>ARIMA (Autoregression integrated moving average)</td>\n<td>72.3343185006233</td>\n<td>0.04496884346008301</td>\n</tr>\n<tr>\n<td>ARMA</td>\n<td>72.33836164465275</td>\n<td>0.13980531692504883</td>\n</tr>\n<tr>\n<td>AR (Autoregression)</td>\n<td>81.37002844079231</td>\n<td>0.2559630870819092</td>\n</tr>\n<tr>\n<td>KNeighbors regression</td>\n<td>81.44464325916428</td>\n<td>0.1639876365661621</td>\n</tr>\n<tr>\n<td>Compare with average</td>\n<td>82.80799592765669</td>\n<td>0.0021245479583740234</td>\n</tr>\n<tr>\n<td>Decision tree regression</td>\n<td>88.78427790748702</td>\n<td>0.14351654052734375</td>\n</tr>\n<tr>\n<td>Autoregressive Linear neural unit normalized</td>\n<td>113.76306771909528</td>\n<td>0.16782641410827637</td>\n</tr></tbody></table>\n&lt;/center&gt;\n<p>Return type of main predict function depends on config. It can return best prediction as array or all predictions array or plot as div string or dictionary or detailed results.</p>\n<h2>Oficial repo and documentation links</h2>\n<p><a href=\"https://github.com/Malachov/predictit\" rel=\"nofollow\">Repo on github</a></p>\n<p><a href=\"https://predictit.readthedocs.io\" rel=\"nofollow\">Official readthedocs documentation</a></p>\n<h2>Installation</h2>\n<pre><code>pip install predictit\n</code></pre>\n<p>Sometime you can have issues with installing some libraries from requirements (e.g. numpy because not BLAS / LAPACK). There are also two libraries - Tensorflow and pyodbc not in requirements, because not necessary, but troublesome. If library not installed with pip, check which library don't work, install manually with stackoverflow and repeat...</p>\n<h2>How to</h2>\n<p>Software can be used in three ways. As a python library or with command line arguments or as normal python scripts.\nMain function is predict in <code>main.py</code> script.\nThere is also predict_multiple_columns if you want to predict more at once (columns or time frequentions) and also compare_models function that evaluate test data and can tell you which models are best. Then you can use only such a models. It's recommended also to use arguments optimization just once, change initial parameters in config and turn optimization off for performance reasons.</p>\n<p>Command line arguments as well as functions arguments overwrite default <code>config.py</code> values. Not all the config options are in function arguments or command line arguments.</p>\n<h3>Simple example of predict function with Pypi and function arguments</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">predictit</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"n\">predictions</span> <span class=\"o\">=</span> <span class=\"n\">predictit</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"n\">predicts</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">plot</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<h3>Simple example of using <code>main.py</code> script</h3>\n<p>Open <code>config.py</code> (only script you need to edit (very simple)), do the setup. Mainly used_function and data or data_source and path. Then just run <code>main.py</code>.</p>\n<h3>Simple example of using command line arguments</h3>\n<p>Run code below in terminal in predictit folder and change csv path (test data are not included in library because of size!). Use <code>main.py</code> --help for more parameters info.</p>\n<pre><code>python main.py --function predict --data_source 'csv' --csv_full_path 'test_data/daily-minimum-temperatures.csv' --predicted_column 1\n</code></pre>\n<h3>Example of using as a library as a pro with editting <code>config.py</code></h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">predictit</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">predictit</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">config</span>\n\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span>\n    <span class=\"s1\">'data_source'</span><span class=\"p\">:</span> <span class=\"s1\">'csv'</span><span class=\"p\">,</span>  <span class=\"c1\"># Data source. ('csv' or 'sql' or 'test')</span>\n    <span class=\"s1\">'csv_full_path'</span><span class=\"p\">:</span> <span class=\"sa\">r</span><span class=\"s1\">'C:\\Users\\truton\\ownCloud\\Github\\predictit_library\\predictit\\test_data\\5000 Sales Records.csv'</span><span class=\"p\">,</span>  <span class=\"c1\"># Full CSV path with suffix</span>\n    <span class=\"s1\">'predicted_column'</span><span class=\"p\">:</span> <span class=\"s1\">'Temp'</span><span class=\"p\">,</span>  <span class=\"c1\"># Column name that we want to predict</span>\n\n    <span class=\"s1\">'predicts'</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">,</span>  <span class=\"c1\"># Number of predicted values - 7 by default</span>\n    <span class=\"s1\">'datalength'</span><span class=\"p\">:</span> <span class=\"mi\">1000</span><span class=\"p\">,</span>  <span class=\"c1\"># The length of the data used for prediction</span>\n    <span class=\"s1\">'print_number_of_models'</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span>  <span class=\"c1\"># Visualize 6 best models</span>\n    <span class=\"s1\">'repeatit'</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">,</span>  <span class=\"c1\"># Repeat calculation times on shifted data to evaluate error criterion</span>\n    <span class=\"s1\">'other_columns'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>  <span class=\"c1\"># Whether use other columns or not</span>\n    <span class=\"s1\">'debug'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>  <span class=\"c1\"># Whether print details and warnings</span>\n\n    <span class=\"c1\"># Chose models that will be computed - remove if you want to use all the models</span>\n    <span class=\"s1\">'used_models'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"AR (Autoregression)\"</span><span class=\"p\">:</span> <span class=\"n\">predictit</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">statsmodels_autoregressive</span><span class=\"p\">,</span>\n\n        <span class=\"s2\">\"ARIMA (Autoregression integrated moving average)\"</span><span class=\"p\">:</span> <span class=\"n\">predictit</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">statsmodels_autoregressive</span><span class=\"p\">,</span>\n\n        <span class=\"s2\">\"Autoregressive Linear neural unit\"</span><span class=\"p\">:</span> <span class=\"n\">predictit</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">autoreg_LNU</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"Conjugate gradient\"</span><span class=\"p\">:</span> <span class=\"n\">predictit</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">conjugate_gradient</span><span class=\"p\">,</span>\n\n        <span class=\"s2\">\"Sklearn regression\"</span><span class=\"p\">:</span> <span class=\"n\">predictit</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">sklearn_regression</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n\n    <span class=\"c1\"># Define parameters of models</span>\n\n    <span class=\"s1\">'models_parameters'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\n        <span class=\"s1\">'AR (Autoregression)'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'model'</span><span class=\"p\">:</span> <span class=\"s1\">'ar'</span><span class=\"p\">,</span> <span class=\"s1\">'method'</span><span class=\"p\">:</span> <span class=\"s1\">'cmle'</span><span class=\"p\">,</span> <span class=\"s1\">'ic'</span><span class=\"p\">:</span> <span class=\"s1\">'aic'</span><span class=\"p\">,</span> <span class=\"s1\">'trend'</span><span class=\"p\">:</span> <span class=\"s1\">'nc'</span><span class=\"p\">,</span> <span class=\"s1\">'solver'</span><span class=\"p\">:</span> <span class=\"s1\">'lbfgs'</span><span class=\"p\">},</span>\n        <span class=\"s1\">'ARIMA (Autoregression integrated moving average)'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'model'</span><span class=\"p\">:</span> <span class=\"s1\">'arima'</span><span class=\"p\">,</span> <span class=\"s1\">'p'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'d'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'q'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'method'</span><span class=\"p\">:</span> <span class=\"s1\">'css'</span><span class=\"p\">,</span> <span class=\"s1\">'ic'</span><span class=\"p\">:</span> <span class=\"s1\">'aic'</span><span class=\"p\">,</span> <span class=\"s1\">'trend'</span><span class=\"p\">:</span> <span class=\"s1\">'nc'</span><span class=\"p\">,</span> <span class=\"s1\">'solver'</span><span class=\"p\">:</span> <span class=\"s1\">'nm'</span><span class=\"p\">},</span>\n\n        <span class=\"s1\">'Autoregressive Linear neural unit'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'mi_multiple'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'mi_linspace'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mf\">1e-7</span><span class=\"p\">,</span> <span class=\"mf\">1e-2</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">),</span> <span class=\"s1\">'epochs'</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"s1\">'w_predict'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'minormit'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">},</span>\n        <span class=\"s1\">'Conjugate gradient'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'epochs'</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">},</span>\n\n        <span class=\"s1\">'Bayes ridge regression'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'regressor'</span><span class=\"p\">:</span> <span class=\"s1\">'bayesianridge'</span><span class=\"p\">,</span> <span class=\"s1\">'n_iter'</span><span class=\"p\">:</span> <span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"s1\">'alpha_1'</span><span class=\"p\">:</span> <span class=\"mf\">1.e-6</span><span class=\"p\">,</span> <span class=\"s1\">'alpha_2'</span><span class=\"p\">:</span> <span class=\"mf\">1.e-6</span><span class=\"p\">,</span> <span class=\"s1\">'lambda_1'</span><span class=\"p\">:</span> <span class=\"mf\">1.e-6</span><span class=\"p\">,</span> <span class=\"s1\">'lambda_2'</span><span class=\"p\">:</span> <span class=\"mf\">1.e-6</span><span class=\"p\">},</span>\n        <span class=\"s1\">'Sklearn regression'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'regressor'</span><span class=\"p\">:</span> <span class=\"s1\">'linear'</span><span class=\"p\">,</span> <span class=\"s1\">'alpha'</span><span class=\"p\">:</span> <span class=\"mf\">0.0001</span><span class=\"p\">,</span> <span class=\"s1\">'n_iter'</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"s1\">'epsilon'</span><span class=\"p\">:</span> <span class=\"mf\">1.35</span><span class=\"p\">,</span> <span class=\"s1\">'alphas'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">'gcv_mode'</span><span class=\"p\">:</span> <span class=\"s1\">'auto'</span><span class=\"p\">,</span> <span class=\"s1\">'solver'</span><span class=\"p\">:</span> <span class=\"s1\">'auto'</span><span class=\"p\">,</span> <span class=\"s1\">'alpha_1'</span><span class=\"p\">:</span> <span class=\"mf\">1.e-6</span><span class=\"p\">,</span> <span class=\"s1\">'alpha_2'</span><span class=\"p\">:</span> <span class=\"mf\">1.e-6</span><span class=\"p\">,</span> <span class=\"s1\">'lambda_1'</span><span class=\"p\">:</span> <span class=\"mf\">1.e-6</span><span class=\"p\">,</span> <span class=\"s1\">'lambda_2'</span><span class=\"p\">:</span> <span class=\"mf\">1.e-6</span><span class=\"p\">,</span> <span class=\"s1\">'n_hidden'</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"s1\">'rbf_width'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'activation_func'</span><span class=\"p\">:</span> <span class=\"s1\">'selu'</span><span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n\n<span class=\"p\">})</span>\n\n<span class=\"n\">predictions</span> <span class=\"o\">=</span> <span class=\"n\">predictit</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">()</span>\n</pre>\n<p>To see all the possible values in <code>config.py</code> from your IDE, use</p>\n<pre><span class=\"n\">predictit</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">print_config</span><span class=\"p\">()</span>\n</pre>\n<p>Or if you downloaded it from github and not via pypi, just edit config as you need and run <code>main.py</code></p>\n\n          </div>"}, "last_serial": 7137798, "releases": {"0.822": [{"comment_text": "", "digests": {"md5": "2724e74d999fba980e27e7bdedc83ba4", "sha256": "3019fdb82abfe4b222ce8175538d37c6e4fc4cf5a8fa9e0bbb9a60456d931f75"}, "downloads": -1, "filename": "predictit-0.822-py3-none-any.whl", "has_sig": false, "md5_digest": "2724e74d999fba980e27e7bdedc83ba4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 56740, "upload_time": "2020-01-18T18:05:22", "upload_time_iso_8601": "2020-01-18T18:05:22.890780Z", "url": "https://files.pythonhosted.org/packages/77/b3/d333c6bcc7a743d7555d63454c10a67f91c8e17fce4819df8ba847f5ef28/predictit-0.822-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70ddbfefa59f911ff6dc07c06919138e", "sha256": "c0db465ad865693ee4eca3862e128761372b4f64f0c5e10ed2dcfb2c8bf78310"}, "downloads": -1, "filename": "predictit-0.822.tar.gz", "has_sig": false, "md5_digest": "70ddbfefa59f911ff6dc07c06919138e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40662, "upload_time": "2020-01-18T18:05:25", "upload_time_iso_8601": "2020-01-18T18:05:25.545941Z", "url": "https://files.pythonhosted.org/packages/fc/e9/525dcd3b4a308feb2d77953cc18d87b34d9b0d1df98a43b4124cc442a10c/predictit-0.822.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "697a32dff6673783d49786b42bae3954", "sha256": "e9ffbf2e6bc1269d0bf0282b797fbfe6d4227e65c7f486bf809bdf152e974ba8"}, "downloads": -1, "filename": "predictit-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "697a32dff6673783d49786b42bae3954", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 56541, "upload_time": "2020-01-20T11:43:03", "upload_time_iso_8601": "2020-01-20T11:43:03.705956Z", "url": "https://files.pythonhosted.org/packages/29/fd/cd2f3c1292cf107152678da44ee3dbcf77148779787ac21c3f2cff0409f3/predictit-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70bdcd64173ee4297039c9147146ab70", "sha256": "ba7f4d117f3503e3672d69b98fae0ca7a9f3a0efed9da8ab98196272e742a686"}, "downloads": -1, "filename": "predictit-1.1.tar.gz", "has_sig": false, "md5_digest": "70bdcd64173ee4297039c9147146ab70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40834, "upload_time": "2020-01-20T11:43:05", "upload_time_iso_8601": "2020-01-20T11:43:05.972102Z", "url": "https://files.pythonhosted.org/packages/5b/a5/92ee5434ae67c0ca6f435a635b864c10bfd187daa7d5bd7d3c583ec42e5f/predictit-1.1.tar.gz", "yanked": false}], "1.22": [{"comment_text": "", "digests": {"md5": "4e892552422cd6f30a0e835df59a49ac", "sha256": "ca6b67a7de6c088a762e3090668ed7f147e9823285309544ccc16a19ea6b23ca"}, "downloads": -1, "filename": "predictit-1.22-py3-none-any.whl", "has_sig": false, "md5_digest": "4e892552422cd6f30a0e835df59a49ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51230, "upload_time": "2020-04-19T11:32:10", "upload_time_iso_8601": "2020-04-19T11:32:10.928140Z", "url": "https://files.pythonhosted.org/packages/8a/23/b3aff85ab733d3e06c87b297d1268c1d62f851c5f808986cd8d395daf20b/predictit-1.22-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d1325baca1796769e2c0663a64130e0", "sha256": "6a153bed675576610c225bc1ba2ae169760789d3bc26b156fbad89ef0078fc1c"}, "downloads": -1, "filename": "predictit-1.22.tar.gz", "has_sig": false, "md5_digest": "3d1325baca1796769e2c0663a64130e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42893, "upload_time": "2020-04-19T11:32:12", "upload_time_iso_8601": "2020-04-19T11:32:12.656887Z", "url": "https://files.pythonhosted.org/packages/49/4b/0c91ea6ada888d9e74952fcab36c611e2ab7d5b43788d1efbb79c9fe89f7/predictit-1.22.tar.gz", "yanked": false}], "1.25": [{"comment_text": "", "digests": {"md5": "43bb0989030b86f7e6e310ff3837a51d", "sha256": "a4d9beb6fd9b6fa7f8533dd242ceefec285cc8a10acab8e89fe5319a33d2252e"}, "downloads": -1, "filename": "predictit-1.25-py3-none-any.whl", "has_sig": false, "md5_digest": "43bb0989030b86f7e6e310ff3837a51d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 53626, "upload_time": "2020-04-22T16:37:11", "upload_time_iso_8601": "2020-04-22T16:37:11.191162Z", "url": "https://files.pythonhosted.org/packages/4d/f6/93d14f9f0fa353ea3c5dc90f5efbfe1211f9c9b992a2bf4ae5e877d6f912/predictit-1.25-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e276ec7f4a9b684eb58a5bdc5191e8db", "sha256": "ba1b177ae89f6bf6164fe027daca7b676fdddcb0c181d55419725bec2393a4f4"}, "downloads": -1, "filename": "predictit-1.25.tar.gz", "has_sig": false, "md5_digest": "e276ec7f4a9b684eb58a5bdc5191e8db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45217, "upload_time": "2020-04-22T16:37:14", "upload_time_iso_8601": "2020-04-22T16:37:14.161628Z", "url": "https://files.pythonhosted.org/packages/7b/16/91baf176aca42a3c487579b20a8c42b0728cbddb2ec87fb5b0fa3dc03432/predictit-1.25.tar.gz", "yanked": false}], "1.29": [{"comment_text": "", "digests": {"md5": "70d4a4f4d5eff3eb1405b7417633db32", "sha256": "6b2bcca7d83426435de054d43af1bbabe88028aeafcc79ea7b32cdf9e2abd308"}, "downloads": -1, "filename": "predictit-1.29-py3-none-any.whl", "has_sig": false, "md5_digest": "70d4a4f4d5eff3eb1405b7417633db32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 53720, "upload_time": "2020-04-23T15:07:04", "upload_time_iso_8601": "2020-04-23T15:07:04.209337Z", "url": "https://files.pythonhosted.org/packages/59/3b/e2d24a27a928ef66292a3c75aa4f797c42cb3725f7b63cb597c33edf152d/predictit-1.29-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6209482fe8f0e057dbd8637f83d73d6", "sha256": "f55f06b46408d20a3e89ac106f54ceaf3ebb133881a12dd2835586c76886b4ee"}, "downloads": -1, "filename": "predictit-1.29.tar.gz", "has_sig": false, "md5_digest": "f6209482fe8f0e057dbd8637f83d73d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45482, "upload_time": "2020-04-23T15:07:06", "upload_time_iso_8601": "2020-04-23T15:07:06.044030Z", "url": "https://files.pythonhosted.org/packages/de/e5/dcb9877dc78b28d11924450224d77ba737c34229507f154b98776700453e/predictit-1.29.tar.gz", "yanked": false}], "1.31": [{"comment_text": "", "digests": {"md5": "38022b3c882d7d5de6d22dad314ded51", "sha256": "b65cc62be821a148669c5ca66bc836249e76d7f4cbf0d03851c848512d164225"}, "downloads": -1, "filename": "predictit-1.31-py3-none-any.whl", "has_sig": false, "md5_digest": "38022b3c882d7d5de6d22dad314ded51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 53794, "upload_time": "2020-04-24T08:13:33", "upload_time_iso_8601": "2020-04-24T08:13:33.671711Z", "url": "https://files.pythonhosted.org/packages/68/b8/20c993a58af19a36180bd1daf7b3f0730cb9d1d4fd9795fc5d08dc9fb739/predictit-1.31-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a81861cc5779bfa17ff72d8cdedbbd64", "sha256": "8ec62693fd908a0064bb14170a68277e8651df859f1af15e18d6dfbcbe187990"}, "downloads": -1, "filename": "predictit-1.31.tar.gz", "has_sig": false, "md5_digest": "a81861cc5779bfa17ff72d8cdedbbd64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45235, "upload_time": "2020-04-24T08:13:35", "upload_time_iso_8601": "2020-04-24T08:13:35.198110Z", "url": "https://files.pythonhosted.org/packages/2e/b4/a961f1b1b042a96195c3fb3efee440c26a02c0121843f677c4b7859c56d6/predictit-1.31.tar.gz", "yanked": false}], "1.32": [{"comment_text": "", "digests": {"md5": "095ad01311f30fe3c22960f76049901f", "sha256": "86168ead898bcb4fd23860cfd7413c83ca02ce980a7f40f79cb58ddf69895906"}, "downloads": -1, "filename": "predictit-1.32-py3-none-any.whl", "has_sig": false, "md5_digest": "095ad01311f30fe3c22960f76049901f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 55133, "upload_time": "2020-04-26T09:22:56", "upload_time_iso_8601": "2020-04-26T09:22:56.324106Z", "url": "https://files.pythonhosted.org/packages/5c/d2/44460b21857a9b6cccc48690e4e28a98bd6af263d4264dbb13c7d4114af8/predictit-1.32-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2dafda3e707b8999c769ae9738effb20", "sha256": "acc820583c33cad1dad61c4cd490fbb1ffaf07f29db5efbd508bf59756632d9d"}, "downloads": -1, "filename": "predictit-1.32.tar.gz", "has_sig": false, "md5_digest": "2dafda3e707b8999c769ae9738effb20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46744, "upload_time": "2020-04-26T09:22:58", "upload_time_iso_8601": "2020-04-26T09:22:58.018674Z", "url": "https://files.pythonhosted.org/packages/0c/5b/2b67e14d69a631465761c9d5561eba1668cf4c06ae19fcdee235cee59d75/predictit-1.32.tar.gz", "yanked": false}], "1.33": [{"comment_text": "", "digests": {"md5": "c5883dfa60c377c9fa290621f7106efe", "sha256": "0158c818e7f4087cdf35b3b5c2af58c09cbb99f95ad1ddf96fba347e60c8dd69"}, "downloads": -1, "filename": "predictit-1.33-py3-none-any.whl", "has_sig": false, "md5_digest": "c5883dfa60c377c9fa290621f7106efe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 56688, "upload_time": "2020-04-30T14:27:08", "upload_time_iso_8601": "2020-04-30T14:27:08.733108Z", "url": "https://files.pythonhosted.org/packages/93/d2/9f9237eefc63ec2ce77bc0b60179f1bfd945252a600bcc30cb401ba82b2a/predictit-1.33-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0453ed59e9d7ca31fa566e5cd9f18cec", "sha256": "7e340e0d9791285a21ca567d3e3fb2a392b944c20335c7ffe965dc5e2cc04019"}, "downloads": -1, "filename": "predictit-1.33.tar.gz", "has_sig": false, "md5_digest": "0453ed59e9d7ca31fa566e5cd9f18cec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49214, "upload_time": "2020-04-30T14:27:10", "upload_time_iso_8601": "2020-04-30T14:27:10.469202Z", "url": "https://files.pythonhosted.org/packages/90/ae/f74ac36ea6c595a8853246ab55662443a1da61ca8a0304d7a64d93cafdd8/predictit-1.33.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c5883dfa60c377c9fa290621f7106efe", "sha256": "0158c818e7f4087cdf35b3b5c2af58c09cbb99f95ad1ddf96fba347e60c8dd69"}, "downloads": -1, "filename": "predictit-1.33-py3-none-any.whl", "has_sig": false, "md5_digest": "c5883dfa60c377c9fa290621f7106efe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 56688, "upload_time": "2020-04-30T14:27:08", "upload_time_iso_8601": "2020-04-30T14:27:08.733108Z", "url": "https://files.pythonhosted.org/packages/93/d2/9f9237eefc63ec2ce77bc0b60179f1bfd945252a600bcc30cb401ba82b2a/predictit-1.33-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0453ed59e9d7ca31fa566e5cd9f18cec", "sha256": "7e340e0d9791285a21ca567d3e3fb2a392b944c20335c7ffe965dc5e2cc04019"}, "downloads": -1, "filename": "predictit-1.33.tar.gz", "has_sig": false, "md5_digest": "0453ed59e9d7ca31fa566e5cd9f18cec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49214, "upload_time": "2020-04-30T14:27:10", "upload_time_iso_8601": "2020-04-30T14:27:10.469202Z", "url": "https://files.pythonhosted.org/packages/90/ae/f74ac36ea6c595a8853246ab55662443a1da61ca8a0304d7a64d93cafdd8/predictit-1.33.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:20:01 2020"}