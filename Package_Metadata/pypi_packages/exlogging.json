{"info": {"author": "Motoki Naruse", "author_email": "motoki@naru.se", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development", "Topic :: Utilities"], "description": ".. image:: https://travis-ci.org/narusemotoki/exlogging.svg?branch=master\n    :target: https://travis-ci.org/narusemotoki/exlogging\n\n\nexlogging\n#########\n\nSupports to setup python standard logging package.\n\nHow to use\n==========\n\nThe way to use exlogging almost same with Python standard logging. First, you can call init function with config dict. After that, completely same with logging.\n\n.. code-block:: python\n\n    import exlogging\n\n    config = {\n        'file': {\n            'level': 'debug',\n            'filename': '/path/to/logfile'\n        }\n        # You can conbinate with other handlers.\n    }\n\n    # If you call init function without second parameter(name), exlogging setup root logger.\n    exlogging.init(config)\n\n    bloging.debug(\"Hello exlogging!\")\n\n    # If you want to use named logger, you can call init function with config and name\n    exlogging.init(config, 'example')\n\n    # You can access named logger via getLogger function\n    example_logger = exlogging.getLogger('example')\n    example_logger.info('You named logger')\n\nexlogging or getLogger response object has `debug`, `info`, `warning`, `error`, `exception` and `critical` functions. If you pass  'warning` as `level` in config dict to init function, when you call `warning`, `error`, `critical` or `critical`, it will be logged, but when you call `info` or `debug` function, it is not logged.\n\nLogger is common in your application, so you can setup logger via exlogging at your application entry point, you can use the logger anywhere.\n\nHandlers\n========\n\nCommon settings\n---------------\n\nAll handlers have level and format.\n\nLevels\n++++++\n\n   * critical\n   * error\n   * warning\n   * info\n   * debug\n   * notset\n\nFormat\n++++++\n\nIf you don't pass log_format here, exlogging uses this format: %(levelname)s %(name)s - %(asctime)s - File: %(pathname)s - Line: %(lineno)d - Func: %(funcName)s Message: %(message)s\n\nSee https://docs.python.org/3.5/library/logging.html#logrecord-attributes\n\nFileHandler\n-----------\n\nWhen you call logger function, record the message in file at filename.\n\n.. code-block:: python\n\n    'file': {\n        'level': str, # requirement\n        'format': str, # optional\n        'filename': str # requirement\n    }\n\nRotatingFileHandler\n-------------------\n\nWhen you call logger function, record the message in file at filename.\n\n.. code-block:: python\n\n    'file': {\n        'level': str, # requirement\n        'format': str, # optional\n        'filename': str, # requirement\n        'max_bytes': int, # optional\n        'backup_count': int # optional\n    }\n\nEmailHandler\n------------\n\nWhen you call logger function, send an email with the message.\n\n.. code-block:: python\n\n    'email': {\n        'level': str, # requirement\n        'format': str, # optional\n        'smtp_host': str, # requirement\n        'smtp_port': int, # requirement\n        'email_from': str, # requirement\n        'email_to': str, # requirement\n        'email_subject': str, # requirement\n        'smtp_username': str, # requirement\n        'smtp_password': str # requirement\n    }\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/narusemotoki/exlogging", "keywords": "log logging logger", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "exlogging", "package_url": "https://pypi.org/project/exlogging/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/exlogging/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/narusemotoki/exlogging"}, "release_url": "https://pypi.org/project/exlogging/0.1.5/", "requires_dist": null, "requires_python": null, "summary": "Supports to setup python standard logging package.", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/narusemotoki/exlogging\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/narusemotoki/exlogging.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/272c7cedee044151d85fe8aef6a9751290e3d06d/68747470733a2f2f7472617669732d63692e6f72672f6e61727573656d6f746f6b692f65786c6f6767696e672e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"exlogging\">\n<h2>exlogging</h2>\n<p>Supports to setup python standard logging package.</p>\n<div id=\"how-to-use\">\n<h3>How to use</h3>\n<p>The way to use exlogging almost same with Python standard logging. First, you can call init function with config dict. After that, completely same with logging.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">exlogging</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'file'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'debug'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'filename'</span><span class=\"p\">:</span> <span class=\"s1\">'/path/to/logfile'</span>\n    <span class=\"p\">}</span>\n    <span class=\"c1\"># You can conbinate with other handlers.</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># If you call init function without second parameter(name), exlogging setup root logger.</span>\n<span class=\"n\">exlogging</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n<span class=\"n\">bloging</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s2\">\"Hello exlogging!\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If you want to use named logger, you can call init function with config and name</span>\n<span class=\"n\">exlogging</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"s1\">'example'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can access named logger via getLogger function</span>\n<span class=\"n\">example_logger</span> <span class=\"o\">=</span> <span class=\"n\">exlogging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">)</span>\n<span class=\"n\">example_logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'You named logger'</span><span class=\"p\">)</span>\n</pre>\n<p>exlogging or getLogger response object has <cite>debug</cite>, <cite>info</cite>, <cite>warning</cite>, <cite>error</cite>, <cite>exception</cite> and <cite>critical</cite> functions. If you pass  \u2018warning` as <cite>level</cite> in config dict to init function, when you call <cite>warning</cite>, <cite>error</cite>, <cite>critical</cite> or <cite>critical</cite>, it will be logged, but when you call <cite>info</cite> or <cite>debug</cite> function, it is not logged.</p>\n<p>Logger is common in your application, so you can setup logger via exlogging at your application entry point, you can use the logger anywhere.</p>\n</div>\n<div id=\"handlers\">\n<h3>Handlers</h3>\n<div id=\"common-settings\">\n<h4>Common settings</h4>\n<p>All handlers have level and format.</p>\n<div id=\"levels\">\n<h5>Levels</h5>\n<blockquote>\n<ul>\n<li>critical</li>\n<li>error</li>\n<li>warning</li>\n<li>info</li>\n<li>debug</li>\n<li>notset</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"format\">\n<h5>Format</h5>\n<p>If you don\u2019t pass log_format here, exlogging uses this format: %(levelname)s %(name)s - %(asctime)s - File: %(pathname)s - Line: %(lineno)d - Func: %(funcName)s Message: %(message)s</p>\n<p>See <a href=\"https://docs.python.org/3.5/library/logging.html#logrecord-attributes\" rel=\"nofollow\">https://docs.python.org/3.5/library/logging.html#logrecord-attributes</a></p>\n</div>\n</div>\n<div id=\"filehandler\">\n<h4>FileHandler</h4>\n<p>When you call logger function, record the message in file at filename.</p>\n<pre><span class=\"s1\">'file'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># requirement</span>\n    <span class=\"s1\">'format'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># optional</span>\n    <span class=\"s1\">'filename'</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"c1\"># requirement</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"rotatingfilehandler\">\n<h4>RotatingFileHandler</h4>\n<p>When you call logger function, record the message in file at filename.</p>\n<pre><span class=\"s1\">'file'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># requirement</span>\n    <span class=\"s1\">'format'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># optional</span>\n    <span class=\"s1\">'filename'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># requirement</span>\n    <span class=\"s1\">'max_bytes'</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"c1\"># optional</span>\n    <span class=\"s1\">'backup_count'</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"c1\"># optional</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"emailhandler\">\n<h4>EmailHandler</h4>\n<p>When you call logger function, send an email with the message.</p>\n<pre><span class=\"s1\">'email'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># requirement</span>\n    <span class=\"s1\">'format'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># optional</span>\n    <span class=\"s1\">'smtp_host'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># requirement</span>\n    <span class=\"s1\">'smtp_port'</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"c1\"># requirement</span>\n    <span class=\"s1\">'email_from'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># requirement</span>\n    <span class=\"s1\">'email_to'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># requirement</span>\n    <span class=\"s1\">'email_subject'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># requirement</span>\n    <span class=\"s1\">'smtp_username'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"c1\"># requirement</span>\n    <span class=\"s1\">'smtp_password'</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"c1\"># requirement</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1681697, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "833c144099022c79e4eae5c8c528fff6", "sha256": "5979a21f164d6c361ddd66df7ad2dc0374435d0748e211d4cf37485213d9b797"}, "downloads": -1, "filename": "exlogging-0.0.2.tar.gz", "has_sig": false, "md5_digest": "833c144099022c79e4eae5c8c528fff6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2227, "upload_time": "2015-07-09T10:32:42", "upload_time_iso_8601": "2015-07-09T10:32:42.666574Z", "url": "https://files.pythonhosted.org/packages/ce/a4/9edb5158c8e5d38381b15c8ebd0dde9847264d2444e6c7394569116a3ee4/exlogging-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "d6c9e1a40c1b38b1e28aa76811926663", "sha256": "6502a7696e2bad835d12b0cd08520efbfefef164e28a9d4a199eb7172d0db939"}, "downloads": -1, "filename": "exlogging-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d6c9e1a40c1b38b1e28aa76811926663", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2265, "upload_time": "2015-07-09T14:15:10", "upload_time_iso_8601": "2015-07-09T14:15:10.040505Z", "url": "https://files.pythonhosted.org/packages/54/3e/f4d2865ff8177d92c274b393293ccef80336973dc14e399c44c7b98a5021/exlogging-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "513c52cf885915a3abc41c4fa7c06405", "sha256": "9ebc32ef4aaa7c8ad297ea240fd1659937742b8fb70a975f0e4bd1427ee65367"}, "downloads": -1, "filename": "exlogging-0.1.1.tar.gz", "has_sig": false, "md5_digest": "513c52cf885915a3abc41c4fa7c06405", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2261, "upload_time": "2015-07-10T03:23:42", "upload_time_iso_8601": "2015-07-10T03:23:42.944857Z", "url": "https://files.pythonhosted.org/packages/ae/fe/52bcb66592a73cc23ad7fb4701557c2f173adae8db451b6f4373a9965918/exlogging-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a6bf1f2e1d9d0e420393f96806eeabfb", "sha256": "e7bf9eb60cc44644b987d3dac2f95fbefff7bed6a6d597363e4d4cf37f2c458d"}, "downloads": -1, "filename": "exlogging-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a6bf1f2e1d9d0e420393f96806eeabfb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2327, "upload_time": "2015-08-17T03:40:44", "upload_time_iso_8601": "2015-08-17T03:40:44.117779Z", "url": "https://files.pythonhosted.org/packages/43/b5/96d95fb73c37eaaea9ea6e16819ee1bf77304d9cc43e381246558aaa94e7/exlogging-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "bed5e3ba60b7b77b8c43951ff7df0db3", "sha256": "6b95be4b70058aa576bee54c9f80657ce82147bb08cb5e3b4d0de9b4fe490eca"}, "downloads": -1, "filename": "exlogging-0.1.3.tar.gz", "has_sig": false, "md5_digest": "bed5e3ba60b7b77b8c43951ff7df0db3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2312, "upload_time": "2015-08-17T03:51:17", "upload_time_iso_8601": "2015-08-17T03:51:17.787372Z", "url": "https://files.pythonhosted.org/packages/30/d4/a5a965c1f3f3c43658f2304b54c8cc51ac9108c855a578898740ee5781dd/exlogging-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "dd762ada77decba3d66b2b1e2820fded", "sha256": "4b6351b39507b5504ee8a7f56fe3bc231fd97e6a709e22fa224643db8ad9a674"}, "downloads": -1, "filename": "exlogging-0.1.4.tar.gz", "has_sig": false, "md5_digest": "dd762ada77decba3d66b2b1e2820fded", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2307, "upload_time": "2015-08-18T03:46:26", "upload_time_iso_8601": "2015-08-18T03:46:26.275918Z", "url": "https://files.pythonhosted.org/packages/83/ef/0769c97d69da94b4dfee00a696e104d6214ab2554ded79d91ab9a4f53bc7/exlogging-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "f916c6fa693a94cb027f305df3ee6ec7", "sha256": "acb24b7f1b8a69fb2d9c5989d05dd48f816294db1f08bb633475125cd0207f4c"}, "downloads": -1, "filename": "exlogging-0.1.5.tar.gz", "has_sig": false, "md5_digest": "f916c6fa693a94cb027f305df3ee6ec7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3637, "upload_time": "2015-08-18T03:53:47", "upload_time_iso_8601": "2015-08-18T03:53:47.275740Z", "url": "https://files.pythonhosted.org/packages/fc/24/db5cf29b065297adec2c4d764641131869e41bfd3316db85597004e40d9d/exlogging-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f916c6fa693a94cb027f305df3ee6ec7", "sha256": "acb24b7f1b8a69fb2d9c5989d05dd48f816294db1f08bb633475125cd0207f4c"}, "downloads": -1, "filename": "exlogging-0.1.5.tar.gz", "has_sig": false, "md5_digest": "f916c6fa693a94cb027f305df3ee6ec7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3637, "upload_time": "2015-08-18T03:53:47", "upload_time_iso_8601": "2015-08-18T03:53:47.275740Z", "url": "https://files.pythonhosted.org/packages/fc/24/db5cf29b065297adec2c4d764641131869e41bfd3316db85597004e40d9d/exlogging-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:46 2020"}