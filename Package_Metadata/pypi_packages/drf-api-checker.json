{"info": {"author": "Stefano Apostolico", "author_email": "s.apostolico@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "# DRF API Checker\n\n\n[![pypi-version]][pypi] \n[![travis-png-m]][travis-l-m] \n[![rtd-badge]][rtd-link]\n[![codecov-badge]][codecov]\n\n\nThis module offers some utilities to avoid unwanted changes in Django Rest Framework responses,\nso to keep stable contracts\n\nThe purpose is to guarantee that any code changes never introduce 'contract violations'\nchanging the Serialization behaviour.\n\n\nContract violations can happen when:\n\n- fields are removed from Serializer\n- field representation changes (ie. date/number format, )\n- Response status code changes (optional check)\n- Response headers change (optional check)\n\n\nHow it works:\n-------------\n\nFirst time the test run, the response and model instances are serialized and\nsaved on the disk; any further execution is checked against this first response.\n\nTest data are saved in the same directory where the test module lives,\nunder `_api_checker/<module_fqn>/<test_class>`\n\nFields that cannot be checked by value (ie timestamps/last modified) can be tested writing\ncustom `assert_<field_name>` methods.\n\nIn case of nested objects, method names must follow the field \"path\".\n(ie. `assert_permission_modified` vs `assert_modified`)\n\nThis module can also intercept when a field is added,\nin this case it is mandatory recreate stored test data; simply delete them from the disk\nor set `API_CHECKER_RESET` environment variable and run the test again,\n\n\nin case something goes wrong the output will be\n\n**Field values mismatch**\n\n    AssertionError: View `<class 'path.to.module.CustomerListAPIView'>` breaks the contract.\n    Field `name` does not match.\n    - expected: `Partner 0`\n    - received: `Partner 11`\n\n\n**Field removed**\n\n    AssertionError: View `<class 'path.to.module.CustomerListAPIView'>` breaks the contract.\n    Field `id` is missing in the new response\n\n\n**Field added**\n\n    AssertionError: View `<class 'path.to.module.CustomerListAPIView'>` returned more field than expected.\n    Action needed api_customers.response.json need rebuild.\n    New fields are:\n    `['country']`\n\n\nHow To use it:\n--------------\n\n**unittest**\n\n\nUsing ApiCheckerMixin::\n\n    class TestAPIAgreements(ApiCheckerMixin, TestCase):\n        def get_fixtures(self):\n            return {'customer': CustomerFactory()}\n\n        def test_customer_detail(self):\n            url = reverse(\"customer-detail\", args=[self.get_fixture('customer').pk])\n            self.assertGET(url)\n\n\nUsing ApiCheckerBase metaclass\n\n\n    class TestAPIIntervention(TestCase, metaclass=ApiCheckerBase):\n        URLS = [\n                reverse(\"intervention-list\"),\n                reverse(\"intervention-detail\", args=[101]),\n               ]\n\n        def get_fixtures(cls):\n            return {'intervention': InterventionFactory(id=101),\n               'result': ResultFactory(),\n               }\n\nApiCheckerBase can produce API test with minimum effort but it offers less flexibility\nthan ApiCheckerMixin.\n\n**pytest**\n\n\npytest integration is provided by two helpers `frozenfixture` and `contract`::\n\n\n    from django.urls import reverse\n    from drf_api_checker.pytest import contract, frozenfixture\n\n\n    @frozenfixture()\n    def frozen_detail(db):\n        from demo.factories import DetailFactory\n        return DetailFactory()\n\n    @contract()\n    def test_url(frozen_detail):\n        url = reverse(\"master-list\")\n        return url\n\n\nCustom checks:\n--------------\n\nSometimes it is not possible to check a field by value, but exists anyway a mechanism \nto check the contract (ie. `timestamp` field - _ignore for this example tools like [freezegun](https://github.com/spulec/freezegun)_)\n\nTo handle these situations you can write custom `Recorder` with custom `asserters`:\n\n\n    from drf_api_checker.recorder import Recorder\n\n    class TimestampRecorder(Recorder):\n    \n        def assert_last_modify_date(self, response: Response, stored: Response, path: str):\n            value = response['last_modify_date']\n            assert datetime.datetime.strptime(value, '%Y-%m-%dT%H:%M:%S.%fZ')\n\ncustom asserter is a method named `assert_<field_name>`, in case of nested serializers\nyou can have more specific asserter using `assert_<fk_field_name>_<field_name>`\n\n\nLinks\n-----\n\n|||\n|--------------------|------------------------------------------------------------|\n| Develop            | [![travis-png-d]][travis-l-d]|\n| Master             | [![travis-png-m]][travis-l-m]|\n| Project home page: | https://github.com/saxix/drf-api-checker                   |\n| Issue tracker:     | https://github.com/saxix/drf-api-checker/issues?sort       |\n| Download:          | http://pypi.python.org/pypi/drf-api-checker/               |\n| Documentation:     | https://drf-api-checker.readthedocs.org/en/develop/         |\n\n\n\n[travis-png-m]: https://secure.travis-ci.org/saxix/drf-api-checker.svg?branch=master\n[travis-l-m]: https://travis-ci.org/saxix/drf-api-checker?branch=master\n\n[travis-png-d]: https://secure.travis-ci.org/saxix/drf-api-checker.svg?branch=develop\n[travis-l-d]: https://travis-ci.org/saxix/drf-api-checker?branch=develop\n\n[rtd-badge]: https://readthedocs.org/projects/drf-api-checker/badge/?version=master&style=plastic\n[rtd-link]: https://drf-api-checker.readthedocs.org/en/master/\n\n[codecov-badge]: https://codecov.io/gh/saxix/drf-api-checker/branch/develop/graph/badge.svg\n[codecov]: https://codecov.io/gh/saxix/drf-api-checker\n\n[pypi-version]: https://img.shields.io/pypi/v/drf-api-checker.svg\n[pypi]: https://pypi.org/project/drf-api-checker/", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/saxix/drf-api-checker", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "drf-api-checker", "package_url": "https://pypi.org/project/drf-api-checker/", "platform": "linux", "project_url": "https://pypi.org/project/drf-api-checker/", "project_urls": {"Homepage": "https://github.com/saxix/drf-api-checker"}, "release_url": "https://pypi.org/project/drf-api-checker/0.8.2/", "requires_dist": null, "requires_python": "", "summary": "DjangoRestFramework API checker", "version": "0.8.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DRF API Checker</h1>\n<p><a href=\"https://pypi.org/project/drf-api-checker/\" rel=\"nofollow\"><img alt=\"pypi-version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7b7e7d2495c8da2a1adeb0b01e4f02050d608fc/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6472662d6170692d636865636b65722e737667\"></a>\n<a href=\"https://travis-ci.org/saxix/drf-api-checker?branch=master\" rel=\"nofollow\"><img alt=\"travis-png-m\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/944e477c19cf7d28a05be9092628f0eb348eb8ea/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f73617869782f6472662d6170692d636865636b65722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://drf-api-checker.readthedocs.org/en/master/\" rel=\"nofollow\"><img alt=\"rtd-badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/28f8484881dd35c684728b8d5c1843cc6aa0aeb1/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6472662d6170692d636865636b65722f62616467652f3f76657273696f6e3d6d6173746572267374796c653d706c6173746963\"></a>\n<a href=\"https://codecov.io/gh/saxix/drf-api-checker\" rel=\"nofollow\"><img alt=\"codecov-badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/baabf3fdac99ad56dd4db9cbf185e2da2dddda76/68747470733a2f2f636f6465636f762e696f2f67682f73617869782f6472662d6170692d636865636b65722f6272616e63682f646576656c6f702f67726170682f62616467652e737667\"></a></p>\n<p>This module offers some utilities to avoid unwanted changes in Django Rest Framework responses,\nso to keep stable contracts</p>\n<p>The purpose is to guarantee that any code changes never introduce 'contract violations'\nchanging the Serialization behaviour.</p>\n<p>Contract violations can happen when:</p>\n<ul>\n<li>fields are removed from Serializer</li>\n<li>field representation changes (ie. date/number format, )</li>\n<li>Response status code changes (optional check)</li>\n<li>Response headers change (optional check)</li>\n</ul>\n<h2>How it works:</h2>\n<p>First time the test run, the response and model instances are serialized and\nsaved on the disk; any further execution is checked against this first response.</p>\n<p>Test data are saved in the same directory where the test module lives,\nunder <code>_api_checker/&lt;module_fqn&gt;/&lt;test_class&gt;</code></p>\n<p>Fields that cannot be checked by value (ie timestamps/last modified) can be tested writing\ncustom <code>assert_&lt;field_name&gt;</code> methods.</p>\n<p>In case of nested objects, method names must follow the field \"path\".\n(ie. <code>assert_permission_modified</code> vs <code>assert_modified</code>)</p>\n<p>This module can also intercept when a field is added,\nin this case it is mandatory recreate stored test data; simply delete them from the disk\nor set <code>API_CHECKER_RESET</code> environment variable and run the test again,</p>\n<p>in case something goes wrong the output will be</p>\n<p><strong>Field values mismatch</strong></p>\n<pre><code>AssertionError: View `&lt;class 'path.to.module.CustomerListAPIView'&gt;` breaks the contract.\nField `name` does not match.\n- expected: `Partner 0`\n- received: `Partner 11`\n</code></pre>\n<p><strong>Field removed</strong></p>\n<pre><code>AssertionError: View `&lt;class 'path.to.module.CustomerListAPIView'&gt;` breaks the contract.\nField `id` is missing in the new response\n</code></pre>\n<p><strong>Field added</strong></p>\n<pre><code>AssertionError: View `&lt;class 'path.to.module.CustomerListAPIView'&gt;` returned more field than expected.\nAction needed api_customers.response.json need rebuild.\nNew fields are:\n`['country']`\n</code></pre>\n<h2>How To use it:</h2>\n<p><strong>unittest</strong></p>\n<p>Using ApiCheckerMixin::</p>\n<pre><code>class TestAPIAgreements(ApiCheckerMixin, TestCase):\n    def get_fixtures(self):\n        return {'customer': CustomerFactory()}\n\n    def test_customer_detail(self):\n        url = reverse(\"customer-detail\", args=[self.get_fixture('customer').pk])\n        self.assertGET(url)\n</code></pre>\n<p>Using ApiCheckerBase metaclass</p>\n<pre><code>class TestAPIIntervention(TestCase, metaclass=ApiCheckerBase):\n    URLS = [\n            reverse(\"intervention-list\"),\n            reverse(\"intervention-detail\", args=[101]),\n           ]\n\n    def get_fixtures(cls):\n        return {'intervention': InterventionFactory(id=101),\n           'result': ResultFactory(),\n           }\n</code></pre>\n<p>ApiCheckerBase can produce API test with minimum effort but it offers less flexibility\nthan ApiCheckerMixin.</p>\n<p><strong>pytest</strong></p>\n<p>pytest integration is provided by two helpers <code>frozenfixture</code> and <code>contract</code>::</p>\n<pre><code>from django.urls import reverse\nfrom drf_api_checker.pytest import contract, frozenfixture\n\n\n@frozenfixture()\ndef frozen_detail(db):\n    from demo.factories import DetailFactory\n    return DetailFactory()\n\n@contract()\ndef test_url(frozen_detail):\n    url = reverse(\"master-list\")\n    return url\n</code></pre>\n<h2>Custom checks:</h2>\n<p>Sometimes it is not possible to check a field by value, but exists anyway a mechanism\nto check the contract (ie. <code>timestamp</code> field - <em>ignore for this example tools like <a href=\"https://github.com/spulec/freezegun\" rel=\"nofollow\">freezegun</a></em>)</p>\n<p>To handle these situations you can write custom <code>Recorder</code> with custom <code>asserters</code>:</p>\n<pre><code>from drf_api_checker.recorder import Recorder\n\nclass TimestampRecorder(Recorder):\n\n    def assert_last_modify_date(self, response: Response, stored: Response, path: str):\n        value = response['last_modify_date']\n        assert datetime.datetime.strptime(value, '%Y-%m-%dT%H:%M:%S.%fZ')\n</code></pre>\n<p>custom asserter is a method named <code>assert_&lt;field_name&gt;</code>, in case of nested serializers\nyou can have more specific asserter using <code>assert_&lt;fk_field_name&gt;_&lt;field_name&gt;</code></p>\n<h2>Links</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Develop</td>\n<td><a href=\"https://travis-ci.org/saxix/drf-api-checker?branch=develop\" rel=\"nofollow\"><img alt=\"travis-png-d\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c52afe3053a3c840b21969fa813142affab89bf/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f73617869782f6472662d6170692d636865636b65722e7376673f6272616e63683d646576656c6f70\"></a></td>\n</tr>\n<tr>\n<td>Master</td>\n<td><a href=\"https://travis-ci.org/saxix/drf-api-checker?branch=master\" rel=\"nofollow\"><img alt=\"travis-png-m\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/944e477c19cf7d28a05be9092628f0eb348eb8ea/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f73617869782f6472662d6170692d636865636b65722e7376673f6272616e63683d6d6173746572\"></a></td>\n</tr>\n<tr>\n<td>Project home page:</td>\n<td><a href=\"https://github.com/saxix/drf-api-checker\" rel=\"nofollow\">https://github.com/saxix/drf-api-checker</a></td>\n</tr>\n<tr>\n<td>Issue tracker:</td>\n<td><a href=\"https://github.com/saxix/drf-api-checker/issues?sort\" rel=\"nofollow\">https://github.com/saxix/drf-api-checker/issues?sort</a></td>\n</tr>\n<tr>\n<td>Download:</td>\n<td><a href=\"http://pypi.python.org/pypi/drf-api-checker/\" rel=\"nofollow\">http://pypi.python.org/pypi/drf-api-checker/</a></td>\n</tr>\n<tr>\n<td>Documentation:</td>\n<td><a href=\"https://drf-api-checker.readthedocs.org/en/develop/\" rel=\"nofollow\">https://drf-api-checker.readthedocs.org/en/develop/</a></td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 6281264, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6090eb6873e904b7b9ff9a5202b45b04", "sha256": "df6d03805a2a2d2021f4c90f7fa8aa07dc068a8f4deecd42e4f29fe540d9535d"}, "downloads": -1, "filename": "drf-api-checker-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6090eb6873e904b7b9ff9a5202b45b04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17327, "upload_time": "2018-06-03T06:20:28", "upload_time_iso_8601": "2018-06-03T06:20:28.271425Z", "url": "https://files.pythonhosted.org/packages/04/d0/32d49dbecc9afee9bafd8743b7a23cf0054cd908767774aac48af27edea5/drf-api-checker-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8bfdf9ea38f4069d5166481d08c56032", "sha256": "c44ce1b01bc6d6fae110715ee5633b9e113563c92f52c866ee011609b4e3b763"}, "downloads": -1, "filename": "drf-api-checker-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8bfdf9ea38f4069d5166481d08c56032", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20417, "upload_time": "2018-06-03T16:51:02", "upload_time_iso_8601": "2018-06-03T16:51:02.410779Z", "url": "https://files.pythonhosted.org/packages/82/dd/99f4900622b51b979c6d1fe15dfd4ffae3d1d6263f497dd31c702f568c1f/drf-api-checker-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "3fee302374995d5c4de3090996565b21", "sha256": "56ffa0e579da8134130d3a1a27850d176b777b949816d90eea73917992115fb1"}, "downloads": -1, "filename": "drf-api-checker-0.3.0.tar.gz", "has_sig": false, "md5_digest": "3fee302374995d5c4de3090996565b21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12362, "upload_time": "2018-06-22T09:42:02", "upload_time_iso_8601": "2018-06-22T09:42:02.972102Z", "url": "https://files.pythonhosted.org/packages/66/39/2ec31709fe5593718aeec90ff785f45417df2e46977cb8885a7e8e6677c8/drf-api-checker-0.3.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "5c9d5804acc8cb6e0e68d7828a17b950", "sha256": "db4045afe4585120ab298464c37887d8567a0ecadbe8eaa6a0e348c364d745bb"}, "downloads": -1, "filename": "drf-api-checker-0.4.1.tar.gz", "has_sig": false, "md5_digest": "5c9d5804acc8cb6e0e68d7828a17b950", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13343, "upload_time": "2018-09-20T09:27:49", "upload_time_iso_8601": "2018-09-20T09:27:49.158525Z", "url": "https://files.pythonhosted.org/packages/12/dd/a93e1a320131eaab94fd9addb56138f7189a0575a8fd57c4b6ecea7b5a46/drf-api-checker-0.4.1.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "5a32649420323327f00d1ca7280573ea", "sha256": "c2620623511db916022509061d6f02ac1e95f52c88aeb81e67208ff541f88878"}, "downloads": -1, "filename": "drf-api-checker-0.5.1.tar.gz", "has_sig": false, "md5_digest": "5a32649420323327f00d1ca7280573ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13479, "upload_time": "2019-08-16T08:07:33", "upload_time_iso_8601": "2019-08-16T08:07:33.528553Z", "url": "https://files.pythonhosted.org/packages/9f/40/96618e8710280efd18b6f2daf3e18bea7b56eaec8bb7bfe9cdbbf2cb7ac6/drf-api-checker-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "b9411523cd96247c71d3e5cea0ae3799", "sha256": "77dfdf68b456b495f76ccd597d423a8187854f213848d42e66e0cb3d4912a926"}, "downloads": -1, "filename": "drf-api-checker-0.6.0.tar.gz", "has_sig": false, "md5_digest": "b9411523cd96247c71d3e5cea0ae3799", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13562, "upload_time": "2019-08-16T11:42:30", "upload_time_iso_8601": "2019-08-16T11:42:30.266963Z", "url": "https://files.pythonhosted.org/packages/f0/a3/aedab305a3d1c6d6e6397cc27ed12cba9d684a8c8fe70a1a764de33164f5/drf-api-checker-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "bdf0bdb04769f4038eb80efda9f2f3a3", "sha256": "606861d85a3f0bfda7b3789a6bc4ed1c92724662d2e0756b5a2bb9841a21d4df"}, "downloads": -1, "filename": "drf-api-checker-0.7.0.tar.gz", "has_sig": false, "md5_digest": "bdf0bdb04769f4038eb80efda9f2f3a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14481, "upload_time": "2019-08-21T13:14:37", "upload_time_iso_8601": "2019-08-21T13:14:37.029789Z", "url": "https://files.pythonhosted.org/packages/76/7d/84d7e9a40e8872aa3f7ec509970aa43e804cbd016523a1b6371f00709503/drf-api-checker-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "fc2b62e15bc2f7e2faea1fe130ada1ee", "sha256": "8573b2510e71803900acf11dc259a5ea51e9d773455fd851538a661c2bf9eceb"}, "downloads": -1, "filename": "drf-api-checker-0.8.0.tar.gz", "has_sig": false, "md5_digest": "fc2b62e15bc2f7e2faea1fe130ada1ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15399, "upload_time": "2019-09-16T19:09:26", "upload_time_iso_8601": "2019-09-16T19:09:26.866780Z", "url": "https://files.pythonhosted.org/packages/c5/ce/f8bb3211b356d2b9505c4b42c7bdbff2e483c5fc1e51fc034fe3a5ecbb89/drf-api-checker-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "84c129396528b74a897e5ee228e1001a", "sha256": "9d0e48966b7a04abd1377b9843e0e3cdd995814c585da2019355c43304d3f4d5"}, "downloads": -1, "filename": "drf-api-checker-0.8.1.tar.gz", "has_sig": false, "md5_digest": "84c129396528b74a897e5ee228e1001a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16360, "upload_time": "2019-12-06T14:27:06", "upload_time_iso_8601": "2019-12-06T14:27:06.718187Z", "url": "https://files.pythonhosted.org/packages/61/4d/39bf2311dfe3d2ee27c452b79c789f47906d6ce7fbceced3f6de3e3b0ddd/drf-api-checker-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "26f22c1bfeef86e3d53d75f59c312cf8", "sha256": "fdb439c3c1a3d1fa9059526924892c12f5371952891eb0a233af52e63018f02a"}, "downloads": -1, "filename": "drf-api-checker-0.8.2.tar.gz", "has_sig": false, "md5_digest": "26f22c1bfeef86e3d53d75f59c312cf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16325, "upload_time": "2019-12-11T22:12:59", "upload_time_iso_8601": "2019-12-11T22:12:59.155783Z", "url": "https://files.pythonhosted.org/packages/d1/81/76da70861b529fed5f222a46a233eb6c91c29d5b7fc78206d1836af04659/drf-api-checker-0.8.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "26f22c1bfeef86e3d53d75f59c312cf8", "sha256": "fdb439c3c1a3d1fa9059526924892c12f5371952891eb0a233af52e63018f02a"}, "downloads": -1, "filename": "drf-api-checker-0.8.2.tar.gz", "has_sig": false, "md5_digest": "26f22c1bfeef86e3d53d75f59c312cf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16325, "upload_time": "2019-12-11T22:12:59", "upload_time_iso_8601": "2019-12-11T22:12:59.155783Z", "url": "https://files.pythonhosted.org/packages/d1/81/76da70861b529fed5f222a46a233eb6c91c29d5b7fc78206d1836af04659/drf-api-checker-0.8.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:47 2020"}