{"info": {"author": "Augustin Borsu", "author_email": "dev@sagacify.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Topic :: Text Processing"], "description": "\u041a\u043e\u043c\u0438\u0442\u0435\u0442 Git'a \u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438\n==========================\n\n|CircleCI branch| |Docker Stars|\n\n\u041a\u043e\u043c\u0438\u0442\u0435\u0442 Git'a \u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 (\u041aGit\u0411) or Git security committee, is a\ncommit message style enforcer. It comes in two parts, a web hook for\ngithub (lubyanka) and a local git commit-msg hook (resident). In an\nideal world, a local hook should be enough, in practice, mistakes\nhappen. The KGitB is here to ensure no mistakes are ever allowed through\nto infect your master branch.\n\nexamples\n--------\n\n-  `failing <https://github.com/Sagacify/komitet-gita-bezopasnosti/pull/4>`__\n-  `passing <https://github.com/Sagacify/komitet-gita-bezopasnosti/pull/6>`__\n\nresident\n========\n\nResident can be installed using pip using the following command. If you\nhave a permission errors try using the --user flag with pip and add\n~/.local/bin to your path. It should not require any dependencies.\n\n::\n\n    pip install kgitb\n\nTo install in a local repository, go into it and run:\n\n::\n\n    resident install --local\n\nTo set it up in another repository or multiple repository, you can path\nit a path to the repositor(y/ies) that you want to install it to:\n\n::\n\n    resident install --path PATH_TO_REPO1 PATH_TO_REPO2\n\nTo set it up globally.\n\nWARNING 0: Only works with git 2.9.0+\n\nWARNING1: If it hasn't been set yet, this option will set the\ncore.hooksPath value in your ``.gitconfig`` to\n``$HOME/.config/git-global-hooks``. This will disable all local hooks in\nyour repositories. If this is not what you want, you might want to have\na look at hook templates.\n\nWARNING2: global means for the user, system setup hasn't been\nimplemented (yet, PR anyone?).\n\n::\n\n    resident install --global\n\nIf the webhook is correctly set up, you should see a\n``APPROVED BY THE KGitB.`` line when you commit something, or if there\nare errors, the commit will fail with a description of the errors.\n\nCurrently there are no options to select. They will be added at a later\npoint.\n\nlubyanka\n========\n\nLubyanka is the headquarters of all residents. It should be run on a\nserver and setup with github to check all pull-requests. As excpected,\nif there are any violations, lubyanka will submit a helpful if somewhat\nauthoritative comment message and set the status to error. If there are\nno violations it will set the status to success and congragulate you on\na job well done.\n\nTo run lubyanka, get a copy of the code, install the requirements and\nexecute it with the following commands:\n\n::\n\n    git clone https://github.com/Sagacify/komitet-gita-bezopasnosti.git\n    cd komitet-gita-bezopasnosti\n    pip install -r requirements.txt\n    GH_TOKEN=`YOUR GITHUB TOKEN HERE` python -m kgitb\n\nIf you use docker remember to set the GH\\_TOKEN environment variable and\nlink to port 5000.\n\nThe github token is needed to write comments, set the pr status as well\nas access any private repo.\n\ndoc\n===\n\n\u041aGit\u0411 conventions are closely related to the `angularJS commit\nconventions <https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit>`__\nslightly revised as follow.\n\nCommit Message Format\n---------------------\n\nEach commit message consists of a **header**, and optionaly a **body**\nand a **footer**. The header has a special format that includes a\n**type**, a **scope** and a **subject**:\n\n::\n\n    <type>(<scope>): <subject>\n    <BLANK LINE>\n    <body>\n    <BLANK LINE>\n    <footer>\n\nThe **header** is mandatory.\n\nAny line of the commit message cannot be longer **72** characters! This\nallows the message to be easier to read on GitHub as well as in various\ngit tools.\n\nType\n~~~~\n\n-  **feat**: A new feature\n-  **fix**: A bug fix\n-  **chore**: Project boring stuff (like bumping a dependency version).\n-  **doc**: Documentation only changes\n-  **style**: Changes that do not affect the meaning of the code\n   (white-space, formatting, missing semi-colons, etc)\n-  **refactor**: A code change that neither fixes a bug nor adds a\n   feature\n-  **perf**: A code change that improves performance\n-  **test**: Adding missing tests\n-  **revert**: Reverting a previous commit.\n-  **version**: To cover any version update.\n\nScope\n~~~~~\n\nThe scope could be anything specifying place of the commit change. For\nexample ``$location``, ``$browser``, ``$compile``, ``$rootScope``,\n``ngHref``, ``ngClick``, ``ngView``, etc...\n\nSubject\n~~~~~~~\n\nThe subject contains succinct description of the change:\n\n-  use the imperative, present tense: \"change\" not \"changed\" nor\n   \"changes\"\n-  don't capitalize first letter\n\nBody\n~~~~\n\nJust as in the **subject**, use the imperative, present tense: \"change\"\nnot \"changed\" nor \"changes\". The body should include the motivation for\nthe change and contrast this with previous behavior.\n\nFooter\n~~~~~~\n\nThe footer should contain any information about **Breaking Changes** and\nis also the place to reference GitHub issues that this commit\n**Closes**.\n\n**Breaking Changes** should start with the word ``BREAKING CHANGE:``\nwith a space or two newlines. The rest of the commit message is then\nused for this.\n\nContribute\n==========\n\nAll contributions are of course welcome, please submit them as\npull-requests and make sure that you are not in violation of the kgitb\nrules. If you need ideas: \\* Add rules list and documentation \\*\nresident, add --template, --template--system and --system install \\*\nresident, add lubyanka command line options for customizing rules \\*\nlubyanka, add origin of connection check\n`cfr <https://github.com/carlos-jenkins/python-github-webhooks/blob/master/webhooks.py#L56>`__\n\\* lubyanka, add setup script \\* packaging, figure out how\nextra\\_requires works.\n\nto test your changes please use tox and py.test, you should be able to\ninstall them by running:\n\n::\n\n    pip install -r dev-requirements.txt\n\nand run the tests using:\n\n::\n\n    tox\n\nPublish\n=======\n\n-  generate README.rst\n\n   ::\n\n       pandoc --from=markdown --to=rst --output=README.rst README.md\n\n-  publish\n\n   ::\n\n       python setup.py sdist upload\n\n.. |CircleCI branch| image:: https://img.shields.io/circleci/project/Sagacify/komitet-gita-bezopasnosti/master.svg?maxAge=2592000\n   :target: https://circleci.com/gh/Sagacify/komitet-gita-bezopasnosti/tree/master\n.. |Docker Stars| image:: https://img.shields.io/docker/stars/sagacify/kgb.svg?maxAge=2592000\n   :target: https://hub.docker.com/r/sagacify/kgb/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Sagacify/komitet-gita-bezopasnosti", "keywords": "git lint russian_history", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "kgitb", "package_url": "https://pypi.org/project/kgitb/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/kgitb/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Sagacify/komitet-gita-bezopasnosti"}, "release_url": "https://pypi.org/project/kgitb/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "A commit message linter", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"git-a\">\n<h2>\u041a\u043e\u043c\u0438\u0442\u0435\u0442 Git\u2019a \u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438</h2>\n<p><a href=\"https://circleci.com/gh/Sagacify/komitet-gita-bezopasnosti/tree/master\" rel=\"nofollow\"><img alt=\"CircleCI branch\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4209b2f465fb8b79d5d4b8e3de266746a64a8787/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f53616761636966792f6b6f6d697465742d676974612d62657a6f7061736e6f7374692f6d61737465722e7376673f6d61784167653d32353932303030\"></a> <a href=\"https://hub.docker.com/r/sagacify/kgb/\" rel=\"nofollow\"><img alt=\"Docker Stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8d444c6bdae1c6fa7e6eb2df104775449568b963/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f73746172732f73616761636966792f6b67622e7376673f6d61784167653d32353932303030\"></a></p>\n<p>\u041a\u043e\u043c\u0438\u0442\u0435\u0442 Git\u2019a \u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 (\u041aGit\u0411) or Git security committee, is a\ncommit message style enforcer. It comes in two parts, a web hook for\ngithub (lubyanka) and a local git commit-msg hook (resident). In an\nideal world, a local hook should be enough, in practice, mistakes\nhappen. The KGitB is here to ensure no mistakes are ever allowed through\nto infect your master branch.</p>\n<div id=\"examples\">\n<h3>examples</h3>\n<ul>\n<li><a href=\"https://github.com/Sagacify/komitet-gita-bezopasnosti/pull/4\" rel=\"nofollow\">failing</a></li>\n<li><a href=\"https://github.com/Sagacify/komitet-gita-bezopasnosti/pull/6\" rel=\"nofollow\">passing</a></li>\n</ul>\n</div>\n</div>\n<div id=\"resident\">\n<h2>resident</h2>\n<p>Resident can be installed using pip using the following command. If you\nhave a permission errors try using the \u2013user flag with pip and add\n~/.local/bin to your path. It should not require any dependencies.</p>\n<pre>pip install kgitb\n</pre>\n<p>To install in a local repository, go into it and run:</p>\n<pre>resident install --local\n</pre>\n<p>To set it up in another repository or multiple repository, you can path\nit a path to the repositor(y/ies) that you want to install it to:</p>\n<pre>resident install --path PATH_TO_REPO1 PATH_TO_REPO2\n</pre>\n<p>To set it up globally.</p>\n<p>WARNING 0: Only works with git 2.9.0+</p>\n<p>WARNING1: If it hasn\u2019t been set yet, this option will set the\ncore.hooksPath value in your <tt>.gitconfig</tt> to\n<tt><span class=\"pre\">$HOME/.config/git-global-hooks</span></tt>. This will disable all local hooks in\nyour repositories. If this is not what you want, you might want to have\na look at hook templates.</p>\n<p>WARNING2: global means for the user, system setup hasn\u2019t been\nimplemented (yet, PR anyone?).</p>\n<pre>resident install --global\n</pre>\n<p>If the webhook is correctly set up, you should see a\n<tt>APPROVED BY THE KGitB.</tt> line when you commit something, or if there\nare errors, the commit will fail with a description of the errors.</p>\n<p>Currently there are no options to select. They will be added at a later\npoint.</p>\n</div>\n<div id=\"lubyanka\">\n<h2>lubyanka</h2>\n<p>Lubyanka is the headquarters of all residents. It should be run on a\nserver and setup with github to check all pull-requests. As excpected,\nif there are any violations, lubyanka will submit a helpful if somewhat\nauthoritative comment message and set the status to error. If there are\nno violations it will set the status to success and congragulate you on\na job well done.</p>\n<p>To run lubyanka, get a copy of the code, install the requirements and\nexecute it with the following commands:</p>\n<pre>git clone https://github.com/Sagacify/komitet-gita-bezopasnosti.git\ncd komitet-gita-bezopasnosti\npip install -r requirements.txt\nGH_TOKEN=`YOUR GITHUB TOKEN HERE` python -m kgitb\n</pre>\n<p>If you use docker remember to set the GH_TOKEN environment variable and\nlink to port 5000.</p>\n<p>The github token is needed to write comments, set the pr status as well\nas access any private repo.</p>\n</div>\n<div id=\"doc\">\n<h2>doc</h2>\n<p>\u041aGit\u0411 conventions are closely related to the <a href=\"https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit\" rel=\"nofollow\">angularJS commit\nconventions</a>\nslightly revised as follow.</p>\n<div id=\"commit-message-format\">\n<h3>Commit Message Format</h3>\n<p>Each commit message consists of a <strong>header</strong>, and optionaly a <strong>body</strong>\nand a <strong>footer</strong>. The header has a special format that includes a\n<strong>type</strong>, a <strong>scope</strong> and a <strong>subject</strong>:</p>\n<pre>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;\n&lt;BLANK LINE&gt;\n&lt;body&gt;\n&lt;BLANK LINE&gt;\n&lt;footer&gt;\n</pre>\n<p>The <strong>header</strong> is mandatory.</p>\n<p>Any line of the commit message cannot be longer <strong>72</strong> characters! This\nallows the message to be easier to read on GitHub as well as in various\ngit tools.</p>\n<div id=\"type\">\n<h4>Type</h4>\n<ul>\n<li><strong>feat</strong>: A new feature</li>\n<li><strong>fix</strong>: A bug fix</li>\n<li><strong>chore</strong>: Project boring stuff (like bumping a dependency version).</li>\n<li><strong>doc</strong>: Documentation only changes</li>\n<li><strong>style</strong>: Changes that do not affect the meaning of the code\n(white-space, formatting, missing semi-colons, etc)</li>\n<li><strong>refactor</strong>: A code change that neither fixes a bug nor adds a\nfeature</li>\n<li><strong>perf</strong>: A code change that improves performance</li>\n<li><strong>test</strong>: Adding missing tests</li>\n<li><strong>revert</strong>: Reverting a previous commit.</li>\n<li><strong>version</strong>: To cover any version update.</li>\n</ul>\n</div>\n<div id=\"scope\">\n<h4>Scope</h4>\n<p>The scope could be anything specifying place of the commit change. For\nexample <tt>$location</tt>, <tt>$browser</tt>, <tt>$compile</tt>, <tt>$rootScope</tt>,\n<tt>ngHref</tt>, <tt>ngClick</tt>, <tt>ngView</tt>, etc\u2026</p>\n</div>\n<div id=\"subject\">\n<h4>Subject</h4>\n<p>The subject contains succinct description of the change:</p>\n<ul>\n<li>use the imperative, present tense: \u201cchange\u201d not \u201cchanged\u201d nor\n\u201cchanges\u201d</li>\n<li>don\u2019t capitalize first letter</li>\n</ul>\n</div>\n<div id=\"body\">\n<h4>Body</h4>\n<p>Just as in the <strong>subject</strong>, use the imperative, present tense: \u201cchange\u201d\nnot \u201cchanged\u201d nor \u201cchanges\u201d. The body should include the motivation for\nthe change and contrast this with previous behavior.</p>\n</div>\n<div id=\"footer\">\n<h4>Footer</h4>\n<p>The footer should contain any information about <strong>Breaking Changes</strong> and\nis also the place to reference GitHub issues that this commit\n<strong>Closes</strong>.</p>\n<p><strong>Breaking Changes</strong> should start with the word <tt>BREAKING CHANGE:</tt>\nwith a space or two newlines. The rest of the commit message is then\nused for this.</p>\n</div>\n</div>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>All contributions are of course welcome, please submit them as\npull-requests and make sure that you are not in violation of the kgitb\nrules. If you need ideas: * Add rules list and documentation *\nresident, add \u2013template, \u2013template\u2013system and \u2013system install *\nresident, add lubyanka command line options for customizing rules *\nlubyanka, add origin of connection check\n<a href=\"https://github.com/carlos-jenkins/python-github-webhooks/blob/master/webhooks.py#L56\" rel=\"nofollow\">cfr</a>\n* lubyanka, add setup script * packaging, figure out how\nextra_requires works.</p>\n<p>to test your changes please use tox and py.test, you should be able to\ninstall them by running:</p>\n<pre>pip install -r dev-requirements.txt\n</pre>\n<p>and run the tests using:</p>\n<pre>tox\n</pre>\n</div>\n<div id=\"publish\">\n<h2>Publish</h2>\n<ul>\n<li><p>generate README.rst</p>\n<pre>pandoc --from=markdown --to=rst --output=README.rst README.md\n</pre>\n</li>\n<li><p>publish</p>\n<pre>python setup.py sdist upload\n</pre>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2923148, "releases": {"0.0.8": [{"comment_text": "", "digests": {"md5": "47e4e66804733f25c119edd2c4967a11", "sha256": "d0c17cc16b18ba29bcd036cb141bd62e2c5635cc9baccc469f4c3e732fb3764a"}, "downloads": -1, "filename": "kgitb-0.0.8.tar.gz", "has_sig": false, "md5_digest": "47e4e66804733f25c119edd2c4967a11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20659, "upload_time": "2016-09-13T07:57:15", "upload_time_iso_8601": "2016-09-13T07:57:15.111213Z", "url": "https://files.pythonhosted.org/packages/5d/89/0d14e1e2f323d93ede7de5a6dae0c8b64c1612f1b6259510d4c24e23aa58/kgitb-0.0.8.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "4ff64ae4b363a46cfd670448279ab43b", "sha256": "a97cb3b5d6fb92394f467ae1291f8bb04dcd5db37b7b825ec43a47db52382523"}, "downloads": -1, "filename": "kgitb-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4ff64ae4b363a46cfd670448279ab43b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21326, "upload_time": "2016-09-14T21:07:46", "upload_time_iso_8601": "2016-09-14T21:07:46.829528Z", "url": "https://files.pythonhosted.org/packages/f1/d7/8442bd9f1b98629875910eb3cfa55c03f93dfe60154d18216a712d4b5451/kgitb-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9a29b3f1fb4187a383436f8441a9adc1", "sha256": "53a744c39001481f9747c53e146aa9c9b09123a77a418341b9eb77a79f6170af"}, "downloads": -1, "filename": "kgitb-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9a29b3f1fb4187a383436f8441a9adc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22104, "upload_time": "2016-09-15T10:16:34", "upload_time_iso_8601": "2016-09-15T10:16:34.716918Z", "url": "https://files.pythonhosted.org/packages/75/15/34f794e0f87a6c9a1c1e464b85937c552e7ab7d1348399e1f26bf20d83d1/kgitb-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a067979ea9febc57eba8e5f274b9c894", "sha256": "517d4695bf0a333927aa0a4f1aa3b7045f62b81e849a006124af7f13e3b44916"}, "downloads": -1, "filename": "kgitb-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a067979ea9febc57eba8e5f274b9c894", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22098, "upload_time": "2016-09-15T13:21:28", "upload_time_iso_8601": "2016-09-15T13:21:28.324784Z", "url": "https://files.pythonhosted.org/packages/26/a6/e6a18d564c0aad4efd1c51db1d95f6161144073efa60b666e983bc138343/kgitb-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "0b69ea62a8366df4954402f11072b219", "sha256": "73d0e1546487031560642de25fc669f7e95fbd8085fc5c82a23b6596011c68fa"}, "downloads": -1, "filename": "kgitb-0.1.3.tar.gz", "has_sig": false, "md5_digest": "0b69ea62a8366df4954402f11072b219", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22067, "upload_time": "2016-09-15T14:37:48", "upload_time_iso_8601": "2016-09-15T14:37:48.647693Z", "url": "https://files.pythonhosted.org/packages/d0/52/579744f1ca2c7372412b685b67d0108635d59d0268ce692f1eed2bd0b575/kgitb-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "54402a339b59d45047e04bc09895048c", "sha256": "c7016a0059770772b6fa5bd46cc01ad5efba069f36e9f9c7a8fda53272f49de5"}, "downloads": -1, "filename": "kgitb-0.1.4.tar.gz", "has_sig": false, "md5_digest": "54402a339b59d45047e04bc09895048c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23358, "upload_time": "2016-10-13T13:11:00", "upload_time_iso_8601": "2016-10-13T13:11:00.327343Z", "url": "https://files.pythonhosted.org/packages/08/de/5ea0ce68a7d5814d6d344a5fab5823aa3d7e34e106c9c1622fe537fa9a3c/kgitb-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "54402a339b59d45047e04bc09895048c", "sha256": "c7016a0059770772b6fa5bd46cc01ad5efba069f36e9f9c7a8fda53272f49de5"}, "downloads": -1, "filename": "kgitb-0.1.4.tar.gz", "has_sig": false, "md5_digest": "54402a339b59d45047e04bc09895048c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23358, "upload_time": "2016-10-13T13:11:00", "upload_time_iso_8601": "2016-10-13T13:11:00.327343Z", "url": "https://files.pythonhosted.org/packages/08/de/5ea0ce68a7d5814d6d344a5fab5823aa3d7e34e106c9c1622fe537fa9a3c/kgitb-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:52 2020"}