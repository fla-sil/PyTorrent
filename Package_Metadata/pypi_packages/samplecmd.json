{"info": {"author": "Morteza Nourelahi Alamdari", "author_email": "me@mortezana.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: Information Technology", "Intended Audience :: Other Audience", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Terminals"], "description": "samplecmd\n=========\nSampleCMD is a CLI application which prepares sample commands for users based on search words.\n\n\nInstall\n=======\n\n.. code-block:: shell\n\n    $ pip install samplecmd\n\n..\n\n    **NOTE:** this project developed for `python3`.\n\n\nExample\n=======\n\n.. code-block:: shell\n\n    $ samplecmd grep -l 2\n\n\nResult:\n\n>>> 1: Show files containing \"foo\" and \"bar\" and \"baz\"\n       grep -l 'baz' $(grep -l 'bar' $(grep -lr 'foo' *) )\n>>> 2: Search git logs (case-insensitive)\n       git log -i --grep='needle'\n\n\nArguments\n=========\n\nCommand input structure: `samplecmd <COMMAND NAME> [EXTRA OPTIONS]`\n\n+--------------------------+----------+--------+\n| Description              | Argument | Value  |\n+==========================+==========+========+\n| Show command description | -d       |        |\n+--------------------------+----------+--------+\n| Show command source link | -s       |        |\n+--------------------------+----------+--------+\n| Limit results            | -l       | number |\n+--------------------------+----------+--------+\n\nAdd Extra Sites\n===============\nTo add extra sites, just do these steps:\n\n.. code-block:: shell\n\n    $ mkdir ~/.samplecmd/sites/ -p\n\n\nThen create your site file with `.ini` extension and fill required variables.\n\nThis is configuration file of `BashOneLiners` site (HTML):\n\n.. code-block:: ini\n\n    [GENERAL]\n    # Enable to be search\n    enable = yes\n\n    [SITE INFO]\n    # General site info\n    site_name = BashOneLiners\n    site_url = http://www.bashoneliners.com/\n    site_search_url = http://www.bashoneliners.com/oneliners/search/?query={}\n\n    [CONTENT INFO]\n    # Site content type (html or json)\n    site_content_type = html\n    # How to get content of request (get or post)\n    site_content_action = get\n\n    [CONTENT PATTERN]\n    # These variables should be \"xpath\" or \"json key\" based on the site returned content\n    parent = //div[contains(@class, 'oneliner oneliner-')]\n    title = h3[@class='summary']/a\n    command = pre[@class='line']/span[@class='oneliner-line']\n    description = div[@class='explanation']//p\n\n\nThis is configuration file of of `CommandLineFu` site (JSON):\n\n.. code-block:: ini\n\n    [GENERAL]\n    # Enable to be search\n    enable = yes\n\n    [SITE INFO]\n    # General site info\n    site_name = CommandLineFu\n    site_url = http://www.commandlinefu.com/\n    site_search_url = http://www.commandlinefu.com/commands/matching/{0}/base64({0})/json\n\n    [CONTENT INFO]\n    # Site content type (html or json)\n    site_content_type = json\n    # How to get content of request (get or post)\n    site_content_action = get\n\n    [CONTENT PATTERN]\n    # These variables should be \"xpath\" or \"json key\" based on the site returned content\n    # parent tag could contain \"/\" like: parent/sub_parent\n    parent =\n    title = summary\n    command = command\n    description =\n\n\n..\n\n    **NOTE:** if your sites returns HTML, then fill `CONTENT PATTERN` section with xpath format, otherwise if it returns JSON, then fill this section with JSON key names.\n\nIf you want to call extra function in your url, just put your function name in it like `commandlinefu` configuration file \nand implement your function as a `staticmethod` in `Utils` class.\n\nContribute\n==========\nIf you know a website or a service which provide sample commands, kindly keep me in touch, I will update \nthe source links, or you could create your source link configuation file and send me a pull request.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mortezaipo/samplecmd/", "keywords": "samplecmd", "license": "GPLv3.0", "maintainer": "", "maintainer_email": "", "name": "samplecmd", "package_url": "https://pypi.org/project/samplecmd/", "platform": "", "project_url": "https://pypi.org/project/samplecmd/", "project_urls": {"Homepage": "https://github.com/mortezaipo/samplecmd/"}, "release_url": "https://pypi.org/project/samplecmd/1.1.7/", "requires_dist": null, "requires_python": "", "summary": "SampleCMD is a CLI application which prepares sample commands for users based on search words.", "version": "1.1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"samplecmd\">\n<h2>samplecmd</h2>\n<p>SampleCMD is a CLI application which prepares sample commands for users based on search words.</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>$ pip install samplecmd\n</pre>\n<blockquote>\n<strong>NOTE:</strong> this project developed for <cite>python3</cite>.</blockquote>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre>$ samplecmd grep -l <span class=\"m\">2</span>\n</pre>\n<p>Result:</p>\n<pre>&gt;&gt;&gt; 1: Show files containing \"foo\" and \"bar\" and \"baz\"\n       grep -l 'baz' $(grep -l 'bar' $(grep -lr 'foo' *) )\n&gt;&gt;&gt; 2: Search git logs (case-insensitive)\n       git log -i --grep='needle'\n</pre>\n</div>\n<div id=\"arguments\">\n<h2>Arguments</h2>\n<p>Command input structure: <cite>samplecmd &lt;COMMAND NAME&gt; [EXTRA OPTIONS]</cite></p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Description</th>\n<th>Argument</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Show command description</td>\n<td>-d</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>Show command source link</td>\n<td>-s</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>Limit results</td>\n<td>-l</td>\n<td>number</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"add-extra-sites\">\n<h2>Add Extra Sites</h2>\n<p>To add extra sites, just do these steps:</p>\n<pre>$ mkdir ~/.samplecmd/sites/ -p\n</pre>\n<p>Then create your site file with <cite>.ini</cite> extension and fill required variables.</p>\n<p>This is configuration file of <cite>BashOneLiners</cite> site (HTML):</p>\n<pre><span class=\"k\">[GENERAL]</span>\n<span class=\"c1\"># Enable to be search</span>\n<span class=\"na\">enable</span> <span class=\"o\">=</span> <span class=\"s\">yes</span>\n\n<span class=\"k\">[SITE INFO]</span>\n<span class=\"c1\"># General site info</span>\n<span class=\"na\">site_name</span> <span class=\"o\">=</span> <span class=\"s\">BashOneLiners</span>\n<span class=\"na\">site_url</span> <span class=\"o\">=</span> <span class=\"s\">http://www.bashoneliners.com/</span>\n<span class=\"na\">site_search_url</span> <span class=\"o\">=</span> <span class=\"s\">http://www.bashoneliners.com/oneliners/search/?query={}</span>\n\n<span class=\"k\">[CONTENT INFO]</span>\n<span class=\"c1\"># Site content type (html or json)</span>\n<span class=\"na\">site_content_type</span> <span class=\"o\">=</span> <span class=\"s\">html</span>\n<span class=\"c1\"># How to get content of request (get or post)</span>\n<span class=\"na\">site_content_action</span> <span class=\"o\">=</span> <span class=\"s\">get</span>\n\n<span class=\"k\">[CONTENT PATTERN]</span>\n<span class=\"c1\"># These variables should be \"xpath\" or \"json key\" based on the site returned content</span>\n<span class=\"na\">parent</span> <span class=\"o\">=</span> <span class=\"s\">//div[contains(@class, 'oneliner oneliner-')]</span>\n<span class=\"na\">title</span> <span class=\"o\">=</span> <span class=\"s\">h3[@class='summary']/a</span>\n<span class=\"na\">command</span> <span class=\"o\">=</span> <span class=\"s\">pre[@class='line']/span[@class='oneliner-line']</span>\n<span class=\"na\">description</span> <span class=\"o\">=</span> <span class=\"s\">div[@class='explanation']//p</span>\n</pre>\n<p>This is configuration file of of <cite>CommandLineFu</cite> site (JSON):</p>\n<pre><span class=\"k\">[GENERAL]</span>\n<span class=\"c1\"># Enable to be search</span>\n<span class=\"na\">enable</span> <span class=\"o\">=</span> <span class=\"s\">yes</span>\n\n<span class=\"k\">[SITE INFO]</span>\n<span class=\"c1\"># General site info</span>\n<span class=\"na\">site_name</span> <span class=\"o\">=</span> <span class=\"s\">CommandLineFu</span>\n<span class=\"na\">site_url</span> <span class=\"o\">=</span> <span class=\"s\">http://www.commandlinefu.com/</span>\n<span class=\"na\">site_search_url</span> <span class=\"o\">=</span> <span class=\"s\">http://www.commandlinefu.com/commands/matching/{0}/base64({0})/json</span>\n\n<span class=\"k\">[CONTENT INFO]</span>\n<span class=\"c1\"># Site content type (html or json)</span>\n<span class=\"na\">site_content_type</span> <span class=\"o\">=</span> <span class=\"s\">json</span>\n<span class=\"c1\"># How to get content of request (get or post)</span>\n<span class=\"na\">site_content_action</span> <span class=\"o\">=</span> <span class=\"s\">get</span>\n\n<span class=\"k\">[CONTENT PATTERN]</span>\n<span class=\"c1\"># These variables should be \"xpath\" or \"json key\" based on the site returned content</span>\n<span class=\"c1\"># parent tag could contain \"/\" like: parent/sub_parent</span>\n<span class=\"na\">parent</span> <span class=\"o\">=</span>\n<span class=\"na\">title</span> <span class=\"o\">=</span> <span class=\"s\">summary</span>\n<span class=\"na\">command</span> <span class=\"o\">=</span> <span class=\"s\">command</span>\n<span class=\"na\">description</span> <span class=\"o\">=</span>\n</pre>\n<blockquote>\n<strong>NOTE:</strong> if your sites returns HTML, then fill <cite>CONTENT PATTERN</cite> section with xpath format, otherwise if it returns JSON, then fill this section with JSON key names.</blockquote>\n<p>If you want to call extra function in your url, just put your function name in it like <cite>commandlinefu</cite> configuration file\nand implement your function as a <cite>staticmethod</cite> in <cite>Utils</cite> class.</p>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>If you know a website or a service which provide sample commands, kindly keep me in touch, I will update\nthe source links, or you could create your source link configuation file and send me a pull request.</p>\n</div>\n\n          </div>"}, "last_serial": 3629909, "releases": {"1.0.11": [{"comment_text": "", "digests": {"md5": "792e8d39fb3a306dbf685d86f2092f0b", "sha256": "33ee7a7116f9ddb4ec53f4103e6006d77d8cb3123d7226c9095f06d80ae20d84"}, "downloads": -1, "filename": "samplecmd-1.0.11.tar.gz", "has_sig": false, "md5_digest": "792e8d39fb3a306dbf685d86f2092f0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18562, "upload_time": "2018-02-02T21:07:02", "upload_time_iso_8601": "2018-02-02T21:07:02.136281Z", "url": "https://files.pythonhosted.org/packages/91/04/e768da5bb9cde9230d1cd84c6f44bf11775bbe04fb3e0e3347fc585f590a/samplecmd-1.0.11.tar.gz", "yanked": false}], "1.0.13": [{"comment_text": "", "digests": {"md5": "072a86ddde2a6fb699466f282180fa1c", "sha256": "a849d586966949e231cd6ce8c77e2c19cca583b3b32fccb8514ad66fded5c27e"}, "downloads": -1, "filename": "samplecmd-1.0.13.tar.gz", "has_sig": false, "md5_digest": "072a86ddde2a6fb699466f282180fa1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18588, "upload_time": "2018-02-03T06:16:31", "upload_time_iso_8601": "2018-02-03T06:16:31.776007Z", "url": "https://files.pythonhosted.org/packages/e7/cd/7f156fa7dd9dc24e82bd38c9b03713e1a47ba0c7d84f4e1792a3a9847d3b/samplecmd-1.0.13.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "2fe679f1c87202cbe451aa654468ea43", "sha256": "a9db82882e633ec4f722f159595bea5a379ae9c28e93114a1b4cb1d969bc46fd"}, "downloads": -1, "filename": "samplecmd-1.1.0.tar.gz", "has_sig": false, "md5_digest": "2fe679f1c87202cbe451aa654468ea43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18966, "upload_time": "2018-02-03T12:46:41", "upload_time_iso_8601": "2018-02-03T12:46:41.349635Z", "url": "https://files.pythonhosted.org/packages/c5/76/11e94894cdb7b464cc43b0cd8ef3dc68db647735bbdfa8be1f1fac0065f5/samplecmd-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "e9c59729bed5e6f32284b84cee218f8f", "sha256": "2a0de25f1c3de382030364262a8f4889fb9047deb70964a83898bd281cca4bc3"}, "downloads": -1, "filename": "samplecmd-1.1.1.tar.gz", "has_sig": false, "md5_digest": "e9c59729bed5e6f32284b84cee218f8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18959, "upload_time": "2018-02-03T13:05:36", "upload_time_iso_8601": "2018-02-03T13:05:36.433478Z", "url": "https://files.pythonhosted.org/packages/43/a4/0f0fb8c861773cb9dc192e17f2625d3482c2016ef6ce215ad1b1c426d974/samplecmd-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "892dba4a5876e27c133433c7b38a901a", "sha256": "5a1dc26d32aebd88f4ebffea87b49d6b71781e38bed1b701a94f0c84cc5680b4"}, "downloads": -1, "filename": "samplecmd-1.1.2.tar.gz", "has_sig": false, "md5_digest": "892dba4a5876e27c133433c7b38a901a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18988, "upload_time": "2018-02-04T10:18:49", "upload_time_iso_8601": "2018-02-04T10:18:49.198459Z", "url": "https://files.pythonhosted.org/packages/1c/b1/970c110efa96e5161f2d45bbd64fe79ace0d12f8540813524e569f948d9a/samplecmd-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "66e355f71f790cc081c13c144a588201", "sha256": "a365c5ee75f35e1f106969e2889d229c069c4af37c042cec2c6c307a78aa29cc"}, "downloads": -1, "filename": "samplecmd-1.1.3.tar.gz", "has_sig": false, "md5_digest": "66e355f71f790cc081c13c144a588201", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19118, "upload_time": "2018-03-01T18:14:03", "upload_time_iso_8601": "2018-03-01T18:14:03.204205Z", "url": "https://files.pythonhosted.org/packages/e6/8a/1c2c9072373acc6bd753a2639c25d60a8f8f83d830b6fe18da783f09cfee/samplecmd-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "4e0a6c0bf344f5225b80afe46fd97cfb", "sha256": "da9a40a42b058e2322d3e3908c9d0c2dd0f60b64cd812088ede602bd6a78dd6f"}, "downloads": -1, "filename": "samplecmd-1.1.4.tar.gz", "has_sig": false, "md5_digest": "4e0a6c0bf344f5225b80afe46fd97cfb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19142, "upload_time": "2018-03-01T18:22:46", "upload_time_iso_8601": "2018-03-01T18:22:46.010435Z", "url": "https://files.pythonhosted.org/packages/02/0f/da84f300bf9950169ce80312e3a9145eb02e7c33bf0e17e877fbaaebb83d/samplecmd-1.1.4.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "886dc31b90d172d1174d94bb35c62349", "sha256": "9022509122ec3293936dece55ae57e8ca5b629a9211365cac7b5f71dcf885bbd"}, "downloads": -1, "filename": "samplecmd-1.1.5.tar.gz", "has_sig": false, "md5_digest": "886dc31b90d172d1174d94bb35c62349", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20658, "upload_time": "2018-03-01T18:30:08", "upload_time_iso_8601": "2018-03-01T18:30:08.575692Z", "url": "https://files.pythonhosted.org/packages/74/3c/c53845e99cd091e2e2c6b0e3a67673f7c0d688ba32c825362c93e37bba3d/samplecmd-1.1.5.tar.gz", "yanked": false}], "1.1.6": [{"comment_text": "", "digests": {"md5": "7f47279d5f09b4cdb60def1ffbae60f0", "sha256": "085cc0d2d0045a7768075c3bf14c4d6f37b8696ba82a1c24a0539447d9a188ee"}, "downloads": -1, "filename": "samplecmd-1.1.6.tar.gz", "has_sig": false, "md5_digest": "7f47279d5f09b4cdb60def1ffbae60f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21204, "upload_time": "2018-03-01T18:48:49", "upload_time_iso_8601": "2018-03-01T18:48:49.290575Z", "url": "https://files.pythonhosted.org/packages/13/25/134343e7bb9d893b48e80da0fcca9a3cd26312865a190dbca69110d2bfea/samplecmd-1.1.6.tar.gz", "yanked": false}], "1.1.7": [{"comment_text": "", "digests": {"md5": "e3b1473bfa25bee32b15f8420d936998", "sha256": "03a1c0748c7a0e4a93c26a29041808a3e6392195917d9190c0830a62837355a0"}, "downloads": -1, "filename": "samplecmd-1.1.7.tar.gz", "has_sig": false, "md5_digest": "e3b1473bfa25bee32b15f8420d936998", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21189, "upload_time": "2018-03-01T21:17:34", "upload_time_iso_8601": "2018-03-01T21:17:34.576089Z", "url": "https://files.pythonhosted.org/packages/e4/10/2d275c3b532450bd000573f27d33c07c6f7bf1669037bb0cafa47c29d28c/samplecmd-1.1.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e3b1473bfa25bee32b15f8420d936998", "sha256": "03a1c0748c7a0e4a93c26a29041808a3e6392195917d9190c0830a62837355a0"}, "downloads": -1, "filename": "samplecmd-1.1.7.tar.gz", "has_sig": false, "md5_digest": "e3b1473bfa25bee32b15f8420d936998", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21189, "upload_time": "2018-03-01T21:17:34", "upload_time_iso_8601": "2018-03-01T21:17:34.576089Z", "url": "https://files.pythonhosted.org/packages/e4/10/2d275c3b532450bd000573f27d33c07c6f7bf1669037bb0cafa47c29d28c/samplecmd-1.1.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:56 2020"}