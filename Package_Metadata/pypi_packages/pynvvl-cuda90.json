{"info": {"author": "Shunta Saito", "author_email": "shunta.saito@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "PyNVVL\n======\n[![pypi-pynvvl-cuda80](https://img.shields.io/pypi/v/pynvvl-cuda80.svg)](https://pypi.org/project/pynvvl-cuda80)\n[![pypi-pynvvl-cuda90](https://img.shields.io/pypi/v/pynvvl-cuda90.svg)](https://pypi.org/project/pynvvl-cuda90)\n[![pypi-pynvvl-cuda91](https://img.shields.io/pypi/v/pynvvl-cuda91.svg)](https://pypi.org/project/pynvvl-cuda91)\n[![pypi-pynvvl-cuda92](https://img.shields.io/pypi/v/pynvvl-cuda92.svg)](https://pypi.org/project/pynvvl-cuda92)\n[![GitHub license](https://img.shields.io/github/license/mitmul/pynvvl.svg)](https://github.com/mitmul/pynvvl)\n\nPyNVVL is a thin wrapper of [NVIDIA Video Loader (NVVL)](https://github.com/NVIDIA/nvvl). This package enables you to load videos directoly to GPU memory and access them as [CuPy](https://github.com/cupy/cupy) ndarrays with zero copy. The pre-built binaries of PyNVVL include NVVL itself, so you do not need to install NVVL.\n\n## Requirements\n\n- CUDA 8.0, 9.0, 9.1, or 9.2\n- Python 2.7.6+, 3.4.7+, 3.5.1+, or 3.6.0+\n- [CuPy](https://github.com/cupy/cupy) v4.5.0\n\n## Tested Environment\n\n- Ubuntu 16.04\n- Python 2.7.6+, 3.4.7+, 3.5.1+, and 3.6.0+\n- CUDA 8.0, 9.0, 9.1, and 9.2\n\n## Install the pre-built binary\n\nPlease choose a right package depending on your CUDA version.\n\n```bash\n# [For CUDA 8.0]\npip install pynvvl-cuda80\n\n# [For CUDA 9.0]\npip install pynvvl-cuda90\n\n# [For CUDA 9.1]\npip install pynvvl-cuda91\n\n# [For CUDA 9.2]\npip install pynvvl-cuda92\n```\n\n## Usage\n\n```python\nimport pynvvl\nimport matplotlib.pyplot as plt\n\n# Create NVVLVideoLoader object\nloader = pynvvl.NVVLVideoLoader(device_id=0, log_level='error')\n\n# Show the number of frames in the video\nn_frames = loader.frame_count('examples/sample.mp4')\nprint('Number of frames:', n_frames)\n\n# Load a video and return it as a CuPy array\nvideo = loader.read_sequence(\n    'examples/sample.mp4',\n    horiz_flip=True,\n    scale_height=512,\n    scale_width=512,\n    crop_y=60,\n    crop_height=385,\n    crop_width=512,\n    scale_method='Linear',\n    normalized=True\n)\n\nprint(video.shape)  # => (91, 3, 385, 512): (n_frames, channels, height, width)\nprint(video.dtype)  # => float32\n\n# Get the first frame as numpy array\nframe = video[0].get()\nframe = frame.transpose(1, 2, 0)\n\nplt.imshow(frame)\nplt.savefig('examples/sample.png')\n```\n\n![](https://github.com/mitmul/pynvvl/raw/master/examples/sample.png)\n\nThis video is `flickr-2-6-3-3-5-2-7-6-5626335276_4.mp4` from the Moments-In-Time dataset.\n\nNote that cropping is performed after scaling. In the above example, NVVL performs scaling up from 256 x 256 to 512 x 512 first, then cropping the region [60:60 + 385, 0:512]. See the following section to know more about the transformation options.\n\n## VideoLoader options\n\nPlease specify the GPU device id when you create a `NVVLVideoLoader` object.\nYou can also specify the logging level with a argument `log_level` for the constructor of `NVVLVideoLoader`.\n\n```\nWrapper of NVVL VideoLoader\n\n    Args:\n        device_id (int): Specify the device id used to load a video.\n        log_level (str): Logging level which should be either 'debug',\n            'info', 'warn', 'error', or 'none'.\n            Logs with levels >= log_level is shown. The default is 'warn'.\n```\n\n## Transformation Options\n\n`pynvvl.NVVLVideoLoader.read_sequence` can take some options to specify the color space, the value range, and what transformations you want to perform to the video.\n\n```\nLoads the video from disk and returns it as a CuPy ndarray.\n\n    Args:\n        filename (str): The path to the video.\n        frame (int): The initial frame number of the returned sequence.\n            Default is 0.\n        count (int): The number of frames of the returned sequence.\n            If it is None, whole frames of the video are loaded.\n        channels (int): The number of color channels of the video.\n            Default is 3.\n        scale_height (int): The height of the scaled video.\n            Note that scaling is performed before cropping.\n            If it is 0 no scaling is performed. Default is 0.\n        scale_width (int): The width of the scaled video.\n            Note that scaling is performed before cropping.\n            If it is 0, no scaling is performed. Default is 0.\n        crop_x (int): Location of the crop within the scaled frame.\n            Must be set such that crop_y + height <= original height.\n            Default is 0.\n        crop_y (int): Location of the crop within the scaled frame.\n            Must be set such that crop_x + width <= original height.\n            Default is 0.\n        crop_height (int): The height of cropped region of the video.\n            If it is None, no cropping is performed. Default is None.\n        crop_width (int): The width of cropped region of the video.\n            If it is None, no cropping is performed. Default is None.\n        scale_method (str): Scaling method. It should be either of\n            'Nearest' or 'Lienar'. Default is 'Linear'.\n        horiz_flip (bool): Whether horizontal flipping is performed or not.\n            Default is False.\n        normalized (bool): If it is True, the values of returned video is\n            normalized into [0, 1], otherwise the value range is [0, 255].\n            Default is False.\n        color_space (str): The color space of the values of returned video.\n            It should be either 'RGB' or 'YCbCr'. Default is 'RGB'.\n        chroma_up_method (str): How the chroma channels are upscaled from\n            yuv 4:2:0 to 4:4:4. It should be 'Linear' currently.\n        out (cupy.ndarray): Alternate output array where place the result.\n            It must have the same shape and the dtype as the expected\n            output, and its order must be C-contiguous.\n```\n\n## How to build\n\n### Build wheels using Docker: \n\nRequirements:\n\n- Docker\n- nvidia-docker (v1/v2)\n\n```\nbash docker/build_wheels.sh\n```\n\n### Setup development environment without Docker:\n\nThe `setup.py` script searches for necessary libraries.\n\nRequirements: the following libraries are available in `LIBRARY_PATH`.\n\n- libnvvl.so\n- libavformat.so.57\n- libavfilter.so.6\n- libavcodec.so.57\n- libavutil.so.55\n\nYou can build `libnvvl.so` in the `nvvl` repository. Follow the instructions\nof `nvvl` library. The `build` directory must be in `LIBRARY_PATH`.\n\nOther three libraries are available as packages in Ubuntu 16.04.\nThey are installed under `/usr/lib/x86_64-linux-gnu`, so they must be in `LIBRARY_PATH` as well.\n\n```\npython setup.py develop\npython setup.py bdist_wheel\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mitmul/pynvvl", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "pynvvl-cuda90", "package_url": "https://pypi.org/project/pynvvl-cuda90/", "platform": "", "project_url": "https://pypi.org/project/pynvvl-cuda90/", "project_urls": {"Homepage": "https://github.com/mitmul/pynvvl"}, "release_url": "https://pypi.org/project/pynvvl-cuda90/0.0.3a2/", "requires_dist": ["cupy-cuda90 (>=4.5.0)"], "requires_python": "", "summary": "PyNVVL: A Python wrapper for NVIDIA Video Loader (NVVL) with CuPy", "version": "0.0.3a2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyNVVL</h1>\n<p><a href=\"https://pypi.org/project/pynvvl-cuda80\" rel=\"nofollow\"><img alt=\"pypi-pynvvl-cuda80\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/417e6a942ee22ce2455e69edb2794e375c2a4552/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e76766c2d6375646138302e737667\"></a>\n<a href=\"https://pypi.org/project/pynvvl-cuda90\" rel=\"nofollow\"><img alt=\"pypi-pynvvl-cuda90\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5299cec07bd6e73c990b113554c93f5213c340be/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e76766c2d6375646139302e737667\"></a>\n<a href=\"https://pypi.org/project/pynvvl-cuda91\" rel=\"nofollow\"><img alt=\"pypi-pynvvl-cuda91\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f57166277aa7eea1dff4f9b635589db27b36c90/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e76766c2d6375646139312e737667\"></a>\n<a href=\"https://pypi.org/project/pynvvl-cuda92\" rel=\"nofollow\"><img alt=\"pypi-pynvvl-cuda92\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6d0b9c57cc13a19c13e39cddba52a436a136e5bf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e76766c2d6375646139322e737667\"></a>\n<a href=\"https://github.com/mitmul/pynvvl\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa4de23b1dd68d34e1bbd771562ad70603b87045/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d69746d756c2f70796e76766c2e737667\"></a></p>\n<p>PyNVVL is a thin wrapper of <a href=\"https://github.com/NVIDIA/nvvl\" rel=\"nofollow\">NVIDIA Video Loader (NVVL)</a>. This package enables you to load videos directoly to GPU memory and access them as <a href=\"https://github.com/cupy/cupy\" rel=\"nofollow\">CuPy</a> ndarrays with zero copy. The pre-built binaries of PyNVVL include NVVL itself, so you do not need to install NVVL.</p>\n<h2>Requirements</h2>\n<ul>\n<li>CUDA 8.0, 9.0, 9.1, or 9.2</li>\n<li>Python 2.7.6+, 3.4.7+, 3.5.1+, or 3.6.0+</li>\n<li><a href=\"https://github.com/cupy/cupy\" rel=\"nofollow\">CuPy</a> v4.5.0</li>\n</ul>\n<h2>Tested Environment</h2>\n<ul>\n<li>Ubuntu 16.04</li>\n<li>Python 2.7.6+, 3.4.7+, 3.5.1+, and 3.6.0+</li>\n<li>CUDA 8.0, 9.0, 9.1, and 9.2</li>\n</ul>\n<h2>Install the pre-built binary</h2>\n<p>Please choose a right package depending on your CUDA version.</p>\n<pre><span class=\"c1\"># [For CUDA 8.0]</span>\npip install pynvvl-cuda80\n\n<span class=\"c1\"># [For CUDA 9.0]</span>\npip install pynvvl-cuda90\n\n<span class=\"c1\"># [For CUDA 9.1]</span>\npip install pynvvl-cuda91\n\n<span class=\"c1\"># [For CUDA 9.2]</span>\npip install pynvvl-cuda92\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pynvvl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"c1\"># Create NVVLVideoLoader object</span>\n<span class=\"n\">loader</span> <span class=\"o\">=</span> <span class=\"n\">pynvvl</span><span class=\"o\">.</span><span class=\"n\">NVVLVideoLoader</span><span class=\"p\">(</span><span class=\"n\">device_id</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">log_level</span><span class=\"o\">=</span><span class=\"s1\">'error'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Show the number of frames in the video</span>\n<span class=\"n\">n_frames</span> <span class=\"o\">=</span> <span class=\"n\">loader</span><span class=\"o\">.</span><span class=\"n\">frame_count</span><span class=\"p\">(</span><span class=\"s1\">'examples/sample.mp4'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Number of frames:'</span><span class=\"p\">,</span> <span class=\"n\">n_frames</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Load a video and return it as a CuPy array</span>\n<span class=\"n\">video</span> <span class=\"o\">=</span> <span class=\"n\">loader</span><span class=\"o\">.</span><span class=\"n\">read_sequence</span><span class=\"p\">(</span>\n    <span class=\"s1\">'examples/sample.mp4'</span><span class=\"p\">,</span>\n    <span class=\"n\">horiz_flip</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">scale_height</span><span class=\"o\">=</span><span class=\"mi\">512</span><span class=\"p\">,</span>\n    <span class=\"n\">scale_width</span><span class=\"o\">=</span><span class=\"mi\">512</span><span class=\"p\">,</span>\n    <span class=\"n\">crop_y</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span>\n    <span class=\"n\">crop_height</span><span class=\"o\">=</span><span class=\"mi\">385</span><span class=\"p\">,</span>\n    <span class=\"n\">crop_width</span><span class=\"o\">=</span><span class=\"mi\">512</span><span class=\"p\">,</span>\n    <span class=\"n\">scale_method</span><span class=\"o\">=</span><span class=\"s1\">'Linear'</span><span class=\"p\">,</span>\n    <span class=\"n\">normalized</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>  <span class=\"c1\"># =&gt; (91, 3, 385, 512): (n_frames, channels, height, width)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>  <span class=\"c1\"># =&gt; float32</span>\n\n<span class=\"c1\"># Get the first frame as numpy array</span>\n<span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">video</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">'examples/sample.png'</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/16bd58960e288621e0b33a28f5219f20fb5b534e/68747470733a2f2f6769746875622e636f6d2f6d69746d756c2f70796e76766c2f7261772f6d61737465722f6578616d706c65732f73616d706c652e706e67\"></p>\n<p>This video is <code>flickr-2-6-3-3-5-2-7-6-5626335276_4.mp4</code> from the Moments-In-Time dataset.</p>\n<p>Note that cropping is performed after scaling. In the above example, NVVL performs scaling up from 256 x 256 to 512 x 512 first, then cropping the region [60:60 + 385, 0:512]. See the following section to know more about the transformation options.</p>\n<h2>VideoLoader options</h2>\n<p>Please specify the GPU device id when you create a <code>NVVLVideoLoader</code> object.\nYou can also specify the logging level with a argument <code>log_level</code> for the constructor of <code>NVVLVideoLoader</code>.</p>\n<pre><code>Wrapper of NVVL VideoLoader\n\n    Args:\n        device_id (int): Specify the device id used to load a video.\n        log_level (str): Logging level which should be either 'debug',\n            'info', 'warn', 'error', or 'none'.\n            Logs with levels &gt;= log_level is shown. The default is 'warn'.\n</code></pre>\n<h2>Transformation Options</h2>\n<p><code>pynvvl.NVVLVideoLoader.read_sequence</code> can take some options to specify the color space, the value range, and what transformations you want to perform to the video.</p>\n<pre><code>Loads the video from disk and returns it as a CuPy ndarray.\n\n    Args:\n        filename (str): The path to the video.\n        frame (int): The initial frame number of the returned sequence.\n            Default is 0.\n        count (int): The number of frames of the returned sequence.\n            If it is None, whole frames of the video are loaded.\n        channels (int): The number of color channels of the video.\n            Default is 3.\n        scale_height (int): The height of the scaled video.\n            Note that scaling is performed before cropping.\n            If it is 0 no scaling is performed. Default is 0.\n        scale_width (int): The width of the scaled video.\n            Note that scaling is performed before cropping.\n            If it is 0, no scaling is performed. Default is 0.\n        crop_x (int): Location of the crop within the scaled frame.\n            Must be set such that crop_y + height &lt;= original height.\n            Default is 0.\n        crop_y (int): Location of the crop within the scaled frame.\n            Must be set such that crop_x + width &lt;= original height.\n            Default is 0.\n        crop_height (int): The height of cropped region of the video.\n            If it is None, no cropping is performed. Default is None.\n        crop_width (int): The width of cropped region of the video.\n            If it is None, no cropping is performed. Default is None.\n        scale_method (str): Scaling method. It should be either of\n            'Nearest' or 'Lienar'. Default is 'Linear'.\n        horiz_flip (bool): Whether horizontal flipping is performed or not.\n            Default is False.\n        normalized (bool): If it is True, the values of returned video is\n            normalized into [0, 1], otherwise the value range is [0, 255].\n            Default is False.\n        color_space (str): The color space of the values of returned video.\n            It should be either 'RGB' or 'YCbCr'. Default is 'RGB'.\n        chroma_up_method (str): How the chroma channels are upscaled from\n            yuv 4:2:0 to 4:4:4. It should be 'Linear' currently.\n        out (cupy.ndarray): Alternate output array where place the result.\n            It must have the same shape and the dtype as the expected\n            output, and its order must be C-contiguous.\n</code></pre>\n<h2>How to build</h2>\n<h3>Build wheels using Docker:</h3>\n<p>Requirements:</p>\n<ul>\n<li>Docker</li>\n<li>nvidia-docker (v1/v2)</li>\n</ul>\n<pre><code>bash docker/build_wheels.sh\n</code></pre>\n<h3>Setup development environment without Docker:</h3>\n<p>The <code>setup.py</code> script searches for necessary libraries.</p>\n<p>Requirements: the following libraries are available in <code>LIBRARY_PATH</code>.</p>\n<ul>\n<li>libnvvl.so</li>\n<li>libavformat.so.57</li>\n<li>libavfilter.so.6</li>\n<li>libavcodec.so.57</li>\n<li>libavutil.so.55</li>\n</ul>\n<p>You can build <code>libnvvl.so</code> in the <code>nvvl</code> repository. Follow the instructions\nof <code>nvvl</code> library. The <code>build</code> directory must be in <code>LIBRARY_PATH</code>.</p>\n<p>Other three libraries are available as packages in Ubuntu 16.04.\nThey are installed under <code>/usr/lib/x86_64-linux-gnu</code>, so they must be in <code>LIBRARY_PATH</code> as well.</p>\n<pre><code>python setup.py develop\npython setup.py bdist_wheel\n</code></pre>\n\n          </div>"}, "last_serial": 4785189, "releases": {"0.0.2a1": [{"comment_text": "", "digests": {"md5": "6df4a3b4cedc558f235b6bedda418e22", "sha256": "f36bbe60c2774ca89ff9ea0b800247fffa89782fbd1069d98dfa45ca72329848"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a1-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "6df4a3b4cedc558f235b6bedda418e22", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1514610, "upload_time": "2018-05-05T00:12:11", "upload_time_iso_8601": "2018-05-05T00:12:11.023308Z", "url": "https://files.pythonhosted.org/packages/72/b5/1cca86e116c9a93d61eaf6cc5f6f52ea70bf65bb9e3377b7402d9488864a/pynvvl_cuda90-0.0.2a1-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85a3795e4e3b99275792266377806dc6", "sha256": "770989d94db96c4dd1eef4b72ed54dd717b6321df6060c987a683ca9437c9d49"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a1-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "85a3795e4e3b99275792266377806dc6", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1523586, "upload_time": "2018-05-05T00:12:15", "upload_time_iso_8601": "2018-05-05T00:12:15.310000Z", "url": "https://files.pythonhosted.org/packages/7c/b4/b9aab9f29a36285b073e03853b4169bde9cdce205417d6fc1fe36ad3bdca/pynvvl_cuda90-0.0.2a1-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0de3c180bd9caf58d3b8c93a963943fb", "sha256": "58290474dddad08b8e0a8f9dcf4108e5f1817cabb5d58127d67f7006a43b1c98"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a1-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "0de3c180bd9caf58d3b8c93a963943fb", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1521247, "upload_time": "2018-05-05T00:12:18", "upload_time_iso_8601": "2018-05-05T00:12:18.890914Z", "url": "https://files.pythonhosted.org/packages/63/b8/32328db07c48c65ed0f7f03f9d4288158b329a53d7f10ec0d7a2084f7a47/pynvvl_cuda90-0.0.2a1-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "61bdd4f021c6c6934c4b7a11e137f86c", "sha256": "bd6ee2c7d2b202d543ea8ed31f53bd694189bb7e90bd3246c53906980b4eef64"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "61bdd4f021c6c6934c4b7a11e137f86c", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1523980, "upload_time": "2018-05-05T00:12:22", "upload_time_iso_8601": "2018-05-05T00:12:22.555981Z", "url": "https://files.pythonhosted.org/packages/d9/0c/994ccda427d5bd89a097b404e298467a8ff7b773ef5e6fab614c4df48aca/pynvvl_cuda90-0.0.2a1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.2a2": [{"comment_text": "", "digests": {"md5": "0c8fc27ce36c02606c070a9f01c24408", "sha256": "58f0d3f859fad3ed9a540ef933ffae5eef3a5a6af551a87f0d2f4722457028ae"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a2-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "0c8fc27ce36c02606c070a9f01c24408", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1518001, "upload_time": "2018-05-05T03:13:25", "upload_time_iso_8601": "2018-05-05T03:13:25.846486Z", "url": "https://files.pythonhosted.org/packages/98/61/7d86f59c19af3f9cd8c76abdd619e782ca6cb781538f0ffd1da96425d29d/pynvvl_cuda90-0.0.2a2-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "167c1c01cc123a954be3484fb547af7d", "sha256": "c297afdb622eba85d90c8a477aa57e994f43a0d5b6033fe69815127bd0dd785c"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a2-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "167c1c01cc123a954be3484fb547af7d", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1528282, "upload_time": "2018-05-05T03:13:29", "upload_time_iso_8601": "2018-05-05T03:13:29.699613Z", "url": "https://files.pythonhosted.org/packages/f5/9a/ee8bf7381c89abc5bdc0b3871f255f246fe6d05ccc216253ce753b8b025a/pynvvl_cuda90-0.0.2a2-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c132dc1a2b7196830086ea119c72789", "sha256": "c007bb26c26ba22b8607c39b32e35ad06c77925160690a354726d4074f7d1be5"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a2-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "9c132dc1a2b7196830086ea119c72789", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1526155, "upload_time": "2018-05-05T03:13:33", "upload_time_iso_8601": "2018-05-05T03:13:33.208810Z", "url": "https://files.pythonhosted.org/packages/37/6e/03c20110816eedf9affc3ab77a712ec42643cf8be415cb1b5b3fc73b676c/pynvvl_cuda90-0.0.2a2-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ae71a2a2f7a60345c721fdcceb40924", "sha256": "7e373a4aa1c12baab6701785cd5efd32a55afc66c0c830f966326d902c5f9632"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a2-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "6ae71a2a2f7a60345c721fdcceb40924", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1528145, "upload_time": "2018-05-05T03:13:36", "upload_time_iso_8601": "2018-05-05T03:13:36.648549Z", "url": "https://files.pythonhosted.org/packages/d7/34/cb115dc65efb10ebc0f540526e208f5add9a71df0d76a5b369de9d9ca94d/pynvvl_cuda90-0.0.2a2-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.2a3": [{"comment_text": "", "digests": {"md5": "8e23688275b93eca974d72b299d6b828", "sha256": "b9e5a6f817b0a7e612f0aab1291444eb2f96b6ade1a64e7e3c1ec0556b36cf91"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a3-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "8e23688275b93eca974d72b299d6b828", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1520488, "upload_time": "2018-05-07T10:13:42", "upload_time_iso_8601": "2018-05-07T10:13:42.451959Z", "url": "https://files.pythonhosted.org/packages/69/ff/cf969cdbea345fd733c89acd401986c04357c9e0bff29627f39b595dad46/pynvvl_cuda90-0.0.2a3-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3bc66950ae47f65f381412581d0c4526", "sha256": "3b67b50c782c835c099991b98eb05b8c5a9b904654957ba949b5ededa9cc5c60"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a3-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3bc66950ae47f65f381412581d0c4526", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1533533, "upload_time": "2018-05-07T10:13:45", "upload_time_iso_8601": "2018-05-07T10:13:45.962915Z", "url": "https://files.pythonhosted.org/packages/02/61/92c5c331eabd11447f35f1e804f379070f58ff1007d1b9791fd398b82ad0/pynvvl_cuda90-0.0.2a3-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a514455d548bd19df7c99f8253b1c2a2", "sha256": "12a66ccf891a736b453c645c4a0e8cf3422856bd1732d783a8e78e8f13c15664"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a3-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "a514455d548bd19df7c99f8253b1c2a2", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1531205, "upload_time": "2018-05-07T10:13:49", "upload_time_iso_8601": "2018-05-07T10:13:49.849249Z", "url": "https://files.pythonhosted.org/packages/f2/0e/e2682aaea65482542bcf577dc81e037be4e4f42481c4c473509e1a936c6b/pynvvl_cuda90-0.0.2a3-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b0bffdfcb93f114292640acbf654010", "sha256": "9a3248c4df817b440ac6d0b3ccf4ea28e7ebb9b5c65f518ea33f740a627dab90"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a3-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "5b0bffdfcb93f114292640acbf654010", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1534149, "upload_time": "2018-05-07T10:13:52", "upload_time_iso_8601": "2018-05-07T10:13:52.845271Z", "url": "https://files.pythonhosted.org/packages/3c/09/79bc8992b4e730a082b3d4bfdd841908cdbaf2537e472804b56b07777d29/pynvvl_cuda90-0.0.2a3-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.2a4": [{"comment_text": "", "digests": {"md5": "6849b4fbd8d9f266f7fc3abd722806fe", "sha256": "2d2e406d9c2c4399100d088164b551892c0f0940e1e4fd83bfde1d0afdc23b83"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a4-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "6849b4fbd8d9f266f7fc3abd722806fe", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1520622, "upload_time": "2018-05-15T07:58:24", "upload_time_iso_8601": "2018-05-15T07:58:24.618940Z", "url": "https://files.pythonhosted.org/packages/58/e4/be0f38ba9b2b1491fc83f9d249a0bc23be3d800fcf61429fbe830fa3ac2b/pynvvl_cuda90-0.0.2a4-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07445af449954fb1043b0bdd478eec9d", "sha256": "650557a5a259377ba303a6fe5fe60e3d437d269a454c635ee8da9d1152d640a9"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a4-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "07445af449954fb1043b0bdd478eec9d", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1533607, "upload_time": "2018-05-15T07:58:28", "upload_time_iso_8601": "2018-05-15T07:58:28.890594Z", "url": "https://files.pythonhosted.org/packages/3e/32/78f9d493e481e28713473590faf4d92263848cbb6546546e5caf9b5cdba6/pynvvl_cuda90-0.0.2a4-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e6213a0e106726ae2e5db80e72e5cda", "sha256": "7bb2c00d510169936ba189544b24180f63251950038da80efaa319a96eedfd92"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a4-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "1e6213a0e106726ae2e5db80e72e5cda", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1531199, "upload_time": "2018-05-15T07:58:32", "upload_time_iso_8601": "2018-05-15T07:58:32.514397Z", "url": "https://files.pythonhosted.org/packages/90/ba/c36240f49251300814845a3b53da0dff4a1ca6146aff8c866cd34d35b30a/pynvvl_cuda90-0.0.2a4-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22c83dc2a030296f75ef396fb0c45937", "sha256": "4275059efc17c520a117c555d1ab306e841ced3a07aa0e9e0ab688c6c0a81e88"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a4-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "22c83dc2a030296f75ef396fb0c45937", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1534187, "upload_time": "2018-05-15T07:58:36", "upload_time_iso_8601": "2018-05-15T07:58:36.134956Z", "url": "https://files.pythonhosted.org/packages/ba/c5/2b5812b2a62093f47bd8ca607b5199b17f7ec8aa7b114bba203302b487bd/pynvvl_cuda90-0.0.2a4-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.2a5": [{"comment_text": "", "digests": {"md5": "105ce2ffdb6ed2425bd63a3ce8fd05e4", "sha256": "981bd99c8e4bdfe819f0bddb5719cac512fda06bc0df8ece7019bd2e1431703d"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a5-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "105ce2ffdb6ed2425bd63a3ce8fd05e4", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1530282, "upload_time": "2018-05-18T08:53:07", "upload_time_iso_8601": "2018-05-18T08:53:07.624482Z", "url": "https://files.pythonhosted.org/packages/ee/34/54e3f855d763fd46b466f9f32cf72842619c6618e8b0eede31c8dd1f9502/pynvvl_cuda90-0.0.2a5-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b4a62244e66cb5043c9707c0addf0ca", "sha256": "fa25ab0b8f0c1a1ae50feb7b60242784cdb9c9cc72d9f445c95dac1755e78c46"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a5-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3b4a62244e66cb5043c9707c0addf0ca", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1544972, "upload_time": "2018-05-18T08:53:12", "upload_time_iso_8601": "2018-05-18T08:53:12.143645Z", "url": "https://files.pythonhosted.org/packages/29/7b/ec365f753cbb25dc2485959f5aa79a05cb214980ac006349743ade1a6061/pynvvl_cuda90-0.0.2a5-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8486a9cc53c0ba3c6bf05d1e2c4b44f5", "sha256": "f3f2bc2eb618f479d58e8bd212cc28796cc76756d32f6ee5e6a8ba060673b864"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a5-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "8486a9cc53c0ba3c6bf05d1e2c4b44f5", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1542148, "upload_time": "2018-05-18T08:53:16", "upload_time_iso_8601": "2018-05-18T08:53:16.248156Z", "url": "https://files.pythonhosted.org/packages/60/8c/2b9b3740efc58ae19703a477975de833454b27d634095778f0176aa0104d/pynvvl_cuda90-0.0.2a5-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "25c4f85d09aa4dbb10f0ba2bcb25a4fa", "sha256": "4b039bf1ca60140950ceef560b98b546e591885050f21111a568ab5a01b287a1"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.2a5-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "25c4f85d09aa4dbb10f0ba2bcb25a4fa", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1546566, "upload_time": "2018-05-18T08:53:20", "upload_time_iso_8601": "2018-05-18T08:53:20.196213Z", "url": "https://files.pythonhosted.org/packages/63/68/5714d1af74ce30c7b9dd6c52319e94e547c023699160c01a86572accc147/pynvvl_cuda90-0.0.2a5-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.3a1": [{"comment_text": "", "digests": {"md5": "5c5f9082fbd1328fcf9bff9dc0dd3d72", "sha256": "19509db05029dd8acaf0dc423aef569131817287d8d5a5240acfe5cbac66c3de"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.3a1-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "5c5f9082fbd1328fcf9bff9dc0dd3d72", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 786534, "upload_time": "2018-09-30T16:25:12", "upload_time_iso_8601": "2018-09-30T16:25:12.361447Z", "url": "https://files.pythonhosted.org/packages/46/c0/713d1752fe23fdfdcef0a3de534052c255e5df4b70a5b6ae40d368a0b1b8/pynvvl_cuda90-0.0.3a1-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58cfd71b19ab70ba994c663702aed658", "sha256": "013a3aaafbdf5fd0272c990283b48ddbba4a3dc823ab99246edbed75a8d5e375"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.3a1-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "58cfd71b19ab70ba994c663702aed658", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 801230, "upload_time": "2018-09-30T16:25:14", "upload_time_iso_8601": "2018-09-30T16:25:14.522702Z", "url": "https://files.pythonhosted.org/packages/e2/d4/81098ea322b8e7a8359705b49066fc5812751f64f72aec2e9b4cd978fa34/pynvvl_cuda90-0.0.3a1-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3baff703507e8cbfd4b20b340ad6268", "sha256": "c5d7a68a35042e7e221912e899e2422292e6557b5ed14e173c92f06a21ba95f1"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.3a1-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "f3baff703507e8cbfd4b20b340ad6268", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 798400, "upload_time": "2018-09-30T16:25:16", "upload_time_iso_8601": "2018-09-30T16:25:16.862288Z", "url": "https://files.pythonhosted.org/packages/dc/aa/c5192b868779aa5d4b273bfd6d5568004bc997fbf4a126680de66b46584d/pynvvl_cuda90-0.0.3a1-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e60b7e71c2672f13a20c2e8b761df86", "sha256": "03318bdc706fc4b4d01bcec9b8200ca55cfc5be0943700108b09fec755a3c608"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.3a1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "8e60b7e71c2672f13a20c2e8b761df86", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 802822, "upload_time": "2018-09-30T16:25:18", "upload_time_iso_8601": "2018-09-30T16:25:18.826445Z", "url": "https://files.pythonhosted.org/packages/b2/ee/b5b765233b6e8094f6bd8f9cd4e5a6d492f29f18d7c55854c9a86fa82fa1/pynvvl_cuda90-0.0.3a1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.3a2": [{"comment_text": "", "digests": {"md5": "faaae3d053117dc90e3e752e56a00ac9", "sha256": "1e7e178f2ead1f548def1044bf72df4ee80ba92c4ee01134b62d3547de214907"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.3a2-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "faaae3d053117dc90e3e752e56a00ac9", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 786568, "upload_time": "2018-09-30T17:10:40", "upload_time_iso_8601": "2018-09-30T17:10:40.227918Z", "url": "https://files.pythonhosted.org/packages/d9/4b/92566a5bd51983e8f79d699da1d9e3da17fb268fd39c5acff673ccb0f31e/pynvvl_cuda90-0.0.3a2-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ce908b48910d532a9c3e886badc0180", "sha256": "8fcc03e1304effb08f004ae5eedf73d2ac33fe85b0bfac909079fef0866c2f4d"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.3a2-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "0ce908b48910d532a9c3e886badc0180", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 801264, "upload_time": "2018-09-30T17:10:42", "upload_time_iso_8601": "2018-09-30T17:10:42.429835Z", "url": "https://files.pythonhosted.org/packages/f6/8b/3f01478451590a54f26674f81345a4ff647048ed3944487b31fa56cb95cb/pynvvl_cuda90-0.0.3a2-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f817d6f49bf89c49d0b25a2ecf49923", "sha256": "3726b9730f7e4ab83bb416475013b0e3e83433ba531212acf6acd77ad03491c1"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.3a2-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "2f817d6f49bf89c49d0b25a2ecf49923", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 798434, "upload_time": "2018-09-30T17:10:44", "upload_time_iso_8601": "2018-09-30T17:10:44.864259Z", "url": "https://files.pythonhosted.org/packages/89/cc/1cde4f7d30b4d874c08ff0835515e779e9f14bddae5d5d98bd97142df28a/pynvvl_cuda90-0.0.3a2-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8d26d043efc7473d7e750acfdbd69a2", "sha256": "146f6a49dfc586d66c0fede500407892c25ae275d66e530757be5eceaa6ae3e1"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.3a2-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e8d26d043efc7473d7e750acfdbd69a2", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 802857, "upload_time": "2018-09-30T17:10:47", "upload_time_iso_8601": "2018-09-30T17:10:47.024997Z", "url": "https://files.pythonhosted.org/packages/2e/41/1b50a9ae60420b558d8051e4783f1f3141232763669dcddeb90d9d50ddc3/pynvvl_cuda90-0.0.3a2-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "faaae3d053117dc90e3e752e56a00ac9", "sha256": "1e7e178f2ead1f548def1044bf72df4ee80ba92c4ee01134b62d3547de214907"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.3a2-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "faaae3d053117dc90e3e752e56a00ac9", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 786568, "upload_time": "2018-09-30T17:10:40", "upload_time_iso_8601": "2018-09-30T17:10:40.227918Z", "url": "https://files.pythonhosted.org/packages/d9/4b/92566a5bd51983e8f79d699da1d9e3da17fb268fd39c5acff673ccb0f31e/pynvvl_cuda90-0.0.3a2-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ce908b48910d532a9c3e886badc0180", "sha256": "8fcc03e1304effb08f004ae5eedf73d2ac33fe85b0bfac909079fef0866c2f4d"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.3a2-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "0ce908b48910d532a9c3e886badc0180", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 801264, "upload_time": "2018-09-30T17:10:42", "upload_time_iso_8601": "2018-09-30T17:10:42.429835Z", "url": "https://files.pythonhosted.org/packages/f6/8b/3f01478451590a54f26674f81345a4ff647048ed3944487b31fa56cb95cb/pynvvl_cuda90-0.0.3a2-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f817d6f49bf89c49d0b25a2ecf49923", "sha256": "3726b9730f7e4ab83bb416475013b0e3e83433ba531212acf6acd77ad03491c1"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.3a2-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "2f817d6f49bf89c49d0b25a2ecf49923", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 798434, "upload_time": "2018-09-30T17:10:44", "upload_time_iso_8601": "2018-09-30T17:10:44.864259Z", "url": "https://files.pythonhosted.org/packages/89/cc/1cde4f7d30b4d874c08ff0835515e779e9f14bddae5d5d98bd97142df28a/pynvvl_cuda90-0.0.3a2-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8d26d043efc7473d7e750acfdbd69a2", "sha256": "146f6a49dfc586d66c0fede500407892c25ae275d66e530757be5eceaa6ae3e1"}, "downloads": -1, "filename": "pynvvl_cuda90-0.0.3a2-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e8d26d043efc7473d7e750acfdbd69a2", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 802857, "upload_time": "2018-09-30T17:10:47", "upload_time_iso_8601": "2018-09-30T17:10:47.024997Z", "url": "https://files.pythonhosted.org/packages/2e/41/1b50a9ae60420b558d8051e4783f1f3141232763669dcddeb90d9d50ddc3/pynvvl_cuda90-0.0.3a2-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "timestamp": "Fri May  8 03:00:57 2020"}